import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_159 = relay.var("var_159", dtype = "float64", shape = (14, 5, 11))#candidate|159|(14, 5, 11)|var|float64
uop_160 = relay.asinh(var_159.astype('float64')) # shape=(14, 5, 11)
output = uop_160
output2 = uop_160
func_171 = relay.Function([var_159,], output)
mod['func_171'] = func_171
mod = relay.transform.InferType()(mod)
mutated_mod['func_171'] = func_171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_172 = relay.var("var_172", dtype = "float64", shape = (14, 5, 11))#candidate|172|(14, 5, 11)|var|float64
func_171_call = mutated_mod.get_global_var('func_171')
call_173 = func_171_call(var_172)
output = call_173
func_174 = relay.Function([var_172], output)
mutated_mod['func_174'] = func_174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_454 = relay.var("var_454", dtype = "float64", shape = ())#candidate|454|()|var|float64
const_455 = relay.const([[[7.519912],[-0.806719]],[[0.733191],[-2.744927]],[[-9.557568],[6.125024]],[[-2.463560],[0.440645]],[[4.545802],[-5.298081]],[[1.804373],[6.805938]],[[-1.687659],[2.637068]],[[-4.183144],[-7.344160]],[[4.372829],[4.909989]],[[4.303370],[-1.476995]],[[-5.407614],[-5.158436]],[[3.905338],[6.955719]],[[4.912424],[3.578610]],[[-6.623436],[3.913137]],[[-9.432530],[5.823182]]], dtype = "float64")#candidate|455|(15, 2, 1)|const|float64
bop_456 = relay.divide(var_454.astype('float64'), const_455.astype('float64')) # shape=(15, 2, 1)
output = bop_456
output2 = bop_456
func_473 = relay.Function([var_454,], output)
mod['func_473'] = func_473
mod = relay.transform.InferType()(mod)
mutated_mod['func_473'] = func_473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_474 = relay.var("var_474", dtype = "float64", shape = ())#candidate|474|()|var|float64
func_473_call = mutated_mod.get_global_var('func_473')
call_475 = func_473_call(var_474)
output = call_475
func_476 = relay.Function([var_474], output)
mutated_mod['func_476'] = func_476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1130 = relay.var("var_1130", dtype = "uint16", shape = (3, 11, 15))#candidate|1130|(3, 11, 15)|var|uint16
const_1131 = relay.const([[[1,6,8,4,4,-7,10,10,-9,-2,-3,-6,-7,6,2],[-5,7,-10,5,-1,2,7,-3,-3,10,-7,-6,-5,-3,-8],[-2,10,4,-6,-4,9,4,9,-5,-10,-10,5,-3,-8,1],[1,-8,-5,-9,-5,-10,10,-2,-3,-1,-9,-1,-8,7,1],[1,1,5,6,-9,-8,5,2,6,4,10,10,-10,-6,-2],[2,10,-3,-1,10,9,-8,-5,4,8,9,-1,-9,-7,7],[3,5,7,8,-8,-8,6,3,-8,3,5,6,-2,9,2],[-3,9,8,-7,-2,7,-1,-7,4,-1,1,-2,-4,-2,6],[-10,8,-6,-3,-3,9,6,2,-4,9,7,3,-7,-4,9],[4,10,7,8,-10,-7,-2,-8,-6,-5,10,-5,1,-10,-4],[6,6,-1,3,-5,2,-1,8,-3,4,1,9,-6,9,-9]],[[5,-2,3,-6,-1,-9,-6,9,2,8,9,-9,-5,-3,3],[9,7,-8,3,5,6,10,6,6,3,-5,3,-3,3,5],[7,-3,-5,3,7,-3,3,7,-5,1,-4,10,-2,-6,-8],[10,-4,8,-6,-9,-10,-9,8,-4,6,-8,-2,10,3,9],[-6,7,-2,1,-7,-4,-3,-9,7,-3,-1,-7,-1,-8,-10],[6,-6,8,-7,7,-1,10,-3,4,-4,-5,10,-9,9,-5],[-4,7,-3,7,7,-3,-6,2,-2,1,3,-1,10,-4,-5],[7,10,-9,-10,3,4,-6,9,-10,-2,6,-7,-10,5,3],[5,-3,-4,7,1,-3,-6,-3,-7,-3,-4,-8,-6,-5,2],[-4,7,-1,-8,-9,8,5,-3,8,-1,-10,-2,5,5,-8],[7,-6,-7,-5,7,7,-6,-9,1,8,10,9,6,-7,-2]],[[-10,9,1,-6,3,2,9,2,-8,7,7,6,7,-7,-3],[-1,8,-2,6,-9,1,10,-1,10,-7,7,-4,7,-5,6],[-5,-4,7,-4,-3,-1,-4,6,5,-5,3,-6,5,6,10],[-1,-1,8,10,-10,-2,-9,3,-2,-9,1,-8,-9,-10,4],[-9,5,-9,-7,-2,4,-7,2,6,8,-10,-9,8,3,3],[10,-4,3,7,-4,6,-4,-1,-2,-10,-6,1,-1,3,9],[-3,9,3,3,-1,-8,7,9,10,-6,-10,-3,8,-2,-9],[-7,9,10,-10,-3,-1,10,-4,-5,8,5,4,3,-1,10],[-3,2,7,-5,6,9,-8,3,-8,4,-10,8,-6,-5,-3],[7,-6,-7,3,-9,9,-8,9,-8,-2,6,1,7,2,-4],[-6,2,-2,-4,-2,-5,5,7,7,-2,8,-10,-2,8,-8]]], dtype = "uint16")#candidate|1131|(3, 11, 15)|const|uint16
bop_1132 = relay.greater(var_1130.astype('bool'), relay.reshape(const_1131.astype('bool'), relay.shape_of(var_1130))) # shape=(3, 11, 15)
output = relay.Tuple([bop_1132,])
output2 = relay.Tuple([bop_1132,])
func_1142 = relay.Function([var_1130,], output)
mod['func_1142'] = func_1142
mod = relay.transform.InferType()(mod)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1143 = relay.var("var_1143", dtype = "uint16", shape = (3, 11, 15))#candidate|1143|(3, 11, 15)|var|uint16
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1144 = func_1142_call(var_1143)
output = call_1144
func_1145 = relay.Function([var_1143], output)
mutated_mod['func_1145'] = func_1145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1275 = relay.var("var_1275", dtype = "int16", shape = (13, 5, 10))#candidate|1275|(13, 5, 10)|var|int16
var_1276 = relay.var("var_1276", dtype = "int16", shape = (13, 5, 10))#candidate|1276|(13, 5, 10)|var|int16
bop_1277 = relay.less_equal(var_1275.astype('bool'), relay.reshape(var_1276.astype('bool'), relay.shape_of(var_1275))) # shape=(13, 5, 10)
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
var_1287 = relay.var("var_1287", dtype = "float64", shape = (77, 10))#candidate|1287|(77, 10)|var|float64
call_1286 = func_171_call(relay.reshape(var_1287.astype('float64'), [14, 5, 11]))
call_1288 = func_171_call(relay.reshape(var_1287.astype('float64'), [14, 5, 11]))
func_473_call = mod.get_global_var('func_473')
func_476_call = mutated_mod.get_global_var('func_476')
const_1315 = relay.const(-7.252081, dtype = "float64")#candidate|1315|()|const|float64
call_1314 = func_473_call(relay.reshape(const_1315.astype('float64'), []))
call_1316 = func_473_call(relay.reshape(const_1315.astype('float64'), []))
uop_1323 = relay.atanh(var_1275.astype('float32')) # shape=(13, 5, 10)
var_1327 = relay.var("var_1327", dtype = "float32", shape = (13, 5, 10))#candidate|1327|(13, 5, 10)|var|float32
bop_1328 = relay.floor_mod(uop_1323.astype('float64'), relay.reshape(var_1327.astype('float64'), relay.shape_of(uop_1323))) # shape=(13, 5, 10)
uop_1332 = relay.sqrt(uop_1323.astype('float64')) # shape=(13, 5, 10)
func_1142_call = mod.get_global_var('func_1142')
func_1145_call = mutated_mod.get_global_var('func_1145')
var_1342 = relay.var("var_1342", dtype = "uint16", shape = (495,))#candidate|1342|(495,)|var|uint16
call_1341 = relay.TupleGetItem(func_1142_call(relay.reshape(var_1342.astype('uint16'), [3, 11, 15])), 0)
call_1343 = relay.TupleGetItem(func_1145_call(relay.reshape(var_1342.astype('uint16'), [3, 11, 15])), 0)
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
call_1344 = func_171_call(relay.reshape(var_1287.astype('float64'), [14, 5, 11]))
call_1345 = func_171_call(relay.reshape(var_1287.astype('float64'), [14, 5, 11]))
bop_1361 = relay.less(uop_1332.astype('bool'), relay.reshape(var_1327.astype('bool'), relay.shape_of(uop_1332))) # shape=(13, 5, 10)
func_1142_call = mod.get_global_var('func_1142')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_1374 = relay.TupleGetItem(func_1142_call(relay.reshape(call_1341.astype('uint16'), [3, 11, 15])), 0)
call_1375 = relay.TupleGetItem(func_1145_call(relay.reshape(call_1341.astype('uint16'), [3, 11, 15])), 0)
bop_1377 = relay.greater(var_1287.astype('bool'), relay.reshape(call_1344.astype('bool'), relay.shape_of(var_1287))) # shape=(77, 10)
bop_1380 = relay.greater(var_1287.astype('bool'), relay.reshape(call_1345.astype('bool'), relay.shape_of(var_1287))) # shape=(77, 10)
func_1142_call = mod.get_global_var('func_1142')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_1395 = relay.TupleGetItem(func_1142_call(relay.reshape(call_1341.astype('uint16'), [3, 11, 15])), 0)
call_1396 = relay.TupleGetItem(func_1145_call(relay.reshape(call_1341.astype('uint16'), [3, 11, 15])), 0)
func_473_call = mod.get_global_var('func_473')
func_476_call = mutated_mod.get_global_var('func_476')
call_1408 = func_473_call(relay.reshape(const_1315.astype('float64'), []))
call_1409 = func_473_call(relay.reshape(const_1315.astype('float64'), []))
bop_1410 = relay.not_equal(var_1275.astype('bool'), const_1315.astype('bool')) # shape=(13, 5, 10)
func_1142_call = mod.get_global_var('func_1142')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_1413 = relay.TupleGetItem(func_1142_call(relay.reshape(call_1341.astype('uint16'), [3, 11, 15])), 0)
call_1414 = relay.TupleGetItem(func_1145_call(relay.reshape(call_1341.astype('uint16'), [3, 11, 15])), 0)
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
call_1426 = func_171_call(relay.reshape(call_1344.astype('float64'), [14, 5, 11]))
call_1427 = func_171_call(relay.reshape(call_1344.astype('float64'), [14, 5, 11]))
output = relay.Tuple([bop_1277,call_1286,call_1314,bop_1328,call_1341,var_1342,bop_1361,call_1374,bop_1377,call_1395,call_1408,bop_1410,call_1413,call_1426,])
output2 = relay.Tuple([bop_1277,call_1288,call_1316,bop_1328,call_1343,var_1342,bop_1361,call_1375,bop_1380,call_1396,call_1409,bop_1410,call_1414,call_1427,])
func_1430 = relay.Function([var_1275,var_1276,var_1287,var_1327,var_1342,], output)
mod['func_1430'] = func_1430
mod = relay.transform.InferType()(mod)
var_1431 = relay.var("var_1431", dtype = "int16", shape = (13, 5, 10))#candidate|1431|(13, 5, 10)|var|int16
var_1432 = relay.var("var_1432", dtype = "int16", shape = (13, 5, 10))#candidate|1432|(13, 5, 10)|var|int16
var_1433 = relay.var("var_1433", dtype = "float64", shape = (77, 10))#candidate|1433|(77, 10)|var|float64
var_1434 = relay.var("var_1434", dtype = "float32", shape = (13, 5, 10))#candidate|1434|(13, 5, 10)|var|float32
var_1435 = relay.var("var_1435", dtype = "uint16", shape = (495,))#candidate|1435|(495,)|var|uint16
output = func_1430(var_1431,var_1432,var_1433,var_1434,var_1435,)
func_1436 = relay.Function([var_1431,var_1432,var_1433,var_1434,var_1435,], output)
mutated_mod['func_1436'] = func_1436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1565 = relay.var("var_1565", dtype = "uint16", shape = (3, 16, 15))#candidate|1565|(3, 16, 15)|var|uint16
var_1566 = relay.var("var_1566", dtype = "uint16", shape = (3, 16, 15))#candidate|1566|(3, 16, 15)|var|uint16
bop_1567 = relay.bitwise_and(var_1565.astype('uint16'), relay.reshape(var_1566.astype('uint16'), relay.shape_of(var_1565))) # shape=(3, 16, 15)
output = relay.Tuple([bop_1567,])
output2 = relay.Tuple([bop_1567,])
func_1570 = relay.Function([var_1565,var_1566,], output)
mod['func_1570'] = func_1570
mod = relay.transform.InferType()(mod)
mutated_mod['func_1570'] = func_1570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1570_call = mutated_mod.get_global_var('func_1570')
var_1572 = relay.var("var_1572", dtype = "uint16", shape = (3, 16, 15))#candidate|1572|(3, 16, 15)|var|uint16
var_1573 = relay.var("var_1573", dtype = "uint16", shape = (3, 16, 15))#candidate|1573|(3, 16, 15)|var|uint16
call_1571 = func_1570_call(var_1572,var_1573,)
output = call_1571
func_1574 = relay.Function([var_1572,var_1573,], output)
mutated_mod['func_1574'] = func_1574
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1589 = relay.const([[[-4.923778,2.305865,-7.358738,-3.911331,-2.031898,-2.798804,-9.959474,-5.063459,3.774489,-3.028303],[-5.933847,-0.218993,1.065729,9.764907,-4.332352,-8.593607,4.137090,-7.951371,-6.579822,1.373380],[5.973412,-9.155046,4.288014,-9.987229,6.842787,-6.485775,6.043430,-6.691161,-4.747782,-9.012409],[-0.316359,9.845681,-6.543626,-7.735021,-4.886358,-8.194173,9.373409,9.575254,3.781904,7.609904],[0.347084,4.688538,-3.437557,5.900439,3.104678,2.666109,-6.762359,-0.908764,-2.778215,-3.619189],[-4.636256,-5.255711,3.080080,-3.954417,5.998219,4.123371,-8.886753,5.816577,-2.030354,4.921567],[-9.861961,-5.463616,5.162934,-9.097381,5.537814,6.288695,1.522288,4.553874,0.271932,7.885467],[1.171975,3.707282,6.466411,-2.859788,-4.815656,-9.693213,-8.272243,6.535402,0.932906,3.382352],[-2.669717,-0.033879,-6.905754,-3.048030,5.515359,0.494182,6.816071,-3.959242,6.189053,-8.944404],[-5.476947,0.678698,1.074574,5.077191,-8.767946,9.875320,4.565312,-1.539331,1.866816,7.266458],[-2.822632,6.642737,-8.335153,4.979733,-1.038196,8.045609,-0.938809,2.917607,3.741126,-1.014236],[1.124379,6.270039,0.529573,0.833021,-8.914076,8.629518,2.798304,-4.929402,3.457314,1.120275],[-4.734188,-6.436023,6.976887,-8.475201,-6.470194,-8.939395,3.489523,-4.949252,3.879368,7.867126],[7.961251,3.829348,-8.330018,-7.202633,1.975651,2.058298,-2.836519,-4.823717,-0.026923,-5.111138],[0.067455,-1.722092,-1.137848,1.973284,-2.648389,-0.190213,9.170159,-4.572290,9.760038,4.515786],[4.440103,-8.529308,1.031413,3.442971,-1.365927,-3.052527,2.056380,-0.583558,-4.702664,1.059579]],[[-1.156164,-3.652128,9.471778,3.019507,5.366522,2.640981,-8.980687,-4.250392,-7.304417,6.223330],[6.760966,-5.148944,-7.137402,9.044088,-1.332398,-7.550249,-5.259137,9.528635,9.937452,-2.572075],[8.285445,4.300311,-8.861527,7.564692,-6.633132,8.484194,3.883982,-6.243613,-9.052853,-5.135531],[-6.590232,1.752262,4.967463,7.516024,-8.838126,5.621175,4.167717,9.009113,-6.379705,0.821730],[5.877250,-2.501774,-6.658683,-5.375428,-9.611374,-0.988236,6.994556,0.072654,-3.660677,-9.986876],[7.449181,-2.550181,-7.299473,-8.304421,0.805097,7.243879,-3.204178,0.563125,-8.490137,6.403429],[-8.055978,-1.990774,0.923755,-4.599919,-7.675889,-1.933395,-4.015689,-7.567429,-0.623900,8.550016],[-4.413753,-5.710159,-8.314918,-9.333053,-3.335309,-1.129828,5.753257,-7.713770,-3.044659,-6.738948],[3.857018,-7.771924,3.699759,8.945693,3.300178,2.472836,4.416936,-1.506041,3.472857,2.321168],[-3.354158,-1.786624,-4.150625,7.118375,3.216680,4.791232,-1.687894,-1.627367,-5.450627,-6.280231],[-5.117186,-4.583412,3.023559,-3.460104,1.127297,-0.162650,6.055858,1.656330,-7.456907,-4.310900],[-4.030774,-3.087351,-2.836998,-0.533007,-0.894766,-0.392074,4.131242,8.999040,-7.831225,3.269060],[2.096334,3.543172,7.839596,-8.231362,9.167372,5.306013,-7.530674,1.638363,6.180346,5.537527],[-0.849431,-5.724955,-8.166666,-3.206656,2.086319,-5.609443,-7.594995,1.884272,-4.547507,8.163275],[1.779354,1.672646,-5.481125,-6.642791,2.650107,-5.393602,6.354234,1.481429,-6.153475,-6.807088],[8.782226,-3.557668,2.669948,0.679061,6.967376,9.307953,-1.881881,-2.054679,6.833578,-7.576034]],[[-2.153211,-7.581216,5.137000,-4.912176,-3.544867,-2.315431,5.714491,5.150524,-2.100400,5.248888],[6.328359,-0.529217,2.979647,-9.832900,7.102540,6.375500,0.864467,-4.081699,3.827967,-7.822345],[8.291395,-1.204334,4.979398,8.028452,-1.753882,5.783761,-2.180679,9.049757,-3.037524,-1.742702],[-4.621179,-3.597667,-2.751397,0.922748,2.015158,4.577049,-6.813152,5.644156,6.975946,2.827038],[7.914211,1.233863,8.486629,-7.267006,-8.862806,0.919014,-3.181788,6.665835,-9.548458,3.033572],[-3.622793,3.914961,-9.747188,9.026135,4.419196,0.650098,0.910406,-1.876014,-2.448177,1.575138],[-5.367722,8.693521,-0.403960,0.369452,4.127499,-6.818614,5.936850,-3.181114,-6.609577,2.385999],[2.527643,5.692266,7.795124,4.928784,-3.583098,-7.970465,4.288501,1.360678,-4.881962,3.582062],[3.874017,-3.859168,3.713211,-1.589910,-8.399467,2.709096,8.479801,-6.485861,4.581175,-0.217414],[-4.057462,-9.155098,-0.401546,9.611531,-6.955450,0.019131,-5.625995,-8.173479,-9.174825,-4.256396],[-5.130744,-4.280710,-0.854266,-7.018379,-0.122110,2.135114,1.244146,2.844038,5.320742,7.238007],[2.244596,-1.542436,-4.690407,6.976434,3.702887,7.084318,9.006437,2.522419,-7.180697,6.779384],[-1.042407,-1.660666,-9.284124,-4.402758,-4.013902,0.129408,-2.499636,-1.547534,-5.993502,2.108491],[0.074799,8.966260,6.074425,-5.301003,-6.264972,-8.276935,-3.617174,9.005184,-3.513654,-3.466188],[5.641270,-0.920552,6.981761,-9.051680,-7.348226,-1.093206,-4.022407,4.836051,-5.660563,3.246009],[6.996321,-0.024821,-3.318751,7.740214,6.398728,-7.492389,6.189611,-4.551613,3.394623,2.687846]],[[-3.594549,3.231143,1.450436,-0.267304,-0.559366,1.929284,-1.968683,0.594447,3.362175,6.079948],[-6.808470,4.075616,3.942309,2.289010,-6.017099,-1.478371,-5.246678,3.056332,-0.703064,1.830758],[4.407048,9.552818,-8.987022,2.901841,3.422897,-3.753175,-1.375355,8.558274,9.321743,-9.863121],[0.448502,2.500268,-4.868533,-2.585417,-4.569689,7.770228,-4.013189,9.050509,0.376531,-0.843716],[-8.352786,-6.385603,-0.984894,-7.811308,-8.741999,5.392771,5.846678,5.722281,4.984590,3.384397],[-6.223720,4.441135,2.798969,0.883807,0.371773,9.388062,0.541439,-8.048460,9.701975,8.739116],[7.245450,-8.276267,9.726075,-8.915820,2.709634,9.689694,-7.900816,-7.548762,9.736337,-5.097566],[6.493098,-9.092182,-0.391931,-3.590096,8.158355,0.347124,-9.557577,-7.868755,-7.232901,-4.179711],[-3.106681,6.516889,-4.705955,-6.827371,9.124282,8.576582,-1.171685,2.452992,-1.131599,-6.660882],[-9.429534,7.165161,3.555418,-1.482955,-5.544585,2.553142,-2.087250,-6.674908,-1.491807,6.514624],[9.589234,-0.190326,-9.247523,-8.569199,7.010078,2.444639,9.385179,-3.020970,-6.424054,-0.397570],[7.515814,9.982847,-7.576620,5.466253,-5.263772,-9.184524,6.814913,9.665304,2.083431,-1.543130],[-7.396370,-4.192053,-7.374594,5.961334,9.235177,-7.978172,4.079967,5.085836,9.679733,0.092244],[6.785888,7.349599,-5.262470,-8.356861,8.309242,8.607395,-9.343593,9.524881,-3.403948,1.906102],[-4.065624,0.299595,3.138164,4.317346,9.895086,-7.600151,-7.925890,0.687633,-2.771901,-9.749032],[-3.608999,-3.957991,2.339294,-4.013681,-2.182166,-7.259557,0.314790,-3.592053,-6.864971,6.684708]],[[-4.201730,-6.223210,0.784239,-5.228420,1.883329,8.236406,-2.748517,1.573424,1.866667,1.122594],[9.423152,-7.489077,5.754898,-1.316647,-5.886075,2.841917,2.354733,-2.584857,0.040424,7.913830],[1.720522,5.104743,-2.194523,-9.052631,-9.349541,7.644123,9.142722,-6.876120,-1.284918,-9.609968],[-1.561692,-9.305304,4.403482,-0.848255,6.533633,2.900618,2.592224,-5.452290,5.895262,8.097605],[-7.313072,-0.095924,7.227154,2.144622,8.155883,-6.171322,6.837685,1.932511,4.517346,-0.127242],[3.948800,-0.429419,-8.914384,-2.341365,9.739031,2.858601,-8.244108,6.321382,-2.014537,-4.438384],[-4.620610,6.295135,0.852290,-5.173988,-6.104794,2.730361,-9.442503,-9.617942,-4.990688,8.529121],[8.932055,8.075622,-1.605529,0.556984,2.402238,-3.790362,-0.311390,-6.410303,-2.692387,9.562669],[9.602111,0.115823,-5.398293,-6.118488,-4.876189,-3.888607,-8.302587,-0.496586,-3.751319,2.879412],[6.725574,9.861718,5.628968,3.790264,-8.534074,-4.631255,2.159927,3.769634,-7.394516,-7.262570],[9.268808,-9.390999,-6.784936,-8.024321,-2.110034,9.758524,3.063582,0.614702,-8.367949,8.163480],[7.026885,-9.359711,8.834286,-8.126994,2.681961,-2.215796,6.178965,-2.700077,5.372809,-5.463744],[-8.153183,4.355656,-3.227929,-4.752442,9.091934,9.974607,3.466130,1.263430,-0.648977,-8.446364],[-6.565816,-3.507842,3.355763,-7.913302,-8.822948,-0.959500,-7.078567,-0.046379,0.281705,6.974387],[-0.499761,1.900175,-1.756611,-6.919477,5.232691,-7.888216,-7.976981,9.886541,2.587813,-6.784275],[2.847682,-0.721910,8.078045,-8.748564,6.710225,4.059465,0.072549,5.004570,-3.412429,-7.074021]],[[1.667428,3.258554,6.409531,0.522015,-4.571544,-0.168399,3.594820,9.590077,-1.134911,0.264261],[0.969062,8.655949,4.308323,-3.914229,2.041372,7.968180,6.999199,-1.902325,-3.756981,3.267409],[1.049322,-6.863320,-4.896313,4.915790,8.614639,-8.519747,-4.706776,7.314851,8.973374,9.856690],[-4.141888,0.408680,1.895029,0.419473,6.841448,3.358851,-8.216974,5.501058,6.114596,0.380181],[0.725934,-8.112594,-3.844751,-9.844482,9.157768,-2.874025,-2.139130,-8.970803,1.909632,7.356980],[-7.287100,1.679478,-2.994649,-0.279193,-2.033681,6.982875,0.305188,1.462803,7.880725,9.183007],[5.345882,2.952338,7.821006,9.731007,5.441554,-1.883953,4.517548,-8.478264,-8.539815,-5.765271],[8.965175,0.921749,0.565884,-2.009390,-7.928451,1.211916,3.153213,1.741990,-9.451770,6.308553],[-8.190001,-3.875595,5.342268,3.967418,9.908135,-8.936922,8.913440,6.119698,-4.663698,-4.900655],[-1.610571,-2.746822,-4.848330,-3.363602,9.147747,-9.194739,1.504102,9.679472,7.168637,5.626338],[-7.378434,2.128814,2.849731,-5.010531,-6.738543,-8.207099,4.749785,-5.330339,-8.141078,-7.012211],[-4.714801,7.315471,8.899725,3.192126,-6.707801,3.888759,-7.882488,-1.730789,-8.703608,-6.925034],[8.364405,8.077416,3.360827,-8.982160,-5.126021,9.222953,2.005294,0.951735,-7.764049,-8.409265],[0.858479,4.642455,-6.504259,1.324333,0.760014,-6.600024,-8.066333,9.539102,7.024154,4.440697],[-9.647374,9.343312,-0.672590,7.274960,9.108416,9.569146,9.389354,-2.694765,-8.457799,-7.425700],[7.796682,6.983922,-3.723161,-1.353910,-9.246212,-0.962888,-1.226447,9.777120,-7.346789,2.314860]],[[-3.466006,-8.649837,-9.135000,1.993654,-9.648237,-2.941922,-5.556414,1.532355,-9.961356,2.845512],[4.007684,6.421190,8.126200,-9.863103,9.234135,9.256640,-3.556302,-4.062595,-7.768566,-8.887473],[6.164973,6.490653,-8.669746,9.453526,-9.733390,1.304038,-9.504732,7.404552,5.084675,2.209794],[-6.177840,-0.751281,-4.418642,4.583152,9.295060,4.061522,-0.317501,-8.363126,2.600373,7.051190],[-3.357583,0.589207,0.590942,-4.106425,1.642554,-5.488957,-0.792857,-7.643301,4.577071,-1.228927],[2.297305,2.075969,-0.323622,-1.243848,6.201057,4.129163,6.894657,-9.341044,6.942141,9.938327],[-8.242375,-0.221561,9.609470,7.256322,-5.696137,3.254884,9.915953,5.516126,-0.702886,8.430272],[6.561336,-3.187238,-5.077834,-9.129594,7.683367,-3.495748,6.384996,3.539341,7.368505,0.199278],[-4.071547,-6.003804,4.266997,3.947164,3.575489,-0.126682,4.711980,1.234909,1.640624,3.018709],[-9.591029,5.742877,3.665288,-6.098144,0.225930,-2.745152,-7.098697,-0.582304,6.281814,9.096252],[-5.562655,0.757099,-7.649885,2.143681,-8.219640,2.725111,-9.625936,-9.127458,9.398392,6.680823],[-5.553831,-9.655009,-3.429479,1.466534,-1.671539,-7.562834,-1.731384,-7.811394,2.693944,-7.836612],[-0.470557,-0.260231,-1.237518,-2.464419,9.849377,3.333389,-5.754418,-5.869652,-3.518298,-6.283044],[-5.764555,9.936556,-3.430759,-5.666168,-8.472216,-5.887134,-3.036925,7.963123,5.954561,-2.767766],[0.341015,0.782401,9.963716,-0.325244,9.746677,-1.215033,-4.470863,-3.310720,5.466407,-7.312724],[3.637468,-7.407541,8.805523,7.551720,-8.159922,7.741887,7.238760,7.717567,-7.162998,-7.339235]],[[-8.728822,9.172401,-5.232665,6.864533,-3.733474,5.886997,-8.160761,1.504201,-2.469057,9.053166],[-6.713072,-1.161910,5.232691,-8.482586,-4.378715,3.575103,0.252639,5.872560,-1.056869,2.709174],[-8.016032,-4.317146,0.514967,-1.279669,-7.210309,-5.879653,-1.780634,-9.926283,-3.080442,2.022397],[7.665717,4.697773,9.565809,8.427727,1.033464,1.117836,4.576590,9.680531,9.876918,-3.063234],[5.659834,4.067610,-0.342903,6.470282,-1.563935,5.008869,1.168119,1.342360,5.001509,-2.203905],[5.649528,-7.733380,9.639343,8.363233,1.068553,3.569614,-8.423178,-0.530484,-4.734975,0.893191],[-0.090386,1.148433,6.844582,-8.831698,3.945202,-2.927022,-0.033644,5.249511,-7.985359,5.951504],[8.807593,-2.944997,1.688652,-1.011095,-4.982688,-3.213871,-5.029668,-6.431879,-9.350784,-3.751004],[0.413076,0.205731,2.624208,5.104030,2.079863,5.764135,0.322065,6.314191,-7.447971,0.104073],[2.501683,5.243476,0.824513,-0.128655,-1.464356,5.161121,0.422073,-4.524584,7.954360,-4.951569],[-3.987303,3.343591,9.597769,-4.438582,-5.698069,-4.394276,2.108598,3.512423,4.350320,7.978370],[-4.605482,9.985815,5.409704,-2.505836,2.380212,7.793946,-8.113363,-3.628365,9.776930,2.785075],[-5.328447,-4.774591,4.986396,-5.849653,5.669273,1.407943,-6.434435,6.343019,-6.281743,-4.684049],[-6.449744,8.650617,6.998883,-2.690885,-0.335449,-4.038706,7.017610,-1.303937,2.738590,9.499849],[-4.287562,-9.654216,4.505529,-8.441175,-8.373074,5.153372,1.483886,4.063203,-1.243242,7.010286],[-2.943469,7.684682,-9.656790,-4.465565,-8.555720,-8.860559,-9.860434,8.473431,-5.740885,9.528380]],[[5.028254,9.877735,4.396228,9.925619,-4.195454,-3.579927,-1.265184,-2.441842,-2.765234,-4.691842],[-6.191850,6.948246,-2.406858,-3.667975,4.721598,7.441460,8.645866,2.361054,8.452335,-1.794220],[4.500834,-7.897316,7.052348,2.399063,-1.898468,-2.858343,-6.998147,7.385693,3.847196,-9.186949],[-0.903546,1.381917,-5.009789,-6.944914,5.740406,-0.881221,-9.781133,-2.780360,8.513234,9.029749],[-6.875399,5.992735,9.331774,0.824423,-8.624873,9.832382,3.083499,-7.711734,8.017619,2.480667],[-2.109218,-2.055630,2.592404,-5.972390,-1.061783,-5.302180,4.214227,3.167799,-2.081607,2.365798],[-0.580486,8.309044,1.142348,-1.444566,7.499232,7.756735,6.171885,-3.581524,7.140020,8.977387],[-4.251380,-9.836778,3.182176,-5.993691,-7.692226,9.035793,2.289391,-2.907210,-2.888635,2.434231],[-7.117764,3.445023,-5.307569,-4.226169,-8.665642,1.429709,5.485026,5.313323,-9.833912,6.376317],[7.604037,4.193432,8.310339,-5.691081,-0.774134,5.223961,-7.596711,-3.630776,-1.804931,-8.653720],[3.640865,9.267031,8.207347,9.427908,4.981587,-2.580439,9.371161,9.481186,1.470785,3.222665],[1.742006,8.329632,0.672567,6.529352,-7.385912,2.456014,6.838809,9.800859,3.886925,-8.683216],[2.479116,5.952380,6.171818,1.342808,-7.099743,-8.122447,-0.449283,-7.748346,-3.274160,4.504326],[2.876376,-7.859174,-9.405831,-3.916815,-2.013779,-0.250824,8.789549,5.587757,-6.130913,-4.124831],[8.746526,-5.881003,-7.362474,2.512782,-0.364826,5.352193,8.759281,3.753492,0.826309,5.737567],[-1.578333,9.126118,-8.561268,-3.062081,-9.694159,5.584626,-3.709528,8.018959,-2.155125,4.778729]]], dtype = "float32")#candidate|1589|(9, 16, 10)|const|float32
const_1590 = relay.const([[[7.426400,-8.652132,-6.626227,-1.001114,3.159327,5.238476,-2.405947,0.053573,-7.334821,0.374466],[5.656839,-4.320543,-3.679642,-7.765186,0.345580,0.688584,-6.397676,6.666129,6.742150,8.476478],[7.946168,-1.063221,-3.226551,-2.971136,3.387638,-0.272572,2.016649,4.203871,-5.331519,5.812589],[3.883165,-3.236852,-6.979546,2.019828,0.993200,1.747001,0.493423,-1.249531,0.079937,6.358084],[3.288911,-7.765150,-2.792960,-2.122682,2.161219,-6.498482,-3.785566,-1.568032,9.937227,8.880912],[-9.079599,6.669331,-0.671878,4.321744,-5.231535,-7.795879,7.383501,9.536034,-9.239288,-2.286184],[0.599569,-8.356588,4.906007,8.812443,-3.211854,8.834113,5.597437,5.349631,-5.016953,9.566811],[3.951676,-2.738572,-4.632171,-2.843296,-0.627647,-0.387179,9.635767,6.059988,-8.959738,8.066070],[3.927267,1.893697,8.690137,-4.427264,-2.698610,3.452290,6.807276,-7.662649,5.600996,-4.247484],[7.699205,5.668635,-3.952672,3.020054,4.597127,3.608327,8.421343,0.543183,1.088527,-2.715305],[-5.000282,4.200151,-2.696730,7.538279,-5.121036,9.788068,4.526453,0.105925,4.368868,-5.542651],[0.608251,-2.479349,-0.818075,-5.400032,0.196749,3.775183,-0.050068,-8.595323,-8.229965,-7.032852],[5.647336,-3.891611,-5.723711,-6.403709,-8.287146,8.056250,2.848182,-2.483429,9.214667,7.357645],[-0.793277,-8.171448,-3.646550,4.107366,4.813600,9.792125,5.235252,3.393252,5.619504,1.740787],[-0.145266,-3.044221,-7.703908,7.715094,1.123910,9.932855,-9.521362,-0.075272,-7.647830,6.632938],[3.846667,-4.049238,5.872156,-3.695318,-2.182679,-3.794172,-9.425470,-2.276327,-7.332140,5.061812]],[[-3.270283,7.223408,-8.674616,7.957697,1.320080,-7.761717,-2.197343,3.246507,-5.520734,-9.647447],[0.626046,6.361900,7.747575,3.503454,-5.437209,8.285315,3.520835,5.475335,-4.205676,-8.276536],[2.840716,-0.005728,1.276293,2.001970,-9.989534,-4.870093,2.207550,5.694584,2.161702,-4.269112],[4.986386,1.128280,-9.573522,9.268301,1.374778,-3.714791,-2.042500,-4.666264,-8.455501,-4.531568],[-4.730130,-0.065646,-7.140180,-8.680836,-1.209031,8.586036,7.072048,-1.899949,1.725436,-0.157233],[4.518551,-4.844307,-8.074975,-0.642959,-3.922297,3.353207,2.797368,-3.098651,9.992003,-0.757826],[7.158443,-2.260455,-2.393430,-7.152843,-3.602600,-7.352099,9.677473,5.933918,-6.227571,-5.804211],[-0.489465,0.993848,-5.066651,-1.933165,-6.828136,7.015957,-5.821521,-3.657065,8.264810,8.722222],[-9.400394,2.202378,-8.836885,2.952287,-1.954747,6.213994,1.269102,4.307532,6.996025,2.193278],[-3.967440,6.331445,-1.783079,6.084346,6.700457,4.210806,-0.427322,1.517816,-0.113475,1.115825],[7.636124,3.239416,0.356598,-3.325635,-0.648346,7.375108,-7.672042,-4.667856,-2.670446,-2.351080],[-5.521075,8.666262,8.416661,6.343073,3.334345,-1.961762,3.726426,6.895391,-8.526139,6.836365],[-8.429583,7.524685,-9.272892,7.444590,4.344194,-8.693181,-8.625495,8.017712,-2.853273,5.701370],[7.210598,-6.815957,3.719664,-6.201287,9.047531,8.918016,-8.622425,1.186868,-5.730316,5.067566],[-9.389344,1.382839,-8.463044,-7.252559,5.464967,-2.915235,-8.264200,4.414816,4.675203,7.575740],[-3.035689,-1.743562,-9.345396,7.938820,-2.228084,-9.417320,-2.378422,8.648617,-3.976314,3.256385]],[[3.644404,3.060711,9.154086,-6.714492,-7.062825,8.804806,-6.312359,7.798126,2.487934,5.566256],[3.566375,6.369843,7.732548,-0.837065,-2.455579,0.329667,-4.325071,9.649388,7.623634,-0.754276],[-8.072289,-8.954095,4.774136,7.730329,-0.705942,-5.217845,-8.394789,2.651208,3.425699,-7.817289],[-0.648151,4.884017,-9.657698,-8.675019,-3.815274,7.825267,-9.976660,8.804269,9.545049,5.528638],[2.661538,0.824314,4.230634,4.009559,7.856356,-3.962170,7.810330,-7.354284,2.035316,-5.127818],[9.350017,-1.851722,4.080323,0.904520,-2.636473,2.791455,-1.300507,3.736903,9.724791,-2.387405],[-6.150140,-7.380201,0.196457,5.406462,3.330089,-2.223938,2.024778,7.200527,6.466611,5.876549],[9.130219,5.751980,-6.977574,4.959884,-7.939066,-2.090896,-2.095705,-3.574882,6.291044,-8.043326],[9.380848,2.471153,8.918161,-7.486153,7.963045,-9.487793,-2.388431,-1.899678,2.708435,-4.219658],[-5.544648,-9.478434,-2.951149,-9.299277,5.478215,-9.470632,6.673157,2.241353,-0.452930,8.033726],[-9.508743,-0.963051,-0.395225,5.449400,-4.158217,4.811521,-0.962219,-9.284699,-0.565189,-7.228265],[5.057879,0.956903,-8.318129,-0.362149,-7.399251,-5.157413,4.217474,3.177578,9.156690,6.580130],[-6.503536,-6.482576,5.748299,4.336494,1.423361,9.590552,4.693221,-9.630004,0.875177,-8.332655],[-8.495544,-6.859235,-0.308913,2.561911,-4.669183,9.493430,2.524637,9.401269,-6.719629,6.051837],[-6.827664,3.748254,0.270876,1.135602,-0.367234,-3.680372,-8.636054,-4.725118,-0.319619,2.676612],[9.870164,4.859786,-4.757046,6.489488,-3.622572,1.536542,3.345049,-4.949988,-0.394072,5.280086]],[[6.974689,0.822487,8.667404,-1.854233,-5.496806,-0.878335,0.526896,-2.324304,1.230130,-0.325782],[-7.991048,-0.060164,-7.616631,-1.942768,0.848658,8.311923,8.942370,-0.471191,2.731755,-3.686729],[-9.309129,8.278291,3.223432,-2.505393,0.264633,-0.868156,-5.665903,9.829761,2.524385,3.031787],[6.692275,1.866925,1.121437,0.833254,7.228743,-3.428459,7.170143,6.648223,-2.580544,0.489691],[-7.760788,0.103710,-7.802100,-8.966045,8.414408,-4.004329,-4.000715,6.844092,-0.674372,-1.814343],[7.479513,5.813400,-7.899169,9.019868,-6.826024,-7.574394,-3.874444,8.099364,-8.181137,-1.680930],[5.716269,2.768273,-3.657583,-7.086123,1.646047,-3.730305,2.480259,5.681084,-9.762466,-4.287498],[6.232269,-2.514069,2.509678,2.223537,8.571757,5.042427,-8.298804,-5.176282,0.811887,1.014956],[-3.380968,9.964108,-6.108191,4.470006,0.622058,3.027415,3.999667,-0.409450,-7.706204,-5.391945],[3.023721,-9.387350,-5.100062,1.245592,8.546441,5.078816,-8.308321,-8.193253,6.258802,-6.612032],[0.177411,-1.443868,0.629751,5.889110,-2.748651,6.038266,3.737593,9.076239,-9.346039,-1.919743],[-8.065556,3.271728,-9.583018,3.118884,-3.058695,9.875245,0.229747,-5.781731,-7.340948,-5.889065],[8.161694,3.862010,-8.395741,8.501936,8.982702,-8.416974,3.724972,-9.603617,7.496954,3.916250],[3.232146,-4.330023,-5.463303,9.941224,-9.431318,2.840275,1.552343,0.116437,-3.741828,2.022837],[-2.965521,1.436202,0.342775,1.292714,6.879189,-4.776723,3.156462,1.678321,9.909973,8.356449],[0.415252,-8.696091,1.969548,-1.477425,-7.636930,6.861726,1.785752,-5.515771,-7.839247,-1.537948]],[[-4.391710,7.445751,9.046206,-0.074545,7.769968,-4.078043,-8.233165,-3.008190,-4.102048,3.144407],[-6.889299,9.598074,6.997178,-5.569934,-4.217295,2.045497,-3.448812,-5.186893,-8.459027,-5.919821],[-7.666618,-7.874463,1.133930,-6.257359,2.769320,-5.476218,-8.900425,5.659727,7.864262,-6.218369],[-5.776187,6.774693,-4.682922,-7.353854,-1.532710,-6.332258,-2.509960,3.521167,2.288306,1.859328],[-3.240685,-9.847265,-5.634285,-9.611839,-6.067015,7.150105,6.064921,2.660874,-4.984917,-6.671250],[-5.228558,-7.307643,8.467140,4.771702,1.053242,4.690545,-1.991957,9.395505,8.775621,9.073288],[-2.863936,7.247933,1.119447,3.139684,-3.479590,-1.724245,-8.720379,7.821842,-7.475832,0.348391],[-3.216629,1.227329,-2.421834,3.340258,2.864823,2.920559,5.247522,2.860902,3.046877,-6.323758],[-3.785076,8.900082,2.211289,-2.085561,9.987956,-2.278232,-2.945393,-9.206183,-5.240484,-8.335737],[-7.976165,2.981818,-9.110174,-7.426422,6.693686,-2.477527,1.563986,-4.021364,-5.902865,7.539418],[-1.968178,2.174355,1.571294,-7.105844,2.984632,9.396042,-2.166900,6.311390,8.052021,6.949026],[5.718196,-5.061585,5.067648,2.837579,3.258638,1.614502,-2.844261,-4.429347,-6.239737,7.933884],[-2.813078,-3.106594,3.135942,3.297630,9.746176,7.784503,-0.965475,-1.225725,1.533078,-3.916685],[-9.409952,-3.146914,-6.233382,-6.627017,9.195247,7.610993,8.183314,6.955094,0.889182,6.760147],[5.603964,1.855058,8.383799,5.092054,-0.372829,7.657666,8.559721,3.671550,7.073807,-8.473988],[-6.254349,-9.901935,8.739230,-7.801196,-6.474645,-9.074465,1.018032,-1.744120,6.176294,9.515923]],[[4.998867,-5.683758,-4.015940,-9.571149,0.119747,0.540478,-1.013839,9.866880,3.638399,9.219751],[-8.461752,9.532898,7.922383,-8.110425,1.245371,-8.522832,-1.823861,6.644758,9.467857,-8.190582],[-0.349415,-3.807502,5.000714,5.420893,1.632542,2.775914,-6.364081,6.167167,-5.568715,-3.882483],[6.875557,-9.401739,9.535415,7.741785,1.093413,9.153362,8.524317,0.842204,-2.813515,8.466645],[6.274540,0.598598,3.184181,5.254110,-0.508751,5.371992,3.366337,6.361647,2.758300,5.403029],[1.737031,-2.686900,-4.225689,3.653575,-9.896881,-4.005116,2.613812,4.173339,7.330666,-9.638499],[-8.344596,7.296483,9.138505,-6.941625,5.665942,-4.663560,8.765777,9.152398,-4.242818,-0.769481],[0.110032,-8.526821,-2.550758,7.844408,-2.871555,3.533677,2.125142,-0.615074,7.452845,7.074842],[-3.317802,5.430236,2.484603,2.332644,-9.166074,-3.127564,2.924925,-5.310035,5.804017,0.413629],[-9.211715,-5.809864,1.895411,-5.226735,-1.715213,-9.087037,7.529070,-0.980196,-2.770257,-2.069525],[9.911078,6.131856,0.358583,-6.388375,7.281339,8.935799,-1.970676,-4.552391,-1.839309,-9.628388],[-1.603956,-6.499395,1.057723,-9.907651,-6.023479,-6.198933,-8.914243,-8.465427,3.196574,-5.861045],[-1.277831,-3.466588,5.867990,2.959579,-5.146625,-4.222199,-7.645275,-9.460724,9.105035,4.936968],[-7.249771,5.243278,5.077668,-6.040602,-0.671433,-3.887983,-5.691699,5.769705,6.492157,-3.584854],[6.870207,-7.903030,4.145770,2.433305,-6.886326,-7.385513,-6.448613,8.314184,-4.286888,-0.123699],[-2.514292,4.699304,-1.815493,-1.934304,9.827475,6.467512,-6.146262,-5.772462,-4.279780,-1.555569]],[[6.999525,6.043755,0.060818,0.588818,1.920132,-4.877707,-6.833232,-8.051708,3.086403,-9.058982],[7.188198,5.880163,-3.751577,3.511378,3.469557,6.136710,9.634272,-4.759232,4.196196,-7.383657],[9.017924,-2.427191,-8.660668,-3.875530,6.312471,2.701494,-8.464236,-0.786946,-4.953663,-0.672985],[-2.288875,-7.314515,-9.240111,-6.051292,0.767115,-6.355763,1.156368,-2.744483,-4.702856,1.803605],[-1.499551,-2.949726,9.144471,8.220651,9.064614,3.795147,5.053317,1.230466,-4.807964,3.179672],[-6.193125,9.305020,-0.224483,9.187011,-2.520053,-0.048024,8.180243,-6.096169,-0.054169,3.866020],[9.354989,0.753046,-3.180271,-5.602874,-7.982150,-6.813575,-0.587104,-6.255962,-7.997758,2.795839],[4.693152,8.749455,-1.590813,3.924433,0.319820,-5.629113,-2.735880,8.567497,-7.480731,7.552057],[7.542326,2.048965,3.580055,-0.862149,-8.072749,5.119169,9.952265,-5.788850,-1.070415,-8.137197],[-1.282607,-5.337073,-9.895547,-2.412802,4.462462,1.739182,4.558476,-6.755692,4.419777,-9.091975],[-7.031080,3.008151,-6.275999,-6.585492,4.038473,-2.049272,1.696006,-4.842779,-9.594523,3.992669],[2.171196,-4.225178,6.172224,0.398546,7.945278,-9.715232,4.297944,-9.515624,-4.440166,-6.330147],[2.426674,2.502721,7.313231,8.948160,-8.558138,-5.818922,5.731146,2.320323,9.007771,7.432470],[-7.531302,4.062468,3.295327,-8.581831,-7.254767,-6.158560,1.921765,-8.263707,1.568322,1.332515],[-5.144720,2.710749,-9.257114,7.837617,-8.588435,4.432305,-8.611304,-4.747391,-2.397970,0.558279],[-4.013562,-1.643708,-2.442537,-7.761953,-3.756348,4.497852,5.527046,0.578352,3.987509,-9.269550]],[[2.341431,7.758328,-0.503079,-9.846323,-4.748421,3.329597,9.422595,-8.487637,-1.215037,8.272220],[-8.699925,-9.409947,-4.229301,-3.939362,-6.654819,8.250673,-4.167556,6.067043,-9.845476,1.040459],[-1.115595,5.756979,-6.563687,5.070158,3.367187,-0.283335,2.079286,7.726610,-0.581503,-9.724875],[-1.802829,-0.948872,-9.063163,9.142896,8.914741,3.584242,4.176866,1.128771,-9.370797,3.111594],[-6.095039,-9.045813,-0.890301,2.407529,2.314926,4.423428,4.464292,-8.560027,2.854570,-6.671473],[-2.662983,-1.086834,1.773105,2.746413,-7.056575,6.445233,-3.096063,7.559202,6.416478,6.576573],[-0.206914,8.094619,6.688274,9.549559,7.538426,6.938813,0.943972,-5.630168,-0.793481,-1.257353],[-4.502640,9.779314,9.726359,5.981397,2.961086,4.907963,3.341652,9.835677,-6.011598,4.205390],[-2.475683,7.649780,8.224885,-1.743866,-2.873372,-5.293665,-4.309233,4.914981,-3.490533,6.652678],[-1.038311,0.790017,7.070259,-1.997420,1.364944,7.050541,-5.599974,4.442027,-7.050414,0.337230],[4.556284,0.408249,3.426726,7.513156,4.157662,2.447077,-5.830912,8.215160,6.802671,9.382354],[-9.811588,1.115846,-2.523563,-7.881678,-8.327867,4.084711,3.534072,-5.865555,4.383829,9.796478],[-3.460821,-4.145739,4.298375,-1.363071,9.844089,-5.230746,-4.623091,1.231788,-1.344687,-2.072189],[3.820612,-3.229381,-1.594551,-0.825301,1.182042,1.015570,-2.323348,-1.626928,2.003705,4.163527],[-9.665099,-0.317248,5.906559,5.599629,6.906104,-3.732906,0.282311,-0.578548,1.358488,-0.752521],[-2.325815,-2.916634,6.456750,-2.746823,3.627546,-5.556112,3.535758,7.369649,-9.994175,5.238422]],[[-7.731704,-4.714483,-4.338822,3.371730,2.976711,-5.759033,4.321373,2.029742,3.457826,-9.248640],[8.724417,4.988778,9.438968,7.204554,8.246341,-8.881789,-3.658150,-5.261915,5.775144,9.218729],[6.724116,-1.839924,-8.872199,4.462505,0.008562,0.778474,-2.207573,-9.754189,8.888214,3.582863],[-3.279394,-4.296768,3.187117,9.321848,-2.068562,8.345744,6.908046,1.996753,8.771879,3.584053],[-8.504254,7.658734,1.715016,-2.037636,5.068686,-7.320362,5.682302,3.846907,0.192981,5.532915],[4.376967,1.603595,-8.293702,-7.797646,6.009788,1.168654,-0.434101,5.064107,-9.493407,-9.922539],[1.109670,1.386353,6.517688,0.203727,9.890784,3.354981,-1.020808,5.908485,2.350538,-7.486194],[-8.917472,-2.953010,6.176567,-0.219063,4.679820,7.858294,3.371622,-4.985859,3.560829,7.641314],[-7.033001,4.524010,6.681525,-7.733110,0.866997,-7.724220,-7.845698,-3.491537,-5.975383,7.418948],[-6.819964,-2.894749,5.796873,-1.561543,0.818200,2.394766,-8.803600,-0.270011,-5.558202,-4.775068],[6.689099,1.026061,0.926725,9.589413,-8.981173,-9.497411,-5.499282,1.200850,6.651384,-7.454103],[1.200983,-6.830786,1.623136,-6.210283,5.271619,1.994457,1.769738,-1.804954,-4.819660,-7.289725],[-9.492501,1.125539,4.888055,-8.261438,3.289480,9.748599,0.949170,-5.034516,-5.847442,-3.846412],[-3.864105,7.189544,-3.834961,-9.874342,1.889976,8.953262,8.993076,-7.367008,2.756568,3.990721],[-9.946582,-5.748731,1.568578,-7.697678,8.175358,6.811848,-1.335829,7.559007,1.057448,0.995259],[-8.660786,-2.775482,-1.010389,-6.518613,-4.718277,-7.756326,5.372716,-1.124967,8.130744,-5.771120]]], dtype = "float32")#candidate|1590|(9, 16, 10)|const|float32
bop_1591 = relay.mod(const_1589.astype('float32'), relay.reshape(const_1590.astype('float32'), relay.shape_of(const_1589))) # shape=(9, 16, 10)
func_1430_call = mod.get_global_var('func_1430')
func_1436_call = mutated_mod.get_global_var('func_1436')
var_1608 = relay.var("var_1608", dtype = "int16", shape = (650,))#candidate|1608|(650,)|var|int16
const_1609 = relay.const([7.907068,4.816679,1.080770,-2.741345,6.303508,-2.436051,5.676135,-8.680746,-6.024223,-0.288262,-1.574711,7.978840,-6.896577,-1.885078,-5.547218,8.339395,4.074914,-1.748090,0.413964,1.688001,-4.440785,-4.519150,-3.372169,-1.192211,2.626052,2.368751,6.026828,9.861763,-5.013103,9.065387,-8.178220,0.202994,-9.888121,-0.191988,-8.756703,-1.939732,2.349848,-1.477528,2.259772,-5.571986,-7.292681,-1.705543,-8.438595,5.316547,-4.745042,8.857469,1.990125,-7.283704,6.572404,-3.914614,-2.586899,-8.750576,1.535295,5.706056,4.876930,-5.907167,-8.179220,-2.022179,-9.963512,5.741430,-6.340001,6.159923,9.676901,5.835749,-0.264521,5.385214,-3.419568,2.751739,-2.955161,9.175745,-1.618387,9.497370,-9.776714,-4.503349,-2.920870,0.806679,-8.432062,-3.553301,7.214009,-7.890880,2.177243,-3.750677,-0.726244,-7.426167,3.568198,-8.159692,9.942217,-3.136349,2.449443,-2.558236,-5.350870,2.013581,-0.811737,8.511251,1.858027,2.348159,7.537921,0.187638,2.728751,-1.886151,3.331361,4.695074,4.274585,-0.348003,-4.684350,-2.211376,8.267091,1.473028,3.519334,1.101562,6.690423,-1.619982,-7.585730,-6.097199,3.783827,-0.878144,2.020058,7.764567,4.609205,-9.048077,-6.404990,5.057669,-6.835866,2.684946,5.517489,-5.857271,0.124665,9.896265,-5.187980,-3.138170,-1.387906,-9.014710,-3.149204,-4.182396,-1.556079,1.641548,9.887986,-0.550581,6.945753,-6.146282,-6.389225,9.556529,2.616967,4.485070,-5.532267,8.140261,9.728707,1.889012,3.066276,5.920550,-1.077734,-1.428548,9.549623,9.126455,-2.178793,5.119043,-6.987598,-1.982769,4.466704,-2.011467,4.616106,6.131409,1.404966,-1.455889,-7.961129,-4.440659,-8.673339,6.658204,4.045534,8.977668,-3.750318,-0.943596,6.992185,-9.365445,0.338904,5.623167,-2.923475,1.118718,4.979112,-3.513277,8.298668,-3.863221,1.534214,-5.187106,-2.028753,-0.789366,-6.267177,1.712785,6.455104,6.760676,-1.794204,-1.142228,5.352595,0.998889,3.469680,-1.899992,-2.966487,7.988348,-9.204741,2.709015,5.018098,6.419966,-6.139924,7.420217,-8.835476,-2.495032,9.044842,3.968474,-9.879828,2.573834,-6.309154,5.339434,-7.750489,-3.871682,-0.741222,2.793743,2.512598,9.484269,-2.491184,-0.239248,3.153960,4.202562,6.217108,8.682142,9.599927,9.320698,2.124677,1.867146,4.760890,-9.127548,6.149388,9.270658,5.635526,-9.833111,-0.215734,-1.738997,-3.086307,-7.606566,1.582637,7.454623,8.685506,-1.303377,4.679735,-5.327138,-0.901410,-7.947981,9.890388,-6.574720,4.784998,-6.157362,2.807289,9.955225,-9.902636,3.873779,-6.536482,5.333376,-2.223892,-3.125821,2.680578,-6.115530,8.403522,3.408346,3.389672,0.990613,-4.236297,-7.843751,0.682706,7.215552,5.839001,5.472186,-1.740699,4.350448,-9.141572,-7.533734,2.051602,2.010376,-8.131526,7.667314,8.269733,-4.049858,-8.056854,4.755187,-2.858538,1.974082,-5.975466,1.143768,4.295920,8.249240,-9.110091,3.631931,-7.161757,0.937387,7.019006,-5.431542,2.172936,5.341555,1.378939,0.514246,4.906380,-7.540211,3.960144,-0.673153,-0.698285,5.577108,-7.637235,-6.546883,0.193478,2.408397,-1.864667,7.785049,-5.912708,0.934693,-6.049117,0.648333,-0.319396,2.894848,-9.275286,-7.744648,2.844772,2.805851,4.427463,-5.740362,6.704791,2.098448,-1.715319,-7.501007,7.298690,-1.992243,-1.007428,-3.771829,1.185203,4.956305,1.477126,5.497879,2.623757,-4.975206,-0.547957,3.666184,-5.493353,-2.821419,-1.477824,2.300655,-1.492509,0.152322,-3.739447,1.141780,7.679228,9.175500,2.736732,2.181925,6.040450,3.828196,-2.585611,-3.001592,9.924958,3.443790,8.358144,-6.482903,5.040383,-0.998341,4.064872,1.346563,-2.354881,0.192741,5.713071,-0.198136,0.420454,5.074225,3.695326,-7.512272,-5.731574,-9.330401,1.447598,7.753224,-1.185920,-4.901389,-4.909850,-9.310355,-0.505775,-8.571860,-2.309665,-3.174378,-4.369610,9.181523,0.496376,-9.442526,-9.177037,2.643640,1.564879,-3.496112,0.086806,2.878830,-7.629440,-0.986430,-3.728085,7.173002,-2.861680,-7.116324,8.386872,-5.109754,7.981701,-6.755100,9.790291,2.097146,-5.223672,-3.377601,-6.589076,6.428539,9.621865,5.689458,-3.953499,-3.209521,4.132514,8.605545,-3.267232,2.588181,4.597500,5.767163,-4.197762,5.314618,-6.967471,-2.566906,-7.984447,-1.707496,2.249734,2.417569,-9.162607,-1.692957,-4.391604,-0.600672,8.485707,-2.327483,7.491823,0.959917,4.109784,-5.869697,-9.295922,-8.273500,9.755611,-5.300677,6.416673,-8.534619,9.866943,7.282840,7.141103,2.412333,9.835046,8.498167,3.617421,-8.795073,5.437346,4.568551,4.157070,-3.251647,-8.895981,-7.291784,-1.726857,0.294003,8.157655,4.795024,-5.690145,-9.413332,8.214824,-5.444306,-2.485842,1.167088,4.162599,-1.639434,-0.814968,5.351387,2.716331,-9.693470,1.244121,-0.550110,-4.886930,6.920110,-1.281518,6.085795,6.901459,-0.957356,-8.710506,5.567612,-1.341757,9.199574,7.608281,7.310268,-6.732352,-4.075574,7.676959,-7.552739,6.017665,-0.804992,0.147847,4.532555,1.443662,7.896190,7.247086,-4.659262,-9.308692,-4.231809,-7.558588,-9.211141,-8.935538,-8.372778,3.135071,3.333651,-9.905688,-5.202001,6.435279,-1.456093,-0.098178,5.991193,8.739325,0.401100,2.699564,0.547833,-8.954063,-7.016007,-3.362482,-9.566039,1.687223,-6.182708,-7.489598,-8.250836,-5.354996,-8.829267,-8.580078,-3.922364,1.912023,1.239547,-5.550789,2.136396,-4.148000,2.983984,-7.028246,8.852712,7.195253,-1.313889,-4.894063,-6.238412,1.412924,9.047465,-9.754799,2.862976,-3.992189,-9.205344,7.837892,2.916514,5.316675,1.123524,-5.909837,9.410785,-8.973421,8.497817,-1.368600,-2.848693,1.248349,1.793015,8.558646,4.556707,2.598425,-9.752691,0.912214,2.737556,-0.287835,3.612212,3.022962,1.496680,-2.451490,-8.721873,-4.552982,-4.930419,5.877928,6.810891,9.015887,-5.152813,-9.165447,0.070330,-2.495659,-6.374442,3.559563,8.617281,-6.729872,9.976046,-2.274799,-3.252598,-6.765160,-6.307109,-0.859661,-6.492543,-4.731371,4.861519,-8.038168,5.702022,5.495881,3.881982,2.082098,6.204587,4.998829,-8.413649,-7.232849,-4.828862,1.147361,-5.431674,-6.600384,4.490410,4.100726,8.222004,-9.842422,-7.472266,-1.471722,-9.566391,2.539698,-7.053602,-6.221548,-4.862192,9.554501,4.120719,2.044143,-4.027249,9.324024,-9.115312,-4.669098,-5.696599,-5.808716,-9.779034,-6.589506,-1.318357,-6.120174,4.916050,0.896209,-2.715189,-7.649649,-5.188915,2.472462,-6.190310,-1.783749,-7.082302,-2.281827,0.484966,8.906234,-2.506056,9.945428,4.022906,7.528328,-8.634343,-9.413690,6.484104,2.317468,-2.074419,-2.221803,2.765187,-7.797065,-4.153206,-2.010213,9.507167,9.973107,2.407313,9.583215,4.289677,0.006749,0.236946,-3.592650,5.233748,-6.503966,-5.285669,-1.090395,-0.908470,3.857800,3.594184,-0.302076,-2.727477,-3.962969,-3.422994,-8.147877,-6.073907,-2.490234,-5.999933,-6.458241,-5.209001,7.948356,-9.982035,-2.842419,-3.564497,1.105027,6.603335,7.322635,0.584585,5.465942,9.831971,0.205968,-3.512510,6.653677,-2.969159,-3.155613,8.666699,-8.949838,3.660906,-0.194972,-5.281254,0.616437,2.470617,9.666878,1.679710,7.345123,6.452060,-4.148090,-2.803980,-9.509816,-6.330460,0.602672,-2.960991,9.185840,-2.063212,-0.893505,9.637085,-8.937441,-0.342044,5.261045,-4.809688,-9.368087,-2.977570,7.884155,-9.215603,5.273473,-7.188763,-4.081600,-6.885694,-1.522656,1.122704,-7.668079,3.611662,-2.615744,-1.212627,0.892154,-8.683507,-4.285913,-8.983120,5.065276,0.018610,2.707043,1.547668,5.931983,7.905141,-0.433394,-5.403133,2.504644,3.831457,2.617074,-4.686211,-9.815948,-4.540512,9.695328,2.731381,9.276090,6.016430,-7.681708,4.373780,7.054817,-1.087115,4.032295,-2.476688,-1.430483,-0.464820,2.170839,-8.405691,8.252518,3.407773,6.051294,1.090074], dtype = "float64")#candidate|1609|(770,)|const|float64
var_1610 = relay.var("var_1610", dtype = "uint16", shape = (495,))#candidate|1610|(495,)|var|uint16
call_1607 = relay.TupleGetItem(func_1430_call(relay.reshape(var_1608.astype('int16'), [13, 5, 10]), relay.reshape(var_1608.astype('int16'), [13, 5, 10]), relay.reshape(const_1609.astype('float64'), [77, 10]), relay.reshape(var_1608.astype('float32'), [13, 5, 10]), relay.reshape(var_1610.astype('uint16'), [495,]), ), 3)
call_1611 = relay.TupleGetItem(func_1436_call(relay.reshape(var_1608.astype('int16'), [13, 5, 10]), relay.reshape(var_1608.astype('int16'), [13, 5, 10]), relay.reshape(const_1609.astype('float64'), [77, 10]), relay.reshape(var_1608.astype('float32'), [13, 5, 10]), relay.reshape(var_1610.astype('uint16'), [495,]), ), 3)
output = relay.Tuple([bop_1591,call_1607,var_1608,const_1609,var_1610,])
output2 = relay.Tuple([bop_1591,call_1611,var_1608,const_1609,var_1610,])
func_1614 = relay.Function([var_1608,var_1610,], output)
mod['func_1614'] = func_1614
mod = relay.transform.InferType()(mod)
var_1615 = relay.var("var_1615", dtype = "int16", shape = (650,))#candidate|1615|(650,)|var|int16
var_1616 = relay.var("var_1616", dtype = "uint16", shape = (495,))#candidate|1616|(495,)|var|uint16
output = func_1614(var_1615,var_1616,)
func_1617 = relay.Function([var_1615,var_1616,], output)
mutated_mod['func_1617'] = func_1617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1641 = relay.var("var_1641", dtype = "uint64", shape = (15, 14, 7))#candidate|1641|(15, 14, 7)|var|uint64
var_1642 = relay.var("var_1642", dtype = "uint64", shape = (15, 14, 7))#candidate|1642|(15, 14, 7)|var|uint64
bop_1643 = relay.logical_xor(var_1641.astype('uint64'), relay.reshape(var_1642.astype('uint64'), relay.shape_of(var_1641))) # shape=(15, 14, 7)
var_1647 = relay.var("var_1647", dtype = "uint64", shape = (15, 14, 7))#candidate|1647|(15, 14, 7)|var|uint64
bop_1648 = relay.mod(var_1641.astype('float32'), relay.reshape(var_1647.astype('float32'), relay.shape_of(var_1641))) # shape=(15, 14, 7)
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
var_1658 = relay.var("var_1658", dtype = "float64", shape = (770,))#candidate|1658|(770,)|var|float64
call_1657 = func_171_call(relay.reshape(var_1658.astype('float64'), [14, 5, 11]))
call_1659 = func_171_call(relay.reshape(var_1658.astype('float64'), [14, 5, 11]))
output = relay.Tuple([bop_1643,bop_1648,call_1657,var_1658,])
output2 = relay.Tuple([bop_1643,bop_1648,call_1659,var_1658,])
func_1660 = relay.Function([var_1641,var_1642,var_1647,var_1658,], output)
mod['func_1660'] = func_1660
mod = relay.transform.InferType()(mod)
var_1661 = relay.var("var_1661", dtype = "uint64", shape = (15, 14, 7))#candidate|1661|(15, 14, 7)|var|uint64
var_1662 = relay.var("var_1662", dtype = "uint64", shape = (15, 14, 7))#candidate|1662|(15, 14, 7)|var|uint64
var_1663 = relay.var("var_1663", dtype = "uint64", shape = (15, 14, 7))#candidate|1663|(15, 14, 7)|var|uint64
var_1664 = relay.var("var_1664", dtype = "float64", shape = (770,))#candidate|1664|(770,)|var|float64
output = func_1660(var_1661,var_1662,var_1663,var_1664,)
func_1665 = relay.Function([var_1661,var_1662,var_1663,var_1664,], output)
mutated_mod['func_1665'] = func_1665
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1913 = relay.const([[[-2,-1,-10,4,-9,-10,-5,3,2,-2,10],[6,-6,-9,8,7,8,-3,-4,8,5,6],[4,-4,9,-5,-1,-3,4,10,-1,3,4],[-10,1,6,5,8,1,-6,-7,1,4,4],[7,-1,2,-10,10,-7,-5,8,4,9,-7],[8,-6,9,5,9,9,10,3,-8,-9,7],[7,-6,-1,-8,10,2,7,7,7,5,5],[7,-7,-5,9,2,7,-7,-5,-7,-1,4],[-10,-3,6,-3,3,-10,-5,7,-7,10,-9],[10,-3,2,6,3,6,3,4,-4,5,5],[1,4,3,1,2,-7,-2,1,6,6,-10],[5,-6,-10,6,-1,-1,6,8,5,3,-6],[-2,3,-1,-9,9,-6,4,-5,5,-7,10],[8,5,9,7,10,-10,-5,-3,1,-8,-6],[5,3,7,4,-7,7,-8,-7,4,2,2],[5,4,7,5,4,-7,1,9,3,-10,6]],[[-9,-2,-2,-6,-4,4,-9,9,6,-5,2],[-9,1,-7,-4,-8,-7,5,5,-8,4,-6],[-2,-8,-8,-1,1,1,2,3,-2,9,3],[1,-7,6,10,6,-7,-10,9,5,-1,-2],[-6,-9,9,-10,-1,-10,-1,-2,8,-4,-2],[2,-8,-1,-5,2,-1,-2,8,-1,-4,-9],[-9,7,-9,-4,7,-2,5,4,10,5,-10],[10,-10,8,5,-10,-8,-2,10,-8,4,-2],[7,10,5,-7,-2,-2,1,6,-9,10,5],[-6,10,2,6,-2,3,10,-9,4,5,6],[7,-4,8,4,6,8,6,9,-7,6,-4],[9,-3,-7,-10,8,4,-4,6,8,9,-7],[10,-6,-6,9,9,5,5,-2,-6,-2,2],[5,-3,-7,10,7,9,-1,6,-5,9,6],[-4,9,-9,-10,-7,7,7,2,8,-1,3],[-2,-1,-1,-8,6,-5,2,6,-3,7,4]],[[-5,-5,-6,-10,8,7,10,2,4,10,5],[-3,3,5,-7,-4,-5,-5,-5,1,8,5],[-3,6,6,-7,7,3,6,-8,9,7,-2],[5,9,1,4,-7,-2,4,-10,-1,1,-7],[-4,-9,-8,6,-1,7,9,-9,-5,-7,1],[5,2,-8,-1,-9,-1,-7,7,1,4,-7],[-8,-5,-5,10,-6,5,2,-1,8,8,-10],[-10,-8,-6,9,-5,-10,-9,-3,-10,5,-8],[-1,-2,1,-10,-4,-10,9,5,9,-6,10],[-3,6,3,1,10,2,-10,-1,6,1,6],[-1,-10,10,-9,-3,5,-8,-1,-2,10,3],[5,-10,-7,-6,-3,-5,7,-2,10,-3,-5],[3,-1,-8,-9,2,-5,4,5,9,8,4],[-1,-6,-2,-6,-1,4,6,-4,5,8,8],[3,5,-3,6,-8,2,8,2,-2,4,6],[1,4,4,7,-7,5,-2,3,-6,5,-7]],[[-3,-8,4,2,-2,10,9,2,-7,-6,-1],[3,-6,-6,-8,-3,-4,7,-3,-9,-3,4],[4,10,5,8,-4,-1,-3,-1,-2,3,5],[5,2,-4,-3,-9,-4,-2,6,-6,-4,-3],[4,5,10,3,9,-5,1,8,-10,5,-7],[-5,-9,-5,8,8,-6,9,3,3,-9,5],[-10,6,-1,5,7,10,3,-9,-7,-4,-1],[9,2,-8,-10,10,7,1,-6,5,-8,-1],[4,3,-6,6,-9,-1,-7,-3,5,7,1],[1,4,-3,3,-7,-4,10,-9,-7,-1,1],[-1,-5,10,-8,1,8,-7,10,-3,-9,-9],[-6,9,-9,4,-8,-6,1,6,5,-3,3],[-4,-2,-3,-5,-1,-3,6,1,-5,7,6],[7,9,1,7,-2,8,9,4,-6,-4,-7],[4,-2,-1,-10,7,8,3,8,3,2,-3],[-5,-4,-3,-3,-9,-8,-5,10,-5,5,2]],[[3,8,1,1,1,-10,8,-3,4,7,-5],[-3,8,-1,-3,10,5,4,-2,-10,1,-9],[-3,-2,-6,-1,1,-7,3,-1,1,2,3],[-1,-1,9,-9,2,1,-1,3,10,-7,1],[5,4,-7,-1,2,-5,-3,4,-3,5,10],[-10,7,5,9,4,1,-9,4,-9,3,9],[10,-7,-2,4,-10,5,6,-3,-9,10,-5],[-8,-10,5,-3,-9,-10,4,3,-3,4,-10],[9,7,10,-8,8,-4,-3,2,-3,-6,1],[6,8,7,-9,-4,10,-6,1,-5,-2,-7],[-8,-10,4,-6,8,9,3,-9,2,-1,-7],[5,3,-6,9,-9,-2,7,-6,1,7,9],[-7,-2,-4,-1,2,-8,4,-1,7,9,10],[7,1,10,-1,9,9,-5,8,1,-2,6],[-5,10,-8,5,-6,-6,4,6,6,1,1],[-6,4,9,-8,-3,-6,7,1,-4,6,-6]],[[5,-6,-7,6,-5,-7,10,4,-2,3,9],[2,1,8,5,10,6,-10,-2,-3,9,-5],[-3,-8,-5,3,-10,7,10,-1,-1,-2,6],[10,-10,-3,2,-7,7,1,6,-8,-8,10],[-10,10,3,-8,6,4,-2,5,5,8,1],[3,-1,6,6,5,8,-7,9,-9,-5,1],[2,-1,1,-8,-7,10,2,9,-1,-3,-2],[-1,8,-6,-4,10,4,-2,1,9,-1,-7],[-4,-2,-3,-7,5,-3,-7,6,5,-7,7],[8,-9,5,-6,4,1,9,9,6,-4,-9],[-10,-2,10,6,9,5,-10,8,5,10,-6],[-9,-4,2,-7,-7,-5,2,10,-7,5,-7],[-4,-3,-4,4,-1,-6,-9,-1,9,-3,-8],[-4,-6,-7,2,-4,-8,-7,1,4,-6,4],[-1,2,-4,-6,10,1,10,-7,-2,9,9],[4,-7,1,-1,9,-2,3,5,-8,-1,3]],[[1,-6,-10,-4,-2,8,-9,5,3,-3,4],[-1,-9,-8,-2,-4,10,5,-6,8,7,7],[6,-5,5,-4,-8,-10,7,-9,-10,1,2],[9,-5,6,-4,8,-7,8,5,-1,-8,1],[-2,4,3,9,1,5,-6,10,6,-1,-4],[-4,-5,-1,-7,-10,-3,10,-10,-1,-8,7],[-9,-5,6,7,7,7,6,6,-2,-4,-1],[-1,3,1,2,5,-6,6,8,-2,-5,-8],[-8,-6,-1,7,5,10,-4,9,-3,-7,9],[-1,-7,4,1,-2,-8,-3,-1,8,10,3],[-1,10,-1,2,-8,-4,7,8,-2,9,1],[9,-2,-7,7,8,4,-3,-3,-2,-10,-10],[8,5,8,-2,-7,2,-7,4,9,-3,10],[-8,1,-7,-8,-7,5,-8,7,-4,8,6],[5,3,-3,-6,2,-9,-6,5,-3,2,-6],[3,-8,-10,2,-6,-5,10,-5,5,2,10]],[[10,4,10,3,4,-9,-2,-3,-4,-9,5],[-9,8,8,7,8,5,-3,7,3,4,8],[-1,-10,7,6,-1,-4,10,-10,4,-6,-9],[-6,-7,-10,10,-6,-8,-8,6,-10,-10,7],[-8,8,-5,1,-5,2,3,-4,-1,-4,9],[-5,5,-3,10,4,4,-10,-8,5,-7,7],[1,2,4,-3,9,7,1,-8,7,-9,-6],[2,-9,7,-3,5,-6,8,-7,10,-8,8],[6,-10,-10,7,-9,9,-5,-3,1,-4,7],[6,2,-9,-4,10,3,-4,-3,8,-10,-10],[-3,5,1,2,3,3,5,-8,9,8,1],[6,3,-4,2,7,-6,-1,4,-6,-1,-4],[3,5,1,-5,-7,4,8,2,1,5,-4],[4,-10,-4,-1,9,-2,5,10,-6,2,5],[-10,-10,-6,8,-1,-7,5,4,-2,10,-7],[-9,-5,-4,-5,-9,-7,7,3,-5,-10,-5]],[[-6,2,2,-3,-7,6,9,2,-10,-10,9],[-10,3,-9,8,9,-5,-3,5,5,-10,5],[-2,3,8,-9,-1,3,6,8,-6,-7,9],[7,8,5,5,-5,-9,-1,2,-7,-8,-6],[2,8,2,-8,-7,-5,1,3,2,-4,-8],[9,4,-2,4,-9,-3,-4,-4,4,-1,8],[-10,9,3,-2,-8,-1,-5,-7,5,5,4],[-1,-4,-2,3,-7,3,5,-9,6,-8,-2],[-4,-1,-6,4,-8,8,9,6,-2,-7,1],[10,8,9,-7,-8,1,-7,-6,9,-8,-5],[-9,-1,6,-5,-9,-6,4,-3,-6,1,10],[6,-1,-9,4,-5,7,-3,1,9,-6,7],[8,-1,2,-4,2,-8,5,-1,3,3,10],[-10,-7,-3,4,4,-1,-8,9,-5,2,-1],[1,7,5,-4,7,8,-3,-6,10,-8,-5],[5,-8,4,-4,-6,-6,-10,2,-8,8,-10]],[[6,9,-6,-10,-5,6,5,-1,2,7,10],[-10,1,-1,5,-3,1,-8,9,9,-3,7],[-2,9,8,5,3,-2,5,-5,-7,1,8],[-7,9,3,1,-2,-8,9,4,4,9,-2],[-9,5,5,6,-9,-4,-8,-2,7,-2,-2],[-1,-6,4,10,2,-4,7,-4,5,-7,2],[6,-4,6,7,8,-4,2,-10,5,4,-8],[9,8,-5,-2,2,-1,-8,2,-4,-3,5],[-8,10,8,5,8,9,-7,-1,-1,7,-9],[6,-2,2,-1,-3,-1,-4,-8,4,-2,-2],[-7,-8,-5,-8,-1,6,7,9,4,-8,-4],[3,-1,7,-9,-2,1,-3,-6,3,-9,1],[6,5,1,-4,-8,-6,-3,10,-2,-8,-2],[-1,6,-6,-2,3,8,-9,-3,-3,-1,10],[1,-8,2,-8,-9,-3,-3,-1,7,-5,2],[-1,1,8,4,-8,7,10,3,6,-8,-8]],[[9,8,-3,-10,-8,-2,8,1,-9,6,6],[-7,-5,3,-5,6,10,1,-10,-10,5,-7],[3,2,-8,10,-6,5,4,-9,-8,-3,1],[-4,7,9,-6,-5,-8,-3,-7,2,-1,-9],[4,-4,-2,-3,-2,-6,-10,3,5,7,6],[10,4,-9,9,-2,7,-7,4,4,10,-7],[6,8,-7,-3,-6,6,-6,-7,-6,-10,-6],[2,1,-7,7,-1,3,2,-8,-3,-1,6],[-8,2,3,-7,-1,10,4,-2,9,-3,7],[-2,-4,1,6,1,-2,7,7,6,-10,1],[-2,-6,8,-5,7,-2,-2,6,-10,-1,-2],[-10,10,-6,-2,8,-9,7,4,-4,7,3],[9,-7,-6,3,-7,-6,7,-1,8,3,4],[7,-9,-10,-1,8,-10,-10,5,4,-4,-1],[2,-2,-1,-10,-4,-2,1,1,-3,-1,6],[-1,3,-3,8,2,5,-4,8,1,2,6]],[[3,3,-8,1,4,-3,9,-7,-1,1,-2],[4,9,-3,7,4,9,-8,-10,1,2,4],[-9,2,-10,7,8,-2,-5,7,6,-3,-9],[-2,-1,4,6,-7,-8,6,-10,10,2,-4],[-8,-2,4,-9,-8,1,-5,-5,4,-7,-8],[2,6,7,-3,9,-4,6,-6,-9,8,-6],[-7,-8,-10,5,10,8,-7,-3,6,2,3],[-7,2,5,-10,-7,-3,-7,-9,-3,-10,-4],[5,-7,-1,2,6,-5,9,-2,-3,5,-3],[-9,7,-3,2,-1,-7,10,7,2,-3,-4],[6,-1,-3,5,1,10,5,-4,-1,7,-5],[-5,-1,8,3,8,7,8,-10,-8,6,-10],[3,9,-10,1,-5,2,1,-2,1,4,3],[-10,5,-3,-7,-2,-8,-4,9,-8,2,-10],[9,9,-4,-7,-5,10,-4,10,6,2,5],[4,3,-8,-9,8,-2,7,-2,-3,-3,8]],[[3,-1,-10,-5,-8,8,-3,6,5,-2,-3],[-3,5,-1,-6,-6,-6,2,-7,-10,-9,8],[-5,4,10,-4,-2,7,2,6,6,-1,-6],[-8,-1,1,7,2,8,9,-9,-3,2,10],[10,6,-7,-8,-1,7,-7,1,-2,5,8],[-7,10,10,8,8,6,-5,10,-6,-2,-4],[-3,-2,-8,4,10,3,-9,-2,2,6,5],[-1,-5,-7,-1,-5,-5,-1,3,-1,5,2],[8,1,-5,8,-8,-6,-5,9,3,-2,8],[-5,7,3,1,-7,1,-1,-7,-6,-9,8],[-7,-1,9,-9,7,10,-10,-7,10,2,-4],[-8,3,5,-8,5,8,-4,-9,5,-8,1],[8,1,-2,7,-7,6,-1,-9,4,2,1],[-10,-2,-6,10,8,-5,-5,-3,4,9,9],[3,-7,-3,-10,9,-5,-2,9,8,9,-8],[4,-9,3,-2,-6,-4,1,-3,2,-10,-3]],[[7,6,1,3,-2,-3,7,8,10,-4,8],[2,6,-5,2,-1,-8,-6,-4,10,-6,-8],[-1,-10,-10,-5,-10,10,-2,4,-1,-3,-4],[9,8,4,2,-6,-8,-4,-1,-5,-8,6],[-1,4,-7,-4,7,-9,-5,-8,-4,-10,1],[1,4,10,2,-4,8,7,-6,-6,-4,-8],[7,6,10,-6,-1,-10,2,1,-8,8,-4],[3,6,4,4,9,-10,7,-2,-1,-9,-1],[3,-6,6,10,1,-1,5,-6,-9,-2,-9],[-9,1,5,-10,-2,8,-7,4,-6,1,9],[-5,4,-8,-3,7,-2,-9,-8,-3,4,-8],[8,8,-4,-3,2,-8,6,-5,6,10,-8],[-5,9,-9,-1,-6,9,-7,1,-8,10,9],[3,-4,6,7,2,-2,-9,-6,10,-3,3],[3,-10,7,8,-5,-2,10,-4,3,8,-6],[8,9,-3,-8,10,2,-4,-1,7,-3,-6]],[[8,-1,-5,8,-8,-5,-6,-9,7,-6,1],[-8,-10,8,-5,-10,4,5,2,1,2,7],[6,-2,7,-10,8,1,-2,-3,3,1,5],[-7,3,-5,5,5,-9,-2,5,-5,1,-10],[4,1,7,5,8,-8,-9,6,-6,5,7],[4,-3,-6,-6,7,-2,-7,10,10,5,1],[-3,-10,-9,4,4,10,6,2,-4,4,-7],[4,5,7,4,-6,4,-3,2,-1,-7,4],[8,-7,-6,8,-4,-3,6,10,8,6,3],[5,9,2,8,1,-3,-10,-9,-4,-1,-3],[7,-9,-9,-6,-6,-8,10,1,5,6,10],[8,-6,-4,1,8,-1,4,-1,4,3,2],[-1,3,-5,-5,7,-6,-8,-10,8,-9,-4],[-10,-1,-4,-8,10,-1,7,-2,-3,-8,1],[-9,-6,-8,9,6,-1,-6,3,-3,-3,-8],[8,-5,-8,-10,-8,10,10,-9,-4,-10,1]]], dtype = "uint32")#candidate|1913|(15, 16, 11)|const|uint32
const_1914 = relay.const([[[-6,2,4,8,-4,-9,-5,7,-9,-4,-7],[2,7,-8,7,-3,-6,3,-2,6,-10,-2],[-8,-10,8,-3,-1,2,-2,1,6,2,-8],[3,-8,5,6,2,-8,2,10,-1,-10,-7],[5,-2,1,-2,1,-6,-4,6,10,-3,2],[-4,-1,-1,10,-5,-7,8,5,6,7,2],[5,-1,-5,3,2,-10,-4,7,-1,1,-3],[6,8,1,-6,-7,2,5,-4,5,-8,2],[5,6,-2,-6,3,-3,3,-8,-9,-9,-5],[-8,-3,-7,-9,-10,8,2,2,-5,9,-8],[1,1,-1,1,-5,6,-4,-8,2,1,6],[10,-3,-5,-4,-5,8,-5,8,-6,-6,2],[5,-7,10,9,-3,-5,7,-7,2,-5,1],[1,7,4,-8,-7,6,2,-2,-5,-1,9],[10,-6,-1,-5,5,2,3,-7,-4,-4,8],[8,8,-3,6,4,8,-10,-2,-1,-3,9]],[[1,-7,-10,-5,8,6,-1,-2,1,-2,-7],[-9,-1,4,-7,10,-10,-5,7,-9,-5,2],[6,-2,-1,9,9,6,10,4,4,-7,10],[-7,2,-5,-2,5,-2,-8,-1,10,7,-4],[8,6,3,-6,-3,-3,8,-4,-4,10,-5],[-8,5,10,5,-9,-1,5,-8,8,-6,8],[6,6,-10,5,-7,4,2,6,-8,-10,-1],[5,-8,1,-2,7,1,-10,-10,-6,10,10],[6,1,10,4,-8,1,10,7,-10,-1,-10],[2,6,8,10,9,-4,1,-4,7,4,10],[-1,7,3,-10,7,-2,10,10,-8,7,1],[-7,-10,9,-4,9,5,-7,-4,-1,9,-5],[-5,-10,-3,-6,2,1,10,8,-10,1,3],[-6,-5,7,2,4,6,-10,-10,3,-10,5],[-4,-5,-4,-2,4,-3,6,-4,1,-6,1],[-3,-2,2,1,-3,-4,1,-7,-4,-10,-2]],[[6,-5,-2,-3,-6,-4,5,10,5,4,4],[-7,10,-3,-8,-9,9,-1,-4,5,-3,10],[-5,7,-6,9,-6,-10,-6,9,8,-8,1],[-9,8,-6,-3,10,-7,-5,-7,2,1,-2],[-4,2,-8,-8,-2,5,-1,2,7,9,8],[-6,10,-10,1,7,4,7,10,2,-2,-3],[-8,-6,-6,1,-1,-10,-7,10,-4,-5,-6],[2,-10,1,1,-7,-8,6,-10,-9,5,1],[-2,2,-8,6,-1,-4,-5,5,9,-7,-6],[3,1,6,1,-10,8,1,-10,4,7,6],[-2,-10,-4,-10,-1,8,-2,9,-4,8,-4],[-10,8,-8,1,-7,-5,-4,3,1,4,7],[6,1,9,-3,-8,7,-6,-1,1,2,6],[-6,9,-4,-1,-2,8,-8,-3,-10,-4,7],[4,-9,-9,-2,4,-5,-9,9,-1,-6,2],[-6,5,-8,-2,8,-4,-10,7,-7,4,-5]],[[10,-3,-3,-1,-3,4,2,-8,8,10,-5],[6,-4,3,6,1,2,-8,-2,-3,-4,4],[8,10,-10,-9,-3,-4,-7,-7,5,-8,3],[-5,3,-10,5,-4,-8,1,9,10,3,10],[-3,3,-8,-6,-7,6,8,-10,1,-8,-2],[-6,8,-2,-2,-3,3,2,8,-2,10,6],[5,-3,-10,7,1,-1,-1,-4,-7,-7,-4],[2,10,7,-2,-8,-9,-5,-3,10,-6,-6],[4,-10,-8,1,-8,6,-7,-6,7,7,-6],[-4,-5,-6,5,-7,-4,2,-4,6,8,-7],[-8,-5,10,1,-6,-6,1,-3,-6,5,-7],[-9,-2,2,8,4,-4,-1,4,-2,-10,3],[-2,8,-7,5,-2,7,-1,3,-2,-7,7],[-3,-1,1,-1,3,-1,1,-3,-3,1,10],[-3,-5,-9,1,2,9,7,7,6,-3,-10],[-6,1,2,1,7,-3,7,5,-10,-2,-10]],[[-10,-8,8,3,6,-5,-1,10,-6,-6,-7],[3,-2,9,-5,-4,-8,1,-6,6,-6,-10],[5,-8,4,2,-10,-5,1,8,-5,-10,7],[-10,8,4,6,-10,3,-4,4,8,2,-8],[-9,8,9,10,-9,-6,8,-10,5,7,-8],[4,-6,9,8,-10,2,-3,-6,-6,3,2],[3,8,-2,3,-4,5,1,-8,9,-6,-6],[1,-9,-8,8,-6,4,8,-8,7,10,-2],[3,-8,5,-5,-2,-4,-5,5,-4,4,-4],[-3,5,-4,1,-6,5,-9,7,-3,2,1],[-10,1,-7,4,-9,-6,7,9,-6,-2,-10],[-3,-9,-7,-4,8,-5,9,-6,-7,-10,-1],[-3,-4,-7,3,-9,6,1,-9,-2,-10,-8],[10,2,10,10,-6,4,-5,-6,8,-3,5],[6,8,3,-6,6,4,1,7,-5,-6,3],[-10,8,-8,2,4,7,7,-1,-8,9,5]],[[8,-3,7,4,9,-10,-1,7,-2,-3,-6],[-9,-5,3,1,-6,-10,-3,-8,-6,10,5],[4,7,6,5,2,6,10,-5,-7,-1,-2],[3,-1,9,5,-1,10,5,9,6,3,-1],[3,-6,-7,-9,-3,-8,-1,4,-3,-5,4],[-8,3,4,-10,-10,1,5,-5,6,7,2],[3,6,-10,10,2,-7,-2,10,8,-4,8],[-6,6,-10,-9,2,8,-9,-8,4,-5,-4],[2,8,6,8,3,-6,9,1,10,-10,-9],[7,-6,-9,10,9,-9,-3,-8,10,6,-10],[6,10,5,2,-7,-3,-8,5,8,-1,10],[4,4,1,4,2,3,5,2,-3,-6,3],[1,-1,1,-5,-7,-10,7,-2,3,10,-8],[5,2,-10,-6,-2,2,-5,-9,-5,-1,9],[4,-10,5,-2,-7,-4,7,-9,8,10,-7],[4,-5,-2,4,6,-5,5,-8,-5,-6,-6]],[[-5,-5,-6,-7,-8,-9,-10,1,4,-1,6],[9,5,-1,-4,-5,3,4,-5,-4,-1,-5],[-8,4,4,1,3,5,5,-10,-2,10,5],[7,-4,-2,-6,6,3,-3,7,-8,7,6],[-9,3,-1,9,6,5,-6,4,4,-3,-10],[-8,4,7,9,-3,2,-10,-8,1,4,5],[5,-10,-9,-7,-1,8,-1,5,8,8,6],[5,8,10,-3,2,4,4,6,4,6,-1],[9,-5,-5,-7,3,-7,-9,5,-3,8,8],[3,-5,1,1,8,-9,-6,-8,-5,6,-3],[10,7,-4,1,8,8,-2,-7,-1,2,-8],[4,3,10,-1,6,-3,-5,7,1,-1,-1],[7,8,2,10,8,9,-1,-3,-2,-6,-2],[-1,8,-4,-2,3,-4,-1,-1,-10,3,2],[-8,8,4,6,6,4,-3,4,5,7,6],[-8,7,8,9,3,7,-9,7,8,7,9]],[[10,5,9,-7,-10,-4,4,6,-3,1,4],[10,9,7,10,4,-9,7,1,-5,-8,-7],[-2,-4,-3,5,-8,1,5,-1,-3,-6,4],[-10,-7,5,3,-8,6,-2,-10,6,-3,3],[-4,4,-9,-10,6,-7,3,10,5,-3,-3],[-10,1,9,3,-4,6,6,10,10,4,-1],[-1,-6,-3,5,-3,7,3,2,9,4,-5],[5,-6,3,2,8,-9,8,-3,-5,10,-2],[9,-10,9,-6,-6,-10,-5,2,-1,9,-5],[9,1,-4,-8,-7,-2,7,-5,-6,5,-3],[2,-8,-8,-10,-5,8,-5,-1,1,-1,-5],[4,1,-2,7,9,-3,-2,-3,3,-5,3],[5,2,2,-9,-2,-8,5,1,5,3,4],[-10,-10,-4,6,-5,-3,-9,2,3,-10,-9],[1,9,10,6,7,-3,-7,-2,-4,3,5],[2,9,1,8,-6,-10,5,-7,3,4,-3]],[[-1,-5,-3,4,-2,5,-4,3,-6,1,6],[-3,-6,8,-2,-3,5,10,8,-4,-2,2],[-5,8,-5,-7,-4,5,9,-1,2,4,2],[3,-9,2,8,-9,-10,6,7,-8,6,-2],[7,-5,-7,-6,4,3,-8,7,7,-1,-7],[4,-10,7,-6,-10,4,1,4,-4,-7,-2],[-10,-1,6,-5,8,-7,2,6,-4,-10,-2],[10,8,-4,9,-10,-6,-7,2,7,3,-10],[-9,2,3,-10,5,-2,-3,8,4,-2,-10],[5,3,3,6,-1,-10,-6,7,9,-5,-6],[9,10,-1,-2,-1,4,8,10,-1,-7,-3],[5,1,3,6,6,-3,-7,-1,7,7,-8],[9,9,8,-10,-10,-5,8,9,-9,-1,3],[1,8,-8,9,10,-3,-7,-6,5,3,-7],[10,-7,10,1,6,7,-10,-1,-10,-1,1],[-5,-7,2,-10,1,4,-9,7,-8,-4,9]],[[2,4,-2,-5,3,9,-2,-9,10,4,-9],[-8,3,-9,3,-2,7,-4,-3,3,3,-7],[3,-9,10,-4,-4,-7,-10,-7,-6,5,7],[4,2,-7,9,10,-3,-4,-2,-4,-3,-7],[-9,6,-1,1,-4,-9,2,1,-9,-5,2],[5,-10,-2,10,-7,-2,-2,-4,3,8,4],[6,-5,-6,9,-2,4,3,-4,-3,-10,4],[10,-7,-7,2,6,7,-7,2,3,-10,5],[-2,6,3,-10,2,-6,10,-3,-3,4,-10],[4,-7,-9,3,2,-6,1,-6,4,-9,-4],[-2,-3,8,6,8,-2,-9,4,5,-7,4],[-8,-9,8,-5,-8,1,-5,-1,-7,-2,-8],[1,3,7,7,-10,-2,1,8,4,4,-9],[4,-9,3,-1,-10,-2,-8,-3,-10,2,-1],[-4,1,-4,3,2,-5,8,10,-10,2,3],[1,-5,-8,-3,-1,9,4,7,-7,7,-1]],[[4,6,4,-4,-8,-5,-5,9,4,-6,-6],[-6,-2,-3,9,-5,7,-6,9,-8,-6,9],[7,-1,10,6,10,10,-7,8,-6,8,6],[4,4,2,6,1,-1,-6,8,8,4,-7],[-10,-6,1,2,5,-3,-2,9,8,3,10],[10,-1,-5,6,-5,-10,5,-4,9,4,8],[-8,-4,-7,-6,8,7,6,-4,8,9,10],[-9,10,4,9,10,1,6,2,-6,-9,10],[7,-8,-5,2,2,2,9,-5,-1,10,8],[-1,7,1,-2,-3,-6,5,9,-1,-1,10],[10,-10,10,-3,5,9,3,10,-10,8,4],[-9,3,2,2,3,9,3,5,-8,-9,-4],[6,10,7,-1,-1,3,-2,-5,-9,8,-4],[-7,-6,9,1,-8,7,2,5,-4,6,10],[4,-2,-4,1,9,6,3,1,-7,1,-6],[-8,6,7,1,10,3,-8,-10,6,9,7]],[[9,5,8,2,9,-6,3,-9,-3,2,8],[-6,1,10,-5,-1,6,10,4,-9,-1,-1],[2,-1,-6,-2,2,-3,-9,-10,-3,-9,-9],[-4,-1,7,9,8,-6,4,-1,6,-4,4],[-3,8,-7,4,5,8,-10,2,3,-1,-1],[10,-3,3,5,-1,-4,-4,-5,5,-8,-10],[8,-10,-3,7,-7,-6,-3,-10,-8,7,-9],[1,1,5,-8,8,6,6,-10,-3,-2,-7],[-8,3,7,8,-3,1,-4,3,-1,10,10],[9,9,-7,1,-5,-3,4,10,-8,-10,7],[7,-8,3,-8,-1,3,8,-10,3,7,4],[6,5,7,4,9,-3,2,4,1,8,7],[1,7,3,-8,9,-8,-9,-8,-8,6,6],[9,9,-7,-1,7,2,-6,9,-1,-9,1],[-6,4,-7,-7,-10,3,6,8,-4,3,-8],[2,-4,-6,-4,2,-7,3,-7,-7,7,-6]],[[-9,2,9,1,4,-7,-8,1,9,9,-2],[-7,3,5,5,-2,-8,-10,-2,6,-6,-6],[5,6,3,-7,-8,-1,10,10,9,-10,8],[4,2,-6,3,3,-9,10,-4,6,-3,4],[5,1,-4,9,-2,2,2,-4,-1,-1,-8],[4,-9,-6,7,8,-2,6,-1,-9,-7,-8],[-10,6,-1,-4,9,1,-6,10,4,5,-8],[-5,-5,1,5,5,-4,-9,-7,2,-8,-3],[7,-10,-5,1,6,-2,10,7,5,-3,2],[-1,-4,6,-5,6,4,7,1,-3,-3,9],[8,-9,7,-9,-3,-7,-3,-8,-2,2,-2],[-7,6,9,-3,-3,6,2,-3,10,3,-2],[10,7,-6,-10,-10,1,-5,5,1,-8,9],[10,-3,7,-10,4,-1,-4,2,5,-10,-7],[-9,4,-2,8,-4,-3,-9,-3,-3,8,10],[1,7,3,4,-4,-6,-4,-3,-10,-1,4]],[[-7,-10,7,-4,-2,-8,-3,-6,-3,-2,1],[7,-10,-10,2,-2,2,9,10,6,-8,-2],[-5,10,1,7,1,5,-1,-4,-9,-1,-8],[2,-4,3,1,5,-4,-4,-8,-4,-6,-2],[-3,1,-3,-5,-3,-1,5,8,-9,-4,7],[-5,-10,8,9,-3,6,-4,-6,-2,-8,-7],[8,1,-10,10,2,6,6,7,4,10,4],[9,-5,-1,3,-7,5,8,-2,3,-6,7],[-3,-9,-6,4,-3,10,-3,2,-8,9,-7],[-9,9,-5,10,-9,8,-9,7,4,8,9],[-6,-9,1,8,-7,9,8,1,7,3,7],[10,5,3,2,5,4,2,2,-5,6,6],[-7,-4,-4,8,8,5,-5,-9,2,-5,-9],[-4,-7,-1,1,9,-2,-2,9,-8,-9,-4],[-1,3,6,10,5,8,2,-6,-7,-3,-9],[7,-5,7,-10,-10,2,4,1,5,9,9]],[[3,6,-2,8,4,-9,10,2,-5,-1,-6],[-8,3,5,7,5,9,9,-2,3,4,-6],[-6,-6,-3,-9,-4,-7,10,-10,6,-8,-1],[-8,-8,1,-3,-6,-5,9,1,-8,6,-3],[7,-5,3,2,4,6,-1,4,6,-2,-4],[1,-10,2,2,2,1,4,5,-7,-8,-1],[-2,4,6,-8,-6,6,6,3,5,1,5],[9,3,-10,-1,-9,-5,10,8,4,7,-3],[-9,-4,2,-2,1,10,7,5,9,10,9],[-9,-8,-5,4,1,-4,10,8,-6,1,-3],[4,-8,-1,10,6,9,2,-10,-1,10,6],[1,9,-3,3,-3,-5,9,7,8,-9,-1],[10,-9,-2,6,8,2,-7,2,-4,-7,5],[-6,7,10,-2,9,2,-5,-7,-4,10,-4],[2,7,10,6,-1,-10,8,-4,-8,-2,-1],[7,-8,4,-7,-7,6,-9,-9,2,7,8]]], dtype = "uint32")#candidate|1914|(15, 16, 11)|const|uint32
bop_1915 = relay.less(const_1913.astype('bool'), relay.reshape(const_1914.astype('bool'), relay.shape_of(const_1913))) # shape=(15, 16, 11)
output = relay.Tuple([bop_1915,])
output2 = relay.Tuple([bop_1915,])
func_1922 = relay.Function([], output)
mod['func_1922'] = func_1922
mod = relay.transform.InferType()(mod)
mutated_mod['func_1922'] = func_1922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mutated_mod.get_global_var('func_1922')
call_1923 = func_1922_call()
output = call_1923
func_1924 = relay.Function([], output)
mutated_mod['func_1924'] = func_1924
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1936 = relay.const([[[4,-8,5,-5,3,3,-7,-6,3,3,-7],[1,-1,2,-6,7,-10,-8,-9,2,-5,7],[5,4,-5,-6,-5,8,4,6,-8,-1,-10],[-5,-2,-10,-3,10,-10,10,1,-8,4,4],[3,-1,3,-1,-1,-1,-3,-9,-7,8,5],[-3,-3,5,-6,-7,-9,9,-10,-6,-5,3],[5,8,-3,9,2,4,-2,5,10,-6,10],[-2,4,-3,-2,-10,-10,-10,5,-3,-3,2],[-8,5,9,-6,7,-1,-5,-1,-1,-5,-1],[4,-8,1,-5,-9,2,-10,5,9,-3,2],[-5,6,-6,-4,8,1,6,7,6,4,-10],[-8,10,5,-10,-1,10,10,8,10,-4,4],[-4,-1,7,-10,-10,1,8,5,-3,-4,6],[10,7,-2,3,-1,8,-9,9,-3,-8,9],[2,-5,-2,9,-10,-2,1,10,-1,-10,4],[6,-9,-2,-3,4,-7,-2,7,-7,-2,-5]],[[-4,-4,-7,5,-6,-5,-10,-3,-10,-2,-7],[5,6,10,-10,1,-10,-8,1,-8,-6,3],[10,1,-6,-6,-7,-6,3,-3,1,-7,-8],[9,10,-8,10,4,-1,3,-8,-10,-2,-8],[-4,-7,4,7,-1,-3,4,9,5,8,-8],[3,10,9,-2,6,-9,-1,7,4,4,10],[1,4,3,-3,-2,7,4,3,-4,-1,2],[-5,-10,6,8,-4,5,8,1,-9,10,7],[1,-1,9,-7,4,1,-10,-9,-2,9,2],[-5,9,-8,-1,4,-4,-6,-6,5,4,-5],[-2,-3,9,4,-9,4,5,8,6,-8,8],[-5,-5,-8,6,-3,10,-5,-10,-8,-7,9],[-4,-8,3,-1,7,7,6,-3,1,-3,4],[7,6,-4,-10,5,-2,-6,-8,-5,-5,-1],[10,-5,1,-9,7,-10,-3,-8,-7,-1,-7],[-3,-6,-1,3,-1,-7,-1,4,3,7,-6]],[[8,-7,6,-4,-5,-7,-3,1,2,8,-8],[-8,-10,6,6,2,-6,9,-5,7,9,-2],[-2,-10,-4,-4,7,7,-4,-9,-6,6,-7],[6,-9,-5,-6,-3,-1,5,-9,-8,-2,8],[-9,-10,-7,7,-3,-10,-7,-3,2,-3,6],[8,8,6,2,-8,10,-6,-6,2,7,4],[-7,-8,10,1,9,3,-7,9,-2,10,7],[-8,-10,-2,2,-10,-2,7,-10,-10,-8,-8],[2,4,-4,-6,2,-4,4,-9,4,3,-10],[8,1,-10,-2,3,4,10,4,7,-9,8],[6,10,-7,-6,5,6,3,-4,2,1,-7],[-4,-8,-6,-1,-10,2,-9,-3,7,-10,-4],[8,-9,5,8,2,4,-4,-7,-7,-4,-5],[9,9,-5,-8,1,7,8,-10,8,10,-4],[-4,-9,-7,1,7,1,-3,-2,-7,7,-3],[-8,3,6,9,6,-8,4,8,-9,-5,-3]],[[-7,1,10,-10,5,5,-5,9,-9,-7,10],[4,9,4,-2,-4,2,4,3,4,-3,6],[-9,2,-8,7,-10,-7,-4,1,-8,8,-2],[1,-8,5,-3,1,-4,2,-10,1,1,7],[6,5,6,-3,8,4,-8,-9,-8,3,-3],[-5,5,3,1,-3,-1,-3,2,5,-10,7],[-8,7,9,9,4,-5,9,4,1,6,-6],[10,5,-1,6,2,-6,-3,8,7,7,2],[-3,5,6,9,-2,-1,6,-3,1,10,4],[-2,-7,-6,-4,-10,7,-4,-7,-4,-2,6],[-8,-2,-4,-6,-8,-1,-1,9,9,4,-5],[8,9,-10,8,1,-7,-7,-7,-9,3,-10],[-9,10,10,-4,2,6,-6,4,-4,-4,-10],[-4,-3,-2,5,3,-2,-3,-8,-7,1,-4],[10,2,5,-9,-6,1,-5,8,-8,-5,-3],[-5,7,1,-5,-6,-3,3,6,-2,-4,-4]],[[10,1,2,-8,-4,3,-5,9,9,7,4],[9,-9,-2,6,3,7,-1,10,3,-2,-5],[-3,9,2,4,-3,7,6,6,-7,-5,3],[-3,-7,8,5,8,-10,9,-2,-9,6,8],[5,-3,5,7,5,-2,6,-4,3,-8,1],[-4,-10,10,7,9,4,-6,-1,-8,5,-9],[-9,-4,8,-3,7,4,10,-5,-5,-1,-6],[9,-10,-4,-6,7,-9,-8,-1,8,8,-7],[-7,7,9,-1,7,-2,7,-3,10,-10,9],[6,9,-1,-5,7,-3,1,4,-6,-2,-7],[4,-3,10,-3,-1,10,-2,-9,9,6,10],[-3,1,-5,-8,3,-4,8,2,-2,10,-5],[3,9,9,4,-5,6,-6,9,5,8,10],[1,7,7,5,2,-5,10,8,-5,-10,-7],[2,-2,9,6,6,-1,1,4,1,6,9],[-2,-7,-8,-8,5,2,-8,-5,-10,2,-6]],[[1,-2,8,-10,1,3,-9,-7,7,-8,9],[-10,10,9,-1,-8,-7,-5,-8,1,9,9],[5,6,10,-1,-9,7,-8,3,1,2,-2],[10,-3,9,-5,3,-8,1,2,9,2,-3],[10,10,7,-9,8,-9,10,-7,8,-4,9],[-4,-7,6,-9,-10,5,2,1,-1,1,-3],[9,6,10,-6,7,-1,7,6,6,-6,-7],[3,10,-8,-5,1,-1,-5,-9,9,3,2],[7,7,-3,4,-1,-7,-2,-3,-6,-3,3],[5,9,10,3,-3,10,-4,2,3,5,-6],[5,-4,-6,-9,4,-5,-9,4,-6,2,4],[-9,4,-10,3,7,-9,-10,-7,6,-2,-4],[-7,-1,-5,1,1,-6,3,5,5,-4,3],[9,-1,-3,7,2,-4,-9,7,8,1,2],[-3,-1,-1,3,9,5,-1,2,4,4,-10],[8,-4,-5,2,8,-8,-4,-4,-2,2,-2]],[[8,3,-2,1,-1,-9,-5,9,-6,3,-5],[-3,-7,-3,-4,2,-1,-5,3,4,5,6],[-10,7,1,9,10,-9,9,-6,7,7,6],[-2,8,-10,1,-4,2,-6,3,10,-9,2],[1,3,7,-7,-3,-1,-6,5,8,8,-1],[2,-10,-7,9,9,7,-9,3,9,-4,-7],[3,10,1,1,2,6,-6,-3,2,7,3],[8,-10,1,9,-8,10,-4,-4,1,-8,8],[-9,9,2,-5,-9,-10,-9,-5,-9,-3,-1],[-1,1,10,8,3,8,3,5,-6,10,-5],[9,1,5,8,-8,8,1,-9,6,10,-4],[-6,2,7,-8,-3,4,-6,6,2,4,-5],[10,6,8,1,-1,-4,7,-5,4,3,-3],[-5,-4,5,9,-3,-6,4,-4,-7,-2,-8],[-2,5,2,-2,-8,4,-3,7,10,10,8],[-1,1,-9,-9,-1,1,-7,-3,-10,5,2]],[[-4,10,9,-10,-8,-9,-9,9,3,-10,-5],[9,-3,8,2,8,8,-10,9,-2,-10,-3],[7,-8,-1,7,5,-3,-5,-8,10,-3,-3],[-3,-2,9,-6,-3,-6,5,1,-5,-8,-5],[-1,1,7,2,-6,10,2,2,-4,10,7],[-7,-7,-3,3,9,-10,-5,-4,-5,-4,10],[6,1,-8,10,-6,6,-1,8,8,8,-8],[3,10,2,-4,-7,6,-2,2,-2,1,2],[8,6,9,-3,6,9,-3,9,7,2,7],[10,8,-8,1,-2,9,-4,-3,7,3,7],[-9,7,-6,9,-3,-3,-10,-1,-10,-7,-3],[1,-8,-9,-2,-8,5,-9,2,-6,-7,-7],[1,-8,-1,2,-8,1,-1,8,7,6,-1],[4,-3,10,1,-8,3,3,-1,-7,-10,-4],[1,4,-7,-1,-7,2,7,-1,7,-1,3],[4,1,-2,2,-1,7,-2,-8,-3,-9,-5]],[[6,5,7,-4,9,6,-1,-2,4,7,-9],[-10,-3,-1,7,-9,6,-6,1,3,8,-2],[8,2,-5,7,-10,-2,9,5,1,-9,-9],[10,-5,-2,2,1,-7,-6,-4,8,-10,-4],[4,-5,5,-2,10,-6,4,-7,-1,-10,3],[-3,-1,-8,-3,-1,4,-4,1,3,9,-6],[7,-3,2,-9,9,2,4,2,6,4,9],[-1,5,2,5,-7,1,-3,3,-10,5,-4],[-5,6,-10,-3,8,9,-8,-7,9,7,6],[-3,-3,3,6,-9,-6,4,3,6,1,-7],[8,-2,-8,7,1,2,4,4,-3,-4,-5],[-4,6,-4,-5,6,2,10,-8,-1,8,5],[-9,5,1,10,8,6,5,-8,10,-6,3],[2,5,-10,-9,9,3,9,-3,-10,4,-6],[-8,1,-10,10,-5,3,-6,-4,-8,-2,-7],[5,-9,-5,-10,3,-5,6,1,9,6,7]]], dtype = "int32")#candidate|1936|(9, 16, 11)|const|int32
var_1937 = relay.var("var_1937", dtype = "int32", shape = (9, 16, 11))#candidate|1937|(9, 16, 11)|var|int32
bop_1938 = relay.less(const_1936.astype('bool'), relay.reshape(var_1937.astype('bool'), relay.shape_of(const_1936))) # shape=(9, 16, 11)
output = relay.Tuple([bop_1938,])
output2 = relay.Tuple([bop_1938,])
func_1946 = relay.Function([var_1937,], output)
mod['func_1946'] = func_1946
mod = relay.transform.InferType()(mod)
mutated_mod['func_1946'] = func_1946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1947 = relay.var("var_1947", dtype = "int32", shape = (9, 16, 11))#candidate|1947|(9, 16, 11)|var|int32
func_1946_call = mutated_mod.get_global_var('func_1946')
call_1948 = func_1946_call(var_1947)
output = call_1948
func_1949 = relay.Function([var_1947], output)
mutated_mod['func_1949'] = func_1949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_1953 = relay.TupleGetItem(func_1922_call(), 0)
call_1954 = relay.TupleGetItem(func_1924_call(), 0)
var_1957 = relay.var("var_1957", dtype = "bool", shape = (15, 16, 11))#candidate|1957|(15, 16, 11)|var|bool
bop_1958 = relay.mod(call_1953.astype('float64'), relay.reshape(var_1957.astype('float64'), relay.shape_of(call_1953))) # shape=(15, 16, 11)
bop_1961 = relay.mod(call_1954.astype('float64'), relay.reshape(var_1957.astype('float64'), relay.shape_of(call_1954))) # shape=(15, 16, 11)
output = relay.Tuple([bop_1958,])
output2 = relay.Tuple([bop_1961,])
func_1964 = relay.Function([var_1957,], output)
mod['func_1964'] = func_1964
mod = relay.transform.InferType()(mod)
var_1965 = relay.var("var_1965", dtype = "bool", shape = (15, 16, 11))#candidate|1965|(15, 16, 11)|var|bool
output = func_1964(var_1965)
func_1966 = relay.Function([var_1965], output)
mutated_mod['func_1966'] = func_1966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_2119 = relay.TupleGetItem(func_1922_call(), 0)
call_2120 = relay.TupleGetItem(func_1924_call(), 0)
func_1946_call = mod.get_global_var('func_1946')
func_1949_call = mutated_mod.get_global_var('func_1949')
const_2127 = relay.const([3,-6,9,10,-3,3,7,-4,-5,-3,3,5,-3,-6,-1,5,-6,4,8,1,2,5,-8,-10,-7,6,-7,1,-2,-4,-9,6,2,1,5,-1,6,6,-4,-10,1,10,-9,-10,7,-1,-7,-2,-8,-8,4,7,5,5,4,-2,-1,5,-3,-8,-10,-9,-5,-5,3,-3,-3,7,6,1,7,-6,-6,-6,-7,1,3,-4,2,-1,-5,4,-9,-7,-4,6,2,10,3,4,10,7,7,2,-1,4,9,5,10,-2,2,6,10,-9,1,10,3,3,-9,7,9,-7,1,8,-3,6,10,9,-5,2,-4,-7,10,-6,4,10,-7,4,8,-9,-2,-6,4,-4,-6,7,9,-8,4,7,-7,3,-3,-4,-9,-1,6,5,5,-1,6,-2,3,-3,3,-5,6,-6,5,1,1,-6,3,8,-3,-10,8,1,1,-8,-3,-5,-5,1,1,5,-5,-10,4,-8,-9,-3,10,10,-9,6,-5,2,-5,9,4,9,-5,-2,1,6,-10,-10,-5,4,1,6,4,-6,-1,-5,1,8,7,6,10,9,-1,10,9,9,-3,-8,3,6,-10,-2,-6,-6,-10,2,-4,-10,10,-2,4,-1,-8,-6,4,6,-2,7,-9,-3,-7,9,-6,6,-8,4,-2,9,-3,-1,-6,3,7,5,2,7,3,-1,-4,4,7,-4,-5,1,9,-7,10,2,-9,-7,7,10,-9,-10,2,-5,-3,10,-3,8,-2,8,2,-3,-8,-1,2,8,6,6,-5,-7,-1,8,7,-7,-8,2,4,-10,4,1,5,-9,9,-7,6,3,-2,-3,-5,-9,-5,3,-6,6,-6,-8,-6,2,-4,-10,-4,10,-1,6,-3,-9,3,2,6,-1,-4,-3,-8,6,3,-2,6,-4,5,7,2,6,9,-9,5,7,-7,-8,5,-6,-9,-9,8,-5,3,1,-7,3,7,1,1,1,-10,2,-4,-6,-7,-9,-8,10,-6,7,9,1,3,8,-2,2,10,9,-4,-7,10,6,4,-9,6,-6,-9,1,-9,-6,9,-2,5,3,6,10,7,6,-1,-2,5,2,-2,-8,5,1,3,3,5,-7,5,9,-3,-5,-3,1,-4,-4,7,7,-5,6,-4,-7,-4,-1,10,-2,6,7,-4,-1,-1,-5,6,-10,2,10,6,4,10,10,-5,4,10,5,10,-2,-1,-1,1,-8,9,9,-3,-5,10,6,-8,1,4,1,1,4,2,-9,-9,6,-4,1,-9,2,-10,7,1,-5,3,8,1,6,-9,6,1,-4,-6,2,-1,-5,5,10,-9,8,3,5,-9,-9,7,4,5,3,-3,9,1,7,-7,1,-4,-7,6,4,5,2,9,10,-4,-7,9,-10,-1,4,6,3,4,-10,4,-6,7,2,3,-2,-4,3,7,4,2,6,-3,9,-1,-10,3,5,-5,8,9,-5,8,-8,1,1,-10,-3,-5,4,1,10,-1,6,2,-4,-1,-5,6,4,-5,-3,3,10,8,4,8,-3,-1,-5,-2,-5,7,-4,7,-2,-4,-7,-9,-4,1,-6,4,-7,10,-9,2,-7,-7,-4,10,5,1,2,-1,8,-6,10,-6,4,-1,-8,8,4,6,-8,-5,2,-6,-9,1,-8,4,7,-5,5,6,10,9,-9,-3,-3,1,8,10,-6,-5,-9,10,-6,-9,-10,-4,-8,4,8,-6,8,6,5,-3,8,5,4,3,2,-3,-8,-3,-2,6,6,2,-9,10,-4,-5,9,-10,-7,7,7,-2,-6,3,-1,7,1,3,-8,4,-6,-6,10,9,1,9,-5,4,5,1,-6,-5,-10,9,-1,-1,3,-1,-5,2,-8,5,1,7,7,-4,-6,2,-7,-3,-3,5,-4,-8,-1,-7,1,-4,-3,8,9,-3,-3,3,5,10,4,1,-6,-9,9,-5,9,-3,-2,-2,-7,8,-1,1,8,-5,9,-10,-7,1,6,8,-9,10,4,-2,1,2,-2,-10,-4,-5,-1,9,6,3,8,-1,-4,8,-7,10,10,-9,-3,-5,6,-2,-4,4,-3,-4,-10,-7,8,-2,-6,2,-2,-10,-4,4,4,-6,10,-8,10,-3,-1,-5,-8,5,-9,3,9,-8,8,-4,1,1,-1,2,3,2,-10,2,-3,-3,3,6,9,7,-6,-10,-1,8,-9,5,-8,5,-3,-5,3,9,-5,-10,-8,2,9,3,-10,-4,-3,-1,4,-10,-3,5,4,4,10,-2,10,-4,-5,-1,-8,-3,1,-4,10,-4,-9,-10,5,-10,7,-3,7,6,-2,6,1,3,-5,-9,-10,-1,5,10,5,-3,4,-1,-3,3,-5,7,2,8,-8,-4,3,5,-9,8,-5,-8,6,1,6,5,5,-5,-4,6,-3,10,8,-4,10,-10,-2,5,-6,7,2,-3,-8,6,3,-5,4,2,3,-8,-7,-10,-7,-9,3,6,2,4,8,-1,4,7,3,10,7,-9,-6,-5,5,-7,2,6,3,-3,2,1,-1,-3,-10,-10,-9,-1,-9,-10,-10,5,-10,-7,10,3,-3,-7,-5,-9,-3,9,-10,-9,-7,-1,5,1,6,-8,6,-2,6,-5,10,-5,7,-5,4,-3,-2,-8,-2,-2,-6,7,-2,3,10,10,-6,-3,8,-9,1,-3,-6,-1,3,7,4,1,4,-7,-6,4,-1,-6,-4,-1,-4,-9,-9,-7,4,10,-7,-5,9,-5,8,-8,6,-7,-6,7,-5,10,-7,-6,10,-10,-1,10,-8,4,4,-4,-5,-1,1,10,-4,-2,7,3,-6,-6,9,-8,3,-2,5,9,7,10,8,6,2,5,5,-9,-5,9,-5,3,-8,-6,1,2,7,-7,-2,9,10,5,5,6,1,4,-4,-3,-1,7,4,1,-1,-8,-3,9,2,7,-8,-7,-2,-2,-7,-9,3,2,5,-1,-4,-9,6,8,-2,7,-10,6,5,-8,-6,-5,-5,8,-10,6,8,1,-5,-1,-6,6,3,9,1,-4,-8,-6,6,5,-3,-2,-8,4,-1,-10,-5,4,10,10,1,-8,5,-2,-10,-8,9,3,-2,3,-3,-2,-1,8,10,-3,-4,-9,-7,-9,-9,-1,9,-8,-2,-6,-3,-3,5,-6,-1,-5,1,3,9,6,-1,8,10,10,-4,7,5,4,1,-4,-8,-7,-6,-7,-2,-5,-10,2,-7,-4,-7,10,10,1,-5,-4,-3,-4,-1,4,-5,-6,-1,7,-9,1,-1,-7,7,2,2,-7,-9,5,-3,3,9,-3,6,-8,-2,-10,-2,-3,4,10,-3,2,-7,2,-8,-8,-4,7,2,4,6,6,-10,6,-6,1,-5,-3,-10,4,10,4,4,4,1,-7,-2,7,-4,8,-1,-9,-4,3,-9,-1,-1,-5,-10,-1,6,8,-1,-2,7,-4,10,7,8,-7,8,-6,-7,-6,-9,-8,4,-5,-8,-1,6,5,9,-10,-3,1,-7,2,9,10,4,-5,3,-3,-6,6,-8,-7,-5,3,6,-1,3,8,3,2,-6,-6,-8,10,3,-7,8,-9,3,-1,6,-1,-7,-2,6,8,4,1,-10,5,6,6,6,-7,5,-7,1,-3,8,9,-1,8,-8,7,-9,-3,4,10,-3,8,-8,3,4,8,-1,-8,3,-8,-6,-10,7,3,-5,1,2,7,6,-9,-6,-4,5,1,-1,-8,-6,-3,4,-6,1,-8,-9,-4,5,-7,2,9,-7,-5,9,-7,-4,10,6,-8,5,9,10,-1,9,-9,-3,-8,9,1,1,-5,-6,-4,10,1,-9,-9,4,-8,-8,-3,5,1,9,6,-10,4,5,-10,3,2,2,2,1,-8,-9,2,-4,-10,7,-2,6,-2,-5,9,4,9,3,9,-3,5,-9,8,1,10,-5,-4,-8,5,9,-1,-5,6,-6,-4,-5,3,-7,9,10,-10,2,9,10,-5,-7,-9,-9,-10,3,5,4,-2,-8,3,-10,6,-4,-4,-8,3,-5,10,1,-10,6,10,3,3,3,-1,8,5,-4,-8,7,-2,8,-8,-1,-1,6,-1,3,10,1,-9,1,-2,-4,-1,-6,5,2,10,4,4,-5,8,-8,-4,-2,-7,10,9,-4,6,1,3,-5,-1,-6,-8,8,9,-4,5,9,-8,5,-4,8,-8,-1,6,-4,4,10,1,8,5,4,-6,6,-1,-1,-8,4,10,7,-1,3,-2,-7], dtype = "int32")#candidate|2127|(1584,)|const|int32
call_2126 = relay.TupleGetItem(func_1946_call(relay.reshape(const_2127.astype('int32'), [9, 16, 11])), 0)
call_2128 = relay.TupleGetItem(func_1949_call(relay.reshape(const_2127.astype('int32'), [9, 16, 11])), 0)
uop_2143 = relay.rsqrt(call_2119.astype('float64')) # shape=(15, 16, 11)
uop_2145 = relay.rsqrt(call_2120.astype('float64')) # shape=(15, 16, 11)
func_1570_call = mod.get_global_var('func_1570')
func_1574_call = mutated_mod.get_global_var('func_1574')
var_2164 = relay.var("var_2164", dtype = "uint16", shape = (720,))#candidate|2164|(720,)|var|uint16
call_2163 = relay.TupleGetItem(func_1570_call(relay.reshape(var_2164.astype('uint16'), [3, 16, 15]), relay.reshape(var_2164.astype('uint16'), [3, 16, 15]), ), 0)
call_2165 = relay.TupleGetItem(func_1574_call(relay.reshape(var_2164.astype('uint16'), [3, 16, 15]), relay.reshape(var_2164.astype('uint16'), [3, 16, 15]), ), 0)
output = relay.Tuple([call_2126,const_2127,uop_2143,call_2163,var_2164,])
output2 = relay.Tuple([call_2128,const_2127,uop_2145,call_2165,var_2164,])
func_2184 = relay.Function([var_2164,], output)
mod['func_2184'] = func_2184
mod = relay.transform.InferType()(mod)
var_2185 = relay.var("var_2185", dtype = "uint16", shape = (720,))#candidate|2185|(720,)|var|uint16
output = func_2184(var_2185)
func_2186 = relay.Function([var_2185], output)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_2228 = relay.TupleGetItem(func_1922_call(), 0)
call_2229 = relay.TupleGetItem(func_1924_call(), 0)
output = call_2228
output2 = call_2229
func_2248 = relay.Function([], output)
mod['func_2248'] = func_2248
mod = relay.transform.InferType()(mod)
output = func_2248()
func_2249 = relay.Function([], output)
mutated_mod['func_2249'] = func_2249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_2288 = relay.TupleGetItem(func_1922_call(), 0)
call_2289 = relay.TupleGetItem(func_1924_call(), 0)
func_1614_call = mod.get_global_var('func_1614')
func_1617_call = mutated_mod.get_global_var('func_1617')
const_2293 = relay.const([[9,-2,7,-4,2,-10,-8,5,2,-3],[-2,2,-9,-6,-6,-6,-10,3,-2,-8],[3,-9,6,4,-4,6,10,-9,-2,1],[-1,4,-7,1,-6,-6,-6,9,-8,9],[1,-9,1,9,5,5,9,9,8,5],[-10,2,-7,5,-3,-9,-10,-5,-8,-8],[4,-9,3,-9,2,3,-9,8,-6,-1],[-9,-3,-9,-2,3,-8,-3,2,-8,5],[8,-2,4,3,6,9,4,-6,2,-8],[10,-4,6,7,10,4,3,-7,9,-7],[3,10,-9,8,6,6,3,-7,9,-3],[-9,7,6,-6,-3,7,8,1,4,9],[-5,-6,-7,7,8,-7,8,8,7,8],[9,-5,-3,-6,-8,-8,2,-1,-6,6],[-10,-10,6,-4,-2,-4,8,-9,8,9],[-10,8,1,-10,-10,1,-7,2,-9,-8],[-9,-3,2,7,7,5,-2,-7,4,10],[-2,-8,1,4,-6,-2,-5,-1,7,8],[-3,9,-7,10,4,7,-8,6,-3,-9],[3,4,-6,-6,3,7,10,-3,2,10],[1,1,2,-1,8,-6,3,10,4,-2],[-3,-5,7,-1,9,-5,9,-2,-5,-6],[4,5,-1,-9,-2,-4,-2,-9,-4,7],[10,-4,10,-7,-10,8,-4,-5,10,10],[5,-9,4,5,6,1,-6,6,2,10],[6,-8,-3,-5,-7,4,-10,10,-1,-2],[-8,5,-10,1,4,-6,1,3,8,-6],[-3,-6,5,9,-2,-5,3,-8,2,-7],[-1,9,6,6,7,9,-2,5,3,-5],[2,-9,9,10,-7,8,-7,-9,-8,-8],[-7,-5,2,-8,3,-1,-1,-3,-8,-4],[9,4,-8,10,-10,-10,-5,-7,6,-1],[-7,7,-5,-10,3,-7,-5,-10,-5,-10],[-9,1,-7,3,2,-2,8,-8,-10,-5],[2,5,4,2,-6,-4,3,10,-4,3],[7,-6,7,-10,-10,-7,-7,-2,8,10],[-6,-8,10,1,1,9,-9,4,6,-10],[9,1,-2,8,-6,-3,-3,-3,10,-6],[-8,-10,-9,-3,-8,-3,4,4,-6,-7],[1,7,2,-8,4,3,2,-8,-8,7],[-6,5,-6,-6,-1,9,3,-7,-5,-5],[-2,10,-2,6,1,-7,6,7,-3,8],[-5,8,-2,3,2,8,-10,10,7,3],[-9,-5,4,-9,-4,-1,-4,9,5,-5],[3,3,-2,-5,-6,8,-9,-10,-4,2],[-8,9,3,9,-3,5,6,9,-8,8],[5,1,9,-8,2,3,4,-1,-1,3],[3,-9,-5,-8,5,6,1,5,-1,-3],[5,-3,7,4,-4,-3,4,-9,-2,-1],[-2,8,-6,-3,8,-10,-1,1,-6,-9],[3,-1,-4,7,7,7,-5,-5,10,10],[6,-2,-2,7,10,-2,10,10,-2,-1],[5,10,-3,-2,3,-2,1,-5,8,5],[-2,9,-8,5,7,1,-4,-1,6,-1],[-7,-7,6,3,6,2,-3,-9,3,3],[9,-10,-2,1,6,6,-2,2,-7,-6],[3,2,-10,-6,-4,-2,2,-8,-5,-4],[-9,-4,3,3,-1,4,6,9,-6,10],[6,3,-4,-4,-9,9,9,3,9,4],[6,5,2,9,-1,-8,-10,4,-3,4],[7,4,-9,9,-2,10,-1,-9,9,2],[8,6,2,-4,8,-9,-3,10,7,-2],[2,-8,-10,-5,6,10,7,1,-6,4],[-7,1,-5,4,10,-2,1,-5,-8,10],[8,-7,-6,2,-7,7,1,-4,1,-8]], dtype = "int16")#candidate|2293|(65, 10)|const|int16
const_2294 = relay.const([3,-2,-4,9,-6,4,1,4,-1,2,-3,-8,-7,4,-9,-8,4,3,2,-4,10,-2,7,4,4,-7,-9,5,-3,-3,-9,-7,1,-1,-3,-1,-2,-3,6,-8,-3,1,-2,-10,-7,-9,4,-7,5,9,-2,8,3,2,9,4,-5,-8,1,-1,-10,3,6,10,10,7,10,-6,9,4,10,-3,-3,1,8,-2,-4,-4,-7,-10,-4,10,4,-8,-6,2,10,-10,-4,-7,-2,-1,-4,-7,-9,-9,-5,10,-5,-4,-1,-4,2,4,-4,10,-9,-4,-8,-5,7,-4,5,4,2,-10,4,6,9,-4,10,-10,-7,-4,-5,-5,-5,7,-1,-1,-8,-8,6,-8,5,-7,-8,-5,-3,-3,8,-3,5,4,-10,10,7,-10,-5,7,4,6,2,10,-10,4,-9,2,8,1,-2,-5,3,3,8,8,5,6,5,3,-7,3,3,-1,5,8,-6,-8,2,7,-1,-2,10,4,-3,1,3,5,1,-8,9,6,2,-6,-5,-6,9,3,-7,-5,3,10,9,-3,-3,-9,-8,8,8,6,-7,2,-2,5,9,8,5,-9,3,-9,4,9,-4,3,2,-7,-2,5,3,1,-2,-5,9,5,3,-10,-1,-8,5,9,1,-6,-5,6,5,-10,-10,-5,-7,3,-4,9,-2,-2,-10,-6,-9,5,5,1,-1,-6,6,-2,-4,6,-9,-7,4,10,2,-7,10,4,3,5,8,7,-5,-10,-5,10,3,-7,-7,-3,4,-2,1,-2,-3,10,-8,-7,5,3,6,-6,-1,6,-3,-8,8,-3,-6,-3,10,2,10,3,1,-7,-9,3,-9,7,9,-1,7,-4,-9,-4,10,-8,-7,6,-9,4,10,-10,-8,3,4,4,5,4,5,-4,-4,-5,-5,9,-6,2,2,-6,-10,-8,10,4,10,-1,6,9,-8,-2,-5,-7,-4,10,-10,6,5,4,6,3,8,10,-1,-3,-3,-2,-6,3,7,-7,10,-8,-9,-2,-2,10,1,1,9,1,-9,-4,1,4,-1,-6,6,7,8,-10,-4,-8,10,-7,3,3,-10,-6,6,-10,5,-9,-1,4,-4,10,5,-3,9,-4,-7,-6,-5,1,-6,-8,8,-2,2,10,10,-3,8,-10,5,9,2,-2,-10,8,-3,-7,-2,2,4,-9,4,9,-10,-8,4,9,-5,-5,-4,-10,-7,-10,5,2,-3,-4,-5,-8,-4,1,8,-6,-3,-7,-3,-5,-6,-1,6,10,6,-8,-7,-9,-5,-8,2,-5,4,3,-2,10,-5,1,-4,-1,-3,5,-7,10,5,-4,-4], dtype = "uint16")#candidate|2294|(495,)|const|uint16
call_2292 = relay.TupleGetItem(func_1614_call(relay.reshape(const_2293.astype('int16'), [650,]), relay.reshape(const_2294.astype('uint16'), [495,]), ), 0)
call_2295 = relay.TupleGetItem(func_1617_call(relay.reshape(const_2293.astype('int16'), [650,]), relay.reshape(const_2294.astype('uint16'), [495,]), ), 0)
var_2296 = relay.var("var_2296", dtype = "int16", shape = (65, 10))#candidate|2296|(65, 10)|var|int16
bop_2297 = relay.bitwise_xor(const_2293.astype('int16'), relay.reshape(var_2296.astype('int16'), relay.shape_of(const_2293))) # shape=(65, 10)
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
var_2308 = relay.var("var_2308", dtype = "uint64", shape = (1470,))#candidate|2308|(1470,)|var|uint64
const_2309 = relay.const([-0.192338,-9.092305,-3.877662,-4.361914,-1.632746,8.448110,0.214583,-5.239048,7.621768,-4.319191,-9.725265,-6.183778,9.492689,2.996590,4.085674,2.048539,3.612021,1.660420,-0.916845,1.806568,-1.681453,1.512875,-9.830541,-5.375585,-6.097636,-2.757712,-4.050406,2.341651,6.270392,9.161710,-4.027077,-7.360941,-2.410656,9.520637,2.377198,7.899645,4.664699,-0.287227,8.926882,9.927468,7.038248,-2.685208,-2.653017,4.106743,-7.582936,7.837432,1.381887,-8.390367,2.348640,-8.113178,4.052933,-2.588006,9.066189,-0.041508,9.319385,-8.186382,1.190856,-2.072438,-8.652158,2.038986,-7.083258,7.477041,-5.128086,-2.334245,8.497244,1.582397,-1.039128,5.731025,-4.361751,-3.027982,-1.896324,-3.770593,-0.344011,6.907802,-6.179640,0.797257,0.444159,-6.223357,5.333342,4.241676,9.233111,4.502404,-2.570032,4.262345,-9.398542,-1.360521,-4.991186,9.541189,-5.194928,-2.302544,1.757944,0.429199,-8.507986,7.671849,-6.144945,5.595759,8.984866,-3.763526,8.634280,-0.408270,0.892280,-4.814443,4.189216,-3.421901,6.850546,-8.983140,3.462290,9.165297,4.092650,7.096439,-5.559828,4.326338,3.855310,8.997312,-7.605520,-8.061799,3.297520,0.860307,-9.859289,-2.487298,-5.625561,4.419461,-7.541361,-8.285946,8.853818,-2.064064,-9.576543,9.056321,5.475689,-0.515443,-2.676742,4.964236,-1.814802,-6.286134,4.577599,-8.642415,0.680936,7.018260,-4.312540,5.478761,5.029826,2.311794,1.147810,1.266776,-0.100702,-5.862598,-9.473054,-6.701468,2.125753,-1.481341,9.858266,-4.652943,-3.362541,-0.246761,9.176896,-9.520648,5.720756,-6.489989,-4.578190,0.933188,-8.212723,3.040064,-4.501270,7.838733,-6.310554,-3.447018,-1.146476,-4.727731,-5.778390,0.546756,-1.507965,-7.842812,-8.553831,-9.969022,-4.229992,3.512640,-0.895999,1.712059,-5.341043,-1.539636,-4.765494,-4.930422,5.217578,5.469412,6.216218,-2.924839,-8.143315,-7.553333,0.926780,1.998528,-2.268928,-1.437744,1.549553,3.509401,-7.382281,-9.815029,-3.071098,9.680489,2.052578,9.129724,-6.507137,-6.864922,-8.951128,5.785850,-2.963763,2.292730,7.553383,6.230870,-1.481033,-8.158931,-0.422200,2.604746,9.508398,-9.997547,-6.335613,7.681406,9.837960,5.190443,-2.696718,-3.973920,-8.734714,-4.412151,0.579271,-9.196988,-5.046860,2.722127,-9.428220,-8.848652,7.966313,-3.076426,-3.804100,-6.789044,-4.383737,-8.154898,-4.775341,4.422809,-3.731751,-0.991672,5.481676,7.074461,5.108094,-8.410962,-5.782433,5.893914,0.333062,0.749498,-4.799072,-2.524767,6.461274,3.034919,0.777592,-9.741404,-5.163564,9.983116,-5.639380,-1.840142,7.144835,5.860454,2.653299,-7.993406,-4.336110,-0.981926,3.268329,7.689203,0.381325,0.205336,2.382914,6.833875,-0.260830,6.806453,2.892954,3.285617,-9.459037,-6.996106,8.526621,0.915680,-0.098964,-8.669129,-9.208857,2.799477,3.604707,-5.979465,-5.326846,-3.769026,-8.410510,6.664045,3.189037,3.756165,4.621594,7.747507,-4.054510,7.220009,0.245497,-8.357358,8.721713,6.929338,-9.930890,-5.985877,4.472520,-7.688156,-1.158674,-1.234151,-9.221368,-2.680982,3.631390,-6.568674,-6.520761,4.617828,-4.285394,0.498425,1.242965,-3.053645,-4.172980,-2.278205,5.257127,5.513341,5.244044,-9.026793,8.365864,5.060857,-6.838981,-7.618217,3.359495,-0.025137,-3.464581,-1.873228,7.220158,9.868335,4.687615,1.906796,-2.761492,-5.642142,-8.563014,5.384624,2.439868,6.561752,7.730249,-8.680344,6.660417,-7.037405,-3.346044,4.090873,0.847176,4.215227,-5.480286,0.950553,-5.253207,-9.807939,-3.563765,-7.907311,0.226374,-3.457022,-5.870798,3.657146,1.949407,7.022088,-0.204284,2.383344,9.319351,-1.146080,-3.006545,0.999650,-8.359977,5.914889,6.530835,-1.892215,6.792918,8.177680,-2.757132,0.215232,-6.392618,5.672035,9.557227,-9.351043,-7.077378,0.248344,1.326842,4.576790,-0.837564,-4.769305,-0.635779,-2.425717,0.215517,8.560269,4.088346,-6.947054,8.604339,-2.335517,-9.234979,-3.894004,-2.975474,4.794998,-1.819060,4.543975,-3.539677,-8.671392,-4.224037,-5.156288,0.408468,9.666759,7.368351,-4.478171,-9.879220,2.741930,-8.265913,6.432290,3.280231,-2.856167,4.090063,3.711403,4.529226,-3.024821,-0.104358,-3.187029,2.641635,-6.917968,7.953198,3.398628,-8.793964,-1.971190,-4.201886,6.085663,5.227002,9.622675,6.748090,-0.847790,3.173692,-0.078556,5.497421,3.814886,4.016312,1.736886,-8.274998,-2.425575,-9.811128,6.178063,-1.349315,-7.079713,-7.959055,-4.074873,-0.715276,3.553370,6.034406,-6.940195,-1.967915,9.101268,7.170434,-3.392444,-6.544431,-9.263255,8.441340,7.456800,-8.443031,1.141398,-9.843774,-1.271950,-3.089803,-6.985978,-1.361023,3.494514,-2.878959,-4.411456,1.305455,3.046306,7.552558,-9.598133,-7.659722,-6.248856,-4.274759,1.290426,0.387231,4.841442,6.185241,0.649373,-9.773205,-0.079972,-6.748141,6.491477,6.031194,2.061753,-4.032664,-9.677397,1.487914,-2.203132,-9.114999,-0.356825,6.735340,-2.320933,9.782705,-4.869428,-6.885165,-2.057251,2.624138,-1.662375,9.629823,0.521035,-3.552952,-0.829931,-9.371222,3.348558,-0.320188,-9.782110,1.265893,8.628376,8.437943,0.271514,-7.628969,-5.750107,9.116390,5.874465,-2.316836,-4.492632,-0.430039,-0.090513,6.649511,3.824430,-2.642137,-0.633765,-5.520462,-4.644115,2.489063,1.760495,-3.212367,-6.315242,3.993564,-7.769847,-8.345365,-4.475913,2.487964,-5.753599,-4.745873,-9.928659,5.782228,-9.850514,-8.278549,8.549346,-4.734602,-1.329369,-8.111009,-4.114681,-1.672562,4.815626,-8.638235,9.611223,6.643540,-2.197409,7.647920,-8.232582,2.083422,0.837265,0.324890,-7.925746,4.296666,-3.615184,9.996054,6.321246,9.711032,-5.777742,-8.854758,7.964319,8.142741,3.988889,8.574821,-1.857116,1.070591,-2.193028,-4.005680,-1.172807,0.134841,-0.340241,-4.719907,-1.909055,-4.918626,0.249706,-4.783169,-0.395174,-0.944844,4.972597,2.932544,6.807388,6.877297,-0.171718,-1.098184,0.137045,5.082126,-8.952921,-7.130339,-2.842755,3.441759,8.247266,-9.232331,-7.437345,-0.641440,-0.956855,4.882364,-1.459208,-3.308002,-4.165890,5.364039,-0.105906,4.125336,-7.256501,-1.627726,4.731261,-1.772619,1.195460,-4.812180,-8.169948,0.537251,1.644022,-0.055067,6.406480,-5.901620,5.022187,-4.774030,-4.679395,-1.475662,9.709239,3.055869,-2.686358,2.443817,7.751026,7.579080,-9.583783,-2.084316,0.682054,5.406047,5.948151,9.311473,-2.152312,5.234262,3.186992,4.289101,-7.568075,1.030200,4.181211,-3.980591,2.986987,-0.682341,6.349166,5.534236,9.776432,4.902036,-6.756767,2.735498,-2.381542,0.599280,-9.573033,-1.944624,-8.790788,8.889440,1.440225,-8.994781,-1.283974,-1.116969,4.346049,-8.396988,7.257389,-3.253178,-1.616491,-8.830948,-4.991392,6.273368,-2.266111,3.698998,7.795635,-6.014350,-3.286253,3.740537,3.505171,-5.511960,4.753959,6.132029,3.911082,-7.829642,3.228798,-8.748628,5.953406,-7.149980,-8.646000,-3.557038,3.313460,-0.278567,6.340008,-4.597094,1.750793,0.223564,0.745578,8.237542,-2.261584,7.667878,-4.029789,9.760240,0.461562,-7.073477,4.235827,1.761743,6.839973,1.728263,-6.568251,-0.529535,-1.164843,-2.333108,-4.416655,-9.694158,-5.270896,7.166845,-4.810339,-3.518645,-0.390847,6.774880,2.587750,-5.877865,-8.746723,8.129616,1.564951,-4.914784,5.859374,-9.866908,1.317956,0.982223,-8.982995,-3.890584,9.575862,-9.965258,5.783206,-2.761165,-6.012300,-9.380140,-4.334993,6.575725,5.617817,0.347653,1.777136,-3.390949,8.905281,-3.047426,-0.167489,-8.223468,6.676616,-8.112709,-8.012616,4.169980,4.709193,1.765602,6.131063,-8.144760,-4.873536,2.295316,3.139345,-6.564449,0.014937,-0.401838,-1.228963,-6.074213,0.924364,-5.119766,6.726405,-6.082503,5.959256,-4.666548,7.521949,7.331162,-2.912620,6.230111,0.048742,-0.498174,-0.877384,-2.870069,1.024605], dtype = "float64")#candidate|2309|(770,)|const|float64
call_2307 = relay.TupleGetItem(func_1660_call(relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(const_2309.astype('float64'), [770,]), ), 0)
call_2310 = relay.TupleGetItem(func_1665_call(relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(const_2309.astype('float64'), [770,]), ), 0)
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
call_2316 = relay.TupleGetItem(func_1660_call(relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(call_2307.astype('uint64'), [15, 14, 7]), relay.reshape(const_2309.astype('float64'), [770,]), ), 3)
call_2317 = relay.TupleGetItem(func_1665_call(relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(var_2308.astype('uint64'), [15, 14, 7]), relay.reshape(call_2307.astype('uint64'), [15, 14, 7]), relay.reshape(const_2309.astype('float64'), [770,]), ), 3)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_2322 = relay.TupleGetItem(func_1964_call(relay.reshape(call_2288.astype('bool'), [15, 16, 11])), 0)
call_2323 = relay.TupleGetItem(func_1966_call(relay.reshape(call_2288.astype('bool'), [15, 16, 11])), 0)
func_1142_call = mod.get_global_var('func_1142')
func_1145_call = mutated_mod.get_global_var('func_1145')
call_2324 = relay.TupleGetItem(func_1142_call(relay.reshape(const_2294.astype('uint16'), [3, 11, 15])), 0)
call_2325 = relay.TupleGetItem(func_1145_call(relay.reshape(const_2294.astype('uint16'), [3, 11, 15])), 0)
uop_2329 = relay.acos(bop_2297.astype('float32')) # shape=(65, 10)
bop_2360 = relay.mod(const_2293.astype('float32'), relay.reshape(bop_2297.astype('float32'), relay.shape_of(const_2293))) # shape=(65, 10)
output = relay.Tuple([call_2288,call_2292,const_2294,call_2307,var_2308,const_2309,call_2316,call_2322,call_2324,uop_2329,bop_2360,])
output2 = relay.Tuple([call_2289,call_2295,const_2294,call_2310,var_2308,const_2309,call_2317,call_2323,call_2325,uop_2329,bop_2360,])
func_2364 = relay.Function([var_2296,var_2308,], output)
mod['func_2364'] = func_2364
mod = relay.transform.InferType()(mod)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2364_call = mutated_mod.get_global_var('func_2364')
var_2366 = relay.var("var_2366", dtype = "int16", shape = (65, 10))#candidate|2366|(65, 10)|var|int16
var_2367 = relay.var("var_2367", dtype = "uint64", shape = (1470,))#candidate|2367|(1470,)|var|uint64
call_2365 = func_2364_call(var_2366,var_2367,)
output = call_2365
func_2368 = relay.Function([var_2366,var_2367,], output)
mutated_mod['func_2368'] = func_2368
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2372 = relay.const([[[-9,6,1,10,-7,-9,-10,-9,-3,-1,-3,4,-4,5,9],[4,4,5,-9,5,5,-3,6,6,-3,2,3,-5,2,-5],[-8,10,10,-7,10,6,-8,4,3,3,-6,9,10,6,-6],[6,-1,-5,-10,1,6,9,6,-6,-3,6,-4,1,-1,-10],[10,-2,-10,4,-1,4,-2,-1,-8,1,8,1,2,-7,-8],[1,-3,-3,-2,-5,-3,10,3,6,-8,3,4,-7,-7,-1],[-3,7,5,-9,6,-10,4,-6,3,10,-9,-9,-8,-1,-3],[2,-7,10,-6,1,-6,2,-2,8,-10,-7,3,4,-2,-6]],[[9,1,-6,8,-3,-5,9,-8,6,6,-6,7,-9,-1,-7],[-8,-7,-4,1,7,2,-2,9,-4,5,3,3,1,2,-4],[10,-9,10,-2,-7,6,10,2,7,-6,-6,-6,-10,2,10],[3,6,9,-5,-9,-9,-4,5,8,-4,8,5,10,2,9],[7,-2,-4,-1,1,5,-6,-8,-7,-5,-3,2,7,-7,-5],[9,-8,5,3,5,5,-5,-9,2,-9,8,7,4,-3,3],[7,9,4,-9,1,10,-4,-7,-7,-10,3,2,5,6,-7],[7,10,9,-2,-2,2,9,6,-8,4,-1,5,10,9,9]],[[4,8,-2,9,-5,8,-2,3,2,3,1,-4,-9,-6,10],[-4,3,-8,1,10,-6,-3,-5,6,-2,-5,5,1,6,4],[-5,10,-2,-3,-6,7,9,-10,-10,4,-7,7,8,8,5],[10,2,-8,-8,5,3,-4,6,9,-2,8,-1,5,-2,5],[-7,-1,-5,-1,-9,-5,-10,7,4,-2,10,-10,-6,10,8],[-9,-10,-1,-9,-8,-1,-3,3,-7,-7,-5,-10,7,10,7],[-3,-10,-7,10,5,4,-10,-7,8,-1,-4,3,-3,-1,8],[-10,6,-5,-1,7,-2,10,-10,6,10,7,8,-9,10,4]],[[9,10,4,-6,-10,-10,8,6,-6,7,2,9,4,10,7],[-4,8,2,9,6,3,-4,6,8,-2,8,-9,-1,7,6],[5,-2,4,-4,2,-6,4,5,-8,1,-7,4,-8,-8,-6],[10,-6,6,-4,5,-10,2,-1,-5,-9,-10,5,-4,-9,-9],[1,-8,-2,9,5,-4,6,-9,5,5,10,2,-7,10,3],[3,-1,-10,-5,10,2,-5,10,-3,-7,8,-4,-1,-9,9],[2,-5,-2,5,2,7,7,-2,3,-3,4,6,-6,-10,-1],[8,-8,-6,7,-8,-5,5,-7,3,2,2,9,-5,8,1]],[[-2,-3,-3,-3,-8,-1,9,5,5,-8,5,-5,8,1,-5],[5,1,-2,-7,-5,9,8,-4,-2,2,-7,9,-1,-2,-5],[5,8,10,-2,-4,-1,-5,-9,-3,-9,2,-2,-8,10,-5],[10,-6,8,6,-4,9,3,4,4,-6,2,10,9,-9,1],[5,-6,8,9,-5,8,8,-7,-5,10,3,9,10,-3,-8],[-4,6,4,-5,-1,7,4,1,8,2,7,-1,-1,4,-9],[10,5,-3,-1,-3,-1,-10,-4,6,-6,1,4,-10,3,10],[-8,5,-4,4,1,8,8,6,-6,5,9,-5,-7,7,-1]],[[-4,-5,4,-1,7,-6,3,2,9,10,-1,-9,3,3,8],[6,5,-2,5,7,-5,-8,10,-6,9,2,-6,-8,9,-10],[5,2,1,1,7,-9,-3,-9,-6,-10,2,7,-5,8,6],[4,5,-3,9,-2,2,-9,8,-5,-4,1,9,7,-3,-9],[-4,-10,8,-5,7,-5,9,-1,-1,-5,-3,2,-6,-7,3],[-8,10,6,-3,-7,8,-9,-6,-8,-9,4,1,6,-5,6],[9,-7,-4,-9,3,7,-7,-2,7,10,5,7,-9,5,6],[-4,-5,-5,5,6,-9,-3,7,9,-7,1,-2,10,-3,-7]],[[-4,5,-3,10,2,8,-7,8,-6,10,-6,5,-9,-1,-8],[1,-1,-5,7,-4,9,10,3,-2,5,-2,2,10,4,6],[-10,-6,-3,7,6,9,-5,3,-9,9,-6,-8,2,-2,9],[-8,6,2,-7,-1,2,10,1,9,8,-5,-3,-5,-8,9],[6,8,3,3,-1,-3,-6,-4,6,-6,-3,1,3,9,4],[1,-5,-1,-1,8,-1,-4,-4,4,4,-6,-3,1,2,7],[9,-5,-9,3,-3,1,-2,2,5,-7,8,-4,-10,-4,8],[-8,1,1,10,-1,5,-10,7,4,-8,1,-6,-6,1,-1]],[[-3,-5,-2,6,10,-8,9,3,-10,8,-10,5,-5,4,-10],[6,-2,10,7,8,5,-4,2,10,6,1,8,-4,6,10],[1,-1,-9,8,1,5,4,10,-9,-9,8,-5,-5,-1,6],[-6,9,3,10,-4,-9,-7,-10,-8,-7,8,-6,-4,-1,-9],[8,4,-3,-3,-8,4,-8,2,-7,-7,-7,10,7,4,10],[-4,1,4,-7,-8,8,4,-2,3,7,4,6,-9,7,-10],[-1,5,-2,-7,-8,4,7,-1,6,-8,4,9,5,3,-5],[9,7,9,3,-8,1,8,-4,6,-2,3,4,8,-1,-1]],[[3,-2,6,-2,7,1,-4,5,9,-7,4,1,-1,-9,-9],[9,-2,6,4,8,-6,7,-9,9,4,9,6,-7,-8,-1],[9,-2,-5,-3,-4,10,10,-3,2,7,8,3,7,-2,8],[-3,-5,2,-3,9,-3,-9,-8,4,-4,3,6,-3,6,7],[1,3,-6,8,-7,7,7,7,-10,-3,-9,-4,2,7,5],[2,-5,-3,-9,10,-9,-9,5,-2,-4,-7,3,7,1,5],[-1,3,1,7,-7,7,-4,-4,10,-3,-5,9,-4,-3,-2],[2,-5,-1,2,-8,5,-7,-2,9,9,6,2,1,-2,10]],[[5,9,-8,-6,-8,-1,10,3,1,3,6,5,7,-4,2],[-4,6,5,-6,6,7,-9,5,10,6,7,3,7,-10,8],[5,-9,7,-6,-6,7,10,-2,-7,-1,6,-2,2,8,2],[-3,9,-9,5,9,8,7,-1,-2,-3,-1,1,-7,-5,-4],[-4,4,-9,2,-8,7,9,3,7,8,8,-9,3,3,-5],[-4,6,-10,1,-2,5,7,5,3,7,2,-9,6,10,-9],[-8,2,1,2,-6,-2,-2,-4,-1,1,-6,-5,5,-8,-1],[-10,10,-7,-5,-10,1,-1,-3,2,-2,1,-7,7,-8,-8]]], dtype = "int64")#candidate|2372|(10, 8, 15)|const|int64
var_2373 = relay.var("var_2373", dtype = "int64", shape = (10, 8, 15))#candidate|2373|(10, 8, 15)|var|int64
bop_2374 = relay.bitwise_xor(const_2372.astype('int64'), relay.reshape(var_2373.astype('int64'), relay.shape_of(const_2372))) # shape=(10, 8, 15)
func_2184_call = mod.get_global_var('func_2184')
func_2186_call = mutated_mod.get_global_var('func_2186')
const_2391 = relay.const([[-9,6,-2,7,4,2,-1,-7,-9,-1,-5,2,9,-5,-1,3,-5,-9,-3,-7,-8,-1,1,-7,6,-5,-5,6,-2,9,1,3,-2,-3,9,-2,-10,5,2,-2,-9,9,3,10,-6,9,2,3,4,-8,5,9,4,-5,-5,-7,3,8,3,1,10,9,2,5,6,-1,7,6,-6,-10,-7,5,2,6,-5,7,5,-7,-7,-2,-8,-6,3,-6,5,9,-4,-4,2,-4,-6,-10,6,-9,2,8,6,-6,-7,9,-10,-6,7,-3,-7,-3,9,-6,-5,-9,-8,-8,2,5,-8,-1,-3,3,4,-8,-2,-6,6,-5,6,-7,-1,-9,1,-2,8,-5,10,-10,5,-9,-9,-9,8,-8,-8,-1,4,-3,3,1,-9,-2,-8,7,-2,-2,3,10,5,-6,-4,3,-6,-2,2,-10,-4,3,-7,-7,7,2,9,1,-9,-7,3,-3,-6,8,10,10,2,-8,-2,-8,4,-10,1,9,8,4,-7,10,2,1,8,10,5,-1,-2,-7,-10,-1,8,-10,5,-8,1,-6,-8,8,8,-7,5,9,8,6,-3,-8,5,9,-4,-2,5,-1,-7,-10,-7,8,-7,-1,-5,3,-4,-10,1,-10,-6,-1,2,-5,-10,-4,4,-9,10,-5,7,-4,-9,1,-6,6,-5,5,8,6,7,-3,1,1,1,8,-4,-8,-1,-6,10,-10,-8,2,-7,1,8,4,-7,-3,-10,4,-7,10,1,-6,-5,-4,3,8,4,-3,-7,-4,-1,1,-1,-7,9,-6,-3,-9,-1,3,1,-6,-5,1,-8,-4,-3,-2,2,-3,-9,9,-1,2,3,8,9,1,4,3,7,3,-4,6,-4,-5,8,-5,-4,3,-2,-3,6,2,8,-2,-3,-6,-9,3,1,-6,-3,8,-6,7,3,-9,-6,8,6,-10,6,8,-8,9,-10,-8,8,4,-8,-1,3,-9,1,-4,7,8,9,9,8,9,-6,2,-3,-7,-7,2,-10,-10,8,8,7,-1,5,-6,-1,-10,1,9,8,5,-4,-7,9,5,-9,-5,2,-5,-7,9,-5,2,-3,-10,-7,-8,3,7,-1,3,9,8,-3,8,3,5,6,-2,10,-2,8,-2,-3,4,3,-6,5,-4,7,8,9,8,5,-6,3,-2,6,-1,-4,5,-2,10,6,-6,5,-5,-9,2,2,-9,-6,7,6,2,-2,-7,-1,2,8,2,-1,-10,7,-6,-9,-7,7,-8,-9,5,9,-6,7,-8,5,2,7,10,-3,-7,3,-7,8,-5,8,-10,2,-7,-5,7,7,8,9,-9,4,5,2,10,-9,-6,-7,-4,-4,9,8,-1,-5,-2,-7,-7,9,-10,5,-8,7,1,-2,-4,-6,8,-10,2,8,-8,-4,-7,8,-3,-9,7,-9,-1,-3,-1,-7,4,8,3,-1,2,-7,-10,8,7,-6,-3,-3,8,-9,-7,-8,4,-1,3,-7,7,5,8,-3,-1,1,6,8,2,-2,4,1,7,6,-4,-6,8,10,-7,2,2,3,9,-1,-9,-9,-5,2,4,4,2,3,-5,7,-6,3,-4,5,10,-4,2,-3,-6,1,-4,2,-6,5,7,-5,-2,-10,-5,-10,4,-5,7,-3,2,7,-8,-1,3,8,-9,-3,-3,9,-10,4,-5,10,4,7,7,1,4,-4,7,6,-6,1,4,1,1,7,4,-9,1,6,1,-5,-9,-3,10,-6,-10,10,-7,7,-6,-5,2,-9,-2,-10,2,10,-4,-10,4,-5,-3,10,5,9,2,10,-7,-4,3,2,1,7,-6,-2,-2,-7,-3,4,-4,9,-6,7,-9,-2,7,8,-9,3,-1,-8,-5,8,1,6,-5,-1,-8,-4,-1,1,-2,6,-3,7,-8,-7,-9,1,-6,-7,-3,-4,9]], dtype = "uint16")#candidate|2391|(1, 720)|const|uint16
call_2390 = relay.TupleGetItem(func_2184_call(relay.reshape(const_2391.astype('uint16'), [720,])), 3)
call_2392 = relay.TupleGetItem(func_2186_call(relay.reshape(const_2391.astype('uint16'), [720,])), 3)
output = relay.Tuple([bop_2374,call_2390,const_2391,])
output2 = relay.Tuple([bop_2374,call_2392,const_2391,])
func_2401 = relay.Function([var_2373,], output)
mod['func_2401'] = func_2401
mod = relay.transform.InferType()(mod)
var_2402 = relay.var("var_2402", dtype = "int64", shape = (10, 8, 15))#candidate|2402|(10, 8, 15)|var|int64
output = func_2401(var_2402)
func_2403 = relay.Function([var_2402], output)
mutated_mod['func_2403'] = func_2403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2416 = relay.var("var_2416", dtype = "float32", shape = (1, 12, 2))#candidate|2416|(1, 12, 2)|var|float32
uop_2417 = relay.log(var_2416.astype('float32')) # shape=(1, 12, 2)
func_1430_call = mod.get_global_var('func_1430')
func_1436_call = mutated_mod.get_global_var('func_1436')
var_2423 = relay.var("var_2423", dtype = "int16", shape = (1, 650))#candidate|2423|(1, 650)|var|int16
const_2424 = relay.const([4.015557,-2.082552,4.484809,-6.950488,-5.318663,-4.331590,4.034305,1.581633,0.647455,1.727067,-8.465351,3.596706,0.172274,8.163665,-2.781215,3.430914,-0.271303,8.345995,-9.027481,4.172247,-5.531504,-6.455986,3.716244,7.989947,-0.971742,-3.629325,-4.193195,2.943918,8.008866,9.772907,-8.187907,5.107531,-6.408650,-1.858842,-1.050639,7.803179,1.775525,-8.289875,9.515952,0.801573,-3.486582,-1.658327,4.233956,-4.009503,-7.461718,4.253238,-9.475114,8.381204,7.136135,5.441348,-6.248689,-8.589945,9.728920,-3.334964,-3.590440,-4.596446,1.322707,2.613519,-0.642457,1.661299,0.416966,9.754015,1.142735,-9.810570,-9.683516,-3.947603,-5.268983,4.395081,8.419061,-5.680943,9.139314,-7.838112,3.491251,-5.286406,5.007503,8.314594,-4.883684,3.891413,4.763023,-5.266151,6.367250,-5.763629,9.354124,3.404109,5.928778,-1.507262,-6.965579,5.064707,-5.672149,-9.169959,9.492670,3.574569,-9.626185,6.625981,-3.956449,-5.857268,-4.353531,-9.205163,-7.337738,-2.494663,3.515428,-8.425320,3.906561,-0.890648,0.483766,-9.223177,-1.047758,-8.600624,-1.986025,-7.472940,9.105358,-7.884013,-7.352629,3.259471,4.547845,-7.856721,-4.122565,-6.973112,0.215870,-7.612743,2.480414,7.435500,-3.067592,8.661236,-4.514119,1.249635,-9.554711,7.436107,-1.142645,1.487730,2.962880,5.554470,-0.320868,7.975383,-4.194024,8.482563,-8.906507,5.781121,-1.177344,2.563193,-2.883176,7.870575,4.151306,6.063537,5.645784,2.131609,2.349312,1.019443,-2.924473,7.775243,-6.744427,4.687460,5.719256,0.307163,8.826327,-2.362549,4.349798,-4.874596,9.109268,2.409046,-1.252395,5.714411,9.333843,6.948076,5.960649,-3.493425,6.912409,7.468053,-3.689147,0.693865,5.147579,8.898641,3.683871,2.737617,-9.256075,3.808915,2.684664,-2.925623,3.129211,3.630133,-5.805325,-2.594324,8.920557,-1.429513,-2.703465,6.817042,-0.348394,2.161863,-9.016698,-7.952591,5.544020,0.814430,-6.629341,5.492274,3.136869,-9.158824,-8.708837,-9.504303,-5.057211,6.361593,-4.809332,0.756818,2.236251,-9.106830,2.413916,-6.304599,-8.067538,-0.667643,9.750231,7.609793,-4.386496,-1.561727,-1.235905,-9.660700,-6.211197,-6.394182,-7.928079,9.861857,-0.537208,1.770512,-9.018664,-4.622309,1.393936,5.198553,-0.590088,5.544592,-0.508587,6.594179,-3.480493,-1.440578,5.783889,3.466519,-6.634803,2.265630,-7.468040,-1.562158,3.905964,-6.448498,4.021490,1.293245,-9.109319,-3.507585,7.107283,5.980007,6.584724,-0.681234,-5.223012,-5.454428,-1.635258,2.848616,-3.743406,4.712358,-2.961919,-2.483669,6.520207,4.417494,0.877042,-5.918350,8.350705,-1.337219,5.771276,2.458954,5.859419,-8.261214,-2.024766,-4.803077,-0.212239,-3.653234,1.105254,-5.897702,-4.760526,-0.911727,-8.120896,-6.575085,5.166936,-2.661945,7.450334,-6.584846,-4.675312,-9.884025,0.877705,0.112219,-2.768052,-4.994007,1.082533,-9.782049,6.498169,7.823664,-3.005179,5.029515,-7.774090,-0.690528,-7.179641,-3.289319,-0.904619,9.882473,-8.195972,6.839902,-7.658681,-6.149031,-4.183098,1.741207,-2.951863,1.780697,5.636862,-7.189639,2.510156,6.927544,5.685128,-0.796090,2.763750,4.738145,-2.383789,-6.600083,6.563861,-6.244416,-9.838222,0.798103,-6.460335,5.329814,9.093776,-4.855457,-0.292269,-8.968600,5.289974,5.737777,-0.702150,-8.555510,2.298247,8.550324,-8.376420,9.932990,-1.527608,2.163783,2.076799,-5.739024,-6.070210,1.182325,-0.743921,-1.029622,-1.042204,-1.628995,5.383764,-0.326427,-9.609463,7.252722,2.924896,3.735957,9.847264,6.650018,0.443553,7.845504,-5.762953,-9.989531,1.101643,-7.498968,6.009279,-1.728319,-0.273096,0.215087,3.649164,0.424417,5.537681,-0.829473,5.356917,-7.103296,6.065112,-6.083725,-2.079572,-9.601679,5.751412,-1.297023,-8.039536,8.430000,6.240482,7.410555,6.095050,1.614625,8.753553,2.441672,9.334518,6.022774,-3.304869,-1.239898,-8.301305,-7.894516,-0.689230,-0.146369,9.863247,0.062928,5.403040,1.302027,7.917122,1.061661,-9.137322,0.359146,-7.415408,-2.347087,-2.882005,-8.712585,-4.142040,-6.813169,2.874175,9.906734,3.429834,6.680560,1.384396,5.869331,8.310614,7.050096,-0.209146,-1.593168,5.601773,0.272269,1.309766,-3.134237,-1.306426,-8.344981,-9.729598,-8.231914,-2.162241,-2.930024,1.428567,-1.490252,-5.789287,-9.317805,-0.023461,-0.549171,-0.683927,1.089737,7.038641,2.206711,1.899493,1.222975,8.917329,2.693054,0.171261,3.708272,9.326110,1.963066,7.767836,-6.755993,-1.422288,9.915762,-8.072350,5.695500,-4.441399,0.604061,-7.751470,2.343124,4.863834,-0.591986,-9.829420,5.200674,4.747933,-4.573054,-1.530344,3.665950,2.850138,4.823510,9.643662,6.781258,1.660173,1.333447,0.351868,9.323306,6.288936,4.494219,7.456350,-0.569541,2.595833,7.767204,4.779961,9.199983,6.564577,6.431852,0.813550,0.489198,9.710393,-6.036581,5.742961,2.069168,2.179941,3.238046,9.183318,-7.691217,-2.436332,9.873004,-0.424588,-8.630214,4.110748,-3.945862,-8.776636,-4.882778,8.110603,-2.913835,-5.586544,2.058141,-5.091344,1.676933,-8.159996,-0.626474,6.458948,0.775544,-2.273544,-6.400443,7.043381,-9.735313,-4.519583,5.571715,-4.799254,-6.191200,-3.649623,-2.869998,-9.415761,-0.468290,8.333872,2.324892,-2.647186,-1.386853,-3.637704,9.184795,-5.084845,0.092984,-0.623481,-4.597359,-3.768176,4.671251,-7.565491,1.907667,2.569823,-2.369066,2.359552,-2.216348,-8.306700,-9.370194,6.960337,-8.320411,-7.285058,-4.541038,-7.555010,7.875876,2.923592,0.241462,-6.764462,6.972070,9.025455,4.665726,2.554415,-6.635866,-1.257698,5.956530,-1.332184,5.241745,2.668173,6.443118,-7.878146,0.387366,-6.370556,-4.889216,7.484327,-1.337378,0.875438,1.340544,9.462679,-5.224756,4.543987,9.862560,0.502600,-6.468409,-2.511493,-6.717137,-6.474972,1.672062,6.902261,6.470914,8.296403,3.994969,2.087586,8.581771,-8.811026,6.386773,3.576428,-0.043402,3.712752,-6.178440,-7.274176,0.234741,-5.539578,4.255839,-6.808184,-9.709950,1.730028,-1.637485,1.742113,8.560428,6.668724,1.216965,-0.138471,1.569466,-7.159506,6.401634,-6.333382,1.034724,5.911796,-3.756253,1.694395,0.797077,-5.814323,-8.962939,-8.579057,-6.463989,-5.334141,-1.660552,2.700227,-5.633694,1.493486,-8.949034,-0.003573,-5.748002,5.238533,9.014500,-2.866815,1.286933,-8.800007,-2.211535,1.255838,-0.587266,-8.047381,-9.703153,-3.996155,7.793275,7.462757,-7.748229,4.583623,9.518882,6.918057,5.167801,-3.627818,0.998637,-6.290801,8.983771,-6.467358,4.993336,-6.945432,-6.444491,7.018562,3.322190,7.600710,-3.571002,-7.034679,6.018016,8.999671,8.957324,4.279767,-5.697777,-6.122765,-2.870585,-7.159221,9.252404,4.271168,0.710645,2.641550,7.903392,-8.097833,5.763062,-9.871142,5.373862,-3.194280,6.796218,6.625179,5.034728,7.167386,-0.628398,-8.682366,-7.967194,4.690456,-7.085806,-5.645061,5.587903,8.286201,-9.867255,-2.952513,6.483084,-1.508508,-0.425055,5.039461,-2.201266,5.511156,-7.915809,-0.186537,-8.171602,-9.073008,9.499690,-9.498083,-2.539538,4.720932,8.308390,-2.158052,-6.253600,4.015330,-3.874331,3.605203,5.498098,6.454256,-4.476386,2.194140,2.204455,7.714363,-6.635623,1.539624,4.483405,6.524587,-1.085578,-2.338802,4.548095,-7.368880,-5.626456,-8.056371,-9.756371,4.832427,8.677452,8.704680,-2.581045,4.011513,5.582430,8.571445,-6.864472,1.790136,-1.419006,1.016668,-2.206156,2.092429,9.834381,-8.221849,3.887192,-5.993730,-5.199321,0.769637,-9.652347,-9.854382,-5.931783,2.333017,-1.757648,6.902991,-0.754905,-8.559144,-7.788907,0.054928,9.402276,-1.393185,3.510592,-2.224387,-3.152675,-9.190594,-6.847402,-1.962474,2.110118,1.381901,0.480559,-9.379366,-4.973292,-0.838553,9.410728,-9.950570,2.388989,4.169179,-4.847974,8.128313,-6.300901], dtype = "float64")#candidate|2424|(770,)|const|float64
var_2425 = relay.var("var_2425", dtype = "uint16", shape = (495,))#candidate|2425|(495,)|var|uint16
call_2422 = relay.TupleGetItem(func_1430_call(relay.reshape(var_2423.astype('int16'), [13, 5, 10]), relay.reshape(var_2423.astype('int16'), [13, 5, 10]), relay.reshape(const_2424.astype('float64'), [77, 10]), relay.reshape(var_2423.astype('float32'), [13, 5, 10]), relay.reshape(var_2425.astype('uint16'), [495,]), ), 13)
call_2426 = relay.TupleGetItem(func_1436_call(relay.reshape(var_2423.astype('int16'), [13, 5, 10]), relay.reshape(var_2423.astype('int16'), [13, 5, 10]), relay.reshape(const_2424.astype('float64'), [77, 10]), relay.reshape(var_2423.astype('float32'), [13, 5, 10]), relay.reshape(var_2425.astype('uint16'), [495,]), ), 13)
output = relay.Tuple([uop_2417,call_2422,var_2423,const_2424,var_2425,])
output2 = relay.Tuple([uop_2417,call_2426,var_2423,const_2424,var_2425,])
func_2431 = relay.Function([var_2416,var_2423,var_2425,], output)
mod['func_2431'] = func_2431
mod = relay.transform.InferType()(mod)
var_2432 = relay.var("var_2432", dtype = "float32", shape = (1, 12, 2))#candidate|2432|(1, 12, 2)|var|float32
var_2433 = relay.var("var_2433", dtype = "int16", shape = (1, 650))#candidate|2433|(1, 650)|var|int16
var_2434 = relay.var("var_2434", dtype = "uint16", shape = (495,))#candidate|2434|(495,)|var|uint16
output = func_2431(var_2432,var_2433,var_2434,)
func_2435 = relay.Function([var_2432,var_2433,var_2434,], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_2459 = relay.TupleGetItem(func_1922_call(), 0)
call_2460 = relay.TupleGetItem(func_1924_call(), 0)
uop_2480 = relay.sin(call_2459.astype('float32')) # shape=(15, 16, 11)
uop_2482 = relay.sin(call_2460.astype('float32')) # shape=(15, 16, 11)
uop_2484 = relay.erf(call_2459.astype('float64')) # shape=(15, 16, 11)
uop_2486 = relay.erf(call_2460.astype('float64')) # shape=(15, 16, 11)
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
const_2494 = relay.const([7,-10,3,7,-5,10,-8,7,6,7,10,-10,-9,-5,-3,4,6,-1,9,-10,4,10,7,-8,-5,-2,10,-9,8,-10,4,5,9,-9,-3,-3,-1,8,10,-10,1,-1,3,10,6,4,-5,8,-6,-2,-5,3,8,3,-9,5,6,3,-8,1,-4,-3,-8,4,-7,-3,3,-8,9,-9,6,-8,-1,-2,-3,-4,1,-5,8,3,8,-10,1,-2,-3,7,-6,-4,4,-8,10,-4,-9,2,-10,7,-10,-9,-6,1,3,-1,-3,-7,-10,5,-7,2,10,7,8,10,-10,-9,1,8,-10,-6,-5,-3,8,-4,7,-4,10,6,5,6,-6,-4,6,2,4,-10,-1,-1,-1,7,-2,4,2,10,6,5,-2,9,-2,6,9,4,-9,8,-1,-7,-5,7,-10,7,4,8,-10,5,-9,9,-7,5,-7,5,9,-2,-2,2,-7,-8,2,8,4,-5,4,-1,6,-8,-1,2,4,4,5,6,6,3,-1,-9,4,-9,9,-9,8,-9,-10,-10,-7,10,2,-3,1,6,9,-8,3,-1,-7,-7,-8,7,7,4,-2,5,-10,2,-8,-1,6,-10,-7,1,-9,-1,3,7,-5,-6,-5,9,-1,5,1,-6,5,6,-5,8,-5,5,8,10,2,10,-6,3,2,-7,-3,-10,1,10,4,3,10,-7,-9,2,10,-1,1,-4,-9,3,-7,10,-8,-3,-2,-2,-4,9,-6,7,2,-2,1,5,-8,3,3,3,-6,6,5,-8,-6,2,-9,8,8,-6,6,10,4,-1,-5,-10,3,8,-3,6,-5,-1,-9,8,9,-8,-7,-10,10,-8,8,-7,-6,-8,3,-8,4,5,-10,-3,-6,3,9,-4,7,-5,2,5,-7,6,-10,-10,-6,10,-7,5,5,-9,-3,3,-7,-6,-10,-6,5,9,-8,10,4,-10,-4,-6,-2,3,-8,-5,5,-5,-2,4,-4,-5,-3,-6,4,10,10,-6,1,-8,-8,-5,4,-9,-4,6,-7,-2,-5,-9,-6,-8,3,9,-5,-2,-9,7,-10,10,1,-3,4,-3,4,7,-9,8,-8,5,-3,-8,5,-8,4,-10,-3,-7,8,7,10,-4,10,10,-9,3,1,6,7,-2,1,5,-4,-2,-10,6,4,8,2,-2,-2,-4,-6,-2,4,3,-7,9,3,-4,2,-5,-10,8,3,-4,7,-2,6,-6,-8,-6,-9,6,8,-5,2,5,-4,-5,-7,2,4,-6,7,-5,-3,2,7,4,-10,6,-10,5,5,9,-8,5,6,-4,-3,8,9,-8,9,-2,2,2,-10,-5,6,7,8,6,3,-5,-1,2,4,-6,3,-4,7,-8,3,-2,-9,3,-4,9,10,-4,10,1,-8,-9,-7,8,10,-3,-9,-4,-7,-4,-7,-6,9,-8,-8,5,5,6,6,8,-10,-9,-7,5,-1,2,-4,-4,10,3,8,5,3,-7,-7,-7,7,4,-10,-7,2,6,10,10,-2,10,-3,5,-6,5,9,-10,7,-10,7,-7,-7,-4,2,8,6,-4,-3,-7,3,-4,-3,9,-10,-8,-6,-3,-7,-9,10,-5,-5,7,9,-7,-5,5,7,1,-4,-4,3,3,-4,-1,10,-3,6,-3,4,-9,4,1,9,9,-1,4,-8,-4,-1,-9,2,8,-1,-6,4,8,-9,-7,10,-2,7,-5,-4,9,7,-6,9,-8,4,7,-9,-4,-3,7,-9,4,-6,2,9,3,1,-4,3,3,8,-5,-5,5,4,-1,2,8,4,10,-3,-9,4,7,9,-7,9,2,-3,-2,-1,-9,-8,-3,-6,8,-7,6,-2,9,2,-6,7,5,-9,6,-9,4,-3,10,1,-1,-6,-10,-9,-10,4,-3,8,-1,-4,6,4,-3,-9,8,-10,8,5,4,8,6,10,3,7,2,2,9,9,5,-4,8,2,-9,6,3,-7,-6,-8,4,2,1,5,-2,-9,-2,9,-6,-8,8,-10,7,-9,6,-1,-5,8,7,-5,10,3,6,2,3,-10,-3,9,8,3,7,4,-7,9,8,10,-9,-1,-4,-8,-2,-5,9,-7,6,-10,-3,7,9,-1,-10,-6,-3,4,10,4,10,-9,7,-5,3,6,-2,-6,-6,9,-8,-5,-1,-10,-10,-5,6,-9,-9,6,2,9,-4,6,-2,8,-1,10,-9,-5,5,-9,-5,3,-3,-5,10,8,9,-6,10,-10,4,-2,-2,-3,-10,-9,-1,8,-1,8,7,7,-1,-8,4,9,-9,4,2,2,8,-7,-2,-2,8,-6,9,10,4,-8,-7,10,-1,-9,10,5,3,-8,6,7,1,8,7,-9,-7,1,5,10,-6,9,2,-3,-7,-9,-2,-9,-2,-2,-7,9,-7,8,4,9,8,-5,5,3,-10,7,9,-6,2,-9,8,-3,-2,8,-6,7,5,4,3,-2,-10,-6,4,9,7,-5,9,1,-6,7,-6,-7,8,2,9,-4,-4,9,10,6,-9,4,10,7,-4,1,1,-2,-1,2,-10,-10,-5,-6,10,-4,-6,5,6,3,10,-2,2,-2,2,-5,-10,-9,-6,2,9,-5,8,1,3,4,6,4,3,2,-10,8,-4,7,-3,7,6,-7,9,-8,9,-6,9,-4,-6,6,5,-7,10,-10,2,-5,7,-5,-7,1,-7,3,-6,8,3,-9,-9,-9,10,-4,-7,5,8,-4,-2,-2,-1,5,-2,-9,-9,5,-5,-7,-6,-9,9,-8,-3,3,-7,-4,-2,8,-4,-10,5,10,-2,5,9,2,8,-4,-4,6,-4,2,1,-9,-6,9,6,3,8,7,-4,5,1,-2,-6,6,1,7,7,1,9,-7,1,3,6,7,1,1,-9,6,-3,9,-10,8,-6,-1,8,8,-5,-9,4,-2,-7,-6,-8,-4,-5,-5,-1,2,-3,-10,10,10,-10,-8,-4,9,5,-10,10,-4,-8,9,3,7,-4,-6,-7,-10,7,1,-10,5,-8,8,8,2,-10,-3,2,-8,-9,1,-3,2,10,-1,6,4,10,1,-4,2,-3,7,-7,10,-1,9,-1,-2,-6,1,-1,-5,9,-9,-8,8,-7,7,-2,-1,7,5,-3,-10,3,9,8,-7,10,9,6,-9,2,9,2,-7,2,-10,-2,-1,4,1,4,9,3,-3,-7,5,10,-5,6,3,5,-10,-4,4,-1,-9,4,-8,-8,-9,5,6,8,8,-5,-1,-4,9,-3,7,-9,-8,4,1,9,9,-4,7,-6,7,6,2,-10,-2,-6,-7,-5,10,-3,3,3,-3,-7,-10,-7,-4,6,7,-9,-8,-7,-1,-2,-4,-4,-4,-1,5,-1,-2,-3,-3,4,-6,8,9,-1,-8,3,-5,-8,-5,7,-8,-6,-7,9,-7,-2,8,-7,5,-7,-10,-4,-7,-3,3,2,-10,-4,-7,-9,-5,-7,10,10,-1,-8,-7,-7,7,7,-2,3,-7,-9,9,-9,8,7,-10,-3,2,-4,-6,-3,1,-6,1,6,-8,2,-2,2,-7,-6,-4,9,-2,6,4,-2,-1,9,-8,2,10,3,-7,2,4,10,-8,-7,-2,8,-4,10,-9,-9,-5,-4,5,7,-2,5,-8,5,3,-6,-5,-10,5,6,10,2,4,-2,-3,10,-9,-3,-7,-1,-10,-5,3,4,7,3,-3,5,-3,8,-6,-3,-3,-10,-7,-3,1,-4,5,-2,7,-10,-4,-2,9,-5,10,10,6,-6,-2,-2,8,7,3,6,7,-2,10,-8,-2,6,2,-5,-5,-3,-9,1,-10,-3,-8,-3,-4,7,-7,-4,9,2,3,2,-8,8,10,9,8,5,2,2,-2,-1,-6,-9,3,6,1,-8,3,-10,-3,-2,-10,8,4,-7,9,-5,-3,9,8,-3,-3,7,7,8,-6,-3], dtype = "uint64")#candidate|2494|(1470,)|const|uint64
var_2495 = relay.var("var_2495", dtype = "float64", shape = (770,))#candidate|2495|(770,)|var|float64
call_2493 = relay.TupleGetItem(func_1660_call(relay.reshape(const_2494.astype('uint64'), [15, 14, 7]), relay.reshape(const_2494.astype('uint64'), [15, 14, 7]), relay.reshape(const_2494.astype('uint64'), [15, 14, 7]), relay.reshape(var_2495.astype('float64'), [770,]), ), 1)
call_2496 = relay.TupleGetItem(func_1665_call(relay.reshape(const_2494.astype('uint64'), [15, 14, 7]), relay.reshape(const_2494.astype('uint64'), [15, 14, 7]), relay.reshape(const_2494.astype('uint64'), [15, 14, 7]), relay.reshape(var_2495.astype('float64'), [770,]), ), 1)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_2499 = relay.TupleGetItem(func_1964_call(relay.reshape(call_2459.astype('bool'), [15, 16, 11])), 0)
call_2500 = relay.TupleGetItem(func_1966_call(relay.reshape(call_2459.astype('bool'), [15, 16, 11])), 0)
output = relay.Tuple([uop_2480,uop_2484,call_2493,const_2494,var_2495,call_2499,])
output2 = relay.Tuple([uop_2482,uop_2486,call_2496,const_2494,var_2495,call_2500,])
func_2503 = relay.Function([var_2495,], output)
mod['func_2503'] = func_2503
mod = relay.transform.InferType()(mod)
var_2504 = relay.var("var_2504", dtype = "float64", shape = (770,))#candidate|2504|(770,)|var|float64
output = func_2503(var_2504)
func_2505 = relay.Function([var_2504], output)
mutated_mod['func_2505'] = func_2505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2512 = func_2248_call()
call_2513 = func_2248_call()
output = relay.Tuple([call_2512,])
output2 = relay.Tuple([call_2513,])
func_2519 = relay.Function([], output)
mod['func_2519'] = func_2519
mod = relay.transform.InferType()(mod)
output = func_2519()
func_2520 = relay.Function([], output)
mutated_mod['func_2520'] = func_2520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_2537 = relay.TupleGetItem(func_2519_call(), 0)
call_2538 = relay.TupleGetItem(func_2520_call(), 0)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
const_2554 = relay.const([-2.022641,-5.994592,-9.609426,9.016503,8.983657,-1.806893,-5.100039,-4.500262,5.765659,8.206865,-5.971332,-6.835753,-9.883177,-4.379384,-4.803775,-8.809773,-8.899811,-1.685788,2.928436,6.233659,9.888414,-2.343093,-4.654349,-0.536548,-4.235330,-4.298260,-1.297304,-7.876941,-7.624155,-4.569882,-4.178248,0.874077,-9.246579,0.184303,3.703281,-2.579117,-3.853460,0.767712,-4.138172,1.638117,5.909018,4.910371,-3.377576,-9.801050,-6.719082,4.106185,3.101092,-0.825446,-1.064965,-7.166894,-8.236834,6.098461,4.412686,-8.254509,-8.802877,-5.144158,9.500414,3.638829,1.942607,3.712016,-5.248920,-2.979114,1.767676,7.921468,4.812933,-0.524625,6.086895,-0.233888,-4.755304,-3.766173,-4.294274,-3.857253,-3.857892,8.845156,3.928686,-6.059100,4.501816,2.405555,7.509356,7.900259,-0.298155,-1.502953,3.916272,-1.435718,0.208122,-6.666840,-0.976728,-4.194366,-6.150174,-9.343701,-1.324305,5.386051,-4.665277,-4.258025,-6.109789,-7.179431,2.292629,-9.433473,7.328179,-3.286372,9.993292,4.238242,1.411930,-1.254046,0.024972,8.258648,1.118025,-8.519799,-3.199923,5.615508,-7.873792,8.076665,4.130574,-3.450056,0.634995,2.086342,1.464626,-5.564947,-3.822302,-1.263488,4.320319,5.189158,-6.013831,-2.517808,6.880525,4.570154,0.334217,5.541018,-3.325854,-6.253372,0.907262,-5.168580,-1.801493,5.956839,-8.516514,-9.164778,-1.266393,-2.755740,7.748945,4.190205,8.738765,-3.718380,1.138297,8.345557,1.590825,2.176453,6.525376,7.829182,-5.815134,6.887705,-5.831205,2.204245,5.677575,-2.999572,-2.920799,1.508588,-8.942141,1.331723,-8.683240,-3.495761,-5.936844,-5.776511,6.480545,4.804421,-4.990071,-8.591967,-4.876757,9.645655,-5.286657,7.417536,7.490764,-5.271599,-4.749311,-2.337047,-8.786108,1.753170,-0.666689,-5.853292,6.221873,-5.066239,-9.290537,1.706820,-1.087821,7.733341,-3.772568,2.922106,3.694887,7.473096,1.323953,-4.370004,-6.517307,-7.269401,2.579666,4.929862,-6.949912,6.710413,-1.209197,-3.486735,7.067005,6.934424,-2.702842,-7.107448,-7.604741,1.286428,3.369850,6.345711,4.521526,-6.232706,8.811558,-4.896710,8.676928,-9.352650,-3.324993,-4.025594,-9.793303,5.626315,9.991407,2.061403,0.021300,5.217426,-7.513826,1.220783,2.393293,8.288531,4.267983,-4.996530,6.937781,-6.959580,4.064736,7.922645,2.865823,-3.694603,-3.846419,-1.510544,2.676740,-1.157714,1.945032,3.157977,-0.568588,9.636328,-6.849048,-7.180008,-3.484027,9.199985,-2.133205,-9.132513,8.477848,-8.559137,-0.051811,-8.735453,-4.657225,2.532624,-1.574822,-8.331249,6.211039,-5.537093,-9.264046,8.954295,1.036851,-8.857259,-5.681121,3.298938,-5.708050,2.801170,1.210894,-2.879774,4.008247,1.435260,-2.272351,-1.045209,4.227122,-6.403519,3.938950,-3.746386,-1.378056,-5.553829,8.501775,2.507356,6.652449,-5.146871,-8.784607,9.481351,4.986430,3.812026,-0.999115,6.642368,-1.334282,6.879679,-0.123616,-2.769813,5.419450,0.428213,9.888693,-4.440438,3.148208,7.990115,9.915691,1.479944,8.024432,-3.590942,-7.970554,2.379737,0.862431,4.516557,-1.010118,0.775968,-4.524025,9.030476,3.836131,8.688945,-7.638565,-5.747259,6.579817,-5.710028,-9.848587,-8.496281,9.446257,8.887931,0.189369,-3.598632,-7.659741,0.486163,-1.975630,-2.221166,-0.235342,-6.311777,-1.827606,-5.042596,6.729330,-6.161940,0.280033,-1.187128,-3.989147,-5.120869,-9.801170,-7.633465,-4.305044,-8.606693,-9.988033,-3.227165,-3.508121,9.751903,5.715322,-8.536700,1.767065,-4.722560,1.415986,4.207056,-4.627324,1.792733,-8.519660,1.465699,2.098512,8.346300,3.364208,-0.641351,-8.661764,-5.497462,1.127213,-9.630643,-3.098961,-1.372005,-9.451774,9.594068,3.606354,2.577729,-5.395548,-0.158256,-4.990937,1.625625,6.826548,3.901507,-8.099749,8.765793,-9.738920,-2.337905,-7.263803,9.113446,-1.470691,7.336591,5.612558,0.732773,8.859431,-8.331758,1.034300,5.495517,6.753737,-5.565751,1.762553,-4.474620,-1.299385,-4.795776,5.374704,9.705102,-5.889607,2.364004,3.984382,-3.611535,-3.515012,4.453331,-6.488456,-9.502642,2.417636,5.524495,-8.776176,3.375808,-7.282823,9.158102,0.713326,7.817212,7.374671,1.225500,8.321434,3.452039,-3.487291,3.425625,-1.963963,8.832186,3.523823,-2.957883,-1.627593,-0.565142,2.105262,-6.369204,-3.990734,-1.667785,-6.782945,-1.687535,5.143087,2.533129,-0.485565,8.193259,-3.227043,8.656302,2.086906,8.930738,9.472704,9.437031,9.538496,7.532763,6.669592,0.074146,7.665665,-8.237014,5.874294,8.899662,-7.452871,-5.359979,4.176587,-4.872334,7.565655,-1.958865,3.779141,6.462571,5.772374,-2.639907,6.098716,-7.444911,-2.923508,0.657920,-9.769494,5.716364,0.784445,9.050126,5.194768,-5.392818,2.858148,2.775304,-0.219881,2.119212,3.719867,-3.573112,6.308958,-4.372479,4.209736,6.260101,-9.403928,0.486766,6.854986,-8.021406,-8.748892,7.860941,2.936768,2.171895,-3.771899,5.057378,-8.583267,-9.782416,-9.258599,0.782412,-0.813187,6.370304,-3.351694,8.382286,7.527792,-4.136686,-9.268266,8.140604,8.110296,8.418219,2.335337,7.980064,-0.940544,6.474706,-3.043534,8.623337,1.919084,9.125516,8.036251,3.475757,-2.857041,-2.586572,-5.029262,-3.769690,-9.202644,1.092764,-4.859158,-2.722889,-0.523345,6.131958,-3.868052,9.315287,1.462990,2.774371,9.797882,9.392968,3.580341,-4.665425,1.077562,6.204086,-6.818235,1.871958,0.719192,-1.967595,1.044707,2.389131,-5.732459,-7.248638,9.836431,-3.091023,-1.455802,1.317150,6.372605,0.236242,-3.876802,0.638630,7.018284,-3.284443,-8.402078,-7.596617,-2.233423,5.352279,7.008231,7.319536,-0.932826,3.743047,6.500057,-4.336197,0.447765,-0.129651,-6.457215,-2.896682,-3.881016,-2.373402,6.489193,4.220641,-2.808065,-9.663435,-6.749423,5.171317,8.933734,6.458613,8.051645,-2.603526,-8.963838,-3.175374,-0.940512,-1.968451,3.278769,0.585876,-0.141603,6.934623,9.717242,-9.222792,2.019301,-7.181323,-3.129798,6.389778,8.655419,-3.543472,-2.710898,-0.952016,-7.588643,-5.699591,-2.751413,-1.045175,-7.614422,2.544649,-4.677855,3.849059,1.137891,-6.853030,1.016510,1.866913,1.965089,-7.286888,8.905114,-0.900147,-2.301424,2.355996,-9.405828,5.002383,1.880546,5.160528,-5.920858,6.099399,-0.123939,2.749980,-9.574829,5.652574,6.577352,2.413889,-6.172677,-7.585177,-8.439897,7.734228,2.256251,1.937264,-0.920898,-7.907960,2.036799,-7.201978,-7.307141,-8.207215,5.649387,-8.548269,9.170503,4.334087,-3.445393,-1.076873,9.331814,4.946219,-1.720859,-9.141603,5.173519,2.846205,-3.021572,9.131471,-6.750356,5.662057,2.051755,-6.228175,-7.551024,-5.287068,0.498412,1.999118,7.850050,8.174631,-8.183939,-2.490541,2.798051,-7.894688,3.680181,-8.534473,7.699828,8.468206,4.361782,-0.507302,4.275946,-5.066055,1.685378,-2.148103,9.181931,2.022192,9.447758,5.950721,6.613494,-4.259633,0.947791,-0.175149,1.154112,9.832299,5.159650,-1.681044,4.533346,4.444091,-6.982994,9.346909,-4.128173,6.249170,-8.100391,-6.229629,9.571986,-1.572327,5.234777,0.710608,2.885788,6.813960,-2.632694,3.100701,1.814833,6.988206,-2.063590,7.124842,1.264527,-8.117286,7.868589,7.334570,-1.433453,-5.509882,8.319836,-4.056387,-1.176292,1.346940,9.963963,-5.980169,-7.544319,-2.378831,-4.825785,9.494328,7.122215,1.333998,-0.781972,6.587899,2.871393,-5.793899,8.688880,9.143051,-3.588553,2.178900,8.121260,-3.279348,3.615514,7.917659,-9.136162,6.211432,-0.292466,3.838112,1.870009,7.428877,-4.263149,0.757955,-1.766217,3.040267,-7.467313,-2.253321,5.541098,7.136536,-7.060956,-8.896409,7.114242,-5.813036,5.389779,-2.597113,-9.303375,0.590331,6.051091,-8.822897,3.272868,-6.301635,-3.284625,6.078273,-9.178636,-7.757119,9.037360,0.974501,-8.604629,3.017476,2.914225,9.351356], dtype = "float64")#candidate|2554|(770,)|const|float64
call_2553 = relay.TupleGetItem(func_2503_call(relay.reshape(const_2554.astype('float64'), [770,])), 0)
call_2555 = relay.TupleGetItem(func_2505_call(relay.reshape(const_2554.astype('float64'), [770,])), 0)
output = relay.Tuple([call_2537,call_2553,const_2554,])
output2 = relay.Tuple([call_2538,call_2555,const_2554,])
func_2561 = relay.Function([], output)
mod['func_2561'] = func_2561
mod = relay.transform.InferType()(mod)
output = func_2561()
func_2562 = relay.Function([], output)
mutated_mod['func_2562'] = func_2562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_2672 = relay.TupleGetItem(func_2519_call(), 0)
call_2673 = relay.TupleGetItem(func_2520_call(), 0)
func_1946_call = mod.get_global_var('func_1946')
func_1949_call = mutated_mod.get_global_var('func_1949')
const_2679 = relay.const([[3,7,-1,-5,-4,-2,-1,2,9,5,-10,-9,1,4,-3,6,-4,-7,10,9,-2,6,-7,3,6,6,-10,-5,-8,-9,-3,-8,9,-3,9,2,-3,5,7,-8,8,9,6,-1,6,9,6,-8,5,2,3,5,2,-8,2,2,-9,-7,6,1,-9,-3,10,-8,5,6,5,6,5,-8,7,4,10,10,3,-10,-4,7,-4,-8,6,7,-7,-1,-6,-7,9,-10,7,7,-5,-2,9,2,4,-2,-4,-2,-1,-3,-3,1,-6,-1,3,2,-2,-7,-2,4,-9,-6,5,-7,-2,5,-3,-5,9,1,-3,-8,-7,-6,5,7,-8,8,3,-2,-8,-8,5,-9,1,-6,4,7,-10,4,-5,-1,6,-6,7,-3,7,5,7,10,-5,-10,2,-2,-4,-10,-7,-4,10,-1,-10,-1,6,-2,-9,10,-9,-7,-10,7,-5,-5,-8,7,-10,7,3,-8,-2,-1,-5,7,1,-6,2,7,8,4,-10,6,-1,10,10,4,-10,-3,8,-8,-3,-2,-6,4,8,4,1,7,-4,8,5,-6,-7,-2,8,-5,-4,7,5,-8,3,10,3,-6,4,-2,5,6,6,8,9,6,10,5,-9,8,-6,-4,8,9,3,3,-7,2,6,-7,3,8,9,1,-8,-9,-9,-7,-2,-1,8,-5,-2,10,8,2,-3,7,6,9,6,2,1,-4,-8,2,-2,2,-3,-3,2,-2,-8,6,-6,-9,4,-10,1,-2,3,-6,10,-9,10,5,7,-8,8,-8,10,-7,-9,1,-2,-2,6,8,-5,10,8,9,3,-10,-1,5,8,-6,-10,-10,2,5,-7,6,1,9,-9,5,-4,-3,7,-6,10,3,-3,-10,6,-4,10,7,4,-1,2,5,2,1,-5,-4,1,5,-2,-8,2,-3,10,4,-4,8,-2,2,-10,3,1,10,-7,-3,-10,9,-3,-4,10,8,4,2,1,-2,-6,-6,-2,-9,3,-10,-3,5,-3,8,9,-9,-3,1,-4,5,-7,7,9,-10,7,5,3,7,-1,9,-2,4,-9,7,9,-3,3,8,7,-6,2,-6,3,8,8,-5,6,-4,-6,6,3,2,9,-7,9,-1,-5,5,10,-4,-1,-9,-8,-1,3,10,7,3,-1,2,-6,-1,2,10,9,10,-1,-6,1,-3,-5,2,4,-9,6,7,6,4,3,-10,6,-4,-7,7,-8,-2,-5,8,-10,4,-10,-9,-8,4,4,6,4,-10,2,8,-10,-6,5,-6,-1,-2,-3,9,3,-5,-9,-9,-2,-1,6,4,-2,-5,-4,-3,-1,-8,-5,6,-10,6,-3,-10,4,9,3,-10,-4,3,3,-5,-10,-9,-9,4,7,9,-5,-2,4,-10,7,-3,2,10,-1,-2,-7,-9,-9,6,-5,3,-7,10,8,-2,10,7,1,-1,-2,5,-7,6,7,9,10,-3,-1,-10,-3,-4,-8,-6,8,-3,-2,10,5,3,-1,-6,-8,-7,2,-8,8,9,-4,-6,2,-3,-10,-2,-2,-6,9,1,3,-4,5,-9,5,10,-2,-2,-6,9,-1,-10,7,-3,10,-4,3,-7,2,-5,3,-8,4,9,6,-7,-10,9,4,4,9,-8,-7,-5,2,-8,7,-2,-8,4,-1,-3,7,8,6,-7,9,-7,10,-7,-2,-9,-3,-2,2,-4,-7,1,9,-5,-3,-9,-8,1,8,2,5,9,-2,8,6,-4,9,7,9,4,-4,4,-7,2,5,5,5,7,-4,-1,6,-3,3,4,2,3,9,8,4,-3,-3,-8,-2,-8,-1,7,4,-2,-10,8,2,-5,-9,-9,4,10,10,-10,7,1,4,-5,9,-5,4,8,5,9,10,-4,1,4,6,-8,-1,-8,8,-5,-1,-4,4,-2,-9,2,10,4,10,5,-3,6,1,-2,9,5,-8,4,-3,2,7,9,-9,-9,2,-4,6,-10,-8,-5,10,7,-9,1,-9,-5,-8,-6,-9,6,2,6,-2,6,-9,-6,-10,-6,-8,-2,3,-5,-2,-7,-9,-2,-3,-10,5,4,6,-2,3,-7,6,-7,-9,-7,5,-3,9,7,6,-6,1,6,9,6,-7,-10,6,-9,2,-7,-3,3,-8,3,-6,-6,10,6,1,1,7,-8,-1,-10,-6,-9,-1,-9,1,-4,3,-5,3,2,3,9,-5,5,-7,-8,-3,-2,-7,3,4,-6,7,-2,1,4,9,4,-4,1,-3,2,6,-10,4,-1,-1,7,-8,-10,-5,3,-10,10,-7,5,10,7,1,8,-1,6,-8,1,2,-3,8,10,4,-3,-1,-2,-6,-6,6,-2,3,-8,3,-4,-5,-3,-6,2,-5,2,3,-6,1,-6,5,4,8,-8,-5,5,3,2,10,-9,1,8,3,3,-7,-3,-8,2,-10,6,-5,3,6,-5,-1,1,6,-6,-5,-5,7,-9,-6,1,-1,1,-8,4,-2,-10,5,-5,-3,10,-9,4,-4,10,-2,-7,-8,1,-5,-9,5,-1,3,1,-4,-5,5,-8,-10,10,1,-9,6,-4,6,-9,3,1,-4,1,5,-3,-5,1,1,-9,9,-1,7,-5,9,4,-1,-9,9,-7,7,-7,2,8,-1,6,-5,4,-2,-5,-2,2,-5,-10,-10,1,6,-10,7,-2,6,-10,-4,-5,3,7,8,-1,-10,-9,10,10,7,-6,9,-5,-7,6,-7,-8,-10,10,-4,-2,5,-7,-9,-3,-6,-3,9,9,-10,7,-5,-2,10,4,-2,-10,-6,-2,-5,-3,3,5,-3,8,-1,-3,-2,3,4,7,4,4,8,6,10,2,5,-7,-4,-2,-2,1,-9,-7,10,10,3,3,-2,3,-10,7,-6,6,3,-5,4,-8,-10,7,-9,5,2,3,9,-6,-5,-4,9,-1,7,-7,1,3,2,-3,-8,-5,6,-4,6,-4,3,1,8,-4,5,-8,-9,-10,-3,-2,-9,3,4,2,9,2,4,6,5,-8,3,9,-9,3,-9,-2,3,-4,5,9,-2,8,6,7,-5,-2,-1,2,-9,1,-1,6,10,-1,8,1,-2,-5,2,-8,8,-7,10,-10,-4,6,-6,7,4,3,9,1,4,10,7,4,9,-6,-1,-9,-5,-8,9,9,5,-3,-5,-4,10,6,3,3,-1,4,-3,-7,-7,-1,4,10,-1,2,9,6,1,7,2,-7,-8,7,3,4,-2,-8,5,4,3,6,3,9,4,1,7,2,-10,-9,-4,-4,-7,3,-2,-2,4,-5,9,-2,-2,-2,-2,4,-3,4,7,-2,-2,-10,1,-9,9,-1,-10,5,9,-2,-2,-2,1,-10,5,5,-8,-2,-7,3,5,-6,10,-10,9,-9,-10,3,6,2,-7,1,-3,4,3,6,3,6,3,2,8,2,2,-1,-1,2,-1,-5,5,4,9,8,4,-7,10,9,-1,-5,-6,-3,-1,-7,9,9,-1,6,5,-4,-7,-3,8,-4,3,-4,-8,-8,-4,-3,8,1,-7,1,-8,-8,-4,4,5,5,-1,-8,7,-10,-2,-6,-9,10,-1,-5,-6,7,-3,5,3,5,8,5,-9,8,1,2,2,-3,6,3,-10,3,-5,1,-8,-2,-2,-2,3,4,6,2,-9,1,3,-7,-6,8,1,-9,-8,7,-9,2,-1,-4,2,4,-10,-7,1,-8,8,-8,5,-10,-10,4,-8,-9,-3,-5,-10,-8,-6,-5,-1,-1,9,8,9,-9,-4,8,9,10,-2,-9,-6,3,2,-6,-1,1,-8,-3,6,-6,5,4,-1,8,-1,-6,-3,-8,6,-5,-5,-6,5,2,9,4,3,-10,4,10,4,-4,-4,10,-10,-7,-3,-6,2,10,5,7,-5,2,4,7,-7,-5,-5,1,1,-8,8,-1,-3,4,-8,-8,6,2,-4,-10,-2,-2,-9,4,-8,4,-8,8,7,-1,-1,-8,1,-10,3,-5,-2,-3,7,-1,-2,3,-2,-3,-3,4,7,2,5,2,10,2,4,5,3,-6,-2,6,10,-3,-6,-6,10,-1,-1,-1,-2,-5,8,-8,7,-7,5,-3,3,-9,-4,1,4,-8,-7,-8,-2,5,-4,-3,9,1,1,10,-1,-2,5,-8,-7,5,-5,-3,5,-9,3,9,-1,-7,-4,6,-7,2,-4,-4,-7,7,2,-1,9,6,-1,3,5,4,-8,-9,-3,-10,1,7,3,-10]], dtype = "int32")#candidate|2679|(1, 1584)|const|int32
call_2678 = relay.TupleGetItem(func_1946_call(relay.reshape(const_2679.astype('int32'), [9, 16, 11])), 0)
call_2680 = relay.TupleGetItem(func_1949_call(relay.reshape(const_2679.astype('int32'), [9, 16, 11])), 0)
bop_2692 = relay.logical_xor(const_2679.astype('uint16'), relay.reshape(call_2678.astype('uint16'), relay.shape_of(const_2679))) # shape=(1, 1584)
bop_2695 = relay.logical_xor(const_2679.astype('uint16'), relay.reshape(call_2680.astype('uint16'), relay.shape_of(const_2679))) # shape=(1, 1584)
bop_2699 = relay.add(bop_2692.astype('int32'), relay.reshape(call_2678.astype('int32'), relay.shape_of(bop_2692))) # shape=(1, 1584)
bop_2702 = relay.add(bop_2695.astype('int32'), relay.reshape(call_2680.astype('int32'), relay.shape_of(bop_2695))) # shape=(1, 1584)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_2729 = relay.TupleGetItem(func_1964_call(relay.reshape(call_2672.astype('bool'), [15, 16, 11])), 0)
call_2730 = relay.TupleGetItem(func_1966_call(relay.reshape(call_2672.astype('bool'), [15, 16, 11])), 0)
func_2431_call = mod.get_global_var('func_2431')
func_2435_call = mutated_mod.get_global_var('func_2435')
var_2734 = relay.var("var_2734", dtype = "float32", shape = (1, 24))#candidate|2734|(1, 24)|var|float32
var_2735 = relay.var("var_2735", dtype = "int16", shape = (650,))#candidate|2735|(650,)|var|int16
const_2736 = relay.const([-7,-9,4,3,-6,5,-1,1,3,-3,5,-8,8,4,-8,-1,-7,-5,-8,-3,1,8,-6,-1,8,-9,-7,8,4,1,-3,7,5,-9,10,-9,1,-6,-6,-5,1,9,-8,3,-9,4,-9,1,4,-8,3,7,5,-8,-8,-7,-6,7,3,8,8,-5,-4,2,-8,4,8,-5,3,-3,-8,-2,-7,8,2,-4,-9,-9,7,3,-4,7,8,-6,-7,4,9,8,8,6,4,-2,2,8,-7,-5,7,6,5,-6,10,6,9,-7,-3,-9,-4,-10,6,-6,-8,-5,-4,-10,-10,-9,-6,2,-10,2,-2,10,4,4,9,-3,10,2,7,-1,8,-9,-5,-10,10,8,-3,-1,8,6,-3,4,5,7,8,10,8,-10,2,9,2,-5,-4,1,-2,-9,6,-10,9,-2,5,-3,-1,9,-1,-5,-6,9,9,-1,-8,5,4,-2,3,8,-6,-3,3,10,10,8,-8,-5,-8,-7,7,-8,-7,3,-6,8,-1,-9,-2,-10,-4,6,5,10,-8,-8,9,7,8,-6,1,8,-2,8,-6,6,-7,6,4,5,-3,8,-3,-9,-4,-7,6,9,-2,4,7,10,10,6,-1,7,-6,-7,-7,9,-9,6,-2,5,-4,-2,9,-5,-9,5,3,-4,-5,9,-5,-3,7,-2,-8,2,6,-5,5,5,10,-4,10,-2,-8,8,9,10,5,-4,-10,5,10,2,9,-9,-7,-1,-2,-3,4,-8,5,1,-1,-2,-1,9,-8,-9,8,5,-3,-4,9,-7,-1,8,-2,-7,-3,-4,-10,8,-3,5,4,-7,-6,4,-8,-8,6,6,-6,1,-4,6,7,1,10,1,4,1,-1,-5,5,-10,3,7,9,-1,-2,-8,-10,10,3,-3,3,8,10,5,-1,4,-10,-5,10,5,-2,4,-10,-1,-8,-3,-10,-5,6,-4,4,3,1,-7,2,5,-5,-6,-3,-9,3,10,-2,-4,4,7,7,5,6,9,4,-3,-4,3,6,-8,1,-2,4,1,-3,-7,-6,6,-4,3,-2,-6,-5,-4,8,-10,10,4,-6,-4,-3,7,5,3,-2,-9,3,1,-2,-9,-6,1,-10,2,10,-5,10,2,9,7,4,-4,-9,4,-9,-4,-1,1,-2,7,10,4,-6,-5,6,6,8,-6,6,-10,5,10,-1,-9,-5,-6,10,4,8,1,-3,-3,-7,-10,3,10,4,-5,-2,-1,-1,-3,-6,-7,10,10,6,-6,6,-8,6,6,7,-8,-6,-7,3,-9,10,-7,5,6,3,-4,8,8,9,5,-7,-6,-9], dtype = "uint16")#candidate|2736|(495,)|const|uint16
call_2733 = relay.TupleGetItem(func_2431_call(relay.reshape(var_2734.astype('float32'), [1, 12, 2]), relay.reshape(var_2735.astype('int16'), [1, 650]), relay.reshape(const_2736.astype('uint16'), [495,]), ), 4)
call_2737 = relay.TupleGetItem(func_2435_call(relay.reshape(var_2734.astype('float32'), [1, 12, 2]), relay.reshape(var_2735.astype('int16'), [1, 650]), relay.reshape(const_2736.astype('uint16'), [495,]), ), 4)
output = relay.Tuple([call_2672,bop_2699,call_2729,call_2733,var_2734,var_2735,const_2736,])
output2 = relay.Tuple([call_2673,bop_2702,call_2730,call_2737,var_2734,var_2735,const_2736,])
func_2776 = relay.Function([var_2734,var_2735,], output)
mod['func_2776'] = func_2776
mod = relay.transform.InferType()(mod)
var_2777 = relay.var("var_2777", dtype = "float32", shape = (1, 24))#candidate|2777|(1, 24)|var|float32
var_2778 = relay.var("var_2778", dtype = "int16", shape = (650,))#candidate|2778|(650,)|var|int16
output = func_2776(var_2777,var_2778,)
func_2779 = relay.Function([var_2777,var_2778,], output)
mutated_mod['func_2779'] = func_2779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2849 = relay.var("var_2849", dtype = "float64", shape = (15, 15, 16))#candidate|2849|(15, 15, 16)|var|float64
uop_2850 = relay.acos(var_2849.astype('float64')) # shape=(15, 15, 16)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
const_2858 = relay.const([[-9.504762,4.449196,8.353812,3.458956,0.460361,1.410187,6.084213,9.114671,0.969321,5.480222],[6.454909,3.176946,-5.715725,-3.332617,7.022671,-2.073353,4.842701,-3.766856,-0.907388,-7.692275],[-3.232991,4.830871,-0.275128,8.898802,-5.569417,-0.042519,-4.683632,-4.229249,1.435256,7.845921],[-8.811976,-0.718002,8.732789,-9.230138,-7.860945,-6.662704,-0.717959,-7.314079,-8.345186,-4.357840],[-9.790956,-0.306480,2.289658,1.654603,3.976722,8.568242,9.044099,-7.448491,-0.424844,-6.548304],[7.522894,6.704540,-7.361747,5.004981,-6.804038,0.278390,-7.680874,8.089376,-4.273797,-6.784178],[3.276922,-7.023074,-3.902111,-0.564487,7.207511,4.237030,3.205799,8.641966,8.459065,-4.255391],[-7.726409,-7.680140,-6.461159,-3.496851,2.915774,-4.409606,2.452190,2.059245,3.150749,-6.902032],[-1.201164,-7.566854,4.853357,0.167730,-0.137500,-8.767647,4.611759,0.496913,-9.045347,4.988486],[5.400662,-2.825870,-0.650233,-1.057210,5.196195,-8.813895,-2.870090,7.242774,-6.138292,-9.835017],[1.702527,-0.080360,-5.219295,-2.527421,2.981449,-1.787761,3.588884,1.556406,-2.725019,-7.880711],[1.079702,1.088592,6.651223,1.014001,2.117555,-5.927434,-8.171711,3.897812,-8.759118,6.357161],[1.203728,-6.413062,-1.654301,-9.684575,1.560413,7.559332,-1.718577,0.299145,7.466730,2.306660],[-5.959179,3.528408,-6.087636,2.163332,-4.975072,4.845804,-1.899688,4.594180,1.354382,9.092498],[-8.345584,0.907675,6.371691,-6.852588,1.700220,2.578982,7.681537,-4.004501,-5.999390,-0.253683],[-1.289817,-2.491632,-9.369292,-2.444309,-8.844251,-6.095613,-6.381457,0.159324,-8.365265,-5.067048],[2.976004,-2.126924,8.252145,4.586382,-7.264562,-2.085187,9.893042,-6.185723,-7.249272,5.415111],[-7.719500,9.351328,-2.169130,9.825463,-5.388420,-8.821996,9.721046,-4.495878,-0.910085,-0.087299],[-4.730005,6.790161,-4.554451,4.950516,-2.842592,0.136295,-5.336871,5.434277,9.053801,-8.648071],[5.847504,1.972131,6.513831,2.243277,3.531142,-6.581980,-9.936683,2.632157,6.678393,-7.025137],[-2.615226,5.074336,-6.203272,2.549544,8.890242,-6.123475,-2.437022,6.707042,2.608477,3.986654],[8.378091,-6.127049,-1.393906,-6.481561,-8.506766,4.336000,-2.520385,-8.578754,-0.523913,-8.791666],[8.809914,-0.893470,-2.813472,6.327296,-3.050451,8.158435,-4.122522,2.201420,3.069138,6.993631],[-8.529265,-5.560391,1.835052,-5.789112,-6.269770,4.162713,2.786743,-7.522168,9.241104,6.480998],[-9.604109,5.769790,5.660353,3.730402,-9.350457,-6.001777,-7.103889,7.749898,7.733412,6.753772],[-9.949117,7.430499,-9.492047,-2.400721,8.899900,5.924448,-8.712597,4.942246,1.481529,-0.331476],[4.452551,2.876544,-6.497033,8.315373,-4.313213,0.984208,7.807691,-3.319873,-0.190835,2.603667],[-9.802343,-8.905916,-3.195362,-9.745280,-9.383702,7.880479,-9.802662,8.138872,-1.348207,-6.207886],[8.185743,7.723766,7.715127,-5.434501,-9.828463,1.769144,-8.680739,4.393812,2.865530,7.560956],[9.405970,4.046186,6.547988,-9.417706,4.737099,-5.052404,-4.290943,0.882676,4.139065,-7.140687],[-6.214565,-9.356218,3.149894,8.852446,-7.237894,-5.584537,6.127010,8.851599,1.015173,-8.741780],[-4.058643,4.132763,6.069550,-3.987366,3.359530,-5.558747,1.515976,-8.202584,1.443565,9.133678],[-4.624518,3.435881,-6.295467,-1.265079,-5.615375,-6.269546,3.355182,1.607964,6.493778,5.072461],[-2.765068,-9.063238,9.321757,-1.712381,-2.532235,-2.242775,-2.880433,-5.169923,-7.438210,-1.722674],[-1.887643,4.859629,-4.495685,-0.628200,8.181478,-6.096114,5.736068,4.921754,-9.931195,8.747727],[7.737555,9.259047,7.728166,-4.194878,7.045394,-1.975946,-3.113348,6.959328,0.923822,-1.460347],[-7.746282,-1.338727,2.549424,-3.030496,-2.259846,-9.000645,1.037871,3.623652,7.380350,-8.606307],[-7.815973,-1.018632,-6.379159,8.378771,0.406926,-9.075043,8.373758,-4.171178,-5.860633,-5.849538],[-9.270856,9.254342,-4.551201,1.172255,-3.119279,-0.211939,-4.715805,5.196182,1.834555,-2.094042],[-8.351093,-3.522561,-7.851642,-6.891641,2.484480,6.452781,5.767855,2.202689,6.030938,-5.249402],[-7.295290,-0.071062,4.343452,3.941184,-9.500442,-7.991942,3.836072,-3.826976,5.619610,-1.173413],[6.623931,-4.300309,-3.936710,7.250765,-2.731737,-5.903205,-4.365993,-4.225317,-2.513469,-6.191169],[4.219833,-5.020269,3.466979,-8.579185,5.251940,4.127244,-1.625304,-3.309713,7.286150,-2.297216],[3.709744,-5.589701,5.759334,7.100980,1.673231,6.735824,-0.641312,5.733206,-1.157106,-2.192935],[-2.756329,0.004209,-0.513377,-4.558572,5.964773,0.719543,3.962974,-4.866476,-4.415534,-1.048439],[-4.837730,4.142959,2.882170,-7.010103,-8.671635,-9.996370,8.687417,-2.231501,6.649750,4.216812],[1.767499,0.327055,6.189543,-5.314470,8.497230,1.878676,-1.907563,6.603076,3.241937,7.191948],[-9.839089,-5.248840,5.866471,5.408310,0.118249,2.993827,-6.237829,5.719098,8.576334,5.758741],[8.439674,-9.565088,6.420057,8.358099,6.982346,9.374014,-7.737164,8.169970,-2.176937,-2.757337],[-7.934332,-9.257269,-8.845255,-1.453699,9.721850,6.601538,-0.872691,-4.891116,2.011791,-7.179743],[6.153636,-2.377334,1.064991,3.101772,1.539220,-9.690594,-4.771216,-2.992602,-2.831880,-6.850760],[-5.377217,-9.690395,0.988323,3.036851,0.536269,8.796818,9.167519,-4.257696,-8.898331,-7.811240],[-9.563506,3.707232,5.187470,7.391506,-1.443871,-4.667428,1.630003,5.082437,1.935107,5.354729],[-1.614292,5.450634,3.352973,-2.056051,-6.935989,9.143728,0.401481,6.489824,-1.118232,8.643663],[-1.985292,5.796903,-4.369783,-1.248003,4.622103,-8.698791,-7.519788,0.134494,-8.423036,4.040221],[-7.239528,6.295608,4.725790,9.730621,8.988633,-0.118005,-4.460104,-5.763995,-1.081239,-6.512463],[-4.972991,9.237712,3.777509,-8.360067,6.625894,-3.971890,-0.168882,0.945837,-5.768672,5.654921],[6.166982,1.792242,-1.291483,6.105796,-3.967134,-7.680619,-4.092060,7.510260,0.369007,8.627605],[-3.063857,-7.873838,1.299426,-5.548171,-2.215037,-8.324195,-3.228548,9.991154,3.757093,1.007425],[5.934670,-2.389563,-6.322022,3.783726,-0.752576,-7.289730,-7.744490,7.611085,-4.478625,0.851306],[-6.057858,0.184677,8.923917,3.011629,1.807262,-5.788193,-5.014564,-1.540494,-8.325561,-4.259178],[1.922214,7.616400,-3.124157,2.551630,0.027220,6.979553,-7.795614,-3.320379,-3.386907,-9.770014],[-1.560305,-6.606601,-6.544240,9.101322,-6.201517,3.090115,-3.180373,3.106854,1.236509,-1.160657],[3.435356,-3.342233,-7.393207,3.126780,-6.493411,-8.752540,-3.106533,-8.274561,8.677359,2.271532],[5.214118,6.675531,-9.087712,-4.746875,-7.544299,-8.078253,0.205572,6.300704,2.883255,-1.817959],[5.061586,-8.531343,1.673870,-8.909238,1.617326,-5.844294,-0.056031,-9.227831,-9.730581,-9.381864],[6.405119,-5.906077,-8.625380,-2.467829,-3.585940,1.019779,9.601642,3.653941,-3.849641,-9.891131],[0.044521,9.067173,-7.205475,-7.085583,-3.229403,2.236022,3.758451,-6.424694,-4.067354,6.948146],[8.596878,-3.972942,5.527394,1.039761,3.935578,7.456236,-5.244239,-2.082137,-5.449433,8.416829],[4.462091,2.211665,-5.110512,-3.436662,-3.942336,4.512873,3.896738,1.583443,5.622346,-1.811084],[-9.782602,-7.549836,-3.640287,2.171989,8.644565,-7.648464,-1.008521,-2.360235,5.522545,8.293598],[-1.563547,-5.403422,-8.549204,-4.413893,-0.386818,-7.676304,-9.375727,-9.830273,0.114618,-7.297445],[-4.750544,6.732260,-1.408350,-4.230453,6.129771,9.297938,-9.249503,5.324839,5.622640,2.550239],[-5.699707,-9.839988,-0.623063,-2.211517,9.988294,-3.744218,4.592988,-5.636712,1.444469,5.601446],[-3.442213,7.715830,-5.812592,6.778135,-7.244288,-0.961534,-7.354508,-3.826995,7.750473,-8.171871],[4.376848,-7.165216,-4.807715,-0.232834,6.150378,-4.142936,-6.629180,8.269253,-5.996317,6.381515],[9.895337,-4.398907,-9.120381,-1.889727,0.770243,-1.038366,8.832522,3.388236,6.047160,-3.657402]], dtype = "float64")#candidate|2858|(77, 10)|const|float64
call_2857 = relay.TupleGetItem(func_2503_call(relay.reshape(const_2858.astype('float64'), [770,])), 5)
call_2859 = relay.TupleGetItem(func_2505_call(relay.reshape(const_2858.astype('float64'), [770,])), 5)
output = relay.Tuple([uop_2850,call_2857,const_2858,])
output2 = relay.Tuple([uop_2850,call_2859,const_2858,])
func_2878 = relay.Function([var_2849,], output)
mod['func_2878'] = func_2878
mod = relay.transform.InferType()(mod)
var_2879 = relay.var("var_2879", dtype = "float64", shape = (15, 15, 16))#candidate|2879|(15, 15, 16)|var|float64
output = func_2878(var_2879)
func_2880 = relay.Function([var_2879], output)
mutated_mod['func_2880'] = func_2880
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2957 = relay.constdtype = "float32")#candidate|2957|(16, 11, 13)|const|float32
uop_2958 = relay.log(const_2957.astype('float32')) # shape=(16, 11, 13)
output = uop_2958
output2 = uop_2958
func_2963 = relay.Function([], output)
mod['func_2963'] = func_2963
mod = relay.transform.InferType()(mod)
output = func_2963()
func_2964 = relay.Function([], output)
mutated_mod['func_2964'] = func_2964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_3036 = func_2248_call()
call_3037 = func_2248_call()
uop_3038 = relay.asinh(call_3036.astype('float64')) # shape=(15, 16, 11)
uop_3040 = relay.asinh(call_3037.astype('float64')) # shape=(15, 16, 11)
output = uop_3038
output2 = uop_3040
func_3045 = relay.Function([], output)
mod['func_3045'] = func_3045
mod = relay.transform.InferType()(mod)
mutated_mod['func_3045'] = func_3045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3045_call = mutated_mod.get_global_var('func_3045')
call_3046 = func_3045_call()
output = call_3046
func_3047 = relay.Function([], output)
mutated_mod['func_3047'] = func_3047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3098 = relay.TupleGetItem(func_2519_call(), 0)
call_3099 = relay.TupleGetItem(func_2520_call(), 0)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
var_3108 = relay.var("var_3108", dtype = "float64", shape = (770,))#candidate|3108|(770,)|var|float64
call_3107 = relay.TupleGetItem(func_2503_call(relay.reshape(var_3108.astype('float64'), [770,])), 4)
call_3109 = relay.TupleGetItem(func_2505_call(relay.reshape(var_3108.astype('float64'), [770,])), 4)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3110 = relay.TupleGetItem(func_2519_call(), 0)
call_3111 = relay.TupleGetItem(func_2520_call(), 0)
output = relay.Tuple([call_3098,call_3107,var_3108,call_3110,])
output2 = relay.Tuple([call_3099,call_3109,var_3108,call_3111,])
func_3122 = relay.Function([var_3108,], output)
mod['func_3122'] = func_3122
mod = relay.transform.InferType()(mod)
mutated_mod['func_3122'] = func_3122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3123 = relay.var("var_3123", dtype = "float64", shape = (770,))#candidate|3123|(770,)|var|float64
func_3122_call = mutated_mod.get_global_var('func_3122')
call_3124 = func_3122_call(var_3123)
output = call_3124
func_3125 = relay.Function([var_3123], output)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_3165 = func_2248_call()
call_3166 = func_2248_call()
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
var_3168 = relay.var("var_3168", dtype = "float64", shape = (770,))#candidate|3168|(770,)|var|float64
call_3167 = relay.TupleGetItem(func_2503_call(relay.reshape(var_3168.astype('float64'), [770,])), 4)
call_3169 = relay.TupleGetItem(func_2505_call(relay.reshape(var_3168.astype('float64'), [770,])), 4)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_3179 = func_2963_call()
call_3180 = func_2963_call()
bop_3213 = relay.maximum(var_3168.astype('uint32'), relay.reshape(call_3167.astype('uint32'), relay.shape_of(var_3168))) # shape=(770,)
bop_3216 = relay.maximum(var_3168.astype('uint32'), relay.reshape(call_3169.astype('uint32'), relay.shape_of(var_3168))) # shape=(770,)
output = relay.Tuple([call_3165,call_3179,bop_3213,])
output2 = relay.Tuple([call_3166,call_3180,bop_3216,])
func_3223 = relay.Function([var_3168,], output)
mod['func_3223'] = func_3223
mod = relay.transform.InferType()(mod)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3224 = relay.var("var_3224", dtype = "float64", shape = (770,))#candidate|3224|(770,)|var|float64
func_3223_call = mutated_mod.get_global_var('func_3223')
call_3225 = func_3223_call(var_3224)
output = call_3225
func_3226 = relay.Function([var_3224], output)
mutated_mod['func_3226'] = func_3226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3228 = relay.TupleGetItem(func_2519_call(), 0)
call_3229 = relay.TupleGetItem(func_2520_call(), 0)
output = relay.Tuple([call_3228,])
output2 = relay.Tuple([call_3229,])
func_3240 = relay.Function([], output)
mod['func_3240'] = func_3240
mod = relay.transform.InferType()(mod)
mutated_mod['func_3240'] = func_3240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3240_call = mutated_mod.get_global_var('func_3240')
call_3241 = func_3240_call()
output = call_3241
func_3242 = relay.Function([], output)
mutated_mod['func_3242'] = func_3242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_3246 = relay.TupleGetItem(func_1922_call(), 0)
call_3247 = relay.TupleGetItem(func_1924_call(), 0)
func_2184_call = mod.get_global_var('func_2184')
func_2186_call = mutated_mod.get_global_var('func_2186')
var_3251 = relay.var("var_3251", dtype = "uint16", shape = (2, 360))#candidate|3251|(2, 360)|var|uint16
call_3250 = relay.TupleGetItem(func_2184_call(relay.reshape(var_3251.astype('uint16'), [720,])), 3)
call_3252 = relay.TupleGetItem(func_2186_call(relay.reshape(var_3251.astype('uint16'), [720,])), 3)
bop_3255 = relay.bitwise_and(var_3251.astype('int16'), relay.reshape(call_3250.astype('int16'), relay.shape_of(var_3251))) # shape=(2, 360)
bop_3258 = relay.bitwise_and(var_3251.astype('int16'), relay.reshape(call_3252.astype('int16'), relay.shape_of(var_3251))) # shape=(2, 360)
bop_3270 = relay.bitwise_xor(var_3251.astype('int64'), relay.reshape(bop_3255.astype('int64'), relay.shape_of(var_3251))) # shape=(2, 360)
bop_3273 = relay.bitwise_xor(var_3251.astype('int64'), relay.reshape(bop_3258.astype('int64'), relay.shape_of(var_3251))) # shape=(2, 360)
output = relay.Tuple([call_3246,bop_3270,])
output2 = relay.Tuple([call_3247,bop_3273,])
func_3308 = relay.Function([var_3251,], output)
mod['func_3308'] = func_3308
mod = relay.transform.InferType()(mod)
mutated_mod['func_3308'] = func_3308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3309 = relay.var("var_3309", dtype = "uint16", shape = (2, 360))#candidate|3309|(2, 360)|var|uint16
func_3308_call = mutated_mod.get_global_var('func_3308')
call_3310 = func_3308_call(var_3309)
output = call_3310
func_3311 = relay.Function([var_3309], output)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_3327 = func_2963_call()
call_3328 = func_2963_call()
output = call_3327
output2 = call_3328
func_3332 = relay.Function([], output)
mod['func_3332'] = func_3332
mod = relay.transform.InferType()(mod)
mutated_mod['func_3332'] = func_3332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mutated_mod.get_global_var('func_3332')
call_3333 = func_3332_call()
output = call_3333
func_3334 = relay.Function([], output)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3338 = relay.var("var_3338", dtype = "float32", shape = (12, 11, 6))#candidate|3338|(12, 11, 6)|var|float32
uop_3339 = relay.atan(var_3338.astype('float32')) # shape=(12, 11, 6)
output = relay.Tuple([uop_3339,])
output2 = relay.Tuple([uop_3339,])
func_3346 = relay.Function([var_3338,], output)
mod['func_3346'] = func_3346
mod = relay.transform.InferType()(mod)
var_3347 = relay.var("var_3347", dtype = "float32", shape = (12, 11, 6))#candidate|3347|(12, 11, 6)|var|float32
output = func_3346(var_3347)
func_3348 = relay.Function([var_3347], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3382 = func_3332_call()
call_3383 = func_3332_call()
func_2364_call = mod.get_global_var('func_2364')
func_2368_call = mutated_mod.get_global_var('func_2368')
var_3399 = relay.var("var_3399", dtype = "int16", shape = (5, 130))#candidate|3399|(5, 130)|var|int16
var_3400 = relay.var("var_3400", dtype = "uint64", shape = (1470,))#candidate|3400|(1470,)|var|uint64
call_3398 = relay.TupleGetItem(func_2364_call(relay.reshape(var_3399.astype('int16'), [65, 10]), relay.reshape(var_3400.astype('uint64'), [1470,]), ), 1)
call_3401 = relay.TupleGetItem(func_2368_call(relay.reshape(var_3399.astype('int16'), [65, 10]), relay.reshape(var_3400.astype('uint64'), [1470,]), ), 1)
var_3403 = relay.var("var_3403", dtype = "int16", shape = (5, 130))#candidate|3403|(5, 130)|var|int16
bop_3404 = relay.less(var_3399.astype('bool'), relay.reshape(var_3403.astype('bool'), relay.shape_of(var_3399))) # shape=(5, 130)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3407 = func_3332_call()
call_3408 = func_3332_call()
uop_3419 = relay.asin(var_3403.astype('float32')) # shape=(5, 130)
output = relay.Tuple([call_3382,call_3398,var_3400,bop_3404,call_3407,uop_3419,])
output2 = relay.Tuple([call_3383,call_3401,var_3400,bop_3404,call_3408,uop_3419,])
func_3427 = relay.Function([var_3399,var_3400,var_3403,], output)
mod['func_3427'] = func_3427
mod = relay.transform.InferType()(mod)
var_3428 = relay.var("var_3428", dtype = "int16", shape = (5, 130))#candidate|3428|(5, 130)|var|int16
var_3429 = relay.var("var_3429", dtype = "uint64", shape = (1470,))#candidate|3429|(1470,)|var|uint64
var_3430 = relay.var("var_3430", dtype = "int16", shape = (5, 130))#candidate|3430|(5, 130)|var|int16
output = func_3427(var_3428,var_3429,var_3430,)
func_3431 = relay.Function([var_3428,var_3429,var_3430,], output)
mutated_mod['func_3431'] = func_3431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_3532 = func_3045_call()
call_3533 = func_3045_call()
const_3536 = relay.constdtype = "float64")#candidate|3536|(15, 16, 11)|const|float64
bop_3537 = relay.floor_mod(call_3532.astype('float64'), relay.reshape(const_3536.astype('float64'), relay.shape_of(call_3532))) # shape=(15, 16, 11)
bop_3540 = relay.floor_mod(call_3533.astype('float64'), relay.reshape(const_3536.astype('float64'), relay.shape_of(call_3533))) # shape=(15, 16, 11)
output = bop_3537
output2 = bop_3540
func_3546 = relay.Function([], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
output = func_3546()
func_3547 = relay.Function([], output)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_3559 = func_2248_call()
call_3560 = func_2248_call()
output = call_3559
output2 = call_3560
func_3566 = relay.Function([], output)
mod['func_3566'] = func_3566
mod = relay.transform.InferType()(mod)
output = func_3566()
func_3567 = relay.Function([], output)
mutated_mod['func_3567'] = func_3567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_3581 = func_3546_call()
call_3582 = func_3546_call()
var_3592 = relay.var("var_3592", dtype = "float64", shape = (15, 16, 11))#candidate|3592|(15, 16, 11)|var|float64
bop_3593 = relay.greater(call_3581.astype('bool'), relay.reshape(var_3592.astype('bool'), relay.shape_of(call_3581))) # shape=(15, 16, 11)
bop_3596 = relay.greater(call_3582.astype('bool'), relay.reshape(var_3592.astype('bool'), relay.shape_of(call_3582))) # shape=(15, 16, 11)
uop_3619 = relay.exp(call_3581.astype('float32')) # shape=(15, 16, 11)
uop_3621 = relay.exp(call_3582.astype('float32')) # shape=(15, 16, 11)
output = relay.Tuple([bop_3593,uop_3619,])
output2 = relay.Tuple([bop_3596,uop_3621,])
func_3632 = relay.Function([var_3592,], output)
mod['func_3632'] = func_3632
mod = relay.transform.InferType()(mod)
mutated_mod['func_3632'] = func_3632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3633 = relay.var("var_3633", dtype = "float64", shape = (15, 16, 11))#candidate|3633|(15, 16, 11)|var|float64
func_3632_call = mutated_mod.get_global_var('func_3632')
call_3634 = func_3632_call(var_3633)
output = call_3634
func_3635 = relay.Function([var_3633], output)
mutated_mod['func_3635'] = func_3635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3662 = relay.TupleGetItem(func_2519_call(), 0)
call_3663 = relay.TupleGetItem(func_2520_call(), 0)
output = call_3662
output2 = call_3663
func_3674 = relay.Function([], output)
mod['func_3674'] = func_3674
mod = relay.transform.InferType()(mod)
mutated_mod['func_3674'] = func_3674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mutated_mod.get_global_var('func_3674')
call_3675 = func_3674_call()
output = call_3675
func_3676 = relay.Function([], output)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3716 = relay.var("var_3716", dtype = "uint8", shape = (8, 2, 13))#candidate|3716|(8, 2, 13)|var|uint8
var_3717 = relay.var("var_3717", dtype = "uint8", shape = (8, 2, 13))#candidate|3717|(8, 2, 13)|var|uint8
bop_3718 = relay.maximum(var_3716.astype('uint8'), relay.reshape(var_3717.astype('uint8'), relay.shape_of(var_3716))) # shape=(8, 2, 13)
output = relay.Tuple([bop_3718,])
output2 = relay.Tuple([bop_3718,])
func_3723 = relay.Function([var_3716,var_3717,], output)
mod['func_3723'] = func_3723
mod = relay.transform.InferType()(mod)
mutated_mod['func_3723'] = func_3723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3723_call = mutated_mod.get_global_var('func_3723')
var_3725 = relay.var("var_3725", dtype = "uint8", shape = (8, 2, 13))#candidate|3725|(8, 2, 13)|var|uint8
var_3726 = relay.var("var_3726", dtype = "uint8", shape = (8, 2, 13))#candidate|3726|(8, 2, 13)|var|uint8
call_3724 = func_3723_call(var_3725,var_3726,)
output = call_3724
func_3727 = relay.Function([var_3725,var_3726,], output)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_3758 = func_2963_call()
call_3759 = func_2963_call()
uop_3760 = relay.rsqrt(call_3758.astype('float32')) # shape=(16, 11, 13)
uop_3762 = relay.rsqrt(call_3759.astype('float32')) # shape=(16, 11, 13)
bop_3773 = relay.mod(uop_3760.astype('float32'), relay.reshape(call_3758.astype('float32'), relay.shape_of(uop_3760))) # shape=(16, 11, 13)
bop_3776 = relay.mod(uop_3762.astype('float32'), relay.reshape(call_3759.astype('float32'), relay.shape_of(uop_3762))) # shape=(16, 11, 13)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_3785 = func_3045_call()
call_3786 = func_3045_call()
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
var_3788 = relay.var("var_3788", dtype = "float64", shape = (770,))#candidate|3788|(770,)|var|float64
call_3787 = func_171_call(relay.reshape(var_3788.astype('float64'), [14, 5, 11]))
call_3789 = func_171_call(relay.reshape(var_3788.astype('float64'), [14, 5, 11]))
func_1946_call = mod.get_global_var('func_1946')
func_1949_call = mutated_mod.get_global_var('func_1949')
const_3791 = relay.const([[-6,10,-9,-10],[-1,5,-1,-1],[10,-3,9,-2],[6,-8,-2,5],[-9,1,-3,8],[-5,3,5,-6],[-6,-7,4,-7],[1,-7,-10,-2],[7,-8,4,4],[10,-5,1,-1],[10,-9,-7,-7],[2,1,6,2],[9,-4,7,-2],[5,-3,1,-3],[-3,-7,9,-9],[8,4,5,7],[-7,7,-1,2],[-6,-4,10,-8],[-8,-3,1,-9],[-2,-4,10,-1],[4,-10,6,-3],[-6,1,-2,10],[6,-10,-5,-7],[-1,-6,-2,-7],[-6,3,8,4],[3,-1,6,7],[-5,10,-8,-9],[-6,2,-3,-4],[6,10,-3,8],[-2,1,2,-2],[6,9,7,-5],[-4,-10,-3,-7],[-4,-3,-5,-3],[1,7,-3,-2],[-2,-5,10,3],[4,-2,-10,6],[-10,-2,-3,4],[-8,-9,1,-10],[-2,-2,-2,6],[-10,4,9,-5],[10,-4,2,-7],[8,-9,-9,3],[-3,-4,2,2],[-10,2,-8,-8],[4,-3,9,-5],[8,-5,-5,8],[5,-7,-4,7],[-7,1,7,4],[-1,-8,-7,-7],[-8,-1,3,5],[1,-5,10,9],[2,-1,-1,-10],[1,5,10,-2],[6,-5,3,9],[1,1,5,-7],[9,-5,4,-5],[3,5,-1,6],[-10,-8,-1,1],[10,-3,9,3],[-9,-10,-2,-10],[-2,10,1,1],[-5,6,-8,7],[-8,-5,2,7],[-4,6,2,3],[-10,9,9,5],[-1,-1,8,6],[-10,-5,7,-4],[8,1,8,6],[-8,-1,7,10],[-9,-8,9,-4],[-5,1,-10,-4],[-7,-10,10,-4],[5,5,3,1],[-4,-10,-10,-2],[-3,8,-8,-4],[9,9,-4,-8],[-10,10,-6,-7],[7,-7,-4,-4],[4,4,6,8],[-4,5,-1,6],[5,7,4,-4],[-3,-9,-10,6],[5,-5,-10,6],[-9,3,-1,-1],[4,8,2,-10],[-4,2,2,-9],[1,-7,6,-4],[-4,7,5,-2],[6,6,3,-2],[5,-3,3,-3],[6,5,5,9],[6,5,-3,-2],[-8,-6,-4,-9],[2,7,4,2],[-4,-3,8,-8],[-7,-8,1,-9],[8,-1,-4,3],[-4,5,-2,7],[-8,5,-2,10],[8,-10,-8,2],[-6,8,5,8],[-4,7,-4,2],[-5,-5,1,-6],[3,-10,5,-7],[-4,1,-10,1],[5,-2,2,-10],[10,-4,1,10],[6,-7,1,-3],[10,-8,-4,4],[5,-10,-9,-4],[4,-2,9,-2],[-1,7,-4,-10],[-6,-5,-5,2],[7,9,-10,9],[-2,-2,-10,-8],[-3,4,7,4],[-2,6,9,1],[9,6,-4,7],[5,-9,-4,-7],[-5,-6,6,-8],[8,10,-1,5],[-1,-3,-5,1],[8,4,-8,-10],[-3,5,-6,-2],[4,-2,-2,-9],[10,-10,-10,7],[-2,3,4,-10],[10,8,8,-10],[1,9,1,-8],[10,9,10,10],[-7,-9,6,7],[7,-2,5,-9],[-4,-2,8,9],[10,8,2,-2],[-10,-1,10,-2],[5,-4,-6,9],[-3,8,-2,9],[-4,4,4,-6],[-6,-5,-5,5],[-1,-10,-4,-8],[9,6,2,5],[-2,-4,4,-5],[7,7,6,-3],[3,-7,-2,1],[2,5,5,-2],[9,-7,3,3],[1,3,-2,-6],[10,9,10,-5],[9,6,8,-3],[3,-1,-2,-8],[4,2,-10,8],[-4,1,-9,4],[-6,4,-10,2],[6,10,8,9],[-1,-6,9,-8],[5,7,-8,3],[-3,8,3,7],[-3,-5,6,3],[-7,6,-6,-1],[8,4,8,9],[-4,7,7,7],[2,3,8,-5],[4,10,-10,1],[-8,-3,4,-10],[-1,6,-4,9],[6,5,-7,-8],[-6,3,1,3],[10,-8,9,3],[-8,7,-3,-7],[10,3,-6,2],[-9,-5,10,-2],[5,-5,9,-2],[8,-6,-10,7],[8,-9,1,6],[8,-2,1,-3],[5,9,-5,-8],[4,3,10,-4],[-2,-3,-4,-4],[-2,5,2,8],[-5,9,1,4],[-5,7,-6,4],[-4,10,-5,4],[-1,-1,-6,-8],[7,2,9,1],[-2,-7,-1,-6],[-7,-3,-1,2],[-6,2,-1,3],[-2,-5,-1,-4],[9,1,2,3],[4,-6,4,6],[10,-4,-2,8],[-3,4,-1,7],[10,10,-5,-3],[-10,5,-6,6],[1,-6,8,-7],[-1,5,9,-2],[9,-1,4,5],[-5,-9,-3,9],[-6,9,3,3],[6,5,-9,4],[-8,2,1,7],[-10,-10,-1,1],[6,-1,3,-2],[-1,2,-4,10],[3,6,-9,-1],[9,-6,-2,8],[-4,-8,3,7],[7,-8,6,-4],[9,-5,3,9],[-7,4,1,-7],[3,3,-7,3],[-10,4,-6,6],[-10,-6,-7,5],[-10,-5,-1,8],[-10,-1,3,-1],[-3,-2,-5,6],[1,8,-7,-4],[-2,-9,-1,-8],[-2,-8,-10,-10],[5,-6,10,4],[4,-9,-5,-9],[10,-1,-7,-4],[7,-3,-2,-4],[3,-7,-1,-4],[5,5,6,6],[-4,-9,-7,9],[8,2,5,8],[3,-2,-8,-9],[-2,2,10,6],[-6,-2,-7,-8],[-3,6,6,7],[-7,6,-9,-8],[-1,1,-8,-3],[1,7,8,-4],[6,10,-1,-3],[-10,-4,4,-2],[-2,-4,1,5],[5,-9,-7,-6],[2,-5,7,-3],[-7,-7,-1,-5],[3,1,1,5],[8,-10,8,10],[-4,-5,4,-9],[7,3,-7,8],[10,-6,-7,-6],[7,-2,2,9],[6,8,-1,1],[6,-5,2,5],[-7,2,3,1],[-4,7,2,3],[-9,5,1,-10],[-2,10,-2,-8],[5,3,10,8],[-4,3,10,-3],[8,-8,6,3],[-3,-3,-7,4],[-3,-10,2,8],[-2,3,6,8],[5,-2,-4,-10],[10,-3,-4,-9],[-5,-9,-6,2],[-9,-7,-10,10],[2,6,-9,-4],[10,3,6,9],[10,8,-7,1],[7,1,-6,-3],[-3,6,-7,-10],[-10,9,7,-7],[7,1,8,-10],[-4,4,-3,8],[-10,-7,-7,-2],[-2,-2,10,-5],[7,-3,-10,1],[5,3,4,4],[-8,-1,-10,1],[-5,-2,-2,-1],[3,-3,-8,-8],[-2,1,-6,2],[-7,-10,-7,8],[4,6,-7,7],[3,-4,6,4],[-4,-6,9,4],[-2,-3,-5,-2],[3,9,6,-9],[-5,10,4,1],[-10,-8,-6,4],[-7,10,10,-3],[9,4,-5,4],[7,-3,-7,-10],[-3,5,9,1],[8,7,1,-2],[1,6,8,-10],[-2,-5,9,-8],[-2,-4,-4,-8],[-6,10,-7,8],[6,-6,3,-9],[-8,6,2,10],[6,-6,8,-3],[-10,-2,5,5],[-5,8,-4,3],[-3,-9,-4,8],[2,-2,-9,5],[-8,-6,-8,-6],[1,-10,-3,9],[3,-1,-5,-9],[-7,7,4,7],[8,4,-6,8],[-4,-4,-3,-3],[1,5,6,-4],[3,-9,3,10],[1,7,6,-7],[-4,-7,6,-3],[-5,4,10,-4],[-9,-3,-3,6],[-9,-3,8,5],[-1,-9,6,5],[-10,-5,-4,5],[-4,-8,3,10],[6,-9,3,8],[-8,-2,-9,-6],[-3,9,-9,-5],[-5,1,6,10],[-7,8,-2,-4],[5,7,-3,5],[5,7,10,-9],[4,5,-5,4],[3,-10,10,9],[1,1,10,-2],[-8,9,9,-5],[1,-3,-4,-6],[8,-5,-1,-6],[-2,-4,1,-5],[5,10,-5,-4],[-4,1,-3,4],[3,4,6,6],[-6,-8,8,-9],[9,-4,-4,-1],[7,-4,-8,-6],[10,7,-9,-1],[3,6,-5,4],[-4,-10,-9,5],[-2,-8,9,-3],[1,4,5,9],[-9,1,9,9],[4,-2,-10,-6],[-5,-5,8,5],[10,-3,9,4],[6,1,1,-1],[-9,5,-9,4],[-7,10,8,5],[5,4,-10,1],[2,-3,1,-7],[6,-4,4,1],[-8,7,6,-4],[1,-6,-6,9],[8,10,-8,2],[8,-1,3,-4],[-4,-4,2,-1],[6,4,-4,-10],[6,2,9,-10],[-7,1,-4,10],[5,-8,4,10],[9,-1,-8,5],[-5,10,10,-4],[2,6,10,5],[10,2,5,3],[7,-6,9,1],[-8,-9,-10,5],[8,-1,9,-4],[9,2,-10,-7],[1,2,-5,-3],[3,-1,-4,-8],[-10,-1,-4,8],[2,9,-7,9],[-2,-9,5,1],[-3,-4,1,-9],[8,9,-4,-7],[-7,8,-3,-1],[9,3,1,5],[-8,-2,8,9],[-1,10,-3,4],[3,1,1,10],[-1,8,-7,-5],[10,4,-9,8],[9,-9,-6,2],[5,5,9,-7],[-10,-2,6,2],[7,7,-6,9],[-4,-10,9,10],[-9,-1,-2,-9],[-3,-9,-10,-6],[6,-4,10,-10],[2,-7,-5,-7],[3,5,8,8],[-6,-10,-8,7],[2,8,7,-10]], dtype = "int32")#candidate|3791|(396, 4)|const|int32
call_3790 = relay.TupleGetItem(func_1946_call(relay.reshape(const_3791.astype('int32'), [9, 16, 11])), 0)
call_3792 = relay.TupleGetItem(func_1949_call(relay.reshape(const_3791.astype('int32'), [9, 16, 11])), 0)
output = relay.Tuple([bop_3773,call_3785,call_3787,var_3788,call_3790,const_3791,])
output2 = relay.Tuple([bop_3776,call_3786,call_3789,var_3788,call_3792,const_3791,])
func_3798 = relay.Function([var_3788,], output)
mod['func_3798'] = func_3798
mod = relay.transform.InferType()(mod)
var_3799 = relay.var("var_3799", dtype = "float64", shape = (770,))#candidate|3799|(770,)|var|float64
output = func_3798(var_3799)
func_3800 = relay.Function([var_3799], output)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2561_call = mod.get_global_var('func_2561')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_3810 = relay.TupleGetItem(func_2561_call(), 1)
call_3811 = relay.TupleGetItem(func_2562_call(), 1)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_3817 = func_2248_call()
call_3818 = func_2248_call()
uop_3821 = relay.log10(call_3817.astype('float64')) # shape=(15, 16, 11)
uop_3823 = relay.log10(call_3818.astype('float64')) # shape=(15, 16, 11)
bop_3841 = relay.greater_equal(uop_3821.astype('bool'), relay.reshape(call_3817.astype('bool'), relay.shape_of(uop_3821))) # shape=(15, 16, 11)
bop_3844 = relay.greater_equal(uop_3823.astype('bool'), relay.reshape(call_3818.astype('bool'), relay.shape_of(uop_3823))) # shape=(15, 16, 11)
uop_3853 = relay.tan(bop_3841.astype('float64')) # shape=(15, 16, 11)
uop_3855 = relay.tan(bop_3844.astype('float64')) # shape=(15, 16, 11)
func_2776_call = mod.get_global_var('func_2776')
func_2779_call = mutated_mod.get_global_var('func_2779')
const_3858 = relay.const([7.539915,-1.217542,8.590335,9.676603,-8.115121,7.354618,2.246212,6.861495,-3.275815,-3.653325,-7.941083,-8.099463,1.917937,9.677305,-3.940308,5.576581,-5.970457,-8.077665,-0.175698,5.391294,8.675860,8.228232,1.734427,-5.510710], dtype = "float32")#candidate|3858|(24,)|const|float32
var_3859 = relay.var("var_3859", dtype = "int16", shape = (650,))#candidate|3859|(650,)|var|int16
call_3857 = relay.TupleGetItem(func_2776_call(relay.reshape(const_3858.astype('float32'), [1, 24]), relay.reshape(var_3859.astype('int16'), [650,]), ), 3)
call_3860 = relay.TupleGetItem(func_2779_call(relay.reshape(const_3858.astype('float32'), [1, 24]), relay.reshape(var_3859.astype('int16'), [650,]), ), 3)
func_1570_call = mod.get_global_var('func_1570')
func_1574_call = mutated_mod.get_global_var('func_1574')
var_3865 = relay.var("var_3865", dtype = "uint16", shape = (720,))#candidate|3865|(720,)|var|uint16
call_3864 = relay.TupleGetItem(func_1570_call(relay.reshape(var_3865.astype('uint16'), [3, 16, 15]), relay.reshape(var_3865.astype('uint16'), [3, 16, 15]), ), 0)
call_3866 = relay.TupleGetItem(func_1574_call(relay.reshape(var_3865.astype('uint16'), [3, 16, 15]), relay.reshape(var_3865.astype('uint16'), [3, 16, 15]), ), 0)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_3868 = relay.TupleGetItem(func_1964_call(relay.reshape(bop_3841.astype('bool'), [15, 16, 11])), 0)
call_3869 = relay.TupleGetItem(func_1966_call(relay.reshape(bop_3841.astype('bool'), [15, 16, 11])), 0)
output = relay.Tuple([call_3810,uop_3853,call_3857,const_3858,var_3859,call_3864,var_3865,call_3868,])
output2 = relay.Tuple([call_3811,uop_3855,call_3860,const_3858,var_3859,call_3866,var_3865,call_3869,])
func_3876 = relay.Function([var_3859,var_3865,], output)
mod['func_3876'] = func_3876
mod = relay.transform.InferType()(mod)
var_3877 = relay.var("var_3877", dtype = "int16", shape = (650,))#candidate|3877|(650,)|var|int16
var_3878 = relay.var("var_3878", dtype = "uint16", shape = (720,))#candidate|3878|(720,)|var|uint16
output = func_3876(var_3877,var_3878,)
func_3879 = relay.Function([var_3877,var_3878,], output)
mutated_mod['func_3879'] = func_3879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_3881 = relay.TupleGetItem(func_1922_call(), 0)
call_3882 = relay.TupleGetItem(func_1924_call(), 0)
output = call_3881
output2 = call_3882
func_3901 = relay.Function([], output)
mod['func_3901'] = func_3901
mod = relay.transform.InferType()(mod)
mutated_mod['func_3901'] = func_3901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3901_call = mutated_mod.get_global_var('func_3901')
call_3902 = func_3901_call()
output = call_3902
func_3903 = relay.Function([], output)
mutated_mod['func_3903'] = func_3903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_3911 = func_3674_call()
call_3912 = func_3674_call()
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_3935 = func_2248_call()
call_3936 = func_2248_call()
uop_3950 = relay.cos(call_3935.astype('float64')) # shape=(15, 16, 11)
uop_3952 = relay.cos(call_3936.astype('float64')) # shape=(15, 16, 11)
output = relay.Tuple([call_3911,uop_3950,])
output2 = relay.Tuple([call_3912,uop_3952,])
func_3953 = relay.Function([], output)
mod['func_3953'] = func_3953
mod = relay.transform.InferType()(mod)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3953_call = mutated_mod.get_global_var('func_3953')
call_3954 = func_3953_call()
output = call_3954
func_3955 = relay.Function([], output)
mutated_mod['func_3955'] = func_3955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3967 = func_3332_call()
call_3968 = func_3332_call()
func_1570_call = mod.get_global_var('func_1570')
func_1574_call = mutated_mod.get_global_var('func_1574')
var_3982 = relay.var("var_3982", dtype = "uint16", shape = (360, 2))#candidate|3982|(360, 2)|var|uint16
call_3981 = relay.TupleGetItem(func_1570_call(relay.reshape(var_3982.astype('uint16'), [3, 16, 15]), relay.reshape(var_3982.astype('uint16'), [3, 16, 15]), ), 0)
call_3983 = relay.TupleGetItem(func_1574_call(relay.reshape(var_3982.astype('uint16'), [3, 16, 15]), relay.reshape(var_3982.astype('uint16'), [3, 16, 15]), ), 0)
func_2184_call = mod.get_global_var('func_2184')
func_2186_call = mutated_mod.get_global_var('func_2186')
call_3986 = relay.TupleGetItem(func_2184_call(relay.reshape(var_3982.astype('uint16'), [720,])), 1)
call_3987 = relay.TupleGetItem(func_2186_call(relay.reshape(var_3982.astype('uint16'), [720,])), 1)
bop_3990 = relay.mod(var_3982.astype('float32'), relay.reshape(call_3981.astype('float32'), relay.shape_of(var_3982))) # shape=(360, 2)
bop_3993 = relay.mod(var_3982.astype('float32'), relay.reshape(call_3983.astype('float32'), relay.shape_of(var_3982))) # shape=(360, 2)
output = relay.Tuple([call_3967,call_3986,bop_3990,])
output2 = relay.Tuple([call_3968,call_3987,bop_3993,])
func_4004 = relay.Function([var_3982,], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4005 = relay.var("var_4005", dtype = "uint16", shape = (360, 2))#candidate|4005|(360, 2)|var|uint16
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4006 = func_4004_call(var_4005)
output = call_4006
func_4007 = relay.Function([var_4005], output)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_4014 = func_3546_call()
call_4015 = func_3546_call()
output = relay.Tuple([call_4014,])
output2 = relay.Tuple([call_4015,])
func_4021 = relay.Function([], output)
mod['func_4021'] = func_4021
mod = relay.transform.InferType()(mod)
output = func_4021()
func_4022 = relay.Function([], output)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_4057 = relay.TupleGetItem(func_3240_call(), 0)
call_4058 = relay.TupleGetItem(func_3242_call(), 0)
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
call_4059 = relay.TupleGetItem(func_3953_call(), 0)
call_4060 = relay.TupleGetItem(func_3955_call(), 0)
bop_4062 = relay.less_equal(call_4059.astype('bool'), relay.reshape(call_4057.astype('bool'), relay.shape_of(call_4059))) # shape=(15, 16, 11)
bop_4065 = relay.less_equal(call_4060.astype('bool'), relay.reshape(call_4058.astype('bool'), relay.shape_of(call_4060))) # shape=(15, 16, 11)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_4090 = relay.TupleGetItem(func_3240_call(), 0)
call_4091 = relay.TupleGetItem(func_3242_call(), 0)
uop_4093 = relay.acosh(call_4059.astype('float64')) # shape=(15, 16, 11)
uop_4095 = relay.acosh(call_4060.astype('float64')) # shape=(15, 16, 11)
output = relay.Tuple([bop_4062,call_4090,uop_4093,])
output2 = relay.Tuple([bop_4065,call_4091,uop_4095,])
func_4103 = relay.Function([], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4104 = func_4103_call()
output = call_4104
func_4105 = relay.Function([], output)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2561_call = mod.get_global_var('func_2561')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_4121 = relay.TupleGetItem(func_2561_call(), 2)
call_4122 = relay.TupleGetItem(func_2562_call(), 2)
func_3876_call = mod.get_global_var('func_3876')
func_3879_call = mutated_mod.get_global_var('func_3879')
const_4137 = relay.const([-3,8,2,8,2,8,-1,3,-7,6,-3,-4,1,-6,-2,-6,3,-1,-6,5,-8,3,6,-5,-3,9,-9,6,8,-5,-8,-5,7,-6,-7,-2,-3,-8,-3,4,-1,-1,-5,-2,-10,1,-10,-8,4,-1,-2,6,9,6,7,7,2,-10,-6,10,-1,-3,9,1,5,4,6,5,-6,-7,-1,-2,-2,-2,7,4,2,1,1,7,-4,3,1,-7,-7,9,-9,-4,5,9,7,10,-3,3,4,9,-10,-10,-8,-9,1,6,-1,1,6,6,3,3,8,9,-9,-10,1,-2,-6,6,1,5,10,-5,-8,-10,-10,7,2,-10,6,-9,-9,-6,2,-2,1,4,-5,-10,2,4,-6,10,10,-8,-1,1,-8,4,-8,2,6,-3,-2,4,6,8,10,9,-7,6,5,-7,-6,-10,9,-4,-5,8,3,-5,-1,-2,-10,-10,-9,4,-6,5,-4,-6,9,10,8,-5,-1,1,-1,2,3,8,-10,6,-5,-8,9,4,4,4,-5,5,7,-7,-9,2,4,-6,4,2,6,-10,4,3,-1,1,5,-3,10,-3,-2,-2,6,-3,-3,-2,7,-4,-10,-10,-3,9,5,-10,-4,5,-9,2,-7,6,10,-7,-1,-7,-9,4,-5,1,4,6,-6,4,8,-1,-1,-2,-4,-9,9,8,4,-1,-4,1,-4,6,6,7,5,8,2,8,-9,3,-2,8,-10,5,9,-1,-2,5,8,3,-8,1,9,8,-6,-5,-1,-6,-10,-6,-6,-4,-6,8,2,9,-10,-2,2,6,4,-6,-4,5,-3,5,-7,-2,1,-9,1,5,-10,2,-8,8,2,6,-8,2,-3,5,-9,5,6,2,-1,1,-3,-3,-3,-4,7,-1,-2,-6,-1,7,7,7,-7,1,6,-1,-4,4,5,10,-10,7,-3,9,6,-3,9,6,-1,-5,-6,-7,-1,6,1,-8,-7,2,-9,-6,-10,-10,9,6,1,-8,-10,-7,-8,-8,1,7,-2,1,-4,8,6,-3,-4,-6,2,3,-10,2,-5,4,-6,-5,-2,2,3,-9,10,3,-1,-10,-2,-3,-5,-10,-5,6,7,-4,8,-6,7,-10,-7,2,2,1,7,8,-10,2,-5,1,-10,1,-10,-10,2,6,3,-7,2,-10,-1,10,-9,9,9,-5,4,10,5,-8,8,-6,4,5,-1,-4,5,6,-4,-9,-4,5,-4,-1,-3,-8,5,-9,7,-2,10,1,-9,1,-1,-8,9,-4,-6,-2,3,9,3,-6,1,1,5,-7,8,-10,10,-7,-1,4,5,6,7,8,3,-2,-2,-6,-4,3,-2,-4,-9,3,-3,7,2,-8,9,9,-9,-6,4,10,-6,-2,4,-3,7,4,3,-8,7,6,-3,9,7,-5,-1,1,-7,-8,-10,-7,8,-9,-7,8,4,-3,8,-10,-9,-8,-1,-10,5,-3,-10,2,-6,-9,-7,-8,-10,1,-2,4,8,-4,2,-1,-1,-2,7,-6,-6,-7,-3,-5,5,-2,-6,10,8,-7,7,9,-2,-6,-4,3,9,-4,-4,-5,4,-6,4,8,-10,-4,3,-5,-4,-6,-3,-10,-7,-3,3,10,5,-10,3,-1,-3,2,-8,-10,7,-3,-3,1,7,-2,3,-8,9,-9,7,7,-5,-7,5,-7,3,3,1,7,9,8,3,-4,5,-7,1,4,3,1,9,10,-6,-8,-6,-6,-8,1,-10,6], dtype = "int16")#candidate|4137|(650,)|const|int16
var_4138 = relay.var("var_4138", dtype = "uint16", shape = (720, 1))#candidate|4138|(720, 1)|var|uint16
call_4136 = relay.TupleGetItem(func_3876_call(relay.reshape(const_4137.astype('int16'), [650,]), relay.reshape(var_4138.astype('uint16'), [720,]), ), 7)
call_4139 = relay.TupleGetItem(func_3879_call(relay.reshape(const_4137.astype('int16'), [650,]), relay.reshape(var_4138.astype('uint16'), [720,]), ), 7)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_4150 = relay.TupleGetItem(func_2519_call(), 0)
call_4151 = relay.TupleGetItem(func_2520_call(), 0)
func_1946_call = mod.get_global_var('func_1946')
func_1949_call = mutated_mod.get_global_var('func_1949')
var_4162 = relay.var("var_4162", dtype = "int32", shape = (1584,))#candidate|4162|(1584,)|var|int32
call_4161 = relay.TupleGetItem(func_1946_call(relay.reshape(var_4162.astype('int32'), [9, 16, 11])), 0)
call_4163 = relay.TupleGetItem(func_1949_call(relay.reshape(var_4162.astype('int32'), [9, 16, 11])), 0)
bop_4176 = relay.left_shift(var_4162.astype('int16'), var_4138.astype('int16')) # shape=(720, 1584)
uop_4184 = relay.acos(call_4121.astype('float32')) # shape=(770,)
uop_4186 = relay.acos(call_4122.astype('float32')) # shape=(770,)
uop_4204 = relay.sqrt(var_4138.astype('float32')) # shape=(720, 1)
bop_4206 = relay.not_equal(uop_4204.astype('bool'), uop_4184.astype('bool')) # shape=(720, 770)
bop_4209 = relay.not_equal(uop_4204.astype('bool'), uop_4186.astype('bool')) # shape=(720, 770)
bop_4210 = relay.less(uop_4184.astype('bool'), bop_4206.astype('bool')) # shape=(720, 770)
bop_4213 = relay.less(uop_4186.astype('bool'), bop_4209.astype('bool')) # shape=(720, 770)
bop_4218 = relay.greater(bop_4176.astype('bool'), var_4138.astype('bool')) # shape=(720, 1584)
output = relay.Tuple([call_4136,const_4137,call_4150,call_4161,bop_4210,bop_4218,])
output2 = relay.Tuple([call_4139,const_4137,call_4151,call_4163,bop_4213,bop_4218,])
func_4223 = relay.Function([var_4138,var_4162,], output)
mod['func_4223'] = func_4223
mod = relay.transform.InferType()(mod)
var_4224 = relay.var("var_4224", dtype = "uint16", shape = (720, 1))#candidate|4224|(720, 1)|var|uint16
var_4225 = relay.var("var_4225", dtype = "int32", shape = (1584,))#candidate|4225|(1584,)|var|int32
output = func_4223(var_4224,var_4225,)
func_4226 = relay.Function([var_4224,var_4225,], output)
mutated_mod['func_4226'] = func_4226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_4237 = relay.TupleGetItem(func_4021_call(), 0)
call_4238 = relay.TupleGetItem(func_4022_call(), 0)
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
const_4243 = relay.const([1.197015,-4.296439,7.276055,-2.824983,-2.402543,6.568521,-6.037748,-2.933581,1.725052,-6.089956,-6.706253,-0.002788,3.291654,-0.016206,8.371335,1.903954,0.914672,-2.043728,-6.710795,1.947501,4.010145,-9.536825,4.475413,-4.306090,5.922751,-9.770210,-1.273050,1.160501,1.098437,-4.111423,8.865362,0.491044,9.928772,-7.326297,-7.450807,-3.755679,-4.627652,-3.347461,-3.107569,-7.666536,1.393742,1.573674,3.499062,6.490871,-8.754365,7.724732,-6.949579,9.044197,3.203242,6.513084,9.375373,3.458798,-7.319555,5.368146,-8.980632,-3.248548,-3.544480,0.605846,-6.524794,-5.147809,-9.205090,2.178965,-0.809734,0.688683,-6.245922,-5.906597,-6.707397,2.130789,0.284284,0.051491,-7.694434,6.335378,-2.610461,1.365668,-8.863824,3.969501,8.444158,2.042913,7.488576,4.669062,1.399130,1.995629,-2.877987,-9.999035,5.970944,9.957130,3.291398,3.737661,-3.056575,-6.675779,-0.553379,9.323710,-8.022478,-9.056433,0.808651,3.163170,1.839642,3.917813,5.539736,5.271829,5.202320,5.684377,0.024502,-5.112429,1.401880,-9.087968,1.220648,6.687055,-2.919615,9.305885,-8.464999,-6.169767,-1.627646,5.017675,3.817808,-4.425090,8.779968,6.847340,-9.876128,-9.625135,8.471349,-0.327681,7.339799,-2.760386,3.888298,0.744739,2.285811,6.188232,6.008256,5.507751,0.985622,-0.488077,1.294148,5.620133,9.072065,8.452475,9.538434,6.197131,-7.701075,-8.893147,-8.118135,7.979322,-3.084041,9.286139,5.302624,-6.559967,-1.817305,6.435996,2.377815,-8.929053,7.833972,2.182054,8.790073,6.377571,-1.759045,6.129137,9.483966,-1.351217,2.762430,-6.592429,4.113759,3.187481,2.112693,7.221929,7.254545,6.024827,-7.135382,6.345629,-9.568900,6.420476,1.940285,8.167372,7.395001,-4.544745,5.427115,5.041621,6.734123,-4.728936,7.591463,7.985752,5.522058,2.146937,1.117940,2.195908,8.473755,5.751013,3.254617,-7.488590,-4.961210,0.426826,0.412065,-7.911084,2.204532,5.086780,6.005864,-9.621864,0.795619,-4.480372,-8.569851,-0.639319,-4.610835,-0.211659,-2.778722,-9.075977,4.092448,-1.732310,-5.871290,-2.527321,-9.703307,-4.087972,-6.399970,-3.973886,4.975450,3.000224,7.856998,1.365785,8.950228,3.023129,-0.640239,-5.443525,-8.730944,-3.710755,-2.135136,-5.752473,-6.002021,-8.802492,7.936397,0.449816,3.244811,2.459857,-8.410950,-4.619053,-6.330735,-2.524378,6.053643,0.240561,0.709811,-1.131915,-2.893117,-7.447172,6.146367,8.816304,-5.015778,5.457218,9.964398,-8.284026,-5.186560,2.350949,-3.273529,6.339679,4.952192,5.859849,4.971139,-2.706540,4.886651,-8.678127,2.195231,6.402809,-4.646542,2.313684,4.138774,-4.410809,-9.195042,9.007308,9.098409,-6.505593,2.730004,0.863656,5.052435,-2.387407,1.311967,2.702851,-3.539996,-5.488110,-6.431306,8.901756,4.978052,7.193071,3.737355,-3.630146,6.780770,6.127115,3.946809,9.208617,-0.736951,8.600982,2.479562,-5.552039,9.691625,-2.763808,-3.435982,-3.085450,3.349471,5.100872,-0.237037,6.477349,-7.050535,-3.768621,-2.372729,-0.915933,1.066479,-4.367144,5.430277,-3.244957,5.369798,-1.040161,-6.581218,8.597490,-4.489698,6.367167,-4.549997,-2.324138,0.531799,-7.621643,5.597292,5.145467,-1.887535,6.566613,-6.512886,3.964851,-7.699543,-2.533736,-7.218134,3.572680,-3.176864,4.282368,8.132071,-5.814261,-0.591968,-1.203726,0.512378,-5.605695,7.510119,0.102705,5.238453,1.843996,-1.251334,4.227807,4.029591,5.147277,7.503019,1.387934,4.974953,3.147745,-4.131537,0.068372,7.315551,-8.188585,6.337448,2.117625,-9.923857,-0.880791,-2.005218,8.679301,-5.067437,7.839956,8.041548,1.736472,-8.469982,-7.639367,-3.988137,6.778979,5.018717,9.267430,1.788837,7.258636,0.817988,8.322444,8.966954,-9.892867,5.358350,0.154724,-9.413706,4.587280,-1.542329,4.709272,3.926111,-5.387081,-4.714547,9.384750,-5.078523,1.551798,2.258047,1.771445,3.681461,-8.665512,-2.999751,6.203215,-5.258352,9.088048,-0.583170,-4.496175,6.784253,-1.188273,-4.903439,-9.152380,1.145540,-1.544917,-1.683294,3.555099,4.691911,-0.440731,-8.424312,-5.130433,2.301728,2.745285,9.693073,4.818806,-2.447186,-5.974506,-3.587647,-6.082650,1.886528,-2.218787,-1.677609,9.020745,5.824849,5.525109,-3.664091,9.731764,-4.812878,3.169195,-2.174166,-7.324166,4.852489,3.861345,4.168629,5.334053,-6.184056,-3.454834,0.082037,8.390895,-8.441265,-8.241079,-0.410632,-4.988369,-6.615981,-7.567639,-9.118038,-7.779128,-6.454032,7.248927,0.025511,-4.761558,-1.399538,-8.044664,-4.362388,5.331757,9.446986,8.924813,8.442017,-1.520043,-5.674482,-8.595706,6.239561,-0.921923,-2.746825,-2.710234,-9.348015,1.491601,1.155533,-3.139346,7.619391,-7.643944,-7.195368,6.611934,7.246435,5.577821,-2.151613,3.280496,-9.201977,2.718226,9.653657,-3.795439,-6.691767,8.243151,-3.616490,-2.509278,7.492877,-9.374589,-0.688319,3.745080,5.912237,8.389397,-4.271668,5.525628,-0.964950,3.090912,-5.706764,7.991288,9.560998,5.640419,5.351841,-7.191653,-2.996183,-0.634952,-2.234692,9.749389,-9.951594,5.158849,5.705184,-8.557557,-1.936443,5.173508,2.462167,9.275803,6.102701,-4.909351,-4.398373,7.373237,9.030057,-0.324129,4.729665,5.902449,-4.610997,-9.229722,-8.660140,-5.841992,-4.780646,2.471237,-8.458696,0.678282,9.672568,-1.268143,-7.378262,2.307608,0.930894,7.095540,6.339506,3.695970,3.970441,3.060132,-3.895307,-6.001884,1.016548,-0.155266,4.452099,-9.511489,-6.684512,-1.400580,-1.028919,-0.663504,3.316845,0.565144,3.471006,1.523622,-5.472805,-0.204169,-1.764772,-8.132740,-5.482990,6.093165,-3.325552,4.827118,3.367588,0.557234,5.111177,0.852464,1.069920,6.224313,7.643126,6.740258,6.866040,-2.488093,8.595803,4.440058,-8.381832,4.447208,-3.169571,5.413853,-0.820759,-8.866112,-2.558722,9.566824,-7.903308,-2.351109,6.657109,8.590040,8.538250,-4.644703,-9.562619,4.071558,-6.007687,7.656719,4.290561,-4.501428,2.937990,9.567180,0.968449,5.677615,4.832142,4.691268,-4.568601,9.326525,8.485798,-7.978543,0.686100,-3.483475,-8.462610,0.883350,-9.800483,9.853632,-8.661604,8.842100,5.326839,4.616230,4.621576,4.431289,8.591094,1.906279,-8.095307,9.548649,0.021801,-7.873295,3.668611,2.612669,9.667594,-2.780335,9.509184,0.494537,-2.079722,9.338943,-8.045260,5.884873,4.237037,-7.391036,-1.811260,-2.942329,2.505234,2.172053,-2.146173,-1.777986,-7.635669,4.640189,-1.674004,-4.468635,3.031639,-2.484898,6.389525,9.890121,4.298835,-9.100751,4.294253,3.743580,6.531090,-1.222510,-2.263454,-1.296890,7.693975,-2.901530,-4.719801,-4.853285,2.254858,5.827436,4.909834,9.093348,-0.429053,-8.231007,-6.411100,-0.576309,1.952971,2.617772,8.803256,-4.136364,8.924674,9.770877,5.792716,5.682844,-4.195373,5.376785,-4.688163,-0.327012,1.819360,-5.122445,7.084802,1.908709,0.126984,-6.615629,-7.526048,0.009010,0.645739,-3.870777,4.677850,8.428193,-5.453918,0.143035,-9.813253,-7.063868,-2.973474,3.845083,0.607058,-8.661757,-8.108994,-9.435336,5.326705,-6.234261,-5.230469,-4.672676,6.286823,9.036898,-4.560848,-5.280770,9.543515,-9.763783,4.512837,0.807879,7.212870,-7.368398,-5.508881,-0.796128,-3.168240,-5.602169,0.997181,-7.238290,5.451370,6.283953,-1.053213,-0.191154,-2.133084,-5.202158,-7.803641,-0.978601,8.680950,3.775926,2.280929,-9.815795,3.693335,-6.066485,6.240400,6.420263,2.834436,-6.710861,-1.505036,3.780879,-8.062384,-4.916284,0.046882,-4.044990,2.807141,-1.572477,9.491422,0.424534,7.730209,-1.875439,-2.569479,5.426268,-3.616276,-2.983568,-9.454815,4.514049,9.570147,-9.088029,-8.195753,4.646081,-4.440264,8.346119,-5.121735,-5.839297,-2.320427,-5.928012,-2.853450,-6.696154,-9.735074,3.370318,-0.076266,1.193459,4.810885,-4.936378,-1.358513,9.541183], dtype = "float64")#candidate|4243|(770,)|const|float64
call_4242 = func_171_call(relay.reshape(const_4243.astype('float64'), [14, 5, 11]))
call_4244 = func_171_call(relay.reshape(const_4243.astype('float64'), [14, 5, 11]))
output = relay.Tuple([call_4237,call_4242,const_4243,])
output2 = relay.Tuple([call_4238,call_4244,const_4243,])
func_4249 = relay.Function([], output)
mod['func_4249'] = func_4249
mod = relay.transform.InferType()(mod)
output = func_4249()
func_4250 = relay.Function([], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4286 = relay.var("var_4286", dtype = "float64", shape = (11, 2, 2))#candidate|4286|(11, 2, 2)|var|float64
uop_4287 = relay.sqrt(var_4286.astype('float64')) # shape=(11, 2, 2)
output = relay.Tuple([uop_4287,])
output2 = relay.Tuple([uop_4287,])
func_4294 = relay.Function([var_4286,], output)
mod['func_4294'] = func_4294
mod = relay.transform.InferType()(mod)
var_4295 = relay.var("var_4295", dtype = "float64", shape = (11, 2, 2))#candidate|4295|(11, 2, 2)|var|float64
output = func_4294(var_4295)
func_4296 = relay.Function([var_4295], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_4305 = func_3546_call()
call_4306 = func_3546_call()
func_2401_call = mod.get_global_var('func_2401')
func_2403_call = mutated_mod.get_global_var('func_2403')
var_4324 = relay.var("var_4324", dtype = "int64", shape = (1200,))#candidate|4324|(1200,)|var|int64
call_4323 = relay.TupleGetItem(func_2401_call(relay.reshape(var_4324.astype('int64'), [10, 8, 15])), 2)
call_4325 = relay.TupleGetItem(func_2403_call(relay.reshape(var_4324.astype('int64'), [10, 8, 15])), 2)
uop_4326 = relay.sqrt(call_4305.astype('float64')) # shape=(15, 16, 11)
uop_4328 = relay.sqrt(call_4306.astype('float64')) # shape=(15, 16, 11)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_4335 = relay.TupleGetItem(func_3240_call(), 0)
call_4336 = relay.TupleGetItem(func_3242_call(), 0)
output = relay.Tuple([call_4323,var_4324,uop_4326,call_4335,])
output2 = relay.Tuple([call_4325,var_4324,uop_4328,call_4336,])
func_4361 = relay.Function([var_4324,], output)
mod['func_4361'] = func_4361
mod = relay.transform.InferType()(mod)
mutated_mod['func_4361'] = func_4361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4362 = relay.var("var_4362", dtype = "int64", shape = (1200,))#candidate|4362|(1200,)|var|int64
func_4361_call = mutated_mod.get_global_var('func_4361')
call_4363 = func_4361_call(var_4362)
output = call_4363
func_4364 = relay.Function([var_4362], output)
mutated_mod['func_4364'] = func_4364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4390 = relay.var("var_4390", dtype = "float64", shape = (10, 10, 12))#candidate|4390|(10, 10, 12)|var|float64
uop_4391 = relay.log(var_4390.astype('float64')) # shape=(10, 10, 12)
output = uop_4391
output2 = uop_4391
func_4407 = relay.Function([var_4390,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
var_4408 = relay.var("var_4408", dtype = "float64", shape = (10, 10, 12))#candidate|4408|(10, 10, 12)|var|float64
output = func_4407(var_4408)
func_4409 = relay.Function([var_4408], output)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_4425 = func_3045_call()
call_4426 = func_3045_call()
const_4434 = relay.const([[[9.320719,4.245301,-5.319843,4.885782,0.228578,-4.121330,-9.950023,2.438784,2.333367,-0.901055,3.342197],[7.966505,9.705139,-8.789063,-0.457230,7.856023,-3.628681,-3.078358,-8.306809,-0.520110,0.041179,5.456345],[7.485359,-9.407539,-9.035661,1.253874,7.999373,-4.556495,-5.487184,-6.072989,-4.592458,2.366740,-7.619342],[-2.706156,0.612163,-7.035598,4.865865,-0.734123,-3.608250,7.625032,2.576790,-6.740835,5.195273,-3.007379],[7.006737,3.245243,-6.409406,7.222679,-2.569413,-4.754578,-2.570598,-4.153076,-3.765633,-9.996949,5.904082],[2.754745,2.147478,-4.495176,-9.996317,-2.464042,2.359482,-7.632982,-5.494146,-1.044638,2.296352,-0.578790],[5.944139,3.482627,-7.490631,-6.995854,0.581094,-2.740065,-0.181428,-9.279205,6.737202,-8.204731,-1.328081],[5.129233,-4.528715,8.166919,-1.047809,9.870394,-6.472067,8.994679,6.874923,8.497482,8.285876,6.664583],[-7.773913,1.187646,-8.461056,-5.699551,-1.453927,-9.075620,2.925872,-1.022753,4.608351,7.393126,-9.442975],[-9.664052,-6.675825,-0.741862,-4.318342,1.965986,6.116842,-8.341305,2.194475,-1.081907,-4.140423,-1.612734],[-9.662638,0.850205,9.596396,-7.696937,6.757379,1.635363,-4.948209,-2.210225,7.147209,0.651125,-1.884383],[-1.180260,-8.243240,0.435316,8.058881,-4.636900,-2.182834,-5.146069,-5.435100,2.662679,1.525489,0.531080],[-9.098341,-3.992434,-2.995645,5.718855,-5.122274,-9.809249,-6.268528,4.723974,1.942334,-4.683266,-9.173054],[9.869538,9.860623,-3.641387,7.366258,-1.135776,9.712114,9.178118,-4.035358,-0.932615,3.421038,5.710676],[-3.060874,9.722320,-9.263434,8.879874,-9.169255,9.177266,8.186694,7.741939,1.182963,1.913407,-2.669121],[-3.759389,5.817645,7.736585,0.735390,-2.424826,-2.093552,-9.724270,1.033124,5.432379,-1.500672,5.530506]],[[-6.461830,9.328825,-3.322287,7.904584,0.619113,7.289398,-2.152426,6.857662,7.849903,-5.044837,-0.303730],[-3.191038,-3.373871,4.437458,-6.431114,9.202783,1.691395,1.253396,0.576605,2.743304,-5.367208,7.378441],[5.558544,6.419426,-6.015242,-8.821520,-1.678113,1.717514,-5.505222,0.530683,6.080463,-3.069771,2.882581],[9.126940,-2.348328,-2.677729,3.174183,4.946440,-1.569810,-9.893736,-9.514522,7.411790,5.570273,-5.046560],[-4.442526,4.252655,-7.492290,-5.479116,1.857707,-9.961098,-8.412121,-0.463947,-5.144366,4.438953,-9.016964],[2.260093,-4.578067,0.525172,8.211938,-0.082941,-8.956010,-2.433421,7.097526,-9.821591,-6.213509,-9.155141],[5.840439,-0.593494,-7.356950,4.403809,3.676802,-9.701506,7.214529,-4.175405,7.506419,-9.275246,-9.437153],[-6.013141,-7.214917,-0.728476,5.469108,7.024504,0.441880,-0.305576,3.431452,2.344858,-3.828735,9.116808],[4.656399,3.535765,-4.831012,-7.427487,-0.455950,-2.333169,-1.754212,3.132601,5.963813,-8.227952,-0.805341],[-2.435254,-0.257230,9.030999,6.560319,1.732644,-0.685278,0.713161,-9.656583,5.015188,-3.506647,9.387559],[-1.381178,-0.355109,-6.692450,-0.068492,7.992474,-2.532145,-9.619592,3.146897,-0.908173,9.537573,4.386394],[5.968323,-0.604223,-0.166528,-5.121590,1.633572,-4.102022,-0.601115,0.019681,2.266253,-9.842605,-2.013697],[8.217450,-6.362818,-2.463482,-4.029304,1.552736,-7.839088,-6.201677,-9.154852,-5.650279,4.862006,-6.620157],[2.721310,5.321192,-4.043004,5.861168,-3.816983,-4.418709,-5.190151,-5.737953,-6.379647,5.173842,-0.929924],[2.967751,-0.627124,-8.604714,-2.449900,-1.469482,-3.300857,3.981542,2.015632,-1.594218,9.978214,-0.915425],[4.573031,2.665626,-3.226476,-7.398291,-5.109547,-4.461476,-4.100058,8.948535,0.547645,-0.772868,6.359410]],[[-3.626050,-6.697355,-7.299758,-0.367013,-1.992386,-4.093262,5.924617,-3.742522,9.332180,-3.459776,0.902915],[-5.988010,2.289319,-6.190076,-7.795115,9.746951,-1.147852,4.865426,-8.836647,-7.369212,0.275400,-6.195637],[6.294412,2.395247,9.752567,-5.108688,-1.567817,2.776074,-9.423063,3.276970,1.096276,-8.190083,1.105344],[3.831400,9.270268,-6.416935,-5.745189,1.824481,0.767132,-5.000188,-2.992896,2.200267,3.041578,9.327727],[9.950894,-4.141912,8.201682,-0.876120,-5.773955,-8.823044,4.412896,8.164132,2.699590,-0.023036,2.892616],[-1.467923,4.538892,-7.299661,-8.412522,3.733292,-2.496856,2.477141,-9.516076,-3.460170,9.326372,-4.650229],[5.624265,-0.867249,-8.356978,1.012330,1.627651,-7.874740,-4.977350,4.701766,-9.203048,-3.840640,6.026834],[-0.293263,9.994031,-3.914089,-2.776876,-5.165459,-2.223029,-6.494890,3.777128,-2.257424,7.208344,2.452066],[2.546518,7.875905,3.972977,4.633931,6.236814,-9.907263,-0.022976,9.333644,6.192606,7.712011,-8.900014],[3.943773,5.609640,-7.633206,-1.984893,-6.414340,-1.179464,1.055765,5.979412,-1.974526,-6.453731,-3.951268],[-1.968170,6.137280,4.987115,1.014385,3.398216,1.629336,6.158066,2.332294,9.872514,2.767435,8.922065],[-7.294300,2.219614,7.431177,4.196953,0.940072,9.760080,-4.349604,9.676757,-9.738804,-4.958159,3.144568],[0.321188,3.729534,6.994528,8.461979,8.809749,3.201315,-2.725124,-3.395374,-3.173553,3.207193,2.832458],[-8.105793,-9.924161,4.679456,-6.389685,-6.843488,9.272619,4.019998,-9.510486,-5.017361,-1.446391,3.935218],[-7.261676,-5.965350,3.088471,2.426623,5.160318,4.741230,-1.769242,-2.502173,2.620634,9.627821,-1.805737],[9.838618,6.284961,-1.338743,-7.728983,-8.429391,-7.770954,5.558450,0.898732,-2.885479,5.438502,-1.344583]],[[-5.222525,-7.434415,7.432664,-0.341434,-5.477158,-5.933261,4.474612,5.786271,-3.589043,4.391943,6.955721],[-8.937254,5.242172,8.890716,-0.453220,-3.932761,0.886336,7.684601,-5.940082,-0.754252,2.833874,-8.026088],[-8.542061,-5.352538,-7.320110,0.225092,2.805158,-3.229417,-5.034636,1.466004,5.997637,1.033405,-1.566347],[0.722309,-3.831214,-2.152689,-8.347819,6.037149,-3.295455,-3.636869,6.144201,-6.084571,2.551761,9.695928],[1.569142,0.852226,-7.479352,8.059411,5.072612,-6.420375,-7.846990,2.261799,6.241090,4.622223,3.369696],[-5.333971,2.408452,5.685005,9.726362,-0.010515,9.283594,7.064978,-1.892190,-5.009172,1.573148,-6.672671],[1.201185,6.080366,-5.514709,0.365736,-2.684197,-4.863510,-3.595890,-0.085407,-4.089893,-5.507618,-3.341366],[8.489785,-3.738973,-5.196569,-7.944751,-5.951809,6.236629,9.596747,-7.286076,4.008182,-2.354028,7.094831],[0.617495,3.338478,-1.840599,6.727854,3.168917,-2.248210,-9.277275,-4.521044,7.097804,6.933533,-4.569938],[-9.284936,7.111393,1.542037,9.496092,-0.254706,-7.394013,-5.226552,-9.499483,-5.842606,-6.005767,9.516328],[9.793643,-7.649229,-8.614804,9.512523,-5.685256,-7.432641,6.685315,9.313222,-3.676914,1.419692,4.164724],[1.430139,5.840622,-4.095616,-3.129180,7.630486,1.482319,-8.594294,1.211309,-2.482728,5.594732,1.881350],[-1.825808,9.009617,-9.175988,3.789096,-8.040388,9.832811,-7.099402,-2.497226,-6.500202,7.154753,5.732571],[2.558773,8.060752,-6.747377,-2.042314,-0.750316,-1.552081,7.056356,-2.024238,5.221491,-0.569718,5.879151],[-7.063990,0.470178,5.853821,-4.139946,1.220508,2.108770,9.172816,8.440640,3.004936,-7.542332,-3.562844],[-1.556231,-5.323255,9.919225,6.671329,-6.417980,-7.776795,-3.441934,-8.542928,-7.565372,-0.247726,-1.284531]],[[9.076463,-4.887490,7.896507,9.158472,-9.040130,7.554030,1.948972,9.727652,0.747030,-4.623279,-4.095432],[7.301844,8.546737,-3.206218,3.344814,4.109800,-9.162399,4.404794,-6.488765,7.402305,-6.703554,9.804949],[-2.117343,-2.822277,-2.286119,4.647208,5.626904,8.388060,6.879560,3.549671,4.298650,1.828557,-2.777136],[6.538844,5.637562,6.991898,5.314198,6.817672,-8.581009,8.705824,-4.565069,0.139274,6.074506,-7.343906],[-5.368771,2.306099,-6.795782,5.592192,0.141422,1.612376,-4.629619,5.869750,-6.882203,8.680257,-5.914091],[9.785785,2.648557,6.018790,-7.436140,0.122998,2.048452,-3.024622,-1.674326,-7.731308,-1.569159,-7.546375],[-4.870171,8.417224,8.691521,1.159910,6.030736,-7.310486,0.512133,-0.976010,-5.647086,-5.445036,-6.908263],[4.498254,6.825069,1.670180,-5.720213,-0.569826,2.021588,9.555382,-7.122497,-7.299495,6.780307,-4.908686],[-7.319255,-3.411535,0.424812,-7.176722,3.739610,-4.269102,0.958038,3.622842,5.867010,1.986181,1.648190],[5.425111,4.402405,9.121105,1.980943,-6.272802,-1.874881,-1.459513,7.251857,-2.704990,-3.918939,9.314778],[-9.956764,7.000861,-1.271308,-3.980910,7.601419,6.456127,6.518863,-6.993835,2.855621,8.542258,0.532262],[0.278032,-3.241349,-3.651953,-0.731009,5.194025,-5.826572,-6.317426,0.297583,-9.340067,0.815536,4.113497],[-3.022095,9.985575,-4.737669,-0.662034,-5.998257,7.386166,4.818776,8.831558,5.187898,-2.720657,-9.937522],[7.499672,7.117141,-3.749083,5.116029,6.284486,5.493507,0.933315,2.958711,-4.929258,9.352228,6.872612],[6.133048,-6.616106,8.608664,-9.215246,-8.198377,5.041120,2.411663,-3.087835,0.084546,-2.372858,-1.175470],[5.252047,8.765007,3.555099,8.548288,8.811023,2.279168,6.894353,-1.561672,-4.870222,3.461951,-1.715677]],[[-1.446103,-0.512274,6.314500,-8.989013,-7.914754,6.848161,1.343425,7.817231,0.148889,0.659491,-7.951153],[4.198785,-4.249984,8.517226,8.986836,-8.906781,-4.663238,-7.792684,-2.943801,9.940603,-9.671749,-5.967678],[2.722381,-0.220167,0.349550,-1.798981,-7.114753,-1.317886,0.079361,3.023789,-1.323704,-9.075810,-5.632527],[-4.025620,-4.962258,5.051905,-8.170256,-2.698858,5.487908,0.924369,4.887261,1.764898,1.587123,-4.803856],[9.140194,-6.807311,-5.826698,5.783970,6.183586,4.116655,0.813290,-8.118077,-3.844735,-9.095408,6.169260],[-5.088410,2.417884,-6.478592,-0.783279,4.288999,-0.951302,6.844656,4.012840,0.514768,-1.709154,-9.318848],[-5.296534,4.740854,0.473835,-0.639665,1.929856,8.329024,-7.196688,-4.057774,4.538766,9.296226,9.375597],[-4.491633,1.596109,9.896268,-6.536606,8.421997,-2.153129,4.174124,-1.346416,-5.039951,6.925858,-1.787795],[1.143303,-8.032955,7.034297,9.468567,-6.456820,5.188776,0.246775,6.396215,-4.108957,-4.484927,1.220625],[-3.612741,-1.186318,-9.220476,2.462674,3.408017,5.072155,0.560996,2.984561,5.322710,-5.381220,6.590974],[7.843211,2.583709,-8.967219,-3.440794,8.635389,2.273543,8.634626,9.322292,1.528530,9.148064,-3.343119],[2.004922,8.647950,7.468250,8.022639,-7.744925,5.399192,-5.156650,1.962012,-6.750957,9.394929,-0.649728],[2.527449,7.781667,0.598358,8.471634,2.070993,9.128440,6.863543,-9.632849,-7.770753,5.906841,-8.101178],[3.555898,-9.651784,8.400013,7.660862,-0.360803,1.050665,4.047388,-5.069311,4.465034,7.323453,5.195889],[4.598546,7.824392,-4.058985,-8.557938,-9.892409,-2.608391,7.490649,8.354465,-7.374109,4.423624,4.019419],[-7.053015,3.834542,-3.372930,-2.116842,4.233846,9.265315,6.838217,0.926756,4.420085,9.217273,-1.746771]],[[0.361266,-4.329057,8.797833,8.461168,-9.946535,-1.450288,7.617551,3.152722,-8.813259,-8.952455,9.764824],[7.922060,1.389746,4.770100,3.958155,6.271020,1.974552,-6.418005,7.205234,9.832828,8.010180,1.390782],[-3.668062,-7.256671,3.095022,3.798860,0.895324,7.634423,5.306754,7.666376,-6.512715,0.421010,-1.224433],[-2.570215,7.973517,-2.298585,7.556874,-0.428850,-4.642137,8.814994,5.373575,-5.122757,2.883650,4.984314],[-6.131350,0.919055,4.862567,-7.452473,-0.593008,8.156177,6.008708,-9.762977,9.904816,-0.587145,-5.272491],[2.686464,-8.749299,-9.639380,5.833984,-4.012584,-4.233896,-7.694887,-5.414955,-5.717510,3.867525,3.767356],[6.583765,3.001170,-2.590875,-3.172698,2.461373,-3.812309,4.156479,-5.598890,-5.994218,7.941313,-4.010236],[-9.194925,-1.146369,-4.930360,-8.062137,-4.428208,8.366285,-4.950612,-2.264612,-8.572227,-9.106358,2.802171],[0.808411,-1.321565,3.346217,6.726282,2.730071,-8.220542,-2.795527,8.633720,-7.154012,-6.659603,3.015942],[7.765532,2.408480,-6.885284,-9.467806,9.227018,9.661186,8.457838,6.343959,-5.323624,-2.523682,0.142149],[5.554316,4.772610,-4.793809,-1.867167,-0.064776,1.806684,0.041668,9.431342,-7.827939,-6.482194,-6.519481],[-7.762613,-5.525834,-0.048751,2.323022,0.599961,-9.441504,6.708160,-7.094925,6.271651,0.908443,-3.404954],[-1.883366,6.192143,-3.864578,-2.197367,6.458822,6.618338,7.720664,0.674260,7.375737,-8.575061,2.831868],[-2.129221,5.025359,1.972977,1.698267,8.013178,2.492373,-2.569314,-1.346344,6.806724,4.780020,5.513969],[-5.585283,1.200274,2.957580,-9.315823,8.187399,-8.275778,-3.265309,-9.627532,4.003603,1.102220,-1.045923],[6.331955,-1.150476,-1.560454,0.171618,-8.682873,-9.384617,5.667434,6.286112,5.497873,-1.929344,8.987638]],[[3.154338,-0.760166,-6.928686,5.886931,2.527782,0.580042,7.988334,2.976477,-3.099596,9.470443,-4.910658],[-2.745287,-6.785116,-9.422522,-0.048673,0.368904,7.426278,-3.030814,3.276158,-3.803479,-3.262659,-4.180308],[-7.508758,-7.800163,3.067102,4.566840,-5.842716,-6.891114,7.628330,-8.744851,-0.337470,4.801149,5.262505],[5.015660,-5.945791,-4.926691,-5.450131,-7.238697,-5.337781,8.406333,-0.803050,2.155237,-8.844224,9.119404],[7.317961,6.755001,0.001065,3.585605,0.171223,7.703399,5.245099,-3.731368,-7.949236,-3.581050,-1.365986],[0.480194,-6.564447,2.121682,-0.519201,3.886451,-6.904190,2.630911,8.932917,2.696702,-9.373737,-7.400656],[-9.124810,1.745436,-1.843327,3.881909,3.963478,7.156992,-1.814436,-8.356557,-9.648687,-2.175132,7.804354],[-3.097066,-4.910411,5.122933,2.440051,-3.149903,-5.059806,-3.195055,2.908056,1.864869,-0.179678,2.575720],[-1.658229,1.813994,9.946887,2.224070,-0.927676,0.826935,4.243121,2.854649,7.303947,-4.300715,7.636513],[-0.100021,9.295123,1.631037,-7.625592,-1.892550,-7.548360,3.307368,7.147527,-1.745240,6.585786,-3.408466],[-1.148305,5.310316,-2.037914,-3.730031,-7.854611,-4.260676,-4.610983,-6.660743,-9.521853,1.241984,-3.980637],[-3.080772,-3.919624,1.479673,2.090004,-5.769047,1.307197,5.982245,-6.703328,2.659716,-8.027402,-5.889718],[5.744946,0.404187,7.521735,0.227758,-7.360136,9.540538,-6.821097,-2.992268,-4.253859,-5.796888,-9.252078],[6.422236,3.338677,7.557178,9.865737,-7.251799,-7.446211,-4.118712,7.250597,-5.052494,-7.592414,-3.601044],[-1.115949,-6.645571,4.549839,7.923249,-4.726394,-1.475236,6.541331,7.569187,3.973915,-6.828389,0.897186],[3.535392,-0.717140,-8.281118,3.696908,4.467076,3.965618,9.782859,-2.167471,-0.683585,4.769985,-0.062445]],[[1.250372,7.769364,-5.729409,-0.277173,2.340808,-9.556645,0.639987,-1.148966,1.309355,6.099209,2.408858],[3.048257,3.551702,-1.977579,7.311513,3.598946,-6.695631,3.488955,-3.358382,-0.527233,-3.835254,6.877688],[-0.147025,-5.469357,-0.291769,-8.481059,-9.397117,4.302155,-6.402009,1.868079,6.687733,-1.045855,0.691650],[-0.069858,3.168586,0.465563,5.120323,-1.512872,-7.785531,1.796987,-7.648707,-7.315071,0.902333,-9.348653],[1.205682,9.709591,-0.518503,-4.799927,-0.520903,-6.659977,-8.564796,7.998071,-1.041493,9.551114,-5.346288],[4.137581,-8.081928,-2.771221,-0.145708,2.832481,-3.739147,-9.111717,-2.221914,-5.443419,9.853050,0.769966],[5.985529,8.551709,-0.451850,-0.979514,7.313815,9.034140,-1.320696,7.880360,-7.147083,-8.385241,-2.184218],[1.198598,-0.419151,5.559264,-3.668897,5.007037,7.428390,-3.151018,7.921356,-0.191667,-2.335941,-3.701257],[4.567230,2.693661,4.437010,-6.431970,-3.847973,-0.422525,-2.371630,-8.000752,-1.669944,-5.407819,-5.166665],[3.052788,6.875875,-5.993166,0.742619,-5.275258,8.202677,-9.261771,-6.219135,-3.472151,1.363784,6.637970],[-7.333326,-6.295718,7.454155,-1.307831,4.802725,8.775751,3.748070,6.043137,-9.786248,-4.916673,2.060641],[-6.624415,0.241129,1.114793,-2.897060,-3.668468,-6.179521,3.253548,9.978955,-3.599959,-1.698349,-9.812201],[3.042073,-8.016457,3.774158,4.717521,-0.078768,-2.199528,-9.841709,-7.641814,-7.291692,8.073746,9.084553],[-5.989049,-6.621783,-6.764113,-6.787875,7.433672,-6.358328,-6.208021,-1.549574,-7.422471,7.521752,-6.892118],[-9.112352,-3.464034,-6.974613,-1.324001,5.613956,-6.879603,2.769249,-6.395121,6.628076,2.875843,4.988442],[-9.276023,-6.087449,-3.232493,7.970997,5.901862,5.882532,6.429311,-7.556742,-5.764466,-5.248171,6.814358]],[[7.674299,-4.751971,7.280173,-8.395867,9.828367,-0.688151,1.743061,4.126456,-2.496681,8.698497,1.285676],[8.913891,-1.308255,9.247338,-7.943946,-0.324564,-6.129711,2.048388,-6.835319,-9.619280,-6.016951,2.777231],[-5.718662,-5.295791,-3.271223,-4.683371,-5.613485,5.712676,2.034558,-2.034521,4.503762,5.196665,3.347738],[-2.034320,-6.785148,2.230596,4.201412,9.339137,3.853183,-7.621206,0.260380,3.504944,-7.005086,-5.415717],[1.262259,-0.659798,5.656328,-6.185137,-3.074774,-2.965488,-0.541689,2.537656,9.906506,7.812937,-4.833841],[-8.235059,-4.041858,-2.462907,-6.307459,6.868003,8.253311,-2.600354,9.099726,1.555184,1.101345,0.157970],[1.041875,-8.228098,7.838542,5.924233,1.109162,9.485147,-2.263855,0.771356,-2.278123,-6.684709,-1.907956],[-7.679929,-8.304805,5.468346,5.986878,6.688305,3.760105,4.957244,8.393989,-4.736017,-1.560444,-0.932385],[1.199504,1.331300,-4.149376,8.590772,8.493991,7.741052,3.819290,7.510105,0.351215,4.291896,-1.412446],[2.040376,-1.511987,2.013236,9.362378,7.849733,7.128138,-8.482889,-2.387917,-6.405974,1.743938,6.126564],[-5.718800,6.780773,9.909634,-7.393853,-6.931521,1.750350,8.749658,9.469975,8.392540,-7.614598,-0.408275],[-2.811328,-1.871722,-6.282315,-9.537247,0.991857,-2.405323,-4.782909,7.474007,-5.700088,-5.938582,-9.315694],[-9.759263,-3.523470,-3.069183,-9.383689,3.770416,-0.807114,5.272494,9.555543,-7.526900,-3.067807,-2.681343],[8.878923,2.233566,7.806240,6.989928,1.793838,5.542905,8.312672,-6.856842,-0.993405,7.956384,-5.841230],[9.556210,-4.802882,-0.941315,1.020791,-5.084652,-0.473515,-3.610312,5.125948,-4.130779,9.941171,9.548414],[9.819160,-4.882089,3.655897,-0.931325,-7.509054,-2.652077,-2.729592,5.605354,6.199600,-4.099184,4.709203]],[[6.967954,-7.587513,6.232617,9.733419,0.856344,1.834697,5.898546,7.601940,-8.398552,3.504284,-1.636412],[0.800292,1.681742,3.789384,-8.516174,-5.483494,-2.282047,7.322564,-3.626980,-1.311732,-9.764888,9.486580],[-4.800305,6.841993,-0.675970,2.750275,-2.433525,-2.785813,0.888783,6.266157,-4.660887,6.516758,5.523454],[4.281637,-0.674279,0.091046,3.116338,-5.791656,6.235937,-6.295893,-2.376524,-6.539939,-6.577457,6.910098],[6.478467,5.815567,-7.499339,-5.558407,-6.461138,-2.505864,3.233732,4.278367,-0.717664,-8.728424,6.888116],[-6.358529,5.392251,6.382231,0.995797,3.315783,3.565652,0.521637,-7.980443,1.064432,3.874820,5.420687],[0.208193,9.106816,-8.801850,2.738304,-2.886975,1.477794,5.153727,6.652748,4.388466,9.485213,0.279958],[8.993681,-7.928176,-9.248405,-5.370337,-2.740697,-9.374760,7.046130,6.095303,8.170895,-4.789786,6.520749],[3.224505,0.510252,-3.528730,8.613381,8.271712,6.567552,-7.945338,4.489393,8.641423,-2.854148,6.531783],[-6.961270,8.066971,-0.373852,-6.137582,7.081176,-7.086656,2.162940,8.311777,-2.468183,6.699305,-7.905325],[-4.667878,-0.798232,9.670553,6.581635,-5.549357,4.335095,6.702175,-1.063356,-2.552305,7.121342,-0.103924],[3.563042,-3.047288,-5.508200,3.450358,1.895410,-1.429100,9.750228,-9.744114,-7.485952,-8.059488,-1.222204],[7.896894,2.357436,-6.085516,-8.534919,0.418105,-3.776510,6.642213,3.776163,7.596611,-0.576825,-0.909125],[0.083272,5.919027,-5.223716,-4.641495,8.246665,2.549003,0.226413,-0.489287,-1.058664,7.903123,0.409742],[1.180581,9.374641,0.335286,-0.485944,6.263098,-7.341709,6.783771,-0.353260,-5.620133,3.240087,-8.463954],[7.764171,-2.286935,6.047503,7.898242,-9.451851,4.226724,3.391665,-3.153840,5.329731,-9.211150,-8.077034]],[[-1.297737,5.096232,-1.297411,-0.165965,5.385875,1.523229,4.443206,1.821951,0.898649,5.812993,0.415935],[2.777391,-2.345261,7.127063,4.476007,-5.042875,-3.636193,-7.481032,-5.346557,5.022574,-6.732016,5.305043],[5.282355,-6.387080,-0.094826,-7.176235,1.714505,6.757552,-2.675916,-1.212023,-9.006205,3.064964,-1.818793],[-9.037716,-5.858129,-5.803941,-1.835962,-1.660797,-5.000084,3.093849,-7.085528,-7.344542,2.679541,3.841103],[-3.560120,4.306135,-0.534033,1.592984,-9.187391,5.142128,1.960149,-7.631514,8.693021,-0.146908,3.049235],[-0.571865,3.687435,8.513001,8.229247,-6.862342,-6.005003,-7.597184,-4.141959,8.515964,4.766764,9.989243],[-1.281870,3.370279,-6.563899,1.258495,2.251214,3.898084,-2.531808,2.909653,1.004340,2.541090,-2.399349],[-8.682377,5.105248,9.093989,-8.822598,-7.390335,-8.302861,-4.326544,3.225500,1.062222,8.211728,6.647044],[3.040556,4.603889,-7.206853,8.923414,2.322568,4.407696,0.384939,6.194715,0.592687,3.446745,9.412616],[-1.835256,5.638929,7.932301,-4.988971,7.578707,-2.203157,-5.114979,9.901462,2.400753,1.016223,-7.978566],[2.495001,-2.625941,7.882342,6.230689,4.123843,1.608868,6.492090,1.663006,5.087197,8.575199,-0.072323],[-4.624914,5.670783,-7.080035,-5.762034,-6.043731,-1.518697,-8.678624,-8.659304,9.691396,8.469309,-3.878558],[6.156253,-9.314829,-6.603125,-3.634834,5.931620,3.917089,-0.216545,3.722678,-0.247211,4.046144,-7.026224],[-0.803482,7.092999,-6.500844,-5.316945,3.615544,-7.574499,-3.771231,2.882295,7.363768,3.290734,-0.334415],[-9.301559,-3.786115,3.676164,-7.711755,0.848146,-4.048312,-2.442460,4.612117,1.072691,-5.019116,-6.590106],[2.631792,-1.045568,-9.217855,3.647467,4.713710,-5.021859,-9.268843,9.664511,1.641471,7.717740,3.407924]],[[-2.593239,-2.730231,2.310062,5.855848,7.961836,-2.005077,-1.955233,9.456292,7.599706,1.930879,-9.958990],[8.825739,-2.817684,-9.067220,-4.002420,2.477228,-4.000220,-1.450727,7.489242,8.167486,-5.695449,-3.207073],[-1.839021,-8.721687,-9.902692,6.787619,3.411859,5.453929,1.785536,9.343800,1.336653,-3.892207,-9.573845],[-0.554458,-2.096258,-1.929679,9.506753,4.063634,-6.389421,7.668560,-6.110612,4.258014,1.328501,4.179282],[-3.599896,-2.772142,-4.747053,6.111619,9.620169,-5.608823,8.737410,4.236820,7.328740,-3.815477,-9.843854],[-2.701642,-2.965519,2.630701,-7.346286,-1.849728,1.508641,1.624120,9.863415,5.187829,-6.971666,3.856769],[-5.677313,-8.267826,9.194116,-1.716509,-6.091073,-3.865122,-8.576471,-8.172624,3.330771,-5.112407,7.854570],[-1.867704,-7.203420,3.240975,6.983996,1.755516,9.325628,6.187510,-4.651271,5.692304,-8.080407,-9.004124],[7.379605,-9.337010,0.979514,5.131102,-5.896336,-4.839712,0.335924,1.466807,-5.949711,5.832356,-1.544619],[-0.831863,-3.522093,7.440772,-8.253781,7.369591,-3.121665,-0.045520,-7.618291,-0.493422,6.244756,-1.805292],[-4.080344,5.074816,-5.406443,1.402337,6.076094,9.730709,1.376275,-9.869907,-6.174560,3.299012,8.076350],[6.257700,8.804895,-6.815632,-1.817442,-3.967676,-5.427810,3.265568,-4.028698,0.368155,-7.249819,8.606582],[9.279212,8.395429,9.751895,-7.596387,-5.878915,6.076504,1.014708,-2.772977,-9.843642,9.089755,-2.664604],[6.812977,8.352189,-2.094265,6.124011,8.080967,-3.531533,8.602430,2.605935,-3.545510,0.142553,8.046175],[-5.716870,-6.019685,-3.135807,8.489132,-0.947524,8.806819,-1.133294,6.326886,7.799952,-4.060382,-5.363676],[-2.713817,-7.336135,0.065043,-7.198097,-4.242997,4.842664,1.155112,-3.958622,-5.676269,5.298684,-4.216936]],[[-6.830791,8.640152,-9.261031,2.960681,6.119006,-3.342864,-0.413481,8.566562,0.918542,3.717160,-5.435377],[-9.073634,-5.275934,0.824767,8.137008,4.024488,-3.086894,7.059746,-7.626970,2.240258,-1.916349,8.866529],[3.143601,0.942465,4.990995,6.598500,1.609794,-8.891099,6.094878,4.544834,-9.733714,-8.340160,-4.796322],[6.459790,-7.938275,-6.926970,4.067446,4.512710,0.438249,2.141071,-0.211805,-9.805931,-8.755020,3.512761],[2.128772,-2.518572,5.504346,-5.355245,3.560839,-1.595922,-4.409720,-9.194843,2.922733,-3.081980,5.483868],[2.052710,8.778402,0.277366,-9.874947,5.328519,-2.649971,7.031883,-9.762593,3.848821,-9.077787,0.736810],[-2.111610,-3.265352,7.751521,-5.182213,-1.902061,-9.193242,-4.817572,1.501774,-2.835471,-9.929062,8.332557],[-1.624617,3.679444,2.636351,-1.285006,-4.999953,-0.351960,-9.095411,2.271540,-3.460264,-1.267280,6.861841],[8.369105,5.522728,2.577141,-5.133168,-4.230329,-2.262778,-1.839513,1.742796,-1.466570,4.366417,-9.612175],[0.068780,2.760272,9.992756,-0.334816,-5.955055,4.653203,-7.561374,3.939337,0.195386,5.660190,8.496144],[9.190081,-2.445292,-1.420389,5.206841,3.403834,-7.979917,-9.091518,-9.793073,0.645525,-0.488909,7.819830],[0.145732,5.221099,-6.968291,4.563208,-1.326191,-2.860773,-3.146663,1.925367,2.926031,-8.032368,1.657605],[3.227463,-6.191403,-4.959893,6.504424,5.779500,-1.563887,-5.953648,9.629227,-1.648025,-3.389153,0.893060],[9.459625,-5.245209,8.349612,-6.945529,-2.113629,5.453816,-5.591776,0.819103,3.629314,2.010308,-8.862341],[-0.913217,5.481658,4.690933,8.956466,-6.098646,5.936963,4.710880,-1.443617,5.459397,8.632753,3.862195],[-8.153010,0.696092,8.700059,8.569214,-1.701014,5.007202,-6.975874,-4.452795,2.200969,-0.240536,9.845131]],[[-0.037761,-0.825650,-9.476379,-7.644369,9.241477,8.862415,-6.045413,6.803007,-6.269668,7.282538,5.116507],[-6.054006,6.035028,8.654888,7.203887,7.007995,-2.743407,8.014817,3.086480,-0.544113,1.497472,5.973679],[-1.420004,9.877013,3.331725,-0.439356,0.502551,-5.905705,9.191225,-0.763327,-9.281535,-5.276835,0.778868],[-8.401699,6.580629,-5.619903,-5.159107,-2.256377,-1.232042,0.582272,-0.258166,3.862482,-6.912314,-4.758556],[4.570729,-0.784532,-7.280768,-3.308746,9.037319,-8.143641,9.636854,0.246619,-9.210265,-1.138783,0.605876],[-8.498836,1.865406,0.080228,2.130560,9.390178,0.457272,7.126566,-6.442022,2.012968,-0.497493,-1.606729],[-9.000934,9.104818,9.881753,-5.822062,9.102756,-4.749582,-9.891769,-1.358421,6.247339,-8.120305,-2.536157],[-8.421397,6.627286,-2.950921,0.087334,6.850785,-4.827118,8.008853,-0.373371,-3.880617,-4.713841,-0.031670],[2.643092,6.368221,7.559819,7.971948,8.645050,-4.999895,5.734792,-0.745919,-7.628144,9.522366,-5.191838],[-5.360454,-5.901432,-6.886111,-8.723758,8.840090,1.281682,-0.224650,-9.825218,-4.234801,-8.309388,-9.287686],[4.681753,-8.806051,-1.802197,-2.025717,-5.194926,9.668921,-7.618624,-7.793341,-9.495974,-7.315912,-2.383331],[-0.966739,-7.888331,-5.182126,-8.051149,-9.706310,5.037615,4.625535,-1.741432,-9.348615,-7.789655,5.305086],[6.327024,5.388769,0.641694,8.043710,8.474364,-4.674724,8.710381,-0.757067,3.041148,2.998535,0.214990],[-2.552185,0.105928,8.047962,-8.791153,-9.967005,-6.160457,-9.589596,8.201510,3.713703,7.328921,-1.037306],[-2.749200,-3.445611,6.999003,-9.561017,-7.046150,4.128407,0.661434,-3.213948,1.339908,0.211467,-7.588463],[-2.770142,8.352046,-5.351749,3.165348,0.018194,6.276857,-5.580755,-7.372885,-9.558914,7.337200,-6.443128]]], dtype = "float64")#candidate|4434|(15, 16, 11)|const|float64
bop_4435 = relay.equal(call_4425.astype('bool'), relay.reshape(const_4434.astype('bool'), relay.shape_of(call_4425))) # shape=(15, 16, 11)
bop_4438 = relay.equal(call_4426.astype('bool'), relay.reshape(const_4434.astype('bool'), relay.shape_of(call_4426))) # shape=(15, 16, 11)
func_1142_call = mod.get_global_var('func_1142')
func_1145_call = mutated_mod.get_global_var('func_1145')
var_4441 = relay.var("var_4441", dtype = "uint16", shape = (495, 1))#candidate|4441|(495, 1)|var|uint16
call_4440 = relay.TupleGetItem(func_1142_call(relay.reshape(var_4441.astype('uint16'), [3, 11, 15])), 0)
call_4442 = relay.TupleGetItem(func_1145_call(relay.reshape(var_4441.astype('uint16'), [3, 11, 15])), 0)
func_171_call = mod.get_global_var('func_171')
func_174_call = mutated_mod.get_global_var('func_174')
const_4444 = relay.const([8.321170,-8.515756,3.253371,4.642019,-4.990970,-2.787468,5.030985,6.142039,-0.669463,-6.294434,-3.706864,8.389036,2.473964,3.583006,-6.283176,-9.706886,-8.351437,-3.694433,-7.699976,-1.140385,7.842182,-0.123852,-5.671696,-3.109325,8.295083,2.548853,6.302693,-6.307680,9.938888,-2.689933,-5.439660,9.919563,5.643489,-8.855183,0.921858,-1.235640,3.725338,4.164750,0.345233,-7.699281,-2.225566,-2.339156,2.568095,-6.759561,-2.366909,-9.028109,0.836996,1.865209,6.367541,-4.575663,-3.833689,3.661890,0.717453,3.276936,-1.948121,8.781100,7.528024,1.397220,2.859023,9.971468,-0.068098,-1.422663,0.636421,-5.448241,0.862091,0.394502,-5.754510,2.854435,0.772829,-0.979974,-9.015521,5.626514,8.473551,-3.400318,-0.784655,-2.379048,3.689793,3.025551,-1.563238,0.783813,-0.168793,2.109375,0.166978,7.518211,1.557838,6.493889,6.595501,1.797142,2.480096,3.649238,8.141145,-3.791854,-8.199947,1.940190,7.906036,-1.156970,9.604877,-4.526857,-7.641808,0.465266,3.987383,-4.640614,9.640906,7.199940,8.267759,5.966220,-8.938816,-7.267038,7.092281,4.893957,-4.482036,-2.200300,7.901737,6.235573,-4.489900,8.776736,3.743452,1.654597,9.679321,0.497841,2.039454,1.853399,-1.364245,2.862781,4.765021,-1.110829,-2.285839,0.215715,-6.228427,-9.240293,-4.228368,-6.866753,7.293245,-8.423609,8.831533,8.090604,-6.526464,-4.134270,-9.249147,-4.426347,3.406797,-7.480074,-7.403024,0.015671,-4.314204,1.616737,-2.833808,-8.391940,6.716547,-6.625423,-0.052942,-2.882557,1.536396,1.642516,-0.921254,6.671961,-4.864204,8.962827,-3.175989,9.989399,-0.015796,5.718744,3.586611,-4.204076,-1.187869,2.868535,0.846483,-1.640194,-4.430807,-3.119682,8.280639,-2.173280,0.956107,-0.373495,4.445981,-3.198527,0.545882,-9.668054,0.702516,4.093025,1.990656,-4.465204,-6.572524,7.649211,-7.270047,7.102510,-7.936800,-1.148892,-6.388875,4.510020,-9.856128,5.670642,3.193499,-9.144371,5.294607,-6.953952,-9.386037,3.372477,0.456023,-1.173248,-2.821812,-4.896202,4.634507,6.181395,3.821491,1.115629,-9.759889,7.602949,-6.033156,1.879626,-3.020532,6.587270,-6.713000,6.008299,4.958660,-7.985343,-4.748729,-4.039708,7.329174,7.005851,-3.480188,-9.258555,9.150370,-5.950024,-5.330913,9.630509,-1.139504,1.803343,3.857303,-2.351882,-9.555561,6.009381,0.413515,9.540711,0.200112,-0.655165,1.353115,-5.293674,-4.061843,0.245914,-2.999595,4.849354,9.825426,-2.424339,-1.278973,4.243322,7.839444,1.444079,4.515062,5.632221,1.885861,-4.140956,-9.937397,2.547617,-0.523756,2.811673,-6.015749,2.197618,-0.639446,-2.380049,-7.318311,8.302831,-0.991167,0.046138,2.967849,-9.858266,-2.499496,-0.171346,-5.911192,5.463811,-0.844863,7.982093,-2.961862,-3.255742,-0.463739,5.728512,-4.664893,-9.371156,2.971404,-2.489938,-0.577902,3.290827,-0.562655,-8.984097,5.279782,9.477370,-5.853208,-9.427062,8.411909,1.040238,-6.305932,-1.089159,-6.672071,6.713422,-1.295655,-1.670256,8.258231,3.360129,4.042638,-7.602248,-2.910839,-0.236528,-4.970864,0.131446,3.563387,-9.001295,7.891167,1.521045,4.728755,8.245133,-8.735188,0.857277,6.756590,0.409026,-3.386997,0.823266,2.496754,4.277309,7.476573,4.729669,-7.743417,-2.322624,2.564509,9.701270,-9.834782,-7.811800,-2.800844,-9.216500,6.133066,4.864962,8.121632,-2.505323,-1.584435,0.820332,-4.595782,3.030228,-0.431220,-1.726687,4.087730,-6.513978,-7.489291,-8.119592,-0.366431,-3.125152,5.877305,5.660444,-3.690612,1.859010,-2.247845,-4.641390,-8.305804,7.712926,1.609506,-0.023130,2.531325,8.809722,3.181296,-3.681453,-6.477493,8.046453,-5.819316,9.290559,-4.669738,-0.760560,1.492587,5.650738,-6.098963,-1.753564,-7.683833,-2.509190,5.173324,9.490437,1.459444,8.122315,-3.094153,9.697407,4.058438,-3.723101,-3.483283,-4.753866,4.923426,7.856810,-1.068089,-6.732355,-6.314762,-1.135274,-3.893363,-9.881729,-5.523691,2.174625,7.885681,0.880102,9.274797,-0.561098,-1.247042,5.148500,3.408917,3.186238,-3.243372,-8.633584,-2.608120,5.598204,5.360136,5.990644,5.409815,-2.227541,9.590931,3.679942,5.412961,-7.850468,8.326144,-1.520549,-8.781399,-1.165348,2.433369,6.693384,-7.422606,-9.994433,2.845634,8.429600,-1.335927,2.268222,9.953323,4.294120,-1.112892,7.192629,0.106862,-6.162422,0.896123,3.365774,-6.736952,6.428137,3.918214,-8.086794,6.151640,9.389130,3.937361,7.375078,7.060732,-2.508658,9.955309,8.502841,6.224397,-8.333618,2.418902,5.364672,4.493488,-5.086850,-3.196012,1.715853,-7.008014,8.783391,3.385732,-7.799871,2.414899,-3.610004,-5.653426,-7.059006,-0.874011,5.100251,-3.639501,5.292108,9.275042,-6.373578,-7.898427,1.783344,-9.484088,-3.997426,3.552319,-4.296694,1.363226,6.976032,7.679238,5.586490,5.177584,4.981838,2.979937,2.965203,-9.390015,-9.618080,4.065299,0.606888,5.550062,2.956926,-1.996472,4.571529,-9.731164,-5.616652,-1.442750,6.414424,-8.868735,4.817078,2.727804,-5.100290,-2.787207,-8.180374,-7.292587,6.302531,-5.354592,-5.230541,5.644931,-8.521668,3.141010,0.823591,6.256451,7.972659,0.228703,8.468062,0.889301,-4.935034,8.381869,3.783184,-7.334347,3.204557,8.569871,6.629194,2.542851,-1.673151,-6.222835,3.812934,7.944492,2.247447,3.422916,2.488613,-2.285335,5.445686,3.862428,6.931631,8.342993,-4.800096,8.923767,4.739163,3.885854,7.812292,7.731185,0.738259,1.361025,4.910326,-3.026622,3.099151,-7.273399,-9.655655,2.565659,8.701386,-4.319598,7.776611,-6.676511,-2.755844,-3.703274,7.854196,-8.113458,-1.767665,-5.504169,2.319648,2.488107,4.314077,8.106440,9.858313,-1.741450,7.049685,-8.494899,-2.787226,-2.690367,-9.724155,-4.513334,-6.781127,9.135896,-9.725935,5.953701,-9.441987,-6.089047,-2.802856,6.245705,-8.908539,1.964505,-2.084221,-3.366571,-9.004355,0.522655,0.910365,-6.058879,0.386558,3.336153,9.845849,0.293349,2.381712,-3.568093,6.524647,4.997414,2.294147,3.626566,-7.116138,-7.533378,-8.361987,7.617275,8.763417,-8.363391,3.580219,-4.724364,-0.499021,-3.233174,4.109173,8.265913,-3.411389,-7.037166,1.094015,7.822632,4.112539,-4.431192,-8.075940,5.010929,-4.284148,-1.487816,2.057194,-5.213306,-2.418215,3.360819,6.402179,-1.218551,1.802327,3.020949,-7.624372,-5.999146,-4.030145,-3.141362,0.136544,-6.035655,1.417958,9.453733,3.123611,-9.268972,6.596563,2.595759,-4.092342,-4.782573,-3.534363,4.844155,0.305657,-7.169221,-5.675446,-1.919163,6.159075,3.487010,6.807816,1.012081,8.248790,-0.951565,-9.175314,1.581318,3.562607,-7.574291,-7.719427,-3.891670,-6.874457,8.071107,9.346690,-5.132246,2.165693,9.419612,-8.361186,1.663912,-1.613402,-2.132796,-3.740020,-2.605871,-6.629013,2.517273,-3.284546,-4.712043,0.148484,7.875885,7.642576,1.269651,-9.573830,9.878087,1.270539,-2.079679,-3.884523,-7.632671,-2.416971,-7.006257,-9.271983,0.963036,5.034240,9.753001,-6.008271,-3.156579,-4.648725,-6.908150,-2.292618,6.913194,-4.796859,-3.609834,6.555700,8.472212,4.017547,-8.184260,-1.803643,-2.895865,5.469856,-1.318056,-0.348087,6.165457,-8.428526,4.876783,0.763736,-1.146292,-2.038371,-3.960613,-9.185991,-0.721281,9.485257,6.604004,-0.567174,3.512928,6.975238,8.789148,-0.415470,-8.699131,-5.674143,-9.619957,-5.427636,-7.650245,2.736369,-2.927557,-1.787524,7.268307,2.208960,2.944343,-5.389982,3.612501,-8.292798,0.789207,1.984549,1.717817,-3.924342,3.300928,6.808866,2.237421,-4.221990,-3.263789,-3.347449,-4.325749,-2.202270,-0.585023,0.199021,-3.648252,-2.672739,-7.126027,1.144904,-8.181989,7.398873,-7.103661,8.463206,2.193527,-6.577688,-2.375368,6.995564,-1.498833,6.156501,-2.761518,6.226673,-7.021469,8.819478,0.248237,0.560327,-8.542550,-4.551089,2.422547,-1.971530], dtype = "float64")#candidate|4444|(770,)|const|float64
call_4443 = func_171_call(relay.reshape(const_4444.astype('float64'), [14, 5, 11]))
call_4445 = func_171_call(relay.reshape(const_4444.astype('float64'), [14, 5, 11]))
func_2431_call = mod.get_global_var('func_2431')
func_2435_call = mutated_mod.get_global_var('func_2435')
var_4450 = relay.var("var_4450", dtype = "float32", shape = (1, 24))#candidate|4450|(1, 24)|var|float32
var_4451 = relay.var("var_4451", dtype = "int16", shape = (650,))#candidate|4451|(650,)|var|int16
call_4449 = relay.TupleGetItem(func_2431_call(relay.reshape(var_4450.astype('float32'), [1, 12, 2]), relay.reshape(var_4451.astype('int16'), [1, 650]), relay.reshape(call_4440.astype('uint16'), [495,]), ), 4)
call_4452 = relay.TupleGetItem(func_2435_call(relay.reshape(var_4450.astype('float32'), [1, 12, 2]), relay.reshape(var_4451.astype('int16'), [1, 650]), relay.reshape(call_4440.astype('uint16'), [495,]), ), 4)
var_4453 = relay.var("var_4453", dtype = "float32", shape = (7, 24))#candidate|4453|(7, 24)|var|float32
bop_4454 = relay.multiply(var_4450.astype('float32'), var_4453.astype('float32')) # shape=(7, 24)
output = relay.Tuple([bop_4435,call_4440,var_4441,call_4443,const_4444,call_4449,var_4451,bop_4454,])
output2 = relay.Tuple([bop_4438,call_4442,var_4441,call_4445,const_4444,call_4452,var_4451,bop_4454,])
func_4461 = relay.Function([var_4441,var_4450,var_4451,var_4453,], output)
mod['func_4461'] = func_4461
mod = relay.transform.InferType()(mod)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4461_call = mutated_mod.get_global_var('func_4461')
var_4463 = relay.var("var_4463", dtype = "uint16", shape = (495, 1))#candidate|4463|(495, 1)|var|uint16
var_4464 = relay.var("var_4464", dtype = "float32", shape = (1, 24))#candidate|4464|(1, 24)|var|float32
var_4465 = relay.var("var_4465", dtype = "int16", shape = (650,))#candidate|4465|(650,)|var|int16
var_4466 = relay.var("var_4466", dtype = "float32", shape = (7, 24))#candidate|4466|(7, 24)|var|float32
call_4462 = func_4461_call(var_4463,var_4464,var_4465,var_4466,)
output = call_4462
func_4467 = relay.Function([var_4463,var_4464,var_4465,var_4466,], output)
mutated_mod['func_4467'] = func_4467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_4542 = func_3546_call()
call_4543 = func_3546_call()
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_4544 = relay.TupleGetItem(func_1964_call(relay.reshape(call_4542.astype('bool'), [15, 16, 11])), 0)
call_4545 = relay.TupleGetItem(func_1966_call(relay.reshape(call_4542.astype('bool'), [15, 16, 11])), 0)
func_3723_call = mod.get_global_var('func_3723')
func_3727_call = mutated_mod.get_global_var('func_3727')
var_4547 = relay.var("var_4547", dtype = "uint8", shape = (208,))#candidate|4547|(208,)|var|uint8
call_4546 = relay.TupleGetItem(func_3723_call(relay.reshape(var_4547.astype('uint8'), [8, 2, 13]), relay.reshape(var_4547.astype('uint8'), [8, 2, 13]), ), 0)
call_4548 = relay.TupleGetItem(func_3727_call(relay.reshape(var_4547.astype('uint8'), [8, 2, 13]), relay.reshape(var_4547.astype('uint8'), [8, 2, 13]), ), 0)
output = relay.Tuple([call_4542,call_4544,call_4546,var_4547,])
output2 = relay.Tuple([call_4543,call_4545,call_4548,var_4547,])
func_4550 = relay.Function([var_4547,], output)
mod['func_4550'] = func_4550
mod = relay.transform.InferType()(mod)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4551 = relay.var("var_4551", dtype = "uint8", shape = (208,))#candidate|4551|(208,)|var|uint8
func_4550_call = mutated_mod.get_global_var('func_4550')
call_4552 = func_4550_call(var_4551)
output = call_4552
func_4553 = relay.Function([var_4551], output)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
call_4568 = relay.TupleGetItem(func_3953_call(), 1)
call_4569 = relay.TupleGetItem(func_3955_call(), 1)
func_4223_call = mod.get_global_var('func_4223')
func_4226_call = mutated_mod.get_global_var('func_4226')
var_4572 = relay.var("var_4572", dtype = "uint16", shape = (720,))#candidate|4572|(720,)|var|uint16
var_4573 = relay.var("var_4573", dtype = "int32", shape = (1, 1584))#candidate|4573|(1, 1584)|var|int32
call_4571 = relay.TupleGetItem(func_4223_call(relay.reshape(var_4572.astype('uint16'), [720, 1]), relay.reshape(var_4573.astype('int32'), [1584,]), ), 1)
call_4574 = relay.TupleGetItem(func_4226_call(relay.reshape(var_4572.astype('uint16'), [720, 1]), relay.reshape(var_4573.astype('int32'), [1584,]), ), 1)
uop_4577 = relay.atanh(var_4573.astype('float32')) # shape=(1, 1584)
bop_4580 = relay.left_shift(uop_4577.astype('uint16'), relay.reshape(var_4573.astype('uint16'), relay.shape_of(uop_4577))) # shape=(1, 1584)
output = relay.Tuple([call_4568,call_4571,var_4572,bop_4580,])
output2 = relay.Tuple([call_4569,call_4574,var_4572,bop_4580,])
func_4583 = relay.Function([var_4572,var_4573,], output)
mod['func_4583'] = func_4583
mod = relay.transform.InferType()(mod)
var_4584 = relay.var("var_4584", dtype = "uint16", shape = (720,))#candidate|4584|(720,)|var|uint16
var_4585 = relay.var("var_4585", dtype = "int32", shape = (1, 1584))#candidate|4585|(1, 1584)|var|int32
output = func_4583(var_4584,var_4585,)
func_4586 = relay.Function([var_4584,var_4585,], output)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2561_call = mod.get_global_var('func_2561')
func_2562_call = mutated_mod.get_global_var('func_2562')
call_4636 = relay.TupleGetItem(func_2561_call(), 0)
call_4637 = relay.TupleGetItem(func_2562_call(), 0)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_4642 = relay.TupleGetItem(func_1922_call(), 0)
call_4643 = relay.TupleGetItem(func_1924_call(), 0)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_4653 = func_3674_call()
call_4654 = func_3674_call()
output = relay.Tuple([call_4636,call_4642,call_4653,])
output2 = relay.Tuple([call_4637,call_4643,call_4654,])
func_4657 = relay.Function([], output)
mod['func_4657'] = func_4657
mod = relay.transform.InferType()(mod)
mutated_mod['func_4657'] = func_4657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4657_call = mutated_mod.get_global_var('func_4657')
call_4658 = func_4657_call()
output = call_4658
func_4659 = relay.Function([], output)
mutated_mod['func_4659'] = func_4659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_4703 = func_2963_call()
call_4704 = func_2963_call()
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
var_4714 = relay.var("var_4714", dtype = "uint64", shape = (490, 3))#candidate|4714|(490, 3)|var|uint64
var_4715 = relay.var("var_4715", dtype = "float64", shape = (7, 110))#candidate|4715|(7, 110)|var|float64
call_4713 = relay.TupleGetItem(func_1660_call(relay.reshape(var_4714.astype('uint64'), [15, 14, 7]), relay.reshape(var_4714.astype('uint64'), [15, 14, 7]), relay.reshape(var_4714.astype('uint64'), [15, 14, 7]), relay.reshape(var_4715.astype('float64'), [770,]), ), 0)
call_4716 = relay.TupleGetItem(func_1665_call(relay.reshape(var_4714.astype('uint64'), [15, 14, 7]), relay.reshape(var_4714.astype('uint64'), [15, 14, 7]), relay.reshape(var_4714.astype('uint64'), [15, 14, 7]), relay.reshape(var_4715.astype('float64'), [770,]), ), 0)
func_3223_call = mod.get_global_var('func_3223')
func_3226_call = mutated_mod.get_global_var('func_3226')
call_4717 = relay.TupleGetItem(func_3223_call(relay.reshape(var_4715.astype('float64'), [770,])), 1)
call_4718 = relay.TupleGetItem(func_3226_call(relay.reshape(var_4715.astype('float64'), [770,])), 1)
output = relay.Tuple([call_4703,call_4713,var_4714,var_4715,call_4717,])
output2 = relay.Tuple([call_4704,call_4716,var_4714,var_4715,call_4718,])
func_4743 = relay.Function([var_4714,var_4715,], output)
mod['func_4743'] = func_4743
mod = relay.transform.InferType()(mod)
var_4744 = relay.var("var_4744", dtype = "uint64", shape = (490, 3))#candidate|4744|(490, 3)|var|uint64
var_4745 = relay.var("var_4745", dtype = "float64", shape = (7, 110))#candidate|4745|(7, 110)|var|float64
output = func_4743(var_4744,var_4745,)
func_4746 = relay.Function([var_4744,var_4745,], output)
mutated_mod['func_4746'] = func_4746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_4773 = func_2248_call()
call_4774 = func_2248_call()
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
const_4784 = relay.const([-3.143086,4.797659,3.963635,-3.653801,6.738631,-4.686230,8.293332,5.333137,5.767850,3.609637,-1.905389,1.970542,3.282116,-1.824368,3.634144,-1.121757,-8.798826,-2.347242,1.937190,-6.057771,6.648547,-7.543583,0.503329,0.979816,8.965190,3.409608,-1.517888,6.550119,-2.749625,1.097519,0.572449,9.119285,3.880637,8.771342,-6.595019,4.117254,-6.834265,3.733587,5.926462,8.320145,5.030022,9.028132,4.047258,-4.211861,-1.687210,6.181849,7.835149,3.404204,3.827615,-0.010142,-2.781224,4.077510,7.621181,-8.524814,-8.437888,5.114582,8.945778,4.138002,-2.239300,-8.325184,1.334691,-0.969059,-9.690363,-1.437052,-0.671095,0.448200,-2.151352,-7.368678,7.612109,5.543209,-2.537184,-7.837883,5.573209,-3.160526,5.119860,-4.090453,8.295335,6.368036,-7.400968,0.362775,-7.990519,-4.800059,2.454310,2.346704,2.503367,-0.370758,7.423764,7.604388,0.486837,-3.730410,-8.995832,4.035623,9.596708,8.856940,-8.929150,8.009808,-9.267563,-1.641966,-8.295073,-1.057190,-3.756885,5.896473,8.592618,-9.582983,-9.679623,6.868583,8.751610,-4.455409,-8.709211,-7.407259,-1.118144,8.870836,0.390312,9.474163,9.826549,-6.695565,-6.295707,-1.632829,-4.440204,-9.815784,7.373379,-6.827881,6.346506,-3.140431,-0.479581,-1.010928,-0.192426,3.137224,0.671142,8.197278,0.119832,-6.198828,4.750849,5.264981,4.512172,-8.384722,-1.771933,6.768093,-7.421587,2.021501,7.950651,7.159243,8.632283,1.123847,5.467075,-5.813537,-8.509918,5.245154,5.103704,-8.514847,-3.749727,8.067834,7.110414,-0.951349,-3.103367,-8.311416,-4.710917,9.002226,6.270499,-1.675060,4.873021,9.627348,-6.424149,5.023345,2.963402,-0.765341,3.219053,-3.945530,5.646561,-7.993612,-4.973330,1.287196,-6.584678,2.544103,3.461925,0.803290,-1.402013,6.454147,5.434953,-4.563305,-4.236582,-8.268714,-5.183185,-8.423516,-3.855266,-8.585809,9.738381,8.346998,-7.880595,0.510452,-0.357039,4.961867,1.773945,7.468039,1.020215,-7.604604,3.646119,5.260591,6.997256,5.294536,-7.524814,9.911730,7.206896,-3.683225,6.938067,9.873394,-2.588630,-3.481361,3.506699,-7.256754,0.895179,-3.447465,2.717519,-5.584169,9.221193,-6.465156,8.401498,-0.338361,-1.448301,2.023910,-5.576807,-7.675210,2.443398,6.106318,-1.015711,5.540393,-8.276753,-4.224336,-3.130320,-6.359598,-7.961539,3.102542,-6.745521,-1.802186,-6.982970,-0.458164,8.383233,8.100312,3.570298,1.581233,-5.955885,1.873841,4.739382,3.180620,0.795907,6.183673,-0.660708,1.371532,-3.241136,-8.059033,1.881995,-5.800524,3.731335,4.062304,-7.648069,-9.636900,-4.665298,2.887748,-8.392681,7.266677,-0.178851,4.501989,6.305327,-1.142320,4.184014,8.146615,6.499600,1.292010,3.977411,-7.463635,2.559118,9.555226,-2.351722,2.647385,7.711595,-4.357089,-0.883258,-0.073267,0.027370,2.522863,3.103983,4.152352,-5.839297,2.529211,-0.181036,5.399795,8.511476,7.173056,1.143151,-5.325214,2.126384,6.426819,-1.503296,3.853402,-1.553460,-8.943261,6.306603,-7.535741,-2.089563,-5.167799,8.287531,1.803594,-1.674618,8.357228,5.088859,-0.684197,-7.739509,-8.190217,6.408282,-7.912123,3.965526,-1.051554,8.398827,-5.779959,-3.400142,-7.896514,7.250443,-8.795125,-6.781865,0.516934,3.128578,-1.150530,7.704693,5.749900,-9.030070,-8.214952,-9.612850,2.827209,-7.788619,-3.364281,-1.004203,-3.971613,-8.184570,0.608102,-9.293999,-7.016238,-8.519427,-6.589929,-5.654138,-9.217298,5.171127,-8.792223,7.882163,5.365974,4.406759,6.054328,-1.873094,8.742778,-9.258927,5.616783,-9.635568,1.091787,-1.239313,-9.767966,8.886848,-0.563994,-1.732634,-1.288530,-5.292089,2.415926,7.713227,9.030349,-3.020451,-6.364596,8.073248,-0.144388,-7.803974,-3.885312,0.244586,8.102383,7.116634,8.340963,-5.144391,-1.410846,-7.443663,-8.275456,-8.929928,8.360501,5.675752,4.205088,-8.451715,-1.265657,4.221262,5.581591,0.598682,0.249479,-4.684454,-5.369260,4.842604,1.956257,-1.087630,2.085665,0.022117,-8.445063,1.944734,3.718032,2.061805,-6.082684,-9.556328,4.215194,-4.559078,3.499400,1.448410,7.106433,-5.365277,-4.105220,-7.660605,7.933093,4.538308,-4.713626,6.052884,-2.362829,7.125658,-9.185453,-8.975742,-6.654144,-1.115353,-7.472123,4.972105,-0.806203,-3.061859,9.766737,1.402344,1.626054,-9.705378,6.263763,5.789826,-1.229173,-1.230330,9.028221,-1.745595,2.036522,4.296432,-1.967867,2.030834,-4.742783,-3.172425,-6.568444,-6.348931,-7.320313,-6.705299,-3.149950,8.358713,-1.855209,5.776869,-9.450707,7.662348,8.195339,3.134771,-5.681867,-9.292257,7.977936,-8.451711,-5.160578,0.927811,1.332041,-8.230061,8.936458,-5.756711,9.700139,9.043898,2.917015,1.235956,3.570324,-9.562827,5.515899,-0.623264,2.693652,3.067690,8.065704,-7.060844,-0.512858,0.389000,-4.171083,0.972527,7.506251,-1.803226,-8.469737,8.114045,-5.083022,4.063038,1.782824,-0.919661,-8.682694,-5.109740,-4.605987,-5.126509,-8.361807,3.888940,8.764512,-0.164011,5.692245,8.730932,1.502747,-8.243358,-0.409562,7.374173,7.906317,1.465243,0.534253,-2.183460,-4.599294,-5.378066,-9.618520,-7.066698,8.014290,-3.352098,5.322922,-4.258279,7.221622,-5.904859,-5.104643,4.197777,-2.581258,4.806295,-2.475692,0.571665,-7.921753,0.923432,5.416052,-0.465403,1.316286,-3.701908,-5.930873,0.323622,0.305141,0.170489,3.068072,0.988498,9.515630,-3.695661,-4.416442,0.602665,7.184658,9.323244,-3.935768,7.918530,8.655577,-6.431389,-2.627065,5.116776,5.326427,0.593943,2.321831,-9.835447,0.135614,-6.960023,0.626099,-2.387066,8.464524,1.767060,8.784723,2.945228,-9.085617,-5.656174,8.949567,-0.671368,9.141338,0.798059,9.429789,4.889884,-3.825202,-3.919462,8.306945,2.636091,1.090227,-8.116865,8.037886,9.495026,8.351704,0.347253,2.865765,-8.370252,0.713733,7.918489,9.840762,-5.836185,-0.722729,1.927250,5.749405,-9.600985,-2.194090,-7.548274,-6.864791,1.171767,7.279966,-5.287429,9.945228,4.658382,6.684524,2.970000,-9.393982,-4.440258,-3.941092,-1.131525,-8.500996,-2.132407,-7.084799,2.267041,-6.442472,-2.338027,8.700774,-7.116225,8.374108,1.967069,-2.999349,-6.393403,-4.216873,-0.040266,-0.427516,2.727060,3.604292,5.548464,-4.328245,7.066095,-5.236958,-5.528118,-5.021540,-3.610481,4.091906,-6.848763,-2.594752,-7.209187,-3.223301,2.205527,2.179474,8.175494,7.745158,-7.454130,9.492137,-1.465267,-5.794330,8.781537,-4.992201,-4.270573,-5.931158,2.752862,2.727231,1.199917,-4.559451,5.815318,5.519311,1.917283,3.582331,-3.032843,1.984787,-4.446388,-0.567565,-0.636975,8.058128,-7.730291,-3.907476,-1.779378,6.583708,5.331863,5.931467,7.948450,4.972538,5.068701,2.768970,-8.556355,-5.878067,-0.273009,-8.334425,7.210125,3.799854,6.561615,-5.595022,-1.316052,-4.058224,5.686512,-1.814753,-4.648733,0.857863,-7.280024,-7.360317,0.094424,-2.708350,8.041375,7.975283,-4.965310,-6.551860,-4.287377,-9.257309,-6.870918,-0.695958,-2.932558,-9.901112,-6.784167,-6.416902,-4.204751,7.774361,2.308949,2.900881,6.606473,-1.741946,-4.627540,6.541427,5.240208,4.267165,-6.001711,5.067441,-6.275153,-4.149035,-9.880179,6.212888,9.653864,-7.129800,-6.934795,3.786854,-4.675277,-0.768206,-9.079743,4.123885,2.034041,9.152371,-7.745378,-8.752017,-4.833139,-2.923371,7.125092,-0.646450,-1.807409,7.924352,-8.068842,-8.827816,-7.603860,8.734245,7.230980,-8.568660,1.406957,-0.898807,8.674564,-1.992020,5.804414,-7.402739,8.509955,9.704313,9.228405,-0.050348,0.404604,8.929858,8.213079,-8.108490,7.649318,2.467243,-9.513601,7.704164,-0.032569,-6.743524,-8.753790,-4.957431,3.628383,7.132886,0.890913,-2.599762,6.883646,-6.380809,0.094967,6.294814,-0.602334,5.883605,-3.019219,-1.236649,9.132741,1.045021,8.757929,0.782053,1.608840,3.851367,-2.112993,-8.802307,2.631494,9.197784,8.751438,-0.503832,5.235051,9.665845,-9.284519,2.560452,-0.836557,3.367913,-0.956321,-3.722069,8.794428,-0.897370,3.002807,3.009881,-7.879878,9.710007,4.628029,3.679035,-7.522918,1.834915,-2.661149,-7.309615,6.439356,-8.315475,-5.516565,9.071044,-6.458566,6.148043,-5.778431,7.900403,0.583230,8.537912,-8.629129,-6.930693,8.182043,4.335506,-5.051054,-4.967770,7.096283,6.959447,6.395275,8.426563,5.357017,5.019161,-9.634879,-2.156070,-0.632363,-0.952439,-5.601241,0.211365,-1.240634,1.884479,-7.904298,-8.007575,-3.525540,6.819730,0.221259,6.119637,8.436907,-7.366444,8.669949,-6.852208,-4.475980,-8.563742,3.393888,-3.540072,-9.425307,-0.428318,9.091905,-9.099287,-7.178189,4.280328,1.161075,-6.298815,-7.546180,-0.819326,5.053902,9.708536,9.590117,-7.708506,7.342514,6.029519,-9.757699,-4.167665,-8.402926,3.808733,-2.883601,-8.044520,-6.354887,-1.372210,-6.007519,-2.306858,9.640324,5.820495,-4.777719,0.393618,9.324713,5.657502,-6.592144,4.841264,9.188696,-4.788430,-8.097903,2.525401,4.263778,6.181523,-0.020438,-5.728326,1.370254,-8.437709,6.891483,5.852088,-7.096039,4.008282,-4.332152,-5.509592,9.977047,0.751885,3.997617,-9.240724,-0.416669,-3.723639,-2.159214,5.912238,5.401552,6.331686,2.822977,6.076904,9.770797,3.057619,2.197382,7.023463,-9.599046,-9.146120,5.580205,-3.290771,-1.136114,-8.800827,4.954298,-8.966301,-7.953719,-0.604829,-2.910312,9.939960,-1.202274,9.927623,-1.861892,-5.510704,0.288590,6.707685,-4.878022,9.943987,-0.007886,9.527072,9.209179,-5.628770,9.114060,7.212145,-2.932909,5.491615,3.911484,6.588900,-6.285968,-0.318669,-4.251249,-8.610554,-6.372865,-8.287528,-3.770918,-9.824480,2.957426,0.848100,0.335374,7.285212,2.262949,-1.245811,2.575420,5.118141,-4.841491,-7.981435,3.092475,5.764889,-0.377483,-3.100954,1.985079,-3.587316,-4.378647,2.170476,-6.849922,6.709815,6.797489,8.080704,7.547131,-2.876477,-8.580996,4.761003,-1.375387,0.757668,-5.927692,8.439945,7.653371,-2.924422,1.295340,1.531194,-7.758189,8.127248,3.448807,5.798986,9.632224,-2.755497,-0.486182,3.973376,-1.316039,1.870158,5.747085,-8.790564,-9.062433,-2.236187,-3.377017,1.946115,-6.283797,-5.301922,9.510103,9.223033,-7.647186,7.345183,2.408178,3.826726,1.968908,-0.410124,9.338351,3.290815,0.248453,3.183385,-8.819110,5.316192,3.659014,-7.311697,5.882390,-2.296142,9.001013,-5.375918,-0.106658,-6.352648,-3.907221,-7.748631,0.159193,6.273955,2.769016,-8.246044,7.509400,1.038434,3.551563,-6.799358,7.635329,-7.383787,-0.392423,7.463998,-6.337788,-2.588446,-9.997820,-3.975174,0.807606,-3.900145,-0.055061,-9.339898,-4.598221,9.918159,2.094423,-9.150631,-3.892699,6.695724,8.483557,9.451079,-1.925018,-7.900903,5.836738,-3.185386,-1.766572,9.172733,9.160510,6.020047,3.151981,1.099819,-6.189656,9.747927,5.788688,3.300657,3.580317,-7.410843,-7.856147,-8.191898,-8.669554,-5.667425,-1.473685,3.752719,4.376182,7.517649,1.832143,2.578541,5.816714,-2.197976,1.139252,2.332258,2.303913,-6.956954,4.680910,0.545522,4.687782,-7.025584,0.635783,4.038257,-1.790655,-7.889990,-9.719898,8.701250,-2.303055,-4.060597,6.484880,7.090781,5.632365,6.726020,-7.372590,-5.484070,-1.321126,4.343965,7.388790,7.630115,-9.873607,9.325547,1.580812,-9.451181,7.285767,-5.401559,-6.014348,6.633549,7.789288,-9.259317,6.807480,-4.334613,-3.617340,6.181580,-4.835763,9.267471,-2.447416,5.477185,-8.416476,-3.241499,-9.882260,-8.594750,-8.066540,2.802533,-2.935887,9.474696,-4.126969,-3.881700,-2.406340,-4.066201,-0.685736,9.745132,9.635034,-5.585741,-0.148421,5.421030,9.326657,4.662351,4.106669,-8.389368,1.695837,3.602069,5.889384,-9.841264,4.178463,-9.345403,-1.222201,7.738207,1.381354,6.160846,-2.137377,-9.088531,4.933717,0.698718,-2.658466,-1.762965,3.561383,-7.357573,3.063333,-0.102397,5.970853,-1.479769,-3.051944,2.128683,-2.833180,2.473472,5.478670,-1.337879,-7.626376,0.991062,1.923767,-1.029524,5.463070,0.654388,4.879569,-4.897613,6.317222,-7.974735,-9.372918,5.344465,9.414544,2.388270,-1.911209,5.973523,8.621087,-4.082588,-9.149536,1.645523,9.416853,2.354534,4.692663,8.130992,-8.751410,-2.765890,-8.111723,0.729600,6.968636,-9.925326], dtype = "float64")#candidate|4784|(1200,)|const|float64
call_4783 = func_4407_call(relay.reshape(const_4784.astype('float64'), [10, 10, 12]))
call_4785 = func_4407_call(relay.reshape(const_4784.astype('float64'), [10, 10, 12]))
output = relay.Tuple([call_4773,call_4783,const_4784,])
output2 = relay.Tuple([call_4774,call_4785,const_4784,])
func_4791 = relay.Function([], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
output = func_4791()
func_4792 = relay.Function([], output)
mutated_mod['func_4792'] = func_4792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_4808 = func_3674_call()
call_4809 = func_3674_call()
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_4824 = relay.TupleGetItem(func_1922_call(), 0)
call_4825 = relay.TupleGetItem(func_1924_call(), 0)
output = relay.Tuple([call_4808,call_4824,])
output2 = relay.Tuple([call_4809,call_4825,])
func_4841 = relay.Function([], output)
mod['func_4841'] = func_4841
mod = relay.transform.InferType()(mod)
output = func_4841()
func_4842 = relay.Function([], output)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4862 = relay.const([[[9.187148,5.443369,2.791102,-4.700077,8.271298,-1.171377,4.250436,0.388077,-0.745016,-9.870905],[2.297879,-9.576253,-3.303760,5.375467,6.511158,-8.010794,-3.031084,9.064958,-3.920024,-2.863670]],[[5.320134,-6.254947,-2.025360,-1.186607,9.697296,-2.630284,5.988257,8.277809,1.891073,-4.267060],[9.983937,-7.299332,-5.471779,-2.143278,3.254697,-8.995812,7.585572,0.301444,-7.136161,6.029554]],[[-0.956095,-2.747328,-6.039018,6.223631,3.985223,-0.722699,-8.890014,-7.693573,-4.130353,-7.269266],[5.748499,0.163971,2.205471,-1.673599,-8.452530,9.799452,2.574322,-9.017404,1.875915,-1.197358]],[[2.147964,-9.072976,5.690087,-2.498613,0.459061,0.247553,0.392178,8.260973,0.852232,-7.305164],[0.751860,-1.339603,-9.003055,2.144192,8.691221,-7.329682,-8.420273,-6.784023,7.077634,-2.608729]],[[0.917485,2.879087,-6.121320,-0.011844,-8.593564,8.976711,-2.073664,9.230132,-7.715492,9.404342],[-8.906540,-1.903104,-7.549619,-0.684856,7.680055,-1.708306,-8.154295,0.436050,-7.339373,-4.412054]],[[-5.723928,8.167274,8.465758,3.102729,9.378743,4.926873,-5.579325,-9.045115,9.761650,-4.825236],[4.000994,5.459687,-8.282669,-7.872374,-7.042434,-1.523790,-2.385185,-1.053172,-3.791495,0.341784]],[[-3.020964,1.430986,-3.355834,7.200048,-8.597963,-6.952635,-3.312624,6.899202,-8.888193,1.796478],[-6.049564,-9.749261,1.290090,-4.097841,-3.457362,1.997658,1.439886,-7.636389,3.761805,5.586469]],[[8.555279,3.133603,0.333919,8.264120,2.277335,8.142970,-3.641471,-3.171616,-0.936341,9.011601],[1.246075,3.946424,0.630799,-7.715505,4.099866,-3.362398,-9.575476,-4.855772,-0.048517,8.151516]],[[-6.089775,9.087700,-7.640611,2.171903,-2.215827,-9.008828,3.177953,-8.275346,7.371666,6.267273],[-2.373163,9.835004,-8.361514,6.853928,7.142291,-7.799562,5.719416,-3.952838,3.031744,-3.990444]],[[-1.608694,7.589650,-7.201680,-9.374906,3.631523,-3.132836,7.376755,-2.723902,0.210677,-8.721300],[-3.085241,-5.317070,-5.990959,-4.546142,-0.107235,-4.758859,6.135585,9.549286,4.281393,4.128537]],[[6.404020,6.453447,7.370301,-5.851984,8.105031,-5.493045,4.535456,3.977353,9.185329,-5.004009],[-9.410303,5.443742,-4.459623,5.248157,-4.270078,-3.213798,-2.522348,2.730670,7.147489,-2.213200]],[[-9.466919,2.025178,6.611948,-8.217375,-0.718945,4.931243,0.156487,-3.962386,0.095133,0.860613],[-4.850870,4.492257,1.913260,-8.408927,0.469007,6.939913,3.698601,2.752448,6.807626,-8.551135]],[[-7.851964,-4.254013,-5.666126,-9.044753,-0.014688,6.687045,8.340622,6.898132,0.110935,-7.468475],[-3.772731,6.869797,-9.428703,1.036526,-3.133514,0.390497,0.819884,-4.326501,-3.259539,1.377796]]], dtype = "float32")#candidate|4862|(13, 2, 10)|const|float32
var_4863 = relay.var("var_4863", dtype = "float32", shape = (13, 2, 10))#candidate|4863|(13, 2, 10)|var|float32
bop_4864 = relay.power(const_4862.astype('float32'), relay.reshape(var_4863.astype('float32'), relay.shape_of(const_4862))) # shape=(13, 2, 10)
uop_4876 = relay.acos(var_4863.astype('float32')) # shape=(13, 2, 10)
output = relay.Tuple([bop_4864,uop_4876,])
output2 = relay.Tuple([bop_4864,uop_4876,])
func_4882 = relay.Function([var_4863,], output)
mod['func_4882'] = func_4882
mod = relay.transform.InferType()(mod)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4883 = relay.var("var_4883", dtype = "float32", shape = (13, 2, 10))#candidate|4883|(13, 2, 10)|var|float32
func_4882_call = mutated_mod.get_global_var('func_4882')
call_4884 = func_4882_call(var_4883)
output = call_4884
func_4885 = relay.Function([var_4883], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_4914 = func_3546_call()
call_4915 = func_3546_call()
output = relay.Tuple([call_4914,])
output2 = relay.Tuple([call_4915,])
func_4919 = relay.Function([], output)
mod['func_4919'] = func_4919
mod = relay.transform.InferType()(mod)
mutated_mod['func_4919'] = func_4919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mutated_mod.get_global_var('func_4919')
call_4920 = func_4919_call()
output = call_4920
func_4921 = relay.Function([], output)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_4966 = relay.TupleGetItem(func_3240_call(), 0)
call_4967 = relay.TupleGetItem(func_3242_call(), 0)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_4980 = func_3674_call()
call_4981 = func_3674_call()
output = relay.Tuple([call_4966,call_4980,])
output2 = relay.Tuple([call_4967,call_4981,])
func_4984 = relay.Function([], output)
mod['func_4984'] = func_4984
mod = relay.transform.InferType()(mod)
mutated_mod['func_4984'] = func_4984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mutated_mod.get_global_var('func_4984')
call_4985 = func_4984_call()
output = call_4985
func_4986 = relay.Function([], output)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4249_call = mod.get_global_var('func_4249')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_5068 = relay.TupleGetItem(func_4249_call(), 0)
call_5069 = relay.TupleGetItem(func_4250_call(), 0)
func_3798_call = mod.get_global_var('func_3798')
func_3800_call = mutated_mod.get_global_var('func_3800')
var_5074 = relay.var("var_5074", dtype = "float64", shape = (770, 1))#candidate|5074|(770, 1)|var|float64
call_5073 = relay.TupleGetItem(func_3798_call(relay.reshape(var_5074.astype('float64'), [770,])), 5)
call_5075 = relay.TupleGetItem(func_3800_call(relay.reshape(var_5074.astype('float64'), [770,])), 5)
uop_5077 = relay.log10(var_5074.astype('float64')) # shape=(770, 1)
bop_5087 = relay.maximum(var_5074.astype('float64'), relay.reshape(uop_5077.astype('float64'), relay.shape_of(var_5074))) # shape=(770, 1)
output = relay.Tuple([call_5068,call_5073,bop_5087,])
output2 = relay.Tuple([call_5069,call_5075,bop_5087,])
func_5093 = relay.Function([var_5074,], output)
mod['func_5093'] = func_5093
mod = relay.transform.InferType()(mod)
var_5094 = relay.var("var_5094", dtype = "float64", shape = (770, 1))#candidate|5094|(770, 1)|var|float64
output = func_5093(var_5094)
func_5095 = relay.Function([var_5094], output)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_5159 = relay.TupleGetItem(func_3240_call(), 0)
call_5160 = relay.TupleGetItem(func_3242_call(), 0)
func_4919_call = mod.get_global_var('func_4919')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_5170 = relay.TupleGetItem(func_4919_call(), 0)
call_5171 = relay.TupleGetItem(func_4921_call(), 0)
output = relay.Tuple([call_5159,call_5170,])
output2 = relay.Tuple([call_5160,call_5171,])
func_5175 = relay.Function([], output)
mod['func_5175'] = func_5175
mod = relay.transform.InferType()(mod)
output = func_5175()
func_5176 = relay.Function([], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_5209 = func_2963_call()
call_5210 = func_2963_call()
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_5213 = func_3546_call()
call_5214 = func_3546_call()
func_5093_call = mod.get_global_var('func_5093')
func_5095_call = mutated_mod.get_global_var('func_5095')
const_5216 = relay.const([[9.846693,-5.777005,-5.352857,-5.458579,-8.497964,3.984914,4.428745,-2.564944,4.019276,1.123992,-7.559121,-9.546263,2.022327,3.757100,-3.803076,5.382016,4.832003,-5.704329,9.506948,6.597594,-5.455234,6.995064,-0.778249,-3.167907,-6.303690,6.304546,7.973834,-4.179528,4.397060,-6.689853,-7.732267,8.288781,6.560660,9.679983,0.475908,-2.441579,7.593634,3.062391,-5.572698,-9.276112,9.380198,7.682136,9.169279,8.272937,-4.771790,4.857295,9.738841,-6.591559,-2.513236,-8.199575,4.009783,-5.783651,-8.059810,-2.737547,0.667970,3.171770,2.416107,7.098114,-5.844934,8.499545,-0.574394,5.381508,-4.326757,5.442443,6.958284,-3.251327,-8.331735,-4.612539,-5.089270,1.735905,3.803136,7.872852,-8.337052,0.371135,3.426955,7.853297,9.489927,-8.747698,-0.542064,0.485294,6.434426,-8.425611,-8.739682,-0.366599,-0.961411,-5.372477,-4.407102,-0.159793,7.130318,-1.391575,-6.537632,-7.577309,-3.858113,2.833934,-5.474479,5.853820,-9.182604,-9.040347,-0.032307,-7.268334,-7.392584,-0.904964,-0.503983,0.863767,-0.913902,-3.319391,9.644397,1.204197,3.234165,5.612499],[1.843021,9.529478,-1.960742,-6.255461,-6.120147,0.151052,8.371733,-9.102945,-5.768013,1.114777,9.203708,-1.688976,1.418134,-1.882209,-5.203010,-8.149485,-9.120811,-7.553653,1.300759,4.279968,6.006143,1.150330,-1.976163,-0.739146,6.555018,-9.717414,9.373979,-4.104806,-7.370320,-5.927930,-5.616194,-0.573884,-6.090063,4.896137,0.118903,-7.139024,-1.642270,3.695823,6.262194,7.880397,-3.211658,6.811276,-4.758695,-3.826343,-7.213268,-2.023828,1.992821,-3.600843,6.876983,-7.892498,-3.375976,9.617759,-2.681443,-1.894593,-1.625351,-9.079581,6.323805,-5.110130,0.605290,-8.175069,0.177109,-1.446732,6.673353,2.611697,4.115647,1.978346,-9.782357,-8.023065,9.608624,-9.031474,-4.928721,-2.304012,-9.112552,-0.931207,0.017475,8.793409,4.856539,-2.309480,-3.811639,3.980125,1.772280,-1.308492,9.841656,-1.098821,4.066378,-0.065506,6.149649,8.278864,5.473266,-5.558037,-6.425730,-5.908618,6.824003,-9.109629,-0.498342,5.947885,-3.418645,4.277942,-4.842263,-6.624691,-3.424733,-4.970348,-1.670930,2.264150,5.047897,-0.059027,1.242059,0.182101,1.704042,2.347825],[0.635678,5.321047,-1.641965,2.134359,-9.815887,-6.400347,-0.639408,1.077715,-9.027062,-9.158724,-3.146262,2.821829,8.144856,-5.513487,-4.342319,-2.968085,5.965960,0.052054,-7.556109,-6.939400,-7.811297,7.100319,6.697470,9.098140,0.783562,3.785150,6.120418,-2.139245,9.452387,2.560862,-3.256464,3.304752,-1.770305,4.417473,9.190634,4.176755,-0.890355,-8.511860,9.283924,9.997193,-4.013723,-3.995641,0.809252,-9.723970,-3.062507,-4.068495,-9.356505,-1.103149,-0.086378,8.770751,6.571436,0.624098,-6.301465,-7.145687,-1.807227,-5.858077,-6.073873,-4.327868,1.572835,4.214230,-2.719985,-0.551363,0.006913,8.918520,-9.222409,-6.454885,-3.743765,2.002939,0.355994,-3.145949,3.586573,-8.688908,-7.496769,8.615559,-0.884150,0.086276,-2.824910,5.062393,-3.928910,2.500843,4.139977,-5.847778,-7.105335,-2.850968,7.523607,5.951340,-5.070007,9.592331,-9.010718,-6.101577,9.545772,5.146392,-2.522291,6.266365,-3.370260,1.943846,-0.498300,6.918388,-3.076166,8.987386,-3.205821,-5.253281,-8.081688,6.599610,4.229879,9.109448,0.881540,-7.812145,6.888425,-3.247785],[0.422161,-8.074355,-3.334139,-9.997324,2.259127,-9.953832,-5.790727,-3.584819,-5.942549,1.759653,-6.662764,-4.766025,0.847575,2.892929,8.376576,-7.529255,3.131598,-5.269790,-4.438443,-1.458738,-0.522348,-3.428216,-9.845556,-8.504421,-8.757953,-0.471385,-3.435452,4.156813,2.040857,6.969262,-5.548182,0.057309,-2.437618,1.211842,-2.922491,-9.810020,9.390765,0.226528,-7.350665,-4.534267,8.992890,3.975134,-3.720380,-3.618625,4.903241,-7.795259,2.012286,8.036596,2.042259,4.503455,1.160580,4.506375,-8.555028,-1.382163,-0.170789,9.637231,5.204777,3.585246,0.924661,6.671767,6.968930,4.710937,-2.174601,-4.936030,5.153899,1.966678,-7.927675,1.368820,-9.580415,9.578840,0.078095,-1.576889,5.179450,-7.347362,7.738936,7.826853,5.587501,-8.411952,5.072647,2.921993,-0.291873,5.275961,2.603795,2.516039,-2.792354,-1.445723,3.208632,-9.903686,3.476968,-8.013199,7.285706,1.317343,-4.316551,-5.671449,9.737249,-6.263901,-4.890539,-0.442910,2.076271,1.602402,-8.346325,0.902944,8.615109,-5.345615,-1.621246,0.832011,-9.495063,-1.499597,-9.885892,-2.854332],[-6.760733,9.656275,4.916737,1.705562,3.102863,-4.153680,-1.599148,-0.063618,-2.784754,-8.686107,9.255984,-0.151063,0.198104,-0.819391,5.647185,2.255369,6.761351,-6.963900,-3.845597,9.009170,6.009832,6.474932,5.611613,1.945594,-8.083498,-7.254812,1.482605,5.054987,7.868886,4.733293,-1.082694,3.766695,6.196211,-9.165478,0.743274,-9.365950,-0.764096,-3.817332,9.575815,1.562800,-5.651778,6.619076,-8.346588,-9.102905,-6.937790,-3.085945,-8.390238,-3.144040,3.165289,6.931859,1.592667,7.126246,1.926514,3.915558,6.748760,-8.582022,6.279139,-7.856329,-4.740799,5.685574,-8.688495,9.229864,0.564093,-1.685897,8.713087,5.242455,7.377546,-8.796017,7.566569,6.574274,-4.924348,-1.142042,8.814583,5.281106,0.647273,-6.352933,-1.033911,-5.876863,-2.977971,-7.609062,-6.031085,-8.303177,9.396550,-6.096464,-6.658344,7.589609,9.540960,-5.305368,-2.382793,-6.996835,4.595710,1.508894,-6.326272,8.850551,7.127791,-0.728371,-7.613823,1.714447,1.858868,-0.511270,-4.727500,-3.505488,9.901503,-8.976966,-4.401682,2.939242,-4.095785,3.130769,-1.294719,1.822649],[5.215226,3.290581,-5.007642,4.843919,-9.601164,6.503623,1.661909,-7.497654,8.781081,5.595046,4.283316,5.625401,1.000366,-4.078557,5.636683,0.631824,-5.312561,-9.011315,-5.977371,-8.848418,2.431516,3.174324,-1.875201,9.741251,-3.594580,3.715616,8.637137,5.219711,-8.430445,-1.860465,2.919594,-2.175112,-7.234832,-2.554642,-5.631442,0.762293,2.053017,-8.861600,-1.515146,6.970560,-2.772434,-7.941827,4.454812,2.698615,-8.909876,8.073061,9.556049,2.649590,1.026939,-0.144067,-4.666756,0.631817,-7.946127,7.834460,-2.045543,-2.846029,-5.183609,-6.924035,-3.156603,3.278650,-6.947048,2.099670,-7.034152,9.665637,-6.225058,2.780926,-3.834893,-3.764684,-8.659076,0.514151,-3.762413,-2.970061,2.411243,-5.136653,-6.632317,-8.908891,0.560649,-8.568128,-6.660552,6.504119,-1.720679,1.631174,9.327823,7.296195,-1.631222,-7.776061,-7.233596,3.919956,-7.346968,-5.148522,5.852411,4.110425,-8.006040,-9.402339,5.085738,3.524880,-2.761981,-1.348754,6.570128,3.328765,1.046965,-8.725539,-9.579559,0.765097,-8.222526,1.786162,-1.340127,-5.496271,0.738245,3.849297],[-4.627717,-6.330195,1.866386,-3.782152,-8.393866,-5.655505,-2.479344,-9.444040,-5.572461,6.060906,1.072852,-1.495708,3.793687,-7.806486,1.544261,8.837729,-4.919949,-5.200063,5.729355,-3.269830,7.910320,8.179860,-2.120839,-0.290890,1.321115,7.722298,6.837848,-4.735891,-4.192628,5.064848,-9.856886,0.757226,-3.417610,-1.224737,-4.445382,0.151581,-3.746442,3.951924,-7.934629,5.173095,9.614477,-5.996328,8.961658,4.021243,1.770924,6.882622,-3.917474,4.210151,4.465982,-2.660817,-7.554404,3.461921,-6.062439,5.405921,-3.948358,-5.825031,8.036440,-7.279463,1.831882,-7.883607,-0.051056,-8.824620,-8.355204,0.015445,6.784281,-9.752227,-1.882070,-7.842120,-7.409659,8.364310,8.425429,6.408936,9.560369,7.378940,2.107358,5.727859,8.927493,-8.290475,8.644442,1.423818,5.880553,6.548110,5.711803,-9.457147,0.285855,4.870684,9.980762,-1.725223,-9.369821,6.342176,9.436952,-0.340122,-5.704769,2.777656,-9.781876,6.577166,-2.338597,2.456185,-3.722635,3.932116,-7.984790,-5.653755,7.265197,-7.023691,-0.403594,-3.068655,-8.810443,4.500043,2.075378,9.591226]], dtype = "float64")#candidate|5216|(7, 110)|const|float64
call_5215 = relay.TupleGetItem(func_5093_call(relay.reshape(const_5216.astype('float64'), [770, 1])), 0)
call_5217 = relay.TupleGetItem(func_5095_call(relay.reshape(const_5216.astype('float64'), [770, 1])), 0)
output = relay.Tuple([call_5209,call_5213,call_5215,const_5216,])
output2 = relay.Tuple([call_5210,call_5214,call_5217,const_5216,])
func_5223 = relay.Function([], output)
mod['func_5223'] = func_5223
mod = relay.transform.InferType()(mod)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5224 = func_5223_call()
output = call_5224
func_5225 = relay.Function([], output)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_5252 = relay.TupleGetItem(func_3240_call(), 0)
call_5253 = relay.TupleGetItem(func_3242_call(), 0)
output = relay.Tuple([call_5252,])
output2 = relay.Tuple([call_5253,])
func_5256 = relay.Function([], output)
mod['func_5256'] = func_5256
mod = relay.transform.InferType()(mod)
output = func_5256()
func_5257 = relay.Function([], output)
mutated_mod['func_5257'] = func_5257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5223_call = mod.get_global_var('func_5223')
func_5225_call = mutated_mod.get_global_var('func_5225')
call_5280 = relay.TupleGetItem(func_5223_call(), 1)
call_5281 = relay.TupleGetItem(func_5225_call(), 1)
output = call_5280
output2 = call_5281
func_5297 = relay.Function([], output)
mod['func_5297'] = func_5297
mod = relay.transform.InferType()(mod)
mutated_mod['func_5297'] = func_5297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5297_call = mutated_mod.get_global_var('func_5297')
call_5298 = func_5297_call()
output = call_5298
func_5299 = relay.Function([], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_5305 = func_3332_call()
call_5306 = func_3332_call()
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_5318 = func_3045_call()
call_5319 = func_3045_call()
output = relay.Tuple([call_5305,call_5318,])
output2 = relay.Tuple([call_5306,call_5319,])
func_5328 = relay.Function([], output)
mod['func_5328'] = func_5328
mod = relay.transform.InferType()(mod)
mutated_mod['func_5328'] = func_5328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mutated_mod.get_global_var('func_5328')
call_5329 = func_5328_call()
output = call_5329
func_5330 = relay.Function([], output)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_5342 = func_3566_call()
call_5343 = func_3566_call()
output = call_5342
output2 = call_5343
func_5348 = relay.Function([], output)
mod['func_5348'] = func_5348
mod = relay.transform.InferType()(mod)
mutated_mod['func_5348'] = func_5348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5348_call = mutated_mod.get_global_var('func_5348')
call_5349 = func_5348_call()
output = call_5349
func_5350 = relay.Function([], output)
mutated_mod['func_5350'] = func_5350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4657_call = mod.get_global_var('func_4657')
func_4659_call = mutated_mod.get_global_var('func_4659')
call_5377 = relay.TupleGetItem(func_4657_call(), 1)
call_5378 = relay.TupleGetItem(func_4659_call(), 1)
output = call_5377
output2 = call_5378
func_5381 = relay.Function([], output)
mod['func_5381'] = func_5381
mod = relay.transform.InferType()(mod)
mutated_mod['func_5381'] = func_5381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5381_call = mutated_mod.get_global_var('func_5381')
call_5382 = func_5381_call()
output = call_5382
func_5383 = relay.Function([], output)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_5473 = func_2963_call()
call_5474 = func_2963_call()
output = call_5473
output2 = call_5474
func_5484 = relay.Function([], output)
mod['func_5484'] = func_5484
mod = relay.transform.InferType()(mod)
output = func_5484()
func_5485 = relay.Function([], output)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_5548 = func_2248_call()
call_5549 = func_2248_call()
var_5563 = relay.var("var_5563", dtype = "bool", shape = (15, 16, 11))#candidate|5563|(15, 16, 11)|var|bool
bop_5564 = relay.right_shift(call_5548.astype('int64'), relay.reshape(var_5563.astype('int64'), relay.shape_of(call_5548))) # shape=(15, 16, 11)
bop_5567 = relay.right_shift(call_5549.astype('int64'), relay.reshape(var_5563.astype('int64'), relay.shape_of(call_5549))) # shape=(15, 16, 11)
output = relay.Tuple([bop_5564,])
output2 = relay.Tuple([bop_5567,])
func_5576 = relay.Function([var_5563,], output)
mod['func_5576'] = func_5576
mod = relay.transform.InferType()(mod)
mutated_mod['func_5576'] = func_5576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5577 = relay.var("var_5577", dtype = "bool", shape = (15, 16, 11))#candidate|5577|(15, 16, 11)|var|bool
func_5576_call = mutated_mod.get_global_var('func_5576')
call_5578 = func_5576_call(var_5577)
output = call_5578
func_5579 = relay.Function([var_5577], output)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_5588 = func_3566_call()
call_5589 = func_3566_call()
output = relay.Tuple([call_5588,])
output2 = relay.Tuple([call_5589,])
func_5615 = relay.Function([], output)
mod['func_5615'] = func_5615
mod = relay.transform.InferType()(mod)
mutated_mod['func_5615'] = func_5615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5615_call = mutated_mod.get_global_var('func_5615')
call_5616 = func_5615_call()
output = call_5616
func_5617 = relay.Function([], output)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_5623 = relay.TupleGetItem(func_4103_call(), 2)
call_5624 = relay.TupleGetItem(func_4105_call(), 2)
func_3876_call = mod.get_global_var('func_3876')
func_3879_call = mutated_mod.get_global_var('func_3879')
var_5626 = relay.var("var_5626", dtype = "int16", shape = (650,))#candidate|5626|(650,)|var|int16
var_5627 = relay.var("var_5627", dtype = "uint16", shape = (720,))#candidate|5627|(720,)|var|uint16
call_5625 = relay.TupleGetItem(func_3876_call(relay.reshape(var_5626.astype('int16'), [650,]), relay.reshape(var_5627.astype('uint16'), [720,]), ), 5)
call_5628 = relay.TupleGetItem(func_3879_call(relay.reshape(var_5626.astype('int16'), [650,]), relay.reshape(var_5627.astype('uint16'), [720,]), ), 5)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_5634 = relay.TupleGetItem(func_1922_call(), 0)
call_5635 = relay.TupleGetItem(func_1924_call(), 0)
output = relay.Tuple([call_5623,call_5625,var_5626,var_5627,call_5634,])
output2 = relay.Tuple([call_5624,call_5628,var_5626,var_5627,call_5635,])
func_5640 = relay.Function([var_5626,var_5627,], output)
mod['func_5640'] = func_5640
mod = relay.transform.InferType()(mod)
mutated_mod['func_5640'] = func_5640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5640_call = mutated_mod.get_global_var('func_5640')
var_5642 = relay.var("var_5642", dtype = "int16", shape = (650,))#candidate|5642|(650,)|var|int16
var_5643 = relay.var("var_5643", dtype = "uint16", shape = (720,))#candidate|5643|(720,)|var|uint16
call_5641 = func_5640_call(var_5642,var_5643,)
output = call_5641
func_5644 = relay.Function([var_5642,var_5643,], output)
mutated_mod['func_5644'] = func_5644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4657_call = mod.get_global_var('func_4657')
func_4659_call = mutated_mod.get_global_var('func_4659')
call_5674 = relay.TupleGetItem(func_4657_call(), 1)
call_5675 = relay.TupleGetItem(func_4659_call(), 1)
output = relay.Tuple([call_5674,])
output2 = relay.Tuple([call_5675,])
func_5679 = relay.Function([], output)
mod['func_5679'] = func_5679
mod = relay.transform.InferType()(mod)
output = func_5679()
func_5680 = relay.Function([], output)
mutated_mod['func_5680'] = func_5680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5348_call = mod.get_global_var('func_5348')
func_5350_call = mutated_mod.get_global_var('func_5350')
call_5701 = func_5348_call()
call_5702 = func_5348_call()
output = call_5701
output2 = call_5702
func_5711 = relay.Function([], output)
mod['func_5711'] = func_5711
mod = relay.transform.InferType()(mod)
mutated_mod['func_5711'] = func_5711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mutated_mod.get_global_var('func_5711')
call_5712 = func_5711_call()
output = call_5712
func_5713 = relay.Function([], output)
mutated_mod['func_5713'] = func_5713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5223_call = mod.get_global_var('func_5223')
func_5225_call = mutated_mod.get_global_var('func_5225')
call_5772 = relay.TupleGetItem(func_5223_call(), 1)
call_5773 = relay.TupleGetItem(func_5225_call(), 1)
output = call_5772
output2 = call_5773
func_5782 = relay.Function([], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
mutated_mod['func_5782'] = func_5782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5782_call = mutated_mod.get_global_var('func_5782')
call_5783 = func_5782_call()
output = call_5783
func_5784 = relay.Function([], output)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5328_call = mod.get_global_var('func_5328')
func_5330_call = mutated_mod.get_global_var('func_5330')
call_5803 = relay.TupleGetItem(func_5328_call(), 1)
call_5804 = relay.TupleGetItem(func_5330_call(), 1)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_5824 = func_3045_call()
call_5825 = func_3045_call()
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
const_5843 = relay.const([2,1,5,-6,10,-3,-1,5,4,4,-7,-2,-5,9,7,-10,-9,-4,6,5,3,1,2,9,4,-4,10,-3,6,-10,1,-2,8,7,6,-10,-9,-3,6,4,9,-1,6,5,10,-5,-3,3,6,7,-1,3,9,8,-9,-7,2,7,-4,10,-8,-2,5,-4,7,-3,10,8,-3,7,3,-10,2,3,-2,7,-1,8,-6,6,-6,2,4,-7,10,-9,-8,8,-8,5,5,7,2,-1,-10,2,4,1,-5,5,2,8,4,-9,6,-2,5,6,-9,-6,4,4,-1,5,5,3,5,9,-9,2,2,6,-5,7,-1,-2,10,-2,3,8,1,-7,-7,6,5,-1,3,-8,-2,-2,-7,-8,10,-7,9,-3,1,7,-6,-1,-2,-2,10,3,7,6,10,1,8,-5,5,9,7,3,-10,8,7,-9,10,-10,9,-10,-2,1,1,6,3,4,-1,5,9,5,3,-2,8,-1,8,6,-2,-1,-10,-1,-2,2,1,-9,1,8,-8,7,2,2,9,1,2,8,-9,-6,-5,-8,-6,-9,-9,-10,-7,4,7,1,-2,1,4,-8,10,6,2,2,-1,6,-7,-8,5,4,-5,-2,-9,3,-4,-8,4,-8,10,-6,-2,-10,1,3,-9,10,4,-3,6,-6,-6,3,-2,10,-2,4,1,2,3,7,-2,6,-10,-7,-4,7,1,1,4,5,8,-9,-5,-8,-6,-10,4,4,-4,10,-6,-9,-6,10,4,5,7,10,9,-10,-4,3,6,-2,10,10,9,-5,-2,7,2,-7,-10,-1,-4,3,-1,8,6,8,1,4,-9,-7,5,6,-7,-4,-7,-3,-8,-3,-3,-6,10,-6,4,-3,10,4,3,3,-3,7,4,3,6,-10,-6,9,10,6,-7,7,-8,-5,10,-3,4,3,9,9,1,-6,4,2,3,8,-7,-1,5,-8,-3,8,-8,-7,-8,-4,-8,7,-6,-7,-6,-10,9,8,7,-9,-6,10,-9,-2,-7,-7,7,-8,2,3,-10,3,-4,3,6,4,8,-5,-4,3,3,6,-5,-2,-8,7,8,9,-2,5,-2,-1,4,-7,-4,8,2,9,6,4,-6,6,-2,8,-5,3,2,10,-1,2,9,3,4,9,-3,8,6,5,-8,4,-6,1,-1,3,7,-7,7,-8,-4,-5,-9,-8,6,5,-6,9,7,9,-10,10,-8,-6,1,-8,-10,-1,5,-4,-5,-6,1,3,5,6,4,7,-4,-9,-6,9,-9,4,2,-6,8,-7,7,-7,-4,10,-8,4,-9,-7,9,10,8,3,-2,6,10,1,7,-10,8,1,-6,-9,9,1,-2,7,4,10,8,8,-1,-5,-6,9,6,1,8,-8,-6,4,-9,7,-2,9,-5,8,-5,-4,10,4,-7,2,3,-2,-1,6,-9,5,-2,-1,-1,-10,-4,7,10,-3,-6,-2,-5,9,-1,7,-10,1,-7,6,1,-6,4,2,7,-3,-10,-4,-1,10,10,4,-10,-1,-9,-4,-6,-7,4,-6,-5,-3,-6,-10,4,1,-9,-5,1,-5,6,1,10,4,-9,6,-9,-1,-8,2,-2,7,9,10,1,-2,-7,-8,-3,2,3,8,-6,5,-9,-7,3,4,-7,3,2,-4,-8,-5,-5,3,-4,9,1,6,-4,-2,-1,6,1,-6,5,-1,4,-4,-4,8,9,9,-3,9,-10,-4,-5,8,2,-10,-8,9,-8,3,-1,9,-10,7,5,-3,-5,5,7,-8,1,-5,-9,-1,9,-9,4,-8,8,8,-9,6,7,-6,7,3,-3,7,5,1,9,-4,-9,7,-8,-9,-7,-3,-8,-9,4,-3,2,-3,7,1,-3,10,9,-9,4,6,-3,-8,-1,-8,-10,-3,2,-9,9,4,7,6,-1,5,-3,1,-3,8,7,-10,-6,9,-9,6,2,-2,6,-7,2,-6,-4,-10,-5,10,4,-1,2,-10,-10,-3,-8,1,4,3,-9,-1,-6,-1,-1,5,10,-6,7,5,4,-2,-2,8,-3,2,-2,7,7,-10,-9,-2,2,1,-5,7,-6,-2,3,6,5,-10,-4,6,4,-8,3,-2,-9,4,-1,3,-1,-8,7,2,6,8,6,-9,-1,3,-8,-9,-8,-3,6,-8,3,5,2,3,-7,7,-4,-6,-7,9,4,4,-2,2,-7,7,8,1,9,-9,-2,4,5,10,-10,7,6,-7,10,-6,-2,6,-7,2,-10,6,7,9,1,6,-8,-5,-6,-3,-2,5,4,-3,-10,-10,-6,-4,6,7,-5,-9,5,9,6,8,-3,-3,-6,-1,-1,-7,-7,10,-4,-1,9,4,-3,5,-5,9,-8,8,-9,8,-7,-7,-6,8,-1,1,-8,-3,-7,2,1,-1,-4,-3,-7,-2,-8,1,-5,5,9,-5,-2,7,7,3,-1,-9,5,-7,-2,7,10,-3,-6,-1,8,-1,4,-10,-9,1,9,-4,-9,-5,2,1,9,-6,-6,-9,3,-7,-9,-10,-9,-6,-8,-3,3,-9,9,10,-8,4,-3,8,-2,-5,-1,-7,5,-3,8,-1,3,8,4,1,-4,5,7,-7,10,1,-6,-6,-6,5,2,-4,8,6,-2,3,1,7,-1,10,-6,-5,-1,-3,-7,-8,-4,3,-8,5,5,8,-6,-7,-7,10,-7,-6,-5,5,7,10,-8,5,-1,6,8,3,6,5,-6,9,-10,-2,-5,-7,-2,8,-8,-6,5,5,5,-9,8,6,-9,-9,-9,-3,10,9,-5,-10,9,-3,7,8,-6,2,-3,7,-3,-2,-7,-9,5,7,-4,-4,-4,-7,-5,-4,6,-2,-4,10,7,-10,-6,-1,6,2,8,2,3,4,6,6,6,2,10,7,-3,2,-5,-2,-5,-8,-10,-7,-2,8,1,-2,3,4,8,-1,-8,2,-9,2,-9,-7,5,-10,4,-6,4,-9,2,2,-7,-10,-7,-8,-7,8,-3,2,8,-4,2,9,-8,2,-4,-1,-7,-3,5,9,-2,-7,4,4,3,-8,7,-10,-6,6,-7,8,-10,-8,-4,7,6,4,5,-3,7,-5,9,-1,8,-4,6,8,-6,-3,3,-8,-5,-8,10,3,5,4,-3,-8,4,-5,5,-8,-10,-1,10,2,2,10,-1,1,-8,9,-10,2,2,-4,-1,-10,-3,3,-10,1,-5,6,-3,-2,-4,4,-2,7,4,-1,-6,-7,1,4,-7,5,-5,9,-10,9,-4,9,7,-9,9,-9,10,6,8,-5,3,8,-3,-6,-8,8,-5,-9,2,5,-10,8,10,3,4,-4,10,-6,1,-7,-4,2,-3,-4,-8,10,-5,8,-4,5,1,-4,-3,3,2,-2,8,-8,4,-9,2,10,8,3,1,8,7,-2,-4,-4,-8,7,-10,-8,-6,7,-6,5,9,4,6,-3,-7,3,1,-10,-8,6,1,-4,-10,-6,10,-10,9,-10,-9,-8,-7,10,2,8,6,-10,7,-7,-5,-5,4,5,-9,-10,5,5,-3,-1,-4,7,-2,-8,-10,-9,-7,9,8,-9,-8,-5,1,4,-4,10,-3,-7,-3,7,-1,-8,9,-2,-3,5,-9,4,-2,-3,5,-4,2,5,-8,1,-9,8,8,6,-8,-5,-3,7,9,-2,5,3,7,5,10,-5,-4,-6,2,6,-3,8,-1,-9,-7,5,7,9,7,9,9,8,-6,6,8,-7,4,-7,10,-5,9,1,1,-9,-4,-10,4,-6,4,-10,5,-3,3,-4,-6,-2,-3,10,-2,2,9,9,-2,6,7,10,3,1,-3,-1,-7,5,-5,-4,6,-5,10,8,8,-7,8,-7,1,7,4,-5,2,-1,-7,-5,10,5,3,9,-5,-6,-4,-4,-2,10,-8,9,5,6,-2,4,-1,2], dtype = "uint64")#candidate|5843|(1470,)|const|uint64
const_5844 = relay.const([4.869888,0.186919,-4.668315,-5.802695,-5.282924,2.523782,2.428515,-8.159423,-0.412227,4.687252,-3.054457,9.048218,-1.854667,-6.426067,8.233698,-1.339909,-8.278836,-1.862433,-3.975728,6.639002,-8.920989,8.886046,-9.253051,-6.798006,9.163471,4.221125,-5.952779,-2.670697,-2.068064,0.557073,-0.636327,4.640508,9.309504,-2.517147,-2.067098,-3.125691,-6.322623,6.052263,1.981920,-2.920436,2.069693,3.901852,-1.994408,-2.397773,-6.031536,6.145481,-6.193353,-7.275165,-3.190682,2.011246,-7.943441,5.335526,-2.131787,3.481460,-4.084152,-8.556541,4.311255,-4.854747,8.991080,2.475990,-6.556993,8.418275,1.372626,-6.334482,-6.178189,-5.636418,3.324930,6.704992,-7.079137,-4.570296,-8.279316,-1.323552,-7.438285,-0.768753,-3.482729,7.121063,-0.858486,2.389091,-9.943408,1.059411,9.625363,-2.456689,-6.046062,-6.035364,-6.514913,8.785670,3.365639,0.036468,-9.102255,-4.915163,6.726217,3.614188,-9.370323,7.643102,-4.595940,4.279972,-0.450304,7.944164,7.689347,-2.250306,-0.381503,0.210129,3.030245,9.590619,-7.046968,-5.598356,1.936187,9.060248,-6.087335,0.991925,9.410033,2.626792,-3.164546,-2.254089,-8.869669,1.620901,4.993982,5.513026,9.351172,-6.491105,-8.501225,1.017717,6.653191,6.785491,4.215829,-2.600136,7.277466,7.914193,-0.109012,3.587240,-3.445280,4.638583,1.342174,-3.463276,9.698618,-3.218780,-6.400929,-7.976892,-7.676133,0.482214,-5.256304,5.500436,0.999260,5.101228,-1.762282,9.413311,8.909117,-3.504085,3.569704,-2.173566,-7.200946,-6.629755,-7.179373,-6.248903,-9.456156,5.056074,7.330744,-2.662576,5.595098,1.216889,-7.947403,-8.837685,9.254065,1.647953,8.881900,-2.919217,-8.943228,-4.059411,9.422866,-3.093839,8.092569,-7.094595,-8.756261,5.516402,-1.175366,2.919469,3.170779,-6.067213,5.403585,6.187482,9.141679,-7.340659,-0.219077,4.931641,5.486416,6.644461,3.724315,2.964049,-6.157301,5.066124,3.597846,-5.136829,-3.847835,-7.072690,-9.413518,-6.789087,3.971882,4.168964,-6.038483,8.410029,-2.818256,-8.340904,-5.499026,4.724660,-7.890254,4.775902,-5.130921,2.388343,-0.727951,-0.504793,1.215035,9.082078,4.667797,6.489596,9.255598,1.910198,8.357422,5.497623,3.722934,5.479612,9.755799,-3.895153,-0.105973,-7.879071,8.805008,4.202866,3.255548,7.866772,4.986351,-7.517947,7.681366,7.146547,9.766625,-9.949656,3.538003,6.848739,-6.767703,-3.765876,0.477066,7.579685,6.777393,3.056532,5.962069,8.094891,2.813847,1.228527,5.124071,-0.857237,8.112839,-5.408422,-4.239834,6.095721,2.005415,9.996499,-0.834966,8.411292,9.872476,5.697627,4.188248,9.443544,-1.359428,7.185506,6.661927,3.824055,-5.118261,-7.084608,4.330109,5.064477,4.256007,6.569441,1.296624,-2.401604,8.950903,-0.465323,-4.992254,-0.425259,-1.680041,1.119478,0.555090,4.596038,-1.519501,-6.562149,2.968504,-0.018012,-5.844960,1.686069,-7.548876,-4.966543,0.910853,-6.371948,-5.459186,-4.057511,-6.879444,5.765371,-7.357861,9.366980,-4.364986,-2.006283,2.368933,-7.670151,-6.412582,4.291674,9.804814,8.321527,-1.432315,8.395826,-1.022884,-2.372633,7.969663,-6.037921,-6.550721,-2.995629,8.398719,-9.235632,6.938917,-2.117442,-7.453690,-7.817858,4.651714,-3.562720,0.926536,-7.662419,-8.384774,-6.467337,-8.919093,3.444580,-3.384027,5.309279,6.530243,-2.606256,2.208378,-1.638273,-3.904212,9.392921,-9.125094,-2.817888,1.180376,9.223831,3.284732,8.311431,-7.277475,-3.367141,-7.356590,-8.446519,4.204361,-6.595917,9.868459,2.374763,6.836914,8.692289,-7.750083,9.390459,6.491581,9.691517,-6.275816,-7.550354,-8.704502,3.374858,3.859426,-0.728675,-5.092552,2.791614,7.915348,-8.560190,8.029737,8.952562,7.723125,-9.296160,5.211381,2.470157,-2.899399,9.245977,-0.046497,-9.642789,-3.693504,-7.450363,5.161322,7.903447,-0.936941,-7.660969,2.858267,-8.581585,-9.515508,1.228490,-3.289646,-1.311609,5.297703,0.461964,-6.490724,1.645491,-9.096389,-7.455399,2.564189,5.429257,8.862481,9.249339,6.354697,2.611756,-0.918935,8.991171,8.672687,-1.237021,7.634412,-0.300805,1.809166,8.112676,0.093761,7.889796,0.144748,8.522932,-1.503454,3.045294,-3.789588,-3.853060,-1.097868,7.852323,3.239763,-0.048998,-6.508697,-3.466086,-9.500136,8.130004,6.111175,-3.130099,5.345643,2.873277,-3.483074,2.427419,8.339645,-1.365467,-1.320651,5.335533,9.854790,-0.505281,-7.515082,7.182951,-2.586664,1.847005,7.364653,-0.599937,9.959655,8.501744,0.636161,-0.729587,-5.132863,-9.016806,-8.270965,-9.904940,5.215294,6.248713,1.890422,-9.412912,-7.597485,-2.183436,9.229999,-9.814457,-9.463452,-9.358457,6.749428,0.465338,6.134213,-8.036250,9.872642,5.252166,9.607116,0.035000,4.050750,1.707680,4.727969,-0.313649,-5.390096,9.847734,-9.920587,-7.845933,-8.447817,8.833457,8.854867,3.224854,-2.373863,3.103483,-4.313043,-9.857734,-4.771415,6.551716,0.173265,-3.915856,-5.749842,2.285364,-5.750972,-3.165720,9.416544,-5.773444,0.974891,3.649603,5.672209,-8.614065,1.779521,4.615795,-2.546675,5.659721,-9.835251,9.838083,5.418261,2.229748,8.943149,-8.757156,6.278304,7.283128,6.660401,-0.483679,-3.050159,-6.275126,-2.730746,5.407281,-2.224969,-4.723582,2.130847,4.931428,-0.523029,-0.339331,0.097938,-5.780198,6.337889,0.575213,6.753992,4.184999,-9.442978,1.778628,-1.845690,6.501968,-9.442008,9.065586,-3.138869,-7.504138,-5.622636,-3.734348,-6.318366,-5.931802,-7.172520,-6.281511,-8.993577,3.135866,5.084926,6.910411,-0.172101,-4.611289,-2.870715,-8.251358,-0.613125,-6.796695,1.047074,-0.809574,2.484288,1.120739,3.327890,5.222759,-4.401904,-9.180708,-2.882598,7.067178,2.728961,7.808186,2.359721,-0.467740,-1.035089,-9.684750,2.213283,2.878901,-9.900677,-5.639628,-6.194635,9.082585,2.609951,-7.022211,8.119300,-5.057846,4.247286,-7.179900,7.011128,1.632521,6.752177,8.496881,-7.291448,-9.150371,0.939410,-1.747523,-4.606280,-8.005222,-6.823293,7.939834,-2.896305,-7.245745,8.110895,0.885523,7.366901,4.444982,-7.748596,5.984603,1.854957,7.004491,-5.660471,4.810534,2.093336,-3.863703,-5.655192,9.925301,0.697740,1.597829,5.797322,9.305611,3.080966,0.291373,0.315526,-6.718635,-8.119688,-8.152233,-3.168084,-0.431647,2.940607,7.002633,-6.203707,5.441416,-3.795119,7.163358,4.261685,-9.459367,3.389484,-1.878070,-8.477138,9.969901,2.592936,1.194476,5.950212,1.965257,2.572558,3.513347,-7.096938,4.536285,4.280071,-2.358638,-6.328428,5.230274,-7.212469,-9.498161,-7.849838,-5.803281,1.573908,3.475313,2.968711,-4.418613,3.355849,-9.432643,-7.301104,-1.537181,-9.644490,-3.515566,5.645693,-0.304832,7.771777,-9.009213,4.548309,5.526440,8.612327,1.107295,-6.443995,3.331139,4.458702,3.199829,9.471264,9.342081,-7.738019,-8.253044,5.339364,4.375966,-1.668106,4.967449,-5.394773,-7.916339,7.422204,-4.975610,4.307745,-2.599383,-3.876284,-6.823967,0.783630,9.831319,6.380337,-0.563795,8.686157,-2.676870,9.161522,8.086377,-9.566760,9.342746,5.586663,8.065313,6.812721,-1.098265,7.424975,-0.517301,-1.501499,-1.337065,7.387208,9.824049,2.382593,-7.582703,0.274661,-4.677291,-0.542653,1.140544,-1.108840,-3.157605,-0.658106,1.849731,-6.797438,4.408223,8.396330,-6.967966,-2.175894,4.887176,9.815796,-8.354927,6.178418,5.147949,1.254604,-2.681458,8.504181,9.944065,0.400374,-2.463837,-1.256445,-7.877137,2.540416,4.934790,-6.902109,4.947610,-6.494917,-6.454841,3.609390,8.754243,2.748465,-7.829886,7.694798,-3.475274,-3.060265,-3.939954,-1.485019,-9.531905,8.699007,6.042826,1.538336,-0.651257,8.382361,1.794444,-8.353489,4.045731,-3.787142,-6.262966,1.390667,-6.802118,1.492979,1.966875,-9.452006,-8.383401,4.051403,1.580640,-5.905772,-0.190023,4.505079,-0.498526], dtype = "float64")#candidate|5844|(770,)|const|float64
call_5842 = relay.TupleGetItem(func_1660_call(relay.reshape(const_5843.astype('uint64'), [15, 14, 7]), relay.reshape(const_5843.astype('uint64'), [15, 14, 7]), relay.reshape(const_5843.astype('uint64'), [15, 14, 7]), relay.reshape(const_5844.astype('float64'), [770,]), ), 1)
call_5845 = relay.TupleGetItem(func_1665_call(relay.reshape(const_5843.astype('uint64'), [15, 14, 7]), relay.reshape(const_5843.astype('uint64'), [15, 14, 7]), relay.reshape(const_5843.astype('uint64'), [15, 14, 7]), relay.reshape(const_5844.astype('float64'), [770,]), ), 1)
output = relay.Tuple([call_5803,call_5824,call_5842,const_5843,const_5844,])
output2 = relay.Tuple([call_5804,call_5825,call_5845,const_5843,const_5844,])
func_5847 = relay.Function([], output)
mod['func_5847'] = func_5847
mod = relay.transform.InferType()(mod)
output = func_5847()
func_5848 = relay.Function([], output)
mutated_mod['func_5848'] = func_5848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_5853 = func_3566_call()
call_5854 = func_3566_call()
func_5484_call = mod.get_global_var('func_5484')
func_5485_call = mutated_mod.get_global_var('func_5485')
call_5876 = func_5484_call()
call_5877 = func_5484_call()
output = relay.Tuple([call_5853,call_5876,])
output2 = relay.Tuple([call_5854,call_5877,])
func_5888 = relay.Function([], output)
mod['func_5888'] = func_5888
mod = relay.transform.InferType()(mod)
output = func_5888()
func_5889 = relay.Function([], output)
mutated_mod['func_5889'] = func_5889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5888_call = mod.get_global_var('func_5888')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_5906 = relay.TupleGetItem(func_5888_call(), 1)
call_5907 = relay.TupleGetItem(func_5889_call(), 1)
const_5908 = relay.constdtype = "float32")#candidate|5908|(16, 11, 13)|const|float32
bop_5909 = relay.less_equal(call_5906.astype('bool'), relay.reshape(const_5908.astype('bool'), relay.shape_of(call_5906))) # shape=(16, 11, 13)
bop_5912 = relay.less_equal(call_5907.astype('bool'), relay.reshape(const_5908.astype('bool'), relay.shape_of(call_5907))) # shape=(16, 11, 13)
output = bop_5909
output2 = bop_5912
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
mutated_mod['func_5918'] = func_5918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mutated_mod.get_global_var('func_5918')
call_5919 = func_5918_call()
output = call_5919
func_5920 = relay.Function([], output)
mutated_mod['func_5920'] = func_5920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5948 = relay.var("var_5948", dtype = "float64", shape = (5, 15, 16))#candidate|5948|(5, 15, 16)|var|float64
uop_5949 = relay.sigmoid(var_5948.astype('float64')) # shape=(5, 15, 16)
func_5847_call = mod.get_global_var('func_5847')
func_5848_call = mutated_mod.get_global_var('func_5848')
call_5967 = relay.TupleGetItem(func_5847_call(), 1)
call_5968 = relay.TupleGetItem(func_5848_call(), 1)
output = relay.Tuple([uop_5949,call_5967,])
output2 = relay.Tuple([uop_5949,call_5968,])
func_5974 = relay.Function([var_5948,], output)
mod['func_5974'] = func_5974
mod = relay.transform.InferType()(mod)
mutated_mod['func_5974'] = func_5974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5975 = relay.var("var_5975", dtype = "float64", shape = (5, 15, 16))#candidate|5975|(5, 15, 16)|var|float64
func_5974_call = mutated_mod.get_global_var('func_5974')
call_5976 = func_5974_call(var_5975)
output = call_5976
func_5977 = relay.Function([var_5975], output)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5991 = relay.var("var_5991", dtype = "uint8", shape = ())#candidate|5991|()|var|uint8
const_5992 = relay.const([[[-9],[3],[-1],[8],[5],[6],[-9],[4],[9],[3],[3]],[[-9],[5],[-5],[7],[2],[-6],[-4],[6],[-9],[-1],[-1]],[[-10],[-8],[-2],[-6],[-2],[7],[9],[10],[8],[4],[8]],[[1],[1],[7],[6],[6],[10],[7],[-7],[-4],[-2],[-10]],[[4],[6],[3],[6],[-9],[7],[6],[4],[9],[-8],[-4]],[[-10],[1],[-1],[6],[-1],[1],[-2],[9],[-8],[-4],[10]],[[9],[10],[2],[9],[-6],[-6],[-5],[-10],[-8],[5],[10]],[[6],[5],[10],[8],[-7],[-2],[7],[8],[1],[-4],[-1]],[[-5],[4],[-1],[5],[-6],[1],[-4],[3],[10],[9],[1]],[[-7],[1],[-1],[6],[8],[10],[-7],[10],[-4],[-10],[10]],[[-7],[7],[4],[-9],[-3],[4],[-6],[-9],[-6],[4],[-8]],[[8],[-2],[6],[7],[-7],[10],[-2],[-2],[-1],[-7],[9]],[[9],[-6],[4],[10],[-2],[1],[3],[7],[3],[4],[9]]], dtype = "uint8")#candidate|5992|(13, 11, 1)|const|uint8
bop_5993 = relay.equal(var_5991.astype('bool'), const_5992.astype('bool')) # shape=(13, 11, 1)
uop_5998 = relay.sigmoid(bop_5993.astype('float32')) # shape=(13, 11, 1)
output = relay.Tuple([uop_5998,])
output2 = relay.Tuple([uop_5998,])
func_6001 = relay.Function([var_5991,], output)
mod['func_6001'] = func_6001
mod = relay.transform.InferType()(mod)
mutated_mod['func_6001'] = func_6001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6002 = relay.var("var_6002", dtype = "uint8", shape = ())#candidate|6002|()|var|uint8
func_6001_call = mutated_mod.get_global_var('func_6001')
call_6003 = func_6001_call(var_6002)
output = call_6003
func_6004 = relay.Function([var_6002], output)
mutated_mod['func_6004'] = func_6004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5615_call = mod.get_global_var('func_5615')
func_5617_call = mutated_mod.get_global_var('func_5617')
call_6030 = relay.TupleGetItem(func_5615_call(), 0)
call_6031 = relay.TupleGetItem(func_5617_call(), 0)
output = relay.Tuple([call_6030,])
output2 = relay.Tuple([call_6031,])
func_6040 = relay.Function([], output)
mod['func_6040'] = func_6040
mod = relay.transform.InferType()(mod)
output = func_6040()
func_6041 = relay.Function([], output)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mod.get_global_var('func_4984')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_6104 = relay.TupleGetItem(func_4984_call(), 1)
call_6105 = relay.TupleGetItem(func_4986_call(), 1)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_6106 = func_3674_call()
call_6107 = func_3674_call()
output = relay.Tuple([call_6104,call_6106,])
output2 = relay.Tuple([call_6105,call_6107,])
func_6125 = relay.Function([], output)
mod['func_6125'] = func_6125
mod = relay.transform.InferType()(mod)
output = func_6125()
func_6126 = relay.Function([], output)
mutated_mod['func_6126'] = func_6126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5888_call = mod.get_global_var('func_5888')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_6151 = relay.TupleGetItem(func_5888_call(), 0)
call_6152 = relay.TupleGetItem(func_5889_call(), 0)
output = call_6151
output2 = call_6152
func_6169 = relay.Function([], output)
mod['func_6169'] = func_6169
mod = relay.transform.InferType()(mod)
output = func_6169()
func_6170 = relay.Function([], output)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6169_call = mod.get_global_var('func_6169')
func_6170_call = mutated_mod.get_global_var('func_6170')
call_6218 = func_6169_call()
call_6219 = func_6169_call()
output = relay.Tuple([call_6218,])
output2 = relay.Tuple([call_6219,])
func_6229 = relay.Function([], output)
mod['func_6229'] = func_6229
mod = relay.transform.InferType()(mod)
mutated_mod['func_6229'] = func_6229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6229_call = mutated_mod.get_global_var('func_6229')
call_6230 = func_6229_call()
output = call_6230
func_6231 = relay.Function([], output)
mutated_mod['func_6231'] = func_6231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_6247 = relay.TupleGetItem(func_4021_call(), 0)
call_6248 = relay.TupleGetItem(func_4022_call(), 0)
uop_6267 = relay.atanh(call_6247.astype('float32')) # shape=(15, 16, 11)
uop_6269 = relay.atanh(call_6248.astype('float32')) # shape=(15, 16, 11)
uop_6272 = relay.sigmoid(call_6247.astype('float32')) # shape=(15, 16, 11)
uop_6274 = relay.sigmoid(call_6248.astype('float32')) # shape=(15, 16, 11)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_6290 = func_5918_call()
call_6291 = func_5918_call()
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_6292 = relay.TupleGetItem(func_5175_call(), 1)
call_6293 = relay.TupleGetItem(func_5176_call(), 1)
func_2776_call = mod.get_global_var('func_2776')
func_2779_call = mutated_mod.get_global_var('func_2779')
const_6298 = relay.const([8.439529,-4.921534,-9.382831,4.710038,2.167023,-3.721758,-5.844763,1.424085,-4.882479,-2.529812,-0.638689,7.787751,-8.972259,-0.895121,7.472307,3.983846,-8.382820,-3.677071,3.820005,0.500558,-5.839187,-7.926236,-3.730544,-3.314006], dtype = "float32")#candidate|6298|(24,)|const|float32
var_6299 = relay.var("var_6299", dtype = "int16", shape = (650,))#candidate|6299|(650,)|var|int16
call_6297 = relay.TupleGetItem(func_2776_call(relay.reshape(const_6298.astype('float32'), [1, 24]), relay.reshape(var_6299.astype('int16'), [650,]), ), 1)
call_6300 = relay.TupleGetItem(func_2779_call(relay.reshape(const_6298.astype('float32'), [1, 24]), relay.reshape(var_6299.astype('int16'), [650,]), ), 1)
func_6040_call = mod.get_global_var('func_6040')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_6320 = relay.TupleGetItem(func_6040_call(), 0)
call_6321 = relay.TupleGetItem(func_6041_call(), 0)
output = relay.Tuple([uop_6267,uop_6272,call_6290,call_6292,call_6297,const_6298,var_6299,call_6320,])
output2 = relay.Tuple([uop_6269,uop_6274,call_6291,call_6293,call_6300,const_6298,var_6299,call_6321,])
func_6326 = relay.Function([var_6299,], output)
mod['func_6326'] = func_6326
mod = relay.transform.InferType()(mod)
var_6327 = relay.var("var_6327", dtype = "int16", shape = (650,))#candidate|6327|(650,)|var|int16
output = func_6326(var_6327)
func_6328 = relay.Function([var_6327], output)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mod.get_global_var('func_4841')
func_4842_call = mutated_mod.get_global_var('func_4842')
call_6339 = relay.TupleGetItem(func_4841_call(), 1)
call_6340 = relay.TupleGetItem(func_4842_call(), 1)
output = relay.Tuple([call_6339,])
output2 = relay.Tuple([call_6340,])
func_6358 = relay.Function([], output)
mod['func_6358'] = func_6358
mod = relay.transform.InferType()(mod)
output = func_6358()
func_6359 = relay.Function([], output)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_6374 = func_3332_call()
call_6375 = func_3332_call()
func_6001_call = mod.get_global_var('func_6001')
func_6004_call = mutated_mod.get_global_var('func_6004')
var_6377 = relay.var("var_6377", dtype = "uint8", shape = ())#candidate|6377|()|var|uint8
call_6376 = relay.TupleGetItem(func_6001_call(relay.reshape(var_6377.astype('uint8'), [])), 0)
call_6378 = relay.TupleGetItem(func_6004_call(relay.reshape(var_6377.astype('uint8'), [])), 0)
func_5484_call = mod.get_global_var('func_5484')
func_5485_call = mutated_mod.get_global_var('func_5485')
call_6383 = func_5484_call()
call_6384 = func_5484_call()
func_3876_call = mod.get_global_var('func_3876')
func_3879_call = mutated_mod.get_global_var('func_3879')
var_6388 = relay.var("var_6388", dtype = "int16", shape = (650,))#candidate|6388|(650,)|var|int16
const_6389 = relay.const([1,-8,4,-9,-8,-3,-8,1,-4,10,10,-3,3,-9,2,-1,-9,-9,-2,8,-9,-4,3,4,-8,5,-4,-5,2,2,-1,8,9,4,6,-3,5,1,-5,-7,-1,4,-3,-2,2,-8,6,4,-3,-9,10,-3,9,5,3,8,-6,-9,1,3,-7,6,-9,1,1,-1,9,-8,-10,-4,-6,-6,7,3,-1,3,7,3,2,-8,-1,-3,-2,9,-3,4,-5,4,-6,-2,-5,-4,6,8,9,-10,4,-1,6,10,-2,1,-3,-1,-5,-7,-8,1,-8,4,7,-10,-7,1,2,5,4,-3,-2,-7,7,-7,4,-1,-9,2,8,10,4,1,1,-9,-1,-3,7,1,-3,-3,6,-9,-10,2,-6,5,6,-5,-1,3,9,8,5,3,8,4,1,-1,-6,-9,9,-4,8,-1,6,-3,-9,4,-10,1,5,4,-1,-7,1,-1,7,-3,-5,-6,-8,9,-1,1,-9,1,-8,-10,-1,-5,-10,-3,2,-4,2,-9,2,-6,-10,-4,9,-5,-10,5,-1,-8,-7,-1,-6,-7,6,9,-3,-1,-3,-3,10,-9,-4,-4,3,7,-2,10,-5,8,-4,-9,3,-1,5,-9,4,5,-2,-5,2,8,10,4,4,7,1,4,-8,-2,-1,-5,-1,-2,-1,10,9,-7,-6,6,-3,8,3,-7,9,3,2,-4,10,4,5,5,1,-6,-3,7,-7,9,8,-8,-7,8,1,-10,2,-2,-9,-2,1,7,10,1,8,-7,7,-5,8,-4,7,-10,10,-7,-1,1,-9,-7,10,-8,7,5,3,-10,5,-2,8,3,-5,8,1,9,6,1,-5,4,-6,-8,1,2,2,8,3,9,-4,-6,-6,7,3,10,8,-10,5,3,-7,-9,6,-8,-1,-9,-4,9,1,4,5,2,9,8,-3,9,-6,7,-8,-5,2,3,10,-5,-10,-5,-2,8,2,-5,-7,-4,-7,-6,-8,5,6,5,1,-9,9,-6,2,2,10,-8,6,-1,-5,-7,10,10,-1,4,-6,-3,-6,6,4,3,-7,-2,-4,-5,2,9,-3,9,-5,6,-5,-6,9,-10,-2,-9,-5,4,-6,8,1,1,8,10,5,7,-6,-3,-7,-7,6,-7,-9,-10,-10,-2,-8,6,6,-1,1,-3,3,1,-10,8,-6,-9,-6,7,-7,-6,5,1,8,-4,-10,-6,-4,-2,7,2,-4,8,10,-7,-6,4,-3,-5,-8,9,-6,10,2,-4,-3,2,-7,-9,-8,8,7,7,6,2,9,-2,6,4,-8,-9,-7,6,3,-5,-2,-7,2,1,-6,-3,-4,-9,-1,-2,-3,7,4,-6,-1,-10,-1,-1,10,2,-5,-2,-2,-1,4,-1,6,7,-3,9,-3,6,7,-8,9,5,-6,5,10,2,-9,2,-3,5,3,10,4,-9,-5,-2,-8,-10,-5,-4,-1,8,-1,5,-1,-10,8,-2,9,-5,-10,-1,-5,-3,-6,-5,5,-8,6,-4,6,3,5,-6,7,-9,10,5,10,6,-7,4,-6,2,-6,9,10,5,7,10,-7,-1,10,4,4,-8,1,-2,-2,9,1,-9,-1,-4,10,-2,-6,5,7,-6,9,1,-5,9,9,5,-7,9,-3,-8,-9,-1,1,1,-3,-8,-2,-4,-4,-6,10,-1,10,-9,-2,-7,5,-8,-3,-4,-9,-1,-3,-9,6,8,-7,-7,8,9,2,5,-1,4,3,10,-4,2,-6,4,4,-9,2,7,1,2,-9,1,-9,6,6,-3,-7,-8,5,4,-4,10,9,6,3,-3,4,-4,8,-4,-4,-5,-9,5,-4,3,3,6,1,4,-1,-6,-1,-7,-8,3,5,6,-10,-7,-9,-4,6,-4,1,10,-7,6,-7,-6,1,9,-1,1,-6,-8,1,-7], dtype = "uint16")#candidate|6389|(720,)|const|uint16
call_6387 = relay.TupleGetItem(func_3876_call(relay.reshape(var_6388.astype('int16'), [650,]), relay.reshape(const_6389.astype('uint16'), [720,]), ), 0)
call_6390 = relay.TupleGetItem(func_3879_call(relay.reshape(var_6388.astype('int16'), [650,]), relay.reshape(const_6389.astype('uint16'), [720,]), ), 0)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_6398 = func_2963_call()
call_6399 = func_2963_call()
func_4294_call = mod.get_global_var('func_4294')
func_4296_call = mutated_mod.get_global_var('func_4296')
const_6401 = relay.const([-3.965923,-2.616109,6.053857,-7.565126,8.298209,4.671540,-2.391269,0.717788,0.928423,9.451093,-2.051075,-2.899058,-5.914809,7.729367,4.926377,-4.645925,7.552121,6.657931,-7.120328,6.797562,-1.204986,0.912011,-4.278583,5.682185,-5.312759,-1.636580,6.306714,6.277585,-8.737978,1.979594,5.284651,8.808360,-9.290335,6.970366,-8.727143,1.132313,8.666740,1.637218,9.322527,-3.358826,-4.748429,-9.109284,0.424015,1.957153], dtype = "float64")#candidate|6401|(44,)|const|float64
call_6400 = relay.TupleGetItem(func_4294_call(relay.reshape(const_6401.astype('float64'), [11, 2, 2])), 0)
call_6402 = relay.TupleGetItem(func_4296_call(relay.reshape(const_6401.astype('float64'), [11, 2, 2])), 0)
func_6169_call = mod.get_global_var('func_6169')
func_6170_call = mutated_mod.get_global_var('func_6170')
call_6406 = func_6169_call()
call_6407 = func_6169_call()
func_2776_call = mod.get_global_var('func_2776')
func_2779_call = mutated_mod.get_global_var('func_2779')
var_6417 = relay.var("var_6417", dtype = "float32", shape = (24,))#candidate|6417|(24,)|var|float32
call_6416 = relay.TupleGetItem(func_2776_call(relay.reshape(var_6417.astype('float32'), [1, 24]), relay.reshape(var_6388.astype('int16'), [650,]), ), 3)
call_6418 = relay.TupleGetItem(func_2779_call(relay.reshape(var_6417.astype('float32'), [1, 24]), relay.reshape(var_6388.astype('int16'), [650,]), ), 3)
output = relay.Tuple([call_6374,call_6376,var_6377,call_6383,call_6387,var_6388,const_6389,call_6398,call_6400,const_6401,call_6406,call_6416,var_6417,])
output2 = relay.Tuple([call_6375,call_6378,var_6377,call_6384,call_6390,var_6388,const_6389,call_6399,call_6402,const_6401,call_6407,call_6418,var_6417,])
func_6421 = relay.Function([var_6377,var_6388,var_6417,], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
var_6422 = relay.var("var_6422", dtype = "uint8", shape = ())#candidate|6422|()|var|uint8
var_6423 = relay.var("var_6423", dtype = "int16", shape = (650,))#candidate|6423|(650,)|var|int16
var_6424 = relay.var("var_6424", dtype = "float32", shape = (24,))#candidate|6424|(24,)|var|float32
output = func_6421(var_6422,var_6423,var_6424,)
func_6425 = relay.Function([var_6422,var_6423,var_6424,], output)
mutated_mod['func_6425'] = func_6425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6125_call = mod.get_global_var('func_6125')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_6468 = relay.TupleGetItem(func_6125_call(), 0)
call_6469 = relay.TupleGetItem(func_6126_call(), 0)
func_1570_call = mod.get_global_var('func_1570')
func_1574_call = mutated_mod.get_global_var('func_1574')
var_6502 = relay.var("var_6502", dtype = "uint16", shape = (60, 12))#candidate|6502|(60, 12)|var|uint16
call_6501 = relay.TupleGetItem(func_1570_call(relay.reshape(var_6502.astype('uint16'), [3, 16, 15]), relay.reshape(var_6502.astype('uint16'), [3, 16, 15]), ), 0)
call_6503 = relay.TupleGetItem(func_1574_call(relay.reshape(var_6502.astype('uint16'), [3, 16, 15]), relay.reshape(var_6502.astype('uint16'), [3, 16, 15]), ), 0)
output = relay.Tuple([call_6468,call_6501,var_6502,])
output2 = relay.Tuple([call_6469,call_6503,var_6502,])
func_6514 = relay.Function([var_6502,], output)
mod['func_6514'] = func_6514
mod = relay.transform.InferType()(mod)
var_6515 = relay.var("var_6515", dtype = "uint16", shape = (60, 12))#candidate|6515|(60, 12)|var|uint16
output = func_6514(var_6515)
func_6516 = relay.Function([var_6515], output)
mutated_mod['func_6516'] = func_6516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6040_call = mod.get_global_var('func_6040')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_6539 = relay.TupleGetItem(func_6040_call(), 0)
call_6540 = relay.TupleGetItem(func_6041_call(), 0)
output = call_6539
output2 = call_6540
func_6547 = relay.Function([], output)
mod['func_6547'] = func_6547
mod = relay.transform.InferType()(mod)
output = func_6547()
func_6548 = relay.Function([], output)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5381_call = mod.get_global_var('func_5381')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_6561 = func_5381_call()
call_6562 = func_5381_call()
func_5888_call = mod.get_global_var('func_5888')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_6571 = relay.TupleGetItem(func_5888_call(), 1)
call_6572 = relay.TupleGetItem(func_5889_call(), 1)
func_5711_call = mod.get_global_var('func_5711')
func_5713_call = mutated_mod.get_global_var('func_5713')
call_6579 = func_5711_call()
call_6580 = func_5711_call()
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
call_6584 = relay.TupleGetItem(func_3953_call(), 1)
call_6585 = relay.TupleGetItem(func_3955_call(), 1)
output = relay.Tuple([call_6561,call_6571,call_6579,call_6584,])
output2 = relay.Tuple([call_6562,call_6572,call_6580,call_6585,])
func_6601 = relay.Function([], output)
mod['func_6601'] = func_6601
mod = relay.transform.InferType()(mod)
mutated_mod['func_6601'] = func_6601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6601_call = mutated_mod.get_global_var('func_6601')
call_6602 = func_6601_call()
output = call_6602
func_6603 = relay.Function([], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
call_6614 = relay.TupleGetItem(func_3953_call(), 1)
call_6615 = relay.TupleGetItem(func_3955_call(), 1)
output = relay.Tuple([call_6614,])
output2 = relay.Tuple([call_6615,])
func_6620 = relay.Function([], output)
mod['func_6620'] = func_6620
mod = relay.transform.InferType()(mod)
output = func_6620()
func_6621 = relay.Function([], output)
mutated_mod['func_6621'] = func_6621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mod.get_global_var('func_4984')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_6656 = relay.TupleGetItem(func_4984_call(), 0)
call_6657 = relay.TupleGetItem(func_4986_call(), 0)
func_6601_call = mod.get_global_var('func_6601')
func_6603_call = mutated_mod.get_global_var('func_6603')
call_6658 = relay.TupleGetItem(func_6601_call(), 3)
call_6659 = relay.TupleGetItem(func_6603_call(), 3)
output = relay.Tuple([call_6656,call_6658,])
output2 = relay.Tuple([call_6657,call_6659,])
func_6680 = relay.Function([], output)
mod['func_6680'] = func_6680
mod = relay.transform.InferType()(mod)
mutated_mod['func_6680'] = func_6680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6680_call = mutated_mod.get_global_var('func_6680')
call_6681 = func_6680_call()
output = call_6681
func_6682 = relay.Function([], output)
mutated_mod['func_6682'] = func_6682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1922_call = mod.get_global_var('func_1922')
func_1924_call = mutated_mod.get_global_var('func_1924')
call_6790 = relay.TupleGetItem(func_1922_call(), 0)
call_6791 = relay.TupleGetItem(func_1924_call(), 0)
func_4583_call = mod.get_global_var('func_4583')
func_4586_call = mutated_mod.get_global_var('func_4586')
const_6813 = relay.const([[6,-8],[3,-1],[-8,-8],[-4,-8],[6,-7],[8,1],[-10,1],[2,3],[5,-9],[9,-5],[-4,9],[-6,6],[-4,3],[6,1],[-1,-3],[-10,-3],[6,-7],[3,-3],[5,-2],[-10,4],[-3,5],[-3,3],[-1,-8],[-3,-9],[-4,-5],[8,-3],[1,-5],[6,-6],[-10,-8],[9,8],[-10,-4],[9,1],[10,10],[5,3],[3,-8],[9,9],[6,2],[-9,-7],[7,1],[7,-7],[7,6],[-5,7],[-7,6],[-10,7],[2,-1],[-10,-1],[2,-2],[3,7],[-9,1],[2,-1],[-4,6],[3,10],[-1,-8],[3,-7],[-9,-5],[8,-2],[7,-2],[-3,9],[-1,-3],[-6,-2],[6,-9],[9,-6],[-5,-3],[-7,2],[10,4],[-7,1],[5,4],[7,-2],[6,-5],[-9,5],[6,-9],[-3,-6],[6,-6],[-2,-3],[-3,10],[-3,-6],[-4,-3],[-2,7],[8,-10],[8,6],[5,-7],[1,5],[4,-7],[-8,5],[-3,-2],[-9,-2],[6,8],[9,6],[-7,2],[10,3],[1,-3],[10,10],[10,-8],[-3,-8],[6,3],[-9,9],[1,-4],[-9,8],[-7,-10],[1,-2],[-3,2],[5,-7],[5,6],[10,-9],[-9,1],[-4,-9],[-2,-9],[10,-3],[-4,-1],[2,-1],[9,-10],[3,9],[6,9],[10,10],[8,4],[1,-10],[-2,-7],[8,-3],[3,7],[5,-7],[7,1],[-5,-9],[10,-10],[-1,-7],[1,9],[-10,-8],[6,-1],[1,-3],[6,-6],[-5,-6],[6,-6],[-6,10],[-7,-7],[-1,-3],[2,7],[-2,2],[2,-8],[2,-2],[10,7],[-10,-1],[6,-7],[-5,-4],[-2,10],[1,1],[1,2],[3,-4],[-1,9],[10,10],[10,-4],[10,9],[9,8],[-3,-3],[8,10],[9,-6],[-6,4],[7,-1],[3,-9],[3,5],[-1,-2],[-1,9],[-2,3],[-2,4],[4,-2],[-1,-7],[10,7],[5,-7],[-4,1],[6,5],[8,9],[-6,7],[-2,2],[-6,10],[-4,1],[-1,-8],[-7,-2],[-10,1],[6,-9],[5,-4],[-7,-10],[5,10],[7,1],[-2,-4],[-9,-2],[-3,10],[-4,-2],[6,-6],[10,7],[6,-5],[1,-2],[6,-3],[-2,5],[-9,3],[-1,-2],[10,-2],[-6,8],[-8,-8],[8,3],[-5,8],[-3,-3],[5,6],[2,4],[8,4],[5,-7],[-4,2],[-4,-5],[-1,-6],[-5,9],[-6,7],[4,10],[7,7],[6,7],[-6,2],[-5,-9],[-10,-3],[4,7],[6,8],[5,-2],[-3,-8],[-3,-9],[-3,-9],[9,-7],[4,6],[-1,-10],[4,6],[9,4],[9,1],[5,2],[-10,-10],[-10,-8],[8,-4],[4,7],[3,9],[-3,2],[-5,5],[2,9],[10,-10],[8,-5],[-3,-5],[-5,7],[6,-10],[9,5],[6,3],[9,1],[-3,10],[-1,8],[-3,3],[5,-6],[5,4],[-7,-7],[8,10],[-4,-7],[-3,10],[1,10],[-1,4],[10,-1],[-5,1],[5,-4],[8,2],[-6,-10],[-3,3],[-6,-10],[5,-7],[3,1],[4,-9],[-10,1],[8,1],[-2,2],[-1,1],[-7,6],[-4,-8],[2,2],[-1,-4],[5,-2],[-1,-4],[-4,-10],[1,-2],[-2,-2],[-3,3],[2,-3],[8,6],[5,4],[-3,-6],[-7,1],[8,10],[-4,-8],[5,-4],[7,-9],[-5,8],[-5,5],[-3,4],[-7,-9],[10,7],[-2,-5],[-6,-3],[6,-10],[9,2],[-2,-3],[-8,-6],[3,4],[-5,-9],[7,3],[3,-10],[7,4],[10,1],[5,-9],[-10,9],[-10,-7],[5,-1],[2,-8],[7,-5],[-8,10],[7,9],[5,4],[-3,-9],[8,-8],[-3,-7],[-3,9],[-3,-4],[-7,10],[-6,-7],[-9,4],[-6,6],[8,10],[3,6],[2,-5],[4,-7],[-2,5],[4,-8],[-5,-4],[5,6],[4,-7],[-3,2],[-10,10],[6,5],[2,7],[3,10],[8,-8],[6,8],[-2,-8],[10,10],[-8,-4],[-10,6],[8,-2],[9,-7],[-8,1],[1,-5],[-6,7],[4,6],[2,8],[-8,3],[-8,-6],[-9,-5],[2,-2],[-9,5],[1,-1],[-1,-6],[-4,4],[9,-9],[4,-5],[10,9]], dtype = "uint16")#candidate|6813|(360, 2)|const|uint16
const_6814 = relay.const([[8,-8,9,-4,-3,10,5,-2,-5,-6,-4,8,-2,-6,6,8,6,-8,-7,-8,1,10,3,6,-1,-10,5,-10,6,2,4,8,5,-6,6,-5,-3,7,-6,-7,-5,-3,6,9,-1,-6,8,8,-9,6,-10,4,-7,-3,-4,-2,-7,1,-10,7,-1,8,-6,3,-1,-1,-1,4,6,2,8,-10,9,-2,2,-8,-2,-2,-3,4,-5,4,-9,-5,8,6,-9,4,-8,7,-6,2,-3,8,9,-9,6,2,2,2,-3,7,-5,-10,-9,-4,1,-5,-2,10,3,-8,3,-4,-5,8,-5,2,7,-6,8,-3,7,5,9,1,-7,10,-6,8,3,1,-10,-9,-4,5,-6,-3,4,-10,-5,4,-7,1,-1,9,4,1,5,-3,6,3,6,-2,-5,-5,5,-2,4,-8,-2,-6,-8,-2,-8,2,-5,-5,-10,-3,-1,-3,8,9,-9,-6,5,-1,10,6,8,-1,2,4,-4,6,7,-4,-7,8,1,8,7,-10,3,-6,-5,-6,4,-8,-8,6,6,-10,-2,-8,2,10,7,8,-8,-5,-5,10,10,10,2,5,5,-10,6,1,-4,-9,2,3,6,-3,-8,10,10,-9,-5,10,-2,8,-8,7,-1,5,8,3,7,-2,-10,-4,-2,3,-7,-9,5,8,10,7,6,5,1,5,-8,4,9,8,-1,1,6,-9,-9,6,4,1,5,-1,7,-4,-5,1,-6,-7,2,5,8,-10,-10,-8,-8,-2,6,1,3,8,-4,2,-10,7,7,-9,-5,-1,5,-9,8,-8,-7,10,4,8,9,-8,-8,-10,-8,-7,-7,-7,-10,7,-8,-4,4,6,10,-6,3,9,-10,6,9,8,-4,10,1,-3,2,5,9,-2,5,-9,1,-2,6,-8,1,-1,-10,10,6,-10,1,4,7,1,5,10,8,8,10,-7,1,10,8,-5,-5,5,-2,-6,-7,3,-6,10,7,-6,-4,-9,-2,8,-9,6,-10,10,2,-3,2,2,8,-10,10,3,-10,10,-9,1,9,-2,10,1,7,-10,-7,-4,6,4,-1,-1,7,-4,8,-6,5,-8,-9,7,-10,-4,-1,5,-6,5,-4,-8,-10,9,10,-6,5,-9,10,2,-5,10,9,-5,-4,10,-1,-1,3,-8,7,-7,8,9,-4,-10,9,8,5,1,-6,-7,1,7,-10,-8,-10,1,5,-6,1,9,-7,-8,-10,2,-9,-4,-9,-8,-7,7,-5,5,-10,-8,-8,1,-2,8,7,10,8,-10,-7,7,-7,1,-5,-10,7,6,-5,-1,-9,10,8,3,6,-5,2,-6,8,-10,4,-10,8,-6,-6,-9,-3,-8,-1,-7,4,1,-5,6,-6,6,8,3,-3,-8,-4,-1,-10,-8,-2,9,8,-6,8,-6,-10,-8,-8,4,-8,10,1,-8,2,1,10,2,1,1,-7,6,9,6,5,-1,-2,2,2,-6,6,8,9,-6,-5,-10,1,-2,1,8,-7,8,9,5,-2,8,8,5,-6,-10,9,-5,-9,1,-4,6,9,1,6,3,-6,-7,7,-4,5,5,-5,4,-7,1,-7,3,3,-6,-9,-6,-10,-1,-4,-1,8,-3,-6,4,4,-7,6,-7,-3,7,-3,-8,7,1,4,-10,-8,5,2,7,9,-4,-3,4,-3,-9,6,-9,-7,-4,-2,3,-9,-2,-10,-4,-3,1,-9,-4,-8,1,2,-6,-2,-8,-5,2,9,-3,-5,5,-5,-5,-3,-9,4,4,-1,5,-9,6,3,-7,4,-9,-7,8,-3,8,-4,7,-8,5,9,5,-2,3,-10,8,-2,-4,3,3,-5,-2,-10,6,-9,-9,1,-10,4,-8,6,10,-3,7,6,-2,2,9,-4,-2,-10,-3,7,-5,7,-7,9,2,-4,8,10,-3,5,-4,9,-3,-9,9,2,-4,7,-3,-1,-8,4,6,-7,6,-1,2,8,-8,-4,10,-2,6,-8,-6,3,-5,-2,-3,-10,-5,-1,10,4,6,-6,5,-3,-7,-9,-1,9,-1,6,3,3,6,7,-5,3,-1,8,-9,7,1,1,6,9,-2,-1,1,-3,2,-3,10,-10,7,9,10],[-3,9,4,-3,-5,10,-10,-2,7,4,10,-8,-7,10,-2,-9,1,1,7,10,9,-10,10,3,-5,-9,-10,-7,3,-2,-6,-2,-1,4,-6,-10,4,-7,1,4,-6,-4,2,-5,9,-2,8,-3,8,9,-4,1,10,-2,10,10,9,-4,3,5,-7,-8,10,6,-1,-4,-5,-2,-4,7,-2,-10,8,3,-5,5,5,9,-5,5,-1,10,3,2,-10,-1,-5,-3,-7,6,5,8,-7,7,-3,7,-1,-1,-2,-2,-3,5,4,-10,-6,-6,2,-1,10,-10,-10,8,-5,-6,5,9,10,3,2,6,-4,9,6,-4,7,1,2,-1,-10,5,-6,1,-8,2,2,8,-2,-1,-6,-5,10,4,-5,10,-3,-1,9,5,-10,9,-6,-9,3,-9,6,6,9,-9,-5,2,-6,-7,8,-4,10,10,2,6,-1,6,6,7,-2,-2,7,-4,-8,10,2,4,-7,10,6,-7,-9,-6,5,-2,10,-3,-9,-10,8,3,-3,-4,1,-2,-7,6,1,3,-5,-4,-1,4,6,9,5,3,-10,2,8,8,4,1,6,-3,9,10,6,3,9,5,-5,5,5,5,-1,1,9,-1,8,-9,-3,10,-2,-3,-3,6,1,3,7,1,3,5,6,10,-10,-2,8,6,2,-9,-10,-5,4,-6,6,-3,1,-4,2,2,4,8,-5,10,-4,6,-3,4,9,-2,-9,-7,-1,-9,6,6,5,-10,8,2,10,-5,-9,2,-1,4,-9,2,3,-4,3,10,6,2,1,-6,-10,-4,2,-6,10,4,-2,-1,8,-5,-5,-10,-7,5,-4,9,-1,-2,8,-5,9,-10,-4,7,6,4,9,2,-6,-5,7,-6,-6,-1,-10,5,-6,2,5,3,-1,3,-10,-7,-2,-1,-6,-7,-7,7,5,-7,-8,-10,-8,6,-9,-1,-4,9,1,-2,7,9,10,-3,7,-5,-9,-8,7,8,3,-6,8,-10,5,7,-3,-8,-10,7,1,4,8,-8,-6,-2,-8,5,-6,-6,-8,5,-9,4,3,9,-3,7,5,-6,-4,1,9,-9,-10,7,7,-9,4,6,-5,3,-7,9,6,4,-6,-3,10,1,6,-10,-10,9,-4,-3,-9,-7,7,-8,-5,-4,-5,5,8,7,-4,6,8,9,-8,1,7,4,7,-8,4,3,-10,7,6,1,-3,-5,-2,-4,-7,10,4,9,-5,4,-8,1,5,7,3,1,-4,-8,-1,7,-9,1,10,-3,-6,8,-3,-3,6,10,-7,-7,7,7,10,-5,2,10,-7,-1,-1,-8,-6,3,-10,-1,-3,-10,-6,10,3,-4,-3,-9,9,-3,6,7,2,-6,-4,-1,-5,-7,8,-8,-3,7,7,8,5,10,-5,-5,-8,9,-8,-9,1,-6,3,9,-6,-4,4,1,-3,1,8,3,7,-10,-4,9,-6,2,9,-7,-10,8,-1,3,9,-2,-2,-5,-8,-3,5,-8,7,2,3,-2,10,-9,8,7,-6,4,-3,-6,-3,5,-10,-1,-3,4,-4,-1,8,-7,1,-2,10,-6,5,6,-10,-10,-6,-9,5,6,-2,6,-8,6,7,-8,-6,-2,6,-10,10,9,10,6,-3,-7,-1,5,-5,1,-9,-9,-5,7,-10,8,-7,-6,6,4,-4,4,-5,-5,10,-2,-4,5,3,-1,-8,-3,-7,-6,2,-2,-3,2,-7,-8,-4,7,3,-7,5,9,10,-10,10,-10,8,-1,-8,10,-1,-2,9,2,3,-8,9,4,9,6,2,4,-8,10,7,3,8,-10,9,1,-1,-2,8,10,10,7,-2,9,-5,7,-10,-7,-10,-7,6,2,-9,-8,8,6,-3,-7,5,4,6,-1,6,7,4,-4,4,-10,8,-1,7,4,10,5,-9,5,-10,4,-4,-1,-4,3,-1,-10,2,-7,9,-8,-3,6,2,7,-10,10,-1,4,-6,-3,1,-5,-7,1,4,-8,-4,8,6,8,8,9,8,7,2,10,5,6,8,1,9,-10,2,9,-7,3,4,7,7,6,3,-3,-1,-4,6,-4,5,-8,-4,-6,-3,-6,-2,10,4,9,4,-10]], dtype = "int32")#candidate|6814|(2, 792)|const|int32
call_6812 = relay.TupleGetItem(func_4583_call(relay.reshape(const_6813.astype('uint16'), [720,]), relay.reshape(const_6814.astype('int32'), [1, 1584]), ), 3)
call_6815 = relay.TupleGetItem(func_4586_call(relay.reshape(const_6813.astype('uint16'), [720,]), relay.reshape(const_6814.astype('int32'), [1, 1584]), ), 3)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_6821 = func_3332_call()
call_6822 = func_3332_call()
func_3427_call = mod.get_global_var('func_3427')
func_3431_call = mutated_mod.get_global_var('func_3431')
var_6824 = relay.var("var_6824", dtype = "int16", shape = (650,))#candidate|6824|(650,)|var|int16
var_6825 = relay.var("var_6825", dtype = "uint64", shape = (98, 15))#candidate|6825|(98, 15)|var|uint64
call_6823 = relay.TupleGetItem(func_3427_call(relay.reshape(var_6824.astype('int16'), [5, 130]), relay.reshape(var_6825.astype('uint64'), [1470,]), relay.reshape(var_6824.astype('int16'), [5, 130]), ), 3)
call_6826 = relay.TupleGetItem(func_3431_call(relay.reshape(var_6824.astype('int16'), [5, 130]), relay.reshape(var_6825.astype('uint64'), [1470,]), relay.reshape(var_6824.astype('int16'), [5, 130]), ), 3)
func_5256_call = mod.get_global_var('func_5256')
func_5257_call = mutated_mod.get_global_var('func_5257')
call_6827 = relay.TupleGetItem(func_5256_call(), 0)
call_6828 = relay.TupleGetItem(func_5257_call(), 0)
output = relay.Tuple([call_6790,call_6812,const_6813,const_6814,call_6821,call_6823,var_6824,var_6825,call_6827,])
output2 = relay.Tuple([call_6791,call_6815,const_6813,const_6814,call_6822,call_6826,var_6824,var_6825,call_6828,])
func_6829 = relay.Function([var_6824,var_6825,], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mutated_mod.get_global_var('func_6829')
var_6831 = relay.var("var_6831", dtype = "int16", shape = (650,))#candidate|6831|(650,)|var|int16
var_6832 = relay.var("var_6832", dtype = "uint64", shape = (98, 15))#candidate|6832|(98, 15)|var|uint64
call_6830 = func_6829_call(var_6831,var_6832,)
output = call_6830
func_6833 = relay.Function([var_6831,var_6832,], output)
mutated_mod['func_6833'] = func_6833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_6854 = relay.TupleGetItem(func_4103_call(), 0)
call_6855 = relay.TupleGetItem(func_4105_call(), 0)
output = call_6854
output2 = call_6855
func_6873 = relay.Function([], output)
mod['func_6873'] = func_6873
mod = relay.transform.InferType()(mod)
output = func_6873()
func_6874 = relay.Function([], output)
mutated_mod['func_6874'] = func_6874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6169_call = mod.get_global_var('func_6169')
func_6170_call = mutated_mod.get_global_var('func_6170')
call_6889 = func_6169_call()
call_6890 = func_6169_call()
output = relay.Tuple([call_6889,])
output2 = relay.Tuple([call_6890,])
func_6895 = relay.Function([], output)
mod['func_6895'] = func_6895
mod = relay.transform.InferType()(mod)
output = func_6895()
func_6896 = relay.Function([], output)
mutated_mod['func_6896'] = func_6896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_6936 = relay.TupleGetItem(func_5175_call(), 0)
call_6937 = relay.TupleGetItem(func_5176_call(), 0)
output = call_6936
output2 = call_6937
func_6942 = relay.Function([], output)
mod['func_6942'] = func_6942
mod = relay.transform.InferType()(mod)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6942_call = mutated_mod.get_global_var('func_6942')
call_6943 = func_6942_call()
output = call_6943
func_6944 = relay.Function([], output)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mod.get_global_var('func_5711')
func_5713_call = mutated_mod.get_global_var('func_5713')
call_6971 = func_5711_call()
call_6972 = func_5711_call()
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_6988 = func_3674_call()
call_6989 = func_3674_call()
output = relay.Tuple([call_6971,call_6988,])
output2 = relay.Tuple([call_6972,call_6989,])
func_7023 = relay.Function([], output)
mod['func_7023'] = func_7023
mod = relay.transform.InferType()(mod)
mutated_mod['func_7023'] = func_7023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mutated_mod.get_global_var('func_7023')
call_7024 = func_7023_call()
output = call_7024
func_7025 = relay.Function([], output)
mutated_mod['func_7025'] = func_7025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6040_call = mod.get_global_var('func_6040')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_7184 = relay.TupleGetItem(func_6040_call(), 0)
call_7185 = relay.TupleGetItem(func_6041_call(), 0)
output = relay.Tuple([call_7184,])
output2 = relay.Tuple([call_7185,])
func_7187 = relay.Function([], output)
mod['func_7187'] = func_7187
mod = relay.transform.InferType()(mod)
output = func_7187()
func_7188 = relay.Function([], output)
mutated_mod['func_7188'] = func_7188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6620_call = mod.get_global_var('func_6620')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_7213 = relay.TupleGetItem(func_6620_call(), 0)
call_7214 = relay.TupleGetItem(func_6621_call(), 0)
func_3308_call = mod.get_global_var('func_3308')
func_3311_call = mutated_mod.get_global_var('func_3311')
const_7229 = relay.const([-1,3,4,-2,-8,5,-10,-1,7,-6,-7,8,6,7,6,-2,-8,2,-6,-1,5,-2,8,3,-9,10,-10,3,10,2,9,-3,-9,-10,-9,-1,9,-9,-7,2,-9,-3,3,-7,-7,9,4,-2,6,10,-5,8,-4,-10,-9,-8,-7,9,8,-2,-4,-10,2,-3,-4,-4,6,2,10,1,-6,-8,-10,4,-3,-3,-7,5,-5,-10,3,-7,-7,-7,2,-6,6,1,3,6,-10,-4,1,10,10,-6,-5,10,-1,1,-6,2,-3,10,6,5,-4,-7,-10,3,-9,5,-2,-6,-3,-8,3,4,1,-3,9,-5,7,-10,-8,-9,1,-1,-8,-6,5,1,-4,-4,-9,3,7,3,-9,2,-7,6,-4,1,-7,4,-10,10,10,-8,2,-8,-9,-4,-7,8,9,2,-5,5,9,-2,4,3,-5,-2,-4,10,3,-4,2,4,7,5,10,-4,1,10,-7,1,5,10,6,-5,-4,1,2,-9,3,3,-6,-2,2,-4,4,2,1,-1,4,7,-4,5,-4,-4,-8,10,-1,-5,-4,-3,-6,-10,-9,-3,-4,10,-9,-1,-1,9,2,-7,2,8,-3,-6,4,-8,-6,5,-3,7,1,-2,7,-4,-1,-1,-3,8,-8,4,10,-6,-5,6,7,8,5,2,1,8,7,4,-8,5,-9,-9,-1,5,5,3,-7,2,1,4,10,-4,3,6,-2,-9,-9,10,-3,-7,-8,-10,1,9,-8,4,8,6,7,5,4,-2,2,5,1,-4,4,4,-8,5,-7,-3,-6,6,-2,7,-5,-10,-5,2,9,-4,2,6,10,-5,10,-2,8,4,-9,5,-1,2,-2,-1,10,1,3,1,1,-2,5,-9,-2,-2,-3,-6,4,2,4,-4,-9,8,4,-7,7,-6,-3,-5,8,-7,-4,7,5,-3,-3,5,4,3,-5,5,-2,-4,7,-2,-7,-8,-4,-9,4,-7,-1,-8,8,-4,-4,6,-1,-10,2,-7,-3,-9,2,5,2,-5,-6,7,-6,8,-2,-5,9,-3,-1,9,7,-8,-8,7,7,-2,-4,-9,-1,-8,3,6,-3,2,-9,-6,9,-5,9,6,1,10,-10,-6,8,-4,9,5,-10,8,10,-8,-9,5,-5,7,2,3,-8,10,3,9,5,8,2,7,-9,10,-9,10,-7,-4,-4,-8,-6,-10,-6,4,4,-9,7,10,-2,-6,5,-7,-10,-1,9,-9,-10,7,10,7,3,-4,-1,-6,5,6,-7,2,5,4,-5,-1,5,-10,9,-3,-3,-3,-9,7,-3,4,7,9,-1,8,-9,-8,-4,9,6,-6,-7,3,-9,2,5,-4,-3,-6,6,-8,-10,-9,-7,-10,10,-1,-6,-7,-7,9,-4,-6,-5,-1,6,-6,-8,-3,-3,9,8,2,-6,-10,-7,-7,-9,-8,-7,5,-8,2,-8,-2,-7,-6,-3,-2,9,-4,-9,7,-5,-2,6,6,10,2,4,-3,-7,7,-9,-10,10,-7,6,7,-1,-6,8,-2,1,-8,-10,-5,2,-8,2,1,2,1,2,-3,-6,-9,-2,-3,-9,-9,4,5,-7,-6,10,3,3,-2,-9,-7,4,7,9,1,5,-6,-4,-4,5,-2,-7,-9,-6,-5,-5,-9,-8,-7,10,-6,7,-3,-6,-2,5,8,-6,2,7,8,-10,5,7,9,-9,2,9,-7,-10,-8,10,9,-4,-1,-10,6,-7,-10,-10,-2,3,7,7,9,-10,4,-6,9,6,2,10,-6,7,-1,-2,-10,-7,1,8,3,8,1,2,5,-9,-2,4,-7,-1,-10,3,1,6,6,-1,-5,8,-4,-5,6,5,4,-5,10,9,-2,9,-2,5,-10,-7,-7,10,-5,10,8,9,-5,-1,2,-5,2,-8,-1,-10,-9,-6,4,-8,9], dtype = "uint16")#candidate|7229|(720,)|const|uint16
call_7228 = relay.TupleGetItem(func_3308_call(relay.reshape(const_7229.astype('uint16'), [2, 360])), 0)
call_7230 = relay.TupleGetItem(func_3311_call(relay.reshape(const_7229.astype('uint16'), [2, 360])), 0)
func_3901_call = mod.get_global_var('func_3901')
func_3903_call = mutated_mod.get_global_var('func_3903')
call_7233 = func_3901_call()
call_7234 = func_3901_call()
output = relay.Tuple([call_7213,call_7228,const_7229,call_7233,])
output2 = relay.Tuple([call_7214,call_7230,const_7229,call_7234,])
func_7238 = relay.Function([], output)
mod['func_7238'] = func_7238
mod = relay.transform.InferType()(mod)
mutated_mod['func_7238'] = func_7238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mutated_mod.get_global_var('func_7238')
call_7239 = func_7238_call()
output = call_7239
func_7240 = relay.Function([], output)
mutated_mod['func_7240'] = func_7240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mod.get_global_var('func_5847')
func_5848_call = mutated_mod.get_global_var('func_5848')
call_7259 = relay.TupleGetItem(func_5847_call(), 4)
call_7260 = relay.TupleGetItem(func_5848_call(), 4)
var_7280 = relay.var("var_7280", dtype = "float64", shape = (770,))#candidate|7280|(770,)|var|float64
bop_7281 = relay.logical_xor(call_7259.astype('uint64'), relay.reshape(var_7280.astype('uint64'), relay.shape_of(call_7259))) # shape=(770,)
bop_7284 = relay.logical_xor(call_7260.astype('uint64'), relay.reshape(var_7280.astype('uint64'), relay.shape_of(call_7260))) # shape=(770,)
output = bop_7281
output2 = bop_7284
func_7297 = relay.Function([var_7280,], output)
mod['func_7297'] = func_7297
mod = relay.transform.InferType()(mod)
mutated_mod['func_7297'] = func_7297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7298 = relay.var("var_7298", dtype = "float64", shape = (770,))#candidate|7298|(770,)|var|float64
func_7297_call = mutated_mod.get_global_var('func_7297')
call_7299 = func_7297_call(var_7298)
output = call_7299
func_7300 = relay.Function([var_7298], output)
mutated_mod['func_7300'] = func_7300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mod.get_global_var('func_4919')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_7317 = relay.TupleGetItem(func_4919_call(), 0)
call_7318 = relay.TupleGetItem(func_4921_call(), 0)
output = relay.Tuple([call_7317,])
output2 = relay.Tuple([call_7318,])
func_7323 = relay.Function([], output)
mod['func_7323'] = func_7323
mod = relay.transform.InferType()(mod)
output = func_7323()
func_7324 = relay.Function([], output)
mutated_mod['func_7324'] = func_7324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7365 = relay.var("var_7365", dtype = "uint16", shape = ())#candidate|7365|()|var|uint16
var_7366 = relay.var("var_7366", dtype = "uint16", shape = (6, 1, 10))#candidate|7366|(6, 1, 10)|var|uint16
bop_7367 = relay.bitwise_and(var_7365.astype('uint16'), var_7366.astype('uint16')) # shape=(6, 1, 10)
output = relay.Tuple([bop_7367,])
output2 = relay.Tuple([bop_7367,])
func_7370 = relay.Function([var_7365,var_7366,], output)
mod['func_7370'] = func_7370
mod = relay.transform.InferType()(mod)
mutated_mod['func_7370'] = func_7370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7370_call = mutated_mod.get_global_var('func_7370')
var_7372 = relay.var("var_7372", dtype = "uint16", shape = ())#candidate|7372|()|var|uint16
var_7373 = relay.var("var_7373", dtype = "uint16", shape = (6, 1, 10))#candidate|7373|(6, 1, 10)|var|uint16
call_7371 = func_7370_call(var_7372,var_7373,)
output = call_7371
func_7374 = relay.Function([var_7372,var_7373,], output)
mutated_mod['func_7374'] = func_7374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mod.get_global_var('func_5847')
func_5848_call = mutated_mod.get_global_var('func_5848')
call_7406 = relay.TupleGetItem(func_5847_call(), 4)
call_7407 = relay.TupleGetItem(func_5848_call(), 4)
func_6829_call = mod.get_global_var('func_6829')
func_6833_call = mutated_mod.get_global_var('func_6833')
var_7411 = relay.var("var_7411", dtype = "int16", shape = (650,))#candidate|7411|(650,)|var|int16
const_7412 = relay.const([-9,7,-10,-5,-3,3,-7,-2,7,10,-4,7,10,9,1,9,8,-7,9,5,-1,2,9,-6,7,-8,9,-7,9,2,6,1,7,4,2,-2,8,-10,7,5,4,-7,9,3,-9,-8,-8,3,-9,-3,-8,1,-8,-5,6,1,3,2,-1,10,10,7,10,-3,-8,-9,3,2,-2,-8,-7,8,-6,-2,5,-9,3,-5,7,-2,-4,1,3,-1,-8,-1,8,5,-2,-3,2,-4,-9,9,-6,-2,2,-10,-7,-7,-7,-10,-2,9,3,-10,5,9,2,-3,-1,-9,-10,-9,9,4,6,3,10,-1,5,9,5,5,7,8,-2,-10,-7,1,-5,-3,10,1,7,6,-3,-1,4,10,3,9,4,-10,-10,-6,-8,10,-3,10,2,2,-1,-6,1,6,3,-9,-7,-7,-10,4,1,5,-4,6,1,3,-2,-6,-6,-5,8,-5,3,-1,-4,10,-10,1,-2,-10,-4,-4,2,7,10,7,8,-4,4,3,-2,-3,-1,-4,1,5,-7,-10,-9,-8,-1,-7,-5,-9,6,-6,8,-1,-4,-2,-1,8,6,-8,7,3,9,6,-1,-4,6,7,9,-2,3,10,9,-3,-8,-9,6,-4,2,-10,4,1,-6,-3,-6,-10,9,4,-9,-4,-7,3,-6,8,-8,10,6,5,10,7,-5,7,-10,-1,-8,-6,-9,-6,-10,3,-5,-4,-6,3,7,4,-10,3,3,-8,10,-6,5,-5,8,-4,1,-6,-5,5,-10,3,1,9,-1,-5,-1,1,4,-2,4,-7,-4,-3,3,-2,-6,-2,-10,-1,8,-3,8,4,9,-4,1,-7,-4,3,-8,-10,-9,-3,5,-1,3,-1,-7,-1,-2,9,-6,-8,9,-10,8,5,-4,8,6,2,3,-8,-10,-7,4,6,4,-10,9,4,-10,7,-7,3,4,3,-1,-8,-10,3,-10,-1,7,9,-9,-3,2,-3,7,-2,-5,8,6,7,10,-7,3,7,9,-5,-1,-7,10,-1,10,-8,10,9,2,9,9,2,-6,-1,-5,3,-7,-8,-2,2,4,-7,5,-8,3,9,-5,-4,-10,-8,-3,2,3,7,-8,-9,8,-5,-1,2,-2,8,3,-10,8,9,-9,3,10,-7,-8,1,10,1,-8,-7,-5,8,6,-3,6,-10,-3,-6,1,-1,8,7,7,1,-2,-6,3,6,-3,-6,1,5,8,-6,5,-10,-9,-2,6,2,10,-6,3,4,3,9,7,9,-5,4,4,2,-2,2,8,5,-1,2,-5,1,6,3,4,-9,-10,-1,-9,-10,7,-9,5,4,-5,1,3,-9,2,4,-7,-4,-10,-1,-8,-1,2,-2,4,-4,-4,-10,-7,-10,4,-4,9,-5,-3,-9,7,7,-10,6,-7,-2,5,2,2,2,7,6,-6,-4,-7,-3,3,-4,1,4,2,10,9,-1,3,-8,3,-6,-4,9,5,6,2,-10,1,2,1,9,4,-4,7,-7,3,9,-6,-9,-2,9,-6,-8,5,8,-4,8,1,6,2,-6,9,-4,-8,7,9,-6,7,2,6,7,-9,7,-7,-7,8,-5,1,-5,-6,8,2,-2,10,10,6,-7,6,-4,-10,-1,-4,-7,-10,3,7,-1,7,-8,9,-6,-9,9,-8,-6,6,7,8,7,8,-3,-5,-4,8,-1,1,-10,-2,-6,6,9,1,-1,1,8,10,-4,4,7,-1,-8,8,5,-9,-10,-2,6,-6,4,-7,-7,-2,1,-1,9,-9,-6,-5,8,-9,10,9,7,-2,-3,5,-5,-10,-4,-5,5,-10,-10,2,-2,6,4,-7,-1,2,-8,-3,-6,9,6,-3,-7,-1,-1,-3,-6,4,-6,-1,-1,-10,-1,-2,-8,7,5,6,-4,-9,2,9,-2,-7,5,5,10,5,-10,8,-9,3,-4,8,-6,4,-10,7,5,10,10,4,-1,-1,7,1,4,-2,1,-8,-8,6,-3,-9,4,8,7,6,-2,-10,-8,-5,-3,3,-8,2,1,-3,10,5,-3,2,5,-7,6,-6,-6,-9,1,-2,2,6,-3,-10,-4,1,-9,7,-2,3,-2,4,-1,9,-6,-2,7,2,10,5,10,-1,-8,3,3,-7,4,-4,-4,-8,4,-9,-1,-2,-4,4,2,2,-6,-1,-10,5,-10,10,4,6,-9,8,7,-2,-7,-6,-4,3,3,10,-2,7,5,-10,5,-6,1,6,-6,-1,-7,-3,5,-4,10,2,-10,-6,6,4,3,8,6,4,-4,-6,-1,-5,-7,-7,-2,10,7,7,-3,-5,-2,2,8,-1,-10,7,-8,-2,-1,5,-7,5,3,7,4,-4,-6,-6,2,-1,4,6,2,8,-6,-7,8,-6,6,10,-7,8,-1,-2,-2,7,-10,-10,2,6,-3,-2,-6,3,-2,-6,7,4,8,3,8,-8,7,-3,-5,9,-3,-10,-9,-3,-6,-2,4,-3,2,4,9,10,-9,-5,3,4,-6,5,7,-6,8,6,-4,6,-8,-7,4,3,2,10,3,-9,10,4,-5,-2,10,5,-8,9,-3,3,6,1,-3,1,-8,-2,-6,8,9,-4,-8,1,2,-2,-10,2,-10,-2,-5,6,5,4,6,-3,-9,-2,-8,3,-6,-4,-1,-2,3,-3,-7,4,8,-3,7,1,-3,-5,9,10,4,-4,2,7,10,-4,10,10,5,4,9,9,8,2,1,-5,-6,3,2,3,-1,-10,-6,-1,-4,-2,2,-5,-7,-8,-9,-5,-1,-2,10,5,-2,-4,-5,-9,2,2,-5,4,3,10,6,-6,-6,10,-2,1,9,-4,2,1,-7,10,9,-3,10,4,-3,-3,-7,-6,7,6,-3,-10,4,-1,-4,10,-6,8,10,-2,-4,-9,7,1,3,1,8,2,-3,-10,7,2,4,-9,-4,7,-7,9,4,-9,-9,-4,10,-6,1,9,7,1,-3,-8,-3,-3,1,-4,3,-3,-4,9,3,8,-3,-3,-10,4,7,8,-6,10,-4,2,10,10,-2,-9,-4,10,5,8,10,-7,-3,-4,-8,6,-9,-9,-6,2,-10,5,-9,1,-10,7,10,-4,-1,-4,5,2,2,4,2,6,-10,-6,-5,10,6,5,3,3,-2,-4,-8,-2,8,8,5,-2,4,3,-4,7,10,10,-1,-7,9,-9,-8,7,10,-7,-9,1,6,-5,5,-2,1,-8,4,-5,-5,-10,-7,8,-10,4,6,5,7,4,-9,9,-10,-2,10,-7,-4,-9,-2,8,-4,3,8,-1,7,1,4,6,6,-6,5,-3,-10,10,3,-8,-2,8,9,9,7,-2,9,-4,-5,-3,-6,1,-1,10,1,-3,-8,-5,2,-3,-5,1,2,-10,8,9,-10,-1,-3,8,-6,-7,2,1,7,5,10,7,-1,-3,8,4,2,10,-6,-9,9,-7,9,9,6,9,9,-10,-3,-1,4,-1,-1,-4,-1,-9,1,3,6,10,-5,-7,-7,5,1,2,-1,6,6,-9,6,-7,-6,9,-2,3,7,10,-1,5,10,9,-10,3,8,-3,10,1,10,-9,8,2,3,9,-8,8,-2,9,-4,8,-4,6,8,-9,7,3,-9,-1,6,8,8,1,-3,-2,3,-10,-10,9,4,-8,-8,-8,-7,-1,3,-8,5,1,-10,-4,-2,7,1,-9,8,9,2,4,8,-4,-5,2,-2,8,5,-4,-6,-10,-9,-1,-8,-2,8,10,1,9,-4,6,5,7,-5,10,2,-8,8,-9,-2,7,-6,7,10,-5,-8,-10,6,4,10,5,-1,4,-4,6,-3,7,-1,-1,2,-3,9,-3,3,-10,-1,-5,-10,4,4,-2,-4,-10,-5,3,-7,6,-4,-2,-8,1,7,-4,7,-1,-9,-9,1,-7,10,-4,8], dtype = "uint64")#candidate|7412|(1470,)|const|uint64
call_7410 = relay.TupleGetItem(func_6829_call(relay.reshape(var_7411.astype('int16'), [650,]), relay.reshape(const_7412.astype('uint64'), [98, 15]), ), 4)
call_7413 = relay.TupleGetItem(func_6833_call(relay.reshape(var_7411.astype('int16'), [650,]), relay.reshape(const_7412.astype('uint64'), [98, 15]), ), 4)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_7418 = relay.TupleGetItem(func_4103_call(), 1)
call_7419 = relay.TupleGetItem(func_4105_call(), 1)
func_4004_call = mod.get_global_var('func_4004')
func_4007_call = mutated_mod.get_global_var('func_4007')
var_7442 = relay.var("var_7442", dtype = "uint16", shape = (720,))#candidate|7442|(720,)|var|uint16
call_7441 = relay.TupleGetItem(func_4004_call(relay.reshape(var_7442.astype('uint16'), [360, 2])), 0)
call_7443 = relay.TupleGetItem(func_4007_call(relay.reshape(var_7442.astype('uint16'), [360, 2])), 0)
func_6326_call = mod.get_global_var('func_6326')
func_6328_call = mutated_mod.get_global_var('func_6328')
call_7446 = relay.TupleGetItem(func_6326_call(relay.reshape(var_7411.astype('int16'), [650,])), 4)
call_7447 = relay.TupleGetItem(func_6328_call(relay.reshape(var_7411.astype('int16'), [650,])), 4)
output = relay.Tuple([call_7406,call_7410,var_7411,const_7412,call_7418,call_7441,var_7442,call_7446,])
output2 = relay.Tuple([call_7407,call_7413,var_7411,const_7412,call_7419,call_7443,var_7442,call_7447,])
func_7449 = relay.Function([var_7411,var_7442,], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
mutated_mod['func_7449'] = func_7449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mutated_mod.get_global_var('func_7449')
var_7451 = relay.var("var_7451", dtype = "int16", shape = (650,))#candidate|7451|(650,)|var|int16
var_7452 = relay.var("var_7452", dtype = "uint16", shape = (720,))#candidate|7452|(720,)|var|uint16
call_7450 = func_7449_call(var_7451,var_7452,)
output = call_7450
func_7453 = relay.Function([var_7451,var_7452,], output)
mutated_mod['func_7453'] = func_7453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_7609 = func_5918_call()
call_7610 = func_5918_call()
func_3723_call = mod.get_global_var('func_3723')
func_3727_call = mutated_mod.get_global_var('func_3727')
const_7618 = relay.const([[1,-4,-7,10,8,6,-1,-7,9,5,-9,-8,-5,2,10,10,9,2,-7,-4,10,-4,-6,-9,5,8,10,-8,8,-1,-5,-10,8,-2,4,-1,4,9,-6,-7,-4,-7,-1,-7,7,9,-2,-8,-1,-9,-8,3],[-8,6,-1,-7,7,7,-10,-1,6,-9,-9,3,1,6,4,3,-10,-8,-9,-7,-10,8,-1,-5,9,7,2,7,-2,1,2,8,3,4,2,2,-6,-9,9,5,-7,5,4,1,5,-2,9,9,-9,-4,4,10],[-6,8,3,5,-6,1,10,-6,7,-2,-1,6,5,8,8,1,8,-1,-3,-5,5,-8,8,-2,1,9,4,-1,-7,-8,8,-1,9,9,8,-10,10,10,10,-4,5,-5,1,7,7,-5,5,1,-5,5,-6,6],[2,5,7,5,3,2,7,3,5,9,1,-5,2,-2,6,8,6,-10,-3,7,-8,-1,8,-9,2,-4,-9,1,-10,2,3,-4,3,3,10,3,9,-2,-8,10,8,2,5,-9,-8,-1,-2,1,-8,5,-4,-5]], dtype = "uint8")#candidate|7618|(4, 52)|const|uint8
call_7617 = relay.TupleGetItem(func_3723_call(relay.reshape(const_7618.astype('uint8'), [8, 2, 13]), relay.reshape(const_7618.astype('uint8'), [8, 2, 13]), ), 0)
call_7619 = relay.TupleGetItem(func_3727_call(relay.reshape(const_7618.astype('uint8'), [8, 2, 13]), relay.reshape(const_7618.astype('uint8'), [8, 2, 13]), ), 0)
output = relay.Tuple([call_7609,call_7617,const_7618,])
output2 = relay.Tuple([call_7610,call_7619,const_7618,])
func_7633 = relay.Function([], output)
mod['func_7633'] = func_7633
mod = relay.transform.InferType()(mod)
output = func_7633()
func_7634 = relay.Function([], output)
mutated_mod['func_7634'] = func_7634
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7659 = relay.const([[[-8,7,-9,2,-1,-8,-8,-2,-1],[-2,2,8,10,-7,9,-7,9,8],[-5,9,-1,-3,-5,4,3,9,-9],[-3,10,7,4,-8,-8,-10,-7,10],[-5,9,-9,-7,8,-2,-5,-7,5],[-6,-10,9,-1,2,9,7,5,5],[8,8,2,-4,-5,3,5,-8,-2],[-2,7,2,-5,9,5,-8,7,-1],[-8,-5,-6,-2,8,7,-8,-6,4],[-10,-6,-3,-2,-4,-8,8,-9,-10],[3,-7,3,-4,4,5,-7,9,5]],[[-4,4,8,4,8,2,10,10,-8],[-1,4,-4,3,8,-5,-3,-10,9],[-9,-5,-8,-4,2,-6,-7,-7,-2],[3,-10,-7,-2,6,-7,3,9,2],[-4,-8,2,-1,10,-1,-6,-8,-3],[-3,-5,-10,-5,-10,-10,-6,1,-3],[5,-2,-1,-9,-7,-3,-10,-7,9],[-9,2,-1,-2,-9,10,-5,-7,1],[-2,-4,7,-1,-6,-4,-8,1,4],[2,-10,10,4,-4,4,8,-8,-5],[10,2,4,2,10,-2,5,2,-5]],[[-5,8,10,7,-8,-10,7,-6,-5],[8,-4,1,5,-10,-1,-9,-5,-6],[-9,-5,-5,9,-5,5,-7,9,1],[7,-4,-3,5,-3,-9,7,1,4],[-7,2,-9,-3,-9,-10,-10,8,-6],[-1,5,1,-3,3,-8,-2,1,8],[10,-6,2,1,5,-8,-2,-9,-4],[-2,-9,-3,-3,4,8,4,3,-6],[8,-7,-7,-1,5,-6,2,-10,-3],[10,7,-10,5,-4,3,-3,7,1],[6,-3,-6,2,6,-9,-4,-7,-4]],[[-7,-10,-9,-10,4,-4,-9,1,-3],[-10,-4,-8,9,1,-4,-4,6,-1],[9,-9,7,9,4,-8,6,-2,6],[3,-4,1,1,-7,1,4,-9,2],[4,10,5,5,-7,2,-10,9,1],[-10,-7,-1,-6,8,-8,9,-6,-2],[-10,4,7,-9,3,9,-9,-6,7],[-5,-4,10,7,-8,10,-6,8,-6],[-6,-3,4,-10,-2,-9,8,4,1],[6,3,3,-3,-4,8,9,6,2],[-4,4,3,-5,-7,2,4,6,-3]],[[3,-9,-10,-8,1,-9,-5,-7,6],[-2,8,-3,7,-2,5,3,3,4],[9,10,-7,2,1,2,-9,10,4],[-10,1,8,-9,-3,-3,4,2,-3],[-3,2,6,1,8,3,-5,5,-6],[1,3,8,4,9,5,4,9,-2],[-1,10,-4,-1,7,4,-6,1,-10],[5,-10,-9,-6,-5,-8,10,9,9],[3,4,-4,5,5,1,-4,9,-1],[-1,1,4,2,-1,5,6,-9,-8],[-9,5,1,-9,-2,-1,9,2,9]],[[-1,9,1,3,-2,6,-7,6,-10],[10,4,-10,-7,-8,-8,4,-7,3],[-8,5,-1,1,7,4,4,7,-5],[4,3,-10,8,-2,6,-5,4,-6],[1,4,5,-5,1,-9,-8,-10,-5],[-4,4,-10,-1,-7,-2,-3,10,-3],[7,-8,-2,7,-9,1,-9,9,-10],[6,-1,-8,7,10,-1,6,2,6],[-10,6,-10,-5,1,-4,2,-4,-4],[10,6,-3,-2,2,-1,-10,1,-2],[2,-2,3,5,6,10,4,3,9]],[[-6,5,9,-6,8,-6,8,10,-2],[-6,8,-10,3,-10,3,-4,-2,-9],[-4,-9,-2,-5,-4,10,7,7,-9],[-6,1,9,-5,5,2,8,8,-10],[-4,-1,-9,-6,-9,4,8,-8,-7],[-2,-2,10,2,-9,7,9,2,2],[2,-8,9,-9,-3,5,-8,2,6],[1,2,-8,-9,2,8,-5,-2,-3],[6,-7,3,-6,-8,8,-2,4,10],[5,-1,-1,1,-9,-8,1,6,-2],[9,-9,-8,-5,-9,4,-10,-7,6]],[[-10,-5,-9,3,6,9,10,5,6],[-8,4,9,7,7,-2,3,9,1],[2,9,3,5,5,-5,-3,-2,-10],[-5,2,-2,-4,-4,-2,2,-9,1],[8,-7,6,-5,-5,-6,-8,4,4],[4,-1,-2,5,7,2,8,-6,4],[-7,10,6,8,10,5,8,-3,-8],[-1,6,9,-10,9,-3,5,-2,3],[5,-1,7,-9,5,-3,-5,-10,-4],[3,5,7,5,-10,-9,2,-6,8],[-10,8,9,2,6,6,-10,-4,-1]],[[3,-3,2,5,7,-8,7,-2,-7],[6,6,1,2,3,6,-6,-9,-3],[-4,-6,2,-8,3,-5,2,2,-3],[-1,6,-2,-7,3,-9,6,7,-6],[5,-9,5,-1,-5,-4,7,5,9],[-8,-8,-2,-9,2,-10,4,-2,8],[-7,4,-3,10,6,-5,-5,-9,4],[-9,10,9,-2,9,-6,-3,9,2],[-8,4,-8,-6,2,5,7,-8,-7],[-10,10,5,10,6,5,-1,-10,4],[-4,2,-8,-1,-3,3,-6,1,6]],[[-1,-1,-4,-4,-9,10,6,-6,9],[5,8,-10,8,-7,3,4,-10,10],[-3,-8,1,-8,1,7,-7,-1,10],[9,9,-8,9,-6,-7,2,-1,4],[6,10,7,7,-10,10,-2,-10,3],[3,10,-1,-6,-8,-1,8,4,7],[5,-5,4,5,-4,-7,2,1,1],[-8,-4,3,-9,-5,9,6,7,9],[9,-7,10,2,-8,-6,4,6,-10],[-3,10,-4,9,-10,-5,6,-4,9],[-9,-8,1,-5,-9,2,10,10,1]],[[-6,8,-7,-9,-7,7,7,-4,-2],[10,-9,-8,10,-6,7,-6,8,-3],[5,7,4,-7,-10,7,-5,9,8],[6,-7,-8,-2,9,8,-4,-3,4],[-6,8,1,10,-4,3,6,2,6],[10,-6,-7,-1,7,3,-9,4,5],[-3,-3,-3,1,-10,5,-4,-1,3],[3,8,-6,-3,1,2,-3,2,4],[-6,7,1,-1,8,-5,9,-7,-10],[-1,-9,8,-8,-8,9,-8,-8,-1],[10,4,-4,-10,-9,-4,-9,-1,5]]], dtype = "int32")#candidate|7659|(11, 11, 9)|const|int32
var_7660 = relay.var("var_7660", dtype = "int32", shape = (11, 11, 9))#candidate|7660|(11, 11, 9)|var|int32
bop_7661 = relay.right_shift(const_7659.astype('int32'), relay.reshape(var_7660.astype('int32'), relay.shape_of(const_7659))) # shape=(11, 11, 9)
output = bop_7661
output2 = bop_7661
func_7669 = relay.Function([var_7660,], output)
mod['func_7669'] = func_7669
mod = relay.transform.InferType()(mod)
var_7670 = relay.var("var_7670", dtype = "int32", shape = (11, 11, 9))#candidate|7670|(11, 11, 9)|var|int32
output = func_7669(var_7670)
func_7671 = relay.Function([var_7670], output)
mutated_mod['func_7671'] = func_7671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mod.get_global_var('func_4984')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_7698 = relay.TupleGetItem(func_4984_call(), 0)
call_7699 = relay.TupleGetItem(func_4986_call(), 0)
output = relay.Tuple([call_7698,])
output2 = relay.Tuple([call_7699,])
func_7738 = relay.Function([], output)
mod['func_7738'] = func_7738
mod = relay.transform.InferType()(mod)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7738_call = mutated_mod.get_global_var('func_7738')
call_7739 = func_7738_call()
output = call_7739
func_7740 = relay.Function([], output)
mutated_mod['func_7740'] = func_7740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mod.get_global_var('func_6873')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_7799 = func_6873_call()
call_7800 = func_6873_call()
func_4791_call = mod.get_global_var('func_4791')
func_4792_call = mutated_mod.get_global_var('func_4792')
call_7834 = relay.TupleGetItem(func_4791_call(), 1)
call_7835 = relay.TupleGetItem(func_4792_call(), 1)
output = relay.Tuple([call_7799,call_7834,])
output2 = relay.Tuple([call_7800,call_7835,])
func_7864 = relay.Function([], output)
mod['func_7864'] = func_7864
mod = relay.transform.InferType()(mod)
output = func_7864()
func_7865 = relay.Function([], output)
mutated_mod['func_7865'] = func_7865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7892 = relay.var("var_7892", dtype = "float64", shape = (3, 8, 10))#candidate|7892|(3, 8, 10)|var|float64
uop_7893 = relay.log2(var_7892.astype('float64')) # shape=(3, 8, 10)
var_7899 = relay.var("var_7899", dtype = "float64", shape = (3, 8, 10))#candidate|7899|(3, 8, 10)|var|float64
bop_7900 = relay.multiply(uop_7893.astype('uint32'), relay.reshape(var_7899.astype('uint32'), relay.shape_of(uop_7893))) # shape=(3, 8, 10)
func_6229_call = mod.get_global_var('func_6229')
func_6231_call = mutated_mod.get_global_var('func_6231')
call_7907 = relay.TupleGetItem(func_6229_call(), 0)
call_7908 = relay.TupleGetItem(func_6231_call(), 0)
output = relay.Tuple([bop_7900,call_7907,])
output2 = relay.Tuple([bop_7900,call_7908,])
func_7922 = relay.Function([var_7892,var_7899,], output)
mod['func_7922'] = func_7922
mod = relay.transform.InferType()(mod)
var_7923 = relay.var("var_7923", dtype = "float64", shape = (3, 8, 10))#candidate|7923|(3, 8, 10)|var|float64
var_7924 = relay.var("var_7924", dtype = "float64", shape = (3, 8, 10))#candidate|7924|(3, 8, 10)|var|float64
output = func_7922(var_7923,var_7924,)
func_7925 = relay.Function([var_7923,var_7924,], output)
mutated_mod['func_7925'] = func_7925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7969 = relay.var("var_7969", dtype = "uint32", shape = (10, 6, 11))#candidate|7969|(10, 6, 11)|var|uint32
var_7970 = relay.var("var_7970", dtype = "uint32", shape = (10, 6, 11))#candidate|7970|(10, 6, 11)|var|uint32
bop_7971 = relay.left_shift(var_7969.astype('uint32'), relay.reshape(var_7970.astype('uint32'), relay.shape_of(var_7969))) # shape=(10, 6, 11)
output = bop_7971
output2 = bop_7971
func_7974 = relay.Function([var_7969,var_7970,], output)
mod['func_7974'] = func_7974
mod = relay.transform.InferType()(mod)
mutated_mod['func_7974'] = func_7974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7974_call = mutated_mod.get_global_var('func_7974')
var_7976 = relay.var("var_7976", dtype = "uint32", shape = (10, 6, 11))#candidate|7976|(10, 6, 11)|var|uint32
var_7977 = relay.var("var_7977", dtype = "uint32", shape = (10, 6, 11))#candidate|7977|(10, 6, 11)|var|uint32
call_7975 = func_7974_call(var_7976,var_7977,)
output = call_7975
func_7978 = relay.Function([var_7976,var_7977,], output)
mutated_mod['func_7978'] = func_7978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_7982 = func_5918_call()
call_7983 = func_5918_call()
output = relay.Tuple([call_7982,])
output2 = relay.Tuple([call_7983,])
func_7984 = relay.Function([], output)
mod['func_7984'] = func_7984
mod = relay.transform.InferType()(mod)
output = func_7984()
func_7985 = relay.Function([], output)
mutated_mod['func_7985'] = func_7985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_8031 = func_3045_call()
call_8032 = func_3045_call()
func_3723_call = mod.get_global_var('func_3723')
func_3727_call = mutated_mod.get_global_var('func_3727')
const_8039 = relay.const([-5,6,3,-3,-5,-5,1,5,6,-10,-9,-8,10,-6,-3,6,8,-8,-3,2,-3,-3,6,-10,7,-1,-9,-5,-7,1,4,10,1,-4,10,-2,-5,-9,4,3,1,10,-1,1,5,-9,-3,-2,-8,9,-2,-3,8,8,-3,-3,-3,6,-7,-3,1,3,3,-8,-10,1,10,1,-9,-9,-9,7,-5,-9,2,-7,6,-6,-5,-3,3,-9,9,-10,10,-1,2,-3,2,3,4,6,-2,-10,-9,2,-7,5,-2,6,-6,2,-6,-9,9,-2,-2,2,1,10,4,-1,4,9,-5,-1,2,9,10,-4,-9,-1,-5,6,-6,-5,10,-5,6,-4,9,-1,9,-6,-7,-8,-9,9,4,9,4,2,1,-10,-1,7,-8,-8,-8,5,-9,6,-10,1,2,3,5,2,5,5,6,8,10,-10,2,-6,8,8,-6,-1,-2,-6,4,-5,10,6,1,10,10,10,7,5,-7,-3,-6,1,1,-7,5,-5,-3,3,-5,-5,-4,10,-10,-7,10,10,-4,-5,2,1,5,4,-7,2], dtype = "uint8")#candidate|8039|(208,)|const|uint8
call_8038 = relay.TupleGetItem(func_3723_call(relay.reshape(const_8039.astype('uint8'), [8, 2, 13]), relay.reshape(const_8039.astype('uint8'), [8, 2, 13]), ), 0)
call_8040 = relay.TupleGetItem(func_3727_call(relay.reshape(const_8039.astype('uint8'), [8, 2, 13]), relay.reshape(const_8039.astype('uint8'), [8, 2, 13]), ), 0)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_8064 = func_3045_call()
call_8065 = func_3045_call()
bop_8068 = relay.floor_divide(const_8039.astype('float32'), relay.reshape(call_8038.astype('float32'), relay.shape_of(const_8039))) # shape=(208,)
bop_8071 = relay.floor_divide(const_8039.astype('float32'), relay.reshape(call_8040.astype('float32'), relay.shape_of(const_8039))) # shape=(208,)
output = relay.Tuple([call_8031,call_8064,bop_8068,])
output2 = relay.Tuple([call_8032,call_8065,bop_8071,])
func_8077 = relay.Function([], output)
mod['func_8077'] = func_8077
mod = relay.transform.InferType()(mod)
mutated_mod['func_8077'] = func_8077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8077_call = mutated_mod.get_global_var('func_8077')
call_8078 = func_8077_call()
output = call_8078
func_8079 = relay.Function([], output)
mutated_mod['func_8079'] = func_8079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3045_call = mod.get_global_var('func_3045')
func_3047_call = mutated_mod.get_global_var('func_3047')
call_8143 = func_3045_call()
call_8144 = func_3045_call()
output = call_8143
output2 = call_8144
func_8148 = relay.Function([], output)
mod['func_8148'] = func_8148
mod = relay.transform.InferType()(mod)
mutated_mod['func_8148'] = func_8148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mutated_mod.get_global_var('func_8148')
call_8149 = func_8148_call()
output = call_8149
func_8150 = relay.Function([], output)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5615_call = mod.get_global_var('func_5615')
func_5617_call = mutated_mod.get_global_var('func_5617')
call_8158 = relay.TupleGetItem(func_5615_call(), 0)
call_8159 = relay.TupleGetItem(func_5617_call(), 0)
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_8168 = relay.TupleGetItem(func_5175_call(), 1)
call_8169 = relay.TupleGetItem(func_5176_call(), 1)
func_4743_call = mod.get_global_var('func_4743')
func_4746_call = mutated_mod.get_global_var('func_4746')
const_8175 = relay.const([2,-7,-8,9,4,-9,-6,3,-6,2,1,-7,7,2,6,10,-1,-2,-8,6,-1,-10,2,1,-8,-5,-4,5,10,9,-5,1,-8,6,5,7,9,-5,3,-8,-8,-8,-7,-4,-4,-2,-4,4,7,-7,4,-8,-3,5,-8,-7,-7,-1,-9,1,9,-10,-6,4,-6,4,7,4,-7,-8,-5,-3,9,9,10,9,3,10,-6,3,-7,2,10,-6,9,4,-6,-8,-3,-2,7,10,-3,-7,7,10,6,-8,10,-5,-5,-2,-8,-7,-5,5,4,-2,-8,-7,1,-8,9,-5,-7,7,1,-6,-10,-1,-4,9,-2,5,9,4,9,-9,8,-9,-4,1,-8,6,10,4,-6,3,5,-9,-2,-4,-6,3,-7,-9,1,-8,-6,8,6,3,-9,1,6,6,-4,1,5,4,-6,-5,-4,7,-1,-8,-1,8,-7,1,10,3,10,-4,8,9,2,5,10,5,-9,6,-4,-9,5,4,7,-9,-1,-6,-2,7,10,7,-5,9,5,-5,2,-10,4,-2,3,-10,4,-7,10,8,7,-9,-10,-8,6,6,7,-4,-1,-10,8,9,5,-10,-10,-4,-6,9,1,-2,1,6,-5,-7,-9,-1,8,-10,-7,-7,-9,-6,-3,-2,4,-3,4,-1,2,-5,6,7,-7,-6,-5,1,-1,6,4,10,4,3,5,-4,5,-5,5,-4,8,7,2,-5,7,-8,-1,-10,-4,-10,-8,-5,6,-3,-1,-5,6,2,2,-2,-1,1,-3,-7,-6,3,3,-7,7,4,-7,-8,-3,-5,-8,-7,1,10,-10,8,-4,-10,-10,-10,8,-8,-4,-2,-9,-3,3,-5,-7,8,-4,3,-9,6,1,8,-9,6,3,10,4,10,-3,-4,1,-8,-6,4,-6,-5,-6,8,-9,7,-4,-7,-10,6,1,-4,9,9,2,3,2,9,-2,3,3,7,-9,-6,9,-2,1,5,7,7,5,-1,7,5,7,3,10,-1,-2,7,8,-4,-7,-9,10,6,-6,-2,-5,4,-9,-5,-5,-7,3,10,5,-10,-2,-7,-7,-8,7,5,9,7,-6,-6,-9,10,8,5,4,6,-6,-8,3,5,-6,-4,-2,2,5,9,-10,8,-10,1,-8,-2,9,7,-6,4,7,-8,8,6,-7,-9,-5,4,8,9,-2,2,1,-3,-6,-8,4,-1,-7,8,-2,-10,2,2,1,9,2,-5,3,-9,-5,-1,4,-3,-8,4,6,9,-10,-1,4,-4,-1,9,-7,4,-9,10,8,-6,-2,8,-4,9,8,5,-8,-10,8,-7,-10,-8,8,2,-9,4,-9,-3,-9,-9,10,1,-4,9,10,8,8,9,-4,-2,1,6,8,5,2,6,-7,-2,-8,5,-8,10,-1,-10,3,-9,1,4,-7,-9,-2,-10,4,2,-4,1,-1,6,3,-8,1,1,-3,1,6,8,5,-7,-2,10,-5,6,4,-10,9,1,3,9,-9,-7,-10,-10,-3,-1,-5,10,4,6,7,4,1,-3,-9,2,5,-2,-4,-10,-1,-3,6,8,9,-7,-9,-2,10,9,-10,-9,10,-1,-6,-5,-4,5,2,-9,7,-7,8,-9,7,-8,-8,-3,8,7,7,-3,10,10,-1,-3,4,7,1,8,3,-4,-3,-3,3,5,10,8,5,-2,-6,5,6,9,7,5,5,2,8,-9,3,-10,9,5,-7,-10,-3,-10,6,-8,9,2,-5,-2,-10,-6,2,-8,-6,-6,-9,6,1,10,-7,10,-4,-2,9,-3,-2,3,-7,-8,5,7,-10,7,9,9,-6,4,3,10,-7,-10,4,-6,6,5,7,7,-5,1,4,1,-10,1,-8,-5,3,-5,-9,-7,6,8,4,-3,4,4,-7,-7,10,10,8,-5,1,6,-3,-6,-7,-4,-4,1,-2,-5,7,-8,9,-5,3,5,-9,5,6,-3,-8,3,4,9,6,-7,-5,2,-2,8,-8,-1,-4,1,6,2,-8,7,8,10,-1,10,1,-7,-2,10,7,-9,6,2,3,-7,8,3,-1,3,1,5,7,6,-8,-9,6,6,7,5,2,1,7,10,-8,-1,6,2,9,-5,4,1,-2,-3,5,-1,3,8,7,-9,1,-3,-5,10,-4,-2,9,-8,10,-3,1,-3,3,4,9,4,-5,-7,-5,6,-2,-6,10,3,7,-7,10,-3,-1,-5,-2,10,-8,-8,6,10,2,10,-2,-2,-10,7,8,3,9,-10,6,6,9,-7,-8,4,7,-2,8,7,-4,8,-4,-1,-10,2,3,2,-4,8,7,9,-5,-2,4,10,2,10,-10,1,-2,-6,2,8,6,-5,-5,7,-7,2,8,9,-2,10,-2,10,3,-10,3,-9,3,1,10,9,-9,-9,4,9,-1,-6,9,6,1,4,-3,2,-9,-3,3,8,-2,2,-7,10,9,10,3,9,1,7,-8,-9,3,8,5,-1,3,2,4,7,-9,3,-2,-5,6,8,-2,1,-10,-3,-4,-3,-6,8,-1,5,-1,-4,-1,-5,-3,-10,-9,-2,9,5,10,2,-5,7,-5,-7,-3,7,-10,-10,3,-1,1,3,-9,-5,8,-8,-8,-10,9,7,-8,5,-7,2,7,4,7,9,-8,8,4,1,-8,6,8,-9,-10,-6,-1,8,-4,-5,-4,10,1,-9,1,-8,1,-8,7,-7,4,-5,6,1,10,4,10,-7,9,5,-6,-10,-9,7,-8,5,2,4,-5,-9,-3,-8,-6,-4,-9,-4,4,-1,4,8,-4,3,3,3,4,-1,-4,10,4,-2,4,9,4,2,-9,10,-5,7,-10,-6,-2,-3,-7,-4,-8,-5,6,4,-3,-6,9,4,-10,-2,3,7,4,-10,5,-4,-2,-9,1,8,10,-6,1,2,3,2,-9,-9,-10,-8,5,-10,-8,-5,2,5,-7,-10,-1,10,4,9,-2,10,9,9,-7,1,7,6,-1,-1,2,-9,-4,4,-2,3,1,-5,1,-4,-2,6,5,1,5,-6,-5,-7,-5,-7,5,-8,5,-9,-9,7,-2,-3,8,-2,-7,-9,5,-1,8,5,10,-4,-1,1,5,-9,2,-5,7,-1,-8,-7,6,-3,-8,2,4,-10,8,-2,1,2,-7,-2,-4,9,5,5,7,-10,8,2,-7,-6,-6,-7,-2,-8,6,3,7,4,-1,-5,-8,-1,6,-8,-8,7,-3,-10,-3,-5,-2,-1,-10,9,5,-10,-9,-9,6,8,-2,-7,9,-9,8,3,2,-7,2,-6,1,10,-8,-7,-8,8,9,-4,-5,-5,9,-4,-4,5,-8,3,-6,-3,5,9,-4,3,4,-6,-2,-5,8,2,-10,-10,-8,10,-7,10,-5,-5,-8,4,8,5,8,-1,-7,10,1,-8,2,-7,-2,-9,8,6,2,9,10,10,-4,-6,-5,10,6,-9,7,5,4,4,8,9,-10,10,4,9,10,-1,-4,4,-1,10,10,-7,9,-6,3,-9,-4,4,6,6,-1,-2,1,6,-9,-2,-2,-3,10,2,-3,-10,-7,-4,10,-10,10,9,-7,5,-1,-7,4,8,9,1,10,-10,-6,1,-6,-8,-10,-10,-1,-5,2,7,-1,-3,-4,2,-6,10,-7,-7,-1,-3,-1,10,-8,6,6,-5,10,-7,2,10,-2,-9,3,-5,-2,-5,-1,-7,-1,-8,-10,-6,-1,-7,-2,1,1,-4,8,9,8,-5,1,8,6,-1,-9,7,1,2,-4,7,5,-10,-3,-2,-4,-9,-8,-9,1,3,8,-1,-5,-2,8,-4,3,5,-4,-6,-2,3,10,-6,-3,-2,-8,-8,7,-2,9,7,4,7,-9,-6,6,2,-3,-8,5,7,-4,-6,5,6,-8,8,-7,9,10,8,7,5,-6,8,4,5], dtype = "uint64")#candidate|8175|(1470,)|const|uint64
var_8176 = relay.var("var_8176", dtype = "float64", shape = (77, 10))#candidate|8176|(77, 10)|var|float64
call_8174 = relay.TupleGetItem(func_4743_call(relay.reshape(const_8175.astype('uint64'), [490, 3]), relay.reshape(var_8176.astype('float64'), [7, 110]), ), 2)
call_8177 = relay.TupleGetItem(func_4746_call(relay.reshape(const_8175.astype('uint64'), [490, 3]), relay.reshape(var_8176.astype('float64'), [7, 110]), ), 2)
var_8179 = relay.var("var_8179", dtype = "float64", shape = (77, 10))#candidate|8179|(77, 10)|var|float64
bop_8180 = relay.bitwise_and(var_8176.astype('uint16'), relay.reshape(var_8179.astype('uint16'), relay.shape_of(var_8176))) # shape=(77, 10)
output = relay.Tuple([call_8158,call_8168,call_8174,const_8175,bop_8180,])
output2 = relay.Tuple([call_8159,call_8169,call_8177,const_8175,bop_8180,])
func_8183 = relay.Function([var_8176,var_8179,], output)
mod['func_8183'] = func_8183
mod = relay.transform.InferType()(mod)
var_8184 = relay.var("var_8184", dtype = "float64", shape = (77, 10))#candidate|8184|(77, 10)|var|float64
var_8185 = relay.var("var_8185", dtype = "float64", shape = (77, 10))#candidate|8185|(77, 10)|var|float64
output = func_8183(var_8184,var_8185,)
func_8186 = relay.Function([var_8184,var_8185,], output)
mutated_mod['func_8186'] = func_8186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mod.get_global_var('func_8148')
func_8150_call = mutated_mod.get_global_var('func_8150')
call_8215 = func_8148_call()
call_8216 = func_8148_call()
output = call_8215
output2 = call_8216
func_8219 = relay.Function([], output)
mod['func_8219'] = func_8219
mod = relay.transform.InferType()(mod)
mutated_mod['func_8219'] = func_8219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8219_call = mutated_mod.get_global_var('func_8219')
call_8220 = func_8219_call()
output = call_8220
func_8221 = relay.Function([], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6125_call = mod.get_global_var('func_6125')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_8275 = relay.TupleGetItem(func_6125_call(), 0)
call_8276 = relay.TupleGetItem(func_6126_call(), 0)
output = call_8275
output2 = call_8276
func_8299 = relay.Function([], output)
mod['func_8299'] = func_8299
mod = relay.transform.InferType()(mod)
output = func_8299()
func_8300 = relay.Function([], output)
mutated_mod['func_8300'] = func_8300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6942_call = mod.get_global_var('func_6942')
func_6944_call = mutated_mod.get_global_var('func_6944')
call_8340 = func_6942_call()
call_8341 = func_6942_call()
output = call_8340
output2 = call_8341
func_8353 = relay.Function([], output)
mod['func_8353'] = func_8353
mod = relay.transform.InferType()(mod)
output = func_8353()
func_8354 = relay.Function([], output)
mutated_mod['func_8354'] = func_8354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7864_call = mod.get_global_var('func_7864')
func_7865_call = mutated_mod.get_global_var('func_7865')
call_8403 = relay.TupleGetItem(func_7864_call(), 0)
call_8404 = relay.TupleGetItem(func_7865_call(), 0)
func_6514_call = mod.get_global_var('func_6514')
func_6516_call = mutated_mod.get_global_var('func_6516')
var_8408 = relay.var("var_8408", dtype = "uint16", shape = (720,))#candidate|8408|(720,)|var|uint16
call_8407 = relay.TupleGetItem(func_6514_call(relay.reshape(var_8408.astype('uint16'), [60, 12])), 1)
call_8409 = relay.TupleGetItem(func_6516_call(relay.reshape(var_8408.astype('uint16'), [60, 12])), 1)
output = relay.Tuple([call_8403,call_8407,var_8408,])
output2 = relay.Tuple([call_8404,call_8409,var_8408,])
func_8412 = relay.Function([var_8408,], output)
mod['func_8412'] = func_8412
mod = relay.transform.InferType()(mod)
var_8413 = relay.var("var_8413", dtype = "uint16", shape = (720,))#candidate|8413|(720,)|var|uint16
output = func_8412(var_8413)
func_8414 = relay.Function([var_8413], output)
mutated_mod['func_8414'] = func_8414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6620_call = mod.get_global_var('func_6620')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_8557 = relay.TupleGetItem(func_6620_call(), 0)
call_8558 = relay.TupleGetItem(func_6621_call(), 0)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_8561 = relay.TupleGetItem(func_3240_call(), 0)
call_8562 = relay.TupleGetItem(func_3242_call(), 0)
func_1946_call = mod.get_global_var('func_1946')
func_1949_call = mutated_mod.get_global_var('func_1949')
var_8569 = relay.var("var_8569", dtype = "int32", shape = (1584,))#candidate|8569|(1584,)|var|int32
call_8568 = relay.TupleGetItem(func_1946_call(relay.reshape(var_8569.astype('int32'), [9, 16, 11])), 0)
call_8570 = relay.TupleGetItem(func_1949_call(relay.reshape(var_8569.astype('int32'), [9, 16, 11])), 0)
output = relay.Tuple([call_8557,call_8561,call_8568,var_8569,])
output2 = relay.Tuple([call_8558,call_8562,call_8570,var_8569,])
func_8583 = relay.Function([var_8569,], output)
mod['func_8583'] = func_8583
mod = relay.transform.InferType()(mod)
var_8584 = relay.var("var_8584", dtype = "int32", shape = (1584,))#candidate|8584|(1584,)|var|int32
output = func_8583(var_8584)
func_8585 = relay.Function([var_8584], output)
mutated_mod['func_8585'] = func_8585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_8656 = func_2963_call()
call_8657 = func_2963_call()
func_5093_call = mod.get_global_var('func_5093')
func_5095_call = mutated_mod.get_global_var('func_5095')
var_8659 = relay.var("var_8659", dtype = "float64", shape = (770,))#candidate|8659|(770,)|var|float64
call_8658 = relay.TupleGetItem(func_5093_call(relay.reshape(var_8659.astype('float64'), [770, 1])), 0)
call_8660 = relay.TupleGetItem(func_5095_call(relay.reshape(var_8659.astype('float64'), [770, 1])), 0)
output = relay.Tuple([call_8656,call_8658,var_8659,])
output2 = relay.Tuple([call_8657,call_8660,var_8659,])
func_8669 = relay.Function([var_8659,], output)
mod['func_8669'] = func_8669
mod = relay.transform.InferType()(mod)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8670 = relay.var("var_8670", dtype = "float64", shape = (770,))#candidate|8670|(770,)|var|float64
func_8669_call = mutated_mod.get_global_var('func_8669')
call_8671 = func_8669_call(var_8670)
output = call_8671
func_8672 = relay.Function([var_8670], output)
mutated_mod['func_8672'] = func_8672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_8695 = relay.TupleGetItem(func_7323_call(), 0)
call_8696 = relay.TupleGetItem(func_7324_call(), 0)
output = call_8695
output2 = call_8696
func_8707 = relay.Function([], output)
mod['func_8707'] = func_8707
mod = relay.transform.InferType()(mod)
output = func_8707()
func_8708 = relay.Function([], output)
mutated_mod['func_8708'] = func_8708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_8736 = relay.TupleGetItem(func_3240_call(), 0)
call_8737 = relay.TupleGetItem(func_3242_call(), 0)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_8743 = relay.TupleGetItem(func_4103_call(), 2)
call_8744 = relay.TupleGetItem(func_4105_call(), 2)
output = relay.Tuple([call_8736,call_8743,])
output2 = relay.Tuple([call_8737,call_8744,])
func_8756 = relay.Function([], output)
mod['func_8756'] = func_8756
mod = relay.transform.InferType()(mod)
mutated_mod['func_8756'] = func_8756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8756_call = mutated_mod.get_global_var('func_8756')
call_8757 = func_8756_call()
output = call_8757
func_8758 = relay.Function([], output)
mutated_mod['func_8758'] = func_8758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5615_call = mod.get_global_var('func_5615')
func_5617_call = mutated_mod.get_global_var('func_5617')
call_8863 = relay.TupleGetItem(func_5615_call(), 0)
call_8864 = relay.TupleGetItem(func_5617_call(), 0)
output = call_8863
output2 = call_8864
func_8866 = relay.Function([], output)
mod['func_8866'] = func_8866
mod = relay.transform.InferType()(mod)
mutated_mod['func_8866'] = func_8866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8866_call = mutated_mod.get_global_var('func_8866')
call_8867 = func_8866_call()
output = call_8867
func_8868 = relay.Function([], output)
mutated_mod['func_8868'] = func_8868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8353_call = mod.get_global_var('func_8353')
func_8354_call = mutated_mod.get_global_var('func_8354')
call_8869 = func_8353_call()
call_8870 = func_8353_call()
output = call_8869
output2 = call_8870
func_8872 = relay.Function([], output)
mod['func_8872'] = func_8872
mod = relay.transform.InferType()(mod)
output = func_8872()
func_8873 = relay.Function([], output)
mutated_mod['func_8873'] = func_8873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6873_call = mod.get_global_var('func_6873')
func_6874_call = mutated_mod.get_global_var('func_6874')
call_8891 = func_6873_call()
call_8892 = func_6873_call()
output = relay.Tuple([call_8891,])
output2 = relay.Tuple([call_8892,])
func_8909 = relay.Function([], output)
mod['func_8909'] = func_8909
mod = relay.transform.InferType()(mod)
output = func_8909()
func_8910 = relay.Function([], output)
mutated_mod['func_8910'] = func_8910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7633_call = mod.get_global_var('func_7633')
func_7634_call = mutated_mod.get_global_var('func_7634')
call_8984 = relay.TupleGetItem(func_7633_call(), 2)
call_8985 = relay.TupleGetItem(func_7634_call(), 2)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_9013 = relay.TupleGetItem(func_2519_call(), 0)
call_9014 = relay.TupleGetItem(func_2520_call(), 0)
output = relay.Tuple([call_8984,call_9013,])
output2 = relay.Tuple([call_8985,call_9014,])
func_9026 = relay.Function([], output)
mod['func_9026'] = func_9026
mod = relay.transform.InferType()(mod)
output = func_9026()
func_9027 = relay.Function([], output)
mutated_mod['func_9027'] = func_9027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5175_call = mod.get_global_var('func_5175')
func_5176_call = mutated_mod.get_global_var('func_5176')
call_9031 = relay.TupleGetItem(func_5175_call(), 1)
call_9032 = relay.TupleGetItem(func_5176_call(), 1)
output = relay.Tuple([call_9031,])
output2 = relay.Tuple([call_9032,])
func_9051 = relay.Function([], output)
mod['func_9051'] = func_9051
mod = relay.transform.InferType()(mod)
output = func_9051()
func_9052 = relay.Function([], output)
mutated_mod['func_9052'] = func_9052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8756_call = mod.get_global_var('func_8756')
func_8758_call = mutated_mod.get_global_var('func_8758')
call_9056 = relay.TupleGetItem(func_8756_call(), 0)
call_9057 = relay.TupleGetItem(func_8758_call(), 0)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_9060 = relay.TupleGetItem(func_5679_call(), 0)
call_9061 = relay.TupleGetItem(func_5680_call(), 0)
output = relay.Tuple([call_9056,call_9060,])
output2 = relay.Tuple([call_9057,call_9061,])
func_9063 = relay.Function([], output)
mod['func_9063'] = func_9063
mod = relay.transform.InferType()(mod)
output = func_9063()
func_9064 = relay.Function([], output)
mutated_mod['func_9064'] = func_9064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5223_call = mod.get_global_var('func_5223')
func_5225_call = mutated_mod.get_global_var('func_5225')
call_9100 = relay.TupleGetItem(func_5223_call(), 0)
call_9101 = relay.TupleGetItem(func_5225_call(), 0)
uop_9119 = relay.sin(call_9100.astype('float32')) # shape=(16, 11, 13)
uop_9121 = relay.sin(call_9101.astype('float32')) # shape=(16, 11, 13)
output = uop_9119
output2 = uop_9121
func_9132 = relay.Function([], output)
mod['func_9132'] = func_9132
mod = relay.transform.InferType()(mod)
mutated_mod['func_9132'] = func_9132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mutated_mod.get_global_var('func_9132')
call_9133 = func_9132_call()
output = call_9133
func_9134 = relay.Function([], output)
mutated_mod['func_9134'] = func_9134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3901_call = mod.get_global_var('func_3901')
func_3903_call = mutated_mod.get_global_var('func_3903')
call_9182 = func_3901_call()
call_9183 = func_3901_call()
func_6421_call = mod.get_global_var('func_6421')
func_6425_call = mutated_mod.get_global_var('func_6425')
const_9192 = relay.const(-6, dtype = "uint8")#candidate|9192|()|const|uint8
const_9193 = relay.const([[8,-8,3,-1,6,-8,-5,-4,7,9,-2,2,-10,10,8,10,8,-8,-5,9,-8,-6,9,-9,3,10,6,9,-6,5,-4,1,-4,-4,-9,-4,4,-3,2,-9,-9,-10,-2,10,-5,1,1,-3,2,-5,2,9,9,-7,1,6,7,-4,3,7,10,-9,-4,9,-2,7,6,-8,-10,-6,2,-1,-5,10,-1,-8,-6,6,-1,-6,-9,-7,-10,10,1,-1,7,4,8,-2,10,4,10,6,4,4,-6,10,7,6,-7,1,-2,8,8,1,-3,-3,-6,4,-2,5,1,-4,5,-6,-10,8,3,-1,7,10,8,3,-4,-4,-5,-4,4,7],[-9,-4,10,-10,8,-6,7,7,9,1,-6,10,6,10,-2,-3,-7,-2,9,-4,5,-3,5,-10,-9,8,8,9,-1,-5,-5,4,5,1,-7,-2,4,-7,-7,-5,-9,-2,-10,2,9,4,8,-7,3,-9,-4,5,8,9,10,-4,9,-8,8,-10,-9,-10,-4,10,-5,-8,-1,9,4,5,-1,2,4,9,-2,-8,5,8,6,-7,-8,-2,-7,-6,-8,-6,1,-9,10,6,8,10,3,5,5,-2,4,-10,4,3,-1,1,6,5,-7,-5,7,2,-3,-1,6,3,-9,2,-1,5,3,1,5,5,-9,1,-6,-9,-8,7,-6,-8,3,6],[7,7,-7,-9,-6,-6,-3,-2,8,7,-2,1,-7,2,-9,8,-10,-5,-1,1,9,4,-2,2,-10,7,-5,9,-5,6,9,-9,-6,8,-9,7,-6,-9,-9,-10,9,-10,-4,-10,10,-5,7,10,8,-1,6,-4,-10,3,-3,-8,-8,1,-9,-3,5,8,1,5,7,-6,-5,7,3,-7,-3,-1,3,-7,10,-1,-9,7,8,-1,10,-8,-10,-10,-7,1,2,-2,-3,9,-8,-2,-9,9,1,-2,7,-5,7,2,-4,3,-5,5,4,5,4,1,6,-3,-7,-9,-7,3,-2,9,6,-4,-8,10,2,-6,-5,-2,-4,-8,-1,5,-1,-3],[3,-1,-3,1,5,-3,-1,7,-3,-4,5,-8,-1,6,3,-9,1,-9,-6,-6,-4,-1,-10,-10,7,-2,10,-1,-4,4,-6,8,-2,2,7,-10,8,7,-10,-3,-1,-1,4,3,-9,-9,-10,2,2,-4,1,2,-5,-7,4,-6,-4,7,1,8,-8,4,-4,2,8,6,9,-1,5,-3,-10,5,6,-4,3,-6,10,9,-6,-1,8,-6,-3,3,-6,6,-5,-10,4,-5,-9,-8,-3,-5,9,-5,-3,-5,-9,4,-7,1,-3,1,6,-6,9,4,-4,-10,4,1,-8,4,7,3,2,5,5,-5,-4,-6,9,-6,10,6,-3,3,-3,9],[9,-3,-5,6,-4,1,-6,-2,8,7,-6,-5,-10,-10,-7,5,10,5,-6,-5,6,8,-4,6,-10,3,-6,5,-7,8,-2,10,-1,-7,-7,-5,10,-4,6,8,1,-2,-10,-2,1,-10,3,5,4,10,6,-4,-1,-1,-8,-6,10,7,-6,6,-1,8,-8,-9,-7,-6,6,-9,10,-5,1,-7,-1,3,-5,3,-7,9,6,-10,9,-7,-7,2,-6,-4,-8,10,-7,-7,1,-8,2,6,7,2,3,9,-6,7,-7,9,-4,-7,1,5,5,-2,3,7,-5,6,-8,8,-7,8,-8,1,5,6,5,9,5,9,9,-7,-6,-4,9,10]], dtype = "int16")#candidate|9193|(5, 130)|const|int16
const_9194 = relay.const([-6.637529,-0.997139,-7.024530,-3.525167,-2.486426,-0.715982,7.708404,2.288913,-2.905824,7.768812,5.452925,7.719613,-2.714072,5.810968,5.695060,-6.550777,7.503459,6.253616,-6.386882,-0.097439,-4.898370,0.306628,8.505753,-8.882694], dtype = "float32")#candidate|9194|(24,)|const|float32
call_9191 = relay.TupleGetItem(func_6421_call(relay.reshape(const_9192.astype('uint8'), []), relay.reshape(const_9193.astype('int16'), [650,]), relay.reshape(const_9194.astype('float32'), [24,]), ), 8)
call_9195 = relay.TupleGetItem(func_6425_call(relay.reshape(const_9192.astype('uint8'), []), relay.reshape(const_9193.astype('int16'), [650,]), relay.reshape(const_9194.astype('float32'), [24,]), ), 8)
func_3427_call = mod.get_global_var('func_3427')
func_3431_call = mutated_mod.get_global_var('func_3431')
var_9200 = relay.var("var_9200", dtype = "uint64", shape = (1470,))#candidate|9200|(1470,)|var|uint64
call_9199 = relay.TupleGetItem(func_3427_call(relay.reshape(const_9193.astype('int16'), [5, 130]), relay.reshape(var_9200.astype('uint64'), [1470,]), relay.reshape(const_9193.astype('int16'), [5, 130]), ), 2)
call_9201 = relay.TupleGetItem(func_3431_call(relay.reshape(const_9193.astype('int16'), [5, 130]), relay.reshape(var_9200.astype('uint64'), [1470,]), relay.reshape(const_9193.astype('int16'), [5, 130]), ), 2)
output = relay.Tuple([call_9182,call_9191,const_9192,const_9193,const_9194,call_9199,var_9200,])
output2 = relay.Tuple([call_9183,call_9195,const_9192,const_9193,const_9194,call_9201,var_9200,])
func_9202 = relay.Function([var_9200,], output)
mod['func_9202'] = func_9202
mod = relay.transform.InferType()(mod)
var_9203 = relay.var("var_9203", dtype = "uint64", shape = (1470,))#candidate|9203|(1470,)|var|uint64
output = func_9202(var_9203)
func_9204 = relay.Function([var_9203], output)
mutated_mod['func_9204'] = func_9204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7633_call = mod.get_global_var('func_7633')
func_7634_call = mutated_mod.get_global_var('func_7634')
call_9213 = relay.TupleGetItem(func_7633_call(), 1)
call_9214 = relay.TupleGetItem(func_7634_call(), 1)
output = call_9213
output2 = call_9214
func_9221 = relay.Function([], output)
mod['func_9221'] = func_9221
mod = relay.transform.InferType()(mod)
mutated_mod['func_9221'] = func_9221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9221_call = mutated_mod.get_global_var('func_9221')
call_9222 = func_9221_call()
output = call_9222
func_9223 = relay.Function([], output)
mutated_mod['func_9223'] = func_9223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9051_call = mod.get_global_var('func_9051')
func_9052_call = mutated_mod.get_global_var('func_9052')
call_9248 = relay.TupleGetItem(func_9051_call(), 0)
call_9249 = relay.TupleGetItem(func_9052_call(), 0)
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
const_9259 = relay.const([-2.700984,-9.459055,-3.459753,6.431888,-1.346645,4.459286,9.379825,4.114899,-3.107075,-2.678524,-5.485656,-3.489897,2.527760,1.331299,-1.153816,-8.622766,-3.890090,-9.241252,-8.332396,-1.485376,0.423468,9.669676,-3.471882,-4.016446,-0.990075,-0.947087,-2.766044,7.088829,0.879738,3.098190,9.152532,-3.526688,-0.596465,8.523602,6.983135,7.886321,1.169078,1.254684,5.217906,8.366001,-3.423630,0.362570,-8.601174,9.248664,1.950071,3.783612,-0.398092,-4.249463,-2.437157,3.291388,2.447219,7.663015,7.776424,-3.660577,-7.010344,0.147499,6.138420,5.235130,2.437028,-3.555335,2.824381,4.201106,3.684758,7.196118,0.756275,3.724793,6.919231,-7.050716,1.889379,-8.188254,-8.543457,1.105739,-6.301007,5.582236,3.309021,-4.012031,-5.790035,-3.295453,2.751856,3.005112,-0.219397,3.696175,6.163944,-4.876928,-8.534464,-1.739419,-0.484351,9.413402,2.806384,-0.605166,-2.184328,3.755263,0.465388,-6.038166,9.013012,2.652621,3.576483,-6.672062,-6.177764,1.669133,4.442312,4.033340,2.478572,-2.326905,-3.223846,5.988081,9.402003,7.254338,-2.692089,7.397216,2.062944,7.336084,4.037274,-6.937401,2.929647,-3.935982,1.451337,-7.041357,-8.794689,0.791653,-9.143243,6.551458,-4.458059,-3.836323,0.344590,-4.737937,-8.208340,9.535040,5.700571,-0.281307,4.379004,0.543932,-9.175496,-7.249657,-6.589480,7.032624,-9.109900,-0.256388,3.988862,-5.566113,-2.341759,-6.231729,-6.067767,-3.147996,1.362466,-4.716813,-3.497266,0.421431,-7.132765,3.690016,-0.127454,8.804204,-4.360401,6.180202,-3.172226,-0.547881,-4.048429,7.372333,-4.416744,1.718826,-3.425084,-8.665959,1.202384,-7.079663,3.603023,3.435250,-6.937640,2.785895,-7.786636,7.361755,-9.399698,-6.496240,-1.941338,2.969894,8.138664,-8.352044,9.941085,-0.158657,-3.658932,-9.293530,8.242407,5.572555,-4.826812,-9.946712,1.120005,6.568576,2.408178,8.145234,3.000465,-4.462854,3.005251,8.939730,4.500279,5.227122,-7.345415,-9.267695,9.180785,8.710712,-9.875952,7.554355,1.355497,7.427173,-1.961155,-7.090027,1.119426,-9.285411,4.682733,8.877923,-8.882730,4.944335,-4.750349,-2.914935,5.133502,9.827705,1.810181,-3.294826,2.130270,7.451171,-4.239719,-6.780389,-6.668872,-5.416502,-5.003373,-1.935068,-5.051340,2.785652,0.479575,7.220096,8.353333,-9.016848,1.831666,-4.586181,-3.187765,-1.686349,8.396267,3.142346,1.135844,-3.021244,5.143496,-2.132482,-3.151942,4.773359,3.901868,-4.701560,5.466428,6.871848,1.659394,-8.060379,4.074788,-9.614853,1.799796,-7.963266,7.650507,-5.788460,-7.414425,2.642839,-5.422582,-9.487495,2.442036,-5.158184,-5.531720,7.983219,1.289894,1.564764,-0.159072,-1.826158,7.352383,-3.277637,3.673222,-2.250659,-2.257864,-2.612394,-7.492148,-8.237101,5.750000,-2.680865,8.877041,-0.636438,5.346088,9.645899,1.830847,3.598348,1.572280,-9.558667,-4.977103,-1.122486,-3.066225,4.607094,0.116177,-0.616681,6.691393,-5.927633,-4.866048,9.581678,8.302898,2.723260,-6.687061,3.726240,-2.457754,-0.569347,-6.759578,5.500235,0.842236,6.623281,5.281160,-4.453779,6.224724,1.689011,6.497789,7.221068,3.211714,3.957189,-1.456060,8.610471,-2.008667,3.154486,-2.234449,0.438849,-8.292935,9.002094,-9.757435,-6.154191,-2.634998,6.433555,-2.904527,-9.787831,0.743785,-6.756167,0.452459,5.572119,5.529919,-3.289814,5.853044,-4.282038,2.547620,5.320431,3.545074,3.155337,1.842697,3.197826,1.282380,-0.223098,1.091175,-7.342078,-4.422009,0.767655,7.295213,-5.280325,7.195073,-6.306529,-8.327502,6.618895,0.669705,5.073006,1.423171,-4.987220,6.075374,-1.234982,3.459440,2.255773,-4.856245,-8.664802,-1.730061,-4.633477,1.619324,-9.258660,6.816977,1.497416,-3.075965,9.514622,6.879091,8.045733,-1.214348,1.461012,-8.731883,-1.606858,8.840753,-4.226727,2.622044,-5.502059,6.772865,-0.787462,-9.400945,7.842873,-8.451530,-1.801905,9.525041,-9.182967,3.229736,8.894818,-2.998731,-4.176275,-4.973701,-5.509652,-2.699715,-5.970235,9.853980,-8.426096,-1.807368,1.509230,-0.714646,-8.431728,7.223434,-0.804919,4.938716,-2.293266,2.354732,5.752499,-6.383462,2.404301,-8.660322,-7.389472,-9.571765,4.196203,3.025267,7.641493,5.236867,8.359048,0.805278,3.575991,5.309163,-2.415270,4.977563,9.729630,9.220334,-2.768729,-5.427527,-8.002294,2.842544,-6.713766,-8.740548,-4.554375,9.430375,-9.947778,1.403526,2.635166,3.515110,3.691225,-8.555560,-4.128273,3.047828,3.669701,-1.893227,-1.981878,-1.133755,-7.822042,1.142360,-4.049141,-2.258701,1.616448,-1.285654,-7.427082,-5.011239,-5.521872,-2.363350,9.926167,7.885545,-3.817313,-0.165794,9.695705,2.230100,7.580108,1.715860,1.010946,-9.970489,7.421372,-9.837178,-6.127548,-7.635960,8.662085,-7.165608,-1.444684,0.476183,9.532353,-4.892651,-9.405018,-1.304604,-3.592622,0.194247,7.650447,-4.866064,4.600924,-3.876205,5.973694,-9.540724,-5.641858,4.568563,5.069583,6.541481,-9.859900,7.054986,1.433964,-4.480157,9.840549,2.531407,1.987336,-0.011510,-5.302319,5.694640,0.487712,-6.740230,-3.126056,-4.441453,8.477711,-9.799762,7.784486,-2.174415,3.656595,-5.255311,4.549654,3.414015,7.234564,8.342428,-9.086449,-4.968404,-2.824650,0.561318,-8.050022,-3.143838,7.122959,-9.182399,5.154883,2.613432,1.855218,6.329956,-5.097477,-6.298382,-2.642296,3.383014,-1.388981,-7.160755,4.389356,8.397850,-2.854305,7.440229,-0.252090,-7.037442,-0.231019,-9.668927,-1.046107,-4.393093,-3.387127,-8.769499,-3.368301,3.444858,0.936620,-2.682520,-0.960474,0.048336,7.450145,-0.360456,-8.336828,4.856974,7.357252,-7.958779,-0.481702,-4.201702,6.829688,1.248742,-2.001187,-7.205848,1.090597,-6.955003,-7.381506,-6.890136,-3.214226,9.889194,7.937439,-2.022282,-5.663392,-6.737929,6.519822,4.372847,-5.388809,7.849379,-7.916772,-1.855980,-2.035573,3.680777,-6.791547,-2.690186,-7.615769,3.311073,9.451722,-0.171930,9.746759,-7.302733,2.690469,5.213184,-2.202560,6.013862,8.866428,-6.066099,-4.971292,-4.753029,9.751082,-0.787301,6.929849,-7.357153,6.295605,-1.107902,6.377967,7.213546,0.443760,-9.958090,1.715939,-7.073346,-8.228878,-4.079594,-3.930718,7.393760,-9.032658,2.009642,-1.864967,-7.246783,6.778404,-7.551207,8.260281,4.969431,-9.030310,-7.442580,3.221868,-7.232159,-0.299238,1.448406,-5.329856,-0.234142,-7.763819,-6.200927,1.986782,-6.263779,1.221825,-9.664009,-9.092855,8.818043,4.621011,9.291842,-1.520064,-2.217596,-8.831474,4.780161,1.698405,3.532378,-6.508461,-2.643585,-6.833773,-4.236630,4.909907,-1.272835,-9.636226,-9.033354,-1.893981,6.588378,-0.087268,8.618666,5.464268,1.926496,-3.271787,-6.892169,-2.155557,7.822202,2.283652,-8.050541,-0.025918,-0.722444,0.352756,-6.233197,-6.168877,-3.128300,-5.192282,-9.607242,2.411223,-1.073001,-9.175424,-0.908893,3.943058,-6.337421,8.594896,0.999714,3.728499,-9.206599,-5.941962,-1.402031,-7.054729,1.556882,-7.937966,-1.480569,7.345461,-4.021611,6.916302,-5.653768,-4.250140,9.317399,-6.994752,3.618197,2.729950,-3.480580,-5.846567,-8.494014,0.191060,7.448029,4.261315,9.960381,-5.574485,2.097376,-6.822744,-2.246985,-6.267217,-5.706407,-3.801109,-6.895893,-9.897988,-6.648340,-3.655846,2.647080,-4.958984,7.453603,3.767715,5.069824,-8.895950,6.191936,-9.924265,6.308274,-2.074712,3.524901,0.468173,-2.431679,-5.008956,9.164424,5.283208,9.535585,3.805435,-1.109335,2.910916,5.801307,-0.324615,8.050874,-3.914315,2.302979,-7.051542,-1.784575,-7.822165,6.950940,9.272993,3.629083,-0.773620,-4.812779,-1.693735,-6.608499,-4.862426,6.608604,-3.660681,-5.564928,-8.757478,5.020791,-8.722699,-7.362478,-3.632946,-2.003401,-9.209807,0.917736,-1.169630,7.630324,-8.707563,-1.022167,4.154983,6.451631,-0.425980,-8.785164,1.347109,-5.409161,8.531835,-1.896356,-1.313530,5.216056,6.240523,8.605368,3.970482,-7.111837,-9.611242,-9.308935,-4.691625,-1.815467,3.473603,0.534638,-3.766745,6.180258,4.415191,-2.438760,-2.555646,-9.827014,-7.655401,3.766154,-3.703775,9.532758,-6.191102,-6.219169,0.081118,-1.821182,-3.739992,5.736561,7.520500,-1.557528,-3.680593,-2.760834,9.500074,-5.398976,1.374359,2.796858,3.362167,-2.316822,-9.485156,4.930316,9.802128,5.225087,7.018855,3.828647,7.873451,6.866816,-5.259972,-5.845437,4.229004,9.867160,-0.346738,-3.941483,8.911900,3.609086,-7.147521,9.288848,-7.512112,3.074394,8.262614,-4.425687,-8.571908,-2.886459,-5.244177,-6.659744,-1.875958,-7.259216,-0.787126,-6.786223,9.401577,-9.137182,-1.765382,-6.819977,-7.942341,4.556197,-9.258960,-1.346212,3.765942,7.110118,2.410699,6.665376,3.048595,-3.627556,5.777587,8.838900,-7.194603,-1.635713,6.206274,-8.639248,-2.667614,6.316540,8.995904,0.214066,-2.130506,-8.448252,3.115635,0.092788,9.327136,-1.107324,1.468008,-7.264822,5.983720,-3.000739,2.902614,-6.256710,-1.286303,-9.085369,0.602421,0.292058,-6.756299,9.965333,0.952754,-4.694000,-9.987617,9.047016,-5.068751,-2.882597,-4.055841,-1.106294,6.786577,1.505807,-6.251535,9.052357,-9.559938,2.285325,0.592327,-6.154025,-4.430758,0.061523,5.564942,-6.492976,-2.230722,-1.865849,2.429389,-1.065101,6.598393,0.646549,2.004176,-3.146126,2.429073,-0.082880,-3.535290,0.761503,0.492408,-9.452109,-5.994496,-6.494503,2.129195,0.056326,6.580774,1.679822,-0.060836,-5.405585,6.074592,6.058695,1.461807,9.680883,-8.482926,-8.621165,-3.519270,-5.463396,4.471258,8.213628,6.222253,3.156281,0.837579,-4.999958,2.311991,4.456525,7.881981,2.178425,1.871042,-6.177886,-0.237150,1.151807,3.997663,5.919916,3.437112,4.404264,2.806840,0.721676,1.958773,-9.700565,5.558615,-0.415105,-6.219560,4.480778,-4.600675,4.706968,-7.213089,1.885227,0.355176,-2.518565,-8.745384,9.779947,-1.413461,-5.318150,-8.803949,6.436056,-7.136334,-2.415434,5.110076,-1.917239,-5.994782,-9.947539,5.752571,-2.441195,-4.754793,5.315987,6.992832,3.247840,8.990606,9.912755,-7.424184,5.295844,-4.797752,-2.239604,6.090337,-2.275948,-6.759569,-9.412454,-9.359841,-9.353481,8.813897,7.488314,1.579248,7.157303,-0.541487,-9.894444,3.717887,-6.638681,-6.409779,4.564000,5.576174,8.954271,1.402123,0.621466,-8.351807,-5.241828,7.687266,-6.630087,-4.094671,-2.242074,0.475694,-3.221284,-8.974166,-6.270067,7.239270,9.043451,2.318702,-2.630117,-6.646596,5.732423,-4.878479,7.810131,6.969522,-5.917163,1.353980,3.875852,4.695502,7.903555,-5.762545,-9.789372,1.330307,-3.693834,-0.398354,3.198164,6.947494,-2.312620,5.911381,9.930914,8.336726,-1.698371,-4.533303,6.869794,2.209088,-7.679644,6.503755,2.038002,-1.793439,1.036051,7.668179,5.410008,1.477653,-5.956576,7.023971,-4.827245,1.161410,5.420405,-2.166321,5.651090,2.420025,2.906702,4.813528,-5.829677,-7.757019,-5.317798,-5.552768,-1.109797,0.525290,-0.946186,3.301585,-9.963341,-8.694722,-8.034926,-3.370520,-5.005848,4.083300,-8.181788,0.623350,-7.273131,7.957230,1.004964,7.592700,5.790791,-3.370072,1.424860,-2.280738,-5.954565,-0.754553,0.953335,-2.917927,-8.858952,1.704087,-7.656627,2.488691,7.039034,-2.066450,0.894615,-0.358248,-2.470112,-4.003982,-9.054319,0.821911,4.567043,-7.987716,3.909775,3.962087,-7.713185,-1.791076,8.043870,-9.419804,-2.622914,2.282983,-3.357118,2.889213,-4.508746,-2.502352,-7.791202,3.697947,7.429536,6.846554,-3.588481,7.598038,9.139979,-0.322635,5.745669,7.619986,7.087380,0.839995,1.994802,-6.745824,9.291848,-1.998355,9.035741,4.536781,1.393927,5.441182,2.725977,4.174533,-6.807695,7.892494,-5.480713,-0.208426,7.689484,6.955056,-5.304312,-5.309419,-9.366715,6.319042,-9.048248,1.634590,8.823699,-5.674126,2.106705,-2.991311,3.882810,7.600591,-3.898370,0.245150,-2.036564,-1.772777,-6.733775,-7.726726,-4.940535,-9.715108,-8.379177,-3.625339,-9.760898,0.550540,-2.581846,-1.268063,7.772592,2.969326,2.677803,-2.333579,5.665103,-0.820633,6.049890,9.568306,-6.438743,6.431614,7.674273,5.498921,-1.593973,9.315105,-6.282491,-6.471589,9.635643,7.897041,-0.070964,-0.356640,0.913200,4.737964,6.855475,-5.480451,6.508466,7.219920], dtype = "float64")#candidate|9259|(1200,)|const|float64
call_9258 = func_4407_call(relay.reshape(const_9259.astype('float64'), [10, 10, 12]))
call_9260 = func_4407_call(relay.reshape(const_9259.astype('float64'), [10, 10, 12]))
var_9290 = relay.var("var_9290", dtype = "float64", shape = (1200,))#candidate|9290|(1200,)|var|float64
bop_9291 = relay.less(const_9259.astype('bool'), relay.reshape(var_9290.astype('bool'), relay.shape_of(const_9259))) # shape=(1200,)
func_4919_call = mod.get_global_var('func_4919')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_9309 = relay.TupleGetItem(func_4919_call(), 0)
call_9310 = relay.TupleGetItem(func_4921_call(), 0)
output = relay.Tuple([call_9248,call_9258,bop_9291,call_9309,])
output2 = relay.Tuple([call_9249,call_9260,bop_9291,call_9310,])
func_9342 = relay.Function([var_9290,], output)
mod['func_9342'] = func_9342
mod = relay.transform.InferType()(mod)
var_9343 = relay.var("var_9343", dtype = "float64", shape = (1200,))#candidate|9343|(1200,)|var|float64
output = func_9342(var_9343)
func_9344 = relay.Function([var_9343], output)
mutated_mod['func_9344'] = func_9344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mod.get_global_var('func_4791')
func_4792_call = mutated_mod.get_global_var('func_4792')
call_9370 = relay.TupleGetItem(func_4791_call(), 0)
call_9371 = relay.TupleGetItem(func_4792_call(), 0)
output = call_9370
output2 = call_9371
func_9395 = relay.Function([], output)
mod['func_9395'] = func_9395
mod = relay.transform.InferType()(mod)
output = func_9395()
func_9396 = relay.Function([], output)
mutated_mod['func_9396'] = func_9396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6547_call = mod.get_global_var('func_6547')
func_6548_call = mutated_mod.get_global_var('func_6548')
call_9434 = func_6547_call()
call_9435 = func_6547_call()
func_8219_call = mod.get_global_var('func_8219')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_9436 = func_8219_call()
call_9437 = func_8219_call()
output = relay.Tuple([call_9434,call_9436,])
output2 = relay.Tuple([call_9435,call_9437,])
func_9438 = relay.Function([], output)
mod['func_9438'] = func_9438
mod = relay.transform.InferType()(mod)
mutated_mod['func_9438'] = func_9438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9438_call = mutated_mod.get_global_var('func_9438')
call_9439 = func_9438_call()
output = call_9439
func_9440 = relay.Function([], output)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9449 = relay.var("var_9449", dtype = "uint16", shape = (8, 2, 2))#candidate|9449|(8, 2, 2)|var|uint16
var_9450 = relay.var("var_9450", dtype = "uint16", shape = (8, 2, 2))#candidate|9450|(8, 2, 2)|var|uint16
bop_9451 = relay.not_equal(var_9449.astype('bool'), relay.reshape(var_9450.astype('bool'), relay.shape_of(var_9449))) # shape=(8, 2, 2)
output = relay.Tuple([bop_9451,])
output2 = relay.Tuple([bop_9451,])
func_9454 = relay.Function([var_9449,var_9450,], output)
mod['func_9454'] = func_9454
mod = relay.transform.InferType()(mod)
mutated_mod['func_9454'] = func_9454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9454_call = mutated_mod.get_global_var('func_9454')
var_9456 = relay.var("var_9456", dtype = "uint16", shape = (8, 2, 2))#candidate|9456|(8, 2, 2)|var|uint16
var_9457 = relay.var("var_9457", dtype = "uint16", shape = (8, 2, 2))#candidate|9457|(8, 2, 2)|var|uint16
call_9455 = func_9454_call(var_9456,var_9457,)
output = call_9455
func_9458 = relay.Function([var_9456,var_9457,], output)
mutated_mod['func_9458'] = func_9458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3953_call = mod.get_global_var('func_3953')
func_3955_call = mutated_mod.get_global_var('func_3955')
call_9480 = relay.TupleGetItem(func_3953_call(), 1)
call_9481 = relay.TupleGetItem(func_3955_call(), 1)
func_7984_call = mod.get_global_var('func_7984')
func_7985_call = mutated_mod.get_global_var('func_7985')
call_9482 = relay.TupleGetItem(func_7984_call(), 0)
call_9483 = relay.TupleGetItem(func_7985_call(), 0)
func_2184_call = mod.get_global_var('func_2184')
func_2186_call = mutated_mod.get_global_var('func_2186')
var_9497 = relay.var("var_9497", dtype = "uint16", shape = (2, 360))#candidate|9497|(2, 360)|var|uint16
call_9496 = relay.TupleGetItem(func_2184_call(relay.reshape(var_9497.astype('uint16'), [720,])), 2)
call_9498 = relay.TupleGetItem(func_2186_call(relay.reshape(var_9497.astype('uint16'), [720,])), 2)
func_9438_call = mod.get_global_var('func_9438')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_9503 = relay.TupleGetItem(func_9438_call(), 0)
call_9504 = relay.TupleGetItem(func_9440_call(), 0)
var_9513 = relay.var("var_9513", dtype = "uint16", shape = (2, 360))#candidate|9513|(2, 360)|var|uint16
bop_9514 = relay.add(var_9497.astype('float64'), relay.reshape(var_9513.astype('float64'), relay.shape_of(var_9497))) # shape=(2, 360)
func_3240_call = mod.get_global_var('func_3240')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_9527 = relay.TupleGetItem(func_3240_call(), 0)
call_9528 = relay.TupleGetItem(func_3242_call(), 0)
bop_9532 = relay.equal(bop_9514.astype('bool'), relay.reshape(var_9497.astype('bool'), relay.shape_of(bop_9514))) # shape=(2, 360)
output = relay.Tuple([call_9480,call_9482,call_9496,call_9503,call_9527,bop_9532,])
output2 = relay.Tuple([call_9481,call_9483,call_9498,call_9504,call_9528,bop_9532,])
func_9557 = relay.Function([var_9497,var_9513,], output)
mod['func_9557'] = func_9557
mod = relay.transform.InferType()(mod)
var_9558 = relay.var("var_9558", dtype = "uint16", shape = (2, 360))#candidate|9558|(2, 360)|var|uint16
var_9559 = relay.var("var_9559", dtype = "uint16", shape = (2, 360))#candidate|9559|(2, 360)|var|uint16
output = func_9557(var_9558,var_9559,)
func_9560 = relay.Function([var_9558,var_9559,], output)
mutated_mod['func_9560'] = func_9560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_9569 = relay.TupleGetItem(func_4103_call(), 0)
call_9570 = relay.TupleGetItem(func_4105_call(), 0)
output = call_9569
output2 = call_9570
func_9573 = relay.Function([], output)
mod['func_9573'] = func_9573
mod = relay.transform.InferType()(mod)
mutated_mod['func_9573'] = func_9573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9573_call = mutated_mod.get_global_var('func_9573')
call_9574 = func_9573_call()
output = call_9574
func_9575 = relay.Function([], output)
mutated_mod['func_9575'] = func_9575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_9582 = relay.TupleGetItem(func_4021_call(), 0)
call_9583 = relay.TupleGetItem(func_4022_call(), 0)
func_6547_call = mod.get_global_var('func_6547')
func_6548_call = mutated_mod.get_global_var('func_6548')
call_9598 = func_6547_call()
call_9599 = func_6547_call()
output = relay.Tuple([call_9582,call_9598,])
output2 = relay.Tuple([call_9583,call_9599,])
func_9604 = relay.Function([], output)
mod['func_9604'] = func_9604
mod = relay.transform.InferType()(mod)
mutated_mod['func_9604'] = func_9604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9604_call = mutated_mod.get_global_var('func_9604')
call_9605 = func_9604_call()
output = call_9605
func_9606 = relay.Function([], output)
mutated_mod['func_9606'] = func_9606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6620_call = mod.get_global_var('func_6620')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_9632 = relay.TupleGetItem(func_6620_call(), 0)
call_9633 = relay.TupleGetItem(func_6621_call(), 0)
output = call_9632
output2 = call_9633
func_9636 = relay.Function([], output)
mod['func_9636'] = func_9636
mod = relay.transform.InferType()(mod)
output = func_9636()
func_9637 = relay.Function([], output)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7984_call = mod.get_global_var('func_7984')
func_7985_call = mutated_mod.get_global_var('func_7985')
call_9679 = relay.TupleGetItem(func_7984_call(), 0)
call_9680 = relay.TupleGetItem(func_7985_call(), 0)
uop_9695 = relay.acosh(call_9679.astype('float32')) # shape=(16, 11, 13)
uop_9697 = relay.acosh(call_9680.astype('float32')) # shape=(16, 11, 13)
output = relay.Tuple([uop_9695,])
output2 = relay.Tuple([uop_9697,])
func_9712 = relay.Function([], output)
mod['func_9712'] = func_9712
mod = relay.transform.InferType()(mod)
output = func_9712()
func_9713 = relay.Function([], output)
mutated_mod['func_9713'] = func_9713
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9729 = relay.const([[[-0.001602,0.180301,-3.711981,9.711908,-4.200783,1.572785,7.106491,6.114592,-4.258286,1.486763,0.830782],[6.221181,-6.811616,8.567983,-2.903028,5.109785,-0.437974,-9.080718,-3.352493,-1.363590,-1.272797,5.529213],[5.345566,-4.844787,8.935227,-5.115493,-1.268833,7.258119,-0.898405,-6.550255,2.809199,-6.935721,-7.446164],[2.851143,-9.477141,-7.176112,3.450299,3.613060,-9.717199,-8.084274,0.236759,4.675081,8.552045,-9.944481],[3.015875,-2.505304,-4.870330,3.941275,8.117497,8.441877,-2.842526,2.471148,3.000194,-7.138634,-9.296581]]], dtype = "float32")#candidate|9729|(1, 5, 11)|const|float32
uop_9730 = relay.tan(const_9729.astype('float32')) # shape=(1, 5, 11)
uop_9743 = relay.exp(const_9729.astype('float64')) # shape=(1, 5, 11)
uop_9758 = relay.sqrt(uop_9743.astype('float64')) # shape=(1, 5, 11)
output = relay.Tuple([uop_9730,uop_9758,])
output2 = relay.Tuple([uop_9730,uop_9758,])
func_9762 = relay.Function([], output)
mod['func_9762'] = func_9762
mod = relay.transform.InferType()(mod)
mutated_mod['func_9762'] = func_9762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9762_call = mutated_mod.get_global_var('func_9762')
call_9763 = func_9762_call()
output = call_9763
func_9764 = relay.Function([], output)
mutated_mod['func_9764'] = func_9764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7738_call = mod.get_global_var('func_7738')
func_7740_call = mutated_mod.get_global_var('func_7740')
call_9765 = relay.TupleGetItem(func_7738_call(), 0)
call_9766 = relay.TupleGetItem(func_7740_call(), 0)
output = relay.Tuple([call_9765,])
output2 = relay.Tuple([call_9766,])
func_9770 = relay.Function([], output)
mod['func_9770'] = func_9770
mod = relay.transform.InferType()(mod)
mutated_mod['func_9770'] = func_9770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9770_call = mutated_mod.get_global_var('func_9770')
call_9771 = func_9770_call()
output = call_9771
func_9772 = relay.Function([], output)
mutated_mod['func_9772'] = func_9772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6895_call = mod.get_global_var('func_6895')
func_6896_call = mutated_mod.get_global_var('func_6896')
call_9845 = relay.TupleGetItem(func_6895_call(), 0)
call_9846 = relay.TupleGetItem(func_6896_call(), 0)
output = relay.Tuple([call_9845,])
output2 = relay.Tuple([call_9846,])
func_9862 = relay.Function([], output)
mod['func_9862'] = func_9862
mod = relay.transform.InferType()(mod)
output = func_9862()
func_9863 = relay.Function([], output)
mutated_mod['func_9863'] = func_9863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9712_call = mod.get_global_var('func_9712')
func_9713_call = mutated_mod.get_global_var('func_9713')
call_9874 = relay.TupleGetItem(func_9712_call(), 0)
call_9875 = relay.TupleGetItem(func_9713_call(), 0)
output = call_9874
output2 = call_9875
func_9879 = relay.Function([], output)
mod['func_9879'] = func_9879
mod = relay.transform.InferType()(mod)
mutated_mod['func_9879'] = func_9879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9879_call = mutated_mod.get_global_var('func_9879')
call_9880 = func_9879_call()
output = call_9880
func_9881 = relay.Function([], output)
mutated_mod['func_9881'] = func_9881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mod.get_global_var('func_4103')
func_4105_call = mutated_mod.get_global_var('func_4105')
call_9891 = relay.TupleGetItem(func_4103_call(), 2)
call_9892 = relay.TupleGetItem(func_4105_call(), 2)
output = relay.Tuple([call_9891,])
output2 = relay.Tuple([call_9892,])
func_9896 = relay.Function([], output)
mod['func_9896'] = func_9896
mod = relay.transform.InferType()(mod)
mutated_mod['func_9896'] = func_9896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9896_call = mutated_mod.get_global_var('func_9896')
call_9897 = func_9896_call()
output = call_9897
func_9898 = relay.Function([], output)
mutated_mod['func_9898'] = func_9898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_9915 = func_5918_call()
call_9916 = func_5918_call()
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
const_9923 = relay.const([10,9,-3,-9,6,-7,-1,4,2,1,-2,-2,10,-7,4,10,-7,6,-10,6,-2,4,-7,-9,-4,-6,9,-1,1,-5,-3,3,-6,1,-5,-1,3,10,6,6,2,-8,-2,-2,-8,-10,-10,2,-1,1,3,4,-1,-3,-6,9,-1,-10,6,5,-7,-9,-7,4,-6,-5,8,3,4,6,-3,1,-2,6,-3,5,6,-8,5,-3,8,7,9,-7,6,-4,-8,4,6,-1,-10,10,8,-1,1,-3,-3,-6,10,5,7,-6,4,7,9,8,4,-5,5,7,-9,-6,-1,-5,6,-9,-9,9,5,3,6,1,-9,-2,2,2,-10,-4,-3,-3,8,3,7,1,10,3,-7,-5,1,-3,-9,-6,5,9,10,-8,-2,-8,-7,-10,-4,4,-7,8,-8,-3,-7,-7,1,-2,-6,9,-3,8,7,6,2,1,-1,-7,1,8,-1,2,-9,-2,7,6,10,10,3,-7,6,-4,10,-5,-3,10,-8,-5,9,3,-1,-5,-4,-8,-9,-3,4,1,1,4,-9,-8,-9,3,10,-3,6,10,3,8,-3,-8,-10,-3,-6,-3,-3,1,3,3,3,-2,4,-10,10,-10,1,-1,6,2,-1,7,7,10,-4,-1,9,-6,7,-9,-6,-3,-6,9,-10,-3,5,7,-10,10,-9,2,8,10,-6,4,9,-10,-4,6,10,-5,1,-7,-10,-4,-1,5,-4,5,-6,-1,-8,10,10,6,-7,-4,-2,7,7,-10,-8,8,-2,2,-3,4,6,3,-2,-7,-9,-9,-2,-4,-10,7,-1,-9,-9,-2,-8,2,-2,1,6,-7,6,8,4,7,6,1,-1,4,-5,-10,5,-6,-1,-5,2,-9,-7,6,-9,-5,-9,6,-9,1,7,7,-5,10,-8,2,6,10,-10,-5,1,6,8,-3,-10,-1,6,-8,-8,9,-3,8,4,-5,4,3,-1,9,-9,-4,-5,-8,2,-3,6,6,3,-1,4,1,-5,5,-1,5,7,1,-6,-4,-6,-9,-9,2,-1,-10,8,-2,6,-10,4,-9,7,-2,10,1,2,-6,5,6,-10,10,2,2,-1,-6,-10,-3,-6,9,-2,-10,8,-9,6,10,6,6,2,-5,-2,6,-8,8,8,10,8,6,9,-1,-5,-1,-9,-6,-6,-3,-3,-10,-10,5,-6,9,6,-9,3,10,-1,8,1,-2,-6,-7,4,8,-8,5,9,-7,9,1,-6,-9,-3,6,10,1,2,5,-5,-3,7,8,-10,-2,-3,-3,4,-7,-1,-9,10,7,7,-10,-6,-9,1,-10,2,-1,4,5,8,-5,4,9,3,8,9,-6,2,-9,-1,-5,-2,-10,-10,4,-7,-6,4,-7,-3,-9,-2,7,-8,-9,7,4,10,-6,8,-8,-1,-6,-10,-2,-7,-5,-3,4,-1,10,7,-7,-7,7,3,10,10,8,8,-2,10,5,10,-5,-4,-8,9,8,-8,-1,10,6,-7,9,6,-2,9,-8,-9,-9,-9,6,4,-6,-6,-5,10,6,8,5,-7,8,6,-2,-10,10,1,9,-7,-8,-4,1,4,1,3,4,3,-5,-8,4,9,9,-7,5,-3,-10,4,1,1,8,6,-5,3,-7,-6,-1,2,-6,8,4,-4,10,-8,-6,3,-4,-5,9,8,9,7,-2,9,10,1,9,-10,1,-10,-6,10,-3,10,5,9,5,-3,5,-7,9,10,-1,-7,-8,-1,1,6,-8,-7,8,6,-2,-2,-1,5,-9,8,-3,4,1,8,7,-5,2,-6,9,-8,1,9,1,1,-9,9,3,3,-9,5,5,-8,1,-1,-6,-1,-9,8,-6,-9,8,-5,1,5,1,3,8,-4,9,-1,-4,-1,-5,-4,-10,4,-1,10,-10,-10,-3,-6,-8,3,-8,2,7,7,-6,2,2,-5,8,-4,10,-9,1,-5,-6,6,-1,7,4,1,-5,-6,-9,-1,-6,-5,-1,9,-10,10,-3,1,7,-3,2,-10,4,-3,7,-2,-10,-1,-1,-2,-7,8,-1,3,7,-8,9,-7,4,-10,5,-5,-10,6,9,4,-2,-5,1,10,5,10,-4,8,10,-8,-9,10,9,3,-5,3,1,-10,-5,4,-8,3,3,7,-9,-8,8,-10,-7,-7,3,-2,8,-9,-4,-5,9,-2,1,-6,6,1,-4,-3,5,5,-9,-2,-9,-10,-4,-3,2,5,-7,-4,-5,-1,7,1,-5,9,1,1,-2,3,5,-9,3,2,7,5,10,-2,-1,8,9,-9,9,-2,-10,-7,3,4,1,8,-2,9,-10,-1,-6,-4,-6,-7,3,-6,-4,-2,8,-5,-3,-7,7,-9,9,-7,-10,-9,-5,1,-4,5,-1,-7,2,-10,-6,-10,-2,-9,10,5,-10,-6,9,-5,6,4,-6,6,2,4,10,-10,-2,5,-6,2,5,1,5,8,5,-7,-3,-10,9,-5,-8,3,-6,4,9,10,-3,-9,-6,-10,-10,-3,-1,2,-6,1,3,-6,4,-3,-7,8,-3,-8,5,1,6,8,10,9,8,2,6,2,-7,5,-7,3,10,-10,-1,10,-6,7,10,-2,6,10,1,1,9,3,9,-8,9,-5,9,-8,-6,1,-10,4,8,-5,-8,-8,-2,-4,6,1,-10,-6,2,5,10,3,2,4,-3,-8,5,9,6,-8,5,-10,6,5,-1,-3,8,-10,3,-8,-3,9,-2,-5,2,-3,-3,-4,-10,-4,-1,3,-2,10,5,2,-6,-5,-1,-9,4,-2,6,5,-6,8,-7,-5,-3,6,2,-7,-1,7,3,-5,-9,-5,2,2,8,-3,2,-5,4,-5,1,5,4,-2,-9,5,3,-2,9,-4,3,-3,-7,9,10,-8,-6,3,-4,-9,3,10,4,-2,7,10,-3,-4,-1,-2,9,-4,-2,6,-3,8,9,-5,-3,3,-2,9,-8,-8,7,2,9,-2,-4,-6,3,6,-5,6,7,-7,4,6,10,-1,-5,5,-10,6,5,-4,7,2,-10,-7,8,5,9,-4,-9,-6,-7,-8,-5,-2,6,1,-5,-3,-1,-1,6,3,-9,-2,9,3,-8,4,7,6,-9,7,1,-8,-4,-3,4,4,2,-4,-6,8,1,-9,-5,4,-3,-9,-2,-7,5,5,-6,7,-8,1,-9,8,-1,8,6,-2,-2,-3,10,-3,2,6,-8,5,3,10,5,2,6,1,-2,1,6,2,-8,8,-2,7,7,-6,10,-10,5,-10,-4,5,4,1,1,-3,-8,-8,-7,-2,9,-3,-3,1,-7,-1,1,-8,-1,4,-2,-1,-10,-3,-4,-1,3,9,9,6,-2,-8,10,-8,4,-4,-9,-1,6,5,-6,-2,-2,-7,-2,8,9,-6,3,1,-6,-6,-10,3,8,5,-6,-7,9,-7,6,-4,3,-3,6,4,8,8,-6,5,10,-1,6,-3,9,-5,-9,-9,3,-1,-7,2,6,7,-2,5,2,-8,-4,-5,-5,10,-1,6,-5,2,3,-1,-5,-8,-1,-9,-1,-5,-10,-9,-1,8,-10,-6,3,-8,6,-5,8,-8,-8,-5,-5,-5,-1,1,5,-3,-8,-1,9,-9,-1,-5,-8,9,1,-5,4,-3,-4,6,8,6,8,-6,9,3,-10,8,-1,-1,2,-1,8,1,10,3,5,-3,9,4,-7,-5,-5,-2,-1,-1,3,-9,-7,6,6,-5,-1,7,-10,-5,8,-3,-4,-1,9,5,-5,-4,-5,-10,-10,-3,7,-10,-9,-3,4,9,-2,2,-4,5,1,2,2,6,-8,4,9,2,8,4,-3,9,-5,9,9,-9,-5,-8,-4,8,3,9,5,-9,-1,2,-8,-1,3,-2,-4,-3,-3,-6,5,-3,6,-10,5,2,2,2,-9,3,-3,-4,-8,-9,-8,-2,-1,-1,4], dtype = "uint64")#candidate|9923|(1470,)|const|uint64
const_9924 = relay.const([1.763991,-5.704988,9.436469,-9.372498,1.465225,0.962921,-3.750127,5.913150,7.423151,-5.376429,-6.441528,1.877860,1.464291,6.524954,-1.178001,6.869431,3.689119,8.862323,0.514722,-0.218594,3.588961,2.613670,1.829957,4.616689,-0.483770,-8.844802,6.211584,-0.459351,-8.234646,3.383895,-7.330650,2.808758,8.082009,-6.558336,-6.994204,8.348012,-3.597429,7.157326,3.612619,-1.906537,-9.635333,-1.200994,-3.571736,-0.935670,5.584350,-8.155444,7.825712,8.855817,-4.102807,1.440017,-7.124825,-7.466758,0.832262,-3.850689,5.444442,-3.093087,9.979129,8.081126,5.383404,7.610667,-1.180710,-2.931773,4.169165,-5.103018,4.484087,-4.279003,-5.797274,-8.667266,0.464815,-8.833043,-4.248122,-2.707307,3.244382,5.822884,-1.362642,2.068038,-5.953851,-6.569160,4.321776,-9.721419,-4.011249,-1.318329,7.359760,-3.296402,4.128190,0.380832,5.976740,-2.037444,-9.709179,5.486215,-3.063169,5.466685,3.931289,-1.003844,-9.697782,7.318489,3.039731,4.801973,5.783667,0.584744,-8.371399,-7.390206,5.214386,-8.890873,-1.027384,-6.339876,5.769070,-2.369302,5.135808,5.371788,8.577390,-3.728949,3.322946,4.631151,5.638973,3.930276,-9.806708,0.619309,-1.523605,4.473860,7.368238,1.456265,3.643283,5.996034,-3.301219,-4.779496,-5.247361,9.569797,-3.826548,-8.359511,0.705766,1.612410,8.386236,8.098343,-8.896823,-4.190831,-8.694796,-7.401152,9.630418,-2.550018,1.689376,0.157166,8.687922,8.067400,-5.957962,1.050991,2.784057,5.039047,2.188412,0.004782,6.359164,-4.943949,1.439486,9.665623,-1.984545,3.690634,-6.955384,6.508863,7.339688,8.767769,-0.788775,5.900767,1.470257,-4.489344,-4.215072,-4.709486,-6.342684,9.206810,-6.087045,-7.193534,2.494714,-1.484991,3.375210,7.329056,-8.466993,-1.427909,-8.815310,-8.404766,-8.537613,-3.266682,-8.452327,-5.153862,9.377944,1.970857,-8.746480,1.048531,5.802786,3.067359,1.026476,1.278159,5.892843,0.384124,8.877997,2.036690,-0.026060,-6.202181,-1.648160,5.619277,5.019466,5.964835,3.644411,1.652323,-1.700251,0.162869,0.029467,9.550490,-2.008358,-5.144510,5.913552,2.874235,-6.398274,-3.080727,-3.368454,-9.312924,-0.763976,5.460767,-5.755756,-1.687546,3.887380,8.534876,-1.440276,0.526680,2.297932,7.732663,6.118956,-1.587392,-1.248931,-6.116082,5.306121,-7.750863,0.159503,7.838496,-9.600955,-9.682115,2.646673,1.788255,6.678308,-7.214817,-6.574708,9.155631,-1.192960,1.001373,-3.381931,5.437241,4.440635,-4.197810,6.531109,-6.214924,6.823125,6.534092,-1.901390,5.687194,9.784237,-0.370217,3.836671,8.914237,-2.366747,-4.772516,-3.155068,-7.065755,-2.687016,-2.177676,-4.855224,9.268984,-7.434233,-4.320518,2.218367,-9.065257,9.109909,2.216482,-0.022257,-0.594621,3.525803,4.693805,-7.691837,6.265836,-0.207145,-3.877896,7.643799,8.439679,-6.930121,-6.097736,3.973607,-3.370661,-0.133575,2.069695,-6.813747,2.221810,-1.201690,8.461338,-0.328443,8.670750,6.036252,6.599611,-4.235218,-8.419130,-4.199299,-5.435072,7.443858,-0.999163,-6.902069,-2.060086,0.727010,5.970560,-6.523858,-4.317336,8.244695,-7.805360,7.608393,5.384613,-5.844107,-5.692605,0.128742,-9.864938,1.446204,-9.977900,-4.373889,-9.027088,-8.211744,3.124692,-2.593250,9.425761,-6.973485,-9.031957,7.813050,2.329065,3.052968,-2.918758,-0.296880,5.659313,1.406841,-8.793585,-3.700297,3.634444,-8.857875,-6.491258,-8.990091,-6.025050,0.885608,-1.440603,4.209707,-2.022089,3.947472,4.643619,7.600929,7.015547,-7.591297,-1.572495,-9.928837,7.328491,-3.275382,2.307696,2.577567,1.478640,7.909299,7.697084,5.154826,4.644512,-8.602305,3.652678,-1.610435,-7.324488,-9.921972,7.277524,-0.677589,2.193617,-9.562136,3.452756,-7.574759,-3.462613,-0.556792,-9.523729,4.396791,-1.951133,-2.569732,3.922120,-8.469084,4.854156,-2.089376,4.446354,7.797498,-1.529321,0.853413,9.441469,-5.762851,6.296804,3.975358,6.863626,-6.532405,-2.322895,6.146460,3.987801,6.707903,-8.674836,9.801900,-0.857595,-1.429667,6.858275,-1.964782,2.939577,-7.629735,0.112720,7.444819,3.240574,-0.706360,-1.601854,4.304314,0.852247,0.765776,1.956895,3.595241,5.804335,-1.468560,-2.205757,-5.040601,8.912228,-4.686823,-1.365647,6.701390,7.315894,-1.339080,8.708503,3.064660,-3.172309,-2.938162,-7.073403,-0.736979,5.731838,-0.164177,7.071076,-8.206483,1.461976,-6.143328,-5.784053,2.044753,7.964247,4.162376,-4.322896,-0.463681,9.408612,-1.644540,-4.677250,-7.764292,4.262153,7.376089,5.392133,9.032787,9.977360,-0.604825,-1.610168,6.380847,7.195331,-3.197766,-1.539893,0.272107,-5.560527,0.923578,-3.187355,-6.303571,-4.094507,-3.003483,0.518857,-5.733049,0.255746,-4.273598,8.077409,-3.029220,4.750097,-1.794920,1.535085,6.993388,4.685326,-6.219016,-9.287111,4.515077,5.175106,-9.791572,8.761632,8.801445,-3.919565,-4.951576,7.221960,-8.818035,-7.256168,-9.536193,-0.524734,8.172806,-1.844306,8.863777,-7.075931,1.657152,3.338923,9.106252,4.197610,2.316456,-6.884589,0.758441,-9.969089,-3.366783,-6.416701,-9.247134,9.926474,-3.761247,-5.578076,-0.541877,-5.669685,-5.275130,-4.768464,-9.862049,-5.532153,4.926380,-1.538305,-4.474531,-9.012512,2.616194,-4.882668,-6.558788,6.919954,2.477058,-4.797131,-1.779335,-0.283027,-4.416396,-0.580825,-8.902920,3.873659,-8.918764,-5.023087,-4.716653,3.900109,9.230029,-6.700837,6.499189,-9.917574,1.179810,9.600258,7.798200,-5.444137,-1.095582,-4.150459,6.955447,-9.475358,4.832967,-3.754633,4.287434,7.405048,1.401170,-8.567818,0.413441,-6.089004,-5.753899,8.933904,3.869712,1.375985,-6.774687,-0.736777,0.265675,6.950233,4.009767,3.813704,-1.691214,0.771187,-4.497685,-4.028386,-0.595988,-1.048560,-3.965249,-7.862665,8.421789,1.489137,4.410118,2.225928,-0.045801,-3.474024,-8.830026,2.385296,-9.277447,5.931386,-2.948646,4.568025,-1.233582,3.315646,2.568354,-0.549759,-2.070057,-4.468950,2.987298,-6.719369,3.599913,4.370244,-1.785511,-4.068569,3.616043,4.975115,7.594171,-5.344922,-6.601869,2.181931,0.861809,-2.712394,3.932803,5.741245,-3.487328,4.052561,-4.017644,-4.684539,8.745602,-6.109261,-8.657804,-1.303567,-8.382415,2.520477,7.222554,-1.976163,-5.801532,-3.361409,2.787153,-8.953698,3.562400,8.440886,-7.164425,9.910955,-3.054517,-5.917520,9.592361,6.915859,6.092634,9.566871,9.085628,0.530470,-5.683817,1.710158,0.216831,-9.683479,7.881796,4.445153,2.600974,0.708171,-1.825032,-8.967131,2.141335,7.847373,-6.734374,2.923985,-6.046485,8.802111,-7.574813,-7.561969,-6.058188,-6.860582,5.402719,0.468761,-8.828366,-4.121217,-3.759270,0.179885,-5.302660,-8.404961,9.781558,-1.605778,-6.461377,-9.594792,6.884940,-5.953860,1.113401,3.803226,-7.590077,3.047261,-2.119346,2.274024,-4.370475,-7.326312,7.199443,7.195408,-7.092610,-6.230089,7.603686,4.108117,-7.314145,-0.882537,-4.651700,-9.783233,-9.745939,-2.167118,4.684429,4.549344,-1.906177,0.068806,-4.852837,-6.159185,-7.102505,0.034858,9.535478,-9.125072,4.924980,-2.996256,9.326348,-1.378116,-0.835900,-1.163844,0.807256,-7.889128,4.868329,8.421987,-4.854692,-9.634723,3.909610,4.766861,-5.785503,-9.296952,-8.850130,3.188177,5.360339,-4.328290,-9.446253,1.334351,-7.453844,4.925530,3.983805,-3.407769,-4.933090,2.645604,-6.995215,2.112703,-7.730899,-8.184311,-0.179983,-8.531968,-4.514666,0.416541,0.232586,-0.014551,-8.437453,9.776048,-2.698659,-0.783917,-7.848503,-7.595800,-9.457067,7.404322,4.617163,8.612690,-2.530241,1.997184,-5.290125,6.311916,-3.044220,-9.610628,-6.140556,-3.021437,9.055332,0.346210,-6.807483,-6.398790,2.242493,-7.788533,-8.231952,-4.683682,9.971757,2.986863,5.172758,-2.362807,-6.780706,-6.700410,-3.960145,0.124545,0.214250,-3.942164,6.687439,-8.784605], dtype = "float64")#candidate|9924|(770,)|const|float64
call_9922 = relay.TupleGetItem(func_1660_call(relay.reshape(const_9923.astype('uint64'), [15, 14, 7]), relay.reshape(const_9923.astype('uint64'), [15, 14, 7]), relay.reshape(const_9923.astype('uint64'), [15, 14, 7]), relay.reshape(const_9924.astype('float64'), [770,]), ), 3)
call_9925 = relay.TupleGetItem(func_1665_call(relay.reshape(const_9923.astype('uint64'), [15, 14, 7]), relay.reshape(const_9923.astype('uint64'), [15, 14, 7]), relay.reshape(const_9923.astype('uint64'), [15, 14, 7]), relay.reshape(const_9924.astype('float64'), [770,]), ), 3)
output = relay.Tuple([call_9915,call_9922,const_9923,const_9924,])
output2 = relay.Tuple([call_9916,call_9925,const_9923,const_9924,])
func_9935 = relay.Function([], output)
mod['func_9935'] = func_9935
mod = relay.transform.InferType()(mod)
output = func_9935()
func_9936 = relay.Function([], output)
mutated_mod['func_9936'] = func_9936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8872_call = mod.get_global_var('func_8872')
func_8873_call = mutated_mod.get_global_var('func_8873')
call_9971 = func_8872_call()
call_9972 = func_8872_call()
output = relay.Tuple([call_9971,])
output2 = relay.Tuple([call_9972,])
func_9979 = relay.Function([], output)
mod['func_9979'] = func_9979
mod = relay.transform.InferType()(mod)
mutated_mod['func_9979'] = func_9979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9979_call = mutated_mod.get_global_var('func_9979')
call_9980 = func_9979_call()
output = call_9980
func_9981 = relay.Function([], output)
mutated_mod['func_9981'] = func_9981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mod.get_global_var('func_4919')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_9994 = relay.TupleGetItem(func_4919_call(), 0)
call_9995 = relay.TupleGetItem(func_4921_call(), 0)
func_6040_call = mod.get_global_var('func_6040')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_9998 = relay.TupleGetItem(func_6040_call(), 0)
call_9999 = relay.TupleGetItem(func_6041_call(), 0)
output = relay.Tuple([call_9994,call_9998,])
output2 = relay.Tuple([call_9995,call_9999,])
func_10004 = relay.Function([], output)
mod['func_10004'] = func_10004
mod = relay.transform.InferType()(mod)
output = func_10004()
func_10005 = relay.Function([], output)
mutated_mod['func_10005'] = func_10005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6169_call = mod.get_global_var('func_6169')
func_6170_call = mutated_mod.get_global_var('func_6170')
call_10123 = func_6169_call()
call_10124 = func_6169_call()
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_10129 = relay.TupleGetItem(func_4021_call(), 0)
call_10130 = relay.TupleGetItem(func_4022_call(), 0)
func_5576_call = mod.get_global_var('func_5576')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_10131 = relay.TupleGetItem(func_5576_call(relay.reshape(call_10123.astype('bool'), [15, 16, 11])), 0)
call_10132 = relay.TupleGetItem(func_5579_call(relay.reshape(call_10123.astype('bool'), [15, 16, 11])), 0)
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_10133 = relay.TupleGetItem(func_9935_call(), 3)
call_10134 = relay.TupleGetItem(func_9936_call(), 3)
func_9132_call = mod.get_global_var('func_9132')
func_9134_call = mutated_mod.get_global_var('func_9134')
call_10154 = func_9132_call()
call_10155 = func_9132_call()
output = relay.Tuple([call_10123,call_10129,call_10131,call_10133,call_10154,])
output2 = relay.Tuple([call_10124,call_10130,call_10132,call_10134,call_10155,])
func_10162 = relay.Function([], output)
mod['func_10162'] = func_10162
mod = relay.transform.InferType()(mod)
output = func_10162()
func_10163 = relay.Function([], output)
mutated_mod['func_10163'] = func_10163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mod.get_global_var('func_4984')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_10180 = relay.TupleGetItem(func_4984_call(), 1)
call_10181 = relay.TupleGetItem(func_4986_call(), 1)
output = relay.Tuple([call_10180,])
output2 = relay.Tuple([call_10181,])
func_10186 = relay.Function([], output)
mod['func_10186'] = func_10186
mod = relay.transform.InferType()(mod)
mutated_mod['func_10186'] = func_10186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10186_call = mutated_mod.get_global_var('func_10186')
call_10187 = func_10186_call()
output = call_10187
func_10188 = relay.Function([], output)
mutated_mod['func_10188'] = func_10188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9935_call = mod.get_global_var('func_9935')
func_9936_call = mutated_mod.get_global_var('func_9936')
call_10199 = relay.TupleGetItem(func_9935_call(), 3)
call_10200 = relay.TupleGetItem(func_9936_call(), 3)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_10201 = func_5918_call()
call_10202 = func_5918_call()
output = relay.Tuple([call_10199,call_10201,])
output2 = relay.Tuple([call_10200,call_10202,])
func_10206 = relay.Function([], output)
mod['func_10206'] = func_10206
mod = relay.transform.InferType()(mod)
mutated_mod['func_10206'] = func_10206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10206_call = mutated_mod.get_global_var('func_10206')
call_10207 = func_10206_call()
output = call_10207
func_10208 = relay.Function([], output)
mutated_mod['func_10208'] = func_10208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mod.get_global_var('func_4919')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_10254 = relay.TupleGetItem(func_4919_call(), 0)
call_10255 = relay.TupleGetItem(func_4921_call(), 0)
output = relay.Tuple([call_10254,])
output2 = relay.Tuple([call_10255,])
func_10256 = relay.Function([], output)
mod['func_10256'] = func_10256
mod = relay.transform.InferType()(mod)
output = func_10256()
func_10257 = relay.Function([], output)
mutated_mod['func_10257'] = func_10257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7633_call = mod.get_global_var('func_7633')
func_7634_call = mutated_mod.get_global_var('func_7634')
call_10283 = relay.TupleGetItem(func_7633_call(), 2)
call_10284 = relay.TupleGetItem(func_7634_call(), 2)
func_8353_call = mod.get_global_var('func_8353')
func_8354_call = mutated_mod.get_global_var('func_8354')
call_10297 = func_8353_call()
call_10298 = func_8353_call()
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
const_10317 = relay.const([8.723673,-1.486078,7.671088,3.723540,-3.892543,-4.957599,-5.378648,8.789468,6.386383,-5.214952,-8.830463,9.455410,-7.620484,-9.677182,-7.257642,5.544176,-0.453656,4.977607,-0.050660,-8.298161,0.151136,-4.947849,9.152471,-7.903296,6.353795,4.564538,1.144015,-6.988195,-3.341512,8.558140,1.175996,1.961819,-3.409152,3.826737,5.718159,-4.576579,0.222389,-8.920847,-8.724089,5.560406,-2.541617,6.945070,2.658946,3.663529,-3.574375,-7.795080,3.298376,-2.810362,3.243166,-3.880639,1.468709,1.210055,4.280672,-6.996284,-8.242538,6.768072,-3.985448,-9.774040,-5.055187,-5.175403,-9.531108,5.009882,-1.683421,-1.546025,1.255162,-7.035958,4.965983,2.201122,-6.738931,-3.474289,-6.829705,2.898501,8.956591,-4.313943,9.283544,-7.961178,-4.840740,-4.784392,4.516082,-2.751514,8.452119,-0.167610,-5.648865,-9.582081,3.957288,-1.723901,-1.547292,-6.756367,9.792542,-1.334789,6.372083,1.162752,-9.262707,-2.605502,-1.486723,-8.573848,-8.353384,-6.807755,8.165583,0.317917,2.840160,-3.512677,7.109920,6.129065,4.451185,3.094973,1.020796,-8.327080,-6.656407,4.333651,2.147043,5.134433,-2.856259,8.205468,-8.897741,-6.279106,-7.728212,7.143900,-7.985267,-7.500339,-7.596153,-0.665387,-9.410728,1.233471,-1.278039,0.072200,0.387945,8.497973,-8.030529,6.002065,9.603904,0.906196,-4.215086,5.931785,3.677885,-1.706076,5.075070,9.866890,-0.559690,2.508243,-9.734039,-7.843568,9.335636,6.339504,-8.898213,-8.761808,1.112226,4.596249,-8.483031,-8.439731,3.388246,-9.578342,2.351971,-5.364457,-3.998460,-8.136172,2.244720,-0.034121,-9.187263,-2.032743,-6.528149,-0.986433,-3.513100,8.202739,-0.277244,4.731022,6.147025,2.672829,0.472753,-5.675706,8.492479,-7.163749,0.384724,1.054694,1.193028,5.720446,-4.251121,7.074422,1.453170,9.228001,-2.210437,2.402252,-2.348629,-9.052060,4.330221,-3.025995,-4.295252,3.163655,0.666077,8.198052,-3.228433,7.587402,4.031516,-3.914861,6.407246,-3.678858,-4.058110,0.532069,-3.208511,-8.369963,-6.009413,-7.031602,-7.056628,0.061979,-6.807898,-2.003396,0.947391,6.363735,-5.718586,4.900422,-4.225686,8.338156,-9.785175,2.306980,-5.928169,-0.574430,-7.908879,9.665903,-0.493951,9.714693,-5.159303,6.086267,9.299496,-1.118804,-8.068275,7.421793,1.440198,4.114595,-4.102367,3.105673,1.561086,4.407263,-8.673585,-9.366492,8.232442,-5.891849,1.735791,4.739512,-7.242753,-7.225969,-8.077349,7.369448,-4.508904,3.217990,-1.035094,6.008635,-5.174214,1.867641,-9.354102,8.953941,3.943007,7.534073,7.124506,6.529293,-9.201032,2.833810,-6.314368,-8.428969,8.132272,3.608505,-0.642820,2.240427,2.515149,-4.345103,-8.857541,-3.682741,7.395998,-2.983399,-9.334304,-8.668674,9.181070,9.453609,2.383437,-1.340069,7.118691,-3.779924,2.190223,-3.079750,-8.174852,-5.078250,-4.071349,7.844373,-9.736192,7.755019,7.005561,0.851259,2.475583,-5.164434,-6.006809,7.824441,-0.095763,-7.569390,-8.380783,0.309782,0.415798,0.640472,-2.937784,0.157424,7.526722,9.327465,-3.040601,4.194882,-9.951836,-9.460248,8.188706,-7.040347,8.446604,2.554886,-6.805683,0.994214,-6.220153,5.886769,9.674554,9.784305,6.907900,8.164581,0.270939,5.944693,7.189619,-4.905500,-9.574842,-9.785331,9.373621,3.789459,-3.678438,4.007801,7.428779,5.034684,2.505863,7.635812,-4.909117,6.876034,-7.503823,2.343419,-6.716496,-4.211179,-9.116223,5.443561,-6.872277,0.325665,0.417761,3.584668,-7.272604,9.681050,6.405623,-3.506737,7.736155,7.579585,8.710555,4.814244,-9.615277,-4.435756,6.232803,5.038591,-2.011739,-1.707810,6.911629,-3.941513,3.270500,-3.698285,9.341142,-6.737482,-9.880267,-0.190770,-8.971648,7.709712,8.872193,1.780515,9.607761,-3.672952,-7.579866,5.588432,-1.612096,8.449177,8.191396,-7.094291,-2.436888,-1.064933,-4.387334,-7.903727,-3.711845,7.194914,8.415512,-2.583402,1.196861,-6.478479,-7.611303,-5.916627,-6.657123,-2.408994,8.672971,-1.043169,5.906870,-4.790468,7.639226,-9.033762,-0.622146,8.792114,-5.961400,2.933481,-9.283104,3.553548,4.155626,7.307889,7.715404,-7.844913,-9.037606,0.254522,3.371641,2.655011,-6.057788,-0.171289,6.807141,1.630087,-2.441236,-1.010337,-2.581381,6.730795,2.020932,6.967871,-7.857838,8.978025,-6.240262,-8.521636,-3.314908,-2.114499,8.191771,7.518972,-6.755283,-4.386587,1.894840,3.050348,9.521308,-7.414686,7.380693,0.278941,3.453739,-0.272433,4.185630,7.456636,-4.152393,3.715398,-1.825589,9.676461,9.080225,7.467033,-5.159817,-5.253242,2.923554,-6.270384,1.424097,-7.115727,-6.091079,-5.686284,1.197171,7.055594,-0.142174,0.376288,3.047704,7.196358,1.443282,-5.770805,-6.815155,0.469052,3.145016,-0.469053,3.470990,8.109026,-0.671731,-5.286947,0.314351,3.589561,-4.544186,-7.278885,0.813729,-4.013721,3.589883,-0.873754,5.658301,2.749262,7.287775,2.857303,5.521159,-4.001634,0.544231,7.245760,-7.019189,-8.825988,-3.162835,1.979446,-4.110496,-2.962202,-0.951384,3.058519,-0.480991,-9.628013,4.938577,-0.421132,-7.943133,-2.491127,2.133662,-8.979356,-0.234340,-1.379742,6.636873,2.260165,5.958630,7.102028,-3.428683,-2.284014,-5.481096,3.351961,-6.811520,-4.339334,-3.073558,-0.151048,-3.280105,-6.988045,0.478851,5.688976,-6.185111,3.103186,-3.988620,0.551683,1.427081,3.605192,-6.921768,5.009816,5.793069,9.373737,-1.276169,0.711648,-5.686668,-4.379738,3.067149,-8.966591,-9.354197,1.491843,4.536709,2.241606,-0.474633,-5.261557,3.175217,-2.223071,8.982239,4.822873,8.433046,-5.681890,-9.013689,-6.331455,3.554189,1.720488,-2.193030,-5.128870,3.697083,-0.375617,8.275106,-4.926522,7.884607,4.529397,-6.635673,-2.506523,1.699109,4.519070,8.785707,8.365495,-4.646928,-8.456091,-1.753390,-5.048418,8.596886,1.196601,8.653284,6.038328,-2.577805,2.725553,0.495221,1.950137,3.391607,-9.188347,-6.240782,5.118102,-5.455122,1.864751,-9.505411,-7.411400,-1.076070,-2.040379,4.204998,-5.344400,-3.441071,-1.916108,-0.970168,5.174176,-3.320004,-1.768830,1.608681,-1.808039,-8.196694,-0.033363,5.895411,-0.129852,2.635317,-1.970582,-0.522890,-8.315676,-1.496086,9.196463,-8.335640,-3.221688,-8.265294,4.160410,-8.659760,-5.659083,4.434578,-3.900764,4.556005,4.898064,5.388206,-2.899554,-5.694480,0.835819,8.790021,4.388118,5.777894,5.845187,2.993623,3.653387,-0.760500,-6.589303,3.556180,-8.539496,9.359235,1.899750,7.185449,-1.266256,-6.503983,8.892712,-0.449642,-4.367251,-2.099278,-9.567529,-3.105602,-6.604792,3.140320,2.573293,6.089885,6.397386,8.264199,3.570671,-3.721510,-8.832775,3.509285,7.850401,5.944166,4.716380,3.642089,7.213981,-9.864253,-9.695119,-3.044173,-2.682343,1.160358,-9.497156,-1.147914,-6.269097,0.772063,7.532097,-9.753390,3.851370,-5.158344,7.944064,-1.445706,-3.035807,-8.497647,-7.065161,-8.733832,-2.500037,-2.235113,-1.253344,3.558230,-7.837632,5.155233,8.192206,-3.312600,1.152681,-4.499001,-7.149968,1.141392,8.036042,1.414389,-5.516871,-7.899964,4.335690,0.276609,0.608939,-0.468434,-8.931932,9.543772,0.863325,-6.334403,9.901414,-8.318307,9.690457,-0.662489,7.648161,-9.514954,3.427775,3.208316,5.303507,-5.966740,5.491833,-4.370348,-2.996672,5.714128,7.732296,8.940069,-2.906381,-9.945371,9.424662,-9.049618,-8.119408,9.711546,1.054774,5.120580,4.328284,4.317066,-0.090045,-1.839619,-6.560430,5.017773,9.796760,-9.579680,-8.591982,1.265472,6.585443,-9.878399,-6.889111,1.104153,-1.182396,3.203295,-0.063854,-1.254311,-1.157689,1.487634,7.618542,3.207984,5.464084,-2.924640,-5.475926,-2.187806,-8.868083,-0.736928,-9.461759,-3.774361,-2.981149,-8.257933,4.677181,7.438399,-6.446951,-3.682864,5.805156,-0.431960,5.387452,-1.716646,7.187539,3.626033,-2.516748,-3.905982,2.615007,6.691337,-3.426508,-1.882707,6.779728,-0.110039,-0.868762,0.863140,-2.851626,1.992463,-2.269643,4.624852,-0.472363,6.259936,-8.729106,3.342961,9.573790,0.801996,-3.659641,1.057848,-0.064449,9.172891,-2.118108,-4.191560,0.567338,-3.148362,-5.282148,0.103458,-5.539944,6.779886,-6.268523,-3.569650,7.358270,-8.165023,5.207606,4.782389,8.137336,-2.984615,9.783627,-3.472340,-4.049440,4.283010,-2.301910,7.651944,4.913029,-8.881231,5.936888,2.494856,-2.193899,9.766114,8.615936,5.915138,2.595030,-4.159088,9.856275,5.672384,6.782843,-6.244754,5.474148,-1.701018,-8.127922,5.620973,2.527823,-3.455113,-0.952917,3.219206,8.173488,-3.614546,7.479557,3.606148,7.696591,-0.311320,2.169338,-0.545302,6.930612,-1.109486,3.324780,7.682199,-4.156105,5.722761,3.597089,2.238558,8.812655,-2.120958,-6.685966,5.611757,-2.417920,3.949644,-7.464098,9.760034,-5.997233,2.491174,8.163590,2.542364,4.869631,-5.497688,0.349407,0.779673,7.459418,5.069698,5.851784,6.886206,3.564050,-4.765577,-8.611543,1.821954,1.158110,2.253171,7.798563,-8.605245,2.724329,-7.483040,-1.955939,5.107436,0.634265,-0.800781,-4.071424,-5.638466,-4.017806,9.305267,-4.965589,8.445023,-1.747137,-9.672063,8.631179,-8.845823,4.591452,-8.128922,-5.574908,7.430092,-5.765722,-0.063833,3.063100,-7.325747,5.671262,2.225503,-4.463306,7.168607,1.598064,4.060850,7.910095,1.747212,-0.971687,-5.059372,7.797241,-4.600465,4.682932,-6.555059,6.918608,-4.307465,0.334515,4.799980,9.888524,-3.800876,-4.968774,4.407901,4.570733,6.550393,-3.949130,-3.168945,4.028458,-5.486729,7.175141,-5.758429,5.082833,-8.289764,-9.870643,9.424230,-7.272310,-2.511034,8.889343,-9.798832,-0.877553,-3.353035,-4.686863,-7.472977,2.085948,-1.256194,-8.353045,0.834465,-2.700885,-3.165721,1.456746,-4.576381,5.742293,6.044127,-2.930833,6.729052,4.079551,-5.313702,-4.811920,1.868921,0.185480,-5.357933,-9.128013,9.018500,2.234979,6.889763,0.592814,0.582104,-3.957947,3.964355,-2.740946,2.034110,-7.824714,3.031964,2.987116,-0.542277,8.863610,-5.901284,7.714742,-0.791870,3.159835,9.776650,5.857461,5.887500,2.384700,-8.189946,3.599125,7.872475,4.962069,-5.724741,-8.560585,9.810096,2.892315,4.284981,-4.473965,-9.369398,-9.500804,-1.157138,-9.704429,7.504422,2.744441,3.229434,-2.951778,-6.354303,-5.493510,-8.855950,-7.952804,-2.275734,4.156045,-8.141402,7.820344,3.850629,-8.503783,9.052111,5.178032,7.545041,-0.772109,4.408081,8.127058,9.077651,-0.871006,-3.182531,1.891031,-0.899405,7.866722,-9.056823,9.172623,-2.943170,-3.417274,-8.676932,-8.622723,-4.684808,3.978454,2.914672,6.207537,-5.900032,-1.349120,-6.124082,5.091097,-6.372414,3.821330,5.121865,-5.566963,0.019985,9.989336,-1.615184,3.812366,-8.908435,-5.638185,0.333374,-5.657458,9.919163,5.122913,9.665474,0.635187,4.787215,-0.322464,2.257939,-0.900769,8.559341,8.466944,2.261996,-6.755762,4.006148,-5.312633,0.561567,-7.317743,8.551535,-2.954470,-9.881036,8.022808,5.120732,-6.192159,-2.322525,6.982746,-8.357304,-9.241999,0.014954,8.702947,3.071372,0.466628,6.445733,-6.240776,5.484816,5.459562,-9.445990,0.031300,-5.775621,-7.290008,-0.978499,8.688793,-2.650474,1.783580,-4.261840,-8.883623,-8.996288,-3.345469,6.811870,-8.024106,-1.762521,-1.075701,-8.007997,-6.807040,6.518167,-2.716838,-5.495211,-9.598937,9.170236,-9.724522,4.802260,8.172992,-0.958935,6.820054,-3.747654,4.684832,4.989883,6.430895,0.873583,-5.016238,3.878542,4.853600,-4.142745,-4.249070,0.619987,-4.877513,-1.196299,-1.559941,8.096595,-5.936373,2.465252,-3.558625,-4.770672,5.413072,0.365785,-4.505565,-7.497484,-4.200740,-4.151672,-8.859937,5.381526,-0.885930,-8.819141,9.579422,-4.248798,-3.853094,6.904401,-7.374512,-8.665662,1.748513,8.276370,-2.143922,5.506937,2.594237,-8.477927,6.836725,-8.340998,1.737716,-6.482979,-1.847520,-0.583931,4.705846,-5.709957,4.058149,6.728682,-7.687460,1.413998,-1.270487,-3.899536,-8.564859,6.366200,-1.815857,5.129110,-0.148065,-7.381355,-2.861551,7.249176,-5.232988,5.282050,5.184029,1.529627,0.756189,-3.063354,0.355648,3.271295,2.001227,-2.085538,-0.694431,3.217471,5.132585,-8.474175,7.777670,8.347497,9.769771,4.902778,3.214515,-3.767186,6.955173,-1.141232,9.731722], dtype = "float64")#candidate|10317|(1200,)|const|float64
call_10316 = func_4407_call(relay.reshape(const_10317.astype('float64'), [10, 10, 12]))
call_10318 = func_4407_call(relay.reshape(const_10317.astype('float64'), [10, 10, 12]))
func_6125_call = mod.get_global_var('func_6125')
func_6126_call = mutated_mod.get_global_var('func_6126')
call_10319 = relay.TupleGetItem(func_6125_call(), 0)
call_10320 = relay.TupleGetItem(func_6126_call(), 0)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_10337 = func_2248_call()
call_10338 = func_2248_call()
output = relay.Tuple([call_10283,call_10297,call_10316,const_10317,call_10319,call_10337,])
output2 = relay.Tuple([call_10284,call_10298,call_10318,const_10317,call_10320,call_10338,])
func_10355 = relay.Function([], output)
mod['func_10355'] = func_10355
mod = relay.transform.InferType()(mod)
mutated_mod['func_10355'] = func_10355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10355_call = mutated_mod.get_global_var('func_10355')
call_10356 = func_10355_call()
output = call_10356
func_10357 = relay.Function([], output)
mutated_mod['func_10357'] = func_10357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8866_call = mod.get_global_var('func_8866')
func_8868_call = mutated_mod.get_global_var('func_8868')
call_10369 = func_8866_call()
call_10370 = func_8866_call()
func_2963_call = mod.get_global_var('func_2963')
func_2964_call = mutated_mod.get_global_var('func_2964')
call_10374 = func_2963_call()
call_10375 = func_2963_call()
func_10186_call = mod.get_global_var('func_10186')
func_10188_call = mutated_mod.get_global_var('func_10188')
call_10385 = relay.TupleGetItem(func_10186_call(), 0)
call_10386 = relay.TupleGetItem(func_10188_call(), 0)
func_5679_call = mod.get_global_var('func_5679')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_10399 = relay.TupleGetItem(func_5679_call(), 0)
call_10400 = relay.TupleGetItem(func_5680_call(), 0)
output = relay.Tuple([call_10369,call_10374,call_10385,call_10399,])
output2 = relay.Tuple([call_10370,call_10375,call_10386,call_10400,])
func_10415 = relay.Function([], output)
mod['func_10415'] = func_10415
mod = relay.transform.InferType()(mod)
output = func_10415()
func_10416 = relay.Function([], output)
mutated_mod['func_10416'] = func_10416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_10430 = relay.TupleGetItem(func_7323_call(), 0)
call_10431 = relay.TupleGetItem(func_7324_call(), 0)
func_4882_call = mod.get_global_var('func_4882')
func_4885_call = mutated_mod.get_global_var('func_4885')
var_10457 = relay.var("var_10457", dtype = "float32", shape = (260,))#candidate|10457|(260,)|var|float32
call_10456 = relay.TupleGetItem(func_4882_call(relay.reshape(var_10457.astype('float32'), [13, 2, 10])), 0)
call_10458 = relay.TupleGetItem(func_4885_call(relay.reshape(var_10457.astype('float32'), [13, 2, 10])), 0)
output = relay.Tuple([call_10430,call_10456,var_10457,])
output2 = relay.Tuple([call_10431,call_10458,var_10457,])
func_10459 = relay.Function([var_10457,], output)
mod['func_10459'] = func_10459
mod = relay.transform.InferType()(mod)
mutated_mod['func_10459'] = func_10459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10460 = relay.var("var_10460", dtype = "float32", shape = (260,))#candidate|10460|(260,)|var|float32
func_10459_call = mutated_mod.get_global_var('func_10459')
call_10461 = func_10459_call(var_10460)
output = call_10461
func_10462 = relay.Function([var_10460], output)
mutated_mod['func_10462'] = func_10462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9879_call = mod.get_global_var('func_9879')
func_9881_call = mutated_mod.get_global_var('func_9881')
call_10481 = func_9879_call()
call_10482 = func_9879_call()
func_1660_call = mod.get_global_var('func_1660')
func_1665_call = mutated_mod.get_global_var('func_1665')
var_10489 = relay.var("var_10489", dtype = "uint64", shape = (1470,))#candidate|10489|(1470,)|var|uint64
var_10490 = relay.var("var_10490", dtype = "float64", shape = (770,))#candidate|10490|(770,)|var|float64
call_10488 = relay.TupleGetItem(func_1660_call(relay.reshape(var_10489.astype('uint64'), [15, 14, 7]), relay.reshape(var_10489.astype('uint64'), [15, 14, 7]), relay.reshape(var_10489.astype('uint64'), [15, 14, 7]), relay.reshape(var_10490.astype('float64'), [770,]), ), 0)
call_10491 = relay.TupleGetItem(func_1665_call(relay.reshape(var_10489.astype('uint64'), [15, 14, 7]), relay.reshape(var_10489.astype('uint64'), [15, 14, 7]), relay.reshape(var_10489.astype('uint64'), [15, 14, 7]), relay.reshape(var_10490.astype('float64'), [770,]), ), 0)
func_2519_call = mod.get_global_var('func_2519')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_10496 = relay.TupleGetItem(func_2519_call(), 0)
call_10497 = relay.TupleGetItem(func_2520_call(), 0)
func_5093_call = mod.get_global_var('func_5093')
func_5095_call = mutated_mod.get_global_var('func_5095')
call_10513 = relay.TupleGetItem(func_5093_call(relay.reshape(var_10490.astype('float64'), [770, 1])), 1)
call_10514 = relay.TupleGetItem(func_5095_call(relay.reshape(var_10490.astype('float64'), [770, 1])), 1)
func_6942_call = mod.get_global_var('func_6942')
func_6944_call = mutated_mod.get_global_var('func_6944')
call_10528 = func_6942_call()
call_10529 = func_6942_call()
bop_10536 = relay.less_equal(call_10488.astype('bool'), relay.reshape(var_10489.astype('bool'), relay.shape_of(call_10488))) # shape=(15, 14, 7)
bop_10539 = relay.less_equal(call_10491.astype('bool'), relay.reshape(var_10489.astype('bool'), relay.shape_of(call_10491))) # shape=(15, 14, 7)
func_4004_call = mod.get_global_var('func_4004')
func_4007_call = mutated_mod.get_global_var('func_4007')
var_10541 = relay.var("var_10541", dtype = "uint16", shape = (720,))#candidate|10541|(720,)|var|uint16
call_10540 = relay.TupleGetItem(func_4004_call(relay.reshape(var_10541.astype('uint16'), [360, 2])), 2)
call_10542 = relay.TupleGetItem(func_4007_call(relay.reshape(var_10541.astype('uint16'), [360, 2])), 2)
func_7922_call = mod.get_global_var('func_7922')
func_7925_call = mutated_mod.get_global_var('func_7925')
const_10545 = relay.const([-6.596695,-2.561913,-3.679788,0.070941,-3.627920,9.397627,-1.295906,0.963220,-8.754107,7.996958,-9.311760,8.114068,-2.461739,3.308049,-7.430334,-5.163327,3.104256,-5.507193,-5.907970,-9.653953,-7.946553,-9.737124,6.360573,-3.142125,-0.307631,8.878035,-3.186038,7.970768,0.618145,6.819998,1.030713,-8.957360,-1.306974,-3.935181,4.650995,-0.436337,7.357360,-2.150945,-3.178162,-2.213548,-1.448447,4.554162,1.579496,4.810510,-6.368078,-1.418387,-3.853964,-0.121068,-5.175680,-6.691014,0.020516,9.831659,1.846910,0.637659,-4.206437,-5.886667,7.448339,-9.521585,5.343111,-6.642790,-8.350953,7.902353,1.105612,0.155320,0.251153,1.063511,-3.535754,9.474762,-7.668741,4.134835,-1.334713,-2.322371,-3.420540,-7.621044,-3.836915,4.040646,-8.074506,-6.082681,-3.583076,9.270146,8.769326,6.391540,8.018840,0.990081,7.124770,-7.805005,0.473454,-6.988017,2.177646,3.123332,4.071390,-7.739085,3.128684,0.067852,9.228984,2.337467,-9.021008,-9.512986,2.394391,2.134937,1.220499,6.867192,-1.059431,-7.871623,-1.943989,-3.189122,-5.005080,0.382441,8.850253,1.233469,7.858481,7.652954,4.583971,1.751739,2.915893,-9.779698,7.631242,2.921767,0.627387,6.773870,8.839278,8.440808,1.072821,-0.307957,6.882004,3.785430,-5.427695,-4.448841,-5.029489,5.988997,0.889269,-7.572403,1.410318,-3.748866,0.443598,-2.721156,8.102155,-1.145074,5.608799,3.090708,5.204126,3.312038,1.572228,0.292168,-0.410591,-1.201199,-3.492486,-5.453296,-7.615470,-4.069791,-3.236366,2.909946,-9.347730,-7.623183,-6.436838,1.607707,-4.182532,3.178489,-6.830960,-4.775937,7.660923,-5.917984,0.199956,9.614397,-8.501219,-7.072833,3.274112,-4.843037,3.279509,7.928649,9.016442,1.426491,0.384641,4.824226,-6.626128,-2.902285,-2.676133,8.505796,0.788792,-9.098553,1.034914,3.552524,-7.284328,-6.955690,-0.344821,5.966038,-6.354589,-9.654821,4.168761,-5.212744,3.517417,-4.274830,5.682319,8.979967,-3.749078,-9.999444,-2.288651,-2.746376,-5.117610,1.640816,-9.984921,-9.031183,0.672258,4.982723,-9.811323,-2.974621,-2.952232,-3.674697,7.676607,6.449631,8.255578,8.450561,5.759182,-1.536194,-9.399319,-0.512270,-8.088189,-6.122695,3.776613,-0.285230,6.483769,5.617509,3.927574,8.595136,-7.968686,7.112282,1.406363,5.862572,-5.771871,-0.754910,5.405090,-5.019004,5.366762,-6.480128,-1.187015,-6.902986,1.991004,9.113584,9.705747,0.389640], dtype = "float64")#candidate|10545|(240,)|const|float64
call_10544 = relay.TupleGetItem(func_7922_call(relay.reshape(const_10545.astype('float64'), [3, 8, 10]), relay.reshape(const_10545.astype('float64'), [3, 8, 10]), ), 0)
call_10546 = relay.TupleGetItem(func_7925_call(relay.reshape(const_10545.astype('float64'), [3, 8, 10]), relay.reshape(const_10545.astype('float64'), [3, 8, 10]), ), 0)
func_4657_call = mod.get_global_var('func_4657')
func_4659_call = mutated_mod.get_global_var('func_4659')
call_10560 = relay.TupleGetItem(func_4657_call(), 0)
call_10561 = relay.TupleGetItem(func_4659_call(), 0)
output = relay.Tuple([call_10481,var_10490,call_10496,call_10513,call_10528,bop_10536,call_10540,var_10541,call_10544,const_10545,call_10560,])
output2 = relay.Tuple([call_10482,var_10490,call_10497,call_10514,call_10529,bop_10539,call_10542,var_10541,call_10546,const_10545,call_10561,])
func_10568 = relay.Function([var_10489,var_10490,var_10541,], output)
mod['func_10568'] = func_10568
mod = relay.transform.InferType()(mod)
var_10569 = relay.var("var_10569", dtype = "uint64", shape = (1470,))#candidate|10569|(1470,)|var|uint64
var_10570 = relay.var("var_10570", dtype = "float64", shape = (770,))#candidate|10570|(770,)|var|float64
var_10571 = relay.var("var_10571", dtype = "uint16", shape = (720,))#candidate|10571|(720,)|var|uint16
output = func_10568(var_10569,var_10570,var_10571,)
func_10572 = relay.Function([var_10569,var_10570,var_10571,], output)
mutated_mod['func_10572'] = func_10572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6620_call = mod.get_global_var('func_6620')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_10614 = relay.TupleGetItem(func_6620_call(), 0)
call_10615 = relay.TupleGetItem(func_6621_call(), 0)
output = relay.Tuple([call_10614,])
output2 = relay.Tuple([call_10615,])
func_10623 = relay.Function([], output)
mod['func_10623'] = func_10623
mod = relay.transform.InferType()(mod)
output = func_10623()
func_10624 = relay.Function([], output)
mutated_mod['func_10624'] = func_10624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7633_call = mod.get_global_var('func_7633')
func_7634_call = mutated_mod.get_global_var('func_7634')
call_10625 = relay.TupleGetItem(func_7633_call(), 2)
call_10626 = relay.TupleGetItem(func_7634_call(), 2)
output = relay.Tuple([call_10625,])
output2 = relay.Tuple([call_10626,])
func_10629 = relay.Function([], output)
mod['func_10629'] = func_10629
mod = relay.transform.InferType()(mod)
mutated_mod['func_10629'] = func_10629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10629_call = mutated_mod.get_global_var('func_10629')
call_10630 = func_10629_call()
output = call_10630
func_10631 = relay.Function([], output)
mutated_mod['func_10631'] = func_10631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8148_call = mod.get_global_var('func_8148')
func_8150_call = mutated_mod.get_global_var('func_8150')
call_10648 = func_8148_call()
call_10649 = func_8148_call()
output = relay.Tuple([call_10648,])
output2 = relay.Tuple([call_10649,])
func_10682 = relay.Function([], output)
mod['func_10682'] = func_10682
mod = relay.transform.InferType()(mod)
mutated_mod['func_10682'] = func_10682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10682_call = mutated_mod.get_global_var('func_10682')
call_10683 = func_10682_call()
output = call_10683
func_10684 = relay.Function([], output)
mutated_mod['func_10684'] = func_10684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10766 = relay.var("var_10766", dtype = "int32", shape = (16, 15, 16))#candidate|10766|(16, 15, 16)|var|int32
var_10767 = relay.var("var_10767", dtype = "int32", shape = (16, 15, 16))#candidate|10767|(16, 15, 16)|var|int32
bop_10768 = relay.left_shift(var_10766.astype('int32'), relay.reshape(var_10767.astype('int32'), relay.shape_of(var_10766))) # shape=(16, 15, 16)
uop_10778 = relay.log10(var_10766.astype('float32')) # shape=(16, 15, 16)
func_7669_call = mod.get_global_var('func_7669')
func_7671_call = mutated_mod.get_global_var('func_7671')
var_10795 = relay.var("var_10795", dtype = "int32", shape = (1089,))#candidate|10795|(1089,)|var|int32
call_10794 = func_7669_call(relay.reshape(var_10795.astype('int32'), [11, 11, 9]))
call_10796 = func_7669_call(relay.reshape(var_10795.astype('int32'), [11, 11, 9]))
uop_10797 = relay.cosh(bop_10768.astype('float32')) # shape=(16, 15, 16)
output = relay.Tuple([uop_10778,call_10794,var_10795,uop_10797,])
output2 = relay.Tuple([uop_10778,call_10796,var_10795,uop_10797,])
func_10799 = relay.Function([var_10766,var_10767,var_10795,], output)
mod['func_10799'] = func_10799
mod = relay.transform.InferType()(mod)
mutated_mod['func_10799'] = func_10799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10799_call = mutated_mod.get_global_var('func_10799')
var_10801 = relay.var("var_10801", dtype = "int32", shape = (16, 15, 16))#candidate|10801|(16, 15, 16)|var|int32
var_10802 = relay.var("var_10802", dtype = "int32", shape = (16, 15, 16))#candidate|10802|(16, 15, 16)|var|int32
var_10803 = relay.var("var_10803", dtype = "int32", shape = (1089,))#candidate|10803|(1089,)|var|int32
call_10800 = func_10799_call(var_10801,var_10802,var_10803,)
output = call_10800
func_10804 = relay.Function([var_10801,var_10802,var_10803,], output)
mutated_mod['func_10804'] = func_10804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10809 = relay.var("var_10809", dtype = "int32", shape = (5, 9, 9))#candidate|10809|(5, 9, 9)|var|int32
const_10810 = relay.const([[[2,-8,9,-2,-5,5,-4,3,-4],[3,-3,7,-9,7,8,6,9,-7],[-2,-1,-1,3,9,-1,2,8,-9],[9,10,4,1,-8,-5,-9,5,-4],[-4,-2,-2,7,6,-9,8,5,-6],[-6,10,-7,10,-4,4,9,-4,3],[3,9,-3,6,-10,1,-9,-1,10],[8,4,5,9,-5,5,8,-8,-9],[9,6,6,3,4,-6,4,6,-5]],[[5,7,6,10,1,-3,2,-6,9],[-6,7,10,6,-9,-1,5,6,-8],[3,-6,-7,-5,-9,7,-10,2,-3],[-5,8,1,-6,-7,-6,7,-4,-4],[-4,-10,-7,-2,-10,-8,-9,-9,-7],[-6,9,-7,10,-6,1,-5,-8,-7],[-2,4,3,4,-5,1,-5,4,10],[-9,-9,5,5,-2,-5,-8,8,-8],[5,5,6,1,2,-5,9,5,1]],[[6,7,8,9,-8,9,-7,9,4],[7,5,1,4,-6,-7,-8,-2,3],[7,-8,-8,-3,1,7,5,1,5],[-2,1,7,-4,1,10,-9,-7,-1],[6,-7,6,-2,-8,-3,-4,-2,-4],[3,4,5,9,2,-1,-10,-7,-3],[3,-5,10,-3,-4,9,6,5,5],[7,-2,-9,-1,9,8,-2,9,3],[5,2,-3,-7,-3,2,-2,10,-5]],[[8,-10,4,9,10,-3,-7,-8,-10],[-2,-1,-3,10,1,1,1,-2,8],[-10,3,-7,2,7,-3,-3,7,-9],[-9,6,-9,8,8,-2,9,5,3],[-8,-6,-6,-3,-5,5,9,-10,-7],[-3,10,8,-8,-3,9,-5,-10,-2],[-1,7,3,7,-9,-8,8,3,3],[-10,-8,-3,9,-2,10,-9,-8,6],[-10,5,4,8,-5,9,-2,-10,-2]],[[-7,-3,-1,-4,-6,7,-6,-7,-8],[6,-2,-7,-10,10,1,-5,4,-1],[2,5,10,2,-1,-6,-9,-3,3],[3,-10,5,8,2,-7,7,8,7],[-6,-3,7,3,2,-10,7,10,8],[-1,-5,-8,-5,2,-9,-3,-8,-1],[6,3,-2,-6,-8,-10,-4,-5,-5],[-9,-10,-6,-10,3,7,-4,-7,-2],[-2,2,5,-6,-3,7,-2,10,9]]], dtype = "int32")#candidate|10810|(5, 9, 9)|const|int32
bop_10811 = relay.add(var_10809.astype('int32'), relay.reshape(const_10810.astype('int32'), relay.shape_of(var_10809))) # shape=(5, 9, 9)
func_3566_call = mod.get_global_var('func_3566')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_10818 = func_3566_call()
call_10819 = func_3566_call()
func_8077_call = mod.get_global_var('func_8077')
func_8079_call = mutated_mod.get_global_var('func_8079')
call_10821 = relay.TupleGetItem(func_8077_call(), 0)
call_10822 = relay.TupleGetItem(func_8079_call(), 0)
output = relay.Tuple([bop_10811,call_10818,call_10821,])
output2 = relay.Tuple([bop_10811,call_10819,call_10822,])
func_10838 = relay.Function([var_10809,], output)
mod['func_10838'] = func_10838
mod = relay.transform.InferType()(mod)
var_10839 = relay.var("var_10839", dtype = "int32", shape = (5, 9, 9))#candidate|10839|(5, 9, 9)|var|int32
output = func_10838(var_10839)
func_10840 = relay.Function([var_10839], output)
mutated_mod['func_10840'] = func_10840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7187_call = mod.get_global_var('func_7187')
func_7188_call = mutated_mod.get_global_var('func_7188')
call_10858 = relay.TupleGetItem(func_7187_call(), 0)
call_10859 = relay.TupleGetItem(func_7188_call(), 0)
output = call_10858
output2 = call_10859
func_10885 = relay.Function([], output)
mod['func_10885'] = func_10885
mod = relay.transform.InferType()(mod)
mutated_mod['func_10885'] = func_10885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10885_call = mutated_mod.get_global_var('func_10885')
call_10886 = func_10885_call()
output = call_10886
func_10887 = relay.Function([], output)
mutated_mod['func_10887'] = func_10887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7023_call = mod.get_global_var('func_7023')
func_7025_call = mutated_mod.get_global_var('func_7025')
call_10918 = relay.TupleGetItem(func_7023_call(), 1)
call_10919 = relay.TupleGetItem(func_7025_call(), 1)
output = relay.Tuple([call_10918,])
output2 = relay.Tuple([call_10919,])
func_10920 = relay.Function([], output)
mod['func_10920'] = func_10920
mod = relay.transform.InferType()(mod)
mutated_mod['func_10920'] = func_10920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10920_call = mutated_mod.get_global_var('func_10920')
call_10921 = func_10920_call()
output = call_10921
func_10922 = relay.Function([], output)
mutated_mod['func_10922'] = func_10922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6040_call = mod.get_global_var('func_6040')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_10925 = relay.TupleGetItem(func_6040_call(), 0)
call_10926 = relay.TupleGetItem(func_6041_call(), 0)
func_10885_call = mod.get_global_var('func_10885')
func_10887_call = mutated_mod.get_global_var('func_10887')
call_10943 = func_10885_call()
call_10944 = func_10885_call()
output = relay.Tuple([call_10925,call_10943,])
output2 = relay.Tuple([call_10926,call_10944,])
func_10970 = relay.Function([], output)
mod['func_10970'] = func_10970
mod = relay.transform.InferType()(mod)
output = func_10970()
func_10971 = relay.Function([], output)
mutated_mod['func_10971'] = func_10971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8219_call = mod.get_global_var('func_8219')
func_8221_call = mutated_mod.get_global_var('func_8221')
call_10999 = func_8219_call()
call_11000 = func_8219_call()
func_5093_call = mod.get_global_var('func_5093')
func_5095_call = mutated_mod.get_global_var('func_5095')
const_11006 = relay.const([9.367095,-2.199150,-9.613899,-0.023241,-0.282718,2.383028,-1.391206,-9.838203,3.235482,3.958891,-6.376890,-0.017489,5.129733,-4.460294,6.529066,2.611370,-3.722952,7.730780,-2.497909,1.772604,-6.661615,1.147406,5.023259,-4.358378,-3.411874,-3.151872,9.983033,4.995826,0.890225,8.843200,-3.795496,8.848829,6.939499,8.698287,-7.980852,-6.953263,-2.386098,-2.267425,1.129169,-3.931996,-5.989143,3.387644,9.966045,-4.462227,-3.017648,6.134119,-6.378485,3.339309,-3.315751,9.066480,5.919908,3.344768,-5.842680,-2.543079,-2.958804,1.656043,1.377296,-6.873418,9.148930,8.959699,-9.585153,-2.795083,-1.389772,-9.795276,4.004487,7.995132,7.217132,-2.869871,-5.926827,-1.533901,0.594788,-3.726583,-4.884632,-1.315962,6.413653,0.709414,-9.094638,8.684349,7.755935,3.888081,2.491687,-3.843140,6.476410,-9.452874,1.664309,-2.979214,0.350153,6.302982,4.560680,9.725537,-5.016751,5.406702,1.892124,9.205418,-3.596655,2.058463,7.064307,2.888173,-4.403233,5.056611,-8.128202,-5.956526,-9.145034,5.469467,8.442514,-1.610001,2.490838,7.128193,-7.012993,6.910734,8.387250,4.904923,-4.990244,-8.442501,-6.455838,-2.277523,8.853830,-7.973788,4.967004,-5.415797,5.276232,-6.005884,-4.997401,6.362237,-6.104710,0.980887,0.655649,-7.381571,7.610682,-1.379348,-1.583395,-3.911783,4.753419,6.033424,-9.285376,-9.639781,5.386952,-3.717843,-2.441560,-1.320908,8.193299,-6.264891,-1.080515,-1.573426,9.283032,-5.909759,-9.091938,-8.417595,5.347164,-5.683845,5.020691,7.482503,7.514035,-9.718864,7.675187,-1.376967,-8.238919,2.164556,8.868270,1.613479,-5.657173,5.366034,-8.870835,7.655529,8.049643,-9.654527,-4.705663,9.738988,6.579134,7.125056,4.985615,6.839303,-2.584151,-3.993841,7.698337,6.208525,6.047917,-0.006024,-6.796133,-9.657399,0.774973,-2.502901,-2.793284,2.851064,9.837021,2.662058,-9.623772,-2.657026,7.976020,-8.058196,-4.393198,1.806533,-1.953244,-3.639028,7.860548,9.255691,8.949683,-5.838275,3.678721,9.408621,-9.330781,1.760598,-7.247146,9.213608,1.985809,-3.582572,5.642185,8.692650,8.731756,-4.318537,-9.500675,2.091218,2.017938,-0.406818,3.463806,4.606900,-9.647391,-4.668094,5.546772,-4.265892,7.477214,-0.607788,-8.615379,8.648956,9.225463,-2.951877,6.191961,8.809770,7.963618,5.209807,-9.034097,-0.693858,-4.756525,3.374313,2.866027,-9.977414,-0.089627,6.796112,-5.220790,-7.551392,5.786311,-1.849213,-2.576338,0.490520,3.308036,-0.989611,-6.331392,-3.590181,9.987131,-6.631867,1.205602,8.805173,3.292389,9.386669,3.175462,-3.399693,-9.025963,2.095798,-2.931733,2.981497,-4.306048,5.114906,-0.294434,3.069135,7.179080,-3.474121,-1.947854,-5.412731,8.542700,6.432895,9.653196,9.619727,-7.889488,-9.467090,1.092095,-4.789327,2.228897,-5.464665,5.270131,9.569887,3.637937,-7.057952,-8.982499,-9.063210,-3.318032,-5.403604,7.318428,1.281818,2.911724,-2.019446,3.535513,-2.733261,9.812636,9.095971,-9.942388,7.137227,-4.327206,8.281104,5.329387,-6.780930,0.482833,0.923489,-9.326326,3.121056,6.287716,5.378753,-6.408525,8.732556,-6.027652,0.798229,-0.939066,6.898150,-3.263753,0.877228,-6.980318,2.512780,-6.088172,-9.136095,0.479536,-2.708570,0.305611,-3.601769,4.940221,4.306593,-7.564297,-5.139055,-8.309261,3.516507,-8.986054,-9.653841,3.099367,4.349244,-2.927170,-9.302560,0.997618,-7.672547,-1.698445,-1.983123,2.498938,-2.007787,-7.578713,-2.337250,-3.820014,7.104216,-4.324231,3.085185,2.865776,8.319423,-8.732761,-0.576997,8.248235,-7.999948,0.024041,4.108432,0.754633,-1.226945,4.787714,-9.765629,-9.565553,-4.959089,5.000587,-7.496565,-6.622358,-5.288621,-2.148488,-1.930210,-7.848244,1.348268,-8.992546,-2.789614,-4.344150,7.984766,9.584070,7.137696,-2.873350,-5.918440,5.669410,-9.815769,-1.134586,-7.381997,1.994174,-8.150997,-7.674572,1.208456,2.439642,-8.161956,-8.432757,1.251916,6.422083,-0.391927,-6.476231,9.240164,9.111333,-8.292015,-5.028163,-8.157362,1.922142,3.290214,9.497258,-7.806295,-8.461969,-0.875118,1.160185,-4.924545,5.185740,-4.745345,6.181812,4.106536,3.374200,1.387734,6.559205,-6.557635,-0.864600,-7.531785,-1.560596,-9.951814,2.743489,-4.851609,-7.120739,4.773476,5.321316,-5.731214,5.936068,1.250155,0.138415,-1.120719,1.489247,1.109354,1.936280,8.932862,6.067189,-0.200550,-0.522492,9.152059,-7.880828,-4.620507,-9.762434,-5.031638,6.482030,-4.897165,-0.332296,5.118240,4.449304,-7.326870,-3.533383,0.935712,2.900415,-4.871641,-3.268044,0.938414,-4.654552,-6.519956,-9.284952,-0.957137,-1.191622,-4.010913,0.584601,-0.310444,-6.317101,9.204167,-5.381029,-2.109511,6.578425,-7.682997,-5.746305,-2.629757,1.506315,3.251371,5.085572,2.545594,0.780341,9.754640,9.304400,3.656670,-0.123462,-6.253357,0.416239,-1.730268,1.862145,-8.253935,-4.880569,-0.481993,7.975487,3.756738,1.736293,4.301223,-3.295256,-6.046476,-5.191071,-6.847595,-0.524325,-9.179462,1.108459,-7.221882,9.039380,1.381640,3.297371,3.251451,7.468703,-5.771585,-6.865112,7.073572,-5.975115,-9.888594,-7.541834,3.525094,-7.524978,-9.209689,-3.430039,-4.074466,-2.721966,-5.622091,-9.533248,-8.291202,-6.895088,-6.053124,-8.859967,-0.943549,3.007764,-9.174450,7.689608,1.334119,3.762808,1.512772,-4.359060,8.549884,4.019991,2.805245,5.681612,-2.186883,-9.158964,-0.873106,-2.915646,9.505402,-5.448221,3.122027,3.342381,2.130396,7.141395,-5.173077,-5.947387,-0.147748,7.392753,5.668514,3.872400,2.896199,5.136310,7.145031,-3.567076,8.702141,-1.075165,-3.870670,4.644192,-5.691672,-0.665968,3.385684,-7.707768,3.492584,7.817861,-8.484484,-0.152480,-8.160432,-6.668309,7.843244,-5.836651,3.251101,-3.428967,-7.623712,9.043888,-4.412273,7.812167,-9.504178,0.875972,-9.780140,9.205517,5.334674,-0.914281,6.662892,2.091858,5.087549,7.659138,-3.962395,-8.591876,-4.734813,4.345133,1.015455,-7.662467,-8.663035,4.259726,-2.397097,-9.181180,-0.075243,8.474886,9.637303,5.045083,-0.316093,3.974320,-9.654288,5.995930,5.915442,5.230737,7.224511,-8.878046,4.471960,-0.449820,-3.964002,4.148246,9.375432,-8.928101,-9.816240,8.707069,9.908412,8.458347,-5.173020,-9.739397,-9.119796,0.154119,4.552645,7.643322,7.230565,-2.174421,-2.999868,4.327295,-1.740840,-1.840929,1.366189,9.290446,-2.167345,-8.093052,1.169884,-0.395554,-8.577307,8.350480,-9.663711,-6.683977,2.588485,8.926220,-7.744217,1.560359,5.641090,9.425840,-5.497313,0.351124,-5.656292,0.457507,-5.100480,5.699219,0.754970,-7.922503,9.150626,-1.572881,6.772370,7.022045,-6.656031,-4.066224,-9.156275,-8.831890,-7.683074,-7.572693,7.089903,-5.922480,9.712056,-0.049971,-2.385284,-4.322029,7.310730,-1.206354,7.462089,-2.080370,6.327608,4.094917,1.340856,-6.613111,6.172515,-6.373885,-2.983620,-8.983982,-0.419399,0.597219,2.164950,-2.879339,-8.233493,9.754287,-5.745616,6.769296,-7.619906,-6.694180,-8.358378,3.602329,7.155592,-7.825395,-9.800612,5.062629,8.099661,8.080388,7.521373,5.618098,6.108821,4.915315,-7.371558,2.600065,8.319633,-5.833698,-2.408746,1.065688,2.812015,0.463547,-5.874034,-0.742054,9.571826,-8.370000,-7.873415,-7.108337,-0.342091,7.228706,-7.003305,0.703271,-6.999492,4.766437,5.802136,-5.685588,-5.853041,-8.373758,1.075345,-2.205221,-7.303777,2.526404,-0.958922,-3.302711,7.272985,-8.996092,-0.243088,7.723544,1.249448,8.850713,2.118771,-5.411877,-7.758555,-7.640070,5.630999,-3.393549,6.733616,-3.931211,-4.229037,-6.692568,8.281662,4.129954,-9.833660,-5.223670,-4.255279,-7.078754,-8.305364,8.715122,9.443393,-8.527966,3.611751,-3.536628,-2.388394,-3.449580,-6.302319,-4.390976,0.415954,7.318536,-6.724852,-2.342934,-9.872518,-4.581424,0.293686,3.850243,3.957223], dtype = "float64")#candidate|11006|(770,)|const|float64
call_11005 = relay.TupleGetItem(func_5093_call(relay.reshape(const_11006.astype('float64'), [770, 1])), 0)
call_11007 = relay.TupleGetItem(func_5095_call(relay.reshape(const_11006.astype('float64'), [770, 1])), 0)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_11012 = func_3674_call()
call_11013 = func_3674_call()
output = relay.Tuple([call_10999,call_11005,const_11006,call_11012,])
output2 = relay.Tuple([call_11000,call_11007,const_11006,call_11013,])
func_11018 = relay.Function([], output)
mod['func_11018'] = func_11018
mod = relay.transform.InferType()(mod)
mutated_mod['func_11018'] = func_11018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11018_call = mutated_mod.get_global_var('func_11018')
call_11019 = func_11018_call()
output = call_11019
func_11020 = relay.Function([], output)
mutated_mod['func_11020'] = func_11020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5711_call = mod.get_global_var('func_5711')
func_5713_call = mutated_mod.get_global_var('func_5713')
call_11132 = func_5711_call()
call_11133 = func_5711_call()
func_10186_call = mod.get_global_var('func_10186')
func_10188_call = mutated_mod.get_global_var('func_10188')
call_11134 = relay.TupleGetItem(func_10186_call(), 0)
call_11135 = relay.TupleGetItem(func_10188_call(), 0)
output = relay.Tuple([call_11132,call_11134,])
output2 = relay.Tuple([call_11133,call_11135,])
func_11136 = relay.Function([], output)
mod['func_11136'] = func_11136
mod = relay.transform.InferType()(mod)
mutated_mod['func_11136'] = func_11136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11136_call = mutated_mod.get_global_var('func_11136')
call_11137 = func_11136_call()
output = call_11137
func_11138 = relay.Function([], output)
mutated_mod['func_11138'] = func_11138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6040_call = mod.get_global_var('func_6040')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_11207 = relay.TupleGetItem(func_6040_call(), 0)
call_11208 = relay.TupleGetItem(func_6041_call(), 0)
func_5093_call = mod.get_global_var('func_5093')
func_5095_call = mutated_mod.get_global_var('func_5095')
var_11211 = relay.var("var_11211", dtype = "float64", shape = (770,))#candidate|11211|(770,)|var|float64
call_11210 = relay.TupleGetItem(func_5093_call(relay.reshape(var_11211.astype('float64'), [770, 1])), 2)
call_11212 = relay.TupleGetItem(func_5095_call(relay.reshape(var_11211.astype('float64'), [770, 1])), 2)
output = relay.Tuple([call_11207,call_11210,var_11211,])
output2 = relay.Tuple([call_11208,call_11212,var_11211,])
func_11216 = relay.Function([var_11211,], output)
mod['func_11216'] = func_11216
mod = relay.transform.InferType()(mod)
mutated_mod['func_11216'] = func_11216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11217 = relay.var("var_11217", dtype = "float64", shape = (770,))#candidate|11217|(770,)|var|float64
func_11216_call = mutated_mod.get_global_var('func_11216')
call_11218 = func_11216_call(var_11217)
output = call_11218
func_11219 = relay.Function([var_11217], output)
mutated_mod['func_11219'] = func_11219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10682_call = mod.get_global_var('func_10682')
func_10684_call = mutated_mod.get_global_var('func_10684')
call_11240 = relay.TupleGetItem(func_10682_call(), 0)
call_11241 = relay.TupleGetItem(func_10684_call(), 0)
func_5888_call = mod.get_global_var('func_5888')
func_5889_call = mutated_mod.get_global_var('func_5889')
call_11259 = relay.TupleGetItem(func_5888_call(), 1)
call_11260 = relay.TupleGetItem(func_5889_call(), 1)
func_2401_call = mod.get_global_var('func_2401')
func_2403_call = mutated_mod.get_global_var('func_2403')
const_11270 = relay.const([[-8,-4,5,1,3,-2,6,5,6,6,2,-8,5,1,-3,-4,9,2,-5,-6,10,9,10,10,4,3,5,-2,-5,6,3,-9,-8,-4,5,-3,-8,1,-6,3,8,-5,-7,3,-1,-2,-1,-5,-3,3,-9,-4,-9,-4,-7,-7,2,8,-1,3,-10,-6,-7,1,2,-9,2,-9,-10,8,-9,-2,8,-2,1,-1,-8,3,10,5,-9,4,-2,4,7,1,8,-8,-5,5,4,8,-5,-9,-6,6,1,-1,-4,-6],[9,-8,5,5,-4,6,8,-2,-7,-7,-5,2,-4,10,-8,-8,8,-5,-2,2,1,-4,4,-2,-4,5,10,9,2,2,8,6,8,8,2,-3,-8,1,-2,-2,-10,8,-8,-5,-6,10,-9,-1,-8,4,-9,-2,-6,8,6,6,8,-5,1,-5,-7,3,1,-2,3,10,4,8,5,-10,5,-6,-8,-9,10,-7,1,4,4,-3,-3,8,5,9,-3,2,5,-10,10,3,5,9,-8,10,-1,10,5,1,-5,3],[-9,5,-4,6,-6,4,-9,-7,-7,8,9,-10,-7,6,1,-9,6,-4,-8,-2,1,6,-10,6,2,-5,-3,5,8,-1,3,-1,3,7,10,-6,7,1,-6,5,3,9,5,-6,-7,1,-7,9,10,1,-7,-10,-10,-10,-8,-6,-4,-6,9,1,-1,6,-9,-7,-2,8,7,2,1,-6,8,9,-7,9,1,1,-6,-7,3,3,-2,5,-3,9,-10,2,-6,-7,9,8,8,9,10,9,2,9,5,5,10,9],[-8,-5,3,9,10,2,-1,-3,1,-4,-6,-8,6,8,-9,7,9,4,-4,5,-2,-1,10,-4,8,3,-3,-2,6,7,6,-5,-6,8,-3,3,10,10,1,-8,-2,-10,3,5,1,-5,6,5,-10,-3,6,10,-1,5,-4,1,-5,10,3,7,7,-5,5,-6,-3,-8,4,-4,-8,-9,3,8,-10,-5,-6,-1,6,10,7,6,5,-8,4,6,-2,-4,-6,2,3,-3,10,3,-1,9,9,8,9,-2,2,5],[-4,9,-3,8,-8,6,4,-6,-4,-4,8,8,-2,2,-10,-7,10,-6,7,-1,-4,5,-10,-4,-5,9,2,3,-10,7,-6,6,-10,-8,-4,-4,-8,8,-9,2,1,-7,9,-7,9,-8,-6,-8,7,-5,-7,-9,5,10,-10,-8,-4,-5,7,1,-4,10,5,8,5,3,10,4,-1,-1,-9,-3,-4,-5,8,8,6,4,7,3,7,4,8,-5,4,-10,-5,-3,1,3,-5,1,-10,-5,1,8,6,5,10,4],[8,-5,7,5,8,-7,-8,6,-5,4,1,-4,-4,2,3,-7,10,-5,10,4,7,-10,-2,-4,9,5,-3,-8,1,10,4,4,-9,-10,10,-8,-5,-3,-7,6,-6,6,1,6,-2,4,6,-9,-1,-8,10,8,-4,-4,8,7,-10,-5,6,3,-10,3,6,-2,10,-8,6,8,4,1,4,8,-10,5,6,4,-4,1,1,-9,-3,-3,-2,9,5,-10,7,-2,-4,-4,6,4,9,2,-9,2,9,-9,6,-8],[7,9,9,4,10,-2,8,-8,1,8,4,-10,-5,3,8,-2,1,-10,5,-4,1,-3,1,-7,-3,2,5,8,2,9,5,6,5,8,1,-6,5,-3,-3,9,-5,1,5,-10,-5,9,-2,-7,3,8,-7,-8,6,-1,4,-4,10,-1,-9,2,-1,5,7,10,-7,-6,5,-9,7,-1,-9,-4,-10,-6,5,2,-10,-9,9,7,-10,-10,-6,7,8,-8,10,-6,6,-1,1,-7,10,-7,7,-5,-8,-3,6,2],[7,9,-10,2,-8,-9,6,-1,3,-7,4,7,-9,-8,2,8,-8,9,-3,-7,3,1,1,-8,-10,5,5,7,6,-8,5,-8,-5,4,7,1,5,-9,-6,3,10,-1,3,10,3,-6,3,3,2,-6,-7,6,10,2,-2,1,2,6,10,-5,-3,-1,-6,6,2,-6,8,-4,-9,6,9,3,9,-9,5,-4,-6,7,-1,-9,-5,-3,8,3,4,-9,7,6,-1,-7,-10,7,5,-7,6,-1,-2,-6,-2,8],[-8,-10,-6,1,1,4,-8,-7,-4,1,-10,-3,-7,-3,-5,4,5,-8,-10,8,8,5,4,1,6,-10,-4,-1,9,9,-4,-9,7,-1,10,-10,-3,6,-7,-5,-9,-1,5,4,-7,-10,-6,-1,-10,-1,4,-1,-10,-4,6,-2,-2,9,-7,3,-4,7,6,4,-2,8,-10,-3,-8,7,-6,-8,-4,-8,-10,4,-8,5,-1,-1,5,9,10,6,-8,-9,-2,5,-6,6,5,-9,3,8,2,-6,-1,-4,6,-9],[5,-9,7,-2,6,-6,-1,4,8,7,3,10,-8,-3,6,-9,1,7,-1,-10,10,7,-2,5,-5,1,8,2,-8,2,-8,-5,6,-7,-3,-3,-3,-4,3,5,2,8,9,-7,6,3,8,-2,-1,3,-6,-9,-1,3,10,4,6,-3,-3,-4,-10,2,4,-4,3,-9,8,-7,10,-2,8,4,9,10,8,2,8,7,10,-7,1,-3,5,-7,-9,-5,5,2,-7,-10,4,-4,-8,6,-2,-10,-10,-1,2,-10],[-5,10,4,-7,-6,-5,-1,-7,-10,6,8,5,8,5,-2,-10,1,10,-6,4,6,-4,-10,3,-4,10,-4,9,10,1,-10,2,5,-7,-9,-4,-4,-1,9,-4,4,4,10,-1,9,2,-4,-3,6,-9,2,-1,2,-9,-9,-4,9,-2,-3,-7,2,-6,-6,5,-10,9,10,8,-6,-4,2,-8,8,-7,-1,-5,-6,1,-9,-5,3,-1,-6,6,6,8,10,8,-6,-8,9,-1,-4,8,9,4,-7,-4,4,6],[-9,-9,-10,6,-1,-2,8,7,6,-5,1,6,4,3,-9,9,5,7,-4,1,7,-8,-9,-7,4,-9,-3,1,4,-7,-4,10,-4,-7,2,-6,3,6,-2,-8,-6,9,3,-9,7,9,2,-3,10,9,-7,-3,-10,6,-1,-8,5,-8,-1,-5,-3,-10,-6,3,2,-10,-6,1,3,10,4,-2,-9,-7,-7,9,-7,-7,1,-10,2,1,-6,-6,4,4,-7,-8,9,7,8,-8,-4,-1,-4,7,3,-4,2,8]], dtype = "int64")#candidate|11270|(12, 100)|const|int64
call_11269 = relay.TupleGetItem(func_2401_call(relay.reshape(const_11270.astype('int64'), [10, 8, 15])), 2)
call_11271 = relay.TupleGetItem(func_2403_call(relay.reshape(const_11270.astype('int64'), [10, 8, 15])), 2)
func_4021_call = mod.get_global_var('func_4021')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_11285 = relay.TupleGetItem(func_4021_call(), 0)
call_11286 = relay.TupleGetItem(func_4022_call(), 0)
const_11303 = relay.const([[5,-4,3,1,-4,4,-7,3,10,-4,5,1,-2,-2,-3,8,6,-10,-9,-2,9,1,1,-1,-7,10,-6,-7,-7,9,-3,-5,-10,7,-6,-2,-7,1,8,10,1,-7,-2,-5,7,-6,-2,-9,-8,2,7,8,-9,-1,3,4,3,10,8,-4,-9,5,-3,-4,1,4,-9,2,-1,7,-6,9,2,7,-5,7,1,-7,-6,-5,6,5,-2,-3,9,1,1,-7,1,5,2,4,-3,8,-2,8,-4,3,-9,-1],[8,-6,-3,-2,-6,4,8,-3,-9,-2,-4,6,3,-4,-8,3,-8,-5,-3,-7,5,-6,9,5,10,6,-6,-4,4,1,4,9,4,-4,10,-5,5,7,-3,-10,10,9,-10,2,2,7,-9,9,-2,-10,8,-9,-9,7,-1,-6,-4,-4,7,-10,1,-4,-6,4,10,10,1,1,8,-3,4,7,-4,2,-8,10,-2,2,1,-5,1,-9,7,-4,7,-3,7,-10,-2,4,-7,-1,-3,4,-10,7,6,-2,7,9],[3,6,3,-5,-10,-9,7,3,-5,-4,-8,4,8,-9,4,-8,2,-1,9,2,-4,6,2,-1,-8,10,7,-2,-4,9,-10,4,-8,9,-10,-9,-3,-8,-2,-10,8,-8,7,-10,-4,-8,-6,8,-9,3,1,8,5,-9,-6,9,10,-1,-1,10,1,-10,2,1,9,3,-6,-2,-8,9,-9,-10,-10,-9,-3,6,7,-9,6,-2,-5,-2,7,-3,-4,-1,-3,-5,-3,3,3,9,5,-3,-9,-3,10,-7,-1,4],[-5,2,9,10,-2,-9,4,9,6,-8,6,3,-1,3,-3,9,3,5,-1,-3,1,9,9,-3,-1,4,-6,-1,9,9,2,-1,1,8,-2,4,4,7,3,-10,2,-10,-3,5,9,-6,-2,-8,3,-5,-9,-8,-2,6,-6,-2,2,-7,4,-9,-6,4,1,10,-7,9,-4,7,-4,5,-1,6,-8,-2,-5,-3,-7,-8,10,4,-5,-3,2,8,5,3,8,-1,4,-9,4,9,-1,-10,7,8,9,-2,1,6],[-3,2,-10,-10,-8,-7,-2,-4,5,6,9,3,-5,-8,9,2,5,-5,-9,-1,-5,1,-5,4,10,2,-6,-1,4,-5,3,4,3,5,6,1,6,-3,-7,-3,-7,-10,1,-3,-1,7,8,-4,-1,-3,4,-10,-5,3,10,-1,-10,1,10,-6,4,7,-3,3,9,-2,-1,5,-5,-8,-2,-3,7,4,8,10,-1,4,-7,1,4,-9,6,-10,2,-8,-6,9,-5,-3,-2,2,2,-1,-2,5,6,2,-9,4],[10,-6,-3,10,-9,-10,7,-4,10,8,-8,10,8,-3,-4,-8,1,3,-2,-3,-5,10,6,3,-1,-8,7,-10,-1,3,2,-4,-7,8,-7,10,3,-7,6,-3,-2,-4,2,-5,-9,-2,10,-3,-10,-8,-1,10,8,2,-9,1,-7,-2,8,-4,6,7,2,6,-4,-9,-3,-8,-10,7,5,-1,-2,3,-10,9,5,-3,10,6,-4,-9,-8,9,7,-7,5,-7,3,-9,9,1,7,-8,3,-1,3,-5,-6,8],[2,8,-5,4,-6,-3,2,8,9,-6,-2,-1,-6,-5,-3,-8,10,2,-2,3,9,7,-1,-3,-3,-5,10,1,4,-10,10,-2,3,-4,-10,7,3,5,8,-4,-10,5,7,-6,3,10,2,-4,7,4,-6,-1,4,5,-5,-1,10,-3,-4,-9,-4,2,2,3,-7,9,7,-6,-5,2,-10,2,-1,-6,-5,5,6,7,5,-9,8,-10,9,5,7,-1,2,-6,2,1,-6,9,4,-10,-8,5,-9,9,1,10],[-3,4,8,-10,1,-10,-8,9,-6,2,9,8,-2,-4,2,10,6,-3,-3,7,-4,3,5,-3,10,-3,-5,-7,-9,-10,6,10,-6,-8,-8,5,9,6,-9,-7,6,-9,2,-10,8,3,1,-6,6,8,-9,8,10,-4,-4,-7,2,3,-4,4,-2,6,8,-10,7,10,2,6,1,2,-2,6,-7,-7,-2,2,5,5,9,-2,7,4,10,-3,1,-6,6,-6,-3,-5,1,-6,5,-4,9,3,-7,-7,-9,8],[8,3,-8,-7,2,-5,-9,-1,-4,-1,10,1,2,-2,8,1,6,10,-2,6,-10,7,3,6,-3,-10,-2,8,-1,-5,4,7,-9,-5,-5,-3,3,-4,7,4,6,1,-7,2,-3,6,-4,-7,-9,3,3,-9,-5,-3,-5,-10,-10,-1,-4,-2,-1,-4,1,-7,4,-4,-6,-5,10,-3,4,-7,8,3,2,-9,-6,-7,6,7,4,9,8,2,4,4,1,-4,1,3,5,-6,6,-5,-7,-4,-6,2,-9,-2],[2,-2,-9,-3,6,-6,7,9,3,-6,8,1,5,8,10,8,7,-4,-8,9,-1,4,-4,3,-9,-8,-9,1,-4,7,-8,-3,-4,-1,4,-8,-2,-2,9,4,4,-7,2,-8,-6,8,1,8,10,2,9,8,-4,8,6,1,5,-7,-5,-3,2,-6,-5,-2,4,-9,-4,4,7,-1,-5,7,10,7,8,8,-3,5,-9,-5,1,-5,10,2,1,-2,-6,6,-2,-3,5,2,-8,-10,-6,-9,10,9,-3,-9],[4,1,-10,-8,-2,-3,-4,8,4,10,-2,4,-5,4,-5,4,-4,-9,-4,5,8,4,4,6,10,5,-7,6,3,-3,2,-8,-2,1,4,3,-5,-3,-9,-7,7,10,1,7,5,4,7,4,-1,-7,-10,-4,-7,3,8,-2,-2,-8,-8,10,-6,1,-8,-5,9,-3,-4,3,6,7,6,6,2,2,10,5,6,-9,2,-3,-10,9,3,-5,-8,10,4,1,-1,-7,-4,-5,10,-5,2,1,-2,5,-2,4],[-5,-3,2,6,-8,-4,-7,3,5,-8,-3,6,-9,3,-3,9,-3,8,8,-9,-7,9,2,-9,-9,1,-6,-7,9,-6,7,2,-10,5,2,-6,-9,-3,6,-5,9,-7,6,-1,6,-9,5,-4,10,4,-5,1,5,4,-7,8,-8,2,1,-9,5,1,-7,-4,6,9,8,7,5,7,-2,-8,8,-2,-7,5,7,1,-2,-3,5,-2,-3,8,-10,-9,-8,1,-9,6,-4,-8,-8,8,-4,-8,2,-1,9,-2]], dtype = "int64")#candidate|11303|(12, 100)|const|int64
bop_11304 = relay.bitwise_and(const_11270.astype('uint64'), relay.reshape(const_11303.astype('uint64'), relay.shape_of(const_11270))) # shape=(12, 100)
var_11313 = relay.var("var_11313", dtype = "uint16", shape = (1, 720))#candidate|11313|(1, 720)|var|uint16
bop_11314 = relay.logical_xor(call_11269.astype('uint32'), relay.reshape(var_11313.astype('uint32'), relay.shape_of(call_11269))) # shape=(1, 720)
bop_11317 = relay.logical_xor(call_11271.astype('uint32'), relay.reshape(var_11313.astype('uint32'), relay.shape_of(call_11271))) # shape=(1, 720)
func_9438_call = mod.get_global_var('func_9438')
func_9440_call = mutated_mod.get_global_var('func_9440')
call_11324 = relay.TupleGetItem(func_9438_call(), 1)
call_11325 = relay.TupleGetItem(func_9440_call(), 1)
output = relay.Tuple([call_11240,call_11259,call_11285,bop_11304,bop_11314,call_11324,])
output2 = relay.Tuple([call_11241,call_11260,call_11286,bop_11304,bop_11317,call_11325,])
func_11333 = relay.Function([var_11313,], output)
mod['func_11333'] = func_11333
mod = relay.transform.InferType()(mod)
var_11334 = relay.var("var_11334", dtype = "uint16", shape = (1, 720))#candidate|11334|(1, 720)|var|uint16
output = func_11333(var_11334)
func_11335 = relay.Function([var_11334], output)
mutated_mod['func_11335'] = func_11335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11399 = relay.var("var_11399", dtype = "float64", shape = ())#candidate|11399|()|var|float64
const_11400 = relay.constdtype = "float64")#candidate|11400|(12, 10, 15)|const|float64
bop_11401 = relay.not_equal(var_11399.astype('bool'), const_11400.astype('bool')) # shape=(12, 10, 15)
output = relay.Tuple([bop_11401,])
output2 = relay.Tuple([bop_11401,])
func_11410 = relay.Function([var_11399,], output)
mod['func_11410'] = func_11410
mod = relay.transform.InferType()(mod)
var_11411 = relay.var("var_11411", dtype = "float64", shape = ())#candidate|11411|()|var|float64
output = func_11410(var_11411)
func_11412 = relay.Function([var_11411], output)
mutated_mod['func_11412'] = func_11412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6942_call = mod.get_global_var('func_6942')
func_6944_call = mutated_mod.get_global_var('func_6944')
call_11449 = func_6942_call()
call_11450 = func_6942_call()
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
call_11453 = func_3674_call()
call_11454 = func_3674_call()
func_10186_call = mod.get_global_var('func_10186')
func_10188_call = mutated_mod.get_global_var('func_10188')
call_11490 = relay.TupleGetItem(func_10186_call(), 0)
call_11491 = relay.TupleGetItem(func_10188_call(), 0)
output = relay.Tuple([call_11449,call_11453,call_11490,])
output2 = relay.Tuple([call_11450,call_11454,call_11491,])
func_11492 = relay.Function([], output)
mod['func_11492'] = func_11492
mod = relay.transform.InferType()(mod)
output = func_11492()
func_11493 = relay.Function([], output)
mutated_mod['func_11493'] = func_11493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4984_call = mod.get_global_var('func_4984')
func_4986_call = mutated_mod.get_global_var('func_4986')
call_11497 = relay.TupleGetItem(func_4984_call(), 1)
call_11498 = relay.TupleGetItem(func_4986_call(), 1)
output = relay.Tuple([call_11497,])
output2 = relay.Tuple([call_11498,])
func_11553 = relay.Function([], output)
mod['func_11553'] = func_11553
mod = relay.transform.InferType()(mod)
output = func_11553()
func_11554 = relay.Function([], output)
mutated_mod['func_11554'] = func_11554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11563 = relay.var("var_11563", dtype = "float32", shape = (4, 11, 10))#candidate|11563|(4, 11, 10)|var|float32
uop_11564 = relay.sinh(var_11563.astype('float32')) # shape=(4, 11, 10)
output = relay.Tuple([uop_11564,])
output2 = relay.Tuple([uop_11564,])
func_11573 = relay.Function([var_11563,], output)
mod['func_11573'] = func_11573
mod = relay.transform.InferType()(mod)
var_11574 = relay.var("var_11574", dtype = "float32", shape = (4, 11, 10))#candidate|11574|(4, 11, 10)|var|float32
output = func_11573(var_11574)
func_11575 = relay.Function([var_11574], output)
mutated_mod['func_11575'] = func_11575
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11598 = relay.const([[[-3,8,-9,-10,10,-10,9,9,2,-6]],[[-2,-10,-9,-7,-2,-8,1,-10,-4,1]],[[-4,-4,5,-2,7,7,-4,4,-7,-4]],[[2,-2,9,-5,-4,6,9,2,5,-10]],[[-6,2,4,-5,-8,10,2,-5,5,3]],[[-6,9,9,1,7,-8,10,5,7,5]],[[-9,-5,8,-2,-10,4,4,-3,-7,8]],[[-10,7,6,4,-1,9,7,-1,-6,7]],[[7,-3,-7,3,5,-7,8,4,5,-9]],[[10,-6,-6,9,-1,-9,10,-9,-10,-10]],[[-4,7,3,9,-1,4,-8,6,9,-5]],[[4,9,6,2,10,1,10,-9,-1,-1]],[[-5,-2,9,-9,5,-1,10,4,9,3]]], dtype = "uint16")#candidate|11598|(13, 1, 10)|const|uint16
const_11599 = relay.const([[[5,-2,-10,-3,5,-10,-2,-7,9,7],[-5,-1,-4,-5,2,-1,-9,1,7,-2],[3,9,3,6,-2,-2,-9,-5,3,-8],[-2,-2,-3,2,-1,2,8,-9,1,-3],[-8,9,-9,-10,4,9,-8,-9,-8,-3],[-7,10,8,8,-5,-4,7,-2,-10,1],[2,-2,-1,-3,1,-5,-3,-6,6,-10],[-5,6,8,8,-2,-1,-9,5,3,-10],[-6,-3,-1,9,2,-6,4,9,-2,1],[10,-6,-7,10,1,-6,-4,-5,7,10],[-3,-8,-10,10,-6,6,5,4,5,3]],[[1,-4,-8,9,10,7,-6,10,-2,8],[3,5,-7,1,-2,-9,-2,9,3,5],[5,-9,-7,-7,-1,-6,-8,-6,9,-7],[2,5,1,5,-9,-7,2,-5,5,9],[-8,2,-7,1,6,6,-3,1,4,8],[-6,-10,-1,1,-9,-3,5,-1,2,6],[-1,5,5,10,3,5,-2,-10,-9,10],[1,-5,7,-7,-9,10,-9,-3,-2,-4],[-10,-6,3,7,7,10,-1,4,-10,-10],[6,-8,-4,9,-4,10,-3,8,2,-8],[5,9,-4,5,-6,4,6,6,4,5]],[[-10,2,1,1,-7,2,-8,7,6,7],[-8,3,-6,-3,6,-8,1,4,-2,-5],[4,9,10,6,-10,9,8,2,-1,-2],[-1,7,-2,5,-4,1,10,3,-5,-8],[-4,3,-9,5,9,8,10,5,-6,4],[-3,-9,-6,-4,3,-6,-9,10,7,9],[-3,-8,-4,-4,5,10,4,2,-4,-1],[-10,-6,9,8,-1,1,-4,6,-4,-8],[-10,-7,-2,4,-7,4,3,8,-4,-5],[-3,-9,-5,-7,-9,6,-5,-4,5,-2],[-3,10,6,6,-4,7,7,-8,-2,1]],[[-2,-1,-1,-4,4,-1,-4,-3,-8,-2],[-3,-4,4,-3,7,-10,-1,5,-7,-10],[-7,-10,-1,1,5,6,10,-8,-9,5],[-5,4,7,1,10,-6,4,8,-10,-7],[-2,-3,-10,-9,2,-7,-8,-6,-4,-2],[8,-1,-6,8,-10,1,7,-4,-4,9],[6,4,9,-10,7,-7,-10,9,-9,-1],[5,9,-7,10,6,9,5,8,5,7],[2,1,4,9,1,2,-4,-8,6,2],[7,-5,-7,8,-3,-6,-9,-8,-8,-6],[-6,5,-9,-1,-2,8,8,-4,6,-9]],[[-7,5,-3,-8,-9,2,-3,5,9,-9],[-3,-2,10,-6,-6,-7,-1,8,5,-4],[10,-10,-2,-5,3,4,2,-6,2,1],[8,-10,2,10,-3,4,2,-6,-8,-7],[-8,-8,-7,-3,8,-6,3,3,3,5],[-10,1,2,6,10,-5,-4,-9,7,1],[-3,10,-2,-1,8,5,6,2,3,2],[-1,4,-7,-8,2,-2,6,-2,6,-5],[3,4,6,-7,-2,-4,5,-10,-2,9],[-8,2,-2,2,10,-4,-7,-2,2,4],[10,9,-8,10,-9,-6,1,-1,-2,2]],[[-2,7,-3,-4,10,-1,6,8,8,5],[-8,-4,-9,-3,-10,3,1,3,8,-1],[5,-1,-1,-8,8,6,-6,-6,-7,-6],[-5,-1,10,2,-1,-8,-6,-9,1,-6],[1,-8,4,2,2,10,-10,4,5,9],[1,-2,10,2,7,2,-1,4,2,-9],[-7,-4,2,-6,3,2,-5,-9,-4,-6],[-2,-10,7,-10,-2,-7,-2,8,8,8],[1,5,4,3,-6,10,9,1,-6,7],[4,8,5,-9,-10,-4,8,-9,3,2],[-2,7,4,7,3,-7,8,-2,-1,-5]],[[9,-2,-7,9,2,1,-4,3,-8,-6],[-4,7,-8,4,9,10,1,5,2,9],[-3,-8,-9,-3,-1,6,-3,7,2,-3],[-5,9,5,-3,7,-1,-2,-7,9,-6],[10,8,-4,7,10,-7,4,-10,-1,6],[-5,-10,7,8,9,8,7,-5,3,-7],[3,-8,3,8,1,3,2,-2,1,6],[-3,9,2,-1,5,10,5,7,-7,3],[8,3,9,8,7,-8,-10,-2,-1,1],[-2,-6,-10,6,-7,-7,-7,6,8,-6],[9,5,10,-6,-10,-9,-10,3,7,9]],[[-10,-2,9,-3,-1,1,-4,3,-4,5],[6,8,8,-5,-3,-10,3,2,-9,8],[-7,-1,-5,-2,-3,-3,-2,6,6,-6],[8,-4,7,4,4,-7,-8,9,-3,2],[-2,7,-10,4,6,5,-6,-4,6,1],[9,10,-6,-1,-1,-9,10,5,-10,-5],[8,8,-8,9,2,1,-7,9,9,-2],[-6,3,8,-7,-8,-3,-10,-10,-7,2],[8,1,4,9,-3,-6,-4,5,7,-8],[-4,-3,4,-5,-4,-10,-10,-10,-4,-10],[9,-6,-2,-7,-4,-6,-8,5,4,-2]],[[-6,-1,-5,1,-9,6,6,3,4,-9],[-4,9,5,5,3,-8,-10,-5,1,4],[-8,7,2,-2,-9,7,9,7,-7,5],[-10,10,3,6,-3,1,-3,-5,-10,3],[9,5,3,2,-4,3,2,-3,1,7],[2,-5,-8,-9,-7,-8,-2,4,4,-7],[-5,-4,4,-1,9,-10,8,3,6,-6],[4,-1,8,-2,-3,3,-1,-4,4,-1],[3,-1,7,-9,-10,7,-1,-2,6,-1],[3,7,-1,-1,6,6,-1,2,-5,-2],[8,-8,-10,9,-4,-4,-4,-3,4,10]],[[3,-1,4,-4,-6,3,6,4,4,1],[-4,9,6,3,-5,9,-8,4,-4,3],[5,-6,9,-8,-3,-5,3,-7,3,8],[4,5,8,5,10,-3,-4,-9,-1,10],[-5,3,6,-9,-9,-8,-4,4,-4,7],[-7,-10,-1,7,-5,8,-9,-10,-10,-7],[-5,3,-8,5,-7,10,3,6,9,8],[10,6,6,8,6,-6,-8,4,5,2],[10,-8,1,8,7,6,9,-9,-9,-4],[10,-7,8,-6,1,-7,-9,-5,-8,10],[9,5,9,5,-10,-2,9,-1,-3,10]],[[-7,4,-1,-6,-3,4,-4,10,-4,-1],[3,7,5,9,-6,-1,-7,3,-5,6],[-7,10,1,7,4,-8,-3,1,4,5],[10,-7,2,-6,8,7,-4,9,4,9],[-3,-6,-3,-6,6,8,-9,4,2,-10],[-2,6,-1,-1,10,-4,-8,-1,7,7],[9,9,10,-1,5,-5,-6,5,7,-4],[-8,1,-1,7,10,-1,-1,8,6,-6],[-1,-8,-1,8,-8,4,-3,2,-7,-9],[-4,7,1,-9,-9,7,-5,8,-7,5],[-9,3,-5,-3,3,3,-4,-3,8,-3]],[[-6,-6,5,-8,-2,-10,-5,10,-8,-4],[9,-10,-8,10,-4,4,1,-4,7,9],[-6,-8,-1,-1,-5,2,2,7,-5,-9],[-9,-3,-6,7,9,-3,-6,-6,-1,-8],[3,2,-1,9,-5,-7,3,5,6,-3],[9,-10,6,1,-6,-8,6,6,7,3],[2,-6,-9,4,-2,-10,2,-3,-9,-8],[1,6,5,7,5,-6,10,-4,3,-6],[-5,-6,-8,7,-3,-2,2,4,-10,-1],[-10,4,9,1,-7,6,3,1,3,9],[-5,-2,1,-4,8,-5,-2,-10,-10,4]],[[-8,-1,4,-2,-2,-1,-4,-3,1,-5],[5,-9,3,-10,10,10,4,-9,-7,-5],[4,7,-1,4,-10,-10,10,-3,-9,-6],[9,-5,1,-1,-6,7,-4,-9,-7,-6],[-3,5,8,-8,1,3,2,-2,5,9],[-2,1,-5,1,-5,-10,-3,-2,2,-7],[-4,4,-2,8,4,9,8,-3,10,6],[1,4,2,7,5,-9,-6,-6,-3,-4],[-6,4,2,-6,1,10,9,-6,-9,4],[-6,-7,-10,-1,-9,-10,7,-8,1,-1],[-7,2,4,-4,-2,-9,3,-3,8,8]]], dtype = "uint16")#candidate|11599|(13, 11, 10)|const|uint16
bop_11600 = relay.multiply(const_11598.astype('uint16'), const_11599.astype('uint16')) # shape=(13, 11, 10)
output = bop_11600
output2 = bop_11600
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

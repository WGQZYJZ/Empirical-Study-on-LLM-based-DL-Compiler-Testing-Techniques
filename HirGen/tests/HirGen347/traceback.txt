==========mod==========
#[version = "0.0.5"]
def @func_11477() -> (Tensor[(14, 3, 10), bool],) {
  %0 = @func_9274() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) */;
  %1 = %0.1;
  (%1,)
}

def @func_9274() -> (Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) {
  %2 = @func_8741() /* ty=Tensor[(6, 11, 16), float32] */;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %6 = reshape(%4, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %7 = reshape(%5, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %8 = @func_4247(%6, %7) /* ty=(Tensor[(14, 3, 10), bool],) */;
  %9 = exp(%3) /* ty=Tensor[(6, 11, 16), float64] */;
  %10 = %8.0;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(420), int32] */)
}

def @func_9770() -> (Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) {
  %11 = @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */;
  %12 = %11.0;
  %13 = @func_8503() /* ty=Tensor[(14, 3, 10), bool] */;
  (%12, %13)
}

def @func_9911() -> (Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) {
  %14 = @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %17 = reshape(%15, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %18 = reshape(%16, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
  %19 = @func_6585(%17, %18) /* ty=(Tensor[(7, 13, 3), float64],) */;
  %20 = %14.2;
  %21 = %19.0;
  (%20, %21, meta[relay.Constant][1] /* ty=Tensor[(273), float64] */)
}

def @main(%var_11630: Tensor[(1320), uint8], %var_11646: Tensor[(11), float64]) -> (Tensor[(1200), float32], Tensor[(420), int32], Tensor[(14, 3, 10), bool], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8], Tensor[(6, 11, 16), bool], Tensor[(182), float64], Tensor[(1056, 11), uint32]) {
  %22 = @func_9339() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(15, 16, 5), float32], Tensor[(1200), float32]) */;
  %23 = @func_11477() /* ty=(Tensor[(14, 3, 10), bool],) */;
  %24 = cast(%var_11630, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %25 = cast(%var_11630, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %26 = reshape(%24, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %27 = reshape(%25, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(1056, 1), float64] */, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %29 = cast(%var_11646, dtype="float64") /* ty=Tensor[(11), float64] */;
  %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %31 = reshape(%28, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), float64] */;
  %32 = reshape(%29, newshape=[11]) /* ty=Tensor[(11), float64] */;
  %33 = reshape(%30, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %34 = @func_8472(%31, %32, %33) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */;
  %35 = cast(%var_11646, dtype="uint32") /* ty=Tensor[(11), uint32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(1056, 1), float64] */, dtype="uint32") /* ty=Tensor[(1056, 1), uint32] */;
  %37 = %22.2;
  %38 = @func_10982() /* ty=Tensor[(420), int32] */;
  %39 = %23.0;
  %40 = @func_10268(%26, %27) /* ty=Tensor[(12, 11, 10), uint8] */;
  %41 = %34.5;
  %42 = logical_xor(%35, %36) /* ty=Tensor[(1056, 11), uint32] */;
  (%37, %38, %39, %40, %var_11630, %41, meta[relay.Constant][3] /* ty=Tensor[(182), float64] */, %42)
}

def @func_11252(%var_11211: Tensor[(630), float32]) -> (Tensor[(420), int32], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(9, 10, 7), float32], Tensor[(420), bool]) {
  %43 = cast(%var_11211, dtype="float32") /* ty=Tensor[(630), float32] */;
  %44 = reshape(%43, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %45 = @func_10358(%44) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) */;
  %46 = @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */;
  %47 = @func_10686() /* ty=(Tensor[(420), bool],) */;
  %48 = @func_9652() /* ty=Tensor[(420), int32] */;
  %49 = %45.0;
  %50 = %46.1;
  %51 = %47.0;
  (%48, %49, %var_11211, %50, %51)
}

def @func_8179() -> (Tensor[(6, 11, 16), float32],) {
  %52 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
  %53 = tan(%52) /* ty=Tensor[(6, 11, 16), float32] */;
  (%53,)
}

def @func_9428() -> (Tensor[(6, 11, 16), float32],) {
  %54 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
  %55 = %54.1;
  (%55,)
}

def @func_1287(%var_1244: Tensor[(1, 5, 6), float64], %var_1263: Tensor[(7, 5, 6), int8]) -> (Tensor[(7, 5, 6), int32],) {
  %56 = cast(%var_1244, dtype="float64") /* ty=Tensor[(1, 5, 6), float64] */;
  %57 = sin(%56) /* ty=Tensor[(1, 5, 6), float64] */;
  %58 = cast(%var_1244, dtype="int8") /* ty=Tensor[(1, 5, 6), int8] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="int8") /* ty=Tensor[(1, 5, 6), int8] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %62 = left_shift(%60, %61) /* ty=Tensor[(?, 5, 6), int8] */;
  %63 = cast(%62, dtype="int32") /* ty=Tensor[(?, 5, 6), int32] */;
  %64 = cast(%var_1263, dtype="int32") /* ty=Tensor[(7, 5, 6), int32] */;
  %65 = minimum(%63, %64) /* ty=Tensor[(7, 5, 6), int32] */;
  (%65,)
}

def @func_3691(%var_3667: Tensor[(8, 7, 5), float32], %var_3674: Tensor[(168, 4), uint64]) -> (Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) {
  %66 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %67 = cast(%var_3674, dtype="uint64") /* ty=Tensor[(168, 4), uint64] */;
  %68 = reshape(%66, newshape=[]) /* ty=uint64 */;
  %69 = reshape(%67, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), uint64] */;
  %70 = @func_2954(%68, %69) /* ty=(Tensor[(6, 7, 16), uint64], Tensor[(13, 7, 6), bool]) */;
  %71 = cast(%var_3667, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
  %72 = erf(%71) /* ty=Tensor[(8, 7, 5), float32] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
  %74 = %70.0;
  %75 = sin(%73) /* ty=Tensor[(8, 7, 5), float32] */;
  (%74, meta[relay.Constant][5] /* ty=uint64 */, %var_3674, %75)
}

def @func_5303(%var_5291: Tensor[(15, 4, 8), float32]) -> (Tensor[(15, 4, 8), float32],) {
  %76 = cast(%var_5291, dtype="float32") /* ty=Tensor[(15, 4, 8), float32] */;
  %77 = acosh(%76) /* ty=Tensor[(15, 4, 8), float32] */;
  (%77,)
}

def @func_11170(%var_11097: Tensor[(30), uint16], %var_11118: Tensor[(32), float64], %var_11122: Tensor[(1, 182), float64]) -> (Tensor[(420), bool], Tensor[(6, 60), float64], Tensor[(30), uint16], Tensor[(60), uint16], Tensor[(450), bool], Tensor[(420), int32], Tensor[(2, 2, 8), float64], Tensor[(32), float64], Tensor[(180, 2), float32], Tensor[(1, 182), float64], Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) {
  %78 = @func_10686() /* ty=(Tensor[(420), bool],) */;
  %79 = cast(%var_11097, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %81 = cast(meta[relay.Constant][7] /* ty=Tensor[(450), bool] */, dtype="bool") /* ty=Tensor[(450), bool] */;
  %82 = reshape(%79, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), uint16] */;
  %83 = reshape(%80, newshape=[2, 5, 6]) /* ty=Tensor[(2, 5, 6), uint16] */;
  %84 = reshape(%81, newshape=[450]) /* ty=Tensor[(450), bool] */;
  %85 = @func_4895(%82, %83, %84) /* ty=(Tensor[(2, 5, 6), uint16], Tensor[(630), float32], Tensor[(450), bool], Tensor[(6, 60), float64], Tensor[(630), float32]) */;
  %86 = cast(%var_11118, dtype="float64") /* ty=Tensor[(32), float64] */;
  %87 = reshape(%86, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float64] */;
  %88 = %85.3;
  %89 = cast(%88, dtype="int16") /* ty=Tensor[(6, 60), int16] */;
  %90 = cast(%var_11122, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
  %91 = reshape(%89, newshape=[180, 2]) /* ty=Tensor[(180, 2), int16] */;
  %92 = reshape(%90, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %93 = @func_10050(%91, %92) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(672), uint64], Tensor[(672), uint64], Tensor[(11, 5, 9), bool], Tensor[(180, 2), float32], Tensor[(14, 3, 10), bool], Tensor[(182), float64], Tensor[(858), float32]) */;
  %94 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %95 = %94.0;
  %96 = @func_9565() /* ty=Tensor[(6, 11, 16), uint32] */;
  %97 = cast(%96, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %98 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%95, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %101 = @func_9580() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
  %103 = reshape(%102, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
  %104 = %78.0;
  %105 = @func_9731() /* ty=Tensor[(420), int32] */;
  %106 = @func_8113(%87) /* ty=Tensor[(2, 2, 8), float64] */;
  %107 = %93.4;
  %108 = floor_mod(%99, %100) /* ty=Tensor[(6, 11, 16), float64] */;
  %109 = %101.0;
  %110 = @func_4351(%103) /* ty=Tensor[(11, 5, 9), float64] */;
  (%104, %88, %var_11097, meta[relay.Constant][6] /* ty=Tensor[(60), uint16] */, meta[relay.Constant][7] /* ty=Tensor[(450), bool] */, %105, %106, %var_11118, %107, %var_11122, %108, %109, %110, meta[relay.Constant][8] /* ty=Tensor[(495), float64] */)
}

def @func_10963() -> (Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(630), float32]) {
  %111 = @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */;
  %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %113 = reshape(%112, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %114 = @func_10476(%113) /* ty=(Tensor[(12, 5, 14), float64], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) */;
  %115 = %111.0;
  %116 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
  %117 = %114.2;
  (%115, %116, %117, meta[relay.Constant][9] /* ty=Tensor[(630), float32] */)
}

def @func_10476(%var_10464: Tensor[(630), float32]) -> (Tensor[(12, 5, 14), float64], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) {
  %118 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %119 = cast(%var_10464, dtype="float32") /* ty=Tensor[(630), float32] */;
  %120 = reshape(%119, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %121 = @func_10358(%120) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) */;
  %122 = sin(%118) /* ty=Tensor[(12, 5, 14), float64] */;
  %123 = %121.1;
  (%122, %123, %var_10464)
}

def @func_1774(%var_1756: Tensor[(9, 10, 7), float32]) -> (Tensor[(9, 10, 7), float32],) {
  %124 = cast(%var_1756, dtype="float32") /* ty=Tensor[(9, 10, 7), float32] */;
  %125 = sqrt(%124) /* ty=Tensor[(9, 10, 7), float32] */;
  (%125,)
}

def @func_4351(%var_4348: Tensor[(11, 5, 9), float64]) -> Tensor[(11, 5, 9), float64] {
  %126 = cast(%var_4348, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  acosh(%126) /* ty=Tensor[(11, 5, 9), float64] */
}

def @func_6585(%var_6579: Tensor[(7, 13, 3), float64], %var_6580: Tensor[(7, 13, 3), float64]) -> (Tensor[(7, 13, 3), float64],) {
  %127 = cast(%var_6580, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %128 = shape_of(%var_6579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%var_6579, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %131 = floor_divide(%129, %130) /* ty=Tensor[(7, 13, 3), float64] */;
  (%131,)
}

def @func_1481(%var_1437: Tensor[(12, 6, 5), float64], %var_1454: Tensor[(30), float64], %var_1455: Tensor[(210), int8]) -> (Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) {
  %132 = cast(%var_1437, dtype="float64") /* ty=Tensor[(12, 6, 5), float64] */;
  %133 = cosh(%132) /* ty=Tensor[(12, 6, 5), float64] */;
  %134 = cast(%133, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %135 = shape_of(%var_1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%var_1437, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %138 = cast(%var_1454, dtype="float64") /* ty=Tensor[(30), float64] */;
  %139 = cast(%var_1455, dtype="int8") /* ty=Tensor[(210), int8] */;
  %140 = reshape(%138, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %141 = reshape(%139, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %142 = @func_1287(%140, %141) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %143 = cast(%var_1454, dtype="float64") /* ty=Tensor[(30), float64] */;
  %144 = %142.0;
  %145 = cast(%144, dtype="int8") /* ty=Tensor[(7, 5, 6), int8] */;
  %146 = reshape(%143, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %147 = reshape(%145, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %148 = @func_1287(%146, %147) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %149 = cast(%var_1455, dtype="float64") /* ty=Tensor[(210), float64] */;
  %150 = not_equal(%136, %137) /* ty=Tensor[(12, 6, 5), bool] */;
  %151 = %148.0;
  %152 = acos(%149) /* ty=Tensor[(210), float64] */;
  (%150, %144, %var_1454, %151, %152)
}

def @func_11593() -> (Tensor[(210, 2), int32], Tensor[(14, 3, 10), bool]) {
  %153 = @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */;
  %154 = @func_9503() /* ty=Tensor[(210, 2), int32] */;
  %155 = %153.1;
  (%154, %155)
}

def @func_8862(%var_8801: Tensor[(10, 14, 7), uint8]) -> (Tensor[(10, 14, 7), bool], Tensor[(15, 4, 8), float32], Tensor[(120, 4), float32], Tensor[(12, 6, 5), bool], Tensor[(360), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(6, 11, 16), float32], Tensor[(10, 14, 7), int64]) {
  %156 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 14, 7), uint8] */, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  %157 = shape_of(%var_8801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%var_8801, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %160 = cast(meta[relay.Constant][12] /* ty=Tensor[(120, 4), float32] */, dtype="float32") /* ty=Tensor[(120, 4), float32] */;
  %161 = reshape(%160, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), float32] */;
  %162 = @func_5303(%161) /* ty=(Tensor[(15, 4, 8), float32],) */;
  %163 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %164 = cast(meta[relay.Constant][14] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %165 = cast(meta[relay.Constant][15] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %166 = reshape(%163, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %167 = reshape(%164, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %168 = reshape(%165, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %169 = @func_1481(%166, %167, %168) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */;
  %170 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %171 = cast(%var_8801, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %172 = atanh(%171) /* ty=Tensor[(10, 14, 7), float64] */;
  %173 = cast(%172, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  %174 = sigmoid(%173) /* ty=Tensor[(10, 14, 7), float32] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  %176 = log(%175) /* ty=Tensor[(10, 14, 7), float32] */;
  %177 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 14, 7), uint8] */, dtype="int64") /* ty=Tensor[(10, 14, 7), int64] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="int64") /* ty=Tensor[(10, 14, 7), int64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %181 = greater_equal(%158, %159) /* ty=Tensor[(10, 14, 7), bool] */;
  %182 = %162.0;
  %183 = %169.0;
  %184 = %170.0;
  %185 = logical_xor(%179, %180) /* ty=Tensor[(10, 14, 7), int64] */;
  (%181, %182, meta[relay.Constant][12] /* ty=Tensor[(120, 4), float32] */, %183, meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, meta[relay.Constant][14] /* ty=Tensor[(30), float64] */, meta[relay.Constant][15] /* ty=Tensor[(210), int8] */, %184, %185)
}

def @func_8313() -> (Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) {
  %186 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %187 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %188 = %186.1;
  %189 = %187.0;
  (%188, %189)
}

def @func_9731() -> Tensor[(420), int32] {
  @func_9652() /* ty=Tensor[(420), int32] */
}

def @func_8549(%var_8525: Tensor[(9, 1, 2), float64]) -> (Tensor[(9, ?, 2), bool],) {
  %190 = cast(%var_8525, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %191 = sin(%190) /* ty=Tensor[(9, 1, 2), float64] */;
  %192 = cast(%var_8525, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%191, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %196 = logical_and(%194, %195) /* ty=Tensor[(9, ?, 2), bool] */;
  (%196,)
}

def @func_8758() -> (Tensor[(6, 11, 16), float64],) {
  %197 = @func_8741() /* ty=Tensor[(6, 11, 16), float32] */;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %199 = cos(%198) /* ty=Tensor[(6, 11, 16), float64] */;
  (%199,)
}

def @func_10822(%var_10815: Tensor[(60), float64], %var_10817: Tensor[(30), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(30), float64], Tensor[(60), float64], Tensor[(360), float64], Tensor[(30), float64], Tensor[(5, 42), int8], Tensor[(208), float32]) {
  %200 = @func_9428() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %201 = %200.0;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %203 = atanh(%202) /* ty=Tensor[(6, 11, 16), float64] */;
  %204 = cast(%201, dtype="int32") /* ty=Tensor[(6, 11, 16), int32] */;
  %205 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%203, dtype="int32") /* ty=Tensor[(6, 11, 16), int32] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %208 = bitwise_and(%206, %207) /* ty=Tensor[(6, 11, 16), int32] */;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
  %210 = cast(%var_10815, dtype="float64") /* ty=Tensor[(60), float64] */;
  %211 = cast(meta[relay.Constant][16] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %212 = cast(%var_10817, dtype="float64") /* ty=Tensor[(30), float64] */;
  %213 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 42), int8] */, dtype="int8") /* ty=Tensor[(5, 42), int8] */;
  %214 = cast(meta[relay.Constant][18] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %215 = reshape(%210, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), float64] */;
  %216 = reshape(%211, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %217 = reshape(%212, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %218 = reshape(%213, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %219 = reshape(%214, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %220 = @func_6903(%215, %216, %217, %218, %219) /* ty=(Tensor[(1, 15, 4), float64], Tensor[(30), float64], Tensor[(360), float64], Tensor[(1, 30), float64], Tensor[(210), int8], Tensor[(13, 12, 16), bool], Tensor[(208), float32], Tensor[(2496), float32], Tensor[(11), float64]) */;
  %221 = log10(%209) /* ty=Tensor[(6, 11, 16), float32] */;
  %222 = %220.1;
  (%221, %222, %var_10815, meta[relay.Constant][16] /* ty=Tensor[(360), float64] */, %var_10817, meta[relay.Constant][17] /* ty=Tensor[(5, 42), int8] */, meta[relay.Constant][18] /* ty=Tensor[(208), float32] */)
}

def @func_10833() -> (Tensor[(14, 3, 10), bool],) {
  %223 = @func_8503() /* ty=Tensor[(14, 3, 10), bool] */;
  (%223,)
}

def @func_10550() -> (Tensor[(6, 11, 16), float32],) {
  %224 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %225 = %224.0;
  (%225,)
}

def @func_10865() -> (Tensor[(14, 3, 10), bool],) {
  %226 = @func_8503() /* ty=Tensor[(14, 3, 10), bool] */;
  (%226,)
}

def @func_8968(%var_8914: Tensor[(672), uint64], %var_8938: Tensor[(360), int16]) -> (Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) {
  %227 = cast(meta[relay.Constant][19] /* ty=Tensor[(18, 4), float32] */, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %228 = cast(%var_8914, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %229 = reshape(%227, newshape=[72, 1]) /* ty=Tensor[(72, 1), float32] */;
  %230 = reshape(%228, newshape=[1, 672]) /* ty=Tensor[(1, 672), uint64] */;
  %231 = @func_8796(%229, %230) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(1, 9, 8), float32], Tensor[(72, 1), float32], Tensor[(280), float32], Tensor[(1, 672), uint64]) */;
  %232 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %233 = %232.0;
  %234 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%233, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %238 = cast(%var_8938, dtype="int16") /* ty=Tensor[(360), int16] */;
  %239 = cast(%var_8938, dtype="int16") /* ty=Tensor[(360), int16] */;
  %240 = reshape(%238, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
  %241 = reshape(%239, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
  %242 = cast(meta[relay.Constant][21] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %243 = reshape(%242, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %244 = @func_8372(%243) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
  %245 = cast(meta[relay.Constant][21] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %246 = reshape(%245, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %247 = @func_8372(%246) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
  %248 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
  %249 = cast(%233, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %250 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(6, 11, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = %231.1;
  %254 = not_equal(%236, %237) /* ty=Tensor[(6, 11, 16), bool] */;
  %255 = @func_3871(%240, %241) /* ty=Tensor[(4, 9, 10), int16] */;
  %256 = %244.3;
  %257 = %247.0;
  %258 = %248.0;
  %259 = less_equal(%251, %252) /* ty=Tensor[(6, 11, 16), bool] */;
  (%253, meta[relay.Constant][19] /* ty=Tensor[(18, 4), float32] */, %var_8914, %254, %255, %var_8938, %256, meta[relay.Constant][21] /* ty=Tensor[(98), float64] */, %257, %258, %259)
}

def @func_9218(%var_9207: Tensor[(7, 14), float64], %var_9212: Tensor[(495), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(182, 1), float64], Tensor[(7, 14), float64], Tensor[(495), int16]) {
  %260 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %261 = cast(meta[relay.Constant][22] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
  %262 = cast(meta[relay.Constant][23] /* ty=Tensor[(182, 1), float64] */, dtype="float64") /* ty=Tensor[(182, 1), float64] */;
  %263 = cast(%var_9207, dtype="float64") /* ty=Tensor[(7, 14), float64] */;
  %264 = reshape(%261, newshape=[495, 1]) /* ty=Tensor[(495, 1), float64] */;
  %265 = reshape(%262, newshape=[26, 7]) /* ty=Tensor[(26, 7), float64] */;
  %266 = reshape(%263, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %267 = @func_9168(%264, %265, %266) /* ty=(Tensor[(6, 11, 16), float64], Tensor[(11, 5, 9), float64], Tensor[(9, ?, 2), bool], Tensor[(18), float64], Tensor[(11), float64], Tensor[(26, 7), float64], Tensor[(14, 3, 10), bool], Tensor[(495, 11), int64], Tensor[(14, 3, 10), bool], Tensor[(495, 98), uint32]) */;
  %268 = cast(%var_9212, dtype="int16") /* ty=Tensor[(495), int16] */;
  %269 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(495), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %270 = cast(meta[relay.Constant][22] /* ty=Tensor[(495), float64] */, dtype="int16") /* ty=Tensor[(495), int16] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?), int16] */;
  %272 = %260.0;
  %273 = %267.8;
  %274 = add(%270, %271) /* ty=Tensor[(495), int16] */;
  (%272, %273, meta[relay.Constant][23] /* ty=Tensor[(182, 1), float64] */, %var_9207, %274)
}

def @func_11332(%var_11269: Tensor[(16, 15, 14), float64], %var_11300: Tensor[(672), uint64]) -> (Tensor[(16, 15, 14), float64], Tensor[(11, 5, 9), float64], Tensor[(1056, 2), float64], Tensor[(16, 15, 14), uint64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8], Tensor[(9, 14, 11), int8], Tensor[(72), float32], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(420), int32]) {
  %275 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 14), float64] */;
  %276 = shape_of(%var_11269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%var_11269, dtype="float64") /* ty=Tensor[(16, 15, 14), float64] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %279 = cast(meta[relay.Constant][25] /* ty=Tensor[(1056, 2), float64] */, dtype="float64") /* ty=Tensor[(1056, 2), float64] */;
  %280 = reshape(%279, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float64] */;
  %281 = @func_7975(%280) /* ty=(Tensor[(16, 12, 11), float64], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) */;
  %282 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 15, 14), float64] */, dtype="float32") /* ty=Tensor[(16, 15, 14), float32] */;
  %283 = exp(%282) /* ty=Tensor[(16, 15, 14), float32] */;
  %284 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 15, 14), float64] */, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %288 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %289 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %290 = reshape(%288, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %291 = reshape(%289, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %292 = cast(meta[relay.Constant][27] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %293 = cast(meta[relay.Constant][28] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %294 = cast(%var_11300, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %295 = reshape(%292, newshape=[1, 9, 8]) /* ty=Tensor[(1, 9, 8), float32] */;
  %296 = reshape(%293, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %297 = reshape(%294, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %298 = @func_7719(%295, %296, %297) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) */;
  %299 = @func_9950() /* ty=(Tensor[(420), int32], Tensor[(6, 11, 16), float32]) */;
  %300 = floor_mod(%277, %278) /* ty=Tensor[(16, 15, 14), float64] */;
  %301 = %281.1;
  %302 = bitwise_xor(%286, %287) /* ty=Tensor[(16, 15, 14), uint64] */;
  %303 = @func_10268(%290, %291) /* ty=Tensor[(12, 11, 10), uint8] */;
  %304 = %298.1;
  %305 = %299.0;
  (%300, %301, meta[relay.Constant][25] /* ty=Tensor[(1056, 2), float64] */, %302, %303, meta[relay.Constant][26] /* ty=Tensor[(1320), uint8] */, %304, meta[relay.Constant][27] /* ty=Tensor[(72), float32] */, meta[relay.Constant][28] /* ty=Tensor[(280), float32] */, %var_11300, %305)
}

def @func_11369(%var_11359: Tensor[(1320), uint8]) -> (Tensor[(6, 11, 16), float64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8]) {
  %306 = @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */;
  %307 = cast(%var_11359, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %308 = cast(%var_11359, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %309 = reshape(%307, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %310 = reshape(%308, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %311 = %306.0;
  %312 = @func_10268(%309, %310) /* ty=Tensor[(12, 11, 10), uint8] */;
  (%311, %312, %var_11359)
}

def @func_11508() -> Tensor[(7, 13, 3), float64] {
  %313 = @func_9911() /* ty=(Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %314 = %313.1;
  %315 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(7, 13, 3), bool] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="bool") /* ty=Tensor[(7, 13, 3), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %319 = logical_and(%317, %318) /* ty=Tensor[(7, 13, 3), bool] */;
  %320 = cast(%314, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%319, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%322, %323) /* ty=Tensor[(7, 13, 3), float64] */
}

def @func_9565() -> Tensor[(6, 11, 16), uint32] {
  %324 = @func_8741() /* ty=Tensor[(6, 11, 16), float32] */;
  %325 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 11, 16), float32] */, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%327, %328) /* ty=Tensor[(6, 11, 16), uint32] */
}

def @func_8652(%var_8600: Tensor[(4, 10, 10), float32], %var_8621: Tensor[(4, 10, 10), float32], %var_8639: Tensor[(858), float64]) -> (Tensor[(4, 10, 10), bool], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) {
  %329 = cast(%var_8600, dtype="float32") /* ty=Tensor[(4, 10, 10), float32] */;
  %330 = log(%329) /* ty=Tensor[(4, 10, 10), float32] */;
  %331 = cast(%var_8621, dtype="bool") /* ty=Tensor[(4, 10, 10), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(4, 10, 10), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(%var_8639, dtype="float64") /* ty=Tensor[(858), float64] */;
  %336 = reshape(%335, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %337 = less_equal(%333, %334) /* ty=Tensor[(4, 10, 10), bool] */;
  %338 = @func_6420(%336) /* ty=Tensor[(13, 11, 6), float64] */;
  (%337, %338, %var_8639)
}

def @func_9742() -> Tensor[(6, 11, 16), float32] {
  %339 = @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */;
  %339.0
}

def @func_9874(%var_9814: Tensor[(672), uint64], %var_9840: Tensor[(180, 2), int16]) -> (Tensor[(420), int32], Tensor[(672), uint64], Tensor[(18, 4), float32], Tensor[(180, 2), int16], Tensor[(4, 9, 10), int16], Tensor[(6, 11, 16), uint32], Tensor[(6, 11, 16), float32], Tensor[(140, 2), int32]) {
  %340 = cast(%var_9814, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %341 = cast(%var_9840, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %342 = reshape(%340, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %343 = reshape(%341, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %344 = @func_8968(%342, %343) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) */;
  %345 = cast(%var_9840, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %346 = cast(%var_9840, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %347 = reshape(%345, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
  %348 = reshape(%346, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
  %349 = @func_9565() /* ty=Tensor[(6, 11, 16), uint32] */;
  %350 = cast(meta[relay.Constant][31] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %351 = cast(%var_9814, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %352 = reshape(%350, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %353 = reshape(%351, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint64] */;
  %354 = @func_3691(%352, %353) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */;
  %355 = %354.1;
  %356 = cast(%349, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
  %357 = cast(%355, dtype="float32") /* ty=float32 */;
  %358 = floor_divide(%356, %357) /* ty=Tensor[(6, 11, 16), float32] */;
  %359 = cast(%349, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
  %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%358, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %363 = @func_9580() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %364 = cast(meta[relay.Constant][31] /* ty=Tensor[(140, 2), float32] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %365 = sinh(%364) /* ty=Tensor[(140, 2), float64] */;
  %366 = cast(%365, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %367 = atanh(%366) /* ty=Tensor[(140, 2), float32] */;
  %368 = cast(%365, dtype="int32") /* ty=Tensor[(140, 2), int32] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(2), int32] */;
  %370 = cast(%367, dtype="int32") /* ty=Tensor[(140, 2), int32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %372 = @func_9731() /* ty=Tensor[(420), int32] */;
  %373 = %344.1;
  %374 = @func_3871(%347, %348) /* ty=Tensor[(4, 9, 10), int16] */;
  %375 = left_shift(%361, %362) /* ty=Tensor[(6, 11, 16), uint32] */;
  %376 = %363.0;
  %377 = left_shift(%370, %371) /* ty=Tensor[(140, 2), int32] */;
  (%372, %var_9814, %373, %var_9840, %374, %375, %376, %377)
}

def @func_11084(%var_11078: Tensor[(30), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(420), bool], Tensor[(360), float64], Tensor[(60), float64], Tensor[(30), float64]) {
  %378 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
  %379 = cast(%378, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
  %380 = @func_10686() /* ty=(Tensor[(420), bool],) */;
  %381 = cast(meta[relay.Constant][32] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %382 = cast(%var_11078, dtype="float64") /* ty=Tensor[(30), float64] */;
  %383 = reshape(%381, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %384 = reshape(%382, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %385 = @func_10822(%383, %384) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(30), float64], Tensor[(60), float64], Tensor[(360), float64], Tensor[(30), float64], Tensor[(5, 42), int8], Tensor[(208), float32]) */;
  %386 = asinh(%379) /* ty=Tensor[(6, 11, 16), float32] */;
  %387 = %380.0;
  %388 = %385.3;
  (%386, %387, %388, meta[relay.Constant][32] /* ty=Tensor[(60), float64] */, %var_11078)
}

def @func_3632(%var_3596: Tensor[(15, 2, 15), bool], %var_3597: Tensor[(15, 2, 15), bool], %var_3616: Tensor[(6, 60), float64], %var_3627: Tensor[(630), float32]) -> (Tensor[(15, 2, 15), bool], Tensor[(210), float64], Tensor[(6, 60), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(7, 5, 6), int32], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) {
  %389 = cast(%var_3597, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %390 = shape_of(%var_3596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%var_3596, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %393 = cast(%var_3616, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %394 = cast(meta[relay.Constant][33] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %395 = cast(meta[relay.Constant][34] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %396 = reshape(%393, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %397 = reshape(%394, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %398 = reshape(%395, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %399 = @func_1481(%396, %397, %398) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */;
  %400 = cast(meta[relay.Constant][33] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %401 = cast(meta[relay.Constant][34] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %402 = reshape(%400, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %403 = reshape(%401, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %404 = @func_1287(%402, %403) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %405 = cast(%var_3627, dtype="float32") /* ty=Tensor[(630), float32] */;
  %406 = reshape(%405, newshape=[9, 10, 7]) /* ty=Tensor[(9, 10, 7), float32] */;
  %407 = @func_1774(%406) /* ty=(Tensor[(9, 10, 7), float32],) */;
  %408 = logical_and(%391, %392) /* ty=Tensor[(15, 2, 15), bool] */;
  %409 = %399.4;
  %410 = %404.0;
  %411 = %407.0;
  (%408, %409, %var_3616, meta[relay.Constant][33] /* ty=Tensor[(30), float64] */, meta[relay.Constant][34] /* ty=Tensor[(210), int8] */, %410, %411, %var_3627)
}

def @func_4092(%var_4038: Tensor[(1, 11, 1), float64]) -> (Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) {
  %412 = cast(7.1909f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %413 = cast(%var_4038, dtype="float64") /* ty=Tensor[(1, 11, 1), float64] */;
  %414 = cast(%var_4038, dtype="int16") /* ty=Tensor[(1, 11, 1), int16] */;
  %415 = cast(7.1909f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
  %416 = cast(%var_4038, dtype="float64") /* ty=Tensor[(1, 11, 1), float64] */;
  %417 = divide(%412, %413) /* ty=Tensor[(1, 11, 1), float64] */;
  %418 = add(%414, %415) /* ty=Tensor[(1, 11, 1), int16] */;
  %419 = sin(%416) /* ty=Tensor[(1, 11, 1), float64] */;
  (%417, %418, %419)
}

def @func_8113(%var_8102: Tensor[(2, 2, 8), float64]) -> Tensor[(2, 2, 8), float64] {
  %420 = cast(%var_8102, dtype="float64") /* ty=Tensor[(2, 2, 8), float64] */;
  sin(%420) /* ty=Tensor[(2, 2, 8), float64] */
}

def @func_2954(%var_2936: uint64, %var_2937: Tensor[(6, 7, 16), uint64]) -> (Tensor[(6, 7, 16), uint64], Tensor[(13, 7, 6), bool]) {
  %421 = cast(%var_2936, dtype="uint64") /* ty=uint64 */;
  %422 = cast(%var_2937, dtype="uint64") /* ty=Tensor[(6, 7, 16), uint64] */;
  %423 = cast(%var_2936, dtype="bool") /* ty=bool */;
  %424 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 7, 6), uint64] */, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %425 = minimum(%421, %422) /* ty=Tensor[(6, 7, 16), uint64] */;
  %426 = less(%423, %424) /* ty=Tensor[(13, 7, 6), bool] */;
  (%425, %426)
}

def @func_7218(%var_7156: Tensor[(14, 1, 7), float64], %var_7205: Tensor[(1, 182), float64]) -> (Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) {
  %427 = cast(%var_7205, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
  %428 = reshape(%427, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), float64] */;
  %429 = @func_7033(%428) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
  %430 = cast(%var_7156, dtype="float64") /* ty=Tensor[(14, 1, 7), float64] */;
  %431 = sin(%430) /* ty=Tensor[(14, 1, 7), float64] */;
  %432 = cast(%431, dtype="uint8") /* ty=Tensor[(14, 1, 7), uint8] */;
  %433 = shape_of(%var_7156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%var_7156, dtype="uint8") /* ty=Tensor[(14, 1, 7), uint8] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %436 = add(%434, %435) /* ty=Tensor[(14, ?, 7), uint8] */;
  %437 = cast(%436, dtype="bool") /* ty=Tensor[(14, ?, 7), bool] */;
  %438 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%431, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %441 = equal(%439, %440) /* ty=Tensor[(14, ?, 7), bool] */;
  %442 = cast(%var_7156, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %443 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%431, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %446 = logical_and(%444, %445) /* ty=Tensor[(14, ?, 7), bool] */;
  %447 = cast(%446, dtype="uint64") /* ty=Tensor[(14, ?, 7), uint64] */;
  %448 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%441, dtype="uint64") /* ty=Tensor[(14, ?, 7), uint64] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %451 = %429.0;
  %452 = bitwise_or(%449, %450) /* ty=Tensor[(14, ?, 7), uint64] */;
  (%451, %var_7205, %452)
}

def @func_10358(%var_10301: Tensor[(630), float32]) -> (Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) {
  %453 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %454 = cast(%var_10301, dtype="float32") /* ty=Tensor[(630), float32] */;
  %455 = reshape(%454, newshape=[9, 10, 7]) /* ty=Tensor[(9, 10, 7), float32] */;
  %456 = @func_1774(%455) /* ty=(Tensor[(9, 10, 7), float32],) */;
  %457 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %458 = cast(meta[relay.Constant][36] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %459 = cast(meta[relay.Constant][36] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %460 = cast(meta[relay.Constant][37] /* ty=Tensor[(429, 2), float64] */, dtype="float64") /* ty=Tensor[(429, 2), float64] */;
  %461 = reshape(%458, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float32] */;
  %462 = reshape(%459, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float32] */;
  %463 = reshape(%460, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %464 = @func_8652(%461, %462, %463) /* ty=(Tensor[(4, 10, 10), bool], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="uint64") /* ty=Tensor[(4, 10, 10), uint64] */;
  %467 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(400), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %468 = cast(meta[relay.Constant][36] /* ty=Tensor[(400), float32] */, dtype="uint64") /* ty=Tensor[(400), uint64] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %470 = cast(meta[relay.Constant][38] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
  %471 = cast(meta[relay.Constant][38] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
  %472 = reshape(%470, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
  %473 = reshape(%471, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
  %474 = @func_2550(%472, %473) /* ty=(Tensor[(9, 14, 11), int8],) */;
  %475 = %474.0;
  %476 = cast(meta[relay.Constant][38] /* ty=Tensor[(1386), int8] */, dtype="bool") /* ty=Tensor[(1386), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(9, 14, 11), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = cast(meta[relay.Constant][37] /* ty=Tensor[(429, 2), float64] */, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %481 = sinh(%480) /* ty=Tensor[(429, 2), float32] */;
  %482 = cast(meta[relay.Constant][37] /* ty=Tensor[(429, 2), float64] */, dtype="bool") /* ty=Tensor[(429, 2), bool] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%481, dtype="bool") /* ty=Tensor[(429, 2), bool] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %486 = %453.0;
  %487 = %456.0;
  %488 = %457.0;
  %489 = subtract(%468, %469) /* ty=Tensor[(400), uint64] */;
  %490 = less(%478, %479) /* ty=Tensor[(9, 14, 11), bool] */;
  %491 = greater(%484, %485) /* ty=Tensor[(429, 2), bool] */;
  (%486, %487, %var_10301, %488, %489, %490, %491)
}

def @func_10686() -> (Tensor[(420), bool],) {
  %492 = @func_9652() /* ty=Tensor[(420), int32] */;
  %493 = cast(meta[relay.Constant][39] /* ty=Tensor[(420), int32] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(1), int32] */;
  %495 = cast(%492, dtype="bool") /* ty=Tensor[(420), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?), bool] */;
  %497 = less(%495, %496) /* ty=Tensor[(420), bool] */;
  (%497,)
}

def @func_9484(%var_9453: Tensor[(16, 4, 11), int16], %var_9454: Tensor[(16, 4, 11), int16]) -> Tensor[(16, 4, 11), int16] {
  %498 = cast(%var_9454, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
  %499 = shape_of(%var_9453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_9453, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%500, %501) /* ty=Tensor[(16, 4, 11), int16] */
}

def @func_11384() -> Tensor[(6, 11, 16), float32] {
  @func_9387() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_7975(%var_7953: Tensor[(16, 12, 11), float64]) -> (Tensor[(16, 12, 11), float64], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) {
  %502 = cast(%var_7953, dtype="float64") /* ty=Tensor[(16, 12, 11), float64] */;
  %503 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(16, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 11), float64] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %506 = cast(meta[relay.Constant][41] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
  %507 = reshape(%506, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
  %508 = mod(%504, %505) /* ty=Tensor[(16, 12, 11), float64] */;
  %509 = @func_4351(%507) /* ty=Tensor[(11, 5, 9), float64] */;
  (%508, %509, meta[relay.Constant][41] /* ty=Tensor[(495), float64] */)
}

def @func_9503() -> Tensor[(210, 2), int32] {
  %510 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %510.2
}

def @func_8472(%var_8412: Tensor[(6, 11, 16), float64], %var_8425: Tensor[(11), float64], %var_8431: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) {
  %511 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %512 = %511.0;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %514 = sigmoid(%513) /* ty=Tensor[(6, 11, 16), float64] */;
  %515 = cast(%var_8412, dtype="uint8") /* ty=Tensor[(6, 11, 16), uint8] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="uint8") /* ty=Tensor[(6, 11, 16), uint8] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %519 = cast(meta[relay.Constant][42] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %520 = cast(%var_8431, dtype="float64") /* ty=Tensor[(182), float64] */;
  %521 = reshape(%519, newshape=[14, 1, 7]) /* ty=Tensor[(14, 1, 7), float64] */;
  %522 = reshape(%520, newshape=[1, 182]) /* ty=Tensor[(1, 182), float64] */;
  %523 = @func_7218(%521, %522) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) */;
  %524 = cast(%var_8425, dtype="float64") /* ty=Tensor[(11), float64] */;
  %525 = reshape(%524, newshape=[1, 11, 1]) /* ty=Tensor[(1, 11, 1), float64] */;
  %526 = @func_4092(%525) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */;
  %527 = %526.1;
  %528 = cast(%514, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %529 = cast(%527, dtype="bool") /* ty=Tensor[(1, 11, 1), bool] */;
  %530 = cast(%var_8431, dtype="float64") /* ty=Tensor[(182), float64] */;
  %531 = reshape(%530, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), float64] */;
  %532 = @func_7033(%531) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
  %533 = add(%517, %518) /* ty=Tensor[(6, 11, 16), uint8] */;
  %534 = %523.2;
  %535 = greater_equal(%528, %529) /* ty=Tensor[(6, 11, 16), bool] */;
  %536 = %532.1;
  (%533, %var_8425, %534, meta[relay.Constant][42] /* ty=Tensor[(98), float64] */, %var_8431, %535, %536)
}

def @func_9339() -> (Tensor[(6, 11, 16), float32], Tensor[(15, 16, 5), float32], Tensor[(1200), float32]) {
  %537 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
  %538 = cast(meta[relay.Constant][43] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %539 = reshape(%538, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), float32] */;
  %540 = @func_4569(%539) /* ty=(Tensor[(15, 16, 5), float32],) */;
  %541 = %537.1;
  %542 = %540.0;
  (%541, %542, meta[relay.Constant][43] /* ty=Tensor[(1200), float32] */)
}

def @func_4247(%var_4224: Tensor[(14, 3, 10), int32], %var_4225: Tensor[(14, 3, 10), int32]) -> (Tensor[(14, 3, 10), bool],) {
  %543 = cast(%var_4225, dtype="bool") /* ty=Tensor[(14, 3, 10), bool] */;
  %544 = shape_of(%var_4224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%var_4224, dtype="bool") /* ty=Tensor[(14, 3, 10), bool] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %547 = greater(%545, %546) /* ty=Tensor[(14, 3, 10), bool] */;
  (%547,)
}

def @func_7719(%var_7702: Tensor[(1, 9, 8), float32], %var_7714: Tensor[(280), float32], %var_7715: Tensor[(672), uint64]) -> (Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) {
  %548 = cast(2.85097f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %549 = cast(%var_7702, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %550 = cast(meta[relay.Constant][44] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
  %551 = cast(meta[relay.Constant][44] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
  %552 = reshape(%550, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
  %553 = reshape(%551, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
  %554 = @func_2550(%552, %553) /* ty=(Tensor[(9, 14, 11), int8],) */;
  %555 = cast(%var_7714, dtype="float32") /* ty=Tensor[(280), float32] */;
  %556 = cast(%var_7715, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %557 = reshape(%555, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %558 = reshape(%556, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint64] */;
  %559 = @func_3691(%557, %558) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */;
  %560 = power(%548, %549) /* ty=Tensor[(1, 9, 8), float32] */;
  %561 = %554.0;
  %562 = %559.0;
  (%560, %561, meta[relay.Constant][44] /* ty=Tensor[(1386), int8] */, %562, %var_7714, %var_7715)
}

def @func_10215(%var_10198: Tensor[(480), float32]) -> (Tensor[(6, 11, 16), float32], Tensor[(15, 4, 8), float32], Tensor[(480), float32]) {
  %563 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
  %564 = cast(%var_10198, dtype="float32") /* ty=Tensor[(480), float32] */;
  %565 = reshape(%564, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), float32] */;
  %566 = @func_5303(%565) /* ty=(Tensor[(15, 4, 8), float32],) */;
  %567 = %563.1;
  %568 = %566.0;
  (%567, %568, %var_10198)
}

def @func_4462(%var_4414: Tensor[(9, 4, 8), int64], %var_4423: Tensor[(9, 4, 8), int64], %var_4430: Tensor[(280), float32], %var_4444: Tensor[(30, 1), float64]) -> (Tensor[(9, 4, 8), int64], Tensor[(168, 4), uint64], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(7, 5, 6), int32], Tensor[(30, 1), float64], Tensor[(35, 6), int8], Tensor[(9, 4, 8), uint64]) {
  %569 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 4, 8), int64] */, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
  %570 = shape_of(%var_4414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%var_4414, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %573 = bitwise_xor(%571, %572) /* ty=Tensor[(9, 4, 8), int64] */;
  %574 = cast(%var_4423, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %578 = cast(%var_4430, dtype="float32") /* ty=Tensor[(280), float32] */;
  %579 = cast(meta[relay.Constant][46] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %580 = reshape(%578, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %581 = reshape(%579, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint64] */;
  %582 = @func_3691(%580, %581) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */;
  %583 = cast(%var_4444, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
  %584 = cast(meta[relay.Constant][47] /* ty=Tensor[(35, 6), int8] */, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
  %585 = reshape(%583, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %586 = reshape(%584, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %587 = @func_1287(%585, %586) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %588 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 4, 8), int64] */, dtype="uint64") /* ty=Tensor[(9, 4, 8), uint64] */;
  %589 = shape_of(%var_4423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_4423, dtype="uint64") /* ty=Tensor[(9, 4, 8), uint64] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %592 = bitwise_and(%576, %577) /* ty=Tensor[(9, 4, 8), int64] */;
  %593 = %582.2;
  %594 = %587.0;
  %595 = maximum(%590, %591) /* ty=Tensor[(9, 4, 8), uint64] */;
  (%592, %593, %var_4430, meta[relay.Constant][46] /* ty=Tensor[(672), uint64] */, %594, %var_4444, meta[relay.Constant][47] /* ty=Tensor[(35, 6), int8] */, %595)
}

def @func_11540(%var_11529: Tensor[(2, 630), float32]) -> (Tensor[(2, 630), bool],) {
  %596 = @func_9911() /* ty=(Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %597 = %596.0;
  %598 = cast(%597, dtype="bool") /* ty=Tensor[(1, 630), bool] */;
  %599 = cast(%var_11529, dtype="bool") /* ty=Tensor[(2, 630), bool] */;
  %600 = not_equal(%598, %599) /* ty=Tensor[(2, 630), bool] */;
  (%600,)
}

def @func_8503() -> Tensor[(14, 3, 10), bool] {
  %601 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %601.1
}

def @func_2685(%var_2647: Tensor[(8, 9, 3), float64], %var_2671: Tensor[(5, 6), float64]) -> (Tensor[(8, 9, 3), float64], Tensor[(7, 5, 6), int32], Tensor[(5, 6), float64], Tensor[(210), int8]) {
  %602 = cast(%var_2647, dtype="float64") /* ty=Tensor[(8, 9, 3), float64] */;
  %603 = cast(%var_2671, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %604 = cast(meta[relay.Constant][48] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %605 = reshape(%603, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %606 = reshape(%604, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %607 = @func_1287(%605, %606) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %608 = exp(%602) /* ty=Tensor[(8, 9, 3), float64] */;
  %609 = %607.0;
  (%608, %609, %var_2671, meta[relay.Constant][48] /* ty=Tensor[(210), int8] */)
}

def @func_11439(%var_11425: Tensor[(1, 8, 1), float64]) -> (Tensor[(15, 8, 7), float64], Tensor[(15, 8, 7), bool]) {
  %610 = cast(%var_11425, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
  %611 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 7), float64] */;
  %612 = cast(%var_11425, dtype="bool") /* ty=Tensor[(1, 8, 1), bool] */;
  %613 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(15, 8, 7), bool] */;
  %614 = mod(%610, %611) /* ty=Tensor[(15, 8, 7), float64] */;
  %615 = greater(%612, %613) /* ty=Tensor[(15, 8, 7), bool] */;
  (%614, %615)
}

def @func_11521() -> Tensor[(6, 11, 16), float32] {
  %616 = @func_9580() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %616.0
}

def @func_2550(%var_2505: Tensor[(9, 14, 11), int8], %var_2506: Tensor[(9, 14, 11), int8]) -> (Tensor[(9, 14, 11), int8],) {
  %617 = cast(%var_2506, dtype="int8") /* ty=Tensor[(9, 14, 11), int8] */;
  %618 = shape_of(%var_2505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_2505, dtype="int8") /* ty=Tensor[(9, 14, 11), int8] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %621 = bitwise_and(%619, %620) /* ty=Tensor[(9, 14, 11), int8] */;
  (%621,)
}

def @func_9652() -> Tensor[(420), int32] {
  %622 = @func_9274() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) */;
  %622.2
}

def @func_10268(%var_10248: Tensor[(12, 11, 10), uint8], %var_10249: Tensor[(12, 11, 10), uint8]) -> Tensor[(12, 11, 10), uint8] {
  %623 = cast(%var_10249, dtype="uint8") /* ty=Tensor[(12, 11, 10), uint8] */;
  %624 = shape_of(%var_10248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%var_10248, dtype="uint8") /* ty=Tensor[(12, 11, 10), uint8] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%625, %626) /* ty=Tensor[(12, 11, 10), uint8] */
}

def @func_6903(%var_6865: Tensor[(1, 15, 4), float64], %var_6870: Tensor[(360), float64], %var_6871: Tensor[(1, 30), float64], %var_6872: Tensor[(210), int8], %var_6886: Tensor[(208), float32]) -> (Tensor[(1, 15, 4), float64], Tensor[(30), float64], Tensor[(360), float64], Tensor[(1, 30), float64], Tensor[(210), int8], Tensor[(13, 12, 16), bool], Tensor[(208), float32], Tensor[(2496), float32], Tensor[(11), float64]) {
  %627 = cast(%var_6865, dtype="float64") /* ty=Tensor[(1, 15, 4), float64] */;
  %628 = cast(%var_6870, dtype="float64") /* ty=Tensor[(360), float64] */;
  %629 = cast(%var_6871, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
  %630 = cast(%var_6872, dtype="int8") /* ty=Tensor[(210), int8] */;
  %631 = reshape(%628, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %632 = reshape(%629, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %633 = reshape(%630, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %634 = @func_1481(%631, %632, %633) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */;
  %635 = cast(%var_6886, dtype="float32") /* ty=Tensor[(208), float32] */;
  %636 = cast(meta[relay.Constant][50] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
  %637 = cast(meta[relay.Constant][51] /* ty=Tensor[(11), float64] */, dtype="float64") /* ty=Tensor[(11), float64] */;
  %638 = reshape(%635, newshape=[13, 1, 16]) /* ty=Tensor[(13, 1, 16), float32] */;
  %639 = reshape(%636, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
  %640 = reshape(%637, newshape=[11]) /* ty=Tensor[(11), float64] */;
  %641 = @func_6021(%638, %639, %640) /* ty=(Tensor[(13, 12, 16), bool], Tensor[(13, 12, 16), uint16], Tensor[(1, 11, 1), float64], Tensor[(11), float64]) */;
  %642 = atan(%627) /* ty=Tensor[(1, 15, 4), float64] */;
  %643 = %634.2;
  %644 = %641.0;
  (%642, %643, %var_6870, %var_6871, %var_6872, %644, %var_6886, meta[relay.Constant][50] /* ty=Tensor[(2496), float32] */, meta[relay.Constant][51] /* ty=Tensor[(11), float64] */)
}

def @func_6021(%var_6001: Tensor[(13, 1, 16), float32], %var_6002: Tensor[(13, 12, 16), float32], %var_6019: Tensor[(11), float64]) -> (Tensor[(13, 12, 16), bool], Tensor[(13, 12, 16), uint16], Tensor[(1, 11, 1), float64], Tensor[(11), float64]) {
  %645 = cast(%var_6001, dtype="float32") /* ty=Tensor[(13, 1, 16), float32] */;
  %646 = cast(%var_6002, dtype="float32") /* ty=Tensor[(13, 12, 16), float32] */;
  %647 = maximum(%645, %646) /* ty=Tensor[(13, 12, 16), float32] */;
  %648 = cast(%var_6001, dtype="bool") /* ty=Tensor[(13, 1, 16), bool] */;
  %649 = cast(%647, dtype="bool") /* ty=Tensor[(13, 12, 16), bool] */;
  %650 = cast(%var_6002, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
  %651 = shape_of(%647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%647, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %654 = cast(%var_6019, dtype="float64") /* ty=Tensor[(11), float64] */;
  %655 = reshape(%654, newshape=[1, 11, 1]) /* ty=Tensor[(1, 11, 1), float64] */;
  %656 = @func_4092(%655) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */;
  %657 = less_equal(%648, %649) /* ty=Tensor[(13, 12, 16), bool] */;
  %658 = add(%652, %653) /* ty=Tensor[(13, 12, 16), uint16] */;
  %659 = %656.0;
  (%657, %658, %659, %var_6019)
}

def @func_4895(%var_4879: Tensor[(1, 5, 6), uint16], %var_4880: Tensor[(2, 5, 6), uint16], %var_4885: Tensor[(450), bool]) -> (Tensor[(2, 5, 6), uint16], Tensor[(630), float32], Tensor[(450), bool], Tensor[(6, 60), float64], Tensor[(630), float32]) {
  %660 = cast(%var_4879, dtype="uint16") /* ty=Tensor[(1, 5, 6), uint16] */;
  %661 = cast(%var_4880, dtype="uint16") /* ty=Tensor[(2, 5, 6), uint16] */;
  %662 = cast(%var_4885, dtype="bool") /* ty=Tensor[(450), bool] */;
  %663 = cast(%var_4885, dtype="bool") /* ty=Tensor[(450), bool] */;
  %664 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 60), float64] */, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %665 = cast(meta[relay.Constant][53] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %666 = reshape(%662, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), bool] */;
  %667 = reshape(%663, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), bool] */;
  %668 = reshape(%664, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
  %669 = reshape(%665, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %670 = @func_3632(%666, %667, %668, %669) /* ty=(Tensor[(15, 2, 15), bool], Tensor[(210), float64], Tensor[(6, 60), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(7, 5, 6), int32], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) */;
  %671 = bitwise_or(%660, %661) /* ty=Tensor[(2, 5, 6), uint16] */;
  %672 = %670.7;
  (%671, %672, %var_4885, meta[relay.Constant][52] /* ty=Tensor[(6, 60), float64] */, meta[relay.Constant][53] /* ty=Tensor[(630), float32] */)
}

def @func_7688(%var_7676: Tensor[(9, 16, 5), uint8]) -> (Tensor[(9, 16, 5), uint8],) {
  %673 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1, 5), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1, 5), uint8] */;
  %674 = cast(%var_7676, dtype="uint8") /* ty=Tensor[(9, 16, 5), uint8] */;
  %675 = logical_xor(%673, %674) /* ty=Tensor[(9, 16, 5), uint8] */;
  (%675,)
}

def @func_9168(%var_9078: Tensor[(495, 1), float64], %var_9096: Tensor[(26, 7), float64], %var_9112: Tensor[(98), float64]) -> (Tensor[(6, 11, 16), float64], Tensor[(11, 5, 9), float64], Tensor[(9, ?, 2), bool], Tensor[(18), float64], Tensor[(11), float64], Tensor[(26, 7), float64], Tensor[(14, 3, 10), bool], Tensor[(495, 11), int64], Tensor[(14, 3, 10), bool], Tensor[(495, 98), uint32]) {
  %676 = @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */;
  %677 = cast(%var_9078, dtype="float64") /* ty=Tensor[(495, 1), float64] */;
  %678 = reshape(%677, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
  %679 = cast(meta[relay.Constant][55] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %680 = reshape(%679, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), float64] */;
  %681 = @func_8549(%680) /* ty=(Tensor[(9, ?, 2), bool],) */;
  %682 = %676.0;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %684 = cast(meta[relay.Constant][56] /* ty=Tensor[(11), float64] */, dtype="float64") /* ty=Tensor[(11), float64] */;
  %685 = cast(%var_9096, dtype="float64") /* ty=Tensor[(26, 7), float64] */;
  %686 = reshape(%683, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), float64] */;
  %687 = reshape(%684, newshape=[11]) /* ty=Tensor[(11), float64] */;
  %688 = reshape(%685, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %689 = @func_8472(%686, %687, %688) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */;
  %690 = cast(%var_9112, dtype="float64") /* ty=Tensor[(98), float64] */;
  %691 = reshape(%690, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %692 = @func_8372(%691) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
  %693 = cast(meta[relay.Constant][56] /* ty=Tensor[(11), float64] */, dtype="int64") /* ty=Tensor[(11), int64] */;
  %694 = cast(%var_9078, dtype="int64") /* ty=Tensor[(495, 1), int64] */;
  %695 = %692.0;
  %696 = cast(%695, dtype="int32") /* ty=Tensor[(14, 3, 10), int32] */;
  %697 = cast(%695, dtype="int32") /* ty=Tensor[(14, 3, 10), int32] */;
  %698 = reshape(%696, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %699 = reshape(%697, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %700 = @func_4247(%698, %699) /* ty=(Tensor[(14, 3, 10), bool],) */;
  %701 = cast(%var_9112, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %702 = cast(%var_9078, dtype="uint32") /* ty=Tensor[(495, 1), uint32] */;
  %703 = bitwise_and(%701, %702) /* ty=Tensor[(495, 98), uint32] */;
  %704 = cast(%703, dtype="uint32") /* ty=Tensor[(495, 98), uint32] */;
  %705 = cast(%var_9112, dtype="uint32") /* ty=Tensor[(98), uint32] */;
  %706 = @func_4351(%678) /* ty=Tensor[(11, 5, 9), float64] */;
  %707 = %681.0;
  %708 = %689.1;
  %709 = multiply(%693, %694) /* ty=Tensor[(495, 11), int64] */;
  %710 = %700.0;
  %711 = add(%704, %705) /* ty=Tensor[(495, 98), uint32] */;
  (%682, %706, %707, meta[relay.Constant][55] /* ty=Tensor[(18), float64] */, %708, %var_9096, %695, %709, %710, %711)
}

def @func_9589(%var_9582: Tensor[(16, 15, 4), float32]) -> (Tensor[(16, 15, 4), float32],) {
  %712 = cast(%var_9582, dtype="float32") /* ty=Tensor[(16, 15, 4), float32] */;
  %713 = acos(%712) /* ty=Tensor[(16, 15, 4), float32] */;
  (%713,)
}

def @func_9950() -> (Tensor[(420), int32], Tensor[(6, 11, 16), float32]) {
  %714 = @func_9428() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %715 = @func_9731() /* ty=Tensor[(420), int32] */;
  %716 = %714.0;
  (%715, %716)
}

def @func_8796(%var_8780: Tensor[(72, 1), float32], %var_8782: Tensor[(1, 672), uint64]) -> (Tensor[(6, 11, 16), float32], Tensor[(1, 9, 8), float32], Tensor[(72, 1), float32], Tensor[(280), float32], Tensor[(1, 672), uint64]) {
  %717 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
  %718 = cast(%var_8780, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %719 = cast(meta[relay.Constant][57] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %720 = cast(%var_8782, dtype="uint64") /* ty=Tensor[(1, 672), uint64] */;
  %721 = reshape(%718, newshape=[1, 9, 8]) /* ty=Tensor[(1, 9, 8), float32] */;
  %722 = reshape(%719, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %723 = reshape(%720, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %724 = @func_7719(%721, %722, %723) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) */;
  %725 = %717.1;
  %726 = %724.0;
  (%725, %726, %var_8780, meta[relay.Constant][57] /* ty=Tensor[(280), float32] */, %var_8782)
}

def @func_8372(%var_8369: Tensor[(98), float64]) -> (Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) {
  %727 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %728 = cast(%var_8369, dtype="float64") /* ty=Tensor[(98), float64] */;
  %729 = cast(meta[relay.Constant][58] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %730 = reshape(%728, newshape=[14, 1, 7]) /* ty=Tensor[(14, 1, 7), float64] */;
  %731 = reshape(%729, newshape=[1, 182]) /* ty=Tensor[(1, 182), float64] */;
  %732 = @func_7218(%730, %731) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) */;
  %733 = %727.1;
  %734 = %732.1;
  (%733, %734, %var_8369, meta[relay.Constant][58] /* ty=Tensor[(182), float64] */)
}

def @func_8291() -> (Tensor[(6, 11, 16), float32],) {
  %735 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %736 = %735.0;
  (%736,)
}

def @func_9387() -> Tensor[(6, 11, 16), float32] {
  @func_8741() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_10050(%var_10007: Tensor[(180, 2), int16], %var_10042: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(672), uint64], Tensor[(672), uint64], Tensor[(11, 5, 9), bool], Tensor[(180, 2), float32], Tensor[(14, 3, 10), bool], Tensor[(182), float64], Tensor[(858), float32]) {
  %737 = @func_9950() /* ty=(Tensor[(420), int32], Tensor[(6, 11, 16), float32]) */;
  %738 = cast(meta[relay.Constant][59] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %739 = cast(%var_10007, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %740 = reshape(%738, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %741 = reshape(%739, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %742 = @func_8968(%740, %741) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) */;
  %743 = cast(meta[relay.Constant][60] /* ty=Tensor[(5, 99), float64] */, dtype="float64") /* ty=Tensor[(5, 99), float64] */;
  %744 = reshape(%743, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
  %745 = @func_4351(%744) /* ty=Tensor[(11, 5, 9), float64] */;
  %746 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 99), float64] */, dtype="bool") /* ty=Tensor[(5, 99), bool] */;
  %747 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(5, 99), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %748 = cast(meta[relay.Constant][60] /* ty=Tensor[(5, 99), float64] */, dtype="bool") /* ty=Tensor[(5, 99), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %750 = greater(%748, %749) /* ty=Tensor[(5, 99), bool] */;
  %751 = cast(%750, dtype="bool") /* ty=Tensor[(5, 99), bool] */;
  %752 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%745, dtype="bool") /* ty=Tensor[(11, 5, 9), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = cast(%var_10007, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %756 = @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */;
  %757 = cast(%var_10042, dtype="float64") /* ty=Tensor[(182), float64] */;
  %758 = reshape(%757, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), float64] */;
  %759 = @func_7033(%758) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
  %760 = %759.2;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(858), float32] */;
  %762 = %737.1;
  %763 = %742.2;
  %764 = not_equal(%753, %754) /* ty=Tensor[(11, 5, 9), bool] */;
  %765 = log(%755) /* ty=Tensor[(180, 2), float32] */;
  %766 = %756.1;
  %767 = atan(%761) /* ty=Tensor[(858), float32] */;
  (%762, %763, meta[relay.Constant][59] /* ty=Tensor[(672), uint64] */, %764, %765, %766, %var_10042, %767)
}

def @func_3871(%var_3857: Tensor[(4, 9, 10), int16], %var_3858: Tensor[(4, 9, 10), int16]) -> Tensor[(4, 9, 10), int16] {
  %768 = cast(%var_3858, dtype="int16") /* ty=Tensor[(4, 9, 10), int16] */;
  %769 = shape_of(%var_3857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%var_3857, dtype="int16") /* ty=Tensor[(4, 9, 10), int16] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%770, %771) /* ty=Tensor[(4, 9, 10), int16] */
}

def @func_7059(%var_7055: Tensor[(10, 3, 15), float64]) -> Tensor[(10, 3, 15), float64] {
  %772 = cast(%var_7055, dtype="float64") /* ty=Tensor[(10, 3, 15), float64] */;
  sqrt(%772) /* ty=Tensor[(10, 3, 15), float64] */
}

def @func_9580() -> (Tensor[(6, 11, 16), float32],) {
  %773 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
  (%773,)
}

def @func_4196(%var_4175: Tensor[(16, 5, 4), float32]) -> (Tensor[(16, 5, 4), float32], Tensor[(1, 11, 1), int16], Tensor[(1, 11), float64]) {
  %774 = cast(%var_4175, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %775 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 11), float64] */;
  %776 = reshape(%775, newshape=[1, 11, 1]) /* ty=Tensor[(1, 11, 1), float64] */;
  %777 = @func_4092(%776) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */;
  %778 = log10(%774) /* ty=Tensor[(16, 5, 4), float32] */;
  %779 = %777.1;
  (%778, %779, meta[relay.Constant][62] /* ty=Tensor[(1, 11), float64] */)
}

def @func_4569(%var_4565: Tensor[(15, 16, 5), float32]) -> (Tensor[(15, 16, 5), float32],) {
  %780 = cast(%var_4565, dtype="float32") /* ty=Tensor[(15, 16, 5), float32] */;
  %781 = cosh(%780) /* ty=Tensor[(15, 16, 5), float32] */;
  (%781,)
}

def @func_10982() -> Tensor[(420), int32] {
  @func_9652() /* ty=Tensor[(420), int32] */
}

def @func_9400() -> (Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) {
  %782 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 630), float32] */, dtype="float32") /* ty=Tensor[(1, 630), float32] */;
  %783 = reshape(%782, newshape=[9, 10, 7]) /* ty=Tensor[(9, 10, 7), float32] */;
  %784 = @func_1774(%783) /* ty=(Tensor[(9, 10, 7), float32],) */;
  %785 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
  %786 = %784.0;
  (%785, %786, meta[relay.Constant][63] /* ty=Tensor[(1, 630), float32] */)
}

def @func_6420(%var_6411: Tensor[(13, 11, 6), float64]) -> Tensor[(13, 11, 6), float64] {
  %787 = cast(%var_6411, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
  atan(%787) /* ty=Tensor[(13, 11, 6), float64] */
}

def @func_8741() -> Tensor[(6, 11, 16), float32] {
  %788 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %788.0
}

def @func_10741(%var_10739: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), uint32], Tensor[(98), float64], Tensor[(98), float64], Tensor[(11), float64], Tensor[(1, 11), float64], Tensor[(182), float64]) {
  %789 = cast(meta[relay.Constant][64] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %790 = reshape(%789, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %791 = @func_8372(%790) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
  %792 = @func_9565() /* ty=Tensor[(6, 11, 16), uint32] */;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %794 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 11), float64] */;
  %795 = cast(%var_10739, dtype="float64") /* ty=Tensor[(182), float64] */;
  %796 = reshape(%793, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), float64] */;
  %797 = reshape(%794, newshape=[11]) /* ty=Tensor[(11), float64] */;
  %798 = reshape(%795, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %799 = @func_8472(%796, %797, %798) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */;
  %800 = %791.2;
  %801 = %799.1;
  (%792, %800, meta[relay.Constant][64] /* ty=Tensor[(98), float64] */, %801, meta[relay.Constant][65] /* ty=Tensor[(1, 11), float64] */, %var_10739)
}

def @func_7033(%var_7011: Tensor[(13, 14, 1), float64]) -> (Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) {
  %802 = cast(%var_7011, dtype="float64") /* ty=Tensor[(13, 14, 1), float64] */;
  %803 = sigmoid(%802) /* ty=Tensor[(13, 14, 1), float64] */;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %805 = cast(meta[relay.Constant][66] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %806 = reshape(%805, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %807 = log(%804) /* ty=Tensor[(13, 14, 1), float32] */;
  %808 = @func_6420(%806) /* ty=Tensor[(13, 11, 6), float64] */;
  (%807, %808, meta[relay.Constant][66] /* ty=Tensor[(858), float64] */)
}

def @func_8212() -> (Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) {
  %809 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %810 = cast(meta[relay.Constant][67] /* ty=Tensor[(210, 2), int32] */, dtype="int32") /* ty=Tensor[(210, 2), int32] */;
  %811 = cast(meta[relay.Constant][67] /* ty=Tensor[(210, 2), int32] */, dtype="int32") /* ty=Tensor[(210, 2), int32] */;
  %812 = reshape(%810, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %813 = reshape(%811, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %814 = @func_4247(%812, %813) /* ty=(Tensor[(14, 3, 10), bool],) */;
  %815 = %809.0;
  %816 = %814.0;
  (%815, %816, meta[relay.Constant][67] /* ty=Tensor[(210, 2), int32] */)
}

def @func_9519(%var_9513: Tensor[(16, 7, 10), int16], %var_9514: Tensor[(16, 7, 10), int16]) -> Tensor[(16, 7, 10), bool] {
  %817 = cast(%var_9514, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %818 = shape_of(%var_9513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%var_9513, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%819, %820) /* ty=Tensor[(16, 7, 10), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10552() -> (Tensor[(6, 11, 16), float32],) {
  @func_10550() /* ty=(Tensor[(6, 11, 16), float32],) */
}

def @func_11255(%var_11253: Tensor[(630), float32]) -> (Tensor[(420), int32], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(9, 10, 7), float32], Tensor[(420), bool]) {
  @func_11252(%var_11253) /* ty=(Tensor[(420), int32], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(9, 10, 7), float32], Tensor[(420), bool]) */
}

def @func_1287(%var_1244: Tensor[(1, 5, 6), float64], %var_1263: Tensor[(7, 5, 6), int8]) -> (Tensor[(7, 5, 6), int32],) {
  %0 = cast(%var_1244, dtype="float64") /* ty=Tensor[(1, 5, 6), float64] */;
  %1 = sin(%0) /* ty=Tensor[(1, 5, 6), float64] */;
  %2 = cast(%var_1244, dtype="int8") /* ty=Tensor[(1, 5, 6), int8] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="int8") /* ty=Tensor[(1, 5, 6), int8] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %6 = left_shift(%4, %5) /* ty=Tensor[(?, 5, 6), int8] */;
  %7 = cast(%6, dtype="int32") /* ty=Tensor[(?, 5, 6), int32] */;
  %8 = cast(%var_1263, dtype="int32") /* ty=Tensor[(7, 5, 6), int32] */;
  %9 = minimum(%7, %8) /* ty=Tensor[(7, 5, 6), int32] */;
  (%9,)
}

def @func_4354(%var_4352: Tensor[(11, 5, 9), float64]) -> Tensor[(11, 5, 9), float64] {
  @func_4351(%var_4352) /* ty=Tensor[(11, 5, 9), float64] */
}

def @func_1291(%var_1289: Tensor[(1, 5, 6), float64], %var_1290: Tensor[(7, 5, 6), int8]) -> (Tensor[(7, 5, 6), int32],) {
  @func_1287(%var_1289, %var_1290) /* ty=(Tensor[(7, 5, 6), int32],) */
}

def @func_9519(%var_9513: Tensor[(16, 7, 10), int16], %var_9514: Tensor[(16, 7, 10), int16]) -> Tensor[(16, 7, 10), bool] {
  %10 = cast(%var_9514, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %11 = shape_of(%var_9513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%var_9513, dtype="bool") /* ty=Tensor[(16, 7, 10), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%12, %13) /* ty=Tensor[(16, 7, 10), bool] */
}

def @func_3637(%var_3633: Tensor[(15, 2, 15), bool], %var_3634: Tensor[(15, 2, 15), bool], %var_3635: Tensor[(6, 60), float64], %var_3636: Tensor[(630), float32]) -> (Tensor[(15, 2, 15), bool], Tensor[(210), float64], Tensor[(6, 60), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(7, 5, 6), int32], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) {
  %37 = fn (%var_3596: Tensor[(15, 2, 15), bool], %var_3597: Tensor[(15, 2, 15), bool], %var_3616: Tensor[(6, 60), float64], %var_3627: Tensor[(630), float32]) -> (Tensor[(15, 2, 15), bool], Tensor[(210), float64], Tensor[(6, 60), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(7, 5, 6), int32], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) {
    %14 = cast(%var_3597, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
    %15 = shape_of(%var_3596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %16 = cast(%var_3596, dtype="bool") /* ty=Tensor[(15, 2, 15), bool] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %18 = cast(%var_3616, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %21 = reshape(%18, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
    %22 = reshape(%19, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %23 = reshape(%20, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %24 = @func_1481(%21, %22, %23) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %27 = reshape(%25, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
    %28 = reshape(%26, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
    %29 = @func_1287(%27, %28) /* ty=(Tensor[(7, 5, 6), int32],) */;
    %30 = cast(%var_3627, dtype="float32") /* ty=Tensor[(630), float32] */;
    %31 = reshape(%30, newshape=[9, 10, 7]) /* ty=Tensor[(9, 10, 7), float32] */;
    %32 = @func_1774(%31) /* ty=(Tensor[(9, 10, 7), float32],) */;
    %33 = logical_and(%16, %17) /* ty=Tensor[(15, 2, 15), bool] */;
    %34 = %24.4;
    %35 = %29.0;
    %36 = %32.0;
    (%33, %34, %var_3616, meta[relay.Constant][0] /* ty=Tensor[(30), float64] */, meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, %35, %36, %var_3627)
  };
  %37(%var_3633, %var_3634, %var_3635, %var_3636) /* ty=(Tensor[(15, 2, 15), bool], Tensor[(210), float64], Tensor[(6, 60), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(7, 5, 6), int32], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) */
}

def @func_9592(%var_9590: Tensor[(16, 15, 4), float32]) -> (Tensor[(16, 15, 4), float32],) {
  @func_9589(%var_9590) /* ty=(Tensor[(16, 15, 4), float32],) */
}

def @func_10744(%var_10742: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), uint32], Tensor[(98), float64], Tensor[(98), float64], Tensor[(11), float64], Tensor[(1, 11), float64], Tensor[(182), float64]) {
  @func_10741(%var_10742) /* ty=(Tensor[(6, 11, 16), uint32], Tensor[(98), float64], Tensor[(98), float64], Tensor[(11), float64], Tensor[(1, 11), float64], Tensor[(182), float64]) */
}

def @func_8214() -> (Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) {
  @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */
}

def @func_8758() -> (Tensor[(6, 11, 16), float64],) {
  %38 = @func_8741() /* ty=Tensor[(6, 11, 16), float32] */;
  %39 = cast(%38, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %40 = cos(%39) /* ty=Tensor[(6, 11, 16), float64] */;
  (%40,)
}

def @func_6909(%var_6904: Tensor[(1, 15, 4), float64], %var_6905: Tensor[(360), float64], %var_6906: Tensor[(1, 30), float64], %var_6907: Tensor[(210), int8], %var_6908: Tensor[(208), float32]) -> (Tensor[(1, 15, 4), float64], Tensor[(30), float64], Tensor[(360), float64], Tensor[(1, 30), float64], Tensor[(210), int8], Tensor[(13, 12, 16), bool], Tensor[(208), float32], Tensor[(2496), float32], Tensor[(11), float64]) {
  %59 = fn (%var_6865: Tensor[(1, 15, 4), float64], %var_6870: Tensor[(360), float64], %var_6871: Tensor[(1, 30), float64], %var_6872: Tensor[(210), int8], %var_6886: Tensor[(208), float32]) -> (Tensor[(1, 15, 4), float64], Tensor[(30), float64], Tensor[(360), float64], Tensor[(1, 30), float64], Tensor[(210), int8], Tensor[(13, 12, 16), bool], Tensor[(208), float32], Tensor[(2496), float32], Tensor[(11), float64]) {
    %41 = cast(%var_6865, dtype="float64") /* ty=Tensor[(1, 15, 4), float64] */;
    %42 = cast(%var_6870, dtype="float64") /* ty=Tensor[(360), float64] */;
    %43 = cast(%var_6871, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
    %44 = cast(%var_6872, dtype="int8") /* ty=Tensor[(210), int8] */;
    %45 = reshape(%42, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
    %46 = reshape(%43, newshape=[30]) /* ty=Tensor[(30), float64] */;
    %47 = reshape(%44, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %48 = @func_1481(%45, %46, %47) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */;
    %49 = cast(%var_6886, dtype="float32") /* ty=Tensor[(208), float32] */;
    %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(2496), float32] */, dtype="float32") /* ty=Tensor[(2496), float32] */;
    %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(11), float64] */, dtype="float64") /* ty=Tensor[(11), float64] */;
    %52 = reshape(%49, newshape=[13, 1, 16]) /* ty=Tensor[(13, 1, 16), float32] */;
    %53 = reshape(%50, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), float32] */;
    %54 = reshape(%51, newshape=[11]) /* ty=Tensor[(11), float64] */;
    %55 = @func_6021(%52, %53, %54) /* ty=(Tensor[(13, 12, 16), bool], Tensor[(13, 12, 16), uint16], Tensor[(1, 11, 1), float64], Tensor[(11), float64]) */;
    %56 = atan(%41) /* ty=Tensor[(1, 15, 4), float64] */;
    %57 = %48.2;
    %58 = %55.0;
    (%56, %57, %var_6870, %var_6871, %var_6872, %58, %var_6886, meta[relay.Constant][2] /* ty=Tensor[(2496), float32] */, meta[relay.Constant][3] /* ty=Tensor[(11), float64] */)
  };
  %59(%var_6904, %var_6905, %var_6906, %var_6907, %var_6908) /* ty=(Tensor[(1, 15, 4), float64], Tensor[(30), float64], Tensor[(360), float64], Tensor[(1, 30), float64], Tensor[(210), int8], Tensor[(13, 12, 16), bool], Tensor[(208), float32], Tensor[(2496), float32], Tensor[(11), float64]) */
}

def @func_11174(%var_11171: Tensor[(30), uint16], %var_11172: Tensor[(32), float64], %var_11173: Tensor[(1, 182), float64]) -> (Tensor[(420), bool], Tensor[(6, 60), float64], Tensor[(30), uint16], Tensor[(60), uint16], Tensor[(450), bool], Tensor[(420), int32], Tensor[(2, 2, 8), float64], Tensor[(32), float64], Tensor[(180, 2), float32], Tensor[(1, 182), float64], Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) {
  %93 = fn (%var_11097: Tensor[(30), uint16], %var_11118: Tensor[(32), float64], %var_11122: Tensor[(1, 182), float64]) -> (Tensor[(420), bool], Tensor[(6, 60), float64], Tensor[(30), uint16], Tensor[(60), uint16], Tensor[(450), bool], Tensor[(420), int32], Tensor[(2, 2, 8), float64], Tensor[(32), float64], Tensor[(180, 2), float32], Tensor[(1, 182), float64], Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) {
    %60 = @func_10686() /* ty=(Tensor[(420), bool],) */;
    %61 = cast(%var_11097, dtype="uint16") /* ty=Tensor[(30), uint16] */;
    %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(450), bool] */, dtype="bool") /* ty=Tensor[(450), bool] */;
    %64 = reshape(%61, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), uint16] */;
    %65 = reshape(%62, newshape=[2, 5, 6]) /* ty=Tensor[(2, 5, 6), uint16] */;
    %66 = reshape(%63, newshape=[450]) /* ty=Tensor[(450), bool] */;
    %67 = @func_4895(%64, %65, %66) /* ty=(Tensor[(2, 5, 6), uint16], Tensor[(630), float32], Tensor[(450), bool], Tensor[(6, 60), float64], Tensor[(630), float32]) */;
    %68 = cast(%var_11118, dtype="float64") /* ty=Tensor[(32), float64] */;
    %69 = reshape(%68, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float64] */;
    %70 = %67.3;
    %71 = cast(%70, dtype="int16") /* ty=Tensor[(6, 60), int16] */;
    %72 = cast(%var_11122, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
    %73 = reshape(%71, newshape=[180, 2]) /* ty=Tensor[(180, 2), int16] */;
    %74 = reshape(%72, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %75 = @func_10050(%73, %74) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(672), uint64], Tensor[(672), uint64], Tensor[(11, 5, 9), bool], Tensor[(180, 2), float32], Tensor[(14, 3, 10), bool], Tensor[(182), float64], Tensor[(858), float32]) */;
    %76 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %77 = %76.0;
    %78 = @func_9565() /* ty=Tensor[(6, 11, 16), uint32] */;
    %79 = cast(%78, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
    %80 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%77, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %83 = @func_9580() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
    %85 = reshape(%84, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
    %86 = %60.0;
    %87 = @func_9731() /* ty=Tensor[(420), int32] */;
    %88 = @func_8113(%69) /* ty=Tensor[(2, 2, 8), float64] */;
    %89 = %75.4;
    %90 = floor_mod(%81, %82) /* ty=Tensor[(6, 11, 16), float64] */;
    %91 = %83.0;
    %92 = @func_4351(%85) /* ty=Tensor[(11, 5, 9), float64] */;
    (%86, %70, %var_11097, meta[relay.Constant][4] /* ty=Tensor[(60), uint16] */, meta[relay.Constant][5] /* ty=Tensor[(450), bool] */, %87, %88, %var_11118, %89, %var_11122, %90, %91, %92, meta[relay.Constant][6] /* ty=Tensor[(495), float64] */)
  };
  %93(%var_11171, %var_11172, %var_11173) /* ty=(Tensor[(420), bool], Tensor[(6, 60), float64], Tensor[(30), uint16], Tensor[(60), uint16], Tensor[(450), bool], Tensor[(420), int32], Tensor[(2, 2, 8), float64], Tensor[(32), float64], Tensor[(180, 2), float32], Tensor[(1, 182), float64], Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) */
}

def @func_11508() -> Tensor[(7, 13, 3), float64] {
  %94 = @func_9911() /* ty=(Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %95 = %94.1;
  %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 13, 3), float64] */, dtype="bool") /* ty=Tensor[(7, 13, 3), bool] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="bool") /* ty=Tensor[(7, 13, 3), bool] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %100 = logical_and(%98, %99) /* ty=Tensor[(7, 13, 3), bool] */;
  %101 = cast(%95, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%100, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%103, %104) /* ty=Tensor[(7, 13, 3), float64] */
}

def @func_4467(%var_4463: Tensor[(9, 4, 8), int64], %var_4464: Tensor[(9, 4, 8), int64], %var_4465: Tensor[(280), float32], %var_4466: Tensor[(30, 1), float64]) -> (Tensor[(9, 4, 8), int64], Tensor[(168, 4), uint64], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(7, 5, 6), int32], Tensor[(30, 1), float64], Tensor[(35, 6), int8], Tensor[(9, 4, 8), uint64]) {
  %132 = fn (%var_4414: Tensor[(9, 4, 8), int64], %var_4423: Tensor[(9, 4, 8), int64], %var_4430: Tensor[(280), float32], %var_4444: Tensor[(30, 1), float64]) -> (Tensor[(9, 4, 8), int64], Tensor[(168, 4), uint64], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(7, 5, 6), int32], Tensor[(30, 1), float64], Tensor[(35, 6), int8], Tensor[(9, 4, 8), uint64]) {
    %105 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 4, 8), int64] */, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
    %106 = shape_of(%var_4414, dtype="int32") /* ty=Tensor[(3), int32] */;
    %107 = cast(%var_4414, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
    %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %109 = bitwise_xor(%107, %108) /* ty=Tensor[(9, 4, 8), int64] */;
    %110 = cast(%var_4423, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
    %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
    %112 = cast(%109, dtype="int64") /* ty=Tensor[(9, 4, 8), int64] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %114 = cast(%var_4430, dtype="float32") /* ty=Tensor[(280), float32] */;
    %115 = cast(meta[relay.Constant][9] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %116 = reshape(%114, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
    %117 = reshape(%115, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint64] */;
    %118 = @func_3691(%116, %117) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */;
    %119 = cast(%var_4444, dtype="float64") /* ty=Tensor[(30, 1), float64] */;
    %120 = cast(meta[relay.Constant][10] /* ty=Tensor[(35, 6), int8] */, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
    %121 = reshape(%119, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
    %122 = reshape(%120, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
    %123 = @func_1287(%121, %122) /* ty=(Tensor[(7, 5, 6), int32],) */;
    %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 4, 8), int64] */, dtype="uint64") /* ty=Tensor[(9, 4, 8), uint64] */;
    %125 = shape_of(%var_4423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %126 = cast(%var_4423, dtype="uint64") /* ty=Tensor[(9, 4, 8), uint64] */;
    %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %128 = bitwise_and(%112, %113) /* ty=Tensor[(9, 4, 8), int64] */;
    %129 = %118.2;
    %130 = %123.0;
    %131 = maximum(%126, %127) /* ty=Tensor[(9, 4, 8), uint64] */;
    (%128, %129, %var_4430, meta[relay.Constant][9] /* ty=Tensor[(672), uint64] */, %130, %var_4444, meta[relay.Constant][10] /* ty=Tensor[(35, 6), int8] */, %131)
  };
  %132(%var_4463, %var_4464, %var_4465, %var_4466) /* ty=(Tensor[(9, 4, 8), int64], Tensor[(168, 4), uint64], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(7, 5, 6), int32], Tensor[(30, 1), float64], Tensor[(35, 6), int8], Tensor[(9, 4, 8), uint64]) */
}

def @func_8291() -> (Tensor[(6, 11, 16), float32],) {
  %133 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %134 = %133.0;
  (%134,)
}

def @func_10833() -> (Tensor[(14, 3, 10), bool],) {
  %135 = @func_8503() /* ty=Tensor[(14, 3, 10), bool] */;
  (%135,)
}

def @func_8741() -> Tensor[(6, 11, 16), float32] {
  %136 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %136.0
}

def @func_10982() -> Tensor[(420), int32] {
  @func_9652() /* ty=Tensor[(420), int32] */
}

def @func_6585(%var_6579: Tensor[(7, 13, 3), float64], %var_6580: Tensor[(7, 13, 3), float64]) -> (Tensor[(7, 13, 3), float64],) {
  %137 = cast(%var_6580, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %138 = shape_of(%var_6579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_6579, dtype="float64") /* ty=Tensor[(7, 13, 3), float64] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %141 = floor_divide(%139, %140) /* ty=Tensor[(7, 13, 3), float64] */;
  (%141,)
}

def @func_8180() -> (Tensor[(6, 11, 16), float32],) {
  %144 = fn () -> (Tensor[(6, 11, 16), float32],) {
    %142 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 11, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
    %143 = tan(%142) /* ty=Tensor[(6, 11, 16), float32] */;
    (%143,)
  };
  %144() /* ty=(Tensor[(6, 11, 16), float32],) */
}

def @func_8472(%var_8412: Tensor[(6, 11, 16), float64], %var_8425: Tensor[(11), float64], %var_8431: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) {
  %145 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %146 = %145.0;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %148 = sigmoid(%147) /* ty=Tensor[(6, 11, 16), float64] */;
  %149 = cast(%var_8412, dtype="uint8") /* ty=Tensor[(6, 11, 16), uint8] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="uint8") /* ty=Tensor[(6, 11, 16), uint8] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %154 = cast(%var_8431, dtype="float64") /* ty=Tensor[(182), float64] */;
  %155 = reshape(%153, newshape=[14, 1, 7]) /* ty=Tensor[(14, 1, 7), float64] */;
  %156 = reshape(%154, newshape=[1, 182]) /* ty=Tensor[(1, 182), float64] */;
  %157 = @func_7218(%155, %156) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) */;
  %158 = cast(%var_8425, dtype="float64") /* ty=Tensor[(11), float64] */;
  %159 = reshape(%158, newshape=[1, 11, 1]) /* ty=Tensor[(1, 11, 1), float64] */;
  %160 = @func_4092(%159) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */;
  %161 = %160.1;
  %162 = cast(%148, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %163 = cast(%161, dtype="bool") /* ty=Tensor[(1, 11, 1), bool] */;
  %164 = cast(%var_8431, dtype="float64") /* ty=Tensor[(182), float64] */;
  %165 = reshape(%164, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), float64] */;
  %166 = @func_7033(%165) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
  %167 = add(%151, %152) /* ty=Tensor[(6, 11, 16), uint8] */;
  %168 = %157.2;
  %169 = greater_equal(%162, %163) /* ty=Tensor[(6, 11, 16), bool] */;
  %170 = %166.1;
  (%167, %var_8425, %168, meta[relay.Constant][12] /* ty=Tensor[(98), float64] */, %var_8431, %169, %170)
}

def @func_11479() -> (Tensor[(14, 3, 10), bool],) {
  @func_11477() /* ty=(Tensor[(14, 3, 10), bool],) */
}

def @func_9912() -> (Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) {
  %179 = fn () -> (Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) {
    %171 = @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */;
    %172 = cast(meta[relay.Constant][13] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %173 = cast(meta[relay.Constant][13] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %174 = reshape(%172, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
    %175 = reshape(%173, newshape=[7, 13, 3]) /* ty=Tensor[(7, 13, 3), float64] */;
    %176 = @func_6585(%174, %175) /* ty=(Tensor[(7, 13, 3), float64],) */;
    %177 = %171.2;
    %178 = %176.0;
    (%177, %178, meta[relay.Constant][13] /* ty=Tensor[(273), float64] */)
  };
  %179() /* ty=(Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */
}

def @func_4251(%var_4249: Tensor[(14, 3, 10), int32], %var_4250: Tensor[(14, 3, 10), int32]) -> (Tensor[(14, 3, 10), bool],) {
  @func_4247(%var_4249, %var_4250) /* ty=(Tensor[(14, 3, 10), bool],) */
}

def @func_5305(%var_5304: Tensor[(15, 4, 8), float32]) -> (Tensor[(15, 4, 8), float32],) {
  %182 = fn (%var_5291: Tensor[(15, 4, 8), float32]) -> (Tensor[(15, 4, 8), float32],) {
    %180 = cast(%var_5291, dtype="float32") /* ty=Tensor[(15, 4, 8), float32] */;
    %181 = acosh(%180) /* ty=Tensor[(15, 4, 8), float32] */;
    (%181,)
  };
  %182(%var_5304) /* ty=(Tensor[(15, 4, 8), float32],) */
}

def @func_9523(%var_9521: Tensor[(16, 7, 10), int16], %var_9522: Tensor[(16, 7, 10), int16]) -> Tensor[(16, 7, 10), bool] {
  @func_9519(%var_9521, %var_9522) /* ty=Tensor[(16, 7, 10), bool] */
}

def @func_9744() -> Tensor[(6, 11, 16), float32] {
  @func_9742() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_11477() -> (Tensor[(14, 3, 10), bool],) {
  %183 = @func_9274() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) */;
  %184 = %183.1;
  (%184,)
}

def @func_8760() -> (Tensor[(6, 11, 16), float64],) {
  @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */
}

def @func_7691(%var_7689: Tensor[(9, 16, 5), uint8]) -> (Tensor[(9, 16, 5), uint8],) {
  @func_7688(%var_7689) /* ty=(Tensor[(9, 16, 5), uint8],) */
}

def @func_8865(%var_8863: Tensor[(10, 14, 7), uint8]) -> (Tensor[(10, 14, 7), bool], Tensor[(15, 4, 8), float32], Tensor[(120, 4), float32], Tensor[(12, 6, 5), bool], Tensor[(360), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(6, 11, 16), float32], Tensor[(10, 14, 7), int64]) {
  @func_8862(%var_8863) /* ty=(Tensor[(10, 14, 7), bool], Tensor[(15, 4, 8), float32], Tensor[(120, 4), float32], Tensor[(12, 6, 5), bool], Tensor[(360), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(6, 11, 16), float32], Tensor[(10, 14, 7), int64]) */
}

def @func_9389() -> Tensor[(6, 11, 16), float32] {
  @func_9387() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_7033(%var_7011: Tensor[(13, 14, 1), float64]) -> (Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) {
  %185 = cast(%var_7011, dtype="float64") /* ty=Tensor[(13, 14, 1), float64] */;
  %186 = sigmoid(%185) /* ty=Tensor[(13, 14, 1), float64] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %188 = cast(meta[relay.Constant][14] /* ty=Tensor[(858), float64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %189 = reshape(%188, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %190 = log(%187) /* ty=Tensor[(13, 14, 1), float32] */;
  %191 = @func_6420(%189) /* ty=Tensor[(13, 11, 6), float64] */;
  (%190, %191, meta[relay.Constant][14] /* ty=Tensor[(858), float64] */)
}

def @func_7977(%var_7976: Tensor[(16, 12, 11), float64]) -> (Tensor[(16, 12, 11), float64], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) {
  %200 = fn (%var_7953: Tensor[(16, 12, 11), float64]) -> (Tensor[(16, 12, 11), float64], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) {
    %192 = cast(%var_7953, dtype="float64") /* ty=Tensor[(16, 12, 11), float64] */;
    %193 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(16, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %194 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 12, 11), float64] */;
    %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %196 = cast(meta[relay.Constant][16] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
    %197 = reshape(%196, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
    %198 = mod(%194, %195) /* ty=Tensor[(16, 12, 11), float64] */;
    %199 = @func_4351(%197) /* ty=Tensor[(11, 5, 9), float64] */;
    (%198, %199, meta[relay.Constant][16] /* ty=Tensor[(495), float64] */)
  };
  %200(%var_7976) /* ty=(Tensor[(16, 12, 11), float64], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) */
}

def @func_10054(%var_10052: Tensor[(180, 2), int16], %var_10053: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(672), uint64], Tensor[(672), uint64], Tensor[(11, 5, 9), bool], Tensor[(180, 2), float32], Tensor[(14, 3, 10), bool], Tensor[(182), float64], Tensor[(858), float32]) {
  @func_10050(%var_10052, %var_10053) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(672), uint64], Tensor[(672), uint64], Tensor[(11, 5, 9), bool], Tensor[(180, 2), float32], Tensor[(14, 3, 10), bool], Tensor[(182), float64], Tensor[(858), float32]) */
}

def @func_2958(%var_2956: uint64, %var_2957: Tensor[(6, 7, 16), uint64]) -> (Tensor[(6, 7, 16), uint64], Tensor[(13, 7, 6), bool]) {
  @func_2954(%var_2956, %var_2957) /* ty=(Tensor[(6, 7, 16), uint64], Tensor[(13, 7, 6), bool]) */
}

def @func_9566() -> Tensor[(6, 11, 16), uint32] {
  %206 = fn () -> Tensor[(6, 11, 16), uint32] {
    %201 = @func_8741() /* ty=Tensor[(6, 11, 16), float32] */;
    %202 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 11, 16), float32] */, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
    %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(3), int32] */;
    %204 = cast(%201, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    logical_xor(%204, %205) /* ty=Tensor[(6, 11, 16), uint32] */
  };
  %206() /* ty=Tensor[(6, 11, 16), uint32] */
}

def @func_9341() -> (Tensor[(6, 11, 16), float32], Tensor[(15, 16, 5), float32], Tensor[(1200), float32]) {
  @func_9339() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(15, 16, 5), float32], Tensor[(1200), float32]) */
}

def @func_9772() -> (Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) {
  @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */
}

def @func_8862(%var_8801: Tensor[(10, 14, 7), uint8]) -> (Tensor[(10, 14, 7), bool], Tensor[(15, 4, 8), float32], Tensor[(120, 4), float32], Tensor[(12, 6, 5), bool], Tensor[(360), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(6, 11, 16), float32], Tensor[(10, 14, 7), int64]) {
  %207 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 7), uint8] */, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  %208 = shape_of(%var_8801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_8801, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = cast(meta[relay.Constant][19] /* ty=Tensor[(120, 4), float32] */, dtype="float32") /* ty=Tensor[(120, 4), float32] */;
  %212 = reshape(%211, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), float32] */;
  %213 = @func_5303(%212) /* ty=(Tensor[(15, 4, 8), float32],) */;
  %214 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %215 = cast(meta[relay.Constant][21] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %216 = cast(meta[relay.Constant][22] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %217 = reshape(%214, newshape=[12, 6, 5]) /* ty=Tensor[(12, 6, 5), float64] */;
  %218 = reshape(%215, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %219 = reshape(%216, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %220 = @func_1481(%217, %218, %219) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */;
  %221 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %222 = cast(%var_8801, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %223 = atanh(%222) /* ty=Tensor[(10, 14, 7), float64] */;
  %224 = cast(%223, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  %225 = sigmoid(%224) /* ty=Tensor[(10, 14, 7), float32] */;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  %227 = log(%226) /* ty=Tensor[(10, 14, 7), float32] */;
  %228 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 7), uint8] */, dtype="int64") /* ty=Tensor[(10, 14, 7), int64] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%227, dtype="int64") /* ty=Tensor[(10, 14, 7), int64] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %232 = greater_equal(%209, %210) /* ty=Tensor[(10, 14, 7), bool] */;
  %233 = %213.0;
  %234 = %220.0;
  %235 = %221.0;
  %236 = logical_xor(%230, %231) /* ty=Tensor[(10, 14, 7), int64] */;
  (%232, %233, meta[relay.Constant][19] /* ty=Tensor[(120, 4), float32] */, %234, meta[relay.Constant][20] /* ty=Tensor[(360), float64] */, meta[relay.Constant][21] /* ty=Tensor[(30), float64] */, meta[relay.Constant][22] /* ty=Tensor[(210), int8] */, %235, %236)
}

def @func_11384() -> Tensor[(6, 11, 16), float32] {
  @func_9387() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_10360(%var_10359: Tensor[(630), float32]) -> (Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) {
  %276 = fn (%var_10301: Tensor[(630), float32]) -> (Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) {
    %237 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %238 = cast(%var_10301, dtype="float32") /* ty=Tensor[(630), float32] */;
    %239 = reshape(%238, newshape=[9, 10, 7]) /* ty=Tensor[(9, 10, 7), float32] */;
    %240 = @func_1774(%239) /* ty=(Tensor[(9, 10, 7), float32],) */;
    %241 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %242 = cast(meta[relay.Constant][23] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
    %243 = cast(meta[relay.Constant][23] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
    %244 = cast(meta[relay.Constant][24] /* ty=Tensor[(429, 2), float64] */, dtype="float64") /* ty=Tensor[(429, 2), float64] */;
    %245 = reshape(%242, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float32] */;
    %246 = reshape(%243, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float32] */;
    %247 = reshape(%244, newshape=[858]) /* ty=Tensor[(858), float64] */;
    %248 = @func_8652(%245, %246, %247) /* ty=(Tensor[(4, 10, 10), bool], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
    %249 = %248.0;
    %250 = cast(%249, dtype="uint64") /* ty=Tensor[(4, 10, 10), uint64] */;
    %251 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(400), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %252 = cast(meta[relay.Constant][23] /* ty=Tensor[(400), float32] */, dtype="uint64") /* ty=Tensor[(400), uint64] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %254 = cast(meta[relay.Constant][25] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
    %255 = cast(meta[relay.Constant][25] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
    %256 = reshape(%254, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
    %257 = reshape(%255, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
    %258 = @func_2550(%256, %257) /* ty=(Tensor[(9, 14, 11), int8],) */;
    %259 = %258.0;
    %260 = cast(meta[relay.Constant][25] /* ty=Tensor[(1386), int8] */, dtype="bool") /* ty=Tensor[(1386), bool] */;
    %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %262 = cast(%259, dtype="bool") /* ty=Tensor[(9, 14, 11), bool] */;
    %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %264 = cast(meta[relay.Constant][24] /* ty=Tensor[(429, 2), float64] */, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
    %265 = sinh(%264) /* ty=Tensor[(429, 2), float32] */;
    %266 = cast(meta[relay.Constant][24] /* ty=Tensor[(429, 2), float64] */, dtype="bool") /* ty=Tensor[(429, 2), bool] */;
    %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(2), int32] */;
    %268 = cast(%265, dtype="bool") /* ty=Tensor[(429, 2), bool] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %270 = %237.0;
    %271 = %240.0;
    %272 = %241.0;
    %273 = subtract(%252, %253) /* ty=Tensor[(400), uint64] */;
    %274 = less(%262, %263) /* ty=Tensor[(9, 14, 11), bool] */;
    %275 = greater(%268, %269) /* ty=Tensor[(429, 2), bool] */;
    (%270, %271, %var_10301, %272, %273, %274, %275)
  };
  %276(%var_10359) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) */
}

def @func_8503() -> Tensor[(14, 3, 10), bool] {
  %277 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %277.1
}

def @func_8549(%var_8525: Tensor[(9, 1, 2), float64]) -> (Tensor[(9, ?, 2), bool],) {
  %278 = cast(%var_8525, dtype="float64") /* ty=Tensor[(9, 1, 2), float64] */;
  %279 = sin(%278) /* ty=Tensor[(9, 1, 2), float64] */;
  %280 = cast(%var_8525, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%279, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %284 = logical_and(%282, %283) /* ty=Tensor[(9, ?, 2), bool] */;
  (%284,)
}

def @func_8212() -> (Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) {
  %285 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %286 = cast(meta[relay.Constant][26] /* ty=Tensor[(210, 2), int32] */, dtype="int32") /* ty=Tensor[(210, 2), int32] */;
  %287 = cast(meta[relay.Constant][26] /* ty=Tensor[(210, 2), int32] */, dtype="int32") /* ty=Tensor[(210, 2), int32] */;
  %288 = reshape(%286, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %289 = reshape(%287, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %290 = @func_4247(%288, %289) /* ty=(Tensor[(14, 3, 10), bool],) */;
  %291 = %285.0;
  %292 = %290.0;
  (%291, %292, meta[relay.Constant][26] /* ty=Tensor[(210, 2), int32] */)
}

def @func_4571(%var_4570: Tensor[(15, 16, 5), float32]) -> (Tensor[(15, 16, 5), float32],) {
  %295 = fn (%var_4565: Tensor[(15, 16, 5), float32]) -> (Tensor[(15, 16, 5), float32],) {
    %293 = cast(%var_4565, dtype="float32") /* ty=Tensor[(15, 16, 5), float32] */;
    %294 = cosh(%293) /* ty=Tensor[(15, 16, 5), float32] */;
    (%294,)
  };
  %295(%var_4570) /* ty=(Tensor[(15, 16, 5), float32],) */
}

def @func_8743() -> Tensor[(6, 11, 16), float32] {
  @func_8741() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_7036(%var_7034: Tensor[(13, 14, 1), float64]) -> (Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) {
  @func_7033(%var_7034) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */
}

def @func_9770() -> (Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) {
  %296 = @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */;
  %297 = %296.0;
  %298 = @func_8503() /* ty=Tensor[(14, 3, 10), bool] */;
  (%297, %298)
}

def @func_9276() -> (Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) {
  @func_9274() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) */
}

def @func_9952() -> (Tensor[(420), int32], Tensor[(6, 11, 16), float32]) {
  @func_9950() /* ty=(Tensor[(420), int32], Tensor[(6, 11, 16), float32]) */
}

def @func_4899(%var_4896: Tensor[(1, 5, 6), uint16], %var_4897: Tensor[(2, 5, 6), uint16], %var_4898: Tensor[(450), bool]) -> (Tensor[(2, 5, 6), uint16], Tensor[(630), float32], Tensor[(450), bool], Tensor[(6, 60), float64], Tensor[(630), float32]) {
  %312 = fn (%var_4879: Tensor[(1, 5, 6), uint16], %var_4880: Tensor[(2, 5, 6), uint16], %var_4885: Tensor[(450), bool]) -> (Tensor[(2, 5, 6), uint16], Tensor[(630), float32], Tensor[(450), bool], Tensor[(6, 60), float64], Tensor[(630), float32]) {
    %299 = cast(%var_4879, dtype="uint16") /* ty=Tensor[(1, 5, 6), uint16] */;
    %300 = cast(%var_4880, dtype="uint16") /* ty=Tensor[(2, 5, 6), uint16] */;
    %301 = cast(%var_4885, dtype="bool") /* ty=Tensor[(450), bool] */;
    %302 = cast(%var_4885, dtype="bool") /* ty=Tensor[(450), bool] */;
    %303 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 60), float64] */, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
    %304 = cast(meta[relay.Constant][28] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %305 = reshape(%301, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), bool] */;
    %306 = reshape(%302, newshape=[15, 2, 15]) /* ty=Tensor[(15, 2, 15), bool] */;
    %307 = reshape(%303, newshape=[6, 60]) /* ty=Tensor[(6, 60), float64] */;
    %308 = reshape(%304, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %309 = @func_3632(%305, %306, %307, %308) /* ty=(Tensor[(15, 2, 15), bool], Tensor[(210), float64], Tensor[(6, 60), float64], Tensor[(30), float64], Tensor[(210), int8], Tensor[(7, 5, 6), int32], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) */;
    %310 = bitwise_or(%299, %300) /* ty=Tensor[(2, 5, 6), uint16] */;
    %311 = %309.7;
    (%310, %311, %var_4885, meta[relay.Constant][27] /* ty=Tensor[(6, 60), float64] */, meta[relay.Constant][28] /* ty=Tensor[(630), float32] */)
  };
  %312(%var_4896, %var_4897, %var_4898) /* ty=(Tensor[(2, 5, 6), uint16], Tensor[(630), float32], Tensor[(450), bool], Tensor[(6, 60), float64], Tensor[(630), float32]) */
}

def @func_10964() -> (Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(630), float32]) {
  %320 = fn () -> (Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(630), float32]) {
    %313 = @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */;
    %314 = cast(meta[relay.Constant][29] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %315 = reshape(%314, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %316 = @func_10476(%315) /* ty=(Tensor[(12, 5, 14), float64], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) */;
    %317 = %313.0;
    %318 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
    %319 = %316.2;
    (%317, %318, %319, meta[relay.Constant][29] /* ty=Tensor[(630), float32] */)
  };
  %320() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(630), float32]) */
}

def @func_11252(%var_11211: Tensor[(630), float32]) -> (Tensor[(420), int32], Tensor[(6, 11, 16), float32], Tensor[(630), float32], Tensor[(9, 10, 7), float32], Tensor[(420), bool]) {
  %321 = cast(%var_11211, dtype="float32") /* ty=Tensor[(630), float32] */;
  %322 = reshape(%321, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %323 = @func_10358(%322) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) */;
  %324 = @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */;
  %325 = @func_10686() /* ty=(Tensor[(420), bool],) */;
  %326 = @func_9652() /* ty=Tensor[(420), int32] */;
  %327 = %323.0;
  %328 = %324.1;
  %329 = %325.0;
  (%326, %327, %var_11211, %328, %329)
}

def @func_10984() -> Tensor[(420), int32] {
  @func_10982() /* ty=Tensor[(420), int32] */
}

def @func_9487(%var_9485: Tensor[(16, 4, 11), int16], %var_9486: Tensor[(16, 4, 11), int16]) -> Tensor[(16, 4, 11), int16] {
  %334 = fn (%var_9453: Tensor[(16, 4, 11), int16], %var_9454: Tensor[(16, 4, 11), int16]) -> Tensor[(16, 4, 11), int16] {
    %330 = cast(%var_9454, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
    %331 = shape_of(%var_9453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %332 = cast(%var_9453, dtype="int16") /* ty=Tensor[(16, 4, 11), int16] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_or(%332, %333) /* ty=Tensor[(16, 4, 11), int16] */
  };
  %334(%var_9485, %var_9486) /* ty=Tensor[(16, 4, 11), int16] */
}

def @func_10866() -> (Tensor[(14, 3, 10), bool],) {
  %336 = fn () -> (Tensor[(14, 3, 10), bool],) {
    %335 = @func_8503() /* ty=Tensor[(14, 3, 10), bool] */;
    (%335,)
  };
  %336() /* ty=(Tensor[(14, 3, 10), bool],) */
}

def @func_11540(%var_11529: Tensor[(2, 630), float32]) -> (Tensor[(2, 630), bool],) {
  %337 = @func_9911() /* ty=(Tensor[(1, 630), float32], Tensor[(7, 13, 3), float64], Tensor[(273), float64]) */;
  %338 = %337.0;
  %339 = cast(%338, dtype="bool") /* ty=Tensor[(1, 630), bool] */;
  %340 = cast(%var_11529, dtype="bool") /* ty=Tensor[(2, 630), bool] */;
  %341 = not_equal(%339, %340) /* ty=Tensor[(2, 630), bool] */;
  (%341,)
}

def @func_8552(%var_8550: Tensor[(9, 1, 2), float64]) -> (Tensor[(9, ?, 2), bool],) {
  @func_8549(%var_8550) /* ty=(Tensor[(9, ?, 2), bool],) */
}

def @func_9274() -> (Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) {
  %342 = @func_8741() /* ty=Tensor[(6, 11, 16), float32] */;
  %343 = cast(%342, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %344 = cast(meta[relay.Constant][30] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %345 = cast(meta[relay.Constant][30] /* ty=Tensor[(420), int32] */, dtype="int32") /* ty=Tensor[(420), int32] */;
  %346 = reshape(%344, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %347 = reshape(%345, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
  %348 = @func_4247(%346, %347) /* ty=(Tensor[(14, 3, 10), bool],) */;
  %349 = exp(%343) /* ty=Tensor[(6, 11, 16), float64] */;
  %350 = %348.0;
  (%349, %350, meta[relay.Constant][30] /* ty=Tensor[(420), int32] */)
}

def @func_11543(%var_11541: Tensor[(2, 630), float32]) -> (Tensor[(2, 630), bool],) {
  @func_11540(%var_11541) /* ty=(Tensor[(2, 630), bool],) */
}

def @func_11332(%var_11269: Tensor[(16, 15, 14), float64], %var_11300: Tensor[(672), uint64]) -> (Tensor[(16, 15, 14), float64], Tensor[(11, 5, 9), float64], Tensor[(1056, 2), float64], Tensor[(16, 15, 14), uint64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8], Tensor[(9, 14, 11), int8], Tensor[(72), float32], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(420), int32]) {
  %351 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 14), float64] */;
  %352 = shape_of(%var_11269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_11269, dtype="float64") /* ty=Tensor[(16, 15, 14), float64] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %355 = cast(meta[relay.Constant][32] /* ty=Tensor[(1056, 2), float64] */, dtype="float64") /* ty=Tensor[(1056, 2), float64] */;
  %356 = reshape(%355, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float64] */;
  %357 = @func_7975(%356) /* ty=(Tensor[(16, 12, 11), float64], Tensor[(11, 5, 9), float64], Tensor[(495), float64]) */;
  %358 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 14), float64] */, dtype="float32") /* ty=Tensor[(16, 15, 14), float32] */;
  %359 = exp(%358) /* ty=Tensor[(16, 15, 14), float32] */;
  %360 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 15, 14), float64] */, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="uint64") /* ty=Tensor[(16, 15, 14), uint64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %364 = cast(meta[relay.Constant][33] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %365 = cast(meta[relay.Constant][33] /* ty=Tensor[(1320), uint8] */, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %366 = reshape(%364, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %367 = reshape(%365, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %368 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %369 = cast(meta[relay.Constant][35] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %370 = cast(%var_11300, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %371 = reshape(%368, newshape=[1, 9, 8]) /* ty=Tensor[(1, 9, 8), float32] */;
  %372 = reshape(%369, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %373 = reshape(%370, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %374 = @func_7719(%371, %372, %373) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) */;
  %375 = @func_9950() /* ty=(Tensor[(420), int32], Tensor[(6, 11, 16), float32]) */;
  %376 = floor_mod(%353, %354) /* ty=Tensor[(16, 15, 14), float64] */;
  %377 = %357.1;
  %378 = bitwise_xor(%362, %363) /* ty=Tensor[(16, 15, 14), uint64] */;
  %379 = @func_10268(%366, %367) /* ty=Tensor[(12, 11, 10), uint8] */;
  %380 = %374.1;
  %381 = %375.0;
  (%376, %377, meta[relay.Constant][32] /* ty=Tensor[(1056, 2), float64] */, %378, %379, meta[relay.Constant][33] /* ty=Tensor[(1320), uint8] */, %380, meta[relay.Constant][34] /* ty=Tensor[(72), float32] */, meta[relay.Constant][35] /* ty=Tensor[(280), float32] */, %var_11300, %381)
}

def @func_8477(%var_8474: Tensor[(6, 11, 16), float64], %var_8475: Tensor[(11), float64], %var_8476: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) {
  @func_8472(%var_8474, %var_8475, %var_8476) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */
}

def @func_7724(%var_7721: Tensor[(1, 9, 8), float32], %var_7722: Tensor[(280), float32], %var_7723: Tensor[(672), uint64]) -> (Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) {
  @func_7719(%var_7721, %var_7722, %var_7723) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) */
}

def @func_3875(%var_3873: Tensor[(4, 9, 10), int16], %var_3874: Tensor[(4, 9, 10), int16]) -> Tensor[(4, 9, 10), int16] {
  @func_3871(%var_3873, %var_3874) /* ty=Tensor[(4, 9, 10), int16] */
}

def @func_8315() -> (Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) {
  @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */
}

def @func_9402() -> (Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) {
  @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */
}

def @func_9387() -> Tensor[(6, 11, 16), float32] {
  @func_8741() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_11336(%var_11334: Tensor[(16, 15, 14), float64], %var_11335: Tensor[(672), uint64]) -> (Tensor[(16, 15, 14), float64], Tensor[(11, 5, 9), float64], Tensor[(1056, 2), float64], Tensor[(16, 15, 14), uint64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8], Tensor[(9, 14, 11), int8], Tensor[(72), float32], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(420), int32]) {
  @func_11332(%var_11334, %var_11335) /* ty=(Tensor[(16, 15, 14), float64], Tensor[(11, 5, 9), float64], Tensor[(1056, 2), float64], Tensor[(16, 15, 14), uint64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8], Tensor[(9, 14, 11), int8], Tensor[(72), float32], Tensor[(280), float32], Tensor[(672), uint64], Tensor[(420), int32]) */
}

def @func_4351(%var_4348: Tensor[(11, 5, 9), float64]) -> Tensor[(11, 5, 9), float64] {
  %382 = cast(%var_4348, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  acosh(%382) /* ty=Tensor[(11, 5, 9), float64] */
}

def @func_9504() -> Tensor[(210, 2), int32] {
  %384 = fn () -> Tensor[(210, 2), int32] {
    %383 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
    %383.2
  };
  %384() /* ty=Tensor[(210, 2), int32] */
}

def @func_8971(%var_8969: Tensor[(672), uint64], %var_8970: Tensor[(360), int16]) -> (Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) {
  %418 = fn (%var_8914: Tensor[(672), uint64], %var_8938: Tensor[(360), int16]) -> (Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) {
    %385 = cast(meta[relay.Constant][36] /* ty=Tensor[(18, 4), float32] */, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
    %386 = cast(%var_8914, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %387 = reshape(%385, newshape=[72, 1]) /* ty=Tensor[(72, 1), float32] */;
    %388 = reshape(%386, newshape=[1, 672]) /* ty=Tensor[(1, 672), uint64] */;
    %389 = @func_8796(%387, %388) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(1, 9, 8), float32], Tensor[(72, 1), float32], Tensor[(280), float32], Tensor[(1, 672), uint64]) */;
    %390 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %391 = %390.0;
    %392 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
    %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %394 = cast(%391, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
    %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %396 = cast(%var_8938, dtype="int16") /* ty=Tensor[(360), int16] */;
    %397 = cast(%var_8938, dtype="int16") /* ty=Tensor[(360), int16] */;
    %398 = reshape(%396, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
    %399 = reshape(%397, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
    %400 = cast(meta[relay.Constant][38] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
    %401 = reshape(%400, newshape=[98]) /* ty=Tensor[(98), float64] */;
    %402 = @func_8372(%401) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
    %403 = cast(meta[relay.Constant][38] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
    %404 = reshape(%403, newshape=[98]) /* ty=Tensor[(98), float64] */;
    %405 = @func_8372(%404) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
    %406 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
    %407 = cast(%391, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
    %408 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(6, 11, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %409 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
    %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %411 = %389.1;
    %412 = not_equal(%394, %395) /* ty=Tensor[(6, 11, 16), bool] */;
    %413 = @func_3871(%398, %399) /* ty=Tensor[(4, 9, 10), int16] */;
    %414 = %402.3;
    %415 = %405.0;
    %416 = %406.0;
    %417 = less_equal(%409, %410) /* ty=Tensor[(6, 11, 16), bool] */;
    (%411, meta[relay.Constant][36] /* ty=Tensor[(18, 4), float32] */, %var_8914, %412, %413, %var_8938, %414, meta[relay.Constant][38] /* ty=Tensor[(98), float64] */, %415, %416, %417)
  };
  %418(%var_8969, %var_8970) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) */
}

def @func_9653() -> Tensor[(420), int32] {
  %420 = fn () -> Tensor[(420), int32] {
    %419 = @func_9274() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool], Tensor[(420), int32]) */;
    %419.2
  };
  %420() /* ty=Tensor[(420), int32] */
}

def @func_9742() -> Tensor[(6, 11, 16), float32] {
  %421 = @func_9400() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) */;
  %421.0
}

def @func_10476(%var_10464: Tensor[(630), float32]) -> (Tensor[(12, 5, 14), float64], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) {
  %422 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %423 = cast(%var_10464, dtype="float32") /* ty=Tensor[(630), float32] */;
  %424 = reshape(%423, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %425 = @func_10358(%424) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(630), float32], Tensor[(6, 11, 16), float32], Tensor[(400), uint64], Tensor[(9, 14, 11), bool], Tensor[(429, 2), bool]) */;
  %426 = sin(%422) /* ty=Tensor[(12, 5, 14), float64] */;
  %427 = %425.1;
  (%426, %427, %var_10464)
}

def @func_1486(%var_1483: Tensor[(12, 6, 5), float64], %var_1484: Tensor[(30), float64], %var_1485: Tensor[(210), int8]) -> (Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) {
  @func_1481(%var_1483, %var_1484, %var_1485) /* ty=(Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) */
}

def @func_10826(%var_10824: Tensor[(60), float64], %var_10825: Tensor[(30), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(30), float64], Tensor[(60), float64], Tensor[(360), float64], Tensor[(30), float64], Tensor[(5, 42), int8], Tensor[(208), float32]) {
  @func_10822(%var_10824, %var_10825) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(30), float64], Tensor[(60), float64], Tensor[(360), float64], Tensor[(30), float64], Tensor[(5, 42), int8], Tensor[(208), float32]) */
}

def @func_10217(%var_10216: Tensor[(480), float32]) -> (Tensor[(6, 11, 16), float32], Tensor[(15, 4, 8), float32], Tensor[(480), float32]) {
  %434 = fn (%var_10198: Tensor[(480), float32]) -> (Tensor[(6, 11, 16), float32], Tensor[(15, 4, 8), float32], Tensor[(480), float32]) {
    %428 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
    %429 = cast(%var_10198, dtype="float32") /* ty=Tensor[(480), float32] */;
    %430 = reshape(%429, newshape=[15, 4, 8]) /* ty=Tensor[(15, 4, 8), float32] */;
    %431 = @func_5303(%430) /* ty=(Tensor[(15, 4, 8), float32],) */;
    %432 = %428.1;
    %433 = %431.0;
    (%432, %433, %var_10198)
  };
  %434(%var_10216) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(15, 4, 8), float32], Tensor[(480), float32]) */
}

def @func_9221(%var_9219: Tensor[(7, 14), float64], %var_9220: Tensor[(495), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(182, 1), float64], Tensor[(7, 14), float64], Tensor[(495), int16]) {
  %450 = fn (%var_9207: Tensor[(7, 14), float64], %var_9212: Tensor[(495), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(182, 1), float64], Tensor[(7, 14), float64], Tensor[(495), int16]) {
    %435 = @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %436 = cast(meta[relay.Constant][40] /* ty=Tensor[(495), float64] */, dtype="float64") /* ty=Tensor[(495), float64] */;
    %437 = cast(meta[relay.Constant][41] /* ty=Tensor[(182, 1), float64] */, dtype="float64") /* ty=Tensor[(182, 1), float64] */;
    %438 = cast(%var_9207, dtype="float64") /* ty=Tensor[(7, 14), float64] */;
    %439 = reshape(%436, newshape=[495, 1]) /* ty=Tensor[(495, 1), float64] */;
    %440 = reshape(%437, newshape=[26, 7]) /* ty=Tensor[(26, 7), float64] */;
    %441 = reshape(%438, newshape=[98]) /* ty=Tensor[(98), float64] */;
    %442 = @func_9168(%439, %440, %441) /* ty=(Tensor[(6, 11, 16), float64], Tensor[(11, 5, 9), float64], Tensor[(9, ?, 2), bool], Tensor[(18), float64], Tensor[(11), float64], Tensor[(26, 7), float64], Tensor[(14, 3, 10), bool], Tensor[(495, 11), int64], Tensor[(14, 3, 10), bool], Tensor[(495, 98), uint32]) */;
    %443 = cast(%var_9212, dtype="int16") /* ty=Tensor[(495), int16] */;
    %444 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(495), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %445 = cast(meta[relay.Constant][40] /* ty=Tensor[(495), float64] */, dtype="int16") /* ty=Tensor[(495), int16] */;
    %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?), int16] */;
    %447 = %435.0;
    %448 = %442.8;
    %449 = add(%445, %446) /* ty=Tensor[(495), int16] */;
    (%447, %448, meta[relay.Constant][41] /* ty=Tensor[(182, 1), float64] */, %var_9207, %449)
  };
  %450(%var_9219, %var_9220) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(182, 1), float64], Tensor[(7, 14), float64], Tensor[(495), int16]) */
}

def @func_1776(%var_1775: Tensor[(9, 10, 7), float32]) -> (Tensor[(9, 10, 7), float32],) {
  %453 = fn (%var_1756: Tensor[(9, 10, 7), float32]) -> (Tensor[(9, 10, 7), float32],) {
    %451 = cast(%var_1756, dtype="float32") /* ty=Tensor[(9, 10, 7), float32] */;
    %452 = sqrt(%451) /* ty=Tensor[(9, 10, 7), float32] */;
    (%452,)
  };
  %453(%var_1775) /* ty=(Tensor[(9, 10, 7), float32],) */
}

def @func_6589(%var_6587: Tensor[(7, 13, 3), float64], %var_6588: Tensor[(7, 13, 3), float64]) -> (Tensor[(7, 13, 3), float64],) {
  @func_6585(%var_6587, %var_6588) /* ty=(Tensor[(7, 13, 3), float64],) */
}

def @func_11087(%var_11085: Tensor[(30), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(420), bool], Tensor[(360), float64], Tensor[(60), float64], Tensor[(30), float64]) {
  @func_11084(%var_11085) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(420), bool], Tensor[(360), float64], Tensor[(60), float64], Tensor[(30), float64]) */
}

def @func_9339() -> (Tensor[(6, 11, 16), float32], Tensor[(15, 16, 5), float32], Tensor[(1200), float32]) {
  %454 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
  %455 = cast(meta[relay.Constant][42] /* ty=Tensor[(1200), float32] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %456 = reshape(%455, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), float32] */;
  %457 = @func_4569(%456) /* ty=(Tensor[(15, 16, 5), float32],) */;
  %458 = %454.1;
  %459 = %457.0;
  (%458, %459, meta[relay.Constant][42] /* ty=Tensor[(1200), float32] */)
}

def @func_11510() -> Tensor[(7, 13, 3), float64] {
  @func_11508() /* ty=Tensor[(7, 13, 3), float64] */
}

def @func_6422(%var_6421: Tensor[(13, 11, 6), float64]) -> Tensor[(13, 11, 6), float64] {
  %461 = fn (%var_6411: Tensor[(13, 11, 6), float64]) -> Tensor[(13, 11, 6), float64] {
    %460 = cast(%var_6411, dtype="float64") /* ty=Tensor[(13, 11, 6), float64] */;
    atan(%460) /* ty=Tensor[(13, 11, 6), float64] */
  };
  %461(%var_6421) /* ty=Tensor[(13, 11, 6), float64] */
}

def @func_2689(%var_2687: Tensor[(8, 9, 3), float64], %var_2688: Tensor[(5, 6), float64]) -> (Tensor[(8, 9, 3), float64], Tensor[(7, 5, 6), int32], Tensor[(5, 6), float64], Tensor[(210), int8]) {
  @func_2685(%var_2687, %var_2688) /* ty=(Tensor[(8, 9, 3), float64], Tensor[(7, 5, 6), int32], Tensor[(5, 6), float64], Tensor[(210), int8]) */
}

def @func_9732() -> Tensor[(420), int32] {
  %462 = fn () -> Tensor[(420), int32] {
    @func_9652() /* ty=Tensor[(420), int32] */
  };
  %462() /* ty=Tensor[(420), int32] */
}

def @func_9877(%var_9875: Tensor[(672), uint64], %var_9876: Tensor[(180, 2), int16]) -> (Tensor[(420), int32], Tensor[(672), uint64], Tensor[(18, 4), float32], Tensor[(180, 2), int16], Tensor[(4, 9, 10), int16], Tensor[(6, 11, 16), uint32], Tensor[(6, 11, 16), float32], Tensor[(140, 2), int32]) {
  %501 = fn (%var_9814: Tensor[(672), uint64], %var_9840: Tensor[(180, 2), int16]) -> (Tensor[(420), int32], Tensor[(672), uint64], Tensor[(18, 4), float32], Tensor[(180, 2), int16], Tensor[(4, 9, 10), int16], Tensor[(6, 11, 16), uint32], Tensor[(6, 11, 16), float32], Tensor[(140, 2), int32]) {
    %463 = cast(%var_9814, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %464 = cast(%var_9840, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
    %465 = reshape(%463, newshape=[672]) /* ty=Tensor[(672), uint64] */;
    %466 = reshape(%464, newshape=[360]) /* ty=Tensor[(360), int16] */;
    %467 = @func_8968(%465, %466) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) */;
    %468 = cast(%var_9840, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
    %469 = cast(%var_9840, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
    %470 = reshape(%468, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
    %471 = reshape(%469, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), int16] */;
    %472 = @func_9565() /* ty=Tensor[(6, 11, 16), uint32] */;
    %473 = cast(meta[relay.Constant][43] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
    %474 = cast(%var_9814, dtype="uint64") /* ty=Tensor[(672), uint64] */;
    %475 = reshape(%473, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
    %476 = reshape(%474, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint64] */;
    %477 = @func_3691(%475, %476) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */;
    %478 = %477.1;
    %479 = cast(%472, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
    %480 = cast(%478, dtype="float32") /* ty=float32 */;
    %481 = floor_divide(%479, %480) /* ty=Tensor[(6, 11, 16), float32] */;
    %482 = cast(%472, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
    %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
    %484 = cast(%481, dtype="uint32") /* ty=Tensor[(6, 11, 16), uint32] */;
    %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %486 = @func_9580() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %487 = cast(meta[relay.Constant][43] /* ty=Tensor[(140, 2), float32] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
    %488 = sinh(%487) /* ty=Tensor[(140, 2), float64] */;
    %489 = cast(%488, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
    %490 = atanh(%489) /* ty=Tensor[(140, 2), float32] */;
    %491 = cast(%488, dtype="int32") /* ty=Tensor[(140, 2), int32] */;
    %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(2), int32] */;
    %493 = cast(%490, dtype="int32") /* ty=Tensor[(140, 2), int32] */;
    %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %495 = @func_9731() /* ty=Tensor[(420), int32] */;
    %496 = %467.1;
    %497 = @func_3871(%470, %471) /* ty=Tensor[(4, 9, 10), int16] */;
    %498 = left_shift(%484, %485) /* ty=Tensor[(6, 11, 16), uint32] */;
    %499 = %486.0;
    %500 = left_shift(%493, %494) /* ty=Tensor[(140, 2), int32] */;
    (%495, %var_9814, %496, %var_9840, %497, %498, %499, %500)
  };
  %501(%var_9875, %var_9876) /* ty=(Tensor[(420), int32], Tensor[(672), uint64], Tensor[(18, 4), float32], Tensor[(180, 2), int16], Tensor[(4, 9, 10), int16], Tensor[(6, 11, 16), uint32], Tensor[(6, 11, 16), float32], Tensor[(140, 2), int32]) */
}

def @func_3694(%var_3692: Tensor[(8, 7, 5), float32], %var_3693: Tensor[(168, 4), uint64]) -> (Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) {
  %512 = fn (%var_3667: Tensor[(8, 7, 5), float32], %var_3674: Tensor[(168, 4), uint64]) -> (Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) {
    %502 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %503 = cast(%var_3674, dtype="uint64") /* ty=Tensor[(168, 4), uint64] */;
    %504 = reshape(%502, newshape=[]) /* ty=uint64 */;
    %505 = reshape(%503, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), uint64] */;
    %506 = @func_2954(%504, %505) /* ty=(Tensor[(6, 7, 16), uint64], Tensor[(13, 7, 6), bool]) */;
    %507 = cast(%var_3667, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
    %508 = erf(%507) /* ty=Tensor[(8, 7, 5), float32] */;
    %509 = cast(%508, dtype="float32") /* ty=Tensor[(8, 7, 5), float32] */;
    %510 = %506.0;
    %511 = sin(%509) /* ty=Tensor[(8, 7, 5), float32] */;
    (%510, meta[relay.Constant][44] /* ty=uint64 */, %var_3674, %511)
  };
  %512(%var_3692, %var_3693) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */
}

def @func_9400() -> (Tensor[(6, 11, 16), float32], Tensor[(9, 10, 7), float32], Tensor[(1, 630), float32]) {
  %513 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 630), float32] */, dtype="float32") /* ty=Tensor[(1, 630), float32] */;
  %514 = reshape(%513, newshape=[9, 10, 7]) /* ty=Tensor[(9, 10, 7), float32] */;
  %515 = @func_1774(%514) /* ty=(Tensor[(9, 10, 7), float32],) */;
  %516 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
  %517 = %515.0;
  (%516, %517, meta[relay.Constant][45] /* ty=Tensor[(1, 630), float32] */)
}

def @func_10268(%var_10248: Tensor[(12, 11, 10), uint8], %var_10249: Tensor[(12, 11, 10), uint8]) -> Tensor[(12, 11, 10), uint8] {
  %518 = cast(%var_10249, dtype="uint8") /* ty=Tensor[(12, 11, 10), uint8] */;
  %519 = shape_of(%var_10248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_10248, dtype="uint8") /* ty=Tensor[(12, 11, 10), uint8] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%520, %521) /* ty=Tensor[(12, 11, 10), uint8] */
}

def @func_2553(%var_2551: Tensor[(9, 14, 11), int8], %var_2552: Tensor[(9, 14, 11), int8]) -> (Tensor[(9, 14, 11), int8],) {
  %527 = fn (%var_2505: Tensor[(9, 14, 11), int8], %var_2506: Tensor[(9, 14, 11), int8]) -> (Tensor[(9, 14, 11), int8],) {
    %522 = cast(%var_2506, dtype="int8") /* ty=Tensor[(9, 14, 11), int8] */;
    %523 = shape_of(%var_2505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %524 = cast(%var_2505, dtype="int8") /* ty=Tensor[(9, 14, 11), int8] */;
    %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %526 = bitwise_and(%524, %525) /* ty=Tensor[(9, 14, 11), int8] */;
    (%526,)
  };
  %527(%var_2551, %var_2552) /* ty=(Tensor[(9, 14, 11), int8],) */
}

def @main(%var_11630: Tensor[(1320), uint8], %var_11646: Tensor[(11), float64]) -> (Tensor[(1200), float32], Tensor[(420), int32], Tensor[(14, 3, 10), bool], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8], Tensor[(6, 11, 16), bool], Tensor[(182), float64], Tensor[(1056, 11), uint32]) {
  %528 = @func_9341() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(15, 16, 5), float32], Tensor[(1200), float32]) */;
  %529 = @func_11479() /* ty=(Tensor[(14, 3, 10), bool],) */;
  %530 = cast(%var_11630, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %531 = cast(%var_11630, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
  %532 = reshape(%530, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %533 = reshape(%531, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
  %534 = cast(meta[relay.Constant][46] /* ty=Tensor[(1056, 1), float64] */, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %535 = cast(%var_11646, dtype="float64") /* ty=Tensor[(11), float64] */;
  %536 = cast(meta[relay.Constant][47] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %537 = reshape(%534, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), float64] */;
  %538 = reshape(%535, newshape=[11]) /* ty=Tensor[(11), float64] */;
  %539 = reshape(%536, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %540 = @func_8477(%537, %538, %539) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */;
  %541 = cast(%var_11646, dtype="uint32") /* ty=Tensor[(11), uint32] */;
  %542 = cast(meta[relay.Constant][46] /* ty=Tensor[(1056, 1), float64] */, dtype="uint32") /* ty=Tensor[(1056, 1), uint32] */;
  %543 = %528.2;
  %544 = @func_10982() /* ty=Tensor[(420), int32] */;
  %545 = %529.0;
  %546 = @func_10268(%532, %533) /* ty=Tensor[(12, 11, 10), uint8] */;
  %547 = %540.5;
  %548 = logical_xor(%541, %542) /* ty=Tensor[(1056, 11), uint32] */;
  (%543, %544, %545, %546, %var_11630, %547, meta[relay.Constant][47] /* ty=Tensor[(182), float64] */, %548)
}

def @func_10272(%var_10270: Tensor[(12, 11, 10), uint8], %var_10271: Tensor[(12, 11, 10), uint8]) -> Tensor[(12, 11, 10), uint8] {
  @func_10268(%var_10270, %var_10271) /* ty=Tensor[(12, 11, 10), uint8] */
}

def @func_4247(%var_4224: Tensor[(14, 3, 10), int32], %var_4225: Tensor[(14, 3, 10), int32]) -> (Tensor[(14, 3, 10), bool],) {
  %549 = cast(%var_4225, dtype="bool") /* ty=Tensor[(14, 3, 10), bool] */;
  %550 = shape_of(%var_4224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_4224, dtype="bool") /* ty=Tensor[(14, 3, 10), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = greater(%551, %552) /* ty=Tensor[(14, 3, 10), bool] */;
  (%553,)
}

def @func_7688(%var_7676: Tensor[(9, 16, 5), uint8]) -> (Tensor[(9, 16, 5), uint8],) {
  %554 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 1, 5), uint8] */, dtype="uint8") /* ty=Tensor[(1, 1, 5), uint8] */;
  %555 = cast(%var_7676, dtype="uint8") /* ty=Tensor[(9, 16, 5), uint8] */;
  %556 = logical_xor(%554, %555) /* ty=Tensor[(9, 16, 5), uint8] */;
  (%556,)
}

def @func_4198(%var_4197: Tensor[(16, 5, 4), float32]) -> (Tensor[(16, 5, 4), float32], Tensor[(1, 11, 1), int16], Tensor[(1, 11), float64]) {
  %563 = fn (%var_4175: Tensor[(16, 5, 4), float32]) -> (Tensor[(16, 5, 4), float32], Tensor[(1, 11, 1), int16], Tensor[(1, 11), float64]) {
    %557 = cast(%var_4175, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
    %558 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 11), float64] */;
    %559 = reshape(%558, newshape=[1, 11, 1]) /* ty=Tensor[(1, 11, 1), float64] */;
    %560 = @func_4092(%559) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */;
    %561 = log10(%557) /* ty=Tensor[(16, 5, 4), float32] */;
    %562 = %560.1;
    (%561, %562, meta[relay.Constant][49] /* ty=Tensor[(1, 11), float64] */)
  };
  %563(%var_4197) /* ty=(Tensor[(16, 5, 4), float32], Tensor[(1, 11, 1), int16], Tensor[(1, 11), float64]) */
}

def @func_1481(%var_1437: Tensor[(12, 6, 5), float64], %var_1454: Tensor[(30), float64], %var_1455: Tensor[(210), int8]) -> (Tensor[(12, 6, 5), bool], Tensor[(7, 5, 6), int32], Tensor[(30), float64], Tensor[(7, 5, 6), int32], Tensor[(210), float64]) {
  %564 = cast(%var_1437, dtype="float64") /* ty=Tensor[(12, 6, 5), float64] */;
  %565 = cosh(%564) /* ty=Tensor[(12, 6, 5), float64] */;
  %566 = cast(%565, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %567 = shape_of(%var_1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_1437, dtype="bool") /* ty=Tensor[(12, 6, 5), bool] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %570 = cast(%var_1454, dtype="float64") /* ty=Tensor[(30), float64] */;
  %571 = cast(%var_1455, dtype="int8") /* ty=Tensor[(210), int8] */;
  %572 = reshape(%570, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %573 = reshape(%571, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %574 = @func_1287(%572, %573) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %575 = cast(%var_1454, dtype="float64") /* ty=Tensor[(30), float64] */;
  %576 = %574.0;
  %577 = cast(%576, dtype="int8") /* ty=Tensor[(7, 5, 6), int8] */;
  %578 = reshape(%575, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %579 = reshape(%577, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %580 = @func_1287(%578, %579) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %581 = cast(%var_1455, dtype="float64") /* ty=Tensor[(210), float64] */;
  %582 = not_equal(%568, %569) /* ty=Tensor[(12, 6, 5), bool] */;
  %583 = %580.0;
  %584 = acos(%581) /* ty=Tensor[(210), float64] */;
  (%582, %576, %var_1454, %583, %584)
}

def @func_6026(%var_6023: Tensor[(13, 1, 16), float32], %var_6024: Tensor[(13, 12, 16), float32], %var_6025: Tensor[(11), float64]) -> (Tensor[(13, 12, 16), bool], Tensor[(13, 12, 16), uint16], Tensor[(1, 11, 1), float64], Tensor[(11), float64]) {
  @func_6021(%var_6023, %var_6024, %var_6025) /* ty=(Tensor[(13, 12, 16), bool], Tensor[(13, 12, 16), uint16], Tensor[(1, 11, 1), float64], Tensor[(11), float64]) */
}

def @func_11084(%var_11078: Tensor[(30), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(420), bool], Tensor[(360), float64], Tensor[(60), float64], Tensor[(30), float64]) {
  %585 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
  %586 = cast(%585, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
  %587 = @func_10686() /* ty=(Tensor[(420), bool],) */;
  %588 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %589 = cast(%var_11078, dtype="float64") /* ty=Tensor[(30), float64] */;
  %590 = reshape(%588, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %591 = reshape(%589, newshape=[30]) /* ty=Tensor[(30), float64] */;
  %592 = @func_10822(%590, %591) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(30), float64], Tensor[(60), float64], Tensor[(360), float64], Tensor[(30), float64], Tensor[(5, 42), int8], Tensor[(208), float32]) */;
  %593 = asinh(%586) /* ty=Tensor[(6, 11, 16), float32] */;
  %594 = %587.0;
  %595 = %592.3;
  (%593, %594, %595, meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, %var_11078)
}

def @func_6021(%var_6001: Tensor[(13, 1, 16), float32], %var_6002: Tensor[(13, 12, 16), float32], %var_6019: Tensor[(11), float64]) -> (Tensor[(13, 12, 16), bool], Tensor[(13, 12, 16), uint16], Tensor[(1, 11, 1), float64], Tensor[(11), float64]) {
  %596 = cast(%var_6001, dtype="float32") /* ty=Tensor[(13, 1, 16), float32] */;
  %597 = cast(%var_6002, dtype="float32") /* ty=Tensor[(13, 12, 16), float32] */;
  %598 = maximum(%596, %597) /* ty=Tensor[(13, 12, 16), float32] */;
  %599 = cast(%var_6001, dtype="bool") /* ty=Tensor[(13, 1, 16), bool] */;
  %600 = cast(%598, dtype="bool") /* ty=Tensor[(13, 12, 16), bool] */;
  %601 = cast(%var_6002, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
  %602 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%598, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %605 = cast(%var_6019, dtype="float64") /* ty=Tensor[(11), float64] */;
  %606 = reshape(%605, newshape=[1, 11, 1]) /* ty=Tensor[(1, 11, 1), float64] */;
  %607 = @func_4092(%606) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */;
  %608 = less_equal(%599, %600) /* ty=Tensor[(13, 12, 16), bool] */;
  %609 = add(%603, %604) /* ty=Tensor[(13, 12, 16), uint16] */;
  %610 = %607.0;
  (%608, %609, %610, %var_6019)
}

def @func_10550() -> (Tensor[(6, 11, 16), float32],) {
  %611 = @func_8179() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %612 = %611.0;
  (%612,)
}

def @func_9429() -> (Tensor[(6, 11, 16), float32],) {
  %615 = fn () -> (Tensor[(6, 11, 16), float32],) {
    %613 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
    %614 = %613.1;
    (%614,)
  };
  %615() /* ty=(Tensor[(6, 11, 16), float32],) */
}

def @func_10050(%var_10007: Tensor[(180, 2), int16], %var_10042: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(672), uint64], Tensor[(672), uint64], Tensor[(11, 5, 9), bool], Tensor[(180, 2), float32], Tensor[(14, 3, 10), bool], Tensor[(182), float64], Tensor[(858), float32]) {
  %616 = @func_9950() /* ty=(Tensor[(420), int32], Tensor[(6, 11, 16), float32]) */;
  %617 = cast(meta[relay.Constant][51] /* ty=Tensor[(672), uint64] */, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %618 = cast(%var_10007, dtype="int16") /* ty=Tensor[(180, 2), int16] */;
  %619 = reshape(%617, newshape=[672]) /* ty=Tensor[(672), uint64] */;
  %620 = reshape(%618, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %621 = @func_8968(%619, %620) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(18, 4), float32], Tensor[(672), uint64], Tensor[(6, 11, 16), bool], Tensor[(4, 9, 10), int16], Tensor[(360), int16], Tensor[(182), float64], Tensor[(98), float64], Tensor[(14, 3, 10), bool], Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), bool]) */;
  %622 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 99), float64] */, dtype="float64") /* ty=Tensor[(5, 99), float64] */;
  %623 = reshape(%622, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
  %624 = @func_4351(%623) /* ty=Tensor[(11, 5, 9), float64] */;
  %625 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 99), float64] */, dtype="bool") /* ty=Tensor[(5, 99), bool] */;
  %626 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(5, 99), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %627 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 99), float64] */, dtype="bool") /* ty=Tensor[(5, 99), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %629 = greater(%627, %628) /* ty=Tensor[(5, 99), bool] */;
  %630 = cast(%629, dtype="bool") /* ty=Tensor[(5, 99), bool] */;
  %631 = shape_of(%624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%624, dtype="bool") /* ty=Tensor[(11, 5, 9), bool] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %634 = cast(%var_10007, dtype="float32") /* ty=Tensor[(180, 2), float32] */;
  %635 = @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */;
  %636 = cast(%var_10042, dtype="float64") /* ty=Tensor[(182), float64] */;
  %637 = reshape(%636, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), float64] */;
  %638 = @func_7033(%637) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
  %639 = %638.2;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(858), float32] */;
  %641 = %616.1;
  %642 = %621.2;
  %643 = not_equal(%632, %633) /* ty=Tensor[(11, 5, 9), bool] */;
  %644 = log(%634) /* ty=Tensor[(180, 2), float32] */;
  %645 = %635.1;
  %646 = atan(%640) /* ty=Tensor[(858), float32] */;
  (%641, %642, meta[relay.Constant][51] /* ty=Tensor[(672), uint64] */, %643, %644, %645, %var_10042, %646)
}

def @func_10835() -> (Tensor[(14, 3, 10), bool],) {
  @func_10833() /* ty=(Tensor[(14, 3, 10), bool],) */
}

def @func_11371(%var_11370: Tensor[(1320), uint8]) -> (Tensor[(6, 11, 16), float64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8]) {
  %654 = fn (%var_11359: Tensor[(1320), uint8]) -> (Tensor[(6, 11, 16), float64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8]) {
    %647 = @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */;
    %648 = cast(%var_11359, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
    %649 = cast(%var_11359, dtype="uint8") /* ty=Tensor[(1320), uint8] */;
    %650 = reshape(%648, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
    %651 = reshape(%649, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), uint8] */;
    %652 = %647.0;
    %653 = @func_10268(%650, %651) /* ty=Tensor[(12, 11, 10), uint8] */;
    (%652, %653, %var_11359)
  };
  %654(%var_11370) /* ty=(Tensor[(6, 11, 16), float64], Tensor[(12, 11, 10), uint8], Tensor[(1320), uint8]) */
}

def @func_10822(%var_10815: Tensor[(60), float64], %var_10817: Tensor[(30), float64]) -> (Tensor[(6, 11, 16), float32], Tensor[(30), float64], Tensor[(60), float64], Tensor[(360), float64], Tensor[(30), float64], Tensor[(5, 42), int8], Tensor[(208), float32]) {
  %655 = @func_9428() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %658 = atanh(%657) /* ty=Tensor[(6, 11, 16), float64] */;
  %659 = cast(%656, dtype="int32") /* ty=Tensor[(6, 11, 16), int32] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="int32") /* ty=Tensor[(6, 11, 16), int32] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %663 = bitwise_and(%661, %662) /* ty=Tensor[(6, 11, 16), int32] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(6, 11, 16), float32] */;
  %665 = cast(%var_10815, dtype="float64") /* ty=Tensor[(60), float64] */;
  %666 = cast(meta[relay.Constant][54] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %667 = cast(%var_10817, dtype="float64") /* ty=Tensor[(30), float64] */;
  %668 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 42), int8] */, dtype="int8") /* ty=Tensor[(5, 42), int8] */;
  %669 = cast(meta[relay.Constant][56] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %670 = reshape(%665, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), float64] */;
  %671 = reshape(%666, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %672 = reshape(%667, newshape=[1, 30]) /* ty=Tensor[(1, 30), float64] */;
  %673 = reshape(%668, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %674 = reshape(%669, newshape=[208]) /* ty=Tensor[(208), float32] */;
  %675 = @func_6903(%670, %671, %672, %673, %674) /* ty=(Tensor[(1, 15, 4), float64], Tensor[(30), float64], Tensor[(360), float64], Tensor[(1, 30), float64], Tensor[(210), int8], Tensor[(13, 12, 16), bool], Tensor[(208), float32], Tensor[(2496), float32], Tensor[(11), float64]) */;
  %676 = log10(%664) /* ty=Tensor[(6, 11, 16), float32] */;
  %677 = %675.1;
  (%676, %677, %var_10815, meta[relay.Constant][54] /* ty=Tensor[(360), float64] */, %var_10817, meta[relay.Constant][55] /* ty=Tensor[(5, 42), int8] */, meta[relay.Constant][56] /* ty=Tensor[(208), float32] */)
}

def @func_7061(%var_7060: Tensor[(10, 3, 15), float64]) -> Tensor[(10, 3, 15), float64] {
  %679 = fn (%var_7055: Tensor[(10, 3, 15), float64]) -> Tensor[(10, 3, 15), float64] {
    %678 = cast(%var_7055, dtype="float64") /* ty=Tensor[(10, 3, 15), float64] */;
    sqrt(%678) /* ty=Tensor[(10, 3, 15), float64] */
  };
  %679(%var_7060) /* ty=Tensor[(10, 3, 15), float64] */
}

def @func_9589(%var_9582: Tensor[(16, 15, 4), float32]) -> (Tensor[(16, 15, 4), float32],) {
  %680 = cast(%var_9582, dtype="float32") /* ty=Tensor[(16, 15, 4), float32] */;
  %681 = acos(%680) /* ty=Tensor[(16, 15, 4), float32] */;
  (%681,)
}

def @func_11386() -> Tensor[(6, 11, 16), float32] {
  @func_11384() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_4094(%var_4093: Tensor[(1, 11, 1), float64]) -> (Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) {
  %690 = fn (%var_4038: Tensor[(1, 11, 1), float64]) -> (Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) {
    %682 = cast(7.1909f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %683 = cast(%var_4038, dtype="float64") /* ty=Tensor[(1, 11, 1), float64] */;
    %684 = cast(%var_4038, dtype="int16") /* ty=Tensor[(1, 11, 1), int16] */;
    %685 = cast(7.1909f64 /* ty=float64 */, dtype="int16") /* ty=int16 */;
    %686 = cast(%var_4038, dtype="float64") /* ty=Tensor[(1, 11, 1), float64] */;
    %687 = divide(%682, %683) /* ty=Tensor[(1, 11, 1), float64] */;
    %688 = add(%684, %685) /* ty=Tensor[(1, 11, 1), int16] */;
    %689 = sin(%686) /* ty=Tensor[(1, 11, 1), float64] */;
    (%687, %688, %689)
  };
  %690(%var_4093) /* ty=(Tensor[(1, 11, 1), float64], Tensor[(1, 11, 1), int16], Tensor[(1, 11, 1), float64]) */
}

def @func_7719(%var_7702: Tensor[(1, 9, 8), float32], %var_7714: Tensor[(280), float32], %var_7715: Tensor[(672), uint64]) -> (Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) {
  %691 = cast(2.85097f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %692 = cast(%var_7702, dtype="float32") /* ty=Tensor[(1, 9, 8), float32] */;
  %693 = cast(meta[relay.Constant][57] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
  %694 = cast(meta[relay.Constant][57] /* ty=Tensor[(1386), int8] */, dtype="int8") /* ty=Tensor[(1386), int8] */;
  %695 = reshape(%693, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
  %696 = reshape(%694, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int8] */;
  %697 = @func_2550(%695, %696) /* ty=(Tensor[(9, 14, 11), int8],) */;
  %698 = cast(%var_7714, dtype="float32") /* ty=Tensor[(280), float32] */;
  %699 = cast(%var_7715, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %700 = reshape(%698, newshape=[8, 7, 5]) /* ty=Tensor[(8, 7, 5), float32] */;
  %701 = reshape(%699, newshape=[168, 4]) /* ty=Tensor[(168, 4), uint64] */;
  %702 = @func_3691(%700, %701) /* ty=(Tensor[(6, 7, 16), uint64], uint64, Tensor[(168, 4), uint64], Tensor[(8, 7, 5), float32]) */;
  %703 = power(%691, %692) /* ty=Tensor[(1, 9, 8), float32] */;
  %704 = %697.0;
  %705 = %702.0;
  (%703, %704, meta[relay.Constant][57] /* ty=Tensor[(1386), int8] */, %705, %var_7714, %var_7715)
}

def @func_10741(%var_10739: Tensor[(182), float64]) -> (Tensor[(6, 11, 16), uint32], Tensor[(98), float64], Tensor[(98), float64], Tensor[(11), float64], Tensor[(1, 11), float64], Tensor[(182), float64]) {
  %706 = cast(meta[relay.Constant][58] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %707 = reshape(%706, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %708 = @func_8372(%707) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
  %709 = @func_9565() /* ty=Tensor[(6, 11, 16), uint32] */;
  %710 = cast(%709, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
  %711 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 11), float64] */;
  %712 = cast(%var_10739, dtype="float64") /* ty=Tensor[(182), float64] */;
  %713 = reshape(%710, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), float64] */;
  %714 = reshape(%711, newshape=[11]) /* ty=Tensor[(11), float64] */;
  %715 = reshape(%712, newshape=[182]) /* ty=Tensor[(182), float64] */;
  %716 = @func_8472(%713, %714, %715) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */;
  %717 = %708.2;
  %718 = %716.1;
  (%709, %717, meta[relay.Constant][58] /* ty=Tensor[(98), float64] */, %718, meta[relay.Constant][59] /* ty=Tensor[(1, 11), float64] */, %var_10739)
}

def @func_11522() -> Tensor[(6, 11, 16), float32] {
  %720 = fn () -> Tensor[(6, 11, 16), float32] {
    %719 = @func_9580() /* ty=(Tensor[(6, 11, 16), float32],) */;
    %719.0
  };
  %720() /* ty=Tensor[(6, 11, 16), float32] */
}

def @func_8313() -> (Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) {
  %721 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %722 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
  %723 = %721.1;
  %724 = %722.0;
  (%723, %724)
}

def @func_9581() -> (Tensor[(6, 11, 16), float32],) {
  %726 = fn () -> (Tensor[(6, 11, 16), float32],) {
    %725 = @func_9387() /* ty=Tensor[(6, 11, 16), float32] */;
    (%725,)
  };
  %726() /* ty=(Tensor[(6, 11, 16), float32],) */
}

def @func_10687() -> (Tensor[(420), bool],) {
  %733 = fn () -> (Tensor[(420), bool],) {
    %727 = @func_9652() /* ty=Tensor[(420), int32] */;
    %728 = cast(meta[relay.Constant][60] /* ty=Tensor[(420), int32] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(1), int32] */;
    %730 = cast(%727, dtype="bool") /* ty=Tensor[(420), bool] */;
    %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?), bool] */;
    %732 = less(%730, %731) /* ty=Tensor[(420), bool] */;
    (%732,)
  };
  %733() /* ty=(Tensor[(420), bool],) */
}

def @func_2685(%var_2647: Tensor[(8, 9, 3), float64], %var_2671: Tensor[(5, 6), float64]) -> (Tensor[(8, 9, 3), float64], Tensor[(7, 5, 6), int32], Tensor[(5, 6), float64], Tensor[(210), int8]) {
  %734 = cast(%var_2647, dtype="float64") /* ty=Tensor[(8, 9, 3), float64] */;
  %735 = cast(%var_2671, dtype="float64") /* ty=Tensor[(5, 6), float64] */;
  %736 = cast(meta[relay.Constant][61] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %737 = reshape(%735, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float64] */;
  %738 = reshape(%736, newshape=[7, 5, 6]) /* ty=Tensor[(7, 5, 6), int8] */;
  %739 = @func_1287(%737, %738) /* ty=(Tensor[(7, 5, 6), int32],) */;
  %740 = exp(%734) /* ty=Tensor[(8, 9, 3), float64] */;
  %741 = %739.0;
  (%740, %741, %var_2671, meta[relay.Constant][61] /* ty=Tensor[(210), int8] */)
}

def @func_10479(%var_10477: Tensor[(630), float32]) -> (Tensor[(12, 5, 14), float64], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) {
  @func_10476(%var_10477) /* ty=(Tensor[(12, 5, 14), float64], Tensor[(9, 10, 7), float32], Tensor[(630), float32]) */
}

def @func_8374(%var_8373: Tensor[(98), float64]) -> (Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) {
  %750 = fn (%var_8369: Tensor[(98), float64]) -> (Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) {
    %742 = @func_8212() /* ty=(Tensor[(6, 11, 16), float32], Tensor[(14, 3, 10), bool], Tensor[(210, 2), int32]) */;
    %743 = cast(%var_8369, dtype="float64") /* ty=Tensor[(98), float64] */;
    %744 = cast(meta[relay.Constant][62] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %745 = reshape(%743, newshape=[14, 1, 7]) /* ty=Tensor[(14, 1, 7), float64] */;
    %746 = reshape(%744, newshape=[1, 182]) /* ty=Tensor[(1, 182), float64] */;
    %747 = @func_7218(%745, %746) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) */;
    %748 = %742.1;
    %749 = %747.1;
    (%748, %749, %var_8369, meta[relay.Constant][62] /* ty=Tensor[(182), float64] */)
  };
  %750(%var_8373) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */
}

def @func_11441(%var_11440: Tensor[(1, 8, 1), float64]) -> (Tensor[(15, 8, 7), float64], Tensor[(15, 8, 7), bool]) {
  %757 = fn (%var_11425: Tensor[(1, 8, 1), float64]) -> (Tensor[(15, 8, 7), float64], Tensor[(15, 8, 7), bool]) {
    %751 = cast(%var_11425, dtype="float64") /* ty=Tensor[(1, 8, 1), float64] */;
    %752 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 8, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 7), float64] */;
    %753 = cast(%var_11425, dtype="bool") /* ty=Tensor[(1, 8, 1), bool] */;
    %754 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 8, 7), float64] */, dtype="bool") /* ty=Tensor[(15, 8, 7), bool] */;
    %755 = mod(%751, %752) /* ty=Tensor[(15, 8, 7), float64] */;
    %756 = greater(%753, %754) /* ty=Tensor[(15, 8, 7), bool] */;
    (%755, %756)
  };
  %757(%var_11440) /* ty=(Tensor[(15, 8, 7), float64], Tensor[(15, 8, 7), bool]) */
}

def @func_8293() -> (Tensor[(6, 11, 16), float32],) {
  @func_8291() /* ty=(Tensor[(6, 11, 16), float32],) */
}

def @func_11594() -> (Tensor[(210, 2), int32], Tensor[(14, 3, 10), bool]) {
  %761 = fn () -> (Tensor[(210, 2), int32], Tensor[(14, 3, 10), bool]) {
    %758 = @func_9770() /* ty=(Tensor[(6, 11, 16), float64], Tensor[(14, 3, 10), bool]) */;
    %759 = @func_9503() /* ty=Tensor[(210, 2), int32] */;
    %760 = %758.1;
    (%759, %760)
  };
  %761() /* ty=(Tensor[(210, 2), int32], Tensor[(14, 3, 10), bool]) */
}

def @func_9172(%var_9169: Tensor[(495, 1), float64], %var_9170: Tensor[(26, 7), float64], %var_9171: Tensor[(98), float64]) -> (Tensor[(6, 11, 16), float64], Tensor[(11, 5, 9), float64], Tensor[(9, ?, 2), bool], Tensor[(18), float64], Tensor[(11), float64], Tensor[(26, 7), float64], Tensor[(14, 3, 10), bool], Tensor[(495, 11), int64], Tensor[(14, 3, 10), bool], Tensor[(495, 98), uint32]) {
  %798 = fn (%var_9078: Tensor[(495, 1), float64], %var_9096: Tensor[(26, 7), float64], %var_9112: Tensor[(98), float64]) -> (Tensor[(6, 11, 16), float64], Tensor[(11, 5, 9), float64], Tensor[(9, ?, 2), bool], Tensor[(18), float64], Tensor[(11), float64], Tensor[(26, 7), float64], Tensor[(14, 3, 10), bool], Tensor[(495, 11), int64], Tensor[(14, 3, 10), bool], Tensor[(495, 98), uint32]) {
    %762 = @func_8758() /* ty=(Tensor[(6, 11, 16), float64],) */;
    %763 = cast(%var_9078, dtype="float64") /* ty=Tensor[(495, 1), float64] */;
    %764 = reshape(%763, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), float64] */;
    %765 = cast(meta[relay.Constant][64] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %766 = reshape(%765, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), float64] */;
    %767 = @func_8549(%766) /* ty=(Tensor[(9, ?, 2), bool],) */;
    %768 = %762.0;
    %769 = cast(%768, dtype="float64") /* ty=Tensor[(6, 11, 16), float64] */;
    %770 = cast(meta[relay.Constant][65] /* ty=Tensor[(11), float64] */, dtype="float64") /* ty=Tensor[(11), float64] */;
    %771 = cast(%var_9096, dtype="float64") /* ty=Tensor[(26, 7), float64] */;
    %772 = reshape(%769, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), float64] */;
    %773 = reshape(%770, newshape=[11]) /* ty=Tensor[(11), float64] */;
    %774 = reshape(%771, newshape=[182]) /* ty=Tensor[(182), float64] */;
    %775 = @func_8472(%772, %773, %774) /* ty=(Tensor[(6, 11, 16), uint8], Tensor[(11), float64], Tensor[(14, ?, 7), uint64], Tensor[(98), float64], Tensor[(182), float64], Tensor[(6, 11, 16), bool], Tensor[(13, 11, 6), float64]) */;
    %776 = cast(%var_9112, dtype="float64") /* ty=Tensor[(98), float64] */;
    %777 = reshape(%776, newshape=[98]) /* ty=Tensor[(98), float64] */;
    %778 = @func_8372(%777) /* ty=(Tensor[(14, 3, 10), bool], Tensor[(1, 182), float64], Tensor[(98), float64], Tensor[(182), float64]) */;
    %779 = cast(meta[relay.Constant][65] /* ty=Tensor[(11), float64] */, dtype="int64") /* ty=Tensor[(11), int64] */;
    %780 = cast(%var_9078, dtype="int64") /* ty=Tensor[(495, 1), int64] */;
    %781 = %778.0;
    %782 = cast(%781, dtype="int32") /* ty=Tensor[(14, 3, 10), int32] */;
    %783 = cast(%781, dtype="int32") /* ty=Tensor[(14, 3, 10), int32] */;
    %784 = reshape(%782, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
    %785 = reshape(%783, newshape=[14, 3, 10]) /* ty=Tensor[(14, 3, 10), int32] */;
    %786 = @func_4247(%784, %785) /* ty=(Tensor[(14, 3, 10), bool],) */;
    %787 = cast(%var_9112, dtype="uint32") /* ty=Tensor[(98), uint32] */;
    %788 = cast(%var_9078, dtype="uint32") /* ty=Tensor[(495, 1), uint32] */;
    %789 = bitwise_and(%787, %788) /* ty=Tensor[(495, 98), uint32] */;
    %790 = cast(%789, dtype="uint32") /* ty=Tensor[(495, 98), uint32] */;
    %791 = cast(%var_9112, dtype="uint32") /* ty=Tensor[(98), uint32] */;
    %792 = @func_4351(%764) /* ty=Tensor[(11, 5, 9), float64] */;
    %793 = %767.0;
    %794 = %775.1;
    %795 = multiply(%779, %780) /* ty=Tensor[(495, 11), int64] */;
    %796 = %786.0;
    %797 = add(%790, %791) /* ty=Tensor[(495, 98), uint32] */;
    (%768, %792, %793, meta[relay.Constant][64] /* ty=Tensor[(18), float64] */, %794, %var_9096, %781, %795, %796, %797)
  };
  %798(%var_9169, %var_9170, %var_9171) /* ty=(Tensor[(6, 11, 16), float64], Tensor[(11, 5, 9), float64], Tensor[(9, ?, 2), bool], Tensor[(18), float64], Tensor[(11), float64], Tensor[(26, 7), float64], Tensor[(14, 3, 10), bool], Tensor[(495, 11), int64], Tensor[(14, 3, 10), bool], Tensor[(495, 98), uint32]) */
}

def @func_8657(%var_8654: Tensor[(4, 10, 10), float32], %var_8655: Tensor[(4, 10, 10), float32], %var_8656: Tensor[(858), float64]) -> (Tensor[(4, 10, 10), bool], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) {
  @func_8652(%var_8654, %var_8655, %var_8656) /* ty=(Tensor[(4, 10, 10), bool], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */
}

def @func_9950() -> (Tensor[(420), int32], Tensor[(6, 11, 16), float32]) {
  %799 = @func_9428() /* ty=(Tensor[(6, 11, 16), float32],) */;
  %800 = @func_9731() /* ty=Tensor[(420), int32] */;
  %801 = %799.0;
  (%800, %801)
}

def @func_7221(%var_7219: Tensor[(14, 1, 7), float64], %var_7220: Tensor[(1, 182), float64]) -> (Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) {
  %828 = fn (%var_7156: Tensor[(14, 1, 7), float64], %var_7205: Tensor[(1, 182), float64]) -> (Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) {
    %802 = cast(%var_7205, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
    %803 = reshape(%802, newshape=[13, 14, 1]) /* ty=Tensor[(13, 14, 1), float64] */;
    %804 = @func_7033(%803) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) */;
    %805 = cast(%var_7156, dtype="float64") /* ty=Tensor[(14, 1, 7), float64] */;
    %806 = sin(%805) /* ty=Tensor[(14, 1, 7), float64] */;
    %807 = cast(%806, dtype="uint8") /* ty=Tensor[(14, 1, 7), uint8] */;
    %808 = shape_of(%var_7156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%var_7156, dtype="uint8") /* ty=Tensor[(14, 1, 7), uint8] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %811 = add(%809, %810) /* ty=Tensor[(14, ?, 7), uint8] */;
    %812 = cast(%811, dtype="bool") /* ty=Tensor[(14, ?, 7), bool] */;
    %813 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %814 = cast(%806, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
    %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %816 = equal(%814, %815) /* ty=Tensor[(14, ?, 7), bool] */;
    %817 = cast(%var_7156, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
    %818 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%806, dtype="bool") /* ty=Tensor[(14, 1, 7), bool] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %821 = logical_and(%819, %820) /* ty=Tensor[(14, ?, 7), bool] */;
    %822 = cast(%821, dtype="uint64") /* ty=Tensor[(14, ?, 7), uint64] */;
    %823 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %824 = cast(%816, dtype="uint64") /* ty=Tensor[(14, ?, 7), uint64] */;
    %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %826 = %804.0;
    %827 = bitwise_or(%824, %825) /* ty=Tensor[(14, ?, 7), uint64] */;
    (%826, %var_7205, %827)
  };
  %828(%var_7219, %var_7220) /* ty=(Tensor[(13, 14, 1), float32], Tensor[(1, 182), float64], Tensor[(14, ?, 7), uint64]) */
}

def @func_3871(%var_3857: Tensor[(4, 9, 10), int16], %var_3858: Tensor[(4, 9, 10), int16]) -> Tensor[(4, 9, 10), int16] {
  %829 = cast(%var_3858, dtype="int16") /* ty=Tensor[(4, 9, 10), int16] */;
  %830 = shape_of(%var_3857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%var_3857, dtype="int16") /* ty=Tensor[(4, 9, 10), int16] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%831, %832) /* ty=Tensor[(4, 9, 10), int16] */
}

def @func_8505() -> Tensor[(14, 3, 10), bool] {
  @func_8503() /* ty=Tensor[(14, 3, 10), bool] */
}

def @func_8652(%var_8600: Tensor[(4, 10, 10), float32], %var_8621: Tensor[(4, 10, 10), float32], %var_8639: Tensor[(858), float64]) -> (Tensor[(4, 10, 10), bool], Tensor[(13, 11, 6), float64], Tensor[(858), float64]) {
  %833 = cast(%var_8600, dtype="float32") /* ty=Tensor[(4, 10, 10), float32] */;
  %834 = log(%833) /* ty=Tensor[(4, 10, 10), float32] */;
  %835 = cast(%var_8621, dtype="bool") /* ty=Tensor[(4, 10, 10), bool] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="bool") /* ty=Tensor[(4, 10, 10), bool] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %839 = cast(%var_8639, dtype="float64") /* ty=Tensor[(858), float64] */;
  %840 = reshape(%839, newshape=[13, 11, 6]) /* ty=Tensor[(13, 11, 6), float64] */;
  %841 = less_equal(%837, %838) /* ty=Tensor[(4, 10, 10), bool] */;
  %842 = @func_6420(%840) /* ty=Tensor[(13, 11, 6), float64] */;
  (%841, %842, %var_8639)
}

def @func_8115(%var_8114: Tensor[(2, 2, 8), float64]) -> Tensor[(2, 2, 8), float64] {
  %844 = fn (%var_8102: Tensor[(2, 2, 8), float64]) -> Tensor[(2, 2, 8), float64] {
    %843 = cast(%var_8102, dtype="float64") /* ty=Tensor[(2, 2, 8), float64] */;
    sin(%843) /* ty=Tensor[(2, 2, 8), float64] */
  };
  %844(%var_8114) /* ty=Tensor[(2, 2, 8), float64] */
}

def @func_2954(%var_2936: uint64, %var_2937: Tensor[(6, 7, 16), uint64]) -> (Tensor[(6, 7, 16), uint64], Tensor[(13, 7, 6), bool]) {
  %845 = cast(%var_2936, dtype="uint64") /* ty=uint64 */;
  %846 = cast(%var_2937, dtype="uint64") /* ty=Tensor[(6, 7, 16), uint64] */;
  %847 = cast(%var_2936, dtype="bool") /* ty=bool */;
  %848 = cast(meta[relay.Constant][66] /* ty=Tensor[(13, 7, 6), uint64] */, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %849 = minimum(%845, %846) /* ty=Tensor[(6, 7, 16), uint64] */;
  %850 = less(%847, %848) /* ty=Tensor[(13, 7, 6), bool] */;
  (%849, %850)
}

def @func_8799(%var_8797: Tensor[(72, 1), float32], %var_8798: Tensor[(1, 672), uint64]) -> (Tensor[(6, 11, 16), float32], Tensor[(1, 9, 8), float32], Tensor[(72, 1), float32], Tensor[(280), float32], Tensor[(1, 672), uint64]) {
  %861 = fn (%var_8780: Tensor[(72, 1), float32], %var_8782: Tensor[(1, 672), uint64]) -> (Tensor[(6, 11, 16), float32], Tensor[(1, 9, 8), float32], Tensor[(72, 1), float32], Tensor[(280), float32], Tensor[(1, 672), uint64]) {
    %851 = @func_8313() /* ty=(Tensor[(14, 3, 10), bool], Tensor[(6, 11, 16), float32]) */;
    %852 = cast(%var_8780, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
    %853 = cast(meta[relay.Constant][67] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %854 = cast(%var_8782, dtype="uint64") /* ty=Tensor[(1, 672), uint64] */;
    %855 = reshape(%852, newshape=[1, 9, 8]) /* ty=Tensor[(1, 9, 8), float32] */;
    %856 = reshape(%853, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %857 = reshape(%854, newshape=[672]) /* ty=Tensor[(672), uint64] */;
    %858 = @func_7719(%855, %856, %857) /* ty=(Tensor[(1, 9, 8), float32], Tensor[(9, 14, 11), int8], Tensor[(1386), int8], Tensor[(6, 7, 16), uint64], Tensor[(280), float32], Tensor[(672), uint64]) */;
    %859 = %851.1;
    %860 = %858.0;
    (%859, %860, %var_8780, meta[relay.Constant][67] /* ty=Tensor[(280), float32] */, %var_8782)
  };
  %861(%var_8797, %var_8798) /* ty=(Tensor[(6, 11, 16), float32], Tensor[(1, 9, 8), float32], Tensor[(72, 1), float32], Tensor[(280), float32], Tensor[(1, 672), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_8167(%var_8082: Tensor[(18), float64], %var_8083: Tensor[(252), float64]) -> (Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2, 14, 9), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(18, 525), float32]) {
  %0 = @func_3351() /* ty=(Tensor[(168), float32],) */;
  %1 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %2 = cast(%var_8082, dtype="float64") /* ty=Tensor[(18), float64] */;
  %3 = cast(%var_8083, dtype="float64") /* ty=Tensor[(252), float64] */;
  %4 = reshape(%2, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float64] */;
  %5 = reshape(%3, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), float64] */;
  %6 = @func_1288(%4, %5) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */;
  %7 = @func_7380() /* ty=(Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) */;
  %8 = %7.3;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(18, 525), float32] */;
  %10 = asin(%9) /* ty=Tensor[(18, 525), float32] */;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(18, 525), float64] */;
  %12 = sigmoid(%11) /* ty=Tensor[(18, 525), float64] */;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(18, 525), float32] */;
  %14 = %0.0;
  %15 = %1.0;
  %16 = %6.1;
  %17 = log2(%13) /* ty=Tensor[(18, 525), float32] */;
  (%14, %15, %16, %var_8082, %var_8083, %17)
}

def @func_957(%var_913: Tensor[(2, 15, 2), float64], %var_953: Tensor[(15, 6), float32], %var_954: Tensor[(168), float32]) -> (Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) {
  %18 = cast(%var_913, dtype="float64") /* ty=Tensor[(2, 15, 2), float64] */;
  %19 = cast(%var_953, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %20 = cast(%var_954, dtype="float32") /* ty=Tensor[(168), float32] */;
  %21 = reshape(%19, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %22 = reshape(%20, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %23 = @func_590(%21, %22) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %24 = log2(%18) /* ty=Tensor[(2, 15, 2), float64] */;
  %25 = %23.0;
  (%24, %25, %var_953, %var_954)
}

def @func_7738() -> (Tensor[(168), float32],) {
  %26 = @func_3773() /* ty=Tensor[(168), float32] */;
  (%26,)
}

def @func_8714(%var_8664: Tensor[(1, 90), float32], %var_8680: Tensor[(2, 11, 16), bool]) -> (Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(1014), uint8], Tensor[(81), float32], Tensor[(3, 90), float32], Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(168), float32]) {
  %27 = @func_7738() /* ty=(Tensor[(168), float32],) */;
  %28 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %29 = cast(%var_8664, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 90), float32] */, dtype="float32") /* ty=Tensor[(3, 90), float32] */;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(1014), uint8] */, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(1014), uint8] */, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
  %33 = cast(%var_8664, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %35 = reshape(%31, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), uint8] */;
  %36 = reshape(%32, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), uint8] */;
  %37 = reshape(%33, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %38 = reshape(%34, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %39 = @func_5618(%35, %36, %37, %38) /* ty=(Tensor[(13, 13, 6), bool], Tensor[(9, 3, 3), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(2, 11, 16), bool], Tensor[(352), float32]) */;
  %40 = %39.4;
  %41 = cast(%var_8680, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %45 = @func_7380() /* ty=(Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) */;
  %46 = %27.0;
  %47 = %28.0;
  %48 = floor_divide(%29, %30) /* ty=Tensor[(3, 90), float32] */;
  %49 = greater(%43, %44) /* ty=Tensor[(2, 11, 16), bool] */;
  %50 = @func_7063() /* ty=Tensor[(1, 11, 16), float32] */;
  %51 = %45.0;
  (%46, %47, meta[relay.Constant][0] /* ty=Tensor[(1014), uint8] */, meta[relay.Constant][1] /* ty=Tensor[(81), float32] */, %48, %49, %50, %51)
}

def @func_8730() -> (Tensor[(168), float32],) {
  %52 = @func_7419() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) */;
  %53 = %52.3;
  (%53,)
}

def @func_8856() -> (Tensor[(168), float32], Tensor[(1, 11, 16), float64]) {
  %54 = @func_7667() /* ty=(Tensor[(168), float32],) */;
  %55 = %54.0;
  %56 = @func_8356() /* ty=Tensor[(1, 11, 16), float64] */;
  (%55, %56)
}

def @func_2190(%var_2187: Tensor[(9, 2, 8), float64]) -> (Tensor[(9, 2, 8), float64],) {
  %57 = cast(%var_2187, dtype="float64") /* ty=Tensor[(9, 2, 8), float64] */;
  %58 = asinh(%57) /* ty=Tensor[(9, 2, 8), float64] */;
  (%58,)
}

def @func_7565(%var_7547: Tensor[(11, 14, 14), bool]) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), int8], Tensor[(8, 11, 16), bool], Tensor[(8, 11, 16), float64]) {
  %59 = @func_5266() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %60 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %61 = %60.0;
  %62 = cast(%var_7547, dtype="int8") /* ty=Tensor[(11, 14, 14), int8] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%61, dtype="int8") /* ty=Tensor[(11, 14, 14), int8] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %66 = @func_5483() /* ty=(Tensor[(8, 11, 16), bool],) */;
  %67 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %68 = %59.0;
  %69 = multiply(%64, %65) /* ty=Tensor[(11, 14, 14), int8] */;
  %70 = %66.0;
  %71 = %67.2;
  (%68, %69, %70, %71)
}

def @func_8411() -> (Tensor[(168), float32], Tensor[(168), float32]) {
  %72 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %73 = @func_6821() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(168), float32]) */;
  %74 = %72.0;
  %75 = %73.1;
  (%74, %75)
}

def @func_2331() -> (Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) {
  %76 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %77 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %78 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %79 = %76.0;
  %80 = %77.1;
  %81 = %78.0;
  (%79, %80, %81)
}

def @func_2613() -> Tensor[(1, 11, 16), float32] {
  %82 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %82.1
}

def @func_5409() -> (Tensor[(1, 11, 16), float32],) {
  %83 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %84 = %83.1;
  (%84,)
}

def @func_3676(%var_3639: Tensor[(60), float64], %var_3640: Tensor[(15, 6), float32]) -> (Tensor[(168), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(15, 6), float32]) {
  %85 = @func_3351() /* ty=(Tensor[(168), float32],) */;
  %86 = cast(%var_3639, dtype="float64") /* ty=Tensor[(60), float64] */;
  %87 = cast(%var_3640, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %88 = %85.0;
  %89 = cast(%88, dtype="float32") /* ty=Tensor[(168), float32] */;
  %90 = reshape(%86, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %91 = reshape(%87, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %92 = reshape(%89, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %93 = @func_957(%90, %91, %92) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %94 = %93.1;
  (%88, %94, %var_3639, %var_3640)
}

def @func_6524(%var_6507: int8, %var_6508: Tensor[(112), int8]) -> (Tensor[(144), float64], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) {
  %95 = @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */;
  %96 = cast(%var_6507, dtype="int8") /* ty=int8 */;
  %97 = cast(%var_6508, dtype="int8") /* ty=Tensor[(112), int8] */;
  %98 = reshape(%96, newshape=[]) /* ty=int8 */;
  %99 = reshape(%97, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
  %100 = @func_1406(%98, %99) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
  %101 = %95.1;
  %102 = %100.1;
  (%101, %102, %var_6507, %var_6508)
}

def @func_5590() -> (Tensor[(1, 11, 16), float32],) {
  %103 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
  (%103,)
}

def @func_6452(%var_6446: Tensor[(132, 2), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(60), float64], Tensor[(132, 2), float64]) {
  %104 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %105 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %106 = cast(%var_6446, dtype="float64") /* ty=Tensor[(132, 2), float64] */;
  %107 = reshape(%105, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %108 = reshape(%106, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %109 = @func_4336(%107, %108) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %110 = %104.0;
  %111 = %109.5;
  (%110, %111, meta[relay.Constant][3] /* ty=Tensor[(60), float64] */, %var_6446)
}

def @func_3351() -> (Tensor[(168), float32],) {
  %112 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %113 = %112.1;
  (%113,)
}

def @func_4496(%var_4479: Tensor[(7, 66), float64], %var_4486: int8) -> (Tensor[(11, 14, 14), float32], Tensor[(3, 14, 11), float64], Tensor[(7, 66), float64], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(224, 1), float32], int8) {
  %114 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %115 = %114.0;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %117 = cast(%var_4479, dtype="float64") /* ty=Tensor[(7, 66), float64] */;
  %118 = reshape(%117, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %119 = @func_445(%118) /* ty=(Tensor[(3, 14, 11), float64],) */;
  %120 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %121 = cast(meta[relay.Constant][4] /* ty=Tensor[(224, 1), float32] */, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
  %122 = cast(%var_4486, dtype="int8") /* ty=int8 */;
  %123 = reshape(%121, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %124 = reshape(%122, newshape=[]) /* ty=int8 */;
  %125 = @func_2837(%123, %124) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */;
  %126 = acos(%116) /* ty=Tensor[(11, 14, 14), float32] */;
  %127 = %119.0;
  %128 = %120.0;
  %129 = %125.4;
  (%126, %127, %var_4479, %128, %129, meta[relay.Constant][4] /* ty=Tensor[(224, 1), float32] */, %var_4486)
}

def @func_3561(%var_3558: Tensor[(6, 4, 11), float64]) -> (Tensor[(6, 4, 11), float64],) {
  %130 = cast(%var_3558, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
  %131 = log(%130) /* ty=Tensor[(6, 4, 11), float64] */;
  (%131,)
}

def @func_7380() -> (Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) {
  %132 = @func_6575() /* ty=(Tensor[(144), float64], Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(112), int8], Tensor[(6, 28), float32]) */;
  %133 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %134 = cast(meta[relay.Constant][5] /* ty=Tensor[(18, 1), float64] */, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %135 = cast(meta[relay.Constant][6] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %136 = reshape(%134, newshape=[3, 6]) /* ty=Tensor[(3, 6), float64] */;
  %137 = reshape(%135, newshape=[5, 7, 15]) /* ty=Tensor[(5, 7, 15), float32] */;
  %138 = @func_5804(%136, %137) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */;
  %139 = cast(meta[relay.Constant][5] /* ty=Tensor[(18, 1), float64] */, dtype="int32") /* ty=Tensor[(18, 1), int32] */;
  %140 = cast(meta[relay.Constant][6] /* ty=Tensor[(525), float32] */, dtype="int32") /* ty=Tensor[(525), int32] */;
  %141 = %132.2;
  %142 = %133.1;
  %143 = %138.4;
  %144 = bitwise_or(%139, %140) /* ty=Tensor[(18, 525), int32] */;
  (%141, %142, %143, %144)
}

def @func_1970() -> (Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) {
  %145 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %146 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %147 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 11, 16), float64] */, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %148 = floor_mod(%145, %146) /* ty=Tensor[(8, 11, 16), float64] */;
  %149 = atan(%147) /* ty=Tensor[(1, 11, 16), float32] */;
  (%148, %149)
}

def @func_6271(%var_6267: Tensor[(1, 4, 4), float64]) -> Tensor[(1, 4, 4), float64] {
  %150 = cast(%var_6267, dtype="float64") /* ty=Tensor[(1, 4, 4), float64] */;
  asinh(%150) /* ty=Tensor[(1, 4, 4), float64] */
}

def @func_5158() -> (Tensor[(11, 14, 14), float32], Tensor[(11, 14, 14), float64], Tensor[(?, 11, 16), float32], Tensor[(11, 14, 14), float32]) {
  %151 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %152 = %151.0;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %154 = cast(%152, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %155 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %156 = cast(%152, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %157 = tan(%156) /* ty=Tensor[(11, 14, 14), float64] */;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %159 = sin(%153) /* ty=Tensor[(11, 14, 14), float32] */;
  %160 = atan(%154) /* ty=Tensor[(11, 14, 14), float64] */;
  %161 = %155.2;
  %162 = sigmoid(%158) /* ty=Tensor[(11, 14, 14), float32] */;
  (%159, %160, %161, %162)
}

def @func_6312() -> (Tensor[(168), float32],) {
  %163 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %164 = %163.0;
  (%164,)
}

def @func_8031() -> (Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(1, 11, 16), float32]) {
  %165 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %167 = reshape(%166, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %168 = @func_2190(%167) /* ty=(Tensor[(9, 2, 8), float64],) */;
  %169 = @func_7938() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %170 = %165.0;
  %171 = %168.0;
  %172 = %169.1;
  (%170, %171, meta[relay.Constant][9] /* ty=Tensor[(144), float64] */, %172)
}

def @func_4117(%var_4109: Tensor[(4, 13, 15), uint32]) -> (Tensor[(4, 13, 15), bool],) {
  %173 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 1), uint32] */, dtype="bool") /* ty=Tensor[(4, 13, 1), bool] */;
  %174 = cast(%var_4109, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
  %175 = not_equal(%173, %174) /* ty=Tensor[(4, 13, 15), bool] */;
  (%175,)
}

def @func_7063() -> Tensor[(1, 11, 16), float32] {
  @func_2613() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_7419() -> (Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) {
  %176 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %177 = cast(meta[relay.Constant][11] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %179 = reshape(%177, newshape=[112, 1]) /* ty=Tensor[(112, 1), int8] */;
  %180 = reshape(%178, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %181 = @func_4917(%179, %180) /* ty=(Tensor[(5, 11, 16), bool], Tensor[(112), int8], Tensor[(112, 1), int8], Tensor[(168), float32], Tensor[(3, 14, 11), float64], Tensor[(462), float64]) */;
  %182 = %176.0;
  %183 = %181.1;
  (%182, %183, meta[relay.Constant][11] /* ty=Tensor[(112), int8] */, meta[relay.Constant][12] /* ty=Tensor[(168), float32] */)
}

def @func_5377() -> (Tensor[(168), float32], Tensor[(144), float64]) {
  %184 = @func_3351() /* ty=(Tensor[(168), float32],) */;
  %185 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %186 = %184.0;
  %187 = %185.1;
  (%186, %187)
}

def @func_5804(%var_5744: Tensor[(3, 6), float64], %var_5796: Tensor[(5, 7, 15), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) {
  %188 = cast(meta[relay.Constant][13] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %189 = cast(meta[relay.Constant][13] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %190 = reshape(%188, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %191 = reshape(%189, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %192 = @func_96(%190, %191) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %193 = cast(%var_5744, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
  %194 = cast(meta[relay.Constant][14] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %195 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 90), float32] */, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %196 = reshape(%193, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %197 = reshape(%194, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
  %198 = reshape(%195, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %199 = @func_5012(%196, %197, %198) /* ty=(Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) */;
  %200 = @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %201 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %202 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 15), float32] */;
  %203 = log10(%202) /* ty=Tensor[(5, 7, 15), float32] */;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(5, 7, 15), float64] */;
  %205 = atan(%204) /* ty=Tensor[(5, 7, 15), float64] */;
  %206 = cast(%203, dtype="uint64") /* ty=Tensor[(5, 7, 15), uint64] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="uint64") /* ty=Tensor[(5, 7, 15), uint64] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %210 = minimum(%208, %209) /* ty=Tensor[(5, 7, 15), uint64] */;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(5, 7, 15), float32] */;
  %212 = acosh(%211) /* ty=Tensor[(5, 7, 15), float32] */;
  %213 = cast(%var_5796, dtype="int8") /* ty=Tensor[(5, 7, 15), int8] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="int8") /* ty=Tensor[(5, 7, 15), int8] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %217 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
  %218 = %192.0;
  %219 = %199.4;
  %220 = %200.0;
  %221 = %201.1;
  %222 = logical_xor(%215, %216) /* ty=Tensor[(5, 7, 15), int8] */;
  (%217, %218, meta[relay.Constant][13] /* ty=Tensor[(2156), float64] */, %219, %var_5744, meta[relay.Constant][14] /* ty=Tensor[(252), float64] */, meta[relay.Constant][15] /* ty=Tensor[(1, 90), float32] */, %220, %221, %222)
}

def @func_3306() -> (Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) {
  %223 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %224 = reshape(%223, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %225 = @func_2190(%224) /* ty=(Tensor[(9, 2, 8), float64],) */;
  %226 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %227 = %226.0;
  %228 = cast(%227, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %229 = acosh(%228) /* ty=Tensor[(1, 11, 16), float64] */;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %231 = cosh(%230) /* ty=Tensor[(1, 11, 16), float64] */;
  %232 = cast(%227, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%231, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %236 = %225.0;
  %237 = floor_divide(%234, %235) /* ty=Tensor[(?, 11, 16), float32] */;
  (%236, meta[relay.Constant][17] /* ty=Tensor[(144), float64] */, %237)
}

def @func_1575(%var_1491: Tensor[(7, 52), float32], %var_1510: Tensor[(11, 14, 14), bool], %var_1531: Tensor[(90), float32], %var_1532: Tensor[(168), float32], %var_1549: Tensor[(416), float64]) -> (Tensor[(6, 13, 5), uint8], Tensor[(11, 14, 14), bool], Tensor[(7, 52), float64], Tensor[(11, 14, 14), float64], Tensor[(2, 15, 2), float64], Tensor[(1, 60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(2156), float64], Tensor[(416), float64], Tensor[(14, 2, 13), float32], Tensor[(11, 14, 14), float32], Tensor[(14, 154), float64], Tensor[(11, 14, 14), bool], Tensor[(5, 2, 9), float32]) {
  %238 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %239 = log10(%238) /* ty=Tensor[(6, 13, 5), float64] */;
  %240 = cast(%239, dtype="uint8") /* ty=Tensor[(6, 13, 5), uint8] */;
  %241 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(6, 13, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 13, 5), float64] */, dtype="uint8") /* ty=Tensor[(6, 13, 5), uint8] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %244 = cast(meta[relay.Constant][19] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %245 = cast(meta[relay.Constant][19] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %246 = reshape(%244, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %247 = reshape(%245, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %248 = @func_96(%246, %247) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %249 = cast(%var_1491, dtype="float64") /* ty=Tensor[(7, 52), float64] */;
  %250 = %248.0;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %252 = cast(%250, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %253 = reshape(%251, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %254 = reshape(%252, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %255 = @func_96(%253, %254) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %256 = %255.0;
  %257 = cast(%var_1510, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %261 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %262 = cast(%var_1531, dtype="float32") /* ty=Tensor[(90), float32] */;
  %263 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %264 = reshape(%261, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %265 = reshape(%262, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %266 = reshape(%263, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %267 = @func_957(%264, %265, %266) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %268 = cast(%var_1549, dtype="float64") /* ty=Tensor[(416), float64] */;
  %269 = cast(%256, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %270 = reshape(%268, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
  %271 = reshape(%269, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %272 = @func_1333(%270, %271) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
  %273 = cast(%var_1491, dtype="float32") /* ty=Tensor[(7, 52), float32] */;
  %274 = cast(%var_1491, dtype="float32") /* ty=Tensor[(7, 52), float32] */;
  %275 = reshape(%273, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %276 = reshape(%274, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %277 = @func_1038(%275, %276) /* ty=Tensor[(14, 2, 13), float32] */;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  %279 = cast(%var_1510, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %280 = sinh(%279) /* ty=Tensor[(11, 14, 14), float32] */;
  %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%280, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %285 = power(%283, %284) /* ty=Tensor[(11, 14, 14), float64] */;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %287 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %288 = reshape(%287, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %289 = @func_172(%288) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
  %290 = cast(meta[relay.Constant][19] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %291 = asin(%286) /* ty=Tensor[(11, 14, 14), float32] */;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %293 = reshape(%290, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %294 = reshape(%292, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %295 = @func_96(%293, %294) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %296 = cast(%var_1531, dtype="float32") /* ty=Tensor[(90), float32] */;
  %297 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %298 = reshape(%296, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %299 = reshape(%297, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %300 = @func_590(%298, %299) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %301 = right_shift(%242, %243) /* ty=Tensor[(6, 13, 5), uint8] */;
  %302 = sinh(%249) /* ty=Tensor[(7, 52), float64] */;
  %303 = floor_mod(%259, %260) /* ty=Tensor[(11, 14, 14), float64] */;
  %304 = %267.0;
  %305 = %272.2;
  %306 = atan(%278) /* ty=Tensor[(14, 2, 13), float32] */;
  %307 = %289.2;
  %308 = %295.0;
  %309 = %300.0;
  (%301, %250, %302, %303, %304, meta[relay.Constant][20] /* ty=Tensor[(1, 60), float64] */, %var_1531, %var_1532, %305, %var_1549, %306, %291, %307, %308, %309)
}

def @func_6684(%var_6669: Tensor[(11, 12, 12), bool], %var_6670: Tensor[(11, 12, 12), bool], %var_6679: Tensor[(1, 60), float64]) -> (Tensor[(11, 12, 12), bool], Tensor[(13, 13, 11), bool], Tensor[(1, 1859), float32], Tensor[(1, 60), float64], Tensor[(6, 28), float32]) {
  %310 = cast(%var_6670, dtype="bool") /* ty=Tensor[(11, 12, 12), bool] */;
  %311 = shape_of(%var_6669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%var_6669, dtype="bool") /* ty=Tensor[(11, 12, 12), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1859), float32] */, dtype="float32") /* ty=Tensor[(1, 1859), float32] */;
  %315 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1859), float32] */, dtype="float32") /* ty=Tensor[(1, 1859), float32] */;
  %316 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1859), float32] */, dtype="float32") /* ty=Tensor[(1, 1859), float32] */;
  %317 = cast(%var_6679, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %318 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 28), float32] */, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %319 = reshape(%314, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float32] */;
  %320 = reshape(%315, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float32] */;
  %321 = reshape(%316, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float32] */;
  %322 = reshape(%317, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %323 = reshape(%318, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %324 = @func_1104(%319, %320, %321, %322, %323) /* ty=(Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), float32], Tensor[(15, 6), float32], Tensor[(15, 4), float64], Tensor[(90), float32], Tensor[(168), float32]) */;
  %325 = logical_or(%312, %313) /* ty=Tensor[(11, 12, 12), bool] */;
  %326 = %324.1;
  (%325, %326, meta[relay.Constant][21] /* ty=Tensor[(1, 1859), float32] */, %var_6679, meta[relay.Constant][22] /* ty=Tensor[(6, 28), float32] */)
}

def @func_3416(%var_3389: Tensor[(90), float32], %var_3390: Tensor[(168), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32]) {
  %327 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %328 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %329 = cast(%var_3389, dtype="float32") /* ty=Tensor[(90), float32] */;
  %330 = cast(%var_3390, dtype="float32") /* ty=Tensor[(168), float32] */;
  %331 = reshape(%328, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %332 = reshape(%329, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %333 = reshape(%330, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %334 = @func_957(%331, %332, %333) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %335 = %327.0;
  %336 = %334.1;
  (%335, %336, meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, %var_3389, %var_3390)
}

def @func_6379() -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64]) {
  %337 = cast(meta[relay.Constant][24] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %338 = cast(meta[relay.Constant][24] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %339 = reshape(%337, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %340 = reshape(%338, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %341 = @func_96(%339, %340) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %342 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  %343 = %341.0;
  (%342, %343, meta[relay.Constant][24] /* ty=Tensor[(2156), float64] */)
}

def @func_1406(%var_1383: int8, %var_1384: Tensor[(4, 4, 7), int8]) -> (Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) {
  %344 = cast(%var_1383, dtype="int8") /* ty=int8 */;
  %345 = cast(%var_1384, dtype="int8") /* ty=Tensor[(4, 4, 7), int8] */;
  %346 = cast(%var_1384, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
  %347 = left_shift(%344, %345) /* ty=Tensor[(4, 4, 7), int8] */;
  %348 = tan(%346) /* ty=Tensor[(4, 4, 7), float32] */;
  (%347, %348)
}

def @func_5452() -> (Tensor[(1, 11, 16), float32],) {
  %349 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %350 = %349.1;
  (%350,)
}

def @func_3524(%var_3493: Tensor[(2156), float64], %var_3503: Tensor[(81), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(16, 2, 13), float64], Tensor[(416), float64], Tensor[(2156), float64], Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(81), uint8]) {
  %351 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %352 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %353 = reshape(%352, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %354 = @func_2190(%353) /* ty=(Tensor[(9, 2, 8), float64],) */;
  %355 = cast(meta[relay.Constant][26] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %356 = cast(%var_3493, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %357 = reshape(%355, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
  %358 = reshape(%356, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %359 = @func_1333(%357, %358) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
  %360 = cast(%var_3503, dtype="float32") /* ty=Tensor[(81), float32] */;
  %361 = cast(meta[relay.Constant][27] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %362 = reshape(%360, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %363 = reshape(%361, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %364 = @func_2946(%362, %363) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */;
  %365 = cast(meta[relay.Constant][28] /* ty=Tensor[(81), float32] */, dtype="uint8") /* ty=Tensor[(81), uint8] */;
  %366 = shape_of(%var_3503, dtype="int32") /* ty=Tensor[(1), int32] */;
  %367 = cast(%var_3503, dtype="uint8") /* ty=Tensor[(81), uint8] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %369 = %351.0;
  %370 = %354.0;
  %371 = %359.0;
  %372 = %364.0;
  %373 = subtract(%367, %368) /* ty=Tensor[(81), uint8] */;
  (%369, %370, meta[relay.Constant][25] /* ty=Tensor[(144), float64] */, %371, meta[relay.Constant][26] /* ty=Tensor[(416), float64] */, %var_3493, %372, meta[relay.Constant][27] /* ty=Tensor[(112), int8] */, %373)
}

def @func_4024() -> Tensor[(1, 11, 16), float32] {
  %374 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %374.0
}

def @func_3135(%var_3124: Tensor[(112), int8], %var_3129: Tensor[(168), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) {
  %375 = cast(meta[relay.Constant][29] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %376 = cast(%var_3124, dtype="int8") /* ty=Tensor[(112), int8] */;
  %377 = reshape(%375, newshape=[]) /* ty=int8 */;
  %378 = reshape(%376, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
  %379 = @func_1406(%377, %378) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
  %380 = cast(meta[relay.Constant][30] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %381 = cast(%var_3129, dtype="float32") /* ty=Tensor[(168), float32] */;
  %382 = reshape(%380, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %383 = reshape(%381, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %384 = @func_590(%382, %383) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %385 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  %386 = %379.1;
  %387 = %384.1;
  (%385, %386, meta[relay.Constant][29] /* ty=int8 */, %var_3124, %387, meta[relay.Constant][30] /* ty=Tensor[(90), float32] */, %var_3129)
}

def @func_3019() -> (Tensor[(1, 11, 16), float32],) {
  %388 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  (%388,)
}

def @func_2406() -> (Tensor[(1, 11, 16), float32],) {
  %389 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  (%389,)
}

def @func_4203(%var_4189: Tensor[(5, 4, 14), bool], %var_4190: Tensor[(5, 4, 14), bool], %var_4194: Tensor[(5, 4, 14), bool]) -> (Tensor[(5, 4, 14), bool], Tensor[(5, 4, 14), uint64], Tensor[(5, 4, 14), float64]) {
  %390 = cast(%var_4190, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %391 = shape_of(%var_4189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%var_4189, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = cast(%var_4194, dtype="uint64") /* ty=Tensor[(5, 4, 14), uint64] */;
  %395 = shape_of(%var_4190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_4190, dtype="uint64") /* ty=Tensor[(5, 4, 14), uint64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %398 = cast(%var_4190, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %399 = logical_or(%392, %393) /* ty=Tensor[(5, 4, 14), bool] */;
  %400 = maximum(%396, %397) /* ty=Tensor[(5, 4, 14), uint64] */;
  %401 = rsqrt(%398) /* ty=Tensor[(5, 4, 14), float64] */;
  (%399, %400, %401)
}

def @func_4438() -> (Tensor[(1, 11, 16), float32],) {
  %402 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %403 = %402.2;
  (%403,)
}

def @func_6660(%var_6648: Tensor[(81), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32]) {
  %404 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %405 = cast(%var_6648, dtype="float32") /* ty=Tensor[(81), float32] */;
  %406 = reshape(%405, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
  %407 = @func_1990(%406) /* ty=(Tensor[(9, 3, 3), float32],) */;
  %408 = %404.2;
  %409 = %407.0;
  (%408, %409, %var_6648)
}

def @func_6922(%var_6915: Tensor[(3, 11, 16), float32]) -> (Tensor[(3, 11, 16), bool],) {
  %410 = @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %413 = cast(%var_6915, dtype="bool") /* ty=Tensor[(3, 11, 16), bool] */;
  %414 = equal(%412, %413) /* ty=Tensor[(3, 11, 16), bool] */;
  (%414,)
}

def @func_1038(%var_1033: Tensor[(14, 2, 13), float32], %var_1034: Tensor[(14, 2, 13), float32]) -> Tensor[(14, 2, 13), float32] {
  %415 = cast(%var_1034, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  %416 = shape_of(%var_1033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%var_1033, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%417, %418) /* ty=Tensor[(14, 2, 13), float32] */
}

def @func_96(%var_83: Tensor[(11, 14, 14), float64], %var_84: Tensor[(11, 14, 14), float64]) -> (Tensor[(11, 14, 14), bool],) {
  %419 = cast(%var_84, dtype="bool") /* ty=Tensor[(11, 14, 14), bool] */;
  %420 = shape_of(%var_83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%var_83, dtype="bool") /* ty=Tensor[(11, 14, 14), bool] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %423 = greater(%421, %422) /* ty=Tensor[(11, 14, 14), bool] */;
  (%423,)
}

def @func_9016() -> Tensor[(168), float32] {
  %424 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %424.1
}

def @func_4453() -> (Tensor[(11, 14, 14), bool],) {
  %425 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %426 = %425.0;
  (%426,)
}

def @func_590(%var_565: Tensor[(5, 2, 9), float32], %var_575: Tensor[(168), float32]) -> (Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) {
  %427 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 2, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %428 = shape_of(%var_565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_565, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %431 = cast(%var_575, dtype="float32") /* ty=Tensor[(168), float32] */;
  %432 = reshape(%431, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %433 = @func_172(%432) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
  %434 = floor_mod(%429, %430) /* ty=Tensor[(5, 2, 9), float32] */;
  %435 = %433.2;
  (%434, %435, %var_575)
}

def @func_2179(%var_2132: Tensor[(90), float32], %var_2150: Tensor[(81), float32]) -> (Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) {
  %436 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %437 = %436.0;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %439 = sin(%438) /* ty=Tensor[(8, 11, 16), float64] */;
  %440 = cast(%439, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %441 = cast(%var_2150, dtype="float32") /* ty=Tensor[(81), float32] */;
  %442 = reshape(%441, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
  %443 = @func_1990(%442) /* ty=(Tensor[(9, 3, 3), float32],) */;
  %444 = cast(%var_2132, dtype="float32") /* ty=Tensor[(90), float32] */;
  %445 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %446 = reshape(%444, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %447 = reshape(%445, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %448 = @func_590(%446, %447) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %449 = %448.1;
  %450 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 154), float64] */, dtype="float32") /* ty=Tensor[(14, 154), float32] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
  %452 = cast(%449, dtype="float32") /* ty=Tensor[(14, 154), float32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %454 = tan(%440) /* ty=Tensor[(8, 11, 16), float64] */;
  %455 = %443.0;
  %456 = floor_mod(%452, %453) /* ty=Tensor[(14, 154), float32] */;
  (%var_2132, meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, %454, %455, %var_2150, %456)
}

def @func_2783() -> (Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) {
  %457 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %459 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %460 = atanh(%458) /* ty=Tensor[(1, 11, 16), float32] */;
  %461 = %459.2;
  (%460, %461)
}

def @func_3223() -> (Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) {
  %462 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %463 = cast(meta[relay.Constant][34] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %464 = cast(meta[relay.Constant][34] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %465 = reshape(%463, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %466 = reshape(%464, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %467 = %462.0;
  %468 = @func_1038(%465, %466) /* ty=Tensor[(14, 2, 13), float32] */;
  (%467, %468, meta[relay.Constant][34] /* ty=Tensor[(364), float32] */)
}

def @func_2658() -> (Tensor[(1, 11, 16), float32],) {
  %469 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  (%469,)
}

def @func_6865() -> Tensor[(1, 11, 16), float32] {
  %470 = @func_5409() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %470.0
}

def @func_4336(%var_4326: Tensor[(60), float64], %var_4333: Tensor[(264), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %471 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %472 = cast(%var_4326, dtype="float64") /* ty=Tensor[(60), float64] */;
  %473 = cast(meta[relay.Constant][35] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %474 = cast(meta[relay.Constant][36] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %475 = reshape(%472, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %476 = reshape(%473, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %477 = reshape(%474, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %478 = @func_957(%475, %476, %477) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %479 = cast(%var_4333, dtype="float64") /* ty=Tensor[(264), float64] */;
  %480 = reshape(%479, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %481 = @func_3561(%480) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %482 = %471.2;
  %483 = %478.2;
  %484 = %481.0;
  (%482, %483, %var_4326, meta[relay.Constant][35] /* ty=Tensor[(90), float32] */, meta[relay.Constant][36] /* ty=Tensor[(168), float32] */, %484, %var_4333)
}

def @func_8466() -> (Tensor[(11, 14, 14), float32],) {
  %485 = @func_4703() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %486 = %485.0;
  %487 = cast(%486, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %488 = log2(%487) /* ty=Tensor[(11, 14, 14), float32] */;
  (%488,)
}

def @func_172(%var_162: Tensor[(2, 6, 14), float32]) -> (Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) {
  %489 = cast(%var_162, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
  %490 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 154), float64] */, dtype="float64") /* ty=Tensor[(14, 154), float64] */;
  %491 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 154), float64] */, dtype="float64") /* ty=Tensor[(14, 154), float64] */;
  %492 = reshape(%490, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %493 = reshape(%491, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %494 = @func_96(%492, %493) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %495 = atan(%489) /* ty=Tensor[(2, 6, 14), float32] */;
  %496 = %494.0;
  (%495, %496, meta[relay.Constant][37] /* ty=Tensor[(14, 154), float64] */)
}

def @func_3361() -> (Tensor[(11, 14, 14), bool],) {
  %497 = @func_2289() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
  %498 = %497.1;
  (%498,)
}

def @func_7938() -> (Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  %499 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %500 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %501 = %499.0;
  %502 = %500.0;
  (%501, %502)
}

def @func_8752() -> (Tensor[(168), float32], Tensor[(4, 4, 7), int8], Tensor[(224), float32], int8) {
  %503 = @func_6312() /* ty=(Tensor[(168), float32],) */;
  %504 = cast(meta[relay.Constant][38] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %505 = cast(meta[relay.Constant][39] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %506 = reshape(%504, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %507 = reshape(%505, newshape=[]) /* ty=int8 */;
  %508 = @func_2837(%506, %507) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */;
  %509 = %503.0;
  %510 = %508.1;
  (%509, %510, meta[relay.Constant][38] /* ty=Tensor[(224), float32] */, meta[relay.Constant][39] /* ty=int8 */)
}

def @func_5228(%var_5193: Tensor[(2, 11, 16), float32]) -> (Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  %511 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  %512 = cast(%511, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %513 = cast(%var_5193, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
  %514 = logical_or(%512, %513) /* ty=Tensor[(2, 11, 16), bool] */;
  %515 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
  %516 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  (%514, %515, %516)
}

def @func_2035() -> (Tensor[(1, 11, 16), float32],) {
  %517 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %518 = %517.1;
  (%518,)
}

def @func_5651(%var_5638: Tensor[(10, 11, 16), float32]) -> (Tensor[(10, 11, 16), bool],) {
  %519 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  %520 = cast(%519, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %521 = cast(%var_5638, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %522 = not_equal(%520, %521) /* ty=Tensor[(10, 11, 16), bool] */;
  (%522,)
}

def @func_8922() -> (Tensor[(144), float64], Tensor[(1, 11, 16), float32]) {
  %523 = @func_8031() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(1, 11, 16), float32]) */;
  %524 = %523.2;
  %525 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  (%524, %525)
}

def @func_9076(%var_9051: Tensor[(3, 11, 16), float32]) -> (Tensor[(11, 14, 14), bool], Tensor[(3, 11, 16), uint16]) {
  %526 = @func_9023() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %527 = @func_7938() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %528 = %527.0;
  %529 = cast(%528, dtype="uint16") /* ty=Tensor[(1, 11, 16), uint16] */;
  %530 = cast(%var_9051, dtype="uint16") /* ty=Tensor[(3, 11, 16), uint16] */;
  %531 = %526.0;
  %532 = bitwise_and(%529, %530) /* ty=Tensor[(3, 11, 16), uint16] */;
  (%531, %532)
}

def @func_2344() -> Tensor[(1, 11, 16), float32] {
  %533 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %533.0
}

def @func_2894() -> (Tensor[(8, 11, 16), bool], Tensor[(168), float32]) {
  %534 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %535 = %534.0;
  %536 = cast(%535, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %537 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
  %538 = @func_2289() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
  %539 = equal(%536, %537) /* ty=Tensor[(8, 11, 16), bool] */;
  %540 = %538.3;
  (%539, %540)
}

def @func_6722(%var_6699: Tensor[(525), float32], %var_6706: Tensor[(2156), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(18), float64], Tensor[(525), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), int16]) {
  %541 = @func_5590() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %542 = @func_5266() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %543 = cast(meta[relay.Constant][41] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %544 = cast(%var_6699, dtype="float32") /* ty=Tensor[(525), float32] */;
  %545 = reshape(%543, newshape=[3, 6]) /* ty=Tensor[(3, 6), float64] */;
  %546 = reshape(%544, newshape=[5, 7, 15]) /* ty=Tensor[(5, 7, 15), float32] */;
  %547 = @func_5804(%545, %546) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */;
  %548 = %547.2;
  %549 = cast(%var_6706, dtype="int32") /* ty=Tensor[(2156), int32] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(1), int32] */;
  %551 = cast(%548, dtype="int32") /* ty=Tensor[(2156), int32] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?), int32] */;
  %553 = right_shift(%551, %552) /* ty=Tensor[(2156), int32] */;
  %554 = cast(%553, dtype="int16") /* ty=Tensor[(2156), int16] */;
  %555 = shape_of(%var_6706, dtype="int32") /* ty=Tensor[(1), int32] */;
  %556 = cast(%var_6706, dtype="int16") /* ty=Tensor[(2156), int16] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?), int16] */;
  %558 = %541.0;
  %559 = %542.0;
  %560 = bitwise_xor(%556, %557) /* ty=Tensor[(2156), int16] */;
  (%558, meta[relay.Constant][41] /* ty=Tensor[(18), float64] */, %var_6699, %559, %560)
}

def @func_5867() -> Tensor[(1, 11, 16), float32] {
  %561 = @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %561.0
}

def @func_4703() -> (Tensor[(11, 14, 14), bool],) {
  %562 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %563 = %562.0;
  (%563,)
}

def @func_9023() -> (Tensor[(11, 14, 14), bool],) {
  %564 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %565 = %564.0;
  (%565,)
}

def @func_5618(%var_5595: Tensor[(13, 13, 6), uint8], %var_5596: Tensor[(13, 13, 6), uint8], %var_5604: Tensor[(90), float32], %var_5605: Tensor[(81), float32]) -> (Tensor[(13, 13, 6), bool], Tensor[(9, 3, 3), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(2, 11, 16), bool], Tensor[(352), float32]) {
  %566 = cast(%var_5596, dtype="bool") /* ty=Tensor[(13, 13, 6), bool] */;
  %567 = shape_of(%var_5595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_5595, dtype="bool") /* ty=Tensor[(13, 13, 6), bool] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %570 = cast(%var_5604, dtype="float32") /* ty=Tensor[(90), float32] */;
  %571 = cast(%var_5605, dtype="float32") /* ty=Tensor[(81), float32] */;
  %572 = reshape(%570, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %573 = reshape(%571, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %574 = @func_2179(%572, %573) /* ty=(Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) */;
  %575 = cast(meta[relay.Constant][42] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %576 = reshape(%575, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), float32] */;
  %577 = @func_5228(%576) /* ty=(Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %578 = not_equal(%568, %569) /* ty=Tensor[(13, 13, 6), bool] */;
  %579 = %574.3;
  %580 = %577.0;
  (%578, %579, %var_5604, %var_5605, %580, meta[relay.Constant][42] /* ty=Tensor[(352), float32] */)
}

def @main() -> Tensor[(1, 11, 16), float32] {
  %581 = @func_8806() /* ty=Tensor[(1, 11, 16), float32] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  acos(%582) /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_6821() -> (Tensor[(1, 11, 16), float32], Tensor[(168), float32]) {
  %583 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %584 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  %585 = %583.0;
  (%584, %585)
}

def @func_5483() -> (Tensor[(8, 11, 16), bool],) {
  %586 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %587 = %586.0;
  (%587,)
}

def @func_445(%var_399: Tensor[(3, 14, 11), float64]) -> (Tensor[(3, 14, 11), float64],) {
  %588 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 14, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 11), bool] */;
  %589 = shape_of(%var_399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_399, dtype="bool") /* ty=Tensor[(3, 14, 11), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = equal(%590, %591) /* ty=Tensor[(3, 14, 11), bool] */;
  %593 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 14, 11), bool] */, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %597 = minimum(%595, %596) /* ty=Tensor[(3, 14, 11), float32] */;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %599 = acosh(%598) /* ty=Tensor[(3, 14, 11), float64] */;
  (%599,)
}

def @func_6214(%var_6124: Tensor[(9, 2, 8), float64], %var_6134: Tensor[(9, 2, 8), float64], %var_6148: Tensor[(90), float32], %var_6153: Tensor[(2156), float64], %var_6193: Tensor[(18), float64]) -> (Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), float64], Tensor[(81), float32], Tensor[(9, 2, 8), float32], Tensor[(9, 2, 8), float64], Tensor[(90), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(168), float32]) {
  %600 = cast(%var_6148, dtype="float32") /* ty=Tensor[(90), float32] */;
  %601 = cast(meta[relay.Constant][45] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %602 = reshape(%600, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %603 = reshape(%601, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %604 = @func_590(%602, %603) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %605 = cast(%var_6153, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %606 = cast(meta[relay.Constant][46] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %607 = reshape(%605, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %608 = reshape(%606, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %609 = @func_3524(%607, %608) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(16, 2, 13), float64], Tensor[(416), float64], Tensor[(2156), float64], Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(81), uint8]) */;
  %610 = cast(%var_6134, dtype="uint16") /* ty=Tensor[(9, 2, 8), uint16] */;
  %611 = shape_of(%var_6124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_6124, dtype="uint16") /* ty=Tensor[(9, 2, 8), uint16] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %614 = add(%612, %613) /* ty=Tensor[(9, 2, 8), uint16] */;
  %615 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %616 = %615.0;
  %617 = cast(%var_6124, dtype="bool") /* ty=Tensor[(9, 2, 8), bool] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%616, dtype="bool") /* ty=Tensor[(9, 2, 8), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = equal(%619, %620) /* ty=Tensor[(9, 2, 8), bool] */;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %623 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%614, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %626 = cast(%var_6134, dtype="float64") /* ty=Tensor[(9, 2, 8), float64] */;
  %627 = cast(%var_6193, dtype="float64") /* ty=Tensor[(18), float64] */;
  %628 = cast(meta[relay.Constant][47] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %629 = %604.0;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %631 = reshape(%627, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %632 = reshape(%628, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
  %633 = reshape(%630, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %634 = @func_5012(%631, %632, %633) /* ty=(Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) */;
  %635 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %636 = %609.0;
  %637 = maximum(%624, %625) /* ty=Tensor[(9, 2, 8), float32] */;
  %638 = sin(%626) /* ty=Tensor[(9, 2, 8), float64] */;
  %639 = %634.5;
  %640 = %635.0;
  (%629, %var_6148, meta[relay.Constant][45] /* ty=Tensor[(168), float32] */, %636, %var_6153, meta[relay.Constant][46] /* ty=Tensor[(81), float32] */, %637, %638, %639, %var_6193, meta[relay.Constant][47] /* ty=Tensor[(252), float64] */, %640)
}

def @func_6575() -> (Tensor[(144), float64], Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(112), int8], Tensor[(6, 28), float32]) {
  %641 = @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */;
  %642 = cast(meta[relay.Constant][48] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %643 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 28), float32] */, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %644 = reshape(%642, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %645 = reshape(%643, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %646 = @func_3135(%644, %645) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) */;
  %647 = %641.1;
  %648 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
  %649 = %646.6;
  (%647, %648, %649, meta[relay.Constant][48] /* ty=Tensor[(112), int8] */, meta[relay.Constant][49] /* ty=Tensor[(6, 28), float32] */)
}

def @func_7254(%var_7249: Tensor[(1, 3, 16), bool], %var_7250: Tensor[(7, 3, 16), bool]) -> (Tensor[(7, 3, 16), bool],) {
  %650 = cast(%var_7249, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
  %651 = cast(%var_7250, dtype="bool") /* ty=Tensor[(7, 3, 16), bool] */;
  %652 = logical_or(%650, %651) /* ty=Tensor[(7, 3, 16), bool] */;
  (%652,)
}

def @func_7866(%var_7815: Tensor[(90), float32], %var_7818: Tensor[(144), float64], %var_7819: Tensor[(1, 2156), float64], %var_7820: Tensor[(18), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(168), float32], Tensor[(144), float64], Tensor[(1, 2156), float64], Tensor[(18), float64], Tensor[(15, 10, 8), float64], Tensor[(1200, 1), int8], Tensor[(90), float32], Tensor[(1, 11, 16), float32]) {
  %653 = @func_7419() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) */;
  %654 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %655 = cast(%var_7815, dtype="float32") /* ty=Tensor[(90), float32] */;
  %656 = reshape(%654, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %657 = reshape(%655, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %658 = @func_3676(%656, %657) /* ty=(Tensor[(168), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(15, 6), float32]) */;
  %659 = cast(%var_7818, dtype="float64") /* ty=Tensor[(144), float64] */;
  %660 = cast(%var_7818, dtype="float64") /* ty=Tensor[(144), float64] */;
  %661 = %658.1;
  %662 = cast(%661, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %663 = cast(%var_7819, dtype="float64") /* ty=Tensor[(1, 2156), float64] */;
  %664 = cast(%var_7820, dtype="float64") /* ty=Tensor[(18), float64] */;
  %665 = reshape(%659, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %666 = reshape(%660, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %667 = reshape(%662, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %668 = reshape(%663, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %669 = reshape(%664, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %670 = @func_6214(%665, %666, %667, %668, %669) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), float64], Tensor[(81), float32], Tensor[(9, 2, 8), float32], Tensor[(9, 2, 8), float64], Tensor[(90), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(168), float32]) */;
  %671 = cast(meta[relay.Constant][51] /* ty=Tensor[(1200, 1), int8] */, dtype="int8") /* ty=Tensor[(1200, 1), int8] */;
  %672 = cast(meta[relay.Constant][51] /* ty=Tensor[(1200, 1), int8] */, dtype="int8") /* ty=Tensor[(1200, 1), int8] */;
  %673 = reshape(%671, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), int8] */;
  %674 = reshape(%672, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), int8] */;
  %675 = @func_4829(%673, %674) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 10, 8), float64]) */;
  %676 = cast(%var_7815, dtype="float32") /* ty=Tensor[(90), float32] */;
  %677 = @func_5452() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %678 = %653.0;
  %679 = %670.2;
  %680 = %675.1;
  %681 = asinh(%676) /* ty=Tensor[(90), float32] */;
  %682 = %677.0;
  (%678, %661, meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, %679, %var_7818, %var_7819, %var_7820, %680, meta[relay.Constant][51] /* ty=Tensor[(1200, 1), int8] */, %681, %682)
}

def @func_8243(%var_8211: Tensor[(1760), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(1760), float32], Tensor[(168), float32], Tensor[(10, 11, 16), float64]) {
  %683 = @func_7714() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %684 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %685 = cast(%var_8211, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %686 = reshape(%685, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float32] */;
  %687 = @func_5651(%686) /* ty=(Tensor[(10, 11, 16), bool],) */;
  %688 = %687.0;
  %689 = cast(%688, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %690 = sin(%689) /* ty=Tensor[(10, 11, 16), float32] */;
  %691 = cast(%690, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %692 = %683.0;
  %693 = %684.0;
  %694 = atan(%691) /* ty=Tensor[(10, 11, 16), float64] */;
  (%692, %var_8211, %693, %694)
}

def @func_8194() -> (Tensor[(1, 11, 16), float32],) {
  %695 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %696 = %695.0;
  (%696,)
}

def @func_1104(%var_1043: Tensor[(13, 13, 11), float32], %var_1044: Tensor[(13, 13, 11), float32], %var_1066: Tensor[(13, 13, 11), float32], %var_1097: Tensor[(15, 4), float64], %var_1099: Tensor[(168), float32]) -> (Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), float32], Tensor[(15, 6), float32], Tensor[(15, 4), float64], Tensor[(90), float32], Tensor[(168), float32]) {
  %697 = cast(%var_1044, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %698 = shape_of(%var_1043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%var_1043, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %701 = cast(%var_1066, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %702 = shape_of(%var_1043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%var_1043, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %705 = cast(%var_1043, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
  %706 = shape_of(%var_1044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%var_1044, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %709 = divide(%707, %708) /* ty=Tensor[(13, 13, 11), float32] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
  %711 = cast(%var_1097, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %712 = cast(meta[relay.Constant][52] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %713 = cast(%var_1099, dtype="float32") /* ty=Tensor[(168), float32] */;
  %714 = reshape(%711, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %715 = reshape(%712, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %716 = reshape(%713, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %717 = @func_957(%714, %715, %716) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %718 = less_equal(%699, %700) /* ty=Tensor[(13, 13, 11), bool] */;
  %719 = equal(%703, %704) /* ty=Tensor[(13, 13, 11), bool] */;
  %720 = acosh(%710) /* ty=Tensor[(13, 13, 11), float32] */;
  %721 = %717.2;
  (%718, %719, %720, %721, %var_1097, meta[relay.Constant][52] /* ty=Tensor[(90), float32] */, %var_1099)
}

def @func_8524(%var_8490: Tensor[(525), float32], %var_8491: Tensor[(2156), float64], %var_8499: Tensor[(81), float32], %var_8514: Tensor[(42), float32], %var_8515: Tensor[(84), float32], %var_8519: Tensor[(56, 2), uint16]) -> (Tensor[(1, 11, 16), float32], Tensor[(525), float32], Tensor[(525), float32], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(3, 14, 2), float32], Tensor[(42), float32], Tensor[(84), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool], Tensor[(56, 2), uint16], Tensor[(81), float32]) {
  %722 = cast(%var_8490, dtype="float32") /* ty=Tensor[(525), float32] */;
  %723 = cast(%var_8491, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %724 = reshape(%722, newshape=[525]) /* ty=Tensor[(525), float32] */;
  %725 = reshape(%723, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %726 = @func_6722(%724, %725) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(18), float64], Tensor[(525), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), int16]) */;
  %727 = @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */;
  %728 = cast(%var_8499, dtype="float32") /* ty=Tensor[(81), float32] */;
  %729 = reshape(%728, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %730 = @func_2731(%729) /* ty=(Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
  %731 = cast(%var_8514, dtype="float32") /* ty=Tensor[(42), float32] */;
  %732 = cast(%var_8515, dtype="float32") /* ty=Tensor[(84), float32] */;
  %733 = cast(meta[relay.Constant][53] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %734 = reshape(%731, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), float32] */;
  %735 = reshape(%732, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), float32] */;
  %736 = reshape(%733, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %737 = @func_1801(%734, %735, %736) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(364), float32], Tensor[(416), float64], Tensor[(2156), float64]) */;
  %738 = cast(%var_8519, dtype="uint16") /* ty=Tensor[(56, 2), uint16] */;
  %739 = reshape(%738, newshape=[8, 14, 1]) /* ty=Tensor[(8, 14, 1), uint16] */;
  %740 = @func_6756(%739) /* ty=(Tensor[(8, 14, 1), bool], Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32]) */;
  %741 = cast(%var_8499, dtype="float32") /* ty=Tensor[(81), float32] */;
  %742 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  %743 = %726.2;
  %744 = %727.1;
  %745 = %730.1;
  %746 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  %747 = %737.0;
  %748 = %740.1;
  %749 = tan(%741) /* ty=Tensor[(81), float32] */;
  (%742, %743, %var_8490, %var_8491, %744, %745, %746, %747, %var_8514, %var_8515, meta[relay.Constant][53] /* ty=Tensor[(416), float64] */, %748, %var_8519, %749)
}

def @func_4362() -> Tensor[(8, 11, 16), bool] {
  %750 = @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */;
  %750.0
}

def @func_3601() -> (Tensor[(168), float32],) {
  %751 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %752 = %751.1;
  (%752,)
}

def @func_8565() -> (Tensor[(1, 11, 16), float64],) {
  %753 = @func_8356() /* ty=Tensor[(1, 11, 16), float64] */;
  (%753,)
}

def @func_5065(%var_5043: Tensor[(8, 11, 16), float32], %var_5059: Tensor[(2, 56), int8]) -> (Tensor[(8, 11, 16), bool], Tensor[(81), float32], Tensor[(81), float32], Tensor[(2, 56), int8]) {
  %754 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %755 = %754.1;
  %756 = cast(%755, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %757 = cast(%var_5043, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
  %758 = cast(meta[relay.Constant][54] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %759 = cast(%var_5059, dtype="int8") /* ty=Tensor[(2, 56), int8] */;
  %760 = reshape(%758, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %761 = reshape(%759, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %762 = @func_2946(%760, %761) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */;
  %763 = logical_and(%756, %757) /* ty=Tensor[(8, 11, 16), bool] */;
  %764 = %762.2;
  (%763, %764, meta[relay.Constant][54] /* ty=Tensor[(81), float32] */, %var_5059)
}

def @func_4829(%var_4764: Tensor[(15, 10, 8), int8], %var_4765: Tensor[(15, 10, 8), int8]) -> (Tensor[(1, 11, 16), float32], Tensor[(15, 10, 8), float64]) {
  %765 = cast(%var_4765, dtype="int8") /* ty=Tensor[(15, 10, 8), int8] */;
  %766 = shape_of(%var_4764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%var_4764, dtype="int8") /* ty=Tensor[(15, 10, 8), int8] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %769 = bitwise_or(%767, %768) /* ty=Tensor[(15, 10, 8), int8] */;
  %770 = cast(%var_4765, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %774 = floor_divide(%772, %773) /* ty=Tensor[(15, 10, 8), float64] */;
  %775 = cast(%774, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %776 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%769, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %779 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  %780 = subtract(%777, %778) /* ty=Tensor[(15, 10, 8), float64] */;
  (%779, %780)
}

def @func_5978(%var_5971: Tensor[(81), float32]) -> (Tensor[(11, 14, 14), int32], Tensor[(112), int8], Tensor[(81), float32], Tensor[(112), int8]) {
  %781 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %782 = %781.0;
  %783 = cast(%782, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %784 = cosh(%783) /* ty=Tensor[(11, 14, 14), float32] */;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %786 = acosh(%785) /* ty=Tensor[(11, 14, 14), float32] */;
  %787 = cast(%786, dtype="int32") /* ty=Tensor[(11, 14, 14), int32] */;
  %788 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%784, dtype="int32") /* ty=Tensor[(11, 14, 14), int32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %791 = cast(%var_5971, dtype="float32") /* ty=Tensor[(81), float32] */;
  %792 = cast(meta[relay.Constant][55] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %793 = reshape(%791, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %794 = reshape(%792, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %795 = @func_2946(%793, %794) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */;
  %796 = subtract(%789, %790) /* ty=Tensor[(11, 14, 14), int32] */;
  %797 = %795.6;
  (%796, %797, %var_5971, meta[relay.Constant][55] /* ty=Tensor[(112), int8] */)
}

def @func_3945() -> (Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  %798 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %799 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %800 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %801 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %802 = %798.2;
  %803 = %799.0;
  %804 = %800.0;
  %805 = %801.0;
  (%802, %803, %804, %805)
}

def @func_7994() -> (Tensor[(168), float32],) {
  %806 = @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */;
  %807 = %806.0;
  (%807,)
}

def @func_4740(%var_4733: Tensor[(12, 15, 8), int8], %var_4734: Tensor[(12, 15, 8), int8]) -> (Tensor[(12, 15, 8), int8],) {
  %808 = cast(%var_4734, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %809 = shape_of(%var_4733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%var_4733, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %812 = left_shift(%810, %811) /* ty=Tensor[(12, 15, 8), int8] */;
  (%812,)
}

def @func_1990(%var_1980: Tensor[(9, 3, 3), float32]) -> (Tensor[(9, 3, 3), float32],) {
  %813 = cast(%var_1980, dtype="float32") /* ty=Tensor[(9, 3, 3), float32] */;
  %814 = atanh(%813) /* ty=Tensor[(9, 3, 3), float32] */;
  (%814,)
}

def @func_5996() -> Tensor[(1, 11, 16), float32] {
  %815 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %815.0
}

def @func_7038(%var_7026: Tensor[(2156), bool]) -> (Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(11, 14, 14), float64], Tensor[(168), float32], Tensor[(364), float32], Tensor[(2156), bool], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32]) {
  %816 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %817 = cast(meta[relay.Constant][56] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %818 = cast(meta[relay.Constant][57] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %819 = cast(%var_7026, dtype="bool") /* ty=Tensor[(2156), bool] */;
  %820 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 90), float32] */, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %821 = reshape(%817, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %822 = reshape(%818, newshape=[364, 1]) /* ty=Tensor[(364, 1), float32] */;
  %823 = reshape(%819, newshape=[2156]) /* ty=Tensor[(2156), bool] */;
  %824 = reshape(%820, newshape=[3, 30]) /* ty=Tensor[(3, 30), float32] */;
  %825 = @func_2521(%821, %822, %823, %824) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32], Tensor[(2, 6, 14), uint8], Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), float64], Tensor[(364, 1), float32], Tensor[(2156), bool], Tensor[(3, 30), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool]) */;
  %826 = %816.0;
  %827 = @func_4362() /* ty=Tensor[(8, 11, 16), bool] */;
  %828 = %825.6;
  %829 = @func_5867() /* ty=Tensor[(1, 11, 16), float32] */;
  (%826, %827, %828, meta[relay.Constant][56] /* ty=Tensor[(168), float32] */, meta[relay.Constant][57] /* ty=Tensor[(364), float32] */, %var_7026, meta[relay.Constant][58] /* ty=Tensor[(1, 90), float32] */, %829)
}

def @func_2377() -> (Tensor[(1, 11, 16), float32],) {
  %830 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %831 = %830.0;
  (%831,)
}

def @func_2731(%var_2699: Tensor[(81), float32]) -> (Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) {
  %832 = cast(%var_2699, dtype="float32") /* ty=Tensor[(81), float32] */;
  %833 = reshape(%832, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
  %834 = @func_1990(%833) /* ty=(Tensor[(9, 3, 3), float32],) */;
  %835 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %837 = %834.0;
  %838 = asin(%836) /* ty=Tensor[(1, 11, 16), float32] */;
  (%837, %var_2699, %838)
}

def @func_4917(%var_4890: Tensor[(112, 1), int8], %var_4891: Tensor[(168), float32]) -> (Tensor[(5, 11, 16), bool], Tensor[(112), int8], Tensor[(112, 1), int8], Tensor[(168), float32], Tensor[(3, 14, 11), float64], Tensor[(462), float64]) {
  %839 = @func_2658() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %840 = %839.0;
  %841 = cast(%840, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %842 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(5, 11, 16), bool] */;
  %843 = cast(%var_4890, dtype="int8") /* ty=Tensor[(112, 1), int8] */;
  %844 = cast(%var_4891, dtype="float32") /* ty=Tensor[(168), float32] */;
  %845 = reshape(%843, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %846 = reshape(%844, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %847 = @func_3135(%845, %846) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) */;
  %848 = cast(meta[relay.Constant][60] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %849 = reshape(%848, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %850 = @func_445(%849) /* ty=(Tensor[(3, 14, 11), float64],) */;
  %851 = not_equal(%841, %842) /* ty=Tensor[(5, 11, 16), bool] */;
  %852 = %847.3;
  %853 = %850.0;
  (%851, %852, %var_4890, %var_4891, %853, meta[relay.Constant][60] /* ty=Tensor[(462), float64] */)
}

def @func_1288(%var_1277: Tensor[(2, 1, 9), float64], %var_1278: Tensor[(2, 14, 9), float64]) -> (Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) {
  %854 = cast(%var_1277, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %855 = cast(%var_1278, dtype="bool") /* ty=Tensor[(2, 14, 9), bool] */;
  %856 = cast(%var_1278, dtype="float32") /* ty=Tensor[(2, 14, 9), float32] */;
  %857 = cast(%var_1278, dtype="float32") /* ty=Tensor[(2, 14, 9), float32] */;
  %858 = less(%854, %855) /* ty=Tensor[(2, 14, 9), bool] */;
  %859 = cos(%856) /* ty=Tensor[(2, 14, 9), float32] */;
  %860 = asinh(%857) /* ty=Tensor[(2, 14, 9), float32] */;
  (%858, %859, %860)
}

def @func_2289() -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) {
  %861 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %862 = cast(meta[relay.Constant][61] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %863 = reshape(%862, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %864 = @func_172(%863) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
  %865 = cast(meta[relay.Constant][62] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %866 = cast(meta[relay.Constant][63] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %867 = reshape(%865, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %868 = reshape(%866, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %869 = @func_2179(%867, %868) /* ty=(Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) */;
  %870 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %871 = %861.1;
  %872 = %864.1;
  %873 = %869.1;
  %874 = %870.0;
  (%871, %872, meta[relay.Constant][61] /* ty=Tensor[(168), float32] */, %873, meta[relay.Constant][62] /* ty=Tensor[(90), float32] */, meta[relay.Constant][63] /* ty=Tensor[(81), float32] */, %874)
}

def @func_2521(%var_2471: Tensor[(168), float32], %var_2499: Tensor[(364, 1), float32], %var_2500: Tensor[(2156), bool], %var_2501: Tensor[(3, 30), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32], Tensor[(2, 6, 14), uint8], Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), float64], Tensor[(364, 1), float32], Tensor[(2156), bool], Tensor[(3, 30), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool]) {
  %875 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %876 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %877 = cast(%var_2471, dtype="float32") /* ty=Tensor[(168), float32] */;
  %878 = reshape(%877, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %879 = @func_172(%878) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
  %880 = %879.0;
  %881 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 6, 14), float32] */, dtype="uint8") /* ty=Tensor[(2, 6, 14), uint8] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="uint8") /* ty=Tensor[(2, 6, 14), uint8] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %885 = @func_2289() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
  %886 = cast(%var_2499, dtype="float32") /* ty=Tensor[(364, 1), float32] */;
  %887 = cast(%var_2500, dtype="bool") /* ty=Tensor[(2156), bool] */;
  %888 = cast(%var_2501, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
  %889 = subtract(%883, %884) /* ty=Tensor[(2, 6, 14), uint8] */;
  %890 = cast(%889, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
  %891 = cast(meta[relay.Constant][65] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %892 = reshape(%886, newshape=[7, 52]) /* ty=Tensor[(7, 52), float32] */;
  %893 = reshape(%887, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), bool] */;
  %894 = reshape(%888, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %895 = reshape(%890, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %896 = reshape(%891, newshape=[416]) /* ty=Tensor[(416), float64] */;
  %897 = @func_1575(%892, %893, %894, %895, %896) /* ty=(Tensor[(6, 13, 5), uint8], Tensor[(11, 14, 14), bool], Tensor[(7, 52), float64], Tensor[(11, 14, 14), float64], Tensor[(2, 15, 2), float64], Tensor[(1, 60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(2156), float64], Tensor[(416), float64], Tensor[(14, 2, 13), float32], Tensor[(11, 14, 14), float32], Tensor[(14, 154), float64], Tensor[(11, 14, 14), bool], Tensor[(5, 2, 9), float32]) */;
  %898 = cast(meta[relay.Constant][65] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
  %899 = cast(%var_2500, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %900 = reshape(%898, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
  %901 = reshape(%899, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %902 = @func_1333(%900, %901) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
  %903 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  %904 = %875.0;
  %905 = %876.1;
  %906 = %885.0;
  %907 = %897.3;
  %908 = %902.1;
  (%903, %var_2471, %904, %905, %889, %906, %907, %var_2499, %var_2500, %var_2501, meta[relay.Constant][65] /* ty=Tensor[(416), float64] */, %908)
}

def @func_5527(%var_5509: Tensor[(264), float64]) -> (Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(8, 11, 16), bool]) {
  %909 = cast(%var_5509, dtype="float64") /* ty=Tensor[(264), float64] */;
  %910 = reshape(%909, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
  %911 = @func_3561(%910) /* ty=(Tensor[(6, 4, 11), float64],) */;
  %912 = @func_5483() /* ty=(Tensor[(8, 11, 16), bool],) */;
  %913 = @func_4362() /* ty=Tensor[(8, 11, 16), bool] */;
  %914 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  %915 = %911.0;
  %916 = %912.0;
  (%913, %914, %915, %var_5509, %916)
}

def @func_6756(%var_6736: Tensor[(8, 14, 1), uint16]) -> (Tensor[(8, 14, 1), bool], Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32]) {
  %917 = cast(meta[relay.Constant][66] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %918 = cast(%var_6736, dtype="bool") /* ty=Tensor[(8, 14, 1), bool] */;
  %919 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %920 = greater(%917, %918) /* ty=Tensor[(8, 14, 1), bool] */;
  %921 = %919.0;
  %922 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  (%920, %921, %922)
}

def @func_7280() -> (Tensor[(168), float32],) {
  %923 = @func_3773() /* ty=Tensor[(168), float32] */;
  (%923,)
}

def @func_8806() -> Tensor[(1, 11, 16), float32] {
  %924 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %924.0
}

def @func_2837(%var_2805: Tensor[(14, 16, 1), float32], %var_2821: int8) -> (Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) {
  %925 = cast(%var_2805, dtype="bool") /* ty=Tensor[(14, 16, 1), bool] */;
  %926 = cast(meta[relay.Constant][67] /* ty=Tensor[(14, 16, 10), float32] */, dtype="bool") /* ty=Tensor[(14, 16, 10), bool] */;
  %927 = greater(%925, %926) /* ty=Tensor[(14, 16, 10), bool] */;
  %928 = cast(%927, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %929 = cast(%var_2821, dtype="int8") /* ty=int8 */;
  %930 = cast(meta[relay.Constant][68] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %931 = reshape(%929, newshape=[]) /* ty=int8 */;
  %932 = reshape(%930, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
  %933 = @func_1406(%931, %932) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
  %934 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %935 = sigmoid(%928) /* ty=Tensor[(14, 16, 10), float32] */;
  %936 = %933.0;
  %937 = %934.0;
  (%935, %936, %var_2821, meta[relay.Constant][68] /* ty=Tensor[(112), int8] */, %937)
}

def @func_5910() -> Tensor[(8, 11, 16), bool] {
  %938 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %938.1
}

def @func_1801(%var_1779: Tensor[(3, 14, 1), float32], %var_1780: Tensor[(3, 14, 2), float32], %var_1790: Tensor[(416), float64]) -> (Tensor[(3, 14, 2), float32], Tensor[(364), float32], Tensor[(416), float64], Tensor[(2156), float64]) {
  %939 = cast(%var_1779, dtype="float32") /* ty=Tensor[(3, 14, 1), float32] */;
  %940 = cast(%var_1780, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
  %941 = cast(%var_1790, dtype="float64") /* ty=Tensor[(416), float64] */;
  %942 = cast(meta[relay.Constant][69] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %943 = reshape(%941, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
  %944 = reshape(%942, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %945 = @func_1333(%943, %944) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
  %946 = floor_divide(%939, %940) /* ty=Tensor[(3, 14, 2), float32] */;
  %947 = %945.4;
  (%946, %947, %var_1790, meta[relay.Constant][69] /* ty=Tensor[(2156), float64] */)
}

def @func_5266() -> (Tensor[(1, 11, 16), float32],) {
  %948 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %949 = %948.0;
  (%949,)
}

def @func_7667() -> (Tensor[(168), float32],) {
  %950 = @func_3773() /* ty=Tensor[(168), float32] */;
  (%950,)
}

def @func_8356() -> Tensor[(1, 11, 16), float64] {
  %951 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %952 = %951.1;
  %953 = cast(%952, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  exp(%953) /* ty=Tensor[(1, 11, 16), float64] */
}

def @func_8304(%var_8274: Tensor[(60), float64], %var_8292: Tensor[(18), float64]) -> (Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32], Tensor[(60), float64], Tensor[(264), float64], Tensor[(6, 4, 11), float64], Tensor[(5, 7, 15), int8], Tensor[(18), float64], Tensor[(525), float32]) {
  %954 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %955 = cast(%var_8274, dtype="float64") /* ty=Tensor[(60), float64] */;
  %956 = cast(meta[relay.Constant][70] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %957 = reshape(%955, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %958 = reshape(%956, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %959 = @func_4336(%957, %958) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %960 = cast(%var_8274, dtype="float64") /* ty=Tensor[(60), float64] */;
  %961 = cast(meta[relay.Constant][70] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %962 = reshape(%960, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %963 = reshape(%961, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %964 = @func_4336(%962, %963) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %965 = cast(%var_8292, dtype="float64") /* ty=Tensor[(18), float64] */;
  %966 = cast(meta[relay.Constant][71] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %967 = reshape(%965, newshape=[3, 6]) /* ty=Tensor[(3, 6), float64] */;
  %968 = reshape(%966, newshape=[5, 7, 15]) /* ty=Tensor[(5, 7, 15), float32] */;
  %969 = @func_5804(%967, %968) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */;
  %970 = %954.0;
  %971 = %959.0;
  %972 = %964.5;
  %973 = %969.9;
  (%970, %971, %var_8274, meta[relay.Constant][70] /* ty=Tensor[(264), float64] */, %972, %973, %var_8292, meta[relay.Constant][71] /* ty=Tensor[(525), float32] */)
}

def @func_6625(%var_6619: int16) -> (Tensor[(2, 12, 6), bool],) {
  %974 = cast(%var_6619, dtype="bool") /* ty=bool */;
  %975 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 12, 6), int16] */, dtype="bool") /* ty=Tensor[(2, 12, 6), bool] */;
  %976 = less_equal(%974, %975) /* ty=Tensor[(2, 12, 6), bool] */;
  (%976,)
}

def @func_1333(%var_1302: Tensor[(16, 2, 13), float64], %var_1308: Tensor[(2156), float64]) -> (Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) {
  %977 = cast(%var_1302, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
  %978 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %979 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %980 = reshape(%978, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %981 = reshape(%979, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %982 = @func_96(%980, %981) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %983 = cast(meta[relay.Constant][73] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %984 = cast(meta[relay.Constant][73] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %985 = reshape(%983, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %986 = reshape(%984, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %987 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %988 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %989 = reshape(%987, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %990 = reshape(%988, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %991 = @func_96(%989, %990) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %992 = %991.0;
  %993 = cast(%992, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %994 = sin(%977) /* ty=Tensor[(16, 2, 13), float64] */;
  %995 = %982.0;
  %996 = @func_1038(%985, %986) /* ty=Tensor[(14, 2, 13), float32] */;
  %997 = exp(%993) /* ty=Tensor[(11, 14, 14), float64] */;
  (%994, %995, %var_1308, %996, meta[relay.Constant][73] /* ty=Tensor[(364), float32] */, %997)
}

def @func_4072(%var_4063: Tensor[(2156), float64], %var_4070: int8) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 16, 10), float32], Tensor[(1, 224), float32], int8) {
  %998 = @func_2658() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %999 = cast(%var_4063, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %1000 = cast(%var_4063, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %1001 = reshape(%999, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %1002 = reshape(%1000, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %1003 = @func_96(%1001, %1002) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %1004 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 224), float32] */, dtype="float32") /* ty=Tensor[(1, 224), float32] */;
  %1005 = cast(%var_4070, dtype="int8") /* ty=int8 */;
  %1006 = reshape(%1004, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %1007 = reshape(%1005, newshape=[]) /* ty=int8 */;
  %1008 = @func_2837(%1006, %1007) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */;
  %1009 = %998.0;
  %1010 = %1003.0;
  %1011 = %1008.0;
  (%1009, %1010, %var_4063, %1011, meta[relay.Constant][74] /* ty=Tensor[(1, 224), float32] */, %var_4070)
}

def @func_8331() -> (Tensor[(1, 11, 16), float64],) {
  %1012 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %1014 = log(%1013) /* ty=Tensor[(1, 11, 16), float64] */;
  (%1014,)
}

def @func_2946(%var_2913: Tensor[(81), float32], %var_2938: Tensor[(112), int8]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) {
  %1015 = cast(%var_2913, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1016 = reshape(%1015, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
  %1017 = @func_1990(%1016) /* ty=(Tensor[(9, 3, 3), float32],) */;
  %1018 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %1019 = cast(meta[relay.Constant][75] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %1020 = cast(%var_2938, dtype="int8") /* ty=Tensor[(112), int8] */;
  %1021 = reshape(%1019, newshape=[]) /* ty=int8 */;
  %1022 = reshape(%1020, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
  %1023 = @func_1406(%1021, %1022) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
  %1024 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  %1025 = %1017.0;
  %1026 = %1018.0;
  %1027 = %1023.1;
  (%1024, %1025, %var_2913, %1026, %1027, meta[relay.Constant][75] /* ty=int8 */, %var_2938)
}

def @func_8899() -> (Tensor[(1, 11, 16), float32], Tensor[(14, 2, 13), float32]) {
  %1028 = @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */;
  %1029 = @func_5867() /* ty=Tensor[(1, 11, 16), float32] */;
  %1030 = %1028.1;
  (%1029, %1030)
}

def @func_5012(%var_4998: Tensor[(18), float64], %var_4999: Tensor[(3, 84), float64], %var_5005: Tensor[(90), float32]) -> (Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) {
  %1031 = cast(%var_4998, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1032 = cast(%var_4999, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %1033 = reshape(%1031, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float64] */;
  %1034 = reshape(%1032, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), float64] */;
  %1035 = @func_1288(%1033, %1034) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */;
  %1036 = cast(%var_5005, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1037 = @func_3773() /* ty=Tensor[(168), float32] */;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1039 = reshape(%1036, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %1040 = reshape(%1038, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1041 = @func_590(%1039, %1040) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %1042 = cast(%var_4998, dtype="float64") /* ty=Tensor[(18), float64] */;
  %1043 = cast(%var_4999, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %1044 = reshape(%1042, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float64] */;
  %1045 = reshape(%1043, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), float64] */;
  %1046 = @func_1288(%1044, %1045) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */;
  %1047 = %1035.0;
  %1048 = %1041.0;
  %1049 = %1046.2;
  (%1037, %1047, %var_4998, %var_4999, %1048, %var_5005, %1049)
}

def @func_5879() -> (Tensor[(11, 14, 14), bool], Tensor[(168), float32]) {
  %1050 = @func_4703() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %1051 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %1052 = %1050.0;
  %1053 = %1051.0;
  (%1052, %1053)
}

def @func_7714() -> (Tensor[(1, 11, 16), float32],) {
  %1054 = @func_6379() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64]) */;
  %1055 = %1054.0;
  (%1055,)
}

def @func_4622() -> Tensor[(1, 11, 16), float32] {
  @func_4024() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_3773() -> Tensor[(168), float32] {
  %1056 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %1056.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2526(%var_2522: Tensor[(168), float32], %var_2523: Tensor[(364, 1), float32], %var_2524: Tensor[(2156), bool], %var_2525: Tensor[(3, 30), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32], Tensor[(2, 6, 14), uint8], Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), float64], Tensor[(364, 1), float32], Tensor[(2156), bool], Tensor[(3, 30), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool]) {
  %34 = fn (%var_2471: Tensor[(168), float32], %var_2499: Tensor[(364, 1), float32], %var_2500: Tensor[(2156), bool], %var_2501: Tensor[(3, 30), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32], Tensor[(2, 6, 14), uint8], Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), float64], Tensor[(364, 1), float32], Tensor[(2156), bool], Tensor[(3, 30), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool]) {
    %0 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
    %1 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %2 = cast(%var_2471, dtype="float32") /* ty=Tensor[(168), float32] */;
    %3 = reshape(%2, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
    %4 = @func_172(%3) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
    %5 = %4.0;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 6, 14), float32] */, dtype="uint8") /* ty=Tensor[(2, 6, 14), uint8] */;
    %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(%5, dtype="uint8") /* ty=Tensor[(2, 6, 14), uint8] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %10 = @func_2289() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
    %11 = cast(%var_2499, dtype="float32") /* ty=Tensor[(364, 1), float32] */;
    %12 = cast(%var_2500, dtype="bool") /* ty=Tensor[(2156), bool] */;
    %13 = cast(%var_2501, dtype="float32") /* ty=Tensor[(3, 30), float32] */;
    %14 = subtract(%8, %9) /* ty=Tensor[(2, 6, 14), uint8] */;
    %15 = cast(%14, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
    %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %17 = reshape(%11, newshape=[7, 52]) /* ty=Tensor[(7, 52), float32] */;
    %18 = reshape(%12, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), bool] */;
    %19 = reshape(%13, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %20 = reshape(%15, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %21 = reshape(%16, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %22 = @func_1575(%17, %18, %19, %20, %21) /* ty=(Tensor[(6, 13, 5), uint8], Tensor[(11, 14, 14), bool], Tensor[(7, 52), float64], Tensor[(11, 14, 14), float64], Tensor[(2, 15, 2), float64], Tensor[(1, 60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(2156), float64], Tensor[(416), float64], Tensor[(14, 2, 13), float32], Tensor[(11, 14, 14), float32], Tensor[(14, 154), float64], Tensor[(11, 14, 14), bool], Tensor[(5, 2, 9), float32]) */;
    %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %24 = cast(%var_2500, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %25 = reshape(%23, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
    %26 = reshape(%24, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
    %27 = @func_1333(%25, %26) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
    %28 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    %29 = %0.0;
    %30 = %1.1;
    %31 = %10.0;
    %32 = %22.3;
    %33 = %27.1;
    (%28, %var_2471, %29, %30, %14, %31, %32, %var_2499, %var_2500, %var_2501, meta[relay.Constant][1] /* ty=Tensor[(416), float64] */, %33)
  };
  %34(%var_2522, %var_2523, %var_2524, %var_2525) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32], Tensor[(2, 6, 14), uint8], Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), float64], Tensor[(364, 1), float32], Tensor[(2156), bool], Tensor[(3, 30), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool]) */
}

def @func_8195() -> (Tensor[(1, 11, 16), float32],) {
  %37 = fn () -> (Tensor[(1, 11, 16), float32],) {
    %35 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %36 = %35.0;
    (%36,)
  };
  %37() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_3563(%var_3562: Tensor[(6, 4, 11), float64]) -> (Tensor[(6, 4, 11), float64],) {
  %40 = fn (%var_3558: Tensor[(6, 4, 11), float64]) -> (Tensor[(6, 4, 11), float64],) {
    %38 = cast(%var_3558, dtype="float64") /* ty=Tensor[(6, 4, 11), float64] */;
    %39 = log(%38) /* ty=Tensor[(6, 4, 11), float64] */;
    (%39,)
  };
  %40(%var_3562) /* ty=(Tensor[(6, 4, 11), float64],) */
}

def @func_2192(%var_2191: Tensor[(9, 2, 8), float64]) -> (Tensor[(9, 2, 8), float64],) {
  %43 = fn (%var_2187: Tensor[(9, 2, 8), float64]) -> (Tensor[(9, 2, 8), float64],) {
    %41 = cast(%var_2187, dtype="float64") /* ty=Tensor[(9, 2, 8), float64] */;
    %42 = asinh(%41) /* ty=Tensor[(9, 2, 8), float64] */;
    (%42,)
  };
  %43(%var_2191) /* ty=(Tensor[(9, 2, 8), float64],) */
}

def @func_5160() -> (Tensor[(11, 14, 14), float32], Tensor[(11, 14, 14), float64], Tensor[(?, 11, 16), float32], Tensor[(11, 14, 14), float32]) {
  @func_5158() /* ty=(Tensor[(11, 14, 14), float32], Tensor[(11, 14, 14), float64], Tensor[(?, 11, 16), float32], Tensor[(11, 14, 14), float32]) */
}

def @func_2659() -> (Tensor[(1, 11, 16), float32],) {
  %45 = fn () -> (Tensor[(1, 11, 16), float32],) {
    %44 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    (%44,)
  };
  %45() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_5012(%var_4998: Tensor[(18), float64], %var_4999: Tensor[(3, 84), float64], %var_5005: Tensor[(90), float32]) -> (Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) {
  %46 = cast(%var_4998, dtype="float64") /* ty=Tensor[(18), float64] */;
  %47 = cast(%var_4999, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %48 = reshape(%46, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float64] */;
  %49 = reshape(%47, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), float64] */;
  %50 = @func_1288(%48, %49) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */;
  %51 = cast(%var_5005, dtype="float32") /* ty=Tensor[(90), float32] */;
  %52 = @func_3773() /* ty=Tensor[(168), float32] */;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(168), float32] */;
  %54 = reshape(%51, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %55 = reshape(%53, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %56 = @func_590(%54, %55) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %57 = cast(%var_4998, dtype="float64") /* ty=Tensor[(18), float64] */;
  %58 = cast(%var_4999, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %59 = reshape(%57, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float64] */;
  %60 = reshape(%58, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), float64] */;
  %61 = @func_1288(%59, %60) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */;
  %62 = %50.0;
  %63 = %56.0;
  %64 = %61.2;
  (%52, %62, %var_4998, %var_4999, %63, %var_5005, %64)
}

def @func_6527(%var_6525: int8, %var_6526: Tensor[(112), int8]) -> (Tensor[(144), float64], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) {
  %73 = fn (%var_6507: int8, %var_6508: Tensor[(112), int8]) -> (Tensor[(144), float64], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) {
    %65 = @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */;
    %66 = cast(%var_6507, dtype="int8") /* ty=int8 */;
    %67 = cast(%var_6508, dtype="int8") /* ty=Tensor[(112), int8] */;
    %68 = reshape(%66, newshape=[]) /* ty=int8 */;
    %69 = reshape(%67, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
    %70 = @func_1406(%68, %69) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
    %71 = %65.1;
    %72 = %70.1;
    (%71, %72, %var_6507, %var_6508)
  };
  %73(%var_6525, %var_6526) /* ty=(Tensor[(144), float64], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */
}

def @func_4740(%var_4733: Tensor[(12, 15, 8), int8], %var_4734: Tensor[(12, 15, 8), int8]) -> (Tensor[(12, 15, 8), int8],) {
  %74 = cast(%var_4734, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %75 = shape_of(%var_4733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_4733, dtype="int8") /* ty=Tensor[(12, 15, 8), int8] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %78 = left_shift(%76, %77) /* ty=Tensor[(12, 15, 8), int8] */;
  (%78,)
}

def @func_7254(%var_7249: Tensor[(1, 3, 16), bool], %var_7250: Tensor[(7, 3, 16), bool]) -> (Tensor[(7, 3, 16), bool],) {
  %79 = cast(%var_7249, dtype="bool") /* ty=Tensor[(1, 3, 16), bool] */;
  %80 = cast(%var_7250, dtype="bool") /* ty=Tensor[(7, 3, 16), bool] */;
  %81 = logical_or(%79, %80) /* ty=Tensor[(7, 3, 16), bool] */;
  (%81,)
}

def @func_8033() -> (Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(1, 11, 16), float32]) {
  @func_8031() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(1, 11, 16), float32]) */
}

def @func_9016() -> Tensor[(168), float32] {
  %82 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %82.1
}

def @func_1110(%var_1105: Tensor[(13, 13, 11), float32], %var_1106: Tensor[(13, 13, 11), float32], %var_1107: Tensor[(13, 13, 11), float32], %var_1108: Tensor[(15, 4), float64], %var_1109: Tensor[(168), float32]) -> (Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), float32], Tensor[(15, 6), float32], Tensor[(15, 4), float64], Tensor[(90), float32], Tensor[(168), float32]) {
  %108 = fn (%var_1043: Tensor[(13, 13, 11), float32], %var_1044: Tensor[(13, 13, 11), float32], %var_1066: Tensor[(13, 13, 11), float32], %var_1097: Tensor[(15, 4), float64], %var_1099: Tensor[(168), float32]) -> (Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), float32], Tensor[(15, 6), float32], Tensor[(15, 4), float64], Tensor[(90), float32], Tensor[(168), float32]) {
    %83 = cast(%var_1044, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
    %84 = shape_of(%var_1043, dtype="int32") /* ty=Tensor[(3), int32] */;
    %85 = cast(%var_1043, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
    %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %87 = cast(%var_1066, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
    %88 = shape_of(%var_1043, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%var_1043, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %91 = cast(%var_1043, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
    %92 = shape_of(%var_1044, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%var_1044, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %95 = divide(%93, %94) /* ty=Tensor[(13, 13, 11), float32] */;
    %96 = cast(%95, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
    %97 = cast(%var_1097, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %98 = cast(meta[relay.Constant][2] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %99 = cast(%var_1099, dtype="float32") /* ty=Tensor[(168), float32] */;
    %100 = reshape(%97, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
    %101 = reshape(%98, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
    %102 = reshape(%99, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %103 = @func_957(%100, %101, %102) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
    %104 = less_equal(%85, %86) /* ty=Tensor[(13, 13, 11), bool] */;
    %105 = equal(%89, %90) /* ty=Tensor[(13, 13, 11), bool] */;
    %106 = acosh(%96) /* ty=Tensor[(13, 13, 11), float32] */;
    %107 = %103.2;
    (%104, %105, %106, %107, %var_1097, meta[relay.Constant][2] /* ty=Tensor[(90), float32] */, %var_1099)
  };
  %108(%var_1105, %var_1106, %var_1107, %var_1108, %var_1109) /* ty=(Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), float32], Tensor[(15, 6), float32], Tensor[(15, 4), float64], Tensor[(90), float32], Tensor[(168), float32]) */
}

def @func_6214(%var_6124: Tensor[(9, 2, 8), float64], %var_6134: Tensor[(9, 2, 8), float64], %var_6148: Tensor[(90), float32], %var_6153: Tensor[(2156), float64], %var_6193: Tensor[(18), float64]) -> (Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), float64], Tensor[(81), float32], Tensor[(9, 2, 8), float32], Tensor[(9, 2, 8), float64], Tensor[(90), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(168), float32]) {
  %109 = cast(%var_6148, dtype="float32") /* ty=Tensor[(90), float32] */;
  %110 = cast(meta[relay.Constant][3] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %111 = reshape(%109, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %112 = reshape(%110, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %113 = @func_590(%111, %112) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %114 = cast(%var_6153, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %115 = cast(meta[relay.Constant][4] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %116 = reshape(%114, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %117 = reshape(%115, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %118 = @func_3524(%116, %117) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(16, 2, 13), float64], Tensor[(416), float64], Tensor[(2156), float64], Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(81), uint8]) */;
  %119 = cast(%var_6134, dtype="uint16") /* ty=Tensor[(9, 2, 8), uint16] */;
  %120 = shape_of(%var_6124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%var_6124, dtype="uint16") /* ty=Tensor[(9, 2, 8), uint16] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %123 = add(%121, %122) /* ty=Tensor[(9, 2, 8), uint16] */;
  %124 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %125 = %124.0;
  %126 = cast(%var_6124, dtype="bool") /* ty=Tensor[(9, 2, 8), bool] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%125, dtype="bool") /* ty=Tensor[(9, 2, 8), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %130 = equal(%128, %129) /* ty=Tensor[(9, 2, 8), bool] */;
  %131 = cast(%130, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %132 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%123, dtype="float32") /* ty=Tensor[(9, 2, 8), float32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %135 = cast(%var_6134, dtype="float64") /* ty=Tensor[(9, 2, 8), float64] */;
  %136 = cast(%var_6193, dtype="float64") /* ty=Tensor[(18), float64] */;
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %138 = %113.0;
  %139 = cast(%138, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %140 = reshape(%136, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %141 = reshape(%137, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
  %142 = reshape(%139, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %143 = @func_5012(%140, %141, %142) /* ty=(Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) */;
  %144 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %145 = %118.0;
  %146 = maximum(%133, %134) /* ty=Tensor[(9, 2, 8), float32] */;
  %147 = sin(%135) /* ty=Tensor[(9, 2, 8), float64] */;
  %148 = %143.5;
  %149 = %144.0;
  (%138, %var_6148, meta[relay.Constant][3] /* ty=Tensor[(168), float32] */, %145, %var_6153, meta[relay.Constant][4] /* ty=Tensor[(81), float32] */, %146, %147, %148, %var_6193, meta[relay.Constant][5] /* ty=Tensor[(252), float64] */, %149)
}

def @func_2379() -> (Tensor[(1, 11, 16), float32],) {
  @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_8753() -> (Tensor[(168), float32], Tensor[(4, 4, 7), int8], Tensor[(224), float32], int8) {
  %158 = fn () -> (Tensor[(168), float32], Tensor[(4, 4, 7), int8], Tensor[(224), float32], int8) {
    %150 = @func_6312() /* ty=(Tensor[(168), float32],) */;
    %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
    %152 = cast(meta[relay.Constant][7] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %153 = reshape(%151, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
    %154 = reshape(%152, newshape=[]) /* ty=int8 */;
    %155 = @func_2837(%153, %154) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */;
    %156 = %150.0;
    %157 = %155.1;
    (%156, %157, meta[relay.Constant][6] /* ty=Tensor[(224), float32] */, meta[relay.Constant][7] /* ty=int8 */)
  };
  %158() /* ty=(Tensor[(168), float32], Tensor[(4, 4, 7), int8], Tensor[(224), float32], int8) */
}

def @func_6452(%var_6446: Tensor[(132, 2), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(60), float64], Tensor[(132, 2), float64]) {
  %159 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %160 = cast(meta[relay.Constant][8] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %161 = cast(%var_6446, dtype="float64") /* ty=Tensor[(132, 2), float64] */;
  %162 = reshape(%160, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %163 = reshape(%161, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %164 = @func_4336(%162, %163) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
  %165 = %159.0;
  %166 = %164.5;
  (%165, %166, meta[relay.Constant][8] /* ty=Tensor[(60), float64] */, %var_6446)
}

def @func_6577() -> (Tensor[(144), float64], Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(112), int8], Tensor[(6, 28), float32]) {
  @func_6575() /* ty=(Tensor[(144), float64], Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(112), int8], Tensor[(6, 28), float32]) */
}

def @func_2837(%var_2805: Tensor[(14, 16, 1), float32], %var_2821: int8) -> (Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) {
  %167 = cast(%var_2805, dtype="bool") /* ty=Tensor[(14, 16, 1), bool] */;
  %168 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 16, 10), float32] */, dtype="bool") /* ty=Tensor[(14, 16, 10), bool] */;
  %169 = greater(%167, %168) /* ty=Tensor[(14, 16, 10), bool] */;
  %170 = cast(%169, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %171 = cast(%var_2821, dtype="int8") /* ty=int8 */;
  %172 = cast(meta[relay.Constant][10] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %173 = reshape(%171, newshape=[]) /* ty=int8 */;
  %174 = reshape(%172, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
  %175 = @func_1406(%173, %174) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
  %176 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %177 = sigmoid(%170) /* ty=Tensor[(14, 16, 10), float32] */;
  %178 = %175.0;
  %179 = %176.0;
  (%177, %178, %var_2821, meta[relay.Constant][10] /* ty=Tensor[(112), int8] */, %179)
}

def @func_2784() -> (Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) {
  %185 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) {
    %180 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
    %182 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %183 = atanh(%181) /* ty=Tensor[(1, 11, 16), float32] */;
    %184 = %182.2;
    (%183, %184)
  };
  %185() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */
}

def @func_8307(%var_8305: Tensor[(60), float64], %var_8306: Tensor[(18), float64]) -> (Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32], Tensor[(60), float64], Tensor[(264), float64], Tensor[(6, 4, 11), float64], Tensor[(5, 7, 15), int8], Tensor[(18), float64], Tensor[(525), float32]) {
  %206 = fn (%var_8274: Tensor[(60), float64], %var_8292: Tensor[(18), float64]) -> (Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32], Tensor[(60), float64], Tensor[(264), float64], Tensor[(6, 4, 11), float64], Tensor[(5, 7, 15), int8], Tensor[(18), float64], Tensor[(525), float32]) {
    %186 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
    %187 = cast(%var_8274, dtype="float64") /* ty=Tensor[(60), float64] */;
    %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
    %189 = reshape(%187, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %190 = reshape(%188, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %191 = @func_4336(%189, %190) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
    %192 = cast(%var_8274, dtype="float64") /* ty=Tensor[(60), float64] */;
    %193 = cast(meta[relay.Constant][11] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
    %194 = reshape(%192, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %195 = reshape(%193, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %196 = @func_4336(%194, %195) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */;
    %197 = cast(%var_8292, dtype="float64") /* ty=Tensor[(18), float64] */;
    %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
    %199 = reshape(%197, newshape=[3, 6]) /* ty=Tensor[(3, 6), float64] */;
    %200 = reshape(%198, newshape=[5, 7, 15]) /* ty=Tensor[(5, 7, 15), float32] */;
    %201 = @func_5804(%199, %200) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */;
    %202 = %186.0;
    %203 = %191.0;
    %204 = %196.5;
    %205 = %201.9;
    (%202, %203, %var_8274, meta[relay.Constant][11] /* ty=Tensor[(264), float64] */, %204, %205, %var_8292, meta[relay.Constant][12] /* ty=Tensor[(525), float32] */)
  };
  %206(%var_8305, %var_8306) /* ty=(Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32], Tensor[(60), float64], Tensor[(264), float64], Tensor[(6, 4, 11), float64], Tensor[(5, 7, 15), int8], Tensor[(18), float64], Tensor[(525), float32]) */
}

def @func_8856() -> (Tensor[(168), float32], Tensor[(1, 11, 16), float64]) {
  %207 = @func_7667() /* ty=(Tensor[(168), float32],) */;
  %208 = %207.0;
  %209 = @func_8356() /* ty=Tensor[(1, 11, 16), float64] */;
  (%208, %209)
}

def @func_1291(%var_1289: Tensor[(2, 1, 9), float64], %var_1290: Tensor[(2, 14, 9), float64]) -> (Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) {
  %217 = fn (%var_1277: Tensor[(2, 1, 9), float64], %var_1278: Tensor[(2, 14, 9), float64]) -> (Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) {
    %210 = cast(%var_1277, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
    %211 = cast(%var_1278, dtype="bool") /* ty=Tensor[(2, 14, 9), bool] */;
    %212 = cast(%var_1278, dtype="float32") /* ty=Tensor[(2, 14, 9), float32] */;
    %213 = cast(%var_1278, dtype="float32") /* ty=Tensor[(2, 14, 9), float32] */;
    %214 = less(%210, %211) /* ty=Tensor[(2, 14, 9), bool] */;
    %215 = cos(%212) /* ty=Tensor[(2, 14, 9), float32] */;
    %216 = asinh(%213) /* ty=Tensor[(2, 14, 9), float32] */;
    (%214, %215, %216)
  };
  %217(%var_1289, %var_1290) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */
}

def @func_4832(%var_4830: Tensor[(15, 10, 8), int8], %var_4831: Tensor[(15, 10, 8), int8]) -> (Tensor[(1, 11, 16), float32], Tensor[(15, 10, 8), float64]) {
  %234 = fn (%var_4764: Tensor[(15, 10, 8), int8], %var_4765: Tensor[(15, 10, 8), int8]) -> (Tensor[(1, 11, 16), float32], Tensor[(15, 10, 8), float64]) {
    %218 = cast(%var_4765, dtype="int8") /* ty=Tensor[(15, 10, 8), int8] */;
    %219 = shape_of(%var_4764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %220 = cast(%var_4764, dtype="int8") /* ty=Tensor[(15, 10, 8), int8] */;
    %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %222 = bitwise_or(%220, %221) /* ty=Tensor[(15, 10, 8), int8] */;
    %223 = cast(%var_4765, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
    %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%222, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %227 = floor_divide(%225, %226) /* ty=Tensor[(15, 10, 8), float64] */;
    %228 = cast(%227, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
    %229 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %230 = cast(%222, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
    %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %232 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
    %233 = subtract(%230, %231) /* ty=Tensor[(15, 10, 8), float64] */;
    (%232, %233)
  };
  %234(%var_4830, %var_4831) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 10, 8), float64]) */
}

def @func_5881() -> (Tensor[(11, 14, 14), bool], Tensor[(168), float32]) {
  @func_5879() /* ty=(Tensor[(11, 14, 14), bool], Tensor[(168), float32]) */
}

def @func_6725(%var_6723: Tensor[(525), float32], %var_6724: Tensor[(2156), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(18), float64], Tensor[(525), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), int16]) {
  %255 = fn (%var_6699: Tensor[(525), float32], %var_6706: Tensor[(2156), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(18), float64], Tensor[(525), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), int16]) {
    %235 = @func_5590() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %236 = @func_5266() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %237 = cast(meta[relay.Constant][13] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %238 = cast(%var_6699, dtype="float32") /* ty=Tensor[(525), float32] */;
    %239 = reshape(%237, newshape=[3, 6]) /* ty=Tensor[(3, 6), float64] */;
    %240 = reshape(%238, newshape=[5, 7, 15]) /* ty=Tensor[(5, 7, 15), float32] */;
    %241 = @func_5804(%239, %240) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */;
    %242 = %241.2;
    %243 = cast(%var_6706, dtype="int32") /* ty=Tensor[(2156), int32] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(1), int32] */;
    %245 = cast(%242, dtype="int32") /* ty=Tensor[(2156), int32] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?), int32] */;
    %247 = right_shift(%245, %246) /* ty=Tensor[(2156), int32] */;
    %248 = cast(%247, dtype="int16") /* ty=Tensor[(2156), int16] */;
    %249 = shape_of(%var_6706, dtype="int32") /* ty=Tensor[(1), int32] */;
    %250 = cast(%var_6706, dtype="int16") /* ty=Tensor[(2156), int16] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?), int16] */;
    %252 = %235.0;
    %253 = %236.0;
    %254 = bitwise_xor(%250, %251) /* ty=Tensor[(2156), int16] */;
    (%252, meta[relay.Constant][13] /* ty=Tensor[(18), float64] */, %var_6699, %253, %254)
  };
  %255(%var_6723, %var_6724) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(18), float64], Tensor[(525), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), int16]) */
}

def @func_594(%var_592: Tensor[(5, 2, 9), float32], %var_593: Tensor[(168), float32]) -> (Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) {
  @func_590(%var_592, %var_593) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */
}

def @func_5411() -> (Tensor[(1, 11, 16), float32],) {
  @func_5409() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_2345() -> Tensor[(1, 11, 16), float32] {
  %257 = fn () -> Tensor[(1, 11, 16), float32] {
    %256 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %256.0
  };
  %257() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_6221(%var_6216: Tensor[(9, 2, 8), float64], %var_6217: Tensor[(9, 2, 8), float64], %var_6218: Tensor[(90), float32], %var_6219: Tensor[(2156), float64], %var_6220: Tensor[(18), float64]) -> (Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), float64], Tensor[(81), float32], Tensor[(9, 2, 8), float32], Tensor[(9, 2, 8), float64], Tensor[(90), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(168), float32]) {
  @func_6214(%var_6216, %var_6217, %var_6218, %var_6219, %var_6220) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), float64], Tensor[(81), float32], Tensor[(9, 2, 8), float32], Tensor[(9, 2, 8), float64], Tensor[(90), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(168), float32]) */
}

def @func_2949(%var_2947: Tensor[(81), float32], %var_2948: Tensor[(112), int8]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) {
  %271 = fn (%var_2913: Tensor[(81), float32], %var_2938: Tensor[(112), int8]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) {
    %258 = cast(%var_2913, dtype="float32") /* ty=Tensor[(81), float32] */;
    %259 = reshape(%258, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
    %260 = @func_1990(%259) /* ty=(Tensor[(9, 3, 3), float32],) */;
    %261 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %262 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %263 = cast(%var_2938, dtype="int8") /* ty=Tensor[(112), int8] */;
    %264 = reshape(%262, newshape=[]) /* ty=int8 */;
    %265 = reshape(%263, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
    %266 = @func_1406(%264, %265) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
    %267 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    %268 = %260.0;
    %269 = %261.0;
    %270 = %266.1;
    (%267, %268, %var_2913, %269, %270, meta[relay.Constant][14] /* ty=int8 */, %var_2938)
  };
  %271(%var_2947, %var_2948) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */
}

def @func_5869() -> Tensor[(1, 11, 16), float32] {
  @func_5867() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_3362() -> (Tensor[(11, 14, 14), bool],) {
  %274 = fn () -> (Tensor[(11, 14, 14), bool],) {
    %272 = @func_2289() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
    %273 = %272.1;
    (%273,)
  };
  %274() /* ty=(Tensor[(11, 14, 14), bool],) */
}

def @func_6314() -> (Tensor[(168), float32],) {
  @func_6312() /* ty=(Tensor[(168), float32],) */
}

def @main() -> Tensor[(1, 11, 16), float32] {
  %275 = @func_8806() /* ty=Tensor[(1, 11, 16), float32] */;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  acos(%276) /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_7872(%var_7868: Tensor[(90), float32], %var_7869: Tensor[(144), float64], %var_7870: Tensor[(1, 2156), float64], %var_7871: Tensor[(18), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(168), float32], Tensor[(144), float64], Tensor[(1, 2156), float64], Tensor[(18), float64], Tensor[(15, 10, 8), float64], Tensor[(1200, 1), int8], Tensor[(90), float32], Tensor[(1, 11, 16), float32]) {
  @func_7866(%var_7868, %var_7869, %var_7870, %var_7871) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(168), float32], Tensor[(144), float64], Tensor[(1, 2156), float64], Tensor[(18), float64], Tensor[(15, 10, 8), float64], Tensor[(1200, 1), int8], Tensor[(90), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_7041(%var_7039: Tensor[(2156), bool]) -> (Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(11, 14, 14), float64], Tensor[(168), float32], Tensor[(364), float32], Tensor[(2156), bool], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32]) {
  @func_7038(%var_7039) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(11, 14, 14), float64], Tensor[(168), float32], Tensor[(364), float32], Tensor[(2156), bool], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_7668() -> (Tensor[(168), float32],) {
  %278 = fn () -> (Tensor[(168), float32],) {
    %277 = @func_3773() /* ty=Tensor[(168), float32] */;
    (%277,)
  };
  %278() /* ty=(Tensor[(168), float32],) */
}

def @func_2290() -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) {
  %293 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) {
    %279 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
    %280 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %281 = reshape(%280, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
    %282 = @func_172(%281) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
    %283 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %284 = cast(meta[relay.Constant][17] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
    %285 = reshape(%283, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %286 = reshape(%284, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %287 = @func_2179(%285, %286) /* ty=(Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) */;
    %288 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %289 = %279.1;
    %290 = %282.1;
    %291 = %287.1;
    %292 = %288.0;
    (%289, %290, meta[relay.Constant][15] /* ty=Tensor[(168), float32] */, %291, meta[relay.Constant][16] /* ty=Tensor[(90), float32] */, meta[relay.Constant][17] /* ty=Tensor[(81), float32] */, %292)
  };
  %293() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_5978(%var_5971: Tensor[(81), float32]) -> (Tensor[(11, 14, 14), int32], Tensor[(112), int8], Tensor[(81), float32], Tensor[(112), int8]) {
  %294 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %295 = %294.0;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %297 = cosh(%296) /* ty=Tensor[(11, 14, 14), float32] */;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %299 = acosh(%298) /* ty=Tensor[(11, 14, 14), float32] */;
  %300 = cast(%299, dtype="int32") /* ty=Tensor[(11, 14, 14), int32] */;
  %301 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%297, dtype="int32") /* ty=Tensor[(11, 14, 14), int32] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %304 = cast(%var_5971, dtype="float32") /* ty=Tensor[(81), float32] */;
  %305 = cast(meta[relay.Constant][18] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %306 = reshape(%304, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %307 = reshape(%305, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %308 = @func_2946(%306, %307) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */;
  %309 = subtract(%302, %303) /* ty=Tensor[(11, 14, 14), int32] */;
  %310 = %308.6;
  (%309, %310, %var_5971, meta[relay.Constant][18] /* ty=Tensor[(112), int8] */)
}

def @func_6922(%var_6915: Tensor[(3, 11, 16), float32]) -> (Tensor[(3, 11, 16), bool],) {
  %311 = @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %314 = cast(%var_6915, dtype="bool") /* ty=Tensor[(3, 11, 16), bool] */;
  %315 = equal(%313, %314) /* ty=Tensor[(3, 11, 16), bool] */;
  (%315,)
}

def @func_7715() -> (Tensor[(1, 11, 16), float32],) {
  %318 = fn () -> (Tensor[(1, 11, 16), float32],) {
    %316 = @func_6379() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64]) */;
    %317 = %316.0;
    (%317,)
  };
  %318() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_2841(%var_2839: Tensor[(14, 16, 1), float32], %var_2840: int8) -> (Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) {
  @func_2837(%var_2839, %var_2840) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */
}

def @func_100(%var_98: Tensor[(11, 14, 14), float64], %var_99: Tensor[(11, 14, 14), float64]) -> (Tensor[(11, 14, 14), bool],) {
  @func_96(%var_98, %var_99) /* ty=(Tensor[(11, 14, 14), bool],) */
}

def @func_4705() -> (Tensor[(11, 14, 14), bool],) {
  @func_4703() /* ty=(Tensor[(11, 14, 14), bool],) */
}

def @func_175(%var_173: Tensor[(2, 6, 14), float32]) -> (Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) {
  @func_172(%var_173) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */
}

def @func_4076(%var_4074: Tensor[(2156), float64], %var_4075: int8) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 16, 10), float32], Tensor[(1, 224), float32], int8) {
  @func_4072(%var_4074, %var_4075) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 16, 10), float32], Tensor[(1, 224), float32], int8) */
}

def @func_5981(%var_5979: Tensor[(81), float32]) -> (Tensor[(11, 14, 14), int32], Tensor[(112), int8], Tensor[(81), float32], Tensor[(112), int8]) {
  @func_5978(%var_5979) /* ty=(Tensor[(11, 14, 14), int32], Tensor[(112), int8], Tensor[(81), float32], Tensor[(112), int8]) */
}

def @func_7866(%var_7815: Tensor[(90), float32], %var_7818: Tensor[(144), float64], %var_7819: Tensor[(1, 2156), float64], %var_7820: Tensor[(18), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(168), float32], Tensor[(144), float64], Tensor[(1, 2156), float64], Tensor[(18), float64], Tensor[(15, 10, 8), float64], Tensor[(1200, 1), int8], Tensor[(90), float32], Tensor[(1, 11, 16), float32]) {
  %319 = @func_7419() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) */;
  %320 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %321 = cast(%var_7815, dtype="float32") /* ty=Tensor[(90), float32] */;
  %322 = reshape(%320, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %323 = reshape(%321, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %324 = @func_3676(%322, %323) /* ty=(Tensor[(168), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(15, 6), float32]) */;
  %325 = cast(%var_7818, dtype="float64") /* ty=Tensor[(144), float64] */;
  %326 = cast(%var_7818, dtype="float64") /* ty=Tensor[(144), float64] */;
  %327 = %324.1;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %329 = cast(%var_7819, dtype="float64") /* ty=Tensor[(1, 2156), float64] */;
  %330 = cast(%var_7820, dtype="float64") /* ty=Tensor[(18), float64] */;
  %331 = reshape(%325, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %332 = reshape(%326, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %333 = reshape(%328, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %334 = reshape(%329, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %335 = reshape(%330, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %336 = @func_6214(%331, %332, %333, %334, %335) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), float64], Tensor[(81), float32], Tensor[(9, 2, 8), float32], Tensor[(9, 2, 8), float64], Tensor[(90), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(168), float32]) */;
  %337 = cast(meta[relay.Constant][20] /* ty=Tensor[(1200, 1), int8] */, dtype="int8") /* ty=Tensor[(1200, 1), int8] */;
  %338 = cast(meta[relay.Constant][20] /* ty=Tensor[(1200, 1), int8] */, dtype="int8") /* ty=Tensor[(1200, 1), int8] */;
  %339 = reshape(%337, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), int8] */;
  %340 = reshape(%338, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), int8] */;
  %341 = @func_4829(%339, %340) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 10, 8), float64]) */;
  %342 = cast(%var_7815, dtype="float32") /* ty=Tensor[(90), float32] */;
  %343 = @func_5452() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %344 = %319.0;
  %345 = %336.2;
  %346 = %341.1;
  %347 = asinh(%342) /* ty=Tensor[(90), float32] */;
  %348 = %343.0;
  (%344, %327, meta[relay.Constant][19] /* ty=Tensor[(60), float64] */, %345, %var_7818, %var_7819, %var_7820, %346, meta[relay.Constant][20] /* ty=Tensor[(1200, 1), int8] */, %347, %348)
}

def @func_4363() -> Tensor[(8, 11, 16), bool] {
  %350 = fn () -> Tensor[(8, 11, 16), bool] {
    %349 = @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */;
    %349.0
  };
  %350() /* ty=Tensor[(8, 11, 16), bool] */
}

def @func_7282() -> (Tensor[(168), float32],) {
  @func_7280() /* ty=(Tensor[(168), float32],) */
}

def @func_5879() -> (Tensor[(11, 14, 14), bool], Tensor[(168), float32]) {
  %351 = @func_4703() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %352 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %353 = %351.0;
  %354 = %352.0;
  (%353, %354)
}

def @func_1410(%var_1408: int8, %var_1409: Tensor[(4, 4, 7), int8]) -> (Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) {
  @func_1406(%var_1408, %var_1409) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */
}

def @func_8243(%var_8211: Tensor[(1760), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(1760), float32], Tensor[(168), float32], Tensor[(10, 11, 16), float64]) {
  %355 = @func_7714() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %356 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %357 = cast(%var_8211, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %358 = reshape(%357, newshape=[10, 11, 16]) /* ty=Tensor[(10, 11, 16), float32] */;
  %359 = @func_5651(%358) /* ty=(Tensor[(10, 11, 16), bool],) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(10, 11, 16), float32] */;
  %362 = sin(%361) /* ty=Tensor[(10, 11, 16), float32] */;
  %363 = cast(%362, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  %364 = %355.0;
  %365 = %356.0;
  %366 = atan(%363) /* ty=Tensor[(10, 11, 16), float64] */;
  (%364, %var_8211, %365, %366)
}

def @func_5867() -> Tensor[(1, 11, 16), float32] {
  %367 = @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %367.0
}

def @func_1582(%var_1577: Tensor[(7, 52), float32], %var_1578: Tensor[(11, 14, 14), bool], %var_1579: Tensor[(90), float32], %var_1580: Tensor[(168), float32], %var_1581: Tensor[(416), float64]) -> (Tensor[(6, 13, 5), uint8], Tensor[(11, 14, 14), bool], Tensor[(7, 52), float64], Tensor[(11, 14, 14), float64], Tensor[(2, 15, 2), float64], Tensor[(1, 60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(2156), float64], Tensor[(416), float64], Tensor[(14, 2, 13), float32], Tensor[(11, 14, 14), float32], Tensor[(14, 154), float64], Tensor[(11, 14, 14), bool], Tensor[(5, 2, 9), float32]) {
  @func_1575(%var_1577, %var_1578, %var_1579, %var_1580, %var_1581) /* ty=(Tensor[(6, 13, 5), uint8], Tensor[(11, 14, 14), bool], Tensor[(7, 52), float64], Tensor[(11, 14, 14), float64], Tensor[(2, 15, 2), float64], Tensor[(1, 60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(2156), float64], Tensor[(416), float64], Tensor[(14, 2, 13), float32], Tensor[(11, 14, 14), float32], Tensor[(14, 154), float64], Tensor[(11, 14, 14), bool], Tensor[(5, 2, 9), float32]) */
}

def @func_5624(%var_5620: Tensor[(13, 13, 6), uint8], %var_5621: Tensor[(13, 13, 6), uint8], %var_5622: Tensor[(90), float32], %var_5623: Tensor[(81), float32]) -> (Tensor[(13, 13, 6), bool], Tensor[(9, 3, 3), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(2, 11, 16), bool], Tensor[(352), float32]) {
  @func_5618(%var_5620, %var_5621, %var_5622, %var_5623) /* ty=(Tensor[(13, 13, 6), bool], Tensor[(9, 3, 3), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(2, 11, 16), bool], Tensor[(352), float32]) */
}

def @func_3947() -> (Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_3602() -> (Tensor[(168), float32],) {
  %370 = fn () -> (Tensor[(168), float32],) {
    %368 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
    %369 = %368.1;
    (%369,)
  };
  %370() /* ty=(Tensor[(168), float32],) */
}

def @func_3138(%var_3136: Tensor[(112), int8], %var_3137: Tensor[(168), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) {
  %384 = fn (%var_3124: Tensor[(112), int8], %var_3129: Tensor[(168), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) {
    %371 = cast(meta[relay.Constant][21] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %372 = cast(%var_3124, dtype="int8") /* ty=Tensor[(112), int8] */;
    %373 = reshape(%371, newshape=[]) /* ty=int8 */;
    %374 = reshape(%372, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), int8] */;
    %375 = @func_1406(%373, %374) /* ty=(Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) */;
    %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %377 = cast(%var_3129, dtype="float32") /* ty=Tensor[(168), float32] */;
    %378 = reshape(%376, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
    %379 = reshape(%377, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %380 = @func_590(%378, %379) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
    %381 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    %382 = %375.1;
    %383 = %380.1;
    (%381, %382, meta[relay.Constant][21] /* ty=int8 */, %var_3124, %383, meta[relay.Constant][22] /* ty=Tensor[(90), float32] */, %var_3129)
  };
  %384(%var_3136, %var_3137) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) */
}

def @func_3419(%var_3417: Tensor[(90), float32], %var_3418: Tensor[(168), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32]) {
  %395 = fn (%var_3389: Tensor[(90), float32], %var_3390: Tensor[(168), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32]) {
    %385 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %386 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %387 = cast(%var_3389, dtype="float32") /* ty=Tensor[(90), float32] */;
    %388 = cast(%var_3390, dtype="float32") /* ty=Tensor[(168), float32] */;
    %389 = reshape(%386, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
    %390 = reshape(%387, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
    %391 = reshape(%388, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %392 = @func_957(%389, %390, %391) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
    %393 = %385.0;
    %394 = %392.1;
    (%393, %394, meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, %var_3389, %var_3390)
  };
  %395(%var_3417, %var_3418) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32]) */
}

def @func_8412() -> (Tensor[(168), float32], Tensor[(168), float32]) {
  %400 = fn () -> (Tensor[(168), float32], Tensor[(168), float32]) {
    %396 = @func_3601() /* ty=(Tensor[(168), float32],) */;
    %397 = @func_6821() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(168), float32]) */;
    %398 = %396.0;
    %399 = %397.1;
    (%398, %399)
  };
  %400() /* ty=(Tensor[(168), float32], Tensor[(168), float32]) */
}

def @func_6662(%var_6661: Tensor[(81), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32]) {
  %407 = fn (%var_6648: Tensor[(81), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32]) {
    %401 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
    %402 = cast(%var_6648, dtype="float32") /* ty=Tensor[(81), float32] */;
    %403 = reshape(%402, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
    %404 = @func_1990(%403) /* ty=(Tensor[(9, 3, 3), float32],) */;
    %405 = %401.2;
    %406 = %404.0;
    (%405, %406, %var_6648)
  };
  %407(%var_6661) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32]) */
}

def @func_4622() -> Tensor[(1, 11, 16), float32] {
  @func_4024() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_2036() -> (Tensor[(1, 11, 16), float32],) {
  %410 = fn () -> (Tensor[(1, 11, 16), float32],) {
    %408 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
    %409 = %408.1;
    (%409,)
  };
  %410() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_4024() -> Tensor[(1, 11, 16), float32] {
  %411 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %411.0
}

def @func_590(%var_565: Tensor[(5, 2, 9), float32], %var_575: Tensor[(168), float32]) -> (Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) {
  %412 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 2, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %413 = shape_of(%var_565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_565, dtype="float32") /* ty=Tensor[(5, 2, 9), float32] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %416 = cast(%var_575, dtype="float32") /* ty=Tensor[(168), float32] */;
  %417 = reshape(%416, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %418 = @func_172(%417) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
  %419 = floor_mod(%414, %415) /* ty=Tensor[(5, 2, 9), float32] */;
  %420 = %418.2;
  (%419, %420, %var_575)
}

def @func_5529(%var_5528: Tensor[(264), float64]) -> (Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(8, 11, 16), bool]) {
  %429 = fn (%var_5509: Tensor[(264), float64]) -> (Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(8, 11, 16), bool]) {
    %421 = cast(%var_5509, dtype="float64") /* ty=Tensor[(264), float64] */;
    %422 = reshape(%421, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
    %423 = @func_3561(%422) /* ty=(Tensor[(6, 4, 11), float64],) */;
    %424 = @func_5483() /* ty=(Tensor[(8, 11, 16), bool],) */;
    %425 = @func_4362() /* ty=Tensor[(8, 11, 16), bool] */;
    %426 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
    %427 = %423.0;
    %428 = %424.0;
    (%425, %426, %427, %var_5509, %428)
  };
  %429(%var_5528) /* ty=(Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64], Tensor[(8, 11, 16), bool]) */
}

def @func_9078(%var_9077: Tensor[(3, 11, 16), float32]) -> (Tensor[(11, 14, 14), bool], Tensor[(3, 11, 16), uint16]) {
  %437 = fn (%var_9051: Tensor[(3, 11, 16), float32]) -> (Tensor[(11, 14, 14), bool], Tensor[(3, 11, 16), uint16]) {
    %430 = @func_9023() /* ty=(Tensor[(11, 14, 14), bool],) */;
    %431 = @func_7938() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
    %432 = %431.0;
    %433 = cast(%432, dtype="uint16") /* ty=Tensor[(1, 11, 16), uint16] */;
    %434 = cast(%var_9051, dtype="uint16") /* ty=Tensor[(3, 11, 16), uint16] */;
    %435 = %430.0;
    %436 = bitwise_and(%433, %434) /* ty=Tensor[(3, 11, 16), uint16] */;
    (%435, %436)
  };
  %437(%var_9077) /* ty=(Tensor[(11, 14, 14), bool], Tensor[(3, 11, 16), uint16]) */
}

def @func_8565() -> (Tensor[(1, 11, 16), float64],) {
  %438 = @func_8356() /* ty=Tensor[(1, 11, 16), float64] */;
  (%438,)
}

def @func_8858() -> (Tensor[(168), float32], Tensor[(1, 11, 16), float64]) {
  @func_8856() /* ty=(Tensor[(168), float32], Tensor[(1, 11, 16), float64]) */
}

def @func_4339(%var_4337: Tensor[(60), float64], %var_4338: Tensor[(264), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
  %453 = fn (%var_4326: Tensor[(60), float64], %var_4333: Tensor[(264), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) {
    %439 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
    %440 = cast(%var_4326, dtype="float64") /* ty=Tensor[(60), float64] */;
    %441 = cast(meta[relay.Constant][25] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %442 = cast(meta[relay.Constant][26] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %443 = reshape(%440, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
    %444 = reshape(%441, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
    %445 = reshape(%442, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %446 = @func_957(%443, %444, %445) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
    %447 = cast(%var_4333, dtype="float64") /* ty=Tensor[(264), float64] */;
    %448 = reshape(%447, newshape=[6, 4, 11]) /* ty=Tensor[(6, 4, 11), float64] */;
    %449 = @func_3561(%448) /* ty=(Tensor[(6, 4, 11), float64],) */;
    %450 = %439.2;
    %451 = %446.2;
    %452 = %449.0;
    (%450, %451, %var_4326, meta[relay.Constant][25] /* ty=Tensor[(90), float32] */, meta[relay.Constant][26] /* ty=Tensor[(168), float32] */, %452, %var_4333)
  };
  %453(%var_4337, %var_4338) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(15, 6), float32], Tensor[(60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(6, 4, 11), float64], Tensor[(264), float64]) */
}

def @func_6628(%var_6626: int16) -> (Tensor[(2, 12, 6), bool],) {
  @func_6625(%var_6626) /* ty=(Tensor[(2, 12, 6), bool],) */
}

def @func_2183(%var_2181: Tensor[(90), float32], %var_2182: Tensor[(81), float32]) -> (Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) {
  @func_2179(%var_2181, %var_2182) /* ty=(Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) */
}

def @func_1336(%var_1334: Tensor[(16, 2, 13), float64], %var_1335: Tensor[(2156), float64]) -> (Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) {
  %475 = fn (%var_1302: Tensor[(16, 2, 13), float64], %var_1308: Tensor[(2156), float64]) -> (Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) {
    %454 = cast(%var_1302, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
    %455 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %456 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %457 = reshape(%455, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %458 = reshape(%456, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %459 = @func_96(%457, %458) /* ty=(Tensor[(11, 14, 14), bool],) */;
    %460 = cast(meta[relay.Constant][27] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
    %461 = cast(meta[relay.Constant][27] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
    %462 = reshape(%460, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
    %463 = reshape(%461, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
    %464 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %465 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %466 = reshape(%464, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %467 = reshape(%465, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %468 = @func_96(%466, %467) /* ty=(Tensor[(11, 14, 14), bool],) */;
    %469 = %468.0;
    %470 = cast(%469, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
    %471 = sin(%454) /* ty=Tensor[(16, 2, 13), float64] */;
    %472 = %459.0;
    %473 = @func_1038(%462, %463) /* ty=Tensor[(14, 2, 13), float32] */;
    %474 = exp(%470) /* ty=Tensor[(11, 14, 14), float64] */;
    (%471, %472, %var_1308, %473, meta[relay.Constant][27] /* ty=Tensor[(364), float32] */, %474)
  };
  %475(%var_1334, %var_1335) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */
}

def @func_3353() -> (Tensor[(168), float32],) {
  @func_3351() /* ty=(Tensor[(168), float32],) */
}

def @func_961(%var_958: Tensor[(2, 15, 2), float64], %var_959: Tensor[(15, 6), float32], %var_960: Tensor[(168), float32]) -> (Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) {
  %484 = fn (%var_913: Tensor[(2, 15, 2), float64], %var_953: Tensor[(15, 6), float32], %var_954: Tensor[(168), float32]) -> (Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) {
    %476 = cast(%var_913, dtype="float64") /* ty=Tensor[(2, 15, 2), float64] */;
    %477 = cast(%var_953, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
    %478 = cast(%var_954, dtype="float32") /* ty=Tensor[(168), float32] */;
    %479 = reshape(%477, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
    %480 = reshape(%478, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %481 = @func_590(%479, %480) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
    %482 = log2(%476) /* ty=Tensor[(2, 15, 2), float64] */;
    %483 = %481.0;
    (%482, %483, %var_953, %var_954)
  };
  %484(%var_958, %var_959, %var_960) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */
}

def @func_7420() -> (Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) {
  %493 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) {
    %485 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %486 = cast(meta[relay.Constant][28] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
    %487 = cast(meta[relay.Constant][29] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %488 = reshape(%486, newshape=[112, 1]) /* ty=Tensor[(112, 1), int8] */;
    %489 = reshape(%487, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %490 = @func_4917(%488, %489) /* ty=(Tensor[(5, 11, 16), bool], Tensor[(112), int8], Tensor[(112, 1), int8], Tensor[(168), float32], Tensor[(3, 14, 11), float64], Tensor[(462), float64]) */;
    %491 = %485.0;
    %492 = %490.1;
    (%491, %492, meta[relay.Constant][28] /* ty=Tensor[(112), int8] */, meta[relay.Constant][29] /* ty=Tensor[(168), float32] */)
  };
  %493() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) */
}

def @func_5452() -> (Tensor[(1, 11, 16), float32],) {
  %494 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %495 = %494.1;
  (%495,)
}

def @func_3680(%var_3678: Tensor[(60), float64], %var_3679: Tensor[(15, 6), float32]) -> (Tensor[(168), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(15, 6), float32]) {
  @func_3676(%var_3678, %var_3679) /* ty=(Tensor[(168), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(15, 6), float32]) */
}

def @func_6575() -> (Tensor[(144), float64], Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(112), int8], Tensor[(6, 28), float32]) {
  %496 = @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */;
  %497 = cast(meta[relay.Constant][30] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
  %498 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 28), float32] */, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %499 = reshape(%497, newshape=[112]) /* ty=Tensor[(112), int8] */;
  %500 = reshape(%498, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %501 = @func_3135(%499, %500) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) */;
  %502 = %496.1;
  %503 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
  %504 = %501.6;
  (%502, %503, %504, meta[relay.Constant][30] /* ty=Tensor[(112), int8] */, meta[relay.Constant][31] /* ty=Tensor[(6, 28), float32] */)
}

def @func_4499(%var_4497: Tensor[(7, 66), float64], %var_4498: int8) -> (Tensor[(11, 14, 14), float32], Tensor[(3, 14, 11), float64], Tensor[(7, 66), float64], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(224, 1), float32], int8) {
  %521 = fn (%var_4479: Tensor[(7, 66), float64], %var_4486: int8) -> (Tensor[(11, 14, 14), float32], Tensor[(3, 14, 11), float64], Tensor[(7, 66), float64], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(224, 1), float32], int8) {
    %505 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
    %506 = %505.0;
    %507 = cast(%506, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
    %508 = cast(%var_4479, dtype="float64") /* ty=Tensor[(7, 66), float64] */;
    %509 = reshape(%508, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %510 = @func_445(%509) /* ty=(Tensor[(3, 14, 11), float64],) */;
    %511 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %512 = cast(meta[relay.Constant][32] /* ty=Tensor[(224, 1), float32] */, dtype="float32") /* ty=Tensor[(224, 1), float32] */;
    %513 = cast(%var_4486, dtype="int8") /* ty=int8 */;
    %514 = reshape(%512, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
    %515 = reshape(%513, newshape=[]) /* ty=int8 */;
    %516 = @func_2837(%514, %515) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */;
    %517 = acos(%507) /* ty=Tensor[(11, 14, 14), float32] */;
    %518 = %510.0;
    %519 = %511.0;
    %520 = %516.4;
    (%517, %518, %var_4479, %519, %520, meta[relay.Constant][32] /* ty=Tensor[(224, 1), float32] */, %var_4486)
  };
  %521(%var_4497, %var_4498) /* ty=(Tensor[(11, 14, 14), float32], Tensor[(3, 14, 11), float64], Tensor[(7, 66), float64], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(224, 1), float32], int8) */
}

def @func_6759(%var_6757: Tensor[(8, 14, 1), uint16]) -> (Tensor[(8, 14, 1), bool], Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32]) {
  @func_6756(%var_6757) /* ty=(Tensor[(8, 14, 1), bool], Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32]) */
}

def @func_3223() -> (Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) {
  %522 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %523 = cast(meta[relay.Constant][33] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %524 = cast(meta[relay.Constant][33] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %525 = reshape(%523, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %526 = reshape(%524, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %527 = %522.0;
  %528 = @func_1038(%525, %526) /* ty=Tensor[(14, 2, 13), float32] */;
  (%527, %528, meta[relay.Constant][33] /* ty=Tensor[(364), float32] */)
}

def @func_7065() -> Tensor[(1, 11, 16), float32] {
  @func_7063() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_1992(%var_1991: Tensor[(9, 3, 3), float32]) -> (Tensor[(9, 3, 3), float32],) {
  %531 = fn (%var_1980: Tensor[(9, 3, 3), float32]) -> (Tensor[(9, 3, 3), float32],) {
    %529 = cast(%var_1980, dtype="float32") /* ty=Tensor[(9, 3, 3), float32] */;
    %530 = atanh(%529) /* ty=Tensor[(9, 3, 3), float32] */;
    (%530,)
  };
  %531(%var_1991) /* ty=(Tensor[(9, 3, 3), float32],) */
}

def @func_7740() -> (Tensor[(168), float32],) {
  @func_7738() /* ty=(Tensor[(168), float32],) */
}

def @func_1041(%var_1039: Tensor[(14, 2, 13), float32], %var_1040: Tensor[(14, 2, 13), float32]) -> Tensor[(14, 2, 13), float32] {
  %536 = fn (%var_1033: Tensor[(14, 2, 13), float32], %var_1034: Tensor[(14, 2, 13), float32]) -> Tensor[(14, 2, 13), float32] {
    %532 = cast(%var_1034, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
    %533 = shape_of(%var_1033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(%var_1033, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%534, %535) /* ty=Tensor[(14, 2, 13), float32] */
  };
  %536(%var_1039, %var_1040) /* ty=Tensor[(14, 2, 13), float32] */
}

def @func_7038(%var_7026: Tensor[(2156), bool]) -> (Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(11, 14, 14), float64], Tensor[(168), float32], Tensor[(364), float32], Tensor[(2156), bool], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32]) {
  %537 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %538 = cast(meta[relay.Constant][34] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %539 = cast(meta[relay.Constant][35] /* ty=Tensor[(364), float32] */, dtype="float32") /* ty=Tensor[(364), float32] */;
  %540 = cast(%var_7026, dtype="bool") /* ty=Tensor[(2156), bool] */;
  %541 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 90), float32] */, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
  %542 = reshape(%538, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %543 = reshape(%539, newshape=[364, 1]) /* ty=Tensor[(364, 1), float32] */;
  %544 = reshape(%540, newshape=[2156]) /* ty=Tensor[(2156), bool] */;
  %545 = reshape(%541, newshape=[3, 30]) /* ty=Tensor[(3, 30), float32] */;
  %546 = @func_2521(%542, %543, %544, %545) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32], Tensor[(2, 6, 14), uint8], Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), float64], Tensor[(364, 1), float32], Tensor[(2156), bool], Tensor[(3, 30), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool]) */;
  %547 = %537.0;
  %548 = @func_4362() /* ty=Tensor[(8, 11, 16), bool] */;
  %549 = %546.6;
  %550 = @func_5867() /* ty=Tensor[(1, 11, 16), float32] */;
  (%547, %548, %549, meta[relay.Constant][34] /* ty=Tensor[(168), float32] */, meta[relay.Constant][35] /* ty=Tensor[(364), float32] */, %var_7026, meta[relay.Constant][36] /* ty=Tensor[(1, 90), float32] */, %550)
}

def @func_2407() -> (Tensor[(1, 11, 16), float32],) {
  %552 = fn () -> (Tensor[(1, 11, 16), float32],) {
    %551 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_8807() -> Tensor[(1, 11, 16), float32] {
  %554 = fn () -> Tensor[(1, 11, 16), float32] {
    %553 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %553.0
  };
  %554() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_9025() -> (Tensor[(11, 14, 14), bool],) {
  @func_9023() /* ty=(Tensor[(11, 14, 14), bool],) */
}

def @func_1406(%var_1383: int8, %var_1384: Tensor[(4, 4, 7), int8]) -> (Tensor[(4, 4, 7), int8], Tensor[(4, 4, 7), float32]) {
  %555 = cast(%var_1383, dtype="int8") /* ty=int8 */;
  %556 = cast(%var_1384, dtype="int8") /* ty=Tensor[(4, 4, 7), int8] */;
  %557 = cast(%var_1384, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
  %558 = left_shift(%555, %556) /* ty=Tensor[(4, 4, 7), int8] */;
  %559 = tan(%557) /* ty=Tensor[(4, 4, 7), float32] */;
  (%558, %559)
}

def @func_4438() -> (Tensor[(1, 11, 16), float32],) {
  %560 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %561 = %560.2;
  (%561,)
}

def @func_8031() -> (Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(1, 11, 16), float32]) {
  %562 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %563 = cast(meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %564 = reshape(%563, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %565 = @func_2190(%564) /* ty=(Tensor[(9, 2, 8), float64],) */;
  %566 = @func_7938() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %567 = %562.0;
  %568 = %565.0;
  %569 = %566.1;
  (%567, %568, meta[relay.Constant][37] /* ty=Tensor[(144), float64] */, %569)
}

def @func_6312() -> (Tensor[(168), float32],) {
  %570 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %571 = %570.0;
  (%571,)
}

def @func_3021() -> (Tensor[(1, 11, 16), float32],) {
  @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_6273(%var_6272: Tensor[(1, 4, 4), float64]) -> Tensor[(1, 4, 4), float64] {
  %573 = fn (%var_6267: Tensor[(1, 4, 4), float64]) -> Tensor[(1, 4, 4), float64] {
    %572 = cast(%var_6267, dtype="float64") /* ty=Tensor[(1, 4, 4), float64] */;
    asinh(%572) /* ty=Tensor[(1, 4, 4), float64] */
  };
  %573(%var_6272) /* ty=Tensor[(1, 4, 4), float64] */
}

def @func_5997() -> Tensor[(1, 11, 16), float32] {
  %575 = fn () -> Tensor[(1, 11, 16), float32] {
    %574 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %574.0
  };
  %575() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_3225() -> (Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) {
  @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */
}

def @func_3676(%var_3639: Tensor[(60), float64], %var_3640: Tensor[(15, 6), float32]) -> (Tensor[(168), float32], Tensor[(5, 2, 9), float32], Tensor[(60), float64], Tensor[(15, 6), float32]) {
  %576 = @func_3351() /* ty=(Tensor[(168), float32],) */;
  %577 = cast(%var_3639, dtype="float64") /* ty=Tensor[(60), float64] */;
  %578 = cast(%var_3640, dtype="float32") /* ty=Tensor[(15, 6), float32] */;
  %579 = %576.0;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(168), float32] */;
  %581 = reshape(%577, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %582 = reshape(%578, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %583 = reshape(%580, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %584 = @func_957(%581, %582, %583) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %585 = %584.1;
  (%579, %585, %var_3639, %var_3640)
}

def @func_8358() -> Tensor[(1, 11, 16), float64] {
  @func_8356() /* ty=Tensor[(1, 11, 16), float64] */
}

def @func_5017(%var_5014: Tensor[(18), float64], %var_5015: Tensor[(3, 84), float64], %var_5016: Tensor[(90), float32]) -> (Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) {
  @func_5012(%var_5014, %var_5015, %var_5016) /* ty=(Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) */
}

def @func_7280() -> (Tensor[(168), float32],) {
  %586 = @func_3773() /* ty=Tensor[(168), float32] */;
  (%586,)
}

def @func_2332() -> (Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) {
  %593 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) {
    %587 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %588 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
    %589 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
    %590 = %587.0;
    %591 = %588.1;
    %592 = %589.0;
    (%590, %591, %592)
  };
  %593() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */
}

def @func_6866() -> Tensor[(1, 11, 16), float32] {
  %595 = fn () -> Tensor[(1, 11, 16), float32] {
    %594 = @func_5409() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %594.0
  };
  %595() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_8923() -> (Tensor[(144), float64], Tensor[(1, 11, 16), float32]) {
  %599 = fn () -> (Tensor[(144), float64], Tensor[(1, 11, 16), float32]) {
    %596 = @func_8031() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(1, 11, 16), float32]) */;
    %597 = %596.2;
    %598 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
    (%597, %598)
  };
  %599() /* ty=(Tensor[(144), float64], Tensor[(1, 11, 16), float32]) */
}

def @func_4119(%var_4118: Tensor[(4, 13, 15), uint32]) -> (Tensor[(4, 13, 15), bool],) {
  %603 = fn (%var_4109: Tensor[(4, 13, 15), uint32]) -> (Tensor[(4, 13, 15), bool],) {
    %600 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 13, 1), uint32] */, dtype="bool") /* ty=Tensor[(4, 13, 1), bool] */;
    %601 = cast(%var_4109, dtype="bool") /* ty=Tensor[(4, 13, 15), bool] */;
    %602 = not_equal(%600, %601) /* ty=Tensor[(4, 13, 15), bool] */;
    (%602,)
  };
  %603(%var_4118) /* ty=(Tensor[(4, 13, 15), bool],) */
}

def @func_5379() -> (Tensor[(168), float32], Tensor[(144), float64]) {
  @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */
}

def @func_5266() -> (Tensor[(1, 11, 16), float32],) {
  %604 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %605 = %604.0;
  (%605,)
}

def @func_5807(%var_5805: Tensor[(3, 6), float64], %var_5806: Tensor[(5, 7, 15), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) {
  %641 = fn (%var_5744: Tensor[(3, 6), float64], %var_5796: Tensor[(5, 7, 15), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) {
    %606 = cast(meta[relay.Constant][39] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %607 = cast(meta[relay.Constant][39] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %608 = reshape(%606, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %609 = reshape(%607, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %610 = @func_96(%608, %609) /* ty=(Tensor[(11, 14, 14), bool],) */;
    %611 = cast(%var_5744, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
    %612 = cast(meta[relay.Constant][40] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %613 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 90), float32] */, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
    %614 = reshape(%611, newshape=[18]) /* ty=Tensor[(18), float64] */;
    %615 = reshape(%612, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
    %616 = reshape(%613, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %617 = @func_5012(%614, %615, %616) /* ty=(Tensor[(168), float32], Tensor[(2, 14, 9), bool], Tensor[(18), float64], Tensor[(3, 84), float64], Tensor[(5, 2, 9), float32], Tensor[(90), float32], Tensor[(2, 14, 9), float32]) */;
    %618 = @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %619 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %620 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 15), float32] */;
    %621 = log10(%620) /* ty=Tensor[(5, 7, 15), float32] */;
    %622 = cast(%621, dtype="float64") /* ty=Tensor[(5, 7, 15), float64] */;
    %623 = atan(%622) /* ty=Tensor[(5, 7, 15), float64] */;
    %624 = cast(%621, dtype="uint64") /* ty=Tensor[(5, 7, 15), uint64] */;
    %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%623, dtype="uint64") /* ty=Tensor[(5, 7, 15), uint64] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %628 = minimum(%626, %627) /* ty=Tensor[(5, 7, 15), uint64] */;
    %629 = cast(%628, dtype="float32") /* ty=Tensor[(5, 7, 15), float32] */;
    %630 = acosh(%629) /* ty=Tensor[(5, 7, 15), float32] */;
    %631 = cast(%var_5796, dtype="int8") /* ty=Tensor[(5, 7, 15), int8] */;
    %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
    %633 = cast(%630, dtype="int8") /* ty=Tensor[(5, 7, 15), int8] */;
    %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %635 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
    %636 = %610.0;
    %637 = %617.4;
    %638 = %618.0;
    %639 = %619.1;
    %640 = logical_xor(%633, %634) /* ty=Tensor[(5, 7, 15), int8] */;
    (%635, %636, meta[relay.Constant][39] /* ty=Tensor[(2156), float64] */, %637, %var_5744, meta[relay.Constant][40] /* ty=Tensor[(252), float64] */, meta[relay.Constant][41] /* ty=Tensor[(1, 90), float32] */, %638, %639, %640)
  };
  %641(%var_5805, %var_5806) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */
}

def @func_4203(%var_4189: Tensor[(5, 4, 14), bool], %var_4190: Tensor[(5, 4, 14), bool], %var_4194: Tensor[(5, 4, 14), bool]) -> (Tensor[(5, 4, 14), bool], Tensor[(5, 4, 14), uint64], Tensor[(5, 4, 14), float64]) {
  %642 = cast(%var_4190, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %643 = shape_of(%var_4189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_4189, dtype="bool") /* ty=Tensor[(5, 4, 14), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = cast(%var_4194, dtype="uint64") /* ty=Tensor[(5, 4, 14), uint64] */;
  %647 = shape_of(%var_4190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%var_4190, dtype="uint64") /* ty=Tensor[(5, 4, 14), uint64] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %650 = cast(%var_4190, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %651 = logical_or(%644, %645) /* ty=Tensor[(5, 4, 14), bool] */;
  %652 = maximum(%648, %649) /* ty=Tensor[(5, 4, 14), uint64] */;
  %653 = rsqrt(%650) /* ty=Tensor[(5, 4, 14), float64] */;
  (%651, %652, %653)
}

def @func_1575(%var_1491: Tensor[(7, 52), float32], %var_1510: Tensor[(11, 14, 14), bool], %var_1531: Tensor[(90), float32], %var_1532: Tensor[(168), float32], %var_1549: Tensor[(416), float64]) -> (Tensor[(6, 13, 5), uint8], Tensor[(11, 14, 14), bool], Tensor[(7, 52), float64], Tensor[(11, 14, 14), float64], Tensor[(2, 15, 2), float64], Tensor[(1, 60), float64], Tensor[(90), float32], Tensor[(168), float32], Tensor[(2156), float64], Tensor[(416), float64], Tensor[(14, 2, 13), float32], Tensor[(11, 14, 14), float32], Tensor[(14, 154), float64], Tensor[(11, 14, 14), bool], Tensor[(5, 2, 9), float32]) {
  %654 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %655 = log10(%654) /* ty=Tensor[(6, 13, 5), float64] */;
  %656 = cast(%655, dtype="uint8") /* ty=Tensor[(6, 13, 5), uint8] */;
  %657 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(6, 13, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 13, 5), float64] */, dtype="uint8") /* ty=Tensor[(6, 13, 5), uint8] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %660 = cast(meta[relay.Constant][44] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %661 = cast(meta[relay.Constant][44] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %662 = reshape(%660, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %663 = reshape(%661, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %664 = @func_96(%662, %663) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %665 = cast(%var_1491, dtype="float64") /* ty=Tensor[(7, 52), float64] */;
  %666 = %664.0;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %668 = cast(%666, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %669 = reshape(%667, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %670 = reshape(%668, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %671 = @func_96(%669, %670) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %672 = %671.0;
  %673 = cast(%var_1510, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %674 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%672, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %677 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %678 = cast(%var_1531, dtype="float32") /* ty=Tensor[(90), float32] */;
  %679 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %680 = reshape(%677, newshape=[2, 15, 2]) /* ty=Tensor[(2, 15, 2), float64] */;
  %681 = reshape(%678, newshape=[15, 6]) /* ty=Tensor[(15, 6), float32] */;
  %682 = reshape(%679, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %683 = @func_957(%680, %681, %682) /* ty=(Tensor[(2, 15, 2), float64], Tensor[(5, 2, 9), float32], Tensor[(15, 6), float32], Tensor[(168), float32]) */;
  %684 = cast(%var_1549, dtype="float64") /* ty=Tensor[(416), float64] */;
  %685 = cast(%672, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %686 = reshape(%684, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
  %687 = reshape(%685, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
  %688 = @func_1333(%686, %687) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
  %689 = cast(%var_1491, dtype="float32") /* ty=Tensor[(7, 52), float32] */;
  %690 = cast(%var_1491, dtype="float32") /* ty=Tensor[(7, 52), float32] */;
  %691 = reshape(%689, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %692 = reshape(%690, newshape=[14, 2, 13]) /* ty=Tensor[(14, 2, 13), float32] */;
  %693 = @func_1038(%691, %692) /* ty=Tensor[(14, 2, 13), float32] */;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  %695 = cast(%var_1510, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %696 = sinh(%695) /* ty=Tensor[(11, 14, 14), float32] */;
  %697 = cast(meta[relay.Constant][44] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %701 = power(%699, %700) /* ty=Tensor[(11, 14, 14), float64] */;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %703 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %704 = reshape(%703, newshape=[2, 6, 14]) /* ty=Tensor[(2, 6, 14), float32] */;
  %705 = @func_172(%704) /* ty=(Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) */;
  %706 = cast(meta[relay.Constant][44] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %707 = asin(%702) /* ty=Tensor[(11, 14, 14), float32] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %709 = reshape(%706, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %710 = reshape(%708, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %711 = @func_96(%709, %710) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %712 = cast(%var_1531, dtype="float32") /* ty=Tensor[(90), float32] */;
  %713 = cast(%var_1532, dtype="float32") /* ty=Tensor[(168), float32] */;
  %714 = reshape(%712, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %715 = reshape(%713, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %716 = @func_590(%714, %715) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %717 = right_shift(%658, %659) /* ty=Tensor[(6, 13, 5), uint8] */;
  %718 = sinh(%665) /* ty=Tensor[(7, 52), float64] */;
  %719 = floor_mod(%675, %676) /* ty=Tensor[(11, 14, 14), float64] */;
  %720 = %683.0;
  %721 = %688.2;
  %722 = atan(%694) /* ty=Tensor[(14, 2, 13), float32] */;
  %723 = %705.2;
  %724 = %711.0;
  %725 = %716.0;
  (%717, %666, %718, %719, %720, meta[relay.Constant][45] /* ty=Tensor[(1, 60), float64] */, %var_1531, %var_1532, %721, %var_1549, %722, %707, %723, %724, %725)
}

def @func_6380() -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64]) {
  %733 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64]) {
    %726 = cast(meta[relay.Constant][46] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %727 = cast(meta[relay.Constant][46] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %728 = reshape(%726, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %729 = reshape(%727, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
    %730 = @func_96(%728, %729) /* ty=(Tensor[(11, 14, 14), bool],) */;
    %731 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
    %732 = %730.0;
    (%731, %732, meta[relay.Constant][46] /* ty=Tensor[(2156), float64] */)
  };
  %733() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64]) */
}

def @func_4453() -> (Tensor[(11, 14, 14), bool],) {
  %734 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %735 = %734.0;
  (%735,)
}

def @func_4455() -> (Tensor[(11, 14, 14), bool],) {
  @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */
}

def @func_6684(%var_6669: Tensor[(11, 12, 12), bool], %var_6670: Tensor[(11, 12, 12), bool], %var_6679: Tensor[(1, 60), float64]) -> (Tensor[(11, 12, 12), bool], Tensor[(13, 13, 11), bool], Tensor[(1, 1859), float32], Tensor[(1, 60), float64], Tensor[(6, 28), float32]) {
  %736 = cast(%var_6670, dtype="bool") /* ty=Tensor[(11, 12, 12), bool] */;
  %737 = shape_of(%var_6669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_6669, dtype="bool") /* ty=Tensor[(11, 12, 12), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %740 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1859), float32] */, dtype="float32") /* ty=Tensor[(1, 1859), float32] */;
  %741 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1859), float32] */, dtype="float32") /* ty=Tensor[(1, 1859), float32] */;
  %742 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1859), float32] */, dtype="float32") /* ty=Tensor[(1, 1859), float32] */;
  %743 = cast(%var_6679, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %744 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 28), float32] */, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %745 = reshape(%740, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float32] */;
  %746 = reshape(%741, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float32] */;
  %747 = reshape(%742, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float32] */;
  %748 = reshape(%743, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %749 = reshape(%744, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %750 = @func_1104(%745, %746, %747, %748, %749) /* ty=(Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), bool], Tensor[(13, 13, 11), float32], Tensor[(15, 6), float32], Tensor[(15, 4), float64], Tensor[(90), float32], Tensor[(168), float32]) */;
  %751 = logical_or(%738, %739) /* ty=Tensor[(11, 12, 12), bool] */;
  %752 = %750.1;
  (%751, %752, meta[relay.Constant][47] /* ty=Tensor[(1, 1859), float32] */, %var_6679, meta[relay.Constant][48] /* ty=Tensor[(6, 28), float32] */)
}

def @func_3773() -> Tensor[(168), float32] {
  %753 = @func_3601() /* ty=(Tensor[(168), float32],) */;
  %753.0
}

def @func_4703() -> (Tensor[(11, 14, 14), bool],) {
  %754 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %755 = %754.0;
  (%755,)
}

def @func_8246(%var_8244: Tensor[(1760), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(1760), float32], Tensor[(168), float32], Tensor[(10, 11, 16), float64]) {
  @func_8243(%var_8244) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1760), float32], Tensor[(168), float32], Tensor[(10, 11, 16), float64]) */
}

def @func_6625(%var_6619: int16) -> (Tensor[(2, 12, 6), bool],) {
  %756 = cast(%var_6619, dtype="bool") /* ty=bool */;
  %757 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 12, 6), int16] */, dtype="bool") /* ty=Tensor[(2, 12, 6), bool] */;
  %758 = less_equal(%756, %757) /* ty=Tensor[(2, 12, 6), bool] */;
  (%758,)
}

def @func_4920(%var_4918: Tensor[(112, 1), int8], %var_4919: Tensor[(168), float32]) -> (Tensor[(5, 11, 16), bool], Tensor[(112), int8], Tensor[(112, 1), int8], Tensor[(168), float32], Tensor[(3, 14, 11), float64], Tensor[(462), float64]) {
  %774 = fn (%var_4890: Tensor[(112, 1), int8], %var_4891: Tensor[(168), float32]) -> (Tensor[(5, 11, 16), bool], Tensor[(112), int8], Tensor[(112, 1), int8], Tensor[(168), float32], Tensor[(3, 14, 11), float64], Tensor[(462), float64]) {
    %759 = @func_2658() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %760 = %759.0;
    %761 = cast(%760, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
    %762 = cast(meta[relay.Constant][50] /* ty=Tensor[(5, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(5, 11, 16), bool] */;
    %763 = cast(%var_4890, dtype="int8") /* ty=Tensor[(112, 1), int8] */;
    %764 = cast(%var_4891, dtype="float32") /* ty=Tensor[(168), float32] */;
    %765 = reshape(%763, newshape=[112]) /* ty=Tensor[(112), int8] */;
    %766 = reshape(%764, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %767 = @func_3135(%765, %766) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8], Tensor[(14, 154), float64], Tensor[(90), float32], Tensor[(168), float32]) */;
    %768 = cast(meta[relay.Constant][51] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %769 = reshape(%768, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %770 = @func_445(%769) /* ty=(Tensor[(3, 14, 11), float64],) */;
    %771 = not_equal(%761, %762) /* ty=Tensor[(5, 11, 16), bool] */;
    %772 = %767.3;
    %773 = %770.0;
    (%771, %772, %var_4890, %var_4891, %773, meta[relay.Constant][51] /* ty=Tensor[(462), float64] */)
  };
  %774(%var_4918, %var_4919) /* ty=(Tensor[(5, 11, 16), bool], Tensor[(112), int8], Tensor[(112, 1), int8], Tensor[(168), float32], Tensor[(3, 14, 11), float64], Tensor[(462), float64]) */
}

def @func_2895() -> (Tensor[(8, 11, 16), bool], Tensor[(168), float32]) {
  %782 = fn () -> (Tensor[(8, 11, 16), bool], Tensor[(168), float32]) {
    %775 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %776 = %775.0;
    %777 = cast(%776, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
    %778 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 11, 16), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
    %779 = @func_2289() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(168), float32], Tensor[(168), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
    %780 = equal(%777, %778) /* ty=Tensor[(8, 11, 16), bool] */;
    %781 = %779.3;
    (%780, %781)
  };
  %782() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */
}

def @func_5377() -> (Tensor[(168), float32], Tensor[(144), float64]) {
  %783 = @func_3351() /* ty=(Tensor[(168), float32],) */;
  %784 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %785 = %783.0;
  %786 = %784.1;
  (%785, %786)
}

def @func_5591() -> (Tensor[(1, 11, 16), float32],) {
  %788 = fn () -> (Tensor[(1, 11, 16), float32],) {
    %787 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
    (%787,)
  };
  %788() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_5454() -> (Tensor[(1, 11, 16), float32],) {
  @func_5452() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_5654(%var_5652: Tensor[(10, 11, 16), float32]) -> (Tensor[(10, 11, 16), bool],) {
  @func_5651(%var_5652) /* ty=(Tensor[(10, 11, 16), bool],) */
}

def @func_2179(%var_2132: Tensor[(90), float32], %var_2150: Tensor[(81), float32]) -> (Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) {
  %789 = @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */;
  %790 = %789.0;
  %791 = cast(%790, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %792 = sin(%791) /* ty=Tensor[(8, 11, 16), float64] */;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %794 = cast(%var_2150, dtype="float32") /* ty=Tensor[(81), float32] */;
  %795 = reshape(%794, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
  %796 = @func_1990(%795) /* ty=(Tensor[(9, 3, 3), float32],) */;
  %797 = cast(%var_2132, dtype="float32") /* ty=Tensor[(90), float32] */;
  %798 = cast(meta[relay.Constant][53] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %799 = reshape(%797, newshape=[5, 2, 9]) /* ty=Tensor[(5, 2, 9), float32] */;
  %800 = reshape(%798, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %801 = @func_590(%799, %800) /* ty=(Tensor[(5, 2, 9), float32], Tensor[(14, 154), float64], Tensor[(168), float32]) */;
  %802 = %801.1;
  %803 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 154), float64] */, dtype="float32") /* ty=Tensor[(14, 154), float32] */;
  %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(2), int32] */;
  %805 = cast(%802, dtype="float32") /* ty=Tensor[(14, 154), float32] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %807 = tan(%793) /* ty=Tensor[(8, 11, 16), float64] */;
  %808 = %796.0;
  %809 = floor_mod(%805, %806) /* ty=Tensor[(14, 154), float32] */;
  (%var_2132, meta[relay.Constant][53] /* ty=Tensor[(168), float32] */, %807, %808, %var_2150, %809)
}

def @func_8567() -> (Tensor[(1, 11, 16), float64],) {
  @func_8565() /* ty=(Tensor[(1, 11, 16), float64],) */
}

def @func_4440() -> (Tensor[(1, 11, 16), float32],) {
  @func_4438() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_3945() -> (Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  %810 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %811 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %812 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %813 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %814 = %810.2;
  %815 = %811.0;
  %816 = %812.0;
  %817 = %813.0;
  (%814, %815, %816, %817)
}

def @func_8467() -> (Tensor[(11, 14, 14), float32],) {
  %822 = fn () -> (Tensor[(11, 14, 14), float32],) {
    %818 = @func_4703() /* ty=(Tensor[(11, 14, 14), bool],) */;
    %819 = %818.0;
    %820 = cast(%819, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
    %821 = log2(%820) /* ty=Tensor[(11, 14, 14), float32] */;
    (%821,)
  };
  %822() /* ty=(Tensor[(11, 14, 14), float32],) */
}

def @func_3351() -> (Tensor[(168), float32],) {
  %823 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
  %824 = %823.1;
  (%824,)
}

def @func_3308() -> (Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) {
  @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */
}

def @func_9018() -> Tensor[(168), float32] {
  @func_9016() /* ty=Tensor[(168), float32] */
}

def @func_3019() -> (Tensor[(1, 11, 16), float32],) {
  %825 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
  (%825,)
}

def @func_2733(%var_2732: Tensor[(81), float32]) -> (Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) {
  %833 = fn (%var_2699: Tensor[(81), float32]) -> (Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) {
    %826 = cast(%var_2699, dtype="float32") /* ty=Tensor[(81), float32] */;
    %827 = reshape(%826, newshape=[9, 3, 3]) /* ty=Tensor[(9, 3, 3), float32] */;
    %828 = @func_1990(%827) /* ty=(Tensor[(9, 3, 3), float32],) */;
    %829 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
    %830 = cast(%829, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
    %831 = %828.0;
    %832 = asin(%830) /* ty=Tensor[(1, 11, 16), float32] */;
    (%831, %var_2699, %832)
  };
  %833(%var_2732) /* ty=(Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_8717(%var_8715: Tensor[(1, 90), float32], %var_8716: Tensor[(2, 11, 16), bool]) -> (Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(1014), uint8], Tensor[(81), float32], Tensor[(3, 90), float32], Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(168), float32]) {
  %859 = fn (%var_8664: Tensor[(1, 90), float32], %var_8680: Tensor[(2, 11, 16), bool]) -> (Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(1014), uint8], Tensor[(81), float32], Tensor[(3, 90), float32], Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(168), float32]) {
    %834 = @func_7738() /* ty=(Tensor[(168), float32],) */;
    %835 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %836 = cast(%var_8664, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
    %837 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 90), float32] */, dtype="float32") /* ty=Tensor[(3, 90), float32] */;
    %838 = cast(meta[relay.Constant][55] /* ty=Tensor[(1014), uint8] */, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
    %839 = cast(meta[relay.Constant][55] /* ty=Tensor[(1014), uint8] */, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
    %840 = cast(%var_8664, dtype="float32") /* ty=Tensor[(1, 90), float32] */;
    %841 = cast(meta[relay.Constant][56] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
    %842 = reshape(%838, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), uint8] */;
    %843 = reshape(%839, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), uint8] */;
    %844 = reshape(%840, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %845 = reshape(%841, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %846 = @func_5618(%842, %843, %844, %845) /* ty=(Tensor[(13, 13, 6), bool], Tensor[(9, 3, 3), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(2, 11, 16), bool], Tensor[(352), float32]) */;
    %847 = %846.4;
    %848 = cast(%var_8680, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
    %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
    %850 = cast(%847, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
    %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %852 = @func_7380() /* ty=(Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) */;
    %853 = %834.0;
    %854 = %835.0;
    %855 = floor_divide(%836, %837) /* ty=Tensor[(3, 90), float32] */;
    %856 = greater(%850, %851) /* ty=Tensor[(2, 11, 16), bool] */;
    %857 = @func_7063() /* ty=Tensor[(1, 11, 16), float32] */;
    %858 = %852.0;
    (%853, %854, meta[relay.Constant][55] /* ty=Tensor[(1014), uint8] */, meta[relay.Constant][56] /* ty=Tensor[(81), float32] */, %855, %856, %857, %858)
  };
  %859(%var_8715, %var_8716) /* ty=(Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(1014), uint8], Tensor[(81), float32], Tensor[(3, 90), float32], Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(168), float32]) */
}

def @func_2377() -> (Tensor[(1, 11, 16), float32],) {
  %860 = @func_2035() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %861 = %860.0;
  (%861,)
}

def @func_6756(%var_6736: Tensor[(8, 14, 1), uint16]) -> (Tensor[(8, 14, 1), bool], Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32]) {
  %862 = cast(meta[relay.Constant][58] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %863 = cast(%var_6736, dtype="bool") /* ty=Tensor[(8, 14, 1), bool] */;
  %864 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %865 = greater(%862, %863) /* ty=Tensor[(8, 14, 1), bool] */;
  %866 = %864.0;
  %867 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  (%865, %866, %867)
}

def @func_7380() -> (Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) {
  %868 = @func_6575() /* ty=(Tensor[(144), float64], Tensor[(1, 11, 16), float32], Tensor[(168), float32], Tensor[(112), int8], Tensor[(6, 28), float32]) */;
  %869 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %870 = cast(meta[relay.Constant][59] /* ty=Tensor[(18, 1), float64] */, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %871 = cast(meta[relay.Constant][60] /* ty=Tensor[(525), float32] */, dtype="float32") /* ty=Tensor[(525), float32] */;
  %872 = reshape(%870, newshape=[3, 6]) /* ty=Tensor[(3, 6), float64] */;
  %873 = reshape(%871, newshape=[5, 7, 15]) /* ty=Tensor[(5, 7, 15), float32] */;
  %874 = @func_5804(%872, %873) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(5, 2, 9), float32], Tensor[(3, 6), float64], Tensor[(252), float64], Tensor[(1, 90), float32], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(5, 7, 15), int8]) */;
  %875 = cast(meta[relay.Constant][59] /* ty=Tensor[(18, 1), float64] */, dtype="int32") /* ty=Tensor[(18, 1), int32] */;
  %876 = cast(meta[relay.Constant][60] /* ty=Tensor[(525), float32] */, dtype="int32") /* ty=Tensor[(525), int32] */;
  %877 = %868.2;
  %878 = %869.1;
  %879 = %874.4;
  %880 = bitwise_or(%875, %876) /* ty=Tensor[(18, 525), int32] */;
  (%877, %878, %879, %880)
}

def @func_8900() -> (Tensor[(1, 11, 16), float32], Tensor[(14, 2, 13), float32]) {
  %884 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(14, 2, 13), float32]) {
    %881 = @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */;
    %882 = @func_5867() /* ty=Tensor[(1, 11, 16), float32] */;
    %883 = %881.1;
    (%882, %883)
  };
  %884() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(14, 2, 13), float32]) */
}

def @func_7382() -> (Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) {
  @func_7380() /* ty=(Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) */
}

def @func_6689(%var_6686: Tensor[(11, 12, 12), bool], %var_6687: Tensor[(11, 12, 12), bool], %var_6688: Tensor[(1, 60), float64]) -> (Tensor[(11, 12, 12), bool], Tensor[(13, 13, 11), bool], Tensor[(1, 1859), float32], Tensor[(1, 60), float64], Tensor[(6, 28), float32]) {
  @func_6684(%var_6686, %var_6687, %var_6688) /* ty=(Tensor[(11, 12, 12), bool], Tensor[(13, 13, 11), bool], Tensor[(1, 1859), float32], Tensor[(1, 60), float64], Tensor[(6, 28), float32]) */
}

def @func_1972() -> (Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) {
  @func_1970() /* ty=(Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) */
}

def @func_8531(%var_8525: Tensor[(525), float32], %var_8526: Tensor[(2156), float64], %var_8527: Tensor[(81), float32], %var_8528: Tensor[(42), float32], %var_8529: Tensor[(84), float32], %var_8530: Tensor[(56, 2), uint16]) -> (Tensor[(1, 11, 16), float32], Tensor[(525), float32], Tensor[(525), float32], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(3, 14, 2), float32], Tensor[(42), float32], Tensor[(84), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool], Tensor[(56, 2), uint16], Tensor[(81), float32]) {
  %913 = fn (%var_8490: Tensor[(525), float32], %var_8491: Tensor[(2156), float64], %var_8499: Tensor[(81), float32], %var_8514: Tensor[(42), float32], %var_8515: Tensor[(84), float32], %var_8519: Tensor[(56, 2), uint16]) -> (Tensor[(1, 11, 16), float32], Tensor[(525), float32], Tensor[(525), float32], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(3, 14, 2), float32], Tensor[(42), float32], Tensor[(84), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool], Tensor[(56, 2), uint16], Tensor[(81), float32]) {
    %885 = cast(%var_8490, dtype="float32") /* ty=Tensor[(525), float32] */;
    %886 = cast(%var_8491, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %887 = reshape(%885, newshape=[525]) /* ty=Tensor[(525), float32] */;
    %888 = reshape(%886, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
    %889 = @func_6722(%887, %888) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(18), float64], Tensor[(525), float32], Tensor[(1, 11, 16), float32], Tensor[(2156), int16]) */;
    %890 = @func_3223() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(14, 2, 13), float32], Tensor[(364), float32]) */;
    %891 = cast(%var_8499, dtype="float32") /* ty=Tensor[(81), float32] */;
    %892 = reshape(%891, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %893 = @func_2731(%892) /* ty=(Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32]) */;
    %894 = cast(%var_8514, dtype="float32") /* ty=Tensor[(42), float32] */;
    %895 = cast(%var_8515, dtype="float32") /* ty=Tensor[(84), float32] */;
    %896 = cast(meta[relay.Constant][61] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %897 = reshape(%894, newshape=[3, 14, 1]) /* ty=Tensor[(3, 14, 1), float32] */;
    %898 = reshape(%895, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), float32] */;
    %899 = reshape(%896, newshape=[416]) /* ty=Tensor[(416), float64] */;
    %900 = @func_1801(%897, %898, %899) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(364), float32], Tensor[(416), float64], Tensor[(2156), float64]) */;
    %901 = cast(%var_8519, dtype="uint16") /* ty=Tensor[(56, 2), uint16] */;
    %902 = reshape(%901, newshape=[8, 14, 1]) /* ty=Tensor[(8, 14, 1), uint16] */;
    %903 = @func_6756(%902) /* ty=(Tensor[(8, 14, 1), bool], Tensor[(11, 14, 14), bool], Tensor[(1, 11, 16), float32]) */;
    %904 = cast(%var_8499, dtype="float32") /* ty=Tensor[(81), float32] */;
    %905 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
    %906 = %889.2;
    %907 = %890.1;
    %908 = %893.1;
    %909 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
    %910 = %900.0;
    %911 = %903.1;
    %912 = tan(%904) /* ty=Tensor[(81), float32] */;
    (%905, %906, %var_8490, %var_8491, %907, %908, %909, %910, %var_8514, %var_8515, meta[relay.Constant][61] /* ty=Tensor[(416), float64] */, %911, %var_8519, %912)
  };
  %913(%var_8525, %var_8526, %var_8527, %var_8528, %var_8529, %var_8530) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(525), float32], Tensor[(525), float32], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(3, 14, 2), float32], Tensor[(42), float32], Tensor[(84), float32], Tensor[(416), float64], Tensor[(11, 14, 14), bool], Tensor[(56, 2), uint16], Tensor[(81), float32]) */
}

def @func_7995() -> (Tensor[(168), float32],) {
  %916 = fn () -> (Tensor[(168), float32],) {
    %914 = @func_5377() /* ty=(Tensor[(168), float32], Tensor[(144), float64]) */;
    %915 = %914.0;
    (%915,)
  };
  %916() /* ty=(Tensor[(168), float32],) */
}

def @func_1970() -> (Tensor[(8, 11, 16), float64], Tensor[(1, 11, 16), float32]) {
  %917 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %918 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %919 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 11, 16), float64] */, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %920 = floor_mod(%917, %918) /* ty=Tensor[(8, 11, 16), float64] */;
  %921 = atan(%919) /* ty=Tensor[(1, 11, 16), float32] */;
  (%920, %921)
}

def @func_8170(%var_8168: Tensor[(18), float64], %var_8169: Tensor[(252), float64]) -> (Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2, 14, 9), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(18, 525), float32]) {
  %940 = fn (%var_8082: Tensor[(18), float64], %var_8083: Tensor[(252), float64]) -> (Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2, 14, 9), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(18, 525), float32]) {
    %922 = @func_3351() /* ty=(Tensor[(168), float32],) */;
    %923 = @func_2377() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %924 = cast(%var_8082, dtype="float64") /* ty=Tensor[(18), float64] */;
    %925 = cast(%var_8083, dtype="float64") /* ty=Tensor[(252), float64] */;
    %926 = reshape(%924, newshape=[2, 1, 9]) /* ty=Tensor[(2, 1, 9), float64] */;
    %927 = reshape(%925, newshape=[2, 14, 9]) /* ty=Tensor[(2, 14, 9), float64] */;
    %928 = @func_1288(%926, %927) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), float32], Tensor[(2, 14, 9), float32]) */;
    %929 = @func_7380() /* ty=(Tensor[(168), float32], Tensor[(8, 11, 16), bool], Tensor[(3, 6), float64], Tensor[(18, 525), int32]) */;
    %930 = %929.3;
    %931 = cast(%930, dtype="float32") /* ty=Tensor[(18, 525), float32] */;
    %932 = asin(%931) /* ty=Tensor[(18, 525), float32] */;
    %933 = cast(%932, dtype="float64") /* ty=Tensor[(18, 525), float64] */;
    %934 = sigmoid(%933) /* ty=Tensor[(18, 525), float64] */;
    %935 = cast(%934, dtype="float32") /* ty=Tensor[(18, 525), float32] */;
    %936 = %922.0;
    %937 = %923.0;
    %938 = %928.1;
    %939 = log2(%935) /* ty=Tensor[(18, 525), float32] */;
    (%936, %937, %938, %var_8082, %var_8083, %939)
  };
  %940(%var_8168, %var_8169) /* ty=(Tensor[(168), float32], Tensor[(1, 11, 16), float32], Tensor[(2, 14, 9), float32], Tensor[(18), float64], Tensor[(252), float64], Tensor[(18, 525), float32]) */
}

def @func_4026() -> Tensor[(1, 11, 16), float32] {
  @func_4024() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_5268() -> (Tensor[(1, 11, 16), float32],) {
  @func_5266() /* ty=(Tensor[(1, 11, 16), float32],) */
}

def @func_96(%var_83: Tensor[(11, 14, 14), float64], %var_84: Tensor[(11, 14, 14), float64]) -> (Tensor[(11, 14, 14), bool],) {
  %941 = cast(%var_84, dtype="bool") /* ty=Tensor[(11, 14, 14), bool] */;
  %942 = shape_of(%var_83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%var_83, dtype="bool") /* ty=Tensor[(11, 14, 14), bool] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %945 = greater(%943, %944) /* ty=Tensor[(11, 14, 14), bool] */;
  (%945,)
}

def @func_7939() -> (Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  %950 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
    %946 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %947 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %948 = %946.0;
    %949 = %947.0;
    (%948, %949)
  };
  %950() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_7567(%var_7566: Tensor[(11, 14, 14), bool]) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), int8], Tensor[(8, 11, 16), bool], Tensor[(8, 11, 16), float64]) {
  %964 = fn (%var_7547: Tensor[(11, 14, 14), bool]) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), int8], Tensor[(8, 11, 16), bool], Tensor[(8, 11, 16), float64]) {
    %951 = @func_5266() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %952 = @func_4453() /* ty=(Tensor[(11, 14, 14), bool],) */;
    %953 = %952.0;
    %954 = cast(%var_7547, dtype="int8") /* ty=Tensor[(11, 14, 14), int8] */;
    %955 = shape_of(%953, dtype="int32") /* ty=Tensor[(3), int32] */;
    %956 = cast(%953, dtype="int8") /* ty=Tensor[(11, 14, 14), int8] */;
    %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %958 = @func_5483() /* ty=(Tensor[(8, 11, 16), bool],) */;
    %959 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %960 = %951.0;
    %961 = multiply(%956, %957) /* ty=Tensor[(11, 14, 14), int8] */;
    %962 = %958.0;
    %963 = %959.2;
    (%960, %961, %962, %963)
  };
  %964(%var_7566) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), int8], Tensor[(8, 11, 16), bool], Tensor[(8, 11, 16), float64]) */
}

def @func_5158() -> (Tensor[(11, 14, 14), float32], Tensor[(11, 14, 14), float64], Tensor[(?, 11, 16), float32], Tensor[(11, 14, 14), float32]) {
  %965 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %966 = %965.0;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %968 = cast(%966, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %969 = @func_3306() /* ty=(Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) */;
  %970 = cast(%966, dtype="float64") /* ty=Tensor[(11, 14, 14), float64] */;
  %971 = tan(%970) /* ty=Tensor[(11, 14, 14), float64] */;
  %972 = cast(%971, dtype="float32") /* ty=Tensor[(11, 14, 14), float32] */;
  %973 = sin(%967) /* ty=Tensor[(11, 14, 14), float32] */;
  %974 = atan(%968) /* ty=Tensor[(11, 14, 14), float64] */;
  %975 = %969.2;
  %976 = sigmoid(%972) /* ty=Tensor[(11, 14, 14), float32] */;
  (%973, %974, %975, %976)
}

def @func_8356() -> Tensor[(1, 11, 16), float64] {
  %977 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %978 = %977.1;
  %979 = cast(%978, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  exp(%979) /* ty=Tensor[(1, 11, 16), float64] */
}

def @func_8331() -> (Tensor[(1, 11, 16), float64],) {
  %980 = @func_4024() /* ty=Tensor[(1, 11, 16), float32] */;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %982 = log(%981) /* ty=Tensor[(1, 11, 16), float64] */;
  (%982,)
}

def @func_4744(%var_4742: Tensor[(12, 15, 8), int8], %var_4743: Tensor[(12, 15, 8), int8]) -> (Tensor[(12, 15, 8), int8],) {
  @func_4740(%var_4742, %var_4743) /* ty=(Tensor[(12, 15, 8), int8],) */
}

def @func_6925(%var_6923: Tensor[(3, 11, 16), float32]) -> (Tensor[(3, 11, 16), bool],) {
  @func_6922(%var_6923) /* ty=(Tensor[(3, 11, 16), bool],) */
}

def @func_8730() -> (Tensor[(168), float32],) {
  %983 = @func_7419() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(112), int8], Tensor[(168), float32]) */;
  %984 = %983.3;
  (%984,)
}

def @func_3306() -> (Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(?, 11, 16), float32]) {
  %985 = cast(meta[relay.Constant][64] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %986 = reshape(%985, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
  %987 = @func_2190(%986) /* ty=(Tensor[(9, 2, 8), float64],) */;
  %988 = @func_2406() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %989 = %988.0;
  %990 = cast(%989, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %991 = acosh(%990) /* ty=Tensor[(1, 11, 16), float64] */;
  %992 = cast(%991, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %993 = cosh(%992) /* ty=Tensor[(1, 11, 16), float64] */;
  %994 = cast(%989, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="float32") /* ty=Tensor[(1, 11, 16), float32] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %998 = %987.0;
  %999 = floor_divide(%996, %997) /* ty=Tensor[(?, 11, 16), float32] */;
  (%998, meta[relay.Constant][64] /* ty=Tensor[(144), float64] */, %999)
}

def @func_5618(%var_5595: Tensor[(13, 13, 6), uint8], %var_5596: Tensor[(13, 13, 6), uint8], %var_5604: Tensor[(90), float32], %var_5605: Tensor[(81), float32]) -> (Tensor[(13, 13, 6), bool], Tensor[(9, 3, 3), float32], Tensor[(90), float32], Tensor[(81), float32], Tensor[(2, 11, 16), bool], Tensor[(352), float32]) {
  %1000 = cast(%var_5596, dtype="bool") /* ty=Tensor[(13, 13, 6), bool] */;
  %1001 = shape_of(%var_5595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%var_5595, dtype="bool") /* ty=Tensor[(13, 13, 6), bool] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1004 = cast(%var_5604, dtype="float32") /* ty=Tensor[(90), float32] */;
  %1005 = cast(%var_5605, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1006 = reshape(%1004, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %1007 = reshape(%1005, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %1008 = @func_2179(%1006, %1007) /* ty=(Tensor[(90), float32], Tensor[(168), float32], Tensor[(8, 11, 16), float64], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(14, 154), float32]) */;
  %1009 = cast(meta[relay.Constant][65] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %1010 = reshape(%1009, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), float32] */;
  %1011 = @func_5228(%1010) /* ty=(Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %1012 = not_equal(%1002, %1003) /* ty=Tensor[(13, 13, 6), bool] */;
  %1013 = %1008.3;
  %1014 = %1011.0;
  (%1012, %1013, %var_5604, %var_5605, %1014, meta[relay.Constant][65] /* ty=Tensor[(352), float32] */)
}

def @func_5409() -> (Tensor[(1, 11, 16), float32],) {
  %1015 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
  %1016 = %1015.1;
  (%1016,)
}

def @func_172(%var_162: Tensor[(2, 6, 14), float32]) -> (Tensor[(2, 6, 14), float32], Tensor[(11, 14, 14), bool], Tensor[(14, 154), float64]) {
  %1017 = cast(%var_162, dtype="float32") /* ty=Tensor[(2, 6, 14), float32] */;
  %1018 = cast(meta[relay.Constant][66] /* ty=Tensor[(14, 154), float64] */, dtype="float64") /* ty=Tensor[(14, 154), float64] */;
  %1019 = cast(meta[relay.Constant][66] /* ty=Tensor[(14, 154), float64] */, dtype="float64") /* ty=Tensor[(14, 154), float64] */;
  %1020 = reshape(%1018, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %1021 = reshape(%1019, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %1022 = @func_96(%1020, %1021) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %1023 = atan(%1017) /* ty=Tensor[(2, 6, 14), float32] */;
  %1024 = %1022.0;
  (%1023, %1024, meta[relay.Constant][66] /* ty=Tensor[(14, 154), float64] */)
}

def @func_8732() -> (Tensor[(168), float32],) {
  @func_8730() /* ty=(Tensor[(168), float32],) */
}

def @func_5910() -> Tensor[(8, 11, 16), bool] {
  %1025 = @func_3945() /* ty=(Tensor[(?, 11, 16), float32], Tensor[(8, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */;
  %1025.1
}

def @func_1805(%var_1802: Tensor[(3, 14, 1), float32], %var_1803: Tensor[(3, 14, 2), float32], %var_1804: Tensor[(416), float64]) -> (Tensor[(3, 14, 2), float32], Tensor[(364), float32], Tensor[(416), float64], Tensor[(2156), float64]) {
  %1035 = fn (%var_1779: Tensor[(3, 14, 1), float32], %var_1780: Tensor[(3, 14, 2), float32], %var_1790: Tensor[(416), float64]) -> (Tensor[(3, 14, 2), float32], Tensor[(364), float32], Tensor[(416), float64], Tensor[(2156), float64]) {
    %1026 = cast(%var_1779, dtype="float32") /* ty=Tensor[(3, 14, 1), float32] */;
    %1027 = cast(%var_1780, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
    %1028 = cast(%var_1790, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1029 = cast(meta[relay.Constant][67] /* ty=Tensor[(2156), float64] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %1030 = reshape(%1028, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
    %1031 = reshape(%1029, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
    %1032 = @func_1333(%1030, %1031) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
    %1033 = floor_divide(%1026, %1027) /* ty=Tensor[(3, 14, 2), float32] */;
    %1034 = %1032.4;
    (%1033, %1034, %var_1790, meta[relay.Constant][67] /* ty=Tensor[(2156), float64] */)
  };
  %1035(%var_1802, %var_1803, %var_1804) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(364), float32], Tensor[(416), float64], Tensor[(2156), float64]) */
}

def @func_7063() -> Tensor[(1, 11, 16), float32] {
  @func_2613() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_9023() -> (Tensor[(11, 14, 14), bool],) {
  %1036 = @func_3361() /* ty=(Tensor[(11, 14, 14), bool],) */;
  %1037 = %1036.0;
  (%1037,)
}

def @func_5068(%var_5066: Tensor[(8, 11, 16), float32], %var_5067: Tensor[(2, 56), int8]) -> (Tensor[(8, 11, 16), bool], Tensor[(81), float32], Tensor[(81), float32], Tensor[(2, 56), int8]) {
  %1049 = fn (%var_5043: Tensor[(8, 11, 16), float32], %var_5059: Tensor[(2, 56), int8]) -> (Tensor[(8, 11, 16), bool], Tensor[(81), float32], Tensor[(81), float32], Tensor[(2, 56), int8]) {
    %1038 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %1039 = %1038.1;
    %1040 = cast(%1039, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
    %1041 = cast(%var_5043, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
    %1042 = cast(meta[relay.Constant][68] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
    %1043 = cast(%var_5059, dtype="int8") /* ty=Tensor[(2, 56), int8] */;
    %1044 = reshape(%1042, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %1045 = reshape(%1043, newshape=[112]) /* ty=Tensor[(112), int8] */;
    %1046 = @func_2946(%1044, %1045) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */;
    %1047 = logical_and(%1040, %1041) /* ty=Tensor[(8, 11, 16), bool] */;
    %1048 = %1046.2;
    (%1047, %1048, meta[relay.Constant][68] /* ty=Tensor[(81), float32] */, %var_5059)
  };
  %1049(%var_5066, %var_5067) /* ty=(Tensor[(8, 11, 16), bool], Tensor[(81), float32], Tensor[(81), float32], Tensor[(2, 56), int8]) */
}

def @func_2614() -> Tensor[(1, 11, 16), float32] {
  %1051 = fn () -> Tensor[(1, 11, 16), float32] {
    %1050 = @func_2331() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32], Tensor[(8, 11, 16), float64]) */;
    %1050.1
  };
  %1051() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_4624() -> Tensor[(1, 11, 16), float32] {
  @func_4622() /* ty=Tensor[(1, 11, 16), float32] */
}

def @func_448(%var_446: Tensor[(3, 14, 11), float64]) -> (Tensor[(3, 14, 11), float64],) {
  @func_445(%var_446) /* ty=(Tensor[(3, 14, 11), float64],) */
}

def @func_4072(%var_4063: Tensor[(2156), float64], %var_4070: int8) -> (Tensor[(1, 11, 16), float32], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 16, 10), float32], Tensor[(1, 224), float32], int8) {
  %1052 = @func_2658() /* ty=(Tensor[(1, 11, 16), float32],) */;
  %1053 = cast(%var_4063, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %1054 = cast(%var_4063, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %1055 = reshape(%1053, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %1056 = reshape(%1054, newshape=[11, 14, 14]) /* ty=Tensor[(11, 14, 14), float64] */;
  %1057 = @func_96(%1055, %1056) /* ty=(Tensor[(11, 14, 14), bool],) */;
  %1058 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 224), float32] */, dtype="float32") /* ty=Tensor[(1, 224), float32] */;
  %1059 = cast(%var_4070, dtype="int8") /* ty=int8 */;
  %1060 = reshape(%1058, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %1061 = reshape(%1059, newshape=[]) /* ty=int8 */;
  %1062 = @func_2837(%1060, %1061) /* ty=(Tensor[(14, 16, 10), float32], Tensor[(4, 4, 7), int8], int8, Tensor[(112), int8], Tensor[(1, 11, 16), float32]) */;
  %1063 = %1052.0;
  %1064 = %1057.0;
  %1065 = %1062.0;
  (%1063, %1064, %var_4063, %1065, meta[relay.Constant][69] /* ty=Tensor[(1, 224), float32] */, %var_4070)
}

def @func_5912() -> Tensor[(8, 11, 16), bool] {
  @func_5910() /* ty=Tensor[(8, 11, 16), bool] */
}

def @func_7738() -> (Tensor[(168), float32],) {
  %1066 = @func_3773() /* ty=Tensor[(168), float32] */;
  (%1066,)
}

def @func_3527(%var_3525: Tensor[(2156), float64], %var_3526: Tensor[(81), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(16, 2, 13), float64], Tensor[(416), float64], Tensor[(2156), float64], Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(81), uint8]) {
  %1090 = fn (%var_3493: Tensor[(2156), float64], %var_3503: Tensor[(81), float32]) -> (Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(16, 2, 13), float64], Tensor[(416), float64], Tensor[(2156), float64], Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(81), uint8]) {
    %1067 = @func_3019() /* ty=(Tensor[(1, 11, 16), float32],) */;
    %1068 = cast(meta[relay.Constant][70] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1069 = reshape(%1068, newshape=[9, 2, 8]) /* ty=Tensor[(9, 2, 8), float64] */;
    %1070 = @func_2190(%1069) /* ty=(Tensor[(9, 2, 8), float64],) */;
    %1071 = cast(meta[relay.Constant][71] /* ty=Tensor[(416), float64] */, dtype="float64") /* ty=Tensor[(416), float64] */;
    %1072 = cast(%var_3493, dtype="float64") /* ty=Tensor[(2156), float64] */;
    %1073 = reshape(%1071, newshape=[16, 2, 13]) /* ty=Tensor[(16, 2, 13), float64] */;
    %1074 = reshape(%1072, newshape=[2156]) /* ty=Tensor[(2156), float64] */;
    %1075 = @func_1333(%1073, %1074) /* ty=(Tensor[(16, 2, 13), float64], Tensor[(11, 14, 14), bool], Tensor[(2156), float64], Tensor[(14, 2, 13), float32], Tensor[(364), float32], Tensor[(11, 14, 14), float64]) */;
    %1076 = cast(%var_3503, dtype="float32") /* ty=Tensor[(81), float32] */;
    %1077 = cast(meta[relay.Constant][72] /* ty=Tensor[(112), int8] */, dtype="int8") /* ty=Tensor[(112), int8] */;
    %1078 = reshape(%1076, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %1079 = reshape(%1077, newshape=[112]) /* ty=Tensor[(112), int8] */;
    %1080 = @func_2946(%1078, %1079) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 3, 3), float32], Tensor[(81), float32], Tensor[(1, 11, 16), float32], Tensor[(4, 4, 7), float32], int8, Tensor[(112), int8]) */;
    %1081 = cast(meta[relay.Constant][73] /* ty=Tensor[(81), float32] */, dtype="uint8") /* ty=Tensor[(81), uint8] */;
    %1082 = shape_of(%var_3503, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1083 = cast(%var_3503, dtype="uint8") /* ty=Tensor[(81), uint8] */;
    %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1085 = %1067.0;
    %1086 = %1070.0;
    %1087 = %1075.0;
    %1088 = %1080.0;
    %1089 = subtract(%1083, %1084) /* ty=Tensor[(81), uint8] */;
    (%1085, %1086, meta[relay.Constant][70] /* ty=Tensor[(144), float64] */, %1087, meta[relay.Constant][71] /* ty=Tensor[(416), float64] */, %var_3493, %1088, meta[relay.Constant][72] /* ty=Tensor[(112), int8] */, %1089)
  };
  %1090(%var_3525, %var_3526) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(9, 2, 8), float64], Tensor[(144), float64], Tensor[(16, 2, 13), float64], Tensor[(416), float64], Tensor[(2156), float64], Tensor[(1, 11, 16), float32], Tensor[(112), int8], Tensor[(81), uint8]) */
}

def @func_4208(%var_4205: Tensor[(5, 4, 14), bool], %var_4206: Tensor[(5, 4, 14), bool], %var_4207: Tensor[(5, 4, 14), bool]) -> (Tensor[(5, 4, 14), bool], Tensor[(5, 4, 14), uint64], Tensor[(5, 4, 14), float64]) {
  @func_4203(%var_4205, %var_4206, %var_4207) /* ty=(Tensor[(5, 4, 14), bool], Tensor[(5, 4, 14), uint64], Tensor[(5, 4, 14), float64]) */
}

def @func_6822() -> (Tensor[(1, 11, 16), float32], Tensor[(168), float32]) {
  %1094 = fn () -> (Tensor[(1, 11, 16), float32], Tensor[(168), float32]) {
    %1091 = @func_3601() /* ty=(Tensor[(168), float32],) */;
    %1092 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
    %1093 = %1091.0;
    (%1092, %1093)
  };
  %1094() /* ty=(Tensor[(1, 11, 16), float32], Tensor[(168), float32]) */
}

def @func_5230(%var_5229: Tensor[(2, 11, 16), float32]) -> (Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
  %1101 = fn (%var_5193: Tensor[(2, 11, 16), float32]) -> (Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) {
    %1095 = @func_2613() /* ty=Tensor[(1, 11, 16), float32] */;
    %1096 = cast(%1095, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
    %1097 = cast(%var_5193, dtype="bool") /* ty=Tensor[(2, 11, 16), bool] */;
    %1098 = logical_or(%1096, %1097) /* ty=Tensor[(2, 11, 16), bool] */;
    %1099 = @func_4622() /* ty=Tensor[(1, 11, 16), float32] */;
    %1100 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
    (%1098, %1099, %1100)
  };
  %1101(%var_5229) /* ty=(Tensor[(2, 11, 16), bool], Tensor[(1, 11, 16), float32], Tensor[(1, 11, 16), float32]) */
}

def @func_3775() -> Tensor[(168), float32] {
  @func_3773() /* ty=Tensor[(168), float32] */
}

def @func_445(%var_399: Tensor[(3, 14, 11), float64]) -> (Tensor[(3, 14, 11), float64],) {
  %1102 = cast(meta[relay.Constant][74] /* ty=Tensor[(3, 14, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 14, 11), bool] */;
  %1103 = shape_of(%var_399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%var_399, dtype="bool") /* ty=Tensor[(3, 14, 11), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = equal(%1104, %1105) /* ty=Tensor[(3, 14, 11), bool] */;
  %1107 = cast(meta[relay.Constant][75] /* ty=Tensor[(3, 14, 11), bool] */, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %1108 = shape_of(%1106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%1106, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1111 = minimum(%1109, %1110) /* ty=Tensor[(3, 14, 11), float32] */;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %1113 = acosh(%1112) /* ty=Tensor[(3, 14, 11), float64] */;
  (%1113,)
}

def @func_7258(%var_7256: Tensor[(1, 3, 16), bool], %var_7257: Tensor[(7, 3, 16), bool]) -> (Tensor[(7, 3, 16), bool],) {
  @func_7254(%var_7256, %var_7257) /* ty=(Tensor[(7, 3, 16), bool],) */
}

def @func_6455(%var_6453: Tensor[(132, 2), float64]) -> (Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(60), float64], Tensor[(132, 2), float64]) {
  @func_6452(%var_6453) /* ty=(Tensor[(1, 11, 16), float32], Tensor[(6, 4, 11), float64], Tensor[(60), float64], Tensor[(132, 2), float64]) */
}

def @func_8333() -> (Tensor[(1, 11, 16), float64],) {
  @func_8331() /* ty=(Tensor[(1, 11, 16), float64],) */
}

def @func_5651(%var_5638: Tensor[(10, 11, 16), float32]) -> (Tensor[(10, 11, 16), bool],) {
  %1114 = @func_2344() /* ty=Tensor[(1, 11, 16), float32] */;
  %1115 = cast(%1114, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %1116 = cast(%var_5638, dtype="bool") /* ty=Tensor[(10, 11, 16), bool] */;
  %1117 = not_equal(%1115, %1116) /* ty=Tensor[(10, 11, 16), bool] */;
  (%1117,)
}

def @func_5484() -> (Tensor[(8, 11, 16), bool],) {
  %1120 = fn () -> (Tensor[(8, 11, 16), bool],) {
    %1118 = @func_2894() /* ty=(Tensor[(8, 11, 16), bool], Tensor[(168), float32]) */;
    %1119 = %1118.0;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(8, 11, 16), bool],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

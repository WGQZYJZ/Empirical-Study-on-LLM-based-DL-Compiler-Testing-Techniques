import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_272 = relay.const([[[9,-7,9,6,4,-8,-1,-5,-8,6,-8,3],[9,-2,-3,-5,10,-1,4,6,-1,10,-5,-10],[7,-2,-6,-10,-4,3,3,-2,-8,1,-2,-1],[-1,-4,6,-1,9,-10,8,-9,-4,-2,8,7],[8,-9,5,1,3,-4,9,-3,-9,-3,-3,-1],[-3,-2,-6,-1,9,5,2,-3,1,-3,3,9],[1,8,4,-10,2,-2,-3,5,10,7,5,-6],[-7,7,7,1,9,3,-1,-10,7,3,2,-3],[7,-6,-1,-9,1,10,3,7,3,5,3,6],[7,9,9,-4,5,1,2,4,-7,3,-6,-3],[-10,-2,4,-2,-9,-4,4,-7,10,5,-7,7]],[[-5,-3,3,-1,-4,6,1,3,-1,-2,-7,-6],[-6,-10,1,-4,-8,-9,-7,-3,-3,1,7,8],[2,-4,7,-5,10,6,3,-10,-9,1,9,-6],[-3,8,4,-9,-6,-5,-3,-5,-6,-6,1,1],[5,7,-5,10,-2,7,4,2,9,2,8,4],[-8,-6,-8,-10,-6,-9,-10,9,7,7,4,-3],[7,-4,5,-2,10,-2,2,1,9,-10,-1,10],[-5,-3,-8,-1,-6,-3,-4,-3,-2,5,9,3],[8,-4,2,-10,2,-7,2,7,-2,-8,-5,3],[6,-1,-3,-10,6,3,1,-7,9,-5,-2,8],[3,2,-4,3,-2,6,9,-10,3,4,-7,7]],[[5,-6,4,-4,-9,-5,3,7,-4,-3,-9,9],[8,-6,-4,-2,4,-9,3,7,10,-7,4,8],[-6,-1,6,7,-5,9,-5,-10,1,7,-3,-4],[-8,3,4,10,-2,5,2,10,-4,-7,-1,5],[-8,-4,9,-1,-10,9,-8,5,1,-6,3,-10],[-8,-5,-4,1,-5,3,4,4,-2,1,3,8],[8,-7,-3,-8,-4,9,5,1,4,5,10,3],[4,2,2,9,5,10,3,-6,-3,6,-3,-8],[-1,-5,4,-2,2,4,-3,3,-1,3,-5,2],[4,-5,-2,-5,8,3,10,10,1,-5,1,10],[4,-7,-4,4,6,6,2,3,1,-2,5,-2]],[[-8,-9,-8,-10,-4,-9,7,-6,-3,-4,-2,-7],[-5,6,2,4,-7,-8,2,5,-6,-4,-10,-7],[1,-9,8,-9,-6,-3,-3,10,-2,2,8,-1],[4,1,-4,-6,-10,1,3,-5,3,9,6,3],[-8,3,-4,2,10,3,-2,2,-6,-3,10,-9],[-5,8,-8,1,-10,1,1,-4,-9,-6,6,6],[-10,2,-7,5,-1,-5,-8,2,3,1,-1,6],[4,4,1,-3,-8,-10,-9,-9,10,7,4,-5],[5,2,3,-7,-3,8,-10,4,-7,5,1,-6],[1,10,-5,2,-1,7,6,10,6,3,8,-5],[2,-2,-5,-6,4,-4,1,8,-2,-5,-10,8]],[[-4,1,6,10,6,-5,-10,9,-8,-2,9,-10],[-4,1,-3,-9,8,10,4,6,-2,10,3,-8],[2,-2,10,2,-1,10,-2,1,-1,-7,-3,-4],[5,10,5,1,-8,8,6,-5,-3,-1,6,-4],[-4,-1,-4,-3,2,9,1,-5,-4,10,5,7],[10,2,9,-2,-8,2,-9,3,8,9,1,-2],[-8,-4,-6,10,8,-2,9,2,9,9,10,-9],[3,10,5,10,-2,6,-5,6,10,4,3,7],[1,2,-10,-10,1,7,-1,1,1,-1,-6,4],[6,5,4,-3,-8,6,6,-10,-5,-4,6,-8],[-3,-7,-10,6,9,-7,-3,-9,3,-8,-1,-5]],[[7,-1,-5,10,-1,-8,8,-7,5,-3,4,9],[7,-6,6,-5,3,6,8,-7,-4,2,-8,10],[-4,-4,-5,6,2,2,-5,3,-6,7,4,7],[-8,-2,9,-4,5,9,-10,-3,9,10,-6,-6],[-9,-8,-7,-3,-3,5,-6,-3,4,-10,1,7],[-3,-5,-8,-1,4,-2,-2,9,-9,-7,3,4],[4,-4,-1,4,-7,-3,8,2,3,4,-10,-1],[7,-1,-8,8,3,6,4,-8,-8,6,4,9],[-3,-3,4,-9,3,-1,-7,4,2,5,-1,7],[-3,7,-10,-7,9,-5,5,6,-5,1,-8,3],[-9,8,-1,-1,-7,-4,-5,1,10,-9,-9,2]],[[-1,-8,-10,-9,-7,-8,1,3,-8,-6,-9,-10],[-2,-3,-3,-6,8,3,3,6,10,-10,-3,-10],[1,7,2,8,-6,6,-8,4,-4,-3,-3,-9],[-2,6,4,-10,2,7,-7,-10,8,2,6,-1],[7,9,4,2,9,-3,4,9,5,3,-3,-4],[-1,-8,-2,-9,-4,8,-8,-3,-8,1,-2,-1],[-8,-8,9,3,-8,-7,1,-1,6,-10,2,3],[-10,4,-7,-10,1,-10,-3,8,-6,-4,-1,-10],[4,1,-1,-8,1,6,8,4,5,-8,7,-10],[1,9,-8,-8,7,10,4,-1,-1,4,3,9],[-4,-8,4,-5,1,8,-1,4,8,7,4,-10]],[[7,4,-1,-9,3,7,7,-4,-4,-10,3,-2],[-9,-6,9,8,7,5,7,5,5,-9,4,1],[-8,-2,6,-3,-4,-8,2,-10,-7,6,-1,6],[-3,-8,-8,4,1,-6,-1,-2,7,-10,5,5],[5,8,6,-3,8,-7,-10,2,-8,-10,7,-6],[1,3,-7,8,4,9,-7,-9,4,1,7,-9],[2,-6,1,-5,-9,8,9,-10,-1,2,-3,-3],[9,5,7,-2,3,-2,-1,7,-5,8,1,8],[-10,10,-1,2,-8,5,3,6,5,-10,-5,6],[10,-8,3,10,4,7,-4,-5,-10,-8,8,-8],[-2,-1,3,-10,3,-5,2,10,-7,1,-7,-2]],[[9,-9,5,-1,-6,-5,10,-6,-3,-9,-8,1],[5,-9,-10,-1,-2,-5,-10,6,-1,-8,8,3],[-7,-4,-1,-4,-7,-1,3,-6,-4,4,9,1],[2,-2,5,10,8,-9,-9,7,6,-2,2,8],[9,2,-1,-2,4,3,-7,-3,7,6,-5,-1],[-3,-1,-1,2,10,-9,-7,-6,-3,10,2,-9],[-5,4,-9,2,7,10,-2,-7,-6,-5,-9,4],[10,6,-9,-2,9,6,-10,-4,4,5,6,-10],[10,5,-8,1,-5,9,-1,10,-6,10,5,-5],[7,4,-1,6,-2,1,10,-8,-9,10,-10,10],[5,4,-5,8,8,-5,-8,2,-10,10,5,4]],[[6,3,-4,-2,4,-10,4,1,2,10,-7,-2],[5,8,1,-3,-7,3,-1,10,-10,4,-8,5],[-3,2,9,-6,9,6,5,8,-8,-3,7,-6],[-4,2,-7,4,4,-9,-1,1,10,-9,-7,-9],[10,-5,5,-6,2,-3,-5,-1,4,-3,-9,-4],[-2,-6,-9,-3,6,6,9,-2,-9,4,-3,-4],[6,-1,-4,6,7,-4,-6,5,-6,7,4,8],[6,7,6,-6,1,-7,-2,8,4,6,-10,6],[-6,1,4,-3,-1,10,4,-10,-5,7,-2,9],[-8,8,9,-3,-6,-5,6,-1,-10,4,8,8],[-3,-3,1,-10,10,-8,1,4,-6,10,-8,-8]]], dtype = "int64")#candidate|272|(10, 11, 12)|const|int64
const_273 = relay.const([[[-4,-8,-4,10,8,-2,3,1,9,4,-4,8],[-1,-10,9,-2,5,-10,7,-6,4,-6,-10,-10],[4,10,6,-1,8,-9,-1,10,5,2,-9,-4],[8,1,5,-8,3,9,5,-8,1,-2,2,-8],[-9,6,-1,-3,10,-7,-3,-6,-3,10,6,5],[-7,10,6,-6,-8,-4,-5,-10,-1,2,3,4],[4,8,-2,-7,-7,-10,-5,-7,-9,4,10,-8],[2,-6,-7,-3,-2,3,1,5,-7,10,-1,6],[9,-3,5,-1,1,-2,-6,1,5,4,-6,-5],[-3,-4,3,2,2,-5,7,4,1,-6,2,-7],[-3,-4,-9,1,-5,4,-5,-3,4,-3,-2,-8]],[[-2,4,-4,-10,1,4,-4,-1,10,-8,4,3],[9,-10,1,-6,4,7,-10,-5,-1,-10,-5,-6],[6,1,5,-1,-10,-5,-1,-3,2,3,7,4],[6,-4,5,-6,-4,-5,1,-5,-7,1,5,4],[-6,-9,4,10,9,1,-6,7,5,2,7,8],[-10,-3,5,-10,6,-1,-7,10,-8,8,-1,-5],[6,-4,-5,-9,1,7,1,4,-1,6,9,1],[-9,1,-5,-6,-2,-6,-3,1,8,8,7,5],[-1,5,-8,-7,-5,-9,-5,-3,-5,5,5,2],[3,-1,3,8,8,4,-8,-5,9,7,-10,10],[-9,-3,-8,8,-6,2,4,3,-1,-9,8,-6]],[[-9,1,-1,-5,6,7,-5,-5,-3,-2,7,8],[-4,9,-3,1,5,-9,2,9,4,-4,-10,-1],[8,-9,-9,-4,-5,5,7,-8,-9,-1,3,-1],[-7,-5,5,-1,7,9,8,-9,6,1,-3,6],[-5,2,-8,-4,-9,-3,5,1,-3,-10,-6,3],[4,-7,-2,8,1,-7,5,5,10,-2,9,7],[-8,2,5,-7,-7,5,-1,-7,4,-3,-5,7],[-4,8,-4,7,9,7,-5,2,-1,1,1,6],[2,-6,-6,2,-4,5,-5,-10,-2,-8,-3,8],[9,-6,7,-8,1,-8,7,-9,10,8,8,8],[7,6,-10,4,6,-2,3,-4,3,3,1,10]],[[-8,5,-8,-6,2,-5,-10,2,10,-9,-3,1],[-6,-6,6,10,-4,-10,9,7,1,4,2,5],[9,9,8,7,-2,-1,-9,-6,6,-5,-3,-10],[6,-6,-1,10,-7,-3,-7,-9,5,1,10,9],[3,-5,-8,-3,-1,1,-9,4,-10,-1,9,-9],[-9,-8,-8,-9,1,-9,8,-1,10,3,-3,-7],[3,-1,5,5,-10,5,2,-1,7,-1,-2,6],[-4,-3,-3,3,8,8,-4,9,8,4,-5,2],[-4,7,-5,10,-1,8,5,1,7,-7,2,7],[-10,-9,-3,-7,4,-5,-10,-8,-9,-6,-10,-10],[-4,-8,-4,6,5,9,6,4,-1,-9,-3,-1]],[[-3,-9,-1,10,5,-2,10,-1,3,4,7,9],[9,10,-5,6,-7,1,-1,5,-6,5,5,2],[5,7,-5,1,-6,-6,1,9,5,7,-8,4],[-9,3,-4,-2,-2,-2,-7,9,-3,2,-6,-1],[10,9,-8,3,1,-1,-2,5,-2,-1,1,2],[-6,7,7,5,5,5,-8,-3,6,-5,5,-4],[-8,-7,4,4,-6,-10,-10,-8,8,10,-6,6],[-7,2,-2,10,-9,10,6,1,-6,3,-7,-10],[-8,2,3,6,8,3,-2,9,-10,5,2,8],[-1,3,3,5,-6,-5,-5,-9,9,-1,5,-4],[-1,-10,7,1,10,5,9,-7,7,4,-3,4]],[[-6,-2,-7,7,5,10,-5,1,-7,1,6,-3],[-9,4,-3,-3,5,2,-10,-7,6,9,10,-9],[6,-5,9,9,8,-10,-4,-1,-8,9,2,5],[5,3,3,4,-3,6,-10,10,8,8,4,-1],[2,10,-9,-4,-8,2,9,5,-7,-6,5,3],[-7,-7,10,-3,9,-6,8,-3,-5,10,-2,-7],[-3,4,-8,-3,-9,6,-8,2,2,-8,-8,-7],[-7,-8,-1,6,8,3,-10,-1,-7,-10,7,4],[10,2,-2,-2,7,6,4,1,3,-8,-10,-1],[5,2,3,-1,-6,2,1,5,-3,5,4,-1],[-2,9,7,1,-3,-6,-6,1,10,-2,-9,-3]],[[7,-2,-6,7,2,-1,7,-3,-4,-9,5,-4],[5,-10,-2,-7,-10,9,1,-5,-3,-4,-8,-9],[3,5,-7,-5,-5,-7,7,-6,-10,-3,5,4],[4,-6,-4,-5,4,6,-8,-4,-7,10,4,1],[2,-6,9,5,-7,-4,-6,9,10,1,-8,9],[-7,-1,6,6,-3,-7,2,4,10,2,10,6],[-9,-5,6,-4,4,6,5,-8,-6,-1,-6,10],[4,2,7,1,8,5,-2,7,-4,8,6,-10],[-2,3,-7,-3,-6,4,-4,-9,2,4,-3,-2],[5,10,7,-6,-2,-6,-1,-9,-4,10,7,2],[-5,5,-9,-7,-8,-8,9,-5,-2,-10,-2,9]],[[4,-5,3,2,4,-6,-8,-9,-9,3,-2,1],[-1,-6,1,-10,9,6,3,-7,-7,9,-7,-2],[-7,6,-5,-3,7,-1,5,3,-7,5,1,4],[-7,5,-5,-2,-4,-2,-7,-7,-4,-5,10,-2],[-9,6,1,7,-6,1,9,-4,4,-4,-2,-7],[1,-5,10,-1,-6,-8,-6,-4,7,-4,3,-1],[-5,-9,-8,-3,-8,4,-10,8,2,5,-3,10],[6,-8,3,5,-6,3,3,-5,-6,1,-5,-2],[-5,3,-5,7,9,10,7,-8,-2,-7,8,-5],[2,-10,5,2,-6,7,1,3,-9,2,10,9],[2,6,7,-6,-7,7,-6,-1,5,-4,-2,-6]],[[1,7,9,-1,3,3,-1,10,-5,10,-6,-6],[1,-9,8,-3,5,-8,7,5,9,9,-1,7],[-6,9,-10,-2,6,1,9,5,-6,-6,4,-3],[3,2,3,-2,-6,10,8,4,-5,10,-1,-8],[7,1,9,-4,-10,-8,6,1,-1,-6,6,4],[9,7,-8,8,-1,9,-7,-2,-1,-9,8,-7],[-2,9,6,-1,-7,6,3,5,5,4,8,8],[-4,-4,-6,5,-7,5,-6,-8,-7,10,-8,-6],[8,-6,3,6,8,4,-3,3,-3,-3,7,2],[6,5,-7,-9,-8,3,-9,-3,-1,3,5,-3],[-4,-7,-8,4,3,9,8,-8,3,2,-10,-8]],[[-1,4,7,-6,6,2,6,-9,7,10,-4,-4],[10,8,10,-9,-1,8,-2,10,2,1,10,-5],[-6,2,5,-8,3,-3,5,3,6,-3,10,6],[5,-7,9,-2,9,6,2,-9,1,-8,-5,-2],[4,1,7,3,-7,7,-4,-1,-2,9,3,9],[-9,10,-7,6,8,-5,-5,8,-1,-7,3,10],[-7,1,4,-3,6,8,8,7,1,2,2,-9],[-5,10,8,-3,-8,4,6,-6,3,-10,-7,-8],[8,-6,7,3,-6,10,-2,9,-9,1,-2,-10],[2,7,-6,10,2,4,3,-1,-2,-3,4,-4],[6,-10,4,-3,-9,-6,5,9,-3,-9,2,-7]]], dtype = "int64")#candidate|273|(10, 11, 12)|const|int64
bop_274 = relay.left_shift(const_272.astype('int64'), relay.reshape(const_273.astype('int64'), relay.shape_of(const_272))) # shape=(10, 11, 12)
output = relay.Tuple([bop_274,])
output2 = relay.Tuple([bop_274,])
func_285 = relay.Function([], output)
mod['func_285'] = func_285
mod = relay.transform.InferType()(mod)
output = func_285()
func_286 = relay.Function([], output)
mutated_mod['func_286'] = func_286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_292 = relay.TupleGetItem(func_285_call(), 0)
call_293 = relay.TupleGetItem(func_286_call(), 0)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_299 = relay.TupleGetItem(func_285_call(), 0)
call_300 = relay.TupleGetItem(func_286_call(), 0)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_328 = relay.TupleGetItem(func_285_call(), 0)
call_329 = relay.TupleGetItem(func_286_call(), 0)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_332 = relay.TupleGetItem(func_285_call(), 0)
call_333 = relay.TupleGetItem(func_286_call(), 0)
output = relay.Tuple([call_292,call_299,call_328,call_332,])
output2 = relay.Tuple([call_293,call_300,call_329,call_333,])
func_363 = relay.Function([], output)
mod['func_363'] = func_363
mod = relay.transform.InferType()(mod)
mutated_mod['func_363'] = func_363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mutated_mod.get_global_var('func_363')
call_364 = func_363_call()
output = call_364
func_365 = relay.Function([], output)
mutated_mod['func_365'] = func_365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_373 = relay.TupleGetItem(func_363_call(), 2)
call_374 = relay.TupleGetItem(func_365_call(), 2)
output = call_373
output2 = call_374
func_375 = relay.Function([], output)
mod['func_375'] = func_375
mod = relay.transform.InferType()(mod)
mutated_mod['func_375'] = func_375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mutated_mod.get_global_var('func_375')
call_376 = func_375_call()
output = call_376
func_377 = relay.Function([], output)
mutated_mod['func_377'] = func_377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_380 = relay.TupleGetItem(func_285_call(), 0)
call_381 = relay.TupleGetItem(func_286_call(), 0)
var_390 = relay.var("var_390", dtype = "int64", shape = (10, 11, 12))#candidate|390|(10, 11, 12)|var|int64
bop_391 = relay.add(call_380.astype('int64'), relay.reshape(var_390.astype('int64'), relay.shape_of(call_380))) # shape=(10, 11, 12)
bop_394 = relay.add(call_381.astype('int64'), relay.reshape(var_390.astype('int64'), relay.shape_of(call_381))) # shape=(10, 11, 12)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_415 = relay.TupleGetItem(func_363_call(), 2)
call_416 = relay.TupleGetItem(func_365_call(), 2)
uop_417 = relay.atan(var_390.astype('float32')) # shape=(10, 11, 12)
uop_419 = relay.acosh(uop_417.astype('float32')) # shape=(10, 11, 12)
output = relay.Tuple([bop_391,call_415,uop_419,])
output2 = relay.Tuple([bop_394,call_416,uop_419,])
func_436 = relay.Function([var_390,], output)
mod['func_436'] = func_436
mod = relay.transform.InferType()(mod)
var_437 = relay.var("var_437", dtype = "int64", shape = (10, 11, 12))#candidate|437|(10, 11, 12)|var|int64
output = func_436(var_437)
func_438 = relay.Function([var_437], output)
mutated_mod['func_438'] = func_438
mutated_mod = relay.transform.InferType()(mutated_mod)
const_475 = relay.const([[[-7,4,7,-7,10,1,-3,-10],[-9,-7,5,-5,2,-1,-3,6],[-1,-1,-10,7,6,-5,6,9],[-2,-8,-4,5,6,4,-7,7],[-1,-8,-9,-3,5,-4,-3,8],[-3,-4,1,4,-5,5,9,2],[2,-4,-9,6,3,6,-4,1]],[[1,4,-3,7,7,4,4,9],[-7,9,-8,-9,4,6,2,-5],[3,2,8,-7,-3,-4,-6,5],[5,-1,-6,5,8,7,-1,2],[2,1,5,-6,9,-5,2,-10],[3,-2,-2,8,10,-1,-8,8],[-6,9,-7,8,-4,10,-5,4]],[[2,9,-5,-5,4,10,6,9],[5,3,-4,9,-6,-5,9,-10],[-5,6,-6,7,-8,2,-2,-8],[-1,-2,-2,3,10,-2,7,-2],[1,-4,-1,-6,7,5,-9,10],[-1,-2,-1,-4,3,10,8,-2],[-9,5,-7,-1,1,6,6,-9]],[[-6,4,6,-6,6,8,-7,-4],[-7,8,-1,8,4,1,8,1],[-1,-9,4,5,-3,-5,-3,9],[-9,-4,8,4,4,4,-5,5],[-9,-2,-2,-5,10,-9,1,3],[-7,-2,-8,8,4,-3,-6,-3],[-5,-10,-2,5,-8,-6,-2,-1]],[[-7,7,1,-5,-7,4,-9,2],[1,-2,-8,-8,-9,5,5,-4],[9,6,-7,5,-3,9,5,5],[-3,1,-4,-8,-3,-8,-9,1],[-4,-7,9,-6,10,-4,9,1],[10,3,-2,9,-6,-6,-9,-2],[-3,5,1,-6,-7,6,-4,7]],[[-2,8,-3,-9,-3,-3,-1,7],[-4,-8,4,-7,-6,8,-3,-4],[7,-7,8,-1,-1,5,-1,-8],[7,-3,-3,5,-5,-1,-5,-1],[6,5,6,-5,10,10,4,-8],[7,-5,2,-10,-10,5,-6,10],[-6,6,-10,-8,-2,-4,8,9]],[[-5,-6,2,-6,-8,10,1,8],[6,9,8,6,8,6,2,-3],[-10,6,6,-6,4,2,7,-3],[5,-7,-3,-3,-3,-9,4,1],[-3,-6,8,-7,10,-10,-9,-10],[-6,9,1,2,-1,-8,5,9],[-6,-10,8,1,-7,7,-5,-2]],[[3,2,-5,8,5,3,5,9],[8,8,-9,6,-9,1,9,6],[-9,5,-3,2,-9,8,-6,5],[-8,-1,-1,2,9,5,1,1],[-10,-3,-1,8,7,-2,-7,-8],[2,-4,8,5,1,5,-1,-1],[-5,1,7,-4,7,9,6,9]],[[-7,-9,8,2,3,-3,-6,-3],[-7,6,6,-2,7,5,1,9],[8,4,-3,-7,-8,1,5,4],[10,9,10,-9,3,10,9,-3],[-9,-4,5,-1,2,-6,7,8],[-10,3,8,-8,-7,6,-10,-2],[-8,-3,10,4,5,-8,10,2]]], dtype = "int16")#candidate|475|(9, 7, 8)|const|int16
var_476 = relay.var("var_476", dtype = "int16", shape = (9, 7, 8))#candidate|476|(9, 7, 8)|var|int16
bop_477 = relay.subtract(const_475.astype('int16'), relay.reshape(var_476.astype('int16'), relay.shape_of(const_475))) # shape=(9, 7, 8)
output = relay.Tuple([bop_477,])
output2 = relay.Tuple([bop_477,])
func_486 = relay.Function([var_476,], output)
mod['func_486'] = func_486
mod = relay.transform.InferType()(mod)
var_487 = relay.var("var_487", dtype = "int16", shape = (9, 7, 8))#candidate|487|(9, 7, 8)|var|int16
output = func_486(var_487)
func_488 = relay.Function([var_487], output)
mutated_mod['func_488'] = func_488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_505 = relay.TupleGetItem(func_285_call(), 0)
call_506 = relay.TupleGetItem(func_286_call(), 0)
uop_517 = relay.rsqrt(call_505.astype('float32')) # shape=(10, 11, 12)
uop_519 = relay.rsqrt(call_506.astype('float32')) # shape=(10, 11, 12)
func_436_call = mod.get_global_var('func_436')
func_438_call = mutated_mod.get_global_var('func_438')
call_531 = relay.TupleGetItem(func_436_call(relay.reshape(call_505.astype('int64'), [10, 11, 12])), 2)
call_532 = relay.TupleGetItem(func_438_call(relay.reshape(call_505.astype('int64'), [10, 11, 12])), 2)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_533 = relay.TupleGetItem(func_285_call(), 0)
call_534 = relay.TupleGetItem(func_286_call(), 0)
bop_546 = relay.bitwise_xor(uop_517.astype('uint32'), relay.reshape(call_531.astype('uint32'), relay.shape_of(uop_517))) # shape=(10, 11, 12)
bop_549 = relay.bitwise_xor(uop_519.astype('uint32'), relay.reshape(call_532.astype('uint32'), relay.shape_of(uop_519))) # shape=(10, 11, 12)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_561 = relay.var("var_561", dtype = "int16", shape = (504,))#candidate|561|(504,)|var|int16
call_560 = relay.TupleGetItem(func_486_call(relay.reshape(var_561.astype('int16'), [9, 7, 8])), 0)
call_562 = relay.TupleGetItem(func_488_call(relay.reshape(var_561.astype('int16'), [9, 7, 8])), 0)
uop_564 = relay.sinh(uop_517.astype('float64')) # shape=(10, 11, 12)
uop_566 = relay.sinh(uop_519.astype('float64')) # shape=(10, 11, 12)
const_567 = relay.const([[[9.295862,5.421832,9.896370,-9.218460,1.398135,-3.958730,0.313349,-1.142247,1.492467,2.995798,8.050838,9.351488],[3.640753,-6.007147,-5.086017,-6.278745,-7.283446,-2.980726,6.753230,1.519696,2.152022,8.006277,-7.942991,1.685412],[-3.859642,4.043033,1.226319,4.218651,5.850269,-7.029406,-9.332218,2.802774,-8.141969,-1.507072,0.089266,-8.928158],[3.934147,3.675828,8.212984,-9.516756,-2.765916,0.561934,-9.809796,-1.892902,8.067926,-4.550542,7.563830,-6.988908],[1.132364,-6.696023,4.955808,2.111559,-3.935899,-4.661575,1.602492,2.749485,-2.855513,4.528896,-6.440169,8.751491],[-5.224954,6.189666,8.560427,-5.271679,-7.317886,6.715531,9.268456,7.964271,-5.935391,-7.293136,-1.875917,5.360036],[-1.295504,0.952279,-9.283640,-4.106601,-3.123476,-6.054601,-7.953784,-9.812374,4.477703,-8.371919,-2.270810,0.461680],[7.767857,6.250945,7.557552,8.883706,7.577968,-7.270541,9.376119,1.445216,-6.753091,8.023275,-4.066976,-2.938292],[-1.290586,-5.825719,-2.128240,5.119640,5.431656,1.419569,6.625994,5.281754,5.528068,-8.951361,-7.584329,5.213661],[1.580760,9.492341,-9.889739,-3.000981,-9.959051,-9.725120,-4.255760,7.065061,-9.446765,-8.223769,9.323668,-3.569538],[-1.870049,1.616251,-1.248548,3.285125,2.763985,3.157033,-2.378470,-2.409057,4.463291,2.976163,-9.449843,5.608171]],[[1.421390,-6.733601,6.162466,-6.052570,8.548060,1.765848,-5.015859,-5.331186,8.986379,6.839402,1.087483,9.712774],[-4.024747,-6.979432,7.203088,2.922609,8.077218,1.435362,2.819021,-5.291477,9.995089,-4.070786,0.804465,9.356833],[3.964915,-9.357673,6.392049,8.723053,9.238753,-9.558564,2.687109,0.827077,-2.707384,-8.778241,-6.959576,-3.608907],[-2.145245,9.754344,1.254440,-6.706105,-5.724550,5.948714,-9.551704,0.239351,-0.424458,-1.381338,-3.469952,7.586475],[-6.233985,-5.150411,-7.698300,-6.424520,8.277539,-6.006178,4.007986,6.648195,-0.074789,8.341209,6.308789,-7.321357],[-3.765362,-9.583700,-8.653603,2.059352,2.636348,-9.244052,4.434960,-9.182712,-9.103861,2.452671,0.745854,3.521070],[-4.162226,5.085955,-2.319910,0.591827,-0.450865,2.608194,1.977362,-5.518240,-4.715272,4.267830,7.348946,-6.395262],[-2.172760,5.941575,5.454937,1.813994,5.064834,7.237912,-3.145459,8.279295,-6.058652,-8.490485,8.235368,-9.483588],[5.511407,4.446343,5.064448,-3.827688,-0.912165,-6.344715,5.728550,9.926892,-7.188534,-1.349566,0.347862,3.042218],[-8.216142,-0.894008,-0.790224,0.601688,-4.613644,8.533976,-3.298425,2.986891,9.720540,-4.751001,-5.061575,-8.030186],[2.450832,2.314905,-9.894935,-7.907796,-5.994123,-3.324890,-4.811858,-8.818079,0.979854,-7.996082,-5.705580,-4.545147]],[[2.820435,-2.336912,-9.542466,-5.439522,8.172790,-6.386381,3.778800,-0.043547,1.712285,-0.750385,-7.326723,-7.720670],[-6.144950,9.358295,0.378028,8.832460,3.066088,-3.195988,-4.008688,4.142613,-2.812777,2.185050,-3.239073,-2.494724],[-0.819402,0.840110,6.427643,-9.075150,3.046563,-6.040090,2.876155,8.176386,6.489890,-1.458973,7.315692,9.318577],[-5.964551,3.348548,-9.891876,-2.905152,-7.973780,3.976413,-6.267870,-4.558466,-3.241839,-7.330416,-3.109153,-5.211006],[3.984111,5.740544,-0.627604,-4.628444,5.356626,5.144846,1.895962,-3.194758,-9.195772,-5.799323,-2.887780,-0.491074],[2.101104,-0.966302,-4.688455,-9.921855,-6.812513,-5.783535,-1.697995,4.918722,-1.557969,-5.584864,-1.696040,-2.904723],[-5.363933,5.282666,2.837168,9.033676,-4.259524,-8.052772,-0.169480,-6.162625,-4.072531,7.183824,-5.265974,-2.393140],[-1.053419,-3.300581,3.601701,3.826405,1.689201,-7.496060,-6.668935,-2.156393,-4.826680,6.167845,3.086088,8.295371],[0.660975,-0.281495,7.096221,-4.917967,5.167065,-4.420222,5.909025,9.990759,5.476646,1.099098,5.454514,-7.464934],[-8.529464,6.573153,-3.905500,1.817154,8.893032,4.261263,-6.827362,-3.386191,-4.778037,8.917899,-7.061936,2.587402],[-5.612817,8.039067,-0.553328,0.273309,-9.054000,-5.907730,0.040215,-6.933055,0.524950,9.340435,9.952654,-7.903093]],[[0.960094,-6.340379,-3.633506,8.217529,-7.437990,-5.431491,-3.375088,-8.665900,-9.279896,5.483811,-8.894306,5.460855],[3.758672,-4.358664,-5.777709,5.860539,-5.831054,-5.522121,4.822395,3.152822,-5.584981,-7.187869,-5.926475,8.517485],[2.208901,-8.365081,-0.926372,2.554917,9.086245,5.740461,-4.167093,2.651049,-8.248342,8.483291,5.410172,3.204667],[7.469309,-3.249201,-1.523130,-3.615556,7.769161,-9.241994,-9.079745,5.864421,4.352938,-3.237787,7.071513,-8.545052],[6.477514,0.496728,-2.320804,-6.556939,-9.231232,7.596898,5.865178,-1.215679,2.679623,-8.868094,4.750617,5.343238],[-4.552436,-3.002069,3.982087,1.208435,0.541815,1.677913,-4.693280,8.113797,-4.563853,2.474440,-7.582253,-0.827060],[-7.245491,-4.950306,6.965462,-4.666432,9.737351,8.711727,2.312114,2.004303,-8.710113,0.121113,-5.991424,0.248761],[4.926179,-9.257493,9.546249,1.157179,-3.744326,5.793596,4.948045,4.630500,-0.970996,5.970170,-5.751652,-6.317193],[8.825128,0.652668,-9.755323,4.999930,4.186005,-9.161638,-6.292039,7.682457,5.812937,-1.986484,-0.516401,0.286410],[8.538425,1.944275,7.374274,-3.129501,0.195177,-6.557794,-4.756878,9.759586,-3.118059,-9.555132,-4.618558,8.447825],[-9.376938,-2.220168,8.266987,-3.875757,6.947916,-4.079070,6.907232,0.473827,-5.997500,4.028814,3.513365,8.054040]],[[-9.154816,6.866558,8.398943,-2.107080,-4.673042,-5.555435,-0.519560,-2.190503,-1.809393,-9.186814,4.680399,-1.946272],[9.971221,4.160592,8.254463,-2.040540,-7.496131,-1.727370,-9.954324,-6.497183,0.394835,1.229887,7.608417,3.206971],[-5.516836,0.519480,-8.980680,-0.810906,8.155076,-7.201783,-7.444838,-4.403617,-9.505166,-1.194137,2.409693,-8.238659],[6.240699,-2.139601,3.464327,4.270577,4.906249,-2.092478,-2.205974,-8.993672,-2.969005,-5.078895,7.390263,1.871605],[5.557443,6.826808,-8.160167,-1.217497,0.001111,-7.460647,-8.800427,-5.865910,8.740623,4.825516,2.698432,1.913819],[7.106974,-6.384577,7.441759,-2.900723,2.863833,0.710278,2.611630,-7.080085,2.488802,-2.110506,-0.531758,7.809980],[6.262425,0.619206,-5.505868,-7.072195,6.425815,2.157411,-8.234688,8.202211,2.771535,-9.706042,-4.283397,8.724797],[4.363000,-4.481327,-8.975685,5.767088,-9.724371,9.233922,-9.324526,-4.832001,-8.681912,-3.234162,-8.582780,8.129685],[-0.228220,-6.057359,-2.960722,-2.384101,8.190150,3.338224,1.768216,7.611930,2.733378,-5.154531,-4.590570,8.949473],[-7.802580,-1.438303,-3.926313,-2.222098,9.169324,1.757044,-0.440694,7.469361,-7.963034,-3.336205,-0.146257,-5.392082],[-1.237539,4.670770,1.842397,8.157505,-7.362710,-0.075217,8.996587,2.042496,-9.518724,-6.250575,5.229061,-3.282517]],[[-1.776283,3.550267,2.207776,2.549145,-0.755051,-8.142014,9.530717,-2.649123,8.873750,-1.752930,3.785579,9.629433],[7.695261,1.450165,-1.810804,-3.638787,-3.933220,6.147169,0.917134,5.434611,2.077221,-4.173268,7.776348,-6.145263],[6.369663,-0.759937,-9.768961,-6.714297,4.415760,-1.554528,-0.187677,9.856258,-8.909216,-6.600910,1.699234,-4.242209],[2.357299,8.677132,0.091229,-1.776788,1.360320,9.287082,-3.030405,2.273347,1.974087,5.237115,-6.260317,-0.841210],[8.569194,7.113653,-0.222605,1.948650,-6.767970,6.705498,-1.460465,-4.867013,-0.260522,-2.535472,-5.811302,-3.799867],[9.739181,1.284160,-1.922836,4.626454,-6.256546,-6.717954,-8.406059,-6.533998,0.993227,-2.231671,4.418561,3.933822],[-6.388125,2.232989,0.741515,8.945054,0.396769,-3.419216,-5.916226,-0.897196,-4.127451,-0.815855,-5.152542,8.907547],[-8.077369,-5.613277,1.028533,5.572231,5.438358,-4.051578,-6.115407,6.167266,-7.383394,-0.822352,9.254189,1.726916],[8.864527,-5.546806,-9.644630,6.711970,3.216477,1.155748,7.938331,2.353426,3.485677,2.706762,7.997951,8.366309],[6.077560,-3.283294,-8.173420,-7.439827,3.296761,-4.846027,2.405850,-6.014036,0.682818,3.318916,-2.087509,7.977842],[-7.671006,-2.721528,7.352698,8.728280,0.111508,-7.850690,9.444389,4.666918,3.311503,-0.964600,-9.079839,-3.986475]],[[-9.701422,-9.735175,-4.456051,-1.838590,2.558573,-5.790337,5.848017,1.474459,1.853171,-1.724627,-4.467651,-7.981679],[7.162036,-6.883077,7.897818,1.060070,-2.990668,0.843795,5.877475,3.126364,-3.654035,-8.914288,8.604283,-3.989600],[7.688585,4.826066,-2.463788,1.758736,2.696937,1.589561,-8.031810,-0.131103,5.409699,5.792606,-9.138901,5.988167],[-0.653745,-1.430313,7.065729,2.908019,6.276029,-0.154510,-8.260930,-1.298769,-9.795285,-4.078568,-3.340460,9.607081],[-0.709465,6.334449,-0.341862,4.340716,-6.214398,-7.204068,-1.009909,-4.281316,4.704566,-6.036702,-6.489603,8.356175],[-6.978433,-5.772670,-3.238681,-3.421601,-2.984547,1.851747,-4.554715,-3.521860,-1.626863,-7.830722,-6.505683,1.491903],[-5.125907,3.801117,-6.757631,3.425989,-9.863479,4.736508,3.420788,-5.596168,7.923892,-2.644774,-5.980551,-1.153436],[-7.549643,-8.950814,5.040480,-3.730412,0.914554,4.727831,-1.386744,-1.068479,-3.858602,7.600409,-4.384391,4.405218],[-1.083040,8.159678,-0.762868,8.625187,0.701964,5.540604,1.133656,-5.910586,0.985570,-5.365837,-8.640544,3.847689],[6.954283,-1.294765,-7.745955,9.259134,-4.494296,7.977056,8.450427,3.077987,-3.866023,0.198995,-5.937979,-5.499443],[3.302539,6.100028,-8.221191,-5.881684,9.390659,8.095571,1.433250,-6.034710,5.366754,-7.154602,0.408488,3.109675]],[[7.067638,2.166667,-5.066629,2.851618,5.430740,4.173122,1.658462,7.192550,9.650765,-1.949306,0.813611,-3.510377],[6.677798,4.829901,-5.843613,-9.843102,-2.458716,7.557922,-2.384833,-6.964564,3.346082,7.376724,-6.562732,3.809255],[4.387783,-7.105637,3.173345,8.900845,1.671188,9.821948,-8.168566,8.949478,9.940710,2.752253,-1.924188,2.463517],[-1.197925,-2.795241,4.500752,-0.169205,-7.229614,-5.231202,0.026751,-1.589349,-7.890725,-2.008841,4.270880,4.424940],[-2.897086,-8.310687,3.062711,-5.635821,-0.445051,-9.290190,-7.477992,-4.688303,7.860260,-9.036877,1.908550,7.190727],[-7.957204,-9.881694,-8.845353,1.210194,-4.163487,8.047976,7.123528,1.585037,-8.794421,-4.516518,-0.040360,5.963368],[9.094540,-5.592442,-0.333112,-2.802525,8.050749,1.601637,9.422660,-1.404805,-6.634806,0.781716,9.859966,-6.184486],[-2.408216,1.122820,0.843640,-0.580485,-5.469401,0.447486,-9.021525,-2.112816,-9.802921,5.491733,-6.851222,-5.665214],[2.624115,-5.781800,-0.139678,3.588869,4.370648,-3.749420,7.042381,3.265547,3.955404,6.332492,8.549677,-7.004122],[2.654782,6.129225,3.548009,-7.287211,7.572993,-1.911984,5.621557,-5.632513,-8.047532,-2.908555,7.188224,2.380650],[-6.969748,-5.928922,-0.933091,-4.085221,5.270106,3.034030,5.546610,2.048592,2.842402,-6.049458,0.275862,9.722058]],[[9.477893,-6.118673,-4.632116,-2.514649,-8.382104,-4.860669,8.879064,-9.921983,-5.512265,0.627964,0.460862,-3.462752],[-1.356921,-5.265145,6.157222,0.391004,2.915747,8.171922,-3.764051,-2.996030,-3.745856,7.073930,1.960750,-9.382640],[-6.238639,2.787560,5.496299,-6.727227,5.744630,6.325424,-8.493222,5.687893,-1.859095,4.820133,-7.056528,7.168696],[-4.263209,-7.316161,-1.818039,2.548807,1.063305,6.792070,-1.538516,-5.211767,-1.890496,-2.513764,3.994963,-1.132506],[-0.152120,-6.211317,7.735731,-2.133636,-6.025868,-0.548587,3.369002,4.412789,-4.836377,6.566773,-1.908776,-1.570068],[-9.299466,-1.813845,1.827614,1.275989,-9.154825,-4.704394,-4.455432,-9.434128,-8.045661,9.026662,-9.016628,-0.480517],[2.366239,-9.188652,7.787707,-7.252605,5.354295,1.131556,1.653582,4.609759,-3.209439,-1.305413,-6.722539,-8.450622],[9.350954,-5.531724,-8.555457,-0.455811,1.761709,-6.385895,-4.166087,-8.948481,4.737375,-8.652103,-9.843238,-6.406935],[8.612151,5.712831,5.625186,-8.907630,-9.462427,0.916088,1.909313,-8.161075,-5.863368,-1.538423,-7.415429,-0.758273],[-6.205120,-1.479358,-6.384189,-0.530257,6.839412,4.629591,1.975389,4.957905,5.404708,-4.604436,9.550370,2.746893],[7.711324,-9.318136,-9.439467,3.138403,2.307430,0.525454,4.067884,4.204529,-1.372233,0.395139,1.593243,9.839457]],[[5.711383,1.175077,-5.776255,-0.171187,-1.983558,9.189578,-1.819491,-9.320992,8.709578,2.320494,2.727102,1.061983],[-0.205124,9.285764,-6.760906,-6.877644,-8.427958,-5.105863,-7.516721,3.991825,3.929195,0.801153,5.460893,9.511383],[6.551317,9.968980,0.201106,-5.842829,-2.931478,9.574348,-7.895911,-9.987481,-0.043103,-2.492096,-2.913527,2.782135],[-2.059903,6.775191,-7.489351,-1.121570,9.901559,-5.026120,9.369034,-9.437253,-1.398926,-5.751559,5.069306,-0.349113],[6.099136,-8.846829,-7.533623,4.585716,-5.562571,-1.610564,6.623204,5.508707,9.518891,4.217491,-1.680486,-3.352575],[-7.244491,-2.536717,9.360345,4.265574,9.089395,-0.707457,6.241521,-3.821127,-5.975886,7.324705,-2.687791,6.633070],[-9.998354,-4.319106,-5.232080,-6.286929,7.366647,8.143649,7.036196,3.214274,-5.260805,-1.966710,2.134668,-0.527905],[0.239527,2.094592,-0.777827,6.668041,8.396612,2.295264,-0.037394,-5.300915,-4.394881,2.014034,-3.484537,-6.014363],[-1.816499,5.307250,-2.464589,-4.911302,8.950287,5.138438,-0.480018,-6.831071,-3.448585,9.730156,1.878691,-3.257927],[0.294632,7.871642,-5.107913,6.126382,-1.771596,-7.040313,-6.791358,5.831359,-1.570801,1.467919,7.385732,-6.342068],[4.002570,2.780462,-6.085253,0.180849,5.914219,4.247113,-0.768738,-8.929130,2.656601,9.060356,4.964550,1.145954]]], dtype = "float64")#candidate|567|(10, 11, 12)|const|float64
bop_568 = relay.equal(uop_564.astype('bool'), relay.reshape(const_567.astype('bool'), relay.shape_of(uop_564))) # shape=(10, 11, 12)
bop_571 = relay.equal(uop_566.astype('bool'), relay.reshape(const_567.astype('bool'), relay.shape_of(uop_566))) # shape=(10, 11, 12)
bop_577 = relay.less(bop_568.astype('bool'), relay.reshape(const_567.astype('bool'), relay.shape_of(bop_568))) # shape=(10, 11, 12)
bop_580 = relay.less(bop_571.astype('bool'), relay.reshape(const_567.astype('bool'), relay.shape_of(bop_571))) # shape=(10, 11, 12)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
call_588 = relay.TupleGetItem(func_486_call(relay.reshape(call_560.astype('int16'), [9, 7, 8])), 0)
call_589 = relay.TupleGetItem(func_488_call(relay.reshape(call_560.astype('int16'), [9, 7, 8])), 0)
output = relay.Tuple([call_533,bop_546,call_560,var_561,bop_577,call_588,])
output2 = relay.Tuple([call_534,bop_549,call_562,var_561,bop_580,call_589,])
func_590 = relay.Function([var_561,], output)
mod['func_590'] = func_590
mod = relay.transform.InferType()(mod)
mutated_mod['func_590'] = func_590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_591 = relay.var("var_591", dtype = "int16", shape = (504,))#candidate|591|(504,)|var|int16
func_590_call = mutated_mod.get_global_var('func_590')
call_592 = func_590_call(var_591)
output = call_592
func_593 = relay.Function([var_591], output)
mutated_mod['func_593'] = func_593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_658 = relay.TupleGetItem(func_285_call(), 0)
call_659 = relay.TupleGetItem(func_286_call(), 0)
func_590_call = mod.get_global_var('func_590')
func_593_call = mutated_mod.get_global_var('func_593')
var_662 = relay.var("var_662", dtype = "int16", shape = (1, 504))#candidate|662|(1, 504)|var|int16
call_661 = relay.TupleGetItem(func_590_call(relay.reshape(var_662.astype('int16'), [504,])), 4)
call_663 = relay.TupleGetItem(func_593_call(relay.reshape(var_662.astype('int16'), [504,])), 4)
output = relay.Tuple([call_658,call_661,var_662,])
output2 = relay.Tuple([call_659,call_663,var_662,])
func_665 = relay.Function([var_662,], output)
mod['func_665'] = func_665
mod = relay.transform.InferType()(mod)
var_666 = relay.var("var_666", dtype = "int16", shape = (1, 504))#candidate|666|(1, 504)|var|int16
output = func_665(var_666)
func_667 = relay.Function([var_666], output)
mutated_mod['func_667'] = func_667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_693 = relay.var("var_693", dtype = "float32", shape = (13, 7, 10))#candidate|693|(13, 7, 10)|var|float32
var_694 = relay.var("var_694", dtype = "float32", shape = (13, 7, 10))#candidate|694|(13, 7, 10)|var|float32
bop_695 = relay.floor_divide(var_693.astype('float32'), relay.reshape(var_694.astype('float32'), relay.shape_of(var_693))) # shape=(13, 7, 10)
uop_698 = relay.atanh(var_694.astype('float32')) # shape=(13, 7, 10)
var_703 = relay.var("var_703", dtype = "float32", shape = (13, 7, 10))#candidate|703|(13, 7, 10)|var|float32
bop_704 = relay.power(uop_698.astype('float32'), relay.reshape(var_703.astype('float32'), relay.shape_of(uop_698))) # shape=(13, 7, 10)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_716 = relay.var("var_716", dtype = "int16", shape = (12, 42))#candidate|716|(12, 42)|var|int16
call_715 = relay.TupleGetItem(func_486_call(relay.reshape(var_716.astype('int16'), [9, 7, 8])), 0)
call_717 = relay.TupleGetItem(func_488_call(relay.reshape(var_716.astype('int16'), [9, 7, 8])), 0)
bop_723 = relay.logical_or(uop_698.astype('bool'), relay.reshape(bop_695.astype('bool'), relay.shape_of(uop_698))) # shape=(13, 7, 10)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_727 = func_375_call()
call_728 = func_375_call()
output = relay.Tuple([bop_704,call_715,var_716,bop_723,call_727,])
output2 = relay.Tuple([bop_704,call_717,var_716,bop_723,call_728,])
func_733 = relay.Function([var_693,var_694,var_703,var_716,], output)
mod['func_733'] = func_733
mod = relay.transform.InferType()(mod)
var_734 = relay.var("var_734", dtype = "float32", shape = (13, 7, 10))#candidate|734|(13, 7, 10)|var|float32
var_735 = relay.var("var_735", dtype = "float32", shape = (13, 7, 10))#candidate|735|(13, 7, 10)|var|float32
var_736 = relay.var("var_736", dtype = "float32", shape = (13, 7, 10))#candidate|736|(13, 7, 10)|var|float32
var_737 = relay.var("var_737", dtype = "int16", shape = (12, 42))#candidate|737|(12, 42)|var|int16
output = func_733(var_734,var_735,var_736,var_737,)
func_738 = relay.Function([var_734,var_735,var_736,var_737,], output)
mutated_mod['func_738'] = func_738
mutated_mod = relay.transform.InferType()(mutated_mod)
const_754 = relay.const([[[True,True],[False,True],[True,True]],[[False,True],[False,True],[True,True]],[[True,True],[True,False],[False,False]],[[True,False],[False,False],[True,True]],[[False,False],[False,False],[False,True]],[[False,False],[False,False],[True,True]],[[False,False],[True,False],[True,False]],[[True,False],[False,False],[False,False]],[[True,True],[False,True],[True,False]]], dtype = "bool")#candidate|754|(9, 3, 2)|const|bool
const_755 = relay.const([[[True,False],[False,True],[False,True]],[[True,False],[True,True],[False,True]],[[True,False],[False,False],[True,False]],[[True,True],[False,False],[True,False]],[[True,False],[True,False],[True,True]],[[True,False],[True,True],[True,True]],[[True,False],[False,False],[True,False]],[[True,True],[False,True],[True,True]],[[False,False],[False,False],[False,True]]], dtype = "bool")#candidate|755|(9, 3, 2)|const|bool
bop_756 = relay.logical_and(const_754.astype('bool'), relay.reshape(const_755.astype('bool'), relay.shape_of(const_754))) # shape=(9, 3, 2)
output = bop_756
output2 = bop_756
func_769 = relay.Function([], output)
mod['func_769'] = func_769
mod = relay.transform.InferType()(mod)
output = func_769()
func_770 = relay.Function([], output)
mutated_mod['func_770'] = func_770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_774 = func_769_call()
call_775 = func_769_call()
output = relay.Tuple([call_774,])
output2 = relay.Tuple([call_775,])
func_780 = relay.Function([], output)
mod['func_780'] = func_780
mod = relay.transform.InferType()(mod)
output = func_780()
func_781 = relay.Function([], output)
mutated_mod['func_781'] = func_781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_818 = relay.TupleGetItem(func_363_call(), 3)
call_819 = relay.TupleGetItem(func_365_call(), 3)
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_822 = relay.TupleGetItem(func_285_call(), 0)
call_823 = relay.TupleGetItem(func_286_call(), 0)
uop_832 = relay.atanh(call_822.astype('float64')) # shape=(10, 11, 12)
uop_834 = relay.atanh(call_823.astype('float64')) # shape=(10, 11, 12)
func_436_call = mod.get_global_var('func_436')
func_438_call = mutated_mod.get_global_var('func_438')
call_837 = relay.TupleGetItem(func_436_call(relay.reshape(uop_832.astype('int64'), [10, 11, 12])), 1)
call_838 = relay.TupleGetItem(func_438_call(relay.reshape(uop_832.astype('int64'), [10, 11, 12])), 1)
output = relay.Tuple([call_818,uop_832,call_837,])
output2 = relay.Tuple([call_819,uop_834,call_838,])
func_849 = relay.Function([], output)
mod['func_849'] = func_849
mod = relay.transform.InferType()(mod)
mutated_mod['func_849'] = func_849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_849_call = mutated_mod.get_global_var('func_849')
call_850 = func_849_call()
output = call_850
func_851 = relay.Function([], output)
mutated_mod['func_851'] = func_851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_868 = relay.TupleGetItem(func_849_call(), 2)
call_869 = relay.TupleGetItem(func_851_call(), 2)
output = call_868
output2 = call_869
func_875 = relay.Function([], output)
mod['func_875'] = func_875
mod = relay.transform.InferType()(mod)
mutated_mod['func_875'] = func_875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mutated_mod.get_global_var('func_875')
call_876 = func_875_call()
output = call_876
func_877 = relay.Function([], output)
mutated_mod['func_877'] = func_877
mutated_mod = relay.transform.InferType()(mutated_mod)
const_891 = relay.const([[[-3.310393,-9.899051,-7.482312,2.064655,-9.346469],[-0.119943,0.533860,7.105036,6.496421,5.161843],[-5.461135,9.345974,-4.877630,9.976276,5.841330],[8.464762,-7.447201,7.052864,-1.568830,7.820074],[2.494442,7.986905,2.119229,-6.489255,9.589365],[1.605722,4.745391,-3.022359,4.562171,-3.838335],[-6.220534,-5.905179,8.585030,-5.347444,-6.024833],[2.631045,4.331755,-1.446866,2.096970,3.342055],[-7.106688,3.740508,3.810022,7.543183,4.336946],[-1.897971,6.450631,6.878097,-2.570735,8.805391],[3.944554,-3.172961,2.430621,-6.255269,-1.959165],[4.862285,-7.194924,-2.639860,-5.911822,-3.358749],[4.052398,-3.324176,9.228506,-7.507067,0.084830],[-8.490054,-7.916700,4.043979,9.378503,-2.340131],[-6.842100,9.170018,-1.043060,-2.601459,8.490942]],[[1.898980,5.379772,-4.864321,7.828933,8.192193],[-1.176646,9.670542,-0.009650,-4.930294,-4.386586],[1.628097,5.342009,2.456036,4.256010,-9.529021],[-7.616160,0.663040,0.289670,-0.343845,-7.643615],[3.691238,4.456063,7.835531,-5.566565,-4.507872],[0.980192,0.436209,-4.651306,-4.453871,-0.986225],[-4.193782,-3.725936,6.703743,6.632864,-0.786856],[5.955453,-2.977248,0.489501,-5.920349,-8.947378],[-8.062994,5.564111,-6.852380,7.268579,9.823369],[9.883220,-0.257806,0.117512,-1.351520,-8.483509],[3.918899,-0.568579,-5.324314,8.444965,5.400779],[3.120680,1.279926,4.244154,-8.160031,5.615748],[3.822027,-4.698737,-3.203185,6.058602,-1.844947],[-4.335727,9.856841,-3.346063,-6.615420,-3.015232],[2.341088,0.689317,-8.885734,-2.431756,1.590698]],[[-3.157069,-1.664665,5.355204,8.426475,8.724939],[-7.527854,7.647037,3.966616,2.448008,1.973433],[9.423887,-5.271042,-9.384244,-7.533866,2.544798],[-4.338525,-0.333226,-0.952914,5.040162,-0.950039],[-4.490646,-8.612068,-5.847351,6.009702,7.901074],[8.655773,0.994660,-5.496870,5.162547,-1.339645],[-3.176531,-2.576967,6.712351,-3.516318,-6.517795],[-5.158750,8.584839,-4.899714,-4.316061,-8.021484],[3.021961,-5.114073,6.683484,-2.770150,8.401954],[9.898610,0.304334,-3.552144,1.169638,6.379258],[8.809761,-7.384207,4.934458,-6.254189,-6.935997],[1.253958,6.447059,-8.545933,-3.229403,2.457802],[6.622635,-4.964167,-0.525742,0.610570,8.428714],[-3.668212,-3.667090,-4.938746,2.956533,2.700007],[8.739297,1.092073,1.339438,1.189287,-4.306565]],[[6.501413,3.841214,-8.441532,8.867710,8.974981],[6.946793,6.560792,-4.105078,0.297735,2.300009],[8.086069,4.020598,9.484962,-5.789410,7.218091],[6.438937,-6.699284,-8.687498,-1.432162,2.939169],[-6.846426,1.253781,-8.281107,5.386675,-0.635857],[1.835755,6.263263,-5.748927,3.398569,8.196271],[-7.843341,6.033576,-9.128562,7.184623,4.803306],[-5.456966,8.690045,-3.885688,-1.317573,5.891207],[-7.359446,-5.088370,-3.031874,-3.159869,-8.566295],[-3.163406,-8.100801,6.314663,3.835557,6.578529],[0.778776,-6.866467,-1.235351,8.239774,5.127645],[2.381432,7.716040,3.853173,-9.666146,0.773568],[-1.067573,7.482083,0.235513,5.155001,-4.281420],[-3.763109,-1.911866,-0.023645,3.561725,3.167290],[4.524372,-8.026076,2.774168,-1.465730,3.349344]],[[-4.483133,0.661809,-9.551964,-9.115035,8.196392],[-5.286642,1.964938,-6.871341,8.104968,9.183681],[-9.200121,1.419377,6.950117,7.326766,6.330265],[2.726713,-1.604099,5.916512,3.968334,-7.533908],[-0.128558,-6.615971,7.557699,-0.101063,-2.726420],[-8.791379,-7.908865,8.554756,-9.886862,8.837691],[5.865077,1.817483,0.511241,-5.932426,-0.017249],[1.323040,-4.356472,-4.698981,-8.222975,-1.457347],[-6.790970,-4.350966,1.897640,-5.435400,-3.321923],[9.753846,-9.015565,5.830221,1.113777,0.766411],[-5.608138,1.668617,-0.030290,-8.026237,-7.838876],[-7.587669,1.077642,1.634420,-0.995808,-0.002666],[8.059939,7.226181,-3.264008,8.604139,-8.943565],[-0.917897,7.784221,4.153582,0.543229,-9.369644],[2.862209,6.832779,0.113764,9.302737,-9.635658]],[[-2.881451,2.620976,-2.905289,-3.981146,3.473818],[-6.296726,9.115514,3.395915,3.523746,4.681072],[-6.105357,-7.356606,5.684247,-5.611721,-3.189273],[6.471663,-0.809457,-0.105937,-5.697154,-3.381470],[9.103274,0.352417,-1.003455,-7.410485,-1.313585],[-2.351220,-3.115529,-3.906844,-9.847055,-2.281786],[4.003659,-0.620773,-6.417779,-3.617358,9.762469],[-5.370552,8.923109,-8.999864,9.392251,-3.095644],[-9.477752,-9.160217,9.124370,-3.053056,-2.193865],[-1.203073,-1.645144,5.009402,9.035772,-6.077532],[6.224899,-6.384297,-8.941069,-8.020100,7.496332],[7.707853,4.496321,-0.496552,-3.624925,6.387756],[7.326032,3.744151,-6.817698,-0.488665,-5.872062],[-5.447169,7.826511,9.957352,7.173862,1.788223],[-9.110452,-6.374591,0.439212,-5.823383,-3.976832]],[[-3.830470,-2.091889,3.334836,-6.642057,-2.061412],[-3.212327,-7.555782,9.799360,-4.301929,-3.239898],[5.534453,-0.097065,-9.282821,-7.330549,-6.695407],[-2.348968,-4.019910,-0.732105,8.872770,2.514047],[6.322806,1.191434,-5.874427,5.169162,5.315610],[-1.418654,-0.078299,0.034058,-6.659362,-6.962815],[-9.186800,4.098413,9.890058,-5.521517,2.944810],[-4.719034,-7.006829,-5.408857,6.271413,7.659539],[3.180472,9.281695,-9.486870,9.283729,8.368156],[4.645771,-6.172334,-9.172408,-8.954159,7.030847],[0.167159,2.698155,9.247042,-0.862055,3.142661],[6.698815,4.467876,3.974020,9.670638,8.173934],[-3.913391,-9.571728,1.081974,-2.650547,-4.645049],[3.485231,9.331461,1.713843,0.614845,8.095329],[7.978638,1.220011,-6.074087,-8.254819,2.859603]],[[-4.110977,2.456590,0.048826,2.832371,-5.538225],[7.289830,5.705655,-9.324878,3.230696,-1.777876],[1.340112,3.564619,1.032565,7.718417,-4.286253],[8.168123,-2.694946,6.326014,6.735293,4.202996],[-1.272458,-6.244296,9.078821,-4.737979,-9.450165],[-8.552245,-0.739499,-3.219443,7.137321,-9.108884],[0.207345,-5.393046,-3.258967,9.551235,-2.706829],[4.726170,9.860820,7.481045,2.346953,1.700798],[-7.448314,0.575984,7.083344,-9.364283,0.850732],[-8.693544,-7.329122,-6.416376,4.157881,4.811576],[-4.873559,-7.747593,-6.857216,-7.297395,-1.066505],[1.753476,4.363539,3.194726,-9.500836,8.134572],[-0.660770,-9.807052,-7.285699,5.080477,-4.020779],[-2.691317,-2.243058,-7.910749,-6.621640,-6.505939],[-9.600902,6.414805,-9.923574,6.025702,7.533353]],[[-6.991703,-2.173369,-9.293453,5.122030,-0.899539],[-9.680621,-5.401357,-2.756157,0.990139,3.476448],[6.877805,7.838878,-1.707835,7.905931,9.842919],[-9.979751,9.198842,-8.509383,-6.425701,9.660809],[-6.582424,4.912459,-3.066597,4.540686,-4.654632],[0.348559,5.649794,-4.575721,-3.359787,6.185438],[-7.835442,2.259072,-4.443423,-7.167342,8.139120],[-9.741521,5.085591,-7.973516,8.773698,-5.265498],[4.501399,4.947546,-5.997773,-2.888880,2.236623],[-6.051314,4.640595,2.898224,-3.628877,-1.173061],[-4.484404,4.504857,-2.772028,6.474659,8.615477],[5.612053,-2.198314,0.001044,5.069871,0.520936],[6.301238,-6.598462,-8.496679,6.495446,3.804697],[-0.299454,-7.442989,-9.282846,-9.842368,-1.338781],[6.921335,-2.917854,-0.549894,-5.978207,9.205092]],[[-2.476640,-5.034712,1.484805,8.021529,1.454010],[9.914439,-0.634197,9.959000,-1.721125,-8.424346],[9.418852,0.938925,6.002798,-1.476513,9.924692],[-7.183080,-0.261840,-0.817418,6.643399,-9.346917],[5.247487,-7.512616,7.909411,-1.039635,7.231746],[-1.372883,-5.062047,-2.732309,4.809095,1.966296],[-1.410037,6.973167,-1.268931,0.499813,2.985599],[-8.090705,8.538782,-4.302686,-4.222950,-5.682098],[9.417304,2.858483,-0.325911,-1.793784,-2.932559],[-3.516152,2.988176,3.931215,-7.576121,4.684668],[6.982955,-7.707096,-0.657399,0.487742,4.083611],[8.585237,6.539796,-3.213177,-6.606647,3.271414],[-4.388649,-4.911550,5.397524,-2.212892,-4.211405],[2.754020,0.913544,-4.443613,-1.459695,0.810719],[6.634104,1.439926,7.384636,8.652127,-8.676664]]], dtype = "float32")#candidate|891|(10, 15, 5)|const|float32
uop_892 = relay.asin(const_891.astype('float32')) # shape=(10, 15, 5)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_894 = relay.TupleGetItem(func_363_call(), 1)
call_895 = relay.TupleGetItem(func_365_call(), 1)
output = relay.Tuple([uop_892,call_894,])
output2 = relay.Tuple([uop_892,call_895,])
func_899 = relay.Function([], output)
mod['func_899'] = func_899
mod = relay.transform.InferType()(mod)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_899_call = mutated_mod.get_global_var('func_899')
call_900 = func_899_call()
output = call_900
func_901 = relay.Function([], output)
mutated_mod['func_901'] = func_901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_913 = func_375_call()
call_914 = func_375_call()
func_780_call = mod.get_global_var('func_780')
func_781_call = mutated_mod.get_global_var('func_781')
call_942 = relay.TupleGetItem(func_780_call(), 0)
call_943 = relay.TupleGetItem(func_781_call(), 0)
uop_944 = relay.erf(call_942.astype('float32')) # shape=(9, 3, 2)
uop_946 = relay.erf(call_943.astype('float32')) # shape=(9, 3, 2)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_947 = func_375_call()
call_948 = func_375_call()
bop_953 = relay.maximum(uop_944.astype('float32'), relay.reshape(call_942.astype('float32'), relay.shape_of(uop_944))) # shape=(9, 3, 2)
bop_956 = relay.maximum(uop_946.astype('float32'), relay.reshape(call_943.astype('float32'), relay.shape_of(uop_946))) # shape=(9, 3, 2)
uop_958 = relay.sin(bop_953.astype('float32')) # shape=(9, 3, 2)
uop_960 = relay.sin(bop_956.astype('float32')) # shape=(9, 3, 2)
bop_974 = relay.floor_divide(uop_958.astype('float32'), relay.reshape(uop_944.astype('float32'), relay.shape_of(uop_958))) # shape=(9, 3, 2)
bop_977 = relay.floor_divide(uop_960.astype('float32'), relay.reshape(uop_946.astype('float32'), relay.shape_of(uop_960))) # shape=(9, 3, 2)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_982 = func_375_call()
call_983 = func_375_call()
output = relay.Tuple([call_913,call_947,bop_974,call_982,])
output2 = relay.Tuple([call_914,call_948,bop_977,call_983,])
func_988 = relay.Function([], output)
mod['func_988'] = func_988
mod = relay.transform.InferType()(mod)
output = func_988()
func_989 = relay.Function([], output)
mutated_mod['func_989'] = func_989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_1163 = relay.TupleGetItem(func_849_call(), 0)
call_1164 = relay.TupleGetItem(func_851_call(), 0)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_1169 = relay.var("var_1169", dtype = "int16", shape = (504,))#candidate|1169|(504,)|var|int16
call_1168 = relay.TupleGetItem(func_486_call(relay.reshape(var_1169.astype('int16'), [9, 7, 8])), 0)
call_1170 = relay.TupleGetItem(func_488_call(relay.reshape(var_1169.astype('int16'), [9, 7, 8])), 0)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
call_1182 = relay.TupleGetItem(func_486_call(relay.reshape(call_1168.astype('int16'), [9, 7, 8])), 0)
call_1183 = relay.TupleGetItem(func_488_call(relay.reshape(call_1168.astype('int16'), [9, 7, 8])), 0)
output = relay.Tuple([call_1163,call_1168,var_1169,call_1182,])
output2 = relay.Tuple([call_1164,call_1170,var_1169,call_1183,])
func_1189 = relay.Function([var_1169,], output)
mod['func_1189'] = func_1189
mod = relay.transform.InferType()(mod)
mutated_mod['func_1189'] = func_1189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1190 = relay.var("var_1190", dtype = "int16", shape = (504,))#candidate|1190|(504,)|var|int16
func_1189_call = mutated_mod.get_global_var('func_1189')
call_1191 = func_1189_call(var_1190)
output = call_1191
func_1192 = relay.Function([var_1190], output)
mutated_mod['func_1192'] = func_1192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_1194 = relay.TupleGetItem(func_988_call(), 2)
call_1195 = relay.TupleGetItem(func_989_call(), 2)
uop_1196 = relay.log(call_1194.astype('float64')) # shape=(9, 3, 2)
uop_1198 = relay.log(call_1195.astype('float64')) # shape=(9, 3, 2)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_1201 = relay.TupleGetItem(func_849_call(), 0)
call_1202 = relay.TupleGetItem(func_851_call(), 0)
output = relay.Tuple([uop_1196,call_1201,])
output2 = relay.Tuple([uop_1198,call_1202,])
func_1205 = relay.Function([], output)
mod['func_1205'] = func_1205
mod = relay.transform.InferType()(mod)
output = func_1205()
func_1206 = relay.Function([], output)
mutated_mod['func_1206'] = func_1206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_1215 = relay.TupleGetItem(func_849_call(), 0)
call_1216 = relay.TupleGetItem(func_851_call(), 0)
output = call_1215
output2 = call_1216
func_1240 = relay.Function([], output)
mod['func_1240'] = func_1240
mod = relay.transform.InferType()(mod)
mutated_mod['func_1240'] = func_1240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1240_call = mutated_mod.get_global_var('func_1240')
call_1241 = func_1240_call()
output = call_1241
func_1242 = relay.Function([], output)
mutated_mod['func_1242'] = func_1242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1246 = relay.var("var_1246", dtype = "float64", shape = (10, 10, 3))#candidate|1246|(10, 10, 3)|var|float64
uop_1247 = relay.log(var_1246.astype('float64')) # shape=(10, 10, 3)
output = uop_1247
output2 = uop_1247
func_1252 = relay.Function([var_1246,], output)
mod['func_1252'] = func_1252
mod = relay.transform.InferType()(mod)
var_1253 = relay.var("var_1253", dtype = "float64", shape = (10, 10, 3))#candidate|1253|(10, 10, 3)|var|float64
output = func_1252(var_1253)
func_1254 = relay.Function([var_1253], output)
mutated_mod['func_1254'] = func_1254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_780_call = mod.get_global_var('func_780')
func_781_call = mutated_mod.get_global_var('func_781')
call_1256 = relay.TupleGetItem(func_780_call(), 0)
call_1257 = relay.TupleGetItem(func_781_call(), 0)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
const_1263 = relay.const([[-7,3,-8,6,5,-8,-2,9,5,8,-6,6,-4,-5,-2,-7,1,-6,4,-9,-5,-2,-7,1,-1,-3,-4,4,-7,-6,-7,-9,-10,9,10,-4,7,4,-9,6,-5,-8,-10,-10,5,-10,-6,1,6,3,10,-3,-3,2,3,5,7,-9,-8,-5,-5,-5,4,1,8,7,9,-8,8,-8,8,-1,7,-3,10,-9,-5,-8,-2,10,-10,1,-9,-4,9,-10,-5,3,4,6,5,1,-2,8,7,-6,-7,8,8,-4,4,-3,8,1,-1,6,-4,6,5,2,4,-6,-6,8,6,10,-10,1,10,-8,8,-1,-10,-8,2,6,7,6,8,-9,8,6,-4,-5,-8,-9,8,9,-6,-4,7,2,-2,9,-4,4,-8,1,-7,10,9,2,-9,7,7,4,9,-10,-8,-3,-7,-6,7,-9,-6,-10,10,4,10,-7,-3,1,-8,-5,9,-1,-4,1,6,6,1,-9,-5,-2,-4,-3,1,9,6,8,-3,-2,-5,8,5,5,1,6,-7,-2,7,-10,-3,10,4,-5,-4,-3,1,2,7,-9,1,4,-6,-1,-4,-3,-9,-6,-8,9,9,-3,-5,-4,10,1,-3,-1,1,-3,-2,-4,9,3,1,1,4,-10,-9,-1,2,-2,7,3,5,5,-2,8,8,-9],[3,-9,-4,-8,-5,-5,3,1,1,7,10,5,2,-3,5,9,2,9,-9,2,-7,1,4,-7,-6,3,8,-9,-1,9,6,6,-8,-7,-3,2,-6,10,-5,-7,3,8,-7,-2,-1,6,10,7,-6,-6,-3,-9,-1,1,5,-6,7,2,3,4,-4,5,-10,-6,9,5,10,3,10,7,1,6,9,3,1,-10,-6,10,9,4,8,2,-3,1,-10,-1,-2,-10,-6,-5,-8,3,-9,-10,1,-6,3,-8,2,2,-6,2,1,-8,-5,-5,7,-7,-10,-3,-2,1,5,-2,7,-9,-6,-2,5,3,3,2,-5,-4,-5,8,-6,-3,-6,-1,8,7,-3,2,-9,9,-4,-1,10,-5,-4,2,-2,4,1,-3,5,4,3,9,10,3,9,-2,1,3,10,5,4,2,-3,6,-8,-8,-6,-2,-5,2,-1,10,-4,5,-10,-6,8,-10,4,10,4,-1,-5,9,-8,-1,-5,-8,3,3,-4,8,8,4,3,1,2,-10,-5,-8,-9,-1,-9,5,4,9,-8,1,-4,5,-9,-5,-10,-9,-5,7,5,10,9,-9,-5,9,5,9,-5,9,3,-6,-10,-8,-3,10,-5,5,8,-4,-4,6,5,1,10,-5,-7,-7,-5,3,-2,-7,5,-2,7,6,3,1]], dtype = "int16")#candidate|1263|(2, 252)|const|int16
call_1262 = relay.TupleGetItem(func_665_call(relay.reshape(const_1263.astype('int16'), [1, 504])), 2)
call_1264 = relay.TupleGetItem(func_667_call(relay.reshape(const_1263.astype('int16'), [1, 504])), 2)
uop_1267 = relay.log10(call_1262.astype('float32')) # shape=(1, 504)
uop_1269 = relay.log10(call_1264.astype('float32')) # shape=(1, 504)
output = relay.Tuple([call_1256,const_1263,uop_1267,])
output2 = relay.Tuple([call_1257,const_1263,uop_1269,])
func_1290 = relay.Function([], output)
mod['func_1290'] = func_1290
mod = relay.transform.InferType()(mod)
mutated_mod['func_1290'] = func_1290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1290_call = mutated_mod.get_global_var('func_1290')
call_1291 = func_1290_call()
output = call_1291
func_1292 = relay.Function([], output)
mutated_mod['func_1292'] = func_1292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_1342 = relay.TupleGetItem(func_988_call(), 2)
call_1343 = relay.TupleGetItem(func_989_call(), 2)
output = call_1342
output2 = call_1343
func_1352 = relay.Function([], output)
mod['func_1352'] = func_1352
mod = relay.transform.InferType()(mod)
mutated_mod['func_1352'] = func_1352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1352_call = mutated_mod.get_global_var('func_1352')
call_1353 = func_1352_call()
output = call_1353
func_1354 = relay.Function([], output)
mutated_mod['func_1354'] = func_1354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_1361 = func_375_call()
call_1362 = func_375_call()
uop_1368 = relay.acos(call_1361.astype('float64')) # shape=(10, 11, 12)
uop_1370 = relay.acos(call_1362.astype('float64')) # shape=(10, 11, 12)
output = uop_1368
output2 = uop_1370
func_1401 = relay.Function([], output)
mod['func_1401'] = func_1401
mod = relay.transform.InferType()(mod)
mutated_mod['func_1401'] = func_1401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1401_call = mutated_mod.get_global_var('func_1401')
call_1402 = func_1401_call()
output = call_1402
func_1403 = relay.Function([], output)
mutated_mod['func_1403'] = func_1403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_1460 = func_769_call()
call_1461 = func_769_call()
output = call_1460
output2 = call_1461
func_1466 = relay.Function([], output)
mod['func_1466'] = func_1466
mod = relay.transform.InferType()(mod)
output = func_1466()
func_1467 = relay.Function([], output)
mutated_mod['func_1467'] = func_1467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_1468 = relay.TupleGetItem(func_1205_call(), 1)
call_1469 = relay.TupleGetItem(func_1206_call(), 1)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_1481 = func_375_call()
call_1482 = func_375_call()
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
var_1518 = relay.var("var_1518", dtype = "int16", shape = (504,))#candidate|1518|(504,)|var|int16
call_1517 = relay.TupleGetItem(func_665_call(relay.reshape(var_1518.astype('int16'), [1, 504])), 2)
call_1519 = relay.TupleGetItem(func_667_call(relay.reshape(var_1518.astype('int16'), [1, 504])), 2)
output = relay.Tuple([call_1468,call_1481,call_1517,var_1518,])
output2 = relay.Tuple([call_1469,call_1482,call_1519,var_1518,])
func_1521 = relay.Function([var_1518,], output)
mod['func_1521'] = func_1521
mod = relay.transform.InferType()(mod)
var_1522 = relay.var("var_1522", dtype = "int16", shape = (504,))#candidate|1522|(504,)|var|int16
output = func_1521(var_1522)
func_1523 = relay.Function([var_1522], output)
mutated_mod['func_1523'] = func_1523
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1567 = relay.const([[[3.184607,4.570159,-9.392158,-6.292933,9.828028,3.091834],[-1.799994,-6.147444,0.327939,-5.737801,6.562154,-3.364735],[-9.634234,-7.538945,4.937472,-5.162326,-4.772025,-7.940565],[-0.370277,-0.249678,-6.035750,6.363344,5.905824,-1.758825],[9.900134,1.898521,4.781027,7.900276,-3.600238,4.410215],[2.534827,-4.411615,5.419909,-5.345308,0.927487,7.667317],[3.838239,-4.957853,-1.704010,6.801766,1.647653,2.394946],[3.426933,-6.085407,-3.338732,9.168563,-1.904502,1.562168],[-5.253136,4.759134,-0.975036,8.141247,8.221601,5.972425],[6.561007,-0.223123,6.227092,4.180808,-1.774810,-2.911488],[5.304644,1.441964,6.801788,8.246983,-3.562191,-6.184491],[-5.162807,-6.731423,5.547300,1.111989,5.831478,-2.817846],[7.436857,3.185887,2.980419,-1.139862,1.692371,-3.311309],[7.032775,5.146715,8.788536,-2.422640,3.079589,6.290076]],[[-4.960498,0.799802,-3.888982,-7.529880,-3.967003,-0.101372],[7.043969,-8.370240,-7.561786,-9.007204,4.089221,2.107294],[1.852846,-9.513190,2.048825,6.788874,-1.666223,0.470361],[-4.507018,3.434667,7.575505,7.307488,-1.267615,3.334626],[-0.216600,-5.687943,6.848944,-9.353848,-3.034119,-8.466727],[3.250696,8.326842,-2.007329,-7.993780,3.201711,5.594050],[0.018172,1.752465,0.062782,-8.223110,-7.020383,3.069488],[4.367953,-9.804404,-8.968895,9.919744,9.890344,0.669662],[9.709238,-8.088572,2.257069,6.281644,-9.532515,1.092856],[5.575816,-7.256852,-5.480419,-5.246463,9.274354,7.265560],[0.911336,9.118530,-8.927163,-5.789320,4.684674,-4.541443],[1.425017,1.063064,-5.936077,1.608421,4.146511,-2.619848],[0.450617,8.427142,7.018214,-8.345265,5.369457,0.759241],[-2.363564,9.449658,2.864378,9.011337,0.278999,-3.884241]],[[3.795776,4.242567,6.223820,-0.001560,-8.531577,-2.689392],[0.301572,-7.931427,-3.839199,-5.245018,-0.649274,-6.518896],[3.672478,-2.892252,7.288099,-5.970165,-2.236016,6.521160],[8.738126,-0.473845,2.358129,-4.037610,9.495765,4.733765],[-6.583571,-5.226127,6.512628,-4.268337,-9.906072,4.895043],[-1.990616,-4.406364,0.190410,-7.818984,-4.593413,7.475379],[9.894973,-7.327578,-4.788458,7.101180,8.572700,3.852351],[-6.833095,5.795799,-5.154304,-9.851036,-4.489988,9.383538],[-2.987435,2.187131,-3.829877,-4.720017,-0.715212,-4.943131],[-5.295926,8.377760,-4.034248,-7.033690,2.620114,4.885438],[-6.166774,-4.743834,0.930601,2.736268,0.657928,-6.837867],[4.949381,-4.100793,3.369301,-7.890426,-4.829395,4.897508],[6.673790,7.759822,1.815065,-0.371347,4.477322,-1.449959],[1.547631,-0.309701,-6.619708,-1.802091,-7.866144,2.009173]],[[-2.430569,6.114809,-6.096191,6.208160,9.998367,-0.752351],[7.829872,-9.321503,0.063040,4.612405,-1.489734,3.439918],[-9.134711,-6.745079,-8.177089,-7.227360,-4.149354,4.860416],[-8.010478,-0.014359,-7.113683,-3.136518,6.198011,-1.714220],[-5.063032,8.931748,9.927356,4.165477,2.001618,-4.070266],[-9.740527,-3.721202,4.107716,2.972272,-4.693597,9.615764],[-0.850027,-1.205594,-4.611418,-8.864923,1.161961,-8.441399],[-8.680164,-7.745812,3.703723,-6.971474,-0.328961,-9.133965],[-3.111976,1.829952,4.995387,3.192354,7.683008,-8.842387],[-4.882023,-3.722951,-5.874112,3.088377,-0.979863,-4.305014],[-4.896991,0.305598,1.947680,-5.704377,7.961970,-1.397220],[-7.255127,-2.568023,-0.410511,-4.239184,2.449628,-3.440286],[5.367309,0.577363,8.873602,2.825624,-4.998738,-3.995802],[2.815411,7.423382,8.645499,7.010424,-6.537275,4.558190]],[[-1.264753,6.703971,-5.463673,-6.950899,9.556590,0.202189],[9.309334,8.403090,-3.545089,-5.879030,-0.331551,-2.398591],[3.715020,-6.285324,-7.514967,-9.817866,0.315113,-0.078379],[2.802556,6.692013,-1.937563,-6.084571,5.438905,9.832443],[1.675982,4.477882,-9.107621,6.805082,-7.202303,9.117126],[8.944426,0.700557,7.853564,-4.747038,-6.092018,-1.811213],[0.611393,6.433829,-3.911485,-3.110714,-7.868063,9.836018],[0.915495,-7.059952,-2.031851,-9.841710,-4.443536,-0.149353],[-2.072378,-7.835256,-1.202394,5.179617,3.176126,2.115271],[-2.845399,-2.606096,6.085081,2.274430,-3.621031,-6.246697],[9.986949,8.055138,2.937625,4.609607,-5.991629,-9.582655],[-9.222342,-7.766765,-6.582295,2.058761,1.103763,1.570124],[-0.381013,-1.391933,8.033972,3.789730,8.430956,-7.435020],[5.399359,-5.225150,3.025187,-5.836335,2.120894,-2.757610]],[[-4.788694,-4.510821,4.910832,3.026708,-5.919945,-6.867593],[-1.521697,-7.721329,-1.539380,-0.660954,-1.422997,-4.544076],[-3.520786,-1.443943,2.801065,1.771319,-8.571706,-0.586917],[-1.800219,8.008229,9.824141,-5.430045,-8.492575,0.247177],[8.283583,-1.701936,5.309069,9.166995,4.661737,2.109894],[-2.884671,5.840226,-1.147552,-9.360817,5.160046,6.728545],[-3.286553,-4.997004,-9.424636,0.869051,-4.905415,5.238181],[-2.806901,6.571764,-4.903323,9.813406,1.990035,-3.924271],[-9.515705,-7.840251,-2.941484,-3.855990,8.398482,1.328089],[-6.032969,3.820462,-3.933397,-0.130832,-2.332750,4.311778],[-8.754941,1.160025,8.134272,0.961406,2.935696,7.873395],[2.491119,-4.208590,-9.291828,-8.639176,-8.184021,7.333795],[5.863696,-9.996631,6.671101,-3.695102,-8.743734,-7.794348],[5.060640,8.224205,6.941206,0.720627,-0.453589,-4.817603]],[[9.271673,5.624099,-2.228599,2.871104,6.285373,8.605695],[4.659977,-2.786935,-7.716129,7.327165,0.992274,-1.678795],[5.769042,0.805530,7.874663,-8.194507,2.024270,-1.876463],[1.900017,4.907905,4.434399,3.513707,-8.227962,-6.753798],[-5.139453,5.979074,-6.788802,2.061685,5.747175,3.822649],[-8.097439,9.587200,-7.395231,4.265143,5.683480,-9.313867],[-8.932247,2.154093,1.812603,7.515852,9.392702,7.176565],[-5.430728,1.726813,-2.604115,-6.701316,4.218702,-5.112640],[6.990145,3.904910,-6.306330,-1.595561,1.215748,6.487370],[6.964955,0.794961,8.679351,8.006426,6.301336,2.290517],[7.472506,-0.171941,-6.159738,-3.196167,-1.040988,-5.825479],[3.294204,4.814346,4.742280,-3.475674,8.073398,0.270296],[-9.077052,-6.002321,-5.989222,0.629683,7.701047,-4.308647],[-4.665747,-5.310491,-3.379515,1.318591,5.715833,-4.465520]],[[-1.016068,1.744457,-4.200621,-4.598032,8.158579,-0.633205],[5.640002,-5.447202,5.528818,-5.842492,9.594103,4.312934],[0.203659,-3.385126,5.413904,0.394649,3.172480,-3.749785],[-9.376880,-0.039482,8.524179,0.851130,5.589038,-7.131272],[-2.047091,-5.854312,7.085517,8.848705,2.856455,0.876392],[-5.279735,-2.858229,2.749257,-6.277599,1.460198,-6.096083],[3.590728,3.093707,1.331730,-5.296344,-3.723221,1.680258],[-3.222892,1.848351,-9.207310,-5.436050,0.498669,-6.165756],[4.349522,-2.710868,-4.700238,-9.458347,-9.252563,-6.292278],[7.969098,0.503831,1.579939,2.365225,0.437587,1.185075],[8.321245,7.527260,-5.838802,7.737623,-2.622917,2.794861],[-4.430242,-8.424063,4.008066,-9.166869,1.266915,4.057451],[7.689623,-1.924056,7.523155,-8.412299,-7.665538,8.703292],[-7.162564,-3.184115,8.031863,0.176226,1.399690,-4.899449]],[[-7.471914,9.628894,4.107866,-3.063642,6.642121,7.843215],[2.564791,6.324494,7.615977,-6.148870,-7.363468,-6.678432],[-5.651599,2.751386,-1.075171,5.792561,4.409561,-1.224148],[9.421198,9.439794,-7.418604,3.928726,-1.692971,2.471806],[7.288253,9.862163,-1.249712,6.124880,3.525024,5.314377],[1.849304,-2.831586,0.897518,2.868215,-6.446956,-0.390304],[5.821696,-9.691077,-2.932775,-2.894423,6.570609,2.181845],[5.598439,2.027337,-4.167349,-2.211059,6.759771,-2.042760],[-7.929986,3.235676,-0.454382,9.928050,1.115137,4.599478],[6.802795,2.228005,-0.354973,-3.566999,-2.516808,-6.739353],[-5.044711,-5.995873,-1.609516,7.449503,-9.712154,5.531470],[-6.373279,-9.429675,-6.706884,7.123218,2.763300,-5.652700],[-0.888923,-8.500586,-1.267693,8.305908,8.122086,-8.076648],[-0.306293,-3.890728,-2.921130,5.514345,-3.941187,-5.653078]]], dtype = "float32")#candidate|1567|(9, 14, 6)|const|float32
uop_1568 = relay.cosh(const_1567.astype('float32')) # shape=(9, 14, 6)
bop_1571 = relay.bitwise_and(uop_1568.astype('int16'), relay.reshape(const_1567.astype('int16'), relay.shape_of(uop_1568))) # shape=(9, 14, 6)
uop_1607 = relay.sin(uop_1568.astype('float64')) # shape=(9, 14, 6)
output = relay.Tuple([bop_1571,uop_1607,])
output2 = relay.Tuple([bop_1571,uop_1607,])
func_1614 = relay.Function([], output)
mod['func_1614'] = func_1614
mod = relay.transform.InferType()(mod)
mutated_mod['func_1614'] = func_1614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1614_call = mutated_mod.get_global_var('func_1614')
call_1615 = func_1614_call()
output = call_1615
func_1616 = relay.Function([], output)
mutated_mod['func_1616'] = func_1616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1290_call = mod.get_global_var('func_1290')
func_1292_call = mutated_mod.get_global_var('func_1292')
call_1668 = relay.TupleGetItem(func_1290_call(), 0)
call_1669 = relay.TupleGetItem(func_1292_call(), 0)
output = call_1668
output2 = call_1669
func_1672 = relay.Function([], output)
mod['func_1672'] = func_1672
mod = relay.transform.InferType()(mod)
output = func_1672()
func_1673 = relay.Function([], output)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1677 = relay.var("var_1677", dtype = "int32", shape = ())#candidate|1677|()|var|int32
var_1678 = relay.var("var_1678", dtype = "int32", shape = (10, 3, 5))#candidate|1678|(10, 3, 5)|var|int32
bop_1679 = relay.bitwise_xor(var_1677.astype('int32'), var_1678.astype('int32')) # shape=(10, 3, 5)
output = relay.Tuple([bop_1679,])
output2 = relay.Tuple([bop_1679,])
func_1704 = relay.Function([var_1677,var_1678,], output)
mod['func_1704'] = func_1704
mod = relay.transform.InferType()(mod)
mutated_mod['func_1704'] = func_1704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1704_call = mutated_mod.get_global_var('func_1704')
var_1706 = relay.var("var_1706", dtype = "int32", shape = ())#candidate|1706|()|var|int32
var_1707 = relay.var("var_1707", dtype = "int32", shape = (10, 3, 5))#candidate|1707|(10, 3, 5)|var|int32
call_1705 = func_1704_call(var_1706,var_1707,)
output = call_1705
func_1708 = relay.Function([var_1706,var_1707,], output)
mutated_mod['func_1708'] = func_1708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_769_call = mod.get_global_var('func_769')
func_770_call = mutated_mod.get_global_var('func_770')
call_1713 = func_769_call()
call_1714 = func_769_call()
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_1721 = relay.TupleGetItem(func_363_call(), 3)
call_1722 = relay.TupleGetItem(func_365_call(), 3)
output = relay.Tuple([call_1713,call_1721,])
output2 = relay.Tuple([call_1714,call_1722,])
func_1727 = relay.Function([], output)
mod['func_1727'] = func_1727
mod = relay.transform.InferType()(mod)
mutated_mod['func_1727'] = func_1727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1727_call = mutated_mod.get_global_var('func_1727')
call_1728 = func_1727_call()
output = call_1728
func_1729 = relay.Function([], output)
mutated_mod['func_1729'] = func_1729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1466_call = mod.get_global_var('func_1466')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_1751 = func_1466_call()
call_1752 = func_1466_call()
func_285_call = mod.get_global_var('func_285')
func_286_call = mutated_mod.get_global_var('func_286')
call_1760 = relay.TupleGetItem(func_285_call(), 0)
call_1761 = relay.TupleGetItem(func_286_call(), 0)
func_665_call = mod.get_global_var('func_665')
func_667_call = mutated_mod.get_global_var('func_667')
const_1765 = relay.const([-4,7,-9,6,-6,1,1,10,-5,-4,8,1,-5,1,8,-1,2,-4,2,-5,6,4,3,5,3,-2,-9,1,10,3,9,10,3,4,-8,6,6,-3,-4,-9,-8,-7,4,10,1,-1,9,-2,9,-8,7,-1,5,-4,-2,5,-3,-6,-2,2,2,-4,7,5,-3,1,8,5,-7,2,1,9,10,3,-2,7,-8,-6,8,9,4,-3,3,6,8,-9,-3,-5,4,9,2,-9,-7,-7,4,-8,7,3,-1,2,-4,10,-1,-4,-4,-8,-9,9,2,2,-2,-6,-4,-3,-7,4,-7,-1,-9,3,6,-2,-10,10,8,10,4,3,7,1,-10,-5,9,-7,-1,-6,4,3,-10,8,4,-10,-7,6,-8,10,-2,-8,3,3,-8,10,-8,7,-5,-8,4,9,2,7,-2,9,-2,-9,4,8,3,-5,-10,-9,-9,7,-6,7,4,9,1,-4,-6,-9,-6,-2,4,8,-2,-10,-5,-4,-5,-10,-7,7,-8,2,-3,-6,-7,-8,8,4,4,-10,-4,9,-7,10,-7,-3,-7,10,-7,9,-7,-4,2,4,5,4,-8,1,-3,3,-8,-6,3,-7,4,-6,-2,3,-2,1,-1,-9,9,8,8,3,-8,-3,6,-3,5,-1,-4,10,-3,3,5,5,-1,9,2,7,2,1,9,10,5,-8,8,-5,10,-3,2,-10,-10,-4,10,4,-3,-2,1,6,-5,-7,6,-2,-1,-1,6,8,2,-10,-3,-6,9,1,-2,-8,-3,2,6,-4,-10,10,8,-1,9,-3,-6,-1,7,-7,-8,7,-9,-1,-4,1,-1,9,-10,10,-6,2,-9,8,-4,6,1,3,4,-6,10,2,10,-9,-6,8,1,3,-2,8,8,-7,-9,3,-6,-2,6,-6,-5,-9,-5,2,-8,7,-8,5,9,6,-4,-3,-8,7,-9,2,-1,7,-9,-3,4,6,-7,7,-5,-5,-4,9,3,5,2,-8,-2,10,-3,-8,-5,10,-5,7,2,9,10,7,8,7,-1,3,-1,-5,-6,-3,7,-10,-10,4,-10,-7,5,-8,-6,-2,-2,-2,-8,9,-2,-4,8,5,2,10,-6,-4,1,-5,7,-5,4,1,-4,5,-5,-7,2,10,3,8,9,10,2,-6,-3,-7,8,-7,8,-10,-1,-3,1,1,-5,1,8,1,-7,10,-10,6,-3,-2,-7,6,-1,2,-4,8,-1,1,-2,-1,1,-8,-6,-9,-7,2,3,-1,8,-10,6,10,-7,-7,5,-8,7,7,10,4,5,1,-5,6,-8,6,2,-1,10,10,8,-2,-5,10,-5,3,2,9,8,3], dtype = "int16")#candidate|1765|(504,)|const|int16
call_1764 = relay.TupleGetItem(func_665_call(relay.reshape(const_1765.astype('int16'), [1, 504])), 1)
call_1766 = relay.TupleGetItem(func_667_call(relay.reshape(const_1765.astype('int16'), [1, 504])), 1)
func_1290_call = mod.get_global_var('func_1290')
func_1292_call = mutated_mod.get_global_var('func_1292')
call_1767 = relay.TupleGetItem(func_1290_call(), 1)
call_1768 = relay.TupleGetItem(func_1292_call(), 1)
output = relay.Tuple([call_1751,call_1760,call_1764,const_1765,call_1767,])
output2 = relay.Tuple([call_1752,call_1761,call_1766,const_1765,call_1768,])
func_1793 = relay.Function([], output)
mod['func_1793'] = func_1793
mod = relay.transform.InferType()(mod)
mutated_mod['func_1793'] = func_1793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mutated_mod.get_global_var('func_1793')
call_1794 = func_1793_call()
output = call_1794
func_1795 = relay.Function([], output)
mutated_mod['func_1795'] = func_1795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_1829 = relay.TupleGetItem(func_1205_call(), 1)
call_1830 = relay.TupleGetItem(func_1206_call(), 1)
uop_1835 = relay.log10(call_1829.astype('float64')) # shape=(10, 11, 12)
uop_1837 = relay.log10(call_1830.astype('float64')) # shape=(10, 11, 12)
output = uop_1835
output2 = uop_1837
func_1842 = relay.Function([], output)
mod['func_1842'] = func_1842
mod = relay.transform.InferType()(mod)
output = func_1842()
func_1843 = relay.Function([], output)
mutated_mod['func_1843'] = func_1843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_1856 = relay.TupleGetItem(func_363_call(), 3)
call_1857 = relay.TupleGetItem(func_365_call(), 3)
output = relay.Tuple([call_1856,])
output2 = relay.Tuple([call_1857,])
func_1882 = relay.Function([], output)
mod['func_1882'] = func_1882
mod = relay.transform.InferType()(mod)
mutated_mod['func_1882'] = func_1882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1882_call = mutated_mod.get_global_var('func_1882')
call_1883 = func_1882_call()
output = call_1883
func_1884 = relay.Function([], output)
mutated_mod['func_1884'] = func_1884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_1910 = func_375_call()
call_1911 = func_375_call()
var_1913 = relay.var("var_1913", dtype = "int64", shape = (10, 11, 12))#candidate|1913|(10, 11, 12)|var|int64
bop_1914 = relay.logical_xor(call_1910.astype('int64'), relay.reshape(var_1913.astype('int64'), relay.shape_of(call_1910))) # shape=(10, 11, 12)
bop_1917 = relay.logical_xor(call_1911.astype('int64'), relay.reshape(var_1913.astype('int64'), relay.shape_of(call_1911))) # shape=(10, 11, 12)
uop_1940 = relay.cos(var_1913.astype('float64')) # shape=(10, 11, 12)
uop_1944 = relay.sqrt(call_1910.astype('float64')) # shape=(10, 11, 12)
uop_1946 = relay.sqrt(call_1911.astype('float64')) # shape=(10, 11, 12)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_1947 = func_1401_call()
call_1948 = func_1401_call()
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_1951 = relay.TupleGetItem(func_988_call(), 3)
call_1952 = relay.TupleGetItem(func_989_call(), 3)
func_1252_call = mod.get_global_var('func_1252')
func_1254_call = mutated_mod.get_global_var('func_1254')
var_1955 = relay.var("var_1955", dtype = "float64", shape = (300,))#candidate|1955|(300,)|var|float64
call_1954 = func_1252_call(relay.reshape(var_1955.astype('float64'), [10, 10, 3]))
call_1956 = func_1252_call(relay.reshape(var_1955.astype('float64'), [10, 10, 3]))
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
call_1957 = func_1240_call()
call_1958 = func_1240_call()
func_1521_call = mod.get_global_var('func_1521')
func_1523_call = mutated_mod.get_global_var('func_1523')
var_1963 = relay.var("var_1963", dtype = "int16", shape = (504,))#candidate|1963|(504,)|var|int16
call_1962 = relay.TupleGetItem(func_1521_call(relay.reshape(var_1963.astype('int16'), [504,])), 3)
call_1964 = relay.TupleGetItem(func_1523_call(relay.reshape(var_1963.astype('int16'), [504,])), 3)
output = relay.Tuple([bop_1914,uop_1940,uop_1944,call_1947,call_1951,call_1954,var_1955,call_1957,call_1962,var_1963,])
output2 = relay.Tuple([bop_1917,uop_1940,uop_1946,call_1948,call_1952,call_1956,var_1955,call_1958,call_1964,var_1963,])
func_1981 = relay.Function([var_1913,var_1955,var_1963,], output)
mod['func_1981'] = func_1981
mod = relay.transform.InferType()(mod)
var_1982 = relay.var("var_1982", dtype = "int64", shape = (10, 11, 12))#candidate|1982|(10, 11, 12)|var|int64
var_1983 = relay.var("var_1983", dtype = "float64", shape = (300,))#candidate|1983|(300,)|var|float64
var_1984 = relay.var("var_1984", dtype = "int16", shape = (504,))#candidate|1984|(504,)|var|int16
output = func_1981(var_1982,var_1983,var_1984,)
func_1985 = relay.Function([var_1982,var_1983,var_1984,], output)
mutated_mod['func_1985'] = func_1985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_2035 = func_375_call()
call_2036 = func_375_call()
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2058 = func_1672_call()
call_2059 = func_1672_call()
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
call_2087 = func_1240_call()
call_2088 = func_1240_call()
output = relay.Tuple([call_2035,call_2058,call_2087,])
output2 = relay.Tuple([call_2036,call_2059,call_2088,])
func_2101 = relay.Function([], output)
mod['func_2101'] = func_2101
mod = relay.transform.InferType()(mod)
mutated_mod['func_2101'] = func_2101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mutated_mod.get_global_var('func_2101')
call_2102 = func_2101_call()
output = call_2102
func_2103 = relay.Function([], output)
mutated_mod['func_2103'] = func_2103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_2129 = func_1401_call()
call_2130 = func_1401_call()
output = relay.Tuple([call_2129,])
output2 = relay.Tuple([call_2130,])
func_2137 = relay.Function([], output)
mod['func_2137'] = func_2137
mod = relay.transform.InferType()(mod)
mutated_mod['func_2137'] = func_2137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2138 = func_2137_call()
output = call_2138
func_2139 = relay.Function([], output)
mutated_mod['func_2139'] = func_2139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2215 = relay.var("var_2215", dtype = "float32", shape = ())#candidate|2215|()|var|float32
var_2216 = relay.var("var_2216", dtype = "float32", shape = (5, 14, 5))#candidate|2216|(5, 14, 5)|var|float32
bop_2217 = relay.floor_mod(var_2215.astype('float32'), var_2216.astype('float32')) # shape=(5, 14, 5)
func_436_call = mod.get_global_var('func_436')
func_438_call = mutated_mod.get_global_var('func_438')
const_2225 = relay.const([[-3,-2,-6,-2,6,-1,-9,-7,-1,-4,6,2,-6,4,4,-7,-2,-9,3,9,-1,8,7,5,-2,-8,-3,-6,7,-10,-6,7,8,-6,5,2,-8,-6,-8,5,-1,10,3,2,6,2,-1,-9,5,1,3,-8,6,5,6,-5,3,9,-1,-8,3,8,1,4,-3,5,-10,4,-8,9,-9,9,10,-9,-10,-8,9,6,3,5,5,-1,-5,-9,4,-7,4,6,-5,-7,-4,-8,10,4,-4,-9,-10,-3,5,-8,-2,5,-2,-2,-6,3,-5,-2,7,-8,4,1,8,-9,-8,4,-3,-7,-10,3,9,5,-9,9,-2,8,-6,9,2,9,-6,-1,-3,-5,1,-8,-6,-6,-7,-2,4,4,8,6,-1,2,-9,8,3,-5,-3,-5,-4,-7,-6,10,10,1,-7,-8,5,8,2,8,-1,-10,-5,-7,-7,-2,5,6,7,-3,-6,3,-10,-5,-8,10,5,-6,-6,-9,-9,-10,2,10,-3,2,-4,9,9,-8,7,8,9,-2,9,10,10,-4,5,-2,5,-6,-2,-2,-10,-7,8,1,-1,2,4,-10,1,-9,-6,-5,-6,9,-7,-8,-3,8,-10,9,-1,1,-5,10,-5,-4,-9,-1,9,2,2,5,-4,-7,1,6,-8,-7,-10,-9,-7,5,10,-2,7,-7,3,6,-6,-2,10,-8,6,1,4,2,-3,-9,2,-3,5,-10,3,-6,1,-3,7,-9,-1,-1,-10,-8,10,5,-1,1,-10,6,6,-10,1,10,-9,3,1,4,-8,6,2,-8,-2,10,-9,-5,10,4,3,1,4,1,-9,7,-9,-3,-6,3,1,10,-2,9,-2,-5,-8,4,-10,7,2,-9,9,-10,-5,1,-8,10,-7,2,-1,-2,-1,10,3,-5,3,6,5,5,10,-10,10,-8,8,-4,-7,9,-7,1,8,7,-9,-3,8,8,7,-10,-5,-2,8,-3,4,-5,3,-1,4,-2,10,9,7,-9,5,-1,-8,5,-1,-3,2,-8,-3,-6,8,2,-5,-5,10,7,3,-8,-3,9,3,10,9,10,8,3,-4,-1,7,5,2,-7,-2,-8,-9,-8,8,-10,6,10,-6,8,-7,-2,7,-6,-9,-7,-7,5,-1,-2,1,-5,4,8,10,1,-7,4,8,6,-10,-8,8,-6,-6,-8,-2,1,10,-5,7,8,9,-1,-9,-6,-10,9,-10,4,5,1,5,-3,-5,-5,-8,-8,4,-8,6,3,10,3,9,6,-7,3,-2,9,9,-10,5,-4,9,4,-5,1,-1,7,-2,-7,-3,3,7,1,-3,2,10,9,-9,-7,1,2,-4,3,-4,-5,1,2,-1,3,-7,4,-3,7,7,6,3,2,-9,-3,5,3,7,3,10,2,1,5,2,-5,7,8,3,7,-5,6,10,8,-5,-7,-7,2,-6,3,10,-8,-3,-7,8,-8,-6,-5,-6,-6,-3,7,4,1,8,-10,6,-5,6,-5,8,9,10,4,6,8,-3,-3,-6,-8,8,3,6,3,10,8,1,-3,1,8,7,1,5,-8,-6,-7,4,10,-8,4,3,7,7,-7,-7,-8,-5,6,-10,-2,3,-5,-9,-9,-10,-4,-2,6,-1,10,10,-4,-6,4,9,4,-3,-8,-6,9,7,8,6,-3,-7,-7,-10,9,-3,1,6,3,4,4,-8,5,-10,-7,5,3,2,8,-3,7,9,-8,-3,8,2,-7,-7,-6,-3,3,-4,9,-8,-7,3,7,-1,-1,-5,2,-1,8,9,-4,8,2,4,9,10,5,1,9,6,-6,7,8,7,7,-9,-10,-8,10,-6,8,-4,-1,-2,7,-10,-10,-1,6,-2,3,4,10,-8,8,7,9,-6,8,-1,-9,-10,-8,5,10,-9,-1,-8,6,1,-7,-9,-2,9,6,-7,-10,2,-9,-6,-8,-1,7,-10,-3,-7,9,-9,1,-3,7,-2,6,-9,-2,-1,7,9,-1,-6,-10,-9,7,2,-7,6,4,2,-3,4,-5,6,-8,5,6,6,-4,-6,2,-10,-6,2,4,1,-7,3,-1,4,-5,-1,-2,-8,-1,-9,6,-1,-8,2,8,-1,10,5,-4,3,9,10,-10,-10,-5,-3,8,3,8,10,-9,-1,3,-10,-6,-6,-6,10,7,6,-9,-4,4,5,-3,10,-3,10,-8,5,-5,10,-1,7,10,-1,4,-8,-3,10,7,7,-10,10,-9,-3,7,-6,-6,6,8,-7,-3,1,-7,1,3,-5,-4,3,1,-10,1,-7,-10,-3,10,-1,6,-10,-4,-8,-8,-10,-10,-8,8,9,5,-8,-9,-5,2,4,9,10,5,-10,3,-7,-2,-5,-4,-2,10,-6,-9,-10,9,9,-7,1,9,7,1,6,-1,-4,5,6,3,4,2,-5,7,-1,4,-8,-5,-4,3,10,3,8,1,3,7,8,-1,-2,-10,5,-5,7,-2,-6,5,6,3,5,-10,-8,8,-6,-2,9,1,5,9,-6,5,3,-2,-7,6,7,-2,5,-2,1,1,-3,4,-8,2,-5,8,6,-8,4,-4,-10,-7,-8,-5,-2,-9,-9,-5,-7,1,-3,-9,-10,1,-10,5,3,6,9,-10,-8,-8,-1,3,9,1,4,10,-8,-8,-7,-10,-4,-2,8,6,1,4,-6,-4,-1,-6,5,-3,-6,-1,5,-5,-8,4,1,3,-5,-5,-1,5,-4,-1,8,3,-4,-8,6,7,-4,-3,2,-8,10,-9,4,7,6,8,1,-7,4,5,9,-7,5,-8,5,-4,-1,9,9,-5,5,9,3,-2,-1,10,-1,3,-8,-2,10,7,1,9,2,-4,-5,3,-9,8,4,-10,-6,10,7,-4,-10,-8,-7,-10,9,7,7,6,7,-5,-2,7,-7,10,8,1,-7,10,4,-4,-6,-10,3,10,-8,2,-10,-5,-7,-1,1,5,-10,1,-5,-10,-7,5,-4,9,-9,-1,-1,6,-5,5,10,3,6,-8,10,3,6,-5,-2,2,5,-10,4,-6,-6,5,10,-8,2,7,-1,9,-8,-8,9,4,7,-2,-2,10,-9,4,2,8,-9,8,-7,9,-1,8,9,4,5,-7,-6,5,-1,-7,-2,-9,-3,-2,3,-8,10,-4,9,7,6,1,2,-7,6,7,2,2,2,6,7,2,1,8,-6,3,8,3,-3,-2,6,-10,5,4,6,-7,-5,10,-6,7,3,5,-8,-1,1,-10,3,7,-2,7,10,-10,-2,-2,-9,2,9,-3,-8,-7,-8,-7,-9,-10,5,8,1,2,-10,-4,3,1,5,-8,8,3,-2,-8,-3,1,-6,-3,9,-10,10,-8,-10,-5,-2,-10,-8,-8,-1,3,-5,-4,-5,5,2,3,-7,-5,1,-4,2,-5,6,3,8,-3,-2,1,4,1,1,-10,-8,-7,-4,2,-4,-8,-8,8,-9,-10,-8,10,9,1,-9,10,7,-4,8,-9,-3,-3,-2,-9,-3,-3,2,-6,7,2]], dtype = "int64")#candidate|2225|(1, 1320)|const|int64
call_2224 = relay.TupleGetItem(func_436_call(relay.reshape(const_2225.astype('int64'), [10, 11, 12])), 0)
call_2226 = relay.TupleGetItem(func_438_call(relay.reshape(const_2225.astype('int64'), [10, 11, 12])), 0)
output = relay.Tuple([bop_2217,call_2224,const_2225,])
output2 = relay.Tuple([bop_2217,call_2226,const_2225,])
func_2233 = relay.Function([var_2215,var_2216,], output)
mod['func_2233'] = func_2233
mod = relay.transform.InferType()(mod)
mutated_mod['func_2233'] = func_2233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2233_call = mutated_mod.get_global_var('func_2233')
var_2235 = relay.var("var_2235", dtype = "float32", shape = ())#candidate|2235|()|var|float32
var_2236 = relay.var("var_2236", dtype = "float32", shape = (5, 14, 5))#candidate|2236|(5, 14, 5)|var|float32
call_2234 = func_2233_call(var_2235,var_2236,)
output = call_2234
func_2237 = relay.Function([var_2235,var_2236,], output)
mutated_mod['func_2237'] = func_2237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_2292 = relay.TupleGetItem(func_988_call(), 3)
call_2293 = relay.TupleGetItem(func_989_call(), 3)
const_2302 = relay.const([[[-8,10,-9,-8,-10,4,-1,-1,6,-4,-10,4],[7,5,-10,-5,-9,-6,5,-3,-8,6,-7,-2],[-3,-6,9,10,4,9,6,-4,8,3,6,8],[-4,-3,1,6,4,-10,-9,-10,-6,7,-4,4],[1,-7,5,10,2,-10,3,-9,-7,-9,-9,-7],[1,-6,-5,8,10,-4,1,-4,-9,5,10,8],[-5,4,-9,1,-5,4,-7,-7,-6,-2,2,9],[10,-5,10,-10,4,10,-4,-1,8,-10,-8,2],[5,2,-9,1,6,2,1,2,-5,-7,3,-8],[5,-6,5,6,3,7,10,-1,-6,-4,-4,-2],[-9,8,1,1,-5,9,-6,-8,-3,-8,5,-9]],[[2,-7,10,-5,-2,-8,-8,9,7,-3,-2,-9],[8,-8,-1,-3,2,9,-1,8,-7,8,-7,-9],[4,-7,-3,-1,-6,-1,10,9,-3,-2,5,2],[8,5,5,-10,-6,-5,-3,-7,9,-7,-3,1],[-7,4,4,-1,-4,-6,4,9,-2,8,-3,6],[4,-1,10,-5,-6,8,-3,-10,7,7,1,1],[8,-9,-6,-3,8,9,7,-4,1,2,-1,2],[-10,9,-2,-7,2,3,10,-8,1,6,-1,2],[-2,-5,-9,-1,5,2,-2,8,-4,-2,9,5],[-7,-2,3,2,10,-6,-6,2,7,-9,-3,-3],[-9,5,4,10,5,2,5,3,1,8,6,-9]],[[4,-2,-4,-5,-7,-1,-2,-2,2,-5,8,-4],[-9,8,-2,10,4,4,6,-1,2,6,4,3],[6,2,-7,-2,-1,-2,7,1,-4,9,4,7],[-3,-2,-4,2,-2,-3,3,7,-6,-8,-1,-6],[2,6,-7,-4,7,7,8,3,-6,-2,2,2],[6,-2,-9,-1,4,-10,2,1,-7,-5,8,8],[-2,2,8,1,5,3,4,8,-5,8,10,1],[10,4,-3,3,-3,-9,-2,-6,-6,3,-5,9],[-7,7,8,7,-3,-7,3,2,-6,4,-3,-5],[1,10,-8,6,-8,5,3,6,-10,2,5,-7],[7,7,4,-1,-9,-1,-2,4,-1,7,-8,-2]],[[10,-2,-10,-5,4,6,-5,5,6,3,-4,-9],[4,1,-1,-2,6,5,5,-2,-4,-7,3,-3],[7,-8,-2,7,3,10,10,-6,-4,-2,-2,7],[3,5,5,7,-3,-2,2,-3,-7,2,2,4],[10,6,2,-8,-7,-3,10,-4,-4,9,6,-4],[2,-2,3,-10,-4,7,-2,-3,9,-1,5,-3],[2,7,-4,10,-7,10,-8,5,1,-10,-10,-9],[-8,-9,6,1,5,-3,-1,5,-7,9,9,1],[-9,-10,5,-7,2,5,-7,-3,8,-1,2,8],[3,7,3,-4,1,1,-5,-9,2,4,-4,-2],[-6,-1,9,10,-9,5,-6,-4,3,1,4,7]],[[-5,7,-10,2,-2,-6,6,-4,-2,-7,-8,-5],[6,10,-7,-8,-6,2,6,3,10,-8,3,9],[10,6,-7,-8,-7,7,-5,-6,1,-8,5,4],[1,10,-3,1,-7,1,10,-8,-10,-2,-9,-6],[8,5,5,9,-1,-2,-9,8,-2,7,10,8],[10,5,-10,-10,-6,2,-6,9,-9,2,4,4],[-10,-7,-8,-2,-6,-10,9,5,-6,-9,9,10],[9,-7,-1,-10,-2,3,5,-8,2,5,9,1],[6,-10,9,4,1,4,10,4,2,-2,3,-6],[-10,-8,-3,-4,10,6,3,9,1,7,7,3],[-9,6,3,-6,-7,1,5,10,1,-7,8,-10]],[[9,-8,9,8,4,-9,-8,-1,-1,-6,10,-2],[-2,5,6,8,-3,2,8,9,5,-3,4,9],[-8,2,1,-9,4,4,1,3,-8,5,8,2],[-3,8,8,-3,-4,-4,-8,1,-7,1,-9,-2],[-3,5,-3,5,-1,-5,2,-7,2,5,-2,-3],[-1,9,-1,9,9,3,2,-2,-3,-3,-7,-3],[-10,3,3,5,2,-6,-6,-5,10,1,-8,-6],[-1,5,-9,-1,5,5,9,3,-5,-4,-5,-7],[9,-8,2,7,3,1,8,-3,5,-2,7,8],[6,4,-1,8,-1,-8,-2,-4,6,-9,9,-9],[9,1,-9,-9,-10,-6,-3,4,3,-5,-6,-10]],[[-6,9,8,-2,-3,4,-3,-5,-5,8,7,2],[-2,5,-7,2,-1,-1,-1,9,-7,6,-5,4],[3,-9,-2,2,-1,-1,1,2,-6,-2,-5,3],[-3,1,-9,9,-5,-4,-3,-10,-3,-1,-8,-6],[-7,1,9,-5,2,-10,10,-7,-10,-1,-9,-5],[6,7,-2,-6,1,-2,-3,3,-2,-10,-2,7],[-8,-5,1,-9,8,1,-9,9,-6,2,-6,9],[-8,10,4,4,-6,-10,8,6,-5,6,-3,6],[5,-3,5,-1,-8,4,6,7,4,-1,-7,10],[1,8,2,7,5,10,-1,2,-2,5,-2,-2],[-10,-1,-9,10,9,-5,-5,-10,-4,10,-3,-7]],[[9,-5,-4,9,1,4,-3,9,4,2,-8,-10],[3,6,-4,-1,4,-6,-4,-4,-7,4,-5,-1],[-8,-10,5,7,-2,4,-7,-9,-2,1,9,2],[4,-5,8,9,3,2,-1,-8,3,9,8,3],[10,-7,-7,-5,4,1,-10,-9,10,-10,2,4],[-1,-7,10,10,-2,-10,-3,-2,-7,-10,5,-9],[-1,-8,7,10,6,7,-5,-7,-4,-6,6,-6],[2,9,5,4,8,-1,-3,-3,6,4,-8,10],[2,9,-7,10,-10,9,-8,1,3,1,3,-5],[-5,-2,-2,3,10,9,-8,7,7,-1,-8,-10],[-4,-7,4,-8,10,10,-4,-3,8,4,-2,-1]],[[-8,3,7,-7,4,-10,7,-5,-9,9,1,-10],[6,2,4,7,8,-9,7,9,-1,10,-6,7],[4,-9,-7,-2,2,3,7,-9,3,-1,-4,-2],[9,5,8,3,5,5,-10,7,10,7,1,4],[3,-4,10,-2,-7,6,-8,-7,4,6,-8,-7],[4,-8,9,-1,-1,-9,-1,10,7,-3,-9,-9],[2,-7,8,-1,-8,-1,4,1,-7,6,1,-5],[-6,-5,-9,-5,10,3,6,2,4,-2,5,6],[2,-9,-2,3,-3,10,-3,-4,9,-10,-1,10],[8,-8,5,-5,7,-2,-8,-4,3,4,-1,8],[-4,-6,3,-4,7,-3,5,-9,-4,1,8,-5]],[[-1,9,-7,-3,-7,8,4,2,4,-6,-5,-1],[-8,3,8,-6,-8,3,4,-6,7,-3,-6,4],[2,8,5,-8,-2,10,2,-10,-3,-6,1,9],[6,8,-7,-3,-2,-6,-10,1,-7,3,7,10],[8,-8,-7,-6,-7,6,-7,-2,-2,6,-5,8],[-6,-3,-6,-4,8,5,6,-10,-6,-8,-7,-1],[-9,5,-2,7,-3,2,5,6,-5,-1,-4,6],[1,-4,4,-9,2,8,4,3,-10,-7,-2,-10],[-3,10,4,-9,1,3,-9,-10,-6,-5,8,10],[-5,-2,-9,4,3,-1,-1,2,-2,-7,9,1],[10,8,6,-5,-6,-7,-7,-8,8,-7,-10,3]]], dtype = "int64")#candidate|2302|(10, 11, 12)|const|int64
bop_2303 = relay.greater(call_2292.astype('bool'), relay.reshape(const_2302.astype('bool'), relay.shape_of(call_2292))) # shape=(10, 11, 12)
bop_2306 = relay.greater(call_2293.astype('bool'), relay.reshape(const_2302.astype('bool'), relay.shape_of(call_2293))) # shape=(10, 11, 12)
func_2233_call = mod.get_global_var('func_2233')
func_2237_call = mutated_mod.get_global_var('func_2237')
var_2317 = relay.var("var_2317", dtype = "float32", shape = ())#candidate|2317|()|var|float32
const_2318 = relay.const([[-3.311211,-9.616921],[3.298197,-0.702963],[0.850252,6.959458],[-1.791510,-6.966699],[-9.979982,-8.920665],[-0.379324,-9.752791],[-1.457139,-1.496860],[5.003272,-8.630377],[6.516248,-9.637496],[9.696785,-9.497131],[5.855274,-8.108901],[6.571722,3.143544],[-5.083564,-8.344846],[2.922484,-8.988337],[8.531612,-8.019268],[4.479686,-9.269563],[4.760321,-5.581367],[3.381989,-0.005848],[-1.637993,-6.041465],[6.790852,1.308669],[-3.256688,-0.390921],[-3.118254,5.062053],[-1.567479,2.797918],[2.976949,-1.179702],[-8.923965,8.844362],[2.302290,7.486995],[7.758075,-9.529379],[8.271289,-6.584675],[0.341762,1.721339],[5.169902,3.508348],[-7.265641,-3.789189],[-7.778764,3.655280],[1.951876,2.055425],[-9.953163,-9.832559],[-1.205380,-9.870785],[2.608420,5.123342],[-7.884979,-4.330857],[-9.572061,9.531066],[-8.239719,-5.172203],[-7.300765,-5.265661],[-3.635825,3.219304],[-8.556630,-1.180567],[-8.244700,-7.085636],[-0.487702,-0.081878],[-8.584783,-0.046702],[8.301459,9.730353],[5.427118,-3.532971],[5.510235,5.447920],[-4.644450,-2.915823],[9.142852,-7.822487],[-8.141493,1.041742],[-2.583817,3.939330],[-1.419811,8.850030],[5.099445,-1.790427],[-8.676087,-6.884107],[4.897697,-8.636094],[-0.226870,-1.238484],[8.109329,5.959089],[8.026202,-4.153072],[0.996535,-7.201803],[-1.632301,5.829677],[-9.568109,-4.134806],[-6.033139,3.471921],[7.966697,-0.350855],[-5.931084,8.202043],[5.469264,1.800923],[6.708942,-2.001907],[0.554051,-2.589171],[3.901045,5.411190],[0.268432,-0.985948],[1.888395,8.505480],[8.510361,-7.827454],[-8.461705,-6.511974],[7.166137,-2.907629],[5.812631,7.209621],[1.342291,-2.768637],[7.392550,8.978760],[-4.148787,-3.129258],[4.518556,-4.572171],[2.826536,-0.560111],[-5.933410,1.002943],[3.702796,-3.192202],[7.587914,0.627953],[9.666736,9.558368],[-8.554624,-0.478155],[-8.905667,-0.089434],[-0.165353,2.567635],[7.787819,-2.746483],[-4.439568,9.287089],[7.156717,-7.708970],[9.816010,-5.859124],[-3.223816,6.413073],[-6.125898,1.527550],[3.728591,-4.643505],[-7.050695,2.222550],[5.342865,8.790358],[-5.367618,4.453436],[-5.769391,-9.404073],[-4.188675,-0.439609],[-7.935934,6.290252],[7.833729,1.221811],[-7.654358,0.421242],[9.512667,-9.472603],[-4.362289,-4.923474],[8.819260,-7.235676],[-1.068695,4.108711],[4.589073,4.972189],[-4.052271,-1.880748],[2.075421,-3.375026],[9.456382,-5.620878],[-6.440539,-8.008434],[-6.960682,6.041012],[-4.071529,9.222232],[-0.174496,9.992340],[-0.672020,1.109282],[3.233415,2.521221],[-3.101219,-1.384706],[1.233528,-2.795674],[-8.254621,-6.551956],[-8.714769,-3.491820],[1.686235,0.941666],[-8.912409,-9.016260],[6.646749,7.288930],[6.872365,4.607539],[-8.689788,-0.202379],[-4.934500,-5.536450],[3.673002,5.094284],[-8.482099,-9.242665],[6.084626,-1.451008],[8.583022,-9.472078],[-7.114752,0.983276],[-4.672474,3.041318],[8.324858,-4.946660],[1.701809,-5.146141],[6.197632,-9.899412],[6.912099,-0.450676],[-5.291861,-0.507881],[4.081448,-1.756429],[1.483012,1.140185],[-9.645998,-7.902500],[-5.761331,4.438650],[2.561137,-6.548045],[5.515942,2.336111],[-1.041600,4.577420],[-3.550175,-7.690593],[-4.733905,7.169642],[-3.739021,-9.358205],[-2.239555,-9.451811],[4.503804,-7.527136],[9.090205,-0.741230],[8.674278,9.511242],[4.255060,-6.864591],[1.096978,1.795852],[6.105541,4.964923],[6.820260,-2.302026],[-7.836844,7.086007],[-9.328402,0.659084],[-7.039631,-0.906155],[1.984170,7.495874],[-1.156164,-9.331746],[-3.195515,8.878371],[-0.468325,-2.833302],[-6.439074,6.082853],[0.587793,9.555107],[-2.299141,-4.425132],[-6.542159,-3.856935],[-8.123439,-2.359374],[1.156834,-4.372257],[-2.393488,6.578317],[-9.551987,-2.879701],[-9.144024,-9.350401],[-3.851966,9.275409],[-2.869260,-9.035240],[-6.993215,-4.742395],[-5.170542,7.414044]], dtype = "float32")#candidate|2318|(175, 2)|const|float32
call_2316 = relay.TupleGetItem(func_2233_call(relay.reshape(var_2317.astype('float32'), []), relay.reshape(const_2318.astype('float32'), [5, 14, 5]), ), 1)
call_2319 = relay.TupleGetItem(func_2237_call(relay.reshape(var_2317.astype('float32'), []), relay.reshape(const_2318.astype('float32'), [5, 14, 5]), ), 1)
output = relay.Tuple([bop_2303,call_2316,var_2317,const_2318,])
output2 = relay.Tuple([bop_2306,call_2319,var_2317,const_2318,])
func_2332 = relay.Function([var_2317,], output)
mod['func_2332'] = func_2332
mod = relay.transform.InferType()(mod)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2333 = relay.var("var_2333", dtype = "float32", shape = ())#candidate|2333|()|var|float32
func_2332_call = mutated_mod.get_global_var('func_2332')
call_2334 = func_2332_call(var_2333)
output = call_2334
func_2335 = relay.Function([var_2333], output)
mutated_mod['func_2335'] = func_2335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_2361 = relay.TupleGetItem(func_2101_call(), 0)
call_2362 = relay.TupleGetItem(func_2103_call(), 0)
output = call_2361
output2 = call_2362
func_2374 = relay.Function([], output)
mod['func_2374'] = func_2374
mod = relay.transform.InferType()(mod)
output = func_2374()
func_2375 = relay.Function([], output)
mutated_mod['func_2375'] = func_2375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2408 = relay.var("var_2408", dtype = "float32", shape = (8, 16, 12))#candidate|2408|(8, 16, 12)|var|float32
uop_2409 = relay.sinh(var_2408.astype('float32')) # shape=(8, 16, 12)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_2420 = func_1401_call()
call_2421 = func_1401_call()
uop_2429 = relay.sqrt(uop_2409.astype('float32')) # shape=(8, 16, 12)
uop_2438 = relay.log(uop_2409.astype('float64')) # shape=(8, 16, 12)
var_2443 = relay.var("var_2443", dtype = "float64", shape = (8, 16, 12))#candidate|2443|(8, 16, 12)|var|float64
bop_2444 = relay.greater(uop_2438.astype('bool'), relay.reshape(var_2443.astype('bool'), relay.shape_of(uop_2438))) # shape=(8, 16, 12)
uop_2449 = relay.log2(bop_2444.astype('float32')) # shape=(8, 16, 12)
func_590_call = mod.get_global_var('func_590')
func_593_call = mutated_mod.get_global_var('func_593')
var_2454 = relay.var("var_2454", dtype = "int16", shape = (504,))#candidate|2454|(504,)|var|int16
call_2453 = relay.TupleGetItem(func_590_call(relay.reshape(var_2454.astype('int16'), [504,])), 0)
call_2455 = relay.TupleGetItem(func_593_call(relay.reshape(var_2454.astype('int16'), [504,])), 0)
uop_2460 = relay.asinh(uop_2449.astype('float32')) # shape=(8, 16, 12)
output = relay.Tuple([call_2420,uop_2429,call_2453,var_2454,uop_2460,])
output2 = relay.Tuple([call_2421,uop_2429,call_2455,var_2454,uop_2460,])
func_2463 = relay.Function([var_2408,var_2443,var_2454,], output)
mod['func_2463'] = func_2463
mod = relay.transform.InferType()(mod)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2463_call = mutated_mod.get_global_var('func_2463')
var_2465 = relay.var("var_2465", dtype = "float32", shape = (8, 16, 12))#candidate|2465|(8, 16, 12)|var|float32
var_2466 = relay.var("var_2466", dtype = "float64", shape = (8, 16, 12))#candidate|2466|(8, 16, 12)|var|float64
var_2467 = relay.var("var_2467", dtype = "int16", shape = (504,))#candidate|2467|(504,)|var|int16
call_2464 = func_2463_call(var_2465,var_2466,var_2467,)
output = call_2464
func_2468 = relay.Function([var_2465,var_2466,var_2467,], output)
mutated_mod['func_2468'] = func_2468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1290_call = mod.get_global_var('func_1290')
func_1292_call = mutated_mod.get_global_var('func_1292')
call_2476 = relay.TupleGetItem(func_1290_call(), 0)
call_2477 = relay.TupleGetItem(func_1292_call(), 0)
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
call_2483 = func_1240_call()
call_2484 = func_1240_call()
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2485 = func_1672_call()
call_2486 = func_1672_call()
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_2488 = relay.TupleGetItem(func_988_call(), 1)
call_2489 = relay.TupleGetItem(func_989_call(), 1)
output = relay.Tuple([call_2476,call_2483,call_2485,call_2488,])
output2 = relay.Tuple([call_2477,call_2484,call_2486,call_2489,])
func_2495 = relay.Function([], output)
mod['func_2495'] = func_2495
mod = relay.transform.InferType()(mod)
output = func_2495()
func_2496 = relay.Function([], output)
mutated_mod['func_2496'] = func_2496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
call_2554 = func_1352_call()
call_2555 = func_1352_call()
func_1290_call = mod.get_global_var('func_1290')
func_1292_call = mutated_mod.get_global_var('func_1292')
call_2556 = relay.TupleGetItem(func_1290_call(), 1)
call_2557 = relay.TupleGetItem(func_1292_call(), 1)
var_2564 = relay.var("var_2564", dtype = "int16", shape = (2, 252))#candidate|2564|(2, 252)|var|int16
bop_2565 = relay.greater_equal(call_2556.astype('bool'), relay.reshape(var_2564.astype('bool'), relay.shape_of(call_2556))) # shape=(2, 252)
bop_2568 = relay.greater_equal(call_2557.astype('bool'), relay.reshape(var_2564.astype('bool'), relay.shape_of(call_2557))) # shape=(2, 252)
bop_2569 = relay.equal(call_2556.astype('bool'), relay.reshape(var_2564.astype('bool'), relay.shape_of(call_2556))) # shape=(2, 252)
bop_2572 = relay.equal(call_2557.astype('bool'), relay.reshape(var_2564.astype('bool'), relay.shape_of(call_2557))) # shape=(2, 252)
func_1882_call = mod.get_global_var('func_1882')
func_1884_call = mutated_mod.get_global_var('func_1884')
call_2573 = relay.TupleGetItem(func_1882_call(), 0)
call_2574 = relay.TupleGetItem(func_1884_call(), 0)
func_1981_call = mod.get_global_var('func_1981')
func_1985_call = mutated_mod.get_global_var('func_1985')
var_2580 = relay.var("var_2580", dtype = "float64", shape = (300,))#candidate|2580|(300,)|var|float64
call_2579 = relay.TupleGetItem(func_1981_call(relay.reshape(call_2573.astype('int64'), [10, 11, 12]), relay.reshape(var_2580.astype('float64'), [300,]), relay.reshape(call_2556.astype('int16'), [504,]), ), 0)
call_2581 = relay.TupleGetItem(func_1985_call(relay.reshape(call_2573.astype('int64'), [10, 11, 12]), relay.reshape(var_2580.astype('float64'), [300,]), relay.reshape(call_2556.astype('int16'), [504,]), ), 0)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_2582 = relay.TupleGetItem(func_1793_call(), 3)
call_2583 = relay.TupleGetItem(func_1795_call(), 3)
bop_2587 = relay.not_equal(bop_2565.astype('bool'), relay.reshape(call_2556.astype('bool'), relay.shape_of(bop_2565))) # shape=(2, 252)
bop_2590 = relay.not_equal(bop_2568.astype('bool'), relay.reshape(call_2557.astype('bool'), relay.shape_of(bop_2568))) # shape=(2, 252)
func_780_call = mod.get_global_var('func_780')
func_781_call = mutated_mod.get_global_var('func_781')
call_2592 = relay.TupleGetItem(func_780_call(), 0)
call_2593 = relay.TupleGetItem(func_781_call(), 0)
output = relay.Tuple([call_2554,bop_2569,call_2573,call_2579,var_2580,call_2582,bop_2587,call_2592,])
output2 = relay.Tuple([call_2555,bop_2572,call_2574,call_2581,var_2580,call_2583,bop_2590,call_2593,])
func_2604 = relay.Function([var_2564,var_2580,], output)
mod['func_2604'] = func_2604
mod = relay.transform.InferType()(mod)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2604_call = mutated_mod.get_global_var('func_2604')
var_2606 = relay.var("var_2606", dtype = "int16", shape = (2, 252))#candidate|2606|(2, 252)|var|int16
var_2607 = relay.var("var_2607", dtype = "float64", shape = (300,))#candidate|2607|(300,)|var|float64
call_2605 = func_2604_call(var_2606,var_2607,)
output = call_2605
func_2608 = relay.Function([var_2606,var_2607,], output)
mutated_mod['func_2608'] = func_2608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1842_call = mod.get_global_var('func_1842')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_2619 = func_1842_call()
call_2620 = func_1842_call()
uop_2623 = relay.cosh(call_2619.astype('float32')) # shape=(10, 11, 12)
uop_2625 = relay.cosh(call_2620.astype('float32')) # shape=(10, 11, 12)
output = relay.Tuple([uop_2623,])
output2 = relay.Tuple([uop_2625,])
func_2638 = relay.Function([], output)
mod['func_2638'] = func_2638
mod = relay.transform.InferType()(mod)
mutated_mod['func_2638'] = func_2638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2638_call = mutated_mod.get_global_var('func_2638')
call_2639 = func_2638_call()
output = call_2639
func_2640 = relay.Function([], output)
mutated_mod['func_2640'] = func_2640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
call_2699 = func_1352_call()
call_2700 = func_1352_call()
output = call_2699
output2 = call_2700
func_2701 = relay.Function([], output)
mod['func_2701'] = func_2701
mod = relay.transform.InferType()(mod)
output = func_2701()
func_2702 = relay.Function([], output)
mutated_mod['func_2702'] = func_2702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_2713 = relay.TupleGetItem(func_363_call(), 2)
call_2714 = relay.TupleGetItem(func_365_call(), 2)
output = relay.Tuple([call_2713,])
output2 = relay.Tuple([call_2714,])
func_2751 = relay.Function([], output)
mod['func_2751'] = func_2751
mod = relay.transform.InferType()(mod)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2751_call = mutated_mod.get_global_var('func_2751')
call_2752 = func_2751_call()
output = call_2752
func_2753 = relay.Function([], output)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2808 = relay.var("var_2808", dtype = "uint32", shape = (16, 8, 16))#candidate|2808|(16, 8, 16)|var|uint32
var_2809 = relay.var("var_2809", dtype = "uint32", shape = (16, 8, 16))#candidate|2809|(16, 8, 16)|var|uint32
bop_2810 = relay.maximum(var_2808.astype('uint32'), relay.reshape(var_2809.astype('uint32'), relay.shape_of(var_2808))) # shape=(16, 8, 16)
func_2137_call = mod.get_global_var('func_2137')
func_2139_call = mutated_mod.get_global_var('func_2139')
call_2820 = relay.TupleGetItem(func_2137_call(), 0)
call_2821 = relay.TupleGetItem(func_2139_call(), 0)
func_2463_call = mod.get_global_var('func_2463')
func_2468_call = mutated_mod.get_global_var('func_2468')
var_2824 = relay.var("var_2824", dtype = "float32", shape = (1536,))#candidate|2824|(1536,)|var|float32
var_2825 = relay.var("var_2825", dtype = "int16", shape = (6, 84))#candidate|2825|(6, 84)|var|int16
call_2823 = relay.TupleGetItem(func_2463_call(relay.reshape(var_2824.astype('float32'), [8, 16, 12]), relay.reshape(var_2824.astype('float64'), [8, 16, 12]), relay.reshape(var_2825.astype('int16'), [504,]), ), 0)
call_2826 = relay.TupleGetItem(func_2468_call(relay.reshape(var_2824.astype('float32'), [8, 16, 12]), relay.reshape(var_2824.astype('float64'), [8, 16, 12]), relay.reshape(var_2825.astype('int16'), [504,]), ), 0)
func_2751_call = mod.get_global_var('func_2751')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_2828 = relay.TupleGetItem(func_2751_call(), 0)
call_2829 = relay.TupleGetItem(func_2753_call(), 0)
output = relay.Tuple([bop_2810,call_2820,call_2823,var_2824,var_2825,call_2828,])
output2 = relay.Tuple([bop_2810,call_2821,call_2826,var_2824,var_2825,call_2829,])
func_2844 = relay.Function([var_2808,var_2809,var_2824,var_2825,], output)
mod['func_2844'] = func_2844
mod = relay.transform.InferType()(mod)
var_2845 = relay.var("var_2845", dtype = "uint32", shape = (16, 8, 16))#candidate|2845|(16, 8, 16)|var|uint32
var_2846 = relay.var("var_2846", dtype = "uint32", shape = (16, 8, 16))#candidate|2846|(16, 8, 16)|var|uint32
var_2847 = relay.var("var_2847", dtype = "float32", shape = (1536,))#candidate|2847|(1536,)|var|float32
var_2848 = relay.var("var_2848", dtype = "int16", shape = (6, 84))#candidate|2848|(6, 84)|var|int16
output = func_2844(var_2845,var_2846,var_2847,var_2848,)
func_2849 = relay.Function([var_2845,var_2846,var_2847,var_2848,], output)
mutated_mod['func_2849'] = func_2849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_2851 = relay.TupleGetItem(func_363_call(), 1)
call_2852 = relay.TupleGetItem(func_365_call(), 1)
output = relay.Tuple([call_2851,])
output2 = relay.Tuple([call_2852,])
func_2860 = relay.Function([], output)
mod['func_2860'] = func_2860
mod = relay.transform.InferType()(mod)
output = func_2860()
func_2861 = relay.Function([], output)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_780_call = mod.get_global_var('func_780')
func_781_call = mutated_mod.get_global_var('func_781')
call_2894 = relay.TupleGetItem(func_780_call(), 0)
call_2895 = relay.TupleGetItem(func_781_call(), 0)
uop_2909 = relay.asinh(call_2894.astype('float32')) # shape=(9, 3, 2)
uop_2911 = relay.asinh(call_2895.astype('float32')) # shape=(9, 3, 2)
output = relay.Tuple([uop_2909,])
output2 = relay.Tuple([uop_2911,])
func_2912 = relay.Function([], output)
mod['func_2912'] = func_2912
mod = relay.transform.InferType()(mod)
output = func_2912()
func_2913 = relay.Function([], output)
mutated_mod['func_2913'] = func_2913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
call_2917 = func_1240_call()
call_2918 = func_1240_call()
var_2936 = relay.var("var_2936", dtype = "int64", shape = (10, 11, 12))#candidate|2936|(10, 11, 12)|var|int64
bop_2937 = relay.less_equal(call_2917.astype('bool'), relay.reshape(var_2936.astype('bool'), relay.shape_of(call_2917))) # shape=(10, 11, 12)
bop_2940 = relay.less_equal(call_2918.astype('bool'), relay.reshape(var_2936.astype('bool'), relay.shape_of(call_2918))) # shape=(10, 11, 12)
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_2942 = relay.TupleGetItem(func_2101_call(), 0)
call_2943 = relay.TupleGetItem(func_2103_call(), 0)
output = relay.Tuple([bop_2937,call_2942,])
output2 = relay.Tuple([bop_2940,call_2943,])
func_2969 = relay.Function([var_2936,], output)
mod['func_2969'] = func_2969
mod = relay.transform.InferType()(mod)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2970 = relay.var("var_2970", dtype = "int64", shape = (10, 11, 12))#candidate|2970|(10, 11, 12)|var|int64
func_2969_call = mutated_mod.get_global_var('func_2969')
call_2971 = func_2969_call(var_2970)
output = call_2971
func_2972 = relay.Function([var_2970], output)
mutated_mod['func_2972'] = func_2972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1614_call = mod.get_global_var('func_1614')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_3039 = relay.TupleGetItem(func_1614_call(), 1)
call_3040 = relay.TupleGetItem(func_1616_call(), 1)
output = call_3039
output2 = call_3040
func_3072 = relay.Function([], output)
mod['func_3072'] = func_3072
mod = relay.transform.InferType()(mod)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3072_call = mutated_mod.get_global_var('func_3072')
call_3073 = func_3072_call()
output = call_3073
func_3074 = relay.Function([], output)
mutated_mod['func_3074'] = func_3074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_3085 = relay.TupleGetItem(func_1793_call(), 3)
call_3086 = relay.TupleGetItem(func_1795_call(), 3)
func_2701_call = mod.get_global_var('func_2701')
func_2702_call = mutated_mod.get_global_var('func_2702')
call_3098 = func_2701_call()
call_3099 = func_2701_call()
func_1614_call = mod.get_global_var('func_1614')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_3100 = relay.TupleGetItem(func_1614_call(), 1)
call_3101 = relay.TupleGetItem(func_1616_call(), 1)
output = relay.Tuple([call_3085,call_3098,call_3100,])
output2 = relay.Tuple([call_3086,call_3099,call_3101,])
func_3110 = relay.Function([], output)
mod['func_3110'] = func_3110
mod = relay.transform.InferType()(mod)
output = func_3110()
func_3111 = relay.Function([], output)
mutated_mod['func_3111'] = func_3111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_3188 = relay.TupleGetItem(func_363_call(), 2)
call_3189 = relay.TupleGetItem(func_365_call(), 2)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_3200 = func_1401_call()
call_3201 = func_1401_call()
output = relay.Tuple([call_3188,call_3200,])
output2 = relay.Tuple([call_3189,call_3201,])
func_3211 = relay.Function([], output)
mod['func_3211'] = func_3211
mod = relay.transform.InferType()(mod)
mutated_mod['func_3211'] = func_3211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3211_call = mutated_mod.get_global_var('func_3211')
call_3212 = func_3211_call()
output = call_3212
func_3213 = relay.Function([], output)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2495_call = mod.get_global_var('func_2495')
func_2496_call = mutated_mod.get_global_var('func_2496')
call_3217 = relay.TupleGetItem(func_2495_call(), 2)
call_3218 = relay.TupleGetItem(func_2496_call(), 2)
output = relay.Tuple([call_3217,])
output2 = relay.Tuple([call_3218,])
func_3224 = relay.Function([], output)
mod['func_3224'] = func_3224
mod = relay.transform.InferType()(mod)
output = func_3224()
func_3225 = relay.Function([], output)
mutated_mod['func_3225'] = func_3225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3072_call = mod.get_global_var('func_3072')
func_3074_call = mutated_mod.get_global_var('func_3074')
call_3236 = func_3072_call()
call_3237 = func_3072_call()
output = relay.Tuple([call_3236,])
output2 = relay.Tuple([call_3237,])
func_3250 = relay.Function([], output)
mod['func_3250'] = func_3250
mod = relay.transform.InferType()(mod)
mutated_mod['func_3250'] = func_3250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3250_call = mutated_mod.get_global_var('func_3250')
call_3251 = func_3250_call()
output = call_3251
func_3252 = relay.Function([], output)
mutated_mod['func_3252'] = func_3252
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3317 = relay.const([[[3.464969,-5.078319,3.836054,-3.008710,-8.388303],[8.943890,5.794919,0.912625,-0.529025,-0.923465],[6.712584,-1.066898,2.822496,3.022671,2.678863],[-8.607843,2.688232,-2.935615,-9.283765,-3.106272],[1.524441,-8.030185,9.672777,-8.196018,-5.844798],[-7.172711,7.818538,-2.178408,-7.597760,9.237569],[-9.312797,-1.767756,-5.329056,0.583100,4.011141],[1.933090,7.348746,7.977236,1.576838,-4.003921]],[[-4.073162,-1.304545,4.848433,-1.879491,-2.791998],[1.672120,-5.766627,-0.570197,6.276135,8.547012],[6.474743,8.448954,-5.251070,4.560208,-4.700138],[1.474482,4.855303,-6.261183,-5.657588,-6.619730],[-1.977695,-3.083037,4.650889,3.354644,-1.154218],[8.371627,3.062086,-7.549899,4.151252,-6.084776],[4.858506,-0.355637,3.009912,-6.385816,-8.593610],[-9.358735,-3.165669,7.689924,-7.101503,-7.297789]],[[8.563202,-3.920873,-0.718745,-6.975576,2.066604],[3.940833,7.536963,0.727300,-1.346238,-5.924597],[-2.107230,1.113891,0.719227,-2.710571,8.033003],[-7.104817,-2.854362,-9.673965,9.164266,-2.135621],[6.922185,-0.744251,3.956508,2.608286,7.922417],[-7.418445,-2.998788,-0.689992,-4.984007,0.059499],[-9.274340,-3.938888,8.183583,7.942972,-6.629700],[8.411119,-3.243219,-6.276867,4.054792,5.217349]],[[7.353072,-7.960414,-2.384182,-2.238235,4.486363],[-8.410005,1.620161,-0.301028,7.257033,-7.322328],[7.800347,9.134971,5.348212,8.727824,8.592052],[3.634454,3.049138,6.809328,-3.643210,-6.402836],[0.898351,9.539728,-0.141920,3.984007,-5.388574],[4.195887,3.767068,0.536937,-0.216596,7.996692],[0.841608,-4.534488,-2.693819,-9.454494,8.910038],[-0.493118,-8.121810,-8.542341,6.971935,-4.595434]],[[6.783795,0.984884,1.960126,4.101532,-2.195962],[2.760938,9.346293,-9.568866,7.302959,-5.045699],[8.681526,-6.262345,2.839945,-6.326986,-0.060524],[-3.982547,-9.821301,8.830274,-9.805860,3.415138],[9.531669,-8.281693,6.789583,3.282444,-8.785596],[2.397302,-2.624968,9.928970,-7.605447,1.314355],[-2.936293,-9.371978,5.379116,-0.785316,-6.727423],[-6.061715,4.957479,-0.748243,1.484367,8.458616]],[[-2.258506,-1.890228,-1.245028,-4.859732,5.327677],[-9.224350,7.505648,5.365119,-7.125181,-8.154438],[7.086376,-3.987083,1.125813,1.861982,-4.048765],[-3.769485,-7.463446,-8.284729,-0.519609,2.889342],[-7.096678,-7.693916,8.416787,-0.360959,2.692213],[-5.184964,-7.996835,6.705716,-7.020630,-2.025148],[-4.986137,5.782413,0.684885,8.285148,-6.122237],[-3.213052,-5.582712,-0.308780,-8.189198,6.087889]],[[8.697843,-9.164088,3.641250,9.589487,8.797835],[-6.411803,4.255350,-1.760595,3.768701,-0.013487],[-8.032259,-2.022556,8.957490,-9.194771,-8.168650],[-8.575895,-1.326647,2.691512,-8.232898,7.987146],[-4.802008,4.189464,4.992731,8.054411,-1.250143],[-4.702644,-9.770727,9.046257,1.922275,6.820493],[-7.749532,8.755123,-4.405634,-5.483831,3.094369],[-5.607790,7.608601,5.508133,1.173853,-6.801629]],[[1.591667,2.226603,7.501023,2.856873,-7.888238],[-8.425751,-0.808424,1.240661,-4.918045,-1.986874],[1.985378,-6.225771,-8.607153,2.151651,-1.695007],[9.353635,-3.119954,0.065064,-6.023707,-2.864385],[9.941324,4.469419,-0.663087,-1.515254,-9.788954],[8.271268,-5.324458,-2.173923,2.928934,-9.810898],[7.531801,1.717076,-4.491330,-0.149081,-0.407586],[-3.575702,6.174769,3.649680,-2.039100,2.972126]],[[-8.372286,5.340533,-8.836794,-9.254614,2.814861],[7.305110,-5.261995,8.609836,0.739928,4.395251],[-6.440885,8.378309,6.871901,-8.860354,-0.875126],[-6.092492,-8.300108,7.691724,-4.310886,-7.810567],[6.077525,-1.437466,9.781525,-7.216533,7.278540],[-7.783571,1.122149,-8.922201,-1.151342,4.679697],[-5.427452,-3.164315,8.548887,1.085593,2.746976],[9.216545,2.766613,-5.473371,6.176798,4.884969]]], dtype = "float32")#candidate|3317|(9, 8, 5)|const|float32
const_3318 = relay.const([[[6.891974,8.543554,4.873041,-4.884603,-3.678321],[5.726060,8.923733,2.435307,-9.611694,-3.173437],[7.414596,1.788678,-0.174766,-5.819341,-7.202973],[7.429496,3.147917,9.906557,6.416434,1.405066],[-7.807459,-1.656004,5.782023,-0.895403,-4.688342],[7.573194,-6.963147,6.094791,-1.036085,-7.506815],[0.020344,-6.116001,-1.310131,-1.552420,1.025177],[1.904866,-7.233435,4.322849,5.880388,9.675326]],[[-4.223876,6.259319,9.264363,-5.086513,5.795075],[-5.109404,-4.861464,6.318153,-8.690526,-4.124636],[6.868836,0.966341,9.753948,6.688504,-6.242303],[-0.832342,1.669520,3.687004,3.389749,-3.528924],[-4.351878,5.457278,5.608938,5.582164,-5.870840],[5.563132,-5.054920,6.858024,9.034408,-4.859253],[6.545004,8.439287,3.483263,-7.415122,-6.201149],[5.660797,4.738171,0.344036,8.895445,3.701017]],[[5.528789,3.831203,1.571465,6.669793,7.548697],[0.760532,9.092647,8.500132,4.556939,7.097150],[0.282901,0.363447,4.825543,4.325164,1.408362],[6.829323,-6.178489,-8.001961,5.268483,-3.269813],[-4.307282,-7.368908,-4.142816,-5.376098,7.687360],[6.351269,-0.330176,2.316585,-0.744060,-8.070190],[4.574744,-9.207485,-0.545187,-7.717121,-2.864762],[-9.614998,-1.852575,-4.624343,-3.920824,-4.379026]],[[-3.711190,-1.411670,-8.106778,0.971197,3.640242],[2.769778,7.238055,-6.585983,-6.119559,2.604623],[7.379745,2.241786,-7.474230,3.743629,-4.429591],[-5.204383,1.274618,8.535847,0.869103,-3.625002],[-9.219846,0.487282,2.060437,1.742044,-2.506398],[1.650414,-3.360374,2.676732,-3.963500,-3.337437],[0.632793,-2.289653,1.207160,-6.368908,-6.233976],[3.093490,-2.020964,-0.357734,-9.924669,-1.860302]],[[-1.184275,5.448772,-8.144086,-8.013204,0.318937],[-1.426433,7.837803,3.912002,-5.818308,6.612412],[2.392788,-0.012263,-6.385968,2.160039,-7.672002],[8.361951,5.483935,-4.002821,-6.561928,3.218982],[8.538809,-7.653409,-5.209022,1.386075,5.068540],[7.353181,-6.643825,9.444826,-2.348509,4.249059],[-3.250640,9.462396,4.834370,7.408628,-5.109517],[8.507980,-5.829379,3.769874,-6.755087,-7.063781]],[[5.517804,-4.036166,4.033739,-7.975137,-2.735212],[-1.724339,8.978469,1.652795,7.381601,-1.700388],[4.216211,2.174146,8.765919,-8.106519,-7.544932],[5.734439,-1.587092,2.498725,5.289482,6.731352],[8.995589,-5.883545,0.400598,-0.576096,4.834909],[6.853539,-9.964843,-4.352988,0.622564,3.249891],[5.521102,5.264659,-7.127101,5.623830,5.700928],[-5.968958,7.410234,6.590008,-5.257413,4.488417]],[[-9.689559,-3.259739,-3.870351,-7.704315,4.326416],[5.758054,-3.311412,-6.410581,8.248119,0.155677],[-3.504408,5.151156,-6.279709,-7.519521,-4.035819],[-5.706655,-3.216105,-3.048599,-7.200959,-9.133135],[-8.416131,-1.940286,3.018589,-4.690029,2.982768],[5.851654,4.261677,2.790235,2.132799,-4.523403],[8.313804,-8.269947,3.954535,-0.348126,4.493848],[5.984554,-7.916777,-7.078106,-6.028141,-5.748806]],[[-1.558736,4.457822,8.833576,-1.190509,-3.102573],[-7.488870,2.677233,-7.870586,5.562151,-7.902883],[5.425548,6.904199,-0.515351,4.556621,-1.845171],[-3.475721,6.946860,-1.596640,-8.788397,7.092104],[0.362151,-8.188630,-8.701111,0.981113,-9.785564],[-2.592802,1.705727,2.692008,-5.305646,-5.561420],[3.798924,8.754731,-1.945366,6.910623,-8.633620],[7.143524,-9.128020,3.068096,-2.376445,8.081390]],[[-3.382004,0.306302,2.961304,7.010601,2.292772],[-7.984579,-5.983775,-3.644317,8.141840,9.218446],[-8.651809,1.389140,2.533860,-6.573427,3.779042],[-7.382946,7.213456,6.572638,-4.517577,-9.715188],[-4.149698,-1.967191,0.728390,7.721832,-0.114794],[-2.619814,2.313719,-5.201669,-8.862624,5.957474],[-8.631858,-1.134674,6.416417,-1.401825,-7.687897],[1.186426,5.211140,-9.377429,-0.122390,4.532240]]], dtype = "float32")#candidate|3318|(9, 8, 5)|const|float32
bop_3319 = relay.floor_mod(const_3317.astype('float32'), relay.reshape(const_3318.astype('float32'), relay.shape_of(const_3317))) # shape=(9, 8, 5)
bop_3340 = relay.logical_or(bop_3319.astype('bool'), relay.reshape(const_3317.astype('bool'), relay.shape_of(bop_3319))) # shape=(9, 8, 5)
output = relay.Tuple([bop_3340,])
output2 = relay.Tuple([bop_3340,])
func_3344 = relay.Function([], output)
mod['func_3344'] = func_3344
mod = relay.transform.InferType()(mod)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mutated_mod.get_global_var('func_3344')
call_3345 = func_3344_call()
output = call_3345
func_3346 = relay.Function([], output)
mutated_mod['func_3346'] = func_3346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2374_call = mod.get_global_var('func_2374')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_3389 = func_2374_call()
call_3390 = func_2374_call()
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_3401 = relay.TupleGetItem(func_2101_call(), 0)
call_3402 = relay.TupleGetItem(func_2103_call(), 0)
func_733_call = mod.get_global_var('func_733')
func_738_call = mutated_mod.get_global_var('func_738')
const_3406 = relay.const([-1.893895,-6.667668,-5.570354,-2.174748,9.414802,-2.630233,-1.537019,5.724451,-2.249838,2.820540,-6.251133,-9.113375,-7.450394,3.855708,3.517593,-5.195081,-9.516150,-2.063810,5.903900,-4.851554,2.960361,4.977696,6.630120,-3.779329,0.236356,2.904154,-8.880902,-0.606163,7.526421,0.980838,0.319225,-2.986214,-1.956675,-7.661330,-2.994347,-8.508052,2.125312,7.468933,-4.889070,5.403715,7.455706,-8.862619,-1.804374,-3.217355,-0.771563,-4.680767,-7.770119,0.285611,-2.777436,-8.447047,7.599380,-9.086946,-2.646636,2.654359,4.756664,-3.361484,6.849917,8.635539,-8.304923,-5.859208,2.706167,-9.581237,4.282039,-9.202559,4.837306,-5.558071,3.674329,-8.403995,-3.472718,1.498070,-7.356796,-6.132857,-8.101456,3.272927,-3.037474,9.885571,6.808877,5.110488,3.214442,-8.101178,-2.382676,8.960830,1.534853,-4.964925,-7.551344,5.989393,8.690342,-8.704920,6.789303,-7.842768,1.434694,8.083026,2.377592,-6.839248,-3.270581,-8.225119,6.838476,8.328501,8.250560,9.284366,3.101985,-0.046863,-8.492395,-9.606960,-7.810082,2.389185,-1.059092,-3.804001,1.175170,-0.431949,9.127277,8.209932,9.368343,4.472762,-3.024170,-2.873136,-2.067419,-0.414032,8.287934,-2.701761,-8.087731,-7.254704,0.988180,-4.981805,2.340277,-4.723730,1.448180,9.621110,-0.321906,4.928704,1.538479,-9.708076,-0.053928,9.791277,9.703607,-8.890546,3.527745,-8.543411,3.300674,-7.338500,-5.633575,-1.950473,-4.698012,-0.714341,-7.825757,8.245342,1.569437,6.469352,-1.399428,8.555210,6.178705,1.861344,-3.626618,5.235592,8.504600,-6.025140,-4.066374,8.360723,5.574539,-2.870781,-3.344395,8.126186,7.105214,4.079847,7.147837,-0.920395,-8.981785,-3.836762,0.692206,1.154583,3.283631,-6.438215,-1.018934,-3.192327,3.875550,3.484485,-4.429356,8.279615,-2.416279,9.456222,-1.427897,-3.583852,-7.547761,8.804947,-9.883687,-8.659444,2.867323,4.122894,-7.430057,8.996875,-9.406318,0.460839,4.073571,6.751991,-6.946244,-9.566155,-3.662193,4.958902,8.603568,-7.365890,2.617836,7.245057,-4.131276,-6.385615,-7.105414,-0.499167,6.912728,1.165001,7.352664,-9.835589,4.206264,-4.182766,5.603933,-7.811098,-3.604320,-0.022517,6.284286,-1.563430,-9.862364,7.022911,-1.617474,-9.068577,7.503579,8.497062,-9.588514,-2.288567,-3.143372,1.660495,5.474738,-2.879642,-1.449583,6.392568,-8.869722,0.385937,2.287970,2.148217,7.465089,0.256824,3.422622,9.120472,-2.476087,4.425268,-8.148112,-3.676622,0.655518,3.200784,6.775154,4.303143,1.679486,-8.607435,0.622493,-8.105944,9.135384,-5.276294,-0.558292,-7.817959,1.554597,8.919690,-6.713372,5.622921,-0.573215,-2.143471,-4.203821,5.236743,-1.812646,-1.224348,4.937831,-0.083275,-4.170758,4.084880,-5.320644,9.974030,-9.751564,6.909517,-2.426413,-6.242891,-6.385650,-7.289878,-9.286141,-3.015094,1.201897,4.176809,9.654331,-9.083773,-5.516388,4.783176,5.416508,-8.363851,1.476524,9.415244,2.395724,5.944935,-4.530244,-9.277004,5.977941,6.234406,7.892181,-1.598264,4.681996,-8.686075,-3.479509,-4.882087,-7.395507,9.811709,4.710839,7.001628,-2.728105,-7.160635,-3.487098,-3.822131,2.601197,-4.036265,-1.765517,2.003158,7.789482,7.489658,2.821590,-5.798714,-3.141162,-7.550806,-4.463833,-6.121943,-1.455544,7.556852,9.349815,-3.170469,6.872665,7.930385,7.779920,9.837758,-4.801340,6.630018,6.651192,1.492508,1.554290,8.209407,2.851267,5.166861,-8.718800,-8.472796,-1.178004,-2.638682,-0.328432,5.893570,-8.753590,-9.522268,4.257937,1.202670,9.617925,-2.189339,-2.614200,-8.556041,-3.613067,2.356933,-2.155665,-9.070337,-7.093566,5.872465,4.758469,8.912554,8.781963,-9.235308,1.793348,5.613234,2.194607,9.928186,1.301596,3.365653,6.046275,-7.065870,6.385798,-8.570958,6.243265,-1.886193,-7.092481,2.752095,8.254517,-9.958935,7.431849,-7.471410,-4.333319,-2.789042,9.166822,5.473879,-1.277867,3.297341,-3.015460,9.280279,9.955070,-5.086724,4.406300,5.640782,-3.348947,0.601388,-0.698238,-9.770269,-7.161690,-8.028947,-9.781668,-6.088540,-3.785833,-3.858605,-0.717596,-8.593821,6.641449,1.242104,-7.502225,-8.782388,1.898186,-5.812875,5.047261,-1.297637,3.742107,1.713780,-3.716142,-0.708053,8.468609,4.183410,9.411368,1.611383,2.511521,9.325976,-6.316428,-8.462818,-5.659506,4.844001,7.629153,2.734106,-7.503779,-8.006349,-8.382427,4.535725,-3.637116,7.870563,8.251228,-6.505718,-5.324218,-7.779134,1.571569,-7.829294,-6.472045,9.609396,7.733661,-2.660651,-1.583991,-9.496449,-1.601241,-1.931187,-0.450503,-4.177288,6.528438,-0.795592,-8.531356,-1.177799,6.445602,7.020378,-7.226687,3.602420,4.622346,7.048681,9.422816,8.935116,-1.253952,-1.663471,3.230088,-3.880650,6.413403,-0.222920,7.823915,-4.634435,7.540650,-2.062359,-7.999547,6.940480,-3.924191,2.702600,-1.905728,7.578975,8.966734,-0.012561,-9.401734,2.540451,3.248604,6.467323,-8.194166,-7.773763,-2.103303,7.727752,-5.974255,-3.597247,9.884072,-8.933197,-6.514155,-1.959782,8.980612,9.752124,5.210345,-0.867508,-8.289300,-4.133644,3.261213,4.687297,4.304790,-1.534910,8.854113,-4.462111,7.456381,5.481248,-7.249226,7.065022,-8.588932,2.435436,5.041002,-3.238162,-2.376908,-8.745108,5.707997,3.177935,-0.425315,7.382554,-6.809619,-1.795633,-4.270077,-3.876028,-0.965816,6.889537,-6.175142,-6.432493,-9.801009,5.303012,9.604293,-1.025858,6.959790,-7.589659,4.828464,-9.266856,2.272899,0.278185,-8.535205,4.066762,0.014265,7.165545,4.653821,4.864568,-7.977395,-1.941389,-4.467735,2.827832,-8.338745,8.741313,4.175810,-2.858234,5.148689,-7.297684,8.574209,-1.089734,-8.155513,-3.667432,2.787270,2.192282,-1.672265,-5.182798,-5.269325,2.527805,9.571273,8.983174,-3.990812,5.895088,1.248165,6.314039,9.310073,-1.510668,3.304896,-4.093827,-6.272862,-3.438882,7.210091,-2.697491,-7.452505,6.660978,-2.624148,-6.306610,-6.321197,-9.483232,-0.253556,-8.889376,6.106152,8.081782,7.784042,-9.750606,-9.401626,-3.530403,5.713170,2.782875,-9.654379,9.947030,0.996965,8.890161,1.303051,-5.901708,4.296623,-1.873306,5.302772,9.551543,6.096908,-5.772682,2.936365,1.237276,2.906586,-4.792603,2.293623,5.746718,-1.375283,-2.904866,-8.387723,1.785483,1.328374,8.579377,7.241698,8.959985,-8.356868,-9.654222,3.628300,-6.094347,3.257010,-7.178113,-0.061135,9.670607,4.205723,-5.369554,-0.082630,8.926617,7.488491,-6.982860,-6.240737,6.022667,-5.813787,-0.403977,-6.325692,-3.374004,4.200207,-0.102251,-0.906368,-1.490055,-1.155438,-3.852054,-1.895524,-0.689542,-9.660936,2.800645,2.868411,6.959739,-0.555423,2.024174,-7.977794,-3.704140,-6.897056,7.306110,3.932777,-3.196079,-2.726754,-4.239809,3.647300,7.190414,-9.528969,-8.690821,6.568651,6.981048,7.245606,-2.884924,-7.324673,1.973297,-6.012388,-0.517222,5.240593,2.491320,1.010174,-5.457588,-1.541121,-9.937073,-1.081928,-0.374204,-8.612196,-7.560833,-8.800395,0.906372,9.104043,-4.849116,2.547211,0.923599,2.824698,-7.739857,9.835271,8.580328,-0.212658,-7.704907,-1.801077,0.093975,-3.936796,-4.804643,-1.501078,7.058765,4.287936,4.796151,-7.050585,1.049600,5.223897,-6.754751,-3.343953,5.901725,1.754223,-5.204751,-1.269751,-5.316635,7.462098,-3.963923,-1.652279,9.479706,4.113518,-5.510742,-5.098070,1.700675,-2.711125,-3.937127,-2.963866,7.828943,0.324290,2.533922,1.332087,-5.036951,1.781753,4.287763,-9.600733,3.988146,5.795487,-5.441277,1.288161,-0.718189,7.463981,-2.897940,-6.160089,-5.533527,3.051294,5.761598,2.607822,8.172609,-2.046886,8.928514,-2.482044,-2.696383,-3.752213,7.035599,5.823217,4.570429,-9.272183,-8.333435,-8.032054,-6.974074,-2.298662,-3.556434,0.983060,-8.243070,-1.640368,-3.821947,-0.907007,2.542022,9.941826,-3.343908,-1.126745,-1.987804,-3.571594,5.902911,0.188087,-5.312105,5.734863,7.474655,9.635871,1.747918,8.810956,-4.623037,-6.011607,8.511576,-0.111228,-5.071336,0.541435,3.073846,6.727699,-7.478718,-1.603077,4.734622,-4.958128,-4.681901,-2.887927,2.838184,2.905527,-7.468438,6.640297,-0.153185,6.899220,-3.112205,4.382797,-6.637043,-3.107931,3.983595,-1.475381,0.721149,7.641277,-0.380097,9.097379,-9.864409,1.994680,-2.244705,-6.901672,-7.291099,-7.344337,-1.793540,-7.660442,-6.349024,-7.979894,2.529457,-4.134895,0.404532,-6.110241,-9.580997,9.053305,-5.511115,6.690729,-3.883683,4.093978,0.741431,0.057076,8.340643,7.649389,4.741429,0.951850,-3.700182,9.247274,-6.537915,2.126784,0.429690,3.993204,7.893692,-7.937089,-2.855755,-2.191277,2.930528,8.901212,9.584740,3.896074,-2.378484,9.192186,-1.740328,-5.514725,-5.873698,9.145997,8.212345,9.024962,0.933645,-7.453228,-6.242458,-3.065251,-3.048804,-1.447819,-6.163929,-3.411199,4.887228,3.603770,-6.915335,-0.642645,7.140332,-7.890201,-2.183860,5.860014,-7.540360,3.951193,-9.977683,-8.605148,2.689396,-0.825840,-9.353344,4.712138,-2.194280,-9.663738,-3.579353,5.191052,-2.815585,-4.090381,1.394835,0.780792,4.745337,-0.456671,-0.736702,3.500077,-3.912107,2.027885,-5.213149,-1.942087,9.934773,-9.378213,6.889584,7.127769,8.043024,-7.983541,2.483835,-3.442409,-4.766391,-2.949990,-4.523113,-1.467946,2.229269], dtype = "float32")#candidate|3406|(910,)|const|float32
var_3407 = relay.var("var_3407", dtype = "int16", shape = (36, 14))#candidate|3407|(36, 14)|var|int16
call_3405 = relay.TupleGetItem(func_733_call(relay.reshape(const_3406.astype('float32'), [13, 7, 10]), relay.reshape(const_3406.astype('float32'), [13, 7, 10]), relay.reshape(const_3406.astype('float32'), [13, 7, 10]), relay.reshape(var_3407.astype('int16'), [12, 42]), ), 3)
call_3408 = relay.TupleGetItem(func_738_call(relay.reshape(const_3406.astype('float32'), [13, 7, 10]), relay.reshape(const_3406.astype('float32'), [13, 7, 10]), relay.reshape(const_3406.astype('float32'), [13, 7, 10]), relay.reshape(var_3407.astype('int16'), [12, 42]), ), 3)
output = relay.Tuple([call_3389,call_3401,call_3405,const_3406,var_3407,])
output2 = relay.Tuple([call_3390,call_3402,call_3408,const_3406,var_3407,])
func_3415 = relay.Function([var_3407,], output)
mod['func_3415'] = func_3415
mod = relay.transform.InferType()(mod)
mutated_mod['func_3415'] = func_3415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3416 = relay.var("var_3416", dtype = "int16", shape = (36, 14))#candidate|3416|(36, 14)|var|int16
func_3415_call = mutated_mod.get_global_var('func_3415')
call_3417 = func_3415_call(var_3416)
output = call_3417
func_3418 = relay.Function([var_3416], output)
mutated_mod['func_3418'] = func_3418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3443 = relay.var("var_3443", dtype = "float32", shape = (16, 13, 2))#candidate|3443|(16, 13, 2)|var|float32
uop_3444 = relay.atanh(var_3443.astype('float32')) # shape=(16, 13, 2)
output = uop_3444
output2 = uop_3444
func_3447 = relay.Function([var_3443,], output)
mod['func_3447'] = func_3447
mod = relay.transform.InferType()(mod)
var_3448 = relay.var("var_3448", dtype = "float32", shape = (16, 13, 2))#candidate|3448|(16, 13, 2)|var|float32
output = func_3447(var_3448)
func_3449 = relay.Function([var_3448], output)
mutated_mod['func_3449'] = func_3449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3474 = relay.var("var_3474", dtype = "uint64", shape = (14, 2, 7))#candidate|3474|(14, 2, 7)|var|uint64
var_3475 = relay.var("var_3475", dtype = "uint64", shape = (14, 2, 7))#candidate|3475|(14, 2, 7)|var|uint64
bop_3476 = relay.left_shift(var_3474.astype('uint64'), relay.reshape(var_3475.astype('uint64'), relay.shape_of(var_3474))) # shape=(14, 2, 7)
func_2701_call = mod.get_global_var('func_2701')
func_2702_call = mutated_mod.get_global_var('func_2702')
call_3480 = func_2701_call()
call_3481 = func_2701_call()
output = relay.Tuple([bop_3476,call_3480,])
output2 = relay.Tuple([bop_3476,call_3481,])
func_3489 = relay.Function([var_3474,var_3475,], output)
mod['func_3489'] = func_3489
mod = relay.transform.InferType()(mod)
var_3490 = relay.var("var_3490", dtype = "uint64", shape = (14, 2, 7))#candidate|3490|(14, 2, 7)|var|uint64
var_3491 = relay.var("var_3491", dtype = "uint64", shape = (14, 2, 7))#candidate|3491|(14, 2, 7)|var|uint64
output = func_3489(var_3490,var_3491,)
func_3492 = relay.Function([var_3490,var_3491,], output)
mutated_mod['func_3492'] = func_3492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_3518 = relay.TupleGetItem(func_363_call(), 2)
call_3519 = relay.TupleGetItem(func_365_call(), 2)
output = relay.Tuple([call_3518,])
output2 = relay.Tuple([call_3519,])
func_3562 = relay.Function([], output)
mod['func_3562'] = func_3562
mod = relay.transform.InferType()(mod)
output = func_3562()
func_3563 = relay.Function([], output)
mutated_mod['func_3563'] = func_3563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3576 = relay.var("var_3576", dtype = "int64", shape = (8, 6, 16))#candidate|3576|(8, 6, 16)|var|int64
var_3577 = relay.var("var_3577", dtype = "int64", shape = (8, 6, 16))#candidate|3577|(8, 6, 16)|var|int64
bop_3578 = relay.greater_equal(var_3576.astype('bool'), relay.reshape(var_3577.astype('bool'), relay.shape_of(var_3576))) # shape=(8, 6, 16)
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
call_3583 = func_1240_call()
call_3584 = func_1240_call()
output = relay.Tuple([bop_3578,call_3583,])
output2 = relay.Tuple([bop_3578,call_3584,])
func_3586 = relay.Function([var_3576,var_3577,], output)
mod['func_3586'] = func_3586
mod = relay.transform.InferType()(mod)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3586_call = mutated_mod.get_global_var('func_3586')
var_3588 = relay.var("var_3588", dtype = "int64", shape = (8, 6, 16))#candidate|3588|(8, 6, 16)|var|int64
var_3589 = relay.var("var_3589", dtype = "int64", shape = (8, 6, 16))#candidate|3589|(8, 6, 16)|var|int64
call_3587 = func_3586_call(var_3588,var_3589,)
output = call_3587
func_3590 = relay.Function([var_3588,var_3589,], output)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_3608 = relay.TupleGetItem(func_1205_call(), 1)
call_3609 = relay.TupleGetItem(func_1206_call(), 1)
func_1240_call = mod.get_global_var('func_1240')
func_1242_call = mutated_mod.get_global_var('func_1242')
call_3628 = func_1240_call()
call_3629 = func_1240_call()
func_2463_call = mod.get_global_var('func_2463')
func_2468_call = mutated_mod.get_global_var('func_2468')
const_3639 = relay.const([[2.062031,1.462999,3.186761,1.233204,3.585795,3.091864,-3.337086,0.985455,-3.432344,8.609253,5.187114,-5.470300,8.399536,-1.204815,-5.226762,9.087683,-8.679931,-3.804273,7.424642,-1.455524,-6.002612,-6.306404,-6.498484,-3.952969,8.468502,-9.962495,0.129478,4.875823,-1.872298,2.861292,2.413473,4.114630,8.138433,0.481036,6.291515,8.766416,8.981608,1.260638,5.430929,-9.329671,5.610636,1.270296,6.105344,9.980794,0.820874,-5.093757,0.226306,-2.918057,-0.510485,5.970818,-6.034574,7.459626,9.731402,9.618436,-9.506235,8.081138,9.742242,3.684260,-9.226390,-0.351882,2.276317,-6.577644,-7.378206,3.020703,-5.237038,0.915333,-8.467265,-8.425378,1.768423,-2.407816,2.093866,9.850340,1.985003,4.251172,1.590816,9.509197,6.686840,9.375426,-7.612179,-1.794393,5.855684,3.751204,-5.626793,3.163307,-7.296258,-0.143622,-3.312738,-1.938235,-3.694073,8.073043,8.989562,-9.607838,-9.940021,8.296335,-2.634183,9.355094,3.214773,0.283810,-6.021897,2.040477,1.981830,-6.284719,5.868520,1.419069,-0.324500,6.690626,4.309081,-1.785950,6.450795,-6.288872,4.561919,6.315373,3.533391,4.474996,-6.284939,-6.203900,-1.267139,9.538985,6.941553,0.600705,8.275464,0.677920,-8.239496,-5.169959,3.039480,9.614703,-0.102309,6.803306,-3.374004,7.128377,1.286723,-6.843880,-2.990511,5.592610,-0.838194,0.118992,2.231565,-9.465346,1.849610,6.262720,4.334305,2.234893,-9.674211,2.752790,8.936769,9.475438,-5.705016,-4.943594,6.222672,-7.209629,-5.438307,9.260540,4.028931,7.679277,-7.318976,6.215814,-3.034938,8.543887,-9.843408,6.697970,6.065745,-2.960412,-6.561677,-3.262923,9.959505,9.835185,-3.222218,2.029176,-0.886173,-1.957771,-9.294945,-8.887103,5.556983,1.697581,9.464132,7.117726,8.039742,-9.005502,6.541928,4.880328,-3.011096,-7.735641,8.177583,-4.981415,4.974142,-6.242670,-1.267966,-6.299492,-4.336678,4.235260,-1.694244,-4.632655,1.913380,4.818289,2.613649,6.900585,6.530338,-4.228323,7.004412,-4.849464,-2.792660,-7.475759,1.093902,-4.897928,-8.112927,5.880174,-6.134392,-7.872077,9.568205,-1.366698,-0.383038,-3.153878,-7.585104,-2.958644,9.551436,-1.852731,1.799264,-3.356744,8.329296,-7.069490,0.898210,-6.349013,4.502712,9.540754,-7.997180,3.499061,7.829273,-4.658168,8.357841,1.549772,7.369502,-3.598431,0.860510,9.435146,6.268695,-2.912135,-4.206557,-1.538700,-5.440456,-3.161958,-9.512503,9.706251,7.542704,1.894594,5.160690,4.279803,-7.152204,7.907506,-9.126794,-4.280356,3.454357,-7.188487,4.415040,1.842710,-0.809513,-0.009792,-4.017354,-1.626856,7.988038,-1.994001,9.180886,7.088701,7.426637,7.800613,5.538390,0.636332,-7.353293,-7.491590,-6.487998,4.707570,9.049259,8.394818,-1.570873,1.055139,8.318918,-8.399349,0.102994,-7.013777,-5.595276,9.967604,2.658373,-2.749618,-3.016697,4.729192,5.020969,-9.637880,-4.818959,-0.104253,1.689945,-1.847617,0.214690,4.553012,-7.773953,7.848958,0.905855,1.467806,3.290459,7.194808,-7.713553,-3.316558,1.499247,8.085171,9.590878,-4.357616,2.560913,9.616776,9.409095,-4.102861,0.607030,1.112065,-1.147048,6.267017,-1.855859,2.324205,-6.421845,-7.604084,-7.816161,5.541332,1.896862,9.167795,6.703488,1.104007,7.351869,-0.007792,5.910667,-8.648949,-1.808689,3.853579,-6.159799,-4.959509,1.819765,-6.145558,-7.285191,5.421702,-0.781382,-9.832924,8.522366,-6.334852,6.876256,9.794853,-8.407169,-7.045023,-7.007015,-2.193869,1.022315,6.770642,2.540134,-8.611613,9.782090,-2.563650,-4.345249,5.100827,-7.469160,5.683274,8.995811,3.528485,-7.765756,-5.308541,8.589252,7.359633,5.056451,2.483569,-5.986558,-5.744249,8.563695,7.578980,-8.713399,-9.649179,4.834537,-2.620103,-2.140844,-9.709296,-9.927320,5.994075,2.385179,-3.508777,2.612948,-0.369714,4.251743,-3.395364,1.003920,2.929258,-2.421607,-8.452506,0.715156,-8.105471,-2.110214,-8.240808,-5.963797,8.897827,-3.106060,-3.795148,1.148212,6.445952,-9.540056,-3.006497,-8.489712,2.709658,1.630872,-6.120085,-6.626819,-2.961357,0.969225,5.097899,4.337298,-9.060393,-8.285663,7.842692,1.704587,1.761200,-3.125442,1.129636,9.682276,-2.093627,-6.638638,3.739068,2.685067,-9.681935,-3.863313,-5.145823,-1.254208,0.517247,-5.380788,-8.465176,2.163548,5.797209,7.692876,-3.622711,5.358909,5.491251,8.626121,-9.262682,0.704918,-2.047903,7.085039,1.561252,8.042691,-7.299251,0.799680,6.340910,-1.403962,9.699073,6.368838,-5.920322,-8.155484,-6.135791,-9.784282,-1.101715,7.632069,6.254281,-4.025854,-7.733664,7.650629,4.169027,-3.724089,-4.572304,8.739581,-6.700368,4.211440,2.431618,9.430658,-7.700108,-2.735844,0.109746,6.676996,-7.668271,8.243508,6.220698,-1.755920,6.381527,0.913729,2.173298,3.121775,1.015083,8.338487,-1.698288,-1.643510,-8.860899,-2.010031,3.669157,3.569621,5.851571,-8.153017,7.773129,2.492306,6.726812,-7.535595,8.189778,2.872800,5.317208,7.075369,7.589049,-2.615560,-4.232782,9.823236,-3.394729,-6.783516,5.230504,-3.190801,2.073035,3.619321,-3.150503,4.257048,-1.339029,-6.241764,7.884550,1.246844,2.927598,5.733669,-6.195098,2.131096,0.177694,-6.626292,9.970010,9.076971,-5.484880,9.716019,7.527285,-4.455031,8.025461,0.308597,-2.375128,5.984995,-2.033475,-8.587198,8.616240,3.084452,4.857690,4.995384,-8.304791,0.458365,-5.311962,1.149563,7.976481,3.499306,-7.009040,-8.890550,2.643210,-4.750345,-1.339653,2.592560,2.604401,-3.235350,-3.321433,2.918502,-7.000920,-5.415252,8.790733,-0.858852,9.443319,-1.374829,-0.252199,2.529493,-8.714819,3.956621,-7.993283,3.027208,7.212822,-0.278758,8.941900,-2.994914,-1.431876,-1.970716,-2.593029,-8.992253,-2.504167,0.592147,1.485492,7.674502,1.763948,-3.947006,9.755229,3.925755,4.315009,-8.265742,8.408730,3.881051,9.938772,8.733934,-9.725596,-5.119826,-2.854994,-7.254060,-6.540644,-5.426985,-1.819503,9.622740,-4.129124,6.367280,-5.458692,-5.414047,-2.512970,7.211733,-3.683299,-6.482371,-0.637631,1.785375,-9.300890,4.182840,9.529556,-2.482873,-4.466746,6.581131,-5.455265,5.375931,4.397324,-4.733317,9.557199,6.008649,3.769695,-2.950585,-6.377985,-8.076895,4.550724,9.386998,0.326444,8.751975,4.378775,-9.508240,4.174539,-0.388333,-7.617134,-1.164209,-7.274287,5.460354,5.427403,-0.220752,9.540865,1.421514,-2.205496,-2.903244,-8.681087,0.120138,-9.644156,-3.739558,1.978655,-5.295098,0.145317,1.555163,0.790996,0.639576,6.965404,-8.248628,8.489382,8.788281,0.271220,2.186558,1.841395,6.519493,2.192158,9.843545,5.317898,-8.810600,5.928267,-1.643217,-4.802004,0.799019,7.250318,-0.205440,7.197728,-9.623190,3.793158,6.196421,8.157896,9.337437,-6.771782,2.262091,-4.810015,-6.331296,-0.351543,-7.879079,1.874078,-0.989682,-9.068263,0.497366,-8.270913,-5.796767,4.320106,8.497468,-3.078796,3.558921,3.562930,-4.479570,-6.337398,4.687820,-8.056108,0.692655,-1.565957,-2.691321,1.051622,-2.461532,-8.776843,0.419220,-2.542113,-4.334565,3.568634,2.571247,-0.910324,3.388001,7.826293,8.234419,-3.691045,5.751497,-9.372330,5.521756,8.731984,-9.016684,-4.491890,6.371539,-7.569226,-7.950411,-1.086014,-6.462484,2.882958,1.701718,1.225926,-9.292839,-2.623736,-8.476544,-3.518196,-1.985919,5.454211,3.345493,-7.636605,9.078491,-4.176098,9.023836,4.719309,0.927526,6.450773,3.670964,-6.009885,-4.461752,7.902395,8.770601,6.800725,3.068410,-4.172365,-1.002858,-5.081055,8.622117,1.323616,5.248057,9.728745,-2.191583,4.955440,0.581469,3.271508,-2.049263,-5.742179,-5.518991,0.602993,-9.507163,-8.318816,6.965819,-6.572031,6.248024,5.721512,3.914802,-2.553546,7.964262,3.909041,7.370390,-1.541336,-5.568037,3.350588,-3.873672,-7.968416],[4.184310,-5.313366,6.272174,4.093825,-9.381863,6.819991,6.106658,9.884448,-3.288049,1.726105,-2.100219,7.399282,-3.432556,2.354925,-3.326488,-1.907029,8.233625,-8.905430,5.196908,1.892904,-9.378644,5.887171,-6.525741,-5.251125,-5.319804,-9.540350,6.932780,1.769461,2.439789,8.652459,-0.626907,0.568372,-1.558497,0.868000,8.762032,3.273959,4.468216,-3.235860,-4.013777,-3.015821,-8.703674,0.571280,4.102239,-2.451237,4.238611,-0.820374,7.801177,4.244572,7.340198,9.548648,-3.634364,-0.644545,-8.566778,2.990290,5.863633,4.019673,6.132911,3.253688,9.747958,0.197713,6.027671,-1.663491,3.501036,-8.452316,-0.564822,5.889648,1.883317,4.528937,-4.596164,-1.430911,-6.012786,-1.768889,-4.621093,-9.389941,8.389504,-9.402985,9.317683,8.824070,5.114683,4.940163,8.794424,-7.616524,-3.508318,-9.349456,-7.828702,-6.460500,-3.590122,-3.605154,4.252264,-9.562851,-8.331628,9.709506,-1.235229,-1.676894,7.353252,4.695993,0.221489,4.578146,9.184670,-7.009744,-6.000918,0.041719,5.701608,9.174311,-8.688879,6.136728,-4.876301,8.368172,0.905914,-5.932674,0.578764,-5.669300,8.199888,6.391197,1.396066,1.694434,-0.833731,1.363611,-1.967382,-5.183135,-5.961477,-2.702159,3.774186,5.324797,8.644898,4.335232,-4.775489,2.863067,0.432107,-6.305683,3.226839,-4.085001,-8.174712,5.189758,-5.307735,-4.468333,-5.674502,3.516318,-6.859187,-5.810348,9.288344,-1.734129,5.740154,6.183733,-3.038151,-0.094150,1.338554,-2.862011,-3.427885,1.195593,3.639356,2.906608,-1.579366,5.891365,-3.807438,-0.948385,7.565381,7.299115,9.474657,8.528559,-6.845284,2.718870,-2.806934,-4.702161,1.795089,0.026381,4.087150,-2.511525,-0.478169,-2.470944,-1.639731,-3.068188,3.014149,-4.407405,-4.524408,5.994723,0.547248,7.666109,-0.677956,-7.103068,1.367121,-4.708327,5.806242,-2.132040,7.871692,-0.160967,4.443665,5.445106,-0.337120,1.416502,-5.606994,6.445734,8.019916,6.619559,-2.278905,-9.335135,-2.707941,-6.452219,9.871447,4.144341,7.661362,-6.881079,-3.834794,-3.895023,-1.800861,0.359264,-2.350623,-4.334277,4.856620,2.820928,-9.370890,8.886933,-0.316476,-9.066455,-8.203925,-7.462140,6.244290,3.683410,2.146002,-7.572091,9.491016,-2.468815,-3.638733,-3.353370,-5.788899,-0.652358,8.268509,9.533758,6.397879,9.215942,9.989344,-5.246947,6.422821,-4.937117,2.701227,-8.515981,1.278704,-4.684282,1.354774,5.007271,-5.039161,-5.848848,-8.682008,0.363083,5.910798,0.991395,4.445679,6.050573,4.888775,5.173449,-6.176218,-4.062108,-9.148244,-5.354017,5.243580,9.657351,2.590632,5.499260,-1.460122,6.667344,2.074160,-6.039190,-6.452607,0.380868,-3.634211,-8.277695,-5.001817,-1.948105,3.219526,2.542309,-5.487971,-8.719341,-6.260279,9.128267,2.746737,7.348104,-1.571308,5.724689,4.051970,-5.980995,4.903414,2.421151,7.939254,-8.842874,-9.948412,2.819928,-6.245903,-3.184857,8.670868,2.892922,-9.988354,-0.113097,2.593399,-7.987258,-7.374570,-3.191129,8.096935,-6.407202,1.934941,-1.323151,-8.798292,-2.273360,9.080530,9.641827,5.957602,8.494382,4.685514,-8.743642,9.396321,-8.287416,2.014871,2.075049,-4.440664,-9.133616,-2.744638,8.120222,-0.161043,-9.262630,-7.783021,3.522615,-8.663131,4.764160,-8.816242,-0.389279,-3.436072,5.603299,6.669100,0.798475,-3.094435,9.532997,-7.545301,8.958458,4.665035,-4.298605,-2.704952,0.109633,3.994276,-1.451124,-3.479806,7.470182,6.768674,-0.209374,-0.671585,-1.126489,1.964581,8.287336,-9.681983,3.799042,-4.904627,1.136229,5.332436,-5.760804,-9.164267,-3.628704,8.453017,9.936249,-0.741220,-5.889941,3.735392,-5.254049,-4.268744,-0.325415,-8.112786,-2.276858,-5.252444,7.216826,-6.714981,-7.901775,0.886357,6.350797,-4.268427,2.383859,5.602453,5.442819,6.992048,3.951400,-3.474661,-6.985440,0.583505,4.835243,7.830754,7.379376,-3.828139,-8.774209,-4.629260,3.238440,-0.202105,-3.075115,-5.149755,1.674222,0.390475,7.994499,-0.314714,-8.573616,0.921483,0.799137,6.917637,-3.689939,-8.514904,0.110616,1.522565,-2.630567,6.918160,9.682013,-9.207552,2.284764,1.174876,3.461575,9.454231,-4.044413,-2.496423,8.318722,-2.214950,1.045282,-4.243405,-5.754031,2.636566,7.684707,6.571724,-0.594929,9.511848,7.142086,7.237869,9.762518,-8.341567,8.305294,6.894324,-3.295983,-0.743874,4.206253,-6.526973,-6.801149,-1.809708,0.273933,-1.607463,0.204140,4.862452,5.808288,-4.787278,7.318366,-6.977572,5.343816,8.857953,9.933328,3.491177,-2.689719,-6.625491,-8.107690,3.444643,-8.217394,1.747159,3.763699,-5.933914,2.905768,7.091683,-9.569709,3.223230,-0.213479,5.936668,7.891319,-5.081248,7.973561,-5.624398,6.028548,0.378770,-6.080151,1.882317,3.401016,-0.110773,-0.766216,-0.702561,8.067167,-3.700385,-0.860761,6.271955,2.322482,-3.199934,9.995750,-0.760026,-2.582184,-3.381726,-1.490115,-3.653738,-6.754605,9.902033,2.130021,5.762157,9.656346,-4.793022,5.720690,0.525744,6.841004,0.556828,3.356514,6.147111,9.217726,-6.606668,1.328111,-9.615765,9.448576,1.082377,7.528222,3.268575,-1.213989,-6.784224,3.120824,-0.888176,7.296111,8.420162,2.768094,-9.665473,3.976516,5.972779,-0.032019,-7.727017,5.745387,-2.047917,-8.751725,7.169919,1.760646,-3.575101,-1.910387,8.847579,8.147477,-8.863457,6.059409,4.813732,2.479875,6.391321,-3.301005,6.991302,0.103559,-7.223351,7.517597,3.296614,-7.698637,8.918616,-0.288488,-0.623118,-8.294117,0.606223,-5.535199,-9.165891,4.918271,4.639906,3.573726,8.627660,-0.853394,-6.751593,5.445986,-8.580311,5.347564,-9.644987,-2.971983,5.196349,4.559335,-1.824928,-6.101415,2.734135,-4.956847,5.649682,9.407138,5.306247,1.801876,3.515979,1.325614,-5.945125,-7.046956,-2.747198,3.607870,1.730491,-7.419559,-7.547365,-5.904704,-5.054286,-1.711740,-7.636031,-2.976985,0.403592,9.437325,5.796510,-0.896955,0.054532,-9.198306,9.378555,-0.346576,4.926016,-0.539588,0.948222,8.343650,-8.469446,0.140304,-8.569843,-5.872098,5.626063,-1.661693,-6.336535,-5.822477,8.386921,5.152308,5.669001,5.318409,6.188042,-8.950679,-0.059074,-8.335007,-2.695088,6.041418,-5.200228,-1.473808,5.344107,-3.294545,-2.579522,-4.077848,1.138557,-2.301684,9.973329,7.739691,-5.798724,3.371182,-5.246482,8.855399,3.863661,7.157527,-6.991103,-9.925423,-2.339643,8.241312,1.018300,7.300794,1.749091,3.964712,5.230288,5.091412,8.782477,9.757663,7.794885,-3.564345,8.664800,-1.392781,5.726347,-1.678201,3.522440,-6.719676,8.470621,3.880574,-8.900657,4.907302,-2.337936,3.644711,4.711243,5.472088,7.597887,8.827684,7.821925,-8.288131,-2.525976,-3.872283,-0.470572,9.612247,-5.657376,-9.144128,8.965259,9.669411,6.082345,3.167627,3.207342,3.868460,-4.309714,9.200926,-3.108373,5.986970,-3.626089,-1.640486,-7.524249,-7.364949,-4.559583,3.205497,-7.451582,3.462572,5.136360,-1.549702,7.313681,2.706358,6.776634,2.888113,-6.359864,-4.832838,0.504495,4.385099,-3.367540,-4.272746,7.482869,1.193658,-4.653971,3.256542,3.687127,-7.594365,5.621578,3.949396,4.547254,-1.072293,4.656261,-7.232415,2.663313,-6.437397,-8.541128,-5.611433,6.668492,4.627570,1.262544,3.923310,6.666912,1.533734,-3.730721,6.739854,-6.257749,1.384530,-7.667619,-5.409663,-0.834162,-2.200232,1.048686,-7.369193,-3.051851,0.260354,-2.608451,-0.921342,-9.519773,-0.600108,-8.088437,-9.350438,3.199627,-4.774281,-7.614558,1.978810,-2.581395,9.172848,-1.527068,-0.124831,8.837908,-8.012651,-8.552693,2.270353,0.766247,5.632074,1.560766,-6.513139,-5.041365,8.225073,3.812533,2.716935,-2.331992,9.671892,-9.825749,6.289462,7.883684,9.752575,-8.233201,0.396586,-4.259655,-9.477398,-5.391170,-9.509940,7.848263,1.250532,-2.691660,-6.917957]], dtype = "float32")#candidate|3639|(2, 768)|const|float32
const_3640 = relay.const([4,-9,5,-7,10,-8,-8,-3,9,3,-10,8,5,-10,9,-9,5,10,-5,6,4,6,6,-10,-3,6,-10,-3,8,-1,7,10,5,-3,-6,6,2,3,-3,-7,-3,-10,-9,-7,-10,-4,8,8,-3,-6,9,-8,-5,-3,3,5,-2,1,1,10,8,-8,-7,10,7,-8,7,9,8,-10,-1,9,3,-7,-1,6,1,6,8,8,3,4,-4,1,7,5,8,1,5,6,5,3,-3,5,-6,-9,-3,-8,7,8,-3,-4,-6,-4,5,5,9,-7,1,-4,-9,6,7,8,7,10,9,-3,-10,-8,-5,4,-4,-8,5,2,6,-5,-5,-9,-8,-2,-4,6,2,-7,-6,4,-4,-5,-4,-2,-6,-3,9,-1,2,6,8,10,-3,-8,-9,-10,-3,-1,-1,-9,-1,6,-6,-7,-2,-6,2,-10,-4,7,-3,6,2,-4,2,2,6,3,6,-2,-2,9,-6,-2,-9,4,6,7,9,2,5,-3,1,4,-8,6,-9,-6,5,-7,-7,-6,3,2,5,1,8,-2,2,8,6,-9,-10,10,-5,10,8,-6,1,2,9,-7,-1,-6,9,-2,10,2,8,-5,-8,4,3,10,-5,-2,-10,-3,-2,-4,5,-5,-9,4,8,-8,-8,-6,-4,5,-9,-6,-7,-9,-10,-9,-9,9,-3,5,4,-10,8,3,2,-1,-6,1,-6,4,3,8,-8,-2,-1,2,10,8,-10,8,-1,-5,4,2,-6,5,-10,3,-3,8,-10,9,-4,8,10,-6,-2,7,8,-9,6,6,-8,-3,-6,5,3,5,-3,-1,-8,-1,9,10,9,-4,3,2,-10,4,-10,-1,-5,10,1,8,-6,2,10,3,-1,-6,-8,8,5,-4,-3,6,5,-5,-7,6,3,-1,9,-2,-2,5,-7,7,-4,-7,-10,-4,-10,9,-3,1,4,1,-7,-4,-3,8,-1,-2,-10,4,3,-2,9,10,-8,-10,-2,-6,5,-7,-6,-8,2,3,-10,-9,-5,6,4,-7,-7,-5,-9,-10,-10,1,-4,4,-9,-9,4,-2,10,-4,-3,9,10,-3,-6,1,3,-1,-3,4,-9,-10,10,-3,-9,-7,10,6,-1,-6,3,-10,-1,3,3,5,10,-7,7,-1,7,-1,-3,6,6,-8,1,-5,-8,-10,6,4,-1,4,-1,6,-2,-6,6,8,3,-10,3,-1,-4,3,6,-3,10,-7,-4,-10,2,1,7,-1,-5,-9,6,1,-2,-7,-2,7,10,5,-9,-2,3,10,-3,2,-1,8,2,-7,-2,5,7,-7,6,-2,-9,7,-8,-1,9,10,-6,-7,-6,5,1,5], dtype = "int16")#candidate|3640|(504,)|const|int16
call_3638 = relay.TupleGetItem(func_2463_call(relay.reshape(const_3639.astype('float32'), [8, 16, 12]), relay.reshape(const_3639.astype('float64'), [8, 16, 12]), relay.reshape(const_3640.astype('int16'), [504,]), ), 0)
call_3641 = relay.TupleGetItem(func_2468_call(relay.reshape(const_3639.astype('float32'), [8, 16, 12]), relay.reshape(const_3639.astype('float64'), [8, 16, 12]), relay.reshape(const_3640.astype('int16'), [504,]), ), 0)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_3646 = relay.TupleGetItem(func_1793_call(), 4)
call_3647 = relay.TupleGetItem(func_1795_call(), 4)
output = relay.Tuple([call_3608,call_3628,call_3638,const_3639,const_3640,call_3646,])
output2 = relay.Tuple([call_3609,call_3629,call_3641,const_3639,const_3640,call_3647,])
func_3649 = relay.Function([], output)
mod['func_3649'] = func_3649
mod = relay.transform.InferType()(mod)
output = func_3649()
func_3650 = relay.Function([], output)
mutated_mod['func_3650'] = func_3650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3072_call = mod.get_global_var('func_3072')
func_3074_call = mutated_mod.get_global_var('func_3074')
call_3670 = func_3072_call()
call_3671 = func_3072_call()
output = call_3670
output2 = call_3671
func_3674 = relay.Function([], output)
mod['func_3674'] = func_3674
mod = relay.transform.InferType()(mod)
mutated_mod['func_3674'] = func_3674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3674_call = mutated_mod.get_global_var('func_3674')
call_3675 = func_3674_call()
output = call_3675
func_3676 = relay.Function([], output)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1290_call = mod.get_global_var('func_1290')
func_1292_call = mutated_mod.get_global_var('func_1292')
call_3710 = relay.TupleGetItem(func_1290_call(), 2)
call_3711 = relay.TupleGetItem(func_1292_call(), 2)
func_2463_call = mod.get_global_var('func_2463')
func_2468_call = mutated_mod.get_global_var('func_2468')
var_3714 = relay.var("var_3714", dtype = "float32", shape = (1536,))#candidate|3714|(1536,)|var|float32
call_3713 = relay.TupleGetItem(func_2463_call(relay.reshape(var_3714.astype('float32'), [8, 16, 12]), relay.reshape(var_3714.astype('float64'), [8, 16, 12]), relay.reshape(call_3710.astype('int16'), [504,]), ), 1)
call_3715 = relay.TupleGetItem(func_2468_call(relay.reshape(var_3714.astype('float32'), [8, 16, 12]), relay.reshape(var_3714.astype('float64'), [8, 16, 12]), relay.reshape(call_3710.astype('int16'), [504,]), ), 1)
output = relay.Tuple([call_3710,call_3713,var_3714,])
output2 = relay.Tuple([call_3711,call_3715,var_3714,])
func_3727 = relay.Function([var_3714,], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3728 = relay.var("var_3728", dtype = "float32", shape = (1536,))#candidate|3728|(1536,)|var|float32
func_3727_call = mutated_mod.get_global_var('func_3727')
call_3729 = func_3727_call(var_3728)
output = call_3729
func_3730 = relay.Function([var_3728], output)
mutated_mod['func_3730'] = func_3730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_3750 = relay.TupleGetItem(func_1205_call(), 1)
call_3751 = relay.TupleGetItem(func_1206_call(), 1)
var_3756 = relay.var("var_3756", dtype = "int64", shape = (10, 11, 12))#candidate|3756|(10, 11, 12)|var|int64
bop_3757 = relay.subtract(call_3750.astype('int16'), relay.reshape(var_3756.astype('int16'), relay.shape_of(call_3750))) # shape=(10, 11, 12)
bop_3760 = relay.subtract(call_3751.astype('int16'), relay.reshape(var_3756.astype('int16'), relay.shape_of(call_3751))) # shape=(10, 11, 12)
output = relay.Tuple([bop_3757,])
output2 = relay.Tuple([bop_3760,])
func_3776 = relay.Function([var_3756,], output)
mod['func_3776'] = func_3776
mod = relay.transform.InferType()(mod)
mutated_mod['func_3776'] = func_3776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3777 = relay.var("var_3777", dtype = "int64", shape = (10, 11, 12))#candidate|3777|(10, 11, 12)|var|int64
func_3776_call = mutated_mod.get_global_var('func_3776')
call_3778 = func_3776_call(var_3777)
output = call_3778
func_3779 = relay.Function([var_3777], output)
mutated_mod['func_3779'] = func_3779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mod.get_global_var('func_3344')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_3781 = relay.TupleGetItem(func_3344_call(), 0)
call_3782 = relay.TupleGetItem(func_3346_call(), 0)
output = relay.Tuple([call_3781,])
output2 = relay.Tuple([call_3782,])
func_3799 = relay.Function([], output)
mod['func_3799'] = func_3799
mod = relay.transform.InferType()(mod)
output = func_3799()
func_3800 = relay.Function([], output)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mod.get_global_var('func_3649')
func_3650_call = mutated_mod.get_global_var('func_3650')
call_3859 = relay.TupleGetItem(func_3649_call(), 4)
call_3860 = relay.TupleGetItem(func_3650_call(), 4)
func_2751_call = mod.get_global_var('func_2751')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_3876 = relay.TupleGetItem(func_2751_call(), 0)
call_3877 = relay.TupleGetItem(func_2753_call(), 0)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_3885 = func_1672_call()
call_3886 = func_1672_call()
output = relay.Tuple([call_3859,call_3876,call_3885,])
output2 = relay.Tuple([call_3860,call_3877,call_3886,])
func_3889 = relay.Function([], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3889_call = mutated_mod.get_global_var('func_3889')
call_3890 = func_3889_call()
output = call_3890
func_3891 = relay.Function([], output)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2751_call = mod.get_global_var('func_2751')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_3892 = relay.TupleGetItem(func_2751_call(), 0)
call_3893 = relay.TupleGetItem(func_2753_call(), 0)
func_1466_call = mod.get_global_var('func_1466')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_3900 = func_1466_call()
call_3901 = func_1466_call()
func_2751_call = mod.get_global_var('func_2751')
func_2753_call = mutated_mod.get_global_var('func_2753')
call_3944 = relay.TupleGetItem(func_2751_call(), 0)
call_3945 = relay.TupleGetItem(func_2753_call(), 0)
func_2638_call = mod.get_global_var('func_2638')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_3951 = relay.TupleGetItem(func_2638_call(), 0)
call_3952 = relay.TupleGetItem(func_2640_call(), 0)
output = relay.Tuple([call_3892,call_3900,call_3944,call_3951,])
output2 = relay.Tuple([call_3893,call_3901,call_3945,call_3952,])
func_3960 = relay.Function([], output)
mod['func_3960'] = func_3960
mod = relay.transform.InferType()(mod)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3960_call = mutated_mod.get_global_var('func_3960')
call_3961 = func_3960_call()
output = call_3961
func_3962 = relay.Function([], output)
mutated_mod['func_3962'] = func_3962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1614_call = mod.get_global_var('func_1614')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_4013 = relay.TupleGetItem(func_1614_call(), 0)
call_4014 = relay.TupleGetItem(func_1616_call(), 0)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_4015 = relay.TupleGetItem(func_1793_call(), 3)
call_4016 = relay.TupleGetItem(func_1795_call(), 3)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_4035 = relay.TupleGetItem(func_2912_call(), 0)
call_4036 = relay.TupleGetItem(func_2913_call(), 0)
output = relay.Tuple([call_4013,call_4015,call_4035,])
output2 = relay.Tuple([call_4014,call_4016,call_4036,])
func_4043 = relay.Function([], output)
mod['func_4043'] = func_4043
mod = relay.transform.InferType()(mod)
output = func_4043()
func_4044 = relay.Function([], output)
mutated_mod['func_4044'] = func_4044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_4057 = relay.TupleGetItem(func_849_call(), 2)
call_4058 = relay.TupleGetItem(func_851_call(), 2)
output = relay.Tuple([call_4057,])
output2 = relay.Tuple([call_4058,])
func_4064 = relay.Function([], output)
mod['func_4064'] = func_4064
mod = relay.transform.InferType()(mod)
mutated_mod['func_4064'] = func_4064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mutated_mod.get_global_var('func_4064')
call_4065 = func_4064_call()
output = call_4065
func_4066 = relay.Function([], output)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1290_call = mod.get_global_var('func_1290')
func_1292_call = mutated_mod.get_global_var('func_1292')
call_4121 = relay.TupleGetItem(func_1290_call(), 2)
call_4122 = relay.TupleGetItem(func_1292_call(), 2)
const_4124 = relay.const([[-5.048518,-6.975423,3.793790,-4.690561,-5.628199,-6.838054,2.268293,-1.366233,2.996267,-9.664243,4.119798,-3.449937,-7.825735,5.570238,9.161476,4.356352,4.440676,5.942893,9.736901,7.538108,-0.286029,-2.040193,8.629663,-5.296862,-6.458871,2.790239,-8.602077,3.957737,4.073022,4.113076,8.509284,-2.041276,-2.988941,9.381593,9.172907,-0.830852,6.586843,6.462641,2.906464,1.201873,0.330353,7.691439,-8.146376,-9.581186,5.645315,0.131157,-9.929079,3.743188,3.107368,-1.862030,2.917705,-3.659596,5.099039,-9.061981,-3.106404,-2.227581,-1.599574,0.751720,-5.616272,-3.719818,1.243548,0.257552,7.007097,-7.785080,7.744274,4.261862,4.602315,0.485912,-7.453001,-7.120901,-4.090233,-7.500117,-2.188487,8.709027,1.837306,9.318544,6.544859,-1.041354,3.837041,0.097748,6.748684,-5.111490,2.405666,8.617611,8.893245,-4.392164,-2.132260,-5.209916,-2.233463,5.946144,-0.571055,-8.270240,2.393160,-5.795268,7.933873,-9.118864,2.093930,-3.955488,-6.140055,-0.737798,1.496373,8.935952,2.389737,-5.765686,-2.116388,0.793686,-4.657382,-1.003400,-1.098132,6.735373,0.883048,-7.342864,-4.376618,6.156285,-9.773354,-6.174342,-7.183923,6.163190,8.384852,5.450104,8.855697,-8.725810,-2.210834,-0.936787,-9.456550,-3.434320,5.591069,-3.897912,4.236181,-8.929170,3.874383,2.521264,6.039176,5.406323,5.552590,-0.910366,3.301485,-1.929790,5.201816,-6.768420,-0.128213,6.090242,9.569332,2.014927,5.670793,-8.383062,-6.835075,-0.743592,-5.062900,0.316639,-4.896913,-4.034543,-7.628863,4.917877,5.619162,7.163080,1.765613,3.340858,-2.683624,6.370511,0.996239,-4.618399,-2.183114,4.705355,-9.611077,-1.641890,-8.690246,-7.259762,5.924725,-0.301927,9.061397,4.402728,9.069893,1.017255,6.180103,6.596480,-0.952028,2.801203,4.813308,8.690376,2.598849,-4.007380,5.827028,-5.480448,1.737653,7.666831,1.473519,5.476292,-5.834231,-8.962669,7.929911,-5.006903,-0.133402,-6.908142,-1.077491,6.839694,9.901715,1.955027,7.856248,-0.416111,-8.104295,4.988728,-5.486018,-9.323814,-0.398262,-6.467960,8.022957,7.471630,-7.495912,7.475950,-3.031575,-0.841069,-7.165214,-4.350928,-0.962956,-6.681550,-9.205750,-3.473099,-9.027049,7.069832,0.337484,6.935702,-6.172597,-6.004840,-7.310949,0.927756,9.792989,9.776873,6.943107,1.767547,-0.817953,2.622883,6.622957,1.855273,-7.438727,-8.248544,-1.673302,-2.672250,6.135901,-5.095731,-8.287421,-4.698787,8.969142,-3.848223,3.533543,-4.042802,4.947399,-4.276717,1.794601,7.886789,0.397874,-2.327008,7.332505,-5.258706,4.620193,-8.094388,0.858706,1.599302,-0.606942,1.134817,8.006260,3.998861,9.483971,-3.315809,8.293547,8.823282,5.812252,6.756956,-6.086596,5.759152,-2.339492,-3.851038,-6.141644,-7.657845,2.084777,-3.383636,-3.873557,1.571021,-1.285162,-3.017016,8.085396,-8.074324,8.441054,7.509051,0.612381,-2.224482,0.478166,3.351781,-8.310137,-3.530477,-2.585775,5.432092,2.038198,-1.254912,-2.899323,0.012375,-4.274399,-5.239238,3.472283,-4.809874,8.890689,-4.064181,0.969519,-9.719528,-8.222702,3.203219,-5.053791,5.281001,8.204495,0.722043,-5.628752,-9.479033,-4.927381,9.880016,-4.130338,-9.200714,-7.554093,-8.776429,9.342746,3.600880,-6.239478,-9.584389,5.973213,-2.537270,9.825523,-5.167760,-4.111656,4.701283,-7.120314,9.238206,-6.852440,-1.496532,-5.073448,-9.717659,5.503956,5.935320,-1.394935,-5.785289,1.048706,-4.175976,-4.358397,0.678404,2.997152,7.898054,3.260302,8.606848,1.780885,-2.309692,-9.668018,2.410674,-7.315178,3.407247,-3.629047,6.479923,-7.693613,-4.498476,-3.036833,-0.971398,-8.637038,3.437615,-4.755769,7.284002,-9.602084,7.443699,-7.379584,3.763181,-2.569850,2.349291,-7.814074,-1.555252,2.065805,-8.490675,-4.417831,9.611704,-8.871256,-1.855670,2.140338,-7.422248,1.463936,5.152680,-2.059820,2.648478,6.359125,1.332119,0.610051,7.829247,4.312810,-4.563200,-9.764633,-7.783820,6.733914,7.380077,7.627632,-9.053947,5.898386,-9.915569,-2.174513,-7.431017,0.350360,-7.467244,-3.460451,3.803753,7.306993,1.342004,2.533540,-1.146504,2.783986,-8.323184,-6.383013,2.736851,-5.976418,4.168971,3.787567,-2.566857,-8.447750,7.114065,-2.122311,-6.122981,2.016117,3.047871,0.030350,8.505838,1.868397,3.974397,-1.120848,-7.775712,6.268740,-1.688680,8.084089,2.375737,2.812312,-5.946868,4.432602,1.993256,6.897552,5.438167,-8.478349,0.611653,-3.230155,0.187091,4.986144,9.376958,-8.952048,-5.582066,9.596842,0.057142,-7.578293,-7.938210,-9.734337,-9.340577,5.739906,-6.970544,-2.567158,1.694463,7.410177,-3.974020,-0.455340,3.272629,6.182941,3.351709,2.730996,1.822274,-8.063204,8.673162,1.479834,-3.838995,6.722744,-6.230758,-1.046002,3.092191,5.693918,0.977611,9.435167,-2.743232,-7.731649,2.039637,-7.737553,3.942957,2.754574,2.801268,8.774651,1.599057,-0.418958,-6.027605,7.065067,-5.830429,0.878500,6.986010,-9.310881,0.634429,7.810968,-4.961999,3.901533,-4.156565,-4.842176,8.548837,-8.281982,7.309479,9.849958,3.222261,4.681955,2.040798,8.596866,9.778576],[-7.545293,-1.578560,-2.480120,9.739720,1.751698,-6.648016,1.187058,3.037495,-8.979100,-3.588850,-5.095996,-6.881891,-3.191430,5.199342,-2.224582,0.123624,5.609734,-1.365717,1.585739,-7.091342,-3.275549,-4.917588,-5.538198,3.828409,-9.219709,-7.100115,7.114697,-7.101377,-2.530780,-6.935381,0.121882,2.770817,1.087462,-9.525807,9.146463,5.150398,6.141791,3.733025,9.181306,-7.755227,2.063263,5.241294,2.617637,-5.060286,3.465855,2.715936,-2.761300,7.658331,-8.074500,-5.593720,-4.641692,7.736345,-4.786723,-1.237634,9.801749,6.918896,8.492690,-9.658058,8.327510,6.199301,6.836545,1.028537,4.049328,8.299897,-0.340634,-6.800535,-5.678196,-8.378450,-1.744455,-5.048959,3.965395,-2.318431,-5.600095,1.748210,9.926321,-6.265063,6.367883,3.098506,7.143317,3.546794,-6.428252,-1.365777,9.680780,8.890553,5.154378,-8.198807,-0.958763,-6.843785,9.020591,-4.558551,-2.275854,5.002597,-5.795513,-0.779758,3.384953,1.993062,6.032821,-3.105516,-2.638491,9.579814,-2.505862,-1.730023,-5.189778,5.742270,-9.826897,4.015119,3.809266,1.477748,9.566537,7.846018,0.039256,-9.263380,-8.048490,7.688410,6.537929,3.302461,-8.775117,-8.168452,-6.144320,-7.541073,1.888700,3.066580,-0.758316,-2.036071,-3.855868,2.405889,-9.686287,6.327798,-2.810458,4.714924,8.300994,9.155372,-1.979470,-1.118071,-1.313998,6.913429,-1.845126,-7.892172,6.139413,-7.920419,-1.970492,1.133568,-2.491732,7.960694,-9.102851,-0.534795,9.721836,4.856329,9.860862,-2.114976,5.806025,8.203108,-4.780366,-0.296154,-0.551544,-0.528084,-7.989607,5.564069,-3.170146,-7.404157,6.069940,-1.418999,-8.368397,-5.377963,5.879235,6.282317,-8.861776,9.778177,-4.783873,8.870496,-6.216074,4.784082,8.932613,5.874570,-9.956289,-1.109870,-5.893695,-1.652301,3.570016,-8.797750,-2.535507,1.687666,-0.742070,0.872182,-3.402231,7.458145,-6.312944,-2.395062,6.165664,0.844556,6.081573,7.298358,-8.167249,-6.571338,-1.492959,0.224506,3.455332,-4.455886,9.787616,-7.158629,-2.355218,-6.669976,3.515373,-7.296324,4.552395,-6.713987,-7.239302,-5.950687,8.749388,-8.027654,-5.129260,-9.975914,-8.557592,5.990879,1.740350,3.179584,-5.292858,-6.033121,-1.061171,-7.608852,1.176950,-6.408744,3.709491,-6.977176,-4.707769,-7.721816,-3.072528,-8.357457,2.598807,-3.785749,9.029239,-9.221385,-4.824484,4.868763,-8.918171,-0.294609,-6.436359,1.737617,0.973560,2.643873,-0.378938,-1.166174,-2.985571,9.214346,0.603002,-3.583823,1.288438,-8.942694,-5.258155,5.201187,0.769532,-7.272240,-0.194195,5.595928,7.219011,9.056773,9.543526,1.134227,-1.805512,5.732657,-3.862670,5.801690,3.808018,5.459742,0.829536,-0.820472,-3.763786,9.693596,-8.249384,7.321249,6.651623,3.561674,-1.162954,-3.449614,8.147529,-7.127510,-0.538510,4.125623,6.808007,5.586827,4.449825,-0.213054,-1.273448,9.658160,-0.927878,-5.635259,6.590346,-9.789951,-5.237230,4.978574,4.855202,-4.320645,9.049499,7.377174,-8.300375,1.407447,-1.686416,-3.878748,9.448750,6.521771,-5.375227,0.895538,4.860967,0.582074,0.267861,6.497715,2.140199,-3.552204,2.244507,1.309002,-8.763788,-9.645627,-0.577775,6.682626,-6.803535,-8.482782,-2.116697,-3.957352,3.090671,-8.774467,-8.685734,0.182398,0.278612,-2.768209,6.846225,-0.452693,7.247356,-6.586280,4.956689,9.141556,-9.583672,-6.363168,-1.885953,-5.814238,0.070963,-2.715552,-1.205801,0.117391,5.054077,2.698289,9.836318,-4.493394,-5.821538,5.034703,-4.835925,1.008989,-6.392919,5.935715,-4.585708,-4.702135,-0.051568,-7.076929,4.050611,-3.003730,2.506137,1.441905,-6.077132,9.214493,3.558210,-9.302098,-3.880866,-4.187475,-7.944212,5.447857,-1.609025,-0.858037,-8.254152,7.867389,-3.958202,-7.329211,2.895030,-4.039024,5.254626,-3.292566,-3.317345,-3.140740,-4.855699,2.261458,-8.858264,-7.288943,1.007565,-9.986167,2.236995,5.326901,3.237782,8.273086,4.311938,-8.908740,-4.134043,8.482604,-1.531191,6.410366,4.998598,6.639103,0.840540,-8.988182,-4.457896,-3.684726,-7.541422,3.894112,5.758063,4.642593,-8.909432,2.174469,-0.121338,-2.008091,-3.209223,-9.850636,-4.622749,8.408877,5.618024,-6.833557,-7.854813,8.079270,-2.779733,0.254736,1.479873,0.728582,-8.614290,-8.312865,7.623476,4.631284,-7.560563,1.402711,5.166505,-6.707269,-5.510235,-4.934400,1.442868,-0.079316,-8.345951,1.738050,-6.586007,-2.375288,4.008070,2.063379,4.487632,-6.898399,-8.697953,-7.570718,5.412231,-7.596821,-7.608016,-8.444123,-7.252981,2.965338,-3.634015,2.397327,6.756436,-2.480429,-8.068907,-5.052640,-1.149294,-5.199968,-6.445387,0.636670,8.716068,-0.998068,-2.115507,-1.549016,7.870173,-0.684990,-1.826302,-4.396120,1.888380,5.546477,-4.997595,7.987846,-7.319205,-2.131336,-2.786700,-3.600823,6.674026,1.878922,-1.284079,6.449595,-4.117391,8.626974,2.700976,-9.614023,-0.455617,-6.943523,6.953354,-2.733373,2.608626,1.842953,-4.795768,-2.722137,-7.018464,5.879976,3.735395,-2.761359,-9.085981,-1.864725,2.283421,-2.272762,-2.441891,-4.435887,-2.522175,-1.459227,7.411753,-0.814866,9.051846,-3.944640],[-8.986245,-5.125634,-6.760377,2.621184,9.733592,-7.118449,3.316771,-9.277430,8.917393,5.913157,4.958083,-2.876368,2.522564,-5.630864,4.005666,-9.429793,0.410580,8.208072,4.318242,-0.121861,-5.945632,1.841011,-7.300428,-2.955392,8.190920,9.987101,0.971219,3.106288,-2.664576,4.087810,-0.833797,-7.356684,1.261438,2.093839,-3.574058,2.777042,-1.854733,-8.625006,-2.656813,9.207109,6.188597,9.181029,-1.538507,4.548350,-6.583058,-4.110787,4.164549,-0.660189,-0.487549,3.345954,-6.957100,9.251605,-5.759265,0.971644,-5.288418,-7.302657,4.758466,-0.536196,-2.747447,7.813292,4.615814,-5.251885,-7.595743,0.423461,-8.996057,6.972277,4.634745,-0.168972,8.899954,-0.687989,-3.838547,5.211528,-1.148966,7.067407,7.906334,-7.052135,-6.073785,8.490963,1.411375,2.944841,-6.583981,-8.547504,6.230864,4.966389,-5.433329,8.339969,-1.058700,1.232870,-2.384519,2.222930,1.556358,-8.667472,-1.893748,-9.811390,-6.851604,-1.498456,-0.599192,-4.478780,7.728999,-3.285941,-0.130963,-1.254170,-6.079069,1.549621,-5.413088,9.298990,-4.184089,2.018808,3.777728,9.253579,6.817282,-3.555476,-0.565706,6.785395,-1.745926,-8.302696,3.585633,9.719093,-6.246133,3.492211,-5.244661,-2.240954,-1.601940,7.115277,3.714982,-6.209642,-5.022400,-2.571545,3.711080,-9.402668,-9.876432,-5.891823,4.455399,3.357058,4.712163,-8.772502,5.413386,-9.695951,-3.117554,-3.733216,-4.404686,-1.157760,6.618015,-6.075192,9.700968,8.078315,1.851936,7.192728,5.160040,-3.286502,0.717545,-4.161819,4.794925,6.412205,3.709155,2.648534,-2.447371,-2.261256,-0.005244,-4.172589,-8.955190,7.245542,-8.833314,-5.040500,-5.899648,-1.702563,-2.176819,-6.913014,8.721288,4.489027,8.488633,2.771913,8.919613,-9.100686,-9.445076,5.772688,-1.611502,-0.766221,5.578111,-6.358299,1.271477,-2.525634,-2.026674,0.504460,-2.331873,-2.414029,5.302666,3.233060,7.401511,-3.902136,-7.509288,-1.752148,3.123906,9.816942,-0.558240,-1.210985,-0.944300,9.370479,6.190922,4.870659,9.573852,-6.665744,7.035871,6.248776,3.849520,-0.331025,4.572084,-4.446171,4.468485,-8.988390,4.175608,6.819475,6.836490,-5.230132,3.300169,-0.905571,3.883316,5.814814,-5.143769,-8.397174,-3.980133,8.787133,0.723706,-5.747978,-9.039001,-2.360712,1.501191,0.337568,-1.055095,-0.778665,5.613892,3.971414,4.266348,2.788730,2.067498,8.864327,-2.915811,-4.290654,-0.129979,-3.285990,4.803948,-8.558838,-9.535166,1.979203,-8.217242,-8.084180,-0.643169,-8.239740,-9.963530,4.953457,7.314723,-8.826237,4.301625,-0.280069,2.196387,-4.815971,9.044770,-6.032964,0.030733,5.913216,7.119002,4.014338,4.125377,3.101543,-4.733413,5.683113,1.343155,4.501406,-7.364752,-6.715439,6.235987,-5.178313,9.255182,-3.552382,-3.903730,-4.788942,-8.678982,5.846701,-3.117218,6.211626,3.359423,-1.507562,-0.705161,-8.861337,6.715832,7.586200,9.008711,-4.037588,-6.792367,7.757065,-2.436822,-0.356756,-2.147926,-7.432502,-3.288275,3.475646,-7.899114,-5.699226,0.373670,-8.818642,3.735140,3.382455,3.297800,0.640129,7.608704,2.218154,9.496029,-0.549346,7.727917,-2.112073,-9.405439,-9.376307,6.846718,-5.668460,9.791188,-9.719064,-1.813406,7.299886,3.410842,2.041351,-5.337075,-2.049704,-1.353892,3.657920,4.963707,9.438668,9.655967,-0.973011,-6.277374,2.725531,9.354345,-8.852875,-3.254358,-1.848869,-7.654863,-5.006730,-6.857907,-1.179367,5.393562,-4.076928,5.128951,-5.931618,2.667489,-9.268738,4.324562,5.894475,9.556446,-8.943358,-8.751030,8.610226,-1.123976,9.878836,-4.667665,3.080308,7.890659,-0.885783,0.050293,5.353996,3.979193,-0.147164,4.743488,-3.462257,1.354818,-6.119492,9.516338,0.169953,4.433032,-7.879124,-5.609619,6.024710,0.842363,0.067158,7.399115,-5.805266,-9.247820,8.543708,-7.817483,-6.499286,2.922685,2.876517,-8.840270,-6.137219,9.759296,7.414047,6.471716,3.241779,-2.593206,3.845140,3.846711,-4.978074,0.860644,-5.657071,9.553883,3.000661,7.533436,5.191941,0.625493,-5.016253,-0.816430,3.644780,-4.182258,2.482893,0.726360,-1.671707,-3.464811,-9.635019,6.291178,7.468571,3.909707,0.103315,-9.716613,-2.858624,-6.915570,-5.056961,-2.734346,-2.105053,8.443337,4.426637,5.335078,1.405550,-7.135931,2.481163,-2.295386,3.309224,5.282425,3.820089,4.880927,-1.917897,-7.522366,8.717016,-9.224999,1.234327,6.207028,-8.470629,1.484422,-1.041657,1.109731,2.968210,-5.731835,2.105929,4.686398,1.900192,-8.959640,-1.579117,5.653381,2.705366,-5.152119,4.859237,2.254028,-0.539965,5.875259,-5.220460,-4.209607,9.689377,-3.685867,-1.695816,9.551311,8.163446,3.699301,-7.290797,3.885569,-8.761998,-3.271699,0.837430,9.248708,-7.083026,-4.580697,2.472190,-0.485806,8.628282,7.446002,-3.682949,-4.407622,-6.700420,-0.221288,-9.522129,-1.143409,4.183621,-8.278955,-0.514964,-1.798789,-5.221288,-3.237060,2.094412,-0.667220,6.752085,-7.473963,-7.608477,3.911171,5.486539,6.582558,7.669534,-3.225857,3.246137,3.850590,8.618250,-9.348045,-1.692025,8.583006,-1.535212,1.175498,-9.601867,4.281570,-5.751919],[3.017248,-9.488523,2.682905,7.867435,-5.141170,-4.741618,-5.403655,9.013247,6.965206,9.047741,3.264297,2.863964,-6.493560,2.760784,-2.698709,-0.017810,5.447750,2.066229,1.674038,-1.294123,9.675180,3.757092,-7.774748,-5.152872,6.876719,8.323010,1.371147,7.060856,-6.113426,-4.867386,-1.069983,-2.992680,4.546654,-9.366512,-9.198379,8.064291,8.092638,-6.381295,2.761124,7.155083,-3.092899,-7.293991,4.779678,1.306402,-9.370811,5.442094,2.457088,-7.302674,3.880197,7.819506,7.571133,3.392490,6.615967,6.514517,-7.310596,3.931095,5.279115,4.990640,2.443473,-9.393216,-1.552260,-0.173213,0.306500,-2.608981,0.357983,7.338639,-8.372048,3.286708,-1.086886,1.897649,-6.867427,0.162831,-4.570045,-2.746012,-1.757270,5.319766,-9.931088,-8.878154,-4.654761,-8.415016,-6.172082,-3.491818,-4.138901,-5.473963,-8.304180,-9.484024,1.249976,-5.199296,-7.122736,1.475432,2.682323,4.072574,7.874818,-9.008981,-6.730978,3.674839,-7.524689,-8.131013,-2.329097,4.828404,-8.870404,6.308913,4.434222,9.675925,-2.817604,-7.122567,5.836813,-9.757900,4.265606,-2.250517,4.029323,-4.520123,8.284745,1.225983,-7.417011,1.817506,-3.681462,-0.523114,-0.841911,9.928321,-8.501005,1.170288,4.014323,-0.414234,-9.619988,-8.285776,5.908708,8.763846,6.560516,-1.959645,6.561424,-9.828588,-8.606747,1.818514,-1.753898,0.242936,4.153944,-6.022695,-5.916714,6.012569,9.835826,9.889488,3.950645,-7.013537,6.854050,-7.647538,-1.415923,-7.933111,3.648360,5.271630,-8.150680,-8.760829,6.496430,-4.032912,-6.317272,-7.447028,0.348686,-9.664224,-1.988802,-6.604928,3.009627,-6.855207,1.108056,-6.417048,7.665583,2.281043,-7.142647,6.330656,-4.147752,-4.137146,4.089874,6.257656,-4.222778,3.564192,-6.233572,-2.602242,-5.905137,1.174665,0.133807,-5.753590,3.614878,-7.805613,-4.259227,-4.419836,8.114132,0.248839,8.801552,0.199983,-3.422469,5.316235,-6.966120,-5.003171,-1.199696,2.029305,5.267424,-1.677066,1.249161,-7.159861,-4.359436,-2.287022,4.265263,2.775336,-9.031504,-6.808838,3.461163,0.036427,9.715836,7.448007,1.595387,7.759469,-3.260126,-7.784529,-3.472319,9.870672,2.996914,-4.977496,2.918725,4.391730,8.073441,-5.448411,1.561486,-5.300107,8.176083,7.646367,-6.852962,7.825504,-7.372059,-5.841028,4.525922,-7.128169,-0.021602,3.925941,-1.841986,6.931288,0.950904,-7.554324,-1.918166,5.786328,-6.186348,-5.979695,-6.224828,-3.424873,4.049355,4.788209,-5.086159,1.752564,3.953721,2.310163,-3.902063,3.950220,-7.309678,-8.720094,-1.198116,1.407657,-5.692211,-1.986354,3.178930,-9.348000,6.387429,6.201492,0.238975,-2.073159,-1.985884,-3.259185,8.350028,-6.419687,0.904097,-4.197681,-7.250246,4.265869,8.815500,1.395563,-3.539267,-7.149190,-0.175019,4.512255,-4.524980,-2.747770,6.594699,5.890190,-6.100649,2.889346,5.101889,6.871266,2.526222,-3.230715,-7.567487,7.696630,8.782717,5.973190,-3.015756,2.295051,-9.741760,9.478385,-3.808804,-7.706462,-6.141336,5.116309,6.221830,3.080979,9.428366,-7.119483,-9.424763,-1.859870,4.120124,5.399726,-2.351565,-4.679469,-8.442305,8.820580,8.408387,9.776784,1.116134,1.718435,5.225632,1.675041,-0.835850,0.406969,1.391636,2.172691,6.209057,-4.540678,3.879477,-8.796826,-6.016582,9.109898,-2.943912,3.812416,1.868904,-2.663467,-0.552298,1.775653,2.986516,9.565359,-4.065711,5.505660,6.418689,5.362814,9.355280,-9.263307,5.235983,0.207847,-0.152504,4.847115,6.855474,-7.478524,4.460275,-3.410889,-4.629498,-4.551132,-0.491401,-6.866419,2.493074,7.445997,-4.206390,0.347001,1.597156,6.451357,7.634346,2.495716,-1.411698,-1.729287,1.618127,0.753759,-8.599865,-7.259824,3.745088,-4.463622,-6.146132,0.071446,5.646925,4.645160,0.975314,-3.342072,1.096888,3.089810,-5.917509,-8.820613,4.755648,7.606086,2.091700,-3.939350,5.043798,5.463704,-7.178498,-5.455491,1.301987,-2.039287,-3.713349,-5.768856,-0.570598,6.624082,9.476731,-9.615710,2.405196,4.760217,2.359625,-4.550728,-6.720117,1.274863,-0.985369,7.548925,0.890722,2.932808,-9.233806,6.868124,2.549075,7.795243,-4.052046,3.338626,-5.207450,-5.779907,7.631069,-3.688108,1.967429,-6.970381,3.655609,2.492396,-9.210074,-0.241156,-9.960309,6.781047,-9.659841,3.514000,8.083834,7.817168,1.976483,6.258060,-3.904002,-5.026157,9.223599,8.411663,-0.098056,3.002997,4.935253,-1.400040,-3.722130,-4.556376,-5.772496,8.599653,-7.627330,6.486497,5.694458,-4.968524,-5.719989,8.460641,-5.040469,-5.020022,8.527616,8.086958,2.500289,7.195183,0.991425,3.790167,7.648403,8.872426,5.741955,0.513742,-7.563750,-2.281913,-3.876402,-3.554585,-8.076637,-0.056683,2.963413,8.200616,4.162357,-6.371821,-8.760673,-0.287789,-0.630989,7.849229,7.527265,-1.996540,1.440000,-0.624474,-1.278562,-2.893823,-2.526709,3.617658,-0.966270,-9.569722,8.459727,-5.973888,-6.501009,4.414531,2.388285,-9.948011,1.978419,-5.934274,5.642350,-4.856253,6.627744,9.024990,1.867865,2.051382,0.851079,8.849236,-9.885928,-5.730636,2.533040,-2.865242,-5.666622,8.547673],[3.854298,-3.882431,-7.023939,4.127367,6.043541,0.247107,3.199844,-0.273181,9.843894,2.499249,-9.006932,-6.638706,4.333727,-4.599057,-9.330247,5.844246,4.143579,-4.846468,-3.431303,3.188685,-4.801239,5.999750,-4.490249,-3.576493,3.900224,1.645692,1.513632,2.140441,-6.125908,3.669224,0.100598,1.055632,-7.272326,9.009604,9.399809,7.372449,1.530669,5.547930,-7.510858,7.038907,2.265662,6.855301,3.881032,9.410935,-5.162910,-3.395084,9.125068,-0.298549,3.437726,-4.148679,3.062184,1.621579,-6.891327,-8.906393,-0.208050,5.446647,-2.055513,3.765481,6.888973,-0.950290,6.925310,-6.796594,-0.402316,-5.109580,-5.515944,-7.898885,-0.396604,-5.705186,-7.282206,-1.649058,8.177895,-5.494713,-1.401384,2.783981,-3.503583,-5.056127,-3.401739,-8.521433,3.465046,-4.421396,3.206271,3.822785,-3.765761,0.369037,-3.979957,-9.728121,4.225809,-2.800909,-1.541206,0.645383,5.758499,-2.740286,-3.717374,-7.034746,6.367739,0.945750,3.786011,2.079292,0.186496,-0.571292,-2.529872,2.701304,3.712299,7.241203,9.100366,-9.532567,-5.704761,-4.661704,0.430312,3.216142,0.847515,0.564663,9.386314,4.584889,1.730119,6.023856,-7.040031,4.881049,-2.937720,7.669615,-0.444384,-4.913762,-0.723201,4.389929,3.424128,-4.461634,-5.338034,9.049022,-8.423054,-8.792320,-8.105112,8.274234,-3.924885,-2.759200,-9.436072,-4.455116,5.353588,7.285646,2.966272,7.928890,2.090956,5.258645,1.269167,-6.942626,7.973531,-7.238346,-5.444852,-0.218069,-1.628499,1.093315,-5.582160,8.881230,-5.750747,9.130482,-6.506625,-8.550139,8.620129,5.580572,-5.550711,-4.430940,-6.769356,5.512493,2.078251,6.685982,-2.166639,-6.342226,-7.036919,-1.996059,-4.885213,-5.688776,-9.931872,8.792938,-2.009048,-7.134413,-0.932947,7.288493,9.119270,1.647468,-7.084608,3.107358,1.398968,-1.326000,7.873548,-0.433133,-3.614890,-6.421084,9.270542,-2.887442,-6.869900,-7.631235,-5.353355,6.904615,-5.784041,-2.611664,1.185117,9.247568,5.605148,-6.257746,-0.471149,-7.089036,0.470634,1.199602,-6.129503,5.740409,-0.766899,6.668397,2.660392,8.791454,2.256368,-8.077729,9.306196,4.607741,3.053047,4.494543,-4.729479,3.957809,8.260807,-4.062205,-0.861080,-2.821483,0.879710,3.297116,1.714168,-9.270074,-4.771767,1.714768,-2.496796,-7.485011,9.167426,0.139801,-7.401926,9.436303,8.127400,6.121524,1.053159,6.962655,-5.626764,9.780266,2.630348,-6.463924,7.915539,8.764703,5.657206,5.931048,1.323469,-4.092360,8.405564,8.305234,-9.218686,5.974997,4.133985,-5.658769,0.383118,8.137995,-0.899868,0.688999,8.257643,3.721058,-6.366054,3.009240,-8.211022,3.797922,-0.225617,-9.391908,-2.130349,-8.781775,-6.599634,7.628283,8.870466,-4.366684,-9.412596,7.810030,-9.938120,-8.688698,8.491177,6.303384,-7.603492,-3.061157,5.008765,4.224960,-3.673558,3.318704,-4.277974,-6.707085,2.126662,5.252120,-4.556349,-8.798336,-8.662212,-2.133160,-5.001249,1.252993,-6.193401,6.482620,-5.724525,7.064474,3.040147,-0.618094,8.288721,8.352107,8.665241,2.232652,5.594754,0.140265,-1.858257,3.245570,5.108982,3.246327,-9.715679,4.862268,1.126713,4.583781,-6.381918,7.153733,3.485460,-2.388336,5.396163,-2.469091,3.992146,-4.654711,7.832221,7.962492,-2.218030,4.464294,3.916042,-2.786861,5.585902,4.487758,2.873222,-8.564499,0.465556,5.438838,-2.222606,3.468141,9.520290,1.533694,-0.922335,5.416137,-2.831485,4.375559,-6.371555,-2.320578,-3.300434,0.326113,-5.655607,-8.603055,-4.066223,3.215837,5.641174,9.984157,-5.819837,-9.156705,6.789057,-9.902347,-9.173576,6.111981,3.359493,-2.922235,-6.633689,6.330633,8.898009,-2.935095,2.640661,-1.450718,9.377962,-5.534846,9.095931,-8.116566,-9.025627,-2.285008,-5.542682,7.974744,2.217939,0.153729,1.044573,6.567005,-4.343098,6.871746,4.554361,5.949582,2.501700,-1.918683,-6.023543,0.045701,7.216432,6.228088,7.701943,2.455006,-8.049312,-9.763556,1.165283,6.472341,-7.727847,-3.745197,-3.521988,-3.432036,1.603445,-2.933853,4.246489,-4.439763,8.533299,-5.439231,7.304971,-8.483854,0.788523,5.475728,-7.574768,-8.767035,1.075511,-8.864226,-6.825402,6.776347,8.384441,2.558411,5.982717,-6.159127,2.780651,-3.701099,-3.066356,9.060804,6.592863,4.167985,9.367011,-0.215526,-4.393032,-3.945990,6.952650,-9.222273,-5.554258,7.431294,8.394290,-8.004908,6.697580,9.459537,8.237635,9.310095,-7.329248,-8.655231,-3.624267,-7.843496,8.163898,-0.545960,4.832775,-4.531173,-1.180371,8.634510,2.477003,0.186703,-6.396256,-7.192035,9.154973,0.752960,-6.713483,4.853519,-3.562995,0.997949,-7.921334,4.631255,-0.989169,0.373022,2.761774,3.113892,9.328969,3.658649,6.008547,0.172620,9.942218,-6.813050,1.161721,8.265519,-1.191556,8.496660,-5.146674,-6.727063,-8.406039,7.574274,-7.280118,-5.755929,0.593839,-1.429808,-1.037484,6.421615,-5.976030,2.474379,0.226088,3.390684,-3.526358,0.235228,7.781156,9.053450,7.432348,-5.684445,7.836696,6.128361,-8.998151,-3.460628,-8.189187,4.058569,6.247603,-8.325269,2.010165,-1.404914,-3.722441,-2.815957],[7.123126,-3.790373,-2.333810,3.060363,3.340906,1.535610,-4.287325,-7.342761,8.128369,7.016993,7.382366,-8.061486,3.683048,-4.719721,-1.878167,-8.914512,-3.049072,-0.444682,3.334377,7.292314,0.067496,-3.042278,-9.733173,-5.297079,-0.634090,-6.475192,1.190303,-3.859903,-6.846469,-1.092019,2.946591,-3.119839,2.798563,2.290046,-5.385481,-7.764067,6.426455,2.830245,6.369433,6.762937,2.909821,0.666846,-5.591866,-1.376028,-7.670886,6.153559,0.994120,-2.107031,0.003520,6.896020,-7.881786,5.211799,-6.506724,1.322244,-4.617770,-7.360407,-3.198681,-7.241739,8.748807,1.055650,4.810176,-9.508066,2.641677,-3.851002,-0.536452,-9.980908,4.515381,-1.365690,2.509771,8.278462,-2.870453,3.459233,-7.192786,-7.357074,-5.412885,0.170268,-5.867088,-1.488469,-3.801447,-5.460411,-9.508993,7.985667,-0.132453,-6.034938,9.623995,8.291918,3.042792,2.919156,-6.346619,7.418398,3.170441,7.744438,-9.410728,6.768330,-8.355731,3.359087,1.998977,-8.068187,-9.972455,2.892731,-3.901995,-4.351874,1.243473,5.058826,6.387635,7.647062,-2.080313,-0.013962,-8.277655,1.309149,-2.081068,-6.910049,-0.527247,3.825513,9.939809,-9.605541,-2.509294,8.461251,-0.710967,7.651754,9.308912,1.520271,9.711836,3.141616,6.066270,-8.051108,0.379538,4.737510,6.230286,3.796709,9.311260,3.786782,-9.180313,-8.361036,3.502895,-6.233823,-1.633818,-0.607488,1.546785,0.095820,4.419194,-6.141449,-7.579827,-6.089389,1.612298,-8.991162,8.026058,-7.743070,-8.951057,5.917676,-1.992915,2.171080,2.451657,3.216095,4.964701,9.108585,-0.890286,3.535796,-2.206176,2.645201,6.333627,-0.036074,0.168756,-8.974174,9.674602,2.092090,7.098728,-7.646120,9.358496,-7.067977,5.018605,1.778089,6.988489,-6.553260,-7.411348,4.188419,-5.118475,-3.905643,-5.419825,0.490821,-6.382346,-2.116389,7.693702,-7.284003,-5.928774,6.198512,2.615103,5.307181,-2.781199,-7.580258,0.167139,-4.941561,0.980915,6.106268,-0.621644,-6.071513,-1.931344,-8.100184,9.121301,-7.972885,1.090679,2.413275,-4.730552,-4.065873,5.143253,2.423436,-6.761976,-5.591390,-1.711923,-9.818951,-5.332906,-9.124921,4.354408,4.230032,7.282830,-8.864804,8.917480,7.123356,-5.913135,-2.635385,-5.921913,5.895440,-3.952676,3.456910,3.526208,0.168619,-5.634191,-9.970280,-6.193634,-7.254420,2.521785,8.783497,9.394865,-8.889403,-0.781788,3.623418,-0.371300,9.473060,-6.151745,-5.209306,-7.628514,7.974013,8.960725,-1.372933,7.020603,4.431475,3.822569,-7.199594,-2.792726,6.725367,7.184896,3.418445,6.664648,-1.681686,3.313033,0.052547,-3.464302,-7.367147,3.102486,-7.397626,-7.939826,7.412864,-2.358018,-2.528293,2.363054,4.280481,-8.671635,-7.352655,0.502107,1.893500,9.776425,8.997412,8.748545,1.072540,-0.388265,-8.205228,-9.989861,5.968130,5.431284,7.251948,8.883084,3.360637,9.354387,7.863865,4.025900,-7.127404,3.426245,-6.302323,7.538508,5.510311,3.981124,-9.003172,-9.957828,-4.259171,5.994437,-9.405116,-0.645460,-0.799459,3.602074,7.934813,-9.064884,-0.956932,5.802442,3.623470,-0.364874,-3.097086,-1.839628,9.728841,-2.220929,-3.936351,1.699490,-8.726030,-9.687652,-5.998895,-3.258985,-4.816200,7.939662,2.094449,-5.211607,9.181350,9.897022,-1.106574,6.420158,-6.595706,-6.190352,3.019147,9.702251,2.967136,3.284455,-8.275613,2.587845,-2.328637,1.003775,8.607690,-7.656336,-0.694757,7.236602,5.563816,4.429537,-5.797838,-9.252638,2.481217,-1.238318,-7.406449,-4.873620,1.310954,9.644697,-8.045400,9.739110,-3.479165,7.424494,-3.217340,-9.892002,1.525653,9.217057,5.669704,6.514822,-4.362083,5.096278,1.092189,8.105506,-5.968875,1.825751,4.331321,-5.938023,-3.335713,-8.972551,-1.762089,5.881946,-7.644057,-2.696589,-3.378255,1.470342,0.555277,6.944994,-1.269450,5.771528,-6.792667,-4.180507,-8.185020,0.969526,-6.455774,5.950193,-1.586933,-3.329560,7.258845,-7.900912,-1.291207,-7.555747,2.147454,9.478902,-5.865614,-0.204819,1.697250,-9.426835,5.927190,-5.612047,-5.755900,6.403964,-0.847190,4.545842,-0.016214,-3.265116,5.378646,-1.938887,-1.124530,5.173911,-3.301597,3.906088,-0.923375,3.503089,-0.025404,9.848841,4.259294,0.019709,-5.841101,-0.301771,9.229379,4.965523,4.387375,2.432538,0.737602,3.656918,-9.654176,6.125624,-0.416299,-7.056424,7.564040,8.637951,-8.882343,-6.795099,-8.760623,8.365365,9.759305,-8.156400,-7.233794,8.562519,-4.605107,-0.825862,6.506011,3.214534,-7.743985,-6.580883,3.892910,1.593766,2.918010,-6.098620,-7.088888,7.693669,5.750750,-7.703649,8.206104,8.050044,-9.322704,-1.897878,-8.625700,-1.727884,9.502264,-2.725715,-7.117797,8.973610,6.981762,8.007874,9.797565,-8.827433,4.596982,7.679407,-5.532019,-0.132744,-6.541900,-8.534369,9.134541,9.864428,-2.944438,0.891909,5.193874,-1.328808,6.359694,-1.263212,-2.854149,0.830286,-6.789764,-2.487020,0.896070,9.632188,6.258063,-5.305410,-5.673367,1.017104,8.012277,-9.807136,6.361632,-0.837252,-0.462934,-3.188730,4.021990,-9.053549,-2.496715,-3.809171,-8.983071,5.880036,7.752182,-1.224363,2.753932],[-3.368533,-0.917798,-5.216823,5.745214,-5.251402,9.887592,-7.217370,-9.226712,-1.220085,5.685184,7.615600,4.321642,9.627801,-7.303015,-6.347642,-9.292569,7.761959,9.402721,-3.026902,-9.578923,9.241256,6.060945,-1.135664,-1.206605,-6.933918,4.862285,6.524056,-8.689498,2.397080,-0.511973,5.155749,0.288070,-1.569286,-6.139645,1.100351,2.970362,-9.747258,0.208636,0.939088,-3.275065,0.832687,6.784299,-9.766031,-3.122639,-7.293422,3.174799,7.282684,-1.381507,-8.524887,-0.569748,7.396194,-6.801229,6.250117,-7.668029,1.457586,-1.224806,-4.786854,-6.407632,-7.215996,1.226345,6.291605,-1.273560,9.828550,-0.258264,9.495683,5.258411,0.925391,-7.781371,2.517924,7.498866,3.240470,-7.359084,5.257926,-7.962225,7.012877,-0.981782,5.045168,3.417240,-2.088589,-7.096581,-1.146075,-9.186047,2.257027,-8.067673,-2.877505,0.231035,-4.515726,7.511542,-3.923409,4.198285,9.726650,8.404959,-7.831395,0.656003,-2.822840,-5.756137,-1.661738,-2.186178,4.466903,-7.657200,-6.197587,-5.918780,4.980112,-3.893570,4.489459,5.211896,-7.839501,8.309075,4.113392,7.537441,-2.063772,1.863730,-3.823221,-4.170161,-7.411944,8.457337,2.851063,6.134601,-9.922190,-5.151114,7.592842,-2.542962,-0.327906,-6.070136,0.316490,-6.907411,7.745809,-0.229099,0.848770,-1.448725,0.651486,0.873419,8.900777,-2.047307,-6.026090,6.107220,-2.308797,2.737232,-8.492225,6.250250,3.334418,3.938967,6.353707,7.985940,9.428125,-2.904940,1.050193,2.358872,7.857689,-6.390102,-4.900109,9.518501,-0.925715,-8.655317,1.192975,-4.399467,8.430663,1.212915,2.390946,6.391018,-3.828699,0.416288,8.894614,-5.240734,-5.827651,3.741823,0.371060,-0.967610,6.468126,-9.115559,-5.656979,-2.161176,-8.226130,-3.574422,-0.471813,-1.265428,9.781868,-4.930607,-6.189148,9.888679,-0.993349,-9.571256,-1.598193,3.441117,5.343038,-4.401204,-5.653536,5.409350,-0.992879,-3.807079,2.854933,-8.367381,-7.455790,-5.245422,5.914321,-8.811853,-2.620102,7.092070,4.346223,-0.986917,-6.028411,-6.758992,5.557310,-9.884466,9.625234,-5.194824,6.636274,8.443558,-7.018514,6.629891,-1.350750,3.968651,-2.694183,5.385802,7.788259,-1.362177,-5.866507,-0.875879,-9.986459,4.465596,5.856092,-1.659743,-5.731103,-6.583736,7.326828,9.242044,5.033352,-6.110051,1.861916,9.353834,-2.605827,0.330579,-2.876654,-7.858345,-6.838741,-7.139824,-2.051960,-4.154471,6.587638,1.376511,-9.250831,-5.753966,8.272736,5.743641,-2.871823,1.837453,-4.039289,2.448404,-7.429820,8.136321,4.836265,-3.582463,7.129791,0.697946,0.418547,7.576565,8.016467,-8.832179,4.642541,1.414988,-8.551919,-6.922571,2.530305,-7.114956,7.532518,-8.623336,4.556898,-7.516077,-2.902046,7.504509,-3.731097,0.126969,-4.142834,-2.274796,-5.340065,7.472492,-5.803424,2.072362,9.445106,5.078993,-2.933108,-1.635625,-3.353190,-3.965967,-9.130731,9.223584,-8.211557,-1.141027,-4.783565,-5.490832,-1.646227,3.521395,4.394172,6.383871,-7.583975,-6.677660,-1.692962,3.477924,4.811622,3.685346,0.480946,7.807566,-9.554480,6.240199,-2.045223,0.456720,2.994373,-4.818438,0.946892,-0.058957,-3.520427,-8.248845,5.013455,-3.342719,1.390599,-8.970782,-3.366150,8.898258,7.180242,7.918769,-4.022492,-4.702735,0.931115,2.658669,-4.201115,5.276034,-9.679235,-4.609010,9.989811,-1.112408,-6.793508,4.432662,-7.852105,8.698501,6.105216,-8.792180,3.135333,-9.506660,3.151636,-8.602682,6.511998,-5.369578,1.363356,7.152534,5.280133,-3.652523,-4.685278,-8.226883,-1.201449,-1.239530,-1.094935,1.429230,3.306244,8.152208,1.892852,4.309076,3.713055,-8.747645,-4.732259,2.766503,-8.196766,1.314989,0.958317,7.529384,-5.249808,-3.614122,-2.273721,-1.877244,2.464530,-9.082151,8.463291,7.387962,-7.329371,-1.967545,1.698942,-3.738439,7.191661,-6.666308,-7.678063,-7.008302,5.721764,6.337219,-9.716411,8.642990,4.539866,8.004563,4.157628,3.073822,-6.278323,-2.908857,3.605453,5.000961,5.649551,-0.118169,-6.069825,-6.929878,5.411409,3.741432,7.965873,3.938760,2.792135,-6.603433,7.578042,-3.295917,9.922489,7.622060,9.976776,8.022697,-5.421088,-5.802201,-7.711747,-6.392457,9.538386,2.805580,-2.969274,2.848005,0.202750,9.238040,-0.695879,2.218310,-7.417385,-1.113989,6.172884,-9.319046,4.253002,-1.024432,8.879416,5.385817,9.618243,-2.463950,2.867273,6.095912,6.447326,6.771638,-6.861291,7.931972,8.994183,-5.355454,7.757392,-1.176747,-6.423129,-0.034213,6.163010,-3.220638,-2.581935,5.691551,-1.799913,3.625258,4.459613,1.868283,3.894305,-7.568499,6.750432,0.152352,-0.037133,5.428482,1.395665,-1.700424,-3.792107,6.729857,5.914433,-2.365667,6.730013,2.451645,8.597233,-3.114556,5.351053,2.453240,3.336488,5.793764,7.838340,-2.713912,-4.071749,9.130703,2.266708,-0.971261,3.448756,7.422572,-7.572625,7.590417,6.329453,-4.461467,0.519564,4.672932,-4.161406,-4.715412,-7.212805,-5.770458,9.636944,3.973454,-7.546246,-4.123458,-0.492342,-5.764312,-2.148537,-2.040489,8.166605,6.243728,6.741232,-0.572842,5.252823,9.852579,3.836902,9.788870],[5.860642,-7.567009,-3.633842,-2.236177,-9.832156,4.557344,-3.336408,-6.549597,-2.570417,-9.672150,3.941947,6.713119,6.276457,-7.637134,6.650810,-5.420215,-3.442955,-4.566950,4.385957,1.955668,-0.898901,-0.429622,0.219318,-5.890556,-2.493398,8.981161,7.104930,7.550242,3.406941,-3.918221,9.198893,9.275456,8.945078,-9.932807,-3.846090,-4.280981,-8.406142,-3.316008,1.294415,5.440590,3.910916,4.784784,6.880022,-6.915550,-8.176514,5.967944,2.155584,5.711412,7.582477,6.755846,-2.047728,-8.475738,-8.700663,-3.078759,2.294673,-6.364995,-0.484838,-5.394366,-1.377386,-4.068561,3.964595,-7.867507,-0.022062,2.416205,8.812710,-5.393717,-4.926550,-2.018616,0.672254,-4.576888,-5.439951,4.230785,0.769975,-4.466196,-7.674419,-2.939351,7.143093,-6.964012,6.654806,2.169952,-2.296902,-6.872683,-7.348957,-0.068659,0.594667,-8.361729,8.247948,-3.218002,3.798731,-2.773394,4.646988,2.961342,4.157842,-8.430523,0.189334,7.782772,4.087819,-1.811412,-5.812473,7.735578,-5.768325,1.344613,-2.570215,-1.766422,-9.101794,5.846901,3.584135,-5.289863,6.296404,4.573642,-0.436265,-2.877767,-7.532489,5.410808,8.535726,-4.511381,6.400982,8.392957,1.486096,1.616030,-1.028528,4.984233,-7.926415,-0.769543,1.999117,-9.350175,-2.036179,2.694700,-3.297581,6.996009,-0.596304,0.090955,6.602966,5.847503,-2.030281,0.279900,2.029827,-7.784983,-2.911070,3.535896,4.373753,-1.007025,2.258285,-3.426600,-2.097718,5.747398,-3.931914,-6.041267,-9.389390,-9.874599,9.110379,5.990745,3.548113,-8.701683,2.672338,0.617400,4.015148,-1.636132,4.913472,-1.509288,4.565166,-2.363326,-0.793567,4.077837,-4.348662,5.792285,3.882307,6.440254,8.958408,0.965107,2.451168,8.031961,-9.261267,6.690783,-2.199881,2.068692,-4.860049,1.637946,5.649760,7.477358,7.503799,2.846786,6.277962,9.291869,-2.388019,3.421130,7.144571,-4.912845,5.232945,3.680703,-9.839905,7.809082,5.944790,6.591317,6.489647,-4.921008,-1.455622,-5.540547,-6.741967,-7.364255,-9.053272,6.317768,-7.560269,1.942682,3.132918,8.661034,9.057639,-4.216455,-8.677864,5.959957,-6.663728,-2.910555,4.935456,8.562239,-0.133815,-2.140117,9.004838,-4.222220,-6.220591,2.070643,-5.814966,7.883514,0.436268,-6.827633,4.381966,-9.785645,-4.855399,-5.292025,8.356903,6.158995,1.619970,-2.137590,4.730999,-0.107457,-2.535739,-9.098621,5.121332,-0.614185,0.091610,-7.316950,0.780319,4.304016,4.044385,1.417520,3.360417,-9.504681,5.624017,5.945535,2.965567,-1.134896,-8.371620,-6.634203,-9.002352,-4.623960,-5.322118,-5.803121,2.351383,3.010612,-5.565086,1.488200,4.032361,-5.522353,-5.482746,-5.969069,-6.454908,7.118717,5.367653,-7.843494,8.556135,4.188075,9.693838,6.897920,1.974120,5.015396,4.499312,0.952316,-1.389937,7.797123,-8.761375,-1.462112,-4.415510,0.543300,1.823407,0.748945,-7.712110,-1.132363,3.272375,4.938414,-3.766185,-7.820191,9.898365,9.288652,7.236427,7.798888,-0.067355,-2.592807,4.907563,-7.216438,7.859583,6.109921,-6.216714,8.129573,1.999028,8.378454,0.447975,-2.086514,3.020914,-8.158281,-9.388166,-7.542460,3.697597,-6.841687,-8.212795,-5.463081,-5.250762,-7.569370,0.960003,-8.895887,-4.951373,9.145807,1.164331,-9.950390,1.066162,-4.829356,-7.536684,-6.419971,6.763796,5.367357,0.530212,-1.213527,1.125025,-0.540284,-5.907074,-9.120320,-0.158410,4.483990,6.465985,9.745277,-4.961276,-2.551491,-0.670441,1.714113,5.348999,-3.202308,-6.694756,6.280794,8.515811,-6.448009,-5.585735,-5.660276,-4.006745,1.318002,5.877211,-4.233433,-1.358859,8.192120,6.380162,-8.084029,8.528648,7.187737,4.065609,1.441594,2.587403,3.633735,-8.591877,-7.197673,0.800566,-4.855198,-7.047009,-4.607464,-9.108046,-2.987721,-8.618381,-2.559775,6.804859,0.714082,-1.378779,4.562130,0.048864,-6.618322,-8.761226,-1.222884,-8.458233,-0.647168,-0.342834,3.604009,-0.581518,-7.738169,-3.882690,-2.087250,4.566069,2.699436,4.876932,2.232258,4.451837,-0.872751,-0.722937,5.973954,-9.022464,-6.145562,-3.817785,9.445012,3.135439,-4.676708,-6.980531,3.307508,-1.969243,-8.243071,2.153684,-3.821140,9.492184,-8.062229,-0.992431,-0.237563,0.648848,6.652988,-5.838525,3.178568,-2.258223,0.898591,-6.520489,-2.557701,3.728194,-0.861307,-9.756333,4.251968,-0.278148,-9.714082,2.984852,2.231671,4.431894,8.676775,4.933192,5.034231,-2.902914,-9.335759,3.630805,7.822853,5.662554,1.439144,2.314964,2.483096,-2.309686,-2.672357,-5.531749,-0.475547,-1.283801,2.735700,-9.791873,9.633009,-2.674171,-1.989755,4.116376,-1.731744,8.795830,-3.088061,1.204886,-9.922815,2.071553,7.160021,-6.366051,7.011284,1.732396,-3.868910,4.885997,-4.080090,-0.310016,1.392609,8.950014,-5.924520,3.645573,8.193553,0.468150,-6.236939,-6.782416,-8.835384,-5.147537,1.643011,1.974597,8.437520,1.805554,-7.660962,-4.578182,7.438904,8.480335,4.807804,4.085618,0.429958,-8.856020,4.206364,-6.977329,-8.115501,-4.671378,-4.450567,0.725687,-2.946177,-7.834199,-9.184166,4.284980,-6.247753,-9.187492,2.345140,-2.668121,-6.661089],[9.355452,0.633710,4.126090,-2.182764,6.170396,8.591474,-5.723966,3.078866,-9.117439,-6.045312,-4.670447,5.532740,-1.499529,-4.513482,6.716136,4.622320,-4.805050,-9.665591,-9.192462,5.493801,-0.121743,1.495485,1.102910,8.599001,-6.201282,3.270393,-1.057061,5.841888,6.843872,5.254956,-1.462637,9.944074,2.259504,5.308646,-6.737959,9.964896,5.695345,-2.122939,1.756927,2.392995,4.394867,-1.014480,2.495597,-1.147779,6.989155,1.048441,-4.571993,5.780680,3.694646,-3.053844,4.681670,-7.110799,-4.438659,4.199590,-6.277906,8.691556,6.438671,9.239214,-8.693884,-4.583447,6.317208,6.124382,-7.808218,9.756906,6.529579,-4.849699,9.218466,-9.177978,4.075436,9.228943,-9.997508,3.608467,0.308614,-7.467694,-3.228451,5.799871,-7.168695,0.459347,2.579043,-6.829966,-7.771083,-9.360946,6.704921,4.729491,-1.753247,-6.335751,-1.347701,0.031145,-7.758478,4.598495,-2.403555,-0.227327,6.572518,7.156171,-9.717443,-3.350485,-0.421954,-9.680068,4.573088,-1.547159,3.017983,-9.972120,-0.230338,8.785052,9.560197,3.120428,8.744650,-1.648417,-3.988210,-1.894238,-9.655177,2.526897,4.891334,-9.385680,-7.535861,-9.104962,-0.395185,1.752722,-1.744814,4.819652,2.010245,3.556106,7.919542,8.597986,-1.163773,-0.416997,-9.356798,1.600587,-6.038765,-8.153436,0.128802,-7.419674,1.436812,-9.898455,-9.328533,0.626461,7.781347,-7.757146,2.881555,-5.095293,4.290175,-0.294500,-1.835157,2.910436,8.940181,4.264023,1.966848,-1.357654,7.543969,-1.991898,3.651485,2.274204,3.075667,0.005616,-0.914005,-9.499655,-5.897409,0.688644,-8.425192,0.602802,0.651306,-1.737875,-0.477740,4.226222,-5.582362,4.606191,-3.658549,-7.760165,6.966756,-7.506219,0.807530,1.753613,5.306805,-7.695649,-2.946964,6.181844,3.274510,-9.992521,7.695613,0.605803,6.386245,2.355802,-9.979910,2.043076,5.282377,1.685364,-5.132646,-6.359369,0.447823,-6.902317,1.501292,2.036347,8.418279,-9.801952,-5.311870,-9.922083,7.341956,4.604064,5.580839,1.263438,-2.021346,9.665160,7.002573,-5.195072,2.956191,-0.423580,-3.342193,1.682681,4.168388,-9.343607,9.458544,-5.200351,-4.499451,-3.051645,-9.835667,-4.797194,-2.625491,-6.138189,-3.422592,5.894134,8.016613,-3.281387,9.975744,5.889270,6.614925,-8.007495,7.611803,0.364486,-8.706544,7.777413,7.057113,2.710178,-5.221192,-6.828791,-5.416722,-5.422718,8.384589,-5.722727,-4.127540,-8.619696,6.487901,-3.868545,8.235069,5.338748,-8.269528,-1.326706,-7.738616,6.903462,8.609457,3.869788,5.888948,1.171271,-0.912521,-9.919180,-1.666827,5.839908,0.832882,-2.777880,9.178833,8.706235,-4.160134,-3.233097,9.654404,1.534109,2.915722,0.799331,-4.408714,1.616057,-0.722637,3.598010,-4.271586,-6.954125,3.649540,-0.161743,-3.596882,-9.503060,-2.183181,-4.490289,-2.903174,-4.127061,-7.058207,5.901617,9.714055,-7.931929,-7.949283,-8.626252,-6.418416,-0.529630,2.709208,-8.922508,-0.432682,-6.459438,2.124278,4.633518,6.500586,8.720383,2.811847,-0.897389,-2.563289,-2.754621,4.977598,8.013887,8.052385,5.455677,0.004630,1.342583,-3.997510,-8.368651,-6.347989,4.588879,6.754956,1.598698,5.604128,2.201476,-8.435989,-5.507072,-6.756178,8.162799,-5.594504,-0.811828,8.353703,6.769505,-9.738113,8.360346,4.531902,-5.184313,-3.812537,9.813323,8.868711,7.414106,-8.262889,2.640887,7.882245,2.150207,4.384009,5.861433,2.259528,-4.592127,-9.267089,-3.790038,9.579331,7.754342,-6.392209,6.466395,0.182440,-2.444005,5.259883,3.545792,-1.311646,-0.401106,-0.556111,-9.547305,-6.800901,4.858262,2.466277,9.686327,-4.840206,-8.315957,9.784151,2.546594,-9.678676,1.450403,3.827495,-3.851199,9.444695,-4.324860,5.709250,2.223176,4.500410,-8.992714,-9.717311,0.564032,-9.987566,9.999936,-3.276919,0.723218,-9.180380,-4.378183,0.957592,-7.095958,8.127731,-9.254179,9.302791,-7.385080,8.539353,3.186380,-8.460015,-7.837479,-9.203691,0.234904,-9.014281,4.248133,9.383338,3.519634,8.679557,9.495142,-3.890522,0.409275,4.046075,-6.282405,-9.859756,-9.843138,0.576815,-5.261251,-9.199660,-8.021789,-0.961231,-2.238337,1.908086,-7.565204,6.812115,7.369453,2.913966,8.681498,-0.225821,4.914743,-0.268848,-7.454332,8.811601,0.634402,-5.044816,-2.395952,-9.793156,-7.592472,-4.251893,-6.386592,-9.125742,7.471849,-9.503442,-9.076866,7.590650,1.931708,5.808086,9.452309,-9.527079,-0.310028,-2.655499,0.185740,4.803597,-9.228654,-5.958963,9.867345,-9.439181,6.976617,-1.342038,3.279945,3.970192,6.647472,-2.573887,4.393880,4.996332,9.619083,5.064095,-1.782831,-1.207224,-0.526335,9.231023,5.897042,3.846520,-1.207024,-5.063782,0.770093,5.802754,-4.930766,5.250053,-0.842759,-2.946759,-1.411741,7.791490,-1.393339,3.470731,-6.705442,0.278593,-0.758720,-9.979016,-6.742599,-9.351755,6.341898,-8.465390,-2.581569,8.146418,-9.661274,-8.571474,1.715203,-2.855038,-4.574607,0.098449,-2.417193,-9.160634,8.807115,-6.213110,-2.193090,2.524995,-2.765880,2.050936,8.369049,4.655682,-0.858926,-2.300667,3.667893,-8.656446,-0.845656,8.302875,-5.259500],[2.685644,-4.089481,5.452028,-4.363752,-3.792313,-3.320237,4.310826,7.409120,2.414624,6.219421,2.830332,-2.030439,-5.278070,6.521386,-0.940113,1.790181,1.634800,6.957866,-9.832747,7.441952,-8.375128,7.525644,8.873274,-0.758369,-1.744322,-9.839528,6.920158,1.859539,2.839268,7.065790,-6.670417,4.651982,-4.946719,-1.336039,0.081425,-7.531956,1.485248,7.512770,-1.626441,-6.855315,6.048891,-1.090386,8.747252,-3.598612,1.335341,-0.715099,4.157211,3.373413,-5.573649,-8.822024,-8.403184,2.279441,-8.879325,-1.985766,2.848545,-5.211645,-5.465234,0.191007,-7.309723,-1.967460,0.953171,-1.013071,5.891338,-7.784690,9.493076,1.178341,5.244456,-8.646314,2.530023,-2.442042,6.190333,-5.366077,-4.300455,4.845067,2.222662,-8.461857,1.117999,9.697263,-6.667320,-5.453522,3.860175,4.990578,6.035465,-1.736847,4.806602,6.976112,8.511672,-4.850113,7.138206,2.268091,6.864701,1.528396,-6.739752,8.150784,-5.999577,-6.960451,1.872559,2.007614,8.207586,-7.558421,-7.098677,4.300387,9.029669,6.412439,-6.871926,3.364957,-7.412756,-7.019120,-4.381603,-8.062082,8.066245,-0.911830,-9.528868,1.595061,0.979518,-6.794931,6.057551,-0.888250,2.046843,4.888924,-2.604235,-8.076363,4.691380,7.374226,-2.264722,0.511367,-8.092664,1.966346,3.164478,8.751976,-0.099471,-5.977410,8.810810,-5.064730,4.419327,-9.171421,-3.086824,-9.950123,5.086627,0.186505,1.023453,-5.628313,-5.309096,4.965092,-3.398119,6.332766,-2.960845,1.437241,-2.222201,5.858375,1.596791,6.243668,-5.242352,-8.833800,4.662591,5.397649,-4.786651,-8.290823,5.876530,-3.015039,-4.545528,-7.988546,1.947748,7.406553,9.398636,2.647967,-6.842857,1.564951,5.904218,2.195948,9.571175,4.370568,-3.004732,3.118061,2.142478,2.867783,6.557787,4.038916,0.426982,-5.778633,7.729989,-7.409649,-6.338224,-3.880284,9.352207,-5.841315,-3.423713,-7.959246,9.844089,0.964628,9.614780,4.935207,-6.585910,8.047795,9.246995,2.368915,-1.814380,-9.170720,7.711558,-9.177977,-3.946810,3.705057,-7.559723,8.666309,3.929545,2.876280,-8.080117,4.512547,8.188788,-8.300907,-5.610536,9.628672,3.264948,9.948294,-5.880983,1.393061,-3.982621,8.488027,-1.182964,7.576797,2.935790,-0.348873,2.539504,6.253356,9.263910,5.822570,4.748826,-8.787220,-5.245339,5.923550,8.512504,-4.228612,0.769533,-3.145419,-9.430186,-5.340782,-3.432759,1.474923,-4.892727,-2.587800,0.359952,-1.337157,-7.692348,4.843059,-1.104974,6.273588,-7.145846,-0.348776,-9.811722,1.575885,-9.727001,-2.984308,3.047282,-3.713369,-4.675528,1.241525,-7.819355,-3.442448,-3.361920,3.181420,-3.078348,-8.958338,-0.458643,6.197511,2.817417,-6.810120,-1.314104,1.677517,-7.683471,3.349313,-1.609656,-9.314291,-4.163905,-3.621752,4.502617,-9.477590,-4.985517,-7.518871,9.485258,0.070572,-9.120967,-4.728976,4.808620,-5.269959,5.089723,-3.268915,-1.374318,-3.256824,-3.170981,4.220071,-9.111486,4.214089,-8.874628,-3.891301,5.386388,0.741619,8.393036,-4.270564,4.829238,-4.307117,6.302502,-2.298973,-7.567939,-8.986704,6.708210,-3.896197,1.108047,4.655560,7.850257,5.837020,8.065089,-6.543303,-2.687865,8.179837,-7.826844,-1.708101,4.952577,7.183704,6.424291,-8.698625,-6.965759,7.231446,-4.108076,0.839602,-6.751269,2.663525,7.249623,-2.427339,-1.322628,3.480430,6.860465,-8.861929,4.471653,-5.144542,-7.059120,3.781301,0.642213,-9.820642,6.704036,7.229494,4.988903,-9.778876,2.696248,-5.178417,-5.369371,-6.980072,-5.130634,-7.113666,-6.361438,-9.349942,5.340820,7.394444,-8.688782,4.683627,-1.721474,9.646062,0.644165,-9.455881,-4.177610,-0.850945,2.311608,0.390959,-3.776619,4.704090,-7.892548,6.547591,7.558430,1.664869,-8.184530,-9.622007,4.820446,-0.330860,2.438260,2.270851,-5.904347,-6.296321,-4.378385,3.023252,-1.098851,-0.997416,-2.759993,-3.309255,-0.084509,-5.518421,-9.349538,1.418684,-1.937376,-0.939245,3.574515,-4.867349,-0.864792,0.635136,-0.796299,2.385023,9.119928,6.284076,5.216202,4.264389,3.596021,-4.330420,-7.338386,-5.989340,-5.638226,-8.278215,-1.610393,3.983532,-3.893230,-3.891390,1.953916,1.789030,5.196191,-5.882168,-3.853686,-7.181015,2.299992,-6.858510,6.994538,6.442095,5.742360,9.209903,-1.841725,-2.391617,3.166515,9.563075,-5.813947,2.576498,0.704701,-2.482311,6.099858,-5.465823,-1.871207,7.740527,1.719902,5.313491,-9.345535,-6.913898,0.900816,8.555561,3.497769,9.927598,4.667641,8.058162,-2.640298,1.868198,2.826033,5.652492,-4.323109,3.008737,9.990816,-5.680989,4.257030,-8.932217,-4.705126,7.945444,-1.423275,3.380099,5.239512,-1.165454,3.959067,3.812913,8.985582,-0.300874,3.993453,5.433398,-3.238148,4.324398,9.849891,-8.242657,2.282885,3.601670,-4.967421,-7.657016,-7.797831,7.173543,-1.100188,-7.998127,4.217566,3.070521,-1.049047,3.176459,-4.284217,-5.262561,-5.448340,1.839869,-9.428772,4.064706,-4.039954,-7.251051,5.383972,-8.842646,-2.783119,8.197886,7.101098,9.066538,-5.922759,-9.201271,3.219723,-0.613825,0.799253,2.061674,-3.824052,-2.479986,-5.104821,3.835143],[-0.519428,5.138097,-8.277026,4.962545,6.990521,8.011730,9.454385,7.593118,-3.899340,2.290835,9.715389,9.868117,2.633304,-0.916920,-5.703517,0.098829,9.196454,-5.421454,-4.883630,0.849438,-3.248722,1.247676,-3.118865,-2.272974,-6.206682,-3.834641,-3.460223,4.235473,6.787471,-4.375740,-4.268724,7.178923,-5.155819,8.505314,7.556926,2.832193,-2.808164,4.984994,7.256815,0.309208,4.143493,2.368723,-6.487689,-0.336498,8.472743,5.088637,-3.829041,4.466416,-8.131286,7.294984,-7.902711,0.410373,3.492881,1.018351,-7.576559,-2.333612,7.165239,-9.077772,9.451006,8.472298,5.749699,-9.973800,8.569274,-8.143197,-9.450023,2.180143,-8.698695,5.302566,-1.064643,-6.927343,-6.751884,-1.868754,1.887816,3.585777,1.274494,7.763367,6.317819,6.203392,6.281427,4.335199,3.246652,-3.537691,1.808895,-4.762774,8.080238,4.269502,1.656850,6.727099,-2.231882,7.424434,0.741174,-3.502472,-7.274141,-3.383896,1.024945,-5.204281,-7.533757,1.744305,-7.921509,2.103137,-2.818302,0.018636,4.406625,-4.569633,6.031766,2.688670,-1.601813,-6.058454,5.502872,3.917027,-8.961274,-3.411957,-3.439300,-4.046288,3.916667,-9.996960,-4.773748,8.487669,-4.053889,0.685593,-1.306620,0.464323,-6.660220,9.145396,-9.136354,0.705113,-5.438559,3.245605,0.620432,-1.805509,-3.274443,-2.297273,-0.951773,-9.246307,-2.838269,2.542158,-7.408605,0.022017,-9.138705,4.118904,1.174550,0.197542,-2.285437,8.154013,-2.733053,-6.494630,-9.116727,-1.972487,-7.798614,-8.256605,-0.560102,2.390062,-1.691094,-1.129905,-0.739478,4.878766,-1.539516,3.810117,5.804607,-5.747427,-1.259400,-8.908968,1.726385,-3.290164,6.317685,-3.552743,-5.357367,8.196338,1.582855,1.628879,6.586484,6.645735,0.642743,-1.954496,6.507265,-8.124246,2.544428,3.081364,4.755977,-3.706935,-6.890261,1.624655,0.777229,4.178840,-4.153236,-1.684143,4.451153,5.311388,-7.158768,9.097122,-7.128046,-1.245827,2.864217,-2.639210,0.743426,0.975666,-3.196187,-5.865104,6.883335,-2.660818,-2.342809,3.299777,-8.016607,-3.516975,-4.655429,3.240004,3.733010,-5.729347,3.753741,-6.872304,-2.911198,-4.966556,-6.068459,-9.499034,-8.544183,3.070465,2.477602,-8.969109,0.001404,-5.549099,-6.684978,-3.320715,5.847896,-6.612376,9.534485,4.963305,1.551664,-7.706563,-9.229921,7.340666,2.283398,4.378614,-9.885507,5.399136,-5.506685,9.021406,7.712965,9.761255,8.981217,2.848310,-2.808399,-0.974064,-5.129518,3.093082,8.810262,8.060822,0.623871,4.700738,-6.951897,4.005203,-1.180363,7.869554,-4.525668,9.444982,9.364950,-3.435754,8.818077,4.003341,-7.502961,5.872425,3.697219,-1.983383,7.171557,-5.195483,-7.949442,1.704771,3.561588,-2.162087,3.787981,2.688017,-0.395288,-2.594036,-9.669145,8.908765,-2.451473,-9.883770,5.173348,-6.156600,-7.343448,-9.169609,-1.140886,0.936163,4.012906,0.931793,9.162955,8.976105,-5.250904,-1.660379,0.297547,6.101864,-6.981181,6.841139,9.811156,-1.170113,9.103837,-0.727140,-2.914355,1.428411,-6.026253,-3.213553,6.536322,2.808714,1.924827,-3.558687,-2.121188,-8.225501,2.655672,-8.965426,8.245588,-3.251897,-4.429522,-7.912134,-7.589067,-1.492286,-4.008361,2.734159,-0.965185,-5.659953,-9.359084,-9.278428,-9.289532,2.512820,-8.712527,-4.886802,-8.397138,-3.421706,-5.602066,-0.101843,-9.562576,4.712771,1.256976,-7.145046,4.259204,-8.112837,4.214354,-0.620247,3.374821,6.797184,-4.378329,-7.543910,-4.955087,7.729357,9.883524,-8.384103,-6.127401,3.605086,-5.518917,5.629841,-5.227037,1.228610,-6.469621,0.123448,8.219620,3.744939,5.567878,-8.652963,6.687640,-7.381812,9.460556,-0.388767,-8.870102,-0.453280,-5.556619,-0.658881,2.165206,-1.759358,-2.481584,6.204915,1.760635,0.247371,-9.324879,-7.475022,1.787068,4.555413,5.068058,-4.293824,2.306336,-2.237889,-9.792886,-9.859986,-7.050043,2.956294,-0.991682,-0.541313,0.922038,-1.176701,-1.054167,8.865006,7.520450,-0.702838,1.850004,-7.491064,9.741440,-9.500718,-0.001947,9.839617,7.632219,3.384641,-1.171647,5.682172,7.501521,3.965851,4.898588,1.125425,3.147256,8.762065,-3.824567,1.155283,0.979568,2.985829,-0.703620,-2.064607,1.169562,-7.826769,-0.477891,7.793999,7.775737,4.741330,-3.480086,-9.130646,-3.038400,-0.901685,2.102626,3.357776,3.436664,-7.630866,3.509063,3.025510,-0.955885,-5.309724,-4.381648,-9.577598,6.396638,-2.923772,-6.247217,6.653278,-1.582214,6.050380,-9.098564,-1.433100,2.240644,2.062009,-8.973229,1.290682,-2.635936,0.894844,-0.172862,9.920938,6.658106,3.630700,-1.193574,-2.421155,-2.409441,-3.140890,-5.820584,-6.731382,-4.650869,1.662614,-5.916008,2.162026,-1.869100,7.325688,0.225156,-7.258464,-8.492280,-7.837360,9.067060,-6.693308,2.803808,-4.297714,2.790843,1.971431,-2.518858,-3.244909,-8.662851,-6.817655,-2.027211,9.722738,-1.787373,-9.147082,7.074327,2.747875,-8.024822,-3.615426,-0.603002,5.183074,0.829981,5.273548,0.064055,-2.350671,-5.835825,2.983630,7.840425,-6.787589,-6.546860,-0.559213,3.862928,-9.893719,7.781256,4.105534,2.981575,-4.424304,-8.667971,5.014833],[8.799197,4.729097,-3.873843,6.891448,7.489731,0.845590,-6.882000,3.248197,4.552507,8.564947,-7.313863,-6.189056,-5.581233,-7.051829,7.148296,-6.224424,1.667225,-7.068971,-4.852320,6.039147,6.223973,-7.676147,2.209502,7.013476,9.029108,7.244100,-8.235214,-2.404929,-0.525013,2.460634,-0.596516,5.580230,6.846077,4.629287,1.662771,0.175504,4.818869,-4.513955,7.086609,3.834516,3.025569,-8.737860,-3.757353,-3.025190,0.920985,-3.578530,0.132597,3.936140,3.708916,2.953820,-9.211202,7.621393,-3.206311,-7.024936,-2.658964,-6.490516,-4.363162,2.695763,1.587339,-1.488647,5.133136,-9.830805,-5.245551,7.594209,-3.070713,-6.018977,7.538307,-7.320526,0.213293,5.940874,-5.676974,1.327348,-7.745293,-7.916834,-0.901714,-6.032851,4.260500,3.441500,-8.564391,-2.984670,5.743487,7.956863,-3.100027,-3.967663,-3.049432,6.997931,6.036609,-0.907580,9.808486,-6.878301,1.592543,1.992968,2.543592,-3.488631,8.119412,4.358964,7.402574,5.567754,-7.287440,8.770058,7.559626,-9.322079,-3.375216,-3.118729,2.959867,6.992884,3.289890,9.504164,4.754072,2.634366,-4.563970,3.441946,4.770676,-6.045844,-2.464068,6.973915,-7.170701,5.862024,-1.516361,9.812735,-8.205363,-4.050552,6.515606,-1.845173,5.065352,-5.099185,-8.627708,5.105538,-0.518329,-9.318867,0.396662,9.393041,7.327376,-8.270942,-7.133517,2.635057,8.991374,3.798259,7.300405,7.309688,8.014467,3.297983,-7.871891,0.599481,-8.528037,1.888439,2.970289,1.562743,8.167764,-9.289686,2.880850,-7.553818,6.311795,-3.401202,-1.846577,7.640319,4.463232,8.930663,9.970782,-1.182701,-3.776835,-4.029122,-8.176697,-8.037353,6.745047,-8.581701,-4.547416,8.805268,-9.860878,4.891478,-3.592520,-4.616816,7.063842,4.915912,-1.098191,-3.072882,5.466410,9.527325,-5.037270,-1.770106,-9.787487,6.142295,5.694696,0.130270,-0.111380,-2.755531,9.579287,-2.720887,1.042371,-8.612303,4.099899,-7.070541,2.971404,6.978506,-5.289651,5.356458,-9.822886,9.838889,-2.750349,4.583622,9.386302,5.754710,-6.429657,3.239659,6.543240,6.506458,-3.602144,2.284316,7.240425,-5.771948,-5.857624,1.599634,-0.312089,9.660107,0.034855,7.650359,-4.016703,1.403366,-8.047216,-9.806295,-8.890397,-1.390056,-3.693293,-1.503049,-9.082608,4.513986,5.306358,3.197379,6.786847,-7.228366,8.447496,-1.023758,-2.764192,-7.227225,-9.947661,-1.591815,3.436737,-6.332979,-9.297189,8.526192,7.862843,-6.225588,2.862035,-1.646020,-8.942840,9.505442,-3.614417,9.334375,-6.849893,4.402404,6.181472,9.928129,-4.762476,-0.830248,9.132034,-4.431580,-9.538001,6.708111,-1.618730,-5.384455,-8.067682,1.365895,6.094587,8.496936,-1.516922,5.782867,-4.582633,-4.868571,-6.349004,0.256434,0.768339,-1.106130,-7.727464,7.122077,5.730666,2.606313,-0.703353,-0.519632,-2.149575,8.166640,-2.594545,-4.390810,7.788186,1.771194,7.094980,9.560018,-4.200474,-7.425415,4.630658,-6.500288,7.072277,-0.271185,-6.606386,-6.288218,-2.907454,3.474205,-5.019010,0.124387,6.073632,9.509424,-6.195825,3.901166,-6.538826,6.872693,2.995534,-7.731020,-6.689934,-7.200227,3.741719,7.573575,-6.319810,-6.588253,-9.939052,2.989335,-9.912190,-2.275597,5.319358,-5.135500,9.135606,-7.157336,9.734809,8.102540,0.462161,-7.532479,-2.994911,2.165474,-6.711423,6.151255,9.339080,-1.795282,7.845397,-2.380846,-9.515540,-5.934354,4.872928,5.795762,2.134321,-5.869339,-1.687937,1.788439,-1.962847,-8.239885,-5.292538,8.598200,-5.848352,-9.447964,-2.457720,-5.692942,2.194540,-1.040249,6.736014,2.455239,-4.208449,-5.985703,-7.023866,-2.481528,-0.736684,8.216256,-6.426140,-0.888019,1.426491,0.837747,-8.096200,-4.408591,-8.790698,-0.447150,-7.381322,7.882805,9.261041,-3.463903,1.821409,-7.163397,5.579648,1.015643,-2.743155,-9.317268,-7.287407,8.667226,0.778241,-4.526300,-7.939147,-5.117540,-9.921568,5.531675,4.192446,0.743479,-0.333207,-4.543022,2.693447,-7.796694,7.575907,1.282619,-4.030036,-8.247340,4.657110,7.970196,3.551913,-4.964093,9.157939,7.607261,1.312007,-9.473564,-8.700582,4.794673,-2.321906,4.275840,-0.452177,1.940631,5.479187,5.375052,-2.507307,-0.739177,-8.936997,7.577794,0.893510,-6.523833,1.822357,-2.279290,0.535264,6.667260,4.181696,6.237692,-0.109032,-2.096939,7.678272,-2.430215,4.554670,0.834806,9.212489,4.084859,-5.214324,-5.942494,-6.819759,3.841995,-2.018938,2.324497,-1.783453,-3.100926,6.444315,-8.723095,-2.210189,-9.100725,-0.274258,0.921094,-4.287484,-8.014977,-9.636433,-0.716478,2.576016,-5.106187,5.800278,-2.053004,-9.303115,-4.874958,0.512982,-0.325525,9.313203,2.722538,4.655090,9.746065,-3.467094,-8.437676,-0.548911,2.406183,-9.947896,-5.604020,-5.557137,2.881874,8.881449,-9.927158,7.897051,-0.327039,-2.314193,-9.348835,-0.259778,8.642296,1.776496,5.024675,3.850529,1.197438,-3.572791,2.546815,-8.160006,8.168626,-3.678727,9.210325,5.240747,-7.002907,7.788275,5.019124,-0.014724,-3.315235,-0.919264,-2.974959,7.725557,9.752716,3.394916,-0.450646,-6.625255,1.234152,2.667347,-9.548330,-0.525128,-7.873742],[6.560629,4.768226,9.821513,4.985329,5.472087,9.964706,6.305202,-6.534466,8.633846,3.083371,-8.289955,-2.315887,2.103273,-0.498833,7.306711,4.629311,-0.426041,-2.348121,1.455609,4.561723,4.640039,2.392164,-5.030880,6.043102,-5.442355,4.895585,0.571820,-2.474452,-1.563988,-3.197119,-0.635040,-8.687883,-6.903766,-6.294242,-1.541981,-8.698614,-0.144424,-2.536263,6.146829,-2.388849,-7.139824,6.385169,5.539211,-8.503295,-2.922699,4.016904,8.258585,-9.365228,-2.028076,2.300991,-2.722576,1.248376,5.150082,2.282309,4.274944,-7.692511,6.581552,-6.081098,1.370653,-1.218066,4.905531,-5.150621,9.901424,8.443220,3.261409,-4.097314,-5.895819,-7.686233,-8.521797,8.640430,2.273035,1.777168,6.794941,3.455626,4.138187,-0.377094,9.090013,1.101586,4.318548,7.762889,7.464506,9.559496,2.149123,2.590555,3.729723,5.235531,-0.106132,-1.197805,-7.409077,-7.644392,6.675946,6.677417,-9.675120,-6.516974,8.351406,-2.107060,3.905507,-6.680724,-1.059192,-6.203600,-5.723786,-5.935462,0.347652,-8.899016,8.242749,1.518699,-1.876285,4.166909,8.463774,-1.572498,2.475812,2.130238,-5.228225,8.239178,7.196392,9.656320,-1.293689,-4.647909,-6.833349,2.985074,7.755814,-0.469858,4.355705,-3.597399,2.736506,8.216630,-2.665173,-1.340530,2.195749,1.249730,6.333941,-2.998122,-0.177836,6.284140,-9.595272,-9.014344,0.366226,4.899228,1.007986,1.639249,-5.053856,4.177219,1.220895,-5.304804,-9.509760,1.238219,-5.383668,1.114567,-2.347389,5.781083,5.911596,5.252001,-0.920987,-7.526175,-6.306121,2.573926,-2.075337,8.173269,-0.669281,-1.003414,0.181548,-0.761293,-4.391506,9.875959,8.928614,3.979234,-0.258249,3.466701,7.503517,-2.476422,-4.744468,-8.270556,2.198420,-1.095453,9.139193,-1.871225,8.913409,-9.548947,-8.536583,-6.277522,-9.111667,-4.295544,-0.410082,-1.313097,4.132770,-8.400594,-3.324466,8.556903,-5.269538,4.790182,-9.442769,9.634033,-3.602315,0.014569,8.549395,-2.739644,2.414977,-3.325536,2.585542,5.682306,-6.541967,-1.695125,6.475400,-1.567065,3.532024,7.633320,9.969962,5.237295,1.521727,-5.946981,8.812445,-2.719443,8.761042,-4.747699,9.743774,-6.749738,3.019601,-8.362642,-0.509443,6.502271,-8.639166,8.780591,5.723734,-7.170659,-8.693881,2.661031,2.519218,-4.988992,-0.318063,1.556870,4.254231,8.795683,-6.785946,4.774529,-4.132048,9.737219,6.605438,-1.224012,7.438331,8.945131,0.648066,2.709678,2.216506,-8.035641,5.861027,7.424385,7.382409,6.105726,7.758354,-7.625439,1.019341,-1.825247,-5.733107,0.410514,7.983548,8.118924,5.609658,-4.096609,3.977470,3.225807,-8.066318,4.543437,9.850260,-9.937214,4.886661,6.908207,-8.457567,0.178270,-2.639066,-2.467123,-4.098315,6.732743,9.558235,-4.851718,-7.288155,4.122443,-7.239615,-3.660027,3.380407,-9.317305,6.462407,-3.086669,-8.850893,-3.542486,-1.608833,-4.846060,6.962533,4.297838,6.464430,8.696618,4.851255,2.772642,2.384979,1.223407,-4.598399,5.826255,4.479825,9.428543,8.820513,7.570712,-1.123310,-2.369317,4.353096,-5.353380,0.040316,-3.652129,-7.573926,7.854702,4.088156,6.121387,-9.833714,2.353256,-7.434118,7.683917,-9.007356,0.379448,6.528111,-4.879182,7.872794,8.974604,-4.111475,2.784321,5.147940,-4.725852,-9.042412,-5.435657,-3.938689,-6.038490,-0.899849,0.950999,-2.269026,-6.201034,-2.256709,-1.138295,4.658371,1.640272,5.092999,4.624373,9.259422,1.185734,8.646604,-3.776973,5.527989,-3.492711,1.475730,9.233550,-2.674362,1.591843,-0.254116,1.852936,2.278754,-1.119621,8.470564,-6.399631,0.455473,-3.422789,3.247636,3.094857,-1.915042,2.963187,5.729004,1.008947,-4.855534,-2.794805,6.086857,-4.845113,-6.580016,2.992635,-8.512587,-5.819593,-2.351356,-8.160260,-9.551972,-8.828753,6.173872,-7.577225,-0.970505,2.714997,-1.939605,-9.635762,4.365730,-1.822171,6.408992,0.194749,0.160659,0.821549,9.905281,-5.681441,4.111168,-7.767571,-4.870162,9.963203,-5.423387,2.992594,9.280900,-0.651717,-1.877424,-2.409261,7.078942,-6.722217,-2.938743,-5.939941,2.904776,4.133366,6.908254,-9.580165,-7.132901,7.229724,-7.533629,2.688231,-2.852166,-8.824423,-7.188082,-9.141711,-3.142064,6.595633,-5.350217,-7.318201,-2.469182,9.764018,5.407626,7.946152,8.561863,7.810684,5.507263,8.711914,-8.282521,-4.282100,2.794737,-7.927563,2.005321,-7.385861,4.148614,-6.792922,-1.384463,-5.044724,7.755817,1.956703,-8.479678,-9.031172,1.302876,0.624005,7.402479,-4.482794,-0.551058,-8.717072,-0.096380,2.173340,-8.457245,0.324461,9.293137,-6.060704,1.543099,-6.631971,-3.222800,2.277784,-6.097253,-3.495981,7.070411,-3.267184,7.660650,2.845551,7.657640,-6.221010,-8.569226,-6.153736,9.115586,-0.852157,-8.935819,-7.632120,2.470258,-2.746188,-3.174997,9.778122,-7.021420,0.384409,8.830519,7.392480,1.585655,-7.738279,-8.835924,-5.147590,9.329611,-2.856309,0.727784,1.723514,0.488912,-6.120537,-3.243060,5.033609,-7.897368,-2.846223,4.714725,-9.289771,0.657397,2.349447,-6.230147,8.514740,-0.399123,0.325112,-0.080545,8.524994,7.225936,9.402424],[3.299118,-8.236817,9.737340,7.820717,-2.463898,-3.516518,-4.923751,6.942785,7.260047,3.196578,3.031185,8.514535,0.815295,1.904808,-5.037264,-3.974631,8.790162,2.449064,1.338089,6.772336,6.550468,-3.850810,3.844676,-3.606127,-8.104252,3.400423,-1.522045,-7.283016,0.286054,-2.757804,-3.916341,4.438755,7.760612,6.956529,-7.169063,2.062131,-6.763079,1.787050,3.132875,-1.441665,8.083861,2.903713,-7.740431,1.606025,0.394780,6.189347,-9.943044,7.944590,-4.787377,4.923584,-1.003764,-4.801747,-1.969855,-2.581275,4.495922,3.227963,-4.176845,-2.457463,-2.148558,-0.586671,-1.054038,-2.390710,7.019161,-9.330786,-4.599971,-9.509551,-6.002518,7.294323,-5.490457,2.772007,-1.041967,8.098462,0.802317,0.864143,9.576541,-6.134201,5.314307,8.020659,-8.274652,-9.136803,5.009137,6.961254,6.334587,-0.168752,2.597270,9.553234,-7.427940,-7.073975,9.189168,-8.339557,-5.127018,-1.006863,6.108804,-7.460556,4.585359,-1.922883,9.747897,2.689554,-7.492068,-5.227491,6.671515,5.701947,-1.772290,4.468919,1.067748,9.568759,-1.839928,9.968833,8.142967,-7.751495,7.055063,7.262833,-1.875673,1.780011,-1.681767,-3.240011,-9.727503,8.987102,-0.245168,-5.766806,-4.969489,1.555174,7.334228,-4.062349,-7.684883,8.341247,4.348066,-8.525029,8.627065,-2.646215,9.596666,3.036081,-1.210882,1.701969,-5.237258,-7.351686,0.557341,8.974282,9.092502,0.444262,-9.742260,5.116317,2.323838,-8.763766,7.641199,-1.914381,1.434268,-7.019264,-1.829811,-4.250215,0.171812,-1.506804,-3.581411,1.201547,0.397456,1.798120,-9.575490,-6.313251,-4.900504,-5.799785,4.938172,2.310448,6.439380,1.975488,2.798341,-9.995992,-2.802611,7.499507,-0.505420,-4.424096,7.372998,-0.191101,-4.141236,6.646614,5.557277,7.351380,-6.351516,8.477284,-0.338449,8.361127,8.034192,3.799616,-9.184860,-0.789241,3.563338,9.608452,1.806299,-8.325124,-7.572562,-3.669923,-1.842350,-8.026634,-8.869588,-9.631503,-5.618569,-8.994174,9.868232,-0.594606,-9.947125,-5.361698,3.134351,-0.683270,9.599615,0.810352,-0.548537,6.171322,6.784454,7.224470,-2.178430,-1.619256,-5.629258,-8.026374,-2.536201,3.651933,0.804038,1.244015,8.440379,0.666075,-0.681133,-5.524011,4.564974,1.867144,-1.870932,-4.795865,-0.427395,2.916294,-5.342813,-9.094631,-6.481582,6.157373,-3.844890,0.916967,3.391081,-3.965847,8.466160,-0.985054,0.432430,7.729229,4.206861,-9.674214,-4.428467,-1.575212,1.805956,-7.945614,-1.335028,0.594463,-9.641191,3.630741,-8.143074,2.439140,-1.145315,-7.363285,-6.311834,3.847420,1.029362,8.550235,-4.479756,-2.651457,8.883309,4.906478,8.145142,-9.623412,7.554727,9.863232,1.914959,6.065309,-5.947201,3.657833,1.137625,-9.686239,-2.911979,8.133183,9.572649,-5.417890,-9.441361,8.711058,0.214674,3.461406,5.761039,-9.791878,5.693609,-4.990761,3.864061,-4.779236,1.286626,5.343897,4.257734,-0.090892,2.089036,0.218598,-6.821346,5.185857,-5.760366,9.045142,0.807411,-7.449294,6.843842,-2.591554,1.783124,-8.421030,-5.904176,-2.005412,-1.724353,-8.455078,-1.247661,9.363420,-1.167895,-8.207407,8.226956,-7.340008,5.057187,0.152339,-1.146146,5.344503,6.331333,-2.222121,0.279956,8.904948,0.960745,3.768793,7.317948,-8.183298,0.262703,-0.165067,-4.075614,8.679542,9.225593,6.622974,7.112982,1.472174,-2.091507,-2.548985,4.119640,7.803052,8.337219,-5.390779,7.002569,1.903622,9.065332,1.750555,-1.989655,5.735437,0.913634,9.269425,3.311864,8.860616,-9.222036,4.998341,2.553299,-0.094584,-9.249436,1.201043,-2.033000,-8.555306,-3.577977,1.479093,5.664962,3.834380,9.446626,3.083353,8.475168,-6.177472,-6.235801,7.484107,-0.660200,-5.200427,-5.699592,-2.457506,-1.478734,-9.558560,-0.764523,-7.250573,-3.480432,2.679741,-9.108459,-7.976816,6.927208,-7.389051,6.387547,-9.848618,6.901998,-5.916780,-4.750629,-6.643680,2.787784,-0.195687,6.577501,0.100143,-1.073713,9.124711,6.934795,-1.819200,9.712100,-7.039644,8.180883,-9.808614,-9.751668,-8.443098,-9.309553,8.729293,-7.746326,1.896288,-3.156159,6.453330,5.441519,-1.926576,3.678927,-1.136615,4.092999,8.056024,4.221474,9.728064,-0.358206,-1.294238,2.080228,-0.209668,5.208549,4.391933,5.366112,-6.730115,6.352667,4.864974,-5.444489,2.530356,0.656118,-7.021378,7.233085,-6.529719,1.576013,-0.109805,-9.227335,-4.192436,-2.512875,-7.496001,3.046307,8.466964,0.620307,5.186057,-3.421001,1.313711,6.550108,-6.262983,7.454230,-6.810268,8.196889,5.605282,8.886639,-8.654210,5.761434,7.056741,5.101793,-3.302744,-3.228371,-1.581567,-8.722917,-3.874085,4.621986,-0.074196,8.060809,-7.280996,6.946473,-9.686705,0.839209,8.684955,9.850092,1.141202,8.936569,6.867664,0.484949,-1.470316,3.949741,4.975279,9.532251,-6.503948,-5.978972,1.624590,-2.114915,5.312149,-1.301347,6.125968,2.334750,8.125589,-3.819905,-9.744968,-7.714022,5.925921,6.656126,7.157662,6.511501,1.360337,-6.790568,4.226978,7.677199,-8.270974,2.874166,2.441806,5.092745,5.412641,-0.080297,2.584058,-6.300748,-9.239660,-7.760528,-0.222247]], dtype = "float32")#candidate|4124|(14, 504)|const|float32
bop_4125 = relay.equal(call_4121.astype('bool'), const_4124.astype('bool')) # shape=(14, 504)
bop_4128 = relay.equal(call_4122.astype('bool'), const_4124.astype('bool')) # shape=(14, 504)
func_1205_call = mod.get_global_var('func_1205')
func_1206_call = mutated_mod.get_global_var('func_1206')
call_4130 = relay.TupleGetItem(func_1205_call(), 1)
call_4131 = relay.TupleGetItem(func_1206_call(), 1)
func_3110_call = mod.get_global_var('func_3110')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_4136 = relay.TupleGetItem(func_3110_call(), 0)
call_4137 = relay.TupleGetItem(func_3111_call(), 0)
func_2495_call = mod.get_global_var('func_2495')
func_2496_call = mutated_mod.get_global_var('func_2496')
call_4138 = relay.TupleGetItem(func_2495_call(), 0)
call_4139 = relay.TupleGetItem(func_2496_call(), 0)
output = relay.Tuple([bop_4125,call_4130,call_4136,call_4138,])
output2 = relay.Tuple([bop_4128,call_4131,call_4137,call_4139,])
func_4148 = relay.Function([], output)
mod['func_4148'] = func_4148
mod = relay.transform.InferType()(mod)
mutated_mod['func_4148'] = func_4148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4148_call = mutated_mod.get_global_var('func_4148')
call_4149 = func_4148_call()
output = call_4149
func_4150 = relay.Function([], output)
mutated_mod['func_4150'] = func_4150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_4161 = func_375_call()
call_4162 = func_375_call()
output = relay.Tuple([call_4161,])
output2 = relay.Tuple([call_4162,])
func_4163 = relay.Function([], output)
mod['func_4163'] = func_4163
mod = relay.transform.InferType()(mod)
output = func_4163()
func_4164 = relay.Function([], output)
mutated_mod['func_4164'] = func_4164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4171 = relay.var("var_4171", dtype = "float64", shape = (8, 1, 12))#candidate|4171|(8, 1, 12)|var|float64
uop_4172 = relay.asin(var_4171.astype('float64')) # shape=(8, 1, 12)
uop_4177 = relay.rsqrt(var_4171.astype('float64')) # shape=(8, 1, 12)
func_436_call = mod.get_global_var('func_436')
func_438_call = mutated_mod.get_global_var('func_438')
var_4189 = relay.var("var_4189", dtype = "int64", shape = (1, 1320))#candidate|4189|(1, 1320)|var|int64
call_4188 = relay.TupleGetItem(func_436_call(relay.reshape(var_4189.astype('int64'), [10, 11, 12])), 2)
call_4190 = relay.TupleGetItem(func_438_call(relay.reshape(var_4189.astype('int64'), [10, 11, 12])), 2)
bop_4194 = relay.bitwise_or(var_4189.astype('uint32'), relay.reshape(call_4188.astype('uint32'), relay.shape_of(var_4189))) # shape=(1, 1320)
bop_4197 = relay.bitwise_or(var_4189.astype('uint32'), relay.reshape(call_4190.astype('uint32'), relay.shape_of(var_4189))) # shape=(1, 1320)
const_4208 = relay.const([[-10,10,-8,10,-8,-6,9,8,-4,3,-7,8,-3,-4,-2,3,-6,1,-3,-7,-7,-3,9,-8,-2,-3,-7,-8,2,3,3,-5,8,-4,-9,5,-5,4,10,7,2,1,-2,10,-1,9,1,-4,10,-4,-10,-4,-5,-1,10,-7,7,-2,6,-5,6,-2,6,6,5,-4,6,2,-8,-8,-10,-3,-2,-9,8,7,6,1,-5,-7,-8,7,-10,-7,3,-9,2,-3,-6,5,4,7,9,-1,6,9,10,-8,-7,1,2,-5,9,-1,8,-8,-5,-4,5,-3,5,7,-7,8,-1,4,-6,-10,-4,-9,-6,-7,-3,7,8,1,3,-1,-2,-4,5,-8,6,-9,8,5,6,-7,2,-7,6,-4,-5,-9,3,1,3,2,-9,10,-8,3,6,2,-6,10,8,-2,10,-3,-7,2,6,-9,-2,4,5,-3,7,-1,-6,-6,-7,-1,-10,-10,9,-6,6,1,8,8,-3,4,-8,-5,-6,-3,7,-7,-8,-3,1,-3,-9,-2,8,-10,-5,-2,-7,-1,6,-5,-8,2,-1,3,6,-6,-10,2,2,-10,-6,2,-9,-8,5,-10,6,-8,-6,-1,-7,-7,-7,7,-1,-6,9,-10,-1,3,-10,10,6,-4,-9,7,2,-2,-5,8,-6,-10,-4,-3,-7,-2,1,6,2,-4,-5,-6,6,-7,7,-4,-4,7,-5,5,-7,2,1,-7,-7,1,-1,8,6,-8,-3,-7,-7,4,-7,5,-6,-3,-4,-7,3,-3,-6,2,8,-7,2,-7,10,-2,-2,2,5,-4,-6,-10,-2,3,-3,2,-7,-2,4,-8,5,-3,7,3,-1,-1,-10,5,-3,10,7,7,10,3,-1,10,10,-2,-9,1,4,6,-4,-5,-3,-2,6,4,-9,2,7,7,-7,6,-4,5,-2,1,6,-2,-1,-9,2,-3,-8,4,-8,5,-9,-1,-10,2,-1,-8,9,4,-2,4,-4,-8,5,10,-2,9,5,-6,-10,7,-1,6,4,-9,5,-2,-2,3,-2,-3,7,-8,5,9,2,5,-2,-3,-3,3,-8,8,5,9,6,2,3,-8,-3,4,-3,-1,1,1,8,3,1,6,-3,-3,-7,2,4,8,7,3,2,4,7,1,-1,9,-8,-8,-10,-9,6,6,-1,7,8,-7,1,-8,-1,4,-3,-4,8,1,-4,2,4,-10,-2,-3,5,5,-3,4,1,-6,1,-5,-3,-6,1,-7,-5,9,3,2,-6,-6,7,5,-10,-2,2,-9,-8,-3,2,-3,6,8,6,9,-4,-10,-5,-1,-5,-5,2,3,-10,8,-6,-10,-3,-4,-8,-2,8,-5,9,7,9,-3,7,-3,-4,-8,2,-5,-8,-5,-1,-1,10,-1,4,-3,7,7,1,10,1,-6,-8,9,1,4,-2,1,5,-1,8,-3,9,1,-8,-7,-9,-1,5,6,-3,-8,-7,6,-8,10,-10,-3,3,-9,4,-9,9,1,9,10,8,-8,6,9,-1,-10,-2,-10,-6,5,4,-3,5,7,-1,-9,-4,6,-10,-3,-3,-4,9,-9,4,5,9,1,3,-1,6,5,-6,-9,5,-1,-9,1,-10,3,4,10,-7,9,-8,6,8,-3,10,3,7,4,-9,-4,-5,1,-4,-5,3,-2,-2,-4,-10,7,10,-7,-3,3,-6,-1,3,-2,-4,-1,-1,-7,-3,-5,7,-5,3,-1,3,-10,-2,-1,4,3,10,-4,-7,4,-1,3,3,4,9,4,-1,10,5,8,7,-7,3,8,4,10,-2,-3,8,-3,-5,9,-9,-1,2,-4,-9,6,2,-4,9,-2,-4,8,-4,-10,-5,-7,10,1,-5,3,-5,8,4,-4,5,-3,-10,-2,1,-5,1,-5,10,-4,-10,-1,-7,-2,2,-3,-1,5,-9,-8,-10,-9,5,-3,9,-9,4,5,2,2,5,-10,-4,-10,5,5,10,-6,7,1,-5,-6,2,-10,-1,8,-8,2,7,-8,1,6,9,-8,1,2,-2,5,-2,-8,-7,-6,-7,8,-2,6,10,-7,-4,-5,6,1,8,10,2,10,4,-6,-8,-5,-3,-4,-3,-1,-5,3,6,9,-3,3,-7,-7,-10,-4,-9,9,-9,4,5,8,2,1,-7,-1,9,6,-6,1,-9,-6,-3,10,-9,4,2,4,-5,-1,7,-3,-5,-4,-3,10,-9,10,-3,-4,9,-6,9,-4,-9,7,8,-4,-8,-5,-3,-2,-1,-4,5,7,-3,-4,7,7,4,1,3,-4,-4,-1,-3,-1,7,9,1,-7,-8,-9,10,10,1,5,-9,-2,-9,-1,-7,-9,8,-8,1,-5,6,-6,3,10,9,5,-6,10,1,-10,-6,3,-6,-2,6,-7,-5,-9,-9,2,4,-4,6,6,7,-8,-4,6,-1,6,-8,-2,-6,-1,9,2,3,-4,2,-8,5,-2,6,10,6,7,-10,7,9,10,-3,1,-8,5,-4,-9,-9,-9,-8,-4,-6,-8,-9,10,-5,8,-3,-4,-4,1,5,9,2,1,-9,-4,-6,-1,9,7,-4,-2,3,-9,8,-5,1,-7,1,1,-10,5,7,-5,7,-10,4,-9,-9,-6,-8,8,-4,-10,-2,7,6,-10,-9,-1,6,9,-5,-6,5,-1,-2,2,-5,-5,3,-9,-7,4,-5,-2,8,10,10,-6,-10,1,8,-10,-4,-8,-8,-8,9,8,-8,-6,6,10,1,-2,-4,5,-6,3,-9,-9,-1,1,-8,5,-3,-10,6,-4,5,10,-1,-1,7,7,6,-4,-10,6,-5,-3,1,-7,5,-4,9,2,-8,-7,7,-2,9,-10,2,-8,-9,7,-6,9,-6,-2,8,5,4,-10,5,4,7,-4,1,9,-4,-2,-1,-2,5,-3,5,-8,9,2,7,7,-1,6,-6,-2,1,1,-4,-10,4,-1,-3,-1,-4,-6,10,-8,6,-1,-8,3,6,1,4,8,-7,8,-5,-2,-4,3,-2,5,4,2,-10,1,-8,5,-6,-9,-1,2,-8,6,-3,-7,7,-6,-9,-4,3,4,-8,3,-1,6,1,-7,-4,-2,1,3,1,-10,-8,-9,10,4,4,1,-10,-5,-6,-2,5,-9,-3,-6,-4,7,1,-4,-3,6,-4,1,5,-6,10,3,-2,-4,7,-3,6,-4,10,-7,-6,10,-1,7,1,-1,1,-10,8,-2,-6,7,-7,-1,1,-1,3,9,4,-2,-9,-8,8,-5,-2,5,-2,-9,5,7,8,-3,9,6,7,-2,2,-7,8,9,9,-7,6,9,8,5,3,-8,1,-10,10,7,10,2,-5,7,5,-2,-1,-4,6,6,9,-4,6,9,3,-9,9,10,-4,-8,2,2,3,-4,-5,-10,2,5,7,-3,-9,3,6,1,-4,-1,-3,2,8,6,-6,-10,-2,6,10,-10,-4,6,-8,-9,8,-9,-4,-8,6,-8,2,-1,-4,2,8,2,6,-1,-6,7,10,-6,8,7,-8,6,-4,4,6,3,-9,4,-4,10,-7,4],[2,4,-6,3,7,-3,8,2,-3,-6,9,-8,8,2,6,3,-8,9,9,7,3,8,9,-5,-4,-7,-2,-7,-4,6,-7,-7,7,10,-7,-1,-10,2,-8,2,-8,8,-5,-2,5,8,-6,-8,10,-8,-6,-9,-7,-6,6,8,8,-5,10,3,-5,9,7,-6,-5,5,-3,-8,5,-3,3,-6,7,3,9,5,8,-7,1,-1,10,-8,10,1,-1,6,-8,-4,-4,-4,-4,8,5,4,-3,-2,2,-3,-9,10,1,-3,-8,3,3,-8,-10,-8,4,-1,-8,-7,5,3,-6,-4,-8,-5,-4,-2,-10,4,7,-5,4,7,6,-2,-7,5,-9,10,7,-6,6,8,10,-5,5,-7,3,3,-9,-4,-2,-2,9,-8,9,-7,-6,2,10,1,7,-6,-4,-4,4,1,-9,6,-5,4,10,1,-8,-10,-10,4,10,2,9,-7,5,8,3,2,8,-3,9,2,7,-6,4,-6,1,8,-7,-2,7,6,4,7,4,-10,-4,-10,6,-7,9,-7,-3,-10,-2,-3,-4,8,-7,-10,6,3,2,-8,1,-1,9,9,-2,4,-3,2,6,-7,-6,-3,7,-2,-9,-9,6,-1,7,10,-10,5,1,-5,9,9,9,10,8,-8,10,7,9,-2,-9,10,-7,5,4,5,1,1,-6,7,10,-10,5,8,-5,-2,5,4,-7,-9,8,-4,-8,9,5,5,-5,8,2,6,8,-2,2,-6,6,9,9,-4,-10,10,-3,1,-2,8,4,-1,-3,-5,2,5,-7,3,10,5,-4,-3,2,5,-2,-5,-8,-9,3,8,-7,3,-7,-2,-8,5,1,-7,4,4,4,2,-8,-2,7,4,3,8,8,7,4,-5,1,-8,3,-3,-1,-10,-6,-10,4,-6,5,-7,3,-6,5,2,5,-3,1,-7,8,3,-4,8,-1,7,10,7,-7,10,6,7,3,-10,-5,9,8,9,9,10,-6,5,10,-1,7,-8,-5,-4,7,5,3,-5,-7,3,-6,5,-9,-7,-2,-3,-2,-2,7,5,2,-4,-5,-5,5,-8,10,-2,4,5,10,5,-10,8,2,1,-5,-8,6,-5,-1,2,8,10,7,-8,-5,8,-9,-3,4,-7,-1,-1,10,7,-9,-3,-5,1,-8,9,-1,9,5,-2,-7,8,-6,4,5,7,2,-4,-1,-1,3,2,-10,3,6,4,6,3,3,6,-1,-5,-3,2,-4,-4,-6,1,9,1,9,1,1,7,-1,3,6,-5,-7,-4,1,-7,6,10,2,-1,9,8,5,-4,-8,6,-5,4,7,4,-6,4,-9,-7,6,-1,9,-4,3,-9,-5,7,-6,-3,-7,-3,-9,4,1,-6,9,-3,7,5,3,2,-10,7,8,-1,10,7,-8,5,2,8,9,10,-7,5,-8,10,-4,6,-1,-6,-8,8,5,7,5,9,-7,7,5,-7,-8,2,4,-5,-4,3,7,-10,-5,2,-4,-3,1,6,3,-10,8,5,10,8,5,6,5,4,2,-9,6,-7,1,2,7,-4,-4,9,-1,5,-10,-7,8,-4,-7,9,2,-2,-1,6,-6,5,1,1,-2,-7,-9,5,6,-10,-2,-8,-4,9,5,-5,8,-9,5,3,10,10,-4,9,-6,-5,-5,-5,3,6,1,-9,1,-2,-9,4,2,-9,10,-6,-6,-7,4,-3,5,-7,1,9,-3,10,3,1,9,4,7,-8,-3,-5,-4,-5,8,-7,-7,4,-7,-10,-10,10,1,9,-3,3,9,-4,8,3,-3,-6,-9,8,7,-10,1,4,-1,-3,9,2,-6,10,6,-2,6,-7,10,-2,-7,2,10,1,-1,8,2,8,6,4,3,-1,5,5,5,-2,10,2,2,-3,-10,2,3,-2,10,-1,1,4,-1,-1,6,1,-7,-8,-10,1,4,-4,5,-5,1,10,9,-7,-4,-9,2,-8,6,-10,-7,-6,6,9,5,6,4,-7,-3,5,3,-10,5,7,-6,-8,10,5,4,-7,9,-5,3,-6,-8,-4,7,7,-1,-3,-1,-1,7,-9,9,-1,3,-1,-10,1,-8,-9,8,-8,10,10,-4,-6,-5,3,-3,4,2,2,-2,10,-9,-6,-6,-8,8,10,8,-3,1,9,-10,-9,6,-4,4,10,-4,-10,3,-9,-7,2,-4,-6,-3,-8,8,7,9,-4,-7,4,-5,4,-2,8,3,-5,-9,2,8,6,9,9,7,9,-2,-7,-9,2,5,3,1,3,-8,1,8,9,-1,5,6,1,-9,2,9,-1,3,10,-9,4,-1,1,-2,-7,1,-10,6,-2,10,-2,7,5,5,-5,-2,2,-2,3,5,9,-9,-4,10,9,1,1,5,7,-1,6,1,-7,3,9,9,6,6,-5,8,-6,-5,7,3,4,6,7,8,-2,-3,8,8,-10,-6,1,-8,2,-6,-7,-3,-2,9,-8,-7,-9,-3,2,3,-6,-8,-4,3,-2,-3,5,10,-6,-1,7,7,8,-4,-1,-4,-7,-1,-9,-5,1,-9,-7,-8,-7,9,6,-9,8,-5,-10,6,-3,8,-1,-2,4,-3,-2,4,-1,-5,-1,-1,10,7,-7,9,10,-2,4,-7,9,9,-10,-3,8,-8,-4,7,7,8,-9,-5,-6,-1,-3,1,8,-1,7,-9,-4,3,8,-4,7,10,-8,-2,2,-9,2,4,1,8,3,-2,-6,5,-6,10,2,9,7,-6,-5,-3,-6,6,-6,5,2,4,-4,-2,9,-4,-4,-3,-4,-9,6,7,10,-9,-6,6,4,5,-3,8,9,-5,7,-3,6,2,-3,-4,-2,3,-1,-7,-3,1,-9,7,3,2,-9,2,6,-9,-5,-4,-10,-7,8,-4,-8,6,-7,5,7,9,2,-5,-5,7,-9,-7,10,8,9,10,10,-5,10,-7,9,5,7,-10,-4,2,-10,4,4,9,-5,-1,4,2,-5,-1,2,6,5,2,2,5,-3,-9,1,10,-6,3,-6,2,-1,-8,8,-4,9,-4,-2,-1,8,-1,10,8,-4,-6,3,4,2,9,-5,2,-1,-6,-7,-7,9,-5,1,6,4,6,3,-3,1,4,-7,1,-3,2,-6,-5,8,5,-5,5,-5,7,10,-3,-4,-10,-3,10,9,-8,-2,9,4,9,5,1,4,7,9,-8,9,3,-10,10,4,4,2,6,-5,7,9,-9,-7,-1,-8,-7,-9,-9,-3,8,-8,5,-4,-7,-6,-9,4,1,4,-6,-3,9,3,-10,-8,8,-1,-7,-4,5,9,-8,-2,4,1,10,5,5,-9,8,3,7,-9,-8,9,4,7,-2,-10,-5,-8,-4,-6,3,-4,-7,5,1,-8,-6,2,4,-3,-8,-3,-4,10,2,-9,-5,5,1,6,3,-3,-1,-2,-4,-1,8,7,-3,-3,7,1,6,4,6,-9,5,2,7,-3,9,-5,-6,-2,-9,5,9,-10,1,-2,5,8],[3,10,-3,1,6,2,8,2,-1,5,-4,4,-8,-2,8,-7,-1,-3,1,-8,-1,9,-4,-9,10,4,-1,-9,5,-6,-3,-5,1,9,-3,-6,-7,6,-10,6,-8,-5,-9,10,8,-6,-8,-7,1,10,3,10,3,-1,10,-2,-8,-9,-3,-8,4,4,-6,-10,9,3,-6,-1,-9,-1,-2,7,-1,-4,5,5,-7,-9,2,-4,-9,-2,-9,3,7,-7,8,8,10,4,-5,3,2,7,-1,-4,7,5,-10,6,-2,-8,-6,-2,8,10,-6,7,4,1,-6,-10,-10,-1,-3,8,9,-10,2,-9,-5,-6,-3,9,9,-7,-5,-10,-1,-7,-7,4,3,-10,3,7,-10,10,-8,-3,1,3,-6,-2,3,3,-4,-5,10,-4,-5,-10,-4,10,-1,8,-2,7,4,-7,9,-9,7,-2,9,10,6,1,-2,3,-4,3,-2,4,-2,-4,-10,-5,-7,6,4,-10,-5,2,1,-9,6,1,-4,5,7,-6,2,-6,10,-3,-5,5,-3,7,2,-9,10,6,4,-2,1,-7,-1,10,-4,-4,-7,1,7,5,6,8,3,-1,-5,7,-3,9,-9,3,-3,4,-7,-9,5,-6,8,-8,-9,-8,-2,-2,-1,-8,9,4,10,1,5,4,2,2,5,8,8,8,-3,4,-1,-2,4,4,8,-1,-3,-4,6,-4,-3,-3,-2,-1,-1,-7,-7,-5,-9,-5,4,9,-1,-4,-8,-8,-5,-3,1,-10,-1,5,7,1,10,-2,-1,2,3,-1,-6,-3,-9,6,2,-4,-4,-3,10,-7,-1,5,-10,-6,-2,-6,-7,9,-7,7,2,2,-10,-7,10,-1,2,3,-2,7,-9,4,3,-3,10,-10,1,10,-9,-2,-2,-10,-8,8,-3,5,7,-7,5,-9,-9,-9,2,-2,8,-10,8,5,-6,-7,8,-10,-3,3,8,-7,2,-5,-7,5,-2,6,-8,5,3,-2,6,-6,-2,1,3,-5,3,-1,-9,-6,3,1,4,-7,10,10,3,8,-6,-5,6,6,-2,-10,3,-3,1,-10,-2,3,-6,9,-8,-7,6,3,-2,1,-6,-6,-8,-7,-3,-3,-4,6,-9,1,3,-4,-10,3,6,5,-7,-10,9,6,-4,4,7,-10,-6,6,1,-10,-8,2,-9,5,9,4,3,-10,1,5,-6,4,5,5,3,6,10,-5,-8,-4,-8,-5,-8,-7,10,7,-6,2,-3,7,10,-7,-1,9,3,-6,-4,1,7,1,10,5,-8,-7,-2,9,8,-4,8,-8,-9,-3,7,-4,-4,2,-4,-3,-2,7,5,-7,2,3,5,5,8,-6,6,9,-9,-5,8,7,-8,-5,10,7,-3,4,-4,3,-6,4,1,3,6,4,6,5,6,1,4,-8,10,7,10,3,9,10,-3,-3,-1,-5,8,2,-2,10,3,-4,-9,-5,1,6,7,1,7,1,10,-6,5,-4,3,4,-1,8,-9,8,-1,9,8,-8,-5,4,4,-6,8,-10,4,-8,2,5,-9,9,-7,7,-10,2,-5,-1,-4,10,6,6,5,7,8,-7,4,6,-6,-5,-10,-2,-3,6,1,-3,7,9,1,-9,5,-7,-4,10,-8,8,2,-4,2,-4,7,10,-5,6,-4,-7,1,-9,7,-6,-4,4,6,-3,-8,-1,-4,-9,-1,-5,9,5,-5,4,-2,6,7,-4,-8,1,-3,10,-5,-4,-3,-3,-2,10,-1,-9,7,10,7,-8,10,10,-4,-9,-9,-7,-4,3,-9,3,-9,4,10,-1,10,2,9,-1,4,3,-5,-4,-1,4,1,-1,-10,8,10,4,9,10,-10,4,-1,7,-7,4,9,-9,5,-1,-6,-2,-10,-6,6,8,9,10,-9,5,-8,-6,-8,7,7,-8,-9,-9,9,-8,3,1,-8,-1,7,-4,8,-2,-7,10,7,6,8,-4,3,2,-8,10,-5,4,1,-7,-10,-5,-7,2,3,-1,3,8,7,-4,4,-10,6,-10,-6,6,-7,-4,8,-10,1,-1,-7,2,8,9,-1,10,-5,-4,1,-8,1,-3,-7,9,6,-6,-9,-7,4,9,-4,-3,-3,-1,-7,3,2,-8,-2,-1,-6,-1,5,2,-1,5,1,-4,6,-1,6,-10,1,-9,4,-9,-7,5,-8,1,7,-5,-5,5,6,-4,-9,1,4,-2,10,-9,2,8,1,9,7,-6,-3,-4,4,-1,4,-2,-4,7,6,2,1,9,-9,-10,4,-1,-7,-8,-4,-6,3,-7,2,2,1,7,-3,-6,7,-1,3,10,6,5,-8,-8,-8,-9,-8,-10,4,3,-6,-10,-6,-5,-10,1,4,-5,6,3,-8,-6,-3,7,8,3,-10,8,-3,-5,10,8,-1,-6,8,-10,-2,-3,7,-10,-2,8,5,8,-10,2,10,-2,5,-9,-7,-7,7,2,4,8,5,9,-3,2,1,-1,-4,-3,3,1,-1,7,-10,6,2,-1,-2,-9,-9,-8,4,3,-4,-6,10,-7,6,1,-2,2,-2,3,5,-1,-4,5,10,-6,6,-3,1,-7,3,-5,-6,-1,3,-4,-5,-3,4,4,5,2,6,-8,-5,-4,-5,-3,9,1,5,8,-10,8,-8,10,4,5,-7,-5,-7,1,9,5,10,-7,9,7,-8,-5,-7,8,-9,9,7,10,-4,-10,-7,-10,8,3,7,-9,3,9,-9,1,-3,3,4,-6,6,-3,10,9,-3,7,2,-4,2,-7,10,8,-8,-5,-6,-1,6,5,-7,6,-7,-1,1,-6,-7,-3,-10,-2,3,9,8,-4,-5,-4,3,4,3,1,-9,6,-7,-6,-9,5,8,5,-5,-4,-8,-5,-8,-1,4,-4,8,-2,-10,-3,-9,-3,2,4,-7,-10,-7,-7,5,6,9,-4,-2,3,-5,3,3,-8,5,4,10,-8,2,2,3,-7,-9,-1,-5,5,1,3,-5,10,-5,-4,10,-4,9,-10,-3,9,7,-5,6,-4,9,10,-8,-5,-5,-8,3,7,-7,8,-5,-5,7,-7,-1,8,8,-3,-8,-9,-7,8,-10,-4,4,-10,9,1,5,-8,9,-4,6,3,-6,-9,-1,5,-3,-2,-2,-8,-8,-8,-9,7,4,6,1,-6,-2,-1,1,8,-4,-3,-3,-9,1,1,-4,9,4,-2,3,-3,4,-1,8,10,-8,-2,5,-1,9,-6,2,4,9,10,-5,-8,-7,-3,8,8,-10,6,-2,-2,9,-5,-3,9,-5,7,-4,-9,6,5,-7,10,5,-3,-5,9,2,6,-5,1,-6,1,3,-10,-2,-3,-1,-8,-10,-7,-5,10,-2,-5,5,-8,2,10,9,-4,-6,2,9,6,-1,6,-9,5,7,10,-6,1,-8,-5,3,-8,6,6,1,7,-3,10,-1,3,5,-8,-2,2,3,8,9,-3,-9,-2,-3,2,4,-7,-5,3,-6,2,3,1,-1,10,-7,7,-5,6,-10,3,-8,-10,-3,-2,5,10],[-10,-4,9,1,10,-2,8,1,4,-1,6,-5,4,9,-3,-7,-9,-4,-6,4,4,9,4,10,-5,10,4,-2,5,8,-2,1,-8,10,1,-8,-8,8,10,-1,3,-8,-9,5,-6,1,8,9,-8,-9,-3,-5,5,-4,-5,2,8,-3,2,8,1,-8,-3,6,-6,-10,2,-1,-3,4,9,4,-7,2,-6,-9,-2,-9,-4,6,-10,10,-4,-10,5,2,9,-9,4,-8,-6,9,-4,2,-3,-9,-5,-6,-9,5,-2,7,-5,-8,10,1,-2,3,-1,5,5,9,-2,-8,-3,6,10,-7,-2,3,-2,7,7,2,-6,1,1,-1,9,6,2,7,7,-6,10,10,-6,-6,8,-10,-4,-8,-5,8,10,-3,-7,-6,-4,-3,6,6,10,-4,9,5,-6,-6,1,2,9,-6,8,3,8,8,-9,5,-6,10,-4,-7,-7,1,7,3,-1,-2,-3,-4,-1,5,7,-1,-1,-6,-5,3,-6,-2,-10,-8,-4,-3,-7,9,9,10,-4,-7,-2,-9,-6,9,-9,-6,7,-1,6,9,-8,1,-2,3,2,2,5,-10,-4,-6,3,-1,3,3,-5,-3,1,-2,7,-3,-7,2,8,6,3,6,-1,-6,8,-6,-4,-6,4,-9,3,-1,-9,-6,-7,1,-4,5,2,2,3,-3,-10,1,6,7,4,-4,1,1,2,-7,7,-2,7,10,-5,-6,-3,8,-9,-3,-3,9,6,-1,2,-7,-3,-9,-6,-10,-4,-3,-3,8,-8,-8,-7,4,-7,-4,-6,-9,1,-7,8,5,4,-9,-10,1,-8,-8,6,-8,10,1,2,-3,7,-9,7,-9,5,8,-4,5,5,-7,-7,3,7,-3,5,6,-6,-9,1,2,5,-1,-6,-1,10,-6,-2,-6,5,10,3,-2,-10,-2,8,-7,3,-1,4,3,-9,3,-8,-2,8,10,9,2,4,10,-7,4,5,-10,7,-7,2,8,10,-2,-4,-10,6,-10,-6,-2,-9,5,-2,-7,8,-5,-3,-2,-5,-1,-9,-9,5,-3,4,-5,2,9,5,-10,9,7,10,-4,4,-3,-8,-7,-6,5,-6,4,-10,-9,-10,-2,-6,-10,-8,3,-2,4,1,-5,2,8,10,-5,5,-7,-4,-2,6,7,8,6,6,-2,-3,-5,-6,-4,-3,9,4,-2,5,-9,10,6,5,10,4,-10,8,4,8,-2,-7,-10,-7,9,10,4,3,-8,2,10,9,-4,7,4,-6,-8,-5,3,-3,-5,-10,3,-7,-2,8,-8,3,-7,-2,6,5,-2,-4,-4,9,10,-8,-3,-3,-5,-6,-1,7,-1,-8,6,3,-6,4,4,1,3,8,-4,10,5,4,-8,1,-9,-8,-4,4,-8,2,-4,-9,-2,-4,9,8,1,-9,3,8,-10,-7,-7,-4,9,-10,-9,-9,-7,7,-6,-1,7,8,1,9,2,6,5,6,-6,-9,5,-5,-1,-8,7,8,9,-1,-9,10,6,-3,-5,-7,5,-7,-5,3,-7,5,-8,8,-6,-8,9,8,-5,8,-10,-3,10,5,2,-1,7,-3,-10,4,9,-3,-1,6,2,6,-9,-6,8,-6,9,1,5,5,-4,3,3,4,7,-10,5,10,4,5,-7,-2,10,4,-7,3,10,-5,-10,-6,10,-5,-9,-9,10,5,-6,-8,10,2,-1,-9,10,3,-6,8,-3,2,-7,5,6,-9,-6,-9,-8,-6,-7,-1,2,1,-3,3,-2,-9,6,8,-3,4,-5,10,5,4,2,9,1,9,8,1,-6,1,-4,6,8,-1,-5,8,-6,10,-2,-1,10,9,3,-10,-10,-3,-9,-6,-10,-2,7,-3,-4,10,-5,-9,2,-4,5,3,2,2,6,-10,4,-1,2,3,-10,-2,-5,-1,6,-9,9,8,10,5,-9,-4,9,-3,3,8,8,-10,8,7,5,7,-2,7,7,9,9,9,1,8,8,7,6,9,9,10,-6,9,-1,9,8,-6,-3,2,8,10,-8,4,-4,-7,-10,8,3,-3,4,4,2,-7,-6,-1,-3,-2,7,4,-10,-6,-10,-8,2,9,3,-7,5,2,-5,8,1,10,8,9,6,10,-10,3,10,-5,7,-10,6,-8,4,-10,7,-4,3,-7,-9,-7,5,-10,-1,-10,6,3,-3,-6,8,-5,-5,4,-2,-9,7,-1,-5,9,-7,6,-10,-9,1,-1,1,-6,7,-8,-10,-2,-4,-1,-6,-7,-1,6,6,-6,1,8,5,10,-5,-1,-5,3,-7,-8,-9,4,10,1,5,2,7,8,5,6,-4,6,1,9,-6,-9,-4,4,6,9,-5,7,-3,7,-5,-10,1,10,-5,-10,-8,5,3,-5,7,10,8,-5,6,-9,-5,10,4,8,9,-2,6,-8,-9,9,8,7,9,-7,5,6,6,8,5,9,3,-10,1,1,10,5,9,6,-5,5,-2,10,6,-7,-3,7,-10,-8,-5,-10,-8,7,-6,-7,5,-8,4,4,-7,3,1,-7,-6,-3,-3,8,-5,-9,5,9,2,8,9,-8,-6,8,10,10,10,7,-6,7,9,2,3,-7,-3,1,-8,8,-9,-3,2,6,-9,-7,7,8,-9,-1,4,-9,2,10,-8,-6,-5,-7,4,-2,6,8,5,-1,-6,9,10,-8,-8,4,7,5,9,-10,7,6,1,-9,7,1,4,-5,9,-9,-2,-3,3,2,3,-4,3,-4,-1,-3,4,-4,-7,7,10,3,8,-10,5,2,-5,-6,4,7,4,-6,5,1,6,-7,3,-10,-5,2,4,8,10,-8,-8,10,4,-2,-3,-2,-8,-7,9,2,8,4,9,9,-9,-2,3,-9,-7,7,-2,10,8,-3,-5,-10,10,-2,7,-8,10,3,3,2,3,-3,10,6,-3,4,-3,-8,10,4,3,6,-2,-1,-3,5,4,-2,1,2,-7,1,-3,-5,-1,4,10,1,1,5,5,-1,-9,-1,8,-6,4,-5,6,-1,8,1,5,10,-4,-9,6,-5,-2,-7,4,7,1,-4,-1,-4,-2,9,-6,3,-3,-6,4,-7,-2,7,8,-1,-6,-5,-1,8,-3,1,5,9,8,-8,-1,-9,9,-8,-9,-7,-5,4,1,-1,10,-6,-8,2,2,-8,-4,5,-4,2,1,10,2,-4,-7,-9,-7,-1,-8,2,-6,-5,7,6,3,5,-7,-10,9,4,-8,-5,6,1,1,-5,4,-7,-2,-2,-1,8,2,-1,-3,8,-7,-10,9,8,7,-6,5,-1,8,-1,2,9,1,-8,-4,-10,1,4,3,1,7,-10,3,-1,-7,-2,-6,-5,-2,3,-9,-6,3,2,4,-4,3,5,-5,8,9,-1,10,1,-8,7,7,8,5,-6,3,10,-3,-1,1,10,-9,6,8,-1,-4,-4,4,-1,-3,-8,6,-2,4,7,5,7,10,-3,-5,-5,-5,-9,2,-5,-8,3,2,-5,1,2,-1,9,-6],[-10,-9,7,-3,-10,-10,-9,-10,4,-8,-8,1,6,-1,-3,-1,6,-5,1,-3,2,8,10,4,1,3,2,9,5,-4,9,-1,-5,-1,-6,-9,-6,2,8,1,7,-7,9,-6,10,-5,7,-7,4,-9,10,3,-9,-3,-10,-4,-10,5,-1,-4,-2,1,4,-2,-5,3,10,-3,-10,6,3,-6,-3,2,1,-6,-6,-4,4,-1,8,-6,1,-9,-8,-2,7,5,8,-3,-7,3,5,-4,-5,9,2,-2,-5,-5,-6,-3,4,2,-9,-2,-5,8,2,2,-10,1,-6,-4,-3,-3,5,-3,-6,-2,1,1,-6,-9,-2,8,-2,3,-9,9,5,3,8,10,1,8,3,10,-10,-10,10,6,6,-1,6,8,-2,1,5,3,-1,-9,-4,-6,8,9,-5,-1,4,-5,-4,2,-4,-5,6,6,-2,-4,4,1,7,1,4,-4,-5,-1,-3,-4,-7,7,-10,-3,-10,7,8,-5,7,-10,7,1,2,-3,-6,4,-8,9,6,10,-10,9,4,-4,7,4,-7,-7,7,-3,-7,-8,-8,4,-8,9,1,7,-1,8,4,-3,9,9,-2,-8,-1,-5,-3,4,-1,-9,-10,-8,9,10,-10,-4,5,-4,10,-5,8,2,8,3,9,-2,10,2,7,-3,-5,5,-4,4,-1,-5,-10,2,-2,-7,-1,-2,10,10,-3,6,2,5,-10,-10,-9,-4,1,-7,3,4,5,-4,-7,4,-7,-8,-10,5,-4,-3,-7,2,-2,-10,4,-10,-9,6,9,8,10,5,8,4,-2,-5,-3,-8,7,-2,4,-4,6,-1,-1,9,2,5,-3,-2,-5,7,-5,5,-4,6,10,-3,9,-1,10,6,-5,3,-8,-4,-3,1,5,3,4,7,7,-10,1,-1,-1,-6,5,-6,-6,6,-9,-9,-4,4,-2,-1,1,7,3,7,-2,2,-2,-2,7,8,-6,2,1,-7,-9,2,-10,-3,7,-8,-3,-10,-9,3,-2,-5,2,-8,5,6,6,5,-8,-8,10,-6,8,-10,-8,-4,6,9,-9,10,4,8,-5,5,-1,8,1,-4,10,6,7,-8,-9,2,4,2,10,-10,-10,10,-8,-5,-4,7,-5,4,3,6,9,-10,9,-4,1,-8,7,-6,-6,-3,10,-6,3,6,2,-7,-7,5,-10,-9,-1,4,4,-4,-9,-3,-6,-5,-9,-4,10,-3,8,-6,-6,-9,-3,6,3,10,-8,-2,-3,5,7,-4,-1,-5,-4,-7,-8,-9,9,8,9,5,-2,4,-5,1,8,-8,-4,-6,-4,1,9,-2,-9,-10,8,-6,2,8,-8,-9,6,-3,-10,9,2,-7,9,-9,8,7,-7,-8,2,8,7,-4,5,-1,8,1,9,-3,7,-9,3,3,-10,9,-7,3,2,-6,7,-4,-9,-5,2,1,9,-6,-7,-10,-10,-2,-4,10,2,-5,-5,-6,-3,-5,8,-8,-5,9,3,-10,10,1,-6,-2,-9,9,-7,10,-5,-8,-8,-2,-1,4,2,-9,7,6,5,2,-6,-9,6,-6,-4,-6,1,5,8,-7,7,-1,-8,-8,5,-8,-2,8,8,-3,-8,-7,4,2,3,-10,-5,-5,-8,-9,-4,5,-6,8,-7,-8,-9,-6,7,4,-7,-2,-7,-9,-1,-9,-5,-3,-9,7,-1,3,-10,-2,8,8,-2,2,-7,-4,7,-5,10,-3,10,-7,5,-2,10,3,-2,5,-1,-3,8,-1,3,-7,-6,3,10,-9,-9,-1,5,-9,5,10,3,-8,-3,3,-5,-10,-1,-4,-5,6,-4,-5,1,7,-7,3,2,-8,8,-2,4,-3,7,7,-2,5,2,-6,-1,-10,-4,8,-2,-1,-2,5,-7,2,-6,3,4,4,8,-10,5,-1,10,-4,-8,5,10,-5,-10,10,-5,-4,2,6,7,1,3,2,-1,-8,-5,-10,-6,-3,-1,-10,5,7,1,-9,9,-4,-4,-10,5,6,2,7,1,4,-3,2,8,7,-5,10,8,10,2,-7,-7,-9,8,-7,-5,3,-5,10,-4,-5,-3,5,-10,-1,3,1,2,-9,5,-1,6,2,9,-7,7,4,-10,1,-3,4,2,-8,-3,-5,2,1,-10,-1,5,3,-1,-3,-5,-1,-9,-8,10,5,2,4,-4,4,-9,2,-5,7,-2,-7,3,7,2,-2,1,8,7,-7,-10,-6,10,-5,3,-10,-10,-3,-4,-6,-6,-1,-6,-10,4,6,2,4,-10,-4,-1,-9,1,8,4,2,-2,9,-5,-3,-6,-2,10,10,-7,4,-9,10,7,-5,-2,3,1,4,-10,-4,5,-7,-4,-3,-1,10,2,-2,-8,9,4,-5,-3,3,-5,2,-7,-3,5,-3,-4,6,2,4,5,-3,-7,-5,7,-6,9,2,-6,-8,-2,-5,3,-4,-1,9,2,-4,8,1,-9,8,6,5,-7,-3,3,7,1,-5,10,8,-3,10,4,-9,-10,-3,8,-8,-1,4,-9,4,-10,2,-10,-1,5,-8,-7,-3,3,3,4,-6,4,-2,9,-3,-4,1,9,1,-5,2,4,-9,1,-10,-7,3,6,-2,-1,6,-2,-1,8,5,-9,-7,4,3,10,-4,2,8,-3,3,-7,-1,-5,-10,-4,-8,3,9,-1,-5,-6,10,6,-5,6,5,6,-2,8,-4,8,9,-7,-1,1,-1,-6,-4,-7,-3,7,-6,-4,4,2,-8,9,-4,-4,-7,10,1,-7,8,7,6,-9,-9,-5,-9,-2,-9,-2,9,7,-2,-2,-5,-1,-4,6,2,-4,-10,-5,-8,-6,8,-10,-6,1,-4,-5,5,-3,4,-8,-5,-9,-3,-6,1,-8,1,-4,-4,7,1,6,5,2,9,8,-6,10,1,-2,9,-9,-9,7,1,1,3,-5,-7,10,1,-9,-4,6,-9,8,-10,8,4,-1,7,-5,9,3,-9,3,10,6,-3,1,-1,-9,10,10,-3,6,-3,2,-3,10,-9,-1,-5,5,9,1,7,-3,-9,10,4,-2,9,10,1,3,5,1,10,1,3,9,3,-8,5,-4,4,-5,-2,-2,-9,4,-8,3,10,7,-5,5,8,-2,-1,-1,2,7,-3,10,-5,-5,9,3,1,5,6,-5,3,-9,-4,1,-6,-2,9,-10,-6,7,4,-7,10,2,1,-4,7,-9,2,6,8,7,-2,2,-4,5,1,-3,-3,-8,-4,-9,6,1,9,5,9,-5,-3,-1,7,6,-10,-10,-6,9,3,-3,7,-6,-3,-6,-5,3,9,6,2,6,1,-8,6,-8,-5,-5,-5,1,-2,-8,7,6,7,-3,-3,4,-5,-10,-10,-8,-7,9,6,10,8,-6,1,-2,5,1,4,-2,8,10,10,2,2,1,-3,5,-1,8,-2,-2,6,5,-9,-1,-8,-2,10,8,-7,-10,-10,-4,6,4,-2,7,2,-10,-8,7,-3,-6,4,4,3,-2,9,-5,-7,4,-7,-7,-4,9,9,10,4,-4,-2],[-10,10,-9,7,5,4,3,-2,-10,9,-10,3,10,-8,6,3,-4,-9,4,-8,9,-8,-1,3,7,-1,10,-7,-3,-7,6,6,-2,4,10,7,-1,-2,-7,4,-6,-1,8,7,6,10,-3,-1,-3,3,4,-3,-6,7,-1,-9,7,1,9,-7,-3,4,-7,-3,9,-2,-7,-8,-3,8,8,-8,7,-10,-1,-1,6,-10,-2,1,-10,-2,1,10,7,-5,5,-7,7,7,4,2,-5,3,7,7,-1,4,1,6,-6,-10,-8,-1,4,-5,-8,-10,-1,-8,-9,8,6,-3,-10,4,2,4,2,-5,5,-7,-8,6,2,-10,1,-4,-3,-5,-6,8,-4,7,10,-6,-3,10,2,1,-3,8,2,-2,-6,8,7,-9,-10,9,-10,9,-10,7,8,-7,-10,5,-4,6,4,-4,-10,2,-1,4,-7,-7,1,-8,-3,-9,9,-4,9,-7,-6,3,-3,-7,-7,-6,-3,9,8,-4,4,3,-7,10,-8,10,7,-9,-10,5,-7,-10,-5,-6,-8,-3,6,-8,2,9,-5,2,-4,-4,-7,-10,1,7,-10,-10,-5,-3,-8,4,-10,-10,3,9,-2,2,2,-6,-5,-1,-7,-5,4,5,-2,-2,5,-9,5,-8,1,-8,3,7,8,4,9,-2,-9,6,8,-4,-1,1,-1,3,-10,-8,-5,-2,-5,10,6,-8,9,-8,2,-1,-5,9,3,1,-10,-6,-5,10,5,-3,-2,-7,7,-1,9,1,6,1,9,3,-2,6,7,7,-8,2,3,2,-7,6,4,-10,-9,-10,-5,-10,1,-2,6,8,-10,-3,-10,-1,-9,-2,8,5,-5,6,7,-6,-5,-7,-10,4,-5,-2,-3,3,4,5,9,9,-5,5,2,10,-2,8,-2,-1,-7,-6,-8,2,-8,3,-5,3,-5,1,2,5,-10,5,3,-3,-6,3,-9,5,-2,-5,9,6,-8,3,2,-3,1,8,-1,6,-1,-3,-4,8,-7,2,10,-1,-6,-8,2,-5,-9,-7,-6,-8,-10,7,-1,9,-7,5,-8,8,1,-4,-9,-6,-4,9,-3,-4,9,-8,-6,8,5,-3,-10,-9,-8,3,-4,6,-1,-5,-1,9,2,-2,-6,4,-4,6,-7,-4,-8,4,8,-9,6,-5,-4,-9,-4,7,-1,-3,7,8,2,10,-3,-1,8,-1,-3,3,1,-6,-3,6,3,9,-9,-3,-3,3,1,6,-6,-4,-3,8,9,10,-8,-7,8,-10,-5,9,8,-1,-8,10,3,-4,-3,10,-10,-5,1,-7,8,-7,10,8,-10,9,-7,1,-3,6,-1,9,1,8,-5,-2,-2,-5,-4,2,-3,1,10,-2,1,10,-8,-1,-2,-10,6,10,-10,-2,-2,-10,7,-7,-7,1,-8,-10,-9,-5,10,8,5,5,4,2,4,-1,3,-10,-6,6,2,-10,7,-10,1,4,-7,-3,-6,7,5,3,-5,-8,-3,-8,-10,-6,4,-5,-5,2,8,2,-10,-6,-6,-5,-1,5,7,9,-2,6,2,-2,2,8,1,6,9,-8,-10,-8,-6,-2,-6,2,-7,-3,-2,5,-3,6,5,5,1,-8,8,1,-1,-9,-6,-3,9,-2,-5,7,-4,-1,-2,-2,2,5,8,-6,-10,3,3,-9,-6,-7,1,-8,-4,3,-7,-2,-3,-1,-2,-9,9,8,-8,8,1,-6,7,7,-4,1,3,10,-10,-8,-5,7,-7,-10,4,-2,1,-7,-1,-4,-5,6,-8,-6,5,-3,1,8,4,6,6,-3,3,9,-4,-10,-8,9,-1,4,-10,-10,-4,-10,6,8,-3,1,3,-1,3,-8,-6,-4,-1,-6,-5,2,5,-10,8,-7,1,7,7,2,9,-8,-8,-3,3,10,6,-7,-5,-5,9,2,-9,-5,-8,4,-9,-4,7,6,9,-5,-9,7,1,7,-6,-9,9,-9,3,4,-8,-6,6,-4,-9,9,3,-2,-9,-6,9,10,-1,4,-6,5,5,-10,5,-3,5,4,9,6,-6,-5,-10,-2,-5,5,5,7,3,-10,-1,5,-4,-6,7,-2,-4,8,3,-5,8,-2,-1,-4,6,7,6,5,-2,-4,-5,-2,3,-5,1,5,-1,6,-5,10,-2,-7,8,-10,-5,7,-1,8,-10,2,-2,-3,-3,-7,-7,10,-4,10,10,-2,6,-2,-10,-3,-3,2,-4,-10,-3,-7,-4,2,3,9,3,8,-5,-6,-3,5,-6,3,1,-8,10,5,-4,1,-8,-3,-4,-2,-3,3,-9,-4,-5,-8,-2,-3,4,4,4,5,8,6,-9,2,-7,10,3,-3,-2,-9,7,-7,-9,-7,8,6,10,-9,-8,-10,6,-3,5,1,6,4,-1,4,-3,2,5,-9,-10,5,-9,-5,5,6,-5,-9,-7,6,-1,-6,5,6,-6,6,-3,-5,6,-9,-9,2,2,-5,-2,4,1,-10,8,8,-10,1,5,-8,-8,-5,10,1,9,-10,6,8,4,6,1,5,8,7,-1,-6,9,-8,-7,2,4,10,-6,1,-4,1,1,-9,3,4,-8,-7,-10,-6,1,-4,10,8,10,-7,6,-2,-5,8,4,5,2,8,6,-8,4,3,6,9,1,-4,3,6,6,9,5,1,6,9,5,-9,9,-2,-5,5,-6,-3,-5,-8,-2,-1,1,-6,3,-8,-3,7,1,1,10,-2,-4,-7,5,-10,-2,-7,4,9,1,8,-8,-7,6,-7,-3,5,5,8,7,6,-10,-4,6,-4,3,-10,6,-10,-5,-9,5,8,5,-7,-8,6,5,4,3,8,-1,9,-6,-10,-7,1,-6,-1,9,-5,-4,-4,-1,10,-8,2,-9,-7,-1,7,-9,-1,9,5,-3,-2,-3,3,9,-8,4,-6,-10,-7,1,10,-2,4,4,-9,2,-1,10,-9,-1,-5,4,7,6,6,10,9,8,3,-5,-8,-4,3,4,2,-6,10,10,-5,-3,-4,-8,7,6,-7,-2,9,-3,1,-2,-3,-2,10,2,8,8,-2,-5,-4,9,-4,-8,9,5,1,5,-8,8,-10,-3,10,2,-10,9,2,7,8,-10,9,7,7,-5,-10,4,7,-2,-1,-9,5,-4,7,-2,-5,4,-2,-3,6,3,-2,7,4,-6,-6,-5,4,-8,9,10,4,9,6,2,-1,-7,4,2,-5,-5,3,4,9,10,9,3,3,-9,5,2,-8,1,-5,2,-9,-3,-8,2,6,-5,-4,-2,2,10,3,-5,1,7,-9,7,7,-2,6,2,10,1,-10,4,4,-1,-4,-2,-2,-10,-7,9,-7,-10,-7,-9,2,2,2,-3,-8,5,-3,-8,3,8,-4,-5,7,4,-10,2,2,5,8,10,4,-9,-2,2,4,7,-6,-9,-10,1,-7,-1,7,-2,-3,2,-10,4,7,-9,-7,-8,-3,-8,-9,2,-1,4,-10,-2,3,-2,-2,-6,6,9,4,-8,4,9,-6,1,5,-5,6,-9,9,3,-2,2,4],[1,1,-4,-7,10,3,1,9,-4,3,-1,7,-6,2,-6,1,6,-1,7,-3,-3,8,-6,-2,-1,6,-9,-7,3,-7,6,10,-10,-4,9,7,6,6,2,6,4,7,-6,-10,-2,8,5,-3,9,5,5,-9,-7,6,-4,-5,4,-2,4,7,-9,7,-5,10,-8,-1,4,5,-7,-1,3,9,-5,8,-5,9,-2,-9,-7,-10,-1,-7,10,-6,-2,10,-2,5,-4,-9,7,-4,-2,-5,-9,3,5,4,-1,6,7,3,7,-7,10,-9,-1,6,-5,4,6,-3,-7,-10,-9,-6,-2,-4,-6,9,6,-2,2,-4,-9,-10,-8,-9,2,-5,-8,7,-9,-9,3,-10,-8,10,10,-7,-2,7,-2,5,8,4,3,5,4,9,-4,6,3,3,10,6,9,-2,-2,4,8,-5,1,5,2,3,-6,9,7,-5,-2,-8,6,1,-6,-7,4,7,10,3,7,9,6,-3,7,-9,10,-7,9,4,4,-2,-1,-6,-1,2,-6,1,8,7,3,4,7,-8,1,2,3,-4,4,-3,10,5,8,-1,2,-2,6,-6,7,-9,-8,-4,6,-5,-7,-5,6,4,-8,10,3,-4,-8,-1,-8,3,-1,9,4,-6,-2,7,-3,-4,6,-2,6,9,8,-8,10,4,-10,-7,-5,-3,-7,7,-3,-2,4,7,2,5,6,6,-7,-7,3,1,-10,7,7,7,6,9,5,-10,-4,7,-8,-7,-3,-2,-8,-4,-9,6,-6,8,-2,10,6,4,-6,-1,-4,-1,-1,-3,8,-9,-8,-5,-6,6,9,-9,7,5,4,10,-4,-5,4,6,-7,10,-8,2,5,5,-4,-1,8,6,1,2,-7,-10,6,4,1,-9,-9,4,-8,10,-3,-5,-6,-5,-9,2,-5,-10,10,-4,-9,1,-5,4,6,-5,4,10,-5,6,-1,3,-5,-6,-8,-8,-3,-5,-4,2,-10,8,1,3,-4,-9,1,10,-4,1,-9,8,-5,-2,9,-10,-3,4,-8,-9,10,-9,1,-7,8,-8,6,-8,-7,2,6,-9,-10,-4,-4,1,4,-4,-9,-1,-10,3,5,9,-4,9,2,-9,-3,-3,6,10,3,-5,7,-1,-7,5,8,5,6,9,4,-2,-9,-3,-8,6,-6,-6,-9,4,-1,-7,4,10,5,-7,7,5,4,-2,-8,-8,9,1,-2,5,3,-4,-5,-6,2,-9,-5,-7,-2,-3,-7,-7,4,-6,3,2,3,-5,-8,9,4,-1,4,-8,-6,9,4,2,3,6,9,-4,-2,3,9,2,-1,4,10,4,-5,-9,-8,-10,-1,7,-4,6,-9,6,2,3,10,1,-1,5,-7,-8,-7,5,3,-10,2,-5,-3,-1,8,10,-5,-7,7,4,-6,8,9,1,-5,10,-7,2,-5,-6,-1,2,-7,-10,-1,-8,-7,2,2,-9,-6,-8,-2,-2,-3,10,5,10,1,6,-6,-10,-5,-8,-8,5,6,7,-4,-4,7,3,-8,-4,2,-2,6,-3,6,7,-8,8,-8,1,3,-10,-3,-10,5,9,-4,8,-5,-1,2,-5,-2,6,7,1,7,10,-4,1,6,9,-3,2,-7,6,-2,-4,3,6,9,2,9,-6,-4,-2,-6,-10,7,-6,-6,-8,3,-5,-1,-8,8,-8,2,10,10,-4,-3,7,8,-8,6,-3,7,-7,8,-3,-7,-3,-5,-5,-5,1,-5,1,10,8,-3,-6,8,3,1,10,4,-7,8,-2,-2,2,1,-3,-1,10,-1,-8,-2,-4,-6,-10,-10,9,-10,-1,-6,-2,-8,-2,5,5,-8,6,6,4,-4,2,3,2,-2,8,7,9,-4,-4,-4,-8,6,2,-3,1,1,3,-5,-9,-9,-9,6,4,8,2,1,-4,-3,-8,-5,4,-4,-3,-2,-8,-9,9,-2,9,3,1,1,-10,6,-1,-8,-8,-1,-1,-1,-4,-3,-10,-8,-6,10,6,5,-6,-5,-1,-9,5,-7,-3,-3,-3,-3,-1,1,5,-7,3,-8,-2,-3,6,-3,3,5,-10,-6,5,5,-2,3,8,-8,-3,-9,9,-9,5,4,-2,6,9,7,9,10,-10,9,-5,10,-1,-5,10,-5,-4,3,-10,-9,8,3,-8,1,9,8,6,4,-7,-10,-10,2,-4,1,-3,-2,-4,10,-9,-2,2,-2,7,8,2,-3,-2,8,9,1,8,2,-8,6,3,6,7,4,2,8,-1,-8,-7,9,4,7,-3,5,-1,-9,-8,-2,2,7,-1,8,9,4,-2,1,3,7,-6,7,5,6,10,-6,-7,6,1,9,-2,3,4,-10,-1,2,3,-9,-5,10,4,-10,1,8,-2,2,-7,-1,-1,9,10,-1,9,1,-2,1,-7,6,7,-1,-10,6,-10,-10,8,4,9,10,5,3,-2,-3,5,10,3,2,4,1,-5,-6,-10,-10,6,-8,3,8,8,-6,-5,5,-8,3,5,10,5,-10,8,6,1,-7,-7,-10,10,-8,-4,3,9,8,10,-3,-7,9,-4,1,9,2,5,-1,-9,8,-1,9,-6,6,-8,10,6,1,6,-7,-2,-1,10,1,-2,-5,1,4,5,-1,1,-6,-3,-6,1,-4,-2,-1,8,2,-3,2,2,-1,-6,-10,8,-1,-5,7,-10,-10,-7,-5,-6,-4,5,-5,10,6,2,2,-1,8,9,3,-8,2,-7,2,-5,2,-10,8,3,-7,-9,-5,-1,-8,10,-2,6,6,2,-7,-4,-6,6,-6,8,-5,4,9,3,-8,1,-3,-5,-2,-7,-3,-8,5,4,4,-9,-9,1,10,7,6,9,7,-8,-10,-10,6,-3,5,-6,-7,9,8,8,-3,8,-5,9,-1,-4,2,4,-5,10,-4,8,1,-1,-7,-7,-4,-10,-1,2,3,-5,-2,-2,-7,7,-9,3,4,9,3,-2,2,-7,-8,-7,6,6,10,-5,4,-8,-6,-3,5,2,9,-4,-5,-5,9,-3,-3,-3,1,-2,1,-8,-1,9,-4,-1,-4,-5,5,1,-4,-10,-3,2,2,-9,-3,2,-7,-9,2,5,6,-7,9,-6,-2,10,9,1,7,4,4,-4,-9,-3,5,-10,-7,-2,3,-1,-2,2,4,-3,-1,1,-5,8,7,6,9,-3,-3,3,4,-2,-7,-10,-6,-2,-9,6,-7,9,-6,-6,-3,9,3,-3,-8,-3,-9,-5,-5,-6,7,10,4,8,8,-7,10,-8,-10,1,-8,-2,-7,-4,2,-9,-1,3,-2,-7,4,3,10,8,-4,9,-5,-1,-7,-5,6,-10,-4,-2,5,-7,5,-4,3,6,-10,1,7,-8,-6,5,-8,9,-9,10,-2,4,9,2,-9,1,-5,-7,-4,-7,9,-4,-7,2,-6,10,9,5,2,-10,-8,-10,-3,5,1,10,6,-10,-7,-8,3,10,4,10,3,-4,-2,5,-3,-5,-2,6,-6,-10,-7,7,8,1,-1,7,4,-6,-8,-4,-1,7],[1,-3,10,-4,-2,8,-6,-2,-2,4,2,4,1,3,6,-7,-3,-6,4,1,-8,-5,-8,3,8,7,7,2,-1,2,-6,4,9,-4,7,8,4,2,-2,3,-4,4,4,-1,-2,10,-2,-7,4,4,7,-9,-7,3,7,1,-8,3,10,7,-7,-10,-1,9,-8,-9,5,8,-10,-3,-6,-10,-9,6,-7,1,-8,-2,-8,6,-6,-1,-4,4,9,-3,-10,-9,6,-10,6,6,4,7,-10,8,-10,6,-9,8,-6,4,3,-6,-9,-1,-2,3,6,-6,4,10,-4,-8,7,-10,8,-10,7,10,-4,5,10,2,7,-2,-3,-5,-1,9,-8,2,4,6,7,9,7,-9,-1,2,-8,-9,9,9,6,7,-8,-9,-10,-6,-1,10,9,6,10,-8,-4,-9,-10,2,-6,-9,9,-9,-6,-6,9,6,5,10,4,2,-4,1,-1,1,4,-2,-9,-2,5,2,3,-6,4,4,5,-5,10,4,-1,-7,-4,-1,-1,9,-10,3,-1,-6,6,-2,-7,-9,-5,6,-7,-2,-3,5,-6,3,-5,3,-5,10,8,-10,9,2,4,9,-1,2,3,-2,-10,-7,1,-1,-9,-8,5,2,9,5,1,5,-6,-10,2,10,-6,9,8,-4,2,-6,1,-10,-3,6,-10,8,7,7,-7,-3,3,-10,3,10,5,-2,-5,1,-9,1,-7,5,6,-5,-8,-8,10,4,2,-1,-1,7,5,-5,4,-4,-5,-7,1,-6,10,-2,9,-6,-3,10,-9,-9,3,-9,-9,10,-3,7,-8,-5,-4,-1,-6,-6,5,10,-2,-10,-4,-4,3,-9,10,2,-6,8,-7,-6,7,9,-9,8,9,-8,1,8,-5,-2,-10,7,-3,-7,-4,-1,-5,7,-1,-5,4,-5,-5,-9,-9,-9,7,-4,-1,-1,6,-7,4,4,8,-10,-5,7,10,-4,9,6,9,8,-3,-2,3,-9,-3,4,4,-4,-1,-1,-9,9,-6,5,7,5,2,-8,-9,2,1,1,-2,-6,-8,-3,10,6,-7,5,-6,-3,-8,-3,-7,8,3,-5,6,9,8,10,3,8,-9,-5,1,-3,-8,-7,3,3,5,-10,-9,5,-10,7,-1,5,-6,-4,8,-8,-6,-1,2,-5,-4,-10,-6,2,9,1,-4,1,9,-1,-7,-3,-5,3,10,4,5,-9,-8,8,2,-1,-8,-10,-2,-3,-9,-1,1,-2,4,-7,8,1,-8,-5,-8,1,-1,-2,2,-1,4,-7,-7,-7,3,-9,1,8,9,-2,-2,-3,-3,-5,2,6,-7,10,2,-5,3,-7,-8,-2,10,3,6,-6,-3,-4,6,-1,-2,9,10,8,-1,-6,10,5,-3,-4,6,-7,-3,-6,-10,-4,-9,8,-8,-3,-3,-6,-8,-5,-9,7,10,-8,5,-4,2,1,2,3,8,-8,4,4,-7,10,-7,-3,2,-2,5,6,-7,-1,8,8,9,-7,-10,-4,7,2,4,4,9,7,-3,3,9,8,9,3,2,10,8,-10,1,-2,-9,5,2,4,-4,-5,3,2,9,-10,5,2,8,-10,-4,-6,-7,-3,-4,4,7,2,-3,4,2,-3,-7,-10,-7,-6,3,5,4,10,-8,5,-6,-5,-3,-2,-4,2,10,-4,2,-9,1,-6,-4,2,-3,-7,-6,-9,-3,6,6,7,-7,4,-1,4,-6,9,-9,4,-2,10,-5,-8,1,-6,-9,-4,3,6,8,-8,-2,-8,1,-2,5,10,-2,10,2,2,-8,8,4,-5,-7,9,-1,-2,-9,3,8,-5,4,8,1,7,-6,-1,10,3,9,9,-6,-10,5,8,9,-8,9,8,3,9,2,-10,-6,-10,-2,2,-9,-3,-8,-10,4,-3,-3,3,6,-5,-2,1,-7,-2,9,9,8,4,2,-4,-3,7,8,2,-4,4,-4,-3,-5,10,-8,-6,10,2,-6,-8,5,-3,-7,-9,-1,-6,-8,-6,5,1,-6,2,6,7,2,1,3,10,-8,-1,-2,6,6,-4,-7,-6,1,8,-2,1,2,-1,7,-7,2,8,6,3,3,5,-4,2,7,-5,6,-2,2,-5,5,-6,1,1,5,9,5,9,-5,5,10,10,9,-6,5,10,5,-1,9,4,-7,-3,9,2,-4,5,-10,-1,8,10,1,5,7,2,7,-1,1,9,-9,-1,9,-6,-10,9,-6,-1,-2,-1,-4,4,-9,8,-2,-9,9,1,-3,-10,-6,10,10,7,10,9,-2,-7,-2,2,-3,3,8,-1,-3,-7,10,10,-1,-1,6,-6,5,-1,8,10,-4,-3,-1,5,-7,-2,2,-6,1,-3,-7,7,-2,-2,-4,4,-7,10,3,-1,-10,7,7,4,-1,8,7,4,6,4,8,7,4,3,-5,-10,-9,6,10,-5,8,-1,-1,-8,10,-6,-7,4,-2,-1,-1,-1,-7,8,8,8,-9,5,-5,6,3,4,8,-5,4,5,-8,6,5,3,-9,1,4,-7,-9,4,6,-3,-3,5,6,-3,-8,10,-4,1,7,-1,-8,-8,3,8,-10,-6,-1,10,-2,-4,5,6,-8,-5,8,4,6,4,5,-9,-5,8,5,-5,-3,9,-2,9,1,5,-10,7,2,-5,3,4,8,-8,-1,2,-2,4,-6,-4,-5,-10,7,-10,1,7,-9,4,2,4,6,9,-9,-4,4,-3,6,-5,-3,5,2,7,-5,-3,-4,-2,3,8,4,6,-9,-8,-4,-1,2,10,8,-7,2,-9,7,9,-3,-1,-1,7,-7,7,2,10,-2,7,-10,2,-6,-8,-4,-2,-6,-6,-1,-4,-9,-2,9,-4,2,4,8,4,8,-7,-9,-1,-4,-1,-1,-5,-8,-1,7,-1,-9,-9,-10,2,-4,-4,2,9,4,2,7,-6,-2,-3,4,-8,-8,1,1,-7,6,2,-7,-5,3,6,5,-4,-1,-8,10,10,-6,-5,6,-3,-5,2,8,-3,-7,10,3,8,2,8,3,-9,9,-5,-9,-9,5,-6,-3,3,-10,-1,-10,4,7,5,8,-9,9,-3,-4,3,-6,-2,8,8,-10,-10,7,4,5,-4,-3,-1,-8,-3,7,-10,4,3,-9,1,-9,2,6,2,3,-6,2,1,2,-10,9,-5,2,-9,10,-10,1,-6,8,-8,-7,-7,4,7,-1,6,-7,-5,10,9,3,8,3,-1,-4,-10,-5,-8,-7,4,1,8,-2,8,4,-1,-9,1,5,-1,-4,9,-9,8,-3,-4,2,-4,-4,8,10,-4,-10,-10,-10,-5,-5,-4,3,-2,4,-5,-5,-3,-1,-6,-2,-1,9,9,-6,4,9,6,9,2,-4,-10,-6,-8,3,10,-8,8,-4,-9,-1,2,10,-4,5,-4,1,-8,6,3,-3,7,-4,9,1,-8,10,2,9,-10,-2,-5,-10,-1,10,8,-9,-5,9,2,-9,-2,-2,10,10,8,-6,-4,-6,3,-1,9,3,2,5,1,4,-4],[8,10,6,8,8,8,-9,10,-9,9,-1,3,-6,-2,6,9,-2,1,-4,9,5,6,6,5,4,-9,-6,1,-7,-4,-8,6,-1,-7,-8,-1,-2,6,-2,7,-4,1,9,5,4,8,4,4,-4,2,-7,-2,9,-1,8,9,4,-5,-1,-8,10,10,3,9,7,7,6,7,1,8,-5,3,-6,-2,-1,-3,6,4,9,7,7,-2,-5,-8,-8,-6,-3,4,-1,6,7,-4,-3,2,-4,-8,5,5,10,6,2,-2,-3,4,-3,8,10,-2,-10,2,5,6,9,-8,9,-8,-8,-7,7,6,4,7,-6,4,5,-2,6,-8,3,8,4,4,6,-4,5,-2,-6,2,10,-9,-3,-5,3,6,3,-8,9,8,5,8,-4,8,1,-1,7,-6,-3,9,-8,1,-10,6,-1,5,-6,6,3,-9,6,-7,-2,-1,-6,2,-9,3,2,-1,6,10,8,4,-2,10,-3,-8,10,3,-4,-9,-5,-2,-6,1,8,-5,-7,-2,2,-4,-6,3,6,3,-8,-2,-9,-2,-9,8,-6,6,2,2,-7,-2,-1,-1,10,6,6,-2,6,9,-1,-5,-10,10,-8,-7,-7,9,5,-6,4,2,1,7,2,-5,1,-7,10,2,-10,-4,-9,6,5,-8,3,2,-3,-3,3,7,-7,-6,4,4,8,-10,5,2,7,10,9,5,-1,9,6,7,-2,2,-2,9,-6,-8,4,-2,1,2,6,-1,6,8,-8,7,1,-6,-8,2,4,7,-3,1,-1,-3,8,3,-6,8,-9,3,-6,2,4,10,-7,5,5,3,9,-4,-9,-3,-9,6,7,5,-8,7,-2,-7,-3,-6,-10,-6,-2,6,-9,-6,-9,4,2,9,-8,-10,-5,-7,3,9,-4,-2,7,-10,8,-3,-8,5,8,-8,10,7,6,4,-1,3,-7,-4,7,-9,7,6,-8,-5,-4,-3,2,-2,5,-8,-8,-4,7,1,9,1,-1,1,-7,-8,-1,5,-2,-2,4,7,-2,-9,6,-5,2,-1,2,-4,10,9,-4,5,-3,7,6,1,3,-8,-2,2,-8,6,-8,-8,4,-2,-4,-6,-1,-4,7,6,5,-6,5,-10,-4,-5,-7,-3,-2,1,9,3,-2,-10,4,6,-7,6,-4,-7,3,1,6,-2,8,-4,-3,-8,8,4,3,1,4,-4,-6,-7,2,10,3,-6,-7,7,-1,-5,-4,-1,8,-6,3,-1,10,9,-7,10,1,2,-8,6,-5,-10,-9,-7,-5,9,3,-9,7,3,-7,5,-10,-3,-7,8,1,2,-1,7,2,-5,6,-7,2,-1,4,-6,-5,1,-10,-4,8,-5,7,-6,9,-5,7,-10,-4,9,-6,-10,-4,1,-3,8,-4,-2,-4,3,10,-8,2,8,-8,-3,2,3,4,1,-2,-9,-10,7,-9,-7,8,8,3,5,-2,6,-2,9,5,-5,9,-1,-7,4,1,-7,-9,1,2,5,-6,10,-10,-6,-1,1,-7,2,3,9,9,4,-10,2,-3,-8,6,7,-8,-2,-5,10,7,5,-8,-5,10,-5,-4,-4,3,-6,-1,6,7,10,-1,2,-2,10,-1,9,6,-6,10,-9,-4,-2,9,4,-6,-6,5,-6,6,9,1,-3,-1,-9,-8,5,-1,-7,-7,-6,3,9,-1,7,3,9,1,2,10,6,-8,-8,-8,-1,5,-7,9,-8,-2,-2,-10,-8,-2,6,2,7,-1,-8,1,-5,7,7,-9,-10,2,8,2,5,-8,3,-1,9,7,-2,-9,7,10,-5,10,1,-7,4,-7,-1,-7,5,7,9,-1,4,-1,-5,-4,-1,-6,-6,3,10,8,5,8,-3,-1,-10,-7,-2,5,9,-10,4,5,8,-2,10,-2,5,-6,-6,3,1,10,8,3,-7,-2,-10,2,6,10,6,-2,3,-1,5,7,-4,9,2,-3,-6,1,1,6,7,-5,8,-4,-5,2,-9,-6,-5,8,9,-8,4,3,-3,5,6,5,-5,-7,-5,2,7,8,-5,3,8,10,-1,9,1,7,4,-3,10,1,8,-9,1,1,6,9,5,7,-2,1,-2,3,10,-7,6,6,-1,-3,4,10,7,-5,-9,-10,1,-4,-10,9,3,-2,3,-4,-5,-1,-10,1,10,-10,8,-10,3,-4,-3,5,-8,-6,5,9,7,-10,-9,-4,9,-8,6,-8,1,2,-4,9,-1,6,5,7,5,10,-10,-5,-2,8,10,-7,-7,-7,5,4,3,4,-5,-1,-8,-6,-5,7,-5,-5,10,-8,-10,-9,-2,-3,-3,2,-7,10,-4,-2,-9,-6,4,9,-5,3,3,2,-5,10,-1,-7,5,-2,6,-8,4,1,-7,-4,-9,-8,8,-10,5,10,4,2,7,-8,9,9,-2,-3,-3,1,-5,6,1,6,-8,1,8,-1,9,-9,7,-6,-10,-8,-8,-7,-10,-8,-3,-8,-5,-4,2,7,7,4,7,3,-8,2,-3,-1,-4,-5,-5,9,-2,2,-10,-7,-6,1,10,-1,-8,-8,-2,4,-8,-4,-2,3,-5,7,-4,2,-7,3,10,10,7,-9,-7,-6,1,-7,2,-6,7,-4,-8,-10,3,6,7,3,2,-2,4,3,7,-8,-4,-8,8,1,-2,2,-6,1,4,9,6,6,-9,-7,1,-7,-10,5,9,-3,-6,-10,-5,10,-5,-7,10,2,4,-8,-7,-1,10,-4,-1,1,3,-4,2,-10,-10,-9,2,-2,3,3,-2,6,10,10,8,-1,-5,-3,-8,6,-2,10,8,-10,1,2,8,5,9,-1,1,10,-8,2,6,6,3,-9,8,-4,3,-4,6,-10,7,2,5,3,-4,1,-1,7,-3,-6,8,-1,8,3,-5,10,6,9,5,9,4,-1,-9,2,-5,-6,-10,5,2,-3,4,-8,-7,-4,-8,-4,-6,-1,3,8,2,2,-1,-10,-8,-10,4,3,-5,-4,1,-5,-2,2,10,5,4,-1,-8,-5,-2,7,3,9,-6,-8,2,-3,-2,2,-3,-1,6,-1,5,-1,1,4,5,-1,-10,-7,4,7,-3,7,7,4,-2,-10,-10,-3,-8,-4,-4,-5,6,5,1,8,-4,-1,-7,-8,9,7,10,2,-8,-10,-3,-7,6,1,-5,-1,-5,1,9,-2,-7,10,8,-5,10,9,2,-2,-7,6,-1,-2,-1,-10,-10,1,-1,7,4,-8,-7,8,4,-10,3,4,2,2,-8,-4,-7,10,-5,-9,-6,3,-5,-7,-9,9,-10,7,8,-7,-4,-9,-5,2,3,-9,8,4,-3,2,7,-5,4,-1,1,-1,9,9,8,-4,-3,-1,4,-4,-8,10,-8,4,-5,4,-5,3,4,7,-1,4,5,5,-1,-8,-7,-4,-1,5,-3,4,-6,1,-6,4,1,-1,1,6,9,1,-2,9,1,-1,-4,2,9,2,4,-5,1,-9,-4,-6,-3,-8,-2,-10,2,-9,6,8,7],[-3,5,-3,-5,-1,-1,3,4,9,-8,-10,2,-1,-3,6,-1,10,-8,-4,-7,-6,-4,2,-10,-5,-4,3,6,-4,4,-10,8,3,-3,3,-4,10,-7,7,7,-8,-10,-7,-4,7,1,-5,9,7,6,6,10,-1,10,4,1,8,-10,10,-6,-2,-6,5,4,9,-5,-2,-1,-10,1,10,-6,5,-5,-8,2,7,-6,3,-8,1,-9,6,8,-3,-2,2,1,-1,-10,9,-2,10,-1,-9,-7,-2,-5,-8,-6,1,4,-5,-1,-3,-9,3,-9,9,-7,-8,-9,1,-7,-9,10,3,5,8,4,7,4,-5,4,-2,2,-5,8,-7,5,-10,-5,-8,10,-6,-9,-8,-2,7,-6,-7,7,-9,8,-2,1,-9,-4,9,-6,8,8,10,8,-8,-4,-3,6,8,8,-6,-3,-7,3,10,-3,-5,-4,-4,10,-9,6,-7,-5,-6,-6,-4,-7,-3,1,10,-2,4,7,10,-10,2,-2,10,-6,2,9,9,9,6,7,-3,-8,7,-6,3,-8,4,5,-7,10,-3,7,3,-3,-7,3,-9,8,-6,-3,-10,7,-10,8,3,9,5,7,-4,-6,-1,1,-2,6,-3,9,9,-9,-8,8,-5,9,-5,-7,-7,9,4,9,-1,5,5,1,-10,3,-7,1,-8,-1,7,1,3,-3,2,-6,-9,10,5,-8,-10,-6,3,-9,8,-5,10,-10,-8,3,-6,-4,9,9,-5,-10,-1,4,-4,7,6,8,10,10,-10,9,-1,-1,8,6,-8,-10,3,-2,-10,-10,3,-10,-5,-2,-5,-2,-5,-9,-4,8,-1,2,-4,-2,5,9,-9,4,1,-10,-8,-5,7,6,8,5,2,-5,4,-1,7,-9,-10,10,-1,-10,-3,2,10,3,-1,7,-6,10,-10,-8,-2,5,2,-3,-6,-1,-9,-10,10,7,4,7,-8,9,-9,-7,8,2,7,-4,-10,3,8,8,-1,-9,3,-4,-4,-3,1,-3,1,-10,1,-3,-9,-10,-2,-2,7,5,-9,3,1,8,5,3,-7,4,7,8,-4,2,9,8,-7,-6,-3,4,4,-7,3,4,-7,7,8,9,-4,-7,-6,8,9,4,4,7,7,-8,-6,-10,3,-6,-3,-2,-7,-9,-3,8,3,-5,7,-7,-5,-5,-9,3,-10,-4,5,9,6,-7,-7,2,-5,8,-6,6,-2,-4,4,5,-8,7,7,-9,6,-4,9,4,3,-5,7,-4,-2,7,6,2,-5,9,-6,6,4,-6,8,-6,10,-1,7,-5,4,7,-6,-5,-7,-4,3,-7,-10,10,3,-8,-9,1,6,5,7,-9,-10,-5,-9,9,9,-10,9,6,6,-4,-4,-3,8,-10,1,-10,-6,-7,4,-10,4,-1,-8,4,10,2,-2,6,-4,-4,8,7,9,-2,2,3,1,-8,10,4,-9,-5,3,10,8,4,8,-1,-7,-9,4,-6,7,-6,5,6,-6,4,2,9,-10,5,6,6,-10,4,-8,-1,-2,1,-6,-3,7,4,-5,-9,-7,4,2,-7,-6,8,-1,8,-7,5,7,-8,7,-4,-6,-7,9,6,-3,6,6,-3,5,2,-2,5,-5,4,6,4,2,5,-5,3,-6,7,-2,-8,-2,9,7,3,-9,-4,4,-5,1,10,-10,4,-1,-7,1,-2,-8,-9,6,-7,-9,-8,-10,1,-4,9,-3,10,-6,-1,-4,10,-3,-5,2,-4,2,6,-6,3,-10,-3,-7,-9,2,8,4,-6,-10,7,-6,3,-4,9,-7,-9,-7,10,-9,-5,-2,7,-4,2,-7,-5,8,10,-8,2,-3,2,7,-4,-4,7,3,-9,-6,-2,-8,3,-5,-9,-2,-8,-4,-5,-4,-7,-5,2,8,-6,2,7,-4,-9,-5,-2,9,-2,-2,-6,-3,5,-9,9,-2,-2,-2,6,1,-5,-4,-3,-10,-6,1,1,6,3,6,-1,-6,5,-3,-4,-8,3,9,-5,-3,3,4,8,-1,5,3,-8,-10,9,-5,2,-3,5,2,-10,2,9,-7,-8,-9,8,9,-3,8,-4,6,-4,10,-2,1,7,7,-1,-2,5,-10,-5,8,9,9,-6,-9,5,-2,-4,-1,6,7,-2,-6,2,7,-6,5,-10,-7,1,-9,-7,-3,3,2,-2,9,-1,9,1,-1,3,-10,-2,9,5,2,-8,3,-1,-3,7,4,-4,-1,9,2,10,4,9,7,-1,7,4,-1,6,-7,-5,-3,4,-4,8,6,7,9,-3,-1,-5,-2,-8,-5,8,-9,1,-1,-6,9,-10,1,2,3,-8,10,3,-2,6,5,-9,4,-6,4,-2,5,5,9,-8,5,-9,9,6,10,9,5,-4,8,5,-4,-5,9,7,-1,10,-8,2,10,-1,1,10,9,-6,3,-9,8,-8,-7,-5,-9,-6,-6,6,-8,6,6,5,9,-2,-1,-1,-6,6,-3,2,7,-9,-8,-9,-10,6,-1,1,10,-4,4,-2,4,6,10,-9,7,8,-3,-2,1,10,6,-6,5,-1,-5,3,-2,9,8,7,-6,-3,-3,3,-2,8,6,-8,3,-4,-2,-10,-8,6,-6,3,9,2,-2,6,10,4,7,9,-1,10,9,-10,8,-3,1,6,-6,2,5,-4,3,3,1,-3,4,-8,1,10,-5,4,10,6,10,4,7,2,-7,3,8,2,7,-7,-7,-10,9,-6,3,7,-1,1,-10,-1,10,6,-10,-2,-6,9,-5,6,10,4,-6,-9,3,-7,2,1,2,2,6,10,2,-7,-6,-2,5,-2,-9,7,10,7,2,4,5,-7,-9,-5,6,-9,-5,3,-10,-10,-7,-3,3,-6,7,-8,-5,5,3,4,-2,-4,-7,8,1,6,-6,-2,8,1,-8,-8,-5,-7,-5,-8,8,-5,-8,-10,-10,6,5,3,7,-7,-7,10,-9,2,7,-2,-1,-10,9,-9,-6,5,4,7,3,8,10,-2,4,5,-4,-6,4,-8,-6,4,-4,7,8,-1,7,-3,-7,8,-10,3,-1,-3,-7,-10,7,-6,4,1,7,-6,-9,-3,-7,8,-5,-3,1,1,-8,10,-4,8,-2,-1,9,3,-6,6,7,-1,4,9,4,3,3,-7,10,7,6,-10,5,5,-10,-5,5,-1,3,-6,4,-7,1,-3,3,4,6,-4,-7,-2,-2,-8,-4,7,1,-4,-3,1,7,6,2,7,1,-8,-2,7,-9,10,6,-3,-3,1,8,-1,-5,-4,6,-4,-3,-7,-5,9,-1,-1,8,-3,1,-8,-9,-5,-5,-9,8,-10,-8,-10,-3,-8,9,3,-3,8,-4,4,-5,-6,-6,1,-10,9,-8,-10,-7,7,-8,-3,9,-7,-10,-4,10,7,-7,-3,9,-5,-10,-10,-5,-3,9,4,-9,-1,-1,-4,-7,10,9,-10,-5,7,-2,-4,-6,-8,5,5,4,-3,-10,-8,9,-10,-1,-9,5,-6,7,-4,9,9,5,-7,7,3,-6,4],[-1,6,-7,10,4,-1,-8,-3,-8,-8,-6,3,5,-3,-9,8,3,1,10,-4,-9,-5,-9,-3,-5,-1,6,-6,-1,3,8,-9,-5,3,-6,-2,-9,2,-9,6,-6,5,-10,-4,-10,1,6,10,-2,9,-7,3,-1,-7,-9,-2,-9,-8,8,10,-9,-7,-10,-8,-10,-8,-9,-5,7,-1,-5,3,2,1,-3,9,1,-7,-2,1,4,-9,2,3,5,6,-7,-2,-2,8,-3,7,2,2,3,-4,-5,-9,-6,-6,6,-1,-3,-1,-7,10,7,-3,-5,3,-2,-2,9,-4,4,7,4,-3,10,-9,5,8,-9,1,8,10,10,-9,-5,-5,2,1,2,2,7,1,-3,4,-10,5,-6,9,9,6,-10,-5,4,10,-7,10,-6,-8,9,-2,-4,6,4,-7,-3,8,-3,-8,8,-5,-2,3,-5,8,2,3,-1,-7,6,9,-4,-5,-2,7,10,-7,6,-10,-10,5,10,-5,6,-5,5,-4,-5,-9,1,-8,-8,3,4,7,4,3,1,-5,1,1,-6,-4,-3,7,-9,-7,10,2,-5,-8,-2,-3,3,4,-7,-10,2,-3,9,1,7,-4,9,-2,7,-3,3,4,3,-9,-2,5,-3,1,2,-1,-1,5,2,-4,9,10,5,-7,-1,-1,3,9,6,-9,1,7,-6,-9,2,-7,-5,3,10,-8,-6,6,-7,-7,-4,-9,-8,-6,-1,-3,10,-1,7,-5,-4,10,4,-1,-4,1,-7,-2,9,1,4,-2,-4,-9,9,-7,-9,-4,6,1,4,-7,-6,-7,-8,-6,2,7,1,6,2,-4,2,-1,3,-8,5,9,-6,-8,-7,-5,2,-5,-9,-2,4,-9,6,-9,-3,-8,-2,-2,5,3,4,-3,1,9,8,-9,9,-3,10,-6,8,-3,-2,1,7,-1,1,7,-1,1,10,-4,-8,8,8,10,7,-8,-8,-8,2,-6,-3,-6,1,-6,5,-4,6,10,-3,1,2,10,-8,-7,-8,-3,9,-5,-7,3,-2,7,-8,-3,-7,-2,-4,1,1,-10,2,-9,-5,1,-7,7,3,7,-1,2,-5,-9,9,10,-9,-8,-6,-1,-5,-6,-9,2,-7,3,1,5,2,-4,-3,2,5,-2,8,5,-8,-6,3,8,8,7,-9,-3,8,3,-2,-3,6,1,1,-7,-6,-7,-10,-1,8,-6,-2,-1,8,2,-10,10,-4,-10,-6,5,10,3,7,-10,3,4,-9,-6,9,-9,-4,-5,-10,3,-1,-8,-10,-3,-6,-4,1,2,2,-4,-5,2,-4,8,-1,9,-1,5,9,-10,10,-4,1,8,-4,-6,7,-10,6,-4,1,1,10,5,3,-4,9,-2,4,6,4,10,-2,4,-10,-9,2,5,7,1,7,-10,3,-7,-4,8,-6,9,9,-8,-2,2,-8,-7,-8,2,6,-2,-8,8,3,-9,-4,-9,-4,4,3,-1,4,5,-4,9,-2,1,-1,9,-6,-5,7,-5,-8,-8,-6,5,4,-6,-8,10,-6,-8,-1,3,5,8,-9,-6,4,1,10,-2,5,-3,-10,2,4,-7,9,10,7,10,3,-6,-8,6,2,-10,-3,1,-6,3,5,4,-9,7,-4,-1,-1,-1,3,-6,-5,-5,1,-4,-9,6,-7,7,5,-2,-1,6,-2,-2,4,2,-6,8,3,4,-10,-7,1,3,-9,6,7,-3,-9,-6,3,-2,6,-6,-5,4,-1,2,-6,9,-1,-5,-7,9,-3,8,-2,-7,-4,9,3,5,-6,-7,6,-6,-3,5,-9,-5,-7,8,-5,10,-8,-1,4,-7,4,3,-4,-7,1,-8,-6,1,-5,-5,-4,2,-7,2,-8,4,-7,-4,-5,7,-4,-4,-7,4,-8,4,7,3,-8,7,-6,-10,5,3,4,6,6,-8,9,-4,-2,-8,-6,-5,5,-10,1,5,1,-8,1,-5,-7,9,7,-2,4,8,-8,4,-4,-8,2,3,-5,-10,-8,-1,-10,-9,-6,3,-1,-9,5,4,-8,6,-8,-5,1,-7,-2,4,-3,-6,5,8,-4,7,-4,1,-5,-2,-6,-6,-4,-8,5,6,-6,-6,6,7,5,-9,4,1,-7,-2,1,1,-3,10,2,6,2,9,8,-8,-9,-9,9,4,-4,10,-6,-9,-2,9,-8,-2,-6,8,6,-6,5,9,7,9,-2,7,1,-9,8,9,-2,6,-1,-2,2,-3,5,-8,-5,-6,-7,-7,8,3,1,-1,4,-10,4,3,2,-3,-8,-1,-10,-2,-9,-7,-4,-2,4,-5,-3,-3,-7,-4,-2,7,-10,5,-5,-8,7,-1,6,5,9,8,6,-10,8,3,-3,-2,-7,10,5,4,3,-4,-9,9,-10,1,-8,9,6,-8,10,-9,-6,-9,-9,6,10,-1,10,10,-10,-5,1,6,6,6,3,-3,6,-9,-8,-9,4,1,1,-3,-2,1,2,3,-1,-4,-6,-3,-2,9,9,10,7,9,-5,-1,1,-10,-9,-3,-2,5,3,-10,10,4,-7,-3,10,-6,-4,-1,9,10,-4,8,-7,4,9,-6,5,-6,-8,9,-1,-2,2,-10,5,-8,-10,-5,-7,8,4,5,-5,2,-10,-9,5,-5,-5,7,2,8,-2,-10,5,5,3,-9,-8,2,-3,10,2,-7,8,-8,-1,-4,-1,-2,-4,6,-4,6,5,4,8,-7,7,9,10,-8,4,-4,6,-3,-2,10,3,1,-5,-5,-7,5,-6,1,-2,7,-9,-2,8,9,-4,7,6,-5,-3,4,-5,-5,-5,-9,3,4,-6,9,2,3,7,-3,-9,4,1,1,-8,8,-1,8,-10,8,-9,-1,6,-6,5,-6,8,-4,9,-4,2,-8,-7,-6,1,5,2,-10,10,-9,-5,-9,6,-9,-9,-10,5,3,-6,-2,-5,-6,3,-3,-2,-9,-1,10,-2,-2,4,-1,10,2,4,-3,-1,6,-5,-10,-3,-3,-7,-2,4,9,6,8,7,3,5,10,5,3,-9,6,-2,-8,4,10,-4,7,-3,9,6,-1,8,-9,1,4,5,-2,8,7,-10,9,10,-5,2,2,5,-1,7,9,-1,8,2,-2,7,-2,10,2,-9,4,-10,9,2,-2,9,-8,4,-4,-3,-7,-10,9,2,10,8,-5,2,8,4,-4,-1,3,8,2,-6,4,-9,5,-4,-5,1,-3,-3,-9,-10,10,-7,7,-2,9,-7,3,-7,9,7,6,-1,-3,1,-1,-8,4,-6,3,9,6,-6,-4,-9,-4,7,6,-10,-2,2,-2,6,8,-7,8,4,6,2,10,-4,-10,4,-9,-5,-5,-8,-9,-5,6,7,-9,-9,10,-4,-5,-5,-7,10,-5,-9,-4,-9,1,8,-5,-3,-8,9,6,-10,-2,-7,-6,-7,2,3,-2,8,6,3,3,-10,-8,10,-2,6,-5,-3,10,2,-7,-7,-7,2,-1,9,-1,-6,5,5,-6,3,4,2,7,7,1,3,-10,-3,2,-6,8]], dtype = "uint32")#candidate|4208|(11, 1320)|const|uint32
bop_4209 = relay.right_shift(bop_4194.astype('int16'), const_4208.astype('int16')) # shape=(11, 1320)
bop_4212 = relay.right_shift(bop_4197.astype('int16'), const_4208.astype('int16')) # shape=(11, 1320)
uop_4218 = relay.log10(bop_4194.astype('float32')) # shape=(1, 1320)
uop_4220 = relay.log10(bop_4197.astype('float32')) # shape=(1, 1320)
output = relay.Tuple([uop_4172,uop_4177,bop_4209,uop_4218,])
output2 = relay.Tuple([uop_4172,uop_4177,bop_4212,uop_4220,])
func_4223 = relay.Function([var_4171,var_4189,], output)
mod['func_4223'] = func_4223
mod = relay.transform.InferType()(mod)
var_4224 = relay.var("var_4224", dtype = "float64", shape = (8, 1, 12))#candidate|4224|(8, 1, 12)|var|float64
var_4225 = relay.var("var_4225", dtype = "int64", shape = (1, 1320))#candidate|4225|(1, 1320)|var|int64
output = func_4223(var_4224,var_4225,)
func_4226 = relay.Function([var_4224,var_4225,], output)
mutated_mod['func_4226'] = func_4226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4243 = relay.var("var_4243", dtype = "float32", shape = (5, 13, 5))#candidate|4243|(5, 13, 5)|var|float32
uop_4244 = relay.asinh(var_4243.astype('float32')) # shape=(5, 13, 5)
uop_4249 = relay.atanh(uop_4244.astype('float64')) # shape=(5, 13, 5)
bop_4251 = relay.floor_divide(uop_4249.astype('float32'), relay.reshape(var_4243.astype('float32'), relay.shape_of(uop_4249))) # shape=(5, 13, 5)
bop_4255 = relay.equal(uop_4244.astype('bool'), relay.reshape(uop_4249.astype('bool'), relay.shape_of(uop_4244))) # shape=(5, 13, 5)
func_2701_call = mod.get_global_var('func_2701')
func_2702_call = mutated_mod.get_global_var('func_2702')
call_4275 = func_2701_call()
call_4276 = func_2701_call()
uop_4293 = relay.tan(uop_4244.astype('float32')) # shape=(5, 13, 5)
output = relay.Tuple([bop_4251,bop_4255,call_4275,uop_4293,])
output2 = relay.Tuple([bop_4251,bop_4255,call_4276,uop_4293,])
func_4298 = relay.Function([var_4243,], output)
mod['func_4298'] = func_4298
mod = relay.transform.InferType()(mod)
var_4299 = relay.var("var_4299", dtype = "float32", shape = (5, 13, 5))#candidate|4299|(5, 13, 5)|var|float32
output = func_4298(var_4299)
func_4300 = relay.Function([var_4299], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4335 = relay.var("var_4335", dtype = "float64", shape = (9, 11, 7))#candidate|4335|(9, 11, 7)|var|float64
uop_4336 = relay.log10(var_4335.astype('float64')) # shape=(9, 11, 7)
bop_4342 = relay.add(uop_4336.astype('float64'), relay.reshape(var_4335.astype('float64'), relay.shape_of(uop_4336))) # shape=(9, 11, 7)
bop_4355 = relay.multiply(bop_4342.astype('int16'), relay.reshape(uop_4336.astype('int16'), relay.shape_of(bop_4342))) # shape=(9, 11, 7)
bop_4359 = relay.mod(bop_4342.astype('float64'), relay.reshape(bop_4355.astype('float64'), relay.shape_of(bop_4342))) # shape=(9, 11, 7)
output = bop_4359
output2 = bop_4359
func_4374 = relay.Function([var_4335,], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4375 = relay.var("var_4375", dtype = "float64", shape = (9, 11, 7))#candidate|4375|(9, 11, 7)|var|float64
func_4374_call = mutated_mod.get_global_var('func_4374')
call_4376 = func_4374_call(var_4375)
output = call_4376
func_4377 = relay.Function([var_4375], output)
mutated_mod['func_4377'] = func_4377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2701_call = mod.get_global_var('func_2701')
func_2702_call = mutated_mod.get_global_var('func_2702')
call_4463 = func_2701_call()
call_4464 = func_2701_call()
output = call_4463
output2 = call_4464
func_4471 = relay.Function([], output)
mod['func_4471'] = func_4471
mod = relay.transform.InferType()(mod)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mutated_mod.get_global_var('func_4471')
call_4472 = func_4471_call()
output = call_4472
func_4473 = relay.Function([], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1882_call = mod.get_global_var('func_1882')
func_1884_call = mutated_mod.get_global_var('func_1884')
call_4482 = relay.TupleGetItem(func_1882_call(), 0)
call_4483 = relay.TupleGetItem(func_1884_call(), 0)
output = call_4482
output2 = call_4483
func_4499 = relay.Function([], output)
mod['func_4499'] = func_4499
mod = relay.transform.InferType()(mod)
output = func_4499()
func_4500 = relay.Function([], output)
mutated_mod['func_4500'] = func_4500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_4528 = relay.TupleGetItem(func_2860_call(), 0)
call_4529 = relay.TupleGetItem(func_2861_call(), 0)
func_1614_call = mod.get_global_var('func_1614')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_4544 = relay.TupleGetItem(func_1614_call(), 1)
call_4545 = relay.TupleGetItem(func_1616_call(), 1)
output = relay.Tuple([call_4528,call_4544,])
output2 = relay.Tuple([call_4529,call_4545,])
func_4550 = relay.Function([], output)
mod['func_4550'] = func_4550
mod = relay.transform.InferType()(mod)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4550_call = mutated_mod.get_global_var('func_4550')
call_4551 = func_4550_call()
output = call_4551
func_4552 = relay.Function([], output)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3562_call = mod.get_global_var('func_3562')
func_3563_call = mutated_mod.get_global_var('func_3563')
call_4560 = relay.TupleGetItem(func_3562_call(), 0)
call_4561 = relay.TupleGetItem(func_3563_call(), 0)
output = call_4560
output2 = call_4561
func_4574 = relay.Function([], output)
mod['func_4574'] = func_4574
mod = relay.transform.InferType()(mod)
mutated_mod['func_4574'] = func_4574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4574_call = mutated_mod.get_global_var('func_4574')
call_4575 = func_4574_call()
output = call_4575
func_4576 = relay.Function([], output)
mutated_mod['func_4576'] = func_4576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_375_call = mod.get_global_var('func_375')
func_377_call = mutated_mod.get_global_var('func_377')
call_4615 = func_375_call()
call_4616 = func_375_call()
uop_4641 = relay.tan(call_4615.astype('float64')) # shape=(10, 11, 12)
uop_4643 = relay.tan(call_4616.astype('float64')) # shape=(10, 11, 12)
output = relay.Tuple([uop_4641,])
output2 = relay.Tuple([uop_4643,])
func_4697 = relay.Function([], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mutated_mod.get_global_var('func_4697')
call_4698 = func_4697_call()
output = call_4698
func_4699 = relay.Function([], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3799_call = mod.get_global_var('func_3799')
func_3800_call = mutated_mod.get_global_var('func_3800')
call_4733 = relay.TupleGetItem(func_3799_call(), 0)
call_4734 = relay.TupleGetItem(func_3800_call(), 0)
output = call_4733
output2 = call_4734
func_4738 = relay.Function([], output)
mod['func_4738'] = func_4738
mod = relay.transform.InferType()(mod)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4738_call = mutated_mod.get_global_var('func_4738')
call_4739 = func_4738_call()
output = call_4739
func_4740 = relay.Function([], output)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1466_call = mod.get_global_var('func_1466')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_4762 = func_1466_call()
call_4763 = func_1466_call()
func_1614_call = mod.get_global_var('func_1614')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_4764 = relay.TupleGetItem(func_1614_call(), 1)
call_4765 = relay.TupleGetItem(func_1616_call(), 1)
output = relay.Tuple([call_4762,call_4764,])
output2 = relay.Tuple([call_4763,call_4765,])
func_4772 = relay.Function([], output)
mod['func_4772'] = func_4772
mod = relay.transform.InferType()(mod)
output = func_4772()
func_4773 = relay.Function([], output)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4792 = relay.var("var_4792", dtype = "float64", shape = (2, 11, 15))#candidate|4792|(2, 11, 15)|var|float64
var_4793 = relay.var("var_4793", dtype = "float64", shape = (2, 11, 15))#candidate|4793|(2, 11, 15)|var|float64
bop_4794 = relay.mod(var_4792.astype('float64'), relay.reshape(var_4793.astype('float64'), relay.shape_of(var_4792))) # shape=(2, 11, 15)
func_1189_call = mod.get_global_var('func_1189')
func_1192_call = mutated_mod.get_global_var('func_1192')
const_4806 = relay.const([10,10,-10,4,-3,-1,-5,-9,6,4,-6,8,3,2,5,-6,-9,-4,3,-4,-2,1,-3,-6,8,-1,-6,-8,1,5,-9,2,-7,-6,6,-7,7,8,8,-1,5,-1,-2,-9,10,10,-7,7,1,-4,-3,7,-9,-10,-10,-5,4,5,-4,-1,-10,-4,-5,1,-4,5,6,-7,-7,-5,-7,-4,-4,-9,1,3,-2,8,-7,5,4,9,2,-6,-3,7,-9,3,8,-4,-1,-2,-3,2,9,-1,5,-2,4,-7,-9,6,-5,-5,-10,-6,5,6,10,6,-3,-2,-7,-7,-4,-7,-9,5,4,9,-7,5,-4,-10,8,4,4,-4,-2,-1,5,1,3,-2,-4,-10,-7,-4,7,5,-1,9,-5,-8,3,-5,-9,6,2,10,-8,-8,-5,-4,-10,10,-8,-9,-1,1,-6,4,-3,-9,8,-1,-10,-1,-5,9,-4,7,9,6,-4,-6,5,8,-2,-3,6,9,4,3,5,-5,3,2,9,-4,6,5,-1,9,10,6,-5,4,-4,-1,10,-7,-7,5,-6,-10,8,-4,-6,4,7,6,6,-3,8,7,-7,3,3,1,8,4,7,-6,-2,-1,-2,-1,8,7,8,-7,10,3,9,-3,-5,2,-4,5,9,-5,4,7,1,-1,10,6,-8,-3,2,4,4,9,2,-4,-3,-2,-6,-10,-5,-6,1,-6,8,5,-9,7,-5,-9,-4,8,3,-4,-8,-4,7,1,1,-6,9,8,10,-9,-6,2,3,-5,9,-5,-4,-4,-8,-7,-2,-7,4,-9,3,-1,-8,8,2,-10,-1,-2,4,3,10,-1,5,-5,5,5,-4,6,-9,7,-8,-4,10,3,3,5,8,-8,-4,-3,-7,-7,-7,6,9,-7,8,3,1,-3,-4,8,4,4,-8,-9,7,7,2,8,-7,-8,10,5,9,-6,6,-4,1,-10,-7,8,-6,-6,8,-10,2,-10,-9,-6,2,-1,7,9,-3,10,8,2,3,-4,3,-6,2,-7,-2,1,-6,-10,-8,-2,-8,3,-10,-9,4,-4,7,-1,-9,-4,-3,2,-7,-2,-3,-10,-9,-6,7,-4,1,9,9,1,-10,8,7,-3,-4,3,-3,10,-3,1,-4,-4,-4,-4,-3,-10,7,-10,-7,1,10,-1,-7,5,5,-4,2,3,1,6,10,10,-3,4,-3,-3,10,-6,-3,9,-6,7,2,-3,-7,6,-6,-9,-7,10,9,-3,-5,10,-9,-8,-3,-4,-6,6,7,-5,2,-3,-6,-9,8,5,-2,-3,-3,7,-5,1,-9,7,2,-10,-3,-3,7,3,3,-1,3,7,5,4,-4,-3,3,-10], dtype = "int16")#candidate|4806|(504,)|const|int16
call_4805 = relay.TupleGetItem(func_1189_call(relay.reshape(const_4806.astype('int16'), [504,])), 1)
call_4807 = relay.TupleGetItem(func_1192_call(relay.reshape(const_4806.astype('int16'), [504,])), 1)
func_4064_call = mod.get_global_var('func_4064')
func_4066_call = mutated_mod.get_global_var('func_4066')
call_4825 = relay.TupleGetItem(func_4064_call(), 0)
call_4826 = relay.TupleGetItem(func_4066_call(), 0)
func_4148_call = mod.get_global_var('func_4148')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_4836 = relay.TupleGetItem(func_4148_call(), 1)
call_4837 = relay.TupleGetItem(func_4150_call(), 1)
const_4872 = relay.const([[[7,-10,-8,1,-8,-10,-8,-8],[8,9,10,8,-7,8,6,-7],[-1,-2,-9,-4,8,3,10,4],[-1,6,1,5,-7,-3,4,3],[-8,-6,-10,5,-4,-7,-2,-4],[5,6,-6,-7,3,3,9,-3],[-5,-1,-1,6,-5,-2,5,9]],[[10,8,-6,8,-3,7,8,-9],[8,1,-8,-7,-9,1,-6,2],[8,1,-4,-3,9,9,1,2],[7,9,10,8,4,1,-10,8],[-4,-1,-8,-7,6,6,-3,-7],[4,8,3,-3,-7,-10,1,6],[9,-6,-4,5,9,9,2,4]],[[5,9,-10,-6,-9,6,6,-7],[-9,-3,-6,-3,10,6,-10,-7],[4,5,-10,-3,-9,1,10,2],[9,-10,-4,9,-7,-7,7,3],[1,7,9,10,-8,-5,9,8],[3,-2,-3,4,-7,-8,-4,-6],[-7,6,-5,-3,-7,3,-6,-3]],[[-7,9,-7,-9,-1,-7,-7,9],[7,9,-2,-5,1,-7,7,7],[7,5,6,-8,-2,-3,9,-3],[7,-8,-6,-10,-3,3,6,-5],[3,-7,-7,-7,2,-9,2,-7],[6,10,10,-7,6,4,-10,-7],[10,-4,-10,5,-1,-1,6,1]],[[-7,4,-10,10,-10,10,-3,5],[-10,2,9,2,-4,2,2,2],[4,-7,-8,2,3,-10,-8,2],[1,10,3,-2,4,7,-7,5],[6,10,1,1,-4,2,3,2],[8,-6,1,-6,-1,-10,3,-4],[7,10,-5,-2,2,-1,-8,1]],[[-2,-6,4,-9,-6,-5,-4,5],[-2,9,-8,6,-5,-4,-7,-8],[1,-3,8,10,-1,-3,6,6],[5,-5,8,-2,8,7,-1,4],[9,-7,-9,2,-5,-5,-3,9],[8,-10,7,3,-7,1,-5,2],[-2,4,-7,1,9,3,9,-7]],[[-7,-5,-10,10,-1,7,-5,2],[7,1,10,8,-8,-1,-4,-3],[-7,7,-1,7,9,-7,-3,6],[-5,-8,8,4,6,4,6,-2],[10,-2,-10,10,-3,6,6,-7],[-8,5,8,6,7,-5,9,-5],[9,-9,-6,-10,6,4,9,-2]],[[-4,-7,-6,-8,2,5,-3,10],[10,2,-8,5,-10,5,-8,-10],[-6,5,-9,5,6,-3,-2,2],[-10,-8,-7,-2,1,10,-8,4],[-7,-6,-1,8,-10,-6,-1,4],[3,2,8,8,-3,1,-9,3],[-3,2,9,1,8,4,8,-3]],[[-4,10,8,1,8,-1,4,-3],[-5,1,3,-5,-1,-10,-9,-9],[-7,2,9,-5,5,4,-3,8],[-1,4,-5,7,-2,-7,2,-3],[-5,2,-10,2,4,7,-4,7],[-6,-3,2,6,-9,-4,-9,7],[5,1,-8,-1,1,-2,-4,4]]], dtype = "int16")#candidate|4872|(9, 7, 8)|const|int16
bop_4873 = relay.bitwise_and(call_4805.astype('uint64'), relay.reshape(const_4872.astype('uint64'), relay.shape_of(call_4805))) # shape=(9, 7, 8)
bop_4876 = relay.bitwise_and(call_4807.astype('uint64'), relay.reshape(const_4872.astype('uint64'), relay.shape_of(call_4807))) # shape=(9, 7, 8)
func_2701_call = mod.get_global_var('func_2701')
func_2702_call = mutated_mod.get_global_var('func_2702')
call_4879 = func_2701_call()
call_4880 = func_2701_call()
output = relay.Tuple([bop_4794,const_4806,call_4825,call_4836,bop_4873,call_4879,])
output2 = relay.Tuple([bop_4794,const_4806,call_4826,call_4837,bop_4876,call_4880,])
func_4881 = relay.Function([var_4792,var_4793,], output)
mod['func_4881'] = func_4881
mod = relay.transform.InferType()(mod)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4881_call = mutated_mod.get_global_var('func_4881')
var_4883 = relay.var("var_4883", dtype = "float64", shape = (2, 11, 15))#candidate|4883|(2, 11, 15)|var|float64
var_4884 = relay.var("var_4884", dtype = "float64", shape = (2, 11, 15))#candidate|4884|(2, 11, 15)|var|float64
call_4882 = func_4881_call(var_4883,var_4884,)
output = call_4882
func_4885 = relay.Function([var_4883,var_4884,], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4890 = relay.var("var_4890", dtype = "float32", shape = (9, 16, 9))#candidate|4890|(9, 16, 9)|var|float32
uop_4891 = relay.tan(var_4890.astype('float32')) # shape=(9, 16, 9)
output = uop_4891
output2 = uop_4891
func_4900 = relay.Function([var_4890,], output)
mod['func_4900'] = func_4900
mod = relay.transform.InferType()(mod)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4901 = relay.var("var_4901", dtype = "float32", shape = (9, 16, 9))#candidate|4901|(9, 16, 9)|var|float32
func_4900_call = mutated_mod.get_global_var('func_4900')
call_4902 = func_4900_call(var_4901)
output = call_4902
func_4903 = relay.Function([var_4901], output)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mod.get_global_var('func_3344')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_5020 = relay.TupleGetItem(func_3344_call(), 0)
call_5021 = relay.TupleGetItem(func_3346_call(), 0)
uop_5046 = relay.log(call_5020.astype('float32')) # shape=(9, 8, 5)
uop_5048 = relay.log(call_5021.astype('float32')) # shape=(9, 8, 5)
output = uop_5046
output2 = uop_5048
func_5054 = relay.Function([], output)
mod['func_5054'] = func_5054
mod = relay.transform.InferType()(mod)
mutated_mod['func_5054'] = func_5054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mutated_mod.get_global_var('func_5054')
call_5055 = func_5054_call()
output = call_5055
func_5056 = relay.Function([], output)
mutated_mod['func_5056'] = func_5056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3799_call = mod.get_global_var('func_3799')
func_3800_call = mutated_mod.get_global_var('func_3800')
call_5082 = relay.TupleGetItem(func_3799_call(), 0)
call_5083 = relay.TupleGetItem(func_3800_call(), 0)
output = call_5082
output2 = call_5083
func_5086 = relay.Function([], output)
mod['func_5086'] = func_5086
mod = relay.transform.InferType()(mod)
output = func_5086()
func_5087 = relay.Function([], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_5088 = func_875_call()
call_5089 = func_875_call()
output = relay.Tuple([call_5088,])
output2 = relay.Tuple([call_5089,])
func_5100 = relay.Function([], output)
mod['func_5100'] = func_5100
mod = relay.transform.InferType()(mod)
output = func_5100()
func_5101 = relay.Function([], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5153 = relay.var("var_5153", dtype = "uint16", shape = (2, 11, 16))#candidate|5153|(2, 11, 16)|var|uint16
var_5154 = relay.var("var_5154", dtype = "uint16", shape = (2, 11, 16))#candidate|5154|(2, 11, 16)|var|uint16
bop_5155 = relay.greater_equal(var_5153.astype('bool'), relay.reshape(var_5154.astype('bool'), relay.shape_of(var_5153))) # shape=(2, 11, 16)
bop_5168 = relay.less_equal(var_5153.astype('bool'), relay.reshape(bop_5155.astype('bool'), relay.shape_of(var_5153))) # shape=(2, 11, 16)
bop_5172 = relay.equal(bop_5155.astype('bool'), relay.reshape(bop_5168.astype('bool'), relay.shape_of(bop_5155))) # shape=(2, 11, 16)
uop_5177 = relay.cosh(var_5154.astype('float64')) # shape=(2, 11, 16)
bop_5180 = relay.bitwise_xor(bop_5168.astype('int16'), relay.reshape(var_5153.astype('int16'), relay.shape_of(bop_5168))) # shape=(2, 11, 16)
output = relay.Tuple([bop_5172,uop_5177,bop_5180,])
output2 = relay.Tuple([bop_5172,uop_5177,bop_5180,])
func_5184 = relay.Function([var_5153,var_5154,], output)
mod['func_5184'] = func_5184
mod = relay.transform.InferType()(mod)
var_5185 = relay.var("var_5185", dtype = "uint16", shape = (2, 11, 16))#candidate|5185|(2, 11, 16)|var|uint16
var_5186 = relay.var("var_5186", dtype = "uint16", shape = (2, 11, 16))#candidate|5186|(2, 11, 16)|var|uint16
output = func_5184(var_5185,var_5186,)
func_5187 = relay.Function([var_5185,var_5186,], output)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1793_call = mod.get_global_var('func_1793')
func_1795_call = mutated_mod.get_global_var('func_1795')
call_5191 = relay.TupleGetItem(func_1793_call(), 2)
call_5192 = relay.TupleGetItem(func_1795_call(), 2)
output = relay.Tuple([call_5191,])
output2 = relay.Tuple([call_5192,])
func_5193 = relay.Function([], output)
mod['func_5193'] = func_5193
mod = relay.transform.InferType()(mod)
mutated_mod['func_5193'] = func_5193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5193_call = mutated_mod.get_global_var('func_5193')
call_5194 = func_5193_call()
output = call_5194
func_5195 = relay.Function([], output)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2638_call = mod.get_global_var('func_2638')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_5280 = relay.TupleGetItem(func_2638_call(), 0)
call_5281 = relay.TupleGetItem(func_2640_call(), 0)
output = call_5280
output2 = call_5281
func_5282 = relay.Function([], output)
mod['func_5282'] = func_5282
mod = relay.transform.InferType()(mod)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5282_call = mutated_mod.get_global_var('func_5282')
call_5283 = func_5282_call()
output = call_5283
func_5284 = relay.Function([], output)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3110_call = mod.get_global_var('func_3110')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_5298 = relay.TupleGetItem(func_3110_call(), 0)
call_5299 = relay.TupleGetItem(func_3111_call(), 0)
output = call_5298
output2 = call_5299
func_5309 = relay.Function([], output)
mod['func_5309'] = func_5309
mod = relay.transform.InferType()(mod)
mutated_mod['func_5309'] = func_5309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5309_call = mutated_mod.get_global_var('func_5309')
call_5310 = func_5309_call()
output = call_5310
func_5311 = relay.Function([], output)
mutated_mod['func_5311'] = func_5311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4499_call = mod.get_global_var('func_4499')
func_4500_call = mutated_mod.get_global_var('func_4500')
call_5347 = func_4499_call()
call_5348 = func_4499_call()
func_3889_call = mod.get_global_var('func_3889')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_5349 = relay.TupleGetItem(func_3889_call(), 2)
call_5350 = relay.TupleGetItem(func_3891_call(), 2)
func_4738_call = mod.get_global_var('func_4738')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_5356 = func_4738_call()
call_5357 = func_4738_call()
func_1727_call = mod.get_global_var('func_1727')
func_1729_call = mutated_mod.get_global_var('func_1729')
call_5358 = relay.TupleGetItem(func_1727_call(), 1)
call_5359 = relay.TupleGetItem(func_1729_call(), 1)
func_1704_call = mod.get_global_var('func_1704')
func_1708_call = mutated_mod.get_global_var('func_1708')
var_5380 = relay.var("var_5380", dtype = "int32", shape = ())#candidate|5380|()|var|int32
var_5381 = relay.var("var_5381", dtype = "int32", shape = (150,))#candidate|5381|(150,)|var|int32
call_5379 = relay.TupleGetItem(func_1704_call(relay.reshape(var_5380.astype('int32'), []), relay.reshape(var_5381.astype('int32'), [10, 3, 5]), ), 0)
call_5382 = relay.TupleGetItem(func_1708_call(relay.reshape(var_5380.astype('int32'), []), relay.reshape(var_5381.astype('int32'), [10, 3, 5]), ), 0)
output = relay.Tuple([call_5347,call_5349,call_5356,call_5358,call_5379,var_5380,var_5381,])
output2 = relay.Tuple([call_5348,call_5350,call_5357,call_5359,call_5382,var_5380,var_5381,])
func_5397 = relay.Function([var_5380,var_5381,], output)
mod['func_5397'] = func_5397
mod = relay.transform.InferType()(mod)
var_5398 = relay.var("var_5398", dtype = "int32", shape = ())#candidate|5398|()|var|int32
var_5399 = relay.var("var_5399", dtype = "int32", shape = (150,))#candidate|5399|(150,)|var|int32
output = func_5397(var_5398,var_5399,)
func_5400 = relay.Function([var_5398,var_5399,], output)
mutated_mod['func_5400'] = func_5400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1842_call = mod.get_global_var('func_1842')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_5427 = func_1842_call()
call_5428 = func_1842_call()
output = call_5427
output2 = call_5428
func_5441 = relay.Function([], output)
mod['func_5441'] = func_5441
mod = relay.transform.InferType()(mod)
mutated_mod['func_5441'] = func_5441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5441_call = mutated_mod.get_global_var('func_5441')
call_5442 = func_5441_call()
output = call_5442
func_5443 = relay.Function([], output)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5309_call = mod.get_global_var('func_5309')
func_5311_call = mutated_mod.get_global_var('func_5311')
call_5461 = func_5309_call()
call_5462 = func_5309_call()
var_5465 = relay.var("var_5465", dtype = "int16", shape = (504,))#candidate|5465|(504,)|var|int16
bop_5466 = relay.greater_equal(call_5461.astype('bool'), relay.reshape(var_5465.astype('bool'), relay.shape_of(call_5461))) # shape=(504,)
bop_5469 = relay.greater_equal(call_5462.astype('bool'), relay.reshape(var_5465.astype('bool'), relay.shape_of(call_5462))) # shape=(504,)
func_590_call = mod.get_global_var('func_590')
func_593_call = mutated_mod.get_global_var('func_593')
call_5472 = relay.TupleGetItem(func_590_call(relay.reshape(call_5461.astype('int16'), [504,])), 3)
call_5473 = relay.TupleGetItem(func_593_call(relay.reshape(call_5461.astype('int16'), [504,])), 3)
output = relay.Tuple([bop_5466,call_5472,])
output2 = relay.Tuple([bop_5469,call_5473,])
func_5501 = relay.Function([var_5465,], output)
mod['func_5501'] = func_5501
mod = relay.transform.InferType()(mod)
var_5502 = relay.var("var_5502", dtype = "int16", shape = (504,))#candidate|5502|(504,)|var|int16
output = func_5501(var_5502)
func_5503 = relay.Function([var_5502], output)
mutated_mod['func_5503'] = func_5503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5529 = relay.var("var_5529", dtype = "float32", shape = (13, 15, 12))#candidate|5529|(13, 15, 12)|var|float32
uop_5530 = relay.erf(var_5529.astype('float32')) # shape=(13, 15, 12)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_5556 = relay.TupleGetItem(func_2912_call(), 0)
call_5557 = relay.TupleGetItem(func_2913_call(), 0)
uop_5561 = relay.exp(uop_5530.astype('float32')) # shape=(13, 15, 12)
output = relay.Tuple([call_5556,uop_5561,])
output2 = relay.Tuple([call_5557,uop_5561,])
func_5577 = relay.Function([var_5529,], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
mutated_mod['func_5577'] = func_5577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5578 = relay.var("var_5578", dtype = "float32", shape = (13, 15, 12))#candidate|5578|(13, 15, 12)|var|float32
func_5577_call = mutated_mod.get_global_var('func_5577')
call_5579 = func_5577_call(var_5578)
output = call_5579
func_5580 = relay.Function([var_5578], output)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1614_call = mod.get_global_var('func_1614')
func_1616_call = mutated_mod.get_global_var('func_1616')
call_5615 = relay.TupleGetItem(func_1614_call(), 0)
call_5616 = relay.TupleGetItem(func_1616_call(), 0)
func_1882_call = mod.get_global_var('func_1882')
func_1884_call = mutated_mod.get_global_var('func_1884')
call_5630 = relay.TupleGetItem(func_1882_call(), 0)
call_5631 = relay.TupleGetItem(func_1884_call(), 0)
output = relay.Tuple([call_5615,call_5630,])
output2 = relay.Tuple([call_5616,call_5631,])
func_5644 = relay.Function([], output)
mod['func_5644'] = func_5644
mod = relay.transform.InferType()(mod)
output = func_5644()
func_5645 = relay.Function([], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2638_call = mod.get_global_var('func_2638')
func_2640_call = mutated_mod.get_global_var('func_2640')
call_5658 = relay.TupleGetItem(func_2638_call(), 0)
call_5659 = relay.TupleGetItem(func_2640_call(), 0)
func_5441_call = mod.get_global_var('func_5441')
func_5443_call = mutated_mod.get_global_var('func_5443')
call_5676 = func_5441_call()
call_5677 = func_5441_call()
func_1466_call = mod.get_global_var('func_1466')
func_1467_call = mutated_mod.get_global_var('func_1467')
call_5694 = func_1466_call()
call_5695 = func_1466_call()
output = relay.Tuple([call_5658,call_5676,call_5694,])
output2 = relay.Tuple([call_5659,call_5677,call_5695,])
func_5696 = relay.Function([], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
output = func_5696()
func_5697 = relay.Function([], output)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2101_call = mod.get_global_var('func_2101')
func_2103_call = mutated_mod.get_global_var('func_2103')
call_5795 = relay.TupleGetItem(func_2101_call(), 1)
call_5796 = relay.TupleGetItem(func_2103_call(), 1)
func_1704_call = mod.get_global_var('func_1704')
func_1708_call = mutated_mod.get_global_var('func_1708')
const_5812 = relay.const(6, dtype = "int32")#candidate|5812|()|const|int32
var_5813 = relay.var("var_5813", dtype = "int32", shape = (75, 2))#candidate|5813|(75, 2)|var|int32
call_5811 = relay.TupleGetItem(func_1704_call(relay.reshape(const_5812.astype('int32'), []), relay.reshape(var_5813.astype('int32'), [10, 3, 5]), ), 0)
call_5814 = relay.TupleGetItem(func_1708_call(relay.reshape(const_5812.astype('int32'), []), relay.reshape(var_5813.astype('int32'), [10, 3, 5]), ), 0)
func_3211_call = mod.get_global_var('func_3211')
func_3213_call = mutated_mod.get_global_var('func_3213')
call_5849 = relay.TupleGetItem(func_3211_call(), 0)
call_5850 = relay.TupleGetItem(func_3213_call(), 0)
output = relay.Tuple([call_5795,call_5811,const_5812,var_5813,call_5849,])
output2 = relay.Tuple([call_5796,call_5814,const_5812,var_5813,call_5850,])
func_5859 = relay.Function([var_5813,], output)
mod['func_5859'] = func_5859
mod = relay.transform.InferType()(mod)
var_5860 = relay.var("var_5860", dtype = "int32", shape = (75, 2))#candidate|5860|(75, 2)|var|int32
output = func_5859(var_5860)
func_5861 = relay.Function([var_5860], output)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_5884 = relay.TupleGetItem(func_849_call(), 0)
call_5885 = relay.TupleGetItem(func_851_call(), 0)
output = call_5884
output2 = call_5885
func_5893 = relay.Function([], output)
mod['func_5893'] = func_5893
mod = relay.transform.InferType()(mod)
output = func_5893()
func_5894 = relay.Function([], output)
mutated_mod['func_5894'] = func_5894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
call_5906 = func_1352_call()
call_5907 = func_1352_call()
output = call_5906
output2 = call_5907
func_5912 = relay.Function([], output)
mod['func_5912'] = func_5912
mod = relay.transform.InferType()(mod)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5912_call = mutated_mod.get_global_var('func_5912')
call_5913 = func_5912_call()
output = call_5913
func_5914 = relay.Function([], output)
mutated_mod['func_5914'] = func_5914
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5938 = relay.var("var_5938", dtype = "float32", shape = (9, 10, 10))#candidate|5938|(9, 10, 10)|var|float32
uop_5939 = relay.cos(var_5938.astype('float32')) # shape=(9, 10, 10)
uop_5951 = relay.sin(uop_5939.astype('float64')) # shape=(9, 10, 10)
output = relay.Tuple([uop_5951,])
output2 = relay.Tuple([uop_5951,])
func_5953 = relay.Function([var_5938,], output)
mod['func_5953'] = func_5953
mod = relay.transform.InferType()(mod)
mutated_mod['func_5953'] = func_5953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5954 = relay.var("var_5954", dtype = "float32", shape = (9, 10, 10))#candidate|5954|(9, 10, 10)|var|float32
func_5953_call = mutated_mod.get_global_var('func_5953')
call_5955 = func_5953_call(var_5954)
output = call_5955
func_5956 = relay.Function([var_5954], output)
mutated_mod['func_5956'] = func_5956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
call_5974 = func_1352_call()
call_5975 = func_1352_call()
func_2969_call = mod.get_global_var('func_2969')
func_2972_call = mutated_mod.get_global_var('func_2972')
var_6015 = relay.var("var_6015", dtype = "int64", shape = (1320,))#candidate|6015|(1320,)|var|int64
call_6014 = relay.TupleGetItem(func_2969_call(relay.reshape(var_6015.astype('int64'), [10, 11, 12])), 1)
call_6016 = relay.TupleGetItem(func_2972_call(relay.reshape(var_6015.astype('int64'), [10, 11, 12])), 1)
func_2374_call = mod.get_global_var('func_2374')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_6030 = func_2374_call()
call_6031 = func_2374_call()
func_2374_call = mod.get_global_var('func_2374')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_6068 = func_2374_call()
call_6069 = func_2374_call()
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
call_6080 = func_1352_call()
call_6081 = func_1352_call()
func_3889_call = mod.get_global_var('func_3889')
func_3891_call = mutated_mod.get_global_var('func_3891')
call_6121 = relay.TupleGetItem(func_3889_call(), 1)
call_6122 = relay.TupleGetItem(func_3891_call(), 1)
bop_6124 = relay.subtract(call_5974.astype('uint64'), relay.reshape(call_6080.astype('uint64'), relay.shape_of(call_5974))) # shape=(9, 3, 2)
bop_6127 = relay.subtract(call_5975.astype('uint64'), relay.reshape(call_6081.astype('uint64'), relay.shape_of(call_5975))) # shape=(9, 3, 2)
output = relay.Tuple([call_6014,var_6015,call_6030,call_6068,call_6121,bop_6124,])
output2 = relay.Tuple([call_6016,var_6015,call_6031,call_6069,call_6122,bop_6127,])
func_6128 = relay.Function([var_6015,], output)
mod['func_6128'] = func_6128
mod = relay.transform.InferType()(mod)
var_6129 = relay.var("var_6129", dtype = "int64", shape = (1320,))#candidate|6129|(1320,)|var|int64
output = func_6128(var_6129)
func_6130 = relay.Function([var_6129], output)
mutated_mod['func_6130'] = func_6130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4738_call = mod.get_global_var('func_4738')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_6159 = func_4738_call()
call_6160 = func_4738_call()
var_6164 = relay.var("var_6164", dtype = "bool", shape = (9, 8, 5))#candidate|6164|(9, 8, 5)|var|bool
bop_6165 = relay.greater(call_6159.astype('bool'), relay.reshape(var_6164.astype('bool'), relay.shape_of(call_6159))) # shape=(9, 8, 5)
bop_6168 = relay.greater(call_6160.astype('bool'), relay.reshape(var_6164.astype('bool'), relay.shape_of(call_6160))) # shape=(9, 8, 5)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_6169 = relay.TupleGetItem(func_2912_call(), 0)
call_6170 = relay.TupleGetItem(func_2913_call(), 0)
func_1352_call = mod.get_global_var('func_1352')
func_1354_call = mutated_mod.get_global_var('func_1354')
call_6173 = func_1352_call()
call_6174 = func_1352_call()
func_5309_call = mod.get_global_var('func_5309')
func_5311_call = mutated_mod.get_global_var('func_5311')
call_6183 = func_5309_call()
call_6184 = func_5309_call()
func_1842_call = mod.get_global_var('func_1842')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_6187 = func_1842_call()
call_6188 = func_1842_call()
bop_6191 = relay.greater_equal(var_6164.astype('bool'), relay.reshape(bop_6165.astype('bool'), relay.shape_of(var_6164))) # shape=(9, 8, 5)
bop_6194 = relay.greater_equal(var_6164.astype('bool'), relay.reshape(bop_6168.astype('bool'), relay.shape_of(var_6164))) # shape=(9, 8, 5)
var_6208 = relay.var("var_6208", dtype = "bool", shape = (9, 8, 5))#candidate|6208|(9, 8, 5)|var|bool
bop_6209 = relay.not_equal(call_6159.astype('bool'), relay.reshape(var_6208.astype('bool'), relay.shape_of(call_6159))) # shape=(9, 8, 5)
bop_6212 = relay.not_equal(call_6160.astype('bool'), relay.reshape(var_6208.astype('bool'), relay.shape_of(call_6160))) # shape=(9, 8, 5)
uop_6227 = relay.sin(var_6164.astype('float32')) # shape=(9, 8, 5)
func_5193_call = mod.get_global_var('func_5193')
func_5195_call = mutated_mod.get_global_var('func_5195')
call_6230 = relay.TupleGetItem(func_5193_call(), 0)
call_6231 = relay.TupleGetItem(func_5195_call(), 0)
output = relay.Tuple([call_6169,call_6173,call_6183,call_6187,bop_6191,bop_6209,uop_6227,call_6230,])
output2 = relay.Tuple([call_6170,call_6174,call_6184,call_6188,bop_6194,bop_6212,uop_6227,call_6231,])
func_6234 = relay.Function([var_6164,var_6208,], output)
mod['func_6234'] = func_6234
mod = relay.transform.InferType()(mod)
var_6235 = relay.var("var_6235", dtype = "bool", shape = (9, 8, 5))#candidate|6235|(9, 8, 5)|var|bool
var_6236 = relay.var("var_6236", dtype = "bool", shape = (9, 8, 5))#candidate|6236|(9, 8, 5)|var|bool
output = func_6234(var_6235,var_6236,)
func_6237 = relay.Function([var_6235,var_6236,], output)
mutated_mod['func_6237'] = func_6237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6258 = relay.var("var_6258", dtype = "float32", shape = (16, 8, 15))#candidate|6258|(16, 8, 15)|var|float32
uop_6259 = relay.log(var_6258.astype('float32')) # shape=(16, 8, 15)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_6268 = relay.TupleGetItem(func_849_call(), 1)
call_6269 = relay.TupleGetItem(func_851_call(), 1)
func_4881_call = mod.get_global_var('func_4881')
func_4885_call = mutated_mod.get_global_var('func_4885')
const_6279 = relay.const([-5.411905,6.671961,-0.779324,2.878286,5.618388,-5.043987,-1.939775,-5.061413,8.390038,-1.730465,-5.326597,-9.052102,3.481653,1.388004,-6.196996,-9.799327,6.053700,9.829638,-1.589907,8.050927,-5.615354,-5.733895,-7.705045,7.598709,-6.980262,-7.658002,-6.142111,5.911667,5.082497,9.904259,-9.037225,9.940793,0.014014,7.657584,1.885683,7.778997,-3.320907,0.838515,3.202135,-7.286803,-9.579499,-6.932639,-7.700815,2.172806,1.663134,0.456541,-7.417617,3.864256,9.791878,8.764550,8.467689,-4.471056,-9.870872,-1.597132,2.726246,8.646397,0.688364,-5.464456,-2.113606,-5.338014,-6.219830,1.028251,-6.464908,-8.374540,0.044408,-7.204019,9.582878,9.145538,-5.898482,2.805722,-1.424300,-6.915452,-2.201258,9.440908,-6.732866,-9.757820,7.005516,2.808071,-9.202641,1.364460,-0.292514,-2.365117,5.571921,1.344310,-8.537214,0.709433,-3.906684,-2.445431,-2.660143,1.434832,5.079994,-1.121485,4.479073,-0.788490,2.099453,0.622834,-9.888814,2.018921,1.189260,0.963223,1.859135,7.648253,-5.452101,1.778920,1.953044,0.315209,-4.717662,-1.867823,-0.199938,-0.845932,-0.472346,2.106442,7.844066,-6.224767,0.452187,-7.569697,-2.863930,-6.955371,-8.749673,-6.509351,-8.113429,-9.266641,3.441708,-6.743810,-1.793526,5.116138,5.582671,2.322699,-9.711529,4.814310,2.382371,-2.070672,3.510989,4.969715,-7.111872,-0.494945,1.673517,-5.469883,5.557358,-6.714689,5.604548,-8.887570,-2.782052,0.524216,-8.395417,9.811090,3.382954,8.677868,-6.208390,-1.935756,-6.655108,-0.830763,7.910867,-4.450360,6.316682,-5.851883,7.280354,9.421456,-2.887386,-0.741795,-4.266851,4.296444,6.721940,-1.730408,5.662312,3.410214,6.217426,4.361137,-5.196378,2.542269,6.424372,-9.863160,7.590633,-8.958867,-8.799875,-1.642442,-0.536210,-6.147081,-6.213992,-8.660213,6.561066,-2.026584,4.464900,-1.015350,5.831824,8.660609,7.680626,2.263043,-7.526131,0.336234,-4.916221,0.693803,3.815473,6.764082,-5.221779,4.725924,4.280807,8.930900,3.993727,-0.560686,6.996640,5.803651,8.198476,4.703223,8.426202,-4.355631,-7.342555,-0.154276,-5.513949,-6.369820,0.572490,-4.996334,1.229173,9.361847,1.422377,1.690242,-0.478736,-7.990940,-1.997752,7.244470,-1.408710,6.507749,5.701799,-4.022435,2.506303,-7.070133,-8.892898,1.099637,-4.668767,-0.342459,-4.761140,7.608244,2.346984,-6.436207,1.836055,5.448303,-9.366922,6.369492,-0.963720,5.506750,-8.609845,4.018125,-0.652721,-4.200663,3.714900,2.606329,-2.886498,-8.491439,-6.770352,1.023247,-0.848287,9.115071,-7.788908,-4.305081,-6.301092,-0.162289,-7.613285,6.917423,9.145057,4.874245,-4.994342,-5.157212,0.771622,-4.116541,-8.767242,-7.226596,-0.056561,0.753111,-1.723338,-0.713678,6.505506,2.321177,-8.385502,-1.676472,-5.451554,-3.528810,-5.682779,2.417877,-4.041410,6.353554,-6.672317,4.827415,5.761555,9.429963,1.497957,-6.121104,-2.536340,-3.557305,-0.664604,-1.531895,-8.200166,-7.468165,-9.095109,8.518233,2.430209,5.708574,-7.791084,8.365447,1.395674,4.793674,-7.820809,7.376935,1.050411,7.940491,-1.494797,-7.259622,-6.762542,-9.629928,-4.716136,1.614473,-9.235485,2.307599,-8.926587,1.792137,4.112013,-2.516115,-3.328091,6.931492,4.035350,-3.793786,-5.994885,-3.268172,1.087490,6.743248,-2.485954,1.046619,7.682427,4.074642,6.921529,3.804327], dtype = "float64")#candidate|6279|(330,)|const|float64
call_6278 = relay.TupleGetItem(func_4881_call(relay.reshape(const_6279.astype('float64'), [2, 11, 15]), relay.reshape(const_6279.astype('float64'), [2, 11, 15]), ), 1)
call_6280 = relay.TupleGetItem(func_4885_call(relay.reshape(const_6279.astype('float64'), [2, 11, 15]), relay.reshape(const_6279.astype('float64'), [2, 11, 15]), ), 1)
func_3224_call = mod.get_global_var('func_3224')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_6288 = relay.TupleGetItem(func_3224_call(), 0)
call_6289 = relay.TupleGetItem(func_3225_call(), 0)
output = relay.Tuple([uop_6259,call_6268,call_6278,const_6279,call_6288,])
output2 = relay.Tuple([uop_6259,call_6269,call_6280,const_6279,call_6289,])
func_6299 = relay.Function([var_6258,], output)
mod['func_6299'] = func_6299
mod = relay.transform.InferType()(mod)
var_6300 = relay.var("var_6300", dtype = "float32", shape = (16, 8, 15))#candidate|6300|(16, 8, 15)|var|float32
output = func_6299(var_6300)
func_6301 = relay.Function([var_6300], output)
mutated_mod['func_6301'] = func_6301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4043_call = mod.get_global_var('func_4043')
func_4044_call = mutated_mod.get_global_var('func_4044')
call_6331 = relay.TupleGetItem(func_4043_call(), 2)
call_6332 = relay.TupleGetItem(func_4044_call(), 2)
output = call_6331
output2 = call_6332
func_6333 = relay.Function([], output)
mod['func_6333'] = func_6333
mod = relay.transform.InferType()(mod)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mutated_mod.get_global_var('func_6333')
call_6334 = func_6333_call()
output = call_6334
func_6335 = relay.Function([], output)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4574_call = mod.get_global_var('func_4574')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_6352 = func_4574_call()
call_6353 = func_4574_call()
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_6409 = relay.TupleGetItem(func_988_call(), 1)
call_6410 = relay.TupleGetItem(func_989_call(), 1)
func_733_call = mod.get_global_var('func_733')
func_738_call = mutated_mod.get_global_var('func_738')
const_6417 = relay.const([[-7.420083,-6.553145],[6.540446,-0.714238],[8.007533,-6.344711],[2.492617,9.813885],[-9.583316,9.766683],[-2.346871,-1.430953],[0.735537,0.347947],[-2.753436,2.085400],[-4.190789,2.657278],[6.436954,-1.948356],[0.131094,-9.736423],[-3.222581,-0.819385],[9.811409,8.063673],[7.511293,-3.694915],[-7.089354,-3.915581],[4.246595,4.130733],[8.559620,0.340745],[-4.956334,0.603160],[1.367839,-7.710018],[1.356427,-0.548082],[3.705032,-4.873734],[9.326935,4.828462],[-2.691672,9.006072],[8.915464,-0.607611],[9.591879,-0.279324],[4.615617,0.817156],[0.505382,-6.422801],[3.039409,9.102364],[1.252101,8.073357],[0.358695,-2.933906],[-0.090912,9.933190],[-2.966175,-9.269364],[-3.289939,-7.560826],[-7.861175,-6.501951],[9.782867,-4.943950],[1.932931,2.757643],[0.460888,4.172779],[3.128335,3.980077],[6.383350,-1.152865],[-0.905503,-2.856805],[5.515683,-2.593849],[-0.167069,1.526451],[-2.964188,-3.922270],[-5.941992,-3.576241],[-3.602197,-4.486867],[2.131188,5.138366],[-2.200470,-9.847185],[-0.660741,2.569069],[2.965144,5.407656],[-3.853111,-5.889083],[-0.772446,-3.891167],[-4.313613,7.053136],[8.202801,4.674371],[6.628168,0.707821],[-2.337741,-4.330820],[-8.814458,-3.668887],[9.757037,-7.819159],[-3.764043,-1.150257],[9.401575,7.933451],[4.498984,0.078646],[-6.768817,5.223167],[8.130728,-5.124306],[2.824044,5.092365],[-0.952287,2.390877],[7.298235,-6.416673],[-6.132380,7.609136],[1.411134,-9.000217],[0.497817,9.634191],[-7.358183,0.018571],[-7.657084,6.979535],[-9.945699,7.131443],[-0.207430,-6.407781],[-0.050521,4.202381],[-1.617393,0.593230],[-7.477755,-8.569519],[0.674552,2.205471],[6.283111,6.248775],[-5.298964,0.785079],[1.462797,-1.110090],[4.135462,-9.868273],[3.759632,7.891494],[-4.823003,3.122525],[-1.464752,-3.841279],[-6.848877,2.295727],[-9.731429,0.129097],[6.792161,9.208346],[5.120652,-2.467571],[-7.104480,9.896570],[-3.471090,3.593280],[3.871350,4.382034],[7.672193,5.647169],[-4.774837,4.156461],[5.569550,8.344049],[3.699915,-1.732290],[-5.800099,2.662557],[5.222118,-6.299962],[5.266753,-7.297908],[7.484648,-7.313331],[4.760607,-4.817580],[-1.228998,-3.986635],[-9.753218,-0.350930],[-8.068072,-5.904466],[1.673255,1.729784],[-0.093731,0.016161],[-8.322594,-6.492312],[6.184708,-0.799706],[-1.036897,-7.583199],[-3.932593,3.371617],[3.231041,-7.657036],[-3.963917,-1.056204],[-1.353357,-5.984768],[-9.505337,9.741575],[7.061822,-9.732924],[-4.504826,2.861924],[2.752321,-1.495328],[-8.127466,-0.544666],[3.717058,9.396555],[0.085184,-9.996248],[8.728103,0.725879],[-4.169956,-7.850059],[-7.673630,-0.107434],[3.211143,-1.853051],[-6.964294,-6.895979],[-3.481496,-1.360879],[5.837726,1.741404],[3.098868,2.113683],[-1.399116,-8.857995],[0.509345,-3.575967],[8.786577,-3.658662],[-6.621079,4.991008],[2.974869,5.349551],[-9.550974,-9.581514],[4.921688,4.108292],[3.467991,7.831356],[5.712879,-8.097527],[5.105973,-4.946419],[9.175290,5.799749],[8.421380,-9.599127],[8.915977,-7.404182],[7.445832,8.741051],[-7.899175,-9.838486],[7.447217,2.997857],[8.156372,4.487719],[-2.886493,-7.441186],[6.355817,4.219030],[-3.156293,6.152139],[4.493929,-6.273567],[-5.770914,9.936692],[-4.773076,-7.706056],[-8.256974,-7.415816],[3.284878,-0.772202],[0.267726,-1.345273],[-3.655870,-0.059181],[6.072276,-8.848950],[6.105732,-3.033760],[9.887764,7.176692],[7.171495,0.852556],[6.330137,7.901800],[-4.617322,7.997879],[-1.577404,-8.600406],[6.808125,-8.531573],[-5.135124,-6.197129],[1.530064,-5.521169],[-7.639073,-5.979458],[2.865843,1.607082],[0.372993,-4.861805],[-2.323145,9.897497],[9.397380,-7.386005],[-4.542593,2.534528],[4.468251,5.793439],[-6.501980,2.262129],[3.993349,-9.504892],[-0.810961,7.735627],[7.378502,1.602925],[7.386511,-3.590580],[-6.250133,-6.449314],[1.573189,5.700989],[2.442971,0.298730],[-7.891920,-7.325474],[-6.738024,8.755712],[5.892025,-5.686366],[-5.900486,-0.313840],[7.761463,-3.305723],[2.932549,-8.390656],[-5.196093,-8.707497],[-1.585779,-8.284225],[-8.614862,-2.099850],[4.320410,4.890098],[6.477409,9.408678],[2.895741,7.343629],[8.012567,-2.545331],[-2.817094,2.830479],[0.438948,-6.696557],[-0.414892,-6.710602],[-2.125243,1.220206],[-1.426978,-6.284570],[6.844971,7.491303],[5.226855,6.849894],[-6.454391,-0.556212],[-3.837518,-2.542509],[6.066465,-3.424875],[4.098151,-9.828302],[6.185629,8.684470],[5.820231,6.109566],[-0.070322,9.744043],[-4.715534,-5.581666],[7.612805,6.318936],[-5.597197,7.198102],[9.791733,1.598147],[-1.399236,-9.305162],[-8.211600,-1.963859],[0.471116,-2.082667],[-3.287567,2.894642],[-6.466278,-0.222118],[-6.286502,7.152857],[0.080268,-1.334614],[-7.707965,5.475089],[-6.100861,1.262711],[1.821465,-8.193195],[0.539710,-5.601124],[-4.550245,-0.670991],[5.906484,-7.293620],[4.021419,4.881928],[-8.941935,7.367780],[4.482806,-3.495810],[-0.916058,-7.376092],[1.404755,-1.092350],[7.280497,-2.678865],[-0.257899,-3.157900],[7.176505,-1.019494],[4.674516,8.379739],[0.049068,-2.295221],[0.229672,-3.323685],[-5.114583,-8.753101],[1.355568,4.524297],[4.572843,4.667555],[-3.818498,-5.842676],[-3.742208,-4.818605],[-7.633201,-9.392667],[-8.795633,-0.094255],[2.819772,1.250070],[-5.613611,2.864524],[-4.198881,-9.418936],[-8.942199,-7.441912],[-0.710496,7.241267],[3.318297,-8.636316],[4.968783,7.538223],[8.264331,-7.234388],[8.711101,0.229164],[4.890090,3.312474],[7.529550,7.882618],[5.034558,-6.186402],[-5.417125,8.871765],[-7.849115,6.574453],[-0.394722,1.208010],[2.989770,-6.576432],[-2.364823,-1.096747],[-7.515989,9.965379],[3.135952,8.720206],[-9.833798,-7.915469],[2.862738,-3.784717],[3.005853,-9.303702],[9.168665,-6.410231],[9.615745,9.429703],[-2.582615,9.957147],[5.525046,-0.917186],[2.235740,-5.983376],[5.711295,2.827958],[-4.319502,-9.026176],[6.999442,8.128434],[4.656868,3.990967],[-2.361809,-5.515665],[-4.136081,2.974133],[-3.969247,3.108807],[8.730404,-8.252980],[-4.489541,-0.680170],[7.009733,8.734579],[5.426786,8.719625],[-0.648188,0.206953],[6.070157,7.841296],[7.015071,-1.843939],[-7.037708,1.728697],[9.756231,-8.622377],[7.135795,-3.467548],[-6.244779,-9.583212],[-4.322740,-5.959567],[-3.517381,9.240844],[5.989539,-5.764166],[4.497081,-7.489766],[-5.156821,5.701039],[3.231894,8.867359],[-8.012871,-7.132225],[8.208886,-3.901283],[-5.860566,-6.221114],[-1.202859,6.133438],[-4.925702,-1.169043],[-8.468937,1.119315],[0.353774,-2.235438],[8.332771,9.416725],[2.560099,-9.106896],[-5.954834,-7.558219],[8.311009,-3.628912],[-1.782855,3.318516],[9.799720,-5.507564],[-2.515809,-2.114840],[-0.429818,3.492375],[-6.506355,-8.957826],[-7.741628,7.159676],[9.696750,4.967425],[-5.785372,8.511658],[9.720060,-1.377806],[-1.828478,-0.499887],[-5.254892,-0.631014],[6.773767,-7.207194],[0.120958,3.441065],[1.475595,-5.476685],[-7.303939,9.047606],[0.022032,0.858769],[2.936701,0.058113],[-0.893369,9.441320],[-8.165078,-0.333332],[1.829245,-7.259491],[4.149152,-5.647351],[-4.023503,8.114886],[-8.751995,6.768445],[8.903548,4.155299],[-2.799120,4.110962],[-2.917856,-0.040192],[-4.092578,0.815620],[8.766716,-4.619276],[8.414795,-1.662143],[-7.293738,5.634317],[-3.756036,-0.903430],[3.113365,8.337019],[1.187584,7.728924],[3.255760,-7.150676],[-7.476895,4.737384],[9.214120,-5.945221],[-0.125741,-3.608208],[-5.958137,1.333777],[0.176780,9.518213],[5.951112,-1.870839],[7.493144,4.907151],[3.249598,-4.589767],[5.333080,-4.578072],[-6.766708,1.995972],[9.179575,1.105950],[9.888835,-3.010577],[-0.021337,-0.663352],[-6.312948,-0.050908],[-1.587680,-9.965842],[-0.039679,5.092198],[-9.223209,-1.988532],[-6.140573,2.310236],[-9.470541,4.335747],[-3.229838,-2.325391],[2.241076,-1.776927],[5.907258,9.186766],[-1.440753,-2.156728],[7.847635,-5.888141],[0.147382,-5.860935],[8.488433,4.064592],[-7.623358,7.336946],[-8.047426,6.730672],[-1.600208,-6.407558],[7.462443,5.182688],[1.983008,-8.589379],[4.231251,8.022345],[0.132039,-3.213217],[5.806824,-7.593745],[5.625029,-4.233532],[7.497315,1.956772],[-2.805838,-0.350472],[-0.642318,0.039203],[9.111342,-3.841780],[6.411467,4.076363],[2.755298,5.643536],[5.916047,-2.959426],[3.543414,-7.217032],[-8.300090,1.023245],[3.305646,-0.366413],[5.716638,-3.902013],[2.997887,-4.146979],[-8.135269,-9.704339],[9.655122,-7.704826],[7.056548,6.409218],[-8.702686,-9.844756],[-6.334394,0.200237],[7.969679,5.631806],[2.814360,5.167247],[-0.155884,2.060808],[3.724790,-8.504688],[8.871530,8.587212],[7.896475,-8.749556],[-1.433647,-6.231330],[-3.606459,3.831812],[-7.495785,-5.937669],[-1.481672,-2.988808],[7.056400,8.949693],[6.671856,-3.211365],[-2.131790,-8.680271],[-5.445419,6.478198],[8.495225,8.882836],[2.213231,3.981459],[9.051800,-5.332072],[4.096470,-7.284715],[-5.369362,8.910418],[5.008825,8.619846],[1.047258,5.527523],[-3.242468,-0.090937],[8.522235,6.101253],[-8.929526,-3.998919],[-6.522335,1.190676],[0.228326,0.227512],[3.370623,-0.433724],[-2.280150,6.589698],[2.243148,5.272851],[3.176964,4.178701],[-1.931674,-5.731830],[4.499824,-9.078473],[9.400014,0.008777],[-4.589339,-5.781696],[5.960434,-3.934767],[-4.958783,2.897726],[3.375991,0.892432],[-7.938428,3.892264],[8.980900,-2.895044],[-2.416431,2.427407],[-3.787838,-9.650580],[4.849768,6.950436],[1.882944,-5.759245],[9.864194,2.841772],[-2.101694,8.452149],[5.669196,3.048525],[-9.833961,7.095458],[1.930599,-3.587684],[1.852782,-5.754142],[-3.446501,2.901303],[3.455611,4.695144],[2.149594,9.693119],[-5.521572,8.354264],[1.583053,-1.857861],[-3.276634,-8.583335],[-7.286274,1.541104],[-7.644078,-8.478972],[3.766976,-9.483069],[4.165437,1.603419],[7.418595,8.574932],[-8.355455,0.291757],[8.060949,0.641238],[-4.483422,7.046054],[9.226025,-5.329895],[-0.469191,-2.634236],[2.592390,3.843855],[-1.798470,4.208875]], dtype = "float32")#candidate|6417|(455, 2)|const|float32
const_6418 = relay.const([-9,-7,-7,4,-8,-8,4,4,3,9,5,10,-7,5,-8,-4,7,6,10,8,2,-2,-9,4,-2,-2,2,-2,8,-5,-6,-1,-4,-7,-10,-2,-10,-9,-1,-2,7,2,8,8,-9,-10,4,10,-2,-2,-1,-5,9,9,-8,-4,7,-4,-8,-8,-7,-4,10,1,-10,-4,-7,1,4,7,2,-9,-7,-1,3,-4,8,3,3,-1,7,5,6,-2,-7,-4,-10,8,-6,-4,8,1,-7,5,-8,-4,-4,1,-4,-2,-1,2,1,-1,-10,-6,-3,6,1,2,8,6,-5,-1,9,-2,2,-2,-5,-8,7,3,10,2,1,-3,-9,10,-6,-3,-4,3,-10,-9,-7,-9,-10,4,2,-1,1,-9,-3,-4,-9,1,-3,-9,1,-7,-4,3,-9,-4,-3,1,1,4,-10,-2,-7,-2,1,-5,-9,1,1,7,-10,-10,-8,-7,-4,2,1,-2,-8,1,6,-2,-2,-8,6,2,6,7,4,4,6,1,1,8,-8,9,-6,-8,-3,-1,2,2,-7,4,6,-3,-4,-2,8,6,-10,1,-5,6,5,-8,-3,5,-3,5,-6,4,3,-7,-7,-8,-8,-2,-7,-5,-8,-9,3,-4,4,-8,8,-2,-7,5,-2,10,3,4,-10,2,2,-10,-5,3,-4,4,2,-6,-7,-4,3,10,4,3,5,-6,7,1,-10,5,-7,7,-5,10,-3,10,8,9,-7,10,10,-8,1,2,6,-7,-4,-4,-7,-10,3,-6,3,-3,-2,10,-8,-10,8,10,9,8,-2,-4,-1,1,8,4,-5,-10,1,-8,8,8,9,-1,5,-6,6,-8,-6,-10,6,-6,3,5,-5,3,-10,1,-6,10,4,8,5,6,5,-6,3,10,-7,10,-8,5,-3,-7,-1,-2,-2,4,6,-9,-7,2,6,-6,8,4,8,-6,-8,-1,10,1,-4,9,4,-5,-2,10,10,10,-1,-8,4,9,-6,10,-4,10,-7,-1,7,-3,-2,9,-9,2,1,-9,3,-8,8,7,-8,-1,-7,5,8,-5,3,10,10,1,1,10,-8,3,6,-10,-6,-9,-3,7,4,-10,3,-8,4,-8,-9,-9,7,-5,-1,-7,-5,-9,3,-10,7,6,3,-5,-5,-2,-1,1,2,-9,10,9,2,-6,4,-4,7,1,5,-7,-10,5,9,-9,4,5,6,9,-1,-5,-10,-4,-10,-7,2,5,2,-3,-8,3,10,5,-1,4,-1,7,-7,-8,-7,-3,-8,8,8,2,-4,5,-2,-10,7,5,2,-9,2,-7,4,-5,-8,-4,-6,10,1,4,8,-4,-9,-2,10,1,1,-8], dtype = "int16")#candidate|6418|(504,)|const|int16
call_6416 = relay.TupleGetItem(func_733_call(relay.reshape(const_6417.astype('float32'), [13, 7, 10]), relay.reshape(const_6417.astype('float32'), [13, 7, 10]), relay.reshape(const_6417.astype('float32'), [13, 7, 10]), relay.reshape(const_6418.astype('int16'), [12, 42]), ), 3)
call_6419 = relay.TupleGetItem(func_738_call(relay.reshape(const_6417.astype('float32'), [13, 7, 10]), relay.reshape(const_6417.astype('float32'), [13, 7, 10]), relay.reshape(const_6417.astype('float32'), [13, 7, 10]), relay.reshape(const_6418.astype('int16'), [12, 42]), ), 3)
output = relay.Tuple([call_6352,call_6409,call_6416,const_6417,const_6418,])
output2 = relay.Tuple([call_6353,call_6410,call_6419,const_6417,const_6418,])
func_6424 = relay.Function([], output)
mod['func_6424'] = func_6424
mod = relay.transform.InferType()(mod)
output = func_6424()
func_6425 = relay.Function([], output)
mutated_mod['func_6425'] = func_6425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3224_call = mod.get_global_var('func_3224')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_6454 = relay.TupleGetItem(func_3224_call(), 0)
call_6455 = relay.TupleGetItem(func_3225_call(), 0)
func_849_call = mod.get_global_var('func_849')
func_851_call = mutated_mod.get_global_var('func_851')
call_6456 = relay.TupleGetItem(func_849_call(), 0)
call_6457 = relay.TupleGetItem(func_851_call(), 0)
output = relay.Tuple([call_6454,call_6456,])
output2 = relay.Tuple([call_6455,call_6457,])
func_6461 = relay.Function([], output)
mod['func_6461'] = func_6461
mod = relay.transform.InferType()(mod)
output = func_6461()
func_6462 = relay.Function([], output)
mutated_mod['func_6462'] = func_6462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3110_call = mod.get_global_var('func_3110')
func_3111_call = mutated_mod.get_global_var('func_3111')
call_6473 = relay.TupleGetItem(func_3110_call(), 1)
call_6474 = relay.TupleGetItem(func_3111_call(), 1)
output = relay.Tuple([call_6473,])
output2 = relay.Tuple([call_6474,])
func_6480 = relay.Function([], output)
mod['func_6480'] = func_6480
mod = relay.transform.InferType()(mod)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6480_call = mutated_mod.get_global_var('func_6480')
call_6481 = func_6480_call()
output = call_6481
func_6482 = relay.Function([], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4148_call = mod.get_global_var('func_4148')
func_4150_call = mutated_mod.get_global_var('func_4150')
call_6527 = relay.TupleGetItem(func_4148_call(), 3)
call_6528 = relay.TupleGetItem(func_4150_call(), 3)
output = call_6527
output2 = call_6528
func_6531 = relay.Function([], output)
mod['func_6531'] = func_6531
mod = relay.transform.InferType()(mod)
mutated_mod['func_6531'] = func_6531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6531_call = mutated_mod.get_global_var('func_6531')
call_6532 = func_6531_call()
output = call_6532
func_6533 = relay.Function([], output)
mutated_mod['func_6533'] = func_6533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_6542 = func_5086_call()
call_6543 = func_5086_call()
uop_6544 = relay.log2(call_6542.astype('float64')) # shape=(9, 8, 5)
uop_6546 = relay.log2(call_6543.astype('float64')) # shape=(9, 8, 5)
output = relay.Tuple([uop_6544,])
output2 = relay.Tuple([uop_6546,])
func_6547 = relay.Function([], output)
mod['func_6547'] = func_6547
mod = relay.transform.InferType()(mod)
output = func_6547()
func_6548 = relay.Function([], output)
mutated_mod['func_6548'] = func_6548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5309_call = mod.get_global_var('func_5309')
func_5311_call = mutated_mod.get_global_var('func_5311')
call_6567 = func_5309_call()
call_6568 = func_5309_call()
func_3776_call = mod.get_global_var('func_3776')
func_3779_call = mutated_mod.get_global_var('func_3779')
const_6591 = relay.const([2,9,3,-4,-7,10,-2,7,-9,-1,5,1,-4,3,3,-8,9,-10,1,-5,-6,-6,3,4,-10,-8,-7,-4,-1,-2,-4,9,8,-8,-7,5,7,4,7,-10,5,10,7,4,-9,-4,7,-6,5,3,-8,-7,-2,-3,-9,5,-2,-7,-9,7,-9,2,-6,-2,6,-5,4,9,1,4,-6,-7,4,-9,6,4,7,-3,8,-4,-9,-9,10,-10,10,2,-4,6,2,-4,1,4,-6,3,-10,-8,-7,-3,-3,-8,10,-8,-1,-4,-2,-3,-8,5,4,8,6,-7,1,9,-5,-6,1,1,2,6,6,9,6,8,1,-8,-1,9,4,-7,-7,6,-9,-9,-4,7,4,-6,7,2,1,4,-4,-6,-10,-9,-8,-6,-4,9,2,10,9,8,-9,5,-2,-3,-3,5,4,2,-1,-10,-3,-2,3,1,-7,10,-1,7,-6,-10,-1,-4,-8,-6,5,3,3,5,1,-9,-8,6,8,3,-4,-4,-7,-10,7,6,-2,-3,8,2,-5,8,2,3,7,-5,-8,-6,9,3,-1,-9,-10,7,-10,7,-10,1,9,1,1,-7,-6,5,10,-1,-7,-4,-3,-4,10,10,-6,-1,6,-9,9,-5,10,10,10,-2,4,-5,-7,-9,10,-4,-2,-9,6,-3,-5,-1,2,6,-5,-10,-4,-7,2,5,-7,6,3,-6,-5,-5,-9,7,10,-3,2,5,8,7,7,-2,1,4,5,-3,8,1,6,1,1,-10,-7,9,6,5,-7,10,7,10,-3,-2,-2,-10,-9,4,-5,3,9,7,-9,9,-9,2,2,-8,6,7,3,8,-10,-3,7,9,1,9,10,4,8,7,-9,-6,7,6,-3,-3,7,2,-6,-9,-10,-7,-8,-2,-8,-8,-4,-5,-8,-2,-5,7,-2,7,-1,5,7,-2,2,3,2,8,-6,8,3,-6,-4,-2,2,-6,-8,-6,4,9,-1,7,-4,9,9,-3,-7,3,-1,-2,6,8,9,-8,2,-9,10,6,3,1,5,4,-2,-5,-6,8,5,8,9,-8,-5,-4,5,8,-5,9,4,2,-4,9,-6,-2,2,-4,5,-4,1,5,9,-3,4,-4,9,4,-5,-1,-9,-1,-2,6,8,-10,-9,4,-2,-4,-1,7,-6,-3,-6,-3,9,8,8,-1,-5,5,9,3,8,-8,-6,9,7,-5,4,8,2,5,1,6,8,-1,3,-8,3,-10,-2,3,8,-2,5,-8,-5,7,-10,3,6,-8,-10,-2,4,-2,-10,8,2,-10,10,-4,-2,3,5,3,10,2,8,10,5,-10,6,3,-8,7,-3,-2,-3,9,1,-9,3,-8,7,-3,-2,7,9,-6,-5,4,5,2,-1,3,-5,2,6,-9,9,-5,-4,-9,-4,-1,-9,6,-1,1,1,5,-8,4,-8,-7,6,10,-6,-3,7,9,7,1,6,-1,5,3,-4,5,3,-10,4,6,-2,-10,3,4,-7,-9,6,9,7,-5,10,-2,2,1,6,7,6,-7,-9,8,-8,6,-8,-5,9,-5,-10,4,-3,-1,10,-6,-5,7,8,7,-4,-1,-2,-7,-8,9,-1,1,8,4,-10,-8,5,-7,9,-10,1,-5,-10,1,5,6,-7,-2,1,-4,-8,3,6,-6,-8,-9,-10,9,7,5,-3,9,-10,-4,-9,-1,1,-10,-6,3,5,-2,-6,-2,-2,-4,10,7,-6,-10,-9,2,4,8,-10,-5,-5,-1,-9,-2,2,8,-1,1,-3,-2,3,-6,-10,1,7,7,5,3,-3,-5,-10,6,-5,9,-1,4,-9,-2,-7,8,-9,6,-7,5,3,-4,10,-6,-8,-7,-8,-2,1,5,-7,2,2,-7,6,-6,2,3,1,-9,4,9,-6,10,-6,-5,-10,8,-2,10,7,-6,7,10,-9,-8,-6,-7,-1,-10,-2,10,2,5,-3,4,2,-6,1,8,7,-5,6,-7,-8,3,-2,3,3,7,-2,5,-1,4,8,-2,-1,-2,-8,3,-4,6,-1,1,7,-1,1,3,-8,-3,-1,5,-3,-9,4,9,-10,5,5,7,-5,1,6,-7,-4,-3,9,-7,5,-5,9,6,-8,1,8,-5,8,-9,3,1,8,10,-3,10,-6,4,9,-5,4,10,5,7,3,-10,-5,2,4,-1,-3,-5,-7,4,-1,-1,-4,1,6,3,-5,6,3,-3,1,5,8,3,-9,1,4,8,-5,-7,6,-2,2,-3,5,-3,-4,2,-8,-9,-10,10,-4,-1,-7,2,8,-6,-4,-5,-7,-7,9,-4,4,6,4,7,-6,7,-7,-9,-4,5,-6,-7,1,7,-3,6,4,1,-8,6,-9,9,5,-10,5,-7,8,-7,9,-8,2,-2,-4,6,1,9,-6,-5,6,-10,-5,-3,2,-1,-3,5,-2,4,8,-9,-2,1,9,-1,-3,8,-9,-2,-3,3,-1,1,-5,-9,-5,-4,-1,6,-2,4,5,5,5,6,10,1,-8,-7,7,6,6,-10,-6,6,-1,-3,-2,-2,-6,4,8,9,10,-6,4,1,-3,-7,-7,-7,3,5,-8,2,-5,-4,-4,8,-9,-2,-8,2,-6,-2,-4,-1,9,-2,-5,5,-3,-5,-1,10,9,2,-9,-3,-7,-7,-2,-8,8,-9,4,-5,2,3,-4,3,7,3,2,-10,-10,10,7,4,9,8,-9,10,2,-5,6,-2,-5,-10,2,6,7,6,7,1,5,-7,4,-8,-3,-5,-2,4,5,-4,4,-8,7,6,4,-10,-9,-5,-6,-9,7,10,2,-5,-9,-3,9,3,5,-2,9,10,-8,-2,8,-5,-7,4,-10,8,8,-2,5,4,7,3,-7,5,-7,-2,-10,2,2,1,-5,-1,2,-1,-9,9,3,1,4,-5,-4,-8,4,4,-5,9,-3,6,-4,-4,-4,-8,-6,4,6,3,-8,6,10,-7,-6,7,-7,-7,-10,3,-8,8,9,-6,-3,6,-9,-3,-4,-3,7,2,-3,-4,-1,-4,5,5,-5,-10,1,2,-2,-8,-3,9,-1,3,-9,4,3,1,1,3,-8,-6,1,-8,3,9,8,-8,-6,-2,8,-7,5,9,5,-6,5,3,-10,-10,8,8,7,5,-7,-10,-3,7,6,-8,10,-7,5,-2,10,7,1,-4,-3,4,5,6,3,-10,1,-4,-9,7,-9,-9,3,9,-5,-2,3,8,-2,-8,8,-3,-7,2,-8,-9,8,-7,8,-4,-10,-9,4,1,-2,10,10,-10,2,2,-1,-6,1,-1,-9,1,-3,2,-10,5,5,-3,-9,-9,-7,1,-2,-8,-8,3,3,-9,-6,6,-6,-9,4,-4,-7,6,-4,3,-3,10,-9,1,8,-8,2,4,5,-9,-5,4,7,-7,8,-8,2,-4,-2,-5,-6,-9,-9,6,-6,2,9,-5,-7,-9,4,-8,5,9,7,-10,-7,1,1,9,-6,9,7,2,-6,-1,-8,9,10,-3,-2,-10,-1,6], dtype = "int64")#candidate|6591|(1320,)|const|int64
call_6590 = relay.TupleGetItem(func_3776_call(relay.reshape(const_6591.astype('int64'), [10, 11, 12])), 0)
call_6592 = relay.TupleGetItem(func_3779_call(relay.reshape(const_6591.astype('int64'), [10, 11, 12])), 0)
output = relay.Tuple([call_6567,call_6590,const_6591,])
output2 = relay.Tuple([call_6568,call_6592,const_6591,])
func_6597 = relay.Function([], output)
mod['func_6597'] = func_6597
mod = relay.transform.InferType()(mod)
output = func_6597()
func_6598 = relay.Function([], output)
mutated_mod['func_6598'] = func_6598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6599 = relay.var("var_6599", dtype = "float32", shape = (12, 5, 11))#candidate|6599|(12, 5, 11)|var|float32
uop_6600 = relay.sigmoid(var_6599.astype('float32')) # shape=(12, 5, 11)
func_988_call = mod.get_global_var('func_988')
func_989_call = mutated_mod.get_global_var('func_989')
call_6609 = relay.TupleGetItem(func_988_call(), 1)
call_6610 = relay.TupleGetItem(func_989_call(), 1)
output = relay.Tuple([uop_6600,call_6609,])
output2 = relay.Tuple([uop_6600,call_6610,])
func_6611 = relay.Function([var_6599,], output)
mod['func_6611'] = func_6611
mod = relay.transform.InferType()(mod)
mutated_mod['func_6611'] = func_6611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6612 = relay.var("var_6612", dtype = "float32", shape = (12, 5, 11))#candidate|6612|(12, 5, 11)|var|float32
func_6611_call = mutated_mod.get_global_var('func_6611')
call_6613 = func_6611_call(var_6612)
output = call_6613
func_6614 = relay.Function([var_6612], output)
mutated_mod['func_6614'] = func_6614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_6618 = func_6333_call()
call_6619 = func_6333_call()
uop_6622 = relay.atan(call_6618.astype('float64')) # shape=(9, 3, 2)
uop_6624 = relay.atan(call_6619.astype('float64')) # shape=(9, 3, 2)
func_3799_call = mod.get_global_var('func_3799')
func_3800_call = mutated_mod.get_global_var('func_3800')
call_6632 = relay.TupleGetItem(func_3799_call(), 0)
call_6633 = relay.TupleGetItem(func_3800_call(), 0)
func_3224_call = mod.get_global_var('func_3224')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_6637 = relay.TupleGetItem(func_3224_call(), 0)
call_6638 = relay.TupleGetItem(func_3225_call(), 0)
output = relay.Tuple([uop_6622,call_6632,call_6637,])
output2 = relay.Tuple([uop_6624,call_6633,call_6638,])
func_6643 = relay.Function([], output)
mod['func_6643'] = func_6643
mod = relay.transform.InferType()(mod)
output = func_6643()
func_6644 = relay.Function([], output)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1401_call = mod.get_global_var('func_1401')
func_1403_call = mutated_mod.get_global_var('func_1403')
call_6668 = func_1401_call()
call_6669 = func_1401_call()
uop_6676 = relay.exp(call_6668.astype('float64')) # shape=(10, 11, 12)
uop_6678 = relay.exp(call_6669.astype('float64')) # shape=(10, 11, 12)
func_3250_call = mod.get_global_var('func_3250')
func_3252_call = mutated_mod.get_global_var('func_3252')
call_6682 = relay.TupleGetItem(func_3250_call(), 0)
call_6683 = relay.TupleGetItem(func_3252_call(), 0)
func_6333_call = mod.get_global_var('func_6333')
func_6335_call = mutated_mod.get_global_var('func_6335')
call_6701 = func_6333_call()
call_6702 = func_6333_call()
func_4574_call = mod.get_global_var('func_4574')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_6704 = func_4574_call()
call_6705 = func_4574_call()
func_780_call = mod.get_global_var('func_780')
func_781_call = mutated_mod.get_global_var('func_781')
call_6706 = relay.TupleGetItem(func_780_call(), 0)
call_6707 = relay.TupleGetItem(func_781_call(), 0)
output = relay.Tuple([uop_6676,call_6682,call_6701,call_6704,call_6706,])
output2 = relay.Tuple([uop_6678,call_6683,call_6702,call_6705,call_6707,])
func_6714 = relay.Function([], output)
mod['func_6714'] = func_6714
mod = relay.transform.InferType()(mod)
output = func_6714()
func_6715 = relay.Function([], output)
mutated_mod['func_6715'] = func_6715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3562_call = mod.get_global_var('func_3562')
func_3563_call = mutated_mod.get_global_var('func_3563')
call_6879 = relay.TupleGetItem(func_3562_call(), 0)
call_6880 = relay.TupleGetItem(func_3563_call(), 0)
func_3562_call = mod.get_global_var('func_3562')
func_3563_call = mutated_mod.get_global_var('func_3563')
call_6882 = relay.TupleGetItem(func_3562_call(), 0)
call_6883 = relay.TupleGetItem(func_3563_call(), 0)
func_733_call = mod.get_global_var('func_733')
func_738_call = mutated_mod.get_global_var('func_738')
var_6894 = relay.var("var_6894", dtype = "float32", shape = (91, 10))#candidate|6894|(91, 10)|var|float32
const_6895 = relay.const([7,-4,5,1,-6,-10,-6,10,-10,9,-2,10,7,-10,-7,8,-10,-4,10,-1,-10,9,3,5,-2,-5,9,10,5,9,-8,-10,7,3,1,-6,-6,8,4,-3,10,-1,-5,-6,-3,-6,2,-1,-10,-8,8,-4,1,-6,-7,-1,10,7,5,8,8,10,2,1,-6,4,5,10,10,-8,8,-6,-3,6,6,-9,7,-6,-3,-10,-6,-4,-2,4,2,-3,-3,-1,-1,6,10,-4,7,6,5,-6,2,-1,-6,-10,-6,1,3,-8,8,4,1,4,7,5,-8,4,-3,-8,-9,9,3,-7,-1,-1,-10,6,-4,-9,-2,3,-7,4,4,-1,2,8,-8,-2,-9,10,9,-1,8,-1,4,2,5,-3,8,9,2,5,-4,2,1,3,8,2,3,8,-9,7,6,2,4,4,-9,-7,-8,-6,-1,-9,-2,6,-4,3,7,-9,1,-9,-3,10,-3,-6,-6,-2,-1,5,-1,1,7,1,5,7,3,9,-8,-7,6,4,6,-8,-6,-2,-3,-2,-6,-4,-7,5,4,6,-4,3,-6,1,-2,9,-1,-4,-4,5,-1,3,10,8,3,-6,-6,-7,7,-4,-9,8,6,6,-8,1,2,9,-3,5,-10,-5,3,9,-3,2,8,4,2,5,5,-1,-2,-10,-9,3,10,-8,-1,5,-1,-6,5,-4,-1,8,5,-2,2,-3,9,-2,5,9,8,10,1,10,-7,4,3,4,3,-6,10,-8,9,-5,2,2,10,-9,9,8,4,-4,5,-5,-3,-3,-2,1,3,-6,2,6,10,-2,7,-5,-1,9,6,-4,5,-4,-2,-8,1,-1,2,6,7,8,-7,6,-1,-5,9,6,1,-2,-4,-8,-4,1,-10,-7,4,-10,10,10,1,8,7,5,-5,10,7,8,9,-7,-4,-6,2,9,2,-3,7,4,-7,-3,-3,-2,3,2,-9,2,5,-2,-4,9,2,-10,3,-2,-2,-3,-8,-5,-4,2,8,-7,-2,8,-1,1,-10,2,-4,4,-7,-10,3,-5,-2,2,-3,-1,-9,-10,-7,-6,3,-10,10,2,2,-2,7,2,6,-9,3,3,-2,-4,7,8,8,6,4,7,10,-1,-9,-6,8,-4,-9,5,-4,-2,1,-1,-8,8,7,-9,7,5,6,-10,9,5,3,-1,9,7,5,-10,9,6,5,2,-9,9,10,-8,-5,9,1,4,5,-1,-3,3,8,7,-7,5,-8,9,-4,-7,10,-7,-5,-2,-6,1,1,-1,-5,2,9,-8,-4,5,6,6,-7,6,8,6,-2,-3,-1,3,5,8,5,-3,2,6], dtype = "int16")#candidate|6895|(504,)|const|int16
call_6893 = relay.TupleGetItem(func_733_call(relay.reshape(var_6894.astype('float32'), [13, 7, 10]), relay.reshape(var_6894.astype('float32'), [13, 7, 10]), relay.reshape(var_6894.astype('float32'), [13, 7, 10]), relay.reshape(const_6895.astype('int16'), [12, 42]), ), 3)
call_6896 = relay.TupleGetItem(func_738_call(relay.reshape(var_6894.astype('float32'), [13, 7, 10]), relay.reshape(var_6894.astype('float32'), [13, 7, 10]), relay.reshape(var_6894.astype('float32'), [13, 7, 10]), relay.reshape(const_6895.astype('int16'), [12, 42]), ), 3)
output = relay.Tuple([call_6879,call_6882,call_6893,var_6894,const_6895,])
output2 = relay.Tuple([call_6880,call_6883,call_6896,var_6894,const_6895,])
func_6900 = relay.Function([var_6894,], output)
mod['func_6900'] = func_6900
mod = relay.transform.InferType()(mod)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6901 = relay.var("var_6901", dtype = "float32", shape = (91, 10))#candidate|6901|(91, 10)|var|float32
func_6900_call = mutated_mod.get_global_var('func_6900')
call_6902 = func_6900_call(var_6901)
output = call_6902
func_6903 = relay.Function([var_6901], output)
mutated_mod['func_6903'] = func_6903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4550_call = mod.get_global_var('func_4550')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_6918 = relay.TupleGetItem(func_4550_call(), 0)
call_6919 = relay.TupleGetItem(func_4552_call(), 0)
func_4298_call = mod.get_global_var('func_4298')
func_4300_call = mutated_mod.get_global_var('func_4300')
const_6939 = relay.const([6.439993,-0.254887,-9.524820,-3.456366,-2.251566,3.894546,1.258834,4.597886,4.703463,-2.329068,0.934426,1.114259,7.115569,-9.703253,4.500872,-3.662701,5.325974,-7.789698,-6.062213,0.189936,2.666050,0.008700,-8.441895,-4.337665,0.328692,-0.074793,7.860457,6.740158,2.400794,7.891061,-0.117372,5.401782,-7.798692,1.565751,-6.711827,-5.142934,0.778633,-2.756732,-5.738871,8.126026,-9.025250,-5.049150,7.436863,-5.380317,9.226534,-7.244589,2.087537,8.861934,9.129883,-3.195233,9.182417,1.024626,-4.030917,8.769033,6.551273,-6.084993,-3.442534,2.497454,2.554274,3.806270,-4.553193,-6.227578,7.673087,0.708031,3.815877,1.307195,-9.929491,5.586813,-4.566626,0.588285,-4.387365,5.160775,-8.453758,-0.933423,-0.831835,-8.331472,0.362954,-6.542923,-8.574731,-0.183853,5.701191,6.393771,-6.643272,6.965609,7.885634,-3.550447,-8.761310,-5.892453,2.759778,-7.529963,-1.544895,-1.469125,-4.827660,8.280851,-8.130203,-2.346450,7.754177,-7.338710,-1.671809,-2.262167,-7.223320,5.029621,9.345134,-0.661007,8.268671,-3.802776,4.694710,2.417006,-1.993607,3.086469,-4.891098,-8.195006,3.979076,-2.641251,-7.615710,5.981313,5.727782,-8.410453,-1.187085,2.521214,5.021783,-7.108150,-7.409284,-6.496231,-4.453096,-2.316438,9.067045,-5.094288,0.579881,0.016360,2.865918,-5.410304,2.810889,8.266253,2.215168,9.187377,3.584894,-3.735948,-2.445319,-8.953474,-5.120842,6.603171,0.463801,-4.250495,-9.907509,7.243837,-5.338810,5.488563,-4.768544,4.420716,0.122262,-8.953500,-7.808870,7.372908,-6.761039,9.408520,-7.733542,-5.551935,-9.830539,-6.368843,-1.206889,0.956805,9.419482,9.436143,5.611584,-5.738800,6.805943,1.872623,8.470900,-1.462059,-4.389092,-3.502537,3.743379,4.598181,0.080660,-8.120121,0.960741,-8.876935,-6.531196,-2.048898,-7.102324,2.991512,7.829465,-3.801915,9.599781,-3.363067,-6.544832,-4.056292,-1.073563,-9.042898,5.126200,2.613894,-2.404075,7.680513,7.902486,-2.569517,-7.734853,-9.969749,3.038547,-3.294027,3.555643,-1.808092,7.701829,2.379096,-8.829322,5.687682,9.286082,-0.973592,-6.272257,-2.328780,5.634136,-0.840959,-3.397837,-5.604182,8.953388,-7.281520,7.842141,-7.404380,2.420795,-9.746779,0.073728,0.636030,0.678038,-2.752965,-9.350247,0.443429,-3.556201,0.171819,-9.061774,-6.355308,3.932173,8.669746,1.069599,1.248860,8.329871,0.054907,-0.039826,3.887122,-7.132079,5.990385,1.239380,6.185371,-5.368657,-3.488626,-4.409735,-1.792235,-0.526439,-2.984131,-0.706485,-7.364157,-1.745774,-7.238550,8.314136,-0.775676,-7.984085,-0.826217,-5.056984,5.797815,-1.474645,-4.720646,-2.226651,-9.237321,-9.915007,-1.825714,2.544303,-5.401028,-2.586424,-8.782852,9.776492,-1.136410,-3.000098,1.556644,-4.883741,-3.249723,-3.699212,8.176629,7.147198,3.551222,-9.814650,-8.766864,1.517426,0.184908,-6.522467,1.716245,-2.979358,7.980422,-4.768244,-8.151367,1.652136,6.944153,7.550148,-6.601327,7.027766,-9.395076,5.849836,1.424571,0.635412,1.000829,-6.178161,3.902999,-9.187118,4.646712,1.594213,2.624658,-5.403057,6.176795,1.844961,7.286317,7.809276,-4.250068,-7.959054,4.133338,3.489120,4.346169,6.748692,-0.316374,6.855519,-9.258131,1.499272,0.709610,5.411651,3.240809,-8.679768,0.302133,-5.084699], dtype = "float32")#candidate|6939|(325,)|const|float32
call_6938 = relay.TupleGetItem(func_4298_call(relay.reshape(const_6939.astype('float32'), [5, 13, 5])), 1)
call_6940 = relay.TupleGetItem(func_4300_call(relay.reshape(const_6939.astype('float32'), [5, 13, 5])), 1)
output = relay.Tuple([call_6918,call_6938,const_6939,])
output2 = relay.Tuple([call_6919,call_6940,const_6939,])
func_6942 = relay.Function([], output)
mod['func_6942'] = func_6942
mod = relay.transform.InferType()(mod)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6942_call = mutated_mod.get_global_var('func_6942')
call_6943 = func_6942_call()
output = call_6943
func_6944 = relay.Function([], output)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_6966 = relay.TupleGetItem(func_2912_call(), 0)
call_6967 = relay.TupleGetItem(func_2913_call(), 0)
output = relay.Tuple([call_6966,])
output2 = relay.Tuple([call_6967,])
func_6976 = relay.Function([], output)
mod['func_6976'] = func_6976
mod = relay.transform.InferType()(mod)
mutated_mod['func_6976'] = func_6976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6976_call = mutated_mod.get_global_var('func_6976')
call_6977 = func_6976_call()
output = call_6977
func_6978 = relay.Function([], output)
mutated_mod['func_6978'] = func_6978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7090 = relay.var("var_7090", dtype = "uint16", shape = ())#candidate|7090|()|var|uint16
var_7091 = relay.var("var_7091", dtype = "uint16", shape = (1, 14, 3))#candidate|7091|(1, 14, 3)|var|uint16
bop_7092 = relay.subtract(var_7090.astype('uint16'), var_7091.astype('uint16')) # shape=(1, 14, 3)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_7095 = relay.TupleGetItem(func_4697_call(), 0)
call_7096 = relay.TupleGetItem(func_4699_call(), 0)
bop_7101 = relay.divide(var_7090.astype('float64'), bop_7092.astype('float64')) # shape=(1, 14, 3)
bop_7106 = relay.logical_or(bop_7101.astype('bool'), relay.reshape(bop_7092.astype('bool'), relay.shape_of(bop_7101))) # shape=(1, 14, 3)
bop_7112 = relay.less_equal(var_7091.astype('bool'), relay.reshape(bop_7101.astype('bool'), relay.shape_of(var_7091))) # shape=(1, 14, 3)
uop_7116 = relay.asinh(bop_7101.astype('float64')) # shape=(1, 14, 3)
output = relay.Tuple([call_7095,bop_7106,bop_7112,uop_7116,])
output2 = relay.Tuple([call_7096,bop_7106,bop_7112,uop_7116,])
func_7125 = relay.Function([var_7090,var_7091,], output)
mod['func_7125'] = func_7125
mod = relay.transform.InferType()(mod)
var_7126 = relay.var("var_7126", dtype = "uint16", shape = ())#candidate|7126|()|var|uint16
var_7127 = relay.var("var_7127", dtype = "uint16", shape = (1, 14, 3))#candidate|7127|(1, 14, 3)|var|uint16
output = func_7125(var_7126,var_7127,)
func_7128 = relay.Function([var_7126,var_7127,], output)
mutated_mod['func_7128'] = func_7128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mod.get_global_var('func_5054')
func_5056_call = mutated_mod.get_global_var('func_5056')
call_7142 = func_5054_call()
call_7143 = func_5054_call()
func_1252_call = mod.get_global_var('func_1252')
func_1254_call = mutated_mod.get_global_var('func_1254')
var_7169 = relay.var("var_7169", dtype = "float64", shape = (300,))#candidate|7169|(300,)|var|float64
call_7168 = func_1252_call(relay.reshape(var_7169.astype('float64'), [10, 10, 3]))
call_7170 = func_1252_call(relay.reshape(var_7169.astype('float64'), [10, 10, 3]))
func_2137_call = mod.get_global_var('func_2137')
func_2139_call = mutated_mod.get_global_var('func_2139')
call_7177 = relay.TupleGetItem(func_2137_call(), 0)
call_7178 = relay.TupleGetItem(func_2139_call(), 0)
var_7184 = relay.var("var_7184", dtype = "float32", shape = (9, 8, 5))#candidate|7184|(9, 8, 5)|var|float32
bop_7185 = relay.bitwise_or(call_7142.astype('int16'), relay.reshape(var_7184.astype('int16'), relay.shape_of(call_7142))) # shape=(9, 8, 5)
bop_7188 = relay.bitwise_or(call_7143.astype('int16'), relay.reshape(var_7184.astype('int16'), relay.shape_of(call_7143))) # shape=(9, 8, 5)
output = relay.Tuple([call_7168,var_7169,call_7177,bop_7185,])
output2 = relay.Tuple([call_7170,var_7169,call_7178,bop_7188,])
F = relay.Function([var_7169,var_7184,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7169,var_7184,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

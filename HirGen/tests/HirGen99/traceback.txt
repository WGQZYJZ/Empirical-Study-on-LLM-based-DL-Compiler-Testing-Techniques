==========mod==========
#[version = "0.0.5"]
def @func_4675() -> Tensor[(12, 9), float32] {
  @func_487() /* ty=Tensor[(12, 9), float32] */
}

def @func_6688(%var_6663: Tensor[(3, 11, 5), float64]) -> (Tensor[(3, 11, 5), float64], Tensor[(12, 9), float32], Tensor[(3, 11, 5), float32]) {
  %0 = cast(%var_6663, dtype="float64") /* ty=Tensor[(3, 11, 5), float64] */;
  %1 = @func_6617() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %2 = cast(%var_6663, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  %3 = cosh(%0) /* ty=Tensor[(3, 11, 5), float64] */;
  %4 = %1.0;
  %5 = rsqrt(%2) /* ty=Tensor[(3, 11, 5), float32] */;
  (%3, %4, %5)
}

def @func_7789(%var_7746: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %6 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %8 = reshape(%7, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %9 = @func_4557(%8) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) */;
  %10 = cast(%var_7746, dtype="int16") /* ty=Tensor[(448), int16] */;
  %11 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(448), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?), int16] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %15 = reshape(%14, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %16 = @func_4557(%15) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) */;
  %17 = @func_6617() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %18 = %6.3;
  %19 = %9.2;
  %20 = subtract(%12, %13) /* ty=Tensor[(448), int16] */;
  %21 = %16.3;
  %22 = %17.0;
  (%18, %19, %20, %21, %22)
}

def @func_2049() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
  %23 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %24 = %23.0;
  %25 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  %26 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  (%24, %25, %26)
}

def @func_8226(%var_8208: Tensor[(896), int8]) -> (Tensor[(5, 5, 15), float32], Tensor[(256), int16], int8, Tensor[(896), int8], Tensor[(12, 9, 11), float32]) {
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 15), float32] */;
  %28 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %29 = cast(%var_8208, dtype="int8") /* ty=Tensor[(896), int8] */;
  %30 = reshape(%28, newshape=[]) /* ty=int8 */;
  %31 = reshape(%29, newshape=[896]) /* ty=Tensor[(896), int8] */;
  %32 = @func_3757(%30, %31) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(256), int16], Tensor[(896), uint16], Tensor[(4, 16, 14), float32]) */;
  %33 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %34 = cos(%27) /* ty=Tensor[(5, 5, 15), float32] */;
  %35 = %32.1;
  %36 = %33.2;
  (%34, %35, meta[relay.Constant][2] /* ty=int8 */, %var_8208, %36)
}

def @func_3222() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), int32]) {
  %37 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %38 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %39 = @func_1990() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
  %40 = %37.0;
  %41 = %38.0;
  %42 = %39.0;
  (%40, %41, %42)
}

def @func_3415() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) {
  %43 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %44 = %43.0;
  %45 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  (%44, %45)
}

def @func_6301() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), uint16]) {
  %46 = @func_5378() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %47 = %46.0;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %49 = reshape(%48, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %50 = @func_3654(%49) /* ty=(Tensor[(12, 9, 11), uint16], Tensor[(12, 9), float32]) */;
  %51 = %50.0;
  (%47, %51)
}

def @func_10017() -> (Tensor[(12, 9), float32],) {
  %52 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  (%52,)
}

def @func_10203() -> (Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %53 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %54 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %55 = %53.1;
  %56 = %54.0;
  %57 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  (%55, %56, %57)
}

def @func_6860() -> Tensor[(12, 9), float32] {
  %58 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %58.1
}

def @func_1958(%var_1954: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  %59 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %60 = cast(%var_1954, dtype="int16") /* ty=Tensor[(448), int16] */;
  %61 = cast(%var_1954, dtype="int16") /* ty=Tensor[(448), int16] */;
  %62 = reshape(%60, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %63 = reshape(%61, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %64 = @func_1874(%62, %63) /* ty=(Tensor[(14, 4, 8), int16],) */;
  %65 = %59.2;
  %66 = %64.0;
  (%65, %66, %var_1954)
}

def @func_6151() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %67 = @func_4361() /* ty=(Tensor[(12, 9), float32],) */;
  %68 = @func_5998() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %69 = %67.0;
  %70 = %68.0;
  (%69, %70)
}

def @func_6773() -> (Tensor[(4, 7, 10), float64], Tensor[(4, 7, 10), float64], Tensor[(16, 4, 4), float32]) {
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %73 = @func_6224() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */;
  %74 = sin(%71) /* ty=Tensor[(4, 7, 10), float64] */;
  %75 = asinh(%72) /* ty=Tensor[(4, 7, 10), float64] */;
  %76 = %73.1;
  (%74, %75, %76)
}

def @func_2710() -> (Tensor[(12, 9), float32],) {
  %77 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %78 = %77.0;
  (%78,)
}

def @func_890(%var_870: Tensor[(12, 13, 7), float32], %var_885: Tensor[(1008), float64]) -> (Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) {
  %79 = cast(%var_870, dtype="float32") /* ty=Tensor[(12, 13, 7), float32] */;
  %80 = sin(%79) /* ty=Tensor[(12, 13, 7), float32] */;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
  %82 = shape_of(%var_870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_870, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %85 = cast(%var_885, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %86 = reshape(%85, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float64] */;
  %87 = @func_631(%86) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */;
  %88 = power(%83, %84) /* ty=Tensor[(12, 13, 7), float64] */;
  %89 = %87.0;
  (%88, %89, %var_885)
}

def @func_5276() -> (Tensor[(9, 132), uint8],) {
  %90 = @func_2121() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */;
  %91 = %90.3;
  (%91,)
}

def @func_4878() -> (Tensor[(16, 4, 4), bool],) {
  %92 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %93 = %92.1;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%93, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %98 = equal(%96, %97) /* ty=Tensor[(16, 4, 4), bool] */;
  (%98,)
}

def @func_4659() -> (Tensor[(12, 9), float32],) {
  %99 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  (%99,)
}

def @func_6533() -> (Tensor[(12, 9), float32],) {
  %100 = @func_2710() /* ty=(Tensor[(12, 9), float32],) */;
  %101 = %100.0;
  (%101,)
}

def @func_8646(%var_8594: Tensor[(12, 9, 11), float64], %var_8640: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), int32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(12, 9, 11), uint8]) {
  %102 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %103 = %102.0;
  %104 = cast(%var_8594, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %108 = @func_4878() /* ty=(Tensor[(16, 4, 4), bool],) */;
  %109 = %108.0;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %111 = cast(%var_8640, dtype="uint8") /* ty=Tensor[(12, 9, 11), uint8] */;
  %112 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%103, dtype="uint8") /* ty=Tensor[(12, 9, 11), uint8] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %115 = add(%106, %107) /* ty=Tensor[(12, 9, 11), int32] */;
  %116 = erf(%110) /* ty=Tensor[(16, 4, 4), float32] */;
  %117 = @func_8487() /* ty=Tensor[(16, 4, 4), float32] */;
  %118 = right_shift(%113, %114) /* ty=Tensor[(12, 9, 11), uint8] */;
  (%115, %116, %117, %118)
}

def @func_8079() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %119 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %120 = %119.0;
  %121 = @func_7040() /* ty=Tensor[(12, 9, 11), float64] */;
  (%120, %121)
}

def @func_3030(%var_3025: Tensor[(3, 2, 8), uint64]) -> Tensor[(3, 2, 8), bool] {
  %122 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 2, 8), uint64] */, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
  %123 = shape_of(%var_3025, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%var_3025, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%124, %125) /* ty=Tensor[(3, 2, 8), bool] */
}

def @func_2288() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) {
  %126 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %127 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %128 = %126.0;
  %129 = %127.0;
  (%128, %129)
}

def @func_2669(%var_2654: Tensor[(4, 5, 14), uint32], %var_2655: Tensor[(4, 5, 14), uint32]) -> (Tensor[(4, 5, 14), uint32],) {
  %130 = cast(%var_2655, dtype="uint32") /* ty=Tensor[(4, 5, 14), uint32] */;
  %131 = shape_of(%var_2654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_2654, dtype="uint32") /* ty=Tensor[(4, 5, 14), uint32] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %134 = bitwise_and(%132, %133) /* ty=Tensor[(4, 5, 14), uint32] */;
  (%134,)
}

def @func_8908(%var_8869: Tensor[(448), int16], %var_8877: Tensor[(165), float64]) -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(3, 11, 5), float32], Tensor[(165), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(4, 252), float64]) {
  %135 = @func_8426() /* ty=(Tensor[(12, 9, 11), int32],) */;
  %136 = cast(%var_8869, dtype="int16") /* ty=Tensor[(448), int16] */;
  %137 = reshape(%136, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %138 = @func_7789(%137) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
  %139 = cast(%var_8877, dtype="float64") /* ty=Tensor[(165), float64] */;
  %140 = reshape(%139, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), float64] */;
  %141 = @func_6688(%140) /* ty=(Tensor[(3, 11, 5), float64], Tensor[(12, 9), float32], Tensor[(3, 11, 5), float32]) */;
  %142 = cast(meta[relay.Constant][6] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 252), float64] */, dtype="float64") /* ty=Tensor[(4, 252), float64] */;
  %144 = reshape(%142, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), float32] */;
  %145 = reshape(%143, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %146 = @func_890(%144, %145) /* ty=(Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) */;
  %147 = %135.0;
  %148 = %138.3;
  %149 = %141.2;
  %150 = %146.2;
  (%147, %148, %var_8869, %149, %var_8877, %150, meta[relay.Constant][6] /* ty=Tensor[(1092), float32] */, meta[relay.Constant][7] /* ty=Tensor[(4, 252), float64] */)
}

def @func_4826(%var_4822: Tensor[(48), uint64]) -> (Tensor[(12, 9, 11), float64], Tensor[(48), uint64], Tensor[(48), uint64]) {
  %151 = cast(%var_4822, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %152 = reshape(%151, newshape=[48]) /* ty=Tensor[(48), uint64] */;
  %153 = @func_4617(%152) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) */;
  %154 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  %155 = %153.2;
  (%154, %155, %var_4822)
}

def @func_6224() -> (Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) {
  %156 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %157 = %156.0;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %159 = @func_2527() /* ty=(Tensor[(16, 4, 4), float32],) */;
  %160 = atanh(%158) /* ty=Tensor[(12, 9, 11), float32] */;
  %161 = %159.0;
  (%160, %161)
}

def @func_800(%var_744: Tensor[(16, 4, 4), float32], %var_751: Tensor[(1188), float64]) -> (Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) {
  %162 = cast(%var_751, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %163 = reshape(%162, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %164 = @func_730(%163) /* ty=(Tensor[(12, 9, 11), float64],) */;
  %165 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %166 = shape_of(%var_744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_744, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %169 = power(%167, %168) /* ty=Tensor[(16, 4, 4), float32] */;
  %170 = cast(%169, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
  %171 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(16, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 4, 4), float32] */, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %174 = cast(%169, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %175 = %164.0;
  %176 = logical_xor(%172, %173) /* ty=Tensor[(16, 4, 4), int8] */;
  %177 = acos(%174) /* ty=Tensor[(16, 4, 4), float32] */;
  (%175, %var_751, %176, %177)
}

def @func_977(%var_941: Tensor[(6, 1, 9), float64], %var_960: Tensor[(256), float32]) -> (Tensor[(6, ?, 9), bool], Tensor[(16, 4, 4), int8], Tensor[(256), float32], Tensor[(1188), float64]) {
  %178 = cast(%var_941, dtype="float64") /* ty=Tensor[(6, 1, 9), float64] */;
  %179 = acosh(%178) /* ty=Tensor[(6, 1, 9), float64] */;
  %180 = cast(%var_941, dtype="float64") /* ty=Tensor[(6, 1, 9), float64] */;
  %181 = sqrt(%180) /* ty=Tensor[(6, 1, 9), float64] */;
  %182 = cast(%181, dtype="uint64") /* ty=Tensor[(6, 1, 9), uint64] */;
  %183 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%179, dtype="uint64") /* ty=Tensor[(6, 1, 9), uint64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %186 = minimum(%184, %185) /* ty=Tensor[(6, ?, 9), uint64] */;
  %187 = cast(%181, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="bool") /* ty=Tensor[(6, ?, 9), bool] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %191 = cast(%var_960, dtype="float32") /* ty=Tensor[(256), float32] */;
  %192 = cast(meta[relay.Constant][9] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %193 = reshape(%191, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %194 = reshape(%192, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %195 = @func_800(%193, %194) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
  %196 = logical_and(%189, %190) /* ty=Tensor[(6, ?, 9), bool] */;
  %197 = %195.2;
  (%196, %197, %var_960, meta[relay.Constant][9] /* ty=Tensor[(1188), float64] */)
}

def @func_4415() -> Tensor[(12, 9, 11), float64] {
  %198 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %198.0
}

def @func_5510() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
  %199 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
  %200 = %199.0;
  %201 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  (%200, %201)
}

def @func_6126() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %202 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %203 = @func_4782() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
  %204 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
  %205 = %202.0;
  %206 = %203.0;
  %207 = %204.0;
  %208 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%205, %206, %207, %208)
}

def @func_10084(%var_10070: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  %209 = @func_4361() /* ty=(Tensor[(12, 9), float32],) */;
  %210 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %211 = cast(%var_10070, dtype="int16") /* ty=Tensor[(448), int16] */;
  %212 = cast(%var_10070, dtype="int16") /* ty=Tensor[(448), int16] */;
  %213 = reshape(%211, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %214 = reshape(%212, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %215 = @func_1874(%213, %214) /* ty=(Tensor[(14, 4, 8), int16],) */;
  %216 = %209.0;
  %217 = %210.2;
  %218 = %215.0;
  (%216, %217, %218, %var_10070)
}

def @func_4301() -> Tensor[(12, 9), float32] {
  %219 = @func_4187() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %219.0
}

def @func_3986(%var_3975: Tensor[(2, 11, 16), float64], %var_3982: Tensor[(2, 11, 16), float64]) -> (Tensor[(2, 11, 16), float32], Tensor[(2, 11, 16), float32]) {
  %220 = cast(%var_3975, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %221 = log2(%220) /* ty=Tensor[(2, 11, 16), float64] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %223 = cast(%var_3982, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %224 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%221, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %227 = cos(%222) /* ty=Tensor[(2, 11, 16), float32] */;
  %228 = multiply(%225, %226) /* ty=Tensor[(2, 11, 16), float32] */;
  (%227, %228)
}

def @func_4488() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %229 = @func_4047() /* ty=(Tensor[(12, 9), float32], Tensor[(2, 224), int16], Tensor[(256), float32], Tensor[(448), int16]) */;
  %230 = @func_3415() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) */;
  %231 = %229.0;
  %232 = %230.0;
  (%231, %232)
}

def @func_7600() -> (Tensor[(12, 9), float32],) {
  %233 = @func_4488() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %234 = %233.0;
  (%234,)
}

def @func_2498(%var_2495: Tensor[(1092), float32]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) {
  %235 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %236 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 448), int16] */, dtype="int16") /* ty=Tensor[(1, 448), int16] */;
  %237 = reshape(%236, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %238 = @func_1958(%237) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
  %239 = @func_2288() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) */;
  %240 = %239.1;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %242 = cast(%var_2495, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %243 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1008), float64] */, dtype="float64") /* ty=Tensor[(1, 1008), float64] */;
  %244 = reshape(%242, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %245 = reshape(%243, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %246 = @func_1057(%244, %245) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) */;
  %247 = %235.1;
  %248 = %238.0;
  %249 = exp(%241) /* ty=Tensor[(12, 9, 11), float32] */;
  %250 = %246.3;
  (%247, %248, meta[relay.Constant][10] /* ty=Tensor[(1, 448), int16] */, %249, %250, %var_2495, meta[relay.Constant][11] /* ty=Tensor[(1, 1008), float64] */)
}

def @func_2796() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %251 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %252 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %253 = %252.0;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %255 = reshape(%254, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %256 = @func_2640(%255) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */;
  %257 = cast(%253, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %258 = reshape(%257, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %259 = @func_2640(%258) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */;
  %260 = %251.0;
  %261 = %256.0;
  %262 = %259.0;
  (%260, %253, %261, %262)
}

def @func_8051() -> Tensor[(12, 9), float32] {
  %263 = @func_6515() /* ty=(Tensor[(12, 9), float32],) */;
  %263.0
}

def @func_2640(%var_2633: Tensor[(1188), float64]) -> (Tensor[(12, 9), float32], Tensor[(1188), bool]) {
  %264 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %265 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %266 = %265.1;
  %267 = cast(%var_2633, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(1), int32] */;
  %269 = cast(%266, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?), bool] */;
  %271 = %264.1;
  %272 = greater(%269, %270) /* ty=Tensor[(1188), bool] */;
  (%271, %272)
}

def @func_9182() -> (Tensor[(16, 4, 4), float64], Tensor[(12, 9), float32]) {
  %273 = @func_6773() /* ty=(Tensor[(4, 7, 10), float64], Tensor[(4, 7, 10), float64], Tensor[(16, 4, 4), float32]) */;
  %274 = %273.2;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %276 = cosh(%275) /* ty=Tensor[(16, 4, 4), float32] */;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %278 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%274, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %281 = floor_mod(%279, %280) /* ty=Tensor[(16, 4, 4), float64] */;
  %282 = @func_4675() /* ty=Tensor[(12, 9), float32] */;
  (%281, %282)
}

def @func_602() -> Tensor[(12, 9), float32] {
  @func_487() /* ty=Tensor[(12, 9), float32] */
}

def @func_1725() -> (Tensor[(12, 9, 11), float32],) {
  %283 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %284 = %283.0;
  (%284,)
}

def @func_9992() -> Tensor[(12, 9), float32] {
  %285 = @func_7315() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
  %285.5
}

def @func_2121() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) {
  %286 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %287 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 132), float64] */, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %288 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(9, 132), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %289 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 132), float64] */, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %291 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 132), float64] */, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %292 = reshape(%291, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %293 = @func_730(%292) /* ty=(Tensor[(12, 9, 11), float64],) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %296 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(9, 132), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %297 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 132), float64] */, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %299 = less_equal(%297, %298) /* ty=Tensor[(9, 132), bool] */;
  %300 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 132), float64] */, dtype="uint8") /* ty=Tensor[(9, 132), uint8] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(2), int32] */;
  %302 = cast(%299, dtype="uint8") /* ty=Tensor[(9, 132), uint8] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %304 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %305 = %286.1;
  %306 = floor_divide(%289, %290) /* ty=Tensor[(9, 132), float64] */;
  %307 = maximum(%302, %303) /* ty=Tensor[(9, 132), uint8] */;
  (%304, %305, %306, %307)
}

def @func_8933() -> Tensor[(1188), int16] {
  %308 = @func_6810() /* ty=Tensor[(1188), bool] */;
  %309 = cast(meta[relay.Constant][14] /* ty=Tensor[(1188), bool] */, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(1), int32] */;
  %311 = cast(%308, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?), int16] */;
  left_shift(%311, %312) /* ty=Tensor[(1188), int16] */
}

def @func_9271() -> (Tensor[(16, 4, 4), float64],) {
  %313 = @func_9182() /* ty=(Tensor[(16, 4, 4), float64], Tensor[(12, 9), float32]) */;
  %314 = %313.0;
  (%314,)
}

def @func_1057(%var_1054: Tensor[(1092), float32], %var_1055: Tensor[(1008), float64]) -> (Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) {
  %315 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %317 = cast(%var_1054, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %318 = cast(%var_1055, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %319 = reshape(%317, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), float32] */;
  %320 = reshape(%318, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %321 = @func_890(%319, %320) /* ty=(Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) */;
  %322 = erf(%316) /* ty=Tensor[(12, 9, 11), float32] */;
  %323 = %321.0;
  (%322, %323, %var_1054, %var_1055)
}

def @func_1432() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %324 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %325 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %326 = %324.2;
  (%325, %326)
}

def @func_1856() -> (Tensor[(12, 9, 11), float64],) {
  %327 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  (%327,)
}

def @func_1593() -> (Tensor[(12, 9, 11), float32],) {
  %328 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  (%328,)
}

def @func_5356() -> Tensor[(12, 9), float32] {
  %329 = @func_4659() /* ty=(Tensor[(12, 9), float32],) */;
  %329.0
}

def @func_3789() -> Tensor[(12, 9), float32] {
  %330 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %330.0
}

def @func_9086() -> (Tensor[(12, 9, 11), float32], Tensor[(4, 15, 7), float32]) {
  %331 = @func_3584() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) */;
  %332 = @func_4953() /* ty=(Tensor[(4, 15, 7), float32],) */;
  %333 = %331.1;
  %334 = %332.0;
  (%333, %334)
}

def @func_5943(%var_5933: Tensor[(15, 2, 13), float64]) -> (Tensor[(15, 2, 13), float64], Tensor[(12, 9, 11), float64]) {
  %335 = cast(%var_5933, dtype="float64") /* ty=Tensor[(15, 2, 13), float64] */;
  %336 = @func_4187() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %337 = acosh(%335) /* ty=Tensor[(15, 2, 13), float64] */;
  %338 = %336.1;
  (%337, %338)
}

def @func_9941() -> (Tensor[(12, 9), float32],) {
  %339 = @func_6860() /* ty=Tensor[(12, 9), float32] */;
  (%339,)
}

def @func_4722() -> (Tensor[(1188), float64], Tensor[(12, 9), float32]) {
  %340 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %341 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %342 = %340.1;
  %343 = %341.0;
  (%342, %343)
}

def @func_4140(%var_4136: Tensor[(280), uint32]) -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(256), float32], Tensor[(448), int16], Tensor[(4, 5, 14), uint32], Tensor[(280), uint32]) {
  %344 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
  %345 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %346 = cast(meta[relay.Constant][15] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %347 = cast(meta[relay.Constant][16] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %348 = reshape(%346, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %349 = reshape(%347, newshape=[2, 224]) /* ty=Tensor[(2, 224), int16] */;
  %350 = @func_3121(%348, %349) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */;
  %351 = cast(%var_4136, dtype="uint32") /* ty=Tensor[(280), uint32] */;
  %352 = cast(%var_4136, dtype="uint32") /* ty=Tensor[(280), uint32] */;
  %353 = reshape(%351, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint32] */;
  %354 = reshape(%352, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint32] */;
  %355 = @func_2669(%353, %354) /* ty=(Tensor[(4, 5, 14), uint32],) */;
  %356 = %344.0;
  %357 = %345.0;
  %358 = %350.1;
  %359 = %355.0;
  (%356, %357, %358, meta[relay.Constant][15] /* ty=Tensor[(256), float32] */, meta[relay.Constant][16] /* ty=Tensor[(448), int16] */, %359, %var_4136)
}

def @func_8182(%var_8140: Tensor[(9, 132), uint8], %var_8146: Tensor[(1092), float32], %var_8148: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(9, 132), float32], Tensor[(1092), float64], Tensor[(1092), float32], Tensor[(256), float32], Tensor[(448), float32], Tensor[(256), float32]) {
  %360 = @func_2121() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */;
  %361 = %360.3;
  %362 = cast(%var_8140, dtype="float32") /* ty=Tensor[(9, 132), float32] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(2), int32] */;
  %364 = cast(%361, dtype="float32") /* ty=Tensor[(9, 132), float32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %366 = cast(%var_8140, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %367 = cast(%var_8146, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %368 = cast(meta[relay.Constant][17] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %369 = cast(%var_8148, dtype="int16") /* ty=Tensor[(448), int16] */;
  %370 = reshape(%366, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %371 = reshape(%367, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %372 = reshape(%368, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %373 = reshape(%369, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %374 = @func_4266(%370, %371, %372, %373) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) */;
  %375 = cast(%var_8148, dtype="float32") /* ty=Tensor[(448), float32] */;
  %376 = cast(meta[relay.Constant][17] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %377 = mod(%364, %365) /* ty=Tensor[(9, 132), float32] */;
  %378 = cast(%377, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %379 = reshape(%376, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %380 = reshape(%378, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %381 = @func_7925(%379, %380) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(256), float32], Tensor[(1188), float64]) */;
  %382 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %383 = %374.3;
  %384 = cos(%375) /* ty=Tensor[(448), float32] */;
  %385 = %381.2;
  (%382, %377, %383, %var_8146, meta[relay.Constant][17] /* ty=Tensor[(256), float32] */, %384, %385)
}

def @func_7690(%var_7643: Tensor[(84), int32], %var_7667: Tensor[(16, 4, 4), float32]) -> (Tensor[(12, 9), float32], Tensor[(48), uint64], Tensor[(84), int32], Tensor[(16, 4, 4), uint16], Tensor[(12, 9, 11), int32]) {
  %386 = @func_7600() /* ty=(Tensor[(12, 9), float32],) */;
  %387 = cast(%var_7643, dtype="int32") /* ty=Tensor[(84), int32] */;
  %388 = cast(%var_7643, dtype="int32") /* ty=Tensor[(84), int32] */;
  %389 = reshape(%387, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %390 = reshape(%388, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
  %391 = @func_5029(%389, %390) /* ty=(Tensor[(7, 3, 4), int32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(7, 3, 4), float32]) */;
  %392 = @func_6224() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */;
  %393 = %392.1;
  %394 = cast(%var_7667, dtype="uint16") /* ty=Tensor[(16, 4, 4), uint16] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="uint16") /* ty=Tensor[(16, 4, 4), uint16] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %398 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
  %399 = %386.0;
  %400 = %391.2;
  %401 = bitwise_or(%396, %397) /* ty=Tensor[(16, 4, 4), uint16] */;
  %402 = %398.0;
  (%399, %400, %var_7643, %401, %402)
}

def @func_7125(%var_7078: Tensor[(12, 5, 10), int64], %var_7079: Tensor[(12, 5, 10), int64]) -> (Tensor[(12, 5, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(1, 1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %403 = cast(%var_7079, dtype="bool") /* ty=Tensor[(12, 5, 10), bool] */;
  %404 = shape_of(%var_7078, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_7078, dtype="bool") /* ty=Tensor[(12, 5, 10), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %407 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 1008), float64] */, dtype="float64") /* ty=Tensor[(1, 1008), float64] */;
  %408 = reshape(%407, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float64] */;
  %409 = @func_631(%408) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */;
  %410 = @func_2121() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */;
  %411 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %412 = greater(%405, %406) /* ty=Tensor[(12, 5, 10), bool] */;
  %413 = %409.0;
  %414 = %410.0;
  %415 = %411.0;
  (%412, %413, meta[relay.Constant][18] /* ty=Tensor[(1, 1008), float64] */, %414, %415)
}

def @func_2340(%var_2293: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) {
  %416 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %417 = cast(%var_2293, dtype="int8") /* ty=Tensor[(12, 9, 11), int8] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="int8") /* ty=Tensor[(12, 9, 11), int8] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %421 = cast(%var_2293, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %422 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%416, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %425 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %426 = maximum(%419, %420) /* ty=Tensor[(12, 9, 11), int8] */;
  %427 = multiply(%423, %424) /* ty=Tensor[(12, 9, 11), float32] */;
  %428 = %425.1;
  (%426, %427, %428)
}

def @func_2447() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), int32]) {
  %429 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %430 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %431 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
  %432 = %429.0;
  %433 = %430.0;
  %434 = %431.0;
  (%432, %433, %434)
}

def @func_4904() -> Tensor[(12, 9, 11), float64] {
  %435 = @func_4187() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %435.1
}

def @func_2527() -> (Tensor[(16, 4, 4), float32],) {
  %436 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %437 = %436.0;
  (%437,)
}

def @func_4361() -> (Tensor[(12, 9), float32],) {
  %438 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %439 = %438.0;
  (%439,)
}

def @func_3654(%var_3635: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), uint16], Tensor[(12, 9), float32]) {
  %440 = @func_2946() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %441 = %440.0;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %443 = sigmoid(%442) /* ty=Tensor[(12, 9, 11), float64] */;
  %444 = cast(%var_3635, dtype="uint16") /* ty=Tensor[(12, 9, 11), uint16] */;
  %445 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%443, dtype="uint16") /* ty=Tensor[(12, 9, 11), uint16] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %448 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %449 = bitwise_xor(%446, %447) /* ty=Tensor[(12, 9, 11), uint16] */;
  %450 = %448.0;
  (%449, %450)
}

def @func_8974() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
  %451 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
  %452 = @func_1725() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %453 = %451.0;
  %454 = %452.0;
  (%453, %454)
}

def @func_3121(%var_3101: Tensor[(16, 4, 4), float32], %var_3117: Tensor[(2, 224), int16]) -> (Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) {
  %455 = @func_2527() /* ty=(Tensor[(16, 4, 4), float32],) */;
  %456 = %455.0;
  %457 = cast(%var_3101, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %461 = cast(%var_3117, dtype="int16") /* ty=Tensor[(2, 224), int16] */;
  %462 = reshape(%461, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %463 = @func_2249(%462) /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
  %464 = divide(%459, %460) /* ty=Tensor[(16, 4, 4), float64] */;
  %465 = %463.3;
  (%464, %465, %var_3117)
}

def @func_8810() -> Tensor[(12, 9, 11), float64] {
  %466 = @func_3467() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %466.0
}

def @func_5185(%var_5182: Tensor[(48), uint64]) -> (Tensor[(12, 9), float32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64]) {
  %467 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %468 = cast(%var_5182, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %469 = reshape(%468, newshape=[48]) /* ty=Tensor[(48), uint64] */;
  %470 = @func_4617(%469) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) */;
  %471 = %467.0;
  %472 = %470.1;
  (%471, %472, %var_5182)
}

def @func_4681() -> (Tensor[(12, 9), float32],) {
  %473 = @func_4675() /* ty=Tensor[(12, 9), float32] */;
  (%473,)
}

def @func_5998() -> (Tensor[(12, 9, 11), float64],) {
  %474 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  (%474,)
}

def @func_9160() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), bool]) {
  %475 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %476 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %477 = %475.0;
  (%476, %477)
}

def @func_8433() -> Tensor[(12, 9), float32] {
  %478 = @func_2710() /* ty=(Tensor[(12, 9), float32],) */;
  %478.0
}

def @func_8585(%var_8538: Tensor[(4, 5, 5), float64]) -> Tensor[(4, 5, 5), float64] {
  %479 = cast(%var_8538, dtype="float64") /* ty=Tensor[(4, 5, 5), float64] */;
  atanh(%479) /* ty=Tensor[(4, 5, 5), float64] */
}

def @func_3757(%var_3714: int8, %var_3715: Tensor[(896), int8]) -> (Tensor[(12, 9, 11), float64], Tensor[(256), int16], Tensor[(896), uint16], Tensor[(4, 16, 14), float32]) {
  %480 = @func_2946() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %481 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %482 = %481.2;
  %483 = cast(%482, dtype="int16") /* ty=Tensor[(256), int16] */;
  %484 = cast(%var_3714, dtype="int16") /* ty=int16 */;
  %485 = cast(%var_3714, dtype="int8") /* ty=int8 */;
  %486 = cast(%var_3715, dtype="int8") /* ty=Tensor[(896), int8] */;
  %487 = reshape(%485, newshape=[]) /* ty=int8 */;
  %488 = reshape(%486, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int8] */;
  %489 = @func_3669(%487, %488) /* ty=Tensor[(4, 16, 14), bool] */;
  %490 = cast(%489, dtype="uint16") /* ty=Tensor[(4, 16, 14), uint16] */;
  %491 = shape_of(%var_3715, dtype="int32") /* ty=Tensor[(1), int32] */;
  %492 = cast(%var_3715, dtype="uint16") /* ty=Tensor[(896), uint16] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %494 = cast(%489, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %495 = %480.0;
  %496 = maximum(%483, %484) /* ty=Tensor[(256), int16] */;
  %497 = bitwise_or(%492, %493) /* ty=Tensor[(896), uint16] */;
  %498 = acos(%494) /* ty=Tensor[(4, 16, 14), float32] */;
  (%495, %496, %497, %498)
}

def @func_8487() -> Tensor[(16, 4, 4), float32] {
  %499 = @func_2527() /* ty=(Tensor[(16, 4, 4), float32],) */;
  %499.0
}

def @func_9637() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(9, 132), bool], Tensor[(9, 132), bool]) {
  %500 = @func_6515() /* ty=(Tensor[(12, 9), float32],) */;
  %501 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %502 = reshape(%501, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %503 = @func_7789(%502) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
  %504 = @func_5276() /* ty=(Tensor[(9, 132), uint8],) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %507 = atanh(%506) /* ty=Tensor[(9, 132), float64] */;
  %508 = @func_2946() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %509 = %508.0;
  %510 = cast(%509, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %511 = shape_of(%507, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(%507, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %514 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 132), float64] */, dtype="uint16") /* ty=Tensor[(9, 132), uint16] */;
  %515 = shape_of(%507, dtype="int32") /* ty=Tensor[(2), int32] */;
  %516 = cast(%507, dtype="uint16") /* ty=Tensor[(9, 132), uint16] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %518 = bitwise_xor(%516, %517) /* ty=Tensor[(9, 132), uint16] */;
  %519 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 132), uint16] */, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(2), int32] */;
  %521 = cast(%518, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %523 = %500.0;
  %524 = %503.3;
  %525 = less(%512, %513) /* ty=Tensor[(9, 132), bool] */;
  %526 = equal(%521, %522) /* ty=Tensor[(9, 132), bool] */;
  (%523, %524, meta[relay.Constant][19] /* ty=Tensor[(448), int16] */, %525, %526)
}

def @func_3244(%var_3231: Tensor[(10, 15, 4), bool], %var_3232: Tensor[(10, 15, 4), bool]) -> Tensor[(10, 15, 4), bool] {
  %527 = cast(%var_3232, dtype="bool") /* ty=Tensor[(10, 15, 4), bool] */;
  %528 = shape_of(%var_3231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%var_3231, dtype="bool") /* ty=Tensor[(10, 15, 4), bool] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%529, %530) /* ty=Tensor[(10, 15, 4), bool] */
}

def @func_9220() -> Tensor[(12, 9), float32] {
  %531 = @func_7600() /* ty=(Tensor[(12, 9), float32],) */;
  %531.0
}

def @func_1647() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) {
  %532 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %533 = %532.1;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %535 = cast(meta[relay.Constant][22] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %536 = reshape(%534, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %537 = reshape(%535, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %538 = @func_1386(%536, %537) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %539 = %538.0;
  (%533, %539, meta[relay.Constant][22] /* ty=Tensor[(1092), float32] */)
}

def @func_487() -> Tensor[(12, 9), float32] {
  %540 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %540.0
}

def @func_1386(%var_1364: Tensor[(12, 9, 11), float64], %var_1373: Tensor[(1092), float32]) -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %541 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %542 = %541.0;
  %543 = cast(%var_1364, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%542, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %547 = cast(%var_1373, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %548 = cast(meta[relay.Constant][23] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %549 = reshape(%547, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %550 = reshape(%548, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %551 = @func_1057(%549, %550) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) */;
  %552 = @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %553 = logical_or(%545, %546) /* ty=Tensor[(12, 9, 11), bool] */;
  %554 = %551.0;
  %555 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %556 = %552.0;
  (%553, %554, %var_1373, meta[relay.Constant][23] /* ty=Tensor[(1008), float64] */, %555, %556)
}

def @func_2969() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) {
  %557 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
  %558 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %559 = %557.1;
  %560 = %558.0;
  (%559, %560)
}

def @func_3955() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %561 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %562 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %563 = %561.0;
  (%562, %563)
}

def @func_5157() -> (Tensor[(1188), float32],) {
  %564 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %565 = %564.0;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %567 = reshape(%566, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %568 = @func_2340(%567) /* ty=(Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) */;
  %569 = %568.2;
  %570 = cast(%565, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(1), int32] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?), bool] */;
  %574 = less(%572, %573) /* ty=Tensor[(1188), bool] */;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %576 = atanh(%575) /* ty=Tensor[(1188), float32] */;
  (%576,)
}

def @func_5445(%var_5395: Tensor[(14, 15, 2), int32], %var_5396: Tensor[(14, 15, 2), int32]) -> (Tensor[(14, 15, 2), int32], Tensor[(18, 66), float64], Tensor[(128, 2), uint32], Tensor[(12, 9, 11), float64]) {
  %577 = cast(%var_5396, dtype="int32") /* ty=Tensor[(14, 15, 2), int32] */;
  %578 = shape_of(%var_5395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%var_5395, dtype="int32") /* ty=Tensor[(14, 15, 2), int32] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %581 = cast(meta[relay.Constant][25] /* ty=Tensor[(128, 2), float32] */, dtype="float32") /* ty=Tensor[(128, 2), float32] */;
  %582 = cast(meta[relay.Constant][24] /* ty=Tensor[(18, 66), float64] */, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %583 = reshape(%581, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %584 = reshape(%582, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %585 = @func_800(%583, %584) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
  %586 = %585.3;
  %587 = cast(%586, dtype="uint32") /* ty=Tensor[(16, 4, 4), uint32] */;
  %588 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(128, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %589 = cast(meta[relay.Constant][25] /* ty=Tensor[(128, 2), float32] */, dtype="uint32") /* ty=Tensor[(128, 2), uint32] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %591 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %592 = left_shift(%579, %580) /* ty=Tensor[(14, 15, 2), int32] */;
  %593 = minimum(%589, %590) /* ty=Tensor[(128, 2), uint32] */;
  %594 = %591.0;
  (%592, meta[relay.Constant][24] /* ty=Tensor[(18, 66), float64] */, %593, %594)
}

def @func_7357() -> Tensor[(9, 8, 7), bool] {
  %595 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %596 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 8, 7), bool] */, dtype="bool") /* ty=Tensor[(9, 8, 7), bool] */;
  logical_or(%595, %596) /* ty=Tensor[(9, 8, 7), bool] */
}

def @func_4557(%var_4550: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) {
  %597 = @func_3955() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %598 = @func_2710() /* ty=(Tensor[(12, 9), float32],) */;
  %599 = cast(%var_4550, dtype="int16") /* ty=Tensor[(448), int16] */;
  %600 = reshape(%599, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %601 = @func_1958(%600) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
  %602 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %603 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %604 = %597.1;
  %605 = %598.0;
  %606 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  %607 = %601.0;
  %608 = %602.0;
  (%603, %604, %605, %606, %607, %var_4550, %608)
}

def @func_8836(%var_8815: Tensor[(4, 2, 13), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(1092), float32]) {
  %609 = cast(%var_8815, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
  %610 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
  %611 = acosh(%609) /* ty=Tensor[(4, 2, 13), float64] */;
  %612 = %610.2;
  (%611, %612)
}

def @func_631(%var_604: Tensor[(16, 9, 7), float64]) -> (Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) {
  %613 = cast(%var_604, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %614 = log(%613) /* ty=Tensor[(16, 9, 7), float64] */;
  %615 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%614, %615)
}

def @func_10165() -> (Tensor[(12, 9, 11), float64],) {
  %616 = @func_5991() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %617 = %616.0;
  (%617,)
}

def @func_4617(%var_4612: Tensor[(48), uint64]) -> (Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) {
  %618 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %619 = cast(%var_4612, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %620 = reshape(%619, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), uint64] */;
  %621 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %622 = %618.0;
  %623 = @func_3030(%620) /* ty=Tensor[(3, 2, 8), bool] */;
  %624 = %621.0;
  (%622, %623, %var_4612, %624)
}

def @func_3362() -> (Tensor[(12, 9, 11), float64],) {
  %625 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %626 = %625.0;
  (%626,)
}

def @func_6952() -> (Tensor[(12, 9), float32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(1, 1188), float64]) {
  %627 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %628 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %629 = %628.1;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %631 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 1188), float64] */, dtype="float64") /* ty=Tensor[(1, 1188), float64] */;
  %632 = reshape(%630, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %633 = reshape(%631, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %634 = @func_800(%632, %633) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
  %635 = %627.0;
  %636 = %634.3;
  (%635, %629, %636, meta[relay.Constant][27] /* ty=Tensor[(1, 1188), float64] */)
}

def @func_5644() -> (Tensor[(12, 9, 11), float64], Tensor[(1188), bool], Tensor[(12, 9), float32]) {
  %637 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %638 = %637.1;
  %639 = cast(%638, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %640 = reshape(%639, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %641 = @func_2640(%640) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */;
  %642 = %641.1;
  %643 = @func_4301() /* ty=Tensor[(12, 9), float32] */;
  (%638, %642, %643)
}

def @func_9440(%var_9388: int8) -> (Tensor[(12, 9), float32], int8, Tensor[(?, 9, 2), bool], Tensor[(12, 9), float32], Tensor[(?, 9, 2), float64]) {
  %644 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %645 = cast(%var_9388, dtype="int8") /* ty=int8 */;
  %646 = reshape(%645, newshape=[]) /* ty=int8 */;
  %647 = @func_1192(%646) /* ty=(Tensor[(1, 9, 2), bool], Tensor[(1, 9, 2), int16]) */;
  %648 = %647.0;
  %649 = cast(%648, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
  %650 = sigmoid(%649) /* ty=Tensor[(1, 9, 2), float32] */;
  %651 = cast(%648, dtype="float64") /* ty=Tensor[(1, 9, 2), float64] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%650, dtype="float64") /* ty=Tensor[(1, 9, 2), float64] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %655 = mod(%653, %654) /* ty=Tensor[(?, 9, 2), float64] */;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(?, 9, 2), float32] */;
  %657 = sqrt(%656) /* ty=Tensor[(?, 9, 2), float32] */;
  %658 = cast(%650, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="bool") /* ty=Tensor[(?, 9, 2), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
  %663 = cast(%655, dtype="float64") /* ty=Tensor[(?, 9, 2), float64] */;
  %664 = %644.1;
  %665 = not_equal(%660, %661) /* ty=Tensor[(?, 9, 2), bool] */;
  %666 = %662.2;
  %667 = rsqrt(%663) /* ty=Tensor[(?, 9, 2), float64] */;
  (%664, %var_9388, %665, %666, %667)
}

def @func_9841() -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %668 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
  %669 = @func_8319() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %670 = cast(meta[relay.Constant][28] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %671 = reshape(%670, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %672 = @func_2340(%671) /* ty=(Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) */;
  %673 = %672.1;
  %674 = cast(%673, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %675 = @func_5510() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %676 = %668.0;
  %677 = %669.0;
  %678 = cosh(%674) /* ty=Tensor[(12, 9, 11), float64] */;
  %679 = %675.0;
  (%676, meta[relay.Constant][28] /* ty=Tensor[(1188), float64] */, %677, %678, %679)
}

def @func_10238() -> Tensor[(12, 9), float32] {
  @func_8051() /* ty=Tensor[(12, 9), float32] */
}

def @func_7532() -> Tensor[(12, 9), float32] {
  %680 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %680.1
}

def @func_6515() -> (Tensor[(12, 9), float32],) {
  %681 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %682 = %681.1;
  (%682,)
}

def @func_5991() -> (Tensor[(12, 9, 11), float64],) {
  %683 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %684 = %683.0;
  (%684,)
}

def @func_3467() -> (Tensor[(12, 9, 11), float64],) {
  %685 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
  %686 = %685.0;
  (%686,)
}

def @func_3669(%var_3661: int8, %var_3662: Tensor[(4, 16, 14), int8]) -> Tensor[(4, 16, 14), bool] {
  %687 = cast(%var_3661, dtype="bool") /* ty=bool */;
  %688 = cast(%var_3662, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %689 = greater(%687, %688) /* ty=Tensor[(4, 16, 14), bool] */;
  %690 = cast(%689, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %691 = shape_of(%var_3662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_3662, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%692, %693) /* ty=Tensor[(4, 16, 14), bool] */
}

def @func_6890() -> Tensor[(5, 12, 11), float32] {
  %694 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
  tan(%694) /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_5867(%var_5854: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(256), float32], Tensor[(448), int16]) {
  %695 = cast(meta[relay.Constant][30] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %696 = cast(%var_5854, dtype="int16") /* ty=Tensor[(448), int16] */;
  %697 = reshape(%695, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %698 = reshape(%696, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %699 = @func_3902(%697, %698) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) */;
  %700 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %701 = %699.4;
  (%700, %701, meta[relay.Constant][30] /* ty=Tensor[(256), float32] */, %var_5854)
}

def @func_1192(%var_1166: int8) -> (Tensor[(1, 9, 2), bool], Tensor[(1, 9, 2), int16]) {
  %702 = cast(%var_1166, dtype="bool") /* ty=bool */;
  %703 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 9, 2), int8] */, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
  %704 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 9, 2), int8] */, dtype="int16") /* ty=Tensor[(1, 9, 2), int16] */;
  %705 = cast(%var_1166, dtype="int16") /* ty=int16 */;
  %706 = greater(%702, %703) /* ty=Tensor[(1, 9, 2), bool] */;
  %707 = bitwise_and(%704, %705) /* ty=Tensor[(1, 9, 2), int16] */;
  (%706, %707)
}

def @func_7040() -> Tensor[(12, 9, 11), float64] {
  %708 = @func_4488() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %708.1
}

def @func_5558() -> (Tensor[(12, 9), float32],) {
  %709 = @func_4722() /* ty=(Tensor[(1188), float64], Tensor[(12, 9), float32]) */;
  %710 = %709.1;
  (%710,)
}

def @func_3020(%var_2989: Tensor[(16, 4, 4), float32]) -> (Tensor[(16, 4, 4), bool],) {
  %711 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %712 = %711.1;
  %713 = cast(%var_2989, dtype="int32") /* ty=Tensor[(16, 4, 4), int32] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="int32") /* ty=Tensor[(16, 4, 4), int32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %717 = bitwise_and(%715, %716) /* ty=Tensor[(16, 4, 4), int32] */;
  %718 = cast(%717, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %719 = atan(%718) /* ty=Tensor[(16, 4, 4), float64] */;
  %720 = cast(%var_2989, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
  %721 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%712, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %724 = maximum(%722, %723) /* ty=Tensor[(16, 4, 4), int8] */;
  %725 = cast(%724, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
  %726 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%719, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %729 = greater_equal(%727, %728) /* ty=Tensor[(16, 4, 4), bool] */;
  (%729,)
}

def @func_6617() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %730 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %731 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %733 = %730.1;
  %734 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %735 = @func_5356() /* ty=Tensor[(12, 9), float32] */;
  %736 = atan(%732) /* ty=Tensor[(12, 9, 11), float64] */;
  (%733, %734, %735, %736)
}

def @func_1803() -> (Tensor[(12, 9), float32], Tensor[(1188), float64]) {
  %737 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %738 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %739 = %737.0;
  %740 = %738.2;
  (%739, %740)
}

def @func_3862() -> Tensor[(12, 9, 11), float64] {
  %741 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %741.0
}

def @func_7188() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  %742 = @func_6126() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %743 = @func_3415() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) */;
  %744 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %745 = %742.1;
  %746 = %743.1;
  %747 = %744.0;
  (%745, %746, %747)
}

def @func_4782() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %748 = @func_3966() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %749 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %750 = %748.1;
  %751 = %749.3;
  (%750, %751)
}

def @func_1990() -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  %752 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
  %753 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %754 = @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %755 = %752.0;
  %756 = %753.0;
  %757 = %754.0;
  (%755, %756, %757)
}

def @func_4266(%var_4236: Tensor[(12, 9, 11), float64], %var_4243: Tensor[(1092), float32], %var_4260: Tensor[(256), float32], %var_4261: Tensor[(448), int16]) -> (Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) {
  %758 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
  %759 = %758.0;
  %760 = cast(%var_4236, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%759, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %764 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %765 = cast(%var_4243, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %766 = reshape(%765, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %767 = @func_2498(%766) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) */;
  %768 = %767.5;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %770 = cast(%var_4260, dtype="float32") /* ty=Tensor[(256), float32] */;
  %771 = cast(%var_4261, dtype="int16") /* ty=Tensor[(448), int16] */;
  %772 = reshape(%770, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %773 = reshape(%771, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %774 = @func_3902(%772, %773) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) */;
  %775 = less_equal(%762, %763) /* ty=Tensor[(12, 9, 11), bool] */;
  %776 = %764.0;
  %777 = asin(%769) /* ty=Tensor[(1092), float64] */;
  %778 = %774.2;
  (%775, %var_4243, %776, %777, %778, %var_4260, %var_4261)
}

def @func_2946() -> (Tensor[(12, 9, 11), float64],) {
  %779 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %780 = %779.1;
  (%780,)
}

def @func_3499() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(4, 252), float64]) {
  %781 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %782 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %783 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 252), float64] */, dtype="float64") /* ty=Tensor[(4, 252), float64] */;
  %784 = reshape(%783, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float64] */;
  %785 = @func_631(%784) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */;
  %786 = %781.0;
  %787 = %782.0;
  %788 = %785.1;
  (%786, %787, %788, meta[relay.Constant][32] /* ty=Tensor[(4, 252), float64] */)
}

def @func_1712() -> (Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) {
  %789 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %790 = cast(meta[relay.Constant][33] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %791 = %789.0;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %793 = reshape(%790, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %794 = reshape(%792, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %795 = @func_800(%793, %794) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
  %796 = %795.3;
  (%791, %796, meta[relay.Constant][33] /* ty=Tensor[(256), float32] */)
}

def @func_6400(%var_6387: float32, %var_6388: Tensor[(8, 8, 7), float32]) -> (Tensor[(8, 8, 7), uint32],) {
  %797 = cast(%var_6387, dtype="float32") /* ty=float32 */;
  %798 = cast(%var_6388, dtype="float32") /* ty=Tensor[(8, 8, 7), float32] */;
  %799 = floor_divide(%797, %798) /* ty=Tensor[(8, 8, 7), float32] */;
  %800 = cast(%var_6388, dtype="uint32") /* ty=Tensor[(8, 8, 7), uint32] */;
  %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%799, dtype="uint32") /* ty=Tensor[(8, 8, 7), uint32] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %804 = right_shift(%802, %803) /* ty=Tensor[(8, 8, 7), uint32] */;
  (%804,)
}

def @func_1508() -> Tensor[(12, 9, 11), float32] {
  %805 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %808 = reshape(%807, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %809 = @func_730(%808) /* ty=(Tensor[(12, 9, 11), float64],) */;
  %810 = %809.0;
  %811 = cast(%806, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%813, %814) /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_4047() -> (Tensor[(12, 9), float32], Tensor[(2, 224), int16], Tensor[(256), float32], Tensor[(448), int16]) {
  %815 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %816 = cast(meta[relay.Constant][34] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %817 = cast(meta[relay.Constant][35] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %818 = reshape(%816, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %819 = reshape(%817, newshape=[2, 224]) /* ty=Tensor[(2, 224), int16] */;
  %820 = @func_3121(%818, %819) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */;
  %821 = %815.2;
  %822 = %820.2;
  (%821, %822, meta[relay.Constant][34] /* ty=Tensor[(256), float32] */, meta[relay.Constant][35] /* ty=Tensor[(448), int16] */)
}

def @func_9981(%var_9956: Tensor[(9, 13, 3), uint8]) -> (Tensor[(12, 9, 11), float32], Tensor[(9, 13, 3), float64]) {
  %823 = @func_1725() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %824 = cast(meta[relay.Constant][36] /* ty=Tensor[(9, 13, 3), uint8] */, dtype="uint8") /* ty=Tensor[(9, 13, 3), uint8] */;
  %825 = shape_of(%var_9956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_9956, dtype="uint8") /* ty=Tensor[(9, 13, 3), uint8] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %828 = bitwise_or(%826, %827) /* ty=Tensor[(9, 13, 3), uint8] */;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
  %830 = %823.0;
  %831 = atanh(%829) /* ty=Tensor[(9, 13, 3), float64] */;
  (%830, %831)
}

def @func_3902(%var_3893: Tensor[(256), float32], %var_3894: Tensor[(448), int16]) -> (Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) {
  %832 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %833 = cast(%var_3893, dtype="float32") /* ty=Tensor[(256), float32] */;
  %834 = cast(%var_3894, dtype="int16") /* ty=Tensor[(448), int16] */;
  %835 = reshape(%833, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %836 = reshape(%834, newshape=[2, 224]) /* ty=Tensor[(2, 224), int16] */;
  %837 = @func_3121(%835, %836) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */;
  %838 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %839 = %832.0;
  %840 = %837.0;
  %841 = %838.0;
  (%839, %840, %var_3893, %var_3894, %841)
}

def @func_3584() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) {
  %842 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  %843 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  %844 = cast(%843, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %845 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(%842, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %848 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %849 = greater(%846, %847) /* ty=Tensor[(12, 9, 11), bool] */;
  %850 = %848.0;
  (%849, %850)
}

def @func_5914(%var_5891: int16, %var_5892: Tensor[(16, 6, 13), int16]) -> Tensor[(16, 6, 13), bool] {
  %851 = cast(%var_5891, dtype="bool") /* ty=bool */;
  %852 = cast(%var_5892, dtype="bool") /* ty=Tensor[(16, 6, 13), bool] */;
  less_equal(%851, %852) /* ty=Tensor[(16, 6, 13), bool] */
}

def @func_8729(%var_8689: Tensor[(448), int16], %var_8704: Tensor[(182, 6), float32]) -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(16, 4, 4), bool], Tensor[(256), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9), float32], Tensor[(182, 6), float32], Tensor[(256), float32]) {
  %853 = @func_5998() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %854 = @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
  %855 = cast(meta[relay.Constant][37] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %856 = reshape(%855, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %857 = @func_3020(%856) /* ty=(Tensor[(16, 4, 4), bool],) */;
  %858 = cast(%var_8689, dtype="int16") /* ty=Tensor[(448), int16] */;
  %859 = reshape(%858, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %860 = @func_1958(%859) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
  %861 = %853.0;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %863 = cast(%var_8704, dtype="float32") /* ty=Tensor[(182, 6), float32] */;
  %864 = reshape(%862, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %865 = reshape(%863, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %866 = @func_1386(%864, %865) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %867 = cast(%861, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %868 = cast(%var_8704, dtype="float32") /* ty=Tensor[(182, 6), float32] */;
  %869 = cast(meta[relay.Constant][37] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %870 = cast(%var_8689, dtype="int16") /* ty=Tensor[(448), int16] */;
  %871 = reshape(%867, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %872 = reshape(%868, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %873 = reshape(%869, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %874 = reshape(%870, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %875 = @func_4266(%871, %872, %873, %874) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) */;
  %876 = %854.2;
  %877 = %857.0;
  %878 = %860.0;
  %879 = %866.5;
  %880 = %875.5;
  (%861, %876, %877, meta[relay.Constant][37] /* ty=Tensor[(256), float32] */, %878, %var_8689, %879, %var_8704, %880)
}

def @func_1308() -> (Tensor[(12, 9, 11), float64],) {
  %881 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %883 = sqrt(%882) /* ty=Tensor[(12, 9, 11), float64] */;
  (%883,)
}

def @func_8021() -> (Tensor[(12, 9, 11), float32],) {
  %884 = @func_6224() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */;
  %885 = %884.0;
  (%885,)
}

def @func_5378() -> (Tensor[(12, 9, 11), float32],) {
  %886 = @func_3584() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) */;
  %887 = %886.1;
  (%887,)
}

def @func_8041() -> (Tensor[(12, 9), float32],) {
  %888 = @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
  %889 = %888.2;
  (%889,)
}

def @func_9730() -> (Tensor[(12, 9, 11), float32],) {
  %890 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  (%890,)
}

def @func_9715() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %891 = @func_6617() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %892 = %891.1;
  %893 = @func_8433() /* ty=Tensor[(12, 9), float32] */;
  (%892, %893)
}

def @func_2883(%var_2857: bool, %var_2858: Tensor[(8, 6, 7), bool]) -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %894 = cast(%var_2857, dtype="bool") /* ty=bool */;
  %895 = cast(%var_2858, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %896 = cast(%var_2857, dtype="float64") /* ty=float64 */;
  %897 = cast(%var_2858, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %898 = logical_or(%894, %895) /* ty=Tensor[(8, 6, 7), bool] */;
  %899 = subtract(%896, %897) /* ty=Tensor[(8, 6, 7), float64] */;
  (%898, %899)
}

def @func_5389() -> Tensor[(12, 9, 11), float32] {
  %900 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %900.2
}

def @func_2249(%var_2240: Tensor[(448), int16]) -> (Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  %901 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %902 = @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %903 = cast(%var_2240, dtype="int16") /* ty=Tensor[(448), int16] */;
  %904 = cast(%var_2240, dtype="int16") /* ty=Tensor[(448), int16] */;
  %905 = reshape(%903, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %906 = reshape(%904, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %907 = @func_1874(%905, %906) /* ty=(Tensor[(14, 4, 8), int16],) */;
  %908 = %901.0;
  %909 = %902.0;
  %910 = %907.0;
  (%908, %909, %910, %var_2240)
}

def @func_8426() -> (Tensor[(12, 9, 11), int32],) {
  %911 = @func_2447() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), int32]) */;
  %912 = %911.2;
  (%912,)
}

def @func_3046() -> (Tensor[(12, 9), float32],) {
  %913 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %914 = %913.1;
  (%914,)
}

def @func_8319() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
  %915 = @func_4659() /* ty=(Tensor[(12, 9), float32],) */;
  %916 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %917 = %916.0;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %919 = %915.0;
  %920 = acosh(%918) /* ty=Tensor[(12, 9, 11), float32] */;
  (%919, %920)
}

def @func_5029(%var_5013: Tensor[(7, 3, 4), int32], %var_5014: Tensor[(7, 3, 4), int32]) -> (Tensor[(7, 3, 4), int32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(7, 3, 4), float32]) {
  %921 = cast(%var_5014, dtype="int32") /* ty=Tensor[(7, 3, 4), int32] */;
  %922 = shape_of(%var_5013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%var_5013, dtype="int32") /* ty=Tensor[(7, 3, 4), int32] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %925 = cast(meta[relay.Constant][38] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %926 = reshape(%925, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), uint64] */;
  %927 = cast(%var_5013, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %928 = right_shift(%923, %924) /* ty=Tensor[(7, 3, 4), int32] */;
  %929 = @func_3030(%926) /* ty=Tensor[(3, 2, 8), bool] */;
  %930 = sigmoid(%927) /* ty=Tensor[(7, 3, 4), float32] */;
  (%928, %929, meta[relay.Constant][38] /* ty=Tensor[(48), uint64] */, %930)
}

def @func_4953() -> (Tensor[(4, 15, 7), float32],) {
  %931 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 7), float32] */;
  %932 = sinh(%931) /* ty=Tensor[(4, 15, 7), float32] */;
  (%932,)
}

def @func_10355(%var_10318: Tensor[(18, 66), float64], %var_10319: Tensor[(182, 6), float32]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(18, 66), float64], Tensor[(182, 6), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  %933 = cast(%var_10318, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %934 = cast(%var_10319, dtype="float32") /* ty=Tensor[(182, 6), float32] */;
  %935 = reshape(%933, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %936 = reshape(%934, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %937 = @func_1386(%935, %936) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %938 = @func_8319() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %939 = @func_8974() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %940 = @func_6175() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %941 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %942 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %943 = %937.5;
  %944 = %938.1;
  %945 = %939.1;
  %946 = %940.0;
  (%941, %942, %943, %var_10318, %var_10319, %944, %945, %946)
}

def @main(%var_10407: Tensor[(11, 15, 4), float64]) -> Tensor[(11, 15, 4), float64] {
  %947 = cast(%var_10407, dtype="float64") /* ty=Tensor[(11, 15, 4), float64] */;
  cos(%947) /* ty=Tensor[(11, 15, 4), float64] */
}

def @func_9792() -> (Tensor[(448), int16],) {
  %948 = @func_9637() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(9, 132), bool], Tensor[(9, 132), bool]) */;
  %949 = %948.2;
  (%949,)
}

def @func_5829() -> (Tensor[(1188), bool],) {
  %950 = @func_5644() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), bool], Tensor[(12, 9), float32]) */;
  %951 = %950.1;
  (%951,)
}

def @func_6810() -> Tensor[(1188), bool] {
  %952 = @func_5829() /* ty=(Tensor[(1188), bool],) */;
  %952.0
}

def @func_414() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) {
  %953 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 9), float32] */;
  %954 = cast(meta[relay.Constant][41] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %955 = reshape(%954, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %956 = @func_192(%955) /* ty=(Tensor[(12, 9, 11), float64],) */;
  %957 = log2(%953) /* ty=Tensor[(12, 9), float32] */;
  %958 = %956.0;
  (%957, %958, meta[relay.Constant][41] /* ty=Tensor[(1188), float64] */)
}

def @func_730(%var_699: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64],) {
  %959 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %960 = cast(%var_699, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%959, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %964 = divide(%962, %963) /* ty=Tensor[(12, 9, 11), float64] */;
  (%964,)
}

def @func_6175() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %965 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %966 = %965.1;
  %967 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  (%966, %967)
}

def @func_1844() -> (Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) {
  %968 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %969 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %970 = %968.1;
  %971 = %969.0;
  (%970, %971)
}

def @func_192(%var_184: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64],) {
  %972 = cast(%var_184, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %973 = asinh(%972) /* ty=Tensor[(12, 9, 11), float64] */;
  (%973,)
}

def @func_7833() -> Tensor[(12, 9, 11), float64] {
  %974 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %974.0
}

def @func_1874(%var_1862: Tensor[(14, 4, 8), int16], %var_1863: Tensor[(14, 4, 8), int16]) -> (Tensor[(14, 4, 8), int16],) {
  %975 = cast(%var_1863, dtype="int16") /* ty=Tensor[(14, 4, 8), int16] */;
  %976 = shape_of(%var_1862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%var_1862, dtype="int16") /* ty=Tensor[(14, 4, 8), int16] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %979 = logical_xor(%977, %978) /* ty=Tensor[(14, 4, 8), int16] */;
  (%979,)
}

def @func_1468() -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) {
  %980 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %981 = %980.0;
  %982 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 9, 11), float64] */, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
  %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%981, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %986 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 9, 11), float64] */, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %987 = left_shift(%984, %985) /* ty=Tensor[(12, 9, 11), int32] */;
  %988 = log2(%986) /* ty=Tensor[(12, 9, 11), float32] */;
  (%987, %988)
}

def @func_1147() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %989 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %990 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %991 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%989, %990, %991)
}

def @func_7315() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %992 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %993 = %992.0;
  %994 = cast(%993, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %995 = reshape(%994, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %996 = @func_730(%995) /* ty=(Tensor[(12, 9, 11), float64],) */;
  %997 = cast(%993, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %998 = cast(meta[relay.Constant][43] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %999 = reshape(%997, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %1000 = reshape(%998, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %1001 = @func_1386(%999, %1000) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %1002 = %996.0;
  %1003 = %1001.3;
  %1004 = @func_7040() /* ty=Tensor[(12, 9, 11), float64] */;
  %1005 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%993, %1002, %1003, meta[relay.Constant][43] /* ty=Tensor[(1092), float32] */, %1004, %1005)
}

def @func_4187() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %1006 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %1007 = @func_2288() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) */;
  %1008 = %1006.0;
  %1009 = %1007.1;
  (%1008, %1009)
}

def @func_7925(%var_7922: Tensor[(256), float32], %var_7923: Tensor[(1188), float64]) -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(256), float32], Tensor[(1188), float64]) {
  %1010 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %1011 = cast(%var_7922, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1012 = cast(%var_7923, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1013 = reshape(%1011, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %1014 = reshape(%1012, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %1015 = @func_800(%1013, %1014) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
  %1016 = %1010.0;
  %1017 = %1015.1;
  (%1016, %1017, %var_7922, %var_7923)
}

def @func_9319(%var_9302: Tensor[(1092), float32]) -> (Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(1092), float32]) {
  %1018 = cast(%var_9302, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %1019 = reshape(%1018, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %1020 = @func_2498(%1019) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) */;
  %1021 = @func_5356() /* ty=Tensor[(12, 9), float32] */;
  %1022 = %1020.2;
  (%1021, %1022, %var_9302)
}

def @func_431() -> Tensor[(12, 9, 11), float64] {
  %1023 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %1023.1
}

def @func_3966() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %1024 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %1025 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %1026 = %1024.0;
  (%1025, %1026)
}

def @func_865() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %1027 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %1028 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%1027, %1028)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9443(%var_9441: int8) -> (Tensor[(12, 9), float32], int8, Tensor[(?, 9, 2), bool], Tensor[(12, 9), float32], Tensor[(?, 9, 2), float64]) {
  @func_9440(%var_9441) /* ty=(Tensor[(12, 9), float32], int8, Tensor[(?, 9, 2), bool], Tensor[(12, 9), float32], Tensor[(?, 9, 2), float64]) */
}

def @func_3862() -> Tensor[(12, 9, 11), float64] {
  %0 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %0.0
}

def @func_3986(%var_3975: Tensor[(2, 11, 16), float64], %var_3982: Tensor[(2, 11, 16), float64]) -> (Tensor[(2, 11, 16), float32], Tensor[(2, 11, 16), float32]) {
  %1 = cast(%var_3975, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %2 = log2(%1) /* ty=Tensor[(2, 11, 16), float64] */;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %4 = cast(%var_3982, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %5 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%2, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %8 = cos(%3) /* ty=Tensor[(2, 11, 16), float32] */;
  %9 = multiply(%6, %7) /* ty=Tensor[(2, 11, 16), float32] */;
  (%8, %9)
}

def @func_9319(%var_9302: Tensor[(1092), float32]) -> (Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(1092), float32]) {
  %10 = cast(%var_9302, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %11 = reshape(%10, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %12 = @func_2498(%11) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) */;
  %13 = @func_5356() /* ty=Tensor[(12, 9), float32] */;
  %14 = %12.2;
  (%13, %14, %var_9302)
}

def @func_7600() -> (Tensor[(12, 9), float32],) {
  %15 = @func_4488() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %16 = %15.0;
  (%16,)
}

def @func_4048() -> (Tensor[(12, 9), float32], Tensor[(2, 224), int16], Tensor[(256), float32], Tensor[(448), int16]) {
  %25 = fn () -> (Tensor[(12, 9), float32], Tensor[(2, 224), int16], Tensor[(256), float32], Tensor[(448), int16]) {
    %17 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
    %20 = reshape(%18, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %21 = reshape(%19, newshape=[2, 224]) /* ty=Tensor[(2, 224), int16] */;
    %22 = @func_3121(%20, %21) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */;
    %23 = %17.2;
    %24 = %22.2;
    (%23, %24, meta[relay.Constant][0] /* ty=Tensor[(256), float32] */, meta[relay.Constant][1] /* ty=Tensor[(448), int16] */)
  };
  %25() /* ty=(Tensor[(12, 9), float32], Tensor[(2, 224), int16], Tensor[(256), float32], Tensor[(448), int16]) */
}

def @func_9792() -> (Tensor[(448), int16],) {
  %26 = @func_9637() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(9, 132), bool], Tensor[(9, 132), bool]) */;
  %27 = %26.2;
  (%27,)
}

def @func_1726() -> (Tensor[(12, 9, 11), float32],) {
  %30 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %28 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %29 = %28.0;
    (%29,)
  };
  %30() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_9182() -> (Tensor[(16, 4, 4), float64], Tensor[(12, 9), float32]) {
  %31 = @func_6773() /* ty=(Tensor[(4, 7, 10), float64], Tensor[(4, 7, 10), float64], Tensor[(16, 4, 4), float32]) */;
  %32 = %31.2;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %34 = cosh(%33) /* ty=Tensor[(16, 4, 4), float32] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %36 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%32, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %39 = floor_mod(%37, %38) /* ty=Tensor[(16, 4, 4), float64] */;
  %40 = @func_4675() /* ty=Tensor[(12, 9), float32] */;
  (%39, %40)
}

def @func_8079() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %41 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %42 = %41.0;
  %43 = @func_7040() /* ty=Tensor[(12, 9, 11), float64] */;
  (%42, %43)
}

def @func_10167() -> (Tensor[(12, 9, 11), float64],) {
  @func_10165() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_6153() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  @func_6151() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_867() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_2669(%var_2654: Tensor[(4, 5, 14), uint32], %var_2655: Tensor[(4, 5, 14), uint32]) -> (Tensor[(4, 5, 14), uint32],) {
  %44 = cast(%var_2655, dtype="uint32") /* ty=Tensor[(4, 5, 14), uint32] */;
  %45 = shape_of(%var_2654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%var_2654, dtype="uint32") /* ty=Tensor[(4, 5, 14), uint32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %48 = bitwise_and(%46, %47) /* ty=Tensor[(4, 5, 14), uint32] */;
  (%48,)
}

def @func_5356() -> Tensor[(12, 9), float32] {
  %49 = @func_4659() /* ty=(Tensor[(12, 9), float32],) */;
  %49.0
}

def @func_5993() -> (Tensor[(12, 9, 11), float64],) {
  @func_5991() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_416() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) {
  @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */
}

def @func_4723() -> (Tensor[(1188), float64], Tensor[(12, 9), float32]) {
  %54 = fn () -> (Tensor[(1188), float64], Tensor[(12, 9), float32]) {
    %50 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
    %51 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
    %52 = %50.1;
    %53 = %51.0;
    (%52, %53)
  };
  %54() /* ty=(Tensor[(1188), float64], Tensor[(12, 9), float32]) */
}

def @func_2797() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %67 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
    %55 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %56 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %57 = %56.0;
    %58 = cast(%57, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %59 = reshape(%58, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %60 = @func_2640(%59) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */;
    %61 = cast(%57, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %62 = reshape(%61, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %63 = @func_2640(%62) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */;
    %64 = %55.0;
    %65 = %60.0;
    %66 = %63.0;
    (%64, %57, %65, %66)
  };
  %67() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_5867(%var_5854: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(256), float32], Tensor[(448), int16]) {
  %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %69 = cast(%var_5854, dtype="int16") /* ty=Tensor[(448), int16] */;
  %70 = reshape(%68, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %71 = reshape(%69, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %72 = @func_3902(%70, %71) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) */;
  %73 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %74 = %72.4;
  (%73, %74, meta[relay.Constant][2] /* ty=Tensor[(256), float32] */, %var_5854)
}

def @func_2883(%var_2857: bool, %var_2858: Tensor[(8, 6, 7), bool]) -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %75 = cast(%var_2857, dtype="bool") /* ty=bool */;
  %76 = cast(%var_2858, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %77 = cast(%var_2857, dtype="float64") /* ty=float64 */;
  %78 = cast(%var_2858, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %79 = logical_or(%75, %76) /* ty=Tensor[(8, 6, 7), bool] */;
  %80 = subtract(%77, %78) /* ty=Tensor[(8, 6, 7), float64] */;
  (%79, %80)
}

def @func_6177() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  @func_6175() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_7042() -> Tensor[(12, 9, 11), float64] {
  @func_7040() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_2712() -> (Tensor[(12, 9), float32],) {
  @func_2710() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_2249(%var_2240: Tensor[(448), int16]) -> (Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  %81 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %82 = @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %83 = cast(%var_2240, dtype="int16") /* ty=Tensor[(448), int16] */;
  %84 = cast(%var_2240, dtype="int16") /* ty=Tensor[(448), int16] */;
  %85 = reshape(%83, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %86 = reshape(%84, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
  %87 = @func_1874(%85, %86) /* ty=(Tensor[(14, 4, 8), int16],) */;
  %88 = %81.0;
  %89 = %82.0;
  %90 = %87.0;
  (%88, %89, %90, %var_2240)
}

def @func_8935() -> Tensor[(1188), int16] {
  @func_8933() /* ty=Tensor[(1188), int16] */
}

def @func_9941() -> (Tensor[(12, 9), float32],) {
  %91 = @func_6860() /* ty=Tensor[(12, 9), float32] */;
  (%91,)
}

def @func_6151() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %92 = @func_4361() /* ty=(Tensor[(12, 9), float32],) */;
  %93 = @func_5998() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %94 = %92.0;
  %95 = %93.0;
  (%94, %95)
}

def @func_9731() -> (Tensor[(12, 9, 11), float32],) {
  %97 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %96 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
    (%96,)
  };
  %97() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_8975() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
  %102 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
    %98 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
    %99 = @func_1725() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %100 = %98.0;
    %101 = %99.0;
    (%100, %101)
  };
  %102() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */
}

def @func_6618() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %110 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
    %103 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %104 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
    %105 = cast(%104, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %106 = %103.1;
    %107 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
    %108 = @func_5356() /* ty=Tensor[(12, 9), float32] */;
    %109 = atan(%105) /* ty=Tensor[(12, 9, 11), float64] */;
    (%106, %107, %108, %109)
  };
  %110() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_603() -> Tensor[(12, 9), float32] {
  %111 = fn () -> Tensor[(12, 9), float32] {
    @func_487() /* ty=Tensor[(12, 9), float32] */
  };
  %111() /* ty=Tensor[(12, 9), float32] */
}

def @func_1960(%var_1959: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  %120 = fn (%var_1954: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
    %112 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %113 = cast(%var_1954, dtype="int16") /* ty=Tensor[(448), int16] */;
    %114 = cast(%var_1954, dtype="int16") /* ty=Tensor[(448), int16] */;
    %115 = reshape(%113, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
    %116 = reshape(%114, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
    %117 = @func_1874(%115, %116) /* ty=(Tensor[(14, 4, 8), int16],) */;
    %118 = %112.2;
    %119 = %117.0;
    (%118, %119, %var_1954)
  };
  %120(%var_1959) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */
}

def @func_10203() -> (Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %121 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %122 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %123 = %121.1;
  %124 = %122.0;
  %125 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  (%123, %124, %125)
}

def @func_3124(%var_3122: Tensor[(16, 4, 4), float32], %var_3123: Tensor[(2, 224), int16]) -> (Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) {
  %137 = fn (%var_3101: Tensor[(16, 4, 4), float32], %var_3117: Tensor[(2, 224), int16]) -> (Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) {
    %126 = @func_2527() /* ty=(Tensor[(16, 4, 4), float32],) */;
    %127 = %126.0;
    %128 = cast(%var_3101, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
    %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %130 = cast(%127, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %132 = cast(%var_3117, dtype="int16") /* ty=Tensor[(2, 224), int16] */;
    %133 = reshape(%132, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %134 = @func_2249(%133) /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
    %135 = divide(%130, %131) /* ty=Tensor[(16, 4, 4), float64] */;
    %136 = %134.3;
    (%135, %136, %var_3117)
  };
  %137(%var_3122, %var_3123) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */
}

def @func_4362() -> (Tensor[(12, 9), float32],) {
  %140 = fn () -> (Tensor[(12, 9), float32],) {
    %138 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %139 = %138.0;
    (%139,)
  };
  %140() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_2528() -> (Tensor[(16, 4, 4), float32],) {
  %143 = fn () -> (Tensor[(16, 4, 4), float32],) {
    %141 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
    %142 = %141.0;
    (%142,)
  };
  %143() /* ty=(Tensor[(16, 4, 4), float32],) */
}

def @func_2643(%var_2641: Tensor[(1188), float64]) -> (Tensor[(12, 9), float32], Tensor[(1188), bool]) {
  @func_2640(%var_2641) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */
}

def @func_9993() -> Tensor[(12, 9), float32] {
  %145 = fn () -> Tensor[(12, 9), float32] {
    %144 = @func_7315() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
    %144.5
  };
  %145() /* ty=Tensor[(12, 9), float32] */
}

def @func_9160() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), bool]) {
  %146 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %147 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %148 = %146.0;
  (%147, %148)
}

def @func_3966() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %149 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %150 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %151 = %149.0;
  (%150, %151)
}

def @func_432() -> Tensor[(12, 9, 11), float64] {
  %153 = fn () -> Tensor[(12, 9, 11), float64] {
    %152 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %152.1
  };
  %153() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_3789() -> Tensor[(12, 9), float32] {
  %154 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %154.0
}

def @func_4659() -> (Tensor[(12, 9), float32],) {
  %155 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  (%155,)
}

def @func_4955() -> (Tensor[(4, 15, 7), float32],) {
  @func_4953() /* ty=(Tensor[(4, 15, 7), float32],) */
}

def @func_9088() -> (Tensor[(12, 9, 11), float32], Tensor[(4, 15, 7), float32]) {
  @func_9086() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(4, 15, 7), float32]) */
}

def @func_5917(%var_5915: int16, %var_5916: Tensor[(16, 6, 13), int16]) -> Tensor[(16, 6, 13), bool] {
  %158 = fn (%var_5891: int16, %var_5892: Tensor[(16, 6, 13), int16]) -> Tensor[(16, 6, 13), bool] {
    %156 = cast(%var_5891, dtype="bool") /* ty=bool */;
    %157 = cast(%var_5892, dtype="bool") /* ty=Tensor[(16, 6, 13), bool] */;
    less_equal(%156, %157) /* ty=Tensor[(16, 6, 13), bool] */
  };
  %158(%var_5915, %var_5916) /* ty=Tensor[(16, 6, 13), bool] */
}

def @func_4416() -> Tensor[(12, 9, 11), float64] {
  %160 = fn () -> Tensor[(12, 9, 11), float64] {
    %159 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %159.0
  };
  %160() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_6690(%var_6689: Tensor[(3, 11, 5), float64]) -> (Tensor[(3, 11, 5), float64], Tensor[(12, 9), float32], Tensor[(3, 11, 5), float32]) {
  %167 = fn (%var_6663: Tensor[(3, 11, 5), float64]) -> (Tensor[(3, 11, 5), float64], Tensor[(12, 9), float32], Tensor[(3, 11, 5), float32]) {
    %161 = cast(%var_6663, dtype="float64") /* ty=Tensor[(3, 11, 5), float64] */;
    %162 = @func_6617() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
    %163 = cast(%var_6663, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
    %164 = cosh(%161) /* ty=Tensor[(3, 11, 5), float64] */;
    %165 = %162.0;
    %166 = rsqrt(%163) /* ty=Tensor[(3, 11, 5), float32] */;
    (%164, %165, %166)
  };
  %167(%var_6689) /* ty=(Tensor[(3, 11, 5), float64], Tensor[(12, 9), float32], Tensor[(3, 11, 5), float32]) */
}

def @func_7125(%var_7078: Tensor[(12, 5, 10), int64], %var_7079: Tensor[(12, 5, 10), int64]) -> (Tensor[(12, 5, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(1, 1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %168 = cast(%var_7079, dtype="bool") /* ty=Tensor[(12, 5, 10), bool] */;
  %169 = shape_of(%var_7078, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_7078, dtype="bool") /* ty=Tensor[(12, 5, 10), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 1008), float64] */, dtype="float64") /* ty=Tensor[(1, 1008), float64] */;
  %173 = reshape(%172, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float64] */;
  %174 = @func_631(%173) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */;
  %175 = @func_2121() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */;
  %176 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %177 = greater(%170, %171) /* ty=Tensor[(12, 5, 10), bool] */;
  %178 = %174.0;
  %179 = %175.0;
  %180 = %176.0;
  (%177, %178, meta[relay.Constant][3] /* ty=Tensor[(1, 1008), float64] */, %179, %180)
}

def @func_6860() -> Tensor[(12, 9), float32] {
  %181 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %181.1
}

def @func_10205() -> (Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  @func_10203() /* ty=(Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_4142(%var_4141: Tensor[(280), uint32]) -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(256), float32], Tensor[(448), int16], Tensor[(4, 5, 14), uint32], Tensor[(280), uint32]) {
  %198 = fn (%var_4136: Tensor[(280), uint32]) -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(256), float32], Tensor[(448), int16], Tensor[(4, 5, 14), uint32], Tensor[(280), uint32]) {
    %182 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
    %183 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %184 = cast(meta[relay.Constant][4] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %185 = cast(meta[relay.Constant][5] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
    %186 = reshape(%184, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %187 = reshape(%185, newshape=[2, 224]) /* ty=Tensor[(2, 224), int16] */;
    %188 = @func_3121(%186, %187) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */;
    %189 = cast(%var_4136, dtype="uint32") /* ty=Tensor[(280), uint32] */;
    %190 = cast(%var_4136, dtype="uint32") /* ty=Tensor[(280), uint32] */;
    %191 = reshape(%189, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint32] */;
    %192 = reshape(%190, newshape=[4, 5, 14]) /* ty=Tensor[(4, 5, 14), uint32] */;
    %193 = @func_2669(%191, %192) /* ty=(Tensor[(4, 5, 14), uint32],) */;
    %194 = %182.0;
    %195 = %183.0;
    %196 = %188.1;
    %197 = %193.0;
    (%194, %195, %196, meta[relay.Constant][4] /* ty=Tensor[(256), float32] */, meta[relay.Constant][5] /* ty=Tensor[(448), int16] */, %197, %var_4136)
  };
  %198(%var_4141) /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(256), float32], Tensor[(448), int16], Tensor[(4, 5, 14), uint32], Tensor[(280), uint32]) */
}

def @func_2252(%var_2250: Tensor[(448), int16]) -> (Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  @func_2249(%var_2250) /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */
}

def @func_1386(%var_1364: Tensor[(12, 9, 11), float64], %var_1373: Tensor[(1092), float32]) -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %199 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %200 = %199.0;
  %201 = cast(%var_1364, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %205 = cast(%var_1373, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %206 = cast(meta[relay.Constant][6] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %207 = reshape(%205, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %208 = reshape(%206, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %209 = @func_1057(%207, %208) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) */;
  %210 = @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %211 = logical_or(%203, %204) /* ty=Tensor[(12, 9, 11), bool] */;
  %212 = %209.0;
  %213 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %214 = %210.0;
  (%211, %212, %var_1373, meta[relay.Constant][6] /* ty=Tensor[(1008), float64] */, %213, %214)
}

def @func_3905(%var_3903: Tensor[(256), float32], %var_3904: Tensor[(448), int16]) -> (Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) {
  %225 = fn (%var_3893: Tensor[(256), float32], %var_3894: Tensor[(448), int16]) -> (Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) {
    %215 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
    %216 = cast(%var_3893, dtype="float32") /* ty=Tensor[(256), float32] */;
    %217 = cast(%var_3894, dtype="int16") /* ty=Tensor[(448), int16] */;
    %218 = reshape(%216, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %219 = reshape(%217, newshape=[2, 224]) /* ty=Tensor[(2, 224), int16] */;
    %220 = @func_3121(%218, %219) /* ty=(Tensor[(16, 4, 4), float64], Tensor[(448), int16], Tensor[(2, 224), int16]) */;
    %221 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %222 = %215.0;
    %223 = %220.0;
    %224 = %221.0;
    (%222, %223, %var_3893, %var_3894, %224)
  };
  %225(%var_3903, %var_3904) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) */
}

def @func_1991() -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  %232 = fn () -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
    %226 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
    %227 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
    %228 = @func_865() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %229 = %226.0;
    %230 = %227.0;
    %231 = %228.0;
    (%229, %230, %231)
  };
  %232() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */
}

def @func_9184() -> (Tensor[(16, 4, 4), float64], Tensor[(12, 9), float32]) {
  @func_9182() /* ty=(Tensor[(16, 4, 4), float64], Tensor[(12, 9), float32]) */
}

def @func_7190() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */
}

def @func_4782() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %233 = @func_3966() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %234 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %235 = %233.1;
  %236 = %234.3;
  (%235, %236)
}

def @func_7534() -> Tensor[(12, 9), float32] {
  @func_7532() /* ty=Tensor[(12, 9), float32] */
}

def @func_2970() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) {
  %241 = fn () -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) {
    %237 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
    %238 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %239 = %237.1;
    %240 = %238.0;
    (%239, %240)
  };
  %241() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */
}

def @func_980(%var_978: Tensor[(6, 1, 9), float64], %var_979: Tensor[(256), float32]) -> (Tensor[(6, ?, 9), bool], Tensor[(16, 4, 4), int8], Tensor[(256), float32], Tensor[(1188), float64]) {
  %262 = fn (%var_941: Tensor[(6, 1, 9), float64], %var_960: Tensor[(256), float32]) -> (Tensor[(6, ?, 9), bool], Tensor[(16, 4, 4), int8], Tensor[(256), float32], Tensor[(1188), float64]) {
    %242 = cast(%var_941, dtype="float64") /* ty=Tensor[(6, 1, 9), float64] */;
    %243 = acosh(%242) /* ty=Tensor[(6, 1, 9), float64] */;
    %244 = cast(%var_941, dtype="float64") /* ty=Tensor[(6, 1, 9), float64] */;
    %245 = sqrt(%244) /* ty=Tensor[(6, 1, 9), float64] */;
    %246 = cast(%245, dtype="uint64") /* ty=Tensor[(6, 1, 9), uint64] */;
    %247 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
    %248 = cast(%243, dtype="uint64") /* ty=Tensor[(6, 1, 9), uint64] */;
    %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %250 = minimum(%248, %249) /* ty=Tensor[(6, ?, 9), uint64] */;
    %251 = cast(%245, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
    %252 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%250, dtype="bool") /* ty=Tensor[(6, ?, 9), bool] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %255 = cast(%var_960, dtype="float32") /* ty=Tensor[(256), float32] */;
    %256 = cast(meta[relay.Constant][7] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %257 = reshape(%255, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %258 = reshape(%256, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %259 = @func_800(%257, %258) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
    %260 = logical_and(%253, %254) /* ty=Tensor[(6, ?, 9), bool] */;
    %261 = %259.2;
    (%260, %261, %var_960, meta[relay.Constant][7] /* ty=Tensor[(1188), float64] */)
  };
  %262(%var_978, %var_979) /* ty=(Tensor[(6, ?, 9), bool], Tensor[(16, 4, 4), int8], Tensor[(256), float32], Tensor[(1188), float64]) */
}

def @func_194(%var_193: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64],) {
  %265 = fn (%var_184: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64],) {
    %263 = cast(%var_184, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %264 = asinh(%263) /* ty=Tensor[(12, 9, 11), float64] */;
    (%264,)
  };
  %265(%var_193) /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_6302() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), uint16]) {
  %272 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), uint16]) {
    %266 = @func_5378() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %267 = %266.0;
    %268 = cast(%267, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %269 = reshape(%268, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %270 = @func_3654(%269) /* ty=(Tensor[(12, 9, 11), uint16], Tensor[(12, 9), float32]) */;
    %271 = %270.0;
    (%267, %271)
  };
  %272() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), uint16]) */
}

def @func_9637() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(9, 132), bool], Tensor[(9, 132), bool]) {
  %273 = @func_6515() /* ty=(Tensor[(12, 9), float32],) */;
  %274 = cast(meta[relay.Constant][8] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %275 = reshape(%274, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %276 = @func_7789(%275) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
  %277 = @func_5276() /* ty=(Tensor[(9, 132), uint8],) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
  %280 = atanh(%279) /* ty=Tensor[(9, 132), float64] */;
  %281 = @func_2946() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %284 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %285 = cast(%280, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %287 = cast(meta[relay.Constant][9] /* ty=Tensor[(9, 132), float64] */, dtype="uint16") /* ty=Tensor[(9, 132), uint16] */;
  %288 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %289 = cast(%280, dtype="uint16") /* ty=Tensor[(9, 132), uint16] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %291 = bitwise_xor(%289, %290) /* ty=Tensor[(9, 132), uint16] */;
  %292 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 132), uint16] */, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %293 = shape_of(%291, dtype="int32") /* ty=Tensor[(2), int32] */;
  %294 = cast(%291, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %296 = %273.0;
  %297 = %276.3;
  %298 = less(%285, %286) /* ty=Tensor[(9, 132), bool] */;
  %299 = equal(%294, %295) /* ty=Tensor[(9, 132), bool] */;
  (%296, %297, meta[relay.Constant][8] /* ty=Tensor[(448), int16] */, %298, %299)
}

def @func_6515() -> (Tensor[(12, 9), float32],) {
  %300 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %301 = %300.1;
  (%301,)
}

def @func_4829(%var_4827: Tensor[(48), uint64]) -> (Tensor[(12, 9, 11), float64], Tensor[(48), uint64], Tensor[(48), uint64]) {
  @func_4826(%var_4827) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(48), uint64], Tensor[(48), uint64]) */
}

def @func_733(%var_731: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64],) {
  @func_730(%var_731) /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_8081() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  @func_8079() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_3416() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) {
  %305 = fn () -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) {
    %302 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %303 = %302.0;
    %304 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) */
}

def @func_3586() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) {
  @func_3584() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) */
}

def @func_5187(%var_5186: Tensor[(48), uint64]) -> (Tensor[(12, 9), float32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64]) {
  %312 = fn (%var_5182: Tensor[(48), uint64]) -> (Tensor[(12, 9), float32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64]) {
    %306 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
    %307 = cast(%var_5182, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %308 = reshape(%307, newshape=[48]) /* ty=Tensor[(48), uint64] */;
    %309 = @func_4617(%308) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) */;
    %310 = %306.0;
    %311 = %309.1;
    (%310, %311, %var_5182)
  };
  %312(%var_5186) /* ty=(Tensor[(12, 9), float32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64]) */
}

def @func_8587(%var_8586: Tensor[(4, 5, 5), float64]) -> Tensor[(4, 5, 5), float64] {
  %314 = fn (%var_8538: Tensor[(4, 5, 5), float64]) -> Tensor[(4, 5, 5), float64] {
    %313 = cast(%var_8538, dtype="float64") /* ty=Tensor[(4, 5, 5), float64] */;
    atanh(%313) /* ty=Tensor[(4, 5, 5), float64] */
  };
  %314(%var_8586) /* ty=Tensor[(4, 5, 5), float64] */
}

def @func_1432() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %315 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %316 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %317 = %315.2;
  (%316, %317)
}

def @func_8650(%var_8648: Tensor[(12, 9, 11), float64], %var_8649: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), int32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(12, 9, 11), uint8]) {
  @func_8646(%var_8648, %var_8649) /* ty=(Tensor[(12, 9, 11), int32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(12, 9, 11), uint8]) */
}

def @func_4905() -> Tensor[(12, 9, 11), float64] {
  %319 = fn () -> Tensor[(12, 9, 11), float64] {
    %318 = @func_4187() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
    %318.1
  };
  %319() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_1805() -> (Tensor[(12, 9), float32], Tensor[(1188), float64]) {
  @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */
}

def @func_2498(%var_2495: Tensor[(1092), float32]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) {
  %320 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %321 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 448), int16] */, dtype="int16") /* ty=Tensor[(1, 448), int16] */;
  %322 = reshape(%321, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %323 = @func_1958(%322) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
  %324 = @func_2288() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) */;
  %325 = %324.1;
  %326 = cast(%325, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %327 = cast(%var_2495, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %328 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 1008), float64] */, dtype="float64") /* ty=Tensor[(1, 1008), float64] */;
  %329 = reshape(%327, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %330 = reshape(%328, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %331 = @func_1057(%329, %330) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) */;
  %332 = %320.1;
  %333 = %323.0;
  %334 = exp(%326) /* ty=Tensor[(12, 9, 11), float32] */;
  %335 = %331.3;
  (%332, %333, meta[relay.Constant][11] /* ty=Tensor[(1, 448), int16] */, %334, %335, %var_2495, meta[relay.Constant][12] /* ty=Tensor[(1, 1008), float64] */)
}

def @func_2887(%var_2885: bool, %var_2886: Tensor[(8, 6, 7), bool]) -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  @func_2883(%var_2885, %var_2886) /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_3757(%var_3714: int8, %var_3715: Tensor[(896), int8]) -> (Tensor[(12, 9, 11), float64], Tensor[(256), int16], Tensor[(896), uint16], Tensor[(4, 16, 14), float32]) {
  %336 = @func_2946() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %337 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %338 = %337.2;
  %339 = cast(%338, dtype="int16") /* ty=Tensor[(256), int16] */;
  %340 = cast(%var_3714, dtype="int16") /* ty=int16 */;
  %341 = cast(%var_3714, dtype="int8") /* ty=int8 */;
  %342 = cast(%var_3715, dtype="int8") /* ty=Tensor[(896), int8] */;
  %343 = reshape(%341, newshape=[]) /* ty=int8 */;
  %344 = reshape(%342, newshape=[4, 16, 14]) /* ty=Tensor[(4, 16, 14), int8] */;
  %345 = @func_3669(%343, %344) /* ty=Tensor[(4, 16, 14), bool] */;
  %346 = cast(%345, dtype="uint16") /* ty=Tensor[(4, 16, 14), uint16] */;
  %347 = shape_of(%var_3715, dtype="int32") /* ty=Tensor[(1), int32] */;
  %348 = cast(%var_3715, dtype="uint16") /* ty=Tensor[(896), uint16] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %350 = cast(%345, dtype="float32") /* ty=Tensor[(4, 16, 14), float32] */;
  %351 = %336.0;
  %352 = maximum(%339, %340) /* ty=Tensor[(256), int16] */;
  %353 = bitwise_or(%348, %349) /* ty=Tensor[(896), uint16] */;
  %354 = acos(%350) /* ty=Tensor[(4, 16, 14), float32] */;
  (%351, %352, %353, %354)
}

def @func_5389() -> Tensor[(12, 9, 11), float32] {
  %355 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %355.2
}

def @func_6175() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %356 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %357 = %356.1;
  %358 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  (%357, %358)
}

def @func_5830() -> (Tensor[(1188), bool],) {
  %361 = fn () -> (Tensor[(1188), bool],) {
    %359 = @func_5644() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), bool], Tensor[(12, 9), float32]) */;
    %360 = %359.1;
    (%360,)
  };
  %361() /* ty=(Tensor[(1188), bool],) */
}

def @func_3020(%var_2989: Tensor[(16, 4, 4), float32]) -> (Tensor[(16, 4, 4), bool],) {
  %362 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %363 = %362.1;
  %364 = cast(%var_2989, dtype="int32") /* ty=Tensor[(16, 4, 4), int32] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="int32") /* ty=Tensor[(16, 4, 4), int32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %368 = bitwise_and(%366, %367) /* ty=Tensor[(16, 4, 4), int32] */;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(16, 4, 4), float64] */;
  %370 = atan(%369) /* ty=Tensor[(16, 4, 4), float64] */;
  %371 = cast(%var_2989, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
  %372 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%363, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %375 = maximum(%373, %374) /* ty=Tensor[(16, 4, 4), int8] */;
  %376 = cast(%375, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
  %377 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%370, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = greater_equal(%378, %379) /* ty=Tensor[(16, 4, 4), bool] */;
  (%380,)
}

def @func_7602() -> (Tensor[(12, 9), float32],) {
  @func_7600() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_2050() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
  %385 = fn () -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
    %381 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %382 = %381.0;
    %383 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
    %384 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
    (%382, %383, %384)
  };
  %385() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */
}

def @func_2640(%var_2633: Tensor[(1188), float64]) -> (Tensor[(12, 9), float32], Tensor[(1188), bool]) {
  %386 = @func_1844() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */;
  %387 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %388 = %387.1;
  %389 = cast(%var_2633, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(1), int32] */;
  %391 = cast(%388, dtype="bool") /* ty=Tensor[(1188), bool] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?), bool] */;
  %393 = %386.1;
  %394 = greater(%391, %392) /* ty=Tensor[(1188), bool] */;
  (%393, %394)
}

def @func_634(%var_632: Tensor[(16, 9, 7), float64]) -> (Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) {
  @func_631(%var_632) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */
}

def @func_3468() -> (Tensor[(12, 9, 11), float64],) {
  %397 = fn () -> (Tensor[(12, 9, 11), float64],) {
    %395 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
    %396 = %395.0;
    (%396,)
  };
  %397() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_6891() -> Tensor[(5, 12, 11), float32] {
  %399 = fn () -> Tensor[(5, 12, 11), float32] {
    %398 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 11), float32] */;
    tan(%398) /* ty=Tensor[(5, 12, 11), float32] */
  };
  %399() /* ty=Tensor[(5, 12, 11), float32] */
}

def @func_6952() -> (Tensor[(12, 9), float32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(1, 1188), float64]) {
  %400 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
  %401 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
  %402 = %401.1;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %404 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1188), float64] */, dtype="float64") /* ty=Tensor[(1, 1188), float64] */;
  %405 = reshape(%403, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
  %406 = reshape(%404, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %407 = @func_800(%405, %406) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
  %408 = %400.0;
  %409 = %407.3;
  (%408, %402, %409, meta[relay.Constant][14] /* ty=Tensor[(1, 1188), float64] */)
}

def @func_1390(%var_1388: Tensor[(12, 9, 11), float64], %var_1389: Tensor[(1092), float32]) -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  @func_1386(%var_1388, %var_1389) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_8186(%var_8183: Tensor[(9, 132), uint8], %var_8184: Tensor[(1092), float32], %var_8185: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(9, 132), float32], Tensor[(1092), float64], Tensor[(1092), float32], Tensor[(256), float32], Tensor[(448), float32], Tensor[(256), float32]) {
  %436 = fn (%var_8140: Tensor[(9, 132), uint8], %var_8146: Tensor[(1092), float32], %var_8148: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(9, 132), float32], Tensor[(1092), float64], Tensor[(1092), float32], Tensor[(256), float32], Tensor[(448), float32], Tensor[(256), float32]) {
    %410 = @func_2121() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */;
    %411 = %410.3;
    %412 = cast(%var_8140, dtype="float32") /* ty=Tensor[(9, 132), float32] */;
    %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(2), int32] */;
    %414 = cast(%411, dtype="float32") /* ty=Tensor[(9, 132), float32] */;
    %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %416 = cast(%var_8140, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
    %417 = cast(%var_8146, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %418 = cast(meta[relay.Constant][15] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %419 = cast(%var_8148, dtype="int16") /* ty=Tensor[(448), int16] */;
    %420 = reshape(%416, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %421 = reshape(%417, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %422 = reshape(%418, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %423 = reshape(%419, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %424 = @func_4266(%420, %421, %422, %423) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) */;
    %425 = cast(%var_8148, dtype="float32") /* ty=Tensor[(448), float32] */;
    %426 = cast(meta[relay.Constant][15] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %427 = mod(%414, %415) /* ty=Tensor[(9, 132), float32] */;
    %428 = cast(%427, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
    %429 = reshape(%426, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %430 = reshape(%428, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %431 = @func_7925(%429, %430) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(256), float32], Tensor[(1188), float64]) */;
    %432 = @func_487() /* ty=Tensor[(12, 9), float32] */;
    %433 = %424.3;
    %434 = cos(%425) /* ty=Tensor[(448), float32] */;
    %435 = %431.2;
    (%432, %427, %433, %var_8146, meta[relay.Constant][15] /* ty=Tensor[(256), float32] */, %434, %435)
  };
  %436(%var_8183, %var_8184, %var_8185) /* ty=(Tensor[(12, 9), float32], Tensor[(9, 132), float32], Tensor[(1092), float64], Tensor[(1092), float32], Tensor[(256), float32], Tensor[(448), float32], Tensor[(256), float32]) */
}

def @func_4681() -> (Tensor[(12, 9), float32],) {
  %437 = @func_4675() /* ty=Tensor[(12, 9), float32] */;
  (%437,)
}

def @func_8042() -> (Tensor[(12, 9), float32],) {
  %440 = fn () -> (Tensor[(12, 9), float32],) {
    %438 = @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
    %439 = %438.2;
    (%439,)
  };
  %440() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_1803() -> (Tensor[(12, 9), float32], Tensor[(1188), float64]) {
  %441 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %442 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
  %443 = %441.0;
  %444 = %442.2;
  (%443, %444)
}

def @func_8646(%var_8594: Tensor[(12, 9, 11), float64], %var_8640: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), int32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(12, 9, 11), uint8]) {
  %445 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %446 = %445.0;
  %447 = cast(%var_8594, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %451 = @func_4878() /* ty=(Tensor[(16, 4, 4), bool],) */;
  %452 = %451.0;
  %453 = cast(%452, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
  %454 = cast(%var_8640, dtype="uint8") /* ty=Tensor[(12, 9, 11), uint8] */;
  %455 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%446, dtype="uint8") /* ty=Tensor[(12, 9, 11), uint8] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %458 = add(%449, %450) /* ty=Tensor[(12, 9, 11), int32] */;
  %459 = erf(%453) /* ty=Tensor[(16, 4, 4), float32] */;
  %460 = @func_8487() /* ty=Tensor[(16, 4, 4), float32] */;
  %461 = right_shift(%456, %457) /* ty=Tensor[(12, 9, 11), uint8] */;
  (%458, %459, %460, %461)
}

def @func_7188() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  %462 = @func_6126() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %463 = @func_3415() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) */;
  %464 = @func_3046() /* ty=(Tensor[(12, 9), float32],) */;
  %465 = %462.1;
  %466 = %463.1;
  %467 = %464.0;
  (%465, %466, %467)
}

def @func_8933() -> Tensor[(1188), int16] {
  %468 = @func_6810() /* ty=Tensor[(1188), bool] */;
  %469 = cast(meta[relay.Constant][16] /* ty=Tensor[(1188), bool] */, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(1), int32] */;
  %471 = cast(%468, dtype="int16") /* ty=Tensor[(1188), int16] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?), int16] */;
  left_shift(%471, %472) /* ty=Tensor[(1188), int16] */
}

def @func_1858() -> (Tensor[(12, 9, 11), float64],) {
  @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_6773() -> (Tensor[(4, 7, 10), float64], Tensor[(4, 7, 10), float64], Tensor[(16, 4, 4), float32]) {
  %473 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %474 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(4, 7, 10), float64] */;
  %475 = @func_6224() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */;
  %476 = sin(%473) /* ty=Tensor[(4, 7, 10), float64] */;
  %477 = asinh(%474) /* ty=Tensor[(4, 7, 10), float64] */;
  %478 = %475.1;
  (%476, %477, %478)
}

def @func_1594() -> (Tensor[(12, 9, 11), float32],) {
  %480 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %479 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
    (%479,)
  };
  %480() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_10165() -> (Tensor[(12, 9, 11), float64],) {
  %481 = @func_5991() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %482 = %481.0;
  (%482,)
}

def @func_6403(%var_6401: float32, %var_6402: Tensor[(8, 8, 7), float32]) -> (Tensor[(8, 8, 7), uint32],) {
  %491 = fn (%var_6387: float32, %var_6388: Tensor[(8, 8, 7), float32]) -> (Tensor[(8, 8, 7), uint32],) {
    %483 = cast(%var_6387, dtype="float32") /* ty=float32 */;
    %484 = cast(%var_6388, dtype="float32") /* ty=Tensor[(8, 8, 7), float32] */;
    %485 = floor_divide(%483, %484) /* ty=Tensor[(8, 8, 7), float32] */;
    %486 = cast(%var_6388, dtype="uint32") /* ty=Tensor[(8, 8, 7), uint32] */;
    %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(%485, dtype="uint32") /* ty=Tensor[(8, 8, 7), uint32] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %490 = right_shift(%488, %489) /* ty=Tensor[(8, 8, 7), uint32] */;
    (%490,)
  };
  %491(%var_6401, %var_6402) /* ty=(Tensor[(8, 8, 7), uint32],) */
}

def @func_8434() -> Tensor[(12, 9), float32] {
  %493 = fn () -> Tensor[(12, 9), float32] {
    %492 = @func_2710() /* ty=(Tensor[(12, 9), float32],) */;
    %492.0
  };
  %493() /* ty=Tensor[(12, 9), float32] */
}

def @func_3673(%var_3671: int8, %var_3672: Tensor[(4, 16, 14), int8]) -> Tensor[(4, 16, 14), bool] {
  @func_3669(%var_3671, %var_3672) /* ty=Tensor[(4, 16, 14), bool] */
}

def @func_7532() -> Tensor[(12, 9), float32] {
  %494 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %494.1
}

def @func_6000() -> (Tensor[(12, 9, 11), float64],) {
  @func_5998() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_4676() -> Tensor[(12, 9), float32] {
  %495 = fn () -> Tensor[(12, 9), float32] {
    @func_487() /* ty=Tensor[(12, 9), float32] */
  };
  %495() /* ty=Tensor[(12, 9), float32] */
}

def @func_9983(%var_9982: Tensor[(9, 13, 3), uint8]) -> (Tensor[(12, 9, 11), float32], Tensor[(9, 13, 3), float64]) {
  %505 = fn (%var_9956: Tensor[(9, 13, 3), uint8]) -> (Tensor[(12, 9, 11), float32], Tensor[(9, 13, 3), float64]) {
    %496 = @func_1725() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %497 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 13, 3), uint8] */, dtype="uint8") /* ty=Tensor[(9, 13, 3), uint8] */;
    %498 = shape_of(%var_9956, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(%var_9956, dtype="uint8") /* ty=Tensor[(9, 13, 3), uint8] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %501 = bitwise_or(%499, %500) /* ty=Tensor[(9, 13, 3), uint8] */;
    %502 = cast(%501, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
    %503 = %496.0;
    %504 = atanh(%502) /* ty=Tensor[(9, 13, 3), float64] */;
    (%503, %504)
  };
  %505(%var_9982) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 13, 3), float64]) */
}

def @func_7693(%var_7691: Tensor[(84), int32], %var_7692: Tensor[(16, 4, 4), float32]) -> (Tensor[(12, 9), float32], Tensor[(48), uint64], Tensor[(84), int32], Tensor[(16, 4, 4), uint16], Tensor[(12, 9, 11), int32]) {
  %523 = fn (%var_7643: Tensor[(84), int32], %var_7667: Tensor[(16, 4, 4), float32]) -> (Tensor[(12, 9), float32], Tensor[(48), uint64], Tensor[(84), int32], Tensor[(16, 4, 4), uint16], Tensor[(12, 9, 11), int32]) {
    %506 = @func_7600() /* ty=(Tensor[(12, 9), float32],) */;
    %507 = cast(%var_7643, dtype="int32") /* ty=Tensor[(84), int32] */;
    %508 = cast(%var_7643, dtype="int32") /* ty=Tensor[(84), int32] */;
    %509 = reshape(%507, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
    %510 = reshape(%508, newshape=[7, 3, 4]) /* ty=Tensor[(7, 3, 4), int32] */;
    %511 = @func_5029(%509, %510) /* ty=(Tensor[(7, 3, 4), int32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(7, 3, 4), float32]) */;
    %512 = @func_6224() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */;
    %513 = %512.1;
    %514 = cast(%var_7667, dtype="uint16") /* ty=Tensor[(16, 4, 4), uint16] */;
    %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
    %516 = cast(%513, dtype="uint16") /* ty=Tensor[(16, 4, 4), uint16] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %518 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
    %519 = %506.0;
    %520 = %511.2;
    %521 = bitwise_or(%516, %517) /* ty=Tensor[(16, 4, 4), uint16] */;
    %522 = %518.0;
    (%519, %520, %var_7643, %521, %522)
  };
  %523(%var_7691, %var_7692) /* ty=(Tensor[(12, 9), float32], Tensor[(48), uint64], Tensor[(84), int32], Tensor[(16, 4, 4), uint16], Tensor[(12, 9, 11), int32]) */
}

def @func_8226(%var_8208: Tensor[(896), int8]) -> (Tensor[(5, 5, 15), float32], Tensor[(256), int16], int8, Tensor[(896), int8], Tensor[(12, 9, 11), float32]) {
  %524 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 15), float32] */;
  %525 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %526 = cast(%var_8208, dtype="int8") /* ty=Tensor[(896), int8] */;
  %527 = reshape(%525, newshape=[]) /* ty=int8 */;
  %528 = reshape(%526, newshape=[896]) /* ty=Tensor[(896), int8] */;
  %529 = @func_3757(%527, %528) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(256), int16], Tensor[(896), uint16], Tensor[(4, 16, 14), float32]) */;
  %530 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %531 = cos(%524) /* ty=Tensor[(5, 5, 15), float32] */;
  %532 = %529.1;
  %533 = %530.2;
  (%531, %532, meta[relay.Constant][20] /* ty=int8 */, %var_8208, %533)
}

def @func_1713() -> (Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) {
  %542 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) {
    %534 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %535 = cast(meta[relay.Constant][21] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %536 = %534.0;
    %537 = cast(%536, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %538 = reshape(%535, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %539 = reshape(%537, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %540 = @func_800(%538, %539) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
    %541 = %540.3;
    (%536, %541, meta[relay.Constant][21] /* ty=Tensor[(256), float32] */)
  };
  %542() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */
}

def @func_8812() -> Tensor[(12, 9, 11), float64] {
  @func_8810() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_3362() -> (Tensor[(12, 9, 11), float64],) {
  %543 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %544 = %543.0;
  (%544,)
}

def @func_3956() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %548 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
    %545 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %546 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
    %547 = %545.0;
    (%546, %547)
  };
  %548() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_1308() -> (Tensor[(12, 9, 11), float64],) {
  %549 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %550 = cast(%549, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %551 = sqrt(%550) /* ty=Tensor[(12, 9, 11), float64] */;
  (%551,)
}

def @func_9272() -> (Tensor[(16, 4, 4), float64],) {
  %554 = fn () -> (Tensor[(16, 4, 4), float64],) {
    %552 = @func_9182() /* ty=(Tensor[(16, 4, 4), float64], Tensor[(12, 9), float32]) */;
    %553 = %552.0;
    (%553,)
  };
  %554() /* ty=(Tensor[(16, 4, 4), float64],) */
}

def @func_3656(%var_3655: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), uint16], Tensor[(12, 9), float32]) {
  %566 = fn (%var_3635: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), uint16], Tensor[(12, 9), float32]) {
    %555 = @func_2946() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %556 = %555.0;
    %557 = cast(%556, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %558 = sigmoid(%557) /* ty=Tensor[(12, 9, 11), float64] */;
    %559 = cast(%var_3635, dtype="uint16") /* ty=Tensor[(12, 9, 11), uint16] */;
    %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
    %561 = cast(%558, dtype="uint16") /* ty=Tensor[(12, 9, 11), uint16] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %563 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %564 = bitwise_xor(%561, %562) /* ty=Tensor[(12, 9, 11), uint16] */;
    %565 = %563.0;
    (%564, %565)
  };
  %566(%var_3655) /* ty=(Tensor[(12, 9, 11), uint16], Tensor[(12, 9), float32]) */
}

def @func_10239() -> Tensor[(12, 9), float32] {
  %567 = fn () -> Tensor[(12, 9), float32] {
    @func_8051() /* ty=Tensor[(12, 9), float32] */
  };
  %567() /* ty=Tensor[(12, 9), float32] */
}

def @func_5558() -> (Tensor[(12, 9), float32],) {
  %568 = @func_4722() /* ty=(Tensor[(1188), float64], Tensor[(12, 9), float32]) */;
  %569 = %568.1;
  (%569,)
}

def @func_4301() -> Tensor[(12, 9), float32] {
  %570 = @func_4187() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %570.0
}

def @func_9322(%var_9320: Tensor[(1092), float32]) -> (Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(1092), float32]) {
  @func_9319(%var_9320) /* ty=(Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(1092), float32]) */
}

def @func_631(%var_604: Tensor[(16, 9, 7), float64]) -> (Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) {
  %571 = cast(%var_604, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %572 = log(%571) /* ty=Tensor[(16, 9, 7), float64] */;
  %573 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%572, %573)
}

def @func_4661() -> (Tensor[(12, 9), float32],) {
  @func_4659() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_6811() -> Tensor[(1188), bool] {
  %575 = fn () -> Tensor[(1188), bool] {
    %574 = @func_5829() /* ty=(Tensor[(1188), bool],) */;
    %574.0
  };
  %575() /* ty=Tensor[(1188), bool] */
}

def @func_6862() -> Tensor[(12, 9), float32] {
  @func_6860() /* ty=Tensor[(12, 9), float32] */
}

def @func_4272(%var_4268: Tensor[(12, 9, 11), float64], %var_4269: Tensor[(1092), float32], %var_4270: Tensor[(256), float32], %var_4271: Tensor[(448), int16]) -> (Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) {
  @func_4266(%var_4268, %var_4269, %var_4270, %var_4271) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) */
}

def @func_7129(%var_7127: Tensor[(12, 5, 10), int64], %var_7128: Tensor[(12, 5, 10), int64]) -> (Tensor[(12, 5, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(1, 1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  @func_7125(%var_7127, %var_7128) /* ty=(Tensor[(12, 5, 10), bool], Tensor[(16, 9, 7), float64], Tensor[(1, 1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_865() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %576 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %577 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%576, %577)
}

def @func_1874(%var_1862: Tensor[(14, 4, 8), int16], %var_1863: Tensor[(14, 4, 8), int16]) -> (Tensor[(14, 4, 8), int16],) {
  %578 = cast(%var_1863, dtype="int16") /* ty=Tensor[(14, 4, 8), int16] */;
  %579 = shape_of(%var_1862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%var_1862, dtype="int16") /* ty=Tensor[(14, 4, 8), int16] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %582 = logical_xor(%580, %581) /* ty=Tensor[(14, 4, 8), int16] */;
  (%582,)
}

def @func_2710() -> (Tensor[(12, 9), float32],) {
  %583 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %584 = %583.0;
  (%584,)
}

def @func_8428() -> (Tensor[(12, 9, 11), int32],) {
  @func_8426() /* ty=(Tensor[(12, 9, 11), int32],) */
}

def @func_9440(%var_9388: int8) -> (Tensor[(12, 9), float32], int8, Tensor[(?, 9, 2), bool], Tensor[(12, 9), float32], Tensor[(?, 9, 2), float64]) {
  %585 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %586 = cast(%var_9388, dtype="int8") /* ty=int8 */;
  %587 = reshape(%586, newshape=[]) /* ty=int8 */;
  %588 = @func_1192(%587) /* ty=(Tensor[(1, 9, 2), bool], Tensor[(1, 9, 2), int16]) */;
  %589 = %588.0;
  %590 = cast(%589, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
  %591 = sigmoid(%590) /* ty=Tensor[(1, 9, 2), float32] */;
  %592 = cast(%589, dtype="float64") /* ty=Tensor[(1, 9, 2), float64] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float64") /* ty=Tensor[(1, 9, 2), float64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %596 = mod(%594, %595) /* ty=Tensor[(?, 9, 2), float64] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(?, 9, 2), float32] */;
  %598 = sqrt(%597) /* ty=Tensor[(?, 9, 2), float32] */;
  %599 = cast(%591, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%598, dtype="bool") /* ty=Tensor[(?, 9, 2), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %603 = @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
  %604 = cast(%596, dtype="float64") /* ty=Tensor[(?, 9, 2), float64] */;
  %605 = %585.1;
  %606 = not_equal(%601, %602) /* ty=Tensor[(?, 9, 2), bool] */;
  %607 = %603.2;
  %608 = rsqrt(%604) /* ty=Tensor[(?, 9, 2), float64] */;
  (%605, %var_9388, %606, %607, %608)
}

def @func_4953() -> (Tensor[(4, 15, 7), float32],) {
  %609 = cast(meta[relay.Constant][22] /* ty=Tensor[(4, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 7), float32] */;
  %610 = sinh(%609) /* ty=Tensor[(4, 15, 7), float32] */;
  (%610,)
}

def @func_2501(%var_2499: Tensor[(1092), float32]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) {
  @func_2498(%var_2499) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) */
}

def @func_2122() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) {
  %633 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) {
    %611 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %612 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 132), float64] */, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
    %613 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(9, 132), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %614 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 132), float64] */, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %616 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 132), float64] */, dtype="float64") /* ty=Tensor[(9, 132), float64] */;
    %617 = reshape(%616, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %618 = @func_730(%617) /* ty=(Tensor[(12, 9, 11), float64],) */;
    %619 = %618.0;
    %620 = cast(%619, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
    %621 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(9, 132), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %622 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 132), float64] */, dtype="bool") /* ty=Tensor[(9, 132), bool] */;
    %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %624 = less_equal(%622, %623) /* ty=Tensor[(9, 132), bool] */;
    %625 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 132), float64] */, dtype="uint8") /* ty=Tensor[(9, 132), uint8] */;
    %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(2), int32] */;
    %627 = cast(%624, dtype="uint8") /* ty=Tensor[(9, 132), uint8] */;
    %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %629 = @func_487() /* ty=Tensor[(12, 9), float32] */;
    %630 = %611.1;
    %631 = floor_divide(%614, %615) /* ty=Tensor[(9, 132), float64] */;
    %632 = maximum(%627, %628) /* ty=Tensor[(9, 132), uint8] */;
    (%629, %630, %631, %632)
  };
  %633() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */
}

def @func_3864() -> Tensor[(12, 9, 11), float64] {
  @func_3862() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_5560() -> (Tensor[(12, 9), float32],) {
  @func_5558() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_5448(%var_5446: Tensor[(14, 15, 2), int32], %var_5447: Tensor[(14, 15, 2), int32]) -> (Tensor[(14, 15, 2), int32], Tensor[(18, 66), float64], Tensor[(128, 2), uint32], Tensor[(12, 9, 11), float64]) {
  %652 = fn (%var_5395: Tensor[(14, 15, 2), int32], %var_5396: Tensor[(14, 15, 2), int32]) -> (Tensor[(14, 15, 2), int32], Tensor[(18, 66), float64], Tensor[(128, 2), uint32], Tensor[(12, 9, 11), float64]) {
    %634 = cast(%var_5396, dtype="int32") /* ty=Tensor[(14, 15, 2), int32] */;
    %635 = shape_of(%var_5395, dtype="int32") /* ty=Tensor[(3), int32] */;
    %636 = cast(%var_5395, dtype="int32") /* ty=Tensor[(14, 15, 2), int32] */;
    %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %638 = cast(meta[relay.Constant][26] /* ty=Tensor[(128, 2), float32] */, dtype="float32") /* ty=Tensor[(128, 2), float32] */;
    %639 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 66), float64] */, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
    %640 = reshape(%638, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %641 = reshape(%639, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %642 = @func_800(%640, %641) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
    %643 = %642.3;
    %644 = cast(%643, dtype="uint32") /* ty=Tensor[(16, 4, 4), uint32] */;
    %645 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(128, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %646 = cast(meta[relay.Constant][26] /* ty=Tensor[(128, 2), float32] */, dtype="uint32") /* ty=Tensor[(128, 2), uint32] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %648 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %649 = left_shift(%636, %637) /* ty=Tensor[(14, 15, 2), int32] */;
    %650 = minimum(%646, %647) /* ty=Tensor[(128, 2), uint32] */;
    %651 = %648.0;
    (%649, meta[relay.Constant][25] /* ty=Tensor[(18, 66), float64] */, %650, %651)
  };
  %652(%var_5446, %var_5447) /* ty=(Tensor[(14, 15, 2), int32], Tensor[(18, 66), float64], Tensor[(128, 2), uint32], Tensor[(12, 9, 11), float64]) */
}

def @func_8810() -> Tensor[(12, 9, 11), float64] {
  %653 = @func_3467() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %653.0
}

def @func_9086() -> (Tensor[(12, 9, 11), float32], Tensor[(4, 15, 7), float32]) {
  %654 = @func_3584() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) */;
  %655 = @func_4953() /* ty=(Tensor[(4, 15, 7), float32],) */;
  %656 = %654.1;
  %657 = %655.0;
  (%656, %657)
}

def @func_4560(%var_4558: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) {
  @func_4557(%var_4558) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) */
}

def @func_4879() -> (Tensor[(16, 4, 4), bool],) {
  %665 = fn () -> (Tensor[(16, 4, 4), bool],) {
    %658 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
    %659 = %658.1;
    %660 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
    %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%659, dtype="bool") /* ty=Tensor[(16, 4, 4), bool] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %664 = equal(%662, %663) /* ty=Tensor[(16, 4, 4), bool] */;
    (%664,)
  };
  %665() /* ty=(Tensor[(16, 4, 4), bool],) */
}

def @func_9843() -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  @func_9841() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */
}

def @func_9794() -> (Tensor[(448), int16],) {
  @func_9792() /* ty=(Tensor[(448), int16],) */
}

def @func_4303() -> Tensor[(12, 9), float32] {
  @func_4301() /* ty=Tensor[(12, 9), float32] */
}

def @func_8053() -> Tensor[(12, 9), float32] {
  @func_8051() /* ty=Tensor[(12, 9), float32] */
}

def @func_2290() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) {
  @func_2288() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) */
}

def @func_3048() -> (Tensor[(12, 9), float32],) {
  @func_3046() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_7316() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %680 = fn () -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
    %666 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
    %667 = %666.0;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %669 = reshape(%668, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %670 = @func_730(%669) /* ty=(Tensor[(12, 9, 11), float64],) */;
    %671 = cast(%667, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %672 = cast(meta[relay.Constant][28] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %673 = reshape(%671, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %674 = reshape(%672, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %675 = @func_1386(%673, %674) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %676 = %670.0;
    %677 = %675.3;
    %678 = @func_7040() /* ty=Tensor[(12, 9, 11), float64] */;
    %679 = @func_602() /* ty=Tensor[(12, 9), float32] */;
    (%667, %676, %677, meta[relay.Constant][28] /* ty=Tensor[(1092), float32] */, %678, %679)
  };
  %680() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */
}

def @func_1149() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_4826(%var_4822: Tensor[(48), uint64]) -> (Tensor[(12, 9, 11), float64], Tensor[(48), uint64], Tensor[(48), uint64]) {
  %681 = cast(%var_4822, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %682 = reshape(%681, newshape=[48]) /* ty=Tensor[(48), uint64] */;
  %683 = @func_4617(%682) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) */;
  %684 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  %685 = %683.2;
  (%684, %685, %var_4822)
}

def @func_5277() -> (Tensor[(9, 132), uint8],) {
  %688 = fn () -> (Tensor[(9, 132), uint8],) {
    %686 = @func_2121() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(9, 132), float64], Tensor[(9, 132), uint8]) */;
    %687 = %686.3;
    (%687,)
  };
  %688() /* ty=(Tensor[(9, 132), uint8],) */
}

def @func_1057(%var_1054: Tensor[(1092), float32], %var_1055: Tensor[(1008), float64]) -> (Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) {
  %689 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %691 = cast(%var_1054, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %692 = cast(%var_1055, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %693 = reshape(%691, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), float32] */;
  %694 = reshape(%692, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %695 = @func_890(%693, %694) /* ty=(Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) */;
  %696 = erf(%690) /* ty=Tensor[(12, 9, 11), float32] */;
  %697 = %695.0;
  (%696, %697, %var_1054, %var_1055)
}

def @func_3791() -> Tensor[(12, 9), float32] {
  @func_3789() /* ty=Tensor[(12, 9), float32] */
}

def @func_893(%var_891: Tensor[(12, 13, 7), float32], %var_892: Tensor[(1008), float64]) -> (Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) {
  %709 = fn (%var_870: Tensor[(12, 13, 7), float32], %var_885: Tensor[(1008), float64]) -> (Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) {
    %698 = cast(%var_870, dtype="float32") /* ty=Tensor[(12, 13, 7), float32] */;
    %699 = sin(%698) /* ty=Tensor[(12, 13, 7), float32] */;
    %700 = cast(%699, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
    %701 = shape_of(%var_870, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%var_870, dtype="float64") /* ty=Tensor[(12, 13, 7), float64] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %704 = cast(%var_885, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %705 = reshape(%704, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float64] */;
    %706 = @func_631(%705) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */;
    %707 = power(%702, %703) /* ty=Tensor[(12, 13, 7), float64] */;
    %708 = %706.0;
    (%707, %708, %var_885)
  };
  %709(%var_891, %var_892) /* ty=(Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) */
}

def @func_3968() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  @func_3966() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_9841() -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %710 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
  %711 = @func_8319() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %712 = cast(meta[relay.Constant][29] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %713 = reshape(%712, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %714 = @func_2340(%713) /* ty=(Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) */;
  %715 = %714.1;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %717 = @func_5510() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %718 = %710.0;
  %719 = %711.0;
  %720 = cosh(%716) /* ty=Tensor[(12, 9, 11), float64] */;
  %721 = %717.0;
  (%718, meta[relay.Constant][29] /* ty=Tensor[(1188), float64] */, %719, %720, %721)
}

def @func_3990(%var_3988: Tensor[(2, 11, 16), float64], %var_3989: Tensor[(2, 11, 16), float64]) -> (Tensor[(2, 11, 16), float32], Tensor[(2, 11, 16), float32]) {
  @func_3986(%var_3988, %var_3989) /* ty=(Tensor[(2, 11, 16), float32], Tensor[(2, 11, 16), float32]) */
}

def @func_3023(%var_3021: Tensor[(16, 4, 4), float32]) -> (Tensor[(16, 4, 4), bool],) {
  @func_3020(%var_3021) /* ty=(Tensor[(16, 4, 4), bool],) */
}

def @func_5870(%var_5868: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(256), float32], Tensor[(448), int16]) {
  @func_5867(%var_5868) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(256), float32], Tensor[(448), int16]) */
}

def @func_2673(%var_2671: Tensor[(4, 5, 14), uint32], %var_2672: Tensor[(4, 5, 14), uint32]) -> (Tensor[(4, 5, 14), uint32],) {
  @func_2669(%var_2671, %var_2672) /* ty=(Tensor[(4, 5, 14), uint32],) */
}

def @func_3669(%var_3661: int8, %var_3662: Tensor[(4, 16, 14), int8]) -> Tensor[(4, 16, 14), bool] {
  %722 = cast(%var_3661, dtype="bool") /* ty=bool */;
  %723 = cast(%var_3662, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %724 = greater(%722, %723) /* ty=Tensor[(4, 16, 14), bool] */;
  %725 = cast(%724, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %726 = shape_of(%var_3662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%var_3662, dtype="bool") /* ty=Tensor[(4, 16, 14), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%727, %728) /* ty=Tensor[(4, 16, 14), bool] */
}

def @func_1845() -> (Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) {
  %733 = fn () -> (Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) {
    %729 = @func_1712() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32], Tensor[(256), float32]) */;
    %730 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %731 = %729.1;
    %732 = %730.0;
    (%731, %732)
  };
  %733() /* ty=(Tensor[(16, 4, 4), float32], Tensor[(12, 9), float32]) */
}

def @func_3761(%var_3759: int8, %var_3760: Tensor[(896), int8]) -> (Tensor[(12, 9, 11), float64], Tensor[(256), int16], Tensor[(896), uint16], Tensor[(4, 16, 14), float32]) {
  @func_3757(%var_3759, %var_3760) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(256), int16], Tensor[(896), uint16], Tensor[(4, 16, 14), float32]) */
}

def @func_1061(%var_1059: Tensor[(1092), float32], %var_1060: Tensor[(1008), float64]) -> (Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) {
  @func_1057(%var_1059, %var_1060) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 13, 7), float64], Tensor[(1092), float32], Tensor[(1008), float64]) */
}

def @func_5391() -> Tensor[(12, 9, 11), float32] {
  @func_5389() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_2288() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) {
  %734 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %735 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %736 = %734.0;
  %737 = %735.0;
  (%736, %737)
}

def @func_5379() -> (Tensor[(12, 9, 11), float32],) {
  %740 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %738 = @func_3584() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) */;
    %739 = %738.1;
    (%739,)
  };
  %740() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_8488() -> Tensor[(16, 4, 4), float32] {
  %742 = fn () -> Tensor[(16, 4, 4), float32] {
    %741 = @func_2527() /* ty=(Tensor[(16, 4, 4), float32],) */;
    %741.0
  };
  %742() /* ty=Tensor[(16, 4, 4), float32] */
}

def @func_730(%var_699: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64],) {
  %743 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %744 = cast(%var_699, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%743, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %748 = divide(%746, %747) /* ty=Tensor[(12, 9, 11), float64] */;
  (%748,)
}

def @func_1434() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_3364() -> (Tensor[(12, 9, 11), float64],) {
  @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_1195(%var_1193: int8) -> (Tensor[(1, 9, 2), bool], Tensor[(1, 9, 2), int16]) {
  @func_1192(%var_1193) /* ty=(Tensor[(1, 9, 2), bool], Tensor[(1, 9, 2), int16]) */
}

def @func_5511() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
  %752 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
    %749 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
    %750 = %749.0;
    %751 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
    (%750, %751)
  };
  %752() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */
}

def @func_7792(%var_7790: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  @func_7789(%var_7790) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */
}

def @func_7040() -> Tensor[(12, 9, 11), float64] {
  %753 = @func_4488() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %753.1
}

def @func_8911(%var_8909: Tensor[(448), int16], %var_8910: Tensor[(165), float64]) -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(3, 11, 5), float32], Tensor[(165), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(4, 252), float64]) {
  %770 = fn (%var_8869: Tensor[(448), int16], %var_8877: Tensor[(165), float64]) -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(3, 11, 5), float32], Tensor[(165), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(4, 252), float64]) {
    %754 = @func_8426() /* ty=(Tensor[(12, 9, 11), int32],) */;
    %755 = cast(%var_8869, dtype="int16") /* ty=Tensor[(448), int16] */;
    %756 = reshape(%755, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %757 = @func_7789(%756) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
    %758 = cast(%var_8877, dtype="float64") /* ty=Tensor[(165), float64] */;
    %759 = reshape(%758, newshape=[3, 11, 5]) /* ty=Tensor[(3, 11, 5), float64] */;
    %760 = @func_6688(%759) /* ty=(Tensor[(3, 11, 5), float64], Tensor[(12, 9), float32], Tensor[(3, 11, 5), float32]) */;
    %761 = cast(meta[relay.Constant][30] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %762 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 252), float64] */, dtype="float64") /* ty=Tensor[(4, 252), float64] */;
    %763 = reshape(%761, newshape=[12, 13, 7]) /* ty=Tensor[(12, 13, 7), float32] */;
    %764 = reshape(%762, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
    %765 = @func_890(%763, %764) /* ty=(Tensor[(12, 13, 7), float64], Tensor[(16, 9, 7), float64], Tensor[(1008), float64]) */;
    %766 = %754.0;
    %767 = %757.3;
    %768 = %760.2;
    %769 = %765.2;
    (%766, %767, %var_8869, %768, %var_8877, %769, meta[relay.Constant][30] /* ty=Tensor[(1092), float32] */, meta[relay.Constant][31] /* ty=Tensor[(4, 252), float64] */)
  };
  %770(%var_8909, %var_8910) /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(3, 11, 5), float32], Tensor[(165), float64], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(4, 252), float64]) */
}

def @func_8229(%var_8227: Tensor[(896), int8]) -> (Tensor[(5, 5, 15), float32], Tensor[(256), int16], int8, Tensor[(896), int8], Tensor[(12, 9, 11), float32]) {
  @func_8226(%var_8227) /* ty=(Tensor[(5, 5, 15), float32], Tensor[(256), int16], int8, Tensor[(896), int8], Tensor[(12, 9, 11), float32]) */
}

def @func_5158() -> (Tensor[(1188), float32],) {
  %784 = fn () -> (Tensor[(1188), float32],) {
    %771 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %772 = %771.0;
    %773 = cast(%772, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %774 = reshape(%773, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %775 = @func_2340(%774) /* ty=(Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) */;
    %776 = %775.2;
    %777 = cast(%772, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
    %778 = shape_of(%776, dtype="int32") /* ty=Tensor[(1), int32] */;
    %779 = cast(%776, dtype="bool") /* ty=Tensor[(1188), bool] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?), bool] */;
    %781 = less(%779, %780) /* ty=Tensor[(1188), bool] */;
    %782 = cast(%781, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %783 = atanh(%782) /* ty=Tensor[(1188), float32] */;
    (%783,)
  };
  %784() /* ty=(Tensor[(1188), float32],) */
}

def @func_803(%var_801: Tensor[(16, 4, 4), float32], %var_802: Tensor[(1188), float64]) -> (Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) {
  %801 = fn (%var_744: Tensor[(16, 4, 4), float32], %var_751: Tensor[(1188), float64]) -> (Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) {
    %785 = cast(%var_751, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %786 = reshape(%785, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %787 = @func_730(%786) /* ty=(Tensor[(12, 9, 11), float64],) */;
    %788 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
    %789 = shape_of(%var_744, dtype="int32") /* ty=Tensor[(3), int32] */;
    %790 = cast(%var_744, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %792 = power(%790, %791) /* ty=Tensor[(16, 4, 4), float32] */;
    %793 = cast(%792, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
    %794 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(16, 4, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 4, 4), float32] */, dtype="int8") /* ty=Tensor[(16, 4, 4), int8] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %797 = cast(%792, dtype="float32") /* ty=Tensor[(16, 4, 4), float32] */;
    %798 = %787.0;
    %799 = logical_xor(%795, %796) /* ty=Tensor[(16, 4, 4), int8] */;
    %800 = acos(%797) /* ty=Tensor[(16, 4, 4), float32] */;
    (%798, %var_751, %799, %800)
  };
  %801(%var_801, %var_802) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */
}

def @func_1648() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) {
  %810 = fn () -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) {
    %802 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %803 = %802.1;
    %804 = cast(%803, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %805 = cast(meta[relay.Constant][33] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %806 = reshape(%804, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %807 = reshape(%805, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %808 = @func_1386(%806, %807) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %809 = %808.0;
    (%803, %809, meta[relay.Constant][33] /* ty=Tensor[(1092), float32] */)
  };
  %810() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */
}

def @func_8732(%var_8730: Tensor[(448), int16], %var_8731: Tensor[(182, 6), float32]) -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(16, 4, 4), bool], Tensor[(256), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9), float32], Tensor[(182, 6), float32], Tensor[(256), float32]) {
  %839 = fn (%var_8689: Tensor[(448), int16], %var_8704: Tensor[(182, 6), float32]) -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(16, 4, 4), bool], Tensor[(256), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9), float32], Tensor[(182, 6), float32], Tensor[(256), float32]) {
    %811 = @func_5998() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %812 = @func_7188() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
    %813 = cast(meta[relay.Constant][34] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %814 = reshape(%813, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %815 = @func_3020(%814) /* ty=(Tensor[(16, 4, 4), bool],) */;
    %816 = cast(%var_8689, dtype="int16") /* ty=Tensor[(448), int16] */;
    %817 = reshape(%816, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %818 = @func_1958(%817) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
    %819 = %811.0;
    %820 = cast(%819, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %821 = cast(%var_8704, dtype="float32") /* ty=Tensor[(182, 6), float32] */;
    %822 = reshape(%820, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %823 = reshape(%821, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %824 = @func_1386(%822, %823) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %825 = cast(%819, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %826 = cast(%var_8704, dtype="float32") /* ty=Tensor[(182, 6), float32] */;
    %827 = cast(meta[relay.Constant][34] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %828 = cast(%var_8689, dtype="int16") /* ty=Tensor[(448), int16] */;
    %829 = reshape(%825, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %830 = reshape(%826, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
    %831 = reshape(%827, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %832 = reshape(%828, newshape=[448]) /* ty=Tensor[(448), int16] */;
    %833 = @func_4266(%829, %830, %831, %832) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) */;
    %834 = %812.2;
    %835 = %815.0;
    %836 = %818.0;
    %837 = %824.5;
    %838 = %833.5;
    (%819, %834, %835, meta[relay.Constant][34] /* ty=Tensor[(256), float32] */, %836, %var_8689, %837, %var_8704, %838)
  };
  %839(%var_8730, %var_8731) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(16, 4, 4), bool], Tensor[(256), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9), float32], Tensor[(182, 6), float32], Tensor[(256), float32]) */
}

def @func_1147() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %840 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  %841 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  %842 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  (%840, %841, %842)
}

def @func_8838(%var_8837: Tensor[(4, 2, 13), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(1092), float32]) {
  %847 = fn (%var_8815: Tensor[(4, 2, 13), float64]) -> (Tensor[(4, 2, 13), float64], Tensor[(1092), float32]) {
    %843 = cast(%var_8815, dtype="float64") /* ty=Tensor[(4, 2, 13), float64] */;
    %844 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
    %845 = acosh(%843) /* ty=Tensor[(4, 2, 13), float64] */;
    %846 = %844.2;
    (%845, %846)
  };
  %847(%var_8837) /* ty=(Tensor[(4, 2, 13), float64], Tensor[(1092), float32]) */
}

def @func_4557(%var_4550: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) {
  %848 = @func_3955() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %849 = @func_2710() /* ty=(Tensor[(12, 9), float32],) */;
  %850 = cast(%var_4550, dtype="int16") /* ty=Tensor[(448), int16] */;
  %851 = reshape(%850, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %852 = @func_1958(%851) /* ty=(Tensor[(12, 9), float32], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */;
  %853 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
  %854 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %855 = %848.1;
  %856 = %849.0;
  %857 = @func_4415() /* ty=Tensor[(12, 9, 11), float64] */;
  %858 = %852.0;
  %859 = %853.0;
  (%854, %855, %856, %857, %858, %var_4550, %859)
}

def @func_1856() -> (Tensor[(12, 9, 11), float64],) {
  %860 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  (%860,)
}

def @func_1192(%var_1166: int8) -> (Tensor[(1, 9, 2), bool], Tensor[(1, 9, 2), int16]) {
  %861 = cast(%var_1166, dtype="bool") /* ty=bool */;
  %862 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 9, 2), int8] */, dtype="bool") /* ty=Tensor[(1, 9, 2), bool] */;
  %863 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 9, 2), int8] */, dtype="int16") /* ty=Tensor[(1, 9, 2), int16] */;
  %864 = cast(%var_1166, dtype="int16") /* ty=int16 */;
  %865 = greater(%861, %862) /* ty=Tensor[(1, 9, 2), bool] */;
  %866 = bitwise_and(%863, %864) /* ty=Tensor[(1, 9, 2), int16] */;
  (%865, %866)
}

def @func_2448() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), int32]) {
  %873 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), int32]) {
    %867 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %868 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
    %869 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
    %870 = %867.0;
    %871 = %868.0;
    %872 = %869.0;
    (%870, %871, %872)
  };
  %873() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), int32]) */
}

def @func_4488() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %874 = @func_4047() /* ty=(Tensor[(12, 9), float32], Tensor[(2, 224), int16], Tensor[(256), float32], Tensor[(448), int16]) */;
  %875 = @func_3415() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32]) */;
  %876 = %874.0;
  %877 = %875.0;
  (%876, %877)
}

def @func_488() -> Tensor[(12, 9), float32] {
  %879 = fn () -> Tensor[(12, 9), float32] {
    %878 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %878.0
  };
  %879() /* ty=Tensor[(12, 9), float32] */
}

def @func_4490() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  @func_4488() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_5644() -> (Tensor[(12, 9, 11), float64], Tensor[(1188), bool], Tensor[(12, 9), float32]) {
  %880 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %881 = %880.1;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %883 = reshape(%882, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %884 = @func_2640(%883) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), bool]) */;
  %885 = %884.1;
  %886 = @func_4301() /* ty=Tensor[(12, 9), float32] */;
  (%881, %885, %886)
}

def @func_6775() -> (Tensor[(4, 7, 10), float64], Tensor[(4, 7, 10), float64], Tensor[(16, 4, 4), float32]) {
  @func_6773() /* ty=(Tensor[(4, 7, 10), float64], Tensor[(4, 7, 10), float64], Tensor[(16, 4, 4), float32]) */
}

def @func_3499() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(4, 252), float64]) {
  %887 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %888 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %889 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 252), float64] */, dtype="float64") /* ty=Tensor[(4, 252), float64] */;
  %890 = reshape(%889, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float64] */;
  %891 = @func_631(%890) /* ty=(Tensor[(16, 9, 7), float64], Tensor[(12, 9), float32]) */;
  %892 = %887.0;
  %893 = %888.0;
  %894 = %891.1;
  (%892, %893, %894, meta[relay.Constant][36] /* ty=Tensor[(4, 252), float64] */)
}

def @func_1310() -> (Tensor[(12, 9, 11), float64],) {
  @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_1509() -> Tensor[(12, 9, 11), float32] {
  %905 = fn () -> Tensor[(12, 9, 11), float32] {
    %895 = @func_1468() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */;
    %896 = %895.0;
    %897 = cast(%896, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %898 = reshape(%897, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
    %899 = @func_730(%898) /* ty=(Tensor[(12, 9, 11), float64],) */;
    %900 = %899.0;
    %901 = cast(%896, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
    %903 = cast(%900, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%903, %904) /* ty=Tensor[(12, 9, 11), float32] */
  };
  %905() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_8426() -> (Tensor[(12, 9, 11), int32],) {
  %906 = @func_2447() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), int32]) */;
  %907 = %906.2;
  (%907,)
}

def @func_3501() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(4, 252), float64]) {
  @func_3499() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(4, 252), float64]) */
}

def @func_1878(%var_1876: Tensor[(14, 4, 8), int16], %var_1877: Tensor[(14, 4, 8), int16]) -> (Tensor[(14, 4, 8), int16],) {
  @func_1874(%var_1876, %var_1877) /* ty=(Tensor[(14, 4, 8), int16],) */
}

def @func_7928(%var_7926: Tensor[(256), float32], %var_7927: Tensor[(1188), float64]) -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(256), float32], Tensor[(1188), float64]) {
  %916 = fn (%var_7922: Tensor[(256), float32], %var_7923: Tensor[(1188), float64]) -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(256), float32], Tensor[(1188), float64]) {
    %908 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
    %909 = cast(%var_7922, dtype="float32") /* ty=Tensor[(256), float32] */;
    %910 = cast(%var_7923, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %911 = reshape(%909, newshape=[16, 4, 4]) /* ty=Tensor[(16, 4, 4), float32] */;
    %912 = reshape(%910, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %913 = @func_800(%911, %912) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), float64], Tensor[(16, 4, 4), int8], Tensor[(16, 4, 4), float32]) */;
    %914 = %908.0;
    %915 = %913.1;
    (%914, %915, %var_7922, %var_7923)
  };
  %916(%var_7926, %var_7927) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(256), float32], Tensor[(1188), float64]) */
}

def @func_9162() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), bool]) {
  @func_9160() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), bool]) */
}

def @func_3032(%var_3031: Tensor[(3, 2, 8), uint64]) -> Tensor[(3, 2, 8), bool] {
  %921 = fn (%var_3025: Tensor[(3, 2, 8), uint64]) -> Tensor[(3, 2, 8), bool] {
    %917 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 2, 8), uint64] */, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
    %918 = shape_of(%var_3025, dtype="int32") /* ty=Tensor[(3), int32] */;
    %919 = cast(%var_3025, dtype="bool") /* ty=Tensor[(3, 2, 8), bool] */;
    %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%919, %920) /* ty=Tensor[(3, 2, 8), bool] */
  };
  %921(%var_3031) /* ty=Tensor[(3, 2, 8), bool] */
}

def @func_3223() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), int32]) {
  %928 = fn () -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), int32]) {
    %922 = @func_2049() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
    %923 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
    %924 = @func_1990() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */;
    %925 = %922.0;
    %926 = %923.0;
    %927 = %924.0;
    (%925, %926, %927)
  };
  %928() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), int32]) */
}

def @func_9639() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(9, 132), bool], Tensor[(9, 132), bool]) {
  @func_9637() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(448), int16], Tensor[(9, 132), bool], Tensor[(9, 132), bool]) */
}

def @func_7359() -> Tensor[(9, 8, 7), bool] {
  @func_7357() /* ty=Tensor[(9, 8, 7), bool] */
}

def @func_2947() -> (Tensor[(12, 9, 11), float64],) {
  %931 = fn () -> (Tensor[(12, 9, 11), float64],) {
    %929 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %930 = %929.1;
    (%930,)
  };
  %931() /* ty=(Tensor[(12, 9, 11), float64],) */
}

def @func_5646() -> (Tensor[(12, 9, 11), float64], Tensor[(1188), bool], Tensor[(12, 9), float32]) {
  @func_5644() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(1188), bool], Tensor[(12, 9), float32]) */
}

def @func_5358() -> Tensor[(12, 9), float32] {
  @func_5356() /* ty=Tensor[(12, 9), float32] */
}

def @func_6954() -> (Tensor[(12, 9), float32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(1, 1188), float64]) {
  @func_6952() /* ty=(Tensor[(12, 9), float32], Tensor[(16, 4, 4), float32], Tensor[(16, 4, 4), float32], Tensor[(1, 1188), float64]) */
}

def @func_6127() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %939 = fn () -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
    %932 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %933 = @func_4782() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */;
    %934 = @func_4681() /* ty=(Tensor[(12, 9), float32],) */;
    %935 = %932.0;
    %936 = %933.0;
    %937 = %934.0;
    %938 = @func_602() /* ty=Tensor[(12, 9), float32] */;
    (%935, %936, %937, %938)
  };
  %939() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_9221() -> Tensor[(12, 9), float32] {
  %941 = fn () -> Tensor[(12, 9), float32] {
    %940 = @func_7600() /* ty=(Tensor[(12, 9), float32],) */;
    %940.0
  };
  %941() /* ty=Tensor[(12, 9), float32] */
}

def @func_4188() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
  %946 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) {
    %942 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %943 = @func_2288() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), float64]) */;
    %944 = %942.0;
    %945 = %943.1;
    (%944, %945)
  };
  %946() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */
}

def @func_3248(%var_3246: Tensor[(10, 15, 4), bool], %var_3247: Tensor[(10, 15, 4), bool]) -> Tensor[(10, 15, 4), bool] {
  @func_3244(%var_3246, %var_3247) /* ty=Tensor[(10, 15, 4), bool] */
}

def @func_4683() -> (Tensor[(12, 9), float32],) {
  @func_4681() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_414() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) {
  %947 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 9), float32] */;
  %948 = cast(meta[relay.Constant][39] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %949 = reshape(%948, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %950 = @func_192(%949) /* ty=(Tensor[(12, 9, 11), float64],) */;
  %951 = log2(%947) /* ty=Tensor[(12, 9), float32] */;
  %952 = %950.0;
  (%951, %952, meta[relay.Constant][39] /* ty=Tensor[(1188), float64] */)
}

def @func_4619(%var_4618: Tensor[(48), uint64]) -> (Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) {
  %960 = fn (%var_4612: Tensor[(48), uint64]) -> (Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) {
    %953 = @func_3362() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %954 = cast(%var_4612, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %955 = reshape(%954, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), uint64] */;
    %956 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
    %957 = %953.0;
    %958 = @func_3030(%955) /* ty=Tensor[(3, 2, 8), bool] */;
    %959 = %956.0;
    (%957, %958, %var_4612, %959)
  };
  %960(%var_4618) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(12, 9), float32]) */
}

def @func_5945(%var_5944: Tensor[(15, 2, 13), float64]) -> (Tensor[(15, 2, 13), float64], Tensor[(12, 9, 11), float64]) {
  %965 = fn (%var_5933: Tensor[(15, 2, 13), float64]) -> (Tensor[(15, 2, 13), float64], Tensor[(12, 9, 11), float64]) {
    %961 = cast(%var_5933, dtype="float64") /* ty=Tensor[(15, 2, 13), float64] */;
    %962 = @func_4187() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
    %963 = acosh(%961) /* ty=Tensor[(15, 2, 13), float64] */;
    %964 = %962.1;
    (%963, %964)
  };
  %965(%var_5944) /* ty=(Tensor[(15, 2, 13), float64], Tensor[(12, 9, 11), float64]) */
}

def @func_3046() -> (Tensor[(12, 9), float32],) {
  %966 = @func_1432() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %967 = %966.1;
  (%967,)
}

def @func_6517() -> (Tensor[(12, 9), float32],) {
  @func_6515() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_7357() -> Tensor[(9, 8, 7), bool] {
  %968 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %969 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 8, 7), bool] */, dtype="bool") /* ty=Tensor[(9, 8, 7), bool] */;
  logical_or(%968, %969) /* ty=Tensor[(9, 8, 7), bool] */
}

def @func_7789(%var_7746: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  %970 = @func_2796() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %971 = cast(meta[relay.Constant][41] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %972 = reshape(%971, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %973 = @func_4557(%972) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) */;
  %974 = cast(%var_7746, dtype="int16") /* ty=Tensor[(448), int16] */;
  %975 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(448), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %976 = cast(meta[relay.Constant][41] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?), int16] */;
  %978 = cast(meta[relay.Constant][41] /* ty=Tensor[(448), int16] */, dtype="int16") /* ty=Tensor[(448), int16] */;
  %979 = reshape(%978, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %980 = @func_4557(%979) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(448), int16], Tensor[(12, 9, 11), bool]) */;
  %981 = @func_6617() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %982 = %970.3;
  %983 = %973.2;
  %984 = subtract(%976, %977) /* ty=Tensor[(448), int16] */;
  %985 = %980.3;
  %986 = %981.0;
  (%982, %983, %984, %985, %986)
}

def @func_2342(%var_2341: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) {
  %1000 = fn (%var_2293: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) {
    %987 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
    %988 = cast(%var_2293, dtype="int8") /* ty=Tensor[(12, 9, 11), int8] */;
    %989 = shape_of(%987, dtype="int32") /* ty=Tensor[(3), int32] */;
    %990 = cast(%987, dtype="int8") /* ty=Tensor[(12, 9, 11), int8] */;
    %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %992 = cast(%var_2293, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %993 = shape_of(%987, dtype="int32") /* ty=Tensor[(3), int32] */;
    %994 = cast(%987, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %996 = @func_1803() /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64]) */;
    %997 = maximum(%990, %991) /* ty=Tensor[(12, 9, 11), int8] */;
    %998 = multiply(%994, %995) /* ty=Tensor[(12, 9, 11), float32] */;
    %999 = %996.1;
    (%997, %998, %999)
  };
  %1000(%var_2341) /* ty=(Tensor[(12, 9, 11), int8], Tensor[(12, 9, 11), float32], Tensor[(1188), float64]) */
}

def @func_7834() -> Tensor[(12, 9, 11), float64] {
  %1002 = fn () -> Tensor[(12, 9, 11), float64] {
    %1001 = @func_1147() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
    %1001.0
  };
  %1002() /* ty=Tensor[(12, 9, 11), float64] */
}

def @func_8051() -> Tensor[(12, 9), float32] {
  %1003 = @func_6515() /* ty=(Tensor[(12, 9), float32],) */;
  %1003.0
}

def @func_4784() -> (Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) {
  @func_4782() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9), float32]) */
}

def @func_10019() -> (Tensor[(12, 9), float32],) {
  @func_10017() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_10017() -> (Tensor[(12, 9), float32],) {
  %1004 = @func_487() /* ty=Tensor[(12, 9), float32] */;
  (%1004,)
}

def @func_9943() -> (Tensor[(12, 9), float32],) {
  @func_9941() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_10086(%var_10085: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
  %1015 = fn (%var_10070: Tensor[(448), int16]) -> (Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) {
    %1005 = @func_4361() /* ty=(Tensor[(12, 9), float32],) */;
    %1006 = @func_414() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64], Tensor[(1188), float64]) */;
    %1007 = cast(%var_10070, dtype="int16") /* ty=Tensor[(448), int16] */;
    %1008 = cast(%var_10070, dtype="int16") /* ty=Tensor[(448), int16] */;
    %1009 = reshape(%1007, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
    %1010 = reshape(%1008, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), int16] */;
    %1011 = @func_1874(%1009, %1010) /* ty=(Tensor[(14, 4, 8), int16],) */;
    %1012 = %1005.0;
    %1013 = %1006.2;
    %1014 = %1011.0;
    (%1012, %1013, %1014, %var_10070)
  };
  %1015(%var_10085) /* ty=(Tensor[(12, 9), float32], Tensor[(1188), float64], Tensor[(14, 4, 8), int16], Tensor[(448), int16]) */
}

def @func_3244(%var_3231: Tensor[(10, 15, 4), bool], %var_3232: Tensor[(10, 15, 4), bool]) -> Tensor[(10, 15, 4), bool] {
  %1016 = cast(%var_3232, dtype="bool") /* ty=Tensor[(10, 15, 4), bool] */;
  %1017 = shape_of(%var_3231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%var_3231, dtype="bool") /* ty=Tensor[(10, 15, 4), bool] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1018, %1019) /* ty=Tensor[(10, 15, 4), bool] */
}

def @func_1469() -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) {
  %1029 = fn () -> (Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) {
    %1020 = @func_1308() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %1021 = %1020.0;
    %1022 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 9, 11), float64] */, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
    %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1024 = cast(%1021, dtype="int32") /* ty=Tensor[(12, 9, 11), int32] */;
    %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1026 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 9, 11), float64] */, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %1027 = left_shift(%1024, %1025) /* ty=Tensor[(12, 9, 11), int32] */;
    %1028 = log2(%1026) /* ty=Tensor[(12, 9, 11), float32] */;
    (%1027, %1028)
  };
  %1029() /* ty=(Tensor[(12, 9, 11), int32], Tensor[(12, 9, 11), float32]) */
}

def @func_5991() -> (Tensor[(12, 9, 11), float64],) {
  %1030 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
  %1031 = %1030.0;
  (%1031,)
}

def @main(%var_10407: Tensor[(11, 15, 4), float64]) -> Tensor[(11, 15, 4), float64] {
  %1032 = cast(%var_10407, dtype="float64") /* ty=Tensor[(11, 15, 4), float64] */;
  cos(%1032) /* ty=Tensor[(11, 15, 4), float64] */
}

def @func_8022() -> (Tensor[(12, 9, 11), float32],) {
  %1035 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %1033 = @func_6224() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */;
    %1034 = %1033.0;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_6534() -> (Tensor[(12, 9), float32],) {
  %1038 = fn () -> (Tensor[(12, 9), float32],) {
    %1036 = @func_2710() /* ty=(Tensor[(12, 9), float32],) */;
    %1037 = %1036.0;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(12, 9), float32],) */
}

def @func_10359(%var_10357: Tensor[(18, 66), float64], %var_10358: Tensor[(182, 6), float32]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(18, 66), float64], Tensor[(182, 6), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  @func_10355(%var_10357, %var_10358) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(18, 66), float64], Tensor[(182, 6), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) */
}

def @func_8320() -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
  %1045 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) {
    %1039 = @func_4659() /* ty=(Tensor[(12, 9), float32],) */;
    %1040 = @func_1856() /* ty=(Tensor[(12, 9, 11), float64],) */;
    %1041 = %1040.0;
    %1042 = cast(%1041, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %1043 = %1039.0;
    %1044 = acosh(%1042) /* ty=Tensor[(12, 9, 11), float32] */;
    (%1043, %1044)
  };
  %1045() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */
}

def @func_6225() -> (Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) {
  %1052 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) {
    %1046 = @func_2969() /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float64]) */;
    %1047 = %1046.0;
    %1048 = cast(%1047, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
    %1049 = @func_2527() /* ty=(Tensor[(16, 4, 4), float32],) */;
    %1050 = atanh(%1048) /* ty=Tensor[(12, 9, 11), float32] */;
    %1051 = %1049.0;
    (%1050, %1051)
  };
  %1052() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(16, 4, 4), float32]) */
}

def @func_9716() -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
  %1056 = fn () -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32]) {
    %1053 = @func_6617() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
    %1054 = %1053.1;
    %1055 = @func_8433() /* ty=Tensor[(12, 9), float32] */;
    (%1054, %1055)
  };
  %1056() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */
}

def @func_5998() -> (Tensor[(12, 9, 11), float64],) {
  %1057 = @func_431() /* ty=Tensor[(12, 9, 11), float64] */;
  (%1057,)
}

def @func_4266(%var_4236: Tensor[(12, 9, 11), float64], %var_4243: Tensor[(1092), float32], %var_4260: Tensor[(256), float32], %var_4261: Tensor[(448), int16]) -> (Tensor[(12, 9, 11), bool], Tensor[(1092), float32], Tensor[(12, 9, 11), float32], Tensor[(1092), float64], Tensor[(256), float32], Tensor[(256), float32], Tensor[(448), int16]) {
  %1058 = @func_1647() /* ty=(Tensor[(12, 9, 11), float64], Tensor[(12, 9, 11), bool], Tensor[(1092), float32]) */;
  %1059 = %1058.0;
  %1060 = cast(%var_4236, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%1059, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1064 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1065 = cast(%var_4243, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %1066 = reshape(%1065, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %1067 = @func_2498(%1066) /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(1, 448), int16], Tensor[(12, 9, 11), float32], Tensor[(1008), float64], Tensor[(1092), float32], Tensor[(1, 1008), float64]) */;
  %1068 = %1067.5;
  %1069 = cast(%1068, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %1070 = cast(%var_4260, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1071 = cast(%var_4261, dtype="int16") /* ty=Tensor[(448), int16] */;
  %1072 = reshape(%1070, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %1073 = reshape(%1071, newshape=[448]) /* ty=Tensor[(448), int16] */;
  %1074 = @func_3902(%1072, %1073) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(16, 4, 4), float64], Tensor[(256), float32], Tensor[(448), int16], Tensor[(12, 9), float32]) */;
  %1075 = less_equal(%1062, %1063) /* ty=Tensor[(12, 9, 11), bool] */;
  %1076 = %1064.0;
  %1077 = asin(%1069) /* ty=Tensor[(1092), float64] */;
  %1078 = %1074.2;
  (%1075, %var_4243, %1076, %1077, %1078, %var_4260, %var_4261)
}

def @func_5032(%var_5030: Tensor[(7, 3, 4), int32], %var_5031: Tensor[(7, 3, 4), int32]) -> (Tensor[(7, 3, 4), int32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(7, 3, 4), float32]) {
  %1089 = fn (%var_5013: Tensor[(7, 3, 4), int32], %var_5014: Tensor[(7, 3, 4), int32]) -> (Tensor[(7, 3, 4), int32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(7, 3, 4), float32]) {
    %1079 = cast(%var_5014, dtype="int32") /* ty=Tensor[(7, 3, 4), int32] */;
    %1080 = shape_of(%var_5013, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1081 = cast(%var_5013, dtype="int32") /* ty=Tensor[(7, 3, 4), int32] */;
    %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1083 = cast(meta[relay.Constant][43] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %1084 = reshape(%1083, newshape=[3, 2, 8]) /* ty=Tensor[(3, 2, 8), uint64] */;
    %1085 = cast(%var_5013, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %1086 = right_shift(%1081, %1082) /* ty=Tensor[(7, 3, 4), int32] */;
    %1087 = @func_3030(%1084) /* ty=Tensor[(3, 2, 8), bool] */;
    %1088 = sigmoid(%1085) /* ty=Tensor[(7, 3, 4), float32] */;
    (%1086, %1087, meta[relay.Constant][43] /* ty=Tensor[(48), uint64] */, %1088)
  };
  %1089(%var_5030, %var_5031) /* ty=(Tensor[(7, 3, 4), int32], Tensor[(3, 2, 8), bool], Tensor[(48), uint64], Tensor[(7, 3, 4), float32]) */
}

def @func_3584() -> (Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32]) {
  %1090 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  %1091 = @func_1508() /* ty=Tensor[(12, 9, 11), float32] */;
  %1092 = cast(%1091, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %1093 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%1090, dtype="bool") /* ty=Tensor[(12, 9, 11), bool] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1096 = @func_1593() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1097 = greater(%1094, %1095) /* ty=Tensor[(12, 9, 11), bool] */;
  %1098 = %1096.0;
  (%1097, %1098)
}

def @func_10355(%var_10318: Tensor[(18, 66), float64], %var_10319: Tensor[(182, 6), float32]) -> (Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(12, 9), float32], Tensor[(18, 66), float64], Tensor[(182, 6), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9), float32]) {
  %1099 = cast(%var_10318, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %1100 = cast(%var_10319, dtype="float32") /* ty=Tensor[(182, 6), float32] */;
  %1101 = reshape(%1099, newshape=[12, 9, 11]) /* ty=Tensor[(12, 9, 11), float64] */;
  %1102 = reshape(%1100, newshape=[1092]) /* ty=Tensor[(1092), float32] */;
  %1103 = @func_1386(%1101, %1102) /* ty=(Tensor[(12, 9, 11), bool], Tensor[(12, 9, 11), float32], Tensor[(1092), float32], Tensor[(1008), float64], Tensor[(12, 9), float32], Tensor[(12, 9), float32]) */;
  %1104 = @func_8319() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %1105 = @func_8974() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float32]) */;
  %1106 = @func_6175() /* ty=(Tensor[(12, 9), float32], Tensor[(12, 9, 11), float64]) */;
  %1107 = @func_3789() /* ty=Tensor[(12, 9), float32] */;
  %1108 = @func_602() /* ty=Tensor[(12, 9), float32] */;
  %1109 = %1103.5;
  %1110 = %1104.1;
  %1111 = %1105.1;
  %1112 = %1106.0;
  (%1107, %1108, %1109, %var_10318, %var_10319, %1110, %1111, %1112)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen99/build/output.py:3361: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen99/build/output.py", line 3366, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(660) tvmgen_default_fused_cos_kernel0(double* __restrict__ T_cos, double* __restrict__ placeholder) {
  T_cos[(((int)threadIdx.x))] = cos(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


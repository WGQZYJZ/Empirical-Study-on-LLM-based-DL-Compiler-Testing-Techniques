import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_184 = relay.var("var_184", dtype = "float64", shape = (12, 9, 11))#candidate|184|(12, 9, 11)|var|float64
uop_185 = relay.asinh(var_184.astype('float64')) # shape=(12, 9, 11)
output = relay.Tuple([uop_185,])
output2 = relay.Tuple([uop_185,])
func_192 = relay.Function([var_184,], output)
mod['func_192'] = func_192
mod = relay.transform.InferType()(mod)
var_193 = relay.var("var_193", dtype = "float64", shape = (12, 9, 11))#candidate|193|(12, 9, 11)|var|float64
output = func_192(var_193)
func_194 = relay.Function([var_193], output)
mutated_mod['func_194'] = func_194
mutated_mod = relay.transform.InferType()(mutated_mod)
const_385 = relay.const([[9.491503,-5.127703,-4.100651,-2.262606,8.916271,-0.619086,7.633620,3.593941,-7.530403],[-7.110058,8.852103,5.476288,8.543294,5.626281,5.180418,1.250585,4.289989,-8.912099],[-6.469220,-5.647030,6.886098,-2.252791,0.292758,6.040075,-6.238969,2.592750,3.257407],[7.799753,-7.637945,7.527887,6.584622,-0.025996,-0.613469,-3.460614,7.300056,-3.283964],[-0.617433,6.205849,2.300732,7.244420,-6.771691,8.487017,5.995640,3.798323,0.052314],[-9.432883,1.664849,-7.292769,4.569126,3.754926,7.377748,4.352516,-0.309246,-4.648723],[-6.067215,-5.391567,-1.607093,-0.767476,-7.961940,2.965508,-0.271005,-9.090324,-0.257371],[8.809667,2.091457,-6.327199,7.309463,-2.308350,6.071861,1.081415,8.423253,-6.843406],[6.101507,0.115327,-9.848714,-6.213124,-1.605792,9.696458,7.986378,0.995198,7.279802],[0.818807,3.655182,-3.969873,-4.125463,-9.612311,8.995863,8.577227,5.258802,-2.917517],[3.905305,-7.446273,2.547669,-0.415099,4.328619,-3.144332,-6.114817,6.229528,4.006624],[-4.823142,8.629230,6.936357,7.960128,3.763329,-5.129572,7.412072,-4.261189,9.457591]], dtype = "float32")#candidate|385|(12, 9)|const|float32
uop_386 = relay.log2(const_385.astype('float32')) # shape=(12, 9)
func_192_call = mod.get_global_var('func_192')
func_194_call = mutated_mod.get_global_var('func_194')
const_408 = relay.const([-5.991568,-6.289465,-9.284685,7.816946,-4.230588,1.634191,7.439975,-1.368665,0.322692,9.400637,-2.105197,-2.761646,8.682349,2.822255,1.820411,6.784573,-4.673960,-5.403701,-2.499546,2.896289,-2.758061,-2.994644,4.695286,-4.442098,-7.714354,8.200946,8.451559,-1.565650,-7.832854,-0.727243,-9.872060,8.499726,5.149655,2.289027,0.894297,5.752512,0.260466,4.887270,-4.166599,6.899988,-2.990621,5.441801,1.208336,-1.987790,5.172548,7.691736,-7.529345,-2.810709,5.974164,-8.223716,-7.978193,-6.561979,1.731669,8.213431,4.997693,-9.271399,1.173157,-6.411979,7.086425,-0.585735,4.058419,8.140486,-4.471931,0.351601,4.411233,-3.858347,3.575263,-3.135071,-2.078776,-9.887198,-8.612490,1.013258,-8.810665,-2.989163,7.482477,-7.113774,5.564649,-3.844553,5.186414,4.302267,7.013534,3.338376,-7.037304,-7.026931,9.613124,-2.117729,1.708430,4.737063,2.441742,-5.318397,-6.231535,0.447450,-5.433375,4.490438,-9.838380,-2.617728,-9.262414,-1.484392,4.259637,0.989136,-4.007115,4.820892,-3.170954,6.501631,-4.276900,-6.995766,4.534622,-5.050537,3.345209,3.116277,-3.671143,-1.978943,5.249213,1.152680,2.535125,5.019657,4.377807,5.563245,3.891118,6.113471,-5.942674,-5.245872,-4.763212,9.643741,-4.627941,4.292097,9.670482,2.086630,-0.813916,2.644137,-2.462055,8.091593,9.136751,7.796606,-6.540527,0.538114,-6.331909,-1.400202,-7.953290,-5.882496,-7.612000,-2.650152,5.705961,8.342769,-2.088062,9.075775,9.633604,-0.781361,-7.973763,-3.073307,3.131330,3.701370,1.810998,-5.644699,-4.665206,7.747711,-8.219846,-3.801429,6.169663,2.909113,-3.975536,-8.554935,-6.988993,0.462224,-0.813591,5.984554,1.616369,3.250163,-7.351449,-9.065478,9.818657,8.989455,1.241378,8.363146,2.155154,2.159458,-8.390324,-6.733041,-5.377447,2.351478,1.286851,-2.155665,6.072912,5.875082,7.471639,-5.798478,4.501655,-7.599007,0.584658,-3.670970,2.199160,8.386384,9.546800,-6.146791,4.761028,5.445924,-4.538674,7.925894,4.716755,1.694956,-4.338217,9.252004,3.696999,1.026076,-3.443638,-8.552793,2.512577,4.165366,4.706662,-0.108164,5.229102,1.818906,-2.411297,3.445334,3.887917,-5.065540,4.137711,-8.577830,-7.375158,7.003972,2.603017,-7.763516,9.170169,2.515435,3.906545,9.098142,6.240366,-4.081600,4.534044,-4.405999,-4.148952,2.241015,-8.699726,-3.754299,9.006227,5.317205,5.460260,0.349570,9.171498,8.945085,-4.734343,3.438083,5.343922,0.187518,-4.732748,-0.769971,6.305984,-5.194177,2.928185,-2.247475,-3.589971,5.943171,4.936372,8.504775,0.382810,9.384668,5.315061,-3.985816,-5.931475,-2.985459,4.258737,1.032475,-4.037756,-8.922196,-2.104302,-5.063673,8.774238,8.283351,-9.694500,6.819027,7.917848,2.935573,-8.872449,-6.967002,-1.667158,7.365467,3.107365,-5.052927,-1.536726,0.342231,6.638512,4.172016,9.322718,8.451476,2.348283,7.524950,5.317375,-7.827209,-3.279321,-1.503062,2.713969,-7.099917,-6.414067,-7.029696,-0.852394,4.009587,4.919240,-3.246230,1.699915,-5.645354,-8.974418,-6.301897,-5.481547,1.038093,8.727595,3.390019,1.598604,9.955241,-9.412797,-2.771670,4.173492,-2.829652,4.621670,9.511697,-6.923444,4.755003,4.198466,-7.729813,-4.496988,9.580600,6.826786,-4.304673,-6.638865,-1.627502,6.848165,6.788500,3.915673,5.629964,-6.837046,6.327496,-2.733756,-2.153686,-1.234853,-3.866940,-0.919950,-3.378947,-4.911060,7.150491,-1.449180,-2.193297,-6.730635,-4.820848,2.957866,-4.105209,-2.876826,6.760693,3.056508,2.441447,-0.335849,-4.249934,6.475082,6.184362,-5.967519,-3.340807,-0.351505,-5.127317,3.029776,-7.360015,2.714665,-8.501525,3.955788,-2.101850,7.610997,-2.994617,5.589490,3.535790,-0.051167,9.649244,8.085221,8.705482,-5.133530,-8.272266,1.743062,-1.956185,-6.798231,-4.006132,-1.145035,-5.213754,-8.717079,-4.207449,3.548378,-1.279241,-3.092584,-7.418509,-4.558024,3.450838,-6.757143,-8.164382,5.082058,-2.700700,7.029483,9.101201,8.647469,-9.065958,-6.049490,-3.130351,-8.809957,8.702806,-1.766094,-9.826866,-9.883945,0.562154,1.406759,-7.575978,-1.165576,-0.986722,5.032316,-8.634515,0.864322,9.248916,7.994510,-0.651461,-8.344071,-3.981280,4.127643,2.982084,-1.764730,-8.527818,-0.451204,-4.915700,0.807124,5.658013,-4.369421,-0.444157,-9.618183,-4.637334,2.418855,8.202761,-3.027226,-7.841749,-3.992512,4.178911,-6.441537,-6.400921,-7.127346,7.017084,-6.652576,3.524236,-2.674336,-1.725166,1.994112,-3.926503,6.021024,-7.766043,8.483247,-4.208379,7.597897,5.855201,1.613162,-0.333432,-9.483784,-9.557578,-9.675305,-4.213236,9.616893,3.522117,6.755245,8.886130,7.918512,-0.478669,-1.601954,-9.709241,4.970539,9.222459,-0.328469,-4.656186,2.312018,3.512307,-9.514145,8.434999,-2.559676,-4.834979,-8.548780,7.575861,-3.595005,2.071688,-1.768541,-8.564910,9.230064,-4.592789,3.815023,-2.601919,0.787638,7.294026,1.851590,9.407892,3.105139,7.820202,4.152581,-7.690307,4.403424,-9.933963,8.316885,0.443674,-1.677121,-9.865455,-0.910728,3.886667,-2.997316,-4.685826,7.043130,-3.244003,1.676764,-8.965614,-7.974904,-6.218998,-3.802259,3.287338,7.674844,-1.037367,-4.432541,-0.820232,-5.644874,3.261827,-4.610487,-0.425177,1.234776,-5.723939,9.751634,-7.983748,1.567163,9.662551,3.800593,-0.910482,5.856874,4.537864,0.268479,-4.188170,0.136130,6.525015,8.281712,5.475549,-4.801092,-9.090363,-0.990596,4.093058,3.203060,-0.699952,3.016058,-6.256024,1.706651,-8.041910,9.944048,-4.788585,-5.338154,-3.179021,-2.789935,0.968596,0.945656,-8.524517,-6.724744,-2.875419,-7.888199,-5.786100,3.006889,-3.185253,-5.857306,1.564330,0.506240,-7.652368,8.729254,-6.448253,-7.832587,-1.762671,4.438776,-8.045298,-1.035373,3.465872,3.298494,-2.602486,-2.363268,9.893623,-3.871695,-2.353033,6.222349,1.073182,4.188675,-0.847456,5.244061,-5.065044,4.475496,-4.277083,2.470702,-7.477320,-4.903125,8.056635,2.245241,9.787269,1.309837,6.049451,2.906821,-1.078155,-5.278488,-3.341396,0.892269,-9.570720,0.636243,0.555231,9.941854,6.528828,-3.360363,-1.255028,-3.044758,4.122810,-8.702700,-3.209953,-0.213585,-6.615976,2.973507,-8.681685,5.221688,9.177054,-4.272809,9.144298,-9.043120,0.897488,9.833732,-5.509252,5.996566,-7.571910,-1.859540,9.989665,1.501793,-6.541721,4.775638,2.079715,5.611142,9.470267,9.458426,9.886546,-5.818864,0.218289,0.640338,2.903141,4.418912,-2.539526,-7.778401,-3.083851,3.554069,-8.388454,-3.559486,-3.187142,-8.547923,5.960467,-4.926805,1.895495,4.144953,3.599227,-2.129170,6.411921,-9.109749,1.445616,-8.764648,-7.736766,-5.680457,-9.833316,-1.688721,5.169102,-1.452980,2.774688,1.968583,6.322852,3.272937,8.095729,6.606121,5.879344,-7.828761,-9.999425,6.664993,7.499069,8.016364,-4.898984,-4.301835,-9.974604,-7.541488,2.840029,-6.763596,-4.752797,4.661231,7.589247,-2.501707,-7.655508,-7.793032,9.044022,8.291979,6.125450,-6.657264,6.069174,0.342652,-8.535016,4.803906,-5.406964,-7.208845,5.044628,-4.699077,8.680469,3.792644,-0.129209,-9.724622,0.316919,-0.536718,4.227633,-0.002098,3.478227,-5.387234,7.137120,7.959808,-5.284953,-4.555597,-0.875904,-1.734734,-2.913658,0.806328,8.260051,-1.956433,-3.014218,-0.630308,-2.343950,-4.078835,-9.311528,6.098750,-9.733515,6.812616,-5.604145,-3.044342,1.140116,-9.189254,-6.924812,-8.594833,-3.638734,1.556431,5.698945,-5.594946,-8.484210,1.061846,8.470432,4.207555,6.373797,-2.860970,-5.929983,-7.580666,-9.037427,7.320353,9.064143,-5.148083,1.044409,-5.291231,0.441040,-8.897829,5.397065,6.030011,-1.624254,-6.369579,1.155735,1.513946,1.716790,8.174836,2.862768,-9.025095,-1.353507,-6.016155,-1.200202,-0.125538,1.876381,-7.050701,-1.589171,6.238543,-4.722867,7.106031,1.933479,9.600463,-2.459103,-4.126086,-8.356982,-6.050576,9.822972,-3.191839,8.543130,-3.083558,9.609532,5.882582,-8.862697,-2.236192,-8.937856,-4.189565,-7.764377,-0.647175,4.652333,-1.960993,-8.357649,-9.481462,7.186337,2.527430,-1.469437,5.079697,-7.794622,0.085357,-7.703540,5.547903,2.243738,-9.095033,-0.499870,1.791243,7.457540,1.349956,-1.617350,4.503128,-6.316623,0.452954,-8.920949,-5.202680,1.732721,2.000601,0.913874,9.447639,4.845851,-5.015244,-0.295230,0.713950,-3.578894,1.348555,-0.881385,-8.212035,-8.152858,7.317755,8.603724,5.658657,-7.649209,-3.955559,-8.522125,-4.171460,2.317442,5.498137,-3.232366,2.038379,3.687706,-2.020283,3.671517,-7.224641,-8.899020,0.262101,2.914252,-3.718606,5.341713,0.813511,-9.984626,9.512582,-5.961776,-2.088202,3.919766,2.550847,-9.117217,7.872446,1.243512,8.526317,4.869192,7.161379,-9.776550,-1.472489,-9.091111,4.890358,-5.668244,-5.180313,1.000568,4.586206,-6.022174,8.713586,-5.745217,-2.504392,-8.860191,0.415294,-3.936816,-2.637014,8.732140,3.854417,-1.538506,-8.254787,3.916801,3.087686,3.092458,-3.252464,-7.779905,5.988705,-8.279132,-3.579914,5.491610,-0.388527,-6.334467,-4.525800,-1.103674,0.346267,-1.704525,0.532968,-9.531596,-6.272956,4.458169,1.555289,-5.516005,5.808990,-1.667805,8.007935,6.705291,-4.421577,-9.900225,0.473090,-4.362663,1.762304,7.162252,-1.059191,-1.913311,7.715340,1.092231,8.046745,9.171881,-1.485501,-5.829656,-1.321770,-7.003583,3.127284,5.856035,0.518377,4.962715,9.515121,3.913916,-5.919439,-0.819525,2.320519,-6.976546,-5.649802,5.089947,2.394063,-1.089806,-2.558221,-4.072250,-4.539390,-3.352949,2.931625,-2.341523,-6.187014,7.808028,1.200840,2.295278,6.232731,5.706087,3.887608,0.882777,-4.991528,-1.574717,-1.171494,-5.063570,3.269809,-1.806375,-6.098575,7.339410,-7.981055,7.284154,-0.804820,-4.242544,-5.842705,5.234520,7.727222,6.701272,0.836870,-4.383450,-9.685166,-0.601427,0.160843,6.600957,0.485467,5.444244,3.675610,-9.737366,9.587811,0.082044,-0.056837,4.353594,8.523385,-1.664866,4.940046,-0.397954,2.131948,6.581602,4.691308,2.556320,3.675716,-7.474655,2.103684,-1.847034,-0.946548,4.285497,8.972305,-8.005509,2.472502,3.703081,4.997912,-7.142029,-1.870251,5.110737,-3.864078,-0.211336,0.488301,-9.959836,3.482299,5.374158,1.131267,9.884209,-8.622942,3.937676,-7.540445,-5.702017,1.228230,-3.072598,-5.210467,4.873272,-4.469250,-6.338832,0.351994,5.568661,6.657392,-2.341399,0.690130,8.488719,0.323748,8.611514,7.564078,4.607241,-1.605861,-6.925545,5.767754,-0.107644,-1.698742,-1.023590,7.155089,-2.843801,-8.488582,5.281121,-4.563288,4.665747,-4.329189,1.478170,-0.728224,-6.208001,7.733691,8.046951,-2.701207,-1.398427,-1.101898,-7.766494,-1.286656,6.534198,5.154788,-2.985396,3.488218,2.062026,-9.020071,-2.268990,6.934471,-7.465343,1.729887,-9.994917,0.416778,-9.940866,3.639563,1.646654,-5.530858,-7.404308,-9.337067,7.929183,9.797137,2.336524,-7.093510,-3.283756,-0.974754,-6.311717,2.486429,0.420284,6.138786,-8.121662,3.382998,1.986405,-4.108288,7.392343,-7.560338,6.732618,-9.983798,-9.722741,-2.172304,-0.826720,7.559587,-2.610011,1.079433,4.035517,-2.030313,3.340973,5.157813,4.003373,6.741637,-2.043191,2.861897,2.395625,-0.431903,-4.415537,-6.552990,6.754183,0.483900,-0.400930,-6.262112,-7.055023,-9.148694,-1.237707,-8.499213,3.443849,-0.568398,2.544781,7.729353,5.304951,-0.558326,-4.094664,4.191545,-9.248632,-6.763638,8.578062,-3.420074,5.751389,-2.268540,9.409842,4.682558,-6.037794,-3.893421,0.060122,-0.622992,-7.448828,6.484840,0.048844,-6.383921,0.344089,4.947208,6.221388,-6.168961,-4.731720,-4.673492,2.440945,-3.368818,-1.288088,-5.110153,4.440107,-9.825483,8.651217,-0.946238,-4.032865,1.383676,2.514146,2.481562,-5.582644,5.670542,-4.178882,-7.025918,6.175992,7.068741,-6.808845,-4.490012,-7.703839,4.342492,-4.270364,-7.154071,-4.677900,-6.005049,-0.900911,7.302800,-8.954658,8.398470,-8.306521,-6.225077,3.949876,0.685782,7.936143,7.721857,1.566268,-2.832861,-5.050679,-2.007877,-6.318646,7.889450,-7.553152,7.802844,3.454293,6.657841,0.494462], dtype = "float64")#candidate|408|(1188,)|const|float64
call_407 = relay.TupleGetItem(func_192_call(relay.reshape(const_408.astype('float64'), [12, 9, 11])), 0)
call_409 = relay.TupleGetItem(func_194_call(relay.reshape(const_408.astype('float64'), [12, 9, 11])), 0)
output = relay.Tuple([uop_386,call_407,const_408,])
output2 = relay.Tuple([uop_386,call_409,const_408,])
func_414 = relay.Function([], output)
mod['func_414'] = func_414
mod = relay.transform.InferType()(mod)
mutated_mod['func_414'] = func_414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mutated_mod.get_global_var('func_414')
call_415 = func_414_call()
output = call_415
func_416 = relay.Function([], output)
mutated_mod['func_416'] = func_416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_428 = relay.TupleGetItem(func_414_call(), 1)
call_429 = relay.TupleGetItem(func_416_call(), 1)
output = call_428
output2 = call_429
func_431 = relay.Function([], output)
mod['func_431'] = func_431
mod = relay.transform.InferType()(mod)
output = func_431()
func_432 = relay.Function([], output)
mutated_mod['func_432'] = func_432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_465 = relay.TupleGetItem(func_414_call(), 0)
call_466 = relay.TupleGetItem(func_416_call(), 0)
output = call_465
output2 = call_466
func_487 = relay.Function([], output)
mod['func_487'] = func_487
mod = relay.transform.InferType()(mod)
output = func_487()
func_488 = relay.Function([], output)
mutated_mod['func_488'] = func_488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_559 = func_487_call()
call_560 = func_487_call()
output = call_559
output2 = call_560
func_602 = relay.Function([], output)
mod['func_602'] = func_602
mod = relay.transform.InferType()(mod)
output = func_602()
func_603 = relay.Function([], output)
mutated_mod['func_603'] = func_603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_604 = relay.var("var_604", dtype = "float64", shape = (16, 9, 7))#candidate|604|(16, 9, 7)|var|float64
uop_605 = relay.log(var_604.astype('float64')) # shape=(16, 9, 7)
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_608 = func_602_call()
call_609 = func_602_call()
output = relay.Tuple([uop_605,call_608,])
output2 = relay.Tuple([uop_605,call_609,])
func_631 = relay.Function([var_604,], output)
mod['func_631'] = func_631
mod = relay.transform.InferType()(mod)
mutated_mod['func_631'] = func_631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_632 = relay.var("var_632", dtype = "float64", shape = (16, 9, 7))#candidate|632|(16, 9, 7)|var|float64
func_631_call = mutated_mod.get_global_var('func_631')
call_633 = func_631_call(var_632)
output = call_633
func_634 = relay.Function([var_632], output)
mutated_mod['func_634'] = func_634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_670 = func_431_call()
call_671 = func_431_call()
var_699 = relay.var("var_699", dtype = "float64", shape = (12, 9, 11))#candidate|699|(12, 9, 11)|var|float64
bop_700 = relay.divide(call_670.astype('float64'), relay.reshape(var_699.astype('float64'), relay.shape_of(call_670))) # shape=(12, 9, 11)
bop_703 = relay.divide(call_671.astype('float64'), relay.reshape(var_699.astype('float64'), relay.shape_of(call_671))) # shape=(12, 9, 11)
output = relay.Tuple([bop_700,])
output2 = relay.Tuple([bop_703,])
func_730 = relay.Function([var_699,], output)
mod['func_730'] = func_730
mod = relay.transform.InferType()(mod)
mutated_mod['func_730'] = func_730
mutated_mod = relay.transform.InferType()(mutated_mod)
var_731 = relay.var("var_731", dtype = "float64", shape = (12, 9, 11))#candidate|731|(12, 9, 11)|var|float64
func_730_call = mutated_mod.get_global_var('func_730')
call_732 = func_730_call(var_731)
output = call_732
func_733 = relay.Function([var_731], output)
mutated_mod['func_733'] = func_733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_744 = relay.var("var_744", dtype = "float32", shape = (16, 4, 4))#candidate|744|(16, 4, 4)|var|float32
const_745 = relay.const([[[3.884372,4.694083,-0.418302,-5.852957],[-4.164658,4.321473,5.795464,-9.272189],[5.350786,6.453707,-8.663466,-6.574027],[-3.961678,3.400070,0.118048,-3.407104]],[[-3.815636,-9.348082,-2.881571,-5.686762],[-3.208609,5.066417,-5.145549,1.361159],[-7.695957,9.051840,-4.321184,-8.756618],[-2.412515,8.903242,-4.404901,0.468470]],[[7.127421,8.042595,-1.631481,-1.233051],[4.644076,-1.031666,-2.618846,1.006434],[-4.996187,9.273153,2.836433,3.457000],[-6.603814,5.023100,-7.150823,0.626188]],[[-0.436863,7.825715,-7.420164,0.813260],[9.672855,2.322938,1.589529,5.345074],[1.700895,7.322759,-9.793219,3.036669],[9.403417,3.791382,4.048507,6.186060]],[[-3.882376,-1.023916,-7.157015,-6.568578],[-9.030288,8.232588,9.789625,2.047192],[-2.303422,3.591038,-8.464384,0.397402],[8.612839,7.383825,2.716908,8.829359]],[[-2.048199,-4.591336,0.408877,-4.254825],[4.554013,-8.075237,-0.610079,2.680504],[-1.978010,4.763803,6.887420,-0.773846],[-7.716955,8.238635,-5.940981,4.957065]],[[1.697010,8.140647,-0.876187,-9.103780],[-4.509746,-6.762575,-4.566268,0.739212],[-7.581970,6.975345,9.302969,6.418281],[-6.310626,8.190537,7.931753,5.998889]],[[-0.178631,0.030239,-3.067075,-8.690028],[-8.708305,-6.183233,2.705623,7.429228],[-9.139217,4.971836,-1.343859,7.371186],[-2.145579,5.043124,0.972447,-6.204498]],[[-5.087970,5.162268,6.250695,7.205517],[-8.002105,-3.597046,3.801768,-2.538491],[8.419846,3.145367,-4.457631,-3.873120],[3.475857,-8.581108,-5.063757,-9.645461]],[[-2.161033,0.811141,-8.116885,-1.509062],[-3.815695,-9.308427,-7.902845,-3.059755],[-4.508221,-8.933554,-7.193275,7.695958],[-6.980954,6.072358,-4.630791,2.733507]],[[3.525748,-8.061988,7.994241,-0.558581],[-5.380782,1.963058,6.380067,-0.889838],[5.472847,-2.813414,0.693642,4.338569],[2.696991,-8.380622,7.312323,4.227919]],[[-5.379093,-5.686674,-3.242043,-8.994495],[7.738697,5.300400,3.230912,-7.457816],[-1.580084,-6.712136,3.609925,-9.889068],[-2.128785,-5.020325,-0.438039,-2.436824]],[[-8.255836,8.567306,-1.750009,9.787496],[8.503342,-2.395326,-1.411599,-1.631283],[-5.433137,-5.071107,-0.766130,-1.430422],[1.308078,-6.908387,-1.558711,-7.608757]],[[0.256940,8.114082,9.511914,2.009810],[-3.951908,3.534896,0.954918,7.055219],[6.685867,5.358781,-8.770342,-1.969310],[-6.812781,-4.637461,-4.600406,9.725634]],[[-3.691931,4.922290,4.332384,-1.059944],[-3.609001,-5.206956,9.650729,5.116630],[4.992270,0.758163,2.201856,9.271861],[-4.999778,-4.364077,7.480822,7.481065]],[[8.559202,6.122733,6.157814,-8.343205],[-0.723145,9.176064,-3.019844,-9.319978],[8.585469,-9.217450,5.552582,3.982134],[2.531334,-2.529421,0.996008,-2.735397]]], dtype = "float32")#candidate|745|(16, 4, 4)|const|float32
bop_746 = relay.power(var_744.astype('float32'), relay.reshape(const_745.astype('float32'), relay.shape_of(var_744))) # shape=(16, 4, 4)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
var_751 = relay.var("var_751", dtype = "float64", shape = (1188,))#candidate|751|(1188,)|var|float64
call_750 = relay.TupleGetItem(func_730_call(relay.reshape(var_751.astype('float64'), [12, 9, 11])), 0)
call_752 = relay.TupleGetItem(func_733_call(relay.reshape(var_751.astype('float64'), [12, 9, 11])), 0)
bop_754 = relay.logical_xor(const_745.astype('int8'), relay.reshape(bop_746.astype('int8'), relay.shape_of(const_745))) # shape=(16, 4, 4)
uop_776 = relay.acos(bop_746.astype('float32')) # shape=(16, 4, 4)
output = relay.Tuple([call_750,var_751,bop_754,uop_776,])
output2 = relay.Tuple([call_752,var_751,bop_754,uop_776,])
func_800 = relay.Function([var_744,var_751,], output)
mod['func_800'] = func_800
mod = relay.transform.InferType()(mod)
var_801 = relay.var("var_801", dtype = "float32", shape = (16, 4, 4))#candidate|801|(16, 4, 4)|var|float32
var_802 = relay.var("var_802", dtype = "float64", shape = (1188,))#candidate|802|(1188,)|var|float64
output = func_800(var_801,var_802,)
func_803 = relay.Function([var_801,var_802,], output)
mutated_mod['func_803'] = func_803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_818 = func_602_call()
call_819 = func_602_call()
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_829 = func_602_call()
call_830 = func_602_call()
output = relay.Tuple([call_818,call_829,])
output2 = relay.Tuple([call_819,call_830,])
func_865 = relay.Function([], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_865_call = mutated_mod.get_global_var('func_865')
call_866 = func_865_call()
output = call_866
func_867 = relay.Function([], output)
mutated_mod['func_867'] = func_867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_870 = relay.var("var_870", dtype = "float32", shape = (12, 13, 7))#candidate|870|(12, 13, 7)|var|float32
uop_871 = relay.sin(var_870.astype('float32')) # shape=(12, 13, 7)
bop_879 = relay.power(var_870.astype('float64'), relay.reshape(uop_871.astype('float64'), relay.shape_of(var_870))) # shape=(12, 13, 7)
func_631_call = mod.get_global_var('func_631')
func_634_call = mutated_mod.get_global_var('func_634')
var_885 = relay.var("var_885", dtype = "float64", shape = (1008,))#candidate|885|(1008,)|var|float64
call_884 = relay.TupleGetItem(func_631_call(relay.reshape(var_885.astype('float64'), [16, 9, 7])), 0)
call_886 = relay.TupleGetItem(func_634_call(relay.reshape(var_885.astype('float64'), [16, 9, 7])), 0)
output = relay.Tuple([bop_879,call_884,var_885,])
output2 = relay.Tuple([bop_879,call_886,var_885,])
func_890 = relay.Function([var_870,var_885,], output)
mod['func_890'] = func_890
mod = relay.transform.InferType()(mod)
var_891 = relay.var("var_891", dtype = "float32", shape = (12, 13, 7))#candidate|891|(12, 13, 7)|var|float32
var_892 = relay.var("var_892", dtype = "float64", shape = (1008,))#candidate|892|(1008,)|var|float64
output = func_890(var_891,var_892,)
func_893 = relay.Function([var_891,var_892,], output)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_941 = relay.var("var_941", dtype = "float64", shape = (6, 1, 9))#candidate|941|(6, 1, 9)|var|float64
uop_942 = relay.acosh(var_941.astype('float64')) # shape=(6, 1, 9)
uop_948 = relay.sqrt(var_941.astype('float64')) # shape=(6, 1, 9)
bop_950 = relay.minimum(uop_942.astype('uint64'), relay.reshape(uop_948.astype('uint64'), relay.shape_of(uop_942))) # shape=(6, 1, 9)
bop_956 = relay.logical_and(bop_950.astype('bool'), relay.reshape(uop_948.astype('bool'), relay.shape_of(bop_950))) # shape=(6, 1, 9)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
var_960 = relay.var("var_960", dtype = "float32", shape = (256,))#candidate|960|(256,)|var|float32
const_961 = relay.const([8.940624,7.496788,2.908375,-9.585941,-9.067518,-3.698731,7.071392,7.925863,9.693947,5.236931,1.615963,0.051998,5.324328,-5.818468,8.942379,0.519281,7.548594,3.819743,6.036261,2.311518,2.279357,-3.379587,2.160257,3.257906,5.038854,-6.262209,1.916644,-9.258012,-5.097098,6.865204,-6.313876,-4.906217,6.659874,-5.669309,8.305659,1.354978,-6.643319,8.691372,7.137150,-0.609785,3.317095,2.398683,-0.101413,5.705090,5.026518,-3.543424,-5.340329,8.700515,5.111023,-5.115302,3.013578,7.080465,4.518129,8.554808,5.448313,-4.709631,1.489875,-7.950829,3.040949,-0.664904,-5.649763,3.297550,0.065655,7.347027,-0.226634,1.785611,9.680978,0.956558,-7.167695,8.043880,-2.830937,-9.431025,-2.013624,7.078474,8.078918,-5.055264,8.430359,-8.040579,-9.293413,2.072463,4.480144,-8.171615,5.900202,-0.729355,-3.230003,3.116482,9.390264,-0.203589,-2.794027,8.872305,3.025805,-8.569172,6.174656,0.168709,-2.929609,9.252717,-5.436516,-6.918905,1.537714,3.149664,-8.184801,7.451252,-3.274102,8.554960,8.672480,-6.305351,-5.843626,0.106998,5.424154,0.619612,8.280400,-6.050497,-3.548711,9.784094,8.000159,-8.354624,-2.079112,5.809751,2.711376,9.929971,8.584651,-4.379628,-2.706468,-3.074222,-9.376378,4.097001,-8.426683,5.488190,-4.003494,-6.649847,1.140637,-8.758503,-1.787974,6.721235,-4.203957,8.184645,-4.150064,-4.106813,2.846289,2.986302,-2.491938,-6.972431,-9.511922,-3.059259,-9.247933,-2.680192,0.390238,5.102752,-8.367927,4.951272,-0.975135,-7.627944,-2.627537,1.965969,2.464387,-1.009016,-4.987843,-1.717452,-6.020218,5.511913,-1.353907,9.150980,-3.885123,7.878088,0.856830,-0.886794,2.958386,-5.255451,1.434661,-6.989481,-4.412883,-0.338948,1.339357,9.992797,6.362143,-5.607052,-9.015273,2.244222,2.904072,2.683940,-8.845740,-4.145451,4.749347,3.379914,-6.197186,9.332895,-6.591676,3.721834,4.774035,-1.757371,-7.146627,-4.633879,-7.620432,9.289188,-8.720689,-2.095748,-6.465319,2.740317,3.560069,-7.305102,-6.911170,4.531193,-3.286698,-3.490494,7.420212,-4.445248,4.062004,4.505555,0.531609,8.665902,8.135901,-1.289639,-7.998300,6.164286,-6.929412,-6.687928,-8.297418,-4.596515,-1.869180,-6.306664,1.579374,3.325671,5.082103,-3.642211,-3.140422,-8.301939,1.574499,8.640477,-0.256314,0.940319,4.766489,1.460030,8.753423,-1.612864,-3.146681,-9.808967,3.821496,4.307051,-9.241493,8.180958,8.796503,-9.269673,-4.849004,6.506344,3.966307,-7.673081,-5.465168,-7.441109,6.831576,9.114055,6.822165,5.679361,-9.694656,6.247153,-7.976541,3.647521,-0.052480,-0.735676,4.280069,-0.170227,-2.083800,2.159422,-4.014481,7.944998,-1.041798,-4.317139,-5.467077,1.847899,-1.579108,4.560136,5.723849,-3.059396,-3.494041,2.596679,-9.378649,-3.496150,-8.223272,3.476075,0.752164,-0.703353,-2.335782,1.819480,-4.624652,4.279545,4.147341,0.144641,6.547974,7.909495,-0.629167,7.778696,-0.523234,6.534275,-5.003552,5.297112,9.907797,6.956994,-8.359096,-3.274142,2.901990,4.283372,-0.880166,-7.901665,7.880846,-8.415013,-8.902064,-1.172612,0.533611,7.000955,1.866398,-1.670347,-6.126791,-8.881488,-9.952539,8.084614,-7.595184,4.117917,4.534410,-9.095416,8.400249,-9.955741,-2.778844,-8.156821,-4.776009,8.500753,-8.682026,6.321539,-7.932302,-5.385118,-9.216129,-7.310277,-9.207925,-8.243151,7.638400,-8.448158,2.678971,-1.049418,-9.557505,2.553337,-4.561238,-5.292525,-0.026632,3.044267,6.218161,-2.034158,8.880302,-8.868972,-1.708120,5.945745,6.887068,-1.587841,-5.439931,-1.241090,5.438532,-0.160365,1.870537,-7.069354,-8.103835,-2.318113,4.380509,5.871548,8.067378,8.735208,-7.700717,-5.202355,-1.592735,-8.283428,9.484589,9.739597,4.885394,0.466826,-7.586073,-4.204643,1.041647,-5.118538,1.321443,-2.415704,0.178728,-2.936806,-5.300568,1.678445,1.639442,-3.919230,1.904176,3.157215,7.873758,6.926851,8.454901,-1.191385,-2.186845,0.104722,-4.000291,-4.650938,0.266299,-4.024586,3.030034,5.345557,4.802036,-2.970644,5.812050,4.206783,-1.290576,6.735271,8.570073,-2.864253,-0.597772,7.943510,2.469608,8.293334,3.053735,9.616968,8.846737,8.760486,-1.521516,4.533693,-4.561918,-9.980463,1.851802,-1.486052,0.587724,-0.180218,-3.548099,-3.609565,-7.770899,2.953621,6.989484,-3.998495,3.185645,-9.869873,0.681463,8.928835,-6.387390,-1.027811,2.810536,-5.408663,-4.481599,9.062174,2.798553,-1.862385,1.938434,4.584713,-5.796959,8.392437,6.329351,6.135617,-7.719783,-8.935551,-2.157690,-1.861234,7.093041,-3.987579,-8.963991,8.993785,-7.332052,4.969396,2.269406,-7.247674,-4.867743,2.503644,7.637218,8.336877,5.243847,3.513066,-1.277659,-0.142009,-4.738067,6.440398,-5.561606,-4.130610,6.649430,-3.667638,-8.907136,-4.914656,-8.018242,4.027034,6.224507,2.199631,-7.296194,-3.712900,6.146896,1.666280,-3.422644,-0.961777,1.419806,6.941987,-8.720855,6.536964,-2.013796,9.414216,2.421553,3.524391,2.291630,5.444109,6.760602,2.032270,-7.313404,-7.479311,6.817217,8.744446,-4.262337,4.831064,-5.471091,3.915441,3.843492,-4.663951,6.424894,1.967741,-5.134088,5.510942,-6.094027,-8.475725,3.473855,7.860337,2.943918,3.305910,1.035194,-9.340300,8.964400,4.332086,9.012495,0.090270,4.255066,3.280557,0.209390,4.369975,3.718891,3.631283,-2.659666,-6.628670,9.251068,3.264793,-8.031299,9.017734,-4.654770,-0.086632,-6.003524,-8.161363,-0.238927,9.863071,-3.591711,-9.671306,2.892997,-9.099912,-5.951643,0.746264,-6.035588,3.896846,1.332404,-0.549730,4.218738,3.373919,-3.458754,3.272822,3.791959,3.915441,0.012455,-5.246040,3.636510,-6.825615,3.302460,0.070100,6.855680,-7.738721,5.757802,-1.875755,-3.571648,-0.542397,9.104477,8.363406,6.758152,1.095852,-3.242373,9.320141,-9.860592,-8.385973,2.008780,-6.131794,-8.541833,2.194070,6.831097,-8.273677,4.883197,5.669086,-2.079281,-3.076453,2.751508,-1.805386,1.985660,8.057269,2.640855,2.907096,6.788422,5.544706,-5.679276,-2.762290,-8.316336,8.177363,9.648341,0.116891,-1.466475,6.628690,8.535269,9.369826,7.672146,-0.970114,-5.613582,-9.559562,3.847529,6.684997,-0.652786,-9.256244,-4.600975,3.185164,-8.951418,8.742023,-4.795451,-9.412828,-3.410309,-2.050710,-7.021885,9.023178,-9.978683,-2.496623,4.320858,1.349075,8.364671,9.864468,-2.506816,-5.835863,8.275812,4.102051,-0.782468,6.114291,4.254080,6.744255,-6.896278,0.486951,-4.779033,2.657482,5.701667,7.403399,-4.465374,4.148718,3.915890,4.667898,6.764246,-7.850549,-7.548395,5.378766,9.678274,9.286478,5.401134,-8.429167,-3.238298,5.842322,9.822150,4.396185,2.995673,-4.144792,-8.384898,0.916491,-0.596812,1.342300,8.922220,-6.602489,0.618563,7.857400,-7.444083,-4.129191,0.788466,2.391975,2.987468,-7.517605,0.051255,2.849672,-5.291859,6.106037,8.572725,0.209043,1.608773,4.917025,3.050570,6.344826,0.183894,-9.921516,-0.728394,7.638667,-1.086091,-9.448730,-1.241741,2.685851,3.024755,8.097255,-3.610399,1.742342,-7.105006,-6.717928,1.263731,-6.033913,-6.284184,2.372439,-2.929678,-7.308486,-0.569057,-3.540098,-7.741239,6.685693,-3.266428,-3.008769,8.737219,8.261922,3.680768,0.607990,1.231213,4.158421,3.478369,-4.987737,1.828002,-7.174066,-9.581511,-0.203879,5.692120,-1.712169,-0.202520,-6.228481,-9.363667,9.570136,0.495439,7.523998,-1.858196,-8.227032,0.940567,3.407896,6.700214,2.493554,-8.421722,1.207629,9.738412,-2.238413,-4.974346,-4.164517,-4.607928,-0.438182,-6.930007,-4.085058,-0.151094,-2.360183,-8.566145,-5.451561,-2.454560,0.143716,7.404238,-6.567105,-9.185789,-4.182709,1.911924,6.538902,0.560889,8.311457,9.325697,-9.273980,4.745707,-1.652505,1.561442,8.239279,-5.242288,-3.465834,8.551934,-5.645984,7.463267,7.592548,0.807550,-3.061258,-0.401846,2.565608,-1.078177,-0.949671,-2.089202,6.321230,7.702824,6.697889,6.801541,-8.097979,-0.929021,-1.366803,2.217450,-5.039368,-5.126434,0.136963,7.916921,4.701633,4.104493,7.351295,-7.657684,0.572593,1.147021,2.094226,-5.578673,-3.847403,-5.607122,9.254776,-3.075032,1.088353,-8.145248,0.132242,8.530489,4.901959,-6.450499,-0.206148,7.776479,4.517322,7.969251,8.822276,-5.611223,-5.067657,-1.785629,-2.191235,-5.888102,-2.341425,9.570543,-7.785892,-8.876693,1.849614,-3.213605,0.497959,6.084181,-1.773281,5.899416,-2.208020,4.447164,-8.097574,-8.895696,-5.650621,-7.980333,-1.182025,1.958735,-2.035705,-3.134383,-6.808760,-6.817505,5.984843,-8.743224,-7.125165,0.403649,1.284096,7.459700,1.271725,5.409114,-0.223824,-2.000159,7.339544,7.744221,8.687105,5.147250,-2.137352,2.376537,2.853339,-0.567602,0.990169,-8.045788,-8.383938,-9.273248,-4.933993,-0.833255,-0.498454,1.963953,-5.957922,1.073246,-1.998203,7.142218,-9.547128,-9.379802,9.157587,4.623905,0.788920,1.467583,-0.507030,0.610663,5.332420,2.529326,-4.801492,7.173210,-2.516870,-6.770842,6.705589,8.280823,-3.628645,4.391742,-6.161457,-3.340930,4.593388,-3.072899,1.811493,-7.960076,6.181607,-9.264767,-4.301600,-5.472058,9.555459,5.452017,-7.633003,-3.498261,3.890583,-2.650521,6.943244,4.645175,1.129049,-3.504042,8.012183,9.538872,-2.684795,-4.774704,-5.315342,8.490144,6.960644,-1.038344,-6.452735,-3.323079,6.530518,5.059959,4.894114,5.315125,-1.678329,0.587683,-1.008690,-7.295871,3.501733,9.597635,9.147703,6.052824,5.124778,8.099118,-0.536814,2.890306,-0.618892,-0.153977,4.100745,-1.246893,7.764624,6.160555,9.507258,6.609526,-2.916869,-4.551226,2.967979,-3.038915,1.191723,-0.310150,0.475484,8.193206,7.911687,4.576462,0.199632,-3.181695,-9.919504,-0.183163,-9.140424,-5.953625,-0.971975,-3.018734,-8.486926,5.065512,-7.680057,6.626279,5.484148,-0.592310,7.893982,-0.493121,9.006603,8.689289,-0.456726,5.974562,6.524413,-0.232281,-7.231579,-4.581801,7.478358,6.249101,1.777730,-7.309841,4.950502,7.283803,-0.481593,-4.629500,8.847688,7.642616,5.317723,-0.122655,-7.430979,4.153293,7.301175,3.101183,9.100738,9.538307,-2.410597,3.299618,-8.738261,-5.103028,-8.441870,-8.233737,-6.798820,-0.964652,0.008884,6.042314,4.601266,-1.479820,-4.098623,1.248852,-7.187469,-9.701515,-2.626263,4.810761,6.797083,-9.425802,-4.475894,6.427067,-6.930148,-3.989318,-2.746652,-8.628173,-2.983803,-8.482640,-2.835976,-1.078407,-2.995853,9.911936,4.568162,5.658858,-5.473571,-0.316005,4.800891,-1.012006,5.753679,2.901807,-2.264339,7.803269,-9.480176,0.143154,-0.436349,-0.731017,-4.047690,6.991810,-8.137356,-3.906550,-7.051649,3.916192,-0.609889,-4.259958,-9.922361,3.789402,7.051965,-6.241319,7.668283,-3.477172,9.339883,-9.048441,0.350294,2.084124,3.660379,-3.095812,8.877204,3.794627,6.846115,2.213658,7.405466,-8.638120,-5.053003,-5.267838,-8.043971,1.297186,6.908796,-7.377186,1.739236,-8.421559,2.548717,6.515099,-7.036040,0.527108,-3.888849,-9.835859,8.803792,-7.189038,4.343413,2.536213,4.975482,4.895867,5.284105,5.961856,-0.177067,8.391767,5.801078,-3.633876,0.050580,9.195014,-9.477497,6.256318,8.643764,9.665103,-7.991927,-1.570997,5.785154,4.756079,6.708686,-2.417799,-7.426405,-3.108653,-3.384227,-3.464598,-7.837623,4.796943,3.269895,-5.270465,-3.454779,2.360830,0.396815,-4.651611,3.716368,9.352703,2.254588,-1.379124,7.724373,6.969230,7.510421,4.755972,8.427625,7.131782,0.693492,0.488721,3.313112,-8.240084,3.871724,-1.575490,-5.245802,6.339295,0.033007,-4.057221,-2.322959,-4.119099,9.304130,3.541716,-8.226417,0.926537,2.062153,7.673222,3.264160,1.573888,-3.445275,1.684889,0.017888,-3.682116,5.158144,9.276377,-4.062979,0.531992,6.961285,9.482443,1.373993,3.490108,8.935372,-1.557310,-4.190494,7.022757,7.740635,-9.284360,-4.130978,6.315216,6.696975,2.836473,-5.933424,3.557225,-9.257049,6.145584,1.657005,-9.771116,2.464998,1.866374,-6.703434,-4.220361,6.158063,-4.739293,-9.169868,4.185517,-4.333556,2.642345,-8.334944,-8.495891,0.691990,-7.931798,-8.088436], dtype = "float64")#candidate|961|(1188,)|const|float64
call_959 = relay.TupleGetItem(func_800_call(relay.reshape(var_960.astype('float32'), [16, 4, 4]), relay.reshape(const_961.astype('float64'), [1188,]), ), 2)
call_962 = relay.TupleGetItem(func_803_call(relay.reshape(var_960.astype('float32'), [16, 4, 4]), relay.reshape(const_961.astype('float64'), [1188,]), ), 2)
output = relay.Tuple([bop_956,call_959,var_960,const_961,])
output2 = relay.Tuple([bop_956,call_962,var_960,const_961,])
func_977 = relay.Function([var_941,var_960,], output)
mod['func_977'] = func_977
mod = relay.transform.InferType()(mod)
var_978 = relay.var("var_978", dtype = "float64", shape = (6, 1, 9))#candidate|978|(6, 1, 9)|var|float64
var_979 = relay.var("var_979", dtype = "float32", shape = (256,))#candidate|979|(256,)|var|float32
output = func_977(var_978,var_979,)
func_980 = relay.Function([var_978,var_979,], output)
mutated_mod['func_980'] = func_980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_1034 = func_431_call()
call_1035 = func_431_call()
uop_1036 = relay.erf(call_1034.astype('float32')) # shape=(12, 9, 11)
uop_1038 = relay.erf(call_1035.astype('float32')) # shape=(12, 9, 11)
func_890_call = mod.get_global_var('func_890')
func_893_call = mutated_mod.get_global_var('func_893')
var_1054 = relay.var("var_1054", dtype = "float32", shape = (1092,))#candidate|1054|(1092,)|var|float32
var_1055 = relay.var("var_1055", dtype = "float64", shape = (1008,))#candidate|1055|(1008,)|var|float64
call_1053 = relay.TupleGetItem(func_890_call(relay.reshape(var_1054.astype('float32'), [12, 13, 7]), relay.reshape(var_1055.astype('float64'), [1008,]), ), 0)
call_1056 = relay.TupleGetItem(func_893_call(relay.reshape(var_1054.astype('float32'), [12, 13, 7]), relay.reshape(var_1055.astype('float64'), [1008,]), ), 0)
output = relay.Tuple([uop_1036,call_1053,var_1054,var_1055,])
output2 = relay.Tuple([uop_1038,call_1056,var_1054,var_1055,])
func_1057 = relay.Function([var_1054,var_1055,], output)
mod['func_1057'] = func_1057
mod = relay.transform.InferType()(mod)
mutated_mod['func_1057'] = func_1057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1057_call = mutated_mod.get_global_var('func_1057')
var_1059 = relay.var("var_1059", dtype = "float32", shape = (1092,))#candidate|1059|(1092,)|var|float32
var_1060 = relay.var("var_1060", dtype = "float64", shape = (1008,))#candidate|1060|(1008,)|var|float64
call_1058 = func_1057_call(var_1059,var_1060,)
output = call_1058
func_1061 = relay.Function([var_1059,var_1060,], output)
mutated_mod['func_1061'] = func_1061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_1113 = func_431_call()
call_1114 = func_431_call()
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_1134 = func_487_call()
call_1135 = func_487_call()
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_1145 = func_602_call()
call_1146 = func_602_call()
output = relay.Tuple([call_1113,call_1134,call_1145,])
output2 = relay.Tuple([call_1114,call_1135,call_1146,])
func_1147 = relay.Function([], output)
mod['func_1147'] = func_1147
mod = relay.transform.InferType()(mod)
mutated_mod['func_1147'] = func_1147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1147_call = mutated_mod.get_global_var('func_1147')
call_1148 = func_1147_call()
output = call_1148
func_1149 = relay.Function([], output)
mutated_mod['func_1149'] = func_1149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1166 = relay.var("var_1166", dtype = "int8", shape = ())#candidate|1166|()|var|int8
const_1167 = relay.const([[[-4,-7],[-1,10],[6,8],[-1,5],[6,-10],[6,-2],[7,2],[3,7],[6,-10]]], dtype = "int8")#candidate|1167|(1, 9, 2)|const|int8
bop_1168 = relay.greater(var_1166.astype('bool'), const_1167.astype('bool')) # shape=(1, 9, 2)
bop_1171 = relay.bitwise_and(const_1167.astype('int16'), var_1166.astype('int16')) # shape=(1, 9, 2)
output = relay.Tuple([bop_1168,bop_1171,])
output2 = relay.Tuple([bop_1168,bop_1171,])
func_1192 = relay.Function([var_1166,], output)
mod['func_1192'] = func_1192
mod = relay.transform.InferType()(mod)
mutated_mod['func_1192'] = func_1192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1193 = relay.var("var_1193", dtype = "int8", shape = ())#candidate|1193|()|var|int8
func_1192_call = mutated_mod.get_global_var('func_1192')
call_1194 = func_1192_call(var_1193)
output = call_1194
func_1195 = relay.Function([var_1193], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_1295 = func_431_call()
call_1296 = func_431_call()
uop_1298 = relay.sqrt(call_1295.astype('float64')) # shape=(12, 9, 11)
uop_1300 = relay.sqrt(call_1296.astype('float64')) # shape=(12, 9, 11)
output = relay.Tuple([uop_1298,])
output2 = relay.Tuple([uop_1300,])
func_1308 = relay.Function([], output)
mod['func_1308'] = func_1308
mod = relay.transform.InferType()(mod)
mutated_mod['func_1308'] = func_1308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mutated_mod.get_global_var('func_1308')
call_1309 = func_1308_call()
output = call_1309
func_1310 = relay.Function([], output)
mutated_mod['func_1310'] = func_1310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_1348 = relay.TupleGetItem(func_1308_call(), 0)
call_1349 = relay.TupleGetItem(func_1310_call(), 0)
var_1364 = relay.var("var_1364", dtype = "float64", shape = (12, 9, 11))#candidate|1364|(12, 9, 11)|var|float64
bop_1365 = relay.logical_or(call_1348.astype('bool'), relay.reshape(var_1364.astype('bool'), relay.shape_of(call_1348))) # shape=(12, 9, 11)
bop_1368 = relay.logical_or(call_1349.astype('bool'), relay.reshape(var_1364.astype('bool'), relay.shape_of(call_1349))) # shape=(12, 9, 11)
func_1057_call = mod.get_global_var('func_1057')
func_1061_call = mutated_mod.get_global_var('func_1061')
var_1373 = relay.var("var_1373", dtype = "float32", shape = (1092,))#candidate|1373|(1092,)|var|float32
const_1374 = relay.const([9.813382,-4.283036,2.631216,-3.544463,5.945372,-4.035028,-0.101101,-6.702474,-9.897074,-2.887288,3.440522,9.295290,7.830629,-3.471259,2.981755,-0.568374,4.474561,-8.260580,-5.946186,8.654138,-0.831182,9.232237,6.948278,-9.886935,2.121942,7.698695,-6.744458,-2.451784,2.393799,4.831778,-4.643458,1.362009,-2.322337,4.900152,-9.596443,2.274825,-3.530806,7.877350,-3.032419,5.633388,-2.838922,-8.560779,2.828284,2.396196,1.755958,4.619403,-9.045695,-3.016267,-8.398019,-5.220458,-1.985734,3.013008,-0.083335,6.641729,-9.513431,-2.283682,0.330823,-2.186981,9.408637,5.561814,-4.315559,4.695876,4.736254,1.601463,2.669103,-9.470141,4.018910,-2.762967,-2.795609,3.405426,-0.916404,-3.616327,-8.421867,-3.268466,-6.288018,7.102115,-5.000149,0.829625,-3.971895,-1.998711,-2.846563,0.639249,-5.124863,0.507929,1.790045,-1.168099,-0.429344,2.969067,1.602161,9.957539,3.037197,-8.560968,5.967208,3.108038,-0.210292,2.000194,-6.993030,6.712327,-4.230919,-0.176602,1.705806,8.205144,1.509638,-0.313825,-3.431046,-3.143420,-4.181916,5.519946,-9.194974,6.747168,-7.764308,-6.259851,-2.262679,-9.219645,-2.982307,-6.337309,8.041172,-7.977676,4.430571,7.290106,-5.983232,1.308366,-1.431452,-7.392434,-2.462482,2.397687,-8.703416,9.900015,9.984651,4.854496,-4.372368,9.287552,4.036778,-8.105607,2.318255,-7.917546,0.926585,-4.032494,-8.644431,3.833210,6.659537,-1.172238,-3.313892,-6.349436,8.416033,1.849135,5.540375,3.872141,-4.848376,3.837930,0.856508,6.999161,-0.547720,-6.769651,-8.133134,5.310744,-1.398367,6.766940,3.808146,3.736616,5.780986,5.291085,3.201847,7.068838,-5.733763,3.123510,-0.571208,2.865702,4.625730,-4.724797,7.800369,4.493948,3.438191,-0.455979,-8.546115,3.144022,-3.148200,-6.843738,1.266197,-9.099481,7.558446,2.009880,-5.937790,-1.834653,-3.101559,-8.284902,-9.850394,2.531767,-4.092475,-7.606459,7.863378,0.934085,-5.740374,-1.542945,6.178893,-6.149343,-8.243709,0.732414,-4.309648,-1.607404,-6.009600,-6.275297,-9.791699,-7.803343,6.178053,0.708090,-8.050870,-7.356743,5.872747,-6.391660,1.748772,2.996248,-9.278850,5.853152,-7.817665,3.500419,-0.527786,5.481881,0.849516,0.069596,-5.462116,-3.985845,2.274042,-7.797212,4.606245,-4.221706,3.181860,-2.755803,-0.580877,-3.271547,-7.300430,2.222925,1.248610,2.743418,-6.713122,6.757290,-5.024050,5.004942,-8.387891,-2.793633,-6.117508,6.343472,-8.530067,2.761487,9.332431,5.825715,4.277041,-7.870131,1.954060,6.675730,-3.349266,-8.152267,-4.028784,1.922964,3.701752,-4.447309,-1.977007,7.874404,-2.282359,2.996274,-2.389226,7.483260,0.606089,-9.805466,6.347374,-6.180034,-8.140337,-0.145614,-7.462558,-6.393130,8.188637,6.361092,-6.195079,-4.031920,0.340205,-5.470396,-1.130034,4.253307,1.484635,-9.221250,1.865290,-4.701493,-6.998262,0.522209,-0.481805,-0.093110,-7.585486,5.368606,4.075216,5.596263,6.544119,-9.346886,7.851875,9.475476,-1.762196,-5.242751,-7.833807,7.399525,9.661426,7.485946,-7.127377,-6.374680,0.865612,8.295134,9.291474,5.187183,-2.955473,5.005333,7.161682,-9.245290,-1.498441,-9.245295,-7.439768,4.076266,-0.346718,3.039188,4.290174,2.624949,-8.821699,1.721785,-9.165499,-2.740835,-6.893063,-4.034948,0.064099,6.740679,2.524324,-0.995974,-3.304236,-3.228481,0.868957,5.276366,5.543569,9.674533,-8.514583,2.557194,-2.908140,4.898378,1.926937,-8.286882,4.082589,5.364253,4.335300,-8.379748,8.277997,-4.150019,-6.050817,3.528978,1.349855,0.362136,7.549013,-1.737774,3.123517,6.329962,3.015699,1.456530,9.467703,-0.202140,-6.387293,-8.656575,2.492956,-4.680353,8.543689,9.418144,0.232286,-3.159737,7.309617,-4.072372,-9.460172,-6.954732,5.464459,-0.152863,-2.702046,-7.024894,3.496836,-8.462071,7.221546,7.492873,6.776580,2.949039,1.398996,1.511615,-8.762448,0.700976,2.619992,7.674313,8.312566,-2.006456,-5.392402,4.550465,9.010333,-1.646397,-8.977537,1.306886,-5.789590,-2.105637,-1.766159,-6.131465,6.084062,-8.345187,9.356374,-2.889747,1.202778,-2.002895,5.081616,-0.358349,-8.121988,1.390260,-2.886976,-9.413519,-1.444933,-5.886664,-8.381276,8.772068,0.458055,8.520028,6.410829,7.814297,-3.180373,-3.114443,4.792151,-6.600258,9.925777,2.302659,4.933717,-1.648302,-5.848918,-8.840355,-8.990579,6.371635,1.770090,-0.952187,-7.227982,-6.285961,-1.235418,-7.663618,0.016332,9.642885,-5.495276,-3.526258,-7.400691,6.111429,5.409936,8.605370,-9.708352,7.772994,6.247034,-2.512267,-4.616665,-8.804749,-4.445104,-1.781379,-6.262411,-0.891540,-0.343130,-1.098598,-6.637853,-6.154468,8.391006,3.294228,-4.279404,-8.422877,-9.428880,0.285135,4.536290,3.986371,-7.466436,6.010437,9.278387,1.700464,-5.890721,-5.032155,-5.421246,-1.278536,1.189536,2.553745,4.560621,9.899184,-5.151214,-0.666743,1.701518,6.658651,5.532488,-8.990023,2.414775,9.784994,6.382618,-5.188842,-6.713620,3.036624,-5.685063,8.268369,-7.966815,8.312149,5.089786,-2.842102,-3.749681,-4.627277,-2.374024,-9.921149,-0.077624,4.465088,-8.761962,1.235391,7.045239,-8.013233,8.230166,1.618940,-3.941271,1.940241,-2.390736,-1.258416,5.227075,-0.145355,2.536468,5.679618,-1.275174,7.292960,-3.324111,6.826834,-9.412532,2.724506,4.943181,4.446394,-4.851145,4.447569,9.767964,0.929969,-8.647475,-9.707832,-4.690203,-3.033271,8.365850,1.871795,-8.585370,0.994000,-9.524558,8.906598,9.558345,-2.949827,0.694307,-2.026428,0.287159,9.837434,6.630419,-6.724559,-1.451720,8.532223,-3.219411,3.990837,7.589595,3.523674,-8.327493,-5.055046,-4.555487,5.589136,-4.361315,-0.748169,9.489314,-7.419092,6.426638,-0.279306,6.320781,0.701142,5.419624,-8.370026,7.127045,-4.964020,-1.767365,1.171961,8.129513,-9.614236,-2.900229,-9.857102,8.777634,9.181683,2.362547,-4.481580,2.784646,-8.992430,-7.818449,8.655728,4.578877,8.379355,-3.130380,-3.377235,1.731317,-7.094577,5.692124,1.295131,1.918005,2.976061,5.598469,8.599971,-9.539481,9.220189,-0.536638,-5.306736,-5.469266,-2.979946,2.337779,4.208092,1.870182,-3.314517,-8.619743,7.769553,-7.164653,-6.001045,-7.470796,-2.660200,9.830882,-0.395816,3.442715,5.334021,-6.773601,-5.439994,-1.415990,3.237037,6.561384,-4.782269,4.361712,9.617607,8.764555,6.446224,5.253255,-7.315282,8.279214,5.260683,6.030926,6.667849,-2.000160,7.624354,1.998531,-4.274745,7.232764,-4.694365,7.489492,-5.717589,7.589507,-3.762085,-1.290926,9.847512,7.845860,-5.315171,-0.316048,9.490427,3.463041,2.942359,0.173039,-7.353940,9.992196,6.681212,-9.305026,5.270915,-7.944761,0.432777,-5.768612,-5.456702,3.252758,-9.318304,-3.482190,-9.972310,1.451659,-9.447070,6.388289,2.600771,6.096698,0.374960,-2.259986,3.824830,8.606165,7.505875,-6.508039,2.310438,-1.956998,8.890867,5.624948,8.657228,9.837757,0.439386,-4.923211,0.479786,-4.852510,6.575596,0.816084,3.725215,1.234038,-3.993397,-0.758616,1.610026,-9.585325,-7.390010,-1.401264,-4.521613,7.512146,4.611176,-3.385117,-7.726283,9.041244,1.175553,-0.514686,6.419802,-7.623404,1.928875,-4.300051,4.193114,3.630764,-7.889031,1.543588,-3.138264,9.673166,-8.880826,-7.367428,-4.058085,4.508566,9.505369,-3.973184,8.402185,-2.109460,0.491902,-3.522099,5.935264,-3.776629,1.215501,-2.517336,2.637393,3.883516,5.011619,-3.294678,-7.457721,-7.927790,3.663562,-3.627987,5.623870,-0.980049,4.320221,7.433052,-4.965998,1.417862,-4.185735,5.085726,7.753342,8.806471,6.505865,-7.062250,6.797357,2.551555,1.486932,-8.986552,-5.688932,8.523187,4.844100,9.557618,2.313430,6.732077,-8.585229,1.129058,-7.216045,8.976129,-0.141872,1.567558,-0.513962,-9.682219,-2.914725,-4.302325,8.400534,4.332833,-3.552941,4.196378,9.757498,6.968852,6.804366,0.910237,-1.121419,3.734711,-9.072163,-1.045450,2.707300,-8.014152,9.197246,5.311085,-9.658038,9.654866,3.339671,-7.266269,-8.979759,-7.684107,-8.161467,1.419378,-4.978505,9.019948,0.447852,8.809859,4.201972,-1.527587,-2.358525,0.507716,-4.995221,-9.260350,5.657132,-2.760719,-5.130892,-9.400251,-1.457071,1.649166,-5.414384,6.385861,5.864471,8.970855,-1.473997,3.761992,8.315957,-0.503937,-0.487345,6.178194,5.054698,3.321937,-6.359839,1.236357,8.227943,-8.247638,6.182108,5.355260,-7.160388,3.423957,-1.434589,-4.878956,-9.448114,-0.498658,5.598918,-3.252449,8.415944,-0.009344,5.723538,9.590516,9.612929,9.406654,5.909188,4.166829,5.432599,0.181701,4.055845,2.350994,-9.380384,-6.985540,1.136204,-5.604135,-1.179901,-8.960733,-8.794016,-0.956645,0.043504,1.124454,-8.936765,9.514012,2.340749,-3.553298,-5.418304,-8.962312,1.699555,-8.531471,-4.094932,5.082729,7.775610,-9.620869,2.049285,5.995118,-6.921361,-0.951858,3.923330,-9.419997,-6.223608,-7.022188,-4.086205,5.034255,3.426590,-2.069392,-5.280340,5.212313,-8.455731,-3.792247,-4.733745,-1.693386,-9.442106,-7.445653,-4.763724,-8.950045,1.184284,8.177009,-4.599701,5.292989,-2.101069,1.198081,0.276310,1.069425,-3.196397,-3.369323,4.667196,-3.087809,0.443084,-3.789480,1.415667,-9.619575,8.530270,9.747933,-3.586651,3.636009,-8.552315,1.278522,9.787914,5.447287,-1.089753,8.806174,8.089313,0.393666,-4.157276,-1.422722,0.058251,-3.641352,0.383476,-4.280091,-3.099368,-4.626907,-5.675528,-9.028959,-8.599740,6.359388,4.859903,9.255984,-9.828614,1.172188,-7.918328,1.222274,-4.124757,-1.802177,4.193786,6.467344,-6.525706,-8.884450,-6.682771,3.267345,9.452023,8.977079,5.189567,4.033918,-2.835679,-4.875685,-5.756181,-4.232611,3.508973,-5.271143,3.585732,-4.488000,-3.655565,-1.063812,8.098449,6.881299,-5.563017,-6.961832,3.335497,-0.301536,-5.340491,-6.637066,-8.660013,-6.957142,9.237796,-3.264947,-0.026957,0.569348,0.546571,8.424549,0.882448,7.634913,-4.912357,1.672424,7.969734,2.836311,-2.870320,0.137323,-1.390430,-8.607643,-5.752917,-5.503184,7.601172,4.490861,4.064507,7.340622,-1.576053,-2.610494,-7.859452,-7.099856,9.742586,-4.240684,-8.532745,-8.845898,6.720223,-2.023172,8.042676,-8.554279,-0.807476,-3.043227,0.390213,-5.148980,-2.434667,-3.548498,-0.053537,0.132619,-1.719023], dtype = "float64")#candidate|1374|(1008,)|const|float64
call_1372 = relay.TupleGetItem(func_1057_call(relay.reshape(var_1373.astype('float32'), [1092,]), relay.reshape(const_1374.astype('float64'), [1008,]), ), 0)
call_1375 = relay.TupleGetItem(func_1061_call(relay.reshape(var_1373.astype('float32'), [1092,]), relay.reshape(const_1374.astype('float64'), [1008,]), ), 0)
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_1381 = func_602_call()
call_1382 = func_602_call()
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1384 = relay.TupleGetItem(func_865_call(), 0)
call_1385 = relay.TupleGetItem(func_867_call(), 0)
output = relay.Tuple([bop_1365,call_1372,var_1373,const_1374,call_1381,call_1384,])
output2 = relay.Tuple([bop_1368,call_1375,var_1373,const_1374,call_1382,call_1385,])
func_1386 = relay.Function([var_1364,var_1373,], output)
mod['func_1386'] = func_1386
mod = relay.transform.InferType()(mod)
mutated_mod['func_1386'] = func_1386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1386_call = mutated_mod.get_global_var('func_1386')
var_1388 = relay.var("var_1388", dtype = "float64", shape = (12, 9, 11))#candidate|1388|(12, 9, 11)|var|float64
var_1389 = relay.var("var_1389", dtype = "float32", shape = (1092,))#candidate|1389|(1092,)|var|float32
call_1387 = func_1386_call(var_1388,var_1389,)
output = call_1387
func_1390 = relay.Function([var_1388,var_1389,], output)
mutated_mod['func_1390'] = func_1390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_1414 = func_487_call()
call_1415 = func_487_call()
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
call_1423 = relay.TupleGetItem(func_1147_call(), 2)
call_1424 = relay.TupleGetItem(func_1149_call(), 2)
output = relay.Tuple([call_1414,call_1423,])
output2 = relay.Tuple([call_1415,call_1424,])
func_1432 = relay.Function([], output)
mod['func_1432'] = func_1432
mod = relay.transform.InferType()(mod)
mutated_mod['func_1432'] = func_1432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mutated_mod.get_global_var('func_1432')
call_1433 = func_1432_call()
output = call_1433
func_1434 = relay.Function([], output)
mutated_mod['func_1434'] = func_1434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_1454 = relay.TupleGetItem(func_1308_call(), 0)
call_1455 = relay.TupleGetItem(func_1310_call(), 0)
const_1458 = relay.const([[[8.203838,-3.156641,-3.148595,-6.394294,-5.259905,-2.361408,-2.463138,3.950572,-7.585972,-6.678911,6.960706],[7.074934,-2.783369,-8.568308,-6.023786,-1.653873,0.336013,-9.653018,8.900293,3.879916,7.228107,-3.471234],[-4.373363,6.737648,-0.168441,4.430655,6.459495,-5.471411,-3.527884,4.943865,-5.903801,-4.348009,-9.569062],[-8.716479,2.640480,-6.423171,6.005551,-4.128638,-4.305892,-2.344821,0.724912,-2.760104,-9.019673,5.150445],[-1.866290,-7.118175,-2.295962,-9.531061,6.361121,-9.124940,-7.751512,0.700568,-3.793728,-2.584769,1.756908],[8.112141,-2.109895,6.583540,3.359409,5.505161,-8.627132,-0.332064,-5.497607,7.005095,9.746943,-9.222406],[-4.827704,3.690762,3.809927,3.334213,7.475911,3.915282,4.341657,-0.601999,4.696385,-6.229401,4.432402],[1.753739,4.948089,-7.973373,-6.869762,-5.760690,-0.332276,6.350024,1.020731,6.711396,-6.977080,-5.672499],[2.080623,-2.680835,-4.380447,-4.053147,2.856492,1.996076,0.295662,-0.129056,-6.818363,-8.530788,-7.653178]],[[-0.518088,2.240677,-1.801528,0.497634,9.731653,-4.560593,9.019204,-0.859011,-8.053890,3.180351,-2.499218],[1.270699,8.734554,0.360858,1.676565,2.813205,-1.279239,6.490003,-9.353106,7.922008,6.648243,2.532036],[7.967842,6.544008,-6.539383,9.488599,5.485140,1.307730,4.789232,-4.753538,-5.912407,-4.571384,-0.191533],[-9.368970,-1.270702,-6.475829,1.511488,1.793580,1.052927,-5.577413,3.027524,-5.240439,8.881727,6.977625],[0.793040,6.494783,-4.569925,-5.340921,1.609411,5.480806,-7.241848,0.709330,-9.447438,-2.985494,9.276053],[8.141741,8.420984,7.207536,6.992131,0.902373,7.736911,-7.038564,-0.742237,-0.556678,3.683525,-8.098678],[-8.080181,6.411684,-1.584469,-4.943088,5.834902,-1.846794,-9.251639,5.787277,2.786573,-3.049928,9.159991],[-6.377141,3.507291,0.689705,-4.010033,-0.571735,3.315791,4.757796,-4.600317,-5.741089,5.543901,-9.758462],[-0.782017,4.498716,-4.632737,-4.527454,1.599487,2.063423,-8.337448,2.987775,-3.953244,8.629139,-7.084445]],[[6.373254,-2.087998,-3.626495,4.622266,7.846909,-8.157099,5.222307,-5.954233,-1.786404,-1.506283,-3.698114],[-5.685934,6.200308,-9.094702,-7.202035,-3.206164,0.809952,7.593155,-0.422105,-6.133439,1.036667,6.805347],[9.685746,-4.877799,0.469313,7.442735,4.521448,1.134533,3.832193,8.087703,-3.661806,6.872107,3.829805],[5.847409,7.589861,8.413059,-1.453323,2.472811,9.363379,8.432942,-0.300569,-6.619598,-7.068295,6.555046],[0.491790,-8.377508,-6.148506,9.229008,-5.561547,1.219479,-9.481039,-2.364613,9.093506,-0.431075,-8.201596],[8.719577,4.741097,-1.264690,-2.867638,3.326042,5.454327,6.305030,0.381684,6.366043,-3.783475,-9.299744],[2.560139,9.447573,-9.319629,5.507207,-8.340810,-2.968822,0.423761,7.065763,-3.108668,2.114279,-7.369516],[1.315284,-0.050099,-0.131885,6.554148,3.717922,1.323271,-9.634924,1.148111,-7.859172,-8.050136,0.125994],[-2.433911,6.123218,3.774541,-9.197662,-0.488443,6.751977,-7.652145,0.900506,-1.014486,-4.317989,7.282313]],[[-2.478757,4.305285,-4.677660,5.771104,7.076574,4.244670,-3.578128,5.128695,-5.150174,-4.364799,-2.239710],[3.747785,-2.739942,9.487252,-7.436812,9.000909,0.096281,1.269029,7.849739,4.726894,-0.143925,8.649169],[3.690141,3.393955,-9.121019,2.225301,-9.380092,-6.269186,1.522019,-1.630440,9.266350,-7.337220,-5.253023],[-0.277266,-8.221465,-7.954817,-6.724528,4.993081,-0.765621,-0.896845,-8.238527,-6.205405,-7.470085,0.837891],[-7.617984,9.637590,-6.720153,-8.179337,-8.481853,-9.848961,-4.477019,8.828379,-0.865040,-2.623327,-9.179882],[-3.008769,-7.110332,1.534047,3.132272,-5.746491,-0.968783,7.096522,9.677131,7.957852,1.250557,-4.336887],[-9.526067,-3.400295,-6.368647,-4.441612,5.541184,0.656942,4.940987,5.317107,-2.658261,-8.510126,2.006858],[6.633608,2.093570,-2.949267,-9.262067,-5.740119,8.579424,4.414678,5.752278,-9.231198,-9.594384,-2.612557],[-7.727795,2.704765,-0.643938,-9.003871,3.318460,-7.369236,-9.538260,8.498117,-6.509960,-2.713783,5.283354]],[[8.244568,9.166448,0.137491,-9.576887,9.641509,3.862089,6.504029,-1.658393,-0.949189,7.613289,-0.391020],[8.416731,-2.993106,6.883461,6.866076,-4.208916,9.671149,-7.036418,-0.509688,-9.326905,-6.104561,-8.999516],[7.671992,1.231437,-2.429280,5.514005,-1.270106,8.428110,-6.494702,4.139858,7.961802,-5.763796,6.854581],[4.413930,7.397163,3.618041,-8.640249,8.517734,-9.679739,6.510781,1.858082,2.564118,2.576589,-9.340573],[9.624250,-1.747677,-8.897087,6.052893,1.436268,9.482332,2.694792,-5.956593,-4.672758,5.565046,-1.776494],[4.866112,2.540331,-0.050748,0.683609,-9.269455,-1.362601,5.356100,-7.555957,4.233042,-9.372725,-7.651490],[7.842654,5.063029,9.013673,9.330089,2.840048,1.890107,0.541625,8.380548,3.793115,-1.277930,-9.519138],[-9.090291,-7.785557,9.208017,-1.601967,-8.249075,-7.463713,3.538137,0.939343,-9.153949,4.903972,1.505268],[5.576722,-5.760003,8.230074,-6.835706,-2.174139,-6.706503,-4.799221,9.623813,3.922468,5.482727,6.228841]],[[3.724169,2.987025,4.705295,-4.408962,0.847227,-3.680317,-5.699545,-8.167486,9.869189,4.991066,-2.175800],[8.660303,-2.682331,4.052978,3.931113,-7.100483,8.775984,-5.793655,-1.800400,-9.982853,-3.780319,3.755946],[-1.842558,3.102359,5.820712,6.337294,5.126408,5.647804,1.616969,2.459282,-6.443035,-0.582074,6.331797],[-4.022962,2.040858,0.279071,8.892595,-8.504381,4.082516,-8.130142,-1.247577,-5.995027,-2.553330,2.270999],[-8.404946,-5.414016,-2.932635,6.357687,3.813172,2.219429,-8.364055,-0.981186,-8.553648,2.802160,5.563540],[-6.204175,9.598693,4.107543,-7.426654,2.921657,0.985745,5.678984,-9.272994,5.740915,7.320535,-1.243371],[8.196320,2.594236,9.903083,5.628845,-1.047133,-7.095674,-9.836498,-0.177708,-4.853207,-1.688280,0.026890],[8.806818,-2.523761,-0.468205,-4.602579,3.929787,7.807976,2.641953,9.191161,5.566174,-6.058176,9.822053],[2.967470,7.430583,6.456574,5.011084,-3.473742,6.163389,2.817796,-0.137572,-3.447604,-9.672418,-2.719104]],[[8.219914,-8.240645,-0.570871,-4.470145,-4.811323,4.519166,-4.713162,0.014414,9.350643,-3.342617,-4.312441],[-0.976369,9.307115,-1.828649,4.574557,0.266314,-3.064491,8.003381,-4.111058,-2.892427,-8.153575,4.665407],[-8.122017,-7.361413,-0.829247,-5.009493,5.705523,4.881885,-8.076303,-5.449465,-0.042074,-5.774521,3.995948],[9.719421,4.698848,-5.720886,7.496157,-4.182873,-8.907638,-6.618068,-4.779519,2.225563,9.121523,-8.535724],[-2.745225,7.965344,9.076362,2.131959,-5.392114,-9.375853,-1.232028,8.874643,-9.935344,-5.348980,-1.341379],[7.885916,2.454238,-7.053084,9.316554,-5.155703,1.761521,5.316143,6.677486,-5.842820,9.346122,-7.899355],[4.474183,-2.159037,7.617143,9.821168,0.194291,-9.167459,6.583874,8.150618,-4.691097,3.681965,-5.248938],[-1.397021,5.570266,8.396791,2.475163,5.224603,7.959470,3.720278,-1.714494,-3.240592,2.276299,-7.383368],[-1.491707,-5.259913,-2.792464,-2.013459,-9.710776,-0.751509,1.859106,-0.721315,9.525113,-0.458140,6.407743]],[[-2.485286,-6.242083,7.910645,1.119830,-3.154775,-4.127878,-5.199669,-4.029003,8.500607,3.261782,2.651556],[8.383965,-4.464231,2.306214,3.119237,-9.990339,-2.007782,-1.737350,-3.287092,6.524021,4.949014,2.217175],[-0.600296,9.150110,-5.411333,-0.848964,8.168250,-4.567053,-1.506849,-0.806101,-9.900756,3.829772,1.787351],[0.675632,-4.330228,5.008404,-4.444590,8.247572,-0.273767,-5.102146,-4.609186,-2.594613,-8.249480,8.405376],[-2.296355,-2.739542,-3.629173,6.139900,7.046683,2.381439,-0.737447,-6.281564,-7.636670,3.509645,-4.950846],[4.929237,-3.195093,-8.116541,-9.750569,-2.631837,-5.773144,-6.926047,-8.859668,-5.513336,-7.108602,2.355086],[-0.951277,3.486521,-0.616619,-6.159673,-1.488373,4.630808,1.859469,8.101645,5.458477,6.423696,-7.073177],[-6.909680,2.623004,-9.999553,-3.633641,-8.936666,9.892505,7.867075,5.217192,-0.709683,-2.237301,-0.556911],[-4.470222,2.037217,8.659266,7.174536,-6.764658,5.907548,-6.487129,7.361538,2.060999,-4.844331,2.726968]],[[-1.109436,7.625840,-4.093938,-3.246024,5.627120,-9.440541,-3.204767,3.764797,7.759691,6.770005,-0.293153],[2.448174,4.066979,3.684884,9.789491,3.509130,3.240411,4.920061,-9.928953,2.753811,-1.167894,1.420027],[2.316844,-2.065329,-3.819401,3.585846,1.801524,7.447190,-1.397385,-8.860261,0.162839,0.116400,-5.124391],[8.632144,1.675508,2.167756,-6.599752,-2.600660,3.483482,0.583197,6.941146,-3.881843,3.648239,9.647435],[9.557960,2.961187,2.366416,4.075669,1.889622,5.807785,4.808506,-4.341526,7.068545,-1.532393,1.501654],[-8.197151,-9.749902,-1.131987,-7.108906,0.073522,8.792688,4.148426,-4.348300,4.281815,0.279348,-2.041620],[7.089083,-5.872748,0.439314,7.419715,-3.236039,5.057428,2.536869,-7.636528,5.954455,8.896670,5.368515],[-1.968989,1.891987,4.524606,-1.571953,-8.890836,1.854079,-0.070337,7.833569,4.419355,8.603270,-0.032052],[-4.133937,1.342879,0.743537,6.383586,0.356174,-2.226256,4.111139,8.428721,6.884889,4.539835,-7.338908]],[[4.438326,2.176291,-4.210361,-5.071614,3.497918,9.558885,-9.424407,2.376816,8.444099,7.434923,-6.720216],[-0.940800,-2.636712,2.339365,-8.935442,2.191968,8.595477,-8.356819,-4.712082,-2.384395,-5.342082,-5.425912],[-2.076562,-0.985141,-1.003345,2.619260,-6.460349,-2.939448,0.754916,-6.502578,7.861375,-2.759564,-2.928444],[-3.792523,5.569142,3.196411,8.626551,-7.570899,8.941020,7.361820,8.026440,-3.147734,-1.016063,-3.325934],[-8.418765,0.025088,0.538511,-9.504503,2.563699,-7.009004,-0.540163,-4.917316,1.723223,2.305639,8.112318],[-4.417200,-3.680896,-7.715103,1.391597,-0.624687,5.332365,9.172244,2.782117,-9.405150,7.389561,1.611968],[-3.433654,3.766593,9.810107,2.765617,4.892520,1.434557,-8.227113,6.707905,-9.813603,-0.453165,0.804972],[-2.778226,8.434222,1.050874,3.340106,-5.397586,-5.125575,8.370396,5.974187,-5.968882,-8.920553,-4.139411],[3.766999,-6.011489,1.139807,6.177822,3.793768,-2.419237,0.457600,2.213276,-0.512150,-9.736807,0.588187]],[[-6.386713,-6.714913,5.104722,-2.123725,-5.601358,6.224440,-3.966052,9.811294,-2.826492,5.186448,5.352188],[-9.245931,-4.589397,3.423634,-9.402309,-7.038589,8.642478,8.464175,-2.366860,-7.765158,-3.246839,6.627024],[-3.289693,-9.224577,9.717906,6.908599,-8.123554,8.412655,5.023001,-0.221300,3.693590,-8.204389,2.282316],[-8.894051,-8.140377,-2.092462,-4.113549,0.242804,-0.020381,4.392733,7.115147,1.863253,2.443100,-7.916470],[5.678723,-4.106018,-5.455555,5.616106,-3.833452,0.107905,-1.197023,0.381153,5.628495,3.321068,4.387252],[-3.020218,-2.681588,-4.266838,-3.421415,-0.039877,9.749425,4.916234,8.126691,-8.478598,-8.885808,-3.314549],[1.386811,8.316529,-7.238619,7.776453,-5.728117,8.769621,0.335390,-8.232360,-7.517926,1.061057,7.794974],[1.579985,1.611939,-8.924215,0.536270,-5.196618,1.833379,-5.619271,-4.447258,1.016258,5.570819,8.068720],[-7.046458,-3.212720,-4.496000,7.703926,-2.501865,4.382569,-1.537763,5.996477,-0.501680,-2.488939,-7.598817]],[[-3.865824,-9.867171,1.552378,-4.755788,-3.606571,-1.447570,4.007972,-4.038293,-4.951380,-5.845199,-7.011031],[6.719506,-1.051586,1.144753,6.156946,4.419825,3.903180,0.597446,8.005138,2.526591,6.762940,4.295642],[1.566650,8.125778,-1.422358,3.228056,-1.517771,3.031034,-5.692339,4.834284,-2.514870,0.999927,2.885755],[-7.680945,-8.690900,-7.276613,4.707995,9.960889,-9.104280,-9.106272,-4.755167,7.848211,-0.902479,3.071344],[-4.041249,9.584849,-8.578957,-5.453019,1.847438,-3.473729,-3.562847,3.358614,-9.972694,-7.978407,7.555003],[-4.893004,-1.191145,-1.599053,-2.972270,-6.174583,0.550911,3.252690,-8.316179,2.950810,-0.176740,-1.540423],[-4.289828,-3.569456,-1.897979,4.672742,1.958705,6.185978,-8.771042,-6.955119,1.870439,8.550598,-2.667303],[-5.158032,-6.673172,1.835690,-8.338711,0.124355,3.365744,8.691714,5.153192,-6.913252,-0.412243,-8.269105],[6.024734,1.296555,5.212353,3.842590,7.290446,3.843332,9.457762,-9.759865,-5.121864,5.122019,6.664633]]], dtype = "float64")#candidate|1458|(12, 9, 11)|const|float64
bop_1459 = relay.left_shift(call_1454.astype('int32'), relay.reshape(const_1458.astype('int32'), relay.shape_of(call_1454))) # shape=(12, 9, 11)
bop_1462 = relay.left_shift(call_1455.astype('int32'), relay.reshape(const_1458.astype('int32'), relay.shape_of(call_1455))) # shape=(12, 9, 11)
uop_1466 = relay.log2(const_1458.astype('float32')) # shape=(12, 9, 11)
output = relay.Tuple([bop_1459,uop_1466,])
output2 = relay.Tuple([bop_1462,uop_1466,])
func_1468 = relay.Function([], output)
mod['func_1468'] = func_1468
mod = relay.transform.InferType()(mod)
output = func_1468()
func_1469 = relay.Function([], output)
mutated_mod['func_1469'] = func_1469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1480 = relay.TupleGetItem(func_1468_call(), 0)
call_1481 = relay.TupleGetItem(func_1469_call(), 0)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
call_1489 = relay.TupleGetItem(func_730_call(relay.reshape(call_1480.astype('float64'), [12, 9, 11])), 0)
call_1490 = relay.TupleGetItem(func_733_call(relay.reshape(call_1480.astype('float64'), [12, 9, 11])), 0)
bop_1497 = relay.floor_mod(call_1489.astype('float32'), relay.reshape(call_1480.astype('float32'), relay.shape_of(call_1489))) # shape=(12, 9, 11)
bop_1500 = relay.floor_mod(call_1490.astype('float32'), relay.reshape(call_1481.astype('float32'), relay.shape_of(call_1490))) # shape=(12, 9, 11)
output = bop_1497
output2 = bop_1500
func_1508 = relay.Function([], output)
mod['func_1508'] = func_1508
mod = relay.transform.InferType()(mod)
output = func_1508()
func_1509 = relay.Function([], output)
mutated_mod['func_1509'] = func_1509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_1575 = func_1508_call()
call_1576 = func_1508_call()
output = relay.Tuple([call_1575,])
output2 = relay.Tuple([call_1576,])
func_1593 = relay.Function([], output)
mod['func_1593'] = func_1593
mod = relay.transform.InferType()(mod)
output = func_1593()
func_1594 = relay.Function([], output)
mutated_mod['func_1594'] = func_1594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_1633 = relay.TupleGetItem(func_414_call(), 1)
call_1634 = relay.TupleGetItem(func_416_call(), 1)
func_1386_call = mod.get_global_var('func_1386')
func_1390_call = mutated_mod.get_global_var('func_1390')
const_1645 = relay.const([-9.443213,-9.412241,8.976997,-6.930546,-1.194492,-9.641194,8.498799,-2.043636,-9.493096,1.851842,9.398663,4.282674,-8.505966,-1.880694,7.487408,-8.470580,-8.017279,-6.331520,2.126608,-1.649325,-5.060599,1.214857,-8.134299,-7.998409,5.676965,3.275438,3.894771,-4.517377,-0.385731,4.306300,-0.870391,4.926593,-8.719260,-1.442175,-4.993433,8.656643,2.236013,-4.420340,3.602891,7.921816,3.655738,8.163752,1.001922,-2.370501,-5.463952,2.671593,4.988273,3.024316,1.087509,9.891972,8.372077,-9.217489,3.889829,-1.057832,9.007064,-5.779767,0.909100,9.778880,9.838207,-6.316368,-5.035640,-5.899270,-9.600015,6.458463,9.084355,4.709106,-8.084861,-2.375153,-5.894829,-2.048439,-7.467793,-3.407269,-7.649234,-4.512136,7.007529,3.586471,8.586220,4.029531,-0.385298,3.988364,-0.327447,-7.415508,-8.771054,-3.398673,8.674883,4.112093,3.571213,6.300754,8.288182,2.595659,-0.087955,-1.500265,-1.811454,7.478565,2.351706,5.060406,7.043390,-0.366492,-0.555820,4.242390,7.144170,2.649463,-5.171507,-3.547804,-1.184906,7.059739,-9.190420,-7.625777,1.787397,4.588130,-6.862303,-1.704086,-9.564091,-5.935945,-6.661965,9.248295,-8.853031,-3.630642,9.020740,-5.321732,9.729999,4.327307,-7.439375,-2.767770,3.200090,-2.520028,-7.334243,-7.304095,2.418611,7.574617,-7.652381,7.565847,8.259518,9.451996,-1.209772,2.698710,8.621885,6.406900,-4.721236,-0.990843,-2.449676,-1.475130,0.341123,8.637449,7.692014,-2.571465,3.661126,-6.991801,-7.751280,-9.061634,0.961746,-8.512210,-1.387893,-1.582002,9.631064,-2.530140,0.893296,0.427418,1.617468,4.982647,4.242943,-9.999005,0.724576,-4.096128,9.520366,-5.689891,-0.933346,1.851194,6.651660,0.712659,-0.282273,-5.175964,-6.581904,0.154713,-2.121255,-9.892162,-7.935070,0.021990,5.891488,6.950978,-2.551344,-5.178419,-6.022411,1.457643,0.156095,7.017732,-0.920428,-4.919914,4.123520,6.416409,-4.167202,4.150797,-7.504402,2.072203,-8.396767,-5.014417,-6.650426,3.858490,2.502499,-9.794926,-5.058154,-0.603086,2.130341,7.107358,-9.345728,2.281880,8.386983,-8.529136,3.099389,0.419828,-4.496108,-0.724902,-0.957874,-3.510341,-2.927753,0.373369,-4.489807,6.568333,-8.407167,-7.230599,6.036033,6.181862,-3.296553,0.642013,8.481541,-3.677837,-4.682686,1.809857,-5.041040,-7.653770,-3.335018,3.369330,-2.561852,9.715339,-8.941787,3.127401,8.299042,-0.728867,-3.614118,9.554719,-6.449907,-5.412404,-1.853042,-0.195519,5.420852,7.515356,-7.657589,-2.029774,3.324516,9.357955,7.097490,-8.589202,8.117659,-5.778385,-7.407904,-3.790001,3.268758,4.921968,-8.276739,9.420846,2.726627,0.292935,1.785840,-5.815566,1.184175,-8.205009,-7.073612,0.819451,8.495963,-0.552880,0.595605,8.462147,6.870364,-3.120754,-7.176141,5.771169,-1.670145,5.089427,-4.410477,2.034619,1.117349,-7.265924,-7.597826,5.059535,1.614431,3.029553,-5.912824,-3.581028,1.967822,7.614869,-3.902355,5.375316,-7.935127,-9.803881,-4.094097,-9.335813,-0.686117,-7.777581,5.513579,-4.752388,5.334983,2.253353,-6.118395,8.858254,1.462967,8.631775,6.941826,-9.047830,6.957685,-0.869449,-7.713945,4.019566,2.656892,8.993808,-8.789653,2.978507,4.516711,3.032205,-7.888360,-9.975621,-0.088789,7.647118,-8.967813,7.979362,7.551049,-2.115032,-0.729694,-8.527516,3.844100,-8.212584,2.632737,6.781075,7.709264,4.165322,1.089293,2.764081,2.914361,9.814313,-2.216891,-1.986797,-4.325620,-9.879750,-2.644168,-3.687817,-9.290519,2.465048,-9.761766,4.935929,-6.025029,-1.825983,-6.135746,6.267780,-5.928077,3.864845,3.301338,-5.699110,-5.290397,-3.636440,1.641928,-1.063864,-4.678064,-0.959852,-9.546956,-4.434567,-9.951733,-0.222847,-0.849046,-4.035893,-3.335727,5.445598,8.215714,2.101256,-1.455080,2.439060,-3.454899,-7.396245,3.707663,-6.960512,-1.141559,-1.652931,0.777982,7.511441,-2.131449,-2.743086,8.534579,-7.921181,-7.622578,2.721173,-5.913131,-3.108793,-4.724182,9.689399,9.869266,-5.004224,-6.469533,-7.826024,3.728978,1.375477,-5.460321,7.432837,4.533055,-0.324888,0.949041,7.407733,-3.238049,6.544684,-0.882821,8.614207,-7.161912,8.859875,-5.954441,-4.940559,1.351979,-4.655474,4.665491,2.544804,7.642030,-0.489586,9.367164,-4.413119,-5.185238,6.627199,-8.333026,-5.716451,-7.067394,7.396664,-7.230713,-7.863205,3.549900,6.297240,-0.956500,-1.720344,-7.195246,7.010763,-6.475539,-7.045914,0.487200,5.014479,-3.595674,-4.281201,2.768593,6.778483,9.514002,6.480740,-5.481621,6.483558,3.095888,2.612309,3.828105,-3.258782,-0.086158,-4.678940,-2.051044,-8.267399,7.407065,1.240460,-0.714309,-7.023419,-2.464949,3.695008,-3.986593,-0.443181,-9.339788,-1.524400,-6.785929,0.103886,6.228359,-0.733036,4.387226,-7.046825,1.401602,9.365748,-5.767015,8.196059,6.398584,-7.787795,2.284478,3.903018,-6.823839,5.338951,-5.327393,1.987759,-9.409132,4.621509,-6.460953,9.519762,4.558934,-0.644700,-3.174685,2.646405,-2.949059,-5.942417,-4.717337,1.251090,8.817547,5.925750,1.101443,1.484435,-2.950976,8.501172,-9.446768,-0.884432,7.745727,8.966268,-9.801801,4.291113,-9.024848,-3.288147,7.262455,4.724736,3.110373,4.925258,-7.729994,-6.135825,6.985152,7.202640,-7.919268,-5.369764,-6.096632,-5.919460,-6.204702,2.540648,0.062121,9.725232,6.898657,5.744969,2.636264,9.925578,0.663169,-6.830653,0.032618,-7.265404,6.783712,0.989719,-6.111664,-9.118910,8.979141,-9.772285,9.538480,-5.030621,-2.899478,8.274820,-9.732667,7.748075,4.746137,-2.294287,-1.108636,-7.129143,0.522919,4.597105,4.272851,-1.718994,-9.285718,3.749343,-1.961365,-7.124516,3.121826,-7.850283,4.636188,2.524807,4.709677,9.630486,-1.936442,8.702236,-4.626071,-1.185662,-1.188576,-6.326925,8.253942,6.344917,4.474275,-4.626201,7.857818,-1.600814,5.232940,7.984929,-2.168962,-3.974072,5.883940,-3.477628,-5.908674,5.263369,-0.206363,2.276102,-1.067129,9.719900,3.196431,-5.581928,7.537272,5.424506,3.210882,8.558281,2.956935,-0.112627,-0.549632,-8.337725,0.328713,8.108238,-0.825089,5.469024,9.352770,-4.381653,4.992289,-7.368684,-8.049759,7.545087,-5.118088,8.128712,-2.411669,-9.171624,-9.750588,3.926391,4.916193,5.640452,-1.476838,-7.426764,-2.875734,-7.424583,3.049413,-8.682782,-0.281840,0.571044,-7.870427,-3.642913,8.088224,4.908568,-3.501388,7.833005,-8.625633,8.721636,-7.064569,-1.502015,-4.686384,-7.448720,9.832497,9.593726,-4.146781,2.648461,9.153311,5.768485,-1.927660,0.815892,3.294915,-3.663015,6.156648,-0.754894,5.946383,-0.936230,5.806265,-9.749896,4.487229,-2.088484,-7.088202,4.682903,-7.937677,-4.081295,8.145962,3.485031,6.171792,-3.544100,4.508073,-2.287408,-2.173310,-8.322213,1.042136,-1.830007,2.419936,-3.451835,-7.974664,2.819269,-8.552261,-4.006737,0.047924,-6.835889,3.086738,-7.607959,-0.340445,-1.944498,9.693658,-1.653464,7.826518,-7.899749,-3.492491,-6.385569,-8.240687,1.086244,-4.923708,-4.343841,8.321568,-6.153248,-5.191210,2.568462,3.913866,7.104678,-8.144940,3.331640,-8.005367,-9.621998,-8.092719,-6.713126,8.418729,9.709911,0.958753,0.660608,-1.827431,0.487979,-1.530822,1.631100,-2.945155,4.639330,9.961650,-8.249268,-0.648158,-9.555467,-6.152322,6.153251,-9.480452,7.038635,-5.093797,-9.070766,-8.697027,6.196502,-3.688785,-0.705677,0.568780,9.885590,-9.454089,6.444063,2.813079,5.057180,-5.148527,4.173996,1.480175,-4.106302,7.670444,-0.790462,-4.609590,8.413998,8.235153,-1.074082,8.073637,5.560290,4.847597,-7.114647,-5.690906,-4.222222,-3.850715,1.226159,-6.272882,6.506391,-3.308553,2.932383,-3.616516,5.194424,-3.176314,-4.442754,2.600373,8.436435,-6.577175,8.040520,4.592269,7.591566,5.402581,8.335653,-7.899999,-5.263287,9.238452,-4.326148,-6.207934,2.612618,4.027843,-4.231780,5.299523,4.807338,8.470554,-2.171954,7.354251,-4.877304,-2.454218,-3.779619,-9.901034,1.554318,7.209749,7.844769,9.053315,-3.896094,6.969514,0.442463,9.237496,-1.912521,-5.878815,6.931527,0.161425,-8.400332,-5.500464,-7.638206,2.183667,-8.726227,6.577466,-1.797854,-9.319940,7.251710,9.211784,-9.391896,-7.439097,3.552003,4.883652,-1.743028,-3.410643,-0.942699,2.051159,-3.081687,-5.346129,3.380894,-6.841671,-8.619783,1.617045,-8.781335,-6.578802,7.923335,-4.192670,1.101866,5.609637,-6.545135,9.072032,-0.266025,8.449472,3.095306,8.636027,-1.008096,5.087636,-5.065001,-5.813283,0.972529,3.162270,4.300997,-0.312106,7.621807,-0.018495,3.192237,-3.359618,7.769223,-3.204219,8.279479,2.843263,-9.298298,-7.086009,1.914254,7.044477,-3.781765,9.727701,-9.216717,-7.598033,-6.547327,1.224429,-8.235420,1.607580,-0.165383,1.727274,-6.238669,7.027359,6.407014,0.343159,-4.512279,2.014072,-6.695585,4.001623,-3.434793,-0.092095,-9.006006,1.052444,-5.780060,-3.131980,-6.996406,-4.989251,6.205980,7.837085,-5.063219,7.297661,-8.996909,5.770543,-3.711807,9.928696,-0.096530,9.816924,-7.301482,-7.261561,3.783645,6.484285,-5.159618,-1.907071,0.984855,-9.347345,6.234433,-9.692884,-2.279356,-3.076990,-9.098300,-8.338344,8.684274,-2.695705,-1.271807,-6.672506,7.753274,3.769996,-6.830223,4.811162,-2.128962,4.778968,-6.683667,1.998077,9.639154,6.425759,5.437506,-0.926567,7.930206,-1.798711,7.310432,7.695173,-3.981212,-2.139254,1.024751,-4.055829,1.165960,5.127412,-8.864576,3.308665,-5.818348,7.647353,-6.265293,-3.448199,-1.310095,0.992382,-4.121527,0.908405,5.472156,1.809758,8.750065,-2.501190,6.266751,-1.426277,-5.112477,4.460466,-4.983428,8.878717,-7.851273,-6.900096,-8.364290,0.923447,8.768992,-7.961495,-2.152168,5.013509,9.140222,7.774676,1.914602,-5.748852,1.338612,-8.190636,0.522967,-2.861918,3.943609,-5.230664,-6.767874,-5.975899,-2.875216,-7.749043,-9.818759,7.717074,-0.502233,-6.640115,-4.272836,6.333125,-7.152258,-9.210482,6.900382,-6.267681,5.629708,8.066442,-4.135566,4.955352,-2.409218,1.066071,0.802704,-1.726850,4.278062,0.461849,-9.641658,3.973120,-8.859146,-8.544504,-6.202108,7.491558,6.195747,3.921402,-5.827521,7.930823,8.210233,-5.435516,0.925904,-0.066841,6.708825,-8.023745,-4.488970,4.529610,1.538376,6.217474,-4.100971,-4.640773,5.715786,4.384642,-5.844795,-0.297274,9.779240,3.233684,6.193741,-6.380126,3.576985,-6.806956,-3.644395,1.716575,5.126775,-5.696186,6.958234,-0.858131,-6.910117,-7.942850,-8.644391,-1.171060,1.882415,-9.852008,3.723940,-6.076829,0.035557,5.609020,-6.014328,-2.647884,1.239614,4.227155,7.505258,9.194335,9.329662,-3.775080,-7.952136,3.330093,-5.561999,-7.532621,-4.282181,3.539923,-0.543166,-8.595247,0.766224,-1.709221,4.166070,2.561863,8.444357,-6.364635,-2.959751,-8.149875,-1.000881,9.001107,3.571765,-8.590754,-9.810233,-7.131443,-2.360719,6.359887,8.784122,-9.653437,0.982834,1.459870,-3.187641,7.568382,-5.110652,2.528487,6.411341,-5.365613,3.597138,7.598184,-6.971777,-3.309823,-5.727384,-1.680494,2.309706,-2.270926,-7.077898,-7.903826,1.904280,2.856790,8.925503,-0.409487,2.836381], dtype = "float32")#candidate|1645|(1092,)|const|float32
call_1644 = relay.TupleGetItem(func_1386_call(relay.reshape(call_1633.astype('float64'), [12, 9, 11]), relay.reshape(const_1645.astype('float32'), [1092,]), ), 0)
call_1646 = relay.TupleGetItem(func_1390_call(relay.reshape(call_1633.astype('float64'), [12, 9, 11]), relay.reshape(const_1645.astype('float32'), [1092,]), ), 0)
output = relay.Tuple([call_1633,call_1644,const_1645,])
output2 = relay.Tuple([call_1634,call_1646,const_1645,])
func_1647 = relay.Function([], output)
mod['func_1647'] = func_1647
mod = relay.transform.InferType()(mod)
output = func_1647()
func_1648 = relay.Function([], output)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_1683 = relay.TupleGetItem(func_1593_call(), 0)
call_1684 = relay.TupleGetItem(func_1594_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
const_1702 = relay.const([-5.342416,1.005735,4.034624,2.441670,4.783132,-0.597403,-8.600977,-0.383571,-1.533790,3.659654,0.427535,-9.495386,4.214847,0.814589,-2.938691,3.978098,9.858706,3.022211,-6.980017,7.944888,5.327938,8.740401,-7.026938,2.127102,1.400180,9.346449,7.616392,3.519322,-3.142299,5.180592,-9.927647,2.566542,0.004482,-7.077855,-2.120398,-6.008792,2.332441,8.567552,7.246489,4.484063,-3.524787,9.009866,-9.486363,-1.450488,-4.581101,0.148255,-0.191912,-4.332070,-6.268887,6.127796,-0.156715,-2.283219,0.786735,3.864716,-2.049700,-1.555757,7.254231,-5.088791,-0.057472,5.449304,-0.840156,7.063184,0.104459,5.596361,9.051289,-6.945191,-1.673495,7.885624,9.103319,-8.983972,8.443989,-9.839883,-8.638940,-1.715965,1.570311,1.869951,2.708355,8.432272,6.542542,-7.220460,4.112807,-3.934841,6.252659,-2.436467,4.610361,-0.688513,2.966427,2.571255,-5.781585,-2.604766,2.456459,2.857426,0.841356,-8.357175,2.530225,8.260345,4.535653,-4.595560,2.312829,8.255806,8.167116,-9.716246,-7.162169,4.701787,0.474487,3.967996,2.776175,4.707704,5.463461,9.274865,-5.602136,5.256879,8.968940,-4.404491,-9.999916,1.496537,-2.049807,-3.155164,9.769285,6.255567,-4.791039,-4.626030,4.035902,-9.980276,8.113021,-8.624988,-1.185000,3.172341,6.248686,-6.524875,-1.877660,-2.733371,1.217243,8.499954,-4.572445,-0.644889,7.543694,-8.630125,-2.505358,5.295552,6.948527,-6.591922,-3.167735,4.949978,9.929094,6.291235,1.618557,-8.850644,4.479205,5.160750,-8.158197,-5.439968,-1.970467,2.699853,3.983091,-1.024600,-5.039578,-1.950904,2.887119,-2.744031,4.859392,-5.052992,5.004117,-3.182610,-3.894853,-3.708095,1.247518,4.764252,-3.587844,-3.323506,1.410155,-5.683074,5.468267,-2.487819,-7.962842,-0.235416,7.249552,-4.023864,9.885874,0.042439,-6.018908,6.589091,-5.395919,-5.961816,1.897919,-2.786574,3.411293,-9.790487,3.208856,4.516686,8.094333,7.540989,-5.110701,-1.196654,-8.510741,-7.544533,7.771540,-6.327878,-4.420905,-0.762596,-5.110281,-0.418297,4.819321,-5.943078,-5.568707,-5.209932,2.789558,-7.035439,5.619129,-6.625102,-7.940811,9.395364,-5.100901,4.329431,-6.024071,-9.000813,-3.371963,-8.748980,6.590328,-9.718472,9.553905,5.819108,-5.985123,-1.205972,-0.404806,-2.098689,5.653963,7.475976,1.401813,-3.360864,-8.408078,-6.759352,-1.518330,6.539056,-1.723484,2.886856,-2.817065,-7.510837,-9.466365,0.475501,7.787655,6.375900,1.478792,-2.763858,6.232773,-9.000121,2.739575,-1.426266,2.841351,7.028240,9.511958,5.387627,-9.202006,-3.471330,9.970798,7.344215], dtype = "float32")#candidate|1702|(256,)|const|float32
call_1701 = relay.TupleGetItem(func_800_call(relay.reshape(const_1702.astype('float32'), [16, 4, 4]), relay.reshape(call_1683.astype('float64'), [1188,]), ), 3)
call_1703 = relay.TupleGetItem(func_803_call(relay.reshape(const_1702.astype('float32'), [16, 4, 4]), relay.reshape(call_1683.astype('float64'), [1188,]), ), 3)
output = relay.Tuple([call_1683,call_1701,const_1702,])
output2 = relay.Tuple([call_1684,call_1703,const_1702,])
func_1712 = relay.Function([], output)
mod['func_1712'] = func_1712
mod = relay.transform.InferType()(mod)
output = func_1712()
func_1713 = relay.Function([], output)
mutated_mod['func_1713'] = func_1713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_1721 = relay.TupleGetItem(func_1593_call(), 0)
call_1722 = relay.TupleGetItem(func_1594_call(), 0)
output = relay.Tuple([call_1721,])
output2 = relay.Tuple([call_1722,])
func_1725 = relay.Function([], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
output = func_1725()
func_1726 = relay.Function([], output)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_1785 = relay.TupleGetItem(func_1432_call(), 0)
call_1786 = relay.TupleGetItem(func_1434_call(), 0)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_1795 = relay.TupleGetItem(func_414_call(), 2)
call_1796 = relay.TupleGetItem(func_416_call(), 2)
output = relay.Tuple([call_1785,call_1795,])
output2 = relay.Tuple([call_1786,call_1796,])
func_1803 = relay.Function([], output)
mod['func_1803'] = func_1803
mod = relay.transform.InferType()(mod)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mutated_mod.get_global_var('func_1803')
call_1804 = func_1803_call()
output = call_1804
func_1805 = relay.Function([], output)
mutated_mod['func_1805'] = func_1805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1712_call = mod.get_global_var('func_1712')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_1825 = relay.TupleGetItem(func_1712_call(), 1)
call_1826 = relay.TupleGetItem(func_1713_call(), 1)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_1842 = relay.TupleGetItem(func_414_call(), 0)
call_1843 = relay.TupleGetItem(func_416_call(), 0)
output = relay.Tuple([call_1825,call_1842,])
output2 = relay.Tuple([call_1826,call_1843,])
func_1844 = relay.Function([], output)
mod['func_1844'] = func_1844
mod = relay.transform.InferType()(mod)
output = func_1844()
func_1845 = relay.Function([], output)
mutated_mod['func_1845'] = func_1845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_1851 = func_431_call()
call_1852 = func_431_call()
output = relay.Tuple([call_1851,])
output2 = relay.Tuple([call_1852,])
func_1856 = relay.Function([], output)
mod['func_1856'] = func_1856
mod = relay.transform.InferType()(mod)
mutated_mod['func_1856'] = func_1856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mutated_mod.get_global_var('func_1856')
call_1857 = func_1856_call()
output = call_1857
func_1858 = relay.Function([], output)
mutated_mod['func_1858'] = func_1858
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1862 = relay.var("var_1862", dtype = "int16", shape = (14, 4, 8))#candidate|1862|(14, 4, 8)|var|int16
var_1863 = relay.var("var_1863", dtype = "int16", shape = (14, 4, 8))#candidate|1863|(14, 4, 8)|var|int16
bop_1864 = relay.logical_xor(var_1862.astype('int16'), relay.reshape(var_1863.astype('int16'), relay.shape_of(var_1862))) # shape=(14, 4, 8)
output = relay.Tuple([bop_1864,])
output2 = relay.Tuple([bop_1864,])
func_1874 = relay.Function([var_1862,var_1863,], output)
mod['func_1874'] = func_1874
mod = relay.transform.InferType()(mod)
mutated_mod['func_1874'] = func_1874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1874_call = mutated_mod.get_global_var('func_1874')
var_1876 = relay.var("var_1876", dtype = "int16", shape = (14, 4, 8))#candidate|1876|(14, 4, 8)|var|int16
var_1877 = relay.var("var_1877", dtype = "int16", shape = (14, 4, 8))#candidate|1877|(14, 4, 8)|var|int16
call_1875 = func_1874_call(var_1876,var_1877,)
output = call_1875
func_1878 = relay.Function([var_1876,var_1877,], output)
mutated_mod['func_1878'] = func_1878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
call_1922 = relay.TupleGetItem(func_1147_call(), 2)
call_1923 = relay.TupleGetItem(func_1149_call(), 2)
func_1874_call = mod.get_global_var('func_1874')
func_1878_call = mutated_mod.get_global_var('func_1878')
var_1954 = relay.var("var_1954", dtype = "int16", shape = (448,))#candidate|1954|(448,)|var|int16
call_1953 = relay.TupleGetItem(func_1874_call(relay.reshape(var_1954.astype('int16'), [14, 4, 8]), relay.reshape(var_1954.astype('int16'), [14, 4, 8]), ), 0)
call_1955 = relay.TupleGetItem(func_1878_call(relay.reshape(var_1954.astype('int16'), [14, 4, 8]), relay.reshape(var_1954.astype('int16'), [14, 4, 8]), ), 0)
output = relay.Tuple([call_1922,call_1953,var_1954,])
output2 = relay.Tuple([call_1923,call_1955,var_1954,])
func_1958 = relay.Function([var_1954,], output)
mod['func_1958'] = func_1958
mod = relay.transform.InferType()(mod)
var_1959 = relay.var("var_1959", dtype = "int16", shape = (448,))#candidate|1959|(448,)|var|int16
output = func_1958(var_1959)
func_1960 = relay.Function([var_1959], output)
mutated_mod['func_1960'] = func_1960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1968 = relay.TupleGetItem(func_1468_call(), 0)
call_1969 = relay.TupleGetItem(func_1469_call(), 0)
func_1712_call = mod.get_global_var('func_1712')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_1970 = relay.TupleGetItem(func_1712_call(), 0)
call_1971 = relay.TupleGetItem(func_1713_call(), 0)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_1979 = relay.TupleGetItem(func_865_call(), 0)
call_1980 = relay.TupleGetItem(func_867_call(), 0)
output = relay.Tuple([call_1968,call_1970,call_1979,])
output2 = relay.Tuple([call_1969,call_1971,call_1980,])
func_1990 = relay.Function([], output)
mod['func_1990'] = func_1990
mod = relay.transform.InferType()(mod)
output = func_1990()
func_1991 = relay.Function([], output)
mutated_mod['func_1991'] = func_1991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_2041 = relay.TupleGetItem(func_1308_call(), 0)
call_2042 = relay.TupleGetItem(func_1310_call(), 0)
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_2045 = func_1508_call()
call_2046 = func_1508_call()
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_2047 = func_1508_call()
call_2048 = func_1508_call()
output = relay.Tuple([call_2041,call_2045,call_2047,])
output2 = relay.Tuple([call_2042,call_2046,call_2048,])
func_2049 = relay.Function([], output)
mod['func_2049'] = func_2049
mod = relay.transform.InferType()(mod)
output = func_2049()
func_2050 = relay.Function([], output)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_2061 = func_487_call()
call_2062 = func_487_call()
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_2087 = relay.TupleGetItem(func_1432_call(), 1)
call_2088 = relay.TupleGetItem(func_1434_call(), 1)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
const_2098 = relay.const([[-5.575083,6.059544,2.919606,7.451756,8.087285,-3.627221,-8.338530,6.746213,3.492055,3.387106,-3.873604,0.265408,-1.000458,4.396206,0.035517,2.451231,7.385681,3.742019,-6.564494,-9.146721,0.538289,5.497782,-2.329675,-8.382791,9.676086,-3.939147,1.084238,-3.083197,6.625770,-9.311959,6.617211,-3.998137,-6.721438,-2.072088,-0.798545,-7.554250,0.977742,1.063573,4.701756,6.307335,-4.051135,-2.482514,-9.904724,6.053454,7.179923,-3.277405,5.106284,4.214890,-7.081416,-0.647729,-9.038722,-6.589005,8.554116,2.709799,-2.286737,5.789613,2.485771,-1.236204,-7.027221,0.334086,9.456340,8.816670,-8.833421,7.304380,-7.405243,4.898279,-0.310943,-0.372230,-4.814630,-8.688014,9.787476,8.562799,-0.126248,-2.942341,1.236395,-7.474919,4.611062,-6.102285,-4.122016,4.976922,4.335326,4.647993,-4.057500,3.141489,9.675406,0.862531,7.428447,7.622792,-6.720269,4.175011,0.358458,6.306802,0.137629,-0.231532,1.422781,-3.444806,5.826036,-2.427570,4.971262,-5.989760,-3.167008,3.681676,-1.908931,0.159458,-8.798561,-3.920646,-3.366392,2.327976,4.093645,5.451506,4.766153,-5.536005,4.487543,-5.276394,-1.260633,7.965349,9.615727,0.682013,-2.446716,-3.762936,7.538713,-9.302834,-6.245991,1.005527,-9.939735,-4.478597,-8.150316,-7.879451,-3.178942,-5.118222,0.647753,0.515441],[1.500085,-4.321711,6.476133,-6.568721,6.483462,-2.150734,-5.585460,-8.965885,-0.523431,-3.966315,6.931214,-7.898655,-4.026772,-1.202760,-3.859132,-8.702518,-8.608246,3.159519,2.784580,-8.756682,5.166732,8.987201,-7.119718,-4.830903,-2.270407,9.448562,0.001139,5.262645,0.393803,7.795833,8.829411,1.526658,-0.865625,8.175368,-3.430213,-1.546241,-0.659711,-6.906739,0.577593,2.801590,6.882556,6.023619,-8.600235,-9.856588,9.576683,-1.070945,3.364677,-1.767361,-5.648475,-2.690079,-8.261949,-2.063863,-9.226769,2.279971,9.742793,7.248314,-9.632957,7.155642,-7.610253,-9.324173,1.476246,-2.770975,-8.326841,-6.782679,1.657712,5.981041,-0.596388,-9.599048,-7.673831,-7.000498,0.674025,0.588605,6.771318,-3.996035,-0.730696,5.961344,9.240840,2.867549,-1.988837,8.202503,-9.074390,6.935827,-5.443387,6.693631,-0.482403,6.196958,7.746759,9.861209,4.916790,-5.562325,-8.479940,-3.361024,-5.655235,0.124728,6.897799,-9.709402,3.193140,-6.386558,7.982250,8.954364,-4.966461,5.085396,1.560766,-9.912486,4.913138,-7.486996,-1.472864,4.012911,-6.869030,5.391533,0.408789,3.287401,-2.686095,8.659711,5.968801,4.535803,9.710591,-2.978279,8.029980,9.860614,2.471742,-2.451366,-8.685214,-5.487699,-1.678135,6.023211,4.795543,-5.973267,-0.634188,-2.136244,-6.357912,7.664769],[-3.375732,-2.354218,-5.443657,-8.059892,-1.127427,8.683384,5.163701,2.788064,-4.733813,3.671609,-7.008886,2.780708,8.625432,-2.665758,9.141817,8.192929,1.996052,0.524983,-4.763434,-6.654111,-7.039139,7.440004,4.505519,5.823182,3.049289,-2.975214,-7.588738,8.504511,9.967915,-5.433193,8.627310,-2.424835,6.225112,1.987694,-6.174161,-5.041325,3.047685,-0.526915,5.014702,-5.017095,-5.360060,-2.190479,-8.431172,8.604141,9.788261,-1.161631,2.333386,-3.058943,-6.117694,-9.960441,1.142800,6.463427,6.379022,9.518677,6.792980,3.796788,-1.218848,6.891919,0.310495,-2.856447,-4.051928,-7.928602,-5.537939,-7.923803,-3.962887,9.229256,-7.414788,-9.549353,-8.635646,-4.125447,-4.888963,8.957654,2.296009,2.921781,6.397252,4.077936,9.788712,-8.618271,-5.035516,-1.430902,2.904480,-5.015010,2.783250,3.667797,5.955876,0.337516,-4.712517,-6.604246,0.136672,-3.171996,-7.568735,-1.676543,5.131263,1.546094,-2.350155,-9.033515,0.828110,7.201842,-2.676405,-9.482034,-4.488830,0.523725,-8.168413,-7.127475,0.037998,6.866840,-6.553176,6.858283,-9.633142,-2.569688,3.487899,-5.480790,8.019263,7.940489,7.726303,3.823835,1.556299,-9.600808,0.289495,-7.689504,8.420831,-6.629353,3.583150,-6.391940,-5.474163,-0.651162,8.844519,-5.308895,-6.519128,-3.491050,7.617803,4.297434],[-9.250757,-3.672809,-9.342102,6.719901,-6.925035,-6.915370,0.467121,8.163547,7.376540,5.177118,8.765492,5.936612,2.478030,9.728869,-5.109299,-3.750563,-4.375985,-1.861697,6.128796,-8.973634,9.439122,3.828656,1.921848,-9.735999,5.547074,-1.376283,0.407668,-9.413890,8.025174,5.898339,0.525690,5.816221,-0.612388,-6.770999,8.538870,-5.360054,4.140170,5.337780,-4.771816,2.213369,-2.204243,-1.392175,-5.664366,-5.536916,-9.088995,1.217235,5.829764,1.087638,-5.543329,8.182465,4.603589,-0.803898,-5.965957,4.630708,1.972539,-6.311650,-7.945533,1.727799,7.152004,2.235213,7.514921,5.490756,2.725009,-6.224384,0.713201,8.553721,3.353027,2.539669,3.811563,7.812256,-2.222269,-5.153877,-9.221065,1.553543,-3.603559,-7.288923,2.516769,-8.980617,-1.210738,-0.629927,2.445402,-4.207362,3.959848,-4.754859,4.190107,2.823421,1.240236,-8.399935,7.928210,1.091475,-5.955276,2.498475,-1.497593,-7.982263,-7.864135,-3.038458,-7.718226,3.307062,-1.257850,0.328405,3.776420,8.536264,-4.870044,-1.107343,0.403399,6.654338,6.957858,9.663185,6.895325,1.400919,-5.913382,7.258289,-0.684864,-7.709292,-3.325331,-6.932951,-5.925149,-6.057763,-4.941208,-7.024969,-2.988797,0.683434,-5.247570,9.365675,6.130552,-0.114320,-8.424794,-5.554931,-2.603250,-4.614942,-5.555447,-8.636465],[-4.602668,-3.516521,6.275710,6.943461,-6.266166,-1.875757,6.480248,-3.605941,-4.515133,9.415513,-6.876804,3.774614,-2.637852,7.075610,8.955410,-7.152420,-3.820118,-7.760743,8.143937,-8.941649,-1.438881,2.497453,-7.622879,-7.193219,-7.187119,-5.492361,-2.193474,0.108526,7.454020,4.428196,-9.874615,-1.888313,-5.257085,-8.905148,-6.446202,-7.266635,7.513272,8.717034,4.657752,-4.195777,0.957619,6.443369,1.958300,-3.821674,0.673851,0.075058,8.730377,2.862014,-1.921466,-8.438685,-4.869557,1.135922,-5.192719,2.988813,0.099440,4.733561,-9.233143,-8.822384,2.300463,-8.026458,-4.453329,-2.693989,-9.077948,-8.764149,0.676916,3.521757,1.273636,-7.563450,1.754705,9.946120,1.020969,4.556502,7.193717,3.376695,2.072215,-8.335585,3.645972,3.277516,-5.450575,-5.217383,-6.797178,9.994014,6.388919,5.889414,6.709594,6.022781,9.528798,9.529609,-6.350354,9.555612,-9.840335,1.321235,-6.051503,3.789035,-8.703194,1.102048,-5.265367,-7.126313,-3.537932,-1.765924,8.445874,-2.733249,8.511043,0.730959,2.427597,8.432987,-9.652927,1.969196,5.151513,7.958550,2.522272,4.714497,6.046572,2.285506,1.911098,-7.087720,5.211797,-3.249491,-4.600383,-5.388158,-3.500245,8.680567,-4.824847,-9.230722,-9.999990,-5.842382,-9.266432,0.117762,1.431205,4.933698,-4.063298,6.207377],[-5.804146,-4.709555,-6.775985,-0.788300,-8.199514,6.853158,7.882652,7.789467,-3.131606,0.263633,4.462459,-9.377995,5.769761,3.379480,2.430298,2.613295,-4.872876,-3.854818,-1.555533,-5.387766,2.078317,8.916468,6.109682,-4.244481,-0.122332,-9.493448,-2.200450,1.675714,-0.536981,0.513129,6.765788,6.248873,7.091989,-1.177562,7.868235,-4.395247,3.601285,3.376926,-4.509622,-0.321792,2.329634,-0.209034,6.152239,2.375706,5.738779,-1.240294,1.949242,-0.892148,1.396083,-7.886565,3.487244,9.543445,-9.017441,8.421337,-7.879336,-1.079527,-5.064882,5.128567,-8.247984,9.558916,-4.279074,-4.189709,-4.493827,-7.907798,-4.127948,-5.642895,2.356049,-0.934502,-9.313102,0.617965,9.957882,-7.289654,-2.376530,9.554325,-7.097272,-9.634594,-9.892380,-1.968283,-9.782153,8.473180,1.391752,-7.271017,5.832511,-4.809010,3.962235,0.461778,9.373835,-0.011651,9.513625,-2.291022,4.391352,-9.813881,-0.620143,-5.477243,7.351807,2.729763,0.470387,-8.422064,-4.333060,-9.463712,-0.642889,-6.958878,7.255248,7.253906,-5.400121,-0.897841,1.983844,-4.627124,0.890888,-1.401495,-6.182928,0.030697,1.205842,-4.844111,-5.265785,1.220355,-1.295498,1.086404,8.828857,8.734139,-6.350782,9.946109,-5.768520,2.289603,-4.597664,3.899028,4.532157,-0.645125,-6.731001,-6.692690,0.723081,0.690848],[2.669014,2.367985,5.828688,8.780013,-4.658025,8.274837,-8.223523,-9.662961,-1.300797,0.923677,-9.871564,2.125117,-1.872370,0.922199,1.720865,-1.524936,4.999085,9.476783,-1.779555,3.599412,0.641610,7.191666,2.460828,-1.726834,7.680660,-2.427992,6.130635,-3.960447,9.373766,1.915905,-2.581509,-8.685351,9.204638,2.442173,-0.180723,-9.966768,5.777504,2.170472,1.243329,3.862109,1.196036,-4.736963,4.331018,-5.060990,5.628346,6.831739,3.771663,2.206061,-5.698747,-2.489218,4.967095,-3.221273,0.821198,-5.952824,-5.829242,0.646841,0.074417,-1.982491,4.093293,1.516619,7.055423,-8.683265,-6.321168,3.952780,-5.131826,8.591722,7.071746,1.305713,9.089055,1.615615,9.220684,3.497716,7.483364,3.213568,2.072766,0.649534,9.190571,8.705172,9.181038,-4.543517,6.659837,-5.398646,-1.616507,6.027440,3.140875,9.547162,6.622234,9.869537,-1.990590,0.938935,0.848572,-6.258384,8.855745,1.522849,2.634008,-4.331225,2.720148,9.259726,-2.096867,-3.814004,2.554795,-7.975892,-9.376689,1.789710,-3.087272,-3.510552,7.527824,0.348064,9.160533,-1.378035,-2.493381,2.048404,4.244342,9.097819,6.663181,4.102277,0.263433,0.992691,2.882082,5.219229,-0.730402,7.335940,-5.033311,-2.493827,1.575401,-2.810418,7.143741,-7.676474,-7.351463,5.963813,2.411736,1.997673],[-2.495249,-0.179679,2.072645,-9.618891,-2.330639,-7.906421,-7.014394,-9.422344,0.067307,0.812911,-5.820142,1.614084,-6.491945,-3.155068,5.361564,-2.018004,-0.624302,9.037507,-6.088245,8.675377,7.090979,-8.887121,-8.135244,-5.683070,6.998534,4.687409,7.323558,5.098858,4.163752,6.100782,9.909755,-0.443920,-8.290748,6.611687,3.844376,7.966548,-6.813147,-8.118754,-4.842252,-9.572194,7.562710,2.931803,-1.502390,-9.406953,-6.684950,-9.389027,2.868487,-7.046464,-4.207816,7.837223,-1.058849,5.826677,-4.025168,-1.992365,-3.375652,-1.505725,-1.277704,-7.767721,-8.801633,-4.532781,-4.474147,-3.542837,0.284666,4.093192,3.908990,-8.692558,-0.974029,-8.186483,3.077462,6.140632,-9.839752,9.737290,-1.039301,5.709812,-8.197629,6.573800,6.134798,1.071219,-5.042525,-3.518602,4.883821,-3.427964,-8.131192,-4.322495,9.225685,1.195891,3.584936,-6.847650,-6.309411,2.209336,1.384442,3.444121,-8.736460,4.582910,-5.635254,-8.872040,-1.519354,0.691563,-0.407873,8.738666,7.366152,3.016895,5.008933,-8.793921,3.710608,7.986499,3.036290,4.562046,6.282807,-3.507121,0.350721,3.456136,7.556204,-9.437961,-5.493461,7.808795,0.279570,-2.752248,-3.802672,-0.617770,-7.182492,-7.886778,7.814871,-4.014893,8.940466,-1.996301,4.511443,-2.781552,-9.193894,-3.921656,-3.760984,-7.251241],[-9.577058,6.383445,-7.245036,0.276538,6.050663,-8.088300,2.411408,5.143778,1.997605,0.370030,6.801847,-0.346843,2.629695,-1.734120,-1.661027,3.104335,1.835464,-2.804855,-5.685219,8.351336,3.217990,-6.464966,-0.633090,3.010409,2.167151,-0.098484,9.351950,-7.907672,-5.829409,-2.450786,-5.094628,1.177296,-1.617086,1.228627,8.742008,-3.272100,-7.413257,-1.970380,-8.216357,-7.886063,-9.259726,-4.384763,1.403607,-0.502169,4.713558,9.505189,-8.766352,-2.791662,-2.652622,-5.423374,-1.865821,-7.002085,9.230330,0.639838,8.407261,-2.809504,-6.424801,9.804039,2.079840,9.890673,-3.748393,-3.247946,-2.888649,-4.981914,-2.448568,-1.278194,1.437375,6.172499,4.668190,6.566680,5.578935,9.506801,-7.353317,3.575391,-2.812755,7.839861,2.072500,-4.448781,-0.783773,-8.368547,4.521743,8.813745,-9.486272,4.395405,4.593017,-2.993868,-1.074625,-9.633179,-2.940053,3.103833,8.004479,8.059112,-4.816264,-1.938879,-1.624680,-9.644935,3.158291,8.249399,-4.836683,-2.119937,4.973442,-9.564067,-7.596561,-9.780166,6.517399,2.038175,-0.401542,5.479862,-7.095267,4.813458,8.537469,-9.578454,1.591955,-8.782860,6.165610,0.149162,1.290309,-6.052287,4.120075,-9.212540,-0.483397,6.278996,-7.299008,-3.444973,-8.893590,-5.643570,5.174617,-9.233901,-2.499923,-3.939458,4.724869,-9.509969]], dtype = "float64")#candidate|2098|(9, 132)|const|float64
call_2097 = relay.TupleGetItem(func_730_call(relay.reshape(const_2098.astype('float64'), [12, 9, 11])), 0)
call_2099 = relay.TupleGetItem(func_733_call(relay.reshape(const_2098.astype('float64'), [12, 9, 11])), 0)
const_2104 = relay.const([[5.408913,5.283491,7.502574,-2.811880,-5.696113,6.182237,-6.438063,-4.283254,4.380610,1.733347,0.509895,-9.167280,3.077762,-9.241229,5.328941,3.741524,5.312756,9.674582,-8.894223,2.116152,7.973206,-9.761161,8.021512,-4.450907,-4.737534,-8.748423,-9.673041,0.741159,-5.022881,-5.342291,2.104059,-3.153809,1.461859,-7.186204,-7.376097,-0.341778,-4.420137,2.425699,-2.765423,-9.581625,0.763429,-2.771217,2.610035,7.291008,-2.395327,0.144025,-5.673986,-0.237143,2.698651,1.462703,-7.982510,4.255126,-2.036196,-3.494460,-3.299643,-3.775905,3.442269,1.953397,-9.343666,2.357117,6.673790,-1.291179,-3.661876,2.405281,9.564273,9.992989,-5.961770,-9.381569,-3.490069,3.008180,5.730014,-8.853059,8.396060,4.243155,4.668528,-4.439737,2.943895,-3.302975,4.878731,6.154367,-6.303841,8.685530,-4.788776,-6.613107,-9.239522,2.859381,5.402537,0.050600,-0.980319,-7.570178,0.099157,-0.721298,4.937825,-0.889026,-5.756166,-5.075022,4.748919,7.605460,8.403302,-5.451901,-1.293385,-7.585862,8.828930,-8.353504,-9.612140,7.750540,3.754684,0.536218,-7.079034,5.998320,4.538128,-8.102785,2.294332,-1.506838,6.613064,0.581028,9.380647,4.208925,7.515694,-4.604571,-0.334934,4.375988,2.634309,-2.770674,-7.386320,-4.045724,4.929999,-2.582711,-1.721174,-2.071315,9.549695,4.804830],[4.882074,-3.204372,-3.758126,-8.589092,-6.472628,-8.236688,-9.344012,-4.249599,1.817087,9.358557,1.866497,5.001475,-1.029117,5.269542,0.723908,-5.347524,7.624365,1.316946,8.148799,-1.053559,3.740447,3.684485,2.891745,4.891861,-9.848383,-5.697882,-3.385380,-1.218338,5.229240,5.899933,-0.972172,2.710755,-9.933759,-1.538949,-7.007696,3.616895,4.620663,-3.542460,-7.026292,2.755663,-5.721757,-3.347285,-2.280947,2.738278,-7.696222,-8.371000,8.011246,-2.469126,5.852036,6.771441,0.027776,2.034864,-6.728948,-5.095981,2.029954,5.263537,2.556700,5.111542,-0.098561,4.565520,5.503409,-6.178267,8.354484,-4.138035,6.700013,-1.030028,-6.840693,6.495850,2.016167,-3.414223,-3.867041,-7.684119,0.898450,5.510638,8.954373,7.711806,-6.127225,7.441556,-1.468883,-0.075147,9.951839,3.899394,5.968273,-8.701756,-8.412764,6.803361,0.615126,-7.099012,0.467284,-5.926969,-3.591500,1.847193,6.543908,-7.043118,-8.422628,4.030574,5.229387,-4.488376,-5.622106,-9.069175,5.459868,1.126949,7.051599,3.520761,2.709886,9.416099,7.399210,-9.465824,1.314018,0.681681,-6.525824,-3.862420,2.581300,-0.687764,4.621997,-1.746202,-7.128242,1.076326,4.070481,6.258249,7.678525,-6.500719,6.870250,3.648427,6.019911,6.979274,-4.665443,6.362647,-4.362150,7.702138,-4.190125,-6.934628],[0.805859,5.588005,-6.419868,2.550699,0.482436,8.634348,-6.498644,-8.441751,1.101359,2.762577,5.070996,6.743645,-3.979511,0.890216,-1.886396,-3.239928,-3.332124,-3.276457,-7.355614,-4.546855,9.619805,-2.064366,-1.533735,1.279955,-3.205166,2.729083,7.852968,2.500383,6.281556,8.074635,-1.954976,8.647781,0.541652,-7.107006,5.954564,6.380540,-9.844425,2.872320,-6.559153,-0.635541,5.485828,-9.460947,-3.023993,6.740265,5.638353,5.286072,-2.489276,-5.965477,-5.567903,6.115707,4.739807,-9.457432,-7.127929,-1.385202,-3.999016,-2.485993,9.035575,-3.142386,-9.002444,1.692392,-7.302109,-9.940954,-7.099745,-3.759130,5.592972,-1.537447,4.529024,-5.394096,-4.559291,-8.870075,6.358192,5.763173,-1.438593,-9.064992,8.364021,-8.262854,-3.996834,-1.394625,1.167474,3.855152,-4.685249,1.288376,-6.879355,1.477502,-1.290358,6.316355,-3.086204,-9.306166,-5.111676,-1.855068,2.582252,-3.647366,4.238941,-1.210402,6.810090,2.247598,7.705991,4.548449,-5.953209,7.582302,6.516745,-1.394808,4.414466,-0.341038,0.460246,6.658763,2.130698,-5.362385,-0.122393,1.383727,-8.107078,7.278680,3.235701,2.007472,1.013535,-6.957411,8.679406,5.091635,-3.868731,-8.724620,-9.947518,-0.674157,0.402639,-9.508001,4.582798,-2.031905,-7.314248,2.362309,-9.684096,3.154519,2.760115,-5.058894],[-7.311008,3.742091,9.721011,-2.325346,3.303124,3.444709,6.500786,-0.614406,2.179293,-4.652192,-4.416407,8.654633,-5.684761,6.108646,7.764139,-4.460133,9.921402,-3.374996,1.000512,-6.170961,0.417378,-0.901012,7.884324,5.493654,7.940145,-4.107533,8.277873,-5.900632,-5.466423,-9.984788,-7.382092,8.256359,-5.464966,-3.880945,-3.211572,0.792975,9.267437,-7.113024,-8.785416,8.177191,4.609952,-9.425970,-3.171116,-2.029623,-9.703810,-4.557710,7.010049,-0.131754,3.156298,2.064027,8.611910,9.381197,-3.558540,7.360575,6.958217,-1.254038,-8.877090,9.785739,-7.169412,9.672323,-4.256372,9.940790,3.051936,-4.797064,-9.704796,-1.127431,-8.924869,-5.262481,7.200561,1.889777,6.615755,0.931930,-3.826996,-1.138194,-9.464688,9.234633,3.885328,-5.024696,-1.087434,3.453059,-1.154394,-0.535453,5.846819,-2.905787,-1.556148,3.508449,2.079704,6.414147,9.557425,-5.367973,3.344900,3.082522,-4.280710,5.021554,-4.557824,-1.294971,-0.317434,0.490278,3.513472,-4.661434,2.041236,7.715256,-2.667111,3.200053,-5.647045,0.410191,1.975966,-8.485938,-5.662523,9.872923,-5.410905,-0.054074,-7.897236,-0.106280,2.070875,-4.777360,-4.517330,0.081244,-0.469202,6.657567,1.983548,6.167822,8.911290,-7.486638,7.707224,-4.751251,5.257210,1.887925,-2.396119,-8.469088,-8.050569,-7.584249],[-2.836818,-1.289325,-7.184587,-8.494661,-5.981871,5.510439,6.520590,-2.889681,7.018229,8.075734,4.520388,-1.488579,-2.533575,5.515760,8.146654,-3.432326,7.587489,0.090640,-5.535596,0.230060,5.820826,-7.101390,9.566359,0.824430,2.580746,3.830484,0.117879,-4.919096,-5.079258,4.110407,6.167175,-3.463653,-7.590581,0.989469,5.056569,0.658738,3.111379,6.184875,-4.596936,1.040950,7.039240,-4.229295,-3.876843,2.950949,-8.226638,2.689032,-6.461900,3.581070,8.504661,2.640997,6.146969,3.829575,-2.212747,9.135087,7.845958,-3.184591,-3.715541,-2.211481,3.936722,2.649322,-1.620704,6.821620,-0.112133,4.694089,6.972593,-6.901615,4.857669,7.069320,6.862336,8.986199,3.080954,7.011891,-0.057402,1.133387,2.233827,-0.662489,3.769339,-5.143837,-1.459711,3.099197,-1.318017,-2.710436,2.168630,1.690928,1.328015,1.037523,-0.284210,-5.791332,-0.460023,-5.534380,-9.625678,0.320203,7.045981,-0.114217,9.200428,4.374249,0.124093,-8.168043,-5.992483,3.834475,-2.941400,-9.931330,-0.693845,1.924480,-6.798390,-3.088011,-1.120565,-2.515343,-8.497552,0.281430,-0.080502,5.481803,4.450903,-2.552403,-3.556008,9.803463,5.395682,0.658082,-8.542794,-6.382466,9.892973,2.636755,9.268487,8.537948,-0.099881,5.887179,2.206757,3.552143,-2.167394,-1.876428,6.287773,4.826204],[-3.315149,-8.878063,-6.736155,5.408515,-7.696183,5.543821,2.440954,4.094999,-8.045322,-6.683105,9.766007,-5.459855,-8.890104,-0.151198,-0.896478,-3.264291,5.973575,4.871446,6.606218,7.299163,3.186681,5.848977,4.075141,8.871832,-2.777495,5.802383,5.244716,7.098382,2.255697,4.810039,-7.172491,-7.640459,2.786969,2.329960,-0.580884,-4.700750,2.007525,-3.492248,-3.540323,-6.842182,-7.134891,-2.850564,9.467241,8.977729,-5.386509,-0.382170,-6.822735,-8.481481,-4.839065,-3.473129,-4.900688,5.683945,0.502046,-2.830770,6.762970,-0.214583,-2.962287,6.636411,-7.198072,-3.456977,8.880645,5.841286,9.733090,9.344546,0.783321,6.074572,-5.432098,-2.390235,-2.289580,3.547194,6.622180,3.417290,0.161417,-2.236291,0.251202,-1.303023,2.127849,-9.452667,0.535282,5.912177,-7.826327,-3.471771,7.239042,-6.571068,4.844364,1.985320,2.485152,-0.552909,4.125459,-3.563377,-1.646913,6.411567,5.105658,-1.846787,-8.055147,7.486337,-6.468750,4.779698,-4.030190,-0.501546,-9.965616,4.496298,-6.187996,-8.352098,-0.174183,9.064130,7.975189,-1.260235,-3.677141,2.479317,-5.448465,5.926951,-4.982270,-6.225354,-5.953396,-4.973227,-7.440945,-4.856790,5.193865,-8.154428,-9.442781,-5.229254,2.691228,-5.175608,-7.250885,-1.685112,-2.696624,1.547712,-5.365982,-5.673743,-2.438382,2.291533],[-4.954920,-7.863762,-8.246568,7.105928,-5.357805,-1.674053,-4.100985,9.715919,-4.890728,-0.188620,-2.677673,4.756587,4.545853,1.486029,-6.197462,1.260788,5.422962,2.602600,-0.186986,-9.466264,-8.755656,-9.922186,4.056990,6.640266,7.133615,-8.148390,-9.840356,3.420844,6.432163,5.828353,7.580056,-8.728442,-1.288660,4.404280,-5.525871,6.320483,-4.713429,-5.227482,-8.676547,-0.270653,0.164326,1.389716,-1.152080,8.083275,9.247759,-1.693566,4.087922,3.936377,-5.660181,5.117100,-9.323554,1.605812,-6.193843,-2.254024,-9.653206,4.864037,-4.727389,6.602176,3.062588,-3.628215,8.935361,3.684661,-7.454284,6.707034,9.700956,8.214162,0.109813,5.584358,-9.999785,-2.194097,-1.869205,-0.551562,-4.322093,4.363844,0.806901,7.523585,-3.671658,1.843481,0.343081,6.553165,7.417807,8.393266,-2.153679,1.953592,-6.844035,3.700931,5.484827,1.687429,8.884682,8.271195,9.510836,8.820748,5.753632,-6.488259,2.800670,-2.090463,-6.009686,-6.446902,-5.535604,-3.116748,3.076284,1.441719,7.418050,2.782052,5.950357,8.844091,2.942181,7.447606,-8.054737,4.109410,1.419044,-9.947291,9.668990,-6.050303,-0.846139,6.811569,-9.227921,-8.444786,5.422589,-6.244563,-6.827181,9.569547,5.007584,6.893694,-8.215103,5.946937,-6.843541,-3.310523,-2.743265,8.671359,3.347784,2.644462],[3.616901,6.199849,5.698770,4.986497,-9.827144,9.812652,1.122861,0.080879,5.577039,-5.331282,-5.737800,-0.708103,8.824974,-5.397732,-5.753488,9.505597,7.555516,-0.106619,-9.037973,7.065524,3.379129,-8.374430,4.887808,-0.045510,2.457339,-2.447620,5.194064,-6.107461,-7.539800,6.075813,-5.039633,-1.813427,-6.693163,-0.650516,-4.408211,0.139991,-9.666093,3.344210,8.152987,8.634054,-1.196222,-8.351774,-1.675305,-9.404032,3.113741,5.459448,-5.364656,-1.549792,-9.424132,-3.746673,-6.688419,-5.123046,1.622701,-6.691234,-1.434002,0.579097,3.702594,-4.812101,7.143495,-3.974623,0.081266,-6.304883,1.149842,-8.486423,-6.404480,-6.344263,-0.279092,8.353868,-7.759573,-7.291146,1.470667,4.607482,0.589719,-5.508832,7.648441,-5.257049,-1.043790,-7.158684,0.040780,-4.815219,9.596437,-4.030252,9.658416,-6.512229,8.508089,-2.263900,-3.240987,7.681201,-3.984809,-8.983508,-2.593729,-5.884700,-3.544748,-3.085384,4.960254,2.446338,4.772232,-8.638893,5.631354,0.822091,8.645323,-3.954538,8.866939,5.052073,6.910428,4.043710,-2.461766,1.364753,5.625520,-6.876598,-9.256143,2.824987,9.252857,-7.484347,-5.225199,6.104285,-4.071982,-9.755028,7.654113,1.172470,1.205213,-9.578207,-5.989937,-9.636573,1.998398,-6.263908,-0.021852,-4.251901,6.823294,3.182278,-9.113020,1.976385],[-7.058896,-5.157338,5.522319,-9.242854,2.385239,5.527775,-4.679593,2.898908,-9.810156,1.776656,2.796709,5.423504,9.729431,2.440392,1.432863,-2.371066,-2.771867,-8.468404,-9.912416,-9.598490,0.189402,6.308940,-9.215375,-2.754999,-0.110233,6.936489,3.772306,-4.361295,3.679120,-4.747550,-2.132515,-1.090297,3.497986,-5.834497,-2.324258,0.626096,-0.252851,4.713215,9.660330,-4.399080,-3.369824,-9.497866,-2.367689,-8.250181,-8.881548,-7.042252,3.339362,3.971424,3.514891,-4.250933,-9.434679,-1.198831,-1.898831,4.622805,8.134284,8.707401,-7.809196,5.868318,-8.365196,-2.820896,-8.528419,9.206301,-3.243860,-8.396851,-0.352663,7.992290,7.349955,-9.011616,1.755632,3.307992,6.904977,-0.243500,-1.063087,-9.543882,8.502094,1.352262,7.444458,9.752309,5.728060,-4.048178,-9.164976,0.130198,4.883152,2.304800,2.876019,4.533109,3.849142,-0.587156,2.934534,-6.506022,-0.032939,-4.977346,-4.371927,8.891956,6.384153,-7.162972,1.642916,9.701658,8.319705,0.430941,-7.109014,7.905194,0.730981,4.178130,-2.439202,1.000934,-0.313437,-2.396037,-9.598726,-6.626944,7.313084,0.372320,-0.268411,3.438549,-8.820239,9.308513,3.611529,-1.892065,-5.444557,5.052220,-2.319686,7.069205,-8.717654,2.665687,6.884518,7.797487,-0.385564,4.698739,7.180417,-7.448493,-5.525964,-7.241183]], dtype = "float64")#candidate|2104|(9, 132)|const|float64
bop_2105 = relay.floor_divide(const_2098.astype('float64'), relay.reshape(const_2104.astype('float64'), relay.shape_of(const_2098))) # shape=(9, 132)
bop_2109 = relay.less_equal(const_2098.astype('bool'), relay.reshape(call_2097.astype('bool'), relay.shape_of(const_2098))) # shape=(9, 132)
bop_2112 = relay.less_equal(const_2098.astype('bool'), relay.reshape(call_2099.astype('bool'), relay.shape_of(const_2098))) # shape=(9, 132)
bop_2117 = relay.maximum(bop_2109.astype('uint8'), relay.reshape(const_2098.astype('uint8'), relay.shape_of(bop_2109))) # shape=(9, 132)
bop_2120 = relay.maximum(bop_2112.astype('uint8'), relay.reshape(const_2098.astype('uint8'), relay.shape_of(bop_2112))) # shape=(9, 132)
output = relay.Tuple([call_2061,call_2087,bop_2105,bop_2117,])
output2 = relay.Tuple([call_2062,call_2088,bop_2105,bop_2120,])
func_2121 = relay.Function([], output)
mod['func_2121'] = func_2121
mod = relay.transform.InferType()(mod)
output = func_2121()
func_2122 = relay.Function([], output)
mutated_mod['func_2122'] = func_2122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1845_call = mutated_mod.get_global_var('func_1845')
call_2234 = relay.TupleGetItem(func_1844_call(), 0)
call_2235 = relay.TupleGetItem(func_1845_call(), 0)
func_865_call = mod.get_global_var('func_865')
func_867_call = mutated_mod.get_global_var('func_867')
call_2236 = relay.TupleGetItem(func_865_call(), 0)
call_2237 = relay.TupleGetItem(func_867_call(), 0)
func_1874_call = mod.get_global_var('func_1874')
func_1878_call = mutated_mod.get_global_var('func_1878')
var_2240 = relay.var("var_2240", dtype = "int16", shape = (448,))#candidate|2240|(448,)|var|int16
call_2239 = relay.TupleGetItem(func_1874_call(relay.reshape(var_2240.astype('int16'), [14, 4, 8]), relay.reshape(var_2240.astype('int16'), [14, 4, 8]), ), 0)
call_2241 = relay.TupleGetItem(func_1878_call(relay.reshape(var_2240.astype('int16'), [14, 4, 8]), relay.reshape(var_2240.astype('int16'), [14, 4, 8]), ), 0)
output = relay.Tuple([call_2234,call_2236,call_2239,var_2240,])
output2 = relay.Tuple([call_2235,call_2237,call_2241,var_2240,])
func_2249 = relay.Function([var_2240,], output)
mod['func_2249'] = func_2249
mod = relay.transform.InferType()(mod)
mutated_mod['func_2249'] = func_2249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2250 = relay.var("var_2250", dtype = "int16", shape = (448,))#candidate|2250|(448,)|var|int16
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2251 = func_2249_call(var_2250)
output = call_2251
func_2252 = relay.Function([var_2250], output)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2279 = relay.TupleGetItem(func_2049_call(), 0)
call_2280 = relay.TupleGetItem(func_2050_call(), 0)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_2286 = relay.TupleGetItem(func_1308_call(), 0)
call_2287 = relay.TupleGetItem(func_1310_call(), 0)
output = relay.Tuple([call_2279,call_2286,])
output2 = relay.Tuple([call_2280,call_2287,])
func_2288 = relay.Function([], output)
mod['func_2288'] = func_2288
mod = relay.transform.InferType()(mod)
mutated_mod['func_2288'] = func_2288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2288_call = mutated_mod.get_global_var('func_2288')
call_2289 = func_2288_call()
output = call_2289
func_2290 = relay.Function([], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_2291 = func_431_call()
call_2292 = func_431_call()
var_2293 = relay.var("var_2293", dtype = "float64", shape = (12, 9, 11))#candidate|2293|(12, 9, 11)|var|float64
bop_2294 = relay.maximum(call_2291.astype('int8'), relay.reshape(var_2293.astype('int8'), relay.shape_of(call_2291))) # shape=(12, 9, 11)
bop_2297 = relay.maximum(call_2292.astype('int8'), relay.reshape(var_2293.astype('int8'), relay.shape_of(call_2292))) # shape=(12, 9, 11)
bop_2315 = relay.multiply(call_2291.astype('float32'), relay.reshape(var_2293.astype('float32'), relay.shape_of(call_2291))) # shape=(12, 9, 11)
bop_2318 = relay.multiply(call_2292.astype('float32'), relay.reshape(var_2293.astype('float32'), relay.shape_of(call_2292))) # shape=(12, 9, 11)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_2322 = relay.TupleGetItem(func_1803_call(), 1)
call_2323 = relay.TupleGetItem(func_1805_call(), 1)
output = relay.Tuple([bop_2294,bop_2315,call_2322,])
output2 = relay.Tuple([bop_2297,bop_2318,call_2323,])
func_2340 = relay.Function([var_2293,], output)
mod['func_2340'] = func_2340
mod = relay.transform.InferType()(mod)
var_2341 = relay.var("var_2341", dtype = "float64", shape = (12, 9, 11))#candidate|2341|(12, 9, 11)|var|float64
output = func_2340(var_2341)
func_2342 = relay.Function([var_2341], output)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_2412 = relay.TupleGetItem(func_414_call(), 0)
call_2413 = relay.TupleGetItem(func_416_call(), 0)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_2417 = relay.TupleGetItem(func_1803_call(), 0)
call_2418 = relay.TupleGetItem(func_1805_call(), 0)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_2432 = relay.TupleGetItem(func_1468_call(), 0)
call_2433 = relay.TupleGetItem(func_1469_call(), 0)
output = relay.Tuple([call_2412,call_2417,call_2432,])
output2 = relay.Tuple([call_2413,call_2418,call_2433,])
func_2447 = relay.Function([], output)
mod['func_2447'] = func_2447
mod = relay.transform.InferType()(mod)
output = func_2447()
func_2448 = relay.Function([], output)
mutated_mod['func_2448'] = func_2448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2288_call = mod.get_global_var('func_2288')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2457 = relay.TupleGetItem(func_2288_call(), 1)
call_2458 = relay.TupleGetItem(func_2290_call(), 1)
func_1844_call = mod.get_global_var('func_1844')
func_1845_call = mutated_mod.get_global_var('func_1845')
call_2467 = relay.TupleGetItem(func_1844_call(), 1)
call_2468 = relay.TupleGetItem(func_1845_call(), 1)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
const_2478 = relay.const([[1,-10,7,8,-6,-8,6,-10,1,-6,6,-2,-7,-4,4,6,-4,-4,4,-8,10,9,-3,5,-8,8,9,8,-7,-8,-8,4,1,-4,1,7,7,9,4,5,-5,7,5,1,8,2,-6,-8,6,3,-6,-9,6,-5,2,-2,7,2,-5,-5,-4,8,5,6,2,9,2,2,-7,-8,-1,7,-10,-1,2,7,-4,6,3,-9,3,-2,7,3,-3,3,9,-1,1,-3,7,-8,5,8,-6,-10,6,-4,-5,7,7,-1,1,7,-1,2,-10,-9,-4,2,6,1,-5,-5,3,8,1,6,1,-2,6,2,-8,-1,-10,4,-5,7,9,2,-3,2,2,-6,3,-5,5,5,10,6,8,-5,-7,5,-6,10,7,-5,-9,-2,-2,3,6,-1,-1,4,10,-4,-4,3,-4,-9,-4,-10,5,7,-10,-5,6,1,-6,1,-4,1,2,8,-6,8,1,-2,1,4,-10,8,-4,7,3,5,1,-9,-9,-10,4,-4,-8,-9,-6,10,1,-3,-8,6,8,-3,7,-3,-7,-1,1,-5,-4,7,7,-7,9,5,2,-9,5,9,-3,8,5,10,9,-4,10,-10,-3,7,-8,-9,8,-9,9,-4,-10,4,-6,-1,10,5,-1,8,3,-5,-2,1,2,2,10,4,2,7,-2,2,-8,-3,5,10,-1,-1,9,4,4,3,-5,5,-6,-7,3,-2,8,9,-1,3,5,-6,8,6,-7,5,5,-9,-4,-1,8,9,1,1,-8,5,-10,10,2,-9,4,-2,6,1,-10,7,6,-3,-4,8,-1,-7,-3,-3,2,5,-8,4,10,1,6,7,-4,8,7,1,-8,-2,-5,9,9,-3,2,-10,-3,-2,9,-2,4,-2,-7,-10,1,-9,9,4,-1,-4,6,-5,2,-1,-1,-7,-4,-5,-2,-7,8,-9,-3,4,4,9,9,1,3,6,7,-6,-2,4,-5,7,9,2,-1,-10,-4,6,-2,7,-9,9,6,-10,8,2,-7,9,-5,1,-7,2,9,5,5,9,6,-1,-5,3,-7,7,4,-1,6,6,5,7,3,5,5,-3,2,-5,5,10,-3,-5,2,-5,-9,6,-6,-8,-4,-9,9,-3,-6,-9,6,-2,-8,-3,6,-3,-8,1,-9,-7,5,5,9,-6,6,-7,-7,-9,-7,-7]], dtype = "int16")#candidate|2478|(1, 448)|const|int16
call_2477 = relay.TupleGetItem(func_1958_call(relay.reshape(const_2478.astype('int16'), [448,])), 0)
call_2479 = relay.TupleGetItem(func_1960_call(relay.reshape(const_2478.astype('int16'), [448,])), 0)
uop_2490 = relay.exp(call_2457.astype('float32')) # shape=(12, 9, 11)
uop_2492 = relay.exp(call_2458.astype('float32')) # shape=(12, 9, 11)
func_1057_call = mod.get_global_var('func_1057')
func_1061_call = mutated_mod.get_global_var('func_1061')
var_2495 = relay.var("var_2495", dtype = "float32", shape = (1092,))#candidate|2495|(1092,)|var|float32
const_2496 = relay.const([[-3.293978,-4.835628,6.878677,3.786779,-9.208001,-9.923906,-6.619533,-9.620200,7.150441,-6.343962,7.724871,2.987174,1.366243,-1.576379,-6.900035,0.389784,-7.010664,9.855899,1.022611,5.781829,2.968074,-7.786563,6.274822,1.932728,7.160193,-5.607650,-4.720297,-5.184490,8.458562,1.232808,-2.466090,-2.780627,-2.189464,-7.505785,-3.396435,-4.106757,2.228407,-6.730163,8.366221,4.173157,3.430242,-1.471819,-3.291445,6.069447,1.511793,5.847275,6.465649,0.982349,1.733815,7.787045,0.003565,-9.951749,-6.229521,-9.024817,-5.393214,0.654695,9.144318,6.737921,-0.538440,7.702094,5.521462,7.519878,-6.332134,5.192505,-0.183838,-9.691861,-3.052317,6.912236,6.317879,-3.624126,6.763401,6.491250,6.597126,-2.455808,3.365693,-4.798264,1.940432,-9.828785,-4.494379,8.297161,-1.067746,-3.159599,-5.369216,-4.634216,8.220345,2.426269,-8.433115,-0.059390,8.582730,9.844650,-3.764096,-7.063020,9.837483,-1.564246,-0.992228,-1.302041,7.934310,9.353382,-5.280909,5.663045,-7.808596,8.092659,0.139947,7.291149,-3.429656,8.198299,-9.527521,-1.126409,-8.746077,2.887669,0.752485,-4.791240,-7.796957,-8.347844,3.538386,4.275174,0.891197,-2.275984,-1.427535,5.006340,-0.706190,3.700959,-3.121625,-5.442587,-4.825612,3.613257,1.295530,-5.570393,6.345491,1.186242,-7.141681,7.948885,1.554253,-0.570908,9.332354,-0.636481,4.795589,-8.488062,-0.668690,-2.688966,-1.243199,-3.638253,2.915314,3.831061,1.029117,9.053692,3.626329,5.080053,-7.198382,-9.230736,-1.777105,0.610641,5.016694,4.280484,-2.020483,-8.384099,-6.630973,1.664271,-4.447836,-6.988224,4.182738,2.299468,-2.978494,8.853005,3.283719,-8.246237,-3.358389,0.311219,1.670236,2.000302,-8.845035,-7.037348,-8.715455,9.536813,4.351810,1.025376,8.248672,6.150675,7.438762,7.860162,2.724759,-1.369268,2.232904,0.994194,5.116465,2.206918,-5.371192,-1.700698,2.563890,4.416805,9.357039,9.718058,-8.790145,8.866810,0.260852,-9.666073,-6.226539,-7.070248,-4.026132,9.631294,3.868672,2.122637,-7.714001,-0.767769,0.914068,-6.426829,-0.297234,-8.303995,5.196268,1.441998,-4.062808,7.919182,-1.110080,-3.360013,0.664157,-2.126607,-9.654342,-1.026378,6.239639,-0.758528,5.379104,-9.855132,-1.641902,-8.519819,-5.100741,-5.103113,7.239666,4.413386,-0.900786,-1.147968,1.903140,-4.127201,-5.820505,7.749867,7.080861,3.576991,-1.834196,8.535834,-5.606720,-5.752696,2.161681,0.039778,-5.530951,-8.878111,-7.158448,-1.933731,-4.678256,-0.263816,-1.685437,-7.724328,1.163562,-4.575535,8.833364,4.165452,5.178365,-1.592345,-0.351470,2.094821,8.150045,5.299484,-3.402428,6.273536,-5.101698,2.272451,0.509189,1.574088,8.467949,7.425904,3.755821,-6.422058,-3.863205,1.175015,-5.090323,-6.066254,-4.008996,-9.524005,9.796752,9.901852,3.792481,-6.920120,9.296522,7.958491,8.022628,5.568089,4.666453,3.453139,8.900630,8.037285,5.709604,6.478861,7.400969,-2.539072,0.834939,6.147365,9.249078,-7.701315,7.469769,8.993056,-4.100205,9.587829,7.430316,8.345703,9.989906,-3.767236,-0.367336,-4.185480,9.021621,3.583855,2.438899,4.731937,-3.751469,8.885612,-5.127799,2.496239,2.843675,-4.424322,6.430184,5.351715,-8.044507,-2.681988,4.407526,9.685400,9.013931,-3.120087,7.885541,2.372387,5.789536,5.244933,-9.530372,-6.305284,7.998620,-3.933202,-0.385217,6.474455,4.129760,-2.757500,-8.064523,-3.009088,-0.212225,-9.043543,-1.551187,1.333337,-2.792108,7.014457,9.013292,0.099361,8.414256,-2.590189,1.847609,-2.420647,0.479228,-4.871805,-8.442959,8.928536,4.029566,-6.480109,-4.861915,1.002635,-8.005173,4.145641,-4.888175,-1.305245,-5.044916,1.642419,-3.858144,-7.915292,-6.082826,-6.268963,5.130912,6.626387,8.279877,5.471920,-7.149308,0.646316,1.106880,-5.663130,8.116250,7.832183,5.789943,7.110375,0.850433,7.131621,-0.163070,-2.691755,-8.215061,-5.615715,-4.802827,2.466640,-3.803779,0.856323,2.712317,3.050191,8.140503,-4.985298,-3.838969,-3.778254,1.097277,0.960829,4.805159,-0.862318,-3.980041,-6.992443,-3.001749,0.782853,-2.007770,-7.021804,-2.811406,-5.629702,6.622262,1.060731,-4.479309,1.279089,6.028984,-2.783078,-2.331249,-5.106755,5.350967,5.318867,-0.750858,8.937560,-2.076392,-9.708027,1.199096,-9.013459,0.690798,-9.211618,8.521264,-9.982062,0.896815,-8.710869,3.962211,-3.399702,8.428872,-8.872741,-9.378144,-1.398452,2.097296,0.300306,3.910786,8.823120,7.680894,-9.374173,3.836032,-1.012921,3.162358,4.421447,3.211297,-6.332517,1.822909,7.739850,-3.915827,-8.758098,-9.455755,-2.340321,9.997125,3.014439,-2.969765,-8.449228,-9.928562,-0.215994,4.970114,-4.925863,8.985868,6.690272,2.539900,-9.562851,-8.931056,4.030012,-6.491242,-0.225732,-1.590294,0.922009,9.469779,-0.991316,-9.757983,-3.691182,-0.806258,-5.679713,4.917865,7.864869,-4.386342,-4.297752,-5.668093,-0.110970,6.532412,8.966324,-5.879530,-1.711778,-5.939865,7.134637,7.804649,-8.369496,-6.096179,7.623540,-5.874997,-4.616094,-1.473022,8.960266,-7.889154,-1.100805,-6.900409,5.643420,-7.524796,-6.314152,1.105523,9.117688,8.927701,-7.418412,-8.618961,9.536489,-9.186915,-8.685222,-8.193050,-2.037467,3.079099,6.454009,-8.702795,-9.366871,-1.480092,8.386316,-0.452987,6.903905,-5.359708,3.771050,7.462023,6.544662,-3.981368,4.582807,0.338600,5.449980,-9.581150,-2.070309,-5.589979,0.443947,9.250816,-5.002311,4.469225,-2.644091,9.387494,-2.511185,-1.614213,4.960792,9.392411,-7.576382,-4.522708,9.313577,-8.552763,4.262751,-7.431197,9.877531,8.411056,8.776808,4.663285,-3.566875,0.617491,-1.155569,-1.349863,-4.321786,-5.841732,-5.040888,3.591593,0.433610,3.489011,-5.409452,7.197732,3.748187,7.598058,0.864760,-2.364776,0.859138,-0.234125,-1.805984,2.190120,4.795502,9.853488,-4.304114,2.092923,-2.909916,-4.548321,1.434602,-3.393749,-2.181380,7.543586,7.255995,7.017039,-6.783617,-4.028236,-5.637291,9.476863,6.830586,9.064393,5.492830,4.835564,6.829331,-5.402021,5.608119,-0.598984,-2.322270,7.839403,5.726466,7.039552,-9.473406,-9.302591,2.074308,-6.799945,-8.949303,8.058154,1.178928,8.315643,-2.674431,6.791535,2.292329,-8.372433,6.406077,2.601464,-2.210980,-4.862673,-7.070172,-7.122817,5.382271,-1.996837,-6.491452,8.562704,-3.551721,0.883551,8.643539,-3.236761,-2.704539,-6.235324,-4.658948,-9.796866,-6.485394,6.179627,-6.635335,1.296781,8.122778,5.377966,2.931809,2.536868,-2.119306,-7.263402,7.137629,-0.132021,0.654577,1.667874,-5.421342,0.307953,4.406154,0.313753,-5.606069,7.278568,-9.893905,4.127572,9.180958,1.798819,8.494632,8.105678,-5.575721,-2.159334,0.385787,4.513887,-9.912579,-9.507156,6.533998,9.119918,-0.668657,9.483947,3.249778,-6.758994,9.891822,-2.668274,-2.652277,0.009810,9.660135,-7.849995,-0.002667,-3.933560,-4.050591,-0.247638,-9.662916,9.391927,-1.576262,6.174090,-7.010060,-7.614301,7.491723,-9.544047,0.300476,-5.360794,-1.507318,6.814945,-4.801100,6.290900,-0.797386,0.989146,7.732314,-0.667893,0.097418,9.329775,1.035988,-8.439783,9.269648,-6.307957,-7.772634,9.106324,-0.947370,9.570763,8.252841,0.586250,-3.647641,-7.779408,-3.062192,4.131179,6.433600,5.428663,5.436774,0.413351,-4.222866,1.013987,2.198594,7.745533,5.636319,-8.611281,5.033469,-1.462916,-6.729433,8.523693,9.153374,6.443481,-6.031638,-8.177571,-6.618739,-1.738255,5.633051,0.561632,-2.885777,-6.154195,-8.565225,-4.355570,1.403197,0.872482,-4.563269,-5.608335,-3.967302,-0.818258,-2.827254,-7.159987,-8.658654,3.923844,-5.393395,-2.452458,-8.509989,-9.853575,-8.960925,-2.569456,0.910480,4.441741,1.463448,-9.404427,6.132450,-1.769074,2.830957,-0.895805,7.712505,0.440696,8.745181,-0.419612,8.656939,-2.894263,-5.233091,3.414318,-3.138997,5.541541,-9.359907,5.572310,-8.174647,5.665365,-9.270382,1.366172,9.868194,7.376890,3.936338,-9.680023,-2.182413,-8.466064,-6.749570,0.137495,-4.270367,-1.276306,-5.355650,7.473096,4.196472,-6.351786,-7.766655,4.030378,-5.285476,-6.108717,-9.784430,-3.538020,0.553765,0.169453,-4.906861,1.958094,3.982225,7.060693,7.882913,-2.722186,7.669451,9.035276,8.927676,-2.664840,3.409486,4.672223,0.208379,5.836723,-1.350780,-1.742026,5.480389,6.640544,1.421926,-3.649416,1.882534,7.379630,8.149909,7.458297,5.874269,-8.831060,-3.984658,5.043937,-8.755511,8.497030,8.460414,0.323233,9.580422,-4.804047,-5.621775,1.679551,8.030053,-0.929667,4.450340,0.410394,1.972611,-6.370621,0.048016,-3.670156,-4.051156,-5.024259,0.577193,-1.316878,9.333421,-2.552180,1.783771,8.453007,-8.436500,1.188071,6.534185,7.699604,-1.907119,5.804733,7.706721,6.425859,3.707396,2.692927,-7.607047,9.195601,-4.984246,5.514074,4.050619,7.628657,-8.078132,-2.401219,6.024642,3.907287,6.547679,-5.196978,-4.280133,-4.307027,0.461919,-5.105406,2.543611,0.102537,5.869890,0.180320,-8.346276,5.399689,4.111370,-2.380548,1.597200,-1.924047,-9.071208,7.438384,1.293463,-7.983554,7.477511,-0.397518,-8.423399,9.068114,-6.037282,0.790025,5.578430,9.075221,-5.998684,5.643855,9.044935,-5.966616,-9.999477,-4.655465,5.755596,0.818577,-3.761813,3.725265,9.713007,-0.348633,2.118088,-1.721841,-7.952839,2.196740,-0.908245,-6.477943,-3.052425,4.803385,-7.314961,-5.946493,8.756908,0.346409,0.534890,-7.472898,7.288213,-4.834025,-7.550512,7.960527,3.061797,9.421781,5.678615,4.722860,-2.169584,8.101166,2.358466,-6.431611,4.925968,-2.362870,-2.914638,6.504741,8.995425,-3.054777,2.892554,0.177352,-4.609811,-3.616015,-3.427825,-8.729694,-3.345013,-2.461154,5.308693,-6.811979,-0.863430,-3.292276,-1.691206,-0.662341,1.067769,1.814160,-3.258180,4.645930,-2.783569,-6.189589,-7.983851,9.946603,-8.215369,-8.888795,8.786620,-0.570567,3.120535,-1.180712,4.184690,8.394043,-5.987135,6.473546,8.474552,0.565205,-5.984075,5.833721,-3.411650,9.625024,-9.431644,2.591873,7.333491,0.266616,-0.966938,-2.716351,-1.962509,-6.993079,-3.346034,0.190048,9.418813,6.484283,-7.824281,-4.610348,-8.138011,-2.181337,3.016849,-0.260029,0.459178,6.630650,5.006844,8.594185,1.099798,-8.458301,5.917946]], dtype = "float64")#candidate|2496|(1, 1008)|const|float64
call_2494 = relay.TupleGetItem(func_1057_call(relay.reshape(var_2495.astype('float32'), [1092,]), relay.reshape(const_2496.astype('float64'), [1008,]), ), 3)
call_2497 = relay.TupleGetItem(func_1061_call(relay.reshape(var_2495.astype('float32'), [1092,]), relay.reshape(const_2496.astype('float64'), [1008,]), ), 3)
output = relay.Tuple([call_2467,call_2477,const_2478,uop_2490,call_2494,var_2495,const_2496,])
output2 = relay.Tuple([call_2468,call_2479,const_2478,uop_2492,call_2497,var_2495,const_2496,])
func_2498 = relay.Function([var_2495,], output)
mod['func_2498'] = func_2498
mod = relay.transform.InferType()(mod)
mutated_mod['func_2498'] = func_2498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2499 = relay.var("var_2499", dtype = "float32", shape = (1092,))#candidate|2499|(1092,)|var|float32
func_2498_call = mutated_mod.get_global_var('func_2498')
call_2500 = func_2498_call(var_2499)
output = call_2500
func_2501 = relay.Function([var_2499], output)
mutated_mod['func_2501'] = func_2501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1845_call = mutated_mod.get_global_var('func_1845')
call_2523 = relay.TupleGetItem(func_1844_call(), 0)
call_2524 = relay.TupleGetItem(func_1845_call(), 0)
output = relay.Tuple([call_2523,])
output2 = relay.Tuple([call_2524,])
func_2527 = relay.Function([], output)
mod['func_2527'] = func_2527
mod = relay.transform.InferType()(mod)
output = func_2527()
func_2528 = relay.Function([], output)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_2600 = relay.TupleGetItem(func_1803_call(), 1)
call_2601 = relay.TupleGetItem(func_1805_call(), 1)
func_1844_call = mod.get_global_var('func_1844')
func_1845_call = mutated_mod.get_global_var('func_1845')
call_2605 = relay.TupleGetItem(func_1844_call(), 1)
call_2606 = relay.TupleGetItem(func_1845_call(), 1)
var_2633 = relay.var("var_2633", dtype = "float64", shape = (1188,))#candidate|2633|(1188,)|var|float64
bop_2634 = relay.greater(call_2600.astype('bool'), relay.reshape(var_2633.astype('bool'), relay.shape_of(call_2600))) # shape=(1188,)
bop_2637 = relay.greater(call_2601.astype('bool'), relay.reshape(var_2633.astype('bool'), relay.shape_of(call_2601))) # shape=(1188,)
output = relay.Tuple([call_2605,bop_2634,])
output2 = relay.Tuple([call_2606,bop_2637,])
func_2640 = relay.Function([var_2633,], output)
mod['func_2640'] = func_2640
mod = relay.transform.InferType()(mod)
mutated_mod['func_2640'] = func_2640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2641 = relay.var("var_2641", dtype = "float64", shape = (1188,))#candidate|2641|(1188,)|var|float64
func_2640_call = mutated_mod.get_global_var('func_2640')
call_2642 = func_2640_call(var_2641)
output = call_2642
func_2643 = relay.Function([var_2641], output)
mutated_mod['func_2643'] = func_2643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2654 = relay.var("var_2654", dtype = "uint32", shape = (4, 5, 14))#candidate|2654|(4, 5, 14)|var|uint32
var_2655 = relay.var("var_2655", dtype = "uint32", shape = (4, 5, 14))#candidate|2655|(4, 5, 14)|var|uint32
bop_2656 = relay.bitwise_and(var_2654.astype('uint32'), relay.reshape(var_2655.astype('uint32'), relay.shape_of(var_2654))) # shape=(4, 5, 14)
output = relay.Tuple([bop_2656,])
output2 = relay.Tuple([bop_2656,])
func_2669 = relay.Function([var_2654,var_2655,], output)
mod['func_2669'] = func_2669
mod = relay.transform.InferType()(mod)
mutated_mod['func_2669'] = func_2669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2669_call = mutated_mod.get_global_var('func_2669')
var_2671 = relay.var("var_2671", dtype = "uint32", shape = (4, 5, 14))#candidate|2671|(4, 5, 14)|var|uint32
var_2672 = relay.var("var_2672", dtype = "uint32", shape = (4, 5, 14))#candidate|2672|(4, 5, 14)|var|uint32
call_2670 = func_2669_call(var_2671,var_2672,)
output = call_2670
func_2673 = relay.Function([var_2671,var_2672,], output)
mutated_mod['func_2673'] = func_2673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_2708 = relay.TupleGetItem(func_1432_call(), 0)
call_2709 = relay.TupleGetItem(func_1434_call(), 0)
output = relay.Tuple([call_2708,])
output2 = relay.Tuple([call_2709,])
func_2710 = relay.Function([], output)
mod['func_2710'] = func_2710
mod = relay.transform.InferType()(mod)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mutated_mod.get_global_var('func_2710')
call_2711 = func_2710_call()
output = call_2711
func_2712 = relay.Function([], output)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_2744 = relay.TupleGetItem(func_414_call(), 0)
call_2745 = relay.TupleGetItem(func_416_call(), 0)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_2758 = relay.TupleGetItem(func_1308_call(), 0)
call_2759 = relay.TupleGetItem(func_1310_call(), 0)
func_2640_call = mod.get_global_var('func_2640')
func_2643_call = mutated_mod.get_global_var('func_2643')
call_2769 = relay.TupleGetItem(func_2640_call(relay.reshape(call_2758.astype('float64'), [1188,])), 0)
call_2770 = relay.TupleGetItem(func_2643_call(relay.reshape(call_2758.astype('float64'), [1188,])), 0)
func_2640_call = mod.get_global_var('func_2640')
func_2643_call = mutated_mod.get_global_var('func_2643')
call_2772 = relay.TupleGetItem(func_2640_call(relay.reshape(call_2758.astype('float64'), [1188,])), 0)
call_2773 = relay.TupleGetItem(func_2643_call(relay.reshape(call_2758.astype('float64'), [1188,])), 0)
output = relay.Tuple([call_2744,call_2758,call_2769,call_2772,])
output2 = relay.Tuple([call_2745,call_2759,call_2770,call_2773,])
func_2796 = relay.Function([], output)
mod['func_2796'] = func_2796
mod = relay.transform.InferType()(mod)
output = func_2796()
func_2797 = relay.Function([], output)
mutated_mod['func_2797'] = func_2797
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2857 = relay.var("var_2857", dtype = "bool", shape = ())#candidate|2857|()|var|bool
var_2858 = relay.var("var_2858", dtype = "bool", shape = (8, 6, 7))#candidate|2858|(8, 6, 7)|var|bool
bop_2859 = relay.logical_or(var_2857.astype('bool'), var_2858.astype('bool')) # shape=(8, 6, 7)
bop_2872 = relay.subtract(var_2857.astype('float64'), var_2858.astype('float64')) # shape=(8, 6, 7)
output = relay.Tuple([bop_2859,bop_2872,])
output2 = relay.Tuple([bop_2859,bop_2872,])
func_2883 = relay.Function([var_2857,var_2858,], output)
mod['func_2883'] = func_2883
mod = relay.transform.InferType()(mod)
mutated_mod['func_2883'] = func_2883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2883_call = mutated_mod.get_global_var('func_2883')
var_2885 = relay.var("var_2885", dtype = "bool", shape = ())#candidate|2885|()|var|bool
var_2886 = relay.var("var_2886", dtype = "bool", shape = (8, 6, 7))#candidate|2886|(8, 6, 7)|var|bool
call_2884 = func_2883_call(var_2885,var_2886,)
output = call_2884
func_2887 = relay.Function([var_2885,var_2886,], output)
mutated_mod['func_2887'] = func_2887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_2918 = relay.TupleGetItem(func_414_call(), 1)
call_2919 = relay.TupleGetItem(func_416_call(), 1)
output = relay.Tuple([call_2918,])
output2 = relay.Tuple([call_2919,])
func_2946 = relay.Function([], output)
mod['func_2946'] = func_2946
mod = relay.transform.InferType()(mod)
output = func_2946()
func_2947 = relay.Function([], output)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_2953 = relay.TupleGetItem(func_1647_call(), 1)
call_2954 = relay.TupleGetItem(func_1648_call(), 1)
func_1856_call = mod.get_global_var('func_1856')
func_1858_call = mutated_mod.get_global_var('func_1858')
call_2959 = relay.TupleGetItem(func_1856_call(), 0)
call_2960 = relay.TupleGetItem(func_1858_call(), 0)
output = relay.Tuple([call_2953,call_2959,])
output2 = relay.Tuple([call_2954,call_2960,])
func_2969 = relay.Function([], output)
mod['func_2969'] = func_2969
mod = relay.transform.InferType()(mod)
output = func_2969()
func_2970 = relay.Function([], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1712_call = mod.get_global_var('func_1712')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_2979 = relay.TupleGetItem(func_1712_call(), 1)
call_2980 = relay.TupleGetItem(func_1713_call(), 1)
var_2989 = relay.var("var_2989", dtype = "float32", shape = (16, 4, 4))#candidate|2989|(16, 4, 4)|var|float32
bop_2990 = relay.maximum(call_2979.astype('int8'), relay.reshape(var_2989.astype('int8'), relay.shape_of(call_2979))) # shape=(16, 4, 4)
bop_2993 = relay.maximum(call_2980.astype('int8'), relay.reshape(var_2989.astype('int8'), relay.shape_of(call_2980))) # shape=(16, 4, 4)
bop_2997 = relay.bitwise_and(call_2979.astype('int32'), relay.reshape(var_2989.astype('int32'), relay.shape_of(call_2979))) # shape=(16, 4, 4)
bop_3000 = relay.bitwise_and(call_2980.astype('int32'), relay.reshape(var_2989.astype('int32'), relay.shape_of(call_2980))) # shape=(16, 4, 4)
uop_3008 = relay.atan(bop_2997.astype('float64')) # shape=(16, 4, 4)
uop_3010 = relay.atan(bop_3000.astype('float64')) # shape=(16, 4, 4)
bop_3016 = relay.greater_equal(uop_3008.astype('bool'), relay.reshape(bop_2990.astype('bool'), relay.shape_of(uop_3008))) # shape=(16, 4, 4)
bop_3019 = relay.greater_equal(uop_3010.astype('bool'), relay.reshape(bop_2993.astype('bool'), relay.shape_of(uop_3010))) # shape=(16, 4, 4)
output = relay.Tuple([bop_3016,])
output2 = relay.Tuple([bop_3019,])
func_3020 = relay.Function([var_2989,], output)
mod['func_3020'] = func_3020
mod = relay.transform.InferType()(mod)
mutated_mod['func_3020'] = func_3020
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3021 = relay.var("var_3021", dtype = "float32", shape = (16, 4, 4))#candidate|3021|(16, 4, 4)|var|float32
func_3020_call = mutated_mod.get_global_var('func_3020')
call_3022 = func_3020_call(var_3021)
output = call_3022
func_3023 = relay.Function([var_3021], output)
mutated_mod['func_3023'] = func_3023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3025 = relay.var("var_3025", dtype = "uint64", shape = (3, 2, 8))#candidate|3025|(3, 2, 8)|var|uint64
const_3026 = relay.const([[[1,-7,4,-5,-8,-8,6,2],[-9,10,3,-8,1,-6,-3,6]],[[-10,2,-4,-2,-7,-7,2,6],[6,-7,-4,-1,-7,7,-9,3]],[[-5,3,1,2,-6,2,8,9],[-2,2,-5,4,-9,-1,3,8]]], dtype = "uint64")#candidate|3026|(3, 2, 8)|const|uint64
bop_3027 = relay.greater_equal(var_3025.astype('bool'), relay.reshape(const_3026.astype('bool'), relay.shape_of(var_3025))) # shape=(3, 2, 8)
output = bop_3027
output2 = bop_3027
func_3030 = relay.Function([var_3025,], output)
mod['func_3030'] = func_3030
mod = relay.transform.InferType()(mod)
var_3031 = relay.var("var_3031", dtype = "uint64", shape = (3, 2, 8))#candidate|3031|(3, 2, 8)|var|uint64
output = func_3030(var_3031)
func_3032 = relay.Function([var_3031], output)
mutated_mod['func_3032'] = func_3032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_3044 = relay.TupleGetItem(func_1432_call(), 1)
call_3045 = relay.TupleGetItem(func_1434_call(), 1)
output = relay.Tuple([call_3044,])
output2 = relay.Tuple([call_3045,])
func_3046 = relay.Function([], output)
mod['func_3046'] = func_3046
mod = relay.transform.InferType()(mod)
mutated_mod['func_3046'] = func_3046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mutated_mod.get_global_var('func_3046')
call_3047 = func_3046_call()
output = call_3047
func_3048 = relay.Function([], output)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2527_call = mod.get_global_var('func_2527')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_3095 = relay.TupleGetItem(func_2527_call(), 0)
call_3096 = relay.TupleGetItem(func_2528_call(), 0)
var_3101 = relay.var("var_3101", dtype = "float32", shape = (16, 4, 4))#candidate|3101|(16, 4, 4)|var|float32
bop_3102 = relay.divide(call_3095.astype('float64'), relay.reshape(var_3101.astype('float64'), relay.shape_of(call_3095))) # shape=(16, 4, 4)
bop_3105 = relay.divide(call_3096.astype('float64'), relay.reshape(var_3101.astype('float64'), relay.shape_of(call_3096))) # shape=(16, 4, 4)
func_2249_call = mod.get_global_var('func_2249')
func_2252_call = mutated_mod.get_global_var('func_2252')
var_3117 = relay.var("var_3117", dtype = "int16", shape = (2, 224))#candidate|3117|(2, 224)|var|int16
call_3116 = relay.TupleGetItem(func_2249_call(relay.reshape(var_3117.astype('int16'), [448,])), 3)
call_3118 = relay.TupleGetItem(func_2252_call(relay.reshape(var_3117.astype('int16'), [448,])), 3)
output = relay.Tuple([bop_3102,call_3116,var_3117,])
output2 = relay.Tuple([bop_3105,call_3118,var_3117,])
func_3121 = relay.Function([var_3101,var_3117,], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
var_3122 = relay.var("var_3122", dtype = "float32", shape = (16, 4, 4))#candidate|3122|(16, 4, 4)|var|float32
var_3123 = relay.var("var_3123", dtype = "int16", shape = (2, 224))#candidate|3123|(2, 224)|var|int16
output = func_3121(var_3122,var_3123,)
func_3124 = relay.Function([var_3122,var_3123,], output)
mutated_mod['func_3124'] = func_3124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3162 = relay.TupleGetItem(func_2049_call(), 0)
call_3163 = relay.TupleGetItem(func_2050_call(), 0)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3164 = relay.TupleGetItem(func_2969_call(), 0)
call_3165 = relay.TupleGetItem(func_2970_call(), 0)
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_3210 = relay.TupleGetItem(func_1990_call(), 0)
call_3211 = relay.TupleGetItem(func_1991_call(), 0)
output = relay.Tuple([call_3162,call_3164,call_3210,])
output2 = relay.Tuple([call_3163,call_3165,call_3211,])
func_3222 = relay.Function([], output)
mod['func_3222'] = func_3222
mod = relay.transform.InferType()(mod)
output = func_3222()
func_3223 = relay.Function([], output)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3231 = relay.var("var_3231", dtype = "bool", shape = (10, 15, 4))#candidate|3231|(10, 15, 4)|var|bool
var_3232 = relay.var("var_3232", dtype = "bool", shape = (10, 15, 4))#candidate|3232|(10, 15, 4)|var|bool
bop_3233 = relay.logical_or(var_3231.astype('bool'), relay.reshape(var_3232.astype('bool'), relay.shape_of(var_3231))) # shape=(10, 15, 4)
output = bop_3233
output2 = bop_3233
func_3244 = relay.Function([var_3231,var_3232,], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
mutated_mod['func_3244'] = func_3244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mutated_mod.get_global_var('func_3244')
var_3246 = relay.var("var_3246", dtype = "bool", shape = (10, 15, 4))#candidate|3246|(10, 15, 4)|var|bool
var_3247 = relay.var("var_3247", dtype = "bool", shape = (10, 15, 4))#candidate|3247|(10, 15, 4)|var|bool
call_3245 = func_3244_call(var_3246,var_3247,)
output = call_3245
func_3248 = relay.Function([var_3246,var_3247,], output)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_3343 = relay.TupleGetItem(func_1308_call(), 0)
call_3344 = relay.TupleGetItem(func_1310_call(), 0)
output = relay.Tuple([call_3343,])
output2 = relay.Tuple([call_3344,])
func_3362 = relay.Function([], output)
mod['func_3362'] = func_3362
mod = relay.transform.InferType()(mod)
mutated_mod['func_3362'] = func_3362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mutated_mod.get_global_var('func_3362')
call_3363 = func_3362_call()
output = call_3363
func_3364 = relay.Function([], output)
mutated_mod['func_3364'] = func_3364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_3379 = relay.TupleGetItem(func_1308_call(), 0)
call_3380 = relay.TupleGetItem(func_1310_call(), 0)
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_3402 = func_1508_call()
call_3403 = func_1508_call()
output = relay.Tuple([call_3379,call_3402,])
output2 = relay.Tuple([call_3380,call_3403,])
func_3415 = relay.Function([], output)
mod['func_3415'] = func_3415
mod = relay.transform.InferType()(mod)
output = func_3415()
func_3416 = relay.Function([], output)
mutated_mod['func_3416'] = func_3416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_3449 = relay.TupleGetItem(func_1647_call(), 0)
call_3450 = relay.TupleGetItem(func_1648_call(), 0)
output = relay.Tuple([call_3449,])
output2 = relay.Tuple([call_3450,])
func_3467 = relay.Function([], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
output = func_3467()
func_3468 = relay.Function([], output)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_3480 = relay.TupleGetItem(func_1308_call(), 0)
call_3481 = relay.TupleGetItem(func_1310_call(), 0)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_3486 = relay.TupleGetItem(func_3362_call(), 0)
call_3487 = relay.TupleGetItem(func_3364_call(), 0)
func_631_call = mod.get_global_var('func_631')
func_634_call = mutated_mod.get_global_var('func_634')
const_3493 = relay.const([[8.831244,-0.157635,-1.493247,-7.815097,6.935373,4.302278,-0.454492,6.445711,-4.690262,-1.439378,-9.638400,7.262578,-5.043075,5.667993,-9.851651,3.093102,2.769181,-1.290924,-6.188435,-4.186111,-5.310289,1.650891,3.945625,-3.625768,4.495190,-6.246683,6.076389,-7.934140,-4.380750,-0.616070,-5.213116,-0.435809,5.514209,8.233122,7.615676,-1.049627,-0.958465,-4.558639,-9.498405,1.241871,0.766654,1.447874,4.188448,-4.221107,-1.295991,-8.412711,-9.942684,-4.845785,4.536964,9.395349,1.774491,-9.841145,-3.646730,-9.204636,3.458349,-6.381397,9.156778,-1.161213,0.409559,8.540123,8.717169,-6.818580,-4.188329,-9.631017,3.744400,9.660766,1.255534,-4.542703,-6.560786,-8.962616,-6.355474,1.582025,-7.606144,8.554281,-1.313341,4.756695,-5.861650,-5.034176,-2.691295,4.309976,-7.479001,6.574337,-8.015960,8.034286,-0.046454,0.013934,-1.836285,-8.194197,-5.339655,-3.135606,-4.561524,-2.411034,-8.647579,-5.020005,9.754873,-9.205072,-3.954207,3.761352,9.836631,9.827910,-8.835917,-9.038117,2.210696,-5.699739,-4.106164,6.078121,-8.018490,-8.582614,-3.911315,-4.180352,-7.585450,1.062751,-0.800652,6.419323,-5.294007,2.535919,7.838733,9.070488,-9.838671,-0.214203,4.545599,-9.479866,-1.896639,-5.874168,0.391238,-6.475796,8.077512,-4.157741,3.532514,1.039890,-7.056838,-9.559246,-2.712785,4.949083,7.468279,-0.206338,7.070216,5.149790,6.113101,-3.514468,-1.543339,-3.360424,-9.505359,6.668091,-5.006072,5.416425,7.949603,4.471687,-0.627527,-3.752798,-4.825837,-2.519632,8.324123,1.985817,4.296558,5.334593,8.294097,9.293895,-2.537172,4.907159,3.877229,-9.677926,-0.688048,-7.642241,-7.019232,6.074144,3.633116,-0.279512,5.463661,5.287323,0.155397,-9.984258,-3.774418,-9.268030,-6.904918,-2.865810,5.798015,-1.265297,-3.928071,-2.954368,4.547320,0.579682,7.622585,-7.407577,-6.194170,0.709526,-8.879291,-8.669988,3.869850,-4.091419,-0.392863,0.251628,9.865958,4.204654,-7.573684,-0.859608,2.084963,6.118742,0.431005,0.241119,7.286475,9.981984,-9.123693,3.398731,-6.676045,2.356810,-6.867165,-9.660604,-0.855448,3.468416,5.641914,8.005459,1.979282,2.399060,-1.440848,-2.963133,8.148059,3.852572,4.988475,5.504297,-7.737881,-8.173897,8.125653,-0.631228,2.839945,3.393843,9.644551,6.347567,6.720812,0.949694,-6.433584,8.366509,5.227029,5.659701,1.942644,2.213215,-2.513455,-8.145161,-3.498240,9.122495,-3.705396,2.553488,8.867137,6.697275,7.898456,-2.286353,-2.297533,-7.172303,5.886548,7.113003,-3.592925,-1.446138],[-1.817324,2.513771,-5.494939,-8.390007,9.154718,-9.005043,9.254196,7.919296,6.501963,-3.541638,8.210660,8.078596,-0.889863,-1.327133,4.196641,7.545706,9.473014,1.835428,-5.228154,9.258544,8.685433,-1.948037,4.320696,8.861762,-9.478448,-3.837185,-4.511619,-9.679842,-8.127489,-4.322236,0.588770,-6.908037,-8.604455,-4.088477,0.638837,-5.661183,-1.745937,3.266552,-1.510862,-2.965330,-0.059912,-6.937342,-0.783775,-2.494258,1.662207,4.178427,-2.935983,-1.093008,2.033504,2.420204,-4.720480,4.473684,5.453367,-9.210707,2.491348,-1.831918,8.729886,8.484976,5.703477,3.611362,-9.245145,8.305967,-1.532837,3.901492,5.370670,-7.429775,-0.762575,-8.662930,4.710820,7.086577,6.650651,-3.749932,-6.098431,-5.814043,8.951957,5.635600,-4.111870,2.584780,-8.605957,-3.318279,0.976302,0.107505,-1.293974,9.250724,-7.060687,5.783145,-3.765922,-8.792678,0.456517,-4.310622,-9.800181,-9.879837,9.202003,6.796393,-7.793143,7.861769,7.397164,4.772381,-8.968944,7.746255,7.122419,-5.056380,-9.925426,-2.198840,5.827572,7.583844,-7.546297,3.613758,3.807380,4.412759,-1.074897,8.679469,4.802187,-2.207001,-3.059768,-3.249953,-2.719232,4.807039,-3.255562,-1.740476,3.427622,1.114505,2.346018,2.089876,-8.895565,-5.841221,9.038643,-5.510557,-8.584881,-4.449088,-7.089393,-1.350638,0.291010,0.527020,6.018581,1.333131,6.701817,0.874176,4.925657,1.322198,5.388127,3.927754,-5.523406,-3.147568,-1.489965,2.940007,0.222934,5.978010,9.603619,-3.192904,-4.592940,7.635191,8.069224,-0.471422,2.989989,-6.095382,6.473492,1.374322,5.215388,-9.607598,-1.809951,-3.883506,8.335344,-7.419498,-1.897916,5.680761,1.108087,2.029177,9.817276,0.821864,9.945375,-2.586525,8.590017,-9.750044,1.854706,-0.220576,-3.528526,6.823535,-5.137302,5.703572,1.395089,1.772242,4.279463,3.707209,-6.880896,-9.612478,-0.366677,-2.946225,-9.720890,-3.390635,2.824344,-9.376280,1.620329,2.768897,8.645721,-8.626132,-5.397655,1.976674,-4.915451,-8.903499,-6.584823,1.845599,5.716140,-7.610847,-9.182970,6.084664,-3.986606,-8.550919,-9.470754,3.372438,-9.468857,-1.317643,-7.513348,-2.556456,-3.334175,1.820431,1.277700,5.415669,0.191783,9.102695,-1.871857,0.866170,-7.668366,-1.327712,-9.941352,-2.691624,3.316461,9.011711,7.791863,5.861624,-6.434838,-5.791152,2.159142,7.596670,4.663767,-2.957509,2.941755,-2.522340,5.680303,-4.974273,3.167024,-9.487348,9.811455,-5.027177,-7.543426,-7.300347,-7.776495,-5.891191,-7.753803,-4.170508,-9.535880,5.087188],[5.787371,2.204663,-7.202096,-5.526990,8.713200,6.946349,-5.553432,5.991195,3.556755,1.269429,-7.572482,5.429001,7.743610,-1.352096,-0.205623,-9.997650,-5.658007,1.185585,6.862031,-8.406549,-4.824903,-6.300474,8.509607,6.898239,0.247089,-3.812949,2.078731,7.205747,-0.212204,-1.161159,1.633024,-2.812148,0.069240,0.868187,6.122182,3.228385,3.588884,-1.453921,9.868365,9.501523,-3.277327,-7.789398,6.301175,4.386458,9.932705,-1.302866,-0.177335,-4.506558,-9.666658,-4.632924,5.323860,-1.886302,9.386482,5.982967,-7.091896,-8.290192,4.965612,-0.790485,-2.831328,-4.289686,-2.825423,-9.804714,7.332521,-0.784535,-7.513299,0.091484,-2.087132,-0.624715,-1.248936,-8.828469,-4.218901,6.842133,9.120071,-3.233723,2.915867,9.274949,-7.460527,-1.375805,5.600911,5.879417,-9.450572,5.469924,-9.902296,-7.132386,-4.106372,-1.169630,8.107726,-5.124606,9.042416,-2.607783,8.368822,-6.217956,-4.289706,5.916286,7.154788,2.325195,3.502350,-4.587949,7.011324,-6.390953,9.591016,-1.908240,-5.139344,9.438077,-5.524697,6.175096,-8.619584,6.023677,-6.846787,-0.046401,0.713574,6.379300,-8.100888,6.206126,7.057236,5.937238,-2.919987,7.806482,-1.933402,-7.246391,1.806464,-2.238908,-1.617705,-6.574011,-0.375249,-3.874930,-8.847334,-6.659955,-7.854807,-4.425096,4.211935,-5.220157,-5.920765,0.922196,5.239590,8.223997,4.409235,-9.022716,9.656270,-2.549307,0.118687,7.022108,7.424980,-2.053880,0.255861,4.204029,5.393603,-3.737176,2.337168,-9.451029,-4.359376,7.471121,-9.663454,8.577378,-1.680788,2.238760,-4.448730,-8.461531,0.039206,2.107576,9.095388,2.311203,7.185001,-9.964695,0.278648,2.767513,-5.351441,4.940857,-4.151227,-5.247629,4.942339,-2.076333,3.081086,6.397633,3.486922,4.389946,3.907003,4.748977,4.662352,0.022215,2.345184,-0.137510,-2.950959,-3.751181,-4.077304,9.029846,-6.328524,7.882006,-2.002090,-4.932262,-9.190039,3.591686,6.881870,-9.981099,-5.927487,2.859634,-8.902990,-3.996885,-7.721799,4.221841,2.988083,-2.977495,-5.238164,4.491097,-1.580179,-5.259559,-6.556029,-9.368009,2.904443,-6.010049,-3.007737,5.009931,6.244712,2.338357,-1.788934,-4.042760,-2.539165,7.005034,-7.737406,1.201630,3.802294,6.319100,6.814302,1.123602,-9.648157,5.148172,7.193219,5.907250,-5.641480,-6.075139,6.025107,-4.645923,0.800733,-7.016642,9.797961,-6.332728,-0.925319,-8.309126,8.716133,-2.195833,4.769717,5.123614,-6.761273,6.665773,6.737574,7.351996,-5.322808,-7.383146,5.436019,2.654052,2.156289,8.167445],[-0.275148,4.905608,8.187218,4.056455,9.270855,-7.408547,-7.925178,-8.254193,2.946863,-0.598643,-1.820609,-1.868455,-1.145149,-2.935491,0.281076,9.703328,6.960581,-3.907380,-2.553473,4.803960,-3.425107,1.357502,7.275747,-5.354251,8.753023,-0.153500,-7.601626,9.151874,-2.319673,-5.436021,-5.713192,6.676412,-4.599443,-9.212663,-4.071372,4.289184,9.065219,1.683362,-1.616247,-2.001158,-2.617869,7.445203,0.688360,4.046145,-5.245211,0.977101,0.518057,-9.686579,-0.868985,-8.857522,-1.397222,1.081053,-4.023308,-0.899955,5.309544,-4.299524,4.973278,-0.485965,7.156929,7.176110,0.862844,-2.287567,4.672447,-0.291906,6.262174,-7.594225,-1.002786,-4.443959,-6.386200,-6.736155,6.066130,-3.419393,-1.976626,6.934158,-7.386845,-4.740047,1.264855,7.444676,6.023636,7.238199,-3.561386,9.392219,8.439377,-0.867804,-9.985693,5.384909,6.503477,7.853256,-4.225011,7.354218,5.230953,-1.622548,-5.982819,5.460222,-7.085522,1.256869,2.492139,6.829192,-0.185512,-9.512130,-8.298869,-4.501747,8.460598,-8.666993,-7.780330,7.103666,8.961117,-4.496112,4.308910,8.677831,-8.523990,-8.879762,6.068657,3.361801,6.980597,1.464773,7.002807,-2.162869,3.757986,4.419913,-8.953429,2.965123,-4.590769,-1.088683,6.102128,2.020099,-4.058541,8.356579,-1.397724,1.420282,5.431938,6.901459,-6.018321,1.426068,-9.370922,8.854537,5.978119,-1.381237,-7.464908,8.435280,3.868712,-4.130964,8.578657,0.958059,-8.824622,3.502337,9.880141,-0.664598,-4.647893,7.996560,-6.436089,-2.135645,9.700076,-7.348849,6.564506,-4.580654,-2.379996,-2.540289,-5.325302,5.679995,-4.052475,-4.205722,-6.573574,7.110586,7.062006,2.794558,6.983097,3.231910,4.189385,-7.950256,-5.546000,5.387774,2.281763,-6.770739,2.605024,-8.747732,-5.119518,-8.817043,-4.343482,-5.874473,-0.850676,8.873960,8.475557,2.751640,-7.649417,5.260459,-1.379342,-6.719998,-1.458849,8.270610,-0.622839,6.352176,6.590397,9.320448,0.309003,5.309185,-9.201230,0.677591,4.285721,-5.861786,-0.734141,-2.811527,-8.134122,3.136601,9.761524,-7.782062,-7.803551,2.173485,6.081783,2.494743,-0.036732,4.923365,-5.739008,-1.507872,8.195926,3.930598,-8.944705,-7.361936,-2.925185,3.990933,-1.387742,-2.279509,6.962452,-3.654142,-1.479359,7.631917,-3.062901,6.469907,2.436592,4.484603,-0.558261,-8.481190,-1.360033,8.627556,-0.770691,6.273847,7.796644,-8.802131,2.076172,6.627091,-7.886224,-1.651802,1.611234,0.703715,5.796974,2.623820,-8.934630,-5.854228,-6.575262,6.875235,-1.256972,-2.245428]], dtype = "float64")#candidate|3493|(4, 252)|const|float64
call_3492 = relay.TupleGetItem(func_631_call(relay.reshape(const_3493.astype('float64'), [16, 9, 7])), 1)
call_3494 = relay.TupleGetItem(func_634_call(relay.reshape(const_3493.astype('float64'), [16, 9, 7])), 1)
output = relay.Tuple([call_3480,call_3486,call_3492,const_3493,])
output2 = relay.Tuple([call_3481,call_3487,call_3494,const_3493,])
func_3499 = relay.Function([], output)
mod['func_3499'] = func_3499
mod = relay.transform.InferType()(mod)
mutated_mod['func_3499'] = func_3499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3499_call = mutated_mod.get_global_var('func_3499')
call_3500 = func_3499_call()
output = call_3500
func_3501 = relay.Function([], output)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_3555 = func_1508_call()
call_3556 = func_1508_call()
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_3557 = func_1508_call()
call_3558 = func_1508_call()
bop_3572 = relay.greater(call_3557.astype('bool'), relay.reshape(call_3555.astype('bool'), relay.shape_of(call_3557))) # shape=(12, 9, 11)
bop_3575 = relay.greater(call_3558.astype('bool'), relay.reshape(call_3556.astype('bool'), relay.shape_of(call_3558))) # shape=(12, 9, 11)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_3579 = relay.TupleGetItem(func_1593_call(), 0)
call_3580 = relay.TupleGetItem(func_1594_call(), 0)
output = relay.Tuple([bop_3572,call_3579,])
output2 = relay.Tuple([bop_3575,call_3580,])
func_3584 = relay.Function([], output)
mod['func_3584'] = func_3584
mod = relay.transform.InferType()(mod)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3585 = func_3584_call()
output = call_3585
func_3586 = relay.Function([], output)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2946_call = mod.get_global_var('func_2946')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3615 = relay.TupleGetItem(func_2946_call(), 0)
call_3616 = relay.TupleGetItem(func_2947_call(), 0)
uop_3629 = relay.sigmoid(call_3615.astype('float64')) # shape=(12, 9, 11)
uop_3631 = relay.sigmoid(call_3616.astype('float64')) # shape=(12, 9, 11)
var_3635 = relay.var("var_3635", dtype = "float64", shape = (12, 9, 11))#candidate|3635|(12, 9, 11)|var|float64
bop_3636 = relay.bitwise_xor(uop_3629.astype('uint16'), relay.reshape(var_3635.astype('uint16'), relay.shape_of(uop_3629))) # shape=(12, 9, 11)
bop_3639 = relay.bitwise_xor(uop_3631.astype('uint16'), relay.reshape(var_3635.astype('uint16'), relay.shape_of(uop_3631))) # shape=(12, 9, 11)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_3652 = relay.TupleGetItem(func_414_call(), 0)
call_3653 = relay.TupleGetItem(func_416_call(), 0)
output = relay.Tuple([bop_3636,call_3652,])
output2 = relay.Tuple([bop_3639,call_3653,])
func_3654 = relay.Function([var_3635,], output)
mod['func_3654'] = func_3654
mod = relay.transform.InferType()(mod)
var_3655 = relay.var("var_3655", dtype = "float64", shape = (12, 9, 11))#candidate|3655|(12, 9, 11)|var|float64
output = func_3654(var_3655)
func_3656 = relay.Function([var_3655], output)
mutated_mod['func_3656'] = func_3656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3661 = relay.var("var_3661", dtype = "int8", shape = ())#candidate|3661|()|var|int8
var_3662 = relay.var("var_3662", dtype = "int8", shape = (4, 16, 14))#candidate|3662|(4, 16, 14)|var|int8
bop_3663 = relay.greater(var_3661.astype('bool'), var_3662.astype('bool')) # shape=(4, 16, 14)
bop_3666 = relay.equal(var_3662.astype('bool'), relay.reshape(bop_3663.astype('bool'), relay.shape_of(var_3662))) # shape=(4, 16, 14)
output = bop_3666
output2 = bop_3666
func_3669 = relay.Function([var_3661,var_3662,], output)
mod['func_3669'] = func_3669
mod = relay.transform.InferType()(mod)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3669_call = mutated_mod.get_global_var('func_3669')
var_3671 = relay.var("var_3671", dtype = "int8", shape = ())#candidate|3671|()|var|int8
var_3672 = relay.var("var_3672", dtype = "int8", shape = (4, 16, 14))#candidate|3672|(4, 16, 14)|var|int8
call_3670 = func_3669_call(var_3671,var_3672,)
output = call_3670
func_3673 = relay.Function([var_3671,var_3672,], output)
mutated_mod['func_3673'] = func_3673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2946_call = mod.get_global_var('func_2946')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_3703 = relay.TupleGetItem(func_2946_call(), 0)
call_3704 = relay.TupleGetItem(func_2947_call(), 0)
func_1712_call = mod.get_global_var('func_1712')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_3711 = relay.TupleGetItem(func_1712_call(), 2)
call_3712 = relay.TupleGetItem(func_1713_call(), 2)
func_3669_call = mod.get_global_var('func_3669')
func_3673_call = mutated_mod.get_global_var('func_3673')
var_3714 = relay.var("var_3714", dtype = "int8", shape = ())#candidate|3714|()|var|int8
var_3715 = relay.var("var_3715", dtype = "int8", shape = (896,))#candidate|3715|(896,)|var|int8
call_3713 = func_3669_call(relay.reshape(var_3714.astype('int8'), []), relay.reshape(var_3715.astype('int8'), [4, 16, 14]), )
call_3716 = func_3669_call(relay.reshape(var_3714.astype('int8'), []), relay.reshape(var_3715.astype('int8'), [4, 16, 14]), )
bop_3728 = relay.maximum(call_3711.astype('int16'), var_3714.astype('int16')) # shape=(256,)
bop_3731 = relay.maximum(call_3712.astype('int16'), var_3714.astype('int16')) # shape=(256,)
bop_3749 = relay.bitwise_or(var_3715.astype('uint16'), relay.reshape(call_3713.astype('uint16'), relay.shape_of(var_3715))) # shape=(896,)
bop_3752 = relay.bitwise_or(var_3715.astype('uint16'), relay.reshape(call_3716.astype('uint16'), relay.shape_of(var_3715))) # shape=(896,)
uop_3754 = relay.acos(call_3713.astype('float32')) # shape=(4, 16, 14)
uop_3756 = relay.acos(call_3716.astype('float32')) # shape=(4, 16, 14)
output = relay.Tuple([call_3703,bop_3728,bop_3749,uop_3754,])
output2 = relay.Tuple([call_3704,bop_3731,bop_3752,uop_3756,])
func_3757 = relay.Function([var_3714,var_3715,], output)
mod['func_3757'] = func_3757
mod = relay.transform.InferType()(mod)
mutated_mod['func_3757'] = func_3757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3757_call = mutated_mod.get_global_var('func_3757')
var_3759 = relay.var("var_3759", dtype = "int8", shape = ())#candidate|3759|()|var|int8
var_3760 = relay.var("var_3760", dtype = "int8", shape = (896,))#candidate|3760|(896,)|var|int8
call_3758 = func_3757_call(var_3759,var_3760,)
output = call_3758
func_3761 = relay.Function([var_3759,var_3760,], output)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_3776 = relay.TupleGetItem(func_3046_call(), 0)
call_3777 = relay.TupleGetItem(func_3048_call(), 0)
output = call_3776
output2 = call_3777
func_3789 = relay.Function([], output)
mod['func_3789'] = func_3789
mod = relay.transform.InferType()(mod)
mutated_mod['func_3789'] = func_3789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mutated_mod.get_global_var('func_3789')
call_3790 = func_3789_call()
output = call_3790
func_3791 = relay.Function([], output)
mutated_mod['func_3791'] = func_3791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3831 = relay.TupleGetItem(func_2049_call(), 0)
call_3832 = relay.TupleGetItem(func_2050_call(), 0)
output = call_3831
output2 = call_3832
func_3862 = relay.Function([], output)
mod['func_3862'] = func_3862
mod = relay.transform.InferType()(mod)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3862_call = mutated_mod.get_global_var('func_3862')
call_3863 = func_3862_call()
output = call_3863
func_3864 = relay.Function([], output)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3865 = relay.TupleGetItem(func_2049_call(), 0)
call_3866 = relay.TupleGetItem(func_2050_call(), 0)
func_3121_call = mod.get_global_var('func_3121')
func_3124_call = mutated_mod.get_global_var('func_3124')
var_3893 = relay.var("var_3893", dtype = "float32", shape = (256,))#candidate|3893|(256,)|var|float32
var_3894 = relay.var("var_3894", dtype = "int16", shape = (448,))#candidate|3894|(448,)|var|int16
call_3892 = relay.TupleGetItem(func_3121_call(relay.reshape(var_3893.astype('float32'), [16, 4, 4]), relay.reshape(var_3894.astype('int16'), [2, 224]), ), 0)
call_3895 = relay.TupleGetItem(func_3124_call(relay.reshape(var_3893.astype('float32'), [16, 4, 4]), relay.reshape(var_3894.astype('int16'), [2, 224]), ), 0)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_3900 = relay.TupleGetItem(func_2796_call(), 0)
call_3901 = relay.TupleGetItem(func_2797_call(), 0)
output = relay.Tuple([call_3865,call_3892,var_3893,var_3894,call_3900,])
output2 = relay.Tuple([call_3866,call_3895,var_3893,var_3894,call_3901,])
func_3902 = relay.Function([var_3893,var_3894,], output)
mod['func_3902'] = func_3902
mod = relay.transform.InferType()(mod)
var_3903 = relay.var("var_3903", dtype = "float32", shape = (256,))#candidate|3903|(256,)|var|float32
var_3904 = relay.var("var_3904", dtype = "int16", shape = (448,))#candidate|3904|(448,)|var|int16
output = func_3902(var_3903,var_3904,)
func_3905 = relay.Function([var_3903,var_3904,], output)
mutated_mod['func_3905'] = func_3905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_3913 = func_3789_call()
call_3914 = func_3789_call()
func_1856_call = mod.get_global_var('func_1856')
func_1858_call = mutated_mod.get_global_var('func_1858')
call_3925 = relay.TupleGetItem(func_1856_call(), 0)
call_3926 = relay.TupleGetItem(func_1858_call(), 0)
output = relay.Tuple([call_3913,call_3925,])
output2 = relay.Tuple([call_3914,call_3926,])
func_3955 = relay.Function([], output)
mod['func_3955'] = func_3955
mod = relay.transform.InferType()(mod)
output = func_3955()
func_3956 = relay.Function([], output)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_3962 = func_487_call()
call_3963 = func_487_call()
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_3964 = relay.TupleGetItem(func_3362_call(), 0)
call_3965 = relay.TupleGetItem(func_3364_call(), 0)
output = relay.Tuple([call_3962,call_3964,])
output2 = relay.Tuple([call_3963,call_3965,])
func_3966 = relay.Function([], output)
mod['func_3966'] = func_3966
mod = relay.transform.InferType()(mod)
mutated_mod['func_3966'] = func_3966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3966_call = mutated_mod.get_global_var('func_3966')
call_3967 = func_3966_call()
output = call_3967
func_3968 = relay.Function([], output)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3975 = relay.var("var_3975", dtype = "float64", shape = (2, 11, 16))#candidate|3975|(2, 11, 16)|var|float64
uop_3976 = relay.log2(var_3975.astype('float64')) # shape=(2, 11, 16)
uop_3980 = relay.cos(uop_3976.astype('float32')) # shape=(2, 11, 16)
var_3982 = relay.var("var_3982", dtype = "float64", shape = (2, 11, 16))#candidate|3982|(2, 11, 16)|var|float64
bop_3983 = relay.multiply(uop_3976.astype('float32'), relay.reshape(var_3982.astype('float32'), relay.shape_of(uop_3976))) # shape=(2, 11, 16)
output = relay.Tuple([uop_3980,bop_3983,])
output2 = relay.Tuple([uop_3980,bop_3983,])
func_3986 = relay.Function([var_3975,var_3982,], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mutated_mod.get_global_var('func_3986')
var_3988 = relay.var("var_3988", dtype = "float64", shape = (2, 11, 16))#candidate|3988|(2, 11, 16)|var|float64
var_3989 = relay.var("var_3989", dtype = "float64", shape = (2, 11, 16))#candidate|3989|(2, 11, 16)|var|float64
call_3987 = func_3986_call(var_3988,var_3989,)
output = call_3987
func_3990 = relay.Function([var_3988,var_3989,], output)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_4025 = relay.TupleGetItem(func_2796_call(), 2)
call_4026 = relay.TupleGetItem(func_2797_call(), 2)
func_3121_call = mod.get_global_var('func_3121')
func_3124_call = mutated_mod.get_global_var('func_3124')
const_4028 = relay.const([-8.702031,7.198594,-0.747240,-7.269676,5.046378,-8.182979,9.919246,-3.365522,-7.548185,-7.529059,-9.969499,2.350748,-1.776734,6.839473,-4.683248,2.931747,8.569112,5.896213,5.653420,3.874963,3.070144,8.225464,-4.814089,-8.161707,3.675820,-2.137083,-8.897967,-3.433243,-7.625071,6.028741,-0.311178,2.280701,8.648450,-5.360356,4.151016,2.725184,9.816725,7.805714,-1.424962,8.449718,-0.049207,5.410749,6.748122,-7.825589,-6.689217,1.420392,-3.466987,-3.589627,9.760266,7.893331,7.004840,-7.161700,2.724082,-0.212052,8.780222,-8.092419,1.596202,6.564656,8.073020,-4.736704,8.380019,4.259606,-7.787819,3.925925,-0.657311,-7.973117,9.436507,-3.296972,-5.951723,-3.013889,-1.159253,-4.601471,-6.526440,8.938476,9.731542,9.467521,3.252552,-7.233073,9.198907,6.396909,-4.258821,2.479345,-3.007639,0.083724,-2.431336,8.538861,-0.924429,-0.784717,7.114926,-9.981952,3.645194,9.303447,-4.661159,-0.136372,4.543217,6.051543,-9.991776,6.450515,0.136169,8.904145,-8.618164,-4.747499,-7.891711,3.174010,-7.201967,-3.014317,-2.989992,-8.352621,-4.042113,-1.132070,4.018754,8.700005,-7.510454,-4.095712,0.703433,5.062199,-8.950313,-0.725867,-8.528925,-9.117500,-2.458071,-1.662586,-2.250814,8.235337,7.590062,-8.329374,-3.508499,-9.222515,-3.535976,-6.129192,0.364303,6.710018,3.189292,-5.887226,-7.776165,4.153948,-5.185372,5.861801,-8.657738,6.302965,-6.561205,-1.096072,0.442769,6.074596,-9.499936,-2.106698,5.087183,2.208312,2.728414,-5.746195,6.755476,-6.113662,1.166557,-4.571201,6.317231,7.682412,-8.517727,-1.003066,9.185664,5.845913,3.916653,2.381914,-1.463456,9.407518,-1.530303,5.994874,4.267539,4.009488,7.372050,7.992293,3.279912,-6.079731,-0.961652,-6.682020,-9.592733,2.958191,0.796497,-1.021204,-9.457567,6.089955,1.504005,-3.266396,2.485950,1.061343,6.515336,5.694568,3.619295,-5.231242,-2.583894,8.365614,3.660904,-8.650146,4.740628,-7.306931,-2.219846,3.906766,-4.365685,2.292620,2.924236,-5.651507,0.914683,-6.515670,7.701898,-5.770430,8.878796,-1.129997,2.361827,3.181328,9.466066,-3.105950,5.268431,2.852473,6.241867,6.114500,2.883745,4.446081,5.392288,6.642154,3.664446,-1.455767,-4.525552,1.379184,4.981434,-4.780292,-5.051444,0.319304,-1.534076,4.369799,9.897504,6.664575,-0.860886,6.795552,-2.198832,-2.066246,-1.506920,-5.743038,1.729284,-0.896857,-4.981828,7.379043,8.982384,-6.092077,4.710806,9.429935,1.662059,7.066119,-4.360959,7.270961,6.878221,-7.085418,6.155332,-1.108220,-2.120443,9.051209,-3.545224,1.872301], dtype = "float32")#candidate|4028|(256,)|const|float32
const_4029 = relay.const([9,-7,-7,9,3,-6,1,4,-5,-7,6,-3,-3,-1,2,-2,10,-9,10,4,-7,10,10,-7,4,-10,-8,-1,10,5,-4,3,4,-2,-10,-8,9,-7,10,3,-10,6,8,8,-1,-7,9,10,-2,2,9,10,-7,-6,-3,-3,-4,2,8,9,4,-4,-6,10,7,1,-1,-5,-8,-3,9,-5,-9,-4,-8,6,-9,-8,-7,6,-10,1,7,-8,-8,-7,1,2,8,6,-1,1,5,6,8,5,10,-7,-3,-4,-8,-7,-3,-6,5,9,4,-7,-7,-10,-6,3,2,-2,7,-5,-7,3,-1,2,-10,-5,1,5,4,3,2,-5,7,1,-7,8,-9,5,9,10,-6,-6,-5,-5,8,-1,5,5,5,-6,2,-6,5,3,-9,-3,-5,2,-10,1,6,-8,-7,-2,9,-7,-2,-2,-6,-10,5,10,2,2,-8,2,4,-2,3,5,4,2,9,-4,8,-10,7,5,-1,-3,-1,-10,7,5,-7,-3,-6,-10,1,-10,8,-4,-1,6,9,8,6,-4,-1,4,-3,3,-4,-4,7,-7,-5,3,3,5,-1,-9,-4,-2,4,-5,5,-6,-10,-7,4,3,-5,5,-6,-10,-7,5,-4,6,-5,4,-8,-10,-1,-5,-10,-6,5,-5,-4,-9,5,-2,-3,6,-9,7,-3,8,-3,-10,-1,10,-8,10,-1,2,-3,5,-3,3,3,1,-6,-9,2,-3,-4,3,-1,3,-2,-8,-1,2,-5,-8,-4,4,10,10,-3,-6,-8,-10,-10,1,-9,-6,3,6,2,10,-7,-5,-10,-10,7,-9,-5,-4,-3,8,3,6,-3,-7,8,-10,-2,5,-9,4,-1,1,-3,4,7,1,7,9,10,4,3,-5,8,-8,5,2,-6,-5,-5,6,10,-5,3,-8,10,-2,-5,-2,9,1,-2,1,8,-9,-6,7,2,-4,6,9,1,2,10,-10,-4,2,-5,-3,2,6,-7,-3,-4,6,-6,-9,8,-6,5,-7,8,6,6,-6,3,4,4,-9,-4,-2,1,1,3,6,-3,9,-4,-3,-6,7,-1,-7,8,-7,4,5,1,3,-1,-5,3,4,-1,-6,-7,4,5,5,1,6,-1,9,4,9,-4,-2,8,-4,4,-6,4,1,3,-1,-9,-10,-9,-6,2,10,8,2,-7,-5,-6,-4,-10,10], dtype = "int16")#candidate|4029|(448,)|const|int16
call_4027 = relay.TupleGetItem(func_3121_call(relay.reshape(const_4028.astype('float32'), [16, 4, 4]), relay.reshape(const_4029.astype('int16'), [2, 224]), ), 2)
call_4030 = relay.TupleGetItem(func_3124_call(relay.reshape(const_4028.astype('float32'), [16, 4, 4]), relay.reshape(const_4029.astype('int16'), [2, 224]), ), 2)
output = relay.Tuple([call_4025,call_4027,const_4028,const_4029,])
output2 = relay.Tuple([call_4026,call_4030,const_4028,const_4029,])
func_4047 = relay.Function([], output)
mod['func_4047'] = func_4047
mod = relay.transform.InferType()(mod)
output = func_4047()
func_4048 = relay.Function([], output)
mutated_mod['func_4048'] = func_4048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_4123 = relay.TupleGetItem(func_1468_call(), 0)
call_4124 = relay.TupleGetItem(func_1469_call(), 0)
func_1308_call = mod.get_global_var('func_1308')
func_1310_call = mutated_mod.get_global_var('func_1310')
call_4128 = relay.TupleGetItem(func_1308_call(), 0)
call_4129 = relay.TupleGetItem(func_1310_call(), 0)
func_3121_call = mod.get_global_var('func_3121')
func_3124_call = mutated_mod.get_global_var('func_3124')
const_4131 = relay.const([8.022569,6.357823,-7.098118,9.211241,-4.051912,-0.155557,0.460813,-8.448053,1.834587,5.429513,-3.035771,-9.603926,0.429169,-6.630297,-0.642727,7.968732,-0.773001,4.898925,2.932596,-1.901314,-4.170521,-5.091302,-5.654033,-2.442190,2.464643,1.740126,-0.096142,5.649869,-8.580791,2.424463,5.839167,-6.794075,0.684408,-7.386479,-0.581036,-5.097220,-0.256090,4.383545,-2.166707,-2.176633,1.168027,7.922639,7.343253,8.025238,-4.560208,-6.957434,-8.426451,4.300031,5.941590,-2.064914,-3.680582,-9.962818,3.849089,-9.756630,9.665354,-6.159570,-9.150456,4.347321,-2.636424,4.430008,4.542217,-3.600416,8.470424,6.704511,-4.421614,-5.132787,-2.533387,7.907774,-6.994080,0.249292,-0.435076,-4.386408,5.230029,-9.128063,0.918515,4.995771,-7.107914,-0.868567,5.374237,-3.370937,3.921289,1.584176,1.281279,9.011384,-3.778788,-2.702277,-0.453610,1.239226,-8.769519,1.055037,0.891476,-6.647682,3.186336,6.750003,-7.178986,-7.188650,0.248516,9.022083,-1.360887,-5.067841,-4.769044,6.749464,-8.067956,-7.562309,-1.400040,-7.994159,-4.702934,8.423702,7.183922,0.203837,-5.571558,4.160239,9.065166,9.551641,8.057699,-0.379174,-5.221879,6.107672,-3.724688,1.185647,9.646562,-4.058606,-7.960185,2.634006,4.858343,6.956688,-9.472579,8.332702,9.773619,3.674697,-0.912703,-9.867494,0.755177,2.656128,-1.132362,9.859442,-9.432154,6.561933,8.545732,-3.665434,9.932287,8.437369,-4.686054,3.843127,8.718501,0.299406,-8.189739,-0.601545,9.286698,9.081746,-9.351197,9.681208,5.898785,8.738157,-7.663352,4.817772,6.961664,8.910402,5.126380,5.012532,-2.851317,-9.639659,6.015522,-0.387859,8.009027,-2.318000,-4.212719,-8.352879,-3.837467,7.091396,-8.855982,1.144207,9.051125,8.034511,6.670109,8.484191,3.967739,0.949197,-6.214182,7.198495,7.420534,3.612766,-4.998304,6.090493,7.604847,1.496002,8.989896,4.436170,5.327184,1.524796,3.358012,-9.516999,7.076926,7.548661,-3.093893,2.573020,-4.152519,1.926854,-0.134859,-0.217378,8.551315,9.167609,-1.341192,4.450510,-5.450210,-2.102669,2.078482,-5.902967,-0.439707,-1.424325,3.614589,4.401796,-2.791407,-4.971732,8.594702,-6.752796,-0.469845,-5.592023,-0.022290,-7.290538,-5.132117,2.959907,-1.234453,-1.004803,3.165737,0.122251,-3.459127,4.524133,8.407347,-6.728433,-6.509047,-7.118426,-0.015363,6.446068,-2.088015,1.947170,-8.398764,6.830093,7.574266,-2.133439,-9.114845,0.847982,-4.622541,-0.789065,-4.737872,-4.864291,6.716368,6.897797,8.678511,7.105903,-0.737179,3.175786,8.153011,4.830911,-1.503073,3.741419], dtype = "float32")#candidate|4131|(256,)|const|float32
const_4132 = relay.const([-5,-9,-3,-10,-5,4,-7,-3,-9,1,-4,1,8,8,-10,-2,-5,2,2,-3,-10,-4,-5,5,-9,-4,-9,-4,1,-8,-5,5,-1,-10,-1,-7,-9,-8,-9,8,1,8,-7,8,-6,-8,-9,1,-10,-1,1,1,-1,4,-4,-8,4,-7,-10,-8,3,7,9,-2,-8,-9,2,-9,-1,-7,-7,1,10,-2,-5,1,8,-10,6,5,6,3,4,-3,6,9,4,5,-10,-8,-9,2,7,-4,5,-8,-3,-9,4,-3,3,-6,-4,2,-1,-6,1,10,2,-10,-3,-8,-1,5,-10,-10,10,1,-10,-7,-5,-1,-3,-4,-5,3,-5,4,7,-5,-8,1,2,4,-7,1,6,-8,-5,5,1,5,9,3,-9,-5,3,4,8,-5,1,-6,-2,-7,1,4,-1,7,8,-8,-8,3,8,7,7,10,-2,4,-3,8,2,5,10,-1,-3,7,-3,5,10,-9,5,-5,-8,-10,8,6,-9,3,-4,-10,-5,-8,-1,-10,-4,10,-10,8,-3,-2,6,3,10,7,-10,1,-7,-4,2,9,-4,-7,3,-4,-4,9,6,-7,10,10,-2,5,-10,8,-4,-9,-8,-5,-4,9,-7,9,-2,10,2,-2,-3,-6,8,6,-2,2,-3,-1,6,-4,10,-4,2,4,6,-10,5,-1,-1,6,-3,-5,5,-1,8,4,1,-8,-2,8,-10,-6,-8,1,3,5,8,-2,8,4,1,1,5,-8,6,4,6,-3,6,-4,-3,-7,-2,6,4,-5,-7,8,8,9,-2,9,5,-2,8,-2,-8,-4,9,8,7,6,-10,7,10,9,1,10,2,8,2,10,10,8,-3,1,-2,5,-3,9,8,-7,-7,-8,-3,-8,-6,-2,-2,6,-9,-5,-3,-4,-5,-2,-2,-4,8,-8,8,-3,-4,-3,-7,4,-3,8,3,6,2,1,-9,-3,-8,-9,6,-1,8,1,-2,-3,7,-4,-1,6,-8,-9,1,5,2,-6,-5,3,2,1,10,-8,5,-5,10,-2,-10,5,-5,-1,-4,7,5,-5,3,-10,1,-10,-9,3,-8,-10,-7,10,-7,9,9,3,6,-2,5,2,7,2,-6,-7,-3,-1,-4,-4,-3,4,-1,-7,-4,-7,-8,-5,-10,-2,4,-1,8,9,4,-5,-6,-10,-4,3,-5,-9,9,9,-2,8], dtype = "int16")#candidate|4132|(448,)|const|int16
call_4130 = relay.TupleGetItem(func_3121_call(relay.reshape(const_4131.astype('float32'), [16, 4, 4]), relay.reshape(const_4132.astype('int16'), [2, 224]), ), 1)
call_4133 = relay.TupleGetItem(func_3124_call(relay.reshape(const_4131.astype('float32'), [16, 4, 4]), relay.reshape(const_4132.astype('int16'), [2, 224]), ), 1)
func_2669_call = mod.get_global_var('func_2669')
func_2673_call = mutated_mod.get_global_var('func_2673')
var_4136 = relay.var("var_4136", dtype = "uint32", shape = (280,))#candidate|4136|(280,)|var|uint32
call_4135 = relay.TupleGetItem(func_2669_call(relay.reshape(var_4136.astype('uint32'), [4, 5, 14]), relay.reshape(var_4136.astype('uint32'), [4, 5, 14]), ), 0)
call_4137 = relay.TupleGetItem(func_2673_call(relay.reshape(var_4136.astype('uint32'), [4, 5, 14]), relay.reshape(var_4136.astype('uint32'), [4, 5, 14]), ), 0)
output = relay.Tuple([call_4123,call_4128,call_4130,const_4131,const_4132,call_4135,var_4136,])
output2 = relay.Tuple([call_4124,call_4129,call_4133,const_4131,const_4132,call_4137,var_4136,])
func_4140 = relay.Function([var_4136,], output)
mod['func_4140'] = func_4140
mod = relay.transform.InferType()(mod)
var_4141 = relay.var("var_4141", dtype = "uint32", shape = (280,))#candidate|4141|(280,)|var|uint32
output = func_4140(var_4141)
func_4142 = relay.Function([var_4141], output)
mutated_mod['func_4142'] = func_4142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_4160 = relay.TupleGetItem(func_1432_call(), 0)
call_4161 = relay.TupleGetItem(func_1434_call(), 0)
func_2288_call = mod.get_global_var('func_2288')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_4179 = relay.TupleGetItem(func_2288_call(), 1)
call_4180 = relay.TupleGetItem(func_2290_call(), 1)
output = relay.Tuple([call_4160,call_4179,])
output2 = relay.Tuple([call_4161,call_4180,])
func_4187 = relay.Function([], output)
mod['func_4187'] = func_4187
mod = relay.transform.InferType()(mod)
output = func_4187()
func_4188 = relay.Function([], output)
mutated_mod['func_4188'] = func_4188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1647_call = mod.get_global_var('func_1647')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_4231 = relay.TupleGetItem(func_1647_call(), 0)
call_4232 = relay.TupleGetItem(func_1648_call(), 0)
var_4236 = relay.var("var_4236", dtype = "float64", shape = (12, 9, 11))#candidate|4236|(12, 9, 11)|var|float64
bop_4237 = relay.less_equal(call_4231.astype('bool'), relay.reshape(var_4236.astype('bool'), relay.shape_of(call_4231))) # shape=(12, 9, 11)
bop_4240 = relay.less_equal(call_4232.astype('bool'), relay.reshape(var_4236.astype('bool'), relay.shape_of(call_4232))) # shape=(12, 9, 11)
func_2498_call = mod.get_global_var('func_2498')
func_2501_call = mutated_mod.get_global_var('func_2501')
var_4243 = relay.var("var_4243", dtype = "float32", shape = (1092,))#candidate|4243|(1092,)|var|float32
call_4242 = relay.TupleGetItem(func_2498_call(relay.reshape(var_4243.astype('float32'), [1092,])), 5)
call_4244 = relay.TupleGetItem(func_2501_call(relay.reshape(var_4243.astype('float32'), [1092,])), 5)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_4246 = relay.TupleGetItem(func_1593_call(), 0)
call_4247 = relay.TupleGetItem(func_1594_call(), 0)
uop_4256 = relay.asin(call_4242.astype('float64')) # shape=(1092,)
uop_4258 = relay.asin(call_4244.astype('float64')) # shape=(1092,)
func_3902_call = mod.get_global_var('func_3902')
func_3905_call = mutated_mod.get_global_var('func_3905')
var_4260 = relay.var("var_4260", dtype = "float32", shape = (256,))#candidate|4260|(256,)|var|float32
var_4261 = relay.var("var_4261", dtype = "int16", shape = (448,))#candidate|4261|(448,)|var|int16
call_4259 = relay.TupleGetItem(func_3902_call(relay.reshape(var_4260.astype('float32'), [256,]), relay.reshape(var_4261.astype('int16'), [448,]), ), 2)
call_4262 = relay.TupleGetItem(func_3905_call(relay.reshape(var_4260.astype('float32'), [256,]), relay.reshape(var_4261.astype('int16'), [448,]), ), 2)
output = relay.Tuple([bop_4237,var_4243,call_4246,uop_4256,call_4259,var_4260,var_4261,])
output2 = relay.Tuple([bop_4240,var_4243,call_4247,uop_4258,call_4262,var_4260,var_4261,])
func_4266 = relay.Function([var_4236,var_4243,var_4260,var_4261,], output)
mod['func_4266'] = func_4266
mod = relay.transform.InferType()(mod)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4266_call = mutated_mod.get_global_var('func_4266')
var_4268 = relay.var("var_4268", dtype = "float64", shape = (12, 9, 11))#candidate|4268|(12, 9, 11)|var|float64
var_4269 = relay.var("var_4269", dtype = "float32", shape = (1092,))#candidate|4269|(1092,)|var|float32
var_4270 = relay.var("var_4270", dtype = "float32", shape = (256,))#candidate|4270|(256,)|var|float32
var_4271 = relay.var("var_4271", dtype = "int16", shape = (448,))#candidate|4271|(448,)|var|int16
call_4267 = func_4266_call(var_4268,var_4269,var_4270,var_4271,)
output = call_4267
func_4272 = relay.Function([var_4268,var_4269,var_4270,var_4271,], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4187_call = mod.get_global_var('func_4187')
func_4188_call = mutated_mod.get_global_var('func_4188')
call_4291 = relay.TupleGetItem(func_4187_call(), 0)
call_4292 = relay.TupleGetItem(func_4188_call(), 0)
output = call_4291
output2 = call_4292
func_4301 = relay.Function([], output)
mod['func_4301'] = func_4301
mod = relay.transform.InferType()(mod)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4301_call = mutated_mod.get_global_var('func_4301')
call_4302 = func_4301_call()
output = call_4302
func_4303 = relay.Function([], output)
mutated_mod['func_4303'] = func_4303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_4343 = relay.TupleGetItem(func_1432_call(), 0)
call_4344 = relay.TupleGetItem(func_1434_call(), 0)
output = relay.Tuple([call_4343,])
output2 = relay.Tuple([call_4344,])
func_4361 = relay.Function([], output)
mod['func_4361'] = func_4361
mod = relay.transform.InferType()(mod)
output = func_4361()
func_4362 = relay.Function([], output)
mutated_mod['func_4362'] = func_4362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_4411 = relay.TupleGetItem(func_3362_call(), 0)
call_4412 = relay.TupleGetItem(func_3364_call(), 0)
output = call_4411
output2 = call_4412
func_4415 = relay.Function([], output)
mod['func_4415'] = func_4415
mod = relay.transform.InferType()(mod)
output = func_4415()
func_4416 = relay.Function([], output)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4047_call = mod.get_global_var('func_4047')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_4480 = relay.TupleGetItem(func_4047_call(), 0)
call_4481 = relay.TupleGetItem(func_4048_call(), 0)
func_3415_call = mod.get_global_var('func_3415')
func_3416_call = mutated_mod.get_global_var('func_3416')
call_4484 = relay.TupleGetItem(func_3415_call(), 0)
call_4485 = relay.TupleGetItem(func_3416_call(), 0)
output = relay.Tuple([call_4480,call_4484,])
output2 = relay.Tuple([call_4481,call_4485,])
func_4488 = relay.Function([], output)
mod['func_4488'] = func_4488
mod = relay.transform.InferType()(mod)
mutated_mod['func_4488'] = func_4488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mutated_mod.get_global_var('func_4488')
call_4489 = func_4488_call()
output = call_4489
func_4490 = relay.Function([], output)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_4516 = func_602_call()
call_4517 = func_602_call()
func_3955_call = mod.get_global_var('func_3955')
func_3956_call = mutated_mod.get_global_var('func_3956')
call_4522 = relay.TupleGetItem(func_3955_call(), 1)
call_4523 = relay.TupleGetItem(func_3956_call(), 1)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_4544 = relay.TupleGetItem(func_2710_call(), 0)
call_4545 = relay.TupleGetItem(func_2712_call(), 0)
func_4415_call = mod.get_global_var('func_4415')
func_4416_call = mutated_mod.get_global_var('func_4416')
call_4546 = func_4415_call()
call_4547 = func_4415_call()
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_4550 = relay.var("var_4550", dtype = "int16", shape = (448,))#candidate|4550|(448,)|var|int16
call_4549 = relay.TupleGetItem(func_1958_call(relay.reshape(var_4550.astype('int16'), [448,])), 0)
call_4551 = relay.TupleGetItem(func_1960_call(relay.reshape(var_4550.astype('int16'), [448,])), 0)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_4553 = relay.TupleGetItem(func_2969_call(), 0)
call_4554 = relay.TupleGetItem(func_2970_call(), 0)
output = relay.Tuple([call_4516,call_4522,call_4544,call_4546,call_4549,var_4550,call_4553,])
output2 = relay.Tuple([call_4517,call_4523,call_4545,call_4547,call_4551,var_4550,call_4554,])
func_4557 = relay.Function([var_4550,], output)
mod['func_4557'] = func_4557
mod = relay.transform.InferType()(mod)
mutated_mod['func_4557'] = func_4557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4558 = relay.var("var_4558", dtype = "int16", shape = (448,))#candidate|4558|(448,)|var|int16
func_4557_call = mutated_mod.get_global_var('func_4557')
call_4559 = func_4557_call(var_4558)
output = call_4559
func_4560 = relay.Function([var_4558], output)
mutated_mod['func_4560'] = func_4560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_4604 = relay.TupleGetItem(func_3362_call(), 0)
call_4605 = relay.TupleGetItem(func_3364_call(), 0)
func_3030_call = mod.get_global_var('func_3030')
func_3032_call = mutated_mod.get_global_var('func_3032')
var_4612 = relay.var("var_4612", dtype = "uint64", shape = (48,))#candidate|4612|(48,)|var|uint64
call_4611 = func_3030_call(relay.reshape(var_4612.astype('uint64'), [3, 2, 8]))
call_4613 = func_3030_call(relay.reshape(var_4612.astype('uint64'), [3, 2, 8]))
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_4615 = relay.TupleGetItem(func_1803_call(), 0)
call_4616 = relay.TupleGetItem(func_1805_call(), 0)
output = relay.Tuple([call_4604,call_4611,var_4612,call_4615,])
output2 = relay.Tuple([call_4605,call_4613,var_4612,call_4616,])
func_4617 = relay.Function([var_4612,], output)
mod['func_4617'] = func_4617
mod = relay.transform.InferType()(mod)
var_4618 = relay.var("var_4618", dtype = "uint64", shape = (48,))#candidate|4618|(48,)|var|uint64
output = func_4617(var_4618)
func_4619 = relay.Function([var_4618], output)
mutated_mod['func_4619'] = func_4619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_4651 = func_487_call()
call_4652 = func_487_call()
output = relay.Tuple([call_4651,])
output2 = relay.Tuple([call_4652,])
func_4659 = relay.Function([], output)
mod['func_4659'] = func_4659
mod = relay.transform.InferType()(mod)
mutated_mod['func_4659'] = func_4659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4659_call = mutated_mod.get_global_var('func_4659')
call_4660 = func_4659_call()
output = call_4660
func_4661 = relay.Function([], output)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_4670 = func_487_call()
call_4671 = func_487_call()
output = call_4670
output2 = call_4671
func_4675 = relay.Function([], output)
mod['func_4675'] = func_4675
mod = relay.transform.InferType()(mod)
output = func_4675()
func_4676 = relay.Function([], output)
mutated_mod['func_4676'] = func_4676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4675_call = mod.get_global_var('func_4675')
func_4676_call = mutated_mod.get_global_var('func_4676')
call_4677 = func_4675_call()
call_4678 = func_4675_call()
output = relay.Tuple([call_4677,])
output2 = relay.Tuple([call_4678,])
func_4681 = relay.Function([], output)
mod['func_4681'] = func_4681
mod = relay.transform.InferType()(mod)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4681_call = mutated_mod.get_global_var('func_4681')
call_4682 = func_4681_call()
output = call_4682
func_4683 = relay.Function([], output)
mutated_mod['func_4683'] = func_4683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_4698 = relay.TupleGetItem(func_1803_call(), 1)
call_4699 = relay.TupleGetItem(func_1805_call(), 1)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_4709 = relay.TupleGetItem(func_3046_call(), 0)
call_4710 = relay.TupleGetItem(func_3048_call(), 0)
output = relay.Tuple([call_4698,call_4709,])
output2 = relay.Tuple([call_4699,call_4710,])
func_4722 = relay.Function([], output)
mod['func_4722'] = func_4722
mod = relay.transform.InferType()(mod)
output = func_4722()
func_4723 = relay.Function([], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3966_call = mod.get_global_var('func_3966')
func_3968_call = mutated_mod.get_global_var('func_3968')
call_4755 = relay.TupleGetItem(func_3966_call(), 1)
call_4756 = relay.TupleGetItem(func_3968_call(), 1)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_4770 = relay.TupleGetItem(func_2796_call(), 3)
call_4771 = relay.TupleGetItem(func_2797_call(), 3)
output = relay.Tuple([call_4755,call_4770,])
output2 = relay.Tuple([call_4756,call_4771,])
func_4782 = relay.Function([], output)
mod['func_4782'] = func_4782
mod = relay.transform.InferType()(mod)
mutated_mod['func_4782'] = func_4782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4782_call = mutated_mod.get_global_var('func_4782')
call_4783 = func_4782_call()
output = call_4783
func_4784 = relay.Function([], output)
mutated_mod['func_4784'] = func_4784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4415_call = mod.get_global_var('func_4415')
func_4416_call = mutated_mod.get_global_var('func_4416')
call_4806 = func_4415_call()
call_4807 = func_4415_call()
func_4617_call = mod.get_global_var('func_4617')
func_4619_call = mutated_mod.get_global_var('func_4619')
var_4822 = relay.var("var_4822", dtype = "uint64", shape = (48,))#candidate|4822|(48,)|var|uint64
call_4821 = relay.TupleGetItem(func_4617_call(relay.reshape(var_4822.astype('uint64'), [48,])), 2)
call_4823 = relay.TupleGetItem(func_4619_call(relay.reshape(var_4822.astype('uint64'), [48,])), 2)
output = relay.Tuple([call_4806,call_4821,var_4822,])
output2 = relay.Tuple([call_4807,call_4823,var_4822,])
func_4826 = relay.Function([var_4822,], output)
mod['func_4826'] = func_4826
mod = relay.transform.InferType()(mod)
mutated_mod['func_4826'] = func_4826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4827 = relay.var("var_4827", dtype = "uint64", shape = (48,))#candidate|4827|(48,)|var|uint64
func_4826_call = mutated_mod.get_global_var('func_4826')
call_4828 = func_4826_call(var_4827)
output = call_4828
func_4829 = relay.Function([var_4827], output)
mutated_mod['func_4829'] = func_4829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1712_call = mod.get_global_var('func_1712')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_4868 = relay.TupleGetItem(func_1712_call(), 1)
call_4869 = relay.TupleGetItem(func_1713_call(), 1)
const_4870 = relay.const([[[-6.091315,9.986424,8.181392,-6.634598],[-0.799561,4.665584,-6.238185,-5.242722],[8.939715,1.993884,-1.038335,-7.325150],[6.501814,-1.028117,-7.229304,8.443253]],[[-5.422936,5.645003,-7.550737,4.013162],[1.462321,-7.509231,-3.177781,-3.765559],[-2.719236,5.907101,-4.990935,0.621879],[-9.388527,9.464635,-4.487890,4.333201]],[[2.536962,-3.165398,-9.088377,-9.849399],[9.171675,-0.739655,2.814877,8.737601],[-3.216106,-7.290274,-9.838103,-8.151415],[-7.409237,-5.099949,0.650922,0.581979]],[[-8.882869,-5.033932,2.972304,8.342510],[-6.826659,2.213370,-6.336589,7.618006],[2.407226,-5.638373,3.463354,-8.345342],[-1.411736,-6.034147,-6.862865,-7.738719]],[[-1.218507,-5.919191,0.658362,-7.322981],[1.518436,-1.107978,-2.325694,-8.117736],[8.380695,-3.118315,-4.754302,-1.926495],[3.765129,-9.101629,5.164782,-5.136889]],[[5.209408,6.527675,-5.455017,-2.458400],[6.385186,-0.121457,-7.988851,3.430054],[6.789263,0.752422,-5.122632,-6.053184],[-0.228326,-4.997967,6.491478,4.284263]],[[4.511297,9.492224,-9.310653,0.492054],[-1.066948,-7.181858,-6.340471,3.459950],[0.531119,3.052838,-6.387632,4.160705],[-7.953709,-1.340415,-9.965389,5.009377]],[[6.899186,-5.872025,-0.215663,0.450309],[3.402362,-2.244890,-9.576208,8.173583],[-7.854014,4.134901,-4.571265,3.337177],[-2.546108,-7.840512,-2.316171,-4.567004]],[[-1.529045,1.457685,-5.447010,-6.120550],[-5.026921,-6.522360,-1.187694,-7.765198],[-7.990484,2.736716,-2.335274,-4.114821],[8.595630,-5.651057,-4.836583,8.061316]],[[7.420895,3.595212,9.358273,5.061137],[-9.862460,-4.924965,0.900341,4.893655],[2.586256,-7.290811,-3.683035,-7.768392],[7.145253,3.245686,-9.138551,-2.856110]],[[5.178368,4.612636,6.599289,3.323226],[-5.117624,-2.214920,-5.083514,-1.791329],[5.221877,-4.816822,8.304538,1.507594],[7.516055,-7.101209,1.826037,4.881051]],[[-8.840317,3.443650,3.339806,-9.693575],[3.352719,0.073620,-1.225627,4.502904],[-1.340628,6.019223,-6.734168,-2.225262],[0.071951,5.317083,5.790500,-0.745363]],[[-1.436399,-6.903119,-5.524381,6.296855],[0.809027,4.365286,-4.188839,6.888253],[-6.568038,-2.707796,9.649455,-4.667903],[0.993428,5.556006,-5.052940,0.336946]],[[-0.682201,-6.230408,-9.077693,-9.329151],[-1.859605,6.927232,-7.451652,9.676441],[-5.203941,8.341897,-5.094189,-2.844585],[-4.460878,7.544892,7.665014,8.908480]],[[-0.358792,-5.493904,2.168199,-9.394210],[0.553761,5.521989,3.832493,-4.575870],[-7.577009,4.568111,-0.457276,8.165673],[-5.667984,2.380893,0.985803,2.870228]],[[7.509363,-0.964314,-6.549452,-8.362331],[-1.074334,2.515583,4.931234,8.941375],[7.311871,-4.305935,5.224441,-3.397961],[-6.615475,6.209298,-8.449550,4.611976]]], dtype = "float32")#candidate|4870|(16, 4, 4)|const|float32
bop_4871 = relay.equal(call_4868.astype('bool'), relay.reshape(const_4870.astype('bool'), relay.shape_of(call_4868))) # shape=(16, 4, 4)
bop_4874 = relay.equal(call_4869.astype('bool'), relay.reshape(const_4870.astype('bool'), relay.shape_of(call_4869))) # shape=(16, 4, 4)
output = relay.Tuple([bop_4871,])
output2 = relay.Tuple([bop_4874,])
func_4878 = relay.Function([], output)
mod['func_4878'] = func_4878
mod = relay.transform.InferType()(mod)
output = func_4878()
func_4879 = relay.Function([], output)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4187_call = mod.get_global_var('func_4187')
func_4188_call = mutated_mod.get_global_var('func_4188')
call_4890 = relay.TupleGetItem(func_4187_call(), 1)
call_4891 = relay.TupleGetItem(func_4188_call(), 1)
output = call_4890
output2 = call_4891
func_4904 = relay.Function([], output)
mod['func_4904'] = func_4904
mod = relay.transform.InferType()(mod)
output = func_4904()
func_4905 = relay.Function([], output)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4948 = relay.const([[[8.819382,1.092628,3.811427,-3.711501,-2.273703,2.485078,4.021479],[-6.554506,6.791427,6.110748,-8.647524,-7.585933,4.390612,1.157427],[5.852396,4.245806,-4.661422,3.465985,-9.616249,1.063304,-5.660575],[-1.364480,-4.557316,-9.074976,-7.688198,0.178058,9.156198,0.877642],[5.957412,-8.717258,3.559556,9.891366,-4.184147,2.846465,-9.210047],[-8.859114,-5.820546,-5.870965,7.100356,-9.052470,-6.864743,5.177522],[-9.868204,-3.026687,7.144576,-2.753364,-5.098442,-2.255826,-5.183948],[9.827314,-9.942557,-5.972670,7.767988,0.957133,5.631991,-5.184433],[9.833676,8.073711,8.192788,0.882303,-6.531935,8.945857,1.515360],[-8.474718,-0.289640,-4.943138,0.573956,8.888846,0.172200,2.973077],[-8.983555,-7.720550,6.126332,3.974204,-7.511609,3.456107,3.972097],[0.079024,3.587094,-9.569055,-0.001140,-1.811502,3.028284,-3.243929],[4.432985,2.572588,9.365772,6.170119,-7.896094,5.090829,-0.884125],[8.218866,-7.272177,-7.405583,-2.583749,2.611205,-1.188998,-0.765013],[1.151611,-7.364962,2.719571,-6.355859,-2.087782,1.032720,0.912078]],[[0.413872,-2.177761,9.600416,5.951592,-0.766715,-0.381071,-9.402119],[6.880914,7.855985,4.485670,9.407334,0.913949,-8.462513,-8.210068],[-6.157627,-5.451167,7.205651,1.251502,2.196537,-8.346823,-4.942429],[0.205353,9.019958,-3.263331,6.011065,2.764644,-1.264101,8.742215],[-5.829762,-6.729845,1.258987,-4.227878,0.520240,0.984044,-4.862598],[-3.684898,-9.472701,-9.354891,5.383441,-3.465422,-7.111914,0.054692],[2.902320,9.284249,-0.507237,-7.089476,3.126822,-0.491356,-9.853772],[2.888578,-2.938127,-1.552151,-2.555586,-0.273731,6.761806,-4.248747],[-1.064844,-7.937960,-2.415700,5.445413,2.596342,-1.868850,-6.736745],[-2.479187,-0.939077,-2.321884,0.168521,-4.275214,1.447609,7.243112],[8.136173,-5.355150,-1.840036,3.317065,1.434457,0.505626,6.257962],[3.278104,1.680925,-2.599457,9.525572,-1.036657,5.286491,-2.907105],[2.928984,8.491438,-2.225467,1.170094,-6.608692,0.419882,1.724850],[8.727054,4.808701,9.941673,-2.397705,-0.210742,-6.433749,-2.251215],[1.405416,-4.614130,4.384606,-9.701195,8.403948,-0.092859,-7.925089]],[[7.769970,-2.625087,-7.061556,3.531977,-6.608837,-0.077915,-9.082212],[6.639806,-8.736865,6.177713,-0.166495,6.982059,-3.997196,-0.883706],[-4.869325,5.737984,-7.222069,-2.970178,2.686397,-2.738129,2.023213],[-8.904182,1.166933,7.019605,8.934558,-8.299181,9.482643,-3.797147],[0.093977,-2.736990,5.871845,3.096135,1.861916,0.075567,-0.958678],[5.413120,-2.329650,4.550364,7.695044,2.473244,8.740414,-0.635234],[3.720250,8.912715,9.724188,7.624606,2.159602,4.850493,-6.725009],[6.314621,-2.033521,1.490509,-0.130941,5.863575,7.391021,-0.955944],[-5.004316,2.964731,6.264542,-4.475802,-4.502527,-4.683084,8.136879],[-4.512688,-3.403129,-6.304149,-8.388987,0.651632,-2.649539,5.751442],[5.187359,-5.373623,-6.637514,-5.531130,-9.701478,2.400264,-0.433669],[-2.044310,7.026015,4.386644,-5.257741,-9.653393,8.470394,-9.195292],[-7.460636,1.244347,1.571684,-8.585615,8.654523,-9.262736,0.967796],[-7.498080,6.467029,1.174561,-3.075628,-2.690618,-7.802549,5.833331],[-7.052266,8.020288,1.329078,-6.460808,3.992001,1.003813,8.377881]],[[-5.533345,1.523512,-9.942710,-4.004825,6.698413,7.580664,8.532786],[-9.719663,5.630643,-7.181037,-9.498402,-9.112495,4.784122,8.407470],[-5.814105,-3.353752,3.686520,-1.235803,-7.458702,-8.354733,4.850076],[5.480732,1.866315,7.818688,-4.118837,-6.938627,-1.557489,6.285831],[-7.343380,-6.010708,-6.854387,9.931956,-0.075550,6.696698,-2.756061],[-1.735545,4.264774,0.441267,0.760665,-6.325252,-7.115045,-2.287026],[2.220252,-1.207708,-4.547576,-5.608356,4.020187,7.248037,3.167833],[-1.009447,-8.500827,2.339770,-8.588578,-4.184450,-2.744142,0.045449],[8.158339,8.891053,-3.555140,-8.347420,-1.825913,9.315085,3.451167],[1.195150,5.536842,-1.281744,-1.034053,-7.538562,-0.282897,-5.930816],[0.971466,-5.604923,-7.926937,5.334263,5.444224,0.053564,-0.616815],[-7.444016,3.692884,9.455238,3.101097,-3.193412,1.560593,8.425906],[-5.809670,-8.643390,2.443253,-2.282563,-5.455012,-0.369437,-6.246482],[9.781745,-4.985359,-3.991067,6.609936,5.762922,9.648337,-5.633488],[-0.964370,3.630279,-2.734845,-7.966855,-4.607027,9.238275,-5.820315]]], dtype = "float32")#candidate|4948|(4, 15, 7)|const|float32
uop_4949 = relay.sinh(const_4948.astype('float32')) # shape=(4, 15, 7)
output = relay.Tuple([uop_4949,])
output2 = relay.Tuple([uop_4949,])
func_4953 = relay.Function([], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mutated_mod.get_global_var('func_4953')
call_4954 = func_4953_call()
output = call_4954
func_4955 = relay.Function([], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5013 = relay.var("var_5013", dtype = "int32", shape = (7, 3, 4))#candidate|5013|(7, 3, 4)|var|int32
var_5014 = relay.var("var_5014", dtype = "int32", shape = (7, 3, 4))#candidate|5014|(7, 3, 4)|var|int32
bop_5015 = relay.right_shift(var_5013.astype('int32'), relay.reshape(var_5014.astype('int32'), relay.shape_of(var_5013))) # shape=(7, 3, 4)
func_3030_call = mod.get_global_var('func_3030')
func_3032_call = mutated_mod.get_global_var('func_3032')
const_5023 = relay.const([8,-1,-10,7,4,2,-10,-6,-6,-9,-10,-2,-10,10,4,-5,-5,-5,3,-3,-4,2,7,-8,-5,-9,-4,3,5,7,5,4,-10,-3,8,1,2,-7,-3,9,4,5,1,1,9,5,-3,2], dtype = "uint64")#candidate|5023|(48,)|const|uint64
call_5022 = func_3030_call(relay.reshape(const_5023.astype('uint64'), [3, 2, 8]))
call_5024 = func_3030_call(relay.reshape(const_5023.astype('uint64'), [3, 2, 8]))
uop_5027 = relay.sigmoid(var_5013.astype('float32')) # shape=(7, 3, 4)
output = relay.Tuple([bop_5015,call_5022,const_5023,uop_5027,])
output2 = relay.Tuple([bop_5015,call_5024,const_5023,uop_5027,])
func_5029 = relay.Function([var_5013,var_5014,], output)
mod['func_5029'] = func_5029
mod = relay.transform.InferType()(mod)
var_5030 = relay.var("var_5030", dtype = "int32", shape = (7, 3, 4))#candidate|5030|(7, 3, 4)|var|int32
var_5031 = relay.var("var_5031", dtype = "int32", shape = (7, 3, 4))#candidate|5031|(7, 3, 4)|var|int32
output = func_5029(var_5030,var_5031,)
func_5032 = relay.Function([var_5030,var_5031,], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3362_call = mod.get_global_var('func_3362')
func_3364_call = mutated_mod.get_global_var('func_3364')
call_5124 = relay.TupleGetItem(func_3362_call(), 0)
call_5125 = relay.TupleGetItem(func_3364_call(), 0)
func_2340_call = mod.get_global_var('func_2340')
func_2342_call = mutated_mod.get_global_var('func_2342')
call_5143 = relay.TupleGetItem(func_2340_call(relay.reshape(call_5124.astype('float64'), [12, 9, 11])), 2)
call_5144 = relay.TupleGetItem(func_2342_call(relay.reshape(call_5124.astype('float64'), [12, 9, 11])), 2)
bop_5146 = relay.less(call_5143.astype('bool'), relay.reshape(call_5124.astype('bool'), relay.shape_of(call_5143))) # shape=(1188,)
bop_5149 = relay.less(call_5144.astype('bool'), relay.reshape(call_5125.astype('bool'), relay.shape_of(call_5144))) # shape=(1188,)
uop_5154 = relay.atanh(bop_5146.astype('float32')) # shape=(1188,)
uop_5156 = relay.atanh(bop_5149.astype('float32')) # shape=(1188,)
output = relay.Tuple([uop_5154,])
output2 = relay.Tuple([uop_5156,])
func_5157 = relay.Function([], output)
mod['func_5157'] = func_5157
mod = relay.transform.InferType()(mod)
output = func_5157()
func_5158 = relay.Function([], output)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_5176 = relay.TupleGetItem(func_3046_call(), 0)
call_5177 = relay.TupleGetItem(func_3048_call(), 0)
func_4617_call = mod.get_global_var('func_4617')
func_4619_call = mutated_mod.get_global_var('func_4619')
var_5182 = relay.var("var_5182", dtype = "uint64", shape = (48,))#candidate|5182|(48,)|var|uint64
call_5181 = relay.TupleGetItem(func_4617_call(relay.reshape(var_5182.astype('uint64'), [48,])), 1)
call_5183 = relay.TupleGetItem(func_4619_call(relay.reshape(var_5182.astype('uint64'), [48,])), 1)
output = relay.Tuple([call_5176,call_5181,var_5182,])
output2 = relay.Tuple([call_5177,call_5183,var_5182,])
func_5185 = relay.Function([var_5182,], output)
mod['func_5185'] = func_5185
mod = relay.transform.InferType()(mod)
var_5186 = relay.var("var_5186", dtype = "uint64", shape = (48,))#candidate|5186|(48,)|var|uint64
output = func_5185(var_5186)
func_5187 = relay.Function([var_5186], output)
mutated_mod['func_5187'] = func_5187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2121_call = mod.get_global_var('func_2121')
func_2122_call = mutated_mod.get_global_var('func_2122')
call_5271 = relay.TupleGetItem(func_2121_call(), 3)
call_5272 = relay.TupleGetItem(func_2122_call(), 3)
output = relay.Tuple([call_5271,])
output2 = relay.Tuple([call_5272,])
func_5276 = relay.Function([], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
output = func_5276()
func_5277 = relay.Function([], output)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4659_call = mod.get_global_var('func_4659')
func_4661_call = mutated_mod.get_global_var('func_4661')
call_5337 = relay.TupleGetItem(func_4659_call(), 0)
call_5338 = relay.TupleGetItem(func_4661_call(), 0)
output = call_5337
output2 = call_5338
func_5356 = relay.Function([], output)
mod['func_5356'] = func_5356
mod = relay.transform.InferType()(mod)
mutated_mod['func_5356'] = func_5356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mutated_mod.get_global_var('func_5356')
call_5357 = func_5356_call()
output = call_5357
func_5358 = relay.Function([], output)
mutated_mod['func_5358'] = func_5358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3584_call = mod.get_global_var('func_3584')
func_3586_call = mutated_mod.get_global_var('func_3586')
call_5374 = relay.TupleGetItem(func_3584_call(), 1)
call_5375 = relay.TupleGetItem(func_3586_call(), 1)
output = relay.Tuple([call_5374,])
output2 = relay.Tuple([call_5375,])
func_5378 = relay.Function([], output)
mod['func_5378'] = func_5378
mod = relay.transform.InferType()(mod)
output = func_5378()
func_5379 = relay.Function([], output)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_5385 = relay.TupleGetItem(func_2049_call(), 2)
call_5386 = relay.TupleGetItem(func_2050_call(), 2)
output = call_5385
output2 = call_5386
func_5389 = relay.Function([], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5390 = func_5389_call()
output = call_5390
func_5391 = relay.Function([], output)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5395 = relay.var("var_5395", dtype = "int32", shape = (14, 15, 2))#candidate|5395|(14, 15, 2)|var|int32
var_5396 = relay.var("var_5396", dtype = "int32", shape = (14, 15, 2))#candidate|5396|(14, 15, 2)|var|int32
bop_5397 = relay.left_shift(var_5395.astype('int32'), relay.reshape(var_5396.astype('int32'), relay.shape_of(var_5395))) # shape=(14, 15, 2)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
const_5425 = relay.const([[-8.961617,-2.365544],[7.530304,7.064143],[-2.416725,-3.077989],[0.953968,-9.162473],[-8.021493,7.400292],[4.944949,-0.166141],[6.494670,0.063580],[7.046044,6.213163],[-2.082584,7.541577],[-6.078283,-8.938410],[-3.761191,6.502536],[-3.544426,-7.922845],[8.403029,-9.703597],[5.790827,-0.924360],[-6.920036,-4.906087],[8.193020,-5.854984],[-3.821910,0.929943],[-1.381721,6.203692],[-6.085525,-8.853473],[-5.329029,4.548982],[-0.342510,0.192712],[-4.637820,-5.872651],[5.570925,9.424422],[9.924950,-7.951390],[3.819586,-8.033019],[3.153467,-9.980213],[-4.641811,-8.131996],[1.176970,-6.323270],[8.660049,-4.190949],[6.304610,8.747211],[5.512239,8.368083],[-2.852138,-0.963839],[8.888531,3.255156],[-3.243091,5.970875],[-3.816249,-8.489145],[9.168803,-0.144856],[-4.735904,7.801461],[2.767515,-1.868650],[2.323396,0.329663],[1.003321,5.368648],[-7.696869,9.854753],[-2.966910,-5.503739],[-4.018923,8.869879],[5.932340,-7.359763],[-2.144589,-3.719462],[-0.778343,-1.401810],[-8.257152,6.881782],[-8.942925,9.762872],[1.694283,8.671673],[0.008730,2.017118],[-1.217146,6.267043],[-3.634996,7.029502],[6.783699,-9.981709],[-4.650684,5.177679],[8.450166,-0.024912],[9.115201,-0.991456],[-0.182653,2.263743],[5.669609,0.046180],[3.314614,-2.135646],[1.557398,-0.201701],[8.624111,-3.241002],[1.352267,-9.783507],[9.119561,-7.088321],[-8.392136,0.269698],[9.689461,-4.975551],[8.518272,-2.418219],[2.720616,-9.774073],[7.083498,5.257098],[-5.318921,-3.993021],[-7.558026,-3.086657],[-6.014901,-2.838156],[5.521049,2.251675],[-8.429424,-5.852570],[-0.987236,-0.032126],[9.504773,-4.072830],[9.505423,6.209471],[7.233303,-9.923757],[-7.756373,2.509729],[6.922538,-3.592302],[-3.523801,1.165205],[5.653516,-2.937023],[2.408299,8.241792],[-9.569869,5.908292],[-5.093125,3.786957],[-6.322161,0.774030],[-7.416467,2.295065],[-6.159514,-6.879358],[-3.097751,-2.501371],[2.909806,5.999161],[3.706295,2.442133],[-9.698129,-1.127420],[5.955476,-9.498813],[1.152655,8.244301],[1.070272,7.111555],[-2.881459,-1.348979],[-5.181050,-0.028816],[4.152226,-9.808163],[9.962327,-2.457296],[-9.721773,-7.358083],[-2.598590,1.138663],[-0.211818,0.858870],[-4.257729,3.207988],[6.925621,1.824423],[-1.736507,7.566502],[2.393934,8.195244],[-3.920985,-0.176744],[-7.411342,-4.235832],[5.787130,-4.634244],[-1.660968,2.119474],[-9.212831,5.082713],[-2.715466,3.971104],[0.648423,4.581221],[-0.133846,5.730572],[-3.799376,7.119876],[-6.821043,-6.311299],[-5.072271,3.865665],[-0.185017,6.000340],[7.140133,-8.863943],[9.146205,4.817385],[6.199025,6.796873],[4.290966,-1.701877],[-4.108452,-2.958860],[8.087689,-9.095165],[6.728884,5.081228],[6.743882,-8.268019],[1.972313,-3.073848],[6.544471,0.630927],[-3.204232,-9.186724]], dtype = "float32")#candidate|5425|(128, 2)|const|float32
const_5426 = relay.const([[-3.761896,4.157870,-1.318611,-9.280709,-8.438911,-6.752300,4.393002,-9.495312,-8.799764,4.786271,-0.737169,-6.628128,9.106514,8.294669,9.318748,-2.649800,5.311271,-8.639704,-4.916819,1.141119,-3.176091,7.166558,-4.287646,-9.544509,8.450066,-0.785705,5.633232,3.453123,5.762135,-7.158179,2.389250,-5.122566,-8.882228,-2.309458,-1.936445,-0.126248,0.315965,-7.008901,0.793957,-3.154961,-5.535483,-6.556649,2.048689,-6.466121,-4.721407,1.705298,1.460731,-3.400480,-7.409318,-4.254999,1.058513,-9.854393,-0.523409,-7.814373,9.772162,5.926247,5.465635,1.641142,1.878735,6.094711,3.831202,2.219619,4.303619,-8.857427,-7.372457,-0.371039],[6.132682,-5.801981,6.771887,1.464184,8.546323,-9.025706,-5.066210,1.761790,8.639241,4.079620,3.086595,2.931916,1.417140,-4.870421,-5.313993,7.642379,4.058840,0.956092,-6.301695,1.475670,8.348193,-6.807319,-8.872753,3.800558,3.756045,-6.814883,8.537353,2.327437,2.653579,-7.771731,-0.731000,-2.786816,0.222319,-8.032220,-1.285399,3.427285,1.891946,-3.007784,4.325761,2.171347,-1.993600,8.983426,4.483439,-4.947545,6.796219,-1.231278,-1.395581,3.652156,-4.522474,0.406824,-9.567888,6.238352,1.099554,6.426996,2.441247,0.763519,-5.604959,-3.505453,2.135840,-7.745336,2.323719,-7.742255,7.481286,-4.728572,1.128247,4.695475],[-1.158397,4.938306,-1.668017,3.656330,8.309189,4.100491,4.840878,7.713643,2.628305,2.197614,-2.938279,-7.292948,-8.235103,1.242714,5.460379,5.205264,5.416439,1.842802,9.346745,-2.995243,4.978427,-3.681201,6.574335,1.067959,5.781002,6.832035,-9.748474,-0.578559,-4.903263,-2.726346,-0.680671,-5.000907,-3.866728,4.755554,-3.523198,-3.261924,5.963427,-6.529455,-0.748985,1.480891,2.839099,8.368815,1.820497,-5.139640,9.358371,6.854738,-3.518657,-9.579984,2.847944,-3.790891,0.392506,2.309375,4.129370,0.478899,6.551011,5.114965,5.042829,-7.673791,-9.950294,5.115352,4.941422,1.525463,-0.818216,-1.619349,2.200786,4.082692],[5.717168,-2.228186,-5.061069,-2.085291,-1.735247,-7.012572,-6.402638,-8.988302,7.988696,-8.167538,-0.201219,-2.150269,7.069802,-1.943422,5.476863,8.813875,-0.747658,5.683174,8.855419,-8.260864,-5.977920,-6.787479,4.105858,9.098067,-2.749460,3.234523,-8.189126,0.555006,-1.974160,-8.727938,4.727446,-1.913438,2.864169,-8.785180,1.024043,2.947062,-5.769026,-7.844430,-5.656398,-3.681709,-7.728276,-2.817021,-9.523097,-4.249742,7.534503,-0.333365,7.417432,5.155363,5.584463,2.663995,-9.341549,-0.470944,-5.172100,0.239852,-4.451856,3.904534,7.318029,5.082046,4.537381,8.954796,6.949216,7.312205,-5.714525,2.264761,2.034043,0.150105],[2.638494,-5.750490,-3.149276,4.357826,9.194501,8.104342,-4.710501,-5.175998,2.166297,-5.254464,-8.367668,1.754866,-4.073422,-2.489700,1.530321,-5.522852,0.496376,6.679611,-1.983975,-3.019139,6.967314,-9.497822,8.496394,-8.071315,-8.441216,8.450813,-2.416072,-2.071900,2.854577,-2.254976,-2.126100,-4.091685,8.923706,5.426760,-8.958704,-6.571943,-2.187747,9.440115,3.405429,-6.008032,-1.223818,-5.227966,-1.913873,-9.163577,5.351494,-6.765060,0.103040,4.990213,-2.443163,-7.790858,7.018931,0.743049,2.532543,5.117955,-4.303027,2.132907,0.025746,7.074367,-0.031313,8.926959,4.915781,7.816161,-2.159694,8.762058,6.123445,8.431804],[-1.026505,-5.217753,8.283833,3.039861,6.458119,6.556442,-9.389582,-5.778725,-9.291339,3.249314,-0.078498,-5.958707,3.418099,0.427250,5.295623,2.226442,5.771402,1.726547,3.141229,-9.135017,7.779154,5.435891,3.815014,-3.671441,-8.327057,9.381499,-0.769672,9.484861,3.189295,9.731785,-9.220988,5.542136,-5.450080,-6.982291,7.624063,2.036901,-0.387230,-5.073564,-9.326309,8.933327,-8.073678,8.584716,-0.949651,4.108491,-1.623235,-6.280662,0.881803,-3.823231,2.957937,-1.298123,-4.527017,5.482910,-5.332274,-9.447608,6.875057,1.639449,-0.464684,-1.527168,-6.259933,-4.217468,-1.813927,1.851722,-0.899386,-7.515125,-3.395738,-5.403705],[-6.981382,-2.685601,-7.627119,2.917915,-7.358519,0.791136,-6.915067,-9.341137,8.648059,8.025357,0.692936,-9.956213,-1.635242,1.040271,6.341523,1.643828,-0.611050,-9.486730,-0.316399,-8.396374,1.551699,7.306811,0.168053,-6.077506,9.873838,5.825336,-3.194428,-8.441760,-8.769145,4.974635,-0.206148,4.084777,-3.877334,5.342877,9.104634,-6.792511,8.325837,-4.602795,7.061205,-2.121281,-7.208865,7.749949,4.265625,-1.903656,-5.209036,0.213233,-2.047246,9.568492,-8.060577,-4.138813,-7.384700,-3.736278,-4.429856,-8.300464,0.969672,-2.155846,-4.449459,-3.006278,-4.497419,3.053980,0.460706,4.367019,8.375628,-4.715598,9.611389,-8.458341],[9.693786,0.335159,0.013467,7.076239,-8.872024,3.896952,-2.659103,-4.921499,-1.672041,0.754568,-6.907036,3.791285,1.516352,-4.685175,-5.561987,-0.126460,0.510002,-9.114532,1.456380,-9.611670,8.412960,0.493135,5.708704,-4.196282,9.842941,6.393538,-6.087086,-5.312215,3.700433,-8.931505,9.088971,9.409607,6.611695,4.184695,-6.693887,-4.238309,6.018994,8.237048,-0.637611,-6.190078,2.736956,6.929055,3.872381,1.261116,-2.954290,-9.710668,-7.288980,9.578209,3.754060,-6.827298,-3.318805,-5.589235,-8.957113,-5.512662,7.919870,7.045167,6.659225,3.716505,-9.309292,8.496196,-5.047523,-9.111820,3.329177,-2.698762,-1.331548,-6.011204],[-0.425139,3.239675,-3.789645,6.406626,-3.585249,-5.191197,2.298759,-6.884901,-6.546076,7.996582,-5.389377,8.043087,3.162378,-9.884962,1.227479,-3.063357,2.848742,-5.039103,2.981610,-5.603480,-1.494358,9.713488,-9.012200,5.944879,1.526702,1.591412,-4.718720,-9.069152,9.228369,-8.197520,7.851671,-7.509298,-5.208706,2.119327,-0.780953,8.561265,-4.617088,-5.775567,3.450500,-4.863466,-6.151596,-4.078128,-0.358148,-6.269510,2.001192,-4.995547,7.911967,-0.523382,-1.778978,-5.348220,7.990551,7.588417,-9.073042,-2.505664,-6.032765,6.432742,-8.860720,4.375918,-3.197909,-4.675858,-3.631035,-7.111544,7.179550,9.096028,-6.567522,-3.395916],[-9.245501,-6.189011,-9.706654,-0.478843,0.855007,1.154311,9.846984,-1.825906,1.177787,6.122016,-2.497360,9.472942,-2.359140,1.858871,-9.211355,-3.716230,2.261829,-6.032293,9.566631,-5.317451,-5.313156,0.746771,7.240234,1.301583,-9.492839,-6.158869,-3.503741,8.194502,0.910734,-3.840159,-0.871258,-6.729492,5.753671,3.393736,1.478150,7.252496,-5.578549,6.168630,-6.012485,-2.842773,7.259966,1.226044,-2.120305,1.961628,5.126523,-8.956912,-5.661875,-3.791449,0.666694,2.852624,2.266817,-6.460840,2.209549,8.315434,-0.547579,-6.203085,1.434369,3.258629,-1.605101,2.934789,-6.346876,-8.315283,-7.103635,-6.775250,-0.478782,-9.101586],[-4.355526,0.441776,-0.562720,-2.268688,-6.096645,-8.089477,-7.431184,-7.122948,-4.659980,6.048580,8.367081,-5.449391,-2.749177,6.461034,-1.817706,-3.619011,-8.559210,-1.573151,1.265139,8.834778,6.356448,6.951337,5.302365,0.364708,2.229008,3.451415,-5.983992,-8.921981,-6.770468,4.903302,0.581371,-5.520058,-6.756996,-4.797132,6.028775,0.173886,8.483216,-6.698340,-0.592856,5.819369,-7.260011,-0.714413,-7.166023,0.703834,-6.798740,5.182134,0.343487,8.119366,-5.977265,8.792012,8.136698,-2.719134,9.459066,-0.289736,-2.544133,2.058241,-6.982063,4.300444,-2.914725,3.742290,-5.745670,-0.079044,-9.800350,7.809741,3.594163,-0.727840],[5.785462,8.542601,-0.476105,5.392814,0.985639,0.777671,-3.335175,-3.350577,-1.247832,-7.060086,-5.878678,-0.448597,-0.052332,7.305002,-6.368109,3.435093,7.942466,-9.976865,-5.753276,-6.991573,-4.604938,5.214128,2.778693,5.254144,9.676056,-0.721610,-8.772711,0.498008,-7.793196,-1.998637,-7.669540,-3.531560,-6.904811,0.696763,-2.230539,7.421709,-3.999116,-6.925397,-7.614914,0.926322,1.022567,-9.719951,-9.581848,-9.969650,-3.478470,8.661863,-5.434483,-7.092839,-7.119340,4.042003,-4.204413,5.125486,6.404140,-9.967199,4.210411,-4.580983,3.100070,-7.601528,-8.608353,-3.553160,6.258265,3.123852,2.693504,-6.812600,-2.048889,8.716488],[-0.258532,3.744889,-5.119434,-2.387343,7.268393,-7.818709,2.452235,-1.176132,0.386899,-5.862936,-9.489038,5.992651,-7.748991,9.733759,9.111689,2.150370,0.951422,-2.799552,-3.558942,0.623697,8.232563,-6.085040,-9.874570,-1.776538,2.241413,-8.098098,-9.888196,5.573535,3.555541,5.007372,2.791935,4.065304,6.013220,-1.913645,-1.187213,0.601589,3.256489,-0.470975,-8.342127,-9.903875,8.561052,9.282560,-1.583927,-1.201959,0.488592,-3.407669,-0.055180,7.665219,1.879581,1.552507,5.355147,2.747023,-7.489016,-0.171361,-3.202137,-4.545810,3.719652,-7.875560,2.362745,-2.597178,-0.971386,4.545663,-2.033063,9.794775,7.954320,4.428283],[2.030918,1.999403,-3.852048,0.724552,-6.602029,-0.276700,3.802568,1.728043,-6.438666,-8.458651,5.905295,8.486955,-2.461438,0.666101,-5.908341,2.235860,-5.902577,0.255246,-2.422867,2.661183,6.703705,7.218538,-7.746799,2.863455,-1.385985,-3.218460,4.573285,5.695898,-8.169701,7.216497,4.212988,-7.300115,-9.104210,-8.776561,-4.428945,2.300966,1.422648,3.767167,-2.706975,-7.133359,-8.409118,-0.814800,7.028443,5.426215,-0.109960,-2.953030,3.368158,8.265083,-6.278710,1.010750,-4.885783,-8.802749,6.888943,3.499630,-1.900225,-4.822650,-2.122480,5.447434,-0.910065,7.881611,1.288587,-8.258153,9.956326,-4.124665,9.284470,-3.913103],[2.889747,8.079069,-8.181080,-1.124900,2.591095,8.400459,1.445916,4.972843,-9.340103,-7.333989,-3.747422,-4.053905,1.758921,8.989924,-1.921389,-6.130984,1.368755,-9.852211,-5.276675,-9.410312,4.674221,-3.382811,-0.677366,-0.407373,-3.366619,5.576492,5.664333,-6.697411,-6.324391,6.097905,-5.624442,-4.423207,-6.705255,7.087638,5.807218,-3.622702,-7.075964,5.327812,-5.270612,9.322847,6.003879,7.749512,-8.595032,9.302778,9.256341,-2.602834,-7.353284,4.553115,8.897571,7.653925,6.640939,-9.221079,-7.364292,-0.874831,8.041053,-4.998927,-2.491037,-8.713718,9.921069,-3.987033,-0.141829,-2.945813,4.625476,6.299609,1.664238,-3.796146],[-6.087923,-4.958390,-3.786016,2.445202,-6.077059,-8.956524,3.019914,2.698751,-4.371081,-6.387444,-4.455577,7.044669,-2.865624,1.434607,-4.346305,-8.993892,-1.232977,8.292663,-5.425545,-0.937263,-9.998517,3.345087,7.002321,4.979775,-4.837228,9.940339,-8.877268,3.534648,6.951568,-6.505924,-9.636040,6.734008,6.959347,3.836113,2.760989,-1.037738,8.693378,-6.436972,8.151515,-8.044815,9.695883,-5.774154,5.945028,-6.657244,-7.159822,-7.411649,-6.891456,3.588380,-1.660166,1.361018,2.707021,-7.616470,8.090799,8.870508,-9.995558,8.836809,9.854712,3.940676,7.263960,-6.485416,4.361639,-4.605880,-0.037899,2.006001,-1.629155,-4.394687],[1.873780,-6.062072,8.876541,8.706220,-2.554752,8.506249,-1.300130,-6.272564,2.678420,-4.013028,3.528586,-1.387102,-6.410355,-2.282567,-3.207182,-0.367057,6.240096,-3.066405,4.175305,-3.350852,-0.703528,8.761401,5.962983,-4.693477,-0.540568,3.634487,9.667032,3.027925,6.829227,9.277346,3.509640,4.524846,-8.199129,0.432759,2.272660,0.837232,-4.802315,4.546897,-9.180678,-0.892184,-2.915535,-0.325904,8.258629,4.107492,-4.999633,-4.073384,1.403115,-8.498129,0.103736,0.449757,-6.500950,8.969407,1.851614,-9.092732,-5.383317,8.671993,-4.718861,3.070025,5.018421,-8.819976,6.202813,6.272043,7.382125,-5.319202,-0.958546,4.996318],[5.119971,4.110694,8.981833,-2.608344,-7.773391,-5.192316,-9.602344,-3.469649,5.632109,9.935002,4.993824,8.203959,-8.464492,1.246789,1.966420,8.499203,3.716953,7.501396,-4.266361,4.161247,7.769119,8.374858,4.002210,-1.457284,3.190731,2.840761,-9.550738,0.173374,-7.446322,6.785332,6.782027,-5.727802,7.192973,-4.166465,-4.358039,-3.193486,2.599383,1.440236,7.686695,7.301102,9.734943,1.085557,7.568641,-3.154006,-8.202755,7.641926,3.975814,-0.152977,-8.060306,-5.455123,-9.881893,-9.574954,8.504448,-7.001423,0.010483,5.012127,-9.411448,0.339774,7.075531,-3.788263,3.562322,1.669270,6.381756,-2.059462,-5.946493,-2.271769]], dtype = "float64")#candidate|5426|(18, 66)|const|float64
call_5424 = relay.TupleGetItem(func_800_call(relay.reshape(const_5425.astype('float32'), [16, 4, 4]), relay.reshape(const_5426.astype('float64'), [1188,]), ), 3)
call_5427 = relay.TupleGetItem(func_803_call(relay.reshape(const_5425.astype('float32'), [16, 4, 4]), relay.reshape(const_5426.astype('float64'), [1188,]), ), 3)
bop_5428 = relay.minimum(const_5425.astype('uint32'), relay.reshape(call_5424.astype('uint32'), relay.shape_of(const_5425))) # shape=(128, 2)
bop_5431 = relay.minimum(const_5425.astype('uint32'), relay.reshape(call_5427.astype('uint32'), relay.shape_of(const_5425))) # shape=(128, 2)
func_1856_call = mod.get_global_var('func_1856')
func_1858_call = mutated_mod.get_global_var('func_1858')
call_5432 = relay.TupleGetItem(func_1856_call(), 0)
call_5433 = relay.TupleGetItem(func_1858_call(), 0)
output = relay.Tuple([bop_5397,const_5426,bop_5428,call_5432,])
output2 = relay.Tuple([bop_5397,const_5426,bop_5431,call_5433,])
func_5445 = relay.Function([var_5395,var_5396,], output)
mod['func_5445'] = func_5445
mod = relay.transform.InferType()(mod)
var_5446 = relay.var("var_5446", dtype = "int32", shape = (14, 15, 2))#candidate|5446|(14, 15, 2)|var|int32
var_5447 = relay.var("var_5447", dtype = "int32", shape = (14, 15, 2))#candidate|5447|(14, 15, 2)|var|int32
output = func_5445(var_5446,var_5447,)
func_5448 = relay.Function([var_5446,var_5447,], output)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4681_call = mod.get_global_var('func_4681')
func_4683_call = mutated_mod.get_global_var('func_4683')
call_5484 = relay.TupleGetItem(func_4681_call(), 0)
call_5485 = relay.TupleGetItem(func_4683_call(), 0)
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_5496 = func_1508_call()
call_5497 = func_1508_call()
output = relay.Tuple([call_5484,call_5496,])
output2 = relay.Tuple([call_5485,call_5497,])
func_5510 = relay.Function([], output)
mod['func_5510'] = func_5510
mod = relay.transform.InferType()(mod)
output = func_5510()
func_5511 = relay.Function([], output)
mutated_mod['func_5511'] = func_5511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4722_call = mod.get_global_var('func_4722')
func_4723_call = mutated_mod.get_global_var('func_4723')
call_5545 = relay.TupleGetItem(func_4722_call(), 1)
call_5546 = relay.TupleGetItem(func_4723_call(), 1)
output = relay.Tuple([call_5545,])
output2 = relay.Tuple([call_5546,])
func_5558 = relay.Function([], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mutated_mod.get_global_var('func_5558')
call_5559 = func_5558_call()
output = call_5559
func_5560 = relay.Function([], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_5615 = relay.TupleGetItem(func_2796_call(), 1)
call_5616 = relay.TupleGetItem(func_2797_call(), 1)
func_2640_call = mod.get_global_var('func_2640')
func_2643_call = mutated_mod.get_global_var('func_2643')
call_5634 = relay.TupleGetItem(func_2640_call(relay.reshape(call_5615.astype('float64'), [1188,])), 1)
call_5635 = relay.TupleGetItem(func_2643_call(relay.reshape(call_5615.astype('float64'), [1188,])), 1)
func_4301_call = mod.get_global_var('func_4301')
func_4303_call = mutated_mod.get_global_var('func_4303')
call_5642 = func_4301_call()
call_5643 = func_4301_call()
output = relay.Tuple([call_5615,call_5634,call_5642,])
output2 = relay.Tuple([call_5616,call_5635,call_5643,])
func_5644 = relay.Function([], output)
mod['func_5644'] = func_5644
mod = relay.transform.InferType()(mod)
mutated_mod['func_5644'] = func_5644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5644_call = mutated_mod.get_global_var('func_5644')
call_5645 = func_5644_call()
output = call_5645
func_5646 = relay.Function([], output)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5644_call = mod.get_global_var('func_5644')
func_5646_call = mutated_mod.get_global_var('func_5646')
call_5827 = relay.TupleGetItem(func_5644_call(), 1)
call_5828 = relay.TupleGetItem(func_5646_call(), 1)
output = relay.Tuple([call_5827,])
output2 = relay.Tuple([call_5828,])
func_5829 = relay.Function([], output)
mod['func_5829'] = func_5829
mod = relay.transform.InferType()(mod)
output = func_5829()
func_5830 = relay.Function([], output)
mutated_mod['func_5830'] = func_5830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_5843 = func_3789_call()
call_5844 = func_3789_call()
func_3902_call = mod.get_global_var('func_3902')
func_3905_call = mutated_mod.get_global_var('func_3905')
const_5853 = relay.const([-3.137249,-8.033798,-6.430738,9.448353,4.185827,5.631802,-6.372600,7.338169,-0.551345,-3.602357,-3.320895,-3.174570,-3.343730,9.231516,-5.282261,0.953497,4.659998,1.492927,-9.925907,-1.661690,4.589151,8.549231,-5.954961,0.877402,-7.014992,-6.575623,5.727163,4.868701,7.198042,2.008807,6.765503,-1.829344,-9.950344,7.837730,-5.284570,-2.691104,7.927755,9.210260,-9.919634,-4.108495,-2.570374,8.405755,5.103966,1.526987,-7.877440,-7.345125,8.099996,-0.280945,-2.394693,-9.976554,0.881659,-9.339388,-4.510719,-8.675894,0.023656,5.636775,8.660047,8.206160,8.142898,3.349179,-1.660229,-1.435293,-4.747119,9.189327,-7.185335,8.822236,1.769096,-7.022472,2.157467,-6.289068,6.475415,-2.656535,4.533003,4.794222,-4.296624,-3.418254,-4.188213,8.435120,0.725535,7.842434,-1.910089,0.799078,4.105842,-5.028442,-1.198581,9.368290,-9.420898,5.881890,1.897073,5.701383,8.412499,-4.790466,-7.406224,3.801408,5.198019,0.200280,5.061419,0.292422,-8.749070,-3.086720,-2.081207,-4.083424,8.479541,-0.467108,-1.497893,4.214401,8.621599,2.187843,8.321520,4.348540,7.104269,-6.299558,2.479812,0.112785,2.626651,5.979633,0.494152,7.575723,1.554370,-5.659828,3.301149,1.458270,7.179438,-4.936037,3.550431,7.174714,-9.368026,-8.000065,1.782644,4.031473,8.916591,9.328105,-5.189751,7.649624,-9.433300,5.108244,3.587167,9.371783,1.323131,5.966883,0.164033,3.880926,0.339806,-3.550991,-9.022412,7.821004,-4.435681,-9.203278,8.756049,-8.281097,6.705946,0.559225,-2.257788,-2.935771,-6.489474,9.680286,-0.241404,7.968043,-2.402546,8.945239,0.760096,-6.161288,6.083641,-9.922937,-2.040074,-7.984540,-9.393759,1.522323,-5.144525,-2.474217,3.938708,3.946158,8.612714,9.243184,-5.284374,-6.633067,-1.145964,7.704780,6.443134,-7.593451,-9.636251,-3.691732,0.495864,9.947194,8.950780,-1.950470,8.844500,-9.062744,8.175090,-6.696424,-0.097801,5.318321,7.535791,-9.643784,9.671269,1.819524,-1.218409,-5.760240,9.568209,7.088627,-0.606709,4.618317,2.925570,-9.790591,-3.702340,-8.567388,5.825061,7.413322,-0.276305,6.949638,-8.737630,2.727174,-3.136885,-5.617594,-3.243711,-7.806537,-0.631831,-2.803361,-0.996572,-3.357015,-6.135499,9.484060,-7.489244,-9.814140,7.792101,-7.066995,-0.291581,-7.593871,-3.409513,-5.474949,-0.236764,3.352993,8.986558,4.080096,-6.095185,-2.486971,-7.879054,-0.948859,-7.901882,-9.542222,-5.402751,0.829173,-2.665391,-6.102224,1.030150,9.233021,0.132266,-0.116058,4.029352,-0.517597,4.739095,-4.737595,2.338499,-0.611152,3.792430,2.838780], dtype = "float32")#candidate|5853|(256,)|const|float32
var_5854 = relay.var("var_5854", dtype = "int16", shape = (448,))#candidate|5854|(448,)|var|int16
call_5852 = relay.TupleGetItem(func_3902_call(relay.reshape(const_5853.astype('float32'), [256,]), relay.reshape(var_5854.astype('int16'), [448,]), ), 4)
call_5855 = relay.TupleGetItem(func_3905_call(relay.reshape(const_5853.astype('float32'), [256,]), relay.reshape(var_5854.astype('int16'), [448,]), ), 4)
output = relay.Tuple([call_5843,call_5852,const_5853,var_5854,])
output2 = relay.Tuple([call_5844,call_5855,const_5853,var_5854,])
func_5867 = relay.Function([var_5854,], output)
mod['func_5867'] = func_5867
mod = relay.transform.InferType()(mod)
mutated_mod['func_5867'] = func_5867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5868 = relay.var("var_5868", dtype = "int16", shape = (448,))#candidate|5868|(448,)|var|int16
func_5867_call = mutated_mod.get_global_var('func_5867')
call_5869 = func_5867_call(var_5868)
output = call_5869
func_5870 = relay.Function([var_5868], output)
mutated_mod['func_5870'] = func_5870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5891 = relay.var("var_5891", dtype = "int16", shape = ())#candidate|5891|()|var|int16
var_5892 = relay.var("var_5892", dtype = "int16", shape = (16, 6, 13))#candidate|5892|(16, 6, 13)|var|int16
bop_5893 = relay.less_equal(var_5891.astype('bool'), var_5892.astype('bool')) # shape=(16, 6, 13)
output = bop_5893
output2 = bop_5893
func_5914 = relay.Function([var_5891,var_5892,], output)
mod['func_5914'] = func_5914
mod = relay.transform.InferType()(mod)
var_5915 = relay.var("var_5915", dtype = "int16", shape = ())#candidate|5915|()|var|int16
var_5916 = relay.var("var_5916", dtype = "int16", shape = (16, 6, 13))#candidate|5916|(16, 6, 13)|var|int16
output = func_5914(var_5915,var_5916,)
func_5917 = relay.Function([var_5915,var_5916,], output)
mutated_mod['func_5917'] = func_5917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5933 = relay.var("var_5933", dtype = "float64", shape = (15, 2, 13))#candidate|5933|(15, 2, 13)|var|float64
uop_5934 = relay.acosh(var_5933.astype('float64')) # shape=(15, 2, 13)
func_4187_call = mod.get_global_var('func_4187')
func_4188_call = mutated_mod.get_global_var('func_4188')
call_5937 = relay.TupleGetItem(func_4187_call(), 1)
call_5938 = relay.TupleGetItem(func_4188_call(), 1)
output = relay.Tuple([uop_5934,call_5937,])
output2 = relay.Tuple([uop_5934,call_5938,])
func_5943 = relay.Function([var_5933,], output)
mod['func_5943'] = func_5943
mod = relay.transform.InferType()(mod)
var_5944 = relay.var("var_5944", dtype = "float64", shape = (15, 2, 13))#candidate|5944|(15, 2, 13)|var|float64
output = func_5943(var_5944)
func_5945 = relay.Function([var_5944], output)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1858_call = mutated_mod.get_global_var('func_1858')
call_5973 = relay.TupleGetItem(func_1856_call(), 0)
call_5974 = relay.TupleGetItem(func_1858_call(), 0)
output = relay.Tuple([call_5973,])
output2 = relay.Tuple([call_5974,])
func_5991 = relay.Function([], output)
mod['func_5991'] = func_5991
mod = relay.transform.InferType()(mod)
mutated_mod['func_5991'] = func_5991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5991_call = mutated_mod.get_global_var('func_5991')
call_5992 = func_5991_call()
output = call_5992
func_5993 = relay.Function([], output)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_431_call = mod.get_global_var('func_431')
func_432_call = mutated_mod.get_global_var('func_432')
call_5996 = func_431_call()
call_5997 = func_431_call()
output = relay.Tuple([call_5996,])
output2 = relay.Tuple([call_5997,])
func_5998 = relay.Function([], output)
mod['func_5998'] = func_5998
mod = relay.transform.InferType()(mod)
mutated_mod['func_5998'] = func_5998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mutated_mod.get_global_var('func_5998')
call_5999 = func_5998_call()
output = call_5999
func_6000 = relay.Function([], output)
mutated_mod['func_6000'] = func_6000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1858_call = mutated_mod.get_global_var('func_1858')
call_6105 = relay.TupleGetItem(func_1856_call(), 0)
call_6106 = relay.TupleGetItem(func_1858_call(), 0)
func_4782_call = mod.get_global_var('func_4782')
func_4784_call = mutated_mod.get_global_var('func_4784')
call_6116 = relay.TupleGetItem(func_4782_call(), 0)
call_6117 = relay.TupleGetItem(func_4784_call(), 0)
func_4681_call = mod.get_global_var('func_4681')
func_4683_call = mutated_mod.get_global_var('func_4683')
call_6119 = relay.TupleGetItem(func_4681_call(), 0)
call_6120 = relay.TupleGetItem(func_4683_call(), 0)
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_6122 = func_602_call()
call_6123 = func_602_call()
output = relay.Tuple([call_6105,call_6116,call_6119,call_6122,])
output2 = relay.Tuple([call_6106,call_6117,call_6120,call_6123,])
func_6126 = relay.Function([], output)
mod['func_6126'] = func_6126
mod = relay.transform.InferType()(mod)
output = func_6126()
func_6127 = relay.Function([], output)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4361_call = mod.get_global_var('func_4361')
func_4362_call = mutated_mod.get_global_var('func_4362')
call_6144 = relay.TupleGetItem(func_4361_call(), 0)
call_6145 = relay.TupleGetItem(func_4362_call(), 0)
func_5998_call = mod.get_global_var('func_5998')
func_6000_call = mutated_mod.get_global_var('func_6000')
call_6147 = relay.TupleGetItem(func_5998_call(), 0)
call_6148 = relay.TupleGetItem(func_6000_call(), 0)
output = relay.Tuple([call_6144,call_6147,])
output2 = relay.Tuple([call_6145,call_6148,])
func_6151 = relay.Function([], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
mutated_mod['func_6151'] = func_6151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mutated_mod.get_global_var('func_6151')
call_6152 = func_6151_call()
output = call_6152
func_6153 = relay.Function([], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1845_call = mutated_mod.get_global_var('func_1845')
call_6166 = relay.TupleGetItem(func_1844_call(), 1)
call_6167 = relay.TupleGetItem(func_1845_call(), 1)
func_4415_call = mod.get_global_var('func_4415')
func_4416_call = mutated_mod.get_global_var('func_4416')
call_6168 = func_4415_call()
call_6169 = func_4415_call()
output = relay.Tuple([call_6166,call_6168,])
output2 = relay.Tuple([call_6167,call_6169,])
func_6175 = relay.Function([], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mutated_mod.get_global_var('func_6175')
call_6176 = func_6175_call()
output = call_6176
func_6177 = relay.Function([], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_6183 = relay.TupleGetItem(func_2969_call(), 0)
call_6184 = relay.TupleGetItem(func_2970_call(), 0)
uop_6188 = relay.atanh(call_6183.astype('float32')) # shape=(12, 9, 11)
uop_6190 = relay.atanh(call_6184.astype('float32')) # shape=(12, 9, 11)
func_2527_call = mod.get_global_var('func_2527')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_6206 = relay.TupleGetItem(func_2527_call(), 0)
call_6207 = relay.TupleGetItem(func_2528_call(), 0)
output = relay.Tuple([uop_6188,call_6206,])
output2 = relay.Tuple([uop_6190,call_6207,])
func_6224 = relay.Function([], output)
mod['func_6224'] = func_6224
mod = relay.transform.InferType()(mod)
output = func_6224()
func_6225 = relay.Function([], output)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5378_call = mod.get_global_var('func_5378')
func_5379_call = mutated_mod.get_global_var('func_5379')
call_6238 = relay.TupleGetItem(func_5378_call(), 0)
call_6239 = relay.TupleGetItem(func_5379_call(), 0)
func_3654_call = mod.get_global_var('func_3654')
func_3656_call = mutated_mod.get_global_var('func_3656')
call_6267 = relay.TupleGetItem(func_3654_call(relay.reshape(call_6238.astype('float64'), [12, 9, 11])), 0)
call_6268 = relay.TupleGetItem(func_3656_call(relay.reshape(call_6238.astype('float64'), [12, 9, 11])), 0)
output = relay.Tuple([call_6238,call_6267,])
output2 = relay.Tuple([call_6239,call_6268,])
func_6301 = relay.Function([], output)
mod['func_6301'] = func_6301
mod = relay.transform.InferType()(mod)
output = func_6301()
func_6302 = relay.Function([], output)
mutated_mod['func_6302'] = func_6302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6387 = relay.var("var_6387", dtype = "float32", shape = ())#candidate|6387|()|var|float32
var_6388 = relay.var("var_6388", dtype = "float32", shape = (8, 8, 7))#candidate|6388|(8, 8, 7)|var|float32
bop_6389 = relay.floor_divide(var_6387.astype('float32'), var_6388.astype('float32')) # shape=(8, 8, 7)
bop_6395 = relay.right_shift(bop_6389.astype('uint32'), relay.reshape(var_6388.astype('uint32'), relay.shape_of(bop_6389))) # shape=(8, 8, 7)
output = relay.Tuple([bop_6395,])
output2 = relay.Tuple([bop_6395,])
func_6400 = relay.Function([var_6387,var_6388,], output)
mod['func_6400'] = func_6400
mod = relay.transform.InferType()(mod)
var_6401 = relay.var("var_6401", dtype = "float32", shape = ())#candidate|6401|()|var|float32
var_6402 = relay.var("var_6402", dtype = "float32", shape = (8, 8, 7))#candidate|6402|(8, 8, 7)|var|float32
output = func_6400(var_6401,var_6402,)
func_6403 = relay.Function([var_6401,var_6402,], output)
mutated_mod['func_6403'] = func_6403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1844_call = mod.get_global_var('func_1844')
func_1845_call = mutated_mod.get_global_var('func_1845')
call_6501 = relay.TupleGetItem(func_1844_call(), 1)
call_6502 = relay.TupleGetItem(func_1845_call(), 1)
output = relay.Tuple([call_6501,])
output2 = relay.Tuple([call_6502,])
func_6515 = relay.Function([], output)
mod['func_6515'] = func_6515
mod = relay.transform.InferType()(mod)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mutated_mod.get_global_var('func_6515')
call_6516 = func_6515_call()
output = call_6516
func_6517 = relay.Function([], output)
mutated_mod['func_6517'] = func_6517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_6521 = relay.TupleGetItem(func_2710_call(), 0)
call_6522 = relay.TupleGetItem(func_2712_call(), 0)
output = relay.Tuple([call_6521,])
output2 = relay.Tuple([call_6522,])
func_6533 = relay.Function([], output)
mod['func_6533'] = func_6533
mod = relay.transform.InferType()(mod)
output = func_6533()
func_6534 = relay.Function([], output)
mutated_mod['func_6534'] = func_6534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4415_call = mod.get_global_var('func_4415')
func_4416_call = mutated_mod.get_global_var('func_4416')
call_6578 = func_4415_call()
call_6579 = func_4415_call()
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
call_6580 = relay.TupleGetItem(func_1147_call(), 1)
call_6581 = relay.TupleGetItem(func_1149_call(), 1)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_6586 = func_3789_call()
call_6587 = func_3789_call()
func_5356_call = mod.get_global_var('func_5356')
func_5358_call = mutated_mod.get_global_var('func_5358')
call_6596 = func_5356_call()
call_6597 = func_5356_call()
uop_6614 = relay.atan(call_6578.astype('float64')) # shape=(12, 9, 11)
uop_6616 = relay.atan(call_6579.astype('float64')) # shape=(12, 9, 11)
output = relay.Tuple([call_6580,call_6586,call_6596,uop_6614,])
output2 = relay.Tuple([call_6581,call_6587,call_6597,uop_6616,])
func_6617 = relay.Function([], output)
mod['func_6617'] = func_6617
mod = relay.transform.InferType()(mod)
output = func_6617()
func_6618 = relay.Function([], output)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6663 = relay.var("var_6663", dtype = "float64", shape = (3, 11, 5))#candidate|6663|(3, 11, 5)|var|float64
uop_6664 = relay.cosh(var_6663.astype('float64')) # shape=(3, 11, 5)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_6667 = relay.TupleGetItem(func_6617_call(), 0)
call_6668 = relay.TupleGetItem(func_6618_call(), 0)
uop_6671 = relay.rsqrt(var_6663.astype('float32')) # shape=(3, 11, 5)
output = relay.Tuple([uop_6664,call_6667,uop_6671,])
output2 = relay.Tuple([uop_6664,call_6668,uop_6671,])
func_6688 = relay.Function([var_6663,], output)
mod['func_6688'] = func_6688
mod = relay.transform.InferType()(mod)
var_6689 = relay.var("var_6689", dtype = "float64", shape = (3, 11, 5))#candidate|6689|(3, 11, 5)|var|float64
output = func_6688(var_6689)
func_6690 = relay.Function([var_6689], output)
mutated_mod['func_6690'] = func_6690
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6749 = relay.const([[[9.634154,8.591560,-7.183148,0.491214,8.952759,0.596369,-6.038388,8.038449,3.746282,9.224456],[-4.022385,4.283146,-3.807501,3.366031,3.607970,-4.760819,5.772120,-8.093299,4.466118,-9.308896],[-9.289693,-8.394753,-7.153728,-1.356479,-6.100159,-5.672600,-9.336510,1.088648,-2.759248,2.980047],[5.905994,-4.608865,8.905034,9.533696,-4.167404,6.754172,5.940959,6.026093,5.207457,0.456541],[9.670340,-4.954337,2.767622,-3.314311,-4.025155,4.457740,-9.840542,0.680689,-4.838813,-9.782232],[-8.804138,-9.253052,8.765477,4.751771,9.325163,-4.726696,-0.496227,-8.198201,-5.629750,2.355126],[-2.337854,3.287156,-5.533699,-5.153579,1.584123,5.374046,-8.277119,0.475199,4.407150,-3.511034]],[[0.308255,7.128867,-7.776502,3.302634,-2.755464,0.521425,1.286369,7.897220,1.181795,1.598413],[7.011706,-8.938956,-2.951233,4.293968,-1.809136,-3.127022,6.395374,4.652917,-5.372278,-2.820672],[3.534930,4.515322,-3.466824,-1.503650,9.534968,-2.226372,-1.424711,-4.746751,-1.310220,-9.474003],[-3.226639,-9.308852,-1.808799,4.138493,-5.138455,-4.164803,1.683918,1.754287,-8.894697,-5.760986],[4.688537,-4.899034,8.417631,-7.987959,0.308106,6.128333,6.898129,7.347064,2.856823,-2.149398],[-3.217319,-4.456205,9.764886,-2.357048,4.138544,0.932469,9.627871,9.501066,-2.593113,0.075907],[-5.367555,3.863131,-7.771016,-2.012261,2.725916,-2.196540,3.792644,-0.762570,-0.214722,-1.691750]],[[8.644037,-8.200565,-6.997672,8.078775,8.661229,-5.287407,4.669019,1.973172,-1.491232,-2.760558],[9.147228,9.472571,8.041596,6.030661,-9.027980,1.887557,4.726279,0.197879,9.205338,-4.504712],[4.340005,3.877873,2.824209,-2.410461,-4.523382,5.638974,7.218931,-6.252800,-5.490692,-9.294242],[6.650641,-8.354817,8.405582,-2.298280,9.518384,1.570157,7.739559,1.431057,-8.926105,-4.249632],[-4.108901,-8.615708,2.937129,-9.157829,-6.106012,-5.808349,8.596016,-5.858015,-8.184146,7.401375],[0.359184,-6.276029,2.347017,8.571714,-7.305065,-8.584613,-3.801270,-7.978890,0.522922,4.515050],[-1.562278,-4.231834,7.837756,-5.808319,6.981939,9.349224,9.361821,-5.099737,1.332361,-8.460896]],[[7.048820,3.768784,6.431223,6.581323,-7.835021,-3.709460,8.356726,-3.838135,0.472685,-4.868174],[7.358237,1.624497,-2.496611,7.361096,-1.653987,8.959303,7.421807,6.977746,-5.672102,2.821012],[6.992742,4.858551,-5.815530,9.044543,3.156753,4.971771,3.680371,2.554757,-6.332020,-0.923375],[-3.024381,-0.616256,-9.219152,-3.525906,8.863255,9.362122,9.660508,9.019495,1.209136,3.500001],[-8.086298,8.198549,0.787054,6.512413,7.397853,-7.609727,6.336113,6.706946,-7.609594,0.319411],[-8.413080,6.772401,1.222160,1.798136,1.770038,5.609265,4.289655,-3.903187,7.006938,-4.310890],[5.909869,-9.679027,-2.731227,-1.201972,8.648734,-9.919254,-4.428020,5.073162,-6.943169,-1.960731]]], dtype = "float64")#candidate|6749|(4, 7, 10)|const|float64
uop_6750 = relay.sin(const_6749.astype('float64')) # shape=(4, 7, 10)
uop_6760 = relay.asinh(const_6749.astype('float64')) # shape=(4, 7, 10)
func_6224_call = mod.get_global_var('func_6224')
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6765 = relay.TupleGetItem(func_6224_call(), 1)
call_6766 = relay.TupleGetItem(func_6225_call(), 1)
output = relay.Tuple([uop_6750,uop_6760,call_6765,])
output2 = relay.Tuple([uop_6750,uop_6760,call_6766,])
func_6773 = relay.Function([], output)
mod['func_6773'] = func_6773
mod = relay.transform.InferType()(mod)
mutated_mod['func_6773'] = func_6773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6773_call = mutated_mod.get_global_var('func_6773')
call_6774 = func_6773_call()
output = call_6774
func_6775 = relay.Function([], output)
mutated_mod['func_6775'] = func_6775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mod.get_global_var('func_5829')
func_5830_call = mutated_mod.get_global_var('func_5830')
call_6800 = relay.TupleGetItem(func_5829_call(), 0)
call_6801 = relay.TupleGetItem(func_5830_call(), 0)
output = call_6800
output2 = call_6801
func_6810 = relay.Function([], output)
mod['func_6810'] = func_6810
mod = relay.transform.InferType()(mod)
output = func_6810()
func_6811 = relay.Function([], output)
mutated_mod['func_6811'] = func_6811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
call_6846 = relay.TupleGetItem(func_1147_call(), 1)
call_6847 = relay.TupleGetItem(func_1149_call(), 1)
output = call_6846
output2 = call_6847
func_6860 = relay.Function([], output)
mod['func_6860'] = func_6860
mod = relay.transform.InferType()(mod)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mutated_mod.get_global_var('func_6860')
call_6861 = func_6860_call()
output = call_6861
func_6862 = relay.Function([], output)
mutated_mod['func_6862'] = func_6862
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6873 = relay.const([[[0.995896,2.208872,5.399903,-6.209604,-6.289960,-4.633107,0.813723,-5.853706,8.513257,-7.291808,-2.284252],[-0.150949,-0.286777,-0.501127,-0.836127,-2.958053,-5.665393,-4.806842,9.527323,5.146667,8.708558,4.809860],[9.079987,-6.481969,2.992980,3.629367,1.356757,9.722487,-7.190021,3.508747,-7.929547,4.673398,-7.857556],[-5.495988,-5.721212,2.299702,1.641208,7.699929,-8.795532,1.604079,-5.043396,0.243565,-8.759763,7.034186],[-6.779685,1.962856,8.863718,2.707067,-6.622948,5.845720,-8.584902,-7.227433,4.408107,-2.680972,9.634199],[-4.247649,-1.235643,3.893390,-2.535541,-3.477974,-2.563343,0.627238,-1.186360,1.763314,-8.857481,9.501410],[1.622886,1.848520,5.599243,-9.156264,4.748036,0.671760,9.440622,5.769644,4.013547,-2.594541,8.149581],[9.240699,7.681045,2.865649,9.365830,-9.878870,-0.212023,-7.034850,7.596080,7.940303,7.865375,3.426229],[3.095013,-5.152125,-2.073589,-7.604347,0.901478,7.561819,-2.294317,-0.643414,1.876068,-5.282772,-2.349370],[-9.952574,-7.294539,6.629005,-0.447592,-9.145871,7.543143,-8.626310,6.451427,3.936383,0.140402,6.462957],[6.976698,9.193597,-9.455131,8.179605,-7.785717,5.264011,9.622976,-0.322884,2.339137,5.080762,-5.207884],[-3.676428,7.707406,-9.495676,-6.230934,-3.348475,2.718423,-1.585114,-8.266625,6.342067,5.135975,8.941244]],[[5.526785,-8.073271,-3.161866,0.680249,-2.217483,-0.108771,0.621851,-8.052609,3.940745,-0.614927,-0.398652],[-5.811971,-7.690574,-3.808664,-6.424560,-7.036372,2.396476,-7.206189,-9.790009,-3.184936,3.681421,-5.807042],[6.869665,-6.348275,-2.909628,-0.734133,-9.844338,8.514419,-1.173595,-8.339444,2.225219,-9.637192,-0.195726],[-7.573854,-7.407332,5.067262,3.936242,-2.704830,-2.532846,9.519873,8.282906,6.772047,5.290367,-7.817492],[-8.239626,-6.202009,6.464737,2.097186,-1.745560,6.841172,-0.659314,-3.350095,-3.747131,2.784876,-1.508698],[1.723176,-4.060410,6.856472,6.370435,6.664649,-3.821316,2.044967,-7.785002,4.775964,-4.584622,6.083512],[5.408763,4.374347,-3.607170,-5.933972,2.846297,9.058301,5.580560,6.232281,-8.631847,-0.162302,4.994089],[6.392766,-7.991214,-6.859763,4.164531,-7.485181,6.300657,-2.505310,-9.469104,-1.043358,6.853756,2.610224],[-2.399309,8.076930,9.171272,-7.091837,-4.336649,-9.044598,-2.516785,6.261740,-5.418468,0.283064,0.867664],[1.753435,-1.247728,-5.938539,5.999875,-1.540204,-4.520036,8.512568,-9.852242,-6.667299,2.202879,1.777873],[1.786520,8.990462,-2.851601,-8.157694,-8.287018,5.753031,5.036639,-9.669894,6.981534,1.870884,3.863928],[4.585267,-4.782444,-6.157015,-8.258808,0.637488,-8.347094,2.278464,1.113572,5.493878,-6.319525,8.286300]],[[-2.783048,-8.349097,-8.015630,1.694403,-4.297956,9.720247,4.195232,-7.532207,-0.156282,7.206475,-3.781217],[2.938300,-8.286764,-8.100315,-0.077583,6.775487,6.154594,-5.169971,0.893844,1.451450,9.879378,-0.826143],[-3.559133,-9.807154,-5.536505,-0.335591,7.117745,1.497102,-2.114634,-6.900862,5.534996,1.699332,9.759676],[-2.912447,9.365861,3.343650,3.473038,6.939390,-0.509231,-6.785636,-2.188629,-4.573516,-7.920678,1.573459],[3.744331,9.475253,6.929679,0.551815,1.883891,0.886816,-1.656688,4.650893,-3.529894,0.380521,-1.177940],[-7.713348,-2.360114,-2.942685,-1.542836,9.255836,6.582558,-3.755698,5.325245,-6.876398,3.817020,-1.947690],[-3.139710,6.221363,-9.676918,1.327013,-5.269227,6.925367,-1.900320,-4.678104,-1.053094,-9.304409,-5.618838],[-7.939130,8.240334,-0.402633,8.365712,-4.343078,-9.984843,-9.248434,-1.108153,-6.380486,6.837244,-4.497187],[9.382545,-9.585718,-7.496246,-9.405052,6.304903,8.314354,9.344182,-1.404427,-4.693663,-2.105867,-1.269624],[0.972393,-9.757835,-5.760273,-0.356628,-1.603545,4.243467,8.665483,0.123444,-4.263497,-0.427867,6.287114],[-8.559041,-6.096074,-6.892311,8.485358,-6.988715,-2.957392,-5.478284,-9.965406,7.347160,6.661905,-7.210926],[-5.457885,-0.068727,-4.490457,-7.816269,-0.011628,8.309649,1.616553,4.786421,7.278177,-6.866996,-4.909992]],[[-6.626785,4.581106,8.212708,-6.478924,9.967607,-9.077370,9.007554,-5.957429,-0.313744,-6.603122,-3.990285],[-7.491104,5.480324,3.667998,5.245734,-4.302641,-5.532145,9.215901,-4.743916,3.801074,-7.559759,2.803100],[3.026213,-9.794001,-8.584474,2.157159,-3.696710,-3.725395,4.826012,1.836714,-6.506415,-3.463209,1.350399],[-5.625035,3.647575,5.039356,8.190503,-3.453844,5.075724,0.536202,6.002820,-9.876514,-6.513556,1.829585],[-4.751468,-5.335807,5.313024,6.107682,-5.229073,-1.200579,-7.412000,4.328115,4.058680,-1.620859,-9.322679],[-7.699370,-1.878381,-9.221664,-7.877423,7.783388,-1.897293,9.557103,-6.626437,1.159665,-0.888725,0.332440],[4.678300,6.772591,-5.322563,7.423406,8.233473,-1.569815,-6.083646,-3.259332,8.927774,5.635698,8.717484],[5.571064,-0.199351,-8.720334,-8.086610,7.594361,-1.076400,-7.368287,-8.744156,-7.494666,-3.830420,4.419689],[1.868268,0.154592,4.222492,-0.226575,3.388924,4.962653,-0.918684,-9.822189,2.667901,3.878087,-8.019475],[-6.727768,1.295116,-7.157140,5.853363,9.424150,5.486835,0.581098,1.545907,7.831523,8.715621,-4.110340],[-7.095586,4.489967,-6.910615,-3.599014,-2.893180,0.518429,3.646103,0.483740,-8.249156,8.763697,0.642091],[-7.698899,-9.210554,2.056314,-7.538257,-4.849221,2.381188,-7.319992,-5.417470,-3.840287,3.122373,-9.120977]],[[-8.551346,-2.193411,-2.302700,-4.511066,-3.042880,9.749409,0.204205,8.134214,-2.724551,-4.673664,3.235967],[-6.117271,0.615687,-4.975642,-5.105528,7.893686,6.747583,4.343750,1.616791,9.583404,7.431051,5.350402],[-5.258422,-6.570143,-0.880544,-8.118510,-4.251299,8.906454,1.187989,-2.764116,-5.760991,-8.783330,4.186182],[-5.938306,-9.994648,9.227822,-9.547311,-8.594154,3.495952,6.906578,8.180883,8.300563,-5.240102,-3.390163],[-1.248619,-2.153280,-1.505095,-3.067814,-6.535824,6.828213,0.265730,-0.648971,2.363546,-2.284711,-1.604054],[-8.049260,3.730220,4.537246,-4.372920,7.430240,-3.634537,6.852175,2.887170,2.048568,-3.655472,-4.703576],[4.456541,6.813014,7.711327,9.055157,-2.447558,8.627645,1.982254,8.416792,-5.295361,-2.273805,-6.772911],[-6.980464,-4.146366,-9.566661,-0.281953,-5.358037,4.764684,-9.314266,0.881909,-6.522679,0.206312,0.802229],[-9.579499,-2.946441,0.156039,-1.953705,-3.197310,5.073383,-6.148894,-6.951108,-4.133633,-1.327514,-2.698137],[-6.856048,-5.198849,2.746170,7.099180,-5.709288,-8.828514,-5.150588,1.120111,0.620543,2.978227,-6.260341],[-2.028700,-0.580503,6.315124,2.386030,3.259408,0.507278,-3.264827,7.619162,3.173873,-0.184245,-4.824469],[-9.740445,1.768156,-7.524769,-0.102827,-6.299743,2.082896,-5.353497,4.263731,-6.741747,8.310174,-7.496537]]], dtype = "float32")#candidate|6873|(5, 12, 11)|const|float32
uop_6874 = relay.tan(const_6873.astype('float32')) # shape=(5, 12, 11)
output = uop_6874
output2 = uop_6874
func_6890 = relay.Function([], output)
mod['func_6890'] = func_6890
mod = relay.transform.InferType()(mod)
output = func_6890()
func_6891 = relay.Function([], output)
mutated_mod['func_6891'] = func_6891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_6940 = relay.TupleGetItem(func_1803_call(), 0)
call_6941 = relay.TupleGetItem(func_1805_call(), 0)
func_1712_call = mod.get_global_var('func_1712')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_6947 = relay.TupleGetItem(func_1712_call(), 1)
call_6948 = relay.TupleGetItem(func_1713_call(), 1)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
const_6950 = relay.const([[-9.717205,9.768157,-5.932170,7.974468,6.603744,5.450903,9.124935,-8.723812,1.703172,-5.985481,7.351096,-2.673383,-3.179533,-3.527577,9.959916,8.537007,9.600397,8.518992,7.408520,2.787592,9.210895,-9.737296,-6.232002,1.206405,2.190597,1.981070,-8.907665,0.977702,1.758337,4.301731,0.641194,-4.833714,0.964150,-7.938561,-4.473761,-3.214983,-0.444612,-4.230693,7.044381,-7.463910,-3.554811,3.902316,-6.592248,7.739929,-0.705482,-3.532854,0.701849,5.913170,4.507016,-4.917835,4.106839,1.584015,6.113598,-5.480347,2.121146,-4.602196,-5.796623,-9.217367,-4.470335,-0.783832,-3.440186,-8.954395,4.547583,5.433660,-1.766239,-4.883449,-7.027537,8.533323,-4.258345,-0.876945,8.716620,7.710806,-3.828296,-2.104884,0.842728,7.762973,9.426376,9.254784,0.981953,5.108807,-4.790331,7.388957,-8.260044,5.029580,-6.179963,-3.934446,-9.057921,5.108375,-3.345216,2.117588,-6.373423,0.877750,-1.543262,-4.963137,6.730513,3.410263,-5.013048,-7.864291,-5.779213,4.116388,8.786320,-1.551610,8.382432,-3.180290,0.123760,1.032366,7.087332,3.624124,4.927904,5.091225,-3.456339,6.990668,-1.754339,7.263013,9.928689,0.972897,-4.474129,-1.334511,-3.498308,6.162247,-6.192480,0.281142,-6.965145,0.968154,7.203075,-5.993568,-3.012697,-9.010861,-0.543312,4.672929,-6.815141,-6.865564,-1.784338,-8.203840,-5.994422,-9.931063,-5.879016,-8.575676,-6.549052,-5.587681,-4.321058,2.111477,-4.083142,7.726991,4.119523,-6.864225,-7.843493,7.289647,7.000716,6.771220,5.608605,-1.649565,8.356922,-0.717065,3.041031,9.630421,-5.063001,-7.331301,-5.400762,2.973672,-5.458982,1.398381,-7.759072,8.331092,-7.588523,9.995888,-5.330647,9.937710,-1.520683,2.394817,4.410800,-1.296107,-8.105172,-1.510130,-6.756173,-2.295824,-7.539490,3.496141,-0.514021,-1.379856,4.946332,9.650595,-6.877247,-4.533781,-9.907720,-8.830025,-4.414511,2.757708,2.898472,-7.142761,1.088660,-9.785252,-5.824275,7.226172,-2.669480,-1.865627,6.141615,8.475723,-8.434783,5.067698,1.397852,-5.608451,-8.608789,-0.388612,-0.261200,9.287947,-7.314169,5.559227,-9.904246,2.569090,-8.063771,-3.196512,1.650772,8.437581,3.802478,4.704294,-2.334448,2.231468,7.705973,-3.266272,-6.839740,-1.560295,0.570433,3.693067,-4.401334,-1.596226,-0.383282,-4.145352,-4.210783,-0.109721,-2.083040,6.613852,9.246281,9.583038,-2.767261,-5.441192,-8.502862,2.945477,-4.813812,5.550065,-5.062767,-3.428868,-0.830641,-9.092434,-9.636578,9.726011,-6.111028,-6.674322,8.394311,1.294729,0.603211,-1.988612,-9.207475,-2.507064,-4.227990,7.939435,2.995924,-5.086796,-9.872574,4.077971,8.180996,-2.903914,9.030457,2.845579,-5.438548,-9.616106,1.582681,1.328203,7.518432,-9.677621,0.027119,-5.879684,1.509056,4.255342,2.580071,1.308827,3.108463,1.395239,-1.895738,1.923900,8.920342,-0.210290,-4.854368,-5.762504,4.563870,8.831390,-0.928352,-5.315422,-6.608302,4.612782,-1.985937,-3.653889,-6.140458,-7.108455,5.593667,-6.294832,8.867838,4.232511,-7.975481,0.886342,-3.348037,7.035665,-5.468985,0.176091,4.296716,4.911402,6.300040,2.603126,1.316168,-6.967099,9.501789,8.691828,2.132194,-7.469929,-9.405695,-4.723558,-7.985508,3.642652,4.201033,-2.924537,9.781825,-4.100711,3.257765,4.522994,3.978321,5.389473,-6.056482,8.025187,1.201987,1.140569,-2.091672,3.212904,5.499117,6.760306,4.726262,0.045785,8.307671,2.854153,1.450288,8.791528,-8.313688,0.929656,0.183972,-4.901902,-0.777608,-4.770956,1.904374,-3.752315,-6.239929,9.125447,7.764271,5.811487,-2.250429,7.685200,9.805528,-2.727416,-5.820789,-0.589514,5.112390,-6.991608,-0.075983,-6.691200,-3.194389,8.567666,-1.082203,-3.144194,0.376492,6.875456,-5.541987,-4.350955,6.839677,1.284072,-7.258326,-1.102191,2.339634,-6.374547,4.554027,3.308810,6.216260,9.492224,-5.557471,7.081907,7.875866,5.655305,4.894729,0.347347,9.356254,-1.048698,-5.036656,3.342680,-9.380814,9.482035,-9.792958,3.202814,0.395863,8.714632,4.224606,-5.473409,7.310787,-1.920654,5.173616,-3.359892,6.015595,-9.966880,0.885847,5.578565,8.470932,7.548829,7.111308,8.578819,4.174650,-8.607805,1.233919,4.800700,1.857591,-0.108548,1.446835,4.869312,8.929549,-2.222205,5.056194,-1.779514,2.670800,-8.244732,8.128892,6.584264,-1.668850,2.236213,-2.631724,1.241513,-1.050078,-9.098371,-7.810858,-0.760332,-7.080094,-9.422862,-3.939248,-3.483918,-7.197178,7.484654,2.995651,9.981909,-2.869352,6.263872,7.893384,-0.552543,-0.072116,-5.347399,-2.375336,4.197714,3.683850,-0.744324,-9.846440,9.632710,8.468679,-4.160031,-8.210004,9.615389,-1.930783,5.644813,8.017142,-6.466935,2.166241,-0.974076,3.597673,-4.704202,6.018304,3.026264,2.341441,-3.790351,9.390319,4.066954,-3.939857,-6.118024,-1.828653,2.370944,-0.626734,7.926447,-9.714848,7.268629,7.991073,-3.046230,0.723850,6.775564,4.320224,5.290387,-9.490328,-9.693293,5.830805,-4.642265,-4.415678,2.876869,0.296635,-1.197116,-8.340207,9.298880,6.410503,-1.200042,1.659627,-0.618283,-5.119344,1.332449,-2.698821,3.931873,9.005710,8.104944,0.121727,-3.242974,-0.201331,-9.342948,-4.592112,-8.017591,-4.843500,-5.020765,-0.456866,-7.564301,1.902180,-1.109978,5.676685,9.541108,6.677075,-9.309062,-3.055557,0.152788,-8.507830,8.620385,1.578243,-6.197169,8.219386,-9.159732,6.593007,-3.344287,-6.802081,7.320326,-3.988191,-7.750693,2.892587,8.268615,2.976006,-6.431449,-8.953281,2.099093,-3.048812,6.488168,-3.801668,6.077143,-8.952857,-6.127008,-9.018799,-0.488722,7.750727,-9.413292,-8.742230,-0.347440,-6.797058,2.996984,-3.615057,3.081374,-6.903606,-3.843333,-9.094210,6.811291,0.466534,0.319534,3.604320,7.003639,9.664296,1.262336,1.103460,7.959517,9.964057,-6.844068,0.953062,-4.644449,1.063407,3.916263,-8.580340,-8.422539,-1.224723,-5.503264,-9.267833,-6.451277,0.806620,7.748117,6.722094,7.267131,4.198440,9.556806,5.739541,-3.135793,-5.404666,-6.760143,-9.412735,4.151615,-3.860470,-6.825741,6.333828,-8.860156,5.511539,2.744789,1.895390,4.994050,-3.316062,9.291573,-1.814538,-8.616093,4.824452,8.449292,-2.486930,6.904045,-9.141113,8.203385,-8.142819,9.790326,8.872370,1.820557,5.279864,4.707920,0.464143,4.977876,-5.256780,-7.654483,-7.993107,-1.495869,-5.269414,1.527730,1.956703,-5.269623,1.709132,8.310894,-6.614631,5.972982,4.898533,-9.720116,1.735629,-1.574975,3.520404,-0.552988,0.198857,-0.726585,-5.517662,-9.192758,-7.666824,5.588510,-8.739920,-1.249397,2.942884,-5.380569,-6.687923,3.154280,-2.310201,-8.209026,6.017729,5.157718,0.660710,-7.996611,-4.852601,3.483968,-4.816795,-1.411639,-6.493936,6.248167,-6.102713,-7.534149,-9.950508,-4.237379,-5.940560,3.785327,0.188763,-8.870517,-7.810247,-8.652440,2.300197,-9.539911,6.668692,2.560977,0.040737,5.002184,-4.512293,6.921314,-9.402846,-9.678207,-6.149343,-6.041476,-1.236100,-6.887322,6.243292,2.132269,-9.045167,-1.939273,-9.249490,9.712366,3.973682,4.854137,1.964243,-2.761028,0.783669,-9.739167,-8.513147,2.626078,3.134714,-6.653690,6.426532,1.401533,2.969077,4.513135,4.215241,8.098374,0.260546,0.075480,7.137043,-9.036114,-6.219937,-4.008244,4.649543,1.334410,1.847268,-5.545240,-1.781053,7.961599,8.804646,9.911804,0.848413,3.113691,-9.982031,9.180897,7.826279,-7.841366,-2.096584,-8.071018,-5.466879,-1.344881,5.286368,-1.209248,7.709691,7.012553,-9.661671,4.261802,-6.175033,6.255559,5.017419,-2.301564,-3.073792,-2.171501,-5.973806,5.591106,2.638649,-1.118844,-5.084529,-5.540461,-6.202120,-1.192043,-4.145398,7.176511,0.835291,1.085994,9.210387,0.565089,-7.747843,3.403106,-2.837232,-3.138243,-8.173640,0.852504,0.215557,-5.554481,1.708719,4.895842,1.059548,-7.797761,3.407888,1.742124,-4.794972,-4.557078,7.709472,8.806814,-9.448481,2.655893,-8.478547,5.609124,-0.892628,-7.492080,2.568516,3.484211,-0.600809,3.756201,-3.611618,-7.089990,7.214021,9.718343,-5.405685,-7.001967,-9.988450,-0.643695,-4.273355,8.300915,0.918132,1.239413,0.578676,6.467068,-8.197386,8.115501,-8.319254,5.158281,-2.496408,-1.556910,0.941978,-6.746105,-1.647855,9.191017,-5.537347,4.078602,-3.254813,-6.318811,5.241851,8.652521,-3.362681,-8.275441,-5.987809,-4.514734,2.187877,-9.927243,-5.487232,-7.272897,0.209278,3.859264,-6.791919,3.664501,0.661188,-8.997427,-5.331763,0.351550,-6.256484,5.522760,0.265185,-7.040371,-3.017414,-4.065142,9.799524,5.671428,-1.909044,-9.143675,7.925467,1.749233,-4.195105,6.093695,8.686502,0.775219,1.833582,-3.405073,2.553610,5.069814,5.693905,-2.127699,-8.122271,4.790005,-6.154085,-1.109144,-6.069367,5.362562,4.887688,7.682143,5.769579,5.671636,8.107981,0.235291,-3.593955,-7.486494,-2.089387,-8.277125,-0.873186,9.041176,2.554676,-4.240233,3.115207,-2.297890,-0.625651,1.566836,2.953758,-1.851399,4.973450,7.254390,-9.844944,3.775522,-7.325046,-4.433299,-1.003964,9.143602,8.327814,5.953481,8.724776,9.327831,9.738017,4.546510,1.645944,1.332438,-3.526081,-9.641808,-0.092786,7.627575,6.244887,8.000627,-5.193165,-6.041072,-2.720939,-4.403331,0.571671,6.815506,3.122504,9.162606,1.393527,6.665054,2.591606,-6.591485,3.270286,-6.769751,0.410721,-2.185002,2.668905,2.467759,-8.311237,7.430052,-2.939870,-9.550915,-3.193891,-6.533481,-5.374007,0.812667,-9.936966,4.344931,1.289478,-1.094890,0.712176,-0.173826,6.695749,-8.817423,-0.860730,-0.874218,1.188729,-7.603664,-8.521283,0.900372,-6.316543,6.433059,-0.533288,-5.370020,-7.079520,1.579415,-0.678438,-8.654298,5.278663,4.332661,1.256292,-4.605776,8.311714,-0.002297,-2.058187,-2.761502,-6.987780,1.128167,9.335127,-1.067422,-8.551187,2.954842,-8.921797,3.983896,8.969272,6.529144,-7.657727,9.900672,-8.981434,6.220974,9.595682,9.657964,1.362983,-6.196063,-2.680583,1.628002,-7.681339,8.560663,-5.543883,7.072739,-2.351434,-4.913839,-7.687145,-0.779083,0.936042,1.560751,3.501237,-5.345245,9.138271,5.171798,-4.331865,8.937789,-8.259306,9.566974,8.546667,-7.387809,2.300906,-1.561913,-3.149592,-9.612509,-2.824995,-5.174046,-1.190568,6.787388,9.437234,4.721393,3.099663,0.754501,-2.429993,-4.670909,7.278008,9.050281,-3.378648,-0.098106,-8.824702,-2.524752,0.458881,-9.070458,-6.371539,9.144942,1.025912,5.853567,2.130542,-2.158337,6.772538,0.801684,6.893522,3.587959,-1.174464,-2.179955,-4.606495,-2.443225,0.203221,6.862356,-6.097157,8.567333,0.916109,-7.218747,7.906680,-5.028334,3.257571,7.168809,-5.107896,-2.216607,3.886506,5.102033,-0.651644,0.651206,1.612823,1.947621,1.838692,6.135728,9.726456,-0.690693,-6.086581,7.595273,-9.883539,-8.271784,8.862565,-6.728863,5.760629,-8.888392,7.208043,3.731706,-8.556232,-5.605584,5.287489,-3.737310,3.589055,-6.800032,-4.254214,1.817705,-7.443270,6.475000,3.104701,-9.468567,-9.491635,-7.053203,-4.194464,-2.926208,-8.559603,2.420719,-5.689798,-2.776641,-6.223474,1.261396,-5.550107,9.409092,-5.128805,-5.099145,-5.812468,-1.268921,9.570976,-5.108589,-6.833978,-7.177081,0.909724,-2.255247,0.187106,0.695481,4.645184,-3.645909,-2.686397,3.873672,0.683551,-0.256769,-5.764351,-1.700184,2.272670,-6.468404,3.412097,-6.812286,-6.482375,-8.130481,5.736352,0.108803,-0.325468,-3.403536,9.418670,6.798634,0.177309,8.027485,-6.542193,5.571364,-3.173489,7.861518,-2.957661,8.019749,-0.396336,-3.028305,5.090024,7.603851,-7.144452,-2.569988,5.941535,-2.178820,5.811954,-2.872150,5.418671,9.081627,2.452238,7.288811,-5.144296,-9.126640,-4.574319,-2.445814,-5.521257,3.176992,1.382034,0.458088,1.226149,8.689642,8.929084,-2.135566,6.555605,-1.563968,-3.704552,-9.031068,-4.967111,6.972039,-6.292166,4.809815,4.071257,0.463968,-0.398905,8.033766,-3.568591,2.362974,4.007279,-6.591688,5.061339,3.534806,-7.914667,1.817496,0.469311,4.325183,-0.716408,-8.949267,8.606962,1.194447,-9.790973,6.349475,2.105563,-5.866545,-7.559955,-6.114073]], dtype = "float64")#candidate|6950|(1, 1188)|const|float64
call_6949 = relay.TupleGetItem(func_800_call(relay.reshape(call_6947.astype('float32'), [16, 4, 4]), relay.reshape(const_6950.astype('float64'), [1188,]), ), 3)
call_6951 = relay.TupleGetItem(func_803_call(relay.reshape(call_6947.astype('float32'), [16, 4, 4]), relay.reshape(const_6950.astype('float64'), [1188,]), ), 3)
output = relay.Tuple([call_6940,call_6947,call_6949,const_6950,])
output2 = relay.Tuple([call_6941,call_6948,call_6951,const_6950,])
func_6952 = relay.Function([], output)
mod['func_6952'] = func_6952
mod = relay.transform.InferType()(mod)
mutated_mod['func_6952'] = func_6952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6952_call = mutated_mod.get_global_var('func_6952')
call_6953 = func_6952_call()
output = call_6953
func_6954 = relay.Function([], output)
mutated_mod['func_6954'] = func_6954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_7026 = relay.TupleGetItem(func_4488_call(), 1)
call_7027 = relay.TupleGetItem(func_4490_call(), 1)
output = call_7026
output2 = call_7027
func_7040 = relay.Function([], output)
mod['func_7040'] = func_7040
mod = relay.transform.InferType()(mod)
mutated_mod['func_7040'] = func_7040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7040_call = mutated_mod.get_global_var('func_7040')
call_7041 = func_7040_call()
output = call_7041
func_7042 = relay.Function([], output)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7078 = relay.var("var_7078", dtype = "int64", shape = (12, 5, 10))#candidate|7078|(12, 5, 10)|var|int64
var_7079 = relay.var("var_7079", dtype = "int64", shape = (12, 5, 10))#candidate|7079|(12, 5, 10)|var|int64
bop_7080 = relay.greater(var_7078.astype('bool'), relay.reshape(var_7079.astype('bool'), relay.shape_of(var_7078))) # shape=(12, 5, 10)
func_631_call = mod.get_global_var('func_631')
func_634_call = mutated_mod.get_global_var('func_634')
const_7102 = relay.const([[-0.677951,5.533947,1.877180,9.191986,4.790839,-6.778510,-1.278932,-5.659713,-4.742454,6.252102,3.002594,6.729940,-2.863028,4.289805,-4.436638,5.781020,7.830469,2.679515,-9.786003,1.784601,9.668003,-6.479381,-9.486165,5.559316,3.575299,-0.291423,-0.794605,-9.813607,-6.414846,-4.060253,-7.829065,3.493311,-2.594108,-6.645257,5.445539,-0.294159,0.014529,8.095716,-5.392083,-5.790567,5.980011,-2.064115,7.631164,-6.985063,-7.897970,-1.184046,-2.122640,-3.053051,-4.362361,7.983827,7.961056,-5.970595,-6.351507,-9.291251,-7.365832,-2.644717,6.587142,-4.858052,8.479176,-1.150802,5.414884,3.081825,-1.641017,-7.861168,-1.265106,0.079659,9.083967,1.679036,2.069362,-9.123757,-0.856641,1.443654,-8.436929,-3.221160,-6.642759,0.729941,4.853132,8.267925,6.391926,-2.839078,0.896323,3.969664,6.918097,-7.546777,-5.028998,4.780434,4.355037,-6.161495,-0.108782,-5.155279,7.329748,-5.686949,-9.301861,-0.440012,5.803603,2.612244,-3.280440,2.273683,1.104705,-8.901013,0.746927,0.398795,-2.964998,-8.949961,-2.584713,1.899189,-9.247486,9.376015,3.955683,-7.294835,-4.347563,2.533082,-0.597857,6.967381,-2.294110,0.474550,1.400090,8.147013,-4.731489,-3.115943,-3.384178,-6.267848,6.792751,3.472954,-3.637716,7.640306,8.238527,4.889667,2.504806,-2.377111,0.425678,1.749264,-5.202360,-9.781410,-8.647346,3.945065,6.298231,-4.793293,2.595826,4.538367,0.943526,7.265837,-8.668176,3.911261,9.285052,7.919264,1.806223,1.136391,7.822598,5.514021,-6.525331,-1.768226,-7.327563,-8.109014,-0.555510,4.604814,-7.520617,7.080867,-7.087764,-6.174802,-9.646023,-0.632610,3.976588,1.539399,0.752479,-3.379669,4.976604,4.896055,0.554962,-6.441364,-0.654872,-8.039828,-4.974694,7.621876,-2.109460,-2.674973,4.776885,-9.357583,-6.582854,-0.401775,-3.236307,3.148067,9.324521,-1.190861,-8.596828,9.267314,-3.382684,7.885088,0.064425,6.273823,-3.479573,-7.361131,-7.038642,-7.543314,-1.307264,0.399142,-6.382529,-9.333705,9.274122,-7.236905,0.661923,-4.669382,1.489035,-3.874997,-3.782324,-1.969115,9.437852,9.956954,-6.745611,-8.433252,-9.186656,5.078989,-4.817972,-7.226342,-5.301043,0.660947,-4.366743,-8.243580,8.513443,-5.986570,-3.814592,4.968943,9.628493,-5.492364,-6.432659,-3.338303,-0.203095,6.135777,-4.133780,-0.909327,6.477984,-0.283979,-4.156496,8.162804,-9.679927,5.311355,8.645060,-2.307828,3.146562,-7.192469,-9.865853,-7.147184,-9.301139,2.101683,-0.242379,-3.905335,-0.164555,1.644770,2.814483,-6.324075,2.853342,-9.059682,-9.805865,1.458275,6.160745,-5.427243,7.507242,-6.696591,-9.832527,-7.596290,-9.808361,-8.034883,2.131508,5.188472,0.456251,-6.894824,6.269767,5.627895,-3.112935,-0.985986,-2.922768,9.854232,2.628087,6.623193,5.249373,-1.575290,-0.898132,-5.975955,0.440683,-9.614743,-7.709422,2.881834,-7.649199,0.866980,6.268990,-5.180189,-8.593324,9.792383,-9.973092,-3.862750,-2.880750,4.551800,5.077167,4.655327,5.984620,8.319489,-9.308744,7.902030,9.634717,7.577613,-6.606876,-0.513139,3.581723,3.495620,8.862185,-1.533577,-1.655412,-5.433808,9.498713,-5.849095,-0.571142,-9.778078,-1.208826,4.546505,4.953144,4.258468,-3.431677,-3.370064,7.916195,8.094976,9.467213,1.416626,0.076638,-0.286278,3.118865,1.163551,-7.916333,-1.317227,-6.869634,0.283835,8.058909,7.875242,-6.848071,5.349883,8.486884,-6.382988,-2.078638,6.382323,-0.495610,2.752519,-9.887275,7.838906,-0.899108,-5.094348,9.591778,-5.801584,-3.083089,-4.546974,-2.719687,-5.330899,7.759347,-3.160772,-8.708440,4.972391,9.653034,-6.650465,-0.802825,9.101990,-9.696789,7.241250,1.757911,-8.628241,3.671425,-3.247632,-8.502807,-0.539636,-4.639458,-4.352679,-6.153718,6.601721,-9.197609,3.678927,9.544329,7.110424,-4.169251,8.420545,8.890798,8.590419,-1.840695,-1.507758,1.147831,-7.102517,6.968904,-9.178092,5.433796,-4.338295,-4.682849,-6.455253,-1.996503,5.939502,-1.831761,-9.412297,-3.432294,-5.099027,2.181291,6.434698,5.817869,-6.482723,-4.399760,-8.787232,-3.978288,6.529458,5.060980,-8.330538,-7.889621,-5.796526,-3.915029,-4.701772,4.648591,-7.234969,5.335172,4.089793,1.573977,8.068443,-2.071681,7.353435,-2.245888,9.613486,-7.767241,3.384063,5.900518,4.539555,-2.598120,-0.236112,9.846847,2.545377,2.170338,4.719386,-8.208211,-5.620570,2.776489,-0.394545,7.130400,8.461629,3.755892,-0.943070,-3.727296,7.744459,7.860839,-4.673574,-6.504574,9.814966,-8.931432,-6.709841,0.715045,-0.340475,6.864300,9.831183,-5.546075,-4.065782,5.229518,4.608601,3.263564,8.211608,-9.749662,6.951883,1.373926,-8.755328,9.822403,-0.015284,-2.537348,0.696401,3.035088,-3.164582,6.809951,-5.041030,7.468879,5.567409,-3.279965,2.682504,-4.990850,9.651814,5.741544,-4.320729,-6.416100,8.020130,9.435000,-8.984573,0.793154,-5.634631,-8.764878,-3.605379,-8.899957,-1.323802,-1.897565,-2.099045,-7.549079,-8.479830,0.942622,-7.841033,0.340122,-4.047108,1.565073,-8.098818,0.851742,5.470794,8.402509,3.924460,0.598757,-0.329348,0.848398,8.299193,-3.393380,2.514287,-0.249095,9.976573,-1.557153,-2.035474,4.096942,-3.122228,8.747210,-3.437577,8.641317,2.653953,0.850691,-2.468590,-4.501650,-9.349196,1.786131,-0.861193,6.598851,-3.234507,-2.247434,6.744251,7.241993,-5.653024,-5.446966,3.682059,7.797182,-1.331775,-8.065303,0.069876,-1.379978,7.844949,-9.842379,9.380096,7.132241,3.860803,-5.844927,1.906799,-5.439161,5.429298,-2.688990,4.101240,6.510142,-6.563117,-1.280997,-3.539595,9.048162,2.520878,6.225704,-4.040745,-9.093721,-9.302024,-2.928738,-8.192847,-3.256037,0.165968,-9.633195,-2.652772,3.703523,3.915996,-3.494290,-6.779513,9.912288,3.501369,0.735586,8.525427,9.932114,-3.066866,-3.875000,6.841074,-6.873591,3.960860,6.256160,-3.171784,5.336047,-8.697642,2.041733,0.299763,-6.439665,-7.877057,-8.281511,3.680630,0.698054,-1.302915,-6.509766,-4.735871,-6.729897,5.386911,3.191669,-6.487722,5.043119,7.988260,-7.560219,4.568917,9.670458,-8.978297,-8.393107,-5.695814,3.154513,0.895276,-8.298872,6.057747,3.399984,-9.929261,-9.222453,1.252441,8.411797,9.439858,-4.715892,4.248747,-2.063886,2.636221,6.890913,-5.243289,-4.218969,7.310258,-5.921513,-6.040242,8.028923,-5.807909,1.269979,-9.612496,-4.595361,-7.761529,-7.601344,5.326868,8.095577,3.753922,-5.767970,-3.484382,7.035888,3.382232,-4.646167,-5.467928,-5.577586,6.773091,-1.686929,-5.040904,8.384135,5.936474,-6.047385,-5.779131,-4.969362,4.915574,-9.101172,1.891924,8.132150,7.287691,-7.269321,3.041810,-8.838088,8.789159,-0.666892,-7.645680,-2.936344,-0.363397,-2.014352,6.681638,-1.937118,2.028721,-5.171594,1.194169,1.869397,6.259181,-2.281037,-8.849892,8.103348,9.466616,8.242865,-2.533734,-6.503587,5.098165,3.190743,2.324413,3.332938,-7.790763,6.532441,0.557183,-6.406123,0.453363,6.204147,-8.319584,7.212727,7.572832,7.246031,-2.593940,-3.244297,-5.296786,-6.196458,5.907307,-6.147047,8.269868,1.054422,-2.594116,3.306425,-1.417363,4.951548,-2.379848,8.425063,3.550367,5.219560,-5.523058,7.025932,9.611281,-4.468050,1.544351,1.139894,-7.637967,6.397649,-5.705018,-8.911601,-0.645117,6.566442,-9.919508,-9.646941,1.059413,-8.408064,5.321552,-6.257954,2.793374,8.495273,5.937770,-9.674066,-3.675187,-1.571504,-5.626703,9.883343,-6.477475,8.736868,9.836266,6.137413,4.789477,-4.246573,7.826681,-4.286040,3.991489,-5.372748,-6.730554,6.455887,-7.953598,7.997953,-4.542348,4.992425,-2.232979,-8.186021,-8.546425,-0.914912,7.476009,-7.506888,-1.711264,3.239667,1.920421,-3.224973,-9.616357,-0.751100,-9.526746,-9.324296,-8.664580,7.395557,-7.550126,0.576238,7.566828,6.878824,-4.389054,-1.813549,-4.333470,0.151936,9.288582,1.762458,2.381048,-1.785604,8.382290,-5.931110,7.385290,-3.093772,9.985202,-6.629864,-4.473890,7.414704,-4.416629,0.926529,-1.254087,-8.564892,-7.259909,6.549227,8.564802,3.144352,-3.669745,-7.119877,-0.884125,-2.167601,-7.584935,-1.704754,-1.516971,-7.945599,5.114940,8.093856,-9.036969,9.892051,2.530671,-9.396456,6.473658,1.446903,1.902563,4.825895,1.771085,-9.712775,-0.937346,-0.287264,-8.541716,1.822220,-3.617181,8.622184,-4.283037,6.435966,-3.594203,-3.751186,-2.673728,1.716301,-4.054661,4.941703,-0.143623,3.821205,-5.432045,3.351786,-1.231008,4.204328,0.484618,1.335819,4.476727,5.728763,-4.445475,3.759764,-2.566360,0.464662,9.901935,-1.403796,-5.388360,5.567022,4.482565,5.484880,5.686977,-2.793201,-1.287677,1.286434,-2.149358,2.895547,-8.009386,5.630053,3.839012,6.923122,7.539623,4.676803,-3.139787,3.480437,0.252989,7.519152,0.356408,-3.251986,-3.601537,4.281128,-1.131040,8.023829,-3.491220,0.557432,5.771862,-0.442721,-3.415334,-5.062960,-9.477038,-5.044488,7.957264,3.746043,2.056779,-8.080287,8.040831,6.933906,-0.018257,-1.473161,8.729157,-1.441698,2.523415,-6.311705,-8.275167,-5.539205,-9.261855,8.995139,-9.654992,-1.737046,-2.323291,7.609678,-6.852798,9.142205,-7.431686,8.293133,-8.008415,-4.755916,1.791531,9.810562,-1.025078,-6.513068,4.582190,-1.528510,-9.700313,4.445557,4.205855,-6.661776,3.985918,-3.047966,-2.357413,-9.915110,2.572027,-6.628526,0.012709,4.182974,2.196280,-7.066634,2.897362,-5.294068,6.754307,-9.820255,6.570457,-6.521899,-1.694797,-8.509420,8.429436,3.251181,4.324770,9.016078,-9.613373,-8.323863,-6.576345,-4.194459,0.309374,-9.758632,-6.907166,5.339842,1.031713,1.252154,-4.827673,-8.196983,-2.380570,3.694308,3.399747,-9.013312,3.460396,7.770506,4.711550,6.919162,1.152073,9.516075,-9.567036,9.752595,-2.177193,4.487135,-7.010769,-2.299352,-0.687506,-4.830270,-7.052952,0.787640,-5.804441,-7.365575,-9.399120,-9.960690,2.689577,1.949900,6.048740,9.963314,1.932649,-4.346561,3.472145,-3.202560,-7.872213,3.506033,4.730958,-2.715154,-0.318247,4.591319,-7.247130,-5.928668,6.424269,7.028183,-3.594159,6.385607,-6.337421,9.322820,-0.487552,2.562492,-5.231034,-1.948380,6.487486,8.723277,6.628005,-0.736818,0.289210,5.323472,-6.729410,9.286907,9.618769,5.759246,-5.303884,4.529639,-7.473621,-5.951314,-8.002890]], dtype = "float64")#candidate|7102|(1, 1008)|const|float64
call_7101 = relay.TupleGetItem(func_631_call(relay.reshape(const_7102.astype('float64'), [16, 9, 7])), 0)
call_7103 = relay.TupleGetItem(func_634_call(relay.reshape(const_7102.astype('float64'), [16, 9, 7])), 0)
func_2121_call = mod.get_global_var('func_2121')
func_2122_call = mutated_mod.get_global_var('func_2122')
call_7111 = relay.TupleGetItem(func_2121_call(), 0)
call_7112 = relay.TupleGetItem(func_2122_call(), 0)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_7117 = relay.TupleGetItem(func_1803_call(), 0)
call_7118 = relay.TupleGetItem(func_1805_call(), 0)
output = relay.Tuple([bop_7080,call_7101,const_7102,call_7111,call_7117,])
output2 = relay.Tuple([bop_7080,call_7103,const_7102,call_7112,call_7118,])
func_7125 = relay.Function([var_7078,var_7079,], output)
mod['func_7125'] = func_7125
mod = relay.transform.InferType()(mod)
mutated_mod['func_7125'] = func_7125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7125_call = mutated_mod.get_global_var('func_7125')
var_7127 = relay.var("var_7127", dtype = "int64", shape = (12, 5, 10))#candidate|7127|(12, 5, 10)|var|int64
var_7128 = relay.var("var_7128", dtype = "int64", shape = (12, 5, 10))#candidate|7128|(12, 5, 10)|var|int64
call_7126 = func_7125_call(var_7127,var_7128,)
output = call_7126
func_7129 = relay.Function([var_7127,var_7128,], output)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6126_call = mod.get_global_var('func_6126')
func_6127_call = mutated_mod.get_global_var('func_6127')
call_7154 = relay.TupleGetItem(func_6126_call(), 1)
call_7155 = relay.TupleGetItem(func_6127_call(), 1)
func_3415_call = mod.get_global_var('func_3415')
func_3416_call = mutated_mod.get_global_var('func_3416')
call_7162 = relay.TupleGetItem(func_3415_call(), 1)
call_7163 = relay.TupleGetItem(func_3416_call(), 1)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_7172 = relay.TupleGetItem(func_3046_call(), 0)
call_7173 = relay.TupleGetItem(func_3048_call(), 0)
output = relay.Tuple([call_7154,call_7162,call_7172,])
output2 = relay.Tuple([call_7155,call_7163,call_7173,])
func_7188 = relay.Function([], output)
mod['func_7188'] = func_7188
mod = relay.transform.InferType()(mod)
mutated_mod['func_7188'] = func_7188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7188_call = mutated_mod.get_global_var('func_7188')
call_7189 = func_7188_call()
output = call_7189
func_7190 = relay.Function([], output)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_7279 = relay.TupleGetItem(func_2969_call(), 0)
call_7280 = relay.TupleGetItem(func_2970_call(), 0)
func_730_call = mod.get_global_var('func_730')
func_733_call = mutated_mod.get_global_var('func_733')
call_7284 = relay.TupleGetItem(func_730_call(relay.reshape(call_7279.astype('float64'), [12, 9, 11])), 0)
call_7285 = relay.TupleGetItem(func_733_call(relay.reshape(call_7279.astype('float64'), [12, 9, 11])), 0)
func_1386_call = mod.get_global_var('func_1386')
func_1390_call = mutated_mod.get_global_var('func_1390')
const_7293 = relay.const([6.906073,3.332827,4.928746,0.367008,5.999900,-5.756361,0.910162,1.632028,2.076130,-9.937863,6.018614,5.828627,-5.320038,8.343217,6.987276,3.572615,2.805461,-3.440973,-5.989887,1.140069,9.430959,-9.635824,2.720901,-6.932113,6.162765,4.373252,1.846442,-0.669307,4.645200,-8.907466,3.048199,1.010294,-6.492220,8.446340,-6.458041,-1.674907,-9.314720,-2.755021,-3.844793,-1.431198,9.026864,-1.287152,-6.913442,-5.185556,-3.179978,-1.604238,0.786458,-0.861743,8.181383,-4.360232,7.126603,5.272442,-8.655633,7.768756,-6.473859,-2.328688,-1.549885,-9.960223,3.055219,-3.365852,7.261633,1.566862,3.148419,-9.652961,8.355608,-4.409268,3.296509,-9.289630,0.355451,-3.360150,5.859974,6.982507,-4.138715,-7.454345,9.017645,3.403071,4.211082,3.052058,1.091833,0.952370,-6.932854,7.711719,2.230636,8.548047,9.684282,-1.231843,-5.520336,-5.545205,-6.944542,8.921362,-1.760245,-2.489700,1.573546,-7.619919,-6.439203,-1.030960,5.070344,-2.404229,3.808630,0.641831,-7.694219,-5.957223,0.076218,5.174533,4.959244,4.655932,9.786927,-8.420609,9.048977,4.176658,-4.790316,0.919607,5.752758,9.800386,3.547104,-6.541356,-6.527768,1.766643,2.022838,6.013665,3.852727,-7.028607,3.424886,4.269537,0.131917,-0.429674,-4.416483,0.418518,3.142062,2.143206,8.505403,-4.965211,-4.773620,-6.466434,-4.859393,-7.200358,-3.171613,2.148158,2.663214,7.866674,0.520373,3.449185,5.338857,-1.971557,2.046537,6.270828,6.775004,-5.251959,4.522509,7.811846,2.700892,5.325908,4.823678,7.525671,-3.549341,0.714926,-2.322659,6.120272,-9.269975,-5.984211,8.688014,-9.455750,-8.629773,-8.560745,1.753641,9.748052,-8.630452,0.927529,3.509351,-8.201468,3.451772,-5.825586,-5.633643,2.934702,9.845151,-9.916754,1.088290,7.629388,-6.129281,-2.893065,3.530320,-5.245562,-9.857290,1.220875,-8.854277,0.159929,-0.072998,4.432591,-1.613665,4.041893,-6.984329,-3.250666,-7.988984,8.311812,-4.931445,4.350434,-3.536849,2.245311,1.257185,-4.850304,-3.952814,2.946533,1.141339,-4.060672,6.261154,7.370488,1.344982,7.078998,5.267744,-5.258582,-4.924476,-7.425965,0.572754,-7.179775,-8.932210,-0.135342,-0.201760,3.965813,-2.368542,3.572062,5.245721,-4.450851,6.982215,2.432456,-6.732859,-4.076171,7.759081,6.684652,-3.477738,3.453789,9.433254,5.038185,7.381936,0.784498,-5.005979,6.879456,-3.987781,5.271539,1.101637,-6.921681,-5.086471,7.604910,3.459805,3.562698,-9.502300,6.762991,-1.023093,5.085006,6.270677,-8.767921,-7.333966,-0.970530,2.055013,-8.827438,-5.726849,-3.275479,3.607577,-0.277362,0.888244,-5.903791,-7.921796,1.958833,-6.702125,-8.955413,8.768892,-4.804802,-3.999810,-8.997381,-5.846681,-7.521274,-6.212000,2.698491,-6.517493,-3.401275,4.206729,3.790987,-8.869660,2.609449,-3.298236,3.488705,-4.923411,0.621249,-4.749029,-4.888004,-9.992443,7.849238,4.422650,-7.473279,-0.780496,1.018495,7.730835,9.791566,2.811839,-1.017343,-9.326719,-1.893561,3.995448,1.312849,5.577918,-6.474214,-3.721167,-2.837170,0.822690,-6.644874,-0.473526,9.181494,-3.720152,1.604558,3.375474,4.563617,8.242551,-4.392076,1.742611,-4.275130,0.497268,-1.239545,-7.336260,-9.736567,4.140184,1.853817,-3.884303,6.902160,1.507995,8.071669,3.734742,-2.520043,-7.090106,6.363140,-1.066820,-5.673940,2.590680,-9.080349,-8.203337,7.427382,9.907819,2.991485,3.435291,-6.386659,9.208885,-5.141137,7.503720,-5.585068,8.679524,1.473220,6.132689,-1.449499,0.035479,7.419388,5.485175,4.894702,6.870634,-8.631472,-5.065492,-7.964281,-1.737770,-0.322206,3.123692,6.966920,-2.265637,2.454087,2.268907,-4.940740,-7.973919,-0.548469,-5.227881,-5.063694,-5.665280,9.607928,1.718570,-1.426510,-4.956901,7.549359,7.957917,-0.665779,-3.516598,-0.540096,4.195212,-6.171757,-8.828934,3.079710,-6.483941,-6.945251,6.460112,7.599175,3.633409,-6.148226,-3.103721,-4.470549,5.797973,-0.591908,-4.560201,9.407976,7.033606,2.468324,-0.173926,1.811520,-3.527977,9.395906,3.414599,-2.034318,-8.851561,-1.029842,7.218908,1.872386,2.532835,-2.071469,-3.134112,-3.012061,6.478072,7.376940,-0.206958,-6.123091,-8.685893,-7.071690,3.372287,7.761378,-8.043780,-3.016995,-8.711996,-0.783109,2.883931,2.130840,-4.008580,-1.273232,3.896073,3.845807,-7.227523,-8.168453,7.635860,-5.621701,3.075792,-2.752192,6.273970,3.915239,-0.897364,5.574075,-6.259252,6.788646,-4.816897,-4.129199,9.977315,-3.870020,-2.130862,7.854170,9.049845,-2.129852,0.083114,-8.893830,3.523960,-2.886760,4.652354,-3.360631,-5.937646,-1.334407,3.762832,-9.799864,-9.707140,-1.497997,1.221500,-2.512810,1.635637,7.972825,-7.215478,2.918238,-7.807396,1.527517,8.759614,5.906979,-5.253569,1.731247,0.636123,-4.731515,-9.371181,-1.734862,-0.213862,-7.090054,6.525439,-0.379719,-9.934755,8.229245,0.052938,-7.007979,-0.021813,-6.315472,-6.249557,-9.302799,7.356380,9.006352,9.559344,6.711603,7.614105,8.187774,-2.394291,-0.228181,3.807803,0.043819,-6.306425,-9.366697,7.414599,8.332359,-2.159144,3.375528,6.654171,8.535238,-5.743078,-6.809316,-7.370357,-6.246439,-9.363734,6.904908,1.791177,-5.092823,8.550883,-1.646740,-1.790680,-6.782770,-4.798908,-5.797859,-8.023256,-9.002536,9.406291,-2.464141,9.229167,-7.452154,3.963787,5.590644,-1.554954,2.461859,-1.039968,-8.174288,2.368248,3.285456,0.168375,6.215188,0.352632,-5.246599,2.018101,9.389472,-2.453042,-8.975191,5.409057,-8.549870,5.681326,7.395037,6.186832,-8.183276,-9.385129,-3.019411,-7.700111,-2.815950,-8.964054,-0.456669,2.232457,-2.672400,7.368072,-2.267561,-9.813274,-6.724661,-7.688337,-3.845483,4.022344,-2.824954,-6.097771,6.631573,6.395311,1.588591,2.114236,8.296099,1.784688,-2.152141,-1.778145,6.337448,2.805828,-9.486703,-8.038352,9.333791,-3.869139,0.875938,5.376744,3.987828,-0.629871,-2.481759,-7.182319,3.291535,9.528128,-1.072256,-4.069524,-8.711924,0.971400,9.037836,8.020590,3.972658,-5.677964,7.481376,-8.398880,-6.744662,5.603936,-4.256300,-8.258003,4.351830,2.246985,9.994303,3.372590,6.451804,2.093824,-5.826159,8.959539,-5.862370,4.735205,1.111377,-6.521226,-0.710894,-1.189578,5.474680,-6.253676,-5.494202,-8.275781,6.657105,-4.794119,-8.902630,8.895622,-7.366693,-0.729533,5.646005,-7.888360,9.720575,-1.171392,-4.132078,-4.970134,-2.135660,-3.716959,-4.919569,-3.855112,2.799614,-8.416874,-9.738461,-2.623278,6.547861,1.370173,-7.236873,4.007811,-4.164881,-4.492225,0.263908,-8.118331,8.764716,-3.736592,1.161696,-9.425227,2.016628,-6.427620,-9.591392,9.135776,-6.941524,-1.180340,-8.237621,-9.445949,-0.673957,-9.756090,-9.779703,8.838677,8.498646,5.008102,-0.439768,0.329523,2.321512,-1.774735,5.217722,0.910315,-9.291826,-1.278149,4.832497,-4.331900,3.971722,8.939534,5.752556,-4.350772,4.318879,-5.587586,9.119712,3.969038,0.212220,-9.944181,9.202821,-6.560382,-6.257054,8.748411,-5.802261,7.634720,-4.636078,9.835517,0.616400,-8.112970,7.291628,-8.357771,6.616421,7.662475,5.453746,4.666862,1.058296,6.547797,-5.035175,-7.394816,-0.856193,9.722351,-7.218864,-9.488679,-8.690221,-0.953727,8.861664,-0.606604,2.780646,-8.410646,7.788020,1.441930,0.133415,-3.083691,9.019452,-4.344368,-3.402955,-6.786673,-9.222177,-5.317226,-6.777378,2.250264,-7.816689,-9.901070,9.022995,-1.191983,-4.665281,-4.130277,-9.152261,7.452300,7.411927,4.542522,8.075320,-8.749655,7.126897,-4.661174,-7.131633,5.259107,5.177683,-6.440337,-9.286637,-7.163975,-0.455119,5.442414,9.678992,9.963107,-3.494616,5.971665,-0.490703,-6.228523,-4.033779,1.470080,-3.046584,8.009590,-2.388902,-2.717130,3.974264,5.639081,3.087332,-7.242816,-5.509943,0.593223,0.948848,-1.674291,8.792705,9.638767,-6.828481,-2.222092,5.533658,-5.978554,3.891908,6.807847,9.171416,-3.403343,2.851482,-1.416969,-6.973734,-8.743681,-5.261169,-2.318077,4.063708,1.093765,-7.433543,-3.775012,-9.276149,-3.736828,-9.317815,-6.725649,-1.638546,-3.884917,6.135957,8.961336,1.399784,9.351241,9.076528,2.981622,9.077047,-8.190990,-1.101243,-5.000564,5.813119,-5.768785,-9.175983,-9.517062,5.624769,-7.996454,5.934444,7.046661,8.095382,-6.805612,-5.234606,-7.048862,-4.893559,0.407222,7.798451,3.706290,-2.480503,-9.156134,-8.425268,-1.903146,-2.629618,7.052861,-8.270195,-5.558196,0.472200,-1.559493,-6.255443,-4.044286,7.159956,4.168469,8.916538,-4.115438,-7.384316,-4.726442,7.758045,-6.083030,8.118987,5.856141,-7.420874,9.424806,-7.010995,2.180977,-2.747506,6.852591,-7.637102,4.861321,-7.184695,2.218771,-3.453213,0.762212,-1.229381,3.961307,1.305324,-7.000458,-4.543948,-2.641792,8.721642,4.528616,6.579629,-2.491390,0.109346,0.721771,4.232381,-8.700471,-6.746865,7.744647,-5.508786,-0.339610,9.122762,5.205560,-6.607417,-6.312535,-4.463409,-7.768066,-4.966241,5.171690,-2.219176,7.687869,5.250143,3.338124,-7.447543,7.528766,-9.088713,-4.553907,-7.105012,0.836018,6.258725,-1.565288,-1.873002,7.262662,9.291418,-8.898539,8.144042,8.042090,-0.298881,-2.615180,4.562092,1.077252,0.965761,5.076742,4.099123,7.935114,-0.997316,-9.987820,-2.954416,-5.810103,-2.169846,4.333254,-3.461726,9.590800,3.656777,6.449858,8.819684,-4.111988,1.777552,-9.276020,3.759924,9.357726,7.327746,-8.960772,-3.469228,-9.811135,3.136321,-3.421203,-3.247773,-2.166175,-5.041865,5.891116,-1.699312,-3.040115,9.774670,1.991048,-8.428065,7.057960,-7.680088,5.866710,-6.855993,-5.554420,3.242415,8.978761,-8.657441,-5.127182,-7.135479,-3.770916,3.439957,-1.380268,2.129785,4.091713,-5.551700,8.257341,-9.149800,6.307185,-3.947638,2.628809,0.408114,-0.525328,-2.748756,-5.936449,-1.231300,-8.221470,6.911624,-6.894758,-5.274934,9.701447,-7.333892,4.090316,3.636303,5.607307,-7.618543,-6.122610,-5.207669,7.463991,9.811512,7.491546,-6.499151,2.432869,-7.155382,-1.455590,-3.336827,7.251620,4.570469,6.276018,-6.308931,-5.234416,4.552966,-2.025591,5.485854,0.316862,5.472927,-5.882854,-1.106759,7.100200,-2.157708,1.989020,1.113537,6.318299,3.555399,-5.852447,-6.681912,4.095340,2.393573,1.477539,6.390294,0.278723,4.255834,6.369875,0.456076,-5.673770,-3.897377,-6.340235,-3.102154,-5.899455,8.219531,7.304730,-0.055125,9.445440,-8.071564,-3.578334,1.524480,-9.383789,-5.112476,-1.121205,0.306241,0.573285,-4.842565,6.664059,4.557253,9.233725,-6.760735,-6.869169,2.310272,-2.876114,-9.622224,8.445205,-3.258938,-3.936564,3.900217,7.810267,3.193864,1.719155,-3.440720,7.564288,-5.877079,-2.173192,1.023993,1.532584,9.836439,1.204430,6.033518,3.847781,-9.547669,-2.580753,6.586838,-3.574602,-8.983973,-4.096638,1.489429,-1.084744,-3.126219,-8.915611,-9.620039,-4.893079,-3.404458,2.624902,0.343170,2.085413,0.325049,3.705827,4.648858,9.642636,3.885089,3.559559,7.008803,0.206981,-0.602762,-2.340491,5.845836,-0.158663,-8.683560,9.199145,2.273563,8.698731,-1.489233,5.625520,5.869135,6.272329,-8.599610,5.707479,9.799941], dtype = "float32")#candidate|7293|(1092,)|const|float32
call_7292 = relay.TupleGetItem(func_1386_call(relay.reshape(call_7279.astype('float64'), [12, 9, 11]), relay.reshape(const_7293.astype('float32'), [1092,]), ), 3)
call_7294 = relay.TupleGetItem(func_1390_call(relay.reshape(call_7279.astype('float64'), [12, 9, 11]), relay.reshape(const_7293.astype('float32'), [1092,]), ), 3)
func_7040_call = mod.get_global_var('func_7040')
func_7042_call = mutated_mod.get_global_var('func_7042')
call_7295 = func_7040_call()
call_7296 = func_7040_call()
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_7297 = func_602_call()
call_7298 = func_602_call()
output = relay.Tuple([call_7279,call_7284,call_7292,const_7293,call_7295,call_7297,])
output2 = relay.Tuple([call_7280,call_7285,call_7294,const_7293,call_7296,call_7298,])
func_7315 = relay.Function([], output)
mod['func_7315'] = func_7315
mod = relay.transform.InferType()(mod)
output = func_7315()
func_7316 = relay.Function([], output)
mutated_mod['func_7316'] = func_7316
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7343 = relay.const(False, dtype = "bool")#candidate|7343|()|const|bool
const_7344 = relay.const([[[True,False,False,True,True,True,False],[False,True,False,False,False,True,False],[False,False,True,True,True,True,False],[True,False,False,False,False,False,False],[False,False,False,True,False,False,False],[True,False,False,True,True,False,False],[True,False,False,False,False,True,True],[True,False,True,False,False,True,False]],[[True,True,False,True,False,True,False],[False,True,True,False,True,True,True],[False,False,True,False,False,True,False],[False,False,True,True,True,False,True],[True,True,False,False,True,False,True],[True,True,False,True,True,True,True],[False,False,True,True,False,False,True],[False,False,True,False,False,False,True]],[[True,False,True,True,True,True,True],[False,True,True,True,True,True,True],[False,False,False,False,False,True,True],[True,False,False,True,False,True,False],[False,True,True,False,True,False,True],[True,True,False,True,True,True,True],[False,False,False,False,False,False,False],[True,False,False,False,False,False,True]],[[False,False,True,False,True,True,False],[True,True,True,False,True,False,True],[False,True,False,False,False,False,False],[False,True,False,True,True,False,True],[True,True,True,True,True,False,True],[False,True,False,True,True,True,True],[False,True,True,False,True,True,False],[True,False,False,True,True,False,True]],[[False,True,False,True,False,True,False],[True,False,True,True,True,True,True],[False,True,False,False,False,True,False],[True,True,False,False,True,False,False],[False,True,True,False,False,True,True],[False,True,True,True,True,False,False],[False,False,True,True,True,False,True],[True,True,False,True,False,False,True]],[[True,True,True,True,False,False,True],[False,False,False,False,True,True,True],[False,False,True,False,False,True,True],[True,True,True,False,False,True,True],[True,True,True,False,False,False,False],[False,True,True,False,True,False,False],[False,True,True,False,True,True,False],[True,False,False,False,True,True,True]],[[True,False,False,False,True,True,True],[False,False,True,False,True,False,True],[False,False,True,False,False,True,False],[True,False,False,True,False,False,True],[True,True,False,False,True,True,True],[True,False,False,True,False,True,True],[True,True,False,True,False,False,True],[False,True,True,True,True,False,False]],[[True,False,False,False,False,False,False],[True,True,True,False,False,True,True],[False,False,True,False,False,True,True],[False,True,True,False,False,False,True],[True,False,False,False,True,False,False],[True,False,True,False,False,False,True],[False,False,False,False,False,True,False],[False,True,False,False,False,True,False]],[[True,True,False,False,False,False,True],[True,False,True,False,False,False,False],[False,True,True,False,True,False,True],[True,True,True,False,False,True,False],[True,False,True,False,False,True,False],[False,True,True,True,True,True,True],[True,True,True,False,False,True,False],[True,True,True,True,False,True,True]]], dtype = "bool")#candidate|7344|(9, 8, 7)|const|bool
bop_7345 = relay.logical_or(const_7343.astype('bool'), const_7344.astype('bool')) # shape=(9, 8, 7)
output = bop_7345
output2 = bop_7345
func_7357 = relay.Function([], output)
mod['func_7357'] = func_7357
mod = relay.transform.InferType()(mod)
mutated_mod['func_7357'] = func_7357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7357_call = mutated_mod.get_global_var('func_7357')
call_7358 = func_7357_call()
output = call_7358
func_7359 = relay.Function([], output)
mutated_mod['func_7359'] = func_7359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_7509 = relay.TupleGetItem(func_1432_call(), 1)
call_7510 = relay.TupleGetItem(func_1434_call(), 1)
output = call_7509
output2 = call_7510
func_7532 = relay.Function([], output)
mod['func_7532'] = func_7532
mod = relay.transform.InferType()(mod)
mutated_mod['func_7532'] = func_7532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7532_call = mutated_mod.get_global_var('func_7532')
call_7533 = func_7532_call()
output = call_7533
func_7534 = relay.Function([], output)
mutated_mod['func_7534'] = func_7534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4488_call = mod.get_global_var('func_4488')
func_4490_call = mutated_mod.get_global_var('func_4490')
call_7561 = relay.TupleGetItem(func_4488_call(), 0)
call_7562 = relay.TupleGetItem(func_4490_call(), 0)
output = relay.Tuple([call_7561,])
output2 = relay.Tuple([call_7562,])
func_7600 = relay.Function([], output)
mod['func_7600'] = func_7600
mod = relay.transform.InferType()(mod)
mutated_mod['func_7600'] = func_7600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7600_call = mutated_mod.get_global_var('func_7600')
call_7601 = func_7600_call()
output = call_7601
func_7602 = relay.Function([], output)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7600_call = mod.get_global_var('func_7600')
func_7602_call = mutated_mod.get_global_var('func_7602')
call_7628 = relay.TupleGetItem(func_7600_call(), 0)
call_7629 = relay.TupleGetItem(func_7602_call(), 0)
func_6224_call = mod.get_global_var('func_6224')
func_6225_call = mutated_mod.get_global_var('func_6225')
call_7639 = relay.TupleGetItem(func_6224_call(), 1)
call_7640 = relay.TupleGetItem(func_6225_call(), 1)
func_5029_call = mod.get_global_var('func_5029')
func_5032_call = mutated_mod.get_global_var('func_5032')
var_7643 = relay.var("var_7643", dtype = "int32", shape = (84,))#candidate|7643|(84,)|var|int32
call_7642 = relay.TupleGetItem(func_5029_call(relay.reshape(var_7643.astype('int32'), [7, 3, 4]), relay.reshape(var_7643.astype('int32'), [7, 3, 4]), ), 2)
call_7644 = relay.TupleGetItem(func_5032_call(relay.reshape(var_7643.astype('int32'), [7, 3, 4]), relay.reshape(var_7643.astype('int32'), [7, 3, 4]), ), 2)
var_7667 = relay.var("var_7667", dtype = "float32", shape = (16, 4, 4))#candidate|7667|(16, 4, 4)|var|float32
bop_7668 = relay.bitwise_or(call_7639.astype('uint16'), relay.reshape(var_7667.astype('uint16'), relay.shape_of(call_7639))) # shape=(16, 4, 4)
bop_7671 = relay.bitwise_or(call_7640.astype('uint16'), relay.reshape(var_7667.astype('uint16'), relay.shape_of(call_7640))) # shape=(16, 4, 4)
func_1468_call = mod.get_global_var('func_1468')
func_1469_call = mutated_mod.get_global_var('func_1469')
call_7677 = relay.TupleGetItem(func_1468_call(), 0)
call_7678 = relay.TupleGetItem(func_1469_call(), 0)
output = relay.Tuple([call_7628,call_7642,var_7643,bop_7668,call_7677,])
output2 = relay.Tuple([call_7629,call_7644,var_7643,bop_7671,call_7678,])
func_7690 = relay.Function([var_7643,var_7667,], output)
mod['func_7690'] = func_7690
mod = relay.transform.InferType()(mod)
var_7691 = relay.var("var_7691", dtype = "int32", shape = (84,))#candidate|7691|(84,)|var|int32
var_7692 = relay.var("var_7692", dtype = "float32", shape = (16, 4, 4))#candidate|7692|(16, 4, 4)|var|float32
output = func_7690(var_7691,var_7692,)
func_7693 = relay.Function([var_7691,var_7692,], output)
mutated_mod['func_7693'] = func_7693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2796_call = mod.get_global_var('func_2796')
func_2797_call = mutated_mod.get_global_var('func_2797')
call_7734 = relay.TupleGetItem(func_2796_call(), 3)
call_7735 = relay.TupleGetItem(func_2797_call(), 3)
func_4557_call = mod.get_global_var('func_4557')
func_4560_call = mutated_mod.get_global_var('func_4560')
const_7744 = relay.const([7,3,-3,-5,-5,9,-1,9,-5,-9,5,-3,-1,-2,6,9,5,7,-4,4,-7,5,2,-9,5,9,-10,-2,-1,-7,4,-10,9,4,10,-5,1,-9,4,-3,6,10,-4,-6,-9,-2,10,-1,-9,-6,-4,-10,-1,-1,6,5,-6,7,-9,5,-7,-2,-8,10,9,8,7,10,6,-2,-5,-6,3,-1,8,2,-2,4,9,-7,8,-4,5,2,7,-4,10,-3,3,7,9,-9,-4,-1,5,-3,-3,-9,-3,2,4,2,7,-8,9,-4,-5,-9,5,1,-8,-4,-3,1,-3,-4,8,2,-1,-6,6,-7,2,-9,6,7,-6,4,4,-5,-8,-6,5,10,8,6,-5,-4,-9,-3,3,-10,1,-8,9,3,-4,-2,7,-5,-9,9,-4,-4,-4,-9,-9,7,2,6,-1,-9,-10,-2,-6,-9,7,-10,1,-5,10,-3,2,-8,5,8,-5,-9,-9,-1,7,9,-8,-7,4,5,6,3,-5,-4,7,6,-8,-8,-5,3,8,8,-4,6,-6,2,-6,10,7,4,4,7,-3,3,3,2,10,7,4,2,2,-2,10,-4,5,-3,7,3,5,10,1,-9,-1,-7,-10,6,4,4,1,-10,-5,-5,3,6,5,-9,-9,9,5,-8,-8,8,-4,5,10,2,-10,-2,7,4,4,-10,2,-5,-7,1,-7,7,-3,7,-10,1,-7,5,-10,8,2,7,7,-10,-4,10,-4,-3,9,-10,-10,-1,3,5,-6,-7,10,2,-7,2,5,-3,8,6,5,-8,-7,5,4,-1,-2,-9,-4,10,5,-3,5,-1,-1,4,-1,2,-1,7,-7,-8,-9,-9,-9,-2,-2,-9,10,-4,7,6,10,7,7,7,-2,-2,1,4,4,-8,-1,-5,-5,2,9,-9,10,-8,-9,2,1,2,7,4,4,-8,-7,7,-4,-3,1,-1,9,7,-6,9,2,9,-9,-1,-3,9,-1,-3,7,9,-9,6,-10,5,-3,3,-6,-5,5,8,-2,-9,3,-10,-9,6,-9,-7,-7,-5,7,-6,-2,7,-6,7,-2,-2,2,5,3,1,-8,-1,3,5,-5,4,-3,-7,8,6,-2,-6,4,-6,-5,-7,7,7,-5,1,-7,-9,8,9,10,5,-6,4,2,-7,7,9,-3,8,-3,7,-6,8,2,7,3,-2], dtype = "int16")#candidate|7744|(448,)|const|int16
call_7743 = relay.TupleGetItem(func_4557_call(relay.reshape(const_7744.astype('int16'), [448,])), 2)
call_7745 = relay.TupleGetItem(func_4560_call(relay.reshape(const_7744.astype('int16'), [448,])), 2)
var_7746 = relay.var("var_7746", dtype = "int16", shape = (448,))#candidate|7746|(448,)|var|int16
bop_7747 = relay.subtract(const_7744.astype('int16'), relay.reshape(var_7746.astype('int16'), relay.shape_of(const_7744))) # shape=(448,)
func_4557_call = mod.get_global_var('func_4557')
func_4560_call = mutated_mod.get_global_var('func_4560')
call_7766 = relay.TupleGetItem(func_4557_call(relay.reshape(const_7744.astype('int16'), [448,])), 3)
call_7767 = relay.TupleGetItem(func_4560_call(relay.reshape(const_7744.astype('int16'), [448,])), 3)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_7770 = relay.TupleGetItem(func_6617_call(), 0)
call_7771 = relay.TupleGetItem(func_6618_call(), 0)
output = relay.Tuple([call_7734,call_7743,bop_7747,call_7766,call_7770,])
output2 = relay.Tuple([call_7735,call_7745,bop_7747,call_7767,call_7771,])
func_7789 = relay.Function([var_7746,], output)
mod['func_7789'] = func_7789
mod = relay.transform.InferType()(mod)
mutated_mod['func_7789'] = func_7789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7790 = relay.var("var_7790", dtype = "int16", shape = (448,))#candidate|7790|(448,)|var|int16
func_7789_call = mutated_mod.get_global_var('func_7789')
call_7791 = func_7789_call(var_7790)
output = call_7791
func_7792 = relay.Function([var_7790], output)
mutated_mod['func_7792'] = func_7792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1147_call = mod.get_global_var('func_1147')
func_1149_call = mutated_mod.get_global_var('func_1149')
call_7826 = relay.TupleGetItem(func_1147_call(), 0)
call_7827 = relay.TupleGetItem(func_1149_call(), 0)
output = call_7826
output2 = call_7827
func_7833 = relay.Function([], output)
mod['func_7833'] = func_7833
mod = relay.transform.InferType()(mod)
output = func_7833()
func_7834 = relay.Function([], output)
mutated_mod['func_7834'] = func_7834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_7901 = relay.TupleGetItem(func_1803_call(), 0)
call_7902 = relay.TupleGetItem(func_1805_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
var_7922 = relay.var("var_7922", dtype = "float32", shape = (256,))#candidate|7922|(256,)|var|float32
var_7923 = relay.var("var_7923", dtype = "float64", shape = (1188,))#candidate|7923|(1188,)|var|float64
call_7921 = relay.TupleGetItem(func_800_call(relay.reshape(var_7922.astype('float32'), [16, 4, 4]), relay.reshape(var_7923.astype('float64'), [1188,]), ), 1)
call_7924 = relay.TupleGetItem(func_803_call(relay.reshape(var_7922.astype('float32'), [16, 4, 4]), relay.reshape(var_7923.astype('float64'), [1188,]), ), 1)
output = relay.Tuple([call_7901,call_7921,var_7922,var_7923,])
output2 = relay.Tuple([call_7902,call_7924,var_7922,var_7923,])
func_7925 = relay.Function([var_7922,var_7923,], output)
mod['func_7925'] = func_7925
mod = relay.transform.InferType()(mod)
var_7926 = relay.var("var_7926", dtype = "float32", shape = (256,))#candidate|7926|(256,)|var|float32
var_7927 = relay.var("var_7927", dtype = "float64", shape = (1188,))#candidate|7927|(1188,)|var|float64
output = func_7925(var_7926,var_7927,)
func_7928 = relay.Function([var_7926,var_7927,], output)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6224_call = mod.get_global_var('func_6224')
func_6225_call = mutated_mod.get_global_var('func_6225')
call_7974 = relay.TupleGetItem(func_6224_call(), 0)
call_7975 = relay.TupleGetItem(func_6225_call(), 0)
output = relay.Tuple([call_7974,])
output2 = relay.Tuple([call_7975,])
func_8021 = relay.Function([], output)
mod['func_8021'] = func_8021
mod = relay.transform.InferType()(mod)
output = func_8021()
func_8022 = relay.Function([], output)
mutated_mod['func_8022'] = func_8022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7188_call = mod.get_global_var('func_7188')
func_7190_call = mutated_mod.get_global_var('func_7190')
call_8036 = relay.TupleGetItem(func_7188_call(), 2)
call_8037 = relay.TupleGetItem(func_7190_call(), 2)
output = relay.Tuple([call_8036,])
output2 = relay.Tuple([call_8037,])
func_8041 = relay.Function([], output)
mod['func_8041'] = func_8041
mod = relay.transform.InferType()(mod)
output = func_8041()
func_8042 = relay.Function([], output)
mutated_mod['func_8042'] = func_8042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mod.get_global_var('func_6515')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_8043 = relay.TupleGetItem(func_6515_call(), 0)
call_8044 = relay.TupleGetItem(func_6517_call(), 0)
output = call_8043
output2 = call_8044
func_8051 = relay.Function([], output)
mod['func_8051'] = func_8051
mod = relay.transform.InferType()(mod)
mutated_mod['func_8051'] = func_8051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mutated_mod.get_global_var('func_8051')
call_8052 = func_8051_call()
output = call_8052
func_8053 = relay.Function([], output)
mutated_mod['func_8053'] = func_8053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_8071 = relay.TupleGetItem(func_3046_call(), 0)
call_8072 = relay.TupleGetItem(func_3048_call(), 0)
func_7040_call = mod.get_global_var('func_7040')
func_7042_call = mutated_mod.get_global_var('func_7042')
call_8075 = func_7040_call()
call_8076 = func_7040_call()
output = relay.Tuple([call_8071,call_8075,])
output2 = relay.Tuple([call_8072,call_8076,])
func_8079 = relay.Function([], output)
mod['func_8079'] = func_8079
mod = relay.transform.InferType()(mod)
mutated_mod['func_8079'] = func_8079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8079_call = mutated_mod.get_global_var('func_8079')
call_8080 = func_8079_call()
output = call_8080
func_8081 = relay.Function([], output)
mutated_mod['func_8081'] = func_8081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_8109 = func_487_call()
call_8110 = func_487_call()
func_2121_call = mod.get_global_var('func_2121')
func_2122_call = mutated_mod.get_global_var('func_2122')
call_8125 = relay.TupleGetItem(func_2121_call(), 3)
call_8126 = relay.TupleGetItem(func_2122_call(), 3)
var_8140 = relay.var("var_8140", dtype = "uint8", shape = (9, 132))#candidate|8140|(9, 132)|var|uint8
bop_8141 = relay.mod(call_8125.astype('float32'), relay.reshape(var_8140.astype('float32'), relay.shape_of(call_8125))) # shape=(9, 132)
bop_8144 = relay.mod(call_8126.astype('float32'), relay.reshape(var_8140.astype('float32'), relay.shape_of(call_8126))) # shape=(9, 132)
func_4266_call = mod.get_global_var('func_4266')
func_4272_call = mutated_mod.get_global_var('func_4272')
var_8146 = relay.var("var_8146", dtype = "float32", shape = (1092,))#candidate|8146|(1092,)|var|float32
const_8147 = relay.const([9.202530,4.996310,9.466443,8.542876,5.494379,-1.200820,-4.665428,-2.467549,-6.929277,-1.922857,-7.643621,4.090252,0.385072,-9.175717,-1.673674,-8.019305,5.179722,8.096494,8.241084,-9.832325,8.478184,5.134128,-0.121459,-2.944201,-0.185245,-4.406111,-6.315770,1.739167,-6.757101,0.113743,3.213436,-3.453458,4.130194,1.313693,7.396163,-6.574485,4.289081,-4.241469,8.468228,-8.575225,4.780089,-6.332685,-1.111984,1.392293,4.669145,-1.713460,1.055448,-4.161936,-6.523166,6.744597,0.457948,5.988492,2.131158,9.395522,-7.389195,-2.440609,-2.845023,7.904940,9.886616,7.050188,0.147882,2.109140,-4.021307,-2.899933,-6.451586,-5.996352,7.491759,-6.859009,9.114823,1.438531,5.913388,-1.775397,-7.205253,-8.958994,-9.106416,-7.813794,3.005622,-7.228241,6.794723,1.943059,2.546292,-9.180096,3.888206,7.980622,-8.522249,-4.309058,4.938226,2.627250,-4.000451,0.422838,6.385106,1.544867,0.951454,-7.400845,-6.536314,-1.336729,-0.752031,-7.932971,6.021663,-9.892462,-1.724800,6.174442,7.070468,3.327914,7.898839,0.255998,-4.049433,1.336295,-8.861686,8.997606,6.090957,-1.670216,-7.425702,0.201102,0.408647,2.045553,-5.611458,1.236373,6.903122,-1.746330,7.437478,0.555884,-1.494706,6.724853,-0.076536,3.445332,9.972451,7.261349,-7.367518,8.054578,8.935306,1.465950,-1.593033,5.816685,5.033826,-7.842478,6.351233,-1.598023,-6.412205,6.923488,-7.613877,6.766484,-3.137646,6.984995,7.119233,-0.092920,1.789809,1.342822,-1.850404,4.714848,-9.709123,-8.945568,5.634655,1.376405,7.970949,5.192222,8.347355,2.192828,3.067499,-5.210486,9.852859,1.167192,-9.859104,-6.079482,-0.673493,-7.883803,4.044186,-9.371785,6.052546,3.329186,-2.215693,7.039051,1.069661,-8.329824,0.270823,0.197851,3.721412,-0.920558,8.329491,1.592521,-4.662171,-5.587095,-2.720938,5.994179,-8.350969,-2.632836,7.967859,-1.751493,-8.080652,7.209503,2.168572,3.034481,-6.977222,-5.593685,-5.859504,1.265743,5.442173,7.929798,-3.764649,-5.593130,3.382533,-9.711744,-0.770262,6.702657,2.387016,-4.352157,0.845992,6.427126,7.323235,-2.667402,9.235038,6.699571,0.857765,5.404426,4.132632,4.293221,-4.370655,2.042015,-2.067548,-5.248152,7.145515,2.947284,-9.952238,-9.539065,-0.950416,0.077709,-8.820085,3.510121,8.457058,-2.801147,-8.049567,2.939906,3.461816,6.824682,8.798303,7.974661,-5.895645,-6.197553,8.933113,9.839217,5.020485,-5.827879,6.492253,2.408531,-5.590530,9.734487,4.252397,0.800987,1.852335,2.323161,-1.689039,9.897290,3.546216,5.419566,0.193326,-9.814487], dtype = "float32")#candidate|8147|(256,)|const|float32
var_8148 = relay.var("var_8148", dtype = "int16", shape = (448,))#candidate|8148|(448,)|var|int16
call_8145 = relay.TupleGetItem(func_4266_call(relay.reshape(var_8140.astype('float64'), [12, 9, 11]), relay.reshape(var_8146.astype('float32'), [1092,]), relay.reshape(const_8147.astype('float32'), [256,]), relay.reshape(var_8148.astype('int16'), [448,]), ), 3)
call_8149 = relay.TupleGetItem(func_4272_call(relay.reshape(var_8140.astype('float64'), [12, 9, 11]), relay.reshape(var_8146.astype('float32'), [1092,]), relay.reshape(const_8147.astype('float32'), [256,]), relay.reshape(var_8148.astype('int16'), [448,]), ), 3)
uop_8173 = relay.cos(var_8148.astype('float32')) # shape=(448,)
func_7925_call = mod.get_global_var('func_7925')
func_7928_call = mutated_mod.get_global_var('func_7928')
call_8180 = relay.TupleGetItem(func_7925_call(relay.reshape(const_8147.astype('float32'), [256,]), relay.reshape(bop_8141.astype('float64'), [1188,]), ), 2)
call_8181 = relay.TupleGetItem(func_7928_call(relay.reshape(const_8147.astype('float32'), [256,]), relay.reshape(bop_8141.astype('float64'), [1188,]), ), 2)
output = relay.Tuple([call_8109,bop_8141,call_8145,var_8146,const_8147,uop_8173,call_8180,])
output2 = relay.Tuple([call_8110,bop_8144,call_8149,var_8146,const_8147,uop_8173,call_8181,])
func_8182 = relay.Function([var_8140,var_8146,var_8148,], output)
mod['func_8182'] = func_8182
mod = relay.transform.InferType()(mod)
var_8183 = relay.var("var_8183", dtype = "uint8", shape = (9, 132))#candidate|8183|(9, 132)|var|uint8
var_8184 = relay.var("var_8184", dtype = "float32", shape = (1092,))#candidate|8184|(1092,)|var|float32
var_8185 = relay.var("var_8185", dtype = "int16", shape = (448,))#candidate|8185|(448,)|var|int16
output = func_8182(var_8183,var_8184,var_8185,)
func_8186 = relay.Function([var_8183,var_8184,var_8185,], output)
mutated_mod['func_8186'] = func_8186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8188 = relay.const([[[6.236761,6.253088,-7.368734,-0.119826,-7.485660,-9.071514,-5.234248,-1.660761,-8.515517,-6.819950,-0.813416,-6.979322,5.934445,-8.774852,4.701448],[3.962261,7.618557,8.316180,-3.560953,-8.994497,3.515567,6.120189,-9.814036,7.998700,-2.941222,0.916451,-1.715451,-6.185202,4.201413,-9.048460],[-2.811818,2.556537,1.863032,-0.446791,1.133236,-7.558142,6.852283,-7.169068,1.538960,-6.125197,7.882406,9.611215,-7.470440,3.452820,-2.735851],[-9.644452,6.906013,-3.078131,-3.533335,7.942330,0.217739,7.830856,0.358494,7.851249,1.787080,-8.918842,1.175953,-6.963743,6.185743,-6.924772],[6.976774,3.364313,-5.216975,4.368374,-0.430675,-8.405254,-5.629653,-0.113482,0.585550,4.473572,-2.974687,7.029202,1.541951,3.456981,9.377284]],[[-7.535527,-3.976457,-9.769255,2.393541,7.984386,-2.928634,-8.850469,9.267356,-3.960691,-9.732908,2.027561,-7.138170,-5.725260,-6.506503,-8.975395],[3.407027,4.328500,-7.295100,8.015297,4.932059,7.216097,-6.381970,1.334728,0.491128,2.364360,5.145584,-5.644582,7.249129,9.508443,-8.249845],[-7.775252,-0.480708,8.624700,8.059531,-3.860427,1.992914,-0.908325,8.336964,-5.528852,4.286974,-4.154050,-2.454393,-8.767829,-2.225692,-2.528201],[-2.079648,-3.156188,-1.025774,6.766241,-2.886668,-1.607002,-9.123140,-8.557247,-6.796481,-1.373039,-4.114562,-5.346521,2.628252,-3.305774,-7.186157],[-7.912341,7.419477,0.002631,-1.009858,8.762205,3.437171,-5.843903,-5.083035,5.475944,5.202775,7.435002,7.607341,3.719394,-3.898547,-2.577054]],[[-8.306049,1.182510,1.731889,7.246758,-7.177051,6.242052,-7.223304,0.192325,-1.438736,-1.263244,-7.032826,5.039450,8.905717,-3.477985,-3.214855],[8.743012,9.594996,5.506550,1.125757,-2.714643,6.555040,0.503547,6.707658,6.240593,-8.826305,-5.691642,1.439077,-5.329151,-4.452571,-1.830889],[5.151876,0.335890,9.552989,7.952309,2.307364,-1.731380,1.329078,-5.127439,-7.530429,-3.672225,4.294989,2.295628,-7.254667,-2.744234,-3.907055],[-1.720572,-3.263002,-1.481163,-7.678189,-6.108393,8.165028,-6.448061,9.737470,3.773181,-1.184613,-0.040769,-5.651038,-1.552800,8.773467,0.257373],[-0.470705,3.484617,5.304974,-1.894624,1.509940,6.644323,3.240023,-8.690886,1.921532,-8.190063,5.205650,7.500956,-2.297975,2.505407,-1.257574]],[[5.838801,-6.680742,6.565510,-4.247790,4.545619,1.424377,-0.824639,-1.530136,8.484891,-1.699168,-3.560971,-2.863080,-0.556127,5.278098,-9.266338],[-6.988588,-2.551629,-4.398466,2.335963,8.249505,-2.802615,7.245849,1.014606,5.524700,1.360119,-8.170406,-6.907273,-6.485530,4.535326,-8.275664],[0.935112,1.832217,6.081018,-5.080526,-8.684039,1.947066,-7.688064,7.438035,-8.683414,-2.918959,6.663176,2.789139,5.901486,-3.912445,-8.740315],[-2.472983,7.865814,9.729830,3.156526,1.300603,-2.591006,-0.490371,-0.593515,-6.789414,4.535923,-2.697254,-5.861147,-3.311605,1.864783,-6.727455],[9.605975,-3.513903,9.833156,1.033518,8.256930,-8.771000,2.552107,-8.110211,7.039322,-2.739343,7.104603,1.474403,3.837360,4.140494,-6.260111]],[[-9.054568,-6.485211,-4.677416,-6.746928,-5.303763,1.640565,0.677727,9.639334,-6.415417,0.723830,6.371081,5.181297,-7.339774,-6.045305,-8.867189],[0.084173,-7.370477,3.712141,1.904756,-1.931399,1.347822,6.536146,-8.751855,-0.350424,5.221632,-2.040587,-8.118283,2.068771,-2.759151,-5.018637],[-5.314436,4.686892,6.101253,4.346526,-9.908652,-5.220489,3.664268,5.678174,-8.577517,-5.325603,2.396583,8.708058,3.026892,-2.267350,-1.970697],[-5.571884,-5.005707,-6.594524,-4.200192,0.276907,4.681873,-7.810062,2.430640,1.579625,9.520399,7.789571,-7.015025,-3.676412,3.400277,1.896391],[3.008619,-3.201721,2.759142,5.947907,-2.476256,-6.959108,-6.881575,4.548809,-6.140982,7.256066,-9.309282,-0.019727,1.496774,-8.374039,2.648551]]], dtype = "float32")#candidate|8188|(5, 5, 15)|const|float32
uop_8189 = relay.cos(const_8188.astype('float32')) # shape=(5, 5, 15)
func_3757_call = mod.get_global_var('func_3757')
func_3761_call = mutated_mod.get_global_var('func_3761')
const_8207 = relay.const(-5, dtype = "int8")#candidate|8207|()|const|int8
var_8208 = relay.var("var_8208", dtype = "int8", shape = (896,))#candidate|8208|(896,)|var|int8
call_8206 = relay.TupleGetItem(func_3757_call(relay.reshape(const_8207.astype('int8'), []), relay.reshape(var_8208.astype('int8'), [896,]), ), 1)
call_8209 = relay.TupleGetItem(func_3761_call(relay.reshape(const_8207.astype('int8'), []), relay.reshape(var_8208.astype('int8'), [896,]), ), 1)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_8224 = relay.TupleGetItem(func_2049_call(), 2)
call_8225 = relay.TupleGetItem(func_2050_call(), 2)
output = relay.Tuple([uop_8189,call_8206,const_8207,var_8208,call_8224,])
output2 = relay.Tuple([uop_8189,call_8209,const_8207,var_8208,call_8225,])
func_8226 = relay.Function([var_8208,], output)
mod['func_8226'] = func_8226
mod = relay.transform.InferType()(mod)
mutated_mod['func_8226'] = func_8226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8227 = relay.var("var_8227", dtype = "int8", shape = (896,))#candidate|8227|(896,)|var|int8
func_8226_call = mutated_mod.get_global_var('func_8226')
call_8228 = func_8226_call(var_8227)
output = call_8228
func_8229 = relay.Function([var_8227], output)
mutated_mod['func_8229'] = func_8229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1856_call = mod.get_global_var('func_1856')
func_1858_call = mutated_mod.get_global_var('func_1858')
call_8273 = relay.TupleGetItem(func_1856_call(), 0)
call_8274 = relay.TupleGetItem(func_1858_call(), 0)
func_4659_call = mod.get_global_var('func_4659')
func_4661_call = mutated_mod.get_global_var('func_4661')
call_8290 = relay.TupleGetItem(func_4659_call(), 0)
call_8291 = relay.TupleGetItem(func_4661_call(), 0)
uop_8302 = relay.acosh(call_8273.astype('float32')) # shape=(12, 9, 11)
uop_8304 = relay.acosh(call_8274.astype('float32')) # shape=(12, 9, 11)
output = relay.Tuple([call_8290,uop_8302,])
output2 = relay.Tuple([call_8291,uop_8304,])
func_8319 = relay.Function([], output)
mod['func_8319'] = func_8319
mod = relay.transform.InferType()(mod)
output = func_8319()
func_8320 = relay.Function([], output)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2447_call = mod.get_global_var('func_2447')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_8402 = relay.TupleGetItem(func_2447_call(), 2)
call_8403 = relay.TupleGetItem(func_2448_call(), 2)
output = relay.Tuple([call_8402,])
output2 = relay.Tuple([call_8403,])
func_8426 = relay.Function([], output)
mod['func_8426'] = func_8426
mod = relay.transform.InferType()(mod)
mutated_mod['func_8426'] = func_8426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8426_call = mutated_mod.get_global_var('func_8426')
call_8427 = func_8426_call()
output = call_8427
func_8428 = relay.Function([], output)
mutated_mod['func_8428'] = func_8428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2710_call = mod.get_global_var('func_2710')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_8429 = relay.TupleGetItem(func_2710_call(), 0)
call_8430 = relay.TupleGetItem(func_2712_call(), 0)
output = call_8429
output2 = call_8430
func_8433 = relay.Function([], output)
mod['func_8433'] = func_8433
mod = relay.transform.InferType()(mod)
output = func_8433()
func_8434 = relay.Function([], output)
mutated_mod['func_8434'] = func_8434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2527_call = mod.get_global_var('func_2527')
func_2528_call = mutated_mod.get_global_var('func_2528')
call_8480 = relay.TupleGetItem(func_2527_call(), 0)
call_8481 = relay.TupleGetItem(func_2528_call(), 0)
output = call_8480
output2 = call_8481
func_8487 = relay.Function([], output)
mod['func_8487'] = func_8487
mod = relay.transform.InferType()(mod)
output = func_8487()
func_8488 = relay.Function([], output)
mutated_mod['func_8488'] = func_8488
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8538 = relay.var("var_8538", dtype = "float64", shape = (4, 5, 5))#candidate|8538|(4, 5, 5)|var|float64
uop_8539 = relay.atanh(var_8538.astype('float64')) # shape=(4, 5, 5)
output = uop_8539
output2 = uop_8539
func_8585 = relay.Function([var_8538,], output)
mod['func_8585'] = func_8585
mod = relay.transform.InferType()(mod)
var_8586 = relay.var("var_8586", dtype = "float64", shape = (4, 5, 5))#candidate|8586|(4, 5, 5)|var|float64
output = func_8585(var_8586)
func_8587 = relay.Function([var_8586], output)
mutated_mod['func_8587'] = func_8587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2049_call = mod.get_global_var('func_2049')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_8592 = relay.TupleGetItem(func_2049_call(), 0)
call_8593 = relay.TupleGetItem(func_2050_call(), 0)
var_8594 = relay.var("var_8594", dtype = "float64", shape = (12, 9, 11))#candidate|8594|(12, 9, 11)|var|float64
bop_8595 = relay.add(call_8592.astype('int32'), relay.reshape(var_8594.astype('int32'), relay.shape_of(call_8592))) # shape=(12, 9, 11)
bop_8598 = relay.add(call_8593.astype('int32'), relay.reshape(var_8594.astype('int32'), relay.shape_of(call_8593))) # shape=(12, 9, 11)
func_4878_call = mod.get_global_var('func_4878')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_8599 = relay.TupleGetItem(func_4878_call(), 0)
call_8600 = relay.TupleGetItem(func_4879_call(), 0)
uop_8622 = relay.erf(call_8599.astype('float32')) # shape=(16, 4, 4)
uop_8624 = relay.erf(call_8600.astype('float32')) # shape=(16, 4, 4)
func_8487_call = mod.get_global_var('func_8487')
func_8488_call = mutated_mod.get_global_var('func_8488')
call_8625 = func_8487_call()
call_8626 = func_8487_call()
var_8640 = relay.var("var_8640", dtype = "float64", shape = (12, 9, 11))#candidate|8640|(12, 9, 11)|var|float64
bop_8641 = relay.right_shift(call_8592.astype('uint8'), relay.reshape(var_8640.astype('uint8'), relay.shape_of(call_8592))) # shape=(12, 9, 11)
bop_8644 = relay.right_shift(call_8593.astype('uint8'), relay.reshape(var_8640.astype('uint8'), relay.shape_of(call_8593))) # shape=(12, 9, 11)
output = relay.Tuple([bop_8595,uop_8622,call_8625,bop_8641,])
output2 = relay.Tuple([bop_8598,uop_8624,call_8626,bop_8644,])
func_8646 = relay.Function([var_8594,var_8640,], output)
mod['func_8646'] = func_8646
mod = relay.transform.InferType()(mod)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8646_call = mutated_mod.get_global_var('func_8646')
var_8648 = relay.var("var_8648", dtype = "float64", shape = (12, 9, 11))#candidate|8648|(12, 9, 11)|var|float64
var_8649 = relay.var("var_8649", dtype = "float64", shape = (12, 9, 11))#candidate|8649|(12, 9, 11)|var|float64
call_8647 = func_8646_call(var_8648,var_8649,)
output = call_8647
func_8650 = relay.Function([var_8648,var_8649,], output)
mutated_mod['func_8650'] = func_8650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5998_call = mod.get_global_var('func_5998')
func_6000_call = mutated_mod.get_global_var('func_6000')
call_8657 = relay.TupleGetItem(func_5998_call(), 0)
call_8658 = relay.TupleGetItem(func_6000_call(), 0)
func_7188_call = mod.get_global_var('func_7188')
func_7190_call = mutated_mod.get_global_var('func_7190')
call_8662 = relay.TupleGetItem(func_7188_call(), 2)
call_8663 = relay.TupleGetItem(func_7190_call(), 2)
func_3020_call = mod.get_global_var('func_3020')
func_3023_call = mutated_mod.get_global_var('func_3023')
const_8669 = relay.const([-3.207643,-4.154745,2.502580,6.747695,7.793094,2.458599,-3.079128,-4.313278,9.812060,-7.125962,-1.674013,-3.528764,7.178495,0.469714,9.096241,-3.525882,-8.612866,4.129248,-4.334497,7.800795,4.287981,7.739836,-2.513757,6.391308,0.672473,0.898264,-7.891928,0.675858,-5.512311,-1.747324,1.265466,4.251900,-4.057137,9.597770,-9.200346,-1.418431,1.013459,7.352661,5.072328,3.391274,8.784129,-9.374845,-5.092203,3.057003,-7.579448,-4.503422,0.485142,5.714301,-7.693183,-2.244433,-6.750171,-8.892625,-6.210839,5.239090,3.168849,-5.836433,2.684932,-7.001786,-7.158307,-7.051742,6.820006,-8.027383,0.239655,-7.206452,6.291224,-1.634754,5.767328,2.864247,-8.980058,-3.916511,-7.709841,-6.098147,8.273208,7.150045,6.431809,4.370418,4.238103,4.953919,1.839734,-9.426844,-3.973080,-2.008229,-1.428449,-4.071733,-9.813473,-1.156535,8.023211,-9.529860,0.556713,8.655719,-2.234656,2.266012,-4.510257,-9.889350,4.848235,-3.883528,6.102009,2.532194,1.185651,-8.912354,-0.275345,-3.401136,-7.471391,0.258539,-8.521758,-1.282103,9.530141,-0.579736,-9.863239,1.798897,-4.239937,5.921857,9.760827,3.227866,-4.922347,-1.246695,-7.873990,0.852272,-7.773782,-7.253759,2.926933,7.316957,-5.472869,-5.389323,-1.444711,-2.261394,-3.124030,-6.955468,8.845737,-3.848664,2.280047,-5.031068,3.575899,-0.818189,-0.446194,-3.333024,0.333953,-1.842026,-6.768562,-4.495304,8.013096,9.870653,1.706261,7.979690,5.380150,-6.231582,-1.209726,-2.291088,-8.080458,3.923711,6.151455,-7.176448,0.078896,-7.326291,-8.585549,-7.158433,-2.616486,1.117708,5.253963,-3.970303,-8.523519,-3.974584,8.325952,-6.142333,8.912047,7.619305,4.668068,-4.047345,-1.042595,-0.481074,9.603632,-0.098348,-4.054505,7.833090,-3.654490,-8.920821,1.933257,-7.057151,5.363615,-9.481974,-5.227566,2.207891,-6.022027,9.578555,1.458268,0.371130,-1.221006,-7.175706,9.221577,8.521287,5.137202,-1.533800,-4.872108,1.312499,3.123789,-4.035221,0.238223,2.030166,9.445690,1.444844,0.801056,-3.612890,-4.898069,-4.229855,-2.092052,-9.456602,-2.478172,-3.162183,7.199274,-2.749143,-9.355211,-2.693687,6.137338,7.609076,-0.727125,6.075135,3.014475,-2.755095,-5.745133,0.156323,-9.274035,-9.415242,-4.641933,2.146806,-2.791535,-9.328070,-5.145664,6.053877,-4.529277,9.262314,2.273944,-7.099707,-4.914854,-6.417862,-9.503085,2.995140,9.958061,7.674102,7.759875,2.007089,-9.251984,-5.903914,6.849449,-3.065962,-6.355499,-3.742640,-4.872932,-5.811358,4.965869,5.555365,-9.970266,-0.873434,-3.887089,1.076813,-1.095388,-7.159322], dtype = "float32")#candidate|8669|(256,)|const|float32
call_8668 = relay.TupleGetItem(func_3020_call(relay.reshape(const_8669.astype('float32'), [16, 4, 4])), 0)
call_8670 = relay.TupleGetItem(func_3023_call(relay.reshape(const_8669.astype('float32'), [16, 4, 4])), 0)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
var_8689 = relay.var("var_8689", dtype = "int16", shape = (448,))#candidate|8689|(448,)|var|int16
call_8688 = relay.TupleGetItem(func_1958_call(relay.reshape(var_8689.astype('int16'), [448,])), 0)
call_8690 = relay.TupleGetItem(func_1960_call(relay.reshape(var_8689.astype('int16'), [448,])), 0)
func_1386_call = mod.get_global_var('func_1386')
func_1390_call = mutated_mod.get_global_var('func_1390')
var_8704 = relay.var("var_8704", dtype = "float32", shape = (182, 6))#candidate|8704|(182, 6)|var|float32
call_8703 = relay.TupleGetItem(func_1386_call(relay.reshape(call_8657.astype('float64'), [12, 9, 11]), relay.reshape(var_8704.astype('float32'), [1092,]), ), 5)
call_8705 = relay.TupleGetItem(func_1390_call(relay.reshape(call_8657.astype('float64'), [12, 9, 11]), relay.reshape(var_8704.astype('float32'), [1092,]), ), 5)
func_4266_call = mod.get_global_var('func_4266')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_8722 = relay.TupleGetItem(func_4266_call(relay.reshape(call_8657.astype('float64'), [12, 9, 11]), relay.reshape(var_8704.astype('float32'), [1092,]), relay.reshape(const_8669.astype('float32'), [256,]), relay.reshape(var_8689.astype('int16'), [448,]), ), 5)
call_8723 = relay.TupleGetItem(func_4272_call(relay.reshape(call_8657.astype('float64'), [12, 9, 11]), relay.reshape(var_8704.astype('float32'), [1092,]), relay.reshape(const_8669.astype('float32'), [256,]), relay.reshape(var_8689.astype('int16'), [448,]), ), 5)
output = relay.Tuple([call_8657,call_8662,call_8668,const_8669,call_8688,var_8689,call_8703,var_8704,call_8722,])
output2 = relay.Tuple([call_8658,call_8663,call_8670,const_8669,call_8690,var_8689,call_8705,var_8704,call_8723,])
func_8729 = relay.Function([var_8689,var_8704,], output)
mod['func_8729'] = func_8729
mod = relay.transform.InferType()(mod)
var_8730 = relay.var("var_8730", dtype = "int16", shape = (448,))#candidate|8730|(448,)|var|int16
var_8731 = relay.var("var_8731", dtype = "float32", shape = (182, 6))#candidate|8731|(182, 6)|var|float32
output = func_8729(var_8730,var_8731,)
func_8732 = relay.Function([var_8730,var_8731,], output)
mutated_mod['func_8732'] = func_8732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3467_call = mod.get_global_var('func_3467')
func_3468_call = mutated_mod.get_global_var('func_3468')
call_8799 = relay.TupleGetItem(func_3467_call(), 0)
call_8800 = relay.TupleGetItem(func_3468_call(), 0)
output = call_8799
output2 = call_8800
func_8810 = relay.Function([], output)
mod['func_8810'] = func_8810
mod = relay.transform.InferType()(mod)
mutated_mod['func_8810'] = func_8810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8810_call = mutated_mod.get_global_var('func_8810')
call_8811 = func_8810_call()
output = call_8811
func_8812 = relay.Function([], output)
mutated_mod['func_8812'] = func_8812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8815 = relay.var("var_8815", dtype = "float64", shape = (4, 2, 13))#candidate|8815|(4, 2, 13)|var|float64
uop_8816 = relay.acosh(var_8815.astype('float64')) # shape=(4, 2, 13)
func_1647_call = mod.get_global_var('func_1647')
func_1648_call = mutated_mod.get_global_var('func_1648')
call_8819 = relay.TupleGetItem(func_1647_call(), 2)
call_8820 = relay.TupleGetItem(func_1648_call(), 2)
output = relay.Tuple([uop_8816,call_8819,])
output2 = relay.Tuple([uop_8816,call_8820,])
func_8836 = relay.Function([var_8815,], output)
mod['func_8836'] = func_8836
mod = relay.transform.InferType()(mod)
var_8837 = relay.var("var_8837", dtype = "float64", shape = (4, 2, 13))#candidate|8837|(4, 2, 13)|var|float64
output = func_8836(var_8837)
func_8838 = relay.Function([var_8837], output)
mutated_mod['func_8838'] = func_8838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8426_call = mod.get_global_var('func_8426')
func_8428_call = mutated_mod.get_global_var('func_8428')
call_8843 = relay.TupleGetItem(func_8426_call(), 0)
call_8844 = relay.TupleGetItem(func_8428_call(), 0)
func_7789_call = mod.get_global_var('func_7789')
func_7792_call = mutated_mod.get_global_var('func_7792')
var_8869 = relay.var("var_8869", dtype = "int16", shape = (448,))#candidate|8869|(448,)|var|int16
call_8868 = relay.TupleGetItem(func_7789_call(relay.reshape(var_8869.astype('int16'), [448,])), 3)
call_8870 = relay.TupleGetItem(func_7792_call(relay.reshape(var_8869.astype('int16'), [448,])), 3)
func_6688_call = mod.get_global_var('func_6688')
func_6690_call = mutated_mod.get_global_var('func_6690')
var_8877 = relay.var("var_8877", dtype = "float64", shape = (165,))#candidate|8877|(165,)|var|float64
call_8876 = relay.TupleGetItem(func_6688_call(relay.reshape(var_8877.astype('float64'), [3, 11, 5])), 2)
call_8878 = relay.TupleGetItem(func_6690_call(relay.reshape(var_8877.astype('float64'), [3, 11, 5])), 2)
func_890_call = mod.get_global_var('func_890')
func_893_call = mutated_mod.get_global_var('func_893')
const_8898 = relay.const([6.406203,6.859318,-9.497798,9.916633,4.858783,5.181643,-6.433659,-8.906159,-2.509064,-6.952128,9.175910,4.715805,-1.208665,-0.533334,8.450033,-4.106907,-6.413016,8.226866,1.004001,4.730869,7.915221,-3.765379,-3.499829,0.225805,4.656920,6.847723,2.371614,-1.498065,5.512919,5.848296,0.057496,7.073135,9.581597,4.968147,5.352696,1.867513,9.893434,-8.057860,-4.467925,-2.129237,5.841619,-2.443863,-1.596652,-7.271230,0.333155,-9.628811,3.126344,-4.816616,-6.224249,0.204611,-1.656555,-1.586580,0.188015,9.145674,6.342589,0.531229,-0.642261,4.495032,-6.979241,-5.998660,9.806083,-6.893016,-3.377937,0.527588,-6.377971,-4.749539,7.429431,-4.065643,0.979320,-8.690662,1.647169,0.547043,5.625371,-5.563900,-1.291286,0.738879,-0.284879,-9.141220,-0.299729,6.736235,-7.229789,-9.305663,2.246206,-1.279196,-5.867370,7.531206,-0.351560,1.117462,9.933510,1.380995,-4.195115,8.843151,7.479409,5.671285,2.866685,-2.059333,-4.601281,1.344781,-2.116597,-8.873756,-7.938369,-9.667973,-5.680579,-4.478522,-2.102728,8.983091,-5.166790,5.521581,-2.649440,0.273922,3.946867,-8.225356,-6.001818,0.032858,6.275962,-1.105959,9.051243,5.484313,-0.288450,0.984180,0.107483,-2.769344,3.540067,4.758969,-6.169423,3.700096,7.163389,-7.864464,0.017185,-4.814843,0.059025,-1.880888,1.864019,3.107585,9.327101,-5.625002,6.780695,-5.559160,-6.829238,1.590664,5.787803,8.232249,-6.086103,-4.304581,6.529085,-6.707279,0.617092,-7.653624,-4.128114,4.530483,-2.979016,2.255083,-9.997844,9.176842,2.724622,1.566671,5.999557,8.330044,-3.805471,-1.496274,-3.708714,2.419161,5.859153,3.769245,0.809369,-2.993331,-1.846784,8.479955,1.634395,-4.245129,4.852699,7.151846,-2.617932,-7.686485,1.280478,-8.976143,-1.421956,6.313756,7.145536,0.713893,9.331466,3.749911,1.641681,-2.921377,5.650490,-5.104965,3.324338,9.780959,-0.764147,-4.878520,-9.904425,-5.086960,-1.151210,2.928122,-0.247945,-4.152244,-7.503251,6.137656,3.617474,-8.438388,-8.594722,1.498711,5.385089,8.330038,7.211843,0.895536,5.371206,-0.197671,8.887274,3.550352,-7.580789,-3.114630,3.933472,7.910054,8.875559,7.220853,-5.206244,2.422718,-2.304302,2.929872,6.734999,2.777061,-3.680798,-4.470088,1.531421,4.291675,-5.247655,-1.643340,-4.409873,-3.363854,-3.921883,8.589252,-1.509276,-6.010037,-8.595326,-6.541616,-9.605544,-2.190273,3.941242,-8.059010,-2.487588,5.054807,4.233681,7.371695,0.832253,-2.235364,5.624601,-5.863358,-4.203114,-6.332600,-2.068964,-5.038373,3.263267,-5.706637,-9.126032,8.480906,-6.969473,2.120134,8.008582,3.227097,-0.057759,-7.690789,-2.623097,1.751918,3.356508,7.312180,8.549070,-7.594902,-9.818917,7.258334,2.075631,5.337035,0.045716,-0.433188,6.432366,0.216322,4.910288,-6.084175,-8.481324,-7.054003,1.927084,-6.095894,-2.996121,3.322529,9.899417,2.732296,-8.666370,-4.682750,5.204946,-0.637775,4.311138,-1.123460,5.268548,-9.776029,-6.029536,8.001617,-8.884626,-3.149611,-5.010938,0.719213,9.360622,-5.733247,7.178037,9.240351,9.247616,-0.730248,-7.633245,1.996383,2.101919,8.645653,9.577133,3.884116,-4.265636,-7.665668,-1.966058,-1.999080,-3.081755,0.360849,-1.629585,-4.087382,-5.763204,-1.165170,2.543340,-1.134780,4.675115,-2.068659,-3.269162,-3.612123,-6.098192,9.519688,-4.810104,-0.012931,-6.173890,-7.338829,-8.237359,4.326526,3.759390,4.260070,8.362033,1.001195,-3.182566,2.656286,-2.538602,3.925225,-2.882577,0.488129,9.523813,5.347155,7.658711,-8.614744,-5.067303,-2.141493,9.792298,-2.810143,9.582458,4.737408,-5.507231,-4.763771,-1.272787,7.698787,-9.163818,9.068658,-7.258055,2.748051,-4.862550,6.199557,3.009451,9.525872,-2.821421,-1.287435,1.024473,8.811911,-0.566277,-9.414024,2.462750,-7.399500,-7.853920,7.488408,-9.183639,-8.808369,-7.113449,-2.112179,6.501638,-5.256759,8.912425,3.160887,-9.956059,-1.672095,-1.851073,1.129471,-6.360980,4.486751,3.842194,0.202352,-4.207176,3.036112,-5.219726,-0.205061,4.304509,9.458580,1.852227,5.015988,7.579212,2.191865,8.937900,3.859949,-9.487611,-9.585529,-3.217805,2.095386,-1.253251,9.762374,-2.045885,-9.151359,5.320765,4.718476,4.455758,-6.154940,-3.653122,-2.023515,8.679365,-3.481875,1.794235,2.520124,-8.273244,-0.586244,2.592647,5.044218,8.633451,2.433683,5.294230,-2.613811,-0.914393,5.162758,-9.628620,-1.656001,-8.810547,2.363005,0.865635,4.184396,5.669129,-1.935949,9.860387,1.164819,-1.413817,3.412850,7.383910,-0.534497,4.979029,-9.165024,9.971438,8.952235,1.369628,3.620162,2.025065,0.176041,-6.937581,-1.319732,9.607601,9.779199,-5.470902,-6.684393,-6.633861,9.840603,-8.533293,1.713358,-5.118890,9.053113,1.755049,6.955636,1.530456,4.485073,-5.826381,-1.086573,1.577900,2.803143,-1.518354,9.228500,-0.663261,-9.270304,5.091981,4.822809,-6.415102,2.199521,6.257748,5.594747,7.127318,5.700666,-1.726785,-2.900957,0.749125,4.363173,2.556575,-0.866323,-4.573243,-1.644395,-3.069568,9.671808,6.386588,-4.950216,2.363741,9.968119,-5.729632,4.334786,-1.508006,2.535637,0.305186,-1.066551,3.706605,5.838587,3.900224,1.463497,8.340600,3.214898,-1.383741,5.294910,2.431746,-2.662940,9.750596,-9.376404,2.517766,1.802487,-0.677511,6.451751,-4.702492,6.972403,4.185565,4.622685,-3.942903,7.732654,-9.580950,-7.269077,0.012168,-6.401512,-4.803060,6.526024,-5.659231,5.117150,-1.096324,-8.054579,8.282803,-5.454583,2.905894,7.185130,-3.300483,-6.016927,2.668480,-2.533226,3.520196,-6.870063,8.800714,-3.706139,-7.350350,9.924782,-6.202286,-2.999240,3.963519,-3.466630,-5.035471,-1.739861,-8.395417,-9.374197,-4.331729,2.579325,5.214179,1.366446,2.375663,-2.373173,3.186173,-8.334401,3.114081,2.147032,1.708805,3.633404,4.184599,2.272261,-1.624596,-3.579930,-9.426986,1.012725,1.140885,8.227244,-4.732610,-6.421102,5.483204,8.748121,2.922503,2.442615,8.783419,9.088843,9.218251,-6.090610,-2.680529,-3.808760,-2.971665,-2.032299,-2.930813,-9.329779,9.403271,1.453532,2.255683,8.895270,6.405495,-0.725248,-2.067734,-3.676846,-0.678496,9.220833,5.030833,6.239824,6.237472,1.907729,2.581723,-2.134047,-5.098059,3.867687,4.830642,8.940877,-1.620070,7.815550,5.545665,-7.733906,-8.829300,-1.059743,9.081499,-0.698929,8.385117,-9.043118,7.724458,8.130089,-7.627105,-7.329039,8.386001,0.777559,7.733047,-9.730448,-6.334003,-1.389991,2.744977,-0.235938,-5.340845,0.835849,-2.229798,6.716399,6.965379,5.523689,1.360180,5.280737,2.003527,-1.900096,6.884480,7.940889,7.423015,-8.941150,-5.383843,3.546055,0.140645,-8.447022,3.123031,-4.866421,-2.905534,-8.897426,7.964445,7.300453,-9.197525,2.456676,-8.154328,3.366355,-6.487926,-5.168718,-3.537265,3.203313,0.809651,8.094693,2.127729,5.095583,-4.010449,-7.767580,4.066523,-1.455341,4.458423,7.634068,0.890820,-9.048070,-7.881971,-9.817316,-5.107389,4.140483,-5.611593,-2.922076,-9.075639,1.421189,-8.777295,-4.875231,1.778210,3.632035,-2.604140,2.563166,-4.886629,3.876511,-2.663115,9.953397,9.061185,-5.047669,-4.274373,-4.834056,-5.351328,8.171181,7.492988,-9.392217,-7.755970,6.747115,-3.711340,-2.476608,-0.989687,-1.569148,-0.260089,-2.254694,-2.815527,8.636880,4.497917,8.701551,0.173175,-3.205233,-2.203249,-3.481128,2.618002,8.262937,-3.780602,-8.431906,3.719096,2.909688,-1.188613,5.807093,0.096042,6.219791,-4.549797,-3.923703,0.732894,-8.244284,-2.250932,6.833027,8.530641,6.245340,-1.380972,-4.731068,-3.724318,6.323028,7.677822,7.748188,2.879153,-5.688652,1.218274,-2.496250,6.053149,-6.592982,5.250130,8.838972,-0.648952,-9.614611,-0.205038,-2.737611,-7.219795,-2.497931,0.448615,-0.559983,-3.463621,-4.702106,-3.459025,1.605325,-5.412291,4.116339,0.187004,-6.794687,6.868257,-5.038944,2.948630,9.835839,8.398324,-2.498935,6.857625,8.365254,2.627511,-9.164525,-3.859186,4.659618,1.795124,-4.496735,-7.562593,2.058015,1.199166,8.797335,-2.156022,9.320998,-0.297063,-5.308379,-6.148394,-0.440293,-8.769138,1.457149,-4.088284,2.803123,0.322752,-2.973311,-5.156591,-3.581455,6.993450,-3.543205,-3.338400,9.806633,1.891414,-7.945215,-4.478254,5.079293,9.651074,8.940213,-3.289992,-0.656791,4.086593,8.819824,-7.192920,0.802716,8.323867,7.621107,3.440013,2.551067,8.674268,2.055141,-3.268387,-2.829192,9.250329,7.149686,-4.418287,-9.959254,-4.524467,1.790744,6.381230,-5.759173,-8.018572,-2.995171,2.559054,2.177186,4.188715,-3.198560,4.909553,-0.194027,-7.040121,-4.531318,4.010755,-0.187802,-7.174120,-1.125037,6.204930,5.621757,-3.109678,4.291607,3.769413,-6.637462,6.570873,-7.771590,2.273606,-0.263910,-3.320647,-7.944167,3.915340,7.137346,-2.791401,4.940316,-9.288860,-8.193412,-4.094953,-9.249060,-9.778369,-1.569571,7.252921,-0.358959,5.204234,1.577501,-1.978166,2.410809,-8.890529,4.431498,-8.093866,-6.563458,0.909633,-5.247126,4.319898,4.466046,9.581965,0.545699,-9.725325,-2.337727,-3.892232,8.035941,6.559025,-4.557660,8.733730,5.924831,-3.259933,1.446956,-8.048800,2.332123,-5.410362,8.439141,0.514526,1.269403,-8.865645,4.790315,6.826820,0.511407,-8.935712,-3.397970,-6.294859,7.617347,-2.820981,-6.689615,-2.425098,-5.101769,6.760973,9.426844,-8.020849,-5.342675,-8.951642,-7.344643,6.705333,-8.516686,5.146236,0.903009,-8.892205,7.770387,6.840414,6.491264,0.007777,0.284739,5.919643,1.938960,9.538676,2.989636,-0.581236,4.738328,9.904253,1.906327,-9.647244,-0.459897,1.327880,7.658291,-2.602636,5.059268,-0.918123,-8.384368,0.541952,-5.209748,7.456228,-9.822518,7.542086,7.857748,7.480295,1.197939,-9.732496,5.526801,7.297789,-3.114871,8.622488,-9.426772,-9.459126,-4.193865,-2.785367,-8.894533,-1.386026,6.676550,-4.945037,-1.154009,5.764170,-2.357950,-2.659187,-4.769509,-0.372207,8.949395,-2.455481,-9.977788,-0.403269,-3.375460,8.718258,-7.608279,5.698451,5.770044,6.558506,6.918576,8.470758,-8.630974,6.262390,-9.950650,7.812272,-6.334961,1.688423,9.720352,6.308170,-2.211909,-6.049001,-9.351203,2.247374,-6.908157,2.329384,5.637767,3.370953,-2.233186,-0.412520,-5.992496,-3.455549,5.635342,4.455895,6.422200,-8.669572,6.017063,1.626768,-2.627952,3.772274,0.174669,5.572644,-9.470949,-0.658461,8.253252,2.662950,-5.273837,-5.391212,2.675043,-4.307624,-4.225663,-8.174946,-9.074326,5.397953,-8.732389,1.426820,-2.348397,2.559590,5.172348,0.360272,-0.141593,-2.260224,2.587697,9.889034,9.749668,4.126540,-9.830187,0.452271,7.761791,-7.175900,-3.270991,1.138551,-3.834106,0.044975,-3.956178,-1.598678,9.440155,-7.406136,-4.641468,1.549122,7.575993,6.492771,-7.783737,-7.336204,-1.746399,-5.548029,-7.305650,4.744021,-3.818973,-5.345605,2.456277,5.748708,-9.820850,5.707717,7.316036,-4.698420,-6.819246,2.513179,-1.270655,-8.390179,-4.727102,8.337071,0.821647,1.218410,4.783601,-9.953057,-0.657582,3.894819,1.496968,9.872710,2.409890,-6.029268,-2.562563,0.962317,4.839675], dtype = "float32")#candidate|8898|(1092,)|const|float32
const_8899 = relay.const([[6.382780,5.133967,-6.897459,7.534200,2.440953,5.115602,-8.768555,-6.761932,-7.686578,7.501035,-8.119626,-2.717224,-7.530525,7.671301,-4.821325,-9.995825,9.800740,1.482353,-6.016585,-2.297334,2.750267,-3.899061,4.742693,-9.508545,3.885564,-4.378201,-2.502768,-0.213291,-2.972085,3.181529,-1.778394,-7.461384,3.081949,0.600240,-9.959454,5.482476,-0.930020,9.883005,-9.028710,7.222426,7.146694,4.072674,-5.819869,9.820818,3.426822,-5.195105,-8.866486,4.012036,-5.103384,5.464786,0.828968,-1.588983,9.848789,8.696141,9.072182,9.338498,-7.202036,-3.150020,-6.760969,5.543721,-9.844831,0.493899,-6.027179,-4.294279,-0.823013,2.496181,8.182113,0.295319,-7.923861,-3.860508,7.007885,-1.827004,1.760925,5.057559,-4.747691,8.105255,-0.199191,-5.364508,-2.948350,9.591054,-9.701309,-5.377168,-3.543966,-5.070629,-9.428422,2.484016,9.902721,0.853712,-2.259839,-4.576576,8.897333,-5.504467,1.776117,-1.583888,6.772156,-8.535519,-4.109758,1.845774,-0.066136,6.979559,0.857298,-4.504727,2.711283,0.069647,-2.270732,-8.996541,5.753656,3.549113,3.072223,-8.889721,4.725676,8.130983,8.566983,3.320255,-9.216013,-2.422147,4.550001,-7.542028,-2.461166,-0.078780,-4.627986,-3.354530,5.012162,-3.936676,4.585637,-4.091610,3.218823,1.124465,-7.703899,-3.306389,0.495483,-8.698085,4.029313,1.530814,-0.996808,6.034546,7.296352,5.558030,6.560001,1.085666,-8.044916,-5.946186,2.723218,7.343658,-8.555900,5.716105,-0.392870,-1.794884,-0.383227,-2.569413,6.462410,4.760133,2.885043,-8.297394,-0.629801,-7.980922,5.718627,-7.611382,-3.657021,-0.786863,9.599484,-0.007359,-0.314749,-1.940330,3.425872,9.564176,-9.074166,1.876337,2.986415,-6.288391,6.414801,7.196958,1.274984,-7.611156,8.226004,-1.296088,-4.176944,-0.789747,9.482847,8.054385,2.075324,-3.633463,-4.471195,-2.280638,1.545011,7.678970,6.111362,1.646370,0.425598,-0.859294,-4.045984,0.013785,7.262642,1.106644,-3.504248,3.037608,-7.840244,9.699155,1.397842,-8.716945,7.762770,-0.352400,-5.944457,0.834932,0.145870,-4.087281,9.438368,-3.067553,-6.752877,3.655724,-4.567136,-4.595141,-4.248751,7.518601,4.112311,-8.028954,-4.718770,5.995429,-5.975768,-1.552013,-3.628763,-4.037379,-6.501465,5.240132,-7.977212,-8.507859,5.948316,0.120472,-2.458801,-2.703126,1.895574,-3.453505,2.203221,-8.935887,7.386477,4.636478,-2.678743,6.573993,-9.698175,7.474112,7.018232,1.203246,-3.614237,9.520712,-7.884232,7.883676,-6.313426,0.255698,1.699493,-2.869968,-4.053813,4.851831],[3.090742,4.829247,7.858950,-2.679742,-6.981619,0.295636,3.783528,-5.580792,-2.332174,7.797902,6.195509,-9.390840,-2.098559,2.219714,-2.000097,1.476389,7.717276,7.831674,0.324511,-6.434326,-9.982342,7.791568,-1.896126,9.225001,9.064477,1.186374,4.431551,3.996583,-7.620759,-7.094570,1.540420,-0.184508,-6.459571,2.770253,-4.148018,-7.578262,-9.443053,-2.505463,9.252308,2.147471,-0.200302,6.337741,2.096585,5.597422,-6.056080,-2.256209,-7.003011,-3.817843,1.671289,-7.136083,3.874650,-7.113940,-3.392246,-1.057650,-2.591564,-9.664413,7.242029,-4.919185,5.650351,-2.387385,6.823424,1.010191,-8.969189,-2.507551,-7.149018,5.153206,1.915849,0.333996,-8.815619,5.277406,0.459197,6.918443,-7.714054,6.981659,7.394164,4.294702,3.535839,-5.480979,-5.782085,8.350228,-8.855171,6.969033,-0.263881,4.056676,-2.241370,6.627662,3.431292,-1.812883,-7.367584,8.700726,-6.018550,-0.969334,0.735257,8.699690,8.758889,-0.218297,4.716996,-7.575989,-7.565377,-6.674190,-7.538858,3.486879,-4.446602,1.681864,2.284654,-1.129067,0.415879,0.247929,-6.773415,9.429885,0.353986,0.988214,3.199957,-6.240445,8.539049,-7.897630,-7.686513,0.735865,-4.270519,4.473606,8.298101,7.289436,-4.294531,-1.031430,7.262329,4.532188,5.460856,5.693582,-4.593136,3.627822,-0.496638,5.086006,4.272444,5.395012,-7.253754,7.655395,-7.026352,-7.160155,-7.304921,6.257725,-0.030786,-8.747516,0.708711,-5.884682,-5.918783,-3.497084,-1.466566,2.822934,-2.262131,0.148497,-2.313955,3.787744,2.377075,6.120972,-9.806653,6.663598,6.029165,-8.571646,9.609527,-8.649392,-6.350485,-0.605598,9.508208,-8.712419,-8.291883,-5.832222,2.968196,7.385830,1.166737,-2.729151,-3.959094,8.292998,7.868452,-2.893032,-3.933100,-6.337280,2.165411,0.648632,4.077242,8.939865,2.405660,-7.025683,3.721232,9.637813,-8.321992,-2.719095,6.562890,8.076978,1.910083,1.071282,-7.925750,9.471212,-9.959108,-8.212378,-8.143061,9.710118,1.261535,-8.347873,-3.214066,-3.636248,9.085755,0.093541,-0.385371,-0.056957,-7.446912,3.041890,1.356804,3.546573,-3.607290,8.556278,7.348127,-0.082993,-8.893455,5.695552,6.074389,-4.363795,-2.504496,3.640885,-7.326526,-3.832176,-1.621428,6.084350,-9.044778,0.076044,7.246808,-6.164350,-5.911650,1.405822,9.686084,4.447734,-0.415753,-9.304045,4.450063,8.499518,6.073454,-9.146669,-7.945808,4.589211,-9.218836,3.935771,-0.754040,-0.541761,-4.531593,1.720838,-2.219544,-8.254517,-8.252487,0.057187,8.780101,6.680936,8.983052,-0.040576],[-6.585238,-6.899476,-3.542313,-6.518227,0.879258,2.777881,-1.075879,-6.477825,7.982472,-8.991522,1.568900,4.204365,-0.004884,7.881386,9.946410,8.066226,0.074637,-6.748971,1.220986,-3.427021,-3.555009,1.598488,7.140946,1.007108,-2.951633,-9.127503,-3.735924,-8.951082,7.458503,-2.543748,7.759584,-6.323910,7.179140,4.907161,0.029421,-3.864522,9.961120,-6.730138,9.297108,-3.005024,1.465442,8.526247,-3.431877,4.784561,4.764132,-5.337226,1.448523,9.087587,-6.506734,-6.570409,2.585143,1.939466,-1.989359,6.927221,9.514354,4.648303,-2.870031,-0.652759,9.870059,-9.885671,1.243104,9.449660,3.541963,-5.425188,5.376778,5.386841,2.579399,-5.555628,4.552627,0.270814,8.376845,8.272260,5.692903,-8.685496,6.976332,0.571173,-8.615607,-3.083637,9.778116,1.407680,0.725373,7.364211,5.267866,-1.503805,7.224108,7.050531,-3.715202,4.211248,7.189724,-6.950643,-8.029121,6.721999,2.151045,8.754891,-1.133604,8.961519,2.010031,-4.516979,-6.062553,7.187947,-4.422035,-8.430407,-0.854877,-6.534043,-7.940999,-2.089908,-5.800399,2.334136,9.232043,4.388286,6.448742,0.752647,1.831227,5.656085,-7.209992,-1.718222,0.122743,-0.999097,-7.586738,7.038334,6.901292,8.117308,-7.387931,4.392868,7.114367,4.746877,-6.964031,-3.677177,8.638641,6.066590,-5.952981,-7.604074,2.374053,3.591608,-9.866887,-1.346912,2.091836,4.129824,-5.205606,9.237314,7.539236,-0.480215,-7.466659,-6.560668,-0.776762,9.132843,0.478374,-3.831472,-0.708209,-4.924974,6.720767,8.865974,-0.214778,-7.393539,0.929024,4.680501,-6.877735,-9.342121,-4.519548,-6.713108,2.776865,1.754658,-8.465006,9.440647,-8.343102,1.293958,-0.065308,-1.403115,6.762800,5.571278,-3.351183,-3.294893,-1.367514,4.492227,0.355919,5.518952,-9.762522,9.711098,-6.876494,2.144903,-8.239789,-0.806959,1.887669,0.342838,9.295669,-7.735662,6.414875,5.352127,1.668472,-3.381357,-7.666826,4.166341,3.432876,6.190034,4.630746,-2.750138,7.976814,-4.025810,9.949186,-5.438039,-8.967688,-9.627964,5.783684,9.028819,6.859490,5.412311,9.173859,-3.365632,9.936746,1.958466,-8.742259,-9.949183,-3.804903,1.963145,-4.102893,3.410614,-6.952701,4.865365,4.018014,-6.186483,-3.629532,-9.059147,5.898109,-0.173145,5.688422,3.104588,7.256376,1.182931,9.396680,7.768964,-0.772626,-3.118092,4.505449,-2.911645,4.067021,6.295754,-3.468930,3.222326,-8.019015,-7.465487,9.667342,3.699946,0.699209,5.928797,0.117052,2.724806,9.278269,-1.225471,9.113084,3.517512,-0.118163,-0.549460],[-4.645652,-0.276777,-3.845120,-4.132331,-1.135272,-3.568914,8.971133,-5.048230,7.746870,-4.967059,-1.632941,9.467699,-5.598613,-4.433320,7.385922,3.588575,-0.986077,-1.786571,6.492445,2.620191,-2.955853,0.288449,2.072552,5.652421,8.304844,1.592980,-9.799099,9.416758,3.961915,6.765057,2.338685,-4.297613,-3.772566,-9.729469,-8.236277,-6.813944,1.282800,-2.575855,5.113008,1.343280,2.537482,-8.309048,4.928775,-9.836487,8.826647,3.225364,9.417276,3.731785,-8.721191,4.863871,4.343021,-8.398464,9.445404,8.162239,-8.936942,-0.678858,2.458772,5.345646,-4.604461,1.580326,-1.284285,-6.554811,-5.251198,5.945699,0.496399,3.036405,-1.511880,-2.625842,-8.542172,8.963209,-5.929101,9.072715,-7.345202,1.867121,-6.065864,9.862743,1.413672,-4.655114,9.945350,5.781573,-1.538773,8.219783,-1.734803,6.928582,3.648109,5.467640,-1.341834,1.933791,3.585605,1.185356,8.540770,-9.738854,8.333705,-1.286753,7.106486,5.971687,1.811080,-6.793222,-4.270230,-2.435180,-0.903536,-0.674672,-2.752974,-1.155878,-7.864575,-2.940955,-9.031141,-3.885820,0.824470,-1.954093,-0.236735,3.976824,-5.650130,1.245911,0.848776,-5.450036,7.187883,-9.635993,-0.274932,-4.852049,-6.702651,-8.028811,2.531728,-1.125041,2.459137,2.590958,3.405767,5.307333,3.543022,-0.855296,5.678805,-8.282867,9.685037,-9.697344,0.711638,-1.207697,0.313009,-0.295656,-9.945853,-6.063195,8.088404,1.597503,-3.157290,-6.619479,-3.313700,-8.877717,5.555449,-6.345055,6.886877,-0.935703,6.639600,-9.716680,8.470337,-8.135874,-6.746655,-7.869080,-4.661705,-0.614395,-7.049755,-0.452155,8.421669,-0.386127,-0.284459,-1.819121,-8.229083,-4.254266,8.798554,-5.828591,-5.085652,-4.836262,8.254899,-6.646036,2.300431,-4.917096,-3.222534,-2.061383,2.691411,-0.656091,2.641104,7.787600,-6.087315,-8.921074,2.427547,-9.223326,8.037397,-8.542607,2.723142,-9.270405,5.849621,8.794321,-0.236903,8.682245,-3.022429,6.786425,-0.431781,5.609993,-1.699814,9.369087,2.290283,9.709335,-3.486002,4.081543,4.437008,-3.027544,6.196068,-7.519979,8.055678,5.395743,0.489461,-8.179246,-0.941062,-8.867997,5.878277,-3.332827,-4.001074,6.405513,5.299849,-9.420365,-8.407092,7.607259,-4.994615,9.414549,1.701946,-8.890638,6.507002,4.187191,-2.253131,5.069405,9.218496,-4.369304,8.334706,-8.774541,4.748045,6.245859,-3.716602,5.303984,-3.571639,-5.627435,3.307022,7.567262,8.396726,-5.413097,-8.025965,7.872194,3.250748,6.790380,5.936974,6.026332,9.261057,4.381188,7.984455,-6.582663]], dtype = "float64")#candidate|8899|(4, 252)|const|float64
call_8897 = relay.TupleGetItem(func_890_call(relay.reshape(const_8898.astype('float32'), [12, 13, 7]), relay.reshape(const_8899.astype('float64'), [1008,]), ), 2)
call_8900 = relay.TupleGetItem(func_893_call(relay.reshape(const_8898.astype('float32'), [12, 13, 7]), relay.reshape(const_8899.astype('float64'), [1008,]), ), 2)
output = relay.Tuple([call_8843,call_8868,var_8869,call_8876,var_8877,call_8897,const_8898,const_8899,])
output2 = relay.Tuple([call_8844,call_8870,var_8869,call_8878,var_8877,call_8900,const_8898,const_8899,])
func_8908 = relay.Function([var_8869,var_8877,], output)
mod['func_8908'] = func_8908
mod = relay.transform.InferType()(mod)
var_8909 = relay.var("var_8909", dtype = "int16", shape = (448,))#candidate|8909|(448,)|var|int16
var_8910 = relay.var("var_8910", dtype = "float64", shape = (165,))#candidate|8910|(165,)|var|float64
output = func_8908(var_8909,var_8910,)
func_8911 = relay.Function([var_8909,var_8910,], output)
mutated_mod['func_8911'] = func_8911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6810_call = mod.get_global_var('func_6810')
func_6811_call = mutated_mod.get_global_var('func_6811')
call_8918 = func_6810_call()
call_8919 = func_6810_call()
const_8921 = relay.const([True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False], dtype = "bool")#candidate|8921|(1188,)|const|bool
bop_8922 = relay.left_shift(call_8918.astype('int16'), relay.reshape(const_8921.astype('int16'), relay.shape_of(call_8918))) # shape=(1188,)
bop_8925 = relay.left_shift(call_8919.astype('int16'), relay.reshape(const_8921.astype('int16'), relay.shape_of(call_8919))) # shape=(1188,)
output = bop_8922
output2 = bop_8925
func_8933 = relay.Function([], output)
mod['func_8933'] = func_8933
mod = relay.transform.InferType()(mod)
mutated_mod['func_8933'] = func_8933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8933_call = mutated_mod.get_global_var('func_8933')
call_8934 = func_8933_call()
output = call_8934
func_8935 = relay.Function([], output)
mutated_mod['func_8935'] = func_8935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4681_call = mod.get_global_var('func_4681')
func_4683_call = mutated_mod.get_global_var('func_4683')
call_8962 = relay.TupleGetItem(func_4681_call(), 0)
call_8963 = relay.TupleGetItem(func_4683_call(), 0)
func_1725_call = mod.get_global_var('func_1725')
func_1726_call = mutated_mod.get_global_var('func_1726')
call_8971 = relay.TupleGetItem(func_1725_call(), 0)
call_8972 = relay.TupleGetItem(func_1726_call(), 0)
output = relay.Tuple([call_8962,call_8971,])
output2 = relay.Tuple([call_8963,call_8972,])
func_8974 = relay.Function([], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
output = func_8974()
func_8975 = relay.Function([], output)
mutated_mod['func_8975'] = func_8975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3584_call = mod.get_global_var('func_3584')
func_3586_call = mutated_mod.get_global_var('func_3586')
call_9077 = relay.TupleGetItem(func_3584_call(), 1)
call_9078 = relay.TupleGetItem(func_3586_call(), 1)
func_4953_call = mod.get_global_var('func_4953')
func_4955_call = mutated_mod.get_global_var('func_4955')
call_9083 = relay.TupleGetItem(func_4953_call(), 0)
call_9084 = relay.TupleGetItem(func_4955_call(), 0)
output = relay.Tuple([call_9077,call_9083,])
output2 = relay.Tuple([call_9078,call_9084,])
func_9086 = relay.Function([], output)
mod['func_9086'] = func_9086
mod = relay.transform.InferType()(mod)
mutated_mod['func_9086'] = func_9086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9086_call = mutated_mod.get_global_var('func_9086')
call_9087 = func_9086_call()
output = call_9087
func_9088 = relay.Function([], output)
mutated_mod['func_9088'] = func_9088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_9142 = func_3789_call()
call_9143 = func_3789_call()
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_9153 = relay.TupleGetItem(func_2969_call(), 0)
call_9154 = relay.TupleGetItem(func_2970_call(), 0)
output = relay.Tuple([call_9142,call_9153,])
output2 = relay.Tuple([call_9143,call_9154,])
func_9160 = relay.Function([], output)
mod['func_9160'] = func_9160
mod = relay.transform.InferType()(mod)
mutated_mod['func_9160'] = func_9160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9160_call = mutated_mod.get_global_var('func_9160')
call_9161 = func_9160_call()
output = call_9161
func_9162 = relay.Function([], output)
mutated_mod['func_9162'] = func_9162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6773_call = mod.get_global_var('func_6773')
func_6775_call = mutated_mod.get_global_var('func_6775')
call_9163 = relay.TupleGetItem(func_6773_call(), 2)
call_9164 = relay.TupleGetItem(func_6775_call(), 2)
uop_9166 = relay.cosh(call_9163.astype('float32')) # shape=(16, 4, 4)
uop_9168 = relay.cosh(call_9164.astype('float32')) # shape=(16, 4, 4)
bop_9170 = relay.floor_mod(call_9163.astype('float64'), relay.reshape(uop_9166.astype('float64'), relay.shape_of(call_9163))) # shape=(16, 4, 4)
bop_9173 = relay.floor_mod(call_9164.astype('float64'), relay.reshape(uop_9168.astype('float64'), relay.shape_of(call_9164))) # shape=(16, 4, 4)
func_4675_call = mod.get_global_var('func_4675')
func_4676_call = mutated_mod.get_global_var('func_4676')
call_9179 = func_4675_call()
call_9180 = func_4675_call()
output = relay.Tuple([bop_9170,call_9179,])
output2 = relay.Tuple([bop_9173,call_9180,])
func_9182 = relay.Function([], output)
mod['func_9182'] = func_9182
mod = relay.transform.InferType()(mod)
mutated_mod['func_9182'] = func_9182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9182_call = mutated_mod.get_global_var('func_9182')
call_9183 = func_9182_call()
output = call_9183
func_9184 = relay.Function([], output)
mutated_mod['func_9184'] = func_9184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7600_call = mod.get_global_var('func_7600')
func_7602_call = mutated_mod.get_global_var('func_7602')
call_9211 = relay.TupleGetItem(func_7600_call(), 0)
call_9212 = relay.TupleGetItem(func_7602_call(), 0)
output = call_9211
output2 = call_9212
func_9220 = relay.Function([], output)
mod['func_9220'] = func_9220
mod = relay.transform.InferType()(mod)
output = func_9220()
func_9221 = relay.Function([], output)
mutated_mod['func_9221'] = func_9221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9182_call = mod.get_global_var('func_9182')
func_9184_call = mutated_mod.get_global_var('func_9184')
call_9265 = relay.TupleGetItem(func_9182_call(), 0)
call_9266 = relay.TupleGetItem(func_9184_call(), 0)
output = relay.Tuple([call_9265,])
output2 = relay.Tuple([call_9266,])
func_9271 = relay.Function([], output)
mod['func_9271'] = func_9271
mod = relay.transform.InferType()(mod)
output = func_9271()
func_9272 = relay.Function([], output)
mutated_mod['func_9272'] = func_9272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5356_call = mod.get_global_var('func_5356')
func_5358_call = mutated_mod.get_global_var('func_5358')
call_9295 = func_5356_call()
call_9296 = func_5356_call()
func_2498_call = mod.get_global_var('func_2498')
func_2501_call = mutated_mod.get_global_var('func_2501')
var_9302 = relay.var("var_9302", dtype = "float32", shape = (1092,))#candidate|9302|(1092,)|var|float32
call_9301 = relay.TupleGetItem(func_2498_call(relay.reshape(var_9302.astype('float32'), [1092,])), 2)
call_9303 = relay.TupleGetItem(func_2501_call(relay.reshape(var_9302.astype('float32'), [1092,])), 2)
output = relay.Tuple([call_9295,call_9301,var_9302,])
output2 = relay.Tuple([call_9296,call_9303,var_9302,])
func_9319 = relay.Function([var_9302,], output)
mod['func_9319'] = func_9319
mod = relay.transform.InferType()(mod)
mutated_mod['func_9319'] = func_9319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9320 = relay.var("var_9320", dtype = "float32", shape = (1092,))#candidate|9320|(1092,)|var|float32
func_9319_call = mutated_mod.get_global_var('func_9319')
call_9321 = func_9319_call(var_9320)
output = call_9321
func_9322 = relay.Function([var_9320], output)
mutated_mod['func_9322'] = func_9322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1432_call = mod.get_global_var('func_1432')
func_1434_call = mutated_mod.get_global_var('func_1434')
call_9364 = relay.TupleGetItem(func_1432_call(), 1)
call_9365 = relay.TupleGetItem(func_1434_call(), 1)
func_1192_call = mod.get_global_var('func_1192')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_9388 = relay.var("var_9388", dtype = "int8", shape = ())#candidate|9388|()|var|int8
call_9387 = relay.TupleGetItem(func_1192_call(relay.reshape(var_9388.astype('int8'), [])), 0)
call_9389 = relay.TupleGetItem(func_1195_call(relay.reshape(var_9388.astype('int8'), [])), 0)
uop_9393 = relay.sigmoid(call_9387.astype('float32')) # shape=(1, 9, 2)
uop_9395 = relay.sigmoid(call_9389.astype('float32')) # shape=(1, 9, 2)
bop_9411 = relay.mod(uop_9393.astype('float64'), relay.reshape(call_9387.astype('float64'), relay.shape_of(uop_9393))) # shape=(1, 9, 2)
bop_9414 = relay.mod(uop_9395.astype('float64'), relay.reshape(call_9389.astype('float64'), relay.shape_of(uop_9395))) # shape=(1, 9, 2)
uop_9418 = relay.sqrt(bop_9411.astype('float32')) # shape=(1, 9, 2)
uop_9420 = relay.sqrt(bop_9414.astype('float32')) # shape=(1, 9, 2)
bop_9421 = relay.not_equal(uop_9418.astype('bool'), relay.reshape(uop_9393.astype('bool'), relay.shape_of(uop_9418))) # shape=(1, 9, 2)
bop_9424 = relay.not_equal(uop_9420.astype('bool'), relay.reshape(uop_9395.astype('bool'), relay.shape_of(uop_9420))) # shape=(1, 9, 2)
func_7188_call = mod.get_global_var('func_7188')
func_7190_call = mutated_mod.get_global_var('func_7190')
call_9425 = relay.TupleGetItem(func_7188_call(), 2)
call_9426 = relay.TupleGetItem(func_7190_call(), 2)
uop_9428 = relay.rsqrt(bop_9411.astype('float64')) # shape=(1, 9, 2)
uop_9430 = relay.rsqrt(bop_9414.astype('float64')) # shape=(1, 9, 2)
output = relay.Tuple([call_9364,var_9388,bop_9421,call_9425,uop_9428,])
output2 = relay.Tuple([call_9365,var_9388,bop_9424,call_9426,uop_9430,])
func_9440 = relay.Function([var_9388,], output)
mod['func_9440'] = func_9440
mod = relay.transform.InferType()(mod)
mutated_mod['func_9440'] = func_9440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9441 = relay.var("var_9441", dtype = "int8", shape = ())#candidate|9441|()|var|int8
func_9440_call = mutated_mod.get_global_var('func_9440')
call_9442 = func_9440_call(var_9441)
output = call_9442
func_9443 = relay.Function([var_9441], output)
mutated_mod['func_9443'] = func_9443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6515_call = mod.get_global_var('func_6515')
func_6517_call = mutated_mod.get_global_var('func_6517')
call_9519 = relay.TupleGetItem(func_6515_call(), 0)
call_9520 = relay.TupleGetItem(func_6517_call(), 0)
func_5276_call = mod.get_global_var('func_5276')
func_5277_call = mutated_mod.get_global_var('func_5277')
call_9557 = relay.TupleGetItem(func_5276_call(), 0)
call_9558 = relay.TupleGetItem(func_5277_call(), 0)
uop_9567 = relay.atanh(call_9557.astype('float64')) # shape=(9, 132)
uop_9569 = relay.atanh(call_9558.astype('float64')) # shape=(9, 132)
func_2946_call = mod.get_global_var('func_2946')
func_2947_call = mutated_mod.get_global_var('func_2947')
call_9579 = relay.TupleGetItem(func_2946_call(), 0)
call_9580 = relay.TupleGetItem(func_2947_call(), 0)
func_7789_call = mod.get_global_var('func_7789')
func_7792_call = mutated_mod.get_global_var('func_7792')
const_9593 = relay.const([4,-10,7,-5,-2,-9,-9,-6,-8,9,7,1,-10,-10,6,6,-1,8,2,-6,6,-3,-6,3,7,5,-2,1,3,8,5,9,2,-5,-3,-9,8,5,-10,-9,-10,3,1,3,-5,5,-7,-7,4,-3,5,-5,3,-5,8,-2,-8,-2,10,7,6,-9,-6,2,-10,-6,-9,6,-3,-9,-6,-9,5,-7,7,-4,4,6,10,10,4,-5,-9,9,5,-10,8,-7,-3,1,8,2,9,-4,7,10,-3,8,-7,1,4,5,5,8,8,-7,-3,10,9,10,1,-7,5,4,2,-6,-9,10,-2,-1,8,-7,-8,-2,3,1,1,6,-3,2,8,-4,8,10,-4,2,-8,2,8,-3,7,-6,-3,-6,5,-4,5,-9,-5,5,-9,-1,8,2,-9,-8,8,5,-8,-8,9,7,3,7,6,-7,-8,3,4,-3,-10,-9,7,-10,5,8,-3,7,3,-3,-5,6,-1,-1,-4,-9,-5,3,-2,-7,-4,-8,1,10,-9,-5,-3,10,-1,8,3,-10,-6,10,-7,-3,-1,-7,-8,8,-9,-2,7,-8,-2,4,6,6,8,-9,3,7,5,-8,-10,-10,1,-3,5,7,-10,3,-6,9,6,-2,-10,-5,-2,9,1,-10,3,-3,7,-8,-2,4,-1,-5,-10,6,-5,-6,5,-6,7,1,1,2,3,-6,10,-4,-2,-6,5,4,-4,-4,10,-7,9,-8,-1,10,-10,-2,8,-9,-4,-5,-6,8,1,-1,5,-7,6,-7,-8,5,-5,8,3,-4,-2,-8,9,-10,-2,-1,-9,-1,6,3,5,1,3,3,-7,-6,7,-9,2,5,2,-10,4,5,-1,5,-4,-8,-8,-6,-8,-5,-6,9,8,3,2,3,7,10,-6,-6,3,-1,4,7,-10,7,9,-8,-2,8,-6,-3,-9,-5,-8,-7,-4,2,-8,8,-1,5,-2,8,-6,9,-7,9,7,-1,2,6,8,1,-6,3,-5,9,3,-1,-4,-3,5,5,5,-5,-5,2,-8,9,-4,-3,-1,6,8,5,8,-2,-1,4,-4,2,1,-5,8,7,4,-1,-10,1,4,1,5,6,-2,-1,-3,-8,-6,7,6,-6,-2,7,3,4,-7,1,10,-9,10,-9,-2,9,-9,-4,8,5,-6,-4,2,8,4,-1,-9,-7,2,-1,-2,-4], dtype = "int16")#candidate|9593|(448,)|const|int16
call_9592 = relay.TupleGetItem(func_7789_call(relay.reshape(const_9593.astype('int16'), [448,])), 3)
call_9594 = relay.TupleGetItem(func_7792_call(relay.reshape(const_9593.astype('int16'), [448,])), 3)
bop_9615 = relay.less(uop_9567.astype('bool'), relay.reshape(call_9579.astype('bool'), relay.shape_of(uop_9567))) # shape=(9, 132)
bop_9618 = relay.less(uop_9569.astype('bool'), relay.reshape(call_9580.astype('bool'), relay.shape_of(uop_9569))) # shape=(9, 132)
const_9624 = relay.const([[1.048104,6.797343,2.576293,-6.882306,-3.966717,8.059982,-6.816607,-9.007415,-2.623801,9.634583,7.531669,-4.187777,-5.589552,2.424361,-7.195088,-4.886891,-3.260410,-3.054166,-9.345641,-1.445102,1.163325,-8.994332,9.185299,5.368404,5.605622,1.963614,-8.588871,1.979449,5.602507,-4.410116,1.253059,-1.684418,-6.422601,3.399892,7.592800,-4.997547,7.536283,-6.384311,3.076549,5.033614,-3.903598,5.220692,-4.601149,8.503656,9.464194,2.683681,-8.052888,-8.377391,0.994731,7.343663,1.957275,4.891814,6.871052,-4.000256,4.430891,1.956627,-8.107108,0.043461,8.928230,0.421868,-0.424640,2.379440,-3.038964,-3.238521,1.459939,-9.593547,7.441710,-2.357616,-5.234112,4.242391,-9.934482,2.030083,-0.066739,7.723799,-8.700300,-4.649616,0.104475,2.585140,-6.324689,9.420207,-5.549295,-6.529458,-9.392247,-0.278349,5.886311,-0.567465,-4.949791,2.333233,-8.133332,7.974686,8.884912,-3.175555,3.335867,-9.858204,3.133330,-8.817221,4.672934,8.903689,8.895042,-3.067331,5.695330,-1.780087,2.628977,-6.657908,-1.623398,-7.451911,-6.180259,-8.109527,-0.300900,3.551714,6.528054,8.911680,-5.673619,-5.991333,-7.250704,1.348834,8.319844,-1.670991,6.726123,6.483628,-4.358894,6.575930,-2.231307,-4.559939,-8.508718,-8.185340,8.924572,-9.474212,-7.855164,8.293795,-3.254917,-0.529739],[-9.922937,-1.136488,-1.228973,5.348076,7.935006,1.512050,7.028590,-0.491058,0.074591,0.609755,0.614751,-8.587386,-9.971184,-4.368450,-7.037196,-1.078681,9.189844,-2.692566,-9.571175,-0.291961,-8.406634,2.215443,-1.824381,4.796992,-7.688517,-5.588338,0.430333,7.515011,9.824650,-1.938962,0.543656,-5.721571,7.208439,-7.050795,8.048191,2.492986,-9.158593,6.634020,-8.065279,-6.080308,2.426033,-2.480187,2.777303,-1.734088,-4.028569,9.787453,1.247543,-7.428514,-3.677886,2.204704,-6.953174,-5.755263,5.012506,5.247359,-2.497213,8.816275,-3.433766,-1.203911,7.762425,-2.094476,1.798362,5.880647,-6.347454,7.441184,-9.542307,-4.208154,9.528286,1.473705,-9.566848,4.505873,-8.478632,-9.134398,-7.349323,9.637576,7.790302,9.719281,0.162212,2.438182,6.241470,-5.345504,6.369003,-7.909674,7.635546,-7.537001,-4.201264,2.789216,-5.905408,2.729345,-8.249482,-4.038188,3.508274,7.151529,6.520591,-1.976492,3.921316,-1.294629,2.874619,-2.551026,9.399566,-0.601743,-1.274475,-3.163839,9.373212,6.301554,-0.794660,9.604105,-0.963694,-8.253651,6.121859,-3.082896,-0.616571,-2.518329,2.737461,-9.369020,2.402044,-2.028567,-6.024996,-1.219863,-9.161217,-6.286767,2.803466,-6.898573,-1.309682,9.305270,1.491772,-2.849135,7.185676,2.214872,2.610199,9.161317,-2.793550,-1.773585],[-9.215779,-7.587101,0.697385,-9.514363,-9.630898,-0.952353,7.831504,9.285381,0.599324,-3.237550,-8.048367,6.552080,-2.132967,-0.213325,-6.274294,9.187329,4.161500,4.828118,-5.331064,7.260937,5.443354,3.242679,-2.696489,7.929746,8.467378,-5.326964,-4.802675,2.427493,-5.449191,3.770006,6.889010,8.481009,7.371659,8.381907,-9.003323,-9.252197,-4.489005,7.586272,-6.337119,-5.141567,-8.601318,2.493582,-3.725406,9.369363,-5.710802,6.152447,-7.710492,-4.714825,2.565861,4.136702,7.841546,9.861112,-3.745199,-0.822369,-5.453914,-2.675622,6.323825,3.819602,-9.020057,-3.900603,1.420019,-8.315346,-1.483739,0.569334,-9.518690,-2.343189,2.719566,8.422655,-3.396652,-8.830938,-4.881027,3.404823,7.956402,8.887612,-8.676804,-4.720363,0.943350,2.349752,-8.161325,-4.599291,7.365790,-5.569605,-3.305461,-3.521865,7.979323,7.133022,5.794616,0.762892,0.209084,1.201054,-6.241550,-0.066916,-1.298874,5.977767,-9.803702,-3.636006,-3.336720,-7.832963,-7.590404,8.365576,-3.699505,-4.553542,-5.171604,-5.555331,-7.607068,6.220996,9.836720,5.988001,9.239889,-4.525400,-2.520258,4.682814,0.482106,5.801146,6.473003,4.005735,-2.776123,2.945609,0.537974,-1.001261,7.514755,-6.047720,0.484108,9.114142,5.853777,8.572509,-4.876710,-3.298922,-2.512626,2.491652,1.940267,7.303556],[-7.157398,-0.887782,-9.640477,-4.868056,-5.618379,9.368105,-9.026818,-7.604907,-1.265536,1.904831,-4.082497,8.716620,5.659080,-0.592670,4.868268,-1.276707,1.787714,-7.986644,-9.514782,7.253391,0.016803,-6.431846,8.942174,5.022136,-5.558704,-8.907684,0.997510,-5.992718,1.471030,2.635247,-2.882458,-8.098661,-2.432828,-0.064221,8.539890,8.352365,-1.948965,-5.467017,-9.292901,9.748146,-7.022566,8.561138,8.355922,7.309255,8.838159,-3.229824,-4.263576,1.116797,1.389798,1.418990,8.607985,5.157395,6.064811,-7.669785,-5.437384,-1.281220,2.942324,-0.352233,5.188637,6.402902,-2.711110,9.053016,7.020350,0.324043,-4.906679,3.511891,7.480649,1.872214,1.891003,-8.095524,7.598311,-0.255494,-4.334488,-1.507777,-4.939587,-8.416052,5.098729,-4.502901,-7.481607,9.758532,-5.762583,8.103125,4.159870,-3.847698,-8.870988,-8.972303,-7.253239,-6.877495,3.794502,-0.579322,6.878878,-0.624423,-2.508960,3.176177,-2.505438,2.203614,8.041466,-7.716999,4.913244,5.449939,7.494811,-3.392435,2.603294,7.650082,6.473848,-1.532927,-6.482136,3.424180,2.245845,-7.441620,8.564971,7.376623,-0.760622,7.532497,-7.703577,7.528809,6.775408,3.638869,-6.423313,7.871738,9.444194,-1.562848,2.343233,-9.620669,-7.482524,-3.608153,0.452706,4.593466,-5.894978,1.502804,3.000849,-0.783722],[-6.460618,3.414538,-8.537774,-1.767630,3.671748,-4.463391,-9.735644,9.544137,6.999191,-8.748181,3.046885,-1.022868,4.166833,4.488875,-4.718463,4.455877,3.690827,0.574220,4.296491,3.072257,6.516950,2.002255,8.338115,-8.918043,1.347066,3.952232,-1.755119,-4.418304,1.708847,6.681451,2.144832,0.377693,9.939418,1.451352,-5.571384,8.352700,-9.614835,-6.619026,-0.922519,-9.073476,1.775723,-8.713930,0.315916,3.028291,-4.396841,-7.188059,9.338729,0.421260,-7.119496,-5.915763,8.087894,-8.499718,-1.630955,6.664288,-7.409162,-9.637707,4.744915,4.891331,0.243029,-8.894118,6.494531,-3.065726,-7.769377,-0.665358,-3.719137,8.348633,-3.883320,5.611374,-9.266302,5.795536,-4.255383,3.170029,3.927462,-3.519550,1.219210,-9.059247,2.315050,-7.899826,-1.017962,-6.488588,4.729774,5.122801,-1.365241,-3.412765,2.504906,7.796354,-8.277633,-7.163021,2.576000,-9.638197,5.659255,-9.885083,9.707774,-7.089750,5.452177,-2.875192,-3.933140,-2.745704,-2.871237,-7.418237,4.534760,9.672038,-7.389036,9.170265,-7.713188,-1.764658,-2.734919,-5.920426,5.273738,-4.982389,-8.031867,9.360165,-1.127171,7.147083,6.244220,-6.371229,8.911247,-1.829940,7.610874,8.863831,7.403989,9.510131,-2.827886,-7.641232,-8.117781,-5.659752,5.078213,-7.706711,-2.453020,9.042781,4.691646,-2.353365],[5.147717,-6.083784,-0.062798,5.653042,1.874559,9.123603,-8.779722,-5.300974,-2.352652,5.767851,-8.364107,9.426419,4.650838,-9.897619,8.034864,0.840279,9.276360,2.016825,-1.394549,-4.210106,-0.292173,6.731765,6.968749,6.367382,7.882568,0.699198,-2.332034,-3.605569,0.663662,-5.244779,6.410861,-0.175568,1.748224,-5.820576,-3.046689,-5.372727,-5.877708,0.101734,8.408902,-3.456736,-5.146333,-7.802966,-1.318736,-3.695690,-4.548011,-6.785972,3.072698,-0.074208,3.548654,-2.179768,8.758959,-4.005123,-4.327170,1.677386,-1.008667,-2.703933,-4.749608,-4.935998,3.886857,-5.452966,7.202758,8.956322,1.045627,-9.442988,-0.197962,-7.592771,1.669577,-4.366976,2.770233,4.541934,7.288964,-0.668749,-7.107787,-4.797838,4.909822,0.189364,-9.861605,0.087245,1.275587,-9.825062,-7.477924,2.599358,0.783855,-4.903229,-4.106903,-8.566335,2.765324,1.875101,9.404097,-5.828228,-4.785282,-3.043276,-3.591001,3.964779,2.252813,-8.395355,-9.238472,1.185519,1.934860,-5.748225,6.991475,7.706216,7.458849,-0.516524,-0.205960,-1.518515,9.843508,3.788097,-1.526517,0.312094,-0.209802,-3.157934,5.302835,-3.306279,5.078709,-6.061698,-9.778759,4.456346,-9.274272,-6.470596,-9.221982,-6.963345,6.228250,-5.948729,-8.239166,3.296913,5.318971,6.355615,1.017525,8.982340,0.534990,1.334143],[9.451649,2.895334,7.062725,-3.714924,-8.123199,0.996766,2.923283,-2.073381,3.471487,-1.997730,5.223662,6.753543,-6.998498,4.234734,2.461754,9.874620,4.495167,-9.651320,-9.331420,6.854373,3.340748,4.068630,-4.509970,-0.010018,4.513239,-3.568550,2.359674,-4.512643,-0.446258,5.086486,-5.780433,-3.889224,6.126250,-0.007073,4.002608,5.734222,-0.041589,2.162000,-4.279002,-2.295919,7.108574,-5.866848,3.734694,-9.223554,-6.950806,2.011597,-8.478856,-1.318492,-9.415814,9.580474,-3.271211,2.912893,6.876983,9.488017,-1.210833,-3.984519,-3.762624,-2.322609,0.771233,9.095590,-8.101635,-3.771646,-2.805606,5.525081,-0.016240,1.760491,1.076301,3.680553,5.724583,-1.481663,3.032157,4.679954,5.805097,4.285087,-8.776420,-7.097463,7.386261,0.752950,1.459020,-7.941568,-3.833962,8.406377,-3.748017,-8.312648,4.593197,-3.582015,1.824217,1.049791,8.184410,2.123121,1.640754,3.837999,4.203805,8.257018,5.217528,-7.569787,2.369815,3.154708,-7.750179,0.218335,-1.923666,-6.046995,-4.235000,-8.415291,-6.911425,7.466400,6.218630,-6.687854,-0.224932,4.828181,-6.111295,3.364761,9.993949,9.129198,-8.653154,-3.189410,-5.529310,2.917578,-6.792184,0.322580,7.980799,-6.062405,9.999041,3.751389,-5.934166,8.775150,-9.137184,-8.962408,7.117897,-1.576642,9.767099,-2.391204],[1.612616,-6.326114,2.715691,3.137416,-1.208113,7.036722,-2.547381,7.361827,9.506021,1.056658,9.733403,-9.242566,-2.013087,5.598990,2.684421,2.917802,5.422658,-1.040756,6.863909,8.035029,0.345528,0.433199,-4.853542,4.059390,7.241257,8.865963,-6.823106,9.216778,-5.794281,-4.335455,-9.399727,9.256785,2.427848,-0.918907,7.287168,3.874855,-6.093789,-4.360586,7.298212,9.259090,1.626692,-8.251105,-5.216135,-7.364671,-3.716809,-8.729978,-3.879139,-1.638321,6.879993,4.151583,-8.737531,4.127700,9.743255,2.285890,9.548239,-9.612898,-1.661798,8.927469,-2.497886,5.583966,-3.941639,-0.850691,9.256294,0.883754,8.127671,7.499853,5.760353,8.463056,7.793842,0.128386,6.533052,8.907743,-7.888449,-9.610964,-7.625136,8.956716,0.155644,5.489820,-3.504250,0.648974,5.244001,-9.607990,9.305962,-5.206274,-8.125087,-6.173178,5.848372,8.307090,-7.599800,-7.408091,-2.195048,2.609102,8.312509,-1.770079,1.954611,-0.112461,7.307015,9.556061,-5.505758,9.813750,-4.697088,-4.009230,3.618636,7.349074,0.152303,-8.857860,-6.884616,2.978860,-5.044701,0.319652,2.888890,8.606922,-9.056436,6.527098,-3.205511,-5.991349,-9.360447,-2.874256,-5.589664,4.614718,8.005796,5.903958,-3.475075,-3.927381,3.832280,-8.131891,1.072069,1.448637,3.021447,-7.575117,3.327715,-7.455313],[7.510743,0.799535,-1.166280,8.731892,-8.699999,0.752410,9.651698,9.842149,-0.112759,6.930185,5.440386,0.823093,1.092107,-2.046522,-8.291275,3.154056,4.750650,-9.967178,5.739227,-7.393436,-9.984592,-4.741362,2.449047,-5.571274,-7.433477,1.546085,-3.332611,-9.174878,-1.500205,-5.967217,7.024375,-0.459483,-9.279535,-2.128744,-0.329172,6.532125,6.399653,-2.051947,-0.909367,-8.468927,-7.103018,-7.405675,-6.350049,-2.762185,-9.844209,-9.217786,-5.648104,-7.333048,7.763008,0.615021,0.146992,-0.304016,-2.183579,9.321272,-1.217702,2.924044,9.231457,2.139090,-2.173192,-5.075020,2.526260,-0.761130,8.425120,-6.814471,-4.847487,-8.729362,0.316316,-0.905478,1.137148,-5.732809,4.121621,-5.449749,6.874105,-0.041206,-9.368652,-4.935945,7.651627,5.711280,-3.036962,3.297684,8.430059,-7.628762,8.918321,3.650927,5.303438,-8.456571,7.576340,6.044637,-6.828564,7.294594,5.178459,-6.211644,-6.270686,9.074382,-6.795483,4.462447,7.366705,-8.265976,-9.205698,7.847514,2.120830,-2.227986,4.117563,9.146067,-0.580188,-2.010581,5.158635,-2.291727,-8.659508,-5.670609,4.921344,5.467265,5.730747,1.150896,4.260191,5.172875,-1.596093,2.721189,-8.812796,3.230276,0.357800,-8.423604,2.714771,3.452388,-6.741714,-8.572821,1.707991,-7.113720,8.900139,2.378440,8.542129,1.380333]], dtype = "float64")#candidate|9624|(9, 132)|const|float64
bop_9625 = relay.bitwise_xor(uop_9567.astype('uint16'), relay.reshape(const_9624.astype('uint16'), relay.shape_of(uop_9567))) # shape=(9, 132)
bop_9628 = relay.bitwise_xor(uop_9569.astype('uint16'), relay.reshape(const_9624.astype('uint16'), relay.shape_of(uop_9569))) # shape=(9, 132)
const_9632 = relay.const([[6,-7,-9,-5,-1,-7,5,-8,-6,-9,4,3,-10,1,4,5,-9,1,1,7,2,4,10,2,4,8,-7,-9,7,-6,7,3,4,-5,1,6,6,3,-1,-3,-6,-6,-3,2,6,-3,1,-8,-1,7,-7,-7,4,-10,-7,-1,-5,8,3,-5,9,-9,-3,3,-2,-8,-5,3,-5,4,5,4,4,5,1,-6,10,-9,4,9,-6,6,-1,1,-1,5,4,-5,9,-8,4,1,1,8,-5,3,3,-3,10,8,2,-9,-3,7,-8,4,-10,5,8,7,10,3,3,8,1,-7,1,1,2,-10,2,-10,1,-4,-9,-2,-2,2,2,-9,8,-8],[-3,5,-5,-4,10,-1,-1,10,5,7,-9,-3,9,-4,9,5,8,-7,-4,-4,-7,5,-10,-8,-9,4,-3,8,10,-8,3,1,3,6,9,2,-5,-5,-6,-9,7,-2,2,-4,-4,-3,6,-10,-4,-6,6,-10,-7,-7,-8,-7,-2,7,10,8,4,1,-5,-8,-7,1,-4,-8,8,3,2,10,10,-9,1,-4,-7,6,6,-3,10,-10,-7,-5,-2,10,8,-9,9,9,-3,6,10,6,-8,10,-4,-4,7,-7,-8,4,-7,6,-8,8,8,3,-8,3,-7,5,3,2,9,-2,6,-6,-8,-1,-5,-10,-2,10,-2,-5,-8,-10,-2,-3,-4,1],[-1,-5,7,-5,-2,9,8,6,-4,8,-3,-3,3,-7,10,-8,-3,8,-6,6,8,6,5,-3,-2,9,9,10,7,-10,-5,8,9,2,10,7,-3,1,2,-7,7,8,9,10,7,-2,8,2,7,5,2,-3,-3,-1,2,-7,-5,7,-7,9,-8,-6,-3,2,-2,7,-8,-9,7,-6,-7,10,-2,-5,5,-2,-6,-9,-9,-9,9,5,6,-8,3,4,9,-3,10,-9,-1,-7,-9,6,-7,-9,10,-4,7,1,-6,-1,6,7,3,10,6,10,6,-5,8,-9,-9,5,5,-7,1,-9,5,5,-1,-1,4,4,5,3,5,-4,-5,10,6,-4],[-9,-4,-6,-2,5,5,3,9,1,5,-4,-10,-9,2,2,-4,6,5,8,10,-9,3,6,-3,-4,5,-7,-10,7,-4,7,-10,-6,6,2,-5,2,-6,2,7,6,-5,-7,9,-6,-3,-1,-5,-7,10,8,2,-5,-8,6,4,-5,6,3,-6,-10,-1,9,7,8,7,3,6,8,7,-7,-7,-8,-6,8,-2,-8,-7,-3,-5,2,-7,-1,-2,-4,2,-8,6,10,10,4,6,7,1,8,8,-9,-4,7,9,5,-5,-8,2,4,8,4,-10,-7,-8,10,-4,3,9,-4,-3,8,3,-10,-8,6,2,7,-8,4,9,4,-3,9,-8,8,3],[9,4,2,-6,7,8,-2,8,6,10,-1,8,-4,-5,8,-8,6,8,3,8,-2,4,7,-9,-3,3,-3,6,-5,-10,2,2,10,-8,6,5,-4,-1,4,2,-1,1,-3,-1,-1,3,-9,-1,-7,-3,5,-8,-8,-8,10,-2,-4,-9,2,-7,-3,8,7,2,-8,-4,5,-2,2,-7,-9,-7,2,9,-6,-10,-9,10,10,8,6,-1,-4,6,-2,-2,4,3,5,-3,-10,-1,-3,-3,-2,-1,2,1,-6,4,2,8,-7,-3,2,-5,-10,1,7,6,-4,-8,-10,4,8,1,-6,-7,1,5,-9,-8,-7,2,-3,-3,-7,5,10,3,-9,-9],[5,-8,-7,10,5,4,-6,-6,-7,10,-10,1,-6,9,9,2,5,10,5,9,-9,4,1,6,8,4,-1,-7,9,4,-5,4,6,-3,6,-3,-7,8,-6,8,10,-2,-4,8,9,3,-8,-6,-1,-9,3,9,10,9,-2,2,6,-3,-4,-6,-4,-7,-4,-9,3,9,10,9,-5,-6,3,9,1,-10,4,8,-4,10,-1,2,-7,-4,-9,6,9,-3,1,2,5,-9,-9,-6,-5,9,-7,9,-2,-10,-6,-6,-10,7,-2,-5,2,-7,2,-4,-2,-10,5,-3,-4,9,9,5,6,-5,1,-7,-4,6,8,1,-2,-8,-2,-6,-4,-6,-2,-4],[-1,9,9,-8,10,8,-1,-7,2,2,6,10,-2,-5,-5,5,10,-1,9,3,-3,-5,-10,7,-10,5,6,-8,-2,-3,1,-7,1,9,7,-7,-3,-5,7,-6,-1,-2,6,5,2,7,5,4,1,-4,-5,7,3,10,3,8,-7,-3,2,-3,8,-8,3,9,-7,-10,-3,-2,-10,10,-8,-1,9,-10,-4,3,-2,-4,-7,8,-5,-8,-9,7,-3,-5,3,8,10,1,10,5,-9,6,10,-1,4,3,10,-3,7,5,-3,-4,-10,6,-10,-1,-8,6,3,-2,7,-10,-5,9,10,4,5,-6,-2,5,3,-5,-5,10,-10,-4,-10,-1,7,9],[-4,-9,-2,3,9,-7,6,-5,5,-10,10,2,-8,4,-3,-3,5,-5,8,2,8,10,-3,6,10,5,-9,7,7,5,4,6,-1,-6,-1,-6,8,-2,1,-1,1,9,2,-9,7,1,-5,1,-10,-7,-5,-7,-1,8,-6,-2,-4,8,7,4,-5,-5,4,6,-3,4,-8,-5,-1,-8,1,-3,-1,10,10,3,-1,-6,4,-8,7,-7,4,-1,-2,-1,10,-7,-6,-10,4,-4,4,1,-3,3,2,4,-1,-10,-5,5,6,-8,-2,1,-4,3,8,-3,3,-1,-7,1,-10,-10,-2,10,-10,10,-7,-10,-7,-8,-6,-6,-9,6,-3,-4,9,-10],[3,-1,-8,-5,-6,-7,-9,-8,6,-6,4,-8,2,-4,10,-4,-5,3,7,-10,4,-6,2,8,1,-10,-7,-3,-4,9,-10,4,7,-9,-7,7,-8,-4,8,-8,-7,1,-1,-4,1,7,-6,5,10,10,-4,-1,-10,3,-7,5,1,10,10,7,7,3,6,-7,-3,-6,-1,-9,1,9,7,4,1,2,-7,-5,2,8,-5,6,1,4,8,5,9,9,-7,6,8,9,6,10,1,7,2,-3,5,4,-5,5,2,-10,9,-7,3,-2,10,-6,-1,-7,6,7,9,7,2,-8,7,3,5,5,-8,6,1,10,-4,-9,9,2,-9,2,2,-6]], dtype = "uint16")#candidate|9632|(9, 132)|const|uint16
bop_9633 = relay.equal(bop_9625.astype('bool'), relay.reshape(const_9632.astype('bool'), relay.shape_of(bop_9625))) # shape=(9, 132)
bop_9636 = relay.equal(bop_9628.astype('bool'), relay.reshape(const_9632.astype('bool'), relay.shape_of(bop_9628))) # shape=(9, 132)
output = relay.Tuple([call_9519,call_9592,const_9593,bop_9615,bop_9633,])
output2 = relay.Tuple([call_9520,call_9594,const_9593,bop_9618,bop_9636,])
func_9637 = relay.Function([], output)
mod['func_9637'] = func_9637
mod = relay.transform.InferType()(mod)
mutated_mod['func_9637'] = func_9637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9637_call = mutated_mod.get_global_var('func_9637')
call_9638 = func_9637_call()
output = call_9638
func_9639 = relay.Function([], output)
mutated_mod['func_9639'] = func_9639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6617_call = mod.get_global_var('func_6617')
func_6618_call = mutated_mod.get_global_var('func_6618')
call_9658 = relay.TupleGetItem(func_6617_call(), 1)
call_9659 = relay.TupleGetItem(func_6618_call(), 1)
func_8433_call = mod.get_global_var('func_8433')
func_8434_call = mutated_mod.get_global_var('func_8434')
call_9664 = func_8433_call()
call_9665 = func_8433_call()
output = relay.Tuple([call_9658,call_9664,])
output2 = relay.Tuple([call_9659,call_9665,])
func_9715 = relay.Function([], output)
mod['func_9715'] = func_9715
mod = relay.transform.InferType()(mod)
output = func_9715()
func_9716 = relay.Function([], output)
mutated_mod['func_9716'] = func_9716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1508_call = mod.get_global_var('func_1508')
func_1509_call = mutated_mod.get_global_var('func_1509')
call_9725 = func_1508_call()
call_9726 = func_1508_call()
output = relay.Tuple([call_9725,])
output2 = relay.Tuple([call_9726,])
func_9730 = relay.Function([], output)
mod['func_9730'] = func_9730
mod = relay.transform.InferType()(mod)
output = func_9730()
func_9731 = relay.Function([], output)
mutated_mod['func_9731'] = func_9731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9637_call = mod.get_global_var('func_9637')
func_9639_call = mutated_mod.get_global_var('func_9639')
call_9788 = relay.TupleGetItem(func_9637_call(), 2)
call_9789 = relay.TupleGetItem(func_9639_call(), 2)
output = relay.Tuple([call_9788,])
output2 = relay.Tuple([call_9789,])
func_9792 = relay.Function([], output)
mod['func_9792'] = func_9792
mod = relay.transform.InferType()(mod)
mutated_mod['func_9792'] = func_9792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9792_call = mutated_mod.get_global_var('func_9792')
call_9793 = func_9792_call()
output = call_9793
func_9794 = relay.Function([], output)
mutated_mod['func_9794'] = func_9794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4681_call = mod.get_global_var('func_4681')
func_4683_call = mutated_mod.get_global_var('func_4683')
call_9797 = relay.TupleGetItem(func_4681_call(), 0)
call_9798 = relay.TupleGetItem(func_4683_call(), 0)
func_2340_call = mod.get_global_var('func_2340')
func_2342_call = mutated_mod.get_global_var('func_2342')
const_9824 = relay.const([1.443370,8.039268,-4.973975,5.458405,8.158079,-2.164207,-8.671705,-8.629695,-2.939594,-6.334608,-1.652297,5.468791,2.381530,-1.819733,-2.551066,1.354643,3.698676,8.239685,3.559975,6.871311,7.135363,-9.304602,-7.317580,5.535661,-0.634387,9.219703,-7.605353,-8.747524,3.042903,-3.658533,5.218424,8.075202,-7.785120,-7.767606,5.401527,0.687833,9.217992,5.778821,-4.453756,6.441712,-2.462837,-3.495810,3.537072,-5.712160,3.100501,-3.120954,-8.644089,8.464128,-9.874025,4.287909,-7.929061,-4.973505,-1.584744,9.515393,3.227965,9.306163,2.766349,-1.258479,7.173873,3.053385,3.883848,3.796285,-1.538478,-0.468560,-4.362590,-3.153781,-4.303473,-1.825175,-5.563530,-9.686118,-8.516184,4.925908,7.626253,6.752282,-2.340706,6.674818,-3.880195,-4.319168,-9.748260,-2.359663,-9.716330,0.409118,5.463997,3.863092,1.698655,1.791620,-1.494347,6.721882,-4.660232,-1.489217,0.494149,-8.636021,-2.141377,-0.849207,-6.454473,6.847818,-6.383007,4.749678,-5.526943,6.280122,-9.373595,-4.083842,-9.203325,-0.544968,-5.798239,3.310827,4.211646,2.477269,-7.242377,-4.870189,-8.160486,4.395566,-2.219911,4.763921,-0.503974,-5.789764,5.100928,6.725171,-4.466621,0.570177,-6.952552,-0.259148,-5.204086,1.291217,-1.784887,1.112137,7.406355,5.855254,-7.013501,-1.896639,1.399380,5.917144,1.283919,-3.854513,3.502928,-4.307929,4.970341,5.698095,5.375988,-2.971439,-3.325686,-8.562524,1.832936,9.158174,-8.444124,-5.672052,-7.145339,3.117290,-4.584630,3.131508,5.485912,1.337845,-6.330907,-7.264784,9.320538,9.194770,9.782503,9.581364,7.127285,-8.617320,-6.129825,-5.724922,-7.456701,2.770568,3.829825,-7.951442,-1.892578,4.144366,-1.180739,-3.025018,7.207387,2.703125,-6.943872,6.872403,9.452811,3.259298,-9.436405,-4.976492,0.155026,8.602984,-4.840333,7.488815,0.723921,-6.509437,7.783730,0.186437,-0.895928,6.285047,9.922574,8.698006,-1.008665,-1.553733,-5.592552,8.550039,-4.214149,-6.461993,6.851323,-2.497115,0.687416,-0.274439,6.086094,6.400859,2.755778,-3.087774,7.928521,9.113781,5.338567,-8.028935,9.804122,9.849627,-8.853467,-0.809811,-4.247558,-4.199445,1.415471,-9.217281,-5.688349,7.837331,-5.120908,-5.716353,1.837121,0.648024,6.631294,-4.754396,5.422570,3.966906,0.922168,9.598562,-7.505703,9.460072,8.939207,-6.197805,2.477220,5.936739,-5.006112,1.988282,0.480894,-6.518046,-3.212102,4.642713,-5.649716,3.390328,1.992931,7.616807,-5.140074,5.908542,-8.490733,9.422054,7.055721,9.688871,-8.945498,0.020776,6.265730,2.612646,-8.009588,-1.255869,7.380694,4.150148,-9.279075,-9.633797,4.009573,-9.443565,7.898710,-9.355709,-3.467969,-1.324836,-5.475617,9.201538,6.758903,-6.321177,4.427188,6.702982,-9.233419,3.593976,6.951925,-3.962240,-2.211399,0.294430,-0.860548,-2.934971,0.789438,-3.157362,7.639047,-2.516101,-9.914684,-9.003230,3.491906,-0.636993,-2.922526,-5.315964,6.640120,8.273191,-3.980955,2.003764,-8.252806,7.724125,4.234756,5.873169,2.719489,9.150247,-6.359157,-0.078026,7.756703,-2.634848,-6.556461,-5.336992,0.838114,8.608292,-8.612058,-5.305886,8.121372,-9.083373,4.446759,0.791631,2.307761,-9.667867,-3.789941,9.845249,0.223961,-7.299227,3.154989,3.974908,-4.164992,-4.302675,-4.460164,3.778502,-7.244797,-8.215125,1.276678,9.311889,-8.457853,8.305867,-3.165597,2.869314,-8.512596,5.781319,-0.244960,-1.613136,-6.689499,2.475068,6.415586,-9.719489,-8.987922,-4.321686,-2.697775,7.484780,3.101817,9.670659,7.023401,-2.518853,-0.763438,8.456928,-4.940130,1.716544,-8.494199,8.441428,3.635468,-2.761931,-4.955134,-1.722299,-9.839802,-2.927932,-5.973373,3.527133,-0.765627,9.959634,4.821140,6.784021,-6.944984,-0.589465,2.902208,-7.390712,7.202869,-4.577256,3.681428,-9.857631,-9.334005,-5.730983,7.151994,7.632225,1.621112,-6.690271,8.401604,-6.539941,3.852483,0.294731,4.560541,9.332368,-9.359421,-6.502005,-6.807111,3.084260,8.058372,9.899081,5.259992,-9.863002,0.062313,7.594643,-5.489411,-2.712752,9.811704,-3.144873,-7.844830,3.011223,-8.330007,-4.955441,9.045824,9.816617,9.829924,0.918146,7.523759,5.750785,-7.508129,-1.055536,7.094588,-7.256289,-0.360003,1.338247,7.812123,3.628013,-8.427544,-9.639924,0.371508,1.168207,8.464252,8.713024,-0.484232,5.030286,8.977296,-9.824757,7.081872,4.557258,1.101516,-0.110110,-6.290395,-2.209082,5.237908,-2.020465,7.597498,-8.017094,-1.533221,2.472690,-3.875433,9.189391,-8.848741,-2.278640,1.977343,3.578828,-3.636418,2.450258,8.378657,-9.130006,-9.362945,8.280323,-1.888459,-9.609582,0.024146,2.445228,3.612004,-0.468478,-3.255263,5.727086,-8.450941,7.658673,-4.523413,4.604303,-3.270877,-9.787875,-9.282078,-1.341361,5.937550,4.927352,9.385318,3.541454,-3.475653,-9.418604,-5.485567,-0.321125,2.095362,-3.692453,-6.489681,2.264730,9.674845,0.553608,-4.926572,-7.878350,3.307257,-9.464352,-0.006357,2.027124,6.504290,-0.893310,1.259745,0.279402,-8.344370,-4.655253,3.545904,4.801923,4.358508,1.287325,5.663432,-6.364732,4.825298,3.779295,-5.154079,-4.053288,-1.687948,1.176032,1.211721,-8.858518,-4.371762,-7.264812,0.556797,-3.287420,7.694505,-2.420836,9.034352,4.288047,2.475918,6.695255,4.989746,-9.189004,-7.636744,3.425948,-7.164696,2.686925,-3.476368,-5.363588,8.610401,-5.742409,-6.798962,6.657311,5.444973,2.728645,4.650414,-9.538200,-4.102557,0.211694,4.551662,8.743765,-7.358154,-7.980552,-5.446091,-4.408173,-4.517448,-9.506207,4.005572,-1.978213,-4.999926,-8.929543,-7.393613,-8.594110,9.243756,3.231532,-7.925094,-6.533206,5.546416,5.989969,8.414916,-8.301553,5.652483,2.539464,-7.271764,2.643746,6.456498,9.838362,2.279066,-3.689646,2.528082,9.104248,-9.927913,-0.240113,-4.348456,-3.953928,-0.250285,9.114476,7.584992,-7.573468,8.006401,7.635334,8.244514,-6.989873,-7.965009,3.091381,4.716935,-6.834076,-7.896027,0.682967,-5.058786,9.437913,-9.280509,-1.791937,0.635156,-0.141061,8.797165,8.004409,-4.212469,0.167168,-9.439771,-3.363919,7.758563,-6.486400,0.113949,-0.945158,9.050888,-6.122084,0.153737,6.748482,-4.579923,3.427472,3.058568,-8.122103,-0.401795,4.546136,9.424395,-9.361824,-3.058941,-2.758273,4.555488,6.472656,-8.256996,-4.130762,2.723279,-0.070034,5.998256,4.277138,-0.330566,-7.423115,8.081977,-7.716502,6.569583,7.538581,9.770294,-8.960586,-4.586482,0.394924,9.927886,-3.453386,3.697197,-6.312317,-1.186107,-5.770278,-8.335245,-4.927104,-8.595235,-8.789091,1.516784,4.022056,9.690836,2.739143,9.652084,4.529792,6.336263,1.439853,-1.811666,3.622602,0.244937,-2.998132,5.013629,1.722854,1.821326,0.315443,9.893717,6.614809,-0.203971,6.642740,3.631460,1.575991,-3.830977,4.133345,-5.254499,-6.837592,-9.861832,3.524020,6.082188,6.916201,-9.425630,8.962549,7.325758,6.841633,-5.766408,-6.143704,2.503601,-1.957222,-1.689563,-5.631216,-5.758687,5.209413,9.344462,-8.984671,8.006639,2.039330,2.745517,-9.358864,0.543151,-3.259470,-6.456639,6.279930,-9.304548,6.488547,-5.411220,-8.535291,-9.250498,4.300010,-7.549551,-6.383035,-0.904384,-4.434685,3.956266,-8.513338,-0.987469,-0.940344,9.157004,-6.824812,1.748835,0.141986,1.287633,-3.510113,7.965700,-7.741755,-6.001226,6.655692,-7.137154,-3.064271,-2.283539,9.047428,4.600221,6.751770,3.689550,1.592345,-3.095893,-3.420123,-8.620770,8.762586,1.778630,6.927298,8.777506,-8.136590,-2.720930,5.794827,7.711283,4.885937,-8.989326,-6.240724,-2.613379,-1.424190,-4.742738,4.430879,4.751368,-5.581094,-5.227247,-1.139190,-0.855302,8.229826,3.548995,-0.474994,3.022553,-8.923011,-1.942145,-6.958771,-3.355142,9.612513,3.643408,1.854364,-5.644891,7.779144,7.639632,-1.605069,-3.370127,6.544230,-7.999693,0.720407,6.863825,2.738796,-7.812798,5.531408,-8.027914,8.365527,9.508511,-4.302745,-1.132108,-2.276208,-6.851709,3.390317,-5.782132,-9.680893,-8.221938,4.853080,9.956008,-9.492150,-3.692928,-4.389820,-7.879611,-9.243532,-8.461792,9.249865,2.098013,4.892555,-5.720024,-5.029965,8.867153,3.849913,-1.007559,2.951987,4.435677,1.427278,2.300292,-7.975087,5.247900,2.784579,-5.364431,-3.759077,-0.982769,6.569129,3.124594,-6.875845,-5.622911,-2.180357,-2.098355,2.572486,6.038577,3.821900,-7.301750,5.294561,-5.375564,-2.188065,1.578981,-2.715385,-1.733369,2.495343,-1.394286,-4.174212,1.169311,6.161216,-7.162115,-3.145961,-5.002837,1.949593,5.991763,-7.755285,8.050770,-5.894602,-4.361892,5.536349,-7.443622,-9.241618,-8.729769,-8.323935,0.744089,0.160333,-1.769859,-1.044358,4.580240,9.473407,-6.641365,-2.844945,-1.791259,-9.448710,-5.527621,9.849394,-9.425486,8.735598,-4.330705,5.117625,8.914483,-9.623303,-3.787368,-5.172987,-4.819546,-4.563298,-0.800435,-6.720403,-7.651731,7.640566,-6.515103,0.134175,-3.708433,7.444013,-5.983810,-5.387867,0.434039,5.454982,0.868587,5.467398,-3.110507,-8.544029,4.208825,5.726781,-7.092925,-3.466790,-7.440561,3.709337,-2.937547,0.207113,6.323211,-1.989406,-4.807698,-1.787880,-0.444403,3.548841,-0.899168,3.562717,3.918411,1.933051,4.590091,-5.988600,9.138952,-4.976862,0.651462,4.227683,7.825774,2.882424,7.979327,-4.610919,-4.345394,-8.534605,4.970292,-9.008152,9.045835,-4.022518,7.497958,-7.190147,0.774851,-4.624214,-7.329261,7.702317,4.141753,-8.166164,1.966603,-0.554941,-9.057981,-3.555556,-5.984837,-0.430717,-5.844999,-4.134224,-0.804989,-8.037514,5.939547,-0.151304,-7.101212,-1.566130,-6.657787,2.645289,7.261302,1.964409,-9.356355,8.471390,-5.308987,-7.488331,7.951286,-9.826967,9.806799,6.809695,9.933930,7.346478,7.621967,-5.636413,-5.514587,7.669564,9.966115,6.952864,-0.739960,2.152319,2.181778,1.497750,-5.876816,-3.030509,4.857028,4.574937,6.182354,-2.185960,-6.950126,-6.605311,-0.796235,-3.205937,9.235825,-1.895828,-0.052448,-7.839191,1.295770,-0.148829,-7.938085,-6.626622,-6.834078,-5.546106,-9.860041,2.849929,0.306131,6.006756,0.261170,-3.676260,0.956376,0.961296,-1.317783,8.208313,6.166205,4.475476,-6.898132,2.715009,6.448935,-8.890435,6.801669,-1.834272,-0.123335,-1.118885,1.400850,-9.052967,7.609884,0.512577,4.054605,-2.778082,-5.654189,-1.116970,4.695857,-2.250510,-5.896592,-5.004016,-9.260793,-3.391709,-0.900105,-9.776051,0.029104,-1.186726,-0.682605,-7.022295,5.808661,9.856886,2.119067,-4.353804,5.660134,8.293259,-2.477768,2.571133,0.467307,8.542964,8.484327,1.673484,-6.439455,2.490935,5.024884,-4.477049,-6.547305,1.762988,-0.995064,-9.663280,-1.520310,7.684543,6.333775,8.828021,-9.342378,-7.953425,-3.243932,4.248159,-9.167808,-1.164791,-8.343716,-8.702035,-4.078156,-8.148263,0.558868,-8.437062,1.792199,-1.840800,6.530332,8.275759,-7.247234,6.184420,5.028755,2.690110,4.098215,-8.000139,1.693445,0.670013,-2.112494,-5.747755,-9.550535,4.444945,-7.656922,6.338772,3.207893,3.436128,-0.215112,-8.185459,2.973562,4.198418,5.142233,6.289153,-1.529455,-6.666981,-6.151416,4.025606,-3.917231,-4.404218,-3.958635,-0.458554,-0.763623,-9.045179,-3.960540,1.140898,-5.594944,-7.057256,-0.994604,-5.578316,-3.393368,2.542034,7.231871,-4.701922,1.929522,-4.609986,-6.117129,4.059445,3.978171,6.216592,-8.256066,3.294620,-7.411590,7.459306,1.917620,2.571236,-5.720343,6.401876,2.118888,2.398776,-8.213664,1.038662,-6.087484,-2.061770,-5.828282,2.871189,-9.758035,5.890289,2.056906,3.332433,4.914344,-0.571246,0.228230,9.410921,2.702692,1.250609,6.303433,-3.089443,1.760197,7.842670,8.950843,-8.880546,3.277902,-0.282231,-0.902708,-0.498734,-6.185762,-0.017839,-2.201708,2.045473,-4.346289,0.756716,0.275805,-4.131462,-4.798546,-1.431210,-2.670955,9.849043,-2.775579,-1.930341,5.486137,-0.280763,-0.952144,2.449857,5.115911,-3.348381,7.743826,0.326379,-0.058255,4.051506,5.431541,-9.527703,6.273822,7.472394,4.825077,-5.487820,-1.706561,-5.903582,8.880827,7.862308,-2.558952,1.572733,-8.678234,-0.401571], dtype = "float64")#candidate|9824|(1188,)|const|float64
call_9823 = relay.TupleGetItem(func_2340_call(relay.reshape(const_9824.astype('float64'), [12, 9, 11])), 1)
call_9825 = relay.TupleGetItem(func_2342_call(relay.reshape(const_9824.astype('float64'), [12, 9, 11])), 1)
func_8319_call = mod.get_global_var('func_8319')
func_8320_call = mutated_mod.get_global_var('func_8320')
call_9830 = relay.TupleGetItem(func_8319_call(), 0)
call_9831 = relay.TupleGetItem(func_8320_call(), 0)
uop_9832 = relay.cosh(call_9823.astype('float64')) # shape=(12, 9, 11)
uop_9834 = relay.cosh(call_9825.astype('float64')) # shape=(12, 9, 11)
func_5510_call = mod.get_global_var('func_5510')
func_5511_call = mutated_mod.get_global_var('func_5511')
call_9839 = relay.TupleGetItem(func_5510_call(), 0)
call_9840 = relay.TupleGetItem(func_5511_call(), 0)
output = relay.Tuple([call_9797,const_9824,call_9830,uop_9832,call_9839,])
output2 = relay.Tuple([call_9798,const_9824,call_9831,uop_9834,call_9840,])
func_9841 = relay.Function([], output)
mod['func_9841'] = func_9841
mod = relay.transform.InferType()(mod)
mutated_mod['func_9841'] = func_9841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9841_call = mutated_mod.get_global_var('func_9841')
call_9842 = func_9841_call()
output = call_9842
func_9843 = relay.Function([], output)
mutated_mod['func_9843'] = func_9843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6860_call = mod.get_global_var('func_6860')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_9937 = func_6860_call()
call_9938 = func_6860_call()
output = relay.Tuple([call_9937,])
output2 = relay.Tuple([call_9938,])
func_9941 = relay.Function([], output)
mod['func_9941'] = func_9941
mod = relay.transform.InferType()(mod)
mutated_mod['func_9941'] = func_9941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9941_call = mutated_mod.get_global_var('func_9941')
call_9942 = func_9941_call()
output = call_9942
func_9943 = relay.Function([], output)
mutated_mod['func_9943'] = func_9943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9956 = relay.var("var_9956", dtype = "uint8", shape = (9, 13, 3))#candidate|9956|(9, 13, 3)|var|uint8
const_9957 = relay.const([[[-7,-4,6],[-4,-4,-6],[6,-4,8],[3,-7,1],[-1,10,-6],[5,-5,-4],[6,5,3],[-8,1,-3],[-7,8,-9],[2,8,9],[4,7,-4],[2,9,9],[-1,10,6]],[[8,10,-7],[-8,8,-10],[-10,-2,8],[8,-5,9],[8,10,9],[-9,-9,-6],[-1,-7,10],[7,-6,7],[-6,-5,-3],[-4,2,6],[10,-2,-8],[7,-3,-8],[4,3,6]],[[-3,6,-3],[10,-9,-1],[-8,2,-10],[-8,-10,1],[-4,-5,4],[-8,6,-5],[-4,-6,9],[-9,6,7],[-2,5,8],[1,-3,-10],[2,4,-3],[-6,-3,-3],[10,1,3]],[[-4,-3,-10],[4,-4,10],[4,1,1],[-8,-2,-9],[-5,-6,5],[-4,-6,-7],[-9,-10,8],[4,-3,1],[-8,10,9],[-6,-8,-1],[-2,3,2],[-6,3,-2],[7,4,-1]],[[-3,3,1],[-5,-8,-9],[-8,-4,3],[-3,4,7],[6,2,-2],[-6,-3,10],[-4,-1,8],[1,-3,8],[-10,-6,-6],[10,5,-3],[-6,5,7],[3,8,4],[-6,-1,2]],[[6,10,-6],[-5,8,10],[-8,-10,6],[-6,-1,-3],[-2,1,-7],[-5,-5,-4],[-1,7,8],[1,-6,9],[-10,-10,-1],[5,-3,9],[9,2,-8],[5,5,9],[1,-1,10]],[[-8,-5,1],[-3,-3,5],[4,-7,10],[-5,5,6],[7,-1,-4],[-8,-3,-1],[1,3,8],[-8,-5,-3],[10,-7,1],[-8,-1,-5],[-2,-7,6],[-1,10,4],[5,-2,-9]],[[-3,-2,4],[6,-2,-3],[-3,-9,-1],[-6,5,8],[6,1,4],[-3,-9,-1],[-10,6,-5],[-8,1,-9],[-4,7,-3],[-9,10,8],[-10,-5,8],[3,-3,10],[8,-8,-5]],[[3,4,-9],[5,-9,-9],[-1,10,9],[9,7,-3],[-2,5,9],[-9,-1,2],[-3,7,-2],[-8,7,-8],[-5,-10,-9],[-9,1,-2],[-4,-5,-5],[5,4,9],[10,8,7]]], dtype = "uint8")#candidate|9957|(9, 13, 3)|const|uint8
bop_9958 = relay.bitwise_or(var_9956.astype('uint8'), relay.reshape(const_9957.astype('uint8'), relay.shape_of(var_9956))) # shape=(9, 13, 3)
func_1725_call = mod.get_global_var('func_1725')
func_1726_call = mutated_mod.get_global_var('func_1726')
call_9972 = relay.TupleGetItem(func_1725_call(), 0)
call_9973 = relay.TupleGetItem(func_1726_call(), 0)
uop_9975 = relay.atanh(bop_9958.astype('float64')) # shape=(9, 13, 3)
output = relay.Tuple([call_9972,uop_9975,])
output2 = relay.Tuple([call_9973,uop_9975,])
func_9981 = relay.Function([var_9956,], output)
mod['func_9981'] = func_9981
mod = relay.transform.InferType()(mod)
var_9982 = relay.var("var_9982", dtype = "uint8", shape = (9, 13, 3))#candidate|9982|(9, 13, 3)|var|uint8
output = func_9981(var_9982)
func_9983 = relay.Function([var_9982], output)
mutated_mod['func_9983'] = func_9983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7315_call = mod.get_global_var('func_7315')
func_7316_call = mutated_mod.get_global_var('func_7316')
call_9987 = relay.TupleGetItem(func_7315_call(), 5)
call_9988 = relay.TupleGetItem(func_7316_call(), 5)
output = call_9987
output2 = call_9988
func_9992 = relay.Function([], output)
mod['func_9992'] = func_9992
mod = relay.transform.InferType()(mod)
output = func_9992()
func_9993 = relay.Function([], output)
mutated_mod['func_9993'] = func_9993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_10015 = func_487_call()
call_10016 = func_487_call()
output = relay.Tuple([call_10015,])
output2 = relay.Tuple([call_10016,])
func_10017 = relay.Function([], output)
mod['func_10017'] = func_10017
mod = relay.transform.InferType()(mod)
mutated_mod['func_10017'] = func_10017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10017_call = mutated_mod.get_global_var('func_10017')
call_10018 = func_10017_call()
output = call_10018
func_10019 = relay.Function([], output)
mutated_mod['func_10019'] = func_10019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4361_call = mod.get_global_var('func_4361')
func_4362_call = mutated_mod.get_global_var('func_4362')
call_10036 = relay.TupleGetItem(func_4361_call(), 0)
call_10037 = relay.TupleGetItem(func_4362_call(), 0)
func_414_call = mod.get_global_var('func_414')
func_416_call = mutated_mod.get_global_var('func_416')
call_10063 = relay.TupleGetItem(func_414_call(), 2)
call_10064 = relay.TupleGetItem(func_416_call(), 2)
func_1874_call = mod.get_global_var('func_1874')
func_1878_call = mutated_mod.get_global_var('func_1878')
var_10070 = relay.var("var_10070", dtype = "int16", shape = (448,))#candidate|10070|(448,)|var|int16
call_10069 = relay.TupleGetItem(func_1874_call(relay.reshape(var_10070.astype('int16'), [14, 4, 8]), relay.reshape(var_10070.astype('int16'), [14, 4, 8]), ), 0)
call_10071 = relay.TupleGetItem(func_1878_call(relay.reshape(var_10070.astype('int16'), [14, 4, 8]), relay.reshape(var_10070.astype('int16'), [14, 4, 8]), ), 0)
output = relay.Tuple([call_10036,call_10063,call_10069,var_10070,])
output2 = relay.Tuple([call_10037,call_10064,call_10071,var_10070,])
func_10084 = relay.Function([var_10070,], output)
mod['func_10084'] = func_10084
mod = relay.transform.InferType()(mod)
var_10085 = relay.var("var_10085", dtype = "int16", shape = (448,))#candidate|10085|(448,)|var|int16
output = func_10084(var_10085)
func_10086 = relay.Function([var_10085], output)
mutated_mod['func_10086'] = func_10086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5991_call = mod.get_global_var('func_5991')
func_5993_call = mutated_mod.get_global_var('func_5993')
call_10155 = relay.TupleGetItem(func_5991_call(), 0)
call_10156 = relay.TupleGetItem(func_5993_call(), 0)
output = relay.Tuple([call_10155,])
output2 = relay.Tuple([call_10156,])
func_10165 = relay.Function([], output)
mod['func_10165'] = func_10165
mod = relay.transform.InferType()(mod)
mutated_mod['func_10165'] = func_10165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10165_call = mutated_mod.get_global_var('func_10165')
call_10166 = func_10165_call()
output = call_10166
func_10167 = relay.Function([], output)
mutated_mod['func_10167'] = func_10167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1803_call = mod.get_global_var('func_1803')
func_1805_call = mutated_mod.get_global_var('func_1805')
call_10170 = relay.TupleGetItem(func_1803_call(), 1)
call_10171 = relay.TupleGetItem(func_1805_call(), 1)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_10177 = relay.TupleGetItem(func_3046_call(), 0)
call_10178 = relay.TupleGetItem(func_3048_call(), 0)
func_487_call = mod.get_global_var('func_487')
func_488_call = mutated_mod.get_global_var('func_488')
call_10179 = func_487_call()
call_10180 = func_487_call()
output = relay.Tuple([call_10170,call_10177,call_10179,])
output2 = relay.Tuple([call_10171,call_10178,call_10180,])
func_10203 = relay.Function([], output)
mod['func_10203'] = func_10203
mod = relay.transform.InferType()(mod)
mutated_mod['func_10203'] = func_10203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10203_call = mutated_mod.get_global_var('func_10203')
call_10204 = func_10203_call()
output = call_10204
func_10205 = relay.Function([], output)
mutated_mod['func_10205'] = func_10205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8051_call = mod.get_global_var('func_8051')
func_8053_call = mutated_mod.get_global_var('func_8053')
call_10213 = func_8051_call()
call_10214 = func_8051_call()
output = call_10213
output2 = call_10214
func_10238 = relay.Function([], output)
mod['func_10238'] = func_10238
mod = relay.transform.InferType()(mod)
output = func_10238()
func_10239 = relay.Function([], output)
mutated_mod['func_10239'] = func_10239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3789_call = mod.get_global_var('func_3789')
func_3791_call = mutated_mod.get_global_var('func_3791')
call_10246 = func_3789_call()
call_10247 = func_3789_call()
func_602_call = mod.get_global_var('func_602')
func_603_call = mutated_mod.get_global_var('func_603')
call_10289 = func_602_call()
call_10290 = func_602_call()
func_1386_call = mod.get_global_var('func_1386')
func_1390_call = mutated_mod.get_global_var('func_1390')
var_10318 = relay.var("var_10318", dtype = "float64", shape = (18, 66))#candidate|10318|(18, 66)|var|float64
var_10319 = relay.var("var_10319", dtype = "float32", shape = (182, 6))#candidate|10319|(182, 6)|var|float32
call_10317 = relay.TupleGetItem(func_1386_call(relay.reshape(var_10318.astype('float64'), [12, 9, 11]), relay.reshape(var_10319.astype('float32'), [1092,]), ), 5)
call_10320 = relay.TupleGetItem(func_1390_call(relay.reshape(var_10318.astype('float64'), [12, 9, 11]), relay.reshape(var_10319.astype('float32'), [1092,]), ), 5)
func_8319_call = mod.get_global_var('func_8319')
func_8320_call = mutated_mod.get_global_var('func_8320')
call_10323 = relay.TupleGetItem(func_8319_call(), 1)
call_10324 = relay.TupleGetItem(func_8320_call(), 1)
func_8974_call = mod.get_global_var('func_8974')
func_8975_call = mutated_mod.get_global_var('func_8975')
call_10330 = relay.TupleGetItem(func_8974_call(), 1)
call_10331 = relay.TupleGetItem(func_8975_call(), 1)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_10345 = relay.TupleGetItem(func_6175_call(), 0)
call_10346 = relay.TupleGetItem(func_6177_call(), 0)
output = relay.Tuple([call_10246,call_10289,call_10317,var_10318,var_10319,call_10323,call_10330,call_10345,])
output2 = relay.Tuple([call_10247,call_10290,call_10320,var_10318,var_10319,call_10324,call_10331,call_10346,])
func_10355 = relay.Function([var_10318,var_10319,], output)
mod['func_10355'] = func_10355
mod = relay.transform.InferType()(mod)
mutated_mod['func_10355'] = func_10355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10355_call = mutated_mod.get_global_var('func_10355')
var_10357 = relay.var("var_10357", dtype = "float64", shape = (18, 66))#candidate|10357|(18, 66)|var|float64
var_10358 = relay.var("var_10358", dtype = "float32", shape = (182, 6))#candidate|10358|(182, 6)|var|float32
call_10356 = func_10355_call(var_10357,var_10358,)
output = call_10356
func_10359 = relay.Function([var_10357,var_10358,], output)
mutated_mod['func_10359'] = func_10359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10407 = relay.var("var_10407", dtype = "float64", shape = (11, 15, 4))#candidate|10407|(11, 15, 4)|var|float64
uop_10408 = relay.cos(var_10407.astype('float64')) # shape=(11, 15, 4)
output = uop_10408
output2 = uop_10408
F = relay.Function([var_10407,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10407,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

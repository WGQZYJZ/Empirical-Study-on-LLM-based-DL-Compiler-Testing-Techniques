==========mod==========
#[version = "0.0.5"]
def @func_9242(%var_9218: Tensor[(16, 11, 15), float64], %var_9232: Tensor[(35), float32]) -> (Tensor[(16, 11, 15), int16], Tensor[(6, 7, 11), float32], Tensor[(35), float32], Tensor[(2160), float64]) {
  %0 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
  %1 = cast(%var_9218, dtype="int16") /* ty=Tensor[(16, 11, 15), int16] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int16") /* ty=Tensor[(16, 11, 15), int16] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %5 = cast(%var_9232, dtype="float32") /* ty=Tensor[(35), float32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %7 = reshape(%5, newshape=[35]) /* ty=Tensor[(35), float32] */;
  %8 = reshape(%6, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %9 = @func_5354(%7, %8) /* ty=(Tensor[(60), float64], Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(35), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */;
  %10 = add(%3, %4) /* ty=Tensor[(16, 11, 15), int16] */;
  %11 = %9.1;
  (%10, %11, %var_9232, meta[relay.Constant][0] /* ty=Tensor[(2160), float64] */)
}

def @func_5822(%var_5817: Tensor[(60), float64]) -> (Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) {
  %12 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %13 = %12.0;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 11, 15), float64] */, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %18 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %20 = cast(meta[relay.Constant][3] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %21 = cast(%var_5817, dtype="float64") /* ty=Tensor[(60), float64] */;
  %22 = reshape(%19, newshape=[7, 6, 6]) /* ty=Tensor[(7, 6, 6), float32] */;
  %23 = reshape(%20, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %24 = reshape(%21, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %25 = @func_1095(%22, %23, %24) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */;
  %26 = minimum(%16, %17) /* ty=Tensor[(16, 11, 15), uint8] */;
  %27 = %18.1;
  %28 = %25.2;
  (%26, %27, %28, meta[relay.Constant][2] /* ty=Tensor[(252), float32] */, meta[relay.Constant][3] /* ty=Tensor[(2730), bool] */, %var_5817)
}

def @func_11213() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32]) {
  %29 = cast(meta[relay.Constant][4] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %30 = reshape(%29, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
  %31 = @func_2506(%30) /* ty=(Tensor[(7, 2, 5), float32],) */;
  %32 = @func_7794() /* ty=Tensor[(60), float64] */;
  %33 = %31.0;
  (%32, %33, meta[relay.Constant][4] /* ty=Tensor[(70), float32] */)
}

def @func_5522() -> Tensor[(16, 11, 15), float64] {
  @func_5416() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_7372() -> (Tensor[(16, 11, 15), float64],) {
  %34 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
  (%34,)
}

def @func_5450() -> Tensor[(16, 11, 15), float64] {
  %35 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %35.0
}

def @func_6292(%var_6289: float64) -> (Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) {
  %36 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %37 = cast(%var_6289, dtype="float64") /* ty=float64 */;
  %38 = cast(meta[relay.Constant][5] /* ty=Tensor[(245), float64] */, dtype="float64") /* ty=Tensor[(245), float64] */;
  %39 = reshape(%37, newshape=[]) /* ty=float64 */;
  %40 = reshape(%38, newshape=[7, 5, 7]) /* ty=Tensor[(7, 5, 7), float64] */;
  %41 = @func_4499(%39, %40) /* ty=(Tensor[(7, 5, 7), float64], Tensor[(260), float64], Tensor[(2700, 1), int64]) */;
  %42 = %36.1;
  %43 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
  %44 = %41.0;
  (%42, %43, %44, %var_6289, meta[relay.Constant][5] /* ty=Tensor[(245), float64] */)
}

def @func_9961(%var_9947: Tensor[(2688), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(14, 12, 16), float32], Tensor[(2688), float32]) {
  %45 = cast(%var_9947, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %46 = reshape(%45, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), float32] */;
  %47 = @func_8750(%46) /* ty=(Tensor[(14, 12, 16), float32],) */;
  %48 = @func_9306() /* ty=Tensor[(16, 11, 15), float64] */;
  %49 = %47.0;
  (%48, %49, %var_9947)
}

def @func_7231() -> (Tensor[(16, 11, 15), float64],) {
  %50 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
  %51 = %50.0;
  (%51,)
}

def @func_7488() -> (Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) {
  %52 = @func_5502() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */;
  %53 = cast(meta[relay.Constant][6] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %54 = cast(meta[relay.Constant][7] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %55 = %52.1;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(60), float64] */;
  %57 = reshape(%53, newshape=[7, 6, 6]) /* ty=Tensor[(7, 6, 6), float32] */;
  %58 = reshape(%54, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %59 = reshape(%56, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %60 = @func_1095(%57, %58, %59) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */;
  %61 = cast(meta[relay.Constant][8] /* ty=Tensor[(56, 12), float64] */, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
  %62 = reshape(%61, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %63 = @func_5137(%62) /* ty=(Tensor[(60), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(16, 11, 15), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(1, 8, 8), float32], float64, Tensor[(5, 1), float64], Tensor[(64), int32]) */;
  %64 = cast(meta[relay.Constant][9] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %65 = cast(meta[relay.Constant][9] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %66 = reshape(%64, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %67 = reshape(%65, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %68 = @func_1170(%66, %67) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %69 = %60.3;
  %70 = %63.1;
  %71 = @func_4743() /* ty=Tensor[(60), float64] */;
  %72 = %68.0;
  (%55, %69, meta[relay.Constant][6] /* ty=Tensor[(252), float32] */, meta[relay.Constant][7] /* ty=Tensor[(2730), bool] */, %70, meta[relay.Constant][8] /* ty=Tensor[(56, 12), float64] */, %71, %72, meta[relay.Constant][9] /* ty=Tensor[(1728), uint16] */)
}

def @func_9102() -> (Tensor[(16, 11, 15), float64],) {
  %73 = @func_7372() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %74 = %73.0;
  (%74,)
}

def @func_6912() -> Tensor[(16, 11, 15), float64] {
  %75 = @func_6670() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %75.0
}

def @func_10255(%var_10219: float64) -> (Tensor[(16, 11, 15), float32], Tensor[(7, 5, 7), float64], float64) {
  %76 = @func_9333() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(60), float64]) */;
  %77 = cast(%var_10219, dtype="float64") /* ty=float64 */;
  %78 = reshape(%77, newshape=[]) /* ty=float64 */;
  %79 = @func_6292(%78) /* ty=(Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) */;
  %80 = %76.0;
  %81 = %79.2;
  (%80, %81, %var_10219)
}

def @func_4499(%var_4469: float64, %var_4470: Tensor[(7, 5, 7), float64]) -> (Tensor[(7, 5, 7), float64], Tensor[(260), float64], Tensor[(2700, 1), int64]) {
  %82 = cast(%var_4469, dtype="float64") /* ty=float64 */;
  %83 = cast(%var_4470, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
  %84 = power(%82, %83) /* ty=Tensor[(7, 5, 7), float64] */;
  %85 = cast(%var_4470, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %89 = cast(meta[relay.Constant][10] /* ty=Tensor[(2700, 1), int64] */, dtype="int64") /* ty=Tensor[(2700, 1), int64] */;
  %90 = cast(meta[relay.Constant][10] /* ty=Tensor[(2700, 1), int64] */, dtype="int64") /* ty=Tensor[(2700, 1), int64] */;
  %91 = cast(meta[relay.Constant][10] /* ty=Tensor[(2700, 1), int64] */, dtype="int8") /* ty=Tensor[(2700, 1), int8] */;
  %92 = reshape(%89, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %93 = reshape(%90, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %94 = reshape(%91, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
  %95 = @func_3341(%92, %93, %94) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %96 = floor_mod(%87, %88) /* ty=Tensor[(7, 5, 7), float64] */;
  %97 = %95.2;
  (%96, %97, meta[relay.Constant][10] /* ty=Tensor[(2700, 1), int64] */)
}

def @func_4566() -> (Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %98 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %99 = reshape(%98, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %100 = @func_84(%99) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %101 = @func_4308() /* ty=Tensor[(16, 11, 15), float64] */;
  %102 = %100.0;
  (%101, %102, meta[relay.Constant][11] /* ty=Tensor[(60), float64] */)
}

def @func_1801(%var_1787: Tensor[(16, 9, 15), float64], %var_1788: Tensor[(16, 9, 15), float64]) -> (Tensor[(16, 9, 15), float64],) {
  %103 = cast(%var_1788, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %104 = shape_of(%var_1787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_1787, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %107 = subtract(%105, %106) /* ty=Tensor[(16, 9, 15), float64] */;
  (%107,)
}

def @func_7526() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float32], Tensor[(245), float64], float64, Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  %108 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %109 = @func_7325() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */;
  %110 = %109.1;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %112 = cast(6.64745f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %113 = reshape(%112, newshape=[]) /* ty=float64 */;
  %114 = @func_6292(%113) /* ty=(Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) */;
  %115 = @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */;
  %116 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
  %117 = %108.0;
  %118 = exp(%111) /* ty=Tensor[(16, 11, 15), float32] */;
  %119 = %114.4;
  %120 = %115.1;
  %121 = %116.0;
  (%117, %118, %119, 6.64745f64 /* ty=float64 */, %120, %121)
}

def @func_11380() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  %122 = @func_11000() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(672), float64]) */;
  %123 = @func_9178() /* ty=Tensor[(60), float64] */;
  %124 = %122.0;
  (%123, %124)
}

def @func_5137(%var_5120: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(16, 11, 15), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(1, 8, 8), float32], float64, Tensor[(5, 1), float64], Tensor[(64), int32]) {
  %125 = @func_4790() /* ty=(Tensor[(60), float64],) */;
  %126 = cast(meta[relay.Constant][12] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %127 = cast(meta[relay.Constant][12] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %128 = %125.0;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(60), float64] */;
  %130 = reshape(%126, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %131 = reshape(%127, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %132 = reshape(%129, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %133 = @func_790(%130, %131, %132) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %134 = @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */;
  %135 = cast(%var_5120, dtype="float64") /* ty=Tensor[(672), float64] */;
  %136 = reshape(%135, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float64] */;
  %137 = @func_1745(%136) /* ty=(Tensor[(6, 16, 7), float64],) */;
  %138 = cast(-2.28324f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %139 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 1), float64] */;
  %140 = cast(meta[relay.Constant][14] /* ty=Tensor[(64), int32] */, dtype="int32") /* ty=Tensor[(64), int32] */;
  %141 = cast(%var_5120, dtype="float64") /* ty=Tensor[(672), float64] */;
  %142 = cast(meta[relay.Constant][12] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %143 = cast(%128, dtype="float64") /* ty=Tensor[(60), float64] */;
  %144 = reshape(%138, newshape=[]) /* ty=float64 */;
  %145 = reshape(%139, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %146 = reshape(%140, newshape=[64]) /* ty=Tensor[(64), int32] */;
  %147 = reshape(%141, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %148 = reshape(%142, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %149 = reshape(%143, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %150 = @func_4174(%144, %145, %146, %147, %148, %149) /* ty=(Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) */;
  %151 = %133.1;
  %152 = %134.0;
  %153 = %137.0;
  %154 = %150.12;
  (%128, %151, meta[relay.Constant][12] /* ty=Tensor[(2730), bool] */, %152, %153, %var_5120, %154, -2.28324f64 /* ty=float64 */, meta[relay.Constant][13] /* ty=Tensor[(5, 1), float64] */, meta[relay.Constant][14] /* ty=Tensor[(64), int32] */)
}

def @func_8524(%var_8507: Tensor[(16, 1, 5), float64]) -> (Tensor[(16, ?, 5), float64],) {
  %155 = cast(%var_8507, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %156 = sin(%155) /* ty=Tensor[(16, 1, 5), float64] */;
  %157 = cast(%var_8507, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %158 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%156, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %161 = add(%159, %160) /* ty=Tensor[(16, ?, 5), float64] */;
  (%161,)
}

def @func_11187() -> (Tensor[(16, 11, 15), float64], Tensor[(14, 12, 2), float64], Tensor[(336), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) {
  %162 = cast(meta[relay.Constant][15] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %163 = cast(meta[relay.Constant][16] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %164 = reshape(%162, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), float64] */;
  %165 = reshape(%163, newshape=[1728]) /* ty=Tensor[(1728), uint16] */;
  %166 = @func_9573(%164, %165) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(1728), uint16], Tensor[(1728), uint16]) */;
  %167 = @func_10824() /* ty=Tensor[(16, 11, 15), float64] */;
  %168 = %166.0;
  %169 = @func_9609() /* ty=Tensor[(16, 11, 15), float64] */;
  (%167, %168, meta[relay.Constant][15] /* ty=Tensor[(336), float64] */, meta[relay.Constant][16] /* ty=Tensor[(1728), uint16] */, %169)
}

def @func_5014() -> (Tensor[(16, 11, 15), float64],) {
  %170 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %171 = %170.0;
  (%171,)
}

def @func_3566(%var_3542: Tensor[(8, 8, 1), int32], %var_3550: Tensor[(672), float64]) -> (Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(8, 8, 2), float32]) {
  %172 = cast(%var_3550, dtype="float64") /* ty=Tensor[(672), float64] */;
  %173 = reshape(%172, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float64] */;
  %174 = @func_1745(%173) /* ty=(Tensor[(6, 16, 7), float64],) */;
  %175 = cast(%var_3542, dtype="int32") /* ty=Tensor[(8, 8, 1), int32] */;
  %176 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 8, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 8, 2), int32] */;
  %177 = bitwise_xor(%175, %176) /* ty=Tensor[(8, 8, 2), int32] */;
  %178 = cast(%177, dtype="float32") /* ty=Tensor[(8, 8, 2), float32] */;
  %179 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(8, 8, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 8, 2), int32] */, dtype="float32") /* ty=Tensor[(8, 8, 2), float32] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %182 = %174.0;
  %183 = mod(%180, %181) /* ty=Tensor[(8, 8, 2), float32] */;
  (%182, %var_3550, %183)
}

def @func_5354(%var_5317: Tensor[(35), float32], %var_5337: Tensor[(2160), float64]) -> (Tensor[(60), float64], Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(35), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) {
  %184 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %185 = cast(%var_5317, dtype="float32") /* ty=Tensor[(35), float32] */;
  %186 = cast(meta[relay.Constant][18] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %187 = reshape(%185, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), float32] */;
  %188 = reshape(%186, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %189 = @func_5058(%187, %188) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(?, 5, 7), float32]) */;
  %190 = cast(%var_5317, dtype="float32") /* ty=Tensor[(35), float32] */;
  %191 = cast(%var_5337, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %192 = cast(%var_5337, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %193 = reshape(%191, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %194 = reshape(%192, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %195 = @func_1801(%193, %194) /* ty=(Tensor[(16, 9, 15), float64],) */;
  %196 = %184.2;
  %197 = %189.0;
  %198 = atanh(%190) /* ty=Tensor[(35), float32] */;
  %199 = %195.0;
  (%196, %197, meta[relay.Constant][18] /* ty=Tensor[(462), float32] */, %198, %199, %var_5337)
}

def @func_5073(%var_5067: Tensor[(14, 4, 9), uint64], %var_5068: Tensor[(14, 4, 9), uint64]) -> Tensor[(14, 4, 9), uint64] {
  %200 = cast(%var_5068, dtype="uint64") /* ty=Tensor[(14, 4, 9), uint64] */;
  %201 = shape_of(%var_5067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%var_5067, dtype="uint64") /* ty=Tensor[(14, 4, 9), uint64] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%202, %203) /* ty=Tensor[(14, 4, 9), uint64] */
}

def @func_5564() -> (Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) {
  %204 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %205 = cast(meta[relay.Constant][19] /* ty=Tensor[(189), int64] */, dtype="int64") /* ty=Tensor[(189), int64] */;
  %206 = reshape(%205, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), int64] */;
  %207 = @func_3845(%206) /* ty=Tensor[(9, 7, 3), int64] */;
  %208 = cast(%207, dtype="uint64") /* ty=Tensor[(9, 7, 3), uint64] */;
  %209 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(189), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %210 = cast(meta[relay.Constant][19] /* ty=Tensor[(189), int64] */, dtype="uint64") /* ty=Tensor[(189), uint64] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %212 = %204.0;
  %213 = bitwise_and(%210, %211) /* ty=Tensor[(189), uint64] */;
  (%212, %213)
}

def @func_661(%var_656: Tensor[(1, 8, 8), float32]) -> (Tensor[(1, 8, 8), float32],) {
  %214 = cast(%var_656, dtype="float32") /* ty=Tensor[(1, 8, 8), float32] */;
  %215 = tan(%214) /* ty=Tensor[(1, 8, 8), float32] */;
  (%215,)
}

def @func_9882(%var_9804: Tensor[(24, 26), int8]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(8, 13, 6), int8], Tensor[(24, 26), int8], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(1728), uint16]) {
  %216 = @func_4790() /* ty=(Tensor[(60), float64],) */;
  %217 = cast(meta[relay.Constant][20] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %218 = reshape(%217, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %219 = @func_661(%218) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %220 = cast(%var_9804, dtype="int8") /* ty=Tensor[(24, 26), int8] */;
  %221 = cast(meta[relay.Constant][21] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %222 = cast(meta[relay.Constant][21] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %223 = reshape(%220, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), int8] */;
  %224 = reshape(%221, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %225 = reshape(%222, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %226 = @func_3253(%223, %224, %225) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */;
  %227 = @func_7231() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %228 = cast(meta[relay.Constant][22] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %229 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(1728), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %230 = cast(meta[relay.Constant][21] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %232 = %216.0;
  %233 = @func_6912() /* ty=Tensor[(16, 11, 15), float64] */;
  %234 = %219.0;
  %235 = %226.0;
  %236 = @func_6666() /* ty=Tensor[(16, 11, 15), float64] */;
  %237 = %227.0;
  %238 = left_shift(%230, %231) /* ty=Tensor[(1728), uint16] */;
  (%232, %233, %234, meta[relay.Constant][20] /* ty=Tensor[(64), float32] */, %235, %var_9804, %236, %237, %238)
}

def @func_3253(%var_3230: Tensor[(8, 13, 6), int8], %var_3236: Tensor[(2, 864), uint16], %var_3238: Tensor[(2, 864), uint16]) -> (Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) {
  %239 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 13, 6), int8] */, dtype="int8") /* ty=Tensor[(8, 13, 6), int8] */;
  %240 = shape_of(%var_3230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_3230, dtype="int8") /* ty=Tensor[(8, 13, 6), int8] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %243 = cast(%var_3236, dtype="uint16") /* ty=Tensor[(2, 864), uint16] */;
  %244 = cast(%var_3236, dtype="uint16") /* ty=Tensor[(2, 864), uint16] */;
  %245 = reshape(%243, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %246 = reshape(%244, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %247 = @func_1170(%245, %246) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %248 = cast(%var_3238, dtype="uint64") /* ty=Tensor[(2, 864), uint64] */;
  %249 = shape_of(%var_3236, dtype="int32") /* ty=Tensor[(2), int32] */;
  %250 = cast(%var_3236, dtype="uint64") /* ty=Tensor[(2, 864), uint64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %252 = left_shift(%241, %242) /* ty=Tensor[(8, 13, 6), int8] */;
  %253 = %247.0;
  %254 = bitwise_and(%250, %251) /* ty=Tensor[(2, 864), uint64] */;
  (%252, %253, %254)
}

def @func_4677() -> (Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) {
  %255 = cast(meta[relay.Constant][24] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %256 = reshape(%255, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
  %257 = @func_443(%256) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
  %258 = @func_4308() /* ty=Tensor[(16, 11, 15), float64] */;
  %259 = %257.1;
  (%258, %259, meta[relay.Constant][24] /* ty=Tensor[(260), float64] */)
}

def @func_6670() -> (Tensor[(16, 11, 15), float64],) {
  %260 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
  (%260,)
}

def @func_10354() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  %261 = @func_9916() /* ty=Tensor[(60), float64] */;
  %262 = @func_6912() /* ty=Tensor[(16, 11, 15), float64] */;
  (%261, %262)
}

def @func_9916() -> Tensor[(60), float64] {
  @func_7003() /* ty=Tensor[(60), float64] */
}

def @func_9609() -> Tensor[(16, 11, 15), float64] {
  @func_5416() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_11103(%var_11093: int64) -> (Tensor[(13, 4, 9), int64],) {
  %263 = cast(%var_11093, dtype="int64") /* ty=int64 */;
  %264 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 4, 9), int64] */, dtype="int64") /* ty=Tensor[(13, 4, 9), int64] */;
  %265 = right_shift(%263, %264) /* ty=Tensor[(13, 4, 9), int64] */;
  (%265,)
}

def @func_3341(%var_3301: Tensor[(15, 15, 12), int64], %var_3302: Tensor[(15, 15, 12), int64], %var_3317: Tensor[(15, 15, 12), int8]) -> (Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %266 = cast(%var_3301, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
  %267 = shape_of(%var_3302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%var_3302, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %270 = left_shift(%268, %269) /* ty=Tensor[(15, 15, 12), int8] */;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(15, 15, 12), float64] */;
  %272 = cast(meta[relay.Constant][26] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %273 = reshape(%272, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
  %274 = @func_443(%273) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
  %275 = cast(%var_3317, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
  %276 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%270, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %279 = cast(%var_3302, dtype="bool") /* ty=Tensor[(15, 15, 12), bool] */;
  %280 = shape_of(%var_3301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%var_3301, dtype="bool") /* ty=Tensor[(15, 15, 12), bool] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %283 = equal(%281, %282) /* ty=Tensor[(15, 15, 12), bool] */;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(15, 15, 12), float64] */;
  %285 = cast(meta[relay.Constant][27] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %286 = reshape(%285, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %287 = @func_84(%286) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %288 = acos(%271) /* ty=Tensor[(15, 15, 12), float64] */;
  %289 = %274.0;
  %290 = maximum(%277, %278) /* ty=Tensor[(15, 15, 12), int8] */;
  %291 = erf(%284) /* ty=Tensor[(15, 15, 12), float64] */;
  %292 = %287.0;
  (%288, %289, meta[relay.Constant][26] /* ty=Tensor[(260), float64] */, %290, %291, %292, meta[relay.Constant][27] /* ty=Tensor[(60), float64] */)
}

def @func_10724(%var_10711: Tensor[(5), float64]) -> (Tensor[(16, 7, 3), float32], Tensor[(336), int32], Tensor[(16, 11, 15), float32], Tensor[(189), uint64], Tensor[(60), float64], Tensor[(5), float64], Tensor[(13650), bool]) {
  %293 = cast(meta[relay.Constant][28] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %294 = reshape(%293, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), int32] */;
  %295 = @func_10354() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */;
  %296 = %295.1;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %298 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
  %299 = cast(%var_10711, dtype="float64") /* ty=Tensor[(5), float64] */;
  %300 = cast(meta[relay.Constant][29] /* ty=Tensor[(13650), bool] */, dtype="bool") /* ty=Tensor[(13650), bool] */;
  %301 = reshape(%299, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %302 = reshape(%300, newshape=[2730, 5]) /* ty=Tensor[(2730, 5), bool] */;
  %303 = @func_4598(%301, %302) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) */;
  %304 = @func_4229(%294) /* ty=Tensor[(16, 7, 3), float32] */;
  %305 = acosh(%297) /* ty=Tensor[(16, 11, 15), float32] */;
  %306 = %298.1;
  %307 = %303.8;
  (%304, meta[relay.Constant][28] /* ty=Tensor[(336), int32] */, %305, %306, %307, %var_10711, meta[relay.Constant][29] /* ty=Tensor[(13650), bool] */)
}

def @func_9178() -> Tensor[(60), float64] {
  %308 = @func_7488() /* ty=(Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */;
  %308.6
}

def @func_6606() -> Tensor[(16, 11, 15), float64] {
  %309 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  log10(%310) /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_11142() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  %311 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
  %312 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
  %313 = @func_6606() /* ty=Tensor[(16, 11, 15), float64] */;
  (%311, %312, %313)
}

def @func_9269(%var_9258: Tensor[(5), float64], %var_9259: Tensor[(13650), bool]) -> (Tensor[(16, 11, 15), float64], float64, Tensor[(5), float64], Tensor[(13650), bool], Tensor[(252), float32], Tensor[(60, 1), float64]) {
  %314 = cast(%var_9258, dtype="float64") /* ty=Tensor[(5), float64] */;
  %315 = cast(%var_9259, dtype="bool") /* ty=Tensor[(13650), bool] */;
  %316 = reshape(%314, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %317 = reshape(%315, newshape=[2730, 5]) /* ty=Tensor[(2730, 5), bool] */;
  %318 = @func_4598(%316, %317) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) */;
  %319 = cast(meta[relay.Constant][30] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %320 = reshape(%319, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %321 = @func_5822(%320) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %322 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
  %323 = %318.4;
  %324 = %321.3;
  (%322, %323, %var_9258, %var_9259, %324, meta[relay.Constant][30] /* ty=Tensor[(60, 1), float64] */)
}

def @func_2506(%var_2503: Tensor[(7, 2, 5), float32]) -> (Tensor[(7, 2, 5), float32],) {
  %325 = cast(%var_2503, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %326 = asin(%325) /* ty=Tensor[(7, 2, 5), float32] */;
  (%326,)
}

def @func_4795() -> (Tensor[(16, 11, 15), float64],) {
  %327 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %328 = %327.0;
  (%328,)
}

def @func_8078() -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  %329 = @func_7231() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %330 = %329.0;
  %331 = @func_7406() /* ty=Tensor[(60), float64] */;
  (%330, %331)
}

def @func_7104() -> (Tensor[(60), float64],) {
  %332 = @func_5502() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */;
  %333 = %332.1;
  (%333,)
}

def @func_7651() -> (Tensor[(9, 7, 3), float64],) {
  %334 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %335 = %334.1;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(9, 7, 3), float64] */;
  %337 = atan(%336) /* ty=Tensor[(9, 7, 3), float64] */;
  (%337,)
}

def @func_7003() -> Tensor[(60), float64] {
  %338 = @func_4790() /* ty=(Tensor[(60), float64],) */;
  %338.0
}

def @func_8270() -> Tensor[(16, 11, 15), float64] {
  @func_7822() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_7869() -> (Tensor[(9, 7, 3), float64],) {
  %339 = @func_7651() /* ty=(Tensor[(9, 7, 3), float64],) */;
  %340 = %339.0;
  (%340,)
}

def @func_5935(%var_5923: Tensor[(12, 8, 15), int8], %var_5924: Tensor[(12, 8, 15), int8]) -> Tensor[(12, 8, 15), bool] {
  %341 = cast(%var_5924, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %342 = shape_of(%var_5923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_5923, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%343, %344) /* ty=Tensor[(12, 8, 15), bool] */
}

def @func_5911(%var_5887: bool, %var_5888: Tensor[(13, 2, 13), bool], %var_5900: Tensor[(60, 1), float64]) -> (Tensor[(13, 2, 13), bool], Tensor[(60), float64], Tensor[(60, 1), float64]) {
  %345 = cast(%var_5887, dtype="bool") /* ty=bool */;
  %346 = cast(%var_5888, dtype="bool") /* ty=Tensor[(13, 2, 13), bool] */;
  %347 = cast(%var_5900, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %348 = reshape(%347, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %349 = @func_5822(%348) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %350 = logical_or(%345, %346) /* ty=Tensor[(13, 2, 13), bool] */;
  %351 = %349.2;
  (%350, %351, %var_5900)
}

def @func_443(%var_418: Tensor[(13, 5, 4), float64]) -> (Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) {
  %352 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 1, 4), float64] */, dtype="bool") /* ty=Tensor[(13, 1, 4), bool] */;
  %353 = cast(%var_418, dtype="bool") /* ty=Tensor[(13, 5, 4), bool] */;
  %354 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 1, 4), float64] */, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
  %355 = not_equal(%352, %353) /* ty=Tensor[(13, 5, 4), bool] */;
  %356 = asin(%354) /* ty=Tensor[(13, 1, 4), float32] */;
  (%355, %356)
}

def @func_9205(%var_9201: Tensor[(7, 11, 3), float64]) -> (Tensor[(7, 11, 3), float64],) {
  %357 = cast(%var_9201, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %358 = sinh(%357) /* ty=Tensor[(7, 11, 3), float64] */;
  (%358,)
}

def @func_3632(%var_3626: Tensor[(312, 2), int8]) -> (Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) {
  %359 = cast(meta[relay.Constant][32] /* ty=Tensor[(10, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
  %360 = cast(%var_3626, dtype="int8") /* ty=Tensor[(312, 2), int8] */;
  %361 = cast(meta[relay.Constant][33] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %362 = cast(meta[relay.Constant][33] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %363 = reshape(%360, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), int8] */;
  %364 = reshape(%361, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %365 = reshape(%362, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %366 = @func_3253(%363, %364, %365) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */;
  %367 = exp(%359) /* ty=Tensor[(10, 6, 11), float32] */;
  %368 = %366.1;
  (%367, %368, %var_3626, meta[relay.Constant][33] /* ty=Tensor[(1728), uint16] */)
}

def @func_5692(%var_5628: Tensor[(1728), uint16]) -> (Tensor[(189), uint64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) {
  %369 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
  %370 = cast(%var_5628, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %371 = cast(%var_5628, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %372 = reshape(%370, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %373 = reshape(%371, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %374 = @func_1170(%372, %373) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %375 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %377 = %369.1;
  %378 = %374.2;
  %379 = log2(%376) /* ty=Tensor[(16, 11, 15), float64] */;
  (%377, %378, %var_5628, %379)
}

def @func_1745(%var_1734: Tensor[(6, 16, 7), float64]) -> (Tensor[(6, 16, 7), float64],) {
  %380 = cast(%var_1734, dtype="float64") /* ty=Tensor[(6, 16, 7), float64] */;
  %381 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(6, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 16, 7), float64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %384 = power(%382, %383) /* ty=Tensor[(6, 16, 7), float64] */;
  (%384,)
}

def @func_2888(%var_2861: Tensor[(7, 7, 7), float32], %var_2862: Tensor[(7, 7, 7), float32]) -> (Tensor[(7, 7, 7), float32], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) {
  %385 = cast(%var_2862, dtype="float32") /* ty=Tensor[(7, 7, 7), float32] */;
  %386 = shape_of(%var_2861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_2861, dtype="float32") /* ty=Tensor[(7, 7, 7), float32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %389 = cast(meta[relay.Constant][35] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %390 = reshape(%389, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %391 = @func_661(%390) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %392 = subtract(%387, %388) /* ty=Tensor[(7, 7, 7), float32] */;
  %393 = %391.0;
  (%392, %393, meta[relay.Constant][35] /* ty=Tensor[(64), float32] */)
}

def @func_8000(%var_7973: Tensor[(5, 14, 13), float64]) -> Tensor[(5, 14, 13), bool] {
  %394 = cast(%var_7973, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %395 = rsqrt(%394) /* ty=Tensor[(5, 14, 13), float64] */;
  %396 = cast(%var_7973, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%398, %399) /* ty=Tensor[(5, 14, 13), bool] */
}

def @func_4622(%var_4610: float64) -> (Tensor[(10, 15, 3), float32],) {
  %400 = cast(%var_4610, dtype="float64") /* ty=float64 */;
  %401 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 15, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 15, 3), float64] */;
  %402 = floor_mod(%400, %401) /* ty=Tensor[(10, 15, 3), float64] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %404 = atanh(%403) /* ty=Tensor[(10, 15, 3), float32] */;
  (%404,)
}

def @func_6854() -> Tensor[(16, 11, 15), float64] {
  @func_5416() /* ty=Tensor[(16, 11, 15), float64] */
}

def @main() -> Tensor[(16, 11, 15), float32] {
  %405 = @func_9102() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  atanh(%407) /* ty=Tensor[(16, 11, 15), float32] */
}

def @func_8207(%var_8191: Tensor[(5, 3, 8), uint64], %var_8192: Tensor[(5, 3, 8), uint64]) -> Tensor[(5, 3, 8), bool] {
  %408 = cast(%var_8192, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %409 = shape_of(%var_8191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_8191, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%410, %411) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_1170(%var_1147: Tensor[(16, 12, 9), uint16], %var_1148: Tensor[(16, 12, 9), uint16]) -> (Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %412 = cast(%var_1148, dtype="uint16") /* ty=Tensor[(16, 12, 9), uint16] */;
  %413 = shape_of(%var_1147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_1147, dtype="uint16") /* ty=Tensor[(16, 12, 9), uint16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %416 = left_shift(%414, %415) /* ty=Tensor[(16, 12, 9), uint16] */;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(16, 12, 9), float64] */;
  %418 = cast(meta[relay.Constant][37] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %419 = reshape(%418, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %420 = @func_84(%419) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %421 = erf(%417) /* ty=Tensor[(16, 12, 9), float64] */;
  %422 = %420.0;
  (%421, %422, meta[relay.Constant][37] /* ty=Tensor[(60), float64] */)
}

def @func_9036(%var_9010: Tensor[(64), float32]) -> (Tensor[(60), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) {
  %423 = @func_7046() /* ty=(Tensor[(60), float64],) */;
  %424 = cast(%var_9010, dtype="float32") /* ty=Tensor[(64), float32] */;
  %425 = reshape(%424, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %426 = @func_661(%425) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %427 = %423.0;
  %428 = %426.0;
  (%427, %428, %var_9010)
}

def @func_6666() -> Tensor[(16, 11, 15), float64] {
  @func_5450() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_6387() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float32]) {
  %429 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %430 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %432 = %429.0;
  %433 = asin(%431) /* ty=Tensor[(16, 11, 15), float32] */;
  (%432, %433)
}

def @func_4266() -> (Tensor[(16, 11, 15), float64],) {
  %434 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %435 = erf(%434) /* ty=Tensor[(16, 11, 15), float64] */;
  (%435,)
}

def @func_9992() -> Tensor[(16, 11, 15), float64] {
  %436 = @func_4677() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) */;
  %436.0
}

def @func_10738() -> (Tensor[(60), float64],) {
  %437 = @func_7104() /* ty=(Tensor[(60), float64],) */;
  %438 = %437.0;
  (%438,)
}

def @func_10874() -> (Tensor[(16, 11, 15), float64],) {
  %439 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
  (%439,)
}

def @func_10647(%var_10630: Tensor[(880), float32]) -> (Tensor[(60), float64], Tensor[(13, 1, 4), float64], Tensor[(?, 880), bool], Tensor[(16, 11, 15), float64]) {
  %440 = @func_9724() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) */;
  %441 = cast(%var_10630, dtype="float32") /* ty=Tensor[(880), float32] */;
  %442 = reshape(%441, newshape=[1, 880]) /* ty=Tensor[(1, 880), float32] */;
  %443 = @func_8380(%442) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(10, 15, 3), float32], float64, Tensor[(16, 11, 15), float64], Tensor[(1, 880), float64]) */;
  %444 = %443.4;
  %445 = cast(%var_10630, dtype="bool") /* ty=Tensor[(880), bool] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(2), int32] */;
  %447 = cast(%444, dtype="bool") /* ty=Tensor[(1, 880), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %449 = @func_7003() /* ty=Tensor[(60), float64] */;
  %450 = %440.1;
  %451 = not_equal(%447, %448) /* ty=Tensor[(?, 880), bool] */;
  %452 = @func_7822() /* ty=Tensor[(16, 11, 15), float64] */;
  (%449, %450, %451, %452)
}

def @func_9739(%var_9730: Tensor[(16, 8, 13), int64]) -> Tensor[(16, 8, 13), int64] {
  %453 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 8, 13), int64] */, dtype="int64") /* ty=Tensor[(16, 8, 13), int64] */;
  %454 = shape_of(%var_9730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%var_9730, dtype="int64") /* ty=Tensor[(16, 8, 13), int64] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%455, %456) /* ty=Tensor[(16, 8, 13), int64] */
}

def @func_10142() -> Tensor[(56, 12), float64] {
  %457 = @func_7488() /* ty=(Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */;
  %457.5
}

def @func_3845(%var_3835: Tensor[(9, 7, 3), int64]) -> Tensor[(9, 7, 3), int64] {
  %458 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 7, 3), int64] */, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
  %459 = shape_of(%var_3835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%var_3835, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%460, %461) /* ty=Tensor[(9, 7, 3), int64] */
}

def @func_8883(%var_8856: Tensor[(8, 3, 15), uint64]) -> (Tensor[(8, 3, 15), uint64],) {
  %462 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 3, 15), uint64] */, dtype="uint64") /* ty=Tensor[(8, 3, 15), uint64] */;
  %463 = shape_of(%var_8856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_8856, dtype="uint64") /* ty=Tensor[(8, 3, 15), uint64] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %466 = bitwise_or(%464, %465) /* ty=Tensor[(8, 3, 15), uint64] */;
  (%466,)
}

def @func_8021() -> Tensor[(16, 11, 15), float32] {
  %467 = @func_7325() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */;
  %467.0
}

def @func_6824(%var_6802: Tensor[(880), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  %468 = cast(%var_6802, dtype="float32") /* ty=Tensor[(880), float32] */;
  %469 = cast(%var_6802, dtype="float32") /* ty=Tensor[(880), float32] */;
  %470 = cast(meta[relay.Constant][42] /* ty=Tensor[(1080, 2), float64] */, dtype="float64") /* ty=Tensor[(1080, 2), float64] */;
  %471 = cast(meta[relay.Constant][43] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %472 = cast(meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %473 = reshape(%468, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
  %474 = reshape(%469, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
  %475 = reshape(%470, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %476 = reshape(%471, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %477 = reshape(%472, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %478 = @func_2853(%473, %474, %475, %476, %477) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) */;
  %479 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
  %480 = %478.0;
  %481 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
  (%479, %480, %var_6802, meta[relay.Constant][42] /* ty=Tensor[(1080, 2), float64] */, meta[relay.Constant][43] /* ty=Tensor[(2730), bool] */, meta[relay.Constant][44] /* ty=Tensor[(60), float64] */, %481)
}

def @func_4200(%var_4186: Tensor[(15, 5, 7), int64]) -> (Tensor[(15, 5, 7), int64], Tensor[(16, 12, 9), float64], Tensor[(624), int8]) {
  %482 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 5, 7), int64] */, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %483 = shape_of(%var_4186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_4186, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %486 = cast(meta[relay.Constant][46] /* ty=Tensor[(624), int8] */, dtype="int8") /* ty=Tensor[(624), int8] */;
  %487 = reshape(%486, newshape=[312, 2]) /* ty=Tensor[(312, 2), int8] */;
  %488 = @func_3632(%487) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */;
  %489 = logical_xor(%484, %485) /* ty=Tensor[(15, 5, 7), int64] */;
  %490 = %488.1;
  (%489, %490, meta[relay.Constant][46] /* ty=Tensor[(624), int8] */)
}

def @func_790(%var_766: Tensor[(14, 13, 15), bool], %var_767: Tensor[(14, 13, 15), bool], %var_780: Tensor[(60), float64]) -> (Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %491 = cast(%var_767, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
  %492 = shape_of(%var_766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_766, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %495 = logical_and(%493, %494) /* ty=Tensor[(14, 13, 15), bool] */;
  %496 = cast(%var_766, dtype="int32") /* ty=Tensor[(14, 13, 15), int32] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%495, dtype="int32") /* ty=Tensor[(14, 13, 15), int32] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %500 = cast(%495, dtype="float64") /* ty=Tensor[(14, 13, 15), float64] */;
  %501 = cast(%var_780, dtype="float64") /* ty=Tensor[(60), float64] */;
  %502 = reshape(%501, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %503 = @func_84(%502) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %504 = logical_xor(%498, %499) /* ty=Tensor[(14, 13, 15), int32] */;
  %505 = exp(%500) /* ty=Tensor[(14, 13, 15), float64] */;
  %506 = %503.0;
  (%504, %505, %506, %var_780)
}

def @func_6743(%var_6738: Tensor[(6, 13, 5), float64]) -> (Tensor[(6, 13, 5), float64],) {
  %507 = cast(%var_6738, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %508 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(6, 13, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %511 = add(%509, %510) /* ty=Tensor[(6, 13, 5), float64] */;
  (%511,)
}

def @func_9187() -> (Tensor[(16, 11, 15), float32],) {
  %512 = @func_7325() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */;
  %513 = %512.0;
  (%513,)
}

def @func_7822() -> Tensor[(16, 11, 15), float64] {
  @func_6606() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_7142(%var_7111: Tensor[(504), uint64]) -> (Tensor[(16, 11, 15), float64], Tensor[(14, 4, 9), uint64], Tensor[(504), uint64], Tensor[(60), float64]) {
  %514 = cast(%var_7111, dtype="uint64") /* ty=Tensor[(504), uint64] */;
  %515 = cast(%var_7111, dtype="uint64") /* ty=Tensor[(504), uint64] */;
  %516 = reshape(%514, newshape=[14, 4, 9]) /* ty=Tensor[(14, 4, 9), uint64] */;
  %517 = reshape(%515, newshape=[14, 4, 9]) /* ty=Tensor[(14, 4, 9), uint64] */;
  %518 = @func_7104() /* ty=(Tensor[(60), float64],) */;
  %519 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
  %520 = @func_5073(%516, %517) /* ty=Tensor[(14, 4, 9), uint64] */;
  %521 = %518.0;
  (%519, %520, %var_7111, %521)
}

def @func_10406(%var_10395: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(672), float64], Tensor[(16, 11, 15), float64]) {
  %522 = @func_10028() /* ty=(Tensor[(60), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %523 = cast(%var_10395, dtype="float64") /* ty=Tensor[(672), float64] */;
  %524 = reshape(%523, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %525 = @func_6455(%524) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %526 = @func_7372() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %527 = %522.0;
  %528 = %525.1;
  %529 = %526.0;
  (%527, %528, %var_10395, %529)
}

def @func_9500() -> (Tensor[(16, 12, 9), float64],) {
  %530 = @func_7740() /* ty=(Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */;
  %531 = %530.1;
  (%531,)
}

def @func_10092(%var_10072: Tensor[(880), float32], %var_10073: Tensor[(2160), float64]) -> (Tensor[(16, 11, 15), float64], Tensor[(2160), float64], Tensor[(880), float32], Tensor[(2160), float64], Tensor[(910, 3), bool], Tensor[(60), float64]) {
  %532 = @func_9667() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %533 = cast(%var_10072, dtype="float32") /* ty=Tensor[(880), float32] */;
  %534 = cast(%var_10072, dtype="float32") /* ty=Tensor[(880), float32] */;
  %535 = cast(%var_10073, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %536 = cast(meta[relay.Constant][48] /* ty=Tensor[(910, 3), bool] */, dtype="bool") /* ty=Tensor[(910, 3), bool] */;
  %537 = cast(meta[relay.Constant][49] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %538 = reshape(%533, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
  %539 = reshape(%534, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
  %540 = reshape(%535, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %541 = reshape(%536, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %542 = reshape(%537, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %543 = @func_2853(%538, %539, %540, %541, %542) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) */;
  %544 = %532.0;
  %545 = %543.2;
  (%544, %545, %var_10072, %var_10073, meta[relay.Constant][48] /* ty=Tensor[(910, 3), bool] */, meta[relay.Constant][49] /* ty=Tensor[(60), float64] */)
}

def @func_5255(%var_5236: Tensor[(70), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(60), float64]) {
  %546 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %547 = cast(%var_5236, dtype="float32") /* ty=Tensor[(70), float32] */;
  %548 = reshape(%547, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
  %549 = @func_2506(%548) /* ty=(Tensor[(7, 2, 5), float32],) */;
  %550 = %546.0;
  %551 = %549.0;
  %552 = @func_4743() /* ty=Tensor[(60), float64] */;
  (%550, %551, %var_5236, %552)
}

def @func_4743() -> Tensor[(60), float64] {
  %553 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %553.2
}

def @func_8258() -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(3, 10, 2), float64]) {
  %554 = cast(meta[relay.Constant][50] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %555 = cast(meta[relay.Constant][50] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %556 = reshape(%554, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %557 = reshape(%555, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %558 = @func_1170(%556, %557) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %559 = cast(meta[relay.Constant][50] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %560 = cast(meta[relay.Constant][50] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %561 = reshape(%559, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %562 = reshape(%560, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %563 = @func_1170(%561, %562) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %564 = @func_7794() /* ty=Tensor[(60), float64] */;
  %565 = %558.2;
  %566 = %563.1;
  (%564, %565, meta[relay.Constant][50] /* ty=Tensor[(1728), uint16] */, %566)
}

def @func_4434(%var_4395: Tensor[(4, 1, 13), uint16], %var_4396: Tensor[(4, 15, 13), uint16], %var_4413: Tensor[(4, 15, 13), uint16], %var_4426: Tensor[(4, 15, 13), uint16]) -> (Tensor[(4, 15, 13), int64], Tensor[(4, 15, 13), float64]) {
  %567 = cast(%var_4413, dtype="int64") /* ty=Tensor[(4, 15, 13), int64] */;
  %568 = shape_of(%var_4396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%var_4396, dtype="int64") /* ty=Tensor[(4, 15, 13), int64] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %571 = cast(%var_4395, dtype="uint16") /* ty=Tensor[(4, 1, 13), uint16] */;
  %572 = cast(%var_4396, dtype="uint16") /* ty=Tensor[(4, 15, 13), uint16] */;
  %573 = add(%571, %572) /* ty=Tensor[(4, 15, 13), uint16] */;
  %574 = cast(%var_4426, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%573, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %578 = subtract(%569, %570) /* ty=Tensor[(4, 15, 13), int64] */;
  %579 = mod(%576, %577) /* ty=Tensor[(4, 15, 13), float64] */;
  (%578, %579)
}

def @func_10824() -> Tensor[(16, 11, 15), float64] {
  %580 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %581 = %580.0;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  acos(%582) /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_11000() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(672), float64]) {
  %583 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %584 = cast(meta[relay.Constant][51] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %585 = reshape(%584, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %586 = @func_6455(%585) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %587 = %583.0;
  %588 = %586.2;
  (%587, %588, meta[relay.Constant][51] /* ty=Tensor[(672), float64] */)
}

def @func_4229(%var_4209: Tensor[(16, 7, 3), int32]) -> Tensor[(16, 7, 3), float32] {
  %589 = cast(%var_4209, dtype="int32") /* ty=Tensor[(16, 7, 3), int32] */;
  %590 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(16, 7, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 7, 3), int32] */, dtype="int32") /* ty=Tensor[(16, 7, 3), int32] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %593 = subtract(%591, %592) /* ty=Tensor[(16, 7, 3), int32] */;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
  log(%594) /* ty=Tensor[(16, 7, 3), float32] */
}

def @func_9724() -> (Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) {
  %595 = @func_4677() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) */;
  %596 = %595.1;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(13, 1, 4), float64] */;
  %598 = @func_7372() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %599 = @func_6912() /* ty=Tensor[(16, 11, 15), float64] */;
  %600 = sqrt(%597) /* ty=Tensor[(13, 1, 4), float64] */;
  %601 = %598.0;
  (%599, %600, %601)
}

def @func_9573(%var_9518: Tensor[(14, 12, 2), float64], %var_9538: Tensor[(1728), uint16]) -> (Tensor[(14, 12, 2), float64], Tensor[(1728), uint16], Tensor[(1728), uint16]) {
  %602 = cast(%var_9518, dtype="float64") /* ty=Tensor[(14, 12, 2), float64] */;
  %603 = cast(%var_9538, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %604 = reshape(%603, newshape=[1728]) /* ty=Tensor[(1728), uint16] */;
  %605 = @func_5692(%604) /* ty=(Tensor[(189), uint64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) */;
  %606 = sin(%602) /* ty=Tensor[(14, 12, 2), float64] */;
  %607 = %605.2;
  (%606, %607, %var_9538)
}

def @func_1095(%var_1064: Tensor[(7, 6, 6), float32], %var_1082: Tensor[(2730), bool], %var_1083: Tensor[(60), float64]) -> (Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) {
  %608 = cast(%var_1082, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %609 = cast(%var_1082, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %610 = cast(%var_1083, dtype="float64") /* ty=Tensor[(60), float64] */;
  %611 = reshape(%608, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %612 = reshape(%609, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %613 = reshape(%610, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %614 = @func_790(%611, %612, %613) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %615 = cast(%var_1064, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  %616 = atan(%615) /* ty=Tensor[(7, 6, 6), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  %618 = %614.1;
  %619 = sqrt(%617) /* ty=Tensor[(7, 6, 6), float32] */;
  (%618, %var_1082, %var_1083, %619)
}

def @func_7794() -> Tensor[(60), float64] {
  @func_4743() /* ty=Tensor[(60), float64] */
}

def @func_4993(%var_4876: Tensor[(14, 3, 8), bool], %var_4889: Tensor[(624), int8], %var_4893: float64, %var_4957: Tensor[(14, 3, 8), bool]) -> (Tensor[(14, 3, 8), bool], Tensor[(1728), uint16], Tensor[(624), int8], Tensor[(10, 15, 3), float32], float64, Tensor[(10, 15, 3), float32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(2700), int64], Tensor[(14, 3, 8), float64]) {
  %620 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 3, 8), bool] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %621 = shape_of(%var_4876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%var_4876, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %624 = cast(%var_4889, dtype="int8") /* ty=Tensor[(624), int8] */;
  %625 = reshape(%624, newshape=[312, 2]) /* ty=Tensor[(312, 2), int8] */;
  %626 = @func_3632(%625) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */;
  %627 = cast(%var_4893, dtype="float64") /* ty=float64 */;
  %628 = reshape(%627, newshape=[]) /* ty=float64 */;
  %629 = @func_4622(%628) /* ty=(Tensor[(10, 15, 3), float32],) */;
  %630 = cast(%var_4893, dtype="float64") /* ty=float64 */;
  %631 = reshape(%630, newshape=[]) /* ty=float64 */;
  %632 = @func_4622(%631) /* ty=(Tensor[(10, 15, 3), float32],) */;
  %633 = cast(meta[relay.Constant][54] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %634 = cast(meta[relay.Constant][54] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %635 = cast(meta[relay.Constant][54] /* ty=Tensor[(2700), int64] */, dtype="int8") /* ty=Tensor[(2700), int8] */;
  %636 = reshape(%633, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %637 = reshape(%634, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %638 = reshape(%635, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
  %639 = @func_3341(%636, %637, %638) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %640 = cast(%var_4957, dtype="float64") /* ty=Tensor[(14, 3, 8), float64] */;
  %641 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 3, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 3, 8), bool] */, dtype="float64") /* ty=Tensor[(14, 3, 8), float64] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %644 = logical_and(%622, %623) /* ty=Tensor[(14, 3, 8), bool] */;
  %645 = %626.3;
  %646 = %629.0;
  %647 = %632.0;
  %648 = @func_4743() /* ty=Tensor[(60), float64] */;
  %649 = %639.6;
  %650 = floor_mod(%642, %643) /* ty=Tensor[(14, 3, 8), float64] */;
  (%644, %645, %var_4889, %646, %var_4893, %647, %648, %649, meta[relay.Constant][54] /* ty=Tensor[(2700), int64] */, %650)
}

def @func_5882(%var_5877: Tensor[(1, 60), float64]) -> (Tensor[(9, 7, 3), int64], Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), int64], Tensor[(1, 60), float64]) {
  %651 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %652 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %653 = %652.0;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %655 = asinh(%654) /* ty=Tensor[(16, 11, 15), float64] */;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %657 = cast(%var_5877, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %658 = reshape(%657, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %659 = @func_5822(%658) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %660 = %651.1;
  %661 = sinh(%656) /* ty=Tensor[(16, 11, 15), float64] */;
  %662 = %659.1;
  (%660, %661, %662, %var_5877)
}

def @func_8470() -> (Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), float64]) {
  %663 = @func_7869() /* ty=(Tensor[(9, 7, 3), float64],) */;
  %664 = @func_7890() /* ty=Tensor[(16, 11, 15), float64] */;
  %665 = %663.0;
  (%664, %665)
}

def @func_8631() -> Tensor[(189), uint64] {
  %666 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
  %666.1
}

def @func_8380(%var_8374: Tensor[(1, 880), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(10, 15, 3), float32], float64, Tensor[(16, 11, 15), float64], Tensor[(1, 880), float64]) {
  %667 = cast(-7.11854f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %668 = reshape(%667, newshape=[]) /* ty=float64 */;
  %669 = @func_4622(%668) /* ty=(Tensor[(10, 15, 3), float32],) */;
  %670 = cast(%var_8374, dtype="float32") /* ty=Tensor[(1, 880), float32] */;
  %671 = reshape(%670, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %672 = @func_6824(%671) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */;
  %673 = cast(%var_8374, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %674 = @func_6666() /* ty=Tensor[(16, 11, 15), float64] */;
  %675 = %669.0;
  %676 = %672.6;
  %677 = atan(%673) /* ty=Tensor[(1, 880), float64] */;
  (%674, %675, -7.11854f64 /* ty=float64 */, %676, %677)
}

def @func_10810() -> (Tensor[(16, 11, 15), float64],) {
  %678 = @func_9724() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) */;
  %679 = %678.2;
  (%679,)
}

def @func_4308() -> Tensor[(16, 11, 15), float64] {
  %680 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %680.0
}

def @func_9667() -> (Tensor[(16, 11, 15), float64],) {
  %681 = @func_6666() /* ty=Tensor[(16, 11, 15), float64] */;
  (%681,)
}

def @func_4598(%var_4581: Tensor[(1, 5), float64], %var_4590: Tensor[(2730, 5), bool]) -> (Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) {
  %682 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %683 = cast(meta[relay.Constant][55] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %684 = cast(meta[relay.Constant][55] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %685 = cast(meta[relay.Constant][55] /* ty=Tensor[(2700), int64] */, dtype="int8") /* ty=Tensor[(2700), int8] */;
  %686 = reshape(%683, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %687 = reshape(%684, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %688 = reshape(%685, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
  %689 = @func_3341(%686, %687, %688) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %690 = cast(-5.34917f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %691 = cast(%var_4581, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %692 = cast(meta[relay.Constant][56] /* ty=Tensor[(64), int32] */, dtype="int32") /* ty=Tensor[(64), int32] */;
  %693 = cast(meta[relay.Constant][57] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %694 = cast(meta[relay.Constant][58] /* ty=Tensor[(2730, 1), bool] */, dtype="bool") /* ty=Tensor[(2730, 1), bool] */;
  %695 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %696 = reshape(%690, newshape=[]) /* ty=float64 */;
  %697 = reshape(%691, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %698 = reshape(%692, newshape=[64]) /* ty=Tensor[(64), int32] */;
  %699 = reshape(%693, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %700 = reshape(%694, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %701 = reshape(%695, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %702 = @func_4174(%696, %697, %698, %699, %700, %701) /* ty=(Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) */;
  %703 = cast(meta[relay.Constant][58] /* ty=Tensor[(2730, 1), bool] */, dtype="bool") /* ty=Tensor[(2730, 1), bool] */;
  %704 = cast(%var_4590, dtype="bool") /* ty=Tensor[(2730, 5), bool] */;
  %705 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 189), int64] */, dtype="int64") /* ty=Tensor[(1, 189), int64] */;
  %706 = reshape(%705, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), int64] */;
  %707 = %682.0;
  %708 = %689.3;
  %709 = %702.0;
  %710 = greater(%703, %704) /* ty=Tensor[(2730, 5), bool] */;
  %711 = @func_3845(%706) /* ty=Tensor[(9, 7, 3), int64] */;
  (%707, %708, meta[relay.Constant][55] /* ty=Tensor[(2700), int64] */, %709, -5.34917f64 /* ty=float64 */, %var_4581, meta[relay.Constant][56] /* ty=Tensor[(64), int32] */, meta[relay.Constant][57] /* ty=Tensor[(672), float64] */, meta[relay.Constant][59] /* ty=Tensor[(60), float64] */, %710, %711, meta[relay.Constant][60] /* ty=Tensor[(1, 189), int64] */)
}

def @func_10754() -> (Tensor[(16, 11, 15), float64],) {
  %712 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %713 = %712.0;
  (%713,)
}

def @func_10855() -> (Tensor[(16, 11, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %714 = cast(meta[relay.Constant][61] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %715 = reshape(%714, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
  %716 = @func_6743(%715) /* ty=(Tensor[(6, 13, 5), float64],) */;
  %717 = @func_6854() /* ty=Tensor[(16, 11, 15), float64] */;
  %718 = %716.0;
  (%717, %718, meta[relay.Constant][61] /* ty=Tensor[(390), float64] */)
}

def @func_2853(%var_2832: Tensor[(16, 5, 11), float32], %var_2833: Tensor[(16, 5, 11), float32], %var_2841: Tensor[(2160), float64], %var_2845: Tensor[(2730), bool], %var_2846: Tensor[(60), float64]) -> (Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) {
  %719 = cast(%var_2833, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %720 = shape_of(%var_2832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%var_2832, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %723 = cast(%var_2841, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %724 = cast(%var_2841, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %725 = reshape(%723, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %726 = reshape(%724, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %727 = @func_1801(%725, %726) /* ty=(Tensor[(16, 9, 15), float64],) */;
  %728 = cast(meta[relay.Constant][62] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %729 = cast(%var_2845, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %730 = cast(%var_2846, dtype="float64") /* ty=Tensor[(60), float64] */;
  %731 = reshape(%728, newshape=[7, 6, 6]) /* ty=Tensor[(7, 6, 6), float32] */;
  %732 = reshape(%729, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %733 = reshape(%730, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %734 = @func_1095(%731, %732, %733) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */;
  %735 = cast(%var_2833, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
  %736 = floor_divide(%721, %722) /* ty=Tensor[(16, 5, 11), float32] */;
  %737 = %727.0;
  %738 = %734.3;
  %739 = sigmoid(%735) /* ty=Tensor[(16, 5, 11), float64] */;
  (%736, %737, %var_2841, %738, meta[relay.Constant][62] /* ty=Tensor[(252), float32] */, %var_2845, %var_2846, %739)
}

def @func_8311(%var_8287: Tensor[(8, 110), float32], %var_8294: Tensor[(9, 7, 3), float64]) -> (Tensor[(60), float64], Tensor[(8, 110), float32], Tensor[(9, 7, 3), bool]) {
  %740 = cast(%var_8287, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %741 = reshape(%740, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %742 = @func_6824(%741) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */;
  %743 = @func_7651() /* ty=(Tensor[(9, 7, 3), float64],) */;
  %744 = %743.0;
  %745 = cast(%var_8294, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%744, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %749 = %742.5;
  %750 = less_equal(%747, %748) /* ty=Tensor[(9, 7, 3), bool] */;
  (%749, %var_8287, %750)
}

def @func_1473(%var_1419: Tensor[(16, 7, 7), float32], %var_1430: Tensor[(260), float64], %var_1437: Tensor[(64), float32]) -> (Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(1, 8, 8), float32], Tensor[(13, 5, 4), bool], Tensor[(16, 7, 7), bool]) {
  %751 = cast(%var_1430, dtype="float64") /* ty=Tensor[(260), float64] */;
  %752 = reshape(%751, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
  %753 = @func_443(%752) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
  %754 = cast(%var_1437, dtype="float32") /* ty=Tensor[(64), float32] */;
  %755 = reshape(%754, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %756 = @func_661(%755) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %757 = cast(%var_1437, dtype="float32") /* ty=Tensor[(64), float32] */;
  %758 = reshape(%757, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %759 = @func_661(%758) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %760 = %753.0;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(13, 5, 4), float64] */;
  %762 = reshape(%761, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
  %763 = @func_443(%762) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
  %764 = cast(%var_1419, dtype="float32") /* ty=Tensor[(16, 7, 7), float32] */;
  %765 = log10(%764) /* ty=Tensor[(16, 7, 7), float32] */;
  %766 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 7, 7), float32] */, dtype="bool") /* ty=Tensor[(16, 7, 7), bool] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="bool") /* ty=Tensor[(16, 7, 7), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %770 = %756.0;
  %771 = %759.0;
  %772 = %763.0;
  %773 = logical_and(%768, %769) /* ty=Tensor[(16, 7, 7), bool] */;
  (%760, %var_1430, %770, %var_1437, %771, %772, %773)
}

def @func_8750(%var_8747: Tensor[(14, 12, 16), float32]) -> (Tensor[(14, 12, 16), float32],) {
  %774 = cast(%var_8747, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %775 = cos(%774) /* ty=Tensor[(14, 12, 16), float32] */;
  (%775,)
}

def @func_8721() -> Tensor[(16, 11, 15), float64] {
  %776 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %776.0
}

def @func_6455(%var_6449: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) {
  %777 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
  %778 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %779 = cast(meta[relay.Constant][64] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %780 = cast(meta[relay.Constant][64] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %781 = reshape(%779, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %782 = reshape(%780, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %783 = @func_1801(%781, %782) /* ty=(Tensor[(16, 9, 15), float64],) */;
  %784 = cast(%var_6449, dtype="float64") /* ty=Tensor[(672), float64] */;
  %785 = reshape(%784, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float64] */;
  %786 = @func_1745(%785) /* ty=(Tensor[(6, 16, 7), float64],) */;
  %787 = %777.0;
  %788 = %778.0;
  %789 = %783.0;
  %790 = %786.0;
  (%787, %788, %789, meta[relay.Constant][64] /* ty=Tensor[(2160), float64] */, %790, %var_6449)
}

def @func_5596() -> (Tensor[(60), float64],) {
  %791 = @func_4790() /* ty=(Tensor[(60), float64],) */;
  %792 = %791.0;
  (%792,)
}

def @func_84(%var_76: Tensor[(3, 10, 2), float64]) -> (Tensor[(3, 10, 2), float64],) {
  %793 = cast(%var_76, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %794 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(3, 10, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %797 = divide(%795, %796) /* ty=Tensor[(3, 10, 2), float64] */;
  (%797,)
}

def @func_9306() -> Tensor[(16, 11, 15), float64] {
  %798 = @func_5502() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */;
  %798.0
}

def @func_1573(%var_1548: Tensor[(6, 7, 11), float32], %var_1549: Tensor[(6, 7, 11), float32]) -> (Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %799 = cast(%var_1549, dtype="float32") /* ty=Tensor[(6, 7, 11), float32] */;
  %800 = shape_of(%var_1548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%var_1548, dtype="float32") /* ty=Tensor[(6, 7, 11), float32] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %803 = cast(meta[relay.Constant][66] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %804 = reshape(%803, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %805 = @func_84(%804) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %806 = floor_mod(%801, %802) /* ty=Tensor[(6, 7, 11), float32] */;
  %807 = %805.0;
  (%806, %807, meta[relay.Constant][66] /* ty=Tensor[(60), float64] */)
}

def @func_5058(%var_5019: Tensor[(1, 5, 7), float32], %var_5031: Tensor[(462), float32]) -> (Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(?, 5, 7), float32]) {
  %808 = cast(%var_5031, dtype="float32") /* ty=Tensor[(462), float32] */;
  %809 = cast(%var_5031, dtype="float32") /* ty=Tensor[(462), float32] */;
  %810 = reshape(%808, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %811 = reshape(%809, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %812 = @func_1573(%810, %811) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %813 = cast(%var_5019, dtype="float32") /* ty=Tensor[(1, 5, 7), float32] */;
  %814 = tan(%813) /* ty=Tensor[(1, 5, 7), float32] */;
  %815 = cast(%814, dtype="float32") /* ty=Tensor[(1, 5, 7), float32] */;
  %816 = asin(%815) /* ty=Tensor[(1, 5, 7), float32] */;
  %817 = cast(%814, dtype="uint8") /* ty=Tensor[(1, 5, 7), uint8] */;
  %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%816, dtype="uint8") /* ty=Tensor[(1, 5, 7), uint8] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %821 = bitwise_xor(%819, %820) /* ty=Tensor[(?, 5, 7), uint8] */;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(?, 5, 7), float32] */;
  %823 = %812.0;
  %824 = asinh(%822) /* ty=Tensor[(?, 5, 7), float32] */;
  (%823, %var_5031, %824)
}

def @func_5416() -> Tensor[(16, 11, 15), float64] {
  %825 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %825.0
}

def @func_7406() -> Tensor[(60), float64] {
  %826 = @func_7046() /* ty=(Tensor[(60), float64],) */;
  %826.0
}

def @func_10967(%var_10917: Tensor[(224), uint32]) -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64], Tensor[(60), float64], Tensor[(4, 7, 8), uint32], Tensor[(224), uint32]) {
  %827 = @func_9667() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %828 = @func_7104() /* ty=(Tensor[(60), float64],) */;
  %829 = @func_8434() /* ty=(Tensor[(60), float64],) */;
  %830 = cast(%var_10917, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %831 = reshape(%830, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), uint32] */;
  %832 = %827.0;
  %833 = %828.0;
  %834 = %829.0;
  %835 = @func_7617(%831) /* ty=Tensor[(4, 7, 8), uint32] */;
  (%832, %833, %834, %835, %var_10917)
}

def @func_4556() -> (Tensor[(16, 11, 15), float64],) {
  %836 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %837 = %836.0;
  (%837,)
}

def @func_11326() -> Tensor[(16, 11, 15), float64] {
  %838 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %838.0
}

def @func_5722() -> Tensor[(16, 11, 15), float64] {
  @func_5522() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_8434() -> (Tensor[(60), float64],) {
  %839 = @func_5987() /* ty=(Tensor[(60), float64],) */;
  %840 = %839.0;
  (%840,)
}

def @func_8700() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  %841 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %842 = @func_7822() /* ty=Tensor[(16, 11, 15), float64] */;
  %843 = %841.0;
  (%842, %843)
}

def @func_4858() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  %844 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %845 = @func_4308() /* ty=Tensor[(16, 11, 15), float64] */;
  %846 = %844.0;
  (%845, %846)
}

def @func_7890() -> Tensor[(16, 11, 15), float64] {
  @func_4308() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_4790() -> (Tensor[(60), float64],) {
  %847 = @func_4743() /* ty=Tensor[(60), float64] */;
  (%847,)
}

def @func_5987() -> (Tensor[(60), float64],) {
  %848 = @func_5596() /* ty=(Tensor[(60), float64],) */;
  %849 = %848.0;
  (%849,)
}

def @func_7046() -> (Tensor[(60), float64],) {
  %850 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
  %851 = %850.0;
  (%851,)
}

def @func_5192(%var_5168: Tensor[(16, 11, 15), float64], %var_5181: Tensor[(16, 11, 15), float64]) -> (Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), int32]) {
  %852 = @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */;
  %853 = %852.1;
  %854 = cast(%var_5168, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%853, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %858 = cast(%var_5181, dtype="int32") /* ty=Tensor[(16, 11, 15), int32] */;
  %859 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%853, dtype="int32") /* ty=Tensor[(16, 11, 15), int32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %862 = floor_mod(%856, %857) /* ty=Tensor[(16, 11, 15), float32] */;
  %863 = left_shift(%860, %861) /* ty=Tensor[(16, 11, 15), int32] */;
  (%862, %863)
}

def @func_10174() -> (Tensor[(16, 11, 15), float64],) {
  %864 = @func_6854() /* ty=Tensor[(16, 11, 15), float64] */;
  (%864,)
}

def @func_7617(%var_7597: Tensor[(4, 7, 8), uint32]) -> Tensor[(4, 7, 8), uint32] {
  %865 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 7, 8), uint32] */, dtype="uint32") /* ty=Tensor[(4, 7, 8), uint32] */;
  %866 = shape_of(%var_7597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_7597, dtype="uint32") /* ty=Tensor[(4, 7, 8), uint32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%867, %868) /* ty=Tensor[(4, 7, 8), uint32] */
}

def @func_7325() -> (Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) {
  %869 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %871 = rsqrt(%870) /* ty=Tensor[(16, 11, 15), float32] */;
  %872 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
  (%871, %872)
}

def @func_10028() -> (Tensor[(60), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) {
  %873 = @func_5987() /* ty=(Tensor[(60), float64],) */;
  %874 = cast(meta[relay.Constant][68] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %875 = reshape(%874, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %876 = @func_6455(%875) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %877 = %873.0;
  %878 = %876.4;
  (%877, %878, meta[relay.Constant][68] /* ty=Tensor[(672), float64] */)
}

def @func_5502() -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  %879 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %880 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %881 = %879.0;
  %882 = %880.2;
  (%881, %882)
}

def @func_7740() -> (Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) {
  %883 = cast(meta[relay.Constant][69] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %884 = cast(meta[relay.Constant][69] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %885 = reshape(%883, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %886 = reshape(%884, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %887 = @func_1170(%885, %886) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %888 = @func_7003() /* ty=Tensor[(60), float64] */;
  %889 = %887.0;
  (%888, %889, meta[relay.Constant][69] /* ty=Tensor[(1728), uint16] */)
}

def @func_4174(%var_4120: float64, %var_4121: Tensor[(1, 5), float64], %var_4126: Tensor[(64), int32], %var_4127: Tensor[(672), float64], %var_4132: Tensor[(2730), bool], %var_4133: Tensor[(15, 4), float64]) -> (Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) {
  %890 = cast(%var_4120, dtype="float64") /* ty=float64 */;
  %891 = cast(%var_4121, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %892 = cast(%var_4126, dtype="int32") /* ty=Tensor[(64), int32] */;
  %893 = cast(%var_4127, dtype="float64") /* ty=Tensor[(672), float64] */;
  %894 = reshape(%892, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), int32] */;
  %895 = reshape(%893, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %896 = @func_3566(%894, %895) /* ty=(Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(8, 8, 2), float32]) */;
  %897 = cast(%var_4132, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %898 = cast(%var_4132, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %899 = cast(%var_4133, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %900 = reshape(%897, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %901 = reshape(%898, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %902 = reshape(%899, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %903 = @func_790(%900, %901, %902) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %904 = %903.0;
  %905 = cast(%904, dtype="int16") /* ty=Tensor[(14, 13, 15), int16] */;
  %906 = cast(%var_4120, dtype="int16") /* ty=int16 */;
  %907 = cast(meta[relay.Constant][70] /* ty=Tensor[(624), int8] */, dtype="int8") /* ty=Tensor[(624), int8] */;
  %908 = cast(meta[relay.Constant][71] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %909 = cast(meta[relay.Constant][71] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %910 = reshape(%907, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), int8] */;
  %911 = reshape(%908, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %912 = reshape(%909, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %913 = @func_3253(%910, %911, %912) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */;
  %914 = cast(meta[relay.Constant][72] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %915 = cast(meta[relay.Constant][72] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %916 = reshape(%914, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %917 = reshape(%915, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %918 = @func_1573(%916, %917) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %919 = cast(%var_4126, dtype="float32") /* ty=Tensor[(64), float32] */;
  %920 = reshape(%919, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %921 = @func_661(%920) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %922 = divide(%890, %891) /* ty=Tensor[(1, 5), float64] */;
  %923 = %896.1;
  %924 = bitwise_or(%905, %906) /* ty=Tensor[(14, 13, 15), int16] */;
  %925 = %913.2;
  %926 = %918.2;
  %927 = %921.0;
  (%922, %923, %var_4126, %var_4127, %var_4132, %var_4133, %924, %925, meta[relay.Constant][70] /* ty=Tensor[(624), int8] */, meta[relay.Constant][71] /* ty=Tensor[(1728), uint16] */, %926, meta[relay.Constant][72] /* ty=Tensor[(462), float32] */, %927)
}

def @func_9333() -> (Tensor[(16, 11, 15), float32], Tensor[(60), float64]) {
  %928 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
  %929 = @func_8434() /* ty=(Tensor[(60), float64],) */;
  %930 = %928.1;
  %931 = %929.0;
  (%930, %931)
}

def @func_6244(%var_6071: Tensor[(2700), int64], %var_6115: Tensor[(189), float32], %var_6121: Tensor[(3, 10, 2), float64], %var_6214: Tensor[(624), int8]) -> (Tensor[(16, 11, 15), float64], Tensor[(64), float32], Tensor[(2700), int64], Tensor[(3, 10, 2), bool], Tensor[(?, 8, 8), uint16], Tensor[(16, 9, 15), float64], Tensor[(180, 12), float64], Tensor[(?, 8, 8), float64], Tensor[(312, 2), int8], Tensor[(624), int8], Tensor[(189), float64]) {
  %932 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %933 = cast(%var_6071, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %934 = cast(%var_6071, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %935 = cast(%var_6071, dtype="int8") /* ty=Tensor[(2700), int8] */;
  %936 = reshape(%933, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %937 = reshape(%934, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %938 = reshape(%935, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
  %939 = @func_3341(%936, %937, %938) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %940 = %939.5;
  %941 = cast(%var_6121, dtype="bool") /* ty=Tensor[(3, 10, 2), bool] */;
  %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%940, dtype="bool") /* ty=Tensor[(3, 10, 2), bool] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %945 = cast(meta[relay.Constant][73] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %946 = reshape(%945, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %947 = @func_661(%946) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %948 = %947.0;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(1, 8, 8), float32] */;
  %950 = reshape(%949, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %951 = @func_661(%950) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %952 = %951.0;
  %953 = cast(%952, dtype="uint16") /* ty=Tensor[(1, 8, 8), uint16] */;
  %954 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%948, dtype="uint16") /* ty=Tensor[(1, 8, 8), uint16] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %957 = cast(meta[relay.Constant][74] /* ty=Tensor[(180, 12), float64] */, dtype="float64") /* ty=Tensor[(180, 12), float64] */;
  %958 = cast(meta[relay.Constant][74] /* ty=Tensor[(180, 12), float64] */, dtype="float64") /* ty=Tensor[(180, 12), float64] */;
  %959 = reshape(%957, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %960 = reshape(%958, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %961 = @func_1801(%959, %960) /* ty=(Tensor[(16, 9, 15), float64],) */;
  %962 = cast(%948, dtype="float64") /* ty=Tensor[(1, 8, 8), float64] */;
  %963 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%952, dtype="float64") /* ty=Tensor[(1, 8, 8), float64] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %966 = cast(%var_6214, dtype="int8") /* ty=Tensor[(624), int8] */;
  %967 = reshape(%966, newshape=[312, 2]) /* ty=Tensor[(312, 2), int8] */;
  %968 = @func_3632(%967) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */;
  %969 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %970 = %969.2;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(189), float32] */;
  %972 = asin(%971) /* ty=Tensor[(189), float32] */;
  %973 = cast(%var_6115, dtype="bool") /* ty=Tensor[(189), bool] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(1), int32] */;
  %975 = cast(%972, dtype="bool") /* ty=Tensor[(189), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?), bool] */;
  %977 = not_equal(%975, %976) /* ty=Tensor[(189), bool] */;
  %978 = cast(%977, dtype="int64") /* ty=Tensor[(189), int64] */;
  %979 = shape_of(%var_6115, dtype="int32") /* ty=Tensor[(1), int32] */;
  %980 = cast(%var_6115, dtype="int64") /* ty=Tensor[(189), int64] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?), int64] */;
  %982 = multiply(%980, %981) /* ty=Tensor[(189), int64] */;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(189), float32] */;
  %984 = cos(%983) /* ty=Tensor[(189), float32] */;
  %985 = cast(%972, dtype="bool") /* ty=Tensor[(189), bool] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(1), int32] */;
  %987 = cast(%984, dtype="bool") /* ty=Tensor[(189), bool] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?), bool] */;
  %989 = equal(%987, %988) /* ty=Tensor[(189), bool] */;
  %990 = cast(%var_6121, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %991 = reshape(%990, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %992 = @func_5822(%991) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %993 = %992.1;
  %994 = cast(%993, dtype="float64") /* ty=Tensor[(9, 7, 3), float64] */;
  %995 = shape_of(%989, dtype="int32") /* ty=Tensor[(1), int32] */;
  %996 = cast(%989, dtype="float64") /* ty=Tensor[(189), float64] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?), float64] */;
  %998 = %932.0;
  %999 = logical_or(%943, %944) /* ty=Tensor[(3, 10, 2), bool] */;
  %1000 = bitwise_xor(%955, %956) /* ty=Tensor[(?, 8, 8), uint16] */;
  %1001 = %961.0;
  %1002 = mod(%964, %965) /* ty=Tensor[(?, 8, 8), float64] */;
  %1003 = %968.2;
  %1004 = minimum(%996, %997) /* ty=Tensor[(189), float64] */;
  (%998, meta[relay.Constant][73] /* ty=Tensor[(64), float32] */, %var_6071, %999, %1000, %1001, meta[relay.Constant][74] /* ty=Tensor[(180, 12), float64] */, %1002, %1003, %var_6214, %1004)
}

def @func_5798() -> (Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) {
  %1005 = cast(meta[relay.Constant][75] /* ty=Tensor[(189), int64] */, dtype="int64") /* ty=Tensor[(189), int64] */;
  %1006 = reshape(%1005, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), int64] */;
  %1007 = cast(meta[relay.Constant][75] /* ty=Tensor[(189), int64] */, dtype="float32") /* ty=Tensor[(189), float32] */;
  %1008 = log2(%1007) /* ty=Tensor[(189), float32] */;
  %1009 = cast(meta[relay.Constant][75] /* ty=Tensor[(189), int64] */, dtype="bool") /* ty=Tensor[(189), bool] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1011 = cast(%1008, dtype="bool") /* ty=Tensor[(189), bool] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1013 = @func_4743() /* ty=Tensor[(60), float64] */;
  %1014 = @func_3845(%1006) /* ty=Tensor[(9, 7, 3), int64] */;
  %1015 = logical_or(%1011, %1012) /* ty=Tensor[(189), bool] */;
  (%1013, %1014, %1015)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9335() -> (Tensor[(16, 11, 15), float32], Tensor[(60), float64]) {
  @func_9333() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(60), float64]) */
}

def @func_5800() -> (Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) {
  @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */
}

def @func_7653() -> (Tensor[(9, 7, 3), float64],) {
  @func_7651() /* ty=(Tensor[(9, 7, 3), float64],) */
}

def @func_9180() -> Tensor[(60), float64] {
  @func_9178() /* ty=Tensor[(60), float64] */
}

def @func_8315(%var_8313: Tensor[(8, 110), float32], %var_8314: Tensor[(9, 7, 3), float64]) -> (Tensor[(60), float64], Tensor[(8, 110), float32], Tensor[(9, 7, 3), bool]) {
  @func_8311(%var_8313, %var_8314) /* ty=(Tensor[(60), float64], Tensor[(8, 110), float32], Tensor[(9, 7, 3), bool]) */
}

def @func_5885(%var_5883: Tensor[(1, 60), float64]) -> (Tensor[(9, 7, 3), int64], Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), int64], Tensor[(1, 60), float64]) {
  @func_5882(%var_5883) /* ty=(Tensor[(9, 7, 3), int64], Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), int64], Tensor[(1, 60), float64]) */
}

def @func_7004() -> Tensor[(60), float64] {
  %1 = fn () -> Tensor[(60), float64] {
    %0 = @func_4790() /* ty=(Tensor[(60), float64],) */;
    %0.0
  };
  %1() /* ty=Tensor[(60), float64] */
}

def @func_5077(%var_5075: Tensor[(14, 4, 9), uint64], %var_5076: Tensor[(14, 4, 9), uint64]) -> Tensor[(14, 4, 9), uint64] {
  @func_5073(%var_5075, %var_5076) /* ty=Tensor[(14, 4, 9), uint64] */
}

def @func_5911(%var_5887: bool, %var_5888: Tensor[(13, 2, 13), bool], %var_5900: Tensor[(60, 1), float64]) -> (Tensor[(13, 2, 13), bool], Tensor[(60), float64], Tensor[(60, 1), float64]) {
  %2 = cast(%var_5887, dtype="bool") /* ty=bool */;
  %3 = cast(%var_5888, dtype="bool") /* ty=Tensor[(13, 2, 13), bool] */;
  %4 = cast(%var_5900, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %5 = reshape(%4, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %6 = @func_5822(%5) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %7 = logical_or(%2, %3) /* ty=Tensor[(13, 2, 13), bool] */;
  %8 = %6.2;
  (%7, %8, %var_5900)
}

def @func_3847(%var_3846: Tensor[(9, 7, 3), int64]) -> Tensor[(9, 7, 3), int64] {
  %13 = fn (%var_3835: Tensor[(9, 7, 3), int64]) -> Tensor[(9, 7, 3), int64] {
    %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 7, 3), int64] */, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
    %10 = shape_of(%var_3835, dtype="int32") /* ty=Tensor[(3), int32] */;
    %11 = cast(%var_3835, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
    %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%11, %12) /* ty=Tensor[(9, 7, 3), int64] */
  };
  %13(%var_3846) /* ty=Tensor[(9, 7, 3), int64] */
}

def @func_4182(%var_4176: float64, %var_4177: Tensor[(1, 5), float64], %var_4178: Tensor[(64), int32], %var_4179: Tensor[(672), float64], %var_4180: Tensor[(2730), bool], %var_4181: Tensor[(15, 4), float64]) -> (Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) {
  @func_4174(%var_4176, %var_4177, %var_4178, %var_4179, %var_4180, %var_4181) /* ty=(Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) */
}

def @func_5195(%var_5193: Tensor[(16, 11, 15), float64], %var_5194: Tensor[(16, 11, 15), float64]) -> (Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), int32]) {
  %26 = fn (%var_5168: Tensor[(16, 11, 15), float64], %var_5181: Tensor[(16, 11, 15), float64]) -> (Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), int32]) {
    %14 = @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */;
    %15 = %14.1;
    %16 = cast(%var_5168, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
    %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%15, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %20 = cast(%var_5181, dtype="int32") /* ty=Tensor[(16, 11, 15), int32] */;
    %21 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%15, dtype="int32") /* ty=Tensor[(16, 11, 15), int32] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %24 = floor_mod(%18, %19) /* ty=Tensor[(16, 11, 15), float32] */;
    %25 = left_shift(%22, %23) /* ty=Tensor[(16, 11, 15), int32] */;
    (%24, %25)
  };
  %26(%var_5193, %var_5194) /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), int32]) */
}

def @func_4231(%var_4230: Tensor[(16, 7, 3), int32]) -> Tensor[(16, 7, 3), float32] {
  %33 = fn (%var_4209: Tensor[(16, 7, 3), int32]) -> Tensor[(16, 7, 3), float32] {
    %27 = cast(%var_4209, dtype="int32") /* ty=Tensor[(16, 7, 3), int32] */;
    %28 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(16, 7, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 7, 3), int32] */, dtype="int32") /* ty=Tensor[(16, 7, 3), int32] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %31 = subtract(%29, %30) /* ty=Tensor[(16, 7, 3), int32] */;
    %32 = cast(%31, dtype="float32") /* ty=Tensor[(16, 7, 3), float32] */;
    log(%32) /* ty=Tensor[(16, 7, 3), float32] */
  };
  %33(%var_4230) /* ty=Tensor[(16, 7, 3), float32] */
}

def @func_10095(%var_10093: Tensor[(880), float32], %var_10094: Tensor[(2160), float64]) -> (Tensor[(16, 11, 15), float64], Tensor[(2160), float64], Tensor[(880), float32], Tensor[(2160), float64], Tensor[(910, 3), bool], Tensor[(60), float64]) {
  %48 = fn (%var_10072: Tensor[(880), float32], %var_10073: Tensor[(2160), float64]) -> (Tensor[(16, 11, 15), float64], Tensor[(2160), float64], Tensor[(880), float32], Tensor[(2160), float64], Tensor[(910, 3), bool], Tensor[(60), float64]) {
    %34 = @func_9667() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %35 = cast(%var_10072, dtype="float32") /* ty=Tensor[(880), float32] */;
    %36 = cast(%var_10072, dtype="float32") /* ty=Tensor[(880), float32] */;
    %37 = cast(%var_10073, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(910, 3), bool] */, dtype="bool") /* ty=Tensor[(910, 3), bool] */;
    %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %40 = reshape(%35, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
    %41 = reshape(%36, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
    %42 = reshape(%37, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
    %43 = reshape(%38, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
    %44 = reshape(%39, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %45 = @func_2853(%40, %41, %42, %43, %44) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) */;
    %46 = %34.0;
    %47 = %45.2;
    (%46, %47, %var_10072, %var_10073, meta[relay.Constant][2] /* ty=Tensor[(910, 3), bool] */, meta[relay.Constant][3] /* ty=Tensor[(60), float64] */)
  };
  %48(%var_10093, %var_10094) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(2160), float64], Tensor[(880), float32], Tensor[(2160), float64], Tensor[(910, 3), bool], Tensor[(60), float64]) */
}

def @func_6912() -> Tensor[(16, 11, 15), float64] {
  %49 = @func_6670() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %49.0
}

def @func_9576(%var_9574: Tensor[(14, 12, 2), float64], %var_9575: Tensor[(1728), uint16]) -> (Tensor[(14, 12, 2), float64], Tensor[(1728), uint16], Tensor[(1728), uint16]) {
  %56 = fn (%var_9518: Tensor[(14, 12, 2), float64], %var_9538: Tensor[(1728), uint16]) -> (Tensor[(14, 12, 2), float64], Tensor[(1728), uint16], Tensor[(1728), uint16]) {
    %50 = cast(%var_9518, dtype="float64") /* ty=Tensor[(14, 12, 2), float64] */;
    %51 = cast(%var_9538, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %52 = reshape(%51, newshape=[1728]) /* ty=Tensor[(1728), uint16] */;
    %53 = @func_5692(%52) /* ty=(Tensor[(189), uint64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) */;
    %54 = sin(%50) /* ty=Tensor[(14, 12, 2), float64] */;
    %55 = %53.2;
    (%54, %55, %var_9538)
  };
  %56(%var_9574, %var_9575) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(1728), uint16], Tensor[(1728), uint16]) */
}

def @func_5695(%var_5693: Tensor[(1728), uint16]) -> (Tensor[(189), uint64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) {
  @func_5692(%var_5693) /* ty=(Tensor[(189), uint64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) */
}

def @func_794(%var_791: Tensor[(14, 13, 15), bool], %var_792: Tensor[(14, 13, 15), bool], %var_793: Tensor[(60), float64]) -> (Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %73 = fn (%var_766: Tensor[(14, 13, 15), bool], %var_767: Tensor[(14, 13, 15), bool], %var_780: Tensor[(60), float64]) -> (Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
    %57 = cast(%var_767, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
    %58 = shape_of(%var_766, dtype="int32") /* ty=Tensor[(3), int32] */;
    %59 = cast(%var_766, dtype="bool") /* ty=Tensor[(14, 13, 15), bool] */;
    %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %61 = logical_and(%59, %60) /* ty=Tensor[(14, 13, 15), bool] */;
    %62 = cast(%var_766, dtype="int32") /* ty=Tensor[(14, 13, 15), int32] */;
    %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
    %64 = cast(%61, dtype="int32") /* ty=Tensor[(14, 13, 15), int32] */;
    %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %66 = cast(%61, dtype="float64") /* ty=Tensor[(14, 13, 15), float64] */;
    %67 = cast(%var_780, dtype="float64") /* ty=Tensor[(60), float64] */;
    %68 = reshape(%67, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
    %69 = @func_84(%68) /* ty=(Tensor[(3, 10, 2), float64],) */;
    %70 = logical_xor(%64, %65) /* ty=Tensor[(14, 13, 15), int32] */;
    %71 = exp(%66) /* ty=Tensor[(14, 13, 15), float64] */;
    %72 = %69.0;
    (%70, %71, %72, %var_780)
  };
  %73(%var_791, %var_792, %var_793) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */
}

def @func_6914() -> Tensor[(16, 11, 15), float64] {
  @func_6912() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_9961(%var_9947: Tensor[(2688), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(14, 12, 16), float32], Tensor[(2688), float32]) {
  %74 = cast(%var_9947, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %75 = reshape(%74, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), float32] */;
  %76 = @func_8750(%75) /* ty=(Tensor[(14, 12, 16), float32],) */;
  %77 = @func_9306() /* ty=Tensor[(16, 11, 15), float64] */;
  %78 = %76.0;
  (%77, %78, %var_9947)
}

def @func_6250(%var_6246: Tensor[(2700), int64], %var_6247: Tensor[(189), float32], %var_6248: Tensor[(3, 10, 2), float64], %var_6249: Tensor[(624), int8]) -> (Tensor[(16, 11, 15), float64], Tensor[(64), float32], Tensor[(2700), int64], Tensor[(3, 10, 2), bool], Tensor[(?, 8, 8), uint16], Tensor[(16, 9, 15), float64], Tensor[(180, 12), float64], Tensor[(?, 8, 8), float64], Tensor[(312, 2), int8], Tensor[(624), int8], Tensor[(189), float64]) {
  @func_6244(%var_6246, %var_6247, %var_6248, %var_6249) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(64), float32], Tensor[(2700), int64], Tensor[(3, 10, 2), bool], Tensor[(?, 8, 8), uint16], Tensor[(16, 9, 15), float64], Tensor[(180, 12), float64], Tensor[(?, 8, 8), float64], Tensor[(312, 2), int8], Tensor[(624), int8], Tensor[(189), float64]) */
}

def @func_5140(%var_5138: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(16, 11, 15), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(1, 8, 8), float32], float64, Tensor[(5, 1), float64], Tensor[(64), int32]) {
  @func_5137(%var_5138) /* ty=(Tensor[(60), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(16, 11, 15), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(1, 8, 8), float32], float64, Tensor[(5, 1), float64], Tensor[(64), int32]) */
}

def @func_1170(%var_1147: Tensor[(16, 12, 9), uint16], %var_1148: Tensor[(16, 12, 9), uint16]) -> (Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %79 = cast(%var_1148, dtype="uint16") /* ty=Tensor[(16, 12, 9), uint16] */;
  %80 = shape_of(%var_1147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_1147, dtype="uint16") /* ty=Tensor[(16, 12, 9), uint16] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %83 = left_shift(%81, %82) /* ty=Tensor[(16, 12, 9), uint16] */;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(16, 12, 9), float64] */;
  %85 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %86 = reshape(%85, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %87 = @func_84(%86) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %88 = erf(%84) /* ty=Tensor[(16, 12, 9), float64] */;
  %89 = %87.0;
  (%88, %89, meta[relay.Constant][4] /* ty=Tensor[(60), float64] */)
}

def @func_8383(%var_8381: Tensor[(1, 880), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(10, 15, 3), float32], float64, Tensor[(16, 11, 15), float64], Tensor[(1, 880), float64]) {
  @func_8380(%var_8381) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(10, 15, 3), float32], float64, Tensor[(16, 11, 15), float64], Tensor[(1, 880), float64]) */
}

def @func_6608() -> Tensor[(16, 11, 15), float64] {
  @func_6606() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_9039(%var_9037: Tensor[(64), float32]) -> (Tensor[(60), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) {
  @func_9036(%var_9037) /* ty=(Tensor[(60), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) */
}

def @func_9036(%var_9010: Tensor[(64), float32]) -> (Tensor[(60), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) {
  %90 = @func_7046() /* ty=(Tensor[(60), float64],) */;
  %91 = cast(%var_9010, dtype="float32") /* ty=Tensor[(64), float32] */;
  %92 = reshape(%91, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %93 = @func_661(%92) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %94 = %90.0;
  %95 = %93.0;
  (%94, %95, %var_9010)
}

def @func_10754() -> (Tensor[(16, 11, 15), float64],) {
  %96 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %97 = %96.0;
  (%97,)
}

def @func_4174(%var_4120: float64, %var_4121: Tensor[(1, 5), float64], %var_4126: Tensor[(64), int32], %var_4127: Tensor[(672), float64], %var_4132: Tensor[(2730), bool], %var_4133: Tensor[(15, 4), float64]) -> (Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) {
  %98 = cast(%var_4120, dtype="float64") /* ty=float64 */;
  %99 = cast(%var_4121, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %100 = cast(%var_4126, dtype="int32") /* ty=Tensor[(64), int32] */;
  %101 = cast(%var_4127, dtype="float64") /* ty=Tensor[(672), float64] */;
  %102 = reshape(%100, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), int32] */;
  %103 = reshape(%101, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %104 = @func_3566(%102, %103) /* ty=(Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(8, 8, 2), float32]) */;
  %105 = cast(%var_4132, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %106 = cast(%var_4132, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %107 = cast(%var_4133, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %108 = reshape(%105, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %109 = reshape(%106, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %110 = reshape(%107, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %111 = @func_790(%108, %109, %110) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %112 = %111.0;
  %113 = cast(%112, dtype="int16") /* ty=Tensor[(14, 13, 15), int16] */;
  %114 = cast(%var_4120, dtype="int16") /* ty=int16 */;
  %115 = cast(meta[relay.Constant][5] /* ty=Tensor[(624), int8] */, dtype="int8") /* ty=Tensor[(624), int8] */;
  %116 = cast(meta[relay.Constant][6] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %117 = cast(meta[relay.Constant][6] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %118 = reshape(%115, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), int8] */;
  %119 = reshape(%116, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %120 = reshape(%117, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %121 = @func_3253(%118, %119, %120) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */;
  %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %124 = reshape(%122, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %125 = reshape(%123, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %126 = @func_1573(%124, %125) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %127 = cast(%var_4126, dtype="float32") /* ty=Tensor[(64), float32] */;
  %128 = reshape(%127, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %129 = @func_661(%128) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %130 = divide(%98, %99) /* ty=Tensor[(1, 5), float64] */;
  %131 = %104.1;
  %132 = bitwise_or(%113, %114) /* ty=Tensor[(14, 13, 15), int16] */;
  %133 = %121.2;
  %134 = %126.2;
  %135 = %129.0;
  (%130, %131, %var_4126, %var_4127, %var_4132, %var_4133, %132, %133, meta[relay.Constant][5] /* ty=Tensor[(624), int8] */, meta[relay.Constant][6] /* ty=Tensor[(1728), uint16] */, %134, meta[relay.Constant][7] /* ty=Tensor[(462), float32] */, %135)
}

def @func_4200(%var_4186: Tensor[(15, 5, 7), int64]) -> (Tensor[(15, 5, 7), int64], Tensor[(16, 12, 9), float64], Tensor[(624), int8]) {
  %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 5, 7), int64] */, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %137 = shape_of(%var_4186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_4186, dtype="int64") /* ty=Tensor[(15, 5, 7), int64] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %140 = cast(meta[relay.Constant][9] /* ty=Tensor[(624), int8] */, dtype="int8") /* ty=Tensor[(624), int8] */;
  %141 = reshape(%140, newshape=[312, 2]) /* ty=Tensor[(312, 2), int8] */;
  %142 = @func_3632(%141) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */;
  %143 = logical_xor(%138, %139) /* ty=Tensor[(15, 5, 7), int64] */;
  %144 = %142.1;
  (%143, %144, meta[relay.Constant][9] /* ty=Tensor[(624), int8] */)
}

def @func_10738() -> (Tensor[(60), float64],) {
  %145 = @func_7104() /* ty=(Tensor[(60), float64],) */;
  %146 = %145.0;
  (%146,)
}

def @func_4625(%var_4623: float64) -> (Tensor[(10, 15, 3), float32],) {
  @func_4622(%var_4623) /* ty=(Tensor[(10, 15, 3), float32],) */
}

def @func_10740() -> (Tensor[(60), float64],) {
  @func_10738() /* ty=(Tensor[(60), float64],) */
}

def @func_4998(%var_4994: Tensor[(14, 3, 8), bool], %var_4995: Tensor[(624), int8], %var_4996: float64, %var_4997: Tensor[(14, 3, 8), bool]) -> (Tensor[(14, 3, 8), bool], Tensor[(1728), uint16], Tensor[(624), int8], Tensor[(10, 15, 3), float32], float64, Tensor[(10, 15, 3), float32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(2700), int64], Tensor[(14, 3, 8), float64]) {
  %178 = fn (%var_4876: Tensor[(14, 3, 8), bool], %var_4889: Tensor[(624), int8], %var_4893: float64, %var_4957: Tensor[(14, 3, 8), bool]) -> (Tensor[(14, 3, 8), bool], Tensor[(1728), uint16], Tensor[(624), int8], Tensor[(10, 15, 3), float32], float64, Tensor[(10, 15, 3), float32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(2700), int64], Tensor[(14, 3, 8), float64]) {
    %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 3, 8), bool] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
    %148 = shape_of(%var_4876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%var_4876, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %151 = cast(%var_4889, dtype="int8") /* ty=Tensor[(624), int8] */;
    %152 = reshape(%151, newshape=[312, 2]) /* ty=Tensor[(312, 2), int8] */;
    %153 = @func_3632(%152) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */;
    %154 = cast(%var_4893, dtype="float64") /* ty=float64 */;
    %155 = reshape(%154, newshape=[]) /* ty=float64 */;
    %156 = @func_4622(%155) /* ty=(Tensor[(10, 15, 3), float32],) */;
    %157 = cast(%var_4893, dtype="float64") /* ty=float64 */;
    %158 = reshape(%157, newshape=[]) /* ty=float64 */;
    %159 = @func_4622(%158) /* ty=(Tensor[(10, 15, 3), float32],) */;
    %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
    %161 = cast(meta[relay.Constant][11] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
    %162 = cast(meta[relay.Constant][11] /* ty=Tensor[(2700), int64] */, dtype="int8") /* ty=Tensor[(2700), int8] */;
    %163 = reshape(%160, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
    %164 = reshape(%161, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
    %165 = reshape(%162, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
    %166 = @func_3341(%163, %164, %165) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %167 = cast(%var_4957, dtype="float64") /* ty=Tensor[(14, 3, 8), float64] */;
    %168 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(14, 3, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 3, 8), bool] */, dtype="float64") /* ty=Tensor[(14, 3, 8), float64] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %171 = logical_and(%149, %150) /* ty=Tensor[(14, 3, 8), bool] */;
    %172 = %153.3;
    %173 = %156.0;
    %174 = %159.0;
    %175 = @func_4743() /* ty=Tensor[(60), float64] */;
    %176 = %166.6;
    %177 = floor_mod(%169, %170) /* ty=Tensor[(14, 3, 8), float64] */;
    (%171, %172, %var_4889, %173, %var_4893, %174, %175, %176, meta[relay.Constant][11] /* ty=Tensor[(2700), int64] */, %177)
  };
  %178(%var_4994, %var_4995, %var_4996, %var_4997) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(1728), uint16], Tensor[(624), int8], Tensor[(10, 15, 3), float32], float64, Tensor[(10, 15, 3), float32], Tensor[(60), float64], Tensor[(60), float64], Tensor[(2700), int64], Tensor[(14, 3, 8), float64]) */
}

def @func_7326() -> (Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) {
  %183 = fn () -> (Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) {
    %179 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
    %180 = cast(%179, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
    %181 = rsqrt(%180) /* ty=Tensor[(16, 11, 15), float32] */;
    %182 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */
}

def @func_8380(%var_8374: Tensor[(1, 880), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(10, 15, 3), float32], float64, Tensor[(16, 11, 15), float64], Tensor[(1, 880), float64]) {
  %184 = cast(-7.11854f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %185 = reshape(%184, newshape=[]) /* ty=float64 */;
  %186 = @func_4622(%185) /* ty=(Tensor[(10, 15, 3), float32],) */;
  %187 = cast(%var_8374, dtype="float32") /* ty=Tensor[(1, 880), float32] */;
  %188 = reshape(%187, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %189 = @func_6824(%188) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */;
  %190 = cast(%var_8374, dtype="float64") /* ty=Tensor[(1, 880), float64] */;
  %191 = @func_6666() /* ty=Tensor[(16, 11, 15), float64] */;
  %192 = %186.0;
  %193 = %189.6;
  %194 = atan(%190) /* ty=Tensor[(1, 880), float64] */;
  (%191, %192, -7.11854f64 /* ty=float64 */, %193, %194)
}

def @func_11382() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  @func_11380() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_5724() -> Tensor[(16, 11, 15), float64] {
  @func_5722() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_1477(%var_1474: Tensor[(16, 7, 7), float32], %var_1475: Tensor[(260), float64], %var_1476: Tensor[(64), float32]) -> (Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(1, 8, 8), float32], Tensor[(13, 5, 4), bool], Tensor[(16, 7, 7), bool]) {
  %218 = fn (%var_1419: Tensor[(16, 7, 7), float32], %var_1430: Tensor[(260), float64], %var_1437: Tensor[(64), float32]) -> (Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(1, 8, 8), float32], Tensor[(13, 5, 4), bool], Tensor[(16, 7, 7), bool]) {
    %195 = cast(%var_1430, dtype="float64") /* ty=Tensor[(260), float64] */;
    %196 = reshape(%195, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
    %197 = @func_443(%196) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
    %198 = cast(%var_1437, dtype="float32") /* ty=Tensor[(64), float32] */;
    %199 = reshape(%198, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
    %200 = @func_661(%199) /* ty=(Tensor[(1, 8, 8), float32],) */;
    %201 = cast(%var_1437, dtype="float32") /* ty=Tensor[(64), float32] */;
    %202 = reshape(%201, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
    %203 = @func_661(%202) /* ty=(Tensor[(1, 8, 8), float32],) */;
    %204 = %197.0;
    %205 = cast(%204, dtype="float64") /* ty=Tensor[(13, 5, 4), float64] */;
    %206 = reshape(%205, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
    %207 = @func_443(%206) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
    %208 = cast(%var_1419, dtype="float32") /* ty=Tensor[(16, 7, 7), float32] */;
    %209 = log10(%208) /* ty=Tensor[(16, 7, 7), float32] */;
    %210 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 7, 7), float32] */, dtype="bool") /* ty=Tensor[(16, 7, 7), bool] */;
    %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
    %212 = cast(%209, dtype="bool") /* ty=Tensor[(16, 7, 7), bool] */;
    %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %214 = %200.0;
    %215 = %203.0;
    %216 = %207.0;
    %217 = logical_and(%212, %213) /* ty=Tensor[(16, 7, 7), bool] */;
    (%204, %var_1430, %214, %var_1437, %215, %216, %217)
  };
  %218(%var_1474, %var_1475, %var_1476) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(1, 8, 8), float32], Tensor[(13, 5, 4), bool], Tensor[(16, 7, 7), bool]) */
}

def @func_4557() -> (Tensor[(16, 11, 15), float64],) {
  %221 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %219 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %220 = %219.0;
    (%220,)
  };
  %221() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_4678() -> (Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) {
  %227 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) {
    %222 = cast(meta[relay.Constant][13] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %223 = reshape(%222, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
    %224 = @func_443(%223) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
    %225 = @func_4308() /* ty=Tensor[(16, 11, 15), float64] */;
    %226 = %224.1;
    (%225, %226, meta[relay.Constant][13] /* ty=Tensor[(260), float64] */)
  };
  %227() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) */
}

def @func_5073(%var_5067: Tensor[(14, 4, 9), uint64], %var_5068: Tensor[(14, 4, 9), uint64]) -> Tensor[(14, 4, 9), uint64] {
  %228 = cast(%var_5068, dtype="uint64") /* ty=Tensor[(14, 4, 9), uint64] */;
  %229 = shape_of(%var_5067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_5067, dtype="uint64") /* ty=Tensor[(14, 4, 9), uint64] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%230, %231) /* ty=Tensor[(14, 4, 9), uint64] */
}

def @func_4743() -> Tensor[(60), float64] {
  %232 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %232.2
}

def @func_6244(%var_6071: Tensor[(2700), int64], %var_6115: Tensor[(189), float32], %var_6121: Tensor[(3, 10, 2), float64], %var_6214: Tensor[(624), int8]) -> (Tensor[(16, 11, 15), float64], Tensor[(64), float32], Tensor[(2700), int64], Tensor[(3, 10, 2), bool], Tensor[(?, 8, 8), uint16], Tensor[(16, 9, 15), float64], Tensor[(180, 12), float64], Tensor[(?, 8, 8), float64], Tensor[(312, 2), int8], Tensor[(624), int8], Tensor[(189), float64]) {
  %233 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %234 = cast(%var_6071, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %235 = cast(%var_6071, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %236 = cast(%var_6071, dtype="int8") /* ty=Tensor[(2700), int8] */;
  %237 = reshape(%234, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %238 = reshape(%235, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %239 = reshape(%236, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
  %240 = @func_3341(%237, %238, %239) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %241 = %240.5;
  %242 = cast(%var_6121, dtype="bool") /* ty=Tensor[(3, 10, 2), bool] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="bool") /* ty=Tensor[(3, 10, 2), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %247 = reshape(%246, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %248 = @func_661(%247) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(1, 8, 8), float32] */;
  %251 = reshape(%250, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %252 = @func_661(%251) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %253 = %252.0;
  %254 = cast(%253, dtype="uint16") /* ty=Tensor[(1, 8, 8), uint16] */;
  %255 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%249, dtype="uint16") /* ty=Tensor[(1, 8, 8), uint16] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %258 = cast(meta[relay.Constant][15] /* ty=Tensor[(180, 12), float64] */, dtype="float64") /* ty=Tensor[(180, 12), float64] */;
  %259 = cast(meta[relay.Constant][15] /* ty=Tensor[(180, 12), float64] */, dtype="float64") /* ty=Tensor[(180, 12), float64] */;
  %260 = reshape(%258, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %261 = reshape(%259, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
  %262 = @func_1801(%260, %261) /* ty=(Tensor[(16, 9, 15), float64],) */;
  %263 = cast(%249, dtype="float64") /* ty=Tensor[(1, 8, 8), float64] */;
  %264 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%253, dtype="float64") /* ty=Tensor[(1, 8, 8), float64] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %267 = cast(%var_6214, dtype="int8") /* ty=Tensor[(624), int8] */;
  %268 = reshape(%267, newshape=[312, 2]) /* ty=Tensor[(312, 2), int8] */;
  %269 = @func_3632(%268) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */;
  %270 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %271 = %270.2;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(189), float32] */;
  %273 = asin(%272) /* ty=Tensor[(189), float32] */;
  %274 = cast(%var_6115, dtype="bool") /* ty=Tensor[(189), bool] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(1), int32] */;
  %276 = cast(%273, dtype="bool") /* ty=Tensor[(189), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?), bool] */;
  %278 = not_equal(%276, %277) /* ty=Tensor[(189), bool] */;
  %279 = cast(%278, dtype="int64") /* ty=Tensor[(189), int64] */;
  %280 = shape_of(%var_6115, dtype="int32") /* ty=Tensor[(1), int32] */;
  %281 = cast(%var_6115, dtype="int64") /* ty=Tensor[(189), int64] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?), int64] */;
  %283 = multiply(%281, %282) /* ty=Tensor[(189), int64] */;
  %284 = cast(%283, dtype="float32") /* ty=Tensor[(189), float32] */;
  %285 = cos(%284) /* ty=Tensor[(189), float32] */;
  %286 = cast(%273, dtype="bool") /* ty=Tensor[(189), bool] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(1), int32] */;
  %288 = cast(%285, dtype="bool") /* ty=Tensor[(189), bool] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?), bool] */;
  %290 = equal(%288, %289) /* ty=Tensor[(189), bool] */;
  %291 = cast(%var_6121, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %292 = reshape(%291, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %293 = @func_5822(%292) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %294 = %293.1;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(9, 7, 3), float64] */;
  %296 = shape_of(%290, dtype="int32") /* ty=Tensor[(1), int32] */;
  %297 = cast(%290, dtype="float64") /* ty=Tensor[(189), float64] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?), float64] */;
  %299 = %233.0;
  %300 = logical_or(%244, %245) /* ty=Tensor[(3, 10, 2), bool] */;
  %301 = bitwise_xor(%256, %257) /* ty=Tensor[(?, 8, 8), uint16] */;
  %302 = %262.0;
  %303 = mod(%265, %266) /* ty=Tensor[(?, 8, 8), float64] */;
  %304 = %269.2;
  %305 = minimum(%297, %298) /* ty=Tensor[(189), float64] */;
  (%299, meta[relay.Constant][14] /* ty=Tensor[(64), float32] */, %var_6071, %300, %301, %302, meta[relay.Constant][15] /* ty=Tensor[(180, 12), float64] */, %303, %304, %var_6214, %305)
}

def @func_7407() -> Tensor[(60), float64] {
  %307 = fn () -> Tensor[(60), float64] {
    %306 = @func_7046() /* ty=(Tensor[(60), float64],) */;
    %306.0
  };
  %307() /* ty=Tensor[(60), float64] */
}

def @func_8270() -> Tensor[(16, 11, 15), float64] {
  @func_7822() /* ty=Tensor[(16, 11, 15), float64] */
}

def @main() -> Tensor[(16, 11, 15), float32] {
  %308 = @func_9103() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %309 = %308.0;
  %310 = cast(%309, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  atanh(%310) /* ty=Tensor[(16, 11, 15), float32] */
}

def @func_5989() -> (Tensor[(60), float64],) {
  @func_5987() /* ty=(Tensor[(60), float64],) */
}

def @func_4745() -> Tensor[(60), float64] {
  @func_4743() /* ty=Tensor[(60), float64] */
}

def @func_6387() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float32]) {
  %311 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %312 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
  %313 = cast(%312, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %314 = %311.0;
  %315 = asin(%313) /* ty=Tensor[(16, 11, 15), float32] */;
  (%314, %315)
}

def @func_4598(%var_4581: Tensor[(1, 5), float64], %var_4590: Tensor[(2730, 5), bool]) -> (Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) {
  %316 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %317 = cast(meta[relay.Constant][16] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %318 = cast(meta[relay.Constant][16] /* ty=Tensor[(2700), int64] */, dtype="int64") /* ty=Tensor[(2700), int64] */;
  %319 = cast(meta[relay.Constant][16] /* ty=Tensor[(2700), int64] */, dtype="int8") /* ty=Tensor[(2700), int8] */;
  %320 = reshape(%317, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %321 = reshape(%318, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
  %322 = reshape(%319, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
  %323 = @func_3341(%320, %321, %322) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %324 = cast(-5.34917f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %325 = cast(%var_4581, dtype="float64") /* ty=Tensor[(1, 5), float64] */;
  %326 = cast(meta[relay.Constant][17] /* ty=Tensor[(64), int32] */, dtype="int32") /* ty=Tensor[(64), int32] */;
  %327 = cast(meta[relay.Constant][18] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %328 = cast(meta[relay.Constant][19] /* ty=Tensor[(2730, 1), bool] */, dtype="bool") /* ty=Tensor[(2730, 1), bool] */;
  %329 = cast(meta[relay.Constant][20] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %330 = reshape(%324, newshape=[]) /* ty=float64 */;
  %331 = reshape(%325, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %332 = reshape(%326, newshape=[64]) /* ty=Tensor[(64), int32] */;
  %333 = reshape(%327, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %334 = reshape(%328, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %335 = reshape(%329, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %336 = @func_4174(%330, %331, %332, %333, %334, %335) /* ty=(Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) */;
  %337 = cast(meta[relay.Constant][19] /* ty=Tensor[(2730, 1), bool] */, dtype="bool") /* ty=Tensor[(2730, 1), bool] */;
  %338 = cast(%var_4590, dtype="bool") /* ty=Tensor[(2730, 5), bool] */;
  %339 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 189), int64] */, dtype="int64") /* ty=Tensor[(1, 189), int64] */;
  %340 = reshape(%339, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), int64] */;
  %341 = %316.0;
  %342 = %323.3;
  %343 = %336.0;
  %344 = greater(%337, %338) /* ty=Tensor[(2730, 5), bool] */;
  %345 = @func_3845(%340) /* ty=Tensor[(9, 7, 3), int64] */;
  (%341, %342, meta[relay.Constant][16] /* ty=Tensor[(2700), int64] */, %343, -5.34917f64 /* ty=float64 */, %var_4581, meta[relay.Constant][17] /* ty=Tensor[(64), int32] */, meta[relay.Constant][18] /* ty=Tensor[(672), float64] */, meta[relay.Constant][20] /* ty=Tensor[(60), float64] */, %344, %345, meta[relay.Constant][21] /* ty=Tensor[(1, 189), int64] */)
}

def @func_8472() -> (Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), float64]) {
  @func_8470() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), float64]) */
}

def @func_5916(%var_5913: bool, %var_5914: Tensor[(13, 2, 13), bool], %var_5915: Tensor[(60, 1), float64]) -> (Tensor[(13, 2, 13), bool], Tensor[(60), float64], Tensor[(60, 1), float64]) {
  @func_5911(%var_5913, %var_5914, %var_5915) /* ty=(Tensor[(13, 2, 13), bool], Tensor[(60), float64], Tensor[(60, 1), float64]) */
}

def @func_11187() -> (Tensor[(16, 11, 15), float64], Tensor[(14, 12, 2), float64], Tensor[(336), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) {
  %346 = cast(meta[relay.Constant][22] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %347 = cast(meta[relay.Constant][23] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %348 = reshape(%346, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), float64] */;
  %349 = reshape(%347, newshape=[1728]) /* ty=Tensor[(1728), uint16] */;
  %350 = @func_9573(%348, %349) /* ty=(Tensor[(14, 12, 2), float64], Tensor[(1728), uint16], Tensor[(1728), uint16]) */;
  %351 = @func_10824() /* ty=Tensor[(16, 11, 15), float64] */;
  %352 = %350.0;
  %353 = @func_9609() /* ty=Tensor[(16, 11, 15), float64] */;
  (%351, %352, meta[relay.Constant][22] /* ty=Tensor[(336), float64] */, meta[relay.Constant][23] /* ty=Tensor[(1728), uint16] */, %353)
}

def @func_8259() -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(3, 10, 2), float64]) {
  %367 = fn () -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(3, 10, 2), float64]) {
    %354 = cast(meta[relay.Constant][24] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %355 = cast(meta[relay.Constant][24] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %356 = reshape(%354, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %357 = reshape(%355, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %358 = @func_1170(%356, %357) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %360 = cast(meta[relay.Constant][24] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %361 = reshape(%359, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %362 = reshape(%360, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %363 = @func_1170(%361, %362) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %364 = @func_7794() /* ty=Tensor[(60), float64] */;
    %365 = %358.2;
    %366 = %363.1;
    (%364, %365, meta[relay.Constant][24] /* ty=Tensor[(1728), uint16] */, %366)
  };
  %367() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(3, 10, 2), float64]) */
}

def @func_4858() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  %368 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %369 = @func_4308() /* ty=Tensor[(16, 11, 15), float64] */;
  %370 = %368.0;
  (%369, %370)
}

def @func_5062(%var_5060: Tensor[(1, 5, 7), float32], %var_5061: Tensor[(462), float32]) -> (Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(?, 5, 7), float32]) {
  @func_5058(%var_5060, %var_5061) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(?, 5, 7), float32]) */
}

def @func_5015() -> (Tensor[(16, 11, 15), float64],) {
  %373 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %371 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %372 = %371.0;
    (%372,)
  };
  %373() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_5935(%var_5923: Tensor[(12, 8, 15), int8], %var_5924: Tensor[(12, 8, 15), int8]) -> Tensor[(12, 8, 15), bool] {
  %374 = cast(%var_5924, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %375 = shape_of(%var_5923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%var_5923, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%376, %377) /* ty=Tensor[(12, 8, 15), bool] */
}

def @func_2509(%var_2507: Tensor[(7, 2, 5), float32]) -> (Tensor[(7, 2, 5), float32],) {
  @func_2506(%var_2507) /* ty=(Tensor[(7, 2, 5), float32],) */
}

def @func_7617(%var_7597: Tensor[(4, 7, 8), uint32]) -> Tensor[(4, 7, 8), uint32] {
  %378 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 7, 8), uint32] */, dtype="uint32") /* ty=Tensor[(4, 7, 8), uint32] */;
  %379 = shape_of(%var_7597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_7597, dtype="uint32") /* ty=Tensor[(4, 7, 8), uint32] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%380, %381) /* ty=Tensor[(4, 7, 8), uint32] */
}

def @func_4268() -> (Tensor[(16, 11, 15), float64],) {
  @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_6295(%var_6293: float64) -> (Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) {
  @func_6292(%var_6293) /* ty=(Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) */
}

def @func_7528() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float32], Tensor[(245), float64], float64, Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  @func_7526() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float32], Tensor[(245), float64], float64, Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */
}

def @func_5722() -> Tensor[(16, 11, 15), float64] {
  @func_5522() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_9103() -> (Tensor[(16, 11, 15), float64],) {
  %384 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %382 = @func_7372() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %383 = %382.0;
    (%383,)
  };
  %384() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_4568() -> (Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */
}

def @func_6670() -> (Tensor[(16, 11, 15), float64],) {
  %385 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
  (%385,)
}

def @func_6856() -> Tensor[(16, 11, 15), float64] {
  @func_6854() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_9500() -> (Tensor[(16, 12, 9), float64],) {
  %386 = @func_7740() /* ty=(Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */;
  %387 = %386.1;
  (%387,)
}

def @func_9882(%var_9804: Tensor[(24, 26), int8]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(8, 13, 6), int8], Tensor[(24, 26), int8], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(1728), uint16]) {
  %388 = @func_4790() /* ty=(Tensor[(60), float64],) */;
  %389 = cast(meta[relay.Constant][26] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %390 = reshape(%389, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
  %391 = @func_661(%390) /* ty=(Tensor[(1, 8, 8), float32],) */;
  %392 = cast(%var_9804, dtype="int8") /* ty=Tensor[(24, 26), int8] */;
  %393 = cast(meta[relay.Constant][27] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %394 = cast(meta[relay.Constant][27] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %395 = reshape(%392, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), int8] */;
  %396 = reshape(%393, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %397 = reshape(%394, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
  %398 = @func_3253(%395, %396, %397) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */;
  %399 = @func_7231() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %400 = cast(meta[relay.Constant][28] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %401 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(1728), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %402 = cast(meta[relay.Constant][27] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %404 = %388.0;
  %405 = @func_6912() /* ty=Tensor[(16, 11, 15), float64] */;
  %406 = %391.0;
  %407 = %398.0;
  %408 = @func_6666() /* ty=Tensor[(16, 11, 15), float64] */;
  %409 = %399.0;
  %410 = left_shift(%402, %403) /* ty=Tensor[(1728), uint16] */;
  (%404, %405, %406, meta[relay.Constant][26] /* ty=Tensor[(64), float32] */, %407, %var_9804, %408, %409, %410)
}

def @func_3569(%var_3567: Tensor[(8, 8, 1), int32], %var_3568: Tensor[(672), float64]) -> (Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(8, 8, 2), float32]) {
  %423 = fn (%var_3542: Tensor[(8, 8, 1), int32], %var_3550: Tensor[(672), float64]) -> (Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(8, 8, 2), float32]) {
    %411 = cast(%var_3550, dtype="float64") /* ty=Tensor[(672), float64] */;
    %412 = reshape(%411, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float64] */;
    %413 = @func_1745(%412) /* ty=(Tensor[(6, 16, 7), float64],) */;
    %414 = cast(%var_3542, dtype="int32") /* ty=Tensor[(8, 8, 1), int32] */;
    %415 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 8, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 8, 2), int32] */;
    %416 = bitwise_xor(%414, %415) /* ty=Tensor[(8, 8, 2), int32] */;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(8, 8, 2), float32] */;
    %418 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(8, 8, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %419 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 8, 2), int32] */, dtype="float32") /* ty=Tensor[(8, 8, 2), float32] */;
    %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %421 = %413.0;
    %422 = mod(%419, %420) /* ty=Tensor[(8, 8, 2), float32] */;
    (%421, %var_3550, %422)
  };
  %423(%var_3567, %var_3568) /* ty=(Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(8, 8, 2), float32]) */
}

def @func_445(%var_444: Tensor[(13, 5, 4), float64]) -> (Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) {
  %429 = fn (%var_418: Tensor[(13, 5, 4), float64]) -> (Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) {
    %424 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 1, 4), float64] */, dtype="bool") /* ty=Tensor[(13, 1, 4), bool] */;
    %425 = cast(%var_418, dtype="bool") /* ty=Tensor[(13, 5, 4), bool] */;
    %426 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 1, 4), float64] */, dtype="float32") /* ty=Tensor[(13, 1, 4), float32] */;
    %427 = not_equal(%424, %425) /* ty=Tensor[(13, 5, 4), bool] */;
    %428 = asin(%426) /* ty=Tensor[(13, 1, 4), float32] */;
    (%427, %428)
  };
  %429(%var_444) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */
}

def @func_9207(%var_9206: Tensor[(7, 11, 3), float64]) -> (Tensor[(7, 11, 3), float64],) {
  %432 = fn (%var_9201: Tensor[(7, 11, 3), float64]) -> (Tensor[(7, 11, 3), float64],) {
    %430 = cast(%var_9201, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
    %431 = sinh(%430) /* ty=Tensor[(7, 11, 3), float64] */;
    (%431,)
  };
  %432(%var_9206) /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_4266() -> (Tensor[(16, 11, 15), float64],) {
  %433 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %434 = erf(%433) /* ty=Tensor[(16, 11, 15), float64] */;
  (%434,)
}

def @func_9609() -> Tensor[(16, 11, 15), float64] {
  @func_5416() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_1095(%var_1064: Tensor[(7, 6, 6), float32], %var_1082: Tensor[(2730), bool], %var_1083: Tensor[(60), float64]) -> (Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) {
  %435 = cast(%var_1082, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %436 = cast(%var_1082, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %437 = cast(%var_1083, dtype="float64") /* ty=Tensor[(60), float64] */;
  %438 = reshape(%435, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %439 = reshape(%436, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %440 = reshape(%437, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %441 = @func_790(%438, %439, %440) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %442 = cast(%var_1064, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  %443 = atan(%442) /* ty=Tensor[(7, 6, 6), float32] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(7, 6, 6), float32] */;
  %445 = %441.1;
  %446 = sqrt(%444) /* ty=Tensor[(7, 6, 6), float32] */;
  (%445, %var_1082, %var_1083, %446)
}

def @func_4796() -> (Tensor[(16, 11, 15), float64],) {
  %449 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %447 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %448 = %447.0;
    (%448,)
  };
  %449() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_10970(%var_10968: Tensor[(224), uint32]) -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64], Tensor[(60), float64], Tensor[(4, 7, 8), uint32], Tensor[(224), uint32]) {
  @func_10967(%var_10968) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64], Tensor[(60), float64], Tensor[(4, 7, 8), uint32], Tensor[(224), uint32]) */
}

def @func_10355() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  %452 = fn () -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
    %450 = @func_9916() /* ty=Tensor[(60), float64] */;
    %451 = @func_6912() /* ty=Tensor[(16, 11, 15), float64] */;
    (%450, %451)
  };
  %452() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_11213() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32]) {
  %453 = cast(meta[relay.Constant][32] /* ty=Tensor[(70), float32] */, dtype="float32") /* ty=Tensor[(70), float32] */;
  %454 = reshape(%453, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
  %455 = @func_2506(%454) /* ty=(Tensor[(7, 2, 5), float32],) */;
  %456 = @func_7794() /* ty=Tensor[(60), float64] */;
  %457 = %455.0;
  (%456, %457, meta[relay.Constant][32] /* ty=Tensor[(70), float32] */)
}

def @func_9246(%var_9244: Tensor[(16, 11, 15), float64], %var_9245: Tensor[(35), float32]) -> (Tensor[(16, 11, 15), int16], Tensor[(6, 7, 11), float32], Tensor[(35), float32], Tensor[(2160), float64]) {
  @func_9242(%var_9244, %var_9245) /* ty=(Tensor[(16, 11, 15), int16], Tensor[(6, 7, 11), float32], Tensor[(35), float32], Tensor[(2160), float64]) */
}

def @func_6606() -> Tensor[(16, 11, 15), float64] {
  %458 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
  %459 = cast(%458, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  log10(%459) /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_4434(%var_4395: Tensor[(4, 1, 13), uint16], %var_4396: Tensor[(4, 15, 13), uint16], %var_4413: Tensor[(4, 15, 13), uint16], %var_4426: Tensor[(4, 15, 13), uint16]) -> (Tensor[(4, 15, 13), int64], Tensor[(4, 15, 13), float64]) {
  %460 = cast(%var_4413, dtype="int64") /* ty=Tensor[(4, 15, 13), int64] */;
  %461 = shape_of(%var_4396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_4396, dtype="int64") /* ty=Tensor[(4, 15, 13), int64] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %464 = cast(%var_4395, dtype="uint16") /* ty=Tensor[(4, 1, 13), uint16] */;
  %465 = cast(%var_4396, dtype="uint16") /* ty=Tensor[(4, 15, 13), uint16] */;
  %466 = add(%464, %465) /* ty=Tensor[(4, 15, 13), uint16] */;
  %467 = cast(%var_4426, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %468 = shape_of(%466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%466, dtype="float64") /* ty=Tensor[(4, 15, 13), float64] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %471 = subtract(%462, %463) /* ty=Tensor[(4, 15, 13), int64] */;
  %472 = mod(%469, %470) /* ty=Tensor[(4, 15, 13), float64] */;
  (%471, %472)
}

def @func_8527(%var_8525: Tensor[(16, 1, 5), float64]) -> (Tensor[(16, ?, 5), float64],) {
  @func_8524(%var_8525) /* ty=(Tensor[(16, ?, 5), float64],) */
}

def @func_6672() -> (Tensor[(16, 11, 15), float64],) {
  @func_6670() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_6826(%var_6825: Tensor[(880), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  %487 = fn (%var_6802: Tensor[(880), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
    %473 = cast(%var_6802, dtype="float32") /* ty=Tensor[(880), float32] */;
    %474 = cast(%var_6802, dtype="float32") /* ty=Tensor[(880), float32] */;
    %475 = cast(meta[relay.Constant][33] /* ty=Tensor[(1080, 2), float64] */, dtype="float64") /* ty=Tensor[(1080, 2), float64] */;
    %476 = cast(meta[relay.Constant][34] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
    %477 = cast(meta[relay.Constant][35] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %478 = reshape(%473, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
    %479 = reshape(%474, newshape=[16, 5, 11]) /* ty=Tensor[(16, 5, 11), float32] */;
    %480 = reshape(%475, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
    %481 = reshape(%476, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
    %482 = reshape(%477, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %483 = @func_2853(%478, %479, %480, %481, %482) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) */;
    %484 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
    %485 = %483.0;
    %486 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
    (%484, %485, %var_6802, meta[relay.Constant][33] /* ty=Tensor[(1080, 2), float64] */, meta[relay.Constant][34] /* ty=Tensor[(2730), bool] */, meta[relay.Constant][35] /* ty=Tensor[(60), float64] */, %486)
  };
  %487(%var_6825) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_8633() -> Tensor[(189), uint64] {
  @func_8631() /* ty=Tensor[(189), uint64] */
}

def @func_9724() -> (Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) {
  %488 = @func_4677() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) */;
  %489 = %488.1;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(13, 1, 4), float64] */;
  %491 = @func_7372() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %492 = @func_6912() /* ty=Tensor[(16, 11, 15), float64] */;
  %493 = sqrt(%490) /* ty=Tensor[(13, 1, 4), float64] */;
  %494 = %491.0;
  (%492, %493, %494)
}

def @func_7105() -> (Tensor[(60), float64],) {
  %497 = fn () -> (Tensor[(60), float64],) {
    %495 = @func_5502() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */;
    %496 = %495.1;
    (%496,)
  };
  %497() /* ty=(Tensor[(60), float64],) */
}

def @func_4440(%var_4436: Tensor[(4, 1, 13), uint16], %var_4437: Tensor[(4, 15, 13), uint16], %var_4438: Tensor[(4, 15, 13), uint16], %var_4439: Tensor[(4, 15, 13), uint16]) -> (Tensor[(4, 15, 13), int64], Tensor[(4, 15, 13), float64]) {
  @func_4434(%var_4436, %var_4437, %var_4438, %var_4439) /* ty=(Tensor[(4, 15, 13), int64], Tensor[(4, 15, 13), float64]) */
}

def @func_8000(%var_7973: Tensor[(5, 14, 13), float64]) -> Tensor[(5, 14, 13), bool] {
  %498 = cast(%var_7973, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %499 = rsqrt(%498) /* ty=Tensor[(5, 14, 13), float64] */;
  %500 = cast(%var_7973, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%499, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%502, %503) /* ty=Tensor[(5, 14, 13), bool] */
}

def @func_9993() -> Tensor[(16, 11, 15), float64] {
  %505 = fn () -> Tensor[(16, 11, 15), float64] {
    %504 = @func_4677() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float32], Tensor[(260), float64]) */;
    %504.0
  };
  %505() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_2891(%var_2889: Tensor[(7, 7, 7), float32], %var_2890: Tensor[(7, 7, 7), float32]) -> (Tensor[(7, 7, 7), float32], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) {
  %515 = fn (%var_2861: Tensor[(7, 7, 7), float32], %var_2862: Tensor[(7, 7, 7), float32]) -> (Tensor[(7, 7, 7), float32], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) {
    %506 = cast(%var_2862, dtype="float32") /* ty=Tensor[(7, 7, 7), float32] */;
    %507 = shape_of(%var_2861, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%var_2861, dtype="float32") /* ty=Tensor[(7, 7, 7), float32] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %510 = cast(meta[relay.Constant][36] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
    %511 = reshape(%510, newshape=[1, 8, 8]) /* ty=Tensor[(1, 8, 8), float32] */;
    %512 = @func_661(%511) /* ty=(Tensor[(1, 8, 8), float32],) */;
    %513 = subtract(%508, %509) /* ty=Tensor[(7, 7, 7), float32] */;
    %514 = %512.0;
    (%513, %514, meta[relay.Constant][36] /* ty=Tensor[(64), float32] */)
  };
  %515(%var_2889, %var_2890) /* ty=(Tensor[(7, 7, 7), float32], Tensor[(1, 8, 8), float32], Tensor[(64), float32]) */
}

def @func_9885(%var_9883: Tensor[(24, 26), int8]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(8, 13, 6), int8], Tensor[(24, 26), int8], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(1728), uint16]) {
  @func_9882(%var_9883) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(1, 8, 8), float32], Tensor[(64), float32], Tensor[(8, 13, 6), int8], Tensor[(24, 26), int8], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(1728), uint16]) */
}

def @func_10142() -> Tensor[(56, 12), float64] {
  %516 = @func_7488() /* ty=(Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */;
  %516.5
}

def @func_5523() -> Tensor[(16, 11, 15), float64] {
  %517 = fn () -> Tensor[(16, 11, 15), float64] {
    @func_5416() /* ty=Tensor[(16, 11, 15), float64] */
  };
  %517() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_5417() -> Tensor[(16, 11, 15), float64] {
  %519 = fn () -> Tensor[(16, 11, 15), float64] {
    %518 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %518.0
  };
  %519() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_6667() -> Tensor[(16, 11, 15), float64] {
  %520 = fn () -> Tensor[(16, 11, 15), float64] {
    @func_5450() /* ty=Tensor[(16, 11, 15), float64] */
  };
  %520() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_6854() -> Tensor[(16, 11, 15), float64] {
  @func_5416() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_8470() -> (Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), float64]) {
  %521 = @func_7869() /* ty=(Tensor[(9, 7, 3), float64],) */;
  %522 = @func_7890() /* ty=Tensor[(16, 11, 15), float64] */;
  %523 = %521.0;
  (%522, %523)
}

def @func_9307() -> Tensor[(16, 11, 15), float64] {
  %525 = fn () -> Tensor[(16, 11, 15), float64] {
    %524 = @func_5502() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */;
    %524.0
  };
  %525() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_8207(%var_8191: Tensor[(5, 3, 8), uint64], %var_8192: Tensor[(5, 3, 8), uint64]) -> Tensor[(5, 3, 8), bool] {
  %526 = cast(%var_8192, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %527 = shape_of(%var_8191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%var_8191, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%528, %529) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_2506(%var_2503: Tensor[(7, 2, 5), float32]) -> (Tensor[(7, 2, 5), float32],) {
  %530 = cast(%var_2503, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %531 = asin(%530) /* ty=Tensor[(7, 2, 5), float32] */;
  (%531,)
}

def @func_7144(%var_7143: Tensor[(504), uint64]) -> (Tensor[(16, 11, 15), float64], Tensor[(14, 4, 9), uint64], Tensor[(504), uint64], Tensor[(60), float64]) {
  %540 = fn (%var_7111: Tensor[(504), uint64]) -> (Tensor[(16, 11, 15), float64], Tensor[(14, 4, 9), uint64], Tensor[(504), uint64], Tensor[(60), float64]) {
    %532 = cast(%var_7111, dtype="uint64") /* ty=Tensor[(504), uint64] */;
    %533 = cast(%var_7111, dtype="uint64") /* ty=Tensor[(504), uint64] */;
    %534 = reshape(%532, newshape=[14, 4, 9]) /* ty=Tensor[(14, 4, 9), uint64] */;
    %535 = reshape(%533, newshape=[14, 4, 9]) /* ty=Tensor[(14, 4, 9), uint64] */;
    %536 = @func_7104() /* ty=(Tensor[(60), float64],) */;
    %537 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
    %538 = @func_5073(%534, %535) /* ty=Tensor[(14, 4, 9), uint64] */;
    %539 = %536.0;
    (%537, %538, %var_7111, %539)
  };
  %540(%var_7143) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(14, 4, 9), uint64], Tensor[(504), uint64], Tensor[(60), float64]) */
}

def @func_10726(%var_10725: Tensor[(5), float64]) -> (Tensor[(16, 7, 3), float32], Tensor[(336), int32], Tensor[(16, 11, 15), float32], Tensor[(189), uint64], Tensor[(60), float64], Tensor[(5), float64], Tensor[(13650), bool]) {
  %556 = fn (%var_10711: Tensor[(5), float64]) -> (Tensor[(16, 7, 3), float32], Tensor[(336), int32], Tensor[(16, 11, 15), float32], Tensor[(189), uint64], Tensor[(60), float64], Tensor[(5), float64], Tensor[(13650), bool]) {
    %541 = cast(meta[relay.Constant][37] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
    %542 = reshape(%541, newshape=[16, 7, 3]) /* ty=Tensor[(16, 7, 3), int32] */;
    %543 = @func_10354() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */;
    %544 = %543.1;
    %545 = cast(%544, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
    %546 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
    %547 = cast(%var_10711, dtype="float64") /* ty=Tensor[(5), float64] */;
    %548 = cast(meta[relay.Constant][38] /* ty=Tensor[(13650), bool] */, dtype="bool") /* ty=Tensor[(13650), bool] */;
    %549 = reshape(%547, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
    %550 = reshape(%548, newshape=[2730, 5]) /* ty=Tensor[(2730, 5), bool] */;
    %551 = @func_4598(%549, %550) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) */;
    %552 = @func_4229(%542) /* ty=Tensor[(16, 7, 3), float32] */;
    %553 = acosh(%545) /* ty=Tensor[(16, 11, 15), float32] */;
    %554 = %546.1;
    %555 = %551.8;
    (%552, meta[relay.Constant][37] /* ty=Tensor[(336), int32] */, %553, %554, %555, %var_10711, meta[relay.Constant][38] /* ty=Tensor[(13650), bool] */)
  };
  %556(%var_10725) /* ty=(Tensor[(16, 7, 3), float32], Tensor[(336), int32], Tensor[(16, 11, 15), float32], Tensor[(189), uint64], Tensor[(60), float64], Tensor[(5), float64], Tensor[(13650), bool]) */
}

def @func_10812() -> (Tensor[(16, 11, 15), float64],) {
  @func_10810() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_3634(%var_3633: Tensor[(312, 2), int8]) -> (Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) {
  %567 = fn (%var_3626: Tensor[(312, 2), int8]) -> (Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) {
    %557 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 6, 11), float32] */;
    %558 = cast(%var_3626, dtype="int8") /* ty=Tensor[(312, 2), int8] */;
    %559 = cast(meta[relay.Constant][40] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %560 = cast(meta[relay.Constant][40] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %561 = reshape(%558, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), int8] */;
    %562 = reshape(%559, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
    %563 = reshape(%560, newshape=[2, 864]) /* ty=Tensor[(2, 864), uint16] */;
    %564 = @func_3253(%561, %562, %563) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */;
    %565 = exp(%557) /* ty=Tensor[(10, 6, 11), float32] */;
    %566 = %564.1;
    (%565, %566, %var_3626, meta[relay.Constant][40] /* ty=Tensor[(1728), uint16] */)
  };
  %567(%var_3633) /* ty=(Tensor[(10, 6, 11), float32], Tensor[(16, 12, 9), float64], Tensor[(312, 2), int8], Tensor[(1728), uint16]) */
}

def @func_87(%var_85: Tensor[(3, 10, 2), float64]) -> (Tensor[(3, 10, 2), float64],) {
  @func_84(%var_85) /* ty=(Tensor[(3, 10, 2), float64],) */
}

def @func_7373() -> (Tensor[(16, 11, 15), float64],) {
  %569 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %568 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
    (%568,)
  };
  %569() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_1576(%var_1574: Tensor[(6, 7, 11), float32], %var_1575: Tensor[(6, 7, 11), float32]) -> (Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %579 = fn (%var_1548: Tensor[(6, 7, 11), float32], %var_1549: Tensor[(6, 7, 11), float32]) -> (Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
    %570 = cast(%var_1549, dtype="float32") /* ty=Tensor[(6, 7, 11), float32] */;
    %571 = shape_of(%var_1548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%var_1548, dtype="float32") /* ty=Tensor[(6, 7, 11), float32] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %574 = cast(meta[relay.Constant][41] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %575 = reshape(%574, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
    %576 = @func_84(%575) /* ty=(Tensor[(3, 10, 2), float64],) */;
    %577 = floor_mod(%572, %573) /* ty=Tensor[(6, 7, 11), float32] */;
    %578 = %576.0;
    (%577, %578, meta[relay.Constant][41] /* ty=Tensor[(60), float64] */)
  };
  %579(%var_1574, %var_1575) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */
}

def @func_4502(%var_4500: float64, %var_4501: Tensor[(7, 5, 7), float64]) -> (Tensor[(7, 5, 7), float64], Tensor[(260), float64], Tensor[(2700, 1), int64]) {
  %596 = fn (%var_4469: float64, %var_4470: Tensor[(7, 5, 7), float64]) -> (Tensor[(7, 5, 7), float64], Tensor[(260), float64], Tensor[(2700, 1), int64]) {
    %580 = cast(%var_4469, dtype="float64") /* ty=float64 */;
    %581 = cast(%var_4470, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
    %582 = power(%580, %581) /* ty=Tensor[(7, 5, 7), float64] */;
    %583 = cast(%var_4470, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
    %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
    %585 = cast(%582, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %587 = cast(meta[relay.Constant][42] /* ty=Tensor[(2700, 1), int64] */, dtype="int64") /* ty=Tensor[(2700, 1), int64] */;
    %588 = cast(meta[relay.Constant][42] /* ty=Tensor[(2700, 1), int64] */, dtype="int64") /* ty=Tensor[(2700, 1), int64] */;
    %589 = cast(meta[relay.Constant][42] /* ty=Tensor[(2700, 1), int64] */, dtype="int8") /* ty=Tensor[(2700, 1), int8] */;
    %590 = reshape(%587, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
    %591 = reshape(%588, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int64] */;
    %592 = reshape(%589, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), int8] */;
    %593 = @func_3341(%590, %591, %592) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %594 = floor_mod(%585, %586) /* ty=Tensor[(7, 5, 7), float64] */;
    %595 = %593.2;
    (%594, %595, meta[relay.Constant][42] /* ty=Tensor[(2700, 1), int64] */)
  };
  %596(%var_4500, %var_4501) /* ty=(Tensor[(7, 5, 7), float64], Tensor[(260), float64], Tensor[(2700, 1), int64]) */
}

def @func_7892() -> Tensor[(16, 11, 15), float64] {
  @func_7890() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_5987() -> (Tensor[(60), float64],) {
  %597 = @func_5596() /* ty=(Tensor[(60), float64],) */;
  %598 = %597.0;
  (%598,)
}

def @func_5822(%var_5817: Tensor[(60), float64]) -> (Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) {
  %599 = @func_4556() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %600 = %599.0;
  %601 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 15), float64] */, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="uint8") /* ty=Tensor[(16, 11, 15), uint8] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %605 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %606 = cast(meta[relay.Constant][44] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %607 = cast(meta[relay.Constant][45] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %608 = cast(%var_5817, dtype="float64") /* ty=Tensor[(60), float64] */;
  %609 = reshape(%606, newshape=[7, 6, 6]) /* ty=Tensor[(7, 6, 6), float32] */;
  %610 = reshape(%607, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %611 = reshape(%608, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %612 = @func_1095(%609, %610, %611) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */;
  %613 = minimum(%603, %604) /* ty=Tensor[(16, 11, 15), uint8] */;
  %614 = %605.1;
  %615 = %612.2;
  (%613, %614, %615, meta[relay.Constant][44] /* ty=Tensor[(252), float32] */, meta[relay.Constant][45] /* ty=Tensor[(2730), bool] */, %var_5817)
}

def @func_84(%var_76: Tensor[(3, 10, 2), float64]) -> (Tensor[(3, 10, 2), float64],) {
  %616 = cast(%var_76, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %617 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(3, 10, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 10, 2), float64] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %620 = divide(%618, %619) /* ty=Tensor[(3, 10, 2), float64] */;
  (%620,)
}

def @func_4566() -> (Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %621 = cast(meta[relay.Constant][47] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %622 = reshape(%621, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
  %623 = @func_84(%622) /* ty=(Tensor[(3, 10, 2), float64],) */;
  %624 = @func_4308() /* ty=Tensor[(16, 11, 15), float64] */;
  %625 = %623.0;
  (%624, %625, meta[relay.Constant][47] /* ty=Tensor[(60), float64] */)
}

def @func_1745(%var_1734: Tensor[(6, 16, 7), float64]) -> (Tensor[(6, 16, 7), float64],) {
  %626 = cast(%var_1734, dtype="float64") /* ty=Tensor[(6, 16, 7), float64] */;
  %627 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(6, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 16, 7), float64] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %630 = power(%628, %629) /* ty=Tensor[(6, 16, 7), float64] */;
  (%630,)
}

def @func_4792() -> (Tensor[(60), float64],) {
  @func_4790() /* ty=(Tensor[(60), float64],) */
}

def @func_10144() -> Tensor[(56, 12), float64] {
  @func_10142() /* ty=Tensor[(56, 12), float64] */
}

def @func_4310() -> Tensor[(16, 11, 15), float64] {
  @func_4308() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_663(%var_662: Tensor[(1, 8, 8), float32]) -> (Tensor[(1, 8, 8), float32],) {
  %633 = fn (%var_656: Tensor[(1, 8, 8), float32]) -> (Tensor[(1, 8, 8), float32],) {
    %631 = cast(%var_656, dtype="float32") /* ty=Tensor[(1, 8, 8), float32] */;
    %632 = tan(%631) /* ty=Tensor[(1, 8, 8), float32] */;
    (%632,)
  };
  %633(%var_662) /* ty=(Tensor[(1, 8, 8), float32],) */
}

def @func_5503() -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  %638 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
    %634 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %635 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %636 = %634.0;
    %637 = %635.2;
    (%636, %637)
  };
  %638() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */
}

def @func_4602(%var_4600: Tensor[(1, 5), float64], %var_4601: Tensor[(2730, 5), bool]) -> (Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) {
  @func_4598(%var_4600, %var_4601) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) */
}

def @func_5825(%var_5823: Tensor[(60), float64]) -> (Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) {
  @func_5822(%var_5823) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */
}

def @func_1100(%var_1097: Tensor[(7, 6, 6), float32], %var_1098: Tensor[(2730), bool], %var_1099: Tensor[(60), float64]) -> (Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) {
  @func_1095(%var_1097, %var_1098, %var_1099) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */
}

def @func_7489() -> (Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) {
  %660 = fn () -> (Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) {
    %639 = @func_5502() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */;
    %640 = cast(meta[relay.Constant][49] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
    %641 = cast(meta[relay.Constant][50] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
    %642 = %639.1;
    %643 = cast(%642, dtype="float64") /* ty=Tensor[(60), float64] */;
    %644 = reshape(%640, newshape=[7, 6, 6]) /* ty=Tensor[(7, 6, 6), float32] */;
    %645 = reshape(%641, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
    %646 = reshape(%643, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %647 = @func_1095(%644, %645, %646) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */;
    %648 = cast(meta[relay.Constant][51] /* ty=Tensor[(56, 12), float64] */, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
    %649 = reshape(%648, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %650 = @func_5137(%649) /* ty=(Tensor[(60), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(16, 11, 15), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(1, 8, 8), float32], float64, Tensor[(5, 1), float64], Tensor[(64), int32]) */;
    %651 = cast(meta[relay.Constant][52] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %652 = cast(meta[relay.Constant][52] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %653 = reshape(%651, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %654 = reshape(%652, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %655 = @func_1170(%653, %654) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %656 = %647.3;
    %657 = %650.1;
    %658 = @func_4743() /* ty=Tensor[(60), float64] */;
    %659 = %655.0;
    (%642, %656, meta[relay.Constant][49] /* ty=Tensor[(252), float32] */, meta[relay.Constant][50] /* ty=Tensor[(2730), bool] */, %657, meta[relay.Constant][51] /* ty=Tensor[(56, 12), float64] */, %658, %659, meta[relay.Constant][52] /* ty=Tensor[(1728), uint16] */)
  };
  %660() /* ty=(Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */
}

def @func_8701() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  %664 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
    %661 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %662 = @func_7822() /* ty=Tensor[(16, 11, 15), float64] */;
    %663 = %661.0;
    (%662, %663)
  };
  %664() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_5939(%var_5937: Tensor[(12, 8, 15), int8], %var_5938: Tensor[(12, 8, 15), int8]) -> Tensor[(12, 8, 15), bool] {
  @func_5935(%var_5937, %var_5938) /* ty=Tensor[(12, 8, 15), bool] */
}

def @func_8023() -> Tensor[(16, 11, 15), float32] {
  @func_8021() /* ty=Tensor[(16, 11, 15), float32] */
}

def @func_8003(%var_8001: Tensor[(5, 14, 13), float64]) -> Tensor[(5, 14, 13), bool] {
  @func_8000(%var_8001) /* ty=Tensor[(5, 14, 13), bool] */
}

def @func_8272() -> Tensor[(16, 11, 15), float64] {
  @func_8270() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_10257(%var_10256: float64) -> (Tensor[(16, 11, 15), float32], Tensor[(7, 5, 7), float64], float64) {
  %671 = fn (%var_10219: float64) -> (Tensor[(16, 11, 15), float32], Tensor[(7, 5, 7), float64], float64) {
    %665 = @func_9333() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(60), float64]) */;
    %666 = cast(%var_10219, dtype="float64") /* ty=float64 */;
    %667 = reshape(%666, newshape=[]) /* ty=float64 */;
    %668 = @func_6292(%667) /* ty=(Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) */;
    %669 = %665.0;
    %670 = %668.2;
    (%669, %670, %var_10219)
  };
  %671(%var_10256) /* ty=(Tensor[(16, 11, 15), float32], Tensor[(7, 5, 7), float64], float64) */
}

def @func_8722() -> Tensor[(16, 11, 15), float64] {
  %673 = fn () -> Tensor[(16, 11, 15), float64] {
    %672 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %672.0
  };
  %673() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_9964(%var_9962: Tensor[(2688), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(14, 12, 16), float32], Tensor[(2688), float32]) {
  @func_9961(%var_9962) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(14, 12, 16), float32], Tensor[(2688), float32]) */
}

def @func_9611() -> Tensor[(16, 11, 15), float64] {
  @func_9609() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_1804(%var_1802: Tensor[(16, 9, 15), float64], %var_1803: Tensor[(16, 9, 15), float64]) -> (Tensor[(16, 9, 15), float64],) {
  %679 = fn (%var_1787: Tensor[(16, 9, 15), float64], %var_1788: Tensor[(16, 9, 15), float64]) -> (Tensor[(16, 9, 15), float64],) {
    %674 = cast(%var_1788, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
    %675 = shape_of(%var_1787, dtype="int32") /* ty=Tensor[(3), int32] */;
    %676 = cast(%var_1787, dtype="float64") /* ty=Tensor[(16, 9, 15), float64] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %678 = subtract(%676, %677) /* ty=Tensor[(16, 9, 15), float64] */;
    (%678,)
  };
  %679(%var_1802, %var_1803) /* ty=(Tensor[(16, 9, 15), float64],) */
}

def @func_7047() -> (Tensor[(60), float64],) {
  %682 = fn () -> (Tensor[(60), float64],) {
    %680 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
    %681 = %680.0;
    (%681,)
  };
  %682() /* ty=(Tensor[(60), float64],) */
}

def @func_8885(%var_8884: Tensor[(8, 3, 15), uint64]) -> (Tensor[(8, 3, 15), uint64],) {
  %688 = fn (%var_8856: Tensor[(8, 3, 15), uint64]) -> (Tensor[(8, 3, 15), uint64],) {
    %683 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 3, 15), uint64] */, dtype="uint64") /* ty=Tensor[(8, 3, 15), uint64] */;
    %684 = shape_of(%var_8856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %685 = cast(%var_8856, dtype="uint64") /* ty=Tensor[(8, 3, 15), uint64] */;
    %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %687 = bitwise_or(%685, %686) /* ty=Tensor[(8, 3, 15), uint64] */;
    (%687,)
  };
  %688(%var_8884) /* ty=(Tensor[(8, 3, 15), uint64],) */
}

def @func_9242(%var_9218: Tensor[(16, 11, 15), float64], %var_9232: Tensor[(35), float32]) -> (Tensor[(16, 11, 15), int16], Tensor[(6, 7, 11), float32], Tensor[(35), float32], Tensor[(2160), float64]) {
  %689 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
  %690 = cast(%var_9218, dtype="int16") /* ty=Tensor[(16, 11, 15), int16] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="int16") /* ty=Tensor[(16, 11, 15), int16] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %694 = cast(%var_9232, dtype="float32") /* ty=Tensor[(35), float32] */;
  %695 = cast(meta[relay.Constant][54] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %696 = reshape(%694, newshape=[35]) /* ty=Tensor[(35), float32] */;
  %697 = reshape(%695, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %698 = @func_5354(%696, %697) /* ty=(Tensor[(60), float64], Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(35), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */;
  %699 = add(%692, %693) /* ty=Tensor[(16, 11, 15), int16] */;
  %700 = %698.1;
  (%699, %700, %var_9232, meta[relay.Constant][54] /* ty=Tensor[(2160), float64] */)
}

def @func_7870() -> (Tensor[(9, 7, 3), float64],) {
  %703 = fn () -> (Tensor[(9, 7, 3), float64],) {
    %701 = @func_7651() /* ty=(Tensor[(9, 7, 3), float64],) */;
    %702 = %701.0;
    (%702,)
  };
  %703() /* ty=(Tensor[(9, 7, 3), float64],) */
}

def @func_10874() -> (Tensor[(16, 11, 15), float64],) {
  %704 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
  (%704,)
}

def @func_5357(%var_5355: Tensor[(35), float32], %var_5356: Tensor[(2160), float64]) -> (Tensor[(60), float64], Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(35), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) {
  %721 = fn (%var_5317: Tensor[(35), float32], %var_5337: Tensor[(2160), float64]) -> (Tensor[(60), float64], Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(35), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) {
    %705 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %706 = cast(%var_5317, dtype="float32") /* ty=Tensor[(35), float32] */;
    %707 = cast(meta[relay.Constant][55] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
    %708 = reshape(%706, newshape=[1, 5, 7]) /* ty=Tensor[(1, 5, 7), float32] */;
    %709 = reshape(%707, newshape=[462]) /* ty=Tensor[(462), float32] */;
    %710 = @func_5058(%708, %709) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(?, 5, 7), float32]) */;
    %711 = cast(%var_5317, dtype="float32") /* ty=Tensor[(35), float32] */;
    %712 = cast(%var_5337, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %713 = cast(%var_5337, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %714 = reshape(%712, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %715 = reshape(%713, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %716 = @func_1801(%714, %715) /* ty=(Tensor[(16, 9, 15), float64],) */;
    %717 = %705.2;
    %718 = %710.0;
    %719 = atanh(%711) /* ty=Tensor[(35), float32] */;
    %720 = %716.0;
    (%717, %718, meta[relay.Constant][55] /* ty=Tensor[(462), float32] */, %719, %720, %var_5337)
  };
  %721(%var_5355, %var_5356) /* ty=(Tensor[(60), float64], Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(35), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64]) */
}

def @func_11380() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64]) {
  %722 = @func_11000() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(672), float64]) */;
  %723 = @func_9178() /* ty=Tensor[(60), float64] */;
  %724 = %722.0;
  (%723, %724)
}

def @func_4308() -> Tensor[(16, 11, 15), float64] {
  %725 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %725.0
}

def @func_6389() -> (Tensor[(60), float64], Tensor[(16, 11, 15), float32]) {
  @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */
}

def @func_4203(%var_4201: Tensor[(15, 5, 7), int64]) -> (Tensor[(15, 5, 7), int64], Tensor[(16, 12, 9), float64], Tensor[(624), int8]) {
  @func_4200(%var_4201) /* ty=(Tensor[(15, 5, 7), int64], Tensor[(16, 12, 9), float64], Tensor[(624), int8]) */
}

def @func_5597() -> (Tensor[(60), float64],) {
  %728 = fn () -> (Tensor[(60), float64],) {
    %726 = @func_4790() /* ty=(Tensor[(60), float64],) */;
    %727 = %726.0;
    (%727,)
  };
  %728() /* ty=(Tensor[(60), float64],) */
}

def @func_9178() -> Tensor[(60), float64] {
  %729 = @func_7488() /* ty=(Tensor[(60), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(14, 13, 15), float64], Tensor[(56, 12), float64], Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */;
  %729.6
}

def @func_9726() -> (Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) {
  @func_9724() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_11328() -> Tensor[(16, 11, 15), float64] {
  @func_11326() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_9188() -> (Tensor[(16, 11, 15), float32],) {
  %732 = fn () -> (Tensor[(16, 11, 15), float32],) {
    %730 = @func_7325() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */;
    %731 = %730.0;
    (%731,)
  };
  %732() /* ty=(Tensor[(16, 11, 15), float32],) */
}

def @func_8753(%var_8751: Tensor[(14, 12, 16), float32]) -> (Tensor[(14, 12, 16), float32],) {
  @func_8750(%var_8751) /* ty=(Tensor[(14, 12, 16), float32],) */
}

def @func_4622(%var_4610: float64) -> (Tensor[(10, 15, 3), float32],) {
  %733 = cast(%var_4610, dtype="float64") /* ty=float64 */;
  %734 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 15, 3), float64] */, dtype="float64") /* ty=Tensor[(10, 15, 3), float64] */;
  %735 = floor_mod(%733, %734) /* ty=Tensor[(10, 15, 3), float64] */;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(10, 15, 3), float32] */;
  %737 = atanh(%736) /* ty=Tensor[(10, 15, 3), float32] */;
  (%737,)
}

def @func_9916() -> Tensor[(60), float64] {
  @func_7003() /* ty=Tensor[(60), float64] */
}

def @func_11326() -> Tensor[(16, 11, 15), float64] {
  %738 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %738.0
}

def @func_5882(%var_5877: Tensor[(1, 60), float64]) -> (Tensor[(9, 7, 3), int64], Tensor[(16, 11, 15), float64], Tensor[(9, 7, 3), int64], Tensor[(1, 60), float64]) {
  %739 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %740 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %741 = %740.0;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %743 = asinh(%742) /* ty=Tensor[(16, 11, 15), float64] */;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %745 = cast(%var_5877, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %746 = reshape(%745, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %747 = @func_5822(%746) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
  %748 = %739.1;
  %749 = sinh(%744) /* ty=Tensor[(16, 11, 15), float64] */;
  %750 = %747.1;
  (%748, %749, %750, %var_5877)
}

def @func_5692(%var_5628: Tensor[(1728), uint16]) -> (Tensor[(189), uint64], Tensor[(60), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) {
  %751 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
  %752 = cast(%var_5628, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %753 = cast(%var_5628, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
  %754 = reshape(%752, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %755 = reshape(%753, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
  %756 = @func_1170(%754, %755) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %757 = @func_5416() /* ty=Tensor[(16, 11, 15), float64] */;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
  %759 = %751.1;
  %760 = %756.2;
  %761 = log2(%758) /* ty=Tensor[(16, 11, 15), float64] */;
  (%759, %760, %var_5628, %761)
}

def @func_10756() -> (Tensor[(16, 11, 15), float64],) {
  @func_10754() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_7651() -> (Tensor[(9, 7, 3), float64],) {
  %762 = @func_5798() /* ty=(Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) */;
  %763 = %762.1;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(9, 7, 3), float64] */;
  %765 = atan(%764) /* ty=Tensor[(9, 7, 3), float64] */;
  (%765,)
}

def @func_9333() -> (Tensor[(16, 11, 15), float32], Tensor[(60), float64]) {
  %766 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
  %767 = @func_8434() /* ty=(Tensor[(60), float64],) */;
  %768 = %766.1;
  %769 = %767.0;
  (%768, %769)
}

def @func_5798() -> (Tensor[(60), float64], Tensor[(9, 7, 3), int64], Tensor[(189), bool]) {
  %770 = cast(meta[relay.Constant][57] /* ty=Tensor[(189), int64] */, dtype="int64") /* ty=Tensor[(189), int64] */;
  %771 = reshape(%770, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), int64] */;
  %772 = cast(meta[relay.Constant][57] /* ty=Tensor[(189), int64] */, dtype="float32") /* ty=Tensor[(189), float32] */;
  %773 = log2(%772) /* ty=Tensor[(189), float32] */;
  %774 = cast(meta[relay.Constant][57] /* ty=Tensor[(189), int64] */, dtype="bool") /* ty=Tensor[(189), bool] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(1), int32] */;
  %776 = cast(%773, dtype="bool") /* ty=Tensor[(189), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?), bool] */;
  %778 = @func_4743() /* ty=Tensor[(60), float64] */;
  %779 = @func_3845(%771) /* ty=Tensor[(9, 7, 3), int64] */;
  %780 = logical_or(%776, %777) /* ty=Tensor[(189), bool] */;
  (%778, %779, %780)
}

def @func_5451() -> Tensor[(16, 11, 15), float64] {
  %782 = fn () -> Tensor[(16, 11, 15), float64] {
    %781 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %781.0
  };
  %782() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_1174(%var_1172: Tensor[(16, 12, 9), uint16], %var_1173: Tensor[(16, 12, 9), uint16]) -> (Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  @func_1170(%var_1172, %var_1173) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */
}

def @func_10647(%var_10630: Tensor[(880), float32]) -> (Tensor[(60), float64], Tensor[(13, 1, 4), float64], Tensor[(?, 880), bool], Tensor[(16, 11, 15), float64]) {
  %783 = @func_9724() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) */;
  %784 = cast(%var_10630, dtype="float32") /* ty=Tensor[(880), float32] */;
  %785 = reshape(%784, newshape=[1, 880]) /* ty=Tensor[(1, 880), float32] */;
  %786 = @func_8380(%785) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(10, 15, 3), float32], float64, Tensor[(16, 11, 15), float64], Tensor[(1, 880), float64]) */;
  %787 = %786.4;
  %788 = cast(%var_10630, dtype="bool") /* ty=Tensor[(880), bool] */;
  %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(2), int32] */;
  %790 = cast(%787, dtype="bool") /* ty=Tensor[(1, 880), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %792 = @func_7003() /* ty=Tensor[(60), float64] */;
  %793 = %783.1;
  %794 = not_equal(%790, %791) /* ty=Tensor[(?, 880), bool] */;
  %795 = @func_7822() /* ty=Tensor[(16, 11, 15), float64] */;
  (%792, %793, %794, %795)
}

def @func_10650(%var_10648: Tensor[(880), float32]) -> (Tensor[(60), float64], Tensor[(13, 1, 4), float64], Tensor[(?, 880), bool], Tensor[(16, 11, 15), float64]) {
  @func_10647(%var_10648) /* ty=(Tensor[(60), float64], Tensor[(13, 1, 4), float64], Tensor[(?, 880), bool], Tensor[(16, 11, 15), float64]) */
}

def @func_7890() -> Tensor[(16, 11, 15), float64] {
  @func_4308() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_6292(%var_6289: float64) -> (Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) {
  %796 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %797 = cast(%var_6289, dtype="float64") /* ty=float64 */;
  %798 = cast(meta[relay.Constant][58] /* ty=Tensor[(245), float64] */, dtype="float64") /* ty=Tensor[(245), float64] */;
  %799 = reshape(%797, newshape=[]) /* ty=float64 */;
  %800 = reshape(%798, newshape=[7, 5, 7]) /* ty=Tensor[(7, 5, 7), float64] */;
  %801 = @func_4499(%799, %800) /* ty=(Tensor[(7, 5, 7), float64], Tensor[(260), float64], Tensor[(2700, 1), int64]) */;
  %802 = %796.1;
  %803 = @func_5722() /* ty=Tensor[(16, 11, 15), float64] */;
  %804 = %801.0;
  (%802, %803, %804, %var_6289, meta[relay.Constant][58] /* ty=Tensor[(245), float64] */)
}

def @func_1748(%var_1746: Tensor[(6, 16, 7), float64]) -> (Tensor[(6, 16, 7), float64],) {
  @func_1745(%var_1746) /* ty=(Tensor[(6, 16, 7), float64],) */
}

def @func_8524(%var_8507: Tensor[(16, 1, 5), float64]) -> (Tensor[(16, ?, 5), float64],) {
  %805 = cast(%var_8507, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %806 = sin(%805) /* ty=Tensor[(16, 1, 5), float64] */;
  %807 = cast(%var_8507, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="float64") /* ty=Tensor[(16, 1, 5), float64] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %811 = add(%809, %810) /* ty=Tensor[(16, ?, 5), float64] */;
  (%811,)
}

def @func_9742(%var_9740: Tensor[(16, 8, 13), int64]) -> Tensor[(16, 8, 13), int64] {
  @func_9739(%var_9740) /* ty=Tensor[(16, 8, 13), int64] */
}

def @func_10028() -> (Tensor[(60), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) {
  %812 = @func_5987() /* ty=(Tensor[(60), float64],) */;
  %813 = cast(meta[relay.Constant][59] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %814 = reshape(%813, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %815 = @func_6455(%814) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %816 = %812.0;
  %817 = %815.4;
  (%816, %817, meta[relay.Constant][59] /* ty=Tensor[(672), float64] */)
}

def @func_8211(%var_8209: Tensor[(5, 3, 8), uint64], %var_8210: Tensor[(5, 3, 8), uint64]) -> Tensor[(5, 3, 8), bool] {
  @func_8207(%var_8209, %var_8210) /* ty=Tensor[(5, 3, 8), bool] */
}

def @func_9502() -> (Tensor[(16, 12, 9), float64],) {
  @func_9500() /* ty=(Tensor[(16, 12, 9), float64],) */
}

def @func_11215() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32]) {
  @func_11213() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32]) */
}

def @func_6745(%var_6744: Tensor[(6, 13, 5), float64]) -> (Tensor[(6, 13, 5), float64],) {
  %823 = fn (%var_6738: Tensor[(6, 13, 5), float64]) -> (Tensor[(6, 13, 5), float64],) {
    %818 = cast(%var_6738, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
    %819 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(6, 13, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %820 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 13, 5), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 5), float64] */;
    %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %822 = add(%820, %821) /* ty=Tensor[(6, 13, 5), float64] */;
    (%822,)
  };
  %823(%var_6744) /* ty=(Tensor[(6, 13, 5), float64],) */
}

def @func_9272(%var_9270: Tensor[(5), float64], %var_9271: Tensor[(13650), bool]) -> (Tensor[(16, 11, 15), float64], float64, Tensor[(5), float64], Tensor[(13650), bool], Tensor[(252), float32], Tensor[(60, 1), float64]) {
  %835 = fn (%var_9258: Tensor[(5), float64], %var_9259: Tensor[(13650), bool]) -> (Tensor[(16, 11, 15), float64], float64, Tensor[(5), float64], Tensor[(13650), bool], Tensor[(252), float32], Tensor[(60, 1), float64]) {
    %824 = cast(%var_9258, dtype="float64") /* ty=Tensor[(5), float64] */;
    %825 = cast(%var_9259, dtype="bool") /* ty=Tensor[(13650), bool] */;
    %826 = reshape(%824, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
    %827 = reshape(%825, newshape=[2730, 5]) /* ty=Tensor[(2730, 5), bool] */;
    %828 = @func_4598(%826, %827) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(15, 15, 12), int8], Tensor[(2700), int64], Tensor[(1, 5), float64], float64, Tensor[(1, 5), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(60), float64], Tensor[(2730, 5), bool], Tensor[(9, 7, 3), int64], Tensor[(1, 189), int64]) */;
    %829 = cast(meta[relay.Constant][61] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
    %830 = reshape(%829, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %831 = @func_5822(%830) /* ty=(Tensor[(16, 11, 15), uint8], Tensor[(9, 7, 3), int64], Tensor[(60), float64], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64]) */;
    %832 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
    %833 = %828.4;
    %834 = %831.3;
    (%832, %833, %var_9258, %var_9259, %834, meta[relay.Constant][61] /* ty=Tensor[(60, 1), float64] */)
  };
  %835(%var_9270, %var_9271) /* ty=(Tensor[(16, 11, 15), float64], float64, Tensor[(5), float64], Tensor[(13650), bool], Tensor[(252), float32], Tensor[(60, 1), float64]) */
}

def @func_8021() -> Tensor[(16, 11, 15), float32] {
  %836 = @func_7325() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */;
  %836.0
}

def @func_5058(%var_5019: Tensor[(1, 5, 7), float32], %var_5031: Tensor[(462), float32]) -> (Tensor[(6, 7, 11), float32], Tensor[(462), float32], Tensor[(?, 5, 7), float32]) {
  %837 = cast(%var_5031, dtype="float32") /* ty=Tensor[(462), float32] */;
  %838 = cast(%var_5031, dtype="float32") /* ty=Tensor[(462), float32] */;
  %839 = reshape(%837, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %840 = reshape(%838, newshape=[6, 7, 11]) /* ty=Tensor[(6, 7, 11), float32] */;
  %841 = @func_1573(%839, %840) /* ty=(Tensor[(6, 7, 11), float32], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %842 = cast(%var_5019, dtype="float32") /* ty=Tensor[(1, 5, 7), float32] */;
  %843 = tan(%842) /* ty=Tensor[(1, 5, 7), float32] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(1, 5, 7), float32] */;
  %845 = asin(%844) /* ty=Tensor[(1, 5, 7), float32] */;
  %846 = cast(%843, dtype="uint8") /* ty=Tensor[(1, 5, 7), uint8] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%845, dtype="uint8") /* ty=Tensor[(1, 5, 7), uint8] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %850 = bitwise_xor(%848, %849) /* ty=Tensor[(?, 5, 7), uint8] */;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(?, 5, 7), float32] */;
  %852 = %841.0;
  %853 = asinh(%851) /* ty=Tensor[(?, 5, 7), float32] */;
  (%852, %var_5031, %853)
}

def @func_3345(%var_3342: Tensor[(15, 15, 12), int64], %var_3343: Tensor[(15, 15, 12), int64], %var_3344: Tensor[(15, 15, 12), int8]) -> (Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
  %881 = fn (%var_3301: Tensor[(15, 15, 12), int64], %var_3302: Tensor[(15, 15, 12), int64], %var_3317: Tensor[(15, 15, 12), int8]) -> (Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) {
    %854 = cast(%var_3301, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
    %855 = shape_of(%var_3302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %856 = cast(%var_3302, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %858 = left_shift(%856, %857) /* ty=Tensor[(15, 15, 12), int8] */;
    %859 = cast(%858, dtype="float64") /* ty=Tensor[(15, 15, 12), float64] */;
    %860 = cast(meta[relay.Constant][62] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %861 = reshape(%860, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), float64] */;
    %862 = @func_443(%861) /* ty=(Tensor[(13, 5, 4), bool], Tensor[(13, 1, 4), float32]) */;
    %863 = cast(%var_3317, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
    %864 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
    %865 = cast(%858, dtype="int8") /* ty=Tensor[(15, 15, 12), int8] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %867 = cast(%var_3302, dtype="bool") /* ty=Tensor[(15, 15, 12), bool] */;
    %868 = shape_of(%var_3301, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%var_3301, dtype="bool") /* ty=Tensor[(15, 15, 12), bool] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %871 = equal(%869, %870) /* ty=Tensor[(15, 15, 12), bool] */;
    %872 = cast(%871, dtype="float64") /* ty=Tensor[(15, 15, 12), float64] */;
    %873 = cast(meta[relay.Constant][63] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %874 = reshape(%873, newshape=[3, 10, 2]) /* ty=Tensor[(3, 10, 2), float64] */;
    %875 = @func_84(%874) /* ty=(Tensor[(3, 10, 2), float64],) */;
    %876 = acos(%859) /* ty=Tensor[(15, 15, 12), float64] */;
    %877 = %862.0;
    %878 = maximum(%865, %866) /* ty=Tensor[(15, 15, 12), int8] */;
    %879 = erf(%872) /* ty=Tensor[(15, 15, 12), float64] */;
    %880 = %875.0;
    (%876, %877, meta[relay.Constant][62] /* ty=Tensor[(260), float64] */, %878, %879, %880, meta[relay.Constant][63] /* ty=Tensor[(60), float64] */)
  };
  %881(%var_3342, %var_3343, %var_3344) /* ty=(Tensor[(15, 15, 12), float64], Tensor[(13, 5, 4), bool], Tensor[(260), float64], Tensor[(15, 15, 12), int8], Tensor[(15, 15, 12), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */
}

def @func_10810() -> (Tensor[(16, 11, 15), float64],) {
  %882 = @func_9724() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(13, 1, 4), float64], Tensor[(16, 11, 15), float64]) */;
  %883 = %882.2;
  (%883,)
}

def @func_10825() -> Tensor[(16, 11, 15), float64] {
  %887 = fn () -> Tensor[(16, 11, 15), float64] {
    %884 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %885 = %884.0;
    %886 = cast(%885, dtype="float64") /* ty=Tensor[(16, 11, 15), float64] */;
    acos(%886) /* ty=Tensor[(16, 11, 15), float64] */
  };
  %887() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_11001() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(672), float64]) {
  %894 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(672), float64]) {
    %888 = @func_4795() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %889 = cast(meta[relay.Constant][64] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %890 = reshape(%889, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %891 = @func_6455(%890) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
    %892 = %888.0;
    %893 = %891.2;
    (%892, %893, meta[relay.Constant][64] /* ty=Tensor[(672), float64] */)
  };
  %894() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(672), float64]) */
}

def @func_6457(%var_6456: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) {
  %909 = fn (%var_6449: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) {
    %895 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
    %896 = @func_5014() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %897 = cast(meta[relay.Constant][65] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %898 = cast(meta[relay.Constant][65] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %899 = reshape(%897, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %900 = reshape(%898, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %901 = @func_1801(%899, %900) /* ty=(Tensor[(16, 9, 15), float64],) */;
    %902 = cast(%var_6449, dtype="float64") /* ty=Tensor[(672), float64] */;
    %903 = reshape(%902, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float64] */;
    %904 = @func_1745(%903) /* ty=(Tensor[(6, 16, 7), float64],) */;
    %905 = %895.0;
    %906 = %896.0;
    %907 = %901.0;
    %908 = %904.0;
    (%905, %906, %907, meta[relay.Constant][65] /* ty=Tensor[(2160), float64] */, %908, %var_6449)
  };
  %909(%var_6456) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */
}

def @func_10856() -> (Tensor[(16, 11, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
  %915 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) {
    %910 = cast(meta[relay.Constant][66] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %911 = reshape(%910, newshape=[6, 13, 5]) /* ty=Tensor[(6, 13, 5), float64] */;
    %912 = @func_6743(%911) /* ty=(Tensor[(6, 13, 5), float64],) */;
    %913 = @func_6854() /* ty=Tensor[(16, 11, 15), float64] */;
    %914 = %912.0;
    (%913, %914, meta[relay.Constant][66] /* ty=Tensor[(390), float64] */)
  };
  %915() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(6, 13, 5), float64], Tensor[(390), float64]) */
}

def @func_4790() -> (Tensor[(60), float64],) {
  %916 = @func_4743() /* ty=Tensor[(60), float64] */;
  (%916,)
}

def @func_7232() -> (Tensor[(16, 11, 15), float64],) {
  %919 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %917 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
    %918 = %917.0;
    (%918,)
  };
  %919() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_7823() -> Tensor[(16, 11, 15), float64] {
  %920 = fn () -> Tensor[(16, 11, 15), float64] {
    @func_6606() /* ty=Tensor[(16, 11, 15), float64] */
  };
  %920() /* ty=Tensor[(16, 11, 15), float64] */
}

def @func_7620(%var_7618: Tensor[(4, 7, 8), uint32]) -> Tensor[(4, 7, 8), uint32] {
  @func_7617(%var_7618) /* ty=Tensor[(4, 7, 8), uint32] */
}

def @func_8631() -> Tensor[(189), uint64] {
  %921 = @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */;
  %921.1
}

def @func_4860() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_5137(%var_5120: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(16, 11, 15), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64], Tensor[(1, 8, 8), float32], float64, Tensor[(5, 1), float64], Tensor[(64), int32]) {
  %922 = @func_4790() /* ty=(Tensor[(60), float64],) */;
  %923 = cast(meta[relay.Constant][67] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %924 = cast(meta[relay.Constant][67] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %925 = %922.0;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(60), float64] */;
  %927 = reshape(%923, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %928 = reshape(%924, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), bool] */;
  %929 = reshape(%926, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %930 = @func_790(%927, %928, %929) /* ty=(Tensor[(14, 13, 15), int32], Tensor[(14, 13, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %931 = @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */;
  %932 = cast(%var_5120, dtype="float64") /* ty=Tensor[(672), float64] */;
  %933 = reshape(%932, newshape=[6, 16, 7]) /* ty=Tensor[(6, 16, 7), float64] */;
  %934 = @func_1745(%933) /* ty=(Tensor[(6, 16, 7), float64],) */;
  %935 = cast(-2.28324f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %936 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 1), float64] */, dtype="float64") /* ty=Tensor[(5, 1), float64] */;
  %937 = cast(meta[relay.Constant][69] /* ty=Tensor[(64), int32] */, dtype="int32") /* ty=Tensor[(64), int32] */;
  %938 = cast(%var_5120, dtype="float64") /* ty=Tensor[(672), float64] */;
  %939 = cast(meta[relay.Constant][67] /* ty=Tensor[(2730), bool] */, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %940 = cast(%925, dtype="float64") /* ty=Tensor[(60), float64] */;
  %941 = reshape(%935, newshape=[]) /* ty=float64 */;
  %942 = reshape(%936, newshape=[1, 5]) /* ty=Tensor[(1, 5), float64] */;
  %943 = reshape(%937, newshape=[64]) /* ty=Tensor[(64), int32] */;
  %944 = reshape(%938, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %945 = reshape(%939, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
  %946 = reshape(%940, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %947 = @func_4174(%941, %942, %943, %944, %945, %946) /* ty=(Tensor[(1, 5), float64], Tensor[(672), float64], Tensor[(64), int32], Tensor[(672), float64], Tensor[(2730), bool], Tensor[(15, 4), float64], Tensor[(14, 13, 15), int16], Tensor[(2, 864), uint64], Tensor[(624), int8], Tensor[(1728), uint16], Tensor[(60), float64], Tensor[(462), float32], Tensor[(1, 8, 8), float32]) */;
  %948 = %930.1;
  %949 = %931.0;
  %950 = %934.0;
  %951 = %947.12;
  (%925, %948, meta[relay.Constant][67] /* ty=Tensor[(2730), bool] */, %949, %950, %var_5120, %951, -2.28324f64 /* ty=float64 */, meta[relay.Constant][68] /* ty=Tensor[(5, 1), float64] */, meta[relay.Constant][69] /* ty=Tensor[(64), int32] */)
}

def @func_9739(%var_9730: Tensor[(16, 8, 13), int64]) -> Tensor[(16, 8, 13), int64] {
  %952 = cast(meta[relay.Constant][70] /* ty=Tensor[(16, 8, 13), int64] */, dtype="int64") /* ty=Tensor[(16, 8, 13), int64] */;
  %953 = shape_of(%var_9730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%var_9730, dtype="int64") /* ty=Tensor[(16, 8, 13), int64] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%954, %955) /* ty=Tensor[(16, 8, 13), int64] */
}

def @func_11105(%var_11104: int64) -> (Tensor[(13, 4, 9), int64],) {
  %959 = fn (%var_11093: int64) -> (Tensor[(13, 4, 9), int64],) {
    %956 = cast(%var_11093, dtype="int64") /* ty=int64 */;
    %957 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 4, 9), int64] */, dtype="int64") /* ty=Tensor[(13, 4, 9), int64] */;
    %958 = right_shift(%956, %957) /* ty=Tensor[(13, 4, 9), int64] */;
    (%958,)
  };
  %959(%var_11104) /* ty=(Tensor[(13, 4, 9), int64],) */
}

def @func_10175() -> (Tensor[(16, 11, 15), float64],) {
  %961 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %960 = @func_6854() /* ty=Tensor[(16, 11, 15), float64] */;
    (%960,)
  };
  %961() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_5564() -> (Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) {
  %962 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
  %963 = cast(meta[relay.Constant][72] /* ty=Tensor[(189), int64] */, dtype="int64") /* ty=Tensor[(189), int64] */;
  %964 = reshape(%963, newshape=[9, 7, 3]) /* ty=Tensor[(9, 7, 3), int64] */;
  %965 = @func_3845(%964) /* ty=Tensor[(9, 7, 3), int64] */;
  %966 = cast(%965, dtype="uint64") /* ty=Tensor[(9, 7, 3), uint64] */;
  %967 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(189), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %968 = cast(meta[relay.Constant][72] /* ty=Tensor[(189), int64] */, dtype="uint64") /* ty=Tensor[(189), uint64] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %970 = %962.0;
  %971 = bitwise_and(%968, %969) /* ty=Tensor[(189), uint64] */;
  (%970, %971)
}

def @func_10409(%var_10407: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(672), float64], Tensor[(16, 11, 15), float64]) {
  @func_10406(%var_10407) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(672), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_3257(%var_3254: Tensor[(8, 13, 6), int8], %var_3255: Tensor[(2, 864), uint16], %var_3256: Tensor[(2, 864), uint16]) -> (Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) {
  %988 = fn (%var_3230: Tensor[(8, 13, 6), int8], %var_3236: Tensor[(2, 864), uint16], %var_3238: Tensor[(2, 864), uint16]) -> (Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) {
    %972 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 13, 6), int8] */, dtype="int8") /* ty=Tensor[(8, 13, 6), int8] */;
    %973 = shape_of(%var_3230, dtype="int32") /* ty=Tensor[(3), int32] */;
    %974 = cast(%var_3230, dtype="int8") /* ty=Tensor[(8, 13, 6), int8] */;
    %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %976 = cast(%var_3236, dtype="uint16") /* ty=Tensor[(2, 864), uint16] */;
    %977 = cast(%var_3236, dtype="uint16") /* ty=Tensor[(2, 864), uint16] */;
    %978 = reshape(%976, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %979 = reshape(%977, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %980 = @func_1170(%978, %979) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %981 = cast(%var_3238, dtype="uint64") /* ty=Tensor[(2, 864), uint64] */;
    %982 = shape_of(%var_3236, dtype="int32") /* ty=Tensor[(2), int32] */;
    %983 = cast(%var_3236, dtype="uint64") /* ty=Tensor[(2, 864), uint64] */;
    %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %985 = left_shift(%974, %975) /* ty=Tensor[(8, 13, 6), int8] */;
    %986 = %980.0;
    %987 = bitwise_and(%983, %984) /* ty=Tensor[(2, 864), uint64] */;
    (%985, %986, %987)
  };
  %988(%var_3254, %var_3255, %var_3256) /* ty=(Tensor[(8, 13, 6), int8], Tensor[(16, 12, 9), float64], Tensor[(2, 864), uint64]) */
}

def @func_8079() -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  %992 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
    %989 = @func_7231() /* ty=(Tensor[(16, 11, 15), float64],) */;
    %990 = %989.0;
    %991 = @func_7406() /* ty=Tensor[(60), float64] */;
    (%990, %991)
  };
  %992() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(60), float64]) */
}

def @func_8750(%var_8747: Tensor[(14, 12, 16), float32]) -> (Tensor[(14, 12, 16), float32],) {
  %993 = cast(%var_8747, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %994 = cos(%993) /* ty=Tensor[(14, 12, 16), float32] */;
  (%994,)
}

def @func_10030() -> (Tensor[(60), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) {
  @func_10028() /* ty=(Tensor[(60), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */
}

def @func_10406(%var_10395: Tensor[(672), float64]) -> (Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(672), float64], Tensor[(16, 11, 15), float64]) {
  %995 = @func_10028() /* ty=(Tensor[(60), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %996 = cast(%var_10395, dtype="float64") /* ty=Tensor[(672), float64] */;
  %997 = reshape(%996, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %998 = @func_6455(%997) /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(6, 16, 7), float64], Tensor[(672), float64]) */;
  %999 = @func_7372() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %1000 = %995.0;
  %1001 = %998.1;
  %1002 = %999.0;
  (%1000, %1001, %var_10395, %1002)
}

def @func_10876() -> (Tensor[(16, 11, 15), float64],) {
  @func_10874() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_10967(%var_10917: Tensor[(224), uint32]) -> (Tensor[(16, 11, 15), float64], Tensor[(60), float64], Tensor[(60), float64], Tensor[(4, 7, 8), uint32], Tensor[(224), uint32]) {
  %1003 = @func_9667() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %1004 = @func_7104() /* ty=(Tensor[(60), float64],) */;
  %1005 = @func_8434() /* ty=(Tensor[(60), float64],) */;
  %1006 = cast(%var_10917, dtype="uint32") /* ty=Tensor[(224), uint32] */;
  %1007 = reshape(%1006, newshape=[4, 7, 8]) /* ty=Tensor[(4, 7, 8), uint32] */;
  %1008 = %1003.0;
  %1009 = %1004.0;
  %1010 = %1005.0;
  %1011 = @func_7617(%1007) /* ty=Tensor[(4, 7, 8), uint32] */;
  (%1008, %1009, %1010, %1011, %var_10917)
}

def @func_7741() -> (Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) {
  %1019 = fn () -> (Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) {
    %1012 = cast(meta[relay.Constant][74] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %1013 = cast(meta[relay.Constant][74] /* ty=Tensor[(1728), uint16] */, dtype="uint16") /* ty=Tensor[(1728), uint16] */;
    %1014 = reshape(%1012, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %1015 = reshape(%1013, newshape=[16, 12, 9]) /* ty=Tensor[(16, 12, 9), uint16] */;
    %1016 = @func_1170(%1014, %1015) /* ty=(Tensor[(16, 12, 9), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %1017 = @func_7003() /* ty=Tensor[(60), float64] */;
    %1018 = %1016.0;
    (%1017, %1018, meta[relay.Constant][74] /* ty=Tensor[(1728), uint16] */)
  };
  %1019() /* ty=(Tensor[(60), float64], Tensor[(16, 12, 9), float64], Tensor[(1728), uint16]) */
}

def @func_9668() -> (Tensor[(16, 11, 15), float64],) {
  %1021 = fn () -> (Tensor[(16, 11, 15), float64],) {
    %1020 = @func_6666() /* ty=Tensor[(16, 11, 15), float64] */;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(16, 11, 15), float64],) */
}

def @func_5566() -> (Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) {
  @func_5564() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(189), uint64]) */
}

def @func_8435() -> (Tensor[(60), float64],) {
  %1024 = fn () -> (Tensor[(60), float64],) {
    %1022 = @func_5987() /* ty=(Tensor[(60), float64],) */;
    %1023 = %1022.0;
    (%1023,)
  };
  %1024() /* ty=(Tensor[(60), float64],) */
}

def @func_2859(%var_2854: Tensor[(16, 5, 11), float32], %var_2855: Tensor[(16, 5, 11), float32], %var_2856: Tensor[(2160), float64], %var_2857: Tensor[(2730), bool], %var_2858: Tensor[(60), float64]) -> (Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) {
  %1046 = fn (%var_2832: Tensor[(16, 5, 11), float32], %var_2833: Tensor[(16, 5, 11), float32], %var_2841: Tensor[(2160), float64], %var_2845: Tensor[(2730), bool], %var_2846: Tensor[(60), float64]) -> (Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) {
    %1025 = cast(%var_2833, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %1026 = shape_of(%var_2832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1027 = cast(%var_2832, dtype="float32") /* ty=Tensor[(16, 5, 11), float32] */;
    %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1029 = cast(%var_2841, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %1030 = cast(%var_2841, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %1031 = reshape(%1029, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %1032 = reshape(%1030, newshape=[16, 9, 15]) /* ty=Tensor[(16, 9, 15), float64] */;
    %1033 = @func_1801(%1031, %1032) /* ty=(Tensor[(16, 9, 15), float64],) */;
    %1034 = cast(meta[relay.Constant][75] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
    %1035 = cast(%var_2845, dtype="bool") /* ty=Tensor[(2730), bool] */;
    %1036 = cast(%var_2846, dtype="float64") /* ty=Tensor[(60), float64] */;
    %1037 = reshape(%1034, newshape=[7, 6, 6]) /* ty=Tensor[(7, 6, 6), float32] */;
    %1038 = reshape(%1035, newshape=[2730]) /* ty=Tensor[(2730), bool] */;
    %1039 = reshape(%1036, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %1040 = @func_1095(%1037, %1038, %1039) /* ty=(Tensor[(14, 13, 15), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(7, 6, 6), float32]) */;
    %1041 = cast(%var_2833, dtype="float64") /* ty=Tensor[(16, 5, 11), float64] */;
    %1042 = floor_divide(%1027, %1028) /* ty=Tensor[(16, 5, 11), float32] */;
    %1043 = %1033.0;
    %1044 = %1040.3;
    %1045 = sigmoid(%1041) /* ty=Tensor[(16, 5, 11), float64] */;
    (%1042, %1043, %var_2841, %1044, meta[relay.Constant][75] /* ty=Tensor[(252), float32] */, %var_2845, %var_2846, %1045)
  };
  %1046(%var_2854, %var_2855, %var_2856, %var_2857, %var_2858) /* ty=(Tensor[(16, 5, 11), float32], Tensor[(16, 9, 15), float64], Tensor[(2160), float64], Tensor[(7, 6, 6), float32], Tensor[(252), float32], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 5, 11), float64]) */
}

def @func_11143() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
  %1050 = fn () -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) {
    %1047 = @func_5522() /* ty=Tensor[(16, 11, 15), float64] */;
    %1048 = @func_5450() /* ty=Tensor[(16, 11, 15), float64] */;
    %1049 = @func_6606() /* ty=Tensor[(16, 11, 15), float64] */;
    (%1047, %1048, %1049)
  };
  %1050() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */
}

def @func_9918() -> Tensor[(60), float64] {
  @func_9916() /* ty=Tensor[(60), float64] */
}

def @func_5257(%var_5256: Tensor[(70), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(60), float64]) {
  %1058 = fn (%var_5236: Tensor[(70), float32]) -> (Tensor[(16, 11, 15), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(60), float64]) {
    %1051 = @func_4566() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(3, 10, 2), float64], Tensor[(60), float64]) */;
    %1052 = cast(%var_5236, dtype="float32") /* ty=Tensor[(70), float32] */;
    %1053 = reshape(%1052, newshape=[7, 2, 5]) /* ty=Tensor[(7, 2, 5), float32] */;
    %1054 = @func_2506(%1053) /* ty=(Tensor[(7, 2, 5), float32],) */;
    %1055 = %1051.0;
    %1056 = %1054.0;
    %1057 = @func_4743() /* ty=Tensor[(60), float64] */;
    (%1055, %1056, %var_5236, %1057)
  };
  %1058(%var_5256) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(7, 2, 5), float32], Tensor[(70), float32], Tensor[(60), float64]) */
}

def @func_8311(%var_8287: Tensor[(8, 110), float32], %var_8294: Tensor[(9, 7, 3), float64]) -> (Tensor[(60), float64], Tensor[(8, 110), float32], Tensor[(9, 7, 3), bool]) {
  %1059 = cast(%var_8287, dtype="float32") /* ty=Tensor[(8, 110), float32] */;
  %1060 = reshape(%1059, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %1061 = @func_6824(%1060) /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 5, 11), float32], Tensor[(880), float32], Tensor[(1080, 2), float64], Tensor[(2730), bool], Tensor[(60), float64], Tensor[(16, 11, 15), float64]) */;
  %1062 = @func_7651() /* ty=(Tensor[(9, 7, 3), float64],) */;
  %1063 = %1062.0;
  %1064 = cast(%var_8294, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1066 = cast(%1063, dtype="bool") /* ty=Tensor[(9, 7, 3), bool] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1068 = %1061.5;
  %1069 = less_equal(%1066, %1067) /* ty=Tensor[(9, 7, 3), bool] */;
  (%1068, %var_8287, %1069)
}

def @func_7795() -> Tensor[(60), float64] {
  %1070 = fn () -> Tensor[(60), float64] {
    @func_4743() /* ty=Tensor[(60), float64] */
  };
  %1070() /* ty=Tensor[(60), float64] */
}

def @func_11189() -> (Tensor[(16, 11, 15), float64], Tensor[(14, 12, 2), float64], Tensor[(336), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) {
  @func_11187() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(14, 12, 2), float64], Tensor[(336), float64], Tensor[(1728), uint16], Tensor[(16, 11, 15), float64]) */
}

def @func_7526() -> (Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float32], Tensor[(245), float64], float64, Tensor[(16, 11, 15), float64], Tensor[(60), float64]) {
  %1071 = @func_4266() /* ty=(Tensor[(16, 11, 15), float64],) */;
  %1072 = @func_7325() /* ty=(Tensor[(16, 11, 15), float32], Tensor[(16, 11, 15), float64]) */;
  %1073 = %1072.1;
  %1074 = cast(%1073, dtype="float32") /* ty=Tensor[(16, 11, 15), float32] */;
  %1075 = cast(6.64745f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1076 = reshape(%1075, newshape=[]) /* ty=float64 */;
  %1077 = @func_6292(%1076) /* ty=(Tensor[(3, 10, 2), float64], Tensor[(16, 11, 15), float64], Tensor[(7, 5, 7), float64], float64, Tensor[(245), float64]) */;
  %1078 = @func_4858() /* ty=(Tensor[(16, 11, 15), float64], Tensor[(16, 11, 15), float64]) */;
  %1079 = @func_6387() /* ty=(Tensor[(60), float64], Tensor[(16, 11, 15), float32]) */;
  %1080 = %1071.0;
  %1081 = exp(%1074) /* ty=Tensor[(16, 11, 15), float32] */;
  %1082 = %1077.4;
  %1083 = %1078.1;
  %1084 = %1079.0;
  (%1080, %1081, %1082, 6.64745f64 /* ty=float64 */, %1083, %1084)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

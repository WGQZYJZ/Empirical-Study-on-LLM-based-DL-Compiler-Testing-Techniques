==========mod==========
#[version = "0.0.5"]
def @func_16446() -> (Tensor[(15, 9, 9), float32],) {
  %0 = @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1 = %0.1;
  (%1,)
}

def @func_12999() -> Tensor[(15, 9, 9), float32] {
  @func_10241() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_15613(%var_15582: Tensor[(250), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(250), float64], Tensor[(550), int8], Tensor[(15, 9, 9), float64]) {
  %2 = cast(%var_15582, dtype="float64") /* ty=Tensor[(250), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %4 = reshape(%2, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %5 = reshape(%3, newshape=[550, 1]) /* ty=Tensor[(550, 1), int8] */;
  %6 = @func_14235(%4, %5) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(495), bool], float64, Tensor[(495), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550, 1), int8]) */;
  %7 = @func_14320() /* ty=Tensor[(15, 9, 9), float32] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %9 = reshape(%8, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %10 = %6.0;
  %11 = @func_12475(%9) /* ty=Tensor[(15, 9, 9), float64] */;
  (%7, %10, %var_15582, meta[relay.Constant][0] /* ty=Tensor[(550), int8] */, %11)
}

def @func_18813() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %12 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %13 = @func_17708() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
  %14 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %15 = %12.0;
  %16 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %17 = %13.0;
  %18 = %14.0;
  (%15, %16, %17, %18)
}

def @func_12890() -> (Tensor[(15, 9, 9), float64],) {
  %19 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %20 = %19.0;
  (%20,)
}

def @func_12779() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_12123(%var_12038: float64, %var_12039: Tensor[(495), bool]) -> (Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %21 = cast(%var_12038, dtype="float64") /* ty=float64 */;
  %22 = cast(%var_12039, dtype="bool") /* ty=Tensor[(495), bool] */;
  %23 = reshape(%21, newshape=[]) /* ty=float64 */;
  %24 = reshape(%22, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %25 = @func_11542(%23, %24) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */;
  %26 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %27 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %28 = %25.0;
  %29 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %30 = %26.0;
  %31 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  (%27, %28, %var_12038, %var_12039, %29, %30, %31)
}

def @func_11780() -> (Tensor[(15, 9, 9), float32],) {
  %32 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  (%32,)
}

def @func_12800() -> (Tensor[(15, 9, 9), float64],) {
  %33 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %34 = %33.1;
  (%34,)
}

def @func_3701(%var_3656: Tensor[(13, 6, 5), float64], %var_3671: Tensor[(63), uint32], %var_3692: Tensor[(2400), float32]) -> (Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) {
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %36 = cast(%var_3671, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %37 = reshape(%35, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %38 = reshape(%36, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %39 = @func_708(%37, %38) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %40 = cast(%var_3656, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %41 = atan(%40) /* ty=Tensor[(13, 6, 5), float64] */;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %43 = cast(%var_3692, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %44 = cast(%var_3692, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %45 = reshape(%43, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %46 = reshape(%44, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %47 = @func_2616(%45, %46) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(10, 15, 16), float32] */;
  %50 = cast(%var_3692, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %51 = reshape(%49, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %52 = reshape(%50, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %53 = @func_2616(%51, %52) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %54 = %39.1;
  %55 = sin(%42) /* ty=Tensor[(13, 6, 5), float64] */;
  %56 = %53.0;
  (%54, meta[relay.Constant][1] /* ty=Tensor[(60), uint64] */, %var_3671, %55, %48, %var_3692, %56)
}

def @func_17224() -> (Tensor[(15, 9, 9), float32],) {
  %57 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  (%57,)
}

def @func_17902() -> Tensor[(10, 14, 4), float64] {
  %58 = @func_17001() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %58.0
}

def @func_5753(%var_5720: Tensor[(15, 1, 7), float32]) -> (Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) {
  %59 = cast(%var_5720, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %60 = sigmoid(%59) /* ty=Tensor[(15, 1, 7), float32] */;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(35, 10), float64] */, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %63 = reshape(%62, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %64 = @func_5215(%63) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */;
  %65 = sqrt(%61) /* ty=Tensor[(15, 1, 7), float32] */;
  %66 = %64.0;
  (%65, %66, meta[relay.Constant][2] /* ty=Tensor[(35, 10), float64] */)
}

def @func_17968(%var_17948: Tensor[(1024), uint16]) -> (Tensor[(65, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) {
  %67 = @func_17297() /* ty=(Tensor[(65, 9), float32],) */;
  %68 = %67.0;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %70 = cast(%var_17948, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %71 = reshape(%70, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %72 = @func_13260(%71) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) */;
  %73 = erf(%69) /* ty=Tensor[(65, 9), float64] */;
  %74 = %72.0;
  (%73, %74, %var_17948)
}

def @func_11088() -> Tensor[(15, 9, 9), float64] {
  %75 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %75.0
}

def @func_18907(%var_18891: Tensor[(390), float64], %var_18892: Tensor[(63), uint32], %var_18893: Tensor[(2400), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(3, 7, 3), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %76 = @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %77 = cast(%var_18891, dtype="float64") /* ty=Tensor[(390), float64] */;
  %78 = cast(%var_18892, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %79 = cast(%var_18893, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %80 = reshape(%77, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
  %81 = reshape(%78, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %82 = reshape(%79, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %83 = @func_3701(%80, %81, %82) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
  %84 = %76.2;
  %85 = %83.0;
  (%84, %85, %var_18891, %var_18892, %var_18893)
}

def @func_10426() -> (Tensor[(15, 9, 9), float64],) {
  %86 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %87 = %86.0;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %89 = sinh(%88) /* ty=Tensor[(15, 9, 9), float64] */;
  (%89,)
}

def @func_18013() -> (Tensor[(15, 9, 9), float32],) {
  %90 = @func_17480() /* ty=Tensor[(15, 9, 9), float32] */;
  (%90,)
}

def @func_6813(%var_6800: Tensor[(5, 5, 10), float64], %var_6804: Tensor[(550), int8]) -> (Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) {
  %91 = cast(%var_6804, dtype="int8") /* ty=Tensor[(550), int8] */;
  %92 = reshape(%91, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %93 = @func_3434(%92) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %94 = cast(%var_6800, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %95 = erf(%94) /* ty=Tensor[(5, 5, 10), float64] */;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %97 = shape_of(%var_6800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_6800, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %100 = %93.0;
  %101 = floor_mod(%98, %99) /* ty=Tensor[(5, 5, 10), float64] */;
  (%100, %var_6804, %101)
}

def @func_16901() -> (Tensor[(15, 9, 9), float64],) {
  %102 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %103 = %102.0;
  (%103,)
}

def @func_19234() -> Tensor[(15, 9, 9), float64] {
  @func_16298() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_11409() -> (Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %104 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  %105 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %106 = %105.0;
  %107 = cast(%106, dtype="int8") /* ty=Tensor[(15, 9, 9), int8] */;
  %108 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%104, dtype="int8") /* ty=Tensor[(15, 9, 9), int8] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %111 = cast(meta[relay.Constant][3] /* ty=Tensor[(65, 9), float32] */, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %112 = cast(meta[relay.Constant][3] /* ty=Tensor[(65, 9), float32] */, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %113 = cast(meta[relay.Constant][3] /* ty=Tensor[(65, 9), float32] */, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %114 = reshape(%111, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %115 = reshape(%112, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %116 = reshape(%113, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %117 = @func_10348(%114, %115, %116) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */;
  %118 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %119 = logical_xor(%109, %110) /* ty=Tensor[(15, 9, 9), int8] */;
  %120 = %117.0;
  %121 = %118.0;
  %122 = @func_11088() /* ty=Tensor[(15, 9, 9), float64] */;
  (%119, %120, meta[relay.Constant][3] /* ty=Tensor[(65, 9), float32] */, %121, %122)
}

def @func_9438(%var_9418: Tensor[(5, 4, 8), float32], %var_9421: Tensor[(5, 4, 8), float32]) -> (Tensor[(5, 4, 8), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550), int8]) {
  %123 = cast(%var_9418, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %124 = erf(%123) /* ty=Tensor[(5, 4, 8), float32] */;
  %125 = cast(%var_9421, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %129 = cast(meta[relay.Constant][4] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %130 = cast(meta[relay.Constant][5] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %131 = reshape(%129, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %132 = reshape(%130, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %133 = @func_6813(%131, %132) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %134 = greater(%127, %128) /* ty=Tensor[(5, 4, 8), bool] */;
  %135 = %133.2;
  (%134, %135, meta[relay.Constant][4] /* ty=Tensor[(250), float64] */, meta[relay.Constant][5] /* ty=Tensor[(550), int8] */)
}

def @func_10485() -> (Tensor[(15, 9, 9), float64],) {
  %136 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %137 = %136.0;
  (%137,)
}

def @func_14723() -> Tensor[(15, 9, 9), float32] {
  %138 = @func_14486() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %138.0
}

def @func_15333(%var_15330: Tensor[(250), float64], %var_15331: Tensor[(275, 2), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(495), bool], Tensor[(550), int8], Tensor[(250), float64], Tensor[(275, 2), int8]) {
  %139 = @func_14486() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %140 = @func_15316() /* ty=(Tensor[(495), bool],) */;
  %141 = cast(%var_15330, dtype="float64") /* ty=Tensor[(250), float64] */;
  %142 = cast(%var_15331, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
  %143 = reshape(%141, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %144 = reshape(%142, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %145 = @func_6813(%143, %144) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %146 = %139.0;
  %147 = %140.0;
  %148 = %145.1;
  (%146, %147, %148, %var_15330, %var_15331)
}

def @func_10305() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_13918() -> Tensor[(15, 9, 9), float64] {
  @func_10945() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_13365() -> (Tensor[(15, 9, 9), float64],) {
  %149 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %150 = %149.0;
  (%150,)
}

def @func_11561() -> (Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) {
  %151 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %152 = cast(meta[relay.Constant][6] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %153 = reshape(%152, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), float64] */;
  %154 = %151.0;
  %155 = @func_10628(%153) /* ty=Tensor[(10, 14, 4), float64] */;
  (%154, %155, meta[relay.Constant][6] /* ty=Tensor[(560), float64] */)
}

def @func_14854(%var_14845: Tensor[(65, 9), float32]) -> Tensor[(65, 9), float64] {
  %156 = @func_13692() /* ty=(Tensor[(65, 9), float32],) */;
  %157 = %156.0;
  %158 = cast(%var_14845, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(2), int32] */;
  %160 = cast(%157, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  mod(%160, %161) /* ty=Tensor[(65, 9), float64] */
}

def @func_15870() -> (Tensor[(15, 9, 9), float32],) {
  %162 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  (%162,)
}

def @func_12368() -> (Tensor[(15, 9, 9), float32],) {
  %163 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %164 = %163.0;
  (%164,)
}

def @func_16162() -> (Tensor[(15, 9, 9), float32],) {
  %165 = @func_10450() /* ty=Tensor[(15, 9, 9), float32] */;
  (%165,)
}

def @func_16272(%var_16240: Tensor[(15, 13, 15), float64]) -> (Tensor[(15, 13, 15), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 13, 15), float64]) {
  %166 = cast(%var_16240, dtype="float64") /* ty=Tensor[(15, 13, 15), float64] */;
  %167 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %168 = cast(%var_16240, dtype="float64") /* ty=Tensor[(15, 13, 15), float64] */;
  %169 = sin(%166) /* ty=Tensor[(15, 13, 15), float64] */;
  %170 = %167.0;
  %171 = erf(%168) /* ty=Tensor[(15, 13, 15), float64] */;
  (%169, %170, %171)
}

def @func_17383(%var_17346: Tensor[(5, 10, 3), int64], %var_17347: Tensor[(5, 10, 3), int64], %var_17353: Tensor[(60), uint64], %var_17354: Tensor[(63), uint32]) -> (Tensor[(5, 10, 3), int64], Tensor[(12, 5, ?), uint64], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(5, 10, 3), float64]) {
  %172 = cast(%var_17347, dtype="int64") /* ty=Tensor[(5, 10, 3), int64] */;
  %173 = shape_of(%var_17346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_17346, dtype="int64") /* ty=Tensor[(5, 10, 3), int64] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %176 = cast(%var_17353, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %177 = cast(%var_17354, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %178 = reshape(%176, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %179 = reshape(%177, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %180 = @func_708(%178, %179) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %181 = cast(meta[relay.Constant][7] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %182 = reshape(%181, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %183 = @func_5753(%182) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) */;
  %184 = cast(%var_17347, dtype="float64") /* ty=Tensor[(5, 10, 3), float64] */;
  %185 = logical_xor(%174, %175) /* ty=Tensor[(5, 10, 3), int64] */;
  %186 = %180.0;
  %187 = %183.1;
  %188 = asinh(%184) /* ty=Tensor[(5, 10, 3), float64] */;
  (%185, %186, %var_17353, %var_17354, %187, meta[relay.Constant][7] /* ty=Tensor[(105), float32] */, %188)
}

def @func_3434(%var_3423: Tensor[(10, 5, 11), int8]) -> (Tensor[(10, 5, 11), bool],) {
  %189 = cast(%var_3423, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %190 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(10, 5, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 5, 11), int8] */, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %193 = less(%191, %192) /* ty=Tensor[(10, 5, 11), bool] */;
  (%193,)
}

def @func_17771() -> (Tensor[(15, 9, 9), float32], Tensor[(65, 9), int8], Tensor[(65, 9), bool]) {
  %194 = @func_13445() /* ty=(Tensor[(65, 9), float32],) */;
  %195 = %194.0;
  %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(65, 9), float32] */, dtype="int8") /* ty=Tensor[(65, 9), int8] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(2), int32] */;
  %198 = cast(%195, dtype="int8") /* ty=Tensor[(65, 9), int8] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %200 = cast(meta[relay.Constant][9] /* ty=Tensor[(65, 9), float32] */, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %201 = shape_of(%195, dtype="int32") /* ty=Tensor[(2), int32] */;
  %202 = cast(%195, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %204 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %205 = add(%198, %199) /* ty=Tensor[(65, 9), int8] */;
  %206 = less_equal(%202, %203) /* ty=Tensor[(65, 9), bool] */;
  (%204, %205, %206)
}

def @func_18962() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  %207 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %208 = @func_17047() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) */;
  %209 = %207.0;
  %210 = %208.0;
  (%209, %210)
}

def @func_12860(%var_12848: Tensor[(175, 2), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(275, 2), uint8], Tensor[(55, 10), int8], Tensor[(10, 5, 11), bool], Tensor[(175, 2), float64], Tensor[(15, 9, 9), float32]) {
  %211 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(55, 10), int8] */, dtype="int8") /* ty=Tensor[(55, 10), int8] */;
  %213 = cast(meta[relay.Constant][10] /* ty=Tensor[(55, 10), int8] */, dtype="int8") /* ty=Tensor[(55, 10), int8] */;
  %214 = reshape(%212, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
  %215 = reshape(%213, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
  %216 = @func_12198(%214, %215) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */;
  %217 = cast(%var_12848, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %218 = reshape(%217, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %219 = @func_5215(%218) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */;
  %220 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %221 = %211.0;
  %222 = %216.3;
  %223 = %219.1;
  %224 = %220.1;
  (%221, %222, meta[relay.Constant][10] /* ty=Tensor[(55, 10), int8] */, %223, %var_12848, %224)
}

def @func_19228() -> (Tensor[(15, 9, 9), float64],) {
  %225 = @func_18664() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %226 = %225.0;
  (%226,)
}

def @func_20571() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %227 = @func_18522() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %228 = @func_19228() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %229 = %227.0;
  %230 = %228.0;
  (%229, %230)
}

def @func_14486() -> (Tensor[(15, 9, 9), float32],) {
  %231 = @func_10241() /* ty=Tensor[(15, 9, 9), float32] */;
  (%231,)
}

def @func_12602(%var_12597: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) {
  %232 = cast(%var_12597, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %233 = cast(%var_12597, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %234 = cast(meta[relay.Constant][11] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %235 = cast(%var_12597, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %236 = reshape(%232, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %237 = reshape(%233, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %238 = reshape(%234, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %239 = reshape(%235, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %240 = @func_6067(%236, %237, %238, %239) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %241 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %242 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %243 = %240.1;
  %244 = %241.0;
  (%242, %243, %var_12597, meta[relay.Constant][11] /* ty=Tensor[(630), float32] */, %244)
}

def @func_17857() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %245 = @func_12225() /* ty=Tensor[(15, 9, 9), float32] */;
  %246 = @func_15274() /* ty=Tensor[(15, 9, 9), float32] */;
  %247 = @func_13380() /* ty=Tensor[(15, 9, 9), float32] */;
  (%245, %246, %247)
}

def @func_20891(%var_20877: Tensor[(495), bool], %var_20883: Tensor[(1024, 1), uint16]) -> (Tensor[(390, 1), float64], Tensor[(495), bool], Tensor[(495), bool], Tensor[(250), float64], Tensor[(16, 4, 16), bool], Tensor[(1024, 1), uint16], Tensor[(630), float32]) {
  %248 = @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %249 = cast(%var_20877, dtype="bool") /* ty=Tensor[(495), bool] */;
  %250 = cast(meta[relay.Constant][12] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %251 = reshape(%249, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %252 = reshape(%250, newshape=[25, 10]) /* ty=Tensor[(25, 10), float64] */;
  %253 = @func_20046(%251, %252) /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool], Tensor[(10, 14, 4), float64], Tensor[(495), bool], Tensor[(15, 9, 9), float32], Tensor[(1024), bool], Tensor[(15, 9, 9), float64], Tensor[(250), float64], Tensor[(25, 10), float64]) */;
  %254 = cast(%var_20883, dtype="uint16") /* ty=Tensor[(1024, 1), uint16] */;
  %255 = cast(%var_20883, dtype="uint16") /* ty=Tensor[(1024, 1), uint16] */;
  %256 = cast(meta[relay.Constant][13] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %257 = cast(%var_20883, dtype="bool") /* ty=Tensor[(1024, 1), bool] */;
  %258 = reshape(%254, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %259 = reshape(%255, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %260 = reshape(%256, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %261 = reshape(%257, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %262 = @func_6067(%258, %259, %260, %261) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %263 = %248.2;
  %264 = %253.3;
  %265 = %262.0;
  (%263, %264, %var_20877, meta[relay.Constant][12] /* ty=Tensor[(250), float64] */, %265, %var_20883, meta[relay.Constant][13] /* ty=Tensor[(630), float32] */)
}

def @func_12567() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %266 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %267 = %266.0;
  %268 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
  (%267, %268)
}

def @func_13961() -> Tensor[(15, 9, 9), float64] {
  %269 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %269.0
}

def @func_18373() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %270 = @func_17232() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %271 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %272 = @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %273 = %270.0;
  %274 = %271.0;
  %275 = %272.1;
  (%273, %274, %275)
}

def @func_17271() -> Tensor[(15, 9, 9), float32] {
  @func_15274() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_19174(%var_19152: Tensor[(12, 11, 13), float32], %var_19153: Tensor[(12, 11, 13), float32]) -> Tensor[(12, 11, 13), float32] {
  %276 = cast(%var_19153, dtype="float32") /* ty=Tensor[(12, 11, 13), float32] */;
  %277 = shape_of(%var_19152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%var_19152, dtype="float32") /* ty=Tensor[(12, 11, 13), float32] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%278, %279) /* ty=Tensor[(12, 11, 13), float32] */
}

def @func_13260(%var_13253: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) {
  %280 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %281 = @func_11561() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) */;
  %282 = cast(%var_13253, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %283 = reshape(%282, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %284 = @func_12602(%283) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) */;
  %285 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %286 = %280.0;
  %287 = %281.1;
  %288 = %284.1;
  (%285, %286, %287, %288, %var_13253)
}

def @func_15095() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %289 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %290 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  (%289, %290)
}

def @func_12277() -> (Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) {
  %291 = @func_10450() /* ty=Tensor[(15, 9, 9), float32] */;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %293 = cast(6.98519f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %294 = cast(meta[relay.Constant][14] /* ty=Tensor[(495), bool] */, dtype="bool") /* ty=Tensor[(495), bool] */;
  %295 = reshape(%293, newshape=[]) /* ty=float64 */;
  %296 = reshape(%294, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %297 = @func_11542(%295, %296) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */;
  %298 = log2(%292) /* ty=Tensor[(15, 9, 9), float64] */;
  %299 = %297.1;
  (%298, %299, 6.98519f64 /* ty=float64 */, meta[relay.Constant][14] /* ty=Tensor[(495), bool] */)
}

def @func_16423(%var_16374: Tensor[(270), int8], %var_16384: Tensor[(195, 3), float32], %var_16410: Tensor[(250), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(390), float64], Tensor[(270), int8], Tensor[(63), uint32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(195, 3), float64], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550, 1), int8]) {
  %300 = cast(%var_16374, dtype="int8") /* ty=Tensor[(270), int8] */;
  %301 = cast(%var_16374, dtype="int8") /* ty=Tensor[(270), int8] */;
  %302 = cast(meta[relay.Constant][15] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %303 = reshape(%300, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), int8] */;
  %304 = reshape(%301, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), int8] */;
  %305 = reshape(%302, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %306 = @func_14462(%303, %304, %305) /* ty=(Tensor[(9, 5, 6), bool], Tensor[(60), uint64], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %307 = cast(%var_16384, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %308 = cast(%var_16384, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %309 = cast(%var_16384, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %310 = reshape(%307, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %311 = reshape(%308, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %312 = reshape(%309, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %313 = @func_10348(%310, %311, %312) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */;
  %314 = cast(meta[relay.Constant][16] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %315 = cast(meta[relay.Constant][16] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %316 = reshape(%314, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %317 = reshape(%315, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %318 = @func_2616(%316, %317) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %319 = cast(%var_16384, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %320 = sigmoid(%319) /* ty=Tensor[(195, 3), float64] */;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %322 = cast(%var_16410, dtype="float64") /* ty=Tensor[(250), float64] */;
  %323 = cast(meta[relay.Constant][17] /* ty=Tensor[(550, 1), int8] */, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
  %324 = reshape(%322, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %325 = reshape(%323, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %326 = @func_6813(%324, %325) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %327 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %328 = %306.2;
  %329 = @func_10241() /* ty=Tensor[(15, 9, 9), float32] */;
  %330 = %313.1;
  %331 = %318.0;
  %332 = acosh(%321) /* ty=Tensor[(195, 3), float64] */;
  %333 = %326.1;
  (%327, %328, %var_16374, meta[relay.Constant][15] /* ty=Tensor[(63), uint32] */, %329, %330, %331, meta[relay.Constant][16] /* ty=Tensor[(2400), float32] */, %332, %333, %var_16410, meta[relay.Constant][17] /* ty=Tensor[(550, 1), int8] */)
}

def @func_18522() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %334 = @func_13178() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) */;
  %335 = @func_13739() /* ty=Tensor[(15, 9, 9), float64] */;
  %336 = %334.0;
  (%335, %336)
}

def @func_3463(%var_3439: Tensor[(13, 6, 7), float32], %var_3449: Tensor[(13, 6, 7), float32], %var_3454: Tensor[(700), float32], %var_3455: int8, %var_3456: Tensor[(2400), float32]) -> (Tensor[(13, 6, 7), float32], Tensor[(5, 10, 14), float32], Tensor[(700), float32], int8, Tensor[(2400), float32]) {
  %337 = cast(%var_3439, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %338 = erf(%337) /* ty=Tensor[(13, 6, 7), float32] */;
  %339 = cast(%var_3449, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %343 = cast(%var_3454, dtype="float32") /* ty=Tensor[(700), float32] */;
  %344 = cast(%var_3455, dtype="int8") /* ty=int8 */;
  %345 = cast(%var_3456, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %346 = reshape(%343, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %347 = reshape(%344, newshape=[]) /* ty=int8 */;
  %348 = reshape(%345, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %349 = @func_3151(%346, %347, %348) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) */;
  %350 = floor_mod(%341, %342) /* ty=Tensor[(13, 6, 7), float32] */;
  %351 = %349.0;
  (%350, %351, %var_3454, %var_3455, %var_3456)
}

def @func_19136() -> Tensor[(15, 9, 9), float32] {
  %352 = @func_17857() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %352.1
}

def @func_13789() -> (Tensor[(15, 9, 9), float32],) {
  %353 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  (%353,)
}

def @func_19596() -> (Tensor[(10, 14, 4), float64],) {
  %354 = @func_16303() /* ty=Tensor[(10, 14, 4), float64] */;
  (%354,)
}

def @func_11872() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %355 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %356 = %355.0;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %358 = sin(%357) /* ty=Tensor[(15, 9, 9), float64] */;
  %359 = @func_10945() /* ty=Tensor[(15, 9, 9), float64] */;
  (%358, %359)
}

def @func_15200() -> (Tensor[(10, 14, 4), float64],) {
  %360 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  (%360,)
}

def @func_286(%var_265: Tensor[(6, 3, 4), float64]) -> Tensor[(6, 3, 4), float64] {
  %361 = cast(%var_265, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  sinh(%361) /* ty=Tensor[(6, 3, 4), float64] */
}

def @func_10879(%var_10841: uint32) -> (Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550), int8], Tensor[(3, 7, 3), uint32], uint32, Tensor[(63), uint32], Tensor[(6, 12), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %362 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %363 = cast(meta[relay.Constant][18] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %364 = reshape(%363, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %365 = @func_4293(%364) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %366 = cast(meta[relay.Constant][19] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %367 = cast(meta[relay.Constant][20] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %368 = reshape(%366, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %369 = reshape(%367, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %370 = @func_6813(%368, %369) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %371 = cast(%var_10841, dtype="uint32") /* ty=uint32 */;
  %372 = cast(meta[relay.Constant][21] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %373 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %374 = reshape(%371, newshape=[]) /* ty=uint32 */;
  %375 = reshape(%372, newshape=[3, 7, 3]) /* ty=Tensor[(3, 7, 3), uint32] */;
  %376 = reshape(%373, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %377 = @func_550(%374, %375, %376) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */;
  %378 = cast(meta[relay.Constant][23] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %379 = reshape(%378, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %380 = %362.0;
  %381 = %365.0;
  %382 = %370.1;
  %383 = %377.0;
  %384 = @func_10539(%379) /* ty=Tensor[(13, 2, 3), float64] */;
  (%380, %381, meta[relay.Constant][18] /* ty=Tensor[(630), float32] */, %382, meta[relay.Constant][19] /* ty=Tensor[(250), float64] */, meta[relay.Constant][20] /* ty=Tensor[(550), int8] */, %383, %var_10841, meta[relay.Constant][21] /* ty=Tensor[(63), uint32] */, meta[relay.Constant][22] /* ty=Tensor[(6, 12), float64] */, %384, meta[relay.Constant][23] /* ty=Tensor[(78), float64] */)
}

def @func_17047() -> (Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) {
  %385 = @func_15129() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
  %386 = %385.1;
  %387 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  (%386, %387)
}

def @func_17708() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  %388 = @func_12665() /* ty=Tensor[(15, 9, 9), float64] */;
  %389 = @func_17164() /* ty=Tensor[(10, 14, 4), float64] */;
  (%388, %389)
}

def @func_12665() -> Tensor[(15, 9, 9), float64] {
  @func_11738() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_14114(%var_14088: Tensor[(9, 13, 10), uint64], %var_14089: Tensor[(9, 13, 10), uint64]) -> (Tensor[(9, 13, 10), uint64], Tensor[(63), uint32]) {
  %390 = cast(%var_14089, dtype="uint64") /* ty=Tensor[(9, 13, 10), uint64] */;
  %391 = shape_of(%var_14088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%var_14088, dtype="uint64") /* ty=Tensor[(9, 13, 10), uint64] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %394 = @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %395 = bitwise_and(%392, %393) /* ty=Tensor[(9, 13, 10), uint64] */;
  %396 = %394.3;
  (%395, %396)
}

def @func_20968() -> Tensor[(15, 9, 9), float32] {
  %397 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %397.0
}

def @func_19426(%var_19423: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) {
  %398 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %399 = %398.0;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %401 = cast(%var_19423, dtype="int8") /* ty=int8 */;
  %402 = reshape(%401, newshape=[]) /* ty=int8 */;
  %403 = acos(%400) /* ty=Tensor[(15, 9, 9), float64] */;
  %404 = @func_592(%402) /* ty=Tensor[(1, 7, 1), bool] */;
  (%403, %404, %var_19423)
}

def @func_18087() -> Tensor[(15, 9, 9), float32] {
  %405 = @func_17047() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) */;
  %405.1
}

def @func_16614() -> Tensor[(10, 14, 4), float64] {
  @func_16303() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_11738() -> Tensor[(15, 9, 9), float64] {
  %406 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %406.0
}

def @func_14691(%var_14688: float64) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], float64) {
  %407 = cast(%var_14688, dtype="float64") /* ty=float64 */;
  %408 = reshape(%407, newshape=[]) /* ty=float64 */;
  %409 = @func_13643(%408) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool]) */;
  %410 = @func_13380() /* ty=Tensor[(15, 9, 9), float32] */;
  %411 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  %412 = %409.2;
  (%410, %411, %412, %var_14688)
}

def @func_9239(%var_9202: float32, %var_9203: Tensor[(11, 13, 10), float32], %var_9218: Tensor[(72), float64]) -> (Tensor[(11, 13, 10), float32], Tensor[(6, 3, 4), float64], Tensor[(63), uint32], Tensor[(72), float64], Tensor[(10, 5, 11), bool], Tensor[(550, 1), int8]) {
  %413 = cast(%var_9202, dtype="float32") /* ty=float32 */;
  %414 = cast(%var_9203, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
  %415 = cast(%var_9202, dtype="uint32") /* ty=uint32 */;
  %416 = cast(meta[relay.Constant][24] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %417 = cast(%var_9218, dtype="float64") /* ty=Tensor[(72), float64] */;
  %418 = reshape(%415, newshape=[]) /* ty=uint32 */;
  %419 = reshape(%416, newshape=[3, 7, 3]) /* ty=Tensor[(3, 7, 3), uint32] */;
  %420 = reshape(%417, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %421 = @func_550(%418, %419, %420) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */;
  %422 = cast(meta[relay.Constant][25] /* ty=Tensor[(550, 1), int8] */, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
  %423 = reshape(%422, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %424 = @func_3434(%423) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %425 = floor_divide(%413, %414) /* ty=Tensor[(11, 13, 10), float32] */;
  %426 = %421.3;
  %427 = %424.0;
  (%425, %426, meta[relay.Constant][24] /* ty=Tensor[(63), uint32] */, %var_9218, %427, meta[relay.Constant][25] /* ty=Tensor[(550, 1), int8] */)
}

def @func_6634(%var_6590: Tensor[(72), float64], %var_6595: Tensor[(105), float32]) -> (Tensor[(14, 15, 10), bool], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(14, 15, 10), bool], Tensor[(10, 5, 11), bool]) {
  %428 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(14, 15, 10), int32] */;
  %429 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(14, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(14, 15, 10), int32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %432 = bitwise_and(%430, %431) /* ty=Tensor[(14, 15, 10), int32] */;
  %433 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 15, 10), int32] */, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %437 = cast(meta[relay.Constant][28] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %438 = cast(meta[relay.Constant][28] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %439 = reshape(%437, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %440 = reshape(%438, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %441 = @func_2616(%439, %440) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %442 = cast(%var_6590, dtype="float64") /* ty=Tensor[(72), float64] */;
  %443 = reshape(%442, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %444 = cast(%var_6595, dtype="float32") /* ty=Tensor[(105), float32] */;
  %445 = reshape(%444, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %446 = @func_5753(%445) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) */;
  %447 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 15, 10), int32] */, dtype="float32") /* ty=Tensor[(14, 15, 10), float32] */;
  %448 = asinh(%447) /* ty=Tensor[(14, 15, 10), float32] */;
  %449 = cast(%448, dtype="float32") /* ty=Tensor[(14, 15, 10), float32] */;
  %450 = cosh(%449) /* ty=Tensor[(14, 15, 10), float32] */;
  %451 = cast(%450, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %452 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%448, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %455 = %446.1;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %457 = reshape(%456, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %458 = @func_5215(%457) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */;
  %459 = logical_and(%435, %436) /* ty=Tensor[(14, 15, 10), bool] */;
  %460 = %441.0;
  %461 = @func_286(%443) /* ty=Tensor[(6, 3, 4), float64] */;
  %462 = greater(%453, %454) /* ty=Tensor[(14, 15, 10), bool] */;
  %463 = %458.1;
  (%459, %460, meta[relay.Constant][28] /* ty=Tensor[(2400), float32] */, %461, %var_6590, %455, %var_6595, %462, %463)
}

def @func_11127(%var_11098: Tensor[(14, 7, 13), int16], %var_11099: Tensor[(14, 7, 13), int16], %var_11105: Tensor[(195, 2), float64], %var_11106: Tensor[(63), uint32]) -> (Tensor[(14, 7, 13), bool], Tensor[(10, 15, 16), bool], Tensor[(195, 2), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %464 = cast(%var_11099, dtype="bool") /* ty=Tensor[(14, 7, 13), bool] */;
  %465 = shape_of(%var_11098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%var_11098, dtype="bool") /* ty=Tensor[(14, 7, 13), bool] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %468 = cast(%var_11105, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %469 = cast(%var_11106, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %470 = cast(meta[relay.Constant][29] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %471 = reshape(%468, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
  %472 = reshape(%469, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %473 = reshape(%470, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %474 = @func_3701(%471, %472, %473) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
  %475 = less(%466, %467) /* ty=Tensor[(14, 7, 13), bool] */;
  %476 = %474.6;
  (%475, %476, %var_11105, %var_11106, meta[relay.Constant][29] /* ty=Tensor[(2400), float32] */)
}

def @func_11261() -> (Tensor[(15, 9, 9), float32],) {
  %477 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %478 = %477.0;
  (%478,)
}

def @func_13418(%var_13413: Tensor[(550), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(275, 2), bool], Tensor[(550), int8]) {
  %479 = cast(%var_13413, dtype="int8") /* ty=Tensor[(550), int8] */;
  %480 = cast(%var_13413, dtype="int8") /* ty=Tensor[(550), int8] */;
  %481 = reshape(%479, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
  %482 = reshape(%480, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
  %483 = @func_12198(%481, %482) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */;
  %484 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  %485 = %483.1;
  (%484, %485, %var_13413)
}

def @func_6945(%var_6911: float64, %var_6912: Tensor[(11, 1, 9), float64], %var_6926: Tensor[(11, 5, 9), bool]) -> (Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) {
  %486 = cast(%var_6911, dtype="float64") /* ty=float64 */;
  %487 = cast(%var_6912, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
  %488 = cast(%var_6912, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
  %489 = cast(%var_6911, dtype="bool") /* ty=bool */;
  %490 = logical_or(%488, %489) /* ty=Tensor[(11, 1, 9), bool] */;
  %491 = cast(%490, dtype="uint64") /* ty=Tensor[(11, 1, 9), uint64] */;
  %492 = cast(%var_6926, dtype="uint64") /* ty=Tensor[(11, 5, 9), uint64] */;
  %493 = mod(%486, %487) /* ty=Tensor[(11, 1, 9), float64] */;
  %494 = add(%491, %492) /* ty=Tensor[(11, 5, 9), uint64] */;
  (%493, %494)
}

def @func_16298() -> Tensor[(15, 9, 9), float64] {
  %495 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %495.0
}

def @func_16747(%var_16727: Tensor[(550, 1), int8], %var_16741: Tensor[(700), float32], %var_16742: int8, %var_16743: Tensor[(20, 120), float32]) -> (Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(550, 1), float64], Tensor[(15, 9, 9), float64], Tensor[(10, 15, 16), bool], Tensor[(700), float32], int8, Tensor[(20, 120), float32]) {
  %496 = @func_12334() /* ty=(Tensor[(495), bool],) */;
  %497 = cast(%var_16727, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
  %498 = cast(%var_16727, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
  %499 = reshape(%497, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
  %500 = reshape(%498, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
  %501 = @func_12198(%499, %500) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */;
  %502 = cast(%var_16727, dtype="float64") /* ty=Tensor[(550, 1), float64] */;
  %503 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %504 = cast(%var_16741, dtype="float32") /* ty=Tensor[(700), float32] */;
  %505 = cast(%var_16742, dtype="int8") /* ty=int8 */;
  %506 = cast(%var_16743, dtype="float32") /* ty=Tensor[(20, 120), float32] */;
  %507 = reshape(%504, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %508 = reshape(%505, newshape=[]) /* ty=int8 */;
  %509 = reshape(%506, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %510 = @func_3151(%507, %508, %509) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) */;
  %511 = %496.0;
  %512 = %501.0;
  %513 = acosh(%502) /* ty=Tensor[(550, 1), float64] */;
  %514 = %503.0;
  %515 = %510.3;
  (%511, %512, %513, %514, %515, %var_16741, %var_16742, %var_16743)
}

def @func_14462(%var_14443: Tensor[(9, 5, 6), int8], %var_14444: Tensor[(9, 5, 6), int8], %var_14451: Tensor[(63), uint32]) -> (Tensor[(9, 5, 6), bool], Tensor[(60), uint64], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %516 = cast(%var_14444, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
  %517 = shape_of(%var_14443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_14443, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %520 = cast(meta[relay.Constant][30] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %521 = cast(%var_14451, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %522 = cast(meta[relay.Constant][31] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %523 = reshape(%520, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
  %524 = reshape(%521, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %525 = reshape(%522, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %526 = @func_3701(%523, %524, %525) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
  %527 = not_equal(%518, %519) /* ty=Tensor[(9, 5, 6), bool] */;
  %528 = %526.1;
  (%527, %528, meta[relay.Constant][30] /* ty=Tensor[(390), float64] */, %var_14451, meta[relay.Constant][31] /* ty=Tensor[(2400), float32] */)
}

def @func_13059(%var_13039: float64, %var_13040: Tensor[(495), bool]) -> (Tensor[(15, 9, 9), float32], float64, float64, Tensor[(495), bool]) {
  %529 = cast(%var_13039, dtype="float64") /* ty=float64 */;
  %530 = cast(%var_13040, dtype="bool") /* ty=Tensor[(495), bool] */;
  %531 = reshape(%529, newshape=[]) /* ty=float64 */;
  %532 = reshape(%530, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %533 = @func_11542(%531, %532) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */;
  %534 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %535 = %533.4;
  (%534, %535, %var_13039, %var_13040)
}

def @func_3151(%var_3130: Tensor[(5, 10, 14), float32], %var_3137: int8, %var_3146: Tensor[(2400), float32]) -> (Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) {
  %536 = cast(%var_3130, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %537 = exp(%536) /* ty=Tensor[(5, 10, 14), float32] */;
  %538 = cast(%537, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %539 = shape_of(%var_3130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%var_3130, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %542 = cast(%var_3137, dtype="int8") /* ty=int8 */;
  %543 = reshape(%542, newshape=[]) /* ty=int8 */;
  %544 = cast(%var_3146, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %545 = cast(%var_3146, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %546 = reshape(%544, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %547 = reshape(%545, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %548 = @func_2616(%546, %547) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %549 = floor_divide(%540, %541) /* ty=Tensor[(5, 10, 14), float32] */;
  %550 = @func_592(%543) /* ty=Tensor[(1, 7, 1), bool] */;
  %551 = %548.0;
  (%549, %550, %var_3137, %551, %var_3146)
}

def @func_708(%var_679: Tensor[(12, 5, 1), uint64], %var_695: Tensor[(7, 9), uint32]) -> (Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) {
  %552 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 5, 1), uint64] */, dtype="uint64") /* ty=Tensor[(12, 5, 1), uint64] */;
  %553 = shape_of(%var_679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%var_679, dtype="uint64") /* ty=Tensor[(12, 5, 1), uint64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %556 = cast(meta[relay.Constant][33] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %557 = cast(%var_695, dtype="uint32") /* ty=Tensor[(7, 9), uint32] */;
  %558 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %559 = reshape(%556, newshape=[]) /* ty=uint32 */;
  %560 = reshape(%557, newshape=[3, 7, 3]) /* ty=Tensor[(3, 7, 3), uint32] */;
  %561 = reshape(%558, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %562 = @func_550(%559, %560, %561) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */;
  %563 = maximum(%554, %555) /* ty=Tensor[(12, 5, ?), uint64] */;
  %564 = %562.0;
  (%563, %564, meta[relay.Constant][33] /* ty=uint32 */, %var_695, meta[relay.Constant][34] /* ty=Tensor[(72), float64] */)
}

def @func_4293(%var_4286: Tensor[(7, 10, 9), float32]) -> (Tensor[(7, 10, 9), float32],) {
  %565 = cast(%var_4286, dtype="float32") /* ty=Tensor[(7, 10, 9), float32] */;
  %566 = tan(%565) /* ty=Tensor[(7, 10, 9), float32] */;
  (%566,)
}

def @func_19786(%var_19778: Tensor[(7, 3, 4), float32], %var_19779: Tensor[(7, 3, 4), float32]) -> Tensor[(7, 3, 4), float32] {
  %567 = cast(%var_19779, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %568 = shape_of(%var_19778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%var_19778, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%569, %570) /* ty=Tensor[(7, 3, 4), float32] */
}

def @func_13771() -> (Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %571 = cast(meta[relay.Constant][35] /* ty=Tensor[(390, 1), float64] */, dtype="float64") /* ty=Tensor[(390, 1), float64] */;
  %572 = cast(meta[relay.Constant][36] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %573 = cast(meta[relay.Constant][37] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %574 = reshape(%571, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %575 = reshape(%572, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %576 = reshape(%573, newshape=[300, 8]) /* ty=Tensor[(300, 8), float32] */;
  %577 = @func_11601(%574, %575, %576) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(63), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(300, 8), bool]) */;
  %578 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  %579 = %577.4;
  (%578, %579, meta[relay.Constant][35] /* ty=Tensor[(390, 1), float64] */, meta[relay.Constant][36] /* ty=Tensor[(63), uint32] */, meta[relay.Constant][37] /* ty=Tensor[(2400), float32] */)
}

def @func_18480(%var_18469: Tensor[(1024), uint16], %var_18470: Tensor[(210, 3), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(16, 4, 16), int8], Tensor[(1024), uint16], Tensor[(210, 3), float32]) {
  %580 = @func_12234() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %581 = cast(%var_18469, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %582 = cast(%var_18469, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %583 = cast(%var_18470, dtype="float32") /* ty=Tensor[(210, 3), float32] */;
  %584 = cast(%var_18469, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %585 = reshape(%581, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %586 = reshape(%582, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %587 = reshape(%583, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %588 = reshape(%584, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %589 = @func_6067(%585, %586, %587, %588) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %590 = %580.0;
  %591 = %589.2;
  (%590, %591, %var_18469, %var_18470)
}

def @func_13512() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %592 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %593 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %594 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %595 = %592.0;
  %596 = %593.0;
  %597 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %598 = %594.1;
  (%595, %596, %597, %598)
}

def @func_19370(%var_19342: Tensor[(11, 2400), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(3, 20), uint64], Tensor[(896), float64], Tensor[(700), float32], Tensor[(11, 2400), bool], Tensor[(15, 9, 9), float32]) {
  %599 = @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %600 = cast(meta[relay.Constant][38] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %601 = cast(meta[relay.Constant][39] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %602 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 2400), float32] */, dtype="float32") /* ty=Tensor[(1, 2400), float32] */;
  %603 = reshape(%600, newshape=[14, 8, 8]) /* ty=Tensor[(14, 8, 8), float64] */;
  %604 = reshape(%601, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %605 = reshape(%602, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %606 = @func_4093(%603, %604, %605) /* ty=(Tensor[(14, 8, 8), float64], Tensor[(72), float64], Tensor[(3, 20), uint64], Tensor[(1, 63), uint32], Tensor[(13, 6, 7), float32], Tensor[(546), float32], Tensor[(700), float32], int8, Tensor[(2400), float32], Tensor[(6, 3, 4), float64]) */;
  %607 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 2400), float32] */, dtype="bool") /* ty=Tensor[(1, 2400), bool] */;
  %608 = cast(%var_19342, dtype="bool") /* ty=Tensor[(11, 2400), bool] */;
  %609 = @func_18013() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %610 = %599.1;
  %611 = %606.2;
  %612 = greater(%607, %608) /* ty=Tensor[(11, 2400), bool] */;
  %613 = %609.0;
  (%610, %611, meta[relay.Constant][38] /* ty=Tensor[(896), float64] */, meta[relay.Constant][39] /* ty=Tensor[(700), float32] */, %612, %613)
}

def @func_16050(%var_16039: Tensor[(896), uint32]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(15, 9, 9), float32], Tensor[(14, 16, 4), bool], Tensor[(896), uint32]) {
  %614 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %615 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %616 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %617 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %618 = cast(%var_16039, dtype="uint32") /* ty=Tensor[(896), uint32] */;
  %619 = reshape(%618, newshape=[14, 16, 4]) /* ty=Tensor[(14, 16, 4), uint32] */;
  %620 = @func_5891(%619) /* ty=(Tensor[(14, 16, 4), bool],) */;
  %621 = %614.0;
  %622 = %615.0;
  %623 = %616.1;
  %624 = %617.0;
  %625 = %620.0;
  (%621, %622, %623, %624, %625, %var_16039)
}

def @func_13380() -> Tensor[(15, 9, 9), float32] {
  @func_10305() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17138() -> (Tensor[(15, 9, 9), float64],) {
  %626 = @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %627 = %626.1;
  (%627,)
}

def @func_2616(%var_2599: Tensor[(10, 15, 16), float32], %var_2600: Tensor[(10, 15, 16), float32]) -> (Tensor[(10, 15, 16), bool],) {
  %628 = cast(%var_2600, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
  %629 = shape_of(%var_2599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_2599, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %632 = greater_equal(%630, %631) /* ty=Tensor[(10, 15, 16), bool] */;
  (%632,)
}

def @func_11796() -> Tensor[(10, 14, 4), float64] {
  %633 = @func_11561() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) */;
  %633.1
}

def @main(%var_21468: Tensor[(7, 8, 7), bool]) -> Tensor[(7, 8, 7), bool] {
  %634 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 8, 7), bool] */, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  %635 = shape_of(%var_21468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%var_21468, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%636, %637) /* ty=Tensor[(7, 8, 7), bool] */
}

def @func_20732() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(65, 9), float64], Tensor[(585), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 5, 11), bool], Tensor[(5, 110), int8]) {
  %638 = cast(meta[relay.Constant][42] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %639 = reshape(%638, newshape=[65, 9]) /* ty=Tensor[(65, 9), float32] */;
  %640 = @func_18813() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %641 = %640.1;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %643 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 110), int8] */, dtype="int8") /* ty=Tensor[(5, 110), int8] */;
  %644 = reshape(%642, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %645 = reshape(%643, newshape=[55, 10]) /* ty=Tensor[(55, 10), int8] */;
  %646 = @func_11215(%644, %645) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */;
  %647 = @func_11088() /* ty=Tensor[(15, 9, 9), float64] */;
  %648 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  %649 = @func_14520(%639) /* ty=Tensor[(65, 9), float64] */;
  %650 = %646.1;
  (%647, %648, %649, meta[relay.Constant][42] /* ty=Tensor[(585), float32] */, %641, %650, meta[relay.Constant][43] /* ty=Tensor[(5, 110), int8] */)
}

def @func_16230(%var_16190: uint32) -> (Tensor[(15, 9, 9), float64], Tensor[(550), int8], uint32) {
  %651 = cast(%var_16190, dtype="uint32") /* ty=uint32 */;
  %652 = reshape(%651, newshape=[]) /* ty=uint32 */;
  %653 = @func_10879(%652) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550), int8], Tensor[(3, 7, 3), uint32], uint32, Tensor[(63), uint32], Tensor[(6, 12), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %654 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %655 = %653.3;
  (%654, %655, %var_16190)
}

def @func_8389(%var_8364: Tensor[(15, 1, 6), int16]) -> (Tensor[(15, 13, 6), float64], Tensor[(15, 13, 6), float64]) {
  %656 = cast(%var_8364, dtype="int16") /* ty=Tensor[(15, 1, 6), int16] */;
  %657 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 13, 6), int16] */, dtype="int16") /* ty=Tensor[(15, 13, 6), int16] */;
  %658 = left_shift(%656, %657) /* ty=Tensor[(15, 13, 6), int16] */;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %660 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 13, 6), int16] */, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %661 = cosh(%659) /* ty=Tensor[(15, 13, 6), float64] */;
  %662 = log2(%660) /* ty=Tensor[(15, 13, 6), float64] */;
  (%661, %662)
}

def @func_550(%var_490: uint32, %var_491: Tensor[(3, 7, 3), uint32], %var_496: Tensor[(72), float64]) -> (Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) {
  %663 = cast(%var_490, dtype="uint32") /* ty=uint32 */;
  %664 = cast(%var_491, dtype="uint32") /* ty=Tensor[(3, 7, 3), uint32] */;
  %665 = cast(%var_496, dtype="float64") /* ty=Tensor[(72), float64] */;
  %666 = reshape(%665, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %667 = cast(%var_496, dtype="float64") /* ty=Tensor[(72), float64] */;
  %668 = reshape(%667, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %669 = @func_286(%666) /* ty=Tensor[(6, 3, 4), float64] */;
  %670 = cast(%669, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  %671 = reshape(%670, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %672 = cast(%var_496, dtype="float64") /* ty=Tensor[(72), float64] */;
  %673 = reshape(%672, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %674 = @func_286(%668) /* ty=Tensor[(6, 3, 4), float64] */;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  %676 = reshape(%675, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %677 = bitwise_xor(%663, %664) /* ty=Tensor[(3, 7, 3), uint32] */;
  %678 = @func_286(%671) /* ty=Tensor[(6, 3, 4), float64] */;
  %679 = @func_286(%673) /* ty=Tensor[(6, 3, 4), float64] */;
  %680 = @func_286(%676) /* ty=Tensor[(6, 3, 4), float64] */;
  (%677, %669, %var_496, %674, %678, %679, %680)
}

def @func_13095() -> Tensor[(15, 9, 9), float64] {
  %681 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %681.1
}

def @func_20633(%var_20616: Tensor[(26400), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(896), float64], Tensor[(26400), float32], uint32, Tensor[(15, 4), uint64], Tensor[(63, 1), uint32]) {
  %682 = @func_17771() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(65, 9), int8], Tensor[(65, 9), bool]) */;
  %683 = cast(%var_20616, dtype="float32") /* ty=Tensor[(26400), float32] */;
  %684 = reshape(%683, newshape=[11, 2400]) /* ty=Tensor[(11, 2400), float32] */;
  %685 = @func_19370(%684) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(3, 20), uint64], Tensor[(896), float64], Tensor[(700), float32], Tensor[(11, 2400), bool], Tensor[(15, 9, 9), float32]) */;
  %686 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 4), uint64] */, dtype="uint64") /* ty=Tensor[(15, 4), uint64] */;
  %687 = cast(meta[relay.Constant][46] /* ty=Tensor[(63, 1), uint32] */, dtype="uint32") /* ty=Tensor[(63, 1), uint32] */;
  %688 = reshape(%686, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %689 = reshape(%687, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %690 = @func_708(%688, %689) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %691 = %682.0;
  %692 = %685.2;
  %693 = %690.2;
  (%691, %692, %var_20616, %693, meta[relay.Constant][45] /* ty=Tensor[(15, 4), uint64] */, meta[relay.Constant][46] /* ty=Tensor[(63, 1), uint32] */)
}

def @func_10933() -> (Tensor[(15, 9, 9), float32],) {
  %694 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  (%694,)
}

def @func_592(%var_582: int8) -> Tensor[(1, 7, 1), bool] {
  %695 = cast(%var_582, dtype="int8") /* ty=int8 */;
  %696 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 7, 1), int8] */, dtype="int8") /* ty=Tensor[(1, 7, 1), int8] */;
  %697 = right_shift(%695, %696) /* ty=Tensor[(1, 7, 1), int8] */;
  %698 = cast(%var_582, dtype="bool") /* ty=bool */;
  %699 = cast(%697, dtype="bool") /* ty=Tensor[(1, 7, 1), bool] */;
  less_equal(%698, %699) /* ty=Tensor[(1, 7, 1), bool] */
}

def @func_12475(%var_12456: Tensor[(15, 9, 9), float32]) -> Tensor[(15, 9, 9), float64] {
  %700 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %701 = cast(%var_12456, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%700, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%703, %704) /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_4093(%var_4058: Tensor[(14, 8, 8), float64], %var_4074: Tensor[(700), float32], %var_4076: Tensor[(2400), float32]) -> (Tensor[(14, 8, 8), float64], Tensor[(72), float64], Tensor[(3, 20), uint64], Tensor[(1, 63), uint32], Tensor[(13, 6, 7), float32], Tensor[(546), float32], Tensor[(700), float32], int8, Tensor[(2400), float32], Tensor[(6, 3, 4), float64]) {
  %705 = cast(%var_4058, dtype="float64") /* ty=Tensor[(14, 8, 8), float64] */;
  %706 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 20), uint64] */, dtype="uint64") /* ty=Tensor[(3, 20), uint64] */;
  %707 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %708 = reshape(%706, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %709 = reshape(%707, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %710 = @func_708(%708, %709) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %711 = cast(meta[relay.Constant][50] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %712 = cast(meta[relay.Constant][50] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %713 = cast(%var_4074, dtype="float32") /* ty=Tensor[(700), float32] */;
  %714 = cast(meta[relay.Constant][51] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %715 = cast(%var_4076, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %716 = reshape(%711, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
  %717 = reshape(%712, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
  %718 = reshape(%713, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %719 = reshape(%714, newshape=[]) /* ty=int8 */;
  %720 = reshape(%715, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %721 = @func_3463(%716, %717, %718, %719, %720) /* ty=(Tensor[(13, 6, 7), float32], Tensor[(5, 10, 14), float32], Tensor[(700), float32], int8, Tensor[(2400), float32]) */;
  %722 = %710.4;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(72), float64] */;
  %724 = reshape(%723, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %725 = asin(%705) /* ty=Tensor[(14, 8, 8), float64] */;
  %726 = %721.0;
  %727 = @func_286(%724) /* ty=Tensor[(6, 3, 4), float64] */;
  (%725, %722, meta[relay.Constant][48] /* ty=Tensor[(3, 20), uint64] */, meta[relay.Constant][49] /* ty=Tensor[(1, 63), uint32] */, %726, meta[relay.Constant][50] /* ty=Tensor[(546), float32] */, %var_4074, meta[relay.Constant][51] /* ty=int8 */, %var_4076, %727)
}

def @func_11633(%var_11609: Tensor[(15, 9, 9), float32]) -> (Tensor[(15, 9, 9), uint32], Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32]) {
  %728 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %729 = %728.0;
  %730 = cast(%var_11609, dtype="uint32") /* ty=Tensor[(15, 9, 9), uint32] */;
  %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%729, dtype="uint32") /* ty=Tensor[(15, 9, 9), uint32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %734 = cast(meta[relay.Constant][52] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %735 = reshape(%734, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %736 = @func_4293(%735) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %737 = add(%732, %733) /* ty=Tensor[(15, 9, 9), uint32] */;
  %738 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
  %739 = %736.0;
  (%737, %738, %739, meta[relay.Constant][52] /* ty=Tensor[(630), float32] */)
}

def @func_21323() -> Tensor[(15, 9, 9), float64] {
  @func_15823() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_10099() -> Tensor[(15, 9, 9), float32] {
  %740 = cast(meta[relay.Constant][54] /* ty=Tensor[(15, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %741 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(15, 9, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%742, %743) /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_8582(%var_8550: Tensor[(15, 2, 16), int8], %var_8551: Tensor[(15, 2, 16), int8], %var_8557: Tensor[(1024), uint16]) -> (Tensor[(15, 2, 16), bool], Tensor[(1024), uint16], Tensor[(70, 9), bool], Tensor[(7, 10, 9), float32]) {
  %744 = cast(%var_8551, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %745 = shape_of(%var_8550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_8550, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %748 = cast(%var_8557, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %749 = cast(%var_8557, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %750 = cast(meta[relay.Constant][55] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %751 = cast(%var_8557, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %752 = reshape(%748, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %753 = reshape(%749, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %754 = reshape(%750, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %755 = reshape(%751, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %756 = @func_6067(%752, %753, %754, %755) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %757 = %756.1;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %759 = cosh(%758) /* ty=Tensor[(70, 9), float64] */;
  %760 = cast(meta[relay.Constant][55] /* ty=Tensor[(630), float32] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(2), int32] */;
  %762 = cast(%759, dtype="bool") /* ty=Tensor[(70, 9), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %764 = cast(meta[relay.Constant][55] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %765 = reshape(%764, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %766 = @func_4293(%765) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %767 = not_equal(%746, %747) /* ty=Tensor[(15, 2, 16), bool] */;
  %768 = equal(%762, %763) /* ty=Tensor[(70, 9), bool] */;
  %769 = %766.0;
  (%767, %var_8557, %768, %769)
}

def @func_20389() -> (Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), bool], Tensor[(1, 585), float32]) {
  %770 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 585), float32] */, dtype="float32") /* ty=Tensor[(1, 585), float32] */;
  %771 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 585), float32] */, dtype="float32") /* ty=Tensor[(1, 585), float32] */;
  %772 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 585), float32] */, dtype="float32") /* ty=Tensor[(1, 585), float32] */;
  %773 = reshape(%770, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %774 = reshape(%771, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %775 = reshape(%772, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %776 = @func_10348(%773, %774, %775) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */;
  %777 = @func_19136() /* ty=Tensor[(15, 9, 9), float32] */;
  %778 = %776.0;
  (%777, %778, meta[relay.Constant][56] /* ty=Tensor[(1, 585), float32] */)
}

def @func_13445() -> (Tensor[(65, 9), float32],) {
  %779 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %780 = %779.2;
  (%780,)
}

def @func_17104() -> Tensor[(15, 9, 9), float64] {
  %781 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %781.0
}

def @func_20255() -> (Tensor[(15, 9, 9), float32],) {
  %782 = @func_17480() /* ty=Tensor[(15, 9, 9), float32] */;
  (%782,)
}

def @func_18694() -> (Tensor[(12, 4, 15), float64], Tensor[(15, 9, 9), float32]) {
  %783 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 15), float64] */;
  %784 = atanh(%783) /* ty=Tensor[(12, 4, 15), float64] */;
  %785 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
  (%784, %785)
}

def @func_14520(%var_14507: Tensor[(65, 9), float32]) -> Tensor[(65, 9), float64] {
  %786 = @func_13445() /* ty=(Tensor[(65, 9), float32],) */;
  %787 = %786.0;
  %788 = cast(%var_14507, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(2), int32] */;
  %790 = cast(%787, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %792 = equal(%790, %791) /* ty=Tensor[(65, 9), bool] */;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  asinh(%793) /* ty=Tensor[(65, 9), float64] */
}

def @func_21027() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %794 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %795 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %796 = %794.0;
  %797 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  (%795, %796, %797)
}

def @func_14320() -> Tensor[(15, 9, 9), float32] {
  @func_12870() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_13692() -> (Tensor[(65, 9), float32],) {
  %798 = @func_13445() /* ty=(Tensor[(65, 9), float32],) */;
  %799 = %798.0;
  (%799,)
}

def @func_10348(%var_10307: Tensor[(13, 9, 5), float32], %var_10308: Tensor[(13, 9, 5), float32], %var_10323: Tensor[(13, 9, 5), float32]) -> (Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) {
  %800 = cast(%var_10308, dtype="bool") /* ty=Tensor[(13, 9, 5), bool] */;
  %801 = shape_of(%var_10307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_10307, dtype="bool") /* ty=Tensor[(13, 9, 5), bool] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %804 = cast(%var_10323, dtype="float64") /* ty=Tensor[(13, 9, 5), float64] */;
  %805 = shape_of(%var_10307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%var_10307, dtype="float64") /* ty=Tensor[(13, 9, 5), float64] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %808 = divide(%806, %807) /* ty=Tensor[(13, 9, 5), float64] */;
  %809 = cast(%var_10308, dtype="uint8") /* ty=Tensor[(13, 9, 5), uint8] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%808, dtype="uint8") /* ty=Tensor[(13, 9, 5), uint8] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %813 = greater_equal(%802, %803) /* ty=Tensor[(13, 9, 5), bool] */;
  %814 = @func_10241() /* ty=Tensor[(15, 9, 9), float32] */;
  %815 = minimum(%811, %812) /* ty=Tensor[(13, 9, 5), uint8] */;
  (%813, %814, %815)
}

def @func_17232() -> (Tensor[(15, 9, 9), float32],) {
  %816 = @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %817 = %816.0;
  (%817,)
}

def @func_19896(%var_19893: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) {
  %818 = @func_17708() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
  %819 = cast(%var_19893, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %820 = reshape(%819, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %821 = @func_13260(%820) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) */;
  %822 = %818.0;
  %823 = %821.0;
  (%822, %823, %var_19893)
}

def @func_19483(%var_19480: Tensor[(630), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(630), float32], Tensor[(1024), uint16], Tensor[(630), float32]) {
  %824 = @func_18603() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %825 = cast(meta[relay.Constant][58] /* ty=Tensor[(1024), uint16] */, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %826 = cast(%var_19480, dtype="float32") /* ty=Tensor[(630), float32] */;
  %827 = reshape(%825, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %828 = reshape(%826, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %829 = @func_14608(%827, %828) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32]) */;
  %830 = %824.0;
  %831 = %829.4;
  (%830, %831, meta[relay.Constant][58] /* ty=Tensor[(1024), uint16] */, %var_19480)
}

def @func_13178() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) {
  %832 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %833 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
  %834 = @func_12665() /* ty=Tensor[(15, 9, 9), float64] */;
  %835 = %832.0;
  %836 = %833.1;
  (%834, %835, %836)
}

def @func_17314() -> (Tensor[(495), bool], Tensor[(15, 9, 9), float64]) {
  %837 = @func_12334() /* ty=(Tensor[(495), bool],) */;
  %838 = %837.0;
  %839 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  (%838, %839)
}

def @func_10556() -> Tensor[(15, 9, 9), float32] {
  @func_10305() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_15709() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %840 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %841 = @func_14320() /* ty=Tensor[(15, 9, 9), float32] */;
  %842 = @func_10945() /* ty=Tensor[(15, 9, 9), float64] */;
  (%840, %841, %842)
}

def @func_20773() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %843 = @func_18087() /* ty=Tensor[(15, 9, 9), float32] */;
  %844 = @func_18087() /* ty=Tensor[(15, 9, 9), float32] */;
  (%843, %844)
}

def @func_19292() -> (Tensor[(15, 9, 9), float32],) {
  %845 = @func_18603() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %846 = %845.0;
  (%846,)
}

def @func_6067(%var_6000: Tensor[(16, 4, 16), uint16], %var_6001: Tensor[(16, 4, 16), uint16], %var_6010: Tensor[(70, 9), float32], %var_6012: Tensor[(16, 4, 16), bool]) -> (Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) {
  %847 = cast(%var_6001, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %848 = shape_of(%var_6000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%var_6000, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %851 = greater(%849, %850) /* ty=Tensor[(16, 4, 16), bool] */;
  %852 = cast(%var_6012, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %856 = cast(%var_6010, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %857 = reshape(%856, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %858 = @func_4293(%857) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %859 = %858.0;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(7, 10, 9), float64] */;
  %861 = shape_of(%var_6010, dtype="int32") /* ty=Tensor[(2), int32] */;
  %862 = cast(%var_6010, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %864 = cast(%var_6001, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
  %865 = atan(%864) /* ty=Tensor[(16, 4, 16), float64] */;
  %866 = cast(%var_6012, dtype="int8") /* ty=Tensor[(16, 4, 16), int8] */;
  %867 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%865, dtype="int8") /* ty=Tensor[(16, 4, 16), int8] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %870 = less_equal(%854, %855) /* ty=Tensor[(16, 4, 16), bool] */;
  %871 = floor_mod(%862, %863) /* ty=Tensor[(70, 9), float64] */;
  %872 = bitwise_and(%868, %869) /* ty=Tensor[(16, 4, 16), int8] */;
  (%870, %871, %872)
}

def @func_17001() -> (Tensor[(10, 14, 4), float64],) {
  %873 = @func_16614() /* ty=Tensor[(10, 14, 4), float64] */;
  (%873,)
}

def @func_10945() -> Tensor[(15, 9, 9), float64] {
  %874 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %874.0
}

def @func_17185() -> (Tensor[(15, 9, 9), float64],) {
  %875 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  (%875,)
}

def @func_12428() -> Tensor[(15, 9, 9), float64] {
  %876 = @func_12234() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %876.0
}

def @func_20046(%var_19986: Tensor[(495), bool], %var_20042: Tensor[(25, 10), float64]) -> (Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool], Tensor[(10, 14, 4), float64], Tensor[(495), bool], Tensor[(15, 9, 9), float32], Tensor[(1024), bool], Tensor[(15, 9, 9), float64], Tensor[(250), float64], Tensor[(25, 10), float64]) {
  %877 = @func_14486() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %878 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %879 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
  %880 = cast(meta[relay.Constant][59] /* ty=Tensor[(1024), uint16] */, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %881 = reshape(%880, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %882 = @func_17968(%881) /* ty=(Tensor[(65, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) */;
  %883 = cast(3.90862f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %884 = cast(%var_19986, dtype="bool") /* ty=Tensor[(495), bool] */;
  %885 = reshape(%883, newshape=[]) /* ty=float64 */;
  %886 = reshape(%884, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %887 = @func_13059(%885, %886) /* ty=(Tensor[(15, 9, 9), float32], float64, float64, Tensor[(495), bool]) */;
  %888 = %887.1;
  %889 = cast(meta[relay.Constant][59] /* ty=Tensor[(1024), uint16] */, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %890 = cast(%888, dtype="bool") /* ty=bool */;
  %891 = %877.0;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %893 = reshape(%892, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %894 = cast(%var_20042, dtype="float64") /* ty=Tensor[(25, 10), float64] */;
  %895 = reshape(%894, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %896 = @func_15613(%895) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(250), float64], Tensor[(550), int8], Tensor[(15, 9, 9), float64]) */;
  %897 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  %898 = %878.0;
  %899 = %879.3;
  %900 = %882.1;
  %901 = greater_equal(%889, %890) /* ty=Tensor[(1024), bool] */;
  %902 = @func_12475(%893) /* ty=Tensor[(15, 9, 9), float64] */;
  %903 = %896.2;
  (%897, %891, 3.90862f64 /* ty=float64 */, %var_19986, %898, %899, %900, %901, %902, %903, %var_20042)
}

def @func_10450() -> Tensor[(15, 9, 9), float32] {
  %904 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %904.0
}

def @func_11601(%var_11584: Tensor[(390), float64], %var_11585: Tensor[(63), uint32], %var_11586: Tensor[(300, 8), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(63), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(300, 8), bool]) {
  %905 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %906 = cast(%var_11584, dtype="float64") /* ty=Tensor[(390), float64] */;
  %907 = cast(%var_11585, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %908 = cast(%var_11586, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
  %909 = reshape(%906, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
  %910 = reshape(%907, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %911 = reshape(%908, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %912 = @func_3701(%909, %910, %911) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
  %913 = cast(%var_11586, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
  %914 = asin(%913) /* ty=Tensor[(300, 8), float32] */;
  %915 = cast(%914, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
  %916 = shape_of(%var_11586, dtype="int32") /* ty=Tensor[(2), int32] */;
  %917 = cast(%var_11586, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %919 = %905.0;
  %920 = %912.2;
  %921 = logical_or(%917, %918) /* ty=Tensor[(300, 8), bool] */;
  (%919, %920, %var_11584, %var_11585, %921)
}

def @func_5215(%var_5182: Tensor[(14, 5, 5), float64]) -> (Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) {
  %922 = cast(%var_5182, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %923 = sin(%922) /* ty=Tensor[(14, 5, 5), float64] */;
  %924 = cast(%923, dtype="float32") /* ty=Tensor[(14, 5, 5), float32] */;
  %925 = cast(meta[relay.Constant][60] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %926 = reshape(%925, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %927 = @func_3434(%926) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %928 = tan(%924) /* ty=Tensor[(14, 5, 5), float32] */;
  %929 = %927.0;
  (%928, %929, meta[relay.Constant][60] /* ty=Tensor[(550), int8] */)
}

def @func_12935(%var_12930: Tensor[(78), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %930 = cast(%var_12930, dtype="float64") /* ty=Tensor[(78), float64] */;
  %931 = reshape(%930, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %932 = @func_10450() /* ty=Tensor[(15, 9, 9), float32] */;
  %933 = @func_10539(%931) /* ty=Tensor[(13, 2, 3), float64] */;
  (%932, %933, %var_12930)
}

def @func_18225() -> (Tensor[(4, 14, 1), float64], Tensor[(550), int8], Tensor[(55, 10), int8], Tensor[(27, 45), float32]) {
  %934 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 14, 1), float64] */;
  %935 = @func_13178() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) */;
  %936 = cast(meta[relay.Constant][62] /* ty=Tensor[(27, 45), float32] */, dtype="float32") /* ty=Tensor[(27, 45), float32] */;
  %937 = %935.2;
  %938 = cast(%937, dtype="int8") /* ty=Tensor[(550), int8] */;
  %939 = reshape(%936, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %940 = reshape(%938, newshape=[55, 10]) /* ty=Tensor[(55, 10), int8] */;
  %941 = @func_11215(%939, %940) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */;
  %942 = exp(%934) /* ty=Tensor[(4, 14, 1), float64] */;
  %943 = %941.2;
  (%942, %937, %943, meta[relay.Constant][62] /* ty=Tensor[(27, 45), float32] */)
}

def @func_13318() -> (Tensor[(10, 14, 4), float64],) {
  %944 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  (%944,)
}

def @func_13643(%var_13636: float64) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool]) {
  %945 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %946 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %947 = cast(%var_13636, dtype="float64") /* ty=float64 */;
  %948 = cast(meta[relay.Constant][63] /* ty=Tensor[(495), bool] */, dtype="bool") /* ty=Tensor[(495), bool] */;
  %949 = reshape(%947, newshape=[]) /* ty=float64 */;
  %950 = reshape(%948, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %951 = @func_12123(%949, %950) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %952 = %945.0;
  %953 = %946.0;
  %954 = %951.6;
  (%952, %953, %954, %var_13636, meta[relay.Constant][63] /* ty=Tensor[(495), bool] */)
}

def @func_10539(%var_10529: Tensor[(13, 2, 3), float64]) -> Tensor[(13, 2, 3), float64] {
  %955 = cast(%var_10529, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  %956 = log2(%955) /* ty=Tensor[(13, 2, 3), float64] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  cosh(%957) /* ty=Tensor[(13, 2, 3), float64] */
}

def @func_21340() -> (Tensor[(15, 9, 9), float32],) {
  %958 = @func_18087() /* ty=Tensor[(15, 9, 9), float32] */;
  (%958,)
}

def @func_16946(%var_16927: Tensor[(1, 14, 8), uint8]) -> (Tensor[(7, 14, 8), uint8], Tensor[(15, 9, 9), float32]) {
  %959 = cast(%var_16927, dtype="uint8") /* ty=Tensor[(1, 14, 8), uint8] */;
  %960 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 14, 8), uint8] */, dtype="uint8") /* ty=Tensor[(7, 14, 8), uint8] */;
  %961 = subtract(%959, %960) /* ty=Tensor[(7, 14, 8), uint8] */;
  %962 = @func_14723() /* ty=Tensor[(15, 9, 9), float32] */;
  (%961, %962)
}

def @func_14173(%var_14171: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) {
  %963 = cast(%var_14171, dtype="int8") /* ty=int8 */;
  %964 = reshape(%963, newshape=[]) /* ty=int8 */;
  %965 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %966 = @func_592(%964) /* ty=Tensor[(1, 7, 1), bool] */;
  (%965, %966, %var_14171)
}

def @func_19855(%var_19853: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], int8) {
  %967 = @func_18522() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %968 = cast(%var_19853, dtype="int8") /* ty=int8 */;
  %969 = reshape(%968, newshape=[]) /* ty=int8 */;
  %970 = @func_14173(%969) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) */;
  %971 = %967.1;
  %972 = %970.0;
  (%971, %972, %var_19853)
}

def @func_17297() -> (Tensor[(65, 9), float32],) {
  %973 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %974 = %973.2;
  (%974,)
}

def @func_20183() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %975 = @func_15870() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %976 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %977 = %975.0;
  %978 = %976.0;
  (%977, %978)
}

def @func_12334() -> (Tensor[(495), bool],) {
  %979 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
  %980 = %979.3;
  (%980,)
}

def @func_18664() -> (Tensor[(15, 9, 9), float64],) {
  %981 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %982 = %981.0;
  (%982,)
}

def @func_20215() -> (Tensor[(15, 9, 9), float64], Tensor[(14, 16, 4), bool], Tensor[(896), uint32], Tensor[(15, 9, 9), float64]) {
  %983 = @func_18813() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %984 = cast(meta[relay.Constant][65] /* ty=Tensor[(896), uint32] */, dtype="uint32") /* ty=Tensor[(896), uint32] */;
  %985 = reshape(%984, newshape=[896]) /* ty=Tensor[(896), uint32] */;
  %986 = @func_16050(%985) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(15, 9, 9), float32], Tensor[(14, 16, 4), bool], Tensor[(896), uint32]) */;
  %987 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %988 = %983.0;
  %989 = %986.4;
  %990 = %987.0;
  (%988, %989, meta[relay.Constant][65] /* ty=Tensor[(896), uint32] */, %990)
}

def @func_12225() -> Tensor[(15, 9, 9), float32] {
  @func_10241() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_20263() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %991 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %992 = %991.0;
  %993 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  (%992, %993)
}

def @func_15316() -> (Tensor[(495), bool],) {
  %994 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
  %995 = %994.3;
  (%995,)
}

def @func_15823() -> Tensor[(15, 9, 9), float64] {
  %996 = @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %996.2
}

def @func_12287() -> (Tensor[(15, 9, 9), float64],) {
  %997 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %998 = %997.0;
  (%998,)
}

def @func_17547() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %999 = @func_13273() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1000 = %999.0;
  %1001 = @func_17271() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1000, %1001)
}

def @func_16863(%var_16833: Tensor[(10, 240), bool]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(300, 8), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 240), float32], Tensor[(63), uint32], Tensor[(1170), uint64]) {
  %1002 = @func_12234() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1003 = cast(%var_16833, dtype="bool") /* ty=Tensor[(10, 240), bool] */;
  %1004 = reshape(%1003, newshape=[300, 8]) /* ty=Tensor[(300, 8), bool] */;
  %1005 = @func_13273() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1006 = cast(%var_16833, dtype="float32") /* ty=Tensor[(10, 240), float32] */;
  %1007 = cast(meta[relay.Constant][66] /* ty=Tensor[(1170), uint64] */, dtype="uint64") /* ty=Tensor[(1170), uint64] */;
  %1008 = cast(meta[relay.Constant][66] /* ty=Tensor[(1170), uint64] */, dtype="uint64") /* ty=Tensor[(1170), uint64] */;
  %1009 = reshape(%1007, newshape=[9, 13, 10]) /* ty=Tensor[(9, 13, 10), uint64] */;
  %1010 = reshape(%1008, newshape=[9, 13, 10]) /* ty=Tensor[(9, 13, 10), uint64] */;
  %1011 = @func_14114(%1009, %1010) /* ty=(Tensor[(9, 13, 10), uint64], Tensor[(63), uint32]) */;
  %1012 = %1002.0;
  %1013 = @func_12999() /* ty=Tensor[(15, 9, 9), float32] */;
  %1014 = @func_16568(%1004) /* ty=Tensor[(300, 8), bool] */;
  %1015 = %1005.0;
  %1016 = sin(%1006) /* ty=Tensor[(10, 240), float32] */;
  %1017 = %1011.1;
  (%1012, %1013, %1014, %1015, %1016, %1017, meta[relay.Constant][66] /* ty=Tensor[(1170), uint64] */)
}

def @func_11936(%var_11930: Tensor[(1, 72), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(6, 3, 4), float64], Tensor[(1, 72), float64]) {
  %1018 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1019 = cast(%var_11930, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %1020 = reshape(%1019, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %1021 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  %1022 = %1018.0;
  %1023 = @func_286(%1020) /* ty=Tensor[(6, 3, 4), float64] */;
  (%1021, %1022, %1023, %var_11930)
}

def @func_15274() -> Tensor[(15, 9, 9), float32] {
  @func_12999() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17920(%var_17918: Tensor[(63), uint32]) -> (Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(1274), int16], Tensor[(390), float64], Tensor[(63), uint32]) {
  %1024 = cast(meta[relay.Constant][67] /* ty=Tensor[(1274), int16] */, dtype="int16") /* ty=Tensor[(1274), int16] */;
  %1025 = cast(meta[relay.Constant][67] /* ty=Tensor[(1274), int16] */, dtype="int16") /* ty=Tensor[(1274), int16] */;
  %1026 = cast(meta[relay.Constant][68] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %1027 = cast(%var_17918, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1028 = reshape(%1024, newshape=[14, 7, 13]) /* ty=Tensor[(14, 7, 13), int16] */;
  %1029 = reshape(%1025, newshape=[14, 7, 13]) /* ty=Tensor[(14, 7, 13), int16] */;
  %1030 = reshape(%1026, newshape=[195, 2]) /* ty=Tensor[(195, 2), float64] */;
  %1031 = reshape(%1027, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1032 = @func_11127(%1028, %1029, %1030, %1031) /* ty=(Tensor[(14, 7, 13), bool], Tensor[(10, 15, 16), bool], Tensor[(195, 2), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %1033 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  %1034 = %1032.1;
  (%1033, %1034, meta[relay.Constant][67] /* ty=Tensor[(1274), int16] */, meta[relay.Constant][68] /* ty=Tensor[(390), float64] */, %var_17918)
}

def @func_21090(%var_21076: Tensor[(78), float64]) -> (Tensor[(10, 14, 4), float32], Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(2925), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %1035 = @func_17902() /* ty=Tensor[(10, 14, 4), float64] */;
  %1036 = cast(%1035, dtype="float32") /* ty=Tensor[(10, 14, 4), float32] */;
  %1037 = @func_17001() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %1038 = @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1039 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %1040 = cast(meta[relay.Constant][69] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %1041 = reshape(%1040, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), float64] */;
  %1042 = @func_16272(%1041) /* ty=(Tensor[(15, 13, 15), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 13, 15), float64]) */;
  %1043 = cast(%var_21076, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1044 = reshape(%1043, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %1045 = @func_12935(%1044) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %1046 = log2(%1036) /* ty=Tensor[(10, 14, 4), float32] */;
  %1047 = %1037.0;
  %1048 = %1038.1;
  %1049 = %1039.0;
  %1050 = %1042.1;
  %1051 = %1045.1;
  (%1046, %1047, %1048, %1049, %1050, meta[relay.Constant][69] /* ty=Tensor[(2925), float64] */, %1051, %var_21076)
}

def @func_16568(%var_16560: Tensor[(300, 8), bool]) -> Tensor[(300, 8), bool] {
  %1052 = @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %1053 = %1052.1;
  %1054 = cast(%var_16560, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
  %1055 = shape_of(%1053, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1056 = cast(%1053, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  not_equal(%1056, %1057) /* ty=Tensor[(300, 8), bool] */
}

def @func_21206(%var_21185: Tensor[(10, 14, 4), float64], %var_21201: Tensor[(5, 250), float64]) -> (Tensor[(10, 14, 4), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(270), int8], Tensor[(585), float32], Tensor[(5, 250), float32]) {
  %1058 = @func_16614() /* ty=Tensor[(10, 14, 4), float64] */;
  %1059 = cast(%var_21185, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1060 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(%1058, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1063 = @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1064 = cast(meta[relay.Constant][70] /* ty=Tensor[(270), int8] */, dtype="int8") /* ty=Tensor[(270), int8] */;
  %1065 = cast(meta[relay.Constant][71] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %1066 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 250), float64] */, dtype="float64") /* ty=Tensor[(1, 250), float64] */;
  %1067 = reshape(%1064, newshape=[270]) /* ty=Tensor[(270), int8] */;
  %1068 = reshape(%1065, newshape=[195, 3]) /* ty=Tensor[(195, 3), float32] */;
  %1069 = reshape(%1066, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %1070 = @func_16423(%1067, %1068, %1069) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(390), float64], Tensor[(270), int8], Tensor[(63), uint32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(195, 3), float64], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550, 1), int8]) */;
  %1071 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 250), float64] */, dtype="float32") /* ty=Tensor[(1, 250), float32] */;
  %1072 = cast(%var_21201, dtype="float32") /* ty=Tensor[(5, 250), float32] */;
  %1073 = not_equal(%1061, %1062) /* ty=Tensor[(10, 14, 4), bool] */;
  %1074 = %1063.0;
  %1075 = %1070.6;
  %1076 = divide(%1071, %1072) /* ty=Tensor[(5, 250), float32] */;
  (%1073, %1074, %1075, meta[relay.Constant][70] /* ty=Tensor[(270), int8] */, meta[relay.Constant][71] /* ty=Tensor[(585), float32] */, %1076)
}

def @func_10137() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_11542(%var_11528: float64, %var_11530: Tensor[(495), bool]) -> (Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) {
  %1077 = cast(meta[relay.Constant][73] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %1078 = reshape(%1077, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %1079 = @func_3434(%1078) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %1080 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1081 = %1080.0;
  %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %1083 = cast(%var_11528, dtype="float64") /* ty=float64 */;
  %1084 = cast(meta[relay.Constant][74] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1085 = cast(%var_11530, dtype="bool") /* ty=Tensor[(495), bool] */;
  %1086 = reshape(%1083, newshape=[]) /* ty=float64 */;
  %1087 = reshape(%1084, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %1088 = reshape(%1085, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), bool] */;
  %1089 = @func_6945(%1086, %1087, %1088) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) */;
  %1090 = cast(%var_11528, dtype="float64") /* ty=float64 */;
  %1091 = cast(meta[relay.Constant][74] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1092 = cast(%var_11530, dtype="bool") /* ty=Tensor[(495), bool] */;
  %1093 = reshape(%1090, newshape=[]) /* ty=float64 */;
  %1094 = reshape(%1091, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
  %1095 = reshape(%1092, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), bool] */;
  %1096 = @func_6945(%1093, %1094, %1095) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) */;
  %1097 = %1079.0;
  %1098 = asinh(%1082) /* ty=Tensor[(15, 9, 9), float64] */;
  %1099 = %1089.1;
  %1100 = %1096.1;
  (%1097, meta[relay.Constant][73] /* ty=Tensor[(550), int8] */, %1098, %1099, %var_11528, meta[relay.Constant][74] /* ty=Tensor[(99), float64] */, %var_11530, %1100)
}

def @func_16303() -> Tensor[(10, 14, 4), float64] {
  %1101 = @func_15129() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
  %1101.1
}

def @func_15129() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  %1102 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  %1103 = cast(%1102, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  %1104 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  %1105 = cosh(%1103) /* ty=Tensor[(10, 14, 4), float64] */;
  (%1104, %1105)
}

def @func_18027() -> Tensor[(10, 14, 4), float64] {
  %1106 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %1106.0
}

def @func_12234() -> (Tensor[(15, 9, 9), float64],) {
  %1107 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1108 = %1107.0;
  (%1108,)
}

def @func_20601() -> Tensor[(15, 9, 9), float32] {
  @func_18716() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_13273() -> (Tensor[(15, 9, 9), float32],) {
  %1109 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1109,)
}

def @func_17164() -> Tensor[(10, 14, 4), float64] {
  %1110 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %1110.0
}

def @func_10241() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_21379() -> Tensor[(15, 9, 9), float64] {
  %1111 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1111.1
}

def @func_17868() -> (Tensor[(15, 9, 9), float32],) {
  %1112 = @func_14320() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1112,)
}

def @func_10401() -> (Tensor[(15, 9, 9), float32],) {
  %1113 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1113,)
}

def @func_15486() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32]) {
  %1114 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1115 = @func_12800() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1116 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1117 = %1114.4;
  %1118 = %1115.0;
  %1119 = @func_12665() /* ty=Tensor[(15, 9, 9), float64] */;
  %1120 = %1116.0;
  (%1117, %1118, %1119, %1120)
}

def @func_18164(%var_18146: Tensor[(15, 6, 4), float32]) -> (Tensor[(15, 6, 4), float32], Tensor[(10, 14, 4), float64]) {
  %1121 = cast(%var_18146, dtype="float32") /* ty=Tensor[(15, 6, 4), float32] */;
  %1122 = sqrt(%1121) /* ty=Tensor[(15, 6, 4), float32] */;
  %1123 = @func_16303() /* ty=Tensor[(10, 14, 4), float64] */;
  (%1122, %1123)
}

def @func_12870() -> Tensor[(15, 9, 9), float32] {
  %1124 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1124.0
}

def @func_12198(%var_12153: Tensor[(275, 2), int8], %var_12188: Tensor[(275, 2), int8]) -> (Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) {
  %1125 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1126 = cast(%var_12153, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
  %1127 = reshape(%1126, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %1128 = @func_3434(%1127) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %1129 = %1128.0;
  %1130 = cast(%1129, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %1131 = shape_of(%var_12153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1132 = cast(%var_12153, dtype="bool") /* ty=Tensor[(275, 2), bool] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1134 = cast(%1129, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %1135 = log2(%1134) /* ty=Tensor[(10, 5, 11), float32] */;
  %1136 = cast(%1129, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%1135, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1140 = cast(%var_12188, dtype="uint8") /* ty=Tensor[(275, 2), uint8] */;
  %1141 = shape_of(%var_12153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1142 = cast(%var_12153, dtype="uint8") /* ty=Tensor[(275, 2), uint8] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1144 = cast(%1135, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %1145 = %1125.0;
  %1146 = logical_and(%1132, %1133) /* ty=Tensor[(275, 2), bool] */;
  %1147 = less_equal(%1138, %1139) /* ty=Tensor[(10, 5, 11), bool] */;
  %1148 = multiply(%1142, %1143) /* ty=Tensor[(275, 2), uint8] */;
  %1149 = atan(%1144) /* ty=Tensor[(10, 5, 11), float32] */;
  (%1145, %1146, %1147, %1148, %1149)
}

def @func_14810() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %1150 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1151 = @func_13380() /* ty=Tensor[(15, 9, 9), float32] */;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_19058() -> (Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64]) {
  %1153 = @func_15274() /* ty=Tensor[(15, 9, 9), float32] */;
  %1154 = @func_17164() /* ty=Tensor[(10, 14, 4), float64] */;
  (%1153, %1154)
}

def @func_14235(%var_14220: Tensor[(250), float64], %var_14221: Tensor[(550, 1), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(495), bool], float64, Tensor[(495), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550, 1), int8]) {
  %1155 = @func_13789() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1156 = cast(-6.24229f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1157 = cast(meta[relay.Constant][75] /* ty=Tensor[(495), bool] */, dtype="bool") /* ty=Tensor[(495), bool] */;
  %1158 = reshape(%1156, newshape=[]) /* ty=float64 */;
  %1159 = reshape(%1157, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %1160 = @func_12123(%1158, %1159) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1161 = cast(%var_14220, dtype="float64") /* ty=Tensor[(250), float64] */;
  %1162 = cast(%var_14221, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
  %1163 = reshape(%1161, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %1164 = reshape(%1162, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %1165 = @func_6813(%1163, %1164) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %1166 = %1155.0;
  %1167 = %1160.3;
  %1168 = %1165.2;
  (%1166, %1167, -6.24229f64 /* ty=float64 */, meta[relay.Constant][75] /* ty=Tensor[(495), bool] */, %1168, %var_14220, %var_14221)
}

def @func_18332() -> Tensor[(10, 14, 4), float64] {
  %1169 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %1169.0
}

def @func_18879() -> Tensor[(15, 9, 9), float64] {
  %1170 = @func_13512() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1170.2
}

def @func_13739() -> Tensor[(15, 9, 9), float64] {
  %1171 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %1171.0
}

def @func_18603() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %1172 = @func_17547() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1173 = %1172.1;
  %1174 = @func_12999() /* ty=Tensor[(15, 9, 9), float32] */;
  %1175 = @func_13534() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1173, %1174, %1175)
}

def @func_13534() -> Tensor[(15, 9, 9), float32] {
  %1176 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1176.0
}

def @func_10628(%var_10624: Tensor[(10, 14, 4), float64]) -> Tensor[(10, 14, 4), float64] {
  %1177 = cast(%var_10624, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  sigmoid(%1177) /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_15399() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), uint32], Tensor[(55, 10), int8], Tensor[(550), int8]) {
  %1178 = @func_14810() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1179 = %1178.1;
  %1180 = cast(%1179, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %1181 = reshape(%1180, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %1182 = @func_11633(%1181) /* ty=(Tensor[(15, 9, 9), uint32], Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32]) */;
  %1183 = cast(%1179, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %1184 = cast(meta[relay.Constant][76] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %1185 = reshape(%1183, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %1186 = reshape(%1184, newshape=[55, 10]) /* ty=Tensor[(55, 10), int8] */;
  %1187 = @func_11215(%1185, %1186) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */;
  %1188 = @func_10945() /* ty=Tensor[(15, 9, 9), float64] */;
  %1189 = %1182.0;
  %1190 = %1187.2;
  (%1179, %1188, %1189, %1190, meta[relay.Constant][76] /* ty=Tensor[(550), int8] */)
}

def @func_17480() -> Tensor[(15, 9, 9), float32] {
  @func_12225() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_16515() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %1191 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %1192 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  (%1191, %1192)
}

def @func_16666(%var_16663: uint32) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), int8], uint32, uint32) {
  %1193 = @func_14810() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1194 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1195 = cast(%var_16663, dtype="uint32") /* ty=uint32 */;
  %1196 = reshape(%1195, newshape=[]) /* ty=uint32 */;
  %1197 = @func_16230(%1196) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], uint32) */;
  %1198 = %1193.0;
  %1199 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  %1200 = %1194.0;
  %1201 = %1197.2;
  (%1198, %1199, %1200, %1201, %var_16663)
}

def @func_15905(%var_15899: Tensor[(65, 9), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(65, 9), float32]) {
  %1202 = @func_13692() /* ty=(Tensor[(65, 9), float32],) */;
  %1203 = %1202.0;
  %1204 = cast(%var_15899, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %1205 = shape_of(%1203, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1206 = cast(%1203, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1208 = @func_12999() /* ty=Tensor[(15, 9, 9), float32] */;
  %1209 = minimum(%1206, %1207) /* ty=Tensor[(65, 9), float32] */;
  (%1208, %1209)
}

def @func_5891(%var_5885: Tensor[(14, 16, 4), uint32]) -> (Tensor[(14, 16, 4), bool],) {
  %1210 = cast(meta[relay.Constant][77] /* ty=Tensor[(14, 16, 4), uint32] */, dtype="bool") /* ty=Tensor[(14, 16, 4), bool] */;
  %1211 = shape_of(%var_5885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(%var_5885, dtype="bool") /* ty=Tensor[(14, 16, 4), bool] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1214 = not_equal(%1212, %1213) /* ty=Tensor[(14, 16, 4), bool] */;
  (%1214,)
}

def @func_18716() -> Tensor[(15, 9, 9), float32] {
  %1215 = @func_13273() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1215.0
}

def @func_20305() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(112), uint8], Tensor[(15, 9, 9), float64]) {
  %1216 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1217 = cast(meta[relay.Constant][78] /* ty=Tensor[(112), uint8] */, dtype="uint8") /* ty=Tensor[(112), uint8] */;
  %1218 = reshape(%1217, newshape=[1, 14, 8]) /* ty=Tensor[(1, 14, 8), uint8] */;
  %1219 = @func_16946(%1218) /* ty=(Tensor[(7, 14, 8), uint8], Tensor[(15, 9, 9), float32]) */;
  %1220 = %1216.0;
  %1221 = %1219.1;
  %1222 = @func_13095() /* ty=Tensor[(15, 9, 9), float64] */;
  (%1220, %1221, meta[relay.Constant][78] /* ty=Tensor[(112), uint8] */, %1222)
}

def @func_12990() -> (Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) {
  %1223 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1224 = cast(meta[relay.Constant][79] /* ty=Tensor[(1024), uint16] */, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1225 = reshape(%1224, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %1226 = @func_12602(%1225) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) */;
  %1227 = %1226.1;
  %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %1229 = %1223.0;
  %1230 = rsqrt(%1228) /* ty=Tensor[(70, 9), float64] */;
  (%1229, meta[relay.Constant][79] /* ty=Tensor[(1024), uint16] */, %1230)
}

def @func_14608(%var_14588: Tensor[(1024), uint16], %var_14589: Tensor[(630), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32]) {
  %1231 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1232 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1233 = cast(%var_14588, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1234 = cast(%var_14588, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1235 = cast(%var_14589, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1236 = cast(%var_14588, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %1237 = reshape(%1233, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %1238 = reshape(%1234, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %1239 = reshape(%1235, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %1240 = reshape(%1236, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %1241 = @func_6067(%1237, %1238, %1239, %1240) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %1242 = %1231.0;
  %1243 = %1232.1;
  %1244 = %1241.1;
  (%1242, %1243, %1244, %var_14588, %var_14589)
}

def @func_11215(%var_11191: Tensor[(15, 9, 9), float32], %var_11205: Tensor[(55, 10), int8]) -> (Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) {
  %1245 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  %1246 = cast(%var_11191, dtype="bool") /* ty=Tensor[(15, 9, 9), bool] */;
  %1247 = shape_of(%1245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%1245, dtype="bool") /* ty=Tensor[(15, 9, 9), bool] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1250 = cast(%var_11205, dtype="int8") /* ty=Tensor[(55, 10), int8] */;
  %1251 = reshape(%1250, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %1252 = @func_3434(%1251) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %1253 = equal(%1248, %1249) /* ty=Tensor[(15, 9, 9), bool] */;
  %1254 = %1252.0;
  (%1253, %1254, %var_11205)
}

def @func_17070(%var_17062: Tensor[(550), int8]) -> (Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) {
  %1255 = @func_16901() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1256 = cast(%var_17062, dtype="int8") /* ty=Tensor[(550), int8] */;
  %1257 = reshape(%1256, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %1258 = @func_3434(%1257) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %1259 = %1255.0;
  %1260 = %1258.0;
  (%1259, %1260, %var_17062)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10139() -> Tensor[(15, 9, 9), float32] {
  @func_10137() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_11633(%var_11609: Tensor[(15, 9, 9), float32]) -> (Tensor[(15, 9, 9), uint32], Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32]) {
  %0 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1 = %0.0;
  %2 = cast(%var_11609, dtype="uint32") /* ty=Tensor[(15, 9, 9), uint32] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="uint32") /* ty=Tensor[(15, 9, 9), uint32] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %7 = reshape(%6, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %8 = @func_4293(%7) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %9 = add(%4, %5) /* ty=Tensor[(15, 9, 9), uint32] */;
  %10 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
  %11 = %8.0;
  (%9, %10, %11, meta[relay.Constant][0] /* ty=Tensor[(630), float32] */)
}

def @func_12938(%var_12936: Tensor[(78), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  @func_12935(%var_12936) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */
}

def @func_11263() -> (Tensor[(15, 9, 9), float32],) {
  @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_14175(%var_14174: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) {
  %16 = fn (%var_14171: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) {
    %12 = cast(%var_14171, dtype="int8") /* ty=int8 */;
    %13 = reshape(%12, newshape=[]) /* ty=int8 */;
    %14 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
    %15 = @func_592(%13) /* ty=Tensor[(1, 7, 1), bool] */;
    (%14, %15, %var_14171)
  };
  %16(%var_14174) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) */
}

def @func_3437(%var_3435: Tensor[(10, 5, 11), int8]) -> (Tensor[(10, 5, 11), bool],) {
  @func_3434(%var_3435) /* ty=(Tensor[(10, 5, 11), bool],) */
}

def @func_16298() -> Tensor[(15, 9, 9), float64] {
  %17 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %17.0
}

def @func_14523(%var_14521: Tensor[(65, 9), float32]) -> Tensor[(65, 9), float64] {
  @func_14520(%var_14521) /* ty=Tensor[(65, 9), float64] */
}

def @func_13000() -> Tensor[(15, 9, 9), float32] {
  %18 = fn () -> Tensor[(15, 9, 9), float32] {
    @func_10241() /* ty=Tensor[(15, 9, 9), float32] */
  };
  %18() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_11545(%var_11543: float64, %var_11544: Tensor[(495), bool]) -> (Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) {
  %43 = fn (%var_11528: float64, %var_11530: Tensor[(495), bool]) -> (Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) {
    %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
    %20 = reshape(%19, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
    %21 = @func_3434(%20) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %22 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %23 = %22.0;
    %24 = cast(%23, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
    %25 = cast(%var_11528, dtype="float64") /* ty=float64 */;
    %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %27 = cast(%var_11530, dtype="bool") /* ty=Tensor[(495), bool] */;
    %28 = reshape(%25, newshape=[]) /* ty=float64 */;
    %29 = reshape(%26, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %30 = reshape(%27, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), bool] */;
    %31 = @func_6945(%28, %29, %30) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) */;
    %32 = cast(%var_11528, dtype="float64") /* ty=float64 */;
    %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %34 = cast(%var_11530, dtype="bool") /* ty=Tensor[(495), bool] */;
    %35 = reshape(%32, newshape=[]) /* ty=float64 */;
    %36 = reshape(%33, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), float64] */;
    %37 = reshape(%34, newshape=[11, 5, 9]) /* ty=Tensor[(11, 5, 9), bool] */;
    %38 = @func_6945(%35, %36, %37) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) */;
    %39 = %21.0;
    %40 = asinh(%24) /* ty=Tensor[(15, 9, 9), float64] */;
    %41 = %31.1;
    %42 = %38.1;
    (%39, meta[relay.Constant][1] /* ty=Tensor[(550), int8] */, %40, %41, %var_11528, meta[relay.Constant][2] /* ty=Tensor[(99), float64] */, %var_11530, %42)
  };
  %43(%var_11543, %var_11544) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */
}

def @func_18087() -> Tensor[(15, 9, 9), float32] {
  %44 = @func_17047() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) */;
  %44.1
}

def @func_18524() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  @func_18522() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */
}

def @func_10558() -> Tensor[(15, 9, 9), float32] {
  @func_10556() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_16515() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %45 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %46 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  (%45, %46)
}

def @func_17186() -> (Tensor[(15, 9, 9), float64],) {
  %48 = fn () -> (Tensor[(15, 9, 9), float64],) {
    %47 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
    (%47,)
  };
  %48() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_19899(%var_19897: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) {
  @func_19896(%var_19897) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) */
}

def @func_6816(%var_6814: Tensor[(5, 5, 10), float64], %var_6815: Tensor[(550), int8]) -> (Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) {
  %60 = fn (%var_6800: Tensor[(5, 5, 10), float64], %var_6804: Tensor[(550), int8]) -> (Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) {
    %49 = cast(%var_6804, dtype="int8") /* ty=Tensor[(550), int8] */;
    %50 = reshape(%49, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
    %51 = @func_3434(%50) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %52 = cast(%var_6800, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
    %53 = erf(%52) /* ty=Tensor[(5, 5, 10), float64] */;
    %54 = cast(%53, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
    %55 = shape_of(%var_6800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %56 = cast(%var_6800, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
    %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %58 = %51.0;
    %59 = floor_mod(%56, %57) /* ty=Tensor[(5, 5, 10), float64] */;
    (%58, %var_6804, %59)
  };
  %60(%var_6814, %var_6815) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */
}

def @func_18374() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %67 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
    %61 = @func_17232() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %62 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %63 = @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
    %64 = %61.0;
    %65 = %62.0;
    %66 = %63.1;
    (%64, %65, %66)
  };
  %67() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */
}

def @func_11939(%var_11937: Tensor[(1, 72), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(6, 3, 4), float64], Tensor[(1, 72), float64]) {
  @func_11936(%var_11937) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(6, 3, 4), float64], Tensor[(1, 72), float64]) */
}

def @func_20390() -> (Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), bool], Tensor[(1, 585), float32]) {
  %77 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), bool], Tensor[(1, 585), float32]) {
    %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 585), float32] */, dtype="float32") /* ty=Tensor[(1, 585), float32] */;
    %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 585), float32] */, dtype="float32") /* ty=Tensor[(1, 585), float32] */;
    %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 585), float32] */, dtype="float32") /* ty=Tensor[(1, 585), float32] */;
    %71 = reshape(%68, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
    %72 = reshape(%69, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
    %73 = reshape(%70, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
    %74 = @func_10348(%71, %72, %73) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */;
    %75 = @func_19136() /* ty=Tensor[(15, 9, 9), float32] */;
    %76 = %74.0;
    (%75, %76, meta[relay.Constant][3] /* ty=Tensor[(1, 585), float32] */)
  };
  %77() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), bool], Tensor[(1, 585), float32]) */
}

def @func_3434(%var_3423: Tensor[(10, 5, 11), int8]) -> (Tensor[(10, 5, 11), bool],) {
  %78 = cast(%var_3423, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %79 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(10, 5, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 5, 11), int8] */, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %82 = less(%80, %81) /* ty=Tensor[(10, 5, 11), bool] */;
  (%82,)
}

def @func_4097(%var_4094: Tensor[(14, 8, 8), float64], %var_4095: Tensor[(700), float32], %var_4096: Tensor[(2400), float32]) -> (Tensor[(14, 8, 8), float64], Tensor[(72), float64], Tensor[(3, 20), uint64], Tensor[(1, 63), uint32], Tensor[(13, 6, 7), float32], Tensor[(546), float32], Tensor[(700), float32], int8, Tensor[(2400), float32], Tensor[(6, 3, 4), float64]) {
  %106 = fn (%var_4058: Tensor[(14, 8, 8), float64], %var_4074: Tensor[(700), float32], %var_4076: Tensor[(2400), float32]) -> (Tensor[(14, 8, 8), float64], Tensor[(72), float64], Tensor[(3, 20), uint64], Tensor[(1, 63), uint32], Tensor[(13, 6, 7), float32], Tensor[(546), float32], Tensor[(700), float32], int8, Tensor[(2400), float32], Tensor[(6, 3, 4), float64]) {
    %83 = cast(%var_4058, dtype="float64") /* ty=Tensor[(14, 8, 8), float64] */;
    %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 20), uint64] */, dtype="uint64") /* ty=Tensor[(3, 20), uint64] */;
    %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
    %86 = reshape(%84, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
    %87 = reshape(%85, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
    %88 = @func_708(%86, %87) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
    %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %90 = cast(meta[relay.Constant][7] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %91 = cast(%var_4074, dtype="float32") /* ty=Tensor[(700), float32] */;
    %92 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %93 = cast(%var_4076, dtype="float32") /* ty=Tensor[(2400), float32] */;
    %94 = reshape(%89, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
    %95 = reshape(%90, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
    %96 = reshape(%91, newshape=[700]) /* ty=Tensor[(700), float32] */;
    %97 = reshape(%92, newshape=[]) /* ty=int8 */;
    %98 = reshape(%93, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %99 = @func_3463(%94, %95, %96, %97, %98) /* ty=(Tensor[(13, 6, 7), float32], Tensor[(5, 10, 14), float32], Tensor[(700), float32], int8, Tensor[(2400), float32]) */;
    %100 = %88.4;
    %101 = cast(%100, dtype="float64") /* ty=Tensor[(72), float64] */;
    %102 = reshape(%101, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
    %103 = asin(%83) /* ty=Tensor[(14, 8, 8), float64] */;
    %104 = %99.0;
    %105 = @func_286(%102) /* ty=Tensor[(6, 3, 4), float64] */;
    (%103, %100, meta[relay.Constant][5] /* ty=Tensor[(3, 20), uint64] */, meta[relay.Constant][6] /* ty=Tensor[(1, 63), uint32] */, %104, meta[relay.Constant][7] /* ty=Tensor[(546), float32] */, %var_4074, meta[relay.Constant][8] /* ty=int8 */, %var_4076, %105)
  };
  %106(%var_4094, %var_4095, %var_4096) /* ty=(Tensor[(14, 8, 8), float64], Tensor[(72), float64], Tensor[(3, 20), uint64], Tensor[(1, 63), uint32], Tensor[(13, 6, 7), float32], Tensor[(546), float32], Tensor[(700), float32], int8, Tensor[(2400), float32], Tensor[(6, 3, 4), float64]) */
}

def @func_14612(%var_14610: Tensor[(1024), uint16], %var_14611: Tensor[(630), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32]) {
  @func_14608(%var_14610, %var_14611) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32]) */
}

def @func_10541(%var_10540: Tensor[(13, 2, 3), float64]) -> Tensor[(13, 2, 3), float64] {
  %110 = fn (%var_10529: Tensor[(13, 2, 3), float64]) -> Tensor[(13, 2, 3), float64] {
    %107 = cast(%var_10529, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
    %108 = log2(%107) /* ty=Tensor[(13, 2, 3), float64] */;
    %109 = cast(%108, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
    cosh(%109) /* ty=Tensor[(13, 2, 3), float64] */
  };
  %110(%var_10540) /* ty=Tensor[(13, 2, 3), float64] */
}

def @func_11133(%var_11129: Tensor[(14, 7, 13), int16], %var_11130: Tensor[(14, 7, 13), int16], %var_11131: Tensor[(195, 2), float64], %var_11132: Tensor[(63), uint32]) -> (Tensor[(14, 7, 13), bool], Tensor[(10, 15, 16), bool], Tensor[(195, 2), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  @func_11127(%var_11129, %var_11130, %var_11131, %var_11132) /* ty=(Tensor[(14, 7, 13), bool], Tensor[(10, 15, 16), bool], Tensor[(195, 2), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */
}

def @func_15615(%var_15614: Tensor[(250), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(250), float64], Tensor[(550), int8], Tensor[(15, 9, 9), float64]) {
  %121 = fn (%var_15582: Tensor[(250), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(250), float64], Tensor[(550), int8], Tensor[(15, 9, 9), float64]) {
    %111 = cast(%var_15582, dtype="float64") /* ty=Tensor[(250), float64] */;
    %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
    %113 = reshape(%111, newshape=[250]) /* ty=Tensor[(250), float64] */;
    %114 = reshape(%112, newshape=[550, 1]) /* ty=Tensor[(550, 1), int8] */;
    %115 = @func_14235(%113, %114) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(495), bool], float64, Tensor[(495), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550, 1), int8]) */;
    %116 = @func_14320() /* ty=Tensor[(15, 9, 9), float32] */;
    %117 = cast(%116, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
    %118 = reshape(%117, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
    %119 = %115.0;
    %120 = @func_12475(%118) /* ty=Tensor[(15, 9, 9), float64] */;
    (%116, %119, %var_15582, meta[relay.Constant][9] /* ty=Tensor[(550), int8] */, %120)
  };
  %121(%var_15614) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(250), float64], Tensor[(550), int8], Tensor[(15, 9, 9), float64]) */
}

def @func_8389(%var_8364: Tensor[(15, 1, 6), int16]) -> (Tensor[(15, 13, 6), float64], Tensor[(15, 13, 6), float64]) {
  %122 = cast(%var_8364, dtype="int16") /* ty=Tensor[(15, 1, 6), int16] */;
  %123 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 13, 6), int16] */, dtype="int16") /* ty=Tensor[(15, 13, 6), int16] */;
  %124 = left_shift(%122, %123) /* ty=Tensor[(15, 13, 6), int16] */;
  %125 = cast(%124, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %126 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 13, 6), int16] */, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %127 = cosh(%125) /* ty=Tensor[(15, 13, 6), float64] */;
  %128 = log2(%126) /* ty=Tensor[(15, 13, 6), float64] */;
  (%127, %128)
}

def @func_12289() -> (Tensor[(15, 9, 9), float64],) {
  @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_12277() -> (Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) {
  %129 = @func_10450() /* ty=Tensor[(15, 9, 9), float32] */;
  %130 = cast(%129, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %131 = cast(6.98519f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %132 = cast(meta[relay.Constant][11] /* ty=Tensor[(495), bool] */, dtype="bool") /* ty=Tensor[(495), bool] */;
  %133 = reshape(%131, newshape=[]) /* ty=float64 */;
  %134 = reshape(%132, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %135 = @func_11542(%133, %134) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */;
  %136 = log2(%130) /* ty=Tensor[(15, 9, 9), float64] */;
  %137 = %135.1;
  (%136, %137, 6.98519f64 /* ty=float64 */, meta[relay.Constant][11] /* ty=Tensor[(495), bool] */)
}

def @func_15872() -> (Tensor[(15, 9, 9), float32],) {
  @func_15870() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_12198(%var_12153: Tensor[(275, 2), int8], %var_12188: Tensor[(275, 2), int8]) -> (Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) {
  %138 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %139 = cast(%var_12153, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
  %140 = reshape(%139, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %141 = @func_3434(%140) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %144 = shape_of(%var_12153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %145 = cast(%var_12153, dtype="bool") /* ty=Tensor[(275, 2), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %147 = cast(%142, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %148 = log2(%147) /* ty=Tensor[(10, 5, 11), float32] */;
  %149 = cast(%142, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %153 = cast(%var_12188, dtype="uint8") /* ty=Tensor[(275, 2), uint8] */;
  %154 = shape_of(%var_12153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %155 = cast(%var_12153, dtype="uint8") /* ty=Tensor[(275, 2), uint8] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %157 = cast(%148, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %158 = %138.0;
  %159 = logical_and(%145, %146) /* ty=Tensor[(275, 2), bool] */;
  %160 = less_equal(%151, %152) /* ty=Tensor[(10, 5, 11), bool] */;
  %161 = multiply(%155, %156) /* ty=Tensor[(275, 2), uint8] */;
  %162 = atan(%157) /* ty=Tensor[(10, 5, 11), float32] */;
  (%158, %159, %160, %161, %162)
}

def @func_5753(%var_5720: Tensor[(15, 1, 7), float32]) -> (Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) {
  %163 = cast(%var_5720, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %164 = sigmoid(%163) /* ty=Tensor[(15, 1, 7), float32] */;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(15, 1, 7), float32] */;
  %166 = cast(meta[relay.Constant][12] /* ty=Tensor[(35, 10), float64] */, dtype="float64") /* ty=Tensor[(35, 10), float64] */;
  %167 = reshape(%166, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %168 = @func_5215(%167) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */;
  %169 = sqrt(%165) /* ty=Tensor[(15, 1, 7), float32] */;
  %170 = %168.0;
  (%169, %170, meta[relay.Constant][12] /* ty=Tensor[(35, 10), float64] */)
}

def @func_12991() -> (Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) {
  %179 = fn () -> (Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) {
    %171 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %172 = cast(meta[relay.Constant][13] /* ty=Tensor[(1024), uint16] */, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %173 = reshape(%172, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
    %174 = @func_12602(%173) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) */;
    %175 = %174.1;
    %176 = cast(%175, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
    %177 = %171.0;
    %178 = rsqrt(%176) /* ty=Tensor[(70, 9), float64] */;
    (%177, meta[relay.Constant][13] /* ty=Tensor[(1024), uint16] */, %178)
  };
  %179() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */
}

def @func_17389(%var_17385: Tensor[(5, 10, 3), int64], %var_17386: Tensor[(5, 10, 3), int64], %var_17387: Tensor[(60), uint64], %var_17388: Tensor[(63), uint32]) -> (Tensor[(5, 10, 3), int64], Tensor[(12, 5, ?), uint64], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(5, 10, 3), float64]) {
  @func_17383(%var_17385, %var_17386, %var_17387, %var_17388) /* ty=(Tensor[(5, 10, 3), int64], Tensor[(12, 5, ?), uint64], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(5, 10, 3), float64]) */
}

def @func_14487() -> (Tensor[(15, 9, 9), float32],) {
  %181 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %180 = @func_10241() /* ty=Tensor[(15, 9, 9), float32] */;
    (%180,)
  };
  %181() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_16446() -> (Tensor[(15, 9, 9), float32],) {
  %182 = @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %183 = %182.1;
  (%183,)
}

def @func_18333() -> Tensor[(10, 14, 4), float64] {
  %185 = fn () -> Tensor[(10, 14, 4), float64] {
    %184 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
    %184.0
  };
  %185() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_21027() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %186 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %187 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %188 = %186.0;
  %189 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  (%187, %188, %189)
}

def @func_14856(%var_14855: Tensor[(65, 9), float32]) -> Tensor[(65, 9), float64] {
  %196 = fn (%var_14845: Tensor[(65, 9), float32]) -> Tensor[(65, 9), float64] {
    %190 = @func_13692() /* ty=(Tensor[(65, 9), float32],) */;
    %191 = %190.0;
    %192 = cast(%var_14845, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
    %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(2), int32] */;
    %194 = cast(%191, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
    %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    mod(%194, %195) /* ty=Tensor[(65, 9), float64] */
  };
  %196(%var_14855) /* ty=Tensor[(65, 9), float64] */
}

def @func_20306() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(112), uint8], Tensor[(15, 9, 9), float64]) {
  %204 = fn () -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(112), uint8], Tensor[(15, 9, 9), float64]) {
    %197 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %198 = cast(meta[relay.Constant][14] /* ty=Tensor[(112), uint8] */, dtype="uint8") /* ty=Tensor[(112), uint8] */;
    %199 = reshape(%198, newshape=[1, 14, 8]) /* ty=Tensor[(1, 14, 8), uint8] */;
    %200 = @func_16946(%199) /* ty=(Tensor[(7, 14, 8), uint8], Tensor[(15, 9, 9), float32]) */;
    %201 = %197.0;
    %202 = %200.1;
    %203 = @func_13095() /* ty=Tensor[(15, 9, 9), float64] */;
    (%201, %202, meta[relay.Constant][14] /* ty=Tensor[(112), uint8] */, %203)
  };
  %204() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(112), uint8], Tensor[(15, 9, 9), float64]) */
}

def @func_4293(%var_4286: Tensor[(7, 10, 9), float32]) -> (Tensor[(7, 10, 9), float32],) {
  %205 = cast(%var_4286, dtype="float32") /* ty=Tensor[(7, 10, 9), float32] */;
  %206 = tan(%205) /* ty=Tensor[(7, 10, 9), float32] */;
  (%206,)
}

def @func_12226() -> Tensor[(15, 9, 9), float32] {
  %207 = fn () -> Tensor[(15, 9, 9), float32] {
    @func_10241() /* ty=Tensor[(15, 9, 9), float32] */
  };
  %207() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_12935(%var_12930: Tensor[(78), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %208 = cast(%var_12930, dtype="float64") /* ty=Tensor[(78), float64] */;
  %209 = reshape(%208, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %210 = @func_10450() /* ty=Tensor[(15, 9, 9), float32] */;
  %211 = @func_10539(%209) /* ty=Tensor[(13, 2, 3), float64] */;
  (%210, %211, %var_12930)
}

def @func_14117(%var_14115: Tensor[(9, 13, 10), uint64], %var_14116: Tensor[(9, 13, 10), uint64]) -> (Tensor[(9, 13, 10), uint64], Tensor[(63), uint32]) {
  %219 = fn (%var_14088: Tensor[(9, 13, 10), uint64], %var_14089: Tensor[(9, 13, 10), uint64]) -> (Tensor[(9, 13, 10), uint64], Tensor[(63), uint32]) {
    %212 = cast(%var_14089, dtype="uint64") /* ty=Tensor[(9, 13, 10), uint64] */;
    %213 = shape_of(%var_14088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%var_14088, dtype="uint64") /* ty=Tensor[(9, 13, 10), uint64] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %216 = @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
    %217 = bitwise_and(%214, %215) /* ty=Tensor[(9, 13, 10), uint64] */;
    %218 = %216.3;
    (%217, %218)
  };
  %219(%var_14115, %var_14116) /* ty=(Tensor[(9, 13, 10), uint64], Tensor[(63), uint32]) */
}

def @func_13274() -> (Tensor[(15, 9, 9), float32],) {
  %221 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %220 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
    (%220,)
  };
  %221() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_17271() -> Tensor[(15, 9, 9), float32] {
  @func_15274() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_12568() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %225 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
    %222 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %223 = %222.0;
    %224 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
    (%223, %224)
  };
  %225() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_17225() -> (Tensor[(15, 9, 9), float32],) {
  %227 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %226 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
    (%226,)
  };
  %227() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_19370(%var_19342: Tensor[(11, 2400), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(3, 20), uint64], Tensor[(896), float64], Tensor[(700), float32], Tensor[(11, 2400), bool], Tensor[(15, 9, 9), float32]) {
  %228 = @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %231 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 2400), float32] */, dtype="float32") /* ty=Tensor[(1, 2400), float32] */;
  %232 = reshape(%229, newshape=[14, 8, 8]) /* ty=Tensor[(14, 8, 8), float64] */;
  %233 = reshape(%230, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %234 = reshape(%231, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %235 = @func_4093(%232, %233, %234) /* ty=(Tensor[(14, 8, 8), float64], Tensor[(72), float64], Tensor[(3, 20), uint64], Tensor[(1, 63), uint32], Tensor[(13, 6, 7), float32], Tensor[(546), float32], Tensor[(700), float32], int8, Tensor[(2400), float32], Tensor[(6, 3, 4), float64]) */;
  %236 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 2400), float32] */, dtype="bool") /* ty=Tensor[(1, 2400), bool] */;
  %237 = cast(%var_19342, dtype="bool") /* ty=Tensor[(11, 2400), bool] */;
  %238 = @func_18013() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %239 = %228.1;
  %240 = %235.2;
  %241 = greater(%236, %237) /* ty=Tensor[(11, 2400), bool] */;
  %242 = %238.0;
  (%239, %240, meta[relay.Constant][15] /* ty=Tensor[(896), float64] */, meta[relay.Constant][16] /* ty=Tensor[(700), float32] */, %241, %242)
}

def @func_16162() -> (Tensor[(15, 9, 9), float32],) {
  %243 = @func_10450() /* ty=Tensor[(15, 9, 9), float32] */;
  (%243,)
}

def @func_10486() -> (Tensor[(15, 9, 9), float64],) {
  %246 = fn () -> (Tensor[(15, 9, 9), float64],) {
    %244 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %245 = %244.0;
    (%245,)
  };
  %246() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_3470(%var_3465: Tensor[(13, 6, 7), float32], %var_3466: Tensor[(13, 6, 7), float32], %var_3467: Tensor[(700), float32], %var_3468: int8, %var_3469: Tensor[(2400), float32]) -> (Tensor[(13, 6, 7), float32], Tensor[(5, 10, 14), float32], Tensor[(700), float32], int8, Tensor[(2400), float32]) {
  @func_3463(%var_3465, %var_3466, %var_3467, %var_3468, %var_3469) /* ty=(Tensor[(13, 6, 7), float32], Tensor[(5, 10, 14), float32], Tensor[(700), float32], int8, Tensor[(2400), float32]) */
}

def @func_16230(%var_16190: uint32) -> (Tensor[(15, 9, 9), float64], Tensor[(550), int8], uint32) {
  %247 = cast(%var_16190, dtype="uint32") /* ty=uint32 */;
  %248 = reshape(%247, newshape=[]) /* ty=uint32 */;
  %249 = @func_10879(%248) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550), int8], Tensor[(3, 7, 3), uint32], uint32, Tensor[(63), uint32], Tensor[(6, 12), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %250 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %251 = %249.3;
  (%250, %251, %var_16190)
}

def @func_13319() -> (Tensor[(10, 14, 4), float64],) {
  %253 = fn () -> (Tensor[(10, 14, 4), float64],) {
    %252 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
    (%252,)
  };
  %253() /* ty=(Tensor[(10, 14, 4), float64],) */
}

def @func_19236() -> Tensor[(15, 9, 9), float64] {
  @func_19234() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_9441(%var_9439: Tensor[(5, 4, 8), float32], %var_9440: Tensor[(5, 4, 8), float32]) -> (Tensor[(5, 4, 8), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550), int8]) {
  %267 = fn (%var_9418: Tensor[(5, 4, 8), float32], %var_9421: Tensor[(5, 4, 8), float32]) -> (Tensor[(5, 4, 8), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550), int8]) {
    %254 = cast(%var_9418, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
    %255 = erf(%254) /* ty=Tensor[(5, 4, 8), float32] */;
    %256 = cast(%var_9421, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
    %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
    %258 = cast(%255, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
    %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %260 = cast(meta[relay.Constant][18] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
    %261 = cast(meta[relay.Constant][19] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
    %262 = reshape(%260, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
    %263 = reshape(%261, newshape=[550]) /* ty=Tensor[(550), int8] */;
    %264 = @func_6813(%262, %263) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
    %265 = greater(%258, %259) /* ty=Tensor[(5, 4, 8), bool] */;
    %266 = %264.2;
    (%265, %266, meta[relay.Constant][18] /* ty=Tensor[(250), float64] */, meta[relay.Constant][19] /* ty=Tensor[(550), int8] */)
  };
  %267(%var_9439, %var_9440) /* ty=(Tensor[(5, 4, 8), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550), int8]) */
}

def @func_12475(%var_12456: Tensor[(15, 9, 9), float32]) -> Tensor[(15, 9, 9), float64] {
  %268 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %269 = cast(%var_12456, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%271, %272) /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_17923(%var_17921: Tensor[(63), uint32]) -> (Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(1274), int16], Tensor[(390), float64], Tensor[(63), uint32]) {
  @func_17920(%var_17921) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(1274), int16], Tensor[(390), float64], Tensor[(63), uint32]) */
}

def @func_19174(%var_19152: Tensor[(12, 11, 13), float32], %var_19153: Tensor[(12, 11, 13), float32]) -> Tensor[(12, 11, 13), float32] {
  %273 = cast(%var_19153, dtype="float32") /* ty=Tensor[(12, 11, 13), float32] */;
  %274 = shape_of(%var_19152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%var_19152, dtype="float32") /* ty=Tensor[(12, 11, 13), float32] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%275, %276) /* ty=Tensor[(12, 11, 13), float32] */
}

def @func_8587(%var_8584: Tensor[(15, 2, 16), int8], %var_8585: Tensor[(15, 2, 16), int8], %var_8586: Tensor[(1024), uint16]) -> (Tensor[(15, 2, 16), bool], Tensor[(1024), uint16], Tensor[(70, 9), bool], Tensor[(7, 10, 9), float32]) {
  @func_8582(%var_8584, %var_8585, %var_8586) /* ty=(Tensor[(15, 2, 16), bool], Tensor[(1024), uint16], Tensor[(70, 9), bool], Tensor[(7, 10, 9), float32]) */
}

def @func_11261() -> (Tensor[(15, 9, 9), float32],) {
  %277 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %278 = %277.0;
  (%278,)
}

def @func_16303() -> Tensor[(10, 14, 4), float64] {
  %279 = @func_15129() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
  %279.1
}

def @func_12604(%var_12603: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) {
  %293 = fn (%var_12597: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) {
    %280 = cast(%var_12597, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %281 = cast(%var_12597, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %282 = cast(meta[relay.Constant][20] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %283 = cast(%var_12597, dtype="bool") /* ty=Tensor[(1024), bool] */;
    %284 = reshape(%280, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
    %285 = reshape(%281, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
    %286 = reshape(%282, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
    %287 = reshape(%283, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
    %288 = @func_6067(%284, %285, %286, %287) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
    %289 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %290 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
    %291 = %288.1;
    %292 = %289.0;
    (%290, %291, %var_12597, meta[relay.Constant][20] /* ty=Tensor[(630), float32] */, %292)
  };
  %293(%var_12603) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_15129() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  %294 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  %296 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  %297 = cosh(%295) /* ty=Tensor[(10, 14, 4), float64] */;
  (%296, %297)
}

def @func_594(%var_593: int8) -> Tensor[(1, 7, 1), bool] {
  %303 = fn (%var_582: int8) -> Tensor[(1, 7, 1), bool] {
    %298 = cast(%var_582, dtype="int8") /* ty=int8 */;
    %299 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 7, 1), int8] */, dtype="int8") /* ty=Tensor[(1, 7, 1), int8] */;
    %300 = right_shift(%298, %299) /* ty=Tensor[(1, 7, 1), int8] */;
    %301 = cast(%var_582, dtype="bool") /* ty=bool */;
    %302 = cast(%300, dtype="bool") /* ty=Tensor[(1, 7, 1), bool] */;
    less_equal(%301, %302) /* ty=Tensor[(1, 7, 1), bool] */
  };
  %303(%var_593) /* ty=Tensor[(1, 7, 1), bool] */
}

def @func_18814() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %311 = fn () -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
    %304 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %305 = @func_17708() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
    %306 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %307 = %304.0;
    %308 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
    %309 = %305.0;
    %310 = %306.0;
    (%307, %308, %309, %310)
  };
  %311() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */
}

def @func_6073(%var_6069: Tensor[(16, 4, 16), uint16], %var_6070: Tensor[(16, 4, 16), uint16], %var_6071: Tensor[(70, 9), float32], %var_6072: Tensor[(16, 4, 16), bool]) -> (Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) {
  @func_6067(%var_6069, %var_6070, %var_6071, %var_6072) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */
}

def @func_712(%var_710: Tensor[(12, 5, 1), uint64], %var_711: Tensor[(7, 9), uint32]) -> (Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) {
  @func_708(%var_710, %var_711) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */
}

def @func_16423(%var_16374: Tensor[(270), int8], %var_16384: Tensor[(195, 3), float32], %var_16410: Tensor[(250), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(390), float64], Tensor[(270), int8], Tensor[(63), uint32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(195, 3), float64], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550, 1), int8]) {
  %312 = cast(%var_16374, dtype="int8") /* ty=Tensor[(270), int8] */;
  %313 = cast(%var_16374, dtype="int8") /* ty=Tensor[(270), int8] */;
  %314 = cast(meta[relay.Constant][22] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %315 = reshape(%312, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), int8] */;
  %316 = reshape(%313, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), int8] */;
  %317 = reshape(%314, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %318 = @func_14462(%315, %316, %317) /* ty=(Tensor[(9, 5, 6), bool], Tensor[(60), uint64], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %319 = cast(%var_16384, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %320 = cast(%var_16384, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %321 = cast(%var_16384, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %322 = reshape(%319, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %323 = reshape(%320, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %324 = reshape(%321, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %325 = @func_10348(%322, %323, %324) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */;
  %326 = cast(meta[relay.Constant][23] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %327 = cast(meta[relay.Constant][23] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %328 = reshape(%326, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %329 = reshape(%327, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %330 = @func_2616(%328, %329) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %331 = cast(%var_16384, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %332 = sigmoid(%331) /* ty=Tensor[(195, 3), float64] */;
  %333 = cast(%332, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %334 = cast(%var_16410, dtype="float64") /* ty=Tensor[(250), float64] */;
  %335 = cast(meta[relay.Constant][24] /* ty=Tensor[(550, 1), int8] */, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
  %336 = reshape(%334, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %337 = reshape(%335, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %338 = @func_6813(%336, %337) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %339 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %340 = %318.2;
  %341 = @func_10241() /* ty=Tensor[(15, 9, 9), float32] */;
  %342 = %325.1;
  %343 = %330.0;
  %344 = acosh(%333) /* ty=Tensor[(195, 3), float64] */;
  %345 = %338.1;
  (%339, %340, %var_16374, meta[relay.Constant][22] /* ty=Tensor[(63), uint32] */, %341, %342, %343, meta[relay.Constant][23] /* ty=Tensor[(2400), float32] */, %344, %345, %var_16410, meta[relay.Constant][24] /* ty=Tensor[(550, 1), int8] */)
}

def @func_20633(%var_20616: Tensor[(26400), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(896), float64], Tensor[(26400), float32], uint32, Tensor[(15, 4), uint64], Tensor[(63, 1), uint32]) {
  %346 = @func_17771() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(65, 9), int8], Tensor[(65, 9), bool]) */;
  %347 = cast(%var_20616, dtype="float32") /* ty=Tensor[(26400), float32] */;
  %348 = reshape(%347, newshape=[11, 2400]) /* ty=Tensor[(11, 2400), float32] */;
  %349 = @func_19370(%348) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(3, 20), uint64], Tensor[(896), float64], Tensor[(700), float32], Tensor[(11, 2400), bool], Tensor[(15, 9, 9), float32]) */;
  %350 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 4), uint64] */, dtype="uint64") /* ty=Tensor[(15, 4), uint64] */;
  %351 = cast(meta[relay.Constant][26] /* ty=Tensor[(63, 1), uint32] */, dtype="uint32") /* ty=Tensor[(63, 1), uint32] */;
  %352 = reshape(%350, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %353 = reshape(%351, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %354 = @func_708(%352, %353) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %355 = %346.0;
  %356 = %349.2;
  %357 = %354.2;
  (%355, %356, %var_20616, %357, meta[relay.Constant][25] /* ty=Tensor[(15, 4), uint64] */, meta[relay.Constant][26] /* ty=Tensor[(63, 1), uint32] */)
}

def @func_16517() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */
}

def @func_12370() -> (Tensor[(15, 9, 9), float32],) {
  @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_17048() -> (Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) {
  %361 = fn () -> (Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) {
    %358 = @func_15129() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
    %359 = %358.1;
    %360 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
    (%359, %360)
  };
  %361() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) */
}

def @func_10451() -> Tensor[(15, 9, 9), float32] {
  %363 = fn () -> Tensor[(15, 9, 9), float32] {
    %362 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %362.0
  };
  %363() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_10946() -> Tensor[(15, 9, 9), float64] {
  %365 = fn () -> Tensor[(15, 9, 9), float64] {
    %364 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %364.0
  };
  %365() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_12478(%var_12476: Tensor[(15, 9, 9), float32]) -> Tensor[(15, 9, 9), float64] {
  @func_12475(%var_12476) /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_13694() -> (Tensor[(65, 9), float32],) {
  @func_13692() /* ty=(Tensor[(65, 9), float32],) */
}

def @func_18167(%var_18165: Tensor[(15, 6, 4), float32]) -> (Tensor[(15, 6, 4), float32], Tensor[(10, 14, 4), float64]) {
  @func_18164(%var_18165) /* ty=(Tensor[(15, 6, 4), float32], Tensor[(10, 14, 4), float64]) */
}

def @func_14466(%var_14463: Tensor[(9, 5, 6), int8], %var_14464: Tensor[(9, 5, 6), int8], %var_14465: Tensor[(63), uint32]) -> (Tensor[(9, 5, 6), bool], Tensor[(60), uint64], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %379 = fn (%var_14443: Tensor[(9, 5, 6), int8], %var_14444: Tensor[(9, 5, 6), int8], %var_14451: Tensor[(63), uint32]) -> (Tensor[(9, 5, 6), bool], Tensor[(60), uint64], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
    %366 = cast(%var_14444, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
    %367 = shape_of(%var_14443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %368 = cast(%var_14443, dtype="bool") /* ty=Tensor[(9, 5, 6), bool] */;
    %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %370 = cast(meta[relay.Constant][27] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
    %371 = cast(%var_14451, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %372 = cast(meta[relay.Constant][28] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
    %373 = reshape(%370, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
    %374 = reshape(%371, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %375 = reshape(%372, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %376 = @func_3701(%373, %374, %375) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
    %377 = not_equal(%368, %369) /* ty=Tensor[(9, 5, 6), bool] */;
    %378 = %376.1;
    (%377, %378, meta[relay.Constant][27] /* ty=Tensor[(390), float64] */, %var_14451, meta[relay.Constant][28] /* ty=Tensor[(2400), float32] */)
  };
  %379(%var_14463, %var_14464, %var_14465) /* ty=(Tensor[(9, 5, 6), bool], Tensor[(60), uint64], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */
}

def @func_11636(%var_11634: Tensor[(15, 9, 9), float32]) -> (Tensor[(15, 9, 9), uint32], Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32]) {
  @func_11633(%var_11634) /* ty=(Tensor[(15, 9, 9), uint32], Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32]) */
}

def @func_20256() -> (Tensor[(15, 9, 9), float32],) {
  %381 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %380 = @func_17480() /* ty=Tensor[(15, 9, 9), float32] */;
    (%380,)
  };
  %381() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_21029() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  @func_21027() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_10241() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_15131() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  @func_15129() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */
}

def @func_3463(%var_3439: Tensor[(13, 6, 7), float32], %var_3449: Tensor[(13, 6, 7), float32], %var_3454: Tensor[(700), float32], %var_3455: int8, %var_3456: Tensor[(2400), float32]) -> (Tensor[(13, 6, 7), float32], Tensor[(5, 10, 14), float32], Tensor[(700), float32], int8, Tensor[(2400), float32]) {
  %382 = cast(%var_3439, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %383 = erf(%382) /* ty=Tensor[(13, 6, 7), float32] */;
  %384 = cast(%var_3449, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %388 = cast(%var_3454, dtype="float32") /* ty=Tensor[(700), float32] */;
  %389 = cast(%var_3455, dtype="int8") /* ty=int8 */;
  %390 = cast(%var_3456, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %391 = reshape(%388, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %392 = reshape(%389, newshape=[]) /* ty=int8 */;
  %393 = reshape(%390, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %394 = @func_3151(%391, %392, %393) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) */;
  %395 = floor_mod(%386, %387) /* ty=Tensor[(13, 6, 7), float32] */;
  %396 = %394.0;
  (%395, %396, %var_3454, %var_3455, %var_3456)
}

def @func_555(%var_552: uint32, %var_553: Tensor[(3, 7, 3), uint32], %var_554: Tensor[(72), float64]) -> (Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) {
  @func_550(%var_552, %var_553, %var_554) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */
}

def @func_12123(%var_12038: float64, %var_12039: Tensor[(495), bool]) -> (Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %397 = cast(%var_12038, dtype="float64") /* ty=float64 */;
  %398 = cast(%var_12039, dtype="bool") /* ty=Tensor[(495), bool] */;
  %399 = reshape(%397, newshape=[]) /* ty=float64 */;
  %400 = reshape(%398, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %401 = @func_11542(%399, %400) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */;
  %402 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %403 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %404 = %401.0;
  %405 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %406 = %402.0;
  %407 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  (%403, %404, %var_12038, %var_12039, %405, %406, %407)
}

def @func_2616(%var_2599: Tensor[(10, 15, 16), float32], %var_2600: Tensor[(10, 15, 16), float32]) -> (Tensor[(10, 15, 16), bool],) {
  %408 = cast(%var_2600, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
  %409 = shape_of(%var_2599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_2599, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %412 = greater_equal(%410, %411) /* ty=Tensor[(10, 15, 16), bool] */;
  (%412,)
}

def @func_11561() -> (Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) {
  %413 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %414 = cast(meta[relay.Constant][29] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %415 = reshape(%414, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), float64] */;
  %416 = %413.0;
  %417 = @func_10628(%415) /* ty=Tensor[(10, 14, 4), float64] */;
  (%416, %417, meta[relay.Constant][29] /* ty=Tensor[(560), float64] */)
}

def @func_18912(%var_18909: Tensor[(390), float64], %var_18910: Tensor[(63), uint32], %var_18911: Tensor[(2400), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(3, 7, 3), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  @func_18907(%var_18909, %var_18910, %var_18911) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(3, 7, 3), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */
}

def @func_17773() -> (Tensor[(15, 9, 9), float32], Tensor[(65, 9), int8], Tensor[(65, 9), bool]) {
  @func_17771() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(65, 9), int8], Tensor[(65, 9), bool]) */
}

def @func_20969() -> Tensor[(15, 9, 9), float32] {
  %419 = fn () -> Tensor[(15, 9, 9), float32] {
    %418 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %418.0
  };
  %419() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17482() -> Tensor[(15, 9, 9), float32] {
  @func_17480() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_10401() -> (Tensor[(15, 9, 9), float32],) {
  %420 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  (%420,)
}

def @func_16233(%var_16231: uint32) -> (Tensor[(15, 9, 9), float64], Tensor[(550), int8], uint32) {
  @func_16230(%var_16231) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], uint32) */
}

def @func_18717() -> Tensor[(15, 9, 9), float32] {
  %422 = fn () -> Tensor[(15, 9, 9), float32] {
    %421 = @func_13273() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %421.0
  };
  %422() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_15711() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */
}

def @func_10137() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_12287() -> (Tensor[(15, 9, 9), float64],) {
  %423 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %424 = %423.0;
  (%424,)
}

def @func_19789(%var_19787: Tensor[(7, 3, 4), float32], %var_19788: Tensor[(7, 3, 4), float32]) -> Tensor[(7, 3, 4), float32] {
  %429 = fn (%var_19778: Tensor[(7, 3, 4), float32], %var_19779: Tensor[(7, 3, 4), float32]) -> Tensor[(7, 3, 4), float32] {
    %425 = cast(%var_19779, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %426 = shape_of(%var_19778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %427 = cast(%var_19778, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%427, %428) /* ty=Tensor[(7, 3, 4), float32] */
  };
  %429(%var_19787, %var_19788) /* ty=Tensor[(7, 3, 4), float32] */
}

def @func_18605() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  @func_18603() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_15317() -> (Tensor[(495), bool],) {
  %432 = fn () -> (Tensor[(495), bool],) {
    %430 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
    %431 = %430.3;
    (%431,)
  };
  %432() /* ty=(Tensor[(495), bool],) */
}

def @func_3156(%var_3153: Tensor[(5, 10, 14), float32], %var_3154: int8, %var_3155: Tensor[(2400), float32]) -> (Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) {
  @func_3151(%var_3153, %var_3154, %var_3155) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) */
}

def @func_15823() -> Tensor[(15, 9, 9), float64] {
  %433 = @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %433.2
}

def @func_18089() -> Tensor[(15, 9, 9), float32] {
  @func_18087() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17869() -> (Tensor[(15, 9, 9), float32],) {
  %435 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %434 = @func_14320() /* ty=Tensor[(15, 9, 9), float32] */;
    (%434,)
  };
  %435() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_19059() -> (Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64]) {
  %438 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64]) {
    %436 = @func_15274() /* ty=Tensor[(15, 9, 9), float32] */;
    %437 = @func_17164() /* ty=Tensor[(10, 14, 4), float64] */;
    (%436, %437)
  };
  %438() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64]) */
}

def @func_19429(%var_19427: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) {
  @func_19426(%var_19427) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) */
}

def @func_14693(%var_14692: float64) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], float64) {
  %445 = fn (%var_14688: float64) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], float64) {
    %439 = cast(%var_14688, dtype="float64") /* ty=float64 */;
    %440 = reshape(%439, newshape=[]) /* ty=float64 */;
    %441 = @func_13643(%440) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool]) */;
    %442 = @func_13380() /* ty=Tensor[(15, 9, 9), float32] */;
    %443 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
    %444 = %441.2;
    (%442, %443, %444, %var_14688)
  };
  %445(%var_14692) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], float64) */
}

def @func_18013() -> (Tensor[(15, 9, 9), float32],) {
  %446 = @func_17480() /* ty=Tensor[(15, 9, 9), float32] */;
  (%446,)
}

def @func_20732() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(65, 9), float64], Tensor[(585), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 5, 11), bool], Tensor[(5, 110), int8]) {
  %447 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %448 = reshape(%447, newshape=[65, 9]) /* ty=Tensor[(65, 9), float32] */;
  %449 = @func_18813() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %450 = %449.1;
  %451 = cast(%450, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %452 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 110), int8] */, dtype="int8") /* ty=Tensor[(5, 110), int8] */;
  %453 = reshape(%451, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %454 = reshape(%452, newshape=[55, 10]) /* ty=Tensor[(55, 10), int8] */;
  %455 = @func_11215(%453, %454) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */;
  %456 = @func_11088() /* ty=Tensor[(15, 9, 9), float64] */;
  %457 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  %458 = @func_14520(%448) /* ty=Tensor[(65, 9), float64] */;
  %459 = %455.1;
  (%456, %457, %458, meta[relay.Constant][30] /* ty=Tensor[(585), float32] */, %450, %459, meta[relay.Constant][31] /* ty=Tensor[(5, 110), int8] */)
}

def @func_16666(%var_16663: uint32) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), int8], uint32, uint32) {
  %460 = @func_14810() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %461 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %462 = cast(%var_16663, dtype="uint32") /* ty=uint32 */;
  %463 = reshape(%462, newshape=[]) /* ty=uint32 */;
  %464 = @func_16230(%463) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], uint32) */;
  %465 = %460.0;
  %466 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
  %467 = %461.0;
  %468 = %464.2;
  (%465, %466, %467, %468, %var_16663)
}

def @func_21325() -> Tensor[(15, 9, 9), float64] {
  @func_21323() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_15333(%var_15330: Tensor[(250), float64], %var_15331: Tensor[(275, 2), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(495), bool], Tensor[(550), int8], Tensor[(250), float64], Tensor[(275, 2), int8]) {
  %469 = @func_14486() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %470 = @func_15316() /* ty=(Tensor[(495), bool],) */;
  %471 = cast(%var_15330, dtype="float64") /* ty=Tensor[(250), float64] */;
  %472 = cast(%var_15331, dtype="int8") /* ty=Tensor[(275, 2), int8] */;
  %473 = reshape(%471, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %474 = reshape(%472, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %475 = @func_6813(%473, %474) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %476 = %469.0;
  %477 = %470.0;
  %478 = %475.1;
  (%476, %477, %478, %var_15330, %var_15331)
}

def @func_18029() -> Tensor[(10, 14, 4), float64] {
  @func_18027() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_288(%var_287: Tensor[(6, 3, 4), float64]) -> Tensor[(6, 3, 4), float64] {
  %480 = fn (%var_265: Tensor[(6, 3, 4), float64]) -> Tensor[(6, 3, 4), float64] {
    %479 = cast(%var_265, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
    sinh(%479) /* ty=Tensor[(6, 3, 4), float64] */
  };
  %480(%var_287) /* ty=Tensor[(6, 3, 4), float64] */
}

def @func_19293() -> (Tensor[(15, 9, 9), float32],) {
  %483 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %481 = @func_18603() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
    %482 = %481.0;
    (%482,)
  };
  %483() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_16052(%var_16051: Tensor[(896), uint32]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(15, 9, 9), float32], Tensor[(14, 16, 4), bool], Tensor[(896), uint32]) {
  %496 = fn (%var_16039: Tensor[(896), uint32]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(15, 9, 9), float32], Tensor[(14, 16, 4), bool], Tensor[(896), uint32]) {
    %484 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
    %485 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %486 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
    %487 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %488 = cast(%var_16039, dtype="uint32") /* ty=Tensor[(896), uint32] */;
    %489 = reshape(%488, newshape=[14, 16, 4]) /* ty=Tensor[(14, 16, 4), uint32] */;
    %490 = @func_5891(%489) /* ty=(Tensor[(14, 16, 4), bool],) */;
    %491 = %484.0;
    %492 = %485.0;
    %493 = %486.1;
    %494 = %487.0;
    %495 = %490.0;
    (%491, %492, %493, %494, %495, %var_16039)
  };
  %496(%var_16051) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(15, 9, 9), float32], Tensor[(14, 16, 4), bool], Tensor[(896), uint32]) */
}

def @func_12800() -> (Tensor[(15, 9, 9), float64],) {
  %497 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %498 = %497.1;
  (%498,)
}

def @func_17165() -> Tensor[(10, 14, 4), float64] {
  %500 = fn () -> Tensor[(10, 14, 4), float64] {
    %499 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
    %499.0
  };
  %500() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_9243(%var_9240: float32, %var_9241: Tensor[(11, 13, 10), float32], %var_9242: Tensor[(72), float64]) -> (Tensor[(11, 13, 10), float32], Tensor[(6, 3, 4), float64], Tensor[(63), uint32], Tensor[(72), float64], Tensor[(10, 5, 11), bool], Tensor[(550, 1), int8]) {
  %516 = fn (%var_9202: float32, %var_9203: Tensor[(11, 13, 10), float32], %var_9218: Tensor[(72), float64]) -> (Tensor[(11, 13, 10), float32], Tensor[(6, 3, 4), float64], Tensor[(63), uint32], Tensor[(72), float64], Tensor[(10, 5, 11), bool], Tensor[(550, 1), int8]) {
    %501 = cast(%var_9202, dtype="float32") /* ty=float32 */;
    %502 = cast(%var_9203, dtype="float32") /* ty=Tensor[(11, 13, 10), float32] */;
    %503 = cast(%var_9202, dtype="uint32") /* ty=uint32 */;
    %504 = cast(meta[relay.Constant][32] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %505 = cast(%var_9218, dtype="float64") /* ty=Tensor[(72), float64] */;
    %506 = reshape(%503, newshape=[]) /* ty=uint32 */;
    %507 = reshape(%504, newshape=[3, 7, 3]) /* ty=Tensor[(3, 7, 3), uint32] */;
    %508 = reshape(%505, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %509 = @func_550(%506, %507, %508) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */;
    %510 = cast(meta[relay.Constant][33] /* ty=Tensor[(550, 1), int8] */, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
    %511 = reshape(%510, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
    %512 = @func_3434(%511) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %513 = floor_divide(%501, %502) /* ty=Tensor[(11, 13, 10), float32] */;
    %514 = %509.3;
    %515 = %512.0;
    (%513, %514, meta[relay.Constant][32] /* ty=Tensor[(63), uint32] */, %var_9218, %515, meta[relay.Constant][33] /* ty=Tensor[(550, 1), int8] */)
  };
  %516(%var_9240, %var_9241, %var_9242) /* ty=(Tensor[(11, 13, 10), float32], Tensor[(6, 3, 4), float64], Tensor[(63), uint32], Tensor[(72), float64], Tensor[(10, 5, 11), bool], Tensor[(550, 1), int8]) */
}

def @func_11127(%var_11098: Tensor[(14, 7, 13), int16], %var_11099: Tensor[(14, 7, 13), int16], %var_11105: Tensor[(195, 2), float64], %var_11106: Tensor[(63), uint32]) -> (Tensor[(14, 7, 13), bool], Tensor[(10, 15, 16), bool], Tensor[(195, 2), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %517 = cast(%var_11099, dtype="bool") /* ty=Tensor[(14, 7, 13), bool] */;
  %518 = shape_of(%var_11098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_11098, dtype="bool") /* ty=Tensor[(14, 7, 13), bool] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %521 = cast(%var_11105, dtype="float64") /* ty=Tensor[(195, 2), float64] */;
  %522 = cast(%var_11106, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %523 = cast(meta[relay.Constant][34] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %524 = reshape(%521, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
  %525 = reshape(%522, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %526 = reshape(%523, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %527 = @func_3701(%524, %525, %526) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
  %528 = less(%519, %520) /* ty=Tensor[(14, 7, 13), bool] */;
  %529 = %527.6;
  (%528, %529, %var_11105, %var_11106, meta[relay.Constant][34] /* ty=Tensor[(2400), float32] */)
}

def @func_17548() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %533 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
    %530 = @func_13273() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %531 = %530.0;
    %532 = @func_17271() /* ty=Tensor[(15, 9, 9), float32] */;
    (%531, %532)
  };
  %533() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_11563() -> (Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) {
  @func_11561() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) */
}

def @func_10882(%var_10880: uint32) -> (Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550), int8], Tensor[(3, 7, 3), uint32], uint32, Tensor[(63), uint32], Tensor[(6, 12), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  @func_10879(%var_10880) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550), int8], Tensor[(3, 7, 3), uint32], uint32, Tensor[(63), uint32], Tensor[(6, 12), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */
}

def @func_11936(%var_11930: Tensor[(1, 72), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(6, 3, 4), float64], Tensor[(1, 72), float64]) {
  %534 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %535 = cast(%var_11930, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %536 = reshape(%535, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %537 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  %538 = %534.0;
  %539 = @func_286(%536) /* ty=Tensor[(6, 3, 4), float64] */;
  (%537, %538, %539, %var_11930)
}

def @func_15095() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %540 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %541 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  (%540, %541)
}

def @func_17859() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  @func_17857() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_16164() -> (Tensor[(15, 9, 9), float32],) {
  @func_16162() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_13380() -> Tensor[(15, 9, 9), float32] {
  @func_10305() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_18695() -> (Tensor[(12, 4, 15), float64], Tensor[(15, 9, 9), float32]) {
  %545 = fn () -> (Tensor[(12, 4, 15), float64], Tensor[(15, 9, 9), float32]) {
    %542 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 15), float64] */;
    %543 = atanh(%542) /* ty=Tensor[(12, 4, 15), float64] */;
    %544 = @func_10305() /* ty=Tensor[(15, 9, 9), float32] */;
    (%543, %544)
  };
  %545() /* ty=(Tensor[(12, 4, 15), float64], Tensor[(15, 9, 9), float32]) */
}

def @func_17138() -> (Tensor[(15, 9, 9), float64],) {
  %546 = @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %547 = %546.1;
  (%547,)
}

def @func_2620(%var_2618: Tensor[(10, 15, 16), float32], %var_2619: Tensor[(10, 15, 16), float32]) -> (Tensor[(10, 15, 16), bool],) {
  @func_2616(%var_2618, %var_2619) /* ty=(Tensor[(10, 15, 16), bool],) */
}

def @func_20773() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %548 = @func_18087() /* ty=Tensor[(15, 9, 9), float32] */;
  %549 = @func_18087() /* ty=Tensor[(15, 9, 9), float32] */;
  (%548, %549)
}

def @func_14320() -> Tensor[(15, 9, 9), float32] {
  @func_12870() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17298() -> (Tensor[(65, 9), float32],) {
  %552 = fn () -> (Tensor[(65, 9), float32],) {
    %550 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
    %551 = %550.2;
    (%551,)
  };
  %552() /* ty=(Tensor[(65, 9), float32],) */
}

def @func_17383(%var_17346: Tensor[(5, 10, 3), int64], %var_17347: Tensor[(5, 10, 3), int64], %var_17353: Tensor[(60), uint64], %var_17354: Tensor[(63), uint32]) -> (Tensor[(5, 10, 3), int64], Tensor[(12, 5, ?), uint64], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(5, 10, 3), float64]) {
  %553 = cast(%var_17347, dtype="int64") /* ty=Tensor[(5, 10, 3), int64] */;
  %554 = shape_of(%var_17346, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_17346, dtype="int64") /* ty=Tensor[(5, 10, 3), int64] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %557 = cast(%var_17353, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %558 = cast(%var_17354, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %559 = reshape(%557, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %560 = reshape(%558, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %561 = @func_708(%559, %560) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %562 = cast(meta[relay.Constant][36] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %563 = reshape(%562, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %564 = @func_5753(%563) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) */;
  %565 = cast(%var_17347, dtype="float64") /* ty=Tensor[(5, 10, 3), float64] */;
  %566 = logical_xor(%555, %556) /* ty=Tensor[(5, 10, 3), int64] */;
  %567 = %561.0;
  %568 = %564.1;
  %569 = asinh(%565) /* ty=Tensor[(5, 10, 3), float64] */;
  (%566, %567, %var_17353, %var_17354, %568, meta[relay.Constant][36] /* ty=Tensor[(105), float32] */, %569)
}

def @func_550(%var_490: uint32, %var_491: Tensor[(3, 7, 3), uint32], %var_496: Tensor[(72), float64]) -> (Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) {
  %570 = cast(%var_490, dtype="uint32") /* ty=uint32 */;
  %571 = cast(%var_491, dtype="uint32") /* ty=Tensor[(3, 7, 3), uint32] */;
  %572 = cast(%var_496, dtype="float64") /* ty=Tensor[(72), float64] */;
  %573 = reshape(%572, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %574 = cast(%var_496, dtype="float64") /* ty=Tensor[(72), float64] */;
  %575 = reshape(%574, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %576 = @func_286(%573) /* ty=Tensor[(6, 3, 4), float64] */;
  %577 = cast(%576, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  %578 = reshape(%577, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %579 = cast(%var_496, dtype="float64") /* ty=Tensor[(72), float64] */;
  %580 = reshape(%579, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %581 = @func_286(%575) /* ty=Tensor[(6, 3, 4), float64] */;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  %583 = reshape(%582, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %584 = bitwise_xor(%570, %571) /* ty=Tensor[(3, 7, 3), uint32] */;
  %585 = @func_286(%578) /* ty=Tensor[(6, 3, 4), float64] */;
  %586 = @func_286(%580) /* ty=Tensor[(6, 3, 4), float64] */;
  %587 = @func_286(%583) /* ty=Tensor[(6, 3, 4), float64] */;
  (%584, %576, %var_496, %581, %585, %586, %587)
}

def @func_19426(%var_19423: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) {
  %588 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %589 = %588.0;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %591 = cast(%var_19423, dtype="int8") /* ty=int8 */;
  %592 = reshape(%591, newshape=[]) /* ty=int8 */;
  %593 = acos(%590) /* ty=Tensor[(15, 9, 9), float64] */;
  %594 = @func_592(%592) /* ty=Tensor[(1, 7, 1), bool] */;
  (%593, %594, %var_19423)
}

def @func_21206(%var_21185: Tensor[(10, 14, 4), float64], %var_21201: Tensor[(5, 250), float64]) -> (Tensor[(10, 14, 4), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(270), int8], Tensor[(585), float32], Tensor[(5, 250), float32]) {
  %595 = @func_16614() /* ty=Tensor[(10, 14, 4), float64] */;
  %596 = cast(%var_21185, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="bool") /* ty=Tensor[(10, 14, 4), bool] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %600 = @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %601 = cast(meta[relay.Constant][37] /* ty=Tensor[(270), int8] */, dtype="int8") /* ty=Tensor[(270), int8] */;
  %602 = cast(meta[relay.Constant][38] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %603 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 250), float64] */, dtype="float64") /* ty=Tensor[(1, 250), float64] */;
  %604 = reshape(%601, newshape=[270]) /* ty=Tensor[(270), int8] */;
  %605 = reshape(%602, newshape=[195, 3]) /* ty=Tensor[(195, 3), float32] */;
  %606 = reshape(%603, newshape=[250]) /* ty=Tensor[(250), float64] */;
  %607 = @func_16423(%604, %605, %606) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(390), float64], Tensor[(270), int8], Tensor[(63), uint32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(195, 3), float64], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550, 1), int8]) */;
  %608 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 250), float64] */, dtype="float32") /* ty=Tensor[(1, 250), float32] */;
  %609 = cast(%var_21201, dtype="float32") /* ty=Tensor[(5, 250), float32] */;
  %610 = not_equal(%598, %599) /* ty=Tensor[(10, 14, 4), bool] */;
  %611 = %600.0;
  %612 = %607.6;
  %613 = divide(%608, %609) /* ty=Tensor[(5, 250), float32] */;
  (%610, %611, %612, meta[relay.Constant][37] /* ty=Tensor[(270), int8] */, meta[relay.Constant][38] /* ty=Tensor[(585), float32] */, %613)
}

def @func_12666() -> Tensor[(15, 9, 9), float64] {
  %614 = fn () -> Tensor[(15, 9, 9), float64] {
    @func_11738() /* ty=Tensor[(15, 9, 9), float64] */
  };
  %614() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_708(%var_679: Tensor[(12, 5, 1), uint64], %var_695: Tensor[(7, 9), uint32]) -> (Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) {
  %615 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 5, 1), uint64] */, dtype="uint64") /* ty=Tensor[(12, 5, 1), uint64] */;
  %616 = shape_of(%var_679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%var_679, dtype="uint64") /* ty=Tensor[(12, 5, 1), uint64] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %619 = cast(meta[relay.Constant][41] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %620 = cast(%var_695, dtype="uint32") /* ty=Tensor[(7, 9), uint32] */;
  %621 = cast(meta[relay.Constant][42] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %622 = reshape(%619, newshape=[]) /* ty=uint32 */;
  %623 = reshape(%620, newshape=[3, 7, 3]) /* ty=Tensor[(3, 7, 3), uint32] */;
  %624 = reshape(%621, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %625 = @func_550(%622, %623, %624) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */;
  %626 = maximum(%617, %618) /* ty=Tensor[(12, 5, ?), uint64] */;
  %627 = %625.0;
  (%626, %627, meta[relay.Constant][41] /* ty=uint32 */, %var_695, meta[relay.Constant][42] /* ty=Tensor[(72), float64] */)
}

def @func_13773() -> (Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */
}

def @func_13445() -> (Tensor[(65, 9), float32],) {
  %628 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %629 = %628.2;
  (%629,)
}

def @func_10879(%var_10841: uint32) -> (Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550), int8], Tensor[(3, 7, 3), uint32], uint32, Tensor[(63), uint32], Tensor[(6, 12), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %630 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %631 = cast(meta[relay.Constant][43] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %632 = reshape(%631, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %633 = @func_4293(%632) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %634 = cast(meta[relay.Constant][44] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %635 = cast(meta[relay.Constant][45] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %636 = reshape(%634, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %637 = reshape(%635, newshape=[550]) /* ty=Tensor[(550), int8] */;
  %638 = @func_6813(%636, %637) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
  %639 = cast(%var_10841, dtype="uint32") /* ty=uint32 */;
  %640 = cast(meta[relay.Constant][46] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %641 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %642 = reshape(%639, newshape=[]) /* ty=uint32 */;
  %643 = reshape(%640, newshape=[3, 7, 3]) /* ty=Tensor[(3, 7, 3), uint32] */;
  %644 = reshape(%641, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %645 = @func_550(%642, %643, %644) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64], Tensor[(6, 3, 4), float64]) */;
  %646 = cast(meta[relay.Constant][48] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %647 = reshape(%646, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float64] */;
  %648 = %630.0;
  %649 = %633.0;
  %650 = %638.1;
  %651 = %645.0;
  %652 = @func_10539(%647) /* ty=Tensor[(13, 2, 3), float64] */;
  (%648, %649, meta[relay.Constant][43] /* ty=Tensor[(630), float32] */, %650, meta[relay.Constant][44] /* ty=Tensor[(250), float64] */, meta[relay.Constant][45] /* ty=Tensor[(550), int8] */, %651, %var_10841, meta[relay.Constant][46] /* ty=Tensor[(63), uint32] */, meta[relay.Constant][47] /* ty=Tensor[(6, 12), float64] */, %652, meta[relay.Constant][48] /* ty=Tensor[(78), float64] */)
}

def @func_12336() -> (Tensor[(495), bool],) {
  @func_12334() /* ty=(Tensor[(495), bool],) */
}

def @func_13962() -> Tensor[(15, 9, 9), float64] {
  %654 = fn () -> Tensor[(15, 9, 9), float64] {
    %653 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %653.0
  };
  %654() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_8582(%var_8550: Tensor[(15, 2, 16), int8], %var_8551: Tensor[(15, 2, 16), int8], %var_8557: Tensor[(1024), uint16]) -> (Tensor[(15, 2, 16), bool], Tensor[(1024), uint16], Tensor[(70, 9), bool], Tensor[(7, 10, 9), float32]) {
  %655 = cast(%var_8551, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %656 = shape_of(%var_8550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%var_8550, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = cast(%var_8557, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %660 = cast(%var_8557, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %661 = cast(meta[relay.Constant][49] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %662 = cast(%var_8557, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %663 = reshape(%659, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %664 = reshape(%660, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %665 = reshape(%661, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %666 = reshape(%662, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %667 = @func_6067(%663, %664, %665, %666) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %668 = %667.1;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %670 = cosh(%669) /* ty=Tensor[(70, 9), float64] */;
  %671 = cast(meta[relay.Constant][49] /* ty=Tensor[(630), float32] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(2), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(70, 9), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %675 = cast(meta[relay.Constant][49] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %676 = reshape(%675, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %677 = @func_4293(%676) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %678 = not_equal(%657, %658) /* ty=Tensor[(15, 2, 16), bool] */;
  %679 = equal(%673, %674) /* ty=Tensor[(70, 9), bool] */;
  %680 = %677.0;
  (%678, %var_8557, %679, %680)
}

def @func_14238(%var_14236: Tensor[(250), float64], %var_14237: Tensor[(550, 1), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(495), bool], float64, Tensor[(495), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550, 1), int8]) {
  %695 = fn (%var_14220: Tensor[(250), float64], %var_14221: Tensor[(550, 1), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(495), bool], float64, Tensor[(495), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550, 1), int8]) {
    %681 = @func_13789() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %682 = cast(-6.24229f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %683 = cast(meta[relay.Constant][50] /* ty=Tensor[(495), bool] */, dtype="bool") /* ty=Tensor[(495), bool] */;
    %684 = reshape(%682, newshape=[]) /* ty=float64 */;
    %685 = reshape(%683, newshape=[495]) /* ty=Tensor[(495), bool] */;
    %686 = @func_12123(%684, %685) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
    %687 = cast(%var_14220, dtype="float64") /* ty=Tensor[(250), float64] */;
    %688 = cast(%var_14221, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
    %689 = reshape(%687, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
    %690 = reshape(%688, newshape=[550]) /* ty=Tensor[(550), int8] */;
    %691 = @func_6813(%689, %690) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(5, 5, 10), float64]) */;
    %692 = %681.0;
    %693 = %686.3;
    %694 = %691.2;
    (%692, %693, -6.24229f64 /* ty=float64 */, meta[relay.Constant][50] /* ty=Tensor[(495), bool] */, %694, %var_14220, %var_14221)
  };
  %695(%var_14236, %var_14237) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(495), bool], float64, Tensor[(495), bool], Tensor[(5, 5, 10), float64], Tensor[(250), float64], Tensor[(550, 1), int8]) */
}

def @func_12127(%var_12125: float64, %var_12126: Tensor[(495), bool]) -> (Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  @func_12123(%var_12125, %var_12126) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_17072(%var_17071: Tensor[(550), int8]) -> (Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) {
  %702 = fn (%var_17062: Tensor[(550), int8]) -> (Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) {
    %696 = @func_16901() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %697 = cast(%var_17062, dtype="int8") /* ty=Tensor[(550), int8] */;
    %698 = reshape(%697, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
    %699 = @func_3434(%698) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %700 = %696.0;
    %701 = %699.0;
    (%700, %701, %var_17062)
  };
  %702(%var_17071) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */
}

def @func_17857() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %703 = @func_12225() /* ty=Tensor[(15, 9, 9), float32] */;
  %704 = @func_15274() /* ty=Tensor[(15, 9, 9), float32] */;
  %705 = @func_13380() /* ty=Tensor[(15, 9, 9), float32] */;
  (%703, %704, %705)
}

def @func_14520(%var_14507: Tensor[(65, 9), float32]) -> Tensor[(65, 9), float64] {
  %706 = @func_13445() /* ty=(Tensor[(65, 9), float32],) */;
  %707 = %706.0;
  %708 = cast(%var_14507, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(2), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %712 = equal(%710, %711) /* ty=Tensor[(65, 9), bool] */;
  %713 = cast(%712, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  asinh(%713) /* ty=Tensor[(65, 9), float64] */
}

def @func_18225() -> (Tensor[(4, 14, 1), float64], Tensor[(550), int8], Tensor[(55, 10), int8], Tensor[(27, 45), float32]) {
  %714 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 14, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 14, 1), float64] */;
  %715 = @func_13178() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) */;
  %716 = cast(meta[relay.Constant][52] /* ty=Tensor[(27, 45), float32] */, dtype="float32") /* ty=Tensor[(27, 45), float32] */;
  %717 = %715.2;
  %718 = cast(%717, dtype="int8") /* ty=Tensor[(550), int8] */;
  %719 = reshape(%716, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %720 = reshape(%718, newshape=[55, 10]) /* ty=Tensor[(55, 10), int8] */;
  %721 = @func_11215(%719, %720) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */;
  %722 = exp(%714) /* ty=Tensor[(4, 14, 1), float64] */;
  %723 = %721.2;
  (%722, %717, %723, meta[relay.Constant][52] /* ty=Tensor[(27, 45), float32] */)
}

def @func_19234() -> Tensor[(15, 9, 9), float64] {
  @func_16298() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_13512() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %724 = @func_12287() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %725 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %726 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %727 = %724.0;
  %728 = %725.0;
  %729 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  %730 = %726.1;
  (%727, %728, %729, %730)
}

def @func_3701(%var_3656: Tensor[(13, 6, 5), float64], %var_3671: Tensor[(63), uint32], %var_3692: Tensor[(2400), float32]) -> (Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) {
  %731 = cast(meta[relay.Constant][53] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %732 = cast(%var_3671, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %733 = reshape(%731, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), uint64] */;
  %734 = reshape(%732, newshape=[7, 9]) /* ty=Tensor[(7, 9), uint32] */;
  %735 = @func_708(%733, %734) /* ty=(Tensor[(12, 5, ?), uint64], Tensor[(3, 7, 3), uint32], uint32, Tensor[(7, 9), uint32], Tensor[(72), float64]) */;
  %736 = cast(%var_3656, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %737 = atan(%736) /* ty=Tensor[(13, 6, 5), float64] */;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %739 = cast(%var_3692, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %740 = cast(%var_3692, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %741 = reshape(%739, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %742 = reshape(%740, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %743 = @func_2616(%741, %742) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %744 = %743.0;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(10, 15, 16), float32] */;
  %746 = cast(%var_3692, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %747 = reshape(%745, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %748 = reshape(%746, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %749 = @func_2616(%747, %748) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %750 = %735.1;
  %751 = sin(%738) /* ty=Tensor[(13, 6, 5), float64] */;
  %752 = %749.0;
  (%750, meta[relay.Constant][53] /* ty=Tensor[(60), uint64] */, %var_3671, %751, %744, %var_3692, %752)
}

def @func_16614() -> Tensor[(10, 14, 4), float64] {
  @func_16303() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_10426() -> (Tensor[(15, 9, 9), float64],) {
  %753 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %754 = %753.0;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
  %756 = sinh(%755) /* ty=Tensor[(15, 9, 9), float64] */;
  (%756,)
}

def @func_13420(%var_13419: Tensor[(550), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(275, 2), bool], Tensor[(550), int8]) {
  %764 = fn (%var_13413: Tensor[(550), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(275, 2), bool], Tensor[(550), int8]) {
    %757 = cast(%var_13413, dtype="int8") /* ty=Tensor[(550), int8] */;
    %758 = cast(%var_13413, dtype="int8") /* ty=Tensor[(550), int8] */;
    %759 = reshape(%757, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
    %760 = reshape(%758, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
    %761 = @func_12198(%759, %760) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */;
    %762 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
    %763 = %761.1;
    (%762, %763, %var_13413)
  };
  %764(%var_13419) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(275, 2), bool], Tensor[(550), int8]) */
}

def @func_13263(%var_13261: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) {
  @func_13260(%var_13261) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) */
}

def @func_19230() -> (Tensor[(15, 9, 9), float64],) {
  @func_19228() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_15337(%var_15335: Tensor[(250), float64], %var_15336: Tensor[(275, 2), int8]) -> (Tensor[(15, 9, 9), float32], Tensor[(495), bool], Tensor[(550), int8], Tensor[(250), float64], Tensor[(275, 2), int8]) {
  @func_15333(%var_15335, %var_15336) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(495), bool], Tensor[(550), int8], Tensor[(250), float64], Tensor[(275, 2), int8]) */
}

def @func_18015() -> (Tensor[(15, 9, 9), float32],) {
  @func_18013() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_16616() -> Tensor[(10, 14, 4), float64] {
  @func_16614() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_16570(%var_16569: Tensor[(300, 8), bool]) -> Tensor[(300, 8), bool] {
  %771 = fn (%var_16560: Tensor[(300, 8), bool]) -> Tensor[(300, 8), bool] {
    %765 = @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
    %766 = %765.1;
    %767 = cast(%var_16560, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
    %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(2), int32] */;
    %769 = cast(%766, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    not_equal(%769, %770) /* ty=Tensor[(300, 8), bool] */
  };
  %771(%var_16569) /* ty=Tensor[(300, 8), bool] */
}

def @func_14723() -> Tensor[(15, 9, 9), float32] {
  %772 = @func_14486() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %772.0
}

def @func_11219(%var_11217: Tensor[(15, 9, 9), float32], %var_11218: Tensor[(55, 10), int8]) -> (Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) {
  @func_11215(%var_11217, %var_11218) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */
}

def @func_15488() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32]) {
  @func_15486() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32]) */
}

def @func_16948(%var_16947: Tensor[(1, 14, 8), uint8]) -> (Tensor[(7, 14, 8), uint8], Tensor[(15, 9, 9), float32]) {
  %777 = fn (%var_16927: Tensor[(1, 14, 8), uint8]) -> (Tensor[(7, 14, 8), uint8], Tensor[(15, 9, 9), float32]) {
    %773 = cast(%var_16927, dtype="uint8") /* ty=Tensor[(1, 14, 8), uint8] */;
    %774 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 14, 8), uint8] */, dtype="uint8") /* ty=Tensor[(7, 14, 8), uint8] */;
    %775 = subtract(%773, %774) /* ty=Tensor[(7, 14, 8), uint8] */;
    %776 = @func_14723() /* ty=Tensor[(15, 9, 9), float32] */;
    (%775, %776)
  };
  %777(%var_16947) /* ty=(Tensor[(7, 14, 8), uint8], Tensor[(15, 9, 9), float32]) */
}

def @func_13178() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) {
  %778 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %779 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
  %780 = @func_12665() /* ty=Tensor[(15, 9, 9), float64] */;
  %781 = %778.0;
  %782 = %779.1;
  (%780, %781, %782)
}

def @func_10556() -> Tensor[(15, 9, 9), float32] {
  @func_10305() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_19178(%var_19176: Tensor[(12, 11, 13), float32], %var_19177: Tensor[(12, 11, 13), float32]) -> Tensor[(12, 11, 13), float32] {
  @func_19174(%var_19176, %var_19177) /* ty=Tensor[(12, 11, 13), float32] */
}

def @func_17273() -> Tensor[(15, 9, 9), float32] {
  @func_17271() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_16901() -> (Tensor[(15, 9, 9), float64],) {
  %783 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %784 = %783.0;
  (%784,)
}

def @func_21323() -> Tensor[(15, 9, 9), float64] {
  @func_15823() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_18227() -> (Tensor[(4, 14, 1), float64], Tensor[(550), int8], Tensor[(55, 10), int8], Tensor[(27, 45), float32]) {
  @func_18225() /* ty=(Tensor[(4, 14, 1), float64], Tensor[(550), int8], Tensor[(55, 10), int8], Tensor[(27, 45), float32]) */
}

def @func_13180() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) {
  @func_13178() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) */
}

def @func_12430() -> Tensor[(15, 9, 9), float64] {
  @func_12428() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_17140() -> (Tensor[(15, 9, 9), float64],) {
  @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_5217(%var_5216: Tensor[(14, 5, 5), float64]) -> (Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) {
  %793 = fn (%var_5182: Tensor[(14, 5, 5), float64]) -> (Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) {
    %785 = cast(%var_5182, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
    %786 = sin(%785) /* ty=Tensor[(14, 5, 5), float64] */;
    %787 = cast(%786, dtype="float32") /* ty=Tensor[(14, 5, 5), float32] */;
    %788 = cast(meta[relay.Constant][55] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
    %789 = reshape(%788, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
    %790 = @func_3434(%789) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %791 = tan(%787) /* ty=Tensor[(14, 5, 5), float32] */;
    %792 = %790.0;
    (%791, %792, meta[relay.Constant][55] /* ty=Tensor[(550), int8] */)
  };
  %793(%var_5216) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */
}

def @func_18907(%var_18891: Tensor[(390), float64], %var_18892: Tensor[(63), uint32], %var_18893: Tensor[(2400), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(3, 7, 3), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %794 = @func_15709() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %795 = cast(%var_18891, dtype="float64") /* ty=Tensor[(390), float64] */;
  %796 = cast(%var_18892, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %797 = cast(%var_18893, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %798 = reshape(%795, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
  %799 = reshape(%796, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %800 = reshape(%797, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
  %801 = @func_3701(%798, %799, %800) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
  %802 = %794.2;
  %803 = %801.0;
  (%802, %803, %var_18891, %var_18892, %var_18893)
}

def @func_20184() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %808 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
    %804 = @func_15870() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %805 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %806 = %804.0;
    %807 = %805.0;
    (%806, %807)
  };
  %808() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_20602() -> Tensor[(15, 9, 9), float32] {
  %809 = fn () -> Tensor[(15, 9, 9), float32] {
    @func_18716() /* ty=Tensor[(15, 9, 9), float32] */
  };
  %809() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_13646(%var_13644: float64) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool]) {
  @func_13643(%var_13644) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool]) */
}

def @func_19373(%var_19371: Tensor[(11, 2400), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(3, 20), uint64], Tensor[(896), float64], Tensor[(700), float32], Tensor[(11, 2400), bool], Tensor[(15, 9, 9), float32]) {
  @func_19370(%var_19371) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(3, 20), uint64], Tensor[(896), float64], Tensor[(700), float32], Tensor[(11, 2400), bool], Tensor[(15, 9, 9), float32]) */
}

def @func_18963() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  %814 = fn () -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
    %810 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %811 = @func_17047() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32]) */;
    %812 = %810.0;
    %813 = %811.0;
    (%812, %813)
  };
  %814() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */
}

def @func_20217() -> (Tensor[(15, 9, 9), float64], Tensor[(14, 16, 4), bool], Tensor[(896), uint32], Tensor[(15, 9, 9), float64]) {
  @func_20215() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(14, 16, 4), bool], Tensor[(896), uint32], Tensor[(15, 9, 9), float64]) */
}

def @func_16448() -> (Tensor[(15, 9, 9), float32],) {
  @func_16446() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_20215() -> (Tensor[(15, 9, 9), float64], Tensor[(14, 16, 4), bool], Tensor[(896), uint32], Tensor[(15, 9, 9), float64]) {
  %815 = @func_18813() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %816 = cast(meta[relay.Constant][56] /* ty=Tensor[(896), uint32] */, dtype="uint32") /* ty=Tensor[(896), uint32] */;
  %817 = reshape(%816, newshape=[896]) /* ty=Tensor[(896), uint32] */;
  %818 = @func_16050(%817) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(15, 9, 9), float32], Tensor[(14, 16, 4), bool], Tensor[(896), uint32]) */;
  %819 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %820 = %815.0;
  %821 = %818.4;
  %822 = %819.0;
  (%820, %821, meta[relay.Constant][56] /* ty=Tensor[(896), uint32] */, %822)
}

def @func_12235() -> (Tensor[(15, 9, 9), float64],) {
  %825 = fn () -> (Tensor[(15, 9, 9), float64],) {
    %823 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %824 = %823.0;
    (%824,)
  };
  %825() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_16274(%var_16273: Tensor[(15, 13, 15), float64]) -> (Tensor[(15, 13, 15), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 13, 15), float64]) {
  %832 = fn (%var_16240: Tensor[(15, 13, 15), float64]) -> (Tensor[(15, 13, 15), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 13, 15), float64]) {
    %826 = cast(%var_16240, dtype="float64") /* ty=Tensor[(15, 13, 15), float64] */;
    %827 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %828 = cast(%var_16240, dtype="float64") /* ty=Tensor[(15, 13, 15), float64] */;
    %829 = sin(%826) /* ty=Tensor[(15, 13, 15), float64] */;
    %830 = %827.0;
    %831 = erf(%828) /* ty=Tensor[(15, 13, 15), float64] */;
    (%829, %830, %831)
  };
  %832(%var_16273) /* ty=(Tensor[(15, 13, 15), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 13, 15), float64]) */
}

def @func_3151(%var_3130: Tensor[(5, 10, 14), float32], %var_3137: int8, %var_3146: Tensor[(2400), float32]) -> (Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) {
  %833 = cast(%var_3130, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %834 = exp(%833) /* ty=Tensor[(5, 10, 14), float32] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %836 = shape_of(%var_3130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%var_3130, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %839 = cast(%var_3137, dtype="int8") /* ty=int8 */;
  %840 = reshape(%839, newshape=[]) /* ty=int8 */;
  %841 = cast(%var_3146, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %842 = cast(%var_3146, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %843 = reshape(%841, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %844 = reshape(%842, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %845 = @func_2616(%843, %844) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %846 = floor_divide(%837, %838) /* ty=Tensor[(5, 10, 14), float32] */;
  %847 = @func_592(%840) /* ty=Tensor[(1, 7, 1), bool] */;
  %848 = %845.0;
  (%846, %847, %var_3137, %848, %var_3146)
}

def @func_18522() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %849 = @func_13178() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(550), int8]) */;
  %850 = @func_13739() /* ty=Tensor[(15, 9, 9), float64] */;
  %851 = %849.0;
  (%850, %851)
}

def @func_20571() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %852 = @func_18522() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %853 = @func_19228() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %854 = %852.0;
  %855 = %853.0;
  (%854, %855)
}

def @func_13536() -> Tensor[(15, 9, 9), float32] {
  @func_13534() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_15276() -> Tensor[(15, 9, 9), float32] {
  @func_15274() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_15486() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32]) {
  %856 = @func_11409() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %857 = @func_12800() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %858 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %859 = %856.4;
  %860 = %857.0;
  %861 = @func_12665() /* ty=Tensor[(15, 9, 9), float64] */;
  %862 = %858.0;
  (%859, %860, %861, %862)
}

def @func_21093(%var_21091: Tensor[(78), float64]) -> (Tensor[(10, 14, 4), float32], Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(2925), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  @func_21090(%var_21091) /* ty=(Tensor[(10, 14, 4), float32], Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(2925), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */
}

def @func_17708() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  %863 = @func_12665() /* ty=Tensor[(15, 9, 9), float64] */;
  %864 = @func_17164() /* ty=Tensor[(10, 14, 4), float64] */;
  (%863, %864)
}

def @func_17920(%var_17918: Tensor[(63), uint32]) -> (Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(1274), int16], Tensor[(390), float64], Tensor[(63), uint32]) {
  %865 = cast(meta[relay.Constant][57] /* ty=Tensor[(1274), int16] */, dtype="int16") /* ty=Tensor[(1274), int16] */;
  %866 = cast(meta[relay.Constant][57] /* ty=Tensor[(1274), int16] */, dtype="int16") /* ty=Tensor[(1274), int16] */;
  %867 = cast(meta[relay.Constant][58] /* ty=Tensor[(390), float64] */, dtype="float64") /* ty=Tensor[(390), float64] */;
  %868 = cast(%var_17918, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %869 = reshape(%865, newshape=[14, 7, 13]) /* ty=Tensor[(14, 7, 13), int16] */;
  %870 = reshape(%866, newshape=[14, 7, 13]) /* ty=Tensor[(14, 7, 13), int16] */;
  %871 = reshape(%867, newshape=[195, 2]) /* ty=Tensor[(195, 2), float64] */;
  %872 = reshape(%868, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %873 = @func_11127(%869, %870, %871, %872) /* ty=(Tensor[(14, 7, 13), bool], Tensor[(10, 15, 16), bool], Tensor[(195, 2), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
  %874 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  %875 = %873.1;
  (%874, %875, meta[relay.Constant][57] /* ty=Tensor[(1274), int16] */, meta[relay.Constant][58] /* ty=Tensor[(390), float64] */, %var_17918)
}

def @func_20049(%var_20047: Tensor[(495), bool], %var_20048: Tensor[(25, 10), float64]) -> (Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool], Tensor[(10, 14, 4), float64], Tensor[(495), bool], Tensor[(15, 9, 9), float32], Tensor[(1024), bool], Tensor[(15, 9, 9), float64], Tensor[(250), float64], Tensor[(25, 10), float64]) {
  %903 = fn (%var_19986: Tensor[(495), bool], %var_20042: Tensor[(25, 10), float64]) -> (Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool], Tensor[(10, 14, 4), float64], Tensor[(495), bool], Tensor[(15, 9, 9), float32], Tensor[(1024), bool], Tensor[(15, 9, 9), float64], Tensor[(250), float64], Tensor[(25, 10), float64]) {
    %876 = @func_14486() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %877 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
    %878 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
    %879 = cast(meta[relay.Constant][59] /* ty=Tensor[(1024), uint16] */, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %880 = reshape(%879, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
    %881 = @func_17968(%880) /* ty=(Tensor[(65, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) */;
    %882 = cast(3.90862f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %883 = cast(%var_19986, dtype="bool") /* ty=Tensor[(495), bool] */;
    %884 = reshape(%882, newshape=[]) /* ty=float64 */;
    %885 = reshape(%883, newshape=[495]) /* ty=Tensor[(495), bool] */;
    %886 = @func_13059(%884, %885) /* ty=(Tensor[(15, 9, 9), float32], float64, float64, Tensor[(495), bool]) */;
    %887 = %886.1;
    %888 = cast(meta[relay.Constant][59] /* ty=Tensor[(1024), uint16] */, dtype="bool") /* ty=Tensor[(1024), bool] */;
    %889 = cast(%887, dtype="bool") /* ty=bool */;
    %890 = %876.0;
    %891 = cast(%890, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
    %892 = reshape(%891, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
    %893 = cast(%var_20042, dtype="float64") /* ty=Tensor[(25, 10), float64] */;
    %894 = reshape(%893, newshape=[250]) /* ty=Tensor[(250), float64] */;
    %895 = @func_15613(%894) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(250), float64], Tensor[(550), int8], Tensor[(15, 9, 9), float64]) */;
    %896 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
    %897 = %877.0;
    %898 = %878.3;
    %899 = %881.1;
    %900 = greater_equal(%888, %889) /* ty=Tensor[(1024), bool] */;
    %901 = @func_12475(%892) /* ty=Tensor[(15, 9, 9), float64] */;
    %902 = %895.2;
    (%896, %890, 3.90862f64 /* ty=float64 */, %var_19986, %897, %898, %899, %900, %901, %902, %var_20042)
  };
  %903(%var_20047, %var_20048) /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool], Tensor[(10, 14, 4), float64], Tensor[(495), bool], Tensor[(15, 9, 9), float32], Tensor[(1024), bool], Tensor[(15, 9, 9), float64], Tensor[(250), float64], Tensor[(25, 10), float64]) */
}

def @func_16305() -> Tensor[(10, 14, 4), float64] {
  @func_16303() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_17480() -> Tensor[(15, 9, 9), float32] {
  @func_12225() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_18664() -> (Tensor[(15, 9, 9), float64],) {
  %904 = @func_17138() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %905 = %904.0;
  (%905,)
}

def @func_18164(%var_18146: Tensor[(15, 6, 4), float32]) -> (Tensor[(15, 6, 4), float32], Tensor[(10, 14, 4), float64]) {
  %906 = cast(%var_18146, dtype="float32") /* ty=Tensor[(15, 6, 4), float32] */;
  %907 = sqrt(%906) /* ty=Tensor[(15, 6, 4), float32] */;
  %908 = @func_16303() /* ty=Tensor[(10, 14, 4), float64] */;
  (%907, %908)
}

def @func_10306() -> Tensor[(15, 9, 9), float32] {
  %909 = fn () -> Tensor[(15, 9, 9), float32] {
    @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
  };
  %909() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_6067(%var_6000: Tensor[(16, 4, 16), uint16], %var_6001: Tensor[(16, 4, 16), uint16], %var_6010: Tensor[(70, 9), float32], %var_6012: Tensor[(16, 4, 16), bool]) -> (Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) {
  %910 = cast(%var_6001, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %911 = shape_of(%var_6000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%var_6000, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %914 = greater(%912, %913) /* ty=Tensor[(16, 4, 16), bool] */;
  %915 = cast(%var_6012, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%914, dtype="bool") /* ty=Tensor[(16, 4, 16), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %919 = cast(%var_6010, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %920 = reshape(%919, newshape=[7, 10, 9]) /* ty=Tensor[(7, 10, 9), float32] */;
  %921 = @func_4293(%920) /* ty=(Tensor[(7, 10, 9), float32],) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(7, 10, 9), float64] */;
  %924 = shape_of(%var_6010, dtype="int32") /* ty=Tensor[(2), int32] */;
  %925 = cast(%var_6010, dtype="float64") /* ty=Tensor[(70, 9), float64] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %927 = cast(%var_6001, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
  %928 = atan(%927) /* ty=Tensor[(16, 4, 16), float64] */;
  %929 = cast(%var_6012, dtype="int8") /* ty=Tensor[(16, 4, 16), int8] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%928, dtype="int8") /* ty=Tensor[(16, 4, 16), int8] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %933 = less_equal(%917, %918) /* ty=Tensor[(16, 4, 16), bool] */;
  %934 = floor_mod(%925, %926) /* ty=Tensor[(70, 9), float64] */;
  %935 = bitwise_and(%931, %932) /* ty=Tensor[(16, 4, 16), int8] */;
  (%933, %934, %935)
}

def @func_20894(%var_20892: Tensor[(495), bool], %var_20893: Tensor[(1024, 1), uint16]) -> (Tensor[(390, 1), float64], Tensor[(495), bool], Tensor[(495), bool], Tensor[(250), float64], Tensor[(16, 4, 16), bool], Tensor[(1024, 1), uint16], Tensor[(630), float32]) {
  %954 = fn (%var_20877: Tensor[(495), bool], %var_20883: Tensor[(1024, 1), uint16]) -> (Tensor[(390, 1), float64], Tensor[(495), bool], Tensor[(495), bool], Tensor[(250), float64], Tensor[(16, 4, 16), bool], Tensor[(1024, 1), uint16], Tensor[(630), float32]) {
    %936 = @func_13771() /* ty=(Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) */;
    %937 = cast(%var_20877, dtype="bool") /* ty=Tensor[(495), bool] */;
    %938 = cast(meta[relay.Constant][60] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
    %939 = reshape(%937, newshape=[495]) /* ty=Tensor[(495), bool] */;
    %940 = reshape(%938, newshape=[25, 10]) /* ty=Tensor[(25, 10), float64] */;
    %941 = @func_20046(%939, %940) /* ty=(Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool], Tensor[(10, 14, 4), float64], Tensor[(495), bool], Tensor[(15, 9, 9), float32], Tensor[(1024), bool], Tensor[(15, 9, 9), float64], Tensor[(250), float64], Tensor[(25, 10), float64]) */;
    %942 = cast(%var_20883, dtype="uint16") /* ty=Tensor[(1024, 1), uint16] */;
    %943 = cast(%var_20883, dtype="uint16") /* ty=Tensor[(1024, 1), uint16] */;
    %944 = cast(meta[relay.Constant][61] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %945 = cast(%var_20883, dtype="bool") /* ty=Tensor[(1024, 1), bool] */;
    %946 = reshape(%942, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
    %947 = reshape(%943, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
    %948 = reshape(%944, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
    %949 = reshape(%945, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
    %950 = @func_6067(%946, %947, %948, %949) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
    %951 = %936.2;
    %952 = %941.3;
    %953 = %950.0;
    (%951, %952, %var_20877, meta[relay.Constant][60] /* ty=Tensor[(250), float64] */, %953, %var_20883, meta[relay.Constant][61] /* ty=Tensor[(630), float32] */)
  };
  %954(%var_20892, %var_20893) /* ty=(Tensor[(390, 1), float64], Tensor[(495), bool], Tensor[(495), bool], Tensor[(250), float64], Tensor[(16, 4, 16), bool], Tensor[(1024, 1), uint16], Tensor[(630), float32]) */
}

def @func_17902() -> Tensor[(10, 14, 4), float64] {
  %955 = @func_17001() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %955.0
}

def @func_12279() -> (Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) {
  @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */
}

def @func_11089() -> Tensor[(15, 9, 9), float64] {
  %957 = fn () -> Tensor[(15, 9, 9), float64] {
    %956 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %956.0
  };
  %957() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_11780() -> (Tensor[(15, 9, 9), float32],) {
  %958 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
  (%958,)
}

def @func_12890() -> (Tensor[(15, 9, 9), float64],) {
  %959 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %960 = %959.0;
  (%960,)
}

def @func_19857(%var_19856: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], int8) {
  %967 = fn (%var_19853: int8) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], int8) {
    %961 = @func_18522() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
    %962 = cast(%var_19853, dtype="int8") /* ty=int8 */;
    %963 = reshape(%962, newshape=[]) /* ty=int8 */;
    %964 = @func_14173(%963) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1, 7, 1), bool], int8) */;
    %965 = %961.1;
    %966 = %964.0;
    (%965, %966, %var_19853)
  };
  %967(%var_19856) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], int8) */
}

def @func_15907(%var_15906: Tensor[(65, 9), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(65, 9), float32]) {
  %976 = fn (%var_15899: Tensor[(65, 9), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(65, 9), float32]) {
    %968 = @func_13692() /* ty=(Tensor[(65, 9), float32],) */;
    %969 = %968.0;
    %970 = cast(%var_15899, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
    %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(2), int32] */;
    %972 = cast(%969, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %974 = @func_12999() /* ty=Tensor[(15, 9, 9), float32] */;
    %975 = minimum(%972, %973) /* ty=Tensor[(65, 9), float32] */;
    (%974, %975)
  };
  %976(%var_15906) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(65, 9), float32]) */
}

def @func_13692() -> (Tensor[(65, 9), float32],) {
  %977 = @func_13445() /* ty=(Tensor[(65, 9), float32],) */;
  %978 = %977.0;
  (%978,)
}

def @func_15870() -> (Tensor[(15, 9, 9), float32],) {
  %979 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  (%979,)
}

def @func_20734() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(65, 9), float64], Tensor[(585), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 5, 11), bool], Tensor[(5, 110), int8]) {
  @func_20732() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(65, 9), float64], Tensor[(585), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 5, 11), bool], Tensor[(5, 110), int8]) */
}

def @func_11605(%var_11602: Tensor[(390), float64], %var_11603: Tensor[(63), uint32], %var_11604: Tensor[(300, 8), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(63), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(300, 8), bool]) {
  %997 = fn (%var_11584: Tensor[(390), float64], %var_11585: Tensor[(63), uint32], %var_11586: Tensor[(300, 8), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(63), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(300, 8), bool]) {
    %980 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %981 = cast(%var_11584, dtype="float64") /* ty=Tensor[(390), float64] */;
    %982 = cast(%var_11585, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %983 = cast(%var_11586, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
    %984 = reshape(%981, newshape=[13, 6, 5]) /* ty=Tensor[(13, 6, 5), float64] */;
    %985 = reshape(%982, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %986 = reshape(%983, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %987 = @func_3701(%984, %985, %986) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */;
    %988 = cast(%var_11586, dtype="float32") /* ty=Tensor[(300, 8), float32] */;
    %989 = asin(%988) /* ty=Tensor[(300, 8), float32] */;
    %990 = cast(%989, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
    %991 = shape_of(%var_11586, dtype="int32") /* ty=Tensor[(2), int32] */;
    %992 = cast(%var_11586, dtype="bool") /* ty=Tensor[(300, 8), bool] */;
    %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %994 = %980.0;
    %995 = %987.2;
    %996 = logical_or(%992, %993) /* ty=Tensor[(300, 8), bool] */;
    (%994, %995, %var_11584, %var_11585, %996)
  };
  %997(%var_11602, %var_11603, %var_11604) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(63), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(300, 8), bool]) */
}

def @func_14810() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %998 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %999 = @func_13380() /* ty=Tensor[(15, 9, 9), float32] */;
  %1000 = %998.0;
  (%999, %1000)
}

def @func_15709() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %1001 = @func_12870() /* ty=Tensor[(15, 9, 9), float32] */;
  %1002 = @func_14320() /* ty=Tensor[(15, 9, 9), float32] */;
  %1003 = @func_10945() /* ty=Tensor[(15, 9, 9), float64] */;
  (%1001, %1002, %1003)
}

def @func_17232() -> (Tensor[(15, 9, 9), float32],) {
  %1004 = @func_16515() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1005 = %1004.0;
  (%1005,)
}

def @func_17771() -> (Tensor[(15, 9, 9), float32], Tensor[(65, 9), int8], Tensor[(65, 9), bool]) {
  %1006 = @func_13445() /* ty=(Tensor[(65, 9), float32],) */;
  %1007 = %1006.0;
  %1008 = cast(meta[relay.Constant][62] /* ty=Tensor[(65, 9), float32] */, dtype="int8") /* ty=Tensor[(65, 9), int8] */;
  %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1010 = cast(%1007, dtype="int8") /* ty=Tensor[(65, 9), int8] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1012 = cast(meta[relay.Constant][62] /* ty=Tensor[(65, 9), float32] */, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %1013 = shape_of(%1007, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1014 = cast(%1007, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1016 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %1017 = add(%1010, %1011) /* ty=Tensor[(65, 9), int8] */;
  %1018 = less_equal(%1014, %1015) /* ty=Tensor[(65, 9), bool] */;
  (%1016, %1017, %1018)
}

def @func_19597() -> (Tensor[(10, 14, 4), float64],) {
  %1020 = fn () -> (Tensor[(10, 14, 4), float64],) {
    %1019 = @func_16303() /* ty=Tensor[(10, 14, 4), float64] */;
    (%1019,)
  };
  %1020() /* ty=(Tensor[(10, 14, 4), float64],) */
}

def @func_19896(%var_19893: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) {
  %1021 = @func_17708() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */;
  %1022 = cast(%var_19893, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1023 = reshape(%1022, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %1024 = @func_13260(%1023) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) */;
  %1025 = %1021.0;
  %1026 = %1024.0;
  (%1025, %1026, %var_19893)
}

def @func_10243() -> Tensor[(15, 9, 9), float32] {
  @func_10241() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_11782() -> (Tensor[(15, 9, 9), float32],) {
  @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_19138() -> Tensor[(15, 9, 9), float32] {
  @func_19136() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_16903() -> (Tensor[(15, 9, 9), float64],) {
  @func_16901() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_16669(%var_16667: uint32) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), int8], uint32, uint32) {
  @func_16666(%var_16667) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), int8], uint32, uint32) */
}

def @func_16752(%var_16748: Tensor[(550, 1), int8], %var_16749: Tensor[(700), float32], %var_16750: int8, %var_16751: Tensor[(20, 120), float32]) -> (Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(550, 1), float64], Tensor[(15, 9, 9), float64], Tensor[(10, 15, 16), bool], Tensor[(700), float32], int8, Tensor[(20, 120), float32]) {
  %1047 = fn (%var_16727: Tensor[(550, 1), int8], %var_16741: Tensor[(700), float32], %var_16742: int8, %var_16743: Tensor[(20, 120), float32]) -> (Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(550, 1), float64], Tensor[(15, 9, 9), float64], Tensor[(10, 15, 16), bool], Tensor[(700), float32], int8, Tensor[(20, 120), float32]) {
    %1027 = @func_12334() /* ty=(Tensor[(495), bool],) */;
    %1028 = cast(%var_16727, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
    %1029 = cast(%var_16727, dtype="int8") /* ty=Tensor[(550, 1), int8] */;
    %1030 = reshape(%1028, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
    %1031 = reshape(%1029, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
    %1032 = @func_12198(%1030, %1031) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */;
    %1033 = cast(%var_16727, dtype="float64") /* ty=Tensor[(550, 1), float64] */;
    %1034 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1035 = cast(%var_16741, dtype="float32") /* ty=Tensor[(700), float32] */;
    %1036 = cast(%var_16742, dtype="int8") /* ty=int8 */;
    %1037 = cast(%var_16743, dtype="float32") /* ty=Tensor[(20, 120), float32] */;
    %1038 = reshape(%1035, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %1039 = reshape(%1036, newshape=[]) /* ty=int8 */;
    %1040 = reshape(%1037, newshape=[2400]) /* ty=Tensor[(2400), float32] */;
    %1041 = @func_3151(%1038, %1039, %1040) /* ty=(Tensor[(5, 10, 14), float32], Tensor[(1, 7, 1), bool], int8, Tensor[(10, 15, 16), bool], Tensor[(2400), float32]) */;
    %1042 = %1027.0;
    %1043 = %1032.0;
    %1044 = acosh(%1033) /* ty=Tensor[(550, 1), float64] */;
    %1045 = %1034.0;
    %1046 = %1041.3;
    (%1042, %1043, %1044, %1045, %1046, %var_16741, %var_16742, %var_16743)
  };
  %1047(%var_16748, %var_16749, %var_16750, %var_16751) /* ty=(Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(550, 1), float64], Tensor[(15, 9, 9), float64], Tensor[(10, 15, 16), bool], Tensor[(700), float32], int8, Tensor[(20, 120), float32]) */
}

def @func_13366() -> (Tensor[(15, 9, 9), float64],) {
  %1050 = fn () -> (Tensor[(15, 9, 9), float64],) {
    %1048 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1049 = %1048.0;
    (%1049,)
  };
  %1050() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_8392(%var_8390: Tensor[(15, 1, 6), int16]) -> (Tensor[(15, 13, 6), float64], Tensor[(15, 13, 6), float64]) {
  @func_8389(%var_8390) /* ty=(Tensor[(15, 13, 6), float64], Tensor[(15, 13, 6), float64]) */
}

def @func_12779() -> Tensor[(15, 9, 9), float32] {
  @func_10099() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17710() -> (Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) {
  @func_17708() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 14, 4), float64]) */
}

def @func_13514() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  @func_13512() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */
}

def @func_10630(%var_10629: Tensor[(10, 14, 4), float64]) -> Tensor[(10, 14, 4), float64] {
  %1052 = fn (%var_10624: Tensor[(10, 14, 4), float64]) -> Tensor[(10, 14, 4), float64] {
    %1051 = cast(%var_10624, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
    sigmoid(%1051) /* ty=Tensor[(10, 14, 4), float64] */
  };
  %1052(%var_10629) /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_15097() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */
}

def @func_17105() -> Tensor[(15, 9, 9), float64] {
  %1054 = fn () -> Tensor[(15, 9, 9), float64] {
    %1053 = @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1053.0
  };
  %1054() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_20636(%var_20634: Tensor[(26400), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(896), float64], Tensor[(26400), float32], uint32, Tensor[(15, 4), uint64], Tensor[(63, 1), uint32]) {
  @func_20633(%var_20634) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(896), float64], Tensor[(26400), float32], uint32, Tensor[(15, 4), uint64], Tensor[(63, 1), uint32]) */
}

def @func_13260(%var_13253: Tensor[(1024), uint16]) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) {
  %1055 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1056 = @func_11561() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) */;
  %1057 = cast(%var_13253, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1058 = reshape(%1057, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
  %1059 = @func_12602(%1058) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32], Tensor[(15, 9, 9), float32]) */;
  %1060 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  %1061 = %1055.0;
  %1062 = %1056.1;
  %1063 = %1059.1;
  (%1060, %1061, %1062, %1063, %var_13253)
}

def @func_18666() -> (Tensor[(15, 9, 9), float64],) {
  @func_18664() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_11410() -> (Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %1083 = fn () -> (Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
    %1064 = @func_10137() /* ty=Tensor[(15, 9, 9), float32] */;
    %1065 = @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1066 = %1065.0;
    %1067 = cast(%1066, dtype="int8") /* ty=Tensor[(15, 9, 9), int8] */;
    %1068 = shape_of(%1064, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1069 = cast(%1064, dtype="int8") /* ty=Tensor[(15, 9, 9), int8] */;
    %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1071 = cast(meta[relay.Constant][63] /* ty=Tensor[(65, 9), float32] */, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
    %1072 = cast(meta[relay.Constant][63] /* ty=Tensor[(65, 9), float32] */, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
    %1073 = cast(meta[relay.Constant][63] /* ty=Tensor[(65, 9), float32] */, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
    %1074 = reshape(%1071, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
    %1075 = reshape(%1072, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
    %1076 = reshape(%1073, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
    %1077 = @func_10348(%1074, %1075, %1076) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */;
    %1078 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %1079 = logical_xor(%1069, %1070) /* ty=Tensor[(15, 9, 9), int8] */;
    %1080 = %1077.0;
    %1081 = %1078.0;
    %1082 = @func_11088() /* ty=Tensor[(15, 9, 9), float64] */;
    (%1079, %1080, meta[relay.Constant][63] /* ty=Tensor[(65, 9), float32] */, %1081, %1082)
  };
  %1083() /* ty=(Tensor[(15, 9, 9), int8], Tensor[(13, 9, 5), bool], Tensor[(65, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */
}

def @func_14608(%var_14588: Tensor[(1024), uint16], %var_14589: Tensor[(630), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32]) {
  %1084 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1085 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1086 = cast(%var_14588, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1087 = cast(%var_14588, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
  %1088 = cast(%var_14589, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1089 = cast(%var_14588, dtype="bool") /* ty=Tensor[(1024), bool] */;
  %1090 = reshape(%1086, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %1091 = reshape(%1087, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
  %1092 = reshape(%1088, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
  %1093 = reshape(%1089, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
  %1094 = @func_6067(%1090, %1091, %1092, %1093) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
  %1095 = %1084.0;
  %1096 = %1085.1;
  %1097 = %1094.1;
  (%1095, %1096, %1097, %var_14588, %var_14589)
}

def @func_14322() -> Tensor[(15, 9, 9), float32] {
  @func_14320() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_13382() -> Tensor[(15, 9, 9), float32] {
  @func_13380() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_20264() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
  %1101 = fn () -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) {
    %1098 = @func_11780() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %1099 = %1098.0;
    %1100 = @func_13918() /* ty=Tensor[(15, 9, 9), float64] */;
    (%1099, %1100)
  };
  %1101() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */
}

def @func_21210(%var_21208: Tensor[(10, 14, 4), float64], %var_21209: Tensor[(5, 250), float64]) -> (Tensor[(10, 14, 4), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(270), int8], Tensor[(585), float32], Tensor[(5, 250), float32]) {
  @func_21206(%var_21208, %var_21209) /* ty=(Tensor[(10, 14, 4), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(270), int8], Tensor[(585), float32], Tensor[(5, 250), float32]) */
}

def @func_10403() -> (Tensor[(15, 9, 9), float32],) {
  @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_18603() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  %1102 = @func_17547() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1103 = %1102.1;
  %1104 = @func_12999() /* ty=Tensor[(15, 9, 9), float32] */;
  %1105 = @func_13534() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1103, %1104, %1105)
}

def @func_12802() -> (Tensor[(15, 9, 9), float64],) {
  @func_12800() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_18027() -> Tensor[(10, 14, 4), float64] {
  %1106 = @func_15200() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %1106.0
}

def @func_11797() -> Tensor[(10, 14, 4), float64] {
  %1108 = fn () -> Tensor[(10, 14, 4), float64] {
    %1107 = @func_11561() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(560), float64]) */;
    %1107.1
  };
  %1108() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_10100() -> Tensor[(15, 9, 9), float32] {
  %1113 = fn () -> Tensor[(15, 9, 9), float32] {
    %1109 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
    %1110 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(15, 9, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1111 = cast(meta[relay.Constant][64] /* ty=Tensor[(15, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
    %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%1111, %1112) /* ty=Tensor[(15, 9, 9), float32] */
  };
  %1113() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_17970(%var_17969: Tensor[(1024), uint16]) -> (Tensor[(65, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) {
  %1122 = fn (%var_17948: Tensor[(1024), uint16]) -> (Tensor[(65, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) {
    %1114 = @func_17297() /* ty=(Tensor[(65, 9), float32],) */;
    %1115 = %1114.0;
    %1116 = cast(%1115, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
    %1117 = cast(%var_17948, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %1118 = reshape(%1117, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
    %1119 = @func_13260(%1118) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 14, 4), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16]) */;
    %1120 = erf(%1116) /* ty=Tensor[(65, 9), float64] */;
    %1121 = %1119.0;
    (%1120, %1121, %var_17948)
  };
  %1122(%var_17969) /* ty=(Tensor[(65, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(1024), uint16]) */
}

def @func_11215(%var_11191: Tensor[(15, 9, 9), float32], %var_11205: Tensor[(55, 10), int8]) -> (Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) {
  %1123 = @func_10099() /* ty=Tensor[(15, 9, 9), float32] */;
  %1124 = cast(%var_11191, dtype="bool") /* ty=Tensor[(15, 9, 9), bool] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%1123, dtype="bool") /* ty=Tensor[(15, 9, 9), bool] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1128 = cast(%var_11205, dtype="int8") /* ty=Tensor[(55, 10), int8] */;
  %1129 = reshape(%1128, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), int8] */;
  %1130 = @func_3434(%1129) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %1131 = equal(%1126, %1127) /* ty=Tensor[(15, 9, 9), bool] */;
  %1132 = %1130.0;
  (%1131, %1132, %var_11205)
}

def @func_13791() -> (Tensor[(15, 9, 9), float32],) {
  @func_13789() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @main(%var_21468: Tensor[(7, 8, 7), bool]) -> Tensor[(7, 8, 7), bool] {
  %1133 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 8, 7), bool] */, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  %1134 = shape_of(%var_21468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1135 = cast(%var_21468, dtype="bool") /* ty=Tensor[(7, 8, 7), bool] */;
  %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1135, %1136) /* ty=Tensor[(7, 8, 7), bool] */
}

def @func_14812() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  @func_14810() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_13643(%var_13636: float64) -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], float64, Tensor[(495), bool]) {
  %1137 = @func_12368() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1138 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %1139 = cast(%var_13636, dtype="float64") /* ty=float64 */;
  %1140 = cast(meta[relay.Constant][67] /* ty=Tensor[(495), bool] */, dtype="bool") /* ty=Tensor[(495), bool] */;
  %1141 = reshape(%1139, newshape=[]) /* ty=float64 */;
  %1142 = reshape(%1140, newshape=[495]) /* ty=Tensor[(495), bool] */;
  %1143 = @func_12123(%1141, %1142) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(10, 5, 11), bool], float64, Tensor[(495), bool], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1144 = %1137.0;
  %1145 = %1138.0;
  %1146 = %1143.6;
  (%1144, %1145, %1146, %var_13636, meta[relay.Constant][67] /* ty=Tensor[(495), bool] */)
}

def @func_21090(%var_21076: Tensor[(78), float64]) -> (Tensor[(10, 14, 4), float32], Tensor[(10, 14, 4), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(2925), float64], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) {
  %1147 = @func_17902() /* ty=Tensor[(10, 14, 4), float64] */;
  %1148 = cast(%1147, dtype="float32") /* ty=Tensor[(10, 14, 4), float32] */;
  %1149 = @func_17001() /* ty=(Tensor[(10, 14, 4), float64],) */;
  %1150 = @func_15095() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64]) */;
  %1151 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
  %1152 = cast(meta[relay.Constant][68] /* ty=Tensor[(2925), float64] */, dtype="float64") /* ty=Tensor[(2925), float64] */;
  %1153 = reshape(%1152, newshape=[15, 13, 15]) /* ty=Tensor[(15, 13, 15), float64] */;
  %1154 = @func_16272(%1153) /* ty=(Tensor[(15, 13, 15), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 13, 15), float64]) */;
  %1155 = cast(%var_21076, dtype="float64") /* ty=Tensor[(78), float64] */;
  %1156 = reshape(%1155, newshape=[78]) /* ty=Tensor[(78), float64] */;
  %1157 = @func_12935(%1156) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(13, 2, 3), float64], Tensor[(78), float64]) */;
  %1158 = log2(%1148) /* ty=Tensor[(10, 14, 4), float32] */;
  %1159 = %1149.0;
  %1160 = %1150.1;
  %1161 = %1151.0;
  %1162 = %1154.1;
  %1163 = %1157.1;
  (%1158, %1159, %1160, %1161, %1162, meta[relay.Constant][68] /* ty=Tensor[(2925), float64] */, %1163, %var_21076)
}

def @func_19228() -> (Tensor[(15, 9, 9), float64],) {
  %1164 = @func_18664() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1165 = %1164.0;
  (%1165,)
}

def @func_12428() -> Tensor[(15, 9, 9), float64] {
  %1166 = @func_12234() /* ty=(Tensor[(15, 9, 9), float64],) */;
  %1166.0
}

def @func_13534() -> Tensor[(15, 9, 9), float32] {
  %1167 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1167.0
}

def @func_4296(%var_4294: Tensor[(7, 10, 9), float32]) -> (Tensor[(7, 10, 9), float32],) {
  @func_4293(%var_4294) /* ty=(Tensor[(7, 10, 9), float32],) */
}

def @func_15201() -> (Tensor[(10, 14, 4), float64],) {
  %1169 = fn () -> (Tensor[(10, 14, 4), float64],) {
    %1168 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
    (%1168,)
  };
  %1169() /* ty=(Tensor[(10, 14, 4), float64],) */
}

def @func_16865(%var_16864: Tensor[(10, 240), bool]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(300, 8), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 240), float32], Tensor[(63), uint32], Tensor[(1170), uint64]) {
  %1186 = fn (%var_16833: Tensor[(10, 240), bool]) -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(300, 8), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 240), float32], Tensor[(63), uint32], Tensor[(1170), uint64]) {
    %1170 = @func_12234() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1171 = cast(%var_16833, dtype="bool") /* ty=Tensor[(10, 240), bool] */;
    %1172 = reshape(%1171, newshape=[300, 8]) /* ty=Tensor[(300, 8), bool] */;
    %1173 = @func_13273() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %1174 = cast(%var_16833, dtype="float32") /* ty=Tensor[(10, 240), float32] */;
    %1175 = cast(meta[relay.Constant][69] /* ty=Tensor[(1170), uint64] */, dtype="uint64") /* ty=Tensor[(1170), uint64] */;
    %1176 = cast(meta[relay.Constant][69] /* ty=Tensor[(1170), uint64] */, dtype="uint64") /* ty=Tensor[(1170), uint64] */;
    %1177 = reshape(%1175, newshape=[9, 13, 10]) /* ty=Tensor[(9, 13, 10), uint64] */;
    %1178 = reshape(%1176, newshape=[9, 13, 10]) /* ty=Tensor[(9, 13, 10), uint64] */;
    %1179 = @func_14114(%1177, %1178) /* ty=(Tensor[(9, 13, 10), uint64], Tensor[(63), uint32]) */;
    %1180 = %1170.0;
    %1181 = @func_12999() /* ty=Tensor[(15, 9, 9), float32] */;
    %1182 = @func_16568(%1172) /* ty=Tensor[(300, 8), bool] */;
    %1183 = %1173.0;
    %1184 = sin(%1174) /* ty=Tensor[(10, 240), float32] */;
    %1185 = %1179.1;
    (%1180, %1181, %1182, %1183, %1184, %1185, meta[relay.Constant][69] /* ty=Tensor[(1170), uint64] */)
  };
  %1186(%var_16864) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(300, 8), bool], Tensor[(15, 9, 9), float32], Tensor[(10, 240), float32], Tensor[(63), uint32], Tensor[(1170), uint64]) */
}

def @func_10933() -> (Tensor[(15, 9, 9), float32],) {
  %1187 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1187,)
}

def @func_19136() -> Tensor[(15, 9, 9), float32] {
  %1188 = @func_17857() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1188.1
}

def @func_17234() -> (Tensor[(15, 9, 9), float32],) {
  @func_17232() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_10352(%var_10349: Tensor[(13, 9, 5), float32], %var_10350: Tensor[(13, 9, 5), float32], %var_10351: Tensor[(13, 9, 5), float32]) -> (Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) {
  %1205 = fn (%var_10307: Tensor[(13, 9, 5), float32], %var_10308: Tensor[(13, 9, 5), float32], %var_10323: Tensor[(13, 9, 5), float32]) -> (Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) {
    %1189 = cast(%var_10308, dtype="bool") /* ty=Tensor[(13, 9, 5), bool] */;
    %1190 = shape_of(%var_10307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1191 = cast(%var_10307, dtype="bool") /* ty=Tensor[(13, 9, 5), bool] */;
    %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1193 = cast(%var_10323, dtype="float64") /* ty=Tensor[(13, 9, 5), float64] */;
    %1194 = shape_of(%var_10307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1195 = cast(%var_10307, dtype="float64") /* ty=Tensor[(13, 9, 5), float64] */;
    %1196 = dyn.reshape(%1193, %1194, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1197 = divide(%1195, %1196) /* ty=Tensor[(13, 9, 5), float64] */;
    %1198 = cast(%var_10308, dtype="uint8") /* ty=Tensor[(13, 9, 5), uint8] */;
    %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1200 = cast(%1197, dtype="uint8") /* ty=Tensor[(13, 9, 5), uint8] */;
    %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1202 = greater_equal(%1191, %1192) /* ty=Tensor[(13, 9, 5), bool] */;
    %1203 = @func_10241() /* ty=Tensor[(15, 9, 9), float32] */;
    %1204 = minimum(%1200, %1201) /* ty=Tensor[(13, 9, 5), uint8] */;
    (%1202, %1203, %1204)
  };
  %1205(%var_10349, %var_10350, %var_10351) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(15, 9, 9), float32], Tensor[(13, 9, 5), uint8]) */
}

def @func_17314() -> (Tensor[(495), bool], Tensor[(15, 9, 9), float64]) {
  %1206 = @func_12334() /* ty=(Tensor[(495), bool],) */;
  %1207 = %1206.0;
  %1208 = @func_11738() /* ty=Tensor[(15, 9, 9), float64] */;
  (%1207, %1208)
}

def @func_17904() -> Tensor[(10, 14, 4), float64] {
  @func_17902() /* ty=Tensor[(10, 14, 4), float64] */
}

def @func_15401() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), uint32], Tensor[(55, 10), int8], Tensor[(550), int8]) {
  @func_15399() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), uint32], Tensor[(55, 10), int8], Tensor[(550), int8]) */
}

def @func_20775() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) {
  @func_20773() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */
}

def @func_13096() -> Tensor[(15, 9, 9), float64] {
  %1210 = fn () -> Tensor[(15, 9, 9), float64] {
    %1209 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
    %1209.1
  };
  %1210() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_13062(%var_13060: float64, %var_13061: Tensor[(495), bool]) -> (Tensor[(15, 9, 9), float32], float64, float64, Tensor[(495), bool]) {
  %1218 = fn (%var_13039: float64, %var_13040: Tensor[(495), bool]) -> (Tensor[(15, 9, 9), float32], float64, float64, Tensor[(495), bool]) {
    %1211 = cast(%var_13039, dtype="float64") /* ty=float64 */;
    %1212 = cast(%var_13040, dtype="bool") /* ty=Tensor[(495), bool] */;
    %1213 = reshape(%1211, newshape=[]) /* ty=float64 */;
    %1214 = reshape(%1212, newshape=[495]) /* ty=Tensor[(495), bool] */;
    %1215 = @func_11542(%1213, %1214) /* ty=(Tensor[(10, 5, 11), bool], Tensor[(550), int8], Tensor[(15, 9, 9), float64], Tensor[(11, 5, 9), uint64], float64, Tensor[(99), float64], Tensor[(495), bool], Tensor[(11, 5, 9), uint64]) */;
    %1216 = @func_10556() /* ty=Tensor[(15, 9, 9), float32] */;
    %1217 = %1215.4;
    (%1216, %1217, %var_13039, %var_13040)
  };
  %1218(%var_13060, %var_13061) /* ty=(Tensor[(15, 9, 9), float32], float64, float64, Tensor[(495), bool]) */
}

def @func_17316() -> (Tensor[(495), bool], Tensor[(15, 9, 9), float64]) {
  @func_17314() /* ty=(Tensor[(495), bool], Tensor[(15, 9, 9), float64]) */
}

def @func_15274() -> Tensor[(15, 9, 9), float32] {
  @func_12999() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_20573() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  @func_20571() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */
}

def @func_12781() -> Tensor[(15, 9, 9), float32] {
  @func_12779() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_10428() -> (Tensor[(15, 9, 9), float64],) {
  @func_10426() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_17002() -> (Tensor[(10, 14, 4), float64],) {
  %1220 = fn () -> (Tensor[(10, 14, 4), float64],) {
    %1219 = @func_16614() /* ty=Tensor[(10, 14, 4), float64] */;
    (%1219,)
  };
  %1220() /* ty=(Tensor[(10, 14, 4), float64],) */
}

def @func_6634(%var_6590: Tensor[(72), float64], %var_6595: Tensor[(105), float32]) -> (Tensor[(14, 15, 10), bool], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(14, 15, 10), bool], Tensor[(10, 5, 11), bool]) {
  %1221 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(14, 15, 10), int32] */;
  %1222 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(14, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1223 = cast(meta[relay.Constant][70] /* ty=Tensor[(14, 15, 10), int32] */, dtype="int32") /* ty=Tensor[(14, 15, 10), int32] */;
  %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1225 = bitwise_and(%1223, %1224) /* ty=Tensor[(14, 15, 10), int32] */;
  %1226 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 15, 10), int32] */, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %1227 = shape_of(%1225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1228 = cast(%1225, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %1229 = dyn.reshape(%1226, %1227, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1230 = cast(meta[relay.Constant][72] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %1231 = cast(meta[relay.Constant][72] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %1232 = reshape(%1230, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %1233 = reshape(%1231, newshape=[10, 15, 16]) /* ty=Tensor[(10, 15, 16), float32] */;
  %1234 = @func_2616(%1232, %1233) /* ty=(Tensor[(10, 15, 16), bool],) */;
  %1235 = cast(%var_6590, dtype="float64") /* ty=Tensor[(72), float64] */;
  %1236 = reshape(%1235, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float64] */;
  %1237 = cast(%var_6595, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1238 = reshape(%1237, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), float32] */;
  %1239 = @func_5753(%1238) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) */;
  %1240 = cast(meta[relay.Constant][70] /* ty=Tensor[(14, 15, 10), int32] */, dtype="float32") /* ty=Tensor[(14, 15, 10), float32] */;
  %1241 = asinh(%1240) /* ty=Tensor[(14, 15, 10), float32] */;
  %1242 = cast(%1241, dtype="float32") /* ty=Tensor[(14, 15, 10), float32] */;
  %1243 = cosh(%1242) /* ty=Tensor[(14, 15, 10), float32] */;
  %1244 = cast(%1243, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %1245 = shape_of(%1241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1246 = cast(%1241, dtype="bool") /* ty=Tensor[(14, 15, 10), bool] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1248 = %1239.1;
  %1249 = cast(%1248, dtype="float64") /* ty=Tensor[(14, 5, 5), float64] */;
  %1250 = reshape(%1249, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
  %1251 = @func_5215(%1250) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */;
  %1252 = logical_and(%1228, %1229) /* ty=Tensor[(14, 15, 10), bool] */;
  %1253 = %1234.0;
  %1254 = @func_286(%1236) /* ty=Tensor[(6, 3, 4), float64] */;
  %1255 = greater(%1246, %1247) /* ty=Tensor[(14, 15, 10), bool] */;
  %1256 = %1251.1;
  (%1252, %1253, meta[relay.Constant][72] /* ty=Tensor[(2400), float32] */, %1254, %var_6590, %1248, %var_6595, %1255, %1256)
}

def @func_5891(%var_5885: Tensor[(14, 16, 4), uint32]) -> (Tensor[(14, 16, 4), bool],) {
  %1257 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 16, 4), uint32] */, dtype="bool") /* ty=Tensor[(14, 16, 4), bool] */;
  %1258 = shape_of(%var_5885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1259 = cast(%var_5885, dtype="bool") /* ty=Tensor[(14, 16, 4), bool] */;
  %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1261 = not_equal(%1259, %1260) /* ty=Tensor[(14, 16, 4), bool] */;
  (%1261,)
}

def @func_18881() -> Tensor[(15, 9, 9), float64] {
  @func_18879() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_5756(%var_5754: Tensor[(15, 1, 7), float32]) -> (Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) {
  @func_5753(%var_5754) /* ty=(Tensor[(15, 1, 7), float32], Tensor[(14, 5, 5), float32], Tensor[(35, 10), float64]) */
}

def @func_10935() -> (Tensor[(15, 9, 9), float32],) {
  @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_18483(%var_18481: Tensor[(1024), uint16], %var_18482: Tensor[(210, 3), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(16, 4, 16), int8], Tensor[(1024), uint16], Tensor[(210, 3), float32]) {
  %1274 = fn (%var_18469: Tensor[(1024), uint16], %var_18470: Tensor[(210, 3), float32]) -> (Tensor[(15, 9, 9), float64], Tensor[(16, 4, 16), int8], Tensor[(1024), uint16], Tensor[(210, 3), float32]) {
    %1262 = @func_12234() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1263 = cast(%var_18469, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %1264 = cast(%var_18469, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %1265 = cast(%var_18470, dtype="float32") /* ty=Tensor[(210, 3), float32] */;
    %1266 = cast(%var_18469, dtype="bool") /* ty=Tensor[(1024), bool] */;
    %1267 = reshape(%1263, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
    %1268 = reshape(%1264, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), uint16] */;
    %1269 = reshape(%1265, newshape=[70, 9]) /* ty=Tensor[(70, 9), float32] */;
    %1270 = reshape(%1266, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), bool] */;
    %1271 = @func_6067(%1267, %1268, %1269, %1270) /* ty=(Tensor[(16, 4, 16), bool], Tensor[(70, 9), float64], Tensor[(16, 4, 16), int8]) */;
    %1272 = %1262.0;
    %1273 = %1271.2;
    (%1272, %1273, %var_18469, %var_18470)
  };
  %1274(%var_18481, %var_18482) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(16, 4, 16), int8], Tensor[(1024), uint16], Tensor[(210, 3), float32]) */
}

def @func_21341() -> (Tensor[(15, 9, 9), float32],) {
  %1276 = fn () -> (Tensor[(15, 9, 9), float32],) {
    %1275 = @func_18087() /* ty=Tensor[(15, 9, 9), float32] */;
    (%1275,)
  };
  %1276() /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_21380() -> Tensor[(15, 9, 9), float64] {
  %1278 = fn () -> Tensor[(15, 9, 9), float64] {
    %1277 = @func_11872() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
    %1277.1
  };
  %1278() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_6949(%var_6946: float64, %var_6947: Tensor[(11, 1, 9), float64], %var_6948: Tensor[(11, 5, 9), bool]) -> (Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) {
  %1288 = fn (%var_6911: float64, %var_6912: Tensor[(11, 1, 9), float64], %var_6926: Tensor[(11, 5, 9), bool]) -> (Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) {
    %1279 = cast(%var_6911, dtype="float64") /* ty=float64 */;
    %1280 = cast(%var_6912, dtype="float64") /* ty=Tensor[(11, 1, 9), float64] */;
    %1281 = cast(%var_6912, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
    %1282 = cast(%var_6911, dtype="bool") /* ty=bool */;
    %1283 = logical_or(%1281, %1282) /* ty=Tensor[(11, 1, 9), bool] */;
    %1284 = cast(%1283, dtype="uint64") /* ty=Tensor[(11, 1, 9), uint64] */;
    %1285 = cast(%var_6926, dtype="uint64") /* ty=Tensor[(11, 5, 9), uint64] */;
    %1286 = mod(%1279, %1280) /* ty=Tensor[(11, 1, 9), float64] */;
    %1287 = add(%1284, %1285) /* ty=Tensor[(11, 5, 9), uint64] */;
    (%1286, %1287)
  };
  %1288(%var_6946, %var_6947, %var_6948) /* ty=(Tensor[(11, 1, 9), float64], Tensor[(11, 5, 9), uint64]) */
}

def @func_3706(%var_3703: Tensor[(13, 6, 5), float64], %var_3704: Tensor[(63), uint32], %var_3705: Tensor[(2400), float32]) -> (Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) {
  @func_3701(%var_3703, %var_3704, %var_3705) /* ty=(Tensor[(3, 7, 3), uint32], Tensor[(60), uint64], Tensor[(63), uint32], Tensor[(13, 6, 5), float64], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(10, 15, 16), bool]) */
}

def @func_13771() -> (Tensor[(10, 14, 4), float64], Tensor[(300, 8), bool], Tensor[(390, 1), float64], Tensor[(63), uint32], Tensor[(2400), float32]) {
  %1289 = cast(meta[relay.Constant][74] /* ty=Tensor[(390, 1), float64] */, dtype="float64") /* ty=Tensor[(390, 1), float64] */;
  %1290 = cast(meta[relay.Constant][75] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1291 = cast(meta[relay.Constant][76] /* ty=Tensor[(2400), float32] */, dtype="float32") /* ty=Tensor[(2400), float32] */;
  %1292 = reshape(%1289, newshape=[390]) /* ty=Tensor[(390), float64] */;
  %1293 = reshape(%1290, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1294 = reshape(%1291, newshape=[300, 8]) /* ty=Tensor[(300, 8), float32] */;
  %1295 = @func_11601(%1292, %1293, %1294) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(63), uint32], Tensor[(390), float64], Tensor[(63), uint32], Tensor[(300, 8), bool]) */;
  %1296 = @func_11796() /* ty=Tensor[(10, 14, 4), float64] */;
  %1297 = %1295.4;
  (%1296, %1297, meta[relay.Constant][74] /* ty=Tensor[(390, 1), float64] */, meta[relay.Constant][75] /* ty=Tensor[(63), uint32] */, meta[relay.Constant][76] /* ty=Tensor[(2400), float32] */)
}

def @func_12892() -> (Tensor[(15, 9, 9), float64],) {
  @func_12890() /* ty=(Tensor[(15, 9, 9), float64],) */
}

def @func_13919() -> Tensor[(15, 9, 9), float64] {
  %1298 = fn () -> Tensor[(15, 9, 9), float64] {
    @func_10945() /* ty=Tensor[(15, 9, 9), float64] */
  };
  %1298() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_18879() -> Tensor[(15, 9, 9), float64] {
  %1299 = @func_13512() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */;
  %1299.2
}

def @func_12862(%var_12861: Tensor[(175, 2), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(275, 2), uint8], Tensor[(55, 10), int8], Tensor[(10, 5, 11), bool], Tensor[(175, 2), float64], Tensor[(15, 9, 9), float32]) {
  %1314 = fn (%var_12848: Tensor[(175, 2), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(275, 2), uint8], Tensor[(55, 10), int8], Tensor[(10, 5, 11), bool], Tensor[(175, 2), float64], Tensor[(15, 9, 9), float32]) {
    %1300 = @func_10933() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %1301 = cast(meta[relay.Constant][77] /* ty=Tensor[(55, 10), int8] */, dtype="int8") /* ty=Tensor[(55, 10), int8] */;
    %1302 = cast(meta[relay.Constant][77] /* ty=Tensor[(55, 10), int8] */, dtype="int8") /* ty=Tensor[(55, 10), int8] */;
    %1303 = reshape(%1301, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
    %1304 = reshape(%1302, newshape=[275, 2]) /* ty=Tensor[(275, 2), int8] */;
    %1305 = @func_12198(%1303, %1304) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */;
    %1306 = cast(%var_12848, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
    %1307 = reshape(%1306, newshape=[14, 5, 5]) /* ty=Tensor[(14, 5, 5), float64] */;
    %1308 = @func_5215(%1307) /* ty=(Tensor[(14, 5, 5), float32], Tensor[(10, 5, 11), bool], Tensor[(550), int8]) */;
    %1309 = @func_12567() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
    %1310 = %1300.0;
    %1311 = %1305.3;
    %1312 = %1308.1;
    %1313 = %1309.1;
    (%1310, %1311, meta[relay.Constant][77] /* ty=Tensor[(55, 10), int8] */, %1312, %var_12848, %1313)
  };
  %1314(%var_12861) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(275, 2), uint8], Tensor[(55, 10), int8], Tensor[(10, 5, 11), bool], Tensor[(175, 2), float64], Tensor[(15, 9, 9), float32]) */
}

def @func_13740() -> Tensor[(15, 9, 9), float64] {
  %1316 = fn () -> Tensor[(15, 9, 9), float64] {
    %1315 = @func_12990() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(1024), uint16], Tensor[(70, 9), float64]) */;
    %1315.0
  };
  %1316() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_16300() -> Tensor[(15, 9, 9), float64] {
  @func_16298() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_5894(%var_5892: Tensor[(14, 16, 4), uint32]) -> (Tensor[(14, 16, 4), bool],) {
  @func_5891(%var_5892) /* ty=(Tensor[(14, 16, 4), bool],) */
}

def @func_13447() -> (Tensor[(65, 9), float32],) {
  @func_13445() /* ty=(Tensor[(65, 9), float32],) */
}

def @func_12202(%var_12200: Tensor[(275, 2), int8], %var_12201: Tensor[(275, 2), int8]) -> (Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) {
  @func_12198(%var_12200, %var_12201) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(275, 2), bool], Tensor[(10, 5, 11), bool], Tensor[(275, 2), uint8], Tensor[(10, 5, 11), float32]) */
}

def @func_15399() -> (Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), uint32], Tensor[(55, 10), int8], Tensor[(550), int8]) {
  %1317 = @func_14810() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
  %1318 = %1317.1;
  %1319 = cast(%1318, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %1320 = reshape(%1319, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %1321 = @func_11633(%1320) /* ty=(Tensor[(15, 9, 9), uint32], Tensor[(15, 9, 9), float32], Tensor[(7, 10, 9), float32], Tensor[(630), float32]) */;
  %1322 = cast(%1318, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %1323 = cast(meta[relay.Constant][78] /* ty=Tensor[(550), int8] */, dtype="int8") /* ty=Tensor[(550), int8] */;
  %1324 = reshape(%1322, newshape=[15, 9, 9]) /* ty=Tensor[(15, 9, 9), float32] */;
  %1325 = reshape(%1323, newshape=[55, 10]) /* ty=Tensor[(55, 10), int8] */;
  %1326 = @func_11215(%1324, %1325) /* ty=(Tensor[(15, 9, 9), bool], Tensor[(10, 5, 11), bool], Tensor[(55, 10), int8]) */;
  %1327 = @func_10945() /* ty=Tensor[(15, 9, 9), float64] */;
  %1328 = %1321.0;
  %1329 = %1326.2;
  (%1318, %1327, %1328, %1329, meta[relay.Constant][78] /* ty=Tensor[(550), int8] */)
}

def @func_19485(%var_19484: Tensor[(630), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(630), float32], Tensor[(1024), uint16], Tensor[(630), float32]) {
  %1338 = fn (%var_19480: Tensor[(630), float32]) -> (Tensor[(15, 9, 9), float32], Tensor[(630), float32], Tensor[(1024), uint16], Tensor[(630), float32]) {
    %1330 = @func_18603() /* ty=(Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32]) */;
    %1331 = cast(meta[relay.Constant][79] /* ty=Tensor[(1024), uint16] */, dtype="uint16") /* ty=Tensor[(1024), uint16] */;
    %1332 = cast(%var_19480, dtype="float32") /* ty=Tensor[(630), float32] */;
    %1333 = reshape(%1331, newshape=[1024]) /* ty=Tensor[(1024), uint16] */;
    %1334 = reshape(%1332, newshape=[630]) /* ty=Tensor[(630), float32] */;
    %1335 = @func_14608(%1333, %1334) /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64], Tensor[(70, 9), float64], Tensor[(1024), uint16], Tensor[(630), float32]) */;
    %1336 = %1330.0;
    %1337 = %1335.4;
    (%1336, %1337, meta[relay.Constant][79] /* ty=Tensor[(1024), uint16] */, %var_19480)
  };
  %1338(%var_19484) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(630), float32], Tensor[(1024), uint16], Tensor[(630), float32]) */
}

def @func_12334() -> (Tensor[(495), bool],) {
  %1339 = @func_12277() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(550), int8], float64, Tensor[(495), bool]) */;
  %1340 = %1339.3;
  (%1340,)
}

def @func_13789() -> (Tensor[(15, 9, 9), float32],) {
  %1341 = @func_12779() /* ty=Tensor[(15, 9, 9), float32] */;
  (%1341,)
}

def @func_14725() -> Tensor[(15, 9, 9), float32] {
  @func_14723() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_11739() -> Tensor[(15, 9, 9), float64] {
  %1343 = fn () -> Tensor[(15, 9, 9), float64] {
    %1342 = @func_10485() /* ty=(Tensor[(15, 9, 9), float64],) */;
    %1342.0
  };
  %1343() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_16428(%var_16425: Tensor[(270), int8], %var_16426: Tensor[(195, 3), float32], %var_16427: Tensor[(250), float64]) -> (Tensor[(15, 9, 9), float32], Tensor[(390), float64], Tensor[(270), int8], Tensor[(63), uint32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(195, 3), float64], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550, 1), int8]) {
  @func_16423(%var_16425, %var_16426, %var_16427) /* ty=(Tensor[(15, 9, 9), float32], Tensor[(390), float64], Tensor[(270), int8], Tensor[(63), uint32], Tensor[(15, 9, 9), float32], Tensor[(15, 9, 9), float32], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(195, 3), float64], Tensor[(550), int8], Tensor[(250), float64], Tensor[(550, 1), int8]) */
}

def @func_12871() -> Tensor[(15, 9, 9), float32] {
  %1345 = fn () -> Tensor[(15, 9, 9), float32] {
    %1344 = @func_11261() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %1344.0
  };
  %1345() /* ty=Tensor[(15, 9, 9), float32] */
}

def @func_11873() -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
  %1351 = fn () -> (Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) {
    %1346 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
    %1347 = %1346.0;
    %1348 = cast(%1347, dtype="float64") /* ty=Tensor[(15, 9, 9), float64] */;
    %1349 = sin(%1348) /* ty=Tensor[(15, 9, 9), float64] */;
    %1350 = @func_10945() /* ty=Tensor[(15, 9, 9), float64] */;
    (%1349, %1350)
  };
  %1351() /* ty=(Tensor[(15, 9, 9), float64], Tensor[(15, 9, 9), float64]) */
}

def @func_15825() -> Tensor[(15, 9, 9), float64] {
  @func_15823() /* ty=Tensor[(15, 9, 9), float64] */
}

def @func_12368() -> (Tensor[(15, 9, 9), float32],) {
  %1352 = @func_10401() /* ty=(Tensor[(15, 9, 9), float32],) */;
  %1353 = %1352.0;
  (%1353,)
}

def @func_6638(%var_6636: Tensor[(72), float64], %var_6637: Tensor[(105), float32]) -> (Tensor[(14, 15, 10), bool], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(14, 15, 10), bool], Tensor[(10, 5, 11), bool]) {
  @func_6634(%var_6636, %var_6637) /* ty=(Tensor[(14, 15, 10), bool], Tensor[(10, 15, 16), bool], Tensor[(2400), float32], Tensor[(6, 3, 4), float64], Tensor[(72), float64], Tensor[(14, 5, 5), float32], Tensor[(105), float32], Tensor[(14, 15, 10), bool], Tensor[(10, 5, 11), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen905/build/output.py:4229: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen905/build/output.py", line 4234, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(392) tvmgen_default_fused_logical_and_kernel0(signed char* __restrict__ T_logical_and, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_logical_and[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) && ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


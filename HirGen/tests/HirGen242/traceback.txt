==========mod==========
#[version = "0.0.5"]
def @func_4718() -> (Tensor[(11, 13, 11), float64],) {
  %0 = @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1 = %0.3;
  (%1,)
}

def @func_9273() -> Tensor[(11, 13, 11), float64] {
  %2 = @func_8473() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %2.0
}

def @func_3503(%var_3498: Tensor[(18, 36), bool]) -> (Tensor[(11, 13, 11), float64], Tensor[(18, 36), int64], Tensor[(18, 36), bool]) {
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %6 = reshape(%3, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %7 = reshape(%4, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %8 = reshape(%5, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %9 = @func_2249(%6, %7, %8) /* ty=Tensor[(6, 9, 12), bool] */;
  %10 = cast(%9, dtype="uint16") /* ty=Tensor[(6, 9, 12), uint16] */;
  %11 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="uint16") /* ty=Tensor[(18, 36), uint16] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %14 = logical_xor(%12, %13) /* ty=Tensor[(18, 36), uint16] */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
  %16 = acosh(%15) /* ty=Tensor[(18, 36), float32] */;
  %17 = cast(%16, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
  %18 = shape_of(%14, dtype="int32") /* ty=Tensor[(2), int32] */;
  %19 = cast(%14, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %21 = equal(%19, %20) /* ty=Tensor[(18, 36), bool] */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(18, 36), float32] */, dtype="int64") /* ty=Tensor[(18, 36), int64] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(2), int32] */;
  %24 = cast(%21, dtype="int64") /* ty=Tensor[(18, 36), int64] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %26 = cast(%var_3498, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
  %27 = shape_of(%21, dtype="int32") /* ty=Tensor[(2), int32] */;
  %28 = cast(%21, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %30 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  %31 = left_shift(%24, %25) /* ty=Tensor[(18, 36), int64] */;
  %32 = greater_equal(%28, %29) /* ty=Tensor[(18, 36), bool] */;
  (%30, %31, %32)
}

def @func_102() -> Tensor[(11, 13, 11), float64] {
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  asin(%33) /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6011() -> (Tensor[(11, 13, 11), float64],) {
  %34 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %35 = %34.1;
  (%35,)
}

def @func_2666() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %36 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %37 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %38 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %39 = %36.0;
  %40 = %37.0;
  %41 = %38.0;
  (%39, %40, %41)
}

def @func_1405(%var_1391: Tensor[(12, 7, 15), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) {
  %42 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %43 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %44 = %43.0;
  %45 = cast(%var_1391, dtype="bool") /* ty=Tensor[(12, 7, 15), bool] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="bool") /* ty=Tensor[(12, 7, 15), bool] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %49 = %42.1;
  %50 = less_equal(%47, %48) /* ty=Tensor[(12, 7, 15), bool] */;
  %51 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  (%49, %50, %51)
}

def @func_4551() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %52 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %53 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %54 = %52.0;
  %55 = %53.0;
  (%54, %55)
}

def @func_8174() -> (Tensor[(11, 16, 1), float64],) {
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(11, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 1), float64] */;
  %57 = log2(%56) /* ty=Tensor[(11, 16, 1), float64] */;
  (%57,)
}

def @func_8885(%var_8859: Tensor[(768), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32]) {
  %58 = @func_6268() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %59 = cast(%var_8859, dtype="float32") /* ty=Tensor[(768), float32] */;
  %60 = reshape(%59, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), float32] */;
  %61 = %58.0;
  %62 = @func_5344(%60) /* ty=Tensor[(16, 8, 6), float32] */;
  (%61, %62, %var_8859)
}

def @func_1535() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %63 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %64 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %65 = %63.0;
  %66 = %64.0;
  (%65, %66)
}

def @func_5418() -> (Tensor[(10, 2, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), float32], Tensor[(10, 2, 12), float64]) {
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
  %68 = sqrt(%67) /* ty=Tensor[(10, 2, 12), float32] */;
  %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %73 = cast(%68, dtype="float64") /* ty=Tensor[(10, 2, 12), float64] */;
  %74 = power(%71, %72) /* ty=Tensor[(10, 2, 12), float32] */;
  %75 = @func_2685() /* ty=Tensor[(11, 13, 11), float64] */;
  %76 = @func_4863() /* ty=Tensor[(6, 7, 3), float32] */;
  %77 = sinh(%73) /* ty=Tensor[(10, 2, 12), float64] */;
  (%74, %75, %76, %77)
}

def @func_5620(%var_5573: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) {
  %78 = cast(%var_5573, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %79 = reshape(%78, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %80 = @func_1861(%79) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %81 = @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %82 = @func_2320() /* ty=Tensor[(11, 13, 11), float64] */;
  %83 = %80.3;
  %84 = %81.1;
  (%82, %83, %var_5573, %84)
}

def @func_4638() -> (Tensor[(11, 13, 11), float64],) {
  %85 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  (%85,)
}

def @func_7967(%var_7956: Tensor[(7, 1, 9), float32]) -> Tensor[(7, 1, 9), float32] {
  %86 = cast(%var_7956, dtype="float32") /* ty=Tensor[(7, 1, 9), float32] */;
  atanh(%86) /* ty=Tensor[(7, 1, 9), float32] */
}

def @func_4837() -> Tensor[(11, 13, 11), float64] {
  %87 = @func_2931() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %87.1
}

def @func_6453() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) {
  %88 = @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %89 = %88.1;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %91 = reshape(%90, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %92 = @func_2200(%91) /* ty=Tensor[(11, 13, 11), bool] */;
  (%89, %92)
}

def @func_420() -> (Tensor[(11, 13, 11), float64],) {
  %93 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  (%93,)
}

def @func_4619() -> (Tensor[(11, 13, 11), float64], Tensor[(648), float32]) {
  %94 = @func_4573() /* ty=Tensor[(11, 13, 11), float64] */;
  %95 = cast(%94, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %96 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %97 = log2(%95) /* ty=Tensor[(11, 13, 11), float64] */;
  %98 = %96.4;
  (%97, %98)
}

def @func_8018() -> Tensor[(11, 13, 11), float64] {
  %99 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %99.0
}

def @func_9475(%var_9458: Tensor[(6, 9, 12), bool]) -> (Tensor[(6, 9, 12), bool], Tensor[(11, 13, 11), float64]) {
  %100 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %101 = %100.1;
  %102 = cast(%var_9458, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%101, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %106 = @func_8479() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %107 = greater_equal(%104, %105) /* ty=Tensor[(6, 9, 12), bool] */;
  %108 = %106.0;
  (%107, %108)
}

def @func_691() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %109 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %110 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %111 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  %112 = %109.1;
  %113 = %110.0;
  (%111, %112, %113)
}

def @func_6095() -> (Tensor[(11, 13, 11), float64], Tensor[(54, 12), float32], Tensor[(6, 9, 12), float32]) {
  %114 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %115 = cast(meta[relay.Constant][4] /* ty=Tensor[(54, 12), float32] */, dtype="float32") /* ty=Tensor[(54, 12), float32] */;
  %116 = reshape(%115, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %117 = @func_3976(%116) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %118 = %117.2;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %120 = %114.2;
  %121 = sinh(%119) /* ty=Tensor[(6, 9, 12), float32] */;
  (%120, meta[relay.Constant][4] /* ty=Tensor[(54, 12), float32] */, %121)
}

def @func_1506() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16]) {
  %122 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %123 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %124 = %122.1;
  %125 = %123.1;
  (%124, %125)
}

def @func_2709(%var_2699: Tensor[(1, 16, 3), float64]) -> (Tensor[(1, 16, 3), float64], Tensor[(11, 13, 11), float64]) {
  %126 = cast(%var_2699, dtype="float64") /* ty=Tensor[(1, 16, 3), float64] */;
  %127 = @func_1714() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %128 = log10(%126) /* ty=Tensor[(1, 16, 3), float64] */;
  %129 = %127.0;
  (%128, %129)
}

def @func_2805() -> (Tensor[(11, 13, 11), float64],) {
  %130 = @func_2320() /* ty=Tensor[(11, 13, 11), float64] */;
  (%130,)
}

def @func_2320() -> Tensor[(11, 13, 11), float64] {
  @func_1011() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_4040(%var_4033: Tensor[(1440, 1), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(16, 6, 15), float64], Tensor[(1440, 1), float64]) {
  %131 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %132 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %133 = %132.1;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %135 = reshape(%134, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %136 = cast(%var_4033, dtype="float64") /* ty=Tensor[(1440, 1), float64] */;
  %137 = reshape(%136, newshape=[16, 6, 15]) /* ty=Tensor[(16, 6, 15), float64] */;
  %138 = @func_2049(%137) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %139 = %131.0;
  %140 = @func_2200(%135) /* ty=Tensor[(11, 13, 11), bool] */;
  %141 = %138.0;
  (%139, %133, %140, %141, %var_4033)
}

def @func_1878() -> Tensor[(11, 13, 11), float64] {
  %142 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %142.0
}

def @func_3976(%var_3971: Tensor[(648), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  %143 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %144 = @func_2026() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %145 = cast(%var_3971, dtype="float32") /* ty=Tensor[(648), float32] */;
  %146 = cast(%var_3971, dtype="float32") /* ty=Tensor[(648), float32] */;
  %147 = cast(%var_3971, dtype="float32") /* ty=Tensor[(648), float32] */;
  %148 = reshape(%145, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %149 = reshape(%146, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %150 = reshape(%147, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %151 = %143.1;
  %152 = %144.0;
  %153 = @func_2249(%148, %149, %150) /* ty=Tensor[(6, 9, 12), bool] */;
  (%151, %152, %153, %var_3971)
}

def @func_5716() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %154 = @func_2131() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %155 = @func_2149() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %156 = %154.0;
  %157 = %155.0;
  %158 = @func_4573() /* ty=Tensor[(11, 13, 11), float64] */;
  (%156, %157, %158)
}

def @func_3199() -> Tensor[(11, 13, 11), float64] {
  %159 = @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %159.0
}

def @func_2103() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %160 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %161 = @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %162 = %160.0;
  %163 = %161.1;
  (%162, %163)
}

def @func_297() -> Tensor[(11, 13, 11), float64] {
  %164 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  cos(%166) /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_4533(%var_4526: Tensor[(10, 10, 9), float64]) -> Tensor[(10, 10, 9), float64] {
  %167 = cast(%var_4526, dtype="float64") /* ty=Tensor[(10, 10, 9), float64] */;
  exp(%167) /* ty=Tensor[(10, 10, 9), float64] */
}

def @func_1103() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) {
  %168 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %169 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %170 = %169.1;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %172 = reshape(%171, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %173 = @func_795(%172) /* ty=(Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) */;
  %174 = %173.0;
  %175 = cast(%174, dtype="int16") /* ty=Tensor[(11, 13, 11), int16] */;
  %176 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%170, dtype="int16") /* ty=Tensor[(11, 13, 11), int16] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %179 = %168.0;
  %180 = add(%177, %178) /* ty=Tensor[(11, 13, 11), int16] */;
  %181 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  (%179, %180, %181)
}

def @func_2034() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %182 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %183 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %184 = %182.0;
  %185 = %183.2;
  (%184, %185)
}

def @func_2249(%var_2231: Tensor[(6, 9, 12), float32], %var_2232: Tensor[(6, 9, 12), float32], %var_2239: Tensor[(6, 9, 12), float32]) -> Tensor[(6, 9, 12), bool] {
  %186 = cast(%var_2232, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %187 = shape_of(%var_2231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_2231, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %190 = mod(%188, %189) /* ty=Tensor[(6, 9, 12), float32] */;
  %191 = cast(%var_2239, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%193, %194) /* ty=Tensor[(6, 9, 12), bool] */
}

def @func_3393(%var_3382: Tensor[(3, 8, 1), int32], %var_3383: Tensor[(3, 8, 16), int32]) -> (Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) {
  %195 = cast(%var_3382, dtype="bool") /* ty=Tensor[(3, 8, 1), bool] */;
  %196 = cast(%var_3383, dtype="bool") /* ty=Tensor[(3, 8, 16), bool] */;
  %197 = cast(meta[relay.Constant][5] /* ty=Tensor[(1573), float64] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %198 = reshape(%197, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %199 = greater_equal(%195, %196) /* ty=Tensor[(3, 8, 16), bool] */;
  %200 = @func_2200(%198) /* ty=Tensor[(11, 13, 11), bool] */;
  (%199, %200, meta[relay.Constant][5] /* ty=Tensor[(1573), float64] */)
}

def @func_2443(%var_2427: Tensor[(11, 2, 16), float64]) -> (Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) {
  %201 = cast(%var_2427, dtype="float64") /* ty=Tensor[(11, 2, 16), float64] */;
  %202 = @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %203 = cosh(%201) /* ty=Tensor[(11, 2, 16), float64] */;
  %204 = %202.0;
  (%203, %204)
}

def @func_3686() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %205 = @func_2685() /* ty=Tensor[(11, 13, 11), float64] */;
  %206 = @func_2574() /* ty=Tensor[(11, 13, 11), float64] */;
  (%205, %206)
}

def @func_1861(%var_1859: Tensor[(3, 420), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) {
  %207 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %208 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %209 = cast(meta[relay.Constant][6] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %210 = reshape(%209, newshape=[10, 9, 13]) /* ty=Tensor[(10, 9, 13), float64] */;
  %211 = @func_1731(%210) /* ty=(Tensor[(10, 9, 13), float64],) */;
  %212 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %213 = cast(%var_1859, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %214 = reshape(%213, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %215 = @func_1405(%214) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %216 = %207.0;
  %217 = %208.2;
  %218 = %211.0;
  %219 = %212.0;
  %220 = %215.0;
  (%216, %217, %218, meta[relay.Constant][6] /* ty=Tensor[(1170), float64] */, %219, %220, %var_1859)
}

def @func_5028(%var_4922: Tensor[(12, 13, 12), float32], %var_4970: Tensor[(352), float64], %var_5006: Tensor[(128), float32]) -> (Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(352), float64], Tensor[(12, 13, 12), int8], Tensor[(11, 13, 11), float64], Tensor[(12, 13, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(11, 13, 11), float64]) {
  %221 = @func_3920() /* ty=(Tensor[(11, 13, 11), bool],) */;
  %222 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %223 = cast(%var_4970, dtype="float64") /* ty=Tensor[(352), float64] */;
  %224 = reshape(%223, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float64] */;
  %225 = @func_2443(%224) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */;
  %226 = cast(%var_4922, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
  %227 = atan(%226) /* ty=Tensor[(12, 13, 12), float32] */;
  %228 = cast(%227, dtype="int64") /* ty=Tensor[(12, 13, 12), int64] */;
  %229 = shape_of(%var_4922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_4922, dtype="int64") /* ty=Tensor[(12, 13, 12), int64] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %232 = multiply(%230, %231) /* ty=Tensor[(12, 13, 12), int64] */;
  %233 = cast(%var_4922, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%232, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = not_equal(%235, %236) /* ty=Tensor[(12, 13, 12), bool] */;
  %238 = cast(%237, dtype="int8") /* ty=Tensor[(12, 13, 12), int8] */;
  %239 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%232, dtype="int8") /* ty=Tensor[(12, 13, 12), int8] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %242 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %243 = cast(%var_4922, dtype="int32") /* ty=Tensor[(12, 13, 12), int32] */;
  %244 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%237, dtype="int32") /* ty=Tensor[(12, 13, 12), int32] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %247 = right_shift(%245, %246) /* ty=Tensor[(12, 13, 12), int32] */;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
  %249 = @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %250 = cast(%var_5006, dtype="float32") /* ty=Tensor[(128), float32] */;
  %251 = cast(%var_5006, dtype="float32") /* ty=Tensor[(128), float32] */;
  %252 = reshape(%250, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
  %253 = reshape(%251, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
  %254 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %255 = %221.0;
  %256 = %222.1;
  %257 = %225.0;
  %258 = logical_xor(%240, %241) /* ty=Tensor[(12, 13, 12), int8] */;
  %259 = %242.0;
  %260 = exp(%248) /* ty=Tensor[(12, 13, 12), float32] */;
  %261 = %249.1;
  %262 = @func_2877(%252, %253) /* ty=Tensor[(16, 4, 2), float32] */;
  %263 = %254.1;
  (%255, %256, %257, %var_4970, %258, %259, %260, %261, %262, %var_5006, %263)
}

def @func_2685() -> Tensor[(11, 13, 11), float64] {
  %264 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %264.0
}

def @func_1513() -> (Tensor[(11, 13, 11), float64],) {
  %265 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %266 = %265.2;
  (%266,)
}

def @func_2860(%var_2842: Tensor[(8, 14, 8), float64], %var_2843: Tensor[(8, 14, 8), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) {
  %267 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %268 = cast(%var_2843, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %269 = shape_of(%var_2842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%var_2842, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %272 = floor_divide(%270, %271) /* ty=Tensor[(8, 14, 8), float64] */;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
  %274 = %267.2;
  %275 = rsqrt(%273) /* ty=Tensor[(8, 14, 8), float64] */;
  (%274, %275)
}

def @func_7216() -> (Tensor[(11, 13, 11), float64],) {
  %276 = @func_7063() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %277 = %276.0;
  (%277,)
}

def @func_8321(%var_8245: Tensor[(11, 13, 3), int16], %var_8246: Tensor[(11, 13, 3), int16], %var_8261: Tensor[(1440), float64], %var_8288: Tensor[(896, 1), float64], %var_8299: Tensor[(11, 13, 3), float32]) -> (Tensor[(16, 6, 15), float64], Tensor[(1440), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32], Tensor[(8, 14, 8), float64], Tensor[(896, 1), float64], Tensor[(11, 13, 3), float32], Tensor[(11, 13, 3), float64], Tensor[(11, 13, 11), float64]) {
  %278 = cast(%var_8261, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %279 = reshape(%278, newshape=[16, 6, 15]) /* ty=Tensor[(16, 6, 15), float64] */;
  %280 = @func_2049(%279) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %281 = cast(meta[relay.Constant][7] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %282 = cast(meta[relay.Constant][7] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %283 = cast(meta[relay.Constant][7] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %284 = reshape(%281, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %285 = reshape(%282, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %286 = reshape(%283, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %287 = cast(%var_8288, dtype="float64") /* ty=Tensor[(896, 1), float64] */;
  %288 = cast(%var_8288, dtype="float64") /* ty=Tensor[(896, 1), float64] */;
  %289 = reshape(%287, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
  %290 = reshape(%288, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
  %291 = @func_2860(%289, %290) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */;
  %292 = cast(%var_8245, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
  %293 = asinh(%292) /* ty=Tensor[(11, 13, 3), float32] */;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
  %295 = rsqrt(%294) /* ty=Tensor[(11, 13, 3), float64] */;
  %296 = cast(%var_8246, dtype="int16") /* ty=Tensor[(11, 13, 3), int16] */;
  %297 = shape_of(%var_8245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_8245, dtype="int16") /* ty=Tensor[(11, 13, 3), int16] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %300 = add(%298, %299) /* ty=Tensor[(11, 13, 3), int16] */;
  %301 = cast(%300, dtype="int32") /* ty=Tensor[(11, 13, 3), int32] */;
  %302 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%295, dtype="int32") /* ty=Tensor[(11, 13, 3), int32] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %305 = left_shift(%303, %304) /* ty=Tensor[(11, 13, 3), int32] */;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
  %307 = cast(%var_8299, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
  %308 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%293, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %311 = @func_7033() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %312 = %280.0;
  %313 = @func_2249(%284, %285, %286) /* ty=Tensor[(6, 9, 12), bool] */;
  %314 = %291.1;
  %315 = acosh(%306) /* ty=Tensor[(11, 13, 3), float32] */;
  %316 = mod(%309, %310) /* ty=Tensor[(11, 13, 3), float64] */;
  %317 = %311.0;
  (%312, %var_8261, %313, meta[relay.Constant][7] /* ty=Tensor[(648), float32] */, %314, %var_8288, %315, %316, %317)
}

def @func_8372() -> Tensor[(11, 13, 11), float64] {
  %318 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %318.0
}

def @func_9215() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %319 = @func_2666() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %320 = @func_8372() /* ty=Tensor[(11, 13, 11), float64] */;
  %321 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  %322 = %319.0;
  (%320, %321, %322)
}

def @main(%var_9800: Tensor[(8, 15, 5), uint32], %var_9801: Tensor[(8, 15, 5), uint32], %var_9805: Tensor[(8, 15, 5), uint32], %var_9828: Tensor[(8, 15, 5), float32]) -> (Tensor[(10, 10, 9), float64], Tensor[(900), float64], Tensor[(8, 15, 5), float64], Tensor[(8, 15, 5), float32]) {
  %323 = cast(meta[relay.Constant][8] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %324 = reshape(%323, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), float64] */;
  %325 = cast(%var_9801, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %326 = shape_of(%var_9800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%var_9800, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = less(%327, %328) /* ty=Tensor[(8, 15, 5), bool] */;
  %330 = cast(%var_9805, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %331 = shape_of(%var_9801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%var_9801, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %334 = floor_mod(%332, %333) /* ty=Tensor[(8, 15, 5), float64] */;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %336 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%329, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %339 = divide(%337, %338) /* ty=Tensor[(8, 15, 5), float32] */;
  %340 = cast(%var_9828, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %344 = greater(%342, %343) /* ty=Tensor[(8, 15, 5), bool] */;
  %345 = cast(%344, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %346 = cast(%var_9801, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %347 = log2(%346) /* ty=Tensor[(8, 15, 5), float64] */;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %349 = @func_4533(%324) /* ty=Tensor[(10, 10, 9), float64] */;
  %350 = sinh(%345) /* ty=Tensor[(8, 15, 5), float64] */;
  %351 = exp(%348) /* ty=Tensor[(8, 15, 5), float32] */;
  (%349, meta[relay.Constant][8] /* ty=Tensor[(900), float64] */, %350, %351)
}

def @func_2200(%var_2185: Tensor[(11, 13, 11), float64]) -> Tensor[(11, 13, 11), bool] {
  %352 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %353 = %352.2;
  %354 = cast(%var_2185, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%356, %357) /* ty=Tensor[(11, 13, 11), bool] */
}

def @func_6416() -> Tensor[(11, 13, 11), float64] {
  @func_5434() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_3238(%var_3218: float64, %var_3224: Tensor[(896), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(8, 14, 8), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64]) {
  %358 = cast(%var_3218, dtype="float64") /* ty=float64 */;
  %359 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %360 = cast(%var_3224, dtype="float64") /* ty=Tensor[(896), float64] */;
  %361 = cast(%var_3224, dtype="float64") /* ty=Tensor[(896), float64] */;
  %362 = reshape(%360, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
  %363 = reshape(%361, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
  %364 = @func_2860(%362, %363) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */;
  %365 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %366 = floor_divide(%358, %359) /* ty=Tensor[(8, 12, 10), float64] */;
  %367 = %364.1;
  %368 = %365.2;
  (%366, %367, %var_3224, %368)
}

def @func_8787() -> Tensor[(11, 13, 11), float64] {
  %369 = @func_6731() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) */;
  %369.1
}

def @func_6558() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %370 = @func_5376() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %371 = @func_5478() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %372 = %370.0;
  %373 = %371.0;
  (%372, %373)
}

def @func_917() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %374 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %375 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %376 = %374.0;
  %377 = %375.1;
  %378 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  (%376, %377, %378)
}

def @func_1354() -> (Tensor[(11, 13, 11), float64],) {
  %379 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %380 = %379.0;
  (%380,)
}

def @func_6686(%var_6653: Tensor[(14, 13, 16), uint8], %var_6654: Tensor[(14, 13, 16), uint8]) -> (Tensor[(14, 13, 16), bool], Tensor[(11, 13, 11), float64]) {
  %381 = cast(%var_6654, dtype="bool") /* ty=Tensor[(14, 13, 16), bool] */;
  %382 = shape_of(%var_6653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_6653, dtype="bool") /* ty=Tensor[(14, 13, 16), bool] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %385 = @func_2026() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %386 = less_equal(%383, %384) /* ty=Tensor[(14, 13, 16), bool] */;
  %387 = %385.0;
  (%386, %387)
}

def @func_7587() -> (Tensor[(11, 13, 11), float64],) {
  %388 = @func_7063() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %389 = %388.0;
  (%389,)
}

def @func_795(%var_764: Tensor[(11, 13, 11), float64]) -> (Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) {
  %390 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  %391 = cast(%var_764, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%390, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %396 = %395.1;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %398 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%390, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %401 = less_equal(%393, %394) /* ty=Tensor[(11, 13, 11), bool] */;
  %402 = floor_divide(%399, %400) /* ty=Tensor[(11, 13, 11), float32] */;
  (%401, %402)
}

def @func_1951() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %403 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %404 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %405 = %403.0;
  %406 = %404.0;
  %407 = @func_1011() /* ty=Tensor[(11, 13, 11), float64] */;
  (%405, %406, %407)
}

def @func_564() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %408 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %409 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %410 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %411 = %408.0;
  %412 = %409.0;
  %413 = %410.0;
  (%411, %412, %413)
}

def @func_6841(%var_6752: Tensor[(1260), float64], %var_6802: Tensor[(900), float64], %var_6822: Tensor[(6, 9, 12), bool], %var_6828: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 10, 9), float64], Tensor[(900), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), float64], Tensor[(1260), uint32], Tensor[(11, 13, 11), bool]) {
  %414 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %415 = cast(%var_6752, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %416 = reshape(%415, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %417 = @func_1405(%416) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %418 = @func_5219() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %419 = @func_2789() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %420 = cast(%var_6802, dtype="float64") /* ty=Tensor[(900), float64] */;
  %421 = reshape(%420, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), float64] */;
  %422 = @func_5279() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %423 = @func_5091() /* ty=(Tensor[(6, 9, 12), bool],) */;
  %424 = %423.0;
  %425 = cast(%var_6822, dtype="float64") /* ty=Tensor[(6, 9, 12), float64] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%424, dtype="float64") /* ty=Tensor[(6, 9, 12), float64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %429 = @func_6731() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) */;
  %430 = %429.2;
  %431 = cast(%var_6828, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(1), int32] */;
  %433 = cast(%430, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %435 = %422.0;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %437 = reshape(%436, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %438 = %414.0;
  %439 = %417.0;
  %440 = %418.0;
  %441 = %419.2;
  %442 = @func_4533(%421) /* ty=Tensor[(10, 10, 9), float64] */;
  %443 = divide(%427, %428) /* ty=Tensor[(6, 9, 12), float64] */;
  %444 = right_shift(%433, %434) /* ty=Tensor[(1260), uint32] */;
  %445 = @func_2200(%437) /* ty=Tensor[(11, 13, 11), bool] */;
  (%438, %439, %var_6752, %440, %441, %442, %var_6802, %435, %443, %444, %445)
}

def @func_5091() -> (Tensor[(6, 9, 12), bool],) {
  %446 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %447 = %446.1;
  (%447,)
}

def @func_7836() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %448 = @func_6095() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(54, 12), float32], Tensor[(6, 9, 12), float32]) */;
  %449 = @func_5059() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %450 = %448.0;
  %451 = %449.0;
  (%450, %451)
}

def @func_1244(%var_1228: Tensor[(12, 8, 11), uint64], %var_1229: Tensor[(12, 8, 11), uint64]) -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) {
  %452 = cast(%var_1229, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
  %453 = shape_of(%var_1228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%var_1228, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %456 = cast(%var_1229, dtype="bool") /* ty=Tensor[(12, 8, 11), bool] */;
  %457 = shape_of(%var_1228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_1228, dtype="bool") /* ty=Tensor[(12, 8, 11), bool] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %460 = not_equal(%458, %459) /* ty=Tensor[(12, 8, 11), bool] */;
  %461 = cast(%460, dtype="int16") /* ty=Tensor[(12, 8, 11), int16] */;
  %462 = shape_of(%var_1228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%var_1228, dtype="int16") /* ty=Tensor[(12, 8, 11), int16] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %465 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %466 = multiply(%454, %455) /* ty=Tensor[(12, 8, 11), int64] */;
  %467 = bitwise_and(%463, %464) /* ty=Tensor[(12, 8, 11), int16] */;
  %468 = %465.0;
  (%466, %467, %468)
}

def @func_3266() -> Tensor[(11, 13, 11), float64] {
  %469 = @func_2994() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %469.0
}

def @func_5376() -> (Tensor[(11, 13, 11), float64],) {
  %470 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %471 = %470.2;
  (%471,)
}

def @func_6360(%var_6354: Tensor[(16, 22), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(24, 2), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(16, 22), float64]) {
  %472 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %473 = @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %474 = cast(meta[relay.Constant][10] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %475 = reshape(%474, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), float64] */;
  %476 = @func_2709(%475) /* ty=(Tensor[(1, 16, 3), float64], Tensor[(11, 13, 11), float64]) */;
  %477 = @func_3686() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %478 = cast(%var_6354, dtype="float64") /* ty=Tensor[(16, 22), float64] */;
  %479 = reshape(%478, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float64] */;
  %480 = @func_2443(%479) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */;
  %481 = %472.0;
  %482 = %473.0;
  %483 = %476.1;
  %484 = %477.1;
  %485 = %480.1;
  (%481, %482, %483, meta[relay.Constant][10] /* ty=Tensor[(24, 2), float64] */, %484, %485, %var_6354)
}

def @func_5143() -> (Tensor[(11, 13, 11), float64],) {
  %486 = @func_4254() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %487 = %486.0;
  (%487,)
}

def @func_6239(%var_6213: Tensor[(1, 128), float32], %var_6214: Tensor[(384), float32], %var_6223: Tensor[(5, 128), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), uint64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(1056), uint64], Tensor[(2, 12), int32], Tensor[(384), float32], Tensor[(5, 128), uint32]) {
  %488 = cast(meta[relay.Constant][11] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %489 = cast(meta[relay.Constant][11] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %490 = reshape(%488, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %491 = reshape(%489, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %492 = @func_1244(%490, %491) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %493 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %494 = cast(meta[relay.Constant][12] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %495 = reshape(%494, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %496 = @func_1405(%495) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %497 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 12), int32] */, dtype="int32") /* ty=Tensor[(2, 12), int32] */;
  %498 = cast(%var_6213, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
  %499 = cast(%var_6214, dtype="float32") /* ty=Tensor[(384), float32] */;
  %500 = reshape(%497, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %501 = reshape(%498, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %502 = reshape(%499, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), float32] */;
  %503 = @func_4241(%500, %501, %502) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) */;
  %504 = cast(%var_6213, dtype="uint32") /* ty=Tensor[(1, 128), uint32] */;
  %505 = cast(%var_6223, dtype="uint32") /* ty=Tensor[(5, 128), uint32] */;
  %506 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  %507 = %492.0;
  %508 = %493.0;
  %509 = %496.0;
  %510 = %503.8;
  %511 = subtract(%504, %505) /* ty=Tensor[(5, 128), uint32] */;
  (%506, %507, meta[relay.Constant][11] /* ty=Tensor[(1056), uint64] */, %508, %509, meta[relay.Constant][12] /* ty=Tensor[(1260), float64] */, %510, meta[relay.Constant][13] /* ty=Tensor[(2, 12), int32] */, %var_6214, %511)
}

def @func_7884(%var_7838: Tensor[(10, 6, 10), float32], %var_7839: Tensor[(10, 6, 10), float32]) -> (Tensor[(648), float32], Tensor[(10, 6, 10), float32], Tensor[(11, 13, 11), float64]) {
  %512 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %513 = cast(%var_7839, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %514 = shape_of(%var_7838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_7838, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %517 = maximum(%515, %516) /* ty=Tensor[(10, 6, 10), float32] */;
  %518 = cast(%var_7839, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %522 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %523 = %512.4;
  %524 = mod(%520, %521) /* ty=Tensor[(10, 6, 10), float32] */;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_8473() -> (Tensor[(11, 13, 11), float64],) {
  %526 = @func_2745() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %527 = %526.1;
  (%527,)
}

def @func_9137() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %528 = @func_8479() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %529 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %530 = %528.0;
  %531 = %529.0;
  (%530, %531)
}

def @func_2415() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %532 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %533 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %534 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %535 = %532.0;
  %536 = %533.1;
  %537 = %534.0;
  (%535, %536, %537)
}

def @func_1328() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %538 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %539 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %540 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %541 = %538.0;
  %542 = %539.0;
  %543 = %540.0;
  (%541, %542, %543)
}

def @func_2789() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %544 = @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %545 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %546 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %547 = %544.0;
  %548 = %545.0;
  %549 = %546.1;
  (%547, %548, %549)
}

def @func_7155(%var_7131: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) {
  %550 = cast(%var_7131, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %551 = reshape(%550, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %552 = @func_5620(%551) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) */;
  %553 = @func_2745() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %554 = @func_3199() /* ty=Tensor[(11, 13, 11), float64] */;
  %555 = %552.1;
  %556 = %553.1;
  (%554, %555, %var_7131, %556)
}

def @func_5279() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %557 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %558 = @func_2666() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %559 = @func_2789() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %560 = %557.0;
  %561 = %558.2;
  %562 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
  %563 = %559.2;
  (%560, %561, %562, %563)
}

def @func_9515() -> Tensor[(11, 13, 11), float64] {
  %564 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %564.0
}

def @func_4099() -> (Tensor[(11, 13, 11), float64],) {
  %565 = @func_2666() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %566 = %565.1;
  (%566,)
}

def @func_7560(%var_7532: Tensor[(3, 7, 10), float32]) -> Tensor[(3, 7, 10), float64] {
  %567 = cast(%var_7532, dtype="float32") /* ty=Tensor[(3, 7, 10), float32] */;
  %568 = sigmoid(%567) /* ty=Tensor[(3, 7, 10), float32] */;
  %569 = cast(%var_7532, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%571, %572) /* ty=Tensor[(3, 7, 10), float64] */
}

def @func_9304() -> (Tensor[(11, 13, 11), float64],) {
  %573 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %574 = %573.0;
  (%574,)
}

def @func_8106() -> (Tensor[(11, 13, 11), float64],) {
  %575 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %576 = %575.0;
  (%576,)
}

def @func_9662(%var_9590: Tensor[(4, 11, 1), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(4, 11, ?), bool], Tensor[(4, 11, ?), bool], Tensor[(11, 13, 11), float64], Tensor[(4, 11, 1), float32], Tensor[(4, 11, ?), bool]) {
  %577 = @func_7183() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %578 = cast(%var_9590, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %579 = log2(%578) /* ty=Tensor[(4, 11, 1), float32] */;
  %580 = cast(%var_9590, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%579, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %584 = greater(%582, %583) /* ty=Tensor[(4, 11, ?), bool] */;
  %585 = cast(%var_9590, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %586 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%584, dtype="bool") /* ty=Tensor[(4, 11, ?), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %589 = cast(%579, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %590 = shape_of(%var_9590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%var_9590, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = @func_8742() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %594 = cast(%579, dtype="float64") /* ty=Tensor[(4, 11, 1), float64] */;
  %595 = erf(%594) /* ty=Tensor[(4, 11, 1), float64] */;
  %596 = cast(%595, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %597 = cast(%595, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
  %598 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%584, dtype="bool") /* ty=Tensor[(4, 11, ?), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = %577.0;
  %602 = greater_equal(%587, %588) /* ty=Tensor[(4, 11, ?), bool] */;
  %603 = less_equal(%591, %592) /* ty=Tensor[(4, 11, ?), bool] */;
  %604 = %593.0;
  %605 = asin(%596) /* ty=Tensor[(4, 11, 1), float32] */;
  %606 = logical_and(%599, %600) /* ty=Tensor[(4, 11, ?), bool] */;
  (%601, %602, %603, %604, %605, %606)
}

def @func_3772(%var_3752: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float32], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64]) {
  %607 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %608 = @func_2103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %609 = %608.1;
  %610 = cast(%609, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %611 = cast(%var_3752, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %612 = reshape(%611, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %613 = @func_1405(%612) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %614 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %615 = @func_2026() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %616 = %607.0;
  %617 = log(%610) /* ty=Tensor[(11, 13, 11), float32] */;
  %618 = %613.2;
  %619 = %614.1;
  %620 = %615.0;
  (%616, %617, %618, %var_3752, %619, %620)
}

def @func_8222() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %621 = @func_6595() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %622 = @func_7572() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %623 = @func_4638() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %624 = %621.0;
  %625 = %622.0;
  %626 = %623.0;
  (%624, %625, %626)
}

def @func_5059() -> (Tensor[(11, 13, 11), float64],) {
  %627 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %628 = %627.1;
  (%628,)
}

def @func_7116() -> (Tensor[(6, 9, 12), bool],) {
  %629 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %630 = %629.1;
  (%630,)
}

def @func_1731(%var_1728: Tensor[(10, 9, 13), float64]) -> (Tensor[(10, 9, 13), float64],) {
  %631 = cast(%var_1728, dtype="float64") /* ty=Tensor[(10, 9, 13), float64] */;
  %632 = atan(%631) /* ty=Tensor[(10, 9, 13), float64] */;
  (%632,)
}

def @func_1793(%var_1789: Tensor[(1056), uint64]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), bool]) {
  %633 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %634 = cast(meta[relay.Constant][14] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %635 = cast(meta[relay.Constant][14] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %636 = reshape(%634, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %637 = reshape(%635, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %638 = @func_1244(%636, %637) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %639 = cast(%var_1789, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %640 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(1056), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %641 = cast(meta[relay.Constant][14] /* ty=Tensor[(1056), uint64] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?), bool] */;
  %643 = %633.0;
  %644 = %638.0;
  %645 = logical_or(%641, %642) /* ty=Tensor[(1056), bool] */;
  (%643, %644, %645)
}

def @func_2131() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %646 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %647 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %648 = %646.0;
  %649 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  %650 = %647.0;
  (%648, %649, %650)
}

def @func_7912() -> Tensor[(11, 13, 11), float64] {
  %651 = @func_5143() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %651.0
}

def @func_246() -> (Tensor[(11, 13, 11), float64],) {
  %652 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %653 = %652.0;
  (%653,)
}

def @func_5786() -> Tensor[(11, 13, 11), float64] {
  @func_2685() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_9176() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %654 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %655 = %654.0;
  %656 = @func_8018() /* ty=Tensor[(11, 13, 11), float64] */;
  (%655, %656)
}

def @func_2931() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %657 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %658 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %659 = %657.0;
  %660 = %658.0;
  (%659, %660)
}

def @func_8970() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %661 = @func_8742() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %662 = @func_1714() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %663 = %661.2;
  %664 = %662.0;
  (%663, %664)
}

def @func_9718(%var_9704: Tensor[(648), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  %665 = cast(%var_9704, dtype="float32") /* ty=Tensor[(648), float32] */;
  %666 = cast(%var_9704, dtype="float32") /* ty=Tensor[(648), float32] */;
  %667 = cast(%var_9704, dtype="float32") /* ty=Tensor[(648), float32] */;
  %668 = reshape(%665, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %669 = reshape(%666, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %670 = reshape(%667, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %671 = @func_2320() /* ty=Tensor[(11, 13, 11), float64] */;
  %672 = @func_2249(%668, %669, %670) /* ty=Tensor[(6, 9, 12), bool] */;
  (%671, %672, %var_9704)
}

def @func_4913() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %673 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %674 = @func_3266() /* ty=Tensor[(11, 13, 11), float64] */;
  %675 = %673.1;
  (%674, %675)
}

def @func_6404(%var_6402: Tensor[(720, 2), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(16, 6, 15), float64], Tensor[(720, 2), float64]) {
  %676 = @func_4551() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %677 = cast(%var_6402, dtype="float64") /* ty=Tensor[(720, 2), float64] */;
  %678 = reshape(%677, newshape=[16, 6, 15]) /* ty=Tensor[(16, 6, 15), float64] */;
  %679 = @func_2049(%678) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %680 = %676.1;
  %681 = %679.0;
  (%680, %681, %var_6402)
}

def @func_707() -> Tensor[(11, 13, 11), float64] {
  %682 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %682.1
}

def @func_3920() -> (Tensor[(11, 13, 11), bool],) {
  %683 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %684 = %683.1;
  (%684,)
}

def @func_9038(%var_9031: Tensor[(5, 1, 7), float64]) -> (Tensor[(5, 1, 7), float64],) {
  %685 = cast(%var_9031, dtype="float64") /* ty=Tensor[(5, 1, 7), float64] */;
  %686 = asinh(%685) /* ty=Tensor[(5, 1, 7), float64] */;
  (%686,)
}

def @func_9253() -> (Tensor[(11, 13, 11), float64],) {
  %687 = @func_5279() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %688 = %687.1;
  (%688,)
}

def @func_3443(%var_3420: Tensor[(8, 3, 4), float64]) -> (Tensor[(8, 3, 4), float64],) {
  %689 = cast(%var_3420, dtype="float64") /* ty=Tensor[(8, 3, 4), float64] */;
  %690 = atan(%689) /* ty=Tensor[(8, 3, 4), float64] */;
  (%690,)
}

def @func_385() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %691 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %692 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  %693 = %691.0;
  (%692, %693)
}

def @func_3855() -> (Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) {
  %694 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %695 = @func_2574() /* ty=Tensor[(11, 13, 11), float64] */;
  %696 = %694.3;
  (%695, %696)
}

def @func_9557() -> (Tensor[(11, 13, 11), float64],) {
  %697 = @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %698 = %697.0;
  (%698,)
}

def @func_1645() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %699 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %700 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %701 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %702 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %703 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %704 = %699.1;
  %705 = %700.0;
  %706 = %701.1;
  %707 = %702.0;
  %708 = %703.0;
  (%704, %705, %706, %707, %708)
}

def @func_6301() -> (Tensor[(11, 13, 11), float64],) {
  %709 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %710 = %709.0;
  (%710,)
}

def @func_5985() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %711 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %712 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %713 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %714 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %715 = @func_5786() /* ty=Tensor[(11, 13, 11), float64] */;
  %716 = %711.0;
  %717 = %712.1;
  %718 = %713.1;
  %719 = %714.1;
  %720 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  (%715, %716, %717, %718, %719, %720)
}

def @func_8075() -> (Tensor[(11, 13, 11), float64],) {
  %721 = @func_7836() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %722 = %721.1;
  (%722,)
}

def @func_9750() -> Tensor[(11, 13, 11), float64] {
  %723 = @func_6517() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %723.1
}

def @func_6894() -> Tensor[(6, 7, 3), float32] {
  @func_4863() /* ty=Tensor[(6, 7, 3), float32] */
}

def @func_170() -> (Tensor[(11, 13, 11), float64],) {
  %724 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  (%724,)
}

def @func_2026() -> (Tensor[(11, 13, 11), float64],) {
  %725 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %726 = %725.0;
  (%726,)
}

def @func_9549() -> Tensor[(11, 13, 11), float64] {
  %727 = @func_6517() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %727.1
}

def @func_7183() -> (Tensor[(11, 13, 11), float64],) {
  %728 = @func_4837() /* ty=Tensor[(11, 13, 11), float64] */;
  (%728,)
}

def @func_2149() -> (Tensor[(11, 13, 11), float64],) {
  %729 = @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %730 = %729.0;
  (%730,)
}

def @func_6268() -> (Tensor[(11, 13, 11), float64],) {
  %731 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %732 = %731.0;
  (%732,)
}

def @func_7770() -> Tensor[(11, 13, 11), float64] {
  %733 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %733.1
}

def @func_6985() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %734 = @func_5716() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %735 = @func_6517() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %736 = @func_1878() /* ty=Tensor[(11, 13, 11), float64] */;
  %737 = %734.1;
  %738 = %735.2;
  (%736, %737, %738)
}

def @func_3346(%var_3339: bool, %var_3340: Tensor[(2, 8, 8), bool]) -> Tensor[(2, 8, 8), bool] {
  %739 = cast(%var_3339, dtype="bool") /* ty=bool */;
  %740 = cast(%var_3340, dtype="bool") /* ty=Tensor[(2, 8, 8), bool] */;
  logical_or(%739, %740) /* ty=Tensor[(2, 8, 8), bool] */
}

def @func_4241(%var_4168: Tensor[(24), int32], %var_4183: Tensor[(128), float32], %var_4208: Tensor[(3, 8, 16), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) {
  %741 = @func_3920() /* ty=(Tensor[(11, 13, 11), bool],) */;
  %742 = cast(%var_4183, dtype="float32") /* ty=Tensor[(128), float32] */;
  %743 = cast(%var_4183, dtype="float32") /* ty=Tensor[(128), float32] */;
  %744 = reshape(%742, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
  %745 = reshape(%743, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
  %746 = cast(%var_4168, dtype="int32") /* ty=Tensor[(24), int32] */;
  %747 = cast(meta[relay.Constant][15] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %748 = reshape(%746, newshape=[3, 8, 1]) /* ty=Tensor[(3, 8, 1), int32] */;
  %749 = reshape(%747, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), int32] */;
  %750 = @func_3393(%748, %749) /* ty=(Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(3, 8, 16), float64] */;
  %753 = acos(%752) /* ty=Tensor[(3, 8, 16), float64] */;
  %754 = cast(%751, dtype="float32") /* ty=Tensor[(3, 8, 16), float32] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%753, dtype="float32") /* ty=Tensor[(3, 8, 16), float32] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %758 = floor_divide(%756, %757) /* ty=Tensor[(3, 8, 16), float32] */;
  %759 = cast(%var_4208, dtype="int8") /* ty=Tensor[(3, 8, 16), int8] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="int8") /* ty=Tensor[(3, 8, 16), int8] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %763 = cast(meta[relay.Constant][16] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %764 = cast(meta[relay.Constant][16] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %765 = reshape(%763, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %766 = reshape(%764, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %767 = @func_1244(%765, %766) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %768 = @func_1878() /* ty=Tensor[(11, 13, 11), float64] */;
  %769 = %741.0;
  %770 = @func_2877(%744, %745) /* ty=Tensor[(16, 4, 2), float32] */;
  %771 = right_shift(%761, %762) /* ty=Tensor[(3, 8, 16), int8] */;
  %772 = %767.1;
  (%768, %769, %var_4168, meta[relay.Constant][15] /* ty=Tensor[(384), int32] */, %770, %var_4183, %771, %772, meta[relay.Constant][16] /* ty=Tensor[(1056), uint64] */)
}

def @func_2994() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %773 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %774 = @func_1714() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %775 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %776 = %773.0;
  %777 = %774.0;
  %778 = %775.0;
  (%776, %777, %778)
}

def @func_5315() -> Tensor[(11, 13, 11), bool] {
  %779 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %779.1
}

def @func_595() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %780 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %781 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %782 = %780.0;
  %783 = %781.1;
  (%782, %783)
}

def @func_4376(%var_4281: Tensor[(1, 7, 16), uint64], %var_4282: Tensor[(9, 7, 16), uint64], %var_4311: Tensor[(1260), float64]) -> (Tensor[(9, 7, 16), uint64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64]) {
  %784 = cast(%var_4281, dtype="uint64") /* ty=Tensor[(1, 7, 16), uint64] */;
  %785 = cast(%var_4282, dtype="uint64") /* ty=Tensor[(9, 7, 16), uint64] */;
  %786 = cast(%var_4311, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %787 = reshape(%786, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %788 = @func_3772(%787) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float32], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64]) */;
  %789 = cast(meta[relay.Constant][17] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %790 = reshape(%789, newshape=[10, 9, 13]) /* ty=Tensor[(10, 9, 13), float64] */;
  %791 = @func_1731(%790) /* ty=(Tensor[(10, 9, 13), float64],) */;
  %792 = %791.0;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(10, 9, 13), float64] */;
  %794 = right_shift(%784, %785) /* ty=Tensor[(9, 7, 16), uint64] */;
  %795 = %788.5;
  %796 = @func_2574() /* ty=Tensor[(11, 13, 11), float64] */;
  %797 = log2(%793) /* ty=Tensor[(10, 9, 13), float64] */;
  (%794, meta[relay.Constant][17] /* ty=Tensor[(1170), float64] */, %795, %var_4311, %796, %797)
}

def @func_4863() -> Tensor[(6, 7, 3), float32] {
  %798 = cast(meta[relay.Constant][18] /* ty=Tensor[(6, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  rsqrt(%798) /* ty=Tensor[(6, 7, 3), float32] */
}

def @func_6595() -> (Tensor[(11, 13, 11), float64],) {
  %799 = @func_2131() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %800 = %799.1;
  (%800,)
}

def @func_2745() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %801 = @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %802 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %803 = %801.0;
  %804 = %802.2;
  (%803, %804)
}

def @func_7063() -> (Tensor[(11, 13, 11), float64],) {
  %805 = @func_3686() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %806 = %805.0;
  (%806,)
}

def @func_8084(%var_8080: Tensor[(10, 13, 16), int32]) -> Tensor[(10, 13, 16), bool] {
  %807 = cast(%var_8080, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %808 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(10, 13, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 13, 16), int32] */, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%809, %810) /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_9021(%var_9018: Tensor[(24), int32]) -> (Tensor[(11, 13, 11), float64], Tensor[(1573), float64], Tensor[(24), int32], Tensor[(384), int32]) {
  %811 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %812 = cast(%var_9018, dtype="int32") /* ty=Tensor[(24), int32] */;
  %813 = cast(meta[relay.Constant][20] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %814 = reshape(%812, newshape=[3, 8, 1]) /* ty=Tensor[(3, 8, 1), int32] */;
  %815 = reshape(%813, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), int32] */;
  %816 = @func_3393(%814, %815) /* ty=(Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) */;
  %817 = %811.0;
  %818 = %816.2;
  (%817, %818, %var_9018, meta[relay.Constant][20] /* ty=Tensor[(384), int32] */)
}

def @func_2574() -> Tensor[(11, 13, 11), float64] {
  %819 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %819.0
}

def @func_5219() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %820 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %821 = @func_2931() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_4254() -> (Tensor[(11, 13, 11), float64],) {
  %824 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  (%824,)
}

def @func_2049(%var_2037: Tensor[(16, 6, 15), float64]) -> (Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) {
  %825 = cast(%var_2037, dtype="float64") /* ty=Tensor[(16, 6, 15), float64] */;
  %826 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %827 = sin(%825) /* ty=Tensor[(16, 6, 15), float64] */;
  %828 = %826.0;
  (%827, %828)
}

def @func_8676() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %829 = @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %830 = @func_5985() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %831 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %832 = %829.0;
  %833 = %830.0;
  %834 = %831.0;
  (%832, %833, %834)
}

def @func_5434() -> Tensor[(11, 13, 11), float64] {
  %835 = @func_2492() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %835.0
}

def @func_5821(%var_5794: Tensor[(4, 16, 11), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(4, 16, 11), float64]) {
  %836 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %837 = cast(%var_5794, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  %838 = sinh(%837) /* ty=Tensor[(4, 16, 11), float64] */;
  %839 = cast(%838, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  %840 = %836.2;
  %841 = cos(%839) /* ty=Tensor[(4, 16, 11), float64] */;
  (%840, %841)
}

def @func_7572() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %842 = @func_4913() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %843 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %844 = %842.1;
  %845 = %843.0;
  (%844, %845)
}

def @func_1147() -> (Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) {
  %846 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
  %847 = sqrt(%846) /* ty=Tensor[(12, 7, 15), float32] */;
  %848 = cast(%847, dtype="float64") /* ty=Tensor[(12, 7, 15), float64] */;
  %849 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %850 = exp(%848) /* ty=Tensor[(12, 7, 15), float64] */;
  %851 = %849.0;
  (%850, %851)
}

def @func_8636(%var_8633: Tensor[(1440), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1440, 1), float64], Tensor[(1440), float64]) {
  %852 = @func_6595() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %853 = @func_2492() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %854 = cast(%var_8633, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %855 = reshape(%854, newshape=[1440, 1]) /* ty=Tensor[(1440, 1), float64] */;
  %856 = @func_4040(%855) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(16, 6, 15), float64], Tensor[(1440, 1), float64]) */;
  %857 = %852.0;
  %858 = %853.0;
  %859 = %856.4;
  (%857, %858, %859, %var_8633)
}

def @func_140() -> Tensor[(11, 13, 11), float64] {
  @func_102() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_5478() -> (Tensor[(11, 13, 11), float64],) {
  %860 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %861 = %860.0;
  (%861,)
}

def @func_4782() -> Tensor[(11, 13, 11), float64] {
  %862 = @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %862.0
}

def @func_6175() -> Tensor[(11, 13, 11), float64] {
  %863 = @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %863.1
}

def @func_1258(%var_1252: Tensor[(8, 4, 11), bool], %var_1253: Tensor[(8, 4, 11), bool]) -> (Tensor[(8, 4, 11), bool],) {
  %864 = cast(%var_1253, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
  %865 = shape_of(%var_1252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%var_1252, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %868 = logical_and(%866, %867) /* ty=Tensor[(8, 4, 11), bool] */;
  (%868,)
}

def @func_4573() -> Tensor[(11, 13, 11), float64] {
  @func_297() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_2492() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %869 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %870 = %869.1;
  %871 = cast(%870, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %872 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %873 = sigmoid(%871) /* ty=Tensor[(11, 13, 11), float64] */;
  %874 = %872.1;
  (%873, %874)
}

def @func_6731() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) {
  %875 = @func_6453() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %876 = cast(meta[relay.Constant][22] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %877 = reshape(%876, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %878 = @func_1861(%877) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %879 = %875.0;
  %880 = %878.1;
  (%879, %880, meta[relay.Constant][22] /* ty=Tensor[(1260), float64] */)
}

def @func_1585() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %881 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %882 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %883 = %881.0;
  %884 = %882.2;
  (%883, %884)
}

def @func_958() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %885 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  %886 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
  (%885, %886)
}

def @func_2534() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  %887 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %888 = %887.0;
  %889 = cast(%888, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %890 = reshape(%889, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %891 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %892 = cast(meta[relay.Constant][23] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %893 = cast(meta[relay.Constant][23] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %894 = cast(meta[relay.Constant][23] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %895 = reshape(%892, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %896 = reshape(%893, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %897 = reshape(%894, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %898 = @func_2200(%890) /* ty=Tensor[(11, 13, 11), bool] */;
  %899 = %891.0;
  %900 = @func_2249(%895, %896, %897) /* ty=Tensor[(6, 9, 12), bool] */;
  (%888, %898, %899, %900, meta[relay.Constant][23] /* ty=Tensor[(648), float32] */)
}

def @func_1011() -> Tensor[(11, 13, 11), float64] {
  @func_102() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_608() -> (Tensor[(11, 13, 11), float64],) {
  %901 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %902 = %901.0;
  (%902,)
}

def @func_3112() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) {
  %903 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %904 = %903.0;
  %905 = cast(%904, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %906 = reshape(%905, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %907 = @func_795(%906) /* ty=(Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) */;
  %908 = %907.0;
  (%904, %908)
}

def @func_8479() -> (Tensor[(11, 13, 11), float64],) {
  %909 = @func_7720() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %910 = %909.0;
  (%910,)
}

def @func_8766(%var_8753: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(352, 1), float64]) {
  %911 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %912 = cast(meta[relay.Constant][24] /* ty=Tensor[(352, 1), float64] */, dtype="float64") /* ty=Tensor[(352, 1), float64] */;
  %913 = reshape(%912, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float64] */;
  %914 = @func_2443(%913) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */;
  %915 = cast(%var_8753, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %916 = reshape(%915, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %917 = @func_1861(%916) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %918 = cast(meta[relay.Constant][24] /* ty=Tensor[(352, 1), float64] */, dtype="float64") /* ty=Tensor[(352, 1), float64] */;
  %919 = %911.0;
  %920 = %914.0;
  %921 = %917.3;
  %922 = cosh(%918) /* ty=Tensor[(352, 1), float64] */;
  (%919, %920, %921, %var_8753, %922)
}

def @func_7720() -> (Tensor[(11, 13, 11), float64],) {
  %923 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
  (%923,)
}

def @func_1714() -> (Tensor[(11, 13, 11), float64],) {
  %924 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %925 = %924.0;
  (%925,)
}

def @func_7644() -> Tensor[(11, 13, 11), float64] {
  %926 = @func_3686() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %926.0
}

def @func_8742() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %927 = @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %928 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %929 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  %930 = %927.1;
  %931 = @func_4573() /* ty=Tensor[(11, 13, 11), float64] */;
  %932 = %928.0;
  (%929, %930, %931, %932)
}

def @func_7474(%var_7388: Tensor[(6, 7, 3), float32], %var_7417: float64, %var_7418: Tensor[(896), float64], %var_7443: Tensor[(128), float32], %var_7444: Tensor[(384), float32], %var_7447: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), uint32], Tensor[(8, 12, 10), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64], Tensor[(24), int32], Tensor[(128), float32], Tensor[(384), float32], Tensor[(10, 9, 13), float64], Tensor[(1260), float64], Tensor[(6, 7, 3), int16]) {
  %933 = @func_4099() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %934 = @func_4863() /* ty=Tensor[(6, 7, 3), float32] */;
  %935 = cast(%var_7388, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
  %936 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(%934, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %939 = greater_equal(%937, %938) /* ty=Tensor[(6, 7, 3), bool] */;
  %940 = cast(%939, dtype="uint32") /* ty=Tensor[(6, 7, 3), uint32] */;
  %941 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%934, dtype="uint32") /* ty=Tensor[(6, 7, 3), uint32] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %944 = cast(%var_7417, dtype="float64") /* ty=float64 */;
  %945 = cast(%var_7418, dtype="float64") /* ty=Tensor[(896), float64] */;
  %946 = reshape(%944, newshape=[]) /* ty=float64 */;
  %947 = reshape(%945, newshape=[896]) /* ty=Tensor[(896), float64] */;
  %948 = @func_3238(%946, %947) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(8, 14, 8), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64]) */;
  %949 = cast(meta[relay.Constant][25] /* ty=Tensor[(24), int32] */, dtype="int32") /* ty=Tensor[(24), int32] */;
  %950 = cast(%var_7443, dtype="float32") /* ty=Tensor[(128), float32] */;
  %951 = cast(%var_7444, dtype="float32") /* ty=Tensor[(384), float32] */;
  %952 = reshape(%949, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %953 = reshape(%950, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %954 = reshape(%951, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), float32] */;
  %955 = @func_4241(%952, %953, %954) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) */;
  %956 = cast(%var_7447, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %957 = reshape(%956, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %958 = @func_1861(%957) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %959 = cast(%934, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %960 = acos(%959) /* ty=Tensor[(6, 7, 3), float32] */;
  %961 = cast(%960, dtype="int8") /* ty=Tensor[(6, 7, 3), int8] */;
  %962 = cast(%var_7417, dtype="int8") /* ty=int8 */;
  %963 = bitwise_and(%961, %962) /* ty=Tensor[(6, 7, 3), int8] */;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(6, 7, 3), float64] */;
  %965 = sin(%964) /* ty=Tensor[(6, 7, 3), float64] */;
  %966 = cast(%965, dtype="int16") /* ty=Tensor[(6, 7, 3), int16] */;
  %967 = cast(%var_7417, dtype="int16") /* ty=int16 */;
  %968 = %933.0;
  %969 = @func_4837() /* ty=Tensor[(11, 13, 11), float64] */;
  %970 = maximum(%942, %943) /* ty=Tensor[(6, 7, 3), uint32] */;
  %971 = %948.0;
  %972 = %955.0;
  %973 = %958.2;
  %974 = logical_xor(%966, %967) /* ty=Tensor[(6, 7, 3), int16] */;
  (%968, %969, %970, %971, %var_7418, %972, meta[relay.Constant][25] /* ty=Tensor[(24), int32] */, %var_7443, %var_7444, %973, %var_7447, %974)
}

def @func_6148(%var_6145: Tensor[(3, 4, 5), float64]) -> Tensor[(3, 4, 5), float64] {
  %975 = cast(%var_6145, dtype="float64") /* ty=Tensor[(3, 4, 5), float64] */;
  tan(%975) /* ty=Tensor[(3, 4, 5), float64] */
}

def @func_5344(%var_5330: Tensor[(16, 8, 6), float32]) -> Tensor[(16, 8, 6), float32] {
  %976 = cast(%var_5330, dtype="float32") /* ty=Tensor[(16, 8, 6), float32] */;
  log10(%976) /* ty=Tensor[(16, 8, 6), float32] */
}

def @func_7033() -> (Tensor[(11, 13, 11), float64],) {
  %977 = @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %978 = %977.0;
  (%978,)
}

def @func_2877(%var_2869: Tensor[(16, 4, 2), float32], %var_2870: Tensor[(16, 4, 2), float32]) -> Tensor[(16, 4, 2), float32] {
  %979 = cast(%var_2870, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %980 = shape_of(%var_2869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%var_2869, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%981, %982) /* ty=Tensor[(16, 4, 2), float32] */
}

def @func_6120(%var_6107: Tensor[(8, 15, 8), bool]) -> (Tensor[(8, 15, 8), bool], Tensor[(8, 15, 8), float32]) {
  %983 = cast(%var_6107, dtype="bool") /* ty=Tensor[(8, 15, 8), bool] */;
  %984 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 15, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 15, 8), bool] */, dtype="bool") /* ty=Tensor[(8, 15, 8), bool] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %987 = cast(%var_6107, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %988 = logical_or(%985, %986) /* ty=Tensor[(8, 15, 8), bool] */;
  %989 = sqrt(%987) /* ty=Tensor[(8, 15, 8), float32] */;
  (%988, %989)
}

def @func_6517() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %990 = @func_5143() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %991 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  %992 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
  %993 = %990.0;
  (%991, %992, %993)
}

def @func_9091(%var_9088: Tensor[(14, 10, 9), float64]) -> Tensor[(14, 10, 9), float64] {
  %994 = cast(%var_9088, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  sqrt(%994) /* ty=Tensor[(14, 10, 9), float64] */
}

def @func_3551(%var_3543: Tensor[(10, 13, 2), float32]) -> (Tensor[(10, 13, 2), float32], Tensor[(11, 13, 11), float64], Tensor[(2, 448), float64]) {
  %995 = cast(%var_3543, dtype="float32") /* ty=Tensor[(10, 13, 2), float32] */;
  %996 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 448), float64] */, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %997 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 448), float64] */, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %998 = reshape(%996, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
  %999 = reshape(%997, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
  %1000 = @func_2860(%998, %999) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */;
  %1001 = asin(%995) /* ty=Tensor[(10, 13, 2), float32] */;
  %1002 = %1000.0;
  (%1001, %1002, meta[relay.Constant][27] /* ty=Tensor[(2, 448), float64] */)
}

def @func_745() -> (Tensor[(11, 13, 11), float64],) {
  %1003 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_1181() -> (Tensor[(11, 13, 11), float64],) {
  %1005 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1006 = %1005.1;
  (%1006,)
}

def @func_7332() -> (Tensor[(11, 13, 11), float64],) {
  %1007 = @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1008 = %1007.0;
  (%1008,)
}

def @func_3072() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %1009 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1010 = @func_2415() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1011 = %1009.1;
  %1012 = %1010.2;
  (%1011, %1012)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6301() -> (Tensor[(11, 13, 11), float64],) {
  %0 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_2049(%var_2037: Tensor[(16, 6, 15), float64]) -> (Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) {
  %2 = cast(%var_2037, dtype="float64") /* ty=Tensor[(16, 6, 15), float64] */;
  %3 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %4 = sin(%2) /* ty=Tensor[(16, 6, 15), float64] */;
  %5 = %3.0;
  (%4, %5)
}

def @func_4620() -> (Tensor[(11, 13, 11), float64], Tensor[(648), float32]) {
  %11 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(648), float32]) {
    %6 = @func_4573() /* ty=Tensor[(11, 13, 11), float64] */;
    %7 = cast(%6, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %8 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
    %9 = log2(%7) /* ty=Tensor[(11, 13, 11), float64] */;
    %10 = %8.4;
    (%9, %10)
  };
  %11() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(648), float32]) */
}

def @func_7888(%var_7886: Tensor[(10, 6, 10), float32], %var_7887: Tensor[(10, 6, 10), float32]) -> (Tensor[(648), float32], Tensor[(10, 6, 10), float32], Tensor[(11, 13, 11), float64]) {
  @func_7884(%var_7886, %var_7887) /* ty=(Tensor[(648), float32], Tensor[(10, 6, 10), float32], Tensor[(11, 13, 11), float64]) */
}

def @func_6303() -> (Tensor[(11, 13, 11), float64],) {
  @func_6301() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_7116() -> (Tensor[(6, 9, 12), bool],) {
  %12 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %13 = %12.1;
  (%13,)
}

def @func_1104() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) {
  %28 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) {
    %14 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %15 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %16 = %15.1;
    %17 = cast(%16, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %18 = reshape(%17, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
    %19 = @func_795(%18) /* ty=(Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) */;
    %20 = %19.0;
    %21 = cast(%20, dtype="int16") /* ty=Tensor[(11, 13, 11), int16] */;
    %22 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
    %23 = cast(%16, dtype="int16") /* ty=Tensor[(11, 13, 11), int16] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %25 = %14.0;
    %26 = add(%23, %24) /* ty=Tensor[(11, 13, 11), int16] */;
    %27 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
    (%25, %26, %27)
  };
  %28() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */
}

def @func_8474() -> (Tensor[(11, 13, 11), float64],) {
  %31 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %29 = @func_2745() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %30 = %29.1;
    (%30,)
  };
  %31() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_565() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %38 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %32 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %33 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %34 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %35 = %32.0;
    %36 = %33.0;
    %37 = %34.0;
    (%35, %36, %37)
  };
  %38() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_7913() -> Tensor[(11, 13, 11), float64] {
  %40 = fn () -> Tensor[(11, 13, 11), float64] {
    %39 = @func_5143() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %39.0
  };
  %40() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_9023(%var_9022: Tensor[(24), int32]) -> (Tensor[(11, 13, 11), float64], Tensor[(1573), float64], Tensor[(24), int32], Tensor[(384), int32]) {
  %49 = fn (%var_9018: Tensor[(24), int32]) -> (Tensor[(11, 13, 11), float64], Tensor[(1573), float64], Tensor[(24), int32], Tensor[(384), int32]) {
    %41 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %42 = cast(%var_9018, dtype="int32") /* ty=Tensor[(24), int32] */;
    %43 = cast(meta[relay.Constant][0] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %44 = reshape(%42, newshape=[3, 8, 1]) /* ty=Tensor[(3, 8, 1), int32] */;
    %45 = reshape(%43, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), int32] */;
    %46 = @func_3393(%44, %45) /* ty=(Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) */;
    %47 = %41.0;
    %48 = %46.2;
    (%47, %48, %var_9018, meta[relay.Constant][0] /* ty=Tensor[(384), int32] */)
  };
  %49(%var_9022) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(1573), float64], Tensor[(24), int32], Tensor[(384), int32]) */
}

def @func_7562(%var_7561: Tensor[(3, 7, 10), float32]) -> Tensor[(3, 7, 10), float64] {
  %56 = fn (%var_7532: Tensor[(3, 7, 10), float32]) -> Tensor[(3, 7, 10), float64] {
    %50 = cast(%var_7532, dtype="float32") /* ty=Tensor[(3, 7, 10), float32] */;
    %51 = sigmoid(%50) /* ty=Tensor[(3, 7, 10), float32] */;
    %52 = cast(%var_7532, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
    %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(%51, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%54, %55) /* ty=Tensor[(3, 7, 10), float64] */
  };
  %56(%var_7561) /* ty=Tensor[(3, 7, 10), float64] */
}

def @func_5419() -> (Tensor[(10, 2, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), float32], Tensor[(10, 2, 12), float64]) {
  %68 = fn () -> (Tensor[(10, 2, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), float32], Tensor[(10, 2, 12), float64]) {
    %57 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
    %58 = sqrt(%57) /* ty=Tensor[(10, 2, 12), float32] */;
    %59 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
    %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
    %61 = cast(%58, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
    %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %63 = cast(%58, dtype="float64") /* ty=Tensor[(10, 2, 12), float64] */;
    %64 = power(%61, %62) /* ty=Tensor[(10, 2, 12), float32] */;
    %65 = @func_2685() /* ty=Tensor[(11, 13, 11), float64] */;
    %66 = @func_4863() /* ty=Tensor[(6, 7, 3), float32] */;
    %67 = sinh(%63) /* ty=Tensor[(10, 2, 12), float64] */;
    (%64, %65, %66, %67)
  };
  %68() /* ty=(Tensor[(10, 2, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), float32], Tensor[(10, 2, 12), float64]) */
}

def @func_2254(%var_2251: Tensor[(6, 9, 12), float32], %var_2252: Tensor[(6, 9, 12), float32], %var_2253: Tensor[(6, 9, 12), float32]) -> Tensor[(6, 9, 12), bool] {
  @func_2249(%var_2251, %var_2252, %var_2253) /* ty=Tensor[(6, 9, 12), bool] */
}

def @func_9664(%var_9663: Tensor[(4, 11, 1), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(4, 11, ?), bool], Tensor[(4, 11, ?), bool], Tensor[(11, 13, 11), float64], Tensor[(4, 11, 1), float32], Tensor[(4, 11, ?), bool]) {
  %99 = fn (%var_9590: Tensor[(4, 11, 1), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(4, 11, ?), bool], Tensor[(4, 11, ?), bool], Tensor[(11, 13, 11), float64], Tensor[(4, 11, 1), float32], Tensor[(4, 11, ?), bool]) {
    %69 = @func_7183() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %70 = cast(%var_9590, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
    %71 = log2(%70) /* ty=Tensor[(4, 11, 1), float32] */;
    %72 = cast(%var_9590, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
    %74 = cast(%71, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %76 = greater(%74, %75) /* ty=Tensor[(4, 11, ?), bool] */;
    %77 = cast(%var_9590, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%76, dtype="bool") /* ty=Tensor[(4, 11, ?), bool] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %81 = cast(%71, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %82 = shape_of(%var_9590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %83 = cast(%var_9590, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %85 = @func_8742() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %86 = cast(%71, dtype="float64") /* ty=Tensor[(4, 11, 1), float64] */;
    %87 = erf(%86) /* ty=Tensor[(4, 11, 1), float64] */;
    %88 = cast(%87, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
    %89 = cast(%87, dtype="bool") /* ty=Tensor[(4, 11, 1), bool] */;
    %90 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
    %91 = cast(%76, dtype="bool") /* ty=Tensor[(4, 11, ?), bool] */;
    %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %93 = %69.0;
    %94 = greater_equal(%79, %80) /* ty=Tensor[(4, 11, ?), bool] */;
    %95 = less_equal(%83, %84) /* ty=Tensor[(4, 11, ?), bool] */;
    %96 = %85.0;
    %97 = asin(%88) /* ty=Tensor[(4, 11, 1), float32] */;
    %98 = logical_and(%91, %92) /* ty=Tensor[(4, 11, ?), bool] */;
    (%93, %94, %95, %96, %97, %98)
  };
  %99(%var_9663) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(4, 11, ?), bool], Tensor[(4, 11, ?), bool], Tensor[(11, 13, 11), float64], Tensor[(4, 11, 1), float32], Tensor[(4, 11, ?), bool]) */
}

def @func_7572() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %100 = @func_4913() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %101 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %102 = %100.1;
  %103 = %101.0;
  (%102, %103)
}

def @func_1247(%var_1245: Tensor[(12, 8, 11), uint64], %var_1246: Tensor[(12, 8, 11), uint64]) -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) {
  %121 = fn (%var_1228: Tensor[(12, 8, 11), uint64], %var_1229: Tensor[(12, 8, 11), uint64]) -> (Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) {
    %104 = cast(%var_1229, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
    %105 = shape_of(%var_1228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %106 = cast(%var_1228, dtype="int64") /* ty=Tensor[(12, 8, 11), int64] */;
    %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %108 = cast(%var_1229, dtype="bool") /* ty=Tensor[(12, 8, 11), bool] */;
    %109 = shape_of(%var_1228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %110 = cast(%var_1228, dtype="bool") /* ty=Tensor[(12, 8, 11), bool] */;
    %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %112 = not_equal(%110, %111) /* ty=Tensor[(12, 8, 11), bool] */;
    %113 = cast(%112, dtype="int16") /* ty=Tensor[(12, 8, 11), int16] */;
    %114 = shape_of(%var_1228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %115 = cast(%var_1228, dtype="int16") /* ty=Tensor[(12, 8, 11), int16] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %117 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %118 = multiply(%106, %107) /* ty=Tensor[(12, 8, 11), int64] */;
    %119 = bitwise_and(%115, %116) /* ty=Tensor[(12, 8, 11), int16] */;
    %120 = %117.0;
    (%118, %119, %120)
  };
  %121(%var_1245, %var_1246) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */
}

def @func_7063() -> (Tensor[(11, 13, 11), float64],) {
  %122 = @func_3686() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %123 = %122.0;
  (%123,)
}

def @func_2133() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_2131() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6841(%var_6752: Tensor[(1260), float64], %var_6802: Tensor[(900), float64], %var_6822: Tensor[(6, 9, 12), bool], %var_6828: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 10, 9), float64], Tensor[(900), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), float64], Tensor[(1260), uint32], Tensor[(11, 13, 11), bool]) {
  %124 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %125 = cast(%var_6752, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %126 = reshape(%125, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %127 = @func_1405(%126) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %128 = @func_5219() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %129 = @func_2789() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %130 = cast(%var_6802, dtype="float64") /* ty=Tensor[(900), float64] */;
  %131 = reshape(%130, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), float64] */;
  %132 = @func_5279() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %133 = @func_5091() /* ty=(Tensor[(6, 9, 12), bool],) */;
  %134 = %133.0;
  %135 = cast(%var_6822, dtype="float64") /* ty=Tensor[(6, 9, 12), float64] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="float64") /* ty=Tensor[(6, 9, 12), float64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %139 = @func_6731() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) */;
  %140 = %139.2;
  %141 = cast(%var_6828, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(1), int32] */;
  %143 = cast(%140, dtype="uint32") /* ty=Tensor[(1260), uint32] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %145 = %132.0;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %147 = reshape(%146, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %148 = %124.0;
  %149 = %127.0;
  %150 = %128.0;
  %151 = %129.2;
  %152 = @func_4533(%131) /* ty=Tensor[(10, 10, 9), float64] */;
  %153 = divide(%137, %138) /* ty=Tensor[(6, 9, 12), float64] */;
  %154 = right_shift(%143, %144) /* ty=Tensor[(1260), uint32] */;
  %155 = @func_2200(%147) /* ty=Tensor[(11, 13, 11), bool] */;
  (%148, %149, %var_6752, %150, %151, %152, %var_6802, %145, %153, %154, %155)
}

def @func_6560() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_6558() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6243(%var_6240: Tensor[(1, 128), float32], %var_6241: Tensor[(384), float32], %var_6242: Tensor[(5, 128), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), uint64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(1056), uint64], Tensor[(2, 12), int32], Tensor[(384), float32], Tensor[(5, 128), uint32]) {
  %180 = fn (%var_6213: Tensor[(1, 128), float32], %var_6214: Tensor[(384), float32], %var_6223: Tensor[(5, 128), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), uint64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(1056), uint64], Tensor[(2, 12), int32], Tensor[(384), float32], Tensor[(5, 128), uint32]) {
    %156 = cast(meta[relay.Constant][2] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
    %157 = cast(meta[relay.Constant][2] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
    %158 = reshape(%156, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
    %159 = reshape(%157, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
    %160 = @func_1244(%158, %159) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */;
    %161 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
    %162 = cast(meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %163 = reshape(%162, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
    %164 = @func_1405(%163) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
    %165 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 12), int32] */, dtype="int32") /* ty=Tensor[(2, 12), int32] */;
    %166 = cast(%var_6213, dtype="float32") /* ty=Tensor[(1, 128), float32] */;
    %167 = cast(%var_6214, dtype="float32") /* ty=Tensor[(384), float32] */;
    %168 = reshape(%165, newshape=[24]) /* ty=Tensor[(24), int32] */;
    %169 = reshape(%166, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %170 = reshape(%167, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), float32] */;
    %171 = @func_4241(%168, %169, %170) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) */;
    %172 = cast(%var_6213, dtype="uint32") /* ty=Tensor[(1, 128), uint32] */;
    %173 = cast(%var_6223, dtype="uint32") /* ty=Tensor[(5, 128), uint32] */;
    %174 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
    %175 = %160.0;
    %176 = %161.0;
    %177 = %164.0;
    %178 = %171.8;
    %179 = subtract(%172, %173) /* ty=Tensor[(5, 128), uint32] */;
    (%174, %175, meta[relay.Constant][2] /* ty=Tensor[(1056), uint64] */, %176, %177, meta[relay.Constant][3] /* ty=Tensor[(1260), float64] */, %178, meta[relay.Constant][4] /* ty=Tensor[(2, 12), int32] */, %var_6214, %179)
  };
  %180(%var_6240, %var_6241, %var_6242) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), uint64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(1056), uint64], Tensor[(2, 12), int32], Tensor[(384), float32], Tensor[(5, 128), uint32]) */
}

def @func_9038(%var_9031: Tensor[(5, 1, 7), float64]) -> (Tensor[(5, 1, 7), float64],) {
  %181 = cast(%var_9031, dtype="float64") /* ty=Tensor[(5, 1, 7), float64] */;
  %182 = asinh(%181) /* ty=Tensor[(5, 1, 7), float64] */;
  (%182,)
}

def @func_7721() -> (Tensor[(11, 13, 11), float64],) {
  %184 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %183 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
    (%183,)
  };
  %184() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_387() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_610() -> (Tensor[(11, 13, 11), float64],) {
  @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_7034() -> (Tensor[(11, 13, 11), float64],) {
  %187 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %185 = @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %186 = %185.0;
    (%186,)
  };
  %187() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_3976(%var_3971: Tensor[(648), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  %188 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %189 = @func_2026() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %190 = cast(%var_3971, dtype="float32") /* ty=Tensor[(648), float32] */;
  %191 = cast(%var_3971, dtype="float32") /* ty=Tensor[(648), float32] */;
  %192 = cast(%var_3971, dtype="float32") /* ty=Tensor[(648), float32] */;
  %193 = reshape(%190, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %194 = reshape(%191, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %195 = reshape(%192, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
  %196 = %188.1;
  %197 = %189.0;
  %198 = @func_2249(%193, %194, %195) /* ty=Tensor[(6, 9, 12), bool] */;
  (%196, %197, %198, %var_3971)
}

def @func_385() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %199 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %200 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  %201 = %199.0;
  (%200, %201)
}

def @func_8638(%var_8637: Tensor[(1440), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1440, 1), float64], Tensor[(1440), float64]) {
  %210 = fn (%var_8633: Tensor[(1440), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1440, 1), float64], Tensor[(1440), float64]) {
    %202 = @func_6595() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %203 = @func_2492() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %204 = cast(%var_8633, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %205 = reshape(%204, newshape=[1440, 1]) /* ty=Tensor[(1440, 1), float64] */;
    %206 = @func_4040(%205) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(16, 6, 15), float64], Tensor[(1440, 1), float64]) */;
    %207 = %202.0;
    %208 = %203.0;
    %209 = %206.4;
    (%207, %208, %209, %var_8633)
  };
  %210(%var_8637) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1440, 1), float64], Tensor[(1440), float64]) */
}

def @func_1536() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %215 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %211 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %212 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %213 = %211.0;
    %214 = %212.0;
    (%213, %214)
  };
  %215() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_2575() -> Tensor[(11, 13, 11), float64] {
  %217 = fn () -> Tensor[(11, 13, 11), float64] {
    %216 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %216.0
  };
  %217() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6518() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %222 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %218 = @func_5143() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %219 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
    %220 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
    %221 = %218.0;
    (%219, %220, %221)
  };
  %222() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_1329() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %229 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %223 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %224 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %225 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %226 = %223.0;
    %227 = %224.0;
    %228 = %225.0;
    (%226, %227, %228)
  };
  %229() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_3072() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %230 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %231 = @func_2415() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %232 = %230.1;
  %233 = %231.2;
  (%232, %233)
}

def @func_2150() -> (Tensor[(11, 13, 11), float64],) {
  %236 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %234 = @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %235 = %234.0;
    (%235,)
  };
  %236() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_3775(%var_3773: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float32], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64]) {
  @func_3772(%var_3773) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float32], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64]) */
}

def @func_6362(%var_6361: Tensor[(16, 22), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(24, 2), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(16, 22), float64]) {
  %251 = fn (%var_6354: Tensor[(16, 22), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(24, 2), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(16, 22), float64]) {
    %237 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %238 = @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %239 = cast(meta[relay.Constant][5] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
    %240 = reshape(%239, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), float64] */;
    %241 = @func_2709(%240) /* ty=(Tensor[(1, 16, 3), float64], Tensor[(11, 13, 11), float64]) */;
    %242 = @func_3686() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %243 = cast(%var_6354, dtype="float64") /* ty=Tensor[(16, 22), float64] */;
    %244 = reshape(%243, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float64] */;
    %245 = @func_2443(%244) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */;
    %246 = %237.0;
    %247 = %238.0;
    %248 = %241.1;
    %249 = %242.1;
    %250 = %245.1;
    (%246, %247, %248, meta[relay.Constant][5] /* ty=Tensor[(24, 2), float64] */, %249, %250, %var_6354)
  };
  %251(%var_6361) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(24, 2), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(16, 22), float64]) */
}

def @func_2933() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_2931() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_5436() -> Tensor[(11, 13, 11), float64] {
  @func_5434() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_2535() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  %266 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
    %252 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %253 = %252.0;
    %254 = cast(%253, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %255 = reshape(%254, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
    %256 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %257 = cast(meta[relay.Constant][6] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %258 = cast(meta[relay.Constant][6] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %259 = cast(meta[relay.Constant][6] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %260 = reshape(%257, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %261 = reshape(%258, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %262 = reshape(%259, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %263 = @func_2200(%255) /* ty=Tensor[(11, 13, 11), bool] */;
    %264 = %256.0;
    %265 = @func_2249(%260, %261, %262) /* ty=Tensor[(6, 9, 12), bool] */;
    (%253, %263, %264, %265, meta[relay.Constant][6] /* ty=Tensor[(648), float32] */)
  };
  %266() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */
}

def @func_693() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_4782() -> Tensor[(11, 13, 11), float64] {
  %267 = @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %267.0
}

def @func_8076() -> (Tensor[(11, 13, 11), float64],) {
  %270 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %268 = @func_7836() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %269 = %268.1;
    (%269,)
  };
  %270() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_141() -> Tensor[(11, 13, 11), float64] {
  %271 = fn () -> Tensor[(11, 13, 11), float64] {
    @func_102() /* ty=Tensor[(11, 13, 11), float64] */
  };
  %271() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_8885(%var_8859: Tensor[(768), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32]) {
  %272 = @func_6268() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %273 = cast(%var_8859, dtype="float32") /* ty=Tensor[(768), float32] */;
  %274 = reshape(%273, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), float32] */;
  %275 = %272.0;
  %276 = @func_5344(%274) /* ty=Tensor[(16, 8, 6), float32] */;
  (%275, %276, %var_8859)
}

def @func_746() -> (Tensor[(11, 13, 11), float64],) {
  %279 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %277 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %278 = %277.0;
    (%278,)
  };
  %279() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_3349(%var_3347: bool, %var_3348: Tensor[(2, 8, 8), bool]) -> Tensor[(2, 8, 8), bool] {
  %282 = fn (%var_3339: bool, %var_3340: Tensor[(2, 8, 8), bool]) -> Tensor[(2, 8, 8), bool] {
    %280 = cast(%var_3339, dtype="bool") /* ty=bool */;
    %281 = cast(%var_3340, dtype="bool") /* ty=Tensor[(2, 8, 8), bool] */;
    logical_or(%280, %281) /* ty=Tensor[(2, 8, 8), bool] */
  };
  %282(%var_3347, %var_3348) /* ty=Tensor[(2, 8, 8), bool] */
}

def @func_1880() -> Tensor[(11, 13, 11), float64] {
  @func_1878() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_7770() -> Tensor[(11, 13, 11), float64] {
  %283 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %283.1
}

def @func_9041(%var_9039: Tensor[(5, 1, 7), float64]) -> (Tensor[(5, 1, 7), float64],) {
  @func_9038(%var_9039) /* ty=(Tensor[(5, 1, 7), float64],) */
}

def @func_4638() -> (Tensor[(11, 13, 11), float64],) {
  %284 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  (%284,)
}

def @func_1793(%var_1789: Tensor[(1056), uint64]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), bool]) {
  %285 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %286 = cast(meta[relay.Constant][7] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %287 = cast(meta[relay.Constant][7] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
  %288 = reshape(%286, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %289 = reshape(%287, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
  %290 = @func_1244(%288, %289) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */;
  %291 = cast(%var_1789, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %292 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(1056), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %293 = cast(meta[relay.Constant][7] /* ty=Tensor[(1056), uint64] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?), bool] */;
  %295 = %285.0;
  %296 = %290.0;
  %297 = logical_or(%293, %294) /* ty=Tensor[(1056), bool] */;
  (%295, %296, %297)
}

def @func_2805() -> (Tensor[(11, 13, 11), float64],) {
  %298 = @func_2320() /* ty=Tensor[(11, 13, 11), float64] */;
  (%298,)
}

def @func_5091() -> (Tensor[(6, 9, 12), bool],) {
  %299 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %300 = %299.1;
  (%300,)
}

def @func_8888(%var_8886: Tensor[(768), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32]) {
  @func_8885(%var_8886) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(16, 8, 6), float32], Tensor[(768), float32]) */
}

def @func_7332() -> (Tensor[(11, 13, 11), float64],) {
  %301 = @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %302 = %301.0;
  (%302,)
}

def @func_5716() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %303 = @func_2131() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %304 = @func_2149() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %305 = %303.0;
  %306 = %304.0;
  %307 = @func_4573() /* ty=Tensor[(11, 13, 11), float64] */;
  (%305, %306, %307)
}

def @func_4838() -> Tensor[(11, 13, 11), float64] {
  %309 = fn () -> Tensor[(11, 13, 11), float64] {
    %308 = @func_2931() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %308.1
  };
  %309() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6416() -> Tensor[(11, 13, 11), float64] {
  @func_5434() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6895() -> Tensor[(6, 7, 3), float32] {
  %310 = fn () -> Tensor[(6, 7, 3), float32] {
    @func_4863() /* ty=Tensor[(6, 7, 3), float32] */
  };
  %310() /* ty=Tensor[(6, 7, 3), float32] */
}

def @func_6595() -> (Tensor[(11, 13, 11), float64],) {
  %311 = @func_2131() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %312 = %311.1;
  (%312,)
}

def @func_3443(%var_3420: Tensor[(8, 3, 4), float64]) -> (Tensor[(8, 3, 4), float64],) {
  %313 = cast(%var_3420, dtype="float64") /* ty=Tensor[(8, 3, 4), float64] */;
  %314 = atan(%313) /* ty=Tensor[(8, 3, 4), float64] */;
  (%314,)
}

def @func_2200(%var_2185: Tensor[(11, 13, 11), float64]) -> Tensor[(11, 13, 11), bool] {
  %315 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %316 = %315.2;
  %317 = cast(%var_2185, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(%316, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%319, %320) /* ty=Tensor[(11, 13, 11), bool] */
}

def @func_3687() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %323 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %321 = @func_2685() /* ty=Tensor[(11, 13, 11), float64] */;
    %322 = @func_2574() /* ty=Tensor[(11, 13, 11), float64] */;
    (%321, %322)
  };
  %323() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_3446(%var_3444: Tensor[(8, 3, 4), float64]) -> (Tensor[(8, 3, 4), float64],) {
  @func_3443(%var_3444) /* ty=(Tensor[(8, 3, 4), float64],) */
}

def @func_7772() -> Tensor[(11, 13, 11), float64] {
  @func_7770() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_8766(%var_8753: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(352, 1), float64]) {
  %324 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %325 = cast(meta[relay.Constant][8] /* ty=Tensor[(352, 1), float64] */, dtype="float64") /* ty=Tensor[(352, 1), float64] */;
  %326 = reshape(%325, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float64] */;
  %327 = @func_2443(%326) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */;
  %328 = cast(%var_8753, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %329 = reshape(%328, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %330 = @func_1861(%329) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %331 = cast(meta[relay.Constant][8] /* ty=Tensor[(352, 1), float64] */, dtype="float64") /* ty=Tensor[(352, 1), float64] */;
  %332 = %324.0;
  %333 = %327.0;
  %334 = %330.3;
  %335 = cosh(%331) /* ty=Tensor[(352, 1), float64] */;
  (%332, %333, %334, %var_8753, %335)
}

def @func_1148() -> (Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) {
  %342 = fn () -> (Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) {
    %336 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 7, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 15), float32] */;
    %337 = sqrt(%336) /* ty=Tensor[(12, 7, 15), float32] */;
    %338 = cast(%337, dtype="float64") /* ty=Tensor[(12, 7, 15), float64] */;
    %339 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %340 = exp(%338) /* ty=Tensor[(12, 7, 15), float64] */;
    %341 = %339.0;
    (%340, %341)
  };
  %342() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_9273() -> Tensor[(11, 13, 11), float64] {
  %343 = @func_8473() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %343.0
}

def @func_4042(%var_4041: Tensor[(1440, 1), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(16, 6, 15), float64], Tensor[(1440, 1), float64]) {
  %355 = fn (%var_4033: Tensor[(1440, 1), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(16, 6, 15), float64], Tensor[(1440, 1), float64]) {
    %344 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %345 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %346 = %345.1;
    %347 = cast(%346, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %348 = reshape(%347, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
    %349 = cast(%var_4033, dtype="float64") /* ty=Tensor[(1440, 1), float64] */;
    %350 = reshape(%349, newshape=[16, 6, 15]) /* ty=Tensor[(16, 6, 15), float64] */;
    %351 = @func_2049(%350) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */;
    %352 = %344.0;
    %353 = @func_2200(%348) /* ty=Tensor[(11, 13, 11), bool] */;
    %354 = %351.0;
    (%352, %346, %353, %354, %var_4033)
  };
  %355(%var_4041) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(16, 6, 15), float64], Tensor[(1440, 1), float64]) */
}

def @func_8106() -> (Tensor[(11, 13, 11), float64],) {
  %356 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %357 = %356.0;
  (%357,)
}

def @func_7184() -> (Tensor[(11, 13, 11), float64],) {
  %359 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %358 = @func_4837() /* ty=Tensor[(11, 13, 11), float64] */;
    (%358,)
  };
  %359() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_9720(%var_9719: Tensor[(648), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  %368 = fn (%var_9704: Tensor[(648), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
    %360 = cast(%var_9704, dtype="float32") /* ty=Tensor[(648), float32] */;
    %361 = cast(%var_9704, dtype="float32") /* ty=Tensor[(648), float32] */;
    %362 = cast(%var_9704, dtype="float32") /* ty=Tensor[(648), float32] */;
    %363 = reshape(%360, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %364 = reshape(%361, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %365 = reshape(%362, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %366 = @func_2320() /* ty=Tensor[(11, 13, 11), float64] */;
    %367 = @func_2249(%363, %364, %365) /* ty=Tensor[(6, 9, 12), bool] */;
    (%366, %367, %var_9704)
  };
  %368(%var_9719) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */
}

def @func_6177() -> Tensor[(11, 13, 11), float64] {
  @func_6175() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_7482(%var_7476: Tensor[(6, 7, 3), float32], %var_7477: float64, %var_7478: Tensor[(896), float64], %var_7479: Tensor[(128), float32], %var_7480: Tensor[(384), float32], %var_7481: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), uint32], Tensor[(8, 12, 10), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64], Tensor[(24), int32], Tensor[(128), float32], Tensor[(384), float32], Tensor[(10, 9, 13), float64], Tensor[(1260), float64], Tensor[(6, 7, 3), int16]) {
  @func_7474(%var_7476, %var_7477, %var_7478, %var_7479, %var_7480, %var_7481) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), uint32], Tensor[(8, 12, 10), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64], Tensor[(24), int32], Tensor[(128), float32], Tensor[(384), float32], Tensor[(10, 9, 13), float64], Tensor[(1260), float64], Tensor[(6, 7, 3), int16]) */
}

def @func_3113() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) {
  %375 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) {
    %369 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %370 = %369.0;
    %371 = cast(%370, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %372 = reshape(%371, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
    %373 = @func_795(%372) /* ty=(Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) */;
    %374 = %373.0;
    (%370, %374)
  };
  %375() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */
}

def @func_5985() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %376 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %377 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %378 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %379 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %380 = @func_5786() /* ty=Tensor[(11, 13, 11), float64] */;
  %381 = %376.0;
  %382 = %377.1;
  %383 = %378.1;
  %384 = %379.1;
  %385 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  (%380, %381, %382, %383, %384, %385)
}

def @func_9475(%var_9458: Tensor[(6, 9, 12), bool]) -> (Tensor[(6, 9, 12), bool], Tensor[(11, 13, 11), float64]) {
  %386 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %387 = %386.1;
  %388 = cast(%var_9458, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %392 = @func_8479() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %393 = greater_equal(%390, %391) /* ty=Tensor[(6, 9, 12), bool] */;
  %394 = %392.0;
  (%393, %394)
}

def @func_5788() -> Tensor[(11, 13, 11), float64] {
  @func_5786() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_8174() -> (Tensor[(11, 16, 1), float64],) {
  %395 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 1), float64] */;
  %396 = log2(%395) /* ty=Tensor[(11, 16, 1), float64] */;
  (%396,)
}

def @func_9750() -> Tensor[(11, 13, 11), float64] {
  %397 = @func_6517() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %397.1
}

def @func_2931() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %398 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %399 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %400 = %398.0;
  %401 = %399.0;
  (%400, %401)
}

def @func_1514() -> (Tensor[(11, 13, 11), float64],) {
  %404 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %402 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %403 = %402.2;
    (%403,)
  };
  %404() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_4255() -> (Tensor[(11, 13, 11), float64],) {
  %406 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %405 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
    (%405,)
  };
  %406() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_8676() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %407 = @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %408 = @func_5985() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %409 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
  %410 = %407.0;
  %411 = %408.0;
  %412 = %409.0;
  (%410, %411, %412)
}

def @func_4720() -> (Tensor[(11, 13, 11), float64],) {
  @func_4718() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_1407(%var_1406: Tensor[(12, 7, 15), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) {
  %423 = fn (%var_1391: Tensor[(12, 7, 15), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) {
    %413 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %414 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
    %415 = %414.0;
    %416 = cast(%var_1391, dtype="bool") /* ty=Tensor[(12, 7, 15), bool] */;
    %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
    %418 = cast(%415, dtype="bool") /* ty=Tensor[(12, 7, 15), bool] */;
    %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %420 = %413.1;
    %421 = less_equal(%418, %419) /* ty=Tensor[(12, 7, 15), bool] */;
    %422 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
    (%420, %421, %422)
  };
  %423(%var_1406) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */
}

def @func_3241(%var_3239: float64, %var_3240: Tensor[(896), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(8, 14, 8), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64]) {
  %435 = fn (%var_3218: float64, %var_3224: Tensor[(896), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(8, 14, 8), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64]) {
    %424 = cast(%var_3218, dtype="float64") /* ty=float64 */;
    %425 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
    %426 = cast(%var_3224, dtype="float64") /* ty=Tensor[(896), float64] */;
    %427 = cast(%var_3224, dtype="float64") /* ty=Tensor[(896), float64] */;
    %428 = reshape(%426, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
    %429 = reshape(%427, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
    %430 = @func_2860(%428, %429) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */;
    %431 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %432 = floor_divide(%424, %425) /* ty=Tensor[(8, 12, 10), float64] */;
    %433 = %430.1;
    %434 = %431.2;
    (%432, %433, %var_3224, %434)
  };
  %435(%var_3239, %var_3240) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(8, 14, 8), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_422() -> (Tensor[(11, 13, 11), float64],) {
  @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_5032(%var_5029: Tensor[(12, 13, 12), float32], %var_5030: Tensor[(352), float64], %var_5031: Tensor[(128), float32]) -> (Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(352), float64], Tensor[(12, 13, 12), int8], Tensor[(11, 13, 11), float64], Tensor[(12, 13, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(11, 13, 11), float64]) {
  %479 = fn (%var_4922: Tensor[(12, 13, 12), float32], %var_4970: Tensor[(352), float64], %var_5006: Tensor[(128), float32]) -> (Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(352), float64], Tensor[(12, 13, 12), int8], Tensor[(11, 13, 11), float64], Tensor[(12, 13, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(11, 13, 11), float64]) {
    %436 = @func_3920() /* ty=(Tensor[(11, 13, 11), bool],) */;
    %437 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %438 = cast(%var_4970, dtype="float64") /* ty=Tensor[(352), float64] */;
    %439 = reshape(%438, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), float64] */;
    %440 = @func_2443(%439) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */;
    %441 = cast(%var_4922, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
    %442 = atan(%441) /* ty=Tensor[(12, 13, 12), float32] */;
    %443 = cast(%442, dtype="int64") /* ty=Tensor[(12, 13, 12), int64] */;
    %444 = shape_of(%var_4922, dtype="int32") /* ty=Tensor[(3), int32] */;
    %445 = cast(%var_4922, dtype="int64") /* ty=Tensor[(12, 13, 12), int64] */;
    %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %447 = multiply(%445, %446) /* ty=Tensor[(12, 13, 12), int64] */;
    %448 = cast(%var_4922, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="bool") /* ty=Tensor[(12, 13, 12), bool] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %452 = not_equal(%450, %451) /* ty=Tensor[(12, 13, 12), bool] */;
    %453 = cast(%452, dtype="int8") /* ty=Tensor[(12, 13, 12), int8] */;
    %454 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %455 = cast(%447, dtype="int8") /* ty=Tensor[(12, 13, 12), int8] */;
    %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %457 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %458 = cast(%var_4922, dtype="int32") /* ty=Tensor[(12, 13, 12), int32] */;
    %459 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
    %460 = cast(%452, dtype="int32") /* ty=Tensor[(12, 13, 12), int32] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %462 = right_shift(%460, %461) /* ty=Tensor[(12, 13, 12), int32] */;
    %463 = cast(%462, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
    %464 = @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %465 = cast(%var_5006, dtype="float32") /* ty=Tensor[(128), float32] */;
    %466 = cast(%var_5006, dtype="float32") /* ty=Tensor[(128), float32] */;
    %467 = reshape(%465, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
    %468 = reshape(%466, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
    %469 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %470 = %436.0;
    %471 = %437.1;
    %472 = %440.0;
    %473 = logical_xor(%455, %456) /* ty=Tensor[(12, 13, 12), int8] */;
    %474 = %457.0;
    %475 = exp(%463) /* ty=Tensor[(12, 13, 12), float32] */;
    %476 = %464.1;
    %477 = @func_2877(%467, %468) /* ty=Tensor[(16, 4, 2), float32] */;
    %478 = %469.1;
    (%470, %471, %472, %var_4970, %473, %474, %475, %476, %477, %var_5006, %478)
  };
  %479(%var_5029, %var_5030, %var_5031) /* ty=(Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(352), float64], Tensor[(12, 13, 12), int8], Tensor[(11, 13, 11), float64], Tensor[(12, 13, 12), float32], Tensor[(11, 13, 11), float64], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(11, 13, 11), float64]) */
}

def @func_1861(%var_1859: Tensor[(3, 420), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) {
  %480 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %481 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %482 = cast(meta[relay.Constant][12] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %483 = reshape(%482, newshape=[10, 9, 13]) /* ty=Tensor[(10, 9, 13), float64] */;
  %484 = @func_1731(%483) /* ty=(Tensor[(10, 9, 13), float64],) */;
  %485 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %486 = cast(%var_1859, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %487 = reshape(%486, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %488 = @func_1405(%487) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %489 = %480.0;
  %490 = %481.2;
  %491 = %484.0;
  %492 = %485.0;
  %493 = %488.0;
  (%489, %490, %491, meta[relay.Constant][12] /* ty=Tensor[(1170), float64] */, %492, %493, %var_1859)
}

def @func_2712(%var_2710: Tensor[(1, 16, 3), float64]) -> (Tensor[(1, 16, 3), float64], Tensor[(11, 13, 11), float64]) {
  @func_2709(%var_2710) /* ty=(Tensor[(1, 16, 3), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_8176() -> (Tensor[(11, 16, 1), float64],) {
  @func_8174() /* ty=(Tensor[(11, 16, 1), float64],) */
}

def @func_1183() -> (Tensor[(11, 13, 11), float64],) {
  @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_5620(%var_5573: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) {
  %494 = cast(%var_5573, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %495 = reshape(%494, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %496 = @func_1861(%495) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %497 = @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %498 = @func_2320() /* ty=Tensor[(11, 13, 11), float64] */;
  %499 = %496.3;
  %500 = %497.1;
  (%498, %499, %var_5573, %500)
}

def @func_1864(%var_1862: Tensor[(3, 420), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) {
  @func_1861(%var_1862) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */
}

def @func_7646() -> Tensor[(11, 13, 11), float64] {
  @func_7644() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_8222() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %501 = @func_6595() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %502 = @func_7572() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %503 = @func_4638() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %504 = %501.0;
  %505 = %502.0;
  %506 = %503.0;
  (%504, %505, %506)
}

def @func_4535(%var_4534: Tensor[(10, 10, 9), float64]) -> Tensor[(10, 10, 9), float64] {
  %508 = fn (%var_4526: Tensor[(10, 10, 9), float64]) -> Tensor[(10, 10, 9), float64] {
    %507 = cast(%var_4526, dtype="float64") /* ty=Tensor[(10, 10, 9), float64] */;
    exp(%507) /* ty=Tensor[(10, 10, 9), float64] */
  };
  %508(%var_4534) /* ty=Tensor[(10, 10, 9), float64] */
}

def @func_2321() -> Tensor[(11, 13, 11), float64] {
  %509 = fn () -> Tensor[(11, 13, 11), float64] {
    @func_1011() /* ty=Tensor[(11, 13, 11), float64] */
  };
  %509() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_3397(%var_3395: Tensor[(3, 8, 1), int32], %var_3396: Tensor[(3, 8, 16), int32]) -> (Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) {
  @func_3393(%var_3395, %var_3396) /* ty=(Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) */
}

def @func_8327(%var_8322: Tensor[(11, 13, 3), int16], %var_8323: Tensor[(11, 13, 3), int16], %var_8324: Tensor[(1440), float64], %var_8325: Tensor[(896, 1), float64], %var_8326: Tensor[(11, 13, 3), float32]) -> (Tensor[(16, 6, 15), float64], Tensor[(1440), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32], Tensor[(8, 14, 8), float64], Tensor[(896, 1), float64], Tensor[(11, 13, 3), float32], Tensor[(11, 13, 3), float64], Tensor[(11, 13, 11), float64]) {
  %550 = fn (%var_8245: Tensor[(11, 13, 3), int16], %var_8246: Tensor[(11, 13, 3), int16], %var_8261: Tensor[(1440), float64], %var_8288: Tensor[(896, 1), float64], %var_8299: Tensor[(11, 13, 3), float32]) -> (Tensor[(16, 6, 15), float64], Tensor[(1440), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32], Tensor[(8, 14, 8), float64], Tensor[(896, 1), float64], Tensor[(11, 13, 3), float32], Tensor[(11, 13, 3), float64], Tensor[(11, 13, 11), float64]) {
    %510 = cast(%var_8261, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %511 = reshape(%510, newshape=[16, 6, 15]) /* ty=Tensor[(16, 6, 15), float64] */;
    %512 = @func_2049(%511) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */;
    %513 = cast(meta[relay.Constant][13] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %514 = cast(meta[relay.Constant][13] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %515 = cast(meta[relay.Constant][13] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %516 = reshape(%513, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %517 = reshape(%514, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %518 = reshape(%515, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %519 = cast(%var_8288, dtype="float64") /* ty=Tensor[(896, 1), float64] */;
    %520 = cast(%var_8288, dtype="float64") /* ty=Tensor[(896, 1), float64] */;
    %521 = reshape(%519, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
    %522 = reshape(%520, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
    %523 = @func_2860(%521, %522) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */;
    %524 = cast(%var_8245, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
    %525 = asinh(%524) /* ty=Tensor[(11, 13, 3), float32] */;
    %526 = cast(%525, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
    %527 = rsqrt(%526) /* ty=Tensor[(11, 13, 3), float64] */;
    %528 = cast(%var_8246, dtype="int16") /* ty=Tensor[(11, 13, 3), int16] */;
    %529 = shape_of(%var_8245, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%var_8245, dtype="int16") /* ty=Tensor[(11, 13, 3), int16] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %532 = add(%530, %531) /* ty=Tensor[(11, 13, 3), int16] */;
    %533 = cast(%532, dtype="int32") /* ty=Tensor[(11, 13, 3), int32] */;
    %534 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
    %535 = cast(%527, dtype="int32") /* ty=Tensor[(11, 13, 3), int32] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %537 = left_shift(%535, %536) /* ty=Tensor[(11, 13, 3), int32] */;
    %538 = cast(%537, dtype="float32") /* ty=Tensor[(11, 13, 3), float32] */;
    %539 = cast(%var_8299, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
    %540 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
    %541 = cast(%525, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
    %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %543 = @func_7033() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %544 = %512.0;
    %545 = @func_2249(%516, %517, %518) /* ty=Tensor[(6, 9, 12), bool] */;
    %546 = %523.1;
    %547 = acosh(%538) /* ty=Tensor[(11, 13, 3), float32] */;
    %548 = mod(%541, %542) /* ty=Tensor[(11, 13, 3), float64] */;
    %549 = %543.0;
    (%544, %var_8261, %545, meta[relay.Constant][13] /* ty=Tensor[(648), float32] */, %546, %var_8288, %547, %548, %549)
  };
  %550(%var_8322, %var_8323, %var_8324, %var_8325, %var_8326) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(1440), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32], Tensor[(8, 14, 8), float64], Tensor[(896, 1), float64], Tensor[(11, 13, 3), float32], Tensor[(11, 13, 3), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_171() -> (Tensor[(11, 13, 11), float64],) {
  %552 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %551 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_3393(%var_3382: Tensor[(3, 8, 1), int32], %var_3383: Tensor[(3, 8, 16), int32]) -> (Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) {
  %553 = cast(%var_3382, dtype="bool") /* ty=Tensor[(3, 8, 1), bool] */;
  %554 = cast(%var_3383, dtype="bool") /* ty=Tensor[(3, 8, 16), bool] */;
  %555 = cast(meta[relay.Constant][14] /* ty=Tensor[(1573), float64] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %556 = reshape(%555, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
  %557 = greater_equal(%553, %554) /* ty=Tensor[(3, 8, 16), bool] */;
  %558 = @func_2200(%556) /* ty=Tensor[(11, 13, 11), bool] */;
  (%557, %558, meta[relay.Constant][14] /* ty=Tensor[(1573), float64] */)
}

def @func_6012() -> (Tensor[(11, 13, 11), float64],) {
  %561 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %559 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %560 = %559.1;
    (%560,)
  };
  %561() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2103() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %562 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %563 = @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %564 = %562.0;
  %565 = %563.1;
  (%564, %565)
}

def @func_7218() -> (Tensor[(11, 13, 11), float64],) {
  @func_7216() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2445(%var_2444: Tensor[(11, 2, 16), float64]) -> (Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) {
  %570 = fn (%var_2427: Tensor[(11, 2, 16), float64]) -> (Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) {
    %566 = cast(%var_2427, dtype="float64") /* ty=Tensor[(11, 2, 16), float64] */;
    %567 = @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %568 = cosh(%566) /* ty=Tensor[(11, 2, 16), float64] */;
    %569 = %567.0;
    (%568, %569)
  };
  %570(%var_2444) /* ty=(Tensor[(11, 2, 16), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_9305() -> (Tensor[(11, 13, 11), float64],) {
  %573 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %571 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %572 = %571.0;
    (%572,)
  };
  %573() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @main(%var_9800: Tensor[(8, 15, 5), uint32], %var_9801: Tensor[(8, 15, 5), uint32], %var_9805: Tensor[(8, 15, 5), uint32], %var_9828: Tensor[(8, 15, 5), float32]) -> (Tensor[(10, 10, 9), float64], Tensor[(900), float64], Tensor[(8, 15, 5), float64], Tensor[(8, 15, 5), float32]) {
  %574 = cast(meta[relay.Constant][15] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %575 = reshape(%574, newshape=[10, 10, 9]) /* ty=Tensor[(10, 10, 9), float64] */;
  %576 = cast(%var_9801, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %577 = shape_of(%var_9800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%var_9800, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %580 = less(%578, %579) /* ty=Tensor[(8, 15, 5), bool] */;
  %581 = cast(%var_9805, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %582 = shape_of(%var_9801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_9801, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %585 = floor_mod(%583, %584) /* ty=Tensor[(8, 15, 5), float64] */;
  %586 = cast(%585, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %587 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%580, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %590 = divide(%588, %589) /* ty=Tensor[(8, 15, 5), float32] */;
  %591 = cast(%var_9828, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%590, dtype="bool") /* ty=Tensor[(8, 15, 5), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %595 = greater(%593, %594) /* ty=Tensor[(8, 15, 5), bool] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %597 = cast(%var_9801, dtype="float64") /* ty=Tensor[(8, 15, 5), float64] */;
  %598 = log2(%597) /* ty=Tensor[(8, 15, 5), float64] */;
  %599 = cast(%598, dtype="float32") /* ty=Tensor[(8, 15, 5), float32] */;
  %600 = @func_4533(%575) /* ty=Tensor[(10, 10, 9), float64] */;
  %601 = sinh(%596) /* ty=Tensor[(8, 15, 5), float64] */;
  %602 = exp(%599) /* ty=Tensor[(8, 15, 5), float32] */;
  (%600, meta[relay.Constant][15] /* ty=Tensor[(900), float64] */, %601, %602)
}

def @func_8787() -> Tensor[(11, 13, 11), float64] {
  %603 = @func_6731() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) */;
  %603.1
}

def @func_9558() -> (Tensor[(11, 13, 11), float64],) {
  %606 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %604 = @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %605 = %604.0;
    (%605,)
  };
  %606() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2807() -> (Tensor[(11, 13, 11), float64],) {
  @func_2805() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_4718() -> (Tensor[(11, 13, 11), float64],) {
  %607 = @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %608 = %607.3;
  (%608,)
}

def @func_8108() -> (Tensor[(11, 13, 11), float64],) {
  @func_8106() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_798(%var_796: Tensor[(11, 13, 11), float64]) -> (Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) {
  @func_795(%var_796) /* ty=(Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) */
}

def @func_596() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %613 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %609 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %610 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %611 = %609.0;
    %612 = %610.1;
    (%611, %612)
  };
  %613() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_8087(%var_8085: Tensor[(10, 13, 16), int32]) -> Tensor[(10, 13, 16), bool] {
  @func_8084(%var_8085) /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_691() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %614 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %615 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %616 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  %617 = %614.1;
  %618 = %615.0;
  (%616, %617, %618)
}

def @func_2995() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %625 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %619 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %620 = @func_1714() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %621 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %622 = %619.0;
    %623 = %620.0;
    %624 = %621.0;
    (%622, %623, %624)
  };
  %625() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6151(%var_6149: Tensor[(3, 4, 5), float64]) -> Tensor[(3, 4, 5), float64] {
  @func_6148(%var_6149) /* ty=Tensor[(3, 4, 5), float64] */
}

def @func_9255() -> (Tensor[(11, 13, 11), float64],) {
  @func_9253() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2034() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %626 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %627 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %628 = %626.0;
  %629 = %627.2;
  (%628, %629)
}

def @func_2667() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %636 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %630 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %631 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %632 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %633 = %630.0;
    %634 = %631.0;
    %635 = %632.0;
    (%633, %634, %635)
  };
  %636() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_5434() -> Tensor[(11, 13, 11), float64] {
  %637 = @func_2492() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %637.0
}

def @func_1647() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_5823(%var_5822: Tensor[(4, 16, 11), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(4, 16, 11), float64]) {
  %644 = fn (%var_5794: Tensor[(4, 16, 11), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(4, 16, 11), float64]) {
    %638 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
    %639 = cast(%var_5794, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
    %640 = sinh(%639) /* ty=Tensor[(4, 16, 11), float64] */;
    %641 = cast(%640, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
    %642 = %638.2;
    %643 = cos(%641) /* ty=Tensor[(4, 16, 11), float64] */;
    (%642, %643)
  };
  %644(%var_5822) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(4, 16, 11), float64]) */
}

def @func_298() -> Tensor[(11, 13, 11), float64] {
  %648 = fn () -> Tensor[(11, 13, 11), float64] {
    %645 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %646 = %645.0;
    %647 = cast(%646, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    cos(%647) /* ty=Tensor[(11, 13, 11), float64] */
  };
  %648() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6597() -> (Tensor[(11, 13, 11), float64],) {
  @func_6595() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_7334() -> (Tensor[(11, 13, 11), float64],) {
  @func_7332() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_608() -> (Tensor[(11, 13, 11), float64],) {
  %649 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %650 = %649.0;
  (%650,)
}

def @func_1731(%var_1728: Tensor[(10, 9, 13), float64]) -> (Tensor[(10, 9, 13), float64],) {
  %651 = cast(%var_1728, dtype="float64") /* ty=Tensor[(10, 9, 13), float64] */;
  %652 = atan(%651) /* ty=Tensor[(10, 9, 13), float64] */;
  (%652,)
}

def @func_7474(%var_7388: Tensor[(6, 7, 3), float32], %var_7417: float64, %var_7418: Tensor[(896), float64], %var_7443: Tensor[(128), float32], %var_7444: Tensor[(384), float32], %var_7447: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 7, 3), uint32], Tensor[(8, 12, 10), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64], Tensor[(24), int32], Tensor[(128), float32], Tensor[(384), float32], Tensor[(10, 9, 13), float64], Tensor[(1260), float64], Tensor[(6, 7, 3), int16]) {
  %653 = @func_4099() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %654 = @func_4863() /* ty=Tensor[(6, 7, 3), float32] */;
  %655 = cast(%var_7388, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="bool") /* ty=Tensor[(6, 7, 3), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = greater_equal(%657, %658) /* ty=Tensor[(6, 7, 3), bool] */;
  %660 = cast(%659, dtype="uint32") /* ty=Tensor[(6, 7, 3), uint32] */;
  %661 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%654, dtype="uint32") /* ty=Tensor[(6, 7, 3), uint32] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %664 = cast(%var_7417, dtype="float64") /* ty=float64 */;
  %665 = cast(%var_7418, dtype="float64") /* ty=Tensor[(896), float64] */;
  %666 = reshape(%664, newshape=[]) /* ty=float64 */;
  %667 = reshape(%665, newshape=[896]) /* ty=Tensor[(896), float64] */;
  %668 = @func_3238(%666, %667) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(8, 14, 8), float64], Tensor[(896), float64], Tensor[(11, 13, 11), float64]) */;
  %669 = cast(meta[relay.Constant][16] /* ty=Tensor[(24), int32] */, dtype="int32") /* ty=Tensor[(24), int32] */;
  %670 = cast(%var_7443, dtype="float32") /* ty=Tensor[(128), float32] */;
  %671 = cast(%var_7444, dtype="float32") /* ty=Tensor[(384), float32] */;
  %672 = reshape(%669, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %673 = reshape(%670, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %674 = reshape(%671, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), float32] */;
  %675 = @func_4241(%672, %673, %674) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) */;
  %676 = cast(%var_7447, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %677 = reshape(%676, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %678 = @func_1861(%677) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %679 = cast(%654, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
  %680 = acos(%679) /* ty=Tensor[(6, 7, 3), float32] */;
  %681 = cast(%680, dtype="int8") /* ty=Tensor[(6, 7, 3), int8] */;
  %682 = cast(%var_7417, dtype="int8") /* ty=int8 */;
  %683 = bitwise_and(%681, %682) /* ty=Tensor[(6, 7, 3), int8] */;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(6, 7, 3), float64] */;
  %685 = sin(%684) /* ty=Tensor[(6, 7, 3), float64] */;
  %686 = cast(%685, dtype="int16") /* ty=Tensor[(6, 7, 3), int16] */;
  %687 = cast(%var_7417, dtype="int16") /* ty=int16 */;
  %688 = %653.0;
  %689 = @func_4837() /* ty=Tensor[(11, 13, 11), float64] */;
  %690 = maximum(%662, %663) /* ty=Tensor[(6, 7, 3), uint32] */;
  %691 = %668.0;
  %692 = %675.0;
  %693 = %678.2;
  %694 = logical_xor(%686, %687) /* ty=Tensor[(6, 7, 3), int16] */;
  (%688, %689, %690, %691, %var_7418, %692, meta[relay.Constant][16] /* ty=Tensor[(24), int32] */, %var_7443, %var_7444, %693, %var_7447, %694)
}

def @func_2686() -> Tensor[(11, 13, 11), float64] {
  %696 = fn () -> Tensor[(11, 13, 11), float64] {
    %695 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %695.0
  };
  %696() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_7969(%var_7968: Tensor[(7, 1, 9), float32]) -> Tensor[(7, 1, 9), float32] {
  %698 = fn (%var_7956: Tensor[(7, 1, 9), float32]) -> Tensor[(7, 1, 9), float32] {
    %697 = cast(%var_7956, dtype="float32") /* ty=Tensor[(7, 1, 9), float32] */;
    atanh(%697) /* ty=Tensor[(7, 1, 9), float32] */
  };
  %698(%var_7968) /* ty=Tensor[(7, 1, 9), float32] */
}

def @func_2105() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_2103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_2036() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6689(%var_6687: Tensor[(14, 13, 16), uint8], %var_6688: Tensor[(14, 13, 16), uint8]) -> (Tensor[(14, 13, 16), bool], Tensor[(11, 13, 11), float64]) {
  %706 = fn (%var_6653: Tensor[(14, 13, 16), uint8], %var_6654: Tensor[(14, 13, 16), uint8]) -> (Tensor[(14, 13, 16), bool], Tensor[(11, 13, 11), float64]) {
    %699 = cast(%var_6654, dtype="bool") /* ty=Tensor[(14, 13, 16), bool] */;
    %700 = shape_of(%var_6653, dtype="int32") /* ty=Tensor[(3), int32] */;
    %701 = cast(%var_6653, dtype="bool") /* ty=Tensor[(14, 13, 16), bool] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %703 = @func_2026() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %704 = less_equal(%701, %702) /* ty=Tensor[(14, 13, 16), bool] */;
    %705 = %703.0;
    (%704, %705)
  };
  %706(%var_6687, %var_6688) /* ty=(Tensor[(14, 13, 16), bool], Tensor[(11, 13, 11), float64]) */
}

def @func_4574() -> Tensor[(11, 13, 11), float64] {
  %707 = fn () -> Tensor[(11, 13, 11), float64] {
    @func_297() /* ty=Tensor[(11, 13, 11), float64] */
  };
  %707() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_3553(%var_3552: Tensor[(10, 13, 2), float32]) -> (Tensor[(10, 13, 2), float32], Tensor[(11, 13, 11), float64], Tensor[(2, 448), float64]) {
  %716 = fn (%var_3543: Tensor[(10, 13, 2), float32]) -> (Tensor[(10, 13, 2), float32], Tensor[(11, 13, 11), float64], Tensor[(2, 448), float64]) {
    %708 = cast(%var_3543, dtype="float32") /* ty=Tensor[(10, 13, 2), float32] */;
    %709 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 448), float64] */, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
    %710 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 448), float64] */, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
    %711 = reshape(%709, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
    %712 = reshape(%710, newshape=[8, 14, 8]) /* ty=Tensor[(8, 14, 8), float64] */;
    %713 = @func_2860(%711, %712) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */;
    %714 = asin(%708) /* ty=Tensor[(10, 13, 2), float32] */;
    %715 = %713.0;
    (%714, %715, meta[relay.Constant][17] /* ty=Tensor[(2, 448), float64] */)
  };
  %716(%var_3552) /* ty=(Tensor[(10, 13, 2), float32], Tensor[(11, 13, 11), float64], Tensor[(2, 448), float64]) */
}

def @func_7157(%var_7156: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) {
  %724 = fn (%var_7131: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) {
    %717 = cast(%var_7131, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %718 = reshape(%717, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %719 = @func_5620(%718) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) */;
    %720 = @func_2745() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %721 = @func_3199() /* ty=Tensor[(11, 13, 11), float64] */;
    %722 = %719.1;
    %723 = %720.1;
    (%721, %722, %var_7131, %723)
  };
  %724(%var_7156) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_1585() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %725 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %726 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %727 = %725.0;
  %728 = %726.2;
  (%727, %728)
}

def @func_3772(%var_3752: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float32], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64]) {
  %729 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %730 = @func_2103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %731 = %730.1;
  %732 = cast(%731, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %733 = cast(%var_3752, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %734 = reshape(%733, newshape=[12, 7, 15]) /* ty=Tensor[(12, 7, 15), float64] */;
  %735 = @func_1405(%734) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 7, 15), bool], Tensor[(11, 13, 11), float64]) */;
  %736 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %737 = @func_2026() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %738 = %729.0;
  %739 = log(%732) /* ty=Tensor[(11, 13, 11), float32] */;
  %740 = %735.2;
  %741 = %736.1;
  %742 = %737.0;
  (%738, %739, %740, %var_3752, %741, %742)
}

def @func_3267() -> Tensor[(11, 13, 11), float64] {
  %744 = fn () -> Tensor[(11, 13, 11), float64] {
    %743 = @func_2994() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %743.0
  };
  %744() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_9091(%var_9088: Tensor[(14, 10, 9), float64]) -> Tensor[(14, 10, 9), float64] {
  %745 = cast(%var_9088, dtype="float64") /* ty=Tensor[(14, 10, 9), float64] */;
  sqrt(%745) /* ty=Tensor[(14, 10, 9), float64] */
}

def @func_3922() -> (Tensor[(11, 13, 11), bool],) {
  @func_3920() /* ty=(Tensor[(11, 13, 11), bool],) */
}

def @func_2790() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %752 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %746 = @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %747 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %748 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %749 = %746.0;
    %750 = %747.0;
    %751 = %748.1;
    (%749, %750, %751)
  };
  %752() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_7884(%var_7838: Tensor[(10, 6, 10), float32], %var_7839: Tensor[(10, 6, 10), float32]) -> (Tensor[(648), float32], Tensor[(10, 6, 10), float32], Tensor[(11, 13, 11), float64]) {
  %753 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
  %754 = cast(%var_7839, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %755 = shape_of(%var_7838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%var_7838, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %758 = maximum(%756, %757) /* ty=Tensor[(10, 6, 10), float32] */;
  %759 = cast(%var_7839, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="float32") /* ty=Tensor[(10, 6, 10), float32] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %763 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %764 = %753.4;
  %765 = mod(%761, %762) /* ty=Tensor[(10, 6, 10), float32] */;
  %766 = %763.0;
  (%764, %765, %766)
}

def @func_1181() -> (Tensor[(11, 13, 11), float64],) {
  %767 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %768 = %767.1;
  (%768,)
}

def @func_8084(%var_8080: Tensor[(10, 13, 16), int32]) -> Tensor[(10, 13, 16), bool] {
  %769 = cast(%var_8080, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %770 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(10, 13, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 13, 16), int32] */, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%771, %772) /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_4552() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %777 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %773 = @func_1513() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %774 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %775 = %773.0;
    %776 = %774.0;
    (%775, %776)
  };
  %777() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_1878() -> Tensor[(11, 13, 11), float64] {
  %778 = @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %778.0
}

def @func_7837() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %783 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %779 = @func_6095() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(54, 12), float32], Tensor[(6, 9, 12), float32]) */;
    %780 = @func_5059() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %781 = %779.0;
    %782 = %780.0;
    (%781, %782)
  };
  %783() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_3200() -> Tensor[(11, 13, 11), float64] {
  %785 = fn () -> Tensor[(11, 13, 11), float64] {
    %784 = @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %784.0
  };
  %785() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_9216() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %790 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %786 = @func_2666() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %787 = @func_8372() /* ty=Tensor[(11, 13, 11), float64] */;
    %788 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
    %789 = %786.0;
    (%787, %788, %789)
  };
  %790() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_3979(%var_3977: Tensor[(648), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) {
  @func_3976(%var_3977) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */
}

def @func_9138() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %795 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %791 = @func_8479() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %792 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %793 = %791.0;
    %794 = %792.0;
    (%793, %794)
  };
  %795() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6985() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %796 = @func_5716() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %797 = @func_6517() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %798 = @func_1878() /* ty=Tensor[(11, 13, 11), float64] */;
  %799 = %796.1;
  %800 = %797.2;
  (%798, %799, %800)
}

def @func_918() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %806 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %801 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %802 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %803 = %801.0;
    %804 = %802.1;
    %805 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
    (%803, %804, %805)
  };
  %806() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6454() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) {
  %812 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) {
    %807 = @func_1645() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %808 = %807.1;
    %809 = cast(%808, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %810 = reshape(%809, newshape=[11, 13, 11]) /* ty=Tensor[(11, 13, 11), float64] */;
    %811 = @func_2200(%810) /* ty=Tensor[(11, 13, 11), bool] */;
    (%808, %811)
  };
  %812() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */
}

def @func_6558() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %813 = @func_5376() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %814 = @func_5478() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %815 = %813.0;
  %816 = %814.0;
  (%815, %816)
}

def @func_9094(%var_9092: Tensor[(14, 10, 9), float64]) -> Tensor[(14, 10, 9), float64] {
  @func_9091(%var_9092) /* ty=Tensor[(14, 10, 9), float64] */
}

def @func_5281() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_5279() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6175() -> Tensor[(11, 13, 11), float64] {
  %817 = @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %817.1
}

def @func_3920() -> (Tensor[(11, 13, 11), bool],) {
  %818 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %819 = %818.1;
  (%819,)
}

def @func_8480() -> (Tensor[(11, 13, 11), float64],) {
  %822 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %820 = @func_7720() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %821 = %820.0;
    (%821,)
  };
  %822() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_3856() -> (Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) {
  %826 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) {
    %823 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
    %824 = @func_2574() /* ty=Tensor[(11, 13, 11), float64] */;
    %825 = %823.3;
    (%824, %825)
  };
  %826() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */
}

def @func_1261(%var_1259: Tensor[(8, 4, 11), bool], %var_1260: Tensor[(8, 4, 11), bool]) -> (Tensor[(8, 4, 11), bool],) {
  %832 = fn (%var_1252: Tensor[(8, 4, 11), bool], %var_1253: Tensor[(8, 4, 11), bool]) -> (Tensor[(8, 4, 11), bool],) {
    %827 = cast(%var_1253, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
    %828 = shape_of(%var_1252, dtype="int32") /* ty=Tensor[(3), int32] */;
    %829 = cast(%var_1252, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
    %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %831 = logical_and(%829, %830) /* ty=Tensor[(8, 4, 11), bool] */;
    (%831,)
  };
  %832(%var_1259, %var_1260) /* ty=(Tensor[(8, 4, 11), bool],) */
}

def @func_6123(%var_6121: Tensor[(8, 15, 8), bool]) -> (Tensor[(8, 15, 8), bool], Tensor[(8, 15, 8), float32]) {
  @func_6120(%var_6121) /* ty=(Tensor[(8, 15, 8), bool], Tensor[(8, 15, 8), float32]) */
}

def @func_6731() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) {
  %833 = @func_6453() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
  %834 = cast(meta[relay.Constant][19] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %835 = reshape(%834, newshape=[3, 420]) /* ty=Tensor[(3, 420), float64] */;
  %836 = @func_1861(%835) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(3, 420), float64]) */;
  %837 = %833.0;
  %838 = %836.1;
  (%837, %838, meta[relay.Constant][19] /* ty=Tensor[(1260), float64] */)
}

def @func_3074() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_3072() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_8970() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %839 = @func_8742() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %840 = @func_1714() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %841 = %839.2;
  %842 = %840.0;
  (%841, %842)
}

def @func_420() -> (Tensor[(11, 13, 11), float64],) {
  %843 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  (%843,)
}

def @func_9178() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_9176() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_5316() -> Tensor[(11, 13, 11), bool] {
  %845 = fn () -> Tensor[(11, 13, 11), bool] {
    %844 = @func_2534() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
    %844.1
  };
  %845() /* ty=Tensor[(11, 13, 11), bool] */
}

def @func_6987() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_6985() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_9253() -> (Tensor[(11, 13, 11), float64],) {
  %846 = @func_5279() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %847 = %846.1;
  (%847,)
}

def @func_8744() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_8742() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_2493() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %854 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %848 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
    %849 = %848.1;
    %850 = cast(%849, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    %851 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %852 = sigmoid(%850) /* ty=Tensor[(11, 13, 11), float64] */;
    %853 = %851.1;
    (%852, %853)
  };
  %854() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_4913() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %855 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
  %856 = @func_3266() /* ty=Tensor[(11, 13, 11), float64] */;
  %857 = %855.1;
  (%856, %857)
}

def @func_5786() -> Tensor[(11, 13, 11), float64] {
  @func_2685() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_5145() -> (Tensor[(11, 13, 11), float64],) {
  @func_5143() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2709(%var_2699: Tensor[(1, 16, 3), float64]) -> (Tensor[(1, 16, 3), float64], Tensor[(11, 13, 11), float64]) {
  %858 = cast(%var_2699, dtype="float64") /* ty=Tensor[(1, 16, 3), float64] */;
  %859 = @func_1714() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %860 = log10(%858) /* ty=Tensor[(1, 16, 3), float64] */;
  %861 = %859.0;
  (%860, %861)
}

def @func_5479() -> (Tensor[(11, 13, 11), float64],) {
  %864 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %862 = @func_3855() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool]) */;
    %863 = %862.0;
    (%863,)
  };
  %864() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_8019() -> Tensor[(11, 13, 11), float64] {
  %866 = fn () -> Tensor[(11, 13, 11), float64] {
    %865 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
    %865.0
  };
  %866() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6418() -> Tensor[(11, 13, 11), float64] {
  @func_6416() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_1953() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_1951() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_8789() -> Tensor[(11, 13, 11), float64] {
  @func_8787() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_8373() -> Tensor[(11, 13, 11), float64] {
  %868 = fn () -> Tensor[(11, 13, 11), float64] {
    %867 = @func_3112() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool]) */;
    %867.0
  };
  %868() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_1796(%var_1794: Tensor[(1056), uint64]) -> (Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), bool]) {
  @func_1793(%var_1794) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(12, 8, 11), int64], Tensor[(1056), bool]) */
}

def @func_2746() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %873 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
    %869 = @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %870 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %871 = %869.0;
    %872 = %870.2;
    (%871, %872)
  };
  %873() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_4784() -> Tensor[(11, 13, 11), float64] {
  @func_4782() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_9550() -> Tensor[(11, 13, 11), float64] {
  %875 = fn () -> Tensor[(11, 13, 11), float64] {
    %874 = @func_6517() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %874.1
  };
  %875() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_2203(%var_2201: Tensor[(11, 13, 11), float64]) -> Tensor[(11, 13, 11), bool] {
  @func_2200(%var_2201) /* ty=Tensor[(11, 13, 11), bool] */
}

def @func_5718() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_5716() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_958() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %876 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
  %877 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
  (%876, %877)
}

def @func_5279() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %878 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %879 = @func_2666() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %880 = @func_2789() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %881 = %878.0;
  %882 = %879.2;
  %883 = @func_297() /* ty=Tensor[(11, 13, 11), float64] */;
  %884 = %880.2;
  (%881, %882, %883, %884)
}

def @func_4864() -> Tensor[(6, 7, 3), float32] {
  %886 = fn () -> Tensor[(6, 7, 3), float32] {
    %885 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 7, 3), float32] */;
    rsqrt(%885) /* ty=Tensor[(6, 7, 3), float32] */
  };
  %886() /* ty=Tensor[(6, 7, 3), float32] */
}

def @func_2131() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %887 = @func_1354() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %888 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %889 = %887.0;
  %890 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  %891 = %888.0;
  (%889, %890, %891)
}

def @func_6269() -> (Tensor[(11, 13, 11), float64],) {
  %894 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %892 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %893 = %892.0;
    (%893,)
  };
  %894() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_1507() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16]) {
  %899 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16]) {
    %895 = @func_1147() /* ty=(Tensor[(12, 7, 15), float64], Tensor[(11, 13, 11), float64]) */;
    %896 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
    %897 = %895.1;
    %898 = %896.1;
    (%897, %898)
  };
  %899() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16]) */
}

def @func_7118() -> (Tensor[(6, 9, 12), bool],) {
  @func_7116() /* ty=(Tensor[(6, 9, 12), bool],) */
}

def @func_9516() -> Tensor[(11, 13, 11), float64] {
  %901 = fn () -> Tensor[(11, 13, 11), float64] {
    %900 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %900.0
  };
  %901() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_6148(%var_6145: Tensor[(3, 4, 5), float64]) -> Tensor[(3, 4, 5), float64] {
  %902 = cast(%var_6145, dtype="float64") /* ty=Tensor[(3, 4, 5), float64] */;
  tan(%902) /* ty=Tensor[(3, 4, 5), float64] */
}

def @func_8224() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_8222() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_6120(%var_6107: Tensor[(8, 15, 8), bool]) -> (Tensor[(8, 15, 8), bool], Tensor[(8, 15, 8), float32]) {
  %903 = cast(%var_6107, dtype="bool") /* ty=Tensor[(8, 15, 8), bool] */;
  %904 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 15, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 15, 8), bool] */, dtype="bool") /* ty=Tensor[(8, 15, 8), bool] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %907 = cast(%var_6107, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %908 = logical_or(%905, %906) /* ty=Tensor[(8, 15, 8), bool] */;
  %909 = sqrt(%907) /* ty=Tensor[(8, 15, 8), float32] */;
  (%908, %909)
}

def @func_2249(%var_2231: Tensor[(6, 9, 12), float32], %var_2232: Tensor[(6, 9, 12), float32], %var_2239: Tensor[(6, 9, 12), float32]) -> Tensor[(6, 9, 12), bool] {
  %910 = cast(%var_2232, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %911 = shape_of(%var_2231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%var_2231, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %914 = mod(%912, %913) /* ty=Tensor[(6, 9, 12), float32] */;
  %915 = cast(%var_2239, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%914, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%917, %918) /* ty=Tensor[(6, 9, 12), bool] */
}

def @func_4380(%var_4377: Tensor[(1, 7, 16), uint64], %var_4378: Tensor[(9, 7, 16), uint64], %var_4379: Tensor[(1260), float64]) -> (Tensor[(9, 7, 16), uint64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64]) {
  %933 = fn (%var_4281: Tensor[(1, 7, 16), uint64], %var_4282: Tensor[(9, 7, 16), uint64], %var_4311: Tensor[(1260), float64]) -> (Tensor[(9, 7, 16), uint64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64]) {
    %919 = cast(%var_4281, dtype="uint64") /* ty=Tensor[(1, 7, 16), uint64] */;
    %920 = cast(%var_4282, dtype="uint64") /* ty=Tensor[(9, 7, 16), uint64] */;
    %921 = cast(%var_4311, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %922 = reshape(%921, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %923 = @func_3772(%922) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float32], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64]) */;
    %924 = cast(meta[relay.Constant][22] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %925 = reshape(%924, newshape=[10, 9, 13]) /* ty=Tensor[(10, 9, 13), float64] */;
    %926 = @func_1731(%925) /* ty=(Tensor[(10, 9, 13), float64],) */;
    %927 = %926.0;
    %928 = cast(%927, dtype="float64") /* ty=Tensor[(10, 9, 13), float64] */;
    %929 = right_shift(%919, %920) /* ty=Tensor[(9, 7, 16), uint64] */;
    %930 = %923.5;
    %931 = @func_2574() /* ty=Tensor[(11, 13, 11), float64] */;
    %932 = log2(%928) /* ty=Tensor[(10, 9, 13), float64] */;
    (%929, meta[relay.Constant][22] /* ty=Tensor[(1170), float64] */, %930, %var_4311, %931, %932)
  };
  %933(%var_4377, %var_4378, %var_4379) /* ty=(Tensor[(9, 7, 16), uint64], Tensor[(1170), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 9, 13), float64]) */
}

def @func_8678() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_8676() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_4640() -> (Tensor[(11, 13, 11), float64],) {
  @func_4638() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_5623(%var_5621: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) {
  @func_5620(%var_5621) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_7065() -> (Tensor[(11, 13, 11), float64],) {
  @func_7063() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_708() -> Tensor[(11, 13, 11), float64] {
  %935 = fn () -> Tensor[(11, 13, 11), float64] {
    %934 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %934.1
  };
  %935() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_9478(%var_9476: Tensor[(6, 9, 12), bool]) -> (Tensor[(6, 9, 12), bool], Tensor[(11, 13, 11), float64]) {
  @func_9475(%var_9476) /* ty=(Tensor[(6, 9, 12), bool], Tensor[(11, 13, 11), float64]) */
}

def @func_5060() -> (Tensor[(11, 13, 11), float64],) {
  %938 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %936 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %937 = %936.1;
    (%937,)
  };
  %938() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_1715() -> (Tensor[(11, 13, 11), float64],) {
  %941 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %939 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %940 = %939.0;
    (%940,)
  };
  %941() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2880(%var_2878: Tensor[(16, 4, 2), float32], %var_2879: Tensor[(16, 4, 2), float32]) -> Tensor[(16, 4, 2), float32] {
  %946 = fn (%var_2869: Tensor[(16, 4, 2), float32], %var_2870: Tensor[(16, 4, 2), float32]) -> Tensor[(16, 4, 2), float32] {
    %942 = cast(%var_2870, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
    %943 = shape_of(%var_2869, dtype="int32") /* ty=Tensor[(3), int32] */;
    %944 = cast(%var_2869, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
    %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%944, %945) /* ty=Tensor[(16, 4, 2), float32] */
  };
  %946(%var_2878, %var_2879) /* ty=Tensor[(16, 4, 2), float32] */
}

def @func_9176() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %947 = @func_608() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %948 = %947.0;
  %949 = @func_8018() /* ty=Tensor[(11, 13, 11), float64] */;
  (%948, %949)
}

def @func_5346(%var_5345: Tensor[(16, 8, 6), float32]) -> Tensor[(16, 8, 6), float32] {
  %951 = fn (%var_5330: Tensor[(16, 8, 6), float32]) -> Tensor[(16, 8, 6), float32] {
    %950 = cast(%var_5330, dtype="float32") /* ty=Tensor[(16, 8, 6), float32] */;
    log10(%950) /* ty=Tensor[(16, 8, 6), float32] */
  };
  %951(%var_5345) /* ty=Tensor[(16, 8, 6), float32] */
}

def @func_4100() -> (Tensor[(11, 13, 11), float64],) {
  %954 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %952 = @func_2666() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %953 = %952.1;
    (%953,)
  };
  %954() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_1355() -> (Tensor[(11, 13, 11), float64],) {
  %957 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %955 = @func_745() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %956 = %955.0;
    (%956,)
  };
  %957() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_5377() -> (Tensor[(11, 13, 11), float64],) {
  %960 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %958 = @func_1103() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), int16], Tensor[(11, 13, 11), float64]) */;
    %959 = %958.2;
    (%959,)
  };
  %960() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_4245(%var_4242: Tensor[(24), int32], %var_4243: Tensor[(128), float32], %var_4244: Tensor[(3, 8, 16), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) {
  %993 = fn (%var_4168: Tensor[(24), int32], %var_4183: Tensor[(128), float32], %var_4208: Tensor[(3, 8, 16), float32]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) {
    %961 = @func_3920() /* ty=(Tensor[(11, 13, 11), bool],) */;
    %962 = cast(%var_4183, dtype="float32") /* ty=Tensor[(128), float32] */;
    %963 = cast(%var_4183, dtype="float32") /* ty=Tensor[(128), float32] */;
    %964 = reshape(%962, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
    %965 = reshape(%963, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
    %966 = cast(%var_4168, dtype="int32") /* ty=Tensor[(24), int32] */;
    %967 = cast(meta[relay.Constant][23] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %968 = reshape(%966, newshape=[3, 8, 1]) /* ty=Tensor[(3, 8, 1), int32] */;
    %969 = reshape(%967, newshape=[3, 8, 16]) /* ty=Tensor[(3, 8, 16), int32] */;
    %970 = @func_3393(%968, %969) /* ty=(Tensor[(3, 8, 16), bool], Tensor[(11, 13, 11), bool], Tensor[(1573), float64]) */;
    %971 = %970.0;
    %972 = cast(%971, dtype="float64") /* ty=Tensor[(3, 8, 16), float64] */;
    %973 = acos(%972) /* ty=Tensor[(3, 8, 16), float64] */;
    %974 = cast(%971, dtype="float32") /* ty=Tensor[(3, 8, 16), float32] */;
    %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
    %976 = cast(%973, dtype="float32") /* ty=Tensor[(3, 8, 16), float32] */;
    %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %978 = floor_divide(%976, %977) /* ty=Tensor[(3, 8, 16), float32] */;
    %979 = cast(%var_4208, dtype="int8") /* ty=Tensor[(3, 8, 16), int8] */;
    %980 = shape_of(%978, dtype="int32") /* ty=Tensor[(3), int32] */;
    %981 = cast(%978, dtype="int8") /* ty=Tensor[(3, 8, 16), int8] */;
    %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %983 = cast(meta[relay.Constant][24] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
    %984 = cast(meta[relay.Constant][24] /* ty=Tensor[(1056), uint64] */, dtype="uint64") /* ty=Tensor[(1056), uint64] */;
    %985 = reshape(%983, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
    %986 = reshape(%984, newshape=[12, 8, 11]) /* ty=Tensor[(12, 8, 11), uint64] */;
    %987 = @func_1244(%985, %986) /* ty=(Tensor[(12, 8, 11), int64], Tensor[(12, 8, 11), int16], Tensor[(11, 13, 11), float64]) */;
    %988 = @func_1878() /* ty=Tensor[(11, 13, 11), float64] */;
    %989 = %961.0;
    %990 = @func_2877(%964, %965) /* ty=Tensor[(16, 4, 2), float32] */;
    %991 = right_shift(%981, %982) /* ty=Tensor[(3, 8, 16), int8] */;
    %992 = %987.1;
    (%988, %989, %var_4168, meta[relay.Constant][23] /* ty=Tensor[(384), int32] */, %990, %var_4183, %991, %992, meta[relay.Constant][24] /* ty=Tensor[(1056), uint64] */)
  };
  %993(%var_4242, %var_4243, %var_4244) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 4, 2), float32], Tensor[(128), float32], Tensor[(3, 8, 16), int8], Tensor[(12, 8, 11), int16], Tensor[(1056), uint64]) */
}

def @func_5221() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_5219() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_3505(%var_3504: Tensor[(18, 36), bool]) -> (Tensor[(11, 13, 11), float64], Tensor[(18, 36), int64], Tensor[(18, 36), bool]) {
  %1024 = fn (%var_3498: Tensor[(18, 36), bool]) -> (Tensor[(11, 13, 11), float64], Tensor[(18, 36), int64], Tensor[(18, 36), bool]) {
    %994 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
    %995 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
    %996 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
    %997 = reshape(%994, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %998 = reshape(%995, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %999 = reshape(%996, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), float32] */;
    %1000 = @func_2249(%997, %998, %999) /* ty=Tensor[(6, 9, 12), bool] */;
    %1001 = cast(%1000, dtype="uint16") /* ty=Tensor[(6, 9, 12), uint16] */;
    %1002 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1003 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="uint16") /* ty=Tensor[(18, 36), uint16] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1005 = logical_xor(%1003, %1004) /* ty=Tensor[(18, 36), uint16] */;
    %1006 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="float32") /* ty=Tensor[(18, 36), float32] */;
    %1007 = acosh(%1006) /* ty=Tensor[(18, 36), float32] */;
    %1008 = cast(%1007, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
    %1009 = shape_of(%1005, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1010 = cast(%1005, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
    %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1012 = equal(%1010, %1011) /* ty=Tensor[(18, 36), bool] */;
    %1013 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 36), float32] */, dtype="int64") /* ty=Tensor[(18, 36), int64] */;
    %1014 = shape_of(%1012, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1015 = cast(%1012, dtype="int64") /* ty=Tensor[(18, 36), int64] */;
    %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1017 = cast(%var_3498, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
    %1018 = shape_of(%1012, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1019 = cast(%1012, dtype="bool") /* ty=Tensor[(18, 36), bool] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1021 = @func_140() /* ty=Tensor[(11, 13, 11), float64] */;
    %1022 = left_shift(%1015, %1016) /* ty=Tensor[(18, 36), int64] */;
    %1023 = greater_equal(%1019, %1020) /* ty=Tensor[(18, 36), bool] */;
    (%1021, %1022, %1023)
  };
  %1024(%var_3504) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(18, 36), int64], Tensor[(18, 36), bool]) */
}

def @func_2027() -> (Tensor[(11, 13, 11), float64],) {
  %1027 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %1025 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %1026 = %1025.0;
    (%1026,)
  };
  %1027() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_6406(%var_6405: Tensor[(720, 2), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(16, 6, 15), float64], Tensor[(720, 2), float64]) {
  %1034 = fn (%var_6402: Tensor[(720, 2), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(16, 6, 15), float64], Tensor[(720, 2), float64]) {
    %1028 = @func_4551() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %1029 = cast(%var_6402, dtype="float64") /* ty=Tensor[(720, 2), float64] */;
    %1030 = reshape(%1029, newshape=[16, 6, 15]) /* ty=Tensor[(16, 6, 15), float64] */;
    %1031 = @func_2049(%1030) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */;
    %1032 = %1028.1;
    %1033 = %1031.0;
    (%1032, %1033, %var_6402)
  };
  %1034(%var_6405) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(16, 6, 15), float64], Tensor[(720, 2), float64]) */
}

def @func_1587() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_1585() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_8972() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_8970() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_5093() -> (Tensor[(6, 9, 12), bool],) {
  @func_5091() /* ty=(Tensor[(6, 9, 12), bool],) */
}

def @func_1012() -> Tensor[(11, 13, 11), float64] {
  %1035 = fn () -> Tensor[(11, 13, 11), float64] {
    @func_102() /* ty=Tensor[(11, 13, 11), float64] */
  };
  %1035() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_2415() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %1036 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1037 = @func_691() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1038 = @func_595() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1039 = %1036.0;
  %1040 = %1037.1;
  %1041 = %1038.0;
  (%1039, %1040, %1041)
}

def @func_795(%var_764: Tensor[(11, 13, 11), float64]) -> (Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float32]) {
  %1042 = @func_707() /* ty=Tensor[(11, 13, 11), float64] */;
  %1043 = cast(%var_764, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1047 = @func_385() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1048 = %1047.1;
  %1049 = cast(%1048, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %1050 = shape_of(%1042, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1051 = cast(%1042, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1053 = less_equal(%1045, %1046) /* ty=Tensor[(11, 13, 11), bool] */;
  %1054 = floor_divide(%1051, %1052) /* ty=Tensor[(11, 13, 11), float32] */;
  (%1053, %1054)
}

def @func_7574() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_7572() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_103() -> Tensor[(11, 13, 11), float64] {
  %1056 = fn () -> Tensor[(11, 13, 11), float64] {
    %1055 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
    asin(%1055) /* ty=Tensor[(11, 13, 11), float64] */
  };
  %1056() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_5143() -> (Tensor[(11, 13, 11), float64],) {
  %1057 = @func_4254() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1058 = %1057.0;
  (%1058,)
}

def @func_1645() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %1059 = @func_1328() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1060 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1061 = @func_917() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1062 = @func_420() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1063 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1064 = %1059.1;
  %1065 = %1060.0;
  %1066 = %1061.1;
  %1067 = %1062.0;
  %1068 = %1063.0;
  (%1064, %1065, %1066, %1067, %1068)
}

def @func_247() -> (Tensor[(11, 13, 11), float64],) {
  %1071 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %1069 = @func_170() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %1070 = %1069.0;
    (%1070,)
  };
  %1071() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_6733() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) {
  @func_6731() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64]) */
}

def @func_8769(%var_8767: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(352, 1), float64]) {
  @func_8766(%var_8767) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 2, 16), float64], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(352, 1), float64]) */
}

def @func_960() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_958() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_1734(%var_1732: Tensor[(10, 9, 13), float64]) -> (Tensor[(10, 9, 13), float64],) {
  @func_1731(%var_1732) /* ty=(Tensor[(10, 9, 13), float64],) */
}

def @func_9752() -> Tensor[(11, 13, 11), float64] {
  @func_9750() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_7644() -> Tensor[(11, 13, 11), float64] {
  %1072 = @func_3686() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1072.0
}

def @func_4915() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_4913() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_7588() -> (Tensor[(11, 13, 11), float64],) {
  %1075 = fn () -> (Tensor[(11, 13, 11), float64],) {
    %1073 = @func_7063() /* ty=(Tensor[(11, 13, 11), float64],) */;
    %1074 = %1073.0;
    (%1074,)
  };
  %1075() /* ty=(Tensor[(11, 13, 11), float64],) */
}

def @func_2052(%var_2050: Tensor[(16, 6, 15), float64]) -> (Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) {
  @func_2049(%var_2050) /* ty=(Tensor[(16, 6, 15), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_8742() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %1076 = @func_2034() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1077 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1078 = @func_102() /* ty=Tensor[(11, 13, 11), float64] */;
  %1079 = %1076.1;
  %1080 = @func_4573() /* ty=Tensor[(11, 13, 11), float64] */;
  %1081 = %1077.0;
  (%1078, %1079, %1080, %1081)
}

def @func_5219() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %1082 = @func_1535() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1083 = @func_2931() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
  %1084 = %1082.0;
  %1085 = %1083.0;
  (%1084, %1085)
}

def @func_6096() -> (Tensor[(11, 13, 11), float64], Tensor[(54, 12), float32], Tensor[(6, 9, 12), float32]) {
  %1094 = fn () -> (Tensor[(11, 13, 11), float64], Tensor[(54, 12), float32], Tensor[(6, 9, 12), float32]) {
    %1086 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %1087 = cast(meta[relay.Constant][27] /* ty=Tensor[(54, 12), float32] */, dtype="float32") /* ty=Tensor[(54, 12), float32] */;
    %1088 = reshape(%1087, newshape=[648]) /* ty=Tensor[(648), float32] */;
    %1089 = @func_3976(%1088) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), bool], Tensor[(648), float32]) */;
    %1090 = %1089.2;
    %1091 = cast(%1090, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
    %1092 = %1086.2;
    %1093 = sinh(%1091) /* ty=Tensor[(6, 9, 12), float32] */;
    (%1092, meta[relay.Constant][27] /* ty=Tensor[(54, 12), float32] */, %1093)
  };
  %1094() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(54, 12), float32], Tensor[(6, 9, 12), float32]) */
}

def @func_1951() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  %1095 = @func_246() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1096 = @func_1181() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1097 = %1095.0;
  %1098 = %1096.0;
  %1099 = @func_1011() /* ty=Tensor[(11, 13, 11), float64] */;
  (%1097, %1098, %1099)
}

def @func_7216() -> (Tensor[(11, 13, 11), float64],) {
  %1100 = @func_7063() /* ty=(Tensor[(11, 13, 11), float64],) */;
  %1101 = %1100.0;
  (%1101,)
}

def @func_6847(%var_6843: Tensor[(1260), float64], %var_6844: Tensor[(900), float64], %var_6845: Tensor[(6, 9, 12), bool], %var_6846: Tensor[(1260), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 10, 9), float64], Tensor[(900), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), float64], Tensor[(1260), uint32], Tensor[(11, 13, 11), bool]) {
  @func_6841(%var_6843, %var_6844, %var_6845, %var_6846) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(1260), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(10, 10, 9), float64], Tensor[(900), float64], Tensor[(11, 13, 11), float64], Tensor[(6, 9, 12), float64], Tensor[(1260), uint32], Tensor[(11, 13, 11), bool]) */
}

def @func_9275() -> Tensor[(11, 13, 11), float64] {
  @func_9273() /* ty=Tensor[(11, 13, 11), float64] */
}

def @func_2417() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_2415() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

def @func_2863(%var_2861: Tensor[(8, 14, 8), float64], %var_2862: Tensor[(8, 14, 8), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) {
  %1111 = fn (%var_2842: Tensor[(8, 14, 8), float64], %var_2843: Tensor[(8, 14, 8), float64]) -> (Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) {
    %1102 = @func_564() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */;
    %1103 = cast(%var_2843, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %1104 = shape_of(%var_2842, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1105 = cast(%var_2842, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1107 = floor_divide(%1105, %1106) /* ty=Tensor[(8, 14, 8), float64] */;
    %1108 = cast(%1107, dtype="float64") /* ty=Tensor[(8, 14, 8), float64] */;
    %1109 = %1102.2;
    %1110 = rsqrt(%1108) /* ty=Tensor[(8, 14, 8), float64] */;
    (%1109, %1110)
  };
  %1111(%var_2861, %var_2862) /* ty=(Tensor[(11, 13, 11), float64], Tensor[(8, 14, 8), float64]) */
}

def @func_5987() -> (Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) {
  @func_5985() /* ty=(Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), bool], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64], Tensor[(11, 13, 11), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen242/build/output.py", line 3519, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  35: TVMFuncCall
  34: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  33: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  32: tvm::relay::backend::ExecutorCodegen::Codegen(tvm::relay::Function const&, tvm::runtime::String)
  31: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::GraphExecutorCodegenModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  30: tvm::relay::backend::GraphExecutorCodegen::Codegen(tvm::relay::Function, tvm::runtime::String)
  29: tvm::transform::Pass::operator()(tvm::IRModule) const
  28: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  27: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  26: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  25: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  24: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  23: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  22: tvm::transform::Pass::operator()(tvm::IRModule) const
  21: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  20: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  19: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  14: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  13: _ZN3tvm5relay9
  12: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  11: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  10: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  9: _ZZN3tvm5relay11ExprFunc
  8: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::TupleNode const*)
  7: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  6: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  5: _ZZN3tvm5relay11ExprFunc
  4: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  3: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  2: tvm::relay::tec::LowerTensorExprMutator::ResolveToPrimitive(tvm::RelayExpr)
  1: tvm::IRModuleNode::Lookup(tvm::GlobalVar const&) const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/ir/module.cc", line 268
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (it != functions.end()) is false: There is no definition of func_4533

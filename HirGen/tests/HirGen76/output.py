import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_17 = relay.var("var_17", dtype = "float64", shape = (12, 6, 9))#candidate|17|(12, 6, 9)|var|float64
uop_18 = relay.sinh(var_17.astype('float64')) # shape=(12, 6, 9)
output = relay.Tuple([uop_18,])
output2 = relay.Tuple([uop_18,])
func_24 = relay.Function([var_17,], output)
mod['func_24'] = func_24
mod = relay.transform.InferType()(mod)
mutated_mod['func_24'] = func_24
mutated_mod = relay.transform.InferType()(mutated_mod)
var_25 = relay.var("var_25", dtype = "float64", shape = (12, 6, 9))#candidate|25|(12, 6, 9)|var|float64
func_24_call = mutated_mod.get_global_var('func_24')
call_26 = func_24_call(var_25)
output = call_26
func_27 = relay.Function([var_25], output)
mutated_mod['func_27'] = func_27
mutated_mod = relay.transform.InferType()(mutated_mod)
var_187 = relay.var("var_187", dtype = "uint64", shape = (7, 1, 14))#candidate|187|(7, 1, 14)|var|uint64
const_188 = relay.const([[[-10,6,9,5,5,-1,-9,-6,-9,1,-10,-7,3,-8],[-9,-6,1,2,-3,-2,-6,-3,6,-6,-4,4,7,8],[-7,3,-9,6,1,7,-6,2,4,7,-5,-4,9,-4],[-9,-8,-1,4,-10,-7,10,-6,-5,-8,-2,-8,7,-7],[-1,-5,-5,7,-4,3,1,6,6,-8,10,1,-1,10],[-2,-6,-8,-1,6,7,9,3,-2,5,-2,-10,-9,4],[-9,-1,9,-3,-10,10,-4,-5,8,5,8,-1,-3,1],[-1,5,9,-2,3,7,-2,9,-5,9,2,-7,-3,1],[9,-1,8,2,-2,-6,-2,10,10,-9,4,10,1,-8],[-6,-4,2,-7,1,-8,8,8,6,3,7,-3,-10,-1],[-10,9,10,3,9,2,1,-5,-3,8,-2,5,3,-4],[-1,-5,-4,9,10,-7,3,-10,-9,-5,9,2,-4,-3]],[[-5,3,-2,6,-5,-1,10,3,-7,-10,-8,-9,-6,-10],[-7,1,-10,5,3,9,10,-10,-7,-6,5,-1,8,-2],[10,-9,5,-7,4,-8,-7,4,8,-10,8,7,1,-8],[7,-5,2,-2,-4,3,-4,5,-9,-1,-5,-1,-6,-6],[-8,5,-6,2,6,6,-4,-8,-1,2,-5,6,3,-3],[-6,7,7,9,4,-1,7,10,4,2,2,5,6,-9],[1,-9,3,10,7,3,-3,2,10,3,-2,1,-8,3],[-10,-10,-4,-7,-4,9,10,-5,-6,3,10,2,-1,-8],[-1,-1,-3,1,2,8,-7,-9,9,-2,-2,-1,-2,-6],[5,-2,-7,9,-5,-9,10,-7,4,-4,2,10,-2,8],[-3,7,-2,-6,1,9,6,7,5,3,-9,-4,4,5],[-4,-9,1,7,-4,-10,-2,3,9,4,-3,5,7,-3]],[[3,8,-2,6,-3,-7,-8,2,-10,-8,6,-4,2,-2],[-1,1,-2,-3,5,10,-2,3,-7,-10,1,-5,3,-7],[-9,5,4,3,-2,-4,4,5,2,8,4,-6,9,1],[9,8,-8,7,6,10,6,6,-6,8,10,9,5,6],[-5,5,-8,-1,3,-8,9,8,10,9,-7,-5,-4,-1],[-8,-2,-6,6,-7,10,-6,-10,4,2,4,-9,-8,-9],[1,-1,7,-1,-8,8,-5,-5,9,-5,5,-7,7,-1],[-4,-9,-10,-3,2,3,10,-7,-2,-7,-10,-3,10,-4],[-10,3,-7,7,3,-8,4,6,3,-1,8,3,8,4],[8,6,5,9,2,-3,8,1,-3,5,2,8,-4,9],[10,2,1,3,-7,-2,-2,5,8,-9,-3,-4,2,5],[6,-8,7,-2,7,-6,2,3,-5,-4,-4,-2,9,2]],[[-10,5,-10,2,-2,4,4,2,-10,-1,-5,5,-8,-6],[5,-8,4,-2,-6,-10,1,-8,5,-2,-6,9,-6,3],[-1,2,-7,-10,-4,3,-7,8,8,4,7,10,6,7],[2,-9,8,-1,-10,6,-3,3,2,9,-9,-5,8,-10],[-3,-10,6,1,9,-9,-3,2,-3,-10,-8,7,4,4],[7,6,-10,6,6,-9,9,3,-2,10,9,2,-10,5],[-3,4,4,2,8,1,9,-8,-10,2,7,-9,3,6],[-4,-5,-1,-1,-1,-8,-2,5,-8,10,8,-2,-6,-1],[-6,-2,9,9,6,-4,2,-10,-10,-6,1,-8,9,-2],[-1,-4,2,-7,-1,3,-4,-8,9,-1,-4,9,4,-2],[7,8,1,-7,5,-5,8,-6,7,9,2,6,8,1],[5,4,9,10,-1,-4,8,-3,-1,3,2,5,3,-8]],[[-9,2,2,3,-6,-5,9,3,1,8,-4,-10,-4,-8],[6,-7,-7,-10,2,2,8,7,7,9,-6,1,-7,-6],[-6,7,2,-9,-2,8,2,-4,-9,10,-10,7,-5,6],[7,-4,-6,-7,6,7,-4,-3,-7,9,-7,6,-9,1],[-9,-7,-7,-3,5,-1,-5,10,-3,10,-10,-10,9,2],[8,1,10,-6,-10,-2,-9,5,-1,-7,-5,-6,5,10],[1,9,5,7,-7,-4,3,9,9,8,-8,4,-10,-8],[8,9,2,-9,10,-4,-2,-4,-6,-7,-9,-3,-9,-2],[-9,4,-10,7,2,1,-3,-1,-5,9,9,4,-2,7],[-6,-10,9,2,-8,-1,2,-4,-7,1,-1,-3,8,-10],[-6,2,8,-7,-6,6,8,6,-9,7,7,-8,-8,-1],[-10,-9,-8,10,-10,2,-8,2,6,-5,10,1,-2,8]],[[-3,8,-7,-10,5,2,-7,-3,-3,-10,-5,-5,9,-2],[8,10,-8,3,-5,-2,-4,-8,-1,5,-8,-4,-10,-5],[7,-7,-9,6,-7,-3,-3,3,-3,8,3,-7,-8,1],[-4,-8,-8,-5,4,-4,-10,1,6,-1,-4,1,2,-8],[3,-10,-8,7,3,-10,-5,8,-5,-1,3,-8,-2,-6],[-10,-7,-4,9,5,-5,-8,-5,-3,-10,-2,-7,-2,-3],[5,9,6,8,2,1,3,-8,-4,6,8,6,-5,-4],[-8,-3,10,10,-7,5,4,-9,-3,8,9,-7,-7,6],[5,-1,9,-10,6,-3,6,4,-6,-9,-7,-8,-10,-3],[7,-1,9,7,-7,-7,5,-8,9,-3,3,4,8,8],[9,6,-1,10,10,8,-4,-2,6,-2,-10,-8,8,6],[-5,5,-8,-2,10,8,7,9,2,10,1,-3,-8,5]],[[4,-3,8,5,-1,-4,6,2,2,7,-5,2,-3,-7],[7,-9,5,-1,10,-8,2,-1,-6,4,-8,-1,-9,1],[9,3,1,-4,3,-9,1,3,9,-4,9,-2,10,-2],[-8,3,10,-1,9,7,-3,5,4,-9,-2,-8,2,1],[-3,5,5,-9,5,8,-5,5,3,-4,-8,10,8,4],[-7,-4,-8,-4,-8,-10,10,6,-4,3,-1,-4,10,10],[1,-7,-6,1,-1,-7,-5,-3,-4,10,2,-5,10,1],[-3,-7,-2,3,7,-2,-6,-1,-7,-5,3,-8,9,-7],[3,1,8,10,-4,10,8,2,-2,-6,7,-1,-7,3],[-4,-8,-8,-5,-7,-6,10,10,9,-4,7,9,1,4],[1,-7,10,2,-4,-4,-1,-10,8,1,-4,-8,4,6],[-9,7,-10,5,-10,7,3,3,-6,7,2,1,4,10]]], dtype = "uint64")#candidate|188|(7, 12, 14)|const|uint64
bop_189 = relay.less_equal(var_187.astype('bool'), const_188.astype('bool')) # shape=(7, 12, 14)
func_24_call = mod.get_global_var('func_24')
func_27_call = mutated_mod.get_global_var('func_27')
const_193 = relay.const([-4.157802,-2.319076,5.385787,-4.219231,-6.011069,-0.341319,7.991432,-2.912934,-4.393571,5.323773,-2.003824,-9.715934,0.415301,8.870881,0.265208,6.640259,-5.047963,4.248473,7.264596,-6.326276,4.421533,-0.304649,-2.021471,1.372803,2.971216,-0.132148,-2.002915,1.283958,2.023939,-8.392142,-2.232203,-1.521378,3.387591,-9.718514,0.777399,-7.792212,0.549664,4.174317,1.013765,5.952600,5.378137,7.127303,-6.619517,3.008390,2.908678,3.148872,-9.330199,-3.888422,5.784027,-9.388665,-1.345910,0.950374,-8.525970,3.890658,6.453358,-5.020056,3.344814,-0.220779,-1.146009,2.293997,0.928711,-8.881531,-9.716486,1.763110,2.095145,-6.636681,-4.489616,-7.056274,-6.270585,5.877956,-5.543682,-0.213410,8.077789,6.451184,-5.607801,9.222619,3.695651,3.390416,1.721030,6.248003,7.788216,-4.947557,-3.920482,-8.577412,-3.426266,-5.549796,1.081277,-3.744528,-5.694987,-9.199388,-5.048670,-3.935478,7.755297,8.681074,1.581315,-9.922508,-9.607160,-6.853671,1.398935,2.410790,-8.914663,-9.521384,-9.902547,-2.471502,-9.112461,-1.983969,2.938575,4.793093,-7.352433,3.749924,0.481173,-6.170084,-3.868214,-5.492853,9.190273,6.690223,-1.005255,0.421297,8.309310,2.140889,2.062019,-0.210273,-2.553551,4.915047,3.479009,-6.353588,-5.826569,-6.500787,-1.832636,-9.975997,2.176003,5.281464,1.367336,-5.595225,8.838812,0.533315,1.929859,1.691325,3.295149,2.583596,9.499482,4.047073,-4.730365,-1.326859,0.337572,8.575097,-1.013763,-0.316661,1.036297,-3.926758,-3.020654,5.658831,-4.713146,4.024004,-5.352200,-7.654025,3.287852,4.282638,9.407734,-5.975572,8.308406,7.760528,-5.937587,2.910924,8.549014,-0.524974,4.625060,3.238980,-0.011409,8.363554,0.045718,-7.218117,-0.325942,8.280148,0.422583,-6.802037,0.237669,8.853242,2.994428,2.703231,-7.508012,-4.291622,-9.068095,1.623208,-8.953968,1.690047,-5.505829,-8.154276,8.822728,6.963186,8.376153,3.038615,1.477685,2.381250,-8.907391,7.335978,-0.387214,-6.650565,-2.162316,-8.335028,5.196597,-7.218734,1.488228,-5.019228,-4.520394,-9.042538,2.531043,-2.853258,-0.201496,0.360950,2.380035,1.383316,-2.800782,-6.474343,-9.301832,6.895760,-9.867111,4.557533,5.094097,-6.510970,1.608977,2.139742,8.018186,-9.645027,4.778533,-4.619757,-4.699314,9.255443,0.789905,4.999171,-6.096403,2.453008,7.134984,-5.466309,-0.041634,-6.651390,9.055550,-5.274627,-6.932633,-1.011976,-6.289980,-4.725358,0.976443,8.082718,9.427085,-5.883303,-0.058653,-9.644068,-5.973774,-0.102711,2.934165,0.699040,-7.325578,1.786047,-2.156543,8.105674,-1.449470,2.272275,3.746041,2.264215,-1.210499,-1.480912,7.105168,-1.606050,4.321428,2.187355,8.245579,-4.893854,-0.495917,-9.208495,3.945879,-4.020772,0.015995,1.136939,-8.457104,7.412922,-0.612017,6.408577,-4.499211,-6.183230,-2.314593,8.387766,-2.114675,-6.434305,9.477633,5.555498,-0.696567,7.223804,8.480837,-9.720353,4.323443,-1.677284,0.116709,1.593930,6.287725,0.596530,1.470810,-8.932907,-8.375410,6.583168,6.054444,3.081327,-4.358674,-5.305660,5.501088,8.943814,-6.063237,2.679424,-0.428084,-8.671037,-5.847562,7.828329,-9.544730,9.341475,-6.627828,-9.053906,2.954203,1.217319,-4.246685,2.460861,-5.951920,-4.474319,1.791165,-3.905660,6.230879,6.676639,4.798712,0.991067,-3.582612,-6.114619,8.012936,4.879883,-3.382095,-0.332117,-0.187679,0.763424,8.891712,4.575214,8.488094,-1.422373,-2.155377,-4.410893,-6.052395,5.859406,-2.932241,-3.746842,2.202330,-2.018696,-7.924338,-2.956303,-7.552247,-2.161934,-0.919068,-3.952160,4.395710,-5.940077,8.416563,8.326717,-7.281581,-9.698897,8.088463,8.566530,-6.014514,-3.595763,-0.697009,1.687654,-1.166545,-3.737669,-2.651593,-7.135922,1.850559,0.766592,9.572261,0.646799,-8.685780,-8.012147,-0.674310,-9.986400,3.217533,9.089360,1.525492,8.272536,-4.334013,-1.914370,-5.394200,6.923978,3.009634,-6.817817,3.010117,8.218679,-2.706566,5.895119,7.474627,5.094068,5.392384,-8.057454,-1.337160,-0.147322,-6.794427,1.634186,-9.086917,-3.465797,6.954014,-6.806176,-8.001609,-3.819048,-5.160808,6.245000,5.073254,-2.762388,-8.228781,-4.736479,-7.669050,9.162156,4.556656,-9.614464,7.475215,-4.810333,2.947068,-8.539454,-5.289516,-5.243088,-5.228994,-1.259971,5.057931,-3.614972,9.616682,-3.600152,-7.037192,-4.459864,-9.916022,0.835756,-7.873593,-5.502984,-0.186230,5.091099,-4.867413,7.170367,-2.485691,-7.193583,1.727417,1.713827,1.640293,-0.941241,0.115116,-2.249672,6.403774,-0.660512,0.367692,-6.705166,2.582500,-3.257692,6.678742,-4.910437,2.424709,3.136053,-4.559239,0.344287,-4.800716,8.022818,4.984317,9.400173,9.701959,-3.743807,7.941166,-1.239565,-1.388746,-0.856400,9.507644,5.199076,6.640400,1.490873,4.335061,-7.992266,-1.964981,-7.171868,4.282845,0.300388,2.763288,7.030445,-9.557564,3.216854,-6.971639,-0.617234,-2.278210,-6.484661,1.131604,2.165766,-9.595125,-3.295324,7.732156,-9.530557,7.303150,0.640921,3.627010,6.282287,2.771624,8.652465,-9.552688,8.433187,8.173142,-2.313002,4.440241,-9.577904,3.304377,-2.256121,4.639874,6.449846,-5.251998,2.279078,8.063175,5.443180,6.994935,-6.043539,5.387877,-7.891176,9.109163,3.931546,2.429423,3.295797,-3.760373,3.968400,-0.058418,-1.514640,-2.049451,6.026972,-8.218269,-5.968926,3.367788,3.617383,-6.864172,9.987338,0.013389,-1.067063,-5.867374,1.848249,4.505769,-6.846815,-2.361733,4.781018,-9.324267,-7.663803,3.663341,-5.032469,-4.253402,6.794332,-0.343917,-6.594935,7.133246,-9.905166,-2.446833,0.787262,-3.433307,-0.814777,-8.081417,6.097135,-3.376438,-4.015428,-1.301888,-1.005538,-4.472932,3.923269,-4.203859,-9.792440,-7.797321,-8.379764,5.757145,3.363881,6.309586,-2.045562,2.155837,4.423318,1.791810,5.677935,-0.790046,-0.780813,-3.513046,4.317131,-7.102514,-2.943107,-5.791146,3.174182,-0.120765,-4.186247,-7.683208,-9.536400,-6.451147,8.202780,9.481183,-4.935888,-7.758191,-7.791841,-6.750304,-3.181847,-7.397184,-5.109325,3.988679,-7.989604,-2.920334,1.422200,2.715491,-8.671644,2.435373,5.357789,-4.175036,9.416283,4.941047,2.623217,8.623482,-3.625863,7.372719,9.663413,-3.147131,-5.048946,-2.700647,-2.282790,0.898976,1.013364,-7.427470,6.926705,-9.916127,-1.023497,6.524889,-7.868524,0.524217,-3.644947,4.396853,1.877458,2.379152,-1.491397,4.080848,6.988785,7.320463,-2.801799,0.119862,-9.137520,-7.059934,4.533940,5.367678,-9.215436,-5.463134,2.854687,-7.593987,-4.504946,-8.582127,4.754413,3.648354,5.077965], dtype = "float64")#candidate|193|(648,)|const|float64
call_192 = relay.TupleGetItem(func_24_call(relay.reshape(const_193.astype('float64'), [12, 6, 9])), 0)
call_194 = relay.TupleGetItem(func_27_call(relay.reshape(const_193.astype('float64'), [12, 6, 9])), 0)
uop_199 = relay.sin(var_187.astype('float64')) # shape=(7, 1, 14)
func_24_call = mod.get_global_var('func_24')
func_27_call = mutated_mod.get_global_var('func_27')
call_208 = relay.TupleGetItem(func_24_call(relay.reshape(const_193.astype('float64'), [12, 6, 9])), 0)
call_209 = relay.TupleGetItem(func_27_call(relay.reshape(const_193.astype('float64'), [12, 6, 9])), 0)
func_24_call = mod.get_global_var('func_24')
func_27_call = mutated_mod.get_global_var('func_27')
call_213 = relay.TupleGetItem(func_24_call(relay.reshape(call_192.astype('float64'), [12, 6, 9])), 0)
call_214 = relay.TupleGetItem(func_27_call(relay.reshape(call_192.astype('float64'), [12, 6, 9])), 0)
uop_217 = relay.log(call_208.astype('float32')) # shape=(12, 6, 9)
uop_219 = relay.log(call_209.astype('float32')) # shape=(12, 6, 9)
output = relay.Tuple([bop_189,call_192,const_193,uop_199,call_213,uop_217,])
output2 = relay.Tuple([bop_189,call_194,const_193,uop_199,call_214,uop_219,])
func_221 = relay.Function([var_187,], output)
mod['func_221'] = func_221
mod = relay.transform.InferType()(mod)
mutated_mod['func_221'] = func_221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_222 = relay.var("var_222", dtype = "uint64", shape = (7, 1, 14))#candidate|222|(7, 1, 14)|var|uint64
func_221_call = mutated_mod.get_global_var('func_221')
call_223 = func_221_call(var_222)
output = call_223
func_224 = relay.Function([var_222], output)
mutated_mod['func_224'] = func_224
mutated_mod = relay.transform.InferType()(mutated_mod)
var_450 = relay.var("var_450", dtype = "uint32", shape = (7, 5, 2))#candidate|450|(7, 5, 2)|var|uint32
var_451 = relay.var("var_451", dtype = "uint32", shape = (7, 5, 2))#candidate|451|(7, 5, 2)|var|uint32
bop_452 = relay.bitwise_and(var_450.astype('uint32'), relay.reshape(var_451.astype('uint32'), relay.shape_of(var_450))) # shape=(7, 5, 2)
func_221_call = mod.get_global_var('func_221')
func_224_call = mutated_mod.get_global_var('func_224')
var_456 = relay.var("var_456", dtype = "uint64", shape = (98,))#candidate|456|(98,)|var|uint64
call_455 = relay.TupleGetItem(func_221_call(relay.reshape(var_456.astype('uint64'), [7, 1, 14])), 3)
call_457 = relay.TupleGetItem(func_224_call(relay.reshape(var_456.astype('uint64'), [7, 1, 14])), 3)
output = relay.Tuple([bop_452,call_455,var_456,])
output2 = relay.Tuple([bop_452,call_457,var_456,])
func_461 = relay.Function([var_450,var_451,var_456,], output)
mod['func_461'] = func_461
mod = relay.transform.InferType()(mod)
var_462 = relay.var("var_462", dtype = "uint32", shape = (7, 5, 2))#candidate|462|(7, 5, 2)|var|uint32
var_463 = relay.var("var_463", dtype = "uint32", shape = (7, 5, 2))#candidate|463|(7, 5, 2)|var|uint32
var_464 = relay.var("var_464", dtype = "uint64", shape = (98,))#candidate|464|(98,)|var|uint64
output = func_461(var_462,var_463,var_464,)
func_465 = relay.Function([var_462,var_463,var_464,], output)
mutated_mod['func_465'] = func_465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_506 = relay.var("var_506", dtype = "int8", shape = (11, 1, 14))#candidate|506|(11, 1, 14)|var|int8
const_507 = relay.const([[[3,-10,10,7,-4,9,-10,-4,-2,-9,3,1,-10,6],[4,-7,5,-7,-5,-7,5,-2,10,1,7,6,1,3],[-6,3,-5,6,10,-7,6,-3,-1,8,-4,-3,7,10],[7,-1,-4,-10,7,-9,9,-1,1,8,2,5,-2,-7]],[[-10,-7,2,-9,-4,-5,6,7,1,10,5,-4,-5,3],[9,-6,-6,-5,5,-5,2,-10,-6,-4,7,9,-6,-9],[5,-8,-1,-1,-1,5,10,-5,-2,3,-3,4,-2,4],[-9,-9,-4,-7,3,-3,-6,-10,-10,1,1,-7,10,4]],[[8,10,-10,2,-7,-8,10,-7,-10,3,2,-2,-5,-7],[2,-6,9,8,6,1,2,6,-3,-8,-9,-4,4,-6],[-5,-5,4,7,-9,3,8,3,-5,10,1,2,-9,-1],[-2,-4,-1,4,-2,9,10,1,5,-8,2,-10,-5,10]],[[-1,-9,-1,-2,3,8,-10,1,8,-10,5,-5,5,7],[-10,-6,-2,-5,-9,5,-4,-9,9,-6,1,10,-3,10],[-10,10,8,2,2,-2,6,-2,10,7,-3,-4,9,10],[-7,-10,9,-7,-5,-6,-8,-7,-6,7,2,3,6,-2]],[[1,9,-2,7,8,-8,-2,-7,5,-5,4,-6,5,-4],[9,8,-5,10,-5,-1,-10,5,7,2,-7,-10,-8,-7],[-8,-6,4,6,2,-9,10,1,2,2,7,9,3,-4],[8,8,2,-2,9,-8,-2,1,8,2,7,9,-9,9]],[[-10,7,-4,-5,-8,-3,-2,9,7,-6,1,8,1,3],[8,4,-4,-7,3,-5,6,7,6,-2,7,1,-5,9],[6,5,-3,-3,9,5,1,-2,-7,-7,-6,-7,6,-4],[-9,-6,-4,-1,2,-4,-4,-3,-9,2,-6,9,7,-7]],[[-8,-5,-4,1,3,-5,-6,4,-7,4,3,-2,-4,-1],[8,3,10,2,8,4,-7,-6,7,4,-8,10,4,-8],[-2,9,-8,-8,2,-6,5,-2,8,-9,10,7,-4,7],[8,8,6,-3,-2,5,-3,4,3,-2,6,6,-5,-3]],[[-1,-8,-6,10,-6,8,-4,-1,6,-4,-3,-9,-6,-4],[9,1,-10,8,5,-9,1,-6,2,1,-5,6,9,-7],[-4,7,10,1,7,5,-5,1,-2,10,-6,-2,6,-9],[7,2,-8,-3,7,8,3,-3,10,6,-5,-5,-9,-2]],[[-9,10,6,7,8,-2,-4,-8,4,9,7,7,2,-3],[-1,6,5,-5,-5,-4,-2,10,7,-5,1,-6,-9,-2],[-6,-4,9,6,3,8,-6,2,1,4,-4,-8,4,5],[8,4,10,1,-7,7,10,9,8,-4,5,-6,10,4]],[[-9,-7,4,-8,-1,-8,-8,8,10,6,9,8,9,-3],[-7,2,5,2,-1,6,1,-10,-10,-7,-4,-10,-2,-6],[-10,9,-5,-5,10,-10,8,-5,-1,-8,-3,-1,7,-1],[8,9,6,7,-10,-2,10,3,9,8,5,8,10,-7]],[[1,-7,5,10,5,5,-2,8,-10,-1,-3,6,5,-7],[5,4,-4,-6,-9,4,-4,1,-5,-7,2,-3,-6,-2],[-5,6,3,-8,2,-9,10,7,10,9,7,-2,1,1],[-4,-8,1,1,-7,2,2,-2,-5,-6,9,2,-9,-4]]], dtype = "int8")#candidate|507|(11, 4, 14)|const|int8
bop_508 = relay.less(var_506.astype('bool'), const_507.astype('bool')) # shape=(11, 4, 14)
output = relay.Tuple([bop_508,])
output2 = relay.Tuple([bop_508,])
func_523 = relay.Function([var_506,], output)
mod['func_523'] = func_523
mod = relay.transform.InferType()(mod)
mutated_mod['func_523'] = func_523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_524 = relay.var("var_524", dtype = "int8", shape = (11, 1, 14))#candidate|524|(11, 1, 14)|var|int8
func_523_call = mutated_mod.get_global_var('func_523')
call_525 = func_523_call(var_524)
output = call_525
func_526 = relay.Function([var_524], output)
mutated_mod['func_526'] = func_526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_731 = relay.var("var_731", dtype = "float32", shape = (1, 10, 13))#candidate|731|(1, 10, 13)|var|float32
uop_732 = relay.cosh(var_731.astype('float32')) # shape=(1, 10, 13)
uop_738 = relay.log10(var_731.astype('float64')) # shape=(1, 10, 13)
output = relay.Tuple([uop_732,uop_738,])
output2 = relay.Tuple([uop_732,uop_738,])
func_741 = relay.Function([var_731,], output)
mod['func_741'] = func_741
mod = relay.transform.InferType()(mod)
mutated_mod['func_741'] = func_741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_742 = relay.var("var_742", dtype = "float32", shape = (1, 10, 13))#candidate|742|(1, 10, 13)|var|float32
func_741_call = mutated_mod.get_global_var('func_741')
call_743 = func_741_call(var_742)
output = call_743
func_744 = relay.Function([var_742], output)
mutated_mod['func_744'] = func_744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_798 = relay.var("var_798", dtype = "uint32", shape = (1, 15, 1))#candidate|798|(1, 15, 1)|var|uint32
var_799 = relay.var("var_799", dtype = "uint32", shape = (1, 15, 2))#candidate|799|(1, 15, 2)|var|uint32
bop_800 = relay.multiply(var_798.astype('uint32'), var_799.astype('uint32')) # shape=(1, 15, 2)
bop_804 = relay.logical_xor(bop_800.astype('int64'), var_798.astype('int64')) # shape=(1, 15, 2)
bop_808 = relay.minimum(bop_804.astype('int8'), relay.reshape(bop_800.astype('int8'), relay.shape_of(bop_804))) # shape=(1, 15, 2)
output = bop_808
output2 = bop_808
func_818 = relay.Function([var_798,var_799,], output)
mod['func_818'] = func_818
mod = relay.transform.InferType()(mod)
mutated_mod['func_818'] = func_818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_818_call = mutated_mod.get_global_var('func_818')
var_820 = relay.var("var_820", dtype = "uint32", shape = (1, 15, 1))#candidate|820|(1, 15, 1)|var|uint32
var_821 = relay.var("var_821", dtype = "uint32", shape = (1, 15, 2))#candidate|821|(1, 15, 2)|var|uint32
call_819 = func_818_call(var_820,var_821,)
output = call_819
func_822 = relay.Function([var_820,var_821,], output)
mutated_mod['func_822'] = func_822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_854 = relay.var("var_854", dtype = "float32", shape = (10, 4, 15))#candidate|854|(10, 4, 15)|var|float32
uop_855 = relay.erf(var_854.astype('float32')) # shape=(10, 4, 15)
func_523_call = mod.get_global_var('func_523')
func_526_call = mutated_mod.get_global_var('func_526')
const_858 = relay.const([10,-3,1,-7,5,3,5,-9,-5,-8,3,10,10,-9,9,-2,-2,-9,2,1,5,1,4,-8,-6,4,8,-1,1,1,-6,10,9,2,7,-1,7,-2,-4,2,7,-1,-1,5,6,5,-10,9,6,1,5,6,5,-3,-8,-9,2,-4,-6,-6,-7,-4,5,6,-7,5,-8,5,10,-2,-4,5,-5,-8,8,-3,4,1,1,3,2,-9,10,8,2,10,3,2,4,10,2,6,1,7,3,-9,1,-9,-3,-3,-7,1,-8,-1,-2,6,-2,-4,-10,-6,-3,1,-4,5,7,2,-10,-7,7,3,-7,-7,-1,-6,2,-5,-7,-8,-7,8,-2,-2,-5,-3,7,6,-4,6,2,8,2,-8,10,-7,9,-2,6,-1,3,5,-1,5,-4,1], dtype = "int8")#candidate|858|(154,)|const|int8
call_857 = relay.TupleGetItem(func_523_call(relay.reshape(const_858.astype('int8'), [11, 1, 14])), 0)
call_859 = relay.TupleGetItem(func_526_call(relay.reshape(const_858.astype('int8'), [11, 1, 14])), 0)
uop_862 = relay.atanh(uop_855.astype('float64')) # shape=(10, 4, 15)
func_818_call = mod.get_global_var('func_818')
func_822_call = mutated_mod.get_global_var('func_822')
const_868 = relay.const([10,3,-2,9,1,2,8,10,3,-8,-7,-6,5,6,10], dtype = "uint32")#candidate|868|(15,)|const|uint32
const_869 = relay.const([1,-7,2,-6,-4,4,6,-3,4,-4,2,-7,1,4,-5,3,-4,8,-4,10,-5,-3,-6,2,8,5,3,10,5,7], dtype = "uint32")#candidate|869|(30,)|const|uint32
call_867 = func_818_call(relay.reshape(const_868.astype('uint32'), [1, 15, 1]), relay.reshape(const_869.astype('uint32'), [1, 15, 2]), )
call_870 = func_818_call(relay.reshape(const_868.astype('uint32'), [1, 15, 1]), relay.reshape(const_869.astype('uint32'), [1, 15, 2]), )
func_24_call = mod.get_global_var('func_24')
func_27_call = mutated_mod.get_global_var('func_27')
var_880 = relay.var("var_880", dtype = "float64", shape = (648,))#candidate|880|(648,)|var|float64
call_879 = relay.TupleGetItem(func_24_call(relay.reshape(var_880.astype('float64'), [12, 6, 9])), 0)
call_881 = relay.TupleGetItem(func_27_call(relay.reshape(var_880.astype('float64'), [12, 6, 9])), 0)
bop_887 = relay.bitwise_xor(uop_862.astype('uint8'), relay.reshape(uop_855.astype('uint8'), relay.shape_of(uop_862))) # shape=(10, 4, 15)
uop_891 = relay.tan(uop_855.astype('float64')) # shape=(10, 4, 15)
var_896 = relay.var("var_896", dtype = "float32", shape = (10, 4, 15))#candidate|896|(10, 4, 15)|var|float32
bop_897 = relay.logical_xor(uop_855.astype('uint16'), relay.reshape(var_896.astype('uint16'), relay.shape_of(uop_855))) # shape=(10, 4, 15)
output = relay.Tuple([call_857,const_858,call_867,const_868,const_869,call_879,var_880,bop_887,uop_891,bop_897,])
output2 = relay.Tuple([call_859,const_858,call_870,const_868,const_869,call_881,var_880,bop_887,uop_891,bop_897,])
func_908 = relay.Function([var_854,var_880,var_896,], output)
mod['func_908'] = func_908
mod = relay.transform.InferType()(mod)
var_909 = relay.var("var_909", dtype = "float32", shape = (10, 4, 15))#candidate|909|(10, 4, 15)|var|float32
var_910 = relay.var("var_910", dtype = "float64", shape = (648,))#candidate|910|(648,)|var|float64
var_911 = relay.var("var_911", dtype = "float32", shape = (10, 4, 15))#candidate|911|(10, 4, 15)|var|float32
output = func_908(var_909,var_910,var_911,)
func_912 = relay.Function([var_909,var_910,var_911,], output)
mutated_mod['func_912'] = func_912
mutated_mod = relay.transform.InferType()(mutated_mod)
const_935 = relay.const([[[0.866240,3.099545,-4.520355,-3.898107],[5.140256,-7.648109,-5.341334,0.171779],[-3.387652,0.737233,9.419541,-5.498267],[-8.767833,7.029724,2.236277,-3.357015],[-4.120241,-4.224837,-3.557962,6.020002],[-2.441417,5.122621,5.614051,0.357838],[-2.850488,0.912877,2.684542,-4.448485],[-8.882894,-6.211505,6.744626,-8.815653],[3.703050,-6.530199,7.628311,6.216762],[9.943027,-0.844489,6.405371,-0.903212],[-0.096441,4.034382,-5.743386,2.330826],[2.524867,-5.883298,-6.947002,-9.623855],[-0.554804,-5.031731,6.266879,2.472204],[-5.323423,7.514153,8.977533,2.301180],[-3.188007,4.048186,7.873198,4.178499]],[[4.141737,0.516253,-5.161570,1.636821],[-8.766332,-8.873579,8.718710,-5.976676],[-8.320291,0.923014,-5.717948,7.711194],[0.608300,7.229569,-3.554827,4.779442],[-7.771268,4.847320,-4.839523,4.335274],[-4.026060,-3.561322,0.059749,-3.023469],[7.476145,-0.190718,-1.063056,-7.005685],[-9.953102,-6.084727,-2.438217,-4.692776],[-3.512278,4.572276,-1.403709,0.954309],[-4.278256,-6.922571,4.396168,0.482253],[-3.805978,-9.141509,-9.142682,-5.178061],[-1.457217,6.816553,-4.826869,9.313397],[1.185256,-3.135250,-9.760802,2.750843],[0.056249,-5.250008,-0.311074,4.368414],[6.542398,1.640289,-2.734085,2.582920]],[[7.450135,0.873827,-6.989206,-9.461463],[4.078050,-0.381792,1.888601,9.764991],[2.524954,7.009155,0.893012,8.963253],[-4.553559,-0.457311,-4.627909,5.243096],[-1.850530,-5.475992,0.321219,2.668122],[0.480516,-3.638010,2.816388,9.104038],[-9.443404,-0.989543,-3.322294,-4.383765],[-0.251849,0.761092,-6.083998,-8.568388],[-7.019426,-6.771037,-6.064109,-4.241705],[3.757534,-3.079047,-4.509703,9.894531],[-0.252362,5.061489,4.970137,0.814439],[-2.769618,9.414357,4.269775,-1.130209],[-1.672752,6.219929,-6.722186,-3.140452],[9.418896,-9.516663,-3.455764,-1.158935],[4.771952,5.814618,4.719018,-3.895648]]], dtype = "float64")#candidate|935|(3, 15, 4)|const|float64
uop_936 = relay.log10(const_935.astype('float64')) # shape=(3, 15, 4)
bop_953 = relay.equal(uop_936.astype('bool'), relay.reshape(const_935.astype('bool'), relay.shape_of(uop_936))) # shape=(3, 15, 4)
output = relay.Tuple([bop_953,])
output2 = relay.Tuple([bop_953,])
func_961 = relay.Function([], output)
mod['func_961'] = func_961
mod = relay.transform.InferType()(mod)
output = func_961()
func_962 = relay.Function([], output)
mutated_mod['func_962'] = func_962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_983 = relay.TupleGetItem(func_961_call(), 0)
call_984 = relay.TupleGetItem(func_962_call(), 0)
uop_994 = relay.acos(call_983.astype('float32')) # shape=(3, 15, 4)
uop_996 = relay.acos(call_984.astype('float32')) # shape=(3, 15, 4)
bop_1001 = relay.bitwise_or(call_983.astype('int32'), relay.reshape(uop_994.astype('int32'), relay.shape_of(call_983))) # shape=(3, 15, 4)
bop_1004 = relay.bitwise_or(call_984.astype('int32'), relay.reshape(uop_996.astype('int32'), relay.shape_of(call_984))) # shape=(3, 15, 4)
output = bop_1001
output2 = bop_1004
func_1011 = relay.Function([], output)
mod['func_1011'] = func_1011
mod = relay.transform.InferType()(mod)
mutated_mod['func_1011'] = func_1011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mutated_mod.get_global_var('func_1011')
call_1012 = func_1011_call()
output = call_1012
func_1013 = relay.Function([], output)
mutated_mod['func_1013'] = func_1013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_1014 = relay.TupleGetItem(func_961_call(), 0)
call_1015 = relay.TupleGetItem(func_962_call(), 0)
func_24_call = mod.get_global_var('func_24')
func_27_call = mutated_mod.get_global_var('func_27')
const_1024 = relay.const([9.287938,-9.294277,2.737225,4.554759,7.296988,-1.360735,-0.858918,-4.551657,1.159485,-7.676752,0.320524,7.859712,-2.782893,0.871176,5.312711,-1.813617,-9.208640,-7.710732,-1.221602,7.933657,5.739477,-2.946817,-4.586553,-0.622438,-8.822912,1.439299,-0.261039,9.508587,4.247121,-7.154629,-1.268571,2.614894,-7.204550,-3.538153,4.357395,-0.764443,-8.645434,-3.254291,-9.731199,-8.709129,-5.849514,-5.702288,-2.696858,7.531038,-3.185294,-5.408774,-2.732357,8.636029,5.390485,1.429386,1.596814,4.242129,-3.126165,-0.725768,7.036274,-8.090150,-9.908055,-6.935222,-1.576811,-2.121473,-6.628154,4.844495,-3.598917,6.575652,6.834205,2.396456,-2.430869,-9.217460,-7.641949,8.783064,8.933899,7.572337,-5.430971,-6.448013,2.157290,0.113084,3.686214,-5.337464,4.187890,-5.179097,-1.224749,-5.783572,-4.313445,-9.278134,1.977221,-3.191687,9.171199,2.818608,-8.149884,-3.805281,-2.052009,5.325485,-5.108308,-4.664906,1.561250,-6.495998,-3.187697,-1.730866,0.991490,0.913050,9.633607,8.797072,-4.163045,-5.768279,-0.043136,-6.572111,3.432197,4.806636,-3.240806,0.712455,-7.553638,0.112143,-1.777505,6.972958,-1.931305,3.919336,1.475380,-0.598588,5.923036,-8.265689,1.019127,-9.725947,-7.020813,6.613446,5.206597,-0.755912,-9.148264,-9.386588,3.059562,0.571404,4.180670,4.565766,3.844097,-4.184417,9.644038,4.522735,2.830642,7.370144,4.133255,-0.540556,8.809038,-3.214807,8.953875,9.741643,-8.106569,-5.236339,3.342803,-5.957083,-3.006323,3.895724,8.432815,-9.168052,-0.776365,-0.562047,-1.239144,2.018805,6.531190,-9.924636,-7.931591,-5.156995,-7.259556,-3.907766,-4.853122,-4.275083,4.659554,-8.152578,-6.967280,-6.205622,-3.827480,-6.135123,7.685556,2.845053,4.735650,4.322749,4.378646,0.214292,6.280026,5.903530,-5.308463,-0.306778,6.864814,4.154564,2.331440,-6.036719,-7.530460,3.800144,-6.450506,5.159739,-2.582826,-0.953819,-7.295167,9.300709,6.801895,3.088295,-7.703845,-3.968401,3.229397,-8.540746,7.545432,-4.017690,2.254760,7.944060,-5.026579,-4.388144,-3.394855,-2.485403,-1.163312,-0.146221,-6.744707,5.272616,9.302031,-1.595028,5.048713,8.213072,-7.772452,9.173671,5.345428,8.220534,2.686150,-6.359194,-2.899107,-2.956204,-6.239423,0.042024,-3.641516,-0.440548,-2.570751,-3.477611,3.323867,-4.329425,-2.908204,3.727755,-1.259315,9.411307,-3.639896,1.184815,0.324124,0.786379,-3.548540,-5.483537,-6.610453,-5.949510,-5.905489,-9.519365,0.519914,8.240294,-1.856469,6.297460,5.204371,-3.429915,4.480855,3.418005,8.797442,-9.628292,8.825803,3.797692,0.207708,-8.237031,-4.155646,9.664709,3.530488,0.588125,-4.122417,-1.378263,-8.274151,4.645456,4.126928,-9.682968,-0.469582,-1.879118,5.537388,1.572003,-7.588253,-6.949837,-9.641466,-8.418426,-5.985090,-5.631230,-0.143462,5.516427,8.433559,-5.274415,6.957656,-2.972300,-0.935574,9.839464,-2.723786,-5.722045,-8.352392,6.157992,9.033802,-2.686903,-8.388083,-0.649317,8.835769,3.916353,-2.900185,7.842056,-6.396840,5.506222,1.595809,-2.937821,3.257717,-7.322423,-3.520341,2.298014,4.412389,3.033175,-7.808083,-0.158587,2.938220,-0.995411,-8.409293,4.342259,7.938214,7.603678,4.101436,-2.334764,-6.491479,-9.490253,6.672051,-7.166213,5.638588,-2.957684,1.499313,-4.280498,-1.430690,2.151067,-7.936476,0.515189,2.813259,-2.873364,-0.438944,-9.620647,0.177561,1.579416,-9.188223,0.297301,-4.059856,0.195751,7.091209,-1.687425,-2.815563,-5.864137,6.444864,1.839738,-0.925906,8.105773,-3.608781,4.522694,3.368358,-9.348588,6.596662,2.661268,5.783593,0.761435,-1.422322,-4.479294,8.014577,-2.331136,-4.407017,-4.974954,2.043236,-1.491084,3.479174,-7.766575,-6.800624,-8.759941,-5.725013,2.883611,-5.368087,-3.548646,5.821081,8.184180,5.797693,1.948709,0.538112,-7.005402,2.441039,8.042952,1.148201,4.851989,-5.553338,8.885552,-3.853227,4.387409,3.210263,5.114420,-9.752374,-0.233145,-6.538358,-0.293909,5.476074,2.063370,2.910107,5.802115,-3.677648,-6.678315,-9.860005,0.922254,7.202806,1.853779,1.518693,7.851098,2.220556,1.729775,3.502209,-0.514779,4.847112,1.561987,-4.751450,3.125946,-0.705459,5.371847,8.704290,1.657892,6.350148,4.276788,5.642985,3.293129,-3.236180,2.971691,-7.441293,-7.283983,1.277743,-1.428373,-6.125926,-7.468304,7.571281,7.402247,-9.529277,5.167441,3.398998,-1.909197,7.910464,-1.359721,9.362727,7.817247,0.660130,5.204606,-6.297400,-0.495765,0.543415,3.270514,-1.041753,8.731064,0.409419,2.453901,9.310056,3.557078,1.796313,9.134537,3.287767,-9.219407,-7.023377,7.223414,1.065786,-5.778210,-9.228480,2.760804,-3.487433,-2.771350,-3.285236,4.327393,8.525892,-5.403845,-3.053016,1.077125,8.008707,-9.013307,8.557506,-2.773013,4.366658,6.924820,-4.670305,-0.653268,4.108895,-9.627665,-5.772815,-5.161970,-2.295744,-2.231560,-4.436513,9.741159,2.395285,8.362009,2.597996,4.519865,-5.475374,3.390307,-4.007774,-7.877288,-1.511188,7.725970,-1.503597,-4.352663,-1.857514,4.086361,2.488656,-4.422661,-3.745805,3.570802,3.177523,-6.573935,-1.699057,-5.418610,3.235148,-0.694056,0.742626,1.307823,6.011105,2.377711,-1.957311,-5.668966,2.177384,5.780263,2.285619,9.378984,9.771810,-4.833214,6.645888,-8.389974,0.372719,-6.161431,-8.625725,-0.124281,-3.578362,-1.488273,-6.433611,-2.036670,2.831100,4.041108,-7.833933,-9.023559,-9.659283,3.716757,4.670889,3.793000,9.315315,-7.325176,8.152545,1.193549,-3.675361,-8.571284,1.578306,-0.198766,-1.050570,6.365624,-3.820831,7.940930,-6.319239,9.370380,-1.190060,0.069088,-0.314357,-2.972700,-2.746247,8.548421,8.921008,-7.070679,-0.759286,9.816235,-5.904037,-6.617899,-3.567029,-1.764121,-8.083885,8.043195,-0.236541,-1.604327,-2.287822,-2.899749,8.724152,4.385759,4.651055,2.421743,-8.853634,8.567048,8.893297,4.937902,0.667037,-1.186046,8.326344,-3.357117,-0.452452,1.658853,3.068422,-7.365599,2.663027,8.018369,0.264083,2.064488,-2.794199,-6.632768,-8.640113,2.404739,2.996872,9.043904,1.356420,-6.853097,6.431876,-6.219467,2.441922,3.132883,-5.567983,-9.015000,4.656321,9.671573,-9.492922,7.122929,-1.552100,-7.791421,-6.244437,-7.103778,1.794743,-1.293764,-9.418873,-4.186394,7.683845,8.032224,-4.395140,0.404045,0.628448,2.954820,-4.444301,-5.279377,-0.343295,2.099397,-5.629286,-9.682606,-1.727664,-4.551028,-3.708991,7.605791,-3.028709,0.255570,-0.480843,-5.660780,-4.175932,0.411527,-0.295295,1.649332,-9.998602,-3.500181,-0.786549,-4.278746,1.720209,-5.666898], dtype = "float64")#candidate|1024|(648,)|const|float64
call_1023 = relay.TupleGetItem(func_24_call(relay.reshape(const_1024.astype('float64'), [12, 6, 9])), 0)
call_1025 = relay.TupleGetItem(func_27_call(relay.reshape(const_1024.astype('float64'), [12, 6, 9])), 0)
func_818_call = mod.get_global_var('func_818')
func_822_call = mutated_mod.get_global_var('func_822')
const_1030 = relay.const([3,3,10,-10,2,10,9,6,-6,7,4,-5,-8,7,7], dtype = "uint32")#candidate|1030|(15,)|const|uint32
var_1031 = relay.var("var_1031", dtype = "uint32", shape = (30,))#candidate|1031|(30,)|var|uint32
call_1029 = func_818_call(relay.reshape(const_1030.astype('uint32'), [1, 15, 1]), relay.reshape(var_1031.astype('uint32'), [1, 15, 2]), )
call_1032 = func_818_call(relay.reshape(const_1030.astype('uint32'), [1, 15, 1]), relay.reshape(var_1031.astype('uint32'), [1, 15, 2]), )
output = relay.Tuple([call_1014,call_1023,const_1024,call_1029,const_1030,var_1031,])
output2 = relay.Tuple([call_1015,call_1025,const_1024,call_1032,const_1030,var_1031,])
func_1033 = relay.Function([var_1031,], output)
mod['func_1033'] = func_1033
mod = relay.transform.InferType()(mod)
var_1034 = relay.var("var_1034", dtype = "uint32", shape = (30,))#candidate|1034|(30,)|var|uint32
output = func_1033(var_1034)
func_1035 = relay.Function([var_1034], output)
mutated_mod['func_1035'] = func_1035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_1043 = relay.TupleGetItem(func_961_call(), 0)
call_1044 = relay.TupleGetItem(func_962_call(), 0)
output = relay.Tuple([call_1043,])
output2 = relay.Tuple([call_1044,])
func_1045 = relay.Function([], output)
mod['func_1045'] = func_1045
mod = relay.transform.InferType()(mod)
output = func_1045()
func_1046 = relay.Function([], output)
mutated_mod['func_1046'] = func_1046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_1061 = func_1011_call()
call_1062 = func_1011_call()
func_221_call = mod.get_global_var('func_221')
func_224_call = mutated_mod.get_global_var('func_224')
var_1070 = relay.var("var_1070", dtype = "uint64", shape = (98,))#candidate|1070|(98,)|var|uint64
call_1069 = relay.TupleGetItem(func_221_call(relay.reshape(var_1070.astype('uint64'), [7, 1, 14])), 3)
call_1071 = relay.TupleGetItem(func_224_call(relay.reshape(var_1070.astype('uint64'), [7, 1, 14])), 3)
output = relay.Tuple([call_1061,call_1069,var_1070,])
output2 = relay.Tuple([call_1062,call_1071,var_1070,])
func_1090 = relay.Function([var_1070,], output)
mod['func_1090'] = func_1090
mod = relay.transform.InferType()(mod)
mutated_mod['func_1090'] = func_1090
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1091 = relay.var("var_1091", dtype = "uint64", shape = (98,))#candidate|1091|(98,)|var|uint64
func_1090_call = mutated_mod.get_global_var('func_1090')
call_1092 = func_1090_call(var_1091)
output = call_1092
func_1093 = relay.Function([var_1091], output)
mutated_mod['func_1093'] = func_1093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_1118 = func_1011_call()
call_1119 = func_1011_call()
output = relay.Tuple([call_1118,])
output2 = relay.Tuple([call_1119,])
func_1122 = relay.Function([], output)
mod['func_1122'] = func_1122
mod = relay.transform.InferType()(mod)
mutated_mod['func_1122'] = func_1122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1123 = func_1122_call()
output = call_1123
func_1124 = relay.Function([], output)
mutated_mod['func_1124'] = func_1124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1128 = relay.var("var_1128", dtype = "uint16", shape = (14, 5, 13))#candidate|1128|(14, 5, 13)|var|uint16
var_1129 = relay.var("var_1129", dtype = "uint16", shape = (14, 5, 13))#candidate|1129|(14, 5, 13)|var|uint16
bop_1130 = relay.greater_equal(var_1128.astype('bool'), relay.reshape(var_1129.astype('bool'), relay.shape_of(var_1128))) # shape=(14, 5, 13)
func_1033_call = mod.get_global_var('func_1033')
func_1035_call = mutated_mod.get_global_var('func_1035')
var_1143 = relay.var("var_1143", dtype = "uint32", shape = (30,))#candidate|1143|(30,)|var|uint32
call_1142 = relay.TupleGetItem(func_1033_call(relay.reshape(var_1143.astype('uint32'), [30,])), 4)
call_1144 = relay.TupleGetItem(func_1035_call(relay.reshape(var_1143.astype('uint32'), [30,])), 4)
output = relay.Tuple([bop_1130,call_1142,var_1143,])
output2 = relay.Tuple([bop_1130,call_1144,var_1143,])
func_1175 = relay.Function([var_1128,var_1129,var_1143,], output)
mod['func_1175'] = func_1175
mod = relay.transform.InferType()(mod)
var_1176 = relay.var("var_1176", dtype = "uint16", shape = (14, 5, 13))#candidate|1176|(14, 5, 13)|var|uint16
var_1177 = relay.var("var_1177", dtype = "uint16", shape = (14, 5, 13))#candidate|1177|(14, 5, 13)|var|uint16
var_1178 = relay.var("var_1178", dtype = "uint32", shape = (30,))#candidate|1178|(30,)|var|uint32
output = func_1175(var_1176,var_1177,var_1178,)
func_1179 = relay.Function([var_1176,var_1177,var_1178,], output)
mutated_mod['func_1179'] = func_1179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_1194 = relay.TupleGetItem(func_1045_call(), 0)
call_1195 = relay.TupleGetItem(func_1046_call(), 0)
func_908_call = mod.get_global_var('func_908')
func_912_call = mutated_mod.get_global_var('func_912')
var_1198 = relay.var("var_1198", dtype = "float32", shape = (600,))#candidate|1198|(600,)|var|float32
const_1199 = relay.const([[-2.184174,4.293139,-4.039888,7.474130,9.344933,-8.228489,3.678044,-2.715273,-7.629653,6.383310,7.200824,-2.414815,-2.364742,2.167806,6.401327,-2.798758,-4.454779,-8.117229,-8.118068,1.496111,-5.871677,7.098900,9.643925,-2.697516,2.388479,2.619338,-9.156986,-3.012685,9.733102,9.205312,5.331727,-6.801064,-7.186996,-7.194190,8.597435,-3.226525],[6.123652,0.786449,-7.342549,2.947748,7.169587,-4.138613,-5.187662,-1.289479,2.789110,9.259152,-5.053966,-8.318367,-6.252520,5.231533,-0.118065,-8.623274,3.441592,-3.220921,8.962078,8.333549,1.199080,-6.811890,-3.484781,9.057630,5.550231,9.739597,8.456277,-8.770686,-1.833439,2.850540,8.441348,7.990237,9.480608,-7.923231,1.701353,0.263071],[-0.440055,-3.261267,3.336770,-0.731441,-1.423150,-1.621289,9.467041,-6.071146,-4.627524,-9.435019,6.820097,-8.729920,4.372455,3.761417,-1.304058,9.561083,8.116599,-7.676575,-9.492935,2.435936,-9.699334,-5.749573,-2.394269,5.904831,-8.990312,-1.071391,1.838798,-1.965144,-3.709419,0.545572,-4.459753,3.285409,3.380335,-1.250147,-9.775467,-4.255486],[2.944993,-1.940871,7.249149,-4.492301,2.771499,2.395231,2.275679,4.262077,-1.026438,7.830301,-6.166116,-0.534718,-1.393277,8.523685,-9.880106,8.465422,-5.983954,7.187499,8.903949,8.789284,-4.376526,-8.146435,-8.034642,4.893222,-9.455876,2.258331,8.696260,-0.582447,0.447961,-1.958480,-6.211195,7.570086,8.809254,-7.431371,3.389374,1.433739],[1.344652,5.833679,-1.557057,-0.433488,5.999234,6.601361,8.244715,-1.126992,2.025539,-1.863890,-6.802292,-8.860979,-0.704117,6.341956,-7.999554,4.841323,-1.134801,2.522161,-8.313703,9.508125,0.076346,-6.219838,4.912857,7.602216,-3.762572,-3.128231,-9.455635,-5.107569,1.659336,-7.752015,1.052960,0.302059,-3.962199,-9.676286,-5.022454,2.380566],[-2.913753,-1.337553,-4.489231,-5.311477,5.116755,-9.675543,0.098691,-0.540862,-2.591877,-1.770204,7.422785,6.614487,-3.612210,-0.407232,7.647975,-0.097959,4.017303,3.836638,8.726076,-2.445107,-7.142390,-4.255326,-6.871890,9.201989,7.020348,-5.568860,4.553993,-5.302145,3.876238,6.969642,-3.606753,-7.029381,-4.644017,-3.994524,9.432794,3.880427],[7.324602,3.002556,-8.179820,-7.999814,-5.750790,-4.210654,-3.521132,9.036832,9.881502,-8.155161,-4.535048,-7.668008,3.762389,-9.313676,5.256725,-6.710056,0.486785,-4.577452,-5.733764,4.428290,4.231052,9.365856,6.094164,1.678014,1.350387,-0.502553,-5.981277,-9.788301,9.578138,-9.212719,-1.681767,4.553323,-1.670173,-6.969350,-3.428079,3.871411],[6.790062,8.862160,3.760882,-8.562803,7.412339,4.745659,3.229767,6.984789,-0.787759,5.542843,-8.439712,4.848282,3.976306,-9.014168,8.180257,6.656751,-7.122172,9.795956,-6.298943,-5.329503,2.287332,6.201086,0.479312,4.394133,0.064853,9.832864,-7.355747,-6.343166,-3.137745,2.821375,4.082089,-3.498099,-0.001241,0.910673,6.128973,-7.452876],[3.353163,2.022528,-5.111984,3.194735,-4.945622,9.999727,9.458967,-8.971991,-9.003966,7.377021,-6.572469,9.009848,-7.005004,7.547527,-0.774521,-4.856032,-0.002496,0.083626,-7.563616,-8.326092,7.662397,4.497858,3.515320,-9.361151,-7.324126,8.750424,7.638851,1.482266,-5.850704,-3.021266,-9.976836,-5.954861,-8.671546,2.543843,-7.789654,5.376141],[6.525270,-4.423303,-5.541671,0.805122,6.672437,-1.921073,2.071625,-9.947714,-0.573955,5.534416,2.818817,2.790886,4.360668,-5.446467,-6.793656,9.489213,2.808254,3.570775,-7.978027,-1.117486,2.228438,-3.386686,-1.986149,-3.050941,8.743840,0.259929,-5.322452,6.101766,6.289355,0.846968,7.582197,7.671619,6.441655,8.575994,6.845371,3.982318],[-8.029525,-3.735044,-4.550081,7.597597,-0.839816,-8.275319,-7.954043,-9.123101,6.584403,1.051094,-9.524892,9.760000,2.881820,6.256544,-3.447922,-3.482130,-8.251882,3.504321,2.431843,3.152954,7.443338,-7.870046,7.089027,3.186793,9.588198,6.317890,-6.834276,1.122758,2.215719,-4.002594,6.421480,-6.384664,0.347045,-5.491457,9.786445,-4.225271],[9.485703,-3.568688,5.676241,0.803578,-5.916135,-4.756949,-4.302738,6.300189,-1.712924,3.526451,-0.819011,-6.830698,-3.025285,-4.751880,-6.087877,-5.768628,-4.043009,-9.035762,8.427937,-1.336331,-7.567485,-6.396122,-9.661538,1.202027,0.969410,-4.505543,-1.938613,-0.301720,7.260309,-2.175102,8.414901,1.659612,7.443595,-1.822933,8.429604,6.530558],[1.844140,-5.719623,8.610771,2.705753,9.268896,-2.726538,-3.337058,-5.640387,2.409877,7.884208,4.943261,-1.494345,-1.684867,0.096008,3.611420,3.415879,-6.376021,-3.846954,2.865801,5.095568,3.893340,3.117502,-7.443612,7.622955,-5.635440,-9.580640,0.312634,1.042622,1.131140,-1.526065,4.247141,-7.234524,9.993873,6.686446,-5.843859,7.834480],[-8.891261,3.779942,-4.649348,-4.846065,6.403687,4.812972,-9.578183,-2.434767,9.239037,-4.730250,-6.792773,0.398567,-4.435673,1.758930,5.560029,-9.161185,6.842685,-1.941549,9.940842,-1.659972,6.373756,3.253800,-5.492333,-1.854922,-7.857478,-4.114075,9.198595,2.114459,-3.263464,-2.466367,9.583083,6.347079,-8.906886,2.592874,4.937137,-2.504539],[8.686058,-7.658723,4.296237,0.706046,4.139171,-9.219776,3.272407,-2.767982,-6.851944,9.700572,-3.562914,-4.688377,-4.631631,-3.221436,-5.924697,7.520947,-9.804958,5.687141,-1.055520,-8.347085,5.790900,-7.994949,-4.173021,-3.916945,6.698253,-9.430244,5.905071,-4.569784,-5.741019,6.588589,8.126863,-8.596945,-9.711184,2.196461,6.164740,-0.937203],[-4.437011,2.462909,-0.694352,-3.240135,-6.085203,0.451334,1.716279,4.483592,-6.218010,-6.537925,2.894412,3.201563,7.791569,-7.089947,-0.166845,1.586666,1.929798,8.053348,-5.585834,1.815111,4.623721,-7.059558,-4.266672,-6.127948,-4.787785,-9.746295,-6.056706,4.788835,-7.627937,-4.748617,5.269515,-5.081480,-7.120540,-5.983371,5.153975,7.127987],[-0.091243,5.544007,-8.360803,3.826143,5.069815,-8.876021,4.982711,9.436181,-1.889811,0.505642,8.143925,-8.714120,9.967184,-4.838515,0.253211,0.427787,-1.963150,-1.857888,6.357864,6.563033,-3.374076,-2.713087,-8.936233,7.622775,1.627604,-9.136600,-4.187617,-3.447363,2.767416,-5.316796,1.346510,-6.358557,9.230348,-4.137528,-5.928527,5.935920],[6.070745,-7.075496,6.432303,-7.977386,-7.445715,1.143818,-7.042076,3.862400,-0.124673,-8.191528,7.960683,8.945651,0.281991,2.009445,-4.507405,-3.577689,-0.338449,8.109696,2.639132,-1.112670,-4.981902,-2.096584,-2.369242,-0.340087,-8.278177,-5.258140,0.930307,-9.546599,8.968377,-6.669716,-1.654743,0.437695,0.097906,-0.525992,1.977569,3.450472]], dtype = "float64")#candidate|1199|(18, 36)|const|float64
call_1197 = relay.TupleGetItem(func_908_call(relay.reshape(var_1198.astype('float32'), [10, 4, 15]), relay.reshape(const_1199.astype('float64'), [648,]), relay.reshape(var_1198.astype('float32'), [10, 4, 15]), ), 6)
call_1200 = relay.TupleGetItem(func_912_call(relay.reshape(var_1198.astype('float32'), [10, 4, 15]), relay.reshape(const_1199.astype('float64'), [648,]), relay.reshape(var_1198.astype('float32'), [10, 4, 15]), ), 6)
output = relay.Tuple([call_1194,call_1197,var_1198,const_1199,])
output2 = relay.Tuple([call_1195,call_1200,var_1198,const_1199,])
func_1203 = relay.Function([var_1198,], output)
mod['func_1203'] = func_1203
mod = relay.transform.InferType()(mod)
mutated_mod['func_1203'] = func_1203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1204 = relay.var("var_1204", dtype = "float32", shape = (600,))#candidate|1204|(600,)|var|float32
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1205 = func_1203_call(var_1204)
output = call_1205
func_1206 = relay.Function([var_1204], output)
mutated_mod['func_1206'] = func_1206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_1211 = relay.TupleGetItem(func_1045_call(), 0)
call_1212 = relay.TupleGetItem(func_1046_call(), 0)
output = relay.Tuple([call_1211,])
output2 = relay.Tuple([call_1212,])
func_1221 = relay.Function([], output)
mod['func_1221'] = func_1221
mod = relay.transform.InferType()(mod)
output = func_1221()
func_1222 = relay.Function([], output)
mutated_mod['func_1222'] = func_1222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1221_call = mod.get_global_var('func_1221')
func_1222_call = mutated_mod.get_global_var('func_1222')
call_1226 = relay.TupleGetItem(func_1221_call(), 0)
call_1227 = relay.TupleGetItem(func_1222_call(), 0)
var_1229 = relay.var("var_1229", dtype = "bool", shape = (3, 15, 4))#candidate|1229|(3, 15, 4)|var|bool
bop_1230 = relay.power(call_1226.astype('float32'), relay.reshape(var_1229.astype('float32'), relay.shape_of(call_1226))) # shape=(3, 15, 4)
bop_1233 = relay.power(call_1227.astype('float32'), relay.reshape(var_1229.astype('float32'), relay.shape_of(call_1227))) # shape=(3, 15, 4)
uop_1244 = relay.asin(var_1229.astype('float64')) # shape=(3, 15, 4)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_1247 = relay.TupleGetItem(func_1122_call(), 0)
call_1248 = relay.TupleGetItem(func_1124_call(), 0)
func_1033_call = mod.get_global_var('func_1033')
func_1035_call = mutated_mod.get_global_var('func_1035')
var_1250 = relay.var("var_1250", dtype = "uint32", shape = (30,))#candidate|1250|(30,)|var|uint32
call_1249 = relay.TupleGetItem(func_1033_call(relay.reshape(var_1250.astype('uint32'), [30,])), 3)
call_1251 = relay.TupleGetItem(func_1035_call(relay.reshape(var_1250.astype('uint32'), [30,])), 3)
uop_1256 = relay.asinh(bop_1230.astype('float64')) # shape=(3, 15, 4)
uop_1258 = relay.asinh(bop_1233.astype('float64')) # shape=(3, 15, 4)
func_523_call = mod.get_global_var('func_523')
func_526_call = mutated_mod.get_global_var('func_526')
const_1260 = relay.const([-6,6,-6,-9,7,-8,2,-8,-4,-10,10,-10,-7,-10,-8,6,2,10,-9,4,6,4,1,-7,-3,-5,6,10,4,-8,-5,-6,8,-4,2,-3,-1,-8,-1,9,-4,8,2,3,10,-10,-6,1,-10,-9,6,-3,-8,-1,-8,4,-7,-9,-2,8,-4,8,-3,-3,5,-7,5,10,-3,-4,-3,10,-3,-10,-3,-9,-5,8,6,-2,5,-4,9,4,4,10,8,-7,1,6,-6,-3,-9,-8,2,8,9,-8,3,-8,-9,4,10,-8,9,-7,8,5,-10,-4,4,10,3,10,7,5,-6,-7,2,-7,1,7,3,1,-6,-6,7,2,1,8,-9,7,-1,4,-10,-6,5,2,-5,1,-8,-2,10,-6,5,2,6,3,-4,3,-8,-6,-4,10], dtype = "int8")#candidate|1260|(154,)|const|int8
call_1259 = relay.TupleGetItem(func_523_call(relay.reshape(const_1260.astype('int8'), [11, 1, 14])), 0)
call_1261 = relay.TupleGetItem(func_526_call(relay.reshape(const_1260.astype('int8'), [11, 1, 14])), 0)
output = relay.Tuple([uop_1244,call_1247,call_1249,var_1250,uop_1256,call_1259,const_1260,])
output2 = relay.Tuple([uop_1244,call_1248,call_1251,var_1250,uop_1258,call_1261,const_1260,])
func_1263 = relay.Function([var_1229,var_1250,], output)
mod['func_1263'] = func_1263
mod = relay.transform.InferType()(mod)
mutated_mod['func_1263'] = func_1263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1263_call = mutated_mod.get_global_var('func_1263')
var_1265 = relay.var("var_1265", dtype = "bool", shape = (3, 15, 4))#candidate|1265|(3, 15, 4)|var|bool
var_1266 = relay.var("var_1266", dtype = "uint32", shape = (30,))#candidate|1266|(30,)|var|uint32
call_1264 = func_1263_call(var_1265,var_1266,)
output = call_1264
func_1267 = relay.Function([var_1265,var_1266,], output)
mutated_mod['func_1267'] = func_1267
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1362 = relay.const([[[4,9,-6,-1,2,10,-5],[10,-3,4,-9,-7,-8,3],[10,-3,7,4,-6,-2,-6]],[[4,1,9,-9,10,-3,2],[-7,3,6,2,9,-5,-2],[-1,-1,-10,-1,8,1,-9]],[[-7,6,-3,-1,-6,-4,-10],[-7,-6,-9,-7,9,9,7],[7,6,6,-10,-10,2,6]],[[10,5,-6,-8,-9,-5,1],[6,-4,6,7,-2,5,-9],[-8,2,-9,-5,-9,-2,-8]],[[-5,-1,-8,5,4,10,-8],[10,1,-2,-5,-10,-6,5],[-7,6,-3,4,1,7,-1]],[[5,-1,9,-10,7,-2,8],[-7,-7,-6,-6,-10,-2,10],[-10,8,10,-8,-3,10,6]],[[8,9,8,10,6,5,-6],[9,-8,-7,-2,-6,-6,1],[-9,-5,2,2,7,-6,-8]],[[1,9,10,-8,-4,3,-3],[8,-4,-10,6,4,-1,-10],[6,-1,-3,-10,10,1,-10]],[[-5,-5,6,2,2,-7,-5],[-7,-9,-4,3,-3,-4,1],[-8,-2,-4,5,-8,-6,-2]],[[7,3,-2,-9,3,6,3],[8,5,-2,8,-4,6,8],[4,-4,7,7,10,-8,5]],[[10,1,-1,5,-3,-1,-5],[-3,-8,-7,10,-2,5,-10],[-6,4,3,5,4,-9,-2]],[[-6,-7,2,-5,-8,2,9],[-1,-8,-6,-4,-2,4,6],[2,4,-6,6,6,8,-8]],[[5,8,8,4,2,2,-6],[7,10,1,9,6,-7,9],[-8,6,6,-1,1,10,-5]],[[5,-1,-5,-4,-6,6,-10],[-6,-10,8,8,-9,-2,-6],[4,-5,3,3,-6,4,10]],[[3,5,-1,-4,1,4,-2],[-2,9,10,-5,7,-8,-3],[-4,-6,-4,-6,8,-5,3]]], dtype = "int64")#candidate|1362|(15, 3, 7)|const|int64
var_1363 = relay.var("var_1363", dtype = "int64", shape = (15, 3, 7))#candidate|1363|(15, 3, 7)|var|int64
bop_1364 = relay.logical_xor(const_1362.astype('int64'), relay.reshape(var_1363.astype('int64'), relay.shape_of(const_1362))) # shape=(15, 3, 7)
bop_1370 = relay.divide(const_1362.astype('float64'), relay.reshape(var_1363.astype('float64'), relay.shape_of(const_1362))) # shape=(15, 3, 7)
func_818_call = mod.get_global_var('func_818')
func_822_call = mutated_mod.get_global_var('func_822')
const_1393 = relay.const([9,-3,-5,-3,2,2,1,5,-5,-1,3,1,-5,-4,-10], dtype = "uint32")#candidate|1393|(15,)|const|uint32
const_1394 = relay.const([7,5,4,2,7,-1,5,8,6,5,1,3,-4,7,10,-10,9,-10,5,-8,-6,-3,-4,-1,10,10,-1,7,9,-7], dtype = "uint32")#candidate|1394|(30,)|const|uint32
call_1392 = func_818_call(relay.reshape(const_1393.astype('uint32'), [1, 15, 1]), relay.reshape(const_1394.astype('uint32'), [1, 15, 2]), )
call_1395 = func_818_call(relay.reshape(const_1393.astype('uint32'), [1, 15, 1]), relay.reshape(const_1394.astype('uint32'), [1, 15, 2]), )
output = relay.Tuple([bop_1364,bop_1370,call_1392,const_1393,const_1394,])
output2 = relay.Tuple([bop_1364,bop_1370,call_1395,const_1393,const_1394,])
func_1397 = relay.Function([var_1363,], output)
mod['func_1397'] = func_1397
mod = relay.transform.InferType()(mod)
var_1398 = relay.var("var_1398", dtype = "int64", shape = (15, 3, 7))#candidate|1398|(15, 3, 7)|var|int64
output = func_1397(var_1398)
func_1399 = relay.Function([var_1398], output)
mutated_mod['func_1399'] = func_1399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_1459 = relay.TupleGetItem(func_1122_call(), 0)
call_1460 = relay.TupleGetItem(func_1124_call(), 0)
func_1175_call = mod.get_global_var('func_1175')
func_1179_call = mutated_mod.get_global_var('func_1179')
var_1465 = relay.var("var_1465", dtype = "uint16", shape = (910,))#candidate|1465|(910,)|var|uint16
var_1466 = relay.var("var_1466", dtype = "uint32", shape = (30,))#candidate|1466|(30,)|var|uint32
call_1464 = relay.TupleGetItem(func_1175_call(relay.reshape(var_1465.astype('uint16'), [14, 5, 13]), relay.reshape(var_1465.astype('uint16'), [14, 5, 13]), relay.reshape(var_1466.astype('uint32'), [30,]), ), 1)
call_1467 = relay.TupleGetItem(func_1179_call(relay.reshape(var_1465.astype('uint16'), [14, 5, 13]), relay.reshape(var_1465.astype('uint16'), [14, 5, 13]), relay.reshape(var_1466.astype('uint32'), [30,]), ), 1)
func_523_call = mod.get_global_var('func_523')
func_526_call = mutated_mod.get_global_var('func_526')
const_1478 = relay.const([10,-6,9,-1,4,9,-7,-9,-6,-8,-2,5,8,10,-1,1,8,-2,-9,-6,-4,-7,10,1,8,2,-10,10,2,6,-6,-3,-6,1,-9,-10,-2,3,-4,9,-6,2,9,-3,-3,-2,-10,5,-3,1,3,-6,8,-10,-6,4,1,7,9,9,-1,-1,8,-8,4,5,-3,-4,-10,3,5,-7,5,-6,-4,-8,-8,7,-7,-8,-4,-8,-4,8,-9,10,-2,10,-1,-4,1,-1,3,6,-2,-10,-7,-5,-1,5,-6,3,1,7,-10,-6,-5,2,4,-7,-2,5,3,2,-5,-3,-1,-8,10,4,-8,-2,7,10,-2,8,-2,-5,6,-3,2,1,2,8,7,-3,2,8,9,-1,-5,-5,3,-3,5,10,-2,3,-10,-10,-2,-2,8,4], dtype = "int8")#candidate|1478|(154,)|const|int8
call_1477 = relay.TupleGetItem(func_523_call(relay.reshape(const_1478.astype('int8'), [11, 1, 14])), 0)
call_1479 = relay.TupleGetItem(func_526_call(relay.reshape(const_1478.astype('int8'), [11, 1, 14])), 0)
func_221_call = mod.get_global_var('func_221')
func_224_call = mutated_mod.get_global_var('func_224')
const_1481 = relay.const([-2,7,-3,7,5,10,9,-6,-6,2,7,7,10,5,-10,-7,5,6,-10,8,1,1,-5,-1,-1,9,10,5,-9,-5,5,3,-7,-10,2,-10,-5,-4,-10,-1,9,-9,7,10,-2,-7,8,-9,-1,-2,6,-5,-5,-1,-4,-7,4,4,10,9,1,-3,10,-6,2,1,9,8,6,10,4,5,-3,-1,-4,-7,8,6,1,-8,-9,10,6,-4,9,-6,-9,-1,1,7,2,-2,3,10,-1,8,7,10], dtype = "uint64")#candidate|1481|(98,)|const|uint64
call_1480 = relay.TupleGetItem(func_221_call(relay.reshape(const_1481.astype('uint64'), [7, 1, 14])), 5)
call_1482 = relay.TupleGetItem(func_224_call(relay.reshape(const_1481.astype('uint64'), [7, 1, 14])), 5)
const_1483 = relay.const([-8,-5,9,10,-1,10,-5,-1,-7,-1,-4,3,-2,7,-7,-3,1,5,2,-5,-10,-6,8,-7,-2,9,9,-2,-4,10,-3,8,1,-1,-1,-7,1,-3,3,-3,-10,-4,4,-9,-5,2,4,-10,-3,7,9,-4,-9,1,-7,-10,-7,-8,-10,-1,-8,1,-1,6,-3,-10,8,5,1,3,8,-6,8,8,-1,-1,2,-10,4,-8,10,9,10,-7,-10,8,4,5,-10,-1,3,-9,-5,-7,6,6,-3,-5,-1,-3,-3,-2,-9,-2,-1,-7,5,7,-8,1,-10,-1,3,6,-6,-8,-4,-9,-7,-9,4,-5,5,-10,-8,6,-9,-1,-10,-10,-7,-9,-9,3,9,-6,-9,3,3,-4,6,9,8,-10,6,-9,6,-4,-6,3,-9,10,10,-10,9,-3,8,2,1,-6,-2,2,1,-3,4,-4,-4,1,-10,-8,6,5,7,-2,9,-7,-1,9,6,-10,-9,-3,1,-9,-4,-9,2,6,1,-8,-6,-1,4,8,1,10,2,-5,7,3,4,-4,6,-6,10,7,-8,2,8,4,9,1,7,-4,1,8,1,-2,3,-4,-9,-10,1,1,-3,-3,8,4,2,-2,7,-8,3,5,-5,3,-2,-3,5,4,-6,8,1,-1,-2,-5,2,-5,-3,-3,9,-4,-8,-4,8,1,-5,10,-3,-8,-2,1,-6,3,9,10,1,-9,-9,-2,-2,-3,-3,4,1,-10,5,-1,10,-2,7,8,-6,-8,1,3,4,2,-6,3,8,-2,-5,-6,4,-5,-2,2,-10,-2,-10,-6,-1,-10,-5,-4,-8,-6,9,9,3,-8,-7,-2,9,-9,1,3,-4,-8,-8,9,-1,9,8,5,2,-6,-2,-5,4,-9,-9,-4,-5,-9,-5,1,5,5,-9,-5,-2,9,9,6,-10,-8,-9,-10,-5,9,9,-7,9,-10,-10,9,-7,-7,-6,2,10,-3,-2,-3,-3,-10,-2,9,-7,-2,-3,3,3,6,5,-3,8,3,-10,9,-9,-6,-4,-4,3,9,9,7,2,-1,-3,-1,10,-1,10,-4,10,2,6,-6,4,-6,-9,-6,8,9,2,2,-6,4,4,-5,-9,-8,-2,5,-2,-10,-6,2,-4,7,1,-9,4,-2,-3,-3,-3,9,-7,-3,5,-10,10,7,4,-1,3,1,5,-6,-2,5,1,-1,8,9,-7,-4,-2,-10,-5,1,-1,7,-10,8,-3,-7,5,-7,2,-6,-7,-6,3,7,-7,8,-5,-7,8,-6,6,-7,1,-6,2,-2,4,1,-3,5,-1,9,-8,10,2,10,9,-3,-3,-1,-10,-5,-10,2,-7,5,-2,1,-3,-9,-8,6,-6,6,-7,6,2,4,8,-9,-4,2,-1,7,5,-2,5,-10,7,10,-5,-1,-8,10,2,-2,6,-4,8,-4,7,7,3,3,-3,4,-1,-6,-2,6,6,2,-3,-8,10,-5,-7,1,10,-10,8,3,-10,10,-5,-6,6,2,6,10,1,5,8,8,1,-2,-1,-8,-4,-3,-7,-10,10,-4,-4,-4,-2,3,-6,-9,-10,-4,8,3,4,-10,6,-6,4,5,-6,2,-8,1,7,-9,-3,-9,-8,-2,10,-3,-4,5,1,-5,-8,7,4,-10,-8,-10,-5,-1,-3,5,-6,4,-7,9,10,7,3,-4,3,-7,-4,-3,6,-9,-8,-6,3,6,10,10,-1,6,4,-2,3,-10,-6,5,9,-5,-10,-3,3,-5,-9,1,-5,-6,8,-5,-9,9,10,-1,9,7,-7,2,-4,-2,-3,2,1,-6,8,-9,8,2,1,-10,9,8,10,7,9,6,2,10,8,10,9,2,-7,-9,8,-7,-7,-5,6,-2,1,7,-9,-7,-4,4,-8,5,1,-4,-1,7,9,-6,6,-2,-9,-10,-7,-5,6,8,-4,-1,-5,5,9,6,6,5,-2,-8,-5,7,-9,-6,-10,1,5,2,-9,6,10,6,-3,-1,7,4,-10,-7,-3,-6,-7,-10,10,-2,10,-7,-9,-8,7,7,-1,-9,4,-1,-8,2,3,8,6,2,-6,-6,-5,7,-6,-5,5,-7,9,8,3,3,-3,-1,8,5,-2,1,7,-9,-4,7,10,10,2,-9,9,-2,2,3,7,-6,-9,8,8,-7,6,4,8,5,2,-6,5,-5,-1,9,-6,-7,-3,-1,4,3,-3,-6,-1,-2,5,5,-6,-7,9,-5,10,-10,-8,-5,-10,-4,5,4,1,2,4,5,8,-6,-7,-3,-2,-1,-3,-5,-5,4,7,10,5,-5,9,-8,-4,-5,-7,2,-1,-2,-9,7,-5,8,10,1,9,-6,-8,5,-1,4,9,7,-9,2,5,-6,2,-2,1,10,1,-8,2,-10,-4,-9,10,-10,-5,9,-2,10,-8,-8,8,-10,-4,8], dtype = "uint16")#candidate|1483|(910,)|const|uint16
bop_1484 = relay.left_shift(var_1465.astype('int16'), relay.reshape(const_1483.astype('int16'), relay.shape_of(var_1465))) # shape=(910,)
output = relay.Tuple([call_1459,call_1464,var_1466,call_1477,const_1478,call_1480,const_1481,bop_1484,])
output2 = relay.Tuple([call_1460,call_1467,var_1466,call_1479,const_1478,call_1482,const_1481,bop_1484,])
func_1491 = relay.Function([var_1465,var_1466,], output)
mod['func_1491'] = func_1491
mod = relay.transform.InferType()(mod)
mutated_mod['func_1491'] = func_1491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1491_call = mutated_mod.get_global_var('func_1491')
var_1493 = relay.var("var_1493", dtype = "uint16", shape = (910,))#candidate|1493|(910,)|var|uint16
var_1494 = relay.var("var_1494", dtype = "uint32", shape = (30,))#candidate|1494|(30,)|var|uint32
call_1492 = func_1491_call(var_1493,var_1494,)
output = call_1492
func_1495 = relay.Function([var_1493,var_1494,], output)
mutated_mod['func_1495'] = func_1495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_1500 = func_1011_call()
call_1501 = func_1011_call()
output = relay.Tuple([call_1500,])
output2 = relay.Tuple([call_1501,])
func_1505 = relay.Function([], output)
mod['func_1505'] = func_1505
mod = relay.transform.InferType()(mod)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mutated_mod.get_global_var('func_1505')
call_1506 = func_1505_call()
output = call_1506
func_1507 = relay.Function([], output)
mutated_mod['func_1507'] = func_1507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1558 = relay.var("var_1558", dtype = "int32", shape = (16, 13, 10))#candidate|1558|(16, 13, 10)|var|int32
var_1559 = relay.var("var_1559", dtype = "int32", shape = (16, 13, 10))#candidate|1559|(16, 13, 10)|var|int32
bop_1560 = relay.bitwise_or(var_1558.astype('int32'), relay.reshape(var_1559.astype('int32'), relay.shape_of(var_1558))) # shape=(16, 13, 10)
output = bop_1560
output2 = bop_1560
func_1581 = relay.Function([var_1558,var_1559,], output)
mod['func_1581'] = func_1581
mod = relay.transform.InferType()(mod)
var_1582 = relay.var("var_1582", dtype = "int32", shape = (16, 13, 10))#candidate|1582|(16, 13, 10)|var|int32
var_1583 = relay.var("var_1583", dtype = "int32", shape = (16, 13, 10))#candidate|1583|(16, 13, 10)|var|int32
output = func_1581(var_1582,var_1583,)
func_1584 = relay.Function([var_1582,var_1583,], output)
mutated_mod['func_1584'] = func_1584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_1590 = func_1011_call()
call_1591 = func_1011_call()
output = relay.Tuple([call_1590,])
output2 = relay.Tuple([call_1591,])
func_1595 = relay.Function([], output)
mod['func_1595'] = func_1595
mod = relay.transform.InferType()(mod)
output = func_1595()
func_1596 = relay.Function([], output)
mutated_mod['func_1596'] = func_1596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1595_call = mod.get_global_var('func_1595')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_1615 = relay.TupleGetItem(func_1595_call(), 0)
call_1616 = relay.TupleGetItem(func_1596_call(), 0)
output = call_1615
output2 = call_1616
func_1619 = relay.Function([], output)
mod['func_1619'] = func_1619
mod = relay.transform.InferType()(mod)
mutated_mod['func_1619'] = func_1619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mutated_mod.get_global_var('func_1619')
call_1620 = func_1619_call()
output = call_1620
func_1621 = relay.Function([], output)
mutated_mod['func_1621'] = func_1621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_1628 = relay.TupleGetItem(func_961_call(), 0)
call_1629 = relay.TupleGetItem(func_962_call(), 0)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_1631 = relay.TupleGetItem(func_961_call(), 0)
call_1632 = relay.TupleGetItem(func_962_call(), 0)
output = relay.Tuple([call_1628,call_1631,])
output2 = relay.Tuple([call_1629,call_1632,])
func_1636 = relay.Function([], output)
mod['func_1636'] = func_1636
mod = relay.transform.InferType()(mod)
output = func_1636()
func_1637 = relay.Function([], output)
mutated_mod['func_1637'] = func_1637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1689 = relay.var("var_1689", dtype = "float64", shape = (1, 7, 3))#candidate|1689|(1, 7, 3)|var|float64
uop_1690 = relay.sqrt(var_1689.astype('float64')) # shape=(1, 7, 3)
bop_1696 = relay.add(uop_1690.astype('uint64'), relay.reshape(var_1689.astype('uint64'), relay.shape_of(uop_1690))) # shape=(1, 7, 3)
bop_1699 = relay.maximum(var_1689.astype('int64'), relay.reshape(uop_1690.astype('int64'), relay.shape_of(var_1689))) # shape=(1, 7, 3)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_1707 = relay.TupleGetItem(func_1045_call(), 0)
call_1708 = relay.TupleGetItem(func_1046_call(), 0)
func_523_call = mod.get_global_var('func_523')
func_526_call = mutated_mod.get_global_var('func_526')
const_1712 = relay.const([-7,-8,9,-5,-8,-1,6,-3,-8,9,5,6,-5,-3,8,-10,8,3,7,4,-2,8,2,4,-10,-3,-8,-3,9,-4,1,-3,1,-6,3,-4,6,4,3,9,1,-8,-3,4,8,-9,1,6,8,-10,4,6,6,-10,-8,-2,-3,1,-3,7,4,-10,8,9,-2,6,3,-7,-4,7,10,-4,-4,-8,-2,10,-1,-1,8,6,8,-5,-6,9,-1,-3,-10,3,-1,-2,-6,-7,3,-9,-9,-1,8,8,-8,3,7,-10,2,2,-6,6,-7,10,-2,-10,-5,10,7,-7,-8,6,-8,-4,-2,6,1,10,5,-5,-1,10,6,-9,-9,-7,1,-2,-10,1,-1,9,-9,9,3,2,8,1,-5,8,9,1,-9,-8,9,2,-8,-3,2,-2], dtype = "int8")#candidate|1712|(154,)|const|int8
call_1711 = relay.TupleGetItem(func_523_call(relay.reshape(const_1712.astype('int8'), [11, 1, 14])), 0)
call_1713 = relay.TupleGetItem(func_526_call(relay.reshape(const_1712.astype('int8'), [11, 1, 14])), 0)
func_1033_call = mod.get_global_var('func_1033')
func_1035_call = mutated_mod.get_global_var('func_1035')
const_1715 = relay.const([[9],[9],[7],[5],[9],[9],[4],[9],[-10],[-6],[4],[3],[2],[10],[-1],[-9],[4],[-8],[-8],[-7],[6],[6],[-5],[-5],[-2],[6],[-9],[-3],[4],[1]], dtype = "uint32")#candidate|1715|(30, 1)|const|uint32
call_1714 = relay.TupleGetItem(func_1033_call(relay.reshape(const_1715.astype('uint32'), [30,])), 1)
call_1716 = relay.TupleGetItem(func_1035_call(relay.reshape(const_1715.astype('uint32'), [30,])), 1)
bop_1723 = relay.bitwise_xor(var_1689.astype('uint32'), relay.reshape(uop_1690.astype('uint32'), relay.shape_of(var_1689))) # shape=(1, 7, 3)
uop_1760 = relay.acosh(bop_1723.astype('float64')) # shape=(1, 7, 3)
var_1764 = relay.var("var_1764", dtype = "uint32", shape = (7, 7, 3))#candidate|1764|(7, 7, 3)|var|uint32
bop_1765 = relay.equal(bop_1723.astype('bool'), var_1764.astype('bool')) # shape=(7, 7, 3)
uop_1777 = relay.atan(uop_1760.astype('float64')) # shape=(1, 7, 3)
uop_1780 = relay.sin(uop_1760.astype('float64')) # shape=(1, 7, 3)
bop_1783 = relay.floor_divide(uop_1760.astype('float32'), relay.reshape(bop_1723.astype('float32'), relay.shape_of(uop_1760))) # shape=(1, 7, 3)
func_1595_call = mod.get_global_var('func_1595')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_1788 = relay.TupleGetItem(func_1595_call(), 0)
call_1789 = relay.TupleGetItem(func_1596_call(), 0)
output = relay.Tuple([bop_1696,bop_1699,call_1707,call_1711,const_1712,call_1714,const_1715,bop_1765,uop_1777,uop_1780,bop_1783,call_1788,])
output2 = relay.Tuple([bop_1696,bop_1699,call_1708,call_1713,const_1712,call_1716,const_1715,bop_1765,uop_1777,uop_1780,bop_1783,call_1789,])
func_1802 = relay.Function([var_1689,var_1764,], output)
mod['func_1802'] = func_1802
mod = relay.transform.InferType()(mod)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1802_call = mutated_mod.get_global_var('func_1802')
var_1804 = relay.var("var_1804", dtype = "float64", shape = (1, 7, 3))#candidate|1804|(1, 7, 3)|var|float64
var_1805 = relay.var("var_1805", dtype = "uint32", shape = (7, 7, 3))#candidate|1805|(7, 7, 3)|var|uint32
call_1803 = func_1802_call(var_1804,var_1805,)
output = call_1803
func_1806 = relay.Function([var_1804,var_1805,], output)
mutated_mod['func_1806'] = func_1806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_1831 = func_1619_call()
call_1832 = func_1619_call()
output = relay.Tuple([call_1831,])
output2 = relay.Tuple([call_1832,])
func_1841 = relay.Function([], output)
mod['func_1841'] = func_1841
mod = relay.transform.InferType()(mod)
mutated_mod['func_1841'] = func_1841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mutated_mod.get_global_var('func_1841')
call_1842 = func_1841_call()
output = call_1842
func_1843 = relay.Function([], output)
mutated_mod['func_1843'] = func_1843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_1864 = relay.TupleGetItem(func_1122_call(), 0)
call_1865 = relay.TupleGetItem(func_1124_call(), 0)
uop_1866 = relay.cosh(call_1864.astype('float64')) # shape=(3, 15, 4)
uop_1868 = relay.cosh(call_1865.astype('float64')) # shape=(3, 15, 4)
output = uop_1866
output2 = uop_1868
func_1869 = relay.Function([], output)
mod['func_1869'] = func_1869
mod = relay.transform.InferType()(mod)
output = func_1869()
func_1870 = relay.Function([], output)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_1921 = relay.TupleGetItem(func_1841_call(), 0)
call_1922 = relay.TupleGetItem(func_1843_call(), 0)
func_1595_call = mod.get_global_var('func_1595')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_1926 = relay.TupleGetItem(func_1595_call(), 0)
call_1927 = relay.TupleGetItem(func_1596_call(), 0)
output = relay.Tuple([call_1921,call_1926,])
output2 = relay.Tuple([call_1922,call_1927,])
func_1935 = relay.Function([], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mutated_mod.get_global_var('func_1935')
call_1936 = func_1935_call()
output = call_1936
func_1937 = relay.Function([], output)
mutated_mod['func_1937'] = func_1937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_2020 = relay.TupleGetItem(func_961_call(), 0)
call_2021 = relay.TupleGetItem(func_962_call(), 0)
func_1203_call = mod.get_global_var('func_1203')
func_1206_call = mutated_mod.get_global_var('func_1206')
const_2023 = relay.const([[5.611080,-9.942003,0.293143,-1.444386,-9.079689,6.116856,1.653632,8.832159,9.256436,-9.505515,6.390128,-5.674416,0.692114,-2.083016,3.538756,9.374314,-4.088510,-2.926824,-8.725841,-4.042507,6.829055,-3.853604,-6.134278,-8.160374,-7.074117,-0.637791,-3.868585,-7.483657,-1.048518,3.042471,-0.316923,-7.187347,-7.061074,1.559696,-7.793774,-3.607864,1.705602,-1.092971,-5.596132,2.921029,9.412608,1.205713,-8.467065,-1.502596,-4.805142,7.568650,-9.735491,0.798035,-6.442448,-5.547275],[-6.832393,2.087290,2.264200,-7.944157,-6.661661,3.511783,9.264458,5.962813,-8.106336,-0.528966,8.539044,1.967092,8.095158,-1.581683,7.626569,-7.098816,0.352316,3.119599,-8.678885,3.521251,8.141595,-6.111079,7.033025,7.611976,2.250582,-2.739156,1.288687,3.352433,-7.931150,-2.436897,-0.335997,3.115895,-2.241093,-0.755299,-7.990833,9.090247,-0.392873,-0.695965,1.856128,6.270439,9.304972,6.643935,-1.553183,-9.244188,7.690447,-6.795688,5.744054,5.902256,3.131239,-6.140604],[4.811713,8.867758,-8.896321,4.090663,0.836421,-5.821067,-3.291541,1.515112,-6.227551,4.721107,4.321595,8.097298,-6.259848,-9.241355,4.933049,8.896821,9.787735,-0.559195,3.739217,1.269714,5.833948,9.583281,-8.582716,-9.606697,-6.116981,-2.395701,4.479759,8.669589,-1.981354,1.289133,-6.756648,9.742200,-9.922729,7.582368,2.799501,-5.721111,4.681392,7.795325,4.379538,-2.053211,4.790201,6.607283,1.603641,-6.163478,-6.633890,1.807499,4.887389,-7.601978,-6.471981,5.407214],[7.164336,-7.716141,8.698422,-3.798527,4.702809,2.972263,3.882727,-4.260414,5.278270,-6.531792,-4.215983,-5.392892,-7.460960,5.685346,1.432919,1.185921,5.563152,7.014812,4.687997,7.128560,-4.186087,6.414880,3.105826,-8.601854,9.337359,-3.313607,-6.915182,6.489949,-0.768674,-0.473817,1.806363,-7.589704,3.952273,1.241317,9.285831,-1.961792,9.235032,8.910590,6.344233,2.693353,-5.223085,-1.726162,2.139772,-6.678577,9.921998,6.489784,-3.559980,6.950794,6.739841,-4.122470],[3.793867,-6.937657,-8.468465,5.411631,-9.274191,-4.650497,-9.959925,9.011406,-8.125178,2.685255,-2.885418,-9.984059,-6.298051,9.309639,3.496174,-4.085835,-2.731290,0.237737,-3.983067,-1.677808,-0.373841,-7.824480,8.506612,-6.990479,5.434815,0.637957,-0.856905,-2.578671,9.868815,-5.520940,2.404582,3.256782,1.646766,-1.954295,6.689235,-6.009276,-0.771373,7.043602,7.163212,9.746818,0.126064,-0.606783,5.890022,0.651896,-2.423315,7.279413,-7.923482,8.612812,2.526358,-7.664346],[-1.350899,-8.666642,0.497175,7.209182,1.420427,2.199184,5.869055,-6.430234,-3.846649,-8.053058,4.243659,-4.140238,-6.124362,-3.320446,5.545281,8.508599,2.032483,-4.972842,3.694905,5.590258,6.747334,2.718267,7.848052,2.788675,7.761295,-4.126654,5.362449,0.772149,3.868369,1.113336,-7.805908,-6.044649,5.316603,-3.187815,-1.328276,5.583773,-0.798542,5.957944,5.775672,1.524613,-3.970271,4.215207,-0.108616,3.877860,-9.464748,-4.459644,0.156277,3.844943,-1.714494,6.940496],[6.765292,-4.919156,-7.261786,1.838044,-5.694567,-5.410998,8.989195,-4.329738,-3.081278,9.181034,-9.045200,2.586240,-9.216582,-1.552905,-4.578703,-8.732019,4.592679,6.114266,-0.456736,8.848725,0.964773,9.721861,1.115482,-6.416075,0.847450,4.271272,-4.561480,-9.718860,1.330835,7.636532,-2.836750,4.438150,-1.236465,6.138074,-1.504488,3.135154,0.767644,-5.165414,-5.226148,-1.978872,-8.192447,9.228525,4.348874,4.116590,2.522863,-1.960501,-9.484549,3.522783,6.526980,7.208068],[7.820838,4.449515,5.840800,7.044388,1.704579,-5.953174,2.242608,-4.691098,3.747324,4.603751,-9.497415,-7.039651,-3.849964,5.982433,8.930830,5.467395,2.619231,7.994149,-4.272802,-7.563692,-5.676304,1.450015,-0.926129,-2.198403,2.168694,-2.407333,-4.622031,3.443862,-8.055684,-8.368894,8.683632,-8.664938,-7.418025,-9.514740,4.488192,-0.174783,7.791992,2.678641,3.617229,1.527255,-9.364394,-8.660557,-1.958908,8.277272,-5.530459,-9.392507,7.649827,-6.152888,-9.991042,-1.135041],[0.620593,-5.450408,-3.451665,1.771000,1.679302,-7.877589,-5.555498,-4.763119,-2.228597,-1.058357,2.858093,3.544602,8.625634,9.290130,-6.601977,3.750651,-7.546513,-1.959808,-9.498378,6.733658,-9.428893,9.547986,-3.727616,1.976230,4.922740,-8.856103,9.818646,6.230440,6.783860,-2.152656,-7.441806,-2.803265,9.697709,0.860858,-5.563254,-6.701599,-6.685215,1.860708,3.160217,-7.068544,-1.977229,-1.290862,-4.435123,7.291984,-3.355006,2.224998,1.226336,0.664149,-0.583443,-8.177213],[9.760863,7.529898,-8.357676,3.632752,8.036390,-3.314777,-1.008723,9.311889,-5.749219,-7.899601,3.885880,3.861862,5.077713,0.729942,6.021190,-2.546967,-5.479897,9.301398,5.407470,6.113801,-5.105628,-5.724714,-2.346109,2.151349,-6.207540,3.956307,1.197842,1.108296,2.805386,-6.913472,-2.109475,-7.126235,-9.698741,-4.740758,-6.431343,-1.041898,9.156162,6.647394,8.177778,2.677092,-6.530228,8.887692,2.554927,7.857396,1.617391,-2.699143,-5.118535,1.952788,-7.299569,-0.434719],[3.416405,0.202202,-5.024099,-1.355555,3.326999,5.189887,-5.326065,2.256508,6.345067,-5.195867,-5.716209,5.876129,2.727283,7.653635,-8.915081,-9.632509,-7.495395,-2.723259,-5.482869,-9.809723,-1.063503,-4.747971,-8.004481,5.496694,-4.146212,9.677701,-3.596877,5.767018,5.706547,9.204824,9.954969,9.717666,0.740421,-3.084919,-6.970010,8.294241,-7.070972,3.578804,0.658583,0.419291,-9.579218,-1.643661,2.338717,7.395516,-1.038552,-1.857806,-6.615675,0.245405,0.111246,-5.999223],[4.527252,9.457605,1.483224,-2.901366,3.172284,-3.453561,-0.318334,-2.010079,-0.487188,-5.808956,-6.851435,-0.747547,-0.598716,-3.424729,3.614133,5.766947,-7.590148,1.254680,8.530691,-0.515274,8.928784,6.326363,0.225420,2.367997,5.221569,-0.066626,-9.486025,-7.907023,-3.054092,-1.376416,2.438569,-5.480460,-4.407974,8.029122,-5.867337,-9.141315,-8.633860,9.635956,6.673551,-2.401930,2.254985,-7.953337,6.193566,-3.152191,8.180293,-6.340484,3.245272,-9.181888,-5.477488,8.309464]], dtype = "float32")#candidate|2023|(12, 50)|const|float32
call_2022 = relay.TupleGetItem(func_1203_call(relay.reshape(const_2023.astype('float32'), [600,])), 3)
call_2024 = relay.TupleGetItem(func_1206_call(relay.reshape(const_2023.astype('float32'), [600,])), 3)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_2029 = func_1011_call()
call_2030 = func_1011_call()
output = relay.Tuple([call_2020,call_2022,const_2023,call_2029,])
output2 = relay.Tuple([call_2021,call_2024,const_2023,call_2030,])
func_2031 = relay.Function([], output)
mod['func_2031'] = func_2031
mod = relay.transform.InferType()(mod)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2032 = func_2031_call()
output = call_2032
func_2033 = relay.Function([], output)
mutated_mod['func_2033'] = func_2033
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2086 = relay.const([[[5,3,1,-4,-4,-9],[-7,10,3,-7,-1,7],[-7,2,5,10,-3,6],[2,-9,6,-5,-8,-2],[10,8,-8,-9,-1,-1],[-8,-6,3,7,3,-10],[-5,-5,1,3,-5,-1],[8,-9,2,5,2,10],[-7,-9,-6,-1,-5,5],[-4,-5,1,-3,7,-10],[-2,10,-10,9,9,8],[-6,-8,7,-7,4,-9]],[[2,-6,4,10,2,-1],[-10,10,8,-9,-8,7],[2,4,8,3,-7,-10],[4,10,2,8,4,3],[7,8,1,-9,-9,-1],[10,8,-10,10,-10,1],[4,6,-9,-9,3,10],[-3,8,-5,3,-10,3],[-1,7,-3,-5,-8,-6],[10,-1,-3,6,1,-9],[1,-2,-5,5,7,-7],[-8,9,3,-3,1,5]],[[-9,3,5,8,6,-10],[-4,4,5,-4,-8,-1],[8,-6,-9,4,-4,-10],[9,-8,8,3,-1,5],[-10,10,-2,9,-2,9],[-7,-1,-10,-1,-9,-3],[5,10,2,-3,-4,2],[-2,6,-5,-7,-7,-3],[-1,5,3,6,-3,5],[2,10,1,-2,1,8],[4,-8,8,-8,-6,-7],[-1,7,9,-9,-2,-7]],[[-9,7,-6,7,2,10],[9,-7,3,5,6,9],[-6,6,-9,10,-1,-9],[-1,6,-4,-3,6,-9],[3,6,8,5,-6,-1],[-4,-3,7,2,10,1],[-6,-6,-2,3,1,-5],[5,-10,-2,7,1,1],[-2,5,-10,-6,9,-9],[9,8,-1,8,6,-8],[10,-4,-5,-8,-5,9],[-9,2,-8,-1,-2,8]],[[6,1,3,-10,-7,3],[-9,-9,6,-2,4,3],[6,1,-6,3,-3,6],[8,-1,10,4,-7,-6],[2,7,1,-10,-7,6],[7,7,-6,10,-9,-6],[6,-10,5,-9,-3,5],[-8,2,-3,1,8,2],[9,7,-4,6,-4,-5],[2,8,-10,-3,5,6],[-4,7,-2,-7,2,8],[-8,6,-3,-3,-4,-2]]], dtype = "int16")#candidate|2086|(5, 12, 6)|const|int16
const_2087 = relay.const([[[5,7,10,6,-3,10],[-8,-4,1,-3,4,10],[-9,-10,9,4,-9,-7],[-6,8,-3,-1,-9,5],[4,9,-4,-5,5,-4],[9,-8,9,-1,8,4],[-6,-4,2,8,-7,-6],[-4,-4,6,3,5,4],[-7,-7,-4,6,-6,8],[-10,-5,-1,-8,4,6],[-9,5,-10,-6,-6,10],[5,-2,8,10,4,7]],[[-10,4,6,-4,-9,-8],[8,6,8,3,-3,6],[-3,-1,4,6,-10,8],[10,-10,-10,8,2,-3],[-9,6,1,3,-10,3],[-2,-10,9,8,-9,-6],[7,-9,5,9,-8,6],[-7,-5,5,3,-7,8],[8,-5,6,-7,5,-4],[-8,6,10,-7,-3,5],[10,-3,-8,5,1,-6],[1,-2,9,-1,-10,5]],[[1,6,4,-1,-9,1],[9,5,4,-9,-5,3],[6,1,3,6,7,9],[3,-6,-6,10,-1,-5],[8,-1,-4,7,10,-8],[5,8,-3,-5,-9,-9],[-6,-2,5,1,3,8],[-8,-7,-2,-1,8,9],[8,-8,-5,-2,7,5],[1,-7,9,10,-10,-6],[-4,9,8,-3,-4,-1],[-9,9,7,10,-1,10]],[[4,-7,-1,-7,10,6],[6,2,2,10,-8,-1],[-2,-1,-10,4,3,8],[-4,8,1,-2,5,10],[9,3,8,4,-5,-4],[8,-8,-9,4,1,7],[-5,-2,3,2,-1,-3],[8,-10,2,7,2,-10],[2,-2,3,-5,-8,-3],[-9,5,1,-1,-3,2],[-5,-5,6,5,7,-1],[9,-3,2,-10,-10,-3]],[[4,9,-2,-5,2,3],[-3,-6,-8,-5,10,5],[-1,-5,1,1,9,-3],[1,-10,-7,-8,1,-3],[10,7,-5,4,-1,-6],[-6,-8,-4,-7,-10,-7],[2,-7,1,4,-9,1],[-5,-7,-5,-9,-9,5],[-9,-10,1,-5,-5,6],[4,7,-10,7,-5,-4],[-9,-1,-3,6,3,2],[-5,9,-9,8,-4,9]]], dtype = "int16")#candidate|2087|(5, 12, 6)|const|int16
bop_2088 = relay.equal(const_2086.astype('bool'), relay.reshape(const_2087.astype('bool'), relay.shape_of(const_2086))) # shape=(5, 12, 6)
uop_2095 = relay.log10(bop_2088.astype('float32')) # shape=(5, 12, 6)
func_1033_call = mod.get_global_var('func_1033')
func_1035_call = mutated_mod.get_global_var('func_1035')
var_2107 = relay.var("var_2107", dtype = "uint32", shape = (30,))#candidate|2107|(30,)|var|uint32
call_2106 = relay.TupleGetItem(func_1033_call(relay.reshape(var_2107.astype('uint32'), [30,])), 2)
call_2108 = relay.TupleGetItem(func_1035_call(relay.reshape(var_2107.astype('uint32'), [30,])), 2)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_2118 = relay.TupleGetItem(func_1122_call(), 0)
call_2119 = relay.TupleGetItem(func_1124_call(), 0)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_2124 = relay.TupleGetItem(func_1045_call(), 0)
call_2125 = relay.TupleGetItem(func_1046_call(), 0)
bop_2129 = relay.greater_equal(call_2124.astype('bool'), relay.reshape(call_2118.astype('bool'), relay.shape_of(call_2124))) # shape=(3, 15, 4)
bop_2132 = relay.greater_equal(call_2125.astype('bool'), relay.reshape(call_2119.astype('bool'), relay.shape_of(call_2125))) # shape=(3, 15, 4)
func_1581_call = mod.get_global_var('func_1581')
func_1584_call = mutated_mod.get_global_var('func_1584')
const_2136 = relay.const([[4,7,4,2,9,4,7,-2,-2,4,-2,3,2,-7,-1,4,6,3,5,-3],[-7,-4,9,-9,-4,6,1,-1,3,-1,6,10,-9,1,8,8,5,2,-9,4],[-7,9,-2,-10,10,-7,-9,10,10,1,9,5,-3,-5,1,6,-2,5,7,6],[9,6,2,3,1,-2,-5,-2,8,-3,-1,-9,7,-6,9,2,7,5,7,-3],[-4,-7,-6,1,10,-4,-6,3,-7,6,1,6,-7,9,-1,-2,-9,-5,-10,10],[-2,-3,7,2,3,2,7,3,-6,-9,7,1,-2,3,-7,-4,-7,-7,-10,-10],[8,-10,7,8,6,-2,1,-10,-2,-5,-6,-7,-7,-1,5,2,3,-8,-5,-6],[8,-5,1,-1,8,3,-6,-1,9,10,3,-9,3,-7,-6,1,-2,2,-2,8],[7,-6,-6,-6,6,8,7,6,-5,-10,7,-4,8,2,-8,-9,-6,8,1,4],[1,7,-1,9,7,8,3,-4,-7,2,-9,-10,6,-6,5,4,-3,-3,-5,10],[-2,-7,10,7,-10,-5,-9,-3,-7,2,10,-6,-9,9,1,-6,-10,1,6,1],[6,4,-3,2,7,-1,-2,-2,-8,-4,2,4,-7,-4,-3,-1,-1,8,-2,-3],[6,8,3,-10,-2,-1,-6,-8,10,-6,-9,3,1,-3,2,4,1,8,3,-6],[10,-1,4,9,-3,6,1,-1,3,-7,-1,-4,4,-10,-8,2,-6,8,4,2],[2,9,-1,8,-4,8,-6,8,4,7,-6,4,3,10,9,5,3,-7,-4,-8],[-1,-4,1,-7,9,9,-2,-7,-6,10,-8,7,1,-6,10,-3,-10,-8,-8,8],[-8,3,1,-2,-7,-2,-1,8,6,7,8,7,-5,-1,-9,-10,-7,4,5,6],[-2,8,-1,5,2,3,2,-10,-4,-1,9,9,-6,-5,-1,-6,-1,-8,3,-10],[-5,-5,-1,-5,-3,10,-8,1,2,-9,-8,9,9,4,1,7,4,-5,4,-2],[6,2,-10,2,-8,6,3,-7,-3,6,-4,-1,2,5,-8,4,8,-10,8,10],[-2,-6,-2,-9,4,6,-8,-8,5,-8,-10,-8,10,-9,-1,-8,7,-8,-7,-1],[-4,-2,-6,-7,-2,5,-9,2,-3,2,2,-7,-4,-6,-3,5,-8,4,-7,-6],[-7,-3,-5,8,10,10,-1,-10,3,9,7,-7,-3,8,1,-1,6,-5,-10,9],[-6,-1,5,4,-9,5,-7,10,1,-9,3,-1,5,2,-2,5,-9,4,10,-1],[9,7,-8,7,5,4,-8,-7,-4,6,9,3,-2,1,5,4,-9,1,6,-7],[-3,-8,-7,-2,3,6,-3,-9,5,10,-3,-3,3,-10,-1,-9,1,5,-2,8],[9,9,-4,-9,-10,1,1,-8,10,-5,-8,-7,-4,4,1,3,-7,-2,-5,-1],[9,-10,6,5,7,-8,6,1,-10,-6,-8,-1,-3,7,-5,3,-10,4,-3,3],[1,-3,7,-5,-1,-7,9,-6,-2,-10,-1,1,-8,-7,-6,-10,-4,-3,9,9],[10,8,6,2,5,7,9,-7,-4,9,-7,-6,4,-1,7,2,7,-7,-6,-3],[4,-8,9,-1,10,-3,-1,-7,8,9,-9,5,2,9,2,8,-1,9,2,10],[-10,-8,-4,5,4,-9,4,8,-5,-4,8,-1,10,6,-7,-5,-1,-5,9,-9],[3,-5,2,-3,-10,-2,-10,-7,2,-6,2,-6,-6,10,-3,10,6,1,1,-5],[-10,1,-9,-2,-2,1,-2,8,8,-5,8,-6,-3,6,-2,6,7,4,6,8],[6,3,-6,6,-1,-6,-6,-7,1,4,-4,5,-8,9,7,-1,7,-3,-4,-7],[-9,6,-5,-6,-6,-8,-1,-2,-4,-10,-8,-5,4,6,-6,5,-3,-1,-3,3],[-5,2,5,-2,6,-1,-4,7,-4,-8,-5,-6,-3,7,1,-7,-4,-2,-6,-10],[-8,-5,9,4,7,4,4,-2,-6,-5,10,1,3,-3,-10,1,5,-4,-10,-10],[10,-10,-3,-3,1,5,-10,-5,2,3,-4,9,10,6,4,10,-9,10,3,2],[-1,-5,-3,-5,-2,-6,5,-6,1,-7,-5,8,-7,7,-4,-6,-3,-8,-3,3],[3,10,9,3,7,4,8,5,4,7,-10,-3,-2,-1,-5,-10,6,-8,-7,4],[2,-5,3,6,-1,-5,4,4,-8,4,-1,-4,6,1,-3,-5,-4,5,-2,5],[6,6,8,9,-7,1,-7,5,9,5,1,-8,2,-4,-6,8,9,-3,4,-4],[5,8,-4,-3,9,4,-10,8,-8,4,1,8,-6,8,-3,8,10,7,-1,7],[-10,1,-7,-10,1,-9,-8,2,-9,1,-3,-9,-6,-8,-1,-6,-10,-1,-6,-2],[-6,9,7,7,4,-10,-8,-3,-7,1,8,9,4,4,2,9,6,-2,-1,-1],[-9,-3,9,-1,-7,-6,-8,2,6,4,-4,6,10,5,8,-6,4,-4,-3,9],[5,-4,2,-9,-6,4,5,-1,7,8,-1,-2,4,-8,-9,9,-4,-1,3,-3],[-4,-8,-9,3,5,1,6,1,-9,8,-7,6,-2,-8,-8,1,-9,10,-9,6],[-6,10,-2,3,9,3,-8,7,-9,-4,-7,-10,5,-6,5,-10,9,-5,2,-4],[9,9,8,7,3,4,-6,6,-4,-8,4,-2,-10,4,6,5,5,3,1,1],[-1,4,9,1,-4,-4,8,9,-4,-10,-1,4,-8,-1,8,3,-7,9,6,-9],[2,7,9,8,1,2,10,9,-4,6,-2,-3,5,3,3,-2,-5,-5,-6,-8],[8,8,7,-7,-10,2,4,-9,7,-8,5,-5,10,-7,-2,3,4,-9,1,-1],[-1,-2,-8,3,6,8,-3,4,-5,-10,-5,-9,6,-9,6,-9,4,-3,4,-10],[9,-4,10,-6,8,-4,-8,-1,10,3,-1,-6,-6,9,-7,2,6,-6,3,-5],[-7,3,1,2,-5,9,9,-5,6,-7,-5,-7,-5,1,-7,1,3,-1,-10,-8],[-10,-3,4,-4,-1,3,9,9,7,6,-4,7,-2,4,1,-9,8,-8,9,3],[4,-8,-10,-1,-6,-8,-3,-2,3,-7,5,-3,-7,5,6,9,-8,5,5,4],[10,-6,8,9,1,6,-1,8,2,5,-3,-8,-3,-8,8,2,5,2,-5,5],[-7,1,-9,-8,-4,1,-9,-10,-3,-1,-4,8,2,-3,2,-10,-10,-9,-1,2],[-1,-7,-5,3,7,8,8,1,7,-6,3,-10,-8,-1,-5,6,-9,8,-10,-1],[-6,8,-4,-5,-4,-4,6,9,-2,-3,-5,-4,-10,8,3,8,-8,-3,-5,5],[-9,6,2,7,6,-10,-7,-3,9,8,1,-1,-2,1,-5,9,-5,7,-8,1],[4,-5,8,-1,-9,6,7,-9,4,-8,-4,10,10,7,4,4,-9,-1,8,3],[3,9,9,-10,-6,9,-5,-1,10,5,-8,-2,-1,-6,-6,-6,10,-10,-3,-1],[9,9,3,-9,10,7,-6,-6,3,-5,1,-2,9,4,-4,-1,7,9,1,-4],[-5,-8,-9,9,6,-5,-7,10,10,-10,-8,-9,10,-6,-5,2,1,-10,-4,-4],[-3,7,-7,8,2,-4,-8,7,9,10,6,-6,6,9,5,10,4,9,-8,-9],[-6,3,5,3,5,-10,9,-10,-1,3,-4,-5,-4,-10,-3,3,3,5,-3,-4],[4,-1,-9,6,-2,8,-3,4,9,-10,-4,-4,-6,-7,-7,-9,-6,-2,5,-6],[6,-3,-9,6,3,-2,8,6,-7,3,5,-3,-6,7,-4,8,-9,10,-8,-7],[4,-7,-7,4,-9,8,-3,-6,-7,-10,-6,-10,1,-4,-6,-9,-10,3,-1,-3],[-8,-6,-3,9,5,-10,10,-7,-2,10,-2,10,-7,-1,-2,1,-5,-10,-9,-8],[-2,5,-10,3,-3,-2,3,-9,7,-3,4,10,2,6,10,-8,-4,-4,-7,-8],[1,-7,6,-9,4,3,-7,-7,-10,2,9,-2,-5,9,3,-2,1,-3,5,-9],[5,9,2,2,-1,4,6,-4,2,1,-3,2,-4,1,8,-2,-2,4,7,8],[2,-7,-7,9,6,-5,-7,-5,3,-2,-5,-3,-5,5,-4,-9,4,-5,1,-10],[-6,-6,-3,5,6,-8,-2,-10,-7,1,7,-8,-8,-3,8,5,-8,8,9,-9],[1,-6,8,1,2,-5,-4,9,7,-2,-5,1,-8,-7,2,-2,5,5,-7,-7],[10,7,6,-7,-9,-9,6,10,-9,-10,6,2,-3,3,7,8,-5,-3,-10,5],[9,-6,4,-8,-4,3,-2,1,4,-3,5,10,6,-2,-4,-8,3,-10,1,-1],[6,-4,9,-2,-9,-3,8,-6,-9,-1,-7,7,-4,-8,-7,-7,-3,1,-4,4],[-10,10,4,-10,-4,5,-1,-9,1,7,6,-9,7,-10,5,-6,5,-2,-10,10],[-5,-5,-7,-1,-2,6,-6,-9,-7,4,5,6,6,6,10,1,-3,4,-1,-10],[-7,2,-1,6,2,-1,-2,6,5,-5,10,-4,4,-2,-5,7,7,7,2,8],[-5,-10,6,-6,-6,7,9,-8,9,6,-10,-8,-4,-5,-10,2,-3,-2,-6,9],[-9,9,-8,-1,-5,-1,-1,10,-5,4,1,3,-6,-3,3,-6,10,2,-10,-5],[9,-8,6,-6,6,-8,-7,10,-4,-8,7,-1,7,7,6,2,7,-6,9,-5],[3,1,2,3,-6,-7,5,2,-3,9,10,-7,-3,-3,6,-9,-9,10,4,1],[6,-5,-6,-3,7,-10,-7,-7,9,-5,5,-5,4,10,-1,-6,-7,-8,-7,3],[6,2,-2,4,-6,-8,10,-7,-1,10,8,-8,8,-1,8,-10,9,8,10,3],[-8,7,6,-2,-3,-8,-10,-9,2,-5,3,-7,-7,6,-4,1,1,9,6,-2],[-4,1,7,-2,9,1,3,6,10,7,-10,5,-8,9,-8,4,-3,5,6,-9],[7,1,-10,9,-1,-6,-5,-2,-7,-9,-4,-6,10,7,3,5,7,-9,2,-9],[-6,-4,5,-6,-9,-9,9,-1,9,9,3,-1,9,-9,1,6,10,8,7,10],[-2,10,4,-2,-9,-4,-6,-5,6,6,2,3,-1,1,-9,-6,10,4,-9,-7],[-9,1,8,8,1,-9,7,9,5,8,1,-6,-1,-4,-7,9,6,9,7,5],[-5,-1,8,-10,9,8,-1,-10,-3,3,7,-5,-3,6,4,-7,8,1,9,-1],[-9,-6,-3,3,1,7,-7,3,-7,-9,2,1,-4,-8,-4,-9,7,-5,4,-8],[3,4,-8,-1,6,7,6,10,2,2,6,-1,1,-7,4,-9,-3,-9,8,7],[10,3,-3,5,-2,1,2,-3,8,7,5,10,-7,-8,-1,-2,-10,6,-10,7],[9,2,-2,4,6,3,-5,1,4,-8,4,-7,-7,-8,-3,8,4,5,6,-5],[1,4,-3,-10,4,-3,10,-5,-2,-3,-9,-8,3,-1,1,1,-6,-9,-2,7]], dtype = "int32")#candidate|2136|(104, 20)|const|int32
call_2135 = func_1581_call(relay.reshape(const_2136.astype('int32'), [16, 13, 10]), relay.reshape(const_2136.astype('int32'), [16, 13, 10]), )
call_2137 = func_1581_call(relay.reshape(const_2136.astype('int32'), [16, 13, 10]), relay.reshape(const_2136.astype('int32'), [16, 13, 10]), )
var_2142 = relay.var("var_2142", dtype = "float32", shape = (5, 12, 6))#candidate|2142|(5, 12, 6)|var|float32
bop_2143 = relay.add(uop_2095.astype('uint16'), relay.reshape(var_2142.astype('uint16'), relay.shape_of(uop_2095))) # shape=(5, 12, 6)
output = relay.Tuple([call_2106,var_2107,bop_2129,call_2135,const_2136,bop_2143,])
output2 = relay.Tuple([call_2108,var_2107,bop_2132,call_2137,const_2136,bop_2143,])
func_2155 = relay.Function([var_2107,var_2142,], output)
mod['func_2155'] = func_2155
mod = relay.transform.InferType()(mod)
mutated_mod['func_2155'] = func_2155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2155_call = mutated_mod.get_global_var('func_2155')
var_2157 = relay.var("var_2157", dtype = "uint32", shape = (30,))#candidate|2157|(30,)|var|uint32
var_2158 = relay.var("var_2158", dtype = "float32", shape = (5, 12, 6))#candidate|2158|(5, 12, 6)|var|float32
call_2156 = func_2155_call(var_2157,var_2158,)
output = call_2156
func_2159 = relay.Function([var_2157,var_2158,], output)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2172 = relay.TupleGetItem(func_2031_call(), 3)
call_2173 = relay.TupleGetItem(func_2033_call(), 3)
func_1397_call = mod.get_global_var('func_1397')
func_1399_call = mutated_mod.get_global_var('func_1399')
const_2188 = relay.const([[7,-10,10,3,2,10,-9,-10,8,-10,-10,10,8,-8,-8,-3,10,10,-3,-6,2,-5,-8,4,8,5,-10,7,1,-4,6,7,-3,5,-9,-1,8,2,8,-2,-9,-6,1,1,-1,-4,2,-10,-6,1,8,6,7,-2,7,3,10,-7,7,5,-2,-2,10,-1,10,4,5,2,10,-9,7,-3,3,9,9,-7,-3,-7,-2,-1,-2,10,5,-7,5,3,8,-8,9,3,1,9,9,-9,6,-3,5,4,-7,-6,-9,-6,-7,9,4,-4,-10,-1,10,-9,-3,5,-8,-9,-3,7,6,-10,10,8,3,-8,-6,-3,-2,5,9,-3,-2,-1,-7,-7,-6,7,10,9,-7,8,8,2,-4,-5,-6,1,1,2,-2,3,8,3,5,-1,9,-8,1,-10,6,9,4,-9,-1,6,-10,1,-9,7,-8,-8,10,-7,7,-5,3,-4,-3,3,-4,7,-8,-5,7,-2,-2,4,-8,2,-6,-10,-2,-5,9,-9,9,-8,-8,-3,-5,-10,5,1,-2,-3,-10,7,-9,-9,4,-1,5,9,4,-8,9,8,-1,9,9,-4,-5,3,7,2,9,4,5,-9,5,8,7,-10,-2,-4,3,2,-2,1,8,-3,-7,10,10,10,7,1,-1,-2,10,-6,7,10,-4,1,4,-8,8,-4,-7,6,-10,10,6,6,10,-8,9,-8,-8,-6,10,-5,2,-9,-2,5,-9,-3,6,2,1,-5,-9,5,2,10,-3,-2,-4,6,-3,-8,-5,-1,10,9,5,-2,-8,10,8,2,6,-8,3,8,2,-2,9,-10,-7,2,4,4,3,-10,5]], dtype = "int64")#candidate|2188|(1, 315)|const|int64
call_2187 = relay.TupleGetItem(func_1397_call(relay.reshape(const_2188.astype('int64'), [15, 3, 7])), 3)
call_2189 = relay.TupleGetItem(func_1399_call(relay.reshape(const_2188.astype('int64'), [15, 3, 7])), 3)
output = relay.Tuple([call_2172,call_2187,const_2188,])
output2 = relay.Tuple([call_2173,call_2189,const_2188,])
func_2194 = relay.Function([], output)
mod['func_2194'] = func_2194
mod = relay.transform.InferType()(mod)
mutated_mod['func_2194'] = func_2194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2194_call = mutated_mod.get_global_var('func_2194')
call_2195 = func_2194_call()
output = call_2195
func_2196 = relay.Function([], output)
mutated_mod['func_2196'] = func_2196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_2244 = func_1011_call()
call_2245 = func_1011_call()
output = call_2244
output2 = call_2245
func_2250 = relay.Function([], output)
mod['func_2250'] = func_2250
mod = relay.transform.InferType()(mod)
output = func_2250()
func_2251 = relay.Function([], output)
mutated_mod['func_2251'] = func_2251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2260 = relay.var("var_2260", dtype = "int16", shape = ())#candidate|2260|()|var|int16
var_2261 = relay.var("var_2261", dtype = "int16", shape = (5, 9, 1))#candidate|2261|(5, 9, 1)|var|int16
bop_2262 = relay.greater(var_2260.astype('bool'), var_2261.astype('bool')) # shape=(5, 9, 1)
uop_2268 = relay.cosh(var_2261.astype('float64')) # shape=(5, 9, 1)
uop_2271 = relay.exp(uop_2268.astype('float64')) # shape=(5, 9, 1)
output = relay.Tuple([bop_2262,uop_2271,])
output2 = relay.Tuple([bop_2262,uop_2271,])
func_2274 = relay.Function([var_2260,var_2261,], output)
mod['func_2274'] = func_2274
mod = relay.transform.InferType()(mod)
mutated_mod['func_2274'] = func_2274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2274_call = mutated_mod.get_global_var('func_2274')
var_2276 = relay.var("var_2276", dtype = "int16", shape = ())#candidate|2276|()|var|int16
var_2277 = relay.var("var_2277", dtype = "int16", shape = (5, 9, 1))#candidate|2277|(5, 9, 1)|var|int16
call_2275 = func_2274_call(var_2276,var_2277,)
output = call_2275
func_2278 = relay.Function([var_2276,var_2277,], output)
mutated_mod['func_2278'] = func_2278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2285 = relay.TupleGetItem(func_2031_call(), 0)
call_2286 = relay.TupleGetItem(func_2033_call(), 0)
var_2290 = relay.var("var_2290", dtype = "bool", shape = (3, 15, 4))#candidate|2290|(3, 15, 4)|var|bool
bop_2291 = relay.less(call_2285.astype('bool'), relay.reshape(var_2290.astype('bool'), relay.shape_of(call_2285))) # shape=(3, 15, 4)
bop_2294 = relay.less(call_2286.astype('bool'), relay.reshape(var_2290.astype('bool'), relay.shape_of(call_2286))) # shape=(3, 15, 4)
output = relay.Tuple([bop_2291,])
output2 = relay.Tuple([bop_2294,])
func_2319 = relay.Function([var_2290,], output)
mod['func_2319'] = func_2319
mod = relay.transform.InferType()(mod)
var_2320 = relay.var("var_2320", dtype = "bool", shape = (3, 15, 4))#candidate|2320|(3, 15, 4)|var|bool
output = func_2319(var_2320)
func_2321 = relay.Function([var_2320], output)
mutated_mod['func_2321'] = func_2321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_2330 = relay.TupleGetItem(func_1045_call(), 0)
call_2331 = relay.TupleGetItem(func_1046_call(), 0)
output = call_2330
output2 = call_2331
func_2339 = relay.Function([], output)
mod['func_2339'] = func_2339
mod = relay.transform.InferType()(mod)
output = func_2339()
func_2340 = relay.Function([], output)
mutated_mod['func_2340'] = func_2340
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2354 = relay.const([[[-2,10,5,-1,-9,-3,-3,-10,-7,-4,-2,-5,2,3],[-3,-8,3,2,-5,8,9,1,-4,-2,-4,9,7,-6],[9,2,10,8,1,1,6,-10,-3,-9,-1,-5,9,3],[-7,4,-8,-2,8,2,-4,3,-2,-5,5,-9,4,3],[7,9,5,-2,10,1,-3,-7,-6,7,5,-1,7,-9],[4,-6,8,-7,-9,-5,-2,-8,1,-4,-6,-7,6,-3],[9,-5,4,6,-7,6,-3,-6,9,-3,-9,-1,9,-8],[-5,-7,-7,-7,-4,-4,7,8,10,6,9,-4,-6,5]],[[-1,10,8,-10,10,5,-10,6,8,7,1,9,-3,-10],[8,-4,-8,6,-2,10,-4,7,-3,-3,-10,-1,4,-10],[-5,-5,6,5,-2,2,7,-7,9,7,8,5,10,8],[5,8,8,4,-3,-10,8,-10,-7,10,-2,8,-4,-5],[-8,-8,-2,-3,-2,-6,4,1,-9,-10,9,-2,6,-8],[-4,7,-7,-5,1,-9,4,9,3,-3,2,-9,-3,1],[-3,-2,-5,9,1,-3,1,-9,-7,-7,8,-5,3,-9],[-6,-8,1,-6,-6,-8,-8,-1,-3,5,9,-2,-10,-5]],[[-10,-1,-7,5,-8,4,-5,-3,5,3,-6,-8,10,2],[-7,-5,3,5,-7,-10,1,-1,8,1,-9,1,-1,-10],[1,1,9,8,3,4,4,-9,1,1,-3,5,5,5],[5,8,-7,7,-6,10,8,3,9,7,9,9,10,-4],[-10,-2,-6,4,-1,1,-5,9,4,-5,4,-3,10,7],[-6,5,-3,2,1,-5,6,-10,-7,-6,2,4,-3,-1],[10,1,8,-3,-6,10,-2,10,3,1,-10,10,8,8],[-2,-2,-4,10,2,-4,-8,-6,1,8,-3,-3,6,4]],[[9,3,10,4,10,-7,7,1,-10,-6,10,-5,3,-7],[-3,-2,5,-4,3,-9,1,-7,9,-4,4,10,-5,10],[-4,6,-10,-10,6,-9,3,3,-6,-2,8,-4,5,-8],[-2,8,-7,-5,-5,-3,-10,-9,2,5,-2,-5,-3,3],[-4,10,-9,-3,-7,5,-3,4,-3,-4,-4,-5,8,-7],[8,2,-10,7,3,8,-8,3,-3,5,-9,-5,2,9],[9,-4,5,8,-8,-7,-6,-2,-1,-8,-9,4,-3,-3],[8,-6,8,-3,-6,10,-9,7,-5,-2,4,-3,-2,-3]],[[4,2,5,-9,10,10,3,9,1,7,-7,-2,-8,3],[2,9,-9,-9,10,1,-10,-7,-1,6,4,-7,2,-1],[-6,2,-10,5,-1,6,-2,3,-10,-6,-7,-4,-6,2],[-2,-10,-7,6,3,-9,-6,8,-3,-2,1,3,-10,1],[-8,4,5,-8,-6,2,-8,6,5,3,-6,1,5,-9],[3,-1,-2,10,-8,-4,3,-6,6,-4,-7,-10,-4,-2],[9,1,1,2,6,-5,-8,-9,-4,9,-6,-10,10,5],[5,2,-1,3,-7,-7,4,-7,10,3,-10,3,-7,-8]],[[5,2,3,1,9,7,-8,8,6,-6,1,10,4,-9],[8,-10,5,2,-8,-1,8,10,2,-10,3,-7,-5,-10],[-2,-4,8,-3,7,-10,-8,-1,-9,-2,1,9,8,-8],[5,-6,7,-5,-3,10,4,7,3,8,-9,2,2,3],[1,5,-1,3,10,-5,-8,2,-6,-4,7,2,-4,-5],[8,-8,-1,-5,5,-10,-5,5,3,5,-6,-8,-5,-8],[-7,-7,1,5,2,4,-7,-2,1,-8,-7,-4,6,-8],[4,-9,-1,5,-4,5,10,3,4,-2,3,9,-4,4]],[[5,-10,10,-8,-8,4,-1,9,-8,9,-8,-9,10,10],[9,6,8,2,9,-10,5,10,10,-7,2,2,-8,10],[7,4,5,-1,-7,-2,5,5,3,5,-5,-4,10,-6],[5,6,5,9,9,-5,-4,-5,9,8,3,7,-6,6],[7,6,-5,7,2,10,-5,-10,-1,8,4,2,-7,-7],[2,-3,-3,-4,-9,10,4,-5,-4,7,-1,-5,-9,2],[8,3,3,10,2,6,-2,5,6,-6,-8,-8,-8,-3],[10,6,-5,7,-2,-1,8,8,-4,9,-6,2,9,-2]],[[-3,-5,8,-8,-8,-10,1,-7,-1,-10,-1,-6,-3,2],[10,-7,8,-3,-3,1,7,4,-3,6,9,8,2,-8],[4,-7,3,-7,-7,-9,-5,-2,2,-10,-8,-8,10,-8],[1,9,5,2,-1,-10,1,-7,-10,9,-8,8,3,4],[3,10,-7,1,-7,1,-4,-4,-10,1,3,-3,-9,6],[6,-7,-9,3,8,-7,7,-2,-9,-5,-1,-3,6,-3],[7,-7,9,-2,-3,-4,8,-5,-1,5,-5,-1,7,-1],[9,8,-5,-9,-8,-3,-7,-1,10,2,-3,1,7,4]],[[-5,-7,-9,8,-9,-8,-1,8,-10,5,-5,1,-5,-7],[6,8,-8,-4,1,3,-1,7,-4,2,-1,3,-5,3],[-1,-4,-4,6,7,-9,4,-8,-2,8,9,-7,-10,-6],[9,5,-2,4,-1,-5,2,7,-5,2,-2,-3,-4,-1],[5,9,7,-1,-3,4,-9,2,-5,9,6,9,-6,6],[7,4,5,3,7,2,2,4,6,-5,5,-5,7,-6],[8,-5,-1,6,-4,9,-6,-3,-8,-2,-1,9,10,6],[8,2,-5,-3,-10,2,10,7,-2,-4,5,7,2,-3]],[[-8,2,10,3,3,-2,7,-6,5,2,-2,-8,-2,-5],[8,7,-5,-3,-2,-2,4,-7,8,-7,5,-2,6,5],[4,-2,-8,-2,9,9,4,6,5,-9,9,8,5,-2],[-10,9,-9,-8,-4,-3,8,4,-3,-9,6,-3,-6,-8],[9,-2,-8,-2,-3,-5,5,-10,10,-4,-6,5,-1,-8],[7,7,-7,6,-9,-4,1,1,-9,-8,7,-4,-4,-7],[-7,-3,-1,2,-7,-7,7,1,3,5,-5,3,-6,4],[-5,-5,6,-7,-8,6,7,4,-7,3,8,-3,2,4]],[[-4,8,-1,-2,-2,-3,7,-6,5,10,6,5,5,7],[-6,5,-3,-9,-9,9,-9,-2,6,-3,-7,-4,-10,6],[-8,3,8,-4,-3,5,-2,-3,-9,-9,2,-5,-9,-3],[9,-4,-4,3,-5,5,7,-1,-4,-2,-9,9,7,2],[6,-4,-5,-4,-5,3,1,9,-7,9,-5,8,5,7],[1,7,3,2,2,-6,-2,-7,8,1,6,-9,-2,-9],[2,9,5,3,-9,-5,1,-8,-2,-4,-10,-8,-6,9],[3,6,-4,-1,3,7,8,-5,-7,10,7,-2,10,3]],[[-6,-7,-10,4,-8,-3,8,-4,-5,-5,-1,4,10,7],[5,-7,4,-7,7,-10,-6,-7,-4,3,10,-4,3,-1],[3,3,7,8,-6,-6,6,-9,9,-9,6,6,9,9],[7,5,7,9,-9,-7,-2,1,1,2,-5,6,-4,1],[2,5,1,1,-7,-4,-7,-5,-6,-5,-6,8,8,7],[6,-5,-8,-10,-10,7,-1,-8,-1,-5,7,5,-9,-7],[9,-10,1,-5,-8,6,-6,-9,-3,5,-10,-3,2,-2],[-5,9,4,2,7,-2,2,6,10,-5,2,9,10,-9]],[[-1,5,-2,3,4,-1,3,-7,-3,3,10,-6,-7,6],[-6,2,-8,7,-1,-5,-4,-7,10,-1,9,-8,-1,-3],[1,10,4,7,10,1,-4,6,3,-4,7,9,7,-5],[2,-1,-7,2,-4,3,-5,-5,3,7,-5,2,-4,8],[-8,4,-10,5,-7,-1,6,-4,10,-9,3,8,5,-9],[-1,-4,9,1,2,-9,10,1,3,8,7,6,-3,7],[6,-9,-3,8,-1,-3,2,4,-3,-10,2,-2,5,-8],[-4,-6,-1,1,-8,-7,-7,-3,-6,5,-4,8,2,5]],[[-1,4,2,-10,-7,-8,-10,-5,7,10,-7,-3,-7,-6],[-4,-6,8,10,2,-2,1,-5,6,9,-7,7,3,4],[-2,1,-3,-8,-7,-10,10,-7,5,1,-1,7,1,-4],[3,-4,-10,8,10,-6,-8,-7,2,9,-7,1,3,7],[-9,8,-1,-6,7,-6,-1,5,3,-8,-7,4,-7,1],[-10,-4,9,10,4,3,-1,-8,3,2,7,-1,-4,8],[8,1,-10,-7,-7,-1,5,10,-2,6,2,-1,9,3],[7,-7,3,-2,-5,5,8,-2,-1,8,-1,-1,4,1]],[[-4,-7,8,-5,-1,5,10,7,10,-10,10,-6,-2,-5],[7,-10,-10,1,8,-10,-6,7,7,-1,-1,-9,1,-3],[10,-9,-6,9,5,-6,7,4,-1,7,-4,6,-3,8],[8,-5,1,-5,-5,3,-4,3,-2,-5,9,-2,2,8],[-1,-9,8,-7,-10,-4,-9,-4,-5,-6,-7,10,7,-9],[-10,-6,5,-1,-9,-2,3,5,4,-8,-10,7,-7,3],[9,-5,-9,9,4,7,-10,-6,8,6,-3,-2,-1,8],[6,-4,-3,5,7,8,-5,9,-5,-8,-4,-6,9,10]],[[6,9,-1,-8,-1,-8,6,2,-10,-7,-3,9,-9,6],[2,-9,-8,-10,-1,-7,1,1,-3,9,3,10,10,5],[2,-9,-1,-3,-7,10,-1,-10,-4,10,-3,1,-6,4],[-10,-7,-10,7,7,10,2,3,9,-6,6,8,-4,7],[-10,7,-8,4,-1,1,2,-5,3,10,3,3,-3,-1],[10,6,-7,-1,7,6,8,-7,1,7,-2,-6,-4,-4],[-1,-3,-1,4,3,-4,3,-10,9,1,1,-4,8,6],[2,-8,-5,6,1,-7,-5,5,-2,9,2,9,-10,6]]], dtype = "int64")#candidate|2354|(16, 8, 14)|const|int64
var_2355 = relay.var("var_2355", dtype = "int64", shape = (16, 8, 14))#candidate|2355|(16, 8, 14)|var|int64
bop_2356 = relay.minimum(const_2354.astype('int64'), relay.reshape(var_2355.astype('int64'), relay.shape_of(const_2354))) # shape=(16, 8, 14)
var_2359 = relay.var("var_2359", dtype = "int64", shape = (16, 8, 14))#candidate|2359|(16, 8, 14)|var|int64
bop_2360 = relay.maximum(const_2354.astype('uint32'), relay.reshape(var_2359.astype('uint32'), relay.shape_of(const_2354))) # shape=(16, 8, 14)
bop_2370 = relay.equal(var_2355.astype('bool'), relay.reshape(bop_2356.astype('bool'), relay.shape_of(var_2355))) # shape=(16, 8, 14)
output = relay.Tuple([bop_2360,bop_2370,])
output2 = relay.Tuple([bop_2360,bop_2370,])
func_2373 = relay.Function([var_2355,var_2359,], output)
mod['func_2373'] = func_2373
mod = relay.transform.InferType()(mod)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mutated_mod.get_global_var('func_2373')
var_2375 = relay.var("var_2375", dtype = "int64", shape = (16, 8, 14))#candidate|2375|(16, 8, 14)|var|int64
var_2376 = relay.var("var_2376", dtype = "int64", shape = (16, 8, 14))#candidate|2376|(16, 8, 14)|var|int64
call_2374 = func_2373_call(var_2375,var_2376,)
output = call_2374
func_2377 = relay.Function([var_2375,var_2376,], output)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2400 = relay.var("var_2400", dtype = "float64", shape = (9, 14, 4))#candidate|2400|(9, 14, 4)|var|float64
uop_2401 = relay.cos(var_2400.astype('float64')) # shape=(9, 14, 4)
func_2274_call = mod.get_global_var('func_2274')
func_2278_call = mutated_mod.get_global_var('func_2278')
const_2409 = relay.const(9, dtype = "int16")#candidate|2409|()|const|int16
const_2410 = relay.const([[-4,-6,2,-1,6,1,-6,4,4],[-4,2,-7,5,-2,-7,-9,-9,-9],[9,-4,-9,-2,-5,3,-4,2,-10],[-9,-8,-5,7,-5,9,9,-8,-4],[-7,-2,-5,-2,1,-7,6,7,-10]], dtype = "int16")#candidate|2410|(5, 9)|const|int16
call_2408 = relay.TupleGetItem(func_2274_call(relay.reshape(const_2409.astype('int16'), []), relay.reshape(const_2410.astype('int16'), [5, 9, 1]), ), 0)
call_2411 = relay.TupleGetItem(func_2278_call(relay.reshape(const_2409.astype('int16'), []), relay.reshape(const_2410.astype('int16'), [5, 9, 1]), ), 0)
func_523_call = mod.get_global_var('func_523')
func_526_call = mutated_mod.get_global_var('func_526')
const_2415 = relay.const([-1,1,-1,6,-8,4,-10,-9,-3,8,3,8,-10,3,7,7,4,-3,-1,-8,4,7,3,6,5,7,9,3,-2,-9,6,-8,-4,-5,3,-7,5,3,-10,-6,-3,2,8,1,-4,2,8,10,2,8,1,2,-9,-6,4,-3,2,-8,3,-4,-10,6,-6,-10,2,-4,5,-8,3,-5,-3,5,-6,-10,2,5,-8,-2,5,-3,-3,-9,4,-5,9,-5,10,10,3,-4,-3,1,-8,-8,-6,-2,-1,-9,8,4,-4,2,1,10,3,8,-1,-9,-1,-5,-1,8,-8,7,-9,-3,-1,8,8,-5,2,-9,4,5,9,2,7,-2,-7,10,1,10,10,-6,-8,9,6,-4,-8,-6,6,-6,10,-9,6,-2,5,-1,-1,-3,-7,8,2,4], dtype = "int8")#candidate|2415|(154,)|const|int8
call_2414 = relay.TupleGetItem(func_523_call(relay.reshape(const_2415.astype('int8'), [11, 1, 14])), 0)
call_2416 = relay.TupleGetItem(func_526_call(relay.reshape(const_2415.astype('int8'), [11, 1, 14])), 0)
func_2194_call = mod.get_global_var('func_2194')
func_2196_call = mutated_mod.get_global_var('func_2196')
call_2417 = relay.TupleGetItem(func_2194_call(), 2)
call_2418 = relay.TupleGetItem(func_2196_call(), 2)
func_741_call = mod.get_global_var('func_741')
func_744_call = mutated_mod.get_global_var('func_744')
const_2438 = relay.const([[2.728804,-1.692288,-3.537317,6.342423,-3.343528],[-5.863315,7.475221,4.511260,-1.878799,-9.228493],[-3.587476,6.560117,-5.872121,-1.413341,-5.114995],[8.199798,-3.333885,4.706100,-8.047193,-4.738615],[6.643375,4.956428,-5.995617,-1.904720,3.153145],[4.627377,-7.746582,5.359675,-9.460839,3.380616],[7.090850,-9.380490,1.490557,9.321926,-7.007968],[-7.667609,-0.948742,3.526868,-4.559615,4.485551],[-4.071297,9.618012,-7.824331,4.843506,-5.546412],[6.317095,-5.234735,-1.240035,7.107942,9.016979],[2.909074,-0.895526,2.122976,-3.058183,5.683060],[0.993692,-4.719099,-8.160208,-3.611225,7.573402],[7.162814,-2.656961,1.272352,5.473808,-6.380676],[-7.607689,-4.165547,-9.208837,-8.630467,3.738072],[-2.531314,-5.783513,2.355684,6.740699,-4.075154],[-0.852291,3.988358,8.575800,5.208792,-0.146501],[6.280998,4.562897,0.194663,8.949946,-6.268388],[5.119210,-4.384409,-3.228207,-5.955191,0.632008],[-5.744500,-5.922436,-7.282937,-3.749816,-3.569878],[-3.976394,-1.212292,5.493280,4.143329,8.474457],[0.014306,-0.737707,-6.090183,4.058540,2.041205],[-8.293968,4.642738,4.516671,-1.395185,1.006720],[-0.467282,5.733659,-7.421727,-2.677067,9.721915],[5.942975,-4.214702,-0.684148,-4.056707,-6.874467],[-1.117755,-1.290894,3.845945,-6.439074,5.412610],[8.967404,8.442737,-8.458771,5.260478,4.528696]], dtype = "float32")#candidate|2438|(26, 5)|const|float32
call_2437 = relay.TupleGetItem(func_741_call(relay.reshape(const_2438.astype('float32'), [1, 10, 13])), 0)
call_2439 = relay.TupleGetItem(func_744_call(relay.reshape(const_2438.astype('float32'), [1, 10, 13])), 0)
func_1203_call = mod.get_global_var('func_1203')
func_1206_call = mutated_mod.get_global_var('func_1206')
const_2445 = relay.const([1.165805,1.744233,0.042979,-0.653890,2.696577,-3.772361,-8.872161,-4.749094,6.128478,0.868771,-9.010774,3.951630,3.033183,-6.783589,6.954669,-4.809839,5.470865,9.856017,-6.596302,0.187414,9.835867,6.269475,2.428354,0.779086,7.860971,9.308684,3.999646,7.038748,5.500905,-2.897746,6.469945,3.934926,-4.007782,0.626811,4.102315,-5.758092,3.828914,-9.640941,-2.830242,8.493829,-1.744071,9.219413,0.021435,7.217599,-3.369941,1.411442,-9.341298,-7.739599,6.160721,5.703152,1.997273,-0.896974,4.273925,5.874341,-4.371966,3.286262,2.607163,-3.935604,-2.797160,0.862639,5.489822,-3.215556,8.506524,0.263267,4.351581,4.039758,-3.587945,2.863821,-6.875740,9.032578,7.235267,-6.961025,-2.405859,6.350964,-1.103152,4.060139,8.953548,3.120504,7.173926,5.716393,-2.760113,2.120590,-4.634763,-8.320105,8.432633,9.797682,1.999153,7.492265,7.043288,-6.502868,8.321425,5.574360,0.525585,4.685923,9.282614,0.555024,-7.751371,0.736334,1.877035,6.629536,4.580411,4.387058,-6.416281,-3.018834,8.903975,5.761367,5.759685,5.799163,-8.571642,8.683676,-1.985576,0.102727,9.662283,2.576990,-0.370810,2.645382,-0.892028,-9.663935,9.994680,-1.159083,3.002680,6.403099,-6.133396,-1.931568,4.108024,6.293970,-6.963741,-6.543883,1.881650,1.171566,7.921351,3.180262,6.550357,-5.478334,8.888942,-5.041500,1.524593,4.109698,-9.212875,-1.518695,7.810546,7.444364,-6.050682,6.681154,-8.307696,1.970214,1.574668,5.767918,2.805355,6.495250,-7.920957,4.754043,9.570726,4.673512,-0.864054,0.149643,5.035708,-2.781821,5.566409,2.574444,-6.702245,1.714102,-5.892803,-6.089100,-0.728242,-2.817071,0.392525,-3.710723,-6.232064,6.459263,7.335071,-6.587585,5.620606,-1.128780,-2.624687,-2.660612,0.177822,-0.727478,-3.831520,7.184057,-8.725772,9.155354,4.368447,-0.456331,-6.816648,4.698879,-4.809954,-1.879467,-4.190700,-9.742275,7.314016,4.008046,-4.937957,-3.899906,-2.969696,-6.810194,6.961156,3.725964,5.983333,-9.324410,2.783574,-8.593767,6.737202,9.429117,6.087397,-9.063912,8.011859,7.537255,9.336391,-2.146891,1.990799,-6.303696,7.602443,-7.686093,5.984781,-5.461465,-5.920025,-8.032482,5.123618,8.478242,-1.042485,6.516515,2.171501,4.774789,-3.594560,-0.863707,-9.889909,-8.894468,-2.296369,9.978683,7.056893,-1.419436,-4.577657,0.822083,4.868669,-9.572673,-3.842788,8.695292,8.185570,-3.892879,-8.903748,5.330501,2.863191,-9.064673,-0.568407,8.207833,5.446141,5.426126,7.626569,-1.507325,5.164577,-5.245289,-9.516927,7.086420,-0.917156,-0.256504,1.564517,-0.747350,6.655556,-2.654545,-3.950145,-2.879973,-6.332923,3.836017,-1.738669,-3.506088,-4.081292,-0.565919,-4.922494,-3.118892,8.389701,0.406529,3.555062,-5.875641,3.057431,-2.382330,-7.097053,2.704962,8.994865,-8.566500,-3.241211,6.532479,6.548062,-6.572732,-6.482532,4.100397,5.786472,-5.138285,-8.272160,3.727831,8.428618,3.285463,-3.862666,-3.795792,3.871996,-6.680789,8.702761,-8.649795,3.964340,-9.234766,-7.877737,3.078430,1.483799,-0.203496,-1.570119,3.244129,0.008416,-6.586984,2.009329,7.294038,7.814020,8.544657,-2.805387,-1.582587,-0.322990,8.737336,-2.466000,-0.968622,-0.456364,9.155128,-2.013790,-7.060192,7.904180,-4.708317,-0.287004,7.627611,8.298296,-2.152844,-9.843933,4.718251,-9.263153,8.843002,6.548580,-6.328158,-9.697270,5.915611,-7.525562,2.203943,-9.440736,-1.430838,4.722434,-1.919991,-8.865010,-7.894285,9.214373,0.808602,-9.388705,-3.748888,-1.619962,2.872861,-4.771051,-4.888111,7.309999,-0.810476,1.442198,-9.424953,-3.266501,7.913136,4.414360,-9.207361,9.807154,-3.547404,-3.805529,2.260073,3.031535,-5.043443,3.513288,-0.225960,-0.877732,-3.411242,-9.085774,-4.613924,-5.821335,4.335517,-4.375441,-0.518834,-1.686508,7.006423,-6.147780,7.230115,-3.436527,6.762786,-4.220993,-3.680210,4.763671,-5.638638,5.775933,-6.731994,-2.386627,9.029013,9.091526,-2.273585,9.340390,9.340852,5.845347,0.333193,-3.646692,0.024360,7.176401,7.501762,4.018919,-3.688708,-7.475333,-9.676607,-6.899640,9.489101,3.453897,7.058685,-5.335167,-0.983756,-6.545990,8.573787,9.982355,6.019811,-0.829702,3.401545,6.986133,-9.987742,-1.851697,-5.877548,-2.900836,2.643009,-6.178187,-8.178297,9.145923,-4.891343,2.460683,-0.711266,-0.502055,3.954187,-7.632359,-7.207700,-9.447662,5.016758,7.348958,6.754247,-7.585491,-2.692233,-0.748610,8.513720,4.340085,2.608394,4.003122,7.584100,8.280530,-3.686494,5.089154,5.561152,3.396847,7.799795,2.758010,-0.455682,7.317406,-2.360174,-3.964447,6.813451,4.936394,-2.027573,-1.217356,-5.461607,-4.782267,4.175138,-0.947225,6.735855,5.347778,-5.175148,8.475556,-3.581560,1.870527,-3.277418,-8.873186,-1.332703,-9.896213,-8.027482,-7.603605,2.337277,8.637449,3.862982,1.916551,9.028735,2.770490,0.237279,4.661277,9.248446,-5.589346,-4.585322,7.426089,-3.390337,4.928834,-7.839409,-1.044531,-4.218320,-4.289512,2.909680,-4.206251,-9.550075,-3.005993,-1.245065,-4.167684,7.580387,-0.661681,1.902922,-3.777312,4.585228,7.215887,1.369014,7.735862,6.014776,4.181929,-0.576495,-2.850873,5.146006,-8.663125,-1.982667,9.614918,-0.260891,7.864339,6.804693,6.165876,8.035636,-1.432980,-4.659640,-9.297896,6.403019,-8.947671,3.484612,6.179219,-9.844413,-1.006276,-8.249947,-4.983453,5.550682,-1.798545,3.011527,-4.247194,-3.149022,1.465314,-8.348616,9.184388,-8.949086,8.151181,-4.582096,-4.715163,6.944572,9.476137,8.409738,-9.170526,7.384624,0.338776,-4.571821,7.716761,1.438221,-2.892389,-4.012852,0.224146,0.047126,-0.583132,9.304446,-7.582154,7.994211,-6.384740,8.588526,-1.037636,-4.657050,8.677754,6.384034,9.720795,-8.051310,-9.714600,0.419748,9.518460,2.470188,-5.440171,-0.623136,5.162175,-5.546886,-1.253855,-9.797032,-5.585347,0.996418,7.387193,-1.066300,9.462091,-5.916778,4.181067,6.587034,3.132190,-1.700387,-4.898278,-7.040444,3.904825,4.870051,2.392249,-7.495055,-0.967282,8.145656,-8.317657,6.063427,-5.361441,2.893632], dtype = "float32")#candidate|2445|(600,)|const|float32
call_2444 = relay.TupleGetItem(func_1203_call(relay.reshape(const_2445.astype('float32'), [600,])), 0)
call_2446 = relay.TupleGetItem(func_1206_call(relay.reshape(const_2445.astype('float32'), [600,])), 0)
func_1090_call = mod.get_global_var('func_1090')
func_1093_call = mutated_mod.get_global_var('func_1093')
const_2453 = relay.const([7,-10,1,4,6,3,-6,-7,-4,2,7,8,-8,9,8,-9,-5,-5,10,-10,-7,-6,-3,10,1,1,-1,3,-6,7,2,10,4,-8,7,5,-3,6,1,-5,-1,-2,5,-2,-2,8,-7,-3,-6,-7,9,8,2,9,-4,-8,3,7,-7,-3,-2,-3,9,-9,-7,1,-10,-9,5,-6,6,-3,-3,-9,3,-9,10,3,-8,-6,3,-2,-6,-5,-10,-9,-6,5,7,10,-3,7,1,-5,-4,-3,-8,-2], dtype = "uint64")#candidate|2453|(98,)|const|uint64
call_2452 = relay.TupleGetItem(func_1090_call(relay.reshape(const_2453.astype('uint64'), [98,])), 2)
call_2454 = relay.TupleGetItem(func_1093_call(relay.reshape(const_2453.astype('uint64'), [98,])), 2)
func_2274_call = mod.get_global_var('func_2274')
func_2278_call = mutated_mod.get_global_var('func_2278')
call_2457 = relay.TupleGetItem(func_2274_call(relay.reshape(const_2409.astype('int16'), []), relay.reshape(const_2410.astype('int16'), [5, 9, 1]), ), 0)
call_2458 = relay.TupleGetItem(func_2278_call(relay.reshape(const_2409.astype('int16'), []), relay.reshape(const_2410.astype('int16'), [5, 9, 1]), ), 0)
uop_2461 = relay.tan(uop_2401.astype('float32')) # shape=(9, 14, 4)
func_1221_call = mod.get_global_var('func_1221')
func_1222_call = mutated_mod.get_global_var('func_1222')
call_2463 = relay.TupleGetItem(func_1221_call(), 0)
call_2464 = relay.TupleGetItem(func_1222_call(), 0)
const_2468 = relay.const([[[2.507750,-0.891958,6.442174,-2.077696],[3.400437,4.928488,8.197919,-9.363725],[-1.332436,-7.031014,-9.364935,1.728894],[1.577846,-9.934201,7.585771,-7.587514],[-5.077190,0.750720,-6.023637,6.598549],[6.992453,2.468335,6.207797,-9.829313],[1.890052,1.270985,-8.073907,1.357965],[-0.228858,3.783499,0.582887,-1.742247],[-6.483077,3.313456,9.017350,-3.861883],[4.568035,5.902147,3.540568,-6.711033],[-7.211964,5.529441,8.012579,8.060526],[-4.386855,1.596234,-2.460089,7.494907],[-6.710184,1.090695,3.479013,-6.812911],[6.221522,7.939411,4.195238,0.618635]],[[9.997376,-2.284643,7.306252,-5.798029],[-1.548124,2.782990,8.155177,3.451096],[8.143662,5.306790,4.848511,3.372316],[-4.252606,9.360059,-4.429444,9.315881],[1.727106,-0.053287,3.465341,-8.796587],[9.544613,-4.027188,2.396964,-6.660057],[-9.185906,9.342803,8.019856,-2.841980],[-0.173201,7.820774,-0.871221,-9.044784],[-2.389960,-0.688639,-8.496874,-8.042149],[-1.526429,-3.252131,-9.772536,-7.945559],[8.319390,-1.252738,-7.632365,-8.274858],[3.300813,-8.548111,-0.637432,0.176115],[7.347882,5.964788,5.111385,0.847900],[-7.633286,1.438489,-8.701803,-3.473333]],[[6.513049,-7.785528,5.138080,-6.768026],[-9.835252,6.103259,-3.868405,-1.724227],[-1.728930,2.493435,0.559336,-8.213934],[-7.363627,-8.999726,9.003502,-9.601989],[-4.941620,7.238078,4.462509,-4.142485],[-0.671913,3.671460,-8.698210,-7.251087],[4.386691,-1.624123,9.937723,-3.974051],[-1.749156,-5.359563,0.855567,6.942150],[-8.011025,-7.733832,-6.116641,2.515761],[-1.803122,1.461879,-4.755591,1.760685],[8.164573,-0.875694,-0.089450,0.169158],[-2.179547,6.518745,-1.320465,3.948457],[5.278084,8.751827,-9.086570,-5.861027],[6.804883,6.221541,3.634228,0.590284]],[[8.273303,0.385329,-9.994543,-5.368543],[9.207068,2.339140,-9.904538,-7.592219],[-1.160468,-2.721229,-6.315847,5.654189],[-2.693661,-0.666426,7.779213,6.387834],[7.108448,4.827874,5.439201,-3.895481],[2.445921,-7.874786,-8.975811,9.947527],[-4.316593,8.159467,-0.638588,-1.641052],[-1.550433,-3.592256,-3.713426,-1.359424],[7.055551,-9.936378,0.104658,6.194988],[-2.850913,1.519120,-5.485083,7.300990],[-8.195312,1.773207,2.256022,8.995245],[-3.944506,6.055809,0.298374,0.647626],[8.234549,7.217297,-4.333871,9.741891],[0.232625,-9.809392,5.607142,-8.157419]],[[-0.291937,-7.839239,-3.560870,8.592986],[-0.496839,5.677161,-1.114124,-7.640846],[-4.914667,6.425585,-7.895840,4.937653],[6.597054,1.644659,7.264181,-7.333344],[9.362518,4.700847,-4.099825,5.005535],[-4.106127,4.302643,3.493008,-2.728214],[8.573438,-5.301252,2.461081,3.548481],[7.264668,9.873171,0.931885,6.324892],[9.086930,-7.200970,3.467583,-8.012178],[-4.201764,1.631048,8.156840,-2.061856],[9.064036,-0.720551,-3.988190,7.246958],[-8.255762,5.222843,-7.024469,-9.229743],[1.651031,7.390368,-2.681581,-3.873212],[5.431183,-4.740790,-0.334689,-9.887584]],[[-4.570802,-4.942047,-3.689990,-7.719393],[-3.085762,-6.812286,-7.881663,-3.450368],[7.544626,6.473944,6.206094,8.201164],[4.970590,9.526314,-0.786064,0.374510],[-9.048672,4.756357,5.158931,0.926099],[5.594451,-1.261790,8.654585,-0.519498],[-0.798596,-1.764987,7.596951,2.860975],[-3.335672,-1.332496,-7.514156,1.695994],[9.301700,0.239485,-8.347183,4.118716],[9.354185,-0.947072,-4.854016,7.962362],[-6.557179,9.051957,2.748310,-2.454101],[8.201859,-1.204683,-4.730312,3.513289],[1.315160,-5.255000,6.520183,3.670381],[2.687226,8.111274,-2.618790,-2.684505]],[[8.072021,5.779610,-1.330322,-1.205873],[-0.106456,2.902443,-8.367794,6.584452],[-6.563250,6.295566,6.172140,-5.708653],[-4.161649,-2.605167,-3.969867,9.001464],[-2.619137,3.179255,-8.134550,5.709807],[-2.543673,8.504335,3.843752,-6.816101],[-0.601364,9.076186,5.632249,-5.556287],[-9.923899,-2.538830,-2.213846,-0.381275],[-3.517656,4.824488,2.301263,-3.288646],[-3.330985,-2.250833,-2.774019,0.297634],[-9.629441,-9.505064,-9.512828,-7.963205],[8.073682,5.817089,-5.273380,3.783115],[2.429778,-5.038958,8.732712,6.117789],[-8.689566,9.073809,-8.151169,-9.372703]],[[2.874564,-8.283876,0.209322,-4.456833],[-9.718397,-4.004660,7.017088,2.446809],[8.552951,0.377771,-5.742356,-9.277023],[-5.365564,6.012439,-9.011661,-4.358680],[-6.719248,6.299615,6.100623,0.081530],[3.914925,-4.846628,8.085662,-7.645753],[3.114298,2.086655,-2.712856,8.049262],[4.569009,3.935771,-0.610225,8.261519],[8.246229,-4.284484,7.436420,-3.712395],[-0.457656,6.856396,-0.451435,-2.969676],[-0.461981,-5.221335,9.261513,5.260537],[-8.245530,-1.932322,-3.297541,-3.049869],[-9.937338,-5.413317,-9.608808,-2.839160],[-3.607615,-5.429183,8.763749,-3.093244]],[[-3.656304,-0.766971,-0.154591,-9.914064],[0.086384,6.648654,-5.326335,8.730000],[4.574542,-8.825776,-7.101794,-9.421815],[7.926082,4.785965,9.608246,-9.550297],[-0.354678,2.703332,-3.164188,-9.358858],[-1.663462,-3.410552,0.978751,5.297131],[1.251030,-6.561999,-6.867518,-9.130383],[1.885567,3.287311,-9.207729,-2.137227],[-0.774412,7.709223,3.796200,-5.465273],[-3.993924,-6.797787,-2.033322,-5.496899],[-5.354287,9.795524,3.627978,-2.082746],[-9.291960,9.649750,0.727438,9.199737],[6.192926,-5.316590,-6.542095,-3.967388],[4.735553,-4.722519,-1.759442,-3.892031]]], dtype = "float32")#candidate|2468|(9, 14, 4)|const|float32
bop_2469 = relay.multiply(uop_2461.astype('int64'), relay.reshape(const_2468.astype('int64'), relay.shape_of(uop_2461))) # shape=(9, 14, 4)
output = relay.Tuple([call_2408,const_2409,const_2410,call_2414,const_2415,call_2417,call_2437,const_2438,call_2444,const_2445,call_2452,const_2453,call_2457,call_2463,bop_2469,])
output2 = relay.Tuple([call_2411,const_2409,const_2410,call_2416,const_2415,call_2418,call_2439,const_2438,call_2446,const_2445,call_2454,const_2453,call_2458,call_2464,bop_2469,])
func_2473 = relay.Function([var_2400,], output)
mod['func_2473'] = func_2473
mod = relay.transform.InferType()(mod)
var_2474 = relay.var("var_2474", dtype = "float64", shape = (9, 14, 4))#candidate|2474|(9, 14, 4)|var|float64
output = func_2473(var_2474)
func_2475 = relay.Function([var_2474], output)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2339_call = mod.get_global_var('func_2339')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_2487 = func_2339_call()
call_2488 = func_2339_call()
uop_2497 = relay.exp(call_2487.astype('float64')) # shape=(3, 15, 4)
uop_2499 = relay.exp(call_2488.astype('float64')) # shape=(3, 15, 4)
output = relay.Tuple([uop_2497,])
output2 = relay.Tuple([uop_2499,])
func_2510 = relay.Function([], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
mutated_mod['func_2510'] = func_2510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mutated_mod.get_global_var('func_2510')
call_2511 = func_2510_call()
output = call_2511
func_2512 = relay.Function([], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_2570 = relay.TupleGetItem(func_1122_call(), 0)
call_2571 = relay.TupleGetItem(func_1124_call(), 0)
uop_2583 = relay.atanh(call_2570.astype('float64')) # shape=(3, 15, 4)
uop_2585 = relay.atanh(call_2571.astype('float64')) # shape=(3, 15, 4)
func_24_call = mod.get_global_var('func_24')
func_27_call = mutated_mod.get_global_var('func_27')
var_2590 = relay.var("var_2590", dtype = "float64", shape = (648,))#candidate|2590|(648,)|var|float64
call_2589 = relay.TupleGetItem(func_24_call(relay.reshape(var_2590.astype('float64'), [12, 6, 9])), 0)
call_2591 = relay.TupleGetItem(func_27_call(relay.reshape(var_2590.astype('float64'), [12, 6, 9])), 0)
uop_2598 = relay.atanh(call_2589.astype('float64')) # shape=(12, 6, 9)
uop_2600 = relay.atanh(call_2591.astype('float64')) # shape=(12, 6, 9)
output = relay.Tuple([uop_2583,var_2590,uop_2598,])
output2 = relay.Tuple([uop_2585,var_2590,uop_2600,])
func_2615 = relay.Function([var_2590,], output)
mod['func_2615'] = func_2615
mod = relay.transform.InferType()(mod)
var_2616 = relay.var("var_2616", dtype = "float64", shape = (648,))#candidate|2616|(648,)|var|float64
output = func_2615(var_2616)
func_2617 = relay.Function([var_2616], output)
mutated_mod['func_2617'] = func_2617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_2622 = relay.TupleGetItem(func_1841_call(), 0)
call_2623 = relay.TupleGetItem(func_1843_call(), 0)
output = call_2622
output2 = call_2623
func_2632 = relay.Function([], output)
mod['func_2632'] = func_2632
mod = relay.transform.InferType()(mod)
output = func_2632()
func_2633 = relay.Function([], output)
mutated_mod['func_2633'] = func_2633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2650 = func_2250_call()
call_2651 = func_2250_call()
var_2652 = relay.var("var_2652", dtype = "int32", shape = (3, 15, 4))#candidate|2652|(3, 15, 4)|var|int32
bop_2653 = relay.logical_and(call_2650.astype('bool'), relay.reshape(var_2652.astype('bool'), relay.shape_of(call_2650))) # shape=(3, 15, 4)
bop_2656 = relay.logical_and(call_2651.astype('bool'), relay.reshape(var_2652.astype('bool'), relay.shape_of(call_2651))) # shape=(3, 15, 4)
func_2473_call = mod.get_global_var('func_2473')
func_2475_call = mutated_mod.get_global_var('func_2475')
var_2666 = relay.var("var_2666", dtype = "float64", shape = (504,))#candidate|2666|(504,)|var|float64
call_2665 = relay.TupleGetItem(func_2473_call(relay.reshape(var_2666.astype('float64'), [9, 14, 4])), 9)
call_2667 = relay.TupleGetItem(func_2475_call(relay.reshape(var_2666.astype('float64'), [9, 14, 4])), 9)
output = relay.Tuple([bop_2653,call_2665,var_2666,])
output2 = relay.Tuple([bop_2656,call_2667,var_2666,])
func_2668 = relay.Function([var_2652,var_2666,], output)
mod['func_2668'] = func_2668
mod = relay.transform.InferType()(mod)
mutated_mod['func_2668'] = func_2668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2668_call = mutated_mod.get_global_var('func_2668')
var_2670 = relay.var("var_2670", dtype = "int32", shape = (3, 15, 4))#candidate|2670|(3, 15, 4)|var|int32
var_2671 = relay.var("var_2671", dtype = "float64", shape = (504,))#candidate|2671|(504,)|var|float64
call_2669 = func_2668_call(var_2670,var_2671,)
output = call_2669
func_2672 = relay.Function([var_2670,var_2671,], output)
mutated_mod['func_2672'] = func_2672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_2719 = relay.TupleGetItem(func_1935_call(), 0)
call_2720 = relay.TupleGetItem(func_1937_call(), 0)
output = relay.Tuple([call_2719,])
output2 = relay.Tuple([call_2720,])
func_2725 = relay.Function([], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
output = func_2725()
func_2726 = relay.Function([], output)
mutated_mod['func_2726'] = func_2726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1841_call = mod.get_global_var('func_1841')
func_1843_call = mutated_mod.get_global_var('func_1843')
call_2761 = relay.TupleGetItem(func_1841_call(), 0)
call_2762 = relay.TupleGetItem(func_1843_call(), 0)
output = call_2761
output2 = call_2762
func_2768 = relay.Function([], output)
mod['func_2768'] = func_2768
mod = relay.transform.InferType()(mod)
output = func_2768()
func_2769 = relay.Function([], output)
mutated_mod['func_2769'] = func_2769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2800 = relay.TupleGetItem(func_2031_call(), 2)
call_2801 = relay.TupleGetItem(func_2033_call(), 2)
output = call_2800
output2 = call_2801
func_2802 = relay.Function([], output)
mod['func_2802'] = func_2802
mod = relay.transform.InferType()(mod)
mutated_mod['func_2802'] = func_2802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2802_call = mutated_mod.get_global_var('func_2802')
call_2803 = func_2802_call()
output = call_2803
func_2804 = relay.Function([], output)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2768_call = mod.get_global_var('func_2768')
func_2769_call = mutated_mod.get_global_var('func_2769')
call_2813 = func_2768_call()
call_2814 = func_2768_call()
output = relay.Tuple([call_2813,])
output2 = relay.Tuple([call_2814,])
func_2816 = relay.Function([], output)
mod['func_2816'] = func_2816
mod = relay.transform.InferType()(mod)
mutated_mod['func_2816'] = func_2816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2816_call = mutated_mod.get_global_var('func_2816')
call_2817 = func_2816_call()
output = call_2817
func_2818 = relay.Function([], output)
mutated_mod['func_2818'] = func_2818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_2827 = relay.TupleGetItem(func_1935_call(), 1)
call_2828 = relay.TupleGetItem(func_1937_call(), 1)
uop_2842 = relay.sinh(call_2827.astype('float32')) # shape=(3, 15, 4)
uop_2844 = relay.sinh(call_2828.astype('float32')) # shape=(3, 15, 4)
uop_2847 = relay.rsqrt(uop_2842.astype('float64')) # shape=(3, 15, 4)
uop_2849 = relay.rsqrt(uop_2844.astype('float64')) # shape=(3, 15, 4)
bop_2855 = relay.add(uop_2847.astype('uint32'), relay.reshape(uop_2842.astype('uint32'), relay.shape_of(uop_2847))) # shape=(3, 15, 4)
bop_2858 = relay.add(uop_2849.astype('uint32'), relay.reshape(uop_2844.astype('uint32'), relay.shape_of(uop_2849))) # shape=(3, 15, 4)
var_2870 = relay.var("var_2870", dtype = "float32", shape = (3, 15, 4))#candidate|2870|(3, 15, 4)|var|float32
bop_2871 = relay.greater(uop_2842.astype('bool'), relay.reshape(var_2870.astype('bool'), relay.shape_of(uop_2842))) # shape=(3, 15, 4)
bop_2874 = relay.greater(uop_2844.astype('bool'), relay.reshape(var_2870.astype('bool'), relay.shape_of(uop_2844))) # shape=(3, 15, 4)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_2879 = func_1869_call()
call_2880 = func_1869_call()
func_1221_call = mod.get_global_var('func_1221')
func_1222_call = mutated_mod.get_global_var('func_1222')
call_2881 = relay.TupleGetItem(func_1221_call(), 0)
call_2882 = relay.TupleGetItem(func_1222_call(), 0)
func_2274_call = mod.get_global_var('func_2274')
func_2278_call = mutated_mod.get_global_var('func_2278')
const_2891 = relay.const(6, dtype = "int16")#candidate|2891|()|const|int16
const_2892 = relay.const([-5,1,-3,-5,-10,3,7,-9,-6,-9,5,-10,-10,4,8,-4,-2,7,9,2,-7,9,-5,-10,-1,7,-3,-8,8,9,-5,7,1,-3,-5,10,-2,-5,-5,9,6,-1,-2,1,1], dtype = "int16")#candidate|2892|(45,)|const|int16
call_2890 = relay.TupleGetItem(func_2274_call(relay.reshape(const_2891.astype('int16'), []), relay.reshape(const_2892.astype('int16'), [5, 9, 1]), ), 0)
call_2893 = relay.TupleGetItem(func_2278_call(relay.reshape(const_2891.astype('int16'), []), relay.reshape(const_2892.astype('int16'), [5, 9, 1]), ), 0)
output = relay.Tuple([bop_2855,bop_2871,call_2879,call_2881,call_2890,const_2891,const_2892,])
output2 = relay.Tuple([bop_2858,bop_2874,call_2880,call_2882,call_2893,const_2891,const_2892,])
func_2894 = relay.Function([var_2870,], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2895 = relay.var("var_2895", dtype = "float32", shape = (3, 15, 4))#candidate|2895|(3, 15, 4)|var|float32
func_2894_call = mutated_mod.get_global_var('func_2894')
call_2896 = func_2894_call(var_2895)
output = call_2896
func_2897 = relay.Function([var_2895], output)
mutated_mod['func_2897'] = func_2897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2924 = relay.TupleGetItem(func_2031_call(), 2)
call_2925 = relay.TupleGetItem(func_2033_call(), 2)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2939 = func_1619_call()
call_2940 = func_1619_call()
uop_2943 = relay.rsqrt(call_2924.astype('float32')) # shape=(12, 50)
uop_2945 = relay.rsqrt(call_2925.astype('float32')) # shape=(12, 50)
uop_2955 = relay.atan(call_2924.astype('float32')) # shape=(12, 50)
uop_2957 = relay.atan(call_2925.astype('float32')) # shape=(12, 50)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_2962 = relay.TupleGetItem(func_2031_call(), 2)
call_2963 = relay.TupleGetItem(func_2033_call(), 2)
uop_2975 = relay.asin(uop_2943.astype('float64')) # shape=(12, 50)
uop_2977 = relay.asin(uop_2945.astype('float64')) # shape=(12, 50)
var_2980 = relay.var("var_2980", dtype = "float32", shape = (12, 50))#candidate|2980|(12, 50)|var|float32
bop_2981 = relay.minimum(uop_2943.astype('uint64'), relay.reshape(var_2980.astype('uint64'), relay.shape_of(uop_2943))) # shape=(12, 50)
bop_2984 = relay.minimum(uop_2945.astype('uint64'), relay.reshape(var_2980.astype('uint64'), relay.shape_of(uop_2945))) # shape=(12, 50)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2989 = func_1619_call()
call_2990 = func_1619_call()
bop_2992 = relay.divide(uop_2975.astype('float32'), relay.reshape(bop_2981.astype('float32'), relay.shape_of(uop_2975))) # shape=(12, 50)
bop_2995 = relay.divide(uop_2977.astype('float32'), relay.reshape(bop_2984.astype('float32'), relay.shape_of(uop_2977))) # shape=(12, 50)
func_1619_call = mod.get_global_var('func_1619')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2996 = func_1619_call()
call_2997 = func_1619_call()
var_2999 = relay.var("var_2999", dtype = "int32", shape = (3, 15, 4))#candidate|2999|(3, 15, 4)|var|int32
bop_3000 = relay.floor_mod(call_2989.astype('float64'), relay.reshape(var_2999.astype('float64'), relay.shape_of(call_2989))) # shape=(3, 15, 4)
bop_3003 = relay.floor_mod(call_2990.astype('float64'), relay.reshape(var_2999.astype('float64'), relay.shape_of(call_2990))) # shape=(3, 15, 4)
uop_3008 = relay.acosh(bop_2992.astype('float64')) # shape=(12, 50)
uop_3010 = relay.acosh(bop_2995.astype('float64')) # shape=(12, 50)
output = relay.Tuple([call_2939,uop_2955,call_2962,call_2996,bop_3000,uop_3008,])
output2 = relay.Tuple([call_2940,uop_2957,call_2963,call_2997,bop_3003,uop_3010,])
func_3019 = relay.Function([var_2980,var_2999,], output)
mod['func_3019'] = func_3019
mod = relay.transform.InferType()(mod)
var_3020 = relay.var("var_3020", dtype = "float32", shape = (12, 50))#candidate|3020|(12, 50)|var|float32
var_3021 = relay.var("var_3021", dtype = "int32", shape = (3, 15, 4))#candidate|3021|(3, 15, 4)|var|int32
output = func_3019(var_3020,var_3021,)
func_3022 = relay.Function([var_3020,var_3021,], output)
mutated_mod['func_3022'] = func_3022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_3070 = relay.TupleGetItem(func_2725_call(), 0)
call_3071 = relay.TupleGetItem(func_2726_call(), 0)
output = call_3070
output2 = call_3071
func_3072 = relay.Function([], output)
mod['func_3072'] = func_3072
mod = relay.transform.InferType()(mod)
output = func_3072()
func_3073 = relay.Function([], output)
mutated_mod['func_3073'] = func_3073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_3074 = relay.TupleGetItem(func_961_call(), 0)
call_3075 = relay.TupleGetItem(func_962_call(), 0)
output = call_3074
output2 = call_3075
func_3098 = relay.Function([], output)
mod['func_3098'] = func_3098
mod = relay.transform.InferType()(mod)
mutated_mod['func_3098'] = func_3098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3098_call = mutated_mod.get_global_var('func_3098')
call_3099 = func_3098_call()
output = call_3099
func_3100 = relay.Function([], output)
mutated_mod['func_3100'] = func_3100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_3115 = relay.TupleGetItem(func_2510_call(), 0)
call_3116 = relay.TupleGetItem(func_2512_call(), 0)
output = relay.Tuple([call_3115,])
output2 = relay.Tuple([call_3116,])
func_3129 = relay.Function([], output)
mod['func_3129'] = func_3129
mod = relay.transform.InferType()(mod)
output = func_3129()
func_3130 = relay.Function([], output)
mutated_mod['func_3130'] = func_3130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_3139 = relay.TupleGetItem(func_2725_call(), 0)
call_3140 = relay.TupleGetItem(func_2726_call(), 0)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_3143 = func_2250_call()
call_3144 = func_2250_call()
output = relay.Tuple([call_3139,call_3143,])
output2 = relay.Tuple([call_3140,call_3144,])
func_3160 = relay.Function([], output)
mod['func_3160'] = func_3160
mod = relay.transform.InferType()(mod)
output = func_3160()
func_3161 = relay.Function([], output)
mutated_mod['func_3161'] = func_3161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_3174 = relay.TupleGetItem(func_1122_call(), 0)
call_3175 = relay.TupleGetItem(func_1124_call(), 0)
var_3188 = relay.var("var_3188", dtype = "int32", shape = (3, 15, 4))#candidate|3188|(3, 15, 4)|var|int32
bop_3189 = relay.logical_or(call_3174.astype('bool'), relay.reshape(var_3188.astype('bool'), relay.shape_of(call_3174))) # shape=(3, 15, 4)
bop_3192 = relay.logical_or(call_3175.astype('bool'), relay.reshape(var_3188.astype('bool'), relay.shape_of(call_3175))) # shape=(3, 15, 4)
output = relay.Tuple([bop_3189,])
output2 = relay.Tuple([bop_3192,])
func_3211 = relay.Function([var_3188,], output)
mod['func_3211'] = func_3211
mod = relay.transform.InferType()(mod)
var_3212 = relay.var("var_3212", dtype = "int32", shape = (3, 15, 4))#candidate|3212|(3, 15, 4)|var|int32
output = func_3211(var_3212)
func_3213 = relay.Function([var_3212], output)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3287 = relay.var("var_3287", dtype = "bool", shape = (7, 8, 6))#candidate|3287|(7, 8, 6)|var|bool
var_3288 = relay.var("var_3288", dtype = "bool", shape = (7, 8, 6))#candidate|3288|(7, 8, 6)|var|bool
bop_3289 = relay.logical_or(var_3287.astype('bool'), relay.reshape(var_3288.astype('bool'), relay.shape_of(var_3287))) # shape=(7, 8, 6)
bop_3293 = relay.greater(bop_3289.astype('bool'), relay.reshape(var_3287.astype('bool'), relay.shape_of(bop_3289))) # shape=(7, 8, 6)
output = relay.Tuple([bop_3293,])
output2 = relay.Tuple([bop_3293,])
func_3296 = relay.Function([var_3287,var_3288,], output)
mod['func_3296'] = func_3296
mod = relay.transform.InferType()(mod)
mutated_mod['func_3296'] = func_3296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3296_call = mutated_mod.get_global_var('func_3296')
var_3298 = relay.var("var_3298", dtype = "bool", shape = (7, 8, 6))#candidate|3298|(7, 8, 6)|var|bool
var_3299 = relay.var("var_3299", dtype = "bool", shape = (7, 8, 6))#candidate|3299|(7, 8, 6)|var|bool
call_3297 = func_3296_call(var_3298,var_3299,)
output = call_3297
func_3300 = relay.Function([var_3298,var_3299,], output)
mutated_mod['func_3300'] = func_3300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_3321 = relay.TupleGetItem(func_2031_call(), 0)
call_3322 = relay.TupleGetItem(func_2033_call(), 0)
var_3347 = relay.var("var_3347", dtype = "bool", shape = (3, 15, 4))#candidate|3347|(3, 15, 4)|var|bool
bop_3348 = relay.right_shift(call_3321.astype('uint8'), relay.reshape(var_3347.astype('uint8'), relay.shape_of(call_3321))) # shape=(3, 15, 4)
bop_3351 = relay.right_shift(call_3322.astype('uint8'), relay.reshape(var_3347.astype('uint8'), relay.shape_of(call_3322))) # shape=(3, 15, 4)
output = bop_3348
output2 = bop_3351
func_3354 = relay.Function([var_3347,], output)
mod['func_3354'] = func_3354
mod = relay.transform.InferType()(mod)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3355 = relay.var("var_3355", dtype = "bool", shape = (3, 15, 4))#candidate|3355|(3, 15, 4)|var|bool
func_3354_call = mutated_mod.get_global_var('func_3354')
call_3356 = func_3354_call(var_3355)
output = call_3356
func_3357 = relay.Function([var_3355], output)
mutated_mod['func_3357'] = func_3357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3376 = relay.var("var_3376", dtype = "float64", shape = ())#candidate|3376|()|var|float64
const_3377 = relay.constdtype = "float64")#candidate|3377|(14, 10, 15)|const|float64
bop_3378 = relay.floor_divide(var_3376.astype('float64'), const_3377.astype('float64')) # shape=(14, 10, 15)
output = relay.Tuple([bop_3378,])
output2 = relay.Tuple([bop_3378,])
func_3385 = relay.Function([var_3376,], output)
mod['func_3385'] = func_3385
mod = relay.transform.InferType()(mod)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3386 = relay.var("var_3386", dtype = "float64", shape = ())#candidate|3386|()|var|float64
func_3385_call = mutated_mod.get_global_var('func_3385')
call_3387 = func_3385_call(var_3386)
output = call_3387
func_3388 = relay.Function([var_3386], output)
mutated_mod['func_3388'] = func_3388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2632_call = mod.get_global_var('func_2632')
func_2633_call = mutated_mod.get_global_var('func_2633')
call_3437 = func_2632_call()
call_3438 = func_2632_call()
output = call_3437
output2 = call_3438
func_3441 = relay.Function([], output)
mod['func_3441'] = func_3441
mod = relay.transform.InferType()(mod)
output = func_3441()
func_3442 = relay.Function([], output)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1221_call = mod.get_global_var('func_1221')
func_1222_call = mutated_mod.get_global_var('func_1222')
call_3450 = relay.TupleGetItem(func_1221_call(), 0)
call_3451 = relay.TupleGetItem(func_1222_call(), 0)
output = call_3450
output2 = call_3451
func_3463 = relay.Function([], output)
mod['func_3463'] = func_3463
mod = relay.transform.InferType()(mod)
output = func_3463()
func_3464 = relay.Function([], output)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_3467 = relay.TupleGetItem(func_1505_call(), 0)
call_3468 = relay.TupleGetItem(func_1507_call(), 0)
output = relay.Tuple([call_3467,])
output2 = relay.Tuple([call_3468,])
func_3471 = relay.Function([], output)
mod['func_3471'] = func_3471
mod = relay.transform.InferType()(mod)
output = func_3471()
func_3472 = relay.Function([], output)
mutated_mod['func_3472'] = func_3472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1221_call = mod.get_global_var('func_1221')
func_1222_call = mutated_mod.get_global_var('func_1222')
call_3622 = relay.TupleGetItem(func_1221_call(), 0)
call_3623 = relay.TupleGetItem(func_1222_call(), 0)
const_3628 = relay.const([[[False,False,True,True],[True,False,False,False],[True,False,True,True],[False,False,True,False],[True,True,False,False],[True,True,True,False],[False,False,True,False],[False,False,False,False],[True,True,True,False],[False,True,False,True],[False,True,False,False],[True,False,False,False],[True,False,False,False],[True,True,False,True],[True,False,True,False]],[[False,True,False,True],[True,False,True,True],[True,True,False,True],[True,False,False,False],[False,False,True,True],[True,True,True,False],[True,False,False,False],[False,True,False,False],[True,True,False,False],[True,True,True,False],[True,True,False,False],[True,False,False,False],[False,True,True,True],[True,True,False,False],[True,False,False,True]],[[True,True,True,False],[False,True,False,True],[True,True,True,False],[False,True,False,False],[True,False,False,False],[False,True,True,True],[False,True,True,True],[True,True,False,True],[False,False,True,False],[True,False,True,False],[True,True,False,False],[False,False,False,False],[True,False,False,True],[True,True,False,False],[True,True,True,False]]], dtype = "bool")#candidate|3628|(3, 15, 4)|const|bool
bop_3629 = relay.bitwise_xor(call_3622.astype('uint8'), relay.reshape(const_3628.astype('uint8'), relay.shape_of(call_3622))) # shape=(3, 15, 4)
bop_3632 = relay.bitwise_xor(call_3623.astype('uint8'), relay.reshape(const_3628.astype('uint8'), relay.shape_of(call_3623))) # shape=(3, 15, 4)
func_2274_call = mod.get_global_var('func_2274')
func_2278_call = mutated_mod.get_global_var('func_2278')
const_3640 = relay.const(6, dtype = "int16")#candidate|3640|()|const|int16
var_3641 = relay.var("var_3641", dtype = "int16", shape = (45,))#candidate|3641|(45,)|var|int16
call_3639 = relay.TupleGetItem(func_2274_call(relay.reshape(const_3640.astype('int16'), []), relay.reshape(var_3641.astype('int16'), [5, 9, 1]), ), 1)
call_3642 = relay.TupleGetItem(func_2278_call(relay.reshape(const_3640.astype('int16'), []), relay.reshape(var_3641.astype('int16'), [5, 9, 1]), ), 1)
func_2668_call = mod.get_global_var('func_2668')
func_2672_call = mutated_mod.get_global_var('func_2672')
var_3645 = relay.var("var_3645", dtype = "float64", shape = (504,))#candidate|3645|(504,)|var|float64
call_3644 = relay.TupleGetItem(func_2668_call(relay.reshape(call_3622.astype('int32'), [3, 15, 4]), relay.reshape(var_3645.astype('float64'), [504,]), ), 1)
call_3646 = relay.TupleGetItem(func_2672_call(relay.reshape(call_3622.astype('int32'), [3, 15, 4]), relay.reshape(var_3645.astype('float64'), [504,]), ), 1)
func_3385_call = mod.get_global_var('func_3385')
func_3388_call = mutated_mod.get_global_var('func_3388')
call_3653 = relay.TupleGetItem(func_3385_call(relay.reshape(const_3640.astype('float64'), [])), 0)
call_3654 = relay.TupleGetItem(func_3388_call(relay.reshape(const_3640.astype('float64'), [])), 0)
output = relay.Tuple([bop_3629,call_3639,const_3640,var_3641,call_3644,var_3645,call_3653,])
output2 = relay.Tuple([bop_3632,call_3642,const_3640,var_3641,call_3646,var_3645,call_3654,])
func_3662 = relay.Function([var_3641,var_3645,], output)
mod['func_3662'] = func_3662
mod = relay.transform.InferType()(mod)
var_3663 = relay.var("var_3663", dtype = "int16", shape = (45,))#candidate|3663|(45,)|var|int16
var_3664 = relay.var("var_3664", dtype = "float64", shape = (504,))#candidate|3664|(504,)|var|float64
output = func_3662(var_3663,var_3664,)
func_3665 = relay.Function([var_3663,var_3664,], output)
mutated_mod['func_3665'] = func_3665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3687 = relay.var("var_3687", dtype = "float32", shape = (14, 9))#candidate|3687|(14, 9)|var|float32
uop_3688 = relay.log2(var_3687.astype('float32')) # shape=(14, 9)
output = uop_3688
output2 = uop_3688
func_3693 = relay.Function([var_3687,], output)
mod['func_3693'] = func_3693
mod = relay.transform.InferType()(mod)
var_3694 = relay.var("var_3694", dtype = "float32", shape = (14, 9))#candidate|3694|(14, 9)|var|float32
output = func_3693(var_3694)
func_3695 = relay.Function([var_3694], output)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_3704 = relay.TupleGetItem(func_1935_call(), 1)
call_3705 = relay.TupleGetItem(func_1937_call(), 1)
output = call_3704
output2 = call_3705
func_3714 = relay.Function([], output)
mod['func_3714'] = func_3714
mod = relay.transform.InferType()(mod)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3714_call = mutated_mod.get_global_var('func_3714')
call_3715 = func_3714_call()
output = call_3715
func_3716 = relay.Function([], output)
mutated_mod['func_3716'] = func_3716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_3721 = relay.TupleGetItem(func_2031_call(), 2)
call_3722 = relay.TupleGetItem(func_2033_call(), 2)
func_1090_call = mod.get_global_var('func_1090')
func_1093_call = mutated_mod.get_global_var('func_1093')
const_3746 = relay.const([-7,10,-2,-1,1,3,2,6,-1,2,-1,-8,8,-8,-1,-8,-1,-4,-1,8,-2,4,2,-1,-4,-9,-10,1,-8,7,-9,10,3,-3,-10,8,3,-8,-1,8,-10,10,3,7,10,5,-9,9,8,8,-6,-9,-8,2,6,5,-6,-7,6,-10,-6,-8,-9,-6,-1,-6,1,-6,2,6,-7,-5,6,1,6,8,8,6,3,6,-6,-2,8,4,5,10,-3,-6,7,-8,-9,-4,2,-4,-3,8,-1,-6], dtype = "uint64")#candidate|3746|(98,)|const|uint64
call_3745 = relay.TupleGetItem(func_1090_call(relay.reshape(const_3746.astype('uint64'), [98,])), 0)
call_3747 = relay.TupleGetItem(func_1093_call(relay.reshape(const_3746.astype('uint64'), [98,])), 0)
output = relay.Tuple([call_3721,call_3745,const_3746,])
output2 = relay.Tuple([call_3722,call_3747,const_3746,])
func_3767 = relay.Function([], output)
mod['func_3767'] = func_3767
mod = relay.transform.InferType()(mod)
output = func_3767()
func_3768 = relay.Function([], output)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2768_call = mod.get_global_var('func_2768')
func_2769_call = mutated_mod.get_global_var('func_2769')
call_3778 = func_2768_call()
call_3779 = func_2768_call()
output = relay.Tuple([call_3778,])
output2 = relay.Tuple([call_3779,])
func_3788 = relay.Function([], output)
mod['func_3788'] = func_3788
mod = relay.transform.InferType()(mod)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3788_call = mutated_mod.get_global_var('func_3788')
call_3789 = func_3788_call()
output = call_3789
func_3790 = relay.Function([], output)
mutated_mod['func_3790'] = func_3790
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3840 = relay.const([[[3,-6,-9,-5,3,-7,10],[1,8,-2,-10,7,-8,-5],[7,-6,-1,9,7,7,7],[7,7,-3,-1,5,1,-9],[2,2,1,-4,-10,2,-4],[-7,6,-8,-5,-7,-8,-8],[-6,-10,3,10,9,8,-4],[9,3,10,-4,-4,1,-5],[-4,10,2,-10,3,10,-3],[-3,3,6,-8,5,7,10],[1,-9,-10,6,-8,-10,-6],[4,1,6,-9,-9,-1,10],[-4,-5,8,3,-2,4,7],[10,-4,-3,-2,-8,3,10],[4,3,-10,6,-4,-8,7],[-6,-5,8,-3,-4,-1,-7]],[[-4,10,5,-7,-2,3,-1],[2,-4,-2,9,10,-10,8],[-9,-6,10,-2,-9,-1,1],[9,-6,9,1,1,-1,1],[-5,3,-4,8,6,10,-8],[-10,-5,-8,2,-3,9,3],[4,1,5,-5,4,-4,5],[8,4,-10,-7,-2,-10,-9],[8,8,10,-3,-5,3,-6],[-10,10,4,-5,3,-5,-8],[1,-3,-3,-2,4,7,8],[9,-4,4,-8,-8,-3,5],[-7,4,-4,8,9,10,9],[-3,7,10,-10,7,-3,10],[-7,7,-10,5,-7,3,3],[9,1,9,-3,-1,-5,2]],[[-5,-7,9,-10,2,-5,6],[-7,3,3,10,-4,-2,8],[5,-7,-4,5,-6,-4,-10],[-9,7,7,2,4,3,6],[4,1,6,10,-2,-3,9],[9,6,-8,-4,3,-7,9],[-6,3,1,-7,-4,6,3],[-6,-5,-4,5,-4,-8,-4],[-3,-5,7,8,4,4,-4],[5,8,-2,8,-5,-9,-9],[-5,2,-7,-8,-6,2,-2],[7,-5,-3,-6,7,10,-5],[1,6,9,6,4,10,-10],[10,-9,8,-1,-10,-8,1],[10,-7,-1,7,-10,8,8],[-3,-2,-8,2,-6,9,-8]]], dtype = "uint32")#candidate|3840|(3, 16, 7)|const|uint32
var_3841 = relay.var("var_3841", dtype = "uint32", shape = (3, 16, 7))#candidate|3841|(3, 16, 7)|var|uint32
bop_3842 = relay.bitwise_xor(const_3840.astype('uint32'), relay.reshape(var_3841.astype('uint32'), relay.shape_of(const_3840))) # shape=(3, 16, 7)
bop_3858 = relay.minimum(const_3840.astype('uint32'), relay.reshape(var_3841.astype('uint32'), relay.shape_of(const_3840))) # shape=(3, 16, 7)
output = relay.Tuple([bop_3842,bop_3858,])
output2 = relay.Tuple([bop_3842,bop_3858,])
func_3871 = relay.Function([var_3841,], output)
mod['func_3871'] = func_3871
mod = relay.transform.InferType()(mod)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3872 = relay.var("var_3872", dtype = "uint32", shape = (3, 16, 7))#candidate|3872|(3, 16, 7)|var|uint32
func_3871_call = mutated_mod.get_global_var('func_3871')
call_3873 = func_3871_call(var_3872)
output = call_3873
func_3874 = relay.Function([var_3872], output)
mutated_mod['func_3874'] = func_3874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3788_call = mod.get_global_var('func_3788')
func_3790_call = mutated_mod.get_global_var('func_3790')
call_3876 = relay.TupleGetItem(func_3788_call(), 0)
call_3877 = relay.TupleGetItem(func_3790_call(), 0)
var_3887 = relay.var("var_3887", dtype = "int32", shape = (3, 15, 4))#candidate|3887|(3, 15, 4)|var|int32
bop_3888 = relay.divide(call_3876.astype('float32'), relay.reshape(var_3887.astype('float32'), relay.shape_of(call_3876))) # shape=(3, 15, 4)
bop_3891 = relay.divide(call_3877.astype('float32'), relay.reshape(var_3887.astype('float32'), relay.shape_of(call_3877))) # shape=(3, 15, 4)
output = relay.Tuple([bop_3888,])
output2 = relay.Tuple([bop_3891,])
func_3893 = relay.Function([var_3887,], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
var_3894 = relay.var("var_3894", dtype = "int32", shape = (3, 15, 4))#candidate|3894|(3, 15, 4)|var|int32
output = func_3893(var_3894)
func_3895 = relay.Function([var_3894], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_3900 = relay.TupleGetItem(func_3160_call(), 0)
call_3901 = relay.TupleGetItem(func_3161_call(), 0)
uop_3916 = relay.cos(call_3900.astype('float64')) # shape=(3, 15, 4)
uop_3918 = relay.cos(call_3901.astype('float64')) # shape=(3, 15, 4)
func_2768_call = mod.get_global_var('func_2768')
func_2769_call = mutated_mod.get_global_var('func_2769')
call_3921 = func_2768_call()
call_3922 = func_2768_call()
output = relay.Tuple([uop_3916,call_3921,])
output2 = relay.Tuple([uop_3918,call_3922,])
func_3927 = relay.Function([], output)
mod['func_3927'] = func_3927
mod = relay.transform.InferType()(mod)
output = func_3927()
func_3928 = relay.Function([], output)
mutated_mod['func_3928'] = func_3928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3940 = relay.var("var_3940", dtype = "float64", shape = (12, 11, 12))#candidate|3940|(12, 11, 12)|var|float64
uop_3941 = relay.rsqrt(var_3940.astype('float64')) # shape=(12, 11, 12)
uop_3955 = relay.sin(uop_3941.astype('float32')) # shape=(12, 11, 12)
bop_3973 = relay.not_equal(uop_3955.astype('bool'), relay.reshape(var_3940.astype('bool'), relay.shape_of(uop_3955))) # shape=(12, 11, 12)
const_3987 = relay.constdtype = "float32")#candidate|3987|(12, 11, 12)|const|float32
bop_3988 = relay.logical_and(uop_3955.astype('bool'), relay.reshape(const_3987.astype('bool'), relay.shape_of(uop_3955))) # shape=(12, 11, 12)
bop_3997 = relay.equal(uop_3941.astype('bool'), relay.reshape(uop_3955.astype('bool'), relay.shape_of(uop_3941))) # shape=(12, 11, 12)
output = relay.Tuple([bop_3973,bop_3988,bop_3997,])
output2 = relay.Tuple([bop_3973,bop_3988,bop_3997,])
func_4005 = relay.Function([var_3940,], output)
mod['func_4005'] = func_4005
mod = relay.transform.InferType()(mod)
var_4006 = relay.var("var_4006", dtype = "float64", shape = (12, 11, 12))#candidate|4006|(12, 11, 12)|var|float64
output = func_4005(var_4006)
func_4007 = relay.Function([var_4006], output)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3767_call = mod.get_global_var('func_3767')
func_3768_call = mutated_mod.get_global_var('func_3768')
call_4009 = relay.TupleGetItem(func_3767_call(), 2)
call_4010 = relay.TupleGetItem(func_3768_call(), 2)
const_4014 = relay.const([2,5,-2,6,-3,-9,6,5,3,10,4,9,-2,-6,7,-4,-10,3,-4,-2,-9,-6,-2,-8,-9,-6,-4,4,1,-4,1,-9,7,-7,-10,-5,-1,-4,6,-10,4,-7,-9,6,-10,-10,8,-6,-3,5,-1,4,5,-4,4,5,10,-6,-4,2,-5,-7,-4,-10,-5,2,-7,-9,-8,5,-9,-10,4,-1,-10,-2,-5,-8,1,8,2,3,8,-4,-5,8,9,2,-4,2,5,-7,-3,9,-4,2,-7,-7], dtype = "uint64")#candidate|4014|(98,)|const|uint64
bop_4015 = relay.bitwise_xor(call_4009.astype('uint16'), relay.reshape(const_4014.astype('uint16'), relay.shape_of(call_4009))) # shape=(98,)
bop_4018 = relay.bitwise_xor(call_4010.astype('uint16'), relay.reshape(const_4014.astype('uint16'), relay.shape_of(call_4010))) # shape=(98,)
func_2373_call = mod.get_global_var('func_2373')
func_2377_call = mutated_mod.get_global_var('func_2377')
var_4023 = relay.var("var_4023", dtype = "int64", shape = (2, 896))#candidate|4023|(2, 896)|var|int64
call_4022 = relay.TupleGetItem(func_2373_call(relay.reshape(var_4023.astype('int64'), [16, 8, 14]), relay.reshape(var_4023.astype('int64'), [16, 8, 14]), ), 1)
call_4024 = relay.TupleGetItem(func_2377_call(relay.reshape(var_4023.astype('int64'), [16, 8, 14]), relay.reshape(var_4023.astype('int64'), [16, 8, 14]), ), 1)
func_1595_call = mod.get_global_var('func_1595')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_4025 = relay.TupleGetItem(func_1595_call(), 0)
call_4026 = relay.TupleGetItem(func_1596_call(), 0)
output = relay.Tuple([bop_4015,call_4022,var_4023,call_4025,])
output2 = relay.Tuple([bop_4018,call_4024,var_4023,call_4026,])
func_4027 = relay.Function([var_4023,], output)
mod['func_4027'] = func_4027
mod = relay.transform.InferType()(mod)
var_4028 = relay.var("var_4028", dtype = "int64", shape = (2, 896))#candidate|4028|(2, 896)|var|int64
output = func_4027(var_4028)
func_4029 = relay.Function([var_4028], output)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_4076 = func_1869_call()
call_4077 = func_1869_call()
output = relay.Tuple([call_4076,])
output2 = relay.Tuple([call_4077,])
func_4115 = relay.Function([], output)
mod['func_4115'] = func_4115
mod = relay.transform.InferType()(mod)
output = func_4115()
func_4116 = relay.Function([], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_4139 = relay.TupleGetItem(func_3160_call(), 0)
call_4140 = relay.TupleGetItem(func_3161_call(), 0)
output = relay.Tuple([call_4139,])
output2 = relay.Tuple([call_4140,])
func_4141 = relay.Function([], output)
mod['func_4141'] = func_4141
mod = relay.transform.InferType()(mod)
output = func_4141()
func_4142 = relay.Function([], output)
mutated_mod['func_4142'] = func_4142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_4143 = relay.TupleGetItem(func_1505_call(), 0)
call_4144 = relay.TupleGetItem(func_1507_call(), 0)
output = call_4143
output2 = call_4144
func_4150 = relay.Function([], output)
mod['func_4150'] = func_4150
mod = relay.transform.InferType()(mod)
output = func_4150()
func_4151 = relay.Function([], output)
mutated_mod['func_4151'] = func_4151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4150_call = mod.get_global_var('func_4150')
func_4151_call = mutated_mod.get_global_var('func_4151')
call_4164 = func_4150_call()
call_4165 = func_4150_call()
func_1203_call = mod.get_global_var('func_1203')
func_1206_call = mutated_mod.get_global_var('func_1206')
var_4176 = relay.var("var_4176", dtype = "float32", shape = (600,))#candidate|4176|(600,)|var|float32
call_4175 = relay.TupleGetItem(func_1203_call(relay.reshape(var_4176.astype('float32'), [600,])), 0)
call_4177 = relay.TupleGetItem(func_1206_call(relay.reshape(var_4176.astype('float32'), [600,])), 0)
func_3463_call = mod.get_global_var('func_3463')
func_3464_call = mutated_mod.get_global_var('func_3464')
call_4205 = func_3463_call()
call_4206 = func_3463_call()
func_2339_call = mod.get_global_var('func_2339')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_4221 = func_2339_call()
call_4222 = func_2339_call()
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_4223 = func_2250_call()
call_4224 = func_2250_call()
output = relay.Tuple([call_4164,call_4175,var_4176,call_4205,call_4221,call_4223,])
output2 = relay.Tuple([call_4165,call_4177,var_4176,call_4206,call_4222,call_4224,])
func_4225 = relay.Function([var_4176,], output)
mod['func_4225'] = func_4225
mod = relay.transform.InferType()(mod)
var_4226 = relay.var("var_4226", dtype = "float32", shape = (600,))#candidate|4226|(600,)|var|float32
output = func_4225(var_4226)
func_4227 = relay.Function([var_4226], output)
mutated_mod['func_4227'] = func_4227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_4232 = relay.TupleGetItem(func_1045_call(), 0)
call_4233 = relay.TupleGetItem(func_1046_call(), 0)
func_4225_call = mod.get_global_var('func_4225')
func_4227_call = mutated_mod.get_global_var('func_4227')
var_4239 = relay.var("var_4239", dtype = "float32", shape = (600,))#candidate|4239|(600,)|var|float32
call_4238 = relay.TupleGetItem(func_4225_call(relay.reshape(var_4239.astype('float32'), [600,])), 5)
call_4240 = relay.TupleGetItem(func_4227_call(relay.reshape(var_4239.astype('float32'), [600,])), 5)
func_2768_call = mod.get_global_var('func_2768')
func_2769_call = mutated_mod.get_global_var('func_2769')
call_4248 = func_2768_call()
call_4249 = func_2768_call()
output = relay.Tuple([call_4232,call_4238,var_4239,call_4248,])
output2 = relay.Tuple([call_4233,call_4240,var_4239,call_4249,])
func_4254 = relay.Function([var_4239,], output)
mod['func_4254'] = func_4254
mod = relay.transform.InferType()(mod)
mutated_mod['func_4254'] = func_4254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4255 = relay.var("var_4255", dtype = "float32", shape = (600,))#candidate|4255|(600,)|var|float32
func_4254_call = mutated_mod.get_global_var('func_4254')
call_4256 = func_4254_call(var_4255)
output = call_4256
func_4257 = relay.Function([var_4255], output)
mutated_mod['func_4257'] = func_4257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_4405 = relay.TupleGetItem(func_3160_call(), 1)
call_4406 = relay.TupleGetItem(func_3161_call(), 1)
func_3893_call = mod.get_global_var('func_3893')
func_3895_call = mutated_mod.get_global_var('func_3895')
call_4416 = relay.TupleGetItem(func_3893_call(relay.reshape(call_4405.astype('int32'), [3, 15, 4])), 0)
call_4417 = relay.TupleGetItem(func_3895_call(relay.reshape(call_4405.astype('int32'), [3, 15, 4])), 0)
func_2668_call = mod.get_global_var('func_2668')
func_2672_call = mutated_mod.get_global_var('func_2672')
const_4423 = relay.const([[-5.184152,-0.754053,-0.167920,-4.466561,9.632143,5.296125,8.711266,-9.495342,6.007904,7.533035,1.984386,2.194723,-9.723157,8.866116,9.316874,3.624754,5.053325,2.976573,-3.663494,-6.138077,-9.402063,5.751952,-6.203904,-2.668684,8.258110,4.298773,7.287393,9.807131,9.924286,-3.289241,6.109584,-3.608756,-3.232921,0.603801,9.943079,-0.257363,6.922824,9.607722,3.699163,9.567061,1.977389,-5.053391],[-6.795097,5.941757,-7.892651,-5.051827,9.892063,-8.031980,-4.226512,8.005075,4.746086,-1.851981,3.940580,-0.440061,2.930168,6.430357,-1.282022,-0.997805,2.824103,-7.959776,2.808656,-2.618260,1.291971,-4.758722,-5.635303,5.650992,1.830576,-5.402720,-1.103126,-4.133020,9.884560,-3.461368,4.428178,-8.487025,-3.274758,-3.108328,7.395233,3.919096,3.323429,-0.049560,9.466388,5.589437,0.881033,2.034523],[-0.113416,-0.538705,3.566997,-4.412795,8.225268,-9.020432,6.438273,4.237159,8.838136,-9.356655,7.615487,-0.894756,-0.841044,2.686478,7.282140,5.863634,-7.190391,2.962570,1.146589,-8.370510,-3.729794,-4.322849,1.619814,-5.985808,-1.900927,0.841914,-0.702696,-7.158694,6.930922,-5.277947,-6.230504,3.727462,0.332661,8.817327,-7.511388,0.483175,-4.375381,-3.526211,-8.655094,-3.736232,2.611128,-4.208816],[3.436681,7.292792,-8.919432,7.815129,1.361849,-5.008987,-7.304592,6.827707,7.225357,3.294343,1.753488,-8.169169,1.332204,-9.622792,-5.941797,-3.238015,-3.795465,4.212488,1.058863,0.799071,7.597882,-8.885645,9.401910,-6.015628,-9.550566,-6.708166,3.665481,1.112129,5.431647,-8.900469,-3.539269,1.225153,-2.989885,-8.433153,-3.298144,-8.634929,4.268664,7.584512,7.031185,1.607919,0.512532,4.145081],[-3.126543,7.264895,-6.368651,-6.118336,-1.715957,9.011987,-0.573753,0.902942,-6.551587,-8.874074,-3.202111,-0.309971,6.969893,9.229672,-0.811297,9.227220,-3.009409,-1.943894,-4.861740,0.719515,0.593803,2.629893,-0.472894,-8.793687,3.183315,-1.849065,-4.983986,5.961979,4.771369,-1.301585,6.755302,-5.625618,2.429509,-0.414786,3.689361,-2.533298,1.907227,-4.181131,-8.599401,-8.088795,7.174170,5.146606],[2.075431,8.771964,-3.252221,-3.581304,-1.053310,9.543977,-3.031681,8.952208,9.646228,-2.955484,-5.060115,4.380033,6.160455,-4.741245,-8.565299,-0.216996,-1.422157,-1.355007,9.562616,-8.223506,-7.450964,3.892678,9.193039,-0.651167,1.964948,5.354616,-8.597767,-2.172941,-3.942130,-4.860723,4.423493,7.197801,7.066275,-9.907107,-8.986880,-2.373149,-6.190436,1.260235,-4.013548,-1.893302,-0.202570,0.057657],[-4.109347,-7.188325,-3.968973,-3.258801,7.361725,6.676569,3.314603,-5.187479,-9.369571,-3.416741,-6.976010,6.625837,-2.116201,-1.585007,0.762415,9.088906,-8.706151,6.024097,-3.097876,-7.073466,7.916305,-7.470810,6.508795,-1.298193,1.212140,-9.814279,1.662059,2.155137,3.599590,-3.052665,2.163671,3.686091,-7.201672,5.136329,-1.103066,-7.661861,3.953408,-8.012258,3.465768,7.708790,-6.000551,2.046523],[4.792107,4.533080,-6.673351,4.601882,9.065604,4.087319,8.287056,-5.121286,-3.812235,0.902241,-1.659402,-7.968993,1.768112,-0.934264,1.544440,0.923388,-8.531042,-8.950055,-4.847960,2.813271,-0.205637,3.881233,2.623338,3.067875,8.535789,5.928745,-9.703441,1.000899,1.997294,0.445768,5.494274,1.733321,9.923484,1.813313,-3.645041,4.662703,3.188638,-7.111656,0.568441,6.990701,1.906546,-6.011283],[-1.446671,3.305415,9.185747,3.344315,2.907843,4.038866,-7.104137,-9.616031,6.184323,5.826555,5.112873,9.532628,2.748620,5.320574,8.259974,-2.134961,3.915618,-9.932003,8.719232,-1.256278,-5.504983,4.369733,-0.385027,1.250389,-3.428012,-7.365071,8.807401,-5.547184,-7.280897,2.129696,1.465886,-6.551258,7.600943,9.800336,-6.629758,5.588544,0.007628,7.738580,-9.781636,8.512626,3.865659,-7.944337],[8.439257,7.060921,-9.982323,-3.372544,-2.352562,7.131605,2.621051,-6.087021,-4.919542,-9.409144,0.840709,6.292242,8.467505,-5.009609,-5.611143,1.180104,4.313529,-9.508893,9.249895,0.524642,0.189200,2.004086,9.196023,-0.655649,3.595727,-2.203969,-3.023774,-8.417033,-4.257595,-0.303900,-0.841288,6.440974,-1.307484,4.322965,-5.573444,1.128666,2.536815,-4.152118,3.222683,-1.900436,0.220686,1.059738],[-6.348941,8.571063,-2.967318,-3.408655,5.423230,-8.773833,8.954552,1.898340,-1.277501,9.405029,9.800156,-7.833799,-6.079664,7.977214,2.913391,0.284468,6.987253,2.527965,-2.543813,-3.846698,8.714272,2.392161,-2.690117,-3.906463,7.456764,5.220639,2.760885,9.520722,-6.439316,8.433329,9.415450,-5.765418,-6.809833,-5.242957,5.691678,-8.802678,5.135562,1.685890,8.896435,-1.197393,3.939304,0.772165],[-7.225296,-1.072085,-0.650141,-3.696479,-3.621594,-1.739059,-6.209407,1.110690,6.572531,-5.566664,0.649691,-8.795848,7.845643,1.145162,-6.447682,1.848479,-6.902699,-5.946061,-6.390232,-0.804509,4.593060,9.457416,-4.245775,3.366960,-1.238057,-0.601411,8.881024,-5.743671,-8.291395,2.465637,6.975304,9.761724,-2.254980,-8.236027,-9.402808,5.024332,4.761098,-6.013011,1.916371,7.317315,1.027626,7.889984]], dtype = "float64")#candidate|4423|(12, 42)|const|float64
call_4422 = relay.TupleGetItem(func_2668_call(relay.reshape(call_4416.astype('int32'), [3, 15, 4]), relay.reshape(const_4423.astype('float64'), [504,]), ), 0)
call_4424 = relay.TupleGetItem(func_2672_call(relay.reshape(call_4416.astype('int32'), [3, 15, 4]), relay.reshape(const_4423.astype('float64'), [504,]), ), 0)
output = relay.Tuple([call_4405,call_4416,call_4422,const_4423,])
output2 = relay.Tuple([call_4406,call_4417,call_4424,const_4423,])
func_4442 = relay.Function([], output)
mod['func_4442'] = func_4442
mod = relay.transform.InferType()(mod)
mutated_mod['func_4442'] = func_4442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4442_call = mutated_mod.get_global_var('func_4442')
call_4443 = func_4442_call()
output = call_4443
func_4444 = relay.Function([], output)
mutated_mod['func_4444'] = func_4444
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4452 = relay.const([[[7.997673,-6.535733,0.477903,-0.625300,-4.497127,5.694774,-6.938017,-5.575878,1.174732,-4.889030,-0.161506,0.558618,6.126704],[-4.030656,6.754253,-3.374715,9.193509,-9.217762,-6.721785,-3.334887,7.258006,-1.924064,-4.596307,-9.256426,5.702461,-9.296678],[2.643370,3.505644,-2.193118,-0.438873,6.588140,-3.298407,7.436897,-4.498886,3.390358,-3.610650,-4.311770,3.293075,3.412149],[6.293146,-5.558735,-0.897077,4.165345,-7.951746,-3.359861,7.842445,6.973718,-5.829780,-2.026326,0.500141,3.962129,0.954186],[-2.709575,-9.483040,-4.265140,-9.683499,3.916389,5.906954,6.716058,-6.956307,-9.484709,6.726914,-5.927329,-4.959057,-5.703134]],[[-5.567446,9.485445,-2.062431,-2.796379,1.791167,-0.550763,-3.771415,2.209920,-4.560300,9.252227,-0.798582,8.956154,-1.885062],[5.263843,-6.325994,-6.528736,1.590830,-5.786533,8.021905,-0.297489,-4.868423,5.679859,9.266230,-4.017871,5.630066,-7.024957],[9.636034,5.006352,6.565955,-3.963957,9.665385,6.119263,-2.885806,-3.050028,-2.438494,-7.380633,8.989712,2.810517,-9.177144],[-4.038843,-0.958499,8.515149,-4.527420,9.744877,1.840493,-4.056837,-2.202847,8.828474,1.669724,-6.238968,8.983700,-1.786242],[-7.555946,1.027303,3.825926,-0.556387,-2.173370,7.030815,9.108816,9.797218,-2.244821,9.426266,6.071457,2.680895,-2.312716]],[[-8.498143,8.615413,-5.211125,7.877579,-5.376005,4.055716,-9.550160,1.459292,5.284765,-4.823446,9.583884,-5.514340,5.034375],[-2.076421,-7.390292,-0.502885,-6.749720,-1.265538,-1.060760,-2.813483,-6.435886,1.894420,5.635289,0.502245,9.006361,7.773881],[-5.960507,0.398460,0.545898,4.827890,-3.940576,9.145668,6.875553,8.510551,2.258770,-3.744264,-5.799744,-6.654977,-5.235155],[-1.653290,8.913744,8.301262,4.372132,4.448746,-6.523159,-4.545760,-4.270879,9.600803,3.522417,2.923482,-3.520048,6.035933],[-0.604794,-1.672840,3.770122,-0.692131,6.348631,-9.682540,9.864390,3.633293,-6.393268,-6.776191,7.715378,-4.041670,2.718297]],[[8.232854,-3.755181,-3.170317,-0.637198,5.715542,2.582442,-3.392145,9.124231,0.244910,-2.017344,-2.454945,-6.539045,-0.134695],[-7.374947,1.498003,-3.116944,4.844158,8.634167,2.058162,9.541683,4.808207,5.696569,6.686921,-8.592234,1.366416,1.861058],[-7.929075,-3.473124,-4.004256,9.965984,-2.034391,-8.242937,-2.469425,8.464684,-4.610686,3.620983,2.271924,9.094561,8.848139],[2.933935,2.956912,2.922332,2.794853,-1.141383,-4.568936,5.148527,7.292297,2.188815,7.468731,-5.657200,2.330270,4.475683],[-7.450346,3.175137,-0.669032,-7.534902,8.837020,5.155906,9.876038,-5.655329,-6.949702,0.924005,-6.073308,5.616433,9.442603]],[[9.325100,5.419229,-7.092935,4.566907,-5.727865,-5.292059,6.368287,-7.739190,-5.393432,-3.828536,9.239910,-4.487810,5.822157],[2.272595,-5.440201,-7.984179,5.286817,-7.697149,6.218209,9.009250,-3.442161,-8.284267,-1.635339,-8.879769,-6.798812,1.437191],[8.477453,-0.766789,-4.200543,-5.087382,6.370169,-5.037744,-6.990720,-6.493555,2.432019,4.704144,5.814703,7.770123,-3.156577],[6.442527,1.827085,1.836949,-7.329829,9.364901,5.438535,-9.360970,-3.673908,-9.884824,4.946343,-8.218654,-2.010889,-7.130875],[8.520188,9.982728,-8.075642,-3.038040,-1.220359,-4.113708,-0.554292,4.692661,8.974177,-4.667349,8.094305,5.512511,0.001114]]], dtype = "float32")#candidate|4452|(5, 5, 13)|const|float32
uop_4453 = relay.cosh(const_4452.astype('float32')) # shape=(5, 5, 13)
output = uop_4453
output2 = uop_4453
func_4455 = relay.Function([], output)
mod['func_4455'] = func_4455
mod = relay.transform.InferType()(mod)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4455_call = mutated_mod.get_global_var('func_4455')
call_4456 = func_4455_call()
output = call_4456
func_4457 = relay.Function([], output)
mutated_mod['func_4457'] = func_4457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_4489 = func_2250_call()
call_4490 = func_2250_call()
output = relay.Tuple([call_4489,])
output2 = relay.Tuple([call_4490,])
func_4501 = relay.Function([], output)
mod['func_4501'] = func_4501
mod = relay.transform.InferType()(mod)
output = func_4501()
func_4502 = relay.Function([], output)
mutated_mod['func_4502'] = func_4502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_4522 = func_1869_call()
call_4523 = func_1869_call()
output = relay.Tuple([call_4522,])
output2 = relay.Tuple([call_4523,])
func_4534 = relay.Function([], output)
mod['func_4534'] = func_4534
mod = relay.transform.InferType()(mod)
mutated_mod['func_4534'] = func_4534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4534_call = mutated_mod.get_global_var('func_4534')
call_4535 = func_4534_call()
output = call_4535
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4600 = relay.const([[[3.015971,-1.941569,8.647018,-7.540562,-8.867602,9.834446],[-5.705124,3.981244,0.246873,-7.753048,-7.385586,-8.833820],[-9.511254,4.919877,-5.392936,8.933204,8.873989,-0.504856],[-3.299382,3.275033,8.796176,-3.766003,8.139103,3.866182],[-3.255707,-1.390322,-2.475834,-7.371413,0.188709,9.169440],[-4.876668,4.776939,-0.550553,-0.524002,4.850986,8.946263]]], dtype = "float64")#candidate|4600|(1, 6, 6)|const|float64
uop_4601 = relay.atanh(const_4600.astype('float64')) # shape=(1, 6, 6)
func_2802_call = mod.get_global_var('func_2802')
func_2804_call = mutated_mod.get_global_var('func_2804')
call_4615 = func_2802_call()
call_4616 = func_2802_call()
output = relay.Tuple([uop_4601,call_4615,])
output2 = relay.Tuple([uop_4601,call_4616,])
func_4629 = relay.Function([], output)
mod['func_4629'] = func_4629
mod = relay.transform.InferType()(mod)
mutated_mod['func_4629'] = func_4629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mutated_mod.get_global_var('func_4629')
call_4630 = func_4629_call()
output = call_4630
func_4631 = relay.Function([], output)
mutated_mod['func_4631'] = func_4631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4655 = relay.var("var_4655", dtype = "float32", shape = ())#candidate|4655|()|var|float32
var_4656 = relay.var("var_4656", dtype = "float32", shape = (16, 1, 8))#candidate|4656|(16, 1, 8)|var|float32
bop_4657 = relay.divide(var_4655.astype('float32'), var_4656.astype('float32')) # shape=(16, 1, 8)
bop_4663 = relay.greater_equal(var_4656.astype('bool'), relay.reshape(bop_4657.astype('bool'), relay.shape_of(var_4656))) # shape=(16, 1, 8)
func_461_call = mod.get_global_var('func_461')
func_465_call = mutated_mod.get_global_var('func_465')
const_4673 = relay.const([-4,6,2,-1,-7,-10,-5,5,5,-9,6,-2,8,-5,4,8,6,4,-7,-8,-9,9,-5,-4,-6,5,-4,4,-8,-9,-2,10,10,-6,1,9,-2,6,7,-6,-2,6,10,7,6,10,-10,5,-4,-9,5,-7,-10,-2,4,9,-1,-1,2,6,-4,7,-7,-6,-3,8,-4,-5,-1,-1], dtype = "uint32")#candidate|4673|(70,)|const|uint32
var_4674 = relay.var("var_4674", dtype = "uint64", shape = (98,))#candidate|4674|(98,)|var|uint64
call_4672 = relay.TupleGetItem(func_461_call(relay.reshape(const_4673.astype('uint32'), [7, 5, 2]), relay.reshape(const_4673.astype('uint32'), [7, 5, 2]), relay.reshape(var_4674.astype('uint64'), [98,]), ), 1)
call_4675 = relay.TupleGetItem(func_465_call(relay.reshape(const_4673.astype('uint32'), [7, 5, 2]), relay.reshape(const_4673.astype('uint32'), [7, 5, 2]), relay.reshape(var_4674.astype('uint64'), [98,]), ), 1)
uop_4680 = relay.acosh(var_4656.astype('float64')) # shape=(16, 1, 8)
func_4455_call = mod.get_global_var('func_4455')
func_4457_call = mutated_mod.get_global_var('func_4457')
call_4689 = func_4455_call()
call_4690 = func_4455_call()
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_4701 = relay.TupleGetItem(func_961_call(), 0)
call_4702 = relay.TupleGetItem(func_962_call(), 0)
func_4501_call = mod.get_global_var('func_4501')
func_4502_call = mutated_mod.get_global_var('func_4502')
call_4720 = relay.TupleGetItem(func_4501_call(), 0)
call_4721 = relay.TupleGetItem(func_4502_call(), 0)
func_2802_call = mod.get_global_var('func_2802')
func_2804_call = mutated_mod.get_global_var('func_2804')
call_4722 = func_2802_call()
call_4723 = func_2802_call()
output = relay.Tuple([bop_4663,call_4672,const_4673,var_4674,uop_4680,call_4689,call_4701,call_4720,call_4722,])
output2 = relay.Tuple([bop_4663,call_4675,const_4673,var_4674,uop_4680,call_4690,call_4702,call_4721,call_4723,])
func_4724 = relay.Function([var_4655,var_4656,var_4674,], output)
mod['func_4724'] = func_4724
mod = relay.transform.InferType()(mod)
var_4725 = relay.var("var_4725", dtype = "float32", shape = ())#candidate|4725|()|var|float32
var_4726 = relay.var("var_4726", dtype = "float32", shape = (16, 1, 8))#candidate|4726|(16, 1, 8)|var|float32
var_4727 = relay.var("var_4727", dtype = "uint64", shape = (98,))#candidate|4727|(98,)|var|uint64
output = func_4724(var_4725,var_4726,var_4727,)
func_4728 = relay.Function([var_4725,var_4726,var_4727,], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_4732 = relay.TupleGetItem(func_4629_call(), 1)
call_4733 = relay.TupleGetItem(func_4631_call(), 1)
uop_4734 = relay.log(call_4732.astype('float64')) # shape=(12, 50)
uop_4736 = relay.log(call_4733.astype('float64')) # shape=(12, 50)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_4739 = func_1869_call()
call_4740 = func_1869_call()
output = relay.Tuple([uop_4734,call_4739,])
output2 = relay.Tuple([uop_4736,call_4740,])
func_4758 = relay.Function([], output)
mod['func_4758'] = func_4758
mod = relay.transform.InferType()(mod)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mutated_mod.get_global_var('func_4758')
call_4759 = func_4758_call()
output = call_4759
func_4760 = relay.Function([], output)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3714_call = mod.get_global_var('func_3714')
func_3716_call = mutated_mod.get_global_var('func_3716')
call_4922 = func_3714_call()
call_4923 = func_3714_call()
func_908_call = mod.get_global_var('func_908')
func_912_call = mutated_mod.get_global_var('func_912')
var_4929 = relay.var("var_4929", dtype = "float32", shape = (60, 10))#candidate|4929|(60, 10)|var|float32
const_4930 = relay.const([[-1.217719],[-4.966173],[1.117874],[4.434446],[0.839990],[2.985053],[5.653064],[3.081637],[0.765575],[8.818860],[-0.111392],[4.910543],[-0.429050],[-6.289025],[2.671571],[-2.625019],[-9.970014],[-1.211883],[-0.451592],[6.588041],[9.358716],[1.809201],[-6.995873],[-4.660501],[-8.974380],[4.297186],[3.146718],[3.027165],[5.732049],[-7.576562],[3.948756],[9.789165],[-4.139835],[4.025054],[1.287863],[-7.099659],[-3.243771],[-1.841805],[-2.888100],[-3.715624],[-1.759155],[-3.215429],[-6.188672],[8.281998],[6.441380],[8.722162],[-9.712169],[9.139156],[-5.287677],[7.248215],[1.324461],[-5.987611],[7.297428],[-1.248494],[3.765441],[-7.201990],[-3.201905],[3.694782],[-2.878482],[3.364037],[2.878808],[-3.496845],[2.099362],[-6.728303],[0.240529],[9.525825],[1.996415],[-8.788625],[-7.285694],[-9.873006],[9.257975],[9.417742],[2.722610],[9.442578],[9.628964],[-8.712027],[5.623529],[-4.200121],[-0.822958],[-2.062849],[-6.126680],[-6.354195],[6.603730],[-9.427105],[-7.262039],[-9.501333],[9.153312],[0.575725],[-2.331062],[7.687508],[1.981549],[-1.214375],[-3.236858],[9.521745],[6.685925],[-8.711912],[-1.900980],[7.672332],[3.892433],[5.616277],[0.040614],[-2.566744],[-2.824557],[1.216101],[-7.422738],[-5.911660],[-5.611144],[-4.087191],[-6.110187],[1.614162],[8.134702],[7.981215],[7.830197],[0.276985],[6.753989],[-7.410242],[-4.822541],[6.995876],[-3.600739],[-4.036273],[7.410444],[8.169072],[3.487100],[7.397012],[0.019986],[-2.366538],[-8.604411],[-3.044497],[-8.311200],[6.564413],[4.988334],[-5.979636],[-8.725894],[-4.088235],[4.974590],[4.522007],[5.540648],[-7.997710],[-9.272473],[-8.521716],[1.622512],[-4.386943],[5.004122],[3.979756],[-0.257980],[4.246096],[-3.977114],[-3.184245],[8.248386],[4.852863],[4.645081],[-7.223903],[0.695281],[7.787164],[-2.652514],[-2.057500],[-8.758621],[5.037641],[2.578173],[-7.764285],[0.202879],[2.988370],[2.459021],[-8.681957],[-3.800715],[8.897686],[-1.753789],[6.627476],[2.540355],[5.997003],[-1.915925],[2.718657],[-1.360698],[-7.224135],[2.776538],[-7.525617],[-6.712039],[-1.742882],[4.735688],[0.855539],[-4.922336],[0.836569],[-4.481436],[7.967549],[2.349323],[7.120145],[-7.136212],[7.065172],[5.196389],[-1.732500],[-4.736330],[-6.591571],[5.380673],[-4.755600],[0.925782],[-4.399767],[1.243365],[7.147756],[-9.915963],[3.117326],[6.247102],[-4.257797],[0.976032],[0.064735],[7.729108],[7.199978],[-6.656389],[8.252589],[-9.150372],[-2.736257],[5.139831],[3.037169],[-7.289087],[-0.785186],[4.636943],[-3.698444],[-1.144096],[-8.117592],[-9.309285],[-3.362368],[-1.339874],[2.458612],[2.975438],[-4.446902],[5.889374],[-1.028548],[7.986742],[3.731938],[-7.803588],[4.568234],[8.423659],[-6.637552],[-1.529937],[5.300487],[-7.148139],[-8.975645],[4.019181],[2.188292],[-5.849165],[-1.689040],[-5.702932],[-2.319649],[-4.119897],[9.942765],[8.903592],[1.831005],[3.500575],[-8.981395],[-3.315818],[-0.815882],[-9.556396],[9.671161],[3.578129],[-2.321836],[-5.460420],[3.438775],[9.857066],[2.627688],[8.494278],[-2.730059],[1.788056],[2.800846],[-6.767267],[-4.605390],[6.969551],[4.980691],[9.384413],[5.426008],[-8.070078],[8.093011],[-4.483841],[3.435430],[-1.183674],[2.872673],[-0.906967],[7.977748],[6.890753],[-5.632779],[-6.857290],[0.731259],[4.732348],[6.338448],[8.842634],[5.551639],[7.205738],[9.396287],[8.164333],[0.141150],[1.231114],[2.859369],[0.412483],[9.778153],[6.746895],[-8.491381],[-1.657730],[4.708513],[-7.348565],[-1.988210],[2.919573],[7.398711],[-0.109185],[-9.557338],[-6.097144],[-8.765113],[0.617011],[5.211213],[-1.669548],[2.360101],[-6.782791],[9.802891],[5.993044],[-7.857375],[-2.891336],[-2.724022],[8.215350],[-2.739675],[-4.679963],[0.583096],[-7.555119],[-7.894988],[-5.283612],[-7.847078],[-6.531751],[-1.686928],[6.016336],[7.707527],[1.319287],[4.297802],[-7.029055],[9.502739],[7.207886],[-8.529052],[1.963885],[-5.646285],[7.885609],[6.093880],[-7.319484],[-9.396809],[3.634775],[1.801275],[-4.061176],[-8.792121],[5.438360],[5.007939],[3.711401],[2.616844],[-3.619288],[-9.985968],[9.514087],[-7.574408],[0.190915],[-9.137996],[8.921480],[-0.044171],[-8.022820],[-4.460062],[-2.626628],[-0.263562],[-6.883739],[7.221901],[-7.738089],[-3.731793],[-5.143582],[-7.633664],[-3.013235],[-8.776030],[-8.198186],[2.507497],[8.255916],[4.428542],[-4.249725],[4.884644],[-4.500556],[-8.803437],[6.726219],[-2.646145],[-8.838718],[6.043614],[7.740658],[-3.870933],[-9.140825],[8.514082],[-2.928668],[-0.652629],[-5.362144],[5.046611],[7.528691],[0.070001],[-5.867325],[-4.805006],[6.208163],[7.950058],[-5.878937],[8.808904],[3.741380],[4.042590],[-2.104862],[-9.590621],[3.986908],[4.680067],[-7.502898],[-6.405399],[1.987424],[3.820845],[0.523440],[2.615892],[-3.183759],[-2.942018],[9.717753],[-3.595725],[-2.908022],[-5.142477],[-9.237713],[8.292725],[-8.429642],[3.989205],[3.807512],[-7.049296],[0.753015],[-0.572714],[-7.711130],[-7.787043],[-8.074639],[1.875415],[-6.342776],[-4.158238],[9.177898],[4.286049],[-9.082297],[0.721373],[5.528210],[3.032778],[8.924998],[6.417022],[-5.281653],[4.315447],[-5.904789],[4.665147],[7.071493],[-9.353789],[4.606432],[-0.540262],[-5.353811],[-1.734322],[-0.507840],[6.607834],[1.353078],[-8.344177],[-3.106613],[9.843212],[8.872896],[1.616315],[-4.510232],[-9.801296],[0.768914],[7.711159],[-5.322742],[7.544586],[-5.340262],[7.999007],[-9.398626],[-9.909122],[8.863962],[-5.886885],[9.777848],[-5.937777],[-2.057254],[-8.869018],[7.083008],[-5.773872],[8.857677],[6.697832],[5.005469],[-4.955540],[-6.040478],[-6.385745],[-9.558361],[-3.540127],[6.957841],[-7.983078],[5.643406],[0.328660],[-9.631386],[-2.757024],[4.967796],[1.102804],[5.825229],[-8.918598],[1.179150],[-6.219550],[-6.856826],[-9.954196],[9.448270],[-6.080542],[6.449728],[1.655873],[-1.867128],[5.622798],[-1.185322],[-5.457366],[-6.867488],[5.608778],[-2.082200],[0.453118],[-4.156620],[1.499421],[-7.915345],[-5.475901],[1.946782],[6.873656],[8.949778],[0.324922],[3.738142],[-9.163703],[-0.762737],[3.069010],[-1.107986],[-4.318829],[-8.137098],[4.974670],[8.753328],[2.552622],[-3.186765],[-4.962778],[2.616577],[2.503101],[-5.401533],[-4.605970],[6.653501],[-8.006481],[6.968807],[-1.996296],[-0.348123],[-7.852656],[-6.712950],[6.510050],[-0.075964],[-7.095771],[-1.767598],[-9.717797],[-2.815334],[-0.736004],[-5.655432],[-6.594648],[-2.369111],[-5.327005],[5.301119],[9.092812],[1.726807],[-1.522025],[5.058856],[-8.532211],[0.963992],[7.359308],[4.142135],[4.926937],[1.057503],[-0.768164],[-5.432642],[7.290081],[1.876023],[-0.448365],[-0.140568],[-3.059032],[2.141041],[-5.208182],[5.691628],[-5.149479],[7.919044],[-6.129639],[-9.803247],[-5.737836],[-7.564781],[4.739922],[5.421108],[0.213633],[-3.189615],[0.220822],[5.692922],[8.594697],[1.230422],[-2.136800],[-9.813831],[5.251771],[-7.314513],[-5.600610],[0.193862],[-8.654048],[6.267377],[-0.701465],[-0.133995],[-5.149051],[7.217591],[5.813570],[3.932075],[9.686682],[-8.975420],[8.292841],[-9.434593],[-5.310380],[7.547058],[8.771530],[3.635798],[-7.923219],[-6.205200],[-1.223906],[-6.766736],[6.288075],[-8.656915],[-9.692358],[6.472750],[-2.929077],[0.185273],[-2.245027],[-7.694980],[-4.773578],[9.832042],[-1.650572],[5.474924],[-8.945508],[5.275423],[-8.881529],[8.180625],[5.240582],[3.368471],[8.598234],[5.854910],[-7.772586],[-9.671428],[3.122449],[-0.098048],[-2.050683],[5.592329],[-9.388213],[0.885829],[-4.049633],[8.426359],[-4.089169],[5.508724],[2.483391],[1.947914],[0.952508],[-4.443738],[-4.849106],[8.177860],[-3.303006],[6.269638],[1.518165]], dtype = "float64")#candidate|4930|(648, 1)|const|float64
call_4928 = relay.TupleGetItem(func_908_call(relay.reshape(var_4929.astype('float32'), [10, 4, 15]), relay.reshape(const_4930.astype('float64'), [648,]), relay.reshape(var_4929.astype('float32'), [10, 4, 15]), ), 3)
call_4931 = relay.TupleGetItem(func_912_call(relay.reshape(var_4929.astype('float32'), [10, 4, 15]), relay.reshape(const_4930.astype('float64'), [648,]), relay.reshape(var_4929.astype('float32'), [10, 4, 15]), ), 3)
uop_4938 = relay.sinh(const_4930.astype('float32')) # shape=(648, 1)
func_2816_call = mod.get_global_var('func_2816')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_4941 = relay.TupleGetItem(func_2816_call(), 0)
call_4942 = relay.TupleGetItem(func_2818_call(), 0)
uop_4944 = relay.acosh(uop_4938.astype('float32')) # shape=(648, 1)
output = relay.Tuple([call_4922,call_4928,var_4929,call_4941,uop_4944,])
output2 = relay.Tuple([call_4923,call_4931,var_4929,call_4942,uop_4944,])
func_4949 = relay.Function([var_4929,], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4950 = relay.var("var_4950", dtype = "float32", shape = (60, 10))#candidate|4950|(60, 10)|var|float32
func_4949_call = mutated_mod.get_global_var('func_4949')
call_4951 = func_4949_call(var_4950)
output = call_4951
func_4952 = relay.Function([var_4950], output)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_5039 = relay.TupleGetItem(func_2510_call(), 0)
call_5040 = relay.TupleGetItem(func_2512_call(), 0)
func_741_call = mod.get_global_var('func_741')
func_744_call = mutated_mod.get_global_var('func_744')
const_5061 = relay.const([[2.975576,2.383751,-8.069208,-1.714625,2.028877,-2.586644,6.159132,-0.987256,0.239384,7.970304,3.387227,4.155502,-6.732266,-5.771567,-5.952204,-0.472237,1.970651,7.116693,0.976923,9.256413,3.670284,2.723485,-9.057369,8.902876,-8.276668,-0.620758,-0.660558,1.716503,-3.236299,0.923934,7.043543,-8.155164,1.438841,-2.217304,-5.022239,2.865705,3.186081,-0.218346,9.580565,7.878259,-3.211732,0.369303,-4.318896,-4.493972,-2.329076,0.319038,2.294098,9.339339,5.270462,5.356219,6.783866,5.671552,1.745701,-9.454280,-1.793747,-3.470709,6.889683,5.119863,-8.319174,-6.406074,-3.538663,-9.135855,-8.941961,-1.052108,7.646739,5.399968,9.236262,-0.504724,-6.829761,3.948676,-3.408801,-8.654551,0.656246,1.100241,6.193359,9.833603,3.972822,4.965199,1.587154,5.970933,7.182493,7.674573,-3.493280,4.788439,6.751961,5.478675,8.234615,1.913954,5.456649,-7.406542,6.597078,-4.765548,-4.524172,-3.131450,-6.296043,-7.364333,-5.528109,-6.591706,6.683306,7.194816,-7.971875,3.214726,-4.744801,-2.315581,9.449216,-7.107739,-1.514094,-4.791684,-6.561616,-1.192094,-8.698147,-1.068954,9.821265,9.905774,5.368824,3.869464,1.083061,5.162043,4.953268,-7.593278,-2.494882,5.455980,3.390710,8.197579,-6.482963,-9.267081,7.554245,9.433254,3.707399,4.539912]], dtype = "float32")#candidate|5061|(1, 130)|const|float32
call_5060 = relay.TupleGetItem(func_741_call(relay.reshape(const_5061.astype('float32'), [1, 10, 13])), 1)
call_5062 = relay.TupleGetItem(func_744_call(relay.reshape(const_5061.astype('float32'), [1, 10, 13])), 1)
const_5067 = relay.const([[-3.691217,5.484066,0.399596,7.320980,-8.404735,3.820533,8.398180,5.626567,5.107387,1.991985,9.978662,3.766809,2.949443,2.434266,4.282841,-5.729295,-9.979433,8.344381,-5.715358,2.091050,6.469245,-2.081803,-9.841834,2.891838,7.286049,-4.298116,-4.805198,-2.262964,-4.549949,-6.973437,-1.483269,3.187786,-0.687306,-1.101809,8.862064,-0.730026,-1.217157,6.910827,-7.504781,1.725901,2.947772,-9.726822,0.516377,5.822349,-5.337894,9.276373,5.129604,2.097507,-9.891647,-9.564595,9.163324,-2.764243,2.478875,7.888070,-6.718418,-7.715869,-1.284190,8.576043,7.303815,0.654324,-8.629154,-6.729756,2.154450,-0.843934,-6.398152,5.426323,7.356035,2.947367,0.307341,-0.017341,1.149428,-3.475915,-5.022477,-0.666824,-5.562920,5.161206,-4.498466,-1.750896,-0.872424,0.731370,2.929840,-7.969151,-3.472303,-6.900635,-9.528509,5.783545,5.614220,7.581570,-1.427259,4.167953,3.906376,3.504556,-0.004662,0.267288,-7.659146,3.468721,9.328428,-0.070858,-5.813956,-1.266529,-2.489889,-2.052456,3.416207,2.762275,4.756099,-0.269589,0.693308,3.513596,-6.865729,-0.239582,4.657379,-2.734677,-5.288413,2.183985,3.287625,2.702524,4.604018,0.132679,-3.339545,-9.857674,5.005829,-7.446040,7.432694,6.384991,9.189827,-1.895886,6.483401,9.820362,-9.940561,-1.089215],[-1.294855,9.202798,-2.554913,-0.871193,2.278168,-0.859049,-4.619193,0.798468,-6.618814,8.306661,5.873422,4.375359,-7.697811,-2.303651,0.001088,6.818998,-6.170710,1.849403,1.225837,6.969594,2.320745,-8.295436,0.230264,6.271067,-0.553331,9.833891,-8.190785,-4.207976,9.307420,9.926951,-7.722250,5.386790,4.783331,6.011589,-1.112356,8.254336,-6.533761,0.652282,-7.507973,-7.806060,5.689812,-4.824195,-1.238415,8.188262,5.240112,-4.824551,9.640822,-7.099519,-2.673231,8.786256,7.063252,-4.286349,-2.976523,9.611333,-1.237684,6.226800,4.948748,-1.582909,5.915165,9.907296,-4.952015,-8.232096,7.905071,4.402925,-0.590345,0.186459,5.819357,0.214444,9.638849,-1.429829,-7.068172,-0.313392,1.649656,9.753156,-3.023897,5.222510,-8.182238,-1.418594,0.639758,-6.807230,-9.105324,8.652690,3.296138,-6.014204,3.950078,9.204557,-0.342312,9.374008,-5.176716,-6.205721,0.285328,8.676691,2.539913,-2.908624,9.298371,-0.687426,-1.773275,-3.911445,8.496091,-4.130096,9.098865,-0.946062,3.340555,-3.602689,3.700595,-1.560209,-8.400506,-9.349486,9.759469,-6.637787,5.449195,3.282015,-2.881888,-6.333187,-4.447994,-0.862081,-3.416149,5.647778,-0.878382,8.948373,6.520061,2.095474,9.005954,4.827311,-5.386111,-5.720852,1.526706,3.775117,3.384144,1.139237],[-6.884012,7.542356,-0.366995,2.104269,-7.626139,-2.124122,-8.960097,-1.176492,-8.022540,3.068145,3.614990,-2.217072,6.694951,2.976718,5.554683,-7.081548,-7.985202,-8.247224,-3.087576,-5.237188,-9.012453,-6.331798,-9.695742,1.146534,7.337532,1.112027,-4.676450,1.216429,5.789536,-9.218020,4.207074,-3.214897,-5.229079,-4.919760,-4.962959,-8.182202,-5.778589,-3.999389,1.435481,9.655892,-7.620782,4.691056,-3.935404,-8.156605,3.671055,0.251621,4.342306,6.125866,-4.352223,-3.621355,-5.586299,-8.545305,-1.325209,6.860920,-1.949393,-4.979811,1.842678,9.837444,-7.990702,8.346892,-6.254329,-0.372274,-7.444529,0.115307,3.243902,-0.025351,-7.810177,-8.026938,3.793975,-0.136565,-1.456814,-2.201051,8.572160,-2.661539,2.326010,0.240449,-3.891385,9.351253,6.499291,2.965555,-7.107248,-7.834575,-7.950523,9.418753,-4.455365,2.800564,-7.572896,-4.803303,7.246009,5.265954,-9.740837,-6.239933,-9.296378,-9.093500,9.225430,2.027786,6.747136,-9.733391,-9.835588,4.254472,-2.316724,-3.005116,-5.792788,-1.114565,1.918452,-5.423924,-7.253918,-8.990663,-9.601167,6.564650,-6.732966,5.743885,-5.799354,-5.405454,-0.596056,-5.039576,-6.900037,5.642223,4.174890,0.171170,-0.799955,2.212864,-6.661301,1.901263,-7.108089,-0.685499,2.082091,-6.358577,-6.844715,9.321473],[-7.504944,2.984440,-6.154834,8.753928,-4.461848,-3.061615,-6.989846,5.465609,3.773631,4.807160,9.898075,-5.465481,5.228118,2.572127,0.216019,-6.989231,-0.470842,9.768105,4.379481,-2.070339,7.348711,-2.948228,-2.121232,-2.547001,-9.825974,6.635432,-4.556205,3.590077,-2.189174,0.899554,7.579386,9.028224,4.680088,-9.156078,4.849834,-7.499945,5.762513,-7.084862,-1.998262,3.169223,-8.900109,4.160039,-2.879687,1.162464,1.249622,4.560930,-7.877407,-6.906383,2.944283,-3.558102,6.203793,6.671924,3.241588,5.986522,-3.123125,4.087999,7.753750,8.180333,8.229934,1.356652,6.099139,7.208360,9.049585,7.566278,-8.626215,-2.459265,-9.736682,-0.511724,8.046015,-8.329336,-2.562123,2.286776,-0.565670,4.323019,1.366068,-2.101745,2.785110,-7.872634,4.887436,0.048314,-8.690261,9.935169,4.700353,-6.763006,2.051491,9.515463,-6.295197,-4.014310,7.411853,-3.833991,-7.548173,-8.887230,-0.092946,-1.816783,-7.827608,5.273739,6.262928,-5.957887,-0.134334,-4.845599,3.412784,3.348989,-4.038894,-1.720554,-3.795148,-5.182773,6.410254,-9.144879,2.214511,5.027669,2.185569,-0.337992,2.074353,3.779140,-4.141054,-6.895275,4.842207,4.418533,2.505546,-3.476445,1.607990,-5.684798,3.836706,-4.932221,6.777549,-5.825106,5.175850,-7.118425,6.779182,-2.392154],[9.014900,0.625527,2.346448,-0.544497,-3.606742,-4.924510,6.346375,-3.734288,6.964943,9.424253,-5.166551,4.018106,3.793654,3.398138,-7.952868,-0.223708,-5.848521,-5.688915,-6.826559,-5.766741,9.492006,-4.213413,1.024305,1.328101,-8.549918,6.971168,0.925869,-1.589993,-6.411089,4.788854,9.549619,-9.995947,-7.013142,6.420119,9.299347,4.064931,-4.855033,1.040661,0.123965,8.781322,-4.143171,-3.358586,7.178291,-8.818049,-8.343850,-9.059962,7.857310,1.154248,-4.956850,-1.679300,-6.685256,-5.488827,-1.360466,-9.262858,8.962594,3.465969,6.361139,8.932813,-3.674382,-4.356026,5.117832,-7.827207,-9.385924,-7.180784,1.742069,-7.073017,8.125163,-8.164976,0.598158,1.572989,-8.115518,-6.063774,-9.713665,5.708605,5.362756,-1.523534,-7.179345,9.778207,-6.437993,1.762651,-7.254512,-4.422309,7.633853,0.980319,9.800325,7.695694,0.905603,9.320740,5.641133,-0.890900,0.667183,3.992586,-5.259131,-0.167597,9.079247,-3.571896,7.796094,8.612238,5.499209,7.856504,6.843403,7.409688,-5.792857,-8.529897,1.009023,-8.430830,1.850151,-2.712620,-8.354977,9.301240,1.538408,-2.298934,-0.909984,9.319870,-6.600703,-4.662801,1.271008,1.910020,9.374496,2.510592,-7.865795,2.107794,6.964135,1.249045,-9.181280,6.903397,-4.635641,-4.911014,4.947609,2.895931],[8.317831,8.145541,1.051857,-3.882152,8.088462,8.922299,-7.094247,8.239266,-6.258179,8.283610,3.268629,-2.239372,-7.846905,-7.663305,-9.128697,-9.013016,-1.513326,-2.669513,-6.256726,-6.519536,-0.841818,9.597717,-9.350347,3.380287,-6.810414,3.856827,4.996517,9.023946,-9.000947,-3.128184,5.141470,-9.394546,-1.452982,4.191366,-0.251038,-2.907745,4.443422,5.828964,7.174019,4.330000,2.578171,0.474727,-3.574602,4.715142,5.286507,-9.712695,-7.073911,-7.182513,4.931774,1.796762,7.811006,6.584647,0.413361,-0.975756,6.072467,-1.106738,-6.717929,8.976854,1.107696,4.408629,-1.461852,5.878289,8.688557,-4.828118,-6.399962,-3.931990,6.588115,-8.094884,-0.814770,8.208783,-7.985382,-6.085582,-6.657789,-5.631847,-2.893345,-5.826873,4.295321,9.256250,5.125089,8.760556,9.006853,7.250809,9.222817,-6.459032,-2.409025,5.224353,3.305888,7.961642,-2.834088,8.543523,7.128338,9.719619,-1.018148,1.356360,-8.775528,8.412861,-6.675526,2.765425,-7.672437,2.042460,8.130784,-5.094320,0.472500,-5.904195,8.490382,-3.052547,9.275474,8.871605,4.337789,3.224797,5.648890,1.641373,1.416371,-8.552901,-2.015609,-7.950542,-4.365607,7.744870,-6.134798,7.700917,4.179302,0.893544,-9.775600,-0.655206,3.119782,7.029845,-4.336459,4.149114,7.154353,-5.317801],[9.343630,-7.718028,7.597423,6.637940,8.629280,6.122131,2.405984,-6.942298,0.442245,9.773202,-5.334307,7.696110,3.479863,6.989758,-7.537349,0.694082,-8.694511,-6.745996,8.512827,-9.441943,-6.107333,2.249689,-5.427109,5.669875,6.875109,-3.504693,-7.780217,-7.940846,-6.913529,-0.931742,7.337985,8.974523,1.985006,1.231889,9.796250,-7.436982,7.008794,7.765647,4.880570,8.970268,1.005372,-4.455182,-9.200659,-4.234196,-5.880400,0.528362,-3.493423,-5.957107,-8.770587,-2.663048,0.233643,-7.947037,-1.376711,-4.607239,-4.170165,-8.130609,8.515862,1.623368,-8.379252,9.353291,2.725793,-5.854241,1.577829,9.486093,8.050101,5.521163,-9.626086,8.009699,-2.256059,-8.243408,-8.404191,-4.470794,-4.306223,6.255398,4.861443,4.954615,2.242745,-3.746623,-5.333197,6.135097,7.893842,-4.325776,-3.586273,5.488042,2.817837,3.097887,-8.648209,-1.783502,-6.707245,5.273677,-2.516768,-3.916152,5.863233,-0.472691,-0.626953,2.540801,-8.515003,-1.302458,1.788856,7.461510,0.082709,-2.207686,4.244352,-0.578911,-7.894360,2.205549,6.777189,5.046761,7.323449,-2.403284,4.058433,3.113583,-8.390469,-7.167182,5.563618,-2.314649,-8.185959,9.321709,1.782652,7.795008,2.600451,-6.423620,-9.963357,8.015381,6.179332,-2.297689,5.492217,0.863374,0.616883,-1.116207],[9.160101,4.116003,8.632833,2.453699,8.071608,3.445377,-1.855841,6.938127,6.293891,-0.605807,-1.170627,2.334575,-9.535086,5.971000,-1.658245,1.871276,5.498984,4.308208,1.623242,9.467856,-2.204405,3.985666,6.951835,1.306049,-3.143668,0.877132,-3.097625,-1.086491,8.750140,-6.159255,2.329747,-5.527307,9.233467,-3.831696,-7.820288,1.585461,-9.914627,0.495118,7.714290,-0.658575,-7.265372,-3.336859,-9.762052,-7.926694,0.368244,6.592930,-4.660704,1.232132,4.305595,-8.202016,0.316019,-3.437133,-1.765131,2.901266,3.627628,7.119055,-5.357675,-2.064426,8.301710,-6.568241,-6.295949,8.121111,9.649251,-1.163936,-3.275673,9.755624,-0.785863,1.290747,0.214345,-0.674057,-2.135408,8.061226,2.952927,7.052317,-2.550809,8.850592,3.535944,0.604089,9.531152,-7.868035,-2.948434,-6.646262,5.706638,9.895366,-0.855585,6.169837,-0.075477,3.348068,5.007529,-2.109229,0.469950,-1.949014,-5.970108,4.628327,0.224994,-7.256338,5.970825,-8.642451,-0.334237,-0.821913,6.210775,-5.278257,-6.855857,9.878526,-5.976553,6.467389,-8.440209,4.468817,1.119234,-9.103975,-5.320764,-6.831973,7.889141,-7.746587,-3.529734,3.989003,0.778632,7.581472,1.116777,9.891164,-1.455553,1.070930,-6.251746,-1.329891,-8.105121,-9.347424,2.107484,-4.775012,2.189832,-6.273919],[0.927028,9.569642,5.729405,-0.348174,5.645692,4.292813,-6.188258,-2.522137,6.081927,-6.062688,-0.461126,-8.198382,1.352099,-8.791180,7.216813,5.263070,-9.308076,5.127625,5.327342,0.282607,5.576899,6.971328,7.233839,-9.409083,-6.032180,-0.129099,4.397069,-3.441741,-9.795156,5.040828,1.675871,-7.869273,4.068141,-8.187548,-4.599085,-8.229780,-5.949367,2.114254,3.313544,-7.622424,2.202298,-5.460137,4.204747,4.861868,-4.076370,9.971263,9.715002,9.419775,-0.909215,-9.627252,0.058496,-2.307453,-4.217075,-2.274570,-9.187732,4.636909,1.914063,-8.077323,-7.579891,-9.242672,7.686527,-6.688834,-9.126089,5.191320,7.131311,5.237160,-3.006663,-3.818522,5.558407,7.922073,3.287899,4.905048,-6.252895,2.124755,-3.299674,9.335821,-5.895412,-4.290188,-4.319397,0.497469,1.904001,-5.738592,-4.961722,-5.084693,3.036863,6.047417,-8.253313,-9.405127,3.703970,1.551715,8.015728,4.098406,2.116047,-2.791750,4.530658,5.111992,-3.501857,3.047442,8.852955,6.982551,3.480871,4.362635,4.610416,-0.724561,-3.434000,-8.572692,2.450269,3.561718,-3.210539,-4.356554,0.914852,-6.270024,8.084910,-6.176625,-2.506237,-8.277080,1.735677,5.745484,0.975364,1.100422,-8.528918,9.137155,8.842172,-0.839422,3.495229,2.794318,-9.023954,-1.419922,9.962087,-8.062729],[-6.376917,6.012195,9.075152,1.437312,7.061715,-1.426701,-4.464545,2.653988,-8.569327,6.711879,-3.383385,-8.544816,9.858867,-3.065015,4.968497,-6.943092,7.094727,5.923889,-6.271121,8.878091,8.026882,9.176954,-2.168329,8.851708,-4.278466,-3.018398,-8.918368,-7.328416,1.054288,-2.091025,2.740801,0.159290,1.490092,2.774295,1.846274,8.186753,-8.355632,-9.177711,7.843291,3.289597,9.127005,-9.492510,-1.482052,9.154717,9.718704,6.706572,-0.723143,-7.385480,1.793906,5.485718,-0.797691,-2.343360,-8.177501,2.946814,-0.444732,3.732206,-6.178142,8.779424,-9.089319,2.548063,7.385713,1.264168,2.626814,9.987839,6.217857,8.518345,0.266129,3.888348,-9.908355,6.577684,9.305033,-3.274465,-5.052573,9.088294,-6.634995,-4.164819,1.540055,1.985925,7.233022,5.895824,-7.230882,6.824273,-5.258856,7.514739,0.761868,-2.226017,5.214772,9.565203,-1.670023,3.685145,4.715118,-7.381599,3.641493,3.170927,-0.144993,5.021711,8.160424,-1.583025,2.045452,-2.567337,-9.040385,-0.470096,-9.051910,1.822917,-4.983093,9.409162,9.064608,-9.278150,-3.491295,4.669085,-4.522997,9.153547,6.798430,-7.305917,5.367861,-7.971247,7.010253,7.827602,-4.759349,-6.817518,2.503524,-0.728464,-5.210639,7.946601,-9.074158,2.466277,-6.490624,-5.527854,2.147696,-0.323661],[0.898377,-9.461225,4.295324,-1.944775,2.207671,-6.758305,7.998623,9.354255,4.789172,-3.771873,6.398949,5.040401,-4.321133,-1.401782,-2.925483,-4.600060,2.905199,-6.940968,-4.902195,-8.428809,4.059895,7.224258,4.703332,-6.950654,6.488796,-4.977832,3.251684,-3.782907,0.434784,7.800912,-9.995066,2.613026,-1.042431,-3.279711,8.301152,-6.921813,-5.919314,9.281094,-6.352228,-0.574485,-3.319610,0.116622,-1.963170,4.333131,-8.637720,8.122057,-8.264768,-4.236082,-9.893276,3.328134,2.235357,1.699695,2.350519,1.570345,-7.192892,-1.071600,-9.348635,-0.472952,7.573770,-8.720675,-1.052855,-4.468706,-4.539681,-1.880465,-9.862728,-3.522167,4.458770,7.068285,-1.995924,7.676852,-6.350670,6.923320,6.975303,-9.705687,9.876154,-5.688514,-0.290936,-1.356899,1.659877,-1.106464,6.035504,3.220342,-4.081907,1.357429,6.884031,5.499510,-2.680634,-5.019059,9.281791,9.444726,8.556711,-4.819323,-0.603777,-3.446313,2.815454,5.516688,-5.959418,-9.657727,1.210676,3.193718,-4.177252,7.791834,-3.899100,-6.754539,-9.321572,-8.976618,9.596014,5.173852,-8.883961,2.154748,-6.516313,-3.838434,5.634569,5.340805,-0.064665,4.289403,-1.855042,-7.699847,-8.239352,-1.020539,-2.349784,-8.642214,3.545301,6.643946,6.599177,-5.639153,-4.278549,-7.944975,6.783230,-3.161462],[8.924590,-5.180746,-6.046539,-3.359765,1.893916,8.509558,2.633184,0.468936,-1.365559,-1.304880,2.535305,9.856364,3.135758,8.441212,-6.932647,2.371853,4.907389,9.609556,-5.267474,-4.762475,-7.989421,1.936433,7.126528,-1.456460,5.483752,2.765475,7.604898,-7.013630,9.412852,1.719637,-9.813147,6.422953,-4.704492,2.710327,-6.113549,-7.329560,-8.591744,-5.712383,-6.589244,9.833801,-6.262854,-4.490462,7.748213,-2.060732,-2.192255,-9.299724,-3.796545,-9.873511,-1.397886,5.695500,6.374268,2.838732,0.227916,7.087213,9.351963,-4.630871,-8.601117,5.498149,8.442519,-8.569306,-3.209218,-4.390669,-1.533569,4.807623,2.304437,0.733719,9.080738,-9.085187,-7.824055,-1.114633,-6.071883,4.800680,-1.512079,-5.535051,2.437628,4.376425,-9.621099,-6.557283,6.400684,8.361276,1.438047,7.332281,-0.601136,6.912488,-4.383499,-2.764546,-5.204338,5.944468,-7.733770,2.403073,-7.919248,5.521867,-5.708729,0.751480,-2.492308,-4.268805,2.262519,-7.732850,3.499656,-6.344479,1.114883,-7.595727,7.881650,-9.396555,-5.902615,3.960209,8.518181,9.625976,-1.483284,8.567867,6.675720,-8.453093,5.767630,-3.456702,4.510152,-8.155061,8.507595,-9.957089,-3.508349,1.744919,-0.529964,0.087033,9.295540,-9.752854,9.226131,-3.709369,3.759784,9.829152,1.440683,-2.043764],[6.811439,-6.535080,4.679369,5.384054,1.193410,-0.126239,9.179504,0.791646,-1.730174,-9.353207,5.274830,0.127381,-5.756149,-8.655290,-5.882518,-7.258338,8.778234,3.756463,6.887304,5.811502,2.332859,9.419465,1.545164,5.448254,-5.951344,-6.965690,8.772255,-5.566723,-6.074289,9.975930,4.897786,-4.096914,-4.746172,-9.265286,-3.890608,5.796703,8.463001,-2.353799,3.008759,7.563282,-5.167628,-2.276318,9.966007,0.103941,4.378642,-8.343487,-1.601854,4.504895,-7.395297,-5.298589,1.811598,-8.762078,-8.813050,-4.365410,5.414882,7.891353,9.838012,3.524175,6.943668,-2.945016,2.961236,6.344359,-6.012553,7.774076,-4.895317,5.631378,2.585009,9.301310,9.327555,0.377303,7.271034,-9.102416,-7.916919,2.189394,-2.392275,-3.007688,-0.414300,2.790819,3.046805,-0.618834,-7.803698,8.182143,1.924514,-8.486860,-1.248236,7.479452,-9.126291,-2.507494,8.505089,-3.978385,-9.827415,-6.550877,2.348707,4.075973,-4.768074,-0.472265,8.531801,-3.904148,-0.826341,2.650573,-1.303227,-9.227416,-1.317934,-6.126655,-6.808414,2.291734,0.617821,-7.325048,6.650952,2.979571,5.420329,0.210388,-7.097584,6.445971,-4.334704,5.164241,-1.351901,4.881721,5.609014,-7.592279,6.412892,-0.656855,2.514753,4.108993,-5.153663,-1.717725,-6.763633,-5.802322,9.897018,-0.491297],[4.964911,8.203425,4.468657,-5.747302,-0.125558,9.959492,3.597371,-1.068775,-6.847231,2.221315,1.865181,-3.689049,7.056000,-8.332069,-7.167311,-5.724301,-0.439164,9.116146,6.287459,-9.638595,6.626993,0.220983,8.072868,5.481594,5.257640,-1.141364,5.676339,-3.579469,-7.266614,1.169518,8.467327,-0.684424,9.156213,-9.969150,3.881307,-8.094007,-8.677983,0.377355,-7.495083,6.227681,-0.562245,-9.615026,-6.927854,-7.246482,7.507909,8.505207,-9.319021,-6.552470,-1.688968,-5.243940,-9.737739,-3.045579,-9.239207,-5.704223,-6.967348,-2.775241,-8.310741,-8.937899,5.447963,9.889260,9.881196,-3.781029,-5.610324,5.495319,0.966627,-6.874755,8.438645,-6.491253,3.001256,-5.132582,-8.308695,-4.595367,4.439250,9.440717,4.213730,7.024272,9.480497,-4.652903,-7.940237,-4.429131,0.927147,7.358518,6.185743,-4.567539,1.882841,3.592917,7.676687,-5.446449,-1.880015,-9.690465,-5.786350,-9.555973,1.997812,8.861564,4.576537,6.029303,-0.593680,5.792066,-8.531288,-8.759862,-3.013411,0.567706,3.667879,-9.799644,6.672089,-9.858739,-9.964879,9.009848,9.896373,5.572383,2.442746,-7.234763,-9.698901,9.798037,3.736130,-0.066163,0.583297,-1.493693,4.788231,2.834791,3.465565,-0.988821,-7.534343,1.918994,-3.817401,-4.267673,5.457995,5.000935,-9.595807,-7.009289],[2.238592,6.020085,-4.900412,0.637135,-5.902569,-1.765017,-3.525385,3.300434,-6.453997,7.809077,-9.635627,-9.275716,-4.123617,0.052723,6.273893,-5.552152,-7.651149,8.317537,8.433517,-9.141309,3.816503,6.431424,8.087754,5.029749,9.777701,-3.547250,-9.165722,7.841787,-6.140577,-9.873271,-7.950268,-8.440408,-7.764386,8.246278,3.762186,-8.214842,-0.990365,-3.538742,-1.062451,-4.464442,-5.389998,0.767609,3.618914,6.303173,4.402131,7.216086,0.575085,-1.855170,-9.423620,6.642769,8.246661,-5.239543,-1.067616,1.308691,-2.924348,-0.725742,-9.639722,-2.228617,0.965032,-8.036263,3.754102,-9.887662,8.196064,-4.357609,9.347003,4.936310,8.972999,-1.695251,8.405945,3.096594,9.078340,-2.902609,1.409361,-6.521758,5.488221,-9.386997,-9.227543,9.473035,0.527579,3.707058,9.469906,-7.165508,6.374862,-3.495586,-5.457559,-1.952783,-3.052339,-9.824539,1.333145,-6.895167,1.121340,7.995931,6.469344,9.258545,5.242693,1.464261,-3.183504,4.021187,6.135217,-7.573934,7.411695,1.372792,9.623888,-3.559631,-4.916934,4.295821,2.487278,-5.453578,1.216903,9.548462,-6.234274,-3.375864,-0.691757,-4.798562,1.231629,-4.955033,-0.287909,-9.884213,5.218733,-2.987753,9.759697,9.236791,0.836493,-5.066538,8.492246,2.318233,-4.964113,-1.140045,1.294712,-3.120305],[7.777580,-8.707433,2.300057,-4.689714,3.202956,-4.181353,-6.903255,5.762447,1.441776,5.507607,7.170926,6.492212,-2.496772,1.522448,-9.997028,-5.177899,-6.153696,1.448199,-8.442225,-9.781484,6.896280,-6.987348,-5.512090,3.444896,8.516691,-8.867801,6.515161,2.852398,-9.550199,7.053593,-6.999030,-5.649828,-8.103749,-5.670575,3.971657,-8.538486,-0.704261,0.269854,-4.396363,-1.103044,3.103732,8.170438,-5.071010,-4.848001,7.234644,-4.070874,0.297560,-1.714699,-0.761237,-4.284419,5.665278,-5.786340,-6.570328,-5.975065,-0.397154,-7.218177,6.526489,-3.139008,-3.226833,-1.958735,2.513465,-4.056917,-7.227041,-9.504063,7.230020,-9.540069,-0.070276,-0.548822,-9.098351,3.392738,-4.676019,-7.918055,1.142481,0.599334,5.086156,0.028682,-8.333133,-5.190505,-0.545538,-0.910639,6.230416,-0.722839,0.375973,-1.158967,5.134599,1.850013,-8.883087,-1.960200,-8.993556,5.753956,3.188606,-1.611573,-3.839657,-7.501568,-0.187809,1.589120,-8.801775,2.725932,-4.297948,1.943630,3.155664,5.470115,4.027976,-2.157210,-4.463930,4.321002,-5.168997,6.500521,-2.112049,-6.643196,-1.622092,1.799939,1.407419,3.043762,-3.001995,-2.689220,8.929668,9.789803,5.314115,-8.943894,-4.750473,2.625894,-0.501534,1.552193,5.462289,7.912886,9.091807,-6.800049,0.289330,9.406968]], dtype = "float32")#candidate|5067|(16, 130)|const|float32
bop_5068 = relay.floor_mod(const_5061.astype('float32'), const_5067.astype('float32')) # shape=(16, 130)
const_5072 = relay.const([[[-3.299866,-2.163891,-9.828160,-9.444922],[-8.516692,-9.223551,-7.459446,2.253466],[3.974709,1.467093,-9.799544,7.071908],[5.995023,-1.150039,-0.348027,0.737731],[-5.633412,8.407177,6.974897,7.837825],[1.180049,2.997014,-2.101666,8.338123],[-7.260987,-8.332755,-1.441195,-4.996234],[-0.487886,-5.402980,-3.281245,0.566967],[8.232700,-9.183118,1.748790,-9.599600],[8.689320,-5.313867,6.790691,4.526257],[-0.697457,-8.154200,3.305092,-2.361909],[3.893943,-6.489808,-8.998606,4.241750],[2.139879,-3.735660,4.820177,5.982217],[-4.264475,-7.517483,7.162603,4.623847],[-1.486781,-0.221833,-1.254496,7.150326]],[[2.087567,-4.071308,7.290527,0.317605],[0.376498,9.432468,1.167100,7.464529],[-9.293056,9.287683,-2.507232,9.117925],[-6.038580,-5.066143,-1.840641,-6.619664],[-3.515158,6.436513,-2.369250,-9.093798],[4.007482,-3.349554,-0.742066,-9.142469],[-0.820197,-6.646677,3.455224,1.954953],[2.768348,-0.947515,3.094796,-9.320253],[5.986516,9.273428,-3.871984,9.238270],[-0.033496,-1.528144,-2.097560,9.754218],[-9.582117,6.542425,-0.777238,2.522582],[-8.129152,3.031271,1.294895,1.376786],[-5.776876,-4.154538,-8.406349,-1.040259],[-3.484324,1.015435,5.734786,9.332245],[-4.051782,0.451075,1.957896,6.083433]],[[6.312687,9.536952,-8.892321,8.742864],[1.290490,5.051735,-7.951489,-0.509779],[4.297307,9.355089,3.558294,-0.434659],[9.379736,-6.635218,5.980768,-9.054468],[-4.271216,7.743912,0.487083,4.707582],[-1.428466,-4.509652,-0.818243,6.979526],[7.269803,1.343732,2.813702,-5.896217],[0.211580,5.354556,-1.890025,4.650743],[5.118750,1.026787,-0.733713,-8.328838],[-0.006477,9.424156,2.853639,-6.733612],[8.904023,6.037345,9.854304,5.843816],[-6.825966,4.645910,-1.944646,-2.541966],[7.514698,-6.648726,-9.287184,6.229822],[-5.698029,-2.299156,4.908636,-1.450896],[-3.615101,-3.414522,3.148421,-9.772906]]], dtype = "float64")#candidate|5072|(3, 15, 4)|const|float64
bop_5073 = relay.mod(call_5039.astype('float32'), relay.reshape(const_5072.astype('float32'), relay.shape_of(call_5039))) # shape=(3, 15, 4)
bop_5076 = relay.mod(call_5040.astype('float32'), relay.reshape(const_5072.astype('float32'), relay.shape_of(call_5040))) # shape=(3, 15, 4)
func_3296_call = mod.get_global_var('func_3296')
func_3300_call = mutated_mod.get_global_var('func_3300')
const_5078 = relay.const([True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True], dtype = "bool")#candidate|5078|(336,)|const|bool
call_5077 = relay.TupleGetItem(func_3296_call(relay.reshape(const_5078.astype('bool'), [7, 8, 6]), relay.reshape(const_5078.astype('bool'), [7, 8, 6]), ), 0)
call_5079 = relay.TupleGetItem(func_3300_call(relay.reshape(const_5078.astype('bool'), [7, 8, 6]), relay.reshape(const_5078.astype('bool'), [7, 8, 6]), ), 0)
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_5080 = func_2250_call()
call_5081 = func_2250_call()
output = relay.Tuple([call_5060,bop_5068,bop_5073,call_5077,const_5078,call_5080,])
output2 = relay.Tuple([call_5062,bop_5068,bop_5076,call_5079,const_5078,call_5081,])
func_5083 = relay.Function([], output)
mod['func_5083'] = func_5083
mod = relay.transform.InferType()(mod)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5083_call = mutated_mod.get_global_var('func_5083')
call_5084 = func_5083_call()
output = call_5084
func_5085 = relay.Function([], output)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_961_call = mod.get_global_var('func_961')
func_962_call = mutated_mod.get_global_var('func_962')
call_5086 = relay.TupleGetItem(func_961_call(), 0)
call_5087 = relay.TupleGetItem(func_962_call(), 0)
output = relay.Tuple([call_5086,])
output2 = relay.Tuple([call_5087,])
func_5107 = relay.Function([], output)
mod['func_5107'] = func_5107
mod = relay.transform.InferType()(mod)
output = func_5107()
func_5108 = relay.Function([], output)
mutated_mod['func_5108'] = func_5108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3072_call = mod.get_global_var('func_3072')
func_3073_call = mutated_mod.get_global_var('func_3073')
call_5159 = func_3072_call()
call_5160 = func_3072_call()
func_1397_call = mod.get_global_var('func_1397')
func_1399_call = mutated_mod.get_global_var('func_1399')
const_5169 = relay.const([-5,-4,6,-5,-10,-7,-3,-5,-5,-3,-2,-8,1,-2,-4,-7,-9,-5,2,7,-10,8,9,10,-4,5,-9,-7,-4,3,3,9,4,1,6,9,4,1,-3,-7,5,-4,-4,-7,9,10,-2,6,-5,-6,-4,-8,4,-2,-10,5,1,-10,-10,7,6,1,-6,-8,3,1,8,-8,9,-1,-10,-2,8,8,-8,-7,-2,-4,5,-1,-5,8,4,-8,-5,-9,7,-6,5,3,8,-10,8,1,6,-4,4,4,7,10,3,6,5,5,7,5,-5,6,-9,-9,-8,-5,4,-2,-3,4,6,-8,-4,-10,8,-4,10,-8,-6,-5,-9,-7,-2,-3,-3,-3,-9,-7,1,-3,5,-5,9,6,-10,10,-1,-2,7,-10,-4,-7,-3,5,-6,-4,-6,-7,-2,-10,6,-4,8,10,1,6,-2,-8,7,-10,2,3,-4,-2,-7,-1,-4,-10,10,10,1,-9,-8,9,-2,8,4,1,6,-6,-8,4,1,8,5,5,3,10,-2,-7,-7,-8,10,8,-3,-9,-1,-4,-8,-6,-10,10,4,5,8,-10,-8,-7,-8,-4,-9,-1,-7,-5,-7,7,-3,-1,6,4,-7,-10,-3,-3,2,-1,2,3,6,4,2,-1,10,-1,7,2,-10,-8,9,-5,1,-6,-7,-2,-9,-8,-10,4,-2,-6,-2,4,-1,6,-6,-3,-4,-3,7,6,4,7,-5,-1,7,8,6,-1,4,4,-6,-10,5,-3,-9,-8,-3,6,-5,-4,4,2,-4,4,-10,-10,7,-9,5,5,-1,8,8,-1,-1,-5,-7,-5,-10,8,7,-4,-10,-9,5,1,-6,1,1], dtype = "int64")#candidate|5169|(315,)|const|int64
call_5168 = relay.TupleGetItem(func_1397_call(relay.reshape(const_5169.astype('int64'), [15, 3, 7])), 2)
call_5170 = relay.TupleGetItem(func_1399_call(relay.reshape(const_5169.astype('int64'), [15, 3, 7])), 2)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_5172 = relay.TupleGetItem(func_1935_call(), 1)
call_5173 = relay.TupleGetItem(func_1937_call(), 1)
func_4534_call = mod.get_global_var('func_4534')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5177 = relay.TupleGetItem(func_4534_call(), 0)
call_5178 = relay.TupleGetItem(func_4536_call(), 0)
func_1595_call = mod.get_global_var('func_1595')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_5189 = relay.TupleGetItem(func_1595_call(), 0)
call_5190 = relay.TupleGetItem(func_1596_call(), 0)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_5191 = relay.TupleGetItem(func_2725_call(), 0)
call_5192 = relay.TupleGetItem(func_2726_call(), 0)
func_3160_call = mod.get_global_var('func_3160')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_5194 = relay.TupleGetItem(func_3160_call(), 0)
call_5195 = relay.TupleGetItem(func_3161_call(), 0)
output = relay.Tuple([call_5159,call_5168,const_5169,call_5172,call_5177,call_5189,call_5191,call_5194,])
output2 = relay.Tuple([call_5160,call_5170,const_5169,call_5173,call_5178,call_5190,call_5192,call_5195,])
func_5208 = relay.Function([], output)
mod['func_5208'] = func_5208
mod = relay.transform.InferType()(mod)
output = func_5208()
func_5209 = relay.Function([], output)
mutated_mod['func_5209'] = func_5209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_5227 = relay.TupleGetItem(func_4758_call(), 1)
call_5228 = relay.TupleGetItem(func_4760_call(), 1)
func_3714_call = mod.get_global_var('func_3714')
func_3716_call = mutated_mod.get_global_var('func_3716')
call_5245 = func_3714_call()
call_5246 = func_3714_call()
uop_5257 = relay.sqrt(call_5245.astype('float64')) # shape=(3, 15, 4)
uop_5259 = relay.sqrt(call_5246.astype('float64')) # shape=(3, 15, 4)
func_4724_call = mod.get_global_var('func_4724')
func_4728_call = mutated_mod.get_global_var('func_4728')
var_5261 = relay.var("var_5261", dtype = "float32", shape = ())#candidate|5261|()|var|float32
const_5262 = relay.const([[7.237437,-5.289411],[9.772816,7.858587],[-2.809975,-8.485374],[8.469310,2.889808],[5.442581,-0.135212],[-8.528763,-0.452955],[3.696807,8.082969],[7.953618,5.584238],[1.913722,-8.850577],[7.126350,2.352135],[-1.529778,5.049349],[-7.698738,-9.084332],[1.412175,6.316661],[8.880749,-5.771498],[8.255245,-0.236717],[-9.713556,9.083409],[8.495544,-0.357237],[-3.322673,3.795572],[9.473080,-7.376271],[5.351005,-8.358390],[7.503300,-2.947770],[1.748204,-9.818778],[-6.426621,8.969034],[-6.694981,-2.149066],[5.017227,6.048623],[-7.695708,-3.979463],[2.091723,-2.199138],[5.379943,8.721578],[-9.270543,-1.588088],[-3.141053,-7.173002],[4.337954,-0.839677],[-9.020299,-5.133522],[9.516685,4.808236],[-3.551992,-9.447239],[-7.526811,-8.444150],[0.288739,2.088741],[2.106097,3.083583],[-1.581264,-1.555354],[-5.292352,2.192660],[-5.112968,-9.789503],[1.565718,2.866952],[1.011687,-8.838487],[-9.879440,-7.329890],[-7.215460,8.908303],[3.601655,-3.802878],[-7.336759,8.820590],[5.784099,-4.885721],[-6.947263,7.700678],[-0.869782,5.144355],[-0.805110,-6.281271],[-8.527732,-4.391497],[-3.501568,-3.385727],[4.136344,9.671135],[-0.743940,-0.186183],[5.014980,0.242720],[4.452076,-4.732052],[4.393216,1.341276],[1.137648,2.886150],[-5.361714,-6.716433],[9.006849,-5.201612],[7.687893,3.740248],[4.130906,1.194617],[-5.553478,-9.033607],[-0.919172,9.278609]], dtype = "float32")#candidate|5262|(64, 2)|const|float32
const_5263 = relay.const([-10,7,8,3,-10,-5,9,8,-3,-10,1,8,1,-3,7,5,4,3,-7,-9,5,5,-6,-3,-1,-7,-8,8,-4,2,-4,-1,2,-10,8,-7,5,-8,-7,2,-4,10,-6,3,9,3,4,-2,8,7,-1,-1,-8,-9,-8,5,-2,3,-3,-7,-4,6,4,6,9,-8,-6,9,5,-1,9,-6,8,10,-8,6,7,1,9,3,-1,-10,-9,-2,-7,9,6,-8,9,-8,4,10,-7,5,10,-5,1,7], dtype = "uint64")#candidate|5263|(98,)|const|uint64
call_5260 = relay.TupleGetItem(func_4724_call(relay.reshape(var_5261.astype('float32'), []), relay.reshape(const_5262.astype('float32'), [16, 1, 8]), relay.reshape(const_5263.astype('uint64'), [98,]), ), 5)
call_5264 = relay.TupleGetItem(func_4728_call(relay.reshape(var_5261.astype('float32'), []), relay.reshape(const_5262.astype('float32'), [16, 1, 8]), relay.reshape(const_5263.astype('uint64'), [98,]), ), 5)
func_2816_call = mod.get_global_var('func_2816')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_5265 = relay.TupleGetItem(func_2816_call(), 0)
call_5266 = relay.TupleGetItem(func_2818_call(), 0)
output = relay.Tuple([call_5227,uop_5257,call_5260,var_5261,const_5262,const_5263,call_5265,])
output2 = relay.Tuple([call_5228,uop_5259,call_5264,var_5261,const_5262,const_5263,call_5266,])
func_5268 = relay.Function([var_5261,], output)
mod['func_5268'] = func_5268
mod = relay.transform.InferType()(mod)
mutated_mod['func_5268'] = func_5268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5269 = relay.var("var_5269", dtype = "float32", shape = ())#candidate|5269|()|var|float32
func_5268_call = mutated_mod.get_global_var('func_5268')
call_5270 = func_5268_call(var_5269)
output = call_5270
func_5271 = relay.Function([var_5269], output)
mutated_mod['func_5271'] = func_5271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5349 = relay.var("var_5349", dtype = "float64", shape = (16, 2, 4))#candidate|5349|(16, 2, 4)|var|float64
uop_5350 = relay.exp(var_5349.astype('float64')) # shape=(16, 2, 4)
bop_5353 = relay.bitwise_or(var_5349.astype('int8'), relay.reshape(uop_5350.astype('int8'), relay.shape_of(var_5349))) # shape=(16, 2, 4)
output = relay.Tuple([bop_5353,])
output2 = relay.Tuple([bop_5353,])
func_5362 = relay.Function([var_5349,], output)
mod['func_5362'] = func_5362
mod = relay.transform.InferType()(mod)
mutated_mod['func_5362'] = func_5362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5363 = relay.var("var_5363", dtype = "float64", shape = (16, 2, 4))#candidate|5363|(16, 2, 4)|var|float64
func_5362_call = mutated_mod.get_global_var('func_5362')
call_5364 = func_5362_call(var_5363)
output = call_5364
func_5365 = relay.Function([var_5363], output)
mutated_mod['func_5365'] = func_5365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5107_call = mod.get_global_var('func_5107')
func_5108_call = mutated_mod.get_global_var('func_5108')
call_5421 = relay.TupleGetItem(func_5107_call(), 0)
call_5422 = relay.TupleGetItem(func_5108_call(), 0)
output = call_5421
output2 = call_5422
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mutated_mod.get_global_var('func_5449')
call_5450 = func_5449_call()
output = call_5450
func_5451 = relay.Function([], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_5473 = relay.TupleGetItem(func_1935_call(), 0)
call_5474 = relay.TupleGetItem(func_1937_call(), 0)
output = call_5473
output2 = call_5474
func_5477 = relay.Function([], output)
mod['func_5477'] = func_5477
mod = relay.transform.InferType()(mod)
output = func_5477()
func_5478 = relay.Function([], output)
mutated_mod['func_5478'] = func_5478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1122_call = mod.get_global_var('func_1122')
func_1124_call = mutated_mod.get_global_var('func_1124')
call_5495 = relay.TupleGetItem(func_1122_call(), 0)
call_5496 = relay.TupleGetItem(func_1124_call(), 0)
func_1221_call = mod.get_global_var('func_1221')
func_1222_call = mutated_mod.get_global_var('func_1222')
call_5505 = relay.TupleGetItem(func_1221_call(), 0)
call_5506 = relay.TupleGetItem(func_1222_call(), 0)
output = relay.Tuple([call_5495,call_5505,])
output2 = relay.Tuple([call_5496,call_5506,])
func_5514 = relay.Function([], output)
mod['func_5514'] = func_5514
mod = relay.transform.InferType()(mod)
mutated_mod['func_5514'] = func_5514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5514_call = mutated_mod.get_global_var('func_5514')
call_5515 = func_5514_call()
output = call_5515
func_5516 = relay.Function([], output)
mutated_mod['func_5516'] = func_5516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4629_call = mod.get_global_var('func_4629')
func_4631_call = mutated_mod.get_global_var('func_4631')
call_5525 = relay.TupleGetItem(func_4629_call(), 1)
call_5526 = relay.TupleGetItem(func_4631_call(), 1)
func_4254_call = mod.get_global_var('func_4254')
func_4257_call = mutated_mod.get_global_var('func_4257')
call_5530 = relay.TupleGetItem(func_4254_call(relay.reshape(call_5525.astype('float32'), [600,])), 2)
call_5531 = relay.TupleGetItem(func_4257_call(relay.reshape(call_5525.astype('float32'), [600,])), 2)
func_3296_call = mod.get_global_var('func_3296')
func_3300_call = mutated_mod.get_global_var('func_3300')
const_5536 = relay.const([[False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True]], dtype = "bool")#candidate|5536|(1, 336)|const|bool
call_5535 = relay.TupleGetItem(func_3296_call(relay.reshape(const_5536.astype('bool'), [7, 8, 6]), relay.reshape(const_5536.astype('bool'), [7, 8, 6]), ), 0)
call_5537 = relay.TupleGetItem(func_3300_call(relay.reshape(const_5536.astype('bool'), [7, 8, 6]), relay.reshape(const_5536.astype('bool'), [7, 8, 6]), ), 0)
output = relay.Tuple([call_5525,call_5530,call_5535,const_5536,])
output2 = relay.Tuple([call_5526,call_5531,call_5537,const_5536,])
func_5538 = relay.Function([], output)
mod['func_5538'] = func_5538
mod = relay.transform.InferType()(mod)
mutated_mod['func_5538'] = func_5538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5538_call = mutated_mod.get_global_var('func_5538')
call_5539 = func_5538_call()
output = call_5539
func_5540 = relay.Function([], output)
mutated_mod['func_5540'] = func_5540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3463_call = mod.get_global_var('func_3463')
func_3464_call = mutated_mod.get_global_var('func_3464')
call_5573 = func_3463_call()
call_5574 = func_3463_call()
func_2250_call = mod.get_global_var('func_2250')
func_2251_call = mutated_mod.get_global_var('func_2251')
call_5592 = func_2250_call()
call_5593 = func_2250_call()
func_3662_call = mod.get_global_var('func_3662')
func_3665_call = mutated_mod.get_global_var('func_3665')
const_5601 = relay.const([-2,-9,6,-5,-8,-2,10,4,10,5,-2,-7,-1,-9,-2,7,5,-10,-1,-3,-10,3,-7,-6,-7,-10,-6,-4,-5,-9,1,10,4,-8,5,-4,-10,-4,4,-4,1,-7,-3,7,-6], dtype = "int16")#candidate|5601|(45,)|const|int16
const_5602 = relay.const([-5.870203,-2.081444,9.570559,3.015185,4.586293,-5.705592,2.350450,8.058038,-0.477508,-7.533131,-8.955256,-3.994386,6.805053,1.854538,8.645237,-5.604901,-6.777741,-6.421763,2.272220,-5.237349,5.735411,-6.546291,3.524009,3.654111,0.110625,6.654464,3.668463,-9.324177,-0.840686,7.713333,-7.660217,-4.426996,7.830260,-0.309310,-4.593078,5.211519,5.452624,-4.192892,3.991680,1.182481,5.808879,-0.180885,-0.434811,-2.737529,-3.207076,-4.457296,4.619353,6.841021,-9.670453,-6.509224,-6.692242,-6.054571,8.709275,-7.832567,-1.722829,5.523921,1.687242,-5.954580,6.309918,-8.257148,5.471046,-4.137046,0.446933,4.833177,7.512018,5.414799,0.057187,2.726577,-5.722639,2.661672,0.432568,6.004968,-4.098731,-3.496334,-9.340235,7.786827,-7.536141,-8.016616,-3.739362,3.291213,9.730006,5.857301,-5.265436,9.572927,8.972191,9.286426,-1.840650,6.509506,-4.279242,-6.748811,-8.396389,-0.099778,7.159726,1.592190,-8.174835,9.308414,4.090261,-4.356250,8.211240,-9.925359,-1.653167,-1.751295,-8.786171,4.575480,1.519279,2.729925,-8.856583,-3.016720,8.307420,3.051243,-9.885270,7.897595,3.682879,8.947385,-4.113665,8.520213,2.451120,0.992110,7.344584,3.455372,-4.336549,1.701378,-2.352887,-0.883120,4.023003,-9.579653,-7.016275,2.458539,9.658864,-2.001188,-6.355395,3.275333,0.593000,-5.743506,4.702584,-5.523230,-6.706698,-5.559568,2.532276,-7.161380,-3.631624,1.080095,8.186273,2.712494,7.843592,-0.359393,0.831003,-2.045817,-1.978305,-2.843114,-9.811894,5.513410,-0.223114,7.272739,-6.707283,-9.185324,-6.529151,0.238624,-2.365233,5.348619,-1.610711,2.421872,2.510322,4.533989,-1.887625,4.939595,-9.045154,-8.781765,9.442130,-5.248477,9.601777,-0.543284,-3.775733,3.594557,-7.476440,1.998330,-5.444354,1.836164,-8.808252,8.210677,-4.501380,1.509920,0.933361,0.032135,6.575557,-4.768639,-8.449708,3.626615,-8.917591,4.347482,0.156754,-3.732275,0.579519,6.668301,-6.664981,9.473410,6.743452,2.273137,-0.168738,3.531897,-3.908410,-0.386613,3.148673,-3.558275,1.687934,-1.866096,-3.077264,-0.460697,-1.330649,8.105304,3.366720,4.335340,4.081335,6.860518,1.918271,6.197372,3.984284,-2.863716,4.221896,-3.608605,-2.005747,7.124003,6.485548,7.747040,6.269598,-4.491675,6.598687,-4.222080,-0.716562,-1.429929,-8.622681,-5.052267,6.690990,-4.014484,3.144066,8.249474,-6.206094,-5.683357,2.840881,2.156596,-0.093109,7.890445,-5.341313,-7.223172,3.212260,-1.424942,-9.331518,4.114882,-1.307410,2.356154,4.070805,5.964758,3.931163,4.424017,8.731620,-5.310900,4.310939,6.208918,4.179595,-6.084968,-7.130780,-2.285374,0.749451,6.333423,-2.269029,0.740957,4.445838,2.891616,-2.570004,5.115931,0.700172,2.059826,2.658577,-8.760459,-1.901686,-6.656600,-4.005517,-8.431393,-7.095635,5.178752,-3.258406,-4.003552,1.643839,-3.139531,7.432567,-1.214482,2.631482,0.738264,-9.692820,9.300775,-0.783772,-0.380071,8.231291,1.110176,-6.655956,-8.473958,3.653121,-8.514267,-8.357587,1.555136,0.924575,-3.041489,2.293434,1.933410,-2.754348,9.021936,-8.131244,4.054875,-8.122938,-9.053024,7.590223,0.919110,0.921774,2.799692,-7.818006,7.661710,-1.711497,8.301694,0.920671,-8.111535,1.882672,6.511676,8.714438,6.822220,7.498456,-4.259251,-7.444368,9.606963,1.722735,0.256931,2.815771,5.184474,9.056549,-5.793354,-6.044113,-7.791383,-4.951778,4.256770,-3.410379,0.789872,-2.842444,-3.245957,6.336873,5.354192,-8.721022,-0.977573,1.792220,-0.903198,-5.944555,-1.269783,7.829662,2.090594,-8.533920,3.897783,5.890783,-8.271895,-5.458568,2.675968,-8.112359,-6.553774,3.231436,5.015236,7.121085,0.493927,-9.544967,-5.170579,-7.495665,4.568980,-5.745306,5.920302,4.104587,-6.887278,-5.348366,5.491479,-4.919573,-6.660271,-9.673785,-2.649282,6.840117,-8.569817,6.117772,5.264349,-8.975425,-9.107737,9.467284,-2.468708,4.724194,-4.700184,-4.670638,7.810818,4.712814,0.075367,5.073894,8.305254,7.129960,-2.315315,-7.989835,0.794087,-7.007096,-6.001633,7.274403,-7.156610,6.842969,4.666001,-3.578953,-6.929296,-6.373956,3.624895,0.234782,-4.791475,-2.490961,-9.941279,-2.299283,3.729794,5.553616,-3.375431,8.262852,-4.276140,3.142171,-3.521380,-3.831997,6.020628,-8.311959,-8.439063,-7.254334,7.469132,4.323407,2.376154,8.719841,-5.133997,-7.714822,4.839117,1.272121,-6.645049,2.936820,-6.921126,7.852934,-0.406233,-7.200029,-9.102658,3.678278,-7.026872,6.319286,-5.826502,-4.214519,1.797435,5.684300,-2.529030,-0.132825,3.252222,-4.768933,2.212534,-8.692637,2.424534,-6.974455,7.388968,7.374240,-6.395799,1.849919,4.644690,6.136089,3.804411,-9.192986,3.212013,-4.264649,-9.584358,-4.848454,4.071679,-4.446958,-3.255945,-1.357777,-1.657353,5.748377,-8.931495,-1.389674,-7.585016,-3.260614,-1.220533,-8.188419,-9.513662,8.443558,5.997865,-6.484644,-3.087794,4.848753,-5.173942,-0.429197,-7.453757,8.869599,-7.638468,-3.693544,-5.569083,-0.881627,2.902387,-1.698652,-9.312264,1.985497,-1.269214,-9.341623,-2.394254,3.872623,2.370644,3.380604,8.659704], dtype = "float64")#candidate|5602|(504,)|const|float64
call_5600 = relay.TupleGetItem(func_3662_call(relay.reshape(const_5601.astype('int16'), [45,]), relay.reshape(const_5602.astype('float64'), [504,]), ), 4)
call_5603 = relay.TupleGetItem(func_3665_call(relay.reshape(const_5601.astype('int16'), [45,]), relay.reshape(const_5602.astype('float64'), [504,]), ), 4)
output = relay.Tuple([call_5573,call_5592,call_5600,const_5601,const_5602,])
output2 = relay.Tuple([call_5574,call_5593,call_5603,const_5601,const_5602,])
func_5609 = relay.Function([], output)
mod['func_5609'] = func_5609
mod = relay.transform.InferType()(mod)
mutated_mod['func_5609'] = func_5609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5609_call = mutated_mod.get_global_var('func_5609')
call_5610 = func_5609_call()
output = call_5610
func_5611 = relay.Function([], output)
mutated_mod['func_5611'] = func_5611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4442_call = mod.get_global_var('func_4442')
func_4444_call = mutated_mod.get_global_var('func_4444')
call_5612 = relay.TupleGetItem(func_4442_call(), 3)
call_5613 = relay.TupleGetItem(func_4444_call(), 3)
output = call_5612
output2 = call_5613
func_5618 = relay.Function([], output)
mod['func_5618'] = func_5618
mod = relay.transform.InferType()(mod)
output = func_5618()
func_5619 = relay.Function([], output)
mutated_mod['func_5619'] = func_5619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2632_call = mod.get_global_var('func_2632')
func_2633_call = mutated_mod.get_global_var('func_2633')
call_5635 = func_2632_call()
call_5636 = func_2632_call()
var_5646 = relay.var("var_5646", dtype = "int32", shape = (3, 15, 4))#candidate|5646|(3, 15, 4)|var|int32
bop_5647 = relay.subtract(call_5635.astype('uint64'), relay.reshape(var_5646.astype('uint64'), relay.shape_of(call_5635))) # shape=(3, 15, 4)
bop_5650 = relay.subtract(call_5636.astype('uint64'), relay.reshape(var_5646.astype('uint64'), relay.shape_of(call_5636))) # shape=(3, 15, 4)
func_461_call = mod.get_global_var('func_461')
func_465_call = mutated_mod.get_global_var('func_465')
var_5670 = relay.var("var_5670", dtype = "uint32", shape = (70,))#candidate|5670|(70,)|var|uint32
var_5671 = relay.var("var_5671", dtype = "uint64", shape = (98,))#candidate|5671|(98,)|var|uint64
call_5669 = relay.TupleGetItem(func_461_call(relay.reshape(var_5670.astype('uint32'), [7, 5, 2]), relay.reshape(var_5670.astype('uint32'), [7, 5, 2]), relay.reshape(var_5671.astype('uint64'), [98,]), ), 2)
call_5672 = relay.TupleGetItem(func_465_call(relay.reshape(var_5670.astype('uint32'), [7, 5, 2]), relay.reshape(var_5670.astype('uint32'), [7, 5, 2]), relay.reshape(var_5671.astype('uint64'), [98,]), ), 2)
output = relay.Tuple([bop_5647,call_5669,var_5670,var_5671,])
output2 = relay.Tuple([bop_5650,call_5672,var_5670,var_5671,])
func_5679 = relay.Function([var_5646,var_5670,var_5671,], output)
mod['func_5679'] = func_5679
mod = relay.transform.InferType()(mod)
var_5680 = relay.var("var_5680", dtype = "int32", shape = (3, 15, 4))#candidate|5680|(3, 15, 4)|var|int32
var_5681 = relay.var("var_5681", dtype = "uint32", shape = (70,))#candidate|5681|(70,)|var|uint32
var_5682 = relay.var("var_5682", dtype = "uint64", shape = (98,))#candidate|5682|(98,)|var|uint64
output = func_5679(var_5680,var_5681,var_5682,)
func_5683 = relay.Function([var_5680,var_5681,var_5682,], output)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2816_call = mod.get_global_var('func_2816')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_5780 = relay.TupleGetItem(func_2816_call(), 0)
call_5781 = relay.TupleGetItem(func_2818_call(), 0)
func_2725_call = mod.get_global_var('func_2725')
func_2726_call = mutated_mod.get_global_var('func_2726')
call_5783 = relay.TupleGetItem(func_2725_call(), 0)
call_5784 = relay.TupleGetItem(func_2726_call(), 0)
func_523_call = mod.get_global_var('func_523')
func_526_call = mutated_mod.get_global_var('func_526')
var_5791 = relay.var("var_5791", dtype = "int8", shape = (11, 14))#candidate|5791|(11, 14)|var|int8
call_5790 = relay.TupleGetItem(func_523_call(relay.reshape(var_5791.astype('int8'), [11, 1, 14])), 0)
call_5792 = relay.TupleGetItem(func_526_call(relay.reshape(var_5791.astype('int8'), [11, 1, 14])), 0)
func_1581_call = mod.get_global_var('func_1581')
func_1584_call = mutated_mod.get_global_var('func_1584')
const_5805 = relay.const([[6,-2,4,-7,3,-1,-7,-9,-3,-2,9,1,7,-7,2,6,1,-6,-2,-1,-8,-9,3,5,-8,8,-7,7,-5,-10,-4,-4,6,1,4,6,-2,-6,5,-10,2,-10,7,4,-4,10,3,-2,-5,-1,-4,-2,10,-3,3,9,1,4,-7,-3,-5,8,6,-8,-2,1,-4,4,3,2,-9,1,8,-2,-6,-5,-6,8,2,5,5,-2,1,4,1,7,-6,-4,4,1,-8,10,9,10,-3,5,-10,-6,3,4,7,4,10,10,-3,-5,-7,-9,-2,-8,-1,-3,-2,-2,1,6,7,-3,-9,4,-6,-5,3,-1,-10,-2,-4,3,-3,8,1,2,-6,-9,-10,7,4,-10,3,-4,2,5,8,-1,-3,5,-5,-3,5,-7,7,-2,-5,7,-6,2,-8,6,-3,9,6,-1,2,-3,8,-2,4,-7,8,9,-9,-6,8,-3,8,8,-5,-6,-4,3,-9,-10,-1,-3,3,7,-5,-6,-4,5,-8,-6,5,-9,-1,3,-9,4,-8,-1,1,2,10,10,-5,-3,-9,8,-1,2,-1,-1,-6,2,-5,6,10,3,-5,3,-7,7,-7,1,3,-9,8,7,-8,1,-2,9,-6,2,-3,-3,3,-8,4,6,3,-4,-7,7,1,-9,7,-5,-8,2,3,-4,3,7,-1,7,-10,7,1,3,3,5,9,1,-10,-9,-8,1,4,3,3,-1,8,-10,-3,-2,-6,6,-10,3,2,5,6,5,6,-9,-5,-1,10,5,8,-2,8,-2,-7,-10,-8,10,5,-7,-3,-9,9,-5,-3,4,10,6,6,-8,-4,1,-5,9,8,10,-4,-10,-1,2,5,-5,-4,5,-10,10,-1,-5,3,10,-2,3,-1,9,-1,-6,-8,3,2,9,-1,4,-1,-2,-3,-10,-3,10,-9,6,9,6,10,9,-7,2,9,-2,4,-9,-6,-3,1,3,-2,7,8,1,3,10,8,8,7,-8,-5,10,-5,10,-8,-5,1,-6,-5,7,-6,-10,8,-2,9,5,-10,-5,2,10,-8,2,6,10,-4,-1,-5,-7,-8,-7,-10,1,9,-4,1,1,-8,1,-3,-5,-10,-7,9,8,-2,4,-7,-3,-1,7,10,5,3,2,-9,-2,7,-3,-5,4,4,-3,-3,5,-5,9,-10,-5,-10,-10,-6,-7,-4,-9,-9,-8,1,4,-10,-1,1,2,2,-8,-4,1,-9,-3,9,1,5,1,-1,-9,3,-5,9,10,5,-6,-4,-1,7,5,-5,4,-8,-5,9,1,3,-6,3,4,4,9,8,1,3,1,-6,10,-9,4,-9,10,1,4,4,6,-7,5,4,-1,4,6,7,2,1,4,1,3,1,-9,-5,-2],[7,-8,-3,-9,10,-5,-3,5,-4,-5,-4,-8,4,-10,2,1,-1,-2,7,1,7,6,-4,-4,-3,-5,5,-4,1,-8,-7,-4,-10,-3,8,-6,-10,4,7,-4,7,7,-3,3,-4,8,-1,-10,-9,-8,8,3,-10,4,7,6,-7,7,4,3,10,9,-4,-2,5,1,8,3,-10,-5,-7,10,6,2,-7,7,-8,9,-9,-4,-5,-8,-8,-2,10,-5,8,10,5,3,-1,-9,9,1,-1,2,10,2,3,-8,9,9,-1,1,-5,7,-5,2,-6,-1,8,4,3,9,8,-8,-1,6,10,-1,4,-10,6,-2,-5,-9,6,4,-9,-7,8,-8,6,4,-1,-10,3,-3,-2,-1,-10,3,-4,-9,-7,2,4,8,-1,-4,7,9,-4,1,1,-6,-2,1,5,7,-6,9,6,-8,10,-3,-9,-9,9,10,3,1,4,-9,1,1,4,5,-9,-1,8,8,-6,-10,-8,-5,8,-6,7,3,1,5,-6,-7,5,2,2,1,-6,5,5,6,-7,6,-6,-1,-3,-4,9,1,-1,-9,4,5,5,5,1,1,-4,1,8,-8,-10,-9,6,-5,5,-4,-6,-1,10,-10,9,-6,-10,2,-10,-10,-5,-7,9,9,-6,4,-3,-4,5,3,-7,7,-7,7,1,6,-6,-6,7,-10,-10,8,3,6,5,-2,-10,2,-7,-5,-8,-4,-7,9,6,8,8,-1,7,-7,-9,-7,-7,6,-9,2,-3,-10,-7,-4,-10,10,8,9,9,8,-6,-6,-3,6,-7,-9,-5,1,-8,6,7,8,-7,1,-2,5,5,8,6,-1,-4,-3,9,-2,9,7,-4,-3,1,-9,6,-8,5,-10,1,6,-2,-6,-5,8,-8,1,-1,3,2,-2,5,-9,7,5,-1,-7,2,-3,-4,2,-7,2,-9,7,-8,-2,-10,-3,-2,-9,9,-7,-9,-7,-9,-5,-2,-4,3,-4,2,-3,-9,-3,5,4,-8,-3,9,-10,-9,-7,-3,3,4,-8,-3,1,7,3,-6,6,-7,-8,10,-7,6,-9,-8,-8,10,-9,9,5,5,-8,4,-4,-4,7,2,-3,9,9,4,10,-3,9,2,-8,1,-8,9,-3,-4,-6,-6,7,1,-5,-3,-1,5,-8,3,3,-1,6,-1,-2,-1,3,7,5,6,-5,4,-5,5,5,7,-1,-9,8,-5,-6,1,4,-9,-8,-8,4,-8,-10,-2,4,-2,-10,1,10,-2,-4,6,-1,-6,2,1,-3,-6,-5,-9,10,1,2,-9,9,1,-2,-1,3,-3,9,-10,-4,-9,-5,-5,10,4,-9,-8,-2,-2,-7,-9,-8,5,8,-4,-2,-1,-1,-3,-4,7,-9,4,4,-10,-6],[-9,-3,6,2,4,-2,2,-1,8,-3,1,-8,7,-10,2,6,-2,8,10,7,3,-9,5,-3,7,8,9,-2,9,-1,-10,4,8,10,-3,4,-6,-2,-4,6,10,9,9,6,-5,-10,-6,5,-8,3,-1,9,1,2,8,-7,9,8,7,-7,10,5,4,1,-8,3,-5,-9,-6,4,-9,2,6,8,-3,6,-6,3,-3,-2,-3,10,-7,-6,2,-7,-2,-8,9,4,5,-9,-10,-9,-9,6,5,-9,7,-7,7,9,-5,10,5,7,-1,-8,-1,6,9,-9,9,9,5,-4,-2,-2,2,-2,-5,6,7,6,3,5,5,-6,-4,-8,-3,-3,-7,-3,-8,-5,-5,-8,-5,10,6,9,1,-4,10,-8,-8,1,8,4,8,9,-8,-6,9,10,3,-9,-5,-1,-8,-10,-10,2,5,-3,3,8,7,6,-4,-5,6,-1,-8,-5,-1,-3,-8,-8,10,7,3,7,-3,-8,-9,-2,-7,-3,-7,-3,5,-9,10,-7,-1,4,-2,-4,3,-2,2,-7,-8,6,-1,4,-3,-3,4,-5,-2,9,-1,-1,-4,9,8,7,-8,-1,-9,9,10,7,9,9,3,9,2,10,-10,1,7,-4,-8,8,-2,1,10,-5,2,-2,3,-10,-1,10,1,1,-1,7,-2,9,3,-7,10,1,8,-8,7,10,8,1,-3,-1,9,-4,-4,-6,-4,7,-5,-5,-4,-5,-1,-10,5,2,6,-2,1,6,10,-10,3,10,8,2,-10,-6,2,-2,7,-6,-5,-8,6,-2,5,5,-1,-5,-10,-2,4,9,-4,-6,5,4,2,-6,5,7,10,-8,-4,-10,2,5,2,5,-5,8,2,-9,3,3,3,-10,3,-2,10,3,5,-9,2,-4,-2,-6,-4,9,2,7,-3,6,4,-4,1,-8,3,-5,1,3,-2,10,-6,5,-2,-3,1,10,9,-2,1,-9,9,-1,-5,-6,3,-5,6,9,4,2,3,-3,-7,-7,6,5,1,-6,10,5,9,-6,-10,2,9,9,9,6,-8,-6,-8,10,7,-8,-9,4,-1,-4,5,4,3,8,9,7,7,-10,4,-6,7,10,7,7,-4,8,8,-5,-9,-2,-7,4,2,-10,-5,9,-10,-9,3,-4,6,8,6,-6,6,-1,-8,-6,-10,-9,3,-8,-7,10,4,8,-6,5,-2,4,10,-3,-10,-9,7,7,5,3,-4,-1,6,8,6,3,4,-5,5,-3,7,7,-9,4,-2,6,-1,-4,-6,1,6,7,-3,6,-10,-7,10,-3,-10,5,-5,8,9,4,-4,7,-1,2,9,-4,-7,-10,-6,-6,-9,8,3,1,-10,7,-10,-4,9,6,5,8],[2,-7,-10,-5,-5,4,-3,-1,-10,6,5,10,7,-3,-6,2,-9,-4,-3,8,4,-9,-7,-7,-1,4,5,1,9,-6,-4,-3,-9,-2,8,4,1,8,-6,-4,9,4,-3,-8,6,9,4,3,-9,-8,2,-8,7,-1,-2,-9,-5,7,-5,-2,10,-1,3,10,8,10,1,-4,-5,-1,-2,-8,-1,-4,-1,-9,8,-7,-5,-3,-4,4,-1,4,-3,-3,-3,-3,7,3,4,8,4,-10,-2,-4,6,-2,6,2,-8,6,5,8,-7,-7,4,2,3,-1,-9,-3,-2,-1,-10,-10,8,-2,7,3,2,4,9,6,-2,-9,1,-3,7,-1,-8,5,-9,9,8,10,3,-6,2,6,-10,-4,-9,3,-4,2,7,8,-6,-4,10,-4,9,-7,3,-6,10,-1,-8,6,-1,4,8,8,10,8,-5,4,2,7,-7,-8,7,-6,6,-9,-10,6,6,2,7,7,-4,-8,-4,-2,1,8,9,-3,5,3,4,3,-5,-7,7,-4,6,-7,-8,1,-1,5,2,7,7,-3,1,-10,-3,9,-2,-2,7,-1,10,-4,3,-3,7,-4,-1,-5,5,9,4,-7,-2,-5,10,-4,9,3,7,-9,-7,-9,10,-1,9,2,-7,-10,-9,10,10,-2,-1,-1,5,3,10,10,-5,-4,10,-10,6,8,2,5,-1,10,-3,2,-8,-10,8,10,-1,-10,2,-10,7,-4,-5,2,7,7,1,-10,6,-9,1,6,4,5,-5,4,2,-2,6,-10,-5,7,-8,-5,6,-7,-1,-9,10,-3,-8,6,5,-6,3,6,-4,-4,-9,-7,2,1,8,10,-3,-2,10,-10,7,5,-1,7,-3,10,-9,4,8,5,-5,-3,-8,1,2,-10,-9,-10,-8,-8,8,-3,-4,8,-4,7,8,10,-4,5,-4,6,1,-6,4,8,-1,-9,-7,6,-8,1,-6,5,1,7,-4,-9,-10,2,8,-6,-2,-3,-9,-2,-5,-4,-5,-10,-8,2,-1,-5,-3,-4,8,9,2,8,-2,-10,-5,-9,-5,5,-7,5,7,10,8,10,-4,5,10,9,6,-2,-6,-1,9,4,4,-3,-9,10,6,5,-8,8,-8,3,-8,6,5,5,-5,9,10,10,-6,-9,10,-4,6,10,1,-9,8,5,5,7,-8,-9,10,-8,-2,1,-2,-2,-9,4,6,10,-9,7,-4,-1,-3,-3,-2,1,9,-5,7,1,10,7,-7,9,-2,9,1,10,-4,6,3,7,-9,5,10,1,9,3,3,-5,8,-2,-6,2,-3,-4,-6,-10,-5,-1,1,2,-10,-8,-9,-9,-7,-8,1,-4,10,3,-1,3,10,-9,-5,-10,10,-7,3,7]], dtype = "int32")#candidate|5805|(4, 520)|const|int32
call_5804 = func_1581_call(relay.reshape(const_5805.astype('int32'), [16, 13, 10]), relay.reshape(const_5805.astype('int32'), [16, 13, 10]), )
call_5806 = func_1581_call(relay.reshape(const_5805.astype('int32'), [16, 13, 10]), relay.reshape(const_5805.astype('int32'), [16, 13, 10]), )
func_2031_call = mod.get_global_var('func_2031')
func_2033_call = mutated_mod.get_global_var('func_2033')
call_5812 = relay.TupleGetItem(func_2031_call(), 3)
call_5813 = relay.TupleGetItem(func_2033_call(), 3)
output = relay.Tuple([call_5780,call_5783,call_5790,var_5791,call_5804,const_5805,call_5812,])
output2 = relay.Tuple([call_5781,call_5784,call_5792,var_5791,call_5806,const_5805,call_5813,])
func_5820 = relay.Function([var_5791,], output)
mod['func_5820'] = func_5820
mod = relay.transform.InferType()(mod)
mutated_mod['func_5820'] = func_5820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5821 = relay.var("var_5821", dtype = "int8", shape = (11, 14))#candidate|5821|(11, 14)|var|int8
func_5820_call = mutated_mod.get_global_var('func_5820')
call_5822 = func_5820_call(var_5821)
output = call_5822
func_5823 = relay.Function([var_5821], output)
mutated_mod['func_5823'] = func_5823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1013_call = mutated_mod.get_global_var('func_1013')
call_5828 = func_1011_call()
call_5829 = func_1011_call()
func_1491_call = mod.get_global_var('func_1491')
func_1495_call = mutated_mod.get_global_var('func_1495')
var_5860 = relay.var("var_5860", dtype = "uint16", shape = (910,))#candidate|5860|(910,)|var|uint16
var_5861 = relay.var("var_5861", dtype = "uint32", shape = (10, 3))#candidate|5861|(10, 3)|var|uint32
call_5859 = relay.TupleGetItem(func_1491_call(relay.reshape(var_5860.astype('uint16'), [910,]), relay.reshape(var_5861.astype('uint32'), [30,]), ), 4)
call_5862 = relay.TupleGetItem(func_1495_call(relay.reshape(var_5860.astype('uint16'), [910,]), relay.reshape(var_5861.astype('uint32'), [30,]), ), 4)
output = relay.Tuple([call_5828,call_5859,var_5860,var_5861,])
output2 = relay.Tuple([call_5829,call_5862,var_5860,var_5861,])
func_5878 = relay.Function([var_5860,var_5861,], output)
mod['func_5878'] = func_5878
mod = relay.transform.InferType()(mod)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mutated_mod.get_global_var('func_5878')
var_5880 = relay.var("var_5880", dtype = "uint16", shape = (910,))#candidate|5880|(910,)|var|uint16
var_5881 = relay.var("var_5881", dtype = "uint32", shape = (10, 3))#candidate|5881|(10, 3)|var|uint32
call_5879 = func_5878_call(var_5880,var_5881,)
output = call_5879
func_5882 = relay.Function([var_5880,var_5881,], output)
mutated_mod['func_5882'] = func_5882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3471_call = mod.get_global_var('func_3471')
func_3472_call = mutated_mod.get_global_var('func_3472')
call_5930 = relay.TupleGetItem(func_3471_call(), 0)
call_5931 = relay.TupleGetItem(func_3472_call(), 0)
func_3019_call = mod.get_global_var('func_3019')
func_3022_call = mutated_mod.get_global_var('func_3022')
var_5948 = relay.var("var_5948", dtype = "float32", shape = (300, 2))#candidate|5948|(300, 2)|var|float32
call_5947 = relay.TupleGetItem(func_3019_call(relay.reshape(var_5948.astype('float32'), [12, 50]), relay.reshape(call_5930.astype('int32'), [3, 15, 4]), ), 0)
call_5949 = relay.TupleGetItem(func_3022_call(relay.reshape(var_5948.astype('float32'), [12, 50]), relay.reshape(call_5930.astype('int32'), [3, 15, 4]), ), 0)
func_461_call = mod.get_global_var('func_461')
func_465_call = mutated_mod.get_global_var('func_465')
const_5951 = relay.const([9,-1,-9,-7,-2,-1,10,8,4,-2,-5,-5,-6,-6,-4,-2,10,-3,-2,6,-5,-1,-6,5,-8,-5,6,9,-2,1,-5,1,8,-4,4,4,-9,-4,-6,9,6,9,3,5,1,3,1,-1,8,9,9,3,10,5,6,10,-7,5,-4,-7,-8,-3,6,8,-9,-6,-2,-8,-8,-8], dtype = "uint32")#candidate|5951|(70,)|const|uint32
const_5952 = relay.const([[6],[-5],[8],[7],[4],[-5],[-2],[-4],[3],[1],[1],[-8],[4],[-5],[4],[5],[1],[-10],[4],[4],[-5],[-8],[-3],[-10],[-4],[-2],[2],[-4],[-5],[-7],[4],[-1],[-6],[5],[8],[9],[10],[2],[10],[8],[5],[-9],[-1],[5],[3],[7],[6],[6],[8],[-3],[1],[-10],[9],[-4],[6],[-5],[3],[9],[-8],[-2],[-6],[10],[-6],[5],[8],[-2],[10],[-1],[6],[10],[-9],[-10],[-10],[8],[3],[8],[-8],[3],[-7],[-10],[8],[5],[6],[7],[-3],[-1],[-3],[-9],[-1],[-10],[7],[-6],[-10],[-1],[-9],[1],[4],[5]], dtype = "uint64")#candidate|5952|(98, 1)|const|uint64
call_5950 = relay.TupleGetItem(func_461_call(relay.reshape(const_5951.astype('uint32'), [7, 5, 2]), relay.reshape(const_5951.astype('uint32'), [7, 5, 2]), relay.reshape(const_5952.astype('uint64'), [98,]), ), 0)
call_5953 = relay.TupleGetItem(func_465_call(relay.reshape(const_5951.astype('uint32'), [7, 5, 2]), relay.reshape(const_5951.astype('uint32'), [7, 5, 2]), relay.reshape(const_5952.astype('uint64'), [98,]), ), 0)
uop_5964 = relay.sigmoid(call_5947.astype('float32')) # shape=(3, 15, 4)
uop_5966 = relay.sigmoid(call_5949.astype('float32')) # shape=(3, 15, 4)
func_5362_call = mod.get_global_var('func_5362')
func_5365_call = mutated_mod.get_global_var('func_5365')
const_5969 = relay.const([2.447684,8.140340,-8.786882,7.724342,6.670160,4.862454,2.999845,0.328638,4.972342,7.705580,2.415957,-1.950382,0.805120,1.638342,9.074800,-4.401066,-4.335403,9.537161,-9.992409,-7.568952,4.038947,6.697545,-2.618125,-8.064422,8.421265,-6.312413,-4.336338,2.303073,-7.239751,-0.079057,1.885989,1.704733,7.343744,-9.375529,2.640376,5.363996,-4.928319,8.118723,5.059396,-2.267540,1.340647,-7.776031,2.511445,8.542379,-2.552672,4.290681,-7.195585,-5.511433,6.720285,-0.518232,6.745470,8.139811,-3.504825,-1.285043,-8.121542,-5.548116,3.142218,8.353837,-6.805683,2.822267,6.866449,-0.828916,8.287294,5.841281,1.089956,1.240798,4.464883,-4.478721,4.906893,-1.786895,5.968293,0.238455,7.000067,-0.535608,5.403325,-1.072102,-2.123328,-0.322685,9.549056,8.702616,3.436690,-5.278181,0.906488,-5.297634,6.444771,0.515982,-5.247001,-4.350325,0.060361,6.737314,-1.770582,3.794295,5.016414,-8.426973,3.909632,7.146203,-8.124149,-6.654000,7.139809,-5.092942,4.858689,3.213908,-9.769418,3.321428,-7.435690,-4.304997,-6.182735,-0.025806,6.404722,4.198745,-7.873347,-9.996485,-8.973706,-6.185067,5.804312,-7.172443,-5.630744,-6.678952,3.788254,1.263513,1.165910,-7.954470,1.790016,4.127757,1.797535,-4.926102,1.949224,-5.808731], dtype = "float64")#candidate|5969|(128,)|const|float64
call_5968 = relay.TupleGetItem(func_5362_call(relay.reshape(const_5969.astype('float64'), [16, 2, 4])), 0)
call_5970 = relay.TupleGetItem(func_5365_call(relay.reshape(const_5969.astype('float64'), [16, 2, 4])), 0)
func_4501_call = mod.get_global_var('func_4501')
func_4502_call = mutated_mod.get_global_var('func_4502')
call_5972 = relay.TupleGetItem(func_4501_call(), 0)
call_5973 = relay.TupleGetItem(func_4502_call(), 0)
func_2668_call = mod.get_global_var('func_2668')
func_2672_call = mutated_mod.get_global_var('func_2672')
var_5975 = relay.var("var_5975", dtype = "float64", shape = (6, 84))#candidate|5975|(6, 84)|var|float64
call_5974 = relay.TupleGetItem(func_2668_call(relay.reshape(call_5972.astype('int32'), [3, 15, 4]), relay.reshape(var_5975.astype('float64'), [504,]), ), 2)
call_5976 = relay.TupleGetItem(func_2672_call(relay.reshape(call_5972.astype('int32'), [3, 15, 4]), relay.reshape(var_5975.astype('float64'), [504,]), ), 2)
output = relay.Tuple([call_5930,var_5948,call_5950,const_5951,const_5952,uop_5964,call_5968,const_5969,call_5972,call_5974,var_5975,])
output2 = relay.Tuple([call_5931,var_5948,call_5953,const_5951,const_5952,uop_5966,call_5970,const_5969,call_5973,call_5976,var_5975,])
func_5991 = relay.Function([var_5948,var_5975,], output)
mod['func_5991'] = func_5991
mod = relay.transform.InferType()(mod)
var_5992 = relay.var("var_5992", dtype = "float32", shape = (300, 2))#candidate|5992|(300, 2)|var|float32
var_5993 = relay.var("var_5993", dtype = "float64", shape = (6, 84))#candidate|5993|(6, 84)|var|float64
output = func_5991(var_5992,var_5993,)
func_5994 = relay.Function([var_5992,var_5993,], output)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3161_call = mutated_mod.get_global_var('func_3161')
call_5999 = relay.TupleGetItem(func_3160_call(), 1)
call_6000 = relay.TupleGetItem(func_3161_call(), 1)
func_4455_call = mod.get_global_var('func_4455')
func_4457_call = mutated_mod.get_global_var('func_4457')
call_6005 = func_4455_call()
call_6006 = func_4455_call()
func_4758_call = mod.get_global_var('func_4758')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_6010 = relay.TupleGetItem(func_4758_call(), 0)
call_6011 = relay.TupleGetItem(func_4760_call(), 0)
output = relay.Tuple([call_5999,call_6005,call_6010,])
output2 = relay.Tuple([call_6000,call_6006,call_6011,])
func_6013 = relay.Function([], output)
mod['func_6013'] = func_6013
mod = relay.transform.InferType()(mod)
mutated_mod['func_6013'] = func_6013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6013_call = mutated_mod.get_global_var('func_6013')
call_6014 = func_6013_call()
output = call_6014
func_6015 = relay.Function([], output)
mutated_mod['func_6015'] = func_6015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1045_call = mod.get_global_var('func_1045')
func_1046_call = mutated_mod.get_global_var('func_1046')
call_6037 = relay.TupleGetItem(func_1045_call(), 0)
call_6038 = relay.TupleGetItem(func_1046_call(), 0)
output = call_6037
output2 = call_6038
func_6101 = relay.Function([], output)
mod['func_6101'] = func_6101
mod = relay.transform.InferType()(mod)
output = func_6101()
func_6102 = relay.Function([], output)
mutated_mod['func_6102'] = func_6102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1636_call = mod.get_global_var('func_1636')
func_1637_call = mutated_mod.get_global_var('func_1637')
call_6117 = relay.TupleGetItem(func_1636_call(), 0)
call_6118 = relay.TupleGetItem(func_1637_call(), 0)
func_3296_call = mod.get_global_var('func_3296')
func_3300_call = mutated_mod.get_global_var('func_3300')
const_6134 = relay.const([False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True], dtype = "bool")#candidate|6134|(336,)|const|bool
call_6133 = relay.TupleGetItem(func_3296_call(relay.reshape(const_6134.astype('bool'), [7, 8, 6]), relay.reshape(const_6134.astype('bool'), [7, 8, 6]), ), 0)
call_6135 = relay.TupleGetItem(func_3300_call(relay.reshape(const_6134.astype('bool'), [7, 8, 6]), relay.reshape(const_6134.astype('bool'), [7, 8, 6]), ), 0)
output = relay.Tuple([call_6117,call_6133,const_6134,])
output2 = relay.Tuple([call_6118,call_6135,const_6134,])
func_6152 = relay.Function([], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6153 = func_6152_call()
output = call_6153
func_6154 = relay.Function([], output)
mutated_mod['func_6154'] = func_6154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4141_call = mod.get_global_var('func_4141')
func_4142_call = mutated_mod.get_global_var('func_4142')
call_6244 = relay.TupleGetItem(func_4141_call(), 0)
call_6245 = relay.TupleGetItem(func_4142_call(), 0)
func_2339_call = mod.get_global_var('func_2339')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_6246 = func_2339_call()
call_6247 = func_2339_call()
func_1595_call = mod.get_global_var('func_1595')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_6263 = relay.TupleGetItem(func_1595_call(), 0)
call_6264 = relay.TupleGetItem(func_1596_call(), 0)
output = relay.Tuple([call_6244,call_6246,call_6263,])
output2 = relay.Tuple([call_6245,call_6247,call_6264,])
func_6273 = relay.Function([], output)
mod['func_6273'] = func_6273
mod = relay.transform.InferType()(mod)
mutated_mod['func_6273'] = func_6273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6273_call = mutated_mod.get_global_var('func_6273')
call_6274 = func_6273_call()
output = call_6274
func_6275 = relay.Function([], output)
mutated_mod['func_6275'] = func_6275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_6281 = relay.TupleGetItem(func_4758_call(), 0)
call_6282 = relay.TupleGetItem(func_4760_call(), 0)
uop_6289 = relay.sqrt(call_6281.astype('float32')) # shape=(12, 50)
uop_6291 = relay.sqrt(call_6282.astype('float32')) # shape=(12, 50)
output = uop_6289
output2 = uop_6291
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

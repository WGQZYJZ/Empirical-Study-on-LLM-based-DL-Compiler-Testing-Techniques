import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_150 = relay.const(8.504592, dtype = "float64")#candidate|150|()|const|float64
var_151 = relay.var("var_151", dtype = "float64", shape = (15, 15, 8))#candidate|151|(15, 15, 8)|var|float64
bop_152 = relay.divide(const_150.astype('float64'), var_151.astype('float64')) # shape=(15, 15, 8)
uop_156 = relay.acosh(bop_152.astype('float32')) # shape=(15, 15, 8)
output = relay.Tuple([uop_156,])
output2 = relay.Tuple([uop_156,])
func_170 = relay.Function([var_151,], output)
mod['func_170'] = func_170
mod = relay.transform.InferType()(mod)
var_171 = relay.var("var_171", dtype = "float64", shape = (15, 15, 8))#candidate|171|(15, 15, 8)|var|float64
output = func_170(var_171)
func_172 = relay.Function([var_171], output)
mutated_mod['func_172'] = func_172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_223 = relay.var("var_223", dtype = "uint8", shape = (5, 2, 16))#candidate|223|(5, 2, 16)|var|uint8
var_224 = relay.var("var_224", dtype = "uint8", shape = (5, 2, 16))#candidate|224|(5, 2, 16)|var|uint8
bop_225 = relay.less(var_223.astype('bool'), relay.reshape(var_224.astype('bool'), relay.shape_of(var_223))) # shape=(5, 2, 16)
func_170_call = mod.get_global_var('func_170')
func_172_call = mutated_mod.get_global_var('func_172')
var_229 = relay.var("var_229", dtype = "float64", shape = (1800,))#candidate|229|(1800,)|var|float64
call_228 = relay.TupleGetItem(func_170_call(relay.reshape(var_229.astype('float64'), [15, 15, 8])), 0)
call_230 = relay.TupleGetItem(func_172_call(relay.reshape(var_229.astype('float64'), [15, 15, 8])), 0)
func_170_call = mod.get_global_var('func_170')
func_172_call = mutated_mod.get_global_var('func_172')
call_234 = relay.TupleGetItem(func_170_call(relay.reshape(var_229.astype('float64'), [15, 15, 8])), 0)
call_235 = relay.TupleGetItem(func_172_call(relay.reshape(var_229.astype('float64'), [15, 15, 8])), 0)
output = relay.Tuple([bop_225,call_228,var_229,call_234,])
output2 = relay.Tuple([bop_225,call_230,var_229,call_235,])
func_245 = relay.Function([var_223,var_224,var_229,], output)
mod['func_245'] = func_245
mod = relay.transform.InferType()(mod)
mutated_mod['func_245'] = func_245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_245_call = mutated_mod.get_global_var('func_245')
var_247 = relay.var("var_247", dtype = "uint8", shape = (5, 2, 16))#candidate|247|(5, 2, 16)|var|uint8
var_248 = relay.var("var_248", dtype = "uint8", shape = (5, 2, 16))#candidate|248|(5, 2, 16)|var|uint8
var_249 = relay.var("var_249", dtype = "float64", shape = (1800,))#candidate|249|(1800,)|var|float64
call_246 = func_245_call(var_247,var_248,var_249,)
output = call_246
func_250 = relay.Function([var_247,var_248,var_249,], output)
mutated_mod['func_250'] = func_250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_472 = relay.var("var_472", dtype = "int8", shape = ())#candidate|472|()|var|int8
var_473 = relay.var("var_473", dtype = "int8", shape = (15, 16, 6))#candidate|473|(15, 16, 6)|var|int8
bop_474 = relay.greater(var_472.astype('bool'), var_473.astype('bool')) # shape=(15, 16, 6)
output = relay.Tuple([bop_474,])
output2 = relay.Tuple([bop_474,])
func_484 = relay.Function([var_472,var_473,], output)
mod['func_484'] = func_484
mod = relay.transform.InferType()(mod)
var_485 = relay.var("var_485", dtype = "int8", shape = ())#candidate|485|()|var|int8
var_486 = relay.var("var_486", dtype = "int8", shape = (15, 16, 6))#candidate|486|(15, 16, 6)|var|int8
output = func_484(var_485,var_486,)
func_487 = relay.Function([var_485,var_486,], output)
mutated_mod['func_487'] = func_487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_618 = relay.var("var_618", dtype = "int8", shape = (9, 2, 13))#candidate|618|(9, 2, 13)|var|int8
var_619 = relay.var("var_619", dtype = "int8", shape = (9, 2, 13))#candidate|619|(9, 2, 13)|var|int8
bop_620 = relay.minimum(var_618.astype('int8'), relay.reshape(var_619.astype('int8'), relay.shape_of(var_618))) # shape=(9, 2, 13)
output = bop_620
output2 = bop_620
func_624 = relay.Function([var_618,var_619,], output)
mod['func_624'] = func_624
mod = relay.transform.InferType()(mod)
var_625 = relay.var("var_625", dtype = "int8", shape = (9, 2, 13))#candidate|625|(9, 2, 13)|var|int8
var_626 = relay.var("var_626", dtype = "int8", shape = (9, 2, 13))#candidate|626|(9, 2, 13)|var|int8
output = func_624(var_625,var_626,)
func_627 = relay.Function([var_625,var_626,], output)
mutated_mod['func_627'] = func_627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_878 = relay.var("var_878", dtype = "float32", shape = (3, 13, 14))#candidate|878|(3, 13, 14)|var|float32
uop_879 = relay.sigmoid(var_878.astype('float32')) # shape=(3, 13, 14)
func_245_call = mod.get_global_var('func_245')
func_250_call = mutated_mod.get_global_var('func_250')
const_885 = relay.const([[9,-9,-4,1,-6,4,7,9,2,6],[7,-6,6,-7,3,4,-5,-6,7,-4],[6,-8,-10,8,-6,-5,-2,4,-9,2],[8,-6,10,-1,-7,-1,3,-8,10,-6],[-2,9,-3,2,4,4,10,7,1,-9],[5,1,-9,2,7,-6,-10,-3,-10,5],[-8,9,8,-10,-6,-7,-8,2,9,7],[-3,-5,1,-5,4,6,8,4,1,-5],[2,1,-2,7,6,-7,8,1,-1,-10],[-6,-1,-2,-2,-6,10,-1,-5,-4,4],[6,-1,5,-6,10,-3,2,5,-6,7],[-4,-9,-9,-7,9,-5,3,1,-7,4],[3,-6,-1,1,7,-1,-6,-7,-7,10],[-8,-2,8,-8,-2,-4,4,-4,-10,4],[4,10,8,-6,2,2,8,10,9,3],[-4,8,7,-3,-8,6,-4,1,4,6]], dtype = "uint8")#candidate|885|(16, 10)|const|uint8
const_886 = relay.const([9.352863,-7.802070,-3.837175,0.828255,-7.107232,-6.186542,8.874918,-4.397447,-5.794829,3.995515,-6.613164,-0.834339,3.579522,-4.329176,-2.467761,-9.090411,-5.970970,-5.395087,-7.431406,-3.284499,6.580079,7.871618,2.302979,-2.340895,-9.480677,3.192508,6.950650,-1.788841,1.130568,-4.303208,-9.608433,3.901878,6.115570,8.878156,-2.851402,-5.054163,-0.595961,-6.392462,-1.407444,8.591820,-3.081362,0.046192,9.692752,-3.059311,-5.703730,-0.901290,-8.748435,2.528131,0.696698,6.012360,6.190851,-0.998729,1.362550,3.980295,0.547184,-5.475342,5.441588,7.817054,7.635176,3.554299,-6.288628,-7.523598,-3.952390,-2.911305,-0.350342,3.164790,-5.642549,4.261173,-8.649337,4.777488,-5.102813,-9.874439,8.368419,-1.713338,8.710360,-3.049482,2.646527,-4.474021,5.930961,-0.130431,-0.744718,7.939884,8.623898,-5.505049,1.305762,2.815466,5.679211,5.425730,2.262790,1.568178,2.303390,6.531244,-3.118161,-6.306834,-0.498331,8.355110,-9.686911,3.737766,-2.524826,-5.419441,4.383211,0.153473,1.956500,1.744693,-7.602413,3.489058,0.991407,-1.130142,7.910726,7.407119,4.214957,-2.262812,2.933291,6.929089,-0.538561,5.838007,1.518282,-6.057667,3.747195,-4.794385,0.264696,0.430476,-2.255468,-3.179795,1.293328,1.768081,3.946043,-6.190115,-3.457163,-1.129449,5.832891,-6.838229,-9.721049,2.826528,7.908069,8.584276,-1.891220,2.852794,-2.134404,-5.926044,9.944241,0.193717,5.601620,3.768830,9.682644,-3.315009,4.903600,-7.994002,-6.761039,7.616549,9.467102,-7.846772,6.508816,-7.638493,7.364364,3.395684,-7.290359,1.222197,3.081004,2.921740,-1.195051,6.996821,4.218310,3.264403,-4.884495,4.192949,7.065038,6.773422,9.877936,5.442749,-4.861857,1.321381,0.364708,-2.792234,9.401657,9.993510,-0.561991,8.937208,-0.738727,5.153016,9.649521,-9.214047,-4.370160,0.744073,3.689617,-8.432998,-1.061217,7.070219,1.551818,-7.645367,3.844742,-6.208272,-8.334144,3.837525,4.053795,3.334064,4.214618,0.583439,2.575776,7.375420,0.374678,-7.651379,5.439382,4.834732,-3.198896,7.761207,-8.768883,4.661847,1.274916,3.108596,3.534535,9.456345,2.991544,-4.164652,-2.751464,5.446821,3.151240,5.006697,8.465460,1.873529,-0.407424,-7.567591,0.852506,0.777212,-1.351613,4.631343,-6.504361,6.223734,4.411444,-9.830105,8.299463,-2.823155,-5.990456,-5.791048,-5.234598,1.099317,-3.845519,6.514962,1.693447,9.757738,-9.138955,4.036909,8.002687,-4.528100,-4.191471,-0.552588,-9.954142,-7.006034,-7.535595,1.178825,7.147859,4.138114,-9.640701,7.939653,-9.199296,4.108015,6.726291,6.514602,6.387356,2.446262,-8.276728,-4.709447,-3.381816,3.843636,1.885128,-0.297228,9.078677,-7.514484,-5.529753,4.476452,-2.247680,4.840121,2.168051,4.806328,-3.613671,-2.210968,-2.445054,-0.294894,-3.267928,-2.221358,-1.974898,-7.913239,-6.611190,6.797536,-8.229271,5.107484,0.857642,-3.177268,9.549663,-1.427063,-8.081738,6.949587,7.976579,-4.928480,6.113372,5.496923,3.816345,-3.302455,-4.608318,-2.702715,-3.463096,-1.943668,9.584121,5.633421,-7.650272,-6.131356,-5.669919,0.688732,9.417072,2.834333,-5.117877,-7.699339,-2.068869,-9.341596,-1.113506,9.952423,-8.233776,5.194207,-1.380079,7.813946,-1.528904,-4.922598,1.083093,-0.056834,3.615596,1.632624,-4.920547,4.296841,-4.891103,7.950298,-4.836081,-5.134681,-8.749465,-7.718047,-1.303297,5.628802,-1.639030,1.899774,-1.096055,-0.688710,-1.305715,2.605222,-8.498440,2.565452,-6.433421,5.190690,-8.086202,-7.834243,6.072266,8.426458,-1.759201,-6.937312,-9.754953,-9.532626,4.214095,-4.514370,-5.276882,-9.914111,-4.255839,-4.385883,4.126896,-0.276480,7.379543,-4.641027,0.091206,-8.054639,5.417438,-4.404594,-0.401226,-0.119573,-9.781837,8.055610,-6.220592,6.793174,-4.212800,-9.423548,9.373094,5.361230,1.306307,-3.541185,8.425156,-5.226408,4.485195,3.572304,4.036289,-3.268117,-6.056635,-1.373482,7.325254,-5.897267,5.461943,8.123205,1.515361,2.837394,8.022661,4.825249,-2.480627,3.540604,2.954365,-1.805342,-7.124998,-2.455342,-1.978798,9.909433,-6.532038,8.342839,-2.219204,-7.888101,1.093231,-3.171533,4.198037,-4.231993,3.610991,-9.513133,-8.619408,3.792023,4.160961,2.193332,6.060151,6.450622,-5.358520,6.010313,-1.370490,-3.806017,-1.105006,-8.548799,6.608343,7.847939,-6.933862,5.415453,-5.087104,0.358230,-1.425722,-2.093987,5.091980,5.752542,-5.463858,1.887739,-6.588308,7.304097,-5.950297,0.808634,-7.406997,4.792626,-0.071451,7.084790,1.309304,-8.118409,3.957459,9.289107,-5.363208,1.448733,-4.354064,9.942154,-9.216111,3.085886,-0.639176,-2.340182,9.167036,2.671446,-3.741929,4.142250,6.799059,3.305976,-5.952758,-0.527163,0.545812,9.558400,-4.875044,7.081598,7.710543,6.507308,1.582625,-7.130853,4.379835,-7.847374,-7.131840,-5.880159,7.923537,2.336564,-9.781892,-3.121459,2.649744,8.265754,4.040562,-2.222596,4.086013,-7.048687,-9.859815,-3.543599,5.014850,2.045085,-3.795758,5.143971,-2.166516,7.072426,-5.022462,-7.590175,0.562802,8.213622,-4.484038,-1.309304,-9.786366,-1.584651,5.769062,-5.702360,3.603804,8.433490,9.834787,4.586790,6.348188,1.526279,3.936867,0.299687,5.734908,0.977420,-1.192606,-9.039783,-8.174347,0.373915,4.730721,-5.637599,-9.513798,-2.576276,0.364614,1.658348,-2.198810,-4.773562,-2.789617,-9.598040,5.082774,-0.566691,1.518932,-4.093809,6.543754,-2.501905,0.161161,-2.133152,-9.973947,-0.068109,-5.151606,-3.302639,-8.930463,-3.806841,-0.189253,-2.043477,-3.965280,7.564573,9.656167,-7.499445,-2.005807,2.467840,3.103922,8.512801,-0.621546,8.309095,5.667513,4.756372,1.371929,-4.785332,8.481072,7.716967,4.421958,3.383552,-4.069977,-7.021195,-7.499656,-5.546278,0.681773,2.848500,8.690139,-4.457790,-9.843614,-6.872199,-1.426046,1.668264,-0.512106,5.024874,-9.698535,-3.493030,-2.852754,8.889605,1.591718,8.068733,5.160675,-8.058137,2.830643,5.782483,6.676968,6.603562,-5.610056,6.584756,3.681539,0.915417,4.773017,-9.561450,-9.869382,5.946353,-0.285609,-6.532378,3.828725,-8.023042,5.954560,2.792667,-8.258923,-4.187606,0.687879,2.593223,7.514924,-5.679717,-3.280090,-9.891670,-6.149705,-3.523578,-9.285185,-4.556831,-7.829094,6.569882,-5.861828,-4.740615,9.610951,-7.311702,-4.033898,-9.238125,-6.348269,-3.152943,0.015854,1.923667,-7.691050,-0.929667,-4.517742,9.454248,-7.839852,-6.260683,2.908574,0.854118,-4.899671,6.341818,2.238773,-6.910526,4.778657,-5.946592,1.681932,-9.989959,-3.729058,1.765509,-6.442213,2.913044,5.704322,2.480755,-4.774280,9.545173,-6.376301,8.829435,-8.289319,1.707751,-7.109529,6.374569,4.501934,-1.881887,-3.300433,-4.197872,-4.221590,4.677724,-2.299356,-2.679801,1.223037,1.784938,-0.747589,7.822249,-2.948860,-8.469694,8.134059,-3.142282,-9.327192,-1.849127,-4.017822,8.149993,-5.472553,-1.760448,2.996403,2.582692,2.239559,8.850300,4.885076,-3.241039,3.687035,-9.037279,-4.945702,-9.040627,4.808451,-9.124408,7.962158,-3.062169,-4.778444,-8.783623,8.777228,0.937729,-1.830266,3.611555,0.599412,1.307788,-2.542003,2.694506,0.027150,0.754008,-7.918490,-9.148251,8.654393,7.232789,-5.819111,-5.745677,7.144327,-5.602827,-1.547267,5.306189,8.830890,-5.693344,9.875243,5.481904,7.178115,9.925506,-5.855870,-5.230730,1.549712,0.093755,6.723562,7.222393,0.934619,2.263845,9.500921,-4.979821,2.758264,0.676784,-3.360904,5.932955,1.073192,-6.135017,7.201322,-1.202759,-4.556437,-7.229636,6.541242,8.072301,0.646265,-0.416294,4.325370,3.991608,6.257380,4.135183,8.287867,-1.410569,-6.382980,-3.755985,2.064783,-5.233631,2.918157,2.638507,-0.265918,6.337696,8.453885,8.810978,-9.755762,-2.664649,3.259981,-3.193542,-0.477325,4.555084,9.417582,-8.048471,-3.797669,-1.960432,5.363611,-8.261379,-9.118707,9.282647,0.285795,5.026476,-0.985821,-7.491846,0.457206,-8.472416,6.605142,-1.509597,-3.766415,3.687632,4.371552,-5.277096,5.326590,5.414515,-5.452689,-0.148436,6.329252,-4.464872,9.149331,8.540161,6.048853,-3.107167,3.922812,5.388972,-9.546461,7.553126,-5.071467,-6.194199,-4.227082,-4.539987,0.883657,9.403507,-5.359806,-4.513431,-4.452470,-8.095637,6.190416,-0.612767,-3.069865,-1.027816,-9.732389,-7.278571,7.889218,-9.331098,-3.724712,4.504915,4.287290,-1.249087,-2.747420,9.958102,-1.605830,-1.758621,4.806256,2.350787,-0.517540,-8.479904,2.381616,2.031924,8.397721,-1.781101,-2.110831,4.387759,-2.508199,6.740982,-8.141417,0.292080,6.846063,3.420150,-0.061703,-2.409259,-6.622200,6.556353,7.120394,3.731977,8.657969,9.831308,7.775968,6.871519,-2.024333,-1.658349,-6.111783,-8.906065,5.602076,-8.462657,-7.364947,-8.586793,1.809482,-3.684265,-1.125596,0.718718,7.394583,-8.720212,-0.030556,8.715438,-7.616794,1.422069,3.871633,-5.626388,2.362799,8.329906,1.876916,9.397265,7.909809,-7.423600,8.240624,8.257124,-6.372790,9.256503,-6.733665,7.596679,-1.490703,3.075312,-8.834327,-1.340926,-7.803460,1.013447,0.125330,-8.159379,-0.902485,-8.965099,-7.736833,6.619444,9.459827,4.505659,3.437143,0.823537,-5.218394,4.263119,-0.525815,-0.955281,1.767582,7.187571,-3.552475,-3.527370,-0.756979,-8.449299,-3.793432,6.585565,-6.859967,5.782594,7.091965,2.228296,5.935985,1.337032,-0.119484,-8.403953,4.432684,-7.862436,1.193099,0.584694,-5.593637,2.298414,7.701061,-1.721385,3.856724,2.591865,-0.010381,-4.549831,7.345818,-9.791660,-2.759251,-2.409488,-6.781043,2.827343,1.241103,6.365635,1.824049,-1.557835,7.609739,-5.758651,4.715532,2.950980,5.302085,8.896088,0.575486,-6.388435,2.038120,-3.769877,-3.566071,7.357209,-4.861942,4.197265,9.873758,-8.505833,-7.155142,-3.417689,-2.305085,-3.749371,6.085313,-3.586713,3.140031,-6.909947,0.135571,-6.269760,9.895537,1.982141,-3.329585,4.793832,5.827258,-3.472889,-1.073956,2.953069,-6.514722,-4.734843,0.857626,0.528513,-9.452833,7.668753,-9.873143,4.038569,-8.909911,7.081788,8.311807,-4.983387,-9.720869,-5.983086,8.796897,3.836307,2.352785,-0.895406,-4.765428,6.182393,4.280520,9.202200,-0.150632,3.110752,8.226116,3.038082,3.981535,2.097053,-8.947806,9.351054,0.380269,-8.945539,-9.481746,-5.987958,-1.316920,3.294803,-6.320211,5.511871,4.860005,1.604130,2.120774,5.729222,7.971626,-1.091466,3.537746,3.011437,-4.171230,9.070842,-3.547212,9.789032,-2.348200,5.707119,8.788654,8.068818,7.339871,-5.343317,-7.489306,-9.924440,-9.178817,9.989668,-9.461808,6.004882,-0.472245,3.744662,-6.041545,7.855977,-6.609489,2.592406,6.010931,-9.844280,-1.101851,1.580859,8.094455,-4.308738,-4.753039,6.752703,-3.260056,0.787034,0.480174,-4.414860,-8.658280,-9.806618,-7.777845,-0.927364,0.761029,-2.153142,6.275044,-7.107341,6.935051,7.710279,-4.342028,-5.172984,1.637775,-9.192586,1.355388,-9.851659,-1.425866,-3.506922,-6.292817,9.268752,0.414258,1.348343,5.413816,0.409458,-1.157171,4.972032,0.852229,-8.169496,8.191350,-0.241886,2.990063,-3.592259,4.881718,-4.055826,-4.215873,1.030700,1.495864,-7.454288,-7.928234,-6.474864,-1.595740,-4.148693,4.940332,-7.494248,4.451352,6.478686,3.761882,-0.028470,-9.570628,0.283472,-2.626150,4.266029,0.661537,2.950911,1.442680,5.300532,1.427851,-8.505347,-7.056025,1.795515,0.640805,-1.019670,1.285439,5.069334,8.476811,-0.357243,-0.069237,2.753704,0.661353,9.776624,-0.838697,2.093065,-9.266393,6.875703,-3.808814,-8.726660,0.128178,3.675262,-4.740478,9.159473,2.520096,0.077464,8.132255,9.445577,5.891454,4.861378,8.071774,0.374567,-1.480002,-0.032471,-0.027306,-1.886498,4.759879,-2.549018,0.049044,0.928366,7.892585,-4.716032,-1.751848,5.627953,-8.090228,8.210869,6.657619,-9.257632,6.598333,3.691484,2.388534,-0.088703,0.469974,-8.115981,-0.282739,9.474675,8.254914,-9.898266,2.722606,3.156453,-9.258482,-2.634113,-6.156096,-0.505153,8.401759,6.668891,2.792573,-1.807080,-1.480693,0.987078,-0.485970,-3.882374,-2.247148,7.169698,-2.517747,-0.989578,-9.192817,6.819559,7.427945,-9.215645,5.592135,5.807499,7.383163,3.825939,9.969411,-4.774487,2.949108,9.000988,3.533367,5.217938,6.157898,0.130491,-4.457201,-4.424075,-6.064351,0.283972,-6.535616,-7.233935,-5.627911,9.417326,5.777514,7.114350,-7.082238,-3.655756,-7.212099,-1.629054,5.505510,7.312723,-6.400306,6.620410,-1.515456,-8.676098,-3.438171,1.790946,-4.441879,-8.846043,-0.925258,-0.011038,-4.455383,5.133762,-2.668504,-7.594164,2.937369,-0.405383,-0.224539,-0.768951,-9.701379,1.517027,0.967318,6.502453,-2.892450,3.929394,0.953437,6.106789,3.881165,-7.110158,-8.878514,7.370608,-8.427654,3.510575,-2.935718,-5.187961,-0.760028,6.038896,-0.141788,2.385107,-6.002708,6.016915,-0.962230,6.106986,9.150312,-7.286665,-9.813345,6.323630,2.199428,7.390769,-9.558157,-0.663115,-1.370302,8.448205,-4.050188,3.931108,2.750748,-4.963043,9.081825,0.189247,-4.133875,5.249782,-2.212195,5.209141,2.933832,3.607074,-2.183685,6.011515,6.225835,9.628602,8.935763,-4.009643,-2.483014,7.242056,-9.592352,-5.043165,-0.876268,5.325883,0.528398,-3.386550,-0.028531,-9.882630,7.972738,0.597754,-6.819792,-5.163286,1.118400,6.171145,4.778970,0.268222,7.954075,-8.003207,1.483738,-5.940918,8.784500,-5.365476,-5.474512,-4.065325,-1.984878,-3.285298,9.926006,-0.597296,4.704251,-5.270213,-5.081724,-9.962683,6.325667,5.663609,8.304756,1.381262,-8.144066,-6.539912,2.811530,-3.058249,-4.177478,-6.848601,4.479995,-5.149756,-0.951629,-4.237686,-3.025876,6.684371,2.021617,6.004826,-1.539353,9.930634,-0.920656,-4.078196,9.142592,3.951178,9.904950,0.096374,-3.679802,-2.522271,-9.511181,-8.468540,2.945326,-4.463621,-3.352691,0.969893,8.308947,-4.732183,-6.083520,9.140636,7.114308,7.585935,-4.952127,-1.100700,-4.510921,-8.266799,3.094636,-2.830956,-1.759599,3.096614,-2.026591,3.574156,-3.650398,2.968234,-0.413479,-5.715722,4.636744,7.824491,-8.564999,-7.392350,-8.317270,7.924332,9.332271,-6.567838,-9.038569,6.425124,6.157729,-0.002306,-3.773105,-5.490723,-3.370611,-7.207942,9.168989,-8.374212,4.360706,-3.289010,9.218750,6.402498,8.839809,-1.262830,-7.666004,-7.080749,-6.770753,7.397519,-1.834851,-2.659946,-9.430097,-5.301139,-1.742416,3.817573,-2.920132,3.330913,2.427642,-5.436232,-6.293223,-6.686645,-5.946242,-2.910679,-3.209524,8.619618,-3.289468,9.369246,2.988556,-9.498169,-6.647333,8.281176,5.122643,-3.227490,-4.436795,-4.705981,8.715006,9.645581,7.403683,2.057354,4.497759,6.858963,-8.380579,-3.094977,-3.051289,7.841273,-6.127864,7.613402,8.108749,-4.322750,5.257291,-4.865729,1.370400,-7.204668,-6.966583,-5.302128,8.950041,6.803970,1.840770,4.406589,-8.522501,-8.376435,7.589190,-5.383180,-8.748536,-8.369749,3.330032,-2.460601,-7.170493,-0.251307,-1.781070,-7.461323,-2.175841,6.879145,9.699418,4.360583,8.641698,-8.949414,-8.821490,6.040309,8.500424,-9.532063,7.342197,-0.961095,8.484095,-6.420806,8.465501,3.315253,-5.739006,1.761572,5.667314,1.595903,6.934921,-4.178666,-5.679650,-6.732318,8.876398,9.256472,8.416675,7.623275,-8.220030,9.236640,-3.874165,1.399262,3.590038,6.624112,3.132425,-3.113550,-3.226134,-2.075309,-9.821332,8.261906,8.875681,-2.119983,-1.864751,-3.204932,1.000513,-1.603734,-3.906910,-9.447832,5.537769,6.658707,-3.965399,6.952468,-5.181248,-5.801709,-6.571284,-1.638395,-1.771794,-9.351194,-3.986171,8.878568,-9.599079,-3.294481,4.290648,3.917317,-9.267326,5.586730,-6.861635,3.759930,4.676101,5.842893,3.115769,1.430180,3.222111,-6.927199,-2.529133,6.763615,-2.277127,-1.686420,2.023803,-8.138718,-6.254725,-3.784040,-7.150353,3.125729,0.972738,9.335770,-0.463579,-8.126972,-2.641668,-4.462907,-3.493867,-6.987662,2.952780,-7.275638,-7.332563,-4.992718,2.025989,9.214135,-7.961941,7.380948,1.944550,2.272085,3.772787,9.206619,-2.619017,0.087687,-0.585397,0.821232,-7.475064,-7.492783,-2.919341,4.853229,3.964140,2.788780,2.933933,-6.246164,2.608401,-1.683409,4.766360,5.779308,0.304915,0.956379,-7.429617,1.293757,-6.996029,0.563531,-9.222508,-1.981802,5.277848,-8.471136,-5.166342,2.630819,-2.067555,5.191335,-9.848318,5.584044,9.648609,7.294580,-5.297151,-8.191893,-3.128521,1.940185,-6.454641,-3.416791,-3.385853,-0.547363,5.653097,-8.136189,2.739722,-8.124228,-7.266275,-5.748352,-0.470489,1.853336,-2.632851,3.358776,0.285331,-4.381034,7.805544,7.021290,4.956493,-7.741837,-2.069332,-4.739230,-8.725412,1.708784,-4.530338,-5.084742,7.189401,8.679101,9.189333,-7.672106,-0.114260,-6.447821,9.262929,3.700291,1.230345,-1.808063,-8.361336,-5.069703,7.001902,-7.877299,8.402588,-6.941513,-4.285697,-5.664292,-7.238493,7.763899,1.486861,-3.329998,6.166488,7.538345,-0.647288,-9.014571,-5.487180,9.779161,-3.247818,-5.501944,0.919884,-8.781704,-4.115526,5.024283,1.960082,0.130211,9.898812,-6.985650,8.658441,5.650899,4.630758,3.028702,-0.109924,7.183189,-7.725153,-0.266541,-2.827449,6.166920,-2.308396,9.553877,8.296585,-1.046519,8.716820,-6.415089,9.455693,-7.916988,0.405904,-1.512090,-1.346945,0.403766,3.648886,-7.285619,-6.429909,4.502101,5.334976,3.942687,1.998638,0.890220,-7.561633,-9.585405,4.575789,-3.861982,-4.039253,7.531846,-0.376195,7.303785,-8.005011,0.815058,9.237725,6.609614,3.406849,-0.925283,3.273696,8.764772,8.883743,9.160465,-1.831327,8.109765,-1.621734,-4.470885,3.691920,5.793748,7.482240,7.507295,2.908050,4.590883,9.876919,0.658885,5.171106,-0.212410,-1.059129,-0.645805,9.510690,9.286471,-6.122993,-3.105648,3.209273,4.065869,-6.162963,-3.680228,-5.162806,-0.203414,3.822959,-3.766808,6.789929,9.070184,-9.937055,-5.516990,3.956987,9.746984,3.955633,-6.557286,4.788707,-8.612256,-8.652263,3.591184,-4.354139,-1.203049,-7.578851,2.990212,0.264729,5.827294,-5.670323,2.413256,-5.635468,0.821433,-6.148012,-2.655062,7.682963,2.779969,6.483583,-7.210882,-8.187713,2.537972,9.724938,-2.480782,3.804398,-2.895829,-4.216526,-7.375823,0.589517,-0.105233,1.933580,5.178956,3.469303,-9.026463,-4.814860,6.128616,3.087107,9.920107,9.492894,0.704947], dtype = "float64")#candidate|886|(1800,)|const|float64
call_884 = relay.TupleGetItem(func_245_call(relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_886.astype('float64'), [1800,]), ), 1)
call_887 = relay.TupleGetItem(func_250_call(relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_886.astype('float64'), [1800,]), ), 1)
uop_888 = relay.tan(uop_879.astype('float32')) # shape=(3, 13, 14)
func_245_call = mod.get_global_var('func_245')
func_250_call = mutated_mod.get_global_var('func_250')
call_891 = relay.TupleGetItem(func_245_call(relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_886.astype('float64'), [1800,]), ), 0)
call_892 = relay.TupleGetItem(func_250_call(relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_885.astype('uint8'), [5, 2, 16]), relay.reshape(const_886.astype('float64'), [1800,]), ), 0)
output = relay.Tuple([call_884,const_885,const_886,uop_888,call_891,])
output2 = relay.Tuple([call_887,const_885,const_886,uop_888,call_892,])
func_898 = relay.Function([var_878,], output)
mod['func_898'] = func_898
mod = relay.transform.InferType()(mod)
var_899 = relay.var("var_899", dtype = "float32", shape = (3, 13, 14))#candidate|899|(3, 13, 14)|var|float32
output = func_898(var_899)
func_900 = relay.Function([var_899], output)
mutated_mod['func_900'] = func_900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_974 = relay.var("var_974", dtype = "float32", shape = (3, 11, 10))#candidate|974|(3, 11, 10)|var|float32
const_975 = relay.const([[[-2.599687,-4.351394,-9.725735,1.733346,3.023374,2.350661,-4.096728,-0.952755,3.797067,-3.093701],[8.041189,-7.855704,9.601578,-0.590132,-1.970771,9.725584,-0.294493,0.773709,-5.267161,-7.899980],[7.307612,-9.169651,-8.954148,-7.942421,1.900524,7.457819,-9.762467,1.973510,5.354292,3.629629],[9.226259,-5.807786,-0.221762,4.006869,-6.792848,6.649394,3.628071,5.514625,-7.927947,3.027003],[-9.684590,-9.107828,-2.697386,8.729483,-7.093655,-1.804849,1.846395,7.872678,-8.614736,-5.786389],[-9.656402,5.900048,6.255833,-8.602034,-4.080278,4.076731,-6.565631,3.996247,4.098332,-9.487755],[7.904215,8.026815,-9.711979,9.974022,2.801052,1.296770,2.364670,-7.995829,-5.119937,-2.448952],[-7.598890,9.768402,1.566986,-9.044479,0.203305,-4.350962,9.915422,7.411307,2.685998,-4.424640],[-8.891739,-9.841303,-1.909085,-6.595311,0.831896,7.226781,-3.780760,5.436502,-8.844017,-3.367215],[-9.883465,-5.523397,7.963625,4.462951,-6.107377,7.500191,-7.357558,-7.176170,-3.891041,0.233939],[3.972698,-0.070433,3.131169,-7.557476,1.552166,-1.681755,5.249514,7.983470,-7.391090,4.843825]],[[-1.041733,-8.237494,4.173241,-5.202075,5.121824,1.457428,-8.427061,4.126528,3.557045,4.857145],[-8.219712,4.277026,5.019861,-0.015985,6.962767,-9.555506,2.704908,-1.834236,-3.986990,-5.139848],[-7.519682,-7.231983,9.721451,3.948978,9.302688,4.037425,-4.858880,-5.297064,3.681168,8.267347],[-4.503254,3.244771,-5.025119,-3.856115,-4.450320,8.962390,0.151681,3.250729,9.215880,7.297851],[-2.389197,-5.593861,8.930023,-8.282290,-7.088291,-9.797330,9.414036,-5.639656,8.461255,-4.240296],[6.679922,3.401439,-9.290145,-1.344615,7.250000,-4.409638,-0.402894,-8.141945,2.624697,3.222247],[-4.871414,3.921722,1.023719,-1.177770,-3.062401,-8.979409,-8.081273,-0.397545,-7.271292,-9.647868],[8.090190,2.596084,9.973227,6.773141,-3.715104,-0.596624,-6.398072,5.984118,1.295790,2.716273],[-4.517637,-6.745241,9.741881,3.410284,1.988732,6.013006,5.307733,-9.165716,-2.863015,9.507735],[-4.753345,3.410495,3.072025,-4.692713,-3.884763,1.084361,2.778830,9.819596,-5.477931,7.665307],[-2.625242,-7.833879,1.850028,9.730813,7.052292,3.803925,-4.564439,-7.651088,0.596378,7.288936]],[[-1.239438,-3.698138,-7.454924,-6.195715,0.240197,-5.330945,-4.628461,6.979910,5.943160,6.776010],[5.473018,6.294662,-6.221250,-6.776490,-3.432038,9.040989,-5.446316,2.967342,-2.823597,7.674227],[5.919296,2.213165,7.179324,3.503721,4.487303,7.097758,2.543940,4.325783,-4.004917,3.664198],[2.632101,-7.638074,3.754818,-0.731472,5.561080,4.549894,6.409270,8.414019,8.692441,0.710904],[9.031723,1.989168,6.999192,-6.115837,-5.793150,2.208454,8.109969,8.424038,8.305595,-0.001596],[-2.266285,3.792365,-0.969943,-6.293557,2.650482,9.247128,-9.299452,-0.700697,2.260562,2.236297],[-0.861379,7.057909,-1.000526,-9.902941,-6.133371,5.073075,-4.739598,-2.213688,9.515771,-7.690873],[-3.316675,4.546856,0.156649,6.372548,1.959039,-1.817761,2.628116,4.626072,8.661617,9.635883],[-1.404900,-0.389573,9.285755,5.410238,5.427766,7.129975,0.680285,-8.437454,-0.587559,1.833059],[-6.917341,-5.697564,3.392444,-7.524789,5.026071,-7.447217,-9.150575,5.847065,2.756275,-9.597032],[-3.840968,9.590522,-6.166943,-0.219432,0.001974,-1.695882,-3.028780,2.740115,-5.770363,-5.389065]]], dtype = "float32")#candidate|975|(3, 11, 10)|const|float32
bop_976 = relay.less_equal(var_974.astype('bool'), relay.reshape(const_975.astype('bool'), relay.shape_of(var_974))) # shape=(3, 11, 10)
uop_980 = relay.sin(var_974.astype('float64')) # shape=(3, 11, 10)
output = relay.Tuple([bop_976,uop_980,])
output2 = relay.Tuple([bop_976,uop_980,])
func_986 = relay.Function([var_974,], output)
mod['func_986'] = func_986
mod = relay.transform.InferType()(mod)
mutated_mod['func_986'] = func_986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_987 = relay.var("var_987", dtype = "float32", shape = (3, 11, 10))#candidate|987|(3, 11, 10)|var|float32
func_986_call = mutated_mod.get_global_var('func_986')
call_988 = func_986_call(var_987)
output = call_988
func_989 = relay.Function([var_987], output)
mutated_mod['func_989'] = func_989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1153 = relay.var("var_1153", dtype = "float64", shape = ())#candidate|1153|()|var|float64
var_1154 = relay.var("var_1154", dtype = "float64", shape = (11, 13, 9))#candidate|1154|(11, 13, 9)|var|float64
bop_1155 = relay.minimum(var_1153.astype('float64'), var_1154.astype('float64')) # shape=(11, 13, 9)
output = bop_1155
output2 = bop_1155
func_1161 = relay.Function([var_1153,var_1154,], output)
mod['func_1161'] = func_1161
mod = relay.transform.InferType()(mod)
mutated_mod['func_1161'] = func_1161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1161_call = mutated_mod.get_global_var('func_1161')
var_1163 = relay.var("var_1163", dtype = "float64", shape = ())#candidate|1163|()|var|float64
var_1164 = relay.var("var_1164", dtype = "float64", shape = (11, 13, 9))#candidate|1164|(11, 13, 9)|var|float64
call_1162 = func_1161_call(var_1163,var_1164,)
output = call_1162
func_1165 = relay.Function([var_1163,var_1164,], output)
mutated_mod['func_1165'] = func_1165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1425 = relay.var("var_1425", dtype = "uint32", shape = (14, 14, 15))#candidate|1425|(14, 14, 15)|var|uint32
var_1426 = relay.var("var_1426", dtype = "uint32", shape = (14, 14, 15))#candidate|1426|(14, 14, 15)|var|uint32
bop_1427 = relay.right_shift(var_1425.astype('uint32'), relay.reshape(var_1426.astype('uint32'), relay.shape_of(var_1425))) # shape=(14, 14, 15)
output = relay.Tuple([bop_1427,])
output2 = relay.Tuple([bop_1427,])
func_1454 = relay.Function([var_1425,var_1426,], output)
mod['func_1454'] = func_1454
mod = relay.transform.InferType()(mod)
var_1455 = relay.var("var_1455", dtype = "uint32", shape = (14, 14, 15))#candidate|1455|(14, 14, 15)|var|uint32
var_1456 = relay.var("var_1456", dtype = "uint32", shape = (14, 14, 15))#candidate|1456|(14, 14, 15)|var|uint32
output = func_1454(var_1455,var_1456,)
func_1457 = relay.Function([var_1455,var_1456,], output)
mutated_mod['func_1457'] = func_1457
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1465 = relay.var("var_1465", dtype = "float64", shape = (9, 15, 7))#candidate|1465|(9, 15, 7)|var|float64
uop_1466 = relay.acosh(var_1465.astype('float64')) # shape=(9, 15, 7)
output = uop_1466
output2 = uop_1466
func_1469 = relay.Function([var_1465,], output)
mod['func_1469'] = func_1469
mod = relay.transform.InferType()(mod)
mutated_mod['func_1469'] = func_1469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1470 = relay.var("var_1470", dtype = "float64", shape = (9, 15, 7))#candidate|1470|(9, 15, 7)|var|float64
func_1469_call = mutated_mod.get_global_var('func_1469')
call_1471 = func_1469_call(var_1470)
output = call_1471
func_1472 = relay.Function([var_1470], output)
mutated_mod['func_1472'] = func_1472
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1545 = relay.var("var_1545", dtype = "int32", shape = (14, 16, 14))#candidate|1545|(14, 16, 14)|var|int32
var_1546 = relay.var("var_1546", dtype = "int32", shape = (14, 16, 14))#candidate|1546|(14, 16, 14)|var|int32
bop_1547 = relay.bitwise_xor(var_1545.astype('int32'), relay.reshape(var_1546.astype('int32'), relay.shape_of(var_1545))) # shape=(14, 16, 14)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
var_1556 = relay.var("var_1556", dtype = "int8", shape = (1, 234))#candidate|1556|(1, 234)|var|int8
call_1555 = func_624_call(relay.reshape(var_1556.astype('int8'), [9, 2, 13]), relay.reshape(var_1556.astype('int8'), [9, 2, 13]), )
call_1557 = func_624_call(relay.reshape(var_1556.astype('int8'), [9, 2, 13]), relay.reshape(var_1556.astype('int8'), [9, 2, 13]), )
bop_1558 = relay.divide(var_1556.astype('float64'), relay.reshape(call_1555.astype('float64'), relay.shape_of(var_1556))) # shape=(1, 234)
bop_1561 = relay.divide(var_1556.astype('float64'), relay.reshape(call_1557.astype('float64'), relay.shape_of(var_1556))) # shape=(1, 234)
func_986_call = mod.get_global_var('func_986')
func_989_call = mutated_mod.get_global_var('func_989')
var_1563 = relay.var("var_1563", dtype = "float32", shape = (330,))#candidate|1563|(330,)|var|float32
call_1562 = relay.TupleGetItem(func_986_call(relay.reshape(var_1563.astype('float32'), [3, 11, 10])), 1)
call_1564 = relay.TupleGetItem(func_989_call(relay.reshape(var_1563.astype('float32'), [3, 11, 10])), 1)
uop_1591 = relay.atanh(var_1546.astype('float32')) # shape=(14, 16, 14)
output = relay.Tuple([bop_1547,bop_1558,call_1562,var_1563,uop_1591,])
output2 = relay.Tuple([bop_1547,bop_1561,call_1564,var_1563,uop_1591,])
func_1604 = relay.Function([var_1545,var_1546,var_1556,var_1563,], output)
mod['func_1604'] = func_1604
mod = relay.transform.InferType()(mod)
mutated_mod['func_1604'] = func_1604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1604_call = mutated_mod.get_global_var('func_1604')
var_1606 = relay.var("var_1606", dtype = "int32", shape = (14, 16, 14))#candidate|1606|(14, 16, 14)|var|int32
var_1607 = relay.var("var_1607", dtype = "int32", shape = (14, 16, 14))#candidate|1607|(14, 16, 14)|var|int32
var_1608 = relay.var("var_1608", dtype = "int8", shape = (1, 234))#candidate|1608|(1, 234)|var|int8
var_1609 = relay.var("var_1609", dtype = "float32", shape = (330,))#candidate|1609|(330,)|var|float32
call_1605 = func_1604_call(var_1606,var_1607,var_1608,var_1609,)
output = call_1605
func_1610 = relay.Function([var_1606,var_1607,var_1608,var_1609,], output)
mutated_mod['func_1610'] = func_1610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1846 = relay.var("var_1846", dtype = "uint64", shape = (14, 3, 9))#candidate|1846|(14, 3, 9)|var|uint64
var_1847 = relay.var("var_1847", dtype = "uint64", shape = (14, 3, 9))#candidate|1847|(14, 3, 9)|var|uint64
bop_1848 = relay.add(var_1846.astype('uint64'), relay.reshape(var_1847.astype('uint64'), relay.shape_of(var_1846))) # shape=(14, 3, 9)
func_1469_call = mod.get_global_var('func_1469')
func_1472_call = mutated_mod.get_global_var('func_1472')
const_1852 = relay.const([0.548068,5.027370,3.230467,5.414597,4.867441,2.518351,6.629781,7.579220,-2.687000,5.665042,-8.393855,6.427508,-1.388624,-8.360656,1.846801,5.942948,1.235828,0.380926,-9.208295,-3.744035,-9.527088,-8.395124,-3.214596,0.497737,-9.475589,1.876345,-2.110709,-3.402240,2.023447,-1.041177,-0.830974,4.521254,3.664185,-2.283157,-3.792082,4.013369,-9.927040,-0.556882,9.802588,-1.139818,5.816980,-2.891524,-3.882198,-7.053006,-6.409657,-0.477023,-6.153854,-2.503369,4.185352,-4.134298,7.860763,-0.360511,1.728940,-4.312624,-4.728296,-8.530971,-0.948931,-5.725153,3.550098,-7.612139,9.803495,-7.403026,-6.226753,3.534614,9.813367,0.325022,0.234562,2.266816,6.694654,-1.632848,-8.551001,1.389671,9.145302,4.908702,-2.404867,-9.693893,3.374014,8.356176,5.569177,3.693678,-7.915108,4.545914,-8.308334,-7.770124,-2.468925,-8.335077,9.695330,7.401603,6.424623,3.534823,-0.698684,6.501474,-6.934790,-7.090721,-5.756515,7.438621,-2.714263,-8.083852,6.425510,-8.139985,8.758258,-8.485811,-0.396338,-4.385084,-5.995005,5.270686,3.543174,-9.051035,-9.303471,-1.257092,-4.637195,4.191964,-3.989506,-4.982718,8.116898,-1.874118,3.835943,8.613327,-0.913144,2.894026,-2.660762,-8.559669,5.757624,0.961671,9.924728,-7.603045,7.096577,-4.948813,-3.765899,9.240539,-2.692428,-9.361425,-6.079525,5.716702,4.164752,-5.544911,-1.189043,-1.575174,0.391434,0.492002,7.465556,8.721376,3.230922,-8.301741,-5.172598,3.616412,2.108320,-9.530314,-0.114726,5.087573,-0.457744,2.508872,-5.293895,-5.840038,3.196608,-2.393219,-6.870932,-3.273207,2.355782,4.497716,-1.201526,-9.004647,-2.466529,-5.671732,8.583093,6.061754,2.589104,-6.578069,-9.875466,3.163569,-2.280577,-7.242345,8.282573,-7.870737,7.605303,-6.167520,0.495726,-1.858098,3.921079,-1.988823,-2.180960,-3.661749,-8.599072,4.987618,-5.637542,-2.350560,-8.070107,0.494873,0.558185,-4.019633,5.814560,9.628144,-8.022666,-8.052989,-9.963392,-7.607930,-0.101183,-4.632216,1.737336,8.453845,-9.431011,-5.209735,-5.646472,3.028483,5.289364,9.689951,-6.625019,4.225200,-5.999286,4.266318,-6.130549,6.918881,-8.869858,3.624839,7.536058,2.017745,8.761281,-7.895620,1.527403,1.977734,3.482191,9.896831,7.973067,-5.468654,6.660214,-0.096921,7.738590,-5.349653,7.274897,4.543795,8.601689,6.605632,-8.155454,-8.577693,3.386485,3.733737,-9.274130,-2.804419,2.187890,0.662668,-7.942803,6.601668,6.092517,-9.190064,6.696905,1.850798,-9.115303,5.164803,-2.027943,5.050261,-8.640740,9.904377,4.546084,-6.977648,-8.125261,9.593284,-4.849378,1.807644,3.916316,-6.406679,4.307277,9.764424,-6.860407,8.787302,-3.124428,-9.070012,8.314837,-0.850719,-2.896163,5.980113,-2.997387,7.009170,6.453297,4.401044,-8.528447,-5.719366,0.343781,-9.111721,-8.134694,2.873854,-7.264029,1.492215,5.702551,-4.374493,0.593519,-0.075526,9.429346,-0.820165,-2.601680,9.454578,6.437292,6.026699,9.148740,4.950064,1.372422,-1.281157,-2.122641,9.978763,5.701560,8.100293,6.463393,1.271447,-9.783590,-1.811165,6.632228,6.179019,0.621618,1.220459,-2.401009,-1.323368,0.531283,5.661129,0.250868,4.691168,5.183117,7.835350,3.309280,2.091153,-5.334503,-0.248232,4.309574,-2.131807,-5.750549,2.727878,-6.213530,-2.325421,-4.556846,-2.282346,-3.597234,7.542425,-0.822217,8.161463,1.160501,8.351930,-5.228200,7.187549,-3.527348,-3.878649,7.637746,3.930961,1.836915,-3.603387,-0.180874,7.816844,-1.453468,-9.224474,2.858570,-2.327595,-7.605983,-9.962141,-5.452583,-7.826563,-0.657220,2.651732,-4.161793,6.741061,6.099258,1.482923,-9.269465,-1.036857,8.881619,-7.997984,-8.926265,9.597480,-9.213670,5.935296,5.750127,9.509891,-5.457869,-6.020401,-2.045407,1.400322,8.266131,4.794162,1.342208,-5.346484,-6.247307,-9.693546,-1.919427,3.936851,5.419171,9.226325,-8.083772,-6.344798,7.108635,1.291637,7.901963,0.558710,6.716728,-0.843886,5.462262,-3.281619,0.873525,-9.634360,-6.708053,2.293752,6.896547,0.668265,8.637557,-5.869130,-0.470529,-9.139425,-9.452673,-6.470414,-6.600963,4.363542,4.287446,2.174236,-0.926077,-8.718308,8.321135,-9.652477,-8.737454,-5.367255,-5.460554,3.019490,-7.275973,-7.381954,9.602502,4.126032,4.703858,1.848614,-9.107902,-4.001926,8.793901,9.465052,-2.595635,4.143432,5.333528,-6.359672,-0.439054,-5.496803,-7.852154,-1.053667,6.397789,2.374562,-6.609972,-3.730174,-3.340501,7.077979,7.104409,-4.887652,-5.744453,9.718446,-1.216634,9.266278,0.565537,9.058797,-8.995131,4.041081,3.331213,8.209015,-7.342241,-4.864884,-2.445311,-6.480432,4.719902,4.076106,-2.293537,4.872814,-0.875415,3.636632,8.302977,5.443619,-4.681500,4.371703,-2.218675,1.127421,-3.254431,2.419994,1.669573,2.876504,-1.849329,4.616884,0.341243,1.446218,9.303925,1.769704,-0.747234,4.628125,6.801069,-1.293458,1.826032,-4.029600,-7.312109,-9.423893,7.684051,-9.587218,-9.100928,-3.030178,-3.152642,1.801824,8.409717,-4.104035,-5.851667,-0.244010,4.771142,8.249468,9.187752,-3.760952,7.475088,5.253836,-1.248373,-9.531052,0.327014,-7.699961,5.643034,-4.492630,-8.590432,-0.969958,-9.721282,6.099455,4.752616,-7.278834,-0.391245,-1.960179,0.483280,9.354192,4.213576,-2.455640,-9.198562,5.908517,-9.520929,-2.489682,-4.130500,6.624772,-8.707055,-5.908654,2.330570,-9.757574,-4.678558,5.747066,-2.921874,7.783245,8.432807,9.800347,2.693419,3.813876,-9.857870,-1.648792,-4.994122,0.764768,-1.048626,-6.098326,-1.322671,-8.042918,-2.413191,-7.598609,-5.114646,-2.530168,4.339023,4.872776,-4.245747,-0.134397,0.534139,-5.099289,9.390795,-8.175510,6.453320,7.277632,2.737444,-5.500206,-8.902463,-3.931800,2.173607,-7.583199,-2.652740,3.455688,-6.715267,5.237554,-4.499836,7.307560,9.221813,-7.299108,-7.006031,-0.936763,4.047947,9.591528,0.149222,-3.568579,7.139894,7.245728,-7.987173,-7.607993,2.052485,-4.894407,8.987237,6.226710,3.336453,-7.963765,4.485370,5.214047,0.585454,-1.930412,6.804524,1.712634,3.510092,-4.221100,3.908936,-0.821281,0.921490,3.876798,-1.368888,4.311067,-2.843929,-7.605641,3.757844,-2.904448,-6.191895,5.151095,8.128694,-3.041409,-5.478205,-8.691313,-7.118681,-3.790225,-9.063769,-9.505009,-4.249392,-4.435869,5.083221,-7.633707,1.277455,-0.249613,-0.954968,6.202477,-9.969969,-1.966366,-9.338599,4.804885,-8.385806,-1.286872,1.607195,7.620040,5.940674,-6.915380,-8.727585,5.723952,7.861555,-7.211896,5.818072,2.962369,0.769827,-3.716784,-6.678936,-1.308670,2.568131,4.200020,-3.029273,-6.672641,0.298103,-8.178551,-0.983197,5.864211,7.728543,2.213123,9.521779,9.073292,-1.775047,-1.898844,6.145863,9.629148,-1.730273,0.395927,-7.765337,-8.462879,-4.234874,0.962441,-9.033383,-7.558743,-7.072532,-9.667320,-0.455237,1.181842,-6.901162,0.617856,-1.399029,-9.999185,-7.822559,5.745342,-9.885377,-5.338988,8.343171,1.679711,-7.797978,8.088565,7.809829,-2.734693,2.391932,-2.868464,5.496489,5.436472,0.490803,-2.668420,0.043609,-4.731915,9.542402,-6.580439,-2.955388,-9.641686,8.150209,-1.010161,-9.436045,-1.625796,-2.412545,4.684703,5.111515,3.928062,-8.978993,-3.044323,-6.717170,2.900590,4.065099,-8.629121,1.688165,-1.475674,-3.840116,9.966988,6.440435,9.127047,0.620938,2.488943,4.298925,3.249870,7.170883,-6.547314,-7.503346,7.184604,2.846737,5.708452,5.473190,-2.861141,-3.611267,-7.422968,5.358176,8.064965,-7.541527,5.494847,-1.407767,1.814844,-7.497095,3.908351,-8.504547,-6.534885,-5.323350,-2.843940,9.884899,9.369054,6.603027,3.295877,2.435801,1.548626,-3.102809,-2.663534,5.177270,-6.322171,1.976628,-0.460830,-5.930323,1.829420,-0.664655,-4.355578,-1.542710,-2.081410,1.444836,3.063894,-8.549451,-6.587429,0.371190,1.999462,7.486136,0.399172,0.744482,-1.076352,-8.515609,-6.699329,1.069537,5.229119,5.724393,7.485330,9.359891,8.262439,7.647113,-5.855648,-3.324446,9.959828,4.448237,-7.089572,-8.426687,2.269518,3.290619,-0.888361,-5.253607,-6.926847,1.732032,2.565696,-9.065198,-3.285102,-4.082742,1.174932,4.902376,-2.162266,9.508621,6.542543,6.170150,-6.000312,7.176474,-9.532115,-9.054791,4.721083,-6.077666,1.916721,2.677627,0.152856,-7.293296,0.141988,2.041765,4.671417,-4.934973,9.174401,0.116817,-6.461572,-1.269515,-5.862385,-5.456949,-4.722966,-5.478691,6.434112,9.685944,-6.375973,0.414392,3.073608,8.781641,6.432715,-2.451816,-2.826962,1.684728,-5.264094,5.029000,-0.213986,-8.277748,-3.255439,-5.743800,-8.445002,-1.767041,-1.709333,-6.609541,5.975829,-7.627043,-1.485226,1.887078,-7.118723,4.780141,-1.716048,5.092037,-1.729095,0.619349,4.060535,1.480864,7.504549,-8.260582,8.006232,-4.937003,-1.890217,-4.414174,5.498556,7.440525,-6.974611,-5.539616,2.061366,7.617111,3.084455,0.128010,8.313074,-8.106316,-9.732055,-5.180923,-2.797627,-1.347739,3.787249,3.648282,-2.588827,-6.420951,5.237504,8.516568,-7.644337,1.652290,4.208581,-2.840578,5.859788,-0.739985,9.824391,2.558934,9.532709,0.275247,-0.750139,4.794037,3.128929,8.517481,-3.571190,-8.813570,-4.680524,-6.980221,-2.629344,-9.220324,2.628032,4.449132,9.098263,-6.626943,5.794936,0.391652,-0.707908,-0.384824,-3.982703,8.198479,4.408303,3.921207,7.279253,1.726002,7.035390,1.065938,-4.388379,0.124052,5.249267,-0.973830,4.283026,6.852171,-3.601951,-2.203712,5.036385,4.258070,2.522018,-3.915883,-4.171043,-3.819536,8.991074,7.208055,-9.496642,3.122597,-7.173232,-9.243869,1.993877,-2.770885,-9.118752,-5.162128], dtype = "float64")#candidate|1852|(945,)|const|float64
call_1851 = func_1469_call(relay.reshape(const_1852.astype('float64'), [9, 15, 7]))
call_1853 = func_1469_call(relay.reshape(const_1852.astype('float64'), [9, 15, 7]))
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
const_1860 = relay.const(6, dtype = "int8")#candidate|1860|()|const|int8
var_1861 = relay.var("var_1861", dtype = "int8", shape = (1440,))#candidate|1861|(1440,)|var|int8
call_1859 = relay.TupleGetItem(func_484_call(relay.reshape(const_1860.astype('int8'), []), relay.reshape(var_1861.astype('int8'), [15, 16, 6]), ), 0)
call_1862 = relay.TupleGetItem(func_487_call(relay.reshape(const_1860.astype('int8'), []), relay.reshape(var_1861.astype('int8'), [15, 16, 6]), ), 0)
func_1161_call = mod.get_global_var('func_1161')
func_1165_call = mutated_mod.get_global_var('func_1165')
const_1864 = relay.const([[-7.500986,-9.938050,-8.520167,0.704399,6.844091,-4.779830,6.358464,2.205402,-6.376736,5.378530,8.838036,-2.998891,-6.816560,1.172945,-0.019263,-7.830894,7.494539,-5.916480,-6.107004,-0.441215,-3.746815,7.325937,1.783367,-5.021064,2.038330,6.375170,-7.259740,6.641435,-2.176843,-9.785104,7.589851,7.060012,8.118618,-8.614014,5.864077,3.599584,1.582767,6.580648,-1.930776,3.042555,6.218891,-4.786954,-4.685424,-9.358623,-6.925563,-0.791859,0.555969,-8.165409,9.637307,9.773709,-5.482046,-9.287042,4.617870,-7.724892,3.735276,-8.152872,-3.478337,6.617911,-5.728928,9.272751,-3.466084,-8.890084,1.878981,-7.765771,-3.253612,7.002374,-2.985532,-4.517694,3.827271,3.948181,-7.287011,4.810528,-8.222086,-9.830000,-2.656492,1.598783,9.392871,4.722769,3.214601,0.992208,2.506038,-7.613827,-0.342202,2.729621,1.117243,7.148254,-6.121257,-1.677234,5.906648,5.106577,3.753771,-5.143972,4.194753,9.696928,4.549179,-3.499044,-0.940517,-1.795842,0.098575,-9.154377,8.548103,9.197280,1.313567,-9.087470,-9.758102,-5.089478,5.908371,-6.937352,-9.116906,8.221732,-1.008070,-3.936915,-6.473412,3.901385,2.580433,-3.185838,7.741116],[-5.597335,5.934312,7.251308,9.417950,8.689576,-8.590099,1.415906,-0.933087,-7.051646,-1.472509,7.242045,-3.685961,-1.377217,-8.010405,-0.009184,-4.370360,-4.151955,5.010071,4.230594,-4.862174,3.516261,-6.434856,9.193344,3.009480,1.556815,9.478572,-3.425970,-0.939414,8.809222,1.077435,-2.467585,-7.611286,-9.215311,8.019426,-9.178075,-5.794896,-1.765676,-6.938357,9.586037,-2.854337,5.008917,1.342555,4.723047,4.159697,8.045774,-5.429074,-9.574816,-5.891818,-3.834762,3.136136,0.239122,0.879517,-4.860496,-8.268361,0.709424,8.666271,-2.950593,5.611715,-9.258588,-0.731286,6.466870,6.010318,6.563740,-1.369033,1.080492,1.619717,-5.582916,2.273895,-6.870597,-5.313862,-5.043186,2.502024,4.670452,-3.919230,3.563583,1.108524,2.378381,-6.685147,-1.927883,-1.612028,-7.780727,2.635902,-3.795831,-0.216955,-1.527172,2.018075,-9.871884,0.491092,6.515889,3.135649,-8.993775,0.932486,5.710716,-1.180472,4.693822,-5.231524,-2.141264,-8.652550,-2.199777,-5.947175,7.278338,4.883765,-3.922173,8.714920,-9.669311,-8.498287,6.475051,-4.258119,6.983752,9.331356,3.542922,5.104095,0.761086,4.616007,-5.098219,-9.403016,7.674366],[3.104181,-3.931554,5.025810,6.263635,2.684800,2.477693,2.406323,-0.103840,8.405477,-5.164994,-6.367333,-5.914885,5.428179,6.383781,9.487672,1.181060,-3.267386,2.282401,-5.956532,8.658595,-8.178459,7.168272,9.273324,-5.664621,-0.338012,4.580992,-2.877365,-1.249021,-8.155532,7.850285,-7.416317,-3.228641,-5.747656,-7.145061,-4.502638,-4.005938,-8.446751,3.082076,6.574604,3.484700,-2.713835,-7.023327,-0.068929,0.857531,-1.162143,-8.589928,2.803528,9.928066,8.103106,2.757014,4.877538,-7.636266,5.756560,-9.925481,1.996337,-9.309703,-2.125796,-7.252195,3.512123,-4.876366,-9.770707,-4.393644,2.996795,9.252180,8.449906,3.193927,-9.942511,5.304427,3.562637,-8.323987,8.649192,-4.040306,-3.717247,-0.634422,-2.985296,4.820973,-8.753395,4.569299,-2.839563,-0.475346,1.312307,-9.257805,6.967012,4.392943,7.180128,7.404147,6.108766,8.919628,-6.503726,5.866376,-2.644678,5.615223,6.837355,-1.372439,9.645429,8.446267,-7.172185,-7.185685,7.989915,-7.499265,7.209685,3.135009,-1.031609,-8.525184,7.888513,1.075787,1.215514,-6.497895,5.483758,-2.500502,1.828097,2.573822,3.538940,1.814434,-3.199402,-7.520392,2.460370],[-0.064646,-7.721744,-1.063954,-3.494576,8.155275,-7.617701,-2.425875,-3.417799,-8.208435,3.923174,-2.048547,0.518250,1.053346,0.617629,3.771968,-8.189141,-2.098849,5.540199,-2.878009,1.175573,6.606416,9.901981,5.567654,-7.288119,2.101775,-1.254204,-4.296989,7.749377,5.853474,8.050038,7.739347,-7.543864,-9.922497,-7.869365,8.204802,-0.575573,3.634309,9.756757,-4.922654,-6.166394,0.355589,6.475313,-5.135301,1.129166,1.632601,-1.607459,-1.604725,7.766741,-9.785757,1.003972,3.443263,-7.864057,6.661896,9.471910,4.849356,7.579968,-8.811577,6.931499,3.007783,-7.875924,2.833792,7.246981,9.501402,4.744485,-3.630007,-2.027949,-5.983140,-5.662529,-1.726647,4.988657,8.596697,-8.678057,2.443085,-8.269995,-9.998210,-6.356487,-6.684436,-3.145953,-5.909656,8.461543,-1.246486,-4.025055,4.048509,3.649515,-8.134113,6.689856,8.675001,-5.731304,8.329832,-2.199715,2.286716,-2.417052,-4.569926,-5.004294,-3.648556,-8.434384,1.642115,1.322245,6.712759,-0.528829,-8.586099,-8.514836,0.670308,-8.063173,1.414600,-7.721179,0.111724,-7.636288,6.873873,-7.677505,5.829111,2.463937,9.612498,2.645279,1.800747,1.954896,5.099772],[3.934020,-2.640614,-1.489109,-9.502544,-2.123928,8.961899,-5.649594,0.923644,-7.739581,5.968668,8.817469,-2.361390,5.930311,-6.089414,1.673686,-1.272482,-1.078730,0.765245,8.108898,-8.149780,8.563274,-3.283068,-5.907503,1.845515,-8.355528,-4.763490,1.479777,-4.653710,-1.068975,3.912152,8.413876,7.030966,-7.616993,-5.543654,-3.816337,-5.105491,-7.451147,6.225758,-9.158081,5.959112,1.572161,1.451112,-6.245957,-2.322547,-1.173688,6.631384,3.491258,-3.815813,4.985607,6.352041,2.959352,7.562948,7.165940,-1.511507,8.100877,-1.421733,-3.328900,-5.144154,-3.816001,0.026181,-3.005743,-6.897239,9.145710,-0.813578,8.614890,0.828411,1.573951,-3.746675,6.762783,-5.715743,-0.979567,-9.702452,-0.281200,3.139959,2.332855,-3.777058,9.813214,5.330733,9.896144,8.804778,-0.471376,9.880367,-7.652465,-5.499149,-1.138024,-0.051766,2.404102,3.297660,7.868636,-6.672758,-7.659491,6.142095,0.729622,-2.838909,-7.344223,5.405252,-2.920528,-4.560206,-8.851757,8.004804,6.429135,1.553239,-3.151001,8.664148,-1.410337,-7.600593,-5.261951,-7.626613,-1.371577,-6.209671,5.160871,9.939089,-9.120377,-6.772418,-7.272268,8.815787,1.334868],[4.185691,-4.097121,-0.120601,-7.649026,0.001368,-8.953623,8.670373,-9.709494,2.987625,1.414811,-1.545217,-2.338984,5.184946,-2.203259,-3.118504,5.000224,7.218008,-6.992212,-6.540069,-2.248379,5.874155,-7.557862,4.680526,-2.501064,-0.161395,-1.771317,3.425714,0.633592,3.536431,-4.043612,5.641803,6.507224,4.286063,-3.374132,0.586366,7.591423,8.973702,8.610141,-5.639576,8.403801,3.472137,5.398854,-1.660480,8.156840,-0.378289,-7.638624,-2.183775,-6.453302,6.512948,6.502157,9.243586,-2.100226,-7.998182,-1.502394,8.934597,1.351502,7.001805,-6.370034,3.559277,6.976618,2.868835,-2.021623,-0.476512,8.252833,6.271925,-5.888881,9.932524,-7.492207,-2.125743,-1.724492,-6.637677,-4.157909,4.162284,-0.813019,0.117413,-7.072170,2.785442,-6.901848,-5.573038,0.149134,-3.271727,-5.345984,-5.554878,-5.995979,0.626366,8.343809,-1.157027,8.436708,-8.464965,4.885381,-0.364418,-0.049810,-1.439232,9.982333,-9.167657,-6.592968,-6.818587,-9.519356,8.107317,8.892720,7.325398,5.600721,-1.829972,1.724302,-7.720547,-8.325137,8.762545,-7.041280,0.491722,-9.515320,-9.058775,9.801309,4.237260,-8.160459,-5.800936,-4.822814,-7.946248],[9.125058,-2.229612,8.582035,0.603395,1.276031,-7.723231,-6.683164,9.580043,6.992006,-8.119489,-3.766627,-3.559500,-3.653219,-0.925838,-1.148554,-5.173400,-7.512528,2.790566,8.614275,0.630575,7.391371,-4.062691,-6.316700,-4.844007,-2.311795,-3.630992,-2.877071,9.317406,8.062917,3.158985,-1.050459,3.567413,8.663222,-7.322188,-9.655144,8.784327,0.287410,4.627113,-6.472613,6.445284,-7.812943,6.450800,-4.318169,-1.280852,8.662626,2.112205,9.526278,-4.348862,0.817034,-4.555829,-0.644106,5.197288,2.055347,8.661108,-4.570996,-3.275236,-2.221763,-4.375815,-8.873393,-3.909450,-6.633295,8.393966,2.914839,-0.119565,-5.895852,-9.769178,3.019179,-4.802909,-8.489773,-7.818883,-3.325304,-9.667367,-6.285719,3.394811,9.480510,-7.559538,-1.214329,3.752401,3.976766,-4.793448,-9.177146,9.895925,3.843384,3.358057,6.685938,-7.994770,-4.377802,6.037268,3.904109,-9.393327,-5.284981,8.740183,-2.176120,-2.284942,-1.074729,-7.356319,1.893848,-7.353783,5.062500,2.178825,4.184644,7.683110,-4.802206,4.320413,7.250265,-8.123585,-7.075309,-1.803815,-7.801799,9.032923,-1.788719,-3.155578,8.825968,-8.692359,-3.249993,4.684811,3.792146],[0.673162,0.951469,-1.260649,-7.761277,5.095096,-0.627706,-3.416254,-4.156489,9.792674,4.587699,5.446114,5.367584,0.774195,0.405545,2.947703,3.433849,-8.141884,6.048684,-1.188745,2.561160,3.324665,6.929704,-2.532659,9.712955,-3.005934,8.306360,9.196098,3.977299,-3.014975,1.939542,-5.670568,9.938061,-1.828789,2.017788,-8.108338,-6.534286,-6.211003,5.745009,1.047582,-2.861639,5.192874,1.085980,-0.376048,-0.924955,2.015126,9.459247,-7.849952,-5.813059,3.349656,4.615383,-3.994675,2.405516,-6.674177,-8.992815,8.844379,6.574561,-8.444584,0.289451,-6.241785,-3.627822,-9.693413,4.883242,-4.651484,3.941371,4.246050,9.064472,-8.865766,-1.963420,-2.348259,-7.087948,7.533728,-0.134053,6.898717,0.251226,9.235546,8.664597,2.857939,4.932192,8.743373,8.688630,0.203775,-8.361091,-8.275950,-2.055962,3.338352,-7.582471,5.255909,0.738553,9.699018,-6.879168,-8.965580,-0.492937,-7.943163,8.449184,-6.452291,-4.019275,4.872406,8.132987,7.879778,-6.182094,-2.024547,5.324140,-9.513538,-2.451536,3.969964,-1.427381,8.209806,1.691078,-2.575202,9.380726,-0.432360,1.898597,-4.705480,4.886183,-8.059913,2.930698,-2.810644],[-2.871696,4.244015,-4.199583,3.041992,-9.688810,8.444417,-4.825705,-3.440159,-8.788204,9.769983,-4.280721,-6.953881,4.535321,-7.459504,-7.608015,-9.723090,4.145452,5.676615,-4.582452,-5.418869,2.032528,7.742037,-2.309280,9.883044,-3.443233,-2.458874,3.574600,-1.167866,0.248440,9.353942,6.535655,6.918995,7.809770,1.211239,5.857745,-9.943308,2.370663,7.731516,5.085993,8.849939,2.595357,-7.582414,-7.300818,-6.546688,6.699284,9.921559,3.305918,1.267843,-9.803828,-9.739533,7.098810,-2.878197,-2.314742,-0.119841,9.787494,8.986564,8.389580,4.965748,-1.009611,4.067278,4.705419,9.393001,6.919073,7.609729,7.985787,-8.767340,-2.915843,7.096638,-8.833361,-6.900447,2.868948,-8.667111,9.043597,1.761155,2.926387,-2.816723,7.796668,8.479387,-7.835311,-0.605085,5.396612,-6.718546,-9.209183,-1.835233,0.409728,-5.530529,6.478094,0.052055,-4.532974,-2.353007,-0.708338,-0.246971,-8.062846,-1.743575,-1.975886,-2.601075,6.618791,7.113443,7.972851,-3.388056,-6.609755,9.542741,-2.696203,-2.330046,7.257992,-0.192589,4.875471,-2.093629,4.424414,6.476568,2.421522,5.380587,-6.408374,-7.315165,-3.330797,1.139835,5.751791],[-8.067145,6.367365,-1.487550,-2.400007,-6.028174,4.639008,5.415330,-6.665614,-9.118935,3.346061,-4.785314,-2.201088,8.520320,-2.957273,6.345340,3.998037,5.889915,4.749488,-1.389071,-5.895569,1.222972,3.290850,-2.991856,8.739498,0.612247,-0.566448,6.832725,3.033373,-5.775498,5.980969,6.001972,7.642542,1.150994,0.221764,-2.845170,4.510534,6.710041,4.646229,-6.295166,4.504342,0.674748,1.838237,-3.985705,2.108500,-5.474181,3.654525,2.206405,-0.791285,0.531226,-4.186252,-7.109411,7.385000,-7.051357,9.860987,-9.802301,8.100924,7.533972,-3.530384,3.859968,-3.619550,-0.225463,5.286303,-3.275269,-5.083802,2.464828,-5.803819,-8.405624,-8.288693,-7.754270,8.717487,-1.727281,-5.195712,-5.029336,9.916954,-3.689695,5.253473,4.952597,-3.699859,7.711829,9.697062,-4.921131,-7.749516,-7.072867,3.052810,-6.850799,7.800851,5.107585,-1.510056,-9.902425,5.179274,3.863764,8.876480,-6.145256,3.635697,-9.276903,-2.774454,-0.165639,-5.257024,2.942257,7.467369,-2.308129,-1.141203,-3.730515,2.625875,4.389460,5.805335,-3.465085,8.402766,-0.517786,-9.338896,-5.897936,7.845874,3.891899,7.015641,-3.478658,-0.592064,2.741310],[-9.087175,-7.059330,-5.708014,7.595286,-1.279341,-4.287619,-1.729969,-2.855560,5.025097,7.954643,9.899469,-3.335642,-0.493425,5.609362,-0.338102,3.630068,-6.866821,-6.332204,9.713974,-8.934872,9.770069,-3.298602,-0.819659,-0.791072,9.629886,-9.904210,-6.082621,4.553717,9.361180,-8.357864,7.892088,4.559032,8.289429,-1.031507,7.085272,-3.458967,3.334350,-1.277042,-4.793635,6.117324,-9.835870,-2.147781,7.381147,0.534075,2.699797,-4.589520,-3.935032,-2.946274,4.109909,-5.363440,-3.179424,-9.795488,3.525916,4.153957,8.678896,7.658492,-9.968082,6.920813,8.045096,1.530174,-5.089231,1.652834,3.172273,-7.031780,-3.487915,1.150776,9.162798,-5.347680,-8.059311,-9.402157,7.845865,1.982486,-6.336940,8.871726,-1.810032,-5.038911,-9.560465,1.392739,4.062662,-7.359832,-6.224768,-4.777952,5.763056,1.298481,-2.856498,-9.314135,5.281014,-0.974186,-9.737339,-3.993426,-1.594957,7.513118,-2.569693,-0.131865,-0.371243,-1.609893,-8.443606,-9.795324,8.055428,4.712056,-6.255093,8.938505,6.364069,4.898221,5.815877,-4.535691,-6.434727,-2.308085,-6.433857,-5.253234,-7.115260,-1.778080,-1.927233,-9.768760,-6.668318,5.491369,2.171943]], dtype = "float64")#candidate|1864|(11, 117)|const|float64
call_1863 = func_1161_call(relay.reshape(const_1860.astype('float64'), []), relay.reshape(const_1864.astype('float64'), [11, 13, 9]), )
call_1865 = func_1161_call(relay.reshape(const_1860.astype('float64'), []), relay.reshape(const_1864.astype('float64'), [11, 13, 9]), )
output = relay.Tuple([bop_1848,call_1851,const_1852,call_1859,const_1860,var_1861,call_1863,const_1864,])
output2 = relay.Tuple([bop_1848,call_1853,const_1852,call_1862,const_1860,var_1861,call_1865,const_1864,])
func_1884 = relay.Function([var_1846,var_1847,var_1861,], output)
mod['func_1884'] = func_1884
mod = relay.transform.InferType()(mod)
var_1885 = relay.var("var_1885", dtype = "uint64", shape = (14, 3, 9))#candidate|1885|(14, 3, 9)|var|uint64
var_1886 = relay.var("var_1886", dtype = "uint64", shape = (14, 3, 9))#candidate|1886|(14, 3, 9)|var|uint64
var_1887 = relay.var("var_1887", dtype = "int8", shape = (1440,))#candidate|1887|(1440,)|var|int8
output = func_1884(var_1885,var_1886,var_1887,)
func_1888 = relay.Function([var_1885,var_1886,var_1887,], output)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2199 = relay.var("var_2199", dtype = "int64", shape = ())#candidate|2199|()|var|int64
const_2200 = relay.const([[[-3,7,-3,-1,-5,-6,1,-4,-5,-6,8,-3,-7,-9],[-6,-4,-5,-2,-3,7,-7,2,-5,5,-1,-6,10,-9],[-6,1,-9,-3,-9,3,8,-2,3,3,10,-9,8,-9],[-7,-7,-1,5,5,-4,-10,8,9,3,6,1,5,-7],[7,3,-6,-7,1,5,-9,-2,-8,-9,2,8,-9,4],[-10,8,6,-3,2,-9,3,8,-5,-3,1,-9,-3,1],[-7,-9,-5,-6,8,3,-1,-2,-6,-6,-1,3,10,-4],[-10,-8,-1,4,4,7,9,-2,2,-5,-4,-1,-10,6],[-8,-5,-7,-5,-8,4,-9,3,-1,-10,-9,-3,-6,8],[1,-5,6,9,-3,-2,5,2,-7,4,10,-10,9,-9],[-8,-2,-1,-9,-7,10,5,10,10,-6,6,4,5,2],[7,-10,8,-5,-9,4,3,5,-8,9,-8,2,6,10]],[[1,-7,3,5,-9,10,3,3,10,3,4,3,-7,-4],[2,-4,5,-3,-9,10,7,4,-6,5,5,-1,1,1],[-10,1,-10,-8,6,-5,-8,-3,-5,-4,-3,6,-8,-9],[10,9,6,5,-6,-10,2,9,10,-4,10,7,-8,3],[9,-7,3,-2,-7,-4,-10,7,-10,2,8,-7,6,2],[-7,2,-1,7,-6,-3,-4,5,-3,-5,-9,-5,5,-5],[-5,6,6,-10,-8,10,-5,-6,2,-2,4,-10,-6,-9],[-6,-3,5,-7,-7,7,3,9,2,7,-9,-1,-8,-7],[5,-7,-2,3,10,-8,6,-4,3,-7,1,9,2,-4],[-8,-5,6,-5,4,6,10,5,-9,5,4,-7,5,-6],[5,-7,8,-7,6,3,-3,-6,-4,9,9,7,7,8],[-1,6,4,-10,-7,-7,10,3,-10,6,-7,7,-10,-9]]], dtype = "int64")#candidate|2200|(2, 12, 14)|const|int64
bop_2201 = relay.greater(var_2199.astype('bool'), const_2200.astype('bool')) # shape=(2, 12, 14)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
const_2213 = relay.const([-4,-6,1,4,7,9,7,7,-6,3,2,-3,-10,-8,-4,4,5,2,-5,-9,4,-8,-10,3,1,4,-10,10,5,-2,-5,7,-8,8,-7,6,5,-4,-9,2,1,-5,-5,2,3,7,10,-7,-2,4,4,-3,-1,7,-2,-2,-7,3,-2,-1,8,-10,-1,1,-6,3,2,-2,-10,7,-9,6,-5,-9,-5,9,-8,4,-8,3,7,-5,-1,-5,5,7,-8,2,-2,-8,3,10,6,9,8,-9,9,7,-10,-4,-2,-3,-2,6,7,-10,-3,2,-6,-5,-4,-1,-8,-2,1,-7,7,-5,-4,4,7,2,8,-9,-4,9,9,-10,10,-9,-9,4,-4,-6,10,-2,6,6,9,-8,-2,-2,9,-9,-5,10,5,-10,2,9,-8,10,-8,-9,6,1,-6,-10,-4,-6,7,3,-9,-3,8,7,-5,-1,-5,-10,-8,8,2,3,-7,5,6,-8,-10,9,2,-6,-3,8,7,-1,-8,1,7,6,-4,9,-10,8,-7,9,-3,6,2,-5,3,4,-7,1,-2,9,9,-7,-5,6,3,3,2,5,-7,-5,-8,-2,-5,-8,-10,-2,-5,6,7,3,-9,10,-10,-7,5,7,-10,-8,-2,1,-3,8,5,9,-8,-4,3,-10,8,9,-9,7,-7,-4,5,-2,-2,8,6,1,-2,-3,-8,-7,2,10,-4,1,-5,-2,-2,-9,-7,-4,-4,7,2,10,-4,-8,3,-8,-6,2,-3,10,-1,2,7,8,-10,7,6,-2,4,-7,-8,6,3,3,-2,-1,-5,-8,-8,-4,-3,10,10,-10,-2,1,-1,3,-5,-1,-3,-2,5,9,-8,2,5,1,-6,10,-7,7,10,-3,8,3,-6,8,-5,-7,-9,4,-2,9,-5,5,10,1,4,4,-10,3,-2,-9,9,9,8,-2,-8,10,10,5,-9,-9,-2,5,1,-10,-3,7,-7,-10,10,7,4,1,-3,3,5,-5,6,1,-9,8,1,4,4,5,5,-3,-9,3,1,4,-10,6,-8,-3,9,-1,-9,-10,-8,-8,-9,3,5,10,4,5,10,1,-10,6,-8,-2,1,-9,-9,1,-9,-5,-10,10,8,1,-7,-7,9,-6,10,3,8,-8,10,-4,-2,3,4,8,-9,10,-3,2,-8,-8,-4,8,4,8,5,-5,1,-1,-1,6,9,-7,3,-4,-6,1,-3,4,7,3,6,-9,6,-3,-10,-9,5,3,5,-8,2,-3,-8,-4,10,7,5,-4,-7,-10,-6,-7,-4,6,10,4,-3,6,-5,4,-8,-5,6,-6,8,1,-4,2,3,-9,4,-4,2,8,-2,5,5,5,-9,6,4,1,10,-5,-3,-5,-10,4,10,-1,6,2,-6,-3,-5,-2,6,6,7,8,-8,9,-1,1,-6,-4,8,2,-1,9,-3,7,-4,-7,6,3,8,5,-6,1,-9,-4,8,-9,10,9,8,-5,10,-5,9,2,1,-7,4,-9,-2,7,1,-3,7,6,-7,-10,-5,3,5,9,3,-3,5,-7,8,-9,4,-10,3,6,9,6,3,5,-5,3,4,2,-1,6,-6,6,8,-3,-4,-10,-7,6,-6,-7,7,8,8,-9,-10,6,-2,8,-2,1,-1,8,7,-7,5,3,-4,3,10,10,-9,-8,1,-10,-8,-9,-2,-7,3,2,-8,9,-6,5,-6,-8,3,7,1,-9,10,7,6,-3,-8,6,1,-9,10,5,-2,3,6,-1,9,5,7,1,4,2,-8,9,8,6,-3,-5,1,-10,10,-5,9,-8,10,2,5,9,4,3,-5,9,-10,-4,-4,10,-6,-1,-5,-3,-10,2,-9,-9,6,-5,10,10,8,-3,-6,6,-9,9,8,10,7,3,10,10,-3,6,9,-5,10,9,4,10,-4,9,10,-10,-9,4,-7,7,7,3,-1,-3,8,-9,-1,6,-7,-7,-4,6,2,-5,2,8,7,-7,2,9,6,-2,6,-10,3,-2,6,10,-5,6,-9,9,8,4,8,9,3,10,-9,2,10,1,-1,-4,8,-6,-6,2,-2,3,-2,-3,4,-4,-4,7,2,9,-8,8,7,-2,-8,9,1,-10,-6,5,4,5,8,3,-1,-1,-9,7,-4,9,3,2,1,6,4,-9,3,-10,9,10,8,-9,10,-1,4,6,7,1,1,7,-3,6,2,6,7,-1,7,10,-5,4,2,-7,2,-8,9,8,4,5,-8,-9,-9,2,10,7,-4,7,5,-6,3,-7,1,-2,7,-3,2,-4,2,-1,7,-2,-1,8,2,-10,-7,-7,2,3,1,-8,8,6,-5,4,4,-4,4,10,3,-3,9,-9,1,2,-8,7,-2,7,9,-1,9,2,5,-9,4,-1,2,-5,1,-7,8,4,6,-7,-3,9,-4,-5,-3,-9,8,1,1,-5,1,-1,5,-1,9,5,6,5,-7,9,7,-8,-2,-5,2,5,-1,6,-6,-8,-5,-6,-8,-3,1,6,1,-3,2,-6,-7,10,9,-7,-1,9,-7,-8,-8,-2,2,9,2,8,9,8,7,5,4,-1,6,-4,7,-9,-3,-3,1,-2,-3,8,-6,-7,6,9,3,-8,9,3,-6,-10,5,5,7,-10,-10,10,7,-1,9,-5,-1,1,-7,-8,9,1,1,-2,5,-7,-2,-5,4,4,-5,6,-3,7,-3,4,-1,6,3,2,-1,5,8,4,5,5,-6,7,8,-3,9,1,-2,-3,6,-3,4,10,-7,4,-2,-3,10,10,-3,8,-10,-1,-7,-7,10,2,7,8,6,-7,2,7,-1,-1,1,6,10,6,-4,2,3,9,-6,8,-8,-10,-7,4,7,-2,-5,-10,8,6,-8,-5,2,3,-1,-2,5,9,3,10,9,6,10,10,-1,9,5,-2,-10,-7,-5,-9,-2,-4,2,-3,-6,4,7,4,-10,-9,1,-2,-6,1,7,-4,8,2,-4,10,5,5,-8,4,-6,-3,-4,-7,3,4,7,8,7,-7,6,8,1,-7,-4,7,4,4,-6,-2,10,8,3,-5,8,1,7,-7,-3,-7,5,-5,-5,-1,-2,9,-7,9,5,-2,4,-6,1,9,-10,-10,-2,6,-6,8,7,7,-6,-6,10,5,1,5,7,-7,2,-1,-2,4,1,-5,-1,4,1,-10,10,-5,9,3,7,2,-5,6,10,-7,-3,-9,7,6,5,-6,-3,4,-2,7,-6,1,-10,1,6,-10,10,-5,-5,2,-9,7,-3,2,-7,-7,8,4,-4,7,-3,-10,8,-10,8,-7,4,9,-4,-5,1,-5,1,-6,-4,-6,2,2,3,5,7,10,-3,-1,1,-9,1,1,1,4,10,6,5,-4,-1,-4,10,-2,-5,1,2,-10,1,-2,9,-2,7,1,-6,-2,3,-7,-10,-7,3,-2,-7,7,-4,-4,6,-9,4,5,-6,-6,5,-1,2,1,-7,2,5,-4,10,-9,-4,1,2,-9,-5,7,-10,-4,-10,10,9,-9,-1,3,-1,-10,-3,-6,-7,5,-9,9,-5,-2,9,10,1,-2,4,-6,8,-3,-4,-9,-3,-10,-7,2,3,6,-5,10,8,10,9,-9,1,9,-1,6,-3,6,7,-3,-3,4,5,-6,10,-5,6,-4,-7,2,-3,4,5,7,10,-4,-1,3,-4,9,6,1,-1,9,-1,-8,9,2,1,-8,3,4,-2,-10,-5,-2,-6,-5,9,-4,4,9,-3,-7,-2,5,-9,-9,-7,7,1,-5,2,3,1,-6,-1,-8,5,9,2,-3,7,2,-5,6,-8,-3], dtype = "int8")#candidate|2213|(1440,)|const|int8
call_2212 = relay.TupleGetItem(func_484_call(relay.reshape(var_2199.astype('int8'), []), relay.reshape(const_2213.astype('int8'), [15, 16, 6]), ), 0)
call_2214 = relay.TupleGetItem(func_487_call(relay.reshape(var_2199.astype('int8'), []), relay.reshape(const_2213.astype('int8'), [15, 16, 6]), ), 0)
var_2220 = relay.var("var_2220", dtype = "bool", shape = (15, 16, 6))#candidate|2220|(15, 16, 6)|var|bool
bop_2221 = relay.mod(call_2212.astype('float64'), relay.reshape(var_2220.astype('float64'), relay.shape_of(call_2212))) # shape=(15, 16, 6)
bop_2224 = relay.mod(call_2214.astype('float64'), relay.reshape(var_2220.astype('float64'), relay.shape_of(call_2214))) # shape=(15, 16, 6)
bop_2232 = relay.maximum(call_2212.astype('uint64'), relay.reshape(bop_2221.astype('uint64'), relay.shape_of(call_2212))) # shape=(15, 16, 6)
bop_2235 = relay.maximum(call_2214.astype('uint64'), relay.reshape(bop_2224.astype('uint64'), relay.shape_of(call_2214))) # shape=(15, 16, 6)
func_245_call = mod.get_global_var('func_245')
func_250_call = mutated_mod.get_global_var('func_250')
const_2237 = relay.const([-8,-10,-5,-4,8,-9,4,-9,-7,-9,-9,4,1,-2,-9,-4,3,5,-8,9,4,-10,-5,-9,-5,-7,-1,4,-4,6,7,-10,5,-10,-8,-10,6,1,6,6,-2,-8,3,7,-10,1,-5,10,8,-3,-9,-9,3,-8,1,2,6,6,-4,5,8,-3,-8,-2,-3,1,8,-8,-9,9,10,-3,1,-4,-2,1,6,2,-9,10,-9,-5,-10,-9,-7,1,2,-2,3,10,-6,5,4,-5,10,-6,-8,-8,-2,-9,7,-6,4,-6,3,-2,6,10,5,-5,-3,-5,-2,9,-2,-10,-8,10,4,9,-1,-8,-10,-10,-4,-1,-8,7,-1,-1,-5,-4,9,5,1,3,-6,-10,9,-3,-7,-9,-3,4,-5,7,-9,-10,-4,-4,-10,-6,7,-7,7,9,-6,-8,7,1], dtype = "uint8")#candidate|2237|(160,)|const|uint8
const_2238 = relay.const([0.213170,-2.307519,-4.276484,-6.110999,6.176793,-4.207673,9.980312,-7.099275,4.150037,-6.353083,4.461369,-7.140686,-4.759802,7.066689,-2.916864,0.799331,7.847617,1.073707,-7.205599,-8.743150,-5.396839,0.456896,0.538230,-3.782975,6.814399,-2.037418,-6.364243,0.560807,2.128480,-4.934689,4.245054,6.174607,2.367595,-8.262304,-8.690045,3.740592,8.117316,-5.771296,-7.255098,-8.920869,4.494171,-5.671558,3.901574,5.577988,-2.130324,2.716762,8.514026,-2.191294,7.776047,-6.354673,0.364662,-2.186003,-7.048083,-6.190111,3.682451,-2.704526,7.270508,-7.956758,-1.611875,2.973519,5.203299,-8.414071,-7.590172,7.852581,-1.135104,2.360220,5.431075,-8.556804,5.470428,-8.070145,8.469528,1.169476,8.348793,-1.039447,3.256511,-8.206008,-8.551191,-9.736803,-2.589411,-9.892301,1.994340,-4.414867,6.853560,9.795603,8.870390,-8.851820,-0.578209,8.846034,2.841398,-3.148064,-1.067938,-0.316712,9.325949,9.683917,-5.367008,-3.191458,3.018754,6.569064,-1.638006,3.656814,-5.183191,-4.417640,-3.198188,5.216545,8.876464,-7.119821,-9.258373,-6.057037,7.738749,6.027301,6.032578,-2.284138,8.729173,-8.149442,-7.294956,2.115298,7.099269,9.190272,-1.102765,6.039444,-8.087599,4.477340,-1.331267,1.741339,5.663948,-5.549509,-0.408156,9.775298,-5.389949,8.596369,-1.409406,7.276213,0.510336,6.554479,5.233614,8.064528,-8.747235,0.391800,6.155119,2.121899,5.868357,9.625384,-4.832924,0.479012,-1.303207,2.880470,-4.781125,-7.288593,0.459549,6.900234,8.079987,4.703286,5.039641,-2.826707,6.361141,1.311531,5.714096,-7.313854,3.709203,-0.726163,7.499515,-5.165340,7.961491,4.597163,-4.428303,7.038409,2.766635,-9.115920,8.043789,9.719156,-9.511589,-0.555499,-1.983461,4.420914,-6.659766,3.761843,9.783061,5.112197,5.277117,0.891157,3.689881,8.569289,9.866909,9.233922,-0.982514,5.450846,5.591319,0.964493,7.890966,-4.293576,-4.443870,5.894899,7.640041,-6.889101,8.204616,0.286568,0.161885,5.114031,-6.923803,9.275109,-4.899366,7.415667,-2.430834,9.595916,2.294875,-6.600436,2.688544,4.414412,-7.441860,1.999455,8.585728,4.402891,2.529004,-8.124700,1.416921,4.590556,-9.133383,-0.934774,3.362175,-5.609498,0.901473,-8.498739,-4.546784,3.319367,-6.570641,-3.474313,5.041257,-8.455347,5.631592,-2.803263,-0.122470,-4.747284,-3.239657,-0.464608,-2.503313,-1.786756,4.859781,-4.915591,-4.400046,-2.555602,1.833416,8.662909,-6.920594,9.986335,-4.767407,9.682725,2.397240,2.214837,-2.876483,6.428692,7.912723,-9.088025,3.412685,-4.893995,-1.602752,-2.304643,-0.964595,8.886680,5.787363,-5.003086,-5.949907,-1.774582,4.778212,-7.041436,6.537198,-0.503122,9.144867,5.117186,3.165135,2.407189,8.208511,5.621221,2.648736,-1.695419,-0.056525,-2.463998,-0.751785,-0.665501,-2.540412,0.333526,9.159960,-9.660479,-3.494182,8.580711,-6.153057,-5.971583,-6.242430,1.863833,-0.587678,-5.088317,-1.685798,4.058945,1.038354,-8.870824,-2.433233,-3.823675,9.434846,7.705643,-9.088559,7.803104,9.825572,-1.448298,-3.553613,2.085416,-3.045391,5.134732,-7.494149,6.417287,-1.219787,8.572353,-2.500117,-1.136793,3.857545,2.726188,-3.137949,-5.533417,-0.575316,2.029532,-4.636024,5.859462,-0.042131,8.922451,-9.666061,2.182188,-4.332696,8.733861,-1.728122,-0.714843,1.388178,3.305985,-8.996814,8.332735,2.089786,4.382989,9.978456,-1.108174,0.118924,-5.786308,-3.196313,0.223927,6.757485,8.469814,-0.419687,3.109316,-7.945761,-3.256330,-6.819281,7.991305,-4.347045,3.007660,-4.730704,-9.767674,0.693688,6.126637,-6.936931,-4.015385,4.357819,2.502653,3.337056,-5.730244,5.393318,-6.214466,-7.847999,0.656310,7.937967,8.961302,-6.885801,3.693424,-9.580756,-1.945851,6.202837,-9.664833,-2.281251,8.004422,-4.817476,9.932510,-9.533396,9.285372,-1.420835,7.212386,5.829733,7.798109,-1.710580,1.667881,4.281659,8.982977,-3.585290,0.207419,3.456024,-4.147232,-9.141637,-7.543488,-9.874699,-9.503867,-4.116763,-1.546664,-8.363405,-1.293689,-1.518913,8.951942,2.084507,2.944384,2.205923,-5.500447,4.091862,-7.020038,2.355736,-9.446095,1.701055,-6.786715,-8.165188,2.691296,-4.630540,-5.122078,-7.113923,-4.491143,-2.997909,7.371539,-7.773093,3.402789,0.014476,-6.722744,-1.017763,-3.873919,0.052201,5.234793,7.400046,-5.026704,-5.481770,-5.194592,-3.151351,-3.953181,-5.337114,-9.651368,-2.600893,-3.991533,-8.022150,-7.703471,7.945455,-2.519999,6.598260,8.003302,-9.159734,-0.236431,-8.902377,6.529462,5.209454,7.175147,-5.565965,-7.283706,1.260328,-0.745329,7.663747,-6.569524,6.468350,0.031352,1.210220,8.195345,-2.924912,-2.399322,-6.682286,-1.769681,-1.948115,-2.155996,0.912370,7.797949,1.240621,-4.011815,-7.144395,-9.802635,0.761892,-1.922433,-5.939721,2.422159,1.792324,8.982834,6.167141,1.687413,2.271372,-9.352139,-8.490016,-1.670157,9.153166,7.088938,3.273261,0.728483,3.369925,5.102706,1.854303,0.396583,1.866767,8.009331,-5.901811,-1.309622,-0.022213,-7.518555,-1.516442,-0.629350,-6.050284,5.180090,7.798870,-0.040092,-6.683785,-3.519462,-7.154511,-9.312105,-8.422256,7.064821,-0.382619,2.536611,-3.274003,3.866182,-1.852364,0.856633,3.959828,-9.587509,0.288776,-1.307441,2.674949,-9.004070,-6.574396,6.604519,-9.595998,0.677161,-4.202050,8.510387,-3.968004,7.743646,-0.551376,6.210393,0.759195,1.768092,9.297839,-2.902885,-0.982814,-1.131911,1.138168,-1.412998,-2.105388,-5.022690,-7.583198,-5.655027,-1.325257,4.381999,-6.321323,4.121523,-5.519211,-8.325143,-8.739736,-8.403666,4.982474,5.408602,-4.810612,-9.984577,6.638109,6.454980,-1.834221,-9.824643,4.646454,-5.163598,0.064470,6.935707,-7.287729,7.456763,-6.671854,9.148865,-1.310455,-5.756475,-6.493124,-2.795647,7.822775,7.891621,5.451882,9.202065,7.671260,-3.437282,0.578510,1.384321,4.605574,-1.983025,-7.156634,-2.302354,-0.471787,-2.776639,1.874333,-9.306201,-0.976418,8.837197,6.616389,0.242658,-5.362106,3.115434,9.855943,4.666793,3.091506,6.305196,3.223527,2.018013,-5.433472,3.611835,-7.282315,4.033230,7.767781,-6.540196,0.727346,-7.342173,3.314034,3.690428,-2.452467,3.517904,-3.327891,9.123909,-0.611355,0.681478,-6.642851,9.675876,-5.708607,-2.454223,2.376571,-1.482676,-4.685517,-8.796668,0.836092,-9.087190,-1.310646,0.354048,-1.330045,-7.494350,8.206771,-6.029576,-8.815770,-9.846532,-6.814505,0.212673,0.569877,-7.189108,-5.673044,8.754864,-6.862638,6.315417,-9.603913,8.145098,9.074083,2.160687,5.845881,5.148877,1.299681,-2.698441,-0.551018,1.662389,5.249070,2.851166,-2.615955,1.549099,-2.287737,9.921434,-9.276756,-6.704071,8.160857,-1.783642,3.883460,-0.715170,-7.857763,-2.639107,-7.013963,-7.734959,5.615753,4.629433,4.688550,-6.817564,0.557836,-3.481371,-8.908742,-5.819944,-6.060080,-6.340324,-8.969275,8.047171,5.356434,4.709274,2.412965,0.697677,3.812722,5.204098,-4.768093,-2.987684,1.202443,7.000394,3.896737,8.422654,-4.376710,0.205726,6.063091,8.070274,-3.344911,-5.790103,5.257618,-1.839003,4.923997,7.682991,0.762019,6.079903,-8.128071,-7.132800,-9.113988,3.937245,2.727364,6.653529,5.583089,0.094435,8.765263,-5.404100,-8.015704,2.020903,-6.624427,2.816490,7.995562,-2.095910,2.597693,2.237993,2.361557,-4.186813,-6.517341,7.349646,4.263521,6.446223,-3.860806,5.130630,4.064027,-1.754398,1.092416,8.393661,9.881360,-6.029196,7.806694,-7.556317,-9.289730,3.218430,3.361861,2.028231,-9.067772,6.944251,-3.536689,8.107504,-9.176195,5.595379,1.706986,-9.612013,-7.508774,5.884915,-9.904403,-3.052630,-5.140506,4.459317,-6.512551,-0.472542,-3.765783,-3.875117,-4.952748,-1.677283,1.809739,-0.286885,-6.493190,3.282076,2.535958,-9.707262,9.409034,7.597130,1.870633,1.122556,7.768264,-4.311431,1.090904,-7.233924,-2.143046,-8.196729,-4.008662,-2.958453,4.640371,5.911401,-4.926703,0.997877,6.306489,7.065793,5.439622,-9.371554,2.861808,-7.302028,9.243065,-5.629212,1.688432,-4.279346,-7.136656,6.743514,-6.065505,-7.177886,-3.360779,-9.620933,-9.563978,-2.984485,-5.166560,-4.691423,5.806971,6.532012,8.652598,-3.861977,-2.565305,-7.031470,2.350652,2.507414,5.221201,-7.263797,3.396712,2.547435,5.216079,2.758733,-0.859327,0.070635,5.182139,7.583758,-1.940572,0.037226,-4.329868,3.114810,6.338277,7.740557,3.781821,6.216279,3.729656,-4.119239,-5.259736,-8.813946,-9.640236,1.674836,-0.590840,-9.502693,-7.457712,-3.828104,-8.815642,7.089147,-9.317779,-5.217655,-8.039265,-5.509468,-8.226491,-7.604401,-3.368211,5.207569,-9.576099,-3.252817,8.307747,-0.682524,6.911828,-1.578579,-4.135639,9.586916,8.649812,-1.510843,8.955296,1.486649,-0.693336,9.538483,-7.625446,5.197021,7.313072,-3.036247,-6.034010,-1.398069,7.274451,3.830228,-5.040073,-3.872963,-4.040698,-9.047082,4.938600,7.514038,7.495367,-2.705671,-7.708913,6.062758,-5.828475,-9.258073,-1.802023,-9.406702,-5.404538,2.974320,-6.423528,-8.396268,7.743853,1.643184,-9.783138,-0.136198,7.648393,2.032508,-2.012726,5.883045,-9.685317,3.879264,-2.678008,-0.218490,-5.398531,-5.849855,9.506107,9.966125,2.560360,2.507829,-0.967204,8.199493,8.477369,9.262512,3.489415,-4.247968,-2.899296,-6.941721,3.900686,2.440439,0.998872,-3.530595,-4.331100,3.705221,-2.300261,5.440567,-9.574196,-0.888710,-5.075946,6.694131,-2.239379,9.633611,5.674279,-5.709227,9.802781,-1.926318,1.312480,2.948518,0.567556,8.863898,-2.004664,-6.769539,0.523092,-3.648736,-7.960293,-6.037610,6.474484,2.843611,5.043958,0.007568,-5.333658,7.840645,-6.379494,3.148658,7.960167,-9.785354,-7.195165,-8.029707,4.156747,2.626956,-9.954353,0.548388,5.593749,5.748861,-2.697404,5.696385,-2.784220,-4.777040,-8.443957,-8.929303,-4.922472,5.456226,2.448017,-8.195322,-9.504714,-5.392593,3.385911,-1.733182,3.104579,-6.668908,-9.245528,-1.191475,-8.327181,6.360850,-0.589498,8.422470,-3.789438,0.557580,-6.412589,3.841059,9.223801,-7.220887,7.569271,-7.123422,-7.187349,-7.848469,-9.791369,0.798220,4.166610,6.719904,3.858478,-2.280327,2.587676,4.102209,3.160636,-2.740361,2.683557,-9.094831,2.512143,0.445674,1.734763,-4.116209,-1.339097,-1.201675,7.883744,9.465954,-0.876546,-8.522597,-6.402636,-3.509714,-4.690347,-2.455583,8.946089,-8.467183,0.315154,-8.552879,3.207457,0.510168,-8.184092,7.897140,9.070873,-0.001411,-6.612133,-1.551199,4.922776,9.369893,7.170939,1.407015,-1.507509,-5.948423,3.890862,-7.171178,7.725040,-8.194406,0.662193,0.482504,-3.820975,4.729297,1.381367,5.223901,-3.979868,-8.475735,8.971349,-6.305884,-7.351384,8.067876,1.936486,-0.880633,0.439868,-0.208279,6.852024,-9.423654,-6.544945,-2.145922,7.432887,-4.865247,-4.652563,3.948704,-2.643536,8.806333,-8.152492,-3.770624,-7.693829,8.014923,3.505314,1.929814,1.034217,-6.138242,9.407296,6.715084,8.880823,-9.037521,8.494596,9.134158,3.213233,-1.513819,6.296743,1.036172,4.674540,-9.498866,-8.305963,6.063598,9.623300,9.728717,1.886943,0.320432,-3.196238,-6.871400,6.555034,8.559693,3.254558,5.399375,-9.889135,-5.962411,0.204294,-1.224510,-5.815549,1.401703,-8.742529,-0.524946,-5.424896,-3.108437,1.798991,-8.892560,-8.584530,4.546485,1.227735,-7.011489,3.533677,2.430656,8.046032,7.882168,-0.803598,5.241233,5.258505,-9.016384,0.704697,6.259177,5.330311,-4.401569,1.350197,0.627297,-2.958062,1.728590,8.098395,-2.098356,-6.648676,-4.344565,-3.996473,3.223855,-4.970389,6.085875,-0.671522,-8.555804,-4.481296,8.495956,4.125943,-7.745947,9.667187,1.447958,9.870090,6.509218,0.951410,-7.154102,-6.496810,-5.256856,1.222991,-4.417159,-1.627207,5.350523,4.181431,-2.612181,-1.644402,-3.071671,-6.823441,-1.362593,8.869608,-0.434658,1.459853,6.033318,-8.154320,-9.148982,7.537806,-2.641280,-8.401016,8.026189,-4.948530,-0.308811,-0.291645,-2.471336,-8.201521,-6.701484,3.633867,3.819319,5.331659,-7.755945,-4.296234,9.781443,0.133935,7.056123,-4.879162,-5.263864,-0.536465,8.945178,6.471982,-8.870489,-6.478624,-0.121787,7.104622,-2.570702,-6.783686,-3.710451,-7.148773,-5.711504,8.047130,2.925394,-5.106650,4.659169,-4.388855,-6.691428,-0.100001,9.204018,1.921893,-3.608371,7.443674,-6.904206,5.480454,-6.528397,-2.034320,-8.219136,-3.588422,9.960980,7.858971,-7.024858,4.393667,0.331068,6.180464,-8.531124,-1.754331,4.156619,-9.267760,6.437909,-0.919213,7.726283,6.548195,1.623911,6.152984,-7.597763,8.885159,-5.744745,9.503166,-5.813591,-8.340836,-9.155547,-6.019358,0.043163,1.190131,-4.128379,-3.227659,-1.958444,7.514167,-3.883913,2.975668,5.728262,5.805862,5.227652,-8.440773,4.193114,8.468503,7.902043,7.852127,-9.343567,-4.179797,-4.256203,-0.502465,-7.488344,-0.371896,-8.558783,3.326942,-9.979006,1.092729,-8.264167,-5.202490,-2.398642,0.527135,4.661512,-2.930565,4.625916,-4.968875,-5.298298,-4.504844,9.355998,8.689311,-9.640619,1.746449,1.729966,3.048726,-5.124385,3.203282,1.726291,1.980362,8.170452,-7.306044,-6.731540,-3.681253,1.065742,4.067888,-0.933247,-6.535582,5.738313,4.755797,-6.309352,-7.970339,-9.093293,4.393294,-0.971738,-6.062962,0.254695,-2.404585,-3.398617,-9.054757,-2.222703,-0.798126,-2.595745,0.769809,-1.776284,-3.723216,1.575153,-3.006474,-1.859988,6.270730,-3.692962,-5.545455,-2.273777,6.846437,2.304929,-5.921993,1.406835,-0.841238,5.511648,4.878091,8.115289,-8.324575,4.755863,-9.691317,5.464559,-8.539285,-5.986282,7.687082,-8.165173,0.922612,-2.883716,4.573341,-7.895213,0.389784,2.350311,8.632665,-7.761737,-4.367817,-9.592381,9.010608,-8.927277,8.067427,-2.337431,-9.761185,6.693965,-6.185473,6.185426,9.920381,-8.855274,-9.272090,-9.195041,-9.907876,4.344941,-2.671778,1.002659,5.197923,8.112211,-0.064155,0.052656,-9.556601,-4.616780,-8.624407,-9.220075,1.449551,-7.588968,3.657067,-3.598328,6.522986,-5.534344,8.922276,0.510237,8.933459,-3.898251,-0.012931,-1.527711,-8.187417,-4.366538,6.805832,4.986068,0.030712,-7.287466,-7.593843,-3.460229,-0.923989,2.363365,-7.218911,3.754284,4.436940,-6.828693,3.561199,4.716695,1.198103,1.061555,-1.572851,-8.611917,-6.178829,-5.832384,3.139161,1.064318,9.385561,4.220372,5.804645,-0.543786,-8.545901,9.556405,9.617943,-5.333749,-9.625698,8.642576,-6.376379,-1.682078,-8.687850,2.320549,7.190438,-0.297942,9.811569,-4.780523,-0.927713,6.526341,6.223151,-7.270500,4.850660,-5.816177,-5.809099,9.831277,0.652768,-4.930643,-2.199676,8.516934,-3.554455,1.018035,7.272812,-4.360769,-3.237346,6.157657,-0.461940,-9.540183,-3.227351,8.919526,6.640160,7.311244,-0.652330,-6.671341,4.833634,-7.581370,1.816367,5.949484,-0.615843,-2.138715,7.668771,-0.819010,-0.520447,-0.073235,3.632960,7.261314,-4.507417,1.908681,-0.330245,0.540601,7.564354,7.936823,5.155212,-6.721104,0.489778,-1.440694,-1.918601,-6.974700,-8.480582,0.273856,3.192047,-9.099088,0.807813,-3.679463,4.611000,3.124088,-1.421372,-9.773700,9.189024,5.029137,8.288688,8.994702,-6.645012,-7.614200,-9.080691,4.427691,8.815209,7.309976,6.024278,-1.975855,-9.253368,-8.687084,2.620893,-6.871590,8.064301,4.200970,-5.756209,-1.063766,-6.117713,4.662851,-1.378393,-2.269560,-3.638337,-2.683241,-1.132993,-4.446814,-7.466131,8.098689,9.667743,-2.920786,0.116589,-3.365006,-0.973336,-1.933864,4.380477,-7.375550,-5.883327,8.757414,-8.397402,1.607749,6.570477,1.349424,-8.224836,1.695162,3.348775,-4.393668,8.367922,-4.605857,8.998462,-1.783018,-5.656367,-8.792213,-0.621656,6.271872,8.170588,6.290074,-4.215018,-2.272267,9.015463,9.235235,3.027171,4.595658,-0.714766,-1.127473,-9.834918,-0.788093,2.475350,-6.601182,1.269796,7.719329,-0.075291,8.740737,5.423877,2.144514,9.538546,4.097602,-3.877095,2.148057,-1.610138,-5.574445,-9.456444,4.486234,9.833330,5.246041,0.592171,8.775788,9.365949,9.382161,-6.871295,5.147402,5.447185,-6.163823,2.679028,-0.419066,7.229222,5.194182,1.480192,-4.853037,-6.778225,4.001667,-8.446801,7.877661,7.781765,-0.621230,6.106417,2.616954,5.296155,-9.735667,1.822148,-3.015730,9.445102,6.865293,3.439719,8.644576,6.087153,0.282812,7.336553,-3.289543,7.092390,-8.674941,-3.105247,2.003448,1.242923,7.943372,-0.740922,0.653089,4.203316,2.293990,-2.079924,-4.912574,7.405903,6.077377,-9.920239,-1.816948,8.725349,-8.048549,-3.787648,0.194910,1.817924,5.779547,-7.822333,7.949336,6.970946,-2.151950,3.843938,5.661897,1.857243,9.635729,-9.732120,6.603923,-6.737555,-9.275748,-3.944479,-1.752240,-8.140665,4.906786,-2.082134,-3.440119,2.432978,-0.374862,8.851162,-6.575233,-9.782555,-4.266225,9.568979,-9.837330,4.670354,-5.151925,-0.543077,6.907735,-7.678735,-3.307499,6.834659,-3.784343,5.105970,9.232707,5.946972,6.243360,0.477425,-2.201830,-8.453952,-9.582250,6.889793,8.203780,3.464696,-8.185770,8.066075,-1.534428,9.219293,-1.429256,1.860941,7.101103,5.658497,3.994378,-2.022601,2.982950,-9.617655,-0.549379,-5.371010,-4.736804,-1.362082,-8.383040,9.958117,-7.252650,0.288265,1.461955,-3.607852,7.801841,-4.269408,-8.708299,7.925001,0.958374,9.048457,4.406051,0.072759,8.587145,9.766639,5.287849,6.157053,6.705305,-0.256733,6.870052,-2.527618,-1.968955,2.074888,8.310862,-4.214126,6.151228,0.007002,-1.361569,-7.742442,-9.997869,5.368184,-0.044533,-2.021629,9.435724,-1.023180,3.598287,-3.538106,1.713995,8.850043,-1.725841,5.963868,6.204122,-5.295317,9.684641,-6.569800,-3.501173,-3.514610,-5.226928,6.363597,0.481314,-3.636477,-0.143516,0.522962,2.840556,-0.743165,-1.406945,4.678613,-0.237505,4.614736,-8.103326,-5.530862,5.883308,6.762655,3.060228,-2.171625,-9.315688,9.572786,0.615245,4.902465,6.487271,-8.740380,4.140649,-1.720823,1.276457,-9.080330,8.579504,5.188779,5.896739,-8.815265,2.703957,7.315664,2.915604,-8.634361,6.075556,4.584845,4.014106,4.413320,5.914208,0.302945,8.084531,-4.315025,-9.313450,-6.164017,-8.193558,-6.867940,7.898320,-2.508278,-6.523994,4.940301,-1.082112,4.458160,-0.816906,-2.958745,-7.393229,-3.215368,7.276548,-3.139228,-9.427294,0.088211,8.839000,-5.054225,-9.109660], dtype = "float64")#candidate|2238|(1800,)|const|float64
call_2236 = relay.TupleGetItem(func_245_call(relay.reshape(const_2237.astype('uint8'), [5, 2, 16]), relay.reshape(const_2237.astype('uint8'), [5, 2, 16]), relay.reshape(const_2238.astype('float64'), [1800,]), ), 0)
call_2239 = relay.TupleGetItem(func_250_call(relay.reshape(const_2237.astype('uint8'), [5, 2, 16]), relay.reshape(const_2237.astype('uint8'), [5, 2, 16]), relay.reshape(const_2238.astype('float64'), [1800,]), ), 0)
uop_2250 = relay.sin(const_2200.astype('float32')) # shape=(2, 12, 14)
func_245_call = mod.get_global_var('func_245')
func_250_call = mutated_mod.get_global_var('func_250')
call_2252 = relay.TupleGetItem(func_245_call(relay.reshape(const_2237.astype('uint8'), [5, 2, 16]), relay.reshape(call_2236.astype('uint8'), [5, 2, 16]), relay.reshape(const_2238.astype('float64'), [1800,]), ), 0)
call_2253 = relay.TupleGetItem(func_250_call(relay.reshape(const_2237.astype('uint8'), [5, 2, 16]), relay.reshape(call_2236.astype('uint8'), [5, 2, 16]), relay.reshape(const_2238.astype('float64'), [1800,]), ), 0)
uop_2257 = relay.asin(uop_2250.astype('float32')) # shape=(2, 12, 14)
func_1454_call = mod.get_global_var('func_1454')
func_1457_call = mutated_mod.get_global_var('func_1457')
var_2261 = relay.var("var_2261", dtype = "uint32", shape = (2940,))#candidate|2261|(2940,)|var|uint32
call_2260 = relay.TupleGetItem(func_1454_call(relay.reshape(var_2261.astype('uint32'), [14, 14, 15]), relay.reshape(var_2261.astype('uint32'), [14, 14, 15]), ), 0)
call_2262 = relay.TupleGetItem(func_1457_call(relay.reshape(var_2261.astype('uint32'), [14, 14, 15]), relay.reshape(var_2261.astype('uint32'), [14, 14, 15]), ), 0)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
call_2270 = relay.TupleGetItem(func_484_call(relay.reshape(var_2199.astype('int8'), []), relay.reshape(call_2212.astype('int8'), [15, 16, 6]), ), 0)
call_2271 = relay.TupleGetItem(func_487_call(relay.reshape(var_2199.astype('int8'), []), relay.reshape(call_2212.astype('int8'), [15, 16, 6]), ), 0)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
var_2277 = relay.var("var_2277", dtype = "int8", shape = (39, 6))#candidate|2277|(39, 6)|var|int8
call_2276 = func_624_call(relay.reshape(var_2277.astype('int8'), [9, 2, 13]), relay.reshape(var_2277.astype('int8'), [9, 2, 13]), )
call_2278 = func_624_call(relay.reshape(var_2277.astype('int8'), [9, 2, 13]), relay.reshape(var_2277.astype('int8'), [9, 2, 13]), )
uop_2279 = relay.atanh(uop_2257.astype('float64')) # shape=(2, 12, 14)
bop_2281 = relay.bitwise_or(uop_2257.astype('uint64'), relay.reshape(bop_2201.astype('uint64'), relay.shape_of(uop_2257))) # shape=(2, 12, 14)
output = relay.Tuple([const_2213,bop_2232,call_2236,const_2237,const_2238,call_2252,call_2260,var_2261,call_2270,call_2276,var_2277,uop_2279,bop_2281,])
output2 = relay.Tuple([const_2213,bop_2235,call_2239,const_2237,const_2238,call_2253,call_2262,var_2261,call_2271,call_2278,var_2277,uop_2279,bop_2281,])
func_2291 = relay.Function([var_2199,var_2220,var_2261,var_2277,], output)
mod['func_2291'] = func_2291
mod = relay.transform.InferType()(mod)
mutated_mod['func_2291'] = func_2291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2291_call = mutated_mod.get_global_var('func_2291')
var_2293 = relay.var("var_2293", dtype = "int64", shape = ())#candidate|2293|()|var|int64
var_2294 = relay.var("var_2294", dtype = "bool", shape = (15, 16, 6))#candidate|2294|(15, 16, 6)|var|bool
var_2295 = relay.var("var_2295", dtype = "uint32", shape = (2940,))#candidate|2295|(2940,)|var|uint32
var_2296 = relay.var("var_2296", dtype = "int8", shape = (39, 6))#candidate|2296|(39, 6)|var|int8
call_2292 = func_2291_call(var_2293,var_2294,var_2295,var_2296,)
output = call_2292
func_2297 = relay.Function([var_2293,var_2294,var_2295,var_2296,], output)
mutated_mod['func_2297'] = func_2297
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2451 = relay.const([[[7,-3,7,-8,-4,6,7,-2,4,-4,3,8,-3,4,9,10],[-4,-2,3,-1,8,-8,7,-1,3,3,7,3,10,-7,-5,-8],[-2,-9,-2,-1,-8,-3,-2,-5,-10,-1,2,6,-1,-2,2,7],[-2,-8,-7,-3,7,-7,2,1,2,8,8,-7,-9,-7,-1,-6],[9,7,10,-10,-8,5,10,-10,10,6,4,-6,2,-7,-8,-6],[-6,4,5,-2,-10,2,4,4,-2,3,6,2,-3,-1,-3,-9],[-1,4,4,8,-4,5,4,6,-10,5,-8,-3,7,3,4,8],[4,3,9,-1,-4,5,-6,6,-9,1,10,-2,8,9,-9,7],[-1,1,-4,5,1,-5,-10,-2,-6,8,-6,4,-6,-6,-2,-8],[5,-10,-4,-6,6,1,-4,7,-7,-5,5,-5,-2,8,7,-6],[-7,-1,3,7,9,-5,2,-5,7,10,-9,3,-9,7,8,8],[10,-6,7,4,3,2,-1,4,7,8,-2,-1,-3,-9,-2,6],[-6,-8,-8,-2,-10,-8,-1,9,-10,-6,-1,5,7,-6,-9,-2],[-7,-2,3,-7,8,5,10,9,-2,-2,4,-6,-1,2,5,7],[-4,-8,-2,-1,-2,2,-10,-2,10,5,1,-6,2,-2,-2,10],[9,5,6,-4,2,-10,10,5,4,-3,1,-7,7,-1,-2,7]],[[2,-5,-7,7,-6,4,-7,-4,-10,9,-6,6,8,2,-2,-1],[10,3,6,9,-6,-8,3,-7,-10,-6,-3,-10,10,10,3,-6],[-9,10,-10,-7,-3,3,-8,-1,-7,5,-7,-10,10,-1,-3,-6],[10,10,-5,10,4,4,-4,-10,-9,-10,1,7,9,-4,9,-9],[-6,-10,-7,-8,4,5,-8,8,2,-8,-5,6,-5,10,-10,2],[7,-8,-4,9,10,-5,-9,-8,8,-3,10,-1,-10,8,8,-8],[4,3,-2,-6,-6,-3,-4,3,-4,7,8,9,-6,1,-9,-3],[5,-10,8,-1,7,-9,-4,4,-1,-4,-6,-10,-9,10,-8,-2],[-1,-1,-10,-3,-6,-9,7,8,2,-10,4,5,-8,3,8,-10],[8,7,-4,7,5,8,-9,1,-10,-2,-10,10,-1,-8,8,5],[-1,-4,-3,3,-6,1,9,9,-4,4,7,5,-6,-7,1,10],[6,-7,4,-8,-2,8,-2,3,-7,3,-10,3,9,10,-4,4],[-4,-1,-10,1,-8,7,7,8,-8,9,9,-4,4,2,4,-9],[6,7,7,-10,-8,-8,7,-8,-9,3,-8,8,-2,-9,-4,-5],[8,-6,1,-1,3,5,-7,4,-1,-2,5,3,10,-6,-2,-5],[-2,-5,-9,3,8,-1,-2,-1,-4,-3,2,-10,8,7,6,10]],[[6,-2,-4,6,-4,8,-4,10,1,10,-9,-6,-6,-9,-8,10],[-4,9,-9,1,2,1,8,7,-7,3,-7,5,5,-6,2,-4],[-10,8,8,5,1,-7,7,8,-2,10,-1,3,-10,8,-8,-2],[-7,-10,-10,-4,-10,1,6,-1,-2,8,-7,-1,3,-3,-2,-1],[-5,-2,7,7,-1,-5,8,5,-9,3,-7,5,2,1,2,2],[5,4,4,-9,8,1,-10,-5,-1,-6,-1,-8,-8,-10,3,10],[8,9,-5,-6,-4,10,3,-4,-2,-3,-1,9,-10,-2,10,2],[-5,-1,-1,5,6,-1,9,-5,6,-5,9,-6,2,1,-9,-10],[-3,-7,10,2,-7,6,8,8,-9,1,-8,4,-7,2,9,-2],[-4,9,-3,1,1,6,9,3,9,-4,3,7,-5,5,2,6],[-8,-2,-5,-9,-10,-6,-10,-7,-3,6,-10,-3,3,-1,-7,10],[4,-6,-5,-5,-3,8,-8,-4,5,-6,-4,-2,-10,1,1,-5],[-3,4,-8,-7,-8,4,-9,8,8,-2,6,1,-8,3,4,-4],[1,-9,5,-9,10,-10,2,6,5,-4,10,4,8,7,7,10],[-7,6,6,6,1,-6,5,2,-10,8,-2,9,-2,-3,-8,-9],[-4,7,-2,-8,9,5,6,2,6,7,4,9,10,7,4,3]],[[10,-8,2,-5,-9,-5,-10,2,-6,-3,3,-6,-5,-1,8,-7],[-3,-3,10,-8,-10,4,9,-5,5,7,1,2,-6,-5,6,-5],[8,6,7,6,6,-7,-8,-1,-10,2,2,7,5,-6,-5,-4],[10,10,-5,-5,8,7,4,-8,8,6,-4,-2,9,1,-9,-7],[-6,-6,-5,1,5,-9,8,3,-9,-8,4,-1,-7,6,-9,5],[-2,-4,4,-10,5,-7,-7,1,-9,-9,8,-3,2,3,4,7],[-10,3,-8,4,10,-8,-10,-5,7,-10,-1,4,-4,-7,4,4],[-6,-10,8,8,3,-9,5,2,5,1,-8,-1,1,-3,-3,10],[4,4,4,-1,9,2,1,8,-5,-4,-3,7,5,8,7,-9],[-8,10,-6,8,1,9,-3,2,5,3,2,-3,-10,-7,9,-5],[-1,-8,7,2,8,-4,8,9,1,-1,-3,-10,-5,7,4,-2],[8,2,6,7,-3,4,-6,-5,6,10,2,2,6,3,3,5],[-5,-9,10,6,-7,-7,5,2,9,3,-1,-1,4,8,-9,-1],[1,7,7,7,4,-9,-5,2,-2,-5,10,1,-10,-3,2,-3],[-5,-6,-4,6,-8,-8,-5,-7,5,-9,8,9,9,-6,6,-5],[10,3,6,-1,-4,7,9,-8,8,9,7,3,-10,6,8,8]],[[5,-1,3,-7,-9,8,-2,2,2,-5,9,-5,-9,-6,-4,-5],[8,-2,-6,-7,7,4,-2,9,-8,-2,-4,-6,10,8,-8,3],[-8,6,5,-10,-1,-2,-3,-4,7,7,-5,-4,9,-8,-6,-3],[-5,-10,-4,-5,-5,5,-9,-10,-7,10,2,-8,8,7,5,10],[-9,-2,-1,8,-3,-3,-4,-9,-9,-4,2,3,-7,6,10,-4],[6,-4,1,2,-6,6,-9,-2,3,3,-9,-7,-7,-10,1,-10],[10,-4,7,-4,-3,5,-7,-2,3,8,-2,-8,-2,-7,-2,9],[-10,-2,-1,10,-9,7,1,6,5,-6,3,-7,4,-7,9,-8],[-1,6,9,7,2,-5,5,7,-7,8,-8,-2,-7,1,-5,4],[1,9,7,-7,-3,-2,-4,-10,-3,-1,-1,5,2,-5,5,4],[-1,-6,-2,-7,-7,-3,9,2,-10,-5,5,-3,8,-5,-9,-8],[3,-9,9,10,-7,7,-6,10,-3,9,4,7,9,-4,-1,9],[8,-9,-7,1,1,2,10,-3,6,2,-3,-4,9,3,2,-3],[1,7,10,4,7,-9,7,-9,4,-4,10,-9,8,10,5,2],[7,4,9,-1,3,3,-9,-4,6,10,-10,7,-3,9,2,4],[3,7,7,8,7,1,-6,1,-4,7,1,1,-1,-2,4,-2]],[[-5,8,-8,-3,8,3,10,5,4,-8,-8,-9,-3,-3,8,-5],[8,-6,-8,3,2,9,1,-5,-7,-2,-4,-7,-3,-6,-8,7],[-4,4,1,-9,7,-6,-3,-5,-4,9,-9,6,7,-4,-3,-2],[-3,1,8,-8,8,-3,-5,-3,-7,-8,9,8,-8,-2,3,-9],[2,2,-8,5,4,-8,8,7,-4,-2,3,-8,4,3,3,6],[4,5,8,-9,-8,1,-10,9,-5,6,3,-10,-3,-4,7,-2],[-6,4,-5,-8,9,6,10,-3,10,-5,-3,-8,10,-3,-10,9],[-9,1,3,8,-9,-3,-2,3,8,-5,-3,-7,4,9,4,9],[-10,-9,10,-6,2,5,8,7,8,-6,4,-3,3,2,1,-3],[4,5,-1,-2,-2,8,4,5,7,4,-5,2,2,-9,9,-3],[6,-6,1,-10,4,-3,3,-2,-1,6,3,6,-3,-8,9,-3],[1,9,-7,5,7,2,5,-2,10,2,5,-9,-5,1,10,8],[-5,-3,8,-6,5,-6,-3,7,-6,7,1,10,-4,-1,-6,8],[-9,-4,9,3,9,6,-8,5,4,-7,-9,10,-9,10,9,7],[-8,-7,2,-3,-9,-4,2,3,3,-8,1,6,10,-5,1,-8],[-2,6,-3,8,-7,-1,2,-4,7,7,-1,-6,-6,-9,5,-8]],[[2,-3,-4,-9,3,-10,5,2,-8,-8,2,10,-6,-7,-8,-8],[-8,5,3,-2,3,5,-8,10,6,6,3,-5,7,-10,4,7],[-2,-3,6,3,-9,-7,-7,-4,-4,-10,8,-8,5,2,-7,-3],[-1,5,-6,-5,9,4,1,-9,-8,-4,4,3,-9,1,4,-4],[-4,10,-9,7,-9,4,-8,-6,1,5,9,5,3,-5,-1,1],[8,-7,10,-5,-4,-10,-1,1,6,5,5,5,-7,-4,9,-6],[-9,-6,-7,-10,9,3,4,-1,-1,-6,-8,4,-1,-6,6,-9],[-6,-5,-5,4,-5,-3,-3,1,-1,-10,-10,-6,5,-3,-5,7],[7,-6,7,8,9,2,6,-5,10,7,10,-1,7,-5,6,4],[3,8,2,-3,7,-2,-9,-9,-2,9,2,-4,-3,1,-10,3],[-7,-7,-6,9,-8,-4,7,3,4,9,1,-6,4,-4,-6,-2],[-9,-1,1,-6,-2,3,-8,9,10,1,-3,8,6,-6,8,-5],[-6,1,10,-6,2,2,-8,5,8,3,-2,-1,-10,3,4,6],[8,-7,7,-1,-5,-10,-3,-2,10,2,-4,-10,-1,-6,-3,-7],[2,-9,7,9,-4,-4,-3,-8,4,4,-7,4,-9,3,5,-5],[3,-5,6,4,-4,-7,-9,-9,-8,-10,-9,-3,7,2,-5,8]],[[-1,-10,-8,8,-5,8,-1,4,1,-6,-10,-1,-4,-8,10,-7],[-8,1,-1,7,-4,-9,-5,-4,-9,-9,9,8,4,2,-2,8],[-8,-8,-6,7,2,-4,-3,3,9,2,3,1,6,3,4,9],[-10,3,4,5,7,2,8,-3,9,-6,5,-2,-3,-8,8,-9],[6,6,3,3,1,-4,-3,7,-10,4,2,-6,-3,-2,-4,1],[4,-10,-9,10,10,-10,-9,-5,-1,6,-5,8,7,-10,10,2],[7,4,-7,-5,-8,-2,-3,8,5,7,6,-9,5,5,9,1],[1,1,10,7,-10,-9,-3,8,10,-10,-1,1,-8,-1,-6,-2],[-10,7,8,9,2,-2,-4,-4,6,-3,3,-4,4,8,10,9],[3,-1,1,-3,-8,9,-5,-8,-7,1,9,-2,3,-3,2,-4],[-1,7,4,4,-5,4,5,5,5,3,1,6,-7,-8,4,-5],[-6,-6,4,-4,2,3,2,-1,-3,-2,2,-10,-9,-10,-10,-6],[9,9,-2,2,-3,-1,-2,3,-7,-2,2,-7,-2,-2,2,-3],[9,-6,-6,-5,3,3,8,-3,-10,-3,-8,-3,-9,-5,2,4],[9,-4,-8,4,-7,-9,3,-2,-8,7,-7,-10,-3,7,-2,-1],[-1,-8,6,-2,-8,-1,-4,8,-10,-2,3,-1,-7,-6,-9,4]],[[1,-1,-3,-3,-6,4,7,-6,6,4,-9,10,3,-9,-2,-6],[-2,-4,-2,7,-1,-9,-4,-5,-2,4,4,-1,1,-3,2,7],[-6,10,6,-5,-10,-7,-9,7,-3,-5,6,-6,-8,9,10,-4],[7,-4,3,1,-6,-8,-1,6,-7,-3,-1,-9,9,6,1,6],[6,-2,1,-2,10,-2,6,-6,-3,5,9,-10,9,-8,8,10],[-5,-2,-6,5,-4,-10,9,3,-5,3,-2,2,10,6,5,-3],[8,9,2,1,-5,6,7,5,10,7,2,5,-1,-2,-7,-9],[10,1,5,8,3,3,7,-1,5,-1,9,-9,-7,7,5,8],[-5,9,-1,8,-3,3,9,9,5,-9,3,5,10,-3,9,2],[2,-1,-8,-8,-2,-3,8,4,-1,6,-2,6,-4,-7,-2,-4],[-8,-1,8,1,2,-2,5,4,9,-10,2,3,4,-6,8,-5],[6,7,5,3,-2,-8,1,3,-3,-10,-10,8,4,-2,-5,-1],[3,5,5,-5,-5,4,-4,-5,-1,-1,-10,6,-4,-6,-7,10],[-8,8,-4,-10,6,4,-4,-9,4,7,9,-7,2,-2,4,-9],[-8,6,9,-3,-2,9,6,3,5,3,3,-7,-3,6,-4,10],[1,5,9,-7,7,-9,1,2,-1,-2,-2,3,-1,-5,-1,6]],[[-8,-2,-1,10,-4,-10,2,-2,4,9,-4,-3,1,-9,-2,4],[8,-9,-6,8,9,-6,-7,-5,-4,-8,7,3,-3,10,-5,-7],[2,-3,-6,-10,-6,-7,-7,-5,5,7,-9,9,3,7,-6,3],[10,-8,-7,-1,-7,10,-9,4,10,-7,4,-1,7,-4,-10,-3],[-3,7,1,4,6,-1,9,-10,-9,-10,-5,7,-8,-7,8,-1],[10,2,7,1,-10,-8,-10,-9,-5,9,1,2,-8,10,-8,8],[10,-1,-8,10,-5,-8,-5,3,8,-2,9,-10,4,5,-4,1],[-5,-1,-5,10,9,6,-6,6,2,-5,-1,-9,9,-6,-7,7],[1,4,10,7,-1,-3,-3,-3,8,-7,-4,-3,-8,-8,-6,-6],[4,5,3,3,-7,3,7,7,3,-4,10,-2,6,5,4,1],[3,-1,-7,2,-1,6,-8,-5,6,-8,9,-5,9,-1,1,-10],[-7,3,-5,8,8,6,-6,9,-10,-6,-8,-6,-1,9,-8,-8],[-1,-10,6,2,1,-3,9,-7,-8,10,4,-10,-4,8,-9,-8],[9,-7,-6,-10,7,4,-5,4,5,-7,1,-5,10,8,2,-2],[-4,6,7,4,1,-1,10,10,-1,-6,6,-9,7,-8,3,-7],[-8,-6,-1,1,10,-8,7,-8,7,-3,7,1,-9,-2,8,3]],[[4,-1,2,7,-5,-4,7,3,6,-8,9,-7,-8,-5,10,-2],[-5,-9,6,9,-5,6,-5,-5,-6,-5,2,-5,1,-7,-6,-5],[-2,10,-2,-1,-1,6,-7,-8,4,10,-7,8,-5,-1,2,3],[-10,-1,-1,-7,9,-10,-8,1,-4,-10,8,-9,1,-3,3,8],[-9,6,-3,-4,-10,-1,5,-10,5,-7,8,-5,5,-3,-5,2],[3,-6,4,-1,6,-3,-5,9,-3,-2,-4,9,6,8,2,-7],[-9,-1,5,-5,5,-2,-1,2,-9,4,-3,1,-4,1,8,-2],[1,9,-7,-6,4,-3,-1,8,1,-3,4,4,-2,5,2,-6],[1,8,-2,2,-6,-1,-2,-9,3,-7,-8,7,5,2,1,10],[-5,-2,7,-1,9,-10,-2,-3,-2,4,-9,-10,2,2,9,-7],[-10,-9,3,10,3,2,-10,10,5,-2,4,-9,-3,2,-2,-6],[6,-1,-9,-10,10,8,8,2,2,8,-5,2,9,-9,1,-5],[-5,5,-5,8,8,5,-4,7,-10,-1,3,2,7,3,9,4],[-4,9,5,-5,3,-7,9,-4,3,4,9,8,-7,6,10,-1],[-1,4,-6,-9,10,-6,1,10,5,2,1,-2,2,6,7,6],[6,4,-8,-2,10,-1,-8,-7,-6,9,-8,8,8,-3,9,-5]],[[-9,10,-3,-10,-8,3,6,9,8,1,-10,7,-1,2,-2,-7],[-7,10,9,2,5,-5,7,2,3,-3,-10,-8,-3,-3,1,-7],[8,8,-9,5,8,-4,-4,-2,10,8,10,-1,10,7,5,-8],[1,-10,-8,6,-5,-1,-7,-5,-2,6,-3,-2,-2,-2,5,2],[10,10,-7,4,-9,2,-9,4,2,-1,9,-7,4,-10,3,-7],[-3,9,-5,3,-7,9,-2,7,-3,10,-4,2,10,9,3,-4],[-2,6,7,1,-4,10,-3,1,-5,-7,10,7,3,-3,1,-3],[-2,2,8,-3,-6,-8,10,-5,10,4,-3,-2,-8,-3,2,-3],[4,-4,-1,-5,-10,5,10,-6,4,-4,2,5,1,-8,3,9],[-9,10,-2,6,-5,3,-3,-10,1,-7,-10,-3,-10,7,-4,-9],[-3,-4,3,6,-5,5,-10,-6,-7,-5,5,1,1,-7,6,2],[4,-2,-10,-4,9,-2,2,-1,-10,9,6,-1,8,4,3,-1],[3,-3,-4,-7,-6,-4,-6,-1,-1,4,-10,4,10,-2,-5,-1],[8,1,-2,-7,-7,9,5,-2,2,-6,8,2,10,-2,-7,-5],[-6,9,7,6,-6,-9,-7,-9,-4,1,7,-3,-7,3,-7,-1],[9,1,-3,-1,-2,-9,-9,7,-5,9,-2,-10,5,-5,6,-5]],[[5,10,-3,-6,-9,-5,5,-4,-2,4,-5,-5,8,3,5,8],[6,-9,-6,3,1,-6,1,9,-4,7,7,-10,-1,8,2,5],[3,6,-8,9,-8,8,-6,1,9,-1,-10,-1,5,9,7,-7],[10,2,-2,-9,-7,-10,-3,-6,10,7,8,3,7,-1,5,-7],[-1,3,1,6,1,2,8,6,-5,8,-1,7,4,-4,-5,-4],[-1,2,10,-9,-3,-5,-9,6,4,-7,8,4,-1,-1,-1,-5],[-3,-2,4,-6,-4,-5,-9,-7,9,-7,6,-9,2,-5,4,-3],[6,1,-9,-6,-5,-6,-6,-9,-6,3,10,1,1,-6,6,1],[-7,4,7,-8,5,-9,6,-7,6,4,-2,-1,1,-6,-7,8],[9,-7,-4,-1,9,-9,9,7,5,-3,-6,-8,2,-3,2,10],[-5,-8,-3,7,8,-7,3,-2,5,5,-10,8,10,-10,3,4],[8,-7,2,3,10,-6,-5,-1,-6,2,1,9,-3,4,8,4],[-1,-6,-4,4,10,9,2,6,8,5,1,-1,-4,10,4,-7],[4,-1,-4,-4,-6,-2,3,-6,9,2,-5,4,-9,-1,-10,-1],[4,5,-6,-6,4,-9,-7,9,6,6,2,3,6,-6,4,3],[9,10,8,6,-4,-10,1,7,-9,-1,4,-4,-7,9,10,-9]],[[-1,-4,5,-3,-8,9,10,-7,8,-2,9,5,8,5,-5,9],[-5,4,-5,-6,10,10,-1,1,-2,-6,-10,-7,2,-8,-8,10],[8,-3,3,-3,7,4,-10,-9,-9,7,3,-8,8,1,-1,-1],[-7,1,4,-4,9,8,3,6,-2,1,-7,-4,3,2,8,-4],[-8,6,10,2,8,-3,-7,4,3,9,-2,-4,-10,-10,2,5],[10,-1,-3,-2,-2,3,7,1,3,-10,4,-2,2,3,8,1],[9,-8,4,-3,-8,-6,-4,-3,-10,1,-6,-10,-5,-2,1,10],[-7,2,8,-8,4,9,4,2,-4,-9,8,-1,-10,-5,-8,3],[-3,7,-10,8,-2,1,-1,-1,8,9,7,8,-3,-10,-9,-6],[-6,2,1,-2,-8,-10,-8,6,-9,3,-5,3,5,10,-4,6],[3,-10,9,9,6,8,8,-9,1,5,4,-5,-1,5,-3,-9],[-9,1,10,-7,7,8,1,6,-3,9,9,6,-9,7,-2,-8],[-3,10,9,10,5,3,9,-10,-8,-10,3,7,9,-3,10,3],[-8,-9,-4,-3,8,7,-7,10,7,4,-7,9,-7,-6,-4,4],[-4,9,3,7,1,-1,-2,-4,2,-9,1,3,-10,6,-10,8],[-3,-1,10,-10,-3,-9,-3,-8,-3,3,4,-3,-5,-10,9,-8]],[[-4,1,-9,7,3,1,-1,10,-3,-9,9,3,10,10,9,2],[-6,-9,3,9,2,-3,-8,-8,-7,7,-8,1,-4,-7,-8,-8],[3,9,5,-3,9,-1,-10,7,-5,-3,-5,-1,3,1,9,6],[-7,8,-7,9,9,-1,9,4,2,-9,2,-5,-7,6,6,-8],[9,6,-8,-9,7,6,10,1,7,-9,9,-4,10,4,4,-10],[-7,8,-1,4,9,-3,-10,-10,-4,8,5,-10,3,-1,-6,-1],[-7,-10,-6,-4,2,5,-2,1,-6,-7,-2,-5,3,-4,-7,3],[2,2,-6,6,-4,2,-7,-9,-1,-3,-5,7,-4,-8,6,7],[-5,-7,-5,-10,5,4,6,-5,2,-9,-6,-9,-9,-3,8,-2],[-1,3,3,7,-9,10,-6,2,2,-9,2,-1,4,-4,6,-5],[-5,4,-6,-6,4,8,-10,2,-6,2,-8,8,9,-4,8,-1],[-10,2,6,10,-5,-1,-1,-9,-3,-4,6,-5,-4,1,10,8],[6,7,10,-5,-6,-10,-1,-5,-1,-7,2,5,3,-9,-7,5],[7,-9,-9,-9,-1,3,9,-6,8,-1,-7,6,2,5,4,-5],[3,-7,-6,-9,-9,-9,-10,-1,10,9,-8,-9,4,-10,-3,-1],[-6,-1,7,1,2,-6,-7,-1,9,-4,6,-7,-9,-9,1,1]]], dtype = "uint32")#candidate|2451|(15, 16, 16)|const|uint32
var_2452 = relay.var("var_2452", dtype = "uint32", shape = (15, 16, 16))#candidate|2452|(15, 16, 16)|var|uint32
bop_2453 = relay.right_shift(const_2451.astype('uint32'), relay.reshape(var_2452.astype('uint32'), relay.shape_of(const_2451))) # shape=(15, 16, 16)
output = relay.Tuple([bop_2453,])
output2 = relay.Tuple([bop_2453,])
func_2456 = relay.Function([var_2452,], output)
mod['func_2456'] = func_2456
mod = relay.transform.InferType()(mod)
mutated_mod['func_2456'] = func_2456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2457 = relay.var("var_2457", dtype = "uint32", shape = (15, 16, 16))#candidate|2457|(15, 16, 16)|var|uint32
func_2456_call = mutated_mod.get_global_var('func_2456')
call_2458 = func_2456_call(var_2457)
output = call_2458
func_2459 = relay.Function([var_2457], output)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2496 = relay.var("var_2496", dtype = "float32", shape = (11, 6, 6))#candidate|2496|(11, 6, 6)|var|float32
var_2497 = relay.var("var_2497", dtype = "float32", shape = (11, 6, 6))#candidate|2497|(11, 6, 6)|var|float32
bop_2498 = relay.floor_mod(var_2496.astype('float32'), relay.reshape(var_2497.astype('float32'), relay.shape_of(var_2496))) # shape=(11, 6, 6)
bop_2510 = relay.multiply(var_2496.astype('uint64'), relay.reshape(var_2497.astype('uint64'), relay.shape_of(var_2496))) # shape=(11, 6, 6)
func_1884_call = mod.get_global_var('func_1884')
func_1888_call = mutated_mod.get_global_var('func_1888')
const_2514 = relay.const([[8,-3,4,-8,10,8,9,-3,10,4,-2,9,-2,-9,-3,-3,9,-9,-1,-9,6,7,5,-2,8,7,6,7,1,7,1,4,-7,2,1,-9,1,2,-5,-1,2,-7,5,6,-8,-9,-2,-10,5,7,5,1,-3,2,-9,3,10,-8,1,-1,7,-1,-1,10,-5,2,-4,-8,7,-6,-10,8,8,4,-9,2,5,7,-4,-3,-5,-9,-7,-7,-6,1,-2,7,-4,-1,8,-9,7,-10,-4,-10,-6,-7,5,-9,6,8,-10,8,-7,-7,4,-7,-3,-10,10,5,8,-10,7,-7,-1,1,-9,3,9,1,7,4,7,-6,-3,-2,2,-5,1,-2,-6,-2,-3,1,7,5,1,6,3,-2,3,-9,-8,-4,8,-1,-10,-9,10,-2,3,-2,7,2,-10,-6,10,7,-10,7,8,2,1,-8,-5,-9,-10,-5,-9,-8,-3,1,10,3,9,-9,8,-3,-5,1,1,-8,-4,-9,10,-1,2,8,10,-1,1,-5,1,7,9,4,9,3,5,-6,9,-1,1,-10,-1,1,-3,1,4,-10,8,-5,7,10,-1,-8,6,-9,9,2,-2,-3,9,9,-2,8,-4,-6,-2,3,-5,-2,-10,-9,-2,-8,4,-1,5,-6,-10,6,-7,5,9,3,-8,-4,-7,7,6,6,-9,4,-9,-3,-5,3,1,3,7,-5,-10,5,-4,5,-10,-9,-7,4,-3,5,6,-2,-7,9,1,-10,3,-6,-10,4,-3,-10,7,-6,-1,-10,10,-3,9,2,-6,-10,-8,3,-9,-7,-3,3,-2,-10,-2,9,-2,-9,-4,10,-3,-8,-7,8,-1,8,-5,6,4,8,6,-7,2,9,9,8,10,-5,-9,4,-2,-6,5,-2,-7,6,10,2,-3,7,-2,6,-1,2,-5,-1,-9,4,10,5,-6,1,-4,7,-5,9,-9,3,7,-1,-10,-9,-3,4,-9,-1,2,3,6,-5,-6,10,1,-7,-9,-9,3,9]], dtype = "uint64")#candidate|2514|(1, 378)|const|uint64
var_2515 = relay.var("var_2515", dtype = "int8", shape = (1440,))#candidate|2515|(1440,)|var|int8
call_2513 = relay.TupleGetItem(func_1884_call(relay.reshape(const_2514.astype('uint64'), [14, 3, 9]), relay.reshape(const_2514.astype('uint64'), [14, 3, 9]), relay.reshape(var_2515.astype('int8'), [1440,]), ), 4)
call_2516 = relay.TupleGetItem(func_1888_call(relay.reshape(const_2514.astype('uint64'), [14, 3, 9]), relay.reshape(const_2514.astype('uint64'), [14, 3, 9]), relay.reshape(var_2515.astype('int8'), [1440,]), ), 4)
output = relay.Tuple([bop_2498,bop_2510,call_2513,const_2514,var_2515,])
output2 = relay.Tuple([bop_2498,bop_2510,call_2516,const_2514,var_2515,])
func_2517 = relay.Function([var_2496,var_2497,var_2515,], output)
mod['func_2517'] = func_2517
mod = relay.transform.InferType()(mod)
var_2518 = relay.var("var_2518", dtype = "float32", shape = (11, 6, 6))#candidate|2518|(11, 6, 6)|var|float32
var_2519 = relay.var("var_2519", dtype = "float32", shape = (11, 6, 6))#candidate|2519|(11, 6, 6)|var|float32
var_2520 = relay.var("var_2520", dtype = "int8", shape = (1440,))#candidate|2520|(1440,)|var|int8
output = func_2517(var_2518,var_2519,var_2520,)
func_2521 = relay.Function([var_2518,var_2519,var_2520,], output)
mutated_mod['func_2521'] = func_2521
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2610 = relay.const([[[1,-4,9,8,9,-4,2,-10,-8,5,3,7,-3,3,10]],[[-9,-7,-7,9,8,5,-8,2,10,-2,9,-8,-1,3,-8]],[[-8,-5,-10,-9,8,-8,-3,-2,4,-4,8,4,-2,-9,-3]],[[-9,4,3,-6,4,4,-7,-10,-2,4,3,-9,-9,3,7]],[[7,-6,10,4,4,10,-9,2,7,-4,-10,-2,-5,10,-1]],[[6,3,-8,9,-6,9,10,-2,-7,-6,9,-1,7,-4,-6]],[[3,2,1,-8,-9,5,2,-5,-8,5,-7,-2,-7,-2,5]],[[3,-9,-6,4,-1,10,-2,1,-7,2,-7,-8,7,7,4]],[[7,-1,-4,-7,1,-1,5,-3,3,-7,4,5,-2,-7,2]]], dtype = "int16")#candidate|2610|(9, 1, 15)|const|int16
var_2611 = relay.var("var_2611", dtype = "int16", shape = (9, 6, 15))#candidate|2611|(9, 6, 15)|var|int16
bop_2612 = relay.multiply(const_2610.astype('int16'), var_2611.astype('int16')) # shape=(9, 6, 15)
output = bop_2612
output2 = bop_2612
func_2616 = relay.Function([var_2611,], output)
mod['func_2616'] = func_2616
mod = relay.transform.InferType()(mod)
var_2617 = relay.var("var_2617", dtype = "int16", shape = (9, 6, 15))#candidate|2617|(9, 6, 15)|var|int16
output = func_2616(var_2617)
func_2618 = relay.Function([var_2617], output)
mutated_mod['func_2618'] = func_2618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2910 = relay.var("var_2910", dtype = "float64", shape = (14, 5, 10))#candidate|2910|(14, 5, 10)|var|float64
uop_2911 = relay.log10(var_2910.astype('float64')) # shape=(14, 5, 10)
func_1604_call = mod.get_global_var('func_1604')
func_1610_call = mutated_mod.get_global_var('func_1610')
var_2926 = relay.var("var_2926", dtype = "int32", shape = (3136,))#candidate|2926|(3136,)|var|int32
var_2927 = relay.var("var_2927", dtype = "int8", shape = (234,))#candidate|2927|(234,)|var|int8
const_2928 = relay.const([5.842178,1.196019,-8.286984,2.507729,1.012155,6.356273,-3.955077,3.633707,9.093299,0.135296,7.448706,-7.189488,4.088209,2.701691,-0.565532,-7.882598,3.602624,1.109994,-4.509902,2.137935,9.215644,0.839182,-3.440345,7.803212,-3.455097,-4.872867,-1.782895,-1.316695,9.153768,-7.194916,-8.470715,2.132973,-1.762607,-3.942692,7.582646,4.097296,-7.163196,-0.434556,4.700324,-1.026061,7.719275,5.944061,-5.352605,1.709462,1.038421,9.796442,-0.684450,-5.529680,6.928023,4.844754,-0.279217,5.238621,-1.140096,-7.440154,3.336100,5.666945,5.844194,-1.166529,-6.365412,6.756463,0.928248,-8.770927,4.431310,-8.669124,5.669080,5.676852,-0.335471,-2.919923,-1.492821,6.672979,-9.444785,-5.797059,8.331900,4.851593,-8.293292,-3.291278,8.089261,-9.268469,4.141462,5.570011,-3.122013,-0.897117,3.087950,6.199495,6.759639,8.798005,-1.016085,0.169571,-8.469173,7.163114,2.333784,-8.962641,-5.651976,8.535241,1.783366,-1.521301,0.401745,6.581910,-5.226189,5.216065,3.210548,1.352130,-8.366389,8.643773,6.966154,-3.877958,-7.413751,6.463760,6.173436,-5.893833,7.359867,-3.138651,-0.541876,3.667944,3.325259,-9.207661,1.317074,-6.836522,1.450395,-9.490296,-0.676970,6.280756,2.112502,-9.421750,-7.396772,4.826792,0.195382,-6.729959,3.532958,-3.704653,-0.435093,7.859563,-3.313383,-2.179754,-7.108139,-4.468513,0.337783,7.595752,-2.683564,4.895937,2.626656,-5.679250,-8.524498,-4.747412,-6.887306,-5.482869,2.183207,-9.137042,2.315634,8.208012,9.124922,6.217703,-1.570644,5.232805,-7.032645,4.775076,-9.985254,-2.660113,-2.963304,-6.598829,-1.980084,-2.295842,7.976010,4.335632,2.652074,-6.584180,1.892772,0.435242,-1.425926,-6.145874,3.351498,-1.422111,-8.031862,-1.871823,2.196140,3.565077,-1.535689,-7.712435,6.785438,-1.570151,-8.242809,4.553262,-8.775367,5.176118,-9.183705,3.084397,1.279484,3.999367,2.499201,0.591581,-0.884051,-5.762975,-1.040751,-5.464422,-0.087867,-3.131252,9.195763,-8.183845,-4.849417,0.819849,-8.925306,-6.285522,-1.052071,0.466433,4.280211,2.868566,0.263389,-2.732859,-0.283321,7.742093,-5.599764,3.352348,-8.724959,6.007723,-8.562915,7.683881,-2.104361,-0.601064,9.200806,-8.661951,-5.830490,-1.298158,2.655061,4.109379,-0.207709,-3.302413,-6.682405,-0.744141,-6.252037,9.762376,-9.339899,2.955670,-2.511411,-5.921828,1.894094,8.936582,-3.331657,6.871825,-9.621195,0.639180,-8.084413,5.397208,3.610054,5.152342,-1.975149,-7.906609,1.783887,1.422051,-3.397553,1.961072,-9.483994,7.270162,-4.069197,-0.678874,-6.303831,4.544902,0.507718,1.609215,7.234078,-8.690093,-9.597404,-7.944997,-3.018083,7.025558,0.505239,-6.354307,1.727788,-2.307822,6.339643,7.881607,-5.864084,-5.758989,2.312456,4.721349,-3.598410,-5.917372,-5.777007,-7.110059,-4.873084,9.963333,-0.579882,1.794041,-5.746181,9.421262,-7.913409,4.525765,-1.728463,6.576983,0.279369,-2.389601,-1.674234,-1.614086,9.727378,-4.172226,8.989959,-3.386774,0.840343,5.626149,3.453262,2.725460,5.363862,2.606671,-8.576387,-2.406291,9.177760,3.278462,7.288314,-2.079603,-2.404203,0.971857,1.400422,1.982952,3.141244,-3.189382,-3.191875,3.746712,-4.908160,4.679304,7.488349,-5.541546,-6.438300,-8.383662,-8.720188,-1.807638,6.835607,-9.746356,2.105691,-4.841886,-3.178319,-5.628448], dtype = "float32")#candidate|2928|(330,)|const|float32
call_2925 = relay.TupleGetItem(func_1604_call(relay.reshape(var_2926.astype('int32'), [14, 16, 14]), relay.reshape(var_2926.astype('int32'), [14, 16, 14]), relay.reshape(var_2927.astype('int8'), [1, 234]), relay.reshape(const_2928.astype('float32'), [330,]), ), 4)
call_2929 = relay.TupleGetItem(func_1610_call(relay.reshape(var_2926.astype('int32'), [14, 16, 14]), relay.reshape(var_2926.astype('int32'), [14, 16, 14]), relay.reshape(var_2927.astype('int8'), [1, 234]), relay.reshape(const_2928.astype('float32'), [330,]), ), 4)
var_2933 = relay.var("var_2933", dtype = "float32", shape = (330,))#candidate|2933|(330,)|var|float32
bop_2934 = relay.logical_xor(const_2928.astype('int64'), relay.reshape(var_2933.astype('int64'), relay.shape_of(const_2928))) # shape=(330,)
func_1454_call = mod.get_global_var('func_1454')
func_1457_call = mutated_mod.get_global_var('func_1457')
var_2940 = relay.var("var_2940", dtype = "uint32", shape = (15, 196))#candidate|2940|(15, 196)|var|uint32
call_2939 = relay.TupleGetItem(func_1454_call(relay.reshape(var_2940.astype('uint32'), [14, 14, 15]), relay.reshape(var_2940.astype('uint32'), [14, 14, 15]), ), 0)
call_2941 = relay.TupleGetItem(func_1457_call(relay.reshape(var_2940.astype('uint32'), [14, 14, 15]), relay.reshape(var_2940.astype('uint32'), [14, 14, 15]), ), 0)
output = relay.Tuple([uop_2911,call_2925,var_2926,var_2927,bop_2934,call_2939,var_2940,])
output2 = relay.Tuple([uop_2911,call_2929,var_2926,var_2927,bop_2934,call_2941,var_2940,])
func_2960 = relay.Function([var_2910,var_2926,var_2927,var_2933,var_2940,], output)
mod['func_2960'] = func_2960
mod = relay.transform.InferType()(mod)
var_2961 = relay.var("var_2961", dtype = "float64", shape = (14, 5, 10))#candidate|2961|(14, 5, 10)|var|float64
var_2962 = relay.var("var_2962", dtype = "int32", shape = (3136,))#candidate|2962|(3136,)|var|int32
var_2963 = relay.var("var_2963", dtype = "int8", shape = (234,))#candidate|2963|(234,)|var|int8
var_2964 = relay.var("var_2964", dtype = "float32", shape = (330,))#candidate|2964|(330,)|var|float32
var_2965 = relay.var("var_2965", dtype = "uint32", shape = (15, 196))#candidate|2965|(15, 196)|var|uint32
output = func_2960(var_2961,var_2962,var_2963,var_2964,var_2965,)
func_2966 = relay.Function([var_2961,var_2962,var_2963,var_2964,var_2965,], output)
mutated_mod['func_2966'] = func_2966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3173 = relay.var("var_3173", dtype = "float64", shape = (10, 14, 11))#candidate|3173|(10, 14, 11)|var|float64
uop_3174 = relay.sigmoid(var_3173.astype('float64')) # shape=(10, 14, 11)
output = relay.Tuple([uop_3174,])
output2 = relay.Tuple([uop_3174,])
func_3177 = relay.Function([var_3173,], output)
mod['func_3177'] = func_3177
mod = relay.transform.InferType()(mod)
var_3178 = relay.var("var_3178", dtype = "float64", shape = (10, 14, 11))#candidate|3178|(10, 14, 11)|var|float64
output = func_3177(var_3178)
func_3179 = relay.Function([var_3178], output)
mutated_mod['func_3179'] = func_3179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3371 = relay.var("var_3371", dtype = "uint64", shape = (5, 8, 2))#candidate|3371|(5, 8, 2)|var|uint64
const_3372 = relay.const([[[-1,8],[8,-8],[4,-10],[-4,-3],[-9,9],[7,3],[-3,-9],[-7,2]],[[3,6],[6,2],[8,8],[-2,-7],[10,-6],[-8,-2],[-7,5],[-7,-1]],[[-8,4],[1,-5],[-9,-10],[-6,1],[-5,-4],[-7,7],[7,-9],[10,7]],[[-7,4],[-8,-6],[4,7],[5,7],[-8,-6],[-7,-8],[-6,1],[6,-3]],[[-10,10],[8,6],[-2,-3],[2,8],[2,4],[6,6],[-10,7],[6,9]]], dtype = "uint64")#candidate|3372|(5, 8, 2)|const|uint64
bop_3373 = relay.multiply(var_3371.astype('uint64'), relay.reshape(const_3372.astype('uint64'), relay.shape_of(var_3371))) # shape=(5, 8, 2)
func_1469_call = mod.get_global_var('func_1469')
func_1472_call = mutated_mod.get_global_var('func_1472')
var_3377 = relay.var("var_3377", dtype = "float64", shape = (945,))#candidate|3377|(945,)|var|float64
call_3376 = func_1469_call(relay.reshape(var_3377.astype('float64'), [9, 15, 7]))
call_3378 = func_1469_call(relay.reshape(var_3377.astype('float64'), [9, 15, 7]))
output = relay.Tuple([bop_3373,call_3376,var_3377,])
output2 = relay.Tuple([bop_3373,call_3378,var_3377,])
func_3379 = relay.Function([var_3371,var_3377,], output)
mod['func_3379'] = func_3379
mod = relay.transform.InferType()(mod)
var_3380 = relay.var("var_3380", dtype = "uint64", shape = (5, 8, 2))#candidate|3380|(5, 8, 2)|var|uint64
var_3381 = relay.var("var_3381", dtype = "float64", shape = (945,))#candidate|3381|(945,)|var|float64
output = func_3379(var_3380,var_3381,)
func_3382 = relay.Function([var_3380,var_3381,], output)
mutated_mod['func_3382'] = func_3382
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3676 = relay.const([[[-2.587014,-6.646899,-2.437557,-9.671016,8.886361,0.861857],[-6.997059,-5.743310,-7.473304,8.459874,-1.862050,-1.623951],[-6.132352,8.627421,0.212668,-4.730538,6.284735,7.094862],[-0.233340,6.661430,1.146096,-5.768252,-4.141583,-1.486451],[8.912914,7.823563,4.449570,-5.267928,7.613730,8.383993],[-8.482659,-1.144408,-2.715277,-9.820006,1.990448,-5.625156],[-0.554769,-5.866436,8.576628,4.138943,3.565342,6.176127],[-8.604926,-2.006294,3.355184,2.151161,-1.862781,3.448719],[1.263345,0.444933,-4.018433,2.723123,-0.375568,9.288349],[-9.671932,0.716365,-5.222829,4.772345,-4.239676,-0.727291],[1.283064,4.035770,3.295580,-7.624830,-8.203781,8.328188],[-5.132558,4.235684,-6.104182,-6.970610,3.264384,-8.873151],[-8.553368,9.280322,-7.635129,7.926507,1.606808,8.784682],[2.625870,5.301678,5.435830,-8.714368,6.680528,-7.186144]],[[4.104977,4.110920,-4.233002,-9.107009,8.430931,9.294061],[5.917772,9.259457,-8.617964,4.629634,-2.280393,4.839150],[7.099745,6.781627,-5.612428,-1.983833,1.269151,-3.521963],[-3.837052,-7.852791,-2.239661,3.479175,-9.645413,-1.620088],[9.180846,1.307572,-0.166627,7.138088,-1.833876,4.143782],[-8.876576,-2.119664,7.356388,-8.474277,2.206967,8.568255],[-9.844511,7.828070,4.518332,4.551890,7.528649,-4.627264],[-9.008543,3.218562,2.819716,1.739955,7.832168,3.512707],[-9.089225,-5.703039,-9.556783,-4.702714,-8.701743,-5.983301],[1.827345,-9.389295,-5.029636,1.834880,-3.680619,8.433210],[5.407742,6.495025,8.148808,9.980261,-1.895263,3.427985],[1.273994,-5.505713,-2.936347,2.748557,-3.999516,-4.590492],[-4.538768,8.368004,7.118815,-0.874981,2.855963,9.330319],[-7.168942,9.278743,-6.736521,-2.263904,-2.749786,1.221506]],[[8.180136,-0.798855,-2.097401,-7.188783,-2.242070,4.780513],[-1.076919,-5.805476,4.416436,-6.413161,-7.983490,3.437894],[3.417696,-7.832443,-0.670509,-4.210183,-8.099324,2.202059],[6.627994,-1.969511,-6.227472,4.411188,2.733263,-6.123088],[3.785597,3.381408,-1.635543,-3.193200,-9.877917,3.096897],[-1.338556,-3.171854,8.346489,8.125047,3.918107,-8.893067],[9.216446,-4.876379,-3.729570,-1.456630,-5.330250,5.419617],[-7.333382,-6.815141,5.586022,6.581710,2.768837,-4.208987],[7.864921,9.103708,5.255230,-5.962143,-2.109079,-1.766600],[-9.546525,-2.480762,-3.090759,7.443046,-1.880353,3.948524],[-7.657695,4.631973,-0.771522,-0.680055,-5.419836,-0.216261],[2.093247,-4.695014,1.636932,-8.172592,2.810166,-3.954447],[2.400453,-2.279326,3.626190,7.861372,-4.341951,7.193044],[-2.081724,1.922620,-1.319311,0.148603,-7.651226,5.581864]],[[-1.646657,8.011466,-6.444931,6.473153,-7.158190,6.135486],[2.289413,2.296796,-7.332289,-0.696143,-1.881076,7.126790],[9.101276,-1.309693,-9.201383,3.889308,-6.954799,9.499786],[0.339205,-1.967782,-9.715686,6.118757,-8.158150,-7.898106],[-8.236705,8.211987,-2.929341,0.431001,4.384745,6.852466],[7.525541,-4.092329,-5.844017,-1.873825,-5.842590,6.122487],[6.985285,-6.815317,9.984349,-3.932068,6.257601,-7.923768],[-2.065537,3.780941,6.397282,7.025772,-4.381979,-3.680848],[1.972457,-1.310077,4.562977,3.137463,-4.422536,-0.676678],[-2.657061,5.179629,3.883313,5.596173,7.898453,3.432509],[2.697009,6.729216,5.374716,-3.542974,7.673653,-3.461590],[-8.992924,5.310710,-8.858209,-2.424710,-4.852554,-6.067385],[6.576336,8.384078,3.906844,-8.620252,3.382023,-2.956478],[1.527774,-8.153640,9.201292,-1.282520,-1.863410,-5.811639]],[[8.546578,5.597285,3.359037,3.231876,8.406973,1.074481],[-7.394104,0.761888,-3.307277,-2.043269,6.648464,-6.179648],[2.508460,-1.076069,-1.211536,-9.700345,-9.146131,6.733708],[-1.871259,-2.854832,1.324980,-0.066634,2.851154,2.301405],[5.384488,-1.531322,-5.662772,5.686195,6.237369,6.189555],[-6.179240,4.809144,0.226363,-2.470593,-2.531476,2.317571],[8.955643,5.125589,-1.003436,-6.184035,-4.560686,-5.316999],[3.265912,-7.198431,7.043522,-3.068940,-6.130808,-1.255808],[-5.294027,2.303098,-4.448958,-4.607429,-7.148464,-2.830923],[-3.891150,-9.807956,7.409004,-4.173046,-5.400364,4.483785],[-4.478706,6.939076,-9.871054,2.938185,5.212267,4.192813],[3.390621,6.425592,5.588488,-5.136765,-0.023945,-7.827750],[4.541140,-3.086829,1.746655,-9.586960,1.384006,-1.667332],[9.898787,-2.961896,-7.737701,-5.515572,9.661527,7.867250]],[[-0.468925,-7.258175,-4.249775,-1.421521,9.543156,6.527993],[8.497473,3.542257,-8.884638,-2.867952,6.892956,-4.891423],[-4.487508,8.559620,-3.534114,-0.934472,7.072927,5.062157],[1.124448,6.496697,-3.894168,7.836613,-3.185570,-4.551198],[2.356068,3.805247,4.384542,-3.853161,-3.993637,5.416654],[7.729180,3.852751,-1.295379,-9.716006,5.522124,1.169333],[6.239758,2.852952,7.877370,-8.610843,-4.037146,3.899354],[8.456802,0.860455,7.638807,-9.138312,-7.182972,4.807062],[-7.965326,-9.869213,-9.104340,5.641424,-6.964056,1.406558],[-2.995900,-6.531944,0.579343,-9.393495,-6.243502,3.948460],[-1.675799,-3.275962,6.533130,2.212396,6.907695,7.200489],[7.509686,8.820409,9.879780,9.072664,-3.348086,-2.385343],[6.312694,-2.089731,-2.417594,-0.337593,0.699972,8.740499],[-0.838677,-2.188406,-4.577150,6.351348,-2.949391,-5.330900]],[[-1.644824,5.266890,4.053633,-5.914261,-8.648016,-4.653631],[-4.172565,6.201564,3.943230,7.620721,-1.887832,-9.867690],[4.807388,-6.937546,-4.319913,-2.332463,9.675304,-1.736939],[2.185070,6.240251,7.406408,5.093435,-6.913634,-4.458025],[6.940656,-5.908672,9.032251,1.822703,-6.786028,6.900959],[-2.479726,7.077977,5.153762,-5.285006,3.258788,0.618402],[-3.867684,-8.449742,0.422438,-6.661729,-9.124178,-3.662219],[9.156321,3.822269,-4.906229,7.798382,-0.972926,-2.236677],[-7.266460,-0.136697,-8.386333,-0.018761,-6.431361,-5.542771],[4.273024,6.855966,0.564301,-9.409791,8.232713,-4.146298],[-6.742274,-7.841398,9.875506,-5.635501,8.876447,2.774248],[-5.942389,-0.496890,-7.198418,9.904266,-3.903089,-2.536385],[-0.830743,-4.895100,-7.989732,9.175576,-7.532623,9.792841],[-2.316988,1.615420,-3.803100,-8.047410,5.600871,-4.534413]]], dtype = "float32")#candidate|3676|(7, 14, 6)|const|float32
uop_3677 = relay.log10(const_3676.astype('float32')) # shape=(7, 14, 6)
func_3379_call = mod.get_global_var('func_3379')
func_3382_call = mutated_mod.get_global_var('func_3382')
var_3703 = relay.var("var_3703", dtype = "uint64", shape = (80,))#candidate|3703|(80,)|var|uint64
const_3704 = relay.const([[-1.386476,8.773120,-1.206286,-6.965986,7.210983,4.318045,-9.596626,9.556324,-6.813449,-8.636074,-0.563118,-1.274892,-9.568086,6.757547,-2.526438,-6.945651,3.847726,6.027075,6.770571,6.324809,-6.856150,9.612410,-6.232977,2.515273,-6.165299,-6.514111,-2.768110,9.362342,-5.011168,9.121506,7.571740,4.302057,8.302593,6.868987,-2.603165,6.476626,1.815541,-0.525837,-6.523474,4.181690,7.939981,0.215166,-6.174712,-4.275542,1.049395,2.470995,0.865096,-2.998213,2.841123,-9.215274,-9.137407,-7.797675,-1.844019,4.397258,1.478679,6.798108,-1.430832,-4.986056,3.361933,-4.502340,3.076939,3.255633,-4.886398,6.789038,8.907689,-1.151786,-3.345754,-4.017784,0.864661,5.365755,-6.225200,2.923206,2.610042,6.815375,5.759253,8.372388,-9.779185,3.194691,-8.725362,-3.891242,-0.167453,5.780985,-3.301373,7.441133,1.765800,-8.574844,6.966490,4.856804,1.782499,9.418656,-9.724294,6.941910,-0.717767,8.947848,-8.822366,-0.238081,-4.870667,8.522358,2.547928,-8.986887,2.079044,-3.385527,3.007353,1.293244,0.180411,8.488921,2.136968,-5.755803,1.361077,7.983680,2.750812,3.462621,0.111212,-0.138491,5.936197,-2.194036,7.832469,-4.191372,-7.175916,-3.831408,-6.709419,5.439803,-8.475962,5.636412,5.230607,5.796606,2.281835,5.502706,8.633173,5.959050,-2.290895,2.718959,3.026436,-7.201354,2.241655,0.529823,-8.423323,-2.603729,-2.738594,9.759490,-7.787723,-2.244850,5.716729,-5.899350,-3.534066,7.994800,3.869063,-7.868534,-8.166517,-7.133031,6.320337,-5.581994,-0.165602,9.305212,-0.816495,7.789656,5.114640,-4.676199,4.413030,-2.285721,2.307491,-8.179389,-3.090434,3.680605,-0.746612,1.458436,9.567529,6.626753,-5.318870,-5.099964,8.766099,8.492888,8.072710,4.146820,-2.555768,-6.655701,-9.832402,3.625992,-3.607185,9.434679,-6.817957,-2.826440,-3.776964,-1.942528,-0.987865,-9.217133,-6.557112,0.404367,0.224383,-3.699815,-2.032276,0.310382,6.530945,2.709240,6.362476,-1.672489,9.950513,5.946062,1.202919,-6.388222,-8.578772,3.080360,-7.972003,8.134418,-3.604490,-0.674478,-3.169141,3.148468,-2.786466,0.942189,2.203734,8.874284,2.962163,0.449988,-9.387248,-1.440564,-0.682260,1.019238,-7.486553,-8.476869,-9.291830,6.853857,7.485838,0.009487,-7.914468,3.451342,-0.213538,-9.341783,-0.190237,-5.439652,-2.213958,7.842702,5.339641,0.179379,1.085124,-3.300122,-7.687853,1.464034,-7.882057,1.136162,1.428842,-9.270076,-8.733627,3.970745,-4.223510,5.394673,6.926424,6.376185,-6.708611,-8.849449,2.798343,5.172697,5.323039,2.672715,4.710510,-7.906624,9.835443,3.392970,3.625890,-6.828043,-3.378093,-1.102069,2.399509,-3.757736,2.620683,2.027117,7.045278,-9.465611,6.384517,-7.908152,3.959431,-8.126954,-7.475894,-2.571003,-5.512358,1.161972,-3.359967,-3.357243,-6.609042,5.485412,-9.806583,-2.223616,-4.789923,-8.585689,-1.498363,-9.092155,2.171755,-8.924074,-7.210149,1.522794,-2.260878,-1.600755,1.364929,-6.216440,1.829629,0.788167,-0.372584,-6.786420,-7.863187,3.103432,8.529719,-4.408351,-1.660785,-1.788491,6.087622,4.884711,5.458427,0.128161,1.914428,-0.208100,2.439034,-4.491192,2.067950,-9.613645,4.802773,-8.552585,-8.715014,3.631325,4.843240,7.550133,9.067778,-6.688093,-5.121440,5.756196,8.655328,4.625005,9.888750,4.651402,-5.863440,4.754445,7.440853,-7.109073,-9.434681,-3.280537,-4.841874,9.982065,-4.464328,-5.458595,0.826627,-4.578754,0.291864,2.548575,4.766408,6.159069,0.966862,2.251323,-4.600791,-8.015028,2.112945,-2.964250,-9.090629,-5.176455,-5.300045,-6.385889,-8.990075,-2.898360,-0.821208,3.546662,-7.645029,9.625290,0.624702,-7.976408,-8.313110,-2.702203,2.474223,2.294737,-0.871425,0.760308,-2.889894,-3.717450,-7.565469,-6.514586,4.952437,0.329008,-7.619015,5.739047,0.941141,8.216096,-8.879479,-2.954637,8.766444,7.973661,5.427399,-8.492891,-7.369348,-3.699667,4.673005,9.641980,-5.657502,1.434764,6.480737,-0.819837,-7.789481,1.811416,-0.832066,1.803722,2.185928,1.908000,5.991252,4.755266,2.387993,-1.718710,-5.635353,2.188674,-3.952452,-3.942835,9.768917,4.779552,-4.294164,-4.839186,-5.934854,-9.354832,-9.285447,-8.823315,0.049185,-3.711772,0.424314,-7.437165,-9.166910,7.662826,-7.655782,2.311877,-2.986179,6.762921,2.492782,4.774895,1.182951,6.273041,-5.167815,2.365738,3.415457,-5.300272,1.081841,3.143375,-7.517547,-4.635861,-0.404506,-9.852007,-3.913513,9.638068,4.551809,5.071615,9.410676,-4.881152,-5.987081,3.878256,7.340003,1.695636,-6.824695,7.598995,3.882828,2.264386,2.650224,-5.122583,-0.560406,2.805089,7.810267,-3.628987,6.525424,-3.657895,7.072750,-8.867022,6.305106,8.953007,-6.204887,-1.290810,-1.191502,8.038147,9.735309,-6.108996,0.060697,5.755463,-7.895569,6.679578,-8.554451,-6.535048,-8.773897,7.888726,-1.034712,0.052129,7.950771,-7.219898,-3.314853,7.552817,2.328692,0.995956,1.983509,9.827918,-4.697002,0.719177,-1.712230,-2.694678,-5.082504,-1.107592,-2.823389,6.774973,4.198655,-6.638598,8.453928,7.747900,8.876068,-7.400028,7.247483,-8.642080,-1.674225,7.185461,8.687759,4.293114,8.524385,-4.015035,-8.512186,8.966399,9.686141,7.970658,7.348395,-2.341233,0.638874,2.244533,-0.572224,-6.048911,0.932945,-3.618500,-3.356998,8.246527,7.070724,5.778491,0.117811,-9.557833,-1.813215,-8.449575,-8.334944,-5.344714,0.015695,6.129498,-3.415927,-2.515718,9.723188,-6.786959,5.492017,9.198645,-3.105465,-6.357731,7.282421,-6.191129,-7.428270,8.940015,9.204980,-5.276440,9.536930,2.624074,3.269809,5.377277,-5.342547,-9.192064,6.732408,-2.889546,5.481861,-8.534703,1.903756,-4.770966,4.026177,9.377867,-6.460297,1.249022,2.496185,9.098814,-4.465501,2.669256,-6.124452,-2.167584,0.006163,5.678558,4.642818,6.842332,2.266025,-7.144172,9.772245,1.580456,1.042697,7.332544,3.069311,-4.666335,2.600865,-7.940965,5.887466,-7.283934,-3.960198,6.679438,0.488651,-2.414825,1.902403,5.407670,-7.642400,-7.730963,2.039502,-1.515620,-0.167313,-2.329648,-5.220436,5.792946,-3.097395,-7.862785,-3.454464,-8.644362,-3.892914,-4.255803,-2.177786,-4.472768,-7.107027,-1.364437,-3.644012,3.598856,5.591465,8.804398,-9.225905,-4.115790,-4.076417,9.127610,-6.749995,-4.781407,5.740881,-3.926941,-0.914688,-6.177265,1.733522,-6.910883,-6.657457,-7.694621,1.856961,2.717223,3.406163,-4.976196,6.342017,-1.992518,-3.234809,-2.747254,2.260735,7.947731,-8.450346,-4.921288,-8.617888,7.739212,-6.364877,3.389874,2.450488,-1.443903,-1.538152,-0.702954,-5.995642,9.542917,8.497106,-4.777627,6.414913,-0.734986,-4.640739,1.766478,6.208046,1.520301,6.456062,-4.610469,1.392964,6.025165,8.255006,1.880858,-5.130062,-5.588313,1.108913,-4.314151,-3.899522,-0.346462,3.929955,-9.959106,-0.372298,9.795679,-9.736147,3.276587,-9.591101,0.146831,-6.028028,1.775217,8.765616,2.429598,2.741283,6.132531,-6.246156,-3.996735,-9.980832,8.153905,-4.288437,-8.807252,-6.943519,-9.861229,-7.589530,-3.616864,1.001973,0.393237,-1.091771,7.430447,-3.542685,7.437668,-6.160904,-4.690327,-2.617964,0.237623,-6.753210,7.905970,5.173187,6.513111,8.513094,2.499270,-7.851802,-8.594975,3.173234,-1.798387,-9.190528,-9.809095,5.240860,7.521290,-9.154598,-0.267774,-3.726017,3.586154,1.944140,8.198990,8.536636,5.074072,5.805826,-0.236455,1.877600,-3.319135,-5.141920,-7.774840,-9.730276,-0.227903,7.288905,2.336631,-2.258899,0.358122,-8.982000,8.620905,5.648988,7.466690,-3.448021,7.756302,-2.502040,8.335853,6.740238,-0.144998,-9.891140,-4.899019,5.911924,4.980535,5.234958,3.861907,-8.329945,0.996515,-5.903105,-0.406469,-4.189126,-4.777903,-2.077651,6.922754,-0.359546,1.260342,-6.074350,-9.181037,2.707516,-7.398663,-7.450822,-4.936190,-3.276516,9.222581,-5.779412,7.055646,4.210805,9.207003,7.788517,9.553060,-6.947029,-8.488698,4.098999,-4.370710,7.916033,1.037084,9.895424,-6.918348,6.887437,-8.082180,2.670483,-9.707244,1.403632,-0.294233,-2.911621,-2.358680,-8.196755,-7.844059,2.757246,3.280550,8.402133,0.169311,-5.974825,-2.232608,4.276877,-8.717326,-6.013564,1.310482,-2.085556,-9.200178,-2.748480,-9.590812,-7.550380,-7.699537,5.357023,-0.142629,-4.627551,1.197092,8.311702,-3.578910,-7.728385,0.968450,9.305038,9.214784,3.731620,-4.675478,-9.412140,-0.670275,8.741044,6.663777,-6.539878,5.990108,7.088798,-3.416836,-0.360536,6.682262,7.095361,1.554408,1.565146,-4.388717,3.614715,-2.430029,2.032408,-6.233556,9.720279,-1.576155,2.081669,-3.509082,-0.581515,6.114816,6.356155,-2.731747,2.380569,7.836533,-8.173126,0.828414,1.310655,7.580121,3.199044,5.785477,4.002637,-0.817749,-9.701461,5.226371,5.994423,8.627235,2.834197,3.637238,-6.742895,-5.017256,3.689823,-5.696773,8.581655,9.920143,9.588554,-8.087690,-7.773454,2.758952,2.396909,-2.987075,3.073444,-9.204588,7.378825,8.419548,-3.060870,-3.092828,-1.738804,-9.405789,-9.798797,-7.059964,6.489522,4.725465,6.989207,-9.992764,8.386032,-2.636691,-1.518637,-2.353603,-5.859612,3.304261,7.116151,-1.492205,-8.139266,3.362561,7.062760,-1.816315,-1.159532,-1.157999,-7.615439,2.579937,2.656492,-5.571507,-7.636570,9.607340,1.039708,7.158821,-2.021441,-4.582231,1.107014,-1.120046,2.945205,7.346683,-7.901207,1.945094,-0.957506,-3.341919,-4.814513,0.989825,2.222125,-2.026851,-3.482954,9.802253,1.803175,1.486780,-0.944933,5.794741,7.837228,5.526163,5.351306,-7.444309,6.377802,8.160134,-8.033860,-4.032047,-1.992507,-4.856624,4.579723]], dtype = "float64")#candidate|3704|(1, 945)|const|float64
call_3702 = relay.TupleGetItem(func_3379_call(relay.reshape(var_3703.astype('uint64'), [5, 8, 2]), relay.reshape(const_3704.astype('float64'), [945,]), ), 0)
call_3705 = relay.TupleGetItem(func_3382_call(relay.reshape(var_3703.astype('uint64'), [5, 8, 2]), relay.reshape(const_3704.astype('float64'), [945,]), ), 0)
output = relay.Tuple([uop_3677,call_3702,var_3703,const_3704,])
output2 = relay.Tuple([uop_3677,call_3705,var_3703,const_3704,])
func_3713 = relay.Function([var_3703,], output)
mod['func_3713'] = func_3713
mod = relay.transform.InferType()(mod)
var_3714 = relay.var("var_3714", dtype = "uint64", shape = (80,))#candidate|3714|(80,)|var|uint64
output = func_3713(var_3714)
func_3715 = relay.Function([var_3714], output)
mutated_mod['func_3715'] = func_3715
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4004 = relay.const([[[9.673074,0.747705,-9.074328],[-3.278127,-8.236512,-2.044112],[-1.385410,2.853834,-8.889289],[9.975372,3.777482,3.827974],[1.911450,6.384668,1.800613],[3.593139,-2.804492,8.963267],[6.639328,-9.476029,-5.492627],[-4.141625,2.546295,-0.297832],[0.712407,2.329958,4.723091],[8.075979,-1.791139,-5.878130],[1.021062,7.217078,-1.672979],[6.218495,-7.509646,5.942232],[-3.034602,0.580833,-8.019726],[5.694903,0.058088,-4.303513]],[[4.277583,-3.071997,-7.899867],[3.314895,-9.663068,3.307987],[-4.950345,-7.345224,-2.727565],[0.101237,0.492122,-6.736262],[-1.390235,7.350082,-4.224032],[0.647826,2.529253,-5.418581],[-2.475906,-7.342637,-0.104258],[8.378974,-8.578851,3.067585],[5.063329,1.984817,-6.739544],[-6.360500,-5.578482,-7.273763],[1.016159,-0.858276,2.626364],[-3.891018,2.140220,-1.257961],[-7.627733,-2.807519,1.589861],[3.253802,-5.150223,5.603336]],[[-1.971595,-0.828948,5.211509],[-2.848656,-2.237604,-5.646568],[4.508600,2.900297,4.620691],[-9.592097,9.762711,-9.191129],[-8.080099,4.904568,-7.968829],[8.662509,9.569261,8.695764],[9.013983,6.923673,7.702268],[4.809464,9.961111,2.102641],[2.483149,-5.682224,-8.959863],[8.540982,5.378254,8.769340],[-0.347117,-8.204992,-5.695109],[-0.038905,1.373480,5.386116],[5.577548,7.943123,0.945903],[8.462556,-1.587995,6.389044]],[[-6.508719,-6.046818,-4.091266],[-2.733513,-5.606202,-7.397576],[-2.140878,-9.823080,-5.620128],[-2.630906,2.799733,-6.336831],[-2.612102,7.631941,-3.202730],[5.900157,8.411453,-0.939153],[-9.901496,-7.541488,9.801871],[5.812223,-3.472991,-2.669526],[-9.525404,-1.729629,-1.983902],[-7.814809,4.652725,-7.044805],[2.996262,-6.201371,5.140975],[-8.152437,0.691293,-2.021057],[9.918478,6.479986,-3.904123],[-4.870427,-3.570994,-3.045708]],[[-6.777896,-6.660520,-6.666384],[3.102108,-0.916573,-4.735896],[-2.012780,3.401507,-1.889699],[-7.282215,-4.221358,9.535562],[2.074160,4.488482,-6.705496],[2.685369,-9.492048,-3.893124],[-7.407416,-4.445498,-2.826719],[-0.389599,3.430088,-1.381323],[1.119864,0.020178,-0.080224],[-4.007579,1.608802,-0.825265],[2.050088,-6.212176,6.407715],[-7.854222,-6.841599,-6.479594],[-7.016114,1.593276,8.667110],[1.608330,-6.327536,-6.317819]],[[6.692692,6.542543,-7.776076],[-7.458912,1.490930,7.724704],[-6.827941,-6.253206,5.129589],[6.820195,9.070809,7.091832],[-2.427048,8.810296,-6.470872],[-9.190486,2.674270,-1.920967],[8.123961,2.149694,1.078810],[3.449823,9.537663,-7.092430],[-0.345496,-3.279375,-0.985106],[-5.435046,-8.555058,4.630966],[2.216346,-8.573964,2.134226],[-3.070361,6.488342,6.377012],[8.108817,-5.116497,-6.492571],[5.522552,-3.114381,-9.137026]],[[4.741570,-1.053083,1.097915],[-8.474976,7.120176,9.361741],[3.922993,6.050524,6.020366],[9.945115,1.192712,7.182727],[-9.568155,-7.203322,-3.567508],[1.791397,-9.507688,3.278760],[-4.076563,-5.744150,-3.602013],[-2.992802,-3.075791,0.205553],[9.520161,-7.075237,-8.199140],[-4.572648,-8.638005,-0.337393],[-2.463847,-8.696492,3.474929],[-2.505613,-0.829295,9.350241],[-5.220858,-1.450868,5.576068],[-3.451016,1.619866,4.001424]]], dtype = "float64")#candidate|4004|(7, 14, 3)|const|float64
uop_4005 = relay.log(const_4004.astype('float64')) # shape=(7, 14, 3)
func_2616_call = mod.get_global_var('func_2616')
func_2618_call = mutated_mod.get_global_var('func_2618')
var_4008 = relay.var("var_4008", dtype = "int16", shape = (810,))#candidate|4008|(810,)|var|int16
call_4007 = func_2616_call(relay.reshape(var_4008.astype('int16'), [9, 6, 15]))
call_4009 = func_2616_call(relay.reshape(var_4008.astype('int16'), [9, 6, 15]))
func_2456_call = mod.get_global_var('func_2456')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_4012 = relay.var("var_4012", dtype = "uint32", shape = (3840,))#candidate|4012|(3840,)|var|uint32
call_4011 = relay.TupleGetItem(func_2456_call(relay.reshape(var_4012.astype('uint32'), [15, 16, 16])), 0)
call_4013 = relay.TupleGetItem(func_2459_call(relay.reshape(var_4012.astype('uint32'), [15, 16, 16])), 0)
output = relay.Tuple([uop_4005,call_4007,var_4008,call_4011,var_4012,])
output2 = relay.Tuple([uop_4005,call_4009,var_4008,call_4013,var_4012,])
func_4018 = relay.Function([var_4008,var_4012,], output)
mod['func_4018'] = func_4018
mod = relay.transform.InferType()(mod)
mutated_mod['func_4018'] = func_4018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4018_call = mutated_mod.get_global_var('func_4018')
var_4020 = relay.var("var_4020", dtype = "int16", shape = (810,))#candidate|4020|(810,)|var|int16
var_4021 = relay.var("var_4021", dtype = "uint32", shape = (3840,))#candidate|4021|(3840,)|var|uint32
call_4019 = func_4018_call(var_4020,var_4021,)
output = call_4019
func_4022 = relay.Function([var_4020,var_4021,], output)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4043 = relay.var("var_4043", dtype = "float64", shape = (13, 7, 6))#candidate|4043|(13, 7, 6)|var|float64
uop_4044 = relay.atanh(var_4043.astype('float64')) # shape=(13, 7, 6)
output = uop_4044
output2 = uop_4044
func_4048 = relay.Function([var_4043,], output)
mod['func_4048'] = func_4048
mod = relay.transform.InferType()(mod)
mutated_mod['func_4048'] = func_4048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4049 = relay.var("var_4049", dtype = "float64", shape = (13, 7, 6))#candidate|4049|(13, 7, 6)|var|float64
func_4048_call = mutated_mod.get_global_var('func_4048')
call_4050 = func_4048_call(var_4049)
output = call_4050
func_4051 = relay.Function([var_4049], output)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4308 = relay.var("var_4308", dtype = "bool", shape = ())#candidate|4308|()|var|bool
var_4309 = relay.var("var_4309", dtype = "bool", shape = (15, 12, 10))#candidate|4309|(15, 12, 10)|var|bool
bop_4310 = relay.logical_or(var_4308.astype('bool'), var_4309.astype('bool')) # shape=(15, 12, 10)
func_2291_call = mod.get_global_var('func_2291')
func_2297_call = mutated_mod.get_global_var('func_2297')
var_4315 = relay.var("var_4315", dtype = "bool", shape = (1, 1440))#candidate|4315|(1, 1440)|var|bool
const_4316 = relay.const([6,3,-5,3,-9,5,-9,6,3,1,-3,5,-5,2,-8,-1,-5,10,-5,1,-7,7,7,7,-3,2,-7,-5,4,4,-6,-6,-9,2,9,-8,-10,-2,10,-6,8,-9,7,-7,-3,10,-6,-10,-5,7,-8,10,-9,2,2,2,-8,-4,7,5,-2,9,3,3,4,2,6,-9,-8,6,-10,9,1,4,-5,-8,-6,-5,8,7,-9,-5,4,-9,4,-2,6,-4,-7,7,-9,-10,-3,2,-4,-5,-1,-9,-4,-7,6,5,-3,8,-9,-3,-1,-1,-8,8,-5,7,7,1,4,2,-7,1,7,-9,6,5,5,-4,3,6,-6,2,-9,-5,-10,5,5,7,-7,8,-10,-1,-3,7,6,1,-6,-5,7,10,-6,-7,10,3,-2,-1,6,-7,-6,4,-10,5,-10,-3,-2,-8,-7,-1,9,-4,-7,-5,-6,1,-1,-7,-1,-8,-5,-10,3,5,-3,7,-10,-4,8,9,6,-8,-8,7,-7,10,6,-9,10,-9,2,-6,10,9,-3,-10,2,-5,2,10,9,-9,2,5,2,6,3,6,5,-9,-8,7,-6,-10,6,-8,-2,1,-5,-9,-10,10,-8,-5,6,1,-5,-5,1,-1,-7,-4,-4,-4,-9,5,-7,-5,3,-8,-3,2,7,1,3,7,-9,-9,-3,-1,6,-6,-10,10,10,-2,-6,3,2,-1,3,6,-8,4,-10,8,10,-8,2,6,5,6,-4,7,10,4,-8,5,5,-7,-4,-10,-8,7,-8,3,2,-7,6,-6,-1,-10,-1,3,4,-3,-7,-5,3,7,4,5,7,4,-5,10,1,5,6,-9,9,1,5,3,5,-1,9,-4,-9,10,9,10,-3,-1,2,-1,2,-9,7,8,3,10,-7,-8,5,8,1,3,2,3,3,-7,6,-5,9,5,-3,3,1,4,-3,-9,4,-8,-3,-2,-7,-5,-4,-5,4,-4,5,6,-1,2,-7,-10,-1,9,1,4,8,-2,10,5,5,2,1,8,10,-7,10,-2,-6,-7,-10,-7,-10,3,4,3,-9,3,-3,-1,-10,-4,6,1,4,-8,-1,-5,4,9,7,-9,-7,6,3,6,8,4,-5,7,-5,6,-2,4,-8,-5,-7,1,9,7,-7,-5,-3,2,-4,-7,-3,-4,1,-10,3,4,-10,-7,2,-10,6,-7,-4,7,5,-6,5,3,10,-7,-9,-4,-3,9,-6,8,4,-1,4,8,-1,10,-4,2,-6,-6,9,7,2,9,7,-2,-5,-1,2,-8,4,9,-1,-2,9,6,-10,1,-1,4,2,-8,8,3,9,-2,-1,10,1,3,-2,9,-3,5,-5,-9,4,1,9,3,7,-2,6,4,-4,9,-5,-9,1,10,3,-2,-1,9,8,9,-7,8,2,1,7,3,8,-10,-6,-6,4,-7,2,-4,-10,-10,1,-2,-7,9,3,-8,6,4,10,2,-2,8,9,-6,2,-7,1,-6,-2,-4,8,8,2,5,-3,-6,8,-9,-4,5,1,9,-9,4,-9,-8,2,1,9,-4,3,-9,3,-7,5,3,3,-1,8,-6,4,5,2,-8,2,-5,-3,7,4,-5,7,6,1,-4,3,-5,4,2,6,8,5,4,-10,6,-6,-5,-8,-2,-10,-5,6,9,9,-5,3,-4,7,-6,8,2,-2,4,-2,8,-3,-5,4,9,5,-10,-7,7,-2,-4,-5,-4,-7,-9,-7,1,10,8,-9,-9,1,5,4,6,6,-6,-8,10,-1,4,-5,-7,-10,9,2,-8,-7,-4,6,9,-2,7,-7,5,5,3,4,-7,7,-8,3,-3,-10,3,9,-9,9,8,2,-2,-5,-9,7,5,-1,4,-8,6,5,3,-3,2,-6,-8,8,-7,6,-1,-1,8,9,6,10,5,-5,-1,1,-2,6,7,-9,6,-8,8,-3,-1,-8,-2,-3,8,-5,6,-2,5,8,3,-4,-1,-8,-4,-5,3,-6,-4,4,-6,-10,-5,3,-4,1,8,-8,10,10,-7,10,8,7,-4,-5,9,5,8,5,-2,-9,4,1,-3,7,-4,10,-3,-6,-7,7,6,2,-3,8,-5,-4,-6,2,-6,9,-6,-1,-7,3,-8,2,4,10,2,1,-4,-8,-1,-10,-9,-6,10,-1,-6,3,-5,-10,10,6,-5,-1,3,-1,-10,-3,10,4,-1,-6,-9,3,-3,-5,-4,-7,10,-9,-9,-1,-1,-10,6,-8,-6,3,5,-1,10,3,9,-2,10,-5,-2,-2,1,-4,5,-3,8,8,4,2,-7,8,7,-6,5,-7,-8,-10,2,-5,7,8,3,-1,-7,-1,-9,4,-2,2,4,4,10,-10,-9,-7,-4,-4,-5,6,-7,8,-9,-2,3,-6,-3,8,4,6,-6,10,2,-8,8,-8,-4,-2,1,4,8,-10,10,-6,7,-10,9,-4,5,-5,-10,9,-1,9,-3,-5,-4,-1,4,-1,-1,7,-2,-8,-3,-9,8,-6,-6,-3,7,9,-5,-6,-10,-2,-9,-9,-10,-7,2,5,-3,-2,-6,-10,-3,4,1,-6,6,-10,-9,-5,7,-1,7,2,-6,9,-1,7,-7,-1,3,-7,-7,6,-9,-4,-3,9,2,-10,-8,-2,-7,1,2,-2,9,-3,-8,2,-10,-6,-3,10,6,4,8,-1,7,-1,-5,-3,2,-3,-5,-10,3,-7,-10,-2,9,-8,-1,6,-2,4,-9,6,-5,4,3,-6,-1,-3,-1,7,10,-1,-6,-9,-1,8,2,-1,-2,-6,2,-1,6,-6,-10,1,8,-1,6,-5,-4,8,6,2,6,-2,1,-3,-1,6,-2,3,6,4,-5,10,1,-3,7,4,-3,-4,-2,-3,-6,4,5,-7,1,-6,10,6,-6,-10,-4,8,1,-4,-9,-3,8,-2,-5,8,2,-2,10,6,7,-8,-10,-2,8,-1,-5,-3,-4,-7,-4,2,-9,-8,4,-6,10,4,2,-1,2,-9,-8,1,7,-8,-3,7,-9,-10,1,-4,1,10,-3,-4,-3,-1,7,-3,-10,-5,3,4,9,5,-1,8,6,-5,-9,4,-4,-4,-9,-5,-8,-9,-2,-5,8,-8,10,10,8,-6,6,10,9,1,1,-4,-6,-3,7,-9,9,-5,-5,-6,-10,-1,-4,-6,-5,8,1,-6,-6,-5,-7,9,2,-5,-9,-4,-5,5,4,-2,-6,-6,4,-6,-8,-7,-5,-1,10,-8,8,10,-4,3,-6,-8,9,1,-5,6,-8,-8,-1,2,6,-2,9,-10,-5,-5,-9,-3,-7,2,1,-5,2,2,4,-7,-3,7,-9,8,-1,6,6,-8,6,-4,1,10,3,-9,7,9,4,-3,-4,-8,-2,5,-8,10,7,2,5,3,5,7,9,1,4,8,-3,-1,3,-4,10,-4,9,-5,10,-2,-10,-5,5,-4,-8,-6,-9,9,-2,-10,6,-7,9,-9,10,4,-10,-10,-4,5,5,6,-8,-3,-5,-3,8,-8,-2,6,8,-1,-8,5,-5,6,2,5,5,10,-2,3,-3,-7,-7,4,-2,6,-7,-3,-3,-4,9,7,-7,5,10,-9,10,5,-8,5,-7,3,-5,-6,-5,7,10,-9,-1,-6,2,-1,1,2,-8,-3,-1,8,-3,6,7,-2,-5,1,5,6,-5,2,6,7,-2,-8,-7,8,-1,7,-8,-4,-10,-1,-4,-2,6,5,9,-4,2,-3,8,-8,6,6,4,8,-5,-1,-4,8,-9,9,-2,-9,7,-3,3,-2,9,-4,-8,-9,9,-9,-4,-4,9,1,10,-8,-1,-10,6,-5,9,-8,-2,-7,-8,6,5,-5,7,8,5,2,8,-10,3,-9,-5,-9,-5,-7,-7,3,5,8,5,9,3,5,3,-8,-5,9,4,-6,-6,-2,-8,-7,-4,-6,5,8,-7,1,-10,-6,-8,4,5,-10,5,-6,-6,7,-9,6,8,-2,-7,-5,-4,4,8,-3,-10,-3,-5,-7,1,-1,-8,-8,3,3,5,-10,1,-10,-4,1,7,10,-1,3,2,6,-4,-8,4,-8,-1,9,-2,2,-3,-1,-7,2,-9,-3,2,-3,-4,3,4,9,10,9,9,10,-6,-4,-2,-2,3,2,-5,-2,-5,8,-8,5,7,2,9,1,2,10,-2,-7,-8,-10,5,3,-9,-1,10,-7,-4,-6,-10,10,-2,10,-5,-1,-7,7,3,3,-2,10,-2,2,3,-9,-5,-7,-1,3,3,10,-4,-3,10,-10,-2,-6,-7,-8,-6,-5,8,-10,-8,-5,-6,4,-4,7,-3,-6,-7,-9,1,-5,6,10,2,3,2,5,-4,7,6,-2,3,5,-2,-4,-4,2,1,-2,-3,-6,-2,4,-10,4,7,6,-7,9,7,-4,4,-1,-1,9,9,-10,6,6,5,1,-7,-1,10,-6,3,10,-10,-2,3,5,-5,-2,7,7,10,-5,7,-3,-7,-7,-1,-8,5,9,1,9,-9,9,9,-9,5,7,-3,10,9,10,4,8,10,-7,-3,1,7,7,7,6,3,4,2,-8,3,1,-8,7,8,2,-2,3,-4,-7,10,3,-7,-1,-2,1,9,-5,1,-6,5,10,3,-7,8,8,-9,1,-9,-8,3,8,-1,8,4,3,-4,-7,8,3,-9,-4,-3,4,-1,-3,-4,-6,-4,9,2,7,6,-4,7,-2,10,5,-1,3,3,-6,-7,-4,-1,-8,6,1,-9,-8,-2,-5,6,-6,-2,1,-5,4,1,2,10,7,5,-10,2,-3,10,-9,-9,-5,5,6,-5,3,-6,-10,-7,4,4,6,-4,2,-6,-2,7,-6,7,6,2,-8,6,-7,-6,5,-7,-5,10,6,-10,3,-8,-2,2,-7,-7,5,4,4,-6,-9,10,3,3,5,8,1,-8,-2,-8,7,3,-7,-7,-8,-2,6,-1,3,8,7,8,5,8,-10,-6,2,-10,-8,-3,-2,3,8,-6,-10,-1,-4,5,-6,-7,-3,-3,2,-5,-4,7,7,3,6,8,-8,2,-5,1,2,-8,-1,-10,-6,-5,7,-4,2,10,9,-3,-5,8,4,3,-7,10,2,1,9,8,-8,10,2,-9,10,-7,-8,6,4,9,2,9,3,4,6,10,6,7,2,10,-1,-6,4,3,1,1,-3,-9,-10,8,7,-3,8,3,-5,9,-2,7,6,5,-1,-3,7,-1,-9,5,9,-10,-8,-6,-6,1,1,-3,5,6,-2,-10,-5,6,-2,-9,-8,5,-4,1,7,7,7,4,-5,9,1,8,10,9,4,-2,-9,-10,-9,2,-10,-3,6,-10,10,-2,-9,-7,2,-3,-6,-1,-2,-7,-10,7,7,-9,-9,-7,8,-10,-8,10,-4,10,-7,-6,-10,10,-3,1,6,6,1,-2,3,-8,10,-4,-2,-6,-3,-8,5,-4,4,10,-7,3,10,-7,-9,3,-4,6,1,-4,4,7,1,-10,1,5,6,6,-5,-8,-1,-6,10,-2,5,5,-10,-1,-8,-10,-10,-6,4,4,-6,-6,5,-1,-5,6,-9,-7,5,-1,-8,-9,5,7,-7,1,-3,-10,10,-3,-4,-2,10,-3,-9,6,-5,-6,-10,2,-3,-3,-1,-5,4,-5,-7,-1,-8,1,-9,3,-2,8,3,3,4,-4,-9,-7,7,1,-1,-10,-9,4,-6,5,7,3,-3,10,10,-6,5,4,-7,3,-9,5,-3,-7,-8,-8,4,-9,-6,6,-2,-9,-6,-8,-5,-1,5,-4,4,7,2,9,7,-4,-6,10,-3,-5,-9,-1,6,-3,-7,7,-6,3,10,-5,9,-9,-10,-3,10,-1,2,7,4,-9,5,-10,2,9,7,-8,-5,-1,8,7,1,8,10,1,3,2,-6,9,8,-10,3,-3,-7,-3,-8,4,10,5,9,-3,6,10,-10,9,-8,6,1,2,-4,4,7,3,1,-9,-4,3,-10,1,2,9,-3,1,-4,1,-10,-10,-4,-4,1,-7,6,4,-3,-5,8,-4,2,-4,-10,6,1,-7,-1,10,-6,6,7,7,8,4,9,7,-5,8,8,-5,2,-2,5,-4,8,-3,1,-2,6,-4,-6,-6,2,8,10,8,7,4,3,5,9,6,-9,-10,6,8,5,-3,-10,8,4,1,-8,-5,2,-2,-7,-4,7,-1,-7,3,5,-10,6,-2,-6,6,-7,-4,-1,3,-3,6,8,-2,-6,-7,-2,-3,-5,-3,-7,6,7,4,-4,-8,3,-8,-1,6,-7,6,1,10,-6,8,9,9,4,6,2,7,-9,-6,7,-10,8,4,7,7,6,-9,1,-10,3,5,3,-3,-8,5,-5,-2,2,4,9,-3,1,7,-1,-7,7,2,-5,-2,-5,10,3,5,-7,5,2,-10,-1,5,6,-6,5,2,-4,2,-5,-3,4,4,-7,-5,8,-2,-4,10,-8,-4,-6,-10,3,2,-6,-6,5,10,-10,10,2,-8,-8,8,-5,-8,9,3,-2,7,2,-6,5,8,3,-5,2,3,4,-8,4,-1,-4,4,-9,-1,6,7,-5,7,7,-3,7,-10,9,-9,-2,5,-3,1,10,5,3,-9,9,6,-10,-4,7,8,-2,9,7,1,3,-6,-5,-10,4,-5,-5,-10,2,-4,10,4,-10,5,7,1,-7,2,7,10,-1,-6,-10,1,-10,10,6,-1,9,6,-3,3,-2,-4,8,10,-3,-6,-5,-4,4,7,9,8,6,-1,9,-1,-10,-1,10,-6,10,-5,-10,9,2,4,6,7,-6,-10,-4,-7,5,1,-1,-10,10,7,-4,-4,4,8,-1,-9,5,3,2,2,-10,-5,-1,-4,-10,-2,7,1,-7,-9,-3,-7,-2,8,2,1,4,-5,-3,-7,-7,-9,7,6,-10,4,7,-2,4,3,1,-10,-2,-1,3,1,-8,-8,2,-1,-1,6,6,7,9,10,3,-4,-6,-1,-2,2,-3,-7,4,-7,-2,-3,4,-10,9,2,1,-9,2,5,2,-6,-8,2,-10,7,4,2,-9,1,-2,9,3,-10,8,9,-5,-7,-9,-4,-7,-10,-2,-9,5,-10,6,-2,-9,-2,-10,-9,7,7,-2,-4,6,10,-8,-3,-2,2,4,7,-8,2,-1,2,-6,5,-2,7,-4,-7,9,-7,-3,-8,-5,-10,-5,9,-3,5,10,7,10,-1,4,-9,6,-5,5,5,10,2,-10,-1,-4,2,10,-5,5,7,3,-2,1,7,-1,-7,10,6,10,2,-8,7,4,-6,-9,-8,-8,3,-10,-5,-5,-3,2,4,7,-8,-10,2,-9,5,-1,4,7,-9,8,-7,-6,9,-10,-2,8,-1,-4,-6,-3,-3,-6,-6,-4,10,-10,-6,-7,-6,7,3,5,6,9,4,-5,-6,4,3,-6,-2,10,-5,-3,4,-9,7,-1,5,7,1,8,4,-9,2,2,6,-1,8,3,6,-9,8,-8,-1,4,-8,1,-4,10,10,1,-3,6,-8,5,1,-9,-7,3,1,-4,-10,10,7,-2,-2,-10,5,8,3,9,1,-2,-2,-8,2,1,-7,6,1,-9,-8,7,3,7,3,9,-2,2,-5,9,2,-9,-3,3,2,-8,-10,-4,-2,-8,-6,9,-9,-4,-3,4,-4,-6,-8,2,8,-10,5,-1,4,-2,-10,8,5,-6,4,-6,10,7,9,-8,7,7,-4,9,-10,8,-3,1,-10,-6,6,-5,4,-6,9,-1,-4,8,-1,-5,9,2,2,10,10,-6,-6,3,-3,2,-5,-8,-5,6,-5,-6,-6,6,2,10,2,8,-9,7,-10,-1,5,-3,-10,-4,-9,1,9], dtype = "uint32")#candidate|4316|(2940,)|const|uint32
const_4317 = relay.const([-5,-2,-1,2,-1,-1,9,-5,3,-5,-8,10,-1,3,8,10,-3,8,-3,5,3,-5,7,-7,10,3,-2,5,4,3,8,-5,10,-6,-8,-8,-4,-3,5,-1,-3,4,7,-1,1,-3,9,-9,-3,-1,5,-2,-2,-10,-7,5,7,-7,1,7,10,-3,10,-8,-9,6,10,-3,-2,-3,-5,-9,10,-9,2,4,-8,2,9,2,1,-1,5,3,-10,6,-5,-10,-1,-5,-6,4,8,-1,8,-6,-3,-9,-5,-8,3,10,1,2,-2,-4,7,-2,5,-3,-9,3,-6,-10,7,5,4,-7,-7,4,9,8,7,3,5,5,3,-8,10,-9,6,8,-9,-4,5,6,5,10,-5,-3,6,-6,6,9,2,3,-2,-7,-8,-7,-10,-7,-8,8,-1,-2,9,-8,-2,8,-5,-1,4,5,-10,6,-7,4,3,7,-2,-1,-8,3,5,1,6,6,9,-3,6,-8,4,8,-3,1,5,6,2,3,-5,-9,6,3,7,-6,-7,7,6,1,2,5,-6,3,4,-7,-4,-10,-2,-8,6,1,6,-7,5,2,-9,-7,1,5,9,4,8,2,4,-8,-3,6,-9,4,10,-1,6,-6], dtype = "int8")#candidate|4317|(234,)|const|int8
call_4314 = relay.TupleGetItem(func_2291_call(relay.reshape(var_4308.astype('int64'), []), relay.reshape(var_4315.astype('bool'), [15, 16, 6]), relay.reshape(const_4316.astype('uint32'), [2940,]), relay.reshape(const_4317.astype('int8'), [39, 6]), ), 4)
call_4318 = relay.TupleGetItem(func_2297_call(relay.reshape(var_4308.astype('int64'), []), relay.reshape(var_4315.astype('bool'), [15, 16, 6]), relay.reshape(const_4316.astype('uint32'), [2940,]), relay.reshape(const_4317.astype('int8'), [39, 6]), ), 4)
bop_4320 = relay.floor_mod(var_4315.astype('float32'), var_4308.astype('float32')) # shape=(1, 1440)
var_4352 = relay.var("var_4352", dtype = "bool", shape = (8, 1440))#candidate|4352|(8, 1440)|var|bool
bop_4353 = relay.less(var_4315.astype('bool'), var_4352.astype('bool')) # shape=(8, 1440)
func_2960_call = mod.get_global_var('func_2960')
func_2966_call = mutated_mod.get_global_var('func_2966')
const_4359 = relay.const([[-0.425164,2.221861],[6.013671,3.063941],[8.874849,-4.675472],[-1.667201,-4.578451],[6.816527,-0.211684],[-1.975193,-2.786227],[-2.890911,8.483059],[-5.449429,9.328945],[-6.952175,-0.756773],[6.328695,-6.914032],[7.667536,1.213964],[7.585772,8.799277],[0.517324,-1.906432],[8.701423,-2.502940],[2.812758,-5.527483],[-6.171259,-8.012749],[-1.470303,-3.593900],[-3.483573,-3.016581],[-1.661442,1.970523],[-0.690847,-0.351601],[-6.618568,6.834360],[7.902697,-3.587325],[9.744194,8.762118],[-6.721800,-7.949686],[-4.577042,-2.635234],[-9.105495,-8.788270],[-7.236072,-7.085173],[0.394656,5.062336],[-3.939667,6.302562],[-2.648417,-8.376379],[7.786860,6.604849],[2.329231,-1.840698],[4.516417,-3.462764],[-6.250537,-5.239711],[-9.399812,1.913282],[5.461496,-2.956673],[6.156804,1.500525],[7.586876,7.699740],[6.176520,-4.217933],[-8.725912,6.497770],[6.028319,5.548571],[-1.949557,-8.000516],[9.334020,-8.825317],[-2.932732,-2.724480],[0.693379,4.345893],[4.007917,0.038170],[-9.678646,0.021368],[-6.634996,-3.271962],[-3.446403,9.627681],[7.847959,1.600879],[7.694561,6.748657],[-3.689986,7.636192],[8.464505,-8.783798],[5.163224,-0.803099],[4.617325,5.584316],[-3.837784,2.261524],[0.953060,5.062805],[6.923174,0.180294],[7.820447,-0.574505],[-4.657715,3.421189],[2.192270,-9.254479],[2.353991,-0.622387],[-7.416522,-4.785847],[3.918976,1.637297],[8.228608,2.300906],[-8.918512,4.125763],[9.111880,7.642607],[-2.702921,1.852822],[6.633115,-2.324761],[-8.651092,8.803492],[-3.424051,5.426972],[-3.572841,2.435217],[-0.895337,-1.774211],[8.031980,-4.469789],[4.720993,5.937290],[-4.023018,3.083210],[-5.169557,-6.143643],[-8.716280,-1.152269],[4.929916,-9.889251],[-3.027105,9.375175],[-3.324373,6.056247],[-9.981601,-4.492284],[-0.152245,7.707915],[9.085607,-1.723847],[-0.545272,-8.522514],[-0.147444,-6.849655],[0.884000,5.713952],[-5.498047,-4.476796],[-4.097380,-2.997390],[2.273444,8.539712],[-3.445290,-5.528957],[9.368507,-5.193490],[2.368211,6.314939],[0.595012,6.034657],[-6.487133,-4.129307],[-9.253830,-0.685902],[7.713509,2.977864],[3.232900,-3.405336],[1.006465,2.025516],[8.077097,-3.766120],[8.812698,-9.849506],[1.213356,9.000273],[1.962940,-9.727604],[-6.617411,-0.605085],[-4.487099,-5.064245],[-8.004706,1.698180],[3.827418,8.664667],[-0.967511,9.017268],[3.247706,-0.059584],[2.374521,-4.855534],[-5.771543,-2.349338],[6.198843,-7.447371],[-6.159361,-3.247596],[4.706240,-7.659921],[-6.787109,3.070207],[-2.121840,-8.923446],[-4.939341,-3.698552],[-4.986680,-5.547083],[-5.624874,8.379713],[-0.974193,0.428038],[-0.561627,0.723571],[0.608177,-0.189561],[1.273277,0.021262],[-0.967487,1.912679],[-9.948503,9.264227],[5.696068,9.505790],[-6.624552,5.938099],[-6.950339,-2.980191],[-5.036688,-9.102844],[7.222698,-8.778707],[-8.385340,-2.547611],[5.568237,-8.122307],[-6.060676,3.188350],[6.329150,8.791892],[9.026340,-6.233494],[0.441731,5.488988],[2.722924,2.990669],[-2.462878,9.177069],[7.828979,-2.114953],[-0.617927,1.949794],[-9.886939,-9.065529],[3.968837,4.598113],[-9.430833,2.140865],[-9.579034,-4.404408],[-9.461282,5.424501],[0.037347,-0.042007],[-1.981219,9.297182],[7.171549,0.776946],[3.655729,5.222484],[8.224324,-8.944395],[9.932142,8.217048],[-3.173392,2.678791],[-3.547975,8.807900],[8.218665,-3.296252],[-8.931638,-5.350481],[-5.956958,7.911524],[2.800270,8.347398],[-3.346447,0.255942],[5.145922,6.000366],[-2.894568,-8.124514],[8.896038,-5.707840],[1.897444,6.116090],[-3.943836,5.275276],[9.479589,4.592527],[-6.710199,-1.009421],[-0.615804,-3.479754],[-1.533487,8.643563],[-4.658545,2.554817],[3.254208,-8.927278],[3.328673,8.051420],[-5.651774,-5.000718],[0.091794,-4.270616],[-5.982497,-7.305496],[-9.468676,-3.591289],[8.740076,4.258452],[-2.301522,7.665859],[-7.706237,-8.282241],[6.443324,-6.294848],[3.288083,-2.308632],[-4.655357,-9.554184],[0.066057,2.344243],[1.881329,-6.589252],[1.651340,-7.157252],[6.112316,6.354427],[6.680051,6.574012],[5.616971,-4.983125],[-2.423244,-6.129116],[-6.321693,-7.745633],[3.258652,7.168792],[6.856429,3.793185],[-3.806874,-0.276218],[-7.365183,5.866607],[-3.626152,-0.034144],[-1.536004,-1.834139],[1.209662,1.238907],[9.645676,6.990420],[1.806365,2.394891],[5.544347,4.324921],[-0.074021,1.997103],[-6.133812,-1.612418],[5.779483,-6.916314],[-1.049266,-0.915679],[9.939528,1.108523],[3.097329,-7.430574],[8.675314,-3.041957],[-3.151685,-3.416892],[5.624001,3.622257],[7.807320,-8.554304],[0.326119,-0.193115],[0.417246,3.215797],[6.239421,4.716985],[-1.711751,6.777669],[3.522157,-8.252462],[-3.380077,-7.750810],[-2.229275,1.060030],[-9.610911,-3.641979],[-0.835338,5.443530],[6.473683,6.833624],[3.005280,-8.965311],[-6.968456,0.522369],[1.549296,3.537776],[1.840046,0.471583],[-1.484489,3.499771],[3.307930,-0.224811],[-4.715754,0.681379],[-4.345340,-7.449811],[-7.615840,9.456632],[8.134272,-8.647388],[-7.511310,-0.133088],[-9.349341,6.633133],[-9.911702,3.680065],[-5.520129,5.016758],[8.684732,3.087419],[5.180294,7.419048],[-3.603645,-0.509190],[7.471757,-4.390445],[9.797416,6.214686],[-0.183810,-9.112703],[9.165485,-9.997605],[3.676867,1.611864],[9.010021,-3.810284],[-1.813995,-7.751940],[4.477899,-3.358534],[6.403653,-9.585607],[0.132748,-0.036332],[3.600327,-0.329909],[-4.202491,-5.195191],[0.148795,-6.058049],[-1.672807,8.098814],[-1.106349,8.677335],[2.678931,2.060351],[-1.301163,1.940279],[1.262881,-7.018044],[-5.805071,-0.606824],[2.789667,-8.170285],[-6.712315,2.767482],[3.506686,1.473383],[-1.430750,7.880253],[4.031750,3.277148],[6.283372,0.079436],[-9.672919,0.631644],[6.998271,-3.708234],[-5.315985,7.874090],[4.895096,-9.626087],[9.694711,5.206835],[-9.529896,4.399005],[8.342508,-5.591785],[8.540197,6.223301],[4.706783,-2.657123],[-7.013800,8.575365],[8.121849,0.333898],[-4.351057,-9.968964],[-6.632944,6.673671],[-4.475099,-7.792118],[5.675234,-0.340951],[-7.563197,6.736529],[-2.997866,-0.942475],[-3.215246,-5.370257],[-3.730041,-8.933783],[5.553086,2.345869],[-5.172968,-2.772527],[8.527757,-7.267356],[3.274377,-4.767182],[8.534843,5.832028],[6.436573,-6.270435],[-5.821508,-9.315044],[9.711695,2.474428],[1.422408,-2.776903],[2.880110,-4.672898],[1.574505,-6.981594],[-3.892695,-1.441392],[-1.303855,0.482369],[-9.556648,9.404835],[-6.214090,8.447971],[-9.776673,-5.807499],[0.434367,-2.507454],[-3.347114,-0.866218],[2.497531,-1.894736],[2.167344,8.704935],[9.513777,3.619389],[6.580111,-0.358398],[-5.130942,3.574104],[-6.895568,-4.321924],[-9.810799,-6.827408],[-9.877252,-4.677734],[4.398361,9.105266],[2.090106,-9.437883],[5.167235,-1.594417],[-5.057214,8.099936],[1.086328,-0.134025],[-0.897185,8.813913],[9.068864,6.601046],[-5.830939,4.163668],[9.838556,-5.721098],[-4.444872,2.914340],[4.301221,-0.396416],[-2.065818,-8.663294],[-7.883863,6.092724],[-0.559834,2.126749],[-3.100447,6.557732],[-8.038239,6.806831],[1.955838,-1.542156],[-0.523259,3.783508],[-1.308311,-9.236672],[9.903565,-2.098272],[8.999709,2.164165],[-6.350184,4.775267],[5.451877,-3.022799],[2.741655,5.727805],[7.348210,-0.130270],[7.271917,2.630511],[8.390488,-3.200778],[5.509036,-1.850781],[-9.044278,-5.133754],[-5.765378,-2.412121],[-1.545772,4.770501],[-2.031141,-4.013166],[0.611868,3.258322],[-4.803727,-0.806645],[-5.113349,9.225136],[3.578256,-9.750474],[4.227111,-2.668126],[-3.378045,8.747435],[3.584785,5.036935],[-7.273367,-3.422505],[-4.014723,-9.285699],[-5.340265,6.337211],[-0.447705,-2.177685],[-7.094377,0.201648],[3.567509,-5.486016]], dtype = "float64")#candidate|4359|(350, 2)|const|float64
var_4360 = relay.var("var_4360", dtype = "int32", shape = (14, 224))#candidate|4360|(14, 224)|var|int32
const_4361 = relay.const([[8.498475,7.406381,7.772456,9.840181,9.297400,4.556458,9.838368,2.148640,-7.585998,9.735108,5.939767,-9.565350,-2.498729,-1.249020,-4.861011,-2.698422,-5.854524,-6.725975,0.776680,1.217560,9.883591,6.788619,-4.689180,-9.968596,1.487977,1.196842,-2.916553,9.114274,-2.358821,3.645308,-1.497571,-2.296365,-5.156838,2.549066,-6.918767,-3.134628,8.429697,-2.753589,-4.574440,-7.237825,-4.561676,0.690081,-6.663326,-8.300611,-2.820991,5.530327,2.381311,2.603558,-8.413026,1.633155,-4.331893,-1.988713,6.762684,9.780810,-1.340866,8.607300,2.757434,1.210602,-1.504043,-3.138826,0.731203,9.813347,2.049543,-3.018202,6.215952,-5.733684,-9.060302,6.979180,8.356329,4.376854,2.571323,4.191591,1.063480,-0.002638,-7.324202,8.204503,-4.781774,-3.403314,4.842625,7.132982,-7.947564,-2.572325,-6.265901,-4.909258,-4.100451,7.186148,4.570950,3.452580,0.523962,-8.634905,-7.863399,-7.935044,-6.214848,4.450064,0.761640,9.767151,-5.125456,-8.562766,2.517885,4.936841,6.094395,2.874859,8.810581,7.688014,-8.460323,-7.057957,8.540895,8.753799,2.395843,-5.015187,2.443597,-0.362587,0.069433,0.916259,3.753453,6.862829,8.895104,0.005189,2.415512,-0.754864,-6.118137,-8.158942,8.597134,-9.494299,-4.545816,2.004241,-5.796663,-1.100969,1.149960,-8.661961,-4.315465,1.100002,8.148828,-0.815033,3.435651,-6.878942,6.107173,-5.420396,1.598024,1.205917,6.253035,8.479897,-0.128846,9.272246,5.438920,-9.488590,3.485379,-0.534381,6.609771,6.651161,1.157664,-7.849714,6.807914,1.530059,4.219444,-6.799537,7.225193,-0.243177,9.546460,2.169790,-1.719966,-9.462868,7.383787,-0.722600,9.031680,-5.654225,6.327032,6.655231,1.502961,8.602214,3.810798,6.014459,-6.187443,-8.562960,6.046833,-1.769139,-2.644320,-0.691605,9.486531,-6.682062,-7.375702,2.996177,5.662117,-9.726015,9.959078,-5.100409,-2.193981,-9.639189,3.144826,-1.817704,-5.711675,-2.831795,-3.029560,3.550923,1.572650,-5.210421,-5.091993,-4.054700,3.747691,-1.494934,-6.030465,8.786970,-2.897896,9.963543,1.089692,-6.773608,7.237645,-3.957069,9.751645,3.058214,7.627853,2.305833,-1.598830,1.520779,-3.327980,-6.169402,-2.608614,0.162048,1.823866,2.981236,2.908720,0.086724,-2.843597,-4.178973,3.713052,1.031543,4.060585,-3.104918,-9.271852,3.938174,5.707110,9.630055,-4.088103,-1.745099,-7.486597,-8.127526,4.200071,-2.852074,0.569521,-6.591911,-4.600144,4.698193,-8.846377,6.732289,2.412858,6.101553,3.395598,1.990499,-4.578672,6.956139,1.386261,-1.040861,2.929157,-2.635894,2.102544,7.839312,-2.951154,8.923155,-9.591150,7.949094,-6.545667,-7.886587,-4.331039,6.055003,0.813046,4.992154,-2.048596,-0.833340,-2.546953,-9.496613,1.104025,2.142844,-5.929682,-3.534809,-6.922041,-1.284075,-1.473590,-7.268700,-8.479776,5.380442,-5.600165,-7.968122,-0.221399,1.707824,-4.203657,-8.348794,3.630588,1.371538,0.899260,5.496150,-0.133179,-1.920816,-4.240253,0.444019,-2.482448,8.548941,0.018304,1.883846,-4.816517,-9.016052,-8.396045,-7.851866,-8.219793,2.704039,4.506757,5.901852,-5.420979,-7.252165,-5.934007,-4.081163,1.632900,-3.360908,0.615046,-3.454362,-8.369229,-0.388510,-9.637012,-6.910061,7.285480,-6.163196,-8.746592,-3.649457,2.195091,-3.958800,-7.608545,-5.895922,-2.035956,-9.344426,-9.448457,6.514122]], dtype = "float32")#candidate|4361|(1, 330)|const|float32
call_4358 = relay.TupleGetItem(func_2960_call(relay.reshape(const_4359.astype('float64'), [14, 5, 10]), relay.reshape(var_4360.astype('int32'), [3136,]), relay.reshape(const_4317.astype('int8'), [234,]), relay.reshape(const_4361.astype('float32'), [330,]), relay.reshape(const_4316.astype('uint32'), [15, 196]), ), 6)
call_4362 = relay.TupleGetItem(func_2966_call(relay.reshape(const_4359.astype('float64'), [14, 5, 10]), relay.reshape(var_4360.astype('int32'), [3136,]), relay.reshape(const_4317.astype('int8'), [234,]), relay.reshape(const_4361.astype('float32'), [330,]), relay.reshape(const_4316.astype('uint32'), [15, 196]), ), 6)
uop_4367 = relay.cosh(const_4359.astype('float64')) # shape=(350, 2)
output = relay.Tuple([bop_4310,call_4314,const_4316,const_4317,bop_4320,bop_4353,call_4358,var_4360,const_4361,uop_4367,])
output2 = relay.Tuple([bop_4310,call_4318,const_4316,const_4317,bop_4320,bop_4353,call_4362,var_4360,const_4361,uop_4367,])
func_4374 = relay.Function([var_4308,var_4309,var_4315,var_4352,var_4360,], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4374_call = mutated_mod.get_global_var('func_4374')
var_4376 = relay.var("var_4376", dtype = "bool", shape = ())#candidate|4376|()|var|bool
var_4377 = relay.var("var_4377", dtype = "bool", shape = (15, 12, 10))#candidate|4377|(15, 12, 10)|var|bool
var_4378 = relay.var("var_4378", dtype = "bool", shape = (1, 1440))#candidate|4378|(1, 1440)|var|bool
var_4379 = relay.var("var_4379", dtype = "bool", shape = (8, 1440))#candidate|4379|(8, 1440)|var|bool
var_4380 = relay.var("var_4380", dtype = "int32", shape = (14, 224))#candidate|4380|(14, 224)|var|int32
call_4375 = func_4374_call(var_4376,var_4377,var_4378,var_4379,var_4380,)
output = call_4375
func_4381 = relay.Function([var_4376,var_4377,var_4378,var_4379,var_4380,], output)
mutated_mod['func_4381'] = func_4381
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4409 = relay.var("var_4409", dtype = "int8", shape = ())#candidate|4409|()|var|int8
var_4410 = relay.var("var_4410", dtype = "int8", shape = (1, 3, 8))#candidate|4410|(1, 3, 8)|var|int8
bop_4411 = relay.equal(var_4409.astype('bool'), var_4410.astype('bool')) # shape=(1, 3, 8)
func_2291_call = mod.get_global_var('func_2291')
func_2297_call = mutated_mod.get_global_var('func_2297')
const_4420 = relay.const([False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True], dtype = "bool")#candidate|4420|(1440,)|const|bool
var_4421 = relay.var("var_4421", dtype = "uint32", shape = (30, 98))#candidate|4421|(30, 98)|var|uint32
var_4422 = relay.var("var_4422", dtype = "int8", shape = (234,))#candidate|4422|(234,)|var|int8
call_4419 = relay.TupleGetItem(func_2291_call(relay.reshape(var_4409.astype('int64'), []), relay.reshape(const_4420.astype('bool'), [15, 16, 6]), relay.reshape(var_4421.astype('uint32'), [2940,]), relay.reshape(var_4422.astype('int8'), [39, 6]), ), 4)
call_4423 = relay.TupleGetItem(func_2297_call(relay.reshape(var_4409.astype('int64'), []), relay.reshape(const_4420.astype('bool'), [15, 16, 6]), relay.reshape(var_4421.astype('uint32'), [2940,]), relay.reshape(var_4422.astype('int8'), [39, 6]), ), 4)
func_4048_call = mod.get_global_var('func_4048')
func_4051_call = mutated_mod.get_global_var('func_4051')
var_4425 = relay.var("var_4425", dtype = "float64", shape = (91, 6))#candidate|4425|(91, 6)|var|float64
call_4424 = func_4048_call(relay.reshape(var_4425.astype('float64'), [13, 7, 6]))
call_4426 = func_4048_call(relay.reshape(var_4425.astype('float64'), [13, 7, 6]))
output = relay.Tuple([bop_4411,call_4419,const_4420,var_4421,var_4422,call_4424,var_4425,])
output2 = relay.Tuple([bop_4411,call_4423,const_4420,var_4421,var_4422,call_4426,var_4425,])
func_4431 = relay.Function([var_4409,var_4410,var_4421,var_4422,var_4425,], output)
mod['func_4431'] = func_4431
mod = relay.transform.InferType()(mod)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4431_call = mutated_mod.get_global_var('func_4431')
var_4433 = relay.var("var_4433", dtype = "int8", shape = ())#candidate|4433|()|var|int8
var_4434 = relay.var("var_4434", dtype = "int8", shape = (1, 3, 8))#candidate|4434|(1, 3, 8)|var|int8
var_4435 = relay.var("var_4435", dtype = "uint32", shape = (30, 98))#candidate|4435|(30, 98)|var|uint32
var_4436 = relay.var("var_4436", dtype = "int8", shape = (234,))#candidate|4436|(234,)|var|int8
var_4437 = relay.var("var_4437", dtype = "float64", shape = (91, 6))#candidate|4437|(91, 6)|var|float64
call_4432 = func_4431_call(var_4433,var_4434,var_4435,var_4436,var_4437,)
output = call_4432
func_4438 = relay.Function([var_4433,var_4434,var_4435,var_4436,var_4437,], output)
mutated_mod['func_4438'] = func_4438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4567 = relay.var("var_4567", dtype = "float32", shape = (5, 14, 11))#candidate|4567|(5, 14, 11)|var|float32
uop_4568 = relay.atanh(var_4567.astype('float32')) # shape=(5, 14, 11)
func_1454_call = mod.get_global_var('func_1454')
func_1457_call = mutated_mod.get_global_var('func_1457')
const_4576 = relay.const([1,-10,-6,-1,-9,-9,-7,10,-10,7,9,3,-8,3,2,-5,-7,5,1,2,-4,-5,-10,2,-7,1,3,-8,-6,5,3,10,-4,-7,2,7,10,6,6,-9,-9,1,-6,-4,-9,10,-10,6,-7,1,10,-5,9,-2,9,9,4,1,10,4,-6,-1,-7,10,-10,1,-8,-2,-8,-3,-8,9,4,-3,7,2,-2,-8,2,2,1,-1,2,8,-10,8,-5,9,7,2,9,-5,-8,1,3,3,-7,-4,10,8,5,7,3,7,-7,-3,-2,-9,-3,4,4,-1,4,1,-9,3,6,-4,-5,8,10,8,2,-6,-8,3,8,2,-1,-5,3,-6,9,8,1,-7,9,-4,-3,-6,-3,-2,4,4,-8,-8,8,-1,-4,-2,-9,7,-4,-1,-3,7,-7,-8,2,8,2,2,2,8,4,-10,-9,-3,7,-8,-8,-8,-2,7,8,-6,5,-2,-3,2,10,-2,-8,10,6,8,2,10,2,-10,7,3,-5,-9,-5,8,3,-2,5,-8,9,7,-4,7,-8,-8,-4,7,8,-2,4,-8,-1,10,2,9,6,5,6,-5,9,-9,8,6,9,9,-7,-2,7,6,-2,1,2,-7,7,3,7,3,-8,-1,7,2,-5,4,-8,3,7,7,1,-10,-6,-6,-4,8,8,-9,-7,8,-5,8,-3,1,-5,1,-2,4,-5,1,-1,-1,8,3,3,9,-4,-1,-6,-8,3,-6,-10,3,3,7,2,-3,10,-6,-7,-10,2,9,6,-10,5,-3,8,-2,-9,5,9,-10,3,-3,-2,3,-6,3,-8,-2,1,-1,3,-8,-4,-4,10,-1,9,-5,-7,-5,3,-7,-1,5,4,10,1,10,2,8,7,7,3,8,-2,-5,1,7,10,-5,-10,-4,3,-6,-7,7,6,-9,-7,1,10,-6,9,-4,-5,-5,-1,6,2,-9,6,10,-9,1,6,5,9,6,5,6,8,-3,-10,-5,10,-3,9,10,-4,5,-4,-7,-2,-10,-4,6,-10,3,9,4,5,10,1,-3,1,-7,8,10,7,-8,-8,5,5,-8,7,6,9,7,3,7,7,3,-7,7,2,-5,10,-6,9,1,-6,-9,10,7,3,1,7,7,-6,-10,-10,9,-6,-4,9,-10,-2,-1,2,-10,-3,6,5,-6,8,7,2,7,-1,10,6,-8,-8,3,-9,6,3,4,5,-7,7,-10,-2,-4,10,4,5,-6,-2,-2,1,-3,-9,-10,-8,-9,5,-1,-8,9,-2,-4,8,9,-9,1,8,-4,-2,3,-3,2,-4,2,-1,-8,7,-9,1,5,10,2,9,-6,10,8,4,1,6,-7,-6,1,8,8,-9,-1,-8,-8,7,-7,-3,-10,6,4,5,-10,-8,-6,-10,-8,-9,9,-2,-4,1,7,6,-3,-9,6,-8,-6,-5,3,-9,6,9,-5,10,-1,-1,-7,6,-1,6,-10,2,-1,10,-4,-2,-7,4,2,-3,7,1,-1,3,-1,-7,-3,9,-8,7,-8,-2,2,6,10,-6,3,10,-4,6,-1,-10,-4,8,8,5,6,10,3,-1,7,-1,-7,-4,5,-10,-3,-3,-9,-10,-8,-2,10,10,8,-8,9,5,10,8,-9,4,-7,2,9,5,-5,-10,9,-10,-1,1,-10,7,8,-7,-2,-1,-7,-8,-5,4,8,-8,-3,-3,9,-8,2,10,1,-7,8,5,-2,-4,4,8,-1,6,-7,10,-4,-4,4,-6,-1,9,2,-7,-4,3,8,-7,-8,-2,-3,10,3,-4,9,-3,3,-2,-3,-1,-9,-5,6,5,-9,10,9,1,-5,8,-5,4,10,-4,6,-4,-10,1,2,-3,-3,5,4,-4,1,4,-1,-5,-6,-8,4,7,-10,3,6,-5,10,1,-5,4,-4,-1,9,-10,5,-7,-1,-5,5,-4,-6,2,-8,10,5,-7,-4,-8,6,-6,-7,10,-7,10,4,5,-3,-6,9,4,1,4,2,6,3,9,-5,9,-5,-6,-3,9,-7,6,-2,-9,-2,6,-9,1,6,-2,-10,-5,-10,-6,-3,8,1,-7,6,5,10,-3,-6,1,-6,-3,5,-3,-10,-7,-3,2,-3,-6,4,9,5,-5,8,-10,-2,-3,2,2,-5,4,6,-4,4,7,1,6,-8,6,-8,2,-1,6,3,7,7,-5,-7,3,1,1,-8,10,9,-3,2,8,-2,-1,2,-2,7,-3,8,-8,-8,3,-8,-1,8,-6,9,6,-8,-6,-4,9,-8,6,10,5,2,1,10,7,-8,-8,6,-10,-2,-5,5,-8,8,-8,-5,-6,10,9,1,-8,10,8,2,2,-2,-10,3,-9,1,1,2,-5,7,4,1,-9,-10,8,-2,-7,5,3,-5,-1,2,2,-9,8,-2,-6,-4,5,1,-7,-2,-1,-2,-7,9,-3,9,-6,-4,-4,7,-1,-4,-7,10,2,-8,10,-5,7,4,6,-7,2,7,2,-4,4,-9,-7,-3,-10,-9,-1,7,10,-1,-7,-9,4,2,7,-6,8,-2,-4,-1,7,5,4,-9,-5,1,9,-10,-5,8,10,2,1,2,-8,10,-3,-5,-6,3,5,3,7,8,6,3,9,-6,1,4,3,7,8,4,6,-5,-5,-4,4,4,7,-7,-5,5,-1,5,4,9,-6,5,-2,3,-3,-10,1,6,-1,4,-6,-2,-9,-2,-1,-6,5,8,-4,-7,-10,-3,-2,8,-1,-1,-1,-3,-10,-5,5,-9,-3,-10,-8,5,5,-2,6,-10,4,4,-4,8,-2,-6,-4,-9,-2,7,7,9,-1,-7,-2,-4,8,-2,4,8,-2,-5,9,-7,-5,10,-6,2,-1,6,7,8,7,8,9,-9,10,9,-10,-2,-1,-6,3,-6,-8,10,2,3,-9,1,8,-10,4,10,6,-8,4,3,2,6,10,7,5,1,2,-3,-4,1,-2,3,-2,-4,4,8,7,-10,-1,8,9,-1,5,-1,6,-8,-2,-4,-3,5,-6,-7,-6,-9,-4,-4,-10,3,-8,4,-4,-2,-5,-3,5,-8,-10,1,2,4,8,-8,-4,4,3,7,2,6,-4,-8,6,9,2,1,-1,-7,-4,9,-4,-9,3,-6,3,-4,10,7,9,1,7,3,-6,1,5,-7,5,8,2,-2,-8,6,-8,6,-9,9,9,-6,-4,7,6,-10,2,8,-4,10,9,-3,-7,6,-8,-3,-9,-5,5,2,-6,2,-10,1,-1,7,-7,8,-1,-3,1,9,-5,3,-6,9,5,1,2,-1,-5,4,1,9,8,5,7,9,6,-2,-7,4,4,9,-9,2,9,7,10,5,7,-9,-2,8,10,-10,-5,-9,2,-9,-8,-7,7,-8,10,-6,1,-5,2,3,-5,1,9,-1,7,4,-10,-2,-2,3,4,-1,5,-2,-9,-10,-7,-6,-10,9,-6,-5,-1,3,-9,-9,8,-2,8,-9,-6,-3,2,9,-8,-1,1,-3,5,8,-4,7,-7,-4,-2,3,-6,10,6,9,-10,-8,-8,-3,-7,-5,8,-5,-2,1,4,1,-8,7,2,8,8,-3,9,9,7,-10,-7,-9,4,4,-3,7,8,5,-9,4,-3,4,-2,-1,-7,1,4,7,-1,-7,8,6,-7,7,-6,-7,-9,4,-4,-8,3,-8,-1,-4,-6,7,-4,-1,3,-1,3,9,-9,-1,7,-7,-1,7,10,6,-4,-1,5,-3,3,9,-2,-6,-3,-7,8,-1,6,3,-1,3,4,-6,-9,-7,-5,-8,5,9,3,-8,-9,-2,-5,3,5,-3,-4,-10,-10,-5,3,1,7,6,7,1,-3,2,-9,5,-3,-7,-7,-9,-1,-9,6,-4,1,3,4,-5,8,-6,-2,-4,-9,-3,-5,-3,-7,-3,-6,7,7,-7,-5,-9,-8,3,7,-9,6,3,4,-2,-2,-3,-1,6,-2,2,-5,-2,7,-5,1,-9,3,2,1,8,8,2,2,9,10,1,2,8,-9,4,-6,10,-6,-9,-4,-10,8,4,-9,6,-4,-5,-10,-8,6,10,-4,3,1,-8,-7,-9,-2,7,-6,3,9,8,10,2,-5,-8,-1,10,-1,10,9,-6,-2,2,-5,-10,2,-8,2,-8,2,-8,7,6,-6,-7,-8,6,6,-10,3,-9,-7,-5,7,-8,9,4,3,5,8,4,7,-8,8,-5,-1,3,-3,9,-4,-1,-4,-3,6,-6,-2,-2,10,1,9,6,4,8,-2,9,5,-2,-4,-3,3,-5,-10,3,7,8,1,4,7,-3,10,-6,-2,1,3,6,-5,-8,-10,-7,-4,2,10,3,9,-8,-9,-1,3,7,-8,-10,6,10,-1,-2,3,-4,-2,-2,-2,10,-5,2,-5,-3,-4,7,-5,7,-3,2,-4,3,-1,7,-7,7,-5,1,-10,2,1,5,6,1,2,9,8,-2,-7,6,-3,8,-4,10,5,-9,3,2,7,-3,5,-8,4,-3,8,-6,2,3,-5,1,8,6,-7,3,2,-4,-7,-9,2,-1,1,3,1,1,-10,-6,4,10,-10,5,10,-8,-4,8,-9,6,6,3,-9,1,-9,-8,9,-4,4,3,-1,-10,8,-10,-9,-6,8,-2,6,-6,2,-7,3,-2,-1,2,-3,-6,2,-7,2,6,7,-9,-3,7,1,6,5,3,-10,1,-7,6,3,-2,9,9,8,-8,-2,-6,-8,7,10,-3,-2,4,9,1,-5,1,1,-9,-5,-9,3,10,-8,7,4,8,2,7,4,-5,1,1,5,8,-9,7,-2,3,1,-8,10,4,8,3,-9,10,-6,1,-3,1,6,5,-4,-10,10,3,5,-2,-9,6,-5,8,-7,5,8,3,-6,5,-9,-9,4,9,-7,4,-5,-4,5,4,-2,4,-6,5,-7,4,-3,5,2,9,-4,-7,-1,1,-4,-2,3,6,4,1,-10,-7,5,2,-7,-9,4,-2,-5,-3,-6,-5,10,10,3,-3,-6,7,4,9,10,4,1,9,9,-9,4,5,7,7,-7,-2,3,-4,-9,-10,-10,3,2,-1,3,-5,-4,-2,-8,-1,-1,7,2,-1,-6,-2,-9,10,-8,-2,9,-9,-10,3,1,-2,-7,-6,-2,-4,2,-5,-2,2,-3,2,-2,2,5,7,-9,8,-9,7,-3,-10,-8,4,7,1,-10,2,5,1,1,-5,10,6,-8,-1,-5,-6,5,2,-7,3,-5,9,-9,9,-2,-10,-8,2,-1,-8,5,9,5,-3,6,2,-9,1,-3,7,3,-8,6,-8,2,-5,-10,-6,-8,1,-4,-5,-4,-2,7,4,9,-2,1,-1,-5,-9,-1,-4,-5,2,6,2,-6,-10,-4,-2,6,5,3,10,10,-5,-4,1,3,-9,-3,-10,-3,-9,-5,-7,6,-8,-8,6,-6,1,1,-1,7,3,9,10,-4,-9,1,-9,8,5,6,5,6,3,-10,-2,-2,-1,-10,5,10,-4,9,-8,-3,-2,6,-10,-5,-10,7,4,-8,-4,-3,-4,-2,6,6,-8,-6,-9,-10,-5,-3,-2,6,4,10,-4,-7,-8,9,-8,-9,-5,9,-9,2,-3,-8,7,-10,10,7,5,-4,-2,-8,-9,9,1,-7,-6,-4,-6,-4,8,4,-4,-4,6,1,-5,8,-7,8,-4,8,-8,9,-7,-8,4,5,-4,6,-10,-8,7,9,-3,-2,3,-7,4,-6,-6,8,-6,-8,3,-10,1,8,-4,-4,3,3,7,9,-5,-6,9,3,-6,-8,4,-4,8,5,-10,-10,-6,-10,-5,6,-4,-3,6,-2,6,3,-2,7,2,3,-2,2,-9,2,-1,-6,-3,-2,4,3,-6,9,5,9,7,-9,6,-8,-6,-1,-9,6,7,-10,1,-2,-2,-6,-7,6,6,7,-7,-1,5,1,-10,-7,4,7,-3,-4,-1,1,5,4,-3,7,5,-2,-7,-6,10,3,1,1,10,10,-6,-9,-8,-4,5,-10,9,-3,-7,-3,-2,-10,8,-8,7,-2,-9,-3,8,-8,1,5,2,-6,7,-5,-10,4,4,-8,10,-3,-3,-5,-8,-3,-3,-8,-6,-3,6,4,2,-3,1,-7,-1,9,-9,-2,9,5,-4,8,-7,-5,-10,-8,10,-9,1,2,-8,-8,7,-5,7,-10,-5,1,1,7,-8,4,-4,-8,8,-9,-1,5,-8,4,-4,-6,-5,3,4,7,-4,-1,3,5,9,10,-2,-10,7,6,8,-10,-9,-9,2,-7,9,5,9,-3,-4,10,10,-6,4,8,-4,-7,1,7,3,10,-4,-4,-4,1,2,6,3,-6,-6,1,3,4,-1,7,-5,-6,3,1,-8,5,-6,-1,3,-8,-2,-10,4,-10,4,-10,6,9,-7,5,5,-7,-1,1,-6,4,5,-4,9,-5,1,4,-5,-5,3,10,-9,8,3,-5,-8,6,6,-4,4,-8,7,2,-6,6,6,9,3,9,-9,-5,-5,10,-3,-6,4,-1,7,4,-10,-5,6,-6,-3,5,7,-1,-10,-4,5,-9,-4,-3,4,6,-8,4,5,3,3,2,-7,-4,3,-10,-10,1,-9,-6,-2,1,-3,3,3,8,3,5,4,-7,-1,-7,-5,-4,-3,-1,3,4,-5,4,5,5,5,-8,-1,-7,-3,3,5,4,10,-2,5,10,2,-1,9,5,-8,-2,9,1,-4,-1,6,6,1,2,1,-10,-8,-10,-7,-1,-7,3,-10,9,1,-4,7,4,5,6,5,-1,-6,-2,-3,7,-5,7,5,1,7,-4,3,-2,1,8,-5,1,-7,4,7,1,2,-7,-5,-6,4,-7,-7,9,9,5,4,5,10,-3,-1,-9,2,3,-6,10,-8,-9,7,10,-3,8,-3,-1,2,-10,-10,-9,6,-2,8,2,-10,-10,9,3,-7,1,5,10,6,2,10,-8,3,9,-1,-9,2,-8,-9,2,1,3,5,-5,5,9,-9,2,-7,5,-1,-1,-4,-5,9,7,3,7,-5,-1,10,-6,8,-2,6,-5,2,2,-6,-6,-6,-8,-7,9,9,-2,1,-9,5,-6,-9,-10,8,4,2,-10,7,9,4,5,1,4,5,-1,-3,3,-9,-10,8,-10,5,1,9,-5,-10,-8,-6,-3,4,-3,-2,-10,1,7,-5,10,-10,-4,-2,3,7,-3,4,6,-9,-6,7,-1,5,10,8,1,-2,6,-2,-6,-10,4,2,-1,-10,3,2,-8,3,-8,9,-6,6,4,2,-9,-6,6,2,8,-6,-9,-6,-9,4,-9,-9,-3,8,-3,5,3,-4,9,8,-9,-10,-7,7,5,-3,4,1,7,5,10,-3,-3,-1,4,-4,6,-3,-2,6,2,4,-1,3,6,9,10,-10,8,7,-1,-5,5,-9,-8,4,4,6,-5,-7,-9,-9,-6,-1,-10,-6,-9,7,1,-1,-1,-7,-5,4,1,2,-8,8,8,10,-10,-9,9,1,4,-9,6,-3,8,-10,-9,-1,-3,-10,-10,1,7,9,7,-8,-1,-7,-2,8,6,-10,-2,1,-2,8,-1,4,-10,6,2,-8,8,9,-4,9,-9,-8,-2,8,-9,-5,-9,8,1,-5,-7,-3,-10,4,-3,5,-4,5,-1,-9,1,-1,-5,10,-3,7,9,7,-6,3,-6,1,3,-7,9,7,9,2,8,-8,-8,3,8,-9,10,4,-4,7,1,4,-9,-3,10,10,1,1,6,-9,3,-9,-9,3,9,1,-4,-3,-5,-1,4,-4,-3,4,-8,-4,-10,8,-5,5,10,6,-2,-9,5,-3,-5,-4], dtype = "uint32")#candidate|4576|(2940,)|const|uint32
call_4575 = relay.TupleGetItem(func_1454_call(relay.reshape(const_4576.astype('uint32'), [14, 14, 15]), relay.reshape(const_4576.astype('uint32'), [14, 14, 15]), ), 0)
call_4577 = relay.TupleGetItem(func_1457_call(relay.reshape(const_4576.astype('uint32'), [14, 14, 15]), relay.reshape(const_4576.astype('uint32'), [14, 14, 15]), ), 0)
func_2291_call = mod.get_global_var('func_2291')
func_2297_call = mutated_mod.get_global_var('func_2297')
const_4590 = relay.const(6, dtype = "int64")#candidate|4590|()|const|int64
var_4591 = relay.var("var_4591", dtype = "bool", shape = (1440,))#candidate|4591|(1440,)|var|bool
const_4592 = relay.const([-5,10,8,6,10,3,4,2,-10,-10,-4,-6,-6,-2,-9,-7,-5,-10,6,3,1,-5,1,-8,10,1,-9,-1,-8,-5,5,-5,-7,-3,2,-9,2,-9,5,-2,-5,9,4,8,2,-10,5,9,-2,-7,10,9,-3,-5,-6,-1,1,-3,-9,-8,-4,2,-6,5,5,4,9,-5,4,9,8,10,-2,-6,-4,4,3,-1,-8,8,-6,7,8,8,-4,1,-8,1,4,3,-2,-7,-4,3,-3,-3,3,-6,4,4,-2,-9,-6,2,-10,7,1,-6,-2,-5,9,-6,10,7,8,1,8,2,-2,3,7,-3,-6,3,7,-5,-10,1,6,3,9,6,5,1,-10,9,-8,8,-9,-6,-1,-5,3,-10,-5,-3,-8,-2,-6,-8,1,4,10,-5,-4,-7,3,7,-7,-5,1,-7,-8,10,5,-10,5,-6,-7,6,-4,-8,3,3,2,4,-9,-10,9,-10,-10,-1,-6,2,1,-7,-10,-2,-10,-5,-4,-6,10,-9,-8,5,1,4,4,5,3,10,4,-6,-8,7,-10,4,-10,8,2,-5,1,4,-5,-1,-8,-2,7,-9,9,-7,-10,8,4,8,-1,-2,-10,8,-3,4,1,6], dtype = "int8")#candidate|4592|(234,)|const|int8
call_4589 = relay.TupleGetItem(func_2291_call(relay.reshape(const_4590.astype('int64'), []), relay.reshape(var_4591.astype('bool'), [15, 16, 6]), relay.reshape(call_4575.astype('uint32'), [2940,]), relay.reshape(const_4592.astype('int8'), [39, 6]), ), 2)
call_4593 = relay.TupleGetItem(func_2297_call(relay.reshape(const_4590.astype('int64'), []), relay.reshape(var_4591.astype('bool'), [15, 16, 6]), relay.reshape(call_4575.astype('uint32'), [2940,]), relay.reshape(const_4592.astype('int8'), [39, 6]), ), 2)
output = relay.Tuple([uop_4568,call_4575,const_4576,call_4589,const_4590,var_4591,const_4592,])
output2 = relay.Tuple([uop_4568,call_4577,const_4576,call_4593,const_4590,var_4591,const_4592,])
func_4596 = relay.Function([var_4567,var_4591,], output)
mod['func_4596'] = func_4596
mod = relay.transform.InferType()(mod)
mutated_mod['func_4596'] = func_4596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4596_call = mutated_mod.get_global_var('func_4596')
var_4598 = relay.var("var_4598", dtype = "float32", shape = (5, 14, 11))#candidate|4598|(5, 14, 11)|var|float32
var_4599 = relay.var("var_4599", dtype = "bool", shape = (1440,))#candidate|4599|(1440,)|var|bool
call_4597 = func_4596_call(var_4598,var_4599,)
output = call_4597
func_4600 = relay.Function([var_4598,var_4599,], output)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4642 = relay.var("var_4642", dtype = "float64", shape = (7, 7, 16))#candidate|4642|(7, 7, 16)|var|float64
uop_4643 = relay.rsqrt(var_4642.astype('float64')) # shape=(7, 7, 16)
output = relay.Tuple([uop_4643,])
output2 = relay.Tuple([uop_4643,])
func_4655 = relay.Function([var_4642,], output)
mod['func_4655'] = func_4655
mod = relay.transform.InferType()(mod)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4656 = relay.var("var_4656", dtype = "float64", shape = (7, 7, 16))#candidate|4656|(7, 7, 16)|var|float64
func_4655_call = mutated_mod.get_global_var('func_4655')
call_4657 = func_4655_call(var_4656)
output = call_4657
func_4658 = relay.Function([var_4656], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4733 = relay.var("var_4733", dtype = "uint16", shape = (2, 1, 9))#candidate|4733|(2, 1, 9)|var|uint16
var_4734 = relay.var("var_4734", dtype = "uint16", shape = (2, 8, 9))#candidate|4734|(2, 8, 9)|var|uint16
bop_4735 = relay.bitwise_or(var_4733.astype('uint16'), var_4734.astype('uint16')) # shape=(2, 8, 9)
func_2960_call = mod.get_global_var('func_2960')
func_2966_call = mutated_mod.get_global_var('func_2966')
const_4748 = relay.const([-4.369018,-3.103831,-3.619969,-3.255349,1.060861,5.334656,0.440895,7.790334,6.016305,3.298517,-5.821700,3.794156,2.589727,-4.342177,1.269512,4.391200,-2.977110,2.021912,7.830829,7.633213,0.914372,-8.252231,-7.742915,9.328800,3.448120,-6.218744,4.618521,2.960556,6.039996,6.504099,-6.786957,-2.983457,-9.208538,8.575464,2.464364,5.678871,-3.447178,1.224193,5.382887,-1.325702,-1.219874,4.904270,-0.445077,-8.881795,-7.036202,-2.438823,-5.802898,8.722452,-3.390478,-5.981533,2.926232,-0.939906,7.975011,1.028001,-5.029210,3.827290,-6.735472,-6.486145,-7.063750,-8.072857,4.947131,5.507709,-3.676781,-5.395859,-0.489406,-4.326035,-1.049017,0.658151,4.816758,8.331763,-9.389316,-8.104113,6.468089,-3.227043,6.171532,-1.739556,6.693479,3.620921,1.703867,6.469910,-3.441400,5.626323,-6.010906,9.959243,2.758562,-0.282632,7.021741,2.925610,6.357714,-1.482668,-4.742874,3.312877,7.584885,7.838007,8.352013,-8.333938,2.118910,-4.876477,-8.534306,9.781094,-2.443408,7.875684,-9.274725,-6.765442,-9.237903,-0.584806,-2.604564,5.961875,-8.986734,-5.304573,0.049923,-5.388569,-1.544709,-6.727113,-8.954035,8.666283,7.937501,-1.776839,5.658962,-9.202401,-9.969909,-2.381130,-1.856301,-8.578553,3.127562,-5.997101,9.954553,1.816294,-8.332355,-6.406918,8.153005,9.967947,-6.130386,-7.302658,9.043180,-1.823687,7.057626,-5.587862,-3.265892,2.245741,9.443439,-6.153495,-9.224193,-4.141214,8.174450,2.982647,-5.784636,-8.390161,-7.071576,-9.917388,3.104226,3.090498,-1.499475,-0.831734,-1.634426,-8.825057,-7.040190,-4.833056,-6.516070,1.612866,3.406191,-0.608855,6.960977,7.332852,1.019915,5.575385,-3.978206,1.813161,-7.964086,0.400876,7.421247,-4.545005,-9.980296,-3.597075,-2.610816,-3.070391,-6.920415,2.045444,0.085526,-7.273565,7.545840,9.458260,-9.219890,-4.523047,2.652457,-2.566689,1.625764,-9.001408,1.440928,-5.652095,-7.643547,-2.806223,6.207404,-7.512929,-1.803297,2.987957,6.200183,1.183308,5.187894,-0.259470,2.248021,-9.338700,-8.231478,-3.904409,7.083669,7.425055,3.316939,6.935537,3.334969,-7.941341,-1.019367,8.968179,-3.735673,5.487048,-5.569550,-7.541023,-0.107175,-8.579474,2.854572,9.229533,5.185278,-3.849915,-5.482764,6.628009,-9.311953,3.077599,5.738336,-0.967097,8.865560,-0.974460,4.797210,6.577575,8.504247,-3.639595,-2.620629,6.324048,-0.652968,-2.358921,5.207084,9.028711,2.807825,-2.559567,9.472076,2.972787,4.295520,5.610427,-1.376752,-9.090122,-1.294393,5.379515,-9.331645,6.673294,-8.581502,4.083153,0.418121,0.469107,1.523545,-4.574000,-0.899545,1.839373,6.682949,4.648421,9.096959,2.655523,-6.614185,-2.011585,3.052654,-3.883423,-5.072767,-1.370646,-5.583786,-6.608382,6.486784,-8.442681,-0.140317,6.423913,-1.091128,-4.923806,5.568100,-0.766080,-7.756191,-7.407458,-2.945092,2.291057,0.389665,-6.607539,-7.370863,5.024295,5.007131,9.414914,-1.236884,8.991729,4.690121,-9.878097,1.974750,9.094499,-7.389954,-0.904967,-0.806518,5.412762,7.329933,3.493813,-8.591454,7.147799,-6.477509,-7.769762,-3.105813,-0.303769,1.461766,-8.861374,4.195823,-6.003302,4.634112,-5.445961,-1.225624,5.004174,7.150928,8.357973,-1.855021,-0.821641,-3.701620,7.759063,-7.252090,-5.208253,-8.227881,1.187217,-2.963938,5.391044,-0.322821,5.482571,9.512874,-9.402018,6.600456,4.727981,-9.243769,8.884904,-3.022298,4.040829,-8.701012,-7.745214,-3.545012,-8.189666,7.984151,8.375465,1.586675,-0.150566,8.649221,1.413934,8.258718,-9.118041,-7.592305,-4.929232,-8.877143,-2.642625,1.224432,-5.004196,-3.034629,1.412912,-0.012272,6.392857,0.750607,4.779820,-8.668914,-2.216241,4.363289,0.959318,-9.339633,-0.318371,-6.927625,0.121824,6.105534,9.621666,-7.771694,7.265036,6.239650,-5.547080,-5.992012,-1.171397,-9.963566,-3.059949,3.571782,-5.075514,5.192137,9.156366,6.065645,-9.909833,-9.451147,-4.759431,-0.646244,1.401558,-8.569554,-6.967964,3.284044,9.510290,9.307884,3.464287,4.188600,-2.446016,-4.620802,-0.194434,-3.501560,-7.711083,4.998317,6.694822,-6.537999,2.652808,-1.180441,-2.850981,-7.249533,-1.735680,9.902356,5.471872,7.345381,-6.533773,0.417367,0.151583,6.678847,-3.854994,-5.371613,-7.396889,-0.971088,4.182107,1.788334,3.152618,4.645921,-4.147955,1.458829,7.700076,3.898197,6.013252,8.344438,0.733648,-0.568429,2.996132,2.725557,-4.761002,3.763257,0.199457,3.519232,4.420359,-6.073148,3.521333,8.362964,-1.682013,-1.716281,0.867908,-5.623137,-3.002186,-4.386679,9.006597,1.902209,1.633079,6.960629,-4.816401,1.277993,8.337834,2.038563,-2.064563,2.387427,5.104286,-8.740124,0.449973,7.052745,5.149139,8.320597,-3.590317,-9.341065,-4.436899,-7.333726,-2.034489,-1.461052,4.207347,1.715427,-0.104506,-7.553913,-3.462203,-6.858139,7.999053,-3.436947,9.468857,1.812211,-0.936076,8.347429,6.456510,9.754221,-5.518522,7.559364,3.879967,1.597922,1.745787,-6.034726,-9.407108,-9.677749,-9.132921,-1.735991,-7.274709,0.299167,-1.354414,1.261793,-4.369369,0.573565,-7.602855,-4.323401,8.573917,4.660482,1.450076,6.318283,-9.490370,5.821736,-9.076915,-8.786358,2.306328,3.443737,6.012699,2.865749,-9.289606,-0.433227,9.525673,-5.104929,-6.010630,-2.166782,4.675377,6.687633,4.575591,8.872278,-6.848508,-4.647859,8.669947,0.320253,8.334454,9.119771,-2.828067,-2.369968,-8.998155,-2.394627,7.651412,1.862424,-8.705294,-8.098467,7.833195,9.503737,-9.101747,-1.072288,-0.875920,-1.226926,-8.436578,0.318384,4.119338,8.750992,-8.306754,-9.663852,-1.667588,7.921799,-7.098673,-8.983340,5.850625,4.296992,9.270159,1.223106,-8.107830,7.225753,2.698711,4.713566,0.149041,0.106177,-9.604053,1.294535,1.497864,-9.526982,-4.906616,4.407220,-4.160771,3.149036,-4.525818,8.322275,-3.670968,-8.333195,0.916533,-9.817492,-0.296988,5.854160,4.274716,2.767758,9.909571,-8.322721,-9.705422,8.111378,0.826548,-3.913816,0.592778,-5.642416,9.763817,-0.129638,-2.539102,0.196234,-7.698076,7.475908,3.529759,-2.959260,-4.081081,-4.789500,-5.225718,-6.097277,9.923479,-9.446108,-4.796427,-9.059010,5.259681,3.727876,-0.990192,-0.876275,0.490970,-2.497533,-1.064464,6.048569,-3.161198,1.483769,0.134454,-8.032630,-8.077956,6.702198,8.965843,-8.897119,-4.106984,-7.706872,-3.345065,4.307189,-5.044944,-0.799788,-7.680273,-8.396756,-7.447983,-7.223184,9.386330,-8.431736,6.531614,-1.571499,1.237071,9.008746,-4.316220,-7.475167,-9.294311,-2.720587,-3.150732,2.429602,-6.479196,8.415505,0.128202,-4.281271,-6.344647,-4.419088,3.418743,-9.145516,-0.400082,-5.173121,4.354836,7.614073,2.262522,-9.481013,0.063062,-8.998635,1.218269,-7.460277,0.128461,1.291134,4.956199,2.976344,6.061334,0.276248,9.537916,-6.483225,7.812310,-4.830738,-0.930079,-2.662518,-0.629293,2.983626,-3.381671,-1.627282,3.773564,7.328754,-5.136894,0.445930,-5.011292,6.977475,-0.963641,-8.112418,7.574871,-2.812564,8.792181,7.616881,-8.048444,-1.624225,-5.137748,-5.383421,-4.462060,-3.959341,5.661954,-3.485690,7.014168], dtype = "float64")#candidate|4748|(700,)|const|float64
const_4749 = relay.const([5,-7,2,-1,5,1,4,3,-1,-7,-9,9,8,7,3,8,-3,8,-7,4,-10,2,-4,-7,9,-3,-1,-4,-10,-10,-4,2,7,5,-8,4,3,-1,2,-3,-1,9,-1,-8,-5,3,-1,9,6,2,2,-1,3,-5,1,5,-4,-4,9,-5,2,-4,-4,3,-8,5,2,-6,-1,1,8,-6,2,7,-3,8,2,-2,-6,8,7,-3,-9,-3,9,-4,10,9,-1,-5,-1,-4,4,1,9,3,3,7,4,-4,-6,2,-8,7,-1,4,5,5,3,9,-5,10,-8,-10,6,7,-10,-7,-2,-8,9,5,1,1,-5,-8,3,-8,2,3,-10,10,-9,-2,3,2,-3,6,-6,-2,9,3,5,-5,9,-6,10,3,-5,10,5,2,10,4,6,9,5,1,3,-6,6,1,8,-5,9,2,9,1,-3,5,2,-7,6,-4,4,1,-2,5,-8,-2,8,-8,10,-6,6,-2,-5,-3,5,-2,-9,-10,-5,2,7,-2,-10,4,2,2,-5,-6,1,3,-9,6,6,-1,-3,8,-9,-7,-1,-8,4,10,-2,10,-6,-3,8,6,-7,6,-2,-10,-5,7,-7,-8,4,-8,4,2,-1,-4,-4,4,7,-1,-6,-9,5,6,10,-3,-2,1,-1,6,7,2,2,3,5,10,3,2,-5,10,-4,2,-3,4,7,7,-9,3,2,3,-10,-9,-2,10,1,5,-2,1,-1,1,-4,9,-7,7,8,1,2,-10,-10,2,-8,-7,3,8,-3,-1,9,-10,-2,-10,-6,-10,-10,3,-9,-3,1,9,-8,-7,10,-7,7,7,-4,-10,9,-9,8,-1,4,-6,-6,8,-6,6,-4,-4,2,-8,10,7,8,8,-7,-7,-5,-5,-9,-4,1,-10,-2,-3,6,3,9,-5,7,5,6,-4,-4,-1,-5,10,4,-8,-4,3,10,6,-7,8,-8,-5,-6,5,-9,5,-1,7,-4,-6,-5,8,6,-7,-7,-4,-2,9,-9,10,-9,1,3,-7,-2,-5,3,-4,-7,1,-8,1,5,9,-4,-1,5,5,9,-5,7,10,3,-9,5,-4,-5,2,-7,-2,-10,-6,-5,5,4,-7,-9,-1,10,-3,-7,7,-4,-10,10,3,-6,-8,-7,5,4,2,-8,8,-10,3,9,-1,-9,-5,-4,-2,5,-1,5,-6,9,-4,1,-5,2,10,7,6,2,-8,10,-9,2,-9,-8,-5,3,6,-1,6,-10,-5,-8,5,-2,8,-5,-9,9,-3,5,3,-9,-3,-1,-4,-7,-10,-9,9,-9,5,6,-2,-4,-1,5,8,-5,4,1,-9,-8,5,5,1,1,-10,10,1,7,2,5,5,2,-8,-9,1,-7,7,8,-7,-5,-5,1,10,7,-1,3,-4,7,-8,-10,-8,-5,8,4,-4,4,-8,7,-4,-4,-9,-5,2,5,-10,8,4,2,7,-9,9,-2,10,-6,4,-3,5,-5,10,8,7,-8,9,4,10,-1,-1,-5,-2,7,-9,10,6,2,5,6,7,-4,-7,-6,-6,-5,10,9,-9,10,7,-1,-3,-1,-6,-4,-2,-1,1,-4,-4,3,9,8,8,-3,7,-10,-10,3,-7,-8,5,7,-7,-2,-2,-7,-9,-8,-2,-4,6,3,6,-1,-3,3,8,-4,3,-6,-3,5,-7,-8,3,-1,-7,-6,-2,-7,5,5,-10,-8,6,-7,6,-2,-6,-3,-4,9,-9,-6,1,6,-1,-1,1,-3,3,8,5,-2,10,-1,10,-8,4,-1,-7,-5,7,1,-5,-7,-6,8,2,-4,7,-9,-3,5,-2,6,-3,-8,-7,10,-3,10,1,3,-10,-8,-10,4,-5,-5,-7,-6,2,-3,-3,2,-2,-7,2,6,5,-9,-2,-2,-3,-4,8,3,4,-10,10,2,4,-5,-7,8,-5,-1,-1,-4,8,7,7,-5,-5,-5,6,-7,7,7,-2,-8,-4,-8,9,-1,1,4,-7,9,3,7,3,10,-7,-4,3,-8,10,-4,-7,8,3,5,9,2,-10,-1,-4,-1,-7,-9,-6,7,-4,-4,6,-10,2,-10,9,-4,2,10,-8,8,5,-6,-6,-4,4,3,10,10,7,6,2,7,-7,4,7,1,-1,2,9,-10,-5,-4,4,-8,2,9,4,-1,-2,-8,-9,2,7,-7,-1,1,10,1,-7,-7,3,-4,3,-7,2,-3,-6,1,10,-10,-7,-8,-6,10,-8,-4,-4,-7,6,1,1,1,10,1,-9,2,-3,4,-9,-5,-3,7,9,-4,10,-5,1,10,-5,5,5,-4,8,-10,-2,6,-3,-3,-7,-7,4,1,5,1,4,8,3,-8,9,8,2,-5,6,-7,-6,-3,-6,10,-6,5,-4,7,-4,8,10,5,9,7,9,-10,10,-9,-8,10,-7,1,-10,9,-1,9,3,5,5,9,10,3,3,-8,1,4,-5,-9,3,-10,5,10,-3,-9,-9,-4,-8,-8,-7,3,-6,-5,-1,-5,4,-3,-5,6,7,6,-4,4,-7,4,-1,-1,-3,8,-3,-2,-6,-4,5,-9,-7,-8,-7,-2,9,8,4,-6,6,-3,-7,-5,-8,-4,-1,5,1,-9,-10,-1,-9,-8,8,10,-8,-4,7,-7,-10,-10,-7,-1,2,7,2,-10,8,-6,4,2,-8,-6,-8,2,6,-1,8,-1,3,-2,-5,8,2,10,7,-7,-10,1,-8,10,-6,-6,4,-5,-7,-1,-9,6,10,-7,-9,3,-7,-1,-9,8,-3,-8,-4,-3,-9,-3,-3,4,-8,4,5,-9,2,-9,3,6,4,3,6,10,10,8,4,-9,-2,10,-10,2,-10,-5,-10,9,5,-1,5,10,5,-1,9,1,-4,-9,-1,10,-3,4,-8,-7,-4,5,10,-9,1,-5,-1,-2,-9,-3,5,2,10,1,-1,-10,7,-6,-9,5,6,-2,8,6,-8,-6,2,-1,5,8,-8,-1,-4,-3,4,4,-8,9,-2,-3,-1,3,8,6,4,9,4,1,9,-10,-2,2,-1,-7,-5,-3,-1,2,10,3,3,10,-10,-5,4,1,-10,-7,-6,-5,-7,9,-7,-7,8,3,-10,1,1,-10,-3,-3,7,-5,-6,-6,-9,3,6,2,-10,7,9,1,-8,-7,1,8,-1,3,-3,2,-3,-7,7,-5,8,6,-2,7,7,4,5,-7,5,4,8,10,-3,10,-10,-4,7,-6,-6,-2,9,4,-6,-10,1,-8,2,-10,-7,-2,5,5,-7,-2,6,-9,-8,10,-1,6,4,3,-4,-10,3,-9,-9,10,-5,-10,-4,5,9,-7,-6,6,-1,-8,10,-5,10,-3,8,7,-6,4,8,-4,-5,-9,8,-10,4,1,6,9,1,6,-5,-5,-4,1,-10,-8,7,-5,5,-1,5,-3,9,-8,-3,-10,-9,-7,5,4,-2,10,2,-2,5,5,5,-1,-1,-5,-5,-1,1,9,8,1,8,7,7,8,-3,1,3,2,-3,8,-3,4,9,-2,-9,-6,4,-6,3,4,4,-5,1,1,-6,4,8,-7,-3,3,-4,6,2,-3,-3,4,4,6,-9,-9,-8,6,1,4,-4,6,7,8,-4,-6,-5,6,-2,-7,1,-5,9,4,7,-5,-4,1,-3,-3,-7,3,1,-3,2,-1,-6,-10,10,-6,-2,9,2,-9,6,-3,3,7,5,-5,2,10,4,4,5,-2,2,7,9,10,-10,-10,-9,6,-1,-3,-9,-10,4,-9,-5,-10,-2,3,-2,9,-6,-4,-10,-2,-1,1,-7,-5,6,-4,4,-9,10,8,-5,-4,7,-9,-8,7,4,-9,10,6,5,8,3,-6,9,6,10,-4,-10,6,-4,7,-3,-10,10,1,-5,7,-8,4,-6,1,2,4,10,2,-7,1,7,2,-9,-5,6,4,-4,5,-1,-7,-4,7,-5,10,-7,-1,-4,2,-10,8,10,1,-4,-5,3,-8,-4,-4,3,10,-7,-6,4,4,4,9,8,7,8,-7,-5,9,1,10,-7,7,1,-7,-1,10,-5,-1,-3,-6,-2,10,-9,9,-2,7,-1,-5,6,-9,3,4,2,-2,4,4,1,3,4,-2,-3,8,-3,-6,5,8,9,-5,-5,-6,2,-5,7,-3,-2,-9,-3,-8,-2,-5,-2,-4,-5,9,-5,-1,6,-10,-5,-4,-7,3,4,6,6,2,6,-8,-6,-3,4,5,-9,5,-7,5,3,-6,1,-2,5,6,1,-2,-1,-5,-8,-6,-7,-5,1,-8,9,-1,6,-9,1,-2,-9,9,-1,6,-7,10,-5,-8,-6,3,2,6,-9,-1,-2,3,9,-3,8,-2,6,-9,-7,-9,5,8,6,-7,1,-7,3,6,4,4,3,-7,10,-9,-4,9,10,9,3,5,6,-1,-2,2,-8,-7,4,9,-1,10,9,-7,9,9,3,-10,-3,-9,7,2,10,6,3,-6,6,-10,-7,5,2,-2,7,-8,-4,-9,10,8,-1,2,2,6,5,-4,-10,10,5,1,-3,-4,7,8,5,5,-10,7,6,1,-9,4,4,-5,6,-10,-4,8,8,-7,1,8,-3,-5,-8,10,1,-9,10,3,10,6,10,5,9,-2,6,-4,-4,-9,5,-2,-5,-1,-6,2,-10,10,-2,9,-7,-10,2,3,2,10,3,-4,-4,-5,1,-6,8,10,-1,9,-1,-2,-4,-1,-8,6,7,-2,-6,1,6,6,-5,4,-7,-5,-4,3,5,4,7,7,-1,6,7,5,-7,9,-9,-10,-6,3,4,-5,2,-2,-1,-4,7,-8,-9,10,-5,-10,10,9,6,5,9,-9,-9,-1,-10,-3,-5,3,-5,2,10,2,-1,-5,2,7,9,-2,6,1,10,-5,6,-9,-9,-10,-2,-10,-1,9,4,-7,-1,5,4,-5,1,-1,8,-5,2,7,-8,-6,1,-4,-3,-1,-4,4,-2,4,9,-10,5,3,1,-9,6,-9,5,5,6,4,2,-10,7,10,7,-2,-5,10,-6,6,6,-2,-1,-9,-2,-9,-1,1,-2,3,-8,2,9,-9,10,-8,1,9,4,10,-3,2,-7,3,3,9,-10,-7,2,5,-3,10,10,7,1,3,6,7,10,1,5,-9,10,3,1,-5,10,10,9,7,-5,-4,-8,2,-3,3,4,3,7,-7,-6,5,-2,-10,-2,-10,9,-6,5,5,5,-5,2,-5,8,7,8,1,-7,-10,-10,-4,2,-6,-9,4,10,5,9,-1,3,10,2,-1,4,9,-2,3,-4,3,-9,-9,8,1,5,-4,-9,-10,-8,1,-4,6,-3,2,-7,3,3,4,-8,-9,-6,1,-9,-8,6,1,-10,-8,5,10,-6,-7,-7,-10,-6,5,-4,-7,9,-2,-5,-5,-9,5,2,7,10,-6,-2,9,-7,-10,-3,6,2,-5,2,-9,-2,8,-2,3,-6,9,7,-8,4,-7,-2,-9,2,1,-3,-8,7,-10,-8,10,-1,-4,7,-3,9,-8,-3,-7,-2,-1,-9,1,-3,-2,1,7,-3,10,-4,-10,3,5,-6,2,-9,4,-2,-3,-3,7,8,-8,6,10,-1,2,10,-1,-10,-8,-4,8,-5,-10,-7,-4,1,-6,10,-7,-8,-6,-8,9,-7,-8,9,-8,8,-5,-5,10,3,-4,-5,5,-2,4,-5,10,9,-5,-8,3,1,1,-8,-3,-8,-7,8,6,2,-1,-10,1,3,-8,-8,-4,-8,4,-5,-1,2,6,10,9,10,1,3,1,-9,-4,9,-6,3,7,9,-9,-5,-10,-6,1,10,-6,-5,6,6,-10,8,-4,-10,-8,-8,-9,-3,10,-9,-3,-2,-2,8,2,10,10,10,10,4,6,-5,5,-5,5,-5,-6,7,-5,-8,10,-8,7,-4,-9,-2,-2,-1,5,3,1,8,6,-5,-2,-7,2,-3,-5,-5,7,1,-6,-6,8,9,-9,9,4,-6,9,-9,1,4,-10,10,8,-7,-4,5,4,3,5,-9,-8,-5,8,-9,-5,5,-2,3,8,6,6,-6,-9,6,-1,-1,9,5,10,-4,-9,-10,-6,2,-4,-6,4,-1,-10,-7,1,9,5,-7,10,-10,10,9,-3,-10,1,-7,9,-6,-6,-8,-2,-7,3,-10,5,1,9,5,-2,1,2,-6,8,8,6,1,6,-5,-3,-1,6,-8,-3,9,8,9,-9,-1,-1,-1,8,7,3,1,8,8,8,-10,-9,-8,-10,8,-4,-6,-9,-1,10,-9,9,-9,-5,-2,-3,6,1,8,1,-3,-5,1,6,1,2,-7,3,10,2,-3,-4,6,10,-9,10,-7,10,10,-10,10,-2,-4,4,5,6,3,-4,5,5,-7,7,1,-4,3,-4,7,-3,-3,3,-5,5,-8,10,-4,-9,-1,9,-6,-5,-8,-4,-6,-3,4,-6,-6,-10,1,10,-5,8,-7,-8,-9,-4,1,-1,-4,6,2,-10,5,3,-10,-3,3,-2,10,3,-4,-8,4,-4,6,6,-1,6,-8,6,-3,-4,-2,-7,10,-4,7,-1,-3,-9,2,7,-4,3,-4,-10,10,5,4,-6,2,-9,4,-9,-3,-6,-6,2,7,-1,-6,2,-7,-8,7,-3,4,7,2,-4,4,3,6,9,-1,-8,1,3,-5,1,4,2,-8,7,4,-6,-3,8,2,-5,-10,-10,-3,1,3,-1,-5,-7,1,-2,5,-3,5,-10,-1,-2,7,1,6,-7,3,-5,10,-1,6,-6,-1,1,-10,-5,-5,-1,-8,4,6,2,-1,8,-1,-2,4,9,-7,-1,1,-10,-2,3,-3,3,-8,9,-6,-3,-7,5,5,7,4,10,4,4,-1,6,-3,5,8,3,2,8,-10,-1,8,-8,-5,-10,8,-3,-10,-7,9,-6,-6,10,2,-9,2,-9,7,-3,-6,1,6,5,4,10,-3,-2,-3,9,10,-2,-8,-1,8,9,-6,10,-6,-5,-8,-4,1,-2,-8,-4,8,1,6,-5,5,-10,4,-2,-8,1,-3,-9,-10,-1,-1,-7,10,7,9,2,-5,6,6,-10,-4,-10,-5,-3,9,3,8,9,7,8,9,1,-4,-1,-4,5,-1,7,4,-1,4,5,6,-4,1,1,1,1,-9,-8,-5,-5,9,-2,-1,-10,-7,-7,-8,-5,2,-6,-8,-10,1,-3,4,5,-7,-10,10,-3,2,9,10,6,2,7,-3,6,-7,-2,-7,6,-4,4,4,-10,-7,6,-4,1,6,-5,-5,3,-10,-4,-2,10,-7,-9,-2,-7,7,-8,8,7,7,5,3,-5,2,1,-10,-9,5,-7,-6,-8,8,6,-7,-1,4,-10,3,1,5,-1,-5,1,10,-9,-2,9,-4,7,-7,8,4,10,3,3,5,4,-6,-10,-3,-3,5,-9,7,2,4,-7,10,-4,-1,3,-2,-6,2,-5,4,-3,7,9,6,10,-3,-8,6,-6,-2,-5,-5,-3,6,3,-3,8,-8,6,8,6,4,-4,10,9,10,6,-4,2,6,-9,-4,3,-4,8,6,3,9,-2,9,1,-7,5,-8,1,-6,5,7,-2,8,3,3,3,7,-1,9,8,-8,7,-1,2,-1,7,-6,9,6,-7,9,-1,7,5,-1,-2,-5,7,-1,3,-7,-2,-9,8,-4,-4,-4,1,6,-7,-8,-8,-10,-9,5,5,-2,8,7,-7,-10,5,-8,5,-2,-1,-1,-3,5,4,-6,3,-3,9,6,2,-9,-7,-3,2,-3,8,-1,7,-5,-5,7,8,8,1,-5,7,-7,-4,-9,8,7,-7,6,-6,4,-9,1,2,-7,3,-3,-10,9,3,-10,9,6,8,2,1,7,-7,-9,10,-10,-10,5,7,5,1,2,3,-8,10,-8,5,2,4,9,-9,-6,3,-10,7,-2,-1,10,10,8,7,-2,-1,-2,-6,-10,-1,-6,10,-7,-1,5,1,5,-3,-3,7,3,-10,5,-8,-2,3,-5,2,-10,-9,5,2,1,-3,8,-10,9,5,-7,-9,4,-7,-5,-1,3,1,7,-6,-1,-5,-8,-9,8,-1,9,-5,3,3,2,2,1,-1,-1,1,7,-10,-4,4,-2,-8,-8,-5,-7,-9,-2,4,6,-4,-6,8,2,10,6,-7,-10,1,-7,7,5,-3,-6,-10,4,-1,10,4,7,9,6,4,-10,4,-1,3,8,5,-5,-10,1,-9,-1,5,5,-3,-8,8,2,-9,-4,1,8,-10,10,-2,-9,2,-2,-10,-10,7,-10,8,-9,-6,-9,9,-10,-2,6,1,-3,-7,-1,1,2,1,-6,-5,-8,-8,-6,6,-5,-8,10,-8,4], dtype = "int32")#candidate|4749|(3136,)|const|int32
const_4750 = relay.const([6,9,1,9,1,-2,5,-5,8,-6,-8,4,4,3,1,7,6,-5,-8,-4,-8,-5,6,-3,1,-7,-6,9,5,9,-5,-5,-4,8,3,-10,-8,-6,-7,9,8,7,7,5,-7,1,-3,-3,-5,9,-2,-10,4,-5,5,-6,-9,9,8,-1,-8,-5,7,8,-8,1,-3,-10,-7,5,10,6,-6,-5,-9,-9,9,10,3,-9,4,-1,-10,-4,-8,10,-4,-7,-3,7,1,3,-10,-7,2,4,-5,-2,7,-6,9,-3,4,3,2,-3,6,2,-8,8,4,-5,6,6,5,6,-9,7,9,-3,2,4,2,5,-7,-2,-5,-10,6,2,-9,7,7,1,8,9,-2,1,2,-5,-8,-8,6,2,7,7,-2,3,-10,9,10,1,2,-5,-7,1,-7,-6,10,-7,2,2,8,-7,-10,10,4,-10,-3,-1,5,-4,3,-9,10,10,2,7,-5,-10,-1,-3,-2,-3,9,-5,-6,-7,9,-3,-4,2,-3,5,3,5,6,1,2,-4,8,5,10,-4,-10,9,-10,-7,10,-2,-7,-9,6,2,-3,-9,10,4,6,9,5,-9,9,-7,-7,-1,8,7,9,-2,-10,3,4,9], dtype = "int8")#candidate|4750|(234,)|const|int8
const_4751 = relay.const([7.887939,6.249275,-2.352600,4.052041,-9.207531,-7.149220,6.349399,-5.581358,4.440240,-5.279346,-1.578124,4.906505,0.149978,8.155885,-4.813178,8.043108,1.722035,-5.974086,3.089715,-6.216364,0.223395,-6.709025,7.246949,-9.181048,-3.928588,8.626716,-4.364039,0.187303,2.681460,-9.087923,7.586642,-2.965270,2.518905,-4.361715,-8.907603,-1.130226,5.017561,4.945900,-9.630303,6.733448,-3.414705,4.819215,-4.408665,-5.997221,7.533666,6.008319,-4.300772,3.948537,-1.029053,8.692839,9.000973,5.161917,-0.935324,3.608337,-8.502205,-0.945966,8.175968,1.476829,-9.529868,-6.201825,-3.606796,-7.018498,9.470942,-6.950012,-7.247792,-5.066772,-9.897817,-0.038032,-0.957591,6.842419,5.194082,4.916214,1.633990,-8.426322,-7.323270,9.626762,-2.652964,-7.124193,8.296211,3.882225,-6.808501,0.302655,1.579498,6.676351,-6.873898,-9.475759,-4.057962,-4.792253,-8.232320,4.116381,9.730037,-5.843760,3.594001,0.878816,1.987782,-4.136546,9.481892,-4.549238,5.841691,-7.987954,-8.007516,5.137580,9.914280,-4.063262,-4.565423,-9.851689,-0.650984,6.388404,9.503805,6.020217,-7.879604,-4.803213,0.540193,-5.421909,4.649077,-7.068754,-6.123158,-2.055004,-6.112261,1.412660,5.571036,-7.385931,-4.879562,0.228021,8.783814,5.682088,-2.790159,1.113936,-9.173119,-6.738499,-3.437576,-5.188176,9.726730,-7.907650,9.852795,-0.102392,-5.838616,2.656741,5.162216,-2.347723,7.562484,-5.086653,-7.201848,6.888725,6.270701,-5.214262,0.869613,-6.048583,3.775750,-0.871455,4.794543,5.877793,9.356878,-5.297661,5.038010,1.637257,-4.731905,-4.511497,3.146238,-5.191094,-4.565185,6.393527,2.714182,-3.810724,-4.907597,2.257649,9.743554,2.889185,0.438692,1.670369,5.209649,3.653801,-6.809965,-1.146410,-3.869738,9.796341,0.107645,-1.114091,-6.791382,7.112650,7.170059,-9.070646,-8.270268,9.408992,-3.794912,-9.689965,-6.392271,6.528488,-0.731087,-2.431416,-8.231031,1.517888,-7.223207,-0.939061,-1.382731,-6.703754,9.747646,-9.761124,-9.558958,9.734084,9.706902,-4.269398,-0.900942,-5.564496,2.246410,1.900757,-4.945872,4.547730,-0.425481,-4.454020,-3.788893,-8.451100,2.150356,2.517712,-5.862554,-7.823284,-8.906467,5.151533,0.189717,1.259774,3.829630,-1.089637,9.271318,-0.443365,-9.396001,-0.521835,3.669023,-7.740167,-8.627745,1.862249,-8.241178,-8.982573,-0.540076,9.272332,4.420594,3.870547,2.799566,1.273263,1.649858,-3.339175,-5.705709,-5.155768,1.158792,-5.336718,-5.355148,0.866068,-1.310764,-1.934304,4.045492,-3.703531,-2.861656,1.901393,4.206919,3.799119,5.707454,-4.604885,-9.429875,9.307643,1.649397,7.635693,4.422748,6.076558,-1.286127,0.082549,9.855141,8.185894,0.713009,-5.186868,2.452724,4.049873,7.078588,-4.411176,7.698172,-6.533456,6.451314,-0.547323,-1.561090,-2.524549,8.879723,-4.943414,6.459698,6.059184,6.123852,-4.009397,4.503205,1.498411,2.416784,-2.892676,2.814567,-5.517227,3.377117,-0.463762,-9.655573,-5.625313,-7.883308,-5.916579,-0.544224,-2.596526,6.172946,-4.572742,-4.736658,-9.913000,1.105523,-6.052180,7.525471,-9.804837,-9.446158,-2.894812,7.121365,-4.112640,3.688239,-6.525071,-2.041055,8.693110,4.477310,-4.699862,1.728414,2.005256,-3.830613,-2.405295,-3.370129,-8.038007,5.597436,4.858492,6.841348,-5.310357,6.278625,3.869189,9.229330,5.563353], dtype = "float32")#candidate|4751|(330,)|const|float32
var_4752 = relay.var("var_4752", dtype = "uint32", shape = (3, 980))#candidate|4752|(3, 980)|var|uint32
call_4747 = relay.TupleGetItem(func_2960_call(relay.reshape(const_4748.astype('float64'), [14, 5, 10]), relay.reshape(const_4749.astype('int32'), [3136,]), relay.reshape(const_4750.astype('int8'), [234,]), relay.reshape(const_4751.astype('float32'), [330,]), relay.reshape(var_4752.astype('uint32'), [15, 196]), ), 0)
call_4753 = relay.TupleGetItem(func_2966_call(relay.reshape(const_4748.astype('float64'), [14, 5, 10]), relay.reshape(const_4749.astype('int32'), [3136,]), relay.reshape(const_4750.astype('int8'), [234,]), relay.reshape(const_4751.astype('float32'), [330,]), relay.reshape(var_4752.astype('uint32'), [15, 196]), ), 0)
func_1454_call = mod.get_global_var('func_1454')
func_1457_call = mutated_mod.get_global_var('func_1457')
call_4754 = relay.TupleGetItem(func_1454_call(relay.reshape(var_4752.astype('uint32'), [14, 14, 15]), relay.reshape(var_4752.astype('uint32'), [14, 14, 15]), ), 0)
call_4755 = relay.TupleGetItem(func_1457_call(relay.reshape(var_4752.astype('uint32'), [14, 14, 15]), relay.reshape(var_4752.astype('uint32'), [14, 14, 15]), ), 0)
output = relay.Tuple([bop_4735,call_4747,const_4748,const_4749,const_4750,const_4751,var_4752,call_4754,])
output2 = relay.Tuple([bop_4735,call_4753,const_4748,const_4749,const_4750,const_4751,var_4752,call_4755,])
func_4793 = relay.Function([var_4733,var_4734,var_4752,], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4793_call = mutated_mod.get_global_var('func_4793')
var_4795 = relay.var("var_4795", dtype = "uint16", shape = (2, 1, 9))#candidate|4795|(2, 1, 9)|var|uint16
var_4796 = relay.var("var_4796", dtype = "uint16", shape = (2, 8, 9))#candidate|4796|(2, 8, 9)|var|uint16
var_4797 = relay.var("var_4797", dtype = "uint32", shape = (3, 980))#candidate|4797|(3, 980)|var|uint32
call_4794 = func_4793_call(var_4795,var_4796,var_4797,)
output = call_4794
func_4798 = relay.Function([var_4795,var_4796,var_4797,], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4891 = relay.var("var_4891", dtype = "float32", shape = (4, 6, 7))#candidate|4891|(4, 6, 7)|var|float32
uop_4892 = relay.tan(var_4891.astype('float32')) # shape=(4, 6, 7)
func_2517_call = mod.get_global_var('func_2517')
func_2521_call = mutated_mod.get_global_var('func_2521')
var_4898 = relay.var("var_4898", dtype = "float32", shape = (396,))#candidate|4898|(396,)|var|float32
const_4899 = relay.const([[6,-4,7,-6,3,-6,8,-8,9,8,1,-1,-3,-6,-6,4,4,-3,-7,2,3,-2,7,7],[10,-8,-5,9,4,4,-10,2,-6,6,3,5,7,9,7,-4,3,-5,-8,6,-10,4,3,-5],[-2,-4,1,3,5,2,9,-9,7,-1,-8,9,-9,1,10,1,-7,6,-2,-5,-2,9,4,-4],[-1,6,-1,-9,-9,-2,-6,-8,6,2,3,-7,6,-6,5,1,-4,7,-3,6,7,-8,9,-8],[2,-6,-7,9,10,-6,-5,3,4,-7,-6,-9,-10,-8,7,-7,7,-1,6,-10,5,-1,10,4],[-4,3,5,-5,-2,-6,-10,-7,4,-3,-10,-7,8,-9,-4,4,-3,9,2,-3,-10,3,-1,7],[10,8,-5,-5,6,1,7,7,-6,-10,-2,-3,3,2,-10,-1,-1,8,-7,8,9,3,-7,-7],[-9,-1,1,5,4,8,-8,-2,-2,-6,-7,2,6,-1,-6,-5,-5,-7,-2,10,10,10,9,-1],[-4,7,3,-7,-5,-1,-7,7,3,-10,-6,3,-8,-6,-6,-7,-5,-4,-6,-7,-9,3,5,2],[3,4,-4,-5,-1,1,-9,-8,3,-5,2,9,10,-1,-1,4,-5,-3,-5,-3,-3,-4,1,9],[3,-4,-5,8,6,-2,-2,-2,3,8,-6,-6,5,3,9,1,-5,-9,-9,-8,8,-3,6,-9],[-1,-9,-10,-5,-3,3,10,6,-1,8,3,7,7,2,-5,2,-10,2,6,-4,-4,2,3,9],[-6,3,4,9,-2,-3,-1,-3,-8,10,-10,4,1,10,-8,7,-8,1,2,3,10,1,3,-2],[-8,-4,7,4,5,-2,-5,-5,1,6,6,7,5,9,3,8,4,-10,1,-8,10,-7,1,9],[-6,5,-4,9,-4,9,2,7,-1,-8,10,7,8,-4,-6,2,8,7,4,1,-6,3,8,-3],[-6,-1,9,-8,-6,7,-7,-5,8,5,9,8,-6,3,-1,-3,7,7,6,2,-8,-3,10,10],[-9,8,10,-3,-6,-10,-3,8,-9,-8,8,4,-1,-3,-4,-6,7,-10,1,3,8,-8,6,-2],[9,-9,-10,-7,9,-1,-2,-5,5,7,-7,-5,4,7,-9,7,9,-7,1,1,3,-1,10,-5],[1,3,2,4,-1,-8,-10,-8,-4,-7,8,-3,9,-7,1,-8,-4,2,-8,2,9,-2,8,7],[7,-5,3,8,-3,5,-9,-6,-3,-6,7,4,9,-5,8,-7,10,-9,-9,7,4,-3,6,-3],[-10,-1,7,10,-1,-1,1,-3,-9,5,9,-7,5,-5,1,-7,-7,7,6,-1,4,-6,-9,7],[-1,-5,2,5,-4,-8,8,-8,-6,8,2,-8,1,-1,-3,2,9,-6,1,-10,-2,2,4,3],[-2,-1,-2,1,3,8,2,-1,7,-4,9,-5,-2,8,-6,-7,6,5,7,1,-7,7,9,10],[5,6,10,4,-8,-2,-5,-5,9,9,3,7,1,1,3,-7,9,-4,-5,-3,-5,9,5,1],[3,1,1,8,-3,-3,-2,7,-6,-2,-3,3,-1,-8,-6,10,10,-5,-9,-7,6,1,2,1],[2,8,8,3,-4,6,1,-1,-5,-6,-1,-9,2,-7,7,-2,-1,4,2,7,-8,9,-8,2],[7,10,-10,-7,8,-7,-1,-3,1,-2,-5,-10,1,-2,-10,-4,4,-8,-2,5,8,4,2,4],[5,6,-6,-2,-8,5,3,-8,3,9,1,-3,7,10,5,3,-1,-1,-7,-3,-1,6,10,-9],[10,-8,6,-1,1,2,-7,-5,6,-3,-8,10,7,-3,2,1,4,4,-1,10,-6,7,9,-10],[-9,-10,3,8,7,-8,5,-2,7,6,-9,-1,3,8,1,9,-5,8,-10,-8,8,-6,3,2],[4,-1,8,-9,9,3,7,1,10,8,6,6,3,-8,10,8,10,8,-1,-9,4,2,3,-3],[-3,-2,8,4,10,8,4,3,-5,-1,7,7,-1,3,2,-4,7,-5,-4,6,3,-3,10,-10],[-8,-9,1,8,-5,-6,9,4,-8,2,-8,-5,4,7,-5,-9,9,9,4,-4,10,-5,-1,-8],[-8,10,-1,-8,-2,-1,3,9,-7,-4,6,9,-7,9,-3,-5,-7,8,10,5,10,-9,5,5],[-4,3,6,-8,-10,8,-3,-6,-8,10,-10,-9,2,-3,6,9,6,2,7,4,-8,-1,-5,-1],[9,10,6,-10,-9,-5,3,-5,-5,-3,-8,8,-7,-6,5,-5,9,-6,5,3,-10,-9,2,2],[-2,10,1,-7,-8,-1,2,-9,-1,6,-2,-10,-7,3,-2,7,-1,-7,6,1,8,-8,7,-9],[-4,-4,6,-7,2,4,-7,9,9,-2,-9,10,-4,6,-8,2,4,8,-2,4,-7,10,-9,-5],[5,5,10,-1,-8,8,4,9,9,-7,-4,-5,-7,-6,3,7,9,-2,-1,-5,-10,6,4,3],[3,-4,-10,8,5,-8,-7,8,8,7,3,-10,-5,-10,-2,-4,-2,9,-9,-1,-3,7,-3,10],[-5,5,-6,-4,1,-2,6,5,-4,1,-3,2,-1,-10,1,8,-4,5,-7,-3,-2,9,-8,-5],[-1,8,9,2,6,-4,9,-5,4,4,-9,-8,-9,9,3,10,2,-8,9,-1,-1,3,7,-2],[8,-4,1,9,1,9,-4,6,8,-9,5,1,-4,-5,-10,4,2,-6,10,-7,5,-4,5,-7],[5,8,-3,-5,3,10,8,-3,3,-7,5,3,8,-9,7,-3,-1,2,2,-2,9,10,7,-10],[-1,5,-9,-5,6,-7,1,7,3,-9,9,1,5,-7,-3,5,2,-3,8,5,4,-9,3,1],[5,2,1,-4,-5,3,8,3,9,8,-3,-3,6,-6,-8,-7,-4,9,-2,-4,-5,-6,-4,-10],[6,10,4,8,5,-1,8,-8,-8,-10,1,9,10,9,-4,-8,-1,-10,2,-5,2,4,5,-4],[8,-5,-9,-6,-10,6,-8,-6,3,-1,6,5,-5,1,10,5,1,-8,-4,3,1,-10,6,-7],[-4,5,6,9,1,-1,5,-9,-8,1,3,-8,3,-5,-3,-9,1,-8,-6,-8,9,5,9,-2],[-1,9,-7,10,4,-1,6,-6,4,3,3,6,-3,7,5,9,4,-1,4,3,5,-2,5,-7],[2,-10,3,8,-7,10,-4,-1,8,9,1,7,-9,-8,-9,-5,9,7,-1,10,7,1,2,2],[-4,-9,7,3,-6,-2,8,-7,3,8,8,4,-9,-9,-9,-10,-3,7,6,-6,1,-9,-3,5],[-10,-2,1,4,-2,-3,-5,3,-4,8,2,-4,9,-3,10,2,9,8,1,1,6,-6,9,-9],[-4,4,-10,-9,4,3,10,-5,9,-10,-7,4,5,6,-1,-8,3,-1,2,2,-3,-1,-8,1],[-2,-8,4,-6,-1,-2,7,-9,1,3,-1,-1,-8,7,-1,-5,-1,-5,2,3,-2,-10,-6,1],[-1,3,9,-6,8,-5,4,-5,-3,-10,-10,2,8,4,3,3,2,-5,4,10,-5,-3,6,-1],[-8,6,4,3,10,-7,-5,-6,-10,9,-2,-8,-7,3,-8,-4,7,-6,8,4,7,10,6,8],[-6,-2,6,-3,-8,6,-3,4,-10,3,-2,-5,-10,10,10,-2,4,3,1,-3,-4,-8,-1,9],[5,-9,-8,-7,-9,4,4,6,-9,10,-6,-2,-3,-7,3,6,-7,6,-1,-4,9,-2,4,-2],[8,7,-6,6,9,6,1,-1,-8,2,9,2,3,-2,-3,-2,-6,-6,-7,-4,8,-8,1,-5]], dtype = "int8")#candidate|4899|(60, 24)|const|int8
call_4897 = relay.TupleGetItem(func_2517_call(relay.reshape(var_4898.astype('float32'), [11, 6, 6]), relay.reshape(var_4898.astype('float32'), [11, 6, 6]), relay.reshape(const_4899.astype('int8'), [1440,]), ), 3)
call_4900 = relay.TupleGetItem(func_2521_call(relay.reshape(var_4898.astype('float32'), [11, 6, 6]), relay.reshape(var_4898.astype('float32'), [11, 6, 6]), relay.reshape(const_4899.astype('int8'), [1440,]), ), 3)
output = relay.Tuple([uop_4892,call_4897,var_4898,const_4899,])
output2 = relay.Tuple([uop_4892,call_4900,var_4898,const_4899,])
func_4903 = relay.Function([var_4891,var_4898,], output)
mod['func_4903'] = func_4903
mod = relay.transform.InferType()(mod)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4903_call = mutated_mod.get_global_var('func_4903')
var_4905 = relay.var("var_4905", dtype = "float32", shape = (4, 6, 7))#candidate|4905|(4, 6, 7)|var|float32
var_4906 = relay.var("var_4906", dtype = "float32", shape = (396,))#candidate|4906|(396,)|var|float32
call_4904 = func_4903_call(var_4905,var_4906,)
output = call_4904
func_4907 = relay.Function([var_4905,var_4906,], output)
mutated_mod['func_4907'] = func_4907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5120 = relay.var("var_5120", dtype = "float32", shape = (13, 11, 13))#candidate|5120|(13, 11, 13)|var|float32
uop_5121 = relay.asin(var_5120.astype('float32')) # shape=(13, 11, 13)
func_3379_call = mod.get_global_var('func_3379')
func_3382_call = mutated_mod.get_global_var('func_3382')
const_5129 = relay.const([5,10,-4,-10,-9,3,2,-3,5,8,3,-7,10,-5,9,5,-4,7,1,-10,-4,10,-6,10,-7,5,6,2,-1,8,-7,-3,-10,-8,10,3,3,-10,8,-2,-10,-7,-1,6,-6,-2,-9,-5,-5,-2,-10,-9,-8,-4,10,-1,5,9,-9,-9,-7,-9,6,-5,-6,8,-10,1,-7,-6,2,-9,7,4,1,2,-4,6,2,5], dtype = "uint64")#candidate|5129|(80,)|const|uint64
var_5130 = relay.var("var_5130", dtype = "float64", shape = (945,))#candidate|5130|(945,)|var|float64
call_5128 = relay.TupleGetItem(func_3379_call(relay.reshape(const_5129.astype('uint64'), [5, 8, 2]), relay.reshape(var_5130.astype('float64'), [945,]), ), 0)
call_5131 = relay.TupleGetItem(func_3382_call(relay.reshape(const_5129.astype('uint64'), [5, 8, 2]), relay.reshape(var_5130.astype('float64'), [945,]), ), 0)
func_2960_call = mod.get_global_var('func_2960')
func_2966_call = mutated_mod.get_global_var('func_2966')
const_5134 = relay.const([-5.072040,7.720881,5.636679,-5.019237,-2.394071,9.511734,8.845545,-4.659477,5.630866,4.342212,-7.176417,-7.326813,1.038251,3.548869,2.300553,8.070427,5.050213,9.314967,6.473151,2.110894,3.302913,-4.402400,-4.108589,6.850940,-9.547849,9.784935,-5.049041,-6.857147,5.486309,0.513609,-7.349655,6.617767,0.132872,-4.632787,-1.303536,-2.780426,-3.724332,-2.674026,-6.665002,8.510196,8.771147,6.679239,-9.858668,5.345327,7.557443,-1.097724,9.608856,4.699799,9.311178,-2.993642,-2.481993,9.891730,0.859139,4.478746,1.907598,3.386330,-1.673024,1.789889,-3.869408,-6.433082,2.414758,8.101478,-1.682485,1.176931,-2.051469,2.510149,2.064271,-9.199196,1.965698,-9.992606,-6.589226,3.739446,-1.796294,5.795406,3.685895,-6.715152,-5.746420,9.165367,9.823186,-8.708106,-5.959566,-6.556489,-9.269071,5.202899,-6.522357,3.454559,4.182004,8.481093,4.324450,-6.133236,1.459311,1.490145,0.615497,-2.238837,1.682174,-1.812681,9.953964,7.853064,6.354224,4.507405,-4.335756,-2.874801,8.228191,0.820438,-1.968343,1.164024,6.122625,-0.042619,2.980403,7.998912,8.098729,2.601372,-6.956284,5.539200,5.535479,9.848321,6.691987,7.504894,-4.505329,7.291895,-9.572961,-5.769680,9.298887,-8.142992,1.568968,1.236589,-8.560846,1.389097,-5.896713,-9.887164,4.940002,2.657173,-4.379435,1.221587,-2.174960,9.943038,1.346018,-4.374147,-1.931732,-7.861917,-1.524439,3.022989,-3.454696,8.389255,8.738067,-5.062179,3.248678,3.719897,-4.074326,-0.283814,1.802822,0.878692,5.694959,3.354837,1.050284,-5.657643,5.118563,-5.437433,-7.208194,-7.071580,3.096169,4.764004,7.858297,-8.865804,3.714751,-9.581812,6.224744,-0.221291,7.790137,-5.829948,3.132982,-8.172068,-1.990264,-0.793774,-0.855471,-4.083624,9.494985,-2.508867,-1.180060,-6.714407,-9.778063,-7.270565,-9.972445,-4.668258,-2.587689,-8.724731,3.207041,8.182051,2.098602,6.962587,-3.536988,-5.240487,6.576367,-2.439838,9.300384,8.688266,6.751400,0.542425,-2.162834,3.613473,6.705258,-4.185622,-8.547122,-7.100612,7.154008,3.735532,-0.675022,5.685279,3.481359,6.546802,-4.751683,-8.553043,9.838416,-6.628288,3.334904,-9.876314,3.836113,-9.041645,-0.718993,-4.147562,-9.705819,-6.024484,3.446043,-8.609563,2.816268,3.565163,-0.660058,-9.329813,-8.569239,-5.141041,-9.902283,-2.167196,1.333801,-4.589970,1.133286,-2.047421,-6.655747,-9.565194,-9.121406,-3.678276,3.245197,-6.967319,3.767354,3.221549,8.916875,-5.079456,-7.276637,7.160855,8.025625,-8.842469,-8.422880,-6.063767,6.082068,-4.036822,3.088803,6.683803,8.578539,-7.973673,-7.257929,-5.006754,6.393631,-6.291031,9.055812,-0.273767,8.063346,9.604667,6.715643,-6.020116,9.439595,-2.232313,-0.740105,4.999036,5.880630,-5.660239,9.640199,9.265329,3.625572,-3.789595,-9.617648,5.504938,1.161424,2.475205,-1.758641,9.980951,9.772273,-3.921577,-0.732764,3.982381,-6.131764,6.382836,-8.097485,-1.940369,-2.895578,-8.106965,0.527180,-2.465937,-2.423788,5.025975,-5.701983,-8.936014,8.889702,8.818388,-8.217827,1.277060,-0.009676,-6.873171,-4.276226,6.115955,-5.032525,4.922453,2.114651,-1.367397,3.437039,7.705538,2.178494,8.235373,-4.640321,-1.345226,1.058971,7.494539,-6.051768,-3.234594,4.597208,-5.119261,7.292436,1.182410,8.345348,0.959494,-9.115072,-5.898079,-0.234558,-7.588898,-7.141133,-3.483977,-4.390786,-7.219755,8.582450,0.132243,-8.071040,-6.915882,0.554893,-3.672080,-2.460924,-2.836030,-4.912383,-5.994162,-9.552077,-8.677975,3.718461,9.822546,-6.282080,-2.071794,-9.321147,-4.971342,4.692666,6.045869,5.760749,-2.568444,3.312328,-9.085061,7.596468,-9.613834,2.239417,1.378928,5.857809,-3.808004,-1.153601,-2.009419,9.825291,0.363562,0.696053,5.001392,-4.344107,-5.517391,-4.975138,-9.525118,7.520161,-5.720508,7.608665,6.539549,-2.311564,-4.914969,1.915694,2.111921,-3.412565,2.877946,9.619589,-4.298005,-8.462349,1.894151,7.823222,5.464365,1.096157,1.451257,2.796387,8.443460,-2.908762,-2.433229,-4.828193,-5.599490,-2.749806,8.927387,2.256469,6.091172,-5.558292,-9.520439,-4.547859,7.290543,1.920941,-7.313972,7.819573,-4.286124,-4.456601,4.543889,2.993774,1.655730,-5.150316,6.333166,-7.701347,0.415025,-6.303297,-9.341936,4.677944,-1.956996,-2.621595,5.367415,-9.835069,4.488508,-0.611367,-5.295058,1.444555,9.866105,-1.988858,4.661143,-7.023890,0.444089,-4.753278,9.274972,6.135760,0.435062,0.032206,-1.014590,-4.828094,-6.287354,-5.013223,-2.895993,-2.103191,0.343921,0.137434,9.282414,-2.578386,-3.053768,-9.843239,-0.717548,4.279111,9.542141,0.076695,-3.300317,3.249897,-1.655232,7.936580,3.297801,0.341051,-1.101111,9.741090,-2.639798,1.110873,9.876205,-5.652074,2.575338,9.907868,-6.146561,-7.349384,-2.467401,6.222069,-1.882705,-1.539599,-4.860111,-9.775594,-5.291985,-4.250488,8.164369,5.029941,6.199136,0.187456,6.118173,2.773173,6.007784,-5.564072,-2.287211,-7.444138,1.121258,-3.116226,-7.735682,-4.388150,9.093127,9.041589,-9.029154,4.255103,5.162409,4.595316,6.642089,-6.890515,-3.424938,-6.632169,5.293982,8.385097,5.729154,-4.032519,7.006211,-6.672164,-8.417500,5.818886,-6.259341,-1.387817,3.031571,-7.494040,0.287595,2.286294,-8.412323,-7.043655,3.173150,-8.022731,7.173682,-7.287580,8.483063,4.268748,5.365784,9.535444,6.581282,3.203102,7.661143,7.363429,-3.714650,-3.794780,8.677504,-2.603739,4.686173,5.681423,-2.059898,6.647648,2.049892,6.495882,9.995324,-6.022013,-3.020550,-6.947543,-4.714583,-9.234767,-1.311808,6.590907,1.181367,-1.549070,-7.666953,-2.029988,-2.767664,-6.441894,-2.862835,-3.109759,-6.371243,2.112480,-6.318380,-9.397148,8.061986,8.953665,-8.163354,8.004311,4.696231,-9.438272,-1.698495,-0.543455,-1.602876,-5.531835,-2.381364,-2.424777,7.266609,2.624129,2.219509,-3.460483,5.192906,1.989523,-2.117975,1.662497,-3.010186,7.426673,-8.811468,7.322083,1.187758,-4.739863,-1.168119,-1.105200,-2.414693,3.587885,-8.303276,-0.001882,-4.356663,5.787260,2.461395,-4.659859,-5.404182,-3.102610,2.404433,2.905355,1.827544,-9.120700,-4.320199,4.104096,-9.246534,6.113277,4.719798,-7.318934,7.758059,-6.679995,6.667200,-8.464977,4.504577,-3.727845,3.698818,1.254803,9.703365,-8.906755,-8.654771,-8.666947,0.070781,4.416229,-0.890818,-9.759233,6.457325,-4.608457,2.895850,-6.814673,2.072922,6.347251,-1.618599,8.944622,-5.247406,-7.768632,7.004014,1.403736,-5.476862,4.623008,5.779478,-1.730064,3.495849,6.091924,5.912570,0.656150,-4.861345,7.868503,0.130270,9.606036,3.177956,-8.082056,-7.596362,3.550866,8.444174,6.159813,-0.520130,4.957781,-7.853461,-4.879056,1.193432,-2.596185,-0.351300,-1.043404,-7.926620,6.742471,0.199716,8.659733,0.890031,-3.562238,5.628012,1.443119,4.607138,7.371659,9.932874,-2.105250,1.751425,9.028858,-8.439732,0.387712,1.612725,-6.788237,1.738859,-5.468870,-2.415401,9.571150,3.124259,6.665624,5.083421,-2.254776,-3.972233,9.430630,-8.398193,1.160686,2.564662,5.791776,3.291688,9.083111,5.534224], dtype = "float64")#candidate|5134|(700,)|const|float64
var_5135 = relay.var("var_5135", dtype = "int32", shape = (3136,))#candidate|5135|(3136,)|var|int32
var_5136 = relay.var("var_5136", dtype = "int8", shape = (234, 1))#candidate|5136|(234, 1)|var|int8
var_5137 = relay.var("var_5137", dtype = "float32", shape = (330,))#candidate|5137|(330,)|var|float32
var_5138 = relay.var("var_5138", dtype = "uint32", shape = (2940,))#candidate|5138|(2940,)|var|uint32
call_5133 = relay.TupleGetItem(func_2960_call(relay.reshape(const_5134.astype('float64'), [14, 5, 10]), relay.reshape(var_5135.astype('int32'), [3136,]), relay.reshape(var_5136.astype('int8'), [234,]), relay.reshape(var_5137.astype('float32'), [330,]), relay.reshape(var_5138.astype('uint32'), [15, 196]), ), 3)
call_5139 = relay.TupleGetItem(func_2966_call(relay.reshape(const_5134.astype('float64'), [14, 5, 10]), relay.reshape(var_5135.astype('int32'), [3136,]), relay.reshape(var_5136.astype('int8'), [234,]), relay.reshape(var_5137.astype('float32'), [330,]), relay.reshape(var_5138.astype('uint32'), [15, 196]), ), 3)
output = relay.Tuple([uop_5121,call_5128,const_5129,var_5130,call_5133,const_5134,var_5135,var_5136,var_5137,var_5138,])
output2 = relay.Tuple([uop_5121,call_5131,const_5129,var_5130,call_5139,const_5134,var_5135,var_5136,var_5137,var_5138,])
func_5151 = relay.Function([var_5120,var_5130,var_5135,var_5136,var_5137,var_5138,], output)
mod['func_5151'] = func_5151
mod = relay.transform.InferType()(mod)
mutated_mod['func_5151'] = func_5151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5151_call = mutated_mod.get_global_var('func_5151')
var_5153 = relay.var("var_5153", dtype = "float32", shape = (13, 11, 13))#candidate|5153|(13, 11, 13)|var|float32
var_5154 = relay.var("var_5154", dtype = "float64", shape = (945,))#candidate|5154|(945,)|var|float64
var_5155 = relay.var("var_5155", dtype = "int32", shape = (3136,))#candidate|5155|(3136,)|var|int32
var_5156 = relay.var("var_5156", dtype = "int8", shape = (234, 1))#candidate|5156|(234, 1)|var|int8
var_5157 = relay.var("var_5157", dtype = "float32", shape = (330,))#candidate|5157|(330,)|var|float32
var_5158 = relay.var("var_5158", dtype = "uint32", shape = (2940,))#candidate|5158|(2940,)|var|uint32
call_5152 = func_5151_call(var_5153,var_5154,var_5155,var_5156,var_5157,var_5158,)
output = call_5152
func_5159 = relay.Function([var_5153,var_5154,var_5155,var_5156,var_5157,var_5158,], output)
mutated_mod['func_5159'] = func_5159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5281 = relay.var("var_5281", dtype = "float32", shape = (7, 4, 12))#candidate|5281|(7, 4, 12)|var|float32
uop_5282 = relay.atan(var_5281.astype('float32')) # shape=(7, 4, 12)
func_2616_call = mod.get_global_var('func_2616')
func_2618_call = mutated_mod.get_global_var('func_2618')
var_5286 = relay.var("var_5286", dtype = "int16", shape = (810,))#candidate|5286|(810,)|var|int16
call_5285 = func_2616_call(relay.reshape(var_5286.astype('int16'), [9, 6, 15]))
call_5287 = func_2616_call(relay.reshape(var_5286.astype('int16'), [9, 6, 15]))
output = relay.Tuple([uop_5282,call_5285,var_5286,])
output2 = relay.Tuple([uop_5282,call_5287,var_5286,])
func_5304 = relay.Function([var_5281,var_5286,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
var_5305 = relay.var("var_5305", dtype = "float32", shape = (7, 4, 12))#candidate|5305|(7, 4, 12)|var|float32
var_5306 = relay.var("var_5306", dtype = "int16", shape = (810,))#candidate|5306|(810,)|var|int16
output = func_5304(var_5305,var_5306,)
func_5307 = relay.Function([var_5305,var_5306,], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5377 = relay.var("var_5377", dtype = "float32", shape = (12, 10, 9))#candidate|5377|(12, 10, 9)|var|float32
uop_5378 = relay.sinh(var_5377.astype('float32')) # shape=(12, 10, 9)
func_4431_call = mod.get_global_var('func_4431')
func_4438_call = mutated_mod.get_global_var('func_4438')
var_5381 = relay.var("var_5381", dtype = "int8", shape = ())#candidate|5381|()|var|int8
const_5382 = relay.const([-3,-3,8,-7,3,7,-9,4,-6,2,9,-9,-3,-10,-7,3,-5,-6,-4,-1,2,-4,-10,8], dtype = "int8")#candidate|5382|(24,)|const|int8
const_5383 = relay.const([[-9,2,10,2,3,6,7,-10,10,3,6,1,-1,7,-8,-8,-7,10,8,9,-3,5,10,3,7,6,-5,9,7,-2,4,1,10,-9,5,-10,-5,-10,-8,7,-8,9,1,1,-4,2,-5,-9,4,3,-6,-10,8,7,5,-3,6,-8,2,4,2,-5,-9,-2,-10,4,10,8,6,-5,-7,3,4,2,-1,-5,-2,-10,5,-6,8,3,-6,7,-6,10,-3,-1,-4,-5,7,8,10,-10,1,-10,-8,7,5,3,-6,-9,7,10,-10,6,4,-9,-1,1,-5,-1,5,-6,-3,4,-3,10,10,3,4,-9,3,-7,7,6,-9,4,6,6,10,-9,-2,6,9,-6,-9,3,1,8,-8,-1,-3,2,-6,1,8,-10,10,-6,5,4,-7,8,9,-7,10,3,-2,7,3,3,-7,-6,8,6,4,-7,-8,-8,-1,-5,10,6,-5,9,10,-1,-6,6,9,-9,-3,-1,-3,10,-1,-5,-5,2,-6,7,-2,7,-5,3,-4,-4,-9,1,-3,6,-8,-6,3,-2,-10,7,7,-1,-6,4,-7,10,-5,-7,-2,2,-3,-2,10,-7,4,4,9,-4,2,-6,10,4,-5,-2,4,-6,6,-5,-3,-7,-6,10,10,10,-6,10,10,-9,-9,-1,-7,-1,-8,-9,7,-10,9,-8,-4,1,-3,-5,-9,8,-5,2,-10,7,7,9,-4,-9,-6,1,3,1,-7,9,-3,3,-7,-2,-7,-5,6,10,-10,4,4,-10,-9,5,9,1,2,-10,8,8,-4,10,4,2,1,-9,-1,-3,2,-8,1,-3,-3,4,8,9,-4,3,-2,-1,1,7,-1,-4,-8,3,2,-4,8,10,-9,-7,-1,10,-5,4,3,10,2,6,-6,9,3,-7,-1,-9,6,-3,6,10,-4,-7,-4,10,1,-5,-5,9,10,-10,-2,1,-5,-7,-10,2,9,-3,-6,-2,9,8,-4,3,-10,4,2,-2,-4,1,3,-9,5,-9,3,10,9,-7,4,6,2,5,-9,-2,5,-6,9,5,7,4,5,3,3,-8,7,10,6,-5,4,10,1,10,-3,-3,-8,10,3,9,3,-1,-3,-2,-8,-6,4,-2,3,-6,-6,5,-6,-9,-10,4,-8,-8,6,2,8,-6,3,9,9,-2,-4,1,4,6,-2,1,-5,-3,-8,-7,-2,-9,3,2,-3,9,3,-5,1,5,4,-3,3,-4,-10,7,7,10,-6,-2,-9,6,10,-1,5,-2,1,1,-1,7,9,-5,2,6,8,-6,-8,10,-4,-1,-6,9,10,1,7,3,4,2,-3,-5,-6,-7,3,-4,-8,-5,8,2,-6,-9,5,-10,-2,-6,-1,-6,-1,-3,10,-9,-2,3,-10,10,-1,2,-5,-4,5,1,-8,4,10,4,-5,-8,-7,9,-5,-5,1,2,-10,-4,6,-4,2,4,5,4,10,7,1,9,8,-4,-3,-7,-3,-9,-6,-5,-1,4,8,-6,-10,-8,-2,8,-10,10,-1,8,10,4,2,-6,-8,-1,-8,5,-1,-8,-1,-4,1,4,-5,-9,-2,10,-2,-7,1,-9,4,-7,-8,-9,-3,9,8,-9,8,7,9,-5,8,-3,1,-7,7,-1,1,3,-4,-2,-8,7,-7,7,4,10,4,-10,-7,-10,-3,1,-3,-9,-9,-9,-2,-6,-1,-6,4,8,9,-5,-6,-1,7,2,8,-5,2,5,-2,-2,3,1,-4,-7,6,-9,6,9,4,3,3,-9,6,9,-5,3,9,-7,-1,-5,-6,-9,-8,10,-2,-6,-3,-3,10,-6,-3,5,3,6,-8,-2,7,9,-2,9,-1,10,-9,10,-5,6,-5,1,-3,-1,7,-7,5,-2,-6,2,6,-1,4,-4,-8,-8,-1,1,5,-7,5,9,-2,6,1,-3,-1,2,8,6,-6,10,-5,-5,3,5,8,10,4,-7,-6,-10,7,-2,-7,10,3,5,9,10,-4,1,-8,1,9,-7,-10,-1,8,-9,-2,-2,-7,4,-7,-1,9,4,-5,9,4,-8,-2,9,-2,7,-7,10,-6,-1,1,5,-4,-9,-3,-4,4,-9,-2,-8,-7,10,-6,8,-7,6,-3,-9,-7,7,-9,-8,4,1,6,-4,-6,8,7,3,-9,3,9,8,-2,-9,7,-4,-5,-8,-4,-5,-7,10,3,9,6,3,-7,3,-7,10,10,-6,9,-5,8,-1,6,-10,-9,-10,-4,10,3,9,-8,5,-3,2,-5,-4,8,10,9,3,-1,-10,-6,-6,-6,1,6,-3,-7,10,3,-6,9,6,-6,-5,2,3,6,10,-4,7,7,10,6,-5,-6,-1,-7,-3,6,1,3,-9,-3,2,-10,-9,2,10,-9,-6,-7,2,-6,8,-4,3,1,8,-10,3,-3,6,2,-3,2,8,8,5,6,7,10,-9,1,7,10,-1,2,6,3,7,-1,-9,6,5,5,3,-2,-10,-10,4,9,-2,-3,5,10,-3,8,9,6,-7,6,8,-2,2,-5,1,2,-5,4,10,5,-2,-5,-6,-5,-2,2,-8,10,8,6,1,5,-10,-7,2,4,-4,6,-10,4,-1,-3,3,-1,-1,10,-5,-10,-3,-7,-1,-8,-2,7,-5,-5,9,7,3,3,-5,8,10,-4,4,-8,2,10,-2,5,7,-6,-10,-8,-1,1,-4,5,-4,6,2,-3,-4,8,9,3,-5,-4,-4,-2,-3,-2,-9,-10,-9,2,-4,6,7,2,-7,-4,8,7,-10,8,1,10,-8,-4,-9,-8,3,-1,-6,-10,9,-5,-2,8,1,-3,7,-2,-6,-4,5,9,6,2,-4,4,6,2,-4,-10,-8,7,8,10,8,-10,4,2,-1,3,-9,-9,-8,3,-3,7,9,7,-3,-3,9,-3,5,4,-2,-1,5,5,3,5,4,7,4,-1,1,6,-5,4,6,6,-6,-10,9,4,7,9,-9,-3,2,-10,5,-4,6,-2,9,-2,-7,6,8,-1,1,-4,-10,-5,-2,7,4,-10,1,-3,-2,-5,-7,-8,-5,10,10,-8,5,-3,10,-4,3,-5,6,5,4,8,5,8,4,5,4,-4,-7,-5,9,1,1,-6,-5,4,3,3,-7,-7,9,-3,-7,3,6,-1,7,-4,-10,-7,1,6,-5,-3,8,-3,4,-1,5,-5,1,-3,-9,-9,7,-4,9,-4,9,-7,9,-5,6,-4,-9,9,4,-8,-10,2,3,8,5,6,-1,-2,-1,-5,-2,-7,7,-3,-1,-6,8,-8,3,2,-10,-4,9,3,-5,-8,-7,-10,-2,-7,-3,-4,8,-1,10,1,-10,-4,10,-1,-6,-4,6,7,-6,-3,-7,10,-10,6,-4,1,1,7,1,-8,8,9,-5,-2,-1,10,1,-3,2,-1,8,4,-5,5,-8,-4,7,10,2,-3,-8,-10,6,2,-5,-6,-4,4,-1,7,2,-6,7,-10,-10,1,-7,-9,-4,-1,-3,-4,7,-8,7,-8,9,7,-1,-6,-2,-1,7,4,-10,-2,3,-9,4,-9,-3,9,10,-9,-4,6,-1,9,-6,1,9,8,-1,-10,-4,-5,5,-10,-1,8,5,3,2,4,-4,-5,-2,3,-1,8,2,-4,-9,-2,7,-4,-7,-8,9,-6,-1,-6,-5,6,-1,-3,10,-10,6,-9,-5,5,2,-8,5,5,-6,-9,-9,-6,1,-3,-9,-2,-8,-5,-6,2,4,-8,-7,-5,4,-3,10,3,-1,4,1,4,-7,-2,-1,-10,6,4,-10,6,4,7,1,5,6,1,-3,7,-3,-4,3,9,-1,5,-3,-7,2,-1,4,4,-3,-5,9,-8,-3,9,8,7,1,3,7,-9,6,4,5,-7,-7,7,-6,-10,-9,7,7,7,10,-1,1,-7,-1,-6,1,5,8,5,6,5,4,-3,7,-10,9,1,-1,-7,-1,9,6,1,-5,-10,-2,6,-8,-9,-6,-10,-10,5,3,-2,-6,-6,4,-8,6,9,4,5,6,-7,-5,-9,1,-4,7,9,-8,6,4,2,2,7,-9,-10,-8,-9,-5,6,4,10,-8,5,-6,8,4,10,-1,2,1,7,8,-4,4,-8,-10,10,-9,-5,-5,-5,-3,5,-5,-6,-8,8,8,-8,2,3,-8,3,9,2,-9,4,-5,-7,-5,-9,-3,8,8,6,-4,5,1,9,4,-3,-10,6,-6,-6,-6,-4,1,-2,8,3,6,-3,-6,6,-4,6,6,9,-6,2,9,1,-8,1,1,-9,1,-4,2,10,9,-10,-7,6,6,-5,6,7,3,9,3,10,9,3,-4,-7,-9,7,-8,9,-2,10,-4,-9,4,-10,-7,-1,6,8,-6,-2,-6,1,3,9,-8,-1,-6,9,10,7,2,6,3,-10,10,4,-3,9,8,-9,-7,-9,1,-2,-5,-2,6,-5,-1,8,6,-7,-10,5,4,-2,-4,-3,7,10,2,-1,10,-7,-10,2,10,7,6,6,5,1,1,6,9,3,8,10,-1,-8,-4,9,10,4,7,7,9,1,4,-9,-3,-2,6,6,-1,-8,-5,-10,4,-2,-3,-5,9,-2,3,-5,4,7,1,7,8,-10,-4,-7,-2,1,7,10,4,-8,3,-3,-1,7,4,6,9,4,-6,-4,-1,6,3,-4,7,-5,-7,7,1,-2,10,-8,5,4,4,-10,7,2,3,8,-10,-10,1,7,-3,-6,6,-2,5,-2,6,-1,1,2,1,-2,2,10,-1,-3,5,-9,-1,-3,9,-5,-9,-9,-2,-2,10,6,10,-5,-10,-7,-8,-7,1,7,-5,-6,-1,-5,-5,-7,-3,-7,8,5,-2,2,-1,1,9,2,2,-6,-3,9,-10,-5,9,5,5,5,4,-5,8,-9,-6,9,-10,-3,8,1,8,10,-7,5,6,-9,-7,5,2,2,-4,-8,-8,7,2,-3,-5,8,-9,-6,-2,5,-9,7,-6,-1,-10,7,7,3,6,-10,8,-7,-2,1,-9,-5,9,-2,-3,-9,10,-10,-2,8,6,2,-7,-10,-1,-5,9,9,-4,-5,1,-1,-2,10,1,-3,-6,-2,2,-4,-4,3,10,1,2,2,-2,6,1,7,2,10,4,2,5,1,6,-3,8,10,-2,7,5,-9,9,-10,-7,-10,-4,7,10,-7,3,-3,-3,-3,5,-2,-3,-1,-6,-5,3,4,-10,7,8,-6,-5,4,-2,-5,-8,1,8,6,-3,7,-6,3,1,-6,3,1,-1,-6,-3,1,-9,-5,-4,-9,1,1,6,-5,-4,-5,3,7,-3,8,-5,9,3,1,4,4,-7,-7,9,-1,3,1,3,1,-2,-2,-9,-1,5,-10,3,8,-9,4,-7,2,-2,-5,1,-1,-4,-10,-5,5,-6,-1,-9,8,4,-5,-6,10,-1,2,-2,7,-9,-8,1,-4,-8,-3,-4,4,-4,10,7,-9,-6,2,-8,-3,-5,1,4,-2,-10,9,7,-3,-2,4,-2,10,8,9,9,2,5,-2,9,-1,-9,5,4,1,-1,-5,-8,3,7,1,-4,-1,-4,-9,-7,4,-1,-3,4,-2,7,-8,-2,-2,-4,6,3,8,10,-2,8,-2,4,-7,-7,3,-6,-10,5,9,2,9,3,-5,-7,-10,5,-5,5,-7,-10,-8,-1,-5,8,-6,-1,6,-4,-7,-1,5,8,5,3,8,2,10,-2,-10,10,3,-10,-5,1,5,-8,-10,-10,2,6,-9,-5,2,3,-10,-9,-4,1,3,-1,5,-9,-6,9,4,-9,4,9,3,-9,7,-7,6,10,1,-10,-3,-3,-9,8,-10,6,2,1,9,10,7,-9,-5,-2,2,-3,2,3,-10,5,-9,5,8,7,-5,5,2,5,-5,-4,-1,-2,-6,-2,-10,-6,10,10,-7,-5,-4,4,-4,-5,-8,-8,7,9,8,10,10,7,-7,-8,-4,9,-3,5,-4,8,9,-8,-5,10,2,-9,5,-4,5,-9,5,8,-2,5,3,-7,-7,-9,-6,6,-8,-2,-3,7,8,-8,5,9,6,5,-7,-2,-1,-7,-1,-7,-1,3,-5,3,-8,6,-4,-3,9,2,4,10,-4,-4,-1,-5,10,-6,8,-10,-10,-2,-9,9,-4,-4,4,6,1,4,-1,-4,-6,-7,2,3,-2,-8,-9,-1,-7,-1,-10,-10,7,5,-4,-10,-1,-7,6,7,-6,-1,4,-7,-10,4,7,9,10,3,-4,8,-10,10,-6,6,-4,6,10,8,4,-7,6,7,1,3,3,-1,-6,-10,8,4,-10,1,-4,9,-1,-10,-6,6,-7,3,10,-2,4,1,-6,5,5,-8,-7,6,-7,8,5,1,2,-9,-7,-1,3,-5,8,4,10,-10,-3,4,7,3,5,-2,-9,3,2,-9,7,3,-7,-7,-3,1,-7,5,-8,-4,4,4,-8,9,1,6,-3,-1,8,-5,-9,4,-5,10,1,8,1,-9,7,1,-8,-5,-8,1,-6,-6,5,1,-10,3,4,-7,3,5,5,-9,-5,-6,-1,-10,3,4,-5,-8,-3,-6,-4,1,10,9,-4,-10,3,3,-3,2,6,-6,8,-5,4,-9,8,-6,-6,6,3,8,-4,-9,3,-4,5,9,5,8,9,8,7,-6,8,4,9,-7,-4,-1,6,-5,7,-8,-10,-2,2,-8,5,-2,7,-6,10,1,-10,1,8,-8,-2,7,-1,-2,-8,-1,-4,8,3,-10,-7,-6,-1,-2,-5,-6,-9,8,4,4,-10,-7,-10,-6,10,7,-6,4,-2,-10,9,3,-1,-7,-10,-8,-7,-5,-1,1,8,9,-1,-3,1,7,9,9,10,4,-8,10,-9,-2,7,-4,-9,1,5,-10,-5,-6,8,4,-3,8,5,5,-5,6,10,9,2,1,1,-4,10,-3,-7,-6,9,2,-4,-10,5,2,-8,7,8,9,-9,8,-3,10,9,-10,2,4,10,8,2,3,9,-1,-7,-6,1,8,6,6,3,-8,2,4,6,7,10,-9,9,-5,10,5,-7,7,-8,-1,-3,-8,10,4,4,5,3,-4,-6,1,10,9,-8,3,1,6,2,8,-8,10,-8,-9,-1,-5,1,2,3,-3,10,-6,-9,-7,-8,2,9,-9,9,8,-2,6,3,7,1,-7,-5,6,-5,4,9,-1,-10,-5,-10,-6,10,-6,-1,-10,-2,-7,-2,-8,5,-2,7,-3,4,5,-5,-4,4,7,-2,2,-6,10,2,-6,-9,-1,2,5,-4,-9,1,3,3,5,-8,9,5,-3,9,-4,-2,7,7,-1,4,9,3,-3,1,-4,-4,-5,6,6,1,-4,-2,-6,-4,-1,5,4,-1,8,4,1,7,-6,5,-8,1,7,2,-4,10,-3,-5,-5,-5,-8,-5,6,4,6,-6,-6,-4,-2,-8,-3,2,-3,6,-3,3,7,-2,-1,-6,8,1,1,-8,-4,-9,-5,6,10,-8,-10,-6,-10,-1,-5,-9,-3,8,8,6,4,-10,8,9,-5,-1,-9,-3,7,9,2,-4,8,8,-8,7,-2,1,10,-8,-8,-3,7,-5,9,6,-1,8,-4,3,-3,-4,-7,6,4,6,2,8,-5,-6,6,-8,4,-6,6,-10,2,-5,6,8,-5,3,-4,-9,-5,-3,-10,-8,1,-3,-5,-8,-7,-6,6,7,10,9,1,3,6,7,-9,10,-8,8,10,-10,9,-1,2,6,-8,-6,-4,6,-6,-6,7,6,-3,-1,-8,-9,9,-2,8,4,3,-6,10,-9,-3,1,2,-9,10,7,3,5,-6,4,4,-9,-10,6,-6]], dtype = "uint32")#candidate|5383|(1, 2940)|const|uint32
var_5384 = relay.var("var_5384", dtype = "int8", shape = (117, 2))#candidate|5384|(117, 2)|var|int8
const_5385 = relay.const([-3.253101,6.661577,9.627548,-2.786630,-3.758023,-7.257391,-9.143516,-1.205188,-6.595254,3.182838,-5.002159,-2.377367,-5.587154,6.583657,6.457403,-3.345832,0.079457,7.355426,-5.717897,-1.963671,-7.643837,8.138350,7.520425,5.650555,-8.183801,-4.732723,-1.853082,-4.518249,-3.636395,-5.959495,-4.192318,-9.348542,-3.088869,-4.751340,2.120746,8.495641,2.839308,-9.815161,4.268241,-4.926570,-0.216598,-3.539992,5.165620,1.109634,4.282302,8.278951,-0.495170,5.002945,-4.742059,6.916944,-7.372026,2.195270,7.248602,1.300123,6.939581,2.175739,-3.616955,8.010154,-7.828860,-6.523623,-6.178793,5.091676,9.682362,-5.131261,-3.202959,6.742004,-1.688385,3.089106,-9.077078,-6.024266,-4.732073,-2.522258,-0.318884,0.592247,-2.467430,-3.875161,1.690019,-6.111444,-6.100811,-7.874774,-3.993550,1.586908,7.881869,8.664234,5.025270,8.637647,2.694289,1.612761,4.252708,-6.836722,-2.134456,9.594769,-8.813495,-1.088168,-8.559442,6.292423,-0.192324,7.733959,5.329322,0.165953,3.257563,3.030773,-9.531964,-4.078016,9.519531,-8.950204,7.231174,4.323586,9.212198,-3.953219,7.588408,-0.806428,-0.497293,5.776500,-1.902599,2.921699,0.318661,-4.181882,0.227795,-9.629517,5.686251,-1.349721,-5.716960,-4.915578,0.917932,3.107103,3.248760,-9.958235,1.151190,6.989181,-5.636158,0.043485,4.083267,-8.743851,-0.907779,6.666483,6.817542,-7.655574,-4.224435,3.733918,7.983766,-0.154442,-7.187911,7.693425,-4.584115,-6.067791,2.567210,-0.950843,7.167011,2.238677,8.028272,-5.243660,-9.419214,-6.643922,6.899365,-9.922158,-7.694869,1.129146,8.967852,8.270497,-8.917793,-9.395415,5.485183,-1.309958,0.174576,2.206651,9.083872,7.867188,-5.433351,-5.494551,4.829874,7.510560,6.839464,7.691434,7.014023,-2.724833,-4.415868,8.576735,7.825988,-2.889403,1.181319,-5.663299,0.727987,-7.423583,4.594757,-4.733179,5.814603,5.131213,-1.530045,4.484462,4.343871,0.613981,-2.620976,4.201021,3.823433,2.354890,1.863345,5.549831,5.496046,0.176469,-5.057294,-5.220507,9.607819,-2.524499,-2.511949,3.722811,1.638495,4.693566,5.892317,0.013068,-3.156288,7.694456,-5.195446,6.899896,-4.931391,1.806127,-6.095833,-0.178110,5.376435,1.994754,-5.571891,7.589961,-5.450397,6.791514,7.044452,-2.407695,3.165843,-9.440685,-1.658014,-7.826256,-0.023356,8.080201,3.886569,-9.625632,-9.814864,-8.815640,-8.014733,-8.626824,-9.441701,-4.705970,-2.344059,0.741163,-7.421827,-9.764347,5.453908,6.200004,-0.209942,-3.564230,-7.032061,-4.413650,4.272193,7.062825,-5.381743,-3.742270,9.334717,-5.873384,6.648771,-0.733707,2.304716,-2.726611,1.602614,-0.475914,-0.593247,0.772614,9.337785,1.951164,-1.533786,-7.920626,-8.454180,2.092956,8.366796,8.601303,0.813601,-4.914361,-7.721527,-7.255354,-1.633799,0.411489,9.729281,4.076024,-2.544075,4.961849,4.994228,2.659065,-1.930579,-8.568526,8.146075,-4.562319,6.335021,5.315496,9.387045,6.279427,7.813031,-6.225739,3.482353,7.773732,-4.912023,-4.923390,3.615756,5.524826,-4.194878,5.579202,-0.435546,-3.040632,6.541530,2.813252,8.112821,-7.052309,-5.679786,-1.181612,7.693198,3.028097,-1.421259,2.604405,-2.018627,-6.518053,-4.171055,-1.026795,3.158520,-0.108323,-9.454522,-4.756950,-6.180380,-5.108841,0.659868,-7.498395,5.704100,4.845574,1.667367,7.226522,3.368491,-8.064766,5.142650,-0.595676,-7.261638,5.227415,6.478681,-3.771099,1.650090,-2.874654,7.379472,3.307540,-1.059233,4.679456,8.265159,9.093798,-6.546995,0.015417,-9.129958,-0.996504,-6.142052,-4.004716,2.539077,-2.536599,5.422425,-0.974005,9.376127,0.329565,-0.386737,-4.643513,9.823762,-2.765029,5.075835,-2.082712,-6.379994,-2.960195,-2.434064,-0.253541,-5.759780,-4.048883,8.126994,-5.712469,-2.888141,-3.819077,-9.682939,3.532595,2.058978,1.595458,2.194974,-8.071063,5.865113,-0.831279,0.018859,1.308436,8.337249,-5.078099,-2.559785,-9.461535,-4.763113,0.907686,5.161775,3.787624,8.154231,0.544600,-5.170930,-5.142804,4.094085,1.467200,8.037943,-2.205513,6.779638,1.629873,5.140417,-2.595817,-7.875512,2.408285,-4.514270,-7.164998,5.744369,-3.986500,-1.767126,2.329835,-4.775106,-8.790837,-1.801427,-9.613009,6.329468,9.841860,3.224519,8.371839,-7.883604,0.714573,8.480144,-2.213934,-1.739013,-2.733192,7.264596,-1.127826,-7.453391,1.585745,9.184685,-7.638301,1.178325,9.742087,-4.361610,-3.460281,0.905575,0.242843,-0.932096,-0.760624,3.472015,0.769765,-5.819932,-5.757556,-7.849288,1.578913,5.654076,6.873413,-2.162535,-7.986362,6.880410,8.308472,-2.183777,7.311323,-3.391666,8.921277,-9.230613,-5.560238,-3.347716,7.816897,-2.642781,-1.751178,2.370955,-9.298818,8.567994,-3.663477,0.168184,1.399457,-5.587752,-6.074989,-8.481780,-4.400430,-1.404693,-4.189638,4.948066,-8.788302,-7.951270,-3.137865,-6.358667,7.818921,9.721734,-8.041424,9.782409,-0.561046,-1.509439,-4.007073,9.072208,1.343077,0.690077,-7.653626,8.672569,-5.900506,-6.952889,6.153418,9.019675,-2.475373,-9.338904,-9.308337,-3.761100,-3.517364,8.701710,-2.271706,8.394230,9.189608,2.570401,-2.725363,-4.441231,-6.950830,5.512147,6.575821,6.338725,5.410173,-8.775996,7.688838,-6.516954,3.670448,6.308669,-5.568252,4.233956,9.071653,-9.657426,2.679514,9.456577,0.926393,-6.796941,4.211114,-0.838510,3.274870,-9.598433,5.308227,-2.463696,9.989403,-8.798974,0.768996,7.794932,-4.100919,-4.145562,-0.746499,-2.316453,-3.076299,-2.854415,-0.336447,-4.251698,7.025612,-1.474164,8.835668], dtype = "float64")#candidate|5385|(546,)|const|float64
call_5380 = relay.TupleGetItem(func_4431_call(relay.reshape(var_5381.astype('int8'), []), relay.reshape(const_5382.astype('int8'), [1, 3, 8]), relay.reshape(const_5383.astype('uint32'), [30, 98]), relay.reshape(var_5384.astype('int8'), [234,]), relay.reshape(const_5385.astype('float64'), [91, 6]), ), 4)
call_5386 = relay.TupleGetItem(func_4438_call(relay.reshape(var_5381.astype('int8'), []), relay.reshape(const_5382.astype('int8'), [1, 3, 8]), relay.reshape(const_5383.astype('uint32'), [30, 98]), relay.reshape(var_5384.astype('int8'), [234,]), relay.reshape(const_5385.astype('float64'), [91, 6]), ), 4)
bop_5388 = relay.equal(var_5384.astype('bool'), relay.reshape(call_5380.astype('bool'), relay.shape_of(var_5384))) # shape=(117, 2)
bop_5391 = relay.equal(var_5384.astype('bool'), relay.reshape(call_5386.astype('bool'), relay.shape_of(var_5384))) # shape=(117, 2)
bop_5402 = relay.subtract(uop_5378.astype('float64'), relay.reshape(var_5377.astype('float64'), relay.shape_of(uop_5378))) # shape=(12, 10, 9)
uop_5413 = relay.log2(const_5383.astype('float32')) # shape=(1, 2940)
uop_5415 = relay.sinh(uop_5413.astype('float64')) # shape=(1, 2940)
uop_5417 = relay.sigmoid(uop_5413.astype('float64')) # shape=(1, 2940)
func_1454_call = mod.get_global_var('func_1454')
func_1457_call = mutated_mod.get_global_var('func_1457')
call_5434 = relay.TupleGetItem(func_1454_call(relay.reshape(uop_5413.astype('uint32'), [14, 14, 15]), relay.reshape(uop_5413.astype('uint32'), [14, 14, 15]), ), 0)
call_5435 = relay.TupleGetItem(func_1457_call(relay.reshape(uop_5413.astype('uint32'), [14, 14, 15]), relay.reshape(uop_5413.astype('uint32'), [14, 14, 15]), ), 0)
bop_5439 = relay.less_equal(uop_5415.astype('bool'), relay.reshape(const_5383.astype('bool'), relay.shape_of(uop_5415))) # shape=(1, 2940)
var_5443 = relay.var("var_5443", dtype = "float64", shape = (10, 2940))#candidate|5443|(10, 2940)|var|float64
bop_5444 = relay.bitwise_and(uop_5417.astype('uint16'), var_5443.astype('uint16')) # shape=(10, 2940)
output = relay.Tuple([var_5381,const_5382,const_5385,bop_5388,bop_5402,call_5434,bop_5439,bop_5444,])
output2 = relay.Tuple([var_5381,const_5382,const_5385,bop_5391,bop_5402,call_5435,bop_5439,bop_5444,])
func_5448 = relay.Function([var_5377,var_5381,var_5384,var_5443,], output)
mod['func_5448'] = func_5448
mod = relay.transform.InferType()(mod)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5448_call = mutated_mod.get_global_var('func_5448')
var_5450 = relay.var("var_5450", dtype = "float32", shape = (12, 10, 9))#candidate|5450|(12, 10, 9)|var|float32
var_5451 = relay.var("var_5451", dtype = "int8", shape = ())#candidate|5451|()|var|int8
var_5452 = relay.var("var_5452", dtype = "int8", shape = (117, 2))#candidate|5452|(117, 2)|var|int8
var_5453 = relay.var("var_5453", dtype = "float64", shape = (10, 2940))#candidate|5453|(10, 2940)|var|float64
call_5449 = func_5448_call(var_5450,var_5451,var_5452,var_5453,)
output = call_5449
func_5454 = relay.Function([var_5450,var_5451,var_5452,var_5453,], output)
mutated_mod['func_5454'] = func_5454
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5531 = relay.const([[[-6,-9,-9,-9,1,8,8,1],[-6,-5,6,1,-9,-2,9,-2],[-8,9,1,6,5,-3,-5,3]],[[5,-4,-1,10,-5,2,10,-8],[-4,-8,5,1,9,-5,10,-10],[3,5,6,-5,-6,5,-10,8]],[[10,-10,-9,-6,-5,-5,-8,-10],[-6,6,-10,4,-7,-6,2,10],[-10,-8,1,7,5,-3,-6,6]],[[9,5,3,9,-10,7,-9,-5],[-7,-5,-7,8,-4,-6,5,-4],[4,-6,-1,-8,-10,-3,2,-7]]], dtype = "uint64")#candidate|5531|(4, 3, 8)|const|uint64
const_5532 = relay.const([[[3,-7,9,-2,4,5,-10,-10],[7,-2,-6,-1,-6,-5,-10,4],[-5,10,8,-4,-9,6,9,8]],[[-5,-7,5,-5,1,-5,5,4],[-8,-5,-10,9,-6,-7,-2,-9],[7,1,-5,2,6,-7,-9,-2]],[[-7,5,4,5,8,4,-8,10],[2,5,8,5,9,7,-5,4],[4,1,1,9,-9,3,8,1]],[[7,-7,-7,10,-4,-1,6,3],[3,9,2,-7,-10,8,-6,-10],[-9,9,-9,10,-6,4,-6,-1]]], dtype = "uint64")#candidate|5532|(4, 3, 8)|const|uint64
bop_5533 = relay.greater_equal(const_5531.astype('bool'), relay.reshape(const_5532.astype('bool'), relay.shape_of(const_5531))) # shape=(4, 3, 8)
output = bop_5533
output2 = bop_5533
func_5541 = relay.Function([], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5542 = func_5541_call()
output = call_5542
func_5543 = relay.Function([], output)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5547 = relay.var("var_5547", dtype = "float32", shape = (6, 10, 13))#candidate|5547|(6, 10, 13)|var|float32
uop_5548 = relay.sigmoid(var_5547.astype('float32')) # shape=(6, 10, 13)
const_5556 = relay.const([[[-4.288592,-6.451242,-5.947975,-9.840789,-9.575426,-4.853994,-9.886890,-1.813532,0.504832,-3.305402,1.413080,7.322750,-9.849730],[-1.842448,6.840297,-5.968996,0.447117,2.574022,0.918618,-5.935131,9.721595,-2.930226,-6.189795,6.759826,-0.876606,-3.758714],[-5.432025,-3.805160,8.144896,-1.162799,4.595236,-0.648553,0.883911,-8.219152,8.362292,-0.182760,1.774450,-9.656121,1.182760],[-6.127596,7.722094,0.770937,-9.797469,-2.174787,0.866677,-0.782786,4.702334,8.373182,2.510788,-9.522942,-2.560556,8.182920],[0.549327,-6.112485,4.889990,-5.823343,3.681588,8.467704,-4.323389,-4.108831,-2.188308,-1.732452,0.227403,-9.656084,2.949854],[-1.222487,1.188020,-3.700399,9.637656,0.122807,6.034571,-0.411657,2.481674,-5.826588,3.800704,1.456506,6.790634,-4.577542],[-4.863070,9.081009,2.741904,4.931938,8.022641,3.125449,-3.649717,-5.187040,2.959254,6.801406,-2.286843,-6.424119,-3.500998],[7.919711,0.531626,-5.028007,-8.056016,1.468364,7.288918,-7.847570,-4.211454,-1.568876,-0.019711,-5.070860,4.038522,-4.599032],[8.804612,5.954005,9.174021,-2.952820,-7.391682,-0.950010,-9.791977,-0.001720,-2.815677,9.158462,4.454543,-8.924711,-2.350762],[7.766178,-6.834365,7.053153,-1.108991,5.986204,9.725428,-3.033647,-4.904047,-5.438390,-8.849812,2.614361,1.102971,-4.680828]],[[-9.732291,-2.566875,5.464790,-1.557760,3.340075,-1.363610,-9.821191,8.434104,0.240426,-8.156944,-9.635374,-8.545073,8.916875],[-9.733225,-7.794667,1.875129,2.723712,6.942315,4.478507,-1.117376,6.069356,-4.284844,-2.274686,4.658136,2.941383,8.380528],[-7.101462,9.587462,9.187388,-9.382870,-6.134067,-2.770106,0.793445,-9.881247,9.857091,-7.557914,8.400448,3.836785,-0.977173],[0.452788,-5.409319,-5.373201,5.413212,-8.947627,8.720941,-2.703124,9.431292,6.143177,6.962015,2.280111,-9.588500,2.495075],[0.477157,3.830698,-2.778992,9.146745,9.743863,7.772652,0.094712,-6.613253,2.420651,-8.727237,8.884352,8.569931,-5.135269],[-6.755677,-1.384761,-8.050651,-6.290305,-4.886225,4.290521,1.970755,4.337658,7.645668,-4.929866,4.880165,-9.166952,-0.965067],[9.855796,-2.431889,8.725530,-6.240018,8.287369,3.733583,-3.350103,-1.514081,2.572290,-3.101818,-7.887674,-5.653249,3.679022],[-9.293379,9.550178,-5.275268,5.098281,-1.301104,8.972772,-5.478982,-3.595091,-6.012746,1.282850,-3.216145,-5.708488,5.749759],[-8.272601,2.452358,3.403473,1.766540,7.623605,3.308901,7.982452,5.873333,-8.614151,1.588659,8.970363,8.024010,-3.014882],[4.190594,3.252766,5.010610,-6.834114,2.049008,3.630421,6.177471,-7.575620,8.210953,-0.361293,-9.964447,-6.198230,5.222666]],[[7.332561,0.503037,-9.661203,-9.684523,4.091618,8.678423,8.178204,-1.709107,-0.938933,7.911847,-7.142838,-4.510754,0.071336],[-2.911999,-5.616904,6.686139,-9.925895,1.899863,0.804509,-8.052942,5.487029,7.813025,1.635058,4.933272,5.521148,-5.243727],[8.974358,-6.996016,-3.228628,7.170964,4.804973,-8.500541,9.604384,-7.677431,-7.153716,4.105187,2.014373,-2.260271,-6.835682],[-5.508477,-1.549606,-9.992106,1.246480,-7.495497,7.656078,-2.759506,-9.415834,-3.531589,-4.479659,-6.749939,-9.753448,-8.045202],[-8.608348,-5.419481,1.825201,-3.413907,6.974792,4.201315,-4.498183,-0.390181,4.505705,-6.408949,-8.452574,4.922935,1.380955],[6.993467,-2.361769,9.892720,-3.475969,9.523226,-8.698763,2.659708,-1.892003,-0.417936,-4.788837,-0.213861,1.694450,0.758383],[-3.038094,-1.369643,-9.730991,4.646739,-6.536541,-7.742869,-2.075621,-2.015200,9.122201,-3.839875,-9.672836,-2.151178,-2.885203],[7.420127,1.760286,8.044117,3.575659,-0.220924,3.254603,-4.030803,-6.889186,-6.874144,5.162650,-4.098050,-9.500518,-1.468403],[1.199338,8.526471,-9.312761,-4.957737,8.382908,3.560000,2.103635,-1.600524,5.795511,-3.775780,5.192138,-1.491723,3.518231],[-5.105244,5.182318,6.864819,3.544770,-2.488778,8.481759,-7.197146,-1.787251,3.819380,6.697170,-9.039972,4.407689,-1.722467]],[[3.968331,2.736033,9.368733,-3.135121,-9.304030,-3.853462,-7.451530,0.115187,2.696284,-3.995803,0.875197,1.164561,-8.681425],[7.086142,3.292072,-0.329683,-6.283184,9.695964,6.950010,8.279310,4.756975,-3.497100,-3.951661,5.157493,1.276056,-4.205570],[-2.551948,1.717448,4.408452,-4.115325,-4.681475,-3.742663,-6.815900,4.231394,9.809572,8.781222,-6.878602,0.083576,-2.749660],[-9.700175,-1.715039,-9.122873,-1.472402,2.238819,2.728225,-2.104862,1.796524,-2.980739,9.171156,3.432742,-6.572915,4.509118],[-6.635911,-2.704520,-0.049726,-6.384488,8.530299,0.497709,-1.658189,8.980286,-0.759905,-2.069131,-0.997331,1.704299,-4.882085],[8.209627,2.935314,2.727891,2.681362,-1.157702,-3.556309,-8.337690,-0.133138,9.175211,4.545221,-6.876231,7.009729,8.206894],[8.264855,6.162729,4.050672,0.704684,4.710522,7.136416,-7.070032,-5.683105,-9.511714,-0.905459,-2.767087,-0.332950,-1.714203],[2.835536,2.247845,-3.892080,5.957252,-7.674434,-3.435695,-1.454577,-1.193616,-0.693530,1.371588,5.054764,5.010100,-2.302968],[8.854330,2.036569,6.196001,0.409215,5.611196,-2.128224,1.632350,-3.032197,-1.838661,-6.756198,-5.170267,5.239960,7.644440],[7.485491,-2.618768,1.320640,-0.068953,4.121929,7.772777,-4.640830,-9.499243,-2.479102,0.045525,3.019961,6.463533,-3.337521]],[[-6.017326,1.644380,-3.722811,5.279340,7.016751,6.362563,1.832054,6.940712,3.948003,-7.341442,-1.528120,-2.834138,5.283723],[9.251225,1.770219,-0.529179,9.536388,5.404468,-5.354207,-1.473215,5.997424,-4.161478,3.951217,-6.227580,3.689211,-3.256896],[6.537669,-2.828257,8.480471,3.414756,0.893091,-6.835204,7.455090,2.607874,-2.351388,9.507828,5.670765,9.413350,-0.120137],[0.753789,-0.201586,4.145073,-0.412445,-3.889100,-8.303992,-5.431915,0.574957,-0.850250,2.589131,-9.302426,-9.766747,3.641237],[0.953206,-7.737062,-4.237929,-9.000196,2.698142,-2.135192,2.899977,7.501200,-7.728285,6.161737,1.406604,1.051098,2.747283],[-5.315798,2.525769,9.628401,-0.689067,-9.579099,-3.581764,4.282833,7.342864,2.075603,-6.617058,-9.477487,0.499657,-3.808686],[9.548362,4.068574,-0.178727,-5.249990,8.134313,-7.141685,4.022256,5.157486,3.879886,-0.119595,-5.190092,3.092956,-2.083564],[-8.331497,-6.872221,-1.547729,-3.663306,-7.920848,-0.273666,-7.342386,1.126870,1.264566,-6.729319,-0.594984,-5.829858,-7.583574],[-2.975229,4.862252,0.028781,-8.141216,6.931181,2.572306,-4.557121,-9.276157,2.515589,0.704933,6.438089,0.568048,4.011463],[-4.396763,-1.445502,-0.070592,-3.596344,-4.135073,6.577219,2.563060,9.567089,-1.544574,5.129336,-7.781338,-7.184429,5.216247]],[[4.022765,9.869734,-6.426323,-4.678127,-6.600540,3.876639,-7.647890,-0.837319,1.693153,-1.384030,-7.025120,-2.659147,4.443190],[-4.997945,-6.338809,-3.010815,5.028909,-0.030514,7.788587,-7.550799,-5.027934,-3.612170,1.890347,-1.537901,8.696309,-4.301667],[-7.150302,6.741241,0.767211,4.713776,8.022937,0.913340,4.480541,-4.156350,-8.994585,-0.495207,-9.069111,-2.164490,2.379592],[-7.781883,8.085309,-9.532500,-3.195736,-1.272598,-7.613829,2.828768,4.348171,-5.542182,2.685251,5.993292,6.205820,-3.879221],[-3.361570,-8.936024,9.783832,-3.453328,4.367490,-8.607856,-1.543845,7.914122,-9.580632,-3.504255,-0.522981,-6.408964,1.628806],[5.200049,8.949250,0.467271,-1.443612,7.503793,-1.275251,9.729425,3.533754,0.806096,-6.380669,-1.140584,-5.114687,-1.749344],[1.123784,-0.805304,-3.015800,5.707395,7.559289,1.522923,-8.076506,2.864400,5.790707,-6.541582,6.426457,-6.443145,5.128295],[-9.194626,-0.292312,-6.613602,-4.581851,-4.155817,-6.091902,-9.660513,-2.466270,-8.622688,8.688212,-7.803462,-8.372545,3.273403],[-6.588170,2.090407,-0.414705,2.235384,-8.428335,-3.286358,-7.091183,6.658088,-8.100478,-1.465428,0.689282,-2.570733,1.725722],[1.975208,6.786181,1.441461,2.097924,5.802042,-7.049842,-8.701821,-8.776414,5.420101,6.297036,-3.808026,8.974665,4.001792]]], dtype = "float32")#candidate|5556|(6, 10, 13)|const|float32
bop_5557 = relay.greater_equal(uop_5548.astype('bool'), relay.reshape(const_5556.astype('bool'), relay.shape_of(uop_5548))) # shape=(6, 10, 13)
bop_5560 = relay.maximum(uop_5548.astype('int32'), relay.reshape(const_5556.astype('int32'), relay.shape_of(uop_5548))) # shape=(6, 10, 13)
uop_5566 = relay.acos(uop_5548.astype('float32')) # shape=(6, 10, 13)
bop_5570 = relay.greater(uop_5548.astype('bool'), relay.reshape(bop_5557.astype('bool'), relay.shape_of(uop_5548))) # shape=(6, 10, 13)
func_2456_call = mod.get_global_var('func_2456')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_5578 = relay.var("var_5578", dtype = "uint32", shape = (3840,))#candidate|5578|(3840,)|var|uint32
call_5577 = relay.TupleGetItem(func_2456_call(relay.reshape(var_5578.astype('uint32'), [15, 16, 16])), 0)
call_5579 = relay.TupleGetItem(func_2459_call(relay.reshape(var_5578.astype('uint32'), [15, 16, 16])), 0)
func_1884_call = mod.get_global_var('func_1884')
func_1888_call = mutated_mod.get_global_var('func_1888')
var_5581 = relay.var("var_5581", dtype = "uint64", shape = (378, 1))#candidate|5581|(378, 1)|var|uint64
var_5582 = relay.var("var_5582", dtype = "int8", shape = (20, 72))#candidate|5582|(20, 72)|var|int8
call_5580 = relay.TupleGetItem(func_1884_call(relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5582.astype('int8'), [1440,]), ), 4)
call_5583 = relay.TupleGetItem(func_1888_call(relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5582.astype('int8'), [1440,]), ), 4)
uop_5592 = relay.acosh(uop_5566.astype('float64')) # shape=(6, 10, 13)
func_1884_call = mod.get_global_var('func_1884')
func_1888_call = mutated_mod.get_global_var('func_1888')
call_5609 = relay.TupleGetItem(func_1884_call(relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5582.astype('int8'), [1440,]), ), 5)
call_5610 = relay.TupleGetItem(func_1888_call(relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5581.astype('uint64'), [14, 3, 9]), relay.reshape(var_5582.astype('int8'), [1440,]), ), 5)
func_3713_call = mod.get_global_var('func_3713')
func_3715_call = mutated_mod.get_global_var('func_3715')
const_5613 = relay.const([-5,1,1,-3,-3,-6,-9,5,5,1,7,1,-7,10,-6,-2,-9,-3,8,-7,-2,-2,-9,10,10,10,-1,3,7,-9,-4,2,-6,8,-2,9,-8,-6,-7,3,-8,-5,5,10,1,4,10,1,-4,2,-3,-9,1,10,-2,7,7,10,10,-5,-7,8,-5,-5,-7,-5,7,3,-1,-8,-5,4,7,-3,4,-9,7,10,8,10], dtype = "uint64")#candidate|5613|(80,)|const|uint64
call_5612 = relay.TupleGetItem(func_3713_call(relay.reshape(const_5613.astype('uint64'), [80,])), 2)
call_5614 = relay.TupleGetItem(func_3715_call(relay.reshape(const_5613.astype('uint64'), [80,])), 2)
func_170_call = mod.get_global_var('func_170')
func_172_call = mutated_mod.get_global_var('func_172')
var_5618 = relay.var("var_5618", dtype = "float64", shape = (1800,))#candidate|5618|(1800,)|var|float64
call_5617 = relay.TupleGetItem(func_170_call(relay.reshape(var_5618.astype('float64'), [15, 15, 8])), 0)
call_5619 = relay.TupleGetItem(func_172_call(relay.reshape(var_5618.astype('float64'), [15, 15, 8])), 0)
output = relay.Tuple([bop_5560,bop_5570,call_5577,var_5578,call_5580,var_5581,var_5582,uop_5592,call_5609,call_5612,const_5613,call_5617,var_5618,])
output2 = relay.Tuple([bop_5560,bop_5570,call_5579,var_5578,call_5583,var_5581,var_5582,uop_5592,call_5610,call_5614,const_5613,call_5619,var_5618,])
func_5627 = relay.Function([var_5547,var_5578,var_5581,var_5582,var_5618,], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
var_5628 = relay.var("var_5628", dtype = "float32", shape = (6, 10, 13))#candidate|5628|(6, 10, 13)|var|float32
var_5629 = relay.var("var_5629", dtype = "uint32", shape = (3840,))#candidate|5629|(3840,)|var|uint32
var_5630 = relay.var("var_5630", dtype = "uint64", shape = (378, 1))#candidate|5630|(378, 1)|var|uint64
var_5631 = relay.var("var_5631", dtype = "int8", shape = (20, 72))#candidate|5631|(20, 72)|var|int8
var_5632 = relay.var("var_5632", dtype = "float64", shape = (1800,))#candidate|5632|(1800,)|var|float64
output = func_5627(var_5628,var_5629,var_5630,var_5631,var_5632,)
func_5633 = relay.Function([var_5628,var_5629,var_5630,var_5631,var_5632,], output)
mutated_mod['func_5633'] = func_5633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5650 = func_5541_call()
call_5651 = func_5541_call()
func_4431_call = mod.get_global_var('func_4431')
func_4438_call = mutated_mod.get_global_var('func_4438')
const_5672 = relay.const(4, dtype = "int8")#candidate|5672|()|const|int8
var_5673 = relay.var("var_5673", dtype = "int8", shape = (24,))#candidate|5673|(24,)|var|int8
var_5674 = relay.var("var_5674", dtype = "uint32", shape = (2940,))#candidate|5674|(2940,)|var|uint32
const_5675 = relay.const([-3,10,-1,-5,-9,2,-8,7,6,-3,3,-8,-5,-3,-6,-10,1,-2,-5,7,-3,-5,10,10,5,10,5,6,-8,8,7,-4,10,-1,3,8,-9,-1,-4,-6,2,-8,3,8,-4,7,6,10,-5,10,2,-6,-2,9,-5,6,8,6,-7,5,1,-3,-3,-3,-7,-8,3,-10,-10,3,-4,3,-3,5,5,3,2,-3,10,-5,10,-6,7,10,-4,1,9,10,-4,4,-7,-5,5,-5,-5,4,4,-10,7,-6,-10,9,-2,-3,-7,8,-6,-2,3,5,-6,5,10,-10,-5,8,-3,7,9,4,9,-8,6,-5,7,-1,1,-4,-3,-8,9,4,-4,-9,-10,-8,8,-5,6,-7,2,-8,4,-5,-6,-5,-10,9,7,6,-5,-8,2,7,-3,-3,-2,1,-2,-3,1,3,7,5,2,-1,8,9,-3,10,-1,-3,3,-9,10,3,-1,3,10,2,-9,-10,4,-9,-6,-3,9,1,9,6,5,-1,8,4,1,-2,9,-1,1,-2,-8,-5,-2,-10,-8,2,-8,10,8,5,-8,-2,-1,1,-3,-1,7,-8,4,-10,6,6,5,-1,-9,-2,7,5,-7,4,-9,-10,2,-5], dtype = "int8")#candidate|5675|(234,)|const|int8
var_5676 = relay.var("var_5676", dtype = "float64", shape = (1, 546))#candidate|5676|(1, 546)|var|float64
call_5671 = relay.TupleGetItem(func_4431_call(relay.reshape(const_5672.astype('int8'), []), relay.reshape(var_5673.astype('int8'), [1, 3, 8]), relay.reshape(var_5674.astype('uint32'), [30, 98]), relay.reshape(const_5675.astype('int8'), [234,]), relay.reshape(var_5676.astype('float64'), [91, 6]), ), 4)
call_5677 = relay.TupleGetItem(func_4438_call(relay.reshape(const_5672.astype('int8'), []), relay.reshape(var_5673.astype('int8'), [1, 3, 8]), relay.reshape(var_5674.astype('uint32'), [30, 98]), relay.reshape(const_5675.astype('int8'), [234,]), relay.reshape(var_5676.astype('float64'), [91, 6]), ), 4)
output = relay.Tuple([call_5650,call_5671,const_5672,var_5673,var_5674,const_5675,var_5676,])
output2 = relay.Tuple([call_5651,call_5677,const_5672,var_5673,var_5674,const_5675,var_5676,])
func_5678 = relay.Function([var_5673,var_5674,var_5676,], output)
mod['func_5678'] = func_5678
mod = relay.transform.InferType()(mod)
mutated_mod['func_5678'] = func_5678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5678_call = mutated_mod.get_global_var('func_5678')
var_5680 = relay.var("var_5680", dtype = "int8", shape = (24,))#candidate|5680|(24,)|var|int8
var_5681 = relay.var("var_5681", dtype = "uint32", shape = (2940,))#candidate|5681|(2940,)|var|uint32
var_5682 = relay.var("var_5682", dtype = "float64", shape = (1, 546))#candidate|5682|(1, 546)|var|float64
call_5679 = func_5678_call(var_5680,var_5681,var_5682,)
output = call_5679
func_5683 = relay.Function([var_5680,var_5681,var_5682,], output)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5687 = func_5541_call()
call_5688 = func_5541_call()
output = call_5687
output2 = call_5688
func_5694 = relay.Function([], output)
mod['func_5694'] = func_5694
mod = relay.transform.InferType()(mod)
mutated_mod['func_5694'] = func_5694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mutated_mod.get_global_var('func_5694')
call_5695 = func_5694_call()
output = call_5695
func_5696 = relay.Function([], output)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_5744 = func_5541_call()
call_5745 = func_5541_call()
output = call_5744
output2 = call_5745
func_5746 = relay.Function([], output)
mod['func_5746'] = func_5746
mod = relay.transform.InferType()(mod)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mutated_mod.get_global_var('func_5746')
call_5747 = func_5746_call()
output = call_5747
func_5748 = relay.Function([], output)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mod.get_global_var('func_5746')
func_5748_call = mutated_mod.get_global_var('func_5748')
call_5800 = func_5746_call()
call_5801 = func_5746_call()
output = relay.Tuple([call_5800,])
output2 = relay.Tuple([call_5801,])
func_5806 = relay.Function([], output)
mod['func_5806'] = func_5806
mod = relay.transform.InferType()(mod)
output = func_5806()
func_5807 = relay.Function([], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mod.get_global_var('func_5746')
func_5748_call = mutated_mod.get_global_var('func_5748')
call_5808 = func_5746_call()
call_5809 = func_5746_call()
uop_5812 = relay.exp(call_5808.astype('float32')) # shape=(4, 3, 8)
uop_5814 = relay.exp(call_5809.astype('float32')) # shape=(4, 3, 8)
uop_5830 = relay.sinh(call_5808.astype('float32')) # shape=(4, 3, 8)
uop_5832 = relay.sinh(call_5809.astype('float32')) # shape=(4, 3, 8)
uop_5835 = relay.log(uop_5830.astype('float64')) # shape=(4, 3, 8)
uop_5837 = relay.log(uop_5832.astype('float64')) # shape=(4, 3, 8)
func_2456_call = mod.get_global_var('func_2456')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_5839 = relay.var("var_5839", dtype = "uint32", shape = (3840,))#candidate|5839|(3840,)|var|uint32
call_5838 = relay.TupleGetItem(func_2456_call(relay.reshape(var_5839.astype('uint32'), [15, 16, 16])), 0)
call_5840 = relay.TupleGetItem(func_2459_call(relay.reshape(var_5839.astype('uint32'), [15, 16, 16])), 0)
output = relay.Tuple([uop_5812,uop_5835,call_5838,var_5839,])
output2 = relay.Tuple([uop_5814,uop_5837,call_5840,var_5839,])
func_5856 = relay.Function([var_5839,], output)
mod['func_5856'] = func_5856
mod = relay.transform.InferType()(mod)
var_5857 = relay.var("var_5857", dtype = "uint32", shape = (3840,))#candidate|5857|(3840,)|var|uint32
output = func_5856(var_5857)
func_5858 = relay.Function([var_5857], output)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5746_call = mod.get_global_var('func_5746')
func_5748_call = mutated_mod.get_global_var('func_5748')
call_5907 = func_5746_call()
call_5908 = func_5746_call()
func_170_call = mod.get_global_var('func_170')
func_172_call = mutated_mod.get_global_var('func_172')
var_5914 = relay.var("var_5914", dtype = "float64", shape = (90, 20))#candidate|5914|(90, 20)|var|float64
call_5913 = relay.TupleGetItem(func_170_call(relay.reshape(var_5914.astype('float64'), [15, 15, 8])), 0)
call_5915 = relay.TupleGetItem(func_172_call(relay.reshape(var_5914.astype('float64'), [15, 15, 8])), 0)
func_4431_call = mod.get_global_var('func_4431')
func_4438_call = mutated_mod.get_global_var('func_4438')
var_5930 = relay.var("var_5930", dtype = "int8", shape = ())#candidate|5930|()|var|int8
const_5931 = relay.const([[5,-2,6,-4,-3,-7,6,10,-2,4,-4,6],[-5,-10,5,1,-7,8,9,2,-2,-6,-9,-4]], dtype = "int8")#candidate|5931|(2, 12)|const|int8
const_5932 = relay.const([4,-1,7,-1,5,7,8,9,9,-8,1,-10,-2,5,-9,-4,-8,-5,-10,-5,4,1,6,-8,9,6,9,8,4,-7,-4,5,-7,10,-7,-4,-7,-3,-6,-9,-10,-6,-10,8,10,8,8,9,-6,-3,-3,5,4,2,10,7,-6,-9,-9,-4,-4,-4,-8,6,-9,-6,-7,-2,-1,-3,6,3,2,10,-8,-10,-7,-5,-5,-6,1,9,-4,-3,3,-6,-5,-3,-8,10,-7,10,-7,8,5,8,-7,8,-6,-6,6,-2,-10,9,7,-6,4,-10,-1,2,-6,2,7,-5,-10,6,3,-8,-10,-1,-8,5,2,-10,-6,9,-5,5,2,7,-5,9,-8,10,-3,6,1,3,9,-6,-8,-6,7,-6,-5,2,-5,-7,5,-2,-2,10,-2,-7,-6,5,-10,-8,-4,8,7,-1,-9,7,8,2,10,1,5,-2,-3,-7,-9,9,-1,-5,7,3,4,1,1,-2,-9,4,3,7,4,8,-10,7,6,-10,-9,10,-4,7,-8,8,-4,-9,10,-4,9,8,-10,1,-8,-8,5,-4,1,-6,-2,4,9,-6,1,-1,-1,10,-5,-7,3,2,5,10,-9,7,-3,1,6,8,7,-8,10,10,-10,-8,4,4,10,-9,10,-2,7,-4,-1,10,6,6,9,-1,5,-5,-3,-2,1,-2,7,6,1,7,-2,2,7,6,-6,-7,8,1,9,6,5,4,6,-6,-8,9,-1,10,8,6,-2,-4,4,-6,1,4,-10,9,-6,2,-7,-8,1,8,3,-3,4,-7,-5,3,3,-3,6,10,7,8,3,4,-3,1,-4,-10,4,-1,2,-6,-9,-9,-10,-7,-1,5,-2,-7,-1,10,3,-8,-1,5,-10,8,1,-6,-8,-10,-9,-4,5,-7,-8,-4,9,9,2,3,6,-3,9,-7,-4,8,3,-6,1,-7,-10,-3,4,1,7,-7,-5,1,-2,1,-7,-3,10,1,5,-10,8,6,-5,-7,10,7,-6,9,7,8,-8,-4,-10,-10,2,10,3,-9,2,3,10,5,-6,-6,4,-7,-2,-3,-8,7,-4,10,-2,8,-5,-4,-8,-2,5,7,3,4,-7,-10,-1,-4,4,2,3,10,8,-4,6,1,6,-1,-2,-4,3,3,-1,-8,-1,2,10,-1,-7,7,10,3,7,-5,-8,-7,3,4,7,8,2,-1,2,-3,6,2,-1,4,-8,7,9,6,6,-5,-10,2,-3,-6,-2,3,10,-5,-10,-9,1,-6,-1,-2,2,1,-10,-6,5,-7,-1,-6,8,4,-2,8,-8,-4,7,-8,-3,3,-2,-6,10,-4,6,4,3,3,10,9,-6,-6,8,3,3,-3,-4,-3,-6,7,-7,7,-8,5,2,5,6,-2,-5,4,-3,-4,9,1,-4,-7,-9,1,5,-5,-2,2,4,-2,10,-9,-4,10,-2,-1,1,-9,2,-10,-8,1,-7,-7,8,-10,-5,1,-3,5,4,-4,-3,5,-3,-2,2,-10,-8,-2,6,5,2,-1,7,-2,1,7,-7,9,9,-2,5,-2,8,-9,7,-4,-2,-3,2,-1,1,6,10,9,-9,2,2,-8,7,5,-1,-2,5,-3,3,1,-2,4,-4,-3,6,8,-9,-8,-4,-10,-5,10,-10,-8,-9,-6,6,2,7,-5,-1,10,-9,-6,-5,-10,1,-10,-4,-1,-7,-3,1,5,1,8,4,3,8,8,6,-2,9,7,10,6,6,-10,-7,4,4,-1,2,2,1,-5,-10,-5,1,-4,-1,8,-2,-4,-1,6,-2,4,8,6,-5,-10,10,-4,9,-9,10,8,6,-10,2,-4,2,-10,3,-4,9,-3,-1,-9,7,-3,-5,-1,-4,-10,9,-1,-2,-5,-1,5,-3,8,-9,6,-4,5,9,4,10,-8,-10,2,-3,8,6,-5,-4,-4,-9,9,9,-7,-1,-2,5,-10,2,-6,8,1,7,-4,-9,4,-1,3,6,-10,1,7,-3,-10,8,-2,-1,-10,-6,-9,-5,3,5,-5,8,-7,-7,-4,1,5,-1,8,9,10,4,-10,-2,2,1,-10,5,7,-4,-2,4,-6,6,6,-4,1,-6,7,-6,-7,8,-5,7,-5,-2,5,6,-2,7,-8,-4,9,1,-10,-6,-5,6,-7,3,-3,-9,-10,2,-9,-10,10,-7,-4,4,7,-2,-2,4,3,-3,2,-7,-9,6,7,-5,10,5,-2,1,-7,-4,3,-10,7,5,5,4,10,-4,-6,4,-2,-3,8,-6,8,3,9,-8,-7,8,4,8,1,-10,10,4,-5,-8,2,-9,5,-2,7,5,-4,10,4,-9,-9,-4,7,2,-7,-6,-6,9,-8,10,-2,1,-7,-1,8,-7,-3,7,9,1,-2,6,3,-1,-8,-6,5,4,8,-2,5,3,-10,-7,10,8,-6,-1,-2,10,5,-8,-3,4,-8,-8,-8,3,1,-9,-10,6,1,-5,-2,-3,-2,1,3,-9,-4,6,-7,-1,10,3,9,6,-7,-3,7,-9,-6,6,-6,2,1,-1,10,-1,4,-10,3,2,-8,-10,10,-6,10,10,9,5,2,2,-1,-4,-7,5,2,-2,4,-7,-1,-3,-7,8,-4,5,2,10,10,-6,8,-7,-3,-1,10,1,1,4,-8,-1,5,10,5,1,-6,2,-10,-6,-9,10,-5,1,-5,-3,7,-5,1,-2,-9,-2,9,3,-3,4,6,-1,5,8,-7,4,4,-8,9,9,-2,5,5,3,-6,9,-3,6,4,-9,-2,7,-2,-1,7,-9,3,10,-3,-5,2,-3,-6,-4,-1,-3,5,1,5,8,-1,10,-4,-1,5,-6,-2,3,-7,10,9,-3,1,2,5,7,1,-2,-8,-10,9,-2,-4,-10,-4,-1,4,-9,-9,3,3,1,-9,-8,6,-4,5,-7,-2,10,-9,-1,4,-10,-1,8,-6,9,-4,4,7,6,-3,1,-3,-3,3,-5,-2,-1,-9,6,-7,-1,-1,10,3,10,-10,3,-3,6,-10,4,-8,-4,3,10,-4,1,-6,-5,-9,-6,5,4,8,3,-3,-10,1,5,6,6,-8,7,-7,4,-5,-7,-2,10,3,7,-10,4,-1,-7,-8,-6,9,-10,-6,-4,-5,-3,4,-8,-7,-10,4,-8,4,-1,-8,9,-2,4,3,9,1,-6,5,1,-1,-7,-6,9,2,-4,-8,-10,2,-10,-3,3,-1,10,-3,8,-5,-8,-1,3,-8,6,2,8,-9,8,-7,10,8,-4,3,4,8,-9,8,4,2,1,7,7,8,-10,6,3,-9,6,10,10,-3,-6,-4,8,2,10,-1,-5,-4,-3,4,4,-2,5,-2,9,5,-8,-8,3,-6,-7,-1,3,7,4,2,5,10,-8,-7,6,4,9,10,10,-8,-10,-1,-4,9,-4,-8,6,10,-8,9,-7,10,5,-9,-4,3,-5,9,7,-7,-10,9,-3,-8,-4,-7,-1,8,-6,10,5,4,-2,-1,-10,9,5,5,-8,9,9,-4,2,6,-2,-8,4,9,6,4,-10,7,4,1,5,4,7,-4,-4,9,-1,-3,2,8,3,5,8,7,3,3,-2,-2,9,-2,-8,-8,-9,-1,-4,8,-4,3,4,-5,-1,-3,-9,4,10,-10,-6,-7,-9,5,-9,3,5,-7,-7,5,3,1,-2,-10,10,3,6,8,-10,1,5,5,1,8,-4,-7,1,-1,-4,7,2,-7,-10,6,-9,9,2,-5,-6,2,-6,-1,7,-1,-4,3,10,6,7,10,-8,2,-5,-2,2,2,-1,6,-6,8,-7,6,3,7,-4,9,-8,-2,10,5,-8,-9,-10,10,1,-6,9,4,-5,-5,8,1,-5,-10,-8,6,-1,-6,7,9,-4,-6,8,-8,-1,-2,-6,-8,5,-5,-2,-9,-5,6,-3,-2,1,-1,-10,-1,-1,-1,-7,6,-6,7,6,-2,2,-5,-2,-3,6,9,-2,-8,-7,-8,9,-8,-8,2,-10,-3,2,-9,-8,5,-4,-2,9,7,-9,10,-10,-3,-3,10,-1,6,-2,6,-5,6,7,8,-5,2,2,4,-2,8,-1,-7,-3,6,7,-7,-4,4,8,9,-8,9,-5,-10,9,-10,-8,5,-9,-9,4,1,-9,-1,-6,2,3,2,6,3,-3,6,-2,-5,3,-7,9,6,2,7,-10,-2,2,-1,7,4,8,1,2,-1,7,-1,-8,6,-6,10,4,1,3,4,9,-9,-7,-9,4,3,1,-2,3,-1,-3,-9,10,-2,-5,4,-2,10,-1,8,10,9,-9,10,-10,-3,9,-9,3,3,-8,1,-8,-1,10,6,-3,1,7,6,-2,10,2,-2,1,-2,-10,10,3,-1,-3,3,4,-9,-5,6,-3,-9,-6,-9,-6,-7,-1,-6,-10,-9,4,8,8,-8,-10,2,-3,-8,4,9,8,8,-4,-8,-3,-5,9,-4,-1,-1,7,8,-6,10,-6,10,4,7,-2,2,10,-2,-3,5,9,8,-9,7,-3,-5,-5,-4,3,-8,-4,10,-10,-4,-9,8,5,5,2,-1,-8,-3,1,3,-9,-1,-3,-7,-5,7,-10,-3,3,-10,9,-10,-8,-3,2,-3,7,4,-4,5,1,-5,-7,9,6,4,1,-6,9,-9,5,10,7,4,-6,-3,8,-10,-6,-6,-8,-10,4,-9,-5,-6,2,4,1,-1,6,-3,-1,1,2,10,8,1,5,-7,-10,-3,-8,-2,-7,-5,6,-7,-1,-4,6,4,-1,-7,7,-1,8,9,-2,-6,-5,-2,-9,10,9,-4,6,-10,3,7,5,4,3,3,6,6,2,-4,7,10,6,1,-2,-10,10,2,5,-1,3,6,3,3,-10,-6,-1,-2,-2,10,8,8,9,-3,8,-5,-8,-8,-4,6,-8,-10,-3,-7,-9,-1,-8,5,9,-4,-2,5,1,-2,-6,9,-3,2,-3,-4,-7,7,2,-5,-10,5,9,3,-3,4,-3,3,10,-5,8,5,-2,3,6,6,-6,-9,1,2,7,7,-9,-8,-8,1,-2,-3,1,-10,-1,-3,9,1,-4,-8,-1,2,5,-8,-5,-1,7,3,8,-7,4,-8,-3,-3,-6,-9,5,-6,3,3,4,7,6,1,5,-6,9,-2,-5,-1,-5,7,-2,-8,10,5,5,-7,-1,-6,-6,7,-6,-10,-3,3,1,-8,4,10,-9,-8,-4,-7,3,3,-6,7,-7,-5,5,-8,8,9,-6,-6,1,-1,-8,2,-2,1,3,-1,2,-3,-4,3,-9,-3,-1,-1,-4,-9,-1,-6,-6,-10,-4,1,9,-4,5,4,-4,-10,-8,9,-3,6,1,-6,8,6,-9,9,1,8,5,-9,-8,3,-9,-10,3,6,-10,1,-8,-10,-3,2,4,-9,3,7,-6,7,-3,2,5,-9,10,-2,4,5,3,-1,-9,-8,-8,-4,-5,4,10,-5,-3,9,-2,-2,-3,6,-4,4,7,6,7,2,10,2,-3,4,-9,9,-6,-8,8,4,2,7,-10,-7,-2,-8,6,-4,-7,4,3,-7,-2,7,-10,-4,-1,-2,-4,7,-7,-10,-7,3,-3,1,-8,-5,5,2,5,8,5,-6,-8,-4,-9,1,9,9,-10,-7,9,1,-6,-9,-9,6,8,4,4,-2,-2,-1,6,-2,10,-5,5,-5,10,-1,-3,-4,10,9,-6,9,4,9,-9,8,-4,10,-8,-10,1,9,10,-6,-1,-6,-6,7,6,1,10,-7,-2,-2,4,-1,5,8,3,-8,7,-3,1,-2,-7,2,-2,-10,8,5,5,-4,5,-8,5,5,1,4,8,-9,-1,-2,2,7,7,-9,-7,-5,-6,-3,8,-3,-5,-1,3,2,2,6,8,-3,3,-7,6,5,4,3,5,1,10,-7,-3,-6,-2,1,4,-5,6,9,4,4,-1,10,-10,10,-4,-5,-3,-3,3,-5,8,6,-3,-7,-1,5,-7,-10,7,-9,6,-9,4,3,6,4,9,-9,7,1,5,1,-10,-1,2,7,3,-6,8,2,-1,-9,8,-5,1,4,2,10,-8,-1,2,-10,-6,1,8,-9,2,1,7,7,-2,6,8,-5,8,9,-4,4,-7,-3,10,6,-1,2,-1,-5,-9,6,-8,4,-7,-7,-3,-8,-8,5,-4,-10,8,-4,-2,-3,-2,10,9,8,-8,4,8,2,-6,3,-10,6,6,8,-1,-1,-9,2,7,-4,7,-8,2,10,-9,-10,8,8,6,-4,-6,-9,-7,2,3,1,-4,4,1,5,-8,2,1,-10,5,-3,10,-5,-2,-3,3,-4,4,-2,-1,8,2,-5,-9,9,10,4,-1,-9,4,-8,9,-3,-8,-10,1,-8,8,-5,10,-1,-3,2,-2,9,-6,-4,-6,8,3,3,-7,-9,6,-2,-10,-9,-7,-9,4,8,2,3,-10,-4,-10,-9,9,2,3,-4,-8,-6,-3,-6,2,5,8,3,-2,3,3,-8,9,10,3,-5,-4,-6,3,-4,-7,-8,-10,3,8,-3,-7,3,-1,7,4,7,-10,-7,-6,-9,-9,-6,-2,10,-6,-8,3,8,-4,-8,-7,-8,-7,-4,-5,5,-4,4,1,-3,-6,9,-4,-3,-4,-9,-5,1,-4,-6,10,5,-2,9,3,-2,6,-10,8,1,4,4,8,3,10,1,1,-5,4,-8,-7,8,10,6,-1,2,8,5,3,8,-7,3,-4,3,-2,5,-9,-5,-10,1,-9,-7,10,4,1,-7,2,6,-8,-4,-10,-4,-1,-10,-1,2,-3,-8,2,6,-4,2,1,-10,7,-3,-2,-5,-5,3,3,5,-8,-9,-5,-4,6,-2,3,9,-7,-8,7,-1,-10,8,4,9,8,-2,3,-1,1,-7,7,-8,-6,3,-2,8,1,-3,-1,6,-2,-4,6,3,1,4,6,2,8,7,-2,-10,-3,9,-7,7,7,4,7,1,-7,-5,8,-7,5,-6,1,1,1,9,-8,9,8,-9,3,2,-6,5,4,-10,-7,7,2,-3,-9,3,9,-1,7,1,-9,-10,-9,8,-6,-2,7,-1,7,-4,-6,-4,-8,1,4,-3,-4,9,-7,-7,-9,8,-10,5,-4,-6,5,-5,-6,8,8,-4,-6,4,-3,-8,1,6,-6,-1,-9,1,6,7,-4,-3,-8,-5,-1,10,9,6,-6,1,5,-4,-8,10,-3,-7,4,7,6,-8,10,-1,-8,1,1,-7,6,3,-6,-10,-10,4,-7,-5,5,-10,-1,-8,-9,-2,4,9,9,-6,2,4,4,-5,-10,-2,4,-4,2,-4,2,3,5,6,3,9,-1,-7,-10,6,5,-9,-9,-3,-4,3,-5,1,-8,4,-2,-5,5,-8,6,-8,-1,1,-1,-2,-3,2,9,8,2,-9,4,-9,-7,7,-10,-6,4,-2,4,-10,9,5,-5,7,4,2,-9,-8,-10,2,1,-3,-7,-8,1,6,-7,-7,-5,-10,10,8,4,6,2,-4,-7,-8,3,3,-3,1,-1,4,7,-6,7,6,1,-5,-1,-8,7,-1,3,2,5,7,4,-6,5,-7,6,-6,-7,-2,2,-7,7,7,3,5,3,-8,3,-9,5,-3,-1,-10,9,-9,5,8,-5,1,4,-8,7,-7,9,1,4,-5,-4,-5,10,-4,9,6,-10,-2,10,-3,-7,9,8,9,3,-7,10,10,6,-6,9,-1,-6,3,-4,-7,7,-4,-6,-7,7,-6,5,-1,-3,8,-7,-10,1,-1,10,-5,-1,-3,1,6,3,-7,9,3,-2,-3,-9,2,-6,6,-2,-4,9,-2,7,-8], dtype = "uint32")#candidate|5932|(2940,)|const|uint32
const_5933 = relay.const([[-1,5,6,5,-7,-8],[2,-5,2,-2,-5,-9],[6,4,7,1,-1,-9],[4,-2,-8,1,-10,-9],[-4,-1,9,-4,5,3],[7,9,10,6,-1,-7],[7,-1,6,3,2,-1],[-3,7,4,-1,6,9],[-7,2,-3,7,8,-9],[9,-4,-6,-1,9,-7],[10,4,-6,-3,-9,-1],[3,2,-5,6,3,-4],[-5,5,4,7,-10,1],[-5,8,-9,-4,-6,-6],[9,6,1,8,6,-10],[-5,-6,7,10,-2,-5],[9,5,-8,-8,-4,7],[-4,-1,-10,1,-7,2],[-6,7,-3,1,4,7],[9,-8,-8,10,4,2],[-2,1,2,7,-6,-6],[-9,-10,2,-6,3,-6],[1,-2,-7,10,7,-3],[3,-7,-4,-9,-7,-5],[-6,-2,5,9,3,-2],[8,-4,-1,4,-4,-4],[-3,1,-2,2,5,9],[3,-5,-9,-9,-9,2],[7,-4,8,-1,-3,-4],[9,6,-10,-6,-3,9],[8,-9,-10,-6,10,10],[-2,-10,3,1,-9,-8],[2,-10,-4,6,-5,-10],[-9,-2,8,6,2,4],[-1,-9,-4,7,-2,-10],[6,-10,-3,7,-9,-9],[-2,-9,-5,4,-2,6],[2,3,-2,10,-8,-2],[3,3,10,-10,-8,-9]], dtype = "int8")#candidate|5933|(39, 6)|const|int8
var_5934 = relay.var("var_5934", dtype = "float64", shape = (546,))#candidate|5934|(546,)|var|float64
call_5929 = relay.TupleGetItem(func_4431_call(relay.reshape(var_5930.astype('int8'), []), relay.reshape(const_5931.astype('int8'), [1, 3, 8]), relay.reshape(const_5932.astype('uint32'), [30, 98]), relay.reshape(const_5933.astype('int8'), [234,]), relay.reshape(var_5934.astype('float64'), [91, 6]), ), 5)
call_5935 = relay.TupleGetItem(func_4438_call(relay.reshape(var_5930.astype('int8'), []), relay.reshape(const_5931.astype('int8'), [1, 3, 8]), relay.reshape(const_5932.astype('uint32'), [30, 98]), relay.reshape(const_5933.astype('int8'), [234,]), relay.reshape(var_5934.astype('float64'), [91, 6]), ), 5)
output = relay.Tuple([call_5907,call_5913,var_5914,call_5929,var_5930,const_5931,const_5932,const_5933,var_5934,])
output2 = relay.Tuple([call_5908,call_5915,var_5914,call_5935,var_5930,const_5931,const_5932,const_5933,var_5934,])
func_5950 = relay.Function([var_5914,var_5930,var_5934,], output)
mod['func_5950'] = func_5950
mod = relay.transform.InferType()(mod)
mutated_mod['func_5950'] = func_5950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5950_call = mutated_mod.get_global_var('func_5950')
var_5952 = relay.var("var_5952", dtype = "float64", shape = (90, 20))#candidate|5952|(90, 20)|var|float64
var_5953 = relay.var("var_5953", dtype = "int8", shape = ())#candidate|5953|()|var|int8
var_5954 = relay.var("var_5954", dtype = "float64", shape = (546,))#candidate|5954|(546,)|var|float64
call_5951 = func_5950_call(var_5952,var_5953,var_5954,)
output = call_5951
func_5955 = relay.Function([var_5952,var_5953,var_5954,], output)
mutated_mod['func_5955'] = func_5955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_5957 = func_5694_call()
call_5958 = func_5694_call()
func_4018_call = mod.get_global_var('func_4018')
func_4022_call = mutated_mod.get_global_var('func_4022')
var_5963 = relay.var("var_5963", dtype = "int16", shape = (810,))#candidate|5963|(810,)|var|int16
var_5964 = relay.var("var_5964", dtype = "uint32", shape = (3840,))#candidate|5964|(3840,)|var|uint32
call_5962 = relay.TupleGetItem(func_4018_call(relay.reshape(var_5963.astype('int16'), [810,]), relay.reshape(var_5964.astype('uint32'), [3840,]), ), 3)
call_5965 = relay.TupleGetItem(func_4022_call(relay.reshape(var_5963.astype('int16'), [810,]), relay.reshape(var_5964.astype('uint32'), [3840,]), ), 3)
bop_5968 = relay.bitwise_or(var_5964.astype('int16'), relay.reshape(call_5962.astype('int16'), relay.shape_of(var_5964))) # shape=(3840,)
bop_5971 = relay.bitwise_or(var_5964.astype('int16'), relay.reshape(call_5965.astype('int16'), relay.shape_of(var_5964))) # shape=(3840,)
func_5856_call = mod.get_global_var('func_5856')
func_5858_call = mutated_mod.get_global_var('func_5858')
call_5972 = relay.TupleGetItem(func_5856_call(relay.reshape(bop_5968.astype('uint32'), [3840,])), 0)
call_5973 = relay.TupleGetItem(func_5858_call(relay.reshape(bop_5968.astype('uint32'), [3840,])), 0)
func_4903_call = mod.get_global_var('func_4903')
func_4907_call = mutated_mod.get_global_var('func_4907')
const_5980 = relay.const([3.908065,-3.121748,-1.895939,-9.460410,-8.394019,3.160332,3.793212,-1.056035,-5.040417,3.107454,3.110301,-5.889226,-6.898531,4.145700,7.628204,8.248104,-9.123733,0.820959,-6.145385,-4.833620,-5.731843,-2.817904,-9.088138,6.700212,-4.627061,-4.873974,-8.344208,9.848881,-2.987943,-7.192112,-9.522942,7.559749,-4.448656,2.800574,-8.755090,5.040906,1.920163,-7.043003,-3.237808,-3.747509,-7.520845,-4.219877,-4.347552,-4.228270,-7.706856,-3.824009,-3.065697,3.569701,-2.091891,-3.623745,-1.822525,-8.627310,8.950489,-9.140311,-5.786867,-6.880558,6.690003,6.150643,-3.183691,9.124377,4.506898,-0.636720,9.280250,-5.281664,-9.254601,-0.262354,-8.660444,8.596139,4.253741,-9.905732,-7.119672,-2.912786,3.431723,8.170948,5.864555,2.711604,-1.273977,2.794556,6.393075,-0.844067,-5.421266,5.334850,1.783492,-9.315106,-9.158725,-2.871985,7.848039,-3.684031,5.335626,7.290969,-4.694815,8.982735,-8.348328,-8.882962,-8.039329,8.305437,2.634153,0.752851,6.955622,9.166097,-2.359492,2.176126,7.965701,3.927123,6.412324,6.705407,1.605238,4.192522,3.872348,7.311689,-7.765579,-6.904604,7.599932,-0.163494,2.976472,-2.446238,5.262964,-3.373403,-6.195799,6.597472,-8.856380,8.724358,6.160300,9.625515,6.011299,-5.307258,2.738062,6.254484,8.272904,-5.303409,-4.696792,-1.038143,-9.438131,-0.856735,-9.683199,-9.381164,-6.872249,-2.344605,-8.474940,2.103117,8.347003,1.007360,-0.632436,8.962396,-7.510213,9.522313,0.912859,5.287824,-8.354120,-8.287385,3.347827,7.710701,-6.335029,-4.407924,5.130610,-6.722240,6.520458,8.630423,2.313072,9.380059,-3.400993,-0.837121,4.131939,6.379292,3.173885,-2.767657,1.384009,-6.377657], dtype = "float32")#candidate|5980|(168,)|const|float32
var_5981 = relay.var("var_5981", dtype = "float32", shape = (396, 1))#candidate|5981|(396, 1)|var|float32
call_5979 = relay.TupleGetItem(func_4903_call(relay.reshape(const_5980.astype('float32'), [4, 6, 7]), relay.reshape(var_5981.astype('float32'), [396,]), ), 2)
call_5982 = relay.TupleGetItem(func_4907_call(relay.reshape(const_5980.astype('float32'), [4, 6, 7]), relay.reshape(var_5981.astype('float32'), [396,]), ), 2)
bop_5984 = relay.logical_and(call_5962.astype('bool'), relay.reshape(var_5964.astype('bool'), relay.shape_of(call_5962))) # shape=(15, 16, 16)
bop_5987 = relay.logical_and(call_5965.astype('bool'), relay.reshape(var_5964.astype('bool'), relay.shape_of(call_5965))) # shape=(15, 16, 16)
output = relay.Tuple([call_5957,var_5963,bop_5968,call_5972,call_5979,const_5980,var_5981,bop_5984,])
output2 = relay.Tuple([call_5958,var_5963,bop_5971,call_5973,call_5982,const_5980,var_5981,bop_5987,])
func_5995 = relay.Function([var_5963,var_5964,var_5981,], output)
mod['func_5995'] = func_5995
mod = relay.transform.InferType()(mod)
var_5996 = relay.var("var_5996", dtype = "int16", shape = (810,))#candidate|5996|(810,)|var|int16
var_5997 = relay.var("var_5997", dtype = "uint32", shape = (3840,))#candidate|5997|(3840,)|var|uint32
var_5998 = relay.var("var_5998", dtype = "float32", shape = (396, 1))#candidate|5998|(396, 1)|var|float32
output = func_5995(var_5996,var_5997,var_5998,)
func_5999 = relay.Function([var_5996,var_5997,var_5998,], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6016 = func_5541_call()
call_6017 = func_5541_call()
func_2517_call = mod.get_global_var('func_2517')
func_2521_call = mutated_mod.get_global_var('func_2521')
const_6027 = relay.const([-6.436828,-8.880795,8.720900,2.300795,2.505534,-5.943736,4.526010,-7.793369,-3.423639,-7.427263,-2.903531,9.238319,6.848515,7.975026,-6.648470,-1.705367,8.216017,-8.610069,-2.205079,-5.733606,0.073841,7.991421,5.791001,5.626773,6.636553,8.468070,1.210561,-7.897059,0.508955,3.416539,0.120475,3.979108,-6.113407,7.105048,9.005990,-9.334492,0.663074,3.489924,3.710324,-0.867806,7.906246,7.448194,-0.555228,4.804612,4.155438,-6.732012,-4.074780,4.515755,6.917521,0.715917,9.873003,-4.095923,2.729969,6.764210,-1.052941,3.869625,-8.919798,-2.318546,2.275079,-4.280334,-1.470095,5.242362,-7.770138,-3.767493,1.468092,-3.514223,4.718847,0.396824,6.702278,-0.175994,-6.429845,7.112174,-4.712724,-6.293627,3.033741,-2.910947,1.676764,-5.879882,8.407024,6.721178,-2.932712,6.141400,-3.938448,-9.665188,0.930592,-9.725479,-6.837325,-6.497747,9.393478,-0.608872,-8.392953,6.863831,-6.736973,8.229579,-6.718114,8.419401,9.083203,-8.573033,4.188087,0.891999,2.231058,5.167089,8.806270,-4.147753,-3.661877,2.396959,-0.590931,-2.544935,-1.265409,-2.053739,-4.015366,4.185724,-5.606002,-2.310898,-5.418757,-4.806669,4.568963,3.974449,-7.580444,5.292890,2.214683,3.785231,8.255043,-2.502364,8.303137,-7.981339,-6.517899,8.102862,-5.874290,7.328089,4.770133,-3.772525,0.444404,9.529737,-2.363474,-4.321575,6.874463,4.505090,9.879389,-2.997738,-1.204307,-5.263406,-1.711996,3.512598,2.895932,5.991347,-3.516469,4.261124,-7.282957,1.584222,-3.645464,-7.502175,6.959954,-1.825210,3.411797,-4.953948,-2.396175,7.384217,-2.388858,6.574364,1.009518,4.529744,-3.133026,8.821647,1.229729,5.243981,-9.963721,-3.561567,7.106949,-1.371969,2.713065,-6.021712,6.834136,2.808509,-4.975389,-2.630112,2.533915,-7.566677,-9.725883,-7.092202,-9.679454,0.586738,2.509667,2.131717,0.308210,-5.937264,-8.126128,-1.854074,-7.848729,6.691866,-2.269154,-3.392117,5.506270,4.136275,-9.415438,-6.355141,-9.540664,2.532511,0.800150,-9.208545,-2.984571,3.741682,-7.819089,-7.610960,8.250306,5.810292,3.608374,-3.159752,-3.906864,1.309379,8.715827,-3.729609,4.187892,-2.738907,-1.965609,9.729648,4.536924,8.804341,-8.767694,-2.197568,1.459117,3.868520,3.816545,-0.864994,-5.241455,-5.079593,9.050771,8.163662,-4.799032,7.812539,-2.971957,1.431616,7.297071,1.775995,-7.013201,-8.675384,-2.755318,2.596460,3.396645,4.291413,9.779410,6.764584,-8.960336,1.843236,-2.964077,5.423923,-1.266675,-7.500660,8.952543,4.793529,6.799217,-5.656193,-7.427593,8.026923,4.777101,1.090504,-9.959446,1.793526,2.834823,7.544017,0.994765,-2.808770,8.219055,0.022236,1.261733,3.913003,-7.959000,-8.170882,6.003847,-4.437808,-1.399193,3.030825,8.663221,-5.367122,2.891333,-5.112480,-8.204415,-5.061453,-6.374012,5.875679,0.048590,-4.213669,-4.197707,-6.961120,3.232518,-2.301681,-5.919528,-6.845604,-5.806313,-5.711567,3.484167,-4.896298,1.107506,5.206049,-8.513973,4.816934,4.056874,-5.612863,-7.775823,3.708247,0.729191,-8.229803,7.823096,0.130264,4.646572,-7.154749,4.513807,-0.316867,6.589074,-9.769032,-0.095899,3.483911,5.342936,6.732002,-9.949865,8.047147,-8.183345,9.802696,8.871110,6.212279,-1.947930,7.270659,-0.175173,7.529692,5.879517,-1.735528,6.262203,-7.180729,3.063110,9.938968,-8.422840,6.101245,-6.371825,6.582824,-2.938520,-7.835985,-0.823054,-9.157807,6.886413,-8.117189,6.352134,9.789088,4.718676,4.990487,1.334170,-7.995870,-0.421865,2.375391,7.968187,-4.852713,1.075735,-9.891416,-4.592927,8.480557,-4.419833,-0.255559,-6.671431,4.761078,2.703930,-5.282775,8.765584,6.444902,-3.061148,-3.263785,9.869476,0.931986,3.282114,-0.505026,-1.405400,7.767358,2.416418,-8.102414,1.329520,8.821009,3.091691,-1.882711,6.595857,-2.120423,-3.720968,1.545296,1.340427,-0.557662,-8.086323,-3.621401,-1.077639,-1.602358,9.131997,2.757806,-7.433831,-0.482466,-4.915634,-2.995063,-8.066957,-4.399777,6.912508,-1.805362], dtype = "float32")#candidate|6027|(396,)|const|float32
const_6028 = relay.const([4,7,-8,3,-2,-10,6,7,-5,8,7,-1,-6,6,-5,-9,1,-5,2,2,5,-8,7,1,-8,4,-8,2,-3,5,3,7,9,2,1,7,5,-9,5,-4,2,6,-4,-3,9,5,1,8,5,1,-4,-4,-8,-1,4,3,3,5,10,-6,-3,2,2,-3,-10,3,-7,-2,1,-5,9,10,-1,-3,10,-9,8,-8,-3,-7,7,6,-8,-6,-2,-3,-3,4,7,-5,7,-3,-7,-5,-2,-3,2,-1,-8,9,-10,-2,7,-6,-3,3,-5,5,7,-4,2,-6,-7,-7,5,-6,10,9,5,-2,-4,-10,-1,-3,-5,-5,-4,-3,9,-7,-6,9,-2,1,-4,8,8,-9,3,7,-10,-6,5,-5,-7,-9,7,9,8,7,-3,-10,-10,-1,-2,2,-3,6,8,-6,-6,-8,-5,-10,-6,-3,-1,1,-3,-6,-5,6,-9,-7,4,3,-8,-10,-7,4,-9,-4,1,4,2,-6,10,-4,-4,7,-6,-7,9,-7,-2,-4,9,1,-5,-3,-5,-3,-3,-6,-10,7,1,-10,5,-1,-10,8,-2,1,-6,-6,5,7,-6,9,4,-2,3,-7,7,5,-10,-7,6,10,4,4,-5,9,2,7,-3,-2,1,5,7,7,7,-2,4,6,7,-7,-10,6,-2,7,4,-4,-9,2,2,-5,-5,-3,-8,5,10,-10,8,-2,10,8,1,8,-4,5,-2,-5,7,4,-1,-9,-2,-9,4,1,-3,8,2,3,6,9,10,5,-6,-1,9,-5,-10,1,8,-9,-10,2,-3,-5,-4,-7,2,10,-2,-2,10,3,-6,5,6,-4,1,8,2,2,-10,10,2,10,10,6,1,-1,4,2,2,-6,-3,-8,10,1,-1,-3,-1,-7,-7,1,2,7,-2,6,5,8,8,3,5,9,-4,-1,9,4,-10,-6,-10,8,3,5,-8,6,-8,6,-2,9,9,-1,-9,4,1,-4,4,3,8,5,-1,-3,-1,-2,4,-9,3,-3,6,-2,9,7,7,-1,8,-10,7,7,2,1,1,1,1,-4,3,-3,1,-6,-2,3,2,-10,-7,-7,4,-7,9,9,-3,-4,-1,9,-8,8,3,-1,-5,4,-10,2,-8,-1,6,6,4,-8,-8,5,-3,8,-4,-10,4,10,-4,7,1,8,9,9,-5,-8,-7,1,-6,5,-9,-9,-9,-6,1,-5,-3,-2,-9,6,9,9,7,-5,8,-2,-6,-2,10,-10,-3,-5,-9,1,-7,4,-2,-9,10,1,5,6,6,8,6,-9,2,7,1,9,-4,-2,-5,-5,-7,4,-2,5,8,4,-9,5,6,-3,10,5,-5,2,9,5,-6,2,-9,5,-10,3,3,1,2,6,-7,7,9,-2,-7,-6,7,-8,-3,-6,-2,-2,-9,-4,-8,2,-3,-9,-6,-1,-9,-3,-5,3,-6,2,-7,2,-1,6,1,7,5,-8,-5,4,-8,-10,-10,2,3,-5,-2,6,-5,3,10,-2,3,8,1,-4,10,1,-9,7,10,-4,-1,4,-5,-4,4,-10,5,7,-1,-4,-6,-3,1,9,-4,-4,3,10,4,1,-7,-6,-10,-10,-3,1,1,-6,-6,6,6,-4,9,-7,6,-2,2,9,3,2,-6,-7,9,-1,-8,4,8,-5,1,-9,-1,-4,-1,2,4,3,-8,-9,6,1,-9,-10,-4,2,-6,-4,4,-9,-3,-2,-6,9,7,-1,7,9,-7,-3,-3,-6,-7,-7,10,-7,-8,2,-4,-9,8,-6,-2,-3,3,7,2,-6,-6,2,-10,1,-8,3,3,-4,2,7,4,-2,-5,-4,4,8,4,6,-10,3,9,1,10,2,-7,5,-7,8,-7,3,-2,-3,-2,10,7,10,-1,-7,-8,2,-6,-7,-5,-8,-7,8,-1,-6,2,-3,-1,-3,5,3,9,-9,4,9,-8,6,8,-5,-4,2,-6,5,9,2,-9,7,2,-2,-1,8,8,7,7,-4,2,1,10,-7,-5,5,6,10,8,-4,3,-10,-5,6,10,7,6,2,-3,7,10,9,-3,-3,3,2,1,-8,1,-2,-5,-5,-6,-9,7,-6,7,4,8,-1,-9,8,6,-6,-1,-10,-9,7,1,6,-3,7,-10,10,-10,-9,-5,-9,-3,10,5,-10,4,-10,7,-2,-10,10,10,8,-4,-1,5,2,6,6,1,-8,5,-7,-5,3,-8,5,-5,-9,3,-8,1,10,1,3,-2,-6,-10,-9,1,-2,5,8,4,8,9,-6,7,2,-2,1,-7,-10,9,-3,1,9,5,-7,7,4,3,-8,10,10,6,-5,-8,9,-8,8,-10,-7,-6,-3,10,-9,-9,-3,9,-10,-5,-8,-4,10,9,-1,-9,-3,-3,-8,-6,-5,-7,6,4,-1,-5,-3,5,-10,3,5,-4,-7,-7,-9,5,7,-2,8,-9,6,9,2,3,8,7,-10,-4,-5,5,1,8,1,-1,8,9,1,-3,2,6,4,5,-2,4,-1,3,-10,-10,-5,-2,-10,-8,1,-5,-7,-4,4,-6,10,6,-10,3,-2,-1,-5,-9,-5,7,8,8,-5,-8,-2,5,-6,-1,-10,6,-7,-8,-1,-9,-5,2,-10,-9,-3,-4,-1,6,10,4,2,-3,-9,5,-9,6,-1,-7,9,6,1,8,10,9,-3,-1,5,8,-6,-3,7,1,8,-1,-2,-10,8,4,3,-8,-10,-1,-5,-8,2,-8,-1,-7,6,7,-4,2,-6,-7,-4,5,-4,-9,-7,-9,-10,-6,-7,9,10,5,2,5,8,9,7,-5,2,1,1,-8,9,2,-8,1,-7,-3,6,1,10,-5,3,1,2,-7,-1,3,-3,-8,-6,-1,7,-5,10,6,-5,-8,-1,-6,-10,-7,9,1,-7,-3,9,-7,5,-9,8,-6,8,-1,-2,3,9,-3,2,-8,-4,-1,4,9,-9,-6,-6,10,-6,-5,8,-2,-10,3,2,10,-4,-9,10,-10,6,8,8,-6,-8,3,-8,3,4,1,-1,2,-3,-6,10,-2,1,10,7,-2,-6,-1,3,-4,1,-1,-6,8,5,-2,1,1,3,9,-7,5,9,-2,1,9,1,6,2,-9,-9,2,-5,10,-4,8,-4,-7,-10,-5,-2,4,-4,-5,6,3,-6,-3,-8,1,-6,1,1,-2,6,-3,-2,4,-7,2,4,9,2,5,7,-10,-2,-4,1,-5,5,-5,-4,3,-9,-7,4,-5,7,4,5,-10,7,1,10,-4,3,-2,-8,10,-1,2,-2,2,6,-5,10,-7,7,-6,5,2,9,7,-10,-5,-4,8,4,7,-6,1,6,-4,8,-2,1,-3,9,-8,-6,1,1,-8,-7,-7,7,-10,9,-8,5,-2,-7,7,-4,6,-7,2,4,5,4,6,-1,6,2,7,-7,4,-1,-1,-3,4,4,1,5,1,7,3,-6,8,-3,5,-3,4,-9,10,2,3,-10,-3,-10,6,-4,5,-10,-7,-9,4,1,-7,-3,-2,9,-2,-2,5,9,-9,-2,2,1,-6,-10,-2,8,-1,6,-7,-1,-5,-4,-4,4,8,10,-8,9,-1,4,-2,-3,-5,-8,-4,-3,-1,9,-2,9,-9,-1,-9,-2,-1,-6,-1,6,9,-10,3,4,-2,7,6,-5,-6,3,-7,6,3,1,-2,-10,10,-4,3,7,8,9,-2,10,-3,3,-10,-7,2,7,-6,-3,-4,1,2,3,4,8,8,-3,-1,-10,7,3,9,3,4,-4,-4,8,-5,-10,6,-4,-3,5,1,-4,5,10,-5,1,-1,-10,2,-3,-2,5,-8,-2], dtype = "int8")#candidate|6028|(1440,)|const|int8
call_6026 = relay.TupleGetItem(func_2517_call(relay.reshape(const_6027.astype('float32'), [11, 6, 6]), relay.reshape(const_6027.astype('float32'), [11, 6, 6]), relay.reshape(const_6028.astype('int8'), [1440,]), ), 2)
call_6029 = relay.TupleGetItem(func_2521_call(relay.reshape(const_6027.astype('float32'), [11, 6, 6]), relay.reshape(const_6027.astype('float32'), [11, 6, 6]), relay.reshape(const_6028.astype('int8'), [1440,]), ), 2)
bop_6032 = relay.power(call_6016.astype('float32'), call_6026.astype('float32')) # shape=(4, 3, 8)
bop_6035 = relay.power(call_6017.astype('float32'), call_6029.astype('float32')) # shape=(4, 3, 8)
func_5995_call = mod.get_global_var('func_5995')
func_5999_call = mutated_mod.get_global_var('func_5999')
const_6037 = relay.const([10,5,6,8,-7,8,-4,3,9,5,6,10,-6,4,4,9,-1,1,-2,-7,-4,10,-9,1,-2,-7,-8,-8,3,-8,7,-10,-10,8,-4,10,9,7,2,7,6,-2,1,3,-4,-1,-6,9,-4,9,-1,7,6,9,5,2,10,-8,-6,4,-9,10,6,3,-6,9,9,9,-1,3,-8,7,-1,-8,-7,-6,7,-4,-5,2,-7,-1,6,-4,-2,-3,4,-8,-7,3,-9,10,4,9,-1,3,2,6,5,5,9,-6,9,9,10,-2,2,5,8,-7,4,8,-3,-4,-6,-4,8,-9,3,5,-9,-4,-10,7,4,-8,-4,-2,1,-5,-4,10,-10,1,9,9,-4,1,2,6,1,-4,-8,-4,-4,-4,8,2,-4,-1,10,3,3,-10,1,2,-7,9,-5,-4,3,-7,5,1,2,-4,-4,-6,8,-3,-1,-1,3,6,4,-7,2,-8,-5,8,-10,10,9,10,-4,-6,-10,-7,-8,1,5,-9,-5,-3,7,-10,4,-3,-7,-10,-8,8,-3,2,-8,-3,4,1,8,-10,5,-2,-9,2,9,-9,-8,6,-1,-3,1,3,6,5,-8,-9,-4,-4,7,10,-9,3,-5,-9,7,-7,-5,-6,-4,7,7,-5,-10,-5,-6,-2,-6,-2,-8,-9,-10,5,-5,-8,-3,1,2,2,-6,8,-4,4,-9,-2,7,2,-8,-5,-10,-1,10,5,-9,-4,4,6,-2,7,-7,8,10,1,9,-10,1,-1,5,-2,3,-1,6,6,-8,-3,3,8,1,1,9,8,5,10,-7,6,6,8,3,-4,-8,5,-8,5,6,1,7,5,1,2,8,10,7,10,4,2,-10,-5,4,10,-6,-5,-10,-5,-6,1,-6,9,-10,3,2,-8,-4,1,-3,-6,-1,1,3,-2,-2,-4,3,2,-2,-9,-2,-7,2,-2,10,-3,1,2,-8,5,-7,-8,2,-8,-5,-9,4,1,7,-10,-3,7,4,2,-4,-2,3,5,-10,-10,-8,1,-6,-9,-8,-7,3,-9,-3,-1,-7,10,-4,5,-8,10,5,-1,6,3,2,-6,-6,-1,7,8,6,-4,-4,6,-6,-9,8,2,-1,-7,-5,-5,-10,-9,-10,-1,-6,-7,-5,-2,7,-4,1,-8,-10,-5,-10,5,-9,-8,-3,5,5,-10,5,3,-5,-7,-10,-1,2,7,-8,-5,-9,4,-2,-3,-1,7,-7,7,7,10,-3,-10,-7,-8,-7,2,5,-10,-6,-6,-8,-2,3,-6,-7,10,7,4,4,1,-4,9,-10,6,4,5,-5,6,10,10,8,5,7,3,1,3,8,3,-3,-6,-1,8,1,5,5,7,3,-3,1,-2,-2,8,-10,-10,1,1,-10,-9,-2,10,-8,-5,9,3,-3,-2,3,7,-4,6,4,9,-6,-4,-3,-8,-9,1,-8,-10,1,-8,-4,8,9,-5,-1,8,3,8,4,6,-8,5,-5,-8,7,-3,-8,-2,4,3,-2,-7,-3,-2,10,2,8,3,-10,-10,-7,-1,3,-6,-9,-4,-10,-9,-5,-9,10,2,-9,-1,-10,-10,-3,3,-2,-3,-10,5,10,-2,-4,2,4,-4,-1,-4,6,-7,2,-3,1,-9,-2,2,10,-7,-6,-10,2,-5,-9,-3,10,-1,4,-1,7,7,-6,-1,4,1,-4,-2,5,1,-6,-6,-6,1,1,4,-1,7,-9,-4,-6,-5,-5,7,4,-1,-2,-5,4,-8,-7,2,5,-7,-8,7,3,-6,-9,-8,1,-1,6,3,3,4,-6,-10,-8,5,-8,-1,6,-9,10,-8,-7,-8,-7,5,-4,2,7,-1,10,2,10,-9,1,-9,-7,4,6,-7,2,-4,10,8,-9,2,-5,-9,8,-1,-8,-9,-9,-9,6,-9,5,-7,-9,-2,-4,-2,-9,-5,-9,-7,1,3,1,-7,5,7,9,-7,-9,-1,-5,1,1,2,-4,-8,5,7,3,-4,9,-10,-5,9,6,-6,-2,-7,-7,-5,-10,-8,-6,2,8,-8,7,-5,3,-10,-5,-1,5,10,-9,-5,-7,3,-7,-3,-10,9,-8,-4,10,3,-10,10,4,-9,2,1,6,-5,10,-5,-2,2,1,-3,9,4,-2,-7,4,-9,-10,10,-8,-9,4,9,-8,-5], dtype = "int16")#candidate|6037|(810,)|const|int16
var_6038 = relay.var("var_6038", dtype = "uint32", shape = (3840,))#candidate|6038|(3840,)|var|uint32
call_6036 = relay.TupleGetItem(func_5995_call(relay.reshape(const_6037.astype('int16'), [810,]), relay.reshape(var_6038.astype('uint32'), [3840,]), relay.reshape(const_6027.astype('float32'), [396, 1]), ), 2)
call_6039 = relay.TupleGetItem(func_5999_call(relay.reshape(const_6037.astype('int16'), [810,]), relay.reshape(var_6038.astype('uint32'), [3840,]), relay.reshape(const_6027.astype('float32'), [396, 1]), ), 2)
uop_6049 = relay.sin(bop_6032.astype('float32')) # shape=(4, 3, 8)
uop_6051 = relay.sin(bop_6035.astype('float32')) # shape=(4, 3, 8)
func_2291_call = mod.get_global_var('func_2291')
func_2297_call = mutated_mod.get_global_var('func_2297')
var_6055 = relay.var("var_6055", dtype = "uint32", shape = (2940,))#candidate|6055|(2940,)|var|uint32
var_6056 = relay.var("var_6056", dtype = "int8", shape = (234,))#candidate|6056|(234,)|var|int8
call_6054 = relay.TupleGetItem(func_2291_call(relay.reshape(call_6026.astype('int64'), []), relay.reshape(const_6028.astype('bool'), [15, 16, 6]), relay.reshape(var_6055.astype('uint32'), [2940,]), relay.reshape(var_6056.astype('int8'), [39, 6]), ), 5)
call_6057 = relay.TupleGetItem(func_2297_call(relay.reshape(call_6026.astype('int64'), []), relay.reshape(const_6028.astype('bool'), [15, 16, 6]), relay.reshape(var_6055.astype('uint32'), [2940,]), relay.reshape(var_6056.astype('int8'), [39, 6]), ), 5)
func_2456_call = mod.get_global_var('func_2456')
func_2459_call = mutated_mod.get_global_var('func_2459')
call_6058 = relay.TupleGetItem(func_2456_call(relay.reshape(var_6038.astype('uint32'), [15, 16, 16])), 0)
call_6059 = relay.TupleGetItem(func_2459_call(relay.reshape(var_6038.astype('uint32'), [15, 16, 16])), 0)
output = relay.Tuple([const_6027,const_6028,call_6036,const_6037,var_6038,uop_6049,call_6054,var_6055,var_6056,call_6058,])
output2 = relay.Tuple([const_6027,const_6028,call_6039,const_6037,var_6038,uop_6051,call_6057,var_6055,var_6056,call_6059,])
func_6060 = relay.Function([var_6038,var_6055,var_6056,], output)
mod['func_6060'] = func_6060
mod = relay.transform.InferType()(mod)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mutated_mod.get_global_var('func_6060')
var_6062 = relay.var("var_6062", dtype = "uint32", shape = (3840,))#candidate|6062|(3840,)|var|uint32
var_6063 = relay.var("var_6063", dtype = "uint32", shape = (2940,))#candidate|6063|(2940,)|var|uint32
var_6064 = relay.var("var_6064", dtype = "int8", shape = (234,))#candidate|6064|(234,)|var|int8
call_6061 = func_6060_call(var_6062,var_6063,var_6064,)
output = call_6061
func_6065 = relay.Function([var_6062,var_6063,var_6064,], output)
mutated_mod['func_6065'] = func_6065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6099 = relay.var("var_6099", dtype = "bool", shape = (4, 13, 9))#candidate|6099|(4, 13, 9)|var|bool
var_6100 = relay.var("var_6100", dtype = "bool", shape = (4, 13, 9))#candidate|6100|(4, 13, 9)|var|bool
bop_6101 = relay.logical_or(var_6099.astype('bool'), relay.reshape(var_6100.astype('bool'), relay.shape_of(var_6099))) # shape=(4, 13, 9)
uop_6109 = relay.acosh(var_6100.astype('float64')) # shape=(4, 13, 9)
uop_6111 = relay.exp(uop_6109.astype('float32')) # shape=(4, 13, 9)
output = relay.Tuple([bop_6101,uop_6111,])
output2 = relay.Tuple([bop_6101,uop_6111,])
func_6114 = relay.Function([var_6099,var_6100,], output)
mod['func_6114'] = func_6114
mod = relay.transform.InferType()(mod)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mutated_mod.get_global_var('func_6114')
var_6116 = relay.var("var_6116", dtype = "bool", shape = (4, 13, 9))#candidate|6116|(4, 13, 9)|var|bool
var_6117 = relay.var("var_6117", dtype = "bool", shape = (4, 13, 9))#candidate|6117|(4, 13, 9)|var|bool
call_6115 = func_6114_call(var_6116,var_6117,)
output = call_6115
func_6118 = relay.Function([var_6116,var_6117,], output)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_6152 = func_5694_call()
call_6153 = func_5694_call()
output = call_6152
output2 = call_6153
func_6185 = relay.Function([], output)
mod['func_6185'] = func_6185
mod = relay.transform.InferType()(mod)
output = func_6185()
func_6186 = relay.Function([], output)
mutated_mod['func_6186'] = func_6186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_6235 = relay.TupleGetItem(func_5806_call(), 0)
call_6236 = relay.TupleGetItem(func_5807_call(), 0)
output = call_6235
output2 = call_6236
func_6250 = relay.Function([], output)
mod['func_6250'] = func_6250
mod = relay.transform.InferType()(mod)
mutated_mod['func_6250'] = func_6250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6250_call = mutated_mod.get_global_var('func_6250')
call_6251 = func_6250_call()
output = call_6251
func_6252 = relay.Function([], output)
mutated_mod['func_6252'] = func_6252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6256 = func_5541_call()
call_6257 = func_5541_call()
output = call_6256
output2 = call_6257
func_6258 = relay.Function([], output)
mod['func_6258'] = func_6258
mod = relay.transform.InferType()(mod)
output = func_6258()
func_6259 = relay.Function([], output)
mutated_mod['func_6259'] = func_6259
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6270 = relay.const([[[-6.481850],[-4.432135],[-6.476356],[1.031913],[6.985276],[6.456530],[1.652932],[-6.424406],[-2.266047],[5.202972]],[[5.610732],[-0.399917],[-2.443311],[0.950866],[8.916382],[8.087107],[-5.298004],[2.645085],[-3.954174],[9.581821]],[[5.142902],[0.066570],[-5.868103],[4.640247],[3.060570],[4.756685],[7.431546],[-8.974806],[-3.260815],[8.314435]],[[-9.748862],[6.901476],[0.372968],[-1.395573],[5.656761],[8.164609],[-6.408068],[8.781947],[-8.833920],[-6.076029]],[[7.056771],[-0.274004],[3.409911],[6.274136],[8.502027],[9.839078],[6.227745],[-8.238531],[0.896213],[-5.173762]],[[6.633405],[3.532657],[-3.515075],[-8.040938],[-1.019981],[-9.037656],[-5.168033],[-1.115359],[8.156094],[9.931409]],[[-9.694026],[-5.298084],[-2.173177],[-5.823206],[3.593469],[-7.632548],[-1.226362],[0.703065],[0.029844],[-7.188671]],[[-0.331574],[4.605734],[6.371825],[-3.918564],[4.717463],[2.242574],[-0.618197],[7.034889],[1.704239],[0.358884]],[[-0.296163],[3.840267],[5.735289],[2.870416],[-5.149735],[-7.501409],[-2.480287],[-9.486693],[1.463329],[-1.468235]],[[-3.542042],[6.823166],[-8.881682],[3.698772],[-8.543743],[-0.586782],[6.758270],[-0.041488],[-1.469509],[9.711650]]], dtype = "float64")#candidate|6270|(10, 10, 1)|const|float64
const_6271 = relay.const([[[2.067809,4.027471,-6.676776,-8.700601,-0.315094,-6.167635,-7.471240,-7.089881,-7.671440],[-8.853028,-4.995939,-4.240409,-1.818904,8.193446,-6.127952,-4.638503,-2.119186,-3.839898],[6.269248,-4.763959,-7.157163,-6.601972,-9.589984,-4.067937,-0.960472,-2.942721,7.965343],[1.657920,-0.275539,7.703455,-3.829681,5.524996,9.976765,9.550142,-2.351377,-5.789184],[-8.149596,8.314198,0.144741,4.441941,-0.163474,-8.693700,7.316665,-2.915293,4.958269],[-2.064706,0.994460,-4.131246,2.075212,0.164412,2.030075,9.078698,5.476771,5.494429],[-9.327148,-8.505009,-7.002193,-6.518577,-1.701035,-7.320742,-2.388677,4.777312,-2.943654],[-4.284159,-5.962481,6.603155,-7.146600,7.017038,5.908048,-4.636705,-6.469257,4.706122],[-6.294877,-8.554541,-7.616038,-8.720631,4.387670,-5.439740,2.655895,4.338389,-3.723497],[-1.255291,9.579526,-5.366559,-6.206303,-2.288166,7.059173,4.543946,5.048040,8.529707]],[[-4.658457,-7.659453,7.341771,3.066252,-5.516428,-6.018743,3.509881,9.837235,4.194220],[-0.045925,-4.513381,-7.522821,-8.934082,4.014961,0.476069,1.070555,-8.948985,0.948181],[-5.306360,5.857702,1.675908,1.725512,-8.715069,-2.286973,8.362558,9.187600,4.511271],[1.500764,7.335426,-2.518666,3.935437,2.055901,3.958132,-7.986111,5.855201,-3.435853],[1.250942,-0.429636,-1.230870,1.243196,1.100962,-4.069614,-3.804424,-0.569361,-9.671098],[-6.311272,-2.974211,-3.982333,-3.618375,1.917688,-8.819935,2.423064,5.597191,4.081655],[-3.400547,4.320509,3.620070,-5.019245,-3.449438,3.179776,5.131003,-6.929487,2.850879],[-7.547597,1.482865,-4.476908,6.823171,-8.580741,9.953499,7.649703,-6.100571,7.114533],[-0.849823,-5.673899,-7.009130,6.590185,8.824379,1.169740,-1.198114,6.054436,5.760086],[4.179604,8.594048,8.027305,0.445887,-9.843406,-2.261436,8.062037,3.996215,2.692904]],[[-5.292321,-1.119769,-3.475549,-1.648080,8.779276,9.359914,6.819615,5.907472,-1.967244],[9.951162,5.460794,0.620463,5.078670,-0.404740,-5.397055,-9.486883,2.610219,7.322694],[-0.531229,-0.196412,0.617061,-9.014363,2.728838,4.369520,8.420581,1.451353,-9.597025],[-7.771866,-5.310720,-5.799695,-0.364192,2.876918,7.419715,7.613181,-8.169435,8.416221],[6.350959,0.411202,-6.369503,-4.438953,7.518519,-2.522940,6.892478,-3.234257,-9.442003],[-4.666317,4.216301,-1.400398,-0.444945,0.439492,4.123807,-2.026075,-5.579155,0.212585],[-1.874131,-3.752409,-0.196279,0.611552,0.768173,3.269355,1.795778,-5.762996,0.984719],[2.316475,4.907741,-3.876194,-2.804985,3.661439,-5.815543,2.416976,9.631234,9.963258],[-1.303885,2.150243,-2.292872,3.241308,-1.178450,-5.467310,-4.005726,-1.098647,-1.252860],[1.346763,8.109195,-5.753840,5.900622,5.805749,9.972668,-8.384457,5.358680,-9.907011]],[[-9.935167,9.959106,0.679086,-9.602067,-5.143338,5.535117,-9.032036,4.386193,-4.634429],[2.089269,9.088904,-5.590654,2.863569,-7.993706,-8.907672,-1.655336,6.099306,4.502528],[-4.564595,-3.066812,-5.950777,7.361412,-9.546771,7.392277,-1.187079,0.590196,6.602545],[9.070997,-6.040589,1.132431,-3.546476,-8.109431,-0.691430,-1.284792,8.267744,5.701731],[4.198543,-9.281708,4.180159,-3.303065,4.880455,0.668914,2.745576,4.450173,-1.786005],[-9.040744,2.500664,-2.678762,-2.384162,-9.720028,-7.436012,-4.332032,-0.300118,3.184427],[-6.561058,-7.236237,7.088537,-6.062009,-4.203612,9.137602,-9.614678,6.079967,-7.348013],[7.589706,-6.695197,-6.513995,4.713676,-5.979243,-7.114300,8.631433,2.351453,-0.219051],[3.891061,6.355752,-7.928155,2.694647,-1.850837,-3.927331,-1.331788,-3.539709,0.138127],[4.210051,0.209281,3.869772,-6.562328,-9.247336,-4.748938,-5.573132,9.919306,2.860093]],[[-1.946556,-3.197244,1.448960,5.006236,7.511671,-1.733111,0.311954,7.067389,-1.606741],[-5.190844,-0.401568,-2.425220,0.443644,-4.964857,4.730150,-2.501472,-7.998436,-8.974014],[-4.893911,-1.444740,9.432597,-8.987497,-3.125494,1.434023,-5.722925,7.156864,-9.648345],[6.186704,2.411098,-8.557854,6.148489,-5.365619,-1.215962,9.121564,4.845495,-9.839082],[0.821970,8.424639,-7.773226,-4.068902,-9.386430,6.583319,2.884849,-5.586346,6.087099],[6.416877,1.673696,-8.284918,1.099764,-4.894906,2.031910,2.655311,-0.542154,8.340543],[-5.806805,6.208393,7.082536,2.352898,-7.206558,5.908169,5.756789,-1.279152,0.790426],[-3.936752,6.897302,9.057049,9.857252,6.890788,0.587357,-1.890666,-1.057613,-6.238261],[7.262073,-3.625843,3.407798,3.867262,4.978161,3.424865,-7.350468,2.179735,8.255582],[9.085269,9.077734,-8.232713,3.240851,-5.003420,-9.103138,2.756576,6.000401,7.179911]],[[-2.090831,6.065947,6.190349,-5.141297,-3.072493,7.877800,-3.777662,-7.330020,2.788441],[-8.659693,6.702515,-1.699174,7.425935,8.683693,9.632420,3.232930,1.814929,6.578696],[3.792410,9.195250,0.591878,7.936310,3.879656,-8.112561,-1.829853,6.745167,2.943698],[-2.611850,0.244657,1.328130,-6.553396,-9.945582,2.580932,-9.536055,3.764237,-1.529884],[-0.866068,-4.955157,1.259205,-4.199978,9.092654,-2.051241,8.181765,3.211881,-5.766079],[-3.983151,0.539072,3.001918,-7.945912,-7.326989,0.314372,1.607890,-9.527472,2.830206],[-1.202846,-2.773870,7.784649,-8.007621,4.927391,5.645417,2.703552,-2.521152,2.044699],[4.365488,-2.022958,8.393147,3.824490,4.628178,9.190883,1.439799,1.242188,7.143208],[-5.280910,9.748027,-6.353025,-8.468750,-7.547570,-8.617801,-0.467315,-3.276552,0.248961],[-6.897420,-2.911888,8.449391,-3.116098,9.407584,-8.433615,-3.176179,-6.169133,-8.928750]],[[-0.722171,-8.540846,4.109999,-7.379464,3.394239,-9.603573,8.334740,3.582665,8.418292],[2.254743,5.611983,1.829365,2.825937,6.979529,7.837651,-1.294148,-6.946368,0.346431],[-3.970358,1.024068,-6.569555,-4.042893,-8.571088,8.298499,-5.411876,0.038878,2.619604],[4.724473,-5.788522,-6.646112,-0.569464,8.967087,-4.082599,2.366694,3.922761,-8.701603],[-9.579093,7.949999,-8.748702,-0.462425,1.862511,-1.740496,-1.604450,1.106070,-0.127552],[9.204539,2.133572,3.326986,0.941925,-3.674049,8.025266,-1.523811,7.254848,-5.138110],[-6.152504,6.712187,-0.107312,-5.187058,4.540684,4.026077,4.663107,0.569619,-8.973861],[-3.763098,4.014758,-5.781438,7.122503,-1.099798,-5.979722,-6.321407,-1.736903,-5.538477],[-1.448695,4.404927,-3.819326,1.684660,4.263056,-5.706876,-2.589339,6.820792,9.899714],[-4.815946,-6.530519,-9.964317,-6.396768,5.942336,-3.888798,6.697343,-9.482715,-1.842654]],[[-1.183952,7.367892,-2.594184,7.792663,-2.373205,-3.451411,-4.549559,2.530661,-5.779928],[3.956138,-8.823273,1.852691,-5.362989,5.047265,2.468456,2.138593,-6.084449,-8.411803],[0.136622,7.703031,-2.541111,5.507118,-6.896185,-6.249774,-0.663369,9.318354,-9.626267],[8.564687,-6.975884,-9.220489,3.507450,3.907244,-2.929134,-3.954781,2.225979,5.799538],[-5.270742,-8.309171,5.668798,3.502549,-0.496513,8.692490,8.076670,2.946871,6.472242],[7.545325,7.154573,-2.214187,-5.802151,9.932646,-0.943388,-7.018526,-7.721780,-2.364508],[1.109080,2.974497,-3.850441,-0.239667,-1.554288,9.308086,2.967565,-9.603333,7.544712],[-7.963978,6.425751,7.479497,1.357390,-4.660709,-1.097259,0.849035,-0.569577,3.477310],[7.036851,-5.542714,7.401797,-3.190704,7.288931,-8.695845,2.326391,-7.170918,-3.101091],[6.495145,9.157655,5.677753,-3.472877,3.836021,-2.635664,4.473255,1.959495,9.022485]],[[-3.201477,7.084994,-7.637652,-4.665788,9.138485,-3.987154,4.417399,5.773017,-0.385149],[-0.671212,9.173819,5.463619,3.891569,-2.907016,2.877408,8.426463,4.822701,2.888935],[-4.216997,6.398327,-3.775477,-4.897800,9.291559,1.597263,-9.426628,-4.580509,8.980142],[4.784989,7.625708,8.666862,2.383760,-3.494624,-6.295809,-2.546876,2.165421,-9.241732],[-9.808336,2.985949,-0.938834,4.020052,6.992398,-4.062032,4.507459,4.134292,8.740815],[0.658011,2.410515,7.734824,0.359551,3.883090,-8.263160,2.219604,-3.064571,-2.701845],[2.726185,9.144206,-3.978883,6.756203,-6.941492,-2.816268,-4.537911,-7.420720,7.014389],[5.081053,-5.529384,3.837147,-2.807655,8.461344,-4.087808,3.065613,1.478134,-3.163354],[-3.021228,9.135042,-5.456145,4.243090,-9.351319,-7.517352,6.908721,-9.330265,-9.930009],[-4.200891,-4.961733,8.049282,-3.485732,-9.848615,-5.438461,5.877630,8.274634,8.443269]],[[-1.886554,-6.367533,-6.089995,-0.894790,-2.017802,4.979693,-9.077411,5.314276,0.178117],[4.610859,7.150421,3.981131,-7.126942,-3.780041,-0.715095,6.749619,-2.160830,9.964614],[0.707384,8.022728,-3.731043,-6.708075,-6.239258,-0.174921,4.333637,1.218340,4.232689],[-1.235345,4.818168,5.658288,-8.880005,-4.675979,-5.803091,3.210028,4.083380,9.745172],[-5.000015,7.985650,7.274767,-7.250654,7.779783,1.997737,8.757257,9.723464,5.353269],[-6.489209,7.464060,-3.790946,-6.592985,7.775344,-2.016773,1.195247,0.183175,-0.125208],[-1.828766,8.892658,-4.040617,5.269264,-0.806189,7.881877,9.448970,2.249318,-7.016137],[6.934228,7.363420,9.706167,4.560024,-5.998204,1.404998,-5.981356,-4.384209,3.705189],[-6.555877,-2.478324,9.255219,-5.492290,1.490529,-2.318555,-3.403903,-9.220316,-7.504407],[2.096372,-2.965336,-5.871127,-7.004654,-2.237537,-0.654547,-2.585033,-4.212192,0.507769]]], dtype = "float64")#candidate|6271|(10, 10, 9)|const|float64
bop_6272 = relay.power(const_6270.astype('float64'), const_6271.astype('float64')) # shape=(10, 10, 9)
uop_6278 = relay.asinh(const_6270.astype('float64')) # shape=(10, 10, 1)
bop_6283 = relay.mod(uop_6278.astype('float32'), relay.reshape(const_6270.astype('float32'), relay.shape_of(uop_6278))) # shape=(10, 10, 1)
output = relay.Tuple([bop_6272,bop_6283,])
output2 = relay.Tuple([bop_6272,bop_6283,])
func_6286 = relay.Function([], output)
mod['func_6286'] = func_6286
mod = relay.transform.InferType()(mod)
output = func_6286()
func_6287 = relay.Function([], output)
mutated_mod['func_6287'] = func_6287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_6390 = func_5694_call()
call_6391 = func_5694_call()
func_6258_call = mod.get_global_var('func_6258')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_6397 = func_6258_call()
call_6398 = func_6258_call()
output = relay.Tuple([call_6390,call_6397,])
output2 = relay.Tuple([call_6391,call_6398,])
func_6401 = relay.Function([], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
output = func_6401()
func_6402 = relay.Function([], output)
mutated_mod['func_6402'] = func_6402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_6414 = relay.TupleGetItem(func_6286_call(), 0)
call_6415 = relay.TupleGetItem(func_6287_call(), 0)
func_6401_call = mod.get_global_var('func_6401')
func_6402_call = mutated_mod.get_global_var('func_6402')
call_6423 = relay.TupleGetItem(func_6401_call(), 0)
call_6424 = relay.TupleGetItem(func_6402_call(), 0)
func_4655_call = mod.get_global_var('func_4655')
func_4658_call = mutated_mod.get_global_var('func_4658')
const_6427 = relay.const([3.796406,-4.706555,8.759431,0.466002,1.423503,-8.844510,-1.402669,5.421862,5.323448,-3.126155,-8.598133,7.188449,-7.527898,-5.587652,7.380377,-0.606551,-1.418887,-6.361453,-3.769011,4.186748,6.944629,-2.105920,-1.546624,8.144387,2.907056,-5.850878,0.207368,7.495978,2.984857,-7.645474,-2.553396,8.738267,7.654579,-1.045565,8.190131,1.852724,2.113877,8.969041,4.057360,-7.269511,-9.234864,-3.842593,-8.209369,-7.026575,7.434428,-0.500821,0.425828,8.863388,9.547074,-9.710128,4.540578,-1.982216,-1.464805,-3.834951,-9.881953,-8.201707,9.033493,-4.208259,-1.124585,4.393831,3.302706,1.282129,0.225889,4.964418,-5.298935,-4.061545,-8.395951,-3.641666,-5.224467,-1.843579,1.792471,7.761149,-7.754594,2.170632,-8.730833,-8.950507,-0.174619,-1.899068,-7.842820,5.821042,-4.918112,0.040693,-6.060455,7.973625,-4.723672,8.164141,-7.884176,1.009301,-6.768825,9.696967,2.206487,2.922919,9.312767,-6.497522,9.678641,-3.652301,9.771666,-6.136272,9.860546,-4.814234,-7.743951,-9.137273,-9.263958,4.765440,-1.320350,-2.149772,-1.822614,2.329594,3.785501,-5.003799,4.373288,-1.636565,-6.168657,-5.480053,-0.972463,2.120377,-7.510406,7.774462,4.521140,-9.862745,1.748076,-7.996379,-2.337541,8.992826,0.563633,-0.255826,-4.608854,2.548595,-7.929086,6.454803,-6.378506,7.939392,-3.055864,0.631029,2.073152,4.790295,-3.863660,-8.051014,2.692687,3.877485,9.344547,-9.727412,-6.793902,-3.523702,5.570739,-1.887555,4.899482,9.409611,-5.651636,1.863191,-4.504658,4.850442,-0.049859,7.167915,9.334677,-0.643348,-4.175784,3.798828,-3.810041,1.238613,6.335010,7.893068,8.778605,-9.157601,-7.272241,8.129819,-1.712137,4.766720,5.828203,-0.408653,0.142231,8.466505,8.024359,3.492075,4.164299,-0.827084,-2.694905,4.187174,-7.290906,9.653705,9.844437,1.152648,5.062033,2.866861,7.435640,-0.545602,-0.251761,-2.978096,-1.300298,-7.096753,3.497282,-6.170233,-7.577471,4.830897,2.267698,2.576212,-8.174966,-4.442470,-9.383699,-8.232597,5.091076,-5.501982,-5.142339,-7.040885,-1.518779,-8.493144,1.590866,5.140455,-5.980162,-5.316809,-5.206386,7.132604,-4.174665,-3.127336,2.369581,-9.678857,6.045829,-6.875391,1.242708,-2.923302,0.845740,8.716991,6.984210,1.336221,-7.434064,0.939766,0.793488,7.531689,-3.122551,-1.564691,-1.049501,9.068723,-4.001876,4.593885,-5.626862,6.126838,7.920845,-4.584294,-0.945694,-2.407992,4.999839,3.516776,-9.935707,-6.111265,-1.560639,-6.193825,8.292324,0.878090,-0.324952,8.971315,-4.677801,-7.344168,-9.210899,5.870644,-0.843970,5.646555,0.948491,5.346704,5.290238,5.502768,-1.366055,-5.728329,8.799282,2.772536,-0.258702,-7.998798,-0.208943,-2.015003,9.447418,8.342225,-6.041942,4.748273,8.471933,3.136000,-8.367238,-7.604843,3.789173,-2.052929,-0.454707,-0.547166,-6.903457,-3.141976,8.623604,1.543102,-3.935935,9.545322,9.687530,-4.106850,5.619611,4.311658,-6.874042,-4.732513,-9.118399,-6.695547,4.838347,-6.169552,1.286446,-2.779021,1.064288,7.343793,-2.148668,-2.621908,2.808720,-4.025223,1.453453,-6.199347,4.759424,9.200209,4.564903,0.126046,-7.377267,6.169759,-6.030190,-9.076987,4.976993,9.647080,-7.749086,-6.646991,-5.126773,-0.140218,-5.329704,-4.533593,-7.345908,-9.829444,2.612040,-9.249679,0.076096,-3.349099,5.918971,8.781007,-8.297530,-2.505583,0.129340,6.479021,0.372072,2.775211,-9.785218,6.316269,7.545849,4.787547,5.521038,-8.810899,2.366626,-8.713859,4.314530,9.840400,-0.558862,3.341864,-9.551461,-6.217706,-5.464173,-1.242440,6.768953,7.517203,3.530859,7.156732,-4.816299,4.843040,-6.001577,-4.797574,7.703648,-6.999963,2.977776,4.014859,-3.237904,2.603518,4.691120,5.772949,-6.225296,1.673443,4.358833,-6.461099,-1.383802,0.835257,-1.433680,3.966323,-0.555472,1.155669,3.389202,2.145048,-6.373705,-9.720999,-1.491673,-1.511441,9.172120,-4.341969,4.147761,-9.616426,-4.092581,-5.602361,-9.420697,6.706651,3.606913,-9.027929,6.723222,-2.440619,7.953192,-4.224257,4.386169,-5.686091,-0.862347,2.529303,6.502272,-0.605844,-1.924122,-4.208515,-2.084332,8.984135,9.227910,-7.667829,7.313779,-6.504414,8.882188,8.796446,-3.452605,0.154712,-6.582649,-2.596326,7.279393,-3.985627,8.732304,-9.222691,-6.599767,-4.639429,7.223805,-0.696943,0.017587,1.493123,4.774761,9.008227,-6.276919,2.779675,-9.215703,7.144938,-0.736012,7.933584,-0.339477,3.763323,7.205465,-1.258091,-1.504295,2.977277,-1.001151,-4.904772,8.057851,6.215895,3.758885,8.203552,-8.452770,1.231589,-0.506247,-9.566471,-9.654033,9.726337,7.725579,-0.889197,-5.728990,-7.168775,0.198172,3.835234,-8.118797,-9.290023,2.448606,8.991203,-3.466714,-8.958847,7.780855,-7.358622,-9.759703,1.282670,4.054888,3.870545,-0.712598,-6.253036,-7.767848,-3.647225,-1.795471,-7.335542,-8.012759,5.116723,-6.868497,0.884330,3.338294,8.304354,1.443322,4.131470,2.211186,8.921818,-1.730298,3.272701,4.708131,-6.142439,-4.794816,8.093097,-2.055776,-2.576204,-9.501268,4.768174,2.034008,9.567196,0.741672,1.701946,9.748775,-3.518823,1.211342,-6.289691,-2.626044,-0.211593,-3.472880,6.801821,8.995568,8.695697,-6.631142,2.246801,-5.004683,-4.405137,7.549508,-1.340202,-5.385462,5.390489,-7.610246,-0.933124,-5.617204,3.796161,-8.801631,8.340569,-4.248709,5.057694,7.897507,-9.654265,0.974076,-8.803892,0.294321,5.040341,0.752179,3.812250,5.911903,-3.184813,-8.643483,-5.759583,4.417707,-0.613666,-5.098955,-2.989607,-0.965845,7.801777,1.440293,8.329504,-8.807460,7.028868,1.887504,4.848764,-0.504361,-6.631773,-0.261427,-2.461095,-1.806184,3.551834,-9.260790,0.947507,5.747807,5.058257,-3.709278,7.116285,4.442463,-6.999227,5.326439,0.171605,-6.279444,-1.849218,-4.059685,-5.093188,-7.477864,-7.210774,7.629658,8.195347,-9.321643,0.867028,3.672161,-3.842959,1.690028,5.038902,-2.222345,9.944119,-9.225149,5.212435,-4.702918,-9.035949,-2.452689,2.445271,-6.976969,-6.796244,2.352292,9.673192,-9.169140,-6.648021,-2.587605,-4.997375,-8.238243,5.148946,9.276581,-4.369020,-4.882598,-6.786172,9.988562,-2.429697,0.068166,-7.141335,6.377384,3.417994,3.830377,8.475477,-1.086419,2.001115,1.664915,2.762063,9.973191,-0.071766,-1.859523,-6.258677,2.274632,7.297888,1.622604,5.358060,6.981898,-9.101967,-5.580105,3.225384,9.688877,-6.465311,2.190973,-0.327651,1.151489,7.896028,2.735489,5.319562,-7.671384,4.197000,-1.171235,-4.759330,-9.437425,5.011742,1.891009,2.576856,0.992803,4.014948,4.890936,0.488609,8.720633,2.327656,6.334183,9.214776,4.513596,8.956101,4.320003,-7.722904,9.520721,6.084651,-3.208229,6.869919,-0.317029,-2.831670,-1.119401,-3.479071,-8.574363,9.691668,-9.188901,-2.126942,1.465975,3.839059,3.510021,-0.932854,1.217815,8.875385,-0.480376,6.500814,-6.530335,1.320332,-8.373929,-3.456235,9.213806,-1.501404,-9.318508,6.277106,-1.401416,-2.827594,-7.530629,-3.062161,-8.522776,7.102982,8.791243,1.751729,1.858916,-6.773886,-3.338604,-0.538744,-6.593649,0.692917,1.034948,4.909402,-1.546619,-0.171536,-6.024620,-9.937575,-4.895142,-7.159889,5.234856,8.084190,-4.405222,-0.099975,-0.761317,-8.648266,7.332101,5.195394,-1.701280,-3.707565,9.080246,-4.924214,-9.036550,-8.326585,-1.686401,-6.433006,0.916849,-5.162140,2.604327,-8.578068,-1.294880,1.711405,8.339560,-8.788237,0.099272,-7.584524,5.699645,-4.754113,7.449874,0.131871,1.206881,4.051851,1.971306,-0.971301,-2.121555,8.333727,0.576666,-9.373780,2.205445,3.474537,-5.034824,2.793977,-6.116530,5.780517,2.701921,4.549829,-0.607240,9.794686,2.190487,-2.644056,-7.064753,-2.200858,-3.498682,-5.822832,3.603884,-4.391452,2.353325,-5.528698,-9.485539,-9.658814,-6.057719,-5.916607,-0.359162,-3.787707,-5.453648,-3.095379,-9.718818,-2.533466,6.970852,7.208239,-9.220087,-6.517489,6.077762,8.763201,-0.544280,4.086855,-7.264084,0.194291], dtype = "float64")#candidate|6427|(784,)|const|float64
call_6426 = relay.TupleGetItem(func_4655_call(relay.reshape(const_6427.astype('float64'), [7, 7, 16])), 0)
call_6428 = relay.TupleGetItem(func_4658_call(relay.reshape(const_6427.astype('float64'), [7, 7, 16])), 0)
output = relay.Tuple([call_6414,call_6423,call_6426,const_6427,])
output2 = relay.Tuple([call_6415,call_6424,call_6428,const_6427,])
func_6430 = relay.Function([], output)
mod['func_6430'] = func_6430
mod = relay.transform.InferType()(mod)
mutated_mod['func_6430'] = func_6430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6430_call = mutated_mod.get_global_var('func_6430')
call_6431 = func_6430_call()
output = call_6431
func_6432 = relay.Function([], output)
mutated_mod['func_6432'] = func_6432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_6437 = relay.TupleGetItem(func_5806_call(), 0)
call_6438 = relay.TupleGetItem(func_5807_call(), 0)
output = relay.Tuple([call_6437,])
output2 = relay.Tuple([call_6438,])
func_6440 = relay.Function([], output)
mod['func_6440'] = func_6440
mod = relay.transform.InferType()(mod)
mutated_mod['func_6440'] = func_6440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6440_call = mutated_mod.get_global_var('func_6440')
call_6441 = func_6440_call()
output = call_6441
func_6442 = relay.Function([], output)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6250_call = mod.get_global_var('func_6250')
func_6252_call = mutated_mod.get_global_var('func_6252')
call_6453 = func_6250_call()
call_6454 = func_6250_call()
output = call_6453
output2 = call_6454
func_6456 = relay.Function([], output)
mod['func_6456'] = func_6456
mod = relay.transform.InferType()(mod)
output = func_6456()
func_6457 = relay.Function([], output)
mutated_mod['func_6457'] = func_6457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_6460 = relay.TupleGetItem(func_6286_call(), 1)
call_6461 = relay.TupleGetItem(func_6287_call(), 1)
output = call_6460
output2 = call_6461
func_6480 = relay.Function([], output)
mod['func_6480'] = func_6480
mod = relay.transform.InferType()(mod)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6480_call = mutated_mod.get_global_var('func_6480')
call_6481 = func_6480_call()
output = call_6481
func_6482 = relay.Function([], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6440_call = mod.get_global_var('func_6440')
func_6442_call = mutated_mod.get_global_var('func_6442')
call_6502 = relay.TupleGetItem(func_6440_call(), 0)
call_6503 = relay.TupleGetItem(func_6442_call(), 0)
output = call_6502
output2 = call_6503
func_6521 = relay.Function([], output)
mod['func_6521'] = func_6521
mod = relay.transform.InferType()(mod)
output = func_6521()
func_6522 = relay.Function([], output)
mutated_mod['func_6522'] = func_6522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6564 = relay.var("var_6564", dtype = "float32", shape = (15, 15, 7))#candidate|6564|(15, 15, 7)|var|float32
uop_6565 = relay.sin(var_6564.astype('float32')) # shape=(15, 15, 7)
output = relay.Tuple([uop_6565,])
output2 = relay.Tuple([uop_6565,])
func_6569 = relay.Function([var_6564,], output)
mod['func_6569'] = func_6569
mod = relay.transform.InferType()(mod)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6570 = relay.var("var_6570", dtype = "float32", shape = (15, 15, 7))#candidate|6570|(15, 15, 7)|var|float32
func_6569_call = mutated_mod.get_global_var('func_6569')
call_6571 = func_6569_call(var_6570)
output = call_6571
func_6572 = relay.Function([var_6570], output)
mutated_mod['func_6572'] = func_6572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mod.get_global_var('func_6521')
func_6522_call = mutated_mod.get_global_var('func_6522')
call_6609 = func_6521_call()
call_6610 = func_6521_call()
func_245_call = mod.get_global_var('func_245')
func_250_call = mutated_mod.get_global_var('func_250')
const_6622 = relay.const([5,9,5,-4,2,-2,-1,7,-3,10,9,10,4,2,7,3,7,10,1,1,-1,2,2,-2,4,-6,9,-6,-10,-8,-8,-10,4,1,3,-1,-6,4,6,10,7,2,-2,10,9,-10,2,-5,10,-4,-7,9,1,9,1,-7,7,-6,-10,-4,6,-7,6,5,-6,-10,7,6,3,5,-7,4,-2,5,-7,-10,-5,-1,8,6,8,-9,-7,3,2,-6,10,5,8,-5,-10,-8,-3,5,-5,-7,9,8,-1,-6,8,-4,-1,2,10,4,4,5,1,1,1,10,4,-5,-8,-9,-4,7,-3,-5,-8,-3,9,2,-7,5,-10,9,-3,-10,7,9,4,7,5,-10,-8,-7,-2,6,-3,9,-6,-9,5,9,-9,-5,4,-10,-3,4,-5,10,-4,-7,1,-2,6,-7], dtype = "uint8")#candidate|6622|(160,)|const|uint8
var_6623 = relay.var("var_6623", dtype = "float64", shape = (1800,))#candidate|6623|(1800,)|var|float64
call_6621 = relay.TupleGetItem(func_245_call(relay.reshape(const_6622.astype('uint8'), [5, 2, 16]), relay.reshape(const_6622.astype('uint8'), [5, 2, 16]), relay.reshape(var_6623.astype('float64'), [1800,]), ), 1)
call_6624 = relay.TupleGetItem(func_250_call(relay.reshape(const_6622.astype('uint8'), [5, 2, 16]), relay.reshape(const_6622.astype('uint8'), [5, 2, 16]), relay.reshape(var_6623.astype('float64'), [1800,]), ), 1)
var_6627 = relay.var("var_6627", dtype = "bool", shape = (4, 3, 8))#candidate|6627|(4, 3, 8)|var|bool
bop_6628 = relay.mod(call_6609.astype('float32'), relay.reshape(var_6627.astype('float32'), relay.shape_of(call_6609))) # shape=(4, 3, 8)
bop_6631 = relay.mod(call_6610.astype('float32'), relay.reshape(var_6627.astype('float32'), relay.shape_of(call_6610))) # shape=(4, 3, 8)
func_6114_call = mod.get_global_var('func_6114')
func_6118_call = mutated_mod.get_global_var('func_6118')
const_6635 = relay.const([True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True], dtype = "bool")#candidate|6635|(468,)|const|bool
call_6634 = relay.TupleGetItem(func_6114_call(relay.reshape(const_6635.astype('bool'), [4, 13, 9]), relay.reshape(const_6635.astype('bool'), [4, 13, 9]), ), 1)
call_6636 = relay.TupleGetItem(func_6118_call(relay.reshape(const_6635.astype('bool'), [4, 13, 9]), relay.reshape(const_6635.astype('bool'), [4, 13, 9]), ), 1)
func_4431_call = mod.get_global_var('func_4431')
func_4438_call = mutated_mod.get_global_var('func_4438')
const_6638 = relay.const(-10, dtype = "int8")#candidate|6638|()|const|int8
const_6639 = relay.const([[9],[6],[-8],[-6],[-10],[6],[2],[-3],[7],[5],[8],[-10],[-7],[8],[8],[-8],[9],[-4],[10],[-9],[6],[-6],[3],[5]], dtype = "int8")#candidate|6639|(24, 1)|const|int8
const_6640 = relay.const([-6,4,-9,-8,8,2,-4,9,7,-7,-2,4,-3,7,7,-8,10,10,2,-10,-3,-6,3,-4,-7,-1,-5,-4,3,8,1,2,9,5,-9,4,7,-10,7,1,4,10,-8,-2,8,-9,-8,-4,-5,10,4,-8,6,-9,2,5,-3,-9,-3,-10,-1,-2,1,5,5,-2,9,-7,-9,-8,-8,9,1,-2,9,5,-2,10,-5,9,-2,6,-2,8,1,2,-8,1,-1,4,-5,-9,-8,-10,3,2,10,-7,-2,4,1,-3,9,8,6,-9,5,-10,6,-7,-9,6,-8,4,10,-5,5,9,1,3,3,10,9,-10,-10,-8,5,-10,9,-5,1,-9,8,-2,7,-6,-7,-6,-6,5,-1,-5,-9,1,1,6,-6,10,-2,4,-8,-10,9,-3,-10,3,3,10,-4,-9,-7,-7,-1,6,9,-5,-10,-10,-10,-6,-1,-4,6,6,4,-5,4,3,-8,1,9,-2,2,10,7,4,2,2,-3,9,6,8,3,5,10,-7,-5,-10,1,1,-7,-5,7,8,-10,9,9,5,-9,-3,8,10,9,2,-1,7,10,-6,3,-6,8,-8,3,1,6,10,4,-9,1,4,-4,7,-4,8,-6,-10,-8,-3,2,2,8,3,-4,-4,4,7,8,2,7,-1,4,7,-10,4,4,1,10,3,-8,10,-4,10,9,8,-1,8,10,7,10,5,9,-8,-2,4,-8,2,9,8,5,7,2,-3,-3,-4,4,-8,7,-10,7,-9,-8,8,4,-9,-9,6,2,-8,10,9,-3,-6,1,7,2,2,6,9,-8,-10,-3,-10,6,1,10,-9,-6,-3,-1,-6,8,-2,2,6,-10,-6,-3,-9,6,4,-1,-1,9,8,6,-4,-4,9,-8,5,-1,2,-7,2,2,-1,10,9,-6,1,1,-4,-2,2,-8,-9,-7,-3,-1,-10,-1,-5,1,-10,1,8,-7,-8,7,-10,-6,-4,-9,7,-1,4,-8,-3,-2,-7,-6,-6,9,-1,-5,-1,-9,4,-3,-9,-10,6,-3,6,-4,10,-7,-5,4,3,9,10,1,8,-7,-8,-2,-2,3,-10,-2,-9,1,-7,1,4,-6,-8,10,-2,-2,3,-5,7,-4,9,1,7,3,5,-6,4,3,10,5,-10,4,-9,8,-1,6,8,-7,7,9,-5,-1,6,8,-7,9,10,-1,-2,-8,1,2,-1,-4,-2,2,-7,-4,-9,8,5,-3,1,-7,-3,8,1,3,3,-2,-2,10,-7,2,-7,2,-10,-9,1,5,-1,7,-3,3,2,10,-2,-3,3,7,-8,3,5,8,-8,-1,-6,-2,-1,-6,4,6,4,-5,5,-6,10,-2,1,-3,4,1,-2,-8,10,5,8,10,-1,1,-4,10,8,2,-3,-10,9,-5,-4,6,-9,-10,2,-10,-2,10,8,3,-1,5,10,-1,7,-3,-2,-7,-2,7,4,9,-8,5,9,2,-2,6,-2,-2,6,2,-6,9,3,-4,-5,4,-1,7,-6,10,6,10,6,9,-7,9,9,3,-6,-10,9,-4,4,10,2,5,-7,-8,-7,4,9,1,-3,-9,-1,-2,4,1,-7,7,3,9,-9,5,-5,3,-4,3,7,8,2,10,-4,-3,4,-10,4,-8,-6,8,-4,7,-5,5,2,-2,1,-10,3,-8,5,-3,-7,9,-8,9,10,-9,-6,-7,-10,-5,-8,-8,2,7,3,-6,3,-6,-4,2,-10,-7,7,-7,2,8,10,-1,1,10,10,-4,1,3,-2,-7,7,-9,7,-1,-1,-9,4,-5,-1,-7,-9,3,1,-5,-4,5,6,6,-3,4,-4,7,6,3,7,8,2,-7,-1,6,-5,-7,-9,6,-7,-8,-7,1,6,-1,-3,-8,2,8,8,-9,6,-3,8,-7,-2,-6,-9,-2,-10,-10,2,9,-5,-9,10,-5,-5,-1,10,8,2,-10,-2,10,5,-6,-9,-3,10,7,-2,-6,3,-10,5,4,3,-10,6,6,9,-2,-4,5,9,-6,8,-9,-9,-1,-6,-2,9,-3,-4,-8,-10,-3,7,10,4,8,8,-1,6,-1,-5,1,-7,-10,-3,3,-1,10,8,6,6,4,-1,10,6,-10,-6,-6,-5,-3,-5,4,5,-3,-3,-5,-3,10,-3,-3,-4,2,4,-1,4,-1,-2,-4,8,2,-8,-10,-5,7,3,-8,5,-4,-6,9,-1,-9,-7,2,2,-7,-10,-3,7,4,4,-4,-2,7,5,9,8,9,-3,-1,4,7,-2,8,4,7,5,-4,-2,-8,9,-3,5,2,-4,5,8,-9,-4,-10,-2,-4,-8,6,9,7,1,-5,-1,-6,-10,2,-3,-10,9,-5,9,-9,-8,-9,1,7,5,10,-10,10,9,10,2,-1,4,-3,5,-9,9,10,-1,1,8,1,-8,-10,4,9,1,-8,-5,-5,-3,3,-2,1,9,-9,-3,-7,-3,8,-6,-3,6,-2,-4,-1,-3,10,-7,-1,3,7,2,7,-10,3,1,-5,-1,9,-7,-2,-5,8,-3,10,8,-2,-3,6,-5,1,8,4,-4,3,-3,2,9,-2,8,10,1,-8,2,-10,-6,-10,9,-2,-7,4,1,-10,7,-5,-5,-5,-7,-3,-9,-4,3,7,-10,-5,-5,-10,5,7,3,-9,6,-5,6,-2,8,-10,-1,-3,8,-1,6,-1,3,-3,1,5,7,-10,7,-10,9,-7,8,3,-7,9,10,-4,-10,-9,2,-6,-3,2,10,4,1,-10,-3,-7,1,-6,7,-2,-9,-6,5,2,10,-8,7,8,3,-8,-10,7,-10,2,4,-2,7,6,10,1,-1,8,3,5,-5,2,-6,7,-3,1,5,10,1,-5,3,1,-5,1,7,3,9,-7,8,2,5,9,-9,1,7,3,1,6,-2,-3,-5,1,4,10,4,-3,7,10,-3,8,-6,-9,-4,3,4,-7,4,4,7,-2,-7,-1,-9,10,1,-1,8,4,-5,-8,-4,-7,-4,-10,4,-4,-7,3,6,-7,3,4,7,3,-4,10,-7,-8,-7,-2,10,-2,-10,4,-10,1,-10,5,2,1,1,5,8,7,-4,8,4,3,-5,-10,-10,8,-5,-7,-3,2,-2,9,2,7,6,10,-3,6,7,-3,-8,-9,8,-9,-6,4,-9,8,-3,-7,-10,1,-9,-1,6,5,7,-6,-2,7,-7,6,5,9,-8,-9,5,-2,-8,1,1,7,-2,4,-5,1,-1,9,-10,-4,-5,7,-2,4,-5,5,3,-3,-4,-8,-5,2,-6,2,7,4,-8,6,3,-1,7,4,7,-8,6,9,-6,9,-9,-8,6,2,7,5,10,-8,-9,10,4,6,-3,-1,-3,-1,-3,3,-10,-5,-3,-7,-6,1,-1,-3,6,-5,4,7,8,2,-6,-1,9,5,8,-6,-9,10,-5,-5,2,-1,-7,4,8,-9,10,-3,7,1,-2,-10,4,-2,-2,-2,-8,3,-5,3,4,10,-1,2,-2,3,-2,6,-2,-4,7,1,3,5,10,1,-9,7,-3,7,-6,1,5,3,-8,-4,-5,2,-8,5,-4,-3,7,-2,2,10,-2,-5,8,4,7,3,-10,9,2,9,2,9,-5,2,2,5,-2,-9,-8,-6,-9,-6,-4,1,3,-3,6,-4,5,-8,9,1,4,2,2,-7,-7,-4,-2,-8,-6,9,5,3,-1,-6,-4,2,6,-2,-1,1,-3,-10,1,1,-1,1,4,-3,-5,-5,-6,1,-2,10,1,3,8,3,3,7,4,9,10,-3,3,-7,9,-10,-8,-6,4,7,5,9,1,4,-4,3,5,2,-8,-8,7,-7,10,6,-5,6,-10,-7,-3,-8,4,-2,1,-8,2,-7,-3,4,10,-7,-2,2,-10,-6,-2,1,-10,-6,8,10,-7,1,-3,-1,-6,5,-3,-3,-10,7,5,-9,-4,4,6,-4,-2,2,9,-6,4,-4,-10,2,-5,-1,1,-5,-2,7,-4,-2,-5,10,8,10,7,10,8,-7,-3,5,-6,-6,-7,8,-5,8,3,-5,-1,-4,6,6,-6,-9,1,10,4,8,3,5,-6,-10,-8,-1,-10,9,-9,-2,-10,-3,-6,-8,10,-2,-2,1,-9,-9,5,-7,-7,1,-3,-10,-5,-6,5,-1,-10,10,-1,1,3,6,10,-3,10,-4,6,-10,8,-3,-7,-9,-9,-10,9,8,-1,-10,-8,9,-8,4,8,6,-7,-8,5,-3,6,5,-7,9,-7,-1,3,-4,-5,-6,10,9,-1,2,-6,-10,-10,-10,-6,-5,2,-10,7,8,4,-5,6,-2,2,-2,-2,-1,-5,-9,3,-8,9,-2,3,6,-3,-4,6,-5,3,-5,10,-5,-8,-8,8,8,3,2,9,5,-3,-3,4,-7,7,-10,-9,-2,1,2,3,7,-7,1,-10,-9,5,4,-2,-4,5,6,1,3,-7,3,4,-5,2,-8,-4,7,-1,-7,-10,-3,-7,8,-6,-1,-7,-10,-8,-1,-3,-3,8,-6,-1,-3,6,-7,-3,-2,-10,-10,9,10,-7,8,-10,8,-2,-6,-7,-7,2,-5,-1,-4,10,-9,-5,6,10,5,6,-9,-8,-5,-3,-8,-6,-2,10,7,-3,8,-5,-4,-10,-4,-2,7,7,7,-2,-7,-9,-5,-8,-8,-9,8,3,-9,-1,-9,4,-5,10,1,10,-2,8,10,10,-6,6,-4,-8,-4,-6,3,1,-2,-3,-2,-10,2,2,3,-1,4,3,-10,1,-1,5,8,4,-6,3,-8,2,3,5,7,-5,5,9,10,-7,8,4,1,-5,5,-7,-3,6,-5,1,6,3,5,-9,1,-5,2,-4,-9,10,-7,8,7,5,4,-4,-10,-4,-6,-10,-8,5,-6,1,-7,3,9,5,5,6,4,2,4,10,6,6,-7,-4,-7,2,7,10,-7,1,-5,-3,-6,4,10,1,-8,-10,5,9,10,-8,7,4,-4,-7,-4,7,-5,2,-7,-1,-10,-9,6,9,-1,4,6,5,-5,-9,5,8,9,7,-3,-2,-9,7,2,3,6,5,-7,4,-3,10,-10,-7,-10,-8,3,7,-2,-9,-2,-8,-10,-2,3,9,-8,-1,-1,9,3,6,9,7,-8,6,9,-10,-8,5,8,-7,-7,7,9,7,3,-9,7,-4,4,-6,-5,-1,-9,-4,4,-3,2,-7,6,-4,-9,3,-10,-10,-6,-7,-5,4,7,-8,1,-10,-1,-5,-4,8,-3,1,10,8,-10,-9,-5,6,2,3,-9,-8,1,-9,-4,10,10,3,-3,-5,9,-5,-8,-4,-8,6,1,8,-9,7,-4,3,8,-3,10,-3,2,3,10,-10,6,4,10,-7,6,2,-3,-5,2,2,-6,1,3,-9,3,1,-5,-5,6,-6,10,-4,5,-5,-9,-1,2,-4,7,-7,-5,8,-3,7,-6,2,10,-8,7,-2,-2,1,4,-8,1,9,-4,-5,1,6,4,-3,4,-1,-5,-7,-5,-1,-4,-10,-6,10,-8,-9,-9,-4,3,-1,-9,1,-3,-2,-7,-7,-4,7,-6,2,-3,10,-5,7,2,-8,10,8,6,-2,-5,-7,6,8,2,-5,-10,9,9,-5,3,5,-1,-7,-3,3,9,-6,3,-8,-4,9,8,-7,-3,-10,-6,-10,-8,-5,9,8,7,5,-7,-2,-6,3,9,10,4,10,5,-8,-8,-5,-10,-5,8,-6,2,6,-1,1,2,-3,1,8,-3,10,-9,8,-9,-6,-4,-10,10,-6,6,2,1,4,-9,2,7,5,7,5,10,-3,-4,3,-8,7,-8,-1,2,-3,-6,-5,6,-10,7,1,1,-2,-8,10,-3,1,6,4,-7,-1,1,7,7,-4,-7,2,10,4,8,-3,3,-6,-4,-6,-7,-6,-4,8,2,-8,9,-8,5,-5,8,-5,2,9,-2,-6,4,9,-5,-9,-1,8,6,-8,-10,3,-1,-8,-2,8,9,-6,8,-1,4,-1,-7,-4,-9,-4,-7,6,7,-10,8,-6,-4,2,-6,6,-2,-7,-8,-2,5,-5,-4,10,-2,2,-8,8,9,-3,-2,-6,-6,3,-4,-2,-4,-1,7,-10,2,10,10,-4,-8,5,8,4,6,9,-6,-1,7,9,-5,-2,10,-7,-7,-1,-9,-5,-10,2,-8,-8,-1,5,10,1,-2,2,-2,4,1,-4,-2,9,10,7,-2,2,-3,3,-8,1,-5,4,4,-9,-1,-5,-4,4,6,1,6,3,-8,-5,1,8,8,5,10,-7,9,-6,8,8,-3,4,-2,-1,5,9,-3,-4,-9,-5,5,1,-5,6,7,9,-2,-1,2,-5,1,5,-10,-7,7,9,-3,5,-7,3,-4,-6,-5,-9,3,6,-7,-8,-9,8,-6,-10,-9,-8,6,2,4,-6,-9,8,10,-5,-6,-6,7,-2,2,3,5,-8,3,-10,-2,-5,-3,2,-8,2,10,-10,-1,10,-4,-3,-4,-1,2,1,-2,-6,9,8,-5,-3,8,1,-8,1,4,5,6,5,1,-4,4,8,8,-3,8,-7,1,-4,-9,-5,10,4,-5,-5,-5,-7,-9,-2,-3,-9,3,5,-3,5,5,-8,-7,10,9,10,4,-5,-4,-9,4,-6,-3,-10,-4,-10,-2,-4,1,5,-9,8,-2,-6,9,-3,-3,-9,2,5,-2,-4,3,7,4,-6,5,-8,-4,-3,-2,-8,-7,-3,6,-6,-3,7,10,10,4,-9,-9,-7,-3,-7,-7,2,-6,5,-3,2,-1,1,-3,-7,8,-7,3,1,-4,-3,-5,-7,1,3,-10,9,-6,-5,3,9,6,-10,9,6,-10,-8,-5,-8,-6,-10,9,-8,-2,-5,4,8,-9,-10,-10,4,7,-8,7,-9,-8,9,-8,2,1,5,-1,-5,5,-9,-4,-6,-6,-1,2,-6,-9,-10,4,-7,1,-10,8,3,3,-8,-8,5,-1,-9,-8,-3,-9,-4,-5,10,4,8,-5,3,6,4,8,-8,-8,1,-1,3,-9,5,-7,-2,4,2,3,-9,9,-1,-5,-3,5,8,-10,5,9,3,-4,-8,-7,10,-6,-6,-2,-1,7,9,9,9,-10,9,6,-7,9,9,-6,5,-7,6,-10,-8,10,-1,7,-10,-4,-8,3,1,1,-7,10,-6,2,8,-10,3,6,-10,-3,3,9,10,-7,3,2,2,3,10,-3,-9,5,-4,5,-5,4,8,9,5,-10,3,-10,3,-6,-7,1,1,-8,-8,-9,-3,-3,6,10,8,-10,1,10,1,7,3,8,4,1,10,9,2,-6,-3,-10,6,4,1,-9,9,2,4,8,-5,1,8,9,-1,-8,1,5,-1,-3,4,5,-10,5,-9,3,1,-1,4,-9,-7,9,-7,5,5,10,-4,1,4,-7,1,8,3,-1,9,4,-6,-6,-9,-1,-1,-4,-4,8,-2,-2,4,-5,7,-6,5,-4,4,2,-3,8,3,-8,6,6,8,1,6,-8,1,3,3,6,9,3,-2,3,-2,2,-6,7,6,7,7,7,1,-3,7,-4,-9,8,7,-7,-4,-10,-7,6,7,7,1,4,-4,-8,8,9,8,-9,1,-5,-6,7,2,-7,1,4,8,5,7,-2,5,2,-1,8,8,-8,10,8,-1,2,-10,5,6,-9,3,-8,7,2,3,-9,-5,5,-2,-9,9,8,-2,9,-3,1,-4,-2,10,-8,-6,-4,-3,8,4,-2,-9,-4,3,8,-4,2,9,8,10,2,2,-6,-7,-10,-10,-3,3,9,-3,-2,8,-6,9,-6,-9,-4,-4], dtype = "uint32")#candidate|6640|(2940,)|const|uint32
const_6641 = relay.const([[7],[-4],[4],[-6],[-3],[-6],[3],[7],[8],[-8],[10],[2],[1],[-3],[-9],[6],[5],[-10],[5],[3],[-7],[6],[2],[10],[9],[-2],[5],[5],[9],[6],[2],[-8],[3],[5],[4],[-3],[4],[10],[7],[7],[-9],[-2],[-4],[-10],[-6],[-5],[-10],[5],[-2],[9],[-6],[-4],[-6],[-8],[6],[6],[4],[-10],[7],[-5],[6],[-1],[-4],[-10],[-5],[-10],[-3],[-3],[9],[-3],[-9],[-2],[7],[5],[-10],[6],[10],[-2],[2],[-9],[-1],[9],[-3],[5],[6],[-1],[-7],[7],[-3],[-7],[-3],[-8],[-10],[7],[10],[-8],[5],[5],[10],[4],[-7],[10],[-5],[9],[1],[10],[-1],[-7],[7],[-3],[-2],[-10],[-8],[6],[8],[-3],[-4],[1],[2],[-7],[6],[-7],[4],[-7],[7],[-1],[-1],[-7],[9],[-9],[5],[2],[-7],[-9],[2],[1],[1],[-2],[1],[-9],[-9],[9],[-3],[-1],[2],[-9],[-1],[4],[-5],[6],[9],[3],[5],[-9],[7],[7],[6],[6],[-4],[2],[-4],[-3],[-4],[-3],[-2],[-4],[6],[2],[-5],[10],[-7],[-7],[-4],[-4],[9],[-4],[-9],[-8],[-4],[1],[1],[6],[3],[9],[-9],[9],[5],[-10],[-9],[9],[10],[-1],[-2],[1],[-3],[3],[-10],[-1],[7],[2],[-8],[-1],[-8],[-4],[-5],[7],[8],[-4],[8],[-8],[10],[4],[10],[-2],[3],[4],[-6],[6],[8],[-3],[5],[-8],[-7],[-5],[2],[5],[-5],[-3],[-4],[4],[10],[1],[-5],[-1]], dtype = "int8")#candidate|6641|(234, 1)|const|int8
const_6642 = relay.const([0.870809,2.993404,1.612368,7.553391,-9.183587,2.451534,-0.443487,3.962515,-7.922632,6.777239,3.426097,-7.536538,8.047610,5.246234,-6.737521,3.483704,-0.886886,3.798106,-4.917189,1.376362,6.338655,5.725332,-0.238209,9.010269,9.676079,-3.582956,7.422385,5.472419,8.313840,1.596734,-9.893437,2.706359,1.208404,-7.171603,8.249952,-9.515488,7.277600,-8.941285,-8.783710,-7.986428,-3.396193,-6.895821,-3.270976,-4.075260,-7.524020,8.507272,-4.697900,-8.912128,9.541693,1.048333,-3.940505,-6.036825,2.286594,9.494101,-5.862595,4.496855,-9.713599,-3.076613,-0.868164,-2.358187,-2.530664,3.192094,0.222153,-3.145719,-0.556714,2.772614,-7.408620,-3.064553,8.520279,6.125757,-7.837393,-4.645267,9.847556,9.762340,-1.326692,-9.240249,8.479354,6.975672,9.453155,1.574052,-0.915675,9.281569,-7.243461,-2.470987,5.415342,-6.566256,0.386299,7.607217,2.719783,-6.752865,-5.066645,5.139209,-7.927718,-0.514034,-1.480459,8.649234,0.723995,5.421441,7.018440,4.819736,-8.765182,-3.566954,-4.956294,-6.486719,-9.211535,5.607055,1.168354,-3.975550,-6.010283,-3.226292,-2.329641,9.457067,-6.228327,-9.621715,-6.504871,-4.461524,1.214655,-2.348423,-2.591020,9.662018,2.121623,-1.169132,0.077024,-4.354506,7.290203,0.898258,9.501255,5.826277,4.073766,6.957114,6.258160,-1.588577,-6.371039,7.112413,4.797851,0.280822,8.142044,-9.833310,-9.365591,-7.870356,5.078173,9.542949,-7.612359,-1.532058,-7.700685,-7.528599,8.475570,-1.902657,7.055699,2.009340,9.036902,-0.948368,-6.233174,0.912355,0.935783,-5.909788,6.141182,6.584887,2.666587,-2.571523,7.258292,2.324972,1.473440,-0.304460,1.816623,-9.368972,-8.560084,-6.412079,7.445768,8.657007,9.983841,3.102118,-7.454698,6.853928,-6.108267,1.443752,-5.420744,-1.373728,1.632578,-3.965220,-4.914704,1.876612,0.368998,6.084355,6.607435,-8.463669,2.688111,-1.123182,-5.779419,6.277203,0.006955,6.338114,5.538860,5.412269,-5.161557,-3.894352,-6.116870,-9.988925,5.853640,-0.020854,-8.060228,2.141923,-3.443866,9.238739,6.874135,6.725282,-7.979991,-8.765048,7.068675,-1.366998,-5.865000,-8.263671,-1.566802,-2.442287,3.673935,-0.394962,6.919723,9.889714,0.164615,7.990443,8.968615,6.642496,0.239233,1.642459,-6.505354,-8.814748,-0.556519,3.423007,2.099476,-8.515019,7.486191,1.354352,5.418836,-6.063553,5.258296,1.835246,7.623986,-1.534184,1.320325,0.100876,1.839822,-2.182801,-9.477714,-4.926065,7.992133,-7.587426,-8.195478,-6.083720,-3.127028,-1.161225,-5.268983,-6.664130,7.684620,-0.747525,6.590616,-9.404247,7.406924,-0.519750,-0.368454,-7.027144,-3.684218,-0.775690,-2.245951,-3.495424,-4.102048,-3.385214,-8.985122,-2.252691,-7.926903,-8.025395,-9.245041,-4.159133,6.867192,7.343892,-4.349217,-8.451140,8.049498,9.614456,0.147642,-5.195098,-6.123626,-6.827388,-5.535793,-3.990245,8.794271,-6.533316,7.841484,7.058628,5.486400,7.421154,-8.843707,-8.558009,-6.021459,1.986609,6.302959,9.130042,8.604618,7.887223,-4.328465,-4.502634,-1.084270,4.830203,5.901527,4.370878,-9.767626,-5.182484,-2.368527,-8.551464,-6.591334,-4.185906,3.825171,-9.811740,5.294273,-9.870040,2.234642,3.578002,1.420546,-4.834234,2.890100,-3.286878,-8.847048,6.438794,4.999803,9.914666,6.494322,-6.763423,-3.636382,6.322422,-6.649800,0.673045,-1.328147,8.613022,-9.469378,0.822560,2.066412,6.596800,-4.552836,-6.090993,-1.324971,-4.503681,9.294562,-1.582253,1.441247,4.086569,-4.473594,2.867728,3.032650,-0.893520,-3.211012,-8.574536,7.686540,5.279086,-9.845950,-2.789486,-4.484880,-6.836519,3.189423,3.482872,8.314051,-6.997602,0.817078,-4.486668,-6.209586,-5.767657,-5.712749,5.144472,-9.909306,-1.819449,-4.711216,7.233228,5.490744,8.223973,6.922392,5.365046,0.625529,-3.859695,2.223574,-6.485227,3.977381,2.489837,5.179947,-2.640613,1.492811,-8.176639,4.584286,-9.813021,9.723954,9.213014,-6.109198,5.960119,-0.783574,4.649862,2.341197,0.747704,-5.444146,-6.551682,6.284991,-9.304537,7.606182,0.447350,-9.665891,1.123650,1.154156,-1.997744,8.880966,4.127480,2.443828,-2.557466,-1.785345,-0.953373,-4.164713,-6.201003,8.615685,-4.114748,2.401647,8.496118,-7.663070,-0.905640,1.103469,7.798662,-3.162125,-2.444903,4.947756,-7.546283,-1.187037,1.102095,-8.185706,6.776105,-1.531025,-0.342942,8.705429,1.040918,7.610327,7.400593,5.999086,7.936256,1.597401,1.912413,-4.605576,0.754824,-7.089943,5.468551,-6.418052,-4.632944,7.176959,9.191638,-9.285764,-3.314197,-2.442041,-9.542262,-2.983380,3.845667,5.854587,8.832700,1.740747,8.644812,9.744959,-5.681097,6.527046,-7.449536,8.222102,4.380484,-8.369632,0.909355,9.724492,-2.147276,-9.000758,6.257134,8.725283,5.022910,0.484212,-8.551269,-9.471790,1.977768,-4.188381,-4.317976,5.027783,8.545045,0.425760,-1.436642,3.535956,-6.426678,-8.673176,7.791270,-0.485962,-6.742177,7.151683,-3.544520,2.020102,8.015641,1.024759,-8.422119,8.403707,5.544902,-3.258950,7.744270,-2.656956,5.552396,-3.718888,-3.753652,-5.810928,-6.784513,-0.202677,6.503758,-6.417644,8.896927,-9.154320,-4.995051,6.184167,-6.955217,3.276667,7.534521,0.412236,8.744571,-6.455624,5.556205,-1.491246,-7.969113,-7.044127,1.539703,5.261116,8.026129,-8.570499,3.394190,6.922997,9.426293,-5.823988,-0.745431,-4.941616,1.804504,-0.467980,4.665617,-4.550547,4.167377,3.384398,-8.154496,7.498537,-1.699373,2.716166,1.069526,9.453683,-3.664271,-3.717487,2.445987,-5.042317,8.913575], dtype = "float64")#candidate|6642|(546,)|const|float64
call_6637 = relay.TupleGetItem(func_4431_call(relay.reshape(const_6638.astype('int8'), []), relay.reshape(const_6639.astype('int8'), [1, 3, 8]), relay.reshape(const_6640.astype('uint32'), [30, 98]), relay.reshape(const_6641.astype('int8'), [234,]), relay.reshape(const_6642.astype('float64'), [91, 6]), ), 5)
call_6643 = relay.TupleGetItem(func_4438_call(relay.reshape(const_6638.astype('int8'), []), relay.reshape(const_6639.astype('int8'), [1, 3, 8]), relay.reshape(const_6640.astype('uint32'), [30, 98]), relay.reshape(const_6641.astype('int8'), [234,]), relay.reshape(const_6642.astype('float64'), [91, 6]), ), 5)
func_6185_call = mod.get_global_var('func_6185')
func_6186_call = mutated_mod.get_global_var('func_6186')
call_6645 = func_6185_call()
call_6646 = func_6185_call()
output = relay.Tuple([call_6621,const_6622,var_6623,bop_6628,call_6634,const_6635,call_6637,const_6638,const_6639,const_6640,const_6641,const_6642,call_6645,])
output2 = relay.Tuple([call_6624,const_6622,var_6623,bop_6631,call_6636,const_6635,call_6643,const_6638,const_6639,const_6640,const_6641,const_6642,call_6646,])
func_6658 = relay.Function([var_6623,var_6627,], output)
mod['func_6658'] = func_6658
mod = relay.transform.InferType()(mod)
var_6659 = relay.var("var_6659", dtype = "float64", shape = (1800,))#candidate|6659|(1800,)|var|float64
var_6660 = relay.var("var_6660", dtype = "bool", shape = (4, 3, 8))#candidate|6660|(4, 3, 8)|var|bool
output = func_6658(var_6659,var_6660,)
func_6661 = relay.Function([var_6659,var_6660,], output)
mutated_mod['func_6661'] = func_6661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6250_call = mod.get_global_var('func_6250')
func_6252_call = mutated_mod.get_global_var('func_6252')
call_6678 = func_6250_call()
call_6679 = func_6250_call()
output = relay.Tuple([call_6678,])
output2 = relay.Tuple([call_6679,])
func_6687 = relay.Function([], output)
mod['func_6687'] = func_6687
mod = relay.transform.InferType()(mod)
output = func_6687()
func_6688 = relay.Function([], output)
mutated_mod['func_6688'] = func_6688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_6773 = relay.TupleGetItem(func_5806_call(), 0)
call_6774 = relay.TupleGetItem(func_5807_call(), 0)
output = call_6773
output2 = call_6774
func_6779 = relay.Function([], output)
mod['func_6779'] = func_6779
mod = relay.transform.InferType()(mod)
mutated_mod['func_6779'] = func_6779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6779_call = mutated_mod.get_global_var('func_6779')
call_6780 = func_6779_call()
output = call_6780
func_6781 = relay.Function([], output)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_6787 = func_5694_call()
call_6788 = func_5694_call()
output = call_6787
output2 = call_6788
func_6794 = relay.Function([], output)
mod['func_6794'] = func_6794
mod = relay.transform.InferType()(mod)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mutated_mod.get_global_var('func_6794')
call_6795 = func_6794_call()
output = call_6795
func_6796 = relay.Function([], output)
mutated_mod['func_6796'] = func_6796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_6797 = func_5694_call()
call_6798 = func_5694_call()
output = relay.Tuple([call_6797,])
output2 = relay.Tuple([call_6798,])
func_6801 = relay.Function([], output)
mod['func_6801'] = func_6801
mod = relay.transform.InferType()(mod)
mutated_mod['func_6801'] = func_6801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6801_call = mutated_mod.get_global_var('func_6801')
call_6802 = func_6801_call()
output = call_6802
func_6803 = relay.Function([], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_6804 = relay.TupleGetItem(func_5806_call(), 0)
call_6805 = relay.TupleGetItem(func_5807_call(), 0)
func_1884_call = mod.get_global_var('func_1884')
func_1888_call = mutated_mod.get_global_var('func_1888')
var_6807 = relay.var("var_6807", dtype = "uint64", shape = (378,))#candidate|6807|(378,)|var|uint64
const_6808 = relay.const([5,8,5,-5,-2,6,3,-5,-6,-3,5,2,3,8,-5,1,-2,5,-9,-2,9,6,-9,-8,-10,-7,2,8,1,7,-9,-5,-7,10,5,8,-3,-7,-5,-7,-5,9,-4,-7,5,1,4,4,-10,-9,8,10,-4,-2,-1,-6,-3,-6,-4,-4,-6,-2,2,-4,-10,-9,2,10,6,7,-10,4,7,-2,2,9,-10,-10,7,-9,9,-7,-9,9,10,-5,-6,-6,8,4,-4,9,4,-6,-3,9,-5,5,5,9,9,-8,2,9,-1,-1,-8,9,-2,-4,-2,-9,1,-10,5,4,5,8,-7,9,-2,3,3,-1,-8,9,9,-8,-9,9,-10,-9,-4,-2,6,8,-4,-7,4,-1,4,-6,-8,-5,1,-3,6,5,1,-10,-1,-6,-1,3,2,2,3,-10,10,-6,-9,3,-2,-5,8,-1,-6,-5,9,-2,9,8,-2,1,-6,-5,9,-4,6,6,-7,-2,-6,-7,2,-8,5,-5,6,9,6,-1,-1,5,-4,-1,10,1,-8,-2,10,-5,8,4,-7,-10,-6,-7,-5,2,5,-2,7,-2,-6,9,-4,2,4,6,8,2,6,-9,-2,-4,-6,-4,2,8,-10,-3,-1,6,3,-5,-9,-5,6,6,6,-7,-6,5,-8,-5,2,-5,-5,6,-5,8,-10,9,-6,-6,-4,-7,3,-10,5,-1,5,9,7,9,10,5,2,-6,8,-3,4,-7,-9,9,-4,2,6,-1,-9,-6,10,9,-7,10,-8,10,-2,10,-3,7,1,7,3,2,-10,10,-2,-2,3,-4,7,-2,10,2,3,3,9,1,9,3,-4,9,-4,-2,-5,10,10,-2,-4,-8,-4,-2,10,-6,-9,-8,3,-6,8,-4,6,-4,-5,-9,-9,-9,7,-5,-5,5,9,6,1,-9,-9,2,8,-2,-2,-6,-7,3,6,-10,-10,-4,10,-3,1,-10,8,8,7,10,2,-2,3,-4,5,10,10,-6,-4,-3,-10,5,-6,3,2,5,-3,4,2,3,-1,5,-6,4,-10,3,2,8,-3,-1,6,9,-3,-5,1,4,-2,-5,-2,8,-8,1,-1,5,-2,8,-2,-9,-2,-2,4,-6,7,-5,-2,8,-4,-9,-10,8,3,-3,-3,-2,7,-7,-1,7,4,-4,5,-6,5,-3,-10,-8,-6,-9,-3,3,4,1,5,-3,2,-5,1,7,7,-10,2,9,9,9,9,-2,-4,-10,4,7,-1,4,-4,-10,2,7,10,-4,-3,2,6,5,-8,-10,8,-10,-2,3,-7,6,-2,7,-6,-4,-5,1,10,-5,2,-3,-5,-9,9,-2,4,-8,-10,2,-6,-6,-3,-4,4,-3,7,7,1,8,10,10,7,-2,-3,-2,3,1,5,-8,7,5,9,3,-10,4,2,-5,10,-5,-4,-3,4,-2,1,10,-1,-1,9,-2,6,8,-10,6,-2,4,-7,4,2,2,6,-3,-9,9,8,-4,9,-10,-8,-8,7,-8,-10,-8,8,8,-6,-1,5,10,3,-6,7,-9,4,5,9,8,6,2,9,-8,-2,7,-8,9,-10,-2,-4,-4,-10,2,4,9,-7,4,2,1,10,1,5,-9,-6,-4,2,9,-8,-1,8,-2,2,10,-9,-10,-9,9,1,-10,7,-7,3,2,6,4,5,10,-6,-3,-1,6,-6,-3,10,-5,-7,-9,10,-4,7,4,-5,-1,-5,8,9,-8,-8,5,-6,7,5,-8,9,3,9,8,-2,-7,-3,-6,6,9,-9,-1,5,10,6,-6,9,9,-9,-2,-5,-9,-1,-1,1,2,-4,-4,-3,-10,-4,1,8,-9,-8,7,9,10,-2,-10,2,-2,-5,7,3,-6,-6,8,9,-10,-10,10,4,1,2,-9,-3,1,9,7,-7,-7,-2,-6,4,-7,2,4,-7,10,-8,4,-1,-3,-4,10,-5,-6,-4,7,-6,-2,2,-2,3,-8,2,4,8,-4,8,-8,3,-8,-4,-4,-1,-9,-4,-2,5,-10,4,10,9,-6,8,-8,6,7,-2,10,-9,6,10,-10,10,1,4,-7,7,-10,7,-5,7,-5,-3,4,-6,7,10,10,-9,-3,-4,6,4,-6,5,4,-3,10,-3,-10,-5,-4,6,5,7,-8,8,2,-9,3,-10,-7,5,1,-4,-7,-7,3,5,9,-8,4,-1,8,-5,-6,-7,9,10,9,10,2,7,3,5,-5,-10,-9,-3,3,-9,4,1,9,3,5,4,-5,7,2,-1,-5,5,-2,-4,-8,-3,10,-8,-7,-6,6,-2,-2,8,-10,-2,10,10,4,8,-8,6,4,8,-5,-4,8,-2,6,4,-9,-1,-2,2,7,-9,10,5,-9,7,-1,5,-8,8,6,-10,-8,7,-3,7,-10,5,4,-6,-6,7,6,7,-8,10,8,-3,10,-6,9,-3,2,9,-1,-10,-9,-4,-8,1,-5,2,-2,10,2,-6,-1,-10,-10,-10,-3,8,7,7,3,3,-10,1,-9,5,-7,4,2,5,-2,-1,-7,-5,10,-10,-9,-3,8,-2,-5,2,-7,-1,2,-1,1,7,2,2,5,7,5,-4,1,1,2,7,-2,10,-4,-6,2,7,-7,-6,-1,6,-2,-10,-6,-9,4,10,6,-10,3,-9,9,-1,-3,9,-1,-1,-3,5,1,10,2,3,-1,10,9,3,3,6,-2,-3,8,-7,4,2,8,5,1,-7,3,10,-7,3,6,8,-4,2,-7,-5,-1,-10,-9,8,-5,6,-4,-3,7,3,-5,3,3,3,2,-1,-7,1,-6,-9,6,10,-2,-3,10,4,6,-7,3,-7,10,-10,-10,6,-4,6,10,1,10,-3,-7,-6,-6,-2,-4,6,8,10,10,4,1,-3,-10,5,8,2,4,-10,2,-1,-10,8,-4,-8,6,-8,3,-10,-10,3,-10,5,3,-6,7,1,4,-7,-10,5,-6,5,-8,2,-7,-6,-10,-4,-6,9,-8,1,2,4,-3,-9,4,8,-8,-8,5,-3,4,-9,-8,4,-1,-1,4,-6,-4,8,1,-8,8,6,-9,-10,8,3,-10,-3,-3,5,-10,6,9,10,2,1,-5,5,5,8,7,-9,-8,9,7,-9,-6,-10,9,-5,9,2,2,-9,3,2,1,-8,-6,-10,-10,1,-6,-2,-1,7,-4,8,-6,-5,-6,-10,8,6,4,8,-7,-1,10,-7,4,-4,2,-4,-9,-9,6,2,9,10,5,7,-7,-6,-6,9,-8,-8,-3,9,1,-6,9,-3,-7,-2,-10,-8,-9,-5,9,5,-5,6,-3,-1,-4,3,5,4,8,-6,-4,7,-9,8,-6,-5,-4,-10,-7,3,-8,-9,-2,-6,-6,3,7,3,4,-5,-2,3,3,-3,4,6,-2,-6,-7,-7,5,4,9,1,7,-4,-8,5,10,-6,3,10,-8,-2,-9,7,-8,-9,8,-10,7,4,-1,-9,-6,-7,8,6,4,-10,-4,8,-9,1,-6,-2,7,10,-4,10,5,-1,-7,-10,5,-5,-10,3,1,-7,-4,-1,5,-8,-10,3,8,-10,-10,-5,4,-6,-4,-4,-2,3,1,7,-5,7,5,-3,-3,-7,5,10,1,-4,2,9,10,-1,6,-7,5,8,-1,5,6,-6,2,-2,1,-8,-5,-8,7,-6,-9,5,6,-6,-6,2,2,5,-4,-7,-5,10,1,7,-7,-2,7,-10,5,-1,-8,-5,10,4,-8,-1,-5,-5,6,6,-4,-10,10,-5,8,5,8,4,-1,4,-9,-4,-5,-3,-10,8,1,-6,-8,5,-6,1,4,4,6,-5,-4,-1,8,3,7], dtype = "int8")#candidate|6808|(1440,)|const|int8
call_6806 = relay.TupleGetItem(func_1884_call(relay.reshape(var_6807.astype('uint64'), [14, 3, 9]), relay.reshape(var_6807.astype('uint64'), [14, 3, 9]), relay.reshape(const_6808.astype('int8'), [1440,]), ), 5)
call_6809 = relay.TupleGetItem(func_1888_call(relay.reshape(var_6807.astype('uint64'), [14, 3, 9]), relay.reshape(var_6807.astype('uint64'), [14, 3, 9]), relay.reshape(const_6808.astype('int8'), [1440,]), ), 5)
func_5746_call = mod.get_global_var('func_5746')
func_5748_call = mutated_mod.get_global_var('func_5748')
call_6825 = func_5746_call()
call_6826 = func_5746_call()
uop_6849 = relay.atan(var_6807.astype('float64')) # shape=(378,)
output = relay.Tuple([call_6804,call_6806,const_6808,call_6825,uop_6849,])
output2 = relay.Tuple([call_6805,call_6809,const_6808,call_6826,uop_6849,])
func_6851 = relay.Function([var_6807,], output)
mod['func_6851'] = func_6851
mod = relay.transform.InferType()(mod)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6852 = relay.var("var_6852", dtype = "uint64", shape = (378,))#candidate|6852|(378,)|var|uint64
func_6851_call = mutated_mod.get_global_var('func_6851')
call_6853 = func_6851_call(var_6852)
output = call_6853
func_6854 = relay.Function([var_6852], output)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_6859 = func_5541_call()
call_6860 = func_5541_call()
func_5746_call = mod.get_global_var('func_5746')
func_5748_call = mutated_mod.get_global_var('func_5748')
call_6872 = func_5746_call()
call_6873 = func_5746_call()
func_4655_call = mod.get_global_var('func_4655')
func_4658_call = mutated_mod.get_global_var('func_4658')
var_6875 = relay.var("var_6875", dtype = "float64", shape = (56, 14))#candidate|6875|(56, 14)|var|float64
call_6874 = relay.TupleGetItem(func_4655_call(relay.reshape(var_6875.astype('float64'), [7, 7, 16])), 0)
call_6876 = relay.TupleGetItem(func_4658_call(relay.reshape(var_6875.astype('float64'), [7, 7, 16])), 0)
func_2291_call = mod.get_global_var('func_2291')
func_2297_call = mutated_mod.get_global_var('func_2297')
var_6896 = relay.var("var_6896", dtype = "int64", shape = ())#candidate|6896|()|var|int64
const_6897 = relay.const([False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True], dtype = "bool")#candidate|6897|(1440,)|const|bool
const_6898 = relay.const([7,-9,5,-2,8,4,5,-10,-6,-9,-10,-9,2,7,8,-3,1,2,8,6,-2,-3,10,4,-6,2,-3,8,6,3,7,-9,-10,6,-6,3,3,-7,-9,-1,-5,-2,-2,6,-6,-4,-7,-3,5,-4,-2,-1,2,9,10,-10,-3,-5,-3,-6,4,-3,-2,-5,-4,2,-7,-10,-2,2,-9,8,5,10,8,8,-6,2,-7,-7,-7,6,1,-3,-5,6,9,9,-9,3,-4,1,4,-8,-10,2,3,1,4,-8,9,4,-7,-2,-1,-6,-8,7,-8,-2,1,8,-10,9,-1,2,10,-7,-10,-5,-6,7,8,7,-10,-6,1,-4,-1,6,1,-1,7,-8,-9,-9,4,2,-2,7,7,1,-7,2,10,-1,7,4,10,-8,-6,5,-5,-1,-5,6,-6,-4,6,3,4,-8,4,3,-3,4,-10,-9,-7,1,-3,-5,-8,1,5,-9,-8,7,7,7,-3,-1,-3,7,3,1,6,4,-7,5,1,-10,-9,10,-7,7,-9,10,-9,1,4,7,-9,4,-7,9,-3,6,4,-9,10,-8,4,-10,-6,4,-4,1,-3,-1,-4,-10,-7,-8,-10,-1,-2,-3,10,9,6,-5,-6,4,-1,-4,5,-1,-10,-3,-5,5,7,6,-1,1,-10,-8,5,8,8,1,5,8,-3,8,-7,-7,-8,2,-8,9,-1,4,10,2,-1,-3,-6,-2,2,-7,2,5,-7,-1,10,-4,-8,7,-10,8,-3,-10,2,10,-1,-4,2,-2,6,5,5,5,10,1,-10,-3,-10,3,-4,-5,-9,7,10,-2,5,10,-9,-3,-6,10,1,-10,6,-2,-6,7,-8,9,-6,-2,-8,-2,9,7,8,-3,1,-2,9,-7,-3,-2,-1,-10,-2,9,-7,9,6,3,-3,5,-2,-1,10,-7,2,-7,2,9,10,-6,-1,-4,8,1,4,5,4,10,-4,9,8,-1,3,-6,10,-9,4,-9,1,-6,-7,-2,9,-5,10,-10,-1,-1,-3,-7,-7,-5,2,-5,-6,-7,-6,-4,-2,9,-4,-10,-2,-9,-6,-9,3,-5,-9,-7,5,-8,6,5,2,9,3,-10,8,9,6,-8,1,5,6,-5,-7,-10,-4,8,-9,1,-6,-6,-10,10,-2,-4,-4,2,-10,-10,7,-7,-7,8,-4,7,-10,4,-7,-4,5,-1,-7,-6,10,-4,-8,-10,8,10,-7,-1,9,4,2,-6,-8,-3,-1,-5,-6,10,2,8,9,3,4,-2,-1,-8,6,9,10,10,2,-2,4,4,-3,-7,10,-8,-6,-7,5,-10,-9,5,-1,-3,-10,-3,9,2,10,2,-9,-4,1,4,7,6,-2,-5,8,10,-5,4,-10,3,6,-2,8,-2,7,4,9,-10,-5,-8,5,2,-10,-3,5,-2,5,-9,-10,-3,-8,-1,-9,10,5,8,7,-1,8,-9,10,-7,-5,-8,-7,2,-10,-4,3,4,3,10,-1,9,3,-4,1,-9,-8,-3,-10,2,-7,8,10,10,1,5,8,-3,4,-7,-9,-1,-5,-3,9,-4,4,8,3,7,-5,10,-8,8,10,-9,4,-9,-6,6,10,4,4,-7,-10,-5,-1,-2,-7,1,8,8,9,10,2,1,-8,5,8,10,-10,-3,-7,-8,-5,-2,10,-2,-9,-6,-10,2,-3,9,3,-9,2,2,5,6,2,3,-9,-2,-1,9,9,-9,-2,-6,-10,6,5,3,-7,-1,6,10,1,4,-2,3,-6,-6,3,-1,-4,-4,6,-10,6,-3,-9,10,7,-2,-8,-2,9,5,7,4,-5,-10,-6,4,-6,-8,10,-5,-3,7,1,-10,-5,-2,-10,-6,5,-6,8,4,-8,9,2,4,10,-9,-1,1,3,-2,8,-8,2,3,-5,-6,-9,1,-8,7,8,-6,6,-9,-9,-1,-7,-9,4,-10,8,4,-10,1,3,3,5,-2,-9,9,2,-6,-9,-9,-6,6,7,-5,8,-7,5,2,-1,10,-7,-9,-9,9,9,-4,1,1,1,-8,-2,-10,5,7,-8,8,-6,-6,2,-6,5,6,-2,-5,10,4,6,-9,5,1,-10,1,-5,-4,2,8,10,5,-10,4,4,4,-3,-3,6,4,-2,-4,1,6,8,1,9,-9,-6,10,3,10,-4,6,6,8,4,8,1,-9,9,6,-5,6,-10,-1,-10,-10,-3,-4,8,-8,-5,-10,-10,5,10,-9,8,6,2,2,-8,6,-9,-10,-4,1,-7,-8,-9,-8,4,-6,3,-2,-9,6,-7,1,-5,-4,1,10,6,7,-1,-6,2,-9,4,-1,4,-2,-2,-8,4,-7,7,5,5,1,-6,-1,9,-7,-1,-7,8,5,-4,8,-5,7,4,5,3,-5,3,1,-8,-6,-7,-4,-6,-6,4,-10,-8,-10,8,-2,-1,2,-3,-9,-1,9,-10,2,4,8,-1,8,7,4,3,-8,2,-2,5,7,-8,4,1,-6,6,-4,2,8,10,-7,-5,1,7,4,7,-9,-10,-3,-1,-6,10,-3,4,4,-1,-10,7,6,7,7,-3,-8,-9,2,9,4,1,-6,7,10,-2,-8,4,-5,6,-6,8,10,7,5,3,7,-9,9,-4,5,1,-5,7,-7,-1,10,7,7,5,1,-3,1,3,9,-1,3,8,-9,5,-10,7,6,-1,1,4,5,2,1,-8,-3,5,-2,-4,-1,-5,5,-10,-7,5,8,-9,9,7,-9,10,-3,-7,-1,-6,-10,-1,2,-10,-2,-8,-2,-1,10,-1,-4,-2,8,-2,10,1,-8,7,-2,2,1,4,10,-6,-5,1,2,6,3,-10,7,-5,2,8,10,-1,1,4,-3,4,-9,-5,8,-10,-1,-4,-10,5,10,9,3,-10,-5,8,7,6,-8,-7,-4,7,-7,-4,-1,-2,-2,2,-1,2,9,6,1,-1,2,-5,-5,2,5,-3,-6,-9,6,-6,4,-4,7,8,-1,6,7,10,6,-5,9,-9,-3,-5,-10,7,-8,-6,1,4,-2,-5,-2,10,6,-8,5,10,-4,6,-6,9,-6,-1,-10,8,3,-9,-6,-2,-6,7,-8,7,2,7,8,1,2,10,-5,1,2,5,-1,-2,9,-8,6,8,-1,-5,-2,3,-8,-3,-1,-3,8,-3,-4,8,6,-10,-1,10,5,3,2,1,-8,3,1,-6,-3,-10,6,10,-1,-4,-1,6,-10,3,-4,-9,1,6,7,2,3,-7,-9,-10,-1,5,-1,-10,-10,2,-9,10,3,1,8,-10,-7,-9,-7,-1,7,10,8,8,3,6,1,10,-10,3,-8,8,-3,-6,-9,-7,-2,2,-5,10,10,-7,-1,-4,2,10,4,7,-8,6,-7,-2,9,1,-6,-1,-8,-9,7,-10,3,-9,2,4,7,5,-2,7,3,-5,-10,9,-5,6,2,-1,10,3,3,9,-9,8,-1,5,10,5,8,-7,-2,5,1,-2,3,10,-5,8,3,-5,8,10,-2,9,1,-3,10,-9,-1,3,-6,-1,-4,-5,4,5,2,1,4,-3,7,8,-3,2,7,7,-10,4,-7,5,9,-3,-7,6,-8,4,7,5,-8,4,-4,-9,-9,-2,-2,-8,-7,5,-7,5,1,1,5,6,4,-1,10,5,-4,6,2,-8,-4,6,3,-9,3,10,7,-1,7,1,3,7,-3,-3,6,5,-4,3,2,-10,1,5,8,-9,10,-4,-6,-8,3,-3,3,-9,10,-4,2,-9,8,1,10,2,-1,-10,-7,-7,2,-9,1,3,8,4,-5,-4,-7,-8,-6,6,7,6,6,6,5,-6,3,-8,9,2,-6,-7,-1,9,-7,7,-1,-8,8,9,-1,-2,4,-7,3,-9,8,-10,-2,8,-4,-3,-8,5,7,1,-7,-2,2,-6,-9,-4,10,7,4,1,-10,4,7,6,-3,10,10,3,-1,7,-5,-10,4,8,3,-6,6,-5,-1,-5,-7,-6,-8,9,9,1,6,8,-9,7,-8,8,-7,4,-1,-4,-5,5,3,-5,9,-6,-9,6,5,-1,8,-4,10,5,-9,2,-1,-7,9,7,-8,-5,-1,5,4,-6,5,9,10,-9,-5,4,5,10,-3,-6,-2,-10,-1,7,-2,10,-5,-3,7,7,-2,-7,10,5,-6,6,1,1,10,-7,-10,-10,-10,-3,6,8,-9,-6,-2,-4,-1,6,-6,-4,-4,-9,-2,3,-1,-8,4,-6,10,-4,5,3,-8,-8,6,1,6,6,10,-9,-6,9,-4,-5,-8,-9,6,-9,-10,1,2,8,5,-6,-5,-5,6,1,10,2,-4,1,2,-8,-8,10,2,-7,-6,-1,10,10,-1,-3,8,1,8,-3,1,-5,-2,-10,-5,-3,-10,1,-2,7,3,-6,-7,2,8,-8,-9,-9,-9,7,-8,4,5,-9,6,2,-5,-10,-5,2,10,-4,2,-1,-2,5,-9,9,4,-4,-3,-2,5,3,-6,5,4,6,3,-8,-8,-7,2,2,4,-6,2,-9,10,1,6,2,5,9,7,-5,10,1,-7,-8,9,-2,-2,10,-3,-7,-8,1,1,1,7,3,9,-1,-7,1,-5,-6,2,-10,-8,-5,10,-10,-8,-6,-9,6,3,6,8,-5,-10,1,-9,-8,10,5,-1,-8,10,-8,5,8,-1,7,4,2,2,-10,4,10,-3,-3,-4,7,-7,2,7,1,6,7,7,-6,1,-10,5,-9,8,5,3,5,-5,3,7,-9,-9,5,-6,-2,6,-1,5,9,10,-5,-6,-2,-5,4,-6,-7,1,-8,2,1,-6,-8,2,2,3,-2,8,-1,-6,7,10,-6,5,-8,-6,2,3,10,-1,-7,2,5,-3,4,-1,-3,6,-4,3,-5,-2,10,-1,1,7,-6,7,-10,8,-2,-7,-2,4,2,-7,-8,-6,-4,-3,8,-3,8,6,10,9,2,9,-9,-9,2,-9,-5,-1,3,4,-1,-6,8,-4,-3,-2,-3,9,4,4,-4,-6,-10,-5,-10,-4,7,9,-9,6,10,-7,9,-2,3,-8,-8,3,-9,1,-1,-10,3,6,4,6,-9,4,10,-2,-3,10,-3,1,5,-3,7,7,-3,-5,-4,-1,-3,-3,-1,8,5,7,-2,10,-10,-6,-8,-8,3,-8,-4,3,3,2,1,10,-9,4,5,1,-8,-4,-9,7,-8,10,-5,-1,9,4,5,-7,-1,6,-6,-1,5,1,8,7,-5,7,-1,10,-4,-3,-8,-3,-3,7,9,6,-3,-7,6,-8,2,3,-6,5,-9,10,9,8,-4,1,-3,7,-3,1,-2,-2,-6,10,-2,-3,5,8,-7,-6,-1,4,4,-2,-8,8,-3,4,9,-3,-1,10,8,-10,4,7,4,1,-3,-9,-7,-10,-9,-10,-10,-9,-7,-7,-9,-3,-2,10,10,-6,-4,5,-1,-2,3,1,4,6,-3,10,9,-6,-2,1,-10,8,-3,5,-9,-6,-8,-8,1,6,7,5,-9,-9,1,-6,8,-5,6,4,-7,-8,9,9,-9,3,3,2,-1,5,-2,3,5,-8,5,6,4,9,9,-3,-3,4,4,-9,6,7,5,7,-7,8,-7,-6,-8,4,2,-6,4,2,6,5,5,10,-3,7,2,-1,-10,1,1,5,-5,-2,-1,-8,-6,-6,4,-1,5,-6,3,-7,4,1,3,3,-7,6,-9,-2,7,6,-8,-10,-4,9,2,10,-3,-5,7,2,-1,1,-5,5,-4,5,9,-4,-10,2,-8,9,-5,8,2,-7,10,-5,2,-7,4,-8,-7,-7,5,8,2,-7,-4,9,6,-1,4,3,5,-2,-2,-1,3,6,5,-5,3,-4,-6,-3,10,1,7,10,4,2,-2,-6,10,5,6,-4,2,6,-4,-2,-2,-8,5,-2,2,6,6,9,6,3,5,-2,7,5,-6,4,10,-8,2,5,-3,-7,6,5,1,-5,3,-3,5,2,5,-1,9,-1,7,-4,10,9,7,-8,-10,-7,8,7,-8,-7,4,9,7,-6,-7,-7,2,-2,10,9,1,-6,6,4,-10,-8,-9,2,8,-2,-8,1,-3,-1,3,2,6,2,-9,5,-7,8,1,-4,7,3,3,7,8,-8,10,2,-9,-9,3,2,8,-8,9,5,7,1,-3,-7,-8,10,8,3,10,-8,5,-5,-9,1,6,-1,-5,5,3,-9,-9,-9,4,-4,4,-9,1,4,-8,7,-1,9,5,6,-9,10,-5,-7,-1,-3,-5,7,-8,-8,-6,-2,-3,4,8,5,4,-5,4,-8,-3,3,-5,5,-9,-10,6,-3,5,-9,7,10,9,10,7,10,9,9,-4,-7,-7,-10,-9,4,-10,6,-6,9,-2,-1,-9,9,6,1,-2,3,-5,4,7,7,2,-5,2,6,-6,-2,-7,2,1,-3,2,-4,-8,1,6,-3,5,-9,-5,-10,-9,6,5,9,-1,-1,-8,-2,-3,4,-2,10,-8,-4,-3,3,-9,9,-7,2,-3,-3,-9,-9,-9,-4,1,-10,-2,-1,-1,8,-5,5,-5,2,-9,-9,1,1,-1,2,-8,3,9,6,10,9,10,9,-1,3,9,10,-8,-9,5,-2,-6,-4,9,-4,-5,6,6,-3,8,9,-6,7,-8,-4,2,8,1,2,4,-10,-10,8,-2,5,5,-7,-10,6,5,-3,-5,4,2,7,3,-7,-4,10,-4,-7,-8,-1,-1,8,-4,-2,1,7,3,9,3,-10,1,-2,5,-5,6,-3,2,2,2,6,-1,7,9,9,-2,-9,-8,-1,2,8,-3,-4,4,-10,1,2,-9,5,4,9,2,-10,-1,-7,-6,-1,-8,1,-1,10,7,4,-10,-5,5,-2,-4,-9,-3,7,1,-8,3,1,-2,-5,-3,-8,-2,-9,7,-3,-4,-5,9,8,-10,-1,8,6,-4,-3,-4,2,-4,-10,-2,1,7,5,-7,-10,-1,-9,-2,3,8,3,-8,5,-7,2,-1,-7,10,6,9,4,4,1,6,4,-1,-5,3,1,-6,9,-10,6,10,-5,8,9,3,-10,5,5,2,-6,-10,4,2,3,-2,1,-3,-1,8,-2,1,1,7,-1,-4,1,6,1,-1,-1,3,2,-10,6,-4,-10,2,8,-7,-6,8,6,5,1,2,-6,5,3,-3,-3,7,2,5,7,-1,-3,-10,-2,-6,10,8,-5,4,-6,4,5,-5,1,7,3,2,-6,7,-7,4,3,3,-2,-3,-5,-10,-2,-9,8,-2,-3,-9,7,8,10,-3,-3,10,-3,-6,4,3,2,9,-8,-2,-5,10,6,-8,-2,-9,7,-10,4,3,1,-4,-5,-4,-5,-4,5,6,5,-8,-7,2,8,-4,-8,-2,2,4,10,2,4,10,1,-3,-2,-3,-9,10,-7,-2,3,5,-2,3,-7,-1,-1,2,-7,-10,7,-5,-8,-6,3,-1,-3,-2,-3,9,1,3,-1,6,10,-6,-9,5,-7,-2,8,9,-10,-6,-7,5,5,2,10,3,-3,-9,9,2,5,-10,-7,-4,-9,10,-7,4,10,5,3,4,-4,-2,6,-3,-6,-6,10,-2,2,5,-8,9,-4,-9,-2,-6,-7,3,10,6,9,-3,-2,9,8,3,-4,3,1,-6,-7,1,-1,-7,2,-7,5,-1,-4,1,6,-7,10,-8,-1,4,-7,4,-1,8,-6,6,6,8,-8,1,5,-4,-7,-4,9,8,2,3,-3,-9,-8,10,-10,4,-7,4,3,7,-2,-8,-6,6,-8,-3,2,4,5,-1,-2,7,-10,-3,10], dtype = "uint32")#candidate|6898|(2940,)|const|uint32
var_6899 = relay.var("var_6899", dtype = "int8", shape = (234, 1))#candidate|6899|(234, 1)|var|int8
call_6895 = relay.TupleGetItem(func_2291_call(relay.reshape(var_6896.astype('int64'), []), relay.reshape(const_6897.astype('bool'), [15, 16, 6]), relay.reshape(const_6898.astype('uint32'), [2940,]), relay.reshape(var_6899.astype('int8'), [39, 6]), ), 5)
call_6900 = relay.TupleGetItem(func_2297_call(relay.reshape(var_6896.astype('int64'), []), relay.reshape(const_6897.astype('bool'), [15, 16, 6]), relay.reshape(const_6898.astype('uint32'), [2940,]), relay.reshape(var_6899.astype('int8'), [39, 6]), ), 5)
output = relay.Tuple([call_6859,call_6872,call_6874,var_6875,call_6895,var_6896,const_6897,const_6898,var_6899,])
output2 = relay.Tuple([call_6860,call_6873,call_6876,var_6875,call_6900,var_6896,const_6897,const_6898,var_6899,])
func_6906 = relay.Function([var_6875,var_6896,var_6899,], output)
mod['func_6906'] = func_6906
mod = relay.transform.InferType()(mod)
var_6907 = relay.var("var_6907", dtype = "float64", shape = (56, 14))#candidate|6907|(56, 14)|var|float64
var_6908 = relay.var("var_6908", dtype = "int64", shape = ())#candidate|6908|()|var|int64
var_6909 = relay.var("var_6909", dtype = "int8", shape = (234, 1))#candidate|6909|(234, 1)|var|int8
output = func_6906(var_6907,var_6908,var_6909,)
func_6910 = relay.Function([var_6907,var_6908,var_6909,], output)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mod.get_global_var('func_6794')
func_6796_call = mutated_mod.get_global_var('func_6796')
call_6950 = func_6794_call()
call_6951 = func_6794_call()
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
const_6958 = relay.const(-2, dtype = "int8")#candidate|6958|()|const|int8
const_6959 = relay.const([2,-8,4,1,-5,10,-1,5,-5,10,-6,2,4,-1,-10,4,2,-4,-9,-4,6,-2,-4,-4,-3,4,3,-1,6,7,-4,-10,2,5,-9,-6,2,9,-7,6,7,1,5,-1,6,9,-1,-6,-10,-4,9,-1,2,-6,5,8,1,-4,-1,-7,4,-7,-4,-8,2,-3,-4,2,6,-4,10,-5,-1,-7,-5,-9,2,-4,9,-1,3,-3,-10,-2,3,-9,8,-1,-4,-1,-5,-8,10,-1,1,1,-8,1,-1,4,1,-6,9,7,-8,-2,3,-7,-3,2,-4,8,-9,-10,3,4,-9,-2,10,2,10,-8,-6,-5,-7,3,-8,-1,-1,7,7,10,4,4,3,-1,-10,7,-5,-4,-7,-2,-7,4,-6,-4,4,8,-7,-1,8,5,-10,3,3,10,2,7,-8,9,-1,6,-10,3,-7,-10,-4,-3,5,4,1,10,-7,-5,7,7,-1,-3,-9,8,9,-1,3,1,-7,-8,8,-4,-6,-8,-6,-8,9,-8,8,-2,-4,-1,-6,4,5,2,1,-8,6,9,10,9,-9,-6,4,3,3,-4,-6,2,2,7,-1,-10,9,-1,7,6,8,4,-2,-10,2,-3,2,-2,-1,-8,1,9,9,9,-9,-3,-9,-9,-5,7,2,-6,7,-1,-6,-9,8,7,8,-3,-2,-6,-3,-1,5,-4,8,-3,9,-3,2,-1,2,8,-5,8,5,-8,2,-7,-9,-4,-2,-4,-1,-5,9,-5,-4,-10,4,-6,-6,7,8,-5,-4,6,7,6,-4,-3,7,-3,-3,-9,5,-5,-4,8,-8,-8,3,-10,-1,8,-9,10,1,6,8,-10,-5,-5,9,10,8,10,4,-10,8,2,-9,5,8,3,-9,1,7,-2,1,4,1,-1,-5,2,8,-3,6,10,-9,2,-5,-1,-8,9,-8,9,6,-6,2,2,-10,9,-3,4,2,-10,-8,9,8,7,8,5,7,-3,-7,-9,2,-7,-8,6,6,7,1,-1,-4,4,6,6,-1,4,-7,-9,2,-5,8,2,-9,9,7,-8,-10,-4,2,-2,10,2,-1,-8,8,5,5,9,6,-6,8,3,6,6,7,10,-4,-5,-3,7,-6,-5,-10,7,-4,9,8,-10,1,-10,-4,6,-3,2,-5,7,-3,-4,-9,-9,5,5,-3,-6,2,3,-8,-5,-1,9,10,-9,10,-6,-6,4,-6,-5,-7,-1,8,-7,4,-9,1,-3,6,3,-7,7,-5,-7,1,8,-4,6,-7,-10,7,6,-7,-8,-4,9,2,-7,8,-6,5,-8,6,-10,-9,4,10,-3,-10,2,-3,-7,8,2,7,8,5,-10,-1,4,1,-7,9,-7,-4,2,9,-4,3,-6,5,2,-9,-1,-5,2,4,-6,-3,1,-2,-5,-4,2,5,10,10,-8,-6,-1,5,-4,7,3,3,-5,8,-9,-9,2,7,-1,-3,9,-1,10,-6,-6,-4,-4,4,-5,-9,7,-3,1,-2,-8,5,-6,-8,2,-9,-10,9,2,-3,-6,-1,-2,3,-4,-8,-1,2,7,2,-5,-10,-5,-8,10,6,-4,10,-9,7,-7,-10,8,-4,1,4,6,-10,3,-8,7,-1,-10,7,2,-5,-1,-7,-4,-3,6,2,3,5,-9,-1,8,9,2,7,10,-5,6,7,5,-6,9,-7,9,-8,-4,9,10,-9,-4,6,-8,-4,-5,4,-2,2,-8,4,8,8,-9,-5,-4,1,9,-1,-10,-1,7,6,-8,1,-7,5,-6,-9,-9,6,-9,3,-8,-6,9,-5,3,-8,-10,-6,5,-4,4,8,10,-1,2,-8,8,9,3,6,5,-6,-4,-2,4,1,-1,-5,2,-3,-10,7,7,5,-9,-6,6,9,-4,10,9,10,-10,-5,1,-9,9,8,1,7,-6,-4,5,-2,-6,-1,-4,5,5,6,-7,10,-2,-3,-4,3,-3,4,-2,-9,9,-1,8,-8,-7,-3,-1,2,1,-6,-6,-7,-8,7,7,8,3,-10,-7,-7,3,1,-3,7,10,9,4,5,6,4,5,9,1,-2,-6,-7,9,4,2,-5,7,-8,-1,7,-4,-9,2,10,7,-6,-1,3,2,3,1,8,-4,-10,-9,2,-7,4,-1,5,-6,-3,3,-10,-5,8,-1,-5,3,9,4,7,4,-3,8,3,8,-5,-5,-3,-8,-6,7,3,9,-4,-5,6,-6,2,-6,2,-2,2,-1,-8,8,-7,7,7,-4,-1,-5,6,-4,9,-5,4,7,-7,-3,-5,-10,7,2,7,8,3,-3,-7,9,-8,7,2,-10,-2,5,-3,2,6,8,10,-1,1,3,-2,-6,-7,-2,8,-9,4,-10,10,-9,-5,-10,-4,1,-5,-3,-9,7,3,6,-3,10,8,6,-1,4,3,5,3,1,2,-4,5,6,3,7,-6,3,8,-4,4,7,2,-5,7,4,9,10,-9,2,-8,-10,-10,10,4,-7,4,8,-7,10,6,-1,1,-3,-8,4,5,-2,-9,-3,10,1,-7,9,-9,-5,-2,4,-10,6,1,5,6,-3,4,7,-9,6,-9,-7,4,5,-10,1,-5,9,-7,-6,-4,7,6,-1,-4,2,-4,2,-2,-5,-10,-4,3,3,-10,4,-7,-3,9,-1,-3,-6,1,-6,-9,-7,9,-3,9,-6,-6,-4,-3,7,4,-7,-10,-5,-5,6,-4,-2,-6,-7,3,-5,-6,-2,-7,3,9,-8,2,-10,4,10,10,-3,9,1,-5,-8,5,-2,-9,6,4,6,7,5,-3,1,7,2,-8,-7,-1,-6,5,1,-2,3,-10,3,7,1,5,5,-8,9,2,-8,10,-1,1,-10,-8,-10,4,-6,-3,2,8,9,8,3,3,3,5,-10,-8,9,5,-4,3,1,8,-4,-3,-4,3,1,9,1,9,-8,4,-3,-7,10,-1,-5,-4,-5,6,-8,-7,6,4,-7,1,-2,-5,5,-3,1,6,3,7,-9,-7,3,-7,-1,-10,-5,-6,-7,-1,-4,-7,-10,-2,-3,1,3,8,-4,-7,-7,5,-8,-9,3,-7,-4,-1,7,7,2,3,-6,1,7,6,3,-6,-2,3,-4,-2,7,5,5,-6,-10,2,2,-9,-9,5,-6,-2,7,-6,8,-3,1,10,10,5,-7,-7,8,9,2,-1,8,-9,-1,-8,-6,5,-9,-5,1,10,-7,-6,-4,6,1,-4,-3,4,1,4,-2,-5,5,1,-2,-3,-9,-7,6,-9,-3,5,-8,-9,-10,-8,-3,5,-5,-4,-9,-9,6,1,1,8,-3,-7,4,1,10,-8,2,-3,-2,-7,3,-9,-2,-10,8,-7,3,-3,-2,10,-6,9,4,7,8,-4,10,2,4,4,-2,-5,5,-1,-6,2,-9,-2,-2,8,-2,3,-8,5,6,5,10,-2,-10,5,4,-8,6,-8,8,10,-10,6,-5,9,-10,-9,4,9,-4,2,10,5,-9,-6,-10,-10,9,-10,7,-6,-4,1,-6,-4,3,-2,-5,10,-1,4,3,4,2,-6,5,-7,-9,-9,-9,7,10,-4,10,2,10,-5,-9,-7,-4,1,-7,8,-9,10,1,-7,-9,-7,-4,-2,-4,9,7,6,1,1,-8,-1,-6,-2,-10,-10,-1,-10,6,1,-9,3,8,-7,7,-6,-9,-1,-10,3,-5,1,-10,10,10,-5,-4,7,8,-3,-4,-1,8,7,6,-7,3,-6,8,-8,-9,-9,1,-7,10,3,10,6,-5,-7,-2,-1,-4,-9,-3,3,2,-7,8,2,-5,-3,-9,5,9,-7,8,-8,-5,3,6,1,7,-10,1,4,-7], dtype = "int8")#candidate|6959|(1440,)|const|int8
call_6957 = relay.TupleGetItem(func_484_call(relay.reshape(const_6958.astype('int8'), []), relay.reshape(const_6959.astype('int8'), [15, 16, 6]), ), 0)
call_6960 = relay.TupleGetItem(func_487_call(relay.reshape(const_6958.astype('int8'), []), relay.reshape(const_6959.astype('int8'), [15, 16, 6]), ), 0)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_6962 = relay.TupleGetItem(func_6801_call(), 0)
call_6963 = relay.TupleGetItem(func_6803_call(), 0)
output = relay.Tuple([call_6950,call_6957,const_6958,const_6959,call_6962,])
output2 = relay.Tuple([call_6951,call_6960,const_6958,const_6959,call_6963,])
func_6988 = relay.Function([], output)
mod['func_6988'] = func_6988
mod = relay.transform.InferType()(mod)
mutated_mod['func_6988'] = func_6988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6988_call = mutated_mod.get_global_var('func_6988')
call_6989 = func_6988_call()
output = call_6989
func_6990 = relay.Function([], output)
mutated_mod['func_6990'] = func_6990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mod.get_global_var('func_6521')
func_6522_call = mutated_mod.get_global_var('func_6522')
call_7009 = func_6521_call()
call_7010 = func_6521_call()
output = call_7009
output2 = call_7010
func_7025 = relay.Function([], output)
mod['func_7025'] = func_7025
mod = relay.transform.InferType()(mod)
output = func_7025()
func_7026 = relay.Function([], output)
mutated_mod['func_7026'] = func_7026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6687_call = mod.get_global_var('func_6687')
func_6688_call = mutated_mod.get_global_var('func_6688')
call_7045 = relay.TupleGetItem(func_6687_call(), 0)
call_7046 = relay.TupleGetItem(func_6688_call(), 0)
func_7025_call = mod.get_global_var('func_7025')
func_7026_call = mutated_mod.get_global_var('func_7026')
call_7057 = func_7025_call()
call_7058 = func_7025_call()
output = relay.Tuple([call_7045,call_7057,])
output2 = relay.Tuple([call_7046,call_7058,])
func_7060 = relay.Function([], output)
mod['func_7060'] = func_7060
mod = relay.transform.InferType()(mod)
output = func_7060()
func_7061 = relay.Function([], output)
mutated_mod['func_7061'] = func_7061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_7066 = relay.TupleGetItem(func_5806_call(), 0)
call_7067 = relay.TupleGetItem(func_5807_call(), 0)
const_7070 = relay.const([[[True,True,True,True,False,True,False,True],[False,True,False,True,True,False,True,True],[True,True,True,True,True,True,True,False]],[[False,False,True,False,False,False,False,True],[False,True,False,False,False,False,True,True],[False,False,False,True,False,False,False,True]],[[True,True,False,False,False,True,False,False],[False,True,False,False,False,True,True,False],[False,False,False,True,False,False,False,False]],[[False,False,True,False,False,True,True,True],[True,False,True,True,True,True,False,True],[True,False,True,True,True,True,True,False]]], dtype = "bool")#candidate|7070|(4, 3, 8)|const|bool
bop_7071 = relay.less(call_7066.astype('bool'), relay.reshape(const_7070.astype('bool'), relay.shape_of(call_7066))) # shape=(4, 3, 8)
bop_7074 = relay.less(call_7067.astype('bool'), relay.reshape(const_7070.astype('bool'), relay.shape_of(call_7067))) # shape=(4, 3, 8)
bop_7086 = relay.right_shift(bop_7071.astype('int32'), relay.reshape(call_7066.astype('int32'), relay.shape_of(bop_7071))) # shape=(4, 3, 8)
bop_7089 = relay.right_shift(bop_7074.astype('int32'), relay.reshape(call_7067.astype('int32'), relay.shape_of(bop_7074))) # shape=(4, 3, 8)
output = bop_7086
output2 = bop_7089
func_7099 = relay.Function([], output)
mod['func_7099'] = func_7099
mod = relay.transform.InferType()(mod)
mutated_mod['func_7099'] = func_7099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7099_call = mutated_mod.get_global_var('func_7099')
call_7100 = func_7099_call()
output = call_7100
func_7101 = relay.Function([], output)
mutated_mod['func_7101'] = func_7101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_7102 = func_5694_call()
call_7103 = func_5694_call()
output = relay.Tuple([call_7102,])
output2 = relay.Tuple([call_7103,])
func_7107 = relay.Function([], output)
mod['func_7107'] = func_7107
mod = relay.transform.InferType()(mod)
output = func_7107()
func_7108 = relay.Function([], output)
mutated_mod['func_7108'] = func_7108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7122 = relay.var("var_7122", dtype = "bool", shape = (1, 14, 14))#candidate|7122|(1, 14, 14)|var|bool
var_7123 = relay.var("var_7123", dtype = "bool", shape = (1, 14, 14))#candidate|7123|(1, 14, 14)|var|bool
bop_7124 = relay.logical_or(var_7122.astype('bool'), relay.reshape(var_7123.astype('bool'), relay.shape_of(var_7122))) # shape=(1, 14, 14)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_7127 = relay.TupleGetItem(func_6801_call(), 0)
call_7128 = relay.TupleGetItem(func_6803_call(), 0)
func_6401_call = mod.get_global_var('func_6401')
func_6402_call = mutated_mod.get_global_var('func_6402')
call_7132 = relay.TupleGetItem(func_6401_call(), 0)
call_7133 = relay.TupleGetItem(func_6402_call(), 0)
bop_7134 = relay.mod(var_7122.astype('float32'), relay.reshape(bop_7124.astype('float32'), relay.shape_of(var_7122))) # shape=(1, 14, 14)
bop_7158 = relay.maximum(bop_7134.astype('int16'), relay.reshape(bop_7124.astype('int16'), relay.shape_of(bop_7134))) # shape=(1, 14, 14)
func_1469_call = mod.get_global_var('func_1469')
func_1472_call = mutated_mod.get_global_var('func_1472')
var_7166 = relay.var("var_7166", dtype = "float64", shape = (945,))#candidate|7166|(945,)|var|float64
call_7165 = func_1469_call(relay.reshape(var_7166.astype('float64'), [9, 15, 7]))
call_7167 = func_1469_call(relay.reshape(var_7166.astype('float64'), [9, 15, 7]))
func_6480_call = mod.get_global_var('func_6480')
func_6482_call = mutated_mod.get_global_var('func_6482')
call_7187 = func_6480_call()
call_7188 = func_6480_call()
uop_7191 = relay.sigmoid(call_7127.astype('float32')) # shape=(4, 3, 8)
uop_7193 = relay.sigmoid(call_7128.astype('float32')) # shape=(4, 3, 8)
output = relay.Tuple([call_7132,bop_7158,call_7165,var_7166,call_7187,uop_7191,])
output2 = relay.Tuple([call_7133,bop_7158,call_7167,var_7166,call_7188,uop_7193,])
func_7194 = relay.Function([var_7122,var_7123,var_7166,], output)
mod['func_7194'] = func_7194
mod = relay.transform.InferType()(mod)
var_7195 = relay.var("var_7195", dtype = "bool", shape = (1, 14, 14))#candidate|7195|(1, 14, 14)|var|bool
var_7196 = relay.var("var_7196", dtype = "bool", shape = (1, 14, 14))#candidate|7196|(1, 14, 14)|var|bool
var_7197 = relay.var("var_7197", dtype = "float64", shape = (945,))#candidate|7197|(945,)|var|float64
output = func_7194(var_7195,var_7196,var_7197,)
func_7198 = relay.Function([var_7195,var_7196,var_7197,], output)
mutated_mod['func_7198'] = func_7198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mod.get_global_var('func_6286')
func_6287_call = mutated_mod.get_global_var('func_6287')
call_7233 = relay.TupleGetItem(func_6286_call(), 1)
call_7234 = relay.TupleGetItem(func_6287_call(), 1)
var_7249 = relay.var("var_7249", dtype = "float32", shape = (10, 10, 11))#candidate|7249|(10, 10, 11)|var|float32
bop_7250 = relay.add(call_7233.astype('int32'), var_7249.astype('int32')) # shape=(10, 10, 11)
bop_7253 = relay.add(call_7234.astype('int32'), var_7249.astype('int32')) # shape=(10, 10, 11)
func_5995_call = mod.get_global_var('func_5995')
func_5999_call = mutated_mod.get_global_var('func_5999')
var_7273 = relay.var("var_7273", dtype = "int16", shape = (810,))#candidate|7273|(810,)|var|int16
var_7274 = relay.var("var_7274", dtype = "uint32", shape = (3840,))#candidate|7274|(3840,)|var|uint32
const_7275 = relay.const([0.529726,3.387686,3.894750,3.411849,-3.991789,0.883266,2.427828,-6.052177,-1.812923,-1.888743,9.058738,-4.086526,8.992567,-4.698889,-7.077484,1.659681,5.964766,8.893021,6.491829,2.782880,2.071981,6.152681,-7.336181,-7.890875,6.361161,8.083071,5.790642,8.673096,-8.633742,5.473304,-4.399384,-2.980366,8.941866,6.829035,-5.984934,-0.743243,6.582068,-3.713435,0.306799,-0.620323,9.411942,-2.067753,-2.189559,7.586414,4.682870,4.439552,3.473332,-9.968665,1.682023,7.839457,-2.950003,2.678754,2.087932,-3.722892,-8.720873,-7.805079,-5.441584,-6.702796,-8.789467,2.318859,-2.246444,6.750788,3.387813,-7.469735,6.631021,-6.898163,-0.101678,-1.940304,-2.149296,-9.001436,9.410115,-4.192585,1.487593,-8.422089,3.768416,-7.088444,-1.096636,0.162966,2.523323,0.223533,-5.331919,-5.089402,6.576352,-6.161189,7.835934,5.692169,4.178275,4.249547,-6.299812,-5.509182,7.240171,-2.091972,1.043109,3.821242,7.637729,0.929764,5.788931,-6.856021,-7.965010,-8.408114,-9.860653,3.768598,0.502436,-3.283567,-4.629098,4.870335,2.818597,-6.255454,-2.483426,9.063790,-5.112619,4.270480,4.632621,-3.550215,-1.267787,5.402211,-3.026181,2.376186,0.877834,-6.950922,-0.151860,-7.674837,7.867087,-5.048853,-1.969814,3.586859,2.556639,-2.358087,3.275742,-9.909324,8.535721,-3.523866,-9.386123,-8.879673,3.538542,-7.625404,-6.446576,-7.184293,0.450441,0.335664,-8.561717,-3.672038,0.220121,-0.571897,3.954045,3.571565,6.185300,5.777892,7.286660,3.421305,-8.586158,-2.603274,-5.202498,-8.613512,-7.823308,-4.715341,-1.345977,-5.637480,2.236106,-5.543259,5.373820,-6.147867,7.827139,3.708111,3.800523,-0.448325,-2.235123,-0.259581,1.394190,-4.154520,1.572307,-3.950772,6.311810,6.992457,-4.222020,9.152784,2.159963,-4.789716,7.211122,6.861750,-7.046078,-7.279540,0.776204,-4.961691,3.257759,-0.883855,1.997598,1.145308,7.495922,0.353086,-1.346848,2.388643,-3.734948,3.337283,5.707823,-5.158615,-0.432925,-8.714830,-6.898740,-0.619270,6.900164,-3.413099,6.200705,2.156077,-4.416451,-0.710542,-1.154260,0.116025,9.051169,-5.654328,9.940686,8.034366,-0.400045,0.727350,-2.713506,-4.681293,-9.710453,-1.993088,-3.809403,-2.184509,-8.034593,-6.134143,4.527759,-6.127617,-1.533172,2.133741,6.788235,6.216863,7.804522,-2.584974,-8.412517,4.832399,4.912464,-6.804831,-8.058970,9.078423,-7.451952,2.232050,3.047811,-6.488392,-4.709603,9.784271,-2.296271,8.588137,-3.457740,0.551231,0.507667,1.084701,-3.199084,-1.181057,3.874859,-0.124909,5.132647,6.509512,7.439623,-2.528087,0.745549,6.036746,-5.709468,9.264927,0.357264,6.755340,-4.058078,3.766704,9.501342,4.875947,1.795269,-4.963596,4.638478,3.966957,4.077407,-2.955068,-2.640131,9.352584,8.436340,7.644494,0.735812,6.002664,0.566786,8.760835,-0.590458,8.335372,-7.329562,2.282908,9.715291,-0.156455,-0.064816,-9.883150,-2.255764,-9.480127,-0.795992,-7.129840,-3.868147,6.218712,9.694247,-8.321136,5.569915,1.448345,0.794203,8.705802,-2.539812,-1.452873,0.115900,6.019770,-2.334471,8.771182,1.957461,-4.034402,8.213681,3.582731,-2.553046,-9.112846,-6.630344,3.928134,-7.120108,-1.306990,-2.017480,-6.203967,2.658120,-8.136427,9.461402,6.517463,4.719609,-2.239661,3.367152,5.136759,-5.996190,-2.438061,-3.311623,-3.423740,-0.724641,1.556067,4.413091,-7.670910,1.854474,-7.766429,-6.164818,8.227885,-2.067673,-0.527078,6.382041,5.775911,-4.998825,-0.500802,-5.696584,3.688422,-6.824999,8.615625,-4.689979,-6.747236,-6.003596,-1.625410,-6.770812,6.791237,-1.419950,4.406442,8.578489,1.978702,-6.012602,-0.287245,-7.599090,5.523394,-1.354882,8.399358,3.386940,-7.529863,-8.814649,-2.312736,-6.185226,8.368899,-2.385322,8.423417,-0.465705,8.682813,-8.181873,2.373779,5.175125,8.458014,9.167521,5.742666,1.362668,7.423138,-1.882901,-1.959143,6.227476,9.297206,-1.883236,7.078933,2.344684,0.214455,5.517824,2.936775,-0.411006,-1.113707,1.337319,-5.394483], dtype = "float32")#candidate|7275|(396,)|const|float32
call_7272 = relay.TupleGetItem(func_5995_call(relay.reshape(var_7273.astype('int16'), [810,]), relay.reshape(var_7274.astype('uint32'), [3840,]), relay.reshape(const_7275.astype('float32'), [396, 1]), ), 4)
call_7276 = relay.TupleGetItem(func_5999_call(relay.reshape(var_7273.astype('int16'), [810,]), relay.reshape(var_7274.astype('uint32'), [3840,]), relay.reshape(const_7275.astype('float32'), [396, 1]), ), 4)
func_5627_call = mod.get_global_var('func_5627')
func_5633_call = mutated_mod.get_global_var('func_5633')
var_7280 = relay.var("var_7280", dtype = "float32", shape = (780,))#candidate|7280|(780,)|var|float32
var_7281 = relay.var("var_7281", dtype = "uint64", shape = (378,))#candidate|7281|(378,)|var|uint64
const_7282 = relay.const([-9,3,5,-7,4,7,7,10,-7,-4,10,6,-10,-1,4,-3,9,2,7,2,-7,9,-8,-9,-2,8,8,-7,-5,-3,4,-9,-2,-10,2,10,2,-3,-10,7,-5,4,-1,4,-1,4,-2,2,-5,3,-6,-7,2,-1,10,6,5,1,-3,1,-3,-3,9,9,8,1,2,-2,-8,9,-1,5,5,3,2,-3,-8,-10,-2,10,8,3,9,-6,-8,-5,10,-4,-8,6,-10,3,-5,-6,-1,-6,8,-8,-7,-4,-9,-4,10,5,-7,-6,-10,-7,-3,4,9,-10,1,4,2,1,-8,2,4,-4,10,6,-10,-7,-7,-6,2,5,-5,9,8,1,-6,-4,2,-1,-9,-2,-1,-3,-1,5,6,-5,9,-10,-8,3,-4,6,4,-10,-4,3,3,-4,-6,8,-8,-6,-10,4,-7,-4,3,-1,-7,1,3,-9,-1,-1,-3,-2,3,-8,4,1,-8,-4,-2,7,6,-3,1,3,4,-10,4,-7,-9,10,-8,5,-3,-6,-6,6,-2,-8,8,6,7,8,7,-10,2,-10,-8,-6,-3,-8,7,10,-1,-6,-10,-3,-10,2,-8,-6,2,-9,-8,-3,-7,-4,3,8,2,4,-6,-1,-8,6,5,4,-5,-10,-6,-7,-2,-9,-3,-10,1,-7,9,-3,-2,2,-8,-7,-9,-7,-7,-10,-3,5,-8,-1,7,5,-7,-4,7,10,-2,10,3,-6,4,-1,-7,-5,1,1,5,5,-4,4,-3,-9,-1,-6,-8,7,10,-9,4,1,1,5,-8,1,-9,5,9,-9,-5,-5,7,5,9,2,9,3,5,-5,8,9,10,1,8,-10,-5,7,8,-9,7,2,-7,5,3,-9,7,10,9,-9,-1,3,-5,-8,-4,1,10,-1,-10,-1,8,6,5,7,9,-5,4,-6,10,-3,5,-10,-7,4,-7,2,4,-5,4,-4,-5,-3,9,-1,7,5,-7,-7,-6,-4,5,-10,-4,7,-6,-2,2,-3,7,1,-5,-6,-3,-9,-5,2,6,8,-9,-7,5,-8,-7,9,-3,7,-9,2,-7,1,-3,1,-6,-9,-1,-2,8,-7,-10,-8,-9,5,-10,-9,8,-1,2,-10,1,7,-8,2,10,-10,6,-5,4,2,-7,-3,1,-7,5,5,-7,-10,1,2,9,-2,-1,-9,-9,9,4,-2,-7,9,-6,-10,7,9,-1,-7,-2,-7,-6,-10,-9,-2,2,-9,-4,-2,3,5,-1,-5,-5,5,3,-4,10,5,-2,4,10,-2,-2,-5,6,6,-4,2,-5,-1,-8,-7,-7,-8,9,3,-5,-4,-9,1,-8,-3,-8,-6,-1,-3,-1,5,-3,7,5,1,-4,7,5,9,7,-8,8,-9,-10,-5,-3,9,5,9,-7,-10,-7,-4,-6,-6,6,7,-7,-2,9,9,10,-7,5,5,-6,3,-3,-6,10,2,-5,2,7,2,-1,-7,9,6,-2,6,-9,3,-5,-2,2,-5,-5,10,10,10,-3,4,3,-5,-2,-4,1,-2,-6,-3,8,-5,2,-9,-9,6,7,3,-10,6,-3,-1,-8,1,7,2,10,2,-7,8,9,-10,-4,6,-3,-5,3,-1,1,4,-5,-5,6,-1,-8,10,1,-4,3,8,-2,-4,-1,5,8,1,-4,10,-2,4,8,-7,-4,-5,-3,-4,-9,10,-7,1,-2,1,-9,-9,-2,2,7,-2,-2,-7,-1,10,3,-10,-4,-8,-3,6,1,-4,-6,-4,8,5,2,-5,-7,3,-6,10,3,-8,-8,10,-10,2,-1,-1,10,-8,-10,-5,7,-6,-8,5,-6,-10,7,-4,2,-5,10,-1,3,-5,4,9,8,4,-2,9,-4,-4,7,-10,-2,4,-2,-4,-6,-8,-1,-2,2,4,7,-6,10,-3,-8,8,7,-3,8,-4,8,-7,-10,-7,6,-10,5,-5,-6,4,1,-3,3,-7,-5,7,4,-4,2,-1,-3,5,-7,-2,9,6,-7,8,4,1,6,-5,-2,7,8,-4,8,-8,-10,-7,-8,8,-1,5,2,5,4,10,-6,-9,6,-5,1,-1,-6,9,-3,-9,-5,-10,-2,7,-4,1,-6,6,2,-8,7,-5,8,-8,2,5,-4,8,-9,-4,-4,5,-5,-3,2,-1,1,-3,9,1,-1,-1,-1,-2,4,3,1,9,7,-3,5,10,-8,-4,6,-10,-2,-1,10,3,-9,3,4,-6,-5,-2,10,6,-8,-7,-8,1,-8,4,8,-3,4,7,-9,9,-1,-6,-6,1,3,-8,6,2,2,5,3,-8,-5,5,9,10,8,1,8,-9,9,-5,-7,-3,5,10,4,-5,3,5,-7,-10,-2,-10,-2,-3,-6,-7,5,1,-6,8,-7,2,-6,-1,-3,9,-3,-6,-9,5,-7,-8,4,2,8,-1,4,6,10,2,-2,9,-1,-8,3,-4,8,3,-1,2,-5,-6,-8,-9,-4,2,-4,-9,3,3,-5,-6,-1,4,4,-3,1,-9,4,7,-1,-5,-9,9,-4,-10,1,1,-3,-6,-3,7,8,2,4,-1,-8,9,3,-1,-2,5,5,7,-2,-6,-10,8,-6,10,-10,6,-7,5,-5,-6,-7,2,10,-1,-2,7,7,10,6,5,10,3,-8,-9,7,2,8,-8,-3,1,4,-7,-3,-6,6,-4,7,-6,-8,-10,2,-10,5,-9,5,-6,-9,-1,10,3,1,2,5,-2,5,-9,-3,-7,5,1,-5,-10,-7,-9,8,-3,-9,6,-5,8,-10,4,8,-6,-7,-4,1,9,2,-7,9,-9,4,-4,-4,8,-1,-9,-4,-1,-1,5,8,-10,-3,-3,6,1,-7,-1,-7,-7,1,-7,-3,10,-5,4,9,4,-2,4,-8,9,10,-6,-9,9,-1,9,-7,5,-1,5,-6,4,5,7,-5,-9,-8,-3,-2,-9,1,6,-4,-9,-4,7,-5,-10,-10,-6,-5,9,-1,-2,-7,5,-6,7,4,7,2,5,-6,10,4,-1,10,-2,-4,-4,-5,10,-2,3,3,-1,3,-4,3,-7,9,-5,7,2,2,-2,-6,8,9,1,1,-9,-10,-5,9,9,9,-9,-3,-6,6,2,2,10,-1,-5,5,-9,1,9,6,-9,3,-9,-10,1,-7,-8,3,2,8,-6,-5,7,9,-7,-3,-9,-6,-1,7,2,5,5,-7,3,6,6,6,-7,-9,-1,-1,-7,1,3,1,2,-3,-5,-3,6,10,1,5,-1,10,-7,2,-8,-3,1,-4,2,-9,8,7,-3,5,-3,2,7,5,5,-7,10,-3,5,-3,7,-6,-6,-10,-2,-3,-7,10,-8,-7,2,-5,-5,-5,-8,-9,-10,1,-2,5,5,-8,2,8,2,-1,1,-1,6,1,2,-8,-7,-8,-1,-2,8,9,-7,-10,-2,7,8,-4,-2,8,-4,-8,-7,-1,-9,5,4,-9,-10,-2,-9,10,5,-2,8,2,-6,5,5,4,-9,-3,-2,6,9,-8,6,-6,1,-9,7,1,2,-1,-1,2,1,-3,-6,-4,-8,5,-10,7,10,10,-9,-3,6,7,8,-5,5,-9,-8,5,-7,10,-3,1,-2,1,2,2,9,-3,-1,5,8,-8,-8,4,5,-5,10,-2,-4,6,10,-4,-1,5,5,9,-3,-2,10,-8,-8,3,-8,-2,9,-2,8,-7,1,3,1,9,-9,-7,-5,-3,-10,2,-3,-4,-4,9,-10,-3,8,7,7,3,7,4,5,-6,6,-4,-6,-1,-3,-4,-7,-6,-2,4,8,-5,7,8,9,-8,-4,3,-9,10,-7,6,1,10,-4,-1,4,-7,7,5,-9,-10,5,5,-10], dtype = "int8")#candidate|7282|(1440,)|const|int8
const_7283 = relay.const([1.693791,3.074903,-2.851734,-9.618384,6.309750,9.314900,-4.637424,1.022113,-5.065840,-7.298716,-8.289513,7.717551,-0.374497,-0.055962,8.387185,2.478707,-4.644975,9.751087,5.511256,1.096716,-2.548056,9.244554,-8.715206,1.073831,0.710094,-1.614731,5.487557,-9.201216,-8.684677,-2.760927,6.418994,-6.253417,-5.935604,-7.635762,0.975047,-7.221024,-8.481336,-3.542126,-8.761467,-2.277418,0.616061,3.791770,-1.127180,4.524814,3.837432,-1.770453,0.082800,-7.972656,-3.344316,7.396843,-4.137609,-4.607992,4.806352,-4.002492,-8.485567,5.959829,1.921451,-0.876006,-5.605470,-0.558524,9.901668,-4.569230,-0.798665,-2.405859,3.827616,-7.804321,-9.122328,3.543462,-5.698090,5.528224,-5.229869,-6.184166,-2.990320,3.885142,-7.696684,-5.848777,0.457839,-0.059547,2.529742,-4.035969,1.696272,1.565258,7.987883,6.865260,-0.072572,-1.581833,-8.282807,-8.151769,-3.732676,2.938929,-7.809100,-1.132484,6.229582,5.739754,-8.113973,3.271506,-1.123545,1.325075,6.016017,2.786764,9.308085,-0.028505,2.420698,-3.722599,3.340483,-7.517033,1.716573,8.249874,-0.239393,-0.572952,-7.231760,-0.599152,-8.208632,0.160200,-1.784270,4.128806,-8.159298,5.927411,-7.712858,3.391213,-4.652794,6.098492,3.942302,-6.436892,8.642813,-2.889219,-1.488519,6.337957,-9.254813,2.949795,4.493858,-1.779562,-7.809405,3.828466,-1.526387,-2.178127,5.393040,-3.710577,-7.928262,-0.358579,6.606673,-3.149015,1.135370,-0.940077,-2.801412,-5.037462,-1.346609,6.873555,9.924824,-1.370123,-8.767743,-6.504571,-8.706861,-5.796969,3.990623,7.586143,1.488013,-2.482037,6.057471,-1.835179,-9.583059,7.177627,9.590325,-4.590939,-5.400392,-7.384435,6.350697,-9.677640,-5.609546,6.543080,7.407989,-1.603995,-2.071807,8.434145,-2.825096,5.768922,-9.262314,7.314068,5.021167,-7.089510,-7.134440,-3.181285,1.920998,-9.869953,2.066757,6.499745,-0.951028,0.312261,6.936101,-1.716472,-4.644909,-7.385722,-3.754108,0.192430,7.756773,7.354849,-4.473622,-8.015278,-4.225942,3.625628,-0.016394,-9.271663,2.223252,0.588671,-0.948479,-0.668405,1.117629,-3.917738,-8.502336,4.897861,6.127456,-2.047205,6.488554,-0.070819,3.070317,8.148164,-2.319628,-8.664969,-5.291080,-5.364471,7.259886,1.521672,-3.416974,-5.286552,7.613592,-2.990613,8.026565,6.814556,7.383743,-1.963018,5.723013,-1.147592,-6.375061,2.555095,-0.863091,5.456022,-9.287666,-8.540142,-7.338294,-8.127867,9.029810,5.342349,8.185861,8.560851,-4.042456,9.283676,7.738967,7.032354,-8.598683,-3.669665,8.010034,-2.691767,1.376601,-9.706722,6.623442,9.409583,1.816364,1.353903,5.307260,-8.351318,8.434610,-9.429044,7.968794,-7.582319,-3.683032,0.087948,-9.960280,-2.241544,-4.408958,-5.468764,5.512909,-8.608559,-7.097024,2.280861,-0.762514,7.437825,6.683573,7.486583,8.597799,-7.814888,-5.536243,4.334761,7.927384,-5.280104,-7.475437,0.706943,5.035292,0.655111,-9.040332,4.155802,-6.720605,-0.054880,-1.220008,-9.704105,4.492806,-2.674354,-0.474348,-6.119100,6.045714,-6.158812,2.585950,5.298769,2.901667,-7.813862,9.904731,4.904264,-3.204167,7.291579,7.413227,3.341936,-3.772549,-7.175251,8.047165,-8.407697,-0.790514,8.960391,-8.255286,-2.511241,8.060987,8.420988,-2.929505,-4.008516,-0.221292,-4.199107,7.622630,-5.641887,5.978871,9.846299,-9.438260,5.758047,-1.253090,-0.665589,0.804333,-5.697606,-1.014430,3.961781,-5.047141,7.843295,1.576018,-8.245900,3.893552,-7.560809,-7.471731,-3.696660,6.794479,5.651337,-2.344130,-1.280662,-8.568393,-8.463127,7.012753,7.637847,8.291790,-6.246616,-0.833213,0.098225,-4.635965,-3.635493,9.317905,3.364492,-0.752723,-1.624284,-9.480122,-4.697483,-7.482370,7.248556,-9.233975,4.843674,-9.620639,-0.578652,6.681306,-5.387593,5.435930,-2.344646,6.090082,6.307390,-6.393941,-6.228571,8.380165,3.136619,5.076075,8.701107,4.321950,5.047321,-4.760745,6.165809,-8.468839,9.828181,-9.175829,-4.399672,5.746021,-6.858927,-7.058831,2.471338,6.538222,2.202185,5.383788,6.996322,4.048793,-7.017316,-7.353420,0.220329,-6.390723,2.713638,-2.391224,-5.276877,6.863920,1.209603,-5.331990,6.056013,8.781059,-3.887523,5.807385,-9.741166,9.678127,7.287009,-2.499196,-1.263299,2.434287,8.177670,5.873176,-4.470977,-6.662787,-8.843130,-7.682665,4.350711,-6.152029,-5.404793,1.076314,1.828757,-9.531476,-5.859703,4.994768,3.495101,-6.068803,0.111216,-5.321178,5.341247,5.181128,4.245625,2.374055,-3.838357,0.806313,-5.442551,4.634299,6.393029,-8.484322,-6.593480,-7.206344,-6.426986,-4.680114,-7.985672,9.781910,-0.949404,-7.149426,-3.163773,-9.815274,0.683472,-5.569469,-0.757124,6.980009,1.224915,3.634131,-2.299163,3.904808,1.814046,-7.920755,-3.991298,5.296360,-0.754396,1.643718,7.314335,6.510399,7.776788,-4.045019,7.562044,7.285558,9.298641,-1.765928,-3.665276,1.130520,-5.233711,0.938224,0.893840,7.472511,-3.195083,7.402010,-8.938159,1.814407,-8.806700,6.343404,9.469519,-2.283878,5.799436,-5.877527,-7.664814,9.163941,2.081180,9.442751,4.499737,7.053748,6.454404,-2.818029,6.837593,8.819104,7.670616,-0.549999,0.199159,-2.583675,1.803651,-5.130222,-3.059291,-4.504969,9.196955,-0.815939,-2.537545,-4.571923,-4.845782,7.853093,-9.206490,0.474302,6.568650,1.584908,-0.628077,-6.518195,-9.260425,1.438328,-5.396716,1.984338,-2.762212,3.079927,5.294504,-3.985487,-5.607534,8.448681,7.583929,-7.544105,-2.805628,3.892190,1.376906,3.910186,2.457904,-5.558799,-2.939045,8.997663,-2.430254,-7.498711,-0.520046,0.288589,-6.380096,-3.473570,-3.181210,2.690834,-7.158696,8.362701,-1.999541,6.449852,-7.653892,9.763256,7.166346,2.446855,9.696736,8.215243,-5.141042,-9.549704,-7.938196,-3.415658,-1.817949,2.528076,1.235802,-9.047244,3.016900,4.053584,-3.171148,4.008612,3.609569,9.404502,-8.092765,-3.465558,6.716820,5.847059,9.776131,-0.843746,3.362877,-6.110140,7.928680,-4.387677,5.212658,-9.766198,8.685179,2.791274,-2.089498,2.658096,-6.635188,0.569471,5.347687,2.341767,0.468949,-8.684727,9.293273,3.057208,8.691752,-3.051692,6.955011,-3.246184,-5.606102,0.011130,-5.225736,4.110838,-3.071659,9.171136,2.368985,5.901761,-5.475815,-9.698522,-2.001257,-8.082550,3.193488,-7.807421,4.043238,1.333117,4.166269,-5.820166,-6.700777,-8.937294,3.758249,-0.121686,-0.403010,1.263153,2.455985,-9.794850,5.124866,8.727240,1.871576,8.852863,5.168307,-1.114709,9.155204,-0.582119,-5.499857,-2.507492,-1.102276,0.551237,-1.749956,-8.052923,-7.145232,-8.711168,8.229360,-8.625051,3.523008,-9.221760,5.726416,5.861273,9.336934,-7.185582,-9.477132,9.340223,2.200444,1.102085,5.459875,7.855702,9.107666,7.207676,2.257393,0.096620,5.731077,9.079634,0.471941,7.826367,6.811726,-5.083337,5.966189,-7.174256,-0.900236,-1.991828,6.509314,5.544941,7.194186,-3.649814,5.187655,-4.308208,1.581828,5.822141,-4.418123,5.722696,-5.442242,-0.720230,-1.698473,-3.940698,-0.463606,-7.915777,-1.792311,-2.382720,0.272817,-0.905224,7.057366,8.079411,9.793356,9.601789,-8.793300,7.770322,-8.408783,-6.687330,-5.663805,-4.565638,5.377938,1.538070,-1.234946,-6.190256,-9.758075,-8.349842,7.343420,-3.670359,-4.399189,-6.483746,-9.557378,9.063006,4.267708,2.522683,-6.730644,4.081544,8.853361,0.883678,-9.964515,3.696747,8.090241,-3.904822,9.697900,8.920378,-7.035054,-3.431962,5.652268,-4.430653,8.564939,-7.485243,6.240773,-7.377877,-7.991425,-0.150092,9.999269,2.267487,-4.085463,2.842231,-0.744127,2.327405,-3.521083,-4.646339,-2.450313,0.459658,-4.012388,6.355176,6.646613,-2.307230,-4.661826,-5.440874,-2.513152,-3.128564,-9.809941,5.793817,-3.128435,6.539120,-9.600424,-6.181767,-2.228046,8.567792,8.040797,-3.972709,-7.838880,2.795319,-1.407795,-0.323489,8.262010,8.467363,-5.991285,4.012041,7.018503,3.223055,-6.751631,-0.283646,7.933804,7.274061,8.889273,2.586602,5.339770,-9.972592,7.042853,-2.675906,8.292200,-0.796378,-6.357956,-4.413659,-1.765461,-5.048489,6.824873,-3.297109,-7.641726,9.393121,9.170043,5.816955,2.115897,-1.121376,-3.601747,-6.418997,-4.052250,6.747436,-5.497028,9.213716,3.645471,5.113689,-8.805114,-3.938045,3.258956,-8.409674,-5.084280,8.342723,6.003857,-0.776027,6.130608,1.329514,0.670208,-5.571689,-8.212066,1.735617,4.536486,-5.362830,-0.965316,-0.898844,1.322711,-7.175493,-3.874595,0.896296,-1.359231,0.754566,-4.991265,3.640045,9.086056,7.690241,8.019161,-8.868461,6.097153,3.354281,4.346175,-5.418804,-5.180883,-3.137118,-9.643141,9.873091,-1.654147,-6.667429,0.192378,-9.557456,-5.086477,3.102583,-1.028704,-6.507758,-8.366660,4.581516,-1.249215,-6.661439,2.178845,7.456802,0.457091,-2.074936,-0.443333,-5.389200,-9.187591,-0.446221,2.997810,9.139148,9.596194,7.143594,8.018371,5.014584,-2.818763,-5.649099,9.471878,-0.408068,-5.588452,-0.479509,9.682013,7.452862,1.978402,-4.287747,4.648618,0.232751,-3.149684,-0.897070,6.257568,3.889526,-2.157813,2.593273,3.338031,-2.844625,-3.445805,-8.264309,3.254311,-6.583961,-3.351109,7.805974,-6.732910,-1.209129,-6.285182,-2.388556,1.350240,3.506541,3.079699,1.805240,-4.123788,0.068700,-2.650383,3.204665,2.680778,-2.359171,-7.289108,9.557842,-8.045587,6.171658,-4.789352,1.763210,3.644638,5.567163,1.064769,-9.399997,-1.360035,6.047512,7.984714,9.573761,-8.240944,-3.245411,1.969784,5.240272,-5.456614,-5.125603,-0.207762,-4.030661,5.456473,-8.451130,-9.404354,-0.895804,-7.458003,1.217962,-6.413945,-9.509195,-5.948629,-9.321418,-1.184442,-9.678736,-0.613512,-1.001251,-1.782188,7.491933,-0.361376,-5.453879,-6.619559,-5.794913,-2.665156,-1.866667,-8.687962,8.089697,-1.563715,-3.506522,3.510262,3.870279,-7.947237,-0.971853,-5.461115,-4.099513,-8.092922,3.000276,6.677378,6.545342,1.833827,1.762984,5.995995,-6.502607,-4.147948,-2.435709,2.805188,0.107185,4.359612,-5.330143,6.444432,8.882449,-6.885980,-6.777298,-6.462727,2.170010,-8.399139,2.297620,-1.516609,1.895276,-4.794388,-6.656351,7.045823,9.060316,-9.838364,-8.350756,-7.615151,9.444414,-4.145535,7.363363,9.466949,-4.187794,1.895356,5.108713,6.964526,-0.648162,8.718342,-0.894329,-5.889060,9.623953,5.866987,2.522076,8.318775,-6.530473,-2.809277,-7.235935,9.136147,7.987863,-9.147183,-5.799402,3.243762,-1.334185,9.913144,7.536512,-1.383883,-8.404275,-8.094399,-9.909083,-4.813989,8.638531,-6.567006,2.584676,-9.832890,-3.344483,6.851143,3.038365,4.773676,1.815717,-1.988168,-8.186660,-2.001259,-0.195693,-9.984627,-2.582918,-4.658394,-0.683046,-3.362863,-3.767342,-4.819972,8.548915,2.363474,2.953475,-8.088054,9.036740,3.037477,-8.530253,6.350884,0.158547,3.460816,-6.820015,9.206100,-0.188377,-4.836197,6.311139,3.887535,0.439247,3.257078,8.738314,3.391916,-3.099839,-5.097998,-7.954194,3.562344,-4.683827,-4.817174,-5.378339,5.868774,5.730919,1.377052,-0.942482,1.744569,3.767396,-4.589415,2.161600,-0.064844,5.688938,-4.992544,-0.381706,0.115540,-3.763279,8.279865,0.598041,6.096071,9.236501,6.560973,8.093152,3.507471,0.766501,3.079404,9.282668,-4.099847,-2.542639,3.996210,9.980100,7.873622,-3.593778,-6.704629,8.733607,-5.304413,7.723742,1.581067,-5.060067,7.783105,-9.079543,-6.444609,-3.219680,-9.604946,4.338324,6.036457,-7.181488,-8.380213,-2.855540,8.165155,-2.518631,-1.122297,1.668213,-9.419103,-7.541642,-9.046776,-9.433075,-1.868843,8.914884,-0.206511,-7.571297,6.866365,-2.493003,3.473327,3.029603,2.488270,-6.152001,6.278115,7.885981,-0.601725,9.033064,-9.217309,6.593381,3.069802,-1.848427,-2.702801,9.275844,3.720577,5.559651,-1.492078,6.115377,7.670985,4.935770,-0.136198,-6.402884,-8.293522,2.385744,-8.270287,-8.258276,2.065369,2.837376,9.347815,-1.146117,-6.781022,-8.137150,-2.761092,-6.509938,3.817988,-2.239721,-3.698483,-1.594658,-7.287876,-9.046928,3.330993,-8.104312,5.298664,-3.892574,4.074538,8.531576,-9.929035,-5.209090,-9.521952,-7.510134,8.691239,2.095249,-9.665954,-6.832858,0.882020,0.595714,0.808682,5.494179,5.863461,-6.303633,-9.343095,-6.809767,5.783072,6.175109,-3.519929,4.075565,-5.992362,6.767684,5.501350,-1.782697,-7.785844,3.842378,7.275627,-6.660565,-4.157071,7.229841,6.257415,7.480911,3.448449,-0.880636,3.907202,5.749087,-0.219632,-6.504306,-4.908956,-6.111603,-6.119696,4.923004,-6.186078,-8.722227,-6.081209,-0.315234,1.215388,-5.028011,-0.178452,-8.632629,-5.466843,-6.961732,4.832776,-5.737758,8.320718,-9.605792,-6.588007,7.988694,-7.856801,0.357860,-6.039761,-2.618277,-3.513615,-7.730082,0.972206,-4.224848,-2.605123,-7.249512,5.691447,5.860101,7.416600,-0.834002,2.212911,-9.059956,5.078733,-0.062338,4.798740,0.425685,4.652659,2.132906,5.438972,6.592521,-5.611574,3.836194,-3.100453,-8.731222,-1.686624,-2.196114,-8.401212,7.581582,-1.182086,4.681370,-5.399977,5.788562,-5.730165,-4.540280,-4.301111,6.880170,0.029492,-1.796039,-0.705374,5.991365,9.848937,-9.589620,2.470002,9.467574,-8.950483,2.496722,-0.874492,-1.977623,0.738885,-9.073462,-2.681638,-1.560829,-4.155218,-2.837119,1.289610,7.752391,1.570592,2.739572,-1.895238,-6.161974,9.746590,6.800872,5.575169,9.187221,5.681687,-5.667068,2.137554,0.221490,-0.077143,-7.822112,-8.327162,-0.501408,-0.140253,-5.662254,6.957837,0.504214,-1.406905,-1.494642,-1.575452,4.303626,2.985063,-9.261589,-4.735806,-4.754848,5.312824,7.098989,-8.478357,2.514308,0.129497,8.402559,-0.897092,9.256972,-6.270525,-7.464327,7.963054,-7.447641,-2.312344,-9.187289,-8.875763,3.807758,5.705352,9.728323,-1.292213,-9.642610,-4.001479,-4.702955,-3.119433,-6.246875,0.683297,-1.176838,-7.389330,0.773875,0.060127,8.302768,-7.915269,1.966702,7.811233,-1.897042,0.278433,6.571102,-3.708948,-0.986594,-1.104474,7.371636,-0.569556,-9.134202,-3.048127,6.936227,2.305802,-4.451728,7.299814,-8.420974,-5.692288,-8.030057,7.582011,-9.749910,-9.516875,3.536832,2.435502,-4.887774,-6.092283,-9.530932,8.585404,-4.458034,-2.934565,-6.445923,-4.979151,9.991961,5.395570,-6.951230,5.110699,5.107606,7.929905,-2.511174,9.967342,-6.000601,-1.846027,5.842213,-8.704823,-4.038252,-1.716791,-2.624939,9.903957,0.399786,-8.000607,-8.099621,-5.915656,7.995129,-1.127147,-1.645901,-0.981350,3.021366,8.582936,-5.679008,-7.505103,3.526982,-7.640974,0.732275,0.633091,-9.344054,-2.712969,1.131482,-7.630653,-6.405496,0.757020,9.317344,-4.357654,-4.008987,2.250944,1.119910,2.982663,-9.183784,5.820603,-6.578226,-7.857981,-9.123526,4.967432,-4.369050,-3.999038,-4.320612,2.984918,0.923045,-4.993616,-8.211972,8.643519,4.187514,-5.612021,-4.915279,8.276754,-0.340934,9.006699,-7.487725,-8.995144,4.383110,2.370276,-7.990522,6.732926,-1.310263,9.311473,5.587717,2.338612,-1.439695,-0.433873,5.377606,7.973171,2.401775,-7.895944,0.974074,-8.101903,3.387679,-0.028110,1.039197,9.897352,0.648432,-1.397043,1.065823,2.658281,5.033733,-9.198993,6.744089,-8.916895,8.713227,-4.111283,6.563589,0.158739,-8.996710,9.089227,7.736682,-8.287075,2.481576,9.498344,-1.157418,-1.759004,-7.156024,-7.515495,-2.200309,-1.691128,9.974512,-0.959779,-5.822662,1.550227,8.841339,-0.406345,6.419289,6.283249,3.908804,-7.764372,9.967585,5.596727,1.658492,2.397687,-2.637828,8.787149,-1.012324,-0.453438,1.789115,-1.201206,-0.721417,9.572986,1.528601,6.814667,0.077911,-8.546446,-6.426206,-2.417012,8.582745,-9.078859,-3.554224,2.972648,5.458402,8.340515,2.779793,-4.705520,-3.639012,1.619598,-1.182240,-6.879523,-4.858926,6.541796,-7.963197,7.272740,0.101584,9.530035,8.211932,1.568673,-2.354080,-4.113783,-8.594283,-4.132049,-6.484880,-1.820373,-5.689836,5.675935,6.965478,6.900134,-7.993837,3.622072,-6.507997,4.827041,4.402669,4.872426,9.315006,7.732680,-1.366193,-8.156960,3.423037,1.228217,9.262059,2.548081,7.518260,-6.770519,7.473877,-0.157764,-9.485375,6.813029,-6.605655,-7.158818,-6.041108,4.832312,5.524704,-3.714770,-7.460219,-1.774076,-7.082925,-4.518797,-8.446970,1.033371,-8.622152,-2.542188,-7.934939,-0.559577,-0.025968,-7.162430,-5.236236,3.417282,-4.174500,-0.369335,1.740993,-8.610543,-8.059249,-3.163770,-6.638107,-8.189521,8.719967,0.088240,4.785157,-1.369697,-6.130087,-9.702351,-9.182688,-8.945388,4.243616,4.883215,6.574723,-5.125402,-8.521400,0.384508,1.248825,2.667261,-5.604107,-6.415119,-2.508947,0.252215,6.859008,9.515226,8.244909,-0.362130,-1.266143,2.820644,-6.216066,-2.898175,-9.874862,2.595184,2.451233,-9.580843,5.197128,3.657578,3.247818,3.557276,2.563118,-7.980254,-9.960816,6.079165,-6.622555,2.789866,1.950978,9.498115,5.424628,5.317655,7.815531,-2.346860,-3.323967,-0.493412,-3.781008,-5.094931,-6.503964,-3.809351,-5.630054,-3.986262,-9.786869,2.835088,8.886923,-3.346562,7.196135,9.003569,4.179643,4.905845,-2.550648,-8.002882,8.157582,-3.029236,4.278539,4.271257,-4.491194,3.514525,2.647888,-5.916017,1.476609,4.701497,-0.899581,-3.213512,-4.417494,3.775011,7.583227,6.979340,9.049421,7.967409,-9.490922,-8.389343,-2.718364,3.301765,-4.870601,-9.568070,-8.000857,-8.620692,-5.480710,8.306670,-8.931152,3.450122,-8.802544,0.576673,-0.381702,-7.111204,4.534541,-5.661657,-4.467341,3.887339,5.367365,0.268246,3.632438,1.381579,-8.926629,-1.477922,3.599103,-1.212676,-1.075816,3.001825,-3.432472,4.774907,-8.486964,3.987205,1.083980,7.655872,-7.059203,5.874526,-9.893458,-7.429462,6.905566,-5.833056,-1.179616,-9.606521,-1.244541,-3.301760,1.828828,-7.985009,6.453750,3.699039,-7.358388,6.863143,4.452682,-6.188775,0.137399,-2.488491,8.117492,-7.162774,5.030441,-2.922648,-5.798294,2.077888,-6.055519,-3.878436,2.312633,-5.061128,-7.154071,1.155756,-0.466934,-9.793099,-1.689582,-0.581337,6.684311,3.414335,3.479316,-1.554117,-6.452945,-4.523443,9.998496,-7.740129,-4.160660,-6.399299,2.736423,-2.914450,2.231182,9.349065,9.296342,9.861580,-6.801358,9.019721,-1.262220,-2.714382,6.821417,8.665131,0.381470,-0.790519,-5.485124,-2.828267,-2.331663,-5.517489,1.074717,2.016322,9.871486,0.394050,9.141784,-2.466805,-3.507603,9.605025], dtype = "float64")#candidate|7283|(1800,)|const|float64
call_7279 = relay.TupleGetItem(func_5627_call(relay.reshape(var_7280.astype('float32'), [6, 10, 13]), relay.reshape(var_7274.astype('uint32'), [3840,]), relay.reshape(var_7281.astype('uint64'), [378, 1]), relay.reshape(const_7282.astype('int8'), [20, 72]), relay.reshape(const_7283.astype('float64'), [1800,]), ), 11)
call_7284 = relay.TupleGetItem(func_5633_call(relay.reshape(var_7280.astype('float32'), [6, 10, 13]), relay.reshape(var_7274.astype('uint32'), [3840,]), relay.reshape(var_7281.astype('uint64'), [378, 1]), relay.reshape(const_7282.astype('int8'), [20, 72]), relay.reshape(const_7283.astype('float64'), [1800,]), ), 11)
output = relay.Tuple([bop_7250,call_7272,var_7273,var_7274,const_7275,call_7279,var_7280,var_7281,const_7282,const_7283,])
output2 = relay.Tuple([bop_7253,call_7276,var_7273,var_7274,const_7275,call_7284,var_7280,var_7281,const_7282,const_7283,])
func_7295 = relay.Function([var_7249,var_7273,var_7274,var_7280,var_7281,], output)
mod['func_7295'] = func_7295
mod = relay.transform.InferType()(mod)
var_7296 = relay.var("var_7296", dtype = "float32", shape = (10, 10, 11))#candidate|7296|(10, 10, 11)|var|float32
var_7297 = relay.var("var_7297", dtype = "int16", shape = (810,))#candidate|7297|(810,)|var|int16
var_7298 = relay.var("var_7298", dtype = "uint32", shape = (3840,))#candidate|7298|(3840,)|var|uint32
var_7299 = relay.var("var_7299", dtype = "float32", shape = (780,))#candidate|7299|(780,)|var|float32
var_7300 = relay.var("var_7300", dtype = "uint64", shape = (378,))#candidate|7300|(378,)|var|uint64
output = func_7295(var_7296,var_7297,var_7298,var_7299,var_7300,)
func_7301 = relay.Function([var_7296,var_7297,var_7298,var_7299,var_7300,], output)
mutated_mod['func_7301'] = func_7301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5806_call = mod.get_global_var('func_5806')
func_5807_call = mutated_mod.get_global_var('func_5807')
call_7314 = relay.TupleGetItem(func_5806_call(), 0)
call_7315 = relay.TupleGetItem(func_5807_call(), 0)
output = relay.Tuple([call_7314,])
output2 = relay.Tuple([call_7315,])
func_7320 = relay.Function([], output)
mod['func_7320'] = func_7320
mod = relay.transform.InferType()(mod)
mutated_mod['func_7320'] = func_7320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7320_call = mutated_mod.get_global_var('func_7320')
call_7321 = func_7320_call()
output = call_7321
func_7322 = relay.Function([], output)
mutated_mod['func_7322'] = func_7322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6258_call = mod.get_global_var('func_6258')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_7352 = func_6258_call()
call_7353 = func_6258_call()
output = relay.Tuple([call_7352,])
output2 = relay.Tuple([call_7353,])
func_7383 = relay.Function([], output)
mod['func_7383'] = func_7383
mod = relay.transform.InferType()(mod)
mutated_mod['func_7383'] = func_7383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7383_call = mutated_mod.get_global_var('func_7383')
call_7384 = func_7383_call()
output = call_7384
func_7385 = relay.Function([], output)
mutated_mod['func_7385'] = func_7385
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7429 = relay.const([[[-7.217698,9.821386,8.192048],[-7.211946,-0.197824,3.813350],[-9.289320,9.138407,-1.205883],[-7.125285,-2.339838,8.571927],[-6.653334,-2.353470,-3.382969],[2.702930,-9.942032,-5.692661],[6.818799,-6.213520,1.193399],[-2.383515,2.327009,-5.860212]],[[-5.616075,3.619424,0.894374],[8.464072,-8.096823,-7.269008],[4.264186,-6.736500,-4.245145],[2.996596,0.953820,-8.283506],[6.325660,-4.713959,-5.137990],[-6.565878,7.166394,3.059119],[1.930260,-7.780245,-6.995486],[-8.075851,-3.398017,4.710703]],[[-9.127778,-9.598724,-2.958999],[-4.059450,9.922269,-0.798561],[-4.899821,4.518647,-9.347713],[-7.896973,4.139955,-7.548239],[9.214213,9.151176,8.952354],[0.334948,8.458456,0.097583],[-3.741102,-1.132681,-2.440558],[2.998749,1.238154,-7.704314]]], dtype = "float64")#candidate|7429|(3, 8, 3)|const|float64
var_7430 = relay.var("var_7430", dtype = "float64", shape = (3, 8, 3))#candidate|7430|(3, 8, 3)|var|float64
bop_7431 = relay.greater_equal(const_7429.astype('bool'), relay.reshape(var_7430.astype('bool'), relay.shape_of(const_7429))) # shape=(3, 8, 3)
func_4793_call = mod.get_global_var('func_4793')
func_4798_call = mutated_mod.get_global_var('func_4798')
var_7437 = relay.var("var_7437", dtype = "uint16", shape = (1, 18))#candidate|7437|(1, 18)|var|uint16
var_7438 = relay.var("var_7438", dtype = "uint16", shape = (144, 1))#candidate|7438|(144, 1)|var|uint16
var_7439 = relay.var("var_7439", dtype = "uint32", shape = (2940,))#candidate|7439|(2940,)|var|uint32
call_7436 = relay.TupleGetItem(func_4793_call(relay.reshape(var_7437.astype('uint16'), [2, 1, 9]), relay.reshape(var_7438.astype('uint16'), [2, 8, 9]), relay.reshape(var_7439.astype('uint32'), [3, 980]), ), 6)
call_7440 = relay.TupleGetItem(func_4798_call(relay.reshape(var_7437.astype('uint16'), [2, 1, 9]), relay.reshape(var_7438.astype('uint16'), [2, 8, 9]), relay.reshape(var_7439.astype('uint32'), [3, 980]), ), 6)
output = relay.Tuple([bop_7431,call_7436,var_7437,var_7438,var_7439,])
output2 = relay.Tuple([bop_7431,call_7440,var_7437,var_7438,var_7439,])
func_7444 = relay.Function([var_7430,var_7437,var_7438,var_7439,], output)
mod['func_7444'] = func_7444
mod = relay.transform.InferType()(mod)
var_7445 = relay.var("var_7445", dtype = "float64", shape = (3, 8, 3))#candidate|7445|(3, 8, 3)|var|float64
var_7446 = relay.var("var_7446", dtype = "uint16", shape = (1, 18))#candidate|7446|(1, 18)|var|uint16
var_7447 = relay.var("var_7447", dtype = "uint16", shape = (144, 1))#candidate|7447|(144, 1)|var|uint16
var_7448 = relay.var("var_7448", dtype = "uint32", shape = (2940,))#candidate|7448|(2940,)|var|uint32
output = func_7444(var_7445,var_7446,var_7447,var_7448,)
func_7449 = relay.Function([var_7445,var_7446,var_7447,var_7448,], output)
mutated_mod['func_7449'] = func_7449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mod.get_global_var('func_6794')
func_6796_call = mutated_mod.get_global_var('func_6796')
call_7515 = func_6794_call()
call_7516 = func_6794_call()
output = relay.Tuple([call_7515,])
output2 = relay.Tuple([call_7516,])
func_7517 = relay.Function([], output)
mod['func_7517'] = func_7517
mod = relay.transform.InferType()(mod)
output = func_7517()
func_7518 = relay.Function([], output)
mutated_mod['func_7518'] = func_7518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_7747 = relay.TupleGetItem(func_6801_call(), 0)
call_7748 = relay.TupleGetItem(func_6803_call(), 0)
uop_7773 = relay.log2(call_7747.astype('float32')) # shape=(4, 3, 8)
uop_7775 = relay.log2(call_7748.astype('float32')) # shape=(4, 3, 8)
func_5151_call = mod.get_global_var('func_5151')
func_5159_call = mutated_mod.get_global_var('func_5159')
var_7782 = relay.var("var_7782", dtype = "float32", shape = (1859,))#candidate|7782|(1859,)|var|float32
const_7783 = relay.const([1.970718,1.362402,-2.778202,-6.747825,-4.462150,-4.991946,-0.107270,-1.979663,-0.493905,5.146273,5.647620,9.817785,-4.246234,-6.899694,-7.593520,5.394924,-3.260428,-5.177602,4.124250,-2.679226,-4.126650,-1.704147,-0.573358,-5.950807,0.412505,8.792126,3.102079,-5.588174,-0.353915,9.728125,8.769164,-9.763374,-9.366818,-5.609305,5.882774,1.316024,9.020638,5.828653,-9.571757,-0.096002,5.693745,-4.275496,5.555960,9.864328,-9.082963,-4.196096,8.827836,2.242221,2.567507,4.425134,-4.182198,-0.507647,-0.730150,6.073304,7.900109,-2.320657,-8.912529,9.788213,1.626120,3.345613,-3.525125,0.505889,9.878487,4.540810,-9.945205,7.922926,4.371477,-8.975854,2.994619,-7.669120,-3.325433,-7.875002,1.397641,-2.517336,-0.750418,-8.340173,5.704060,-2.615937,6.594032,9.979516,-6.556101,-3.896632,8.542002,9.800988,0.053730,6.103880,-6.075074,-1.678488,-9.544746,-0.863992,-9.021738,1.714163,5.758269,-6.653837,6.771117,-8.739427,2.055816,4.335346,-4.089160,3.283871,-1.388850,9.088011,-4.685416,-8.465802,-8.289947,3.626346,-1.242883,-3.739466,-0.030993,-6.765454,-0.974763,8.093672,4.941947,-9.262598,1.256678,3.255109,5.902422,-1.567135,-4.907396,-4.164851,-1.614885,-8.222464,-9.857141,-8.334951,3.422710,-9.724310,6.097299,1.933908,-2.053071,-2.705672,-2.752828,5.910714,-8.223780,8.861449,-8.864070,3.166212,-6.492413,6.836270,-8.046879,9.575065,-0.234838,-5.658492,-5.524736,0.170628,0.424230,-3.343726,6.061683,3.423921,-4.971099,5.443237,-1.870203,4.343516,-3.183592,0.399653,-5.788551,-1.768543,-8.832401,-8.824832,4.105206,5.866421,-1.541915,-3.204788,1.590107,5.305322,-5.669094,6.729581,-2.389229,6.595104,2.313584,1.839348,-0.100840,8.203082,-7.989002,1.424073,9.214358,0.443320,-3.179290,9.351728,6.870632,2.112956,5.088888,0.357589,4.117511,-5.529648,9.939680,-8.595389,-1.837723,7.280252,-6.154414,-6.512800,1.443908,1.423773,3.617072,-3.862702,6.870230,-9.602384,-4.116880,-5.777078,2.501563,-0.101661,5.950957,-8.375305,-1.696487,-4.320520,-1.002819,-6.263168,-6.112321,1.845781,6.829571,8.134948,-7.763329,8.207283,5.768561,-5.415088,4.865794,2.117112,-5.032183,-6.500583,0.788638,6.345828,8.117334,-0.599512,0.054947,2.500190,4.003428,9.082608,-0.306828,-6.726270,5.024880,-1.455765,1.188541,7.897887,1.115790,7.254438,-7.437959,-4.652093,-0.270935,-5.095425,2.058800,-5.446972,-8.525970,-0.018139,1.494089,-8.445010,5.802113,3.444477,-1.867443,-3.229908,-9.217847,2.166071,-2.764988,-3.311824,-8.113526,-8.723231,-9.373863,-9.447790,6.607005,3.779299,8.988805,3.425610,4.632624,9.942627,8.686978,0.324074,4.500693,-9.986824,4.250827,1.251518,1.368447,7.643867,-2.430136,-5.642740,-3.691181,-1.941802,7.028061,-8.728779,-2.240142,1.500931,-2.686112,0.224894,2.984281,1.694688,-2.170388,-1.207101,7.344367,9.325853,4.723925,2.726949,-3.797985,4.549661,4.070753,-2.209148,4.286447,1.992582,-6.623728,-0.207048,-8.770150,-0.530031,-7.476261,0.946424,-5.334617,6.185887,-6.947633,0.049452,4.594002,9.972170,8.947023,-4.048214,3.390733,-4.478630,6.409407,5.647913,-9.411130,-1.761941,-8.945508,-7.459951,2.572908,-8.715265,-0.484352,-4.041836,-0.166183,-6.327344,7.994676,-9.058445,-6.609126,-3.347882,5.586870,-2.291265,-7.982940,-6.120899,-2.126333,5.520580,3.499423,7.603674,-8.557776,8.354178,0.395791,-3.324937,-7.608888,0.625992,7.045765,-2.988234,0.078237,-9.146968,-5.022797,-4.768243,-6.161351,-8.317629,4.181128,0.151213,1.009195,-8.459953,5.189380,4.778254,-0.077711,-7.168542,-6.348404,-6.153475,9.070861,1.700450,-9.878365,-3.845262,-6.868204,-2.128258,2.272959,7.137938,-2.972127,1.822262,-3.898099,0.812030,-1.383707,-0.419611,2.804890,-7.570345,1.075071,-9.324475,-5.890582,-9.085268,2.233542,-2.682972,0.166016,6.971268,-0.023528,2.619764,3.554479,1.261903,-1.257433,-6.621183,-3.171136,0.469837,6.375206,8.431121,-4.416204,-4.214570,-6.522317,-5.414465,-9.376787,0.530980,0.712931,7.742976,-4.752552,-4.330819,-5.177846,-3.110511,9.537363,-1.103411,4.691878,-0.494691,-7.546228,7.127972,-8.469802,-4.517265,4.156009,6.840122,-0.022651,5.842582,4.839232,8.800581,-9.190220,-2.774610,3.022553,-4.961076,6.159277,7.765334,6.464171,-6.079415,-4.349213,-4.651525,8.822588,-4.152312,-9.899056,-6.966610,5.788824,8.072699,4.390968,-1.717453,3.959733,4.511794,9.778700,-0.904053,7.727419,-4.700256,7.737639,3.345254,-5.416263,-3.138164,7.302015,-8.002037,-0.262209,-4.369169,-0.761280,8.106791,-7.661023,-2.962527,5.358238,-6.736145,0.658583,-9.608969,-3.452993,9.062421,-6.513518,0.326419,-2.352626,-0.590050,-6.783913,-3.783484,1.707957,-3.477200,-2.585995,-6.588746,2.368621,-9.157407,7.999063,7.498548,-3.028140,0.217758,-4.557304,-2.308193,-1.690233,6.749088,-1.698959,7.543589,7.801652,1.134083,-3.240982,0.739181,-3.968020,9.057283,1.704621,3.078862,1.629582,-9.734950,-2.134241,4.894098,5.566788,2.162423,-6.786079,-5.516300,-5.219900,-4.751307,7.179520,-5.373470,6.648238,0.438764,-6.501641,3.368164,6.107044,7.568895,-1.947791,0.032190,5.850401,3.452605,7.473187,-8.018583,6.993336,2.171807,-1.592429,0.730749,3.587912,-2.373252,7.960484,7.735951,8.256578,-5.226573,2.538770,-1.519605,-5.343995,3.512409,7.036352,4.760984,-1.671515,8.238069,-2.640020,-9.720111,1.222423,7.176720,-6.983041,-8.330791,9.057603,-2.750152,-1.632074,-5.206866,-0.172538,-2.669058,2.817163,2.239238,-8.883223,-8.379258,5.573724,-7.474630,-1.164630,9.917055,4.172523,-2.510638,5.556553,1.913126,8.374903,-8.663331,3.901228,1.148280,3.324151,-9.968168,9.679702,-6.641852,-4.200213,-9.402338,9.335477,3.759590,0.157507,4.918107,-7.987135,-5.586045,-1.298369,-7.709640,4.767233,-5.509619,-1.686510,9.239639,-4.978059,-6.223412,-1.567800,2.923074,-0.850565,-9.449697,-7.774912,-8.538630,9.585684,3.404700,-2.361770,3.814125,7.327825,-5.427578,7.984094,-2.238970,4.447100,-6.587440,0.473532,2.243091,-8.852852,1.951778,-2.411178,-5.924608,-9.156688,1.337722,8.129189,-2.559190,4.546031,-2.374001,-3.329518,-9.076845,5.822443,-9.125524,-7.903388,-7.651545,1.918579,0.936422,-7.324171,5.900395,3.327338,2.910649,-9.821422,-0.540474,-4.051616,-4.960648,0.836434,-5.423544,0.919432,1.295597,9.108079,-1.802400,1.610352,-1.455620,5.631329,-3.350302,-0.344893,3.914410,9.680484,-6.741704,-3.940437,3.341099,1.580563,-4.128992,-8.227501,-5.245662,-4.832205,-3.375539,3.834996,8.628719,6.081704,6.325843,1.730240,-7.834493,-2.563740,-2.921585,3.777324,-3.906653,6.436260,2.095926,-5.285786,8.065513,-0.014631,-9.969610,-4.639365,4.105634,7.253733,-4.338438,0.255693,-3.594648,5.194524,1.726695,-2.397618,-3.111734,-9.602856,0.984317,9.658992,3.074666,-4.183038,1.366684,6.238241,-4.426300,-1.636026,4.576741,9.166508,5.080325,-0.842373,2.437392,7.203302,8.315774,7.966909,-6.066689,0.551536,3.327319,-5.138734,7.943726,5.918303,-9.045483,-3.817219,8.574387,3.963493,-9.903551,4.993232,-6.076750,3.348874,1.623021,-4.308782,-6.541825,6.899910,-9.170132,-9.732455,-9.142749,0.224454,1.829189,-3.716679,-9.502487,-2.625810,-7.137995,-3.946897,-7.887728,-5.932330,7.013350,5.989576,-3.663508,7.970652,-9.963300,-0.781772,4.007168,-3.644810,0.427037,1.656232,-3.903519,9.799817,-3.393305,-4.433929,3.982223,-4.298890,9.642347,-4.258791,-1.976788,-4.307472,-6.635576,2.998546,5.982449,-0.132283,6.274543,-7.681161,7.043654,-0.835321,0.343815,-8.781582,1.733047,8.401720,4.523434,-1.534416,3.243149,-2.726123,-7.061893,1.312706,7.555034,-8.644931,-4.043881,6.697785,-2.335530,3.691588,-8.018973,5.925688,-1.164548,-8.571665,-4.275231,0.336051,-6.775820,4.261165,-8.226050,-2.667186,6.073667,-7.752621,0.931051,5.839552,8.509477,9.599402,7.016930,2.272454,-0.834339,6.910582,-1.902225,-2.823391,-0.118843,5.695031,4.240146,8.283968,6.745420,-5.739116,5.827756,-0.920906,-1.676104,-2.513310,-9.286123,2.194853,3.937843,-9.576916,8.917503,-2.716254,-4.433853,-4.681957,7.295033,-9.642365,6.313774,2.041811,3.804099,4.968410,-6.427050,2.883297,1.758004,2.966125,5.702700,1.231004,-1.234872,-7.736947,6.483730,-7.425955,-4.763148,1.804914,7.081484,-4.688967,0.983102,-8.246766,3.561626,-1.991442,-6.642721,-7.983625,5.412523,8.306439,6.221242,3.228284,-2.533638,-4.061454,-3.092701,2.101386,-9.413413,-7.344664,5.552925,5.051815,-9.686578,-6.865019,4.928332,-9.643173,-4.461801,0.433815,-4.238779,-8.067488,-3.847461,1.607444,2.123247,5.780308,5.904757,1.508299,-6.910340,2.310330,-1.636369,-0.577903,-4.620805,1.601127,-8.074851,2.288435,0.681796,1.289530,-8.991678,-8.533715,3.889484,9.814283,-0.118679,-3.129396,-8.144143,7.475022,9.921584,-5.315876,7.709431,-2.181294,-8.034894,-2.938746,0.982788,-4.367152,-7.310175,0.524130,-2.723951,-2.968249,4.522686,9.006002,2.907316,6.731064,-3.324868,-3.981231,6.541372,3.487442,-7.265193,9.217420,-4.452413,2.827366,-7.085400,-6.791112,-7.673949,0.861080,0.322780,3.245655,-5.147811,0.359954,-4.208281,-3.494751,-1.130164,-8.324441,4.521452,8.235891,9.649547,-0.897783,8.784593,-2.568836,-4.945013,-5.446947,-7.438188,-1.558715,-5.958990,-0.876541,7.729899,-8.729970,-5.846896,2.954649,-8.588551,1.682717,3.145360,3.940776,9.083363,-7.482547,-2.236796,6.061863,-1.680444,7.669120,-7.839789,-5.888929,-4.926984,5.675018,8.088740,-9.821854,8.891654,8.419855,7.552019,-7.300173], dtype = "float64")#candidate|7783|(945,)|const|float64
var_7784 = relay.var("var_7784", dtype = "int32", shape = (1568, 2))#candidate|7784|(1568, 2)|var|int32
const_7785 = relay.const([-4,4,-10,-4,-8,-8,3,9,-6,-8,10,-1,-8,5,-8,8,7,-9,-2,8,1,-4,1,-2,-2,-6,-2,9,-7,-8,7,6,-7,-3,-7,8,-6,6,-4,6,1,-8,8,-3,-4,-9,-8,-6,-9,1,-9,8,1,-7,-2,-3,-5,-6,-10,10,-9,-6,-6,-9,1,-5,-10,10,-6,-8,-9,1,-2,1,-5,6,1,-8,-4,4,-8,-10,1,-2,8,-5,-1,-3,5,-4,4,-2,-2,4,9,3,-8,-8,4,5,-9,9,1,10,-5,-6,-4,5,-3,4,-10,1,-2,6,8,10,-4,-7,2,-10,-4,7,7,6,5,-1,-8,3,-1,10,10,9,10,10,-7,-8,-9,1,-8,-7,8,8,-10,8,9,3,7,-5,9,-8,6,-9,10,2,-8,1,-8,-4,9,2,-9,7,-8,-4,8,7,-7,-10,6,-6,-2,4,7,8,1,4,-8,7,-7,-5,2,-10,8,-7,3,-1,-4,5,-5,9,-5,-6,-6,-9,4,8,7,5,10,-10,-7,10,-7,3,9,8,5,-7,6,5,-3,4,-5,-5,-10,9,-7,-9,3,-8,3,6,-9,10,10,-5,-2,-3,7,1,-3,5,9,-6], dtype = "int8")#candidate|7785|(234,)|const|int8
const_7786 = relay.const([[3.432300],[-2.517660],[-6.197484],[-9.306212],[9.081475],[-7.057506],[7.814144],[4.614090],[8.256234],[3.232601],[6.509728],[9.918287],[0.655102],[5.929413],[8.263343],[-8.419228],[0.750014],[5.871098],[3.654751],[9.251000],[7.599695],[-2.645719],[1.217378],[-2.065619],[-8.372661],[8.590682],[0.418571],[7.222653],[9.287576],[-7.039699],[3.413088],[-2.828708],[-4.859502],[5.683487],[9.856816],[-2.786180],[-2.305696],[7.568521],[-0.840751],[-2.214757],[-3.429658],[-1.770849],[-1.282443],[-7.797214],[-1.604851],[-6.718796],[4.987803],[5.069399],[3.400388],[8.438202],[9.689714],[2.085122],[-8.545554],[-2.746258],[-8.596224],[-8.668224],[-1.357065],[0.552855],[-2.518207],[1.802421],[-4.106323],[2.364022],[-3.604076],[1.844666],[4.623246],[-9.828606],[-8.233185],[-2.434558],[-5.523064],[1.498984],[0.698479],[0.889293],[4.202726],[2.903288],[-7.134378],[-9.779547],[-2.539555],[5.234540],[-8.703064],[-2.219061],[3.229158],[1.682443],[3.658163],[7.354351],[-7.905544],[-0.950947],[-9.106393],[4.475346],[-8.019057],[0.116250],[4.859136],[-5.294078],[6.730965],[-0.371429],[-8.766850],[5.816556],[2.500810],[-6.100447],[-7.219029],[1.323681],[-9.685291],[9.377725],[3.270268],[-2.438519],[0.822428],[6.284148],[-4.582419],[-1.470652],[0.841540],[1.468536],[-0.330326],[7.199484],[1.505413],[-1.983867],[5.356429],[-0.799293],[7.346240],[-9.491766],[6.243562],[0.591414],[1.368373],[6.222050],[-5.879668],[5.843780],[2.844157],[2.635677],[-0.710954],[8.361765],[-0.403832],[1.548967],[8.684702],[-6.359700],[2.939469],[-2.660913],[7.526588],[8.468585],[-4.283787],[-1.957834],[0.032318],[-0.124950],[2.457810],[-7.934971],[-6.031619],[9.679279],[1.902645],[9.769867],[7.978340],[3.125576],[-1.213074],[5.265303],[9.046573],[-5.227674],[0.598616],[-8.774522],[1.644295],[9.589593],[8.286778],[-8.484258],[-1.408621],[-3.111452],[-2.481255],[-0.077803],[1.392581],[1.067647],[6.653744],[-8.019181],[7.272116],[-6.312070],[6.373088],[2.917822],[3.096877],[8.778146],[-9.245464],[8.724512],[-5.139290],[-8.086224],[9.270727],[-5.477166],[7.018775],[-3.686929],[-5.203462],[1.978556],[-9.078983],[-9.023382],[0.836648],[-1.804012],[5.182886],[2.494134],[0.966316],[-6.047443],[-3.585250],[-0.439726],[7.958894],[8.635769],[-7.229928],[-4.198119],[-3.314243],[8.241717],[5.003906],[-7.797285],[4.368720],[-1.195832],[8.900987],[7.862551],[-3.206826],[-8.407892],[-3.952440],[-5.222847],[1.294293],[-3.728903],[9.916978],[-5.043913],[7.707205],[-2.075843],[0.966202],[4.548845],[6.587022],[6.802766],[5.931666],[3.520739],[-2.825608],[-0.341452],[0.912322],[6.879441],[-5.809308],[-7.863067],[-5.680806],[2.808326],[-4.066585],[-6.102746],[7.194093],[5.697871],[5.947058],[1.347676],[3.550530],[-4.873984],[-6.650496],[-9.218171],[3.795054],[-5.253065],[-6.414030],[-4.027109],[8.904512],[-0.571284],[6.797096],[8.600956],[-0.832850],[-8.503211],[-7.589976],[-6.429252],[-0.891491],[0.102507],[5.041515],[-3.840298],[0.741647],[7.047464],[-2.977957],[-9.898884],[9.415320],[2.938155],[-8.818179],[3.203263],[5.105144],[-4.286449],[2.723663],[8.357939],[-7.593019],[-8.908882],[3.997818],[-2.654990],[4.557371],[-3.646348],[0.499157],[4.638461],[0.383583],[-5.032482],[-6.772581],[-8.957417],[3.715005],[8.017934],[0.603113],[-3.135334],[4.444724],[2.766834],[-0.336618],[-4.089759],[7.784627],[3.032836],[3.766709],[-2.031443],[2.235232],[-4.256357],[-9.604270],[-5.753158],[-8.784080],[6.126175],[-3.495411],[5.392915],[-2.436348],[-5.221985],[-0.741903],[3.841968],[4.244593],[2.124604],[2.969784],[6.063802],[-7.411854],[-7.086160],[-6.427322],[-9.197631],[-3.801560],[-4.077813],[2.122153],[2.939231],[4.101280],[-9.346769],[-0.877686],[1.621348],[-1.730680],[-8.335504],[-6.581035],[4.966782],[-7.954503],[-2.596360],[-6.662908],[4.944715],[-4.009754],[0.433607],[9.175317],[8.016633]], dtype = "float32")#candidate|7786|(330, 1)|const|float32
const_7787 = relay.const([[-7,-10],[7,-9],[1,1],[-1,10],[4,-3],[-4,-5],[1,8],[-3,-4],[9,-5],[1,7],[3,7],[-3,-2],[-9,-9],[1,4],[3,-7],[-10,7],[6,8],[-7,-9],[-5,2],[3,4],[-2,-7],[-6,-4],[4,-7],[4,-6],[7,-8],[-6,-3],[-5,-8],[1,-10],[-4,6],[1,1],[1,2],[4,-6],[9,-3],[2,8],[3,6],[8,6],[5,2],[-4,-1],[-2,2],[10,-5],[3,4],[8,-3],[-9,-4],[4,-7],[-6,5],[5,-4],[-1,-3],[6,10],[9,-5],[7,7],[-6,3],[3,-1],[10,-6],[3,3],[6,-7],[-5,-2],[-2,-1],[-6,4],[-7,3],[8,8],[1,-4],[6,10],[-3,-6],[3,-3],[8,3],[2,7],[-6,-1],[6,2],[-7,-2],[6,-7],[-7,9],[3,-3],[6,5],[5,9],[-2,-6],[10,-6],[6,10],[-7,1],[1,6],[-4,5],[6,9],[-1,1],[-7,-4],[4,-5],[-7,4],[-3,-10],[7,-8],[-6,10],[-2,1],[5,9],[-8,-10],[2,-7],[-10,4],[6,-10],[1,-3],[-3,-7],[9,-10],[-10,6],[-3,-4],[-2,5],[2,7],[-3,-2],[-7,9],[5,6],[-6,10],[-5,-5],[5,-5],[-2,2],[10,-3],[-8,-9],[-9,4],[-6,10],[7,7],[-10,-2],[4,5],[10,2],[-9,-4],[10,-2],[4,5],[-8,-2],[-6,-1],[-3,-3],[-2,5],[-6,-3],[1,-1],[-3,-10],[-3,-8],[9,-10],[-1,5],[-3,3],[9,-1],[-4,-1],[2,-8],[9,1],[-4,-4],[9,9],[-4,3],[5,7],[5,-10],[-2,4],[4,-8],[-1,-4],[-10,-7],[4,-10],[-2,-8],[-1,10],[2,-5],[-10,-8],[-2,-7],[9,-5],[2,9],[-9,4],[4,-6],[-10,-10],[-6,-9],[-3,-3],[5,-7],[1,-5],[-5,-9],[-5,-4],[9,-3],[8,-1],[8,1],[9,8],[3,-10],[7,-7],[4,-5],[-1,8],[-10,-8],[6,-3],[1,8],[9,4],[1,-6],[1,-1],[1,4],[4,1],[4,-2],[-9,9],[-10,-8],[4,1],[-7,-4],[-10,3],[-8,1],[-10,-9],[2,-7],[8,-2],[4,7],[3,-3],[-3,-9],[9,-2],[9,-2],[8,3],[3,-4],[7,-9],[-6,-9],[4,-7],[9,10],[10,-7],[-9,-9],[-10,-10],[4,8],[-8,2],[-5,2],[5,6],[7,-1],[2,-5],[-9,-10],[7,-6],[4,2],[-10,5],[-5,5],[-6,3],[-9,-10],[4,-3],[-10,-2],[3,-7],[9,-8],[-4,-4],[-9,9],[2,-1],[-8,-1],[8,3],[-7,8],[4,-8],[7,-2],[8,-9],[7,-6],[-2,9],[2,10],[5,10],[10,-3],[-5,7],[-6,10],[7,5],[-9,-2],[-10,1],[-10,-3],[-6,-9],[1,1],[5,-8],[1,9],[9,-3],[-6,1],[5,-9],[-3,-1],[5,7],[2,-4],[8,-9],[1,-8],[-9,9],[5,3],[-2,-4],[-5,3],[-5,-6],[10,3],[1,6],[8,-2],[-4,-6],[3,-8],[2,-9],[7,4],[4,-10],[-9,2],[-4,2],[4,-3],[-5,5],[8,2],[-5,6],[-4,-5],[-10,3],[-7,1],[-5,7],[7,6],[-9,-9],[-6,5],[-1,-5],[-1,3],[7,-5],[3,8],[-1,7],[-5,1],[6,8],[-10,-5],[-6,-7],[-3,10],[-8,-6],[3,9],[1,1],[9,-9],[-1,-8],[2,3],[6,-6],[-2,-10],[-3,1],[2,-9],[6,-8],[-1,1],[-6,4],[-2,5],[-9,-8],[-9,-3],[-9,-8],[4,6],[5,-4],[-3,-10],[-6,4],[-3,8],[3,-7],[6,-5],[-2,-8],[8,8],[-7,2],[9,-8],[8,3],[-4,7],[6,-8],[-2,1],[-5,2],[-2,7],[-3,1],[4,-7],[3,4],[-10,3],[-5,-2],[5,10],[-10,-3],[3,4],[-10,-9],[4,7],[-5,-5],[3,1],[-10,-4],[-6,-4],[9,1],[-7,1],[9,4],[-6,-3],[3,4],[-5,-6],[9,9],[-6,-2],[-10,10],[-7,9],[-1,-1],[5,7],[-3,5],[-7,-2],[-1,-10],[4,4],[4,-3],[5,6],[4,-4],[-5,-6],[2,-4],[-2,-5],[-7,-10],[6,5],[9,10],[-10,1],[-6,-3],[-8,7],[10,-8],[10,-5],[-8,-6],[-2,6],[-10,7],[-3,-6],[-5,-9],[-9,2],[-10,4],[-6,4],[6,10],[-4,-1],[-3,6],[9,4],[-10,9],[-9,-1],[-3,-8],[-3,-5],[-4,-9],[1,3],[-6,-9],[-1,-1],[4,-2],[-10,2],[5,-2],[-2,-9],[2,-5],[6,9],[8,-9],[1,-10],[9,-9],[-3,4],[-3,-8],[3,-3],[5,-10],[-9,5],[6,-4],[5,3],[-6,-4],[-3,8],[-5,3],[6,-3],[-8,-4],[-1,-2],[-6,-4],[-2,6],[7,-6],[-10,-10],[-3,-3],[3,-1],[-10,-7],[7,-5],[-8,3],[-6,-6],[9,-7],[6,-4],[-2,-7],[-6,5],[-7,-4],[-2,7],[-10,9],[-9,10],[9,-7],[-5,-4],[-1,-2],[-3,-2],[7,-5],[8,10],[2,3],[8,-9],[1,2],[10,-4],[8,9],[-3,2],[-8,-1],[-10,-4],[2,-4],[-3,7],[-1,-1],[-2,-2],[-1,2],[2,3],[2,6],[-7,-4],[8,-1],[-3,4],[-5,4],[1,2],[9,-5],[-9,-2],[-6,-2],[-9,-6],[-2,-9],[-5,-8],[-9,2],[2,-2],[-7,3],[9,6],[6,-10],[2,-3],[1,1],[4,-8],[4,2],[1,9],[5,3],[-9,-9],[7,-9],[5,3],[-5,-4],[6,1],[2,-7],[1,3],[2,-10],[-7,6],[-8,10],[1,9],[-10,3],[5,-7],[1,-1],[2,8],[2,-4],[7,-10],[7,8],[7,-3],[2,-2],[-2,-5],[-3,-7],[10,8],[5,10],[2,-7],[-2,-8],[-6,-6],[7,-7],[-9,3],[-1,-6],[8,-3],[-5,-5],[3,-7],[-10,-3],[-4,-7],[7,1],[8,-7],[-6,10],[-8,-9],[7,10],[-9,-4],[10,5],[6,-6],[-6,6],[-10,-3],[-7,-2],[-9,6],[8,-6],[4,6],[-7,9],[-5,-6],[-1,6],[-7,-10],[5,9],[-5,-10],[2,-10],[5,-2],[8,-8],[8,3],[8,1],[-10,10],[-4,-9],[-6,4],[4,4],[-1,-4],[10,2],[-5,5],[6,-9],[-8,-2],[-9,-3],[-10,5],[-2,-3],[-7,-2],[8,3],[8,-7],[6,1],[-8,-8],[5,-4],[-10,-1],[7,-5],[-1,-9],[2,-10],[-2,7],[4,1],[2,-1],[-3,-4],[-3,5],[-8,-6],[9,8],[9,-2],[-7,-8],[6,5],[1,6],[2,-6],[4,-6],[-2,-3],[-8,-2],[9,8],[4,8],[-7,7],[10,1],[3,8],[-1,-4],[-9,-3],[8,-5],[-1,4],[1,7],[-7,-6],[-8,-3],[-6,-2],[7,9],[-5,-4],[10,-1],[-2,-8],[8,-1],[-2,6],[-5,2],[-9,-8],[2,-4],[-2,1],[8,4],[-8,-5],[2,3],[-4,-3],[-7,-10],[-1,3],[-8,2],[5,-3],[-7,7],[1,-4],[-9,-6],[-8,-9],[4,-1],[10,10],[-3,7],[8,-5],[8,10],[3,4],[-3,-2],[-7,-5],[-2,6],[4,-9],[10,7],[7,3],[-3,7],[-9,7],[-9,-4],[-1,7],[-7,5],[-1,-8],[-4,1],[6,-9],[10,-6],[-4,2],[1,-10],[-5,8],[-2,-1],[1,7],[4,-9],[3,1],[3,-4],[-10,10],[2,-6],[9,-7],[8,5],[9,5],[10,-6],[-1,10],[-4,-8],[-1,-6],[10,-8],[-7,-7],[6,2],[-4,1],[-10,-10],[-3,4],[-5,2],[3,-8],[1,10],[-2,-10],[-1,-6],[-3,2],[1,6],[-2,-1],[-3,2],[-10,-8],[6,-6],[-7,9],[-3,6],[1,9],[1,7],[-6,-2],[-1,6],[5,-2],[-2,-1],[9,10],[4,-7],[-7,8],[2,3],[4,-6],[8,-8],[-5,-3],[-1,9],[-4,-9],[6,-7],[4,1],[1,-3],[-7,-1],[2,9],[-10,-6],[7,-8],[-6,-3],[-4,-5],[4,-4],[10,-3],[8,-6],[-3,-10],[7,3],[-3,9],[9,4],[-10,4],[7,-2],[-5,5],[-9,8],[6,-9],[5,-9],[5,8],[9,9],[-10,-5],[1,3],[-2,-3],[-1,-7],[8,10],[-7,10],[8,-6],[-9,-6],[8,-8],[-9,-6],[1,-4],[-8,-7],[-6,-8],[7,-3],[-7,2],[3,-8],[9,9],[7,1],[-3,-10],[5,-7],[-6,3],[4,-8],[6,10],[-8,-2],[2,-5],[7,9],[-10,-2],[8,-7],[6,-10],[8,3],[10,5],[10,4],[-1,5],[4,7],[-2,-10],[-10,-7],[-7,-7],[4,2],[3,-1],[7,9],[4,-3],[7,-4],[-10,-1],[3,7],[2,-6],[-5,-10],[6,-1],[5,-8],[-3,9],[2,9],[10,-6],[-6,3],[-8,4],[-9,-2],[-6,-7],[-5,1],[-7,-8],[-6,5],[-6,10],[-4,10],[4,-5],[-10,6],[-2,-6],[10,-4],[10,8],[-8,-3],[-3,-6],[4,9],[2,10],[3,-6],[1,-3],[-1,-7],[-1,-4],[-9,-5],[10,9],[7,-1],[-4,-1],[-9,3],[2,10],[-4,-2],[-4,-6],[-5,-7],[-2,8],[-6,10],[-2,-6],[-9,10],[4,-5],[-6,3],[-5,-7],[8,5],[10,-9],[4,6],[-2,6],[1,5],[3,4],[-8,3],[4,6],[-4,3],[-4,-10],[-4,4],[-9,9],[4,7],[-5,9],[6,7],[-4,5],[3,1],[10,6],[10,-4],[-10,-10],[9,2],[-8,7],[4,5],[8,5],[-8,1],[-10,6],[8,-10],[10,-1],[-9,5],[7,-1],[-8,1],[8,9],[4,6],[8,-3],[-9,-5],[3,2],[-10,-9],[-8,7],[1,-4],[-4,5],[-5,-2],[-4,-9],[8,-5],[-9,-4],[1,7],[-6,-7],[-4,5],[4,-6],[2,1],[-2,10],[4,2],[-2,4],[2,5],[8,4],[-3,-2],[1,-5],[5,-1],[-6,-9],[-8,-4],[9,-4],[-1,-8],[10,-3],[-3,9],[2,-8],[-10,5],[4,4],[7,2],[10,-5],[-6,-2],[-7,1],[-1,-3],[-4,9],[2,10],[10,-5],[4,10],[-5,4],[10,-10],[-2,-4],[-3,5],[7,-1],[-10,4],[5,-6],[9,4],[5,-7],[-6,1],[-8,-3],[1,8],[6,9],[-10,-7],[-2,-7],[-10,-7],[9,-9],[1,-4],[-4,-9],[9,-5],[9,-10],[-6,-6],[-1,-1],[4,-8],[-10,-7],[-7,-9],[2,-6],[-7,3],[-6,7],[-1,10],[5,-4],[9,-1],[9,1],[1,-6],[10,-3],[4,5],[2,-2],[6,-4],[5,-10],[-10,-5],[-9,2],[8,6],[-2,7],[6,6],[5,-10],[1,-1],[-3,-3],[2,-9],[-6,-2],[1,-2],[-8,8],[10,-1],[-3,-5],[-8,-3],[5,-2],[-5,7],[-2,-6],[8,5],[-7,-9],[7,4],[-4,6],[-5,-1],[-6,9],[-3,-3],[-7,9],[8,-1],[-7,4],[2,-7],[8,6],[-2,-4],[-9,-10],[-9,-9],[-5,-2],[-2,-10],[3,4],[3,-4],[5,-4],[9,5],[-3,10],[9,8],[8,7],[-5,9],[-10,-5],[-6,-5],[9,8],[-7,5],[10,-2],[7,-3],[2,-4],[-8,6],[8,2],[-2,-7],[-6,10],[1,-3],[-3,2],[-7,-6],[6,5],[-5,-1],[-4,-8],[-9,7],[1,-1],[3,3],[-1,7],[-1,-4],[-2,-10],[-1,9],[5,-2],[-4,4],[-8,-10],[-8,-10],[-10,-4],[1,10],[10,2],[3,7],[-1,-6],[1,2],[4,-4],[-7,-9],[3,-7],[-3,10],[9,5],[3,1],[4,-1],[-9,6],[-5,6],[-7,8],[-10,4],[2,-7],[4,-4],[-5,-3],[4,5],[6,-7],[-4,-4],[7,10],[-9,-1],[6,3],[-1,7],[9,6],[-3,-9],[2,4],[8,-8],[-10,-2],[-1,-9],[10,-7],[8,-6],[5,2],[-3,-8],[6,3],[-10,7],[-9,10],[-2,5],[10,3],[-7,4],[-3,1],[-7,10],[-3,-7],[6,-4],[5,-3],[2,8],[-3,1],[-10,-3],[3,-8],[4,-6],[-5,-1],[-7,5],[10,8],[9,5],[7,-1],[1,1],[-7,6],[6,-2],[5,1],[-10,-5],[-4,2],[8,-5],[-3,3],[10,10],[10,-1],[-10,-9],[-6,-8],[-7,-7],[-5,-6],[6,10],[-8,5],[-7,-3],[3,-5],[-7,-9],[-5,9],[7,6],[-7,-6],[4,4],[9,7],[-6,-2],[6,-3],[4,-8],[-8,-4],[5,8],[-10,4],[-2,-5],[-8,6],[-3,-5],[10,6],[2,4],[2,-5],[-5,8],[-9,9],[-1,-2],[-7,4],[-9,-2],[9,-2],[1,10],[-3,10],[-10,-5],[-3,8],[-9,4],[9,7],[-7,8],[7,8],[9,1],[3,-9],[-2,-1],[1,8],[10,-7],[9,10],[2,-5],[-1,7],[1,1],[9,-8],[-6,-5],[-8,6],[-4,8],[8,-1],[-7,1],[9,7],[6,-5],[-10,8],[-2,5],[-6,8],[6,5],[-8,-6],[5,5],[7,-4],[-2,10],[2,9],[10,3],[-7,-6],[-1,-8],[-9,3],[4,-8],[2,6],[2,7],[5,-7],[-2,-9],[-5,1],[-7,-4],[5,-10],[7,-2],[1,2],[-5,9],[-7,-4],[-9,7],[9,-2],[6,3],[-3,-10],[1,9],[1,7],[-10,-5],[5,5],[4,9],[-9,10],[-5,7],[-5,10],[1,10],[-1,-8],[-5,10],[-4,-3],[-7,2],[3,3],[2,-8],[9,3],[-9,9],[-1,-3],[-2,4],[9,4],[2,-4],[-7,-3],[-7,8],[-8,3],[5,7],[3,-2],[-4,10],[-8,1],[-2,2],[-2,-2],[5,2],[-10,-3],[10,-3],[-2,7],[5,-1],[-4,2],[-9,-9],[1,-9],[-9,2],[-7,8],[-6,10],[10,-4],[-5,-10],[9,-8],[8,9],[-7,6],[1,-9],[4,8],[10,6],[5,5],[-8,2],[-8,-8],[-8,-6],[5,-2],[1,-5],[-9,-4],[2,9],[3,9],[10,9],[-2,4],[3,-4],[1,7],[7,6],[-4,7],[2,3],[-1,-5],[6,10],[-2,-7],[-4,5],[8,7],[3,-3],[6,5],[5,1],[2,8],[-1,-7],[5,-8],[-6,-6],[5,10],[-9,-5],[3,2],[7,4],[1,-9],[-4,-5],[-2,-10],[6,-3],[-9,6],[-7,4],[-2,8],[10,-9],[7,3],[-4,-10],[9,-5],[6,-5],[4,-5],[-6,-1],[-5,-8],[-10,-8],[-6,-8],[-9,-7],[10,5],[-3,-1],[4,7],[4,8],[6,6],[2,-5],[-5,9],[1,2],[1,7],[8,2],[-5,3],[7,-9],[-9,9],[7,2],[-6,5],[10,-1],[3,-6],[8,-6],[-6,-2],[-4,6],[-6,-7],[-8,6],[-9,-3],[8,-9],[-4,3],[-2,6],[-10,9],[-9,-5],[1,-9],[-10,-4],[8,9],[3,-7],[2,10],[-9,-2],[-5,2],[7,1],[9,4],[7,-10],[5,-10],[-7,5],[7,5],[-10,-4],[7,8],[-3,-9],[-9,6],[3,2],[5,-6],[9,6],[-7,-9],[-6,-3],[-10,5],[10,-8],[9,8],[9,-9],[1,9],[-9,3],[5,-4],[-8,-4],[-5,-2],[4,-5],[-1,6],[2,6],[-3,3],[-1,-7],[-10,-7],[-5,5],[-9,7],[6,-8],[-7,-8],[-10,-2],[1,-4],[-2,9],[1,10],[-5,5],[3,-9],[6,-7],[2,1],[10,-4],[1,-3],[8,-6],[-8,-4],[-3,-8],[5,-5],[-7,-3],[8,10],[9,6],[5,-2],[-1,-3],[-3,1],[7,4],[9,2],[-2,4],[9,7],[-1,8],[4,8],[-6,-6],[7,7],[-9,6],[2,3],[-1,3],[2,-9],[-5,-8],[5,-4],[-6,-2],[-10,-6],[1,6],[-8,-7],[-7,-2],[-10,-3],[-8,-4],[8,5],[-10,8],[5,-8],[6,10],[-4,-6],[7,1],[8,4],[6,8],[8,9],[-10,8],[3,-4],[10,6],[10,5],[9,-7],[-2,3],[-1,-4],[-4,-6],[4,-2],[10,5],[-9,-3],[2,-6],[-4,9],[6,-5],[-5,-5],[-6,5],[-7,-4],[-10,-6],[-1,-8],[5,-5],[1,-6],[-6,-3],[4,9],[-8,-9],[-1,1],[-3,2],[6,-8],[-8,-1],[-8,3],[9,-6],[3,-2],[-10,-8],[-3,4],[-8,1],[-6,4],[-3,2],[-1,5],[2,-3],[-9,-8],[6,-9],[8,5],[10,7],[-5,2],[5,7],[-9,-8],[-6,-8],[7,-3],[3,-10],[-7,-7],[10,-5],[-5,1],[10,-8],[4,2],[6,-4],[-5,4],[3,10],[-8,9],[1,3],[10,7],[-1,9],[-10,5],[10,-9],[-10,-4],[8,5],[9,5],[7,-7],[9,-6],[-1,-8],[-7,-5],[6,-1],[-6,1],[7,9],[7,9],[2,-10],[-1,3],[-3,-1],[4,7],[-1,-6],[1,2],[-3,-5],[6,6],[-1,-9],[5,4],[-3,-10],[4,-8],[-6,-3],[-4,-9],[7,7],[10,-3],[2,-3],[4,-6],[-2,-5],[-6,3],[-9,-10],[-1,-8],[-5,-4],[-10,3],[-9,-8],[-4,1],[3,-2],[8,10],[2,-10],[1,5],[-5,-10],[-8,-5],[-9,-9],[7,9],[-7,-8],[8,4],[-10,-7],[2,-6],[1,-10],[-6,5],[9,-8],[-5,6],[-2,6],[-2,2],[-3,-10],[8,-2],[1,7],[10,-5],[-7,5],[4,1],[6,5],[-6,-10],[3,5],[-8,-2],[2,8],[-1,-9],[10,10]], dtype = "uint32")#candidate|7787|(1470, 2)|const|uint32
call_7781 = relay.TupleGetItem(func_5151_call(relay.reshape(var_7782.astype('float32'), [13, 11, 13]), relay.reshape(const_7783.astype('float64'), [945,]), relay.reshape(var_7784.astype('int32'), [3136,]), relay.reshape(const_7785.astype('int8'), [234, 1]), relay.reshape(const_7786.astype('float32'), [330,]), relay.reshape(const_7787.astype('uint32'), [2940,]), ), 5)
call_7788 = relay.TupleGetItem(func_5159_call(relay.reshape(var_7782.astype('float32'), [13, 11, 13]), relay.reshape(const_7783.astype('float64'), [945,]), relay.reshape(var_7784.astype('int32'), [3136,]), relay.reshape(const_7785.astype('int8'), [234, 1]), relay.reshape(const_7786.astype('float32'), [330,]), relay.reshape(const_7787.astype('uint32'), [2940,]), ), 5)
uop_7812 = relay.asinh(const_7783.astype('float64')) # shape=(945,)
output = relay.Tuple([uop_7773,call_7781,var_7782,var_7784,const_7785,const_7786,const_7787,uop_7812,])
output2 = relay.Tuple([uop_7775,call_7788,var_7782,var_7784,const_7785,const_7786,const_7787,uop_7812,])
func_7823 = relay.Function([var_7782,var_7784,], output)
mod['func_7823'] = func_7823
mod = relay.transform.InferType()(mod)
var_7824 = relay.var("var_7824", dtype = "float32", shape = (1859,))#candidate|7824|(1859,)|var|float32
var_7825 = relay.var("var_7825", dtype = "int32", shape = (1568, 2))#candidate|7825|(1568, 2)|var|int32
output = func_7823(var_7824,var_7825,)
func_7826 = relay.Function([var_7824,var_7825,], output)
mutated_mod['func_7826'] = func_7826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7873 = relay.var("var_7873", dtype = "uint8", shape = (3, 14, 16))#candidate|7873|(3, 14, 16)|var|uint8
var_7874 = relay.var("var_7874", dtype = "uint8", shape = (3, 14, 16))#candidate|7874|(3, 14, 16)|var|uint8
bop_7875 = relay.bitwise_and(var_7873.astype('uint8'), relay.reshape(var_7874.astype('uint8'), relay.shape_of(var_7873))) # shape=(3, 14, 16)
func_2616_call = mod.get_global_var('func_2616')
func_2618_call = mutated_mod.get_global_var('func_2618')
var_7879 = relay.var("var_7879", dtype = "int16", shape = (810,))#candidate|7879|(810,)|var|int16
call_7878 = func_2616_call(relay.reshape(var_7879.astype('int16'), [9, 6, 15]))
call_7880 = func_2616_call(relay.reshape(var_7879.astype('int16'), [9, 6, 15]))
func_2456_call = mod.get_global_var('func_2456')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_7891 = relay.var("var_7891", dtype = "uint32", shape = (3840,))#candidate|7891|(3840,)|var|uint32
call_7890 = relay.TupleGetItem(func_2456_call(relay.reshape(var_7891.astype('uint32'), [15, 16, 16])), 0)
call_7892 = relay.TupleGetItem(func_2459_call(relay.reshape(var_7891.astype('uint32'), [15, 16, 16])), 0)
bop_7898 = relay.left_shift(var_7879.astype('uint32'), relay.reshape(call_7878.astype('uint32'), relay.shape_of(var_7879))) # shape=(810,)
bop_7901 = relay.left_shift(var_7879.astype('uint32'), relay.reshape(call_7880.astype('uint32'), relay.shape_of(var_7879))) # shape=(810,)
func_3379_call = mod.get_global_var('func_3379')
func_3382_call = mutated_mod.get_global_var('func_3382')
const_7903 = relay.const([-5,-3,-1,6,5,10,-10,9,3,6,-6,-8,9,7,2,5,-5,2,5,6,5,-3,4,-7,-6,6,-5,7,6,-1,-6,-8,3,8,7,-10,-9,5,5,-4,-6,-4,-5,-5,7,-9,-2,-3,-4,5,-5,4,-7,1,3,-2,-6,-2,-9,1,-4,-8,-7,3,4,-5,-4,6,7,3,3,-1,-4,-9,1,-9,-10,1,-10,1], dtype = "uint64")#candidate|7903|(80,)|const|uint64
var_7904 = relay.var("var_7904", dtype = "float64", shape = (945,))#candidate|7904|(945,)|var|float64
call_7902 = relay.TupleGetItem(func_3379_call(relay.reshape(const_7903.astype('uint64'), [5, 8, 2]), relay.reshape(var_7904.astype('float64'), [945,]), ), 0)
call_7905 = relay.TupleGetItem(func_3382_call(relay.reshape(const_7903.astype('uint64'), [5, 8, 2]), relay.reshape(var_7904.astype('float64'), [945,]), ), 0)
output = relay.Tuple([bop_7875,call_7890,var_7891,bop_7898,call_7902,const_7903,var_7904,])
output2 = relay.Tuple([bop_7875,call_7892,var_7891,bop_7901,call_7905,const_7903,var_7904,])
func_7906 = relay.Function([var_7873,var_7874,var_7879,var_7891,var_7904,], output)
mod['func_7906'] = func_7906
mod = relay.transform.InferType()(mod)
var_7907 = relay.var("var_7907", dtype = "uint8", shape = (3, 14, 16))#candidate|7907|(3, 14, 16)|var|uint8
var_7908 = relay.var("var_7908", dtype = "uint8", shape = (3, 14, 16))#candidate|7908|(3, 14, 16)|var|uint8
var_7909 = relay.var("var_7909", dtype = "int16", shape = (810,))#candidate|7909|(810,)|var|int16
var_7910 = relay.var("var_7910", dtype = "uint32", shape = (3840,))#candidate|7910|(3840,)|var|uint32
var_7911 = relay.var("var_7911", dtype = "float64", shape = (945,))#candidate|7911|(945,)|var|float64
output = func_7906(var_7907,var_7908,var_7909,var_7910,var_7911,)
func_7912 = relay.Function([var_7907,var_7908,var_7909,var_7910,var_7911,], output)
mutated_mod['func_7912'] = func_7912
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7932 = relay.constdtype = "float32")#candidate|7932|(11, 16, 13)|const|float32
uop_7933 = relay.log(const_7932.astype('float32')) # shape=(11, 16, 13)
uop_7942 = relay.cosh(uop_7933.astype('float64')) # shape=(11, 16, 13)
output = relay.Tuple([uop_7942,])
output2 = relay.Tuple([uop_7942,])
func_7946 = relay.Function([], output)
mod['func_7946'] = func_7946
mod = relay.transform.InferType()(mod)
output = func_7946()
func_7947 = relay.Function([], output)
mutated_mod['func_7947'] = func_7947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6480_call = mod.get_global_var('func_6480')
func_6482_call = mutated_mod.get_global_var('func_6482')
call_7974 = func_6480_call()
call_7975 = func_6480_call()
func_986_call = mod.get_global_var('func_986')
func_989_call = mutated_mod.get_global_var('func_989')
const_7985 = relay.const([-6.247295,-0.225819,-1.139214,-9.873081,3.001024,7.978947,8.864987,-0.574568,0.592263,-1.069817,-6.006318,-3.639011,3.157702,3.862707,-8.005768,0.318746,0.912735,4.856286,3.779966,-6.632883,4.911611,7.903332,-7.701355,-7.876463,-3.267232,-9.935805,1.254894,-1.657153,9.582277,3.207666,-0.262443,-5.609509,6.251967,2.024485,9.594857,3.249113,7.496873,-0.808845,-6.664112,8.729840,3.509602,2.928700,-3.462267,2.826490,-5.056108,9.154693,6.822727,-8.189805,8.239748,8.148693,-2.023804,-9.053564,4.446730,4.813402,6.823528,-6.574225,-7.676871,3.677265,0.551789,-8.601359,-4.709608,-1.545428,-2.446696,-0.806652,-1.572020,-2.450342,-0.652948,-9.683925,3.093947,-3.664398,-6.828207,4.479715,-7.245027,8.151416,6.115313,7.056189,9.393690,4.389302,1.775866,-8.754559,-5.140443,-6.902184,2.373382,-8.797991,-0.066732,4.272359,-6.550022,2.410992,-1.895491,-1.553972,-7.325395,4.117941,-5.179329,9.403419,-3.522203,7.627787,5.422171,5.130529,3.627280,9.574952,-9.532260,-4.071585,-5.658561,-3.241030,9.237018,-4.635749,-4.264191,8.081190,1.200312,-1.074664,-2.884062,-0.076087,4.676505,-8.303974,7.660826,-9.246485,5.718832,-0.461202,-9.269835,-3.499972,-0.647309,-0.587209,-5.679985,3.045628,-0.320644,8.355515,1.862898,-1.074279,4.588409,4.205253,5.813208,6.112731,8.929057,-4.250136,-7.551726,0.952714,5.468809,1.599808,9.252756,8.519322,6.698251,1.736679,-8.100231,1.002911,-6.095708,2.367972,2.213879,-7.065650,-8.967998,-3.673225,5.125125,7.073374,8.801949,-7.472053,6.719367,7.150343,-0.654230,-7.205668,-9.566315,0.997261,-4.757988,-3.125798,2.964956,-2.226030,1.588488,-5.945412,-4.685267,-5.242854,-7.584609,6.654228,-6.597398,-0.154509,7.398726,-5.172487,0.920150,-3.000117,-0.459082,4.478569,-0.468395,7.564752,-7.656031,-6.855839,-0.499098,6.875811,-9.919248,-3.477848,2.314091,7.653749,7.673624,-8.730209,6.293141,9.801702,-2.995027,7.197344,-8.205568,-7.730541,-8.470151,-3.938113,5.844121,-1.083407,-8.170062,8.635290,7.705333,-1.031080,-8.108884,9.960538,5.804818,4.085651,4.408099,-8.394580,8.456138,6.619266,-3.442417,-1.975866,6.005812,4.559343,-5.014535,2.781249,7.663910,-6.757731,-7.235433,-7.581245,-8.302669,5.922789,-1.016279,-5.072604,6.158869,-1.369852,4.015278,1.900538,0.772570,-8.826906,5.433168,5.984078,6.758495,-0.734979,-7.125442,0.108219,-3.302368,-1.978378,5.483852,9.998811,-1.175917,-2.196112,-8.697377,-8.141244,-4.770457,6.445151,-3.082045,-4.439998,4.669501,-8.962734,2.659368,-8.471661,-6.372439,8.828308,2.452501,-1.649735,-3.399928,7.274503,1.563181,-5.205255,-7.817340,8.963120,-5.242305,-8.019796,8.195435,5.493066,4.972023,-4.121483,3.599743,4.040582,-4.625437,-4.513157,-4.645429,-1.633261,-7.663708,8.764956,-5.035149,2.613854,-9.320919,-7.781507,-1.407860,2.771478,-9.225208,-0.797297,2.201581,-2.125020,6.917805,-8.735496,2.459748,4.458871,0.438175,-5.653987,-2.410871,-2.038148,-4.726699,-5.483361,9.106794,-3.948453,3.555663,2.694008,-8.827721,6.039432,-7.835492,4.166687,-7.271824,9.650056,1.670326,0.133504,-3.715341,-5.123963,1.406574,5.394621,-3.757549,-7.063034,-9.162457,-1.109532,5.134694,1.352153,7.305131,9.919854,1.808851,1.806861,9.151414,-9.282531,5.761970,-1.435513,5.309228,1.543969], dtype = "float32")#candidate|7985|(330,)|const|float32
call_7984 = relay.TupleGetItem(func_986_call(relay.reshape(const_7985.astype('float32'), [3, 11, 10])), 1)
call_7986 = relay.TupleGetItem(func_989_call(relay.reshape(const_7985.astype('float32'), [3, 11, 10])), 1)
output = relay.Tuple([call_7974,call_7984,const_7985,])
output2 = relay.Tuple([call_7975,call_7986,const_7985,])
func_7995 = relay.Function([], output)
mod['func_7995'] = func_7995
mod = relay.transform.InferType()(mod)
mutated_mod['func_7995'] = func_7995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7995_call = mutated_mod.get_global_var('func_7995')
call_7996 = func_7995_call()
output = call_7996
func_7997 = relay.Function([], output)
mutated_mod['func_7997'] = func_7997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6480_call = mod.get_global_var('func_6480')
func_6482_call = mutated_mod.get_global_var('func_6482')
call_8050 = func_6480_call()
call_8051 = func_6480_call()
func_6988_call = mod.get_global_var('func_6988')
func_6990_call = mutated_mod.get_global_var('func_6990')
call_8052 = relay.TupleGetItem(func_6988_call(), 2)
call_8053 = relay.TupleGetItem(func_6990_call(), 2)
func_1469_call = mod.get_global_var('func_1469')
func_1472_call = mutated_mod.get_global_var('func_1472')
const_8058 = relay.const([[-8.287569,-0.424308,9.179713,-8.196114,-4.106038,4.640741,-3.867085,-9.512098,-6.965720,-0.815340,4.919066,8.703128,-7.071130,8.979406,-4.293689,-9.232779,8.807796,-4.081762,-1.965686,8.983265,-6.165592,2.764225,-3.013535,0.564134,4.898399,6.273173,-3.851648,-6.685264,6.123169,0.055714,-5.574782,0.001178,-4.741901,-9.459112,-1.946464,-9.055594,3.167393,4.325783,5.887051,-0.148818,-8.857774,3.670680,-4.513024,9.119910,-5.549084,2.410302,-3.987552,-0.147896,-0.300529,-8.121525,-8.277502,5.838839,-9.822495,-0.660639,-8.053968,-8.377116,-7.302975,6.059708,9.794361,3.263877,9.354581,-3.840896,2.139056,-5.927483,-5.554462,-1.449862,3.821121,-2.006163,-9.151046,-7.062547,6.245129,6.685151,-8.065418,9.591944,1.644503,9.082404,3.212873,3.183168,5.107067,2.260343,-5.665255,-6.991409,8.738783,0.204855,3.219872,-8.756595,-7.847474,5.597810,-4.904279,4.471936,1.732349,-7.819002,-0.022662,1.615585,-5.137034,0.978720,-6.286117,-3.763768,-0.994546,1.966993,8.492584,6.014617,6.821704,3.940683,7.168790,9.847352,6.468218,7.671864,2.466043,5.796986,7.380265,-2.185849,1.739523,-3.273047,-5.199247,1.334269,0.669092,-3.325266,7.905683,9.620873,-8.108907,9.180383,-9.158233,5.157508,3.013001,5.343881,-8.622543,-8.232918,4.637864,6.675631,-5.319360,3.373758,1.682513,-6.736416,7.785389,6.409491,1.460546,-2.735781,-7.211383,0.227870,-8.270505,-7.143881,8.884145,-2.054345,9.603163,-2.310373,4.081746,-3.006768,8.965936,0.574741,-0.963848,-2.250310,-1.881563,0.276284,9.622308,-3.555468,-5.026389,-0.955423,-0.978117,-6.298885,-1.432741,6.095625,-6.346433,1.087951,5.826877,3.324144,5.569159,7.654458,-9.408219,-5.618092,0.436061,7.538883,-8.557791,8.330741,1.833327,-2.631369,7.465926,5.867818,2.140320,0.264950,3.256473,-8.961050,1.679265,-4.383580,4.079616,1.065142,-2.115180,-4.046634,-3.983495,4.528089,2.210100,7.973889,7.060862,-8.320589,9.830090,6.780896,-6.825448,-6.014105,4.423330,8.517615,7.512335,-5.822930,-5.395637,-4.905751,-2.198407,-1.176571,-4.766404,-9.536744,-3.360774,-8.221616,8.618002,-0.418671,-8.912216,0.765761,-3.709038,-8.505359,2.283287,1.323357,4.523084,-8.000177,5.847771,4.520270,-0.284187,6.805702,-3.458974,9.182420,-6.405536,-7.695758,-2.958731,-0.030601,-5.736279,-8.430937,4.829041,4.203265,-6.460732,5.465287,-2.054560,5.422209,-2.566459,6.810417,-3.506542,-4.421552,9.604300,1.394085,-4.645401,-2.858669,-8.853299,-7.095593,-5.352726,-9.779256,7.068781,-3.514926,-6.823656,3.780002,-9.553181,-7.462457,2.865706,3.266049,9.742013,-7.645374,8.019647,-5.408036,1.676640,8.704895,2.544281,-6.070774,3.129096,-7.252674,-4.575350,5.732953,0.980617,-0.044496,-4.087593,6.325629,-9.073428,-4.427437,-7.830498,-8.366210,1.809843,4.636157,0.361400,-5.157632,-5.602817,4.709296,-7.546640,4.739427,-6.497134,-4.561112,-3.548873,-8.867673,4.950044,-0.297616,8.193699,6.567829,-6.443296,0.785142,2.873681,7.406629,3.997806,-5.139219,2.706084,3.255792,6.033734,-4.853449,7.169901,4.488246,9.729525,-0.237437,-3.155572,-7.796349,-1.551428,-3.602770,6.673453,3.584024,-2.403348,-0.101780,5.080189,0.385529,0.162857,-4.780647,-8.077164,0.908527,1.015543,9.668657,8.359153,8.294314,0.169029,8.997436,0.292516,2.143863,3.577985,2.986789,9.439973,0.591223,-2.225954,7.464931,9.894708,2.541609,-6.457348,-6.180394,-4.857769,4.704243,-6.979882,-2.424497,7.052964,8.688496,1.041092,-2.307746,-8.808870,2.450799,4.082230,0.897598,5.705011,-8.034524,1.589263,4.238538,-4.522309,-6.559906,-1.570869,-4.705615,-2.977761,-8.364003,-2.031557,7.385598,-6.628111,0.443625,2.129016,0.527204,7.699492,7.224572,-4.556400,-9.855367,5.162338,9.550408,1.956231,-4.063407,-4.606929,6.459515,8.819946,0.315301,1.103768,2.405378,8.586659,8.962166,-7.370105,-6.188581,-1.755688,0.827073,3.759182,3.457291,-9.580456,-5.424045,-1.674416,6.849958,-3.516470,7.658818,-1.047781,7.542369,3.355840,-4.105505,6.616767,1.427195,-6.200761,9.192883,8.950016,-7.282835,-0.302764,-7.006169,4.310937,-7.789010,-9.021239,9.486084,5.184401,6.001971,-6.063712,-3.801669,-0.503309,7.204420,6.441894,-2.194978,9.292318,-6.779658,3.424827,-6.610637,5.839250,0.404614,-1.939471,-3.150542,8.655924,0.304476,3.491830,3.448146,2.053375,-8.379752,7.048778,5.995454,-2.371628,5.297062,3.705189,-5.253393,-8.125811,-9.423537,-7.426047,-9.000497,-9.499791,4.421282,-4.312538,7.005373,7.386942,-8.637121,-9.766221,6.876574,3.395742,5.222965,-7.245712,4.415425,3.561396,-6.811040,-2.172208,3.114671,-0.057744,7.077698,8.664230,-5.139818,-5.909096,2.334122,-8.222274,3.981170,3.564076,-8.012295,-5.522979,0.530896,-1.227809,-6.674019,-4.348253,9.711599,-6.677501,6.538502,-7.220878,2.090652,-0.174504,1.214243,9.578454,4.563840,7.003704,8.910644,7.217814,3.439336,-8.097594,4.033502,2.606823,8.355993,9.865619,1.839161,-6.188924,-7.216890,-7.651066,2.535425,2.496661,-2.335740,0.619119,-1.571061,-2.647430,-3.661181,5.759271,-1.773527,-3.399674,6.104503,-5.097961,2.690400,9.551230,-3.727182,-1.597243,4.103473,-9.857283,-1.030169,4.881955,-5.286570,5.584058,-2.732367,-0.761522,9.360843,-8.619791,-2.520641,-3.196395,8.960081,-6.669139,7.453944,-1.235464,-8.314334,-1.580983,-4.763842,5.806555,-9.961231,9.313561,-7.166946,2.813412,-6.661323,-9.288971,-5.243474,2.372844,-7.341459,4.708527,-0.498648,-1.516556,-1.341822,3.411008,3.498996,-2.518707,2.919219,-2.723020,1.330067,-8.929415,-5.354971,7.581531,2.081621,-2.742347,-6.251091,2.133217,5.347067,0.278487,-3.538848,-2.918755,2.023860,4.205665,-2.873861,-6.106059,7.387163,-1.553104,0.723253,4.748941,-7.094166,-1.454942,1.882278,4.780272,-6.784401,2.525943,6.784102,-6.418287,-1.945239,-6.840515,4.437307,-6.565004,3.865409,-7.253063,-8.328484,4.306491,-1.715781,7.162426,7.104227,-6.734549,2.063363,-2.729635,-9.689341,-6.846410,2.795185,8.437645,6.649587,5.633625,-0.213376,-5.055289,5.073935,9.799673,5.837954,-2.209303,2.215458,-7.900922,-4.073664,-4.982180,0.004190,6.024209,4.845932,-4.290750,-1.241976,9.823113,7.714450,-5.037345,3.296227,-7.036417,-9.212074,6.898067,-0.606385,9.665810,-8.324821,3.121861,-1.667984,-2.637828,0.999485,-8.658981,8.323879,9.756417,6.006229,2.994619,5.842945,-0.595348,-9.399411,-6.619660,6.013752,5.938436,0.586162,-7.849165,6.207145,4.761617,8.660524,2.310549,1.299731,9.217340,-8.686302,8.215030,8.639675,3.523504,3.682185,-4.048659,4.705091,-7.034987,-2.286806,-5.107157,-6.200281,-0.380211,-5.327124,-3.045467,-1.868029,-2.399620,-7.479582,5.678761,2.619746,-2.371351,-9.157554,-4.653744,-2.060559,-3.874513,3.485158,9.558170,-6.216085,8.655357,9.724790,-7.459251,1.963595,-0.128164,-0.860674,1.547483,-1.977247,-2.112505,-8.564483,7.259967,2.411439,7.347591,-7.848713,-3.890215,7.961794,3.207044,8.330061,-8.447226,2.065944,6.330255,-3.261695,7.493664,-4.893672,7.004868,-0.251474,3.857935,-7.114648,-1.162982,1.654959,3.521269,-0.447178,1.116058,-3.522231,0.714425,-4.557265,5.448449,2.372540,-2.451072,-3.260416,9.845727,-0.468700,1.992544,2.161503,6.439210,-8.924778,6.393373,-4.216672,1.610925,2.234879,-1.605730,2.432844,-4.753203,-3.442809,-8.351241,0.787464,-0.708490,-4.966780,-7.256996,4.402550,1.783305,4.797113,8.067387,2.060970,-3.228276,6.183931,8.634085,5.077520,9.233276,-9.991705,-7.737873,4.149790,7.501077,-6.026672,-8.501587,5.011587,-0.197192,-8.099013,-3.780112,-1.332308,-7.765109,2.461173,-3.644375,-1.121264,7.307903,4.990859,-9.169735,-5.961034,-2.847634,5.670473,-6.865454,-2.056117,5.980664,-4.184144,1.370370,2.427842,-3.976547,9.622997,3.140365,5.172641,-7.390114,-0.538499,9.114194,-2.543779,-3.736825,-1.216484,-1.542846,3.776204,-4.659574,-1.382319,-0.570722,8.871147,-5.082455,1.624641,-9.816847,-7.432753,9.349077,0.055104,6.839383,-8.474032,-0.114209,2.303991,-5.011639,-4.000140,-5.519763,-4.321978,-7.599428,-4.624498,-0.434531,-8.407279,-7.985169,2.068847,-3.429501,-3.634246,-0.948663,3.313680,-7.646985,3.787778,1.959636,4.807480,-8.683341,-5.942402,1.143703,-6.609977,-9.538699,7.615452,1.043806,-6.429784,3.305774,-3.859642,1.360791,-9.313877,-9.450684,-5.889785,-9.397682,1.984566,7.645461,6.884281,-5.319627,-5.806083,6.625833,4.942850,-1.385403,-0.045345,3.244151,8.586354,-4.729308,-0.909172,-7.627352,-2.987736,-4.085709,9.610739,0.449991,-2.929597,-0.729196,-0.092713,-0.517315,9.055151,9.483871,8.550951,-1.083131,0.794818,-6.841519,9.260698,6.961940,2.468514,0.093292,8.476322,-0.703923,8.611374,3.234917,-9.564897,2.571439,-2.530633,1.515477,3.740620,0.749164,-6.605740,-3.249742,-2.181151,9.172391,2.229378,-1.427422,1.557182,3.407474,-7.571948,-2.395832,-6.005320,-6.268402,-8.723688,-3.057562,0.194112,-7.233758,-9.811521,7.637392,-0.724557,-1.486890,8.518609,2.417981,0.106473,6.410141,5.918333,-0.650472,-4.335739,-8.862584,-3.588487,-8.339419,-3.477717,0.052006,-4.476843,5.877443,7.693175,-5.276726,5.110830,8.699958,-0.076256,-1.556204,-3.717504,-9.498265,4.079003,2.481110,1.949732,3.098643,1.423896,-0.104894,5.830874,-3.084228,-4.231960,3.082823,-4.040217,-2.817357,-7.796734,-0.918613,-7.509972,5.291190,-5.113221,9.937441,-8.749351,0.982436,-4.869015,3.260236,-9.820592,-8.866032,7.551736,-8.603549,2.031197,-9.012948,2.687219,-0.114104,4.285103,1.240103]], dtype = "float64")#candidate|8058|(1, 945)|const|float64
call_8057 = func_1469_call(relay.reshape(const_8058.astype('float64'), [9, 15, 7]))
call_8059 = func_1469_call(relay.reshape(const_8058.astype('float64'), [9, 15, 7]))
bop_8069 = relay.right_shift(call_8052.astype('uint16'), const_8058.astype('uint16')) # shape=(1, 945)
bop_8072 = relay.right_shift(call_8053.astype('uint16'), const_8058.astype('uint16')) # shape=(1, 945)
output = relay.Tuple([call_8050,call_8057,bop_8069,])
output2 = relay.Tuple([call_8051,call_8059,bop_8072,])
func_8074 = relay.Function([], output)
mod['func_8074'] = func_8074
mod = relay.transform.InferType()(mod)
output = func_8074()
func_8075 = relay.Function([], output)
mutated_mod['func_8075'] = func_8075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7517_call = mod.get_global_var('func_7517')
func_7518_call = mutated_mod.get_global_var('func_7518')
call_8109 = relay.TupleGetItem(func_7517_call(), 0)
call_8110 = relay.TupleGetItem(func_7518_call(), 0)
output = relay.Tuple([call_8109,])
output2 = relay.Tuple([call_8110,])
func_8121 = relay.Function([], output)
mod['func_8121'] = func_8121
mod = relay.transform.InferType()(mod)
output = func_8121()
func_8122 = relay.Function([], output)
mutated_mod['func_8122'] = func_8122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_8154 = relay.TupleGetItem(func_8121_call(), 0)
call_8155 = relay.TupleGetItem(func_8122_call(), 0)
var_8156 = relay.var("var_8156", dtype = "bool", shape = (4, 3, 8))#candidate|8156|(4, 3, 8)|var|bool
bop_8157 = relay.maximum(call_8154.astype('int16'), relay.reshape(var_8156.astype('int16'), relay.shape_of(call_8154))) # shape=(4, 3, 8)
bop_8160 = relay.maximum(call_8155.astype('int16'), relay.reshape(var_8156.astype('int16'), relay.shape_of(call_8155))) # shape=(4, 3, 8)
output = relay.Tuple([bop_8157,])
output2 = relay.Tuple([bop_8160,])
func_8171 = relay.Function([var_8156,], output)
mod['func_8171'] = func_8171
mod = relay.transform.InferType()(mod)
mutated_mod['func_8171'] = func_8171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8172 = relay.var("var_8172", dtype = "bool", shape = (4, 3, 8))#candidate|8172|(4, 3, 8)|var|bool
func_8171_call = mutated_mod.get_global_var('func_8171')
call_8173 = func_8171_call(var_8172)
output = call_8173
func_8174 = relay.Function([var_8172], output)
mutated_mod['func_8174'] = func_8174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6794_call = mod.get_global_var('func_6794')
func_6796_call = mutated_mod.get_global_var('func_6796')
call_8210 = func_6794_call()
call_8211 = func_6794_call()
const_8212 = relay.const([[[False,False,False,False,False,True,True,False],[False,True,True,False,False,True,False,True],[True,True,True,False,True,False,False,True]],[[True,True,True,False,True,False,True,True],[True,True,False,True,False,True,True,True],[True,True,True,True,False,False,False,True]],[[True,False,True,False,False,True,False,True],[False,True,False,True,True,True,True,False],[False,True,True,True,False,True,False,True]],[[False,True,False,False,True,True,True,False],[True,False,True,True,True,True,True,True],[False,True,True,True,False,False,False,False]]], dtype = "bool")#candidate|8212|(4, 3, 8)|const|bool
bop_8213 = relay.logical_xor(call_8210.astype('uint16'), relay.reshape(const_8212.astype('uint16'), relay.shape_of(call_8210))) # shape=(4, 3, 8)
bop_8216 = relay.logical_xor(call_8211.astype('uint16'), relay.reshape(const_8212.astype('uint16'), relay.shape_of(call_8211))) # shape=(4, 3, 8)
output = relay.Tuple([bop_8213,])
output2 = relay.Tuple([bop_8216,])
func_8217 = relay.Function([], output)
mod['func_8217'] = func_8217
mod = relay.transform.InferType()(mod)
output = func_8217()
func_8218 = relay.Function([], output)
mutated_mod['func_8218'] = func_8218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_8229 = relay.TupleGetItem(func_8121_call(), 0)
call_8230 = relay.TupleGetItem(func_8122_call(), 0)
func_8121_call = mod.get_global_var('func_8121')
func_8122_call = mutated_mod.get_global_var('func_8122')
call_8231 = relay.TupleGetItem(func_8121_call(), 0)
call_8232 = relay.TupleGetItem(func_8122_call(), 0)
output = relay.Tuple([call_8229,call_8231,])
output2 = relay.Tuple([call_8230,call_8232,])
func_8233 = relay.Function([], output)
mod['func_8233'] = func_8233
mod = relay.transform.InferType()(mod)
output = func_8233()
func_8234 = relay.Function([], output)
mutated_mod['func_8234'] = func_8234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6250_call = mod.get_global_var('func_6250')
func_6252_call = mutated_mod.get_global_var('func_6252')
call_8287 = func_6250_call()
call_8288 = func_6250_call()
output = relay.Tuple([call_8287,])
output2 = relay.Tuple([call_8288,])
func_8289 = relay.Function([], output)
mod['func_8289'] = func_8289
mod = relay.transform.InferType()(mod)
output = func_8289()
func_8290 = relay.Function([], output)
mutated_mod['func_8290'] = func_8290
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8346 = relay.const(-10, dtype = "uint8")#candidate|8346|()|const|uint8
var_8347 = relay.var("var_8347", dtype = "uint8", shape = (14, 5, 13))#candidate|8347|(14, 5, 13)|var|uint8
bop_8348 = relay.subtract(const_8346.astype('uint8'), var_8347.astype('uint8')) # shape=(14, 5, 13)
output = bop_8348
output2 = bop_8348
func_8352 = relay.Function([var_8347,], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8353 = relay.var("var_8353", dtype = "uint8", shape = (14, 5, 13))#candidate|8353|(14, 5, 13)|var|uint8
func_8352_call = mutated_mod.get_global_var('func_8352')
call_8354 = func_8352_call(var_8353)
output = call_8354
func_8355 = relay.Function([var_8353], output)
mutated_mod['func_8355'] = func_8355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6258_call = mod.get_global_var('func_6258')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_8363 = func_6258_call()
call_8364 = func_6258_call()
func_6851_call = mod.get_global_var('func_6851')
func_6854_call = mutated_mod.get_global_var('func_6854')
var_8390 = relay.var("var_8390", dtype = "uint64", shape = (378,))#candidate|8390|(378,)|var|uint64
call_8389 = relay.TupleGetItem(func_6851_call(relay.reshape(var_8390.astype('uint64'), [378,])), 0)
call_8391 = relay.TupleGetItem(func_6854_call(relay.reshape(var_8390.astype('uint64'), [378,])), 0)
func_2291_call = mod.get_global_var('func_2291')
func_2297_call = mutated_mod.get_global_var('func_2297')
var_8416 = relay.var("var_8416", dtype = "int64", shape = ())#candidate|8416|()|var|int64
const_8417 = relay.const([False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True], dtype = "bool")#candidate|8417|(1440,)|const|bool
const_8418 = relay.const([[8],[10],[-4],[-5],[6],[10],[-9],[-1],[8],[9],[3],[-5],[-5],[-2],[2],[6],[8],[8],[-9],[-9],[-2],[10],[3],[-4],[-5],[4],[10],[-8],[-10],[7],[-8],[2],[1],[10],[-2],[-4],[-9],[-6],[8],[-3],[4],[3],[-7],[-10],[-1],[8],[1],[5],[-9],[3],[3],[-8],[4],[5],[5],[-6],[-5],[2],[10],[-8],[-8],[-10],[8],[1],[10],[1],[-3],[-8],[-2],[-10],[-10],[3],[-7],[-9],[6],[8],[6],[2],[-3],[1],[9],[9],[-8],[9],[-1],[-6],[-7],[-8],[5],[-9],[-5],[-4],[-5],[4],[9],[3],[5],[8],[-2],[-5],[7],[-6],[4],[9],[9],[10],[-7],[6],[-1],[3],[-6],[-8],[2],[-6],[4],[-7],[-5],[-7],[5],[10],[-6],[-2],[7],[6],[-8],[9],[-7],[5],[-4],[2],[-4],[-1],[2],[-10],[4],[2],[10],[-4],[2],[6],[10],[2],[-4],[-5],[-9],[8],[-7],[-6],[9],[-7],[6],[2],[5],[-7],[-7],[-7],[-10],[-4],[-7],[3],[-7],[-3],[2],[-5],[-5],[-3],[-4],[-1],[2],[-4],[-10],[-5],[1],[5],[8],[5],[-10],[2],[-8],[-2],[-1],[-4],[-1],[-4],[2],[1],[-10],[-2],[-6],[8],[-4],[-1],[-1],[-6],[-4],[-10],[5],[-10],[10],[9],[-1],[-5],[7],[-1],[-4],[-10],[1],[-5],[-6],[1],[-1],[-5],[-6],[3],[10],[-9],[-2],[-1],[2],[3],[10],[-6],[-5],[-1],[-2],[-3],[5],[1],[4],[9],[-4],[4],[-3],[-5],[6],[10],[-1],[6],[7],[-9],[2],[-4],[-9],[-6],[9],[-6],[4],[-8],[-4],[3],[-3],[7],[-9],[-2],[-2],[7],[-2],[-9],[-8],[-5],[-2],[1],[-2],[6],[-2],[-7],[2],[-10],[8],[-9],[-2],[4],[-1],[-8],[-10],[7],[3],[-2],[7],[-2],[-7],[-3],[-4],[-1],[-5],[-3],[-1],[3],[-10],[1],[4],[-5],[-4],[-4],[5],[9],[5],[-2],[-6],[-9],[5],[8],[-9],[-6],[-1],[-10],[-4],[4],[2],[-8],[-3],[2],[10],[-7],[6],[7],[-10],[-9],[-5],[-1],[-3],[5],[-5],[-5],[8],[7],[-2],[-1],[2],[-9],[6],[2],[-1],[6],[-8],[-4],[7],[6],[8],[-3],[7],[-10],[-9],[-9],[9],[-1],[-4],[-2],[4],[10],[-4],[-2],[-6],[6],[-2],[-2],[1],[5],[-3],[10],[4],[8],[6],[10],[-7],[-3],[7],[-5],[-6],[8],[-10],[-6],[-4],[-10],[7],[10],[3],[9],[7],[1],[-2],[-8],[-10],[3],[-4],[3],[-3],[6],[1],[-4],[-7],[-10],[-4],[2],[-8],[9],[7],[-8],[-10],[2],[-2],[-9],[-5],[-2],[-2],[5],[-3],[-2],[5],[2],[6],[3],[9],[-10],[-2],[7],[9],[-9],[-3],[-1],[7],[2],[2],[-9],[-9],[2],[4],[-9],[-9],[-4],[-5],[-7],[8],[-9],[6],[4],[7],[-3],[4],[-7],[5],[-6],[-7],[2],[8],[-6],[-8],[7],[8],[-7],[-7],[8],[-10],[4],[5],[5],[-1],[8],[10],[3],[-9],[-10],[10],[3],[5],[-2],[2],[6],[-1],[6],[-2],[-7],[-3],[-2],[-9],[10],[-3],[-5],[2],[-3],[-9],[-1],[5],[2],[8],[3],[10],[4],[8],[-6],[-2],[-5],[1],[-8],[-7],[9],[-7],[6],[8],[7],[8],[7],[-3],[3],[10],[8],[-10],[-6],[4],[-1],[6],[6],[10],[5],[-2],[5],[4],[1],[-6],[9],[-8],[7],[4],[6],[-7],[9],[-8],[-7],[1],[-8],[4],[-4],[-7],[6],[-1],[-9],[-5],[-4],[10],[-7],[8],[-10],[-2],[-7],[-9],[-5],[-8],[1],[-6],[-9],[3],[-4],[4],[7],[10],[1],[-1],[8],[-8],[-6],[10],[9],[-2],[3],[9],[-3],[-2],[1],[6],[8],[-4],[-8],[9],[-8],[-9],[-3],[-8],[6],[5],[8],[-3],[-6],[-9],[-1],[-7],[-3],[-9],[3],[4],[-7],[8],[3],[4],[-5],[-3],[1],[-3],[3],[4],[-9],[4],[-1],[2],[10],[-9],[-1],[7],[-10],[5],[10],[-8],[4],[-7],[-3],[10],[5],[3],[-6],[2],[-1],[3],[8],[5],[-10],[3],[8],[10],[3],[8],[2],[10],[-9],[-3],[-8],[-1],[8],[10],[-3],[-3],[-7],[5],[-8],[-7],[6],[-8],[1],[-6],[-1],[-5],[8],[5],[-9],[1],[1],[-9],[2],[4],[-10],[-2],[-6],[5],[-8],[-10],[-1],[-5],[1],[6],[-8],[6],[-3],[-8],[8],[7],[-4],[-2],[-1],[8],[9],[-8],[2],[-1],[5],[7],[-6],[-5],[-5],[-4],[-6],[10],[-1],[-10],[1],[-2],[5],[1],[3],[-2],[-9],[4],[-1],[4],[1],[-8],[-10],[6],[-3],[4],[2],[2],[-5],[-5],[-5],[9],[-6],[-1],[1],[3],[-3],[10],[1],[7],[-2],[-8],[8],[-4],[-5],[3],[7],[-5],[-6],[-10],[-2],[-10],[5],[-10],[-8],[2],[1],[-4],[2],[-4],[-6],[8],[-1],[-6],[9],[-6],[10],[8],[10],[6],[7],[5],[10],[7],[-7],[8],[9],[7],[-10],[9],[-1],[-2],[4],[8],[8],[-9],[-2],[10],[-4],[-3],[-9],[-4],[-10],[10],[-6],[-9],[7],[9],[1],[-3],[-1],[-1],[9],[-4],[-2],[1],[1],[-2],[8],[1],[3],[10],[1],[-1],[-7],[9],[-9],[1],[-4],[10],[-4],[-7],[-8],[-8],[-3],[10],[-8],[7],[-2],[-10],[-3],[6],[-1],[-1],[-4],[3],[1],[4],[1],[6],[2],[-1],[8],[10],[4],[-8],[-10],[2],[-1],[-10],[-3],[-4],[-3],[6],[2],[-9],[9],[5],[-5],[7],[4],[8],[-10],[-9],[3],[-10],[10],[-3],[-4],[-8],[-10],[-3],[4],[6],[2],[1],[-1],[-1],[-1],[-5],[-8],[3],[9],[-3],[-4],[9],[10],[2],[-7],[-5],[6],[-6],[7],[9],[8],[4],[-9],[7],[6],[8],[1],[-3],[7],[-4],[8],[7],[7],[10],[-1],[-4],[2],[-8],[-7],[-6],[-5],[3],[2],[-8],[5],[-7],[-3],[-6],[8],[-4],[4],[-1],[-6],[-7],[3],[7],[8],[5],[-8],[-10],[7],[8],[2],[2],[-2],[10],[-4],[4],[1],[6],[3],[-4],[-3],[-2],[2],[-6],[1],[-8],[-9],[-4],[7],[-7],[-6],[-5],[-10],[-3],[-4],[7],[-7],[-10],[1],[9],[1],[-5],[-10],[-1],[5],[-9],[9],[-2],[-7],[-4],[-3],[10],[-10],[-1],[10],[4],[-7],[-2],[-10],[-3],[-9],[9],[-10],[-8],[5],[10],[3],[-10],[-2],[-7],[-8],[4],[2],[2],[8],[-8],[-2],[6],[-10],[-1],[-6],[-5],[-10],[-3],[5],[-5],[-1],[-8],[-4],[4],[10],[9],[-10],[5],[7],[7],[6],[-2],[6],[-9],[5],[3],[2],[8],[4],[7],[5],[9],[1],[7],[10],[3],[5],[-4],[-1],[1],[-6],[4],[6],[7],[-6],[-5],[2],[-8],[7],[-3],[1],[-5],[-1],[7],[-2],[2],[1],[-10],[-9],[-8],[-1],[8],[6],[-6],[-3],[-2],[-5],[1],[5],[-2],[6],[-9],[-9],[7],[-5],[-3],[-5],[-8],[6],[4],[5],[6],[-2],[-9],[-4],[-8],[-2],[-1],[-5],[7],[3],[-4],[10],[9],[-8],[-7],[-10],[4],[-9],[1],[-2],[6],[-3],[5],[7],[-7],[1],[-9],[5],[-6],[3],[-5],[-4],[5],[4],[7],[-4],[-1],[3],[-6],[-7],[1],[4],[8],[-9],[2],[10],[5],[8],[7],[7],[-9],[-10],[9],[-6],[4],[-9],[1],[6],[-3],[-8],[7],[4],[-1],[-3],[6],[6],[-10],[-6],[10],[7],[5],[-10],[9],[10],[2],[-9],[-5],[10],[-5],[6],[-2],[7],[-7],[-2],[-4],[2],[5],[8],[9],[-8],[-7],[2],[7],[-7],[5],[-6],[-6],[-1],[-5],[-3],[-4],[-10],[6],[-2],[9],[7],[-4],[7],[-1],[8],[10],[6],[-6],[-2],[-2],[1],[9],[-2],[1],[-1],[4],[6],[7],[3],[-10],[5],[-2],[7],[-8],[8],[5],[5],[-1],[8],[-2],[2],[-6],[-4],[-10],[10],[-8],[9],[8],[8],[8],[-5],[3],[6],[6],[6],[2],[4],[4],[1],[-6],[5],[8],[4],[1],[-1],[7],[-1],[-5],[-6],[10],[10],[8],[8],[-3],[8],[-1],[-3],[-9],[4],[-10],[1],[2],[-10],[1],[-9],[6],[3],[-5],[-9],[-1],[10],[-2],[-3],[-2],[2],[-4],[9],[-7],[3],[5],[-10],[-3],[-8],[-5],[9],[-4],[10],[-3],[-8],[9],[-7],[3],[9],[7],[9],[-5],[-4],[2],[-9],[8],[5],[-6],[-9],[-7],[4],[-7],[1],[8],[-1],[1],[8],[8],[4],[-1],[1],[10],[3],[-10],[-3],[-9],[4],[-9],[-5],[2],[-4],[5],[1],[-2],[-5],[8],[4],[1],[-4],[-10],[-7],[5],[5],[6],[-2],[6],[-3],[6],[6],[9],[-4],[-7],[-6],[6],[9],[-8],[-6],[-10],[6],[-1],[-4],[4],[9],[9],[9],[7],[4],[-2],[4],[10],[-5],[-2],[9],[2],[-7],[6],[1],[7],[10],[-7],[4],[10],[2],[10],[-1],[9],[-9],[9],[-4],[5],[-3],[3],[1],[-5],[-7],[-7],[8],[3],[-1],[-6],[-3],[10],[-8],[10],[-9],[5],[6],[-7],[-7],[-7],[7],[-9],[3],[-7],[-5],[1],[-9],[-8],[2],[-1],[4],[5],[4],[-8],[-6],[-9],[-1],[2],[-8],[-10],[-3],[9],[-4],[3],[8],[6],[-1],[-2],[3],[-8],[-5],[4],[5],[9],[4],[-6],[-10],[10],[-5],[-9],[8],[3],[-6],[-6],[4],[-10],[1],[6],[7],[-9],[5],[-7],[-2],[1],[2],[8],[-7],[9],[5],[4],[9],[10],[-7],[8],[-2],[-4],[-4],[-3],[2],[2],[6],[-3],[-1],[8],[-10],[-9],[6],[3],[-6],[5],[1],[6],[-2],[2],[5],[-7],[-5],[5],[7],[-4],[-4],[9],[2],[3],[-4],[9],[-2],[9],[-6],[-8],[-6],[-5],[9],[7],[-1],[-4],[3],[9],[5],[5],[-2],[5],[1],[-8],[6],[9],[4],[10],[-4],[-9],[7],[-2],[-7],[8],[-2],[-1],[9],[-10],[1],[-7],[-7],[6],[-2],[5],[3],[-1],[-9],[3],[-5],[-8],[-5],[-5],[9],[7],[5],[-5],[-2],[-4],[-9],[-10],[-2],[3],[7],[7],[-8],[-1],[8],[-9],[3],[-4],[-10],[1],[-4],[-6],[-3],[-3],[7],[-6],[3],[-8],[-10],[6],[-7],[4],[-1],[-10],[-9],[-2],[-5],[4],[-5],[1],[-7],[8],[-10],[-3],[-5],[8],[-1],[4],[1],[2],[-3],[5],[-5],[4],[-7],[5],[3],[6],[-10],[-6],[5],[1],[-8],[-10],[6],[-1],[10],[-9],[-6],[-6],[9],[9],[-7],[-7],[-3],[5],[9],[-5],[-8],[-8],[-9],[-5],[6],[6],[6],[-4],[-5],[7],[7],[8],[9],[7],[-7],[4],[9],[10],[-10],[1],[-7],[-7],[8],[8],[-4],[3],[10],[-3],[-7],[4],[-7],[9],[-2],[-6],[-6],[-10],[3],[-5],[-1],[-4],[7],[8],[1],[6],[-6],[-1],[-1],[-8],[1],[-7],[2],[-9],[-7],[6],[9],[-4],[-7],[6],[6],[7],[-4],[-4],[3],[10],[-8],[3],[6],[-3],[-8],[10],[-8],[8],[9],[-7],[-5],[6],[5],[4],[3],[-3],[3],[-1],[8],[2],[4],[5],[-8],[-9],[-8],[1],[-1],[5],[-8],[5],[5],[4],[-2],[4],[8],[7],[-10],[6],[-7],[5],[1],[9],[5],[-1],[4],[-6],[-4],[4],[-5],[7],[6],[7],[-8],[4],[-8],[-1],[6],[-3],[5],[-6],[10],[6],[2],[1],[10],[-1],[1],[10],[1],[-5],[4],[-7],[9],[1],[-6],[2],[9],[-9],[10],[10],[-7],[6],[-1],[7],[2],[-8],[-1],[7],[7],[-3],[5],[6],[-5],[-4],[-6],[-7],[-7],[2],[9],[9],[-3],[-10],[-4],[-4],[4],[-1],[-5],[2],[-5],[-7],[3],[7],[-8],[8],[-8],[1],[-6],[10],[7],[-10],[-3],[10],[9],[10],[-8],[-8],[-2],[3],[-1],[7],[9],[-5],[-8],[-2],[8],[8],[4],[-9],[-9],[8],[5],[-10],[-8],[5],[3],[-1],[10],[7],[10],[7],[-3],[7],[-2],[-10],[-5],[-8],[-2],[-7],[3],[-2],[-4],[1],[8],[5],[7],[-5],[-4],[6],[1],[7],[-4],[-8],[5],[-9],[-5],[-7],[3],[-6],[3],[-10],[-1],[1],[-9],[3],[2],[-8],[7],[3],[9],[-2],[-2],[-5],[6],[7],[-3],[2],[-1],[-1],[-1],[-10],[6],[-9],[4],[-5],[-5],[-7],[-8],[3],[4],[-5],[-8],[10],[9],[2],[8],[5],[2],[7],[8],[-6],[10],[2],[-6],[2],[-5],[-6],[4],[-4],[7],[-5],[2],[9],[1],[-9],[-7],[-4],[10],[7],[-8],[-5],[-5],[-10],[7],[2],[-2],[9],[4],[-7],[3],[6],[10],[-8],[-5],[-6],[3],[-8],[4],[-7],[-1],[-5],[5],[-6],[-9],[6],[8],[-3],[-3],[7],[-6],[-10],[6],[-7],[-5],[-1],[3],[-1],[9],[7],[-2],[-1],[6],[-9],[3],[-6],[-10],[-7],[-6],[9],[9],[2],[-8],[-10],[2],[-7],[10],[-7],[10],[-5],[3],[-1],[10],[1],[4],[-7],[-2],[5],[-4],[8],[-2],[-4],[-1],[-9],[8],[-3],[5],[-6],[-3],[1],[9],[-2],[-9],[-2],[4],[10],[-3],[8],[-5],[2],[-3],[4],[8],[-5],[5],[10],[-5],[4],[9],[-8],[-3],[9],[-3],[9],[-8],[-9],[5],[-10],[-1],[8],[2],[1],[-10],[3],[10],[2],[-2],[-1],[-2],[10],[3],[-8],[3],[3],[-5],[-2],[-9],[-4],[8],[10],[-1],[-5],[-5],[-7],[-9],[6],[6],[-10],[4],[-5],[-6],[-5],[9],[-6],[9],[7],[10],[4],[-10],[-4],[-9],[1],[-6],[6],[-6],[-10],[5],[-9],[-5],[1],[3],[-7],[-4],[10],[-3],[3],[5],[-7],[6],[-1],[-4],[9],[6],[-6],[-5],[8],[-7],[-2],[-5],[4],[-7],[10],[-2],[-2],[-2],[-5],[4],[6],[3],[3],[-8],[-7],[4],[-7],[2],[-9],[-8],[-10],[9],[3],[5],[-8],[1],[10],[-5],[-2],[-4],[2],[-8],[10],[-8],[-10],[9],[-9],[2],[-8],[9],[7],[-1],[1],[-10],[10],[2],[3],[-1],[-4],[2],[-7],[4],[9],[-7],[2],[-2],[-5],[-5],[-8],[-1],[-10],[-2],[-5],[-8],[4],[-10],[2],[7],[9],[-8],[-2],[-1],[-5],[5],[-5],[4],[9],[10],[1],[-2],[-9],[5],[8],[3],[-8],[2],[3],[-6],[10],[-2],[8],[-2],[-5],[5],[-2],[10],[1],[5],[7],[-1],[-10],[2],[-4],[2],[2],[1],[-1],[10],[-5],[10],[2],[-1],[5],[-4],[-5],[-5],[6],[8],[8],[8],[-3],[1],[-3],[-8],[6],[8],[-9],[-10],[-6],[-7],[9],[-7],[1],[-9],[-7],[-10],[-7],[4],[4],[8],[1],[-7],[-6],[5],[3],[-4],[5],[-7],[9],[7],[2],[-4],[-2],[9],[-10],[7],[5],[-2],[-3],[5],[-2],[-6],[10],[-5],[-1],[5],[-4],[2],[-9],[2],[-6],[-3],[-3],[1],[5],[-9],[7],[-5],[-3],[8],[-5],[-5],[3],[-2],[8],[2],[-3],[6],[1],[9],[5],[2],[-7],[9],[-7],[2],[-9],[10],[-6],[-4],[8],[-8],[-2],[-4],[-2],[-8],[3],[9],[7],[8],[4],[-8],[8],[-4],[-2],[-9],[-6],[-9],[1],[-1],[6],[-2],[-1],[9],[-10],[4],[8],[6],[9],[10],[-10],[-10],[-6],[-5],[2],[-2],[9],[-9],[8],[10],[6],[1],[-5],[-10],[8],[-6],[9],[-5],[6],[-1],[-9],[-9],[8],[7],[-10],[3],[1],[10],[10],[-10],[9],[1],[3],[2],[7],[8],[-8],[-2],[-8],[2],[8],[-6],[9],[6],[-7],[10],[-4],[6],[6],[-7],[-1],[8],[-5],[-6],[3],[-1],[-3],[-1],[4],[-2],[4],[6],[4],[5],[2],[-4],[6],[-4],[4],[4],[-10],[-8],[3],[-5],[-7],[-7],[-10],[10],[7],[-3],[-7],[3],[1],[-4],[7],[-4],[-4],[-10],[-4],[-3],[2],[3],[-3],[4],[-8],[10],[-6],[-1],[-8],[1],[5],[-2],[10],[8],[-7],[-4],[-1],[8],[1],[5],[-3],[-5],[5],[5],[2],[-1],[-1],[-6],[7],[4],[4],[-10],[6],[8],[-4],[-7],[9],[-5],[7],[-10],[-5],[-6],[5],[9],[5],[-5],[-3],[4],[5],[-5],[7],[5],[3],[10],[1],[10],[4],[6],[7],[1],[-1],[1],[-1],[1],[6],[-4],[-9],[9],[-2],[-3],[3],[-9],[-1],[-6],[2],[-10],[-4],[-5],[5],[3],[-6],[-6],[-8],[9],[8],[-3],[7],[-7],[8],[-7],[-3],[-3],[10],[-3],[6],[10],[-3],[-6],[-5],[-2],[-7],[3],[-10],[-2],[-8],[-9],[8],[7],[10],[4],[-6],[-7],[-1],[1],[-8],[-9],[10],[8],[-6],[8],[-1],[-2],[-1],[-6],[-1],[-6],[-5],[7],[7],[-1],[2],[9],[4],[10],[10],[-4],[7],[10],[9],[8],[6],[-8],[-10],[-6],[2],[2],[-9],[-6],[10],[5],[-3],[5],[-8],[-7],[-10],[-6],[10],[9],[8],[7],[-3],[6],[9],[7],[7],[3],[2],[2],[-2],[-7],[-6],[1],[9],[-6],[-5],[9],[-1],[2],[-6],[-1],[-10],[2],[2],[-1],[5],[-7],[1],[6],[9],[-6],[-4],[-4],[1],[-5],[2],[9],[10],[-3],[-7],[7],[2],[-2],[-3],[2],[-2],[-6],[-5],[-3],[6],[-3],[-6],[10],[8],[-8],[-10],[7],[-8],[-5],[-1],[1],[-7],[-2],[-7],[1],[3],[-2],[10],[4],[-9],[-1],[7],[3],[10],[6],[-6],[5],[-6],[-8],[-1],[8],[6],[-2],[-6],[-2],[-9],[4],[-4],[-5],[6],[6],[-10],[5],[-9],[1],[-5],[4],[3],[-8],[2],[-3],[-5],[-9],[5],[-5],[-5],[3],[3],[1],[5],[2],[5],[1],[-9],[6],[-7],[2],[-10],[-10],[7],[6],[-8],[7],[-8],[-3],[-2],[-3],[10],[4],[1],[3],[-1],[-1],[-8],[-7],[-8],[-6],[3],[8],[-2],[4],[-6],[3],[-9],[7],[9],[9],[7],[-2],[-10],[-9],[-2],[-5],[-6],[6],[-1],[-4],[-7],[7],[3],[5],[6],[-3],[-3],[7],[4],[2],[-8],[-8],[-9],[6],[5],[9],[6],[8],[-9],[-5],[-9],[7],[5],[-7],[-7],[2],[-7],[4],[7],[6],[-10],[3],[-2],[-9],[-6],[-8],[-5],[8],[9],[7],[-4],[5],[-3],[5],[-9],[-3],[-9],[-6],[9],[-2],[10],[-9],[6],[-2],[-3],[-3],[10],[-6],[7],[5],[6],[4],[4],[4],[7],[-8],[9],[1],[7],[10],[-6],[6],[-5],[1],[6],[7],[-1],[7],[4],[9],[-1],[-8],[8],[-6],[7],[-4],[-1],[9],[3],[-7],[3],[2],[8],[9],[5],[1],[9],[-8],[1],[10],[10],[-8],[-4],[-8],[-6],[-7],[2],[5],[3],[1],[-6],[-5],[4],[-9],[-5],[-2],[5],[-9],[-9],[-8],[-3],[-6],[-6],[-4],[6],[6],[2],[6],[5],[2],[4],[-7],[3],[2],[3],[9],[-6],[-1],[-9],[-3],[4],[7],[-3],[1],[-8],[-7],[6],[3],[-10],[-3],[4],[-10],[-10],[-3],[8],[4],[-7],[8],[-3],[7],[-2],[4],[-10],[7],[-2],[4],[-4],[-6],[-7],[-1],[-7],[9],[-5],[-4],[-5],[-10],[7],[7],[2],[7],[6],[-2],[8],[-3],[1],[10],[-1],[3],[-3],[4],[2],[-9],[9],[4],[1],[7],[-5],[-8],[-1],[5],[-6],[-1],[3],[5],[-5],[-8],[-5],[3],[4],[-9],[-1],[2],[7],[8],[-2],[-1],[10],[-9],[8],[-1],[-3],[9]], dtype = "uint32")#candidate|8418|(2940, 1)|const|uint32
const_8419 = relay.const([-3,-1,5,9,9,-9,8,-2,4,-1,-6,-5,3,5,7,5,-2,4,-10,7,3,-6,1,-7,1,8,-6,-4,2,-2,1,10,-4,3,9,5,7,-2,1,-3,-7,8,5,-4,-3,-7,4,10,-4,-3,-2,-7,-10,-9,-8,3,-5,-1,-5,7,-3,-4,6,6,6,4,-8,9,10,8,2,5,4,-8,-3,7,-1,-3,-5,-8,-6,1,5,-3,9,5,5,-9,-6,-8,-3,-2,-5,3,2,1,4,-4,-1,4,-10,-3,8,4,8,2,-6,-8,-9,-1,2,1,-3,5,-1,5,-7,-6,10,-9,-9,-2,5,-8,-2,-5,10,-10,-10,6,-3,5,-9,5,9,10,4,5,-3,-6,-1,-9,7,-3,-6,2,-1,-9,8,-2,7,6,-3,5,-3,8,1,4,-9,-9,-9,-2,8,3,-5,-2,6,-8,-9,2,3,6,7,2,-9,1,-1,-8,-4,4,5,-4,4,-7,-4,-2,9,10,10,-4,-4,6,-7,6,-5,-1,-8,3,-8,2,-9,8,4,8,2,4,-6,-5,5,4,-4,4,3,-2,8,-2,10,-7,-10,10,-6,9,-5,4,-6,3,7,-1,-3,-1,1,-9,3,-7], dtype = "int8")#candidate|8419|(234,)|const|int8
call_8415 = relay.TupleGetItem(func_2291_call(relay.reshape(var_8416.astype('int64'), []), relay.reshape(const_8417.astype('bool'), [15, 16, 6]), relay.reshape(const_8418.astype('uint32'), [2940,]), relay.reshape(const_8419.astype('int8'), [39, 6]), ), 1)
call_8420 = relay.TupleGetItem(func_2297_call(relay.reshape(var_8416.astype('int64'), []), relay.reshape(const_8417.astype('bool'), [15, 16, 6]), relay.reshape(const_8418.astype('uint32'), [2940,]), relay.reshape(const_8419.astype('int8'), [39, 6]), ), 1)
var_8431 = relay.var("var_8431", dtype = "int8", shape = (234,))#candidate|8431|(234,)|var|int8
bop_8432 = relay.floor_divide(const_8419.astype('float32'), relay.reshape(var_8431.astype('float32'), relay.shape_of(const_8419))) # shape=(234,)
output = relay.Tuple([call_8363,call_8389,var_8390,call_8415,var_8416,const_8417,const_8418,bop_8432,])
output2 = relay.Tuple([call_8364,call_8391,var_8390,call_8420,var_8416,const_8417,const_8418,bop_8432,])
func_8437 = relay.Function([var_8390,var_8416,var_8431,], output)
mod['func_8437'] = func_8437
mod = relay.transform.InferType()(mod)
var_8438 = relay.var("var_8438", dtype = "uint64", shape = (378,))#candidate|8438|(378,)|var|uint64
var_8439 = relay.var("var_8439", dtype = "int64", shape = ())#candidate|8439|()|var|int64
var_8440 = relay.var("var_8440", dtype = "int8", shape = (234,))#candidate|8440|(234,)|var|int8
output = func_8437(var_8438,var_8439,var_8440,)
func_8441 = relay.Function([var_8438,var_8439,var_8440,], output)
mutated_mod['func_8441'] = func_8441
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8451 = relay.var("var_8451", dtype = "float32", shape = ())#candidate|8451|()|var|float32
var_8452 = relay.var("var_8452", dtype = "float32", shape = (11, 12, 9))#candidate|8452|(11, 12, 9)|var|float32
bop_8453 = relay.maximum(var_8451.astype('float32'), var_8452.astype('float32')) # shape=(11, 12, 9)
uop_8462 = relay.sin(bop_8453.astype('float64')) # shape=(11, 12, 9)
func_3177_call = mod.get_global_var('func_3177')
func_3179_call = mutated_mod.get_global_var('func_3179')
var_8466 = relay.var("var_8466", dtype = "float64", shape = (154, 10))#candidate|8466|(154, 10)|var|float64
call_8465 = relay.TupleGetItem(func_3177_call(relay.reshape(var_8466.astype('float64'), [10, 14, 11])), 0)
call_8467 = relay.TupleGetItem(func_3179_call(relay.reshape(var_8466.astype('float64'), [10, 14, 11])), 0)
output = relay.Tuple([uop_8462,call_8465,var_8466,])
output2 = relay.Tuple([uop_8462,call_8467,var_8466,])
func_8469 = relay.Function([var_8451,var_8452,var_8466,], output)
mod['func_8469'] = func_8469
mod = relay.transform.InferType()(mod)
mutated_mod['func_8469'] = func_8469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8469_call = mutated_mod.get_global_var('func_8469')
var_8471 = relay.var("var_8471", dtype = "float32", shape = ())#candidate|8471|()|var|float32
var_8472 = relay.var("var_8472", dtype = "float32", shape = (11, 12, 9))#candidate|8472|(11, 12, 9)|var|float32
var_8473 = relay.var("var_8473", dtype = "float64", shape = (154, 10))#candidate|8473|(154, 10)|var|float64
call_8470 = func_8469_call(var_8471,var_8472,var_8473,)
output = call_8470
func_8474 = relay.Function([var_8471,var_8472,var_8473,], output)
mutated_mod['func_8474'] = func_8474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5543_call = mutated_mod.get_global_var('func_5543')
call_8572 = func_5541_call()
call_8573 = func_5541_call()
func_4793_call = mod.get_global_var('func_4793')
func_4798_call = mutated_mod.get_global_var('func_4798')
var_8576 = relay.var("var_8576", dtype = "uint16", shape = (6, 3))#candidate|8576|(6, 3)|var|uint16
var_8577 = relay.var("var_8577", dtype = "uint16", shape = (144,))#candidate|8577|(144,)|var|uint16
var_8578 = relay.var("var_8578", dtype = "uint32", shape = (2940,))#candidate|8578|(2940,)|var|uint32
call_8575 = relay.TupleGetItem(func_4793_call(relay.reshape(var_8576.astype('uint16'), [2, 1, 9]), relay.reshape(var_8577.astype('uint16'), [2, 8, 9]), relay.reshape(var_8578.astype('uint32'), [3, 980]), ), 3)
call_8579 = relay.TupleGetItem(func_4798_call(relay.reshape(var_8576.astype('uint16'), [2, 1, 9]), relay.reshape(var_8577.astype('uint16'), [2, 8, 9]), relay.reshape(var_8578.astype('uint32'), [3, 980]), ), 3)
func_2456_call = mod.get_global_var('func_2456')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_8588 = relay.var("var_8588", dtype = "uint32", shape = (3840,))#candidate|8588|(3840,)|var|uint32
call_8587 = relay.TupleGetItem(func_2456_call(relay.reshape(var_8588.astype('uint32'), [15, 16, 16])), 0)
call_8589 = relay.TupleGetItem(func_2459_call(relay.reshape(var_8588.astype('uint32'), [15, 16, 16])), 0)
func_7025_call = mod.get_global_var('func_7025')
func_7026_call = mutated_mod.get_global_var('func_7026')
call_8594 = func_7025_call()
call_8595 = func_7025_call()
uop_8597 = relay.rsqrt(call_8594.astype('float32')) # shape=(4, 3, 8)
uop_8599 = relay.rsqrt(call_8595.astype('float32')) # shape=(4, 3, 8)
func_5627_call = mod.get_global_var('func_5627')
func_5633_call = mutated_mod.get_global_var('func_5633')
var_8609 = relay.var("var_8609", dtype = "float32", shape = (780,))#candidate|8609|(780,)|var|float32
const_8610 = relay.const([9,-3,-2,6,10,-6,7,7,8,-4,9,-6,10,7,8,-10,-10,7,-8,8,10,-7,7,1,-9,10,7,-10,-5,-6,10,9,3,-2,10,-8,-3,9,10,-7,7,10,3,-10,-8,-1,-6,-8,6,-9,9,9,4,-2,-10,-7,6,2,7,10,-10,-2,3,7,-2,-8,-6,5,-6,6,7,4,1,5,-8,1,-9,-6,7,-10,2,1,4,9,4,6,1,5,4,9,-8,-1,3,7,-1,-8,6,2,-7,10,8,-1,5,-10,7,-2,8,-1,-1,3,-7,6,2,5,-8,-1,2,5,9,8,-3,-2,-6,-3,3,-2,9,-6,-5,-2,-6,1,-6,-7,10,-2,10,5,9,4,4,-4,3,5,3,-4,2,-8,10,5,1,-4,-3,6,8,6,7,6,2,-9,-1,-5,-8,3,-8,-1,-6,-1,-5,3,-8,-5,8,6,-3,6,-10,8,4,8,-10,3,4,-6,-1,-2,7,6,7,7,9,-3,-6,8,2,4,-7,-7,10,-1,4,2,9,9,9,7,9,10,-2,-5,-6,-4,5,5,-9,-6,8,-4,-5,-6,-9,6,-2,3,-5,-8,-9,-6,-8,-2,5,-9,8,-3,-6,-9,9,-3,10,-7,-6,5,-7,-2,2,-1,-1,-2,-2,2,-4,-5,4,8,-5,8,9,-9,-6,1,-4,-7,-1,-4,5,-4,-4,-4,4,2,-6,-3,6,1,-4,2,-5,10,9,2,9,5,-3,-4,2,8,-8,4,4,10,10,-5,10,-4,1,-2,-1,4,7,-3,-3,8,-4,7,-10,8,-8,6,8,8,-7,8,7,-2,-1,3,7,-7,-4,1,-3,3,-1,1,10,-9,-8,-4,10,-1,-2,6,8,2,-10,-3,3,-4,6,6,-3,-2,3,-9,-6,5,-7,-9,4,6,-6,7,-4,6,6,-5,-6,-1,-6,3,3,2,-10,-4,4,-10,-8,2,10,3,9,-7,6,7,10,-6,9,-10], dtype = "uint64")#candidate|8610|(378,)|const|uint64
var_8611 = relay.var("var_8611", dtype = "int8", shape = (1440,))#candidate|8611|(1440,)|var|int8
const_8612 = relay.const([6.888764,9.320134,1.482007,-0.487061,-2.657794,-5.292451,-4.422980,5.634417,-5.621346,-5.376486,-5.395458,-1.836636,-6.730313,-8.171917,7.242746,4.659377,-7.380972,5.355196,-0.227161,-5.956195,5.029656,8.145569,6.301594,2.792476,4.619076,4.139284,-2.712015,-2.685759,3.117081,4.170165,6.027780,-0.559779,0.400841,9.407131,7.112326,-4.443198,-5.391044,2.019072,1.015291,3.434795,-3.200424,-6.968478,-5.310748,-7.789355,3.486894,-1.022269,-5.918583,-2.699774,-5.120617,8.833037,7.791473,-1.002608,6.444668,-2.549326,-2.827122,0.260928,-8.006317,-5.217513,1.920648,-2.076554,-7.000604,4.531799,3.499141,-9.160233,-8.957900,-1.908802,4.050745,0.061048,-6.187053,9.584359,-1.640788,9.796838,-7.279096,4.492517,-2.212772,-0.696178,8.083355,-7.421858,-1.518725,-8.634339,-1.152928,-7.400287,-8.312156,2.280888,6.859851,0.917990,1.800690,-8.048102,-6.633603,5.868218,-2.968599,0.820256,-1.104810,-3.143811,-7.764743,4.406545,0.828922,7.718949,3.838132,-3.788267,9.717203,-6.715174,0.710532,6.673535,0.687280,-2.844149,-1.467832,9.387460,4.984558,5.447204,-6.566130,9.569698,7.352238,2.626744,1.530224,5.750737,-5.422092,4.224027,7.344566,9.160238,-2.185744,-1.876373,-2.613382,1.104806,5.621010,9.457498,0.792575,-0.041646,1.781010,2.304130,1.249089,-1.792664,4.084092,8.472749,-5.166058,5.745172,8.115335,1.012702,6.258687,1.013892,-1.549438,-6.679222,8.442903,-4.433625,1.067705,8.818709,-4.062510,-6.658776,-8.681143,-2.473954,-9.225309,2.267382,4.297092,3.994800,7.755776,-6.908985,-0.751133,4.796372,2.414628,-0.558369,1.789066,3.331598,2.906166,9.438937,-9.253833,-8.664944,9.999621,-4.082174,7.554491,5.864605,-9.395415,-2.109007,9.159644,3.765412,1.868496,6.439393,8.256471,-6.257206,-7.906703,-7.974764,-5.114857,3.723733,-9.404417,-7.368787,-4.151017,-9.117619,3.689738,5.891640,-1.601210,3.772747,-6.771226,4.543584,-8.910559,1.948776,6.191772,1.155597,-4.280563,-2.508908,-5.718680,-6.879741,-4.128886,8.398167,4.927123,-3.097079,4.675577,8.889364,-1.788090,-4.757409,8.202825,3.325762,0.433318,-5.014731,-6.185891,8.050463,2.516073,4.144694,-2.116732,-8.095072,9.329140,-4.663211,-7.151315,-1.710799,-5.806871,9.819810,-4.492261,-3.526093,3.480417,-6.300121,5.964373,-6.036090,1.496943,9.902443,2.785384,-9.721341,-4.226944,9.491820,-9.441089,-2.549769,-5.744144,-9.261182,-8.475465,0.249956,3.755904,7.247087,7.937178,-0.761221,6.695378,-0.304455,2.360302,5.747333,2.772982,-9.545364,1.959798,-0.223972,1.612945,-8.635885,-5.968685,8.736132,8.145025,-5.806702,6.651866,-6.006234,-0.055165,6.031789,1.349932,-4.706028,5.230875,-7.656542,3.544233,3.576172,-6.706023,-2.283615,9.501834,-4.650747,1.300632,1.543474,4.846227,4.124773,-4.723984,2.989512,-4.783420,5.385956,0.651394,-1.299382,-1.560956,4.956620,2.308692,4.514573,2.384139,-9.960120,1.787737,1.717445,9.010428,-6.167639,2.564353,5.753548,0.811099,-4.371440,-2.364057,9.553699,-1.558815,1.777883,0.610108,-3.036633,8.480215,5.130853,-0.527684,2.364817,9.993782,1.726818,-1.104480,-0.305564,9.698646,-4.295803,5.211884,5.088063,-9.297499,-8.298556,0.978129,-0.229882,8.476918,2.667569,3.330733,9.274978,7.871887,2.564793,2.784355,6.279176,-7.004245,-5.510232,-3.033462,6.016372,2.536630,-9.870268,-4.852577,8.328329,-0.080561,6.270852,4.020266,-2.022898,-4.025271,-8.670244,-4.611340,-6.803644,2.731303,-6.950109,-2.481705,-1.408182,9.897507,1.023185,-2.868441,6.941930,0.714479,-7.477378,2.327964,7.157899,-7.097625,3.291593,-1.462638,-8.176266,9.211170,1.017940,-6.927168,3.669583,-9.237585,-1.460430,3.635079,2.037405,-7.014965,7.942174,-2.874936,6.842665,9.672056,4.719188,1.367769,8.815789,0.558112,-5.522164,6.868218,6.304955,-5.476295,-2.019026,-6.823769,4.117813,7.532775,-4.013721,1.992055,-5.878161,0.096205,-8.863825,0.992998,4.095970,-6.090782,6.555543,7.872280,0.235237,-2.928867,5.538505,0.289040,7.569308,8.649421,2.618377,-8.458181,7.825605,4.732136,-6.571629,-2.679176,1.570132,7.813697,-4.029168,-8.749497,3.639612,1.449967,5.759028,3.290047,7.487108,-6.610697,2.494397,-9.186085,-1.469987,5.865368,1.184382,-3.357051,-0.808359,1.837253,-7.409610,2.106458,-5.225387,-8.550467,5.634752,-2.508202,3.373856,3.306799,2.945897,4.905273,-1.892055,-9.426720,-5.457352,-4.124393,3.513062,3.071782,1.091255,5.022219,1.654403,9.413702,0.550055,4.325392,4.112684,9.108844,5.991978,-1.056404,2.817534,1.054680,-2.854876,2.033477,6.577804,4.429978,8.836341,-0.625906,9.981855,0.787764,3.614036,1.794304,-8.711803,-1.320280,2.528636,7.708147,5.446762,7.095341,-6.461812,6.626844,5.345380,6.453157,7.783177,-1.644772,0.550519,6.339254,-2.976432,9.000523,-2.936882,-8.711522,3.015880,-7.369318,-0.133981,-8.873368,-3.934757,-8.660650,-5.556291,-7.844892,5.770672,-2.512777,4.029588,-0.075775,-4.785784,-1.357041,7.142771,4.518241,-1.793292,5.207085,0.392121,3.723819,-7.864794,3.358556,0.281461,-9.881484,-5.391119,-2.358593,0.374937,-0.647919,-7.119514,-6.953159,8.393318,-2.361584,8.190814,3.029479,4.866318,2.942293,-3.754788,6.969161,-0.414327,3.739287,-2.640697,-6.371413,-8.124105,-9.541713,6.236015,-7.570880,-3.839251,-8.381433,-7.746069,-5.350434,3.812826,1.991650,-0.680122,7.399407,0.698986,-0.789165,-5.434021,3.143714,7.719858,-2.118531,-8.125920,1.652097,9.344283,-8.899096,8.429465,-3.077576,-5.896045,0.711722,-8.530154,-5.855927,0.554545,5.382030,0.085628,-4.792343,-2.902961,-0.614128,3.969401,0.941223,6.750024,-6.108998,-5.444098,7.800555,1.123271,-7.115846,-0.734521,6.799504,2.732126,0.618783,2.937129,2.968396,-4.972600,-7.250445,1.384614,2.608721,5.098015,-6.158612,-1.000148,9.914947,-0.437938,5.104418,-9.394604,-0.305659,2.774532,-2.443045,3.330187,6.559681,1.989317,1.890694,4.246773,-2.381662,-1.147797,3.989465,-7.106492,-1.529358,-1.517794,3.055212,-1.675184,-3.684610,-1.764934,-1.698990,-5.057013,7.707166,4.002345,-9.135737,6.690674,-7.035055,2.717811,-9.142761,-8.028026,-3.566491,-1.889211,6.718398,8.927664,3.133818,-4.683621,0.908786,1.765118,7.845825,6.070131,5.689206,-9.057042,8.081270,1.878009,2.373517,-6.464416,-0.141948,-3.834627,-0.723917,2.055292,3.575361,1.264744,-8.811810,1.144200,-2.174287,-5.464753,-2.577731,8.661485,-4.369764,5.167928,-8.257624,-8.008336,6.379803,-3.946967,-7.101991,0.302349,1.746814,6.648319,5.217263,5.234864,7.403064,1.640866,-5.764201,3.917001,-1.837564,6.020474,9.408616,5.741946,-3.550031,-2.600133,-3.040532,-7.501492,-1.048634,6.085369,-1.123753,5.581743,-3.027614,2.145182,9.609128,-6.164927,-0.895367,-4.521189,7.437302,-5.362024,1.006925,-4.608512,-3.652006,-5.647097,-8.967019,-9.280386,-3.405169,9.808459,-2.976676,-5.733641,2.948746,9.797229,-0.041915,2.374637,-1.239933,1.449688,-0.032074,8.118253,-6.469499,-8.946914,2.520744,9.938406,-2.771542,8.292274,-9.822862,5.517115,-1.350613,9.231319,-9.371873,-8.275268,-7.380350,8.669237,3.872795,2.816678,-8.851194,4.415587,-2.353060,9.118403,4.169167,2.573929,-4.892709,7.001309,-5.552552,2.133469,-7.125116,9.347000,9.929695,8.967756,8.854402,-8.122956,-9.231985,0.168610,3.756008,-4.548268,9.239126,-5.144051,-2.604655,-7.078137,-1.519785,9.340282,8.597251,0.631860,7.991998,-9.226558,9.161575,-2.569367,-2.580528,-7.719388,1.469954,-8.260728,-5.803576,-9.128655,-1.465104,9.796295,5.811427,3.099244,1.198201,5.074229,-2.152388,8.522218,9.045304,6.918554,-7.038953,5.072085,-2.963979,-8.568112,-3.490037,3.323088,-7.712905,3.320634,-3.685001,-0.442900,5.770743,-4.904333,8.883037,1.891207,-0.835888,-7.249323,-2.142844,-4.002251,4.472946,5.122356,8.713096,1.952535,-1.364886,5.418748,6.436403,-2.497429,-0.812618,-4.444349,6.363653,-1.793856,0.535668,-6.767785,-8.139580,-6.251545,9.801875,8.643987,3.472717,-0.844073,1.068825,-1.743047,-2.258219,0.841081,3.431545,-8.208046,5.694853,-8.565724,-6.295307,-3.871989,6.604885,-7.047382,-9.763457,-7.634085,-5.131931,7.757818,-6.192219,5.680055,3.305162,7.998997,-4.482882,5.375508,-7.624584,-2.061637,-6.288017,3.333742,-8.458174,-4.382177,9.399236,-5.979078,-0.835624,4.787274,7.298060,0.811075,5.257281,5.517553,-9.521429,6.473734,5.060787,3.182598,-8.248550,8.581024,9.589706,-2.416950,-8.484360,-9.852527,-1.807535,-0.998032,-5.125234,-8.277788,-1.922888,-8.473113,-6.146490,-4.215136,8.195784,6.821192,-7.560993,-1.731193,0.266683,2.530307,9.725559,-1.163020,9.350801,7.815873,-7.205665,-9.650600,-8.914495,3.270988,-1.639250,-0.655570,-0.560023,-8.858186,-2.041098,-1.442968,5.564178,-8.881702,0.638330,-9.257030,5.516760,9.816007,-6.090810,-9.516030,-0.450419,1.301107,0.252187,-4.542923,-8.107039,0.923351,-8.024636,-7.849839,6.258568,-9.569644,1.030477,7.531390,9.221890,-3.232601,-5.924672,-3.838710,-2.539997,-5.657380,2.466658,1.857940,6.341350,-3.210981,-1.077964,1.815784,2.126806,4.553699,-9.525157,2.132807,2.355312,7.578052,2.074913,-7.701372,-4.470230,2.729112,3.724816,6.881261,6.851003,-8.838502,-0.621431,7.345666,-2.161377,-5.545036,-5.672297,-4.256421,5.735826,5.013399,4.787747,-8.859515,-3.256599,4.097496,0.265293,-5.466783,-6.260875,-8.397281,-5.403666,4.103626,-1.745048,-0.870994,4.252891,-9.387387,-1.384709,3.213849,5.763784,7.334226,-3.010124,-9.990982,9.409982,-9.673069,5.912866,-3.666936,1.943425,-8.266344,1.621194,-2.053916,6.606260,2.730668,-9.102893,1.968303,9.911941,-9.088632,8.212373,8.356049,8.295483,2.183454,-3.934161,7.590004,8.502285,-9.503632,-8.479390,0.705882,2.070191,7.007062,-8.784527,-0.541599,-4.393453,0.691204,7.472461,-8.104153,-1.212694,9.858079,-9.135268,-0.992630,1.775812,-1.129586,4.726218,7.086449,2.079766,6.919384,-5.474571,0.421384,-9.233552,-0.100092,6.117469,-7.477915,-6.743516,-8.907100,-1.792679,-4.977136,4.395416,4.933173,5.782868,-4.359276,-7.495226,-2.453438,2.388746,1.566553,-7.772135,1.557392,-9.168878,0.184494,7.409038,8.073053,1.787913,8.666786,4.355280,9.881768,-3.733113,5.350674,3.793821,9.494069,2.374711,-3.355147,-1.854393,9.216793,-1.316355,-9.749191,-1.722415,5.993436,6.384879,2.739491,-1.805587,4.560513,-7.840469,6.988257,-3.536109,-6.373631,3.358222,3.081674,-0.573872,-5.803551,-1.059878,-1.025097,3.946416,-7.612485,4.855179,6.588043,-1.673030,-0.983383,3.406713,4.893567,-8.961576,1.016093,-0.628816,5.784016,4.578960,3.409035,-2.081829,-4.287526,-6.932861,9.469088,-2.745194,6.529698,2.718244,5.312197,8.170720,0.073149,-8.390511,7.185283,0.215480,7.557966,-6.981203,-4.621747,4.640632,-8.204945,6.802873,0.504142,-9.652534,9.669269,-0.808151,-5.183679,6.969236,9.067268,-8.526842,-9.042409,8.466370,-0.597676,4.884413,0.157259,-6.622471,-9.256926,9.567026,9.508308,-4.165039,7.534758,-5.253641,-5.708396,5.220998,1.908455,-1.037866,-8.521173,-9.896042,6.500187,0.298797,-0.081453,1.877854,-5.945060,-4.616486,-3.549230,-9.800105,0.925860,-3.617167,-8.858278,3.866034,2.629769,0.184017,2.801225,2.484946,1.273865,3.874155,-1.231912,-0.119053,4.181321,-7.057629,6.494548,-5.729427,4.492371,-8.882304,-4.587773,-3.258716,2.454463,5.416316,9.713363,-7.400208,-1.561756,-7.258174,-4.294177,2.455895,3.495654,7.417300,-2.218583,6.950207,-3.658280,2.141931,8.519389,4.389140,8.598084,8.933683,6.068226,-1.934514,-8.480278,-0.904375,6.804632,-4.158633,1.010600,-0.619664,2.546647,-7.873016,8.060704,0.040607,9.363757,-6.087313,9.983621,8.700750,1.342101,-3.088631,-5.415955,-0.281443,-4.359424,-7.459131,-1.774139,0.928671,-1.608199,-9.826097,6.701656,-1.350978,-1.879688,-9.762711,-0.766264,-0.789835,8.689151,1.448442,9.700266,6.136799,1.845069,6.990611,-5.487271,1.277164,-3.027039,4.259207,6.059001,-0.154675,-1.114580,-0.634556,-6.047661,-0.244071,5.774634,0.404504,3.509191,2.867157,-4.871690,-1.118391,9.597707,3.066667,4.481934,-5.379642,-7.724142,-4.814090,5.699988,-3.804130,9.713448,5.142582,-1.520758,2.393264,7.255779,-8.819604,-9.909447,8.935577,5.491061,9.971210,0.308004,0.496651,0.268894,-2.615013,-5.049387,-3.157746,4.151404,3.356397,5.483897,3.298792,2.527445,-8.430848,-5.100044,6.219962,7.272618,9.924611,-4.570152,-2.634067,-9.163134,-7.304736,1.229159,0.795867,-6.050947,8.463461,1.802293,7.354435,-5.065557,-1.329127,2.607610,-7.151244,9.955699,4.050982,6.580216,8.795574,-3.698090,-3.348403,-9.099460,-3.602721,-8.076426,-4.803083,-6.264385,-0.278178,-5.837429,4.494087,7.179995,-1.170995,6.675447,-5.903561,8.614341,9.729133,-9.155665,-3.806478,8.326275,2.698785,-3.519310,2.665511,8.270640,4.491156,6.701831,1.817609,8.641197,9.648603,3.072864,7.322390,5.013843,-4.134188,-0.769966,-8.079482,1.235386,-8.103816,-3.329906,-4.200252,9.057334,8.589674,1.747618,3.784067,-0.322501,1.729330,1.711495,-6.836269,4.834027,-8.781130,1.315665,1.387168,-7.107374,-4.267968,-7.455733,8.415200,0.556737,-9.339151,5.619144,7.882530,-2.662094,-7.327494,4.084808,-3.332233,0.335554,-0.869445,0.982331,-2.615620,5.094314,-4.500543,3.901296,-7.409313,-6.214750,5.883426,-5.121407,7.471587,-4.498615,-3.051495,2.782950,-3.900788,4.244506,3.679813,8.323215,8.952081,5.551551,-6.235238,4.162166,6.193249,8.794494,7.676276,5.244300,-2.726443,-0.307449,3.823933,1.052848,8.658112,-0.390396,8.286420,-7.093550,1.254683,3.707661,-9.128891,-6.514196,-6.586684,3.905236,4.250233,2.287662,-6.680653,0.812142,9.870694,4.876056,4.832092,4.245839,4.816296,4.552645,8.907126,-3.850115,9.776809,2.295069,-2.160638,-8.761576,9.272758,1.700859,3.753292,3.566726,6.428533,2.287001,7.358126,-9.507221,-1.082084,9.560622,-3.488825,-4.922902,-5.845602,4.315143,-1.695507,-0.166316,7.475284,3.409554,-0.114712,4.726254,2.111366,8.310672,-0.020801,-6.617485,2.433409,-0.082508,6.509624,-1.408963,3.983949,1.414125,2.184359,0.306524,5.288277,1.382304,-5.857114,-2.187236,-5.871575,-2.358430,8.592725,4.759574,-4.651672,-0.830853,-8.280576,7.220698,-7.770593,7.590698,-8.972961,3.431043,3.562346,-6.171654,4.488077,-5.690126,-6.309843,-6.789994,7.491462,-7.618196,-4.460393,5.505356,9.331304,-0.368534,2.355194,5.840834,-4.974039,-6.455673,-0.911408,6.838993,8.869089,6.601812,-7.789932,5.098715,6.454645,1.075187,-0.019919,2.099394,5.773051,8.908131,5.282554,4.941547,2.718321,-7.235765,-2.615212,-9.032840,4.679894,6.253632,7.073367,2.679366,-6.211972,-4.335247,8.392371,4.333704,1.695189,-0.091201,6.033414,4.444020,9.700114,-5.298684,2.406120,1.035942,-8.823360,5.675078,8.725889,5.931914,8.397315,-6.856679,8.862515,-0.145491,-4.447932,3.855975,-4.024849,6.608380,-7.216854,5.042182,-3.315874,-1.092232,3.094179,-5.990781,-5.993565,-7.465469,-6.784488,9.880108,-6.253400,-5.171535,-5.911210,0.209619,-7.892738,-7.496568,-6.115638,0.037630,-9.313681,-0.879078,1.856811,-9.918233,-0.169985,2.823460,7.498885,-4.697855,-9.911461,-6.883069,-7.689885,1.416233,-0.969011,-0.095203,6.978446,7.877840,4.397061,7.771353,3.422889,6.487913,5.822395,-0.862776,0.766910,-3.093582,4.266241,-4.904071,-5.515758,2.927152,8.057948,-9.296492,3.880055,-5.198004,6.719921,9.814434,9.152756,-8.864053,1.620239,5.306202,6.353291,4.532400,-6.719780,-2.140803,1.246139,-2.324647,8.763809,-5.030596,-5.714881,-5.215996,-7.460978,-3.761817,-2.941009,-4.517672,9.504361,-4.665725,-4.675547,-9.529929,9.776357,6.988801,-9.413653,6.047769,-5.724343,-1.720671,-7.779094,-3.701481,-5.981416,-5.213343,3.886266,-1.027948,-3.081499,3.308887,-3.218978,0.695025,4.649147,8.673982,-7.441740,0.891872,-5.500141,-2.647421,-1.846187,7.673997,3.713726,6.769878,9.150015,-0.214998,-5.843870,-4.633810,3.792547,-3.462196,-9.515382,-5.999604,-9.492319,-9.808197,3.406216,0.542239,1.834257,-6.463522,-6.323662,-5.041579,9.036050,8.227608,-7.031794,0.225948,-4.710304,-2.437485,6.121697,5.155087,8.491039,-1.703447,-4.843172,-2.746939,-6.139175,8.829110,3.692247,-8.999836,-0.951215,-5.482398,3.890168,-5.312811,-4.765137,8.151746,1.606767,3.815978,-9.056229,9.856550,-5.875401,-4.751952,-1.926633,7.950862,4.236694,-2.531927,-1.590083,3.931225,-1.161739,9.629959,-9.389434,-7.283322,4.242996,-5.435780,7.431421,9.541789,-0.974623,8.430057,9.245225,-1.830202,-2.578266,-5.109196,9.568247,2.429891,3.044180,-6.750603,7.554282,6.895082,3.679862,-9.677297,5.635310,-0.820970,4.964395,-3.188511,-0.078632,-1.722014,4.520476,6.428210,-9.698003,7.424496,2.790927,2.852103,-2.086573,-3.529513,2.339839,7.678168,-0.893275,-1.816277,1.904251,-2.265091,1.985056,-1.073253,5.597033,2.304784,-1.806550,5.980023,0.252017,-7.093099,9.509185,9.419297,3.403004,4.836265,-2.585156,-6.239686,-8.503709,2.667399,9.390417,-6.418670,-1.322101,-6.323166,-8.758569,-1.340820,-8.721011,-8.211069,4.927486,-3.069710,-4.312414,-5.060650,2.879690,-4.801401,8.835497,4.440302,1.240427,9.207533,-2.012705,6.822818,7.157366,-3.654887,-1.163417,8.570693,-0.975989,4.692725,4.981862,2.936762,-4.758067,-0.470380,5.046941,-7.444403,-5.590935,-5.692470,4.538025,9.724513,-1.597993,-7.682037,-2.437389,-0.854570,-9.349409,2.775613,-2.466038,-2.586943,-5.166337,-4.207344,9.368268,8.215601,9.726759,-8.074664,0.168149,4.742608,9.919959,-3.514497,-6.185807,-8.496556,-2.209206,-5.727997,-6.298783,8.187771,-8.349288,-4.788533,-4.848887,6.649821,-0.383643,-8.205101,6.640207,6.040624,-3.206336,7.297074,-0.943087,3.942412,0.327829,7.115681,-6.356647,7.516489,4.538425,-7.841274,1.327321,0.424144,3.346535,5.042670,4.126773,5.205078,-3.639282,-0.762100,-5.162520,-6.108357,-1.625349,9.219103,-0.803644,7.867879,4.017753,-9.924319,3.499711,-5.316719,2.317487,4.123485,-7.012870,-0.627717,5.570623,5.475457,-6.001120,-6.948658,-5.459401,-6.461183,-2.293460,-2.524791,1.110252,-1.456570,-9.734907,-4.480995,-3.054532,-0.369412], dtype = "float64")#candidate|8612|(1800,)|const|float64
call_8608 = relay.TupleGetItem(func_5627_call(relay.reshape(var_8609.astype('float32'), [6, 10, 13]), relay.reshape(call_8587.astype('uint32'), [3840,]), relay.reshape(const_8610.astype('uint64'), [378, 1]), relay.reshape(var_8611.astype('int8'), [20, 72]), relay.reshape(const_8612.astype('float64'), [1800,]), ), 12)
call_8613 = relay.TupleGetItem(func_5633_call(relay.reshape(var_8609.astype('float32'), [6, 10, 13]), relay.reshape(call_8587.astype('uint32'), [3840,]), relay.reshape(const_8610.astype('uint64'), [378, 1]), relay.reshape(var_8611.astype('int8'), [20, 72]), relay.reshape(const_8612.astype('float64'), [1800,]), ), 12)
func_7060_call = mod.get_global_var('func_7060')
func_7061_call = mutated_mod.get_global_var('func_7061')
call_8614 = relay.TupleGetItem(func_7060_call(), 1)
call_8615 = relay.TupleGetItem(func_7061_call(), 1)
func_4596_call = mod.get_global_var('func_4596')
func_4600_call = mutated_mod.get_global_var('func_4600')
var_8620 = relay.var("var_8620", dtype = "float32", shape = (770,))#candidate|8620|(770,)|var|float32
call_8619 = relay.TupleGetItem(func_4596_call(relay.reshape(var_8620.astype('float32'), [5, 14, 11]), relay.reshape(var_8611.astype('bool'), [1440,]), ), 2)
call_8621 = relay.TupleGetItem(func_4600_call(relay.reshape(var_8620.astype('float32'), [5, 14, 11]), relay.reshape(var_8611.astype('bool'), [1440,]), ), 2)
func_5304_call = mod.get_global_var('func_5304')
func_5307_call = mutated_mod.get_global_var('func_5307')
const_8623 = relay.const([8.638074,3.530763,-8.365568,-1.469378,-3.044416,-7.760794,-1.122569,5.168899,0.794300,2.882526,5.921777,6.572701,-9.714117,-5.545160,8.741070,-9.872868,-9.641204,4.419396,8.010505,-5.659745,-2.081328,-5.129597,5.061958,4.562282,-9.167896,-1.954806,6.920698,2.271223,-2.863586,9.300090,2.567773,-2.047840,-6.987904,7.149813,2.320592,6.896946,-4.936081,-8.031232,9.498325,-2.264791,-8.625582,3.975378,-2.564879,-6.165251,-5.828462,0.376226,0.887789,6.238250,9.617957,5.155845,4.531578,-4.954502,-0.972028,4.342204,-6.876688,-8.939597,-0.664338,-5.167194,-2.305949,7.586221,2.706954,-9.739492,-0.300562,-9.664956,-4.852301,3.462249,-7.211696,2.668304,-9.618168,7.940741,-7.114992,-0.158106,6.915345,-5.045922,6.742732,0.184922,-0.576242,5.549408,3.726770,-2.668473,1.459741,7.725137,-2.383113,8.701509,3.243993,2.204474,-5.077500,-9.991977,7.014159,7.947547,-9.472810,5.419110,-0.306740,-2.282189,-5.204306,-9.999975,-5.631350,0.097259,-8.783086,3.007541,7.855914,-4.922599,-5.488470,-4.677070,2.099749,-0.970391,-7.475558,-1.824059,-6.620492,-4.560987,9.549006,7.312247,4.561302,-1.887106,1.208028,8.333483,1.418179,-7.539095,4.399990,6.244766,-2.205524,-7.039355,3.383551,9.846915,6.486870,-5.601807,-5.173989,-7.069838,-7.413236,-7.992623,4.340022,9.470576,7.699867,-5.699523,-2.966819,2.235044,-7.373287,7.329179,-4.115071,0.989680,-4.667383,-1.824423,0.738512,-1.508865,-5.900602,0.817337,0.511229,-1.150210,-1.788782,9.586028,-0.225658,2.362726,-0.102088,-8.129558,-1.975627,7.444225,1.210584,5.231570,-4.654247,-6.889974,-9.632179,-6.985579,-7.470275,-6.096140,-6.723790,4.254392,-1.351202,9.756525,1.470052,5.249078,5.473658,4.489278,3.449365,-8.734310,-0.688360,-9.382112,-9.329797,-2.483657,8.509226,-4.136343,-8.948663,-4.342526,-5.460239,-4.841307,3.536092,8.534401,-0.120379,6.267873,-6.117944,8.272862,-9.533967,0.904991,7.052075,-8.113939,3.245800,-2.523892,-1.499857,-2.129613,-0.421371,4.096870,6.908684,-6.097694,0.241173,9.320114,1.131228,-1.746315,-5.184074,7.799924,-6.183012,-9.727575,-3.584246,0.281886,8.057045,5.928825,-6.878168,4.445103,-7.809784,4.699987,0.092859,1.990111,-8.439171,-4.868346,9.603647,-4.636460,1.163005,0.012052,9.883562,4.003768,1.283181,-9.739684,1.609273,5.889707,3.752203,3.900571,0.883894,-2.286313,-5.415578,-0.614238,-3.901766,4.177265,0.878176,8.594800,-0.417608,2.889916,9.632864,5.550317,8.602147,-9.846333,-4.237206,5.478423,-8.188231,0.850223,-0.588779,2.984171,-0.690061,3.762713,3.829114,-2.579579,0.907085,8.526161,7.332146,0.106693,0.155044,4.974169,6.863672,5.445438,-8.311562,-5.152383,-2.339758,2.854314,3.924922,-9.746382,1.892219,-6.347898,-8.029405,-6.510808,-3.568155,-5.737669,2.963650,1.766311,-2.187381,7.003588,9.032827,-3.773526,7.842718,-8.890500,-1.029026,8.502394,9.439167,-0.716938,-9.213081,9.599323,-7.403802,-6.079426,-4.177551,-3.786798,6.276649,5.694383,4.882856,-2.459387,-4.208298,3.178419,-8.624963,-7.443289,-1.197797,1.818191,3.885310,-2.093990,8.213563,-5.740836,-0.856302,-6.274102,-9.850577,1.812749,7.191307,-5.362596,-1.858472,-5.487753,-2.925676,0.188472,8.560783,0.585524,0.476145,-9.579781,5.920230,-7.172616,2.228657,1.426755,0.650799,-3.556457,-7.624337,-8.944316,-5.532566,8.887124,6.691191,-5.228088], dtype = "float32")#candidate|8623|(336,)|const|float32
var_8624 = relay.var("var_8624", dtype = "int16", shape = (810,))#candidate|8624|(810,)|var|int16
call_8622 = relay.TupleGetItem(func_5304_call(relay.reshape(const_8623.astype('float32'), [7, 4, 12]), relay.reshape(var_8624.astype('int16'), [810,]), ), 0)
call_8625 = relay.TupleGetItem(func_5307_call(relay.reshape(const_8623.astype('float32'), [7, 4, 12]), relay.reshape(var_8624.astype('int16'), [810,]), ), 0)
output = relay.Tuple([call_8572,call_8575,var_8576,var_8577,var_8578,call_8587,var_8588,uop_8597,call_8608,var_8609,const_8610,var_8611,const_8612,call_8614,call_8619,var_8620,call_8622,const_8623,var_8624,])
output2 = relay.Tuple([call_8573,call_8579,var_8576,var_8577,var_8578,call_8589,var_8588,uop_8599,call_8613,var_8609,const_8610,var_8611,const_8612,call_8615,call_8621,var_8620,call_8625,const_8623,var_8624,])
func_8631 = relay.Function([var_8576,var_8577,var_8578,var_8588,var_8609,var_8611,var_8620,var_8624,], output)
mod['func_8631'] = func_8631
mod = relay.transform.InferType()(mod)
var_8632 = relay.var("var_8632", dtype = "uint16", shape = (6, 3))#candidate|8632|(6, 3)|var|uint16
var_8633 = relay.var("var_8633", dtype = "uint16", shape = (144,))#candidate|8633|(144,)|var|uint16
var_8634 = relay.var("var_8634", dtype = "uint32", shape = (2940,))#candidate|8634|(2940,)|var|uint32
var_8635 = relay.var("var_8635", dtype = "uint32", shape = (3840,))#candidate|8635|(3840,)|var|uint32
var_8636 = relay.var("var_8636", dtype = "float32", shape = (780,))#candidate|8636|(780,)|var|float32
var_8637 = relay.var("var_8637", dtype = "int8", shape = (1440,))#candidate|8637|(1440,)|var|int8
var_8638 = relay.var("var_8638", dtype = "float32", shape = (770,))#candidate|8638|(770,)|var|float32
var_8639 = relay.var("var_8639", dtype = "int16", shape = (810,))#candidate|8639|(810,)|var|int16
output = func_8631(var_8632,var_8633,var_8634,var_8635,var_8636,var_8637,var_8638,var_8639,)
func_8640 = relay.Function([var_8632,var_8633,var_8634,var_8635,var_8636,var_8637,var_8638,var_8639,], output)
mutated_mod['func_8640'] = func_8640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_8648 = func_5694_call()
call_8649 = func_5694_call()
var_8666 = relay.var("var_8666", dtype = "bool", shape = (4, 3, 8))#candidate|8666|(4, 3, 8)|var|bool
bop_8667 = relay.not_equal(call_8648.astype('bool'), relay.reshape(var_8666.astype('bool'), relay.shape_of(call_8648))) # shape=(4, 3, 8)
bop_8670 = relay.not_equal(call_8649.astype('bool'), relay.reshape(var_8666.astype('bool'), relay.shape_of(call_8649))) # shape=(4, 3, 8)
output = relay.Tuple([bop_8667,])
output2 = relay.Tuple([bop_8670,])
func_8693 = relay.Function([var_8666,], output)
mod['func_8693'] = func_8693
mod = relay.transform.InferType()(mod)
var_8694 = relay.var("var_8694", dtype = "bool", shape = (4, 3, 8))#candidate|8694|(4, 3, 8)|var|bool
output = func_8693(var_8694)
func_8695 = relay.Function([var_8694], output)
mutated_mod['func_8695'] = func_8695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_8705 = relay.TupleGetItem(func_6801_call(), 0)
call_8706 = relay.TupleGetItem(func_6803_call(), 0)
func_5678_call = mod.get_global_var('func_5678')
func_5683_call = mutated_mod.get_global_var('func_5683')
var_8708 = relay.var("var_8708", dtype = "int8", shape = (24, 1))#candidate|8708|(24, 1)|var|int8
const_8709 = relay.const([9,-7,-2,-5,-5,-8,-8,-8,-6,4,-2,9,5,3,7,-1,8,9,-1,3,-9,-2,-7,1,5,-3,6,9,3,-1,3,-7,10,-1,10,-6,-4,3,-9,7,4,4,-2,-9,4,3,2,8,-4,2,2,-1,8,-8,-10,4,-4,4,-9,9,3,-3,-2,8,10,9,9,10,6,6,-4,-2,7,2,-10,-3,5,-9,-5,-2,-6,8,-5,-5,-6,-8,1,7,-7,6,-4,-10,5,5,-6,-6,1,10,-2,-4,-7,-7,6,6,4,1,-3,6,-2,-9,-9,-5,-8,-4,-1,7,5,-6,-9,-4,-6,-1,-10,6,-10,-4,-9,9,3,10,-6,-4,2,-1,10,-3,2,7,5,-6,10,3,-7,9,-8,8,7,-4,-9,9,10,-8,-8,-6,8,-7,10,-10,-4,10,9,5,-7,-2,-4,6,2,8,-10,-2,-6,9,-9,-6,-7,7,2,1,-3,-6,5,-2,-9,-9,-7,-5,2,-3,-2,-5,3,6,-6,-7,-3,3,-6,-7,7,1,-10,9,2,-4,8,5,3,-9,2,5,8,5,5,10,-9,8,-1,1,6,10,-7,5,10,-1,9,-10,-6,-4,9,4,7,9,-8,3,-8,-6,-10,8,-7,4,5,-7,-1,3,-5,9,-1,-1,-9,-3,-7,-3,-1,1,-10,-6,-9,7,3,9,10,-1,-4,-10,-7,1,3,5,9,-4,10,-3,2,-10,-9,-5,7,-10,10,-6,-4,-3,5,2,5,-2,-5,-6,4,-4,-5,3,-4,-2,6,1,7,8,-5,5,-6,5,-1,-8,6,-1,10,-10,-1,-1,2,-7,-10,-10,-7,5,3,5,-10,2,-5,-9,-9,1,3,4,-6,2,-10,-10,-1,-2,-4,10,-10,-2,-7,3,-9,-3,8,6,2,9,4,1,-4,-2,8,2,6,6,-4,9,-3,6,4,5,-3,8,-4,3,-1,-4,-8,-8,2,-10,-1,2,3,-5,-3,3,-5,-3,1,6,-2,-3,-9,-7,-5,7,-5,-1,-8,-5,9,7,10,-4,6,3,2,-10,-6,-2,-1,-10,10,5,10,-9,8,4,3,-9,7,9,-7,-8,4,-8,9,-5,1,-6,-10,3,-8,5,2,10,-5,9,-8,9,-7,10,6,4,5,-10,5,-4,10,-4,-5,-2,-5,-6,-7,4,-3,1,-8,-7,-7,10,2,-4,-5,-7,-5,3,-1,3,-4,-2,-1,-6,-10,-4,4,10,7,-10,-4,-5,5,9,6,4,8,9,-10,8,10,8,7,-1,2,7,6,7,9,-7,-9,-7,8,-6,-10,8,-10,5,-4,2,-8,4,-2,-7,-10,-7,7,7,9,6,2,1,-2,-7,-5,-4,9,-8,2,1,-4,-10,2,8,3,-1,8,4,2,-8,-2,1,2,-4,9,-8,-4,3,6,-7,5,-1,-4,3,-8,-5,3,4,7,2,3,-8,8,5,3,4,-4,1,2,3,6,2,6,-9,-6,-9,-2,-8,-6,-6,-6,9,5,-9,-7,-9,-2,4,-9,-9,3,5,-2,-6,5,1,2,3,-1,6,-5,-9,-6,-5,6,-1,1,-2,9,5,-10,7,-6,9,5,5,10,8,-7,-2,-6,-1,9,4,-3,-1,-5,5,1,1,1,7,-10,-5,6,9,10,-1,-5,-4,3,-1,6,-2,-2,-2,-6,2,1,-2,-7,-1,3,8,6,-8,9,-7,-7,-9,-1,2,9,-1,5,1,6,-1,-5,-1,-2,4,-8,4,10,-6,6,8,4,-10,-5,-3,5,4,-4,5,-3,5,7,-7,-5,-2,1,-8,1,5,9,9,-1,-5,7,1,6,1,5,2,1,1,-4,-10,-7,1,1,1,4,-9,4,10,5,-3,9,2,-1,-5,-4,-10,-8,-10,-4,4,-6,8,4,10,-9,-4,10,2,1,-6,2,7,-10,2,-7,-1,-1,1,-7,5,-3,8,-4,-5,-8,9,1,-2,2,-5,10,2,-5,7,5,9,10,1,8,1,9,7,-8,8,-5,-1,-9,8,-5,5,6,9,-1,-2,-8,-6,4,4,-6,-2,-7,8,3,9,1,-9,6,-3,-10,-10,9,-3,1,5,-4,-10,9,7,6,-1,10,1,9,6,2,-6,-2,-6,-8,2,-7,5,4,9,9,-4,1,6,-3,1,-6,6,8,1,-2,-10,-7,6,-8,-1,4,-6,5,7,2,-1,7,-6,-9,2,2,-2,-6,10,5,1,-9,6,-8,-1,-3,9,-10,-4,4,10,-8,6,-3,10,-10,-7,5,-2,-8,-3,5,-10,1,-4,2,2,8,-5,-4,7,5,4,7,5,1,6,-2,-1,-4,7,-10,-7,-6,-9,7,-6,-2,-4,-6,-4,-7,-3,1,-1,10,1,8,10,10,6,-7,-2,3,-6,5,8,-2,-2,-6,8,-4,7,6,-7,7,8,8,-3,-7,3,-10,-5,-3,-7,-1,-6,3,6,3,8,1,-5,5,1,6,-4,-5,3,6,-9,-5,2,10,-1,-5,4,4,-4,-7,3,-1,4,-5,-5,6,-10,9,-3,9,-2,3,-10,-5,-8,-1,8,9,9,-10,7,-8,-9,8,-4,3,3,1,-5,-8,-1,-5,3,2,9,8,-5,4,1,-5,-3,2,6,-7,-10,-7,6,-9,-7,-2,-10,-6,-7,1,4,-5,-8,-3,8,7,-5,-8,-6,1,-7,-2,3,6,-8,-8,-4,-1,9,9,2,-9,10,-9,4,2,2,10,1,5,-2,-4,-7,-9,7,-6,-3,7,2,-2,7,-10,7,4,6,9,-2,4,-6,-8,2,3,10,-9,-7,1,-6,-2,-10,10,6,6,2,9,-5,-2,-4,-2,-8,-7,3,-10,-10,1,9,-8,3,-6,1,5,-4,-3,-4,3,8,-7,-9,-10,-9,8,2,-6,-7,-10,-8,6,-1,-2,-4,7,4,-2,2,9,3,-1,3,-2,10,9,-8,-1,4,6,-8,-1,-8,5,-7,1,-4,-8,10,7,3,-9,1,-10,3,2,-8,6,-7,5,-7,-7,9,-10,-5,-10,-1,7,-6,6,2,3,-2,-7,-1,-5,1,1,-5,-10,6,-9,6,10,5,-5,5,-9,8,5,2,-8,-2,-4,8,9,1,-4,4,-1,9,5,4,10,-4,1,-7,-9,-6,5,-7,9,-2,7,6,-4,3,-8,5,-1,4,-5,1,-9,-6,-10,-1,-1,1,-9,-5,1,-4,9,8,8,-1,5,6,-8,10,-5,6,-6,-1,3,9,6,-2,1,-4,-4,-2,9,-4,-10,5,-7,-9,-10,-9,-8,5,-2,-10,7,-3,-3,1,-3,-8,-1,-10,6,3,-2,6,-1,-8,10,-5,2,-9,3,6,4,2,-9,-4,-2,2,9,3,-1,-4,-9,-7,9,7,-7,-1,-8,-8,3,-5,-1,8,5,2,4,-6,-7,5,10,-9,6,-7,2,5,-9,10,-7,2,2,7,-1,9,5,-5,8,1,-3,10,6,-1,-6,-5,-1,-5,2,-9,5,3,3,-7,4,-3,-8,4,-8,1,8,-5,4,2,-1,10,-8,-10,-5,-10,-6,-7,7,10,-8,9,8,5,-3,-9,7,-2,4,-7,-8,-9,-3,-1,-10,6,-4,4,-1,4,-7,8,-2,-2,-4,-7,-6,-9,5,-9,-2,2,4,-6,8,-6,-2,-10,9,-1,1,-5,6,-7,-3,5,5,-1,-5,1,8,-8,-4,-5,2,-5,-5,1,-2,2,5,3,5,9,5,-3,7,-5,2,3,-7,-7,9,-6,6,-8,-5,3,9,2,-9,-8,8,7,-5,-6,-1,7,-2,-10,-10,1,1,7,-5,-3,6,3,5,6,2,-2,-6,4,-3,8,3,1,5,-4,-7,-7,8,-8,1,3,-5,-8,-8,-3,-7,4,-4,5,-5,2,-8,6,10,-1,6,-4,-2,6,-7,1,-1,5,10,-5,-1,-6,7,-8,-5,-5,6,-4,4,-8,-10,-4,-4,6,-8,-10,7,9,9,8,8,-5,-5,-1,-10,1,-10,10,-1,-9,-9,-10,-6,-10,-6,-8,-4,-9,3,-1,10,2,-4,-1,3,5,-8,6,-6,8,-7,-6,-1,-3,4,-7,3,-4,6,-3,7,10,-5,-1,5,2,-8,-4,-5,5,-8,-4,6,1,5,-2,3,8,-8,-8,-10,4,3,9,2,7,-8,4,-1,5,-8,6,7,-9,5,-8,10,-5,8,10,7,4,8,-7,-3,-5,-9,10,7,3,-9,-8,-2,3,-6,2,10,-7,3,9,8,7,-7,5,8,-7,-8,-9,8,10,7,-5,9,-9,-10,10,-4,-7,-6,4,-10,-3,8,9,-6,-9,-3,3,-8,6,-3,-8,-5,-8,7,5,7,-8,-9,-10,-5,1,-3,2,7,3,-6,8,6,-2,-10,-10,4,1,-4,2,1,-9,-8,-8,-1,-6,10,10,-10,8,-1,8,-8,-1,-3,4,-6,6,6,-8,5,-7,6,4,2,-9,-2,-10,-7,3,-4,1,1,-4,3,7,-6,6,4,1,2,10,-6,-4,-3,-2,-5,-9,-2,5,-6,5,7,-7,3,-10,7,-9,-2,5,-10,-2,-10,1,-3,9,-9,3,-8,-8,10,6,-7,10,7,-5,-4,2,-8,-8,-9,2,1,-3,-6,2,8,3,4,-9,9,-10,10,7,-4,9,-1,-1,-6,3,-7,10,-2,5,6,-7,-7,-10,-8,5,3,7,-6,-8,7,8,4,-3,1,-4,-1,6,7,-5,6,-1,5,-4,-8,-5,4,1,1,4,-2,-3,-9,-1,6,5,5,2,4,2,8,9,3,10,1,-8,-4,6,-9,-4,-2,-6,5,-8,5,2,-9,7,-10,8,3,-6,6,-4,10,1,-9,8,6,-4,6,-4,9,-9,-8,-4,-4,2,4,-8,-4,-6,-5,-8,10,9,9,3,5,-9,-10,8,5,7,-3,-6,1,1,-6,-6,-10,4,-2,-7,10,2,9,5,9,7,-6,-1,5,-4,1,-9,7,-10,10,-8,3,10,1,8,-9,1,8,-2,-4,-5,-6,-7,10,4,5,10,-1,2,8,-1,6,2,-2,8,1,-2,-10,2,6,-9,7,1,-2,1,2,8,-1,-2,5,10,5,-2,3,-6,9,4,-7,-3,7,-10,3,-8,8,-9,2,-8,-3,2,4,9,-3,9,-5,8,4,2,6,4,-10,7,-2,6,5,3,6,-5,4,-9,-4,-2,7,-10,2,8,-6,-3,-10,-4,-9,-8,-9,-3,5,-2,1,1,-8,2,2,-1,5,-7,-4,-1,9,7,-2,-1,-6,-8,-6,6,10,3,8,-2,-9,7,1,-6,7,6,-8,6,1,3,-3,-3,-7,-4,-2,7,5,-7,-1,-5,-8,8,10,-4,-8,-10,5,1,-10,8,-1,-5,10,1,5,-2,6,3,-3,-9,-1,1,2,10,9,8,-3,-4,-5,6,2,-4,-7,-6,-3,3,-6,2,8,-2,9,5,-2,-7,-8,6,-1,8,-7,-2,1,-6,10,5,-9,-3,8,10,-10,7,-10,-8,3,-10,-2,3,-10,10,-7,7,5,-4,-1,3,9,-9,-2,1,5,-8,-6,10,-1,3,7,-4,2,-3,2,4,7,2,2,-7,-5,-2,7,4,-2,8,8,10,-1,3,-3,7,-10,-9,2,-7,-2,-5,-1,-9,-7,2,10,-5,7,6,-3,-9,-2,3,-6,-1,9,9,7,3,-6,1,-7,9,-4,-5,10,2,-4,-7,7,-9,6,-8,-6,6,8,-10,-4,2,-5,-7,-2,-8,5,-9,5,-1,-7,-5,2,7,-9,-6,5,2,-6,5,-9,-6,-2,7,4,10,6,4,-7,9,-7,10,2,2,-5,6,3,8,-7,-3,-4,-2,-8,-2,9,-2,6,-8,8,-8,8,6,-6,-7,3,5,6,-10,4,-1,3,9,5,-10,9,5,4,1,8,-4,-9,-8,4,1,-10,-3,4,-4,1,-4,-4,10,-2,7,-10,-9,-9,5,-5,-3,7,-9,10,-3,-9,-1,-8,10,-3,-8,-9,-1,-5,4,-1,6,5,-10,-3,5,-10,5,-9,-9,-4,-5,-5,-1,-5,2,-4,-3,-6,-3,7,-10,-4,6,2,8,-2,10,3,8,8,3,8,10,-10,4,-1,-4,-1,-10,6,10,-5,5,-6,6,-5,-8,5,-9,-3,2,-7,-8,-9,-1,10,-2,6,5,-2,-5,-9,10,-1,3,-1,-5,-3,9,5,4,-3,-10,-4,10,7,-3,-6,-2,-3,8,-10,-4,-10,-5,-3,10,-5,-7,-7,-5,2,-1,-2,-7,8,10,-10,10,-9,5,-4,-2,-5,-8,-7,7,10,10,-10,8,2,-5,6,4,-10,9,-4,-3,-9,-3,3,-8,7,6,4,-5,-3,1,-6,5,6,10,-5,2,3,10,5,-8,7,2,-9,8,-9,-9,7,-1,-8,-4,-7,6,-2,-5,-6,3,-8,-3,-2,-8,3,6,-3,-3,-1,3,3,-7,6,4,-6,5,2,10,10,-6,7,-3,10,-1,-2,8,-2,2,6,9,-3,-5,-4,-10,5,7,8,2,5,1,-8,7,-6,9,7,6,-4,-6,8,-3,1,-4,-2,-9,2,8,-10,1,2,-10,9,10,8,2,-1,6,-6,3,9,-7,-3,-8,-8,1,-8,-10,8,10,5,10,8,-7,8,-6,-1,5,-8,7,3,-9,-10,8,10,-1,-4,8,-9,-10,-5,4,-9,-10,-4,-2,-6,10,1,-3,9,-3,-7,5,-8,-2,1,-6,7,-5,4,9,-10,3,8,2,2,-10,-8,4,10,-6,-4,-9,-10,-5,6,4,5,-7,5,-10,-5,-5,-5,-9,-5,-8,-9,3,5,-6,9,7,9,-7,-3,1,-9,-3,5,1,-8,10,-10,-7,-8,6,-2,3,4,6,-7,9,3,-2,5,8,-4,9,1,9,-8,7,7,-3,-10,-10,8,-4,-3,-1,10,10,-10,-10,-6,10,-5,5,-7,-2,-9,-5,-4,-10,-7,-3,-2,3,-1,-1,-3,10,8,-9,-6,-3,3,-2,8,2,-4,-4,-8,-6,-1,6,10,1,3,-4,-1,6,6,1,-9,-1,7,-9,2,6,4,7,-9,-1,-10,-3,-1,-5,6,-3,6,-10,-9,8,4,-5,5,2,2,-8,8,1,10,-8,-9,-3,-5,10,2,5,3,4,-2,1,10,4,3,-9,1,-9,-8,-7,-5,-9,6,-3,-4,6,3,-9,9,1,1,4,7,4,8,-2,-10,-2,-5,-5,3,-4,-1,9,8,-1,-2,-3,-8,8,-10,-9,-1,9,5,4,5,4,1,-5,7,-8,-3,-10,7,9,8,8,-10,-5,10,4,-5,3,-4,-7,-6,-10,5,10,-7,9,-6,7,7,10,9,-5,2,4,-6,-9,-5,1,-8,-4,-1,-2,-4,-4,1,8,-8,8,-1,-10,-3,-1,-7,-2,7,-1,1,-5,4,-5,3,-7,-6,-5,-7,-8,-3,3,-3,-6,-1,9,2,-6,-5,-3,6,-3,5,1,-4,-6,-8,-8,2,-3,3,-6,8,-3,-4,-3,-6,-5,6,-7,-7,-7,10,9,-9,6,4,7,5,-7,6,-1,10,-7,4,-7,7,-7,1,-10,8,-2,-9,6,-1,-2,5,-1,-9,-1,10,-5,4,-3,-8,5,2,-6,-10,-6,-5,8,-4,-5,5,8,-6,2,3,-4,2,-6,-9,-5,7,10,2,4,-4,10,6,5,-9,1,4,-4,5,1,4,-2,9,-3,-9,6,-7,-5,4,-7,8,-6,3,9,2,3,7,-7,9,-5,8,-4,-10,7,8,5,-2,-8], dtype = "uint32")#candidate|8709|(2940,)|const|uint32
const_8710 = relay.const([4.845684,-7.976415,-0.835358,7.127849,-0.751974,1.427338,3.805157,-5.929351,-4.502933,-3.875425,-5.284082,-4.466656,6.064058,2.598029,-5.084588,-8.926615,-9.776669,1.054156,6.294423,4.141762,-3.307297,-5.805638,6.878160,-4.106004,-1.304663,-0.276588,4.330591,-8.602560,-9.998352,3.168018,1.037000,-3.524156,-9.156848,7.704521,-5.762607,-7.964642,7.530341,2.974221,3.107135,-5.565384,-6.210904,9.165582,1.226691,-5.938015,9.979315,6.356450,0.549521,2.047597,0.139797,0.604530,8.389872,-1.383558,-6.875488,7.593274,2.894757,7.594467,4.955880,-0.564634,-3.307996,-7.158897,-3.887802,2.081437,5.659618,-7.151590,3.657097,-1.008478,3.659859,3.274401,-3.697564,5.580261,-1.763414,1.852457,0.065048,-3.630351,-6.752729,-5.253244,-9.243226,-4.630183,-9.314871,8.353609,-9.187059,-5.911853,-9.719214,5.058158,-2.151842,8.803270,-4.681755,-4.338053,-1.340872,7.853146,6.254430,3.303708,5.545604,0.787004,-1.090623,8.813197,8.827640,-0.217046,6.544678,-8.757971,4.525014,-8.020590,0.299337,8.385052,-3.380572,-1.649199,-3.141287,1.601900,-2.107185,2.816452,6.819839,0.531746,-3.514694,6.677521,-8.931370,-6.456885,0.137768,2.220142,8.355062,-2.991077,4.628631,-7.827683,-1.499961,-8.268816,-0.783653,-6.748217,-6.503059,-3.285710,7.593641,8.948266,-8.356540,8.867432,-2.982453,-6.572337,-1.219984,3.700154,4.882099,9.879298,-9.715862,-4.885695,-4.966789,-8.993431,1.854752,6.766619,-5.192146,-6.245844,-9.483650,-0.293886,-0.930066,3.396382,4.574709,-9.328981,-0.373324,1.354140,8.618821,2.342038,-5.486626,8.162440,1.629847,-6.799488,7.418412,-4.400766,8.177209,-1.539862,2.820988,-6.717884,9.160460,7.729250,-1.003050,-8.784644,5.375272,8.262765,7.457024,3.923774,-5.204378,2.963335,-2.576058,5.128182,-2.146051,5.224998,0.079634,8.549608,-8.233899,-8.429130,1.668580,5.114852,7.304807,-9.446486,1.736542,3.486956,0.290383,8.590827,-1.527948,2.288331,-6.006147,-9.635957,-7.474187,-2.777348,-4.329889,-8.141823,8.382725,-9.383686,-6.659461,-1.835668,-0.936683,5.085485,-7.233966,1.282989,-2.280076,5.148979,0.945497,-2.136364,1.045717,1.137412,-1.036193,7.874195,6.932035,-4.116180,-8.280711,1.909589,-2.038358,9.225060,8.341632,2.256295,3.045303,-7.878319,-5.086349,7.042876,-4.578977,8.617635,-0.708102,-5.240089,3.419442,3.103599,9.387999,-5.045251,-4.576092,-6.857699,2.463918,1.676002,1.184483,4.755167,-4.385064,6.806063,7.706535,6.213654,-6.545552,3.952025,-8.019701,3.823935,7.748181,1.925640,9.271915,3.410704,2.842403,-8.317655,4.357921,-4.419015,-6.741628,-9.274053,1.942374,1.261480,7.817656,5.352011,1.493690,-8.763355,-5.722259,-5.307018,6.020698,-9.278401,-9.375246,8.339218,1.413207,-5.545640,-6.308564,6.928768,-7.924424,7.242712,-9.131923,-1.601742,4.371843,-4.200753,-2.829237,-4.060950,2.822220,4.254423,4.378093,6.178164,-6.952751,-3.177479,-6.339618,-7.132657,-7.218571,-4.787898,-1.893261,-4.449389,1.937641,-9.135031,-9.342630,-3.881108,6.158102,5.962890,-6.173003,2.138944,-7.956143,6.991033,-4.442541,-8.981108,7.022710,1.733690,2.577137,-0.283924,-0.299793,-9.776740,0.456880,-9.678239,-6.343544,9.211037,-4.859040,-3.307549,-4.183647,0.827652,4.634241,1.037630,5.119859,5.400330,-5.405487,2.098501,-3.300357,2.236559,-4.553448,-8.473345,-3.174953,-1.721560,4.847039,1.410684,-0.304773,-1.457547,-3.843994,8.196942,-0.651449,-9.547440,-9.202160,9.780734,-4.583269,-2.317407,1.356429,0.282065,-0.368711,-8.269954,-0.407765,6.506089,1.172441,4.936036,6.522602,1.949177,2.534477,-8.518634,8.730066,-7.857745,7.266422,7.560809,1.603283,-8.634062,-1.980785,2.934282,-2.277871,8.907531,-3.442489,-5.499300,5.396481,0.503692,2.051112,-8.061624,-6.659614,-2.959128,4.784612,-0.537661,9.616927,-8.570119,4.554850,-7.325672,-7.075628,1.208320,-9.468297,-7.661064,0.362368,-9.674142,-9.178915,-8.664149,8.104767,-5.911932,-1.392258,-5.080274,1.578393,7.676743,-5.961696,-3.208540,2.767167,-7.435893,4.057740,-4.760587,-7.280231,-8.481533,9.466832,7.832470,4.982169,-1.412909,-0.974227,8.299731,8.676249,5.133803,9.814416,7.608341,7.556566,-4.904628,-5.560135,-5.771667,-8.408943,9.571874,0.074392,-1.552894,-6.476235,-2.581373,1.305762,-4.344853,-5.782619,2.745527,-8.379498,-6.394754,-5.221067,-2.856998,9.017603,8.811585,3.335005,-6.680692,-6.685399,-5.589022,2.209606,3.109722,-3.287617,5.214964,1.619835,-1.630096,0.704614,-0.636963,-6.080593,6.324354,0.165155,7.524725,4.716076,6.767329,-8.293577,5.396082,-0.517511,3.171562,-9.600590,2.208395,6.101673,3.685033,-6.225470,-4.521796,6.753582,2.279047,-6.800587,1.598324,-6.333804,1.260252,-5.125188,-9.886453,-4.287501,-1.532842,-9.258514,-7.301109,2.432853,8.824956,2.090713,-4.557572,6.565485,9.475140,-7.812401,0.082306,0.970393,-3.276184,4.959402,-7.553322,-2.229080,6.299462,-5.739143,-2.988469,2.002546,-0.545660,2.953605,9.064705,-9.250097,-2.861796,-3.764609,3.672267,0.873759,4.656047,-1.845371,-0.598238,-4.319735,4.160802,8.080071,5.849840,3.178777,-1.454188,-8.586250,9.968788,-3.288929,-2.962089,-7.363485,4.305711,8.638755,-2.677433,-8.938582,-3.371801,-0.846414,-8.879489,2.121508,6.277220,0.519782,0.283005,6.921888,-8.288871,-6.096039,-6.298194,-2.322426,-0.247016,4.700369,7.043598,3.624783,-4.089206,7.454614,-5.854283,-3.411774,-1.708678,7.788322,-4.034366,-4.033569,-0.936076,8.837442,0.615533,-5.167168,8.514812], dtype = "float64")#candidate|8710|(546,)|const|float64
call_8707 = relay.TupleGetItem(func_5678_call(relay.reshape(var_8708.astype('int8'), [24,]), relay.reshape(const_8709.astype('uint32'), [2940,]), relay.reshape(const_8710.astype('float64'), [1, 546]), ), 4)
call_8711 = relay.TupleGetItem(func_5683_call(relay.reshape(var_8708.astype('int8'), [24,]), relay.reshape(const_8709.astype('uint32'), [2940,]), relay.reshape(const_8710.astype('float64'), [1, 546]), ), 4)
output = relay.Tuple([call_8705,call_8707,var_8708,const_8709,const_8710,])
output2 = relay.Tuple([call_8706,call_8711,var_8708,const_8709,const_8710,])
func_8714 = relay.Function([var_8708,], output)
mod['func_8714'] = func_8714
mod = relay.transform.InferType()(mod)
mutated_mod['func_8714'] = func_8714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8715 = relay.var("var_8715", dtype = "int8", shape = (24, 1))#candidate|8715|(24, 1)|var|int8
func_8714_call = mutated_mod.get_global_var('func_8714')
call_8716 = func_8714_call(var_8715)
output = call_8716
func_8717 = relay.Function([var_8715], output)
mutated_mod['func_8717'] = func_8717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
call_8726 = relay.TupleGetItem(func_6801_call(), 0)
call_8727 = relay.TupleGetItem(func_6803_call(), 0)
uop_8734 = relay.acos(call_8726.astype('float64')) # shape=(4, 3, 8)
uop_8736 = relay.acos(call_8727.astype('float64')) # shape=(4, 3, 8)
output = uop_8734
output2 = uop_8736
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

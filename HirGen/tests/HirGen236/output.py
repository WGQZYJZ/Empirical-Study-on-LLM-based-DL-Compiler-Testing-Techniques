import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_0 = relay.var("var_0", dtype = "float64", shape = (2, 3, 5))#candidate|0|(2, 3, 5)|var|float64
uop_1 = relay.asinh(var_0.astype('float64')) # shape=(2, 3, 5)
output = relay.Tuple([uop_1,])
output2 = relay.Tuple([uop_1,])
func_3 = relay.Function([var_0,], output)
mod['func_3'] = func_3
mod = relay.transform.InferType()(mod)
var_4 = relay.var("var_4", dtype = "float64", shape = (2, 3, 5))#candidate|4|(2, 3, 5)|var|float64
output = func_3(var_4)
func_5 = relay.Function([var_4], output)
mutated_mod['func_5'] = func_5
mutated_mod = relay.transform.InferType()(mutated_mod)
var_105 = relay.var("var_105", dtype = "float32", shape = (1, 1, 1))#candidate|105|(1, 1, 1)|var|float32
uop_106 = relay.sqrt(var_105.astype('float32')) # shape=(1, 1, 1)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
var_112 = relay.var("var_112", dtype = "float64", shape = (10, 3))#candidate|112|(10, 3)|var|float64
call_111 = relay.TupleGetItem(func_3_call(relay.reshape(var_112.astype('float64'), [2, 3, 5])), 0)
call_113 = relay.TupleGetItem(func_5_call(relay.reshape(var_112.astype('float64'), [2, 3, 5])), 0)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
call_116 = relay.TupleGetItem(func_3_call(relay.reshape(call_111.astype('float64'), [2, 3, 5])), 0)
call_117 = relay.TupleGetItem(func_5_call(relay.reshape(call_111.astype('float64'), [2, 3, 5])), 0)
var_122 = relay.var("var_122", dtype = "float32", shape = (8, 5, 16))#candidate|122|(8, 5, 16)|var|float32
bop_123 = relay.maximum(uop_106.astype('float32'), var_122.astype('float32')) # shape=(8, 5, 16)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
call_127 = relay.TupleGetItem(func_3_call(relay.reshape(call_111.astype('float64'), [2, 3, 5])), 0)
call_128 = relay.TupleGetItem(func_5_call(relay.reshape(call_111.astype('float64'), [2, 3, 5])), 0)
bop_138 = relay.bitwise_xor(var_112.astype('int16'), uop_106.astype('int16')) # shape=(1, 10, 3)
output = relay.Tuple([call_111,call_116,bop_123,call_127,bop_138,])
output2 = relay.Tuple([call_113,call_117,bop_123,call_128,bop_138,])
func_141 = relay.Function([var_105,var_112,var_122,], output)
mod['func_141'] = func_141
mod = relay.transform.InferType()(mod)
var_142 = relay.var("var_142", dtype = "float32", shape = (1, 1, 1))#candidate|142|(1, 1, 1)|var|float32
var_143 = relay.var("var_143", dtype = "float64", shape = (10, 3))#candidate|143|(10, 3)|var|float64
var_144 = relay.var("var_144", dtype = "float32", shape = (8, 5, 16))#candidate|144|(8, 5, 16)|var|float32
output = func_141(var_142,var_143,var_144,)
func_145 = relay.Function([var_142,var_143,var_144,], output)
mutated_mod['func_145'] = func_145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_150 = relay.var("var_150", dtype = "uint16", shape = (16, 15, 15))#candidate|150|(16, 15, 15)|var|uint16
var_151 = relay.var("var_151", dtype = "uint16", shape = (16, 15, 15))#candidate|151|(16, 15, 15)|var|uint16
bop_152 = relay.equal(var_150.astype('bool'), relay.reshape(var_151.astype('bool'), relay.shape_of(var_150))) # shape=(16, 15, 15)
uop_156 = relay.atanh(var_151.astype('float64')) # shape=(16, 15, 15)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
const_160 = relay.const([[3.241558,-6.016339,-4.432357,6.709488,-4.844248,9.264853],[3.628777,-2.240873,1.694916,-1.164244,1.636882,-8.167720],[1.452434,4.678805,3.431487,-9.394181,7.978691,-2.354025],[4.058802,-0.377561,4.201854,0.361105,-2.975767,7.509146],[-0.583211,-0.031049,3.677799,-6.655762,8.692523,-2.583741]], dtype = "float64")#candidate|160|(5, 6)|const|float64
call_159 = relay.TupleGetItem(func_3_call(relay.reshape(const_160.astype('float64'), [2, 3, 5])), 0)
call_161 = relay.TupleGetItem(func_5_call(relay.reshape(const_160.astype('float64'), [2, 3, 5])), 0)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
call_162 = relay.TupleGetItem(func_3_call(relay.reshape(call_159.astype('float64'), [2, 3, 5])), 0)
call_163 = relay.TupleGetItem(func_5_call(relay.reshape(call_159.astype('float64'), [2, 3, 5])), 0)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
call_175 = relay.TupleGetItem(func_3_call(relay.reshape(call_159.astype('float64'), [2, 3, 5])), 0)
call_176 = relay.TupleGetItem(func_5_call(relay.reshape(call_159.astype('float64'), [2, 3, 5])), 0)
output = relay.Tuple([bop_152,uop_156,call_159,const_160,call_162,call_175,])
output2 = relay.Tuple([bop_152,uop_156,call_161,const_160,call_163,call_176,])
func_177 = relay.Function([var_150,var_151,], output)
mod['func_177'] = func_177
mod = relay.transform.InferType()(mod)
mutated_mod['func_177'] = func_177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_177_call = mutated_mod.get_global_var('func_177')
var_179 = relay.var("var_179", dtype = "uint16", shape = (16, 15, 15))#candidate|179|(16, 15, 15)|var|uint16
var_180 = relay.var("var_180", dtype = "uint16", shape = (16, 15, 15))#candidate|180|(16, 15, 15)|var|uint16
call_178 = func_177_call(var_179,var_180,)
output = call_178
func_181 = relay.Function([var_179,var_180,], output)
mutated_mod['func_181'] = func_181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_642 = relay.var("var_642", dtype = "uint32", shape = ())#candidate|642|()|var|uint32
var_643 = relay.var("var_643", dtype = "uint32", shape = (9, 8, 3))#candidate|643|(9, 8, 3)|var|uint32
bop_644 = relay.bitwise_and(var_642.astype('uint32'), var_643.astype('uint32')) # shape=(9, 8, 3)
func_177_call = mod.get_global_var('func_177')
func_181_call = mutated_mod.get_global_var('func_181')
const_648 = relay.const([5,3,-2,4,2,1,-3,-4,4,-10,9,1,-2,-1,8,-1,-9,-2,9,-3,1,-2,9,-5,2,-9,-1,-6,-9,-5,7,9,-10,-9,4,-3,5,1,-1,-8,4,-3,-8,-9,10,-1,9,4,-10,2,4,10,1,3,10,5,9,-10,-9,-1,2,-5,-3,-2,-2,6,2,-5,-9,-2,-10,-4,7,5,2,6,-9,7,-1,-4,5,-7,7,-7,10,7,10,-10,-7,4,2,-3,2,2,1,4,-5,-3,5,-9,1,7,-9,-10,-2,8,-4,-5,-3,8,3,7,5,10,-10,-6,-9,6,-10,6,9,-7,5,7,-1,9,9,5,8,5,-6,-2,-6,3,-3,9,3,4,10,-5,8,-8,-1,-2,-8,-6,-10,9,7,1,1,3,-7,-1,8,-1,-9,3,2,9,-2,4,5,7,5,1,9,-9,1,-7,-7,5,-7,-6,-6,9,-1,-10,-8,6,7,1,-1,4,2,1,10,-5,-8,8,-7,-2,1,5,-10,-5,10,5,-8,-5,10,2,-4,7,-10,-6,3,5,1,-3,3,-10,-6,8,3,4,9,-3,3,-5,-4,-9,-8,-1,8,-3,-6,6,7,-5,7,-4,-7,9,9,-2,2,10,-10,10,8,9,-6,3,-8,6,10,-2,-8,-7,-3,-2,2,7,-4,10,-10,-4,-5,-10,7,-8,9,-4,-1,4,1,8,-7,-7,-2,4,7,8,7,5,-5,3,-5,1,-7,9,-2,-1,-4,1,-7,-7,3,6,-3,-5,4,-2,-2,-4,-9,-7,1,-9,6,2,5,8,7,7,3,-10,-8,7,-7,-1,7,7,-5,5,-8,-5,-8,-10,-6,-5,-1,-7,7,-2,-8,-1,8,3,6,-7,6,-9,4,7,8,-1,5,1,4,6,-4,-7,7,-8,-9,-9,-6,7,-8,1,4,-9,10,3,-1,7,8,-10,3,7,-2,7,5,-9,8,-10,-4,3,7,9,5,-3,-10,-7,10,5,10,-9,7,7,10,8,-4,-7,9,9,1,-8,-3,-4,-10,-5,2,-5,-4,4,10,7,5,5,9,9,-5,9,-3,-3,1,-3,-3,-3,3,-8,-9,8,-10,-9,6,9,8,-1,2,-4,-3,-7,9,1,5,-6,-6,-10,7,5,1,7,1,-10,4,-7,5,1,-4,-6,4,5,8,6,7,1,3,-7,7,-9,-3,8,-10,10,1,-3,1,5,-5,5,2,10,-5,2,-6,5,-9,7,-1,-3,4,9,6,-5,7,-3,-5,4,3,3,9,9,8,5,-3,-6,-6,4,-9,3,8,-4,-10,-4,4,-10,-3,1,5,3,-6,-6,-3,2,-9,9,10,2,-10,3,-2,-7,4,-8,-3,6,1,-2,4,8,9,-1,-9,-1,9,-4,-6,8,10,8,1,3,-10,6,-8,-7,2,-8,-3,1,-2,5,-8,10,2,-1,6,3,-10,-7,-5,-7,-2,-7,3,-9,5,-5,-8,2,4,1,9,3,-4,6,-5,-6,8,-4,-5,6,-6,4,-5,-1,8,-9,5,6,2,-1,-7,-6,4,5,-2,7,3,9,8,9,2,-4,-7,10,-2,-8,10,3,-5,-1,-1,-6,-10,4,-7,-3,-10,7,7,9,-8,8,3,10,-2,-7,-9,-1,10,-8,-10,-5,10,-6,-9,8,-1,5,-10,4,-6,-6,7,-6,3,-3,9,-3,-2,-5,5,-10,10,2,2,1,-10,5,-4,-2,6,-2,-5,-3,-4,-10,4,5,7,5,5,7,6,-3,-2,-9,-10,5,-6,2,9,-6,4,-8,-1,10,2,1,7,8,9,-10,-8,6,-5,3,2,6,3,7,-10,1,-2,2,8,-3,-7,10,9,-1,-6,-6,-6,-4,-10,-6,-6,4,3,9,6,-10,6,2,6,8,10,10,-10,-8,3,-5,-2,7,5,-7,-10,7,7,-9,-5,-4,-3,-2,9,5,5,-9,9,2,-3,-8,-8,-9,4,-9,-7,3,-9,4,6,-8,-1,10,6,-7,-3,-4,-10,7,10,-3,2,8,-3,-9,-6,-10,7,-9,3,2,3,-8,-8,8,-2,-7,-9,8,-9,-10,6,-2,-1,-6,8,-2,-3,-3,5,10,-2,-6,4,-4,-10,8,6,9,-4,4,4,-3,6,9,-9,3,-8,4,-2,6,3,-10,-5,-10,5,-3,2,7,3,-1,6,6,2,7,8,-8,7,-4,6,-3,8,9,3,-7,-1,-1,-2,-3,8,-10,1,-9,-5,-3,7,-3,4,-4,-9,7,9,9,6,-8,1,-3,8,-3,7,8,-3,-8,5,6,-4,6,-1,-9,-6,-3,6,9,8,-9,-9,-6,7,1,-9,-10,10,-10,-2,9,-3,4,8,5,7,-8,10,9,1,3,-7,-5,-6,9,2,-7,2,-6,7,6,-5,2,-10,5,3,3,1,-8,-3,-7,8,-1,5,3,-1,10,3,3,5,7,8,-9,-8,-5,5,-7,6,-3,9,5,-5,8,-8,-1,1,-2,-10,9,9,10,-8,7,6,4,-6,-5,-5,8,6,-8,-1,-7,1,-8,9,-4,-4,-10,-3,-6,-5,-9,-6,6,10,8,-4,2,-2,-8,8,-10,5,3,-6,4,-1,-4,3,10,3,5,-4,5,-7,9,-6,-6,-8,-6,1,8,6,1,-3,3,1,-7,4,3,6,-5,-2,3,3,6,1,5,7,5,9,10,-5,-6,-1,-10,-2,1,-9,4,4,-7,-6,-10,-10,-5,-4,-2,-3,10,9,3,9,5,-6,2,-1,-5,-1,1,10,4,-2,3,-5,9,4,-7,-4,1,-5,2,-1,-4,1,-6,1,5,8,-7,2,9,8,7,10,3,-10,-1,9,-3,-1,1,1,-5,7,-2,-10,5,6,-1,1,-2,-9,9,-10,-8,1,5,9,-3,-4,5,5,-1,3,1,-5,2,8,2,6,-1,1,-1,7,-7,8,-2,-4,-7,-6,1,-1,-5,-6,9,9,1,7,2,-7,-5,-3,-9,2,3,6,1,-7,-8,-5,7,8,-4,1,1,5,2,-2,4,-10,-6,-9,4,3,-10,-1,-2,4,-6,-2,-10,10,4,6,-10,2,-3,-2,10,-10,-4,5,2,4,4,-2,4,8,-7,-5,-1,2,-2,10,10,10,3,-3,-7,-2,4,5,9,5,8,-3,-7,-4,9,-8,-5,4,8,-2,4,-3,-9,6,4,2,-9,2,1,-6,-9,1,7,-2,5,-7,10,-7,10,5,-5,5,-3,4,2,-4,6,-7,-1,5,6,4,2,5,7,4,-6,-9,-8,2,-3,-3,4,-10,-2,10,7,-4,-7,10,8,9,-5,-4,9,4,-4,1,-8,2,5,10,8,-10,-2,1,6,-3,-8,5,4,-1,8,-6,-2,8,2,1,1,-7,4,4,-9,3,3,7,1,8,10,8,6,-3,-6,-8,-6,2,2,1,3,9,4,-5,-3,-4,9,-9,10,1,6,2,6,-1,-8,-10,-8,8,4,-9,-6,-4,-7,-10,-2,-10,2,-10,6,7,-6,6,7,-8,-5,9,-9,6,5,2,9,-6,4,9,9,-3,-4,-1,-10,3,-3,7,-5,-10,1,8,2,10,1,-3,9,7,4,4,4,-9,2,-1,-3,7,-10,3,-10,9,6,4,-9,-9,-7,-7,2,8,-4,-1,9,-10,-7,-3,9,10,4,-9,5,6,-2,-2,8,8,-10,-8,9,10,-2,2,-4,7,6,-3,-5,-2,-3,-1,6,-3,-6,-5,-1,-10,-7,4,-5,-1,6,-2,4,-8,-8,-10,-8,-1,5,9,1,9,-2,-9,-4,9,-6,-1,-5,-9,-9,9,1,-2,-4,-2,-2,2,4,10,4,7,10,-2,8,10,-8,7,-9,-8,1,7,-1,-5,4,2,-5,-8,7,-2,1,6,-10,-1,-1,-1,8,-4,-1,-5,-6,-1,-6,-8,10,1,3,-1,8,2,-10,2,3,1,6,-6,-5,-5,-9,5,6,-9,1,2,1,-1,-6,-2,-8,2,-9,8,9,-4,-10,-8,-4,3,-6,-7,8,-1,-10,5,6,-3,10,-10,7,-7,-4,3,-1,-5,3,5,9,-8,-9,-6,2,1,-3,1,6,6,5,9,-6,-3,6,10,4,-2,-1,-7,2,-5,10,4,5,7,9,-6,-2,-6,6,4,6,-2,-8,9,4,2,7,-9,6,-2,6,4,6,-6,7,-4,-8,7,-3,4,10,3,-4,2,2,6,4,6,9,-4,-2,7,-5,5,-3,-7,-7,-2,5,-10,10,5,-6,-3,2,9,-6,-3,-3,8,9,10,-8,-6,8,1,2,1,-6,-2,2,2,8,-8,6,-6,1,-3,-8,-3,-7,-6,8,-8,4,3,-1,-5,-10,9,-10,3,9,-2,6,-5,10,5,-1,-4,-3,2,-2,3,3,-10,-7,6,-10,4,4,9,5,3,7,10,4,5,10,-10,2,-5,2,4,2,7,1,1,2,-1,-1,10,-4,1,-7,-8,10,7,-7,-5,-2,6,-10,9,-10,8,1,5,5,1,9,-10,-3,3,9,-10,2,-4,10,2,-4,-1,10,-2,4,-8,1,3,6,-5,-6,6,10,8,-5,-1,-1,-6,10,10,9,8,8,5,9,-1,-4,3,-6,5,-1,10,1,-7,-4,-5,-4,1,6,8,-6,2,-3,-8,-6,-2,-1,1,10,3,4,7,2,-2,5,-6,6,-3,-3,-1,3,-5,10,8,-3,-6,-8,-7,-10,-1,-8,6,-4,-4,-9,5,-8,10,-6,10,7,8,-6,8,-3,-10,7,-4,4,-8,-3,-9,-3,1,-5,-1,-6,10,6,-9,-6,-2,5,-3,-6,-6,-6,-1,5,-10,-4,5,-10,1,2,6,1,10,-4,6,6,8,-8,10,-3,-4,-1,-5,3,-8,-8,-2,10,6,4,3,-6,9,2,-7,-2,-9,1,6,2,8,8,-10,9,2,7,-3,-8,7,4,2,7,10,7,-2,2,10,10,-6,-5,-4,8,5,10,6,8,-3,-1,-2,1,-7,8,10,-7,-8,-7,-5,2,10,4,9,6,-6,4,-5,-6,5,10,-1,-4,-9,5,-5,-4,10,-5,-9,-10,-9,-4,9,-7,-1,2,3,-3,6,-6,5,-9,9,4,4,2,-6,8,-6,10,3,1,9,-8,-2,-9,6,1,-2,3,7,-9,-2,10,3,5,-3,2,10,6,-6,-8,3,-10,-2,-10,8,4,6,10,-4,-7,-3,1,-1,-5,4,-3,-1,-1,-6,6,10,-6,5,-8,-10,8,-6,-7,5,-7,-5,5,1,-3,-7,-1,-10,-5,-2,4,10,7,10,-4,-8,-4,-1,-1,5,9,2,10,6,4,10,2,-1,-5,-3,-8,2,-3,2,-3,-5,-10,-4,-8,-6,8,2,6,-9,4,2,2,-3,4,9,2,-2,1,-3,-8,-3,2,8,-1,-9,-10,7,4,7,7,7,-9,2,-9,-1,3,-3,3,3,10,-9,4,10,-7,-7,-4,2,5,5,10,-1,2,-7,7,7,3,-6,1,4,7,-10,6,-4,9,-7,5,-3,-1,-2,-2,6,6,-10,-1,6,-6,9,-10,6,-2,10,10,4,6,10,6,3,9,10,-10,8,-3,-1,-1,6,-8,1,-2,9,-3,-5,-6,-3,-4,7,-7,1,3,5,-6,5,7,-4,-3,8,4,4,-4,7,10,-1,10,-9,1,-8,6,1,-1,4,-7,-7,8,3,8,7,5,-5,9,1,-9,-6,-2,10,-3,-7,-9,-3,8,8,-7,4,-2,-8,-4,-2,8,1,5,3,-8,-10,5,-3,-1,-8,5,-10,-2,1,-9,-10,8,-7,3,-5,-2,-9,10,9,4,-10,1,9,2,9,10,10,-3,5,9,-8,-4,-10,-10,4,8,2,-5,3,10,9,-3,9,6,-1,-3,7,-5,-10,8,6,1,7,2,3,4,-3,-3,-3,8,7,3,9,-3,-3,-4,-10,9,-2,9,-3,9,10,-10,-2,-8,-10,-5,9,7,-10,10,-7,-7,-2,-4,9,-2,-7,3,1,-10,-2,-9,2,2,-8,-2,-5,-1,5,-3,1,5,-10,-7,2,3,2,-7,-9,-10,3,-1,3,5,-9,4,6,6,-10,8,-2,-5,4,-3,-3,9,5,4,1,-5,8,8,9,-7,-1,-10,-5,-9,9,1,3,5,9,5,9,-8,-7,8,-4,-6,9,8,-1,6,-7,9,8,-7,5,4,-1,-8,3,-6,-10,-2,6,-6,4,-8,-8,2,-3,2,-10,10,1,10,4,10,8,-5,-1,3,3,-10,-8,-7,-9,9,-5,1,-8,9,6,-8,-3,-1,5,4,7,9,4,10,-6,5,9,7,-6,1,-8,-8,-5,-9,-7,8,-5,-3,4,-4,-10,2,-6,9,7,-6,1,8,-7,6,-10,-9,-3,5,4,10,2,-5,10,10,6,-2,2,-4,-7,-2,-5,3,3,-5,-1,3,6,-10,4,4,6,10,8,-6,4,-3,8,7,7,-6,-9,-2,7,-3,-1,-2,5,-4,5,7,7,10,-7,5,-1,2,2,-8,5,-3,-8,-5,8,-3,1,-2,-1,4,-9,2,3,-3,6,-5,3,-9,-2,4,-4,-3,-9,3,-9,-8,9,-10,3,-7,-7,2,-2,-10,3,-6,-1,4,-6,-7,-6,-5,4,7,-1,6,9,-5,-9,5,9,1,-10,9,3,-3,3,-4,-3,4,-5,1,10,-3,3,3,9,3,10,-7,7,2,8,-9,-6,5,5,5,4,-4,-8,-10,-10,8,2,-3,-7,-1,10,8,-4,9,-10,5,-4,2,8,9,-2,10,-4,5,7,-8,7,-4,10,-10,-8,8,-6,4,-10,-3,-1,6,-3,9,-8,-6,-5,-6,4,7,1,-5,-6,10,-3,-8,-4,-2,-7,9,-9,10,5,-9,2,-2,3,-9,-8,5,-1,-8,7,-6,-4,-10,9,-5,6,5,1,-10,-5,-3,7,6,1,7,-5,-4,7,2,-4,2,2,-7,-7,9,-5,4,-2,-3,6,3,-2,-2,1,-7,-10,6,-8,-7,1,6,-2,-9,3,-9,4,10,-1,7,4,-8,2,-8,-6,-5,3,-2,-2,-1,-6,1,4,-6,-4,8,6,4,-7,-10,9,9,-5,-9,3,1,2,-9,-5,-3,5,-9,-7,-9,-5,-7,-4,-10,-9,-9,1,-4,-4,-9,-6,-8,-4,-4,-9,-5,-3,3,-1,8,2,-4,7,-5,-1,-2,7,-9,-8,-1,-7,-3,9,10,9,-1,7,-5,3,7,-4,-10,10,1,-4,7,1,4,8,-1,3,-1,9,-7,3,6,-5,-10,8,5,6,-5,-3,-6,-4,1,10,10,-5,-4,4,-10,8,6,-1,-10,-4,-3,-4,2,-7,5,-3,7,-3,10,10,-6,10,-6,6,8,-3,-9,-10,-4,3,4,-6,8,1,9,-8,2,9,-8,6,-5,9,-5,-6,-7,8,-5,-4,6,-10,9,-1,7,10,7,3,4,-7,-2,6,9,1,-2,6,-10,-2,6,9,5,9,5,3,4,6,2,5,10,5,1,-10,10,10,-7,-1,8,2,2,3,-5,3,-3,-9,6,-2,9,-8,4,-7,8,-3,8,2,-3,9,3,5,4,-8,-2,-7,-2,10,-4,-7,6,9,-5,7,5,6,-10,4,9,-4,10,-9,-6,-8,-9,3,5,1,-2,-8,6,4,6,-10,8,5,-5,2,-5,-2,-5,2,-8,2,5,8,5,-7,-10,8,-3,5,7,-1,-8,-9,-9,-5,-7,-6,8,-2,-6,3,-8,-1,4,-8,5,-3,4,8,-6,8,-1,-8,8,1,10,9,7,-8,-8,-1,-8,8,10,-5,2,-2,10,3,1,-4,-1,9,-3,-10,5,-5,-8,7,10,6,7,-6,-9,9,-4,1,7,3,6,2,5,-6,-10,-4,-5,4,-10,3,1,9,4,-1,7,1,-9,5,-10,-8,-4,-5,-3,-4,-1,-4,8,6,-3,-5,10,6,-8,-3,3,-1,6,-7,4,1,8,-6,9,8,-10,4,8,-1,-2,7,8,2,3,-2,-3,-2,8,-7,1,-1,-10,-3,5,-7,8,2,-3,9,-6,-4,-4,9,-6,3,4,10,-6,-4,-5,-8,8,-9,4,8,-9,-8,1,-8,-6,6,-2,-7,9,1,-4,-7,1,-5,1,5,-6,-4,-2,5,1,9,-8,-6,-10,1,8,-8,3,1,7,-6,1,-1,2,1,7,-9,-8,2,-3,-2,10,-7,-1,6,6,-10,-2,10,-7,7,2,-1,-2,8,7,-4,10,-9,-2,9,-9,-7,-2,-2,7,-2,-7,9,5,5,-5,-8,-2,6,-4,-6,-5,-3,-9,5,6,4,2,3,9,9,8,-9,-4,6,1,2,-2,-5,10,6,-9,9,2,-7,1,6,-3,2,1,7,10,10,-4,5,-4,8,-1,-3,9,5,7,-1,-6,10,-1,-1,-8,-2,-5,4,8,-1,9,4,-3,9,-10,-10,3,6,-1,-2,-8,-1,3,-10,-9,10,4,-7,-2,-9,-9,1,-3,6,5,-10,4,6,9,8,9,-6,-3,2,-1,8,-1,4,5,7,9,3,-1,3,-6,-5,-1,10,6,-7,-4,-9,-5,1,10,-2,-5,2,-5,-5,-6,-8,3,-8,1,-6,-2,3,5,-7,-2,-5,5,5,2,1,-10,6,-6,-10,4,3,10,-3,-10,1,-1,-2,-4,6,-7,-8,7,-10,-10,1,8,-10,-10,7,-7,-3,-5,-7,-2,-8,2,-5,2,4,-6,6,1,-4,2,2,-10,-10,-9,-7,-3,-9,-1,-6,10,6,6,-9,9,7,-7,-3,-3,-5,1,5,-6,-9,-1,-1,6,6,-9,-7,10,-2,-3,5,9,2,9,3,4,-4,10,5,-3,6,-5,2,8,-4,8,-1,-9,-6,10,6,5,10,-5,9,-5,-2,9,8,6,10,-1,-1,-4,1,-8,10,6,9,5,1,-5,10,7,-3,2,-8,-4,5,6,2,2,-7,9,2,-4,-4,8,-2,4,9,-1,-10,4,3,-3,3,-8,-4,6,1,-10,6,-10,4,-6,-1,8,1,9,3,10,7,-8,-5,8,-2,-4,10,-7,-10,-5,-9,4,-6,-6,5,7,-4,-3,-7,8,1,8,-5,-6,-9,8,6,9,-5,3,1,-1,4,5,-5,3,-2,-9,-7,4,6,5,5,5,7,1,-7,4,-6,-5,1,-9,8,-3,-3,-10,-10,10,-8,-7,-5,6,1,-3,8,-8,-5,-3,-4,-7,-3,5,-3,9,2,-10,-2,-6,4,-10,1,-3,-2,9,-1,3,7,-7,3,-4,10,9,-10,-7,-8,1,4,6,-8,-3,3,-3,2,-1,-6,7,10,-9,2,-9,4,8,1,5,-8,10,-2,2,-3,-8,-9,-6,-2,-3,3,-5,-1,-5,6,4,8,-7,-7,4,-3,8,7,5,8,-4,-10,-8,-1,-5,-4,-2,1,3,-10,7,-7,-7,10,6,10,9,-8,-10,3,-5,-4,-7,8,-2], dtype = "uint16")#candidate|648|(3600,)|const|uint16
call_647 = relay.TupleGetItem(func_177_call(relay.reshape(const_648.astype('uint16'), [16, 15, 15]), relay.reshape(const_648.astype('uint16'), [16, 15, 15]), ), 4)
call_649 = relay.TupleGetItem(func_181_call(relay.reshape(const_648.astype('uint16'), [16, 15, 15]), relay.reshape(const_648.astype('uint16'), [16, 15, 15]), ), 4)
uop_654 = relay.asin(call_647.astype('float64')) # shape=(2, 3, 5)
uop_656 = relay.asin(call_649.astype('float64')) # shape=(2, 3, 5)
output = relay.Tuple([bop_644,const_648,uop_654,])
output2 = relay.Tuple([bop_644,const_648,uop_656,])
func_672 = relay.Function([var_642,var_643,], output)
mod['func_672'] = func_672
mod = relay.transform.InferType()(mod)
var_673 = relay.var("var_673", dtype = "uint32", shape = ())#candidate|673|()|var|uint32
var_674 = relay.var("var_674", dtype = "uint32", shape = (9, 8, 3))#candidate|674|(9, 8, 3)|var|uint32
output = func_672(var_673,var_674,)
func_675 = relay.Function([var_673,var_674,], output)
mutated_mod['func_675'] = func_675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_749 = relay.var("var_749", dtype = "uint16", shape = (14, 7, 4))#candidate|749|(14, 7, 4)|var|uint16
const_750 = relay.const([[[-6,7,9,-2],[-9,4,9,-10],[-2,-8,-6,3],[-3,-3,-6,10],[3,6,1,5],[-4,-9,1,-1],[-8,-5,-9,-4]],[[-5,-5,-3,-1],[-4,10,-4,7],[-2,-10,4,5],[2,6,-10,6],[-7,-6,-7,9],[-5,-9,4,4],[-10,10,-8,8]],[[8,-1,-6,6],[7,-6,-9,8],[-3,-3,-2,-4],[1,-8,2,-9],[2,9,-9,9],[-4,-2,9,-7],[8,-1,6,3]],[[-1,8,-7,-4],[-1,4,7,-7],[10,6,-1,4],[-2,10,-10,9],[5,5,-6,-10],[-1,6,2,10],[5,3,-8,5]],[[-10,10,-7,-1],[6,-4,-6,-1],[1,-6,-3,6],[2,-1,-6,10],[1,-6,-1,-1],[-7,-1,-1,2],[10,-6,-4,-8]],[[-4,5,-7,-6],[9,7,8,-6],[4,8,10,7],[7,2,10,8],[-2,1,-1,6],[-8,-9,2,3],[-5,-1,-10,2]],[[6,9,-5,-7],[1,6,5,-2],[-6,1,-8,-6],[-5,5,-5,-3],[2,-6,-2,-6],[1,4,4,2],[9,-10,8,-8]],[[-2,8,-2,8],[-6,5,-7,10],[-2,5,2,-8],[1,-8,3,-1],[2,4,-2,-10],[-7,6,-5,-4],[-3,-3,-8,-10]],[[10,-7,-5,-7],[8,1,-4,-8],[-5,8,1,6],[-3,-2,1,-8],[-1,3,-3,-3],[2,1,-4,-10],[1,10,8,-9]],[[9,1,-5,-9],[6,-2,-4,10],[-8,3,-9,-4],[9,-6,4,-9],[9,10,-1,-10],[-5,-5,-9,3],[7,-1,9,7]],[[-1,-6,-10,-7],[4,-5,-8,-3],[-9,-2,-5,-6],[-2,-9,2,8],[10,-8,8,-9],[5,-9,-9,8],[1,6,4,10]],[[-9,-5,-6,-6],[-7,-9,2,-7],[-2,-9,-9,8],[-6,5,6,-6],[-6,-6,5,1],[6,7,7,-4],[2,-9,10,-2]],[[2,6,5,-3],[-2,3,8,-9],[3,-4,-4,7],[-2,9,-4,8],[-10,-3,6,-4],[-4,-8,-3,9],[-7,-6,1,-6]],[[-2,7,-6,1],[1,1,-2,8],[3,8,-4,-4],[4,-1,3,-10],[-4,2,-1,-6],[-9,-2,3,6],[-7,-4,5,-2]]], dtype = "uint16")#candidate|750|(14, 7, 4)|const|uint16
bop_751 = relay.bitwise_or(var_749.astype('uint16'), relay.reshape(const_750.astype('uint16'), relay.shape_of(var_749))) # shape=(14, 7, 4)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
const_764 = relay.const([3.039880,6.224141,-4.114308,5.223073,1.105334,-9.307891,-6.353710,-7.373588,8.638150,1.603871,-9.953877,-5.056523,1.380951,8.515206,6.453607,1.696016,8.390810,-2.720705,-0.614496,2.947972,7.374830,-7.425378,-5.863547,-7.599183,3.140783,-7.751156,-2.070719,8.828213,2.806086,-0.883125], dtype = "float64")#candidate|764|(30,)|const|float64
call_763 = relay.TupleGetItem(func_3_call(relay.reshape(const_764.astype('float64'), [2, 3, 5])), 0)
call_765 = relay.TupleGetItem(func_5_call(relay.reshape(const_764.astype('float64'), [2, 3, 5])), 0)
output = relay.Tuple([bop_751,call_763,const_764,])
output2 = relay.Tuple([bop_751,call_765,const_764,])
func_770 = relay.Function([var_749,], output)
mod['func_770'] = func_770
mod = relay.transform.InferType()(mod)
var_771 = relay.var("var_771", dtype = "uint16", shape = (14, 7, 4))#candidate|771|(14, 7, 4)|var|uint16
output = func_770(var_771)
func_772 = relay.Function([var_771], output)
mutated_mod['func_772'] = func_772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_829 = relay.var("var_829", dtype = "uint32", shape = (9, 5))#candidate|829|(9, 5)|var|uint32
var_830 = relay.var("var_830", dtype = "uint32", shape = (9, 5))#candidate|830|(9, 5)|var|uint32
bop_831 = relay.not_equal(var_829.astype('bool'), relay.reshape(var_830.astype('bool'), relay.shape_of(var_829))) # shape=(9, 5)
output = relay.Tuple([bop_831,])
output2 = relay.Tuple([bop_831,])
func_836 = relay.Function([var_829,var_830,], output)
mod['func_836'] = func_836
mod = relay.transform.InferType()(mod)
mutated_mod['func_836'] = func_836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_836_call = mutated_mod.get_global_var('func_836')
var_838 = relay.var("var_838", dtype = "uint32", shape = (9, 5))#candidate|838|(9, 5)|var|uint32
var_839 = relay.var("var_839", dtype = "uint32", shape = (9, 5))#candidate|839|(9, 5)|var|uint32
call_837 = func_836_call(var_838,var_839,)
output = call_837
func_840 = relay.Function([var_838,var_839,], output)
mutated_mod['func_840'] = func_840
mutated_mod = relay.transform.InferType()(mutated_mod)
var_852 = relay.var("var_852", dtype = "float32", shape = (7, 10, 13))#candidate|852|(7, 10, 13)|var|float32
uop_853 = relay.sqrt(var_852.astype('float32')) # shape=(7, 10, 13)
func_836_call = mod.get_global_var('func_836')
func_840_call = mutated_mod.get_global_var('func_840')
const_857 = relay.const([10,-4,-4,10,-3,-6,-6,9,-10,3,-4,1,5,-5,1,-7,-3,-7,-9,1,-3,4,4,1,-8,-3,-1,4,8,-2,-9,-2,-1,-9,6,-4,-9,-10,6,6,8,-10,-4,6,4], dtype = "uint32")#candidate|857|(45,)|const|uint32
call_856 = relay.TupleGetItem(func_836_call(relay.reshape(const_857.astype('uint32'), [9, 5]), relay.reshape(const_857.astype('uint32'), [9, 5]), ), 0)
call_858 = relay.TupleGetItem(func_840_call(relay.reshape(const_857.astype('uint32'), [9, 5]), relay.reshape(const_857.astype('uint32'), [9, 5]), ), 0)
bop_866 = relay.maximum(var_852.astype('int64'), relay.reshape(uop_853.astype('int64'), relay.shape_of(var_852))) # shape=(7, 10, 13)
func_177_call = mod.get_global_var('func_177')
func_181_call = mutated_mod.get_global_var('func_181')
var_875 = relay.var("var_875", dtype = "uint16", shape = (10, 360))#candidate|875|(10, 360)|var|uint16
call_874 = relay.TupleGetItem(func_177_call(relay.reshape(var_875.astype('uint16'), [16, 15, 15]), relay.reshape(var_875.astype('uint16'), [16, 15, 15]), ), 1)
call_876 = relay.TupleGetItem(func_181_call(relay.reshape(var_875.astype('uint16'), [16, 15, 15]), relay.reshape(var_875.astype('uint16'), [16, 15, 15]), ), 1)
uop_888 = relay.log10(var_875.astype('float64')) # shape=(10, 360)
output = relay.Tuple([call_856,const_857,bop_866,call_874,uop_888,])
output2 = relay.Tuple([call_858,const_857,bop_866,call_876,uop_888,])
func_896 = relay.Function([var_852,var_875,], output)
mod['func_896'] = func_896
mod = relay.transform.InferType()(mod)
mutated_mod['func_896'] = func_896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_896_call = mutated_mod.get_global_var('func_896')
var_898 = relay.var("var_898", dtype = "float32", shape = (7, 10, 13))#candidate|898|(7, 10, 13)|var|float32
var_899 = relay.var("var_899", dtype = "uint16", shape = (10, 360))#candidate|899|(10, 360)|var|uint16
call_897 = func_896_call(var_898,var_899,)
output = call_897
func_900 = relay.Function([var_898,var_899,], output)
mutated_mod['func_900'] = func_900
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1009 = relay.const([[[-6],[-7],[-2],[6]],[[-9],[-10],[-4],[3]],[[-6],[-1],[5],[-5]],[[8],[9],[2],[-3]],[[2],[3],[-2],[-3]],[[2],[9],[10],[2]],[[-8],[-1],[8],[1]],[[7],[2],[-3],[10]],[[-5],[-9],[-9],[-8]],[[-8],[9],[-9],[-4]],[[-3],[10],[-10],[-9]],[[-9],[8],[8],[-9]],[[-10],[1],[-3],[-4]],[[-6],[-8],[5],[-1]]], dtype = "int8")#candidate|1009|(14, 4, 1)|const|int8
var_1010 = relay.var("var_1010", dtype = "int8", shape = (14, 4, 10))#candidate|1010|(14, 4, 10)|var|int8
bop_1011 = relay.add(const_1009.astype('int8'), var_1010.astype('int8')) # shape=(14, 4, 10)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
const_1015 = relay.const([[-1.863237,-3.198592,3.418896,9.651340,8.683876,-5.267793],[-7.184194,-7.046071,-8.221025,-5.435162,-4.147582,-8.967789],[-4.151566,3.931316,6.940281,4.235426,-0.442433,-6.224442],[-0.729698,8.394763,-1.976240,8.896589,-0.481982,-2.579018],[-0.593745,1.912833,4.541835,5.444573,2.543301,-3.317919]], dtype = "float64")#candidate|1015|(5, 6)|const|float64
call_1014 = relay.TupleGetItem(func_3_call(relay.reshape(const_1015.astype('float64'), [2, 3, 5])), 0)
call_1016 = relay.TupleGetItem(func_5_call(relay.reshape(const_1015.astype('float64'), [2, 3, 5])), 0)
func_896_call = mod.get_global_var('func_896')
func_900_call = mutated_mod.get_global_var('func_900')
const_1031 = relay.const([5.743635,2.498616,-5.193705,4.259517,4.240185,8.602927,5.121933,-3.708323,-5.866488,3.469721,-5.426976,7.649112,2.911308,8.292376,9.568686,-2.859095,0.282164,-5.112041,3.366219,-0.006745,4.818605,3.995474,-0.324818,0.948209,8.776474,0.489674,2.915456,7.803153,1.964833,-2.741793,-5.145535,-2.923987,-4.297241,1.732489,-4.860419,-7.251671,1.216610,-0.581912,-6.258825,-7.647409,-0.479679,4.111180,-2.789362,1.315846,-4.697149,-8.280676,-0.758710,-0.153500,0.264822,-0.390412,2.022513,1.640738,6.709364,3.795360,1.784294,9.311982,7.337773,-1.998628,3.480622,-0.555714,6.690138,-3.223158,6.679749,-7.010574,-8.310603,-6.280371,5.780679,-8.491767,9.754210,-0.377987,3.919521,8.283417,7.636072,-9.471000,0.855964,-0.548906,5.031361,-9.667810,8.994355,3.759732,1.743961,8.773909,-2.997092,2.473173,3.007369,-9.830057,7.965073,-7.001450,8.769462,-5.912910,9.341533,5.217720,2.781722,2.912780,-7.260893,2.986242,-7.137568,2.610383,-2.951701,-2.160795,-6.915285,3.476184,-9.684631,-3.835023,-1.485595,-8.636373,2.726457,6.788316,6.454023,8.661816,8.923107,-3.767188,-8.731796,-7.845775,-9.979836,-2.243709,-3.072333,5.876689,3.999255,-8.336749,-5.945050,5.959880,4.342481,-8.038534,3.875718,-5.039262,-1.372842,-3.928933,-0.858657,-7.782033,-0.392129,-5.151406,-7.948733,8.486610,9.159346,1.406053,2.760136,-3.456055,4.142080,7.587690,-5.635006,-0.563012,-5.890800,7.477589,3.846899,-5.513006,2.085048,-1.695669,-8.441787,5.616254,-8.254760,6.441945,-7.880263,-5.460499,-8.368848,-5.187148,1.664111,-2.782268,-6.077674,8.270769,4.881531,6.655256,-6.510062,-0.376182,7.287606,-8.175647,-1.486308,7.272232,5.743100,7.831358,-3.921751,2.492018,-8.572158,7.491975,2.251181,-8.425214,-5.295406,1.903351,-2.135219,0.656147,-5.054616,5.809229,7.760665,2.402066,-4.214699,5.869354,-3.603413,-8.541979,-4.696430,5.780605,-2.488318,-1.588447,8.496734,0.603534,8.069890,-2.180802,3.007496,-1.625525,-6.706560,6.913506,-5.694409,6.697819,8.067584,8.911209,-8.056079,-3.264317,4.478353,5.862750,-8.940942,-3.219084,-1.455873,2.745161,-3.434904,-5.835778,0.244117,4.977153,-8.439348,8.437899,-2.793011,0.095605,3.500884,-7.213525,-9.751746,-5.442171,-9.665298,-8.136012,4.182128,-9.519722,-0.610091,-7.230241,0.114640,2.343392,2.157215,2.880318,-2.424192,-6.307902,-7.525604,-9.621504,-0.066897,-5.211384,5.576797,8.214493,-0.663183,-7.301776,5.738503,6.744386,-2.141997,-4.286990,0.688169,8.369924,0.458026,2.800656,-5.070241,-3.911729,-6.736341,-7.644911,-2.471508,-0.728586,8.399526,3.477350,-3.332494,9.362675,7.330828,-9.863072,-6.326089,-4.134376,6.385140,5.075349,5.397431,-9.564584,-2.615736,8.676872,2.431174,-2.452703,-9.173005,6.095741,-7.949732,5.063709,-0.775877,-5.648146,-7.996804,-6.427355,-3.677698,8.305859,-9.201268,-3.157480,-9.960019,8.301846,5.456595,0.226373,9.101628,-5.322001,2.517183,0.083362,5.249393,-1.105190,1.497514,4.421090,6.452205,6.368507,8.108408,-5.535007,-2.398528,7.018227,1.342528,4.382257,1.600738,-4.018886,-5.190316,-2.398706,2.336108,7.415799,-0.241402,0.375298,2.405518,0.146519,-0.354913,6.268916,7.019785,-2.271278,9.283504,7.095153,-9.072941,0.395994,8.931678,-0.454588,9.891202,6.768395,9.123170,4.859063,-2.690150,2.848560,-2.714339,9.926347,8.662552,3.955789,6.859583,3.034983,-4.543111,-7.524451,-6.717979,6.968924,-8.891901,4.576945,8.653724,7.007877,3.199798,-6.614402,6.000449,4.707050,9.623735,2.617074,0.018982,-5.271507,4.333129,-0.193682,-4.269714,6.010806,-2.357628,-7.484140,4.800565,2.447567,-4.938392,1.780770,0.267783,-6.435844,7.543188,-9.140548,-4.445635,-1.074647,4.321346,7.561433,-4.647226,9.922500,-0.297390,-3.398645,2.387220,-3.394389,4.024771,0.551001,6.873987,-7.287254,2.482708,7.756522,0.594304,4.997526,-2.949007,-2.761623,-0.566273,-6.564755,6.397472,-8.077248,-0.786858,-1.688748,-7.614777,8.045490,2.802831,-7.631523,-2.792740,-8.978909,-4.148773,-2.331586,5.320437,5.571304,-0.082710,-8.138980,8.876334,-9.264178,8.616150,9.279876,-1.339871,0.978882,-8.840442,-9.943616,-5.861721,8.273920,1.173367,1.139238,-1.153734,-6.863455,-7.064808,4.184739,4.835039,-8.069706,-0.597632,8.516401,-6.555266,6.436321,-9.087355,0.304226,-6.272059,6.567241,-7.326786,-8.538282,-1.972965,-2.949612,9.451164,-0.609371,5.412615,-7.476057,-3.404170,4.840545,-1.444432,-0.313942,-7.858236,3.696426,-7.877408,-8.275948,-6.586967,7.534188,3.826169,2.625135,0.691616,-0.806166,-4.986025,2.318253,-9.891957,3.928544,3.399279,7.816080,8.989810,-3.047623,-7.670202,2.733386,-1.570423,3.634379,-5.383664,-5.317574,-5.591226,-6.797910,9.971850,8.976083,-3.036797,3.881970,-2.404042,-8.958243,6.533493,3.960744,4.260990,-5.728728,-3.837728,-0.023454,5.126447,-8.551129,2.286804,-6.560417,-3.174833,-6.700817,7.196933,-9.454108,-0.067032,9.295884,-2.640855,4.690331,7.561506,0.273569,7.564212,-3.630767,-5.360075,-0.316928,-7.392881,4.377842,6.800065,3.341468,4.761637,-3.729012,-0.924089,0.013002,2.709893,5.275085,5.782648,-9.465001,-6.322996,4.342639,2.226720,-7.442778,-0.330484,4.148437,4.303507,-9.821111,-0.761842,-5.104963,4.555014,5.159314,2.568595,9.200440,0.948239,3.327254,6.607941,2.548773,7.082991,-8.944069,1.218388,3.564443,-4.538929,4.849622,-9.591319,-0.290967,4.022485,-9.381042,-7.605728,6.237518,7.317505,3.503886,1.841420,-7.288782,-4.355650,8.159986,-0.893196,-5.464510,-2.359731,1.283249,3.694927,-1.330713,-7.714613,7.150041,4.436714,-4.154721,-6.084092,3.348855,-0.862108,-7.023036,-8.249356,-9.508346,-6.815875,9.259975,-8.970138,0.470543,-6.714639,9.765903,9.964838,3.136924,2.425829,1.877422,4.215095,-1.646026,-8.114284,-2.735482,-1.799343,2.090951,3.144145,6.604394,-4.288549,-2.223864,7.708022,1.268322,-2.748143,2.059267,-9.848036,4.685392,1.815917,-9.420497,-2.176818,-4.847965,9.167176,6.302737,-3.855736,1.767675,-0.373519,-0.560624,0.749918,-2.772622,-2.918902,7.080296,-7.276915,3.553771,-2.309179,-2.480866,-9.524494,0.933833,-3.829945,9.861546,-4.601364,0.975515,-7.254350,-9.211868,7.693869,4.309305,-2.980134,9.957222,-1.926483,-6.458844,-2.009398,9.559715,1.923893,-2.736247,-4.978305,-7.804511,-7.069178,7.680418,3.587545,-2.956658,-4.827037,1.314050,8.170667,0.223172,1.827325,-1.975460,-8.166135,-2.561060,4.529222,-0.945774,-9.070990,-0.699533,-6.334180,5.616739,5.062937,3.370461,-0.905739,-5.339105,0.936512,4.513923,4.749957,-1.657325,2.288989,2.785179,2.531497,-3.069523,-2.056229,2.625751,-9.550040,6.021953,-9.232725,5.956425,6.255081,-3.528855,-0.288823,9.552804,-4.852166,7.388536,-7.009873,-1.585535,-4.807440,-7.710494,1.219925,-7.808101,-9.015878,6.715370,-7.354022,5.923455,-0.095382,-2.573189,4.884974,-9.420960,8.952924,-3.798431,-0.036711,5.665594,0.821201,6.872065,6.411767,3.626216,8.239492,9.577077,2.548792,9.241300,-8.711930,-4.074754,1.955960,3.363413,6.653559,1.143648,-1.346029,-8.919797,-5.661874,-0.939549,5.740545,4.437298,-8.883499,-2.888806,-0.437314,3.309924,5.067285,-1.770367,-9.884890,2.187916,9.643963,9.847123,-0.856109,-3.662202,-8.417013,-1.303607,-5.154178,-0.551603,-8.522513,-7.071227,3.601734,-6.381524,-5.264741,7.041259,-5.701717,-8.082094,9.150188,-5.015510,2.455125,-5.118381,3.517037,-2.524234,3.933587,3.015291,4.451579,-2.161145,9.759358,-9.613251,0.841133,9.761625,-2.445806,-2.901447,7.898094,4.778297,0.447863,-1.031618,6.838495,-5.833015,-7.873894,-9.167369,1.098067,-2.918569,9.142115,-5.273197,-8.799368,9.470563,0.372996,9.570066,-9.460407,-1.016073,-4.196644,-8.625377,6.688420,-9.837144,-2.569618,0.412717,3.365016,2.577890,-3.005869,-2.441571,7.603550,-5.546709,2.663154,7.685425,-2.163948,9.684515,4.554048,-9.216634,-5.010468,-2.203266,-8.693636,-0.877225,9.717963,-3.739518,-3.247543,-6.662135,-7.788050,-9.679924,-8.766818,2.344184,7.280243,-0.259115,7.130085,6.804967,2.916473,-9.722134,-8.070385,-4.219589,-9.913467,4.712703,0.632763,-2.705198,-7.698117,8.828811,8.785779,-9.743702,6.740019,3.021116,3.831418,-8.106942,-8.384125,-6.163039,2.746865,-1.830752,-4.822728,-7.100871,4.573307,2.081399,-0.228388,4.444917,-3.427722,-8.403129,-7.740341,-5.893107,5.642385,-6.229829,7.532934,-7.620622,1.059787,4.489820,-5.272620,3.638657,-9.294928,-6.463843,5.038386,-7.289324,3.138584,3.898525,-0.854757,9.141546,-4.073927,4.349556,5.192389,6.509642,-3.207409,-8.384035,-0.162058,3.997556,-1.001724,6.735434,3.056291,6.034736,9.543447,-1.574148,-0.637837,0.387487,1.653500,3.507918,-2.643331,-7.284965,6.879966,7.300594,-8.841270,-0.044502,-3.319063,3.192947,-4.744998,-5.028367,2.328255,1.598949,1.000462,2.205902,-7.859755,4.306194,9.285211,0.577987,-4.710003,-0.575431,9.023160,0.254026,2.387786,1.318426,-7.922938,4.354839,-1.268487,3.068233,9.336547,0.150585,9.876208,-4.605686,-5.353209,0.881872,-6.030110,7.027184,2.857162,-2.738898,0.391296,-1.725631,5.624386,-4.556463,-7.175070,4.090159,-0.796511,6.688469], dtype = "float32")#candidate|1031|(910,)|const|float32
const_1032 = relay.const([[4],[8],[3],[8],[-6],[-1],[-5],[5],[-8],[5],[-4],[1],[-2],[-10],[6],[-5],[8],[-6],[9],[-3],[8],[-10],[-9],[-7],[1],[6],[-1],[-7],[9],[5],[-9],[-6],[8],[-8],[-5],[-1],[-4],[-8],[-8],[-1],[-4],[-4],[6],[-7],[-3],[10],[5],[-9],[-7],[9],[7],[-7],[-3],[-6],[-7],[-9],[4],[6],[-7],[4],[-7],[1],[2],[4],[-6],[-3],[5],[4],[2],[-10],[-8],[2],[2],[-1],[2],[10],[2],[1],[3],[5],[-2],[-2],[6],[-6],[7],[9],[-5],[-7],[-8],[-10],[6],[10],[-3],[-3],[-10],[-6],[7],[-9],[4],[-3],[-3],[6],[1],[7],[-2],[2],[6],[7],[6],[-6],[10],[-9],[1],[-2],[-5],[-8],[5],[-6],[-9],[-8],[9],[10],[-3],[-7],[-9],[-5],[6],[-8],[10],[-4],[2],[3],[5],[-6],[6],[5],[5],[3],[4],[-6],[4],[2],[3],[-8],[7],[-10],[-3],[-8],[6],[-5],[9],[8],[-7],[3],[10],[2],[1],[5],[-3],[9],[-3],[1],[-5],[4],[-5],[4],[1],[10],[-4],[7],[2],[-9],[5],[-9],[4],[-10],[-10],[-3],[-2],[-6],[8],[-2],[3],[-6],[7],[-10],[-5],[6],[-2],[-8],[-4],[3],[9],[-6],[-7],[-7],[4],[3],[-5],[4],[-4],[-5],[-5],[9],[-5],[-2],[-5],[-10],[3],[7],[-10],[-4],[-8],[-4],[7],[7],[2],[8],[-10],[-5],[-4],[-1],[-3],[7],[-8],[-3],[-1],[-5],[-5],[-9],[4],[-4],[7],[-8],[-9],[-1],[9],[5],[-4],[-8],[-7],[3],[10],[-4],[-4],[9],[-1],[8],[5],[7],[8],[-8],[-4],[9],[-5],[2],[-9],[-9],[-2],[6],[-10],[-6],[6],[-10],[-2],[4],[7],[-5],[6],[10],[-2],[-5],[-7],[10],[9],[-7],[-10],[9],[9],[-6],[6],[-8],[-3],[5],[8],[3],[8],[-1],[-2],[6],[8],[8],[4],[-2],[9],[-3],[10],[-10],[-4],[-4],[-10],[4],[-5],[-5],[-7],[-8],[-2],[-3],[-6],[-1],[-2],[9],[-6],[7],[-6],[4],[-6],[-6],[-7],[-9],[9],[9],[4],[10],[-6],[-4],[-5],[-2],[-4],[3],[-8],[7],[-9],[-6],[-3],[-1],[2],[6],[2],[5],[-6],[6],[-4],[6],[-7],[-9],[8],[-10],[1],[3],[3],[-6],[4],[1],[7],[3],[7],[-9],[-8],[-10],[-6],[10],[6],[-2],[8],[-3],[-9],[-5],[3],[8],[4],[-5],[9],[-1],[-1],[-3],[-1],[-10],[5],[-6],[-7],[-5],[7],[9],[8],[10],[-7],[10],[-3],[6],[-1],[10],[2],[-8],[3],[-9],[2],[9],[5],[-9],[-5],[2],[6],[-1],[-2],[-2],[4],[4],[-5],[2],[-8],[-2],[-4],[-2],[-9],[10],[2],[10],[-6],[8],[8],[3],[-5],[9],[-1],[9],[9],[-10],[2],[-3],[-4],[7],[-7],[-5],[-7],[-4],[-4],[-8],[-6],[-8],[5],[8],[1],[-10],[1],[2],[-6],[-9],[-7],[9],[7],[1],[-10],[10],[-6],[-3],[-10],[-9],[-1],[1],[-2],[-5],[-3],[3],[-1],[4],[-6],[1],[5],[-10],[-2],[4],[-7],[2],[-1],[8],[-6],[-2],[-9],[1],[-9],[-8],[-1],[1],[-10],[7],[-7],[5],[-1],[10],[8],[5],[-10],[4],[-6],[-9],[-1],[10],[-4],[10],[-3],[8],[-7],[1],[-8],[1],[-8],[-1],[-5],[-10],[-4],[-6],[6],[9],[-8],[-5],[-3],[10],[-6],[9],[2],[1],[4],[2],[8],[2],[1],[-7],[5],[-6],[-4],[-5],[-6],[8],[-6],[5],[4],[-1],[7],[-2],[3],[7],[10],[-2],[1],[-10],[-1],[-3],[-10],[8],[-7],[-5],[6],[-1],[-9],[-7],[7],[-8],[-9],[3],[-10],[-6],[-10],[7],[-1],[5],[5],[-9],[7],[-3],[-5],[1],[-6],[10],[-9],[7],[6],[10],[4],[5],[2],[3],[3],[8],[6],[-6],[-4],[4],[6],[-7],[-4],[4],[-2],[7],[2],[1],[-3],[1],[10],[6],[5],[-8],[9],[-10],[3],[9],[4],[1],[-10],[3],[-2],[7],[-1],[-9],[-10],[-9],[-7],[3],[-7],[10],[-10],[1],[-4],[1],[-3],[-7],[-9],[10],[5],[-2],[-6],[-1],[6],[-8],[8],[-6],[7],[-4],[4],[-7],[2],[-3],[8],[-2],[5],[-9],[7],[-2],[5],[9],[-10],[-4],[4],[9],[5],[-4],[10],[9],[-1],[3],[9],[6],[4],[-8],[-10],[2],[1],[6],[-6],[-5],[9],[-10],[-9],[8],[-4],[-5],[-3],[-8],[9],[-7],[4],[-8],[7],[-10],[8],[-4],[7],[7],[6],[5],[6],[-2],[2],[-7],[-7],[-9],[-6],[-6],[2],[-6],[3],[9],[-5],[-3],[4],[1],[-9],[9],[5],[2],[2],[3],[-10],[-1],[-4],[5],[6],[-5],[-2],[3],[8],[4],[-9],[9],[-2],[-7],[4],[-2],[-8],[-9],[9],[-10],[-9],[7],[-5],[5],[-6],[-1],[5],[10],[2],[-2],[7],[1],[7],[8],[5],[3],[2],[3],[-10],[-1],[1],[-1],[3],[-2],[9],[9],[9],[1],[-1],[4],[-6],[-10],[-6],[-4],[-3],[-3],[6],[-1],[-5],[3],[-8],[-10],[-4],[3],[-2],[3],[-3],[-4],[8],[-5],[4],[7],[10],[-10],[10],[9],[-6],[5],[9],[-9],[-6],[-9],[-5],[-7],[-3],[-6],[-8],[9],[-1],[-3],[10],[9],[10],[-10],[-3],[-2],[-1],[-5],[5],[9],[-2],[-7],[8],[-8],[-4],[-9],[2],[2],[3],[3],[-1],[2],[-5],[8],[1],[-8],[-2],[5],[10],[10],[6],[-8],[-9],[-10],[-2],[-6],[-7],[5],[-7],[2],[2],[-1],[4],[6],[-1],[7],[6],[-6],[6],[7],[1],[3],[4],[-10],[2],[-9],[3],[-9],[-7],[-10],[-3],[-6],[2],[6],[-7],[6],[-6],[6],[8],[1],[9],[4],[-1],[10],[10],[-10],[6],[-2],[7],[-8],[10],[-2],[4],[6],[-3],[2],[6],[-5],[-1],[-9],[-4],[-1],[-5],[1],[-2],[-4],[-5],[-9],[-4],[1],[-10],[9],[-10],[-7],[9],[1],[-4],[-4],[-7],[1],[-5],[2],[-1],[7],[5],[-3],[4],[3],[10],[5],[5],[-1],[-8],[10],[-1],[7],[-5],[-6],[-1],[2],[-2],[3],[10],[-9],[5],[8],[-10],[8],[7],[7],[6],[3],[-6],[-8],[3],[-5],[8],[10],[1],[8],[3],[-5],[-8],[-5],[1],[-2],[6],[10],[6],[1],[1],[-4],[-1],[7],[-4],[-9],[1],[-2],[-6],[-4],[8],[8],[1],[8],[-8],[-7],[-4],[-6],[-5],[-8],[-7],[6],[10],[9],[-4],[3],[-6],[6],[8],[9],[2],[5],[-6],[10],[5],[10],[4],[2],[-3],[-9],[1],[-9],[-2],[-6],[-8],[8],[-10],[-3],[-3],[10],[10],[10],[8],[-7],[10],[-10],[-8],[9],[5],[-2],[-2],[-2],[-3],[-1],[-9],[-4],[4],[4],[-5],[-5],[-4],[5],[-7],[4],[2],[4],[8],[6],[-2],[-8],[1],[1],[-6],[-7],[3],[-6],[-8],[-3],[-7],[-6],[4],[-3],[-7],[-4],[8],[-1],[5],[-2],[6],[-2],[3],[8],[-10],[6],[-7],[-8],[-4],[3],[-10],[2],[8],[4],[-5],[4],[6],[-10],[5],[2],[-10],[-7],[-3],[-10],[-4],[10],[-2],[1],[-6],[-3],[3],[-2],[-7],[-10],[2],[-2],[-10],[-1],[-1],[-2],[6],[10],[-4],[7],[-8],[-3],[-2],[-2],[7],[3],[-1],[4],[-1],[-6],[8],[1],[2],[9],[4],[8],[-8],[5],[-5],[-9],[8],[-2],[7],[2],[-10],[2],[6],[1],[7],[-6],[8],[7],[4],[-6],[-8],[3],[-8],[-4],[-2],[-3],[-5],[-10],[2],[-1],[-1],[-2],[-10],[7],[-10],[6],[9],[-3],[-6],[-2],[-1],[1],[-1],[9],[4],[4],[6],[6],[-4],[3],[-7],[3],[8],[-3],[-3],[1],[1],[2],[-4],[-7],[10],[6],[7],[3],[5],[9],[-4],[-8],[-8],[-5],[7],[7],[-9],[-3],[-9],[-3],[-2],[-8],[-1],[4],[6],[9],[-6],[2],[-9],[5],[4],[-5],[-10],[-10],[-9],[-9],[-2],[-3],[7],[-2],[-9],[-4],[-8],[-8],[-5],[5],[4],[4],[10],[-2],[-7],[-3],[-7],[3],[-2],[-8],[-5],[-5],[-9],[4],[-8],[3],[10],[-6],[1],[9],[-1],[6],[-9],[-4],[5],[-1],[2],[-5],[-10],[7],[7],[10],[9],[-6],[-7],[8],[-9],[8],[3],[-8],[-1],[9],[6],[-6],[-5],[4],[3],[9],[-3],[-2],[-2],[-8],[5],[9],[-5],[-6],[-6],[2],[3],[8],[-1],[9],[-8],[5],[3],[-10],[6],[-8],[-4],[-8],[-3],[-9],[-3],[1],[-9],[1],[-1],[1],[9],[9],[-3],[-9],[-8],[9],[5],[5],[4],[-9],[5],[3],[8],[1],[6],[-9],[7],[-1],[10],[9],[-8],[-2],[-8],[2],[-10],[-10],[-2],[-8],[-9],[-2],[-10],[4],[-10],[10],[-4],[7],[-9],[-6],[7],[2],[-1],[-2],[-7],[5],[-9],[5],[-7],[-1],[-3],[-6],[1],[-10],[2],[9],[5],[7],[-6],[-1],[1],[-3],[1],[4],[-8],[-5],[-5],[7],[-6],[-8],[6],[-8],[-1],[-9],[7],[-3],[5],[1],[-5],[-6],[-9],[3],[3],[9],[8],[8],[7],[5],[2],[-6],[-3],[9],[5],[6],[6],[-5],[2],[-8],[8],[2],[7],[2],[-7],[-1],[-2],[-10],[-5],[4],[1],[-2],[-9],[-10],[4],[4],[7],[2],[8],[-7],[10],[4],[4],[6],[4],[-1],[-8],[-10],[1],[8],[9],[-9],[-7],[-8],[2],[10],[3],[5],[-9],[-7],[1],[-8],[1],[7],[-9],[7],[-6],[4],[-7],[10],[10],[-3],[-5],[10],[-1],[9],[-5],[2],[6],[-7],[-6],[-4],[-1],[6],[3],[-9],[-6],[-5],[3],[5],[4],[-6],[2],[6],[9],[6],[8],[-6],[8],[-8],[7],[-3],[-10],[-4],[-6],[4],[4],[1],[-10],[-5],[-10],[4],[2],[-8],[-1],[-3],[-4],[1],[-7],[-6],[3],[-4],[-2],[4],[-2],[10],[-1],[10],[4],[4],[-2],[6],[-3],[9],[-2],[-6],[-5],[-4],[7],[-10],[9],[1],[-4],[-3],[-6],[-4],[6],[-6],[6],[1],[-10],[-5],[-7],[-3],[-6],[-3],[3],[-5],[2],[-5],[-7],[-9],[-8],[-3],[10],[-2],[-1],[7],[-7],[2],[3],[10],[-7],[3],[7],[10],[-7],[-6],[-3],[9],[3],[4],[-10],[1],[1],[-3],[-9],[2],[-2],[-5],[-5],[2],[3],[-6],[8],[-10],[7],[-4],[6],[6],[-9],[4],[6],[3],[-5],[4],[5],[-3],[-3],[-5],[-4],[-2],[10],[2],[1],[3],[-9],[-9],[-5],[2],[3],[1],[1],[6],[-2],[-6],[5],[-1],[-4],[-1],[1],[9],[1],[4],[2],[-7],[1],[3],[-1],[-7],[-10],[-1],[-1],[-10],[-3],[3],[4],[-3],[-10],[10],[-2],[-5],[6],[-6],[-6],[10],[-6],[-3],[-1],[-3],[3],[-10],[8],[2],[10],[-7],[3],[-7],[1],[4],[6],[5],[6],[10],[-2],[-4],[9],[-2],[7],[4],[-9],[2],[-3],[9],[-4],[-3],[-8],[4],[-8],[-3],[-7],[5],[-1],[4],[2],[5],[-9],[3],[8],[7],[-6],[4],[-1],[-10],[-3],[1],[-8],[-8],[5],[6],[2],[-9],[10],[2],[-6],[10],[1],[8],[2],[-5],[8],[5],[-2],[8],[-8],[5],[6],[8],[7],[-2],[3],[3],[-7],[10],[-8],[4],[-10],[-6],[3],[10],[-6],[1],[8],[-8],[3],[8],[-5],[10],[3],[-1],[4],[6],[4],[8],[4],[1],[2],[4],[3],[-7],[-3],[10],[7],[9],[-1],[-8],[6],[9],[-8],[9],[5],[-5],[-2],[-9],[2],[-9],[2],[-2],[1],[-8],[2],[7],[1],[-7],[-5],[2],[8],[8],[-6],[-5],[4],[1],[5],[-4],[7],[-1],[9],[-8],[-6],[-9],[3],[2],[9],[-1],[7],[-1],[-2],[-9],[-10],[-7],[5],[9],[-6],[6],[3],[-2],[9],[8],[-1],[2],[7],[-1],[10],[9],[-2],[-8],[-2],[3],[-3],[9],[-6],[-10],[4],[2],[-9],[5],[10],[6],[-5],[9],[-1],[8],[-3],[1],[-2],[9],[1],[1],[-9],[1],[7],[-5],[-4],[-6],[-8],[-8],[-1],[4],[9],[-7],[-8],[-7],[8],[-4],[-10],[5],[3],[-4],[-3],[-7],[5],[-1],[4],[-10],[1],[-2],[-6],[7],[6],[10],[-6],[-3],[7],[7],[-8],[-10],[-2],[1],[6],[-8],[9],[-3],[-8],[8],[2],[8],[-3],[9],[8],[9],[-2],[1],[1],[1],[3],[2],[9],[8],[6],[1],[-4],[-7],[2],[6],[-4],[8],[-3],[4],[-10],[1],[4],[7],[1],[-3],[1],[-6],[-5],[-1],[-9],[-6],[1],[2],[2],[-10],[-9],[-8],[-4],[-10],[-10],[1],[-7],[6],[10],[-10],[4],[3],[-2],[1],[-9],[8],[10],[4],[-1],[-9],[5],[10],[-7],[-5],[-4],[5],[3],[-5],[-2],[-8],[-5],[-10],[-2],[-1],[9],[2],[7],[8],[-10],[10],[-10],[-2],[-4],[-7],[-3],[-9],[1],[5],[6],[-4],[3],[-8],[2],[6],[-1],[-6],[3],[5],[4],[6],[-4],[6],[-8],[9],[-7],[10],[-1],[-4],[-6],[-4],[9],[9],[7],[3],[-3],[9],[-6],[5],[9],[8],[6],[-8],[6],[-1],[4],[-9],[-3],[-7],[2],[2],[-9],[-5],[9],[8],[5],[-4],[6],[10],[-5],[6],[4],[4],[-6],[8],[1],[5],[2],[-6],[1],[8],[2],[7],[-5],[-1],[9],[2],[3],[-3],[-7],[8],[2],[7],[-3],[-6],[6],[2],[-6],[-7],[-7],[-5],[-6],[-10],[-3],[7],[-3],[-5],[8],[8],[6],[8],[7],[-10],[-9],[8],[-5],[-2],[10],[-9],[2],[-10],[-3],[-1],[-10],[4],[2],[5],[-2],[-4],[6],[-8],[-5],[-2],[-10],[-5],[-9],[9],[-3],[-4],[-9],[6],[-2],[3],[-10],[6],[-1],[6],[5],[-10],[-1],[1],[-1],[5],[-1],[6],[9],[5],[6],[3],[7],[1],[6],[-3],[-9],[7],[-7],[3],[1],[3],[-7],[3],[-4],[5],[-6],[-6],[-2],[10],[-8],[10],[-3],[7],[-7],[9],[8],[-9],[-2],[1],[3],[-6],[6],[2],[10],[-5],[-3],[6],[-2],[-8],[-3],[7],[1],[-6],[-10],[-9],[-5],[-10],[6],[1],[3],[6],[1],[-4],[5],[3],[8],[-9],[6],[2],[-4],[-7],[-5],[-10],[-8],[-8],[-6],[-7],[-4],[-1],[-2],[7],[4],[1],[-1],[4],[-3],[2],[9],[-8],[4],[-7],[8],[-9],[-6],[3],[7],[-10],[-6],[-1],[-1],[2],[-7],[1],[-8],[-2],[-4],[-3],[5],[-7],[2],[-9],[-10],[2],[-9],[10],[-9],[5],[9],[-3],[-4],[9],[7],[2],[-4],[3],[9],[-9],[-10],[-4],[3],[10],[-6],[-1],[10],[2],[-2],[-1],[5],[-9],[2],[-6],[-5],[-9],[-5],[5],[-7],[-1],[9],[-10],[7],[-2],[-6],[-6],[-6],[-9],[10],[-1],[-10],[1],[5],[3],[-10],[-7],[-6],[7],[-2],[2],[1],[9],[4],[8],[-3],[8],[-9],[-1],[4],[6],[-8],[-4],[-3],[-8],[1],[-3],[8],[2],[9],[-6],[6],[8],[-1],[-10],[10],[-1],[-1],[3],[-10],[-9],[10],[5],[-5],[10],[6],[-6],[9],[10],[2],[-7],[7],[3],[4],[4],[-8],[7],[6],[-8],[9],[-2],[-3],[1],[-4],[-4],[-2],[1],[10],[9],[-9],[-10],[-7],[-6],[8],[-1],[1],[4],[-6],[6],[6],[8],[-2],[9],[-2],[-5],[-3],[-9],[1],[1],[-9],[-8],[10],[4],[9],[-5],[1],[-2],[2],[-4],[2],[-5],[-8],[5],[-2],[-1],[-1],[-1],[3],[6],[-7],[-6],[4],[-3],[1],[-1],[1],[-8],[-2],[8],[-9],[7],[8],[-10],[5],[-10],[9],[-5],[3],[-9],[7],[5],[-6],[5],[-4],[-6],[-10],[5],[-2],[8],[3],[2],[-1],[2],[4],[8],[1],[-7],[6],[9],[-7],[-5],[7],[-6],[4],[-6],[9],[6],[-6],[-3],[2],[-2],[-5],[-4],[-3],[5],[7],[8],[9],[-2],[-5],[2],[8],[-5],[8],[5],[-1],[7],[-7],[9],[3],[1],[-3],[5],[-10],[-6],[7],[10],[-6],[2],[-3],[6],[-3],[10],[-3],[2],[-4],[-5],[10],[10],[6],[7],[-6],[1],[-10],[-7],[-7],[6],[7],[1],[-8],[5],[4],[10],[9],[5],[8],[1],[7],[-7],[2],[-1],[-9],[2],[-7],[-6],[-4],[9],[-3],[3],[9],[-9],[8],[-2],[-3],[-5],[2],[-5],[-4],[-7],[-8],[8],[-5],[3],[3],[10],[-3],[-2],[3],[7],[2],[-9],[9],[3],[1],[-6],[4],[4],[-8],[5],[-2],[-7],[8],[-6],[-3],[4],[-7],[8],[-9],[1],[5],[-10],[9],[6],[2],[1],[8],[6],[7],[-6],[-7],[4],[3],[1],[-6],[-3],[-10],[-10],[10],[8],[-9],[3],[9],[5],[3],[4],[2],[-3],[-3],[1],[7],[-2],[9],[-5],[10],[-1],[4],[-8],[3],[-7],[-7],[-6],[3],[5],[4],[-9],[10],[-7],[5],[-9],[7],[4],[2],[-4],[-7],[3],[4],[-10],[9],[-4],[1],[-5],[5],[9],[-7],[-5],[-8],[6],[10],[7],[1],[-9],[9],[1],[-7],[10],[-10],[-9],[8],[5],[8],[-10],[8],[8],[-5],[5],[-5],[8],[-8],[-2],[6],[2],[-9],[-1],[1],[-4],[5],[-5],[9],[-2],[8],[-10],[-6],[9],[-9],[-6],[6],[-3],[9],[4],[9],[10],[4],[-10],[9],[-9],[1],[-4],[-10],[-2],[5],[-6],[-8],[-6],[2],[-8],[9],[-6],[3],[8],[-7],[-3],[-6],[9],[9],[5],[-9],[-6],[9],[-3],[-3],[-1],[-9],[7],[-2],[-4],[-4],[1],[-3],[8],[-2],[-7],[-3],[8],[-7],[2],[-2],[-4],[9],[-2],[8],[1],[-10],[-2],[3],[-6],[-2],[-5],[-6],[-10],[4],[4],[-4],[-6],[2],[5],[4],[2],[6],[-9],[-3],[-3],[-8],[3],[-1],[-8],[6],[2],[2],[2],[-8],[2],[2],[-7],[7],[9],[-9],[-8],[-3],[2],[5],[-1],[-1],[8],[1],[-7],[-8],[10],[-2],[-10],[3],[2],[2],[-10],[10],[-8],[-1],[3],[-2],[-7],[-4],[1],[-3],[4],[9],[8],[-1],[-3],[-8],[-9],[2],[-3],[-8],[7],[9],[2],[-6],[7],[-5],[-7],[-3],[4],[3],[1],[10],[-2],[-7],[7],[3],[-3],[6],[8],[-8],[1],[6],[-8],[3],[6],[-9],[9],[-5],[4],[-8],[-9],[-5],[-7],[-10],[4],[2],[1],[-5],[8],[1],[6],[-9],[1],[-6],[7],[-8],[-6],[1],[-5],[-10],[6],[8],[9],[-8],[-3],[-9],[9],[4],[3],[5],[-7],[-8],[-5],[8],[-7],[10],[-8],[5],[-4],[-2],[-10],[-8],[10],[-8],[-5],[7],[-3],[4],[-4],[-9],[9],[-8],[-10],[4],[-6],[10],[1],[6],[1],[8],[-7],[5],[8],[10],[-2],[-4],[-10],[9],[5],[-3],[4],[-6],[3],[-8],[-6],[-8],[9],[-4],[5],[-10],[-7],[-9],[9],[7],[3],[-5],[-5],[-4],[5],[-3],[-8],[5],[-6],[-6],[-7],[7],[3],[8],[-6],[-5],[5],[8],[3],[8],[-3],[10],[-2],[9],[-5],[9],[3],[3],[2],[7],[-8],[-8],[4],[-5],[-9],[-4],[4],[6],[-10],[1],[1],[-7],[-6],[10],[6],[7],[-10],[9],[1],[3],[-6],[4],[3],[-3],[-6],[8],[4],[2],[6],[9],[9],[-5],[9],[5],[9],[1],[6],[-5],[-9],[4],[5],[-3],[-5],[-1],[6],[4],[6],[-4],[-5],[-6],[-8],[-8],[-4],[5],[-3],[1],[1],[9],[10],[9],[-1],[-1],[4],[1],[-8],[-2],[4],[3],[4],[3],[7],[7],[7],[-3],[7],[-5],[7],[-5],[-5],[10],[3],[-10],[-3],[5],[10],[-5],[4],[-4],[8],[-10],[-3],[5],[-10],[3],[-9],[7],[-7],[7],[1],[-7],[1],[-8],[4],[6],[3],[-10],[10],[10],[-8],[-5],[8],[-8],[-10],[-2],[8],[2],[1],[-6],[3],[-10],[-7],[-5],[-8],[7],[8],[4],[4],[8],[7],[-5],[-1],[-4],[-4],[-1],[2],[5],[4],[6],[-7],[-9],[-3],[-10],[4],[-10],[-9],[-6],[9],[-5],[2],[-4],[-9],[-6],[1],[6],[-5],[2],[7],[6],[9],[2],[1],[8],[-8],[7],[-1],[4],[1],[3],[-2],[-9],[-4],[-4],[10],[-4],[-5],[7],[-2],[8],[-10],[-10],[7],[10],[-6],[10],[-2],[2],[8],[8],[-7],[7],[9],[-10],[8],[3],[-4],[-8],[-8],[10],[3],[-9],[-9],[-2],[-10],[-6],[-5],[9],[-6],[-6],[-8],[4],[-1],[4],[1],[3],[-2],[-9],[-7],[9],[-5],[4],[-8],[5],[3],[-10],[-10],[2],[7],[1],[10],[3],[8],[4],[-5],[1],[-5],[-2],[-10],[-9],[-8],[-2],[3],[10],[-2],[9],[-4],[-5],[-6],[-8],[-1],[3],[-5],[-1],[1],[6],[8],[8],[3],[-5],[-6],[8],[-9],[-4],[1],[8],[-2],[10],[-7],[2],[10],[7],[-7],[-3],[-10],[5],[3],[10],[6],[8],[6],[1],[-8],[-7],[1],[-3],[5],[-1],[5],[-3],[2],[-3],[-3],[8],[-6],[9],[4],[-2],[-3],[7],[8],[5],[10],[-6],[-1],[1],[8],[10],[-6],[-3],[9],[-8],[3],[5],[-9],[-10],[-4],[10],[4],[-8],[8],[-10],[-5],[10],[-3],[6],[6],[-4],[4],[-7],[-4],[1],[3],[-2],[9],[3],[3],[-4],[6],[-10],[6],[10],[1],[-10],[-5],[-7],[-3],[9],[-2],[-4],[4],[8],[9],[-6],[5],[-3],[-3],[4],[-6],[7],[1],[-2],[-4],[2],[-3],[7],[-4],[-5],[-7],[9],[6],[-5],[-4],[10],[-3],[-1],[5],[-1],[-6],[5],[1],[-9],[6],[-9],[4],[7],[9],[-8],[8],[3],[9],[6],[-9],[2],[-1],[-7],[8],[-9],[-9],[-7],[6],[2],[5],[8],[-1],[5],[-7],[3],[9],[1],[2],[-4],[3],[7],[10],[2],[10],[-1],[5],[-8],[-10],[-6],[5],[3],[5],[-6],[2],[-9],[1],[-7],[-2],[9],[7],[6],[-9],[10],[-7],[-4],[-6],[-8],[1],[-9],[-4],[-1],[4],[6],[-9],[5],[4],[7],[6],[-3],[-4],[7],[4],[-2],[-9],[-1],[9],[8],[10],[-7],[-10],[4],[-6],[7],[10],[6],[7],[-3],[-9],[9],[6],[-3],[-9],[-8],[6],[7],[-10],[9],[-6],[9],[-6],[-10],[-8],[-5],[10],[7],[3],[-10],[-10],[3],[-4],[1],[3],[-1],[6],[-3],[-4],[-7],[-7],[-9],[8],[10],[-7],[-4],[-1],[-4],[-7],[-10],[-5],[-9],[2],[5],[-6],[8],[7],[-8],[-7],[-6],[3],[5],[7],[8],[6],[-4],[2],[4],[-7],[9],[3],[9],[-9],[7],[-7],[10],[3],[3],[-7],[-1],[10],[4],[1],[5],[-6],[5],[6],[-1],[1],[8],[-9],[8],[-6],[-1],[4],[5],[-9],[8],[-6],[-2],[-9],[-2],[-9],[7],[9],[7],[-8],[1],[8],[8],[-5],[-9],[-2],[6],[2],[-10],[3],[6],[-5],[1],[2],[5],[5],[-3],[-7],[6],[-4],[6],[-2],[3],[10],[-4],[5],[6],[-5],[-7],[5],[5],[5],[2],[1],[-4],[2],[10],[-2],[-7],[6],[5],[1],[5],[-8],[-1],[2],[2],[5],[1],[-3],[2],[7],[-1],[-7],[-1],[-8],[-8],[10],[5],[4],[3],[-3],[5],[-3],[8],[1],[1],[-2],[-7],[1],[-3],[8],[9],[3],[-10],[-9],[4],[9],[4],[4],[-8],[-9],[-5],[3],[9],[-3],[4],[4],[-1],[-5],[-5],[-3],[-10],[6],[4],[3],[-7],[3],[3],[-5],[10],[7],[-9],[-5],[-9],[1],[-9],[-2],[-7],[-1],[10],[-3],[6],[8],[-1],[-4],[-1],[5],[5],[2],[4],[-7],[-6],[-4],[-9],[3],[10],[-6],[-1],[-8],[9],[3],[6],[-2],[10],[4],[-5],[-9],[-1],[-5],[-7],[-10],[4],[5],[-10],[8],[-4],[1]], dtype = "uint16")#candidate|1032|(3600, 1)|const|uint16
call_1030 = relay.TupleGetItem(func_896_call(relay.reshape(const_1031.astype('float32'), [7, 10, 13]), relay.reshape(const_1032.astype('uint16'), [10, 360]), ), 4)
call_1033 = relay.TupleGetItem(func_900_call(relay.reshape(const_1031.astype('float32'), [7, 10, 13]), relay.reshape(const_1032.astype('uint16'), [10, 360]), ), 4)
bop_1036 = relay.divide(const_1009.astype('float64'), const_1031.astype('float64')) # shape=(14, 4, 910)
output = relay.Tuple([bop_1011,call_1014,const_1015,call_1030,const_1032,bop_1036,])
output2 = relay.Tuple([bop_1011,call_1016,const_1015,call_1033,const_1032,bop_1036,])
func_1039 = relay.Function([var_1010,], output)
mod['func_1039'] = func_1039
mod = relay.transform.InferType()(mod)
mutated_mod['func_1039'] = func_1039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1040 = relay.var("var_1040", dtype = "int8", shape = (14, 4, 10))#candidate|1040|(14, 4, 10)|var|int8
func_1039_call = mutated_mod.get_global_var('func_1039')
call_1041 = func_1039_call(var_1040)
output = call_1041
func_1042 = relay.Function([var_1040], output)
mutated_mod['func_1042'] = func_1042
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1139 = relay.const([[[-10,4,9,5,-6,3,10,7,-3,-7,-5,8],[3,6,-9,-7,7,7,5,-9,8,4,-3,-3],[-7,-9,-7,8,-10,-7,1,8,-7,5,6,2],[7,-2,-7,9,5,8,-6,9,3,5,-2,-3],[7,-3,-1,4,3,8,-1,5,6,6,-10,-8],[-5,-4,-7,7,4,-4,5,2,-4,-7,9,8],[3,-9,-1,3,-1,4,-5,-9,-1,3,1,-1],[6,-9,-9,-10,3,5,-6,1,-9,-5,-5,3],[-7,1,2,2,-9,-2,-8,-3,4,4,-8,9],[-9,2,-7,10,-3,-2,3,2,-3,-2,-1,-1]],[[-3,-6,9,8,10,-3,-5,2,4,-5,-8,-10],[-3,3,9,10,-6,-3,-2,4,-1,8,10,5],[4,2,7,4,-8,6,8,9,2,10,5,5],[-10,3,3,-3,-10,-10,9,-8,8,2,10,1],[-7,4,-4,7,2,-2,-10,3,-10,-8,4,5],[10,7,1,9,-8,10,-4,3,-1,-2,-2,2],[5,-2,-5,-2,-4,-4,6,5,-8,5,5,7],[-5,-8,3,10,9,-8,8,-9,10,1,7,-9],[2,9,2,-3,7,3,-3,-10,6,9,10,8],[3,6,-5,7,7,-5,3,5,1,-10,2,9]],[[9,-1,9,-9,-1,2,-9,3,4,4,-6,-9],[-6,3,8,3,-3,-6,-8,-3,-9,-2,4,4],[-3,-9,-7,8,-7,9,-7,3,-1,-2,-6,-7],[-10,5,4,5,-10,-6,3,10,9,5,6,-5],[7,-5,2,9,-10,-9,-6,2,9,2,-6,-1],[-6,10,-4,-8,-2,-5,-4,8,9,-10,2,-10],[2,4,-6,10,9,3,-6,-4,5,-5,-4,-5],[-10,9,-7,-6,10,-6,3,10,7,-7,4,1],[3,-8,-1,-1,8,-7,-8,3,-1,6,-6,-7],[-10,5,-6,-3,6,-7,6,10,-9,-10,-7,4]],[[-3,-3,-7,-3,-5,-2,9,-1,1,-2,7,3],[-8,-2,10,-3,8,-4,-6,-3,7,1,5,1],[-9,4,-4,3,-2,6,-1,-4,5,-4,-5,10],[-6,-8,-3,6,-1,-10,-7,-6,8,-8,-9,9],[-10,-4,4,7,-5,1,-3,1,-7,-10,6,3],[5,6,-6,9,8,3,7,1,6,-9,-9,4],[3,-2,7,4,9,-10,-3,-2,-2,4,-4,1],[-5,8,3,9,5,5,-7,6,9,2,6,-4],[9,-8,-2,-3,-1,10,5,8,-1,4,3,3],[-7,-3,-8,-1,-8,-10,-10,-7,3,3,-7,10]],[[5,5,5,10,-4,4,4,9,-4,10,9,5],[5,4,10,-1,7,4,5,-3,-7,-10,-2,-10],[-7,2,-8,-10,6,6,-7,2,-2,-3,8,-7],[-2,-5,8,-3,-6,1,-2,8,4,-6,10,4],[-6,-2,-4,1,-7,-2,-2,10,-10,3,-3,-1],[-6,7,-5,-1,-9,-5,-1,10,-3,-3,-7,-4],[-5,10,7,-4,-8,-10,-3,4,-3,6,7,1],[8,6,8,-4,-6,-10,6,7,-8,-7,-9,4],[1,-3,-8,10,-8,-3,4,-9,2,3,-5,1],[9,-4,-10,8,10,10,8,2,-4,-2,2,1]],[[1,3,-4,7,4,-2,2,4,3,-8,5,7],[-4,-10,-8,-2,4,-5,2,4,5,-8,7,-9],[-7,-1,6,4,7,-10,-4,6,-10,8,6,5],[9,-10,-7,-7,3,-9,-8,-1,-6,1,-3,-9],[9,4,9,-7,-5,7,6,-8,-3,-10,-9,-5],[-3,-4,3,-1,1,8,-7,10,-3,-3,10,10],[8,2,2,-2,-4,-3,-10,-7,-2,-10,-1,-10],[-7,3,-6,-1,-2,4,10,9,2,1,8,10],[-5,6,3,8,1,-9,4,-3,-5,-10,-1,-1],[3,-5,-9,9,-7,10,5,2,-9,2,1,8]],[[10,-10,-7,4,-2,10,-3,-5,-8,-10,3,8],[3,5,-5,9,-1,6,10,1,-10,3,-4,6],[3,4,10,-6,-1,-8,-6,-2,7,-6,-2,1],[9,-7,-2,4,1,-1,-1,-3,-10,1,-7,2],[2,3,6,-6,-7,6,8,-5,10,-9,3,-5],[4,-6,10,-6,-5,-6,10,5,-7,-7,3,-3],[7,5,-3,-2,8,-9,-7,1,-4,4,3,3],[2,-4,-3,-9,-8,-2,-7,-9,4,5,4,5],[5,4,-1,-9,-9,8,-1,-4,-3,1,1,-9],[9,-6,10,-3,-3,4,-5,6,7,8,5,6]],[[-6,-10,-10,-2,2,3,1,6,2,9,4,-1],[-1,8,1,-6,4,6,4,2,7,-8,1,4],[6,9,1,1,-1,10,7,-2,1,-5,-5,-10],[2,1,-2,7,10,-9,7,5,-1,1,10,-8],[-1,-5,-8,9,3,-5,6,-2,-5,-9,1,2],[8,9,-9,10,-10,6,-10,-9,-6,-7,-4,9],[9,4,2,3,1,8,1,-10,3,-8,-1,-7],[1,9,2,-7,-6,3,10,7,-8,-1,-5,9],[-9,2,-5,-6,2,2,-3,-6,-3,-6,3,-4],[10,-1,8,-2,8,-6,-4,9,-6,-1,3,10]],[[6,-7,-9,3,6,-2,-7,-1,10,-10,-10,10],[2,-6,1,-1,2,-10,-8,-8,-9,1,7,-1],[-9,-1,9,-4,-7,10,-6,6,10,7,-1,4],[-7,5,5,3,8,3,-7,2,9,1,2,3],[5,10,7,5,-7,10,-8,-7,6,4,9,7],[-8,3,-6,-2,6,-7,5,9,-4,-5,-3,-1],[-4,-4,2,1,10,10,10,-8,-3,9,9,-10],[-6,-7,9,8,2,-8,-3,-4,5,-10,-3,3],[-3,4,2,-7,10,7,-2,5,-9,10,-4,-7],[-8,7,-5,-9,-5,-10,-8,-5,-3,-8,-9,2]],[[-5,-2,-9,-1,-7,-10,9,1,-4,-8,10,-1],[-8,-7,-3,9,-1,9,1,7,-8,-8,-8,-8],[-10,7,2,2,-8,-8,-1,-10,-7,4,-1,-6],[10,6,3,-2,-4,4,8,7,8,-8,-4,1],[9,1,-6,1,-3,6,2,-10,7,-2,3,-1],[-5,-9,-7,-2,8,8,-2,-4,5,10,7,2],[5,9,3,8,8,9,-2,2,6,-5,-9,1],[6,1,-1,-7,9,4,-5,2,-10,9,-3,3],[10,-8,-7,-7,2,8,3,10,3,-5,-6,2],[-7,-9,1,-10,10,-4,-8,-9,8,-4,3,4]],[[9,4,6,1,-6,-4,4,10,3,-8,4,1],[-5,3,-10,5,6,-3,9,6,8,-4,5,4],[-7,-8,10,-3,4,-6,-2,-4,-2,1,-2,-7],[-6,-3,-7,8,9,-7,7,5,-5,-8,4,7],[8,7,4,2,-7,2,2,-9,8,-2,-5,6],[10,9,5,-9,-6,5,-4,-2,2,6,4,6],[9,-6,-5,-4,-6,8,-1,-4,-5,8,8,2],[-6,5,-4,-1,-9,7,9,2,6,-9,-8,5],[4,5,-5,-1,5,-10,-8,-2,-10,-4,2,-6],[-5,7,-8,7,8,-3,8,6,1,-2,9,-8]],[[3,-9,6,-5,-10,4,-7,-3,4,-9,-9,6],[3,9,-2,-2,-8,1,-6,-7,-1,8,4,4],[-7,-8,10,-6,-2,6,3,10,-8,-5,7,5],[-3,-5,-2,4,-2,6,8,6,1,5,-9,-5],[-8,-3,4,-3,1,-5,9,-4,2,2,4,-4],[-9,10,6,6,8,8,-9,1,3,3,-3,-2],[7,-9,-3,9,-1,-9,-4,2,-6,6,-3,3],[2,7,-5,2,-2,-4,-3,-6,-1,5,2,9],[-8,-3,-1,9,4,-9,-5,-10,4,-4,6,3],[-5,-5,6,4,7,4,-4,9,9,7,-1,-2]],[[1,-1,-6,-6,-3,-7,-5,2,10,9,-9,2],[-8,-5,-5,3,-3,-5,-9,9,2,-10,10,-8],[-7,4,7,7,6,4,1,7,2,-4,-1,-2],[10,9,-5,10,-1,-10,-10,-4,1,8,-7,-5],[-5,7,-1,-10,-2,-2,-3,9,-7,-4,7,3],[-10,-9,4,-6,-2,-6,4,7,4,-3,4,-4],[-2,-7,-10,9,1,-7,-2,5,-5,-1,8,5],[9,-8,-9,-5,-1,-9,5,1,6,3,10,-3],[1,-4,-4,-1,-6,-8,-1,5,5,5,2,6],[-5,-5,8,-7,-4,10,-9,-10,1,-9,3,6]]], dtype = "int32")#candidate|1139|(13, 10, 12)|const|int32
var_1140 = relay.var("var_1140", dtype = "int32", shape = (13, 10, 12))#candidate|1140|(13, 10, 12)|var|int32
bop_1141 = relay.subtract(const_1139.astype('int32'), relay.reshape(var_1140.astype('int32'), relay.shape_of(const_1139))) # shape=(13, 10, 12)
uop_1144 = relay.sin(var_1140.astype('float64')) # shape=(13, 10, 12)
uop_1146 = relay.sinh(uop_1144.astype('float32')) # shape=(13, 10, 12)
bop_1152 = relay.not_equal(uop_1144.astype('bool'), relay.reshape(uop_1146.astype('bool'), relay.shape_of(uop_1144))) # shape=(13, 10, 12)
uop_1155 = relay.sigmoid(bop_1152.astype('float64')) # shape=(13, 10, 12)
bop_1157 = relay.less_equal(bop_1152.astype('bool'), relay.reshape(const_1139.astype('bool'), relay.shape_of(bop_1152))) # shape=(13, 10, 12)
output = relay.Tuple([bop_1141,uop_1155,bop_1157,])
output2 = relay.Tuple([bop_1141,uop_1155,bop_1157,])
func_1171 = relay.Function([var_1140,], output)
mod['func_1171'] = func_1171
mod = relay.transform.InferType()(mod)
var_1172 = relay.var("var_1172", dtype = "int32", shape = (13, 10, 12))#candidate|1172|(13, 10, 12)|var|int32
output = func_1171(var_1172)
func_1173 = relay.Function([var_1172], output)
mutated_mod['func_1173'] = func_1173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1430 = relay.var("var_1430", dtype = "int8", shape = ())#candidate|1430|()|var|int8
const_1431 = relay.const([[[-8,4,-10,-5,-3,-7,2,-3,-2,5,-10,-7,-2,10],[9,3,-8,7,1,4,4,9,9,3,4,3,8,-3],[-4,8,-6,3,7,-1,-3,-4,-8,3,5,-9,5,5],[1,6,2,3,4,-1,7,1,8,-6,-8,-6,-6,4]]], dtype = "int8")#candidate|1431|(1, 4, 14)|const|int8
bop_1432 = relay.add(var_1430.astype('int8'), const_1431.astype('int8')) # shape=(1, 4, 14)
output = relay.Tuple([bop_1432,])
output2 = relay.Tuple([bop_1432,])
func_1442 = relay.Function([var_1430,], output)
mod['func_1442'] = func_1442
mod = relay.transform.InferType()(mod)
mutated_mod['func_1442'] = func_1442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1443 = relay.var("var_1443", dtype = "int8", shape = ())#candidate|1443|()|var|int8
func_1442_call = mutated_mod.get_global_var('func_1442')
call_1444 = func_1442_call(var_1443)
output = call_1444
func_1445 = relay.Function([var_1443], output)
mutated_mod['func_1445'] = func_1445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1471 = relay.var("var_1471", dtype = "float32", shape = (15, 10, 16))#candidate|1471|(15, 10, 16)|var|float32
uop_1472 = relay.sqrt(var_1471.astype('float32')) # shape=(15, 10, 16)
const_1479 = relay.constdtype = "float32")#candidate|1479|(15, 10, 16)|const|float32
bop_1480 = relay.left_shift(uop_1472.astype('uint32'), relay.reshape(const_1479.astype('uint32'), relay.shape_of(uop_1472))) # shape=(15, 10, 16)
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
var_1484 = relay.var("var_1484", dtype = "uint32", shape = ())#candidate|1484|()|var|uint32
var_1485 = relay.var("var_1485", dtype = "uint32", shape = (216,))#candidate|1485|(216,)|var|uint32
call_1483 = relay.TupleGetItem(func_672_call(relay.reshape(var_1484.astype('uint32'), []), relay.reshape(var_1485.astype('uint32'), [9, 8, 3]), ), 2)
call_1486 = relay.TupleGetItem(func_675_call(relay.reshape(var_1484.astype('uint32'), []), relay.reshape(var_1485.astype('uint32'), [9, 8, 3]), ), 2)
var_1498 = relay.var("var_1498", dtype = "uint32", shape = (15, 10, 16))#candidate|1498|(15, 10, 16)|var|uint32
bop_1499 = relay.logical_and(bop_1480.astype('bool'), relay.reshape(var_1498.astype('bool'), relay.shape_of(bop_1480))) # shape=(15, 10, 16)
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
call_1518 = relay.TupleGetItem(func_672_call(relay.reshape(var_1484.astype('uint32'), []), relay.reshape(var_1485.astype('uint32'), [9, 8, 3]), ), 1)
call_1519 = relay.TupleGetItem(func_675_call(relay.reshape(var_1484.astype('uint32'), []), relay.reshape(var_1485.astype('uint32'), [9, 8, 3]), ), 1)
output = relay.Tuple([call_1483,var_1484,var_1485,bop_1499,call_1518,])
output2 = relay.Tuple([call_1486,var_1484,var_1485,bop_1499,call_1519,])
func_1520 = relay.Function([var_1471,var_1484,var_1485,var_1498,], output)
mod['func_1520'] = func_1520
mod = relay.transform.InferType()(mod)
mutated_mod['func_1520'] = func_1520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1520_call = mutated_mod.get_global_var('func_1520')
var_1522 = relay.var("var_1522", dtype = "float32", shape = (15, 10, 16))#candidate|1522|(15, 10, 16)|var|float32
var_1523 = relay.var("var_1523", dtype = "uint32", shape = ())#candidate|1523|()|var|uint32
var_1524 = relay.var("var_1524", dtype = "uint32", shape = (216,))#candidate|1524|(216,)|var|uint32
var_1525 = relay.var("var_1525", dtype = "uint32", shape = (15, 10, 16))#candidate|1525|(15, 10, 16)|var|uint32
call_1521 = func_1520_call(var_1522,var_1523,var_1524,var_1525,)
output = call_1521
func_1526 = relay.Function([var_1522,var_1523,var_1524,var_1525,], output)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1650 = relay.var("var_1650", dtype = "float32", shape = (1, 5, 10))#candidate|1650|(1, 5, 10)|var|float32
uop_1651 = relay.sinh(var_1650.astype('float32')) # shape=(1, 5, 10)
output = uop_1651
output2 = uop_1651
func_1654 = relay.Function([var_1650,], output)
mod['func_1654'] = func_1654
mod = relay.transform.InferType()(mod)
mutated_mod['func_1654'] = func_1654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1655 = relay.var("var_1655", dtype = "float32", shape = (1, 5, 10))#candidate|1655|(1, 5, 10)|var|float32
func_1654_call = mutated_mod.get_global_var('func_1654')
call_1656 = func_1654_call(var_1655)
output = call_1656
func_1657 = relay.Function([var_1655], output)
mutated_mod['func_1657'] = func_1657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1728 = relay.var("var_1728", dtype = "int8", shape = ())#candidate|1728|()|var|int8
var_1729 = relay.var("var_1729", dtype = "int8", shape = (9, 6, 7))#candidate|1729|(9, 6, 7)|var|int8
bop_1730 = relay.greater(var_1728.astype('bool'), var_1729.astype('bool')) # shape=(9, 6, 7)
func_1654_call = mod.get_global_var('func_1654')
func_1657_call = mutated_mod.get_global_var('func_1657')
const_1744 = relay.const([5.525985,-6.080200,8.402439,-4.898755,0.025427,-6.275904,5.677661,4.497802,4.077289,6.614855,3.717906,2.708397,7.891033,-3.411107,1.010077,-1.971613,-8.517536,-3.361848,-0.695786,7.772399,7.589056,-6.303203,1.518480,-2.782291,6.911425,-6.423727,3.551242,2.562632,9.838968,8.980726,3.730488,8.955176,-7.436626,7.592543,1.134628,1.118601,4.123049,8.084610,9.846583,2.818598,3.409974,8.215160,-4.155144,4.973335,0.081344,-1.818848,1.627868,-1.468708,8.286778,-2.174301], dtype = "float32")#candidate|1744|(50,)|const|float32
call_1743 = func_1654_call(relay.reshape(const_1744.astype('float32'), [1, 5, 10]))
call_1745 = func_1654_call(relay.reshape(const_1744.astype('float32'), [1, 5, 10]))
output = relay.Tuple([bop_1730,call_1743,const_1744,])
output2 = relay.Tuple([bop_1730,call_1745,const_1744,])
func_1746 = relay.Function([var_1728,var_1729,], output)
mod['func_1746'] = func_1746
mod = relay.transform.InferType()(mod)
mutated_mod['func_1746'] = func_1746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1746_call = mutated_mod.get_global_var('func_1746')
var_1748 = relay.var("var_1748", dtype = "int8", shape = ())#candidate|1748|()|var|int8
var_1749 = relay.var("var_1749", dtype = "int8", shape = (9, 6, 7))#candidate|1749|(9, 6, 7)|var|int8
call_1747 = func_1746_call(var_1748,var_1749,)
output = call_1747
func_1750 = relay.Function([var_1748,var_1749,], output)
mutated_mod['func_1750'] = func_1750
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2114 = relay.const([[[-8.510338,2.669185,3.048457,5.119384,9.614359,7.858906,8.158833,2.363538,-4.203257,2.802452,0.456183,-4.075923,-1.138715]],[[-9.516961,1.529118,-1.612205,-3.368328,-2.213122,-9.592970,5.890780,8.046938,-8.679133,-6.138935,-1.203280,-0.112712,-5.362407]]], dtype = "float64")#candidate|2114|(2, 1, 13)|const|float64
const_2115 = relay.const([[[3.344349,2.517985,7.568525,-5.684083,0.084964,0.824257,-6.848118,7.245246,0.148969,-1.398000,2.644035,-9.603814,-3.727784],[-2.398245,-5.802240,0.283925,3.235435,-5.744639,-8.913321,-1.100290,1.808920,5.465606,0.294915,1.887924,3.382356,-7.168566],[-0.911210,-4.260543,-0.049883,-0.834394,9.824274,-2.846859,-0.537106,1.774388,9.726430,9.318455,-8.556405,-9.564423,1.488333],[-1.221357,-7.144758,-0.385364,-0.412665,9.435696,1.272481,8.317535,-1.450507,5.816281,-2.130435,7.174319,-6.491269,3.257950],[-5.865915,-3.744887,4.516509,-5.337118,-6.312656,1.961197,6.923817,8.196302,-2.335116,0.561610,-1.001168,-6.339100,-8.398970],[-4.592361,-9.447649,5.114441,3.511632,-6.746213,-5.405452,-6.295654,6.172637,3.821813,8.522177,1.382990,2.576756,-1.856366],[1.852209,4.694565,-8.059989,0.528471,3.463488,5.190224,-2.629039,2.221997,-1.007752,9.803658,6.836878,5.809889,9.039358],[2.248301,5.522919,-7.973895,-4.025854,-6.929771,6.419722,7.774347,-7.191915,-1.398699,-7.872539,-3.473536,3.348574,8.869096],[-0.683104,1.280644,3.417319,9.478541,-5.898031,-0.997757,1.868869,-5.741281,-8.881243,7.395309,-1.184814,6.957313,6.610585]],[[-5.679078,-6.842796,-2.256061,-3.069992,-6.222428,-0.648958,-0.306596,-3.154756,2.601394,-5.138329,-2.561149,5.195445,9.383170],[0.933179,-0.331122,-2.584614,-1.148688,-4.601840,-8.884098,-1.339894,4.572157,-2.005763,-6.003805,-0.565768,-4.039787,4.284650],[7.105645,-7.910936,-5.714051,2.449591,-8.618788,4.590737,-9.289000,4.249659,-6.984943,-0.369349,-5.127003,-4.593084,8.947317],[-2.929035,1.272332,-8.244181,-0.848717,9.972366,6.040063,-3.150573,2.962467,-3.515523,2.891151,-6.104995,7.072528,6.038832],[5.943648,-1.714614,-7.671490,-7.568134,-8.093600,-8.068114,0.336056,-4.318972,2.528681,-3.282499,-9.485839,-8.963075,0.349613],[-5.307986,9.429371,-0.528527,2.162486,0.145774,-1.004192,5.441809,8.424485,9.895706,4.373379,7.501073,-1.192327,4.125059],[-1.397502,0.812001,-1.858585,-7.948870,5.719618,-5.615045,-3.886802,6.457715,5.075837,9.702707,-9.729625,9.515817,-1.214793],[-4.140611,3.289473,-8.623534,-9.740271,6.891799,1.032718,-0.885125,-4.379025,1.451770,4.442838,2.636617,4.998427,7.018799],[-1.847881,0.168726,9.572562,8.900786,-9.034303,-0.423038,2.461723,3.169081,6.324441,-0.745179,0.525824,-8.395592,-7.144016]]], dtype = "float64")#candidate|2115|(2, 9, 13)|const|float64
bop_2116 = relay.power(const_2114.astype('float64'), const_2115.astype('float64')) # shape=(2, 9, 13)
bop_2137 = relay.subtract(const_2114.astype('float64'), bop_2116.astype('float64')) # shape=(2, 9, 13)
output = relay.Tuple([bop_2137,])
output2 = relay.Tuple([bop_2137,])
func_2165 = relay.Function([], output)
mod['func_2165'] = func_2165
mod = relay.transform.InferType()(mod)
mutated_mod['func_2165'] = func_2165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mutated_mod.get_global_var('func_2165')
call_2166 = func_2165_call()
output = call_2166
func_2167 = relay.Function([], output)
mutated_mod['func_2167'] = func_2167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2170 = relay.TupleGetItem(func_2165_call(), 0)
call_2171 = relay.TupleGetItem(func_2167_call(), 0)
output = call_2170
output2 = call_2171
func_2182 = relay.Function([], output)
mod['func_2182'] = func_2182
mod = relay.transform.InferType()(mod)
mutated_mod['func_2182'] = func_2182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2183 = func_2182_call()
output = call_2183
func_2184 = relay.Function([], output)
mutated_mod['func_2184'] = func_2184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_2200 = func_2182_call()
call_2201 = func_2182_call()
func_1746_call = mod.get_global_var('func_1746')
func_1750_call = mutated_mod.get_global_var('func_1750')
const_2213 = relay.const(-9, dtype = "int8")#candidate|2213|()|const|int8
var_2214 = relay.var("var_2214", dtype = "int8", shape = (126, 3))#candidate|2214|(126, 3)|var|int8
call_2212 = relay.TupleGetItem(func_1746_call(relay.reshape(const_2213.astype('int8'), []), relay.reshape(var_2214.astype('int8'), [9, 6, 7]), ), 2)
call_2215 = relay.TupleGetItem(func_1750_call(relay.reshape(const_2213.astype('int8'), []), relay.reshape(var_2214.astype('int8'), [9, 6, 7]), ), 2)
output = relay.Tuple([call_2200,call_2212,const_2213,var_2214,])
output2 = relay.Tuple([call_2201,call_2215,const_2213,var_2214,])
func_2241 = relay.Function([var_2214,], output)
mod['func_2241'] = func_2241
mod = relay.transform.InferType()(mod)
mutated_mod['func_2241'] = func_2241
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2242 = relay.var("var_2242", dtype = "int8", shape = (126, 3))#candidate|2242|(126, 3)|var|int8
func_2241_call = mutated_mod.get_global_var('func_2241')
call_2243 = func_2241_call(var_2242)
output = call_2243
func_2244 = relay.Function([var_2242], output)
mutated_mod['func_2244'] = func_2244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2252 = relay.TupleGetItem(func_2165_call(), 0)
call_2253 = relay.TupleGetItem(func_2167_call(), 0)
const_2276 = relay.const([[[-2.846904,-7.422230,-8.221408,3.411502,-9.098438,-7.323975,-6.392726,-9.155766,0.890859,5.990257,4.429856,1.789416,9.004782],[7.413419,0.575990,7.005710,8.960735,-0.483193,-2.424504,9.723685,1.333537,5.012382,-0.531257,6.683296,8.265503,-9.855855],[-7.820894,-9.913723,0.198815,5.574355,-9.897726,-6.531343,5.912628,5.550681,-0.737486,-6.210331,-6.447970,-9.862641,-0.875937],[-4.925563,-8.276380,-3.610235,4.072533,-7.085334,-5.904375,3.628371,-7.114385,-6.476254,-1.328892,2.299014,-3.554451,5.508019],[-5.991903,4.678728,3.392309,-8.634582,-0.604787,-3.152887,7.475409,0.195659,3.902288,-7.331328,-7.887347,3.759324,-5.682887],[-9.246911,-4.110532,-7.906524,5.308623,1.868809,5.724332,-5.666403,-7.921998,8.398674,-8.347286,8.968640,-3.388433,3.835042],[-1.854136,0.821551,-7.988031,2.326663,5.850779,9.892185,-7.222308,1.589850,-3.524205,1.758478,8.868061,-1.603657,7.351185],[7.144190,7.653311,8.633961,9.714496,-4.612007,-9.966067,-5.367124,1.339222,-2.806226,7.654841,-7.287439,5.086896,-3.117910],[-3.001109,-2.257762,1.499375,4.575523,4.421623,-6.855539,-3.772709,-3.653316,3.102116,-8.688577,-7.721127,-9.599879,5.177746]],[[8.916950,-6.714783,4.257667,-5.430123,5.610609,3.277643,-1.415257,6.544123,5.679168,4.664760,-0.589241,-5.684224,-4.648028],[9.040373,-0.543015,7.935465,9.921787,-0.391117,-9.102134,7.310413,-1.580616,0.935402,7.667179,4.374436,-9.750212,-2.809075],[5.685208,2.115596,6.479609,-0.043832,3.073343,0.549394,-3.627020,3.634353,-4.530621,-4.746478,1.992298,6.012465,-7.013579],[6.469976,9.032730,1.571141,6.347098,-8.676659,9.841050,-4.941874,-9.813829,0.582312,4.374955,-9.074820,1.061518,-2.667629],[-8.774640,0.808182,4.618919,8.458094,-5.204606,4.258479,4.614369,-2.224555,0.780399,-9.052601,-2.476154,-4.730066,-4.357927],[3.775590,8.692192,8.254472,2.120455,-6.381902,9.856292,-7.090088,-2.615738,5.380928,4.747194,-7.349332,1.569440,5.698319],[-5.959327,2.402070,-2.920452,4.298644,8.916795,3.308158,2.443601,8.994977,1.186334,4.398318,3.681437,7.697688,-8.408142],[8.606708,-4.823181,-7.747594,-2.867009,-0.329112,-7.956134,-8.970473,-7.890015,9.135040,9.971301,-0.262492,-1.162884,-2.711488],[9.770362,-5.591818,1.186686,6.441601,-3.370949,2.280710,1.036271,9.330786,0.728692,6.685596,8.046523,0.764285,8.190536]]], dtype = "float64")#candidate|2276|(2, 9, 13)|const|float64
bop_2277 = relay.multiply(call_2252.astype('uint64'), relay.reshape(const_2276.astype('uint64'), relay.shape_of(call_2252))) # shape=(2, 9, 13)
bop_2280 = relay.multiply(call_2253.astype('uint64'), relay.reshape(const_2276.astype('uint64'), relay.shape_of(call_2253))) # shape=(2, 9, 13)
output = relay.Tuple([bop_2277,])
output2 = relay.Tuple([bop_2280,])
func_2281 = relay.Function([], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
output = func_2281()
func_2282 = relay.Function([], output)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2291 = relay.TupleGetItem(func_2281_call(), 0)
call_2292 = relay.TupleGetItem(func_2282_call(), 0)
var_2294 = relay.var("var_2294", dtype = "uint64", shape = (2, 9, 13))#candidate|2294|(2, 9, 13)|var|uint64
bop_2295 = relay.less_equal(call_2291.astype('bool'), relay.reshape(var_2294.astype('bool'), relay.shape_of(call_2291))) # shape=(2, 9, 13)
bop_2298 = relay.less_equal(call_2292.astype('bool'), relay.reshape(var_2294.astype('bool'), relay.shape_of(call_2292))) # shape=(2, 9, 13)
output = bop_2295
output2 = bop_2298
func_2313 = relay.Function([var_2294,], output)
mod['func_2313'] = func_2313
mod = relay.transform.InferType()(mod)
mutated_mod['func_2313'] = func_2313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2314 = relay.var("var_2314", dtype = "uint64", shape = (2, 9, 13))#candidate|2314|(2, 9, 13)|var|uint64
func_2313_call = mutated_mod.get_global_var('func_2313')
call_2315 = func_2313_call(var_2314)
output = call_2315
func_2316 = relay.Function([var_2314], output)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_2387 = func_2182_call()
call_2388 = func_2182_call()
output = call_2387
output2 = call_2388
func_2389 = relay.Function([], output)
mod['func_2389'] = func_2389
mod = relay.transform.InferType()(mod)
output = func_2389()
func_2390 = relay.Function([], output)
mutated_mod['func_2390'] = func_2390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_2422 = func_2389_call()
call_2423 = func_2389_call()
uop_2455 = relay.log10(call_2422.astype('float32')) # shape=(2, 9, 13)
uop_2457 = relay.log10(call_2423.astype('float32')) # shape=(2, 9, 13)
func_2313_call = mod.get_global_var('func_2313')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_2475 = func_2313_call(relay.reshape(call_2422.astype('uint64'), [2, 9, 13]))
call_2476 = func_2313_call(relay.reshape(call_2422.astype('uint64'), [2, 9, 13]))
output = relay.Tuple([uop_2455,call_2475,])
output2 = relay.Tuple([uop_2457,call_2476,])
func_2484 = relay.Function([], output)
mod['func_2484'] = func_2484
mod = relay.transform.InferType()(mod)
mutated_mod['func_2484'] = func_2484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mutated_mod.get_global_var('func_2484')
call_2485 = func_2484_call()
output = call_2485
func_2486 = relay.Function([], output)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2584 = relay.var("var_2584", dtype = "int8", shape = (8, 11, 1))#candidate|2584|(8, 11, 1)|var|int8
var_2585 = relay.var("var_2585", dtype = "int8", shape = (8, 11, 4))#candidate|2585|(8, 11, 4)|var|int8
bop_2586 = relay.logical_xor(var_2584.astype('int8'), var_2585.astype('int8')) # shape=(8, 11, 4)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_2590 = func_2389_call()
call_2591 = func_2389_call()
uop_2610 = relay.cosh(var_2585.astype('float64')) # shape=(8, 11, 4)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2615 = relay.TupleGetItem(func_2165_call(), 0)
call_2616 = relay.TupleGetItem(func_2167_call(), 0)
uop_2623 = relay.sqrt(uop_2610.astype('float64')) # shape=(8, 11, 4)
func_1746_call = mod.get_global_var('func_1746')
func_1750_call = mutated_mod.get_global_var('func_1750')
var_2628 = relay.var("var_2628", dtype = "int8", shape = ())#candidate|2628|()|var|int8
const_2629 = relay.const([-7,-9,-3,4,-4,-6,6,-9,1,-2,4,-9,-8,-4,6,-4,-6,-8,7,-2,9,-1,10,-9,10,1,-7,-4,-9,-3,-8,2,1,-4,-1,1,-6,6,4,6,7,9,10,-2,-2,6,3,5,-7,2,5,10,8,7,1,6,-3,-5,-8,1,-1,1,4,-6,5,1,-3,-1,-6,5,-2,-7,-7,7,7,-7,-7,-2,6,-4,-8,-9,5,-6,-8,8,1,6,-6,-5,-3,3,1,-10,5,-8,-8,-8,6,-4,4,-4,-7,-2,5,8,-10,-7,8,9,-1,8,3,10,9,-4,6,-7,10,6,7,-1,-8,-9,6,-2,3,6,-8,-5,-2,10,-7,-1,-6,-10,4,1,2,8,6,-6,-10,6,9,-4,8,-9,1,-2,8,4,-5,-3,3,-8,-9,-1,-5,4,-8,-6,-2,-3,-8,2,7,9,-10,-3,-2,-5,3,10,3,-5,4,-7,-8,-1,-5,2,10,-6,-4,3,-9,-8,4,-2,6,8,-9,-8,7,-3,2,-6,9,-3,2,10,6,-4,8,9,-3,3,6,-9,1,-7,9,7,9,4,8,3,-4,8,4,7,6,9,1,7,2,-5,9,-3,-4,10,-1,-9,1,-6,-5,-2,2,5,9,-5,5,-2,-4,1,-1,9,3,6,5,8,-6,-3,2,-2,-9,2,9,-6,-10,-10,-7,1,-8,5,1,-3,6,5,-5,6,6,-6,3,-7,-9,2,-7,-10,-3,8,10,9,9,-1,1,-6,7,-3,4,-1,-8,-10,9,-9,5,-6,-1,1,9,4,-9,-8,-4,5,10,2,-3,4,-2,-4,-10,-2,-5,3,-4,5,-9,10,-3,-3,2,-4,8,9,-9,-7,-3,-2,-3,-4,1,-8,4,6,-2,-4,-2,9,4,-10,-1,4,7,6,-2,-4,-2,5,-10,-3,10,9,6,4,8,-3,-10,-6,-6,6,3,-2,2,-10,10,9,1,-4,7,-6,-1,-5,7,-9,-4,-10], dtype = "int8")#candidate|2629|(378,)|const|int8
call_2627 = relay.TupleGetItem(func_1746_call(relay.reshape(var_2628.astype('int8'), []), relay.reshape(const_2629.astype('int8'), [9, 6, 7]), ), 2)
call_2630 = relay.TupleGetItem(func_1750_call(relay.reshape(var_2628.astype('int8'), []), relay.reshape(const_2629.astype('int8'), [9, 6, 7]), ), 2)
output = relay.Tuple([bop_2586,call_2590,call_2615,uop_2623,call_2627,var_2628,const_2629,])
output2 = relay.Tuple([bop_2586,call_2591,call_2616,uop_2623,call_2630,var_2628,const_2629,])
func_2650 = relay.Function([var_2584,var_2585,var_2628,], output)
mod['func_2650'] = func_2650
mod = relay.transform.InferType()(mod)
mutated_mod['func_2650'] = func_2650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2650_call = mutated_mod.get_global_var('func_2650')
var_2652 = relay.var("var_2652", dtype = "int8", shape = (8, 11, 1))#candidate|2652|(8, 11, 1)|var|int8
var_2653 = relay.var("var_2653", dtype = "int8", shape = (8, 11, 4))#candidate|2653|(8, 11, 4)|var|int8
var_2654 = relay.var("var_2654", dtype = "int8", shape = ())#candidate|2654|()|var|int8
call_2651 = func_2650_call(var_2652,var_2653,var_2654,)
output = call_2651
func_2655 = relay.Function([var_2652,var_2653,var_2654,], output)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2662 = relay.TupleGetItem(func_2281_call(), 0)
call_2663 = relay.TupleGetItem(func_2282_call(), 0)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_2674 = func_2182_call()
call_2675 = func_2182_call()
output = relay.Tuple([call_2662,call_2674,])
output2 = relay.Tuple([call_2663,call_2675,])
func_2677 = relay.Function([], output)
mod['func_2677'] = func_2677
mod = relay.transform.InferType()(mod)
output = func_2677()
func_2678 = relay.Function([], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2717 = relay.TupleGetItem(func_2165_call(), 0)
call_2718 = relay.TupleGetItem(func_2167_call(), 0)
output = relay.Tuple([call_2717,])
output2 = relay.Tuple([call_2718,])
func_2730 = relay.Function([], output)
mod['func_2730'] = func_2730
mod = relay.transform.InferType()(mod)
mutated_mod['func_2730'] = func_2730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2730_call = mutated_mod.get_global_var('func_2730')
call_2731 = func_2730_call()
output = call_2731
func_2732 = relay.Function([], output)
mutated_mod['func_2732'] = func_2732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_2733 = relay.TupleGetItem(func_2484_call(), 1)
call_2734 = relay.TupleGetItem(func_2486_call(), 1)
output = call_2733
output2 = call_2734
func_2736 = relay.Function([], output)
mod['func_2736'] = func_2736
mod = relay.transform.InferType()(mod)
output = func_2736()
func_2737 = relay.Function([], output)
mutated_mod['func_2737'] = func_2737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_2772 = func_2389_call()
call_2773 = func_2389_call()
func_1442_call = mod.get_global_var('func_1442')
func_1445_call = mutated_mod.get_global_var('func_1445')
const_2779 = relay.const(2, dtype = "int8")#candidate|2779|()|const|int8
call_2778 = relay.TupleGetItem(func_1442_call(relay.reshape(const_2779.astype('int8'), [])), 0)
call_2780 = relay.TupleGetItem(func_1445_call(relay.reshape(const_2779.astype('int8'), [])), 0)
output = relay.Tuple([call_2772,call_2778,const_2779,])
output2 = relay.Tuple([call_2773,call_2780,const_2779,])
func_2784 = relay.Function([], output)
mod['func_2784'] = func_2784
mod = relay.transform.InferType()(mod)
mutated_mod['func_2784'] = func_2784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mutated_mod.get_global_var('func_2784')
call_2785 = func_2784_call()
output = call_2785
func_2786 = relay.Function([], output)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_2812 = relay.TupleGetItem(func_2677_call(), 1)
call_2813 = relay.TupleGetItem(func_2678_call(), 1)
output = call_2812
output2 = call_2813
func_2814 = relay.Function([], output)
mod['func_2814'] = func_2814
mod = relay.transform.InferType()(mod)
mutated_mod['func_2814'] = func_2814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2814_call = mutated_mod.get_global_var('func_2814')
call_2815 = func_2814_call()
output = call_2815
func_2816 = relay.Function([], output)
mutated_mod['func_2816'] = func_2816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_2860 = relay.TupleGetItem(func_2165_call(), 0)
call_2861 = relay.TupleGetItem(func_2167_call(), 0)
output = relay.Tuple([call_2860,])
output2 = relay.Tuple([call_2861,])
func_2869 = relay.Function([], output)
mod['func_2869'] = func_2869
mod = relay.transform.InferType()(mod)
output = func_2869()
func_2870 = relay.Function([], output)
mutated_mod['func_2870'] = func_2870
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2887 = relay.const([[[9,-6,8],[1,1,5],[-2,4,-3]],[[1,-2,8],[-4,2,2],[-9,1,-6]],[[-5,6,-10],[4,2,-3],[6,9,-8]],[[-10,3,-2],[-3,7,-8],[-2,1,-1]],[[-9,-2,-6],[7,1,-7],[-4,-1,-9]],[[5,-4,8],[5,-5,10],[-7,2,1]],[[4,-7,6],[4,-3,9],[6,5,-8]]], dtype = "int16")#candidate|2887|(7, 3, 3)|const|int16
var_2888 = relay.var("var_2888", dtype = "int16", shape = (7, 3, 3))#candidate|2888|(7, 3, 3)|var|int16
bop_2889 = relay.maximum(const_2887.astype('int16'), relay.reshape(var_2888.astype('int16'), relay.shape_of(const_2887))) # shape=(7, 3, 3)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
var_2917 = relay.var("var_2917", dtype = "int32", shape = (1560,))#candidate|2917|(1560,)|var|int32
call_2916 = relay.TupleGetItem(func_1171_call(relay.reshape(var_2917.astype('int32'), [13, 10, 12])), 1)
call_2918 = relay.TupleGetItem(func_1173_call(relay.reshape(var_2917.astype('int32'), [13, 10, 12])), 1)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2922 = relay.TupleGetItem(func_2281_call(), 0)
call_2923 = relay.TupleGetItem(func_2282_call(), 0)
output = relay.Tuple([bop_2889,call_2916,var_2917,call_2922,])
output2 = relay.Tuple([bop_2889,call_2918,var_2917,call_2923,])
func_2939 = relay.Function([var_2888,var_2917,], output)
mod['func_2939'] = func_2939
mod = relay.transform.InferType()(mod)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2939_call = mutated_mod.get_global_var('func_2939')
var_2941 = relay.var("var_2941", dtype = "int16", shape = (7, 3, 3))#candidate|2941|(7, 3, 3)|var|int16
var_2942 = relay.var("var_2942", dtype = "int32", shape = (1560,))#candidate|2942|(1560,)|var|int32
call_2940 = func_2939_call(var_2941,var_2942,)
output = call_2940
func_2943 = relay.Function([var_2941,var_2942,], output)
mutated_mod['func_2943'] = func_2943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2814_call = mod.get_global_var('func_2814')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_2945 = func_2814_call()
call_2946 = func_2814_call()
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_2957 = func_2182_call()
call_2958 = func_2182_call()
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_2962 = func_2182_call()
call_2963 = func_2182_call()
uop_2973 = relay.asinh(call_2945.astype('float64')) # shape=(2, 9, 13)
uop_2975 = relay.asinh(call_2946.astype('float64')) # shape=(2, 9, 13)
output = relay.Tuple([call_2957,call_2962,uop_2973,])
output2 = relay.Tuple([call_2958,call_2963,uop_2975,])
func_2984 = relay.Function([], output)
mod['func_2984'] = func_2984
mod = relay.transform.InferType()(mod)
output = func_2984()
func_2985 = relay.Function([], output)
mutated_mod['func_2985'] = func_2985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3001 = relay.var("var_3001", dtype = "float64", shape = (12, 5, 1))#candidate|3001|(12, 5, 1)|var|float64
uop_3002 = relay.atan(var_3001.astype('float64')) # shape=(12, 5, 1)
output = relay.Tuple([uop_3002,])
output2 = relay.Tuple([uop_3002,])
func_3011 = relay.Function([var_3001,], output)
mod['func_3011'] = func_3011
mod = relay.transform.InferType()(mod)
mutated_mod['func_3011'] = func_3011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3012 = relay.var("var_3012", dtype = "float64", shape = (12, 5, 1))#candidate|3012|(12, 5, 1)|var|float64
func_3011_call = mutated_mod.get_global_var('func_3011')
call_3013 = func_3011_call(var_3012)
output = call_3013
func_3014 = relay.Function([var_3012], output)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2814_call = mod.get_global_var('func_2814')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_3031 = func_2814_call()
call_3032 = func_2814_call()
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_3033 = relay.TupleGetItem(func_2281_call(), 0)
call_3034 = relay.TupleGetItem(func_2282_call(), 0)
output = relay.Tuple([call_3031,call_3033,])
output2 = relay.Tuple([call_3032,call_3034,])
func_3048 = relay.Function([], output)
mod['func_3048'] = func_3048
mod = relay.transform.InferType()(mod)
output = func_3048()
func_3049 = relay.Function([], output)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_3052 = func_2736_call()
call_3053 = func_2736_call()
output = relay.Tuple([call_3052,])
output2 = relay.Tuple([call_3053,])
func_3071 = relay.Function([], output)
mod['func_3071'] = func_3071
mod = relay.transform.InferType()(mod)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mutated_mod.get_global_var('func_3071')
call_3072 = func_3071_call()
output = call_3072
func_3073 = relay.Function([], output)
mutated_mod['func_3073'] = func_3073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mod.get_global_var('func_2984')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_3157 = relay.TupleGetItem(func_2984_call(), 1)
call_3158 = relay.TupleGetItem(func_2985_call(), 1)
func_2313_call = mod.get_global_var('func_2313')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_3167 = func_2313_call(relay.reshape(call_3157.astype('uint64'), [2, 9, 13]))
call_3168 = func_2313_call(relay.reshape(call_3157.astype('uint64'), [2, 9, 13]))
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_3177 = relay.TupleGetItem(func_2784_call(), 2)
call_3178 = relay.TupleGetItem(func_2786_call(), 2)
output = relay.Tuple([call_3157,call_3167,call_3177,])
output2 = relay.Tuple([call_3158,call_3168,call_3178,])
func_3179 = relay.Function([], output)
mod['func_3179'] = func_3179
mod = relay.transform.InferType()(mod)
mutated_mod['func_3179'] = func_3179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mutated_mod.get_global_var('func_3179')
call_3180 = func_3179_call()
output = call_3180
func_3181 = relay.Function([], output)
mutated_mod['func_3181'] = func_3181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_3221 = relay.TupleGetItem(func_2165_call(), 0)
call_3222 = relay.TupleGetItem(func_2167_call(), 0)
output = call_3221
output2 = call_3222
func_3245 = relay.Function([], output)
mod['func_3245'] = func_3245
mod = relay.transform.InferType()(mod)
output = func_3245()
func_3246 = relay.Function([], output)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3298 = relay.var("var_3298", dtype = "float32", shape = (8, 12, 5))#candidate|3298|(8, 12, 5)|var|float32
uop_3299 = relay.atanh(var_3298.astype('float32')) # shape=(8, 12, 5)
output = uop_3299
output2 = uop_3299
func_3323 = relay.Function([var_3298,], output)
mod['func_3323'] = func_3323
mod = relay.transform.InferType()(mod)
var_3324 = relay.var("var_3324", dtype = "float32", shape = (8, 12, 5))#candidate|3324|(8, 12, 5)|var|float32
output = func_3323(var_3324)
func_3325 = relay.Function([var_3324], output)
mutated_mod['func_3325'] = func_3325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3392 = relay.var("var_3392", dtype = "float64", shape = ())#candidate|3392|()|var|float64
var_3393 = relay.var("var_3393", dtype = "float64", shape = (16, 1))#candidate|3393|(16, 1)|var|float64
bop_3394 = relay.power(var_3392.astype('float64'), var_3393.astype('float64')) # shape=(16, 1)
output = relay.Tuple([bop_3394,])
output2 = relay.Tuple([bop_3394,])
func_3402 = relay.Function([var_3392,var_3393,], output)
mod['func_3402'] = func_3402
mod = relay.transform.InferType()(mod)
var_3403 = relay.var("var_3403", dtype = "float64", shape = ())#candidate|3403|()|var|float64
var_3404 = relay.var("var_3404", dtype = "float64", shape = (16, 1))#candidate|3404|(16, 1)|var|float64
output = func_3402(var_3403,var_3404,)
func_3405 = relay.Function([var_3403,var_3404,], output)
mutated_mod['func_3405'] = func_3405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_3424 = func_2736_call()
call_3425 = func_2736_call()
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
const_3430 = relay.const([6.734269,1.263994,0.987762,-6.719522,-5.144832,4.743225,1.841676,7.218955,-2.192071,3.292103,-1.950799,6.840178,-1.188058,-2.036788,-6.995422,2.503381,1.884224,-4.065561,2.438350,-5.645240,1.138872,-2.701560,5.002704,-3.224172,-4.143131,-3.332244,-8.266840,-9.320509,-3.457373,-8.281506], dtype = "float64")#candidate|3430|(30,)|const|float64
call_3429 = relay.TupleGetItem(func_3_call(relay.reshape(const_3430.astype('float64'), [2, 3, 5])), 0)
call_3431 = relay.TupleGetItem(func_5_call(relay.reshape(const_3430.astype('float64'), [2, 3, 5])), 0)
uop_3434 = relay.asin(call_3424.astype('float64')) # shape=(2, 9, 13)
uop_3436 = relay.asin(call_3425.astype('float64')) # shape=(2, 9, 13)
uop_3437 = relay.sqrt(uop_3434.astype('float32')) # shape=(2, 9, 13)
uop_3439 = relay.sqrt(uop_3436.astype('float32')) # shape=(2, 9, 13)
output = relay.Tuple([call_3429,const_3430,uop_3437,])
output2 = relay.Tuple([call_3431,const_3430,uop_3439,])
func_3445 = relay.Function([], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
output = func_3445()
func_3446 = relay.Function([], output)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_3460 = func_2182_call()
call_3461 = func_2182_call()
func_1520_call = mod.get_global_var('func_1520')
func_1526_call = mutated_mod.get_global_var('func_1526')
const_3473 = relay.const([-0.677311,-2.002811,2.476464,-0.709864,-6.287363,-6.335092,-1.205865,4.661028,2.812836,-2.267661,3.421454,-7.685947,-4.883048,-0.456148,3.954238,0.362873,-2.813950,6.939768,1.456932,-9.865268,3.252267,5.026928,-6.513003,7.148782,1.993524,-2.532725,-3.673753,2.078470,-5.587905,-7.801806,0.751235,4.692921,0.703404,5.990003,-8.759423,-2.517774,7.473203,-1.970192,-4.521918,7.732167,8.791892,0.872023,-3.207875,-1.873438,-6.302617,6.631936,-1.716497,4.231684,0.049332,4.066911,8.748698,8.617289,6.103171,-3.133461,7.392852,1.341793,-9.345015,1.099173,6.903125,5.103156,-0.895152,-4.421014,6.928728,7.583072,-3.945519,2.614364,-6.680599,-4.171055,-0.189580,-8.901186,2.690170,-2.692332,-1.694634,-6.507792,-1.685318,1.633436,-8.128666,3.414117,2.046714,-5.174722,1.953607,6.523277,0.322034,-4.705238,7.025325,9.538495,-2.734934,-3.034620,1.445920,2.866605,-3.125613,1.261208,-3.802693,-9.685134,8.303351,6.064737,-7.350002,-6.697332,8.383034,2.320988,1.917405,4.278729,6.547137,-0.489083,-2.802110,-6.420642,-6.674475,-7.902818,-1.116995,2.880425,4.686746,9.183122,8.281541,3.975566,-9.409505,7.092863,-0.154910,1.601397,-8.019057,-0.654755,7.041849,7.183961,-4.787845,-4.475186,5.642544,-2.009820,4.920917,-7.539445,-8.614671,4.596989,7.420751,-2.121903,2.082296,2.764274,-2.502439,-1.013714,-7.588550,7.702937,8.920893,7.543752,2.013303,-0.829393,6.859516,-1.933516,-3.438641,-5.225348,-6.835012,0.871335,7.407201,-7.903340,8.028295,6.338810,-5.655884,-5.673905,4.439911,-1.904164,-6.349907,6.158572,-0.578089,8.948349,7.553498,-0.191994,-0.341875,7.823655,-3.400851,4.756997,-4.660365,0.154949,-2.437260,5.844332,2.403813,-1.902506,-2.374726,-9.107263,1.696796,2.765387,1.779328,3.970946,-5.153167,4.562869,-0.231125,-4.553176,-2.209904,6.319704,2.022263,-6.133261,2.378636,-7.482807,-1.350128,-4.446366,-5.576131,-3.733580,2.400407,-0.366003,-2.063407,-6.615421,-0.709426,3.440367,-6.753927,8.511490,5.418511,-3.567559,1.811550,-4.049435,2.387372,0.576563,8.912004,-3.347526,6.097621,-1.237630,-3.592530,-4.766842,3.538051,5.138384,4.594515,2.606698,-2.513832,5.719030,3.074005,1.574264,-5.252531,-5.877654,-0.616779,-0.884526,0.175740,9.709373,3.289206,1.437337,-0.754397,-5.744596,2.472705,-2.861496,6.113261,0.264477,-0.992090,-6.487969,-7.741305,-4.225791,6.875301,-9.757653,1.962636,-7.320235,-4.668394,7.554880,1.064682,-0.970750,8.707954,-6.275309,-9.299445,7.878086,7.225405,4.309997,2.697305,-3.906111,-2.185035,8.534790,4.092328,-4.188851,7.847187,-6.177752,8.441239,-5.148444,4.398388,5.420868,-7.894767,-7.791267,-9.087520,0.643389,9.568064,-4.112593,5.918587,9.474351,-4.160576,-1.151528,3.566076,-1.814673,8.794774,-9.933393,6.569495,-7.410349,-8.951899,7.445185,-0.903407,-1.829074,3.349599,8.477981,6.093439,6.436881,-7.787360,4.705701,-7.607731,-0.085494,-4.829343,-5.052619,-6.467505,-8.718781,-9.838336,-6.542097,-5.183100,-6.424045,5.507708,-5.687986,6.784516,-9.993880,4.459675,8.490248,6.593680,7.615474,-6.088973,-7.005197,-3.515921,-2.257273,-8.347068,1.955909,3.838209,-8.386474,8.762761,1.690666,-3.103802,-0.007852,-3.102113,1.358031,1.572068,2.430865,3.948747,3.031576,-6.311350,-9.358417,-6.657336,-2.757830,2.050923,-1.756278,3.732050,0.691946,-3.323961,-3.575783,-9.568061,-3.874801,-7.322681,1.332915,3.488092,-5.379799,-2.114133,2.397310,-7.011523,6.318764,-9.755488,9.515022,6.096049,-7.189378,-6.925161,-1.340665,-7.592246,3.884481,2.015794,-3.499707,6.469173,-7.947847,8.059096,-6.910897,4.928827,-2.108829,2.675588,-4.087536,-8.083902,-7.626349,5.286904,6.582150,-0.069595,-8.027335,-0.293997,-0.665467,4.960586,3.081280,-6.817506,6.915250,9.331918,-3.090631,9.151441,-0.065180,7.252710,-1.927265,2.972429,-9.339073,-0.007707,2.953840,-2.114028,-0.074832,9.485895,-3.709243,2.281562,9.811527,8.369175,-3.550410,-9.620356,6.889399,5.499215,-7.663808,0.642484,-1.078759,-2.500332,-7.888453,-9.221615,-8.369319,9.884889,4.723188,-2.843040,0.903705,-4.089579,-3.698896,-0.834363,-8.576423,-4.992852,2.720714,-3.671017,8.887842,2.115348,6.279963,1.489351,1.366869,-5.409930,8.996053,-5.587847,5.062291,-0.106034,3.103101,3.731641,2.918962,7.563772,8.132666,-9.248043,-9.828124,7.672792,2.229473,1.153701,4.449996,-6.405291,5.818516,3.552712,9.465321,-1.419514,6.281037,1.831186,9.487798,6.100341,-5.716068,-9.979299,7.611070,-8.485652,-8.622514,-9.787065,1.692923,-1.852511,2.520659,0.537115,-4.130960,4.647821,5.047933,-2.890799,2.142635,-4.569804,3.828764,-3.639422,-8.377241,-8.362942,5.642623,-3.387190,5.806628,6.305198,-4.567001,8.818843,-1.971580,-0.324512,4.460987,1.872361,-9.291432,-3.126824,-4.916026,7.248645,2.613029,3.482939,-1.694919,-1.692417,-0.392823,-3.429376,-5.668837,6.022398,-9.883425,2.554799,-7.510217,7.546235,-5.739569,9.487079,-5.482232,1.697630,-0.719358,-9.752742,-2.189562,-0.266826,-1.142771,5.395050,-3.529197,-6.723227,9.528218,8.431463,-2.513205,-2.155811,-8.517154,1.353976,-9.922639,2.065682,9.177092,2.087810,-8.155684,-5.567704,-8.894413,5.673089,2.332569,-0.084554,5.720449,-3.456149,-3.090023,-6.408640,-5.300121,5.983157,-3.136134,0.587578,4.007749,8.085945,-9.614428,-6.984062,-7.477721,-6.530308,6.696796,-0.838160,-1.543858,-9.153041,4.695107,8.640555,-4.044187,3.636567,8.274606,-1.703568,7.484484,-0.253840,-2.279243,3.965907,0.876577,-5.966017,-8.829056,0.727900,3.060943,6.248521,6.554367,7.967035,8.638146,-6.147153,5.068085,6.796188,7.440171,6.980214,9.490264,-4.033247,-2.762502,8.564823,1.739139,0.344405,4.635909,5.631872,3.499434,-5.129653,1.050054,-3.100319,-3.954563,-0.871559,2.463458,7.406900,-7.209245,9.226761,-3.481401,5.245974,-9.995996,-1.283213,3.868797,-6.082568,-9.416633,9.080098,1.815692,6.072659,-8.992407,1.779483,8.496901,-7.451634,-7.562881,-2.129029,-4.201611,-7.136491,-0.043162,-2.511513,3.492621,-8.122174,-0.318452,4.535724,6.274256,4.179476,-1.502303,-4.751581,2.876827,7.356823,-3.111857,-5.525703,8.714090,8.502179,9.826693,6.945772,-5.035846,8.912706,-9.321889,8.443727,9.054421,1.704287,2.441243,3.047645,-2.797430,2.620003,-1.567293,9.286697,-0.587435,8.611121,4.654035,-2.151438,-0.913251,-6.947394,2.647681,3.334737,-5.371879,-5.957318,-1.805741,-3.526241,6.643601,5.947838,3.484043,4.701060,-3.476941,0.696027,-8.275095,9.299580,5.899351,0.238742,4.474763,3.233184,4.509778,-3.780932,2.487601,-4.895223,-6.867579,-3.815956,-6.466172,2.122210,-7.257157,-6.334967,7.976866,-3.335006,6.238862,9.775124,-8.416537,-7.009651,-4.208966,8.478481,9.153502,-3.489951,6.932801,3.394635,9.448518,-3.014549,-0.331672,-0.310960,1.197971,-7.929602,-2.921331,7.226238,1.717230,-6.439858,-0.919035,5.340086,7.634182,5.399184,5.858693,-0.248047,-2.161931,-2.775125,-9.819406,-3.030176,5.090371,-0.221804,-8.006521,-8.368139,-9.054952,8.133111,-0.456053,-3.099227,2.444829,3.663371,6.696687,2.608939,-2.069687,-2.488796,-9.584332,-6.566943,6.810567,7.877165,2.866215,5.328689,-9.217152,-7.844934,-5.119567,-5.778802,9.517720,-9.935490,0.893022,-5.419092,5.568137,-7.789274,4.580308,-2.764755,-7.907496,-6.376953,7.155689,5.655274,-9.715327,1.257241,-3.097285,-3.137315,3.335380,-8.776061,-7.316928,-8.037246,1.895007,1.423827,-4.805196,-1.526107,6.648374,-6.307353,-7.225751,-7.073795,1.045921,7.705714,4.461921,8.445195,-1.716644,-2.209876,-7.557285,8.997164,1.164600,-6.624309,-4.018038,-9.193842,4.676734,-1.119413,-3.043459,0.234855,-6.610229,-5.144545,-1.114077,-1.812682,5.376207,-0.099293,-2.645978,-1.141789,-8.429025,5.792592,4.152045,8.308191,-1.538261,-0.811697,-1.410205,-0.274475,9.174863,3.024478,6.280218,-4.062700,-1.320857,-2.465184,-7.283804,-0.997597,-7.285390,3.322488,-1.479460,-7.246249,6.016609,5.505105,-1.973992,-5.044825,-6.207988,-8.384523,-0.029549,9.158792,2.720435,5.323929,-6.323165,-7.401060,5.198922,-0.781834,-0.263910,-9.447667,7.834835,-0.190188,4.407821,6.426261,-9.920877,7.896868,6.891221,7.651403,9.832555,-0.432625,-5.203238,-4.525840,1.266681,7.991678,3.820608,2.953412,-8.141857,4.401889,-5.666112,2.586207,-3.302757,0.049711,8.205615,-4.143581,5.486861,-6.855205,3.428560,4.600106,1.566687,1.039602,-9.586702,-9.109530,-2.993103,2.134087,-1.357144,3.151510,6.814811,-4.010221,2.759248,2.661018,-0.197831,-5.304748,-8.596208,-1.121015,4.179200,1.304533,-0.748918,-3.233414,9.488783,5.067843,-5.249857,-7.823996,-6.265246,1.778078,4.549277,-8.205139,-4.396974,8.064962,5.661595,8.196213,8.984326,-0.870249,-3.553720,-7.097925,-1.541735,2.087990,-5.608187,5.932971,1.962426,-1.006420,8.334142,-0.048769,-4.230398,5.406637,2.344689,-7.363245,8.722843,-3.977366,7.990526,1.063379,-3.142517,-0.521193,-3.800508,3.457349,-4.929248,-6.766207,7.679494,-1.465471,-4.850043,5.376175,-0.352754,7.713792,-0.977832,6.575124,-2.106273,-6.936359,4.242845,-0.100175,-1.471226,4.540110,7.717409,-6.225212,-4.309527,-9.544392,-9.548923,-4.520100,7.356881,-8.398599,7.626271,5.532520,-9.719189,7.250943,6.743055,4.564710,7.589225,-4.583189,-3.956109,7.075910,7.150916,-0.485737,8.933797,-5.664954,-4.745694,1.229420,-8.703962,7.115473,-1.390736,0.078239,-0.647779,5.668453,3.583429,0.730171,-6.820422,3.715768,-2.768895,-3.511442,-0.285089,6.422417,2.600262,6.609268,7.870599,8.679532,9.542984,9.365197,7.871860,8.281208,6.544755,1.555162,-4.007989,4.530686,-7.042455,-8.051300,9.253415,3.935626,-0.107496,-9.290678,3.476686,4.534700,-4.894725,9.821615,8.008632,0.331785,2.529281,6.523292,2.156794,-5.357326,-4.480718,-6.185051,-8.617835,-9.026324,-7.081200,8.022588,-1.541957,-9.174202,8.670786,0.868846,9.904538,0.583884,9.693511,-4.305237,-5.578839,-2.087291,3.038436,-6.235064,-1.701497,3.985988,1.643811,-5.242270,5.375674,1.148000,-5.541139,-4.585224,6.404604,-3.009602,-1.409286,1.537404,-7.241422,0.661353,-1.304341,9.037635,-8.568031,-3.484906,2.319864,-6.440433,6.209933,-9.003450,-0.633175,5.545615,-6.305876,-2.722968,-2.127463,4.911028,3.885080,4.275469,-8.375828,-4.030606,1.548619,4.658699,3.988699,4.887935,0.471275,8.065538,-4.618818,3.618073,-4.915297,0.125299,6.007111,4.333164,1.621430,-2.700822,-2.979321,0.877767,9.486637,-2.095363,-4.981874,-1.544652,4.747299,3.480636,-1.580586,3.417480,-7.959629,-7.910698,1.660026,-1.480751,-9.326154,9.905021,6.371059,-2.092783,5.724968,7.959463,-7.685696,6.928366,8.989345,-9.660232,6.064167,4.629356,-7.507293,2.282543,6.841832,6.923380,-1.635637,-5.657627,2.445684,8.300544,-7.334147,-5.169313,-0.415001,-3.361885,-3.877081,6.682878,-2.559127,2.351645,-2.402509,6.781042,-3.929922,9.556859,1.252944,-2.471541,-2.455758,7.057466,-0.785804,-6.578680,1.874652,0.385343,4.318923,5.192046,8.301292,-2.059329,8.923278,0.096860,-8.733916,-9.516546,1.123081,-7.183106,-5.089380,-5.596027,4.252079,0.483472,3.074528,-1.997714,-1.705526,0.569111,-1.982805,4.377200,5.162643,9.392333,-0.324701,3.605251,-2.315018,7.395041,8.153532,-5.361146,-2.526594,1.308885,-7.612448,-7.588843,3.982300,-7.424989,-4.505539,2.609489,-2.826153,6.837166,-2.075763,-7.238415,5.833130,-6.046229,2.612068,1.403033,-3.671294,-5.809191,9.742100,1.344323,-1.192500,-9.260484,-7.854675,-1.559014,3.884324,4.295399,-9.991497,-7.699079,2.055041,-3.413940,4.251723,0.323014,-6.700602,-9.858700,-0.875348,-6.302359,0.528490,4.745980,-6.458337,8.535693,-8.905874,4.736342,-0.338841,-0.175595,-3.143693,0.814590,-7.398248,-2.028488,-9.749960,-9.707855,-3.738774,3.271138,-0.046308,8.567208,-7.754949,-6.128421,7.913848,7.949229,6.735139,-8.474626,-7.705261,-0.648063,-1.391294,6.293328,6.775312,8.107433,-6.775881,-4.818589,-8.378100,5.014936,-1.898550,4.978826,2.257602,1.286597,-1.285242,1.768191,7.731011,9.895217,-4.580737,-4.988408,2.982004,9.728100,-1.225987,-2.526271,-3.300495,5.256759,9.151745,-9.131215,9.239231,6.241958,1.466591,-5.617641,-2.867282,-4.732750,-6.600844,5.590418,0.742931,1.515519,-1.887472,-8.965398,5.656864,6.678640,-3.263573,-0.844666,1.582428,1.285419,-9.968590,-4.728105,8.053643,9.457402,3.245738,1.431252,7.446530,3.565975,-7.062066,-8.983575,0.487644,-4.474635,-1.354070,-8.685144,9.231375,-5.516697,5.622614,-4.885442,-9.447919,2.835252,-2.319734,-3.530575,2.587178,5.217210,9.250675,-3.874906,3.753344,-9.093186,4.811784,-2.694300,-8.157765,-4.513339,1.727472,-3.308796,-3.989541,8.562543,9.922476,-7.713980,2.583803,-3.589232,-5.632936,-2.115780,-4.468354,3.348604,4.907545,-3.025020,-2.687064,4.183625,2.289693,5.453905,2.519534,5.527201,-5.431535,-9.789864,0.320947,-1.765717,1.083730,-9.239591,9.763506,8.305645,8.440856,-3.245638,-8.454029,0.776369,-1.728472,2.743650,1.455356,-2.733772,-4.478657,-9.088724,7.406623,5.423877,1.328723,-7.809161,6.086010,4.265479,9.340627,5.225921,5.148947,-0.411913,6.187130,-0.139388,-4.743916,2.631313,2.766796,-7.584104,-8.400314,2.217347,8.609095,3.258313,8.377676,2.307311,-3.621913,-8.558992,1.765262,8.699236,-0.556648,-1.893287,-9.364355,1.785998,8.899521,0.784828,-2.267047,4.490228,-6.138176,-9.073214,2.850139,8.310729,-1.088473,5.842489,-1.399327,1.002752,-5.152951,9.830792,0.459007,-0.257163,-3.935922,-4.744810,-0.003281,3.406692,-1.218044,-8.798659,8.989363,-0.684726,4.653301,-0.131488,-8.757692,-3.172272,1.660793,-9.338438,7.127689,5.669407,-2.730321,-9.779584,9.199480,6.224055,5.180326,2.659668,6.981940,8.566166,7.066603,-2.811747,1.817320,6.532343,-1.829677,5.748704,-4.394062,-5.643078,-8.045299,-7.831481,-5.896636,-2.516540,8.363311,-9.102120,6.986374,-6.881857,5.980179,-3.588890,6.107216,5.747931,3.725681,3.265206,3.104469,-7.228204,-6.946287,6.202192,1.728095,8.145425,6.419392,2.174716,0.738052,-0.626843,1.782850,5.999308,-9.480046,-8.501674,0.767920,7.407190,0.456258,-1.284639,-9.752196,-0.939231,5.410664,4.314917,-0.266966,9.461239,-1.174940,-9.735203,5.618059,-9.149513,9.376829,7.910826,3.042653,2.513807,6.669068,-0.724409,-8.312687,6.672131,-2.695303,-9.027380,1.619596,-2.315624,0.803271,1.279652,-1.791730,-3.471684,7.943876,-9.679969,1.024278,5.376316,-4.287567,-2.823655,9.527909,-3.533686,-3.761692,-0.117183,9.351249,9.054507,9.826986,5.983373,6.445224,9.828826,1.297517,3.367121,-9.102442,4.800692,-0.907616,8.931177,3.419486,-1.694202,-4.429999,-3.324933,7.046252,1.454554,-7.089295,7.194314,-7.420900,-1.531605,-1.333671,-8.018463,7.909272,4.229042,-8.799425,7.876165,9.054871,0.681047,-4.857390,1.466638,-0.765896,-6.090513,2.527524,-4.234570,7.479939,0.392164,-6.588100,-0.383975,-1.760510,7.079139,-8.402204,-4.801245,-5.271107,9.207333,3.704326,4.603010,0.400150,6.057435,8.539647,5.605668,-2.926555,-7.583119,-6.423446,-7.363167,0.221599,6.447591,-5.391302,2.866814,-2.372418,3.115848,8.352523,2.645242,6.801556,4.044295,-7.068432,7.366736,3.444482,2.286220,-5.942768,-8.796524,5.827443,4.511980,-0.677986,6.417015,8.983199,-1.484746,0.487746,-7.133831,-3.472992,1.865606,-4.235725,-8.628953,-2.042595,5.722122,9.300517,-6.762021,-0.051289,2.389848,-5.250733,7.448390,3.774120,-0.235717,5.726913,4.378186,-5.942048,-1.824846,7.630651,2.981482,-9.931784,-2.961037,-6.026477,-3.958117,-4.519561,5.843488,-0.716937,6.156495,8.290528,-4.301821,-0.982343,-1.205884,-0.100628,5.845723,9.542354,-0.435983,6.450980,-6.552309,0.699325,-9.578341,-3.952018,0.734151,-3.479149,-5.129386,-9.759726,-7.202380,6.969595,-0.253695,9.668811,6.348167,-5.379091,-8.211426,5.540094,7.456122,-0.329089,-3.704323,-1.599839,6.203317,-4.015129,-6.409893,7.725994,2.905808,5.896345,-0.711911,4.269095,-4.771248,6.220923,-1.236655,6.997284,-3.329719,3.209455,-0.249208,-0.535939,6.689614,0.488798,4.991630,-9.253697,8.643935,-0.898368,5.337725,-3.371246,1.396295,-8.091787,-3.220237,-9.567864,9.462086,1.653787,9.332294,-7.490988,3.654840,-3.451264,-0.038011,2.988526,-5.412452,8.102944,-7.758917,4.714777,-1.741931,8.665983,3.754216,9.906964,5.710032,-5.817972,-6.122297,3.813654,4.670986,-5.216767,8.270422,5.854723,-9.470582,0.564492,-6.842658,-4.896969,-0.410568,2.011053,1.638334,6.400054,-0.558414,6.468832,-2.964664,-4.962192,-3.242389,4.619413,-7.460476,-8.047919,7.752361,7.982328,-6.427139,-2.940411,2.382168,4.784893,-1.790131,-5.143765,-3.058584,9.754748,-8.720038,-9.856404,4.515167,-7.638183,0.687142,-8.221706,-2.820527,-3.096993,0.959382,-2.600318,1.358669,-7.437983,-6.696262,-0.623113,-6.220603,2.161308,3.519397,-3.884940,9.400271,-1.370620,5.218716,5.324400,6.611052,-3.842670,1.711993,4.766120,-3.795074,-0.639395,-8.610183,-1.223908,3.293405,-8.942226,1.714342,1.594026,6.213451,2.658471,-9.963942,5.415469,8.677887,-7.913360,-7.955002,5.938892,5.414339,8.945208,-6.762959,3.939101,4.586176,-4.308872,-3.634774,3.459252,1.948754,-4.784661,2.975270,2.822214,1.661484,4.376257,-6.490040,4.932058,2.096254,1.546566,-8.103641,4.020033,-5.439658,-1.040958,9.414000,3.438783,0.410206,-1.958345,5.302066,6.111887,4.610750,-0.333297,7.995394,-1.394106,-7.960434,-4.299374,-5.784862,-3.329863,4.861623,2.920818,-4.447591,9.449031,-3.157857,-0.252118,-3.278718,-3.495223,5.883479,2.619441,-6.604826,2.862561,1.199589,5.193688,4.215833,2.603746,0.484304,6.631692,9.478533,2.555599,-6.916338,4.502211,6.793941,-5.639838,-0.678374,9.694532,3.666230,0.258908,-3.755380,-6.202390,-1.509978,-3.439558,-9.974476,5.294903,-4.902243,7.439499,-9.286912,9.643565,8.704687,-9.803583,6.094075,-9.666429,-6.771107,-2.245317,8.493607,-3.609371,-3.404360,4.266207,-1.120283,-0.105730,7.746165,4.373025,-3.482932,3.708553,8.564392,6.453502,8.335731,0.007760,8.780820,-8.658683,8.889032,-8.767808,4.123570,-3.317756,-2.084519,-1.908828,6.986951,9.347610,2.737718,3.525963,6.295723,8.530759,-1.086654,-5.431309,-1.800670,-0.237574,-5.560255,9.337021,-6.565546,1.430449,-7.263156,-2.938593,-8.996976,8.407451,-6.280908,-4.447080,4.052943,-0.280700,-3.495481,8.511277,4.228958,-9.619560,-5.779996,9.457356,-0.378261,8.256870,2.315120,-2.333681,-9.543261,3.691413,-6.870468,-7.282412,8.773033,2.248931,1.255733,0.339130,3.667550,-8.378844,7.298964,-2.371888,2.948042,3.479885,-9.655502,-9.140463,0.232511,4.662175,1.872307,-4.944896,4.701347,-1.219680,-1.903461,6.149594,-7.305741,-2.941602,-3.397225,9.127239,-2.878890,-9.769744,-0.815496,1.904457,-5.039717,8.215725,-0.399948,-2.500986,4.780852,9.013428,-4.658806,5.934216,-7.381974,1.873217,7.228508,-5.475182,6.318346,-1.405754,2.481083,0.423741,-9.059632,1.252557,-7.495205,-7.921794,6.141279,-2.063261,8.580696,-7.697259,4.111119,-0.165875,-4.698201,-2.948168,3.531474,6.567727,7.982476,-7.803083,6.469641,-7.502067,5.227693,9.198714,-3.454274,9.474470,-6.389275,-5.397246,0.304969,-3.236088,2.087196,2.173215,7.657376,-4.207165,5.906576,-3.929072,-8.979022,5.085181,-5.469333,-7.892562,-3.567802,-5.911047,9.344941,-6.092173,2.014448,-9.707440,8.286907,3.819051,-3.338695,5.350538,-8.125936,-3.460373,5.386979,-1.430211,4.696591,-5.046117,-2.488418,-9.888898,0.364095,-8.757810,1.875663,-9.994084,-4.485727,5.832289,7.893781,2.521080,-5.407299,-9.359291,6.992402,1.687539,-2.537690,-2.888754,-9.031842,-4.879241,7.923987,-8.215256,-9.809343,9.501995,-5.269172,9.924590,-2.440977,3.607600,9.642448,-3.486375,9.945710,2.520299,5.895783,-1.404076,-0.944872,-4.000311,-5.498551,-5.260789,6.554645,7.239676,-3.440219,0.599256,3.883561,2.003355,-4.442488,4.294614,-6.856975,0.737450,-2.793974,1.108697,2.112224,-0.873335,5.009219,-1.515970,8.812166,-9.263227,-5.499687,-4.524641,2.594395,-3.775558,4.194361,8.450267,-7.020382,5.209292,-1.730111,4.147087,-7.711977,6.698581,-5.508407,-1.264291,-0.524012,3.570106,-4.488504,-1.718758,-8.007770,-5.644267,7.062905,8.330701,-3.023071,-8.032077,6.870880,-5.895057,-7.855441,4.236219,1.211985,-6.794303,7.525565,4.835190,3.134421,9.888302,-6.558759,4.691705,8.871072,-9.091140,8.001250,-5.972542,-1.017563,2.585303,2.372543,-9.462072,-7.234484,-5.472548,-6.107171,-3.538759,9.866354,6.764133,5.343383,4.393736,8.683841,-9.795285,2.686789,-4.963454,-5.358779,-3.912118,-9.464560,-1.417851,7.411776,-7.352188,-0.902146,5.845376,-9.201495,-2.447136,8.256553,-3.993827,0.561205,7.920412,-9.158194,-2.926506,2.359490,-3.031472,7.607960,9.510257,0.833411,6.111871,-9.940693,0.364747,3.053092,-0.311527,-1.159305,-4.680850,8.114314,-7.817945,1.026429,-5.980858,3.617387,-2.538798,-1.265791,6.677126,-8.207394,0.253839,9.704134,9.209001,-5.192513,9.466762,6.435335,-6.069508,8.224620,-6.503302,-6.118500,-1.750856,1.907100,-0.790531,-9.161419,8.881563,-2.843430,1.980952,1.960725,7.911719,-2.023851,-1.474322,-9.353112,-5.348736,1.122040,-8.387189,-2.522936,1.865686,1.350442,6.736595,3.059474,-2.611082,2.115413,4.396834,3.203725,7.030325,9.667322,8.037975,-0.711298,-4.982791,-0.525240,4.930421,3.151037,-8.686157,2.284039,-2.101308,-9.896848,-4.940308,-1.664566,-9.609590,-8.972636,3.782269,-1.273966,2.085046,-2.284822,-6.580951,-8.263320,5.270464,2.050290,9.030252,9.768497,6.594358,-1.231644,-7.821450,-6.872068,-1.088659,-2.403863,-2.020103,-9.330473,9.671146,3.700155,8.603518,-6.701709,2.420031,-6.635610,-5.956223,-2.372484,7.145638,7.102862,6.011088,2.862715,1.727708,8.815823,-9.154865,1.200602,9.112057,9.738002,2.947716,1.070025,5.705014,9.936802,-6.070763,-6.947061,-6.564908,7.871372,6.940787,-5.354997,-1.972557,-8.020364,7.628943,-9.592981,3.896360,-4.193607,4.943942,4.726136,1.667539,-1.291889,9.409812,-7.697787,0.446686,7.052854,-4.072104,6.718279,-3.497688,2.391269,6.531839,-0.251202,7.627519,6.635411,-5.189316,-0.137851,6.709677,9.204610,0.941502,5.198445,5.513277,5.016701,-4.325016,-5.477544,-4.004250,-4.490381,-1.598445,-8.852563,9.578202,-8.739656,4.802086,-5.074083,-5.397558,9.720139,9.131434,-0.318212,6.177760,-4.244436,-1.174098,-1.670945,-6.213058,-3.421221,0.305291,-2.449244,1.856906,1.264787,3.312642,5.792837,7.297255,1.816643,8.881558,-8.762381,4.047072,-5.459318,3.166699,9.734007,-9.226386,-5.659905,-6.142200,-6.622060,-0.630597,-3.042389,3.175873,3.920620,-6.769324,9.667597,-1.185691,9.490280,-7.078165,0.315729,-7.113835,8.470016,-2.244993,3.300418,5.166013,-0.433339,0.630728,6.500762,7.351746,2.424188,-2.595242,4.154329,-7.918698,-2.642602,4.167703,1.382797,-3.314575,-8.693139,-5.886921,-6.727273,0.693332,5.190213,5.929302,-0.034240,0.685694,1.799420,-3.376260,-1.914716,6.154296,-9.964538,-1.143617,-0.948115,-0.199400,-9.201212,-5.147938,-9.244866,0.443199,-4.569858,7.137123,5.168625,8.978907,-5.650289,-5.906434,-3.768043,1.077573,-3.622919,-0.381833,6.137277,1.687494,-9.230464,-1.520696,6.104857,-2.493158,-1.716740,-9.810314,7.765062,-7.696369,-3.915422,-5.816113,-8.242468,1.406128,-2.158701,-5.759654,-2.205982,3.022124,9.741784,-2.089054,9.641118,8.778148,-7.271253,-1.769851,6.188933,7.320723,1.998193,-1.699168,5.389042,-1.926620,-4.889684,7.727514,-4.121773,2.391750,-1.361305,-0.529789,-7.561536,-3.082412,-8.314283,-2.329744,4.320650,4.874819,-8.256983,8.618593,9.002109,3.561430,-9.061585,-0.075433,6.031258,-4.171902,1.317816,2.749107,-3.504394,-0.724604,-1.703729,-4.750344,-8.048827,-2.992440,-7.196086,9.391110,1.467026,3.444144,6.824695,-1.463288,0.857630,6.960371,-7.079481,-8.265705,-8.180321,2.436706,-3.992062,-1.885451,0.379718,3.311194,-7.200443,1.890089,9.945111,5.317924,-1.297427,5.521635,7.951123,8.798495,9.133167,-5.114865,-6.178577,3.201865,-7.974009,-4.479594,-6.854269,7.905979,-0.716135,4.158332,3.527260,-0.136035,-3.611731,8.209770,-5.755885,4.543763,-9.913864,2.788864,2.494152,1.104957], dtype = "float32")#candidate|3473|(2400,)|const|float32
const_3474 = relay.const(1, dtype = "uint32")#candidate|3474|()|const|uint32
var_3475 = relay.var("var_3475", dtype = "uint32", shape = (216,))#candidate|3475|(216,)|var|uint32
call_3472 = relay.TupleGetItem(func_1520_call(relay.reshape(const_3473.astype('float32'), [15, 10, 16]), relay.reshape(const_3474.astype('uint32'), []), relay.reshape(var_3475.astype('uint32'), [216,]), relay.reshape(const_3473.astype('uint32'), [15, 10, 16]), ), 0)
call_3476 = relay.TupleGetItem(func_1526_call(relay.reshape(const_3473.astype('float32'), [15, 10, 16]), relay.reshape(const_3474.astype('uint32'), []), relay.reshape(var_3475.astype('uint32'), [216,]), relay.reshape(const_3473.astype('uint32'), [15, 10, 16]), ), 0)
func_1654_call = mod.get_global_var('func_1654')
func_1657_call = mutated_mod.get_global_var('func_1657')
var_3481 = relay.var("var_3481", dtype = "float32", shape = (50,))#candidate|3481|(50,)|var|float32
call_3480 = func_1654_call(relay.reshape(var_3481.astype('float32'), [1, 5, 10]))
call_3482 = func_1654_call(relay.reshape(var_3481.astype('float32'), [1, 5, 10]))
output = relay.Tuple([call_3460,call_3472,const_3473,const_3474,var_3475,call_3480,var_3481,])
output2 = relay.Tuple([call_3461,call_3476,const_3473,const_3474,var_3475,call_3482,var_3481,])
func_3483 = relay.Function([var_3475,var_3481,], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
var_3484 = relay.var("var_3484", dtype = "uint32", shape = (216,))#candidate|3484|(216,)|var|uint32
var_3485 = relay.var("var_3485", dtype = "float32", shape = (50,))#candidate|3485|(50,)|var|float32
output = func_3483(var_3484,var_3485,)
func_3486 = relay.Function([var_3484,var_3485,], output)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_3498 = func_2389_call()
call_3499 = func_2389_call()
func_1442_call = mod.get_global_var('func_1442')
func_1445_call = mutated_mod.get_global_var('func_1445')
const_3512 = relay.const(-5, dtype = "int8")#candidate|3512|()|const|int8
call_3511 = relay.TupleGetItem(func_1442_call(relay.reshape(const_3512.astype('int8'), [])), 0)
call_3513 = relay.TupleGetItem(func_1445_call(relay.reshape(const_3512.astype('int8'), [])), 0)
func_770_call = mod.get_global_var('func_770')
func_772_call = mutated_mod.get_global_var('func_772')
var_3518 = relay.var("var_3518", dtype = "uint16", shape = (392,))#candidate|3518|(392,)|var|uint16
call_3517 = relay.TupleGetItem(func_770_call(relay.reshape(var_3518.astype('uint16'), [14, 7, 4])), 1)
call_3519 = relay.TupleGetItem(func_772_call(relay.reshape(var_3518.astype('uint16'), [14, 7, 4])), 1)
func_2939_call = mod.get_global_var('func_2939')
func_2943_call = mutated_mod.get_global_var('func_2943')
var_3522 = relay.var("var_3522", dtype = "int16", shape = (63,))#candidate|3522|(63,)|var|int16
const_3523 = relay.const([10,2,6,-3,-8,5,-2,-6,-8,5,5,-5,-7,7,7,-6,10,8,-4,5,8,3,2,2,4,-2,-5,1,-7,1,-2,10,-5,-8,-1,-2,4,-9,-5,-6,8,-10,-6,7,7,7,7,1,-4,-4,3,4,-1,4,3,7,-10,4,-7,-9,-1,6,-4,3,-8,-2,2,2,10,3,8,3,-8,3,-10,-2,9,-2,-6,10,1,-7,-10,8,5,-3,1,10,-5,-5,-7,7,-6,8,3,6,-4,6,-3,5,-4,-2,6,-4,-7,7,7,-10,4,-5,-10,10,-5,9,9,-6,4,-9,2,-1,-6,2,6,-6,-10,7,1,3,4,-4,5,7,9,-10,-3,1,3,3,-5,-8,-10,-4,-2,7,-10,10,-2,-7,-7,4,-9,-9,8,10,3,-8,-4,-3,1,4,-2,9,1,5,-4,-8,-3,5,-1,3,-6,-4,-5,-1,-1,-10,-9,-5,6,10,8,-4,7,10,-8,-9,-6,-7,3,7,-2,5,7,-4,9,-6,-2,-7,2,6,-2,4,-7,1,10,-4,-7,4,10,-1,-1,-7,9,-3,-3,1,-3,5,10,2,4,-10,6,4,-3,-4,-4,-9,-4,2,-3,-5,1,-8,4,9,-5,-8,3,4,9,-10,10,-3,-6,-2,-9,-5,6,9,3,-7,-7,1,7,7,5,8,-1,-10,8,-5,-10,7,-6,-6,-6,-9,-8,-4,6,-10,1,6,8,8,-1,-1,5,-7,-8,-10,-7,-9,9,-9,-5,6,6,-7,-2,-8,-7,-4,-1,-1,-7,3,-10,-9,6,-6,7,-6,-5,-7,7,2,8,-6,8,-6,-10,8,-1,-1,-5,7,-8,-6,7,2,1,-10,9,-8,5,1,-4,5,6,-2,2,6,4,5,-7,7,-2,-9,-5,7,10,5,-8,9,8,-8,3,-2,-6,-8,5,-3,4,-7,8,7,5,3,-4,-1,6,-3,-3,-5,4,-4,-9,-8,-10,2,-3,5,2,-5,-2,7,6,-8,6,2,7,3,-4,10,7,9,2,-10,-5,9,1,-7,7,-8,7,7,5,-1,-10,-2,-3,-9,-8,-7,3,-10,3,3,-3,5,2,-3,1,-7,-4,-7,1,-2,-4,2,9,6,-9,4,-2,1,10,-3,7,1,9,10,4,7,-3,9,-2,3,-4,3,-5,-1,8,7,2,-1,-8,8,-3,1,-5,7,7,-9,9,8,8,-1,1,-4,-8,3,5,7,10,5,8,3,4,-8,-5,6,-4,-10,7,-10,-10,-8,-6,-3,2,-2,-2,8,8,-8,10,6,3,3,-1,-4,5,8,-6,6,10,10,2,7,-2,2,-1,10,-4,5,-5,6,10,9,-4,-3,2,6,1,-3,10,-5,-4,4,-7,3,7,-1,-5,2,7,4,1,3,-5,3,4,6,-4,-3,-1,-4,-6,-5,5,-10,5,2,-8,-5,3,-8,-9,-4,5,5,-4,4,4,-2,-9,1,-10,7,8,-9,-4,-10,1,6,-1,-2,10,8,-7,4,5,-7,8,1,10,9,-8,4,4,5,-3,-4,-5,8,3,10,-7,10,-3,-1,2,-8,10,-8,-4,-4,2,-9,-8,-2,6,8,-9,9,9,6,2,10,5,-10,2,5,10,2,-8,-9,-6,-10,-5,-6,10,6,7,-6,5,-1,-8,3,-8,-7,1,5,-5,10,-5,-6,10,9,-7,10,-2,9,7,9,-8,6,-2,-7,-5,9,-5,4,-5,5,-9,4,-7,-1,-8,2,5,-5,8,-6,-1,10,7,5,9,6,6,7,-6,8,7,9,-9,-2,8,-9,-2,7,4,-5,-2,1,2,1,-4,-9,-10,-6,-5,-7,8,-2,-4,-4,-2,1,10,2,-10,8,-4,9,-5,5,3,3,-8,4,5,-2,4,3,-7,-6,9,-3,10,9,6,7,7,-1,-8,-1,-2,2,-8,10,1,2,-9,-5,6,-8,9,10,-9,3,7,-10,6,-4,6,-10,1,7,7,-3,-7,5,-8,1,7,5,-7,4,-7,-8,4,10,-9,7,2,-1,1,-4,-1,10,-1,4,10,-1,-6,-9,-4,6,-9,-3,3,9,-10,-6,-8,-10,1,-6,4,7,-6,-2,7,-6,-3,7,-3,-1,-9,-3,-1,-7,9,-3,-1,-4,-7,7,-6,-2,2,-4,-8,-7,10,-6,-4,-5,-6,-7,9,4,-10,1,4,7,-5,-2,-6,1,-10,8,10,9,2,-1,-9,-8,-5,-9,4,-8,6,5,-10,9,3,-6,-3,-7,2,7,-4,-10,-5,8,4,-10,8,4,2,-10,9,8,-2,6,-4,3,9,4,4,-3,10,9,-9,-5,-4,-5,-10,6,7,-4,-6,-6,-2,-9,6,5,5,3,-6,-6,3,7,4,7,-7,2,-10,10,-3,-8,-1,5,6,-10,8,5,7,7,5,-5,-7,-8,7,8,-7,9,1,1,-3,4,-9,5,10,9,9,10,1,2,-5,10,-1,7,-4,-1,-3,2,-3,10,-10,1,-3,5,8,-3,-10,-3,1,-2,2,6,8,7,-5,-7,6,-6,8,4,-1,-6,-10,-1,-1,-8,8,-8,3,10,-4,5,-4,10,6,-7,-1,-9,4,-1,-3,-9,4,7,-5,-5,3,-1,-5,-10,-5,8,-10,6,-7,2,-8,2,2,-9,-8,6,-6,-10,-9,2,7,-1,-8,-4,6,6,-9,-7,-8,8,1,-9,2,-10,2,-5,1,-10,3,-6,10,-4,-8,1,-9,4,-2,9,-6,5,10,-1,-5,1,-4,8,7,-4,5,3,-2,-4,-3,10,-1,-9,4,3,8,-7,9,8,-7,2,-8,4,5,-6,-2,-8,-3,5,5,-5,9,9,5,-7,10,4,6,7,5,-10,2,-1,2,-2,-1,-4,-9,2,10,10,-9,-5,-2,8,8,6,3,6,-3,-6,7,9,-3,-4,10,-1,6,-8,10,6,2,-1,1,-2,-8,-9,8,-1,-10,-4,-8,-1,-2,-3,-5,-2,2,3,1,-6,-6,3,4,5,-8,-4,3,-1,4,-7,2,7,-3,7,-8,2,-9,-7,9,-9,-10,-5,10,-8,-9,-5,-2,-7,3,-8,7,4,-7,1,5,-6,4,-10,7,-3,2,-7,10,-1,8,-3,-1,10,-10,-5,2,-9,-3,5,6,-6,3,5,9,-6,5,-9,8,6,2,-2,5,3,10,-5,3,7,5,1,7,-1,9,-1,-1,3,-10,-8,-6,-10,10,-7,9,10,5,9,9,4,-2,-2,-2,6,2,7,-8,8,-4,-10,-8,-8,2,-5,-7,-8,4,4,7,-7,6,10,-3,-2,1,2,2,10,-7,-4,4,5,-4,-5,9,-1,-8,-8,7,-7,-2,8,9,8,5,-2,4,8,-8,-8,-4,3,9,-2,3,-7,-8,-9,-4,-3,-6,1,-4,-7,-1,9,-3,-9,4,-1,1,-2,-4,6,-7,-9,3,3,9,10,-5,7,-1,-2,-10,-2,2,1,-4,-4,-5,-5,4,-8,10,-5,8,4,-10,4,9,10,1,-7,-8,7,-5,4,10,2,-9,-6,-9,-6,-7,1,-8,7,-4,-8,7,-6,8,10,1,10,9,8,-6,-10,-5,-1,2,6,-4,8,8,2,5,5,-5,7,3,-3,10,-4,-4,9,2,-4,10,6,10,-5,1,3,9,2,-5,-10,10,-1,-8,-2,8,7,-2,5,2,-6,-1,10,1,1,7,-1,7,3,4,6,-3,-9,7,-8,-3,-3,-5,4,5,2,-7,10,6,-9,-1,2,9,1,-3,-8,-3,-1,-6,-4,10,-4,8,-9,9,5,-5,6,-6,2,7,-8,-1,-1,-5,7,-3,-10,-6,7,9,7,-9,-9,-3,-6,3,3,2,10,-10,-1,-9,-4,-2,-2,3,6,-6,6,-8,-10,-6,-4,6,8,-2,-7,-1,-9,1,5,-3,-5,8,8,6,4,10,2,3,-10,-8,7,9,4,7,4,-2,1,-10,5,-7,-8,8,-3,-10,5,3,9,8,-1,-5,-9,4,9,8,-10,5,-4,-9,-6,-1,7,5,-5,9,9,1,-1,7,10,3,2,9,-3,-2,-7,1,8,-10,-8,9,1,7,-8,1,2,10,-4,-10,9,-7,7,-10,2,8,-9], dtype = "int32")#candidate|3523|(1560,)|const|int32
call_3521 = relay.TupleGetItem(func_2939_call(relay.reshape(var_3522.astype('int16'), [7, 3, 3]), relay.reshape(const_3523.astype('int32'), [1560,]), ), 3)
call_3524 = relay.TupleGetItem(func_2943_call(relay.reshape(var_3522.astype('int16'), [7, 3, 3]), relay.reshape(const_3523.astype('int32'), [1560,]), ), 3)
uop_3528 = relay.log(var_3522.astype('float32')) # shape=(63,)
output = relay.Tuple([call_3498,call_3511,const_3512,call_3517,var_3518,call_3521,const_3523,uop_3528,])
output2 = relay.Tuple([call_3499,call_3513,const_3512,call_3519,var_3518,call_3524,const_3523,uop_3528,])
func_3557 = relay.Function([var_3518,var_3522,], output)
mod['func_3557'] = func_3557
mod = relay.transform.InferType()(mod)
var_3558 = relay.var("var_3558", dtype = "uint16", shape = (392,))#candidate|3558|(392,)|var|uint16
var_3559 = relay.var("var_3559", dtype = "int16", shape = (63,))#candidate|3559|(63,)|var|int16
output = func_3557(var_3558,var_3559,)
func_3560 = relay.Function([var_3558,var_3559,], output)
mutated_mod['func_3560'] = func_3560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mod.get_global_var('func_2984')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_3571 = relay.TupleGetItem(func_2984_call(), 1)
call_3572 = relay.TupleGetItem(func_2985_call(), 1)
output = relay.Tuple([call_3571,])
output2 = relay.Tuple([call_3572,])
func_3600 = relay.Function([], output)
mod['func_3600'] = func_3600
mod = relay.transform.InferType()(mod)
mutated_mod['func_3600'] = func_3600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mutated_mod.get_global_var('func_3600')
call_3601 = func_3600_call()
output = call_3601
func_3602 = relay.Function([], output)
mutated_mod['func_3602'] = func_3602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_3665 = func_2736_call()
call_3666 = func_2736_call()
var_3669 = relay.var("var_3669", dtype = "bool", shape = (2, 9, 13))#candidate|3669|(2, 9, 13)|var|bool
bop_3670 = relay.divide(call_3665.astype('float32'), relay.reshape(var_3669.astype('float32'), relay.shape_of(call_3665))) # shape=(2, 9, 13)
bop_3673 = relay.divide(call_3666.astype('float32'), relay.reshape(var_3669.astype('float32'), relay.shape_of(call_3666))) # shape=(2, 9, 13)
output = relay.Tuple([bop_3670,])
output2 = relay.Tuple([bop_3673,])
func_3686 = relay.Function([var_3669,], output)
mod['func_3686'] = func_3686
mod = relay.transform.InferType()(mod)
var_3687 = relay.var("var_3687", dtype = "bool", shape = (2, 9, 13))#candidate|3687|(2, 9, 13)|var|bool
output = func_3686(var_3687)
func_3688 = relay.Function([var_3687], output)
mutated_mod['func_3688'] = func_3688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3703 = relay.var("var_3703", dtype = "uint32", shape = (4, 12, 12))#candidate|3703|(4, 12, 12)|var|uint32
var_3704 = relay.var("var_3704", dtype = "uint32", shape = (4, 12, 12))#candidate|3704|(4, 12, 12)|var|uint32
bop_3705 = relay.greater_equal(var_3703.astype('bool'), relay.reshape(var_3704.astype('bool'), relay.shape_of(var_3703))) # shape=(4, 12, 12)
func_2869_call = mod.get_global_var('func_2869')
func_2870_call = mutated_mod.get_global_var('func_2870')
call_3708 = relay.TupleGetItem(func_2869_call(), 0)
call_3709 = relay.TupleGetItem(func_2870_call(), 0)
func_2650_call = mod.get_global_var('func_2650')
func_2655_call = mutated_mod.get_global_var('func_2655')
const_3725 = relay.const([-7,7,-6,-7,-8,6,10,-5,-8,9,10,7,10,6,-2,-6,-3,-6,9,3,4,5,9,-4,2,-4,-9,8,6,7,-2,6,-7,-8,10,4,-3,9,10,-9,-9,9,-4,7,10,8,6,9,8,10,9,3,-2,5,8,-6,-9,-4,9,-2,5,3,6,7,-7,4,-2,9,-9,-5,10,-1,6,3,7,6,-7,-5,9,9,-8,4,-9,-3,-9,5,-4,10], dtype = "int8")#candidate|3725|(88,)|const|int8
var_3726 = relay.var("var_3726", dtype = "int8", shape = (352,))#candidate|3726|(352,)|var|int8
const_3727 = relay.const(10, dtype = "int8")#candidate|3727|()|const|int8
call_3724 = relay.TupleGetItem(func_2650_call(relay.reshape(const_3725.astype('int8'), [8, 11, 1]), relay.reshape(var_3726.astype('int8'), [8, 11, 4]), relay.reshape(const_3727.astype('int8'), []), ), 3)
call_3728 = relay.TupleGetItem(func_2655_call(relay.reshape(const_3725.astype('int8'), [8, 11, 1]), relay.reshape(var_3726.astype('int8'), [8, 11, 4]), relay.reshape(const_3727.astype('int8'), []), ), 3)
bop_3742 = relay.divide(call_3724.astype('float32'), const_3727.astype('float32')) # shape=(8, 11, 4)
bop_3745 = relay.divide(call_3728.astype('float32'), const_3727.astype('float32')) # shape=(8, 11, 4)
bop_3759 = relay.maximum(const_3727.astype('float32'), var_3703.astype('float32')) # shape=(4, 12, 12)
uop_3795 = relay.sqrt(var_3726.astype('float64')) # shape=(352,)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_3799 = relay.TupleGetItem(func_2281_call(), 0)
call_3800 = relay.TupleGetItem(func_2282_call(), 0)
func_3048_call = mod.get_global_var('func_3048')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_3801 = relay.TupleGetItem(func_3048_call(), 1)
call_3802 = relay.TupleGetItem(func_3049_call(), 1)
bop_3803 = relay.less(var_3703.astype('bool'), const_3727.astype('bool')) # shape=(4, 12, 12)
func_1039_call = mod.get_global_var('func_1039')
func_1042_call = mutated_mod.get_global_var('func_1042')
var_3810 = relay.var("var_3810", dtype = "int8", shape = (560,))#candidate|3810|(560,)|var|int8
call_3809 = relay.TupleGetItem(func_1039_call(relay.reshape(var_3810.astype('int8'), [14, 4, 10])), 5)
call_3811 = relay.TupleGetItem(func_1042_call(relay.reshape(var_3810.astype('int8'), [14, 4, 10])), 5)
func_3245_call = mod.get_global_var('func_3245')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3821 = func_3245_call()
call_3822 = func_3245_call()
bop_3827 = relay.bitwise_or(call_3809.astype('uint64'), const_3727.astype('uint64')) # shape=(14, 4, 910)
bop_3830 = relay.bitwise_or(call_3811.astype('uint64'), const_3727.astype('uint64')) # shape=(14, 4, 910)
func_3402_call = mod.get_global_var('func_3402')
func_3405_call = mutated_mod.get_global_var('func_3405')
const_3832 = relay.const([[-6.953427,-7.543888,9.638159,-9.582443],[-4.896590,-5.996556,2.908384,8.971280],[2.430710,-8.044628,-4.470445,4.587825],[-4.736194,4.185826,8.004144,-2.392390]], dtype = "float64")#candidate|3832|(4, 4)|const|float64
call_3831 = relay.TupleGetItem(func_3402_call(relay.reshape(const_3727.astype('float64'), []), relay.reshape(const_3832.astype('float64'), [16, 1]), ), 0)
call_3833 = relay.TupleGetItem(func_3405_call(relay.reshape(const_3727.astype('float64'), []), relay.reshape(const_3832.astype('float64'), [16, 1]), ), 0)
output = relay.Tuple([bop_3705,call_3708,const_3725,bop_3742,bop_3759,uop_3795,call_3799,call_3801,bop_3803,var_3810,call_3821,bop_3827,call_3831,const_3832,])
output2 = relay.Tuple([bop_3705,call_3709,const_3725,bop_3745,bop_3759,uop_3795,call_3800,call_3802,bop_3803,var_3810,call_3822,bop_3830,call_3833,const_3832,])
func_3837 = relay.Function([var_3703,var_3704,var_3726,var_3810,], output)
mod['func_3837'] = func_3837
mod = relay.transform.InferType()(mod)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3837_call = mutated_mod.get_global_var('func_3837')
var_3839 = relay.var("var_3839", dtype = "uint32", shape = (4, 12, 12))#candidate|3839|(4, 12, 12)|var|uint32
var_3840 = relay.var("var_3840", dtype = "uint32", shape = (4, 12, 12))#candidate|3840|(4, 12, 12)|var|uint32
var_3841 = relay.var("var_3841", dtype = "int8", shape = (352,))#candidate|3841|(352,)|var|int8
var_3842 = relay.var("var_3842", dtype = "int8", shape = (560,))#candidate|3842|(560,)|var|int8
call_3838 = func_3837_call(var_3839,var_3840,var_3841,var_3842,)
output = call_3838
func_3843 = relay.Function([var_3839,var_3840,var_3841,var_3842,], output)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3245_call = mod.get_global_var('func_3245')
func_3246_call = mutated_mod.get_global_var('func_3246')
call_3854 = func_3245_call()
call_3855 = func_3245_call()
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
const_3864 = relay.const([9.040207,-2.559085,4.814483,7.662709,-9.099214,-6.260074,7.621699,-2.558138,5.914425,-4.049280,-8.294968,-0.087948,-8.457616,4.152720,-0.673508,9.067425,9.540163,-7.931083,8.562191,4.767766,-8.882034,6.046900,3.252027,5.117143,-4.964045,6.005650,-0.961423,-5.509725,3.922273,-9.161947], dtype = "float64")#candidate|3864|(30,)|const|float64
call_3863 = relay.TupleGetItem(func_3_call(relay.reshape(const_3864.astype('float64'), [2, 3, 5])), 0)
call_3865 = relay.TupleGetItem(func_5_call(relay.reshape(const_3864.astype('float64'), [2, 3, 5])), 0)
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
const_3867 = relay.const(8, dtype = "uint32")#candidate|3867|()|const|uint32
var_3868 = relay.var("var_3868", dtype = "uint32", shape = (216,))#candidate|3868|(216,)|var|uint32
call_3866 = relay.TupleGetItem(func_672_call(relay.reshape(const_3867.astype('uint32'), []), relay.reshape(var_3868.astype('uint32'), [9, 8, 3]), ), 1)
call_3869 = relay.TupleGetItem(func_675_call(relay.reshape(const_3867.astype('uint32'), []), relay.reshape(var_3868.astype('uint32'), [9, 8, 3]), ), 1)
func_3011_call = mod.get_global_var('func_3011')
func_3014_call = mutated_mod.get_global_var('func_3014')
var_3872 = relay.var("var_3872", dtype = "float64", shape = (60,))#candidate|3872|(60,)|var|float64
call_3871 = relay.TupleGetItem(func_3011_call(relay.reshape(var_3872.astype('float64'), [12, 5, 1])), 0)
call_3873 = relay.TupleGetItem(func_3014_call(relay.reshape(var_3872.astype('float64'), [12, 5, 1])), 0)
output = relay.Tuple([call_3854,call_3863,const_3864,call_3866,const_3867,var_3868,call_3871,var_3872,])
output2 = relay.Tuple([call_3855,call_3865,const_3864,call_3869,const_3867,var_3868,call_3873,var_3872,])
func_3884 = relay.Function([var_3868,var_3872,], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
var_3885 = relay.var("var_3885", dtype = "uint32", shape = (216,))#candidate|3885|(216,)|var|uint32
var_3886 = relay.var("var_3886", dtype = "float64", shape = (60,))#candidate|3886|(60,)|var|float64
output = func_3884(var_3885,var_3886,)
func_3887 = relay.Function([var_3885,var_3886,], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2869_call = mod.get_global_var('func_2869')
func_2870_call = mutated_mod.get_global_var('func_2870')
call_3906 = relay.TupleGetItem(func_2869_call(), 0)
call_3907 = relay.TupleGetItem(func_2870_call(), 0)
output = call_3906
output2 = call_3907
func_3910 = relay.Function([], output)
mod['func_3910'] = func_3910
mod = relay.transform.InferType()(mod)
mutated_mod['func_3910'] = func_3910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3910_call = mutated_mod.get_global_var('func_3910')
call_3911 = func_3910_call()
output = call_3911
func_3912 = relay.Function([], output)
mutated_mod['func_3912'] = func_3912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3910_call = mod.get_global_var('func_3910')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_3913 = func_3910_call()
call_3914 = func_3910_call()
func_1520_call = mod.get_global_var('func_1520')
func_1526_call = mutated_mod.get_global_var('func_1526')
var_3916 = relay.var("var_3916", dtype = "float32", shape = (2400,))#candidate|3916|(2400,)|var|float32
var_3917 = relay.var("var_3917", dtype = "uint32", shape = ())#candidate|3917|()|var|uint32
const_3918 = relay.const([[-2,-6,6,1,9,10,9,-2,5,5,-10,-5,1,-4,-9,-7,1,3,5,9,-9,-3,-6,9,8,1,-1,7,-2,-2,3,-1,3,10,-8,-1,7,5,-8,5,8,-4,-2,2,-3,-2,-6,-9,-1,-6,-7,5,-10,7,5,-3,-8,4,7,-2,2,9,1,6,8,-10,-8,8,5,5,-7,-7,-5,-5,-8,-5,2,-8,-3,-2,8,-5,-7,6,10,4,-10,-4,-3,-7,3,1,7,8,-8,8,-2,-2,-8,3,-10,5,9,4,6,2,5,-7],[-7,-2,-5,10,-5,-8,-1,-9,9,2,3,9,9,-3,9,1,-4,10,3,-9,-2,-9,10,-5,-4,-5,5,8,-7,2,-10,-3,-6,-6,-3,-7,-3,-2,-6,2,-6,-9,-2,8,-10,7,-3,-6,3,8,-6,3,-3,4,3,-3,2,-1,1,-4,-10,-2,-1,-4,10,-10,-8,8,9,-3,6,1,-8,-10,4,9,-5,8,9,10,-3,6,7,-3,3,-1,1,-5,-6,9,9,3,9,1,5,-7,-4,-10,-4,7,10,-6,-10,2,-8,-8,-9,2]], dtype = "uint32")#candidate|3918|(2, 108)|const|uint32
call_3915 = relay.TupleGetItem(func_1520_call(relay.reshape(var_3916.astype('float32'), [15, 10, 16]), relay.reshape(var_3917.astype('uint32'), []), relay.reshape(const_3918.astype('uint32'), [216,]), relay.reshape(var_3916.astype('uint32'), [15, 10, 16]), ), 2)
call_3919 = relay.TupleGetItem(func_1526_call(relay.reshape(var_3916.astype('float32'), [15, 10, 16]), relay.reshape(var_3917.astype('uint32'), []), relay.reshape(const_3918.astype('uint32'), [216,]), relay.reshape(var_3916.astype('uint32'), [15, 10, 16]), ), 2)
func_1746_call = mod.get_global_var('func_1746')
func_1750_call = mutated_mod.get_global_var('func_1750')
const_3922 = relay.const([10,9,-4,10,8,1,-3,2,10,7,6,-3,-8,8,-8,7,3,-9,2,2,-3,3,-2,5,8,-7,-8,7,-5,1,4,-3,-3,3,-4,-3,-7,-3,1,2,2,8,-4,-5,-1,-2,4,1,10,1,8,10,-2,6,-1,-5,-2,2,-7,4,-5,3,4,5,8,9,-1,1,2,-7,8,7,-6,-5,-7,-10,-9,-2,-5,-6,-6,-8,4,10,-9,-10,-10,8,-7,10,-5,-6,3,5,8,2,-8,9,-4,-9,-8,1,-5,6,3,8,8,2,4,1,1,-4,-6,1,3,-2,-1,1,-3,10,4,-5,1,-4,-5,9,-10,4,-9,5,-7,5,1,3,-6,1,-10,2,2,-10,-3,-2,3,9,5,4,-1,1,6,6,-9,-1,1,-2,-3,1,-1,-1,1,6,3,9,10,6,3,9,-6,3,-6,-2,9,-5,6,-7,-5,4,-5,-2,10,3,7,-5,10,2,-3,5,10,4,-5,5,-4,-7,-10,5,4,-3,-8,8,4,-6,-6,1,-10,-2,-6,6,-5,-10,-2,5,1,-1,-4,-8,8,-9,4,10,5,-10,10,2,1,-10,-6,-2,-3,-5,1,9,-7,4,8,-5,8,5,-5,5,8,-10,-2,-1,-5,-4,-10,-6,3,8,3,-6,3,1,10,-4,1,1,8,10,10,10,1,9,-5,7,2,-1,7,-3,-7,-3,2,-4,8,4,2,-8,-9,6,3,1,7,10,-3,-10,1,1,-9,-6,10,7,-5,2,-3,7,10,-3,10,-2,8,3,5,-7,-8,-3,4,-10,-8,-6,-3,-9,10,1,-7,5,2,7,2,2,-8,2,-7,-4,7,6,-2,4,-6,4,-7,-1,8,8,5,-2,9,6,8,-10,7,-6,2,-2,4,-4,-6,-2,6,-4,2,-1,-2,6,6,-5,-6,3,-1,-6,1,-6,6,1,1,-2,-1,-3,-9,-3,9,-9,10,-10,-7,4,8,-6,1,8], dtype = "int8")#candidate|3922|(378,)|const|int8
call_3921 = relay.TupleGetItem(func_1746_call(relay.reshape(var_3917.astype('int8'), []), relay.reshape(const_3922.astype('int8'), [9, 6, 7]), ), 2)
call_3923 = relay.TupleGetItem(func_1750_call(relay.reshape(var_3917.astype('int8'), []), relay.reshape(const_3922.astype('int8'), [9, 6, 7]), ), 2)
func_2869_call = mod.get_global_var('func_2869')
func_2870_call = mutated_mod.get_global_var('func_2870')
call_3926 = relay.TupleGetItem(func_2869_call(), 0)
call_3927 = relay.TupleGetItem(func_2870_call(), 0)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_3937 = relay.TupleGetItem(func_2484_call(), 0)
call_3938 = relay.TupleGetItem(func_2486_call(), 0)
func_177_call = mod.get_global_var('func_177')
func_181_call = mutated_mod.get_global_var('func_181')
const_3941 = relay.const([8,-9,9,-1,1,10,-1,10,7,1,10,4,6,-1,5,-7,9,9,1,-10,-7,8,-7,-3,8,10,-10,1,8,-7,5,-7,-2,-4,-10,3,5,7,-10,8,-4,8,-3,-2,-5,5,4,4,-10,-7,5,10,-1,-5,7,1,-2,-7,-1,7,9,8,3,7,2,-6,6,-6,10,10,-5,-9,3,3,5,2,1,7,-1,7,-10,10,-8,-3,-10,-8,-3,3,4,-9,-7,5,10,1,-6,-7,-3,10,-5,-2,5,1,10,3,-1,5,7,5,-9,1,5,10,4,1,-3,6,4,8,-3,-8,-7,-2,10,-2,-4,-4,10,8,6,-7,2,-8,1,10,9,8,-10,8,10,1,-4,4,1,-10,-3,7,-10,-4,1,5,-2,5,7,-2,-3,2,7,1,-2,-4,-10,10,6,-3,8,8,-2,3,-4,8,-7,-5,10,2,-1,-7,-7,-10,-1,-1,-10,-10,-10,6,8,-5,6,-1,8,-8,-10,-9,-4,-2,-4,5,-2,10,9,-9,-10,4,-4,4,-8,2,-9,-5,-2,9,9,-1,10,2,5,-8,6,3,-7,-4,1,-3,7,-3,-6,-6,-8,-6,6,10,1,-8,-2,-7,-8,-3,6,-9,-3,-3,-5,-6,6,1,-3,-5,1,-3,4,1,2,-1,10,-3,-2,-4,5,-10,-3,5,4,-2,1,9,7,7,3,-6,-6,8,5,-5,-3,3,7,-5,6,-9,3,4,7,-7,-9,-7,-4,-5,8,-1,-6,-8,4,6,-1,9,-5,5,-6,4,7,-2,-6,-2,-6,5,1,5,-9,5,7,5,9,-4,2,2,-9,2,1,10,-1,7,8,-5,-4,8,-8,-1,-3,-4,3,6,-2,7,-4,-1,2,7,2,1,-4,-5,-10,-9,-1,7,1,-8,-4,6,-4,3,7,-9,1,6,7,-8,-10,-9,2,-7,-1,-7,1,-3,2,-10,5,9,7,3,-7,-2,-2,9,1,8,-2,7,10,-6,-7,1,-8,-9,-6,-1,-5,-9,6,-2,6,6,-9,-9,4,-9,-6,2,1,-8,-6,-9,2,10,9,-2,6,-3,3,-1,-1,-10,3,8,-5,-2,-5,-4,2,-6,7,-6,-8,-7,-2,1,-3,8,-5,3,-5,1,-7,-9,-10,-9,-5,-2,-5,3,9,3,-5,9,9,9,6,-6,-6,1,-9,3,-7,-6,-3,-4,-5,6,7,-1,7,10,10,6,10,2,-10,-5,9,3,-2,-6,-1,-6,-10,-5,-7,-10,-1,-4,6,2,10,-4,9,-3,-2,8,3,-2,-3,8,1,6,6,5,-6,5,4,-5,7,-4,8,2,5,2,10,7,-10,5,5,-8,-5,-6,-4,-2,2,-10,7,10,6,10,-4,7,-2,-1,-2,-9,-4,6,10,7,-3,10,8,1,-4,10,-10,3,9,10,-3,-8,5,-2,-1,5,-7,3,-7,-9,-5,-10,-6,-6,4,-8,-4,1,10,4,-4,7,-8,-5,7,7,-3,-9,-7,-5,3,-8,-10,8,-4,-3,-3,-8,-3,5,8,-5,8,-3,-1,8,2,4,-6,-1,-7,7,-5,1,1,-9,10,2,-8,-5,-3,-6,8,6,4,-2,-10,-3,5,2,-1,-5,-4,1,3,-2,6,3,8,5,7,-3,8,3,-9,9,7,-3,4,7,-7,-6,-9,-6,-8,-10,-10,-5,8,-10,-4,-7,5,-6,-3,6,3,2,1,-8,-10,-6,-1,7,-9,-8,-9,8,6,-3,-6,-8,3,1,-9,4,9,-10,-3,2,7,8,5,-10,-9,-10,5,4,-8,-3,5,-8,1,7,-8,-7,6,-3,-9,-2,7,5,-9,-2,-5,-6,4,7,6,7,-2,9,10,-1,-6,-1,-4,-6,5,-2,3,-3,3,-10,5,-3,4,4,-5,-4,9,-3,-2,-8,5,9,7,4,-3,1,2,2,-7,1,-3,-4,-2,5,-5,1,2,-9,2,-1,8,3,-5,7,3,-5,-4,-7,7,10,-5,-4,-1,-6,-8,7,6,-7,7,4,-3,6,-9,6,7,7,-5,8,4,8,-8,10,-7,8,1,5,2,-3,-6,-6,5,4,-4,7,-4,-2,3,10,-8,-5,-10,-5,2,3,9,1,-3,-5,5,5,-8,-6,6,3,6,-3,8,1,7,10,-3,1,5,-3,1,-4,2,2,-7,3,2,-2,-5,-2,6,2,2,7,3,-2,5,-5,-5,8,1,7,-9,-4,1,1,-6,7,6,9,-6,-4,-6,-10,6,-5,1,-10,1,7,8,9,10,-5,-2,6,3,8,10,10,-8,-3,-9,1,5,-1,-7,8,-8,4,7,-7,3,-10,5,-7,9,4,-2,-7,5,1,-10,-9,-4,-8,6,-1,-1,10,-3,1,-8,9,1,9,7,8,-1,-6,2,3,-9,5,-7,8,-3,-3,5,2,-9,-10,1,6,6,4,-7,-6,-3,-8,7,10,6,-2,5,-5,-3,3,-4,5,-2,-8,7,-5,4,-1,-3,2,4,10,-7,6,-1,-5,9,-5,-10,9,-6,10,-10,-2,1,2,-7,7,-9,-6,-1,7,1,-2,-6,10,7,-1,-8,2,6,-7,6,9,-6,-8,-5,10,7,-9,-2,7,9,-6,1,-8,-2,10,-10,5,-5,6,6,-8,-7,7,7,9,-4,-3,-3,-1,-8,4,1,8,10,6,10,-2,2,-6,-5,-5,2,-1,-8,1,-5,-6,4,-4,7,-4,-3,-6,6,-6,-9,-8,-8,7,3,-4,4,-7,-5,5,-1,1,-5,-1,-8,-10,7,-7,8,2,1,2,-5,6,-9,2,-1,-8,-7,-5,-7,4,-4,-10,5,4,6,-3,-4,-1,-9,-5,-3,7,1,6,9,-3,-1,5,-4,5,-2,1,7,-9,2,-9,8,-6,9,8,-2,-1,5,-2,-3,-7,5,-1,9,-3,7,-7,-9,5,-4,4,-7,10,10,-8,-7,8,-4,-6,-2,-5,10,-3,4,-5,-4,-4,-5,-2,6,-8,7,-7,-6,6,-2,6,-5,-9,8,9,6,-4,8,7,-5,7,10,3,-6,5,-1,8,-9,-7,4,10,9,-2,-7,-1,4,4,-3,-2,-9,-7,-8,-8,-3,-6,3,8,8,-1,8,7,1,8,2,2,-8,2,3,5,-7,4,6,1,3,9,3,7,-1,9,6,-5,-8,4,-8,-9,9,6,7,-9,1,-6,-8,-10,8,2,-1,-10,-3,10,3,-8,-3,10,-2,-4,9,-7,3,-3,7,6,-2,6,-3,7,-6,-10,7,-2,-1,2,-6,-4,-6,-1,4,-10,-6,-2,-5,-6,-3,-3,-8,-1,-9,8,4,4,9,-5,-3,-9,-3,7,-9,-10,-1,5,6,-8,-1,-2,-6,-4,-2,-10,-4,-3,10,-5,-4,1,8,3,-4,-10,-7,9,-9,-2,2,7,1,-4,-1,-1,-6,8,-10,7,-4,-10,-9,4,-4,10,-10,-3,-6,-3,-8,10,7,-7,9,-3,-10,1,4,7,4,7,2,-5,8,3,-2,-7,1,6,-7,10,-3,-9,8,8,-3,8,-4,-6,-10,-6,4,-1,-9,-2,7,-6,-4,-9,10,8,10,-1,-8,-7,-5,-3,6,3,-3,4,8,-2,4,7,-9,-9,1,-5,4,9,3,-10,8,-8,10,-10,-3,-3,4,-3,4,-3,-10,4,-10,-7,5,-6,3,-3,-6,-5,7,-6,-9,5,-8,10,9,-6,-7,4,2,-6,-1,-10,-3,-6,5,3,-2,9,9,10,3,6,8,-5,-7,-5,-1,-7,-4,-5,8,4,6,-10,3,2,-7,-10,-10,7,-6,-10,-9,-1,2,1,2,10,9,3,-3,9,-7,6,4,7,-6,-6,3,-10,-3,-7,-8,-3,10,-10,2,2,10,7,3,-5,8,-6,1,8,-8,-9,3,-5,9,-5,-7,-10,-8,3,2,8,1,3,-9,6,-7,4,-8,-2,-4,-5,5,-8,-6,-4,-8,8,-6,3,-1,3,-3,-7,-3,7,-7,6,10,7,-6,-4,-3,4,-3,-5,6,-4,2,-2,-2,10,-1,-1,4,-9,-9,5,-5,-1,5,-5,-3,-4,10,-10,4,2,-10,-8,-3,3,10,-5,-6,-3,4,6,7,-4,3,-1,-6,2,-6,-10,-7,-2,-10,2,-5,9,-5,9,-4,-10,7,-3,4,8,-6,-8,1,8,7,9,6,-1,4,2,-1,6,6,2,5,-10,10,3,-6,-5,2,-4,4,9,5,8,6,5,-3,1,-7,-10,7,-8,-6,-7,-9,-9,6,2,9,-7,-6,-6,9,9,-10,-3,-4,-1,4,-1,1,-5,-9,-8,1,-3,10,-5,1,-5,3,-8,-8,7,9,4,-9,-6,-8,-7,2,5,3,2,-6,-3,-4,-7,-9,6,-4,9,1,-2,-2,9,10,9,-6,5,8,2,-8,4,-3,9,-1,1,-4,3,3,-3,6,4,2,7,-7,2,7,-7,6,-8,-4,1,3,5,5,-8,-1,4,-2,-5,-9,-6,-3,-9,-7,-10,-7,9,4,-7,-6,-2,7,-2,7,6,4,-4,-5,8,9,2,-8,7,9,-2,9,3,10,-3,-5,-4,-2,-6,9,-10,-9,-4,5,8,5,8,2,10,-7,10,3,-10,2,4,7,10,8,2,5,-9,10,6,1,5,-10,-1,-10,-10,7,4,9,2,7,-3,6,7,-3,9,9,-1,10,2,3,2,7,5,-7,-5,3,-9,4,-6,-8,-9,10,6,4,-1,1,8,-7,-3,-2,-1,8,5,-7,-7,7,-4,7,-8,-9,7,-10,7,8,4,-8,-6,-6,-8,-1,7,-10,4,10,-8,8,-10,-10,8,7,-9,-8,3,3,4,-8,-3,-4,8,6,-5,-1,5,-10,-9,-6,3,-3,-5,-8,2,1,-6,2,-1,10,-3,8,2,2,6,2,-1,6,3,6,-3,3,-4,-3,-3,10,4,5,-10,1,-6,-7,-10,-4,10,10,-9,-3,8,-9,-7,-7,10,8,1,-8,-2,4,10,5,-6,-3,8,9,10,-6,-10,9,-5,10,6,-2,2,2,-2,2,-2,4,-9,-7,-4,5,6,-3,-2,-6,10,-9,-2,4,8,3,-9,9,1,-4,-8,6,-4,4,2,6,-10,4,-6,7,2,-3,6,-6,7,-1,-2,1,-7,-4,7,-1,-7,-2,-1,6,-8,4,-2,-2,-2,-5,1,10,1,7,4,-6,2,5,-6,9,-1,-1,-3,1,7,10,2,-5,4,10,3,10,-3,-1,7,4,-4,10,-7,5,-6,9,4,10,10,-7,-5,8,-3,8,10,-7,-4,-4,-9,2,-3,-5,9,-7,5,-1,1,2,-10,-6,-10,-7,-10,-7,1,4,4,-2,-5,1,-3,4,-2,9,-5,-4,-8,3,-3,8,-2,9,4,-9,10,-10,-4,6,9,10,10,10,5,7,6,4,-8,3,4,-10,6,9,2,-6,3,-6,-9,1,2,4,1,-7,2,-10,4,3,10,9,-9,5,-2,5,1,-7,-3,-2,-2,-5,1,-1,7,-4,-7,-9,10,10,-8,3,-10,2,-5,10,-3,10,-2,8,6,-6,-7,-1,10,-8,6,-6,4,-2,2,4,8,-9,6,10,9,7,1,-2,-9,1,-2,4,7,-4,-9,-4,4,-7,-9,10,-5,4,5,8,6,1,-8,-5,2,-4,10,10,-1,4,-6,-8,1,6,9,4,-5,7,-2,8,4,7,-10,-9,3,-1,-8,-9,-4,-7,-1,10,5,-9,10,3,9,-9,6,-10,-1,-8,-1,-8,-2,-7,5,8,5,-7,5,2,-9,-1,-10,3,-1,8,8,6,-8,-2,10,-3,7,1,-1,6,-3,4,-9,3,-8,3,-7,-5,-3,8,-8,10,2,-9,-4,2,3,3,2,1,8,-5,4,10,8,-1,-10,4,-2,-6,10,-8,-7,-5,6,9,2,7,-6,1,6,10,5,-9,-1,-7,-6,-5,3,-1,6,3,6,3,-8,5,8,-9,1,4,-2,4,4,-10,-9,-8,-3,-2,2,2,-2,3,2,5,-9,-7,7,-8,1,2,10,-5,-2,3,-2,5,2,4,-1,9,-7,10,10,-7,-7,-10,-8,2,-4,5,10,2,1,7,-6,-9,-3,-8,-6,-5,-3,-1,-2,10,-10,1,-8,-3,8,8,-6,-8,-5,-3,9,-5,-5,-3,1,-10,-2,-2,-6,7,7,-10,2,4,-2,10,7,4,-2,-8,4,-6,10,5,7,10,9,6,7,1,-9,1,-6,9,-3,3,-6,4,-10,-2,10,10,-3,3,8,-7,4,-4,-4,8,-9,-7,-3,1,-9,-10,-6,-10,-1,-8,4,-8,7,7,-7,1,10,-1,10,-6,-4,9,1,10,10,-10,7,-3,2,-6,-6,4,-8,1,-6,6,-5,1,-4,-7,3,9,5,-2,1,-7,8,5,6,-3,-4,2,6,5,-6,-2,-10,-9,-2,-6,-3,-10,-2,-5,2,1,-9,-5,-6,-4,-5,-3,9,1,-5,2,8,8,-10,10,-3,8,-4,6,3,2,8,2,9,7,-10,3,5,-10,6,-7,-1,-2,7,-4,-10,8,-4,-3,4,9,3,4,5,2,-5,10,-1,-2,-2,9,-5,-10,-7,-1,7,7,-4,-5,-4,-10,-6,-5,-5,-7,3,1,-5,6,7,5,9,-1,2,4,5,-4,-6,-9,-8,-8,-2,-1,-1,9,6,10,-7,-10,1,6,10,8,-1,-7,-3,1,5,2,-1,-3,-4,-2,-6,-1,-10,4,7,6,-8,8,-9,7,-3,9,10,10,-5,-7,9,-9,-3,9,-6,7,-7,7,3,9,3,-1,9,8,-4,-6,-3,1,7,-5,4,-9,6,-8,-2,-7,6,9,-9,-9,2,-7,-10,2,-10,-2,-8,9,9,-4,-4,-5,1,6,-10,5,10,-8,2,-10,6,1,5,7,5,4,-4,-10,2,5,10,-6,1,3,-4,10,-4,-4,-8,4,4,-5,-8,3,2,4,5,-4,-3,-4,9,9,-4,6,-5,7,10,-8,-10,8,7,6,1,-2,7,5,1,-1,6,7,10,1,-8,8,-9,2,10,10,7,8,-10,-2,-7,-6,-2,6,-8,2,7,-6,6,-4,3,8,8,4,8,-8,10,-10,6,-4,5,10,6,10,-3,10,10,6,5,5,7,-10,7,9,6,-6,9,-4,-4,-7,-9,-3,-5,7,8,-5,7,-1,-5,-8,4,-3,1,-10,-2,-2,-5,9,1,-2,-10,-7,4,3,-10,2,4,9,-5,-2,7,9,6,-4,6,9,4,-6,4,8,10,-8,-7,2,7,10,-8,5,-9,-3,6,-4,8,7,-7,3,-4,4,9,5,9,-9,-6,-3,5,1,-7,-2,-5,4,5,-1,-2,2,10,7,-3,-6,-5,6,-4,3,-4,-4,-5,2,8,9,-8,-1,-6,-10,9,10,5,-5,-6,2,-5,-10,-7,-8,-8,6,8,6,8,-5,-2,-2,-4,9,7,-10,8,-1,-2,9,-8,8,2,9,2,8,10,4,-7,2,2,6,-1,4,-8,3,-10,1,9,-6,6,6,4,-10,2,-6,-3,4,-1,-7,-5,-6,-5,9,-9,-4,10,10,9,6,-3,6,7,10,-2,9,-9,-2,-2,-6,-9,7,-2,3,9,5,-6,-8,4,-2,-6,4,4,8,1,8,-6,-7,-1,4,-2,2,1,-2,7,-1,-3,-6,3,2,10,3,-4,-6,5,-5,-10,-4,4,-6,-9,3,2,-6,5,-10,-9,-1,-5,6,-9,-6,7,-10,7,-1,2,6,-5,-10,4,3,3,4,3,8,2,-10,6,-9,5,9,6,-1,2,9,-9,7,8,-10,5,6,-3,-6,8,2,-7,-9,8,2,-9,-6,-5,10,8,8,-9,-1,-1,-1,-4,2,-6,4,1,6,7,2,-6,-7,4,8,-10,-8,-7,1,4,5,-6,-5,-3,1,-4,-3,-5,7,-8,3,-5,2,-9,-5,8,-2,9,1,10,-3,5,9,10,7,2,-7,-2,10,4,2,-7,4,4,7,9,10,-8,2,-4,8,-1,-2,-6,4,-6,-9,3,-9,1,2,-8,4,1,5,-6,-9,10,10,2,3,4,-2,-7,5,9,-8,8,-2,-7,-4,2,10,5,-7,5,8,3,-6,3,8,9,-6,7,5,6,9,-3,9,10,-6,5,-6,-5,7,-6,-7,-3,1,4,-6,-5,10,5,-7,-3,-3,6,7,4,9,-10,-4,-3,5,-2,8,7,7,-7,-8,-7,1,2,7,5,-5,-6,10,-7,7,-5,9,4,5,-10,2,-5,3,2,-3,-9,1,-1,-5,5,8,-8,5,2,-1,-4,10,-7,-9,6,-7,-2,10,-1,-10,6,8,4,6,-3,8,2,-9,4,8,-1,5,-5,-7,-10,3,-6,2,4,5,4,7,3,5,-7,7,9,-3,9,-1,10,6,4,-7,-7,8,-8,-9,4,-8,8,10,9,4,-3,6,-8,9,-2,2,1,-3,6,1,6,2,-7,3,-6,-2,1,-2,10,-1,-2,-4,-3,-1,8,1,-1,10,-5,-4,10,-10,3,2,-7,-6,5,1,8,1,6,-10,6,7,-10,4,6,-5,-8,-10,1,6,-9,-6,-1,-1,-10,5,8,9,4,2,-7,-7,-3,2,5,9,-4,-9,3,-5,-10,9,4,-7,-1,-6,-5,3,-10,-3,-2,-8,-1,-5,-8,9,1,-5,-8,-3,3,-5,-2,8,5,6,-6,-6,-3,1,-1,9,-10,7,7,5,9,8,-10,3,10,3,-6,-2,1,-10,6,4,-2,-4,-3,10,-8,-3,-5,-6,-6,10,9,10,-9,-4,-10,3,-1,2,3,-4,-10,-1,-1,-1,-7,10,-5,8,1,-9,10,4,6,-3,-9,1,-6,-4,1,-6,6,-6,6,-3,6,7,-3,-7,-6,9,9,-5,-2,2,6,-4,3,3,4,6,9,5,-4,-2,-5,6,-1,-1,-1,8,2,-2,-2,6,-3,5,6,6,4,-10,1,5,10,6,-10,1,-8,8,-7,7,5,-4,6,10,-9,9,8,-1,1,-2,-6,2,5,6,-2,-4,9,-9,7,4,-10,6,-8,-8,8,9,-2,-8,1,-1,-10,-2,-2,-3,10,6,2,-10,1,-1,-10,3,-3,3,8,9,-10,7,1,2,9,1,-2,-2,-1,-3,5,-4,-8,4,-10,4,-5,-3,-10,8,-3,-1,-4,-7,7,-5,-6,1,-6,8,10,-8,-2,1,-4,-3,2,1,8,10,-7,-6,-5,-7,-3,-9,-8,10,-5,-3,-2,7,2,-9,-9,-4,3,1,8,-1,4,8,4,-3,-8,10,-5,-3,9,5,-10,-4,10,3,5,1,-1,-1,-6,5,-1,2,-6,-10,9,-2,-6,-4,-4,-6,-10,-6,5,-9,2,-3,-3,-6,3,3,-3,3,-1,-6,5,-4,9,9,9,-7,1,3,-8,-2,-7,3,10,-9,-2,-8,7,1,1,-3,7,1,-1,-4,5,8,-1,-2,-6,1,-6,-4,-10,2,-6], dtype = "uint16")#candidate|3941|(3600,)|const|uint16
call_3940 = relay.TupleGetItem(func_177_call(relay.reshape(const_3941.astype('uint16'), [16, 15, 15]), relay.reshape(const_3941.astype('uint16'), [16, 15, 15]), ), 2)
call_3942 = relay.TupleGetItem(func_181_call(relay.reshape(const_3941.astype('uint16'), [16, 15, 15]), relay.reshape(const_3941.astype('uint16'), [16, 15, 15]), ), 2)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
call_3949 = relay.TupleGetItem(func_3_call(relay.reshape(call_3940.astype('float64'), [2, 3, 5])), 0)
call_3950 = relay.TupleGetItem(func_5_call(relay.reshape(call_3940.astype('float64'), [2, 3, 5])), 0)
func_3011_call = mod.get_global_var('func_3011')
func_3014_call = mutated_mod.get_global_var('func_3014')
const_3960 = relay.const([[-7.086633,-3.079706,-1.575731,2.139962,-9.420944,-1.808815,1.400604,3.766497,1.464779,7.398670,-3.031782,-0.862994,-0.177668,-6.725384,-8.962316,-7.940323,-2.194430,4.174164,-3.151382,5.551330],[-6.097110,5.269193,-6.883402,8.492793,-5.327736,-3.140112,-9.238169,-2.096158,5.858682,1.931064,4.411560,-3.177559,-1.160053,-5.193816,7.023358,9.509052,-9.281090,6.466003,8.573921,-2.431187],[-7.102441,9.370324,-5.353065,9.110801,-2.365083,3.256241,7.116024,2.039187,0.998150,-1.696009,0.782020,3.862804,1.839897,8.757925,4.305493,-2.152718,-0.188481,-1.944588,-2.322347,-0.953723]], dtype = "float64")#candidate|3960|(3, 20)|const|float64
call_3959 = relay.TupleGetItem(func_3011_call(relay.reshape(const_3960.astype('float64'), [12, 5, 1])), 0)
call_3961 = relay.TupleGetItem(func_3014_call(relay.reshape(const_3960.astype('float64'), [12, 5, 1])), 0)
output = relay.Tuple([call_3913,call_3915,var_3916,var_3917,const_3918,call_3921,const_3922,call_3926,call_3937,call_3940,const_3941,call_3949,call_3959,const_3960,])
output2 = relay.Tuple([call_3914,call_3919,var_3916,var_3917,const_3918,call_3923,const_3922,call_3927,call_3938,call_3942,const_3941,call_3950,call_3961,const_3960,])
func_3964 = relay.Function([var_3916,var_3917,], output)
mod['func_3964'] = func_3964
mod = relay.transform.InferType()(mod)
var_3965 = relay.var("var_3965", dtype = "float32", shape = (2400,))#candidate|3965|(2400,)|var|float32
var_3966 = relay.var("var_3966", dtype = "uint32", shape = ())#candidate|3966|()|var|uint32
output = func_3964(var_3965,var_3966,)
func_3967 = relay.Function([var_3965,var_3966,], output)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mod.get_global_var('func_2984')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_3969 = relay.TupleGetItem(func_2984_call(), 1)
call_3970 = relay.TupleGetItem(func_2985_call(), 1)
output = call_3969
output2 = call_3970
func_3980 = relay.Function([], output)
mod['func_3980'] = func_3980
mod = relay.transform.InferType()(mod)
mutated_mod['func_3980'] = func_3980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3980_call = mutated_mod.get_global_var('func_3980')
call_3981 = func_3980_call()
output = call_3981
func_3982 = relay.Function([], output)
mutated_mod['func_3982'] = func_3982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_4011 = relay.TupleGetItem(func_2165_call(), 0)
call_4012 = relay.TupleGetItem(func_2167_call(), 0)
output = call_4011
output2 = call_4012
func_4026 = relay.Function([], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
output = func_4026()
func_4027 = relay.Function([], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mod.get_global_var('func_2165')
func_2167_call = mutated_mod.get_global_var('func_2167')
call_4032 = relay.TupleGetItem(func_2165_call(), 0)
call_4033 = relay.TupleGetItem(func_2167_call(), 0)
output = call_4032
output2 = call_4033
func_4036 = relay.Function([], output)
mod['func_4036'] = func_4036
mod = relay.transform.InferType()(mod)
output = func_4036()
func_4037 = relay.Function([], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_4069 = relay.TupleGetItem(func_3600_call(), 0)
call_4070 = relay.TupleGetItem(func_3602_call(), 0)
func_2241_call = mod.get_global_var('func_2241')
func_2244_call = mutated_mod.get_global_var('func_2244')
var_4074 = relay.var("var_4074", dtype = "int8", shape = (378,))#candidate|4074|(378,)|var|int8
call_4073 = relay.TupleGetItem(func_2241_call(relay.reshape(var_4074.astype('int8'), [126, 3])), 2)
call_4075 = relay.TupleGetItem(func_2244_call(relay.reshape(var_4074.astype('int8'), [126, 3])), 2)
func_3445_call = mod.get_global_var('func_3445')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4080 = relay.TupleGetItem(func_3445_call(), 2)
call_4081 = relay.TupleGetItem(func_3446_call(), 2)
func_3323_call = mod.get_global_var('func_3323')
func_3325_call = mutated_mod.get_global_var('func_3325')
const_4094 = relay.const([-9.781105,-8.311126,-3.350076,-7.146369,-0.154597,-3.668999,0.481887,5.386576,0.041794,0.668056,0.523034,-9.626541,7.402601,2.195487,6.239317,3.315780,2.372910,-4.355577,-0.914655,-6.845860,1.367580,-1.774362,3.828131,7.389333,-1.447896,-8.214995,-1.229628,6.757571,-9.079869,-5.401330,-9.201020,-6.839337,2.501711,7.189332,1.180836,-8.076464,-6.979584,0.751864,7.679688,1.497677,5.089227,2.581799,-6.033293,4.797650,7.199885,-8.117274,7.097450,6.200973,-6.972353,1.138469,-0.768974,-2.132647,-7.558673,-8.740605,-3.552112,-1.761212,-0.962854,7.892078,-8.166046,5.623865,-4.048046,9.263557,-2.084787,7.760577,6.021028,-9.934279,-8.267295,-9.350341,-9.255942,-1.844671,-6.681296,-9.568571,8.356914,-5.624023,-3.082169,8.222455,6.287091,9.912068,-6.693858,-8.702589,1.192572,3.257362,7.716749,-0.332517,1.257928,-3.047454,4.567072,-9.186771,-1.258579,-1.145388,-6.313573,-3.311660,-1.049904,-3.360753,-6.636790,-6.480607,4.240735,6.328960,-2.148488,1.678573,1.099083,2.708427,-0.347093,1.159269,-9.986496,-4.411263,2.878451,8.627152,-8.742167,-8.422462,-0.464026,-5.944625,1.300309,2.640366,3.087266,6.827857,-7.022981,-4.543351,-8.611564,-5.720874,6.437289,7.980849,6.442351,9.882970,-5.824047,-0.191756,-8.403323,2.124406,-4.154054,5.182313,6.521332,-5.212496,-5.578634,-2.027517,-4.871616,1.297838,8.559026,7.132725,7.584954,-7.334784,-1.827858,3.439206,2.436863,-9.123182,5.746117,-3.729754,-8.745450,-0.973409,4.160682,6.048162,6.354945,2.776281,-9.865267,6.139272,8.264872,6.852390,-2.945609,8.544762,3.238691,-1.865071,5.544591,2.187412,5.756241,-2.604856,1.224576,1.800335,1.370519,4.548416,5.960234,0.568682,1.082810,-9.511612,5.945641,2.498426,-3.711391,0.032375,-2.970955,2.266452,2.343144,-1.703672,-3.325097,8.830882,8.669372,3.628274,-7.096216,3.339130,2.785709,3.084136,9.479015,-6.345919,-8.593908,-0.517371,-5.716858,7.853057,6.384005,-3.808977,9.167925,8.139590,3.609851,0.627692,-0.347138,6.676628,-5.000886,-3.316425,0.132550,0.452134,6.850307,3.566263,-2.567943,2.714863,-5.537459,2.752995,5.526615,-5.678299,5.114340,-7.140006,2.493253,7.087419,7.235293,6.257885,-2.701774,-8.641287,-6.194122,-6.364996,-4.332680,0.226052,1.436468,-1.084798,1.109806,2.982183,-1.944319,-1.910529,6.884374,-5.064429,-3.037036,-2.274294,-5.886684,-3.071356,-2.007510,8.737545,-7.164574,4.933893,0.320174,-0.210983,5.174677,7.078911,-1.754381,5.732154,-7.532853,-7.422637,1.720777,4.024785,7.015098,6.090537,-3.217920,9.228447,5.461513,9.416591,-7.590613,5.438417,1.703453,-3.681904,7.331695,-1.059357,2.005152,-4.036997,2.495051,-5.194703,2.507490,-3.924537,7.136076,-7.979802,-8.942786,4.387222,4.654168,-1.341071,-3.270224,-3.224208,-7.900834,9.293475,9.540399,0.175051,9.195037,-9.188096,7.218681,9.052810,-7.450047,3.347944,8.403523,3.300626,3.369761,8.945738,-6.549344,9.452998,-9.612050,-8.471365,-1.779514,-0.218983,-0.637153,-6.850290,4.202864,-2.327527,3.994871,9.214032,-1.699214,-3.802305,-7.332153,3.556650,1.463066,-7.956287,1.941872,-2.335986,-6.295937,-9.170322,8.548022,-7.169950,-1.410135,-4.716885,-8.800112,-8.172038,-7.309434,-4.231862,-2.604940,-5.010682,1.936282,-5.335781,0.989054,-6.441082,0.730653,-9.763440,-2.834598,-2.247186,4.337557,-8.141203,-2.531982,9.934454,7.573675,6.765259,4.395343,-3.603580,-6.242697,-9.176830,4.489645,1.749025,3.127508,5.687213,-6.643988,-3.720140,-3.205615,7.460549,9.476759,5.094866,2.124705,-1.312700,-2.646087,5.744198,4.921776,7.082729,-5.096104,-2.550661,-2.529767,0.421070,1.999206,8.115717,9.902485,-6.831377,8.638598,5.231922,-8.654893,7.603174,-4.979322,-5.045091,-4.520997,-8.707614,-2.642390,-6.219132,-3.513670,-7.740765,8.327266,8.593000,-2.587776,4.837872,-6.666620,-6.689316,2.475366,9.539095,-6.297633,7.294937,6.624618,-4.349175,-9.226688,7.788519,-6.871775,-7.153445,8.535123,-6.270392,9.949509,4.277327,0.425023,8.844645,9.393861,-0.331284,-2.025434,5.186127,-5.331202,6.789566,-2.606985,3.967415,-8.546858,2.481876,-4.633835,-8.392130,3.716381,2.732353,5.830436,5.548033,3.004547,9.096780,-6.669039,-6.580747,-7.565687,1.163189,-5.386529,3.769439,8.315683,-0.616399,6.920804,8.990595,-4.863810,9.181910,3.860384,-3.408781,-6.810863,-7.850169,-4.968481,9.781031,4.381832,-1.985045,-2.315941,-5.207285,-0.013311,1.746023,9.792762,-5.808614,5.049059,-5.324964,7.418539,3.307765,-2.440132,-1.764031,-0.846877,5.372438,-9.262164,6.498027,9.633209,-9.057689,-2.051632,3.877148,2.949808,3.931108,8.530174,5.826532,7.518091,8.113390,9.165866,-2.633982,4.927178,3.160528,4.969328,-9.564087,-7.928445,-9.487727,-1.964412,6.856419,-1.257989,-2.488060,-7.941087,-9.704574,9.731982,9.912158], dtype = "float32")#candidate|4094|(480,)|const|float32
call_4093 = func_3323_call(relay.reshape(const_4094.astype('float32'), [8, 12, 5]))
call_4095 = func_3323_call(relay.reshape(const_4094.astype('float32'), [8, 12, 5]))
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_4096 = relay.TupleGetItem(func_2677_call(), 0)
call_4097 = relay.TupleGetItem(func_2678_call(), 0)
output = relay.Tuple([call_4069,call_4073,var_4074,call_4080,call_4093,const_4094,call_4096,])
output2 = relay.Tuple([call_4070,call_4075,var_4074,call_4081,call_4095,const_4094,call_4097,])
func_4100 = relay.Function([var_4074,], output)
mod['func_4100'] = func_4100
mod = relay.transform.InferType()(mod)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4101 = relay.var("var_4101", dtype = "int8", shape = (378,))#candidate|4101|(378,)|var|int8
func_4100_call = mutated_mod.get_global_var('func_4100')
call_4102 = func_4100_call(var_4101)
output = call_4102
func_4103 = relay.Function([var_4101], output)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mod.get_global_var('func_2984')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_4115 = relay.TupleGetItem(func_2984_call(), 1)
call_4116 = relay.TupleGetItem(func_2985_call(), 1)
func_3980_call = mod.get_global_var('func_3980')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_4117 = func_3980_call()
call_4118 = func_3980_call()
output = relay.Tuple([call_4115,call_4117,])
output2 = relay.Tuple([call_4116,call_4118,])
func_4120 = relay.Function([], output)
mod['func_4120'] = func_4120
mod = relay.transform.InferType()(mod)
output = func_4120()
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_4139 = relay.TupleGetItem(func_3600_call(), 0)
call_4140 = relay.TupleGetItem(func_3602_call(), 0)
func_3445_call = mod.get_global_var('func_3445')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4153 = relay.TupleGetItem(func_3445_call(), 1)
call_4154 = relay.TupleGetItem(func_3446_call(), 1)
output = relay.Tuple([call_4139,call_4153,])
output2 = relay.Tuple([call_4140,call_4154,])
func_4166 = relay.Function([], output)
mod['func_4166'] = func_4166
mod = relay.transform.InferType()(mod)
mutated_mod['func_4166'] = func_4166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mutated_mod.get_global_var('func_4166')
call_4167 = func_4166_call()
output = call_4167
func_4168 = relay.Function([], output)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3980_call = mod.get_global_var('func_3980')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_4173 = func_3980_call()
call_4174 = func_3980_call()
output = call_4173
output2 = call_4174
func_4216 = relay.Function([], output)
mod['func_4216'] = func_4216
mod = relay.transform.InferType()(mod)
mutated_mod['func_4216'] = func_4216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4216_call = mutated_mod.get_global_var('func_4216')
call_4217 = func_4216_call()
output = call_4217
func_4218 = relay.Function([], output)
mutated_mod['func_4218'] = func_4218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2984_call = mod.get_global_var('func_2984')
func_2985_call = mutated_mod.get_global_var('func_2985')
call_4268 = relay.TupleGetItem(func_2984_call(), 2)
call_4269 = relay.TupleGetItem(func_2985_call(), 2)
output = relay.Tuple([call_4268,])
output2 = relay.Tuple([call_4269,])
func_4280 = relay.Function([], output)
mod['func_4280'] = func_4280
mod = relay.transform.InferType()(mod)
output = func_4280()
func_4281 = relay.Function([], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4299 = relay.var("var_4299", dtype = "int64", shape = ())#candidate|4299|()|var|int64
var_4300 = relay.var("var_4300", dtype = "int64", shape = (12, 3, 1))#candidate|4300|(12, 3, 1)|var|int64
bop_4301 = relay.bitwise_xor(var_4299.astype('int64'), var_4300.astype('int64')) # shape=(12, 3, 1)
var_4304 = relay.var("var_4304", dtype = "int64", shape = (12, 3, 13))#candidate|4304|(12, 3, 13)|var|int64
bop_4305 = relay.floor_mod(var_4300.astype('float32'), var_4304.astype('float32')) # shape=(12, 3, 13)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_4315 = relay.TupleGetItem(func_2484_call(), 1)
call_4316 = relay.TupleGetItem(func_2486_call(), 1)
bop_4349 = relay.minimum(bop_4305.astype('uint8'), relay.reshape(var_4304.astype('uint8'), relay.shape_of(bop_4305))) # shape=(12, 3, 13)
uop_4360 = relay.acosh(bop_4349.astype('float64')) # shape=(12, 3, 13)
uop_4362 = relay.erf(uop_4360.astype('float64')) # shape=(12, 3, 13)
uop_4365 = relay.asin(uop_4362.astype('float32')) # shape=(12, 3, 13)
func_3445_call = mod.get_global_var('func_3445')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4378 = relay.TupleGetItem(func_3445_call(), 2)
call_4379 = relay.TupleGetItem(func_3446_call(), 2)
output = relay.Tuple([bop_4301,call_4315,uop_4365,call_4378,])
output2 = relay.Tuple([bop_4301,call_4316,uop_4365,call_4379,])
func_4383 = relay.Function([var_4299,var_4300,var_4304,], output)
mod['func_4383'] = func_4383
mod = relay.transform.InferType()(mod)
mutated_mod['func_4383'] = func_4383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mutated_mod.get_global_var('func_4383')
var_4385 = relay.var("var_4385", dtype = "int64", shape = ())#candidate|4385|()|var|int64
var_4386 = relay.var("var_4386", dtype = "int64", shape = (12, 3, 1))#candidate|4386|(12, 3, 1)|var|int64
var_4387 = relay.var("var_4387", dtype = "int64", shape = (12, 3, 13))#candidate|4387|(12, 3, 13)|var|int64
call_4384 = func_4383_call(var_4385,var_4386,var_4387,)
output = call_4384
func_4388 = relay.Function([var_4385,var_4386,var_4387,], output)
mutated_mod['func_4388'] = func_4388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_4429 = relay.TupleGetItem(func_3600_call(), 0)
call_4430 = relay.TupleGetItem(func_3602_call(), 0)
output = call_4429
output2 = call_4430
func_4442 = relay.Function([], output)
mod['func_4442'] = func_4442
mod = relay.transform.InferType()(mod)
output = func_4442()
func_4443 = relay.Function([], output)
mutated_mod['func_4443'] = func_4443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_4546 = relay.TupleGetItem(func_3600_call(), 0)
call_4547 = relay.TupleGetItem(func_3602_call(), 0)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4555 = relay.TupleGetItem(func_4120_call(), 1)
call_4556 = relay.TupleGetItem(func_4121_call(), 1)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_4557 = func_2182_call()
call_4558 = func_2182_call()
output = relay.Tuple([call_4546,call_4555,call_4557,])
output2 = relay.Tuple([call_4547,call_4556,call_4558,])
func_4569 = relay.Function([], output)
mod['func_4569'] = func_4569
mod = relay.transform.InferType()(mod)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4569_call = mutated_mod.get_global_var('func_4569')
call_4570 = func_4569_call()
output = call_4570
func_4571 = relay.Function([], output)
mutated_mod['func_4571'] = func_4571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_4588 = relay.TupleGetItem(func_3179_call(), 1)
call_4589 = relay.TupleGetItem(func_3181_call(), 1)
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
var_4595 = relay.var("var_4595", dtype = "uint32", shape = ())#candidate|4595|()|var|uint32
const_4596 = relay.const([-2,-3,1,-1,-5,7,10,-2,-5,-2,2,7,-6,6,-5,-6,10,-7,1,1,1,-9,9,5,-6,5,2,8,4,3,7,-8,1,9,-7,10,-8,1,2,-3,5,-4,1,3,10,-7,-9,3,4,2,4,-9,10,-10,-8,-9,-1,9,9,-7,2,-5,1,-9,-1,8,2,6,9,-6,-8,-1,-10,-9,4,9,10,-7,3,9,6,9,-5,1,10,-3,4,7,4,-4,-2,4,-6,-4,-6,3,8,-1,-9,-9,2,9,-5,2,10,8,1,-3,-5,-6,-10,5,2,-3,2,10,-3,10,3,7,-9,7,-9,7,-7,-6,-3,-7,9,-4,3,5,-2,3,-8,-1,5,7,8,1,6,-4,-10,-3,-2,-2,-2,-10,3,-2,-4,-9,10,-5,9,-4,3,5,-1,-4,5,10,2,-4,5,-7,-6,8,-2,6,8,8,10,-5,-10,-5,-5,-4,9,6,-1,-1,-1,7,-3,-7,-1,-2,-8,3,8,-5,-5,1,-9,7,10,-9,8,-6,-8,-2,8,1,3,-4,-4,-5,9,4,-5,-8,-9,-7,4,10], dtype = "uint32")#candidate|4596|(216,)|const|uint32
call_4594 = relay.TupleGetItem(func_672_call(relay.reshape(var_4595.astype('uint32'), []), relay.reshape(const_4596.astype('uint32'), [9, 8, 3]), ), 0)
call_4597 = relay.TupleGetItem(func_675_call(relay.reshape(var_4595.astype('uint32'), []), relay.reshape(const_4596.astype('uint32'), [9, 8, 3]), ), 0)
func_3445_call = mod.get_global_var('func_3445')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4611 = relay.TupleGetItem(func_3445_call(), 0)
call_4612 = relay.TupleGetItem(func_3446_call(), 0)
output = relay.Tuple([call_4588,call_4594,var_4595,const_4596,call_4611,])
output2 = relay.Tuple([call_4589,call_4597,var_4595,const_4596,call_4612,])
func_4622 = relay.Function([var_4595,], output)
mod['func_4622'] = func_4622
mod = relay.transform.InferType()(mod)
mutated_mod['func_4622'] = func_4622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4623 = relay.var("var_4623", dtype = "uint32", shape = ())#candidate|4623|()|var|uint32
func_4622_call = mutated_mod.get_global_var('func_4622')
call_4624 = func_4622_call(var_4623)
output = call_4624
func_4625 = relay.Function([var_4623], output)
mutated_mod['func_4625'] = func_4625
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4627 = relay.const([[[0.051112,-7.635103],[-4.508229,-8.840094],[-2.592317,-4.251115],[-2.941975,1.137004]],[[-2.239517,5.603634],[-3.284071,2.942540],[9.742340,-9.868993],[4.769578,3.472896]],[[-2.621164,-3.885441],[-6.098854,5.698430],[-2.830960,-2.883479],[5.403505,-7.178515]],[[-4.600249,-3.826445],[-8.991020,2.838309],[-1.295472,1.014244],[9.617432,-9.334359]],[[5.756666,-2.569874],[6.824853,-1.278125],[4.735628,8.289106],[-2.136820,-7.911313]],[[3.868861,8.745911],[6.309362,7.819970],[-7.605170,6.761369],[-7.174349,1.005111]],[[-1.826021,6.335788],[-6.957242,2.523400],[-9.575742,-6.891678],[-1.537920,4.788038]],[[-3.209016,2.142861],[-8.165252,2.129127],[-0.385464,-2.084234],[-1.794805,-3.852194]],[[-4.474530,-7.294209],[0.459717,-9.391788],[-3.852232,-2.770258],[-6.830999,0.179478]],[[-0.699858,-5.950892],[2.077724,8.419867],[-0.692070,-4.133962],[-3.237950,5.108437]]], dtype = "float32")#candidate|4627|(10, 4, 2)|const|float32
var_4628 = relay.var("var_4628", dtype = "float32", shape = (10, 4, 2))#candidate|4628|(10, 4, 2)|var|float32
bop_4629 = relay.power(const_4627.astype('float32'), relay.reshape(var_4628.astype('float32'), relay.shape_of(const_4627))) # shape=(10, 4, 2)
output = relay.Tuple([bop_4629,])
output2 = relay.Tuple([bop_4629,])
func_4636 = relay.Function([var_4628,], output)
mod['func_4636'] = func_4636
mod = relay.transform.InferType()(mod)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4637 = relay.var("var_4637", dtype = "float32", shape = (10, 4, 2))#candidate|4637|(10, 4, 2)|var|float32
func_4636_call = mutated_mod.get_global_var('func_4636')
call_4638 = func_4636_call(var_4637)
output = call_4638
func_4639 = relay.Function([var_4637], output)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3179_call = mod.get_global_var('func_3179')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_4653 = relay.TupleGetItem(func_3179_call(), 1)
call_4654 = relay.TupleGetItem(func_3181_call(), 1)
output = call_4653
output2 = call_4654
func_4655 = relay.Function([], output)
mod['func_4655'] = func_4655
mod = relay.transform.InferType()(mod)
output = func_4655()
func_4656 = relay.Function([], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4672 = relay.var("var_4672", dtype = "float32", shape = (13, 4, 15))#candidate|4672|(13, 4, 15)|var|float32
uop_4673 = relay.log10(var_4672.astype('float32')) # shape=(13, 4, 15)
var_4679 = relay.var("var_4679", dtype = "float32", shape = (13, 4, 15))#candidate|4679|(13, 4, 15)|var|float32
bop_4680 = relay.less_equal(uop_4673.astype('bool'), relay.reshape(var_4679.astype('bool'), relay.shape_of(uop_4673))) # shape=(13, 4, 15)
output = relay.Tuple([bop_4680,])
output2 = relay.Tuple([bop_4680,])
func_4697 = relay.Function([var_4672,var_4679,], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mutated_mod.get_global_var('func_4697')
var_4699 = relay.var("var_4699", dtype = "float32", shape = (13, 4, 15))#candidate|4699|(13, 4, 15)|var|float32
var_4700 = relay.var("var_4700", dtype = "float32", shape = (13, 4, 15))#candidate|4700|(13, 4, 15)|var|float32
call_4698 = func_4697_call(var_4699,var_4700,)
output = call_4698
func_4701 = relay.Function([var_4699,var_4700,], output)
mutated_mod['func_4701'] = func_4701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3073_call = mutated_mod.get_global_var('func_3073')
call_4706 = relay.TupleGetItem(func_3071_call(), 0)
call_4707 = relay.TupleGetItem(func_3073_call(), 0)
uop_4716 = relay.rsqrt(call_4706.astype('float32')) # shape=(2, 9, 13)
uop_4718 = relay.rsqrt(call_4707.astype('float32')) # shape=(2, 9, 13)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_4746 = func_4026_call()
call_4747 = func_4026_call()
func_896_call = mod.get_global_var('func_896')
func_900_call = mutated_mod.get_global_var('func_900')
const_4752 = relay.const([-5.483921,6.071090,5.064134,-1.913480,-3.407022,5.996582,-4.705227,8.455135,8.677360,4.704554,-6.967179,-5.659214,-1.761372,1.458995,2.531061,9.996579,-7.280744,-0.316253,6.022858,-3.336987,7.185181,7.037810,7.858220,4.879906,9.694950,7.443363,-2.193208,5.605161,-5.300295,-9.109241,-6.455812,7.252547,-7.059882,9.852126,-4.166804,-0.227061,6.495648,2.889187,-3.275503,6.472903,-5.106558,1.079214,-9.026669,0.713562,8.979111,2.040564,4.657282,-0.418085,-7.634928,-0.871749,-4.165151,-9.132287,-5.025357,-9.974951,8.993985,-6.663161,-7.742706,-5.375748,-3.377751,6.808454,6.083723,-2.371494,9.449593,5.223193,-8.491861,-2.234288,-7.669873,-7.011153,6.772020,5.719875,2.303409,-8.324418,5.413872,-1.077828,-6.828967,9.867809,-9.538215,-2.644275,5.028837,9.195268,4.318757,-0.334556,1.979128,9.899679,9.701029,8.180915,-5.621646,8.609436,-4.503339,-1.608051,4.609612,-4.965441,2.208464,-4.068179,-2.461257,-4.434762,2.714238,2.765711,4.213888,8.782921,7.842960,8.584676,-0.806436,3.000831,5.444059,2.542348,-0.966725,-8.932275,2.945780,-5.905540,2.734477,8.658008,4.907056,4.016764,4.767050,7.218234,1.281089,7.224063,2.611095,-9.621337,-7.347351,-5.359726,0.338959,-6.166561,2.585800,4.922346,4.761008,3.584257,5.957538,8.875986,-7.515983,-0.693698,-4.699264,5.996500,-6.540680,-0.283461,-1.885888,8.360928,3.649693,-5.776632,-3.631156,4.816480,-7.206895,-2.237912,5.304611,6.376641,8.673874,8.888182,7.436702,2.675528,-6.615512,-4.207018,-2.409800,7.078883,3.125414,-0.329936,8.824639,4.469551,6.176519,9.169805,1.033504,-4.487861,-6.960078,-9.308704,-3.226366,-5.448317,7.966007,3.401254,-8.018336,-0.871372,-9.374895,-2.023976,-3.586410,-8.625154,9.878010,6.358031,-1.577199,1.905604,2.386393,-9.017274,-2.019129,9.399703,2.307603,1.718605,8.174033,0.448526,9.201332,9.655504,9.944926,1.616738,4.847592,8.676611,-3.954972,0.616528,1.197359,9.783249,-7.997935,2.256751,-7.402519,7.601213,-9.086283,6.718250,-4.167538,-2.097526,-4.662974,9.315807,-2.415770,6.517866,3.764396,-3.615935,-4.302408,-7.863596,-5.963859,-7.327775,0.309321,-1.462441,-6.526384,6.857051,-1.490748,-3.248642,1.561345,9.545545,8.307822,-6.920975,1.553204,1.364819,-2.593885,-7.818352,9.006894,5.249966,-4.122038,5.282594,-3.941983,-1.527722,-5.148470,5.401574,-2.276295,6.171855,-2.483044,-9.872756,-0.746163,3.598570,-5.169831,-4.012432,9.415802,-1.492443,2.935825,-3.195259,-0.978018,4.795356,-7.068328,-0.716415,2.840942,-9.990063,8.212084,4.037826,-6.928749,-1.662622,-9.681303,-5.823419,4.133086,6.728592,-5.959451,-9.675520,-8.223542,7.318222,-5.723897,7.058622,3.178011,1.477342,5.274696,6.617020,-8.850706,-6.758027,-0.451698,-2.139550,0.374340,-2.508803,4.887925,-9.307792,-8.012224,-7.485801,7.079198,-8.538639,3.302724,0.483018,-8.491474,-4.785073,-8.672049,2.175563,-0.477664,-2.083427,-4.596506,4.398920,9.707021,2.388483,-2.921526,1.354438,-3.319398,-3.374716,4.210620,-3.109520,-0.431769,-8.617616,0.520047,5.558574,9.492562,9.996921,9.415804,-3.588810,-5.435909,-0.650606,5.508088,-8.391340,-0.058664,-1.894725,-9.987580,0.089718,2.450890,1.802751,-1.931948,-7.105528,9.837054,3.427555,0.025557,7.559131,2.048656,-5.916443,9.422871,-6.242249,5.301479,-8.912067,9.668928,8.429803,8.409040,1.621962,4.323402,-9.184541,5.964264,6.633252,1.603569,-7.068736,6.692390,2.088524,7.890705,-0.606485,-4.479988,-0.400725,-9.160188,4.797521,4.579196,6.432679,-0.379630,6.426390,8.259396,-4.706510,6.124549,-9.194710,3.092383,-3.086085,9.683369,-9.230525,0.780951,-1.115495,-1.151686,8.885986,-5.024529,-3.512474,-9.081268,2.866640,7.623750,-7.145917,-1.993581,5.212171,4.662138,8.956701,-3.544838,-8.217343,-0.883499,9.697756,-6.651584,-1.974194,-4.324635,-3.280583,-7.502720,-0.476082,3.392799,9.981234,0.379199,-2.084804,-3.492772,-4.023219,4.768315,-9.058057,0.499321,-6.492696,-6.481765,-6.220921,8.979057,-6.639549,-6.808263,8.866165,0.789501,-0.478884,9.512414,2.659114,-7.742988,-6.632147,3.758364,0.182972,5.080899,-6.641570,5.183276,-1.109241,8.702167,-0.726454,0.978074,-7.802859,-0.627171,-2.791370,5.972007,1.674549,1.157120,3.726580,-6.223249,0.260585,-8.606249,-9.766017,-2.622655,-3.114484,0.003469,-0.836134,0.803256,4.693691,7.826554,9.173940,-9.412967,-6.964252,6.246982,-6.925226,-8.976295,0.279611,6.257126,-9.160748,-7.292439,-5.299042,-7.238477,-0.358467,2.279890,7.513281,9.139176,9.149341,-4.903026,5.286817,1.497861,6.673562,2.300767,-2.265283,-3.019156,8.361399,6.844447,-9.909718,-4.855442,2.044702,5.166088,-0.211795,-2.131617,-4.556805,0.906707,-6.698986,6.805875,-0.410820,-8.685745,7.442242,-2.187506,1.141610,-8.238136,5.084824,-6.447954,-9.126939,7.667943,6.445482,-2.055485,-8.210857,7.302225,-4.065223,8.840037,-8.204119,2.346553,-5.201401,-3.595279,-0.986871,-1.330737,5.768052,-0.531480,-8.908394,-4.210176,2.236868,4.199482,-4.731732,-5.208542,7.449235,5.328338,9.618470,5.320116,-7.416084,6.825984,3.411269,-7.560704,9.450500,-7.463603,2.333226,5.132559,-8.662541,-4.729507,7.780119,7.865022,-6.647407,-7.177473,-6.261509,-7.554390,1.158934,0.836047,1.493506,2.902108,-5.165440,-0.397288,-3.113686,8.648564,-6.773606,0.828444,-0.970114,-4.394498,-7.627374,2.432419,-9.106600,9.521745,5.509933,-2.920046,2.924530,6.282814,-0.491372,6.415334,2.151061,1.115964,-6.775725,-5.744427,8.151646,-8.297745,2.950019,-2.707378,4.607761,-7.597778,-9.172890,1.107923,-2.954256,-6.466454,-2.924439,-1.751527,-0.820471,4.611288,-8.993550,8.365204,-8.234102,4.750825,3.210947,4.611885,-9.450539,-4.198258,1.519308,-5.703571,-8.270959,-1.488475,-5.272007,2.884121,-6.285031,4.762301,-7.779097,-1.248086,-8.427508,-6.497516,-2.228903,-9.291874,1.818227,4.666540,-1.926982,6.441028,-6.301718,0.430802,-7.418245,6.643064,4.557290,5.361747,-5.850472,-4.072460,-2.571466,-4.558059,7.056648,6.505679,6.388389,3.643453,-8.819843,2.622726,-6.219530,4.907736,8.129410,1.925037,8.017120,-5.210262,-7.923035,6.366768,4.352237,7.324651,-5.395680,-1.789054,-5.263240,-5.428615,-1.832598,7.801624,-1.215571,0.096396,-1.743063,9.134915,6.344067,5.348205,-6.242520,-4.328235,-7.517544,-4.563412,-0.502050,4.900781,-4.536746,2.490140,7.342950,0.717578,0.272065,2.501077,1.417055,-4.202916,-3.143914,9.974722,-7.873836,-3.849991,6.016508,0.585135,6.559201,-5.141964,-3.901240,-8.455300,9.812278,-2.619258,-8.390451,-8.009115,-5.980310,8.578963,-9.862035,7.148356,-8.598753,9.750021,8.226809,-2.648168,0.502099,-0.304678,-7.691131,6.516776,2.825490,4.418323,9.280489,4.012670,-6.283808,-8.444076,4.258404,6.275393,-2.866497,-4.660420,0.831418,-9.674528,0.368360,0.422537,-4.587124,4.171245,-2.024035,5.481452,-0.171163,3.799781,2.296305,6.923185,8.341693,2.111176,-0.494994,1.881799,-9.655138,-4.871208,9.681508,8.080377,0.375403,4.960832,1.402648,7.755618,4.806845,-1.430204,6.768709,-1.919760,-8.267430,-8.407968,1.974565,9.653929,2.210594,1.206917,8.180349,-2.147647,-2.587663,-1.015374,1.371237,0.042534,-4.551128,2.417514,-5.097710,-2.558933,5.534964,7.345730,0.201247,-5.657139,-4.902309,8.422022,2.960186,-3.445025,2.328823,1.566545,4.206495,6.767637,8.731086,7.359116,-5.723477,-0.884976,-8.891756,-4.101125,-8.992757,-3.770387,9.508025,-5.906098,-6.158435,-0.388865,8.144994,-1.434526,-1.186974,-8.750505,-8.462877,4.084777,-9.768738,6.185422,1.254792,-8.012110,-7.169991,6.275266,-7.998609,-4.127417,-7.215438,-3.906808,7.452935,-0.208446,-8.662930,7.970466,-1.613778,-3.497630,-2.484938,5.286565,9.780879,-6.372511,7.538772,6.320499,9.462794,-1.639706,-2.977627,-8.799054,2.291521,-7.418870,8.661020,-6.052373,-7.563487,-9.822627,-1.679929,3.856552,2.526783,-6.790174,8.706283,-6.725462,5.938117,-9.250977,3.906614,2.913722,-4.787385,3.629075,8.108378,3.095770,-2.735106,9.206702,-0.976128,-4.307823,-8.420893,-9.244816,1.127532,-4.077953,2.396988,-3.162994,1.175831,4.040771,9.008347,-8.757938,-7.768666,2.878718,2.435535,-7.642188,3.935895,-9.115440,2.394792,0.261331,2.035707,6.618095,-0.381842,-4.667277,-9.883466,8.371105,-3.667565,-7.729650,-5.111768,6.351428,-9.973780,7.520138,-5.115900,2.557143,-0.850724,-5.955241,4.245244,-3.183845,-6.965735,6.168802,-4.568935,-2.427674,-2.810172,3.518385,-3.343039,0.662270,-4.151500,-0.908207,-3.530452,-2.755614,-3.764133,-4.345799,4.839721,-0.736146,5.160098,-7.557976,-9.443670,-7.079961,6.634303,0.104808,-0.233139,5.058984,8.577246,-8.472666,8.390461,-2.574061,0.862550,5.083432,3.782874,-4.716161,-6.721120,-2.864643,-8.061257,1.702154,4.490654,6.059146,0.656831,-5.970435,6.164405,-4.768965,-0.641527,-2.361919,-1.289827,-6.872135,1.771791,-2.899539,5.871005,8.104189,-3.857596,3.206180,5.225849,6.035754,9.128958,-7.325519,-4.672250,-7.181391,4.703692,5.317851,-7.288035,-6.305609,-6.791465,0.104684,4.177324,3.066749,-3.537226,3.102147,-2.940462,-8.651447,6.298280,-5.153136,-2.958630,-7.557708,9.361658], dtype = "float32")#candidate|4752|(910,)|const|float32
const_4753 = relay.const([-2,-9,7,-4,6,7,2,10,1,5,-10,2,4,2,-8,1,2,-8,3,-5,-8,2,-4,-9,10,3,-2,3,7,-1,8,6,1,-1,5,-3,10,-6,-6,1,9,-9,3,9,7,4,4,-5,3,9,-4,5,-8,10,6,-1,7,5,1,-9,-6,4,-2,-4,7,-5,8,6,-10,1,8,-2,1,7,3,-2,7,-6,-9,4,-6,6,8,9,8,6,1,3,5,-3,5,5,3,1,-4,7,-5,-3,7,-2,1,1,8,-3,3,1,-3,-2,-10,10,9,5,2,-8,9,4,-10,1,10,-10,1,-4,10,5,-6,-5,2,-10,7,3,-8,7,5,-5,-3,1,6,10,-9,7,10,2,-1,6,8,5,10,5,9,10,7,-6,5,1,3,-9,10,-4,-4,1,4,2,-6,-7,9,7,-9,2,-10,-9,-3,-7,2,3,4,9,-10,9,-10,-10,-4,-6,3,8,-3,8,5,-10,-7,-4,7,-8,-6,2,5,-4,3,5,-10,-1,10,-10,5,4,2,-4,3,7,-2,3,5,8,7,-3,-6,1,-4,-1,-10,-10,4,3,-7,-5,1,6,-5,-3,-8,9,-3,-10,-1,5,-7,-4,-10,-6,-9,-5,9,8,8,4,10,-9,-4,-9,9,4,10,5,-7,6,-2,-6,-6,2,-6,9,-2,10,-7,-8,-2,10,-2,-1,-6,5,-1,8,5,-1,-10,6,1,5,4,4,-10,9,9,-1,8,6,8,7,6,4,-10,-6,-8,-9,-8,10,7,-10,-9,5,8,7,5,-9,3,9,-6,8,-7,6,-2,-3,-8,-9,-5,-4,-6,-9,6,6,-1,-7,-9,1,-2,3,-5,-2,1,-8,6,9,5,-4,8,-2,-4,-6,-4,9,3,-7,-8,9,-10,6,-1,9,7,-8,-5,3,-1,-2,-5,-10,-3,-7,8,2,5,8,-7,3,-2,10,-5,-7,-4,-3,2,-7,2,9,2,-2,1,2,-6,-3,-9,-6,-6,3,3,-8,1,1,-1,-5,-2,-9,-6,-3,9,-1,-7,-5,1,2,5,-1,7,-2,-4,1,-4,9,3,-2,-7,3,9,6,9,6,-8,-2,10,-3,-1,-10,-9,6,-2,6,-1,-5,8,-4,1,-1,-6,-6,-9,3,-5,4,4,6,8,7,-3,-4,6,-8,-6,6,3,10,-2,1,-6,1,-5,-7,-1,4,7,-4,4,9,-10,3,8,-7,-6,8,-3,1,-8,-3,-3,10,5,-4,-6,10,-10,1,-6,-8,5,4,5,-8,-6,-9,-7,10,4,2,8,6,-7,-8,5,7,10,-10,9,-5,10,-3,-6,3,-10,2,9,8,6,8,9,-3,-7,3,2,10,-5,-1,7,-1,-8,-4,10,2,-5,-7,-6,-5,-5,8,8,1,2,-2,-7,5,-5,-4,-1,3,7,-2,2,7,-6,7,4,5,2,-4,-2,6,-9,6,-7,8,9,-10,-7,-8,-1,-5,3,-10,9,3,4,-3,-2,-3,-8,-6,10,9,10,-10,-4,-7,-7,3,-2,1,8,10,-5,-10,5,1,9,-3,-9,1,10,-2,4,4,2,5,-1,9,-8,-8,-2,-10,-1,9,6,7,7,-4,3,-8,-3,-6,-7,-10,-3,-10,9,7,3,-2,-7,6,8,-6,7,-7,-8,-7,-7,10,5,-8,-1,6,4,-2,7,-6,9,-6,-7,-7,8,-10,10,7,-1,2,2,6,6,-7,-8,-7,-7,3,8,9,-3,10,-8,-1,-2,2,10,9,8,8,1,4,10,3,7,-1,10,6,-8,8,-1,-3,-8,9,-10,-1,4,-10,3,2,7,10,5,-7,2,-3,6,4,-8,-10,-9,1,6,-8,9,7,-3,3,-3,-9,6,8,7,5,-2,-6,-6,4,2,-9,2,-7,4,-1,2,2,1,1,-9,-5,-3,-3,10,1,9,-5,7,-6,-3,8,8,-5,-9,8,3,2,-6,5,2,10,-5,4,8,-4,8,6,3,6,-6,-3,-10,6,-8,4,6,-3,10,4,-7,8,-2,1,4,1,-4,10,9,-1,-7,-9,2,4,9,-9,8,-10,-2,8,-10,5,-5,-9,-4,-3,9,4,6,-3,-9,9,-2,8,2,7,6,8,-10,8,-9,-5,-5,-2,-10,-3,-9,-6,1,-2,-1,7,-4,3,-1,-8,-1,1,-3,-6,7,-1,4,-7,1,-10,-10,-4,-1,8,5,6,-8,-4,9,-1,-3,-5,10,-2,3,7,-2,-8,5,6,-10,8,9,-9,5,-9,4,3,-7,-9,10,4,7,4,-7,-2,5,7,3,4,-7,6,10,7,6,-8,2,-8,-5,10,5,9,3,3,1,6,2,-9,-1,10,2,6,1,2,-8,-7,6,2,3,7,-5,-4,-5,1,-1,5,-10,-9,9,-8,6,2,1,-1,-1,2,1,3,1,4,-5,-5,-4,-10,8,9,-1,-5,-7,1,-7,2,-9,6,10,-9,-10,2,1,-6,9,-2,-10,-5,5,5,-8,-10,3,-6,9,-10,2,-5,-3,9,-10,-2,-9,-7,4,-6,10,-1,3,8,5,-1,9,7,8,-5,8,-7,6,-1,8,7,3,-3,-5,8,-8,-6,-6,-10,-2,1,4,-7,3,-3,5,-1,7,-5,-4,2,-6,10,3,6,-6,-5,6,1,2,-2,-3,5,8,2,-7,-5,-7,4,-6,-5,-9,5,4,7,-9,5,6,1,2,-6,-2,-3,-8,6,9,-8,-4,6,-8,-6,-5,-8,10,5,-7,-2,-1,-5,-4,-3,-4,5,-6,8,5,-9,-4,3,10,-8,6,3,7,-6,-1,-7,-4,5,-3,-1,8,3,1,-5,-4,6,-5,9,9,6,-6,6,-5,-7,-5,-9,10,-4,7,-2,2,-1,10,-10,5,10,-9,3,-1,-2,-1,-9,10,4,5,-6,-5,-6,9,6,4,-7,-4,6,-3,2,-9,8,8,-7,-9,10,2,-1,-3,-6,2,-1,6,-4,6,-4,8,-4,-6,-9,-6,9,4,10,6,4,9,-6,3,-5,-7,5,3,-4,-2,1,10,5,-1,-3,1,9,-5,9,7,8,-3,9,-2,-4,-4,10,9,1,-2,-1,2,-7,6,-4,7,5,2,-9,-7,-9,-10,-6,-6,-2,-9,-5,2,-7,-5,-9,2,-6,10,-1,10,7,-8,-10,-9,-5,5,1,-10,-4,-1,1,9,-10,-5,-3,10,5,-2,-2,-9,-9,-7,-10,9,5,-8,-5,-6,-5,7,-5,9,-5,-7,10,-8,-10,9,3,5,10,-4,4,2,-10,9,-8,-7,9,-1,-10,8,-3,2,-7,-4,2,-1,-8,6,-4,5,-5,-4,-8,3,-6,-10,10,-5,-6,-3,4,7,-1,-2,-9,-6,1,9,6,9,-7,-1,8,-5,4,7,3,2,6,-10,2,1,7,5,6,-9,3,-1,5,-7,3,7,-7,-2,2,10,-10,-7,5,-4,8,-3,1,-1,-9,5,4,9,-10,6,3,-6,-1,1,7,-6,-7,5,4,-6,6,-4,-5,6,4,-7,-2,-1,6,-8,7,7,6,6,7,10,5,-8,6,8,-7,-8,-8,1,-3,8,-4,8,6,-7,-5,-8,4,-3,-1,-2,-5,-5,-1,6,5,6,8,9,-5,9,-7,4,-5,2,7,-2,6,5,4,-1,-7,10,10,-9,10,-7,-5,8,8,-5,6,9,-7,-7,-8,-3,5,2,5,-2,-9,1,10,5,-1,-4,2,-7,10,1,4,4,-9,5,-8,-10,6,3,3,5,-2,1,4,2,-3,1,9,7,2,6,10,10,-9,3,3,-8,-1,-9,-8,-9,4,-8,-7,-2,8,-10,-4,-4,5,7,-9,5,5,-5,2,3,3,-10,-8,-9,8,7,-2,-7,10,7,8,-9,5,-5,7,-5,-1,1,5,10,-1,-9,7,2,-7,-7,2,-7,2,-5,10,-9,5,2,2,-5,-8,8,10,3,8,2,9,-6,-9,-10,-1,2,1,-5,-6,5,-7,-9,10,4,-5,-9,-6,-3,-6,-6,2,-2,-1,-5,9,5,3,-3,-8,-3,3,-7,-9,-6,3,-3,-9,9,3,-1,6,-10,-9,-1,8,-2,-8,-10,9,-3,9,9,-2,-9,6,9,5,-8,2,3,-5,-3,-2,-1,10,-3,-9,-6,-5,-8,-7,3,-8,-8,2,10,-6,10,7,-1,5,-7,-10,-5,-10,-6,-10,8,-9,6,-10,9,-3,-6,-2,9,-10,-2,-9,-5,-8,5,1,-5,2,4,-2,-5,-3,7,-7,3,-3,10,-1,-1,8,-8,9,-9,-7,-10,5,-3,-6,4,-7,3,-3,1,7,-3,-8,-4,-4,-10,6,-9,-7,9,-3,9,3,9,2,-8,-2,2,1,8,8,8,8,-5,10,-10,-9,2,-8,8,10,9,-8,-3,8,6,-1,-10,-2,4,10,-4,3,-3,-8,1,6,2,-2,4,-10,5,-7,-10,1,10,8,-2,-1,-1,5,-8,3,-6,-9,-4,5,8,-6,8,2,9,-3,2,8,-4,7,-6,4,-5,4,-1,1,-10,8,2,-7,2,4,3,-9,-4,9,-7,4,5,3,9,-5,-9,-9,5,-4,6,-2,1,-8,-8,-7,-9,6,10,-1,-1,8,-1,3,-4,2,-6,-3,-6,1,7,8,8,-1,3,-7,-10,6,-3,5,7,-9,2,9,-10,-3,-10,-2,-4,7,7,-2,1,6,9,1,-9,-9,10,-10,-10,-9,3,-1,6,-2,3,8,4,-8,-5,8,-7,6,7,-10,-8,-9,10,-8,9,-9,-6,6,1,4,3,2,1,9,-6,6,10,5,-7,-8,2,9,-4,-9,-1,5,-7,5,-6,7,-3,-6,-10,5,-5,-4,-10,-5,9,1,7,5,-2,-3,5,8,4,-3,6,-2,10,-8,-8,-5,8,-1,2,10,-6,-2,-6,-9,6,-7,-9,-3,-6,9,5,2,-2,10,-9,-9,5,6,-2,2,-8,-10,9,-7,-4,8,4,3,-3,1,-3,-6,2,10,10,1,10,-6,5,-3,-4,8,-10,-4,-6,-4,-5,-7,-4,-8,10,2,-3,8,-6,6,-1,5,-9,-4,-4,-4,-9,-6,10,9,5,10,2,5,9,7,10,-3,3,-4,6,-7,-8,9,-7,8,10,2,-5,3,10,8,-3,1,-6,4,10,8,4,-8,6,5,-3,1,3,4,3,5,2,-4,8,2,-9,10,6,6,-3,9,5,-5,-3,4,-10,-3,-5,-1,-3,3,-3,-7,10,-2,-4,10,-2,-10,4,2,2,-8,-10,-10,-4,-9,7,-6,1,1,-1,-7,-3,-8,2,3,-5,3,-2,10,-7,2,7,10,-8,-3,1,9,-8,1,7,4,-6,7,9,5,8,-9,-5,-5,1,9,-10,5,5,6,1,4,-6,-7,-8,-2,-10,-3,3,8,-6,5,9,-1,-8,-8,8,10,1,-10,10,7,-4,-6,6,10,-3,5,-7,-6,-3,7,6,-7,5,-8,-9,6,5,8,-6,-5,-3,2,-7,6,3,-3,-1,8,8,-2,2,8,-1,-1,5,7,6,-2,6,-7,1,9,-10,9,-2,-5,-8,2,-1,6,8,-8,1,-9,7,-7,6,10,3,-6,-10,-9,-5,-10,3,6,1,6,-3,-10,-1,-9,-5,2,10,-4,8,3,-4,4,10,1,-4,-3,1,9,10,-8,-9,-4,-6,-3,2,2,8,-3,5,-10,-2,8,-6,-7,7,3,4,6,6,8,3,3,-5,-10,2,-3,-2,-8,-10,-5,10,2,5,-6,7,-8,4,-4,8,3,-5,-4,7,-5,9,-3,-8,-5,-3,6,6,2,5,-3,1,3,-2,3,1,8,8,2,-8,-10,9,1,-8,-7,7,6,-8,4,-7,1,4,1,3,-9,10,2,-5,-7,3,8,8,10,4,-5,-2,1,6,-10,-5,9,-8,7,3,-6,1,-8,7,-2,1,-2,-4,9,-4,8,-7,7,10,-9,-9,9,9,9,-5,-7,-10,1,1,-1,-8,6,-10,1,6,-2,2,-5,9,9,6,-2,4,-8,1,1,2,5,10,-1,3,-1,7,10,-9,9,4,2,5,6,-1,5,4,-7,-7,1,4,-7,-6,-6,-5,-2,8,-10,6,-9,4,-2,6,-3,10,3,5,-4,6,-8,8,-1,-6,9,8,8,-4,10,-2,2,-8,5,-6,4,10,4,-4,6,7,-1,-5,-7,-3,-10,-2,6,-9,5,9,-9,3,-9,-8,6,-2,2,-10,-6,-8,6,9,3,-3,3,-8,-3,6,8,8,-1,3,-10,4,5,-2,-5,-5,1,7,-9,8,5,-5,8,-9,6,4,-6,-1,2,2,-6,-6,-4,-1,-9,5,1,-9,3,-9,1,-4,4,5,-1,-5,-3,-2,-5,10,-1,8,-4,2,4,-10,-9,-1,2,-8,5,7,-6,7,-1,-3,-1,-6,-7,-6,-2,-5,1,-3,-2,-5,6,-4,-3,2,-7,8,-8,-5,-3,-6,-9,7,7,-4,-10,-5,-1,9,-10,-9,9,-7,10,-2,4,9,10,-3,3,-5,6,-1,7,-10,2,5,7,-8,3,1,1,1,3,8,1,2,1,4,-5,6,6,-9,-3,-9,1,4,-9,3,10,1,-3,1,-6,4,3,-9,1,-1,6,-9,-1,1,1,-3,5,4,-5,-4,2,-2,-5,-6,-8,-1,9,3,4,-2,-10,-7,9,3,-8,4,-4,-9,-7,5,1,10,-5,-2,9,-7,-8,-3,8,10,-4,10,-3,7,1,3,-8,-2,10,-6,-9,-7,7,-4,8,1,-10,-10,-9,1,8,1,-1,-1,-8,-9,9,-4,7,-1,1,9,-4,-4,-5,-10,1,9,6,-2,-6,-9,-6,-1,-2,10,-6,-7,-9,3,6,-4,-7,-8,2,5,-10,1,1,10,6,-7,10,-3,4,2,-1,6,9,1,3,-7,4,8,-4,7,8,-2,-9,-9,3,3,-8,-2,-5,10,10,-1,-7,-10,-9,1,-4,-8,-8,-5,10,4,7,7,-10,-9,4,9,-1,4,-7,-9,-6,3,6,6,6,-4,-8,4,-9,2,-5,7,-9,7,-4,8,-3,-5,-7,-3,-10,5,-1,6,3,3,9,5,-9,-4,9,4,-3,9,9,-4,-2,-5,-9,2,10,-2,-5,5,-1,8,2,-2,-2,-4,6,10,-8,-10,7,-1,-7,-6,-3,-8,-1,-6,8,-8,10,1,-2,3,-5,9,7,9,-4,-10,-5,1,5,-10,7,5,-2,3,-5,-5,3,4,-3,-6,9,4,-4,-1,4,2,-3,-9,3,-10,10,1,-9,-3,-10,-9,-7,-5,2,10,9,-7,10,7,10,4,-5,1,-1,-6,5,2,-2,3,-2,10,-6,6,-5,-1,-10,-4,1,-9,-2,-7,-4,-1,5,8,6,1,-7,9,-9,6,5,-6,-7,-3,2,8,-7,10,-2,1,8,-1,8,6,10,7,-6,-4,-8,4,4,-5,2,5,6,1,8,9,-1,1,1,-7,-3,-9,-5,-2,-8,2,-4,3,4,6,-7,-8,-3,10,-1,10,7,4,4,-2,4,-2,4,-10,1,-2,2,9,-1,9,5,5,-1,-5,-8,7,5,-10,-5,7,8,-4,-9,8,-1,3,6,-1,8,2,-5,8,8,-8,10,-1,-3,9,-10,-4,-3,9,5,-8,6,-1,-1,-10,8,-4,-3,7,9,-8,2,-10,-8,-6,-8,8,-6,-4,9,-6,2,-5,6,-3,-7,-6,4,6,4,5,-8,-6,3,1,-4,8,8,2,-3,-1,-5,-9,-10,9,7,-7,-8,-9,-1,-10,9,2,1,-3,7,7,8,9,1,3,-3,-4,3,1,-6,-10,8,4,6,-4,-9,2,-6,-7,-2,-8,-3,5,8,4,6,-10,-6,4,10,-4,10,10,9,-7,-10,-6,-7,-10,7,-10,-8,7,-3,-5,-2,5,6,-10,-1,-8,9,-5,-6,-3,7,-8,-2,-8,-8,9,5,-2,7,8,8,-2,-1,-5,-10,-2,2,3,-4,10,-5,2,2,10,5,-1,3,9,-8,3,-5,-6,-2,2,9,8,10,5,1,3,-3,-8,-8,2,-3,4,7,-4,9,7,-7,-2,-4,-9,2,2,6,4,8,10,1,9,5,9,9,-2,2,3,2,-10,4,2,1,-4,1,10,7,10,-3,6,8,8,1,-3,-1,-7,-4,-5,-2,3,2,-5,-3,2,7,-9,5,2,-9,9,9,-7,5,-7,-10,2,6,-10,4,6,-10,-6,-10,-3,5,-1,7,7,-7,-9,-7,-8,10,-3,-3,-8,1,10,-6,2,-4,-6,-10,-3,9,5,-4,-10,-4,1,-9,-10,4,-6,2,2,1,-7,2,8,-3,-7,8,3,10,7,10,-2,9,5,-7,7,4,9,-5,5,-1,-9,2,1,4,3,-7,-10,-4,6,-1,-9,9,1,6,6,-10,8,-6,4,-9,6,2,10,3,5,-3,1,2,-7,-7,10,9,9,-9,5,-2,3,1,9,-1,1,9,-5,-3,-3,-7,-10,-3,4,-4,9,2,-9,7,-8,-4,-4,1,6,-4,-6,4,-1,-7,-8,-2,6,-8,10,4,-6,8,-1,-9,-5,-8,8,-9,8,2,6,4,9,-8,9,-6,10,5,3,10,9,-10,-1,-3,-4,6,10,-3,-2,-9,-3,-6,-9,4,-6,-1,-2,1,-2,4,-1,8,-8,10,2,-3,-4,-7,9,-6,-6,10,-2,3,7,-1,-6,8,10,8,-9,8,-9,8,-10,4,3,-6,-5,8,6,10,8,8,8,-3,-6,-2,-8,4,5,6,2,-1,-10,-10,-10,-8,10,10,1,-7,-4,1,-9,2,3,-10,-9,-5,-1,5,7,2,1,-9,5,1,-5,3,-7,8,2,-8,-10,-2,-10,-4,2,8,8,-8,-3,2,1,-2,10,-2,-7,-5,-5,-7,6,4,7,-3,-9,-8,10,-10,5,1,3,8,-2,-6,2,2,7,5,-1,-1,-1,-3,-8,4,-7,9,-6,2,9,-7,-1,8,8,-4,-4,-7,5,-8,5,6,-6,-3,-1,-2,-3,1,9,-4,3,-6,-2,-5,-5,9,4,-3,2,3,-3,4,-6,-9,-4,-2,2,5,-2,-2,5,8,-9,-2,-9,4,1,-7,1,-2,1,-4,-1,-9,-1,-10,2,-6,9,4,2,-9,4,-8,3,1,-3,9,4,-8,8,-1,-6,-5,-4,2,-5,-9,-8,-7,8,-7,3,-6,3,-3,-2,3,-1,4,7,1,8,2,-8,6,-9,6,8,-10,-8,2,-7,-9,-3,-6,-8,4,-9,-1,-7,1,-2,7,-1,-9,-10,-8,-5,-7,-9,-1,-10,-2,-1,-5,1,-4,5,1,8,4,2,-7,10,-9,5,-5,-5,7,1,6,-10,-3,4,4,5,-10,-1,-7,-10,-9,4,-3,2,-7,-2,2,-3,-8,10,-9,-9,5,-7,-10,-7,-2,-6,2,-5,-10,9,-8,9,-7,9,6,-4,-9,-3,8,1,-3,-6,-2,1,7], dtype = "uint16")#candidate|4753|(3600,)|const|uint16
call_4751 = relay.TupleGetItem(func_896_call(relay.reshape(const_4752.astype('float32'), [7, 10, 13]), relay.reshape(const_4753.astype('uint16'), [10, 360]), ), 1)
call_4754 = relay.TupleGetItem(func_900_call(relay.reshape(const_4752.astype('float32'), [7, 10, 13]), relay.reshape(const_4753.astype('uint16'), [10, 360]), ), 1)
output = relay.Tuple([uop_4716,call_4746,call_4751,const_4752,const_4753,])
output2 = relay.Tuple([uop_4718,call_4747,call_4754,const_4752,const_4753,])
func_4764 = relay.Function([], output)
mod['func_4764'] = func_4764
mod = relay.transform.InferType()(mod)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4764_call = mutated_mod.get_global_var('func_4764')
call_4765 = func_4764_call()
output = call_4765
func_4766 = relay.Function([], output)
mutated_mod['func_4766'] = func_4766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4831 = relay.var("var_4831", dtype = "float64", shape = (8, 13, 11))#candidate|4831|(8, 13, 11)|var|float64
uop_4832 = relay.asin(var_4831.astype('float64')) # shape=(8, 13, 11)
func_3445_call = mod.get_global_var('func_3445')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_4836 = relay.TupleGetItem(func_3445_call(), 0)
call_4837 = relay.TupleGetItem(func_3446_call(), 0)
output = relay.Tuple([uop_4832,call_4836,])
output2 = relay.Tuple([uop_4832,call_4837,])
func_4839 = relay.Function([var_4831,], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
var_4840 = relay.var("var_4840", dtype = "float64", shape = (8, 13, 11))#candidate|4840|(8, 13, 11)|var|float64
output = func_4839(var_4840)
func_4841 = relay.Function([var_4840], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3910_call = mod.get_global_var('func_3910')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_4843 = func_3910_call()
call_4844 = func_3910_call()
func_3837_call = mod.get_global_var('func_3837')
func_3843_call = mutated_mod.get_global_var('func_3843')
var_4852 = relay.var("var_4852", dtype = "uint32", shape = (576,))#candidate|4852|(576,)|var|uint32
var_4853 = relay.var("var_4853", dtype = "int8", shape = (352,))#candidate|4853|(352,)|var|int8
const_4854 = relay.const([-2,3,-1,-3,-10,10,2,3,-10,4,9,4,-10,3,2,6,-1,10,-4,2,5,7,7,-7,-9,2,2,9,1,-3,-6,-1,-10,10,3,9,5,-5,7,9,2,4,-7,7,-7,-3,3,-9,-4,-8,-2,-4,6,9,-3,1,-10,-3,-8,-7,5,5,3,-1,-4,3,-10,2,8,1,-8,1,5,-6,-6,-9,2,-7,9,-1,8,8,-1,-4,-10,4,-7,-9,-9,-7,-8,6,-2,7,2,4,-4,-10,3,-5,10,4,-4,-8,-7,-10,3,9,10,7,-5,-3,-5,5,-8,-2,2,4,10,9,-10,4,-4,9,10,7,8,6,5,-3,2,3,-3,9,2,-1,-8,6,-10,5,2,7,4,-5,-3,-3,-4,-10,-5,10,-9,-10,8,9,2,9,-8,3,-10,-10,-5,-9,-1,-7,9,6,8,5,3,-5,-9,-8,-1,-8,9,5,3,4,2,-2,9,-9,7,5,9,6,4,-5,-5,7,3,10,5,-1,5,10,-3,-9,4,-2,-3,10,-2,-6,10,-3,-7,-8,-6,1,-4,5,9,-10,9,-5,10,-2,4,1,5,-6,8,-7,5,-8,-9,6,7,3,6,8,7,10,2,-5,7,7,5,2,2,-7,-2,-10,-9,-7,-3,2,-7,-1,-4,-3,-6,-8,6,3,9,8,-4,-2,-3,7,4,-6,-4,9,3,-10,-4,-2,-8,8,-4,1,-5,1,10,4,9,-6,-8,2,-8,-10,1,-3,-4,6,-7,8,-10,2,6,5,-7,-10,-5,-4,-3,3,6,-2,-7,10,5,-8,8,-6,-5,2,1,6,-4,-7,7,-2,-8,-5,5,10,5,7,-7,8,2,-3,1,9,2,-4,-7,-1,-3,3,2,-9,3,-10,7,-4,7,-1,9,-6,5,-9,8,-9,-6,8,8,-5,-1,3,3,8,7,8,1,-6,-4,1,6,-5,-4,2,-10,5,2,-3,7,4,-3,9,-6,2,-3,4,-5,-2,3,3,3,-9,5,-1,-3,6,7,2,2,5,-5,5,-9,-10,-2,-8,-10,9,8,10,5,9,-1,5,-5,9,1,-1,-10,5,-4,7,9,-1,-6,-2,7,2,4,-1,8,-8,-3,-9,8,7,6,-5,-1,-4,7,9,9,10,-9,-10,-3,3,-7,-1,6,-6,3,7,-8,-3,9,9,-5,3,1,10,2,-10,-8,4,8,-6,3,-4,-6,-8,-1,7,5,8,3,-2,3,-4,2,5,-1,-2,6,-7,-3,9,1,7,-4,-4,5,2,7,-9,7,2,4,-2,9,5,4,7,-10,3,-1,2,4,-4,-1,3,-6,6,6,2,-9,9,-1,-9,1,6,1,-8,4,-8,-6,5,-6,3,10,9,-2,-3,5,5,-5,7,-1,-3,-8,9,3,-7,-6,-3,6,6,-8,-1,2,-8,7,7,2,-2,-2,-4,5,-6,-2,7,-8,-5,3,-1,2,-4], dtype = "int8")#candidate|4854|(560,)|const|int8
call_4851 = relay.TupleGetItem(func_3837_call(relay.reshape(var_4852.astype('uint32'), [4, 12, 12]), relay.reshape(var_4852.astype('uint32'), [4, 12, 12]), relay.reshape(var_4853.astype('int8'), [352,]), relay.reshape(const_4854.astype('int8'), [560,]), ), 13)
call_4855 = relay.TupleGetItem(func_3843_call(relay.reshape(var_4852.astype('uint32'), [4, 12, 12]), relay.reshape(var_4852.astype('uint32'), [4, 12, 12]), relay.reshape(var_4853.astype('int8'), [352,]), relay.reshape(const_4854.astype('int8'), [560,]), ), 13)
output = relay.Tuple([call_4843,call_4851,var_4852,var_4853,const_4854,])
output2 = relay.Tuple([call_4844,call_4855,var_4852,var_4853,const_4854,])
func_4856 = relay.Function([var_4852,var_4853,], output)
mod['func_4856'] = func_4856
mod = relay.transform.InferType()(mod)
var_4857 = relay.var("var_4857", dtype = "uint32", shape = (576,))#candidate|4857|(576,)|var|uint32
var_4858 = relay.var("var_4858", dtype = "int8", shape = (352,))#candidate|4858|(352,)|var|int8
output = func_4856(var_4857,var_4858,)
func_4859 = relay.Function([var_4857,var_4858,], output)
mutated_mod['func_4859'] = func_4859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_4891 = relay.TupleGetItem(func_2484_call(), 0)
call_4892 = relay.TupleGetItem(func_2486_call(), 0)
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
const_4902 = relay.const(6, dtype = "uint32")#candidate|4902|()|const|uint32
const_4903 = relay.const([[1,5,9,-10,6,6,-10,-7,-1,-3,-10,9,-4,4,4,-10,-7,3,-10,-9,-10,10,-7,-6,8,5,-2,-3,-5,-10,8,1,5,-3,8,1,9,9,6,6,5,-4,-8,-7,-6,1,7,9,-8,8,6,-6,-1,-1,-2,-3,-10,6,-3,-2,-2,-3,7,-2,4,-4,9,7,7,-7,7,-6,6,-9,-6,10,-6,-6,4,-1,-8,-1,7,7,6,-2,5,-1,9,3,-1,-3,5,3,7,-8,-8,-4,-6,10,-6,-4,8,5,5,3,1,4],[-5,-3,-10,-7,-9,5,3,-7,8,1,9,3,4,-2,4,-8,3,-1,-4,3,-1,-1,4,3,-1,7,-10,4,10,6,-1,5,8,7,6,7,8,10,-6,-5,-7,7,-7,-9,8,-3,2,5,3,3,-1,7,-8,5,-9,-3,5,4,-4,10,-2,10,-10,3,-6,3,7,-1,6,-1,4,-3,-5,-2,-4,10,3,10,-7,-7,9,2,-1,-3,7,-1,-7,2,5,-8,6,5,-9,3,5,-1,-1,2,-6,-8,-6,-7,-7,-4,5,-1,1,-8]], dtype = "uint32")#candidate|4903|(2, 108)|const|uint32
call_4901 = relay.TupleGetItem(func_672_call(relay.reshape(const_4902.astype('uint32'), []), relay.reshape(const_4903.astype('uint32'), [9, 8, 3]), ), 0)
call_4904 = relay.TupleGetItem(func_675_call(relay.reshape(const_4902.astype('uint32'), []), relay.reshape(const_4903.astype('uint32'), [9, 8, 3]), ), 0)
uop_4929 = relay.cos(const_4903.astype('float32')) # shape=(2, 108)
output = relay.Tuple([call_4891,call_4901,const_4902,uop_4929,])
output2 = relay.Tuple([call_4892,call_4904,const_4902,uop_4929,])
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mutated_mod.get_global_var('func_4934')
call_4935 = func_4934_call()
output = call_4935
func_4936 = relay.Function([], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2389_call = mod.get_global_var('func_2389')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_4940 = func_2389_call()
call_4941 = func_2389_call()
func_2313_call = mod.get_global_var('func_2313')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_4950 = func_2313_call(relay.reshape(call_4940.astype('uint64'), [2, 9, 13]))
call_4951 = func_2313_call(relay.reshape(call_4940.astype('uint64'), [2, 9, 13]))
func_4100_call = mod.get_global_var('func_4100')
func_4103_call = mutated_mod.get_global_var('func_4103')
var_4956 = relay.var("var_4956", dtype = "int8", shape = (378,))#candidate|4956|(378,)|var|int8
call_4955 = relay.TupleGetItem(func_4100_call(relay.reshape(var_4956.astype('int8'), [378,])), 1)
call_4957 = relay.TupleGetItem(func_4103_call(relay.reshape(var_4956.astype('int8'), [378,])), 1)
var_4979 = relay.var("var_4979", dtype = "int8", shape = (378,))#candidate|4979|(378,)|var|int8
bop_4980 = relay.add(var_4956.astype('uint64'), relay.reshape(var_4979.astype('uint64'), relay.shape_of(var_4956))) # shape=(378,)
output = relay.Tuple([call_4940,call_4950,call_4955,bop_4980,])
output2 = relay.Tuple([call_4941,call_4951,call_4957,bop_4980,])
func_4986 = relay.Function([var_4956,var_4979,], output)
mod['func_4986'] = func_4986
mod = relay.transform.InferType()(mod)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4986_call = mutated_mod.get_global_var('func_4986')
var_4988 = relay.var("var_4988", dtype = "int8", shape = (378,))#candidate|4988|(378,)|var|int8
var_4989 = relay.var("var_4989", dtype = "int8", shape = (378,))#candidate|4989|(378,)|var|int8
call_4987 = func_4986_call(var_4988,var_4989,)
output = call_4987
func_4990 = relay.Function([var_4988,var_4989,], output)
mutated_mod['func_4990'] = func_4990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4120_call = mod.get_global_var('func_4120')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_4992 = relay.TupleGetItem(func_4120_call(), 0)
call_4993 = relay.TupleGetItem(func_4121_call(), 0)
output = relay.Tuple([call_4992,])
output2 = relay.Tuple([call_4993,])
func_4998 = relay.Function([], output)
mod['func_4998'] = func_4998
mod = relay.transform.InferType()(mod)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4998_call = mutated_mod.get_global_var('func_4998')
call_4999 = func_4998_call()
output = call_4999
func_5000 = relay.Function([], output)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4026_call = mod.get_global_var('func_4026')
func_4027_call = mutated_mod.get_global_var('func_4027')
call_5009 = func_4026_call()
call_5010 = func_4026_call()
output = call_5009
output2 = call_5010
func_5015 = relay.Function([], output)
mod['func_5015'] = func_5015
mod = relay.transform.InferType()(mod)
mutated_mod['func_5015'] = func_5015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5015_call = mutated_mod.get_global_var('func_5015')
call_5016 = func_5015_call()
output = call_5016
func_5017 = relay.Function([], output)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5047 = func_5015_call()
call_5048 = func_5015_call()
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
var_5059 = relay.var("var_5059", dtype = "uint32", shape = ())#candidate|5059|()|var|uint32
var_5060 = relay.var("var_5060", dtype = "uint32", shape = (216,))#candidate|5060|(216,)|var|uint32
call_5058 = relay.TupleGetItem(func_672_call(relay.reshape(var_5059.astype('uint32'), []), relay.reshape(var_5060.astype('uint32'), [9, 8, 3]), ), 0)
call_5061 = relay.TupleGetItem(func_675_call(relay.reshape(var_5059.astype('uint32'), []), relay.reshape(var_5060.astype('uint32'), [9, 8, 3]), ), 0)
uop_5064 = relay.erf(call_5058.astype('float64')) # shape=(9, 8, 3)
uop_5066 = relay.erf(call_5061.astype('float64')) # shape=(9, 8, 3)
output = relay.Tuple([call_5047,var_5059,var_5060,uop_5064,])
output2 = relay.Tuple([call_5048,var_5059,var_5060,uop_5066,])
func_5072 = relay.Function([var_5059,var_5060,], output)
mod['func_5072'] = func_5072
mod = relay.transform.InferType()(mod)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5072_call = mutated_mod.get_global_var('func_5072')
var_5074 = relay.var("var_5074", dtype = "uint32", shape = ())#candidate|5074|()|var|uint32
var_5075 = relay.var("var_5075", dtype = "uint32", shape = (216,))#candidate|5075|(216,)|var|uint32
call_5073 = func_5072_call(var_5074,var_5075,)
output = call_5073
func_5076 = relay.Function([var_5074,var_5075,], output)
mutated_mod['func_5076'] = func_5076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5120 = relay.var("var_5120", dtype = "float32", shape = (13, 1, 5))#candidate|5120|(13, 1, 5)|var|float32
uop_5121 = relay.asinh(var_5120.astype('float32')) # shape=(13, 1, 5)
uop_5138 = relay.sqrt(uop_5121.astype('float64')) # shape=(13, 1, 5)
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_5140 = relay.TupleGetItem(func_2730_call(), 0)
call_5141 = relay.TupleGetItem(func_2732_call(), 0)
func_1171_call = mod.get_global_var('func_1171')
func_1173_call = mutated_mod.get_global_var('func_1173')
const_5143 = relay.const([-2,-1,10,-3,7,-4,-9,7,-4,-2,1,1,1,3,3,1,2,-10,1,9,-5,4,-5,-9,-3,-8,-6,-2,9,9,1,9,9,-6,-5,8,-1,3,5,-4,4,-3,-3,7,8,3,-5,-7,-4,-7,-9,10,-7,-5,-4,1,3,8,8,-7,1,-8,-4,3,7,8,4,7,8,6,-2,-2,10,10,-7,-6,9,-7,10,-3,-9,-4,-7,-8,6,-1,-10,5,4,10,4,-10,-2,8,-6,-9,-9,9,8,3,1,4,6,3,-7,-1,-1,-6,9,-2,-4,-9,-6,1,8,-7,7,-2,3,2,10,-10,4,1,9,-8,6,8,-10,5,-4,-6,-6,-5,-4,8,10,-5,4,-10,1,8,7,-9,-6,4,-9,-10,-1,-5,-1,10,-10,8,1,9,-7,-9,-2,3,5,9,-10,-10,-5,7,-7,-9,-4,-1,6,8,6,8,-8,-9,8,8,6,-10,-2,-6,6,7,2,-4,9,-4,9,-6,-4,-9,-10,10,-6,6,-9,-8,8,4,3,-2,2,-9,7,10,-10,-4,8,6,-6,2,7,-10,-5,-8,-6,5,4,1,-9,5,-9,-10,4,-1,-10,-6,2,1,4,-10,-10,8,-8,7,9,-7,-10,-7,2,-5,-10,-9,-8,-4,2,3,-10,7,-2,-7,8,-9,-10,-3,4,-7,8,7,-10,10,-6,3,-6,1,-9,-6,2,-5,4,9,5,-2,-3,3,-9,-5,-6,8,3,9,-10,6,2,6,-1,-4,2,1,5,9,9,-9,-4,-8,-10,6,-1,4,6,-9,-7,-3,-9,4,-10,-7,9,-5,-5,-2,7,-7,-2,4,-2,-5,8,-10,4,-10,-9,3,-3,2,1,-4,-2,1,-3,2,-9,-4,4,-5,-8,-3,2,-6,6,4,2,8,-1,9,-3,9,7,1,9,-8,-1,-7,-8,-9,-3,-2,2,-10,-6,-9,8,-10,-3,-6,5,1,-6,-8,-1,9,-1,-8,10,6,-7,-4,4,1,5,2,-3,7,-1,-4,-3,6,-5,-6,4,-2,8,-5,-1,10,6,-7,4,8,10,-8,6,-6,-10,-5,-4,-5,-4,5,-9,-3,-6,3,6,-7,-1,1,1,-8,10,5,-2,-6,-1,4,-5,-6,-9,3,8,4,-5,9,-2,6,2,-6,4,-3,-5,6,5,-5,8,-2,7,8,-10,-9,3,4,9,-2,-4,-7,-3,10,-2,6,2,6,5,3,-2,8,10,-3,-2,1,1,6,2,3,1,-3,7,-4,7,8,10,5,7,-8,-2,-6,8,8,-8,-3,10,1,9,-2,1,-4,-7,10,6,5,-6,10,3,-3,8,-7,1,-10,3,5,-3,6,7,-5,3,-10,1,4,-7,-2,-10,5,-8,2,-6,-7,5,10,1,-4,3,5,3,7,-6,-4,7,10,2,-9,8,-9,9,-4,3,7,1,2,-3,1,-8,-8,2,-2,-9,-7,7,9,-5,8,-10,-6,9,4,-6,3,-9,1,-10,-10,-4,-5,10,8,-6,5,-1,6,8,-2,-6,10,-6,9,-4,5,3,-10,6,10,4,10,6,-5,-8,1,-2,7,10,3,4,-3,-2,2,2,-9,-7,4,-5,-8,-8,4,9,-7,9,4,-10,10,1,1,4,-4,9,4,8,8,2,5,7,-2,-4,10,3,-7,2,2,7,6,-3,-3,-6,-7,5,2,6,8,10,5,8,10,9,7,-7,2,-5,8,-6,-2,9,-2,-5,8,-10,9,-4,-7,2,-8,9,6,5,-7,-1,3,-10,8,7,3,8,5,-2,2,8,-2,10,-1,3,7,5,-5,-6,2,-8,3,8,7,-2,-3,-9,-9,4,5,8,-1,-3,-9,1,4,-8,-5,-5,-6,1,7,-6,-2,-6,8,-2,-8,9,-6,3,-10,-5,9,9,-6,9,-4,-2,7,-5,6,6,-2,3,5,-6,-1,4,-2,7,5,3,-1,6,-7,-3,-6,-6,5,-4,7,7,-2,10,-4,-2,-3,6,10,-3,3,-9,-6,5,4,4,-9,1,-4,5,-6,-6,-10,4,-6,-8,-3,-6,-1,4,2,9,1,-3,9,-2,3,-5,-10,-6,7,5,-2,-1,-2,8,-5,5,7,10,8,-4,-9,5,-9,8,-4,6,-4,8,-3,1,-5,3,-6,1,-4,4,-3,5,-9,-8,5,-6,-4,-6,1,5,4,10,-1,-4,4,-8,-7,1,-5,-7,-6,1,9,6,-5,-8,1,8,8,6,-10,-1,9,-10,-10,7,2,-5,-5,1,-4,-8,-6,8,8,6,-10,4,-8,4,-3,-3,8,6,-10,1,5,-10,8,4,4,4,6,5,-2,1,9,10,3,1,2,-5,3,-9,3,-7,-7,3,8,-7,-7,6,4,5,2,9,10,-3,1,-4,-9,-3,3,-10,-2,-1,-7,4,5,-1,5,-10,-7,-8,7,5,4,-10,6,7,-9,6,7,1,1,-8,-3,-1,-3,1,2,6,5,-2,8,-8,10,-4,8,-1,-7,-7,-9,-1,9,4,9,9,8,5,-3,-4,1,-9,5,-9,-1,5,5,4,-9,5,-10,1,6,-5,-1,3,9,10,-4,-6,-5,6,-6,-2,-1,-2,1,-9,9,7,3,1,-2,5,2,-2,2,-5,-8,-5,7,-10,-3,7,-4,-4,-6,10,8,5,-5,-4,-3,-7,-9,-10,2,-5,8,8,10,-9,-7,-6,2,-2,8,-8,-7,4,9,-2,-3,-5,1,-4,-5,7,2,6,5,-5,-6,-8,7,-10,-9,7,-1,4,8,-3,1,-7,-3,8,-1,-5,-5,-3,-8,-7,7,-8,6,10,-9,9,3,4,-8,-6,-5,-7,5,-3,5,9,-5,10,-10,-7,3,1,-1,4,9,-8,2,-7,5,1,1,2,8,9,-2,6,-2,3,-4,-3,-8,9,6,8,-7,3,-10,6,-7,-5,1,4,10,9,6,-7,4,-6,-4,-2,-5,9,-10,-3,-9,-5,10,6,-7,-4,-10,7,8,2,8,-1,1,-10,4,-9,4,3,-1,3,-5,-1,9,7,-1,-1,7,4,3,-2,-9,-10,-2,8,2,-3,10,4,-4,-9,3,8,2,-9,-7,-2,9,9,4,7,9,-5,-8,10,-1,8,9,-2,-7,-7,-2,-1,2,-4,-7,4,-3,-7,-9,2,6,-2,6,-7,6,9,5,-9,-2,-3,4,-7,10,5,-10,9,-6,10,-6,-9,1,2,-10,2,4,10,-5,-4,-10,-4,7,-10,-4,-9,7,5,-7,-5,8,6,-3,9,-3,4,-5,6,2,6,-6,8,-4,5,-10,6,-8,-9,9,10,2,-5,-4,10,9,-4,3,-2,5,-8,-8,10,-9,6,8,1,-9,6,9,9,-3,5,-3,5,-6,2,9,9,-2,7,-8,9,-5,1,2,-4,-3,1,7,3,-8,7,-8,7,-1,9,5,9,4,3,-1,10,-7,-9,8,-10,-8,8,-5,-7,1,8,-5,-5,-8,-6,-7,-3,1,1,-4,8,7,-8,-2,1,-3,9,-5,-7,-3,1,1,-4,-4,2,5,-9,-7,-7,4,-2,4,-2,-4,-1,4,-4,-6,7,-3,-9,8,-3,7,-4,5,-5,-5,-7,8,5,9,-8,10,-4,-4,-3,3,9,-3,10,-9,8,-1,-5,4,2,-1,-8,-6,8,-7,2,7,9,-6,-2,3,-1,7,-5,7,-4,-10,3,-5,5,2,-4,-1,-2,2,-2,-4,-9,-8,-9,4,5,-6,-1,9,-4,5,1,3,-5,-7,-7,-9,-1,-3,-3,-6,2,-7,4,8,7,8,-1,3,-3,2,-1,-10,-7,-5,-9,-1,2,3,3,3,-7,10,-3,4,3,-8,5,9,1,4,-2,3,2,9,7,5,-5,2,10,-4,9,1,1,8,3,-6,-9,-10,-4,4,1,7,-8,5,-4,3,2,1,-4,-9,-3,4,3,2,-1,3,8,9,9,-6,-5,-10,4,2,2,-7,-8,8,-4,-1,7,-8,-3,2,3,7,-8,-4,-10,-8,-10,7,5,1,4,-4,-5,-7,-1,2,-9,-3,8,7,6,10,2,5,-3,-7,-8,9,5,-2,8,-2,5,-4,-3,-10,-10,-6,-8,-2,-9,7,1,-1], dtype = "int32")#candidate|5143|(1560,)|const|int32
call_5142 = relay.TupleGetItem(func_1171_call(relay.reshape(const_5143.astype('int32'), [13, 10, 12])), 1)
call_5144 = relay.TupleGetItem(func_1173_call(relay.reshape(const_5143.astype('int32'), [13, 10, 12])), 1)
output = relay.Tuple([uop_5138,call_5140,call_5142,const_5143,])
output2 = relay.Tuple([uop_5138,call_5141,call_5144,const_5143,])
func_5145 = relay.Function([var_5120,], output)
mod['func_5145'] = func_5145
mod = relay.transform.InferType()(mod)
var_5146 = relay.var("var_5146", dtype = "float32", shape = (13, 1, 5))#candidate|5146|(13, 1, 5)|var|float32
output = func_5145(var_5146)
func_5147 = relay.Function([var_5146], output)
mutated_mod['func_5147'] = func_5147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_5253 = func_2736_call()
call_5254 = func_2736_call()
var_5257 = relay.var("var_5257", dtype = "bool", shape = (2, 9, 13))#candidate|5257|(2, 9, 13)|var|bool
bop_5258 = relay.bitwise_xor(call_5253.astype('int32'), relay.reshape(var_5257.astype('int32'), relay.shape_of(call_5253))) # shape=(2, 9, 13)
bop_5261 = relay.bitwise_xor(call_5254.astype('int32'), relay.reshape(var_5257.astype('int32'), relay.shape_of(call_5254))) # shape=(2, 9, 13)
output = bop_5258
output2 = bop_5261
func_5266 = relay.Function([var_5257,], output)
mod['func_5266'] = func_5266
mod = relay.transform.InferType()(mod)
mutated_mod['func_5266'] = func_5266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5267 = relay.var("var_5267", dtype = "bool", shape = (2, 9, 13))#candidate|5267|(2, 9, 13)|var|bool
func_5266_call = mutated_mod.get_global_var('func_5266')
call_5268 = func_5266_call(var_5267)
output = call_5268
func_5269 = relay.Function([var_5267], output)
mutated_mod['func_5269'] = func_5269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2869_call = mod.get_global_var('func_2869')
func_2870_call = mutated_mod.get_global_var('func_2870')
call_5322 = relay.TupleGetItem(func_2869_call(), 0)
call_5323 = relay.TupleGetItem(func_2870_call(), 0)
output = call_5322
output2 = call_5323
func_5341 = relay.Function([], output)
mod['func_5341'] = func_5341
mod = relay.transform.InferType()(mod)
output = func_5341()
func_5342 = relay.Function([], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_5361 = relay.TupleGetItem(func_4166_call(), 0)
call_5362 = relay.TupleGetItem(func_4168_call(), 0)
output = relay.Tuple([call_5361,])
output2 = relay.Tuple([call_5362,])
func_5369 = relay.Function([], output)
mod['func_5369'] = func_5369
mod = relay.transform.InferType()(mod)
mutated_mod['func_5369'] = func_5369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5369_call = mutated_mod.get_global_var('func_5369')
call_5370 = func_5369_call()
output = call_5370
func_5371 = relay.Function([], output)
mutated_mod['func_5371'] = func_5371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3048_call = mod.get_global_var('func_3048')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_5457 = relay.TupleGetItem(func_3048_call(), 0)
call_5458 = relay.TupleGetItem(func_3049_call(), 0)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_5459 = func_2736_call()
call_5460 = func_2736_call()
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5465 = func_5015_call()
call_5466 = func_5015_call()
output = relay.Tuple([call_5457,call_5459,call_5465,])
output2 = relay.Tuple([call_5458,call_5460,call_5466,])
func_5478 = relay.Function([], output)
mod['func_5478'] = func_5478
mod = relay.transform.InferType()(mod)
output = func_5478()
func_5479 = relay.Function([], output)
mutated_mod['func_5479'] = func_5479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3445_call = mod.get_global_var('func_3445')
func_3446_call = mutated_mod.get_global_var('func_3446')
call_5497 = relay.TupleGetItem(func_3445_call(), 2)
call_5498 = relay.TupleGetItem(func_3446_call(), 2)
uop_5502 = relay.sin(call_5497.astype('float64')) # shape=(2, 9, 13)
uop_5504 = relay.sin(call_5498.astype('float64')) # shape=(2, 9, 13)
output = relay.Tuple([uop_5502,])
output2 = relay.Tuple([uop_5504,])
func_5507 = relay.Function([], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
mutated_mod['func_5507'] = func_5507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5507_call = mutated_mod.get_global_var('func_5507')
call_5508 = func_5507_call()
output = call_5508
func_5509 = relay.Function([], output)
mutated_mod['func_5509'] = func_5509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5541 = relay.var("var_5541", dtype = "float32", shape = (16, 5, 11))#candidate|5541|(16, 5, 11)|var|float32
uop_5542 = relay.exp(var_5541.astype('float32')) # shape=(16, 5, 11)
func_4383_call = mod.get_global_var('func_4383')
func_4388_call = mutated_mod.get_global_var('func_4388')
const_5549 = relay.const(-8, dtype = "int64")#candidate|5549|()|const|int64
const_5550 = relay.const([[-3,2,-4,-10],[4,6,3,7],[4,-1,-7,-2],[1,-7,-5,7],[4,3,10,8],[5,-1,-4,2],[-6,-5,-1,3],[-10,-1,9,-2],[5,5,-9,3]], dtype = "int64")#candidate|5550|(9, 4)|const|int64
const_5551 = relay.const([-10,5,-10,-9,4,-2,10,-7,-9,-8,1,4,-1,9,7,-10,-8,3,4,3,-9,-4,8,-9,8,-8,1,7,7,7,3,-2,-10,10,-4,5,9,2,1,-6,1,9,6,-5,3,6,9,8,-1,-7,-3,-8,-2,-4,4,-3,4,8,-10,-4,4,9,-7,5,7,-5,-2,7,-5,-6,-2,5,-1,-7,-5,3,10,5,3,9,1,2,-9,7,9,5,2,-7,-5,3,-7,1,2,-9,7,-5,-2,-2,-6,-4,-2,-8,1,9,-2,-5,-1,-8,-6,6,-3,-10,7,-5,-10,-10,8,-9,3,-4,-2,-6,9,6,9,9,-2,-8,-2,4,1,-6,-9,-7,-5,-9,-2,-10,7,8,-9,-1,-5,-1,-9,1,-6,1,6,-2,-1,-9,-6,-5,6,-10,-10,5,-9,4,-1,9,6,5,-8,-4,-7,-3,2,5,-3,1,5,9,-2,1,-2,1,10,7,-4,-6,-3,-4,-9,3,6,-5,1,7,1,-7,8,-8,-5,-8,-7,9,-5,7,2,8,-5,10,-9,9,5,-2,5,3,6,-8,6,-4,-10,9,-10,-9,9,3,6,-9,-10,-6,-2,5,-10,2,-8,-9,7,2,4,-6,-3,-3,3,-10,5,-9,4,-5,-7,-10,-5,-5,8,2,9,7,9,10,3,4,-5,3,7,4,6,10,7,-4,3,9,5,3,-9,5,-3,10,-4,-9,-2,6,9,7,-1,2,-8,5,8,-7,-1,9,-3,-5,-1,-9,-7,10,1,1,10,-6,-6,-2,-1,3,3,-7,10,-5,-6,5,9,9,-5,-4,6,5,-4,-8,8,-6,-3,9,-5,-8,9,4,1,2,8,2,7,-5,6,6,7,5,5,5,8,-10,-7,7,-10,5,-4,-1,4,-3,-3,4,-1,10,-3,-5,-8,-8,-1,-4,-1,-8,-4,5,9,10,-7,10,7,1,4,-1,-10,9,5,2,-10,2,-1,6,6,-2,2,8,-1,-9,6,-9,-2,-10,2,2,4,8,2,-5,-9,9,8,-3,10,-6,-4,5,-5,-3,-6,-1,-9,-6,-2,-9,-8,4,-8,5,-9,-4,-7,-10,-3,9,8,-8,8,9,-4,3,-7,-8,-6,-2,-5,9,-5,-4,10,6,1,6,-9,-9,3,5,-9,-6,-7,9,5,5,4,8,1,3,-9,1,-6,-1,10,-1,-10,-5,5,8,-1,8,10,-1,-2,-3,5,-1,2,-2,-7,-5], dtype = "int64")#candidate|5551|(468,)|const|int64
call_5548 = relay.TupleGetItem(func_4383_call(relay.reshape(const_5549.astype('int64'), []), relay.reshape(const_5550.astype('int64'), [12, 3, 1]), relay.reshape(const_5551.astype('int64'), [12, 3, 13]), ), 1)
call_5552 = relay.TupleGetItem(func_4388_call(relay.reshape(const_5549.astype('int64'), []), relay.reshape(const_5550.astype('int64'), [12, 3, 1]), relay.reshape(const_5551.astype('int64'), [12, 3, 13]), ), 1)
bop_5565 = relay.logical_xor(uop_5542.astype('int32'), const_5549.astype('int32')) # shape=(16, 5, 11)
output = relay.Tuple([call_5548,const_5550,const_5551,bop_5565,])
output2 = relay.Tuple([call_5552,const_5550,const_5551,bop_5565,])
func_5571 = relay.Function([var_5541,], output)
mod['func_5571'] = func_5571
mod = relay.transform.InferType()(mod)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5572 = relay.var("var_5572", dtype = "float32", shape = (16, 5, 11))#candidate|5572|(16, 5, 11)|var|float32
func_5571_call = mutated_mod.get_global_var('func_5571')
call_5573 = func_5571_call(var_5572)
output = call_5573
func_5574 = relay.Function([var_5572], output)
mutated_mod['func_5574'] = func_5574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5612 = func_5015_call()
call_5613 = func_5015_call()
output = call_5612
output2 = call_5613
func_5624 = relay.Function([], output)
mod['func_5624'] = func_5624
mod = relay.transform.InferType()(mod)
output = func_5624()
func_5625 = relay.Function([], output)
mutated_mod['func_5625'] = func_5625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4764_call = mod.get_global_var('func_4764')
func_4766_call = mutated_mod.get_global_var('func_4766')
call_5633 = relay.TupleGetItem(func_4764_call(), 3)
call_5634 = relay.TupleGetItem(func_4766_call(), 3)
func_3910_call = mod.get_global_var('func_3910')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_5647 = func_3910_call()
call_5648 = func_3910_call()
uop_5660 = relay.cosh(call_5633.astype('float64')) # shape=(910,)
uop_5662 = relay.cosh(call_5634.astype('float64')) # shape=(910,)
func_4216_call = mod.get_global_var('func_4216')
func_4218_call = mutated_mod.get_global_var('func_4218')
call_5669 = func_4216_call()
call_5670 = func_4216_call()
func_3837_call = mod.get_global_var('func_3837')
func_3843_call = mutated_mod.get_global_var('func_3843')
var_5672 = relay.var("var_5672", dtype = "uint32", shape = (576,))#candidate|5672|(576,)|var|uint32
const_5673 = relay.const([[-1],[-7],[2],[-9],[-4],[10],[-2],[-8],[6],[4],[7],[-1],[1],[-4],[3],[10],[-2],[2],[-1],[-4],[1],[10],[2],[6],[7],[4],[-9],[-2],[10],[-9],[-1],[8],[-6],[-9],[3],[-3],[-1],[10],[10],[-1],[-7],[9],[-2],[8],[-7],[7],[-6],[1],[-7],[-8],[-8],[-5],[-3],[-2],[2],[-1],[6],[4],[-3],[10],[-1],[-7],[-3],[-6],[3],[-1],[6],[-9],[2],[3],[-3],[-4],[6],[-9],[-2],[8],[7],[8],[-8],[-2],[-10],[-1],[8],[7],[-1],[7],[-5],[-7],[9],[-10],[6],[-4],[-5],[-4],[-9],[-3],[9],[7],[-6],[-9],[-5],[3],[7],[2],[5],[-7],[-10],[-3],[-5],[10],[-3],[-7],[9],[-10],[-8],[-1],[5],[-2],[-1],[8],[-6],[6],[-8],[-3],[-8],[-9],[5],[1],[-9],[8],[2],[-8],[-5],[-9],[5],[-2],[-2],[9],[9],[-5],[4],[-6],[-1],[5],[-10],[9],[4],[8],[10],[-6],[5],[-7],[8],[9],[7],[-4],[1],[10],[-9],[-3],[-9],[2],[2],[3],[-9],[8],[-10],[-3],[1],[8],[9],[9],[-2],[-3],[3],[1],[-10],[5],[4],[3],[-10],[-7],[8],[-9],[-3],[8],[-8],[1],[5],[10],[-2],[10],[-3],[4],[-5],[-1],[10],[5],[10],[-8],[10],[-5],[1],[8],[-2],[4],[1],[-3],[-2],[-4],[-6],[4],[-2],[5],[-3],[-5],[8],[-3],[7],[-7],[-4],[-10],[8],[9],[-2],[7],[-7],[3],[9],[1],[2],[-7],[5],[-1],[5],[-1],[10],[4],[-7],[-6],[-8],[-5],[5],[4],[8],[8],[-3],[-10],[8],[1],[9],[2],[5],[7],[-3],[-9],[9],[5],[3],[-8],[5],[1],[-2],[6],[-4],[3],[1],[3],[3],[6],[-5],[6],[10],[-8],[1],[6],[-1],[-5],[1],[2],[10],[-9],[1],[9],[-1],[10],[1],[-2],[7],[5],[-5],[3],[-1],[-10],[2],[8],[-7],[5],[8],[-2],[8],[-9],[-7],[-1],[10],[-2],[1],[2],[6],[6],[5],[-9],[2],[2],[7],[-1],[5],[-7],[8],[9],[-6],[-4],[6],[2],[-9],[9],[-4],[-8],[-2],[6],[-4],[8],[6],[4],[-5],[-3],[-3],[9],[2],[-1],[-10],[7],[-9],[-2],[-3],[2],[-5],[9],[-8],[-7],[-5],[4]], dtype = "int8")#candidate|5673|(352, 1)|const|int8
const_5674 = relay.const([9,-4,4,-1,2,6,-2,-2,8,-7,-1,1,5,-10,6,-2,1,-5,4,8,7,7,2,-4,-7,9,-3,5,6,7,-3,5,6,10,8,-3,-1,4,2,-6,-8,-6,-3,3,4,-9,8,4,-8,6,-4,10,-1,-9,-4,-1,-9,-7,8,10,-7,-3,-7,-3,-1,10,7,-3,6,-1,-6,-5,9,-7,-10,-1,8,-6,-10,9,-7,9,8,-2,3,-7,6,-5,-1,-4,-9,-10,10,1,4,-3,8,-4,-3,3,10,8,9,2,6,-5,-2,2,-2,2,-5,-8,7,9,8,10,9,3,1,-2,-1,2,1,-5,-6,-8,2,-4,-9,8,5,3,-6,-4,2,-2,2,-6,7,-5,-8,6,10,-8,-2,-6,6,3,-8,7,-2,2,-4,-8,-10,5,-7,-10,2,-7,4,-1,3,-2,-10,10,9,-9,-2,3,-9,2,9,4,9,6,-5,6,3,-8,7,9,3,7,5,9,-8,10,4,9,-5,1,-3,7,-2,-3,6,5,9,5,1,8,7,-9,3,-6,-4,-10,1,5,2,-4,-9,8,-10,2,8,-1,9,6,7,-4,-9,7,10,5,9,2,8,-6,6,-10,-9,9,-10,-3,9,9,10,7,-10,-3,4,9,-9,10,4,-10,-2,2,-6,-10,-10,2,-5,-9,-3,-5,2,-9,-8,6,1,-8,9,-5,-5,-1,-6,-7,3,-5,10,5,4,3,-5,6,9,8,-4,-2,-2,5,7,8,-10,8,4,4,-1,10,7,3,1,-3,-6,5,-9,5,-4,8,5,6,3,-7,-8,-10,4,3,5,-2,3,9,10,10,7,10,5,-1,-5,-1,-5,7,4,-7,-6,-2,-8,2,4,-6,9,-3,9,3,2,4,-4,-9,1,-9,-6,-5,-1,4,1,8,-5,4,-7,-7,-2,-6,-2,-7,10,-9,5,3,-4,-3,7,5,-4,-8,-6,10,6,4,-3,-2,-7,9,8,9,-9,7,6,9,-8,1,-2,4,6,-7,-1,2,-3,-1,5,4,-4,1,10,-2,-7,-4,3,-8,-8,-8,5,6,-2,-10,6,-10,-3,-4,3,3,8,-10,7,-2,2,-5,-1,-6,7,2,9,8,5,7,8,7,-9,-7,-4,3,-10,-2,9,-5,-3,2,1,6,-1,-3,4,5,6,10,-10,3,-1,-2,-4,-9,-6,-10,10,-4,-10,-10,-6,8,6,9,2,7,-10,6,-5,-10,5,-9,-8,7,-7,-4,1,-4,-1,2,-8,1,-5,-1,-3,3,-3,-4,-5,-10,-8,-7,6,4,6,-5,5,2,4,-2,4,-6,10,-9,10,1,-4,5,-10,1,6,-2,-3,-1,-10,5,-2,3,10,-9,1,-8,-8,7,5,8,6,-2,-6,8,-10,2,-6,6,-6,8,-6,-4,-3,-4,1,-10,2,5,-9,-6,8,10,2,1,2,-7,10,-1,-6,-1,-7,-3,-7,8,5,-2], dtype = "int8")#candidate|5674|(560,)|const|int8
call_5671 = relay.TupleGetItem(func_3837_call(relay.reshape(var_5672.astype('uint32'), [4, 12, 12]), relay.reshape(var_5672.astype('uint32'), [4, 12, 12]), relay.reshape(const_5673.astype('int8'), [352,]), relay.reshape(const_5674.astype('int8'), [560,]), ), 8)
call_5675 = relay.TupleGetItem(func_3843_call(relay.reshape(var_5672.astype('uint32'), [4, 12, 12]), relay.reshape(var_5672.astype('uint32'), [4, 12, 12]), relay.reshape(const_5673.astype('int8'), [352,]), relay.reshape(const_5674.astype('int8'), [560,]), ), 8)
bop_5684 = relay.mod(call_5669.astype('float64'), relay.reshape(call_5647.astype('float64'), relay.shape_of(call_5669))) # shape=(2, 9, 13)
bop_5687 = relay.mod(call_5670.astype('float64'), relay.reshape(call_5648.astype('float64'), relay.shape_of(call_5670))) # shape=(2, 9, 13)
output = relay.Tuple([uop_5660,call_5671,var_5672,const_5673,const_5674,bop_5684,])
output2 = relay.Tuple([uop_5662,call_5675,var_5672,const_5673,const_5674,bop_5687,])
func_5718 = relay.Function([var_5672,], output)
mod['func_5718'] = func_5718
mod = relay.transform.InferType()(mod)
var_5719 = relay.var("var_5719", dtype = "uint32", shape = (576,))#candidate|5719|(576,)|var|uint32
output = func_5718(var_5719)
func_5720 = relay.Function([var_5719], output)
mutated_mod['func_5720'] = func_5720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_5773 = func_4036_call()
call_5774 = func_4036_call()
uop_5783 = relay.exp(call_5773.astype('float32')) # shape=(2, 9, 13)
uop_5785 = relay.exp(call_5774.astype('float32')) # shape=(2, 9, 13)
func_3011_call = mod.get_global_var('func_3011')
func_3014_call = mutated_mod.get_global_var('func_3014')
var_5800 = relay.var("var_5800", dtype = "float64", shape = (60,))#candidate|5800|(60,)|var|float64
call_5799 = relay.TupleGetItem(func_3011_call(relay.reshape(var_5800.astype('float64'), [12, 5, 1])), 0)
call_5801 = relay.TupleGetItem(func_3014_call(relay.reshape(var_5800.astype('float64'), [12, 5, 1])), 0)
func_2814_call = mod.get_global_var('func_2814')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_5805 = func_2814_call()
call_5806 = func_2814_call()
output = relay.Tuple([uop_5783,call_5799,var_5800,call_5805,])
output2 = relay.Tuple([uop_5785,call_5801,var_5800,call_5806,])
func_5807 = relay.Function([var_5800,], output)
mod['func_5807'] = func_5807
mod = relay.transform.InferType()(mod)
var_5808 = relay.var("var_5808", dtype = "float64", shape = (60,))#candidate|5808|(60,)|var|float64
output = func_5807(var_5808)
func_5809 = relay.Function([var_5808], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_5855 = func_2736_call()
call_5856 = func_2736_call()
output = relay.Tuple([call_5855,])
output2 = relay.Tuple([call_5856,])
func_5869 = relay.Function([], output)
mod['func_5869'] = func_5869
mod = relay.transform.InferType()(mod)
mutated_mod['func_5869'] = func_5869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5869_call = mutated_mod.get_global_var('func_5869')
call_5870 = func_5869_call()
output = call_5870
func_5871 = relay.Function([], output)
mutated_mod['func_5871'] = func_5871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5912 = relay.var("var_5912", dtype = "float32", shape = (9, 2, 10))#candidate|5912|(9, 2, 10)|var|float32
const_5913 = relay.const([[[-0.704220,9.521229,-6.281372,-9.232509,-3.522814,-0.646501,5.505718,8.022703,6.677774,-6.539221],[1.525770,1.388427,-3.679519,-2.117070,-3.289964,-6.860832,7.454499,6.210671,-9.276913,-7.401112]],[[8.954582,-5.312655,-5.661502,3.437838,4.210271,5.084178,5.093396,2.731807,-3.684923,5.382101],[1.894957,4.248308,4.848896,3.197079,-8.085221,0.054406,-4.722871,5.650904,4.094904,-4.788565]],[[-8.465981,7.960405,-6.163199,4.412325,4.240684,4.431279,5.733558,1.586583,6.190639,-1.097936],[-6.167358,6.202187,4.997613,2.573916,-3.532919,-6.132457,0.234594,-2.494961,-7.452047,-7.547418]],[[-5.377208,-0.312898,7.920823,3.522258,-0.958337,-8.309128,8.529265,5.884863,-4.438079,2.623996],[-6.835232,0.760685,-5.010892,2.817801,-8.163358,-9.585513,8.098113,-6.935465,-0.251072,1.756058]],[[0.565903,-0.640440,-6.483141,3.266246,-8.863533,0.700462,-5.359784,8.120671,-4.224080,5.453894],[-3.611308,-9.438870,8.556276,-8.194615,-9.490719,-9.553199,-9.372471,-2.732970,1.045760,3.139867]],[[-9.013610,-2.439058,-0.178277,1.371915,1.433094,7.251857,-0.511861,2.619579,-0.386178,-3.640687],[-5.646690,-9.820424,1.646820,8.257029,-3.395118,-0.635711,9.542227,-9.911001,-2.458158,-4.399754]],[[-7.415959,-2.201721,2.876243,-1.786754,6.858892,-0.478655,-9.828906,-0.475950,0.585172,-4.997005],[3.001158,3.724088,1.136467,-9.548758,5.145733,6.930333,-6.339039,1.459539,-3.784846,1.628853]],[[-9.023838,1.933826,-7.009905,-5.117066,0.410839,2.470358,4.632781,1.216449,-4.823987,2.825681],[-5.227434,-4.684286,-3.384239,0.420853,8.944860,-7.097380,-0.265684,-6.492743,-9.949519,3.041707]],[[7.702025,-3.623248,6.098538,-6.419617,9.743466,5.170541,-3.936061,-2.504309,5.035355,8.156222],[-8.937446,-6.787372,9.052929,0.116844,8.609573,2.835863,6.087238,-5.853909,0.121667,6.645814]]], dtype = "float32")#candidate|5913|(9, 2, 10)|const|float32
bop_5914 = relay.floor_divide(var_5912.astype('float32'), relay.reshape(const_5913.astype('float32'), relay.shape_of(var_5912))) # shape=(9, 2, 10)
func_672_call = mod.get_global_var('func_672')
func_675_call = mutated_mod.get_global_var('func_675')
const_5923 = relay.const(1, dtype = "uint32")#candidate|5923|()|const|uint32
const_5924 = relay.const([7,5,-4,-3,4,-9,8,6,6,-4,-6,8,-10,-7,2,7,1,9,7,-8,-7,7,3,-7,-5,-3,-3,-2,5,3,3,-7,2,-10,1,-1,6,-2,-3,7,3,-10,-1,1,-4,-5,4,3,-1,-6,-10,-9,-7,5,-1,10,4,-10,4,3,6,9,2,-8,5,-3,3,3,-4,-1,-3,-9,-3,-4,-10,9,6,6,9,1,7,1,8,9,-4,-7,3,4,4,-5,6,10,3,10,-9,-8,-4,8,4,-4,-8,-5,-6,7,8,4,-9,8,10,5,-8,10,1,6,3,-4,-2,4,-8,9,6,-2,8,6,-7,-9,-4,-8,5,2,7,-1,-3,-8,7,-8,1,-5,-9,6,3,-10,-4,-2,4,9,10,-10,-6,-3,-6,-5,1,7,-2,-6,10,-2,4,-5,7,-8,5,-9,8,5,5,2,-9,-5,-4,6,7,-10,9,9,-1,-5,7,-1,-6,-9,-4,6,-4,4,4,-3,5,3,-1,2,-1,10,10,3,8,8,6,5,7,-7,-9,-5,4,-8,2,6,-8,-1,10,6,-5,9,-10,-9], dtype = "uint32")#candidate|5924|(216,)|const|uint32
call_5922 = relay.TupleGetItem(func_672_call(relay.reshape(const_5923.astype('uint32'), []), relay.reshape(const_5924.astype('uint32'), [9, 8, 3]), ), 2)
call_5925 = relay.TupleGetItem(func_675_call(relay.reshape(const_5923.astype('uint32'), []), relay.reshape(const_5924.astype('uint32'), [9, 8, 3]), ), 2)
output = relay.Tuple([bop_5914,call_5922,const_5923,const_5924,])
output2 = relay.Tuple([bop_5914,call_5925,const_5923,const_5924,])
func_5928 = relay.Function([var_5912,], output)
mod['func_5928'] = func_5928
mod = relay.transform.InferType()(mod)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5929 = relay.var("var_5929", dtype = "float32", shape = (9, 2, 10))#candidate|5929|(9, 2, 10)|var|float32
func_5928_call = mutated_mod.get_global_var('func_5928')
call_5930 = func_5928_call(var_5929)
output = call_5930
func_5931 = relay.Function([var_5929], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_5951 = relay.TupleGetItem(func_2677_call(), 1)
call_5952 = relay.TupleGetItem(func_2678_call(), 1)
func_4856_call = mod.get_global_var('func_4856')
func_4859_call = mutated_mod.get_global_var('func_4859')
const_5972 = relay.const([9,10,1,-1,-6,9,5,-3,-9,-4,-8,-5,-2,-10,10,-3,-5,5,10,-9,10,-4,-9,-2,6,9,6,4,-8,-10,-4,-9,7,6,-1,-4,5,6,6,4,-7,-10,9,-10,8,5,-7,2,-10,3,-3,2,6,-2,7,8,1,6,10,4,8,-2,6,8,2,9,8,-3,-1,-9,-3,2,-5,-5,-4,4,10,6,-2,4,-6,9,-4,8,-9,4,6,-7,6,-7,-1,-2,-9,-9,-5,-2,3,2,-4,-5,-9,-5,4,-5,6,-1,-3,9,5,2,10,8,-5,-3,5,4,-6,1,2,2,-8,-4,8,-4,1,3,-1,-7,3,7,-9,-2,-9,6,-10,1,1,-10,9,4,-1,-5,5,-1,1,8,1,4,-4,-3,-1,2,-10,-1,-8,10,1,4,-7,-6,-4,-10,-4,-5,7,1,-2,9,7,10,-6,-7,-8,-3,-9,-5,1,10,-2,-4,-4,-4,-7,-8,-3,-2,-3,-6,-3,9,-5,-4,10,4,8,-10,4,-9,-6,-7,-7,10,7,2,4,-1,6,7,-9,9,-2,10,-2,7,7,-1,-3,6,-8,2,-2,10,8,5,2,-7,-2,8,-7,5,1,8,-8,5,-5,-9,10,4,-9,-9,4,7,2,-1,2,-3,-4,6,5,10,-8,6,8,-10,-8,2,-5,-7,4,-8,-6,9,1,-3,-7,-6,-4,5,-2,-1,-3,2,1,7,-9,-10,-5,6,4,-2,-4,8,-3,-2,-7,5,7,2,-9,1,-3,3,-2,3,8,-9,-4,-2,9,1,-8,-7,-8,-1,7,4,-5,-9,-6,4,-8,8,-9,10,-6,-3,-9,-9,1,-3,2,-10,2,3,-2,2,10,-3,-2,-9,3,-3,2,1,-2,4,2,10,-3,-2,1,-8,-5,2,-3,-4,-2,-3,8,10,8,1,-7,-6,5,-9,3,7,-8,5,-9,10,-7,6,8,-3,-9,8,7,-8,1,9,5,-4,-7,4,10,-7,-8,-10,10,-3,-10,-7,-5,1,2,-2,8,-10,6,2,10,1,-4,-4,-6,5,10,-5,7,-2,8,6,3,2,9,-3,5,7,-9,-6,-8,3,5,4,7,-2,4,-2,3,-4,10,-1,3,4,9,-7,1,6,1,9,-7,-1,-9,6,9,-4,9,-3,5,4,-7,10,4,-5,5,-1,3,3,-6,-5,9,3,-7,10,-4,-6,9,1,4,-8,-2,-1,-4,-8,-5,7,-2,-2,9,-3,-10,5,4,5,-6,7,4,2,4,8,10,-3,-8,-3,1,-1,4,-2,-4,8,-4,7,-5,-5,6,8,1,-10,10,-7,1,4,3,-6,5,-8,-7,6,-1,-10,-6,-5,-4,7,2,5,-9,-9,-6,-1,6,-1,-4,6,-10,2,-7,-5,6,4,-4,-9,9,7,-2,-6,8,5,4,7,10,-10,-10,9,-4,2,-4,-3,3,-8,-10,5,-2,2,-4,10,10,-2,-4,6,5,-8,-3,4,2,-10,6,10,8,6,3,-5,-5,-5], dtype = "uint32")#candidate|5972|(576,)|const|uint32
const_5973 = relay.const([6,1,1,-4,-9,6,-7,-7,-2,3,6,-1,8,7,4,-5,5,2,-10,-10,-3,8,-1,-8,-7,-9,6,-3,10,6,-1,-2,-6,2,-3,5,-1,5,-6,-4,-6,8,-7,-6,1,10,-2,-10,-9,4,-9,7,10,3,-4,2,4,-2,3,7,-2,7,9,4,-2,-1,7,-2,-7,4,-5,-3,-8,-9,5,-4,5,10,-1,-4,-3,5,-1,7,-5,1,-9,9,1,8,-8,-2,-4,-8,9,9,9,1,2,-9,-1,6,-7,9,5,-4,10,5,-10,-10,-7,2,2,5,5,10,4,-8,-1,9,-6,8,-10,-1,-5,1,1,-5,9,6,4,2,2,-1,6,-8,2,10,8,-2,4,5,7,8,-10,1,-10,3,2,-4,1,-3,-7,-5,-6,-10,-10,-6,6,4,6,-1,-8,-8,-8,9,4,4,-4,-8,6,1,-4,-3,-8,-4,2,-3,-10,1,1,9,3,-9,-2,7,5,-4,-4,-7,5,9,9,-10,-2,8,2,-9,9,-1,-4,-1,-6,-10,-1,5,2,-5,-7,-3,7,-2,-9,3,-10,-10,-3,-5,-3,9,4,4,-9,9,6,-3,-1,4,-8,7,3,4,8,5,4,9,-10,-6,-2,5,4,2,2,7,-3,10,4,2,-3,5,-2,7,-7,-3,7,8,-5,-9,6,-9,-10,5,-4,8,-3,-7,9,-9,7,7,9,7,4,10,-2,9,1,10,10,-1,10,9,1,6,-9,6,-8,1,9,-4,-2,6,8,9,3,2,-7,5,-9,8,3,6,-6,-5,-10,-7,1,-8,-1,-6,4,-2,-9,8,7,3,-9,3,-8,10,9,-10,5,9,2,4,5,8,-2,-9,-4,3,5,-9,-6,1,-10,-6,-9,-3,-2,1,-1,-1,-7,4,-7,7,2,-5,6,-4], dtype = "int8")#candidate|5973|(352,)|const|int8
call_5971 = relay.TupleGetItem(func_4856_call(relay.reshape(const_5972.astype('uint32'), [576,]), relay.reshape(const_5973.astype('int8'), [352,]), ), 1)
call_5974 = relay.TupleGetItem(func_4859_call(relay.reshape(const_5972.astype('uint32'), [576,]), relay.reshape(const_5973.astype('int8'), [352,]), ), 1)
output = relay.Tuple([call_5951,call_5971,const_5972,const_5973,])
output2 = relay.Tuple([call_5952,call_5974,const_5972,const_5973,])
func_6002 = relay.Function([], output)
mod['func_6002'] = func_6002
mod = relay.transform.InferType()(mod)
mutated_mod['func_6002'] = func_6002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6002_call = mutated_mod.get_global_var('func_6002')
call_6003 = func_6002_call()
output = call_6003
func_6004 = relay.Function([], output)
mutated_mod['func_6004'] = func_6004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5369_call = mod.get_global_var('func_5369')
func_5371_call = mutated_mod.get_global_var('func_5371')
call_6005 = relay.TupleGetItem(func_5369_call(), 0)
call_6006 = relay.TupleGetItem(func_5371_call(), 0)
output = relay.Tuple([call_6005,])
output2 = relay.Tuple([call_6006,])
func_6020 = relay.Function([], output)
mod['func_6020'] = func_6020
mod = relay.transform.InferType()(mod)
mutated_mod['func_6020'] = func_6020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6020_call = mutated_mod.get_global_var('func_6020')
call_6021 = func_6020_call()
output = call_6021
func_6022 = relay.Function([], output)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_6054 = relay.TupleGetItem(func_4166_call(), 0)
call_6055 = relay.TupleGetItem(func_4168_call(), 0)
func_5478_call = mod.get_global_var('func_5478')
func_5479_call = mutated_mod.get_global_var('func_5479')
call_6058 = relay.TupleGetItem(func_5478_call(), 0)
call_6059 = relay.TupleGetItem(func_5479_call(), 0)
func_3964_call = mod.get_global_var('func_3964')
func_3967_call = mutated_mod.get_global_var('func_3967')
const_6085 = relay.const([-8.601683,-2.090146,-6.806344,2.857846,0.893945,3.377279,-7.493178,-4.097009,-9.594426,6.905591,3.095491,0.685001,8.043111,5.320819,6.641678,-4.423075,-4.547963,-7.804730,-4.268720,-3.211051,5.141716,-7.023340,0.574818,6.778075,4.236528,-4.308475,9.281198,-3.566049,-3.441209,-4.213487,-6.157650,4.307333,7.107039,-3.322360,-9.367524,0.826144,-6.338720,1.619563,-7.163576,8.863924,5.035644,-1.522210,-3.923153,-1.429398,-9.196201,-4.279424,8.418203,7.276673,7.600917,0.177589,-4.053446,-4.275263,-4.786005,-6.339076,-6.943393,6.101741,5.219150,6.856853,-6.332463,-6.484335,-1.726668,5.182637,9.105908,-0.759092,-5.081869,-0.602056,-3.685370,2.550476,-4.464703,0.266071,-2.941884,8.910184,-8.080325,3.082558,-8.509086,1.974046,-9.571906,-0.525667,8.409392,7.587444,-3.030003,-9.134647,-7.331983,-7.484019,1.536251,3.214455,-3.675769,-1.235694,9.948396,6.322646,8.464822,-2.076894,8.491076,3.281230,0.601689,7.195470,-4.495271,-3.195980,9.041759,-9.053066,-7.251948,-4.293264,-6.740103,1.853771,-7.930805,9.673636,1.318608,-4.619618,-6.190804,6.441897,-4.004881,-0.104488,-6.771714,7.997369,6.534124,3.627006,1.712355,-2.251834,-7.353829,-1.992616,-7.806613,-8.135836,5.569457,-4.976497,1.641665,-4.134276,-5.399611,-0.353799,7.845987,5.959885,3.348143,4.314492,-5.561841,-6.381492,7.905881,-7.367295,-5.759823,-9.768753,3.479108,-2.417576,-3.523578,-3.165858,6.352346,-3.208375,-4.229204,6.829990,-0.586367,-6.919715,-6.140361,7.923993,8.192075,0.953637,-7.078897,-8.418234,-9.237172,-1.336202,3.066989,-7.442228,-4.921527,3.849224,-2.092570,-7.732602,6.453464,5.993679,-0.880243,-2.648979,-4.236939,1.592915,2.164995,-8.229075,-4.875399,-9.478627,5.683907,-1.553591,5.155623,-7.616083,-6.045276,-8.905908,-4.465421,4.209666,-5.587892,-8.314623,6.176565,-6.796572,8.985110,8.645547,0.521740,8.523217,-6.681484,-3.424010,-0.617895,8.027459,-0.303607,-9.642828,9.071405,1.029535,0.051752,2.422792,1.400401,3.412796,-4.607582,5.774893,3.004023,0.112601,-8.700449,4.167110,-3.114849,-2.460324,5.305762,6.467189,-3.624580,-0.288143,6.336833,9.464129,6.521591,2.573701,4.068388,-6.705889,-8.871330,-2.151909,1.886236,7.768742,-3.009402,-1.768672,-3.336866,-3.986583,-3.699636,0.411938,-7.064730,7.075519,8.166377,-4.746740,8.187172,6.017311,-4.009360,-1.831240,-2.446929,3.943019,4.645784,-7.830348,-6.654961,5.102045,2.686490,-9.808271,1.855625,-7.453765,-7.705626,9.597777,8.389241,9.205734,-8.432987,4.458098,4.824973,2.021853,1.889326,1.199013,-7.935982,-5.309997,4.333282,-8.882726,-3.786406,8.383388,4.189339,-1.360395,-5.827263,-8.380376,-5.808112,6.963018,-1.918804,-4.721172,-4.279525,9.505867,-9.144041,-5.062903,-4.086888,-5.798440,7.625550,-1.929909,-7.217530,7.835022,-2.241470,1.022085,-6.497674,9.837549,1.473497,-6.792062,9.080458,5.565167,5.419865,0.755861,-2.441413,6.654543,5.804597,-0.359372,-3.907112,-8.897610,1.952007,8.572227,-9.129036,-0.969390,0.195201,9.612595,2.662139,-5.140249,1.241051,-3.804971,-1.523685,6.988580,6.833112,9.647023,-7.269029,3.222830,-7.099918,0.755172,8.421533,-8.861129,-7.013927,4.266880,-7.578916,-2.832784,1.312392,8.585276,-6.052983,4.514915,-9.718698,-7.604702,1.492001,-6.343643,-2.503904,-9.098732,-6.626013,-0.141077,2.877518,-1.936699,-0.359746,4.316845,1.000346,6.561570,8.249121,-3.254965,2.634916,-3.434972,-2.922326,-8.647652,-3.448352,-8.111691,-2.905085,5.015984,-8.453911,5.446317,3.150553,-7.348648,-2.261774,-5.734457,-3.023065,7.517821,4.989704,-0.587110,6.918756,1.539301,-9.027166,-2.174625,-8.374981,-2.899645,0.983418,0.161302,-1.242315,7.177921,9.318305,-3.319146,-0.085335,-3.835142,-8.965715,4.159356,9.960789,6.084817,-0.134985,-1.478914,-8.254740,7.774877,7.153708,-8.905859,-7.266240,-7.483740,9.386793,-4.935318,-8.527900,-2.376033,0.918900,-6.504191,-2.883719,-2.506948,9.772904,8.455964,5.249746,8.213283,-5.047733,-6.280760,-3.646447,-0.043004,-0.149733,1.140711,6.524704,8.446139,-0.449674,-2.270555,1.292114,5.630064,2.521218,-3.123557,-8.990598,5.440357,2.946444,9.484473,-7.675290,-1.919642,-8.971829,-3.929028,8.591085,3.632897,1.614031,-5.287064,-2.777226,-9.733195,-0.750569,9.929115,-9.559312,0.760899,-9.929989,4.716051,2.555112,9.831297,-9.455607,0.485496,2.014764,5.697470,-4.568817,-0.198581,0.024594,9.753524,5.442392,-9.448694,7.154518,-5.617144,8.041764,3.091933,9.694310,-9.988947,-4.137549,9.281384,-0.201167,-9.594754,-2.949590,-7.016724,3.619407,8.221728,-2.699191,4.916013,-2.453573,1.415340,6.710915,-5.925566,-5.372734,-0.538272,-5.109983,-2.337905,-9.868421,-9.487995,9.464746,2.796548,-0.440540,-3.920478,-4.871262,-3.990914,4.270604,-0.910514,-5.204810,1.006903,-9.678125,8.591931,3.715953,6.727287,4.349815,-4.314461,-1.123878,8.330779,-1.289230,8.585140,1.265792,3.775680,-5.980419,-2.419968,-3.318596,7.440799,3.685168,-2.389823,-4.020506,9.536019,7.878482,4.681469,9.962270,-4.657743,-4.264711,-7.394598,3.437036,-1.679895,-3.660453,2.641313,-6.649064,1.873719,6.930366,-7.186364,5.355015,7.999039,6.504909,4.494186,-3.418656,-0.967556,6.558192,-3.768287,7.039215,-4.606528,8.629574,-2.463457,-5.498286,-3.541251,3.668599,-8.375715,-7.617736,5.884886,-7.700974,-2.010023,-6.625921,7.882301,1.700245,1.883548,-7.009093,-2.832655,4.716911,3.751712,-2.155745,1.442712,-9.367419,4.119794,-5.210441,-3.712793,6.856744,0.470465,4.282066,5.123488,-1.590123,5.906406,8.841585,8.250974,9.870870,-7.641493,-6.007948,7.971005,9.985763,3.286535,-6.827889,-2.141022,-5.270193,7.336020,-4.714499,-2.649756,7.804112,1.627817,-5.545629,5.430906,3.657043,0.946705,-0.047007,-0.385901,0.929529,0.021077,4.916030,5.741262,0.323493,-3.100391,-0.317254,-6.963344,-7.963192,-6.758207,-6.923724,-5.733786,2.964289,9.106510,6.214363,-0.132472,4.421932,-4.782631,9.882633,-4.267797,-2.706033,7.130826,-9.627884,7.710610,3.588990,2.392061,1.253589,-9.674663,0.457584,-8.441328,4.554753,-3.242432,-6.223531,-4.722327,-6.247311,-7.509261,1.454204,4.885168,-0.123516,-5.592869,-9.989188,1.821762,-2.144535,0.492770,-1.945710,-5.571823,-2.724868,-9.239994,6.677549,-5.467137,-0.359588,-9.566333,-5.118109,7.550239,-8.588289,6.052889,2.246720,5.855232,-8.709099,4.119148,-7.921158,-6.433263,-7.852363,-2.230703,4.327849,-8.396216,1.497301,8.003867,-7.055118,-5.184878,3.585407,-8.772616,8.407710,-3.392959,-0.754086,-5.699350,5.113494,3.327656,6.198746,7.334227,-0.020321,-6.427501,-6.049344,-2.226112,-1.103157,-8.083741,-8.197470,-5.247635,-7.568078,4.839512,8.693397,9.320545,-4.873021,-7.722484,-5.107093,0.229512,7.877967,3.205141,2.329849,8.526226,-4.806353,3.630267,-6.930073,-6.534029,-7.874180,0.158391,7.773025,-6.076731,3.096380,-0.102229,-5.163309,-7.066928,6.388275,-4.978747,0.733764,3.596734,9.621192,-4.358014,-7.924108,-6.555064,-1.596749,-4.289145,-1.967496,-8.185317,-9.248912,-1.169257,-0.108714,-3.328631,-7.063271,-4.049882,-3.863141,0.151445,9.023039,4.571924,4.699140,-4.117675,7.257165,1.597686,-9.640071,8.501112,-7.870912,1.552529,2.117407,0.984386,-7.552674,6.005779,1.430761,-3.644982,9.712903,-2.734755,8.014525,-8.743852,-3.443315,5.408582,1.525681,8.630210,-2.767708,-2.226596,-2.633347,6.965503,-8.576878,-1.297448,3.240493,-4.578228,-8.864594,9.275718,8.251138,2.545948,-0.101961,-4.602121,7.118757,5.620813,0.906391,5.030479,5.571266,-2.474175,-4.203711,5.494893,-3.800450,-7.368175,6.705289,-4.265038,9.762358,-6.840209,-2.386674,-9.454976,-5.663406,3.205071,7.266536,4.625257,7.264929,-8.925814,-4.126128,-9.590080,7.867789,-0.095446,-3.530627,-7.285297,-5.450351,4.362085,7.893122,-8.048886,-4.048135,6.602385,5.357302,-2.798704,2.263627,-7.221968,3.947134,-0.453217,3.167309,0.044591,3.259010,5.419142,-5.615093,8.432000,-7.297257,7.319266,4.886211,5.630174,8.471984,-1.407078,-7.497028,4.949921,2.229689,2.102520,-6.803730,-7.310222,-2.484159,0.066363,6.076784,-7.799416,-4.084871,-4.869139,6.070575,-8.283352,0.738364,9.502960,5.305836,8.302628,-9.361333,7.686719,9.384558,-5.601519,-4.608718,-1.614159,-4.830282,0.651001,-4.873614,7.036777,4.246823,0.905467,-2.799563,2.568812,0.933038,-0.348347,4.267734,-1.748331,3.611666,-3.133108,-1.599875,0.114489,9.326572,6.555914,-0.783593,5.350056,3.823024,2.459998,4.029434,8.074151,0.386730,-6.014343,-3.977263,-0.460066,-3.358833,0.600825,0.161938,6.220943,0.937492,5.574473,6.662291,-5.752390,1.842007,-8.596165,-4.364684,2.469101,6.436057,-4.410294,-7.350125,-3.191992,4.316733,8.604507,-0.200375,8.290139,0.418128,-4.071908,-4.830824,3.696119,-3.102322,-2.711896,-4.379625,-5.907307,-0.773281,6.916248,3.957142,4.478423,7.621582,-5.257760,2.413935,9.750031,-3.556502,-6.898485,-7.112401,-0.867376,4.030465,2.335441,-0.738904,-4.762548,-6.600921,2.252554,8.186434,-5.327203,4.948511,-4.716486,8.626924,3.105493,3.662068,-8.839646,-9.975292,-0.715071,6.766907,5.995455,-1.164278,-4.555499,1.797208,-1.045047,-0.022386,6.053489,1.535182,1.943093,1.759330,-9.579545,-5.581177,0.060995,4.557980,-8.003542,2.468249,-4.158933,8.487931,2.478538,-0.293689,4.352220,-0.434629,-9.651906,2.929370,-1.885467,2.540168,4.560857,4.247010,-5.088788,7.512723,-5.062420,-5.396560,-1.090106,3.966168,-9.607605,1.534069,4.451207,-3.706602,-3.392997,0.141070,-8.439670,6.074562,-5.718328,-4.942743,-1.908076,4.809649,9.237762,1.120525,-6.299431,9.469976,5.491306,-5.150011,-7.781286,-1.170015,-1.260401,-3.150750,-1.724756,0.495539,-6.716395,9.134477,5.825348,3.394049,-4.361332,-6.432520,-3.308128,3.009417,-4.694407,-8.287019,-5.325087,7.046312,-4.065829,-1.353741,-8.825403,9.976639,8.751742,3.204186,5.130758,9.012845,7.437226,-7.978403,7.304852,4.611006,-2.048821,0.448546,5.405916,7.413906,-3.814055,-4.818883,0.667284,2.009244,2.477813,4.341466,-7.135211,-2.075829,-4.222975,2.907261,6.051410,-0.851073,-8.039200,-3.879400,-6.671089,0.323654,6.038814,0.833125,8.544628,-4.372204,6.470228,0.841403,-2.626091,-2.270044,8.509408,6.107736,-0.827883,-9.294270,9.046898,-3.075644,-8.954935,-6.497849,-4.800962,3.933751,-9.228749,-4.695635,3.917791,2.545260,7.851223,4.150516,3.851682,6.731743,-3.327589,-0.086895,9.924876,7.658000,-1.773152,8.654252,-8.894271,-6.297062,-5.973213,-2.250833,4.870105,-1.395322,8.561197,0.805274,-0.915785,4.696801,-8.622066,-8.716024,-5.916493,2.409842,8.625931,2.694409,5.386493,-0.063390,-4.814325,-8.588041,5.993719,9.884528,-6.017389,7.431713,0.852075,1.961453,7.027988,0.084067,8.642354,-5.711384,-1.178158,-7.709674,-0.855741,1.406372,-1.838292,-8.417107,-8.702665,-8.346248,-9.129237,8.635504,-0.136809,6.064723,-4.143394,-0.969101,0.432480,-7.184153,-9.620184,-3.368615,-2.689983,-3.516832,1.350994,-0.429850,-1.480288,-0.675757,-0.642141,-2.439447,-9.924506,-7.134354,9.449639,-7.604891,-4.498724,-3.678364,-2.071773,0.075906,-6.026066,3.315817,-6.846490,-6.750686,-5.339501,6.516684,-1.026302,-7.912673,9.352077,-3.914302,4.793412,9.549474,3.638788,-0.766919,-8.031687,-7.742863,7.305110,-4.706636,9.460087,-2.272475,1.683147,5.896537,-2.614688,-2.385758,-9.698011,-4.167015,-1.739279,9.581103,0.196124,4.725228,6.000377,-0.950410,3.986340,-3.099761,8.509648,-7.234049,-9.148021,9.440448,9.114495,-8.756934,-0.420107,6.082490,2.094177,-3.085420,9.826938,-0.319809,-5.732689,8.410045,-9.665080,-3.689085,2.288496,-8.273091,-8.585698,-7.254384,-7.563574,-4.465163,1.003465,9.458333,-1.363226,3.579466,5.861224,7.353248,-7.924721,4.800146,-3.419048,1.894941,-9.473704,-2.886642,2.275659,0.424052,2.582416,-6.902225,7.688968,7.506463,8.242910,5.349076,6.570159,-9.412297,-1.778909,-5.867289,-3.252539,-3.435795,1.419922,3.634774,7.907651,-4.235805,-5.170345,0.742703,-1.089807,-0.465870,4.069494,-1.944078,-0.500972,-0.145701,-8.588439,3.446187,-1.985178,-0.003430,-5.169837,-8.029886,-3.062633,5.293769,1.037951,-9.626320,2.701044,-3.004674,6.223143,2.395577,4.341766,-2.554053,-7.284999,-9.521048,9.554278,2.447427,8.460483,5.698777,-9.698919,-6.855747,5.958138,-1.226292,0.689132,5.894124,7.706788,-7.243018,-6.142617,6.594859,5.353117,-3.128604,-6.436186,-1.996837,2.676547,5.799288,-2.414098,-3.282198,-3.709470,2.616385,5.359290,-7.265453,1.897377,4.092187,1.353071,1.905617,7.194092,6.421187,8.286311,1.500897,9.543331,-0.986927,-3.697754,2.515045,2.041447,4.863434,7.015990,-5.433682,-2.122396,5.068451,-2.190162,-4.588092,-9.161692,2.110079,-5.287006,-4.012576,1.145381,9.454451,9.548477,-7.039865,7.584153,5.024967,-5.143067,-3.980824,-4.025000,-7.206706,-5.751217,-0.273793,2.915841,-1.079383,-9.598294,0.838979,3.290395,5.023169,-2.652054,-0.955965,1.944452,-2.848251,8.754138,7.837745,-9.274744,-6.030939,-6.306743,0.740246,-1.259453,9.708843,1.564520,-8.611420,-8.003519,8.198121,9.143710,-2.692450,-9.241342,-1.164218,5.410050,6.436585,-2.527508,-8.974726,-3.123750,-3.289032,6.182943,4.972742,-7.397162,-2.358446,8.258809,3.415642,6.976889,-3.723894,6.498490,8.152738,-7.502650,-4.467918,-7.610966,4.201354,6.953364,3.490861,-3.916961,9.882000,-0.100646,3.971701,9.827630,-7.904073,-1.065421,-2.409964,-5.767207,3.935455,-6.251868,3.135468,-0.801906,8.836913,-4.366507,1.034475,7.723119,2.140318,-4.632733,-9.060815,-3.866464,-4.009809,8.124451,-5.009956,-2.307156,-4.781933,4.161931,2.375804,-8.072742,5.433480,6.877800,4.757261,0.238673,-9.999916,5.512137,-5.583318,5.838758,5.141829,6.203381,-9.172677,6.198216,2.123554,-8.685522,-0.555839,3.187776,0.469045,-6.720397,-4.626665,-9.329966,8.817907,9.957163,1.842713,-0.238707,3.874477,-5.709134,4.223618,-7.613965,-0.580119,7.240927,4.768815,6.101622,8.050760,-9.633031,9.939076,-8.567352,-6.783764,-0.862225,4.274581,-4.125199,3.789993,-3.999276,-5.475964,8.847220,-2.231399,-4.512132,5.679239,-7.910396,9.998396,-0.637671,1.574333,-2.779349,-4.029926,1.839822,9.818962,-5.743038,-0.786254,-8.326939,7.215126,-2.064512,-7.974097,-0.970526,-4.719534,4.158199,3.721338,-5.859543,-2.840300,-4.154943,-5.227661,-5.720313,-7.770172,-5.243292,-0.703143,7.481087,-8.242922,5.307052,-4.322061,-4.583340,-9.558261,1.731157,-0.399677,3.446836,-6.194366,5.234365,8.568516,-8.391731,5.245893,5.986674,2.965812,1.002648,-0.226761,5.765058,-5.561312,5.455064,5.946344,-9.212507,-7.069937,-5.610071,-0.731259,9.415783,-1.315483,3.955633,-2.861213,7.448837,2.702562,9.136667,2.301001,2.023462,4.023207,-4.837480,7.612981,-7.696223,-7.901387,-1.834204,-2.319545,5.145198,0.145403,-5.434932,2.114364,-2.194456,8.393136,-8.557124,-8.957290,-3.053784,-7.431815,-0.292309,-3.263928,1.989153,5.179989,4.486593,-6.966491,-6.144406,4.966217,2.491095,-0.387021,8.654105,-7.679653,-7.139604,9.792538,-0.648658,-5.056519,1.478879,9.060551,8.220170,-0.938722,-6.908459,6.509509,3.429741,-3.129769,4.930019,-2.223745,-4.450164,-7.613513,9.715266,7.066196,0.143821,-4.180422,-9.167906,-4.553225,-9.869484,-3.774067,0.210174,-2.369576,-1.955420,0.859444,6.399414,4.447061,-7.641276,1.727327,7.626252,2.427099,-7.547990,-4.636246,0.839723,-2.253331,5.358992,6.895093,9.483939,8.787019,-6.820535,6.677416,-2.176715,8.290321,2.759326,-6.617269,1.802753,6.544856,9.026932,0.707054,-9.577017,5.448267,-0.435903,-2.425275,-8.514570,-4.634607,6.759972,-2.996143,-7.088533,-7.753897,-3.869482,-5.471911,7.712693,6.714520,5.970017,4.231849,2.420186,-8.245634,6.606130,6.469612,-3.475177,-4.851052,0.932660,-3.243924,-8.539270,0.190476,7.994763,2.077679,-1.479135,-3.983596,0.302571,8.857733,-2.529649,-1.308558,3.836797,4.788978,0.724258,4.315677,-0.306087,-4.696371,-6.526502,-4.937542,-8.709472,-1.830915,-6.513754,-3.773125,1.511210,-5.922224,6.572900,4.217881,-6.163997,0.682911,1.160685,5.873741,-9.658757,-7.080624,7.009369,-2.458358,-0.579801,-0.510470,6.277365,-5.151479,9.293317,-7.936727,-5.327632,3.986629,-8.929566,-1.142337,5.002179,-9.679799,-7.041487,-4.211006,8.080894,2.187894,-8.645760,-3.055990,-7.954837,-8.816493,-7.541084,4.810265,-0.186550,3.509700,3.204671,-1.900735,5.335185,-2.352607,-9.936044,-1.623444,7.368963,5.418299,3.389034,-7.104406,8.185696,5.820457,3.294231,-1.596378,1.708713,8.916663,4.265564,4.855101,-0.732978,-7.787095,2.912359,-2.947966,-9.022521,-7.637285,8.261638,-0.913514,0.998160,-8.733568,-1.253399,-6.935232,7.761414,-3.155151,-6.622778,1.687349,5.451652,9.942192,-8.586172,0.727411,0.315022,2.498559,-6.982833,1.013925,5.518559,0.377186,-8.366633,-0.488827,3.799593,9.183874,-3.456973,-1.892514,-5.197170,-4.752750,1.824596,-3.390442,3.467634,0.714547,0.657041,0.733091,7.232037,-0.399001,9.284424,4.706401,4.103761,-3.083095,7.811746,2.810244,-6.385144,2.357158,0.176347,-8.088895,4.406349,6.759717,0.810557,3.072663,1.207734,-1.099133,-1.793690,5.597869,-0.209096,-3.939584,-2.684523,-8.027972,0.889001,-5.983040,1.805513,-5.763266,-2.802840,4.314009,-4.152301,-4.817660,-0.710234,-5.463961,-3.331662,-7.128181,7.528875,0.334736,-6.320324,-0.691020,3.893748,-1.539648,-2.058606,6.340928,-6.368575,-2.960084,4.580229,-3.856079,4.791925,6.591143,-9.438785,8.013682,-9.632090,4.798537,-9.698053,-9.108492,-3.492712,-7.360730,1.228947,-7.342328,-3.127881,4.240406,1.705200,1.759513,-2.226294,6.631779,-9.970003,4.775327,6.735974,1.891622,-5.918697,1.425438,-9.063267,0.252766,7.795547,-4.111342,-2.965652,3.415728,4.526582,2.778944,4.731129,5.567899,5.071015,-3.783458,3.585700,-9.030033,-2.499974,5.336152,6.774830,-1.348367,-5.102926,-1.108476,-1.178673,-3.629160,-2.546024,-2.084084,-3.972793,6.829277,-0.598791,-0.567973,8.326144,0.616084,-7.585437,-0.071025,-4.289820,-6.500442,1.689083,2.000624,7.877442,-2.994734,5.334910,0.824267,-6.126588,7.389506,7.855410,-7.196778,-2.680197,-2.169983,-9.326965,-5.269169,0.057766,5.580156,2.667449,0.644785,4.236557,-4.290293,-8.739400,-4.007592,-8.920947,7.441938,-2.020806,-0.496119,9.965962,5.736180,-5.532931,-3.997802,8.525981,-4.361190,6.162801,4.996626,0.423651,4.995767,9.167430,-8.131780,-5.171247,5.741762,-1.938343,1.877506,-2.108356,6.660754,7.631482,9.773333,-1.147492,7.370507,2.286813,-7.947496,3.419260,-6.756498,8.071695,-6.971289,-8.193830,-6.376047,-5.006339,-5.630573,6.441184,1.653349,-1.350035,9.871495,-6.433133,-4.351673,5.278353,7.748132,-6.604895,0.925729,-4.115745,1.998937,-1.495407,9.427597,-4.793359,1.352677,-3.452525,-0.611846,8.009033,8.813747,-3.141477,7.052079,-0.374046,-4.000851,-4.809055,-8.306085,-2.615299,9.029014,-9.399470,2.049094,7.198577,-2.567168,2.750306,-4.383676,-5.524679,-5.563992,9.058676,-6.719237,-8.939447,-5.688939,-0.503974,-5.063093,1.576515,6.826124,-9.727906,-9.305259,-8.956361,5.129352,8.803806,-7.214269,2.074808,-3.352623,0.061725,-7.363567,-4.216012,-5.841445,-1.463012,7.212865,0.410301,0.498093,5.244529,3.428592,-8.887913,0.815397,-1.388929,7.060718,-7.518653,-0.217209,-2.915615,-8.692177,2.397512,7.132706,0.465742,2.033596,-6.249475,-9.834457,-5.411933,5.330161,0.807110,-8.241500,-5.948151,7.795625,-2.482385,-4.059635,9.465689,6.108408,-6.602497,-5.734996,4.635981,-8.005071,-6.039095,8.736924,-4.474797,6.504298,5.209029,6.433357,9.187493,-3.936119,-0.751001,-3.746994,9.666413,-0.462593,-2.044645,1.187197,1.598038,6.403367,1.595877,-7.778546,1.331497,0.314806,-7.893505,8.636887,2.934848,0.419877,-7.404733,7.457205,6.722009,8.825078,-5.955941,3.603247,-6.448404,1.130106,5.165616,7.474306,8.183104,4.200320,3.788338,4.745616,-7.517013,-2.166459,-8.730683,3.774079,-9.211298,-1.070308,6.564243,-0.492372,-7.637927,1.192611,4.257541,2.758887,0.950996,-0.248166,8.166636,-6.794781,-9.378288,-6.741671,-1.315929,-3.806583,5.789022,-8.053878,-1.739986,-1.662162,-1.456239,-8.636636,8.238829,9.996982,-2.488793,3.088228,0.300079,-1.512495,7.446727,0.725418,-6.612544,-8.764240,-7.052223,-8.353270,0.323762,3.125154,5.535980,9.899553,5.741578,6.624880,7.115556,4.194935,-2.872423,-7.742966,7.956917,-3.996194,-7.581931,4.128367,4.676311,4.477361,-8.794773,-2.733564,5.280791,-9.021492,-6.043444,-1.543817,0.914063,7.715433,1.725815,4.562280,9.860123,-7.223257,-1.822089,-3.283996,-5.372015,-1.932152,-4.690482,-8.437138,-7.864019,2.511529,-9.231854,-0.168906,5.137624,-8.290533,-6.495649,8.855545,1.589893,6.751080,4.620444,4.343655,5.317098,5.140098,-0.891403,3.101851,-5.031349,-8.945985,7.398306,-0.469993,-9.677217,2.117864,-6.542120,-3.696792,8.946485,3.133762,9.743730,-4.507971,-4.402820,-2.996359,2.369462,-2.373269,-3.761892,-2.273776,2.876097,8.163658,6.868691,-5.045020,9.278077,6.606686,-5.585028,-8.931641,0.139464,3.358172,-2.383912,5.623463,1.343862,3.408830,-9.716465,8.130164,2.352584,3.948399,-3.825109,-5.964213,-8.888056,-4.306974,2.452028,-2.436070,8.071869,-2.155409,2.237495,6.240831,5.076763,0.731342,-7.391969,-4.887250,5.106486,5.323191,4.602417,2.008274,5.038622,6.845918,-8.037631,-5.297905,9.583149,4.701727,-7.427269,4.984038,-2.731711,7.201844,-3.301609,-6.661856,0.472942,9.006276,2.845684,-7.370824,-0.603218,0.795980,5.188453,-2.271359,8.944533,5.489622,-1.703655,6.644283,1.516602,5.910812,-5.785815,6.278554,9.414098,8.386279,-9.619736,-6.226429,2.640002,2.450322,3.444635,8.466779,-0.352025,-3.028024,5.179042,4.269990,-9.242001,-5.363875,-8.976000,-0.933716,-8.633748,-9.053209,8.420428,3.070252,2.963816,1.700114,-6.143020,6.451395,3.631075,9.223910,2.960252,-7.798209,-7.502876,3.213161,-0.997126,-2.995670,5.217183,1.058078,2.492933,9.029210,-9.216009,3.489744,7.407178,0.513746,-5.318635,6.499896,6.028088,0.691945,7.984995,-9.990014,-8.506722,-0.104513,7.386426,-9.017382,5.721666,3.293704,-1.695294,-6.609905,6.844279,5.752623,2.356880,-1.522052,-9.614496,-9.075213,-9.953738,5.361247,0.659497,-1.773486,-1.559727,-9.781975,-9.008505,8.887035,-8.547617,-1.944404,0.749539,-0.539059,-3.755594,6.729451,-2.169927,-4.735478,-7.452672,-6.333623,-9.963424,-5.272663,4.841880,-9.820753,3.791268,1.571536,9.020957,0.298967,3.807568,5.679327,-9.136683,-6.352953,-2.084734,5.934387,-1.021730,3.309566,-8.290307,4.784416,-3.373103,6.135684,3.822534,4.347159,-8.882913,7.015739,-6.994183,-4.120863,4.335067,-9.930861,9.113630,-5.447902,0.152990,-5.947791,-5.326051,0.800554,8.842073,-1.221967,5.767720,-0.161863,-1.820246,2.733847,-5.362412,-7.406304,-5.999900,-2.172461,-3.848541,-6.511400,-0.814532,-4.189441,-6.380467,0.414512,-4.663272,6.456440,4.596741,-7.724196,5.067796,6.727729,6.502217,-6.584052,-5.808244,1.773145,4.639636,-2.230650,0.208303,-2.673409,-7.507559,8.215782,6.711793,6.632812,-1.835994,0.792447,1.536277,-3.089688,-1.595021,3.641368,5.501176,1.764517,-6.818320,-6.572121,-9.739145,2.098558,-4.751694,-7.963793,3.253908,-9.154794,8.585085,-7.840744,-1.214763,4.915126,6.691256,6.864392,1.019963,4.588465,-7.410167,9.476655,6.839566,-9.672257,-8.760121,1.218198,-7.511684,9.335334,4.892514,-1.515306,-6.084355,-2.789038,-8.638792,-4.549362,6.420522,2.978412,9.271425,-6.916043,-3.420698,-9.188240,7.313113,-4.405076,-7.713708,3.089490,2.819503,5.321145,0.456903,5.477847,-1.836884,-6.900601,-1.135230,9.923459,-9.996544,-4.575650,-8.397185,0.205411,-1.177378,2.687344,-9.349991,3.851687,2.480987,4.241196,-8.379878,-4.136696,7.843861,-8.908679,0.821643,4.939342,-6.780116,-2.633401,6.919871,-3.907547,5.670851,-8.819449,6.183891,-4.777161,-0.514125,9.204150,-0.011851,3.296577,-0.640049,0.799679,-4.371783,-8.030141,-5.076799,4.186624,-1.117617,-3.628682,-1.744491,4.122323,-2.896462,-2.619115,-9.575323,9.958064,8.947450,-6.364778,0.459012,9.346236,-4.558057,-6.744708,-3.787881,-6.062959,3.989194,7.804148,7.710012], dtype = "float32")#candidate|6085|(2400,)|const|float32
const_6086 = relay.const(4, dtype = "uint32")#candidate|6086|()|const|uint32
call_6084 = relay.TupleGetItem(func_3964_call(relay.reshape(const_6085.astype('float32'), [2400,]), relay.reshape(const_6086.astype('uint32'), []), ), 12)
call_6087 = relay.TupleGetItem(func_3967_call(relay.reshape(const_6085.astype('float32'), [2400,]), relay.reshape(const_6086.astype('uint32'), []), ), 12)
uop_6092 = relay.tan(call_6084.astype('float64')) # shape=(12, 5, 1)
uop_6094 = relay.tan(call_6087.astype('float64')) # shape=(12, 5, 1)
output = relay.Tuple([call_6054,call_6058,const_6085,const_6086,uop_6092,])
output2 = relay.Tuple([call_6055,call_6059,const_6085,const_6086,uop_6094,])
func_6096 = relay.Function([], output)
mod['func_6096'] = func_6096
mod = relay.transform.InferType()(mod)
mutated_mod['func_6096'] = func_6096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6096_call = mutated_mod.get_global_var('func_6096')
call_6097 = func_6096_call()
output = call_6097
func_6098 = relay.Function([], output)
mutated_mod['func_6098'] = func_6098
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6145 = relay.var("var_6145", dtype = "float64", shape = (14, 5, 15))#candidate|6145|(14, 5, 15)|var|float64
uop_6146 = relay.cos(var_6145.astype('float64')) # shape=(14, 5, 15)
func_5928_call = mod.get_global_var('func_5928')
func_5931_call = mutated_mod.get_global_var('func_5931')
const_6153 = relay.const([-9.239256,-0.917680,-1.495593,-0.630839,-3.433678,9.591524,0.825676,-2.941569,4.244247,5.888116,-0.568530,-3.342875,-2.702627,-1.692349,3.439356,6.249324,-8.045583,-7.481028,-4.481956,3.964652,5.562192,-9.329319,-9.816228,6.758503,8.131155,-6.692770,-7.167231,-9.171426,6.903095,-7.266846,-0.013735,-0.155662,0.970687,8.836216,-1.834349,-7.259748,-1.881289,-4.218740,9.033217,-7.267051,-1.597207,6.557070,1.204144,8.182176,-9.261070,9.241028,5.342325,5.940084,-3.101030,-6.758431,0.916232,-9.550954,5.118538,6.438176,5.102691,3.525107,-6.049538,-2.089533,6.378850,-8.276046,-9.871859,-4.458293,8.709464,-6.409167,3.502501,-8.245652,-1.791920,-2.526318,5.312388,-1.430887,3.917826,-3.318354,-1.967399,4.643148,-1.896576,3.172211,6.253577,-3.211539,0.575983,-3.383350,1.897288,-6.012822,-3.988151,-0.001627,-6.686816,-8.833067,-2.387734,6.815425,7.898656,-5.820858,-0.174703,-1.517181,-6.655339,-3.599326,-4.413266,-3.125553,-5.110429,5.419180,8.638233,-6.570759,-0.893245,2.623804,-7.403154,-5.010113,4.912938,2.086453,-0.341819,7.982454,2.423290,5.492765,-6.868371,3.647525,-4.566180,9.724488,-5.408087,7.078234,-3.639239,-0.883343,7.275551,1.971349,4.702342,-7.898733,-5.733480,-0.683188,4.546877,9.391546,3.139495,-2.607133,3.370734,0.784515,-2.203794,4.577620,7.828227,1.700697,-2.178295,7.538475,6.015377,8.962879,0.570922,2.714489,0.929489,0.201631,-9.439116,-2.090455,0.068361,6.155502,-1.369058,4.078038,-6.375720,-8.307692,2.262342,8.186731,0.346869,-5.731696,-7.267471,-1.054693,3.051766,1.325773,4.457523,6.066772,5.767194,-6.810787,0.389105,-3.904912,-5.945152,-1.136857,-8.446256,5.940534,5.741189,0.153583,7.805323,1.091326,0.355223,-2.605585,1.914764,2.164539,2.563641,-8.628776,0.961058,-0.362495], dtype = "float32")#candidate|6153|(180,)|const|float32
call_6152 = relay.TupleGetItem(func_5928_call(relay.reshape(const_6153.astype('float32'), [9, 2, 10])), 3)
call_6154 = relay.TupleGetItem(func_5931_call(relay.reshape(const_6153.astype('float32'), [9, 2, 10])), 3)
output = relay.Tuple([uop_6146,call_6152,const_6153,])
output2 = relay.Tuple([uop_6146,call_6154,const_6153,])
func_6156 = relay.Function([var_6145,], output)
mod['func_6156'] = func_6156
mod = relay.transform.InferType()(mod)
mutated_mod['func_6156'] = func_6156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6157 = relay.var("var_6157", dtype = "float64", shape = (14, 5, 15))#candidate|6157|(14, 5, 15)|var|float64
func_6156_call = mutated_mod.get_global_var('func_6156')
call_6158 = func_6156_call(var_6157)
output = call_6158
func_6159 = relay.Function([var_6157], output)
mutated_mod['func_6159'] = func_6159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4216_call = mod.get_global_var('func_4216')
func_4218_call = mutated_mod.get_global_var('func_4218')
call_6242 = func_4216_call()
call_6243 = func_4216_call()
func_4764_call = mod.get_global_var('func_4764')
func_4766_call = mutated_mod.get_global_var('func_4766')
call_6248 = relay.TupleGetItem(func_4764_call(), 2)
call_6249 = relay.TupleGetItem(func_4766_call(), 2)
func_3837_call = mod.get_global_var('func_3837')
func_3843_call = mutated_mod.get_global_var('func_3843')
var_6257 = relay.var("var_6257", dtype = "uint32", shape = (576,))#candidate|6257|(576,)|var|uint32
var_6258 = relay.var("var_6258", dtype = "int8", shape = (176, 2))#candidate|6258|(176, 2)|var|int8
var_6259 = relay.var("var_6259", dtype = "int8", shape = (1, 560))#candidate|6259|(1, 560)|var|int8
call_6256 = relay.TupleGetItem(func_3837_call(relay.reshape(var_6257.astype('uint32'), [4, 12, 12]), relay.reshape(var_6257.astype('uint32'), [4, 12, 12]), relay.reshape(var_6258.astype('int8'), [352,]), relay.reshape(var_6259.astype('int8'), [560,]), ), 10)
call_6260 = relay.TupleGetItem(func_3843_call(relay.reshape(var_6257.astype('uint32'), [4, 12, 12]), relay.reshape(var_6257.astype('uint32'), [4, 12, 12]), relay.reshape(var_6258.astype('int8'), [352,]), relay.reshape(var_6259.astype('int8'), [560,]), ), 10)
uop_6264 = relay.atan(var_6257.astype('float32')) # shape=(576,)
uop_6267 = relay.atanh(uop_6264.astype('float64')) # shape=(576,)
func_5718_call = mod.get_global_var('func_5718')
func_5720_call = mutated_mod.get_global_var('func_5720')
call_6277 = relay.TupleGetItem(func_5718_call(relay.reshape(uop_6267.astype('uint32'), [576,])), 4)
call_6278 = relay.TupleGetItem(func_5720_call(relay.reshape(uop_6267.astype('uint32'), [576,])), 4)
func_3011_call = mod.get_global_var('func_3011')
func_3014_call = mutated_mod.get_global_var('func_3014')
const_6293 = relay.const([6.678366,-9.212698,6.623594,7.626096,5.443885,-5.280996,1.877166,0.454157,2.702297,2.379874,-4.421322,2.176644,3.778438,-3.103309,-7.485941,-1.639343,8.304860,1.963338,-9.396568,7.232921,-4.842035,2.734281,-8.661064,5.922015,6.125872,-0.336388,-1.281078,2.284672,0.268404,-0.308745,-1.601062,8.731923,4.557809,-7.886272,9.046564,-7.894148,-3.165503,6.412742,-1.063447,-9.916944,-8.891724,0.219024,-6.113767,-8.657358,9.995188,6.625518,9.919298,8.536594,7.523673,-2.936907,2.248067,-3.295400,-9.340553,-5.093930,-0.306977,4.438151,5.435861,4.347237,5.416027,-3.778511], dtype = "float64")#candidate|6293|(60,)|const|float64
call_6292 = relay.TupleGetItem(func_3011_call(relay.reshape(const_6293.astype('float64'), [12, 5, 1])), 0)
call_6294 = relay.TupleGetItem(func_3014_call(relay.reshape(const_6293.astype('float64'), [12, 5, 1])), 0)
uop_6295 = relay.sinh(uop_6267.astype('float32')) # shape=(576,)
output = relay.Tuple([call_6242,call_6248,call_6256,var_6258,var_6259,call_6277,call_6292,const_6293,uop_6295,])
output2 = relay.Tuple([call_6243,call_6249,call_6260,var_6258,var_6259,call_6278,call_6294,const_6293,uop_6295,])
func_6301 = relay.Function([var_6257,var_6258,var_6259,], output)
mod['func_6301'] = func_6301
mod = relay.transform.InferType()(mod)
var_6302 = relay.var("var_6302", dtype = "uint32", shape = (576,))#candidate|6302|(576,)|var|uint32
var_6303 = relay.var("var_6303", dtype = "int8", shape = (176, 2))#candidate|6303|(176, 2)|var|int8
var_6304 = relay.var("var_6304", dtype = "int8", shape = (1, 560))#candidate|6304|(1, 560)|var|int8
output = func_6301(var_6302,var_6303,var_6304,)
func_6305 = relay.Function([var_6302,var_6303,var_6304,], output)
mutated_mod['func_6305'] = func_6305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3048_call = mod.get_global_var('func_3048')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_6328 = relay.TupleGetItem(func_3048_call(), 0)
call_6329 = relay.TupleGetItem(func_3049_call(), 0)
output = call_6328
output2 = call_6329
func_6330 = relay.Function([], output)
mod['func_6330'] = func_6330
mod = relay.transform.InferType()(mod)
output = func_6330()
func_6331 = relay.Function([], output)
mutated_mod['func_6331'] = func_6331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2814_call = mod.get_global_var('func_2814')
func_2816_call = mutated_mod.get_global_var('func_2816')
call_6347 = func_2814_call()
call_6348 = func_2814_call()
func_5928_call = mod.get_global_var('func_5928')
func_5931_call = mutated_mod.get_global_var('func_5931')
var_6367 = relay.var("var_6367", dtype = "float32", shape = (3, 60))#candidate|6367|(3, 60)|var|float32
call_6366 = relay.TupleGetItem(func_5928_call(relay.reshape(var_6367.astype('float32'), [9, 2, 10])), 0)
call_6368 = relay.TupleGetItem(func_5931_call(relay.reshape(var_6367.astype('float32'), [9, 2, 10])), 0)
uop_6375 = relay.log10(var_6367.astype('float32')) # shape=(3, 60)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
call_6381 = func_5015_call()
call_6382 = func_5015_call()
func_3323_call = mod.get_global_var('func_3323')
func_3325_call = mutated_mod.get_global_var('func_3325')
var_6384 = relay.var("var_6384", dtype = "float32", shape = (480,))#candidate|6384|(480,)|var|float32
call_6383 = func_3323_call(relay.reshape(var_6384.astype('float32'), [8, 12, 5]))
call_6385 = func_3323_call(relay.reshape(var_6384.astype('float32'), [8, 12, 5]))
output = relay.Tuple([call_6347,call_6366,uop_6375,call_6381,call_6383,var_6384,])
output2 = relay.Tuple([call_6348,call_6368,uop_6375,call_6382,call_6385,var_6384,])
func_6408 = relay.Function([var_6367,var_6384,], output)
mod['func_6408'] = func_6408
mod = relay.transform.InferType()(mod)
var_6409 = relay.var("var_6409", dtype = "float32", shape = (3, 60))#candidate|6409|(3, 60)|var|float32
var_6410 = relay.var("var_6410", dtype = "float32", shape = (480,))#candidate|6410|(480,)|var|float32
output = func_6408(var_6409,var_6410,)
func_6411 = relay.Function([var_6409,var_6410,], output)
mutated_mod['func_6411'] = func_6411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3980_call = mod.get_global_var('func_3980')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_6452 = func_3980_call()
call_6453 = func_3980_call()
func_4986_call = mod.get_global_var('func_4986')
func_4990_call = mutated_mod.get_global_var('func_4990')
var_6457 = relay.var("var_6457", dtype = "int8", shape = (378,))#candidate|6457|(378,)|var|int8
call_6456 = relay.TupleGetItem(func_4986_call(relay.reshape(var_6457.astype('int8'), [378,]), relay.reshape(var_6457.astype('int8'), [378,]), ), 3)
call_6458 = relay.TupleGetItem(func_4990_call(relay.reshape(var_6457.astype('int8'), [378,]), relay.reshape(var_6457.astype('int8'), [378,]), ), 3)
output = relay.Tuple([call_6452,call_6456,var_6457,])
output2 = relay.Tuple([call_6453,call_6458,var_6457,])
func_6459 = relay.Function([var_6457,], output)
mod['func_6459'] = func_6459
mod = relay.transform.InferType()(mod)
mutated_mod['func_6459'] = func_6459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6460 = relay.var("var_6460", dtype = "int8", shape = (378,))#candidate|6460|(378,)|var|int8
func_6459_call = mutated_mod.get_global_var('func_6459')
call_6461 = func_6459_call(var_6460)
output = call_6461
func_6462 = relay.Function([var_6460], output)
mutated_mod['func_6462'] = func_6462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4442_call = mod.get_global_var('func_4442')
func_4443_call = mutated_mod.get_global_var('func_4443')
call_6531 = func_4442_call()
call_6532 = func_4442_call()
output = call_6531
output2 = call_6532
func_6540 = relay.Function([], output)
mod['func_6540'] = func_6540
mod = relay.transform.InferType()(mod)
output = func_6540()
func_6541 = relay.Function([], output)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_6606 = func_2182_call()
call_6607 = func_2182_call()
output = relay.Tuple([call_6606,])
output2 = relay.Tuple([call_6607,])
func_6609 = relay.Function([], output)
mod['func_6609'] = func_6609
mod = relay.transform.InferType()(mod)
output = func_6609()
func_6610 = relay.Function([], output)
mutated_mod['func_6610'] = func_6610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3980_call = mod.get_global_var('func_3980')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_6685 = func_3980_call()
call_6686 = func_3980_call()
output = call_6685
output2 = call_6686
func_6716 = relay.Function([], output)
mod['func_6716'] = func_6716
mod = relay.transform.InferType()(mod)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6716_call = mutated_mod.get_global_var('func_6716')
call_6717 = func_6716_call()
output = call_6717
func_6718 = relay.Function([], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6801 = relay.var("var_6801", dtype = "float64", shape = (9, 2, 14))#candidate|6801|(9, 2, 14)|var|float64
uop_6802 = relay.tan(var_6801.astype('float64')) # shape=(9, 2, 14)
func_3402_call = mod.get_global_var('func_3402')
func_3405_call = mutated_mod.get_global_var('func_3405')
var_6810 = relay.var("var_6810", dtype = "float64", shape = ())#candidate|6810|()|var|float64
const_6811 = relay.const([-2.643174,4.974582,-2.509726,-8.968068,-7.792657,-3.579604,0.499007,-8.442266,7.690980,-8.865306,3.237417,-1.072413,4.006012,-1.839367,-2.803862,7.915593], dtype = "float64")#candidate|6811|(16,)|const|float64
call_6809 = relay.TupleGetItem(func_3402_call(relay.reshape(var_6810.astype('float64'), []), relay.reshape(const_6811.astype('float64'), [16, 1]), ), 0)
call_6812 = relay.TupleGetItem(func_3405_call(relay.reshape(var_6810.astype('float64'), []), relay.reshape(const_6811.astype('float64'), [16, 1]), ), 0)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_6820 = relay.TupleGetItem(func_2677_call(), 1)
call_6821 = relay.TupleGetItem(func_2678_call(), 1)
func_141_call = mod.get_global_var('func_141')
func_145_call = mutated_mod.get_global_var('func_145')
var_6825 = relay.var("var_6825", dtype = "float64", shape = (30,))#candidate|6825|(30,)|var|float64
const_6826 = relay.const([8.441863,-0.810698,-7.472029,-4.061664,2.753525,-3.078653,-7.301822,-4.202718,-5.221276,0.677727,-8.568187,9.234435,1.730797,7.715198,-1.491902,6.156820,-1.325698,-2.587135,-7.853711,-0.551270,3.144018,-1.105562,-9.574713,-3.360949,-7.840836,9.125582,-6.984320,-3.662480,-8.091792,0.332583,8.513097,-7.056635,-6.444820,-4.358597,8.591335,-2.446372,-4.386857,-7.758674,7.482001,7.983565,5.327971,-1.776513,-6.865897,2.419080,2.391428,0.136574,8.186771,-4.981045,-8.197580,-4.242413,4.250549,-0.557057,1.454456,-3.016902,2.476414,1.242283,-0.496851,2.094219,-6.926136,-6.647160,2.617882,-1.204575,6.774387,-0.406306,-8.337430,-9.485993,-0.005076,8.045565,6.626964,-6.682675,6.149627,3.107081,-4.966029,-8.602283,-3.706139,-7.568662,-1.953894,-2.747236,3.326849,9.771216,-6.120039,8.252633,7.889303,-0.888202,8.657867,7.070481,-8.063882,-4.801576,4.766511,4.006357,3.113921,7.597261,8.911529,-6.597748,0.530051,-7.263296,0.803190,-9.764518,-0.877332,4.676287,1.092754,-1.341977,-7.205508,-9.549494,-3.302860,7.208070,0.856733,3.618911,-1.332200,8.394761,-1.067841,5.236104,-1.731385,-4.325227,1.695442,-4.950421,-1.335170,-2.984459,5.408595,0.355305,7.220252,-9.718672,5.176212,2.709723,1.746055,1.255806,-1.698179,9.601879,-2.113352,9.376546,0.313209,0.497775,-4.927213,-9.930903,-9.974000,5.207524,-6.237569,1.342852,-4.877540,-7.710977,6.150409,4.954081,-7.744817,-8.379959,-7.534745,-0.615509,4.301204,8.918990,-1.181084,-5.958949,9.974125,-9.181291,4.221091,-2.210006,-6.159634,5.952394,-2.239173,3.463900,7.194238,-6.726832,9.885693,2.801383,-6.741481,-0.870349,1.617638,2.651109,5.619807,-4.330339,7.234405,-0.955906,6.886095,-2.400665,-5.680808,5.765252,2.188044,7.648904,-3.235189,-6.893460,4.852497,1.490087,1.796394,-2.429935,-9.002253,8.640912,3.755272,8.696092,5.800780,-7.438829,5.314441,4.477285,5.375512,0.865821,4.146511,-2.246571,5.612997,3.244765,8.292765,1.874019,5.794678,7.163861,-6.078241,3.170506,-0.371856,0.897645,4.112300,7.506355,7.692004,5.190950,-9.519647,4.431231,2.536790,-2.726468,-5.173002,8.391286,-3.624585,-3.301685,6.565179,-3.094820,-1.218445,-7.327581,-3.848124,-8.698003,-3.064491,-7.435391,-5.598328,-1.335033,3.653350,-0.435665,-2.655362,4.124007,-2.398281,5.643898,7.827390,-8.295973,7.319889,-4.556626,-8.951529,5.082078,-5.184583,3.415245,-6.167450,-1.313227,-4.815159,9.608660,-6.740863,7.387374,3.843011,1.348245,-0.924626,-4.399763,-3.978817,8.104852,2.918461,3.276559,-3.625522,-3.812794,0.018806,-0.567428,8.733401,-3.651139,-3.372090,2.280135,6.205140,1.367995,-1.840730,3.877978,-4.088823,8.123211,-2.765588,7.955097,9.001098,2.943420,-6.861129,-3.528862,6.910146,-8.727375,-1.313256,7.050589,-7.080028,1.554936,-7.028387,2.107749,4.015798,8.359791,2.052303,-9.421334,-8.244544,2.130273,-6.802658,8.128677,7.100692,3.841423,6.562961,2.133072,5.365189,-0.237811,5.516687,-9.080836,-4.726380,-9.773697,-9.795594,-5.139778,-0.268428,-6.969039,4.607908,7.281542,3.669861,-2.655818,3.503839,-8.957273,-9.144575,3.496955,-7.841371,-9.176999,9.516839,-1.694905,6.510413,-5.601769,8.080808,-7.349025,-7.437960,8.410180,4.055213,-2.823318,8.952688,7.320089,2.511436,5.486765,4.013138,-5.489539,6.847182,-7.808714,2.837062,-0.548486,5.602631,7.564602,-4.280872,1.826142,-6.083946,6.308754,-5.323576,5.662823,9.611878,3.094071,-1.904157,2.693656,1.337829,7.110517,-7.441598,7.559661,-5.976590,-6.542283,0.198773,-7.253963,5.540692,4.050244,2.146253,-3.919326,9.015262,7.632950,0.646056,4.887616,-8.024809,-0.640158,8.814222,4.598021,-6.753195,-9.404448,9.842458,-0.016291,-2.898073,5.538468,-7.497948,-4.072808,9.070693,-3.729647,-2.107171,8.905734,-4.635565,-6.961787,5.693420,9.817720,6.659820,3.259458,4.892963,0.814492,6.698909,4.540331,-8.285925,-6.968833,1.735681,1.147260,-9.577853,-1.453502,-2.567854,-3.427359,-2.114860,2.164669,-1.390017,1.325654,-9.959036,9.911284,2.387282,-2.331897,9.806763,2.819901,9.500901,-4.091716,-2.339912,-3.516639,4.103553,-7.887839,-9.208547,0.231464,9.184025,-8.940091,-7.140845,6.503063,-1.987877,1.112530,-2.687576,-4.406717,3.317713,-2.277018,-1.789810,-4.351221,0.845167,6.200636,5.754073,-7.036025,1.994286,-4.200223,8.176804,7.189745,0.527922,2.634154,-9.571859,5.635967,-2.452777,3.886717,-6.765409,3.107411,-4.730048,-7.191211,8.707816,-9.319124,5.173961,-2.809951,2.146693,7.103533,6.864204,-0.158771,-7.823234,0.003652,5.485968,1.409275,3.367743,-1.063912,-6.437581,9.314760,8.775280,-4.582348,-9.322261,4.654823,2.531067,2.192081,7.014863,-1.504534,8.445449,1.345070,-9.173999,8.701929,8.436529,1.857659,-2.853194,2.572918,2.182887,-9.027426,9.860551,2.623664,-1.553402,0.364222,-3.677369,-6.289774,6.157037,2.202688,-7.035434,6.982770,-8.300398,0.369351,1.053049,-3.736388,1.118144,0.534529,6.854416,3.140103,0.018585,7.649365,-5.608933,3.869637,2.411128,5.495565,4.797847,2.508610,1.085105,-4.373766,-6.128398,4.713207,-1.113931,-1.718756,2.723268,7.991795,-9.009167,4.839123,-2.992227,-8.239201,3.413427,-6.408964,7.629122,-8.982040,-0.657241,4.779909,9.826762,-4.414594,4.727236,1.166929,-7.458300,2.636662,-5.676688,3.283740,-6.907647,-3.393880,9.312898,-1.377308,3.163094,-4.879053,-2.503838,-1.815959,-8.772947,5.112178,6.258275,2.963037,6.420839,-4.912451,9.108268,3.837712,3.116550,2.406435,-6.374408,7.133472,-1.555846,7.206831,-8.273220,-9.541460,3.741867,-3.303262,1.379031,-2.783725,6.176702,-1.882738,3.161709,-3.033006,9.783293,8.867983,1.091286,1.308219,-2.023713,-5.573170,-8.429979,-1.935363,-5.502988,-8.904043,-1.564852,6.860649,5.361933,-0.434011,2.646624,-8.217744,-5.570948,-4.015759,-4.490844,3.430438,-3.432457,3.157669,-8.192369,-7.642965,4.163455,-6.414180,-2.966564,6.664694,5.127930,-2.809153,-4.263622,-6.607789,-9.876474,-5.017651,-5.871137,-2.400790,-0.014338,-4.546685,8.830109,8.801267,8.714780,-1.434818,4.849889,-5.171346,3.369509,0.068167,4.246826,-7.785412,-6.403453,-3.744552,-7.400669,-2.679050,8.327507,7.406674,0.317493,0.550584,1.714065,-6.967263,1.748874,1.293617,3.843451,-5.469492,-5.553435,1.756988,1.292641,-2.291746,-6.303231,-6.506023,8.651418,-3.578392,8.996281,0.717741,1.443025,6.754627,-8.961245,0.953041,-0.083834,-2.839367], dtype = "float32")#candidate|6826|(640,)|const|float32
call_6824 = relay.TupleGetItem(func_141_call(relay.reshape(var_6810.astype('float32'), [1, 1, 1]), relay.reshape(var_6825.astype('float64'), [10, 3]), relay.reshape(const_6826.astype('float32'), [8, 5, 16]), ), 4)
call_6827 = relay.TupleGetItem(func_145_call(relay.reshape(var_6810.astype('float32'), [1, 1, 1]), relay.reshape(var_6825.astype('float64'), [10, 3]), relay.reshape(const_6826.astype('float32'), [8, 5, 16]), ), 4)
output = relay.Tuple([uop_6802,call_6809,var_6810,const_6811,call_6820,call_6824,var_6825,const_6826,])
output2 = relay.Tuple([uop_6802,call_6812,var_6810,const_6811,call_6821,call_6827,var_6825,const_6826,])
func_6832 = relay.Function([var_6801,var_6810,var_6825,], output)
mod['func_6832'] = func_6832
mod = relay.transform.InferType()(mod)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6832_call = mutated_mod.get_global_var('func_6832')
var_6834 = relay.var("var_6834", dtype = "float64", shape = (9, 2, 14))#candidate|6834|(9, 2, 14)|var|float64
var_6835 = relay.var("var_6835", dtype = "float64", shape = ())#candidate|6835|()|var|float64
var_6836 = relay.var("var_6836", dtype = "float64", shape = (30,))#candidate|6836|(30,)|var|float64
call_6833 = func_6832_call(var_6834,var_6835,var_6836,)
output = call_6833
func_6837 = relay.Function([var_6834,var_6835,var_6836,], output)
mutated_mod['func_6837'] = func_6837
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6842 = relay.var("var_6842", dtype = "float32", shape = (10, 9, 5))#candidate|6842|(10, 9, 5)|var|float32
uop_6843 = relay.atanh(var_6842.astype('float32')) # shape=(10, 9, 5)
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_6863 = relay.TupleGetItem(func_3600_call(), 0)
call_6864 = relay.TupleGetItem(func_3602_call(), 0)
func_5369_call = mod.get_global_var('func_5369')
func_5371_call = mutated_mod.get_global_var('func_5371')
call_6878 = relay.TupleGetItem(func_5369_call(), 0)
call_6879 = relay.TupleGetItem(func_5371_call(), 0)
output = relay.Tuple([uop_6843,call_6863,call_6878,])
output2 = relay.Tuple([uop_6843,call_6864,call_6879,])
func_6886 = relay.Function([var_6842,], output)
mod['func_6886'] = func_6886
mod = relay.transform.InferType()(mod)
var_6887 = relay.var("var_6887", dtype = "float32", shape = (10, 9, 5))#candidate|6887|(10, 9, 5)|var|float32
output = func_6886(var_6887)
func_6888 = relay.Function([var_6887], output)
mutated_mod['func_6888'] = func_6888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3910_call = mod.get_global_var('func_3910')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_6933 = func_3910_call()
call_6934 = func_3910_call()
output = call_6933
output2 = call_6934
func_6949 = relay.Function([], output)
mod['func_6949'] = func_6949
mod = relay.transform.InferType()(mod)
output = func_6949()
func_6950 = relay.Function([], output)
mutated_mod['func_6950'] = func_6950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6096_call = mod.get_global_var('func_6096')
func_6098_call = mutated_mod.get_global_var('func_6098')
call_6957 = relay.TupleGetItem(func_6096_call(), 3)
call_6958 = relay.TupleGetItem(func_6098_call(), 3)
var_6978 = relay.var("var_6978", dtype = "uint32", shape = (12, 13, 14))#candidate|6978|(12, 13, 14)|var|uint32
bop_6979 = relay.right_shift(call_6957.astype('uint32'), var_6978.astype('uint32')) # shape=(12, 13, 14)
bop_6982 = relay.right_shift(call_6958.astype('uint32'), var_6978.astype('uint32')) # shape=(12, 13, 14)
func_3_call = mod.get_global_var('func_3')
func_5_call = mutated_mod.get_global_var('func_5')
var_7001 = relay.var("var_7001", dtype = "float64", shape = (30,))#candidate|7001|(30,)|var|float64
call_7000 = relay.TupleGetItem(func_3_call(relay.reshape(var_7001.astype('float64'), [2, 3, 5])), 0)
call_7002 = relay.TupleGetItem(func_5_call(relay.reshape(var_7001.astype('float64'), [2, 3, 5])), 0)
bop_7010 = relay.power(var_7001.astype('float64'), relay.reshape(call_7000.astype('float64'), relay.shape_of(var_7001))) # shape=(30,)
bop_7013 = relay.power(var_7001.astype('float64'), relay.reshape(call_7002.astype('float64'), relay.shape_of(var_7001))) # shape=(30,)
output = relay.Tuple([bop_6979,bop_7010,])
output2 = relay.Tuple([bop_6982,bop_7013,])
func_7045 = relay.Function([var_6978,var_7001,], output)
mod['func_7045'] = func_7045
mod = relay.transform.InferType()(mod)
var_7046 = relay.var("var_7046", dtype = "uint32", shape = (12, 13, 14))#candidate|7046|(12, 13, 14)|var|uint32
var_7047 = relay.var("var_7047", dtype = "float64", shape = (30,))#candidate|7047|(30,)|var|float64
output = func_7045(var_7046,var_7047,)
func_7048 = relay.Function([var_7046,var_7047,], output)
mutated_mod['func_7048'] = func_7048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
call_7104 = func_5015_call()
call_7105 = func_5015_call()
output = call_7104
output2 = call_7105
func_7109 = relay.Function([], output)
mod['func_7109'] = func_7109
mod = relay.transform.InferType()(mod)
mutated_mod['func_7109'] = func_7109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7109_call = mutated_mod.get_global_var('func_7109')
call_7110 = func_7109_call()
output = call_7110
func_7111 = relay.Function([], output)
mutated_mod['func_7111'] = func_7111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3073_call = mutated_mod.get_global_var('func_3073')
call_7122 = relay.TupleGetItem(func_3071_call(), 0)
call_7123 = relay.TupleGetItem(func_3073_call(), 0)
output = call_7122
output2 = call_7123
func_7135 = relay.Function([], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7136 = func_7135_call()
output = call_7136
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4998_call = mod.get_global_var('func_4998')
func_5000_call = mutated_mod.get_global_var('func_5000')
call_7168 = relay.TupleGetItem(func_4998_call(), 0)
call_7169 = relay.TupleGetItem(func_5000_call(), 0)
func_6949_call = mod.get_global_var('func_6949')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_7179 = func_6949_call()
call_7180 = func_6949_call()
output = relay.Tuple([call_7168,call_7179,])
output2 = relay.Tuple([call_7169,call_7180,])
func_7181 = relay.Function([], output)
mod['func_7181'] = func_7181
mod = relay.transform.InferType()(mod)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7181_call = mutated_mod.get_global_var('func_7181')
call_7182 = func_7181_call()
output = call_7182
func_7183 = relay.Function([], output)
mutated_mod['func_7183'] = func_7183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5624_call = mod.get_global_var('func_5624')
func_5625_call = mutated_mod.get_global_var('func_5625')
call_7205 = func_5624_call()
call_7206 = func_5624_call()
func_3179_call = mod.get_global_var('func_3179')
func_3181_call = mutated_mod.get_global_var('func_3181')
call_7212 = relay.TupleGetItem(func_3179_call(), 1)
call_7213 = relay.TupleGetItem(func_3181_call(), 1)
output = relay.Tuple([call_7205,call_7212,])
output2 = relay.Tuple([call_7206,call_7213,])
func_7236 = relay.Function([], output)
mod['func_7236'] = func_7236
mod = relay.transform.InferType()(mod)
mutated_mod['func_7236'] = func_7236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7236_call = mutated_mod.get_global_var('func_7236')
call_7237 = func_7236_call()
output = call_7237
func_7238 = relay.Function([], output)
mutated_mod['func_7238'] = func_7238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mod.get_global_var('func_4934')
func_4936_call = mutated_mod.get_global_var('func_4936')
call_7306 = relay.TupleGetItem(func_4934_call(), 1)
call_7307 = relay.TupleGetItem(func_4936_call(), 1)
uop_7321 = relay.exp(call_7306.astype('float64')) # shape=(9, 8, 3)
uop_7323 = relay.exp(call_7307.astype('float64')) # shape=(9, 8, 3)
output = uop_7321
output2 = uop_7323
func_7325 = relay.Function([], output)
mod['func_7325'] = func_7325
mod = relay.transform.InferType()(mod)
mutated_mod['func_7325'] = func_7325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7325_call = mutated_mod.get_global_var('func_7325')
call_7326 = func_7325_call()
output = call_7326
func_7327 = relay.Function([], output)
mutated_mod['func_7327'] = func_7327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mod.get_global_var('func_4934')
func_4936_call = mutated_mod.get_global_var('func_4936')
call_7345 = relay.TupleGetItem(func_4934_call(), 1)
call_7346 = relay.TupleGetItem(func_4936_call(), 1)
const_7347 = relay.const([[[10,-8,4],[7,10,2],[-1,-8,-2],[-8,-1,-10],[10,-8,-7],[-2,10,5],[4,7,-3],[4,1,-3]],[[-5,1,-1],[-8,-4,-3],[-3,9,7],[-9,-7,-4],[7,-4,-2],[-3,-7,-10],[-5,1,-7],[2,9,3]],[[-5,-6,-9],[3,-10,4],[4,-6,-2],[-1,-7,6],[-7,3,-8],[-2,7,5],[10,-1,5],[-10,-3,-1]],[[-5,1,7],[5,8,9],[-4,-10,3],[-6,3,3],[5,8,2],[-6,-4,-10],[-6,2,-4],[-9,4,-9]],[[5,9,-7],[8,8,1],[-5,-6,3],[9,-2,3],[-4,4,4],[-6,-1,8],[9,-9,4],[-6,6,-10]],[[-9,-8,2],[9,-6,7],[-6,-10,9],[-4,-6,5],[2,10,5],[-5,-9,-5],[4,8,-7],[-1,-7,2]],[[1,-4,9],[-6,1,7],[6,-10,4],[-7,-1,2],[7,3,-4],[-9,2,-1],[-3,2,-3],[-1,2,5]],[[9,6,-6],[-8,-2,6],[-7,-3,8],[-10,1,6],[2,4,-1],[9,2,9],[-6,10,9],[7,10,-5]],[[-2,-9,10],[6,3,5],[10,3,1],[-9,-9,6],[6,4,-3],[-6,7,-7],[-1,6,-4],[9,4,7]]], dtype = "uint32")#candidate|7347|(9, 8, 3)|const|uint32
bop_7348 = relay.logical_xor(call_7345.astype('int8'), relay.reshape(const_7347.astype('int8'), relay.shape_of(call_7345))) # shape=(9, 8, 3)
bop_7351 = relay.logical_xor(call_7346.astype('int8'), relay.reshape(const_7347.astype('int8'), relay.shape_of(call_7346))) # shape=(9, 8, 3)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_7359 = relay.TupleGetItem(func_2484_call(), 1)
call_7360 = relay.TupleGetItem(func_2486_call(), 1)
output = relay.Tuple([bop_7348,call_7359,])
output2 = relay.Tuple([bop_7351,call_7360,])
func_7387 = relay.Function([], output)
mod['func_7387'] = func_7387
mod = relay.transform.InferType()(mod)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7387_call = mutated_mod.get_global_var('func_7387')
call_7388 = func_7387_call()
output = call_7388
func_7389 = relay.Function([], output)
mutated_mod['func_7389'] = func_7389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_7421 = relay.TupleGetItem(func_2730_call(), 0)
call_7422 = relay.TupleGetItem(func_2732_call(), 0)
uop_7434 = relay.sigmoid(call_7421.astype('float64')) # shape=(2, 9, 13)
uop_7436 = relay.sigmoid(call_7422.astype('float64')) # shape=(2, 9, 13)
output = relay.Tuple([uop_7434,])
output2 = relay.Tuple([uop_7436,])
func_7444 = relay.Function([], output)
mod['func_7444'] = func_7444
mod = relay.transform.InferType()(mod)
mutated_mod['func_7444'] = func_7444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7444_call = mutated_mod.get_global_var('func_7444')
call_7445 = func_7444_call()
output = call_7445
func_7446 = relay.Function([], output)
mutated_mod['func_7446'] = func_7446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7464 = relay.var("var_7464", dtype = "int64", shape = (4, 13, 5))#candidate|7464|(4, 13, 5)|var|int64
var_7465 = relay.var("var_7465", dtype = "int64", shape = (4, 13, 5))#candidate|7465|(4, 13, 5)|var|int64
bop_7466 = relay.minimum(var_7464.astype('int64'), relay.reshape(var_7465.astype('int64'), relay.shape_of(var_7464))) # shape=(4, 13, 5)
func_2313_call = mod.get_global_var('func_2313')
func_2316_call = mutated_mod.get_global_var('func_2316')
var_7488 = relay.var("var_7488", dtype = "uint64", shape = (234,))#candidate|7488|(234,)|var|uint64
call_7487 = func_2313_call(relay.reshape(var_7488.astype('uint64'), [2, 9, 13]))
call_7489 = func_2313_call(relay.reshape(var_7488.astype('uint64'), [2, 9, 13]))
bop_7492 = relay.greater(var_7465.astype('bool'), relay.reshape(var_7464.astype('bool'), relay.shape_of(var_7465))) # shape=(4, 13, 5)
output = relay.Tuple([bop_7466,call_7487,var_7488,bop_7492,])
output2 = relay.Tuple([bop_7466,call_7489,var_7488,bop_7492,])
func_7509 = relay.Function([var_7464,var_7465,var_7488,], output)
mod['func_7509'] = func_7509
mod = relay.transform.InferType()(mod)
var_7510 = relay.var("var_7510", dtype = "int64", shape = (4, 13, 5))#candidate|7510|(4, 13, 5)|var|int64
var_7511 = relay.var("var_7511", dtype = "int64", shape = (4, 13, 5))#candidate|7511|(4, 13, 5)|var|int64
var_7512 = relay.var("var_7512", dtype = "uint64", shape = (234,))#candidate|7512|(234,)|var|uint64
output = func_7509(var_7510,var_7511,var_7512,)
func_7513 = relay.Function([var_7510,var_7511,var_7512,], output)
mutated_mod['func_7513'] = func_7513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2736_call = mod.get_global_var('func_2736')
func_2737_call = mutated_mod.get_global_var('func_2737')
call_7520 = func_2736_call()
call_7521 = func_2736_call()
func_4383_call = mod.get_global_var('func_4383')
func_4388_call = mutated_mod.get_global_var('func_4388')
const_7527 = relay.const(7, dtype = "int64")#candidate|7527|()|const|int64
const_7528 = relay.const([-3,9,-8,5,3,1,-9,-10,3,1,7,6,-4,-6,-6,-6,-3,-3,5,-6,6,-10,6,-1,3,7,-5,-6,8,9,-2,-5,3,-8,5,-7], dtype = "int64")#candidate|7528|(36,)|const|int64
const_7529 = relay.const([-3,7,8,-5,-2,9,-1,-1,-1,7,-7,-3,9,7,7,2,-1,-8,-1,-5,5,-2,-3,7,3,1,6,-3,1,10,-1,2,1,10,-2,4,1,4,-8,-9,6,-9,5,7,3,6,10,-4,5,-3,-1,4,7,-7,8,-4,-7,7,6,-7,-1,-2,8,-2,-2,-2,5,6,-4,5,-10,-6,-3,-8,-9,1,-8,9,-1,-3,-5,5,-10,2,-3,-8,5,9,-9,10,-3,-5,3,1,4,-6,-8,1,-1,4,9,6,-7,3,-3,-5,-3,1,6,-10,5,-3,9,5,-6,-4,2,-8,-7,9,3,8,6,-2,3,-5,9,3,2,8,6,3,-1,9,2,-10,1,3,-7,-2,-8,-9,4,5,-10,4,-4,-6,-9,-5,-4,-6,-2,4,3,-2,-10,-9,4,10,8,2,2,9,4,2,10,4,-6,-3,-4,-3,-7,3,-10,-7,-9,-2,-8,4,-6,1,4,-8,-6,3,-8,-8,-1,-6,4,-9,2,-5,2,-2,6,4,3,-4,5,-10,-6,-9,1,-7,-1,-7,-6,3,4,8,-3,3,6,-4,7,-5,-4,7,2,-10,10,5,-4,4,6,-9,4,-4,1,3,-3,8,-3,-5,-1,-5,4,7,-8,5,2,-4,8,-9,7,-9,-10,-10,-4,-7,9,5,2,1,-2,-8,2,5,4,-1,5,3,-6,8,7,-4,7,-10,-1,3,-9,2,-4,1,8,-1,1,8,-7,9,2,-2,5,10,-5,3,-5,-5,-9,-9,10,2,3,1,4,6,5,5,-2,-8,-7,2,6,-2,-6,2,10,7,3,5,-10,-3,1,-5,-2,-3,-3,-2,-4,2,5,4,-9,1,3,-1,-9,5,2,-4,-2,5,3,2,10,-5,-1,2,-4,-4,-1,7,7,9,-4,4,-1,9,6,1,-5,-3,-7,-8,10,-7,7,8,-8,3,-3,5,-8,9,-6,-2,-7,9,9,-7,9,9,-8,10,-5,9,4,1,-8,5,-1,7,1,-5,5,-1,-6,10,7,-1,5,-10,3,10,-4,-7,4,-4,-2,-9,-1,-1,1,10,-1,10,-2,-6,4,6,3,-4,7,-5,-6,-4,-5,3,-8,5,7,-7,8,4,9,9,-3,-10,10,9,-8,-5,10,10,-5,7,-10,1,-8,-9,2,9,-2,6,-4,10,-10,8,4,-9,-1,-1,1,-9,4,5,8,3,-7,-4,6,5,-10,9,9,3], dtype = "int64")#candidate|7529|(468,)|const|int64
call_7526 = relay.TupleGetItem(func_4383_call(relay.reshape(const_7527.astype('int64'), []), relay.reshape(const_7528.astype('int64'), [12, 3, 1]), relay.reshape(const_7529.astype('int64'), [12, 3, 13]), ), 0)
call_7530 = relay.TupleGetItem(func_4388_call(relay.reshape(const_7527.astype('int64'), []), relay.reshape(const_7528.astype('int64'), [12, 3, 1]), relay.reshape(const_7529.astype('int64'), [12, 3, 13]), ), 0)
func_6609_call = mod.get_global_var('func_6609')
func_6610_call = mutated_mod.get_global_var('func_6610')
call_7532 = relay.TupleGetItem(func_6609_call(), 0)
call_7533 = relay.TupleGetItem(func_6610_call(), 0)
output = relay.Tuple([call_7520,call_7526,const_7527,const_7528,const_7529,call_7532,])
output2 = relay.Tuple([call_7521,call_7530,const_7527,const_7528,const_7529,call_7533,])
func_7535 = relay.Function([], output)
mod['func_7535'] = func_7535
mod = relay.transform.InferType()(mod)
output = func_7535()
func_7536 = relay.Function([], output)
mutated_mod['func_7536'] = func_7536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4216_call = mod.get_global_var('func_4216')
func_4218_call = mutated_mod.get_global_var('func_4218')
call_7537 = func_4216_call()
call_7538 = func_4216_call()
func_6886_call = mod.get_global_var('func_6886')
func_6888_call = mutated_mod.get_global_var('func_6888')
var_7558 = relay.var("var_7558", dtype = "float32", shape = (150, 3))#candidate|7558|(150, 3)|var|float32
call_7557 = relay.TupleGetItem(func_6886_call(relay.reshape(var_7558.astype('float32'), [10, 9, 5])), 2)
call_7559 = relay.TupleGetItem(func_6888_call(relay.reshape(var_7558.astype('float32'), [10, 9, 5])), 2)
var_7572 = relay.var("var_7572", dtype = "float32", shape = (150, 3))#candidate|7572|(150, 3)|var|float32
bop_7573 = relay.maximum(var_7558.astype('uint16'), relay.reshape(var_7572.astype('uint16'), relay.shape_of(var_7558))) # shape=(150, 3)
output = relay.Tuple([call_7537,call_7557,bop_7573,])
output2 = relay.Tuple([call_7538,call_7559,bop_7573,])
func_7583 = relay.Function([var_7558,var_7572,], output)
mod['func_7583'] = func_7583
mod = relay.transform.InferType()(mod)
mutated_mod['func_7583'] = func_7583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7583_call = mutated_mod.get_global_var('func_7583')
var_7585 = relay.var("var_7585", dtype = "float32", shape = (150, 3))#candidate|7585|(150, 3)|var|float32
var_7586 = relay.var("var_7586", dtype = "float32", shape = (150, 3))#candidate|7586|(150, 3)|var|float32
call_7584 = func_7583_call(var_7585,var_7586,)
output = call_7584
func_7587 = relay.Function([var_7585,var_7586,], output)
mutated_mod['func_7587'] = func_7587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7135_call = mod.get_global_var('func_7135')
func_7137_call = mutated_mod.get_global_var('func_7137')
call_7600 = func_7135_call()
call_7601 = func_7135_call()
output = relay.Tuple([call_7600,])
output2 = relay.Tuple([call_7601,])
func_7622 = relay.Function([], output)
mod['func_7622'] = func_7622
mod = relay.transform.InferType()(mod)
mutated_mod['func_7622'] = func_7622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7622_call = mutated_mod.get_global_var('func_7622')
call_7623 = func_7622_call()
output = call_7623
func_7624 = relay.Function([], output)
mutated_mod['func_7624'] = func_7624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3980_call = mod.get_global_var('func_3980')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_7673 = func_3980_call()
call_7674 = func_3980_call()
output = call_7673
output2 = call_7674
func_7682 = relay.Function([], output)
mod['func_7682'] = func_7682
mod = relay.transform.InferType()(mod)
output = func_7682()
func_7683 = relay.Function([], output)
mutated_mod['func_7683'] = func_7683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7325_call = mod.get_global_var('func_7325')
func_7327_call = mutated_mod.get_global_var('func_7327')
call_7698 = func_7325_call()
call_7699 = func_7325_call()
const_7707 = relay.const([[[-0.640903,-0.520229,-1.730034],[-8.012955,-3.250244,5.904791],[-4.279245,8.569120,2.994937],[-8.841703,4.740825,-3.822974],[0.974421,-6.291486,-0.774665],[-4.187401,0.208102,-2.958103],[1.808266,-0.255080,3.875680],[-5.629969,-2.606246,0.135687]],[[3.738589,-9.335953,9.221341],[4.020595,4.844667,-6.705156],[0.481581,6.404907,-7.481801],[-9.675517,-2.744789,9.909898],[-6.832233,4.120364,8.614946],[9.671164,-3.515452,2.019532],[-7.482139,1.132255,4.915884],[5.804214,-7.242748,1.035105]],[[-6.652909,9.658273,-8.751056],[-6.040658,-4.162123,-5.611785],[6.687082,5.415617,8.267914],[9.124248,4.812638,9.809361],[7.663713,7.609860,9.890012],[-1.681807,-0.104797,6.320849],[-6.463054,-7.958899,8.111227],[-9.357712,-1.883748,4.652540]],[[5.191849,3.597527,1.717754],[3.895741,6.090708,-2.209284],[6.374033,4.115344,-6.425083],[9.417590,-0.670805,-7.974562],[-9.186557,-6.693993,-2.391792],[-0.773621,0.396893,-5.074622],[-1.831540,0.738750,-5.395783],[1.789381,-0.878267,3.437968]],[[6.844145,0.901018,-7.487043],[9.415254,-2.963842,4.133501],[7.078322,-9.623203,0.340249],[3.147808,-2.218352,-4.687827],[6.671004,4.339806,-9.214104],[-2.724853,8.825797,8.021824],[2.303548,-2.548887,2.322350],[-1.869393,3.473390,6.686450]],[[8.889294,-2.108950,7.275514],[-1.146635,-8.815721,-5.870189],[1.416146,-0.671190,-2.613356],[-7.269972,6.257789,1.884836],[6.443676,8.089333,2.689033],[1.199254,-7.223190,-6.951014],[-2.618037,-3.819051,-0.138692],[8.801300,4.576606,-9.588656]],[[-0.592759,-9.950910,9.131595],[-4.907046,8.844229,3.685067],[-3.669541,-1.509348,1.268882],[-9.044837,0.802651,-3.645928],[4.341634,4.987129,-2.215666],[-0.562823,5.148929,-6.481054],[-8.839487,0.475931,-1.374862],[-5.487001,4.963136,2.923172]],[[-4.229971,4.157025,-2.549433],[9.166666,6.683972,6.624176],[5.476543,-0.927750,-4.853224],[1.564380,1.983950,-4.060823],[-0.406131,-7.792925,3.105731],[-0.084230,4.281642,-3.499062],[9.056645,4.073337,-6.273946],[-7.456691,-8.542316,-2.354509]],[[6.926017,-2.496934,-5.880645],[5.534350,9.966198,8.992608],[6.446201,-2.947066,9.513149],[7.350427,3.727008,7.447914],[8.696097,7.018250,0.905254],[-4.221805,9.546663,2.134888],[1.248555,-9.082613,8.241006],[-0.249284,6.104268,1.851258]]], dtype = "float64")#candidate|7707|(9, 8, 3)|const|float64
bop_7708 = relay.minimum(call_7698.astype('uint32'), relay.reshape(const_7707.astype('uint32'), relay.shape_of(call_7698))) # shape=(9, 8, 3)
bop_7711 = relay.minimum(call_7699.astype('uint32'), relay.reshape(const_7707.astype('uint32'), relay.shape_of(call_7699))) # shape=(9, 8, 3)
uop_7713 = relay.log(bop_7708.astype('float32')) # shape=(9, 8, 3)
uop_7715 = relay.log(bop_7711.astype('float32')) # shape=(9, 8, 3)
output = uop_7713
output2 = uop_7715
func_7723 = relay.Function([], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mutated_mod.get_global_var('func_7723')
call_7724 = func_7723_call()
output = call_7724
func_7725 = relay.Function([], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7792 = relay.var("var_7792", dtype = "float32", shape = (8, 12, 3))#candidate|7792|(8, 12, 3)|var|float32
uop_7793 = relay.tan(var_7792.astype('float32')) # shape=(8, 12, 3)
uop_7804 = relay.asin(uop_7793.astype('float32')) # shape=(8, 12, 3)
func_6949_call = mod.get_global_var('func_6949')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_7814 = func_6949_call()
call_7815 = func_6949_call()
func_4036_call = mod.get_global_var('func_4036')
func_4037_call = mutated_mod.get_global_var('func_4037')
call_7830 = func_4036_call()
call_7831 = func_4036_call()
uop_7843 = relay.rsqrt(uop_7793.astype('float64')) # shape=(8, 12, 3)
var_7848 = relay.var("var_7848", dtype = "float32", shape = (8, 12, 3))#candidate|7848|(8, 12, 3)|var|float32
bop_7849 = relay.floor_divide(uop_7804.astype('float64'), relay.reshape(var_7848.astype('float64'), relay.shape_of(uop_7804))) # shape=(8, 12, 3)
bop_7853 = relay.floor_mod(uop_7793.astype('float32'), relay.reshape(uop_7843.astype('float32'), relay.shape_of(uop_7793))) # shape=(8, 12, 3)
bop_7863 = relay.logical_xor(uop_7793.astype('uint32'), relay.reshape(uop_7843.astype('uint32'), relay.shape_of(uop_7793))) # shape=(8, 12, 3)
uop_7866 = relay.acos(uop_7793.astype('float64')) # shape=(8, 12, 3)
func_4655_call = mod.get_global_var('func_4655')
func_4656_call = mutated_mod.get_global_var('func_4656')
call_7877 = func_4655_call()
call_7878 = func_4655_call()
output = relay.Tuple([call_7814,call_7830,bop_7849,bop_7853,bop_7863,uop_7866,call_7877,])
output2 = relay.Tuple([call_7815,call_7831,bop_7849,bop_7853,bop_7863,uop_7866,call_7878,])
func_7879 = relay.Function([var_7792,var_7848,], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
var_7880 = relay.var("var_7880", dtype = "float32", shape = (8, 12, 3))#candidate|7880|(8, 12, 3)|var|float32
var_7881 = relay.var("var_7881", dtype = "float32", shape = (8, 12, 3))#candidate|7881|(8, 12, 3)|var|float32
output = func_7879(var_7880,var_7881,)
func_7882 = relay.Function([var_7880,var_7881,], output)
mutated_mod['func_7882'] = func_7882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6540_call = mod.get_global_var('func_6540')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_7941 = func_6540_call()
call_7942 = func_6540_call()
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_7959 = relay.TupleGetItem(func_2677_call(), 0)
call_7960 = relay.TupleGetItem(func_2678_call(), 0)
func_4655_call = mod.get_global_var('func_4655')
func_4656_call = mutated_mod.get_global_var('func_4656')
call_7997 = func_4655_call()
call_7998 = func_4655_call()
output = relay.Tuple([call_7941,call_7959,call_7997,])
output2 = relay.Tuple([call_7942,call_7960,call_7998,])
func_8006 = relay.Function([], output)
mod['func_8006'] = func_8006
mod = relay.transform.InferType()(mod)
output = func_8006()
func_8007 = relay.Function([], output)
mutated_mod['func_8007'] = func_8007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6330_call = mod.get_global_var('func_6330')
func_6331_call = mutated_mod.get_global_var('func_6331')
call_8037 = func_6330_call()
call_8038 = func_6330_call()
func_4998_call = mod.get_global_var('func_4998')
func_5000_call = mutated_mod.get_global_var('func_5000')
call_8052 = relay.TupleGetItem(func_4998_call(), 0)
call_8053 = relay.TupleGetItem(func_5000_call(), 0)
output = relay.Tuple([call_8037,call_8052,])
output2 = relay.Tuple([call_8038,call_8053,])
func_8070 = relay.Function([], output)
mod['func_8070'] = func_8070
mod = relay.transform.InferType()(mod)
output = func_8070()
func_8071 = relay.Function([], output)
mutated_mod['func_8071'] = func_8071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6330_call = mod.get_global_var('func_6330')
func_6331_call = mutated_mod.get_global_var('func_6331')
call_8077 = func_6330_call()
call_8078 = func_6330_call()
output = call_8077
output2 = call_8078
func_8084 = relay.Function([], output)
mod['func_8084'] = func_8084
mod = relay.transform.InferType()(mod)
output = func_8084()
func_8085 = relay.Function([], output)
mutated_mod['func_8085'] = func_8085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2182_call = mod.get_global_var('func_2182')
func_2184_call = mutated_mod.get_global_var('func_2184')
call_8112 = func_2182_call()
call_8113 = func_2182_call()
output = call_8112
output2 = call_8113
func_8125 = relay.Function([], output)
mod['func_8125'] = func_8125
mod = relay.transform.InferType()(mod)
output = func_8125()
func_8126 = relay.Function([], output)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3910_call = mod.get_global_var('func_3910')
func_3912_call = mutated_mod.get_global_var('func_3912')
call_8161 = func_3910_call()
call_8162 = func_3910_call()
output = call_8161
output2 = call_8162
func_8178 = relay.Function([], output)
mod['func_8178'] = func_8178
mod = relay.transform.InferType()(mod)
mutated_mod['func_8178'] = func_8178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8178_call = mutated_mod.get_global_var('func_8178')
call_8179 = func_8178_call()
output = call_8179
func_8180 = relay.Function([], output)
mutated_mod['func_8180'] = func_8180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3048_call = mod.get_global_var('func_3048')
func_3049_call = mutated_mod.get_global_var('func_3049')
call_8210 = relay.TupleGetItem(func_3048_call(), 1)
call_8211 = relay.TupleGetItem(func_3049_call(), 1)
output = relay.Tuple([call_8210,])
output2 = relay.Tuple([call_8211,])
func_8220 = relay.Function([], output)
mod['func_8220'] = func_8220
mod = relay.transform.InferType()(mod)
output = func_8220()
func_8221 = relay.Function([], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4166_call = mod.get_global_var('func_4166')
func_4168_call = mutated_mod.get_global_var('func_4168')
call_8236 = relay.TupleGetItem(func_4166_call(), 0)
call_8237 = relay.TupleGetItem(func_4168_call(), 0)
func_5624_call = mod.get_global_var('func_5624')
func_5625_call = mutated_mod.get_global_var('func_5625')
call_8244 = func_5624_call()
call_8245 = func_5624_call()
output = relay.Tuple([call_8236,call_8244,])
output2 = relay.Tuple([call_8237,call_8245,])
func_8260 = relay.Function([], output)
mod['func_8260'] = func_8260
mod = relay.transform.InferType()(mod)
mutated_mod['func_8260'] = func_8260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8260_call = mutated_mod.get_global_var('func_8260')
call_8261 = func_8260_call()
output = call_8261
func_8262 = relay.Function([], output)
mutated_mod['func_8262'] = func_8262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3980_call = mod.get_global_var('func_3980')
func_3982_call = mutated_mod.get_global_var('func_3982')
call_8281 = func_3980_call()
call_8282 = func_3980_call()
func_3600_call = mod.get_global_var('func_3600')
func_3602_call = mutated_mod.get_global_var('func_3602')
call_8290 = relay.TupleGetItem(func_3600_call(), 0)
call_8291 = relay.TupleGetItem(func_3602_call(), 0)
func_1442_call = mod.get_global_var('func_1442')
func_1445_call = mutated_mod.get_global_var('func_1445')
var_8293 = relay.var("var_8293", dtype = "int8", shape = ())#candidate|8293|()|var|int8
call_8292 = relay.TupleGetItem(func_1442_call(relay.reshape(var_8293.astype('int8'), [])), 0)
call_8294 = relay.TupleGetItem(func_1445_call(relay.reshape(var_8293.astype('int8'), [])), 0)
output = relay.Tuple([call_8281,call_8290,call_8292,var_8293,])
output2 = relay.Tuple([call_8282,call_8291,call_8294,var_8293,])
func_8297 = relay.Function([var_8293,], output)
mod['func_8297'] = func_8297
mod = relay.transform.InferType()(mod)
mutated_mod['func_8297'] = func_8297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8298 = relay.var("var_8298", dtype = "int8", shape = ())#candidate|8298|()|var|int8
func_8297_call = mutated_mod.get_global_var('func_8297')
call_8299 = func_8297_call(var_8298)
output = call_8299
func_8300 = relay.Function([var_8298], output)
mutated_mod['func_8300'] = func_8300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8318 = relay.var("var_8318", dtype = "uint8", shape = (13, 10, 5))#candidate|8318|(13, 10, 5)|var|uint8
var_8319 = relay.var("var_8319", dtype = "uint8", shape = (13, 10, 5))#candidate|8319|(13, 10, 5)|var|uint8
bop_8320 = relay.minimum(var_8318.astype('uint8'), relay.reshape(var_8319.astype('uint8'), relay.shape_of(var_8318))) # shape=(13, 10, 5)
output = relay.Tuple([bop_8320,])
output2 = relay.Tuple([bop_8320,])
F = relay.Function([var_8318,var_8319,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8318,var_8319,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

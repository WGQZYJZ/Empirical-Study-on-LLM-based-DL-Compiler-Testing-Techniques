import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_256 = relay.var("var_256", dtype = "float64", shape = (9, 14, 16))#candidate|256|(9, 14, 16)|var|float64
uop_257 = relay.cos(var_256.astype('float64')) # shape=(9, 14, 16)
output = uop_257
output2 = uop_257
func_274 = relay.Function([var_256,], output)
mod['func_274'] = func_274
mod = relay.transform.InferType()(mod)
mutated_mod['func_274'] = func_274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_275 = relay.var("var_275", dtype = "float64", shape = (9, 14, 16))#candidate|275|(9, 14, 16)|var|float64
func_274_call = mutated_mod.get_global_var('func_274')
call_276 = func_274_call(var_275)
output = call_276
func_277 = relay.Function([var_275], output)
mutated_mod['func_277'] = func_277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_781 = relay.var("var_781", dtype = "float32", shape = (15, 11, 13))#candidate|781|(15, 11, 13)|var|float32
var_782 = relay.var("var_782", dtype = "float32", shape = (15, 11, 13))#candidate|782|(15, 11, 13)|var|float32
bop_783 = relay.power(var_781.astype('float32'), relay.reshape(var_782.astype('float32'), relay.shape_of(var_781))) # shape=(15, 11, 13)
output = relay.Tuple([bop_783,])
output2 = relay.Tuple([bop_783,])
func_789 = relay.Function([var_781,var_782,], output)
mod['func_789'] = func_789
mod = relay.transform.InferType()(mod)
var_790 = relay.var("var_790", dtype = "float32", shape = (15, 11, 13))#candidate|790|(15, 11, 13)|var|float32
var_791 = relay.var("var_791", dtype = "float32", shape = (15, 11, 13))#candidate|791|(15, 11, 13)|var|float32
output = func_789(var_790,var_791,)
func_792 = relay.Function([var_790,var_791,], output)
mutated_mod['func_792'] = func_792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1170 = relay.var("var_1170", dtype = "uint64", shape = (5, 14, 15))#candidate|1170|(5, 14, 15)|var|uint64
var_1171 = relay.var("var_1171", dtype = "uint64", shape = (5, 14, 15))#candidate|1171|(5, 14, 15)|var|uint64
bop_1172 = relay.multiply(var_1170.astype('uint64'), relay.reshape(var_1171.astype('uint64'), relay.shape_of(var_1170))) # shape=(5, 14, 15)
output = bop_1172
output2 = bop_1172
func_1176 = relay.Function([var_1170,var_1171,], output)
mod['func_1176'] = func_1176
mod = relay.transform.InferType()(mod)
var_1177 = relay.var("var_1177", dtype = "uint64", shape = (5, 14, 15))#candidate|1177|(5, 14, 15)|var|uint64
var_1178 = relay.var("var_1178", dtype = "uint64", shape = (5, 14, 15))#candidate|1178|(5, 14, 15)|var|uint64
output = func_1176(var_1177,var_1178,)
func_1179 = relay.Function([var_1177,var_1178,], output)
mutated_mod['func_1179'] = func_1179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1183 = relay.var("var_1183", dtype = "uint32", shape = (7, 8, 14))#candidate|1183|(7, 8, 14)|var|uint32
const_1184 = relay.const([[[-8,1,-8,9,-9,7,-2,-3,9,-2,-6,5,-10,3],[7,-6,-4,-7,7,4,7,-5,10,7,5,-6,-4,-1],[1,10,3,6,-4,-2,9,10,7,4,-7,-7,-8,-5],[5,5,-2,-7,-3,-4,4,-10,2,-10,7,-8,-4,-7],[9,5,10,1,6,-6,-9,-8,8,9,-9,-1,-2,9],[6,-8,-7,-9,4,-8,-10,-1,-7,-5,10,5,2,6],[-8,1,10,-9,4,-6,9,-1,10,-9,5,-2,-7,-6],[6,6,6,8,-9,-5,-6,-5,8,-6,-2,-5,-9,3]],[[7,-5,-9,7,-8,-3,1,-4,-2,-3,-5,-9,4,-5],[3,8,-5,-3,4,4,-6,-3,-7,-3,5,9,5,-8],[-2,-1,-9,4,-2,2,8,1,5,10,-8,10,1,5],[7,-6,-4,-1,5,-1,-2,-4,1,4,-9,7,-9,3],[6,7,-1,2,1,-10,-3,-5,6,-7,7,10,-8,-5],[3,9,6,-7,-1,2,-4,-8,5,-2,-5,5,-10,7],[-3,-7,10,8,-3,3,-3,8,1,-6,1,7,-9,-7],[-9,-9,7,-1,-1,3,3,2,2,7,7,-10,-5,8]],[[9,-5,10,-3,1,3,2,-9,-3,4,10,1,-7,10],[7,-6,-3,-7,8,-1,-3,-4,-2,1,-4,1,6,-3],[-2,-3,-9,7,3,-7,3,9,-2,-10,-5,-10,-6,3],[4,3,9,4,6,-1,5,-9,4,2,-2,-10,3,-6],[-2,1,2,-1,9,-8,9,5,7,-2,-3,-7,-9,1],[-7,-1,5,5,5,8,-3,2,-8,-6,2,-6,-10,-9],[9,1,9,7,5,1,7,-5,-10,2,3,-2,4,1],[2,5,1,9,1,4,-7,-7,4,7,-8,-1,7,-7]],[[3,8,-7,7,10,-8,2,-8,-4,-5,6,4,3,6],[-1,2,10,-1,3,-5,-6,6,6,8,7,-10,-7,7],[-10,-1,-8,6,5,5,5,-4,4,8,-2,-9,10,-3],[6,9,5,-6,7,10,-7,-1,-4,5,5,-7,-10,7],[10,8,-2,-9,-1,1,-6,1,6,8,-6,-10,-6,9],[5,-5,6,10,-4,-6,-3,2,-7,-3,-4,-5,-1,5],[-1,-3,-8,3,4,3,-2,3,-7,-5,8,9,6,-6],[8,6,4,8,-10,10,-6,-1,4,-6,-1,-5,-6,4]],[[-6,-2,-2,6,10,1,-6,-5,4,5,-2,-8,9,-3],[-8,10,7,-10,10,6,9,1,8,2,-4,9,5,8],[-1,-2,7,-6,-1,3,2,5,-9,-9,-4,9,5,1],[-7,5,-9,-8,-8,-1,1,-4,7,4,-8,3,3,8],[-3,-9,8,-8,-2,5,1,1,-2,-6,-4,5,3,-2],[3,8,10,4,-3,7,1,7,8,5,-5,-8,-9,-1],[-4,-3,-4,3,-8,2,-1,9,10,3,6,-7,9,9],[10,-4,-6,1,8,6,1,9,6,6,-4,6,-9,2]],[[-8,-7,5,-3,8,1,-8,-2,-6,2,9,-9,-9,4],[8,5,8,-4,-3,2,-1,-7,-3,-9,-10,-10,-1,3],[-4,7,4,7,5,-3,-10,-10,-1,1,6,2,1,6],[-2,1,7,-7,-1,2,-8,6,1,9,3,-7,-8,-6],[10,-10,-2,-8,8,-1,-2,6,-8,-7,8,-5,4,9],[-1,-2,6,1,4,8,-7,-2,10,6,-10,-10,-9,-9],[-7,6,3,6,1,-7,9,6,2,4,7,1,4,-8],[-6,-7,-7,-10,-2,-8,-8,-7,-10,-2,4,8,7,-1]],[[-3,-4,-7,-4,4,3,-2,9,7,6,3,-4,5,8],[-1,3,-7,-3,-7,-9,10,-7,4,-10,-3,10,6,5],[-4,-3,2,-1,4,5,10,2,-5,-4,-6,10,3,-7],[2,10,5,-2,-1,7,-8,7,-6,10,10,10,10,-7],[-8,2,8,-9,-7,-1,-6,2,-9,-2,9,-6,-7,7],[6,10,2,-7,6,-5,-7,-1,-3,6,3,-6,-1,-3],[1,-6,6,1,8,8,4,-8,10,-7,-2,6,3,8],[-6,-2,1,-4,-4,4,-4,9,-8,10,-4,-10,2,-2]]], dtype = "uint32")#candidate|1184|(7, 8, 14)|const|uint32
bop_1185 = relay.greater(var_1183.astype('bool'), relay.reshape(const_1184.astype('bool'), relay.shape_of(var_1183))) # shape=(7, 8, 14)
output = bop_1185
output2 = bop_1185
func_1198 = relay.Function([var_1183,], output)
mod['func_1198'] = func_1198
mod = relay.transform.InferType()(mod)
var_1199 = relay.var("var_1199", dtype = "uint32", shape = (7, 8, 14))#candidate|1199|(7, 8, 14)|var|uint32
output = func_1198(var_1199)
func_1200 = relay.Function([var_1199], output)
mutated_mod['func_1200'] = func_1200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1252 = relay.var("var_1252", dtype = "uint64", shape = (1, 8, 9))#candidate|1252|(1, 8, 9)|var|uint64
var_1253 = relay.var("var_1253", dtype = "uint64", shape = (11, 8, 9))#candidate|1253|(11, 8, 9)|var|uint64
bop_1254 = relay.bitwise_and(var_1252.astype('uint64'), var_1253.astype('uint64')) # shape=(11, 8, 9)
output = relay.Tuple([bop_1254,])
output2 = relay.Tuple([bop_1254,])
func_1257 = relay.Function([var_1252,var_1253,], output)
mod['func_1257'] = func_1257
mod = relay.transform.InferType()(mod)
mutated_mod['func_1257'] = func_1257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1257_call = mutated_mod.get_global_var('func_1257')
var_1259 = relay.var("var_1259", dtype = "uint64", shape = (1, 8, 9))#candidate|1259|(1, 8, 9)|var|uint64
var_1260 = relay.var("var_1260", dtype = "uint64", shape = (11, 8, 9))#candidate|1260|(11, 8, 9)|var|uint64
call_1258 = func_1257_call(var_1259,var_1260,)
output = call_1258
func_1261 = relay.Function([var_1259,var_1260,], output)
mutated_mod['func_1261'] = func_1261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1271 = relay.var("var_1271", dtype = "int8", shape = (12, 9, 15))#candidate|1271|(12, 9, 15)|var|int8
var_1272 = relay.var("var_1272", dtype = "int8", shape = (12, 9, 15))#candidate|1272|(12, 9, 15)|var|int8
bop_1273 = relay.minimum(var_1271.astype('int8'), relay.reshape(var_1272.astype('int8'), relay.shape_of(var_1271))) # shape=(12, 9, 15)
output = bop_1273
output2 = bop_1273
func_1279 = relay.Function([var_1271,var_1272,], output)
mod['func_1279'] = func_1279
mod = relay.transform.InferType()(mod)
var_1280 = relay.var("var_1280", dtype = "int8", shape = (12, 9, 15))#candidate|1280|(12, 9, 15)|var|int8
var_1281 = relay.var("var_1281", dtype = "int8", shape = (12, 9, 15))#candidate|1281|(12, 9, 15)|var|int8
output = func_1279(var_1280,var_1281,)
func_1282 = relay.Function([var_1280,var_1281,], output)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1294 = relay.const([[[7.200007,1.975641]],[[9.364701,5.340890]],[[-9.793136,-0.934606]],[[-5.606391,5.957719]],[[-4.867726,-3.069957]],[[7.453920,0.814684]]], dtype = "float64")#candidate|1294|(6, 1, 2)|const|float64
uop_1295 = relay.acos(const_1294.astype('float64')) # shape=(6, 1, 2)
func_1176_call = mod.get_global_var('func_1176')
func_1179_call = mutated_mod.get_global_var('func_1179')
const_1299 = relay.const([[4,-3,8],[10,-5,4],[-4,10,2],[4,7,-5],[9,7,-3],[-6,-3,-9],[4,-10,8],[2,-2,4],[2,-10,-8],[-5,-10,-10],[5,2,-6],[7,-2,-1],[-1,-10,5],[-1,-2,7],[-3,-10,7],[7,-8,8],[-10,6,-3],[2,-1,-9],[8,5,-10],[-1,-7,5],[1,-3,-1],[-4,9,-2],[-10,8,-9],[-8,-8,7],[7,10,-1],[7,-9,2],[3,-2,10],[5,-10,-1],[-2,6,-4],[-8,2,-7],[5,6,6],[5,-8,2],[-2,-5,-9],[-1,-7,-1],[-1,6,-6],[-8,-8,-8],[-4,2,1],[9,-10,-8],[-3,2,-8],[-1,-1,-4],[-1,-2,9],[-1,-3,7],[8,7,-2],[-9,-4,5],[5,10,-4],[-6,9,1],[-8,-2,-7],[2,5,-5],[4,10,-6],[-9,2,10],[-6,-8,-4],[10,1,-10],[-1,6,-2],[2,7,-4],[-8,6,2],[3,-2,-10],[8,-6,-4],[-1,-9,-10],[10,-6,4],[1,-3,-10],[-3,-5,-2],[1,9,-2],[2,-7,-2],[3,-8,10],[1,4,10],[-2,-6,10],[-4,-9,8],[3,7,-2],[-6,3,-4],[-6,8,-10],[1,-3,-9],[-5,4,3],[7,2,7],[-5,9,-6],[2,-9,-9],[9,10,-7],[5,-9,7],[-2,9,8],[-10,-10,-2],[-3,8,7],[10,7,9],[7,7,-4],[-2,-1,-2],[9,-4,2],[-5,10,-6],[1,4,4],[-4,-7,10],[7,8,3],[9,-4,10],[8,-3,-9],[7,5,-7],[-5,1,-4],[-3,-3,9],[3,-7,-10],[6,-2,-6],[8,-8,7],[3,6,3],[-4,-1,9],[2,-9,-10],[-4,6,-5],[-7,-8,-7],[2,-6,-3],[10,-5,-6],[-2,-6,-7],[-9,3,7],[8,5,10],[-10,2,-1],[-2,4,-4],[10,1,7],[4,-9,1],[-7,1,-4],[3,-3,9],[2,7,-1],[-8,-6,-8],[-7,9,9],[5,9,-9],[-6,1,7],[-5,3,5],[-2,-6,-4],[-1,7,8],[-10,-4,-8],[5,5,-5],[-6,-1,2],[-5,-1,-5],[7,5,-6],[2,7,-8],[-10,10,9],[-10,-6,3],[7,4,-1],[10,-7,-2],[9,10,1],[-2,10,-6],[9,-3,-7],[5,-6,-3],[-10,-5,-9],[9,-2,-3],[-8,3,8],[1,7,2],[-2,-9,8],[7,4,-4],[-8,2,-5],[-2,1,4],[-9,5,-9],[-2,-6,1],[-3,-1,-10],[-2,1,10],[-9,10,10],[-9,7,6],[3,-8,1],[10,-8,2],[7,6,-10],[-3,-1,-8],[6,-1,-3],[10,-7,2],[8,1,-4],[-5,1,-10],[-10,-9,-7],[1,8,10],[-10,-7,1],[-4,-3,6],[-2,-10,-2],[3,5,-2],[-10,-8,4],[-10,-8,-1],[6,9,-2],[9,-6,4],[-9,-2,10],[-7,-7,-1],[-2,-7,-9],[1,-4,7],[5,-10,4],[3,-3,-6],[-8,-5,9],[-6,-8,5],[-3,-5,7],[5,-7,-7],[10,-2,4],[8,-2,-7],[-1,-6,-7],[-6,-7,7],[2,-8,-8],[-8,2,3],[-10,7,6],[-5,-10,5],[1,-8,-2],[-10,9,-3],[-2,5,-3],[-1,-1,-4],[-4,-5,-1],[-2,4,1],[-8,-2,9],[-4,-8,-7],[7,-1,6],[-7,-8,7],[-3,-2,-10],[4,-5,5],[-4,7,7],[-1,1,5],[1,10,-4],[-9,-5,-5],[5,4,-8],[4,-9,-5],[4,-3,10],[-2,1,2],[-6,-2,3],[9,7,-10],[4,10,-6],[2,-1,-4],[-2,-3,8],[-8,-6,7],[-8,-1,-2],[3,-4,1],[-7,9,7],[-10,10,4],[1,-2,2],[8,8,6],[-10,-5,-1],[-6,7,-6],[-1,-3,-10],[-10,-9,-9],[4,1,-9],[-9,4,-5],[8,3,9],[2,-4,2],[4,-6,-6],[3,2,-1],[9,-10,-4],[9,-8,-9],[-10,8,8],[1,-2,2],[-3,8,-9],[8,9,-4],[-5,-4,3],[-10,6,10],[-8,5,-7],[-9,-4,-8],[8,-2,4],[-9,-8,1],[-8,-8,-1],[-10,7,-10],[-2,7,-8],[8,10,2],[-7,4,5],[1,-8,-10],[5,-7,-3],[1,10,9],[4,3,-9],[-2,7,4],[-1,5,-3],[-8,5,5],[4,3,-7],[-1,2,-6],[10,-9,-4],[-9,1,-4],[-9,5,8],[1,-9,6],[-9,-6,3],[-1,-2,10],[-7,-10,-2],[-3,5,-6],[9,4,4],[-1,-9,3],[8,4,6],[5,2,-2],[-8,-7,2],[-5,-3,-10],[-1,1,7],[-1,-7,7],[9,-1,-7],[-7,-7,-9],[10,-1,-5],[3,1,5],[7,4,-8],[-9,3,8],[-2,-5,9],[-7,8,-5],[8,-10,-1],[8,-10,2],[-5,5,-3],[-8,-9,-4],[-6,9,-1],[-8,2,10],[2,1,-2],[10,-4,-5],[-1,1,-5],[8,6,-7],[4,5,-3],[9,-5,-7],[-3,-4,3],[5,-2,4],[1,-3,9],[-5,-7,-9],[7,8,-10],[9,-4,-2],[2,-3,-4],[-6,-6,4],[-10,8,-1],[-10,9,-10],[-4,2,-4],[5,10,2],[4,8,8],[-7,3,6],[4,-2,-5],[-2,5,-7],[6,5,-1],[-1,7,-4],[3,1,-9],[-2,4,-6],[8,10,-9],[2,-10,-3],[-4,-7,-6],[-3,-4,-7],[-3,4,2],[-8,7,6],[4,3,-5],[-6,-1,-1],[4,7,10],[1,-2,-3],[-6,-9,-9],[-10,2,-7],[-10,-7,6],[9,2,9],[2,7,4],[10,-3,4],[-1,4,-8],[2,4,8],[-9,-9,4],[5,8,10],[4,-4,7],[8,4,5],[3,-9,-9],[6,-5,9],[2,3,-9],[-4,1,9],[-7,7,-9],[3,-10,-8],[9,-6,-8],[2,-2,2],[8,-4,3],[8,-8,-1],[-9,-8,9],[9,9,-2],[4,-9,-1],[-8,4,-9],[-3,8,5],[-10,-6,-5],[-4,2,-10],[10,-10,-10],[9,-3,8],[-1,10,4]], dtype = "uint64")#candidate|1299|(350, 3)|const|uint64
call_1298 = func_1176_call(relay.reshape(const_1299.astype('uint64'), [5, 14, 15]), relay.reshape(const_1299.astype('uint64'), [5, 14, 15]), )
call_1300 = func_1176_call(relay.reshape(const_1299.astype('uint64'), [5, 14, 15]), relay.reshape(const_1299.astype('uint64'), [5, 14, 15]), )
func_1257_call = mod.get_global_var('func_1257')
func_1261_call = mutated_mod.get_global_var('func_1261')
const_1304 = relay.const([[10,3,8,6],[-5,3,-2,10],[10,5,-4,7],[-3,7,10,8],[-1,-4,5,8],[-4,1,-7,-3],[8,5,4,-6],[-2,6,-2,-2],[5,1,7,-1],[8,6,-4,-6],[-10,4,4,1],[-1,-8,3,-6],[-9,10,4,-6],[3,2,4,2],[9,-5,4,-9],[-5,9,-10,-8],[-10,2,10,-8],[1,-2,8,-6]], dtype = "uint64")#candidate|1304|(18, 4)|const|uint64
var_1305 = relay.var("var_1305", dtype = "uint64", shape = (2, 396))#candidate|1305|(2, 396)|var|uint64
call_1303 = relay.TupleGetItem(func_1257_call(relay.reshape(const_1304.astype('uint64'), [1, 8, 9]), relay.reshape(var_1305.astype('uint64'), [11, 8, 9]), ), 0)
call_1306 = relay.TupleGetItem(func_1261_call(relay.reshape(const_1304.astype('uint64'), [1, 8, 9]), relay.reshape(var_1305.astype('uint64'), [11, 8, 9]), ), 0)
var_1313 = relay.var("var_1313", dtype = "float64", shape = (6, 15, 2))#candidate|1313|(6, 15, 2)|var|float64
bop_1314 = relay.logical_xor(uop_1295.astype('uint32'), var_1313.astype('uint32')) # shape=(6, 15, 2)
func_1279_call = mod.get_global_var('func_1279')
func_1282_call = mutated_mod.get_global_var('func_1282')
const_1333 = relay.const([-7,9,2,-6,-9,10,-9,-10,3,1,-1,5,-1,-1,1,6,-1,-8,3,5,-1,1,-1,-7,8,-6,-4,-4,4,-7,-5,5,-8,-8,-8,-4,-9,-9,3,-7,-7,1,5,-6,3,4,-4,4,1,-4,7,10,-2,-6,-6,-9,-7,-2,-8,-9,-2,6,1,10,4,-3,-2,6,-1,-3,7,-1,4,7,4,2,-1,1,-10,4,-5,-2,-1,2,-3,10,-7,-4,-4,3,-9,3,-5,1,-7,7,3,10,-2,-5,-9,2,-6,7,9,10,-6,7,-9,-7,3,-8,-7,-2,3,1,4,8,-2,-4,6,9,8,3,4,4,4,-6,2,-10,-5,5,-6,1,-9,-1,8,-10,5,4,3,-7,-1,10,10,8,-10,-5,7,4,-3,-4,-4,7,-8,-1,8,10,2,3,-9,-7,6,-5,10,-1,-4,-3,-7,-2,-9,6,2,9,5,5,-4,4,6,3,9,-8,6,3,-2,-10,7,-10,-1,2,4,-1,2,8,-5,6,2,-6,7,-6,4,2,2,-10,-3,-1,2,5,9,3,-4,-9,5,9,-7,-1,-10,10,-6,-7,5,-6,-1,-2,-6,-4,6,-9,1,4,-2,6,-9,4,-9,4,10,-10,3,-1,8,1,9,6,-7,-7,-9,-1,-1,4,7,-5,-10,-7,-6,-3,-4,-8,-6,4,-7,2,-5,-2,9,8,6,2,6,-8,-8,7,-7,6,9,7,-10,-10,2,-1,10,7,-3,-9,-10,1,1,-9,-3,4,-4,6,9,-9,9,-4,-9,4,-9,1,1,-7,-2,-5,-1,6,9,7,1,-1,-6,-9,5,7,6,5,-1,-4,-9,9,5,3,-1,-3,8,1,10,-9,3,1,5,9,-6,-9,9,5,5,-9,10,-7,8,10,-7,-5,6,-10,-9,7,9,2,-5,-3,5,-7,5,-1,3,3,4,-2,1,1,10,-7,5,-8,-6,-3,4,6,-5,2,-10,-9,2,-5,3,7,4,-6,-3,9,7,10,1,1,-3,-5,-10,7,6,-9,10,6,-9,-2,7,10,5,-5,6,-2,3,-1,-2,6,-2,10,-10,5,9,10,3,9,-1,-2,-4,-7,-4,7,9,-5,-10,-3,1,10,9,5,-1,8,1,-1,6,10,-6,-7,2,-4,-9,3,-8,10,-2,-7,-1,6,-7,-7,-3,-5,3,4,6,-2,-6,2,7,-1,-9,3,-3,2,-6,-5,3,9,-3,-5,-2,1,1,2,-7,10,-1,-8,4,4,-6,-10,-8,8,2,10,10,2,7,1,8,2,4,4,7,-7,-9,-3,-6,10,-4,-3,-2,-6,-10,-2,6,-10,3,8,3,4,-2,1,-8,7,-9,-6,5,7,9,-8,3,-7,1,8,-1,-8,-1,-1,7,-3,-6,7,-3,1,-6,-8,4,-7,1,10,10,-4,-6,10,-3,-10,-3,4,-3,-7,1,-10,-1,1,2,5,-1,3,-6,-1,-7,9,9,-8,-6,3,-2,-2,2,4,-5,6,-8,3,3,2,-4,1,-4,-10,-6,10,6,1,-5,1,-4,8,-9,5,-3,-1,-9,4,5,-6,5,-9,7,-10,-4,4,10,-9,3,1,2,4,-8,7,-2,-4,-8,-1,-4,-1,4,8,9,4,-3,7,9,-7,4,10,-6,5,7,10,7,-2,9,4,7,-10,-3,6,-2,8,-6,10,-3,5,-10,-3,-10,-7,-3,7,-9,10,5,3,-8,3,-1,7,9,6,-9,-6,4,-8,-4,-8,-1,4,-4,-5,-2,-8,1,-7,-7,10,3,-7,-1,7,9,8,-6,7,-3,-4,-3,8,-8,-6,9,3,4,-1,4,-10,-3,-2,-5,9,-5,3,-7,-2,5,10,-6,5,4,6,-6,-10,7,10,-2,7,3,-5,-10,-5,-5,-10,9,-2,3,-10,4,-10,1,2,8,-1,1,3,-5,8,-3,-2,6,-7,1,8,7,-6,-7,-4,-10,-9,-2,-4,-9,6,1,-8,1,-5,-5,8,2,-2,4,7,-2,-7,-7,3,5,9,7,-4,5,1,-4,-3,2,-7,-3,2,-1,4,-2,-5,6,5,-3,2,-10,-7,-1,-3,6,-1,6,-6,6,6,-7,-7,7,8,4,-8,-4,-1,3,-10,-5,10,8,-8,-8,-4,-5,9,4,-2,7,5,2,8,7,6,1,-3,4,3,8,-6,-8,-5,-2,3,8,3,-1,7,9,1,-1,-6,6,6,7,-6,-9,-9,1,-10,-7,9,4,-7,-1,-10,3,-7,7,4,7,1,5,7,-10,-3,2,9,9,-8,6,-5,5,-1,-7,-8,-7,2,-9,-5,8,7,1,-5,-4,3,10,-1,1,-9,7,7,-6,-3,10,5,-8,-7,10,3,6,4,-5,-2,6,-9,1,-6,-4,4,-9,-1,1,7,-1,-5,-6,4,-5,10,-2,-4,-2,1,-9,2,-6,-6,3,10,6,3,-6,5,-5,-1,-3,-9,-5,-3,-9,-2,-7,4,4,4,-9,3,-3,-7,3,-3,-4,3,5,4,10,9,-6,7,-4,1,-7,-1,3,7,5,-4,4,-6,3,3,8,3,4,4,-1,3,1,6,-9,2,5,-3,-3,-8,-1,-2,-2,10,4,-3,-1,5,-8,6,6,-1,5,-9,-5,7,-7,-2,5,-6,10,-6,-6,2,1,-3,-7,-7,-10,-1,3,-8,8,-1,4,3,-7,-4,1,-8,8,-1,-6,7,7,1,-7,-2,1,-9,-1,8,3,-2,1,-9,1,-4,-10,-5,9,7,-4,-3,2,-1,-4,2,4,4,-6,-2,2,-4,-7,9,2,3,5,-3,8,2,5,-1,-10,4,-7,10,2,-4,-2,4,9,4,-3,-10,2,-5,8,8,3,3,-8,-1,-9,-7,8,-7,-7,10,7,-1,2,8,3,9,7,6,-6,-4,-2,10,-2,-8,7,9,7,-6,7,8,-1,-6,8,-6,8,3,-10,-1,-9,3,6,1,3,2,-3,-2,9,5,-1,-4,-10,3,10,-4,5,-5,9,-2,-3,-6,7,1,7,5,-6,9,8,5,5,4,-7,1,-5,10,-9,6,-6,4,-4,3,8,3,-3,-3,-8,-10,-8,-2,-4,-2,-1,-1,-5,10,3,-9,-5,-8,-3,-9,-10,7,-10,2,1,8,-2,9,-3,-7,4,7,10,-2,-8,3,9,-7,-1,2,-5,-6,-7,-4,-7,7,9,-3,-9,2,-5,7,-7,1,-7,9,-3,-7,-9,-1,4,-8,-1,-1,-7,10,-8,-5,3,-10,-1,10,-4,-4,-10,1,-2,6,-1,4,10,1,-10,2,2,-2,10,7,-1,-9,6,4,9,1,-8,8,-8,-5,-5,2,8,-2,-7,4,-2,10,1,7,-5,9,-5,1,-8,-4,5,2,-9,4,5,-8,1,4,2,-1,2,-2,9,-2,2,-9,1,10,8,-8,4,-8,3,-6,-5,-6,6,-4,9,-3,-2,-8,6,3,-6,4,8,-2,6,-10,4,10,1,-7,1,-3,-2,6,-3,-1,3,-8,9,-3,-7,-8,8,2,-1,2,-9,-5,-10,-9,1,1,-7,-4,-8,-3,-2,7,-10,-1,-10,-5,2,7,2,-4,-8,-8,3,-1,-10,7,7,4,-4,10,-2,10,4,5,-7,-2,5,8,-3,10,-3,-7,-2,8,10,10,1,-3,9,-5,-8,-9,-9,10,8,-5,-8,1,-7,-5,-7,6,-5,4,-8,2,8,-6,10,8,7,-9,8,-2,9,10,4,-3,-7,-5,-10,1,-10,-2,5,10,-3,-5,-9,8,6,-5,5,1,6,7,5,-1,-4,-5,5,1,4,-3,-4,-4,-8,-3,4,-3,10,-6,7,-9,-4,-10,-2,9,8,1,-2,2,-4,10,-9,-10,-2,-3,6,10,8,1,2,8,-3,-1,5,-2,10,-7,-5,-9,3,-8,6,3,9,-4,5,2,-2,-2,10,-4,-7,3,-5,-1,-6,1,6,-8,7,7,-5,-9,-5,1,-4,8,-5,-3,3,1,2,1,-6,-2,-2,-5,9,-1,-7,-10,7,-4,6,5,3,9,9,-1,1,-10,-4,8,-10,-8,1,-10,3,-3,1,-10,-3,10,-9,9,-8,-2,5,-4,9,4,9,2,-7,-2,-2,-5,-1,7,9,1,4,-8,3,5,-5,6,2,7,-3,-10,-1,-10,-3,6,4,9,-1,8,-10,-6,2,10,-9,5,-6,-7,-3,3,7,-6,-5,8,2,9,-8,9,-8,8,-8,9,10,-4,4,-9,-5,1,-1,-7,6,-7,3,-8,6,8,9,-9,5,1], dtype = "int8")#candidate|1333|(1620,)|const|int8
call_1332 = func_1279_call(relay.reshape(const_1333.astype('int8'), [12, 9, 15]), relay.reshape(const_1333.astype('int8'), [12, 9, 15]), )
call_1334 = func_1279_call(relay.reshape(const_1333.astype('int8'), [12, 9, 15]), relay.reshape(const_1333.astype('int8'), [12, 9, 15]), )
output = relay.Tuple([call_1298,const_1299,call_1303,const_1304,var_1305,bop_1314,call_1332,const_1333,])
output2 = relay.Tuple([call_1300,const_1299,call_1306,const_1304,var_1305,bop_1314,call_1334,const_1333,])
func_1336 = relay.Function([var_1305,var_1313,], output)
mod['func_1336'] = func_1336
mod = relay.transform.InferType()(mod)
var_1337 = relay.var("var_1337", dtype = "uint64", shape = (2, 396))#candidate|1337|(2, 396)|var|uint64
var_1338 = relay.var("var_1338", dtype = "float64", shape = (6, 15, 2))#candidate|1338|(6, 15, 2)|var|float64
output = func_1336(var_1337,var_1338,)
func_1339 = relay.Function([var_1337,var_1338,], output)
mutated_mod['func_1339'] = func_1339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1716 = relay.var("var_1716", dtype = "uint16", shape = (6, 4, 15))#candidate|1716|(6, 4, 15)|var|uint16
var_1717 = relay.var("var_1717", dtype = "uint16", shape = (6, 4, 15))#candidate|1717|(6, 4, 15)|var|uint16
bop_1718 = relay.left_shift(var_1716.astype('uint16'), relay.reshape(var_1717.astype('uint16'), relay.shape_of(var_1716))) # shape=(6, 4, 15)
uop_1721 = relay.log2(var_1716.astype('float32')) # shape=(6, 4, 15)
func_1257_call = mod.get_global_var('func_1257')
func_1261_call = mutated_mod.get_global_var('func_1261')
const_1727 = relay.const([-1,-2,-4,8,9,-7,-3,4,8,-4,-6,-2,9,8,-3,3,4,7,-8,9,-6,-4,-3,-4,-6,3,-9,3,-6,9,-4,5,8,5,-8,-5,3,5,10,6,8,-10,-4,-6,-3,-4,-9,-4,1,-5,4,-5,-3,-2,8,1,-7,2,3,4,4,3,-6,-10,-6,8,-7,8,3,-5,8,-8], dtype = "uint64")#candidate|1727|(72,)|const|uint64
var_1728 = relay.var("var_1728", dtype = "uint64", shape = (792,))#candidate|1728|(792,)|var|uint64
call_1726 = relay.TupleGetItem(func_1257_call(relay.reshape(const_1727.astype('uint64'), [1, 8, 9]), relay.reshape(var_1728.astype('uint64'), [11, 8, 9]), ), 0)
call_1729 = relay.TupleGetItem(func_1261_call(relay.reshape(const_1727.astype('uint64'), [1, 8, 9]), relay.reshape(var_1728.astype('uint64'), [11, 8, 9]), ), 0)
bop_1742 = relay.right_shift(uop_1721.astype('uint8'), relay.reshape(var_1716.astype('uint8'), relay.shape_of(uop_1721))) # shape=(6, 4, 15)
output = relay.Tuple([bop_1718,call_1726,const_1727,var_1728,bop_1742,])
output2 = relay.Tuple([bop_1718,call_1729,const_1727,var_1728,bop_1742,])
func_1746 = relay.Function([var_1716,var_1717,var_1728,], output)
mod['func_1746'] = func_1746
mod = relay.transform.InferType()(mod)
mutated_mod['func_1746'] = func_1746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1746_call = mutated_mod.get_global_var('func_1746')
var_1748 = relay.var("var_1748", dtype = "uint16", shape = (6, 4, 15))#candidate|1748|(6, 4, 15)|var|uint16
var_1749 = relay.var("var_1749", dtype = "uint16", shape = (6, 4, 15))#candidate|1749|(6, 4, 15)|var|uint16
var_1750 = relay.var("var_1750", dtype = "uint64", shape = (792,))#candidate|1750|(792,)|var|uint64
call_1747 = func_1746_call(var_1748,var_1749,var_1750,)
output = call_1747
func_1751 = relay.Function([var_1748,var_1749,var_1750,], output)
mutated_mod['func_1751'] = func_1751
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1805 = relay.const([[[7,8,-10,-7,-10,1,7,-3,-5,2,-4,7],[-6,6,-6,-5,-2,-9,5,-9,8,-7,3,-9],[-4,10,-9,7,10,1,4,2,-10,8,-4,10],[-9,6,-6,8,-8,-9,-5,-2,-8,2,-10,-9]],[[3,6,4,-9,5,-5,-10,1,3,-5,-6,3],[4,7,-10,-4,6,2,6,-5,9,-1,4,9],[2,6,-2,2,-4,8,9,-1,-2,7,6,-10],[-5,-6,-3,-6,6,4,1,-4,7,1,5,-3]],[[4,-6,3,5,-5,8,-5,-4,8,-9,-6,-4],[-6,-10,-6,6,2,-2,8,-4,-10,2,9,-4],[-5,-6,7,-3,6,4,4,-3,3,-3,5,-3],[-2,-8,-4,7,-9,-10,2,1,-7,-9,-4,9]],[[-10,-8,2,9,8,-4,-2,-2,2,7,-5,4],[-3,3,7,-5,-6,3,-4,-1,-10,7,-4,2],[10,3,-10,-7,10,-10,-4,4,-10,8,-9,-10],[-4,10,-3,7,2,9,5,-2,-6,1,-1,-9]],[[-4,-9,-8,2,4,-9,2,10,-5,5,5,-4],[4,-10,-10,8,-8,7,-5,-7,10,-8,3,8],[7,6,3,-2,5,1,-10,9,5,-1,6,-9],[-3,3,-7,4,6,-5,-9,-3,-6,10,-3,-4]],[[-7,-9,3,1,7,4,7,-7,7,10,-8,2],[9,-1,-3,3,10,-4,1,2,1,3,3,9],[-1,-6,5,-2,2,-9,8,6,3,2,-5,-2],[-10,4,-5,1,-5,-7,-9,-5,4,-5,-5,10]],[[-10,1,-7,-2,10,-8,1,2,-10,-6,-8,7],[6,-2,-2,-8,7,10,4,8,-9,8,-8,6],[9,-7,3,-9,-8,2,5,4,9,5,5,-9],[10,4,10,-7,2,-8,-10,5,-9,-1,7,6]],[[1,-1,-5,-3,-8,6,-7,-8,7,-5,2,8],[-7,6,6,1,-3,4,-3,-6,5,10,3,2],[-4,10,9,5,-6,-9,3,10,2,-8,2,-7],[-4,-9,-5,-10,10,-2,5,-4,-8,-3,-2,-1]],[[-6,1,-2,5,3,4,6,4,-3,4,6,9],[10,-7,5,-9,8,1,6,8,9,-9,6,-3],[-2,7,5,-1,9,9,7,-7,8,7,-3,7],[-6,8,-10,3,8,-7,9,7,-8,-2,-4,4]],[[-6,-8,-3,-2,1,-5,1,-10,-9,1,7,-5],[-4,-3,-7,-2,5,1,-7,9,3,9,-1,2],[-8,-7,2,-1,9,7,-9,9,3,4,-5,9],[8,-3,-9,-10,-7,-1,8,-5,5,3,5,10]],[[3,9,8,7,6,-8,4,-9,6,10,-3,1],[9,4,7,1,7,-10,-7,-4,9,-7,9,-4],[7,8,-10,-8,6,-2,-5,5,-4,10,3,4],[5,5,-7,-10,2,6,9,-1,-7,8,-10,5]],[[-7,5,6,-4,-9,6,9,-4,-4,-2,-6,7],[-10,5,-7,3,-3,6,6,-4,-2,-4,-4,1],[-9,-10,10,8,2,9,4,-3,-8,10,-2,10],[-3,-4,-3,7,-10,6,-4,-9,8,6,-7,10]],[[-8,1,3,4,6,-6,-5,-2,10,4,-4,2],[10,-7,7,-4,8,-4,7,-8,8,-3,-7,-7],[-6,-2,-7,-4,2,-5,9,-3,7,7,-9,-8],[-10,-9,7,-5,8,-3,4,1,-9,7,8,-4]]], dtype = "uint16")#candidate|1805|(13, 4, 12)|const|uint16
const_1806 = relay.const([[[-10,8,5,-6,-6,-2,10,-2,8,-3,-10,6],[-8,-8,9,-7,-10,-6,2,3,-6,-1,-10,3],[-2,4,9,-1,-4,-3,10,3,-8,-6,-1,-8],[-3,1,-3,1,3,7,-5,8,-5,4,3,-5]],[[8,-3,10,6,-2,9,3,3,5,-9,-8,4],[10,-1,7,5,-1,4,10,7,7,9,5,-8],[-2,3,-6,7,6,2,-8,-1,-5,-10,-5,9],[2,1,-2,8,-8,5,-1,-3,-2,2,-1,-9]],[[-10,-3,4,4,-2,3,-6,7,5,9,6,-3],[-4,-10,-2,1,-8,4,6,9,-4,9,5,-3],[10,6,-3,-6,-6,2,-7,-9,-9,6,10,3],[-10,-4,-10,5,9,8,2,9,-2,5,5,-2]],[[-6,10,-6,10,5,10,10,-5,-7,-9,7,-7],[10,-8,-8,1,-1,-2,2,-4,7,-4,9,6],[-4,-5,4,2,7,-10,2,-1,-2,1,-6,-5],[-9,1,-10,-4,-1,-7,-4,-2,-9,-6,-6,4]],[[-9,-4,-2,-9,5,8,7,10,-4,5,-6,-9],[-1,-5,-1,3,-4,6,-5,6,4,-7,-8,1],[4,10,-4,4,-3,10,-6,3,-1,7,-5,-8],[-8,10,-10,8,6,3,-8,-3,3,-4,-8,2]],[[-5,5,-3,8,8,7,-8,3,6,6,-4,-4],[4,-8,4,-2,-1,10,-2,5,-6,-7,1,10],[7,-1,5,-7,-1,1,-7,6,-2,1,-3,-1],[1,7,9,9,-5,4,-6,-1,8,-4,-5,-10]],[[-5,10,-7,10,2,-2,-5,4,3,-10,-10,8],[2,-2,2,-3,-5,8,-7,-2,6,-7,-6,8],[2,-8,8,-2,-8,7,-8,-1,-7,-7,-7,-1],[-4,3,3,9,1,8,3,-2,-6,-5,3,-7]],[[4,5,4,6,6,10,-3,5,-6,7,-4,-2],[-10,-5,2,-5,10,8,10,4,3,7,2,-10],[-4,-10,6,1,9,-2,1,-7,-9,-5,-9,5],[2,8,4,6,4,8,-8,-7,6,9,-7,8]],[[-1,5,3,-2,3,-1,-7,-5,-3,-3,2,1],[1,7,6,6,-10,9,-2,-8,-2,-10,-8,-2],[-7,-5,6,9,5,7,-3,1,5,-7,-3,-2],[6,4,8,-8,-10,8,-8,-5,-4,6,-5,-1]],[[9,7,-2,4,2,3,-3,-9,-3,-1,3,-6],[6,2,-3,10,-10,-1,-8,2,5,4,-8,1],[9,4,7,8,-6,-5,-5,8,-5,-8,7,3],[-5,10,-9,7,-2,-1,-3,-4,-1,-7,-5,-2]],[[5,3,9,-4,2,-10,-4,10,-7,6,-10,-10],[-1,-9,-1,7,10,8,8,8,7,-3,-4,-8],[6,5,-6,8,10,-4,-6,-7,-2,10,8,-10],[-5,-7,-5,-3,10,-6,-3,-4,2,5,10,6]],[[10,2,5,4,-6,-10,5,2,1,2,4,8],[5,-4,7,6,10,-5,1,-5,-10,8,8,3],[-9,7,2,-9,-1,1,-7,-5,-7,9,2,7],[-1,-7,6,-10,4,2,3,2,-6,-1,-10,-1]],[[-9,-4,-6,-2,7,-6,9,2,5,9,7,3],[-4,8,3,8,-10,2,5,-1,-3,-7,-4,4],[-3,9,-6,-3,7,2,-1,-3,-5,6,-6,4],[5,2,2,-1,10,-7,2,-5,-3,10,-9,6]]], dtype = "uint16")#candidate|1806|(13, 4, 12)|const|uint16
bop_1807 = relay.maximum(const_1805.astype('uint16'), relay.reshape(const_1806.astype('uint16'), relay.shape_of(const_1805))) # shape=(13, 4, 12)
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
const_1811 = relay.const([6.299933,-0.029756,8.289092,-7.678636,-5.218895,0.799106,-9.449487,-0.668830,-8.204907,6.079051,-7.480900,-9.491394,-4.129728,-7.818581,6.853101,-3.466888,0.760413,7.867161,-8.940065,8.289562,-7.234953,-2.004142,-0.830283,9.398460,6.507480,4.749120,-5.860600,-5.440815,5.401635,1.607499,-8.550407,4.987248,-6.051785,0.581369,-0.116914,1.990678,7.706809,0.207510,-9.063081,-2.101614,0.456324,4.148906,-9.393299,4.566585,-7.830392,-3.256520,-8.505235,2.939662,-8.943491,1.075103,5.032595,9.116672,4.486395,-0.329144,-8.628546,0.477546,-2.905394,1.790794,-7.320244,-4.676894,5.389784,1.553253,-2.463501,-0.453689,6.922639,4.175817,-3.256472,2.749872,8.733442,7.497639,1.813367,-2.774603,-8.095518,-0.691569,-8.591219,5.952613,4.910195,0.751500,8.195851,-3.659872,-3.030172,3.628283,3.114781,-9.000742,3.771340,-1.913690,-6.942966,-7.461361,-7.147681,9.743788,-3.866539,4.336896,2.416901,2.200959,-5.838237,-2.234983,-0.425758,-1.043944,-9.600041,-1.168106,-0.285944,-0.111653,1.241941,0.827285,8.039670,-7.030174,-0.104481,4.457187,6.869779,-1.970733,4.121901,-1.755172,0.623239,8.748982,9.839792,2.978269,-8.048746,-9.523433,-0.318065,0.862671,-9.372382,2.217663,0.493654,-4.040034,-2.368467,2.021825,8.453801,1.291011,-0.487744,8.976688,-1.833428,7.237893,-6.593788,0.591524,-3.834827,7.003266,-0.330298,0.010243,4.195765,-8.441568,-4.854537,4.204340,4.655964,-4.259721,8.177796,1.725485,-0.369645,-7.884919,-5.744008,-8.850448,2.053413,7.275562,-3.123164,8.233025,4.976616,7.133086,9.042187,1.456121,6.598609,-9.334444,7.004687,9.321580,3.544226,9.245018,7.420409,-1.277044,1.548498,-4.383377,-4.286045,6.065227,-5.769361,8.833590,-4.943369,-5.244715,6.737440,-7.166881,5.178152,-6.816997,-4.464947,-3.466599,1.658809,-3.404783,8.772467,0.587295,-6.816733,4.858262,8.253690,3.849165,7.728325,-5.177179,-0.063223,-1.087803,-0.697591,-2.160424,-5.714293,-1.965007,3.818709,-1.252680,6.571065,-1.289297,-2.907253,-5.725324,9.237385,7.508010,-3.594758,6.828123,7.153313,-4.192117,-9.687086,-5.017527,9.545171,7.775324,0.489616,0.968481,2.231331,-2.078641,4.252028,3.046622,-7.737725,-7.196638,-4.578189,-9.713512,6.806483,2.919437,9.815161,-3.588682,-0.550045,-2.290196,7.957871,1.112482,8.835281,-3.859706,-5.532769,3.309712,4.900258,1.548356,2.170000,0.996868,-4.893076,6.616288,-7.012229,4.743093,6.222337,-6.461285,4.351851,6.057871,3.327032,-5.213940,0.376218,6.314084,4.252024,7.850549,-6.489419,1.538937,6.080566,-9.309482,-2.661546,6.513204,7.442573,-8.251875,3.245218,-6.957400,9.069740,-4.227427,-1.902688,5.311715,4.967035,6.415876,7.772207,-2.362781,4.118488,-3.230530,-6.797253,5.548774,7.859910,0.734688,0.832036,-4.385837,-0.583562,8.611227,-4.625491,-6.026190,4.065524,7.273106,-6.820423,-5.506175,-3.684854,7.740270,-8.964928,1.744094,-7.082689,-9.557559,-2.455958,-1.507162,5.505665,6.496166,8.690023,1.997145,5.925911,8.275880,4.039537,9.409738,0.800599,-9.947335,3.519390,5.093379,-6.341742,1.290071,-3.436494,3.302974,-8.564019,8.556121,-8.951248,-3.641549,0.019939,5.525183,0.601203,2.420013,1.747024,-7.130836,3.311131,-7.376758,4.463997,-1.783771,-9.149638,-4.651171,-4.288505,-0.251460,-5.420554,4.978753,-5.744832,-7.560646,7.164243,-5.140523,-1.807084,-6.637207,5.742838,7.837413,-8.838937,-9.006929,-5.112580,9.349558,9.213570,4.599918,2.440376,8.101481,-8.879856,2.369804,7.893173,-2.334782,0.009027,1.680270,-8.208257,7.206560,-7.597983,3.398070,-1.520942,-1.849635,-3.617477,-2.588349,-5.064590,3.932593,1.664705,-7.243092,9.340746,-3.547890,2.610836,6.503516,0.864900,3.924621,-8.080192,-9.827916,7.355871,-6.380120,-6.802563,5.379083,4.466952,9.476927,-6.870405,3.117767,5.866169,-3.479763,-7.877236,-2.757397,-9.881844,2.194854,-9.631380,-2.630623,-5.532107,2.186685,4.226462,9.662590,9.757134,3.923996,3.468819,9.656122,1.499583,5.530629,9.594128,2.427056,9.996185,3.588314,-6.428392,-4.481632,-0.384803,6.701009,-7.940841,-0.158590,-9.856329,6.581262,0.284868,-6.084125,-9.915211,-7.970217,3.172489,-3.080537,-7.251931,-2.676803,1.273850,-0.281524,-0.805764,3.875322,-6.153780,-8.654415,9.113605,-0.901345,3.669121,6.901317,6.033336,3.367283,1.078295,8.614196,9.262197,-9.386716,-5.499233,8.326466,5.516719,-8.720507,-0.767919,-3.957798,-6.187354,-1.184562,2.162891,-4.373391,8.432416,3.286618,6.153791,4.041951,-0.246232,5.394207,-3.825756,8.736027,9.910207,7.405480,-8.900079,7.970617,7.494201,-5.752860,-0.662998,0.151231,2.567019,-2.231616,5.279760,1.928142,-2.127183,6.409588,4.026114,-9.572898,-1.190411,7.563762,6.608620,6.509153,-9.119375,6.618077,-4.336197,3.295725,7.926830,-7.099844,9.643503,-7.146853,-5.790737,-0.031089,-2.598048,-6.041866,-4.850617,9.549857,7.394938,-4.399900,3.843237,-4.908733,-7.103341,5.464122,1.797761,5.987947,5.767933,-4.844243,0.416834,-6.604440,5.308757,-8.775281,-1.547758,9.842711,-3.236592,3.048095,7.492846,-6.289851,3.316658,7.669288,4.377062,8.441446,-0.994719,5.665979,-8.045757,4.827102,-3.967458,-2.642094,-7.593926,-4.354075,8.553537,-8.986733,0.846817,4.889618,-4.210672,-2.686673,6.383649,-9.619525,7.465062,9.085534,2.973913,-0.565308,-2.635666,-3.726677,-2.284505,4.998530,8.023575,8.098234,-5.528237,0.238286,0.713478,4.426328,-3.213075,8.156040,7.606217,2.502402,7.049487,-5.855109,-2.055962,-1.603267,-0.192568,2.696387,0.855097,-6.856091,8.412202,-3.774662,0.435514,6.822838,-9.339174,-7.201166,3.392903,-3.704467,3.813394,-7.845114,-2.860958,-2.164535,-2.659475,-5.438218,-5.849099,-8.414879,-5.685009,0.375195,-1.386398,8.297434,9.370151,-1.356654,-6.469232,7.142579,6.423325,6.058430,8.985714,-9.434465,3.224716,2.692263,-5.516115,2.305815,0.171711,-3.576350,0.260576,-8.071516,2.080519,2.028678,7.926223,5.543456,-9.470593,-7.718661,9.635040,-7.917992,0.975495,-5.491095,8.318301,6.690998,-9.446086,-6.233379,6.054921,-7.510788,9.030609,-3.728650,3.354100,8.351672,7.379806,6.202874,9.486184,4.076458,1.051357,-7.764763,-6.103873,6.168096,2.083756,-3.523090,-4.821682,-6.302905,8.962238,8.458467,-3.208855,-1.886991,-8.509905,-8.607586,7.283796,4.312853,-1.195457,4.840307,1.808228,8.259702,-7.603525,4.033420,5.549217,-1.546813,7.149433,5.642478,1.946867,3.033661,2.221139,1.680097,8.744647,3.129718,-2.139153,-9.143747,-0.580758,-1.289153,-1.764005,8.691794,3.325189,-7.700272,4.545639,4.327778,1.293325,3.703741,-9.454415,-5.762729,0.980989,4.230579,-4.980661,4.683284,-6.986516,-8.505806,7.022143,-0.761425,3.135985,9.080266,-0.809893,2.837662,2.776507,-8.681195,3.469560,-2.674434,-7.515765,-1.039709,2.785281,2.227284,-3.499792,-9.280462,-6.978816,-4.459135,0.087837,-0.478340,-4.035719,-2.381220,-6.259466,-7.926222,2.591556,-9.631573,-7.330500,-1.654563,-8.726009,0.257168,4.148252,2.226590,-3.434396,-3.178894,8.789400,3.088250,-7.445794,-3.464424,-1.974629,6.398269,7.025233,-3.517139,-1.983040,6.247472,-3.289786,4.168165,0.075899,0.496354,7.671765,4.282829,3.512049,-3.824439,-5.206017,-8.407800,0.353605,-6.814622,-7.683280,1.304146,-4.405088,0.420160,2.368613,-4.316628,9.510758,1.979514,2.811315,-4.251001,4.555242,1.818561,2.550949,7.765939,2.952943,6.051217,-3.175913,-6.161171,3.187806,9.484470,7.308208,2.327547,-6.416287,5.339619,-5.187986,-6.997023,-3.213330,8.821818,3.411392,1.528079,3.995021,-6.053505,0.682550,-7.693397,9.226220,6.104469,4.373765,5.718278,3.898735,-4.958801,-1.434755,-7.597069,-6.378511,-2.928690,-8.675014,-4.180986,-6.702403,0.603487,3.891844,2.473025,3.633586,9.920598,6.582177,-2.295742,3.638083,-8.310509,0.371173,7.734817,4.499851,-6.559157,4.459472,7.776874,4.077809,7.939551,-4.717270,1.861766,2.641428,-0.522896,-6.737785,-3.858328,3.673512,3.258861,1.757897,-7.065029,9.464404,-6.398125,5.176659,-9.993343,-9.700262,-2.399639,-9.947895,-7.877394,-2.069604,7.140166,-5.028035,3.103054,-1.731512,-8.124279,5.042232,-3.621929,5.825203,5.347542,-8.865756,-7.216855,4.279713,0.829938,-3.430480,9.968559,6.505534,1.035943,-0.186404,9.901743,-3.976174,-2.357016,1.491764,-4.466273,4.447782,5.029049,3.837664,-2.915814,-3.085074,4.853973,-7.900504,-8.956240,1.680939,0.939531,-5.959807,-9.668268,-1.176106,-2.044283,-4.266177,6.094682,-6.746584,6.364523,-8.838368,-6.613961,-6.365875,2.812890,-3.864809,-1.972669,-1.473564,-3.716938,-8.904001,1.893893,3.684307,-0.650654,-2.123901,-3.771882,5.799620,-0.867086,0.426769,-8.586689,-1.935200,-6.054540,3.176411,-2.158960,-5.593252,-4.292514,-3.728421,-4.746941,9.485275,4.384962,-4.311856,-7.902151,5.197274,6.893756,7.844554,-5.135938,4.803746,6.376590,1.442185,-9.088707,-8.732739,8.762420,-5.806791,-3.021977,-1.140747,4.884216,6.506449,-7.907156,4.951560,-4.624069,-1.048706,-8.545278,8.517968,-3.098011,-0.731060,9.595074,-3.574326,8.558261,-8.793552,-6.007106,6.011328,1.451785,-7.003775,4.078608,6.457805,-0.868634,3.423230,9.822140,-5.573137,7.595046,4.467875,7.818853,3.203658,-4.521007,4.405017,9.154911,0.323664,2.195259,-4.272888,6.377138,-6.624273,9.579337,-6.654453,7.302523,4.321225,2.119608,7.499170,-1.227984,9.238421,-0.067467,5.716698,0.556692,-9.333439,-1.548015,-0.704237,-8.045668,-5.858392,-7.825950,-5.768494,4.891581,-6.448434,-1.654796,-7.750210,8.725083,-1.298457,-8.512134,9.692737,-5.422113,-8.368669,-7.307814,-8.739797,-8.659993,2.164390,6.244798,-8.652774,4.375992,-2.428451,-6.293859,-6.830748,-3.631688,0.131130,-6.307177,9.126153,-6.354236,-9.417852,-5.267373,5.294951,1.590578,3.815469,-4.396386,3.365817,-9.345547,-0.627500,-1.583527,-1.306407,7.315341,6.363480,-1.061763,-7.522979,6.012217,-2.851585,0.111199,-6.724184,-5.867490,1.191719,3.916665,-2.305359,-5.538167,-7.465406,5.252624,-0.871708,-6.009282,-8.372897,-4.914155,4.310355,1.335322,0.471975,0.323944,2.918146,5.826419,-4.753561,-9.813655,-5.281866,9.520741,5.778006,-2.076848,4.640195,-0.869375,9.212608,-6.274737,-3.512685,-2.630550,-0.894924,8.653108,0.229207,5.373767,0.742089,-0.034461,-8.455787,-0.577432,-8.396457,7.256510,6.667000,-9.166834,-0.365938,3.192004,-9.046114,-1.109434,0.026051,9.565324,-7.030970,-5.842538,-6.240283,-5.016065,1.455107,-9.685565,8.903562,9.267277,7.082774,9.363087,7.587670,-1.996531,8.690357,-2.766915,-9.108345,2.763551,-7.748542,-0.847679,3.766189,-1.196480,2.486924,-9.110123,-0.281717,7.534656,3.917225,-9.582290,5.550584,9.475337,7.273264,3.502600,8.547999,2.583862,2.536818,-0.284459,-1.181252,0.020125,2.448242,-6.334874,6.658075,-1.848322,-6.950902,7.718146,6.916737,-1.834169,9.838651,9.229958,7.669327,-0.933607,-2.752912,4.198702,3.449575,4.512211,-2.112459,5.128439,6.029995,3.066923,-8.134907,-7.785603,3.288518,-0.902927,-5.792358,0.963173,-4.702444,-5.021767,-2.883879,3.018155,-6.207259,-6.518922,-1.816890,1.043658,7.894485,-3.638888,1.322577,-8.351953,8.267017,2.472874,-8.410849,5.897336,0.598499,0.212996,2.715783,7.246912,9.271190,2.000081,0.418193,-4.294704,9.441323,-5.062316,3.828144,8.384365,-7.787846,-5.418707,6.578092,1.676799,-0.380890,-6.165812,-2.635681,0.636728,7.614434,4.679930,7.121152,-3.146504,-8.845792,-1.823971,2.086326,6.092373,-9.458886,-3.815680,7.773389,-4.346397,-7.033591,-7.123703,9.952178,0.654843,-3.105881,3.835319,-8.010656,-0.600010,6.726255,-2.012665,-0.419313,-3.989258,4.983260,-7.238461,-3.652760,-4.328236,7.855126,8.893164,2.925366,8.013253,-1.498839,6.539536,-0.701086,3.498913,-5.873765,-6.269131,9.428059,-8.351039,0.391771,-6.263207,1.819259,9.252492,3.985127,5.551983,0.794715,-2.140427,-4.917834,-0.429317,8.936427,-7.075867,5.330772,-1.820447,2.356922,8.918296,3.387787,-2.727215,9.377841,9.567935,9.254279,5.560396,3.801179,-6.876963,4.945702,1.009007,-7.809446,5.337684,-9.526230,9.543895,-4.399273,9.764859,-3.072070,-3.255486,3.617702,-3.237711,5.024896,7.606257,9.364736,-6.244165,-8.631870,5.795331,6.301595,-8.411255,-5.889699,6.892060,-4.336596,-2.771424,-7.043956,-6.098645,-1.242639,-1.098716,-1.451687,-9.008310,9.490623,1.461619,-5.720382,1.118269,4.183208,-5.169719,0.209369,-7.852064,-9.631335,-3.926978,7.501451,-4.309126,5.281686,4.246470,-5.866428,5.441990,-0.212448,3.071061,6.452500,-2.078943,-7.990096,-4.983780,-0.915172,0.614980,5.596023,-9.906332,6.128628,-9.752644,3.793365,-9.806609,6.985656,-4.573515,-9.342163,8.244604,-1.416640,-3.986414,-0.509015,-7.064771,0.002888,8.020108,4.086402,-9.981152,-1.649996,1.378119,-2.671659,6.224031,3.520369,-9.021100,4.919596,7.630561,4.488341,-5.667646,-9.232685,8.168281,-2.081368,-0.221993,-9.304912,-7.029835,3.293288,-8.288612,-5.104675,9.496186,2.949265,3.208056,7.942855,-0.722044,3.031785,-9.022476,5.559092,7.920275,-7.666173,1.867827,-4.197487,4.188224,1.480254,-8.608197,6.768519,6.066829,7.667727,4.929400,0.542975,0.820512,-0.708319,-8.575479,2.902011,-7.990549,8.089504,-0.865685,4.919957,6.236316,-7.358316,-7.055628,-0.001447,-2.402415,8.528216,-0.005068,-3.420152,8.752223,-2.250375,-2.901545,6.604555,3.681525,4.109129,9.225408,-3.620880,0.596705,-1.014723,-5.942523,-2.951967,-0.907109,3.718790,-4.418177,-0.235417,-7.035574,-3.338674,1.678049,6.005503,-2.252750,-2.547037,-2.040468,5.649536,9.310447,7.383300,-2.085751,3.460489,7.265133,3.889283,-5.405118,4.198764,-3.606634,0.147520,-2.658465,6.292164,3.304983,-2.544553,-5.018275,-0.744578,6.715865,9.195825,4.102021,-2.727856,9.623509,-0.312219,0.173003,4.293172,2.897394,1.532343,3.984843,3.160834,4.392852,-1.729204,9.222022,6.619038,0.814728,-0.336692,1.719331,8.491140,-6.913236,-1.494202,-0.540446,-2.901151,9.570548,3.809527,-7.670003,5.562869,-8.791367,3.630349,-4.802097,-3.701742,4.195046,-9.533207,4.682944,-6.844088,-9.645841,7.038852,-6.601095,-0.293045,-0.869199,-3.168769,-4.542645,-4.579021,-7.169252,-8.791961,-5.047906,-3.661102,1.995296,6.305297,-9.791594,3.664726,-6.973771,7.016557,-1.799641,-6.130825,3.676845,1.934923,6.561898,-3.834176,8.346689,-3.915312,4.147948,0.321894,-4.711213,3.470951,-2.853042,3.937553,-3.349233,5.286705,-6.345037,5.978305,7.445026,-7.427431,-4.724395,-1.573294,6.391926,0.461418,2.368267,-8.297529,0.249928,-9.711724,-6.251515,1.596786,2.855215,7.204659,-7.542505,1.149852,8.372446,-8.774732,3.180185,2.006308,-7.870017,4.964414,6.450655,8.491884,-3.994506,2.475762,0.004824,5.666250,5.853916,-8.666867,2.383389,8.664107,1.781605,-1.726051,-2.944844,-4.727887,-4.640286,-4.374982,1.191349,5.595515,-1.603870,-6.364419,6.452118,-6.864720,-3.044833,-3.805767,-1.325918,-6.459023,-2.041092,-9.142996,-8.965593,0.272035,0.826626,-7.215304,2.901627,-4.997281,-1.995838,2.884036,-7.588693,7.567152,-9.536570,-6.700216,2.326134,8.084656,2.204393,2.553474,-2.012227,-8.769045,-9.819682,-3.356657,-8.006021,1.968982,3.461608,-7.052939,-7.531054,-0.060973,-6.366576,-5.223732,3.277345,0.684748,4.768073,-3.318451,2.238962,4.990106,0.168616,5.184141,-5.302285,2.271968,8.055988,1.371724,6.358170,-0.588817,-4.985330,8.068404,-0.196635,-9.255532,2.796632,5.748419,-3.895060,8.841074,-5.783942,3.944685,1.955629,-1.634964,9.894303,3.331323,8.785900,-3.899629,-2.286944,6.092891,-8.014206,-1.985868,-3.072724,-2.110441,6.980469,5.340504,-1.744135,-2.949880,2.853794,-4.267104,9.095220,5.533552,0.358057,-7.681733,1.688213,6.504420,-5.659727,-1.695385,3.847728,5.493852,-1.172753,9.569289,5.984758,-6.305475,-4.186143,1.237279,-8.347221,7.129261,-9.572177,6.122461,4.195963,6.736022,1.453689,4.067130,-0.057674,7.106371,4.101721,2.393420,-5.226460,7.838142,-1.176236,-5.734894,6.817174,3.177597,-5.010556,9.204187,3.980701,4.377933,-1.821461,9.862975,4.530056,4.351755,8.618268,1.573231,7.868455,4.588075,-6.914465,-8.902435,1.546970,7.285649,9.720434,4.318133,-8.890310,6.453123,5.881605,6.561262,7.829370,3.254316,-4.852402,-5.107036,2.652348,0.603061,-5.290287,6.231186,2.597291,0.149195,-1.878675,6.508114,3.849212,5.304181,-5.935034,7.585129,-4.280953,-0.543089,8.689459,-2.496305,-2.007130,-2.529776,7.535566,-3.544192,4.766918,0.931239,0.703314,-6.551320,3.396500,6.700878,-4.364941,1.077809,-6.501891,7.063821,0.061424,-9.815149,-4.600635,-9.278088,3.182581,-8.161951,-9.098426,-7.002392,6.643727,-1.365423,-8.593222,-5.417686,-5.286308,1.643987,9.277891,-3.650682,-0.565996,7.104929,-0.466161,5.718589,-6.635995,-9.852430,0.852784,-7.040761,2.394285,-7.367681,9.143355,-4.451736,-1.286375,-9.021855,2.133108,-0.955522,0.273685,-5.143376,4.591554,5.460532,9.665042,-8.226228,-3.886134,0.552100,4.783619,-3.702802,-9.099901,-7.385055,-1.788426,5.034426,-5.340676,-3.882192,7.431370,7.169702,-9.821667,-6.959090,-6.950461,-3.111292,-4.357362,-7.427960,8.362307,-2.420626,3.721379,6.446285,4.368044,8.680376,-5.546011,7.594355,-8.989006,8.424580,-4.095457,3.522966,-2.191246,5.840042,0.637812,1.842209,-0.700490,5.580367,-6.822778,-5.584235,9.861968,9.902920,5.809189,1.002584,8.930544,-4.401944,-9.025516,-1.009201,3.963127,4.692470,3.105348,-2.916172,-9.844603,-6.577948,-5.027718,-1.778572,-3.033138,0.002811,0.394485,-2.569982,5.989738,-4.443778,-7.882310,4.237682,-1.349014,-5.975698,9.835444,-3.785370,-7.535065,-4.066170,4.135172,-6.195674,6.386450,4.139720,-0.786701,8.931636,-6.261687,-2.465230,8.848282,-9.544887,-5.439197,9.385439,8.455180,-1.497556,-7.816743,-0.435603,8.419089,-7.004380,7.755108,6.519160,7.605659,7.699736,-1.812639,-6.804041,6.369246,-9.781781,8.926164,6.406110,7.577787,2.296703,3.590057,0.563702,-4.367929,8.084726,3.369399,-8.246533,9.897015,-8.844974,2.707379,3.857870,0.186344,-4.936123,-2.974117,-9.262679,3.201138,6.145479,7.043397,-9.177419,-3.885816,0.337931,-5.506696,-3.372909,-1.878661,-2.620167,6.969623,-9.442641,1.912805,-7.341091,7.147858,0.486276,-6.971872,6.476132,3.425587,7.179336,1.330661,1.008554,-7.766696,6.853920,-9.769680,-2.439500,-0.010677,-8.500595,-5.886535,8.568571,7.754949,-2.248503,7.919072,-6.097351,1.967230,9.592635,-5.001845,5.365370,-5.434782,6.867538,-6.938350,0.878521,6.357604,-0.110705,-8.550443,3.548657,-1.436514,8.009852,2.075357,-2.798165,5.898075,3.800400,-7.667837,1.993822,0.847622,2.777474,-2.082432,-5.301824,-8.957660,2.414342,-4.858904,7.205919,2.840911,6.714218,-5.387393,3.690570,4.863398,1.814338,0.127849,-9.102170,-9.982539,-8.273198,-5.341257,-8.579974,2.793721,4.594818,-8.520458,-6.055193,1.999439,-3.291103,5.624650,-0.828108,-6.859242,-3.373040,-5.674264,-9.820507,-4.739658,5.336740,-1.185763,-3.297612,-5.288102,6.957738,-0.337803,-4.800810,7.674503,7.610775,-0.476985,9.739021,8.073054,2.232761,3.539409,-4.588839,-2.128764,-0.688591,1.650712,6.259523,7.808687,-3.066643,-9.017233,1.633054,4.639621,2.461698,-2.149897,-1.457912,-4.957026,0.127191,-8.686619,-9.170343,-9.416569,7.539554,8.202203,2.244644,1.169429,-5.044469,-7.749991,-8.646380,-1.855173,7.596024,-1.270594,-7.993065,3.652898,-1.992305,-9.926332,4.015862,-4.593701,-7.103526,1.829277,-6.374845,-5.787363,-5.576709,-9.207731,-9.818257,-9.902671,-0.197263,-5.097839,-7.389527,-4.715250,1.251011,0.184264,8.942208,3.335867,5.214549,7.605599,6.962630,-7.660144,-2.963751,-0.797582,2.161860,4.467919,-2.829144,-9.147280,3.535530,3.638305,5.515171,4.482982,-7.216055,8.611594,1.667791,6.051370,-0.953877,5.724948,5.264407,3.257260,-9.417154,-8.207009,-2.359726,7.981046,9.178726,-2.200913,4.680251,-1.740064,-8.562588,1.701279,-5.796270,6.647596,-2.914992,-1.800116,-5.823115,-2.674054,-0.158236,7.490897,-4.747119,-6.177848,-6.574218,-9.096571,1.724618,0.023361,-4.682193,4.574013,-8.644878,2.764017,6.558810,-9.291838,-7.797031,0.144162,7.311918,9.229236,8.034484,5.721820,6.827192,-0.603040,-4.783762,-1.952063,-2.078620,-9.257940,-3.117452,-8.154591,6.663952,-0.390602,0.445935,-6.720033,-0.077403,-9.231417,3.147315,7.146625,-7.108617,8.076753,-9.054107,6.968401,-4.308559,5.397508,-8.438348,-4.503702,-7.189325,4.142038,-2.300934,-1.559469,9.862475,9.964428,-9.147371,1.268555,-7.055758,-8.513713,7.621005,6.506616,1.478700,-2.873507,-2.310071,0.905073,5.713249,0.442146,-4.206267,9.663376,-3.681360,-5.096645,8.707757,5.507579,1.724607,-2.756295,-1.244529,-4.764242,-9.965925,6.189056,8.242736,1.318660,0.977475,2.537811,-1.467735,3.313599,8.464631,-8.207327,-3.699792,-2.023986,4.180694,-1.819146,-0.973252,1.501756,7.281430,-2.891947,2.226438,-3.363886,-6.828005,-6.438432,-6.988609,8.172920,3.920947,-7.109205,-3.245686,8.116371,-4.695552,8.636855,-4.458265,8.397819,8.547261,3.720199,-2.122574,9.592249,0.464281,3.819034,7.594705,5.163134,-7.893573,-6.392564,-6.612157,-5.727216,5.582876,9.634362,-4.392646,-7.540870,-0.546528,-4.972885,3.915884,5.237036,2.456780,-6.298185,-2.195657,-9.102357,4.207632,6.064247,-2.431739,-4.186610,8.334167,-5.587257,9.838366,1.081813,-5.954408,-8.281176,9.853073,-8.446742,-2.938188,3.318799,-0.746375,-6.283035,8.068775,2.669695,3.450854,5.090197,0.167001,4.354885,-2.897083,7.255952,-8.180403,-6.440888,7.030469,8.161862,3.376186,-2.409022,-8.084998,-9.030247,-2.393060,6.619803,0.513397], dtype = "float32")#candidate|1811|(2145,)|const|float32
call_1810 = relay.TupleGetItem(func_789_call(relay.reshape(const_1811.astype('float32'), [15, 11, 13]), relay.reshape(const_1811.astype('float32'), [15, 11, 13]), ), 0)
call_1812 = relay.TupleGetItem(func_792_call(relay.reshape(const_1811.astype('float32'), [15, 11, 13]), relay.reshape(const_1811.astype('float32'), [15, 11, 13]), ), 0)
output = relay.Tuple([bop_1807,call_1810,const_1811,])
output2 = relay.Tuple([bop_1807,call_1812,const_1811,])
func_1821 = relay.Function([], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
output = func_1821()
func_1822 = relay.Function([], output)
mutated_mod['func_1822'] = func_1822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_1825 = relay.TupleGetItem(func_1821_call(), 0)
call_1826 = relay.TupleGetItem(func_1822_call(), 0)
const_1827 = relay.const([[[4,-2,-6,1,-10,-4,-5,-3,-6,4,9,9],[-8,6,9,-9,5,-9,8,2,-3,7,9,-5],[-10,-2,-2,-6,-9,2,2,-2,-5,-9,-1,1],[7,1,7,-4,6,-7,6,1,-4,5,4,-4]],[[-10,-2,-3,-6,8,-10,-3,1,10,-10,-1,-6],[-3,4,10,-8,2,3,10,10,7,2,-4,-1],[-3,5,-1,-3,-1,6,7,-2,-2,6,4,-2],[6,3,9,8,-7,7,1,-4,7,4,4,2]],[[-8,-1,-4,5,7,2,2,-9,3,8,-8,-6],[4,10,3,7,-2,-6,-1,8,9,-5,2,-1],[-4,8,-3,6,6,7,-9,3,-3,8,1,2],[-8,2,-3,-4,4,-8,8,-8,1,6,-2,-3]],[[-9,8,7,-2,9,4,9,-8,1,3,9,6],[9,-1,-10,-5,-5,8,3,8,6,-3,-1,-1],[4,-4,5,4,-1,-2,-7,-1,-2,-4,-1,-8],[-6,3,1,-2,5,-9,-7,4,-5,-10,-7,-5]],[[-9,3,-5,8,-1,9,-2,6,-6,-2,7,-10],[4,5,10,-8,2,1,-4,9,10,7,6,1],[-10,4,9,-10,-3,-4,-8,3,8,9,5,-7],[-5,-6,2,2,10,-9,-9,4,5,-6,4,5]],[[5,4,-10,-4,-9,-8,8,3,8,-1,-3,1],[-4,-3,10,2,9,-7,9,6,2,9,5,-9],[5,10,-4,-8,-9,1,-6,-5,9,8,3,-5],[9,4,5,-5,-3,8,5,10,-4,5,3,7]],[[-2,-9,-8,-2,6,10,-9,-2,9,4,8,10],[-4,-2,-7,-1,5,-5,-4,-1,-3,4,4,-6],[7,-9,-5,-7,-5,8,-1,10,8,-10,-2,-3],[-9,-7,-2,-8,-5,6,-7,9,-3,2,5,-9]],[[-7,5,9,4,-4,5,-8,-7,-1,2,-7,9],[-1,5,3,9,2,-1,2,10,-10,2,-7,10],[-5,5,-7,-3,5,4,-1,-2,-9,-7,-10,-6],[2,-6,-10,-9,1,8,-10,6,-8,-7,-3,5]],[[2,2,-7,-10,-10,-9,5,7,4,7,4,-1],[-4,-3,-7,-9,-8,-9,-3,5,-7,6,-4,1],[-6,-4,-2,7,3,-2,-8,-9,4,-3,-9,2],[5,-10,-1,-9,-9,-1,7,-6,-8,3,9,-2]],[[2,-2,6,-6,4,-1,1,5,-2,1,-4,2],[-5,-8,6,7,-5,-6,-5,-3,-2,-5,4,-3],[6,-6,2,4,10,10,-2,-4,6,-10,-4,-1],[7,1,5,8,9,6,9,-9,-10,6,5,-10]],[[10,3,5,4,1,-5,-9,-10,6,-10,-5,-5],[9,8,-1,-7,10,-7,-6,-9,4,5,-9,-4],[10,2,-4,-10,-10,6,-7,-2,-5,-4,-2,9],[-8,-1,-7,4,8,5,-4,-2,-5,6,1,1]],[[-9,-6,7,-6,8,-4,10,-6,-3,-10,-6,-1],[-3,3,5,10,8,-2,1,-1,-5,6,2,-6],[3,-4,-2,-1,10,-9,-7,-8,2,1,-9,-4],[7,4,4,-6,7,5,3,-4,-10,-9,-9,4]],[[-10,-9,-7,-5,-3,-6,8,3,10,-9,-3,-7],[6,-4,6,10,-2,4,10,-6,8,-1,1,-6],[-1,5,7,-9,-1,-8,2,2,-7,-5,-6,1],[2,2,5,6,2,9,7,-10,2,5,8,-8]]], dtype = "uint16")#candidate|1827|(13, 4, 12)|const|uint16
bop_1828 = relay.divide(call_1825.astype('float32'), relay.reshape(const_1827.astype('float32'), relay.shape_of(call_1825))) # shape=(13, 4, 12)
bop_1831 = relay.divide(call_1826.astype('float32'), relay.reshape(const_1827.astype('float32'), relay.shape_of(call_1826))) # shape=(13, 4, 12)
output = bop_1828
output2 = bop_1831
func_1834 = relay.Function([], output)
mod['func_1834'] = func_1834
mod = relay.transform.InferType()(mod)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mutated_mod.get_global_var('func_1834')
call_1835 = func_1834_call()
output = call_1835
func_1836 = relay.Function([], output)
mutated_mod['func_1836'] = func_1836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_1876 = func_1834_call()
call_1877 = func_1834_call()
uop_1887 = relay.log(call_1876.astype('float32')) # shape=(13, 4, 12)
uop_1889 = relay.log(call_1877.astype('float32')) # shape=(13, 4, 12)
output = relay.Tuple([uop_1887,])
output2 = relay.Tuple([uop_1889,])
func_1902 = relay.Function([], output)
mod['func_1902'] = func_1902
mod = relay.transform.InferType()(mod)
mutated_mod['func_1902'] = func_1902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mutated_mod.get_global_var('func_1902')
call_1903 = func_1902_call()
output = call_1903
func_1904 = relay.Function([], output)
mutated_mod['func_1904'] = func_1904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_1905 = func_1834_call()
call_1906 = func_1834_call()
output = relay.Tuple([call_1905,])
output2 = relay.Tuple([call_1906,])
func_1907 = relay.Function([], output)
mod['func_1907'] = func_1907
mod = relay.transform.InferType()(mod)
output = func_1907()
func_1908 = relay.Function([], output)
mutated_mod['func_1908'] = func_1908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_1935 = relay.TupleGetItem(func_1907_call(), 0)
call_1936 = relay.TupleGetItem(func_1908_call(), 0)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_1941 = func_1834_call()
call_1942 = func_1834_call()
output = relay.Tuple([call_1935,call_1941,])
output2 = relay.Tuple([call_1936,call_1942,])
func_1948 = relay.Function([], output)
mod['func_1948'] = func_1948
mod = relay.transform.InferType()(mod)
mutated_mod['func_1948'] = func_1948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mutated_mod.get_global_var('func_1948')
call_1949 = func_1948_call()
output = call_1949
func_1950 = relay.Function([], output)
mutated_mod['func_1950'] = func_1950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_1994 = relay.TupleGetItem(func_1821_call(), 1)
call_1995 = relay.TupleGetItem(func_1822_call(), 1)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_1996 = relay.TupleGetItem(func_1907_call(), 0)
call_1997 = relay.TupleGetItem(func_1908_call(), 0)
uop_2008 = relay.acosh(call_1994.astype('float32')) # shape=(15, 11, 13)
uop_2010 = relay.acosh(call_1995.astype('float32')) # shape=(15, 11, 13)
uop_2014 = relay.log10(call_1994.astype('float32')) # shape=(15, 11, 13)
uop_2016 = relay.log10(call_1995.astype('float32')) # shape=(15, 11, 13)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_2019 = func_1834_call()
call_2020 = func_1834_call()
func_1176_call = mod.get_global_var('func_1176')
func_1179_call = mutated_mod.get_global_var('func_1179')
var_2022 = relay.var("var_2022", dtype = "uint64", shape = (1050,))#candidate|2022|(1050,)|var|uint64
call_2021 = func_1176_call(relay.reshape(var_2022.astype('uint64'), [5, 14, 15]), relay.reshape(var_2022.astype('uint64'), [5, 14, 15]), )
call_2023 = func_1176_call(relay.reshape(var_2022.astype('uint64'), [5, 14, 15]), relay.reshape(var_2022.astype('uint64'), [5, 14, 15]), )
output = relay.Tuple([call_1996,uop_2008,uop_2014,call_2019,call_2021,var_2022,])
output2 = relay.Tuple([call_1997,uop_2010,uop_2016,call_2020,call_2023,var_2022,])
func_2024 = relay.Function([var_2022,], output)
mod['func_2024'] = func_2024
mod = relay.transform.InferType()(mod)
var_2025 = relay.var("var_2025", dtype = "uint64", shape = (1050,))#candidate|2025|(1050,)|var|uint64
output = func_2024(var_2025)
func_2026 = relay.Function([var_2025], output)
mutated_mod['func_2026'] = func_2026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_2036 = relay.TupleGetItem(func_1948_call(), 0)
call_2037 = relay.TupleGetItem(func_1950_call(), 0)
output = call_2036
output2 = call_2037
func_2038 = relay.Function([], output)
mod['func_2038'] = func_2038
mod = relay.transform.InferType()(mod)
output = func_2038()
func_2039 = relay.Function([], output)
mutated_mod['func_2039'] = func_2039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2060 = relay.var("var_2060", dtype = "float64", shape = (5, 9, 12))#candidate|2060|(5, 9, 12)|var|float64
uop_2061 = relay.acos(var_2060.astype('float64')) # shape=(5, 9, 12)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_2069 = relay.TupleGetItem(func_1907_call(), 0)
call_2070 = relay.TupleGetItem(func_1908_call(), 0)
func_1746_call = mod.get_global_var('func_1746')
func_1751_call = mutated_mod.get_global_var('func_1751')
var_2079 = relay.var("var_2079", dtype = "uint16", shape = (360,))#candidate|2079|(360,)|var|uint16
const_2080 = relay.const([-10,1,-9,9,-8,-3,-5,-7,-2,3,4,-2,5,8,-7,-8,-1,-10,-5,-6,-8,-3,-9,-5,9,-6,9,2,4,-9,-6,-5,-8,-1,5,-4,-6,5,7,8,-10,-1,-6,5,2,8,-1,-8,9,-1,-9,-9,-4,-10,-6,9,7,-5,4,3,-3,7,-8,-2,6,-3,-10,10,7,-5,2,-7,3,-4,-3,4,-9,-2,5,4,-9,6,7,1,8,7,9,9,-7,8,9,5,-2,5,-3,7,-5,-9,-1,-6,-6,8,-8,-7,9,6,9,6,-10,-7,9,3,10,-6,-2,-7,7,4,-2,10,-10,9,-10,1,7,1,5,-10,5,4,-10,8,6,-3,-4,-2,-9,-2,-8,-9,2,-1,-5,1,-8,-9,-6,4,-8,-4,9,-5,-7,-9,1,-9,9,1,4,-6,-7,-9,-4,8,-9,4,-6,-8,7,9,-5,-2,-10,-8,7,7,1,-6,8,-6,-6,-4,-9,-5,-8,-6,-5,-9,3,9,3,3,-1,-10,-5,-3,7,3,-10,2,-5,2,9,4,9,2,-9,-8,4,-9,-4,-7,-2,9,-1,1,-1,3,-4,-4,2,7,-10,2,-4,-2,5,-1,2,-8,-3,8,-10,6,9,9,5,-1,-10,9,-5,-2,2,7,3,6,4,2,4,10,-7,3,2,6,-8,-5,8,5,-3,2,8,4,2,6,3,7,4,1,-3,-9,2,6,-3,7,-3,-4,9,-5,-3,4,8,5,1,-9,10,7,-3,-1,-6,-2,9,4,-3,8,-9,-9,6,-6,-9,1,-2,-1,-3,-1,1,10,9,-2,10,-6,4,5,-1,-5,5,-10,-6,3,-3,10,8,-8,3,-7,9,3,3,1,10,-4,6,3,-5,1,9,-4,1,-3,-9,1,-6,-1,-2,-4,-10,7,-4,-8,-7,9,-2,4,-4,-10,-9,-2,5,5,6,10,-2,10,9,7,8,-3,-10,4,6,-8,4,2,-3,-7,-8,3,-5,-6,-2,10,10,10,2,3,-9,5,-10,5,3,2,-8,-3,-1,-7,3,-5,-3,-2,-1,3,5,5,4,-1,-1,-10,10,-4,-2,6,-10,-6,-9,8,-3,-2,-10,6,-9,2,-9,-1,-6,4,7,1,2,-10,8,-3,-10,1,-3,5,1,-2,-10,3,-7,3,-8,1,6,3,1,4,10,-3,-2,7,-8,6,-1,5,8,3,-2,6,-6,-1,4,10,3,-8,-4,8,3,1,3,-3,-3,6,1,-3,-10,5,2,-9,1,-7,4,8,-9,3,-6,-4,-3,6,10,-2,-4,4,4,-8,-1,-1,-10,2,1,-3,4,-6,6,2,1,-8,-2,-10,6,-3,-5,-3,5,-6,3,-1,-7,-3,-1,10,-8,9,-1,-8,9,7,6,-2,-5,5,-10,-4,-7,9,-3,-2,-7,3,-9,6,-4,3,1,1,4,6,4,10,-9,1,-7,-5,3,-2,-10,-10,9,4,-1,-10,1,-10,7,10,8,-10,-4,7,2,8,8,-6,-3,9,-5,8,6,-5,-7,-9,-4,-10,-3,-6,8,8,-3,-3,7,10,-2,2,-6,10,-9,8,9,4,5,-8,-3,9,5,2,-5,-5,-1,-4,1,-2,-3,8,8,-4,1,8,-2,-7,8,-8,2,-9,-2,1,6,-6,4,1,-5,9,-10,-9,3,-9,7,-5,3,-1,-6,8,6,3,7,3,10,9,10,-2,4,-5,9,8,-3,-4,-1,-5,8,8,1,-9,-5,2,-6,8,8,-9,-5,-8,9,-9,6,-7,1,10,-7,4,-7,7,5,-3,1,7,-10,4,6,-10,-7,-7,-4,-2,-7,-5,5,8,-9,2,-3,-6,5,-4,3,-5,3,-1,-10,10,-9,2,8,7,-10,-7,-9,8,3,5,8,-10,-2,7,-4,-9,-1,9,2,-7,5,7,-9,6,-9,-1,10,5,2,8,-1,7,10,1,1,6,6,-10,10,-10,-6,5,2,-2,4,-8,-8,6,4,10,7,-1,-1,7,-6,10,8,2,5,-4,-3,-1,1,9,-5,1,6,5,5,-9,-9,-5,-2,8,-10,-6,7,3,7,3,2,-5,8,-6,-2,-3], dtype = "uint64")#candidate|2080|(792,)|const|uint64
call_2078 = relay.TupleGetItem(func_1746_call(relay.reshape(var_2079.astype('uint16'), [6, 4, 15]), relay.reshape(var_2079.astype('uint16'), [6, 4, 15]), relay.reshape(const_2080.astype('uint64'), [792,]), ), 4)
call_2081 = relay.TupleGetItem(func_1751_call(relay.reshape(var_2079.astype('uint16'), [6, 4, 15]), relay.reshape(var_2079.astype('uint16'), [6, 4, 15]), relay.reshape(const_2080.astype('uint64'), [792,]), ), 4)
const_2087 = relay.const([[[2.630243,5.704685,-6.222148,-5.001281,2.513311,0.555463,-1.612290,-4.395276,1.710924,-0.955251,5.392013,2.939588],[-4.750721,-9.437848,2.937672,-2.402098,6.446919,-0.557738,9.387500,1.139684,0.052667,4.979045,-0.095758,-8.424360],[-2.036545,-3.456634,-7.443151,-3.121963,7.540641,1.605346,5.775062,6.836438,5.406642,-9.335124,-3.998758,-1.848236],[3.788604,8.850499,5.521391,4.412958,7.716876,8.384564,6.514380,-0.762436,-7.323697,-7.351450,2.313146,8.461919],[0.742550,-8.686960,3.617066,8.002828,-4.706194,-9.338419,-7.693505,8.367963,9.020351,-6.608479,4.254081,7.969990],[-0.340673,4.238335,9.247415,5.380695,-0.220918,-0.665104,-7.926548,-7.487786,9.606877,-7.030822,7.977968,9.903860],[-6.083132,1.733488,-2.671884,-1.579301,-8.541573,8.017110,-3.636983,-6.993382,-1.516518,-6.523160,-0.403185,7.015234],[-8.724880,-6.807737,7.621980,-9.135926,4.837788,7.345487,9.058924,-8.593614,1.527133,1.515351,-2.326128,1.182498],[0.832883,2.401424,-0.834195,2.101264,-4.232265,-1.740235,9.466436,-0.162836,4.698834,-0.434799,2.435944,-8.613136]],[[-8.531016,-3.365627,-0.447094,7.243088,1.935891,1.723267,0.991041,-6.021271,-2.058977,-4.601979,-7.430189,-2.139216],[-1.621371,-1.748146,-2.148116,3.786638,-5.182976,0.592887,4.586171,-8.841734,-3.400126,-8.735405,-3.966901,4.912913],[-5.713587,-2.481741,-0.073889,-9.048348,-8.581789,-0.649128,4.027540,2.049587,1.595508,-6.936711,-1.777910,-1.899679],[7.888788,-4.463608,4.065139,-9.027360,1.993320,-9.030434,-1.561968,6.078054,2.150545,1.219744,1.463850,4.506040],[4.348809,9.483124,-3.973158,-4.441694,-8.784420,-9.403474,0.283730,8.959524,5.221854,-3.931889,-9.756246,-5.757420],[-4.266965,1.225231,5.090607,-6.967413,-0.958587,-8.839120,9.228902,-1.787403,5.596403,-6.029265,-2.415441,-6.437834],[2.866187,2.567207,-1.692083,-4.754077,5.523790,-4.028040,-3.980296,8.638712,-5.995368,0.716311,1.796355,6.427458],[-6.372928,8.063254,-2.761808,7.390060,-5.412356,0.931408,-2.747335,1.489748,3.076564,-0.513360,4.555857,5.985952],[7.035905,5.848602,-1.001097,-3.783576,-0.165968,2.129558,5.671104,2.481695,9.345304,-4.796866,-8.207829,1.512464]],[[8.937511,1.277924,-7.754903,-7.229335,6.344711,-9.989401,-7.259046,8.655123,-9.880741,2.023357,9.979511,9.358237],[-5.795280,-6.901163,-4.758914,-6.151827,-9.898731,-1.015030,-3.278759,-8.863503,-9.314772,-4.440545,7.990242,-4.741947],[-8.090399,9.485447,-1.866378,9.323133,-2.022319,1.112484,8.153926,-6.195735,8.193229,-3.039247,0.284373,4.853378],[2.374603,7.854671,4.833352,-5.889910,5.866379,7.368923,3.655382,-1.536194,7.982893,-0.237970,-6.966988,-1.269962],[4.863018,9.606189,2.660813,-0.715018,-4.539404,-5.849642,4.104260,-2.215007,-8.729193,-2.315296,-8.305363,-2.038434],[-1.575764,-9.480021,9.016515,-1.264109,-0.282490,-4.995306,7.815390,-2.872143,-3.789145,2.624040,-7.393134,-0.479207],[-2.008310,-2.228521,-8.462270,-1.839210,7.974377,6.400966,0.980510,4.717948,2.429842,7.664667,-9.054136,4.822230],[-5.999794,2.595948,-5.566189,-1.656277,-0.306953,5.335009,2.725811,-6.097854,-7.653539,7.651180,1.634182,4.875573],[-5.231972,5.990607,1.657097,7.605078,-0.856104,-6.071613,1.702716,6.183073,6.988087,-8.366463,-8.426798,0.628506]],[[-4.415054,-2.844356,8.603475,-6.209519,-6.529322,-8.946159,-8.877016,-5.098721,-1.972293,6.136735,6.781644,-3.685444],[3.222551,6.696504,2.780407,6.982018,8.874708,5.421281,8.230175,8.431791,-0.669558,9.912204,5.546060,7.696316],[-1.153817,9.672848,1.575620,-4.148612,-5.154544,-8.009609,-0.599871,0.128611,5.675015,-0.937288,3.043160,-9.222167],[-4.466730,-9.640290,7.453537,9.504527,4.237828,8.153864,-4.444136,3.088895,6.226821,-0.741699,2.189932,-3.095360],[3.897019,-3.814850,-5.462846,-3.883969,-3.374616,-5.527321,-9.330376,-5.634252,0.056583,-9.843145,6.934684,-1.844094],[9.790192,8.129508,3.296315,9.376473,-8.772517,5.982207,-6.471623,8.086043,-5.634556,0.471731,-8.686531,-3.377364],[1.641680,3.273271,9.360037,-5.763452,9.735358,5.865005,7.726129,1.302343,-0.924717,-2.298563,-5.766272,-8.679166],[2.867114,7.050378,4.125279,5.233803,-8.755803,5.704449,5.155699,-8.461636,8.964172,9.856545,-5.579817,5.910176],[8.616216,7.543890,5.140010,-9.412704,8.558061,-3.951586,-8.273617,-7.057820,6.107737,-1.701820,2.626584,0.810539]],[[-5.229847,2.004344,7.109984,-3.810238,-7.585582,-3.364359,9.723672,-8.683200,-2.570324,0.080979,1.299679,2.264522],[3.852606,2.855246,-4.594969,-6.026100,1.973811,9.695943,-7.373573,0.306834,6.430307,-8.707547,-6.286201,-5.192033],[-6.117209,0.252732,1.188012,-4.201227,-0.575215,2.957115,-9.563260,-4.523510,2.225103,-2.109201,3.765725,-7.913118],[3.338309,9.764662,0.943526,-9.291914,2.715191,0.914387,-0.014438,5.996429,8.841023,1.022468,-7.453583,6.354693],[8.869701,6.665408,3.155046,7.952510,2.645525,5.890923,-3.775743,-5.825312,0.186928,-7.237507,4.860145,0.605568],[-9.241708,-8.164630,-4.495666,-1.194491,7.910696,-5.657297,1.390542,4.125983,-6.887329,-6.330023,-7.976093,-5.247536],[-9.722434,4.580839,-2.516890,1.307104,7.984591,-1.182912,1.528937,8.187578,-1.723494,-7.250532,9.102778,-8.680724],[-1.407402,0.620013,1.120751,-0.091926,-4.654696,7.448437,-8.666010,-0.079246,-0.741880,3.168842,4.453774,-3.682061],[-5.054810,-5.386957,-4.831370,9.639944,2.526731,8.809210,-8.159109,-2.661883,9.268998,-4.468998,-7.007488,9.211094]]], dtype = "float64")#candidate|2087|(5, 9, 12)|const|float64
bop_2088 = relay.power(uop_2061.astype('float64'), relay.reshape(const_2087.astype('float64'), relay.shape_of(uop_2061))) # shape=(5, 9, 12)
output = relay.Tuple([call_2069,call_2078,var_2079,const_2080,bop_2088,])
output2 = relay.Tuple([call_2070,call_2081,var_2079,const_2080,bop_2088,])
func_2097 = relay.Function([var_2060,var_2079,], output)
mod['func_2097'] = func_2097
mod = relay.transform.InferType()(mod)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mutated_mod.get_global_var('func_2097')
var_2099 = relay.var("var_2099", dtype = "float64", shape = (5, 9, 12))#candidate|2099|(5, 9, 12)|var|float64
var_2100 = relay.var("var_2100", dtype = "uint16", shape = (360,))#candidate|2100|(360,)|var|uint16
call_2098 = func_2097_call(var_2099,var_2100,)
output = call_2098
func_2101 = relay.Function([var_2099,var_2100,], output)
mutated_mod['func_2101'] = func_2101
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2191 = relay.const([[[-5,8,-5,-10,10,-2,3,-1,-9,3,-10,-2,-5,-9,3,-10],[8,-8,3,-3,-4,-9,9,9,8,-1,5,3,-8,-6,4,1],[-1,8,-7,-9,7,9,8,3,-1,6,10,3,-2,8,4,9],[-6,-9,7,7,8,2,-3,-3,9,-10,9,-6,-4,-8,-2,4],[-3,5,5,-7,-8,-2,-4,-7,4,-2,5,-5,-10,7,-9,4],[-8,-5,-10,7,-1,-1,3,8,5,2,7,9,2,3,-1,-7],[-5,1,5,5,4,-3,-2,-4,-10,-9,8,6,5,3,-6,4],[-1,9,2,3,8,5,-6,8,-7,-5,-6,5,2,-7,6,-10]],[[-8,-4,2,6,-3,1,2,-7,8,-4,-5,-6,-6,-5,-6,-1],[3,5,-3,7,-4,7,-8,4,6,-2,8,-6,-3,-9,6,-3],[5,4,9,-6,-10,8,7,5,2,2,5,6,-1,-7,5,7],[6,-10,5,-1,-10,2,-2,1,-6,6,3,1,5,10,-6,9],[-8,-10,-4,-7,-9,-2,-10,7,-5,9,-2,-1,-8,6,10,9],[-4,-1,9,7,-9,-1,3,4,10,6,-4,1,-2,6,-4,-9],[4,-1,10,-3,6,-9,-1,-6,8,2,-3,-4,10,6,-6,4],[-7,-5,2,7,1,6,-8,-4,8,-10,9,-5,-5,4,-8,-1]],[[1,1,5,1,3,-9,-2,9,7,3,5,-6,1,-2,-6,3],[1,3,1,2,-3,-6,2,-9,9,6,1,2,9,2,-9,7],[8,-5,-5,-4,-6,5,10,-8,5,-10,-5,10,-6,-1,7,4],[7,-6,-4,1,1,-1,-10,-9,-2,-3,1,3,8,-2,-2,-2],[-4,1,9,2,-8,2,-2,4,9,-3,1,-8,1,-5,6,2],[-4,-2,5,-2,6,8,4,-2,-9,5,-2,-10,5,-8,3,-5],[-4,-1,-10,9,-8,4,1,6,2,2,6,-8,1,4,-7,10],[-5,-10,5,-10,8,-6,-1,-1,-4,8,-8,3,-4,1,5,5]],[[-6,6,4,-4,-10,-3,1,-6,8,-8,-2,-6,-5,10,-10,-1],[-7,8,3,-4,-10,-5,-1,-9,5,-5,-6,3,-8,3,-7,-6],[1,8,6,8,10,-9,2,-10,-5,4,-6,5,10,-5,4,1],[-7,-9,10,-9,1,-1,-7,-2,8,4,-10,1,8,-7,7,-8],[-7,-7,4,-9,-5,-8,1,-5,-3,-4,-9,-7,9,9,-3,2],[4,9,5,-3,-8,3,10,-8,-6,-9,5,1,-9,-2,9,-2],[-3,-3,9,-3,8,6,-3,-2,-9,5,5,10,10,6,-7,-4],[-9,3,4,7,-1,1,-9,4,-4,-4,6,-2,-9,6,5,8]],[[-9,-4,-6,-7,5,-2,9,-4,6,-1,-3,1,-1,8,8,-2],[9,-10,-8,-6,4,-7,6,7,1,-4,-1,6,3,2,2,-8],[1,-7,-4,-1,-1,-1,-2,-6,-6,-7,9,-1,-7,-2,6,-1],[-8,5,1,10,6,6,-10,3,7,5,3,-8,8,1,-2,10],[-1,1,4,-2,5,-10,-4,-2,-3,7,-2,8,7,-5,-2,-6],[-1,2,10,-8,4,9,3,9,8,-1,2,-2,9,-5,-2,1],[-10,1,-9,-3,10,-10,-3,8,6,-4,1,7,-3,10,-5,-1],[5,5,4,6,-1,-7,-5,10,6,-8,-9,-6,7,-10,-10,9]],[[4,9,3,-1,2,-1,-3,-8,4,-4,3,7,-8,4,9,-3],[-7,-4,2,5,3,2,-6,3,-6,-4,10,1,-10,6,-8,6],[-5,-8,-6,-10,-10,5,3,-7,-6,10,-4,-4,5,8,2,1],[-6,4,-1,-1,9,6,-3,-10,5,6,2,4,3,3,7,5],[-2,-3,5,3,-9,5,3,2,-7,7,-10,9,4,1,5,-3],[4,1,2,-3,-4,-3,-6,-6,7,4,-4,-3,4,-8,-9,-7],[8,10,1,-1,4,3,10,2,-3,-5,9,5,-3,4,5,2],[-9,-3,8,9,-7,9,-2,-5,7,-3,-1,8,3,-3,-3,-4]],[[-9,-7,1,8,-8,5,8,-6,3,1,-10,-5,3,1,-3,10],[-2,-9,-3,-10,4,3,-7,-8,10,2,10,-1,5,9,-9,-10],[-8,-5,-5,-1,2,2,-5,-8,2,5,9,-5,1,2,4,4],[-2,2,4,6,-9,5,-1,-1,5,4,-5,6,-2,-8,4,-8],[-1,-2,4,-2,8,-9,10,-1,9,7,-4,-9,-5,5,-9,4],[3,-4,7,2,-3,4,4,-8,-1,-6,-10,-5,4,-4,5,2],[7,-7,-3,-10,3,-2,1,7,-5,-9,9,-3,6,-5,-9,-8],[-6,1,-7,8,8,4,-9,1,5,-2,4,7,-3,10,1,8]],[[-7,9,-3,2,8,-9,9,3,-10,6,8,-5,-6,-5,-4,-6],[-4,-5,-3,-6,-2,-8,-7,-3,-5,2,-4,6,-3,-1,-4,8],[-4,-4,-9,-8,7,2,-8,-10,5,6,-10,-1,3,-10,9,-4],[-2,-1,-9,3,-6,10,1,-7,-6,8,-7,-9,-3,7,10,6],[-10,-4,-8,4,2,-10,-8,1,-1,-7,10,-9,6,8,7,-9],[-2,5,10,8,5,-6,6,-4,8,7,1,2,4,-5,-5,8],[-7,-9,-4,8,-4,2,-2,1,10,-8,4,8,2,-8,8,-6],[1,-10,2,-4,-4,10,-3,-6,7,-3,5,-10,5,-6,8,-7]],[[-7,3,7,-8,4,-5,-7,9,6,-8,3,10,7,-2,7,-3],[-6,-6,6,2,-3,6,-9,-5,-8,5,-2,9,10,6,1,-4],[8,8,3,5,-6,-8,-7,-9,8,6,1,-1,9,10,7,-4],[3,10,-1,-4,7,3,6,10,-8,-4,-4,-3,2,-2,7,-3],[-10,-8,7,10,-5,1,5,-5,-8,5,6,6,1,-7,7,-1],[-3,8,3,6,-10,-7,-8,9,1,-1,-2,-3,6,3,9,2],[3,4,7,1,-8,-4,1,4,9,-7,4,-6,-3,6,3,6],[8,-1,3,-4,-10,-9,2,-3,1,-2,3,5,-6,-7,-9,-4]],[[-4,-3,7,-8,-6,10,-2,-8,6,-8,-7,4,-6,-2,-6,3],[9,9,-3,-5,-5,8,-1,-10,8,5,-1,-1,-3,-1,7,-1],[9,-4,-6,-3,7,8,-10,4,-6,-5,9,-5,9,1,1,-4],[-9,-5,1,-6,1,-6,-2,-1,9,-7,-2,-1,8,6,-4,-10],[-1,10,4,10,-9,8,-7,2,-5,-4,-9,7,-7,-7,-3,5],[-3,-6,10,2,-10,-5,-9,5,-3,-2,-6,-2,-4,-5,7,3],[-5,-4,-4,-8,-9,3,7,-4,7,-5,-7,-5,7,7,1,1],[-8,-1,-3,7,2,-10,8,-1,9,7,4,-6,3,2,-3,10]],[[-8,-4,-1,-3,-10,4,-4,-2,-1,-1,-2,-4,10,1,-9,-5],[-1,9,9,-7,-4,9,-5,3,2,1,-10,-1,2,-4,-2,-1],[-7,6,-2,-4,-5,-4,-6,6,-2,-3,3,3,-7,-10,5,3],[2,5,-6,10,-4,10,5,7,5,10,-6,-5,9,4,-7,-3],[10,-2,-8,6,9,1,3,1,-10,8,-1,10,10,-3,5,-3],[7,1,-8,-9,-4,10,10,7,-10,7,10,3,-5,7,6,5],[5,-9,3,-9,6,-4,1,-8,6,6,3,6,-8,8,-2,7],[6,-2,2,6,1,4,-1,6,-8,-5,-2,10,5,5,-10,-7]],[[-6,7,-10,-6,5,4,-4,5,-3,-4,-5,-4,-4,-10,-1,5],[7,5,-5,10,-3,-5,-7,9,-5,2,9,2,8,10,-2,7],[4,-9,-5,10,3,4,-8,-7,-8,-4,-8,-2,8,-6,-4,-10],[-6,-9,7,-8,-7,-10,5,-9,-10,-2,7,5,-6,8,3,-10],[6,-10,1,5,8,2,-5,-10,3,-5,6,10,10,-1,7,-2],[1,7,-9,9,-8,-3,-3,9,-5,-10,4,-4,-9,9,-8,-8],[2,10,-8,9,3,10,-4,-6,3,1,-8,-2,-2,3,-2,9],[-6,5,2,-1,-7,3,-8,-10,4,10,8,7,5,-10,-10,-2]],[[9,-2,3,-6,-4,2,5,-5,-5,9,7,3,-7,-8,1,-5],[7,-1,-1,-1,-3,7,4,7,6,-1,3,2,9,6,10,-2],[9,7,10,4,-8,-3,6,-10,-5,5,8,-7,7,-7,-5,4],[-2,-3,-7,-8,-2,9,-1,10,1,4,-3,6,-8,-9,-2,6],[-3,8,10,9,7,1,7,3,-5,9,10,9,10,1,-2,8],[10,7,4,-3,4,-8,-3,2,10,7,-9,-9,6,-1,-9,-6],[-4,8,-9,-8,2,7,-9,-5,-2,-10,-3,-10,-9,9,-9,-4],[8,-3,-2,1,9,9,-6,-8,1,9,-4,-2,1,10,6,7]],[[7,-10,-10,-3,8,-8,8,-3,3,2,-3,2,-6,6,-8,6],[10,4,-7,-3,-9,-9,9,8,4,-1,6,10,8,6,6,1],[7,10,-2,-7,3,10,8,4,-9,6,10,1,-2,2,-8,6],[8,-7,8,-1,-2,5,-10,9,-5,9,2,3,-5,-4,10,8],[7,-8,1,-9,10,-2,-2,2,-7,5,8,-5,-5,-8,10,-4],[-3,-5,-2,7,6,-2,10,8,-6,-9,10,-9,-5,-1,3,6],[-6,10,3,9,7,-10,7,6,-2,8,-1,7,6,-4,1,-6],[-9,6,6,-3,-7,9,2,9,-2,-6,-8,2,-10,4,4,-2]]], dtype = "uint64")#candidate|2191|(14, 8, 16)|const|uint64
var_2192 = relay.var("var_2192", dtype = "uint64", shape = (14, 8, 16))#candidate|2192|(14, 8, 16)|var|uint64
bop_2193 = relay.bitwise_or(const_2191.astype('uint64'), relay.reshape(var_2192.astype('uint64'), relay.shape_of(const_2191))) # shape=(14, 8, 16)
uop_2199 = relay.log2(var_2192.astype('float64')) # shape=(14, 8, 16)
output = relay.Tuple([bop_2193,uop_2199,])
output2 = relay.Tuple([bop_2193,uop_2199,])
func_2235 = relay.Function([var_2192,], output)
mod['func_2235'] = func_2235
mod = relay.transform.InferType()(mod)
mutated_mod['func_2235'] = func_2235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2236 = relay.var("var_2236", dtype = "uint64", shape = (14, 8, 16))#candidate|2236|(14, 8, 16)|var|uint64
func_2235_call = mutated_mod.get_global_var('func_2235')
call_2237 = func_2235_call(var_2236)
output = call_2237
func_2238 = relay.Function([var_2236], output)
mutated_mod['func_2238'] = func_2238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2252 = relay.var("var_2252", dtype = "float32", shape = (8, 10, 5))#candidate|2252|(8, 10, 5)|var|float32
uop_2253 = relay.cosh(var_2252.astype('float32')) # shape=(8, 10, 5)
bop_2299 = relay.logical_or(var_2252.astype('bool'), relay.reshape(uop_2253.astype('bool'), relay.shape_of(var_2252))) # shape=(8, 10, 5)
func_1198_call = mod.get_global_var('func_1198')
func_1200_call = mutated_mod.get_global_var('func_1200')
var_2306 = relay.var("var_2306", dtype = "uint32", shape = (784,))#candidate|2306|(784,)|var|uint32
call_2305 = func_1198_call(relay.reshape(var_2306.astype('uint32'), [7, 8, 14]))
call_2307 = func_1198_call(relay.reshape(var_2306.astype('uint32'), [7, 8, 14]))
uop_2309 = relay.acosh(var_2252.astype('float64')) # shape=(8, 10, 5)
bop_2317 = relay.greater(uop_2253.astype('bool'), relay.reshape(uop_2309.astype('bool'), relay.shape_of(uop_2253))) # shape=(8, 10, 5)
func_2235_call = mod.get_global_var('func_2235')
func_2238_call = mutated_mod.get_global_var('func_2238')
const_2330 = relay.const([-6,-1,-3,-4,9,-10,10,-10,7,1,6,-6,-1,-1,10,3,6,4,6,-2,2,2,3,-10,5,-4,1,-9,1,-1,3,1,-9,1,-5,-10,4,10,4,-10,5,-10,-6,-1,9,9,5,3,7,9,4,-10,1,-8,1,-4,1,-3,4,-3,-5,7,6,-3,-2,6,4,-6,9,-10,3,-9,1,-3,-5,10,-3,-9,6,2,8,8,8,-7,-10,-9,2,-9,-9,9,-1,5,7,10,8,5,-4,8,-7,-10,3,-1,-5,-9,5,10,1,9,-9,-3,-5,-5,-1,10,9,4,9,-8,-8,-9,-6,-10,-4,5,9,4,-8,2,3,7,4,-3,-7,-7,7,9,-7,-10,-9,8,-3,-2,3,-10,10,8,9,6,2,2,-1,3,-1,1,-8,-7,-1,-3,5,-9,-1,8,8,-5,-9,-8,-7,8,-3,-7,10,-3,-5,5,10,-4,3,-8,-7,-1,-9,7,-1,-7,6,7,-9,6,7,-3,-5,7,-2,9,9,6,-1,7,7,-10,7,6,-8,-8,-4,-1,10,7,4,-1,-7,10,-9,-4,10,-9,1,-10,8,3,1,-10,-3,-4,4,7,-2,3,-5,-8,-9,9,2,9,7,3,8,-10,-2,-8,-10,2,-4,-3,-10,-4,-8,10,-2,2,-3,-9,10,-1,-4,1,-2,7,-7,-6,3,-9,1,-1,-10,-6,9,1,-7,-4,-9,-4,-9,10,-1,-7,4,-5,5,2,10,8,3,1,-2,-10,1,6,7,7,2,-2,10,-3,-5,2,-3,7,10,6,4,-4,10,-6,-6,6,-9,-4,8,-5,2,-10,-6,1,-8,7,-2,8,3,-10,-9,8,-5,-6,-10,5,6,1,4,-7,10,4,-7,4,6,-10,10,-2,10,7,-1,-6,-10,1,8,8,-6,-7,-5,-4,9,-8,1,4,-10,-1,-7,-9,3,-3,-10,6,1,8,8,-9,-5,6,6,7,-2,8,7,-6,-7,-9,8,-10,1,-9,1,6,2,2,-1,-6,1,-4,-1,-9,9,-5,5,8,-5,-7,-4,2,2,-5,-5,7,5,4,-2,-4,5,8,5,8,-4,6,-7,-3,2,-3,1,3,-9,-3,4,-10,7,8,5,-3,2,-6,-8,7,8,-7,8,-6,8,8,9,8,-9,9,4,-2,1,-3,-8,9,10,7,-7,-7,-2,-7,-4,-6,-3,6,9,2,-7,-1,7,2,-7,7,4,10,-8,7,-4,-6,10,-6,1,10,-7,6,-10,-1,-9,-2,-2,-9,9,-6,-10,4,4,10,-10,-5,1,10,10,-10,-2,2,-5,6,-8,1,-7,-10,4,8,2,10,-7,-7,-2,5,-3,7,9,-4,-8,-7,-7,-7,8,-5,-9,6,-5,-2,-3,-2,8,-4,7,-6,-2,-1,1,-10,-1,1,-1,-7,-1,-7,10,9,-1,4,1,-2,-4,-2,10,6,-10,-3,-4,-9,-3,-9,6,-8,-3,6,6,-8,10,5,-1,-1,-8,2,-9,6,9,-3,-5,3,-5,3,6,2,-1,-8,-10,5,-5,9,-10,-6,-2,6,-1,-7,-8,10,4,-2,10,9,-8,7,1,-9,-1,-2,3,-2,6,1,-2,10,4,2,1,-4,-6,-6,9,2,10,4,-9,-10,-6,9,-3,-7,-10,-8,10,1,5,5,-5,-3,-10,-10,3,-3,2,-10,-2,1,6,2,3,4,-3,3,7,-2,-3,5,4,-9,-4,1,-6,6,2,-9,-5,5,3,5,4,-8,-2,4,-3,-2,2,10,6,9,8,-4,-3,1,5,-8,3,-7,-1,1,-2,2,6,1,10,1,1,10,-4,-2,5,9,7,3,5,-1,-8,-4,-5,-8,6,-4,5,-1,-3,10,-2,-7,3,7,5,8,3,10,6,4,9,8,-1,5,-9,-3,-3,10,-10,5,-6,-1,-6,6,10,5,9,-7,2,6,6,4,10,5,-2,-7,5,9,2,-5,-5,-4,-4,5,-3,-9,10,8,9,10,-6,-2,-7,-4,6,1,-10,8,-8,-9,-5,9,2,-5,-3,-4,4,-9,7,-1,-3,-6,9,-8,-6,7,-7,-7,4,-2,5,-5,4,-9,7,5,2,4,3,8,9,1,2,7,-7,4,-6,10,-2,2,1,-9,7,6,-5,9,10,2,-7,-9,-1,-8,-1,-7,-1,2,6,-5,-5,3,5,-4,4,-8,-6,-9,3,3,8,-7,-1,-9,10,-10,-4,5,-6,6,-4,3,5,-6,-9,-2,-9,4,-10,6,6,7,8,-1,10,4,-4,-3,-9,7,7,5,-8,7,1,-10,-9,8,8,2,9,-9,5,3,-2,-3,10,7,6,-8,7,-5,4,6,5,7,7,8,-1,-7,-1,-3,8,-1,-4,-3,-6,1,-4,-3,6,6,7,5,-6,2,-3,-10,-5,-9,-9,-1,-3,-8,-1,9,-10,-1,8,6,10,-3,3,6,-6,6,-7,2,-1,-6,-9,2,-9,-8,-10,-1,2,-5,-9,10,6,-1,-7,3,-5,-2,6,-6,8,-2,-6,-1,10,3,7,-5,1,7,10,6,3,-2,2,3,-9,10,-9,4,-7,9,10,8,-9,-1,-7,4,7,-8,-1,-10,-6,-8,1,6,-10,-1,-6,-6,-6,-6,6,-2,6,-3,-10,9,-3,-5,-10,-10,4,3,-2,7,-3,-8,2,1,1,5,9,1,3,-6,-5,-3,10,10,-2,10,1,6,10,-1,3,4,2,-4,1,7,-10,4,-6,-4,3,-6,1,-8,-9,-4,7,-4,5,-5,2,10,-4,-2,1,1,-9,10,8,1,-9,10,2,6,-4,4,4,-7,-10,-1,4,-7,-6,3,5,1,-8,9,-9,-9,-7,-8,-9,-1,6,2,-1,-5,5,3,9,-5,7,8,10,-8,10,-8,-4,8,1,10,-8,-1,2,-5,7,9,-4,1,-4,-1,-8,-3,-7,2,10,10,-8,3,4,-2,-9,-9,10,9,1,-8,8,-3,4,-5,-9,2,-7,-9,6,3,4,10,-4,-8,6,5,-7,1,2,-6,10,-10,5,-9,1,-6,-6,9,-3,2,-2,5,5,-3,-9,-10,6,-7,9,6,10,7,8,3,-2,5,3,-3,4,-5,-2,-4,-7,3,-9,-8,-1,-6,-10,4,-7,3,-9,-8,10,-5,-10,-5,2,-3,-7,3,-5,-10,-9,6,-3,3,5,4,7,-2,-8,4,-6,-4,-7,2,-5,8,7,7,-4,4,6,-9,-7,9,-7,-7,1,6,10,3,-2,-9,-6,-3,-9,-2,-4,7,1,7,3,2,7,6,-8,3,10,3,10,-6,10,5,8,-5,10,-8,-6,-8,10,10,-1,-10,-5,-8,-8,6,-4,-3,-3,-3,8,7,-2,9,-7,10,2,-10,2,3,-4,-7,10,-1,8,-7,5,-10,-6,-9,-8,2,8,10,-2,9,4,4,-7,8,-1,2,6,3,3,-5,-10,2,1,-7,6,10,-3,7,-1,5,-9,-8,-9,7,2,2,2,-7,7,-7,1,5,2,-5,-9,5,-7,3,3,-7,-3,-6,-2,-8,-8,-2,-2,4,-10,-9,9,-7,8,-4,9,5,-8,-8,3,-9,-1,-9,-9,7,1,-10,-9,-9,-6,-7,4,-8,-4,-3,2,-7,3,6,-8,-5,8,-3,4,-3,7,-7,3,-1,2,3,6,-9,-5,-4,9,-5,-7,-1,10,-1,-3,8,-4,2,-3,-1,4,-1,-6,-5,6,-9,10,-4,-5,9,-1,-5,-6,-2,1,-9,5,7,6,-6,4,5,-7,-4,2,-2,10,10,6,4,-5,-4,4,-2,5,-5,5,-5,-7,-7,-4,-3,-6,-10,-5,10,9,2,7,-6,-2,-3,8,-9,7,-3,-5,-5,1,3,-10,-6,9,2,2,10,10,-10,3,3,-7,3,7,3,5,-2,1,4,7,-7,8,4,-3,6,6,-6,-10,-5,8,2,3,8,5,-3,-2,3,8,-7,2,6,5,-2,-2,-9,-4,6,7,9,-10,4,3,-3,5,-9,-3,6,9,-10,-7,-3,-4,-6,3,-2,-10,-4,-6,-1,6,7,-6,-7,4,-8,-10,2,10,-4,-5,-7,-5,-7,7,-9,9,4,2,2,1,-5,-1,-5,-6,5,5,6,10,-8,-1,-1,6,8,7,2,-2,-10,-5,-3,2,-4,-9,-5,-6,-7,4,9,-5,8,9,-1,8,-3,4,5,5,3,10,2,-4,4,8,8,10,-7,-7,-9,10,9,9,2,-3,-5,-6,2,-5,8,8,9,5,9,4,6,-2,-10,8,5,10,8,-7,5,-5,-9,10,-4,-4,6,3,-2,4,-7,7,-6,2,-2,-2,-2,10,1,9,-7,-8,-1,-3,-7,-6,-9,-4,1,-9,-4,-7,-8,-8,-9,4,-10,-6,-3,-3,-8,-5,-5,4,-7,-6,-3,-9,-10,-10,4,4,6,6,-1,-2,-9,5,-7,9,-1,-7,7,-5,-1,-7,-9,-2,3,4,6,-2,-4,10,-6,-7,3,1,-8,-9,1,7,-1,5,-6,7,-7,-10,5,-2,10,-6,-1,-4,-3,-9,3,6,-4,7,2,-1,-2,-9,2,6,3,4,-10,5,5,10,10,9,7,-4,-9,-9,6,6,3,10,5,-10,-4,10,10,7,-4,-6,2,1,4,2,7,-10,1,6,5,1,-4,-1,1,-4,4,-7,9,10,7,3,-2,-6,-4,9,8,-1,2,-7,-9,9,3,4,1,5,-7,-2,3,2,-10], dtype = "uint64")#candidate|2330|(1792,)|const|uint64
call_2329 = relay.TupleGetItem(func_2235_call(relay.reshape(const_2330.astype('uint64'), [14, 8, 16])), 0)
call_2331 = relay.TupleGetItem(func_2238_call(relay.reshape(const_2330.astype('uint64'), [14, 8, 16])), 0)
func_1198_call = mod.get_global_var('func_1198')
func_1200_call = mutated_mod.get_global_var('func_1200')
call_2332 = func_1198_call(relay.reshape(call_2305.astype('uint32'), [7, 8, 14]))
call_2333 = func_1198_call(relay.reshape(call_2305.astype('uint32'), [7, 8, 14]))
output = relay.Tuple([bop_2299,call_2305,var_2306,bop_2317,call_2329,const_2330,call_2332,])
output2 = relay.Tuple([bop_2299,call_2307,var_2306,bop_2317,call_2331,const_2330,call_2333,])
func_2336 = relay.Function([var_2252,var_2306,], output)
mod['func_2336'] = func_2336
mod = relay.transform.InferType()(mod)
var_2337 = relay.var("var_2337", dtype = "float32", shape = (8, 10, 5))#candidate|2337|(8, 10, 5)|var|float32
var_2338 = relay.var("var_2338", dtype = "uint32", shape = (784,))#candidate|2338|(784,)|var|uint32
output = func_2336(var_2337,var_2338,)
func_2339 = relay.Function([var_2337,var_2338,], output)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_2344 = relay.TupleGetItem(func_1948_call(), 0)
call_2345 = relay.TupleGetItem(func_1950_call(), 0)
output = call_2344
output2 = call_2345
func_2348 = relay.Function([], output)
mod['func_2348'] = func_2348
mod = relay.transform.InferType()(mod)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2349 = func_2348_call()
output = call_2349
func_2350 = relay.Function([], output)
mutated_mod['func_2350'] = func_2350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_2353 = relay.TupleGetItem(func_1821_call(), 0)
call_2354 = relay.TupleGetItem(func_1822_call(), 0)
func_2348_call = mod.get_global_var('func_2348')
func_2350_call = mutated_mod.get_global_var('func_2350')
call_2364 = func_2348_call()
call_2365 = func_2348_call()
bop_2371 = relay.multiply(call_2364.astype('uint32'), relay.reshape(call_2353.astype('uint32'), relay.shape_of(call_2364))) # shape=(13, 4, 12)
bop_2374 = relay.multiply(call_2365.astype('uint32'), relay.reshape(call_2354.astype('uint32'), relay.shape_of(call_2365))) # shape=(13, 4, 12)
func_2348_call = mod.get_global_var('func_2348')
func_2350_call = mutated_mod.get_global_var('func_2350')
call_2380 = func_2348_call()
call_2381 = func_2348_call()
func_789_call = mod.get_global_var('func_789')
func_792_call = mutated_mod.get_global_var('func_792')
var_2389 = relay.var("var_2389", dtype = "float32", shape = (11, 195))#candidate|2389|(11, 195)|var|float32
call_2388 = relay.TupleGetItem(func_789_call(relay.reshape(var_2389.astype('float32'), [15, 11, 13]), relay.reshape(var_2389.astype('float32'), [15, 11, 13]), ), 0)
call_2390 = relay.TupleGetItem(func_792_call(relay.reshape(var_2389.astype('float32'), [15, 11, 13]), relay.reshape(var_2389.astype('float32'), [15, 11, 13]), ), 0)
output = relay.Tuple([bop_2371,call_2380,call_2388,var_2389,])
output2 = relay.Tuple([bop_2374,call_2381,call_2390,var_2389,])
func_2392 = relay.Function([var_2389,], output)
mod['func_2392'] = func_2392
mod = relay.transform.InferType()(mod)
var_2393 = relay.var("var_2393", dtype = "float32", shape = (11, 195))#candidate|2393|(11, 195)|var|float32
output = func_2392(var_2393)
func_2394 = relay.Function([var_2393], output)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_2396 = relay.TupleGetItem(func_1948_call(), 1)
call_2397 = relay.TupleGetItem(func_1950_call(), 1)
output = relay.Tuple([call_2396,])
output2 = relay.Tuple([call_2397,])
func_2404 = relay.Function([], output)
mod['func_2404'] = func_2404
mod = relay.transform.InferType()(mod)
output = func_2404()
func_2405 = relay.Function([], output)
mutated_mod['func_2405'] = func_2405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_2484 = func_2038_call()
call_2485 = func_2038_call()
const_2490 = relay.const([[[5.182737,-8.229789,4.449496,6.878275,-7.310799,-7.234995,1.721735,-5.711367,-7.330755,-1.491346,8.182825,-8.366430],[-2.857468,5.773575,-7.216490,-8.316919,-1.577981,7.060334,-6.911035,-8.220830,-8.880434,2.330459,0.477159,-0.062989],[-8.927381,-4.951658,-9.349591,-6.988478,3.543935,4.391103,-3.263042,-3.085795,-4.022239,-8.736688,-2.446609,2.038521],[1.591678,-9.026869,-4.191170,5.211173,3.383618,6.441108,-5.628491,-6.515790,3.452881,3.983521,-5.397980,-2.344099]],[[0.604152,8.064576,-5.336161,-3.839711,3.259757,-3.703061,-3.070290,8.619212,9.699160,5.013852,-4.702745,8.861590],[9.404999,1.782996,-0.653158,5.351925,0.303877,-7.669653,3.874836,2.134070,5.241829,6.881293,6.594658,-1.016966],[3.473968,-8.309502,8.859720,5.814660,-8.343548,-1.767995,-3.676073,-7.748959,6.667086,3.281425,-3.536707,1.688382],[-5.694662,7.818334,3.548451,-0.183559,1.871408,-6.741943,5.621411,4.590631,2.760362,-7.915442,2.982123,8.806252]],[[3.207564,-1.900796,1.101992,-5.408730,-6.059090,-2.870589,6.847833,-3.492672,1.175637,4.961047,-1.613100,1.280169],[2.314837,6.878039,-5.759087,2.680148,-3.316396,0.022479,9.513589,7.508775,3.274322,-7.917859,6.889400,5.293864],[4.435614,7.319104,-8.540255,5.648886,-4.383563,-9.045113,7.050365,9.198299,3.493275,-9.137448,-8.564017,-4.691410],[5.678772,-3.012260,5.587121,4.130445,-6.265176,-3.383431,2.413117,-8.057577,8.307294,7.032406,-4.056855,-4.260027]],[[8.050437,9.745542,-2.737744,-4.378125,-7.550425,-1.880641,-0.023944,-0.386471,-7.665228,8.718666,6.556901,-8.797242],[7.530363,6.120903,-2.186958,8.985702,-9.910323,0.776076,5.976964,-5.836862,-8.539986,3.255789,8.148848,4.082222],[7.440741,5.637520,1.618163,8.198440,1.487865,-2.632168,-7.998703,-2.443877,-4.394408,1.311902,5.820051,8.878254],[3.373583,-4.450832,5.440545,-6.660767,2.982749,5.268429,9.315424,8.220266,5.777834,-0.683827,3.457609,0.107500]],[[-1.735365,8.178584,-8.594647,8.182758,-0.498693,-0.432510,-8.460665,-2.145399,5.043464,-9.545034,-0.346386,4.070355],[3.906492,3.341683,-4.668212,6.800353,5.975666,-1.202811,0.855488,0.500880,-9.955572,7.353668,2.086322,-5.930747],[3.894917,7.256458,-8.289515,-6.232471,6.894624,-8.178050,-2.695716,-6.687399,2.507763,4.387295,6.909049,-8.690153],[9.657311,-4.408112,0.626989,7.864875,0.732327,-5.712632,2.152516,2.741829,-2.849652,0.099878,6.841301,-8.772374]],[[-5.124519,-3.739442,2.751060,8.138579,-5.111412,6.243139,-1.331170,0.379814,6.028519,1.902663,-5.518214,1.627346],[8.244028,7.137696,5.370961,4.746624,1.630893,2.861189,-3.084220,3.564419,-1.035962,-8.303043,4.263333,-6.661276],[9.699180,-1.161520,-3.731626,-4.697631,-6.649573,0.951413,5.740846,7.392093,-0.509076,0.960213,-9.468260,4.354923],[6.771032,7.198590,5.403721,-7.985824,-8.266675,-3.213970,-5.102466,-0.821772,-0.277704,-9.454551,-1.558554,4.384834]],[[-4.746807,1.647586,5.886014,5.882465,-4.642225,-0.958274,-7.219925,-3.271339,8.187228,-3.470956,7.617769,-9.976853],[-4.340526,3.755646,-8.621416,6.706858,-5.358323,7.254484,3.259011,-8.911637,-3.291948,-7.219680,6.268608,9.422332],[9.181107,7.151094,-9.269285,1.568521,-9.795863,8.571115,6.400685,-6.996207,1.033283,3.104804,-9.583670,-3.575386],[-1.390151,-7.702362,1.966306,-7.125078,3.729703,3.266037,8.449299,-3.548520,6.511573,1.449396,-8.821382,-3.642489]],[[0.117638,-0.758319,-8.116699,-7.618181,7.360411,-5.993111,-1.278694,-8.286961,-3.114380,6.069039,-4.490040,-1.083309],[3.311628,-0.756568,7.869808,8.853557,-1.304426,-5.837302,-4.228294,-6.279100,6.658390,-3.023206,5.960453,6.418748],[-6.340432,-1.216040,-8.435896,0.825547,-2.222750,9.398681,-7.353151,-4.754732,5.091921,7.044341,-8.910269,2.379552],[6.320211,8.570692,-5.838549,-0.850267,-2.927323,7.740965,4.472630,-6.192513,-6.174002,1.267665,0.039042,-3.445352]],[[7.083265,-6.527275,7.807804,2.980555,-1.039395,5.092888,-2.658643,7.572760,-9.780983,2.533544,3.378391,1.335087],[-4.832930,1.657598,2.312142,-0.540327,9.089140,-9.710982,-7.489368,5.729288,-4.015807,-6.931409,6.958555,1.500735],[-1.797846,4.097658,4.407883,-0.616103,-9.839921,4.272547,5.893380,-0.150480,-9.387414,0.371228,-3.961036,2.675108],[5.862479,0.545693,-7.370031,5.361659,-9.755367,-9.345132,2.080509,3.714634,-1.587161,1.348813,-1.310794,9.807731]],[[-4.620843,1.354007,1.954337,-9.270695,-9.231494,8.461034,-5.152461,-9.473547,-9.376273,-3.223854,7.742919,8.587442],[-9.454283,4.350735,-8.554817,-0.974778,3.411425,1.059242,-4.349882,7.622319,-3.718480,9.586419,4.897975,5.348478],[1.345501,-4.554622,1.168485,-6.694404,-4.356426,-1.983812,-3.214967,-2.220947,-1.099569,4.758519,6.230266,-2.437765],[1.799309,-7.642227,5.579029,-5.907712,-5.319528,4.441783,-2.329163,3.633770,1.748162,5.304542,-8.512285,8.949131]],[[-7.835451,-5.149941,2.200059,4.782630,-1.523021,-0.126581,1.763819,-1.368985,6.049955,3.560067,-7.118760,-2.648274],[-6.285968,3.924862,1.479972,3.982427,0.163219,3.387901,-2.421822,-6.481625,6.583038,-8.486293,3.432156,-6.683460],[-6.710423,4.132171,-6.248422,-0.317225,8.957845,-0.811585,-2.437996,-9.266876,3.339105,5.813178,-0.616448,-6.677144],[-4.002617,-7.593916,-5.284681,-4.317537,-7.957381,9.927616,7.780920,8.099505,6.781896,-2.938333,-1.291312,-5.573293]],[[-4.852877,8.324625,2.262547,-4.220932,4.662194,6.082800,6.406552,-2.728728,0.225362,2.760881,-2.613114,-6.956562],[-4.574412,7.263220,9.743376,-7.417311,9.048512,8.071953,8.588228,-1.915286,-9.958161,-2.228333,6.361942,-7.848954],[-5.349139,-7.076044,-9.952145,0.991647,0.228058,9.680654,-3.899166,-3.628971,-5.900673,-9.364660,-5.763824,-5.829511],[-8.730119,-9.932856,9.011389,4.931406,-3.878955,-2.001182,-3.065157,9.909163,9.608646,-1.330729,-1.018173,2.395617]],[[-0.154150,5.997274,4.306629,-9.159030,-8.227266,3.409488,6.831736,-3.167251,-1.337520,-2.360905,-5.542706,-6.871310],[5.444060,3.425879,-4.848160,-6.327380,-4.569177,6.540448,1.150168,5.742322,-6.034585,8.262524,6.675504,-5.182756],[0.102116,-0.446904,-4.009065,1.500118,-2.982919,-8.704096,8.581587,4.999136,-1.072160,2.840566,-9.523898,3.461099],[-3.900791,-1.173733,-9.087439,6.300004,-9.144986,9.059804,3.467627,-4.732068,3.649858,-0.693444,7.743753,-2.776674]]], dtype = "float32")#candidate|2490|(13, 4, 12)|const|float32
bop_2491 = relay.greater(call_2484.astype('bool'), relay.reshape(const_2490.astype('bool'), relay.shape_of(call_2484))) # shape=(13, 4, 12)
bop_2494 = relay.greater(call_2485.astype('bool'), relay.reshape(const_2490.astype('bool'), relay.shape_of(call_2485))) # shape=(13, 4, 12)
uop_2497 = relay.sinh(call_2484.astype('float32')) # shape=(13, 4, 12)
uop_2499 = relay.sinh(call_2485.astype('float32')) # shape=(13, 4, 12)
uop_2502 = relay.log10(uop_2497.astype('float32')) # shape=(13, 4, 12)
uop_2504 = relay.log10(uop_2499.astype('float32')) # shape=(13, 4, 12)
func_2235_call = mod.get_global_var('func_2235')
func_2238_call = mutated_mod.get_global_var('func_2238')
const_2508 = relay.const([[2,-4,10,-10,7,-9,-9,3,-1,3,-8,7,-10,-2,9,-10,7,-9,-5,-5,7,5,6,1,6,-5,-10,6,3,6,9,5,10,-2,-1,1,4,-3,1,10,-9,-2,7,-10,-8,-2,-2,5,-1,1,4,9,8,-10,9,8,5,4,10,4,-10,-4,-5,8,-6,7,9,-9,9,7,9,3,-5,-8,3,-10,-10,9,5,-9,-4,-2,2,1,-9,1,-4,-4,3,4,5,3,2,1,9,8,-6,-10,2,-4,-2,10,9,-8,7,-2,-8,10,-9,9,10,-3,8,7,-7,-2,3,-8,6,-7,-8,7,-4,-7,-7,10,4,2,-9,3,-9,6,6,6,-7,-9,4,2,3,10,6,5,-5,5,7,9,-4,2,8,4,-3,-4,-8,-4,6,1,3,-5,7,2,9,-2,8,-4,3,6,10,-2,6,1,9,-5,2,-3,-9,2,6,-10,-9,-1,-2,-8,-4,-3,8,4,6,4,-9,-6,9,8,-4,-8,-3,-7,5,-9,8,1,4,5,-5,9,-5,-2,-2,10,1,1,6,-10,3,-1,-1,-9,8,-8,-5,6,-1,4,1,1,1,-5,-10,-1,-4,6,-7,-2,-10,-7,-7,-7,-3,2,-5,5,3,-5,7,-5,-10,-8,-5,1,1,2,-3,4,10,-10,-9,2,-7,4,-3,-4,-2,-10,-5,2,-9,3,3,-9,-3,7,4,-5,-6,-4,10,4,4,-6,-4,-4,5,6,7,1,4,4,-9,8,8,6,4,7,-3,7,-3,10,-10,-6,-2,7,-6,4,7,-1,-8,2,-7,1,2,-7,1,-3,-4,8,-7,-1,-5,8,-7,-9,-8,-8,-10,4,7,8,-9,-10,1,10,-2,-1,-6,-3,2,9,-4,4,3,7,1,7,6,4,5,5,7,-8,-9,-7,2,-10,2,-10,5,-7,1,-8,-3,-6,10,-8,9,9,7,-8,1,-5,3,-8,-3,7,-8,4,-1,10,10,-6,5,7,-1,-1,5,5,-3,8,-9,1,2,-1,-4,4,-2,-6,-10,-7,10,-5,-3,-4,-5,-2,9,-4,-9,-6,7,-10,4,5,9,-5,7,-5,-8,7,-3,-10,4,-5,-10,-9,-3,-7,5,1,2,-6,-3,3,9,-7,-1,-5,2,10,-3,10,-8,-4,-6,10,8,1,6,-5,4,-7],[2,9,-2,-5,-6,2,1,-10,9,-7,5,-10,-9,-5,-10,5,-6,5,3,-4,4,-4,10,-2,-3,7,6,-10,4,-8,-10,6,7,-4,1,1,2,2,9,-2,-2,2,-8,-5,-8,9,-5,-3,-6,5,3,-3,-1,-10,9,-7,-2,-1,1,-7,8,-8,2,-5,6,-6,-6,-7,-3,9,8,-7,5,5,5,-9,-7,-3,-8,-7,-10,7,-1,-5,9,10,-2,-10,-6,-6,-4,-1,-2,1,-3,-6,1,-1,6,-1,-1,-4,10,9,6,5,10,4,10,-2,4,-8,-1,-9,4,-2,3,-6,-10,6,-2,-8,9,-4,7,-4,4,-8,-10,4,7,8,3,-2,3,-9,-3,7,2,10,9,-10,3,-10,5,8,-9,3,-10,-5,6,-8,-2,8,-8,3,2,10,1,10,-3,9,5,-4,-6,-10,2,1,4,-7,-10,10,6,-9,10,-5,8,-5,-6,9,-5,-6,6,-10,-9,-3,-9,-2,2,4,-9,-7,4,1,10,-4,1,-3,-1,9,1,-10,-6,-7,-4,-2,-1,1,10,5,-5,6,-1,5,3,-4,6,5,6,10,-3,4,-1,9,-10,3,5,1,2,10,8,8,-7,7,6,-7,10,-5,6,-4,8,2,-1,-1,-7,-6,4,10,-8,-9,4,5,5,7,-6,10,10,-9,-4,-2,1,7,-4,9,4,10,1,-2,-7,-10,9,7,1,-10,6,6,-2,3,10,9,9,1,-7,8,1,-7,9,2,1,7,-4,7,7,-3,1,10,3,9,6,4,-5,-10,6,-4,-3,-6,-5,-4,-2,-7,9,4,1,-2,1,4,6,2,-5,-10,-7,-7,9,3,8,-8,-1,9,-8,-7,-6,6,-7,5,-5,2,1,-6,-1,-4,1,6,-4,4,-7,-10,-3,6,-7,4,3,-3,9,5,-10,-1,-10,-5,-1,6,-9,2,5,4,6,-3,7,-5,7,6,-8,-8,-1,5,-1,3,-7,6,10,3,7,9,4,-10,-4,6,-1,-2,-1,-8,6,-4,4,-7,9,4,-8,2,5,-10,-6,2,-5,2,9,-8,-1,10,-4,4,10,1,-9,9,7,-2,8,-2,8,10,-6,-4,5,-6,4,-4,6,-10,10,-8,1,-2,5,3,-10,3,-3,6,-3,-7,-10,1,8,-2,1,7,-1,-10],[-3,-2,-7,-10,3,8,-8,-3,8,6,-5,4,8,9,-8,-8,3,-3,-4,-3,-1,-3,8,9,1,-9,4,2,5,-3,-2,4,-10,8,-4,-3,1,-3,-3,2,8,8,-7,5,-6,4,7,5,-9,-3,3,-5,1,5,10,6,1,9,-6,1,-3,10,-5,9,-8,-6,-6,9,-8,-9,-4,-6,1,-4,-10,-9,-9,2,3,-9,-4,6,-5,7,-1,-4,3,9,-5,-1,7,-7,8,-4,1,-6,8,4,8,1,-10,-4,4,7,8,6,7,-4,5,7,-1,2,4,-5,9,-2,10,4,-9,7,10,-3,-9,3,4,9,-5,-5,6,3,-5,-4,1,10,8,7,1,6,-6,-3,9,6,-2,4,10,-3,10,-9,-7,1,6,-5,8,6,-10,-6,10,4,-2,2,-6,6,-4,9,6,9,9,-9,-5,3,-4,6,-1,-8,9,-7,-6,-2,-10,4,-10,7,6,8,-3,-9,-10,-2,7,3,1,2,-5,-8,3,10,-4,5,-5,3,4,4,9,4,-8,-4,7,6,10,6,7,-9,4,-1,6,4,6,-3,-4,2,4,-10,-4,2,2,9,5,-10,-1,6,5,-9,-10,7,-1,-7,-7,-5,-5,4,8,-7,-1,-10,8,-2,-9,-5,5,-4,-2,-1,-8,-9,5,2,-7,6,8,10,3,-10,-5,1,10,6,6,3,4,-9,-5,4,-10,10,6,5,-4,-4,-1,-8,-10,-2,-2,10,-7,8,-10,6,3,-9,7,-2,10,-9,3,-1,-2,9,8,-1,-10,10,3,3,3,-9,-7,-3,-7,5,8,2,9,-5,3,-5,-6,7,1,7,2,-6,7,6,-2,3,-9,1,8,-6,-3,-6,-3,10,2,10,3,3,-7,-3,1,8,-3,-7,-6,-4,3,-8,10,2,7,-6,-8,-2,9,4,3,10,-3,-9,-10,-6,2,1,5,-5,-5,-5,-3,8,2,4,5,3,10,7,-6,3,10,-9,-7,-7,7,-5,-9,-4,6,6,9,1,1,9,2,5,-8,-7,1,7,-8,-10,-5,5,10,5,1,1,6,1,-6,2,-3,8,4,3,8,-10,8,6,-7,9,9,-3,-2,6,1,1,-6,-7,6,6,-3,-9,-2,-1,8,-8,-2,3,-5,3,7,-7,4,-7,4,-6,-8,10],[-10,10,2,4,-10,7,5,1,-3,7,4,10,7,-9,-3,-6,1,-10,5,5,2,-1,2,-1,10,-2,1,-4,-2,-5,1,7,-9,-5,10,10,-1,-8,-2,-6,8,9,-4,10,-8,-8,-8,3,3,-2,5,4,2,9,-5,-8,-4,4,2,3,-1,-8,-7,8,6,-2,1,-9,10,-9,-2,7,6,8,-5,5,-4,-5,-6,1,-3,5,1,-1,1,-5,8,2,3,-1,1,-6,-1,-5,6,-8,-1,6,-8,-2,-8,-5,2,2,9,6,9,6,5,-6,-1,9,-1,3,-2,2,5,10,-7,3,-6,-10,2,-7,-1,-5,9,-2,1,-2,2,4,-3,3,7,-8,6,9,5,-5,9,7,-4,-10,6,-9,-8,-6,-7,9,-8,6,6,-1,1,7,6,10,5,-6,-2,1,-7,-10,-7,-8,-7,-8,2,-6,-9,-3,-7,6,10,4,8,3,2,10,2,6,-6,4,6,-9,5,10,4,5,-2,8,-4,-5,-4,-8,5,-10,8,9,6,-1,-9,-4,-8,6,7,8,-7,-10,10,-9,-9,5,5,-3,1,1,-4,-2,-3,2,4,-3,-5,-2,-10,9,2,-9,10,-7,6,3,-2,-2,-5,4,6,-2,10,-5,7,-10,-2,7,10,4,-3,-6,2,-9,-2,-10,-10,-9,-6,-9,-2,5,9,-7,7,7,-8,4,-8,-9,-6,1,1,6,-6,-2,5,2,9,-5,1,-4,-4,9,1,-4,-8,3,-5,-7,-4,-1,4,7,5,10,5,-4,-4,10,-2,-4,-1,10,-6,9,5,2,-5,5,-10,-5,8,-3,10,-8,10,-3,-9,-7,1,6,5,-7,7,-10,4,-2,-3,-7,-8,7,6,-7,4,-1,-9,1,7,6,-8,10,2,-6,-7,-9,-7,3,8,-2,3,7,2,-9,6,10,-4,9,4,-2,-10,6,-9,3,-8,-2,-8,-4,-9,-9,10,2,-2,1,-6,-7,-6,-4,-1,-2,3,9,-3,2,-7,8,10,3,-10,-10,-9,-1,-9,10,3,6,-6,-7,-7,10,10,3,-9,-4,3,3,10,-7,-2,-6,8,1,6,-2,7,-8,1,10,8,-9,7,-2,-10,5,-5,7,2,5,5,2,-1,-2,-10,2,-6,6,5,-2,7,6,-8,-5,-2,10,-10,-3,3,-3,6,10]], dtype = "uint64")#candidate|2508|(4, 448)|const|uint64
call_2507 = relay.TupleGetItem(func_2235_call(relay.reshape(const_2508.astype('uint64'), [14, 8, 16])), 1)
call_2509 = relay.TupleGetItem(func_2238_call(relay.reshape(const_2508.astype('uint64'), [14, 8, 16])), 1)
uop_2516 = relay.acosh(uop_2502.astype('float32')) # shape=(13, 4, 12)
uop_2518 = relay.acosh(uop_2504.astype('float32')) # shape=(13, 4, 12)
output = relay.Tuple([bop_2491,call_2507,const_2508,uop_2516,])
output2 = relay.Tuple([bop_2494,call_2509,const_2508,uop_2518,])
func_2521 = relay.Function([], output)
mod['func_2521'] = func_2521
mod = relay.transform.InferType()(mod)
output = func_2521()
func_2522 = relay.Function([], output)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2553 = relay.var("var_2553", dtype = "int64", shape = (1, 3, 11))#candidate|2553|(1, 3, 11)|var|int64
const_2554 = relay.const([[[5,9,6,9,3,-8,-5,-9,-9,-8,1],[-2,-2,-8,9,-3,1,8,7,-9,-7,-7],[1,-3,2,1,-9,-8,3,-4,-1,7,-10]],[[-9,2,5,9,2,-8,2,8,-7,-6,8],[10,-2,-10,5,5,6,6,-7,-5,-4,-3],[5,10,10,7,-5,-1,-10,-7,-2,-8,10]],[[-2,-8,-3,10,-1,-9,6,-6,9,-2,8],[3,4,10,6,6,4,-4,8,-4,8,-9],[5,1,-7,-6,2,4,7,-10,1,-2,1]],[[5,10,8,5,6,3,5,8,-4,-3,6],[2,2,1,-2,9,-2,7,7,-7,3,8],[-9,1,9,-4,3,-3,1,8,8,9,6]],[[-10,-7,6,7,9,-2,-9,-6,8,-1,4],[-6,-3,10,2,7,9,-9,5,-10,-1,-9],[-7,-5,4,-5,8,-3,-6,5,10,-10,-8]],[[-5,4,-9,10,-5,-3,-2,-8,7,10,7],[4,-4,5,-3,-4,8,-6,2,7,10,10],[8,1,-2,-7,7,-10,-6,-4,8,9,-5]],[[-2,-10,-4,8,-4,-2,4,-6,-4,10,3],[-10,7,4,-3,3,-5,6,-5,3,-5,-4],[8,7,4,-7,5,5,-5,-2,-9,-8,9]],[[-4,-2,-4,4,3,-2,6,-10,-5,8,1],[-1,4,9,4,5,10,7,-2,4,2,8],[1,1,-4,-6,-4,9,4,-1,-6,6,-4]]], dtype = "int64")#candidate|2554|(8, 3, 11)|const|int64
bop_2555 = relay.greater(var_2553.astype('bool'), const_2554.astype('bool')) # shape=(8, 3, 11)
bop_2559 = relay.add(var_2553.astype('int64'), bop_2555.astype('int64')) # shape=(8, 3, 11)
output = relay.Tuple([bop_2559,])
output2 = relay.Tuple([bop_2559,])
func_2564 = relay.Function([var_2553,], output)
mod['func_2564'] = func_2564
mod = relay.transform.InferType()(mod)
mutated_mod['func_2564'] = func_2564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2565 = relay.var("var_2565", dtype = "int64", shape = (1, 3, 11))#candidate|2565|(1, 3, 11)|var|int64
func_2564_call = mutated_mod.get_global_var('func_2564')
call_2566 = func_2564_call(var_2565)
output = call_2566
func_2567 = relay.Function([var_2565], output)
mutated_mod['func_2567'] = func_2567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_2573 = relay.TupleGetItem(func_2521_call(), 3)
call_2574 = relay.TupleGetItem(func_2522_call(), 3)
output = call_2573
output2 = call_2574
func_2588 = relay.Function([], output)
mod['func_2588'] = func_2588
mod = relay.transform.InferType()(mod)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2588_call = mutated_mod.get_global_var('func_2588')
call_2589 = func_2588_call()
output = call_2589
func_2590 = relay.Function([], output)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_2734 = func_2038_call()
call_2735 = func_2038_call()
var_2756 = relay.var("var_2756", dtype = "float32", shape = (13, 4, 12))#candidate|2756|(13, 4, 12)|var|float32
bop_2757 = relay.logical_and(call_2734.astype('bool'), relay.reshape(var_2756.astype('bool'), relay.shape_of(call_2734))) # shape=(13, 4, 12)
bop_2760 = relay.logical_and(call_2735.astype('bool'), relay.reshape(var_2756.astype('bool'), relay.shape_of(call_2735))) # shape=(13, 4, 12)
bop_2772 = relay.floor_mod(var_2756.astype('float64'), relay.reshape(call_2734.astype('float64'), relay.shape_of(var_2756))) # shape=(13, 4, 12)
bop_2775 = relay.floor_mod(var_2756.astype('float64'), relay.reshape(call_2735.astype('float64'), relay.shape_of(var_2756))) # shape=(13, 4, 12)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_2780 = relay.TupleGetItem(func_1907_call(), 0)
call_2781 = relay.TupleGetItem(func_1908_call(), 0)
uop_2787 = relay.atanh(call_2780.astype('float32')) # shape=(13, 4, 12)
uop_2789 = relay.atanh(call_2781.astype('float32')) # shape=(13, 4, 12)
func_2404_call = mod.get_global_var('func_2404')
func_2405_call = mutated_mod.get_global_var('func_2405')
call_2790 = relay.TupleGetItem(func_2404_call(), 0)
call_2791 = relay.TupleGetItem(func_2405_call(), 0)
bop_2800 = relay.logical_or(uop_2787.astype('bool'), relay.reshape(bop_2757.astype('bool'), relay.shape_of(uop_2787))) # shape=(13, 4, 12)
bop_2803 = relay.logical_or(uop_2789.astype('bool'), relay.reshape(bop_2760.astype('bool'), relay.shape_of(uop_2789))) # shape=(13, 4, 12)
output = relay.Tuple([bop_2772,call_2790,bop_2800,])
output2 = relay.Tuple([bop_2775,call_2791,bop_2803,])
func_2804 = relay.Function([var_2756,], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2805 = relay.var("var_2805", dtype = "float32", shape = (13, 4, 12))#candidate|2805|(13, 4, 12)|var|float32
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2806 = func_2804_call(var_2805)
output = call_2806
func_2807 = relay.Function([var_2805], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2404_call = mod.get_global_var('func_2404')
func_2405_call = mutated_mod.get_global_var('func_2405')
call_2811 = relay.TupleGetItem(func_2404_call(), 0)
call_2812 = relay.TupleGetItem(func_2405_call(), 0)
output = call_2811
output2 = call_2812
func_2813 = relay.Function([], output)
mod['func_2813'] = func_2813
mod = relay.transform.InferType()(mod)
mutated_mod['func_2813'] = func_2813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2813_call = mutated_mod.get_global_var('func_2813')
call_2814 = func_2813_call()
output = call_2814
func_2815 = relay.Function([], output)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_2825 = func_2038_call()
call_2826 = func_2038_call()
output = relay.Tuple([call_2825,])
output2 = relay.Tuple([call_2826,])
func_2845 = relay.Function([], output)
mod['func_2845'] = func_2845
mod = relay.transform.InferType()(mod)
output = func_2845()
func_2846 = relay.Function([], output)
mutated_mod['func_2846'] = func_2846
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2860 = relay.const([[[6.174722,8.349387,-6.020631,-4.957548,-4.609182,-2.736755,4.096349,2.899996,-9.213461,-5.319657,-2.101435,-5.949220]]], dtype = "float32")#candidate|2860|(1, 1, 12)|const|float32
uop_2861 = relay.erf(const_2860.astype('float32')) # shape=(1, 1, 12)
output = uop_2861
output2 = uop_2861
func_2865 = relay.Function([], output)
mod['func_2865'] = func_2865
mod = relay.transform.InferType()(mod)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2865_call = mutated_mod.get_global_var('func_2865')
call_2866 = func_2865_call()
output = call_2866
func_2867 = relay.Function([], output)
mutated_mod['func_2867'] = func_2867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_2892 = func_2038_call()
call_2893 = func_2038_call()
output = relay.Tuple([call_2892,])
output2 = relay.Tuple([call_2893,])
func_2912 = relay.Function([], output)
mod['func_2912'] = func_2912
mod = relay.transform.InferType()(mod)
output = func_2912()
func_2913 = relay.Function([], output)
mutated_mod['func_2913'] = func_2913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_2914 = relay.TupleGetItem(func_2845_call(), 0)
call_2915 = relay.TupleGetItem(func_2846_call(), 0)
output = relay.Tuple([call_2914,])
output2 = relay.Tuple([call_2915,])
func_2916 = relay.Function([], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
output = func_2916()
func_2917 = relay.Function([], output)
mutated_mod['func_2917'] = func_2917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_2936 = relay.TupleGetItem(func_2521_call(), 1)
call_2937 = relay.TupleGetItem(func_2522_call(), 1)
func_2521_call = mod.get_global_var('func_2521')
func_2522_call = mutated_mod.get_global_var('func_2522')
call_2938 = relay.TupleGetItem(func_2521_call(), 2)
call_2939 = relay.TupleGetItem(func_2522_call(), 2)
func_2865_call = mod.get_global_var('func_2865')
func_2867_call = mutated_mod.get_global_var('func_2867')
call_2944 = func_2865_call()
call_2945 = func_2865_call()
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_2946 = relay.TupleGetItem(func_1948_call(), 0)
call_2947 = relay.TupleGetItem(func_1950_call(), 0)
output = relay.Tuple([call_2936,call_2938,call_2944,call_2946,])
output2 = relay.Tuple([call_2937,call_2939,call_2945,call_2947,])
func_2948 = relay.Function([], output)
mod['func_2948'] = func_2948
mod = relay.transform.InferType()(mod)
output = func_2948()
func_2949 = relay.Function([], output)
mutated_mod['func_2949'] = func_2949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_2964 = relay.TupleGetItem(func_1907_call(), 0)
call_2965 = relay.TupleGetItem(func_1908_call(), 0)
func_2588_call = mod.get_global_var('func_2588')
func_2590_call = mutated_mod.get_global_var('func_2590')
call_2970 = func_2588_call()
call_2971 = func_2588_call()
func_2392_call = mod.get_global_var('func_2392')
func_2394_call = mutated_mod.get_global_var('func_2394')
const_2977 = relay.const([[-3.647723,-4.088168,-1.603617],[-0.711461,4.103115,-3.052514],[-0.262804,6.392262,-3.233934],[-2.708681,-4.634744,-9.113596],[-3.872593,0.364360,-4.793289],[3.709763,5.654675,9.057918],[-6.297063,-2.124313,-6.934153],[7.143766,-2.451468,8.596421],[-0.885377,0.070377,-5.304021],[6.216161,7.357573,3.592783],[2.019178,-4.680797,-8.957828],[-5.261079,4.046305,-6.918836],[-3.093047,-4.864112,8.528918],[1.052616,-3.658422,-6.921741],[-6.107126,0.675815,0.207693],[-9.623489,2.840346,6.237153],[-4.843551,-7.977570,-1.295326],[4.059599,9.371321,5.714129],[5.792430,-8.775205,9.089777],[-4.413275,-5.453486,-4.287626],[7.045355,1.123399,5.339500],[-5.084448,-6.492528,-2.920998],[-5.697985,1.797017,4.988640],[-1.577804,-8.944852,-0.810213],[9.982175,1.300653,-1.289280],[8.654664,-7.096453,7.873559],[3.832851,0.886935,-3.069971],[-3.423214,-2.105486,-5.985920],[7.152802,-3.377281,8.769379],[1.773265,-0.602293,6.724296],[-2.126112,-9.466331,9.133040],[6.729149,7.593580,-9.728822],[-3.905241,-9.079045,8.088794],[-5.315751,0.247811,-3.999033],[-9.218058,-2.801831,-9.063757],[0.061324,-4.615572,-7.010100],[6.490788,0.119490,-3.424013],[4.569651,-1.340517,4.000083],[-3.512734,-3.685659,9.264178],[6.307865,2.833081,-7.924120],[1.066119,-5.668138,5.938995],[6.601596,-4.146723,2.744462],[-3.752536,5.635429,9.240286],[-2.207853,7.572818,0.272788],[4.650151,-8.510658,-9.542366],[1.967768,-7.420180,-3.006752],[-0.115924,7.374299,-1.994684],[7.945712,3.703051,5.926559],[-7.118597,-5.887756,6.615728],[-2.269764,-2.715683,7.835015],[8.053970,-7.509245,-9.467386],[5.350059,-6.629426,-5.563988],[5.658793,-9.615886,-5.282326],[3.548584,4.319952,-1.369001],[-9.811253,-6.130590,3.259298],[5.313637,-6.728082,1.100615],[-3.218113,0.654463,5.817123],[0.475154,8.487666,1.751502],[-9.510372,-7.394634,-9.550554],[-4.845809,1.833626,-9.871619],[-9.644029,5.715560,1.225733],[8.803725,5.651181,2.246355],[-7.803909,-6.340508,-2.984937],[-7.556646,-7.617050,-6.963706],[9.582514,9.859886,5.741296],[-6.152805,-8.173038,-1.147505],[-4.044433,1.347507,-9.742162],[-8.787979,-0.984670,4.648844],[-4.684084,7.231689,-5.658860],[2.258372,-5.999880,7.565032],[-2.996755,1.430132,4.154344],[3.336391,8.557077,-1.063617],[6.067948,6.781749,7.013982],[-7.773059,-2.510863,-8.116867],[5.790871,-0.551139,3.430093],[-7.561184,9.491141,-6.526557],[7.253271,-9.078118,-0.094122],[9.555503,0.003259,2.827511],[3.081891,-9.034457,8.027265],[-8.229765,6.154928,-2.413786],[-2.587155,-6.801234,-7.490611],[8.710214,-6.554564,7.383410],[-5.127119,-3.084028,7.648689],[-1.677086,8.369868,-1.592922],[8.186305,-5.761403,7.656666],[9.405959,4.358788,-5.859470],[-7.563153,0.786155,5.711858],[-6.542390,8.940829,-8.526132],[-2.001165,5.508168,1.374105],[7.165027,1.844837,1.950174],[-6.196382,-3.465892,8.725829],[-4.090366,-6.497965,-8.878329],[-9.137152,9.293744,-7.491252],[-8.017880,-1.690836,-7.175860],[8.732844,3.845109,9.590274],[3.778527,8.163993,2.966148],[-7.702314,6.352294,-1.622455],[7.583720,-8.656778,-6.576056],[-2.775259,3.051502,8.773194],[-2.341532,1.282389,8.571548],[6.957551,9.259686,-0.988902],[5.184617,-5.626797,-8.000319],[-3.631561,8.620663,-5.000709],[6.836437,-2.194530,-2.992996],[4.907863,-9.628526,-5.428297],[1.613718,-4.518677,-3.013813],[-4.422117,-5.356132,-7.994675],[0.413091,-4.433223,7.083254],[-0.602066,7.702139,-6.315450],[-6.678057,-1.976424,-6.447171],[-3.903559,-1.712199,-6.273749],[-2.856836,-1.072920,5.348985],[4.121456,-4.936946,4.463650],[-2.852190,-8.036304,-7.962466],[8.623569,-7.634366,2.283915],[-4.522532,6.242886,6.643716],[-3.771787,-9.454847,-2.534058],[7.634830,-4.396274,1.237106],[-4.666683,3.858818,5.710033],[2.849102,5.539525,-7.056968],[-8.169534,-9.333079,-6.860304],[-0.766071,1.538814,5.340888],[-2.214613,1.634393,-0.461434],[1.109690,8.124536,-6.703232],[-9.245613,0.356624,1.715078],[5.151737,0.647663,8.136701],[4.552021,-3.258493,-5.088992],[-2.846947,-6.949488,3.872933],[-0.995020,9.676589,-7.530291],[-2.020846,2.203499,-1.430849],[4.015512,6.630644,0.407664],[-8.980556,-8.205284,-6.129412],[7.028100,0.674823,-3.180445],[-9.239423,1.492971,-8.734047],[6.953350,3.825475,8.244417],[-6.134530,5.330405,1.070665],[-0.836620,2.684590,-9.103675],[-6.250350,-3.801533,5.437912],[-3.567493,0.720752,-1.663572],[4.568576,-5.508943,-8.455315],[-7.044074,-5.767934,-3.208707],[9.077279,-5.188073,0.074100],[-7.384605,-4.347314,-7.390227],[5.233293,4.020266,-5.871847],[8.602969,-3.600023,-2.552461],[5.123392,3.321993,-5.362694],[7.676699,-5.319977,-8.987347],[-2.853134,8.129357,6.829969],[-0.065147,7.904654,6.303871],[3.464756,5.581333,-0.398347],[1.022734,6.869106,-8.454186],[-2.002437,3.572779,4.966612],[4.252685,-0.265246,-3.546885],[-4.881917,-1.058110,-1.118363],[5.578594,-6.317482,5.949254],[8.074388,-3.185839,9.421114],[-9.707068,-5.291748,1.179795],[-8.393931,8.830115,3.908417],[-0.816645,8.036697,6.121619],[5.302085,9.140122,-3.909894],[-3.417488,8.745165,-6.406102],[1.556470,8.474595,-9.002820],[4.349661,3.429417,9.785004],[-3.513884,-7.794004,-3.826571],[-5.858143,-4.807934,-0.526111],[-0.606433,-5.230189,6.070502],[4.499766,-2.422318,0.944042],[2.644900,8.390841,8.988315],[8.120933,-7.599794,3.034836],[-1.355722,-3.369886,-2.326236],[9.216690,-8.001185,-8.021224],[-4.415108,-4.722275,-4.696928],[0.724986,2.212835,-4.906435],[8.201617,-9.589018,9.871546],[-5.482365,9.086427,9.679652],[3.976123,6.479900,-9.583180],[-1.477907,9.380066,5.547138],[-3.512088,7.894192,2.190196],[-7.382395,0.988969,8.591630],[2.915550,-9.384573,-2.619557],[-5.800351,-8.496645,6.682465],[1.557760,5.231968,1.413657],[7.531154,9.397920,9.468629],[-7.191869,6.972615,-8.004975],[3.991691,1.355035,9.508949],[8.240493,9.220506,1.719557],[-2.894685,-1.039627,6.835605],[9.190096,3.857651,6.945190],[9.023250,8.832937,5.917464],[7.129456,9.753592,6.504520],[2.095316,-0.625587,-1.728601],[2.413078,-4.279433,4.133648],[2.113894,-8.915241,8.892104],[4.618610,-0.319238,-4.387112],[0.159253,-9.568764,-0.921685],[3.821505,-0.874285,-9.931397],[4.275931,4.263724,-0.584438],[3.142968,7.892438,-3.590476],[6.367991,-4.563123,-6.462510],[9.522137,-9.853633,-6.325338],[1.718054,-7.403215,5.066597],[2.753370,1.164355,6.618978],[4.236579,3.667155,-7.439275],[8.983675,-0.307862,3.228805],[-2.836960,-3.149647,-1.675327],[8.923894,-1.640429,0.430718],[8.107273,-9.663549,-0.635446],[-6.594828,-2.203403,-7.690105],[0.867827,-7.399856,1.444663],[9.634575,-1.639190,3.050247],[-6.207769,0.820934,-8.913787],[0.461208,0.759450,-2.517708],[0.921087,1.759697,0.086957],[-9.388151,0.856839,-0.056934],[5.942649,5.939907,5.101503],[-1.911292,8.345292,-4.931005],[6.766881,2.790833,0.211165],[-4.347768,-2.034417,-7.169057],[1.103219,4.647706,6.645808],[-0.342967,6.592307,-3.047234],[-3.724614,-0.969966,-2.374741],[2.926923,-4.166701,-2.413419],[4.662963,-0.994333,-8.727554],[4.554678,-9.818592,3.807250],[-7.378633,-7.922936,9.087579],[-1.672097,0.500869,1.030164],[5.433777,1.097834,-4.584813],[9.312688,-6.897121,6.352998],[-4.945121,4.282549,4.257642],[-8.717352,-8.051896,1.544918],[6.120924,5.900496,7.269764],[6.154624,7.172713,-2.395231],[-1.567665,8.143602,-5.018473],[-2.885122,4.950018,1.817157],[-4.549147,-5.055209,-6.892071],[-0.718236,6.251301,-5.283364],[-7.009457,1.582993,9.705481],[0.646212,6.102449,-8.927056],[-4.725019,-0.916233,-3.737851],[-5.081189,9.074522,4.808694],[8.880778,-9.063347,0.069093],[0.643001,-3.844197,-9.676225],[-2.479187,8.219155,-3.306507],[6.258216,-6.669186,2.167444],[9.955755,9.090644,-5.662509],[-8.213983,-8.357637,5.531774],[-6.742646,-5.682410,7.014282],[-7.916198,-6.226152,-6.747700],[3.964443,0.064642,8.934373],[9.856249,4.146712,-4.119881],[8.291969,4.620374,1.164491],[-7.137867,0.984070,-1.912299],[0.489596,-4.025364,-2.739455],[-1.967993,7.880774,-4.673685],[-8.126188,9.038904,-6.686109],[-9.119467,4.986423,-6.485152],[-6.424851,-8.991402,0.435025],[-6.462750,9.153740,-5.709865],[3.570736,9.475678,4.758474],[-4.834714,4.702552,0.758531],[9.894495,-1.961599,3.385540],[0.970518,2.452259,8.404369],[-0.271132,6.597441,-9.821364],[5.342208,-0.627653,-1.751863],[-7.069154,-2.834103,0.917499],[-0.614505,0.790633,8.949772],[9.546520,-3.238381,-0.926470],[8.537773,9.816765,-7.047694],[-7.266315,-7.563971,-1.065289],[-5.611568,1.819919,0.900395],[-5.714746,5.535518,-4.250135],[-1.739918,5.807078,-0.198129],[-3.586405,-2.044501,-8.348291],[-6.622913,-1.513412,4.760397],[3.145057,-4.997912,-9.293652],[0.660645,7.585226,-7.443238],[2.931571,4.716892,0.259843],[-4.535952,3.424945,-2.633238],[5.877869,-4.717735,5.624096],[5.189463,-9.172818,2.657000],[1.475662,4.986550,6.139631],[-2.612164,7.510064,2.948622],[7.317186,-5.481886,-4.746620],[-4.454249,1.019954,8.775298],[-9.656098,-3.553962,-1.812577],[-6.921221,-2.284845,-6.879439],[2.367944,4.738667,-4.241741],[-3.173693,-1.661350,-8.326402],[1.126591,6.516221,-1.166844],[6.966070,3.224210,6.336539],[8.254199,8.034602,8.128744],[4.924546,-9.491796,8.330249],[0.904438,-9.336605,6.990924],[-2.749378,2.253418,7.481665],[-2.301005,-3.424528,-4.098548],[-7.015656,3.952181,-5.498531],[9.542938,-1.795316,-4.524985],[5.495562,3.185994,2.599707],[-6.132654,5.605295,7.310305],[6.498908,8.767820,9.510542],[8.195485,8.903648,4.580835],[-2.654769,0.317895,-9.349928],[-2.937559,4.465907,0.332708],[-9.485196,-4.977947,3.251847],[3.651919,9.028997,1.447632],[-1.964455,-1.381252,9.821422],[9.333139,7.159252,-2.183720],[-4.255450,8.252666,-5.863545],[7.053422,-6.589723,-2.499190],[9.321748,5.724704,-1.788625],[-6.502973,3.837662,-2.556021],[-3.209001,-3.956530,-4.109837],[-7.847165,-8.978191,-1.778309],[-3.319449,8.215950,7.257881],[9.549733,9.834011,-7.197711],[7.471870,9.283726,3.053199],[8.501861,8.883739,2.419379],[6.385737,7.977184,5.063239],[-6.698428,2.656960,4.043836],[-0.110737,5.529648,9.880943],[3.338141,-7.423741,9.999383],[9.679472,-0.423360,1.489669],[-1.327561,8.807734,-9.972336],[-4.632110,-7.212520,-9.255331],[-7.713002,-7.456976,8.461160],[7.349440,-9.710332,2.485440],[-3.404241,7.151459,8.350785],[-3.147206,5.685288,1.467163],[1.274973,-6.936478,7.029362],[1.081595,8.339001,-7.410077],[4.417970,-4.535458,2.786989],[7.342990,-1.419122,-3.650584],[3.659987,8.060031,-2.844058],[-0.134642,-5.214481,-4.621010],[-9.056051,-2.841058,0.405232],[-1.496048,-4.225599,7.519401],[-0.617584,8.001470,4.037155],[-7.066931,9.696663,8.682437],[0.984002,0.685373,-5.071387],[3.243266,5.389612,3.736515],[-6.359151,5.591540,-4.270850],[7.105671,7.487701,9.574841],[-7.159021,-5.517489,2.572876],[-5.632347,4.196915,1.215823],[8.689202,-4.645344,-1.234258],[3.803274,5.346723,0.615736],[6.214982,-2.086757,-1.237421],[9.160771,-0.680685,-8.523708],[5.530132,-7.933836,-8.272712],[1.229714,-4.939465,-2.177256],[4.383105,-8.961109,-7.861858],[-6.532771,-6.419749,-9.212749],[-1.749755,5.121626,4.060514],[-2.473108,-5.087402,-3.499748],[-6.696633,-7.615824,1.632384],[5.181426,4.510935,-7.240090],[-5.250717,7.118390,9.101071],[4.080872,-3.939215,-4.026975],[-8.378047,-1.683481,3.740233],[5.712576,-7.320817,0.185184],[-8.284873,-9.435790,-0.942436],[0.693210,3.831435,2.934819],[-8.472723,-0.455934,4.999474],[1.710257,-9.374946,4.298878],[-5.225718,5.775976,-2.517856],[-4.487834,-8.053568,-2.258025],[7.988975,9.081222,7.671966],[-9.397574,4.917154,-0.739651],[9.627061,-8.802668,7.360315],[-5.663257,-9.719510,2.230260],[-9.195230,3.164292,-2.185051],[5.299894,0.288860,3.415500],[2.267010,-9.731160,-7.505343],[3.012302,-6.219829,6.500740],[2.701060,7.063848,-4.546860],[6.310848,2.945878,9.190262],[-2.205543,7.273494,4.429149],[-6.631375,-8.045298,9.687507],[5.791290,6.102330,-9.741163],[-1.073009,-2.896486,4.902871],[-1.323570,1.202925,0.926521],[9.287427,6.205617,7.519142],[1.236391,4.599790,-6.609606],[7.032996,8.561569,-7.584503],[0.771382,-6.985306,-8.627745],[-6.396626,-0.650027,-1.216938],[-3.613691,7.340890,0.900687],[-5.145384,4.278985,-0.726781],[-2.203725,4.360331,-7.401393],[0.095706,-7.874052,9.887824],[4.127885,5.578083,7.183637],[0.774653,-8.556493,3.337948],[3.714857,-5.119831,3.639105],[8.840709,-4.427637,-5.805934],[-8.562611,2.022351,2.810256],[7.233752,-9.196299,-6.229760],[9.897123,-2.470389,-8.703235],[7.646998,7.705347,-4.506536],[-6.486642,0.211221,8.458015],[-6.962225,2.525997,-8.240023],[-7.400602,-4.246221,0.454168],[6.247554,-9.588859,-9.063541],[6.420909,8.298646,0.866357],[-0.908962,7.138609,9.846307],[0.029870,-3.978844,1.704155],[3.657783,-5.911519,-4.151403],[-9.406777,-2.706063,0.998009],[5.427640,-6.759069,-9.714064],[9.976889,-2.394751,-2.095996],[2.470410,2.201160,-3.995939],[-3.872858,-5.490561,2.111961],[-0.826168,-7.686886,0.741631],[4.546542,6.463963,9.514386],[-5.285158,-0.100400,6.300081],[-5.158459,-7.291714,-8.916075],[-5.519590,-1.038996,2.154374],[5.816483,7.023838,8.478620],[-6.249596,9.459367,-1.828845],[4.377294,1.432368,9.245137],[-3.301072,3.879342,5.535178],[5.444182,2.333314,0.460158],[-1.708854,-0.878993,-8.190384],[-6.865777,2.629728,-8.322275],[-1.591246,-2.199283,7.576274],[-6.335980,4.698163,-1.456990],[8.755304,-5.027618,6.648732],[2.337775,-5.728291,1.099655],[7.892308,4.201126,-4.431693],[0.807047,1.426238,-9.948409],[4.095938,-6.622834,0.755743],[-8.519215,8.650597,7.328426],[-8.939761,-2.957046,-1.234656],[7.343306,9.443038,-4.215308],[1.025312,-2.399919,9.379222],[8.314805,6.459188,9.281734],[2.737656,2.661921,-9.281585],[2.480219,1.257726,-4.324254],[-4.744070,-4.151188,-9.108025],[2.575474,-7.198845,2.982872],[-5.756980,-2.345929,-3.592331],[-0.969939,7.195473,-4.504269],[-9.318335,-7.682981,2.163664],[-9.009722,0.922475,5.858917],[7.936394,0.370907,-6.159011],[-6.207942,3.844122,-7.034235],[-3.772793,9.614394,-9.507251],[-8.699302,-7.152319,8.193000],[6.699220,0.833869,-0.571488],[-7.015477,1.673807,7.172115],[-2.559532,-3.586845,-5.437636],[-9.850662,-7.623064,4.525693],[7.468210,2.872687,-4.536466],[-7.386016,-3.192801,-6.494015],[-8.019192,1.747802,-2.021671],[-9.353818,-2.481890,2.963836],[4.300137,5.677183,4.123674],[0.476836,-2.197688,-1.404675],[7.459083,-6.046990,-3.573818],[-7.573143,-5.503781,-2.630036],[-4.401294,5.401499,-8.627568],[4.252871,-4.780987,2.824166],[7.252192,8.222812,2.643342],[2.358749,-5.575897,6.900008],[-3.312528,8.959973,1.483075],[-9.810109,-6.226450,-1.308958],[-8.616788,9.650456,-3.082389],[-0.829244,2.457613,-3.565634],[-6.852590,1.084568,0.319018],[7.602907,-9.706782,-4.412350],[9.545036,6.758241,5.022579],[-0.674653,3.538896,-4.878950],[-1.041445,-0.426616,-6.252484],[-6.174988,-8.323223,9.493632],[-8.825507,9.777855,-5.549116],[-2.194757,-4.554343,0.453083],[7.679446,0.049812,9.485816],[6.592100,3.393152,8.864957],[-0.612194,-3.263801,0.111551],[-8.737102,-2.090442,-2.661800],[-3.202247,-4.817417,-8.210194],[-6.496093,0.014123,7.106225],[3.037002,-4.136588,-3.531428],[8.261848,-2.494701,0.613494],[6.250549,6.647038,9.520590],[-8.045787,4.697106,1.913304],[3.228341,4.612293,6.231204],[4.436762,9.217564,9.446607],[-9.020609,-1.091798,-4.360659],[-3.208634,-6.836107,-2.399999],[-8.493549,9.630590,1.567227],[9.983709,-3.628348,-4.698848],[7.660181,-0.279156,0.474766],[-6.020311,-6.696793,-5.649499],[-3.503331,9.648871,1.848835],[1.219513,-8.533916,1.690220],[3.947568,-4.297332,6.127361],[2.767253,5.785619,-0.683311],[-8.507847,-1.641897,6.286768],[1.620054,2.361380,-5.329906],[-1.045724,-4.637112,-9.996048],[0.939053,0.648856,1.760716],[-5.278859,7.258098,9.826117],[-2.917230,1.005245,-4.305337],[-6.601013,-5.815098,-1.773777],[-9.391777,-4.735596,-3.180496],[-0.295262,-7.638090,7.680484],[-0.895858,6.700473,4.554988],[6.121952,-2.953068,-4.184224],[-7.169789,-9.213178,4.710106],[2.250291,-1.255316,-1.982495],[8.534899,-6.601047,-5.221918],[9.791722,1.695395,2.776051],[1.991936,-9.507995,5.658135],[8.405721,8.574324,-2.619795],[-4.391894,-3.414356,-9.868856],[6.725730,0.014611,1.040701],[-8.425523,1.356231,0.432669],[-5.223858,7.042283,-0.753884],[-1.061984,-5.771128,-7.505980],[-2.929431,9.726616,7.549578],[9.776783,0.410136,-4.340437],[4.842789,9.517685,-0.527011],[5.342492,-3.026232,9.626236],[1.893237,-9.913244,-7.092862],[-3.513301,7.277605,0.046087],[5.129179,-5.360199,-7.533144],[-9.649814,6.340463,-3.605277],[-1.191789,-2.039847,-7.078358],[-0.682802,8.759270,-9.412976],[2.076666,-1.147171,-0.179076],[8.718477,9.175623,-5.423835],[-0.241355,5.430535,-0.003946],[1.797329,4.313525,5.662107],[1.544327,4.767679,-5.072668],[-3.124389,-7.012390,5.574900],[5.151104,3.603459,-6.907533],[-7.144004,-7.895674,-3.556628],[7.381853,6.343635,2.976248],[-2.463259,-3.952804,-0.290764],[3.426473,-1.019731,7.755986],[-9.855977,-9.214913,1.930796],[2.322316,3.649983,8.093667],[3.336606,9.567836,2.077484],[6.534023,-8.574847,9.841582],[5.384932,9.023444,7.814945],[6.399780,2.302230,0.063769],[-8.356209,-9.480678,-9.688742],[7.042934,-5.466969,-5.813344],[3.426223,-1.651141,-7.079333],[-7.086825,-3.184234,2.108240],[7.237679,-0.932973,1.870622],[1.927386,-4.981978,7.593494],[-0.840567,-2.099804,-6.987214],[-5.894020,6.863953,5.120694],[1.558864,5.334170,2.506147],[4.625255,8.942489,-6.324416],[1.959618,-7.216445,1.998679],[-6.919746,-7.078874,1.165390],[0.199319,-9.246359,-3.076468],[-6.938327,-8.000892,4.572870],[9.771582,-9.207418,-8.925119],[0.770795,-5.372364,-2.034751],[4.555347,9.527204,9.303232],[-2.166539,3.685072,3.865280],[-1.559458,9.493394,8.122391],[3.388755,6.462956,7.374607],[-4.895245,9.103123,-0.056431],[-9.729305,-6.777955,9.799570],[-8.083174,-2.249261,6.639464],[5.311677,-6.407174,-7.210741],[-7.816126,-3.268616,6.236809],[2.880756,-4.113681,-6.681573],[-3.038898,-3.173991,0.650796],[6.928258,-7.943545,4.082805],[5.027338,2.889655,9.306459],[-4.056999,2.256009,9.436309],[-5.613946,-2.743420,7.369546],[-4.149339,-7.574190,-3.985341],[-8.050615,0.004645,7.741610],[-0.523715,-5.069144,-8.697015],[0.069827,7.097325,9.987805],[0.430521,1.031047,-6.552082],[7.285294,6.553715,-1.825011],[0.023854,3.451972,4.723133],[1.837632,5.206233,3.187019],[7.860390,-5.081873,-4.686470],[2.666538,-9.242382,5.635989],[7.607320,4.492020,-7.863208],[-7.097295,-2.276995,7.390722],[-7.801449,-3.380331,-9.686338],[-7.042321,-1.747229,-1.349069],[-1.402066,2.336075,-6.961201],[-9.410121,6.353433,-5.975673],[3.442827,5.274341,-7.860516],[7.409590,1.314086,1.539572],[9.728914,4.005547,-6.285957],[-7.121140,0.194879,7.076378],[5.274088,3.993115,3.993704],[-7.799886,-0.684101,3.172601],[-2.194523,7.347187,-9.108233],[7.512520,-6.457679,0.685545],[-2.054255,-7.317730,1.037902],[-9.694307,7.853141,0.678403],[1.236174,3.787107,4.042020],[9.660423,0.631712,6.975750],[8.685216,9.247936,8.708236],[-7.520705,5.507185,9.344292],[7.891282,6.910064,2.267712],[5.649180,-1.461622,-9.215303],[1.074430,-3.158798,5.319037],[-7.335948,-9.461063,-6.285629],[2.732806,-5.672621,3.329364],[5.188549,9.606709,9.351437],[-1.151867,5.495233,3.646869],[-6.280261,3.760934,3.521074],[8.896646,5.824519,-4.697473],[6.277917,0.637951,-7.375948],[-2.181183,9.631994,-9.451367],[-5.789016,5.511249,7.809039],[-2.747982,-0.938439,-3.827519],[-0.729222,3.823618,-7.024685],[4.036903,7.815747,3.271027],[-4.139018,-2.520379,3.542977],[-5.111565,4.291381,7.511703],[1.715919,-5.168878,-0.809256],[8.278520,-4.108616,-5.479784],[-9.685126,1.615861,-2.661336],[0.476241,-6.886506,-4.362467],[-2.391864,1.242155,5.678046],[8.714062,-0.353130,-8.249357],[-1.395608,0.189950,-1.835027],[3.309154,-2.543093,4.334191],[5.523327,1.460627,-8.157705],[6.667884,-0.913570,-9.570575],[-3.082498,-5.340894,4.181627],[6.955566,8.999462,7.931687],[-8.901836,-0.290657,3.956760],[-6.929082,4.298027,-8.393595],[2.362499,-2.848173,-1.892050],[1.946999,-7.827247,-8.321939],[-9.589756,-5.089057,-7.252397],[-2.326124,-2.047235,2.180304],[-3.186805,7.684461,6.726766],[4.666493,6.064596,6.201371],[-0.023210,-8.515504,-0.397461],[-1.513039,-1.057077,-0.611810],[-6.706846,-1.314602,-6.449874],[-6.864513,0.232603,-9.539380],[0.395081,1.282906,3.844091],[7.936197,-8.401088,7.660799],[-5.123108,8.509662,-9.678416],[4.528791,-8.418313,5.065484],[-6.211465,1.392849,2.936973],[-1.822616,6.182691,-4.420277],[-2.082973,-1.499985,5.488724],[-3.795800,-8.204792,0.238184],[1.254658,3.578601,-5.484707],[-3.934068,4.038649,-3.549654],[3.587438,5.479219,-2.678823],[-2.504139,4.085499,1.081428],[-7.691581,-3.073071,-7.389977],[7.458737,7.398358,4.779816],[3.637653,-3.991290,-6.234384],[-9.329184,4.102740,-5.937905],[2.289418,0.528459,-0.926064],[2.349870,-4.671821,6.742825],[5.588319,-8.807552,1.099874],[-5.687204,-7.526419,2.767193],[1.141677,-6.776576,-7.377553],[7.570346,3.204762,-1.906375],[7.658282,-0.922090,-2.560259],[-5.807767,-5.930184,-1.909719],[0.838712,1.782947,2.662466],[-0.968295,-0.410230,2.398502],[3.692873,-5.016243,1.026320],[-8.616582,-7.029038,-7.686505],[-1.977270,5.314667,-2.371320],[2.781821,-3.274379,7.891879],[6.067831,3.907037,-2.553600],[-3.269240,5.403796,9.025333],[-7.091298,0.515505,-7.906620],[1.515204,8.123356,-7.109931],[-0.343467,6.157370,-2.130689],[-0.878818,-1.247536,1.382501],[-1.794611,-0.193457,-0.362093],[6.314867,-3.620635,4.204214],[-1.019539,0.986771,2.875362],[6.645405,8.263492,6.657325],[3.101384,-0.377155,4.001287],[1.460085,1.596723,2.528997],[9.458188,-6.308928,4.938266],[-5.148728,-0.673768,0.001772],[2.957091,1.852062,5.612781],[-4.205147,-4.492625,-9.189867],[-0.004026,-2.134844,-5.156443],[2.606471,-6.510294,0.071468],[-9.243279,2.191554,2.761598],[-9.455201,-4.102788,-9.012520],[-7.777617,-2.352168,1.500619],[-3.912036,-2.682483,1.300997],[-2.583602,-9.742962,8.019423],[1.078486,-3.448632,-4.456981],[7.283041,-8.344534,8.269750],[-4.546207,-7.830304,-8.936691],[6.901189,5.574971,4.757134],[-9.124639,-4.634075,-5.546250],[-8.786182,0.463382,4.757495],[4.347832,-0.642783,-3.191384],[-0.450154,-6.643560,4.145853],[-3.989881,1.654901,2.654543],[-1.838374,7.326771,-0.898299],[-8.949952,1.555897,4.594840],[-5.375007,0.155276,9.036431],[-7.404051,-4.893508,-8.584481],[9.715902,4.246765,-7.478444]], dtype = "float32")#candidate|2977|(715, 3)|const|float32
call_2976 = relay.TupleGetItem(func_2392_call(relay.reshape(const_2977.astype('float32'), [11, 195])), 1)
call_2978 = relay.TupleGetItem(func_2394_call(relay.reshape(const_2977.astype('float32'), [11, 195])), 1)
bop_2983 = relay.not_equal(call_2976.astype('bool'), relay.reshape(call_2964.astype('bool'), relay.shape_of(call_2976))) # shape=(13, 4, 12)
bop_2986 = relay.not_equal(call_2978.astype('bool'), relay.reshape(call_2965.astype('bool'), relay.shape_of(call_2978))) # shape=(13, 4, 12)
func_2588_call = mod.get_global_var('func_2588')
func_2590_call = mutated_mod.get_global_var('func_2590')
call_2987 = func_2588_call()
call_2988 = func_2588_call()
output = relay.Tuple([call_2970,const_2977,bop_2983,call_2987,])
output2 = relay.Tuple([call_2971,const_2977,bop_2986,call_2988,])
func_2991 = relay.Function([], output)
mod['func_2991'] = func_2991
mod = relay.transform.InferType()(mod)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2991_call = mutated_mod.get_global_var('func_2991')
call_2992 = func_2991_call()
output = call_2992
func_2993 = relay.Function([], output)
mutated_mod['func_2993'] = func_2993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2865_call = mod.get_global_var('func_2865')
func_2867_call = mutated_mod.get_global_var('func_2867')
call_3023 = func_2865_call()
call_3024 = func_2865_call()
output = relay.Tuple([call_3023,])
output2 = relay.Tuple([call_3024,])
func_3038 = relay.Function([], output)
mod['func_3038'] = func_3038
mod = relay.transform.InferType()(mod)
output = func_3038()
func_3039 = relay.Function([], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3137 = relay.var("var_3137", dtype = "int32", shape = (7, 5, 1))#candidate|3137|(7, 5, 1)|var|int32
var_3138 = relay.var("var_3138", dtype = "int32", shape = (7, 5, 1))#candidate|3138|(7, 5, 1)|var|int32
bop_3139 = relay.subtract(var_3137.astype('int32'), relay.reshape(var_3138.astype('int32'), relay.shape_of(var_3137))) # shape=(7, 5, 1)
output = relay.Tuple([bop_3139,])
output2 = relay.Tuple([bop_3139,])
func_3147 = relay.Function([var_3137,var_3138,], output)
mod['func_3147'] = func_3147
mod = relay.transform.InferType()(mod)
var_3148 = relay.var("var_3148", dtype = "int32", shape = (7, 5, 1))#candidate|3148|(7, 5, 1)|var|int32
var_3149 = relay.var("var_3149", dtype = "int32", shape = (7, 5, 1))#candidate|3149|(7, 5, 1)|var|int32
output = func_3147(var_3148,var_3149,)
func_3150 = relay.Function([var_3148,var_3149,], output)
mutated_mod['func_3150'] = func_3150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_3192 = relay.TupleGetItem(func_2845_call(), 0)
call_3193 = relay.TupleGetItem(func_2846_call(), 0)
output = relay.Tuple([call_3192,])
output2 = relay.Tuple([call_3193,])
func_3194 = relay.Function([], output)
mod['func_3194'] = func_3194
mod = relay.transform.InferType()(mod)
output = func_3194()
func_3195 = relay.Function([], output)
mutated_mod['func_3195'] = func_3195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_3198 = func_2038_call()
call_3199 = func_2038_call()
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_3210 = relay.TupleGetItem(func_1948_call(), 1)
call_3211 = relay.TupleGetItem(func_1950_call(), 1)
output = relay.Tuple([call_3198,call_3210,])
output2 = relay.Tuple([call_3199,call_3211,])
func_3218 = relay.Function([], output)
mod['func_3218'] = func_3218
mod = relay.transform.InferType()(mod)
output = func_3218()
func_3219 = relay.Function([], output)
mutated_mod['func_3219'] = func_3219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_3259 = relay.TupleGetItem(func_3038_call(), 0)
call_3260 = relay.TupleGetItem(func_3039_call(), 0)
const_3265 = relay.const([[[-4.300295,0.946482,6.891898,-3.226908,-3.977653,-2.891138,-7.935492,-4.661553,-6.965150,8.277241,2.436260,4.454947],[-0.275154,-2.354676,-6.390098,7.498011,-6.514836,4.947791,9.726201,-3.884577,6.858924,-3.132976,2.849650,-1.993348],[-8.437511,-0.248688,-8.188622,8.247674,-8.684494,8.074059,-3.618429,-3.622116,7.360035,-2.162498,7.050931,-8.044609]],[[1.991850,-6.678703,6.732433,-6.754551,-7.484908,-0.046680,2.622328,-2.849538,8.110861,-2.687921,-7.410275,-9.602384],[-7.272841,6.140669,8.631327,9.015078,-1.031972,-8.743907,-6.009809,2.846586,7.181135,2.827699,-0.862870,6.023247],[3.416940,3.694510,-0.792822,8.614040,-7.303965,-6.783271,-4.471346,-9.146520,-6.867741,7.132575,9.078977,6.439650]],[[-9.655330,0.474921,-7.855532,-5.311982,0.501484,-1.482118,-1.587595,-4.857357,-1.114405,-6.304011,-7.180494,8.010944],[2.133275,0.236306,-7.706461,-1.345717,-5.787318,2.833654,-2.975457,-9.125944,1.592645,4.722032,0.471833,-9.492164],[-7.092618,-0.718102,7.766195,6.009929,-7.893942,6.092814,-0.787773,1.693281,-7.695797,4.022121,1.417475,-4.985791]],[[-1.882411,-3.394084,2.197023,6.952776,5.767631,7.713873,-2.454061,-7.367053,3.541550,3.616685,4.423551,-0.857848],[9.029752,-6.831272,-0.358027,9.287791,-4.322309,-6.015005,-7.696066,8.569473,0.975131,-8.263689,-2.666374,3.977521],[-4.490719,1.192091,3.743521,1.842905,8.305095,0.509286,-9.822102,5.558955,-5.128537,0.023402,8.117946,9.914581]],[[9.773630,-7.260986,-0.366495,7.624614,-3.650632,-8.255164,7.567954,-2.406989,1.346437,-1.370326,-9.508765,-3.584508],[7.238845,9.888156,-6.094784,7.335308,-0.301587,4.560306,8.953976,-4.308378,4.737840,-2.336120,-2.222926,-8.985986],[-6.205639,-6.135874,-0.139142,-1.774422,-1.868422,-6.118087,-6.454841,-7.420819,-2.990145,8.901613,-9.656566,0.616087]],[[-9.545824,-2.629010,6.018588,-8.960322,1.606165,-5.365756,3.883969,2.786455,5.536207,-5.791550,-5.612643,-5.108490],[0.391419,-1.440111,2.839764,4.962354,3.999264,1.309765,-3.571744,2.432228,-3.471645,3.075119,-5.988135,5.288273],[3.465304,0.161258,-9.372736,-2.290223,5.189033,5.006756,-5.911449,-3.674688,1.473592,-3.178184,1.560904,7.941084]],[[-2.955252,8.608802,-5.438649,-1.936158,-6.908854,0.989672,4.927996,-3.251541,-5.558359,-8.744836,6.822336,9.384939],[-4.998806,-3.513835,9.354226,6.267503,8.914658,-5.123058,9.947034,6.507635,-9.519618,-0.191174,-9.769830,-7.836202],[-8.894827,8.962226,1.444940,-3.892289,6.959054,8.602736,5.024416,-6.358136,3.119307,-9.402421,7.729977,-1.374224]],[[-6.779544,5.302157,-0.089661,0.739821,-3.398262,-2.280264,7.165882,1.324873,0.364855,7.287729,8.079746,1.909386],[-0.016576,4.148321,7.612402,0.093817,-1.970392,-5.732727,-1.220264,-4.176870,5.465664,-1.079152,7.495624,8.690733],[-2.838297,5.967536,-6.449784,-2.532887,-3.442572,-8.119530,-1.408384,5.412171,-0.651415,5.233232,-0.944056,-8.486576]],[[-4.563599,-5.082241,-6.680842,-2.236772,6.705874,0.425245,8.105950,-0.587453,2.024584,5.581524,6.380833,2.693217],[6.089016,-6.472152,-0.185255,6.902129,-8.103648,-1.196124,4.961812,8.658884,9.364796,-2.058353,8.489704,-1.218195],[6.509726,-0.846817,5.682687,-9.167884,-6.562008,-1.466609,6.055993,3.959777,5.081777,8.647395,-3.254904,7.743940]],[[9.600921,-6.691824,2.490185,1.312611,2.355031,9.198916,6.861417,6.613991,-0.896768,-6.092940,1.367777,0.551257],[-0.293475,2.383725,-2.376770,-2.104238,-2.736256,-3.104766,6.449177,-7.780438,7.931676,9.752627,6.579394,-9.350448],[-3.716253,-5.660221,-3.592642,0.772474,-8.402973,6.325191,3.516141,-7.170296,5.369206,9.125717,-3.181589,3.852286]],[[2.347270,6.365426,9.213688,7.369236,-5.296605,3.251937,4.665110,7.652129,3.959083,-3.388261,-1.722561,-8.361656],[8.037312,0.102995,7.279049,0.316324,6.174653,7.161739,-1.773617,9.876965,-4.014438,9.157980,2.374940,0.738402],[-8.369738,9.998288,-4.698416,-1.588286,-0.644722,-1.833907,-8.393457,-3.412442,-1.315972,-6.727509,-7.161266,1.898381]],[[-4.858297,2.236133,-7.331982,-1.799674,-9.507205,8.592411,5.327247,3.212730,7.226509,7.670087,0.181258,-0.504381],[4.757141,1.087010,-3.413638,3.438462,3.447216,-0.809821,3.113280,-3.460253,-5.009491,2.403418,4.035488,7.710762],[-9.920659,-1.522565,4.787934,8.200538,4.517895,-3.636295,7.049557,-2.554427,-9.783436,-0.802481,1.772155,-4.026441]],[[2.362349,8.400393,-5.433823,2.721086,6.744616,-8.527342,-1.358210,-1.355080,-0.164997,7.902047,-5.468019,5.026122],[-2.062178,-9.871608,-9.714423,-6.745574,-4.028926,4.011422,-3.133612,4.996008,-9.580356,-0.140159,3.921008,7.225096],[-7.811032,-6.162853,-3.239112,1.770333,6.322094,7.178618,-8.267904,9.981613,8.525831,8.998345,-7.887070,-4.622212]]], dtype = "float32")#candidate|3265|(13, 3, 12)|const|float32
bop_3266 = relay.minimum(call_3259.astype('uint16'), const_3265.astype('uint16')) # shape=(13, 3, 12)
bop_3269 = relay.minimum(call_3260.astype('uint16'), const_3265.astype('uint16')) # shape=(13, 3, 12)
uop_3272 = relay.atan(bop_3266.astype('float32')) # shape=(13, 3, 12)
uop_3274 = relay.atan(bop_3269.astype('float32')) # shape=(13, 3, 12)
func_2404_call = mod.get_global_var('func_2404')
func_2405_call = mutated_mod.get_global_var('func_2405')
call_3275 = relay.TupleGetItem(func_2404_call(), 0)
call_3276 = relay.TupleGetItem(func_2405_call(), 0)
output = relay.Tuple([uop_3272,call_3275,])
output2 = relay.Tuple([uop_3274,call_3276,])
func_3279 = relay.Function([], output)
mod['func_3279'] = func_3279
mod = relay.transform.InferType()(mod)
output = func_3279()
func_3280 = relay.Function([], output)
mutated_mod['func_3280'] = func_3280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_3375 = relay.TupleGetItem(func_3038_call(), 0)
call_3376 = relay.TupleGetItem(func_3039_call(), 0)
var_3416 = relay.var("var_3416", dtype = "float32", shape = (4, 14, 12))#candidate|3416|(4, 14, 12)|var|float32
bop_3417 = relay.multiply(call_3375.astype('uint16'), var_3416.astype('uint16')) # shape=(4, 14, 12)
bop_3420 = relay.multiply(call_3376.astype('uint16'), var_3416.astype('uint16')) # shape=(4, 14, 12)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_3422 = func_1834_call()
call_3423 = func_1834_call()
uop_3425 = relay.exp(bop_3417.astype('float64')) # shape=(4, 14, 12)
uop_3427 = relay.exp(bop_3420.astype('float64')) # shape=(4, 14, 12)
bop_3431 = relay.minimum(uop_3425.astype('int64'), relay.reshape(bop_3417.astype('int64'), relay.shape_of(uop_3425))) # shape=(4, 14, 12)
bop_3434 = relay.minimum(uop_3427.astype('int64'), relay.reshape(bop_3420.astype('int64'), relay.shape_of(uop_3427))) # shape=(4, 14, 12)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_3465 = func_1834_call()
call_3466 = func_1834_call()
bop_3470 = relay.power(bop_3431.astype('float64'), relay.reshape(var_3416.astype('float64'), relay.shape_of(bop_3431))) # shape=(4, 14, 12)
bop_3473 = relay.power(bop_3434.astype('float64'), relay.reshape(var_3416.astype('float64'), relay.shape_of(bop_3434))) # shape=(4, 14, 12)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_3475 = relay.TupleGetItem(func_2912_call(), 0)
call_3476 = relay.TupleGetItem(func_2913_call(), 0)
func_3194_call = mod.get_global_var('func_3194')
func_3195_call = mutated_mod.get_global_var('func_3195')
call_3478 = relay.TupleGetItem(func_3194_call(), 0)
call_3479 = relay.TupleGetItem(func_3195_call(), 0)
uop_3481 = relay.atan(uop_3425.astype('float64')) # shape=(4, 14, 12)
uop_3483 = relay.atan(uop_3427.astype('float64')) # shape=(4, 14, 12)
bop_3487 = relay.logical_and(bop_3470.astype('bool'), relay.reshape(uop_3425.astype('bool'), relay.shape_of(bop_3470))) # shape=(4, 14, 12)
bop_3490 = relay.logical_and(bop_3473.astype('bool'), relay.reshape(uop_3427.astype('bool'), relay.shape_of(bop_3473))) # shape=(4, 14, 12)
const_3496 = relay.const([[[-0.265813,0.111430,1.667247,7.373957,-9.554801,-6.818155,-8.069285,0.146451,-0.845504,-1.433604,-3.051864,-1.354925],[6.759578,-3.110617,-4.489766,4.297399,-8.824253,0.098861,7.747882,-0.409717,9.710333,-1.022178,-4.663005,4.988587],[1.879167,-2.171569,-4.776909,8.697019,-7.824297,-9.066578,-4.108217,-4.745119,-7.733191,-7.032571,-0.865933,1.147786],[8.425616,9.521619,6.005638,-7.440103,1.089021,-5.514070,-4.456828,1.575006,-0.691244,3.257166,6.266206,1.222822],[6.236937,6.307148,-6.193365,-4.065145,-0.065810,5.833006,-8.080193,-7.962219,-4.888884,8.462052,6.762461,-0.064964],[-9.334018,-2.023948,6.642982,-3.100398,3.431710,-8.435950,-2.292228,6.922850,8.871891,6.732603,-9.656900,6.801281],[-0.009156,7.179483,2.983601,9.514580,0.896221,3.715442,4.724316,-9.530952,7.675503,-9.901048,5.782047,-7.537358],[2.433049,-1.892560,4.872676,-8.198635,8.060616,6.211101,7.645600,-5.570362,-3.704366,3.941780,0.925335,-0.556749],[3.403810,3.467924,-2.211229,6.537538,9.498414,-5.035236,9.744167,-8.769670,-7.465028,9.159814,9.097964,1.206403],[3.235283,8.645558,-4.460043,0.655650,8.620884,-7.693975,-8.435694,2.948322,0.493798,-3.611343,-4.981957,5.045146],[5.118763,6.652360,4.831765,-7.020690,4.401116,3.144412,-5.791166,5.936519,3.881938,4.766557,2.258169,7.646547],[-0.994069,8.397557,2.328648,-1.780690,7.461251,3.790370,-8.583605,5.499893,0.914436,3.384227,1.964672,3.306233],[-6.211917,-3.123911,2.711623,-9.526309,-9.313145,8.311474,0.148716,-3.998806,7.762201,2.246430,1.636888,7.792888],[2.678524,-8.897504,-0.870535,-2.058319,4.465164,-7.303749,-9.886055,-7.996924,4.538777,-1.358367,3.891267,3.699641]],[[-9.264575,-3.942854,-0.810845,5.123668,-5.023918,-5.339880,4.216916,4.928856,-7.569703,-9.453470,4.597683,5.338639],[-7.256520,6.433587,-8.829535,-8.121730,5.098125,-5.264775,-9.133845,9.013559,-2.188724,2.190172,-5.284432,-8.663056],[6.019608,-8.844491,1.442097,6.212765,9.243193,-7.305292,2.774080,8.089305,3.067579,-0.102859,8.743724,7.833625],[-8.643724,6.150595,0.808776,1.000855,-0.198618,8.063694,1.015707,1.036945,5.360163,-8.948496,-3.609501,1.011097],[2.499631,-1.225893,-3.623080,-7.198171,-1.587695,3.983173,3.237179,-9.625874,-6.807096,-9.075287,-9.507006,6.961111],[3.900074,3.164262,7.549837,2.929521,-5.729640,1.548670,4.999724,9.296849,1.068072,-5.248667,2.229229,1.251855],[-4.113231,7.139051,6.819713,9.994052,-3.180623,9.206124,7.370854,2.069479,-6.858774,-0.396333,-2.942624,4.028533],[1.728156,4.773623,4.326682,-8.228345,-8.779287,-0.846014,-6.009551,-4.631438,-2.647652,-2.324244,-5.711186,-2.426354],[-4.014393,0.489674,-5.562361,0.656438,-9.128357,8.647567,3.771129,3.151026,7.233806,3.289636,5.925208,7.622135],[7.839040,-3.312427,4.630607,-9.064693,8.594912,-3.572485,8.072356,2.568648,-7.777338,9.453336,3.432688,8.565123],[-5.835755,-7.183905,-7.604632,-5.315309,-2.950826,-4.874606,4.608650,6.002818,-9.285640,-9.450267,9.864137,8.987401],[-0.811384,4.068897,7.824039,4.969738,-9.693424,-6.165038,7.787899,-0.425193,3.037383,3.730082,-6.206605,3.342260],[-4.938068,-8.675394,-4.138376,-3.696563,-8.564836,-7.457959,-4.541677,1.268570,6.043597,-0.087174,-2.066510,-3.026459],[8.850252,-6.998147,0.703535,-7.071920,-8.681200,5.244536,-5.223012,0.642160,-7.629122,-9.298671,9.441796,7.753205]],[[7.229638,6.126166,-3.068032,3.021960,1.761086,2.204826,-7.803188,9.183106,-5.422689,6.435669,-3.492226,0.391448],[-1.738961,9.063700,-4.980286,-7.231204,-8.340567,7.349671,-3.854904,-4.101034,4.848690,-7.697063,5.743595,-5.866771],[-0.343921,-6.542238,-4.753194,0.315903,-6.286261,4.070090,6.637626,-1.366153,6.461711,0.893715,1.005622,-9.185656],[6.144902,-6.838766,-2.048307,8.627355,-0.002827,9.504094,4.759472,6.677442,6.042111,-1.521485,-9.246004,4.496781],[3.123221,0.364944,-4.634591,8.565722,-6.349327,9.384364,-6.893925,-1.794198,-1.700618,5.629935,-7.219406,0.807622],[2.256526,3.561813,5.359535,-7.803053,0.206185,1.365573,7.157894,0.030360,-3.086084,-6.877900,5.918475,3.773663],[-4.344704,-7.756667,0.664995,-9.638281,7.105584,-5.469070,-5.641054,0.961602,5.165645,-9.974156,1.581130,-6.593260],[-0.156895,-7.689795,8.751702,3.757964,6.479965,2.256696,-8.858007,8.233555,6.988826,-4.498395,-7.974720,1.184892],[-1.281503,-0.110522,3.200836,6.320014,2.081089,-0.973804,0.151635,-6.064493,0.618257,3.594937,-0.461965,7.706113],[-6.758815,7.768054,-3.944401,-3.489280,-9.882786,-0.217263,-1.482156,6.149358,-5.068372,-5.244290,-1.347953,-0.052790],[-8.524029,3.334111,-3.325163,-3.205321,-2.995520,-1.634678,-8.230720,1.220610,1.008868,8.070964,6.859366,-3.639553],[-9.999999,4.695006,5.643955,-2.693358,0.877633,-5.269425,-4.593453,-9.100247,3.469134,3.144485,-5.504952,-8.067106],[6.529092,9.489750,1.500234,-1.636401,-9.364853,-7.388043,1.282205,-4.959478,-2.790851,-8.295963,2.600698,8.274670],[2.759935,7.984077,8.531696,-1.473790,8.078419,2.518779,7.597664,-1.077325,7.995035,6.167232,2.351122,0.153269]],[[1.235857,-8.857591,-1.967433,7.855116,3.883384,7.515161,-2.638367,2.772575,4.277729,-1.194431,-4.234274,5.771785],[4.919785,-5.940489,-8.407181,-3.136836,8.963778,-2.770941,-0.527127,-4.410906,-0.920215,-6.879339,7.833370,-6.193472],[-5.921616,2.755582,8.556558,-1.265690,2.157999,2.210632,-3.730714,5.359073,0.363540,-8.717164,1.296220,6.034096],[-9.214127,2.790382,6.898150,9.839550,-1.089474,-0.307624,5.228073,8.201060,9.177080,-4.961637,-6.518614,4.133816],[1.333642,-9.989636,-2.890546,6.120706,5.782532,-2.457175,-6.621797,9.969743,-0.133074,7.001771,-0.464233,9.074664],[2.614497,-4.805652,2.962103,7.439483,4.780165,-1.375685,5.981792,-1.583159,-1.263887,2.373751,-1.270994,6.924727],[-2.617715,-2.571881,4.115275,-0.942293,6.844816,1.870932,9.409671,-5.255404,-8.964445,-4.316999,-7.241958,-4.601398],[-6.765504,8.539842,-4.267715,5.137712,9.583129,-3.862065,8.437856,-6.091172,0.778306,-2.696662,-8.899385,3.976717],[6.290037,1.635198,-7.805199,-6.782746,2.616013,-6.392721,-0.885555,0.157795,6.826642,1.990623,-2.066568,-2.558205],[8.714442,-6.674527,1.955810,-5.793647,-2.251365,-9.709882,0.078166,5.441637,-8.136683,4.033611,6.169553,5.461464],[-0.447114,-8.315521,-0.477796,-1.448891,8.601878,0.795070,-9.559363,6.272035,4.743737,3.074375,-9.263049,-0.456305],[-8.151113,2.234282,-0.430307,6.276406,2.671659,4.500790,-6.510993,0.879983,3.040583,-4.007137,-7.767568,-5.060733],[7.644025,6.761528,-7.505900,-7.095398,5.334044,-4.216366,-8.685998,-7.851849,2.159445,0.438274,2.321982,6.044505],[-9.029047,-3.387727,2.469971,-3.007224,-3.077528,-2.738547,9.535526,-1.173347,1.702366,-5.810565,-3.976510,5.821589]]], dtype = "float64")#candidate|3496|(4, 14, 12)|const|float64
bop_3497 = relay.logical_or(bop_3470.astype('bool'), relay.reshape(const_3496.astype('bool'), relay.shape_of(bop_3470))) # shape=(4, 14, 12)
bop_3500 = relay.logical_or(bop_3473.astype('bool'), relay.reshape(const_3496.astype('bool'), relay.shape_of(bop_3473))) # shape=(4, 14, 12)
uop_3502 = relay.log10(bop_3497.astype('float32')) # shape=(4, 14, 12)
uop_3504 = relay.log10(bop_3500.astype('float32')) # shape=(4, 14, 12)
func_1336_call = mod.get_global_var('func_1336')
func_1339_call = mutated_mod.get_global_var('func_1339')
var_3506 = relay.var("var_3506", dtype = "uint64", shape = (792,))#candidate|3506|(792,)|var|uint64
const_3507 = relay.const([[-0.010513,5.358380,-3.892575,-1.858740,5.193398,7.908541,-6.214075,-0.717871,2.050008,-2.750981,0.040399,-1.185783,-0.066316,4.908989,3.482741,-3.872737,-8.194466,7.702915,1.541197,9.981484,-8.115703,5.687870,8.529353,-4.952167,-1.357229,3.272083,-6.966064,-4.052171,-1.787384,5.820082],[1.303422,5.660929,-1.884888,-3.617789,-1.049847,-4.466210,-7.333011,-3.427111,7.991037,5.772236,2.575312,0.322789,-0.899476,-4.814284,8.969439,-6.581769,0.961730,-0.867036,-6.124418,6.180403,-8.593306,9.281534,5.489086,-6.760228,5.892460,-2.087890,1.736389,-0.304787,-2.445595,-3.043550],[-0.425754,-7.497996,-1.305234,4.449459,6.610041,-9.400595,-9.045979,-5.828720,8.839024,-1.876052,-6.997908,7.573545,-9.397446,3.662531,-6.403930,-4.816261,-3.197603,-3.467138,0.550229,-7.041588,-5.100521,-3.498247,-8.371848,-8.826988,-1.572325,-7.277012,2.999295,-6.224461,2.051904,-7.112724],[6.653659,8.798908,3.626253,-3.322321,9.758350,1.575808,4.191898,1.390637,3.660354,1.398223,-5.719285,-7.317721,4.281247,-0.323283,6.636220,-6.161428,6.976941,-8.141734,6.064511,-4.658709,4.414409,-6.249718,8.541641,7.692426,7.207187,-4.840251,-9.960753,-5.331247,7.972866,6.756439],[4.041637,5.159473,6.483248,-2.565856,0.851369,2.527612,-7.698886,5.560178,2.144948,-1.352428,-9.818453,6.151515,-4.461689,-4.475025,-2.620814,-8.060495,-6.127407,-5.615298,5.047157,-6.777133,0.720754,-6.397411,-6.146296,-8.126761,-3.813849,-7.046813,2.863167,8.040113,1.528948,-9.400866],[1.355572,-0.832272,-9.883442,4.696437,4.163150,-7.942755,-1.420929,-7.841979,1.092286,-6.942720,-4.897616,-3.473310,-8.466161,9.375935,0.869289,4.211993,-3.815216,-7.546727,3.550403,-8.373467,-8.960975,4.086956,4.910992,6.695774,-7.803336,-9.609750,-5.047683,0.556247,8.040605,0.418669]], dtype = "float64")#candidate|3507|(6, 30)|const|float64
call_3505 = relay.TupleGetItem(func_1336_call(relay.reshape(var_3506.astype('uint64'), [2, 396]), relay.reshape(const_3507.astype('float64'), [6, 15, 2]), ), 6)
call_3508 = relay.TupleGetItem(func_1339_call(relay.reshape(var_3506.astype('uint64'), [2, 396]), relay.reshape(const_3507.astype('float64'), [6, 15, 2]), ), 6)
uop_3509 = relay.acos(uop_3425.astype('float64')) # shape=(4, 14, 12)
uop_3511 = relay.acos(uop_3427.astype('float64')) # shape=(4, 14, 12)
bop_3516 = relay.mod(uop_3425.astype('float64'), relay.reshape(uop_3502.astype('float64'), relay.shape_of(uop_3425))) # shape=(4, 14, 12)
bop_3519 = relay.mod(uop_3427.astype('float64'), relay.reshape(uop_3504.astype('float64'), relay.shape_of(uop_3427))) # shape=(4, 14, 12)
bop_3522 = relay.greater_equal(uop_3481.astype('bool'), relay.reshape(uop_3425.astype('bool'), relay.shape_of(uop_3481))) # shape=(4, 14, 12)
bop_3525 = relay.greater_equal(uop_3483.astype('bool'), relay.reshape(uop_3427.astype('bool'), relay.shape_of(uop_3483))) # shape=(4, 14, 12)
output = relay.Tuple([call_3422,call_3465,call_3475,call_3478,bop_3487,call_3505,var_3506,const_3507,uop_3509,bop_3516,bop_3522,])
output2 = relay.Tuple([call_3423,call_3466,call_3476,call_3479,bop_3490,call_3508,var_3506,const_3507,uop_3511,bop_3519,bop_3525,])
func_3544 = relay.Function([var_3416,var_3506,], output)
mod['func_3544'] = func_3544
mod = relay.transform.InferType()(mod)
mutated_mod['func_3544'] = func_3544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3544_call = mutated_mod.get_global_var('func_3544')
var_3546 = relay.var("var_3546", dtype = "float32", shape = (4, 14, 12))#candidate|3546|(4, 14, 12)|var|float32
var_3547 = relay.var("var_3547", dtype = "uint64", shape = (792,))#candidate|3547|(792,)|var|uint64
call_3545 = func_3544_call(var_3546,var_3547,)
output = call_3545
func_3548 = relay.Function([var_3546,var_3547,], output)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2991_call = mod.get_global_var('func_2991')
func_2993_call = mutated_mod.get_global_var('func_2993')
call_3566 = relay.TupleGetItem(func_2991_call(), 1)
call_3567 = relay.TupleGetItem(func_2993_call(), 1)
output = relay.Tuple([call_3566,])
output2 = relay.Tuple([call_3567,])
func_3568 = relay.Function([], output)
mod['func_3568'] = func_3568
mod = relay.transform.InferType()(mod)
mutated_mod['func_3568'] = func_3568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3569 = func_3568_call()
output = call_3569
func_3570 = relay.Function([], output)
mutated_mod['func_3570'] = func_3570
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3592 = relay.const([[[1.395694,0.140488,-8.572636,-1.943524,-7.033342,-0.995483],[6.727337,0.627666,3.110974,-4.898566,6.924749,3.582853],[8.432885,-3.948138,-7.614669,5.944904,-8.261875,2.898393],[6.066895,-2.981317,-0.867355,-2.640473,8.564408,7.124953],[-9.313132,1.074802,-0.394183,-0.937799,6.021829,2.635448]],[[-1.505341,-1.820182,9.581885,-8.210884,8.449579,6.593732],[3.818251,-1.817482,6.803660,2.872522,8.898031,-0.347440],[-6.197085,0.236245,5.622849,7.619689,-4.705767,-5.061204],[5.185137,-2.456363,-4.775791,-8.898461,7.323564,-1.857395],[-7.483074,-7.408403,7.337925,-7.949732,3.731942,3.812901]],[[-7.402585,0.810253,-8.910457,3.082272,-9.132118,7.816911],[8.544447,-8.725506,-8.557622,2.320206,9.744790,-0.754472],[-8.889140,-8.329868,-5.194697,6.013017,-7.089817,7.382101],[-8.921613,-3.149787,-8.433801,6.436876,-1.352713,-9.168680],[7.470277,8.686134,2.500504,9.360196,-1.528456,-7.406521]],[[0.737404,-6.288296,-1.972737,1.051154,-9.773681,9.756418],[0.224438,-3.854641,-7.652761,-1.118934,-9.437719,-9.893461],[2.577440,-8.052277,9.429701,-8.164067,-9.263444,-3.133752],[6.512160,2.002184,-5.119394,-7.629773,-3.848682,9.217227],[-5.785974,-7.095251,9.984372,-2.558806,-7.765875,1.198415]],[[7.262810,-2.612784,-8.388931,-7.744744,-2.717918,8.674022],[-6.733656,-8.156539,-7.377875,-2.003993,9.508742,6.611023],[7.535164,3.905796,-6.706526,-1.694870,2.115870,6.312164],[2.994828,3.758930,-5.788988,-2.728515,-2.149604,7.476780],[-1.780745,7.681174,-4.612183,1.670045,1.241948,9.133763]]], dtype = "float64")#candidate|3592|(5, 5, 6)|const|float64
uop_3593 = relay.sinh(const_3592.astype('float64')) # shape=(5, 5, 6)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_3611 = relay.TupleGetItem(func_1948_call(), 1)
call_3612 = relay.TupleGetItem(func_1950_call(), 1)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_3616 = relay.TupleGetItem(func_1907_call(), 0)
call_3617 = relay.TupleGetItem(func_1908_call(), 0)
bop_3623 = relay.logical_and(uop_3593.astype('bool'), relay.reshape(const_3592.astype('bool'), relay.shape_of(uop_3593))) # shape=(5, 5, 6)
func_1176_call = mod.get_global_var('func_1176')
func_1179_call = mutated_mod.get_global_var('func_1179')
const_3630 = relay.const([4,7,-9,8,-7,-4,-9,-10,8,-9,-4,-6,-4,9,-10,3,4,-2,3,4,2,8,5,-2,-3,-9,-1,-3,-3,-6,-5,-6,10,-3,8,2,7,5,-7,-6,-5,9,-1,2,5,4,-6,-8,-10,9,8,10,-9,-9,10,-7,2,5,-8,-5,3,-2,4,5,-3,-2,4,-8,8,9,3,-5,2,8,6,-5,-3,-8,-9,10,7,-4,-5,4,-2,-1,1,-1,7,4,-3,2,6,-2,3,8,6,-1,-6,4,9,6,3,-2,-7,2,3,-5,-6,-5,-10,10,-5,-7,-7,-1,-6,4,-4,-8,3,2,-5,-7,5,1,5,9,2,10,-7,-6,8,2,10,-5,-1,-1,6,-9,-1,6,10,5,1,3,-6,1,-3,-8,-3,6,-1,-10,6,-8,10,5,1,-3,-3,10,-7,3,-4,-3,-5,-2,-7,-3,-4,1,7,3,6,-10,-4,10,3,-3,6,5,6,-8,-10,7,-2,-7,6,6,-5,3,-9,3,6,-1,4,2,3,-3,10,8,-10,-2,-6,8,-7,3,2,9,1,-10,8,-5,1,8,9,5,3,-8,8,-10,-7,-2,-8,10,-3,-6,-2,3,-2,9,7,3,-1,-6,-6,-5,-9,5,2,-9,-4,5,8,3,9,1,6,-5,-2,-8,-7,-3,-2,6,-2,8,-9,-5,-2,-5,10,6,-10,1,-4,-2,3,-9,-4,8,9,-3,10,-3,6,-3,6,2,-2,5,3,-9,3,-1,5,2,-5,10,4,-8,-3,-1,-10,-2,6,-2,-7,5,-1,6,4,-9,6,4,3,4,-3,-5,-6,9,4,-10,2,-10,2,10,5,-6,-1,3,-4,-1,10,2,-1,-7,-2,-8,4,1,6,-3,3,4,-2,7,3,-5,-2,-10,-9,9,-8,8,-7,-10,-10,-5,-4,6,-7,-2,-9,-7,5,5,4,7,-1,6,4,2,-8,-7,-8,-8,6,-9,-8,-7,2,9,7,10,1,-7,-1,-8,-6,3,10,10,1,10,-6,4,-10,-5,-1,5,2,-6,9,-6,-3,-10,8,8,9,-1,-6,2,2,-10,-4,-4,7,1,-7,2,6,2,9,-5,7,-3,3,-6,-5,-9,-3,7,-4,-5,-5,-1,-8,5,1,8,-8,-1,-8,-7,5,-2,-8,8,9,-2,-2,-7,6,-10,2,4,-10,-10,-4,-3,-2,9,6,-3,-3,-9,-10,5,-10,2,4,-1,-3,-7,9,-7,-7,-4,-6,-7,-2,3,-5,-7,-7,7,4,-8,-3,3,-4,-5,-9,-5,-8,3,1,1,8,10,-6,7,-7,5,9,-1,2,-6,-9,-5,3,6,-8,9,6,1,8,-9,10,-4,6,4,5,9,10,8,6,7,-10,9,-6,7,-6,-9,-2,9,-2,6,-4,-9,10,10,-1,9,-5,-9,-9,-7,3,-5,-10,-7,-7,10,-9,-10,8,5,8,3,4,-6,-8,-10,-8,-10,-9,-3,-9,10,1,6,-9,-1,9,-2,-5,6,1,6,2,10,-10,-8,5,8,-7,5,7,4,-9,-9,-5,10,4,5,-2,7,-9,3,-4,-10,-5,-8,-1,10,-1,4,5,-1,-10,5,5,-5,7,-8,9,2,3,6,-4,-1,5,-2,9,-1,4,-10,10,-3,3,9,-9,4,3,-3,-8,4,2,-8,-1,-10,9,-4,-5,-7,10,8,7,9,-4,6,9,-7,-8,-1,-6,-4,1,3,6,-4,-3,4,-4,9,9,4,-7,-8,8,6,2,-8,-9,-9,-10,-9,-5,5,10,-1,-1,-7,-6,5,-6,-7,-10,-1,7,-2,-5,1,8,3,-10,-4,-7,-9,-6,6,-5,2,9,4,5,2,1,-4,-9,-4,9,-8,-9,-9,1,-8,-8,2,6,-1,4,-3,-7,1,-3,-5,-2,-9,7,-9,3,5,-10,9,2,6,-5,8,-7,-10,-3,3,5,8,1,-2,-7,-8,-3,2,8,9,9,7,-6,8,-3,5,-4,2,2,-4,3,7,-10,9,-1,3,-6,7,1,-1,6,-2,9,-10,10,-2,-9,-6,10,-8,6,2,-6,-5,-4,-9,10,-3,-7,-4,10,-9,6,7,-3,-8,8,2,-9,-1,3,3,5,-6,10,9,-7,6,-4,-1,10,7,-1,4,-5,-1,8,4,2,4,-10,-4,1,-10,5,-1,3,2,6,2,-2,-2,10,2,5,-6,10,2,9,6,3,8,-3,8,6,-1,-6,7,-8,-8,8,8,1,1,9,-4,3,8,2,-7,9,-7,10,1,-6,1,-4,-3,-6,-6,10,-9,4,10,3,-4,-5,7,8,3,8,7,-2,8,-3,-5,6,7,-9,-4,2,5,3,-3,2,5,10,4,2,-2,-6,-1,8,2,3,-2,-8,-4,-10,1,5,-4,8,8,9,9,6,-8,8,-6,8,7,6,4,-10,-10,1,-1,9,2,-1,3,-1,-6,1,-9,9,-4,9,2,2,-8,3,3,1,10,-6,-3,-4,-5,8,-3,-2,-3,4,4,-5,-1,4,-10,9,8,1,-4,8,-9,5,-5,-8,2,2,-9,10,5,4,-8,-5,8,-8,10,-2,-4,10,6,10,1,-5,10,10,9,1,7,-6,2,7,-1,3,-8,7,-3,5,10,6,-5,-5,10,-2,4,4,-1,9,2,9,5,7,2,3,1,-2,-6,1,-3,-5,-4,-2,-1,-6,3,6,-1,5,4,7,-7,-4,-6,-1,1,-5,-6,-7,-9,2,10,1,1,-7,4,-2,5,-4,-10,-9,10], dtype = "uint64")#candidate|3630|(1050,)|const|uint64
call_3629 = func_1176_call(relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), )
call_3631 = func_1176_call(relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), )
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_3636 = relay.TupleGetItem(func_2948_call(), 2)
call_3637 = relay.TupleGetItem(func_2949_call(), 2)
uop_3638 = relay.log(bop_3623.astype('float32')) # shape=(5, 5, 6)
bop_3643 = relay.floor_mod(uop_3638.astype('float32'), relay.reshape(const_3592.astype('float32'), relay.shape_of(uop_3638))) # shape=(5, 5, 6)
bop_3646 = relay.bitwise_and(call_3616.astype('uint8'), relay.reshape(call_3611.astype('uint8'), relay.shape_of(call_3616))) # shape=(13, 4, 12)
bop_3649 = relay.bitwise_and(call_3617.astype('uint8'), relay.reshape(call_3612.astype('uint8'), relay.shape_of(call_3617))) # shape=(13, 4, 12)
bop_3655 = relay.bitwise_and(uop_3593.astype('uint16'), relay.reshape(bop_3623.astype('uint16'), relay.shape_of(uop_3593))) # shape=(5, 5, 6)
func_1279_call = mod.get_global_var('func_1279')
func_1282_call = mutated_mod.get_global_var('func_1282')
var_3662 = relay.var("var_3662", dtype = "int8", shape = (1620,))#candidate|3662|(1620,)|var|int8
call_3661 = func_1279_call(relay.reshape(var_3662.astype('int8'), [12, 9, 15]), relay.reshape(var_3662.astype('int8'), [12, 9, 15]), )
call_3663 = func_1279_call(relay.reshape(var_3662.astype('int8'), [12, 9, 15]), relay.reshape(var_3662.astype('int8'), [12, 9, 15]), )
uop_3671 = relay.exp(uop_3638.astype('float64')) # shape=(5, 5, 6)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
call_3673 = relay.TupleGetItem(func_2804_call(relay.reshape(bop_3646.astype('float32'), [13, 4, 12])), 1)
call_3674 = relay.TupleGetItem(func_2807_call(relay.reshape(bop_3646.astype('float32'), [13, 4, 12])), 1)
func_1176_call = mod.get_global_var('func_1176')
func_1179_call = mutated_mod.get_global_var('func_1179')
call_3677 = func_1176_call(relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), )
call_3678 = func_1176_call(relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), relay.reshape(const_3630.astype('uint64'), [5, 14, 15]), )
output = relay.Tuple([call_3629,const_3630,call_3636,bop_3643,bop_3646,bop_3655,call_3661,var_3662,uop_3671,call_3673,call_3677,])
output2 = relay.Tuple([call_3631,const_3630,call_3637,bop_3643,bop_3649,bop_3655,call_3663,var_3662,uop_3671,call_3674,call_3678,])
func_3689 = relay.Function([var_3662,], output)
mod['func_3689'] = func_3689
mod = relay.transform.InferType()(mod)
mutated_mod['func_3689'] = func_3689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3690 = relay.var("var_3690", dtype = "int8", shape = (1620,))#candidate|3690|(1620,)|var|int8
func_3689_call = mutated_mod.get_global_var('func_3689')
call_3691 = func_3689_call(var_3690)
output = call_3691
func_3692 = relay.Function([var_3690], output)
mutated_mod['func_3692'] = func_3692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3706 = relay.var("var_3706", dtype = "float32", shape = (3, 14, 4))#candidate|3706|(3, 14, 4)|var|float32
uop_3707 = relay.rsqrt(var_3706.astype('float32')) # shape=(3, 14, 4)
output = uop_3707
output2 = uop_3707
func_3712 = relay.Function([var_3706,], output)
mod['func_3712'] = func_3712
mod = relay.transform.InferType()(mod)
var_3713 = relay.var("var_3713", dtype = "float32", shape = (3, 14, 4))#candidate|3713|(3, 14, 4)|var|float32
output = func_3712(var_3713)
func_3714 = relay.Function([var_3713], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2404_call = mod.get_global_var('func_2404')
func_2405_call = mutated_mod.get_global_var('func_2405')
call_3809 = relay.TupleGetItem(func_2404_call(), 0)
call_3810 = relay.TupleGetItem(func_2405_call(), 0)
var_3817 = relay.var("var_3817", dtype = "float32", shape = (13, 4, 12))#candidate|3817|(13, 4, 12)|var|float32
bop_3818 = relay.subtract(call_3809.astype('int16'), relay.reshape(var_3817.astype('int16'), relay.shape_of(call_3809))) # shape=(13, 4, 12)
bop_3821 = relay.subtract(call_3810.astype('int16'), relay.reshape(var_3817.astype('int16'), relay.shape_of(call_3810))) # shape=(13, 4, 12)
output = bop_3818
output2 = bop_3821
func_3829 = relay.Function([var_3817,], output)
mod['func_3829'] = func_3829
mod = relay.transform.InferType()(mod)
mutated_mod['func_3829'] = func_3829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3830 = relay.var("var_3830", dtype = "float32", shape = (13, 4, 12))#candidate|3830|(13, 4, 12)|var|float32
func_3829_call = mutated_mod.get_global_var('func_3829')
call_3831 = func_3829_call(var_3830)
output = call_3831
func_3832 = relay.Function([var_3830], output)
mutated_mod['func_3832'] = func_3832
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3847 = relay.const([[[-6.536219,-6.772683,-4.781438,1.747757,-9.738676,2.993164,0.106414,-0.284837],[-8.417287,2.381124,-9.859376,5.790973,-5.784982,8.928491,7.374323,-2.042014],[-0.253600,7.978465,5.197787,-4.329928,2.789754,8.898609,9.988787,-0.721085],[1.827726,8.562588,-3.753985,-0.601911,8.573927,6.219764,-4.588597,-3.027849]],[[1.310283,2.100718,-2.995250,-7.492409,-5.252916,6.032472,7.377609,4.264413],[7.199410,-8.819309,3.884003,-6.321808,-8.799811,1.785078,9.709964,8.275867],[7.175804,6.203731,0.608888,5.743577,-9.509044,6.938336,8.374489,-2.567595],[0.360484,-6.762755,2.485225,8.116601,-3.124890,-1.452175,-9.023087,-6.988412]],[[9.869832,-3.338217,5.117011,-3.039914,-5.099697,8.579177,-2.034873,-9.539193],[-8.594972,3.817440,-6.390628,-1.801295,0.533491,-9.896150,-9.901874,-4.873420],[7.483285,-9.232466,-6.770957,-3.366293,-7.845948,-2.448858,3.676941,6.551192],[6.748753,-4.852991,7.738969,4.901301,3.976472,3.950843,-7.933585,5.582806]],[[-2.094452,8.054297,-2.066043,7.761578,2.551975,-1.617892,-3.488766,9.295940],[-2.316083,2.172229,-5.897887,-3.281328,7.881775,4.141532,6.103385,5.809496],[5.057774,5.605034,-6.293952,-7.018738,-6.770476,-6.443012,-4.738875,7.280531],[5.735265,6.890722,7.982326,-0.755830,6.353243,-0.048289,-5.428857,-8.042622]],[[-3.580725,-0.627652,-5.086947,1.941460,4.319367,6.425041,4.634775,-8.895692],[-4.338533,-9.070688,8.278223,-1.386485,-7.586180,-2.662852,-8.618224,-5.734207],[-9.692089,4.643765,-4.227398,2.848151,-4.131748,3.438425,6.323590,8.949733],[5.301968,7.529045,-1.163087,8.303407,7.769071,3.301384,-8.276250,-5.307660]],[[-9.938745,7.545293,-0.683215,-4.735238,-5.086111,-7.297442,9.555165,8.748766],[1.773593,-9.324651,-3.440928,9.298632,4.706604,3.137762,-7.154481,-4.936432],[6.342655,8.826937,-0.017085,-8.992597,-1.057464,2.696994,-3.778248,-6.214172],[1.045438,6.201274,7.250281,5.583426,-9.822941,-2.903326,6.701515,3.460828]],[[2.190596,-9.285727,0.969133,-2.765380,-9.744649,5.901827,-7.930256,-0.329846],[-4.132416,6.695387,-2.066560,-8.272393,3.274199,-3.417913,1.559897,3.361187],[-4.115266,6.898733,-1.141322,1.607052,0.778996,-3.204590,8.061106,7.396162],[-0.132200,7.917939,-0.203832,2.494789,-5.422558,-8.725769,-9.394571,-3.597723]]], dtype = "float64")#candidate|3847|(7, 4, 8)|const|float64
uop_3848 = relay.cosh(const_3847.astype('float64')) # shape=(7, 4, 8)
bop_3854 = relay.greater(uop_3848.astype('bool'), relay.reshape(const_3847.astype('bool'), relay.shape_of(uop_3848))) # shape=(7, 4, 8)
var_3860 = relay.var("var_3860", dtype = "bool", shape = (7, 4, 8))#candidate|3860|(7, 4, 8)|var|bool
bop_3861 = relay.mod(bop_3854.astype('float32'), relay.reshape(var_3860.astype('float32'), relay.shape_of(bop_3854))) # shape=(7, 4, 8)
func_1336_call = mod.get_global_var('func_1336')
func_1339_call = mutated_mod.get_global_var('func_1339')
var_3866 = relay.var("var_3866", dtype = "uint64", shape = (792,))#candidate|3866|(792,)|var|uint64
const_3867 = relay.const([[-1.926202,-3.617119,8.633969,-7.687353,3.636136,-1.660544,3.238277,-0.394076,-2.669785,-0.013117,2.506365,5.376917,-9.516345,-1.742776,0.456386,-7.480715,7.725215,3.359866,-7.069217,4.859077,5.359998,8.429260,-8.512914,-4.625366,-9.970189,5.034183,-7.701651,-0.659811,-9.608270,8.250953],[-7.307351,8.783004,-5.674758,3.014089,-8.012660,2.426254,-8.484117,-1.700339,-4.095468,-1.234644,-5.098024,-6.876942,-9.832747,9.057197,-7.605475,3.929171,1.213803,-1.727386,7.344571,-2.936588,-3.322862,5.981226,-4.833876,9.966485,-5.789994,6.719660,2.657594,7.656759,3.988321,-3.244371],[3.592512,-9.473444,-4.388376,9.864096,-7.281468,6.367370,0.048996,-6.924479,2.207102,-1.915556,2.299466,-3.239274,1.402546,-2.673495,-2.407201,-9.297629,-6.658152,-7.039305,4.581421,-0.906605,3.281856,-1.492709,-5.740713,5.411129,-8.234379,-3.712771,9.748954,1.232788,-9.776130,1.784094],[-9.112762,9.343727,8.936430,-6.951243,2.556768,-1.068961,-9.447130,2.241166,0.232673,-0.778606,-4.883874,8.128935,2.566856,-4.020305,6.415560,8.995785,-9.640972,-6.574483,-8.261366,-4.673517,-5.792513,0.904857,-5.523358,2.563748,3.960827,9.484513,-4.374537,4.401832,1.834762,-5.237004],[-8.529264,6.418910,-9.887795,-5.394743,-0.884221,-3.166261,2.753322,9.079955,-4.201474,-3.647839,3.115680,1.255882,-8.792383,1.347961,-4.834608,-9.998216,1.522088,1.522962,-8.651244,8.272485,1.732978,5.055422,7.477813,-3.705423,5.180641,6.996919,-0.628916,3.166266,8.644675,9.211810],[-0.759921,-0.088729,1.914411,0.129939,4.697042,-8.163619,-1.488004,-3.455125,-4.307378,6.161209,5.386931,-5.980900,3.142299,-4.568275,1.992431,-3.240341,-1.978511,4.049939,8.139213,4.024774,2.884363,8.736593,7.518973,3.690194,-8.899836,1.221238,0.232309,1.264501,5.546670,-4.363511]], dtype = "float64")#candidate|3867|(6, 30)|const|float64
call_3865 = relay.TupleGetItem(func_1336_call(relay.reshape(var_3866.astype('uint64'), [2, 396]), relay.reshape(const_3867.astype('float64'), [6, 15, 2]), ), 5)
call_3868 = relay.TupleGetItem(func_1339_call(relay.reshape(var_3866.astype('uint64'), [2, 396]), relay.reshape(const_3867.astype('float64'), [6, 15, 2]), ), 5)
output = relay.Tuple([bop_3861,call_3865,var_3866,const_3867,])
output2 = relay.Tuple([bop_3861,call_3868,var_3866,const_3867,])
func_3870 = relay.Function([var_3860,var_3866,], output)
mod['func_3870'] = func_3870
mod = relay.transform.InferType()(mod)
mutated_mod['func_3870'] = func_3870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3870_call = mutated_mod.get_global_var('func_3870')
var_3872 = relay.var("var_3872", dtype = "bool", shape = (7, 4, 8))#candidate|3872|(7, 4, 8)|var|bool
var_3873 = relay.var("var_3873", dtype = "uint64", shape = (792,))#candidate|3873|(792,)|var|uint64
call_3871 = func_3870_call(var_3872,var_3873,)
output = call_3871
func_3874 = relay.Function([var_3872,var_3873,], output)
mutated_mod['func_3874'] = func_3874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1904_call = mutated_mod.get_global_var('func_1904')
call_3884 = relay.TupleGetItem(func_1902_call(), 0)
call_3885 = relay.TupleGetItem(func_1904_call(), 0)
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_3887 = relay.TupleGetItem(func_2948_call(), 2)
call_3888 = relay.TupleGetItem(func_2949_call(), 2)
output = relay.Tuple([call_3884,call_3887,])
output2 = relay.Tuple([call_3885,call_3888,])
func_3893 = relay.Function([], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3893_call = mutated_mod.get_global_var('func_3893')
call_3894 = func_3893_call()
output = call_3894
func_3895 = relay.Function([], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_3948 = relay.TupleGetItem(func_1907_call(), 0)
call_3949 = relay.TupleGetItem(func_1908_call(), 0)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_3958 = relay.TupleGetItem(func_2912_call(), 0)
call_3959 = relay.TupleGetItem(func_2913_call(), 0)
output = relay.Tuple([call_3948,call_3958,])
output2 = relay.Tuple([call_3949,call_3959,])
func_3965 = relay.Function([], output)
mod['func_3965'] = func_3965
mod = relay.transform.InferType()(mod)
mutated_mod['func_3965'] = func_3965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3965_call = mutated_mod.get_global_var('func_3965')
call_3966 = func_3965_call()
output = call_3966
func_3967 = relay.Function([], output)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4006 = relay.const([[[9.060418,-0.701958,0.330276,-1.867832,-4.690294,-9.075982,8.391640,-3.732279,5.074191,-8.302666,2.646223],[-4.715959,-5.255855,7.176124,5.770394,5.626738,-3.801170,-4.527329,-1.199243,-3.957988,-9.535083,4.115788],[-6.748023,5.593929,9.059777,9.372469,-9.561949,-8.353471,-6.740971,-4.717681,-1.615034,2.839950,-1.711392],[-7.560848,-8.208520,6.929130,8.670004,-8.678769,-5.868301,5.199360,-6.245254,-1.489160,-6.213216,0.857894],[-1.658110,7.993717,4.546242,-3.252625,-9.541672,-7.249679,7.969231,2.446859,1.503989,6.504556,2.648299],[1.394923,4.631486,0.019643,6.645827,5.997959,-8.445767,-8.599149,7.436019,0.500329,-7.728667,-1.546904]],[[-8.588008,-7.493364,8.126666,2.481822,6.432230,-0.125893,4.961335,-5.786554,-4.330445,-7.809250,-3.836396],[-1.440598,8.753720,5.369439,-9.854750,-4.398218,6.670501,-4.856989,-3.459990,-5.238867,-3.564122,-2.840731],[-9.535932,-5.620845,-4.345381,5.205564,-6.492749,-5.838722,-7.421859,1.818823,0.105027,0.552568,-2.815204],[-8.986655,2.676361,-9.419630,5.421141,5.716450,-8.111679,3.942062,6.255781,2.003234,-3.742213,5.121099],[-5.420788,9.219520,-0.591591,-0.512110,-0.665213,8.882278,1.481749,-4.491629,0.876447,-5.383784,5.039267],[-9.449776,5.094978,-1.490920,-1.217168,-4.851971,-2.124788,-9.129579,-4.976690,-9.271403,4.670253,-9.791794]]], dtype = "float32")#candidate|4006|(2, 6, 11)|const|float32
uop_4007 = relay.sqrt(const_4006.astype('float32')) # shape=(2, 6, 11)
var_4010 = relay.var("var_4010", dtype = "float32", shape = (2, 6, 11))#candidate|4010|(2, 6, 11)|var|float32
bop_4011 = relay.floor_mod(const_4006.astype('float64'), relay.reshape(var_4010.astype('float64'), relay.shape_of(const_4006))) # shape=(2, 6, 11)
output = relay.Tuple([uop_4007,bop_4011,])
output2 = relay.Tuple([uop_4007,bop_4011,])
func_4014 = relay.Function([var_4010,], output)
mod['func_4014'] = func_4014
mod = relay.transform.InferType()(mod)
mutated_mod['func_4014'] = func_4014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4015 = relay.var("var_4015", dtype = "float32", shape = (2, 6, 11))#candidate|4015|(2, 6, 11)|var|float32
func_4014_call = mutated_mod.get_global_var('func_4014')
call_4016 = func_4014_call(var_4015)
output = call_4016
func_4017 = relay.Function([var_4015], output)
mutated_mod['func_4017'] = func_4017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_4040 = relay.TupleGetItem(func_2845_call(), 0)
call_4041 = relay.TupleGetItem(func_2846_call(), 0)
func_3218_call = mod.get_global_var('func_3218')
func_3219_call = mutated_mod.get_global_var('func_3219')
call_4044 = relay.TupleGetItem(func_3218_call(), 1)
call_4045 = relay.TupleGetItem(func_3219_call(), 1)
func_2097_call = mod.get_global_var('func_2097')
func_2101_call = mutated_mod.get_global_var('func_2101')
var_4047 = relay.var("var_4047", dtype = "float64", shape = (540,))#candidate|4047|(540,)|var|float64
const_4048 = relay.const([-9,-1,-9,-7,6,6,2,2,-1,-9,6,5,-2,-7,-4,-4,-9,7,6,1,-1,-5,10,-6,-4,1,-9,-9,3,9,-6,2,8,5,5,-9,-2,1,2,3,10,-5,10,2,-9,3,-4,3,4,9,2,8,-2,6,-4,-9,10,-7,-7,-6,-2,4,-1,9,4,7,-7,10,3,3,-6,4,-6,8,2,10,2,9,10,1,7,10,4,-3,-7,-4,9,-8,-1,-8,10,-6,-1,-6,-2,-3,-6,4,2,-6,-6,-1,-10,-1,5,5,-9,-10,3,-1,4,7,8,1,-9,-8,-7,3,8,-2,7,-10,6,7,7,-8,6,2,-5,4,10,-2,-1,-8,-2,3,6,6,-5,-3,2,3,7,10,8,7,-5,7,-5,-8,3,-6,7,3,4,-6,9,4,5,-7,9,-3,4,-2,-4,8,2,-8,-6,2,-9,6,-10,-2,-4,9,7,-8,1,2,10,3,-5,-2,-2,-9,-5,-6,5,9,1,5,-10,-8,4,-6,-1,-8,-10,5,7,2,1,8,-10,-9,4,8,8,-5,-8,-7,-10,5,-7,3,-8,-9,-4,7,3,4,2,3,2,10,-1,-8,4,-2,-8,9,9,-5,5,7,-9,-7,-7,-1,-2,-6,10,5,-1,-8,-3,5,5,7,3,7,-6,-5,9,-1,-8,4,-5,5,8,-5,10,-5,9,4,7,-7,10,-6,-7,7,-6,-5,-2,6,-4,4,-10,-9,-10,-2,6,2,1,-4,6,6,-4,2,-3,-7,9,1,10,-8,-2,-9,-4,-6,-8,-5,-2,8,-4,-2,-9,4,-8,-7,2,1,10,6,-1,-6,3,-5,6,10,4,-7,-9,-10,3,-7,5,-2,-10,-6,1,1,-5,10,2,1,10,-10,10,-9,-9,9,6,8,2,-6,8,-8,6,6,7,-5,-7,7,-6,8,3,-1,3,-7], dtype = "uint16")#candidate|4048|(360,)|const|uint16
call_4046 = relay.TupleGetItem(func_2097_call(relay.reshape(var_4047.astype('float64'), [5, 9, 12]), relay.reshape(const_4048.astype('uint16'), [360,]), ), 3)
call_4049 = relay.TupleGetItem(func_2101_call(relay.reshape(var_4047.astype('float64'), [5, 9, 12]), relay.reshape(const_4048.astype('uint16'), [360,]), ), 3)
func_1902_call = mod.get_global_var('func_1902')
func_1904_call = mutated_mod.get_global_var('func_1904')
call_4055 = relay.TupleGetItem(func_1902_call(), 0)
call_4056 = relay.TupleGetItem(func_1904_call(), 0)
var_4083 = relay.var("var_4083", dtype = "float32", shape = (13, 4, 12))#candidate|4083|(13, 4, 12)|var|float32
bop_4084 = relay.right_shift(call_4044.astype('uint32'), relay.reshape(var_4083.astype('uint32'), relay.shape_of(call_4044))) # shape=(13, 4, 12)
bop_4087 = relay.right_shift(call_4045.astype('uint32'), relay.reshape(var_4083.astype('uint32'), relay.shape_of(call_4045))) # shape=(13, 4, 12)
output = relay.Tuple([call_4040,call_4046,var_4047,const_4048,call_4055,bop_4084,])
output2 = relay.Tuple([call_4041,call_4049,var_4047,const_4048,call_4056,bop_4087,])
func_4090 = relay.Function([var_4047,var_4083,], output)
mod['func_4090'] = func_4090
mod = relay.transform.InferType()(mod)
mutated_mod['func_4090'] = func_4090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4090_call = mutated_mod.get_global_var('func_4090')
var_4092 = relay.var("var_4092", dtype = "float64", shape = (540,))#candidate|4092|(540,)|var|float64
var_4093 = relay.var("var_4093", dtype = "float32", shape = (13, 4, 12))#candidate|4093|(13, 4, 12)|var|float32
call_4091 = func_4090_call(var_4092,var_4093,)
output = call_4091
func_4094 = relay.Function([var_4092,var_4093,], output)
mutated_mod['func_4094'] = func_4094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4110 = func_1834_call()
call_4111 = func_1834_call()
uop_4118 = relay.log2(call_4110.astype('float64')) # shape=(13, 4, 12)
uop_4120 = relay.log2(call_4111.astype('float64')) # shape=(13, 4, 12)
bop_4125 = relay.less(call_4110.astype('bool'), relay.reshape(uop_4118.astype('bool'), relay.shape_of(call_4110))) # shape=(13, 4, 12)
bop_4128 = relay.less(call_4111.astype('bool'), relay.reshape(uop_4120.astype('bool'), relay.shape_of(call_4111))) # shape=(13, 4, 12)
bop_4134 = relay.add(uop_4118.astype('uint16'), relay.reshape(bop_4125.astype('uint16'), relay.shape_of(uop_4118))) # shape=(13, 4, 12)
bop_4137 = relay.add(uop_4120.astype('uint16'), relay.reshape(bop_4128.astype('uint16'), relay.shape_of(uop_4120))) # shape=(13, 4, 12)
uop_4146 = relay.cos(bop_4134.astype('float64')) # shape=(13, 4, 12)
uop_4148 = relay.cos(bop_4137.astype('float64')) # shape=(13, 4, 12)
func_3870_call = mod.get_global_var('func_3870')
func_3874_call = mutated_mod.get_global_var('func_3874')
var_4155 = relay.var("var_4155", dtype = "bool", shape = (224,))#candidate|4155|(224,)|var|bool
var_4156 = relay.var("var_4156", dtype = "uint64", shape = (792, 1))#candidate|4156|(792, 1)|var|uint64
call_4154 = relay.TupleGetItem(func_3870_call(relay.reshape(var_4155.astype('bool'), [7, 4, 8]), relay.reshape(var_4156.astype('uint64'), [792,]), ), 3)
call_4157 = relay.TupleGetItem(func_3874_call(relay.reshape(var_4155.astype('bool'), [7, 4, 8]), relay.reshape(var_4156.astype('uint64'), [792,]), ), 3)
var_4158 = relay.var("var_4158", dtype = "float64", shape = (13, 4, 12))#candidate|4158|(13, 4, 12)|var|float64
bop_4159 = relay.bitwise_xor(uop_4146.astype('uint16'), relay.reshape(var_4158.astype('uint16'), relay.shape_of(uop_4146))) # shape=(13, 4, 12)
bop_4162 = relay.bitwise_xor(uop_4148.astype('uint16'), relay.reshape(var_4158.astype('uint16'), relay.shape_of(uop_4148))) # shape=(13, 4, 12)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
call_4167 = relay.TupleGetItem(func_2804_call(relay.reshape(var_4158.astype('float32'), [13, 4, 12])), 0)
call_4168 = relay.TupleGetItem(func_2807_call(relay.reshape(var_4158.astype('float32'), [13, 4, 12])), 0)
var_4169 = relay.var("var_4169", dtype = "float64", shape = (6, 30))#candidate|4169|(6, 30)|var|float64
bop_4170 = relay.add(call_4154.astype('int32'), relay.reshape(var_4169.astype('int32'), relay.shape_of(call_4154))) # shape=(6, 30)
bop_4173 = relay.add(call_4157.astype('int32'), relay.reshape(var_4169.astype('int32'), relay.shape_of(call_4157))) # shape=(6, 30)
uop_4176 = relay.asin(var_4156.astype('float32')) # shape=(792, 1)
output = relay.Tuple([var_4155,bop_4159,call_4167,bop_4170,uop_4176,])
output2 = relay.Tuple([var_4155,bop_4162,call_4168,bop_4173,uop_4176,])
func_4178 = relay.Function([var_4155,var_4156,var_4158,var_4169,], output)
mod['func_4178'] = func_4178
mod = relay.transform.InferType()(mod)
mutated_mod['func_4178'] = func_4178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4178_call = mutated_mod.get_global_var('func_4178')
var_4180 = relay.var("var_4180", dtype = "bool", shape = (224,))#candidate|4180|(224,)|var|bool
var_4181 = relay.var("var_4181", dtype = "uint64", shape = (792, 1))#candidate|4181|(792, 1)|var|uint64
var_4182 = relay.var("var_4182", dtype = "float64", shape = (13, 4, 12))#candidate|4182|(13, 4, 12)|var|float64
var_4183 = relay.var("var_4183", dtype = "float64", shape = (6, 30))#candidate|4183|(6, 30)|var|float64
call_4179 = func_4178_call(var_4180,var_4181,var_4182,var_4183,)
output = call_4179
func_4184 = relay.Function([var_4180,var_4181,var_4182,var_4183,], output)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2404_call = mod.get_global_var('func_2404')
func_2405_call = mutated_mod.get_global_var('func_2405')
call_4189 = relay.TupleGetItem(func_2404_call(), 0)
call_4190 = relay.TupleGetItem(func_2405_call(), 0)
func_3568_call = mod.get_global_var('func_3568')
func_3570_call = mutated_mod.get_global_var('func_3570')
call_4200 = relay.TupleGetItem(func_3568_call(), 0)
call_4201 = relay.TupleGetItem(func_3570_call(), 0)
const_4204 = relay.const([[6.264567,5.706572,1.118876],[-8.772066,9.439834,2.253972],[7.943742,-4.926553,8.091978],[-6.696077,-7.654538,7.671434],[7.298416,-8.264546,-8.595289],[-1.266991,-6.066169,-6.674770],[5.934606,-8.742688,0.808550],[3.159107,-7.985978,-1.556318],[4.616472,6.990264,0.225598],[-1.900672,-2.774649,4.273862],[-9.225351,-6.692171,-9.163825],[-0.314374,9.477611,-8.883530],[0.018859,-4.319247,1.192676],[8.422723,3.423942,-8.153193],[-2.439636,7.915079,2.037480],[9.124948,-3.002598,-4.460502],[8.893258,-3.804451,9.551747],[3.352032,-9.277513,-7.939311],[-8.127304,-6.573048,-3.068647],[6.189521,3.045271,0.276063],[7.142794,2.516105,-0.116964],[-1.805678,-4.536814,-2.591780],[6.386485,-7.659669,7.977674],[0.779074,0.067982,2.890598],[-8.276658,-3.192402,6.409091],[-1.913133,-4.648071,-3.627352],[7.173501,-3.964932,-8.054691],[7.667722,-5.415201,1.708286],[-6.978801,-1.491825,6.785577],[7.922326,-6.200443,8.274401],[5.589412,-8.055842,6.536982],[-6.499846,-2.835361,6.746776],[-1.544990,-5.539123,-2.397577],[-0.848426,8.714479,-1.738554],[9.579541,-4.409927,3.722554],[0.920839,-2.393218,0.796259],[2.844156,-1.225155,-3.969923],[-7.859689,1.609122,-6.055199],[-7.309087,-5.022431,5.558652],[-1.790822,0.774070,-9.699355],[0.415214,4.725505,9.189648],[2.997012,1.659893,-2.020298],[2.458758,-5.120234,-3.124512],[4.196619,4.913313,-3.809422],[-6.545986,3.113039,6.389851],[1.083979,-7.109455,-6.816986],[8.840803,-8.671189,-2.748447],[-9.023862,6.515014,-0.855961],[1.082992,-1.797348,2.463691],[5.398429,-0.450649,7.044239],[-8.567172,-4.837481,-5.643827],[6.643970,-9.135309,-4.189021],[-0.471384,6.003678,3.094669],[9.121586,2.243759,8.314910],[-3.099652,-8.402461,-9.897160],[1.557694,-2.072030,8.715435],[-0.101444,-8.547438,-1.988164],[8.114186,-1.630663,-8.245364],[-4.087267,-6.412189,3.919710],[5.142423,1.979992,-4.031235],[0.759636,-4.420765,8.175693],[-3.549065,-9.543245,3.614100],[5.559980,-3.080119,3.334806],[4.506998,-7.531080,3.325865],[-4.048427,-9.105555,-7.253578],[8.812906,-1.922321,-9.920041],[7.736532,4.786279,4.271872],[-3.522113,-9.503031,-8.200649],[0.995914,7.262313,-4.089722],[3.460416,5.192593,-2.319492],[8.985540,-7.748925,5.827900],[8.148348,8.711977,9.114717],[8.385208,-3.880831,-7.342471],[3.273371,-4.162597,0.999569],[3.619933,4.382203,-8.444479],[8.997260,8.573557,4.844244],[-0.255270,4.779143,-1.636570],[-6.138399,-7.828454,5.332864],[-1.032902,-4.762197,5.251316],[9.499039,9.805256,-8.820436],[-5.258020,4.328224,2.326650],[-7.459054,7.411399,1.021913],[-1.677960,-3.208084,-4.709275],[8.073306,-4.789170,-5.066487],[-5.076995,3.273822,-5.763510],[2.819618,8.434064,1.648156],[-3.250363,-6.086774,5.222787],[2.242021,1.164492,9.563555],[1.192422,-5.135209,-3.299185],[0.629915,-7.174583,-8.596993],[-5.751366,8.258227,-3.575043],[-7.394807,7.038185,5.880199],[4.019916,-4.679217,-4.490550],[-8.090237,9.882531,1.993593],[8.634893,-3.417195,2.887356],[8.207143,-3.731349,8.188420],[5.593187,7.488069,-7.469598],[3.048378,3.188883,2.822226],[6.208086,8.036970,-0.833693],[9.423248,-5.072465,-7.247021],[-7.239898,0.707529,-2.234946],[-1.945445,1.792406,-2.473303],[-2.892949,8.072465,-5.994449],[2.230693,-3.557414,-1.831845],[8.820760,6.693561,6.810962],[-8.847237,8.254212,-3.463720],[-9.679784,7.256942,7.303551],[-0.465866,1.471848,0.582347],[-4.801327,-8.916841,-1.644717],[4.444098,-3.678136,8.443978],[-6.930293,0.096286,9.168807],[-3.803133,-7.262586,8.103509],[6.290102,6.520099,8.321888],[-6.346954,0.497566,2.420826],[9.318727,-9.127405,0.700475],[0.846664,5.351337,2.459065],[0.547203,-0.075899,4.090134],[5.129081,8.630688,8.976828],[0.242778,-3.790857,-6.008526],[-2.173494,0.983613,7.910127],[-7.164710,-7.898058,-3.545878],[9.973920,9.436843,8.225764],[6.863459,-1.450833,-5.144160],[-9.484647,6.412675,-6.556322],[-8.706290,-5.304839,8.819254],[-7.422370,-7.953782,8.847059],[-2.331207,-6.828083,1.356603],[-4.522345,-8.896147,1.324822],[-2.534385,1.359595,4.784121],[-9.081112,-5.108652,0.581898],[-6.598137,-2.974074,-4.215887],[8.039157,-0.758325,1.624597],[-9.247184,-1.720272,-2.819481],[1.881384,9.837392,-3.276651],[-6.482856,-3.162157,3.971979],[3.889696,2.044925,7.035726],[3.519460,-1.466416,-8.325341],[4.558915,7.300610,-9.299623],[-2.258455,7.456651,-0.390741],[-7.244562,-7.588431,1.929188],[-9.326017,2.533981,-2.428541],[0.100345,-5.534899,8.939400],[0.057913,8.906092,4.083030],[-3.351372,1.899671,4.267691],[-5.179373,-0.570476,0.159366],[-3.212224,-4.388324,7.037315],[-4.533199,3.508919,6.137754],[-6.240487,1.764369,1.513899],[9.255019,-5.347414,4.539099],[-0.164344,2.959892,-5.103116],[-0.965107,-9.085674,0.847161],[-8.270729,4.298062,-3.781104],[-7.756340,0.971599,-0.135761],[-4.267757,3.594919,-2.127432],[7.935835,-9.774280,7.553285],[9.619387,9.127066,4.814802],[9.715465,7.503378,1.366061],[2.483836,-9.016222,5.601897],[-4.688496,-4.340919,4.887244],[-3.521463,6.537730,8.018848],[-6.187159,-6.204511,5.584817],[-5.105576,1.003688,7.483363],[4.111402,4.560672,3.911897],[-4.440814,-5.443993,1.059062],[3.571305,-7.395627,-4.463491],[3.163259,-7.001308,7.848439],[4.357894,2.732088,6.005790],[9.370398,9.649268,-9.654216],[-3.564724,-3.865200,9.981730],[-7.819531,-3.400310,3.893114],[-4.502050,4.060442,-2.057448],[-9.826601,-8.638040,5.543567],[-3.877379,-7.258916,3.064948],[7.901657,6.395659,-1.110549],[6.903432,2.212120,-2.438166],[1.089163,5.593404,7.494575],[9.146206,-1.774846,1.447095],[2.901908,-3.356836,-1.273721],[-2.581625,8.960836,1.993905],[-1.051688,-0.435789,-1.979725],[-8.269522,-3.006154,-9.831290],[2.355150,4.256099,4.944934],[3.500072,5.274418,-1.582892],[5.695140,4.700967,-1.117127],[8.733924,0.676042,-3.997541],[-8.810479,7.119170,8.723143],[-0.139286,4.725439,-5.884215],[9.141012,9.736562,6.759306],[-1.828911,-8.373035,-0.993279],[-9.863423,8.340168,9.737213],[-6.417351,-6.899083,-4.144907],[3.551073,6.414969,6.549957],[-6.481396,9.347189,6.261490],[9.334066,-6.529465,1.150330],[3.514884,-3.478779,4.994367],[-9.011560,3.485792,-6.162723],[-2.172227,-8.441080,-4.465553],[4.499803,-9.359190,7.622163],[-9.553637,8.013820,-2.481207],[6.402145,2.814389,1.542097],[2.500617,-6.278082,-9.445096],[5.961571,-1.969854,-7.479680],[2.272514,3.950016,1.240117],[6.941853,-2.041487,-3.165474],[3.639411,-2.002319,3.029055],[1.249772,0.410575,5.784805],[-3.229643,9.078239,-5.726817],[-0.567976,4.327981,-8.267987],[-9.119051,-9.292254,-2.865796],[2.072676,-6.955192,-4.815286],[5.244627,0.085242,2.135538],[6.935640,1.734464,9.138712],[-8.592305,4.669237,7.004842],[-0.206483,5.424886,-7.417941],[8.102731,7.338928,9.327122],[9.169457,3.362949,-2.819769],[3.585265,6.698733,-0.982958],[6.392367,-5.621386,-0.201151],[-0.319820,6.245578,-0.876549],[5.425834,7.372144,9.603106],[4.107482,-0.510788,5.651867],[8.547420,-4.891382,2.011681],[0.695924,2.825066,0.933916],[-8.600240,8.725155,1.542828],[0.072535,8.068401,2.547008],[-2.721685,-8.518617,-3.030419],[6.393142,-2.470074,-2.401801],[-7.455485,-7.772349,2.729489],[4.246865,0.999868,3.687163],[-4.068841,-7.974511,5.641520],[6.216779,-2.590141,-6.973947],[4.397118,-5.515792,3.031679],[-1.665128,9.291980,-8.559362],[-5.541376,-4.665550,-2.269791],[8.194216,-8.665559,-8.284077],[5.657115,9.058803,5.833355],[-0.620309,4.058882,6.160089],[4.918400,-1.255916,-6.044826],[6.143734,2.651645,0.732188],[6.077309,-1.570758,-4.453026],[-2.224534,-2.962911,0.916901],[1.851448,9.920140,-7.372489],[-1.082091,-3.827281,-6.637507],[1.665526,9.590305,8.670498],[-6.091408,9.808002,3.352270],[8.240010,-9.428121,2.056633],[-8.396924,7.365529,-9.477840],[-6.371652,-1.297319,9.195065],[0.316867,-6.855206,9.886395],[9.137458,8.144167,4.216842],[-1.182943,-6.125098,-6.458650],[-4.294012,-2.031605,-9.669439],[-2.609950,9.350695,1.039954],[8.034326,0.876744,-0.194008],[-8.412661,-8.208899,-8.115546],[-4.952302,8.599773,5.919688],[-4.914008,-6.422722,-1.242428],[9.942541,1.921292,5.184422],[-0.909586,5.687263,-7.948981],[-3.653297,-2.575327,-9.124991],[-6.114405,0.758863,1.293455],[-8.794049,8.536784,1.810800],[8.305074,-7.157993,5.636429],[-1.750634,-9.796471,-9.548121],[9.743407,6.522672,2.434114],[-4.343003,-1.389825,9.839233],[2.085762,-8.089446,-1.671743],[-5.633841,-9.767139,-3.444698],[-2.049722,1.901599,9.143153],[5.404224,1.011327,-0.118057],[8.542865,-1.322176,-7.717783],[7.460520,3.794632,-3.686966],[0.203550,-3.101319,1.658933],[-2.100093,0.833046,9.175199],[2.134128,5.353964,1.004252],[8.264334,-1.892775,3.620376],[-3.807252,-3.397102,-2.807116],[6.756632,0.532539,7.909671],[0.820512,-7.484633,-7.324004],[1.319848,5.628044,-6.515327],[-8.783035,9.364547,2.968120],[0.090225,5.999914,-2.558114],[7.108997,-2.781266,6.544651],[9.361501,5.077466,5.610109],[6.881902,1.405742,7.422932],[-2.465066,6.808238,-4.858596],[-6.086659,-2.666344,-3.597978],[1.822173,0.247109,-0.183414],[7.365921,7.776709,-7.924319],[-0.365357,5.866286,-3.166464],[4.756634,-6.827376,-6.042802],[-6.564109,-2.951331,-0.275533],[7.837808,-5.710856,5.480824],[3.227668,2.491053,8.568535],[7.468749,6.511416,7.474365],[7.905953,-6.237286,-5.008419],[-6.737568,6.128407,3.576102],[0.990178,9.224423,0.098799],[8.715765,-5.099094,2.967825],[-8.583510,8.678768,5.348748],[3.125579,-0.043519,-6.283050],[-5.209025,1.726858,-1.588929],[3.897143,1.063757,9.149587],[-5.911410,1.401864,8.135443],[-4.878700,6.728716,-7.717985],[6.296391,8.730225,6.235663],[-4.153074,-1.487133,-6.016552],[-8.338486,2.653103,-7.034326],[7.870484,7.727299,5.539200],[5.575228,-1.716765,-9.084520],[-7.954190,-0.216164,9.447734],[3.220840,8.724602,6.167793],[-7.662597,1.814019,5.872452],[9.661156,-2.497710,0.664647],[7.055236,-4.802541,7.865225],[-6.876951,-5.073599,1.078153],[7.506848,7.548913,-8.544225],[-6.951364,-5.481321,-4.736533],[3.593127,-2.624569,-9.951801],[-1.624989,2.707521,2.659405],[3.337889,-6.926593,-3.463525],[7.075981,-4.628885,-4.988028],[9.525887,-8.728813,3.906683],[9.479111,-4.307812,-0.183432],[0.724327,-6.518882,7.917746],[9.892870,-9.999359,-0.147716],[6.603926,-1.363218,-1.222229],[-4.152455,2.694772,-6.350430],[-2.784821,3.784270,2.681627],[5.349759,-5.994404,0.472287],[-1.411196,-7.363269,-9.296045],[8.063913,-6.612026,-8.703351],[8.658577,-9.612196,1.649480],[5.750786,-4.767045,-3.480057],[-6.699754,-1.644373,6.912178],[6.039877,-9.638559,-6.770195],[-5.874839,-3.646416,0.918012],[-9.380404,-5.286567,4.695550],[7.390678,7.497519,-6.492809],[9.007351,7.840435,0.874548],[-6.345277,-9.864115,8.940134],[6.288079,0.238292,-6.156199],[-0.214912,5.814544,-4.376791],[-9.315697,7.481359,7.661867],[6.104838,-4.671829,6.424118],[-6.457405,-8.010685,-2.820868],[0.196336,-9.810573,-1.055111],[-8.465744,3.925926,6.611976],[-4.274780,3.143734,4.594847],[5.262655,2.862920,4.097528],[-4.046256,-9.097534,7.242887],[-3.218336,3.570276,8.483118],[7.909142,-6.687494,7.207378],[-7.187269,-0.434356,1.524041],[7.023201,-6.443170,-4.176557],[7.572395,5.265657,-0.528609],[-7.348302,-2.646775,6.786397],[9.550860,2.964126,5.079175],[8.014917,-1.502428,6.282623],[4.146133,8.140900,0.737341],[-3.597925,-3.744789,2.707962],[-1.346795,5.759087,9.480007],[-6.285213,7.964015,-7.556506],[-6.423034,6.906021,4.866997],[-7.429032,4.713125,2.379012],[0.576257,3.713653,1.119036],[-7.491919,-9.624183,-2.262871],[-4.696592,6.301698,-1.485135],[-1.784136,3.366206,-4.817856],[-4.732197,-3.050661,-1.276432],[8.101682,1.786519,8.715655],[5.186868,-7.681814,8.081008],[7.753996,9.560284,4.829541],[-0.246633,-4.512506,8.038305],[7.333342,0.345405,3.201930],[1.624754,8.485354,1.081709],[8.845033,7.930053,0.724883],[5.922049,-4.441793,8.454579],[-3.714847,-4.678557,9.892781],[8.978299,3.696871,-5.113855],[-0.226987,4.931713,-9.419786],[-8.426085,3.583884,6.243846],[-5.391412,5.642290,6.783321],[1.714681,1.966504,-6.503105],[3.650056,8.305258,-7.702872],[-5.630095,0.362702,4.359441],[-1.706257,2.393020,1.302707],[-3.705566,2.937019,-5.492247],[-4.426610,7.983146,4.058097],[1.398676,7.905427,-3.005032],[-8.853900,5.142126,-6.004566],[-9.631770,-4.627328,7.063557],[-0.001676,-4.644174,6.837097],[0.747967,-9.442335,5.306762],[-1.403961,-9.025912,0.504056],[-6.735754,5.469872,1.066798],[-7.022856,5.845124,-5.247869],[-8.010051,-3.340077,-1.723158],[5.981003,-7.946903,-9.305241],[-4.994524,-5.931404,0.229094],[0.783413,5.070686,0.872970],[-2.466897,-5.391298,-0.475066],[-0.445462,-1.475524,0.643556],[3.806277,-7.630813,-5.630413],[6.862345,4.667546,-5.528838],[-3.512956,-3.726753,-5.710010],[-7.251232,1.871830,-1.386322],[4.658078,-7.796700,-3.470411],[8.690517,0.418261,7.961163],[-5.809059,-4.152786,-6.000815],[-9.016049,-8.935034,-6.895861],[-6.283972,6.023391,-1.718783],[-5.135096,2.756861,3.133938],[-8.441353,1.354988,-7.094184],[-0.731903,1.798612,-7.093804],[8.058970,-7.928277,-5.548000],[-2.478952,-5.920390,-5.497661],[-6.747787,-5.701978,-6.300841],[6.824547,-6.263401,-1.609755],[7.703197,-2.285445,9.721401],[-0.560354,0.321864,-2.758638],[9.109231,0.322917,-3.013000],[-2.638978,-0.846147,-0.901723],[-0.250266,5.437573,-1.301987],[0.698756,-5.387087,3.878727],[8.246701,-4.759545,-2.955905],[-9.619014,-6.949661,3.559279],[5.418671,4.011003,4.440178],[-1.852027,5.398131,-1.688596],[2.849182,6.998717,5.722595],[6.690984,-2.215124,-0.303434],[-7.589408,-4.727056,-9.780669],[-0.284982,-1.651968,0.869727],[2.669969,3.131640,5.159750],[1.322982,-7.652687,5.909392],[1.897424,-6.668620,-1.401703],[-9.366876,8.959116,4.111614],[1.265107,5.850544,8.710654],[7.943968,4.148524,2.681085],[-4.820920,8.902419,6.807216],[9.671166,-3.433677,-3.021518],[-3.730117,5.822277,-5.682197],[4.621040,-9.754575,3.664758],[8.067215,5.385896,6.968514],[1.116984,5.378825,-3.084764],[0.262924,5.980545,1.240685],[9.028502,-5.415466,9.938160],[6.042723,-9.243400,-8.329126],[-5.435551,-1.394179,-5.404356],[-2.294090,-8.950540,-7.464227],[0.699777,-5.407038,7.598261],[-0.834927,3.810379,-3.667071],[3.537063,9.262286,0.270172],[6.118796,9.677203,7.257519],[-0.642217,4.826690,1.817466],[8.511409,-2.100786,2.504251],[-7.943277,-8.145593,4.231195],[-9.201263,-1.285377,-2.562813],[7.162387,5.442969,-3.875578],[-4.411644,7.393847,2.997130],[-6.157327,1.105535,-7.454875],[-4.183106,-6.176653,-5.503535],[1.215348,1.262584,-3.273439],[-9.370243,6.647197,-9.004748],[-6.740649,-4.738345,-7.016494],[9.943680,3.598635,1.810432],[8.852739,-3.056236,-2.967539],[1.484853,4.398199,-3.144155],[6.984588,-9.774401,-9.893783],[-5.600657,9.881100,-6.144421],[-4.936772,-3.780872,-5.877629],[2.169574,-1.880595,-6.402718],[-8.650597,-3.656433,-0.857078],[5.370514,6.251322,-4.529153],[-3.170175,4.211085,-5.561674],[0.540741,9.052431,-4.584591],[-5.118284,8.149557,6.085955],[0.837026,-6.021121,5.786785],[-4.918353,-4.241409,-5.014952],[-5.819233,8.908819,6.202299],[3.903377,-7.554493,-2.778091],[7.086918,-3.433839,8.104715],[-1.952367,6.812568,7.304206],[5.499982,2.784728,5.826083],[-1.430487,-8.119911,0.623806],[7.698064,-0.811401,5.570452],[-2.524884,6.257727,-0.874356],[-6.845851,-6.438537,3.544305],[3.360845,2.994369,-0.296246],[-2.300143,-2.183773,-0.346486],[-6.521164,9.789759,4.302720],[-7.967522,8.211655,-1.594148],[-7.270853,-7.950913,-1.815187],[-9.241214,-6.196434,-2.480966],[7.691633,0.684404,6.437150],[3.943374,-9.849656,-1.083600],[-4.881890,8.862194,6.222554],[2.358143,0.015566,-3.502860],[7.743120,1.672354,-8.414491],[-5.503786,-7.620836,-5.357896],[0.126137,-8.063586,-5.240032],[4.455842,4.154561,-5.906860],[-9.383018,-6.724350,1.365459],[9.902234,-6.390244,-9.723922],[-0.319022,-0.419958,-4.823982],[-0.803146,-8.026137,3.220352],[5.657520,3.290726,-3.663958],[2.528097,1.421343,-5.459032],[-6.110355,0.473473,-5.969779],[-1.611248,-2.662162,9.139916],[3.788641,-4.471857,-7.312704],[-1.089711,-2.019495,-6.162076],[3.255265,9.561795,-9.684748],[2.228251,1.819946,4.963376],[-7.009608,-7.763264,-5.632403],[1.943983,3.739966,3.337739],[-8.574932,-9.958707,-6.787229],[5.440162,-5.514291,-6.785169],[-5.142084,-2.286447,7.121370],[2.770680,3.782004,-3.594054],[1.467174,0.906948,-7.674884],[2.260199,-3.242039,4.046241],[-7.774520,-2.344033,-0.091155],[1.040819,-1.335455,-3.421144],[4.524808,2.229566,-5.927812],[-5.713433,2.914083,-0.959887],[9.176904,-3.110889,1.069110],[-7.894047,-2.337088,3.318557],[3.556446,8.289218,-2.032221],[6.098175,1.683524,-7.300489],[7.396371,-9.006969,-7.668403],[-6.674092,-9.336574,1.662455],[-8.250818,9.578754,-9.910589],[3.838411,-7.358481,4.169995],[5.832231,-5.680974,3.541831],[-5.938331,-0.623672,1.150484],[7.867934,-5.299677,9.064540],[-5.071266,2.695717,-8.082503],[-7.923490,3.602336,2.265679],[7.437475,-4.890973,4.088538],[-0.012567,-7.722656,-3.304300],[9.796159,4.388566,4.657748],[3.169964,-7.454447,-6.461999],[-5.848773,4.457202,0.659185],[-7.952249,5.397460,-0.113286],[-8.292327,-3.561940,2.762949],[-2.007817,-9.611382,-4.357031],[-5.534859,7.507197,-6.729464],[-3.236940,-1.334518,3.389942],[-3.642642,-7.361217,-7.531404],[-5.468022,6.569925,6.029381],[-9.684182,2.868285,4.040308],[-6.351591,4.633433,-5.656317],[0.908535,-7.669665,-9.826157],[0.921743,3.337152,-6.807155],[2.089623,-1.343964,8.084670],[5.757101,-6.489025,6.523470],[7.806444,8.207512,0.182862],[-2.805253,-4.835113,2.425669],[-4.376293,0.235696,-0.229618],[3.585310,9.118088,9.900988],[8.136171,-3.720164,2.603597],[0.419714,6.758583,-2.736077],[2.903425,-5.256804,4.137642],[-2.552617,-3.650008,-5.572928],[-2.578695,-9.516833,2.901852],[-4.514834,7.122827,-8.190138],[-8.610069,4.906278,4.627428],[8.110451,-9.980421,-4.999479],[7.598343,-9.104579,5.386847],[-2.001270,-2.786577,3.465909],[-0.838782,8.013723,-9.642335],[9.109382,2.870676,-8.747455],[-9.124391,7.535868,1.281655],[-9.947608,9.587349,8.750674],[3.171335,-4.340379,-5.338887],[-1.614397,0.587584,-7.961135],[8.616655,2.045747,-2.148825],[3.892133,8.442032,-4.784412],[4.934105,9.618812,9.832636],[3.797606,-4.035913,-7.232384],[5.657998,-8.171142,-9.062711],[-6.620493,-8.134287,5.815638],[8.567747,2.990331,0.504825],[-2.201143,-7.301650,2.462692],[-0.243684,6.087016,-8.849308],[0.275575,-6.306807,7.809150],[8.819467,-4.400749,5.806858],[-9.112440,3.884544,3.474361],[7.622659,3.984715,4.231033],[1.888859,5.080006,-7.020570],[2.094575,5.406891,8.130541],[-9.954796,-6.010411,-8.171798],[-3.967271,-9.629407,-6.252813],[7.925840,6.139012,-1.556879],[9.917804,-4.982198,-6.137079],[2.445247,0.503560,7.670376],[4.798058,5.255635,-5.663982],[2.851330,-8.784325,-8.473025],[2.636753,3.296133,-4.852814],[1.666034,9.796448,-8.992986],[-0.173950,2.135490,-2.879993],[1.298801,2.874651,5.185094],[-9.140494,-6.533164,8.754278],[-8.345472,-8.957194,0.022594],[8.558418,4.662410,5.113680],[-7.794829,0.752030,1.817148],[-7.710952,0.738220,2.578210],[1.430263,8.810563,-6.855946],[6.773302,5.789188,-5.028580],[-6.614276,2.392723,4.547468],[-3.622708,-6.090290,0.033196],[2.428932,-2.639332,3.722802],[-3.589027,-9.331744,9.126813],[-8.755417,5.217362,-8.908936],[-1.125577,2.194683,-7.542462],[-4.081418,-0.170664,-9.666998],[-5.112040,1.634530,-0.233569],[-9.400714,7.093295,-8.565906],[-7.642227,7.949703,-9.835993],[9.043008,6.274734,-2.049109],[8.209467,-8.110297,-3.061720],[-2.651387,-7.402813,1.296478],[-1.411796,1.448303,-4.525100],[-6.442881,-2.756883,-0.044715],[-6.191697,-3.528260,-8.931907],[2.162440,5.529051,7.302496],[3.092786,0.939275,1.213755],[-4.280949,-1.065105,-6.368510],[-7.898184,7.666693,-5.190538],[9.568520,-9.598423,-9.209542],[6.229299,-8.707100,8.394064],[-2.801058,3.805152,7.508068],[-3.016298,4.960337,4.714668],[-7.464446,-1.529352,8.945101],[0.768601,2.512403,-1.363858],[2.868155,-0.782755,-8.721246],[5.515543,-6.205889,-7.714044],[-0.853587,0.065603,-7.672003],[0.738046,-9.262160,-9.647848],[-5.270570,6.325003,2.025113],[-9.859942,7.340928,4.764877],[-0.853998,-5.704434,4.600273],[-2.289567,2.264382,3.443636],[9.957510,-2.627530,9.696465],[9.521311,6.489308,8.864111],[-2.427294,7.276483,-6.989719],[5.410297,1.684254,6.463273],[3.467748,-9.334427,-0.441971],[-9.496189,-0.460996,8.527717],[7.376419,-2.502763,7.606344],[-1.710066,4.033793,0.930008],[-9.552467,-1.817533,-2.370689],[-8.399846,-0.512812,7.725016],[4.789095,-4.026187,-4.958926],[3.072352,-5.760238,-0.238510],[5.371442,3.387362,-8.029718],[8.089315,1.592085,1.583138],[1.514888,0.268337,-3.161801],[-1.535863,-1.864906,-1.923170],[4.104416,4.477253,6.752459],[4.414779,-5.842803,0.048876],[-6.911397,0.429945,-7.686045],[8.865859,-1.300646,0.300246],[2.071618,-7.006856,-3.392713],[9.651069,-1.974475,0.467601],[-6.538221,4.937046,9.442743],[-0.495946,4.920608,-7.300955],[-7.977949,7.112232,-2.297858],[5.897087,8.224529,-9.667522],[-9.245596,2.084947,-1.352278],[-3.377262,2.922519,9.029370],[-9.264820,-4.139277,2.275502],[-3.134384,6.329652,-4.507141],[-3.779160,3.644571,-6.111581],[-9.185341,8.438970,6.203456],[-2.215119,2.504416,2.082385],[2.880771,-2.141459,8.135054],[-6.434617,5.871438,-6.982280],[4.379008,1.705167,-2.198809],[-1.356362,2.378307,-1.427164],[4.572024,-6.679315,-2.372715],[8.855257,-5.142980,-7.870471],[0.764823,4.666752,-6.240230],[6.428098,-1.033645,-2.120908],[-0.443045,4.394102,9.737956],[-4.558982,1.215295,8.122939],[6.357579,0.876591,-8.815346],[4.207225,-0.704954,-2.578223],[-4.652157,-4.336928,-6.097155],[1.925174,-9.869599,-3.903062],[-3.369747,-3.772658,-4.096308],[-9.880317,5.478099,3.769821],[8.239388,9.225074,0.716300],[-5.924659,2.876993,-8.726674],[5.195552,-9.882735,1.991765],[9.576334,-9.839870,1.577385],[9.770722,-3.607792,0.727424],[-1.070708,-3.170470,-6.504716],[8.312281,-3.490998,7.314447],[1.147145,-9.928671,-1.566889],[-7.005608,-5.901573,-1.790348],[8.780963,0.697927,-4.204133],[3.087617,7.341051,-0.997236],[5.949545,-0.284806,0.729479],[1.944539,-0.919631,-0.347130],[7.275607,9.905031,9.342141],[9.372263,9.900239,-8.980058],[6.489849,0.465061,-4.704223],[-5.426133,8.208644,7.221283],[-4.201512,3.890320,-3.694485],[-8.778940,0.424370,3.053209],[4.504083,0.548448,5.029291],[-0.043038,-2.461566,4.540334],[9.648881,-2.326917,-3.388785]], dtype = "float32")#candidate|4204|(715, 3)|const|float32
bop_4205 = relay.bitwise_xor(call_4200.astype('uint32'), relay.reshape(const_4204.astype('uint32'), relay.shape_of(call_4200))) # shape=(715, 3)
bop_4208 = relay.bitwise_xor(call_4201.astype('uint32'), relay.reshape(const_4204.astype('uint32'), relay.shape_of(call_4201))) # shape=(715, 3)
bop_4212 = relay.greater_equal(bop_4205.astype('bool'), relay.reshape(const_4204.astype('bool'), relay.shape_of(bop_4205))) # shape=(715, 3)
bop_4215 = relay.greater_equal(bop_4208.astype('bool'), relay.reshape(const_4204.astype('bool'), relay.shape_of(bop_4208))) # shape=(715, 3)
bop_4229 = relay.floor_divide(bop_4212.astype('float32'), relay.reshape(bop_4205.astype('float32'), relay.shape_of(bop_4212))) # shape=(715, 3)
bop_4232 = relay.floor_divide(bop_4215.astype('float32'), relay.reshape(bop_4208.astype('float32'), relay.shape_of(bop_4215))) # shape=(715, 3)
uop_4234 = relay.log(bop_4229.astype('float64')) # shape=(715, 3)
uop_4236 = relay.log(bop_4232.astype('float64')) # shape=(715, 3)
var_4240 = relay.var("var_4240", dtype = "float64", shape = (715, 3))#candidate|4240|(715, 3)|var|float64
bop_4241 = relay.divide(uop_4234.astype('float64'), relay.reshape(var_4240.astype('float64'), relay.shape_of(uop_4234))) # shape=(715, 3)
bop_4244 = relay.divide(uop_4236.astype('float64'), relay.reshape(var_4240.astype('float64'), relay.shape_of(uop_4236))) # shape=(715, 3)
func_274_call = mod.get_global_var('func_274')
func_277_call = mutated_mod.get_global_var('func_277')
const_4249 = relay.const([-2.650303,-6.433801,-9.366681,4.824117,-5.524564,-4.870569,-8.567566,9.215851,-2.773601,0.601272,2.857704,9.920312,-8.567178,-0.094608,-7.797299,-2.858084,3.130306,-3.392761,-6.663624,-6.945492,5.854597,4.030280,-7.840799,-5.060327,-2.519728,-8.548823,0.892272,2.630973,-0.345429,-5.402519,5.912399,2.193143,4.771108,-1.205755,-5.583619,-0.422313,8.018118,9.243281,7.094438,-1.214160,9.331862,4.198787,3.130535,-6.346215,4.204090,-2.598485,7.296070,8.679313,-6.063688,2.635951,-3.111649,-7.817112,3.852285,-2.446990,8.323518,5.152775,4.928537,0.619525,7.139849,-9.998283,-7.685969,6.876592,-8.302520,-9.662585,-6.715699,6.301832,-0.679501,1.804901,8.412340,-9.203906,-9.931200,-0.486109,-8.912771,-6.813009,1.600730,-4.459822,-8.155191,-4.800960,-3.311849,7.209796,-9.494257,-3.887061,-1.855492,-3.174485,4.087930,-4.959045,-3.433327,0.668784,-9.939777,-1.935403,-9.105262,-1.862858,-4.964581,3.735210,1.451816,-6.757341,-4.138931,-6.788318,-7.908319,-2.518636,2.266454,9.769242,6.233740,7.902329,9.885406,-1.149932,-6.492128,-6.829921,5.957604,-1.571063,-1.845975,-5.127072,2.465683,4.921186,1.298628,5.135755,-1.999426,0.531159,0.844971,7.350945,-5.911416,-0.818666,-2.596443,-2.607386,-3.637713,1.803308,3.130504,7.559138,-9.251133,-8.161392,3.020464,0.728188,-6.799792,0.254038,8.631073,-5.042874,-5.413649,-2.016613,5.690957,-0.591255,1.010876,-6.061574,5.458915,7.313134,-4.284176,-5.435104,3.957591,2.684101,-1.306689,9.399974,-7.764307,4.658284,-4.899089,4.622955,-4.709265,-9.494074,2.806763,-8.470891,-9.679087,8.290587,6.390235,-9.719405,1.887863,1.120037,3.291072,2.783142,-0.198463,-2.688862,-6.910948,4.283787,-3.798528,9.286070,-6.734865,-8.568185,4.086316,-0.111193,9.556312,-8.525558,-3.835990,-7.863093,-1.694394,4.696815,2.860423,-3.685260,-0.731660,-3.621736,7.181702,-2.322204,-0.820122,-3.495425,-3.682822,-7.754745,-0.159845,-7.499533,-5.231487,-1.795380,-4.124913,-9.920297,2.722430,-0.125606,-7.544162,-9.165754,-8.631739,1.576710,-3.977698,-9.385977,-5.398725,-1.179074,0.816157,-1.211222,-3.098900,7.881369,-6.664949,-6.015433,-6.438065,1.695113,7.960585,-7.979782,9.196335,-4.381242,7.549340,-5.631829,-1.262868,-8.274906,-5.933358,9.862374,1.921390,3.461373,-1.390685,-2.940578,-0.410266,1.421712,8.310091,6.145859,-5.388220,-4.249064,9.996199,1.167367,-0.086572,2.672172,-7.404424,9.713784,5.170488,-3.061370,-6.274234,-0.508793,-0.531215,-1.660165,5.657416,-5.044701,-5.649592,-5.215345,-2.075787,7.357031,0.707900,3.485623,0.148666,-6.174722,7.584002,7.055588,5.440923,9.586242,6.642375,5.795006,2.292456,-7.835421,4.544776,2.430099,6.162060,-0.076180,-9.200979,-1.068955,-4.720785,-1.980523,4.376354,5.103016,-5.772862,8.740511,-5.074070,-3.271873,-9.847955,9.561742,2.859302,4.610201,4.170299,-3.501226,8.158231,-0.121376,8.749023,-1.814743,-7.245066,3.463540,-4.709369,-1.854504,1.110291,-2.963466,-3.248727,4.095586,8.655805,-9.156552,-6.600501,-1.441263,6.788081,0.528039,7.637742,-3.290850,3.203408,-5.764806,-8.391990,4.514141,-6.307517,7.498629,8.406455,-7.280455,-2.772997,-5.432495,3.845109,-1.446504,7.142216,1.004723,5.508833,-4.985432,5.244610,-8.548527,5.861134,-7.393778,-7.461980,-7.830707,-4.992809,-1.312897,3.794945,-7.247975,4.728714,-1.038879,-6.348822,4.859214,3.783513,5.067861,4.640562,-8.587659,0.421433,-1.806661,-1.234676,7.366670,4.610220,2.773785,-7.997564,-3.887827,5.183686,-6.454705,-5.922188,6.574702,1.222005,5.420211,1.960766,-1.625881,-5.692343,-1.148997,1.577813,5.908254,6.715206,-8.561256,-0.525203,4.705565,3.622906,-2.902876,9.636206,1.056535,-6.809416,3.949733,-9.230472,-3.464390,-3.663170,5.320898,-1.238074,0.965943,-2.420224,-7.516069,-3.424264,-2.924973,5.287235,7.469319,-2.089128,-2.133132,8.248484,-6.730474,3.667457,-8.906861,7.888005,1.387290,2.920733,7.820077,-6.776920,-7.855180,5.272138,-4.563659,4.411610,-7.826855,-7.171178,-4.692951,-0.883377,2.929090,7.714386,-3.049860,-2.047532,8.288470,-7.368667,8.176310,-3.149911,6.231920,-8.301907,-6.463997,0.928092,4.066626,8.054492,-3.934641,6.489169,7.542106,8.684443,0.945564,-5.404927,0.763422,-8.805021,0.930570,2.353869,-0.572564,0.957535,8.236913,5.407745,-0.883084,3.187518,1.943220,6.057180,2.770101,-5.829906,-4.843464,3.857458,5.665674,-4.340083,-0.947363,8.123302,8.361561,-9.971821,4.772428,5.451234,-0.012739,-3.502519,1.621327,9.001464,0.138760,-8.332569,-6.293746,1.374440,3.500606,-1.158522,5.098360,-9.553033,-5.926404,-6.334512,0.810955,-6.204041,-9.483978,8.265423,-3.604573,-9.043963,-4.078706,1.032103,2.450250,-7.330428,-7.391584,-8.555148,-5.264549,-1.941954,4.968968,-3.097118,-6.423143,0.944638,-4.867624,8.122832,2.020940,-0.643572,-0.641146,-3.314256,-1.519206,-9.062794,9.197222,5.707284,8.054849,5.699179,-6.990487,7.415397,-3.980323,3.238808,5.589780,4.679115,-3.601417,-2.172677,2.680722,-6.468475,9.104745,-5.065991,-6.301079,-9.175495,2.575779,-5.529294,-7.144093,-9.025830,-1.096194,4.784377,-2.556043,-6.670645,-7.371631,0.481671,4.778153,8.386988,-1.692067,-4.858614,7.425069,7.467047,-9.825851,-3.258892,6.822880,3.042602,-1.529627,-5.743732,5.540234,-7.029130,5.383116,4.131735,6.076678,-4.453407,-6.590049,-4.567853,0.888984,-1.271282,-8.025718,-6.677944,7.897409,4.983632,-4.233129,4.744475,0.097383,5.835167,9.646037,4.589515,-4.425613,6.855344,-8.723930,-1.144151,4.668321,6.620638,-4.663860,2.752187,3.399940,1.099467,-7.539781,1.048868,-1.003099,7.323066,9.880849,2.855547,-3.794337,-1.685332,-6.729663,-8.177448,5.654812,2.895294,-3.157070,-3.289500,-8.656282,2.359831,-8.653534,-5.398322,-7.847894,-4.371107,-1.218611,5.670766,-7.973177,-1.723354,-9.452285,-0.941505,-7.811102,6.028617,4.325123,3.974251,-3.609551,-0.410688,9.881889,9.999237,-2.632035,-2.973294,0.114499,7.872731,8.683878,1.549240,7.085013,-7.453409,2.447195,-8.307278,7.935801,-2.869954,-6.803064,-0.982246,7.387765,4.062746,4.260621,9.490686,7.273183,0.100574,-3.422239,8.050503,-9.202976,2.338508,0.716010,-2.037085,2.170793,-0.963834,-8.003120,-9.306211,6.959428,3.690590,2.126025,9.366912,-9.199510,5.750251,1.948665,-3.556222,-1.106958,-4.269819,2.200080,-9.915559,0.225227,-7.717441,4.921352,-6.551368,3.947397,-3.103211,-2.797443,5.658424,-3.610201,3.350988,9.839327,1.967713,8.400689,-1.862846,1.723617,-0.608737,9.165511,-7.654494,6.435665,6.810489,-5.630704,0.414359,-2.144831,4.207319,4.181257,-4.977599,-3.795980,8.522563,8.774250,-1.760227,-4.293584,-5.343468,-2.582143,4.204527,3.681737,-1.899387,-0.361533,-5.067314,-2.144944,1.596105,-8.768701,1.277655,1.077735,-5.146655,-2.274209,9.609415,2.420411,-9.493852,-2.369963,3.059562,1.910042,-9.775768,2.050701,-3.658051,-5.330720,-4.005004,0.108572,-0.275349,-1.360930,-7.457702,8.007224,9.033690,7.842400,-5.502447,9.729683,9.121359,9.314486,-6.188524,-1.899300,9.229515,-9.333243,9.255664,0.647824,3.369326,-2.788008,-1.580465,6.943161,4.260429,1.444321,6.990817,9.929029,7.885586,-1.985924,-3.039049,-3.029665,4.983750,2.879860,8.434906,-6.604702,-7.774147,-6.025769,6.156725,-6.011764,-7.212907,-2.032729,3.443831,-3.815801,2.830301,-9.539413,3.566761,0.819132,-6.279922,1.282589,4.508836,-9.084551,-4.236585,-8.823432,-2.213631,-5.484159,-7.688231,-9.642125,5.066564,5.614887,9.640678,-5.482267,-4.760804,-7.786694,-1.854464,-6.915880,7.072140,1.687043,8.223824,5.119247,-6.085506,-9.047371,2.083363,-0.884080,4.131533,1.268360,-8.456723,2.641303,1.109095,1.041796,0.066796,9.617397,-6.092624,9.918085,-7.112731,6.423242,-6.811773,0.207542,0.075913,-0.034860,1.439455,8.493995,8.548629,0.688438,-9.021316,-8.122106,-4.726784,5.953605,-5.709985,1.234699,1.841002,-9.803690,-6.717424,5.342961,4.930028,3.186791,7.746798,-1.521602,9.135420,0.238845,-3.134727,-2.317232,2.144700,0.162415,-7.099091,-7.148098,-6.651323,1.415996,9.066287,-6.209221,2.884864,4.245585,-6.319705,3.123984,7.838536,-5.327339,5.653760,1.246964,-4.376686,-9.352469,4.931623,-0.560400,4.150254,-3.018713,3.782000,-1.860301,-1.657772,4.862191,1.019692,4.443053,-2.820369,1.604093,-0.531594,-7.874673,8.472044,8.985895,-7.140184,-2.979921,7.367168,-2.847568,5.001824,4.605063,-9.108331,0.014939,-2.961230,3.566023,-9.949303,-9.632169,9.294601,6.962081,1.403054,1.555649,-0.920419,-8.998649,-5.345627,-5.033522,8.556366,-8.857235,5.902846,0.585265,-2.278907,-1.075440,4.041143,9.799859,1.636515,-6.763443,0.235846,-8.755385,8.883444,9.445952,8.907991,-4.476317,-6.613688,1.147862,-6.516681,2.519118,6.372921,6.736620,-7.801005,7.031846,1.454353,-2.618590,9.490514,-8.667651,1.890485,-7.070625,-2.812994,9.390737,5.526044,-9.811989,-8.751795,-4.719970,5.470915,-4.420091,-2.026272,9.772007,8.821203,-9.459815,3.797230,-4.656946,2.961723,3.023277,1.944645,-8.996868,0.060705,-4.580544,-9.557958,3.866367,-4.450820,2.040597,0.966986,-7.668063,-1.496979,4.214799,1.379464,3.819083,9.342460,-6.001601,7.912742,5.848789,8.098161,-5.219216,6.162342,9.568251,-0.697699,-1.974265,-7.230558,-9.456521,-2.281577,-3.450558,9.084298,-6.344375,-7.967690,2.968311,9.934331,5.085820,-3.022809,-6.523213,2.272793,6.652015,-8.843564,-3.288633,-3.642156,8.849104,-9.756166,2.360545,9.806952,-5.256104,-4.437202,-9.915699,3.524468,4.082862,7.753214,2.766420,5.945709,-1.309039,-4.368426,-1.618091,-2.410623,7.942610,7.372517,-7.806445,-0.711697,9.460086,5.706160,-5.068586,7.661490,-2.652190,5.207960,6.960816,2.208547,-4.216518,-6.445866,-0.885802,7.753976,-1.865004,-6.091354,6.619459,7.789322,-2.333663,-5.870630,9.122692,-7.435419,0.389348,5.375972,-2.945806,-3.470156,0.272374,-5.927064,0.297798,6.800427,-9.657140,2.415846,4.521544,-9.224391,4.099392,-6.287714,-9.267949,-8.229991,6.213591,9.671141,-3.329730,-8.708935,-5.956937,-2.699442,-8.521448,2.476736,5.290304,7.497484,-1.406371,-2.748989,-3.791600,-4.948272,9.817919,-5.096136,8.622849,0.915261,-0.031972,3.941956,-9.834973,-8.835047,2.780537,1.792609,-7.605060,4.945866,0.844876,-1.656357,0.430436,-7.568693,-9.599743,8.410727,-3.999405,9.700023,-2.063423,-2.183450,-1.008954,-5.883280,-3.464530,0.301095,-5.018621,8.063467,-0.043550,8.935845,5.389894,4.858114,8.711420,5.473317,7.128512,-6.052617,8.666188,-0.093850,0.816305,5.190474,-8.749333,0.992734,-0.830199,-7.736583,-0.555851,-4.425796,-9.434456,0.031985,-1.901687,2.891636,-0.048915,2.449399,-7.104504,4.310144,-6.489297,-4.089571,6.671241,9.412620,-5.401664,8.498910,-7.391117,-4.595156,7.916092,-1.495199,-5.086866,9.548255,0.571487,-6.961305,-1.392504,4.468478,9.195553,7.287577,8.876524,-6.627955,1.719200,7.727958,9.904639,-4.887287,8.399370,-7.666062,-6.134104,-5.510164,-1.739319,-3.341416,7.465016,-1.929822,1.932715,0.917595,-7.996881,-2.604091,9.631727,9.335206,-1.015074,7.816132,-1.613125,4.858403,2.428106,-8.126404,1.099735,-9.632061,0.971466,4.758628,5.168834,0.818098,-5.045146,5.574034,0.829055,-0.725833,-6.522398,-4.699575,6.949376,6.703327,7.849163,-4.124756,-5.464943,0.377674,7.138877,-3.792690,-4.530395,6.814413,-0.403908,-2.032021,7.681566,2.251732,3.127964,9.313387,3.213986,1.627982,-4.499711,1.276967,4.218365,-1.307188,8.095569,7.518589,4.241567,-4.083510,3.411487,3.909972,0.265495,-5.594510,-6.941905,8.558838,-3.055170,5.777784,4.275443,-4.891374,2.069566,4.762863,9.241425,-4.631590,2.156883,-2.819185,-2.940484,-3.147936,-7.740572,-6.738321,-6.394581,3.684745,-6.744301,8.108968,7.331961,-3.874194,7.205634,-6.299452,-1.618703,8.001777,3.665393,-3.532264,0.564267,-2.521592,8.937198,4.828201,-3.703461,7.814176,4.746743,-9.685120,-6.989622,1.344315,2.129106,-1.589202,8.704744,8.510408,-2.139204,-8.395946,-6.964028,3.886559,4.623089,8.194865,9.246402,-7.536531,-2.386313,-4.402593,-5.678620,-2.991184,5.203409,8.808546,-3.260067,1.811238,2.699108,-5.236440,-2.980536,5.618828,-7.962652,-8.825207,7.277165,-5.806971,9.926513,-2.996160,5.834745,8.611800,-2.088488,7.663331,-8.435493,1.750818,-1.466078,3.496507,9.506904,-1.003180,-2.626731,-0.780734,1.017399,2.978889,0.494937,-9.915571,-5.288465,3.911917,1.314209,6.228208,0.029463,1.864427,-5.842511,8.069290,1.519037,-1.147515,-3.195005,-5.257948,3.385287,-3.682436,5.245880,5.636746,3.159954,-9.437712,7.262681,-0.920927,-2.460254,-4.567939,-5.813929,0.605557,5.978203,2.755925,-4.542393,-2.977942,1.452266,-7.627910,0.602624,-2.369841,-6.839720,2.985461,-5.293114,-3.682002,2.145225,-8.390756,-7.298500,-4.307403,2.345055,3.611423,1.010422,7.452070,0.464392,7.165248,-4.214162,3.738099,7.761256,-5.038276,-8.384081,-5.918674,-1.830419,6.184298,-4.660012,-7.563898,-6.691963,0.681669,1.256543,-9.408188,-0.555629,-4.150717,-5.732545,6.011184,-9.906124,4.838690,5.303296,8.559388,-8.709654,-9.440725,-0.194687,-7.108078,2.379369,-5.844297,5.609516,1.094635,-7.897450,-1.574303,4.698001,-1.985634,9.681989,-7.417778,-1.608377,-6.608255,-1.262359,9.227348,-8.651946,9.765979,-4.056357,-5.843640,5.251681,9.646735,1.954701,-3.124225,-3.512691,3.163282,-4.759287,-8.860376,2.406123,-1.912040,3.496655,-6.574612,2.858953,1.618947,6.699774,4.658939,8.838015,-8.908675,-9.882687,1.456411,-6.549633,5.818824,-5.851935,5.431722,-8.343585,-1.484109,4.542020,9.405204,-8.948093,-1.205834,9.543081,-2.356363,3.463571,8.761953,4.950342,-9.584100,0.291950,6.740716,9.410328,7.597719,-7.558075,9.748368,-0.393154,-2.782638,-4.262466,-6.511406,4.523759,-9.851337,-6.717054,-9.485266,2.610275,1.866647,-2.415973,-3.600455,3.529451,-0.031960,0.480090,6.681448,-4.969504,3.978050,4.334336,-0.636287,-9.555863,4.045980,8.041755,7.584225,-4.339508,1.922659,4.995473,-3.015776,-8.798596,-4.708729,-5.629079,6.775102,7.664098,9.565975,6.788878,1.641867,0.881260,-7.713412,2.079063,0.348769,-8.456692,-2.742563,-9.025833,-2.982069,8.454826,3.338492,-6.997216,8.508056,8.651501,-8.497757,-3.917278,-9.315294,-2.458321,-4.900529,-9.380959,5.784312,0.536827,-3.898359,-6.654270,-7.982990,5.285386,-4.981804,-0.179398,-6.098791,-1.424633,-4.566442,-1.481601,-4.987821,2.973866,-6.901671,-3.418541,-5.995019,-1.210983,-7.821994,5.431372,-4.337269,-2.951518,7.609271,-0.400388,-1.359142,-4.826980,-4.263739,9.048783,-5.333003,0.933749,2.412019,-7.406341,4.980954,-9.543573,-7.152523,-9.569335,0.906361,5.815633,-4.858222,-7.141499,-8.780695,3.884018,0.105028,-6.766336,-8.865417,7.526334,1.490197,0.354550,-0.491308,-3.510933,-3.353162,0.902276,7.311659,-8.036041,5.649337,-9.369609,5.370523,-7.648638,0.280532,-2.311472,-7.816036,7.269620,-3.759060,7.921929,-3.266891,3.209135,-6.221088,-2.585417,4.282815,6.821807,7.652844,-0.100083,-7.923205,-2.982000,6.537053,1.444688,-3.426424,-7.764208,7.223586,5.320359,8.915754,-2.297549,9.173213,-6.407675,9.072684,2.018629,0.100181,-5.618323,-4.654028,5.701736,0.267400,-4.493353,7.870205,-9.617422,-2.127807,7.926582,-2.956192,5.478432,-9.478521,-7.523644,-8.729743,1.630061,-8.518815,1.799536,-8.386409,-7.673490,9.107719,8.148880,1.457655,3.194374,0.207110,-7.677946,5.923654,8.126579,7.101922,0.326217,-8.122255,5.265098,-7.025598,2.107728,-9.147226,3.327612,-3.363570,-0.112608,-9.812857,3.943462,-1.368048,-7.235721,-7.859465,-0.056291,6.930719,4.193626,-7.652915,-0.591139,4.946453,4.898068,-0.846926,8.424096,4.745414,-4.103152,1.833113,2.280103,7.903037,9.236794,3.068338,2.860050,-9.134950,-8.303968,-0.808219,9.746861,0.883694,6.808324,7.549661,-3.704149,-1.388920,5.733848,8.812109,-7.893063,-9.398534,-7.064655,0.195659,-1.589942,-5.082973,-7.988728,-1.596516,-7.549823,-2.910603,7.514058,-8.330631,-7.985661,-9.015612,-3.661225,-0.508607,6.817269,1.278437,-7.494993,8.701074,-7.055728,-7.789361,-4.506444,-7.641270,-7.343431,-8.605142,6.178289,1.616896,-9.022845,6.428724,1.423988,8.883793,-2.175481,-3.818244,9.351930,5.638671,6.743044,-5.909793,-1.403322,-9.194426,5.992381,-5.678053,5.022506,-4.934610,-1.138321,7.100464,1.537591,-6.627190,1.900625,-9.698327,-1.089539,-7.175573,7.424711,-1.592939,2.196636,-9.802076,0.486980,7.300760,9.231645,-7.995513,1.202839,7.419238,-9.231306,-4.457776,8.017229,-9.121375,1.060394,5.703721,2.135438,-9.894417,7.872046,6.782664,-6.530917,1.497708,-0.290918,0.545981,6.130470,-1.748924,-5.856060,5.952089,-7.553363,3.552745,-6.055794,-7.556373,-5.905390,3.620794,-0.741476,7.669999,7.817558,-7.671418,-8.626711,-8.399857,-4.715832,-1.102689,5.405871,-7.080574,6.897438,7.490934,2.388048,-7.411885,7.136722,9.154805,-2.819507,-6.029036,0.639209,-9.364263,-7.224635,-0.852255,4.735801,7.388756,-1.607973,-8.733663,8.573416,-4.284202,-6.576963,1.737511,-3.106502,9.025383,2.049000,-8.991569,-1.979722,-6.696010,6.997417,3.830796,7.332974,-7.862543,2.426870,-2.983319,-4.939226,8.718695,0.140750,-9.812990,6.214532,-2.477361,8.613812,8.267402,5.424261,-3.223620,-5.318117,-7.293139,-6.382987,-0.821607,1.439949,9.549280,0.605866,-9.179537,5.051100,-0.413153,-5.857247,4.453525,0.554808,3.040421,-2.312798,-6.130060,-8.384519,5.062953,3.865596,-3.272295,-9.707879,-2.480940,-1.367343,-6.283772,-8.052558,-1.754713,3.417653,-0.808188,-1.411962,-8.227815,-8.472134,-3.483520,3.322130,2.952817,4.059188,5.546899,4.257114,0.218443,4.091541,6.555505,-3.273124,-4.310290,3.591749,-3.394682,3.347416,8.144149,8.049714,-6.654509,9.813460,9.364768,9.709393,-5.242941,3.348114,-1.043324,6.005559,-1.025559,6.332337,8.101488,4.977642,-7.237045,-0.872057,-2.108809,7.252533,-0.767240,0.637616,2.733891,8.531073,9.342126,4.033202,2.499359,-1.098433,-8.410831,-7.634947,-3.071897,-0.220585,-5.814668,-0.403391,-5.438490,0.991196,-1.149723,9.364684,7.378313,3.158663,2.269294,-2.440168,9.416530,-0.675069,-8.623476,-3.271264,-5.521494,-8.462093,4.004734,-9.232422,-9.136744,2.885539,-2.204972,9.459081,7.396895,-1.763571,5.772128,1.557941,8.103256,0.016421,-6.972029,4.009868,-4.903563,-1.824577,-9.906560,6.823276,-3.631462,-3.137362,3.473587,8.812439,-1.805576,0.812133,-6.613165,4.039947,-0.351897,-4.237905,-3.305180,-7.542643,6.251093,-6.478043,8.292591,-8.587121,-9.461662,-2.722183,-8.050772,-8.557376,3.823804,6.765846,-7.180246,-8.569122,9.801786,-4.845114,-1.197645,-4.466838,9.503966,6.818149,-1.074573,-4.512119,-7.391621,3.483349,-9.303180,-7.109217,4.177281,-6.556429,-6.591189,1.542483,8.307741,0.278174,-6.051340,9.287301,-8.513291,-2.606182,-0.767635,-1.696753,5.930778,-0.567000,4.835904,6.460631,-9.632317,2.666176,-0.927625,-2.328897,-9.315038,8.151003,3.930053,-5.445412,-2.748286,-0.987677,6.176788,2.625899,-4.190526,3.255097,-2.035649,9.751650,-0.501281,6.688634,9.289079,-3.826330,0.879855,-8.504417,-3.353469,1.802050,0.459875,8.415853,-8.102090,7.191761,-8.953497,-0.190374,6.814505,1.363147,-5.200564,4.411380,-2.673790,0.056150,3.052424,-3.940968,-2.921202,-7.109870,-4.832389,5.657276,2.996500,4.297162,6.853578,-3.502441,8.232776,-0.799472,2.580341,1.421250,5.226417,4.907238,-7.282661,-2.333058,0.177611,-8.114816,-5.491008,-4.475027,-7.364038,-5.403493,-4.884627,2.799455,-4.258549,2.596237,6.224357,-9.764658,-1.903889,8.236616,8.962504,7.819713,4.443105,-2.845941,0.672211,2.231793,3.709297,9.471268,-1.601526,6.518419,-7.213004,-7.519752,-1.195483,-3.737311,6.409344,7.450932,5.408313,8.719223,7.547048,5.857012,2.207103,-0.092275,-2.720987,-9.178770,-1.026877,9.088790,-8.137268,-8.722394,-5.315153,6.100805,7.527387,6.390047,-0.101603,4.567991,-6.183910,-2.617037,7.936879,-8.245420,6.950399,-9.590222,5.584578,-6.908091,-2.591246,-2.833629,-6.998540,-9.965591,-2.388828,-2.211107,-7.955170,-3.492971,-9.929619,-0.018701,-9.695279,4.563362,7.655860,4.061251,-5.524420,6.967869,8.377786,3.491139,7.569459,4.653305,6.158119,-7.005864,4.122472,5.492179,-7.536762,8.901532,-4.346958,-4.541016,-0.634270,-9.485454,4.906568,2.147821], dtype = "float64")#candidate|4249|(2016,)|const|float64
call_4248 = func_274_call(relay.reshape(const_4249.astype('float64'), [9, 14, 16]))
call_4250 = func_274_call(relay.reshape(const_4249.astype('float64'), [9, 14, 16]))
var_4252 = relay.var("var_4252", dtype = "float64", shape = (715, 3))#candidate|4252|(715, 3)|var|float64
bop_4253 = relay.floor_mod(uop_4234.astype('float32'), relay.reshape(var_4252.astype('float32'), relay.shape_of(uop_4234))) # shape=(715, 3)
bop_4256 = relay.floor_mod(uop_4236.astype('float32'), relay.reshape(var_4252.astype('float32'), relay.shape_of(uop_4236))) # shape=(715, 3)
output = relay.Tuple([call_4189,bop_4241,call_4248,const_4249,bop_4253,])
output2 = relay.Tuple([call_4190,bop_4244,call_4250,const_4249,bop_4256,])
func_4258 = relay.Function([var_4240,var_4252,], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
var_4259 = relay.var("var_4259", dtype = "float64", shape = (715, 3))#candidate|4259|(715, 3)|var|float64
var_4260 = relay.var("var_4260", dtype = "float64", shape = (715, 3))#candidate|4260|(715, 3)|var|float64
output = func_4258(var_4259,var_4260,)
func_4261 = relay.Function([var_4259,var_4260,], output)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_4276 = relay.TupleGetItem(func_1948_call(), 0)
call_4277 = relay.TupleGetItem(func_1950_call(), 0)
func_4014_call = mod.get_global_var('func_4014')
func_4017_call = mutated_mod.get_global_var('func_4017')
var_4284 = relay.var("var_4284", dtype = "float32", shape = (132,))#candidate|4284|(132,)|var|float32
call_4283 = relay.TupleGetItem(func_4014_call(relay.reshape(var_4284.astype('float32'), [2, 6, 11])), 0)
call_4285 = relay.TupleGetItem(func_4017_call(relay.reshape(var_4284.astype('float32'), [2, 6, 11])), 0)
output = relay.Tuple([call_4276,call_4283,var_4284,])
output2 = relay.Tuple([call_4277,call_4285,var_4284,])
func_4293 = relay.Function([var_4284,], output)
mod['func_4293'] = func_4293
mod = relay.transform.InferType()(mod)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4294 = relay.var("var_4294", dtype = "float32", shape = (132,))#candidate|4294|(132,)|var|float32
func_4293_call = mutated_mod.get_global_var('func_4293')
call_4295 = func_4293_call(var_4294)
output = call_4295
func_4296 = relay.Function([var_4294], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4339 = relay.var("var_4339", dtype = "uint8", shape = (6, 8, 12))#candidate|4339|(6, 8, 12)|var|uint8
var_4340 = relay.var("var_4340", dtype = "uint8", shape = (6, 8, 12))#candidate|4340|(6, 8, 12)|var|uint8
bop_4341 = relay.left_shift(var_4339.astype('uint8'), relay.reshape(var_4340.astype('uint8'), relay.shape_of(var_4339))) # shape=(6, 8, 12)
output = relay.Tuple([bop_4341,])
output2 = relay.Tuple([bop_4341,])
func_4353 = relay.Function([var_4339,var_4340,], output)
mod['func_4353'] = func_4353
mod = relay.transform.InferType()(mod)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4353_call = mutated_mod.get_global_var('func_4353')
var_4355 = relay.var("var_4355", dtype = "uint8", shape = (6, 8, 12))#candidate|4355|(6, 8, 12)|var|uint8
var_4356 = relay.var("var_4356", dtype = "uint8", shape = (6, 8, 12))#candidate|4356|(6, 8, 12)|var|uint8
call_4354 = func_4353_call(var_4355,var_4356,)
output = call_4354
func_4357 = relay.Function([var_4355,var_4356,], output)
mutated_mod['func_4357'] = func_4357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4412 = func_1834_call()
call_4413 = func_1834_call()
func_1907_call = mod.get_global_var('func_1907')
func_1908_call = mutated_mod.get_global_var('func_1908')
call_4414 = relay.TupleGetItem(func_1907_call(), 0)
call_4415 = relay.TupleGetItem(func_1908_call(), 0)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_4428 = relay.TupleGetItem(func_1821_call(), 2)
call_4429 = relay.TupleGetItem(func_1822_call(), 2)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_4444 = func_2038_call()
call_4445 = func_2038_call()
func_3712_call = mod.get_global_var('func_3712')
func_3714_call = mutated_mod.get_global_var('func_3714')
const_4448 = relay.const([3.742128,-9.536872,9.114902,9.559870,9.250495,-4.873114,4.985512,-2.951108,-7.097487,5.546107,3.684276,-1.565245,7.833546,8.890521,1.070330,8.674742,-5.210310,1.714974,-5.200716,-3.597145,-5.579789,-6.397929,0.396550,-1.747287,-6.384997,-4.233416,-8.155209,-5.987706,5.031971,-0.008351,-2.691370,-6.232188,5.308843,-8.144607,-7.432203,7.553649,0.356132,2.403249,9.935473,-5.829032,1.447626,6.215038,6.064572,1.961131,1.564908,-0.534203,6.703582,-8.416691,-2.724543,9.248956,-5.181304,9.881572,-6.017517,-9.234522,-7.181939,-8.856431,2.452125,3.366980,4.793002,0.927213,-6.948816,-7.213935,-3.337539,-5.310369,3.796221,-3.724353,2.208571,8.344802,-5.528799,0.993986,4.610155,-3.382851,7.529039,0.762228,-8.589513,6.467216,-9.147488,4.734680,-5.756621,4.583943,8.451563,8.390246,1.998661,-1.394618,-1.691854,-9.257261,2.332580,-5.068299,-8.584852,-8.519342,9.106137,4.908738,1.681046,-8.995927,8.338103,-8.452385,5.565193,9.294227,-2.888051,-1.686458,9.582140,-5.632519,4.155512,5.523254,3.310783,1.170920,9.887962,-6.069274,2.032815,-3.713033,7.831754,9.943980,1.292555,2.018124,-5.100870,-4.781592,3.628736,0.940039,-4.563721,-3.780003,-1.390825,-8.896664,1.135246,-3.183129,7.715458,6.368157,1.519815,-1.271754,8.316713,4.302036,4.490282,2.137534,-4.461727,-3.419508,0.183228,-9.853357,-0.274984,2.394458,-2.562023,-1.852560,-9.247709,-5.583251,-1.299196,-2.176975,-4.939874,9.235516,-9.366404,-6.449885,0.566100,5.213749,-1.389345,-4.569405,-5.655928,-2.180839,-1.357355,-3.313236,-5.896437,-8.561588,0.399321,-1.115953,-0.892684,-4.681506,-7.804216,-5.130815,2.920988,-5.153498,4.557277,-2.479738], dtype = "float32")#candidate|4448|(168,)|const|float32
call_4447 = func_3712_call(relay.reshape(const_4448.astype('float32'), [3, 14, 4]))
call_4449 = func_3712_call(relay.reshape(const_4448.astype('float32'), [3, 14, 4]))
output = relay.Tuple([call_4412,call_4414,call_4428,call_4444,call_4447,const_4448,])
output2 = relay.Tuple([call_4413,call_4415,call_4429,call_4445,call_4449,const_4448,])
func_4454 = relay.Function([], output)
mod['func_4454'] = func_4454
mod = relay.transform.InferType()(mod)
output = func_4454()
func_4455 = relay.Function([], output)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2348_call = mod.get_global_var('func_2348')
func_2350_call = mutated_mod.get_global_var('func_2350')
call_4461 = func_2348_call()
call_4462 = func_2348_call()
uop_4520 = relay.sqrt(call_4461.astype('float32')) # shape=(13, 4, 12)
uop_4522 = relay.sqrt(call_4462.astype('float32')) # shape=(13, 4, 12)
uop_4530 = relay.exp(uop_4520.astype('float64')) # shape=(13, 4, 12)
uop_4532 = relay.exp(uop_4522.astype('float64')) # shape=(13, 4, 12)
func_3279_call = mod.get_global_var('func_3279')
func_3280_call = mutated_mod.get_global_var('func_3280')
call_4536 = relay.TupleGetItem(func_3279_call(), 0)
call_4537 = relay.TupleGetItem(func_3280_call(), 0)
uop_4550 = relay.sin(uop_4530.astype('float64')) # shape=(13, 4, 12)
uop_4552 = relay.sin(uop_4532.astype('float64')) # shape=(13, 4, 12)
func_1257_call = mod.get_global_var('func_1257')
func_1261_call = mutated_mod.get_global_var('func_1261')
var_4559 = relay.var("var_4559", dtype = "uint64", shape = (72,))#candidate|4559|(72,)|var|uint64
const_4560 = relay.const([1,-9,-7,2,9,-10,-8,-1,7,-6,-7,1,-3,1,-8,1,-10,4,5,-9,-3,1,9,-10,-8,-7,3,-8,8,-6,-4,8,7,-3,7,-9,10,2,1,-8,-10,6,2,-2,5,-9,-2,5,6,-4,-10,3,-4,-1,-9,-6,3,2,7,-6,-1,3,1,-5,-8,1,-3,-1,-1,1,-3,-7,-8,10,5,10,-2,-1,3,-3,6,-10,-10,3,-3,-1,1,3,-1,9,-10,1,-1,8,-8,-4,4,-3,-5,8,-3,6,-9,7,1,-5,2,6,8,-7,4,-3,5,5,-4,-10,1,3,5,1,6,1,-4,3,-1,-10,-2,-3,1,-9,-10,4,-4,-3,-8,9,4,4,-6,-10,7,-4,-5,6,-7,-2,3,-10,2,-10,-10,4,8,2,5,3,-5,1,-5,7,1,9,-3,2,2,6,10,6,10,-4,-1,6,-5,8,-3,2,-4,9,9,3,-5,3,-2,5,-10,-6,-5,9,-9,-2,1,6,4,-3,9,4,8,1,-10,-10,5,-1,8,2,6,10,5,-3,3,2,3,-8,-5,8,5,-6,-4,3,-9,-9,-9,4,-5,5,-2,-2,4,5,10,7,-3,-8,-1,1,5,5,-9,8,-6,3,-1,-5,6,-6,-5,-6,7,-5,4,-8,-8,-3,-2,2,-5,7,2,10,-4,-8,1,-7,-7,-7,-10,2,-6,6,7,5,5,-5,-4,8,-3,-4,2,5,6,2,4,4,8,-9,10,-4,-6,3,-8,-7,-9,7,2,3,-3,4,9,-1,-9,-2,4,3,7,-1,9,7,-9,-1,8,9,-9,1,10,-2,2,-8,-2,-8,1,5,7,9,-8,-5,4,-8,-6,10,-10,-8,8,9,-9,8,-8,9,7,-9,2,-3,-9,-1,1,4,-4,2,-8,-2,9,6,-3,3,7,-6,6,-5,-10,2,8,1,-8,-3,-7,5,5,3,8,-9,-8,4,-2,-10,7,-4,-10,8,9,8,6,-1,-5,-2,-2,10,6,3,4,2,7,-8,-10,-9,-8,4,8,-9,-2,6,2,4,-9,-5,10,8,-3,8,-5,-2,-2,10,-4,5,-10,1,-6,-9,2,1,3,-1,8,-10,6,7,-10,10,-4,3,-5,-3,9,-7,7,-5,9,-5,-7,9,8,-1,-1,-4,5,8,-2,-2,-4,-2,-9,1,4,5,2,-3,10,-7,-7,7,-8,6,7,-1,-7,3,-9,-3,10,-2,-10,3,3,2,-2,-3,-3,10,-7,2,-3,9,9,5,-8,4,-4,-1,-6,8,-9,10,-2,-1,-1,-2,-7,-6,-2,8,8,1,8,2,2,-3,2,2,-4,-10,5,-9,4,-1,-6,8,2,9,-9,5,8,-4,-3,-4,-1,-4,-8,-3,8,-9,-4,10,4,7,10,-9,-1,-1,-1,-1,-9,3,8,10,-9,-2,-3,10,-2,3,6,-2,-6,1,-6,-2,-1,-4,8,-7,-2,1,-1,-5,7,-7,-1,-1,-10,2,7,10,-8,7,8,-4,-2,6,-7,6,-10,-6,10,5,10,-5,-3,6,-3,7,6,-2,6,2,10,7,1,-8,-9,-2,-2,5,-5,-5,4,10,3,10,1,-5,10,-10,3,3,-4,-10,-5,2,-6,8,10,1,9,5,3,-2,9,-3,1,6,-4,-2,1,-9,-2,8,5,5,1,6,7,-5,10,-3,-8,8,3,-3,5,-3,8,-9,9,7,-4,-3,10,9,8,3,-9,9,3,8,5,7,3,6,-9,-1,7,4,-2,7,5,7,1,9,2,-3,9,8,-5,-3,9,-5,-9,-4,-4,-2,-3,2,-9,-9,8,-5,4,-10,-10,-1,-8,7,-9,-6,-4,-9,-9,2,-4,6,2,1,-7,-5,4,7,-6,7,9,-6,6,-1,-8,3,-1,6,-2,-1,9,-5,-4,7,9,5,1,-1,9,-10,-3,1,-1,1,-5,10,10,7,10,-6,-9,-6,-4,-5,-9,10,-7,-7,-7,2,9,-5,9,-3,-7,-7,9,5,10,-6,5,8,8,-2,4,-8,8,-3,7,-8,-6,3,10,-9,-7,7,3,-6,3,-6,4,1,7,-10,10,1], dtype = "uint64")#candidate|4560|(792,)|const|uint64
call_4558 = relay.TupleGetItem(func_1257_call(relay.reshape(var_4559.astype('uint64'), [1, 8, 9]), relay.reshape(const_4560.astype('uint64'), [11, 8, 9]), ), 0)
call_4561 = relay.TupleGetItem(func_1261_call(relay.reshape(var_4559.astype('uint64'), [1, 8, 9]), relay.reshape(const_4560.astype('uint64'), [11, 8, 9]), ), 0)
output = relay.Tuple([call_4536,uop_4550,call_4558,var_4559,const_4560,])
output2 = relay.Tuple([call_4537,uop_4552,call_4561,var_4559,const_4560,])
func_4565 = relay.Function([var_4559,], output)
mod['func_4565'] = func_4565
mod = relay.transform.InferType()(mod)
mutated_mod['func_4565'] = func_4565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4566 = relay.var("var_4566", dtype = "uint64", shape = (72,))#candidate|4566|(72,)|var|uint64
func_4565_call = mutated_mod.get_global_var('func_4565')
call_4567 = func_4565_call(var_4566)
output = call_4567
func_4568 = relay.Function([var_4566], output)
mutated_mod['func_4568'] = func_4568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3965_call = mod.get_global_var('func_3965')
func_3967_call = mutated_mod.get_global_var('func_3967')
call_4590 = relay.TupleGetItem(func_3965_call(), 1)
call_4591 = relay.TupleGetItem(func_3967_call(), 1)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4602 = func_1834_call()
call_4603 = func_1834_call()
uop_4606 = relay.rsqrt(call_4602.astype('float64')) # shape=(13, 4, 12)
uop_4608 = relay.rsqrt(call_4603.astype('float64')) # shape=(13, 4, 12)
func_2348_call = mod.get_global_var('func_2348')
func_2350_call = mutated_mod.get_global_var('func_2350')
call_4610 = func_2348_call()
call_4611 = func_2348_call()
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_4620 = relay.TupleGetItem(func_3038_call(), 0)
call_4621 = relay.TupleGetItem(func_3039_call(), 0)
bop_4625 = relay.power(uop_4606.astype('float32'), relay.reshape(call_4590.astype('float32'), relay.shape_of(uop_4606))) # shape=(13, 4, 12)
bop_4628 = relay.power(uop_4608.astype('float32'), relay.reshape(call_4591.astype('float32'), relay.shape_of(uop_4608))) # shape=(13, 4, 12)
func_2024_call = mod.get_global_var('func_2024')
func_2026_call = mutated_mod.get_global_var('func_2026')
const_4634 = relay.const([-4,-3,-10,3,-5,-4,-6,2,-2,-8,-7,2,9,4,-3,-3,8,5,-6,5,-1,8,1,3,6,-10,2,-7,-3,5,1,-2,6,4,-6,-3,-10,-2,10,-4,9,-1,5,-1,10,4,-6,8,-6,5,-3,-8,-9,4,8,-8,-4,-7,7,-5,6,8,-8,5,9,3,-8,7,-1,-7,-10,5,3,3,10,9,-9,-9,3,8,-3,6,-4,-9,5,-4,-10,-9,3,-7,1,-10,-2,7,2,-9,-8,4,-7,7,-8,7,1,5,7,8,9,-8,4,6,1,-1,-10,1,10,9,8,-8,-3,5,-6,-10,1,-5,3,3,1,-3,8,10,1,-6,7,-7,8,2,5,10,-10,-2,-10,-9,6,-2,7,2,1,-4,-1,-9,-5,6,3,-7,-3,-7,2,4,9,4,-7,-1,-4,9,8,-6,-10,-4,-8,-5,-9,-6,10,1,-7,3,-1,4,-1,-1,-2,-1,-9,5,-5,-10,5,-7,5,4,5,6,2,-1,1,-2,-9,5,-10,-5,3,1,-9,-2,-6,-6,4,9,2,-10,10,-7,-7,-6,3,3,-7,3,-3,-2,-3,-2,-10,4,-8,6,10,-8,-6,-5,-8,-4,-3,10,-3,-4,1,-3,6,-3,-6,6,-2,5,1,-6,8,-3,-8,6,-5,8,-8,-7,2,1,-8,-4,-1,8,-8,-10,-6,-9,6,-6,6,7,6,-10,-3,-6,8,-3,8,-1,-8,3,4,8,7,-10,-9,9,-8,-4,10,4,-10,6,-10,4,-10,10,9,3,-4,-1,8,8,8,9,-4,5,1,1,2,7,-4,-5,7,-1,9,-3,9,-4,-5,-5,7,-2,5,10,-1,-9,-8,-10,-2,-7,2,-9,1,-9,8,3,6,-6,1,8,6,10,4,10,-10,9,5,4,1,2,9,-7,-3,6,10,9,-5,-10,9,-5,7,3,-1,-9,2,4,-7,4,5,-5,8,-10,2,-2,-2,-10,-10,-10,-1,3,-10,-3,-9,6,-1,-8,-4,-3,-2,5,-1,-2,9,-4,-3,-2,-6,-10,3,9,-7,-4,9,5,-2,5,7,-6,1,7,-7,-7,-7,7,2,-6,5,10,-7,5,-7,-5,-8,-1,3,3,8,-4,-4,6,7,5,-2,-5,-9,-10,-3,-1,8,-9,1,-4,9,-7,-8,-1,3,-8,2,-3,6,-7,8,9,3,10,10,-6,-1,4,-4,-6,-2,1,8,4,7,2,-1,-3,8,10,-5,-9,-7,-6,9,-7,6,4,2,-9,-9,-4,3,7,-1,9,3,-4,10,-3,-4,9,-8,4,-1,1,-6,-4,-4,-10,8,-3,-9,1,-9,-10,5,-2,4,-7,1,-7,-6,-3,10,7,3,10,1,1,8,-2,1,-9,2,-10,-3,9,7,-10,-5,6,-1,10,-10,9,-4,-2,-8,2,5,4,-10,-9,-7,6,8,-2,10,10,-6,-9,-1,-5,-10,-1,-8,6,10,-5,-6,10,2,-4,7,2,2,-4,-2,4,-6,8,-1,-2,-10,1,5,-10,5,-9,6,8,5,-3,-10,9,-5,2,1,-9,10,-5,-1,-3,-8,1,-6,-6,-10,5,7,6,1,7,1,-1,8,-5,2,7,2,8,6,8,2,-4,9,2,-7,2,-7,-8,-10,1,-10,-5,-6,-2,-8,8,6,-10,3,7,-9,7,-1,-10,-7,6,-1,2,6,10,4,4,2,-7,4,-3,2,-10,5,7,-10,9,-3,-9,-3,-1,-8,9,8,3,9,-6,7,7,5,6,-6,-7,6,-8,-6,7,5,-2,-1,5,-2,-4,-7,3,-2,9,3,-7,-1,-9,-5,9,-4,2,-7,-9,10,-9,2,-10,2,2,-5,-6,5,3,4,1,2,-5,-2,9,-6,2,-2,-4,-4,-2,7,-5,-5,-2,10,-9,7,-3,-8,5,-1,-4,9,-9,-4,2,-1,2,5,7,9,10,-9,7,5,3,-6,9,3,-8,9,8,9,5,8,-9,-7,-1,2,-6,-7,-3,4,-10,-9,5,10,-7,-7,-5,2,10,-5,-6,10,-3,10,1,9,-2,2,6,3,3,6,5,-3,9,-5,-4,6,-1,5,-10,-5,-3,-2,-9,4,6,-9,8,-5,10,2,4,-3,-6,-9,1,3,-1,2,-1,-3,4,8,-5,-1,-3,-9,4,-4,-8,-9,8,-2,-6,-2,-1,-3,-6,1,2,-6,-6,1,-9,-10,-1,8,2,10,-6,-4,7,4,-8,7,-4,4,10,-9,4,5,-10,-7,-3,-10,-9,-6,2,2,-2,10,1,-7,1,9,-7,1,7,2,4,9,-6,2,4,8,4,-1,1,-8,-5,-8,-1,-2,6,8,-5,7,-3,-7,-4,10,-2,5,-10,6,9,-10,4,1,-5,1,-8,-1,-9,6,3,1,9,-9,-10,8,8,2,-9,3,3,-8,-2,2,7,-5,7,8,-6,7,-1,-5,-3,10,-1,-10,6,-5,-4,2,-8,4,4,1,10,-6,-5,9,-10,-1,-1,-7,-6,-7,-3,4,7,5,1,-1,-6,-1,10,8,-8,-2,10,7,-4,-8,5,-6,-3,6,-9,-6,-6,5,-6,5,-1,-4,6,7,-8,-9,-9,7,-8,-6,10,3,9,-9,10,-1,-2,-2,-8,10,-3,3,4,4,3,-2,-9,10,-2,3,4,4,10,-4,-4,8,-3,-1,-1,2,2,8,6,1,8,1,9,5,3,10,4,-7,9,6,3,-5,-2,8,10,8,-5,-9,6,6,5,-9,3,8,5,1,1,-3,-8], dtype = "uint64")#candidate|4634|(1050,)|const|uint64
call_4633 = relay.TupleGetItem(func_2024_call(relay.reshape(const_4634.astype('uint64'), [1050,])), 5)
call_4635 = relay.TupleGetItem(func_2026_call(relay.reshape(const_4634.astype('uint64'), [1050,])), 5)
output = relay.Tuple([call_4610,call_4620,bop_4625,call_4633,const_4634,])
output2 = relay.Tuple([call_4611,call_4621,bop_4628,call_4635,const_4634,])
func_4636 = relay.Function([], output)
mod['func_4636'] = func_4636
mod = relay.transform.InferType()(mod)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4636_call = mutated_mod.get_global_var('func_4636')
call_4637 = func_4636_call()
output = call_4637
func_4638 = relay.Function([], output)
mutated_mod['func_4638'] = func_4638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2348_call = mod.get_global_var('func_2348')
func_2350_call = mutated_mod.get_global_var('func_2350')
call_4644 = func_2348_call()
call_4645 = func_2348_call()
output = relay.Tuple([call_4644,])
output2 = relay.Tuple([call_4645,])
func_4655 = relay.Function([], output)
mod['func_4655'] = func_4655
mod = relay.transform.InferType()(mod)
output = func_4655()
func_4656 = relay.Function([], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2845_call = mod.get_global_var('func_2845')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_4665 = relay.TupleGetItem(func_2845_call(), 0)
call_4666 = relay.TupleGetItem(func_2846_call(), 0)
output = call_4665
output2 = call_4666
func_4672 = relay.Function([], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
output = func_4672()
func_4673 = relay.Function([], output)
mutated_mod['func_4673'] = func_4673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_4712 = relay.TupleGetItem(func_3038_call(), 0)
call_4713 = relay.TupleGetItem(func_3039_call(), 0)
const_4727 = relay.const([[[9.170796,-6.045050,2.200379,-5.391929,-4.648634,6.257166,3.535136,-0.184877,3.764239,6.215365,-0.416640,-9.466008],[-8.334473,-5.021373,5.659919,-2.347568,-9.060049,8.645679,-7.564780,6.445070,-4.911940,-9.179693,0.404932,-4.175622],[-8.825400,-8.964530,-0.962082,-7.444161,-8.542455,6.435989,-3.182734,-5.887063,-3.692493,-8.942366,5.004422,5.923359],[8.214769,5.969238,9.083787,4.952983,-1.161769,-9.108181,-3.125251,7.383652,0.210696,3.873233,7.741234,9.405737],[4.646152,-2.477553,6.318865,-6.593963,6.613351,3.566652,7.028712,1.863311,-7.994411,-6.425994,-0.899821,-6.132187],[-2.406671,-6.602467,8.249531,6.560492,6.353401,-7.894518,5.366024,2.088414,-3.337831,8.642709,4.049319,2.109904],[1.405941,7.277584,-1.395013,0.332612,5.246950,-5.949258,7.277014,5.576323,7.927419,-5.877857,-0.658602,-0.635922],[-6.769034,-4.681747,-8.767699,-9.921274,1.436558,2.343983,4.605326,-1.431296,-7.829755,3.710428,-1.154441,6.129387],[-8.138102,-3.347360,8.386948,-0.268694,7.745827,-8.253114,-4.397166,2.111396,-2.167409,0.902562,8.629063,-8.382591],[-1.504138,-6.288877,-8.752802,9.645506,2.140842,5.268801,-3.281628,-8.232977,-3.016405,9.575458,6.584719,-1.726993]]], dtype = "float32")#candidate|4727|(1, 10, 12)|const|float32
bop_4728 = relay.bitwise_and(call_4712.astype('int32'), const_4727.astype('int32')) # shape=(1, 10, 12)
bop_4731 = relay.bitwise_and(call_4713.astype('int32'), const_4727.astype('int32')) # shape=(1, 10, 12)
func_4636_call = mod.get_global_var('func_4636')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_4734 = relay.TupleGetItem(func_4636_call(), 4)
call_4735 = relay.TupleGetItem(func_4638_call(), 4)
output = relay.Tuple([bop_4728,call_4734,])
output2 = relay.Tuple([bop_4731,call_4735,])
func_4736 = relay.Function([], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
mutated_mod['func_4736'] = func_4736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mutated_mod.get_global_var('func_4736')
call_4737 = func_4736_call()
output = call_4737
func_4738 = relay.Function([], output)
mutated_mod['func_4738'] = func_4738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1834_call = mod.get_global_var('func_1834')
func_1836_call = mutated_mod.get_global_var('func_1836')
call_4739 = func_1834_call()
call_4740 = func_1834_call()
output = call_4739
output2 = call_4740
func_4742 = relay.Function([], output)
mod['func_4742'] = func_4742
mod = relay.transform.InferType()(mod)
mutated_mod['func_4742'] = func_4742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4742_call = mutated_mod.get_global_var('func_4742')
call_4743 = func_4742_call()
output = call_4743
func_4744 = relay.Function([], output)
mutated_mod['func_4744'] = func_4744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_4776 = relay.TupleGetItem(func_1948_call(), 0)
call_4777 = relay.TupleGetItem(func_1950_call(), 0)
func_4014_call = mod.get_global_var('func_4014')
func_4017_call = mutated_mod.get_global_var('func_4017')
var_4784 = relay.var("var_4784", dtype = "float32", shape = (132,))#candidate|4784|(132,)|var|float32
call_4783 = relay.TupleGetItem(func_4014_call(relay.reshape(var_4784.astype('float32'), [2, 6, 11])), 0)
call_4785 = relay.TupleGetItem(func_4017_call(relay.reshape(var_4784.astype('float32'), [2, 6, 11])), 0)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_4792 = relay.TupleGetItem(func_2912_call(), 0)
call_4793 = relay.TupleGetItem(func_2913_call(), 0)
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_4803 = relay.TupleGetItem(func_2948_call(), 1)
call_4804 = relay.TupleGetItem(func_2949_call(), 1)
output = relay.Tuple([call_4776,call_4783,var_4784,call_4792,call_4803,])
output2 = relay.Tuple([call_4777,call_4785,var_4784,call_4793,call_4804,])
func_4806 = relay.Function([var_4784,], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
mutated_mod['func_4806'] = func_4806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4807 = relay.var("var_4807", dtype = "float32", shape = (132,))#candidate|4807|(132,)|var|float32
func_4806_call = mutated_mod.get_global_var('func_4806')
call_4808 = func_4806_call(var_4807)
output = call_4808
func_4809 = relay.Function([var_4807], output)
mutated_mod['func_4809'] = func_4809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_4856 = relay.TupleGetItem(func_1821_call(), 1)
call_4857 = relay.TupleGetItem(func_1822_call(), 1)
const_4870 = relay.const([[[-9.575858,5.341320,-3.311408,6.701120,8.310266,-1.408137,1.358976,1.186150,4.111729,-6.059156,1.196073,-3.437364,0.955101],[-9.674190,-0.918604,8.870684,6.712496,-1.924947,6.469360,-3.934737,-2.506898,-9.498396,-6.736185,-7.503384,-2.686530,-1.677779],[1.983284,-3.387759,9.187547,-0.739654,-1.049666,-6.886845,9.092599,7.968803,-5.327309,9.753674,6.401735,-3.837194,7.190068],[1.986922,1.908349,6.291006,-0.734683,-5.461251,-7.297891,8.941756,-8.106220,4.662338,-5.793205,-6.443489,-2.522808,1.644628],[-2.882684,5.591725,-0.786934,1.781864,7.371311,-0.043859,8.706238,6.029399,-4.321131,-3.610359,-4.834596,-2.088024,5.156904],[5.279469,-6.019994,2.885761,-5.883459,-1.110607,3.040467,4.140376,2.551602,-8.418219,-4.401408,-4.981060,0.462041,7.924590],[-3.524210,-5.704843,6.993680,7.216256,8.615507,-5.830512,-5.895599,-8.968165,-4.086563,-9.479518,-2.698939,-4.577494,-9.191321],[0.658484,-4.019123,0.320864,-4.962400,-8.617942,4.419581,8.017547,-2.998878,-1.671484,-7.976383,-4.017398,-4.332542,-6.929554],[0.358088,8.891022,-0.044598,7.719502,-9.717134,8.674195,3.831234,-5.944458,-2.634999,3.822042,1.875461,9.493214,-0.350541],[-5.651556,-6.174022,9.156238,-9.188482,8.430403,0.113373,0.971583,2.809055,-9.574338,-0.671839,6.759117,-3.546232,5.651747],[-1.912929,-8.087885,-2.264367,-6.525283,2.696124,-1.485218,-3.644831,-2.950459,8.897898,6.858402,4.134281,6.216028,-6.187041]],[[-8.816695,1.853153,-9.484604,-3.765890,-5.566233,-2.821579,6.914660,9.199396,6.844671,4.511249,8.874346,5.837731,2.670685],[7.343740,-0.103861,8.014514,-4.236277,-6.791428,-4.704089,3.952984,0.947826,1.853100,-1.921052,-0.663642,9.348003,0.550568],[-5.540267,1.842990,1.533083,-5.615914,6.303305,-0.600905,-1.726158,-0.814544,3.744413,-2.718284,3.607485,7.634383,-5.644182],[6.583747,0.158529,-3.085768,2.317592,2.266716,-3.305473,-0.096830,4.834740,-1.667916,4.426369,3.596104,-8.617826,7.596422],[0.206849,9.204504,3.553308,5.907128,-3.145177,-0.233996,-0.271999,-3.762517,-3.989613,-4.933768,-5.945802,5.889640,7.419412],[-7.526884,-6.585130,-3.305080,5.320161,5.648613,-9.715083,5.289807,5.277645,7.446671,-9.135672,-2.660787,-8.710525,-9.051509],[5.169992,9.023196,-9.765207,8.586869,4.446253,9.211845,4.389596,5.478704,7.366976,-8.026108,5.477216,-9.652930,-9.625481],[-5.882068,1.248226,2.427173,-7.826948,-1.986080,-0.471543,-0.488041,6.193254,-7.105095,-4.646455,-2.663299,1.206684,-8.360306],[-0.451476,-9.009991,-1.277028,-6.776267,3.300413,-0.038257,-2.963370,6.236879,-6.305997,-5.727398,9.292110,5.589652,5.780765],[5.881730,-8.836182,8.104290,5.385189,5.468585,-1.378969,1.055176,2.692404,6.454551,-2.918445,6.534766,-6.824886,-6.751615],[-0.105266,-3.765899,-8.580985,-2.878037,5.415640,0.063430,8.710346,-1.303634,-3.976334,-7.679611,-0.921480,9.505399,-3.039637]],[[2.676242,9.770171,-7.652805,0.625805,6.583584,-0.778969,7.797333,2.352653,-8.328546,1.183155,-2.964968,4.651090,-3.038615],[-1.900284,-3.108747,-5.085897,-7.502255,-0.484913,5.834589,7.001452,9.739420,2.640000,1.920634,8.348239,0.516627,3.192871],[7.726409,-0.005746,-8.710944,0.073731,5.584941,-5.433434,5.995971,-9.161017,9.018496,4.244607,-1.270169,7.767381,9.065485],[8.010173,8.133408,-7.618317,4.567819,-2.220407,-4.832581,3.702174,9.825281,7.681913,-4.837678,-7.256248,8.079009,-3.154317],[-8.488262,2.407029,-7.795362,-5.293146,2.445152,-1.974941,-0.386219,-4.909065,7.184507,-9.402560,-6.230597,7.076546,-8.869251],[-4.492725,-9.504014,9.755673,-0.582026,-7.323524,4.198961,-4.331741,-7.016616,-3.088149,-9.271692,1.143948,-0.042090,-2.766312],[4.391440,5.759490,5.654711,4.382215,-4.817057,-4.538333,2.612576,0.489937,-3.256784,-5.832481,8.374897,2.664806,1.665446],[7.006668,-6.828212,-2.052818,7.782236,2.981671,1.806550,-1.975324,5.276513,-2.953171,-0.542936,-4.296611,-8.872149,3.275732],[1.553043,0.558080,7.708333,-6.389490,-9.169810,2.167019,-9.879029,4.220438,4.580341,3.188809,-2.489766,1.898264,9.640166],[3.204254,-0.544145,9.224433,6.149395,6.097643,3.019140,2.150011,-5.368580,-8.050479,0.963077,5.125941,2.647787,-1.357274],[-7.461967,-0.049422,9.027862,5.967692,-1.905331,1.546448,8.863459,-1.031103,-5.742109,1.564213,-1.750243,6.666829,5.442061]],[[-3.239435,8.295602,-5.199284,6.060492,1.195552,5.471470,-1.682168,-1.071584,7.939555,-3.534031,-6.672803,6.108529,-1.484486],[5.605748,-2.690483,-1.514957,-8.085834,7.865361,7.603741,3.514251,7.784379,-4.423055,3.133244,7.131944,-8.442313,-6.410509],[-9.521243,-1.182892,-2.338087,-2.955849,-8.854110,2.419705,-7.006428,-1.264206,4.992891,-7.890845,-1.135011,8.446571,6.626099],[-0.240922,-6.364688,3.227946,7.345861,7.406827,7.093207,-7.174175,-5.058646,-6.894429,-0.806942,8.951651,9.378350,-3.332997],[-0.984443,4.384659,-8.964514,3.764705,-8.041238,0.742735,6.481709,3.749473,-3.503287,-6.548599,-3.311973,3.378620,6.270476],[-9.108823,-0.564712,-9.522314,-4.141300,6.377854,-0.848714,-7.043571,5.280263,-4.931426,-0.187921,7.177438,2.515129,-5.240294],[6.204085,-2.913136,-1.384102,2.667342,2.272179,1.594645,0.417736,-4.864086,5.628019,-6.326220,-5.453839,7.790824,0.401814],[8.467089,8.468426,-4.688685,5.498330,8.861912,5.632401,-8.290913,4.821662,2.968493,-6.163666,-6.530542,-8.445379,-7.542752],[0.439162,5.584146,7.707976,1.413154,-6.087078,6.175048,-4.346212,4.995149,8.389122,-3.115484,6.382336,9.967265,8.332263],[-0.642686,-7.494605,-1.297972,-4.378234,-2.245851,-0.601800,-2.461770,5.706684,-8.719283,0.982754,-5.164042,6.360322,2.158965],[-9.878856,8.660951,-2.811168,0.745577,-5.738969,-1.053197,8.952822,-5.157432,-8.722757,0.867755,-2.610701,9.699931,9.716205]],[[-4.066166,-2.070713,-2.594015,-0.049011,-9.321070,8.263947,-7.881476,6.133689,-9.196990,3.853341,-9.554505,-1.880441,-6.433999],[7.313674,-4.106253,4.666319,3.055064,-5.223501,-5.026641,5.275959,5.109876,-7.300611,6.035710,-8.882562,-3.665170,-5.733844],[0.552232,-9.266925,-4.452739,3.673079,4.216751,2.585767,-3.177757,-9.938269,7.966342,3.383818,-4.429592,-7.964928,9.499082],[6.948097,-1.392209,-7.896947,-9.296576,9.107179,-0.017443,5.154977,7.458588,-5.874957,-8.730787,-2.154068,3.423684,-4.298485],[0.086015,6.148246,2.560812,9.784874,-2.636745,3.340306,-8.941052,3.254747,7.538116,-2.184574,-8.291091,-2.016673,6.063064],[-8.339508,-7.084339,-7.710083,9.945336,-7.730763,1.278255,-9.630454,9.744053,-8.050834,3.841957,-3.625548,3.540791,5.860279],[-2.195961,-2.449512,5.215062,-0.444112,-7.603095,3.363029,-6.760290,-7.243550,4.023585,9.186964,8.553510,0.781727,-9.226694],[9.488624,-4.930414,4.925853,4.819884,5.036891,-9.217136,-6.021036,-1.554207,-5.057579,-3.581325,-0.575504,2.218132,-1.470228],[-5.666412,9.849816,-1.281203,-5.462364,-6.315175,8.218598,1.304682,-6.150638,-1.034698,-6.639017,-3.192465,1.166843,-6.658458],[1.157339,4.592104,-2.708907,4.651969,-9.734289,-8.995155,-5.990591,-7.241107,-3.313936,-0.419758,0.796353,-4.285012,-8.576658],[-4.935162,6.493488,0.845613,7.567933,-6.396992,-0.644179,0.326962,6.381962,5.168585,-8.534179,4.538324,-5.030461,2.114814]],[[-5.427694,9.502395,8.100486,-2.377220,-1.438095,0.448376,9.496976,7.719463,5.735730,-3.775625,5.293297,-9.979001,-3.912643],[-3.505575,-4.381100,-1.120888,4.875845,8.191003,-1.234842,2.630872,0.945648,-4.427941,2.267335,2.293600,-5.368910,2.154323],[2.714683,-4.038545,-4.199929,-0.136324,-9.789351,9.020280,3.119754,-1.869311,1.945080,-0.732986,-3.590600,7.565063,2.717267],[-2.138496,-3.469870,7.357301,-5.016952,8.683475,-3.255442,4.803530,0.627654,1.758929,7.749740,-7.440758,2.562061,6.162156],[0.462625,3.639179,6.580036,-5.157393,-4.543602,-5.216548,9.110732,5.635941,4.174557,0.538236,0.173823,2.804409,-3.823581],[2.559339,4.037141,-1.064175,1.438704,0.751601,5.051265,4.150835,7.287597,-4.458502,2.700185,-1.611260,-2.373201,4.571616],[-3.695764,-4.656907,-9.547273,8.422964,5.355073,-0.362818,9.995440,4.497412,-0.654064,-8.808309,-2.515192,-4.327603,-8.728184],[9.914767,-4.596759,6.701714,4.043322,-2.630645,7.822068,9.245347,2.037680,-9.681316,1.787374,9.598026,-3.427923,2.574319],[7.573922,-9.987481,6.566768,-4.895494,0.208801,-1.712459,-8.677516,-6.263547,-9.955455,-6.326416,-2.643192,2.476005,-1.565584],[4.468306,-5.533232,-4.713770,-9.286867,-6.795867,-0.126471,-7.980434,-7.989304,-3.514609,8.206120,-8.452161,0.120092,7.877378],[0.722242,9.976653,4.926420,-7.635737,-6.955836,4.034791,-5.082965,-2.909829,6.737173,-9.015312,3.463708,-9.210165,1.660008]],[[9.106203,4.419425,-0.841795,3.089430,-7.149748,-8.208814,-5.532764,7.740063,-6.040341,8.250392,-6.190044,2.888061,-6.681549],[-6.616187,2.603662,-6.412220,-5.611918,2.802755,-0.598158,-3.637841,1.266332,-9.356131,1.902076,-5.509537,2.198824,-2.129481],[-8.696990,-5.009588,2.029044,5.533948,-7.701784,3.680047,8.832733,-5.789935,4.905735,-2.156664,3.191995,-1.608774,8.346042],[-4.949267,3.306797,-2.568232,-4.220668,-2.521045,0.014434,-9.118180,3.767723,-4.140031,-0.437201,7.357557,-8.838576,0.555710],[-1.113961,-7.242910,-5.015236,-3.646446,-8.408597,4.800171,6.424213,-5.212371,9.963870,-3.813883,-2.879244,1.078781,9.209296],[-4.645984,-9.057871,-1.299537,3.589199,-5.912536,2.202416,4.511430,-2.243225,8.553495,5.215480,-4.730305,-0.503910,8.845725],[-3.073063,-4.801512,6.532532,9.989379,-9.800166,-8.823060,-4.700113,9.091408,5.294393,5.351943,5.169737,6.039103,-3.183393],[5.124825,8.432542,4.450000,6.592430,5.671393,-0.961198,-8.963393,-6.949880,3.225772,-3.958728,1.589576,8.107345,2.568992],[8.110450,8.683533,-0.385625,-0.847076,-8.611979,5.643509,0.773990,-9.763935,4.965432,-9.509670,-0.240116,2.461259,-6.402568],[-2.345072,7.075372,-4.476548,4.804059,9.506698,-9.688220,1.229538,9.645496,-7.700620,4.259822,9.054590,-0.775974,0.318449],[6.510663,2.123303,6.487991,9.079484,3.702455,0.293649,-3.246800,-1.557713,-9.455285,6.618600,3.846154,0.419065,-3.938865]],[[1.773707,-6.866050,1.570358,1.151932,-7.263720,1.390225,-4.393205,8.518350,1.705672,-5.288826,1.505734,1.152504,-1.788601],[-7.262661,5.460469,-3.363067,4.939839,3.376097,-0.661236,5.633606,3.757327,9.215036,6.090963,7.403997,-7.098923,9.536469],[8.888018,-7.615471,0.097484,0.673020,0.733717,3.196553,-3.412090,-1.348091,-4.845426,4.491769,-6.917846,3.330995,-8.463469],[-4.743954,-6.837786,-6.627329,-9.485058,1.294588,1.233428,-5.517602,2.237526,-4.722093,3.284683,-0.593040,-7.685680,5.605705],[-9.460934,4.603095,-9.853470,0.952210,0.770036,-9.796459,-4.274714,3.653823,-2.939960,0.852550,9.975834,1.356627,-8.410810],[-1.478762,-2.706679,6.580315,-3.020278,8.384446,-4.988476,1.033732,-9.315180,9.545177,-6.108916,-9.460646,-3.376169,-7.037393],[0.204334,-4.114849,9.904020,5.620857,3.434313,8.075215,2.056373,-3.764545,0.361217,8.701733,8.058163,5.591327,0.852793],[-8.422043,5.871747,4.382514,-7.636505,-3.662421,2.485374,5.599708,-3.851078,-3.946953,5.659517,7.507852,9.368325,-0.817809],[9.744106,-7.434650,-0.652402,-0.320171,2.350940,-5.940243,-5.686749,9.693372,-1.997329,-2.323276,5.585173,-8.530639,5.367369],[-5.913864,-3.837933,9.165060,-0.976451,-3.891559,-7.183668,-6.442905,7.947465,6.048647,0.156237,2.164514,-6.343487,-1.518073],[-3.482340,-7.102746,-4.324632,-6.878718,-3.775505,-3.173299,0.046153,9.933962,9.802705,2.193184,-8.470550,-4.101316,-7.641768]],[[-7.080392,7.574724,-0.984181,8.856513,4.955751,8.105579,2.351606,0.631692,-4.660726,-8.703304,-8.350425,3.030093,-6.177123],[7.281544,8.436587,-5.567554,-3.800385,-7.204255,-9.608977,1.165628,4.354608,4.057063,-3.502460,-8.977336,-5.491670,-9.347562],[7.608234,-5.111842,-7.346843,-2.626341,8.506990,9.354360,2.866405,3.274371,4.237256,8.920777,7.325661,7.165794,-7.864776],[0.331514,7.719678,0.322348,2.128325,-7.095546,5.578910,-0.467591,-4.592335,-5.850153,2.314336,5.035899,3.811393,-8.755352],[8.429523,-7.277844,7.667455,-0.935806,-1.921642,8.445090,-4.299019,6.323498,1.225370,-1.281177,5.028699,1.065044,-2.791269],[3.879688,8.909621,9.949634,-4.565891,-5.645994,9.942081,-1.716183,1.612158,0.374752,6.757508,4.595095,-1.350429,-7.117506],[8.560161,0.489969,-9.630137,5.191935,-7.177383,0.353398,-5.931518,-0.142046,-1.805439,8.084362,0.756844,2.762613,4.932301],[3.538051,8.907162,8.661981,3.129827,-5.671132,-4.412789,4.991987,-8.919321,8.861524,9.093741,-3.862167,-4.477702,9.974095],[8.137086,-9.912845,1.594232,-5.904451,-2.828538,2.500082,-0.235266,5.075184,0.785649,2.194507,3.424735,0.239234,2.180502],[5.555636,6.893142,3.481032,3.874538,-0.608516,8.424712,7.999224,-6.925952,0.153602,1.841805,1.765632,5.856155,-7.771121],[4.730893,5.759003,-4.746420,-6.790557,8.937323,-8.983102,-9.010985,-4.199301,6.855172,7.680680,-9.253123,9.573233,4.044167]],[[9.147647,4.862015,-4.214219,3.591705,7.249421,-3.176530,5.196914,9.780842,-8.940220,-2.692495,9.175929,0.847138,-3.963657],[6.196595,7.158081,-2.308615,-1.103654,-9.197215,9.933605,-1.569917,3.019581,-9.185170,9.334883,-8.114477,2.235606,-1.679392],[5.559087,5.093888,4.209587,9.161845,-8.366823,9.147662,9.227720,4.363850,5.059409,-7.329849,-5.621098,-6.233865,-7.381976],[3.234427,1.033442,3.325494,2.023933,-8.055589,2.938906,4.686632,-7.995227,-7.311123,1.342317,-0.900088,-1.874043,9.506620],[5.456783,-1.131184,5.134933,-7.547419,7.540210,6.727422,-6.637142,0.076821,3.167569,1.602292,-1.696640,3.452241,6.195440],[-7.952529,-8.951509,-1.409183,6.093328,-0.532753,0.954397,-1.640661,-4.890861,6.234110,1.070730,-7.842505,-6.017341,-8.755350],[-3.454187,-6.140721,8.609867,9.569698,-3.933468,-9.112530,-8.135640,-3.898743,9.537345,-1.753330,-5.384044,-0.267467,-1.690703],[-9.966215,1.483812,4.375538,6.623609,6.912246,5.679483,-0.490874,3.109403,1.835230,9.495041,4.635489,-3.754732,-0.613429],[4.556815,0.065927,-9.418454,-2.282574,-8.295264,4.786124,0.847665,9.644314,0.317881,7.503729,-8.096499,-4.819126,-8.978101],[-5.631588,9.142976,-5.519946,2.271206,-1.551613,2.634485,7.987786,3.243184,5.245850,-0.472740,5.613817,5.594723,-1.232573],[8.960870,2.100699,-5.671852,4.806260,5.353715,-4.294465,5.910635,-5.880038,-3.023721,-4.987356,-9.858845,-9.904110,-6.190302]],[[-8.960489,-0.553808,8.326279,3.980817,-6.364381,-7.203144,4.430788,7.041648,3.803636,-2.055773,6.784372,2.489357,-3.941730],[-2.746743,-9.384924,-2.277842,-8.745375,9.193157,6.551606,-4.583463,-8.046078,9.595734,-6.180823,-9.954817,8.417093,7.419226],[2.539408,-3.684903,-0.516586,-6.240976,-0.867743,2.723706,-3.454313,-1.731147,5.831795,7.037882,-3.933884,9.351055,3.714387],[-4.815810,1.818202,4.297781,-2.975927,-7.921216,-3.429634,-7.767113,-1.742718,6.244075,-0.380780,-7.497718,7.995387,-2.859398],[-6.630834,-2.017965,4.075836,-8.308768,1.031664,8.093606,4.960491,-5.669954,-7.639684,-9.851420,1.495602,6.734442,-8.925503],[5.263237,8.530159,5.207179,-5.790382,8.914202,-6.763281,-5.534292,-5.630899,2.563101,0.415837,9.294927,-6.437603,-6.855172],[-8.740355,-5.722988,1.347648,-0.435278,9.349376,-8.937150,5.327481,3.887581,5.520333,0.320689,2.597946,-1.114545,0.896383],[-5.710331,1.146648,5.971695,6.236938,-9.099621,8.628902,3.787857,-8.332723,-4.882373,-0.020293,0.561016,5.000050,2.676071],[-4.813548,-9.462167,9.764223,1.267024,0.131012,-6.290773,-5.219855,-3.926224,2.715405,-9.839661,8.717035,-0.946311,-2.408824],[-9.982570,-8.673909,-2.883028,5.851911,-9.242347,-9.652338,0.211765,-1.571057,-4.834959,6.515837,2.208526,-4.697912,-5.736363],[-0.864063,9.288203,8.862748,1.043487,8.553471,-5.689721,-5.003162,-7.029124,-4.998816,-5.105458,2.621088,-2.142205,9.086877]],[[-5.505569,8.568091,-4.738379,5.558686,5.683675,3.574801,-1.455171,-0.733664,1.800729,-3.303506,5.935341,0.988529,4.582528],[-0.605495,1.388444,5.100437,-7.712962,7.117545,2.227838,-9.491656,2.822763,2.867113,5.730970,-0.596898,-5.612300,-6.855121],[0.687727,4.267469,-8.210302,-2.076180,-7.278338,3.009058,0.177182,7.225016,9.354283,4.277007,7.180111,0.643059,-7.924186],[1.665512,-3.911100,2.057480,1.038754,-8.729406,-6.606566,-2.089578,8.063724,7.174117,-5.129341,4.076248,7.155280,-4.460699],[3.916951,9.101627,7.482880,-1.025267,-1.571126,4.795855,-2.139688,2.618691,8.883728,4.645768,-7.408243,9.983364,9.062716],[-5.954108,4.103325,9.415664,-0.202105,-6.446553,8.860558,7.873708,-1.736889,-2.683194,0.634335,-0.554945,0.219720,7.877380],[-2.202309,-0.654455,4.214681,-5.007558,1.606265,0.869025,-0.371512,1.839675,-8.433297,6.163939,9.061123,8.020696,-1.262666],[9.804840,-4.511105,4.245521,9.645025,-7.510897,-5.455974,8.034131,8.475609,-7.543525,7.009662,5.665411,-5.673419,-1.820483],[-7.716574,-6.582073,1.933706,-9.380073,-7.932621,0.755051,4.676756,-0.694628,-6.399150,9.069842,-9.459931,-0.591521,4.774224],[4.288065,-5.058379,-2.931462,-3.754866,1.109128,-8.955712,8.655851,5.382130,6.555566,-2.424839,6.741884,2.005256,-7.239891],[-9.135128,8.289845,2.501226,8.375111,8.573352,-3.624809,5.324122,1.245707,-8.477689,-9.154926,7.573783,-8.054868,-4.900373]],[[4.498001,0.922288,7.028588,-2.328793,3.053801,-6.645330,4.733349,-5.003036,7.018393,-0.299490,-7.011530,3.745430,-0.600762],[-6.220181,-8.504772,-3.794931,-9.501447,-5.094068,6.606782,1.191280,-8.488447,-0.024830,8.739478,0.099810,-8.324540,1.073659],[-7.907438,0.380829,-0.285945,-5.299868,-2.235240,-8.488282,-7.689875,4.574042,6.173934,-3.466829,-5.571885,4.492482,-2.645682],[-7.879502,-6.485414,6.126235,-6.603267,-7.813628,-3.637554,6.698618,6.734918,9.647996,-9.195473,-0.355222,9.909326,1.327955],[0.263986,5.525255,-8.952201,-6.094183,-4.277268,6.365236,-7.435607,7.723226,-1.189608,-3.903857,-2.817340,9.916619,-5.691615],[-5.202070,9.023451,2.478119,-3.854952,-2.851726,-8.198901,-5.599019,-5.584253,7.592078,4.985454,8.333334,2.999574,8.787945],[0.156576,9.818436,-7.557116,-5.543572,1.423553,-3.091619,-1.414958,-6.315292,5.773018,1.951945,8.473877,1.425198,0.924247],[-6.070722,-8.037998,-6.575995,7.628496,2.433930,7.566455,2.921044,4.788734,2.558354,-1.088028,-7.788064,-8.759484,9.835558],[-0.744959,-7.882947,4.719347,-9.482889,-5.832611,5.782118,-6.928645,-9.349328,-1.230574,2.822693,1.472163,-7.774554,-3.150791],[-1.638173,-0.550959,-4.846028,-8.697813,6.711242,-6.302841,1.288479,-4.548387,-0.390561,1.670169,6.988920,-6.559631,6.046657],[0.185188,2.937725,-0.534611,-7.065584,7.538359,2.558507,4.028732,3.088177,-3.399221,-6.157054,0.808025,-3.241069,5.642649]],[[6.401186,-9.544695,-6.463051,-2.784443,9.603574,5.156873,7.212869,4.932836,-6.507431,4.899804,-1.848191,-6.904076,7.805815],[2.740926,-4.447659,5.773596,-5.451151,-9.232983,7.524017,-5.907224,0.706574,-5.625612,-3.227158,3.645486,-8.115540,-5.695476],[-0.525702,7.728568,-4.822966,5.453220,-6.182643,-8.913359,-1.845375,1.820072,5.238163,0.690645,8.899984,-9.638611,9.712832],[-8.980433,-0.303909,-4.096703,3.884961,-9.351126,-4.685217,-6.671776,-5.378055,9.402422,6.018036,-8.167161,-6.177694,8.417849],[8.811060,7.198184,9.257019,-8.286955,-4.673130,-4.703343,8.258256,9.460002,3.817656,-7.210304,7.558062,-5.026281,-8.192219],[1.613599,-3.590447,-6.403081,-2.538209,-0.214629,9.323024,-2.350226,6.028340,0.934533,6.425297,-3.979763,-5.166334,7.803506],[-9.740264,-8.828897,-3.493548,9.199536,-8.330423,8.943085,9.639958,-5.747590,-8.297804,-3.620693,8.575185,-2.792790,8.166797],[8.202383,5.261801,0.678092,7.804287,-5.691375,6.176706,-7.952313,7.466820,8.949324,-4.222096,4.533382,-8.494190,-5.642802],[4.829297,-9.203830,-7.774606,-7.986035,-1.366693,6.187601,6.331631,-3.130216,-0.209175,-2.178034,-5.070266,-5.568045,5.206082],[4.975697,-7.020535,-7.675263,1.729426,-6.743847,-1.263591,5.939766,-8.266395,-5.186364,9.087395,-6.103579,-1.572455,0.597930],[-9.673020,9.200767,-9.664543,7.591550,-2.590965,-1.016156,2.189989,5.485372,-2.051935,-1.674301,-2.861071,-5.835577,6.166409]],[[1.471793,-4.185728,-7.702651,-9.080069,-9.573496,9.024461,6.374836,6.861581,1.524801,-7.610016,7.598241,1.746912,7.035236],[-2.659219,4.978816,9.455502,3.622388,-9.028942,-7.542753,3.769800,8.102227,7.891730,6.895366,-8.647067,2.536190,3.202405],[7.526312,-7.357681,-3.000355,0.527690,8.652259,-5.379058,-0.945296,-2.639497,-2.780623,2.369001,-5.701184,-3.810012,-0.412414],[-4.334521,-1.371927,-5.312601,3.340624,-4.337902,8.287992,3.599631,-8.888919,-5.621181,-8.165174,-9.620766,-5.993362,-4.177675],[-8.420808,-6.197086,-6.426579,-2.040514,4.150810,-9.147220,8.210578,-9.478511,-7.412934,6.776569,-1.372044,5.297252,1.165651],[9.641619,-4.795918,-7.706261,-0.686834,2.816349,-8.131735,7.679704,-5.241800,-1.863956,1.015697,-5.062409,-7.168152,-0.649497],[0.870439,-3.149494,8.017882,3.350884,7.164865,-6.168820,-9.135314,-8.026401,8.388070,-5.008646,-1.689319,-2.423353,-6.145248],[2.920752,-7.667249,8.682365,-3.170459,-9.929605,0.453057,1.413456,-8.946058,-7.394050,0.533588,4.923843,3.090250,-8.776164],[-6.639994,6.594087,2.094591,6.884175,-7.528897,-2.091652,-7.908451,1.717130,-0.117264,7.484941,-7.967343,8.486210,-6.090011],[3.560063,2.236693,6.995363,-8.905737,-4.826952,-9.977039,5.896918,-6.764528,0.673260,5.074800,-0.217214,2.440025,-0.231967],[6.656883,7.356995,-8.001464,0.188314,-0.680010,8.490481,7.126587,-9.976235,4.264834,5.824336,9.337587,4.378277,3.100370]]], dtype = "float32")#candidate|4870|(15, 11, 13)|const|float32
bop_4871 = relay.mod(call_4856.astype('float32'), relay.reshape(const_4870.astype('float32'), relay.shape_of(call_4856))) # shape=(15, 11, 13)
bop_4874 = relay.mod(call_4857.astype('float32'), relay.reshape(const_4870.astype('float32'), relay.shape_of(call_4857))) # shape=(15, 11, 13)
output = bop_4871
output2 = bop_4874
func_4876 = relay.Function([], output)
mod['func_4876'] = func_4876
mod = relay.transform.InferType()(mod)
mutated_mod['func_4876'] = func_4876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4876_call = mutated_mod.get_global_var('func_4876')
call_4877 = func_4876_call()
output = call_4877
func_4878 = relay.Function([], output)
mutated_mod['func_4878'] = func_4878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4879 = relay.var("var_4879", dtype = "float32", shape = (13, 4, 16))#candidate|4879|(13, 4, 16)|var|float32
uop_4880 = relay.exp(var_4879.astype('float32')) # shape=(13, 4, 16)
bop_4882 = relay.minimum(var_4879.astype('uint16'), relay.reshape(uop_4880.astype('uint16'), relay.shape_of(var_4879))) # shape=(13, 4, 16)
func_3893_call = mod.get_global_var('func_3893')
func_3895_call = mutated_mod.get_global_var('func_3895')
call_4887 = relay.TupleGetItem(func_3893_call(), 0)
call_4888 = relay.TupleGetItem(func_3895_call(), 0)
bop_4901 = relay.maximum(var_4879.astype('int8'), relay.reshape(bop_4882.astype('int8'), relay.shape_of(var_4879))) # shape=(13, 4, 16)
bop_4907 = relay.bitwise_xor(uop_4880.astype('int8'), relay.reshape(bop_4882.astype('int8'), relay.shape_of(uop_4880))) # shape=(13, 4, 16)
func_1279_call = mod.get_global_var('func_1279')
func_1282_call = mutated_mod.get_global_var('func_1282')
var_4911 = relay.var("var_4911", dtype = "int8", shape = (1620,))#candidate|4911|(1620,)|var|int8
call_4910 = func_1279_call(relay.reshape(var_4911.astype('int8'), [12, 9, 15]), relay.reshape(var_4911.astype('int8'), [12, 9, 15]), )
call_4912 = func_1279_call(relay.reshape(var_4911.astype('int8'), [12, 9, 15]), relay.reshape(var_4911.astype('int8'), [12, 9, 15]), )
uop_4921 = relay.sigmoid(call_4910.astype('float64')) # shape=(12, 9, 15)
uop_4923 = relay.sigmoid(call_4912.astype('float64')) # shape=(12, 9, 15)
bop_4925 = relay.logical_xor(bop_4907.astype('uint32'), relay.reshape(uop_4880.astype('uint32'), relay.shape_of(bop_4907))) # shape=(13, 4, 16)
func_3568_call = mod.get_global_var('func_3568')
func_3570_call = mutated_mod.get_global_var('func_3570')
call_4932 = relay.TupleGetItem(func_3568_call(), 0)
call_4933 = relay.TupleGetItem(func_3570_call(), 0)
output = relay.Tuple([call_4887,bop_4901,var_4911,uop_4921,bop_4925,call_4932,])
output2 = relay.Tuple([call_4888,bop_4901,var_4911,uop_4923,bop_4925,call_4933,])
func_4934 = relay.Function([var_4879,var_4911,], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mutated_mod.get_global_var('func_4934')
var_4936 = relay.var("var_4936", dtype = "float32", shape = (13, 4, 16))#candidate|4936|(13, 4, 16)|var|float32
var_4937 = relay.var("var_4937", dtype = "int8", shape = (1620,))#candidate|4937|(1620,)|var|int8
call_4935 = func_4934_call(var_4936,var_4937,)
output = call_4935
func_4938 = relay.Function([var_4936,var_4937,], output)
mutated_mod['func_4938'] = func_4938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4655_call = mod.get_global_var('func_4655')
func_4656_call = mutated_mod.get_global_var('func_4656')
call_5017 = relay.TupleGetItem(func_4655_call(), 0)
call_5018 = relay.TupleGetItem(func_4656_call(), 0)
func_2845_call = mod.get_global_var('func_2845')
func_2846_call = mutated_mod.get_global_var('func_2846')
call_5035 = relay.TupleGetItem(func_2845_call(), 0)
call_5036 = relay.TupleGetItem(func_2846_call(), 0)
const_5040 = relay.const([[[-9.980243,-0.136377,4.378560,5.472518,2.653089,1.292636,-2.778880,-1.182351,0.180475,-2.447913,-0.179372,6.045578],[-7.287160,7.604294,-0.322530,-9.935221,8.786423,-9.936789,-5.582520,-2.656215,6.053232,-0.304553,-6.528762,2.802933],[4.549627,-1.012273,-8.334423,-2.720742,-9.303218,6.643676,-2.329052,7.320272,6.508708,-0.310162,0.859520,1.280852],[-5.941522,-8.177806,5.196371,-6.911415,-9.050977,-3.786211,8.032394,9.701921,4.525425,-0.980693,-0.996190,9.904568]],[[4.728368,1.283770,7.843236,2.593144,3.543003,-5.046336,-3.553768,9.965169,5.679548,7.526354,-1.503245,-6.718041],[4.873068,-7.467162,-3.464543,4.998341,3.425204,-8.766620,-2.387749,2.904950,-2.633254,-3.168936,-9.213954,1.916661],[5.450905,-2.745341,3.062294,5.247942,-0.828224,-6.794494,-4.870601,-1.873357,0.119250,-4.383026,4.572604,0.398336],[7.996921,-8.208154,8.539081,-7.297543,-5.068268,-9.455894,4.176342,-1.103487,7.011608,5.487673,5.768528,-1.817153]],[[-4.334166,-7.576591,-0.525671,3.653193,6.769439,9.342102,9.055091,5.627816,2.549517,7.166609,-9.400225,-2.270748],[0.576911,0.999431,6.147095,4.399803,-5.578513,9.425562,2.128523,-8.638765,-3.335949,6.175081,4.614506,6.497204],[-0.039377,-7.546721,2.905583,6.302633,-6.033824,5.842590,-1.545155,0.510520,-5.264662,2.630928,-7.619958,-9.526265],[5.846433,-6.952119,-6.499165,4.186091,1.014807,9.617120,-5.513859,2.171231,1.954048,9.347307,8.170109,-0.618164]],[[9.862197,3.888773,-6.996273,6.112640,8.175222,-2.449894,1.475736,-9.923856,3.595408,6.701090,-2.386143,-3.775308],[0.071858,6.955322,0.279653,-8.282471,0.718643,-2.606538,5.982781,-8.125270,7.180586,8.753600,-7.292124,3.363831],[9.246722,-9.205979,7.702672,-1.559989,-5.536579,1.817227,0.672726,-9.272320,0.481243,-8.214372,-6.816400,7.757454],[-4.881041,4.951132,9.001445,-6.859783,1.981368,-9.496877,-5.212688,-3.535606,9.426810,-1.281595,3.744560,0.208552]],[[4.119796,-9.454211,-8.516428,4.049580,-5.887130,-2.407145,-7.322649,-1.888713,5.381924,-1.489914,4.097994,-5.637308],[6.260453,-8.342452,4.286402,8.107068,7.313630,7.325740,-4.078162,-1.587921,5.499477,-0.011587,-0.068979,2.126345],[2.287835,5.993747,-1.910706,7.938817,-6.528330,9.956719,-8.491654,-6.377244,-7.232533,1.191200,-7.938234,6.573010],[-9.706623,9.900894,-7.280513,-1.563781,3.441852,3.478222,8.501159,5.435124,-2.523911,-0.171433,0.574926,-0.475677]],[[-9.111963,-7.888066,-6.319128,-0.276659,9.032247,3.493941,-0.131338,-8.965809,3.168860,-4.318504,-6.782931,-4.983058],[-3.777634,1.047252,4.167836,3.293746,-1.079453,-9.841516,9.610727,7.554669,7.961601,-0.242789,4.255110,7.577451],[-9.682308,4.145762,1.525753,0.998687,-3.339749,0.144407,2.698716,2.616160,6.333390,-2.323639,-1.988206,5.516492],[-0.001401,-6.243702,-9.358848,-9.856524,0.415664,-9.654140,8.982134,-0.217971,-0.070676,1.467681,-2.040707,6.232381]],[[-2.465129,-5.265648,-6.921806,-4.022103,4.828599,-7.178998,-8.719583,3.140224,-5.819784,-7.070893,0.286030,-8.128169],[8.907891,9.130601,-5.306957,2.077579,-3.888875,-8.273109,6.394694,6.119460,4.210701,4.812147,-3.706973,5.607193],[-6.784624,-3.026051,-7.147895,5.434729,-9.097685,6.303025,-1.479295,-2.289704,-4.504004,9.427461,3.652900,-0.526849],[-2.115202,4.344426,-3.261661,0.162541,-5.047494,8.485400,-7.075698,-2.486293,4.787818,-1.059293,-2.842497,4.240366]],[[9.104146,2.736785,2.434543,4.782344,3.444800,2.873016,1.165053,-8.122351,-5.682769,-2.895124,-8.495017,-0.957720],[-7.152204,0.571550,1.297268,9.625277,3.272542,7.214283,-1.740512,-7.255990,7.044069,-4.225558,0.481740,4.227747],[-5.589926,-5.704626,-2.752389,-7.161077,7.764836,-4.204378,-2.187983,8.521931,-2.615233,5.342165,7.492071,-8.423455],[5.027602,7.626088,9.794721,-4.798600,-9.170712,-7.838586,5.665159,3.571825,8.589314,2.619663,2.319288,2.090389]],[[-3.469251,6.423905,5.744095,-9.573227,-6.521898,9.487414,-7.230869,4.488604,-4.530248,-6.727510,-2.468044,3.706991],[6.003797,-1.459772,0.797224,-1.520892,-7.111502,-0.086722,9.327889,-7.291002,-8.252874,7.995153,1.534979,-5.445245],[-9.185911,-6.117675,-9.029416,-0.535397,-1.544295,0.526781,3.652575,4.840549,3.077233,9.040128,3.476050,-3.205477],[3.577804,-5.113871,-0.046001,-7.052340,3.612546,8.728838,-6.365332,8.667825,-9.055832,9.663120,-0.409075,2.610526]],[[-2.013823,-9.868855,-2.510067,3.425017,-0.132984,0.577736,-1.285843,-5.766594,-1.698623,-9.276188,0.503969,3.678905],[-5.517202,4.095549,-6.134917,-0.012481,4.028403,-6.450195,1.444370,9.422660,7.363915,-1.514034,2.802652,-8.237287],[-0.127325,-7.385422,-5.610625,-9.613187,-5.095326,-1.859059,-1.500134,9.839379,1.761691,-7.456050,-7.892095,6.533717],[-0.797860,8.753317,-8.863707,3.057239,-9.375216,-9.631205,7.544014,2.058619,2.982251,-8.197390,-1.257779,2.874449]],[[9.135788,-4.696156,-0.118972,-9.763433,8.095137,-4.255920,9.988658,4.558571,2.988950,-7.271447,-8.674166,8.631635],[5.194447,8.555040,2.022300,-6.319348,-4.177965,-1.578010,-5.780381,0.175372,3.945995,6.726581,6.600180,-5.711916],[-1.445959,-0.538963,5.815340,-1.738714,2.701816,-6.347582,2.330971,-4.143058,-7.683661,-8.108307,6.677353,-0.524344],[6.710222,6.653610,-0.168203,6.396629,-1.143845,1.194256,1.474162,6.843838,-7.262172,-1.182015,-9.675838,7.198997]],[[0.980010,0.327477,-9.860352,1.796720,3.418965,-7.062368,6.079250,-9.234910,5.502458,5.646541,-6.752967,-6.480913],[-8.012461,-2.302779,8.241730,9.310437,6.371212,0.203354,4.659019,7.161068,3.338498,-7.161748,9.083643,-5.083539],[4.494940,-7.300517,-8.934715,-0.710127,1.624219,3.847381,-5.786808,5.872489,3.475660,7.383926,-5.094910,8.998246],[3.509827,-4.714075,7.593960,7.912594,-7.966127,-7.159711,-0.343816,3.618185,4.318252,-7.912374,-6.761580,2.054136]],[[-6.203574,-2.865513,6.394459,-5.836702,0.071540,4.929049,-4.802439,7.696243,-5.701555,5.326014,-6.316143,-3.877962],[-9.369581,-9.371724,7.946074,-6.792173,-5.634052,-3.157974,4.933191,-8.060582,7.212198,3.194203,0.146665,-4.220193],[-1.997586,-3.022678,-6.633198,-5.898106,-2.499929,3.739317,-6.856978,3.077571,-8.097157,-1.641406,9.645465,7.437042],[-7.145287,-5.889428,5.446131,-7.798070,-3.675427,4.812877,4.252944,9.928874,-6.063945,9.591073,4.698332,1.057891]]], dtype = "float32")#candidate|5040|(13, 4, 12)|const|float32
bop_5041 = relay.minimum(call_5017.astype('float64'), relay.reshape(const_5040.astype('float64'), relay.shape_of(call_5017))) # shape=(13, 4, 12)
bop_5044 = relay.minimum(call_5018.astype('float64'), relay.reshape(const_5040.astype('float64'), relay.shape_of(call_5018))) # shape=(13, 4, 12)
func_3712_call = mod.get_global_var('func_3712')
func_3714_call = mutated_mod.get_global_var('func_3714')
const_5059 = relay.const([1.049847,1.956726,4.610191,2.864069,-5.672308,-8.200657,3.027175,-0.326474,7.015567,1.167313,-7.494410,9.314807,7.311298,1.927079,-8.527913,-7.482854,-9.690727,-9.721877,5.524288,1.281177,2.500711,4.449293,-8.427964,0.567405,-7.971290,-2.550944,-3.500318,1.800956,7.914854,2.170880,0.558638,9.704843,6.716108,1.255395,2.572125,-9.683411,-0.378837,2.722904,9.274038,4.146923,-8.480419,-4.380699,4.272374,-2.087057,4.659078,-0.748786,8.808635,-0.154641,5.628534,5.161138,-4.899786,6.314398,-7.204574,7.050106,3.764255,2.113920,0.579406,1.423201,9.894392,2.810680,3.103464,7.690508,1.018295,2.457306,4.260916,1.412845,-8.635871,1.135480,-8.801936,-2.243107,6.183153,4.480605,-0.468243,8.951884,-4.718703,-7.785788,-5.433380,-8.741766,4.861702,-9.290189,2.432871,9.860120,-7.171080,-3.913566,9.584517,-1.683550,-7.179199,0.322757,-2.985442,1.543180,5.979958,-6.714194,3.507379,0.879792,-4.605587,-8.672437,-1.251322,3.056925,-9.442571,0.665992,6.795562,-6.127024,0.293175,-7.528819,-4.751805,-0.107657,0.456564,8.518844,9.581371,0.606067,-8.037186,1.510307,2.783512,8.940543,-3.485154,-1.149360,-8.578166,-0.874483,-5.847821,-9.022963,-0.814858,6.511790,1.554563,-2.972526,1.821868,8.328930,5.581016,-4.507555,0.801093,-4.340406,-5.353767,6.827155,5.929042,-7.283645,-3.267526,-7.781296,2.352170,-6.841355,-1.637091,-2.699399,5.600108,8.145377,-0.266220,2.910323,9.310400,-2.864102,-7.231311,3.373944,7.304608,-8.075666,-6.392507,-8.807333,-4.343809,-8.475500,0.412901,-1.384877,-0.075941,-9.280487,-8.671932,5.201714,5.776334,2.846757,7.295311,-2.790525,6.323464,3.368836,8.125456,9.737783], dtype = "float32")#candidate|5059|(168,)|const|float32
call_5058 = func_3712_call(relay.reshape(const_5059.astype('float32'), [3, 14, 4]))
call_5060 = func_3712_call(relay.reshape(const_5059.astype('float32'), [3, 14, 4]))
func_274_call = mod.get_global_var('func_274')
func_277_call = mutated_mod.get_global_var('func_277')
const_5073 = relay.const([-0.459005,0.745047,-0.555689,6.730415,-3.261177,1.408638,-9.930868,7.559892,0.317903,-8.368677,-3.661215,-5.703376,-7.676210,-1.947019,-0.687454,5.559302,-0.480035,4.586362,3.536463,5.267555,-2.624354,6.548403,0.305784,6.125586,8.820603,-9.028206,-1.127859,-5.027532,6.192616,5.560980,5.235491,-8.187132,8.991441,9.564154,-6.623784,-7.820273,7.367659,4.575629,4.366784,5.424632,2.874065,-2.428444,6.172057,-2.400797,7.488565,-9.940708,-9.619248,2.626338,0.851255,-0.524800,3.073211,-9.257082,2.221491,6.744942,-5.430832,0.974048,-7.012245,-0.817726,-3.423611,-8.860287,-1.636738,7.822775,8.343082,-7.612351,5.655144,1.315770,2.283221,4.595601,9.164812,9.314301,8.502812,8.809965,-2.436145,7.534080,-5.232598,3.651006,9.723792,-0.669922,6.528070,0.159164,8.937086,9.554564,-5.816097,9.257325,6.342698,-3.275019,-7.735084,-6.952750,3.773965,7.890507,7.798533,-3.007502,4.049532,9.915362,1.212815,0.064302,2.510331,4.559662,2.797851,-0.728530,-7.232202,-3.711132,-8.274111,2.820157,-5.893083,-1.687120,6.645002,-6.781719,7.647969,7.564821,-4.079761,4.239179,9.775939,-5.363118,-3.006324,2.858999,2.239225,2.542182,-0.165558,9.199744,8.701670,-8.845929,-4.472267,-9.724713,6.511954,-3.343895,-3.656652,7.971131,-1.375132,4.197259,-7.370391,8.280900,-4.158330,-8.312093,-6.637511,0.951160,5.029403,-3.604774,8.653164,4.828289,1.950878,-1.582907,0.504684,5.465358,1.892387,-7.950255,-0.495177,1.437269,-5.944070,6.853099,8.322903,7.062637,8.284625,-3.905145,-4.735261,1.143996,8.384812,0.793482,5.639081,2.885995,1.559301,1.557252,7.934377,-1.658739,-2.470969,-5.321342,3.470412,-2.034593,-5.805661,8.732699,-1.817490,-0.035760,-3.831031,-1.129417,-6.592342,9.389579,-1.653865,3.317520,9.955773,1.340576,-6.880457,-9.192636,9.593630,-9.770594,5.791597,-8.584957,-5.655465,-1.640165,7.640497,-8.341056,-0.673121,5.585172,-0.218938,-8.031686,8.646273,8.198207,-9.792667,0.122227,-3.562814,5.617863,7.226063,8.354729,-1.483347,-0.153900,6.289000,1.260270,-0.938177,-4.902585,-5.252323,9.233861,-0.560196,1.099151,-1.892158,7.893211,-3.299762,-2.562432,-5.184628,7.669693,3.217593,-2.203416,-2.462999,-1.742569,3.765111,-7.202642,-7.133404,9.112406,-1.804226,4.770479,6.693447,-8.880085,8.005009,1.156737,-3.716189,-2.243295,-9.105904,-1.017429,-3.682005,-7.008451,5.474607,1.475145,-1.291939,0.458042,6.461918,6.996682,6.762485,-0.173745,-1.542844,-2.884054,-2.921713,3.024950,-3.130280,-8.078663,-6.630192,-3.767950,7.817693,2.482164,-4.198881,-7.861265,3.934426,-8.105437,9.481509,8.941423,-4.999535,7.448948,-6.995250,0.860296,-0.214637,-8.073345,-0.087873,5.268791,-6.153371,5.542143,0.411751,6.863556,9.194718,9.797851,-1.177299,2.037499,-4.716857,-6.333496,4.749016,0.524733,7.217929,-6.592922,-0.277671,5.401043,6.740655,4.220715,-4.516916,8.575583,-5.359746,8.577372,-2.769050,1.335769,3.688818,2.298074,-7.820284,-0.095740,-7.645327,4.649344,-4.155417,-6.571377,-9.398558,-6.013031,-7.692599,-5.590533,-1.722686,1.426687,-2.939907,-8.167769,-9.874174,-0.961808,-4.515752,-0.177894,-6.957271,-5.953355,-4.964136,-6.202241,-6.430818,-0.599999,-3.709605,-8.729245,-2.896221,9.183528,-8.842969,-1.443601,-3.832988,5.444697,2.574876,1.133654,-5.552372,6.617968,-9.685835,1.479643,-2.675921,9.296876,-5.152541,-7.500738,-3.557288,-7.788067,4.674336,3.179308,9.854562,-4.557979,3.355938,-8.431039,7.579994,-4.088110,7.565898,9.609400,6.293625,7.703766,-4.279978,-5.896002,8.852571,8.796139,9.134856,-6.045870,-8.841254,-3.762351,3.488194,8.417908,-4.718541,-4.771583,0.575412,4.471696,8.090196,-1.036959,-1.983538,-0.124694,0.492259,-7.964577,-8.507440,-5.147280,-5.795434,-7.242079,7.035723,-3.773052,-9.401294,-1.009450,-3.094357,-1.250253,-5.152993,4.933550,-3.775414,-1.580993,-0.278656,-2.399439,-5.059069,9.505615,5.691797,-5.924326,2.920288,-1.233312,0.980981,1.317393,8.945981,2.286025,-4.399059,-0.753600,-0.378034,0.276826,-4.876648,-4.323054,-8.423032,8.564226,1.848085,-5.454229,-5.470775,-1.293418,2.271989,-4.634634,-6.581637,-3.882703,-7.858336,6.094274,-0.741123,8.473357,-9.844752,4.156749,3.403794,3.713155,-2.201218,5.951458,-4.696896,-2.403933,0.260045,-5.424824,4.901131,5.809120,-1.371195,-7.289257,1.158818,6.771448,5.670512,-6.149878,3.813202,-5.067663,4.870282,-9.623995,8.908128,-4.060469,6.222702,-0.840795,1.334911,0.732485,-2.839131,-9.089424,2.169932,-3.696752,-7.431718,-3.294854,-5.449212,1.837880,-6.869585,0.692346,7.530703,8.027594,5.953358,8.267566,8.362459,-3.817750,-3.369942,0.014722,-7.187487,7.114684,-7.413771,-9.681922,-1.839733,-2.111517,9.954508,-5.223054,4.343689,-9.584583,-6.359478,-1.242850,-5.300794,2.964010,7.129737,-8.417548,-7.096592,6.692344,9.740847,2.562201,4.091546,2.075287,-0.502432,0.072952,5.820390,-4.918591,3.736062,6.744774,0.882664,0.733510,2.658219,-9.344477,0.354737,-1.985943,2.331037,-9.204274,2.767714,8.391876,7.205509,-7.543113,-6.932221,-3.313998,4.439008,0.506228,7.532610,6.093361,0.056846,-9.624219,8.735071,1.516142,3.329470,-5.258821,3.198257,-3.379580,-2.046682,4.510748,0.108383,9.294317,4.858941,0.155230,2.608488,6.462034,-3.517075,1.487110,-8.530836,-3.912982,-2.515750,7.089352,-5.857626,-4.019479,-8.791475,-9.001423,-4.951361,-1.500197,-8.179759,-8.450174,-9.008278,-9.968228,0.590101,1.317296,1.842807,9.897773,-1.993599,1.759412,-3.463097,0.966337,-1.106004,-6.865323,6.094940,-7.815516,-9.543256,7.365847,7.619065,0.408035,7.167983,-1.593151,-2.966320,-4.294848,-6.033547,-5.640415,-5.929715,0.515644,1.326618,6.817087,-4.433780,-0.197123,-1.343614,-6.375045,-3.610487,-9.649368,-3.895485,-1.307222,8.347447,0.578903,-6.078905,-5.239544,0.353824,8.482741,-9.538504,-1.864820,5.587293,6.239375,-2.695243,5.054654,-1.715146,5.400203,-0.696932,9.982943,-4.720272,-8.241468,-3.093110,1.147522,-4.337287,-3.053919,8.806966,-7.027091,-2.785129,-5.374067,3.485351,8.138577,-1.399951,-9.315698,-4.821083,-8.078453,-3.483892,9.670794,7.636443,-7.921276,-8.350524,-4.369198,8.985989,-5.160999,1.994819,3.278604,-4.812127,-3.931548,8.419720,4.011022,-6.067434,-2.095265,-9.849191,-5.195994,6.371247,-4.032677,5.163033,2.128040,7.465259,-1.810263,5.421945,7.726164,-5.630093,-2.468664,-8.644607,8.857381,2.698359,4.200827,-8.201253,3.398933,-8.237272,7.163477,4.408318,8.936254,-8.715043,2.337573,8.133911,3.270991,-6.381895,2.876298,1.114983,9.215488,-5.466091,4.251593,-4.236520,-8.135262,-5.675048,7.154144,7.111208,-5.554638,-1.080527,5.821436,-2.281383,-2.403670,-2.353812,2.770092,-8.892301,-5.815449,2.186775,5.071888,-1.246654,-2.111235,0.183700,-9.233275,-4.495725,-6.536209,-6.698321,-0.532297,-1.691663,2.757092,-8.580755,2.265447,-6.372515,-3.952003,1.820315,9.912417,8.162828,-1.368895,5.820333,2.259956,4.573599,6.783274,0.766627,-3.611285,-4.031412,-7.806682,-2.366928,7.306595,7.949076,-0.437000,-9.614588,7.056457,8.104774,-0.973069,-4.474599,0.662466,-7.885220,-5.521757,-2.668672,2.395653,-0.698847,-1.785886,4.606288,8.549947,6.625755,8.622405,-4.435426,8.177725,-4.375086,-2.273951,-0.180389,-9.352659,-2.219565,-2.334373,5.222911,0.795915,-3.492515,-9.052972,-0.349333,-6.344786,1.521629,9.514092,-5.308376,-4.067078,-2.596118,-0.099379,-5.124568,5.613397,8.521600,0.270917,-4.284432,-9.933077,-5.695365,-8.225826,9.188323,-0.138925,2.484473,-4.940478,3.716553,-8.407174,3.180682,-2.653347,-2.780944,6.270767,5.673997,-3.549317,0.284829,-6.401751,-5.257339,-6.408997,-0.091503,-2.801150,-9.269888,8.233834,3.516285,-3.051183,-6.166568,-9.560225,-7.091700,-7.878360,5.951876,2.663751,-7.553361,-1.076565,6.887458,-1.701793,-6.773230,6.458862,0.593806,-7.903751,-0.226350,4.938475,5.135984,0.670392,3.648038,0.776091,2.377707,-1.788064,0.797694,-3.428590,8.045292,-5.080244,1.784215,6.681919,-9.475878,-1.763730,-7.617823,-4.648062,4.354936,7.750821,1.606744,9.339890,-2.761851,-4.383527,6.671095,-3.089038,9.911664,-2.102699,-4.382555,3.624163,5.713165,1.127645,-8.298061,1.537219,-1.130871,-8.981339,8.556482,-1.995549,3.193359,3.918880,9.130481,-7.640750,-0.186979,5.295430,-2.278378,-0.007032,-1.049344,3.177370,3.984156,0.341777,7.511722,8.399516,8.835130,-7.820592,7.082750,9.475309,4.185640,8.284063,-5.442973,-7.571047,-9.145815,-7.718617,4.649359,0.893416,-1.466081,-2.355928,-5.296307,0.491138,3.125902,2.482395,4.379084,8.766256,-5.973901,2.177375,9.016984,5.133695,-9.323409,4.999097,6.721633,-0.502716,2.634936,1.664457,-5.673198,7.718355,8.675381,-8.023587,-4.878507,6.121177,0.365630,0.146003,8.609317,-4.648690,0.232435,9.106964,-0.907075,-8.679902,-6.685377,3.231302,-7.786440,-6.326115,2.107928,4.392534,-2.901947,-3.445895,1.433318,-0.005661,-9.346777,-3.423514,-5.156439,-4.816240,8.299141,-2.654848,0.965518,-3.035056,4.425270,1.379065,-2.663682,-7.661847,9.499018,-9.403402,-6.941772,5.634507,7.317589,-3.898665,8.357553,-2.078181,-9.018301,-0.776109,-5.719475,7.245430,7.652365,2.773446,0.068347,-0.079213,-3.854782,7.907749,-6.639647,-4.994615,-5.982874,3.268576,9.135904,-6.188260,3.423420,0.236311,-7.282938,4.732129,5.204583,1.579111,-8.504690,-0.203234,-7.903551,0.825369,-9.758629,-1.226355,8.991210,5.464252,0.699097,-4.869165,-5.249424,-5.814066,-7.368578,0.635491,-0.903689,0.522424,-3.169411,-5.670664,8.855688,8.478720,6.639138,0.520898,-6.906098,8.462587,-7.344072,-4.112584,-1.602192,0.930043,-7.988989,-5.906555,6.290349,4.356341,2.102018,-5.422469,1.793170,1.791577,9.355681,8.762922,7.459701,7.654678,-9.643707,-0.276981,7.926416,-7.522897,-9.864195,-2.608294,-5.573040,-8.531599,7.391786,-9.205668,-8.369467,0.118199,-2.581922,4.526898,-4.042490,-1.821529,-3.587589,3.397897,-4.255384,2.726015,-6.272848,6.800041,1.995105,0.251403,-8.519567,-9.734589,2.810418,1.021531,-5.797261,7.693992,8.875358,-0.200193,-1.798798,9.106976,2.243122,-3.005131,0.017159,-8.853126,0.954507,4.226701,5.334426,-6.537414,-8.558689,1.911827,7.488036,2.313335,-3.243017,-8.212213,1.660768,4.254384,3.385379,-8.790581,4.225645,5.140590,-4.231941,2.301140,-7.674744,-8.183539,1.757908,-2.173488,-5.639772,3.208606,7.588220,-5.366980,-0.640525,8.060177,6.095669,-8.647923,-4.485740,4.969643,-1.547189,-3.558233,-1.548921,2.524632,-0.369476,-4.119660,1.942548,4.145680,-2.728687,7.694493,-1.886061,-0.498221,3.410294,-2.015895,-4.378757,-3.800552,-0.481387,-2.134118,-1.631548,-0.039055,1.878501,5.972767,8.648439,8.785066,-4.155526,-5.238266,7.428937,-5.074546,9.384976,-7.275809,-8.770802,-9.993737,1.196576,-6.981371,4.983954,2.572407,9.097172,4.795464,6.920279,-0.480180,-5.707989,-7.586971,6.538166,-7.843099,-4.890739,4.126370,6.670610,5.204368,-7.013415,-5.307327,3.518586,-0.837527,1.058927,0.602578,-9.079244,-2.515660,-5.303149,-1.700648,-2.308049,-3.263799,8.177988,7.470908,6.689672,1.988993,-3.597680,0.997495,4.347130,0.393428,-1.570236,-1.969314,-8.171557,8.291034,8.925284,8.381245,-0.817243,-8.617178,8.587837,-3.279307,7.327606,-5.532130,-9.334196,0.465053,1.494404,-5.118033,4.763146,-4.769252,0.038163,-7.084423,0.713922,-8.790850,1.677061,3.700859,6.076212,8.314816,7.192754,-8.915480,-8.817525,-8.849231,-0.277981,5.634328,1.703332,-8.726855,8.271529,0.524989,-4.118938,-2.961563,5.362734,-6.061707,0.723671,1.715204,8.422916,-6.628581,1.400241,9.239844,9.644206,6.106022,-5.770783,-5.920749,-2.251466,-9.361410,9.051718,-3.193011,-8.877906,8.535548,-1.918121,-6.190193,5.686617,2.989901,2.241604,-0.403992,4.063840,1.486946,1.371798,4.724528,-9.224042,-5.185938,-5.657737,-2.091892,4.199476,5.476358,-2.525011,0.574486,-8.441337,-4.198212,2.515433,0.915470,-9.169975,-0.469771,-0.916847,7.911274,4.511075,-4.382787,-6.472306,-8.520468,7.350776,6.125290,-0.997097,8.037502,-3.014619,-2.982838,-6.395250,-4.224583,9.622097,6.077444,6.517457,-6.450004,-6.036473,-6.483831,8.617509,8.882578,-8.881813,-9.795244,4.722282,-0.267955,4.795810,-4.700620,-6.312271,-3.920366,5.072804,1.261913,-0.557346,-9.237794,-9.194613,1.973160,2.264196,-8.731710,7.771203,-1.682319,-5.172478,-1.779272,-0.879341,-6.429691,-6.987956,-2.109435,-5.413736,-9.300255,1.334083,7.589396,0.986264,0.171206,6.067443,7.731471,-3.840073,-4.996511,-9.408256,-9.989870,8.211842,6.633760,4.055772,7.043023,0.695916,-7.218483,-8.228684,-4.414108,-9.586792,0.839637,-5.932317,-9.885312,-3.918570,3.875471,-5.294372,2.578143,-4.914819,4.788990,-0.418097,7.786150,-5.608940,-7.160893,-9.437862,-4.215599,-4.302472,-4.771093,-4.736621,1.231678,8.344033,7.709887,-1.880205,4.946860,7.986895,-5.067010,-1.040406,6.594430,9.773527,7.157226,1.194151,-7.976235,6.309195,-2.185586,-2.342528,5.066439,-7.072746,0.688986,0.570661,-1.768138,3.104615,3.536365,-2.086561,-9.251296,-5.959981,8.700334,9.376587,-7.921075,6.981051,9.975823,-9.852563,3.616267,5.285744,-9.093053,-8.064273,-0.276884,4.537278,5.329914,-9.368852,-4.537734,9.412946,-8.435645,9.905416,-9.480876,4.107586,-4.551165,-0.966357,9.510538,-1.552506,-7.593218,-6.166788,-3.919496,-3.809425,6.412257,9.979490,-4.808844,-6.340556,-7.952305,7.772135,-6.439693,-9.686052,-3.350634,-8.149560,-3.558137,7.010142,2.260283,5.654866,-6.874362,5.268251,5.371805,8.409294,-1.065941,-4.709176,4.836326,9.011109,0.758312,6.701541,-4.618551,6.449322,-4.831758,7.407383,-9.855089,-0.379203,1.777106,-3.326749,-5.735813,-7.824722,9.362222,8.993689,-3.984963,-8.117866,-6.936793,2.015920,-5.341332,-8.035967,-4.508343,-9.640385,-6.238945,0.043380,1.299539,-5.289980,5.172711,-4.211045,-1.513168,0.340014,-5.136683,-5.428655,2.559721,1.345482,-7.185302,9.290976,4.873034,4.911903,-0.556286,0.223833,-7.873906,8.276053,-4.050819,1.760081,-6.195891,8.857417,-1.590505,7.683502,-8.499397,8.734190,-3.912633,6.091712,4.368192,-9.012240,2.910198,1.971329,5.690107,3.859664,-3.176124,-7.725781,9.233487,6.522132,9.318649,-6.803855,0.365064,-8.121625,-1.201538,7.823918,-3.095242,8.592539,-5.129628,-8.298989,8.320693,1.830418,-8.833105,-3.433038,-0.495488,0.536858,6.938380,0.181834,-5.603638,-0.555194,4.788053,-4.396475,5.701361,6.712603,-8.180559,-5.763249,4.884811,9.880589,6.984007,8.984932,7.966676,-1.162977,-9.767878,4.545224,9.516467,4.842890,4.969240,1.918809,9.346750,-3.636191,-3.016210,-7.117640,7.925508,8.842587,4.896504,-3.927111,8.991835,3.174000,-7.889689,-2.593060,9.698367,-4.125957,8.917586,3.735248,-7.239974,-8.958723,-3.132744,-9.506791,-3.431914,6.744810,-0.184939,-8.220960,-6.907494,-3.083714,-4.324891,-0.387652,-0.279730,7.250682,-8.907118,2.895649,-5.944211,9.516743,-3.770632,-8.523909,5.202088,-7.702932,2.488478,-6.940253,1.813044,-7.454129,6.612405,8.302497,4.205276,-1.867107,5.637343,-1.561367,9.254974,4.634683,5.654386,6.485811,7.260036,8.318598,-1.535604,-9.600672,-8.878166,-5.845689,9.187739,3.500395,-5.115806,5.723434,9.172298,9.503174,0.570246,-7.987173,4.724371,-1.705096,-2.052614,9.646712,8.889932,-6.651210,9.079290,4.475289,-7.460207,5.830349,-9.348934,-4.961327,5.497034,6.874870,-8.116827,7.710438,7.690914,-0.592234,8.537928,-1.942748,2.147120,-7.715057,9.081532,-7.726092,1.336563,-2.815639,-1.818227,0.260406,7.388715,-6.750086,4.691790,8.122588,8.357591,-8.263123,6.626093,4.819855,4.269657,4.206401,-2.974342,-8.806676,-0.034986,1.004400,3.185147,-6.130255,5.337303,2.691187,-8.267734,6.501388,-6.989308,9.927320,0.456927,3.263308,-9.963768,7.317618,-6.874227,-1.811835,1.798749,8.445033,6.842970,5.704700,-7.524724,1.514426,8.878160,5.578346,-8.209521,1.103043,5.340536,-5.343737,-6.036097,-3.704157,2.028997,4.340892,2.516513,5.203221,-4.132848,9.692618,4.519892,0.267860,-4.526322,3.857404,1.481725,-2.969202,9.605616,4.583833,-6.773448,-7.734787,-0.408596,-1.614870,-4.949183,-9.522727,-9.365298,1.032652,-6.026002,-3.950806,0.619137,8.532925,5.131681,-1.571759,-5.549065,-1.906434,4.833550,-2.336009,-0.920437,1.545879,8.666864,6.958888,-3.087348,9.314133,0.451758,3.958280,1.681093,-8.929630,-0.714019,4.827875,-6.588160,6.411189,-5.996548,2.101181,8.882352,2.151100,8.165931,-5.713460,-5.848270,-1.802899,-3.972037,-2.788360,1.337278,-9.553261,5.636405,-9.325260,4.696681,-2.204410,-8.742994,-3.929561,-5.374217,-8.464336,-2.741349,1.571769,-3.032757,-1.947825,9.602697,2.587382,0.993905,-6.935150,1.578499,-7.799146,8.060373,1.867031,4.127112,9.710652,5.630862,1.757434,-2.256365,-4.478398,-6.669294,2.291877,-2.371303,-9.807925,-7.112786,-9.601686,-6.381021,-5.635644,0.046393,7.830434,2.504574,9.940331,-2.220076,-6.629510,4.969061,7.229975,-2.523437,-9.358379,6.437421,-5.847352,8.991511,-1.048473,-6.012414,4.000332,-5.981102,-7.590823,6.254372,-7.214090,-0.389495,6.537745,-2.243049,5.264770,9.255861,7.472291,5.190107,9.023995,-6.510614,-3.116211,-5.965124,3.648477,-3.106395,0.194548,5.675873,8.200658,-9.241325,9.456134,7.146894,6.817986,-9.624617,-4.366274,3.340527,8.932788,4.662287,-2.447754,0.522258,-2.959008,1.474019,-1.146256,1.690276,-0.512455,-4.694027,-5.839724,-5.977099,-8.998417,-8.764307,-6.358270,-8.233931,-0.806808,8.561435,-3.588176,-2.085886,-6.699379,-1.147789,-6.777016,-6.772141,8.018161,-0.162031,5.638572,-2.699680,-9.240224,-5.441997,-8.188604,-3.331120,-6.276154,2.176144,-2.900386,3.867130,4.901829,8.629838,3.441629,-6.655835,-3.843573,9.774035,1.685743,-5.175010,-3.721710,3.192304,0.132427,4.558095,5.609112,-0.972143,-0.258195,3.104921,9.101910,0.161056,-8.842373,-2.737234,1.997256,-1.946506,2.348926,-1.910686,2.621493,-7.676651,8.185204,-9.980195,-8.380188,-3.940987,-6.654912,-6.428313,6.923540,3.988047,1.131470,-4.476498,3.460564,1.949719,8.745356,-6.270575,9.908863,-0.999632,2.183221,-9.361677,5.065938,-3.246618,-7.949072,-4.192889,1.482386,2.010919,9.229662,5.115242,6.661779,5.119739,-0.430940,9.362518,-9.700097,-7.115302,5.340938,7.534145,6.688558,-4.762128,-7.925711,5.533744,-8.786380,-6.993771,7.889254,-4.478335,-0.503803,8.170516,-1.167458,5.084120,-0.133145,-3.693550,-9.284826,1.171739,0.342743,5.631409,-3.058202,2.463087,7.184493,-8.492134,0.788401,6.163115,-4.669145,-2.667690,-7.847017,4.725521,1.981163,-2.505764,3.580393,-2.831860,1.528935,-0.505237,-3.929439,6.054695,4.100850,-4.537211,-6.336887,-4.474043,1.752626,5.072113,-2.649616,-7.754673,-0.436613,9.992608,-7.369759,5.591567,8.680724,6.527381,8.010010,-8.514254,-8.775970,-0.861512,-1.010525,5.494819,3.005046,7.199122,8.309847,-5.082172,-7.741860,1.540129,5.630624,8.678513,-2.189870,-4.592632,9.333396,-0.289353,-4.869191,-4.184781,-7.818800,-8.554213,0.488538,9.442081,0.212181,-2.753445,-6.782173,2.073262,-9.118819,-4.039445,9.645278,6.503580,1.834200,2.419591,-5.940003,2.965957,7.802296,-7.731570,0.332172,-7.764636,3.514212,9.893966,-5.706778,6.075014,8.889724,-4.460060,7.318457,1.657817,2.673356,-6.927005,-3.457951,-5.041209,3.573778,-8.811551,3.455065,5.968993,-4.041541,-5.441399,1.269352,3.880523,1.424721,-1.543543,0.417977,-4.831596,-4.850545,-0.719953,-7.687949,-0.071658,-4.532357,-1.166533,1.894391,-0.245764,-0.445887,4.646283,3.735196,-9.405038,-7.897215,2.744796,-8.206791,-8.572271,-8.701274,-5.273153,-1.983103,-4.820925,1.814714,-6.075186,-6.921352,-1.471277,4.746080,0.415763,9.829427,5.063296,-0.269698,1.234637,-6.902689,8.372995,7.971408,5.085721,-1.725137,-1.830603,9.406412,2.946414,6.462414,-6.445989,6.592914,8.716091,-4.736319,-0.522035,6.356514,6.253863,2.998604,-8.245087,-9.682655,-3.312804,0.257854,7.377354,7.335018,2.313518,-3.985917,5.686451,2.383944,-6.937353,-4.656549,-1.655176,1.580718,9.599605,-8.309076,0.352572,-2.441549,3.025286,-4.548370,-8.164908,8.359489,-3.010009,7.659546,8.892663,7.225989,-8.088255,-6.290001,5.542685,4.393400,9.654962,5.464031,-6.199749,-9.952240,1.218757,-1.751844,5.258609,5.155654,-8.669412], dtype = "float64")#candidate|5073|(2016,)|const|float64
call_5072 = func_274_call(relay.reshape(const_5073.astype('float64'), [9, 14, 16]))
call_5074 = func_274_call(relay.reshape(const_5073.astype('float64'), [9, 14, 16]))
func_4876_call = mod.get_global_var('func_4876')
func_4878_call = mutated_mod.get_global_var('func_4878')
call_5091 = func_4876_call()
call_5092 = func_4876_call()
func_4876_call = mod.get_global_var('func_4876')
func_4878_call = mutated_mod.get_global_var('func_4878')
call_5097 = func_4876_call()
call_5098 = func_4876_call()
func_3279_call = mod.get_global_var('func_3279')
func_3280_call = mutated_mod.get_global_var('func_3280')
call_5100 = relay.TupleGetItem(func_3279_call(), 0)
call_5101 = relay.TupleGetItem(func_3280_call(), 0)
var_5105 = relay.var("var_5105", dtype = "float32", shape = (3, 14, 4))#candidate|5105|(3, 14, 4)|var|float32
bop_5106 = relay.right_shift(call_5058.astype('int16'), relay.reshape(var_5105.astype('int16'), relay.shape_of(call_5058))) # shape=(3, 14, 4)
bop_5109 = relay.right_shift(call_5060.astype('int16'), relay.reshape(var_5105.astype('int16'), relay.shape_of(call_5060))) # shape=(3, 14, 4)
bop_5110 = relay.bitwise_and(call_5072.astype('uint8'), relay.reshape(const_5073.astype('uint8'), relay.shape_of(call_5072))) # shape=(9, 14, 16)
bop_5113 = relay.bitwise_and(call_5074.astype('uint8'), relay.reshape(const_5073.astype('uint8'), relay.shape_of(call_5074))) # shape=(9, 14, 16)
output = relay.Tuple([call_5035,bop_5041,const_5059,call_5091,call_5097,call_5100,bop_5106,bop_5110,])
output2 = relay.Tuple([call_5036,bop_5044,const_5059,call_5092,call_5098,call_5101,bop_5109,bop_5113,])
func_5116 = relay.Function([var_5105,], output)
mod['func_5116'] = func_5116
mod = relay.transform.InferType()(mod)
var_5117 = relay.var("var_5117", dtype = "float32", shape = (3, 14, 4))#candidate|5117|(3, 14, 4)|var|float32
output = func_5116(var_5117)
func_5118 = relay.Function([var_5117], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_5125 = relay.TupleGetItem(func_2912_call(), 0)
call_5126 = relay.TupleGetItem(func_2913_call(), 0)
output = relay.Tuple([call_5125,])
output2 = relay.Tuple([call_5126,])
func_5156 = relay.Function([], output)
mod['func_5156'] = func_5156
mod = relay.transform.InferType()(mod)
mutated_mod['func_5156'] = func_5156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5156_call = mutated_mod.get_global_var('func_5156')
call_5157 = func_5156_call()
output = call_5157
func_5158 = relay.Function([], output)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4672_call = mod.get_global_var('func_4672')
func_4673_call = mutated_mod.get_global_var('func_4673')
call_5224 = func_4672_call()
call_5225 = func_4672_call()
output = relay.Tuple([call_5224,])
output2 = relay.Tuple([call_5225,])
func_5233 = relay.Function([], output)
mod['func_5233'] = func_5233
mod = relay.transform.InferType()(mod)
output = func_5233()
func_5234 = relay.Function([], output)
mutated_mod['func_5234'] = func_5234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_5238 = relay.TupleGetItem(func_2948_call(), 3)
call_5239 = relay.TupleGetItem(func_2949_call(), 3)
output = relay.Tuple([call_5238,])
output2 = relay.Tuple([call_5239,])
func_5240 = relay.Function([], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5241 = func_5240_call()
output = call_5241
func_5242 = relay.Function([], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_5253 = func_2038_call()
call_5254 = func_2038_call()
func_2235_call = mod.get_global_var('func_2235')
func_2238_call = mutated_mod.get_global_var('func_2238')
const_5259 = relay.const([-1,1,3,-6,2,10,8,5,-2,6,5,4,-8,-7,2,-8,-8,3,-8,10,3,-6,-1,9,-5,1,-4,4,-9,-7,-1,-4,-3,-2,-9,10,4,1,8,9,2,5,-6,-7,4,-8,8,-3,10,-5,10,1,3,1,9,-9,1,-10,-5,-6,3,-3,5,-6,-3,-5,6,7,5,3,10,-8,5,10,5,10,-9,10,9,10,-5,-5,1,10,-1,-4,4,4,10,-1,9,4,6,-3,-8,-9,9,3,9,10,8,-3,-5,-4,-10,-3,-8,-8,-1,-9,3,3,1,4,3,10,-7,4,9,-1,2,-7,-3,3,5,4,-10,-9,-6,3,-8,-9,-7,9,10,4,-5,2,-7,1,-7,-7,3,1,3,-7,8,-6,-10,10,4,-1,6,-7,6,-2,-3,3,-9,3,8,-10,7,-9,10,6,5,5,9,-4,-1,2,-9,10,-7,9,5,2,-7,9,-2,5,10,-9,-3,-6,1,-8,2,10,1,5,-1,7,7,5,-1,-9,2,2,2,10,7,-6,6,-8,-5,2,-9,-4,-7,8,-1,10,4,7,-1,1,-4,5,-3,4,6,-4,9,3,-6,3,-7,-9,7,7,2,4,-5,6,1,-5,-10,-2,-6,-2,-6,-10,-1,6,-6,4,10,-5,-8,-2,3,-6,6,-9,-4,7,-9,3,-7,-8,1,-2,-1,-8,8,-7,-7,3,2,-10,-6,-4,-1,4,7,10,3,9,-8,2,6,8,-2,-1,-6,9,-5,6,-4,-5,-4,9,6,1,6,2,5,-7,3,-1,8,-1,-5,-10,-1,9,1,-3,5,-3,-1,5,6,-3,2,8,-4,-5,-9,-9,2,-6,-6,-10,-6,4,-9,-3,2,2,10,4,-2,-6,-5,-3,-2,10,1,1,-4,-7,5,-5,-6,3,-10,1,-7,5,1,-7,-9,1,6,9,10,-2,-6,3,6,1,4,-8,-10,-3,2,-3,6,3,7,-3,-6,1,-1,-7,10,-3,-1,-5,5,-9,7,-10,-8,-6,-2,4,-5,-3,1,5,7,8,-10,-8,-3,4,1,-5,-4,5,-2,-6,-6,-5,-9,10,8,-6,5,3,-1,7,8,10,-3,-8,6,1,-2,-8,-7,-9,-10,-1,-6,-10,1,8,9,3,-3,-6,6,-10,6,-9,10,-5,-2,-3,3,5,3,7,-1,4,3,4,9,-8,-2,5,-7,-2,1,7,-1,9,-6,-5,-9,3,-9,9,-1,-3,8,-6,-10,-3,-6,-6,5,-10,-4,-9,4,-2,1,10,-2,6,1,-4,10,2,10,-2,5,-7,9,-9,10,-5,-5,-4,6,-7,-1,9,-8,9,9,4,-5,3,5,-6,-5,7,-6,7,10,-10,-4,-6,10,-2,-7,4,-7,6,1,8,-3,-6,-5,-10,6,8,8,4,-9,8,-5,8,1,4,5,6,7,6,4,9,-7,3,10,3,6,-5,-6,-4,10,9,-10,-5,6,10,-7,-3,5,10,-5,-5,6,3,7,-1,5,-2,6,1,9,5,8,2,3,-1,7,-1,-7,9,2,-1,-1,-10,-2,-10,-2,-1,-2,-6,-5,5,-2,-6,-1,-5,6,-9,-10,-3,-2,5,7,-8,1,6,-10,9,-9,3,2,4,5,-3,4,9,-9,2,2,-7,-4,8,-5,-10,-4,8,-2,-1,6,1,-2,-8,7,-8,-9,-10,9,-9,-7,-3,-3,-4,-3,-1,1,-1,-2,-5,-6,-6,10,-10,-7,7,9,2,1,6,-1,3,8,-4,-2,7,-3,-2,2,6,-2,-3,5,2,1,9,4,-3,-7,-3,7,-6,-7,-7,-2,-8,6,-5,7,6,-7,10,-9,6,-2,-5,-10,-1,-1,6,9,-8,-7,5,-2,10,6,-5,-2,2,-9,-3,10,-6,10,2,7,-6,5,-6,4,8,-5,6,-3,1,5,-3,-8,6,2,-1,10,-1,3,-1,5,-7,-2,10,-1,-1,7,-1,-4,6,5,-5,5,9,5,-4,-9,5,-4,-9,7,1,-6,10,-9,8,-4,-8,-8,8,7,8,-3,-9,9,3,-2,2,9,7,-10,4,7,2,1,3,-2,-5,-3,5,6,7,-2,-5,-1,-1,-9,-5,-6,-4,-9,-4,7,9,8,1,9,2,-7,4,-9,-10,-9,5,-4,-10,-3,5,8,9,5,1,-7,7,10,-3,8,9,8,1,-10,-4,-9,-4,-10,-4,2,1,6,5,-1,7,2,5,8,2,8,5,-7,-6,-4,4,-4,5,-4,6,-9,-5,8,10,7,-8,-2,-4,-1,-5,-9,-1,5,4,8,-3,4,-7,9,10,3,-4,-8,1,-9,6,-7,-2,3,-10,-8,8,-4,-4,-4,10,10,-2,2,-10,2,-10,3,1,-8,8,7,-7,3,-3,-4,4,-7,-4,10,8,2,-2,10,2,6,3,6,-4,1,-5,8,-1,-6,4,3,-9,-1,-9,-6,-8,-2,6,3,6,7,1,1,-2,8,-2,-7,-3,3,9,6,-2,2,-6,-9,-9,2,-2,1,-1,-10,-8,-5,5,-7,-7,-4,1,8,1,8,6,9,4,-3,-8,7,10,-9,9,-9,-10,7,9,7,-5,-1,8,10,-1,-8,-4,7,8,-8,3,-5,-10,-4,-10,-8,-7,-7,-8,-8,9,-10,-10,8,-4,-5,4,1,4,5,-8,10,-4,2,-5,-3,-4,-9,1,-2,-4,1,9,-5,7,7,-5,-1,-4,-2,-3,3,-9,2,2,2,-1,5,5,4,-2,-7,8,5,-3,10,2,-1,-8,1,-7,5,8,-1,-1,-6,6,9,5,5,-1,-4,-10,5,10,-7,9,-8,-3,-9,-1,-7,-10,10,-2,-3,-2,9,-2,10,-10,-10,9,5,4,-6,1,-4,4,6,9,-1,6,2,4,-9,-9,5,-4,1,6,-5,-5,-10,2,-4,-5,1,3,-9,-7,1,-7,7,-7,-9,8,-2,2,-1,-7,-5,-10,-4,-4,-1,-1,-9,1,10,-4,2,5,-4,-5,-3,-2,3,-9,-4,-9,-3,9,1,-10,7,1,6,3,-7,7,-1,10,-10,2,-3,-8,3,10,7,-4,4,4,-3,1,7,2,8,1,-3,1,4,-2,-7,1,-2,8,2,5,-3,7,-8,-8,-9,6,4,7,9,6,-2,9,4,10,-3,1,-5,8,7,2,6,9,-5,7,6,9,-2,1,-10,-2,-10,-9,-3,-8,2,6,8,-10,-2,7,2,-7,6,10,1,-1,7,5,6,10,-3,-7,-4,2,-4,3,6,-8,-9,2,-2,-10,2,9,-9,5,-5,-1,-7,-4,-3,-7,-8,5,5,7,8,-6,-3,8,4,-3,6,-10,8,-4,-5,-4,-7,-2,4,-10,9,5,-3,-5,6,7,-2,5,-3,1,-3,2,-3,2,4,-2,-2,-4,-1,1,4,9,5,6,-6,-5,-3,9,-1,-3,-7,-7,-5,-1,9,2,-9,3,-7,-1,7,4,-5,6,-5,1,6,-8,-1,7,-2,7,-2,-7,-9,-3,-6,-4,9,-7,1,-6,-9,9,-5,2,-5,-1,7,-7,-6,-3,-9,-5,9,5,-1,-6,-7,-10,1,-2,-1,5,-2,-4,-5,3,6,-4,-2,-2,2,-5,4,1,-7,4,-7,6,1,2,-9,-2,4,9,-9,-1,10,7,-1,-3,-3,-8,6,-2,8,-5,-10,3,4,-10,-2,1,-6,9,-1,8,9,-4,4,4,-1,-10,-5,-3,-2,2,-3,-7,5,8,8,10,4,4,2,-1,-6,-2,-3,-2,9,10,-10,2,-4,-1,-6,10,5,-1,2,7,-2,-1,-5,1,-8,9,1,5,-2,8,7,10,-3,-8,3,-3,6,2,-8,7,-6,-7,-8,10,9,9,-7,-10,2,-5,3,9,-3,-3,4,8,8,4,-8,-5,-2,4,3,-2,-2,-9,-5,8,-9,-1,-3,-2,-4,7,1,-8,-6,4,6,4,3,7,-10,-7,4,-4,7,-7,10,-3,-4,6,3,9,6,-9,5,-8,-9,-7,-3,1,5,-10,-2,8,6,-7,-3,-8,10,-7,-3,3,10,-8,-1,2,7,-2,7,-6,-1,-1,9,-3,-9,5,7,-6,10,-9,-3,6,5,8,8,-4,-6,3,-6,-4,1,9,-1,-5,8,-1,-7,10,5,-3,-3,1,-3,5,-5,6,-2,1,1,2,2,-10,-10,-10,-10,9,-1,1,7,5,6,-5,8,10,4,1,-7,6,1,2,8,-5,2,-2,3,-10,-9,-7,-4,8,-1,5,-10,-5,6,4,-1,-10,-4,-3,-8,-8,-1,-5,4,-5,2,4,1,-3,-9,1,-6,4,-1,-9,-1,7,-3,-6,-8,3,1,2,-7,10,-3,-5,-10,-1,7,4,-8,-9,-5,-8,-6,-5,-8,-10,3,8,-9,-5,3,1,-5,-7,6,-3,-3,-6,-4,5,-7,7,-4,-5,10,-3,-5,5,1,-4,10,-10,10,1,6,-8,-2,4,-9,-1,1,4,-10,8,4,8,9,6,-3,-5,-4,3,-5,-2,-8,-3,-6,-4,5,8,4,-3,2,-4,10,-6,-2,2,6,2,-8,-2,10,-1,-10,6,2,8,-3,-1,-2,9,5,-1,-7,4,8,10,-4,6,-1,-1,-4,-9,3,-3,-8,-1,6,-6,5,-8,10,10,10,-9,8,4,-8,2,4,6,-10,6,1,8,-4,8,4,-7,5,5,-5,-9,1,-2,-9,-6,-7,4,6,3,-8,-3,10,9,5,1,3,3], dtype = "uint64")#candidate|5259|(1792,)|const|uint64
call_5258 = relay.TupleGetItem(func_2235_call(relay.reshape(const_5259.astype('uint64'), [14, 8, 16])), 1)
call_5260 = relay.TupleGetItem(func_2238_call(relay.reshape(const_5259.astype('uint64'), [14, 8, 16])), 1)
func_4258_call = mod.get_global_var('func_4258')
func_4261_call = mutated_mod.get_global_var('func_4261')
const_5264 = relay.const([0.817996,-0.647703,5.990269,3.955352,4.025821,-5.913717,-0.082596,-4.901928,-3.056904,-9.192882,-0.948459,-6.982000,8.856764,0.387448,-0.242376,9.196864,6.876050,-4.601110,4.940367,0.783585,0.647050,3.722940,8.139111,8.850469,9.659999,8.805206,8.549427,-2.256393,6.269171,1.865745,-7.182825,7.903450,-8.254866,-1.192164,-4.645119,2.177760,9.429944,4.281615,-3.183767,-6.885231,-8.388648,-3.801514,1.245586,-5.069480,-4.269114,-9.666098,9.242891,-4.709969,-5.677645,5.296467,-1.609858,-6.088087,4.230693,0.779727,-7.777932,-7.778885,3.244723,-3.335986,2.507855,5.039164,3.837829,-8.341767,-2.089899,-5.095778,0.274549,0.214014,-3.102587,-7.086105,6.494317,-7.104396,0.926929,-1.002625,1.895087,-8.788675,-4.167258,-3.818040,2.849556,-0.196735,0.341134,-1.866474,-8.747016,-8.402169,3.387752,4.196962,-0.965781,0.585388,-4.960366,-0.146838,-6.963063,-9.307371,9.200232,-3.985067,-8.526034,-8.077294,-0.835712,-0.747861,-2.603709,3.975325,2.912273,-0.126617,-4.153993,-7.334559,8.195291,-3.136608,3.090946,-6.269634,6.519205,9.849537,2.048650,4.551848,7.718188,1.206765,8.445279,1.062363,6.142852,-4.645139,8.748912,-6.726119,-5.147469,8.665695,8.682389,-2.865026,-9.600955,-2.866862,3.955217,8.633645,-3.153593,-2.243408,-2.189945,-1.346949,8.808123,1.441490,8.308224,2.655825,1.811692,1.650247,9.903865,8.147146,-7.668013,0.208972,-8.474720,-0.308481,7.456250,-4.734438,-3.213656,5.135582,8.846631,1.247920,-4.667315,-0.491029,3.418618,0.607360,8.045522,-5.595166,-0.552802,4.684513,9.310454,6.098912,-0.710185,-6.734097,7.823432,-4.138669,-6.735248,3.573389,5.779893,-1.042136,-2.008665,0.711086,1.141362,4.674925,0.755001,-4.326507,-5.684471,-9.256286,2.461270,9.391007,-2.292513,3.308032,8.498594,-1.260894,3.213406,0.456525,-8.926504,3.833695,7.485746,6.953766,-8.457582,8.486957,-8.913581,7.202887,-8.289322,-8.669746,3.534253,5.883455,-1.750517,4.113800,9.056629,3.587536,0.755544,2.997940,8.850202,1.930429,-1.826020,-0.938153,-2.183588,-6.775394,4.643937,-9.429070,-4.530907,9.244601,8.001335,-3.648797,-0.855304,-8.825882,8.447993,-1.735555,-3.019048,-2.877504,-0.086859,2.188163,-5.666788,0.676610,-1.622871,-3.423331,4.447697,-6.153533,-3.981131,7.557673,-7.800949,-3.705188,9.815451,5.307246,6.237781,-1.796917,-2.848025,-7.398912,0.273579,-4.678434,4.067568,0.038266,4.429022,9.930448,-3.386635,-2.337020,-8.923293,-4.773587,3.456194,-9.896428,9.083977,-6.139989,-6.078777,2.954605,-9.138884,-8.350937,-3.921471,-9.815973,9.517414,-0.679272,9.975613,-0.197974,7.623783,3.343760,-2.313911,8.659954,0.821722,-7.294566,5.047706,1.124124,7.386620,6.004840,0.732741,6.019874,-0.769979,5.452456,-2.458154,8.513063,-6.540592,-6.111600,-7.326313,4.501408,0.098008,-3.382427,1.396995,-8.775802,7.248685,-7.429175,-2.885860,0.284908,9.541269,-0.726651,-2.480055,-9.108567,-5.172261,-3.166926,-4.400841,-6.459743,7.340061,-6.548823,7.347711,3.695892,9.009935,2.153696,-1.877097,-1.414012,9.903963,6.045490,-7.093317,9.132317,3.270757,-2.975473,2.496275,3.368893,6.884694,5.016318,6.060794,2.533536,-5.174140,-9.252103,6.935964,4.659153,8.423967,-2.802789,-9.593436,-2.817413,0.472801,8.205904,-9.747555,0.305752,4.521513,-7.792443,-1.784545,6.635854,-7.588777,4.478247,-1.031300,9.852238,0.017455,5.316122,2.992100,7.929216,-7.346385,5.102130,-4.193373,-5.630420,6.381560,-1.631207,-3.098568,-6.228452,1.461833,-1.161232,-3.460160,2.210582,-9.323675,3.481417,-0.736534,-4.596251,-0.355831,3.889288,6.412657,-9.467475,-0.918799,-9.835551,-5.603448,-9.212332,-4.335203,6.504052,-1.991158,-6.998975,5.614578,-6.070463,0.430352,1.651814,-7.668678,-0.655209,-0.570922,-4.072406,9.881849,-5.940153,0.026926,6.226289,8.703846,3.963518,9.142955,-9.415097,1.720324,-7.091771,-9.976355,-3.054860,1.783440,-9.100350,5.285497,-2.003789,2.748281,-4.719648,9.066279,-3.421576,-4.906570,-9.351251,2.206435,8.827645,5.390283,9.159440,3.599125,-3.651974,-8.461063,-3.619815,1.546253,-9.249752,3.406009,-0.813445,-1.312828,-1.414859,-6.463327,-9.939678,8.719492,-6.987644,-1.330219,-5.737180,-8.988736,-3.731393,7.912248,-3.959668,1.361788,5.546909,-4.282252,-5.095840,-7.902970,7.483542,7.689207,8.181451,5.662447,-6.661651,6.844925,3.454436,9.798389,3.137682,5.555494,-3.306255,-8.401647,0.368605,0.534928,-4.978705,-5.913462,-2.803044,6.712660,7.211998,1.480081,-1.159375,-2.422461,-2.312772,3.654653,9.344344,-4.496087,-3.315720,9.724096,0.538883,9.505679,3.722687,4.981499,4.385965,3.813581,-2.582851,-3.921714,5.391573,-8.451541,3.592432,4.718419,-3.459843,-5.771836,4.156873,6.380925,-0.111728,-1.103576,-1.444031,0.960169,-0.548013,-3.231130,3.084167,-8.857149,-1.773979,3.287751,-3.813531,-5.267341,-7.301338,8.655795,-0.717935,-2.486294,9.865857,-9.269408,-3.712764,-8.880073,-8.560895,7.945820,3.731311,0.028760,7.266790,8.342657,3.751055,-4.367901,-2.234097,3.647040,-3.113691,8.382806,-1.357127,-9.675251,2.110718,-9.035160,7.150604,-5.469884,2.875487,-3.402884,-8.596810,-3.228040,2.461035,3.924373,4.140876,8.963418,-9.720228,9.761052,-2.705968,7.727668,-0.931004,-8.284393,-1.150794,7.783034,-7.076938,-1.034779,8.322652,-8.572027,1.152060,7.777076,3.698133,5.193435,7.999567,-5.900763,-0.265662,-5.309017,6.336406,-4.101072,2.230231,1.495569,-1.730729,-1.666760,2.391062,-7.232669,-6.584015,4.722911,-7.240434,5.330091,1.065585,-7.962317,2.452527,2.665961,8.194462,-0.666955,0.894295,-3.103126,1.410653,6.219460,8.455616,-9.793408,6.252609,1.859098,-0.791656,-8.198328,5.344641,9.706253,4.530914,3.742290,-4.739794,9.543861,-1.999067,1.484679,-8.506412,-4.610350,9.823222,9.932193,-8.780851,-1.015561,7.583692,-7.566875,7.455118,8.411135,-1.782877,9.316359,3.309712,-1.172760,-2.251052,2.983387,9.803670,0.845439,-1.001444,1.336822,8.555512,3.879963,-9.204043,4.613606,8.414374,-6.782292,-6.203454,1.953861,-1.181758,8.510382,3.807637,4.296727,-3.606160,1.513869,8.096046,3.651768,2.032209,5.513533,-7.708319,6.716948,-3.800991,-2.107076,-8.349570,-6.321313,7.620284,5.198862,-7.493430,5.657423,6.035531,-9.372455,-8.659167,-9.932664,-3.869545,7.458868,-3.106469,0.966368,4.827297,9.890603,5.234655,-2.324415,0.748681,9.031052,6.089176,-4.771678,-7.363503,9.480412,-6.806009,-6.361471,-3.305575,-4.395368,-0.520058,7.413973,5.820920,6.043309,-9.123481,5.293659,-9.691235,0.791288,-2.105590,-0.934165,-7.204216,5.617887,6.193660,-8.397094,3.401417,7.028094,-3.765352,6.437524,2.122317,-4.204542,5.197132,-0.641828,-2.777064,9.445240,7.291644,0.694025,5.979153,8.318481,-5.240184,-1.232116,-8.872538,-0.271551,-7.926020,-3.415039,-3.690724,2.416601,-1.590167,2.747785,-5.581451,2.439249,6.286348,0.999438,5.057426,8.617645,-1.476330,-7.875316,2.089108,3.414523,-1.338367,-8.570658,-3.153367,-5.546601,4.102055,-9.106550,-7.576171,7.082099,-0.013413,5.194708,5.999087,-1.154969,-0.418570,-1.726693,2.160900,-7.404058,3.101067,-5.209851,-5.965423,2.204231,9.764888,2.676255,3.629299,0.661953,-3.180689,-8.565136,9.302565,7.842802,3.879047,-6.094635,-1.090240,-7.773672,8.820868,1.801620,-8.340192,1.150009,-4.642887,0.917033,7.446002,-1.235902,1.575353,-2.127632,7.186742,0.790604,7.504262,8.976015,-5.568714,-8.181820,-4.075716,6.725625,-8.331683,-0.912248,-5.822460,-7.738400,-3.692705,6.246123,3.563790,1.085475,8.743016,0.899019,-0.570126,-9.513298,0.919206,-4.228932,9.291016,-8.755618,-5.741965,-2.487712,-5.805282,-8.405928,5.253195,1.917240,1.100806,3.890756,2.649662,-4.892207,5.953854,-8.778401,0.992746,8.843488,-5.819191,-5.644633,-3.870316,7.232321,7.913345,-8.530454,4.426594,-2.863851,-3.582393,-4.879636,-4.039502,3.862092,1.871123,-9.968338,-3.015565,9.027481,3.999758,5.368470,0.087498,9.734339,-3.927087,6.313082,3.856917,8.621069,-7.660032,1.683803,-4.284969,-2.182878,-0.320884,-2.895225,-6.004718,3.178437,9.067024,-7.102461,-4.464352,8.881120,6.822150,-2.005055,-1.904082,-3.607174,2.129861,-5.223840,-1.165246,-6.012291,2.202253,7.211717,-9.941508,-3.888336,4.098935,-2.057268,-7.997042,-1.635236,5.376004,-9.491772,-4.990195,-7.700218,-6.224144,0.336411,4.304769,2.790557,-5.139483,4.994054,5.577033,-8.325311,-2.671717,-4.934632,0.580553,-6.810960,-4.574989,-6.029096,7.507691,-9.289050,7.009237,-3.540931,1.996641,-5.166739,-8.303824,4.774215,8.356538,-4.823891,-5.011566,-8.522919,4.310117,-9.918418,7.896803,0.971594,2.366438,-1.793754,9.969449,-9.935438,-5.640335,5.323965,-2.038522,-7.211395,-3.996821,0.680454,-5.807167,-0.885066,-8.232545,9.360979,-3.953331,-6.865840,-8.518686,-3.712465,5.726475,5.234722,7.843554,-9.436506,5.265932,0.247335,2.531177,-0.705124,-9.455933,8.972689,-2.655555,-8.919098,1.254912,-8.117662,1.611092,-6.467633,2.534230,-8.725799,-7.124710,-2.387485,-4.778726,0.287628,-4.287197,7.865426,0.099341,4.890711,2.099777,-4.850898,-4.137569,-6.544368,6.203476,-4.913187,-8.743197,-4.170586,1.655360,-1.924767,-4.449873,0.080376,-8.566790,-7.440164,-8.134258,5.472612,9.109274,-9.277786,-3.990304,-0.743009,7.635267,4.178148,4.296382,-5.764952,-5.763910,-0.185917,6.228457,-8.739962,-5.683056,3.296153,-6.016612,-5.888326,-4.332375,-5.342363,-7.349626,-3.839839,4.123024,4.079751,9.104385,-8.422881,0.866273,9.634788,-1.881210,-4.320133,-1.301689,3.681640,-6.716581,-3.168899,9.697353,1.529519,0.903887,0.412778,2.840953,-7.049735,7.740998,5.638700,3.357112,3.340299,-8.390584,8.582044,9.674552,1.944942,-0.605579,-7.999333,-5.191386,9.461308,7.098606,2.048946,-1.977204,-6.664883,-6.205330,-8.524383,-5.233868,6.992385,7.190706,3.367229,-8.327676,-7.902323,-7.667215,-3.577594,-6.975559,4.340029,-6.763435,7.015499,-7.730654,-4.624831,6.552431,-0.290421,-7.316434,-7.745550,-5.855568,-1.001966,-0.673128,-8.485411,8.976303,-8.394104,-8.569523,-7.467591,-8.052241,7.779259,3.725234,8.008144,-3.854293,-4.697012,0.383617,-0.425226,-7.322085,-0.219421,9.166778,0.400849,8.226386,1.918025,2.192842,6.636421,1.234219,-6.050950,-2.481158,8.621052,-0.674461,-5.078713,-5.243238,1.333861,5.324301,5.130137,-8.634936,-9.561026,-9.550141,-1.732844,5.066971,6.375891,-8.366058,8.563631,4.437169,-4.436483,-3.623519,-4.743928,3.338911,4.858008,6.364667,-3.335813,3.288666,-1.006292,-7.307036,-0.824498,-1.166168,-4.803882,5.471908,7.312960,-6.760294,-0.228048,-0.653392,7.323108,0.611647,3.481263,3.570422,-2.679916,-8.496197,0.578413,6.037805,-2.915358,9.659790,8.008677,-5.344700,-8.576632,-7.244435,7.194749,4.705444,-3.004440,3.760541,8.875282,3.383357,7.822953,-0.545515,-5.974998,-9.629658,6.016222,1.660480,9.136894,-3.633879,-1.937558,-5.601105,6.497064,-9.206586,-1.127162,7.165359,5.512010,-5.042934,-2.705367,5.979043,-3.580725,9.615168,9.121128,-7.207388,-2.130523,-9.989012,6.745762,-2.552673,-2.420180,6.827187,-2.270393,8.576591,5.543713,2.735215,-6.854247,2.099090,-3.415857,9.967661,5.275240,-0.788286,-6.349348,3.837070,-6.559087,-0.398636,-8.490206,0.394519,2.198443,-9.723138,-0.576267,-2.618984,-0.786954,-9.463002,5.703486,0.156870,9.952770,-9.772751,-3.345374,-5.026598,-8.818452,-2.190162,-0.306997,4.168220,-2.833237,-8.656617,2.752453,7.169610,-4.257201,9.588382,2.458944,9.721974,-0.191285,-6.552127,5.892037,3.556875,-4.092331,-5.170269,-0.594151,-1.279921,-7.724981,1.516757,2.051603,8.020460,-5.340228,5.200283,8.065815,5.708739,9.534120,9.818595,-3.408984,-0.215841,-7.026172,1.555532,-9.658715,7.648001,-3.148224,5.670474,3.265133,-0.405830,3.859509,-9.899522,-2.696721,-8.891340,6.645830,-0.567374,5.235149,-3.138158,2.459202,-8.691692,2.775816,-5.546212,-2.488173,-2.699387,0.697693,-7.358818,-1.425130,0.246771,-1.521216,-7.025210,2.522519,3.601286,8.569166,-2.338650,6.944517,2.145880,-5.095969,-8.882545,1.007055,4.776709,8.509382,5.934065,-4.576139,-7.664126,-1.502806,-6.349660,0.753180,-3.853377,-0.649216,-4.729564,7.440842,-3.306311,0.590102,7.379773,9.893956,5.073333,-1.175461,9.537159,-3.931542,3.949254,-4.927630,-7.133022,4.365201,8.103019,-2.782906,5.694919,3.316412,0.797790,-2.624732,9.348192,0.746933,7.786392,3.197763,-0.577823,-6.968014,-5.399678,-3.183106,8.021943,-7.569741,1.714114,-3.262785,-6.176987,-5.023844,-4.194315,-7.429975,2.971897,2.589575,1.160554,2.499064,-6.396400,8.291378,-0.450389,1.560083,0.676304,-5.202330,-4.365129,0.669050,-8.615239,3.342534,8.123744,-1.048777,6.005196,9.201699,-9.014302,2.792486,-5.173747,-5.449510,-4.189964,-8.892926,4.866341,-2.308940,5.179601,-0.499437,1.754078,0.781673,-0.825644,2.072244,4.772166,-1.805651,0.409978,-4.894598,1.475662,5.033595,-7.521922,4.534526,-1.536372,-3.315372,-2.394832,-8.961656,-7.810947,-9.111717,7.169889,-1.928690,-1.630560,6.334059,-8.422197,8.595241,-3.183824,5.777138,3.212520,-0.042700,-4.327654,8.234279,1.968408,4.690747,6.464688,-2.924303,7.168747,3.862244,-4.818322,-0.882946,-4.078524,-3.727778,-9.780391,-1.303754,-0.309076,2.386607,4.563524,8.273922,-8.951590,-8.252760,-5.706617,2.207708,6.245449,1.388459,6.905808,9.124390,-9.817669,-6.500110,4.570333,-3.451832,5.781100,7.805486,-9.707094,7.161514,3.475991,4.183157,0.342678,4.997351,4.726477,-0.915819,-7.300425,9.914270,3.640701,3.321287,-0.650657,-1.765723,-2.444643,-2.176400,7.835079,4.580766,5.532460,-8.875523,0.134433,9.546670,9.507814,1.206653,2.895538,-6.257765,-5.010312,-2.669484,0.066578,-2.465497,-8.038403,-2.661760,5.573446,-2.375540,-1.739232,1.909474,-2.854165,0.886104,-2.630073,-3.854818,4.711390,-6.071898,-0.510469,-5.532263,2.848658,5.452799,4.483762,0.310369,-9.571305,6.276695,1.022447,-6.436546,4.872925,7.761447,1.163795,-6.702291,-4.465003,-5.722200,6.967801,-7.042533,-9.219963,-8.259539,2.390988,-5.583330,2.992929,0.014469,-9.225643,-7.043121,0.666417,2.541730,1.877198,5.940448,-7.900194,8.904985,-9.844603,-1.810148,0.333908,-8.164726,9.840676,-5.950241,-5.726616,6.079993,-1.669348,-7.272321,7.751948,-1.545110,6.494969,-1.763931,9.407309,0.177899,5.038368,-8.358621,-7.909257,5.635176,1.096626,-9.877390,1.169422,-3.508359,-2.118119,0.633537,-6.195155,-0.079621,8.552407,2.989348,-6.159822,-8.692409,0.798596,0.897142,4.063724,0.823816,-2.967893,-8.198746,6.852229,2.225824,-0.524522,9.725909,-2.131083,-4.981254,-3.044867,0.223020,0.749822,-0.163290,-2.965600,-0.411245,-7.144918,8.928481,-3.148113,2.986202,-0.805234,7.173463,4.872422,-7.320801,-5.947721,-9.153682,-2.638130,-3.704691,8.345782,-4.848953,-7.109687,-8.237648,-2.930874,9.019467,7.978441,-5.933174,-8.534071,-4.357231,-8.779449,6.255357,-3.940961,1.343690,7.210123,-3.155471,-8.273947,3.627594,2.326238,-1.834109,6.231712,-9.398784,-2.366557,-3.341241,-7.034659,-0.640951,2.237825,-3.071244,1.116681,2.373468,0.154337,-3.755224,-1.063722,-5.533654,1.094555,-0.656281,-4.443320,7.698123,8.658238,3.145246,7.461977,3.088243,-3.755595,-3.515383,6.375113,-0.444566,1.796496,5.367483,-8.993282,2.300115,-5.367542,-0.632883,7.932789,4.818209,-2.632887,-8.862894,-4.634894,-0.290485,1.831639,2.168464,-1.022573,0.798201,-9.586425,-6.096275,-6.637942,-2.189550,3.272617,-7.240870,-9.401228,5.065410,-4.359662,-2.572146,4.116719,4.173471,2.781874,-6.958817,4.276069,5.778817,-1.834347,-0.517186,-1.510321,8.941746,-7.157155,-4.385787,1.007956,2.109449,4.948447,-0.399581,-4.407957,-5.375266,-0.149785,-7.209972,-9.894381,7.997568,5.259241,-8.757808,-6.383088,2.299044,0.621074,-6.920926,6.166675,-4.721803,3.814806,-5.785341,9.036288,-1.462056,7.628761,2.820334,-0.057153,-5.801977,-8.646650,6.685096,-3.682841,9.430881,-3.950919,-6.064690,1.847865,4.953867,0.006396,7.603478,-3.316127,7.283982,-6.948502,4.383792,8.762043,-7.484610,-7.954578,7.653285,-8.034092,-7.963194,-4.438660,-9.711281,-0.721429,-6.471665,4.839353,-5.469377,6.788729,9.315221,-1.168321,0.372473,-0.503327,1.519991,0.745657,4.644336,-5.170177,1.740339,-5.827855,-1.657156,5.891613,9.500686,-2.725212,-1.798058,9.151232,8.211831,-2.525403,0.096597,-5.834704,-9.712388,8.624162,8.887894,6.084019,-6.422081,6.468850,-4.105293,-8.800632,5.999612,1.765024,-8.129463,-2.650279,-0.528371,-2.138208,2.253639,2.716374,7.126365,-8.564226,-5.874474,6.220713,2.662023,9.844098,1.041959,9.326551,5.877601,-2.991087,8.230973,2.112537,8.304693,-0.729821,2.619412,-5.074031,-5.402813,6.730362,6.239421,-6.345141,5.034033,-3.511322,6.358249,-9.037452,1.962278,-7.968831,9.075648,-7.926651,-3.169156,5.113766,-2.362503,-0.557954,-4.197243,5.484764,-2.636744,3.200030,-4.915093,-7.410481,3.702062,-2.668415,8.668795,-2.974202,-5.121741,0.751458,4.744267,-5.118085,6.486176,-2.797736,7.318388,5.272409,4.597793,3.875191,-4.646953,8.701831,-0.282660,-9.738878,3.379955,-8.609847,-2.708102,-8.715062,2.148583,9.936322,9.186625,-5.390765,-1.360727,-7.946600,-6.372768,0.394384,5.080312,1.704944,-0.851017,7.790016,-1.310178,5.169539,2.227161,-8.930500,6.111752,7.938476,1.917237,1.725329,6.949383,-7.332780,7.872318,4.117701,-0.154710,3.163035,-5.940987,-8.018123,-5.916331,6.618709,3.508012,-0.224878,-0.636147,0.015348,-9.294031,2.249184,-8.669508,4.922488,7.024142,-4.135110,9.659082,-7.268740,-8.150248,-6.480951,-3.788964,4.534798,5.767975,-9.276294,3.790109,-5.897121,-2.142361,-1.357406,0.019406,7.271707,-6.775185,-9.707098,1.243703,5.374180,-6.601338,-3.875793,-8.465951,-5.311806,-6.982920,7.191129,9.900622,0.693636,5.381437,-9.645231,5.178537,6.566831,-4.748976,-2.212972,-2.716857,9.048508,0.721987,0.746766,6.069999,-9.237344,6.722748,-8.724510,9.319329,-7.504257,1.439944,0.378115,-1.732055,-8.750997,-9.542393,-8.995734,-5.565634,5.940624,-4.035112,7.009253,1.767202,9.706326,5.958544,0.825824,2.632879,1.624912,-9.779458,5.493899,8.870361,0.051516,-6.865419,-1.683586,-1.168133,7.740944,5.234141,-2.245322,-2.848826,5.386039,7.236416,-5.766994,-3.769377,5.930267,-4.390976,-4.965869,-7.685826,1.323221,5.444863,-4.772147,-0.715978,-6.944295,-0.100590,-5.285957,-7.597108,6.424126,-5.973005,-1.742365,6.689189,6.663606,7.455556,-9.309737,-9.625478,-4.487038,6.013217,3.189985,-3.642496,4.883365,-3.472331,9.583053,1.225646,5.716791,-4.487391,2.073091,0.496538,3.744886,-7.589956,3.677934,-2.361556,-6.246576,-4.840330,4.379257,-4.525968,6.964256,-9.735856,2.944914,4.508018,4.594398,6.439604,-9.737674,2.884406,6.082698,9.739768,-1.714464,-6.841133,8.796000,-5.451425,-1.935136,-3.073998,-7.577212,-5.187242,-0.274391,-5.318977,-0.258114,-1.232961,-4.930870,-7.466219,0.908697,-1.798284,0.128827,2.903532,0.381339,6.124236,-3.458038,-4.098527,-4.733082,-4.323117,-4.688470,-6.493989,-0.798885,6.142587,1.082068,-7.624033,5.281571,-5.665760,-7.295946,-0.086587,-3.357885,1.505838,2.225631,8.190029,-6.397992,-8.981032,-7.450320,1.780101,-6.141246,7.470271,6.537293,-8.294467,0.312147,5.997863,-1.997685,4.468059,-1.238315,9.118620,-5.107421,9.192099,1.253049,-7.659750,8.124965,-0.495801,-9.796852,4.375101,-1.455263,7.406736,-9.743149,7.519519,-8.598603,6.282864,8.685931,-7.954731,8.950921,-9.245330,1.272549,-8.527597,4.574191,-1.830660,9.839906,4.127726,-7.000551,5.757522,1.798585,8.034411,2.310709,-2.311335,-7.067758,3.757630,8.037739,-4.802344,-2.120171,8.752238,5.040800,9.701785,4.078259,-4.761247,5.728920,-7.534451,-8.415854,-1.050640,9.421798,-0.270347,8.468151,2.057867,-3.174722,-9.808534,7.224152,-1.947829,6.867004,4.998778,-0.562252,-7.942977,0.839145,-9.846373,9.564548,1.948837,-4.373724,-2.240332,4.481343,-1.539266,2.487662,-0.634255,-0.921399,9.045487,8.752944,-7.197871,3.624415,9.588491,3.637963,-1.634601,5.077474,0.969400,-1.203007,6.893976,-9.377228,6.553919,-1.836906,-9.655847,-8.487251,2.132962,-5.949183,2.213640,-4.138876,-7.683320,-1.248738,-8.799103,-6.486275,0.621917,7.625994,5.097689,-4.362994,9.126164,-9.133962,3.730770,-2.251895,-7.552467,-2.821223,-1.023168,0.586053,9.292085,5.011351,2.488107,1.632647,-2.671612,2.149044,-6.313763,-2.667971,6.133431,8.415226,4.704147,1.323741,-4.004668,4.703184,-4.097304,7.077098,2.219471,-8.159167,7.681702,5.755793,-9.152609,2.050227,4.187141,9.325543,-9.720479,4.038040,-9.969668,-9.498034,8.317533,2.109347,-0.277318,4.627151,2.356812,-7.992589,8.255483,9.260060,-2.399239,6.358971,-3.320772,-1.706361,2.870094,5.323025,-9.688761,2.741783,1.427127,-3.861919,7.558765,6.366441,3.587523,4.342457,-1.068870,-8.948151,1.579448,-5.686764,-2.840529,3.970740,-8.413956,2.785304,-2.658519,-3.253864,7.353986,9.061117,-1.948872,-6.420210,-7.898779,4.309736,-2.695156,6.696535,4.744956,3.117526,0.095030,4.964350,0.218330,-5.286176,1.130533,-1.801155,5.737059,-8.857744,-1.425509,1.309467,-0.498398,7.806979,8.480733,5.159274,-9.971979,-0.920982,8.051448,-4.464834,6.036058,-4.526825,2.563630,8.883533,-3.345940,6.466105,-7.005769,4.641372,0.231525,9.665816,1.897996,1.190018,-9.727299,0.972369,0.129762,-9.933427,6.800290,-6.902553,3.021470,4.818130,8.656206,2.322994,-8.888984,-8.195857,0.241576,-3.768029,-7.197560,5.976526,2.348984,-4.027797,-2.810496,9.016204,5.738816,-6.657743,-8.387564,-3.322179,-1.555313,2.964601,-8.420606], dtype = "float64")#candidate|5264|(2145,)|const|float64
call_5263 = relay.TupleGetItem(func_4258_call(relay.reshape(const_5264.astype('float64'), [715, 3]), relay.reshape(const_5264.astype('float64'), [715, 3]), ), 3)
call_5265 = relay.TupleGetItem(func_4261_call(relay.reshape(const_5264.astype('float64'), [715, 3]), relay.reshape(const_5264.astype('float64'), [715, 3]), ), 3)
var_5304 = relay.var("var_5304", dtype = "float64", shape = (2145,))#candidate|5304|(2145,)|var|float64
bop_5305 = relay.greater_equal(const_5264.astype('bool'), relay.reshape(var_5304.astype('bool'), relay.shape_of(const_5264))) # shape=(2145,)
output = relay.Tuple([call_5253,call_5258,const_5259,call_5263,bop_5305,])
output2 = relay.Tuple([call_5254,call_5260,const_5259,call_5265,bop_5305,])
func_5312 = relay.Function([var_5304,], output)
mod['func_5312'] = func_5312
mod = relay.transform.InferType()(mod)
mutated_mod['func_5312'] = func_5312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5313 = relay.var("var_5313", dtype = "float64", shape = (2145,))#candidate|5313|(2145,)|var|float64
func_5312_call = mutated_mod.get_global_var('func_5312')
call_5314 = func_5312_call(var_5313)
output = call_5314
func_5315 = relay.Function([var_5313], output)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mod.get_global_var('func_2916')
func_2917_call = mutated_mod.get_global_var('func_2917')
call_5370 = relay.TupleGetItem(func_2916_call(), 0)
call_5371 = relay.TupleGetItem(func_2917_call(), 0)
output = relay.Tuple([call_5370,])
output2 = relay.Tuple([call_5371,])
func_5372 = relay.Function([], output)
mod['func_5372'] = func_5372
mod = relay.transform.InferType()(mod)
mutated_mod['func_5372'] = func_5372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5372_call = mutated_mod.get_global_var('func_5372')
call_5373 = func_5372_call()
output = call_5373
func_5374 = relay.Function([], output)
mutated_mod['func_5374'] = func_5374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5389 = relay.var("var_5389", dtype = "uint8", shape = (12, 10, 11))#candidate|5389|(12, 10, 11)|var|uint8
const_5390 = relay.const([[[3,-6,-8,-10,-7,6,-3,-8,-1,-8,5],[-5,-3,-9,-10,-10,10,4,2,10,2,5],[3,4,8,-6,-6,-1,1,-7,-8,4,5],[-3,1,8,3,1,-7,-1,7,-7,10,1],[7,-2,6,-10,-5,-8,8,2,-9,9,-5],[10,-10,6,-6,-1,6,-5,-1,-5,-10,3],[-9,3,-7,4,5,-8,5,-6,3,-4,-3],[3,-8,10,-1,7,-7,8,3,8,7,4],[9,5,-9,1,1,-8,4,6,1,3,-4],[-4,4,6,5,5,1,-6,-10,4,2,-10]],[[-10,-2,-10,8,8,2,3,3,-7,4,8],[-10,-8,10,4,6,6,4,-3,-1,-6,2],[8,-9,-2,5,-4,8,9,10,8,9,6],[-10,-8,9,-2,5,-6,9,1,10,8,5],[-6,1,3,-5,-3,-7,4,7,8,-9,10],[2,1,5,10,7,7,7,7,-8,-7,-3],[4,10,-4,6,-5,5,2,5,10,-7,9],[-6,8,-1,10,7,-6,5,3,5,-4,6],[-10,8,-5,8,3,-4,-7,-5,9,-2,6],[-6,-1,-9,-3,10,9,5,7,10,7,-8]],[[-9,3,4,4,5,10,-4,2,5,-1,2],[-8,9,-8,2,-3,10,10,3,3,-5,-3],[-10,-6,-9,-9,7,9,-5,-4,-4,5,-3],[7,8,-4,-10,4,4,-7,1,3,5,-3],[10,5,-4,-7,7,1,-3,-10,1,-5,8],[-7,9,-6,-1,-3,6,-4,-10,5,6,-3],[-2,2,-1,-8,10,-7,-3,-1,1,5,2],[6,-2,-9,9,-9,-7,6,-9,-8,-10,-8],[-7,9,-3,-5,-6,8,4,-8,1,5,10],[7,-6,10,9,10,7,4,-8,6,2,1]],[[3,-8,-9,-2,4,10,-4,5,8,-9,-7],[-4,6,8,-6,-3,-2,-3,5,2,7,-9],[-4,-4,2,-9,10,5,-5,-5,5,10,-10],[8,8,-7,6,8,10,4,9,10,-9,7],[-9,-5,-10,-10,7,8,-2,2,10,-9,4],[-4,-9,2,1,-3,10,5,-2,10,4,9],[-2,-3,-3,-5,-8,-9,3,-4,-9,-5,5],[-10,-4,10,-8,-6,-2,-3,3,-1,6,7],[-9,6,-8,-8,-2,1,9,-5,-10,9,4],[-6,-1,8,-7,9,-6,6,9,-8,-4,-6]],[[-2,-2,-6,4,-3,4,9,3,7,-4,10],[-6,3,7,-6,-10,6,1,-3,1,-7,-1],[-9,2,8,-8,5,-5,-9,-8,7,-3,2],[-6,-1,10,-4,-4,-5,8,2,2,-9,6],[1,-4,1,-3,3,7,-6,2,10,-4,4],[-8,7,4,9,7,5,10,1,1,3,-8],[5,-1,-7,9,7,6,9,2,-1,10,10],[-1,3,7,-10,-5,6,-1,10,-2,9,-1],[-9,10,1,3,-10,-2,-8,7,5,-4,-7],[-2,5,4,-2,-4,-7,9,4,9,8,-7]],[[2,4,-7,6,3,10,2,4,8,-4,-2],[-3,7,-2,-3,3,4,-1,-6,-2,-7,-7],[-6,-2,8,-1,9,1,-4,-10,2,2,-3],[-5,-4,-7,1,9,-6,-4,-6,-7,1,-10],[-10,3,6,-6,-10,7,9,-4,-10,10,3],[10,-10,-4,-6,-5,-7,-6,6,1,4,2],[1,-4,9,7,-9,-1,4,10,-2,-6,-5],[-1,6,-9,-1,4,6,-3,3,7,6,2],[7,-2,1,5,10,-9,9,7,-8,2,-2],[-9,6,8,7,-4,4,-1,-5,10,-4,4]],[[-6,1,-3,-10,-9,-1,-8,-7,-8,9,-8],[-6,-1,-8,5,8,2,-7,-2,1,7,-6],[-8,-10,-3,-10,-1,4,3,7,-2,3,-4],[-1,9,-10,2,1,-9,8,-2,-3,-5,7],[8,7,-8,-6,-3,1,-8,8,8,-2,4],[1,10,-1,10,4,9,-10,2,-1,6,8],[-4,-6,10,1,9,8,-5,-4,-6,-5,-10],[3,-4,10,6,-3,-4,5,8,6,6,-7],[-4,8,-1,-4,-9,-6,1,2,-2,10,-6],[10,2,1,1,-1,-3,4,1,7,-4,6]],[[7,-5,-4,6,1,-4,-3,3,5,10,10],[-1,1,4,9,3,7,-6,4,-3,-6,-9],[3,5,-3,-3,-9,7,-2,-7,10,-8,9],[-10,-4,9,-1,10,-2,2,-10,-2,1,10],[10,-6,-9,-1,-6,3,-5,3,3,-10,8],[2,-8,10,-4,3,-10,-8,3,1,-10,1],[-7,3,-8,6,-6,-6,5,-4,-8,4,-5],[-1,10,8,-4,-7,-3,-4,-5,7,-1,6],[10,-4,6,-8,-8,9,-9,-10,-6,-8,7],[-10,-2,-6,3,-10,3,-3,2,1,-10,-10]],[[7,-6,6,4,5,8,2,-2,-5,7,-6],[6,-4,8,7,-7,-7,-1,-6,-6,10,8],[-5,8,3,-5,-8,9,-8,-5,6,-1,-4],[5,7,9,-5,-1,7,2,7,-9,10,6],[-4,5,5,-2,-8,9,8,7,4,8,9],[1,9,10,9,-7,7,4,10,10,-5,-5],[4,-8,2,-2,-6,-7,-7,4,3,1,-5],[-3,-3,3,10,10,-2,6,6,4,-3,7],[-2,-7,4,6,-7,2,-1,-7,-3,-9,-9],[6,3,9,5,-9,9,-1,-6,-10,-7,2]],[[-7,1,7,-2,4,-2,-2,-6,-7,3,1],[-8,-2,-9,-3,6,-1,8,6,-6,2,7],[1,10,-8,-5,-8,3,1,8,4,-4,1],[-3,-3,-5,-9,8,8,7,2,3,4,9],[-10,1,-3,9,8,8,2,-6,-10,10,-4],[-3,10,-8,4,4,-6,-9,2,10,-1,1],[6,4,-2,3,3,4,-2,10,10,1,10],[5,-10,-10,-7,-4,-8,6,-3,8,5,-1],[-2,2,-4,-8,-6,6,1,-7,-7,-9,9],[5,-6,-10,-2,-9,-2,8,5,2,-10,7]],[[4,-10,-7,6,-6,-10,5,-5,-2,3,7],[-2,9,4,-4,-1,-7,1,-1,1,-9,2],[-10,-3,3,-6,7,-3,-6,6,-1,8,9],[3,-8,7,-3,3,10,-8,10,-5,4,3],[-6,9,5,5,-9,-4,-3,8,4,3,-7],[-8,7,-6,-3,2,-8,-9,10,-9,-4,-8],[7,-5,7,-4,-9,1,-10,-6,6,6,-8],[-8,-1,-7,-1,-4,-1,9,8,-2,10,2],[10,4,-5,1,5,10,-8,5,-4,-10,-9],[-2,-4,4,8,3,4,-6,-8,-2,8,-3]],[[1,-6,6,-7,-4,-3,-5,-4,3,-3,-7],[-7,5,9,1,10,9,-6,-3,-1,-4,-7],[3,2,-9,4,1,10,-9,1,-1,2,8],[-7,1,-10,-2,3,-6,-3,7,2,7,8],[-1,7,-2,1,9,1,-6,4,-7,7,-2],[-10,-6,-1,-4,-2,-5,-6,8,-7,7,-6],[10,-5,8,10,-10,3,5,-10,10,-4,1],[-4,-9,-7,-10,1,4,6,-6,6,-9,4],[10,2,8,-6,6,-9,2,1,-8,1,10],[5,-6,-4,9,-8,3,-10,-6,9,8,-6]]], dtype = "uint8")#candidate|5390|(12, 10, 11)|const|uint8
bop_5391 = relay.not_equal(var_5389.astype('bool'), relay.reshape(const_5390.astype('bool'), relay.shape_of(var_5389))) # shape=(12, 10, 11)
output = bop_5391
output2 = bop_5391
func_5405 = relay.Function([var_5389,], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
var_5406 = relay.var("var_5406", dtype = "uint8", shape = (12, 10, 11))#candidate|5406|(12, 10, 11)|var|uint8
output = func_5405(var_5406)
func_5407 = relay.Function([var_5406], output)
mutated_mod['func_5407'] = func_5407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3218_call = mod.get_global_var('func_3218')
func_3219_call = mutated_mod.get_global_var('func_3219')
call_5423 = relay.TupleGetItem(func_3218_call(), 0)
call_5424 = relay.TupleGetItem(func_3219_call(), 0)
output = call_5423
output2 = call_5424
func_5425 = relay.Function([], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
output = func_5425()
func_5426 = relay.Function([], output)
mutated_mod['func_5426'] = func_5426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4454_call = mod.get_global_var('func_4454')
func_4455_call = mutated_mod.get_global_var('func_4455')
call_5475 = relay.TupleGetItem(func_4454_call(), 3)
call_5476 = relay.TupleGetItem(func_4455_call(), 3)
output = relay.Tuple([call_5475,])
output2 = relay.Tuple([call_5476,])
func_5487 = relay.Function([], output)
mod['func_5487'] = func_5487
mod = relay.transform.InferType()(mod)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5487_call = mutated_mod.get_global_var('func_5487')
call_5488 = func_5487_call()
output = call_5488
func_5489 = relay.Function([], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1904_call = mutated_mod.get_global_var('func_1904')
call_5499 = relay.TupleGetItem(func_1902_call(), 0)
call_5500 = relay.TupleGetItem(func_1904_call(), 0)
func_2038_call = mod.get_global_var('func_2038')
func_2039_call = mutated_mod.get_global_var('func_2039')
call_5509 = func_2038_call()
call_5510 = func_2038_call()
output = relay.Tuple([call_5499,call_5509,])
output2 = relay.Tuple([call_5500,call_5510,])
func_5516 = relay.Function([], output)
mod['func_5516'] = func_5516
mod = relay.transform.InferType()(mod)
output = func_5516()
func_5517 = relay.Function([], output)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2948_call = mod.get_global_var('func_2948')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_5658 = relay.TupleGetItem(func_2948_call(), 1)
call_5659 = relay.TupleGetItem(func_2949_call(), 1)
var_5660 = relay.var("var_5660", dtype = "uint64", shape = (4, 448))#candidate|5660|(4, 448)|var|uint64
bop_5661 = relay.not_equal(call_5658.astype('bool'), relay.reshape(var_5660.astype('bool'), relay.shape_of(call_5658))) # shape=(4, 448)
bop_5664 = relay.not_equal(call_5659.astype('bool'), relay.reshape(var_5660.astype('bool'), relay.shape_of(call_5659))) # shape=(4, 448)
bop_5678 = relay.logical_or(bop_5661.astype('bool'), relay.reshape(var_5660.astype('bool'), relay.shape_of(bop_5661))) # shape=(4, 448)
bop_5681 = relay.logical_or(bop_5664.astype('bool'), relay.reshape(var_5660.astype('bool'), relay.shape_of(bop_5664))) # shape=(4, 448)
output = bop_5678
output2 = bop_5681
F = relay.Function([var_5660,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5660,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

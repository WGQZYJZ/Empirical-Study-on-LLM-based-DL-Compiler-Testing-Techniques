import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_84 = relay.var("var_84", dtype = "int16", shape = (11, 5, 13))#candidate|84|(11, 5, 13)|var|int16
const_85 = relay.const([[[2,-4,-4,-2,6,-3,-10,-4,4,-2,-3,5,-10],[9,-5,-7,6,2,2,5,5,-4,-7,-1,-4,-1],[7,4,5,9,6,-8,7,4,-6,-9,7,6,-4],[2,-2,-4,-1,8,-4,7,-3,2,-5,-1,-5,1],[-4,3,-8,5,-10,-8,-1,-8,-3,5,-9,6,-3]],[[-4,5,-10,4,6,-10,1,4,-10,8,-8,-2,7],[-1,-5,9,-3,-7,-7,6,-5,6,6,-7,-3,-6],[-6,-7,8,-5,2,-2,-2,10,10,-3,-4,-10,9],[9,-10,6,-1,-8,-10,-4,1,-9,-5,-2,-5,-9],[-6,-9,6,-10,3,4,-10,5,-9,2,4,-5,-8]],[[-5,4,4,-5,-6,1,9,3,-9,6,-2,-2,-5],[6,7,-6,9,-6,-1,-5,4,-6,-3,-6,3,4],[-7,10,3,3,-9,10,-1,2,1,-1,-5,-6,6],[-1,-4,-4,1,4,-9,-4,5,8,-2,8,-10,-8],[3,-5,6,6,1,2,4,-6,4,-3,3,5,-4]],[[9,-9,8,1,-9,-9,8,6,2,9,-3,7,9],[9,-5,6,-6,-1,7,10,-10,2,1,-9,8,-2],[-8,-6,8,3,-10,-7,4,-3,-9,-6,3,4,-5],[-8,10,5,8,-7,9,-10,-10,3,3,4,10,9],[-9,-1,8,9,-1,8,-6,-8,4,1,-2,-8,4]],[[-7,2,-10,-2,7,-10,10,1,-1,-2,9,4,1],[-8,-3,1,-7,-7,-5,-5,9,-9,5,4,6,-6],[3,8,-7,3,9,9,10,-10,-3,9,10,-8,9],[-4,9,1,9,-5,6,-4,3,-10,7,8,-4,-1],[-7,1,4,-3,5,-4,5,-9,-9,-7,-6,5,-6]],[[-5,-2,-7,9,6,-5,-4,-5,3,10,-3,6,-1],[-7,-8,-7,-5,1,-7,4,-2,2,-9,6,7,3],[5,1,2,10,1,2,8,10,4,1,-2,5,2],[-3,-9,10,-6,2,9,7,-1,7,-4,9,2,-7],[-4,6,-4,-6,5,-9,-9,10,-2,7,8,7,3]],[[-10,-5,-9,-9,-7,-6,-6,-3,4,5,-7,1,-10],[-7,8,2,-7,7,8,-3,-9,-1,1,-1,3,7],[10,-3,-6,9,2,-6,-8,7,10,-2,8,-5,5],[-4,-1,8,10,6,-6,1,-4,-9,1,10,-3,-10],[6,-1,-1,-9,5,-6,3,-10,6,-6,-10,7,-10]],[[-1,-9,-5,-6,4,-1,-2,4,-1,1,-5,5,-9],[8,-4,-3,3,-8,5,-7,1,-5,4,4,-6,7],[4,-7,-6,-9,3,-7,-3,5,9,8,9,5,-5],[-9,4,4,-7,-10,-6,-5,-2,7,7,5,5,-6],[-9,10,-9,-2,-4,-8,-9,-5,-7,4,-3,5,5]],[[4,3,4,10,-3,2,10,6,-8,6,10,6,-5],[6,-8,1,-9,-3,-6,7,-2,9,-5,-3,9,-8],[5,2,-2,-1,7,4,6,-9,2,4,-2,-7,-9],[10,10,-5,-2,6,-7,-6,-6,-10,-8,5,-4,-4],[-3,5,-1,-9,5,-7,-3,2,-7,4,-7,-8,-5]],[[4,3,10,-9,9,2,-3,2,-3,-1,6,-3,3],[-7,6,-3,3,-8,-1,10,1,8,8,-1,6,7],[-10,-2,-10,-2,-1,7,-1,9,-6,-4,10,8,-1],[-2,-1,-8,-1,3,-7,8,-2,-4,-1,-6,1,-3],[-1,2,10,-8,-4,1,5,7,-1,-2,1,5,-8]],[[-1,9,3,-5,-2,8,5,6,-5,1,3,-8,-2],[-2,3,8,-10,-7,6,7,-6,-8,4,6,3,3],[9,4,2,-10,5,-8,2,-9,9,6,10,6,-8],[-5,-2,-8,2,4,-5,9,-10,-6,-4,1,-8,9],[-3,-1,-9,-1,-7,-4,10,-2,-10,-6,10,3,6]]], dtype = "int16")#candidate|85|(11, 5, 13)|const|int16
bop_86 = relay.multiply(var_84.astype('int16'), relay.reshape(const_85.astype('int16'), relay.shape_of(var_84))) # shape=(11, 5, 13)
output = relay.Tuple([bop_86,])
output2 = relay.Tuple([bop_86,])
func_89 = relay.Function([var_84,], output)
mod['func_89'] = func_89
mod = relay.transform.InferType()(mod)
mutated_mod['func_89'] = func_89
mutated_mod = relay.transform.InferType()(mutated_mod)
var_90 = relay.var("var_90", dtype = "int16", shape = (11, 5, 13))#candidate|90|(11, 5, 13)|var|int16
func_89_call = mutated_mod.get_global_var('func_89')
call_91 = func_89_call(var_90)
output = call_91
func_92 = relay.Function([var_90], output)
mutated_mod['func_92'] = func_92
mutated_mod = relay.transform.InferType()(mutated_mod)
var_371 = relay.var("var_371", dtype = "float32", shape = (6, 4, 6))#candidate|371|(6, 4, 6)|var|float32
var_372 = relay.var("var_372", dtype = "float32", shape = (6, 4, 6))#candidate|372|(6, 4, 6)|var|float32
bop_373 = relay.greater_equal(var_371.astype('bool'), relay.reshape(var_372.astype('bool'), relay.shape_of(var_371))) # shape=(6, 4, 6)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_391 = relay.var("var_391", dtype = "int16", shape = (715,))#candidate|391|(715,)|var|int16
call_390 = relay.TupleGetItem(func_89_call(relay.reshape(var_391.astype('int16'), [11, 5, 13])), 0)
call_392 = relay.TupleGetItem(func_92_call(relay.reshape(var_391.astype('int16'), [11, 5, 13])), 0)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
call_395 = relay.TupleGetItem(func_89_call(relay.reshape(call_390.astype('int16'), [11, 5, 13])), 0)
call_396 = relay.TupleGetItem(func_92_call(relay.reshape(call_390.astype('int16'), [11, 5, 13])), 0)
var_408 = relay.var("var_408", dtype = "int16", shape = (715,))#candidate|408|(715,)|var|int16
bop_409 = relay.bitwise_and(var_391.astype('uint8'), relay.reshape(var_408.astype('uint8'), relay.shape_of(var_391))) # shape=(715,)
output = relay.Tuple([bop_373,call_390,call_395,bop_409,])
output2 = relay.Tuple([bop_373,call_392,call_396,bop_409,])
func_412 = relay.Function([var_371,var_372,var_391,var_408,], output)
mod['func_412'] = func_412
mod = relay.transform.InferType()(mod)
mutated_mod['func_412'] = func_412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_412_call = mutated_mod.get_global_var('func_412')
var_414 = relay.var("var_414", dtype = "float32", shape = (6, 4, 6))#candidate|414|(6, 4, 6)|var|float32
var_415 = relay.var("var_415", dtype = "float32", shape = (6, 4, 6))#candidate|415|(6, 4, 6)|var|float32
var_416 = relay.var("var_416", dtype = "int16", shape = (715,))#candidate|416|(715,)|var|int16
var_417 = relay.var("var_417", dtype = "int16", shape = (715,))#candidate|417|(715,)|var|int16
call_413 = func_412_call(var_414,var_415,var_416,var_417,)
output = call_413
func_418 = relay.Function([var_414,var_415,var_416,var_417,], output)
mutated_mod['func_418'] = func_418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_696 = relay.var("var_696", dtype = "float64", shape = (10, 15, 5))#candidate|696|(10, 15, 5)|var|float64
uop_697 = relay.acos(var_696.astype('float64')) # shape=(10, 15, 5)
output = uop_697
output2 = uop_697
func_709 = relay.Function([var_696,], output)
mod['func_709'] = func_709
mod = relay.transform.InferType()(mod)
mutated_mod['func_709'] = func_709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_710 = relay.var("var_710", dtype = "float64", shape = (10, 15, 5))#candidate|710|(10, 15, 5)|var|float64
func_709_call = mutated_mod.get_global_var('func_709')
call_711 = func_709_call(var_710)
output = call_711
func_712 = relay.Function([var_710], output)
mutated_mod['func_712'] = func_712
mutated_mod = relay.transform.InferType()(mutated_mod)
const_915 = relay.const([[[8,-7,9,9,-10,-8,6,-4],[-6,2,1,-8,-7,3,10,1],[7,9,7,-10,8,-7,-6,9],[-5,1,6,-4,8,8,-1,5],[4,-4,4,8,-3,-8,8,-10],[8,-9,-1,-9,2,-6,-6,-1],[-7,-1,-10,-2,-6,4,8,4],[-5,2,8,4,9,-5,1,3],[-2,8,5,-6,10,2,-6,-4]],[[3,-7,-5,5,9,7,7,-7],[-6,10,2,-2,-8,10,3,4],[-8,-9,10,-9,3,10,-7,8],[1,-5,-5,-7,1,8,-1,-4],[-3,-4,-6,-3,-8,-10,7,8],[-7,1,10,-7,-5,-9,-7,-5],[-5,-3,-9,-1,-7,-2,10,-2],[-3,-10,-3,5,2,-4,4,-7],[-6,9,7,2,4,8,-4,-2]],[[-7,9,1,-8,8,10,-9,3],[9,3,-6,10,1,-6,2,1],[2,7,-3,-6,7,7,7,5],[1,-2,5,9,-3,10,-4,-3],[10,-2,7,6,-6,-1,-2,-8],[4,-2,-3,-6,5,-2,-4,7],[-4,-9,-9,-6,7,-5,-6,3],[-5,1,-7,4,3,-3,10,-3],[1,7,6,-4,-3,-3,1,10]]], dtype = "uint16")#candidate|915|(3, 9, 8)|const|uint16
const_916 = relay.const([[[-2,-9,-9,-2,6,-7,-3,8],[-1,10,9,-9,-7,-1,9,8],[-2,2,9,-10,-5,-2,10,-2],[-5,8,-8,5,5,10,3,9],[-4,9,-6,8,7,-8,10,-9],[-4,-2,-3,8,2,6,-7,-1],[6,6,-10,-1,-6,6,-1,-2],[-4,-7,-1,7,-4,-9,5,-2],[1,-1,2,-9,-3,6,-4,8]],[[5,4,-2,-1,1,-7,-1,9],[9,-2,4,-1,10,10,8,-9],[5,2,4,4,-3,-4,-4,-6],[-5,-5,-2,7,-6,6,-6,8],[8,-1,-3,-10,7,-3,-8,-3],[-7,-5,7,-3,-10,-8,3,10],[-7,-6,7,9,1,-7,10,6],[-10,-10,-3,-1,-1,-1,-6,10],[3,4,-1,4,-6,2,2,-7]],[[7,9,-10,4,9,8,6,9],[-1,1,-7,-5,-5,10,5,10],[-3,-3,-1,-2,2,-8,-7,10],[-9,1,6,-8,5,10,3,3],[9,9,-4,-2,3,7,-4,-8],[-5,-10,7,4,6,-3,4,-5],[5,-4,-6,-7,4,-7,-8,3],[5,6,1,-5,4,6,-5,10],[6,1,10,-1,2,3,4,-5]]], dtype = "uint16")#candidate|916|(3, 9, 8)|const|uint16
bop_917 = relay.greater(const_915.astype('bool'), relay.reshape(const_916.astype('bool'), relay.shape_of(const_915))) # shape=(3, 9, 8)
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
const_925 = relay.const([8.132827,-7.817869,2.371781,5.793161,4.662614,0.157546,2.539582,8.173481,-3.901545,-5.898505,-0.899955,8.881594,1.007246,2.474493,-4.708246,0.165939,-8.322635,1.026807,4.747096,-6.260391,-6.585085,-1.756584,-0.740179,-0.799368,1.276697,3.859758,-9.807624,-4.448391,-1.747234,-6.669895,-4.437459,-7.436598,8.331121,-1.987265,2.034036,-0.775577,-9.101583,0.252334,-7.051544,-4.155794,-3.038693,2.924781,-7.020161,6.707557,9.082185,9.893558,5.114126,8.993463,4.818597,7.577732,-3.976802,6.937015,7.647111,-9.886900,-4.059787,8.408920,-3.381691,-4.428423,-8.503713,5.744235,6.438432,3.641626,3.648388,-2.896543,-9.484526,5.817781,4.676694,-6.855700,5.207539,-3.237882,2.138529,7.944914,5.199367,-6.395475,6.661294,6.356375,-3.165245,4.447823,3.177599,1.044300,2.419621,8.200651,4.058146,0.239322,-5.655336,-6.334312,0.872288,9.928116,0.122967,1.708141,8.856070,-6.261661,3.519329,2.194103,3.359131,1.933418,0.632133,0.858843,-2.938194,-2.075478,-1.793259,-6.697491,-9.311909,-1.758135,0.924367,-6.164500,8.981569,-6.002880,-7.813179,7.589626,-7.180434,-2.250434,1.390951,-6.956075,4.012818,-9.145458,-8.967646,8.718366,-6.428154,-8.170278,8.579325,4.565993,2.270465,-1.703946,9.747628,1.358608,-1.326794,-4.984620,2.128545,7.201558,7.297120,2.700552,-9.915584,-3.737906,-6.627327,-7.497831,2.311617,-6.991424,4.709482,-6.654489,1.835489,1.230814,8.874989,0.794287,-2.089947,2.376506,9.603239,4.564024,-1.503261,-0.794331,7.733137,-4.179510,-2.603007,8.384782,4.681933,3.637012,-4.352183,-8.429831,-7.145628,-4.111976,-0.047014,-6.245298,-1.518084,3.141577,4.284548,-9.163360,-2.218168,9.677670,6.935199,7.331728,-9.558338,9.530864,0.050999,-7.574401,-1.819682,-7.072493,5.485630,-5.882441,5.314635,-8.430203,4.661629,1.619399,9.259044,6.086298,1.530200,-3.550322,0.689744,-3.506651,2.955723,-4.292727,-1.755501,9.956854,1.877226,5.010040,7.031404,0.702195,-1.845742,8.932405,1.151610,7.154266,2.621390,-8.066106,7.872414,4.435546,4.467862,-2.924269,-0.481005,4.905463,8.088413,-3.480723,-1.359523,-1.820609,-1.127696,6.296076,-8.465927,5.013690,-9.878050,-9.307490,-0.016660,-0.460290,5.573980,5.803795,-1.650897,6.956722,-7.901746,1.264949,8.810867,9.181812,4.994858,0.607845,3.706074,1.124252,-3.280934,-1.154648,1.600614,-4.663953,5.756566,-6.082659,9.628254,-4.015274,-0.760928,-4.434884,5.703865,8.625103,-8.163978,-8.799003,7.367460,3.418188,9.400551,5.556012,0.401859,3.041093,4.324053,-5.092173,8.796743,-4.836415,-1.841705,8.585472,4.783735,-6.609395,1.445035,8.982936,-9.888252,-1.842439,-7.193822,-7.820860,0.533762,5.142134,-5.454383,9.528725,-8.435621,8.430051,4.606603,-6.849515,6.956870,-5.573972,1.003547,-4.779093,6.774886,9.335776,-3.707096,5.560683,1.394638,-6.169869,-4.578563,3.628766,-3.652823,-6.411201,8.284204,-6.737054,5.304931,7.363438,-0.228757,7.582389,-3.008409,-8.727856,-5.780767,-6.878978,-7.885431,6.237390,3.446403,3.939346,3.826476,5.788500,-0.763871,-3.246631,-1.983236,-4.905552,9.079704,-7.397275,-2.011228,-8.026409,-0.305356,-5.771570,8.949924,-0.541982,-4.114228,-5.423213,5.252263,-9.150508,0.694679,3.912998,-7.283629,2.040544,3.619409,8.191349,-7.992179,1.513719,-4.234016,6.050696,9.210792,-4.444981,9.012843,-0.456686,-3.453552,-4.264866,5.887590,-9.664784,0.424071,7.525882,8.238931,-2.493204,-5.829749,7.588983,0.844899,-5.202561,-4.760571,-8.608340,-6.269784,-6.887655,6.454599,-8.554940,-0.115888,-3.771624,-8.926386,6.283830,-0.283589,0.402364,1.895798,4.954002,7.120967,0.666298,3.561435,1.774011,-8.187683,-0.666323,-0.284776,-3.794567,0.814093,-2.680271,-3.315883,-7.303073,5.329502,0.422573,-1.153546,3.591520,2.869707,2.255685,-4.790902,-7.410565,-3.157347,-2.357345,2.311263,1.434859,7.831373,8.712181,7.462781,-5.150373,0.583696,3.589030,9.031424,-6.947396,-2.778201,6.093224,-3.237816,2.782577,-4.519947,-4.444890,6.499351,2.058977,1.523217,-9.138481,-5.649775,-4.615537,7.978607,9.320591,-7.677908,1.861450,5.639087,-1.951339,-3.505571,-2.013610,0.973686,-4.566198,-0.822671,-3.000952,-1.704018,3.336713,4.416895,7.186229,7.105390,9.841587,-5.958845,-3.726937,9.893424,3.601912,4.764577,0.204371,-9.600041,6.564352,9.097414,0.888742,-4.041452,-6.858320,-7.430995,-2.436883,-5.830385,7.544550,-8.123240,-7.909616,-5.546863,8.637231,2.930115,2.633743,1.556040,-6.703405,-5.018574,-7.732512,-9.658321,-8.024420,-4.133266,2.990330,0.557035,3.254931,-6.696473,7.971325,-8.430136,-5.204422,1.737752,1.394896,-3.006002,9.717048,5.420394,-7.155421,-9.367327,-7.957951,7.659809,3.403761,5.169497,9.519787,-6.492634,-9.697438,9.570615,-3.120311,-6.046086,9.295446,-5.563222,2.307671,2.007460,5.125476,9.266103,-9.290637,8.521534,4.986173,3.207143,2.836466,0.277751,-1.710443,-3.543011,-8.410186,-6.470387,-6.467611,-4.481985,4.203952,2.785084,-4.893936,-0.227801,6.971901,-1.232813,-2.141573,1.881678,-1.928978,-0.093378,-2.953504,6.555239,4.735889,-0.404941,-3.609319,-7.846339,-2.829333,2.969607,-9.278755,-9.255510,8.564047,-9.374544,-8.290786,4.438957,-6.904071,3.365962,8.904690,9.598596,-8.879660,-9.395900,5.810770,-8.508783,-0.728893,-2.625261,-6.613059,-3.857002,2.424439,8.972701,2.050662,-8.128263,-1.037304,-7.753353,7.621569,3.798981,1.645044,-3.961312,-5.095370,6.024452,-3.080195,5.550941,-6.835779,8.768043,-8.661542,4.209965,5.498714,9.482286,8.886000,5.996421,-3.385323,-7.846135,-0.758458,-0.355872,-5.796071,5.982217,7.924667,3.111838,9.627757,6.101744,5.170676,4.948431,8.986300,7.917626,-7.112859,9.115116,8.645897,-4.084433,-1.359932,-5.019506,-5.944138,-3.076614,-9.046182,5.981642,-2.714312,7.436441,2.365195,-8.045171,1.172559,6.001924,9.371201,-2.790310,8.117473,-6.800787,5.242610,-3.044197,7.743994,0.924285,-1.520104,2.264021,-6.383997,-5.395118,2.019129,-7.631006,-2.459133,-0.727995,-3.895305,-1.174395,5.199415,3.649486,8.533340,8.416023,-3.296068,-5.164803,7.028967,5.437867,-6.730166,-1.254822,8.002991,1.948696,-2.936151,5.857283,-6.793776,-5.671047,-1.987353,9.699254,5.321405,-7.794320,2.382078,-1.202463,-2.726624,-0.920581,-4.470845,-3.489949,9.047315,5.298304,5.359786,-8.018532,6.770111,-5.777908,1.788644,7.808063,-5.494698,-7.008537,9.086854,-5.284394,0.707093,-4.304278,9.874503,5.560027,-0.618959,4.254043,6.422151,-3.072389,-3.341227,-0.864307,-0.914853,1.481602,-5.648950,-5.762542,-4.878357,2.074900,-2.329844,5.440945,7.613549,-0.034117,-7.442306,3.184650,-5.574784,-2.508686,-9.160254,-1.980508,-8.982033,3.147833,3.477594,-6.754431,7.539190,6.441291,-6.722694,8.402242,3.559915,0.212097,9.428076,0.725923,-8.602561,6.734720,3.318851,1.866303,1.163029,-0.593791,6.940660,-8.894954,-7.863822,-6.347100,3.328629,-2.999616,4.396246,-4.229596,0.063985,-8.132743,4.533023,-0.391824,5.232068,-2.410698,1.974410,-9.198854,-1.103688,7.175685,-4.231820,7.353433,6.220909,6.671976,4.293484,-1.035719,0.922982,1.588767,-8.118048,2.493430,9.564566,-4.945928,-3.169397,4.498452,8.640083,-3.999592,-3.260439,4.245496,6.529591,8.987734,-6.327351,2.292827,-7.351285,-6.064252,0.746673,5.684994,-1.139689,2.124602,-5.097475,9.889870,1.728321,1.786991,3.466254,0.503937,6.389941,2.730787,-3.923336,-8.275436,1.252891,9.896224,-9.509029,-6.810057,-9.470351,-7.175238,-4.014660,4.809978,8.801399,-5.785195,7.446395,2.566345,-5.444107], dtype = "float64")#candidate|925|(750,)|const|float64
call_924 = func_709_call(relay.reshape(const_925.astype('float64'), [10, 15, 5]))
call_926 = func_709_call(relay.reshape(const_925.astype('float64'), [10, 15, 5]))
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
var_936 = relay.var("var_936", dtype = "int16", shape = (13, 55))#candidate|936|(13, 55)|var|int16
call_935 = relay.TupleGetItem(func_89_call(relay.reshape(var_936.astype('int16'), [11, 5, 13])), 0)
call_937 = relay.TupleGetItem(func_92_call(relay.reshape(var_936.astype('int16'), [11, 5, 13])), 0)
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
call_944 = func_709_call(relay.reshape(const_925.astype('float64'), [10, 15, 5]))
call_945 = func_709_call(relay.reshape(const_925.astype('float64'), [10, 15, 5]))
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
var_950 = relay.var("var_950", dtype = "float32", shape = (144,))#candidate|950|(144,)|var|float32
call_949 = relay.TupleGetItem(func_412_call(relay.reshape(var_950.astype('float32'), [6, 4, 6]), relay.reshape(var_950.astype('float32'), [6, 4, 6]), relay.reshape(var_936.astype('int16'), [715,]), relay.reshape(call_935.astype('int16'), [715,]), ), 0)
call_951 = relay.TupleGetItem(func_418_call(relay.reshape(var_950.astype('float32'), [6, 4, 6]), relay.reshape(var_950.astype('float32'), [6, 4, 6]), relay.reshape(var_936.astype('int16'), [715,]), relay.reshape(call_935.astype('int16'), [715,]), ), 0)
output = relay.Tuple([bop_917,call_924,const_925,call_935,var_936,call_944,call_949,var_950,])
output2 = relay.Tuple([bop_917,call_926,const_925,call_937,var_936,call_945,call_951,var_950,])
func_961 = relay.Function([var_936,var_950,], output)
mod['func_961'] = func_961
mod = relay.transform.InferType()(mod)
var_962 = relay.var("var_962", dtype = "int16", shape = (13, 55))#candidate|962|(13, 55)|var|int16
var_963 = relay.var("var_963", dtype = "float32", shape = (144,))#candidate|963|(144,)|var|float32
output = func_961(var_962,var_963,)
func_964 = relay.Function([var_962,var_963,], output)
mutated_mod['func_964'] = func_964
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1032 = relay.const([[[-5.689127,9.374624],[9.300774,0.178879],[8.839802,-5.850039]],[[-1.880954,-9.114175],[-6.367597,-8.198627],[9.457641,7.481292]],[[8.507066,2.934912],[3.739969,-0.837981],[-6.581956,5.026478]],[[8.511698,-7.959244],[3.850040,-4.208775],[9.094787,9.005517]],[[0.746921,9.554763],[-5.866835,8.544628],[4.871890,6.198710]],[[2.639067,-8.918314],[8.355759,9.457784],[8.652847,0.496591]],[[-5.678597,-8.982614],[0.793408,4.362851],[6.554703,1.696774]],[[-8.999155,1.307100],[5.706997,-1.673852],[-1.109883,2.120946]],[[-2.050537,4.316767],[-0.599697,-6.715374],[-9.667052,-4.240258]],[[2.219558,-8.574660],[-7.120880,-5.531725],[-2.342866,1.381947]],[[1.965836,-5.890078],[-0.571884,4.081590],[7.592463,-4.561985]]], dtype = "float64")#candidate|1032|(11, 3, 2)|const|float64
uop_1033 = relay.log2(const_1032.astype('float64')) # shape=(11, 3, 2)
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
const_1041 = relay.const([8.068446,9.400969,-2.189752,-8.629525,7.738303,-7.109685,-8.269635,-4.005517,6.401279,-5.617850,-6.551998,3.090001,-0.992710,-2.376719,3.546637,4.591967,-7.432536,-7.496668,3.163930,3.417720,-6.214267,-0.636231,-6.120818,6.252442,-7.018264,2.804191,5.108523,7.861994,1.065826,-3.386579,8.269856,2.438888,-4.298239,-8.665712,1.568852,-9.138904,-8.265157,-7.913563,9.498853,-2.737648,7.012732,-5.462631,-7.285103,-9.254168,-3.827141,-2.470663,-3.560651,3.822176,5.879137,-8.197209,8.265978,-5.252096,3.746436,0.709171,-9.587908,-6.969002,5.810813,-1.603900,-2.179719,9.893027,4.907299,1.477393,-1.823626,-1.560916,-0.648638,-3.107136,2.021931,9.695290,4.575059,1.709290,-8.260960,1.312809,4.960410,1.527226,-7.519413,-4.250512,-9.805992,6.246359,-6.597386,-4.302814,-6.948595,-3.725532,4.864728,-2.955500,-6.339397,-3.189767,-3.166481,8.881599,-5.281126,8.660080,5.515921,-7.020430,9.179084,-5.467201,-1.264167,8.185942,4.675469,-4.243172,8.492879,4.800110,2.048567,7.875047,9.517969,8.588804,3.333451,-1.611435,-4.730719,4.719295,-8.825943,6.864151,-1.207526,1.369523,-0.958640,7.417756,4.775677,-2.582472,-3.983892,-6.262452,-1.483632,4.099386,-1.933852,-1.031211,4.739903,6.284833,-9.921771,-9.248986,9.642315,-1.064625,5.204585,5.548218,6.505334,1.676158,4.601183,9.342089,3.989206,-2.924993,2.386828,-9.256484,-0.972780,-2.718373,-1.084038,5.779805,0.248817,-5.056304], dtype = "float32")#candidate|1041|(144,)|const|float32
const_1042 = relay.const([-9,6,3,7,-2,-3,-1,8,-6,6,2,-4,9,-2,-9,8,7,10,-3,8,-8,-6,5,2,2,-7,8,-3,-3,7,-3,2,10,-1,-8,8,2,-2,-9,8,2,6,-9,6,-3,5,-7,-7,8,-10,9,-10,-4,-5,7,-4,1,3,-10,-3,2,-8,-7,-6,3,9,5,-2,-2,-2,2,-1,8,4,-3,-9,-7,3,-2,-8,6,8,7,-10,6,-1,8,3,6,-3,6,-3,1,-6,-5,-9,-4,-2,-4,1,4,2,3,-9,-5,-7,6,-6,4,-1,8,1,4,2,-6,2,4,2,-1,6,3,9,-1,-8,6,-5,-7,6,-2,3,-1,5,-9,3,-8,-6,-2,2,-7,-10,10,-9,4,2,6,-1,10,-2,-5,-9,-6,5,9,5,2,10,3,-10,-7,-2,-10,9,2,-9,8,9,-10,-4,-6,4,4,-9,-5,3,-3,-4,9,3,5,-8,9,-7,-4,9,-9,7,8,10,6,7,8,4,-5,9,-8,-4,-4,7,3,-7,8,-6,9,2,-1,5,-10,-9,6,8,-4,-1,1,-8,4,7,-9,-8,10,4,-9,-1,5,-6,7,-7,6,3,7,-2,-7,3,-5,-4,1,6,-4,8,8,-2,-10,10,-8,5,-2,-6,-7,3,-10,-7,-5,-10,4,10,-6,9,-3,3,-9,9,-5,-10,-4,4,-2,-6,8,5,5,-3,10,-6,10,6,-8,-3,-10,5,8,9,-2,6,-10,-1,-8,6,8,-3,-3,-10,-6,4,-7,-1,10,-6,6,4,7,-10,2,5,10,-8,8,4,4,1,10,-8,-5,-5,-8,-8,-6,10,-4,10,4,7,-8,6,-2,3,1,2,-8,7,-10,3,-3,6,9,-3,3,-4,4,3,7,8,9,-3,9,-5,5,4,2,-7,-5,-3,-2,-1,7,2,2,-3,10,-10,-8,-7,-4,2,3,8,-2,8,5,10,-3,-5,2,8,4,10,-4,6,10,-5,-7,-2,-3,3,-10,-2,-5,8,7,-9,5,-4,6,8,-5,-8,-7,3,1,-7,-1,3,-8,-3,-8,-5,-2,3,-6,-4,7,7,-4,-3,-8,-5,-9,-5,9,1,2,10,6,4,6,5,1,7,-4,-2,9,1,6,-9,6,2,-8,2,6,6,-3,7,-4,-1,3,3,1,-3,2,1,2,5,-6,1,-4,-7,-7,3,9,2,-9,5,8,8,10,7,-5,-1,1,4,-9,4,-5,9,-3,3,5,6,6,5,-5,7,7,10,7,5,5,4,-6,-2,-4,-3,-5,-4,2,6,-2,-7,10,-6,3,5,-9,-8,1,-4,-6,-4,5,-1,-7,-4,1,-7,1,8,-3,4,1,8,3,-7,-8,-10,-10,10,10,-6,7,2,5,4,2,-1,-9,6,-1,-8,3,4,1,-1,-9,-3,-8,-4,4,2,-3,10,-2,-3,9,-5,-1,8,-4,4,5,10,10,-6,-2,-2,-1,-9,9,7,-3,-2,1,6,-8,9,-8,7,-2,2,-1,-9,7,5,-9,-5,5,7,-7,3,5,-9,2,-1,-8,8,-9,2,-6,3,-1,10,-6,-4,-1,-10,-1,-9,6,-5,3,6,2,-8,-4,6,7,-1,-2,-8,4,-9,-9,-7,-6,-3,-8,1,-6,-8,7,-8,-7,-9,-6,2,-7,4,-7,2,3,-2,-4,-1,-1,-3,-5,5,1,-1,-3,8,3,-7,-5,4,6,-1,1,1,2,-2,-6,-1,3,6,4,-5,8,-7,-2,-2,-9,7,6,-3,3,-7,2,-7,-9,-8,-7,-2,-6,-7,-2,-5,2,4,-3,6,10,-6,-9,-5,6,-1,-10,-9,4,3,4,8,3,4,6,-1,-3,-1,9,-3,1,7,9,-8,-1,8,10], dtype = "int16")#candidate|1042|(715,)|const|int16
call_1040 = relay.TupleGetItem(func_412_call(relay.reshape(const_1041.astype('float32'), [6, 4, 6]), relay.reshape(const_1041.astype('float32'), [6, 4, 6]), relay.reshape(const_1042.astype('int16'), [715,]), relay.reshape(const_1042.astype('int16'), [715,]), ), 3)
call_1043 = relay.TupleGetItem(func_418_call(relay.reshape(const_1041.astype('float32'), [6, 4, 6]), relay.reshape(const_1041.astype('float32'), [6, 4, 6]), relay.reshape(const_1042.astype('int16'), [715,]), relay.reshape(const_1042.astype('int16'), [715,]), ), 3)
uop_1047 = relay.rsqrt(const_1032.astype('float64')) # shape=(11, 3, 2)
output = relay.Tuple([uop_1033,call_1040,const_1041,const_1042,uop_1047,])
output2 = relay.Tuple([uop_1033,call_1043,const_1041,const_1042,uop_1047,])
func_1051 = relay.Function([], output)
mod['func_1051'] = func_1051
mod = relay.transform.InferType()(mod)
output = func_1051()
func_1052 = relay.Function([], output)
mutated_mod['func_1052'] = func_1052
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1071 = relay.const(4, dtype = "int32")#candidate|1071|()|const|int32
var_1072 = relay.var("var_1072", dtype = "int32", shape = (7, 14, 3))#candidate|1072|(7, 14, 3)|var|int32
bop_1073 = relay.less_equal(const_1071.astype('bool'), var_1072.astype('bool')) # shape=(7, 14, 3)
output = relay.Tuple([bop_1073,])
output2 = relay.Tuple([bop_1073,])
func_1082 = relay.Function([var_1072,], output)
mod['func_1082'] = func_1082
mod = relay.transform.InferType()(mod)
var_1083 = relay.var("var_1083", dtype = "int32", shape = (7, 14, 3))#candidate|1083|(7, 14, 3)|var|int32
output = func_1082(var_1083)
func_1084 = relay.Function([var_1083], output)
mutated_mod['func_1084'] = func_1084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_1132 = relay.TupleGetItem(func_1051_call(), 3)
call_1133 = relay.TupleGetItem(func_1052_call(), 3)
var_1136 = relay.var("var_1136", dtype = "int16", shape = (715,))#candidate|1136|(715,)|var|int16
bop_1137 = relay.left_shift(call_1132.astype('int16'), relay.reshape(var_1136.astype('int16'), relay.shape_of(call_1132))) # shape=(715,)
bop_1140 = relay.left_shift(call_1133.astype('int16'), relay.reshape(var_1136.astype('int16'), relay.shape_of(call_1133))) # shape=(715,)
output = bop_1137
output2 = bop_1140
func_1143 = relay.Function([var_1136,], output)
mod['func_1143'] = func_1143
mod = relay.transform.InferType()(mod)
mutated_mod['func_1143'] = func_1143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1144 = relay.var("var_1144", dtype = "int16", shape = (715,))#candidate|1144|(715,)|var|int16
func_1143_call = mutated_mod.get_global_var('func_1143')
call_1145 = func_1143_call(var_1144)
output = call_1145
func_1146 = relay.Function([var_1144], output)
mutated_mod['func_1146'] = func_1146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_1161 = relay.TupleGetItem(func_1051_call(), 4)
call_1162 = relay.TupleGetItem(func_1052_call(), 4)
output = call_1161
output2 = call_1162
func_1172 = relay.Function([], output)
mod['func_1172'] = func_1172
mod = relay.transform.InferType()(mod)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mutated_mod.get_global_var('func_1172')
call_1173 = func_1172_call()
output = call_1173
func_1174 = relay.Function([], output)
mutated_mod['func_1174'] = func_1174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_1200 = relay.TupleGetItem(func_1051_call(), 3)
call_1201 = relay.TupleGetItem(func_1052_call(), 3)
output = call_1200
output2 = call_1201
func_1216 = relay.Function([], output)
mod['func_1216'] = func_1216
mod = relay.transform.InferType()(mod)
output = func_1216()
func_1217 = relay.Function([], output)
mutated_mod['func_1217'] = func_1217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_1314 = func_1216_call()
call_1315 = func_1216_call()
uop_1323 = relay.atan(call_1314.astype('float64')) # shape=(715,)
uop_1325 = relay.atan(call_1315.astype('float64')) # shape=(715,)
output = uop_1323
output2 = uop_1325
func_1337 = relay.Function([], output)
mod['func_1337'] = func_1337
mod = relay.transform.InferType()(mod)
output = func_1337()
func_1338 = relay.Function([], output)
mutated_mod['func_1338'] = func_1338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_1399 = func_1172_call()
call_1400 = func_1172_call()
func_412_call = mod.get_global_var('func_412')
func_418_call = mutated_mod.get_global_var('func_418')
const_1404 = relay.const([[-1.487949,5.481140,-0.526119,-4.208858,8.930974,5.243845,7.326107,9.317852,0.054317,7.881770,4.882016,2.093673,0.882578,-2.381452,-6.348619,3.537053,-5.936523,-8.444999],[8.737263,-9.516421,-6.007750,-1.927818,-5.939681,-2.985439,1.171609,7.408767,6.691697,-6.619322,6.207821,2.294584,-5.692243,-5.246360,6.538670,-1.737846,4.733042,7.494970],[-4.986179,8.655139,4.601715,-0.567917,-3.072234,6.600710,-7.615513,-7.781863,-2.279468,-3.458858,-6.754067,0.493296,0.207999,-2.251371,-5.130055,-1.818233,2.978718,-7.937080],[9.646108,2.775878,-6.687927,-1.028231,9.047124,-7.181356,-7.028909,-2.746290,-7.050958,-7.779859,3.274951,-9.741358,-5.964760,9.579757,0.885440,-8.441382,-5.778748,-3.716768],[-0.010153,-6.869311,9.304471,5.377694,8.470656,-1.686894,7.910409,5.543749,1.049918,3.095218,-1.029171,-8.461356,-1.115073,0.650261,-3.202849,1.928981,-8.774410,-6.019999],[-7.595114,3.840380,-9.645746,4.968936,-3.372749,-6.157450,2.049281,1.948160,-8.533931,6.626550,-7.976642,-6.486519,-7.805857,8.683852,8.472687,-5.194529,9.680499,7.159321],[4.052783,9.115537,5.346359,4.623197,9.484026,-1.088481,-2.921744,-0.456364,-6.021141,-3.861438,-8.040586,8.150000,2.361707,-1.114890,6.619797,-1.347877,-2.670916,-4.488915],[-5.956068,-6.438953,-0.208173,2.339188,-9.118853,9.022885,-2.858539,6.550080,9.829069,-3.365901,-4.010541,3.995779,-6.654093,-5.614742,-3.869890,-9.457860,1.683590,-9.386227]], dtype = "float32")#candidate|1404|(8, 18)|const|float32
var_1405 = relay.var("var_1405", dtype = "int16", shape = (715,))#candidate|1405|(715,)|var|int16
call_1403 = relay.TupleGetItem(func_412_call(relay.reshape(const_1404.astype('float32'), [6, 4, 6]), relay.reshape(const_1404.astype('float32'), [6, 4, 6]), relay.reshape(var_1405.astype('int16'), [715,]), relay.reshape(var_1405.astype('int16'), [715,]), ), 3)
call_1406 = relay.TupleGetItem(func_418_call(relay.reshape(const_1404.astype('float32'), [6, 4, 6]), relay.reshape(const_1404.astype('float32'), [6, 4, 6]), relay.reshape(var_1405.astype('int16'), [715,]), relay.reshape(var_1405.astype('int16'), [715,]), ), 3)
output = relay.Tuple([call_1399,call_1403,const_1404,var_1405,])
output2 = relay.Tuple([call_1400,call_1406,const_1404,var_1405,])
func_1409 = relay.Function([var_1405,], output)
mod['func_1409'] = func_1409
mod = relay.transform.InferType()(mod)
var_1410 = relay.var("var_1410", dtype = "int16", shape = (715,))#candidate|1410|(715,)|var|int16
output = func_1409(var_1410)
func_1411 = relay.Function([var_1410], output)
mutated_mod['func_1411'] = func_1411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_1457 = func_1216_call()
call_1458 = func_1216_call()
output = call_1457
output2 = call_1458
func_1462 = relay.Function([], output)
mod['func_1462'] = func_1462
mod = relay.transform.InferType()(mod)
mutated_mod['func_1462'] = func_1462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1462_call = mutated_mod.get_global_var('func_1462')
call_1463 = func_1462_call()
output = call_1463
func_1464 = relay.Function([], output)
mutated_mod['func_1464'] = func_1464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_1482 = func_1216_call()
call_1483 = func_1216_call()
var_1490 = relay.var("var_1490", dtype = "int16", shape = (715,))#candidate|1490|(715,)|var|int16
bop_1491 = relay.maximum(call_1482.astype('int64'), relay.reshape(var_1490.astype('int64'), relay.shape_of(call_1482))) # shape=(715,)
bop_1494 = relay.maximum(call_1483.astype('int64'), relay.reshape(var_1490.astype('int64'), relay.shape_of(call_1483))) # shape=(715,)
output = relay.Tuple([bop_1491,])
output2 = relay.Tuple([bop_1494,])
func_1495 = relay.Function([var_1490,], output)
mod['func_1495'] = func_1495
mod = relay.transform.InferType()(mod)
mutated_mod['func_1495'] = func_1495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1496 = relay.var("var_1496", dtype = "int16", shape = (715,))#candidate|1496|(715,)|var|int16
func_1495_call = mutated_mod.get_global_var('func_1495')
call_1497 = func_1495_call(var_1496)
output = call_1497
func_1498 = relay.Function([var_1496], output)
mutated_mod['func_1498'] = func_1498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_1523 = relay.TupleGetItem(func_1051_call(), 0)
call_1524 = relay.TupleGetItem(func_1052_call(), 0)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_1529 = func_1337_call()
call_1530 = func_1337_call()
output = relay.Tuple([call_1523,call_1529,])
output2 = relay.Tuple([call_1524,call_1530,])
func_1546 = relay.Function([], output)
mod['func_1546'] = func_1546
mod = relay.transform.InferType()(mod)
mutated_mod['func_1546'] = func_1546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mutated_mod.get_global_var('func_1546')
call_1547 = func_1546_call()
output = call_1547
func_1548 = relay.Function([], output)
mutated_mod['func_1548'] = func_1548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1549 = relay.TupleGetItem(func_1546_call(), 0)
call_1550 = relay.TupleGetItem(func_1548_call(), 0)
output = relay.Tuple([call_1549,])
output2 = relay.Tuple([call_1550,])
func_1560 = relay.Function([], output)
mod['func_1560'] = func_1560
mod = relay.transform.InferType()(mod)
mutated_mod['func_1560'] = func_1560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mutated_mod.get_global_var('func_1560')
call_1561 = func_1560_call()
output = call_1561
func_1562 = relay.Function([], output)
mutated_mod['func_1562'] = func_1562
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1565 = relay.const([[[-8.336199,-9.336621,-2.543275,-8.692114,-8.531546,1.938283,-8.101445,7.476948,5.956059,7.047964,0.549304],[-2.270665,8.000441,6.735811,-0.107438,-8.508274,4.593795,4.289661,-7.690754,0.055237,-8.930332,9.748148],[-9.549628,-4.341979,7.310640,8.740057,3.568960,-2.837477,-8.142086,-8.091662,-6.585979,9.517661,3.790386],[-9.335493,-4.428219,-1.728233,-6.309792,9.633904,7.483421,-1.253199,7.529063,2.370401,-6.229436,5.474241],[3.777102,4.918954,-8.020116,3.973789,0.184442,7.572526,8.918175,-0.115065,-7.016361,-9.019736,3.380922],[-1.881444,8.166284,-1.260916,-5.671874,-2.888261,8.427897,5.184008,-5.894530,4.862733,-8.164912,6.264735],[-9.624038,-8.622467,4.510592,-8.718967,2.408193,9.094591,-5.767483,-8.684212,7.593836,9.043140,-6.400984],[3.755267,1.962518,-1.376621,6.029897,-3.972813,-1.413415,-1.364926,1.511582,-0.966079,-4.981126,9.527217],[4.627017,6.992705,-8.430199,4.683950,4.239088,0.711032,4.230166,4.970229,3.429061,4.287641,-2.831223],[7.063879,-5.787718,-4.167988,2.433758,-4.137925,-7.412149,-1.861332,-7.215519,3.096610,-2.536995,-6.665274],[8.829094,-0.703131,1.553428,-3.962140,-3.991048,-5.517919,1.990874,5.660050,-5.222005,-1.584430,8.065002],[-1.083977,-2.898658,4.068219,-7.147312,0.526039,9.433943,0.949954,6.864037,-0.472453,4.920067,-3.709882],[-1.580799,-4.866039,0.886981,5.706402,4.253315,-1.215934,2.893764,-9.076408,-4.846142,9.095320,3.298249]],[[-9.390323,-1.077266,-3.679905,5.322276,1.497896,-7.658647,6.288330,-5.228330,-3.421552,-4.244432,5.067395],[9.286596,5.792041,0.168000,6.913908,6.966401,8.039342,5.427700,-9.650378,1.385665,-9.982809,6.165289],[0.504568,-7.106996,7.050725,8.960910,-2.999519,-0.303525,-1.337115,4.340790,-4.014826,4.658264,-6.665073],[-4.861719,-0.059451,-9.488315,9.427409,-3.322126,0.752069,9.497555,6.054652,-4.990185,5.312451,7.417910],[-9.102139,7.242435,-1.585715,4.558220,6.408892,6.092767,3.727387,-9.769946,6.263939,8.020709,4.329796],[7.908791,0.260821,9.390940,-0.421005,-6.977091,8.891095,7.183422,4.403426,-0.590779,-1.012197,-6.832155],[-0.529380,3.656401,7.983382,-9.576204,6.604888,8.524337,2.153488,2.761075,4.397965,5.276789,0.927624],[-6.308201,1.423957,-9.524411,-3.372590,2.715979,0.375417,-3.458645,2.529033,-7.472335,-7.523529,-8.678938],[-2.064630,6.204698,0.710606,-2.143149,-3.530573,3.481063,0.333811,5.777383,-1.265246,-3.768704,7.361399],[-2.945250,-2.135065,8.589210,-4.933280,-3.926391,9.101678,1.687840,-1.832475,-0.827341,-3.988624,-3.454654],[2.826707,-1.593418,-5.020557,2.005292,9.368055,5.233081,-7.190312,1.057416,-4.527762,7.919028,0.065495],[-9.072867,-0.388788,-8.941921,9.297877,3.402304,8.613158,-3.759873,-5.526584,4.723275,-1.423461,7.565494],[-3.636538,4.587743,8.485768,-7.768698,1.972025,-4.049170,0.743589,8.379628,-7.266095,7.410328,-3.241744]],[[5.346619,-8.808652,-4.901378,1.582974,0.286413,-3.278193,-1.944110,-0.351332,2.985051,-8.972918,9.907805],[-2.404199,-8.242884,6.586277,-9.125268,4.696927,0.564516,0.548900,-1.038993,1.327207,-5.778717,4.052176],[3.163501,2.205295,8.624795,9.344920,-5.330478,0.247422,-6.317872,-0.827082,-9.230494,-0.194934,6.917331],[-0.340570,2.350993,-3.857387,9.841210,-2.601535,9.163793,8.977529,4.243394,5.657407,5.382265,-9.510986],[-2.720866,-9.000984,5.873451,-7.928730,-2.334074,-3.491631,-0.302688,4.464871,-9.205630,3.040239,-4.654624],[0.427331,6.628068,1.342239,2.723105,-5.011219,-7.993350,9.700098,2.659856,4.218164,-1.588307,7.900043],[-2.436607,-1.326448,9.435412,-4.174961,2.611025,4.438372,-6.920234,1.346725,0.196199,0.394421,-2.768630],[5.023631,-5.409562,-1.039710,-8.660958,-5.319199,-0.045150,-7.095477,-5.289497,3.897537,-4.583802,-2.572608],[3.447930,-3.208932,3.643020,4.336601,-8.832536,3.189515,9.124776,3.198721,-3.290338,-3.535146,3.231575],[-4.921907,6.531152,2.702752,-1.017426,-6.475082,9.030981,-3.599111,0.720907,-0.983071,-3.214843,-0.049721],[5.478386,-7.608991,3.810577,6.649586,6.891467,-8.207786,6.802217,-8.171552,8.984257,-8.989249,1.512123],[2.019544,-9.788513,3.280678,-1.275329,-8.925316,4.436880,5.617559,6.219861,2.686014,-6.673345,1.607762],[2.798959,5.941431,-6.391575,4.095254,2.083098,-4.132067,3.362841,-2.412977,-6.318785,1.600195,8.711271]],[[-3.880470,9.377326,5.886916,-1.971672,-5.699255,-2.595916,-6.893101,4.956352,0.068122,8.358347,-6.822508],[3.038933,-7.481964,8.436344,5.110557,-6.138469,3.004802,-8.565378,5.026478,0.392721,-9.965890,9.547696],[-0.323073,2.151242,3.692370,-4.078951,5.744402,4.903692,5.006842,3.931973,2.372293,-7.374478,-2.344551],[-2.661773,3.643634,7.747385,7.742089,8.522267,4.668878,9.054170,0.815353,-7.639522,2.238946,-2.045717],[-7.368999,-5.055049,1.955820,-1.550725,0.028196,2.498436,-4.489600,-6.669742,5.529805,4.880045,-9.823486],[-3.510074,-0.044976,-5.719195,-3.314301,-2.456786,1.495222,-3.111304,-8.629894,-6.663159,9.193960,-9.986053],[-6.737793,-8.903361,-6.226789,-4.361357,-0.388395,-2.058184,9.938477,0.821028,1.343622,-7.881542,-5.316623],[9.307496,4.586009,-7.812214,9.338445,-1.690510,4.590608,-5.041731,-3.109276,2.125187,0.164730,-1.009933],[-9.804484,-8.246911,1.150834,-9.061027,0.729168,-1.892148,8.247812,-5.064524,-9.674608,-6.703087,0.955379],[9.836535,2.923342,-1.037285,7.131793,4.957750,-5.274676,0.025140,-2.897006,7.226809,-4.679281,-1.699351],[-9.059070,-0.322225,9.228976,0.219553,4.409845,8.373823,9.499927,1.590524,-8.312328,-7.946299,-4.700455],[-0.928803,-4.030962,1.297353,-6.064875,-7.599911,-3.991918,9.863919,-8.397076,-7.964086,2.685080,-8.620106],[5.387703,1.755911,7.354608,8.515925,-9.298068,-4.073520,1.427940,0.117662,-9.363399,0.623606,-7.873545]],[[-7.466462,0.877128,1.056024,-1.183837,9.928056,9.226284,4.449420,-6.950556,7.575229,2.399775,8.924955],[3.153785,-9.413463,3.268845,-1.769809,-1.565189,-3.905422,4.298500,-8.909857,1.760978,6.570192,4.083309],[6.635663,0.607281,-9.050080,9.959240,-5.199146,-4.522586,-3.078612,-2.357613,2.546311,8.750487,-1.515371],[9.549382,0.234504,-1.937913,-8.971100,6.932122,0.307781,-7.855529,0.268805,-2.146980,-2.963082,-9.910602],[-4.009810,9.133896,2.980429,3.151255,5.083301,2.482106,4.462610,8.625553,9.891233,-0.247864,-6.359340],[-1.085075,-6.699838,0.899950,8.633676,2.963222,-4.188745,2.164758,6.282963,3.000762,-7.921111,1.114889],[-5.249520,5.119519,-1.937454,-8.271390,-4.646392,-7.012843,3.279938,0.306272,-8.646399,-8.891564,4.419830],[-4.810786,-2.323747,2.229440,-2.187053,8.287656,5.792714,-9.259061,-4.367355,-5.561219,1.266892,0.930652],[-4.394114,0.153722,5.307529,7.248153,-5.301356,7.869880,8.386398,7.624941,-2.218130,-4.465490,0.920334],[5.380070,-2.641168,-3.117237,-3.817348,-9.301118,-6.062052,9.690094,-2.734572,-0.283508,8.480120,3.400267],[-1.830028,-9.438549,6.583598,-4.908320,-9.931718,-0.901143,-6.944054,-4.614572,-5.848563,3.724440,1.177866],[-4.106525,-3.342835,-1.414143,0.787826,-4.371397,-0.125542,-4.184903,-7.467810,-4.494748,-3.871351,7.736610],[3.739055,2.295550,-2.880459,-4.537037,-9.167050,1.206183,9.867042,-5.657795,-9.663460,-1.844830,8.676403]],[[-9.638464,1.998396,-7.357589,-0.226651,-5.108352,-5.152616,8.938761,6.504990,-0.533459,2.866029,-4.825882],[9.154299,4.628652,5.838551,-4.123436,-7.803993,-4.899556,9.099672,7.811766,-3.163853,6.266151,0.041068],[-0.117255,-8.554733,-6.099442,-2.256993,-0.001089,0.303500,4.280220,2.137509,-3.398389,7.903703,8.527872],[8.100780,-8.695599,3.446622,-2.257866,-0.841508,0.495369,4.968373,-7.951326,-1.938994,9.192406,-1.305985],[-4.972813,-0.866337,9.398036,-2.952300,-4.789837,5.839764,8.879828,-1.259848,-6.352097,-1.846957,2.305034],[5.837274,-1.026641,-6.196453,-5.265885,-8.991627,-4.157793,1.529021,-3.835357,4.426779,2.789719,5.168583],[1.175921,0.543809,1.261184,8.641502,5.826585,-7.370461,-4.590820,-0.125679,-5.281475,5.872161,6.403039],[-6.136730,-9.982977,8.483995,6.660741,3.294519,-5.064246,-7.818221,-6.288736,3.249517,-8.442845,9.181412],[-7.518500,8.349228,6.514109,-0.338532,4.492566,-4.326675,-5.825055,-3.496969,5.847840,-4.153731,-1.709010],[1.032180,-4.504042,-2.837919,-7.076326,6.179015,1.622200,4.074868,7.002626,-1.188527,0.172198,9.592506],[-1.295218,0.153544,8.544685,4.759768,-1.501359,-5.643492,4.876063,5.834729,4.391700,1.564416,-0.656333],[8.161337,-3.642922,-2.035440,-4.795585,0.979306,7.832871,-1.667404,-2.667719,-3.775994,-4.990030,7.925258],[-0.998772,-3.515035,0.850491,-7.091250,-9.370229,4.586094,5.411433,-2.650693,9.858522,-3.779447,-2.176910]]], dtype = "float32")#candidate|1565|(6, 13, 11)|const|float32
uop_1566 = relay.cosh(const_1565.astype('float32')) # shape=(6, 13, 11)
output = uop_1566
output2 = uop_1566
func_1575 = relay.Function([], output)
mod['func_1575'] = func_1575
mod = relay.transform.InferType()(mod)
mutated_mod['func_1575'] = func_1575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1576 = func_1575_call()
output = call_1576
func_1577 = relay.Function([], output)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_1593 = relay.TupleGetItem(func_1546_call(), 0)
call_1594 = relay.TupleGetItem(func_1548_call(), 0)
output = relay.Tuple([call_1593,])
output2 = relay.Tuple([call_1594,])
func_1600 = relay.Function([], output)
mod['func_1600'] = func_1600
mod = relay.transform.InferType()(mod)
output = func_1600()
func_1601 = relay.Function([], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1620 = relay.TupleGetItem(func_1560_call(), 0)
call_1621 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([call_1620,])
output2 = relay.Tuple([call_1621,])
func_1633 = relay.Function([], output)
mod['func_1633'] = func_1633
mod = relay.transform.InferType()(mod)
output = func_1633()
func_1634 = relay.Function([], output)
mutated_mod['func_1634'] = func_1634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1633_call = mod.get_global_var('func_1633')
func_1634_call = mutated_mod.get_global_var('func_1634')
call_1645 = relay.TupleGetItem(func_1633_call(), 0)
call_1646 = relay.TupleGetItem(func_1634_call(), 0)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_1649 = relay.TupleGetItem(func_1051_call(), 4)
call_1650 = relay.TupleGetItem(func_1052_call(), 4)
func_1082_call = mod.get_global_var('func_1082')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_1679 = relay.var("var_1679", dtype = "int32", shape = (294,))#candidate|1679|(294,)|var|int32
call_1678 = relay.TupleGetItem(func_1082_call(relay.reshape(var_1679.astype('int32'), [7, 14, 3])), 0)
call_1680 = relay.TupleGetItem(func_1084_call(relay.reshape(var_1679.astype('int32'), [7, 14, 3])), 0)
bop_1693 = relay.right_shift(var_1679.astype('uint64'), relay.reshape(call_1678.astype('uint64'), relay.shape_of(var_1679))) # shape=(294,)
bop_1696 = relay.right_shift(var_1679.astype('uint64'), relay.reshape(call_1680.astype('uint64'), relay.shape_of(var_1679))) # shape=(294,)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_1702 = relay.const([[3,10,-8,1,2,8,-4,-9,-9,-8,9],[-7,-4,4,9,9,4,1,8,7,-2,1],[-2,-6,7,5,6,3,-8,-1,-3,-10,-8],[10,-5,-8,-3,-4,1,-5,6,6,-5,1],[6,-2,-2,7,-3,8,3,6,6,3,4],[8,2,-1,3,-2,-5,7,7,7,-10,-10],[10,-10,-10,4,5,-3,5,3,5,4,-10],[-7,-4,8,9,6,-8,4,3,3,9,4],[9,2,5,-3,-9,-5,-5,5,-3,-3,-1],[-10,-6,-2,-8,-1,-6,-10,-10,-7,5,2],[-6,-6,-9,-9,-8,5,-3,-9,5,-5,-4],[1,10,-3,-1,7,-1,6,1,-2,-6,3],[6,-10,1,-2,-2,10,-5,9,7,5,8],[-10,9,-10,-3,-6,-6,-1,-4,3,-8,-10],[-6,-10,4,5,-5,4,8,-8,-8,9,-1],[-10,-5,-10,6,5,8,8,-9,7,5,9],[-5,6,3,5,8,-8,-10,6,-10,-9,6],[-2,8,10,-9,9,-6,-7,-10,3,-10,1],[-9,6,-7,8,10,-10,-9,4,-9,-4,-7],[4,-5,-7,9,-7,-6,8,5,7,-7,-6],[7,-6,2,-1,-5,6,3,-7,3,1,-6],[-3,6,-8,8,9,3,-4,-7,4,2,-2],[-5,-9,2,10,-10,10,-4,7,4,9,-1],[-2,8,10,8,-6,2,3,-5,3,5,-1],[4,1,4,-5,3,-3,5,-8,7,8,-9],[-5,-4,-2,-2,8,-1,-3,-10,-9,-10,-1],[-8,-10,5,4,8,10,10,9,-5,7,7],[-10,-2,8,-1,-7,-10,-4,4,10,-9,-4],[-4,-10,-1,6,1,-4,3,5,3,-3,-10],[1,-6,5,-3,4,-3,10,-3,1,10,-7],[9,9,3,-6,-8,8,-8,-9,4,-10,-8],[-3,5,-7,9,-2,-5,10,-2,2,1,-3],[-4,10,6,5,10,-6,-1,-2,6,-1,-6],[10,9,-7,3,1,-10,3,1,-1,5,-6],[10,-9,3,-1,2,6,-5,-4,-10,-4,-6],[-8,5,7,-7,-8,-4,-7,-8,-7,-10,-4],[3,1,-10,8,2,-2,5,8,-6,-3,7],[7,-8,8,7,-1,7,-6,7,-5,-1,-5],[-8,-2,-3,-5,5,-8,8,9,5,6,3],[10,-7,8,-2,6,-10,-8,-3,5,-7,-1],[6,-10,3,4,-7,6,9,-4,9,-5,-10],[1,-6,-3,9,9,5,8,-3,-2,7,8],[1,9,4,8,6,9,-10,-6,6,4,-5],[9,-7,10,-8,9,10,1,1,10,-3,-3],[3,9,5,1,10,-7,1,-8,-8,2,7],[4,5,7,-4,8,-10,-9,4,6,-1,8],[2,3,-5,8,8,-9,-7,-10,7,-10,-7],[-1,-10,5,-1,5,9,1,-5,-3,2,-8],[8,-2,8,-1,1,-5,10,2,3,5,5],[5,7,-5,-9,8,10,2,1,2,7,5],[-9,1,4,3,1,1,5,-7,-8,-4,4],[-6,-1,-7,6,-8,-8,-7,4,-6,-10,-3],[5,-1,-4,9,1,4,-4,2,2,-6,-10],[7,-5,-7,1,9,-9,-7,3,4,3,-8],[9,-6,-2,3,7,6,-4,6,2,-9,6],[-7,-6,-7,-6,-6,6,6,-6,10,1,-5],[8,10,1,-2,-9,-7,7,-2,8,-8,9],[2,6,-9,7,-2,9,4,3,-6,2,-5],[-9,4,6,2,7,-3,8,-10,7,-8,3],[-6,-8,9,8,-9,-3,-6,4,-6,-2,3],[-10,4,4,4,4,6,-6,1,8,-3,-4],[2,5,-8,5,-8,4,-2,4,6,8,9],[6,8,-10,9,-9,2,6,-2,3,8,4],[6,6,7,5,-7,-5,-6,-5,-1,-5,8],[-4,6,4,7,-2,7,6,-1,1,-3,-3]], dtype = "int16")#candidate|1702|(65, 11)|const|int16
call_1701 = relay.TupleGetItem(func_89_call(relay.reshape(const_1702.astype('int16'), [11, 5, 13])), 0)
call_1703 = relay.TupleGetItem(func_92_call(relay.reshape(const_1702.astype('int16'), [11, 5, 13])), 0)
output = relay.Tuple([call_1645,call_1649,bop_1693,call_1701,const_1702,])
output2 = relay.Tuple([call_1646,call_1650,bop_1696,call_1703,const_1702,])
func_1710 = relay.Function([var_1679,], output)
mod['func_1710'] = func_1710
mod = relay.transform.InferType()(mod)
var_1711 = relay.var("var_1711", dtype = "int32", shape = (294,))#candidate|1711|(294,)|var|int32
output = func_1710(var_1711)
func_1712 = relay.Function([var_1711], output)
mutated_mod['func_1712'] = func_1712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_1730 = func_1216_call()
call_1731 = func_1216_call()
uop_1732 = relay.sqrt(call_1730.astype('float32')) # shape=(715,)
uop_1734 = relay.sqrt(call_1731.astype('float32')) # shape=(715,)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_1749 = relay.TupleGetItem(func_1560_call(), 0)
call_1750 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([uop_1732,call_1749,])
output2 = relay.Tuple([uop_1734,call_1750,])
func_1757 = relay.Function([], output)
mod['func_1757'] = func_1757
mod = relay.transform.InferType()(mod)
mutated_mod['func_1757'] = func_1757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mutated_mod.get_global_var('func_1757')
call_1758 = func_1757_call()
output = call_1758
func_1759 = relay.Function([], output)
mutated_mod['func_1759'] = func_1759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_1777 = func_1172_call()
call_1778 = func_1172_call()
output = relay.Tuple([call_1777,])
output2 = relay.Tuple([call_1778,])
func_1791 = relay.Function([], output)
mod['func_1791'] = func_1791
mod = relay.transform.InferType()(mod)
output = func_1791()
func_1792 = relay.Function([], output)
mutated_mod['func_1792'] = func_1792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_1816 = relay.TupleGetItem(func_1757_call(), 1)
call_1817 = relay.TupleGetItem(func_1759_call(), 1)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_1823 = relay.const([2,-2,8,1,-4,-4,-7,-4,3,5,6,-10,-3,-8,-5,-10,6,3,-7,-1,5,2,4,-7,3,7,-9,-2,9,-1,-6,-3,-4,6,3,2,1,-1,2,-1,1,-4,-5,1,6,-2,5,-5,-4,-10,-6,-6,-10,1,-7,7,-2,-8,-7,5,-3,8,-2,8,-3,2,5,-6,9,7,2,5,4,3,2,-9,-4,-4,-9,2,-1,9,6,-10,-3,-2,2,-10,-1,-10,-2,-8,5,3,-4,-5,-9,10,-2,-10,-7,1,-10,-6,6,1,-6,-4,-3,-4,-2,-2,5,-8,-2,3,3,-9,-7,-1,2,10,-5,8,3,-2,10,8,6,4,6,-7,1,9,10,10,-6,-9,-7,8,8,-5,-6,6,8,-7,-7,-3,-10,-4,-4,2,5,8,8,-1,8,7,-8,-3,4,1,6,-8,6,-7,-8,-10,-2,-6,6,9,5,5,10,2,-2,5,-8,-4,-7,-7,-10,10,5,2,-5,-5,-6,4,2,2,-10,10,10,-2,-5,-3,-6,-8,-9,4,5,4,4,9,-3,-8,8,1,-3,6,-2,6,-2,-8,-9,6,-2,5,-8,1,-5,-6,-8,10,10,3,7,-7,-4,-3,-7,-6,9,6,8,-1,-6,-6,4,10,-4,-5,10,1,4,10,-2,10,-8,1,4,8,10,8,2,9,9,-10,-3,7,-6,1,-3,-9,9,-6,-3,5,-10,9,-1,9,-10,2,-9,-3,4,-3,6,10,4,-6,-2,-4,6,-6,2,6,4,7,7,-10,-3,9,-7,-3,-5,-9,4,1,7,-4,3,-10,9,2,-9,-8,5,2,-6,-2,7,-8,-7,10,6,-4,5,-6,3,-2,-10,5,-10,9,5,7,-7,3,-5,9,-7,10,8,8,-4,6,-5,-3,-1,10,-6,-7,3,-6,-5,2,7,-5,8,8,8,-9,-6,-5,-5,-2,2,-1,-1,5,-1,7,-9,-4,-8,8,-8,-6,-7,1,7,-2,-5,6,-9,2,-10,-7,3,-3,-4,8,7,-8,6,8,-5,4,5,-7,-3,-6,10,-9,5,-8,4,-4,-10,7,2,-9,6,-8,-3,7,6,6,-7,2,10,4,4,5,8,1,-5,-8,6,-6,-3,-5,-6,-8,8,6,10,2,-8,9,6,8,2,6,4,-5,3,-7,-2,2,4,10,10,9,8,3,-10,7,7,-8,-5,9,4,9,-2,8,10,2,-9,-7,-1,-10,9,10,1,6,-2,4,-2,2,5,-10,7,5,4,-2,10,5,9,7,3,6,8,-1,-2,-4,4,-3,7,8,2,8,2,-3,-9,1,-4,7,-6,2,-3,6,-2,10,-9,-3,-10,2,6,-3,8,7,2,3,2,7,-4,1,-1,7,1,2,-3,-3,2,4,-1,-9,4,-10,-1,-10,-9,-3,3,-2,-2,-4,-9,-5,-5,8,-9,9,-2,10,6,-8,-2,-5,1,-9,-4,-9,4,-3,-3,4,-9,-7,-4,6,-6,4,7,5,1,-2,-1,-5,3,1,-10,-9,-10,1,3,3,-4,-9,8,-1,-10,-1,4,-5,5,-4,-10,3,-9,-3,4,2,-1,-8,-5,-8,-2,5,7,4,5,-7,8,5,6,10,4,-5,2,-3,-4,1,2,-3,-5,2,-2,-5,9,-10,9,-5,1,-7,-5,10,-5,-7,-7,5,5,2,-6,-10,8,-10,-9,2,-6,2,3,-1,3,5,-8,3,-8,3,-1,-1,-2,-8,5,-2,10,2,-8,-10,-3,-2,-5,-4,-8,-9,9,-10,10,-3,-1,-7,1,-4,4,-1,-9,6,7,-9,7,6,7,-7,7,3,7,6,-9,8,-6,-10,3,9,8,-3,-7,8,-6,-10,-5,8,2,1,-6,-7,-9,7,5,-9,7], dtype = "int16")#candidate|1823|(715,)|const|int16
call_1822 = relay.TupleGetItem(func_89_call(relay.reshape(const_1823.astype('int16'), [11, 5, 13])), 0)
call_1824 = relay.TupleGetItem(func_92_call(relay.reshape(const_1823.astype('int16'), [11, 5, 13])), 0)
func_1143_call = mod.get_global_var('func_1143')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_1825 = func_1143_call(relay.reshape(call_1822.astype('int16'), [715,]))
call_1826 = func_1143_call(relay.reshape(call_1822.astype('int16'), [715,]))
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_1829 = func_1575_call()
call_1830 = func_1575_call()
output = relay.Tuple([call_1816,call_1822,const_1823,call_1825,call_1829,])
output2 = relay.Tuple([call_1817,call_1824,const_1823,call_1826,call_1830,])
func_1831 = relay.Function([], output)
mod['func_1831'] = func_1831
mod = relay.transform.InferType()(mod)
output = func_1831()
func_1832 = relay.Function([], output)
mutated_mod['func_1832'] = func_1832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_1860 = relay.TupleGetItem(func_1051_call(), 4)
call_1861 = relay.TupleGetItem(func_1052_call(), 4)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_1885 = func_1337_call()
call_1886 = func_1337_call()
output = relay.Tuple([call_1860,call_1885,])
output2 = relay.Tuple([call_1861,call_1886,])
func_1897 = relay.Function([], output)
mod['func_1897'] = func_1897
mod = relay.transform.InferType()(mod)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1897_call = mutated_mod.get_global_var('func_1897')
call_1898 = func_1897_call()
output = call_1898
func_1899 = relay.Function([], output)
mutated_mod['func_1899'] = func_1899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_1994 = relay.TupleGetItem(func_1791_call(), 0)
call_1995 = relay.TupleGetItem(func_1792_call(), 0)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
const_2008 = relay.const([4,-3,9,8,-1,4,-1,4,-5,8,2,4,10,5,4,-5,-6,-1,-2,4,5,7,10,7,-8,7,7,-3,-9,4,8,4,-10,8,3,-5,-9,6,4,7,8,-1,5,-2,2,-2,7,-4,-10,-1,6,3,8,7,3,-5,7,-6,2,9,-5,-6,-6,9,7,-8,6,8,-3,8,-10,6,9,-10,-9,-6,-1,-7,5,4,6,2,-5,5,-7,3,4,-5,-1,-7,-7,7,5,6,7,-9,1,-4,4,-2,10,10,-7,10,-1,10,-10,-7,-8,3,10,10,-5,-6,4,4,5,2,1,2,1,-2,-7,-5,10,2,-2,-1,-9,-8,7,8,5,6,4,-10,9,3,2,3,-6,2,-9,4,2,-10,-3,-10,10,6,5,-6,-9,2,-7,-3,-2,-2,10,9,-8,-8,9,1,8,-1,3,-9,6,-4,-6,7,-2,9,3,-3,-8,3,-10,7,2,-9,5,9,-9,6,10,5,10,-5,3,7,-8,9,7,-4,-3,-5,-2,2,9,-1,9,2,-2,-6,4,8,-4,-10,4,1,10,8,4,5,7,-2,-2,8,3,10,-7,-1,-9,1,8,1,-10,2,-8,-7,5,-3,-8,-2,7,2,2,5,6,-5,10,2,6,5,-3,10,6,4,6,-6,-7,5,2,1,7,-2,-1,-8,10,-10,10,10,3,9,-9,-10,-1,-6,-6,1,-2,-2,-1,7,-6,6,-6,9,10,7,-2,6,4,6,-8,5,4,-2,-8,6,-7,-9,9,-4,-7,-8,10,4,-5,-5,-9,-4,8,8,6,-1,8,-10,9,8,5,-8,-2,-10,-3,2,7,-7,-2,2,-8,-5,-4,-5,-6,-10,-9,-7,-1,7,-2,-7,5,-6,6,-6,-1,-3,5,8,9,2,6,-10,-6,10,6,-9,-9,7,-4,-4,-6,-10,4,-10,-5,2,6,10,-9,-2,-10,-5,7,-6,8,6,8,-3,-3,5,9,-3,7,7,-6,2,-3,4,-10,-2,4,-2,-3,3,2,-6,-3,-8,-4,8,-5,5,7,7,-2,8,7,8,-9,-8,7,3,-4,-2,-5,8,1,5,5,-9,-3,2,-9,1,-1,10,-6,-8,2,-1,-2,-5,4,-3,6,-5,1,10,-10,-1,-2,9,-1,-8,-6,-10,-10,3,6,1,10,-2,3,-4,-3,-2,-3,2,-7,-7,-1,-3,-1,-3,4,1,-7,-6,5,3,-4,-2,7,1,4,9,4,-4,-10,-3,10,10,-1,10,-6,-3,-2,-7,8,-3,5,-8,3,3,-9,-8,4,-8,4,-10,-3,-3,7,3,8,-8,5,-2,-7,4,5,7,-9,4,-5,6,-9,-2,-8,2,1,1,-7,6,9,-2,-9,-6,3,2,6,7,-6,2,4,-2,-7,2,-7,7,-8,2,9,-8,10,2,9,-3,-6,10,2,-6,-6,-2,7,-1,-10,4,1,-2,1,10,1,6,-2,-1,10,-5,8,-9,9,-1,3,6,7,-8,2,-10,-3,4,3,-2,-3,-9,-4,-7,10,-2,3,-8,8,9,-6,-6,-5,6,6,-9,7,-1,8,-6,5,-1,7,-9,5,-8,-8,2,5,-9,6,-9,8,3,-5,4,6,10,-3,10,-6,-1,-1,8,-10,4,-7,-8,2,-2,-4,-8,-10,-4,5,4,-2,-8,7,8,2,-5,6,7,9,-6,-6,3,-1,10,3,-9,-9,8,2,-3,-2,7,-4,-8,4,3,-8,-5,-3,5,8,-1,-1,-3,6,9,-6,10,9,-10,1,2,-10,-8,-9,-9,7,4,-8,10,2,-4,6,-8,-1,7,-4,1,3,6,-10,-10,4,4,-10,-6,6,1,-3,6,-7,-5,-1,4,-8,9,-7,7,-3,-3,-7,-5,8], dtype = "int16")#candidate|2008|(715,)|const|int16
var_2009 = relay.var("var_2009", dtype = "float32", shape = (72, 2))#candidate|2009|(72, 2)|var|float32
call_2007 = relay.TupleGetItem(func_961_call(relay.reshape(const_2008.astype('int16'), [13, 55]), relay.reshape(var_2009.astype('float32'), [144,]), ), 5)
call_2010 = relay.TupleGetItem(func_964_call(relay.reshape(const_2008.astype('int16'), [13, 55]), relay.reshape(var_2009.astype('float32'), [144,]), ), 5)
uop_2017 = relay.atan(var_2009.astype('float32')) # shape=(72, 2)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
call_2028 = relay.TupleGetItem(func_961_call(relay.reshape(const_2008.astype('int16'), [13, 55]), relay.reshape(uop_2017.astype('float32'), [144,]), ), 1)
call_2029 = relay.TupleGetItem(func_964_call(relay.reshape(const_2008.astype('int16'), [13, 55]), relay.reshape(uop_2017.astype('float32'), [144,]), ), 1)
uop_2033 = relay.acos(call_1994.astype('float32')) # shape=(11, 3, 2)
uop_2035 = relay.acos(call_1995.astype('float32')) # shape=(11, 3, 2)
func_1143_call = mod.get_global_var('func_1143')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_2051 = func_1143_call(relay.reshape(const_2008.astype('int16'), [715,]))
call_2052 = func_1143_call(relay.reshape(const_2008.astype('int16'), [715,]))
var_2054 = relay.var("var_2054", dtype = "float32", shape = (11, 3, 2))#candidate|2054|(11, 3, 2)|var|float32
bop_2055 = relay.greater(uop_2033.astype('bool'), relay.reshape(var_2054.astype('bool'), relay.shape_of(uop_2033))) # shape=(11, 3, 2)
bop_2058 = relay.greater(uop_2035.astype('bool'), relay.reshape(var_2054.astype('bool'), relay.shape_of(uop_2035))) # shape=(11, 3, 2)
func_1082_call = mod.get_global_var('func_1082')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_2060 = relay.var("var_2060", dtype = "int32", shape = (294,))#candidate|2060|(294,)|var|int32
call_2059 = relay.TupleGetItem(func_1082_call(relay.reshape(var_2060.astype('int32'), [7, 14, 3])), 0)
call_2061 = relay.TupleGetItem(func_1084_call(relay.reshape(var_2060.astype('int32'), [7, 14, 3])), 0)
uop_2066 = relay.log(uop_2017.astype('float32')) # shape=(72, 2)
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
call_2076 = relay.TupleGetItem(func_1409_call(relay.reshape(call_2051.astype('int16'), [715,])), 0)
call_2077 = relay.TupleGetItem(func_1411_call(relay.reshape(call_2051.astype('int16'), [715,])), 0)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_2080 = func_1172_call()
call_2081 = func_1172_call()
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_2085 = relay.TupleGetItem(func_1791_call(), 0)
call_2086 = relay.TupleGetItem(func_1792_call(), 0)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_2089 = func_1575_call()
call_2090 = func_1575_call()
func_1710_call = mod.get_global_var('func_1710')
func_1712_call = mutated_mod.get_global_var('func_1712')
call_2094 = relay.TupleGetItem(func_1710_call(relay.reshape(var_2060.astype('int32'), [294,])), 4)
call_2095 = relay.TupleGetItem(func_1712_call(relay.reshape(var_2060.astype('int32'), [294,])), 4)
output = relay.Tuple([call_2007,const_2008,call_2028,call_2051,bop_2055,call_2059,var_2060,uop_2066,call_2076,call_2080,call_2085,call_2089,call_2094,])
output2 = relay.Tuple([call_2010,const_2008,call_2029,call_2052,bop_2058,call_2061,var_2060,uop_2066,call_2077,call_2081,call_2086,call_2090,call_2095,])
func_2113 = relay.Function([var_2009,var_2054,var_2060,], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
mutated_mod['func_2113'] = func_2113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2113_call = mutated_mod.get_global_var('func_2113')
var_2115 = relay.var("var_2115", dtype = "float32", shape = (72, 2))#candidate|2115|(72, 2)|var|float32
var_2116 = relay.var("var_2116", dtype = "float32", shape = (11, 3, 2))#candidate|2116|(11, 3, 2)|var|float32
var_2117 = relay.var("var_2117", dtype = "int32", shape = (294,))#candidate|2117|(294,)|var|int32
call_2114 = func_2113_call(var_2115,var_2116,var_2117,)
output = call_2114
func_2118 = relay.Function([var_2115,var_2116,var_2117,], output)
mutated_mod['func_2118'] = func_2118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_2123 = relay.TupleGetItem(func_1560_call(), 0)
call_2124 = relay.TupleGetItem(func_1562_call(), 0)
output = call_2123
output2 = call_2124
func_2131 = relay.Function([], output)
mod['func_2131'] = func_2131
mod = relay.transform.InferType()(mod)
mutated_mod['func_2131'] = func_2131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2131_call = mutated_mod.get_global_var('func_2131')
call_2132 = func_2131_call()
output = call_2132
func_2133 = relay.Function([], output)
mutated_mod['func_2133'] = func_2133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_2134 = func_1575_call()
call_2135 = func_1575_call()
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
const_2141 = relay.const([2,-5,7,-8,10,-4,-10,2,-10,6,3,10,-9,2,-10,-1,10,1,-8,6,6,2,4,6,1,4,7,3,-6,-6,-9,-9,3,-6,8,8,9,10,3,9,-9,9,7,-3,-6,-3,6,-6,1,-7,-4,-5,-6,-10,10,-5,2,-6,-6,6,-8,1,-1,2,-10,1,5,-1,-10,9,10,-10,10,3,-2,9,8,-3,-10,-10,-3,6,-8,8,6,9,-3,-10,2,-8,4,8,1,2,-6,2,5,9,5,-3,-7,8,-1,3,-4,2,2,2,9,5,-6,7,4,-7,5,1,2,4,-10,9,-1,1,-8,7,7,-7,8,4,-1,-1,1,-10,5,-8,-2,8,7,7,4,-5,5,-2,5,4,-7,2,-9,2,-4,-9,-7,-2,-8,-10,-2,-1,-4,-9,-1,4,-8,-7,-7,-2,-9,-9,-10,1,-9,-2,5,-7,8,-9,-9,-6,-9,5,-2,-9,8,7,1,9,10,-1,5,-3,6,-4,7,3,5,-2,-4,9,-8,-1,-6,-9,2,-9,-9,-1,-8,-1,9,9,-1,2,-1,-9,-7,10,-1,-2,-8,-1,5,4,-9,8,-1,1,-9,9,-3,-3,-9,8,1,-4,-10,9,-6,-1,-10,-2,-6,-4,5,-7,10,-3,-2,-10,8,3,8,5,5,-9,-5,-7,-4,-5,2,1,3,-4,4,5,9,-2,-10,-1,3,9,8,8,-6,-3,7,4,-8,3,2,6,8,8,-4,-2,-6,-6,8,8,-7,2,-7,-3,5,-6,8,8,-9,5,-3,2,-9,-8,2,-2,-9,4,3,8,7,-4,-6,-10,-9,8,-3,3,-9,-10,-7,2,9,1,-5,-7,-4,7,3,5,-4,6,-3,9,10,-7,-4,-4,-4,4,-5,-4,-3,-1,8,-10,8,10,-5,-7,10,3,-2,-8,1,8,2,8,-4,-4,4,-5,-8,-6,-5,7,7,-3,6,-5,-3,6,6,-3,-3,-3,8,9,-4,-10,-10,-6,8,5,-1,2,3,1,2,-10,-8,-1,-2,6,-9,-4,-5,5,-2,-7,1,6,9,-5,-1,7,-7,-8,3,4,-2,1,1,-1,8,-5,-9,-5,8,3,-5,9,-1,1,-2,-5,5,2,-2,8,-2,9,6,2,-5,3,7,2,-10,-3,-9,-7,-2,10,-1,-4,-5,-6,8,-5,5,3,-10,10,-7,10,-1,10,-5,7,-3,1,-7,-7,5,8,-9,-1,-5,9,-6,-9,8,-10,2,-3,10,2,-10,-2,2,6,2,-2,-10,10,10,5,-1,-2,-2,-9,-8,-2,2,5,6,7,1,-3,-10,9,2,-9,8,-5,6,-5,-5,-5,2,10,3,4,-9,-5,1,1,9,-8,3,9,7,6,-2,-10,-2,10,10,-7,4,7,9,3,-8,-5,4,10,8,5,8,-4,-6,4,-2,-4,-7,4,-1,-2,-7,9,2,5,5,2,5,-4,2,-6,10,-1,-3,1,-3,2,-3,-5,10,5,-10,-3,-2,-6,4,9,4,-1,6,-10,8,-10,4,-5,5,-4,-8,-2,1,-5,9,-10,-1,-9,-4,5,-4,-2,2,5,-7,6,5,6,-5,-2,4,-9,-5,-1,9,1,-4,-2,-10,6,5,5,-10,-5,-3,-9,-10,-1,7,4,-1,-9,-7,1,-7,9,9,-9,6,-1,-4,-3,1,9,-9,3,-7,-2,3,-4,-10,-2,6,7,-7,10,-1,6,-8,-9,8,-6,4,9,-3,10,5,-4,1,-4,10,-2,8,4,-4,2,4,-9,8,-8,3,4,-7,-1,-10,9,-9,-2,10,3,-8,8,-5,-10,4,-1,5,-5,4,3,8,-3,-6,4,-10,9,-1,9,1,8,1,-2,-5,-1,10,-10,-9,-7,-9,-10,-7,-6,-8], dtype = "int16")#candidate|2141|(715,)|const|int16
call_2140 = relay.TupleGetItem(func_89_call(relay.reshape(const_2141.astype('int16'), [11, 5, 13])), 0)
call_2142 = relay.TupleGetItem(func_92_call(relay.reshape(const_2141.astype('int16'), [11, 5, 13])), 0)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_2148 = func_1172_call()
call_2149 = func_1172_call()
output = relay.Tuple([call_2134,call_2140,const_2141,call_2148,])
output2 = relay.Tuple([call_2135,call_2142,const_2141,call_2149,])
func_2152 = relay.Function([], output)
mod['func_2152'] = func_2152
mod = relay.transform.InferType()(mod)
output = func_2152()
func_2153 = relay.Function([], output)
mutated_mod['func_2153'] = func_2153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_2263 = func_1172_call()
call_2264 = func_1172_call()
func_1495_call = mod.get_global_var('func_1495')
func_1498_call = mutated_mod.get_global_var('func_1498')
const_2276 = relay.const([6,6,-1,-7,7,3,-3,-8,-9,3,-6,-6,5,-3,3,-4,6,-8,-5,9,8,-7,4,-3,10,6,-4,6,-2,-8,1,-3,-9,1,8,5,-5,-5,10,9,6,9,8,1,-6,-2,-8,3,7,-3,-5,9,1,-8,5,-4,-3,-3,8,-10,1,-9,-8,-10,6,10,-2,-3,4,-5,-9,10,-1,4,6,-4,-9,-8,7,1,-3,-7,9,-9,1,4,4,3,-8,7,-2,-3,-5,-7,-10,6,-9,-8,2,1,-3,3,-10,5,3,4,-2,-6,7,-7,-2,-10,-7,7,-8,-5,7,8,-4,7,-2,5,-5,1,4,9,-3,7,9,-9,6,8,2,1,9,-5,7,7,3,-6,-5,5,5,-10,-7,1,-3,-5,5,2,1,6,-9,10,8,9,10,-3,-7,9,-2,-5,9,1,-5,-9,2,4,6,-3,1,-2,-7,8,-8,8,-9,-6,-3,4,3,6,-9,-9,8,1,-6,-2,6,9,-9,5,-9,8,-1,2,6,-9,10,-9,-10,6,1,-10,-10,-4,-5,-6,-1,6,9,-4,-8,1,1,-4,10,6,10,2,-5,8,5,-4,-10,-8,10,5,7,6,8,8,10,1,9,1,-2,-4,4,-3,8,-5,-5,6,8,9,-2,4,-10,3,10,5,-2,9,7,-10,5,-5,8,2,5,-10,8,-10,-8,-8,-6,10,-2,-6,3,3,-3,-8,-2,-7,-2,4,10,6,7,-8,-9,-3,-7,1,6,8,4,2,-6,1,-5,-8,8,-3,-10,-10,-1,-1,3,-10,5,10,-6,3,9,-10,8,-9,1,-1,-5,1,5,4,-3,-7,-4,8,-7,-2,7,-3,1,3,-4,-5,5,-6,-8,-8,-7,-9,-2,-1,-8,-7,4,-9,-10,8,-7,4,9,-2,-10,-7,-5,-10,-3,-6,-3,-3,-3,-3,-5,8,4,-3,1,9,8,-10,6,10,10,-8,10,-9,6,-5,-3,-10,-6,9,8,3,-7,9,-5,-1,-8,8,-2,1,1,8,1,-10,-1,-6,-8,-5,2,-8,-4,9,-10,9,6,-2,10,-10,8,-7,8,7,10,2,-5,-8,9,-10,6,3,-3,-6,4,1,-5,-10,2,2,-7,-8,3,1,5,1,3,3,8,9,7,-2,10,9,9,-6,4,-1,9,-10,-7,6,-4,8,-8,2,6,-10,-9,-8,8,7,9,-10,-3,-5,-1,2,9,9,-4,-5,-8,7,-3,6,-1,5,2,-10,-6,-7,3,-6,9,2,-6,-6,-1,10,7,5,-10,10,8,8,3,2,-5,10,4,9,-8,-4,7,-5,3,-6,2,4,-4,-5,10,-2,-8,10,4,-3,6,5,5,-10,2,9,10,6,-8,10,8,4,4,-7,-5,3,8,-5,-8,1,-10,5,-6,7,-2,1,-9,-6,-10,3,5,-7,4,8,-6,1,9,-10,-7,-6,-2,-8,5,5,-9,1,4,7,-9,-7,1,-2,4,-3,7,-7,-10,3,9,3,6,-9,1,6,10,4,1,-4,-8,-3,8,-7,5,6,-7,1,2,-2,8,4,1,-1,-5,-5,-2,9,10,-10,5,-10,-6,6,3,-4,5,-8,7,-9,4,9,-4,-6,6,1,6,6,10,-2,9,3,6,-10,-1,-7,-5,-1,-5,-5,-4,4,6,4,9,1,1,-2,5,2,-3,1,5,8,8,3,-2,2,5,7,1,2,10,-1,-7,1,1,-7,3,-8,-3,-2,8,-4,-1,8,7,-4,-3,-3,7,10,7,6,-7,2,-7,-4,10,1,8,-1,-9,-5,-3,5,-6,10,4,-5,4,10,2,8,3,1,-9,8,1,-2,-4,4,2,3,-2,7,-6,9,1,7,-9,5,5,7,9], dtype = "int16")#candidate|2276|(715,)|const|int16
call_2275 = relay.TupleGetItem(func_1495_call(relay.reshape(const_2276.astype('int16'), [715,])), 0)
call_2277 = relay.TupleGetItem(func_1498_call(relay.reshape(const_2276.astype('int16'), [715,])), 0)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2286 = relay.TupleGetItem(func_1546_call(), 0)
call_2287 = relay.TupleGetItem(func_1548_call(), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_2309 = relay.TupleGetItem(func_2152_call(), 3)
call_2310 = relay.TupleGetItem(func_2153_call(), 3)
output = relay.Tuple([call_2263,call_2275,const_2276,call_2286,call_2309,])
output2 = relay.Tuple([call_2264,call_2277,const_2276,call_2287,call_2310,])
func_2330 = relay.Function([], output)
mod['func_2330'] = func_2330
mod = relay.transform.InferType()(mod)
output = func_2330()
func_2331 = relay.Function([], output)
mutated_mod['func_2331'] = func_2331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_2406 = func_1172_call()
call_2407 = func_1172_call()
func_1710_call = mod.get_global_var('func_1710')
func_1712_call = mutated_mod.get_global_var('func_1712')
const_2426 = relay.const([[7,-5],[-1,-2],[-8,8],[-7,7],[6,-3],[3,2],[-2,-4],[-4,-9],[2,-8],[8,5],[-8,-2],[-1,-10],[-6,9],[2,7],[-8,9],[9,5],[-4,6],[4,10],[6,6],[8,2],[3,-1],[7,-7],[1,6],[-5,-3],[5,-1],[-3,-10],[2,4],[-6,-3],[-2,-1],[4,-3],[-3,-7],[2,-7],[9,8],[8,9],[-8,9],[-3,-10],[-9,-3],[9,2],[-5,-10],[8,5],[-7,9],[3,-5],[-5,2],[1,3],[2,-4],[2,-3],[-4,-1],[2,10],[-9,5],[9,10],[8,-9],[3,-8],[-8,6],[-10,-6],[-5,7],[-4,-7],[5,4],[3,7],[-7,10],[-10,9],[-1,-9],[-5,5],[1,9],[10,8],[-9,-1],[-10,6],[7,-1],[4,-5],[4,-8],[-9,1],[7,-5],[6,-4],[10,9],[-4,-7],[-1,-7],[6,-10],[6,-9],[10,-4],[10,4],[7,-10],[1,-4],[6,-7],[-10,2],[4,6],[7,-6],[-7,-4],[2,-4],[-5,-5],[-6,3],[-2,9],[-3,-8],[2,-1],[-3,-7],[-7,-9],[10,9],[10,2],[-5,-9],[7,9],[-10,9],[2,10],[6,8],[-8,-6],[2,4],[1,9],[-2,3],[8,-9],[10,8],[-9,7],[-6,3],[-2,4],[6,6],[-3,3],[5,5],[9,-10],[6,-1],[8,2],[-3,-10],[6,8],[10,-1],[-1,8],[-2,7],[-9,-10],[-9,-1],[9,3],[-10,6],[6,10],[-10,-1],[-5,4],[4,-1],[-10,-9],[4,-6],[-3,4],[1,-1],[-5,-3],[4,-3],[4,8],[-1,-2],[-4,2],[3,2],[8,-1],[-7,5],[5,-5],[3,10],[9,7],[1,-3],[-2,-2],[6,1]], dtype = "int32")#candidate|2426|(147, 2)|const|int32
call_2425 = relay.TupleGetItem(func_1710_call(relay.reshape(const_2426.astype('int32'), [294,])), 2)
call_2427 = relay.TupleGetItem(func_1712_call(relay.reshape(const_2426.astype('int32'), [294,])), 2)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_2435 = func_1172_call()
call_2436 = func_1172_call()
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
var_2442 = relay.var("var_2442", dtype = "int16", shape = (715,))#candidate|2442|(715,)|var|int16
call_2441 = relay.TupleGetItem(func_1409_call(relay.reshape(var_2442.astype('int16'), [715,])), 2)
call_2443 = relay.TupleGetItem(func_1411_call(relay.reshape(var_2442.astype('int16'), [715,])), 2)
output = relay.Tuple([call_2406,call_2425,const_2426,call_2435,call_2441,var_2442,])
output2 = relay.Tuple([call_2407,call_2427,const_2426,call_2436,call_2443,var_2442,])
func_2446 = relay.Function([var_2442,], output)
mod['func_2446'] = func_2446
mod = relay.transform.InferType()(mod)
mutated_mod['func_2446'] = func_2446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2447 = relay.var("var_2447", dtype = "int16", shape = (715,))#candidate|2447|(715,)|var|int16
func_2446_call = mutated_mod.get_global_var('func_2446')
call_2448 = func_2446_call(var_2447)
output = call_2448
func_2449 = relay.Function([var_2447], output)
mutated_mod['func_2449'] = func_2449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2487 = relay.var("var_2487", dtype = "float64", shape = (13, 7, 10))#candidate|2487|(13, 7, 10)|var|float64
uop_2488 = relay.log2(var_2487.astype('float64')) # shape=(13, 7, 10)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2500 = relay.TupleGetItem(func_1546_call(), 0)
call_2501 = relay.TupleGetItem(func_1548_call(), 0)
output = relay.Tuple([uop_2488,call_2500,])
output2 = relay.Tuple([uop_2488,call_2501,])
func_2514 = relay.Function([var_2487,], output)
mod['func_2514'] = func_2514
mod = relay.transform.InferType()(mod)
mutated_mod['func_2514'] = func_2514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2515 = relay.var("var_2515", dtype = "float64", shape = (13, 7, 10))#candidate|2515|(13, 7, 10)|var|float64
func_2514_call = mutated_mod.get_global_var('func_2514')
call_2516 = func_2514_call(var_2515)
output = call_2516
func_2517 = relay.Function([var_2515], output)
mutated_mod['func_2517'] = func_2517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1831_call = mod.get_global_var('func_1831')
func_1832_call = mutated_mod.get_global_var('func_1832')
call_2519 = relay.TupleGetItem(func_1831_call(), 0)
call_2520 = relay.TupleGetItem(func_1832_call(), 0)
var_2530 = relay.var("var_2530", dtype = "float64", shape = (11, 3, 2))#candidate|2530|(11, 3, 2)|var|float64
bop_2531 = relay.add(call_2519.astype('int16'), relay.reshape(var_2530.astype('int16'), relay.shape_of(call_2519))) # shape=(11, 3, 2)
bop_2534 = relay.add(call_2520.astype('int16'), relay.reshape(var_2530.astype('int16'), relay.shape_of(call_2520))) # shape=(11, 3, 2)
output = relay.Tuple([bop_2531,])
output2 = relay.Tuple([bop_2534,])
func_2549 = relay.Function([var_2530,], output)
mod['func_2549'] = func_2549
mod = relay.transform.InferType()(mod)
var_2550 = relay.var("var_2550", dtype = "float64", shape = (11, 3, 2))#candidate|2550|(11, 3, 2)|var|float64
output = func_2549(var_2550)
func_2551 = relay.Function([var_2550], output)
mutated_mod['func_2551'] = func_2551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2557 = relay.var("var_2557", dtype = "uint16", shape = (2, 8, 7))#candidate|2557|(2, 8, 7)|var|uint16
var_2558 = relay.var("var_2558", dtype = "uint16", shape = (2, 8, 7))#candidate|2558|(2, 8, 7)|var|uint16
bop_2559 = relay.minimum(var_2557.astype('uint16'), relay.reshape(var_2558.astype('uint16'), relay.shape_of(var_2557))) # shape=(2, 8, 7)
bop_2567 = relay.bitwise_and(var_2557.astype('int64'), relay.reshape(var_2558.astype('int64'), relay.shape_of(var_2557))) # shape=(2, 8, 7)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_2570 = relay.TupleGetItem(func_1546_call(), 1)
call_2571 = relay.TupleGetItem(func_1548_call(), 1)
output = relay.Tuple([bop_2559,bop_2567,call_2570,])
output2 = relay.Tuple([bop_2559,bop_2567,call_2571,])
func_2574 = relay.Function([var_2557,var_2558,], output)
mod['func_2574'] = func_2574
mod = relay.transform.InferType()(mod)
var_2575 = relay.var("var_2575", dtype = "uint16", shape = (2, 8, 7))#candidate|2575|(2, 8, 7)|var|uint16
var_2576 = relay.var("var_2576", dtype = "uint16", shape = (2, 8, 7))#candidate|2576|(2, 8, 7)|var|uint16
output = func_2574(var_2575,var_2576,)
func_2577 = relay.Function([var_2575,var_2576,], output)
mutated_mod['func_2577'] = func_2577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_2609 = relay.TupleGetItem(func_1600_call(), 0)
call_2610 = relay.TupleGetItem(func_1601_call(), 0)
func_1897_call = mod.get_global_var('func_1897')
func_1899_call = mutated_mod.get_global_var('func_1899')
call_2637 = relay.TupleGetItem(func_1897_call(), 1)
call_2638 = relay.TupleGetItem(func_1899_call(), 1)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
var_2648 = relay.var("var_2648", dtype = "float32", shape = (144,))#candidate|2648|(144,)|var|float32
call_2647 = relay.TupleGetItem(func_961_call(relay.reshape(call_2637.astype('int16'), [13, 55]), relay.reshape(var_2648.astype('float32'), [144,]), ), 0)
call_2649 = relay.TupleGetItem(func_964_call(relay.reshape(call_2637.astype('int16'), [13, 55]), relay.reshape(var_2648.astype('float32'), [144,]), ), 0)
output = relay.Tuple([call_2609,call_2637,call_2647,var_2648,])
output2 = relay.Tuple([call_2610,call_2638,call_2649,var_2648,])
func_2664 = relay.Function([var_2648,], output)
mod['func_2664'] = func_2664
mod = relay.transform.InferType()(mod)
var_2665 = relay.var("var_2665", dtype = "float32", shape = (144,))#candidate|2665|(144,)|var|float32
output = func_2664(var_2665)
func_2666 = relay.Function([var_2665], output)
mutated_mod['func_2666'] = func_2666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2668 = relay.var("var_2668", dtype = "float64", shape = (8, 13, 13))#candidate|2668|(8, 13, 13)|var|float64
uop_2669 = relay.sin(var_2668.astype('float64')) # shape=(8, 13, 13)
output = relay.Tuple([uop_2669,])
output2 = relay.Tuple([uop_2669,])
func_2678 = relay.Function([var_2668,], output)
mod['func_2678'] = func_2678
mod = relay.transform.InferType()(mod)
var_2679 = relay.var("var_2679", dtype = "float64", shape = (8, 13, 13))#candidate|2679|(8, 13, 13)|var|float64
output = func_2678(var_2679)
func_2680 = relay.Function([var_2679], output)
mutated_mod['func_2680'] = func_2680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_2740 = func_1337_call()
call_2741 = func_1337_call()
func_2549_call = mod.get_global_var('func_2549')
func_2551_call = mutated_mod.get_global_var('func_2551')
var_2749 = relay.var("var_2749", dtype = "float64", shape = (66,))#candidate|2749|(66,)|var|float64
call_2748 = relay.TupleGetItem(func_2549_call(relay.reshape(var_2749.astype('float64'), [11, 3, 2])), 0)
call_2750 = relay.TupleGetItem(func_2551_call(relay.reshape(var_2749.astype('float64'), [11, 3, 2])), 0)
output = relay.Tuple([call_2740,call_2748,var_2749,])
output2 = relay.Tuple([call_2741,call_2750,var_2749,])
func_2751 = relay.Function([var_2749,], output)
mod['func_2751'] = func_2751
mod = relay.transform.InferType()(mod)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2752 = relay.var("var_2752", dtype = "float64", shape = (66,))#candidate|2752|(66,)|var|float64
func_2751_call = mutated_mod.get_global_var('func_2751')
call_2753 = func_2751_call(var_2752)
output = call_2753
func_2754 = relay.Function([var_2752], output)
mutated_mod['func_2754'] = func_2754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2131_call = mod.get_global_var('func_2131')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2806 = func_2131_call()
call_2807 = func_2131_call()
func_2678_call = mod.get_global_var('func_2678')
func_2680_call = mutated_mod.get_global_var('func_2680')
const_2812 = relay.const([[-9.314695,2.216304],[-8.607381,7.999158],[5.895005,8.742108],[4.757669,-1.017765],[6.175619,7.367182],[-5.857538,7.505849],[4.701879,-3.836217],[7.540014,-1.511430],[-3.111223,-0.710609],[-8.566294,4.172730],[-0.028945,5.374807],[1.086717,-6.235461],[6.292670,-0.367567],[-4.858353,-7.837912],[9.453570,-6.955660],[-3.521229,-9.933212],[-0.248713,7.593187],[0.166208,-5.434021],[5.314193,8.118370],[-7.682224,-0.270492],[-7.413728,8.014378],[-2.184262,-5.726091],[-1.488625,-0.629031],[-1.120704,-3.447251],[-0.475222,4.114825],[-1.314776,9.708717],[8.660796,-9.607072],[-9.566951,5.099904],[-7.383772,-0.419392],[-2.693621,-0.669449],[7.726666,-9.537386],[9.923431,-0.226151],[-4.862936,7.347299],[-4.300313,7.877241],[-9.897691,7.012217],[-0.407710,5.922122],[6.839445,3.690789],[-8.380136,-8.925145],[5.572349,6.394195],[8.349053,-7.008303],[1.715455,7.608600],[-3.128196,-7.343171],[-0.013353,4.148948],[-2.579944,6.510740],[-2.028419,-8.710411],[-0.794410,-4.120387],[2.041475,8.936332],[-5.881693,-3.422005],[6.297395,8.430895],[-7.375401,-5.679048],[0.834576,9.298054],[-1.864669,3.634709],[-7.040958,-8.907697],[-4.229616,-0.701258],[-1.431534,7.040568],[7.077781,9.844926],[4.320636,-3.490208],[-4.833882,-8.306041],[-3.798049,5.247702],[0.299901,-2.370022],[-7.628147,-3.456315],[3.675693,-0.824186],[-5.339598,-9.187864],[-1.435402,1.434638],[-0.249624,9.703607],[-9.368197,-5.068352],[-8.108941,-4.921251],[-9.325968,8.224928],[8.977885,-3.184146],[-2.981552,-4.265447],[-6.992316,-0.055621],[-9.174985,-1.000954],[0.065800,4.200189],[5.914833,-2.519289],[-4.362567,7.039013],[6.963070,0.084626],[9.216600,-0.325820],[9.258529,-3.168976],[1.625146,-8.085086],[-9.535189,5.934181],[-1.034636,-8.458803],[-0.298340,3.912920],[8.623622,-0.454327],[4.432201,1.295125],[7.735193,-5.883852],[-8.382887,-2.781293],[6.065110,-5.159886],[9.005440,9.443262],[-3.718645,1.874664],[2.557459,8.592866],[-9.989320,9.220684],[-5.992996,-6.561591],[-2.100863,-0.376918],[5.602873,1.923811],[6.306030,2.481053],[7.903108,-7.652073],[-6.846034,-5.565269],[3.923926,-1.195142],[2.417090,2.430733],[-6.935685,1.483546],[4.566275,8.279989],[-3.634124,8.722616],[-2.857087,-8.139557],[-1.384845,-1.960285],[2.515605,-0.843413],[-3.682043,-2.909819],[-4.763872,4.916808],[2.302643,-8.304092],[-5.179023,3.841172],[-3.366486,-3.873627],[5.784390,-5.034528],[-2.141745,-7.776643],[3.977750,-6.341569],[9.309544,-9.456291],[-2.677991,-2.323961],[-4.832222,-6.675845],[0.416994,-6.552234],[2.161912,-5.691769],[3.382261,-1.742149],[8.045490,8.424671],[5.398449,1.753050],[-5.757555,-3.748874],[5.840644,-9.926118],[0.248296,2.615769],[7.230245,-9.757889],[-9.052409,8.448133],[9.953575,9.782478],[0.294502,-9.841522],[-0.206089,4.069796],[8.627887,-4.887783],[4.359304,-4.843636],[8.671006,3.266730],[0.368504,1.627340],[-4.013012,-4.546656],[-6.110746,6.996006],[-4.587694,-9.981829],[5.488982,-3.267250],[-4.740586,1.378053],[8.783119,-5.663994],[0.846316,6.856730],[-9.234495,2.961607],[-5.041427,-4.134561],[8.602327,-6.325014],[2.280227,5.603410],[-6.215734,8.916112],[-3.563605,-0.162510],[2.226113,-2.254013],[-2.069314,4.143204],[8.495158,-7.388579],[-9.425648,-6.664158],[-7.157143,-5.473112],[-3.273852,-3.458427],[7.171355,7.993716],[-4.951670,3.291236],[-4.315138,4.398259],[-5.916701,3.505912],[4.989875,1.646631],[1.969507,2.873779],[-4.667521,6.484409],[6.601364,8.783198],[-6.169360,-9.877021],[0.870110,-5.154312],[-8.359758,-8.930614],[-8.335252,-9.489054],[8.957876,-0.731554],[0.458398,-5.483076],[5.198190,-9.920981],[7.166806,0.112887],[-8.961235,5.865584],[4.124872,-4.710835],[1.335258,-2.726570],[-6.327973,2.197090],[-3.061241,-7.463649],[2.138886,8.289413],[8.107821,-6.057163],[-6.441113,-0.553917],[1.128149,-2.602154],[2.707562,-3.493224],[9.558709,-6.608978],[6.355005,-7.361026],[9.220344,-9.773565],[3.964073,3.770051],[4.267772,-2.024604],[6.528897,4.130321],[-1.954091,-8.850606],[-7.430718,-0.467803],[2.746983,7.033032],[-7.068151,3.695233],[6.246939,-8.124602],[4.260248,7.794870],[6.248973,-3.837055],[-5.443740,-0.012449],[8.805588,-3.873902],[8.261644,-2.072891],[2.954372,-0.147647],[2.617552,-4.567956],[6.856050,0.485927],[-3.831544,6.638616],[-2.225470,8.079826],[2.219814,7.756662],[-7.584942,-9.917913],[-3.494450,-3.521904],[6.302686,0.136434],[-7.573035,6.344647],[3.563101,8.067216],[9.748771,5.916168],[-6.277184,-0.775339],[-1.714194,7.942313],[6.861106,3.169387],[-5.206864,6.771871],[-3.214458,-5.194333],[-9.065812,-2.897689],[-5.779099,-8.146109],[-2.512927,-5.233813],[-9.747303,0.203316],[-6.787494,1.431682],[-1.228275,-1.282832],[-0.742567,-9.127754],[-1.875634,-6.561499],[-0.529752,-6.465992],[-0.791647,-7.053957],[5.795511,9.254526],[7.608940,-5.971755],[0.506517,4.634413],[-1.603950,-8.711721],[-9.878497,0.719677],[1.604710,6.240347],[-7.768351,7.098915],[-5.449973,-1.649468],[-2.422846,6.960217],[-1.689730,8.211927],[6.860999,2.484449],[-3.772771,0.474373],[4.121274,-7.667435],[-2.561190,-2.167410],[3.243636,6.759486],[-4.831936,3.022077],[8.297049,-9.077196],[1.394947,-3.610228],[1.494494,-5.707741],[4.133200,-4.421786],[7.403060,-8.235772],[-6.032179,-2.465118],[-7.467456,-6.705634],[9.989182,8.981828],[-8.908439,-0.946590],[8.416510,5.103160],[3.056323,4.123466],[8.411579,6.382914],[-8.834857,-6.643233],[-8.715046,-3.309070],[-7.006302,4.593869],[4.128351,-5.393291],[2.842672,0.898452],[4.787479,7.763739],[-3.021317,-8.400118],[-8.180300,-4.159052],[8.854875,8.370363],[-4.792298,-6.982415],[-6.457248,-4.287449],[-8.373777,-8.149193],[-6.967772,-5.189932],[-0.051542,-4.032121],[-0.058133,-4.276394],[-7.455078,7.291017],[7.813959,2.156400],[7.137790,-2.083216],[-3.300775,7.593341],[0.108661,-5.641734],[9.717052,-0.325344],[-7.805240,-5.422825],[7.223002,3.401428],[-6.324951,1.711591],[4.715996,1.926328],[-2.580142,2.821971],[-4.317768,7.733545],[-5.602842,2.091912],[-5.223224,1.258186],[-3.495798,-1.243856],[-0.935281,8.093917],[-3.761629,-0.969641],[-3.270186,-0.321767],[2.173165,1.612042],[-0.207984,0.749432],[-6.834027,-3.643336],[-9.628728,7.381352],[-3.331921,-2.263017],[5.503326,3.864532],[-3.836544,2.776101],[6.535105,9.285826],[8.026649,-2.277177],[9.433658,-1.816596],[7.158376,9.063747],[-0.994351,-3.134192],[-2.366711,2.710966],[9.083918,0.402153],[-9.463677,-4.621693],[2.133204,-7.118150],[-9.302279,-8.888517],[8.862557,1.955445],[-5.077724,-4.452489],[8.937079,4.869322],[-5.044965,0.363448],[7.823097,0.441519],[0.842701,1.265228],[-7.294232,-3.631543],[-6.953481,-8.628524],[7.645928,-6.363940],[-5.320021,3.407182],[-0.415303,8.267125],[4.853247,-2.917979],[-3.371618,3.191883],[9.953918,-2.100920],[-3.274167,-5.856573],[6.350785,-6.703866],[-6.711895,-6.090037],[-2.819989,-2.076834],[-5.426848,2.388712],[-3.305323,-3.056436],[2.494997,-7.092549],[-7.064145,-6.781240],[9.800062,-6.618159],[-3.354960,-9.172278],[8.196507,8.262971],[-2.806824,-6.709968],[-9.754374,-7.430583],[7.822383,2.292838],[-4.431713,8.609028],[-1.749633,-7.969654],[-1.062577,-4.202718],[0.119601,6.209809],[-6.345068,-4.150935],[-5.144244,8.342171],[-7.656903,1.322047],[9.570460,3.596355],[0.937944,-0.357119],[-0.708587,0.539282],[2.975545,7.843359],[-4.155629,-5.763672],[-9.239304,6.494156],[6.379583,3.729095],[3.302357,-5.756284],[4.130031,-8.054885],[-3.680376,-2.238686],[3.361833,-3.833279],[4.044928,-3.770003],[-8.895224,-3.345905],[7.137923,-1.490085],[5.819131,0.564109],[-5.917698,9.730327],[5.015155,-2.429620],[-0.829183,-9.892644],[4.992939,0.644471],[9.909099,-0.593005],[-8.605653,-5.424782],[7.584882,-5.117708],[-7.485211,4.784034],[7.019348,-4.833675],[-8.355181,2.872493],[8.593954,8.335290],[-4.228966,8.935153],[-6.434947,8.408322],[4.100652,-2.374471],[-5.270421,8.681650],[-3.262197,-2.173067],[3.711751,-0.533730],[9.311261,-6.058250],[-6.855560,3.453032],[-3.242881,-2.429328],[1.133023,6.696188],[4.983678,5.989227],[3.648745,-9.495270],[8.446668,5.469317],[1.058954,-0.251109],[5.214706,1.442888],[-6.011911,-4.353920],[6.133812,8.289523],[5.966030,9.010011],[6.877732,-5.773896],[8.067929,-1.861590],[8.670505,7.195774],[-7.520127,-3.478082],[6.991531,5.807511],[-8.341266,-0.242707],[-7.055472,-0.052086],[6.731804,-3.305135],[-0.237142,5.304145],[4.736934,-4.358940],[5.782842,2.951684],[-1.233645,-7.917976],[6.988206,3.719627],[8.629517,3.803201],[-4.424511,2.741589],[-6.207400,-6.833851],[6.210025,-1.763504],[5.404471,0.608261],[3.260532,-0.778588],[-9.925168,0.371988],[-5.649102,-2.368000],[-6.627500,3.305396],[1.332964,-7.573463],[-9.044830,3.498878],[-7.942712,-5.793299],[-1.089700,8.192899],[-0.873315,7.414879],[-9.328045,-0.999475],[-8.311712,-9.241334],[0.892024,1.942326],[9.663583,-9.168529],[-3.470011,7.481393],[1.298280,-1.948230],[5.247803,2.386207],[-5.988601,4.795955],[2.450204,4.065874],[-4.258012,4.226447],[-3.875916,-5.683198],[-5.524270,5.394571],[-3.228812,-6.217328],[0.501400,-1.448873],[-0.224075,-4.427718],[-0.529905,1.899234],[-9.331354,9.686439],[-0.491886,-6.734850],[6.280316,-0.422840],[4.277516,-2.696950],[-9.363559,6.346784],[-1.743181,4.675826],[-1.157263,5.793724],[6.901161,-3.703131],[3.487843,-1.581870],[-6.802064,-3.648009],[2.046585,-4.814386],[5.271127,4.668718],[2.956195,9.371541],[-5.584995,-7.296513],[-6.723569,8.179169],[-0.986246,0.241375],[-1.275536,4.055916],[-5.437024,-3.743862],[3.587056,-5.526589],[-0.775341,-3.819392],[5.236343,2.476854],[-8.254147,-4.838581],[6.517379,-0.174168],[4.281165,9.324376],[3.265777,8.324466],[8.309487,-1.378343],[-9.620692,9.776380],[-8.796504,-2.071771],[0.239919,2.319950],[3.564161,-1.046456],[6.769763,-2.415826],[5.136006,-1.329455],[-4.129789,-5.930975],[-4.122657,-2.181328],[-4.266927,9.679579],[-5.172066,-8.777324],[9.340393,6.339362],[1.997114,3.023975],[7.806558,0.933195],[6.251913,1.839596],[8.869379,4.374603],[-9.668554,-0.908775],[3.394445,6.408446],[5.020189,4.987966],[8.991974,1.204071],[1.060393,-2.003304],[-4.117945,8.718482],[4.693955,-1.203085],[-1.082158,-4.932373],[3.917030,4.736292],[-1.320694,-5.016705],[-0.600799,-8.407304],[2.372767,-4.849431],[-3.370988,7.340938],[5.347829,2.271976],[2.768180,9.276652],[5.517615,6.014796],[0.084130,-9.512914],[5.214513,4.881964],[-7.973787,-9.704293],[-1.907204,-4.086230],[5.620548,0.718401],[-8.492824,8.652484],[-5.927037,-4.665909],[7.006948,5.299774],[-8.657856,-9.436656],[-7.170802,-4.228377],[-4.231386,-0.456106],[2.651655,1.945000],[-0.109948,2.721593],[6.028325,9.664790],[-4.872334,-5.660394],[3.361046,-5.049534],[7.558532,5.967403],[-7.056597,-6.677604],[-8.790223,6.521584],[-5.795672,-7.038919],[-4.346477,4.423066],[7.492075,3.469275],[-9.249213,9.754863],[8.486150,-7.946356],[-5.186858,0.661842],[3.294249,6.024368],[-1.010452,3.494455],[-7.004222,-8.622297],[-0.688356,-9.646090],[-4.698067,5.061167],[4.568024,-7.783134],[-5.781031,5.051887],[-5.559507,2.934440],[2.503283,-2.052540],[-0.615893,-6.455312],[3.873728,4.658409],[-3.791055,6.447796],[4.510414,-5.878898],[0.889818,-5.865583],[9.625662,7.466319],[-5.265978,9.424872],[9.774883,3.900431],[1.296870,-8.042575],[-5.803123,-5.208846],[-2.733041,2.150550],[-4.039483,-2.948716],[-9.351280,0.287084],[3.018315,-2.494095],[-1.234662,8.149231],[4.490027,4.039519],[-4.281191,2.458784],[8.170601,2.023959],[-8.418197,4.179255],[-0.309056,-7.882089],[-2.677360,-8.687507],[-0.844214,1.138625],[-5.946543,0.932761],[-4.219695,9.026629],[-6.541582,0.251965],[-7.056482,3.276370],[-5.388783,-3.004188],[0.188792,3.762786],[-9.348044,3.334356],[-3.937923,1.018759],[5.395239,-5.553608],[7.210271,-9.931724],[3.162874,4.991488],[-3.989818,-1.860653],[-0.375564,-8.618699],[8.834476,3.873041],[0.729322,1.881910],[-3.621958,8.132301],[5.032693,0.205237],[9.021418,-6.216464],[6.536549,-8.287711],[1.066175,-5.800343],[9.283242,4.151367],[6.508327,0.734767],[5.224149,-1.786015],[7.186869,5.015683],[-9.252000,-6.496290],[-3.195301,-2.997089],[-7.954310,9.188098],[0.174093,1.015341],[-7.203629,1.159889],[-7.058492,0.948729],[8.244870,2.360891],[8.142544,8.930753],[7.929868,4.850273],[1.653099,1.279102],[-6.290429,0.969686],[9.542546,2.805318],[0.590804,1.800995],[3.660254,6.560549],[-0.494225,3.359929],[8.862165,2.617987],[-4.865056,-9.950010],[-5.716081,-8.705503],[-5.700484,-3.223960],[-9.616097,-7.371530],[4.870394,6.606817],[-4.043844,3.052667],[1.951665,-3.044283],[-3.234963,6.746898],[-5.020472,-0.335681],[-1.585067,0.677596],[-8.984078,-4.162321],[2.791601,-4.552691],[-3.151847,2.742869],[-5.429195,0.217084],[-3.051632,-4.931439],[-2.600147,0.208935],[3.229078,7.359414],[-1.605540,-2.448553],[6.630977,-9.394138],[0.831506,7.353480],[-1.974337,-8.552742],[5.320501,8.265081],[0.472810,-8.063737],[5.521871,-7.751942],[9.255112,-8.349155],[6.491505,-0.140170],[9.248975,4.392057],[4.838443,-1.968423],[-4.926236,-4.433170],[8.236450,4.295962],[1.688391,-1.067087],[3.280678,2.561918],[-6.521416,4.701426],[1.977796,-9.699507],[-6.600963,0.609346],[-8.069346,1.754219],[2.102328,1.272627],[4.588616,6.591029],[-6.012125,-6.744882],[5.299967,5.320251],[4.035031,6.598608],[-9.085976,-5.082405],[9.986698,6.141761],[5.210492,-2.748873],[-2.053847,4.859156],[-7.838833,9.092670],[-4.093406,5.218896],[4.528011,-3.025710],[2.136038,8.232260],[0.356910,-1.624886],[-5.512411,0.611713],[-2.867774,-9.274865],[4.780849,7.132572],[-9.009142,-6.721607],[-4.253751,-0.219851],[-8.434780,-4.579242],[-3.004076,-3.298049],[1.341752,8.387287],[-1.208712,-4.138493],[-5.672309,3.144132],[-4.100674,-7.491850],[4.909251,-1.052201],[-9.244089,-2.660735],[5.348522,-3.951507],[-0.541063,6.716707],[9.726043,4.585640],[1.170180,-2.776843],[-1.045859,0.034428],[-3.642294,-2.634862],[1.540967,4.968917],[7.064779,-4.481420],[1.983301,7.284107],[1.147869,7.981841],[5.281258,-8.816085],[-8.674838,-1.938364],[6.083966,-7.605895],[1.011292,4.655708],[3.732225,-0.951937],[-0.404199,9.097471],[0.656648,-4.487868],[9.648003,6.983447],[-9.040088,-4.888980],[2.325812,-1.859779],[-9.279287,-1.734866],[5.577079,-6.420472],[0.314959,3.863050],[-9.431270,0.454416],[8.409058,-2.335034],[3.168660,8.133329],[-4.450574,7.758519],[4.286323,-3.160974],[-2.944480,2.079269],[-8.804440,-1.992983],[4.047683,-0.462420],[-2.970668,0.149528],[8.373725,-7.273454],[-2.981608,-6.906890],[7.937646,-0.545478],[4.537257,8.172410],[8.071063,9.213404],[-9.845767,4.913283],[-0.356539,5.214172]], dtype = "float64")#candidate|2812|(676, 2)|const|float64
call_2811 = relay.TupleGetItem(func_2678_call(relay.reshape(const_2812.astype('float64'), [8, 13, 13])), 0)
call_2813 = relay.TupleGetItem(func_2680_call(relay.reshape(const_2812.astype('float64'), [8, 13, 13])), 0)
uop_2814 = relay.asin(call_2811.astype('float32')) # shape=(8, 13, 13)
uop_2816 = relay.asin(call_2813.astype('float32')) # shape=(8, 13, 13)
output = relay.Tuple([call_2806,const_2812,uop_2814,])
output2 = relay.Tuple([call_2807,const_2812,uop_2816,])
func_2826 = relay.Function([], output)
mod['func_2826'] = func_2826
mod = relay.transform.InferType()(mod)
output = func_2826()
func_2827 = relay.Function([], output)
mutated_mod['func_2827'] = func_2827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1462_call = mod.get_global_var('func_1462')
func_1464_call = mutated_mod.get_global_var('func_1464')
call_2869 = func_1462_call()
call_2870 = func_1462_call()
output = call_2869
output2 = call_2870
func_2876 = relay.Function([], output)
mod['func_2876'] = func_2876
mod = relay.transform.InferType()(mod)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2876_call = mutated_mod.get_global_var('func_2876')
call_2877 = func_2876_call()
output = call_2877
func_2878 = relay.Function([], output)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_2915 = func_1337_call()
call_2916 = func_1337_call()
output = call_2915
output2 = call_2916
func_2922 = relay.Function([], output)
mod['func_2922'] = func_2922
mod = relay.transform.InferType()(mod)
mutated_mod['func_2922'] = func_2922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2922_call = mutated_mod.get_global_var('func_2922')
call_2923 = func_2922_call()
output = call_2923
func_2924 = relay.Function([], output)
mutated_mod['func_2924'] = func_2924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1897_call = mod.get_global_var('func_1897')
func_1899_call = mutated_mod.get_global_var('func_1899')
call_2945 = relay.TupleGetItem(func_1897_call(), 1)
call_2946 = relay.TupleGetItem(func_1899_call(), 1)
output = call_2945
output2 = call_2946
func_2947 = relay.Function([], output)
mod['func_2947'] = func_2947
mod = relay.transform.InferType()(mod)
output = func_2947()
func_2948 = relay.Function([], output)
mutated_mod['func_2948'] = func_2948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_2966 = func_1216_call()
call_2967 = func_1216_call()
func_2947_call = mod.get_global_var('func_2947')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_2968 = func_2947_call()
call_2969 = func_2947_call()
uop_2977 = relay.exp(call_2968.astype('float64')) # shape=(715,)
uop_2979 = relay.exp(call_2969.astype('float64')) # shape=(715,)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
var_2989 = relay.var("var_2989", dtype = "float32", shape = (144,))#candidate|2989|(144,)|var|float32
call_2988 = relay.TupleGetItem(func_961_call(relay.reshape(call_2966.astype('int16'), [13, 55]), relay.reshape(var_2989.astype('float32'), [144,]), ), 7)
call_2990 = relay.TupleGetItem(func_964_call(relay.reshape(call_2966.astype('int16'), [13, 55]), relay.reshape(var_2989.astype('float32'), [144,]), ), 7)
bop_2993 = relay.logical_xor(uop_2977.astype('uint8'), relay.reshape(call_2966.astype('uint8'), relay.shape_of(uop_2977))) # shape=(715,)
bop_2996 = relay.logical_xor(uop_2979.astype('uint8'), relay.reshape(call_2967.astype('uint8'), relay.shape_of(uop_2979))) # shape=(715,)
output = relay.Tuple([call_2988,var_2989,bop_2993,])
output2 = relay.Tuple([call_2990,var_2989,bop_2996,])
func_3007 = relay.Function([var_2989,], output)
mod['func_3007'] = func_3007
mod = relay.transform.InferType()(mod)
var_3008 = relay.var("var_3008", dtype = "float32", shape = (144,))#candidate|3008|(144,)|var|float32
output = func_3007(var_3008)
func_3009 = relay.Function([var_3008], output)
mutated_mod['func_3009'] = func_3009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_3079 = relay.TupleGetItem(func_1560_call(), 0)
call_3080 = relay.TupleGetItem(func_1562_call(), 0)
func_2574_call = mod.get_global_var('func_2574')
func_2577_call = mutated_mod.get_global_var('func_2577')
const_3085 = relay.const([-2,-1,4,9,6,-2,-3,4,-1,10,6,5,-1,-1,-5,-10,7,-4,-5,4,-10,4,5,9,-6,1,-3,1,-3,9,-7,5,-8,5,-3,5,-3,-7,8,-6,9,8,6,-5,2,-7,1,-2,-2,-2,-8,-8,-7,3,5,2,9,-5,7,-1,6,-7,1,-7,10,8,10,1,5,5,-3,3,6,6,1,-4,9,-5,-3,-3,-4,1,9,3,7,-3,6,-2,-5,8,10,-3,3,9,-10,9,3,10,-3,5,1,-10,-5,9,-5,-6,-9,3,-6,-6,-3,10], dtype = "uint16")#candidate|3085|(112,)|const|uint16
call_3084 = relay.TupleGetItem(func_2574_call(relay.reshape(const_3085.astype('uint16'), [2, 8, 7]), relay.reshape(const_3085.astype('uint16'), [2, 8, 7]), ), 2)
call_3086 = relay.TupleGetItem(func_2577_call(relay.reshape(const_3085.astype('uint16'), [2, 8, 7]), relay.reshape(const_3085.astype('uint16'), [2, 8, 7]), ), 2)
output = relay.Tuple([call_3079,call_3084,const_3085,])
output2 = relay.Tuple([call_3080,call_3086,const_3085,])
func_3108 = relay.Function([], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mutated_mod.get_global_var('func_3108')
call_3109 = func_3108_call()
output = call_3109
func_3110 = relay.Function([], output)
mutated_mod['func_3110'] = func_3110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3129 = relay.var("var_3129", dtype = "float64", shape = (3, 10, 4))#candidate|3129|(3, 10, 4)|var|float64
uop_3130 = relay.atanh(var_3129.astype('float64')) # shape=(3, 10, 4)
output = relay.Tuple([uop_3130,])
output2 = relay.Tuple([uop_3130,])
func_3140 = relay.Function([var_3129,], output)
mod['func_3140'] = func_3140
mod = relay.transform.InferType()(mod)
mutated_mod['func_3140'] = func_3140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3141 = relay.var("var_3141", dtype = "float64", shape = (3, 10, 4))#candidate|3141|(3, 10, 4)|var|float64
func_3140_call = mutated_mod.get_global_var('func_3140')
call_3142 = func_3140_call(var_3141)
output = call_3142
func_3143 = relay.Function([var_3141], output)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3110_call = mutated_mod.get_global_var('func_3110')
call_3145 = relay.TupleGetItem(func_3108_call(), 1)
call_3146 = relay.TupleGetItem(func_3110_call(), 1)
output = call_3145
output2 = call_3146
func_3161 = relay.Function([], output)
mod['func_3161'] = func_3161
mod = relay.transform.InferType()(mod)
mutated_mod['func_3161'] = func_3161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3161_call = mutated_mod.get_global_var('func_3161')
call_3162 = func_3161_call()
output = call_3162
func_3163 = relay.Function([], output)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_3174 = func_1172_call()
call_3175 = func_1172_call()
var_3178 = relay.var("var_3178", dtype = "float64", shape = (11, 3, 2))#candidate|3178|(11, 3, 2)|var|float64
bop_3179 = relay.floor_mod(call_3174.astype('float32'), relay.reshape(var_3178.astype('float32'), relay.shape_of(call_3174))) # shape=(11, 3, 2)
bop_3182 = relay.floor_mod(call_3175.astype('float32'), relay.reshape(var_3178.astype('float32'), relay.shape_of(call_3175))) # shape=(11, 3, 2)
func_2678_call = mod.get_global_var('func_2678')
func_2680_call = mutated_mod.get_global_var('func_2680')
const_3188 = relay.const([[-7.130531,5.679185,-1.858642,0.690274],[-7.205046,-9.442721,0.243579,-5.939027],[-8.662086,1.154225,7.062252,3.935341],[8.456329,-3.682083,-1.058713,-5.647482],[-0.306896,-6.024732,3.514402,4.248924],[-0.397332,-6.635828,-3.223155,-0.298298],[1.514856,8.955989,-3.543519,-5.588060],[7.003166,9.543753,-8.201704,6.434385],[-1.392557,5.560335,3.030715,2.694736],[-0.786205,4.550246,-2.559300,6.539736],[0.054139,-5.905613,8.871941,2.032613],[3.496567,0.932666,-0.177748,-9.827550],[-7.807526,-8.544737,-2.427791,2.723466],[-8.487388,-2.598179,9.869153,-3.686164],[-6.176768,-4.187976,1.900825,-0.636545],[6.329478,-4.829321,-0.356937,-3.820297],[3.935257,4.761283,-4.839065,-2.314326],[8.145236,-3.898820,5.968325,-6.963501],[1.980724,4.840322,-1.444675,-3.129584],[8.127090,-9.638466,3.250993,-0.393375],[9.514010,8.583823,9.645259,-0.905835],[-9.458218,0.724018,4.025102,9.809457],[-6.456990,-8.284217,-4.564016,-2.515588],[8.550377,-8.967708,8.142609,8.629810],[-9.623378,7.163955,3.062577,-1.922235],[-1.070392,3.052027,3.737214,-3.069369],[3.043604,3.958104,2.389677,-2.998056],[-2.657876,-3.137789,4.105012,-5.400962],[-4.930740,1.020644,-9.786063,0.146896],[7.310208,-2.074929,1.242441,3.851842],[7.261970,-4.342313,-2.878023,-6.661046],[5.976058,7.069320,-2.760327,-4.455170],[1.413815,-1.347222,-2.211010,-6.790634],[-9.236634,-7.998553,8.064179,9.659860],[-8.902215,-2.795381,-9.577439,2.749002],[7.685810,-3.046812,7.554912,-1.029406],[4.205176,-9.050887,-4.163675,6.408580],[5.194012,-8.905702,0.909920,-9.909030],[3.970621,9.987593,3.732635,-1.623262],[9.470435,-4.674186,0.411972,8.373802],[-0.459644,-4.002192,-7.205233,6.993295],[-4.144339,-3.047010,9.970951,1.401940],[3.468115,-6.948746,-7.857287,3.410035],[-7.819015,-6.119864,-2.272577,-6.093440],[4.835401,5.795149,-6.116265,9.754663],[-7.224140,9.770133,-7.257929,8.791395],[9.894312,-2.176109,-3.471957,5.858026],[-5.887492,-0.502680,8.739854,5.950591],[-2.421001,-5.245842,7.131917,5.771241],[9.359128,-7.012454,6.770322,-8.722247],[4.574719,-7.810682,-5.110122,-5.301968],[8.222346,-4.930076,0.103604,2.705130],[-2.173209,1.804785,-1.766755,-8.287697],[4.897600,6.495338,-1.166992,4.537433],[4.372608,6.038790,3.660235,-6.027898],[-8.686760,0.465407,-0.871783,7.172206],[-6.872226,-9.505642,9.863161,-9.998270],[8.425185,-1.840087,4.058646,-8.544548],[3.802681,2.987726,2.870225,-1.792359],[-7.416618,-8.588330,-5.336058,4.800570],[-5.249849,4.778712,-2.483961,-0.301588],[-4.117141,8.066341,-7.099773,-9.959913],[8.258312,-0.079162,5.054679,3.820098],[-3.592382,-8.932562,3.876579,7.316866],[4.617671,-2.685691,-8.209124,-8.797972],[7.597490,0.757893,2.615830,4.114520],[9.995577,9.188339,-9.797985,-8.496651],[-4.660851,-0.115631,-6.766430,1.429736],[-4.020423,-0.682265,-2.593828,9.231750],[-3.887428,7.344421,-5.287285,6.883934],[-8.483311,-1.440700,7.963362,7.190817],[8.200828,0.933948,6.192158,-4.419965],[-5.805414,1.129627,7.405854,-0.281498],[9.361587,5.664878,9.899599,3.194568],[7.976144,-2.826049,-2.371520,0.654960],[6.320948,2.954797,3.373639,1.619229],[-8.476200,6.841146,4.459964,-8.054785],[9.745838,3.479621,-8.570037,8.287260],[-1.195911,-1.133756,6.859405,3.187819],[-1.874129,-2.609715,-5.221477,-2.079242],[-8.020241,-9.299829,5.391479,-9.298779],[-0.756291,8.999622,-5.688512,-2.860958],[7.942094,4.074407,-3.083279,8.866284],[5.660068,2.719347,7.971860,5.012551],[5.518810,-3.806256,-6.748830,1.555782],[-4.789357,6.417924,9.442856,2.100714],[-8.718183,-1.019741,9.478405,9.959298],[8.687915,-6.628157,-0.464382,-5.786292],[8.061745,6.964712,9.657913,-9.488741],[0.965338,-0.535640,-3.808284,3.786657],[-3.579001,5.246518,-2.914130,-1.042934],[5.751429,-8.089866,-6.150575,8.146567],[1.397159,2.506210,-2.506589,-8.208092],[1.379524,-9.735314,4.394775,-0.639634],[2.196436,2.748169,1.653712,2.796608],[6.697512,-9.755363,-9.667644,6.213726],[-2.536317,-1.158563,3.008280,8.295242],[4.728703,-0.177411,1.746593,-2.475126],[-9.967431,-9.993145,-8.873228,9.053259],[-5.213938,7.283144,5.456584,-9.459327],[-3.282558,-6.353527,-5.318844,-0.228956],[-1.964229,-1.641100,-7.726630,-5.121020],[-3.898718,-2.584753,6.787215,-8.711648],[2.807810,-9.690686,2.154343,8.622371],[-5.217584,0.102909,4.452763,-1.919444],[-1.538400,1.346205,-1.326590,8.765077],[1.704778,9.303954,7.740166,-0.545747],[3.360981,-5.197631,1.763247,-8.526079],[0.415216,-6.909913,-5.475932,-3.462089],[0.825936,4.622528,-5.907425,6.017382],[-1.283610,-1.821856,-3.188381,-6.936140],[3.573914,-4.286244,-6.950059,-0.642462],[-3.220097,-3.387387,-0.236752,0.916763],[1.434980,6.249655,-3.607950,4.202002],[1.516493,-0.590342,-5.636477,1.811559],[2.854032,-1.566939,5.681640,-8.988776],[-0.190442,-2.894656,3.723197,-5.236326],[-6.361277,-1.927175,-9.239928,8.527266],[0.373899,-0.841139,-1.917066,-5.678732],[7.033298,-6.979181,3.472702,4.061610],[8.003850,-6.087193,6.618240,2.893620],[-3.516823,-8.024097,9.861922,-6.374715],[-2.617704,-9.212742,2.506808,-8.721417],[-6.533318,9.247335,3.042235,5.285274],[-7.603968,-7.971725,-4.306023,1.342088],[1.180979,-5.195612,4.061652,-0.133799],[1.040880,-9.296348,2.229595,6.305556],[4.887928,6.713353,3.308271,-2.545560],[5.395233,-9.325921,-8.298619,-3.493139],[2.977314,4.263779,-7.954640,-9.547556],[-0.201495,-0.564847,-7.883684,2.340347],[-0.604290,-6.695620,2.994546,9.453843],[5.551786,5.091836,1.138692,-8.632142],[-9.598533,6.869873,7.244941,-2.733873],[-8.719867,9.445590,-1.507362,5.233919],[5.602593,6.234241,-5.179882,4.083182],[-6.457359,2.668107,8.092700,-9.382178],[6.472453,-3.417710,-3.374402,5.286876],[7.520987,7.805834,0.830482,-9.513445],[-6.998116,-2.498018,-7.596998,2.675608],[-8.173920,-6.330371,-7.654991,6.752545],[-6.993733,-5.710736,-8.430344,4.444479],[-3.248148,9.949831,2.618459,-6.119318],[8.632135,-9.063452,7.397845,-8.510564],[4.945218,3.743636,-8.446926,9.790215],[-5.402833,0.531810,9.918624,-3.014870],[3.969781,-5.960977,1.996004,-1.818734],[5.389680,-5.074555,-7.162180,-4.529040],[5.963555,9.545091,-5.968374,-5.794043],[-6.759182,2.564607,-2.530700,9.000333],[9.005364,0.437966,1.324947,-2.498292],[-8.071740,9.489343,9.262032,-3.639975],[7.917851,-9.295901,9.029039,-5.767589],[-0.453021,5.567790,6.330594,-1.981322],[-1.788022,4.652201,-4.878166,-8.634377],[-9.673459,1.396349,3.986059,-7.356763],[-1.653798,-8.616615,6.783566,2.310901],[-8.049132,-8.621798,-2.499920,4.854315],[-7.909605,-4.276205,-2.760588,-1.656236],[-9.537606,-3.635535,8.825597,-2.731973],[-7.962260,8.236531,8.138317,2.665579],[-9.687860,2.648290,4.354298,2.531050],[4.978092,-9.082957,2.979125,-6.171486],[-3.217377,6.536092,6.249886,1.429093],[3.473399,7.756535,-4.372735,-7.139094],[-1.203074,0.891658,-3.987873,-5.186340],[-1.208460,7.478800,9.431656,1.616796],[3.310019,9.272467,-8.688311,-6.229399],[-7.887403,-9.622365,-3.463496,5.165801],[-6.974931,-2.386097,1.197832,-1.512364],[4.863438,6.521858,3.147547,8.940209],[-0.726203,0.047542,8.537660,-6.765881],[3.695342,-1.898319,1.561077,-2.935403],[-1.360714,5.387802,4.301102,5.202737],[1.150039,9.917996,4.635149,3.133770],[-8.224048,-8.437090,-3.343169,1.057176],[0.933692,-6.481582,9.402318,-6.014872],[2.207464,1.978877,2.891425,-0.598322],[-8.115445,6.369536,-9.234628,6.435374],[6.580760,-1.639237,-5.827906,5.069312],[-2.534401,-6.558637,0.921281,5.307736],[-9.259809,7.948101,-2.479227,3.400456],[-5.402472,-9.273670,8.823890,0.482175],[-3.549406,4.784857,8.328066,-3.382762],[-0.396511,1.820998,-5.441570,-0.989303],[0.552789,-4.314959,5.943814,-8.370787],[2.436170,-9.978248,-6.098431,9.957469],[-9.943759,4.268094,-2.472709,5.924101],[1.689731,-6.639722,0.464146,-0.695957],[-2.159780,-2.558219,-5.864981,3.224503],[-4.876487,8.620507,1.868559,8.688464],[9.510691,9.006782,-1.298051,-3.831770],[3.191843,6.228828,8.226705,-0.717279],[6.813488,-7.622691,7.834525,7.228373],[1.095681,6.586293,9.947929,-5.723115],[6.813145,-8.097423,-7.301486,3.259604],[3.841940,5.820258,7.929706,9.953988],[-6.335077,-6.096981,3.783716,6.593551],[-0.436945,-4.390945,4.606727,-8.862818],[-5.088013,1.434414,9.616445,5.242959],[8.305851,-0.428586,-8.289557,2.257807],[8.038420,-7.676574,1.948231,1.140755],[-3.995439,-9.539577,3.660579,9.100389],[5.251146,-5.765406,8.917126,-8.703647],[-2.953535,0.910340,-8.100250,-1.716888],[8.805186,-8.461086,-8.767652,-2.436293],[1.980711,9.881616,-5.278879,3.192658],[4.453127,-2.866993,1.725422,1.260774],[0.307466,-1.893301,-2.844201,0.369222],[9.120814,-6.841795,-6.547512,0.387421],[6.816466,-3.970051,1.844483,-1.112661],[5.310568,4.676307,0.737620,3.249189],[-6.067137,-4.430169,-7.967658,-1.800791],[5.484080,7.492517,1.666712,-8.795667],[8.436624,-2.128141,-7.918868,8.081573],[-3.887091,-2.807854,-9.509742,-6.843171],[2.723251,9.170012,8.224935,0.161379],[-8.448987,-6.811502,8.715075,4.803449],[1.323543,8.601381,-4.381123,5.810802],[-1.690902,-8.689836,3.729635,8.328202],[3.685861,-7.620949,-0.106590,7.704047],[2.278478,-7.886029,-4.912985,5.155985],[-3.348036,0.383392,-5.039573,3.667668],[-0.319057,3.296512,-2.979244,-0.847423],[4.565895,-7.774621,5.395910,-3.121246],[6.572089,3.045803,-6.905987,4.111705],[-1.404739,9.736690,-1.019776,2.851106],[-9.671172,-5.049923,6.480866,-4.967664],[-7.741857,-3.923696,1.481420,-5.552460],[4.394273,-4.324685,-8.338479,-0.033453],[4.847063,3.565936,-9.193047,-0.382833],[3.631363,-6.422422,-6.908347,0.397070],[8.027213,-4.446280,4.709225,-9.868130],[-2.905222,-3.135443,-4.779117,2.310617],[4.810962,1.280573,8.680214,-4.089206],[6.960008,1.944047,-2.789277,-5.258742],[-2.101491,-7.217915,0.512688,5.818855],[1.184817,-2.077056,-6.373203,0.809043],[5.297846,-0.627674,7.317138,4.635971],[3.648354,-3.495696,-8.900281,9.230219],[5.396438,-4.304863,-3.458968,-5.905375],[2.142310,-7.406894,2.649386,3.325237],[-7.866733,6.818208,8.729159,-4.839994],[-0.870489,-5.207667,0.403597,4.904877],[4.791914,4.244253,3.727420,4.112645],[6.124416,8.718075,-3.956161,4.874631],[-3.798655,-3.048174,6.112857,-2.041334],[5.400785,-3.433549,-4.723469,4.233637],[2.028289,-1.242386,-5.262673,-7.971640],[4.850773,-5.255753,-6.935119,-2.346301],[6.752765,-5.258742,-6.912704,-1.057959],[4.482251,-9.768974,-1.708321,5.935961],[5.618250,2.694016,-7.994571,7.181033],[1.369378,2.763717,3.731923,-1.391623],[-5.486355,2.351878,6.629358,-5.285022],[2.329704,-0.343409,-2.390939,9.792246],[1.968076,6.319965,-8.730235,5.277349],[7.416725,-8.130550,4.531010,0.532471],[9.533416,-0.093991,-8.225239,-3.831762],[5.456640,6.448441,-9.425376,7.799908],[3.283255,0.009924,7.208621,3.111317],[2.024743,9.469289,-2.441838,-3.254414],[-0.006098,-7.386856,2.244715,-4.352529],[-3.525828,-3.711240,-5.898180,-6.854657],[4.255423,-4.023985,5.487504,1.735375],[8.667099,8.565193,5.220259,2.031821],[-8.715489,-8.945188,-4.684419,-3.965760],[-3.496379,-1.585511,5.424389,5.261446],[-7.700498,1.935346,0.704592,2.718467],[-6.030828,0.972306,-5.005811,1.819324],[-8.037880,9.702907,-4.811492,1.096065],[-0.803361,4.319262,4.170223,-4.163625],[-2.138523,1.959299,-5.225709,-0.733834],[0.939330,-9.898189,4.263354,-1.119405],[8.326503,-8.780606,4.984403,5.440825],[5.606697,6.094845,6.363468,0.200880],[-5.922818,3.131431,2.552115,7.619256],[8.941831,-9.317120,7.188119,2.239085],[-1.779304,-4.720331,8.444758,-8.269455],[-3.104818,7.348364,4.106422,-5.398454],[9.856009,0.949653,1.735690,4.779552],[-4.046413,2.196933,-9.784188,4.481591],[8.095404,5.582647,0.372937,8.950168],[2.876514,5.537415,7.699370,-4.522441],[3.499584,3.281544,-1.470490,-9.408707],[3.317353,-0.123727,-7.409793,-4.421907],[4.186163,-6.517098,8.209532,1.769655],[9.471830,-7.055006,-0.329610,0.587695],[-2.990669,-0.108173,-3.521446,5.438979],[1.442830,5.160787,4.272321,6.468991],[0.522846,7.553050,6.346350,-8.414857],[7.295638,-4.778268,2.825801,-8.399085],[-7.382820,9.292357,9.230220,-6.625959],[-0.530235,-5.609925,-6.738337,5.151435],[5.152700,-4.220319,0.864374,2.921533],[8.913507,-2.347028,-6.760279,-9.328476],[6.748029,9.063477,0.186881,8.497174],[5.117174,9.628842,0.947606,-5.381101],[-7.828480,-0.815545,6.563409,-8.348121],[5.109828,7.403161,0.989804,-1.667789],[6.548667,1.182142,-7.419447,9.751505],[-7.688712,2.675686,2.218536,7.585414],[-9.291535,3.775522,2.276940,8.109765],[-7.323286,-7.101488,-4.717609,-6.529407],[-3.858184,-0.939792,7.208742,9.256002],[2.477273,9.953006,-6.466176,-7.984993],[-2.153055,-4.404465,1.698003,-7.868062],[-3.146521,-5.503606,-5.357896,5.281840],[-5.223543,3.436803,2.841720,-3.536454],[7.527032,0.986574,-2.489226,-5.516648],[5.252538,-3.510634,-8.487233,-6.891896],[-2.812748,-6.650665,3.559667,6.777740],[3.461860,0.789217,3.230714,9.392310],[-4.165927,-0.093004,-4.936515,7.070142],[5.784925,5.717005,8.411296,5.915431],[-9.874732,-7.674883,5.283146,9.479197],[-2.378783,3.123361,-9.976473,-4.868153],[2.297878,7.992235,9.506727,5.419859],[8.633164,9.889656,-9.511201,-4.957080],[-2.423085,-3.047938,-0.409556,-4.580797],[0.604940,0.077375,0.714611,-6.779323],[-6.126415,-6.960013,-1.977374,3.129286],[-8.234232,-9.544557,9.940764,1.205507],[2.753085,1.755988,-9.939418,-6.345911],[1.903045,1.834110,0.210267,7.317137],[-8.519993,-9.078530,2.574290,-9.002629],[-2.129178,-1.822240,1.571802,6.272166],[9.326447,-1.592536,-0.364482,3.539863],[-4.175194,-5.512219,-4.403226,-7.198724],[-0.109093,-5.359387,-1.548759,8.315818],[3.571203,-0.836460,-1.761316,-1.384649],[-7.855504,0.450364,1.763124,-6.545091],[8.668774,-6.934799,-4.044392,-9.599798],[7.212982,-9.171737,7.295654,-5.065739],[5.783808,2.191254,-8.678700,4.305337],[4.883564,7.248253,-0.082890,-8.753329],[9.480438,6.661203,8.274326,-2.688334],[-2.496550,-0.308046,-1.329129,2.143100]], dtype = "float64")#candidate|3188|(338, 4)|const|float64
call_3187 = relay.TupleGetItem(func_2678_call(relay.reshape(const_3188.astype('float64'), [8, 13, 13])), 0)
call_3189 = relay.TupleGetItem(func_2680_call(relay.reshape(const_3188.astype('float64'), [8, 13, 13])), 0)
uop_3198 = relay.sqrt(const_3188.astype('float32')) # shape=(338, 4)
uop_3201 = relay.acos(uop_3198.astype('float64')) # shape=(338, 4)
bop_3209 = relay.logical_and(bop_3179.astype('bool'), relay.reshape(call_3174.astype('bool'), relay.shape_of(bop_3179))) # shape=(11, 3, 2)
bop_3212 = relay.logical_and(bop_3182.astype('bool'), relay.reshape(call_3175.astype('bool'), relay.shape_of(bop_3182))) # shape=(11, 3, 2)
output = relay.Tuple([call_3187,uop_3201,bop_3209,])
output2 = relay.Tuple([call_3189,uop_3201,bop_3212,])
func_3230 = relay.Function([var_3178,], output)
mod['func_3230'] = func_3230
mod = relay.transform.InferType()(mod)
mutated_mod['func_3230'] = func_3230
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3231 = relay.var("var_3231", dtype = "float64", shape = (11, 3, 2))#candidate|3231|(11, 3, 2)|var|float64
func_3230_call = mutated_mod.get_global_var('func_3230')
call_3232 = func_3230_call(var_3231)
output = call_3232
func_3233 = relay.Function([var_3231], output)
mutated_mod['func_3233'] = func_3233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_3268 = func_1575_call()
call_3269 = func_1575_call()
uop_3270 = relay.sin(call_3268.astype('float32')) # shape=(6, 13, 11)
uop_3272 = relay.sin(call_3269.astype('float32')) # shape=(6, 13, 11)
output = uop_3270
output2 = uop_3272
func_3276 = relay.Function([], output)
mod['func_3276'] = func_3276
mod = relay.transform.InferType()(mod)
output = func_3276()
func_3277 = relay.Function([], output)
mutated_mod['func_3277'] = func_3277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_3296 = relay.TupleGetItem(func_1051_call(), 3)
call_3297 = relay.TupleGetItem(func_1052_call(), 3)
output = relay.Tuple([call_3296,])
output2 = relay.Tuple([call_3297,])
func_3298 = relay.Function([], output)
mod['func_3298'] = func_3298
mod = relay.transform.InferType()(mod)
output = func_3298()
func_3299 = relay.Function([], output)
mutated_mod['func_3299'] = func_3299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_3307 = relay.TupleGetItem(func_1560_call(), 0)
call_3308 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([call_3307,])
output2 = relay.Tuple([call_3308,])
func_3317 = relay.Function([], output)
mod['func_3317'] = func_3317
mod = relay.transform.InferType()(mod)
mutated_mod['func_3317'] = func_3317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3317_call = mutated_mod.get_global_var('func_3317')
call_3318 = func_3317_call()
output = call_3318
func_3319 = relay.Function([], output)
mutated_mod['func_3319'] = func_3319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3317_call = mod.get_global_var('func_3317')
func_3319_call = mutated_mod.get_global_var('func_3319')
call_3333 = relay.TupleGetItem(func_3317_call(), 0)
call_3334 = relay.TupleGetItem(func_3319_call(), 0)
output = call_3333
output2 = call_3334
func_3345 = relay.Function([], output)
mod['func_3345'] = func_3345
mod = relay.transform.InferType()(mod)
output = func_3345()
func_3346 = relay.Function([], output)
mutated_mod['func_3346'] = func_3346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1831_call = mod.get_global_var('func_1831')
func_1832_call = mutated_mod.get_global_var('func_1832')
call_3364 = relay.TupleGetItem(func_1831_call(), 0)
call_3365 = relay.TupleGetItem(func_1832_call(), 0)
uop_3380 = relay.log10(call_3364.astype('float64')) # shape=(11, 3, 2)
uop_3382 = relay.log10(call_3365.astype('float64')) # shape=(11, 3, 2)
output = relay.Tuple([uop_3380,])
output2 = relay.Tuple([uop_3382,])
func_3400 = relay.Function([], output)
mod['func_3400'] = func_3400
mod = relay.transform.InferType()(mod)
mutated_mod['func_3400'] = func_3400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3400_call = mutated_mod.get_global_var('func_3400')
call_3401 = func_3400_call()
output = call_3401
func_3402 = relay.Function([], output)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3403 = relay.var("var_3403", dtype = "uint8", shape = (5, 6, 11))#candidate|3403|(5, 6, 11)|var|uint8
var_3404 = relay.var("var_3404", dtype = "uint8", shape = (5, 6, 11))#candidate|3404|(5, 6, 11)|var|uint8
bop_3405 = relay.bitwise_xor(var_3403.astype('uint8'), relay.reshape(var_3404.astype('uint8'), relay.shape_of(var_3403))) # shape=(5, 6, 11)
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_3417 = relay.TupleGetItem(func_1791_call(), 0)
call_3418 = relay.TupleGetItem(func_1792_call(), 0)
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_3419 = func_3345_call()
call_3420 = func_3345_call()
func_1710_call = mod.get_global_var('func_1710')
func_1712_call = mutated_mod.get_global_var('func_1712')
var_3441 = relay.var("var_3441", dtype = "int32", shape = (294,))#candidate|3441|(294,)|var|int32
call_3440 = relay.TupleGetItem(func_1710_call(relay.reshape(var_3441.astype('int32'), [294,])), 4)
call_3442 = relay.TupleGetItem(func_1712_call(relay.reshape(var_3441.astype('int32'), [294,])), 4)
uop_3459 = relay.erf(call_3440.astype('float32')) # shape=(65, 11)
uop_3461 = relay.erf(call_3442.astype('float32')) # shape=(65, 11)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_3463 = relay.TupleGetItem(func_1546_call(), 1)
call_3464 = relay.TupleGetItem(func_1548_call(), 1)
output = relay.Tuple([bop_3405,call_3417,call_3419,var_3441,uop_3459,call_3463,])
output2 = relay.Tuple([bop_3405,call_3418,call_3420,var_3441,uop_3461,call_3464,])
func_3468 = relay.Function([var_3403,var_3404,var_3441,], output)
mod['func_3468'] = func_3468
mod = relay.transform.InferType()(mod)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3468_call = mutated_mod.get_global_var('func_3468')
var_3470 = relay.var("var_3470", dtype = "uint8", shape = (5, 6, 11))#candidate|3470|(5, 6, 11)|var|uint8
var_3471 = relay.var("var_3471", dtype = "uint8", shape = (5, 6, 11))#candidate|3471|(5, 6, 11)|var|uint8
var_3472 = relay.var("var_3472", dtype = "int32", shape = (294,))#candidate|3472|(294,)|var|int32
call_3469 = func_3468_call(var_3470,var_3471,var_3472,)
output = call_3469
func_3473 = relay.Function([var_3470,var_3471,var_3472,], output)
mutated_mod['func_3473'] = func_3473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1560_call = mod.get_global_var('func_1560')
func_1562_call = mutated_mod.get_global_var('func_1562')
call_3502 = relay.TupleGetItem(func_1560_call(), 0)
call_3503 = relay.TupleGetItem(func_1562_call(), 0)
output = relay.Tuple([call_3502,])
output2 = relay.Tuple([call_3503,])
func_3504 = relay.Function([], output)
mod['func_3504'] = func_3504
mod = relay.transform.InferType()(mod)
mutated_mod['func_3504'] = func_3504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3504_call = mutated_mod.get_global_var('func_3504')
call_3505 = func_3504_call()
output = call_3505
func_3506 = relay.Function([], output)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3568 = relay.var("var_3568", dtype = "int8", shape = ())#candidate|3568|()|var|int8
const_3569 = relay.const([[[9,-2,-3,-10,-9,-7,-8,6]],[[-4,-6,-3,4,-5,7,-6,6]],[[8,-2,-2,-2,-1,-10,2,6]],[[6,-10,5,9,10,-5,-2,-4]],[[2,-3,-10,-7,-4,1,2,-9]],[[-1,7,4,-7,-9,1,-7,4]],[[-2,-4,-4,3,-8,3,2,-10]],[[2,1,1,-10,-10,4,7,5]],[[-6,10,-9,-1,7,-7,-7,-4]],[[-2,7,-2,-6,10,-10,-7,-6]],[[3,7,1,9,2,-9,-2,-8]],[[-9,-10,1,-3,-3,8,9,6]],[[-10,-4,-9,-8,-8,9,-1,6]]], dtype = "int8")#candidate|3569|(13, 1, 8)|const|int8
bop_3570 = relay.add(var_3568.astype('int8'), const_3569.astype('int8')) # shape=(13, 1, 8)
func_3276_call = mod.get_global_var('func_3276')
func_3277_call = mutated_mod.get_global_var('func_3277')
call_3586 = func_3276_call()
call_3587 = func_3276_call()
const_3592 = relay.const([[[6,2,4,8,8,9,3,10],[-2,-3,-6,9,10,-4,3,-2],[7,-5,-10,8,-6,-2,10,4],[-10,7,7,5,-5,-6,2,-9]],[[2,1,8,1,-6,-4,7,-2],[-3,3,2,9,-7,-8,-1,-10],[-5,-6,-8,-9,-2,-5,-1,3],[6,5,-2,-7,-7,9,-4,-4]],[[8,3,7,-2,-7,9,4,1],[8,7,-8,10,-1,-7,6,7],[-9,9,4,-8,-10,6,-9,-3],[-3,-8,9,10,4,9,7,5]],[[-6,-6,8,9,9,2,-4,-4],[9,2,9,-8,-9,5,2,-4],[4,7,3,10,3,1,-8,6],[6,-3,-10,-10,-9,5,-6,-8]],[[-8,-4,2,3,5,3,-9,-9],[7,-2,7,5,10,7,-10,8],[-3,7,6,9,3,5,10,-7],[-9,5,-2,2,-2,-7,8,-10]],[[-8,4,-8,7,6,-3,7,-5],[-8,10,3,-1,-3,-9,6,9],[6,-9,-10,-6,-10,5,9,-4],[2,-9,8,-4,-10,1,2,-1]],[[-7,5,-9,-4,-9,6,10,-5],[6,9,-3,6,-6,1,-8,8],[-1,3,-1,-8,-7,-8,-6,9],[-6,5,-5,-5,7,1,-6,-3]],[[10,-8,-4,-3,3,-7,-4,-1],[9,10,-5,5,2,-7,4,9],[5,-5,6,-1,-9,9,9,4],[4,-1,10,10,3,2,7,-9]],[[9,-3,-6,-5,5,8,6,1],[5,-10,10,-7,-9,-10,10,-1],[7,-5,2,-6,6,10,-6,-1],[-3,-6,-2,7,3,10,-9,2]],[[8,-7,-7,-7,8,4,-8,-7],[-7,5,-9,3,-2,-5,5,-6],[-7,3,-7,1,-6,1,2,-7],[2,-10,-6,3,7,10,-7,7]],[[1,-2,-10,6,-7,-2,-7,-10],[10,-10,-5,6,-10,6,-3,5],[-4,-2,9,-2,7,5,-4,-2],[5,3,-2,-3,-5,2,-3,2]],[[4,-6,2,-9,-4,2,9,2],[-4,5,-6,-10,7,-1,-1,-10],[6,7,-3,-6,3,7,-2,6],[-6,5,7,-2,-9,7,-5,6]],[[4,-1,2,-6,-7,-6,1,-6],[3,8,-9,6,-5,-10,9,-2],[-3,-2,2,1,10,-8,-9,8],[6,-2,8,4,9,4,4,-3]]], dtype = "int8")#candidate|3592|(13, 4, 8)|const|int8
bop_3593 = relay.bitwise_or(const_3569.astype('int8'), const_3592.astype('int8')) # shape=(13, 4, 8)
uop_3596 = relay.sin(bop_3593.astype('float32')) # shape=(13, 4, 8)
output = relay.Tuple([bop_3570,call_3586,uop_3596,])
output2 = relay.Tuple([bop_3570,call_3587,uop_3596,])
func_3599 = relay.Function([var_3568,], output)
mod['func_3599'] = func_3599
mod = relay.transform.InferType()(mod)
var_3600 = relay.var("var_3600", dtype = "int8", shape = ())#candidate|3600|()|var|int8
output = func_3599(var_3600)
func_3601 = relay.Function([var_3600], output)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_3708 = relay.TupleGetItem(func_2826_call(), 0)
call_3709 = relay.TupleGetItem(func_2827_call(), 0)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_3712 = func_1337_call()
call_3713 = func_1337_call()
output = relay.Tuple([call_3708,call_3712,])
output2 = relay.Tuple([call_3709,call_3713,])
func_3735 = relay.Function([], output)
mod['func_3735'] = func_3735
mod = relay.transform.InferType()(mod)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3735_call = mutated_mod.get_global_var('func_3735')
call_3736 = func_3735_call()
output = call_3736
func_3737 = relay.Function([], output)
mutated_mod['func_3737'] = func_3737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_3755 = func_1337_call()
call_3756 = func_1337_call()
var_3794 = relay.var("var_3794", dtype = "float64", shape = (715,))#candidate|3794|(715,)|var|float64
bop_3795 = relay.minimum(call_3755.astype('float64'), relay.reshape(var_3794.astype('float64'), relay.shape_of(call_3755))) # shape=(715,)
bop_3798 = relay.minimum(call_3756.astype('float64'), relay.reshape(var_3794.astype('float64'), relay.shape_of(call_3756))) # shape=(715,)
output = relay.Tuple([bop_3795,])
output2 = relay.Tuple([bop_3798,])
func_3800 = relay.Function([var_3794,], output)
mod['func_3800'] = func_3800
mod = relay.transform.InferType()(mod)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3801 = relay.var("var_3801", dtype = "float64", shape = (715,))#candidate|3801|(715,)|var|float64
func_3800_call = mutated_mod.get_global_var('func_3800')
call_3802 = func_3800_call(var_3801)
output = call_3802
func_3803 = relay.Function([var_3801], output)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_3835 = relay.TupleGetItem(func_1791_call(), 0)
call_3836 = relay.TupleGetItem(func_1792_call(), 0)
func_1082_call = mod.get_global_var('func_1082')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_3862 = relay.var("var_3862", dtype = "int32", shape = (294,))#candidate|3862|(294,)|var|int32
call_3861 = relay.TupleGetItem(func_1082_call(relay.reshape(var_3862.astype('int32'), [7, 14, 3])), 0)
call_3863 = relay.TupleGetItem(func_1084_call(relay.reshape(var_3862.astype('int32'), [7, 14, 3])), 0)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_3864 = func_1575_call()
call_3865 = func_1575_call()
output = relay.Tuple([call_3835,call_3861,var_3862,call_3864,])
output2 = relay.Tuple([call_3836,call_3863,var_3862,call_3865,])
func_3894 = relay.Function([var_3862,], output)
mod['func_3894'] = func_3894
mod = relay.transform.InferType()(mod)
var_3895 = relay.var("var_3895", dtype = "int32", shape = (294,))#candidate|3895|(294,)|var|int32
output = func_3894(var_3895)
func_3896 = relay.Function([var_3895], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3504_call = mod.get_global_var('func_3504')
func_3506_call = mutated_mod.get_global_var('func_3506')
call_3921 = relay.TupleGetItem(func_3504_call(), 0)
call_3922 = relay.TupleGetItem(func_3506_call(), 0)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_3925 = relay.TupleGetItem(func_1757_call(), 1)
call_3926 = relay.TupleGetItem(func_1759_call(), 1)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_3928 = relay.TupleGetItem(func_1757_call(), 0)
call_3929 = relay.TupleGetItem(func_1759_call(), 0)
output = relay.Tuple([call_3921,call_3925,call_3928,])
output2 = relay.Tuple([call_3922,call_3926,call_3929,])
func_3966 = relay.Function([], output)
mod['func_3966'] = func_3966
mod = relay.transform.InferType()(mod)
mutated_mod['func_3966'] = func_3966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3966_call = mutated_mod.get_global_var('func_3966')
call_3967 = func_3966_call()
output = call_3967
func_3968 = relay.Function([], output)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_3969 = func_3345_call()
call_3970 = func_3345_call()
func_3140_call = mod.get_global_var('func_3140')
func_3143_call = mutated_mod.get_global_var('func_3143')
const_3976 = relay.const([4.231552,-5.491718,-8.597656,-3.009704,9.112627,-6.613362,9.368453,4.162610,3.871307,9.299361,3.463003,-9.806336,0.058536,6.905364,-2.169776,6.461630,7.226891,-4.719693,4.822155,7.858330,-1.929717,5.584162,-5.391583,8.079697,-0.540789,0.782139,8.379686,-2.736000,8.718954,1.072501,-2.932399,-9.885755,-8.488462,-1.035506,5.592542,7.408792,2.415167,-5.548640,3.712453,0.614106,-8.170488,1.647842,7.559855,-6.254039,-6.385599,-9.056458,-3.510885,-1.986626,3.530072,0.489415,-8.050719,5.919814,4.668660,-4.626030,8.916271,-1.814204,-0.189539,7.415843,9.834655,5.699412,9.703030,0.908909,-3.868958,0.896650,-3.848145,-4.050272,2.280825,-6.640943,8.338068,9.152164,1.756681,-7.784251,-5.926623,9.330777,6.585714,0.632692,-5.623511,9.880258,-4.614567,3.754305,5.048787,1.604701,4.579352,2.359475,-8.961713,1.952047,-3.878522,-7.249349,-2.434966,-0.169326,-5.900662,-3.144410,-2.527210,5.870872,-9.913339,0.318150,-5.247410,-3.501637,2.826422,6.349866,6.402838,3.202541,-4.849420,-5.623203,4.541379,5.050195,-3.888674,-4.442170,0.447403,8.369471,-3.010950,0.240769,5.033174,-0.299929,3.637739,6.554941,4.253204,-1.898860,-5.200655,-4.773591], dtype = "float64")#candidate|3976|(120,)|const|float64
call_3975 = relay.TupleGetItem(func_3140_call(relay.reshape(const_3976.astype('float64'), [3, 10, 4])), 0)
call_3977 = relay.TupleGetItem(func_3143_call(relay.reshape(const_3976.astype('float64'), [3, 10, 4])), 0)
output = relay.Tuple([call_3969,call_3975,const_3976,])
output2 = relay.Tuple([call_3970,call_3977,const_3976,])
func_3986 = relay.Function([], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
output = func_3986()
func_3987 = relay.Function([], output)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1462_call = mod.get_global_var('func_1462')
func_1464_call = mutated_mod.get_global_var('func_1464')
call_4022 = func_1462_call()
call_4023 = func_1462_call()
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_4048 = func_3345_call()
call_4049 = func_3345_call()
output = relay.Tuple([call_4022,call_4048,])
output2 = relay.Tuple([call_4023,call_4049,])
func_4068 = relay.Function([], output)
mod['func_4068'] = func_4068
mod = relay.transform.InferType()(mod)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mutated_mod.get_global_var('func_4068')
call_4069 = func_4068_call()
output = call_4069
func_4070 = relay.Function([], output)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_4093 = relay.TupleGetItem(func_1791_call(), 0)
call_4094 = relay.TupleGetItem(func_1792_call(), 0)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4127 = relay.TupleGetItem(func_4068_call(), 1)
call_4128 = relay.TupleGetItem(func_4070_call(), 1)
func_2751_call = mod.get_global_var('func_2751')
func_2754_call = mutated_mod.get_global_var('func_2754')
call_4146 = relay.TupleGetItem(func_2751_call(relay.reshape(call_4127.astype('float64'), [66,])), 0)
call_4147 = relay.TupleGetItem(func_2754_call(relay.reshape(call_4127.astype('float64'), [66,])), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_4149 = relay.TupleGetItem(func_2152_call(), 0)
call_4150 = relay.TupleGetItem(func_2153_call(), 0)
bop_4151 = relay.less(call_4093.astype('bool'), relay.reshape(call_4127.astype('bool'), relay.shape_of(call_4093))) # shape=(11, 3, 2)
bop_4154 = relay.less(call_4094.astype('bool'), relay.reshape(call_4128.astype('bool'), relay.shape_of(call_4094))) # shape=(11, 3, 2)
uop_4171 = relay.log10(call_4149.astype('float32')) # shape=(6, 13, 11)
uop_4173 = relay.log10(call_4150.astype('float32')) # shape=(6, 13, 11)
output = relay.Tuple([call_4146,bop_4151,uop_4171,])
output2 = relay.Tuple([call_4147,bop_4154,uop_4173,])
func_4174 = relay.Function([], output)
mod['func_4174'] = func_4174
mod = relay.transform.InferType()(mod)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mutated_mod.get_global_var('func_4174')
call_4175 = func_4174_call()
output = call_4175
func_4176 = relay.Function([], output)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_4203 = relay.TupleGetItem(func_1757_call(), 0)
call_4204 = relay.TupleGetItem(func_1759_call(), 0)
output = call_4203
output2 = call_4204
func_4209 = relay.Function([], output)
mod['func_4209'] = func_4209
mod = relay.transform.InferType()(mod)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mutated_mod.get_global_var('func_4209')
call_4210 = func_4209_call()
output = call_4210
func_4211 = relay.Function([], output)
mutated_mod['func_4211'] = func_4211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3276_call = mod.get_global_var('func_3276')
func_3277_call = mutated_mod.get_global_var('func_3277')
call_4254 = func_3276_call()
call_4255 = func_3276_call()
output = call_4254
output2 = call_4255
func_4270 = relay.Function([], output)
mod['func_4270'] = func_4270
mod = relay.transform.InferType()(mod)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mutated_mod.get_global_var('func_4270')
call_4271 = func_4270_call()
output = call_4271
func_4272 = relay.Function([], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_4278 = relay.TupleGetItem(func_1051_call(), 4)
call_4279 = relay.TupleGetItem(func_1052_call(), 4)
output = call_4278
output2 = call_4279
func_4295 = relay.Function([], output)
mod['func_4295'] = func_4295
mod = relay.transform.InferType()(mod)
output = func_4295()
func_4296 = relay.Function([], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3110_call = mutated_mod.get_global_var('func_3110')
call_4305 = relay.TupleGetItem(func_3108_call(), 0)
call_4306 = relay.TupleGetItem(func_3110_call(), 0)
output = relay.Tuple([call_4305,])
output2 = relay.Tuple([call_4306,])
func_4326 = relay.Function([], output)
mod['func_4326'] = func_4326
mod = relay.transform.InferType()(mod)
output = func_4326()
func_4327 = relay.Function([], output)
mutated_mod['func_4327'] = func_4327
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4339 = relay.var("var_4339", dtype = "float32", shape = (11, 6, 7))#candidate|4339|(11, 6, 7)|var|float32
var_4340 = relay.var("var_4340", dtype = "float32", shape = (11, 6, 7))#candidate|4340|(11, 6, 7)|var|float32
bop_4341 = relay.greater_equal(var_4339.astype('bool'), relay.reshape(var_4340.astype('bool'), relay.shape_of(var_4339))) # shape=(11, 6, 7)
output = relay.Tuple([bop_4341,])
output2 = relay.Tuple([bop_4341,])
func_4353 = relay.Function([var_4339,var_4340,], output)
mod['func_4353'] = func_4353
mod = relay.transform.InferType()(mod)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4353_call = mutated_mod.get_global_var('func_4353')
var_4355 = relay.var("var_4355", dtype = "float32", shape = (11, 6, 7))#candidate|4355|(11, 6, 7)|var|float32
var_4356 = relay.var("var_4356", dtype = "float32", shape = (11, 6, 7))#candidate|4356|(11, 6, 7)|var|float32
call_4354 = func_4353_call(var_4355,var_4356,)
output = call_4354
func_4357 = relay.Function([var_4355,var_4356,], output)
mutated_mod['func_4357'] = func_4357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3110_call = mutated_mod.get_global_var('func_3110')
call_4364 = relay.TupleGetItem(func_3108_call(), 0)
call_4365 = relay.TupleGetItem(func_3110_call(), 0)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_4368 = func_2922_call()
call_4369 = func_2922_call()
output = relay.Tuple([call_4364,call_4368,])
output2 = relay.Tuple([call_4365,call_4369,])
func_4370 = relay.Function([], output)
mod['func_4370'] = func_4370
mod = relay.transform.InferType()(mod)
output = func_4370()
func_4371 = relay.Function([], output)
mutated_mod['func_4371'] = func_4371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_4376 = relay.TupleGetItem(func_2826_call(), 2)
call_4377 = relay.TupleGetItem(func_2827_call(), 2)
output = relay.Tuple([call_4376,])
output2 = relay.Tuple([call_4377,])
func_4392 = relay.Function([], output)
mod['func_4392'] = func_4392
mod = relay.transform.InferType()(mod)
mutated_mod['func_4392'] = func_4392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mutated_mod.get_global_var('func_4392')
call_4393 = func_4392_call()
output = call_4393
func_4394 = relay.Function([], output)
mutated_mod['func_4394'] = func_4394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3345_call = mod.get_global_var('func_3345')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_4406 = func_3345_call()
call_4407 = func_3345_call()
output = call_4406
output2 = call_4407
func_4412 = relay.Function([], output)
mod['func_4412'] = func_4412
mod = relay.transform.InferType()(mod)
output = func_4412()
func_4413 = relay.Function([], output)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3276_call = mod.get_global_var('func_3276')
func_3277_call = mutated_mod.get_global_var('func_3277')
call_4419 = func_3276_call()
call_4420 = func_3276_call()
func_1710_call = mod.get_global_var('func_1710')
func_1712_call = mutated_mod.get_global_var('func_1712')
var_4436 = relay.var("var_4436", dtype = "int32", shape = (294,))#candidate|4436|(294,)|var|int32
call_4435 = relay.TupleGetItem(func_1710_call(relay.reshape(var_4436.astype('int32'), [294,])), 2)
call_4437 = relay.TupleGetItem(func_1712_call(relay.reshape(var_4436.astype('int32'), [294,])), 2)
output = relay.Tuple([call_4419,call_4435,var_4436,])
output2 = relay.Tuple([call_4420,call_4437,var_4436,])
func_4439 = relay.Function([var_4436,], output)
mod['func_4439'] = func_4439
mod = relay.transform.InferType()(mod)
var_4440 = relay.var("var_4440", dtype = "int32", shape = (294,))#candidate|4440|(294,)|var|int32
output = func_4439(var_4440)
func_4441 = relay.Function([var_4440], output)
mutated_mod['func_4441'] = func_4441
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4470 = relay.const([[[True,True,False,False,False,False,False,True,False,True],[False,True,False,True,False,False,False,True,False,False],[True,True,True,True,True,False,False,True,False,False],[True,False,True,True,False,True,True,False,True,True],[True,True,False,True,False,True,True,True,False,True],[True,False,True,True,True,False,True,True,True,False],[True,False,False,False,True,False,False,True,False,True],[False,False,False,True,True,True,False,True,False,False],[False,True,False,True,False,True,True,False,True,False],[False,False,False,False,True,False,False,True,True,False],[False,True,False,False,False,False,True,False,True,True]],[[True,True,True,True,True,True,True,False,True,False],[True,True,False,True,True,True,True,True,False,False],[False,False,False,False,True,False,False,False,True,True],[False,False,True,True,True,False,False,False,False,False],[False,True,True,True,True,True,False,False,False,True],[True,False,True,True,True,False,True,True,True,False],[True,True,False,False,False,False,False,False,False,False],[False,True,False,False,False,True,True,False,True,True],[True,False,False,True,True,True,True,True,False,False],[True,True,True,False,True,True,False,True,False,False],[False,False,True,False,False,True,True,True,False,False]],[[True,True,True,True,False,False,False,False,True,False],[False,True,False,False,True,True,True,True,True,True],[True,True,False,True,True,False,False,False,False,False],[False,True,False,True,False,False,False,False,False,True],[False,True,False,False,True,True,False,False,False,True],[False,False,False,False,True,True,False,True,True,False],[False,True,True,False,True,True,False,True,True,True],[False,False,False,True,False,True,False,False,True,True],[True,True,True,True,True,False,False,False,True,True],[False,True,True,False,True,False,True,False,True,True],[True,True,True,True,False,True,False,True,False,True]],[[False,True,True,True,True,False,True,True,False,False],[True,True,False,False,True,True,False,False,True,True],[True,False,False,False,True,True,False,True,False,False],[True,False,True,False,True,False,False,False,False,True],[False,True,False,False,True,True,False,True,True,True],[False,True,False,False,True,True,True,True,True,True],[True,False,True,True,False,False,True,False,False,True],[True,True,False,True,True,True,False,True,False,False],[True,False,True,True,True,False,False,False,False,True],[False,True,True,True,False,True,False,False,False,False],[True,True,True,False,True,True,True,True,False,False]],[[True,True,False,False,False,True,True,True,False,True],[False,False,False,False,True,True,True,True,True,True],[False,False,True,True,False,False,False,False,True,True],[False,True,False,False,True,True,False,False,False,False],[True,False,False,False,False,True,True,False,True,False],[True,True,False,False,False,True,False,True,True,False],[False,True,True,False,True,False,True,True,True,True],[True,False,False,True,False,False,True,True,False,False],[True,False,True,False,False,True,True,True,False,False],[True,False,True,False,True,False,False,False,False,True],[False,True,False,False,True,False,False,False,False,True]],[[False,True,True,True,True,True,False,False,False,True],[False,True,True,True,True,False,False,False,True,False],[True,True,True,True,True,False,False,True,False,False],[False,False,True,True,True,True,True,False,True,True],[True,False,True,False,True,False,True,True,False,False],[True,False,True,True,True,False,True,True,True,False],[True,False,False,True,True,False,False,False,False,True],[False,True,True,True,True,True,True,False,False,False],[False,False,False,True,True,True,True,False,True,True],[False,False,True,True,True,False,True,True,True,True],[True,True,False,False,False,True,True,True,False,False]],[[True,False,False,True,False,True,True,True,True,False],[False,False,False,True,True,False,False,False,True,True],[True,False,False,True,True,False,False,False,True,False],[False,True,True,False,False,True,True,True,False,True],[True,True,True,False,False,False,False,False,False,True],[True,True,False,True,False,True,True,False,True,True],[True,False,False,False,False,False,True,False,False,True],[True,True,False,False,True,True,False,True,True,False],[True,True,True,True,False,True,False,False,True,True],[True,False,True,True,False,False,True,True,False,True],[True,True,True,True,True,False,False,True,False,False]],[[True,True,True,False,False,True,True,False,True,False],[True,False,True,True,True,True,True,True,True,True],[False,False,False,True,True,True,False,False,False,False],[False,True,True,True,True,True,False,False,True,False],[False,False,False,True,True,False,True,False,True,False],[True,True,False,True,True,True,False,True,True,False],[True,True,True,False,False,False,True,True,False,False],[True,True,False,True,False,False,True,True,False,False],[True,False,False,True,True,True,True,False,False,False],[False,True,False,False,True,False,False,False,True,True],[False,False,False,False,False,False,False,True,False,True]],[[False,True,True,False,True,False,True,False,False,True],[False,True,False,False,True,True,True,True,True,False],[False,True,True,False,True,True,True,False,False,True],[True,False,False,False,False,True,False,True,True,True],[False,False,False,False,False,True,True,True,False,False],[False,True,True,True,True,True,False,False,True,False],[True,False,True,False,False,True,True,False,True,True],[True,True,True,True,False,True,False,True,True,True],[False,True,False,True,False,True,False,False,False,True],[False,True,True,True,True,True,True,True,False,False],[False,True,True,True,True,True,False,True,True,True]],[[False,True,False,False,False,False,False,True,False,False],[False,True,True,False,False,True,True,True,False,True],[True,False,True,True,True,False,False,True,True,True],[True,False,False,True,False,True,False,False,False,False],[False,False,True,False,False,False,True,False,True,True],[True,True,True,False,False,False,False,False,True,False],[False,False,False,False,False,False,True,False,True,True],[False,True,False,False,True,False,False,False,False,True],[True,False,False,False,False,False,False,True,True,False],[True,True,False,True,True,False,True,True,False,False],[False,True,False,False,True,True,True,True,False,True]],[[False,True,True,True,False,False,True,False,True,False],[False,False,True,True,True,True,True,False,False,False],[True,False,True,True,True,False,False,False,True,False],[True,True,False,True,False,False,True,False,False,False],[False,True,False,False,False,True,True,True,True,True],[True,False,True,False,True,False,False,False,False,True],[False,False,True,False,True,True,False,False,True,True],[False,False,False,False,False,False,True,True,True,False],[False,True,True,True,True,False,False,False,False,False],[True,True,False,False,True,True,False,False,True,True],[True,True,True,True,True,True,True,False,False,False]]], dtype = "bool")#candidate|4470|(11, 11, 10)|const|bool
var_4471 = relay.var("var_4471", dtype = "bool", shape = (11, 11, 10))#candidate|4471|(11, 11, 10)|var|bool
bop_4472 = relay.logical_or(const_4470.astype('bool'), relay.reshape(var_4471.astype('bool'), relay.shape_of(const_4470))) # shape=(11, 11, 10)
uop_4481 = relay.log10(bop_4472.astype('float64')) # shape=(11, 11, 10)
output = uop_4481
output2 = uop_4481
func_4490 = relay.Function([var_4471,], output)
mod['func_4490'] = func_4490
mod = relay.transform.InferType()(mod)
mutated_mod['func_4490'] = func_4490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4491 = relay.var("var_4491", dtype = "bool", shape = (11, 11, 10))#candidate|4491|(11, 11, 10)|var|bool
func_4490_call = mutated_mod.get_global_var('func_4490')
call_4492 = func_4490_call(var_4491)
output = call_4492
func_4493 = relay.Function([var_4491], output)
mutated_mod['func_4493'] = func_4493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4507 = relay.var("var_4507", dtype = "float32", shape = (4, 16, 8))#candidate|4507|(4, 16, 8)|var|float32
uop_4508 = relay.acosh(var_4507.astype('float32')) # shape=(4, 16, 8)
func_3108_call = mod.get_global_var('func_3108')
func_3110_call = mutated_mod.get_global_var('func_3110')
call_4516 = relay.TupleGetItem(func_3108_call(), 0)
call_4517 = relay.TupleGetItem(func_3110_call(), 0)
func_4370_call = mod.get_global_var('func_4370')
func_4371_call = mutated_mod.get_global_var('func_4371')
call_4518 = relay.TupleGetItem(func_4370_call(), 1)
call_4519 = relay.TupleGetItem(func_4371_call(), 1)
func_2131_call = mod.get_global_var('func_2131')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_4522 = func_2131_call()
call_4523 = func_2131_call()
func_4490_call = mod.get_global_var('func_4490')
func_4493_call = mutated_mod.get_global_var('func_4493')
var_4531 = relay.var("var_4531", dtype = "bool", shape = (1210,))#candidate|4531|(1210,)|var|bool
call_4530 = func_4490_call(relay.reshape(var_4531.astype('bool'), [11, 11, 10]))
call_4532 = func_4490_call(relay.reshape(var_4531.astype('bool'), [11, 11, 10]))
uop_4539 = relay.sin(uop_4508.astype('float32')) # shape=(4, 16, 8)
func_4326_call = mod.get_global_var('func_4326')
func_4327_call = mutated_mod.get_global_var('func_4327')
call_4542 = relay.TupleGetItem(func_4326_call(), 0)
call_4543 = relay.TupleGetItem(func_4327_call(), 0)
output = relay.Tuple([call_4516,call_4518,call_4522,call_4530,var_4531,uop_4539,call_4542,])
output2 = relay.Tuple([call_4517,call_4519,call_4523,call_4532,var_4531,uop_4539,call_4543,])
func_4558 = relay.Function([var_4507,var_4531,], output)
mod['func_4558'] = func_4558
mod = relay.transform.InferType()(mod)
var_4559 = relay.var("var_4559", dtype = "float32", shape = (4, 16, 8))#candidate|4559|(4, 16, 8)|var|float32
var_4560 = relay.var("var_4560", dtype = "bool", shape = (1210,))#candidate|4560|(1210,)|var|bool
output = func_4558(var_4559,var_4560,)
func_4561 = relay.Function([var_4559,var_4560,], output)
mutated_mod['func_4561'] = func_4561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_4563 = relay.TupleGetItem(func_4392_call(), 0)
call_4564 = relay.TupleGetItem(func_4394_call(), 0)
output = relay.Tuple([call_4563,])
output2 = relay.Tuple([call_4564,])
func_4577 = relay.Function([], output)
mod['func_4577'] = func_4577
mod = relay.transform.InferType()(mod)
mutated_mod['func_4577'] = func_4577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4577_call = mutated_mod.get_global_var('func_4577')
call_4578 = func_4577_call()
output = call_4578
func_4579 = relay.Function([], output)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_4641 = func_1216_call()
call_4642 = func_1216_call()
uop_4669 = relay.asinh(call_4641.astype('float64')) # shape=(715,)
uop_4671 = relay.asinh(call_4642.astype('float64')) # shape=(715,)
uop_4673 = relay.atanh(uop_4669.astype('float64')) # shape=(715,)
uop_4675 = relay.atanh(uop_4671.astype('float64')) # shape=(715,)
output = uop_4673
output2 = uop_4675
func_4686 = relay.Function([], output)
mod['func_4686'] = func_4686
mod = relay.transform.InferType()(mod)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mutated_mod.get_global_var('func_4686')
call_4687 = func_4686_call()
output = call_4687
func_4688 = relay.Function([], output)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4412_call = mod.get_global_var('func_4412')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_4711 = func_4412_call()
call_4712 = func_4412_call()
func_2446_call = mod.get_global_var('func_2446')
func_2449_call = mutated_mod.get_global_var('func_2449')
var_4751 = relay.var("var_4751", dtype = "int16", shape = (715,))#candidate|4751|(715,)|var|int16
call_4750 = relay.TupleGetItem(func_2446_call(relay.reshape(var_4751.astype('int16'), [715,])), 4)
call_4752 = relay.TupleGetItem(func_2449_call(relay.reshape(var_4751.astype('int16'), [715,])), 4)
func_1710_call = mod.get_global_var('func_1710')
func_1712_call = mutated_mod.get_global_var('func_1712')
const_4764 = relay.const([-8,9,-5,5,-5,7,-6,-3,-5,-8,-6,8,-4,-5,4,8,-7,7,4,-3,2,-10,-2,-1,-4,8,7,7,5,-2,2,-3,9,-2,-4,1,-5,-4,4,4,8,7,9,9,-7,-5,2,-9,-1,-3,8,-3,-7,-9,-6,-8,-8,10,-10,-1,9,-6,-7,-10,-8,5,9,8,-7,-4,4,7,-8,7,-5,4,8,3,-7,-6,-5,10,1,9,-6,2,6,2,-6,3,1,3,9,5,-8,10,1,9,-9,9,3,7,-1,-3,-10,-8,4,-10,-1,9,-7,-5,1,10,2,5,-1,5,3,-10,-6,4,2,-3,1,2,-10,-6,-3,-9,4,-2,-10,6,5,-6,4,1,6,-1,-5,-4,-2,-4,-7,-1,10,-5,-8,-4,8,-6,-2,2,-4,-4,8,3,-10,-6,-1,5,8,-4,4,-3,-7,-7,-9,-4,2,9,-8,9,-1,-3,1,6,2,8,-7,8,-2,-1,-6,4,-7,-7,7,-2,-2,-3,-7,-2,8,-4,-3,-8,-9,-5,-6,-4,-4,-9,-8,1,8,-1,-2,1,-3,4,-9,-10,-1,-5,6,3,10,-4,1,-6,-9,1,10,-1,8,8,8,-6,-4,10,-10,-1,3,7,-1,4,-10,1,-8,10,10,3,-5,-10,10,9,3,8,-7,3,-8,10,-1,-7,-5,-4,4,-4,-6,7,6,-4,8,-6,-7,-5,-5,2,-7,-4,-5,-9,8,1,10,10,6,5,-5,10,-2,-8,9,-3,-10,-9,7,-7,3,-9,-6,9], dtype = "int32")#candidate|4764|(294,)|const|int32
call_4763 = relay.TupleGetItem(func_1710_call(relay.reshape(const_4764.astype('int32'), [294,])), 4)
call_4765 = relay.TupleGetItem(func_1712_call(relay.reshape(const_4764.astype('int32'), [294,])), 4)
func_3298_call = mod.get_global_var('func_3298')
func_3299_call = mutated_mod.get_global_var('func_3299')
call_4769 = relay.TupleGetItem(func_3298_call(), 0)
call_4770 = relay.TupleGetItem(func_3299_call(), 0)
output = relay.Tuple([call_4711,call_4750,var_4751,call_4763,const_4764,call_4769,])
output2 = relay.Tuple([call_4712,call_4752,var_4751,call_4765,const_4764,call_4770,])
func_4773 = relay.Function([var_4751,], output)
mod['func_4773'] = func_4773
mod = relay.transform.InferType()(mod)
var_4774 = relay.var("var_4774", dtype = "int16", shape = (715,))#candidate|4774|(715,)|var|int16
output = func_4773(var_4774)
func_4775 = relay.Function([var_4774], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2876_call = mod.get_global_var('func_2876')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_4782 = func_2876_call()
call_4783 = func_2876_call()
uop_4790 = relay.asin(call_4782.astype('float32')) # shape=(715,)
uop_4792 = relay.asin(call_4783.astype('float32')) # shape=(715,)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
const_4797 = relay.const([3.059645,-3.820538,7.631403,2.061805,3.094711,2.757217,6.508778,4.234878,-8.610726,5.923819,-1.976035,8.874671,-6.408141,-4.772592,-3.235966,5.515629,-4.466686,-4.214374,5.962068,-2.884688,-6.460504,4.679542,-2.001632,-5.715297,-3.026884,6.413107,3.595301,-6.432775,-2.750648,6.049943,1.957248,-9.062736,-4.966992,0.099126,-6.213947,1.684557,-0.097873,-5.545187,0.977006,2.680411,-6.215188,-4.030595,-7.858866,-6.784883,-4.448701,8.024153,-2.809035,7.785435,-5.916735,-2.221337,0.848183,9.912325,0.645438,-4.162757,-0.824948,-1.311522,-3.425992,2.800993,-4.594099,-8.223063,0.380099,-1.285312,6.437109,4.590180,5.487604,9.066157,0.493330,-7.163334,-2.098818,5.296456,-9.431085,-4.713538,6.986513,6.473716,9.579943,-8.965592,8.846151,-1.046965,-6.023684,4.342391,9.281632,-4.467052,5.089394,4.408671,-6.191010,5.781370,1.930902,1.878459,4.809491,-0.792900,-9.856877,3.658520,7.778951,7.253272,3.292270,3.373145,8.146601,0.629737,-4.885731,-2.173250,-0.058284,-4.103395,7.144654,-5.238951,-8.632544,9.175482,5.038635,9.622462,-6.441182,-1.710049,9.926182,1.541037,-2.141115,9.823636,1.639942,9.023279,2.788202,4.294359,8.749504,9.097268,-4.867779,8.875374,-8.062452,6.500387,4.678221,-0.076387,1.240597,7.259485,3.780722,3.684343,-4.800472,-9.679555,-5.564661,6.589686,5.819308,8.072098,7.681892,7.850494,4.588279,2.217500,-0.112706,1.724435,1.651341,2.522140], dtype = "float32")#candidate|4797|(144,)|const|float32
call_4796 = relay.TupleGetItem(func_961_call(relay.reshape(uop_4790.astype('int16'), [13, 55]), relay.reshape(const_4797.astype('float32'), [144,]), ), 4)
call_4798 = relay.TupleGetItem(func_964_call(relay.reshape(uop_4790.astype('int16'), [13, 55]), relay.reshape(const_4797.astype('float32'), [144,]), ), 4)
func_3800_call = mod.get_global_var('func_3800')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_4815 = relay.TupleGetItem(func_3800_call(relay.reshape(call_4796.astype('float64'), [715,])), 0)
call_4816 = relay.TupleGetItem(func_3803_call(relay.reshape(call_4796.astype('float64'), [715,])), 0)
output = relay.Tuple([uop_4790,call_4796,const_4797,call_4815,])
output2 = relay.Tuple([uop_4792,call_4798,const_4797,call_4816,])
func_4822 = relay.Function([], output)
mod['func_4822'] = func_4822
mod = relay.transform.InferType()(mod)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4822_call = mutated_mod.get_global_var('func_4822')
call_4823 = func_4822_call()
output = call_4823
func_4824 = relay.Function([], output)
mutated_mod['func_4824'] = func_4824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_4836 = relay.TupleGetItem(func_1757_call(), 1)
call_4837 = relay.TupleGetItem(func_1759_call(), 1)
func_3298_call = mod.get_global_var('func_3298')
func_3299_call = mutated_mod.get_global_var('func_3299')
call_4845 = relay.TupleGetItem(func_3298_call(), 0)
call_4846 = relay.TupleGetItem(func_3299_call(), 0)
output = relay.Tuple([call_4836,call_4845,])
output2 = relay.Tuple([call_4837,call_4846,])
func_4850 = relay.Function([], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
mutated_mod['func_4850'] = func_4850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4850_call = mutated_mod.get_global_var('func_4850')
call_4851 = func_4850_call()
output = call_4851
func_4852 = relay.Function([], output)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_4869 = func_4270_call()
call_4870 = func_4270_call()
func_1409_call = mod.get_global_var('func_1409')
func_1411_call = mutated_mod.get_global_var('func_1411')
const_4907 = relay.const([[-8,-9,9,-8,-4,6,-5,6,5,3,2,10,4,-7,9,-3,6,1,-5,8,6,-3,-4,-8,-8,-2,2,6,3,6,1,-10,3,-6,2,8,-9,-8,-9,-4,7,7,8,-9,9,7,-7,8,-10,-8,10,10,-6,-4,5],[2,-6,5,-4,-8,-10,-2,-4,4,-7,-6,-10,-8,-5,5,-2,3,-6,5,1,-3,-10,7,-5,8,5,1,-8,-6,-1,2,8,5,-4,-5,6,7,3,10,4,2,-1,7,-9,-4,-3,-6,-2,4,1,-4,-7,3,-4,8],[10,-9,2,-2,-10,3,-1,-4,-2,-2,10,-2,-6,9,-9,-9,-6,9,4,-10,8,-8,4,5,-4,3,-2,3,1,9,8,8,-6,-3,-8,5,-6,-6,-6,-10,-7,-6,-7,8,-8,7,-5,-1,2,1,7,-8,8,-5,3],[7,-10,9,-2,5,-4,-8,-7,-9,-1,9,-6,-10,8,-1,3,-3,2,10,8,4,10,-10,10,-4,-8,8,-9,-8,-8,-10,-8,-5,4,6,3,-4,3,9,-3,-4,-9,5,-3,-5,-4,1,9,-4,-1,6,2,8,4,-9],[-4,8,-7,1,5,-2,-2,-3,-9,5,9,6,1,-9,3,2,2,1,10,-1,8,6,-6,-1,7,-7,-5,-2,-6,1,-10,7,10,3,-9,-7,-8,5,5,1,1,-10,10,3,4,5,5,-6,-1,-7,3,-7,10,-9,7],[-6,-7,-5,10,-2,1,6,1,-5,1,5,7,-7,4,-1,-5,1,3,8,7,-6,9,-6,-6,-5,2,-10,-3,-7,4,-10,-3,2,1,9,-10,-6,-9,-1,5,9,-9,-10,8,9,-3,3,-2,-2,-5,-10,-6,-5,-3,7],[4,9,6,6,-5,8,-2,4,5,6,6,4,4,-6,-6,5,10,-5,-1,2,4,4,2,1,-5,-7,2,-3,-1,-1,4,8,10,-2,-4,7,-4,-5,10,-6,-10,-5,4,-9,9,-1,6,6,-5,-6,-3,-9,5,-5,-8],[9,-2,2,-4,-1,9,-3,3,10,8,-1,9,7,-3,-9,3,-1,-4,-1,4,-1,-5,-9,-6,10,-4,-4,-10,7,5,-6,-5,3,2,10,-7,-10,-7,-1,-7,-8,2,4,-5,7,6,-8,2,2,5,-1,-5,3,1,9],[-6,1,-1,2,-3,-7,2,-9,7,10,5,4,-4,4,-2,-5,9,8,10,-7,-7,-1,-10,-3,4,-8,-7,-9,-9,8,5,2,9,6,-8,-2,9,-5,-6,3,2,-8,-4,-9,1,4,1,2,4,9,2,8,-5,-8,9],[-10,5,-1,-9,9,10,-6,9,-10,5,-4,1,6,-3,6,8,-7,7,1,10,4,5,-2,-7,7,2,-10,-3,8,3,-10,-1,5,6,-2,7,-6,-7,7,1,-7,-5,-5,-3,6,6,-6,-2,-2,6,5,-1,6,-1,3],[8,6,-7,4,1,-6,6,3,3,-8,-1,-2,6,-10,4,-9,-3,6,6,-10,9,-6,-7,5,-4,9,-6,8,3,-8,-5,-7,-2,8,2,6,3,-6,-1,-10,-4,2,2,-9,-2,-1,-4,5,1,5,-1,-7,-5,7,-6],[2,-6,7,6,2,-2,5,1,-3,3,-10,-3,1,1,-5,-6,4,-3,9,-6,-9,6,-6,4,-3,-1,3,1,-1,3,9,5,1,-6,-9,-5,-5,-4,10,-2,5,8,-7,-2,-3,-6,-4,8,9,8,-10,-8,-4,6,10],[-8,1,-1,-9,9,-9,6,6,-9,-10,6,-9,-5,-7,-8,-8,10,-4,-8,-5,5,-1,-9,7,-5,4,8,-4,-8,-3,7,-3,-3,-9,2,-9,10,-9,9,7,-2,-3,-8,-1,-9,-3,10,-5,-4,3,10,4,1,9,9]], dtype = "int16")#candidate|4907|(13, 55)|const|int16
call_4906 = relay.TupleGetItem(func_1409_call(relay.reshape(const_4907.astype('int16'), [715,])), 2)
call_4908 = relay.TupleGetItem(func_1411_call(relay.reshape(const_4907.astype('int16'), [715,])), 2)
output = relay.Tuple([call_4869,call_4906,const_4907,])
output2 = relay.Tuple([call_4870,call_4908,const_4907,])
func_4913 = relay.Function([], output)
mod['func_4913'] = func_4913
mod = relay.transform.InferType()(mod)
mutated_mod['func_4913'] = func_4913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mutated_mod.get_global_var('func_4913')
call_4914 = func_4913_call()
output = call_4914
func_4915 = relay.Function([], output)
mutated_mod['func_4915'] = func_4915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4933 = relay.TupleGetItem(func_4174_call(), 1)
call_4934 = relay.TupleGetItem(func_4176_call(), 1)
output = relay.Tuple([call_4933,])
output2 = relay.Tuple([call_4934,])
func_4939 = relay.Function([], output)
mod['func_4939'] = func_4939
mod = relay.transform.InferType()(mod)
mutated_mod['func_4939'] = func_4939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4939_call = mutated_mod.get_global_var('func_4939')
call_4940 = func_4939_call()
output = call_4940
func_4941 = relay.Function([], output)
mutated_mod['func_4941'] = func_4941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4295_call = mod.get_global_var('func_4295')
func_4296_call = mutated_mod.get_global_var('func_4296')
call_4947 = func_4295_call()
call_4948 = func_4295_call()
output = call_4947
output2 = call_4948
func_4971 = relay.Function([], output)
mod['func_4971'] = func_4971
mod = relay.transform.InferType()(mod)
output = func_4971()
func_4972 = relay.Function([], output)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4982 = relay.const([[[2.190581,2.678122,8.972462,6.138132,2.401800,-8.968184],[-5.938798,-9.401626,6.404168,7.571166,4.789413,-3.987459],[-1.455762,1.091143,7.643694,-1.627250,0.384998,4.556930],[0.999783,4.406795,-7.218145,0.833266,-5.720948,-8.739888],[-6.342717,-9.062593,7.752735,7.973389,-9.692576,7.277210],[6.145955,-7.510322,1.462409,1.729673,-4.646633,1.546321],[-9.486819,-7.255248,-4.243617,0.111930,-8.136023,-1.073835],[-3.903541,-8.862012,7.521308,-4.239897,0.922250,8.658601],[-1.643822,1.505541,-5.090709,8.563403,-7.666525,5.710709],[-5.709812,1.433548,-1.552554,3.650525,3.671694,2.497676],[7.455459,-7.524621,-3.452264,0.846077,-2.146800,-5.994357],[6.637053,-2.076268,7.135356,8.194572,-1.677031,-9.138239],[-2.117466,0.982359,2.980101,-3.499957,-0.158200,-7.315515]],[[4.271470,2.104646,-0.910458,-5.549955,-2.449197,2.993606],[-0.026099,3.348181,3.100667,-2.132813,9.701715,-2.310400],[-9.699205,4.277406,6.161632,-8.100625,5.550435,-0.721691],[3.297000,-5.924265,5.271332,8.669243,-1.224395,-6.577482],[-8.175017,5.475028,-0.779291,5.936530,6.805582,7.098326],[-8.594267,6.499275,-9.630002,7.189265,-1.286818,9.091257],[-5.726227,7.986579,1.038397,-6.377859,-8.696531,-9.338878],[1.866637,-7.336689,-1.807368,4.726368,2.872038,3.892907],[8.424905,5.438922,-3.635238,8.703209,5.368953,3.510552],[7.249318,-4.480536,4.286605,-4.917230,-7.939285,5.408620],[2.257485,5.415496,9.126596,-4.165997,-4.921110,-0.612552],[-2.102783,3.257411,6.686196,-5.922424,-5.851893,-6.939983],[5.576541,5.018283,1.901055,5.130512,0.593420,3.374209]],[[8.773548,4.744255,9.912515,-4.502640,-3.586777,1.889136],[-2.086543,-4.630653,7.754652,-2.931440,9.605252,-7.217656],[5.703574,9.366939,7.609863,0.351378,-0.506851,-3.531587],[3.820524,9.108895,-7.672245,2.853879,1.389639,7.566619],[-4.422127,1.311657,4.142334,3.227242,5.335891,-9.061637],[6.128620,8.885569,-0.194339,-9.266942,-6.212066,5.778707],[-8.030608,2.140952,-7.731373,-0.406931,2.060536,5.302321],[-2.541307,7.833808,9.443190,-0.382401,8.695786,0.751619],[1.013280,7.758050,6.853005,-2.167135,8.376689,9.067376],[-0.686908,0.473701,-6.586250,9.361944,2.610132,-0.974628],[-5.675584,8.938684,7.718875,1.813259,-9.319949,-9.506484],[-2.485957,-0.711487,3.249278,6.602331,6.432741,7.351863],[0.036066,-2.946885,8.202896,-7.440241,6.439769,1.494625]],[[-5.141816,9.860140,-5.667866,-7.917337,-2.187018,-0.606276],[9.380350,-8.584284,-7.915806,-1.195466,-2.699245,-7.738061],[9.924804,2.531599,3.968520,2.073826,6.999054,-5.981611],[4.805850,-2.489113,2.356501,7.232035,7.129900,-7.322215],[1.025783,8.984333,7.465294,7.982962,-7.315437,-8.384101],[7.848349,8.767715,-5.239667,-2.305665,0.463906,-2.881096],[-1.386702,6.705983,8.938887,8.833750,-2.202552,-5.153292],[7.439833,-8.051888,-1.248333,4.053997,8.329200,-5.657535],[-2.273885,3.490270,-3.426645,4.082838,0.552718,-5.483689],[-9.048257,6.937238,-8.068138,-1.388761,3.587350,-9.077479],[2.213816,3.120228,-9.368593,7.775386,9.807545,-5.640452],[-6.523108,-9.562254,-8.172593,-9.172837,-3.633160,6.693225],[1.681120,-2.707629,0.575192,-5.179687,-5.378179,5.740615]],[[2.234871,-5.536088,4.596917,-1.222561,-4.327203,1.397676],[4.134170,2.351379,9.055783,8.049982,-1.827133,8.721239],[-8.578973,3.513977,6.259072,7.330866,3.209106,2.427094],[5.427828,-3.777836,-5.574401,-0.791754,5.739419,-6.584141],[3.953727,9.627212,9.243647,9.499668,-8.374899,9.642351],[8.087850,-7.904445,-0.450445,8.911322,-4.640876,7.900132],[6.744603,-5.558342,7.606968,3.648881,-5.485556,-8.392883],[5.626990,3.641368,-7.639798,5.767562,-9.903882,-2.538605],[-1.741776,-7.404763,9.484322,2.094241,7.220915,0.251633],[-4.295266,0.052256,8.410796,9.959451,7.153327,-1.746324],[3.920368,7.372671,-9.427426,-7.391962,3.658387,1.250767],[-6.310061,3.334587,-7.271682,-3.833834,0.335035,-2.283458],[5.471067,9.049151,-0.468001,3.292513,-0.694255,8.231812]],[[-5.327797,5.797275,-9.871763,9.371591,1.704990,3.345581],[1.954378,7.782153,8.616011,-0.918256,0.721822,-2.434251],[2.786421,9.435034,-9.585605,-9.816936,-0.384889,4.070866],[-4.390153,3.817381,1.785940,-7.070905,-3.027955,-1.006150],[8.635723,-4.462900,-7.500056,-0.490020,-3.850873,8.373628],[3.867168,-8.187874,8.130912,-4.566530,-6.805780,-5.052383],[-8.470555,-3.209544,-0.021587,2.781975,7.589568,-5.508339],[-1.615371,-7.445521,-1.312060,0.048997,9.464456,3.143871],[9.740198,5.547545,3.390806,-6.093671,-7.423682,-7.946288],[2.707906,-4.082321,6.448939,-8.303788,5.936822,3.960182],[2.702146,0.157171,-6.770341,3.385431,8.533130,8.964177],[-1.410827,-4.714806,-0.240685,2.471533,-6.334037,4.028651],[-1.639133,8.274778,-8.670222,0.830745,-9.649359,-1.164585]]], dtype = "float32")#candidate|4982|(6, 13, 6)|const|float32
uop_4983 = relay.acos(const_4982.astype('float32')) # shape=(6, 13, 6)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_4986 = func_4209_call()
call_4987 = func_4209_call()
uop_4989 = relay.rsqrt(uop_4983.astype('float32')) # shape=(6, 13, 6)
bop_5000 = relay.bitwise_or(uop_4989.astype('uint16'), relay.reshape(const_4982.astype('uint16'), relay.shape_of(uop_4989))) # shape=(6, 13, 6)
output = relay.Tuple([call_4986,bop_5000,])
output2 = relay.Tuple([call_4987,bop_5000,])
func_5004 = relay.Function([], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mutated_mod.get_global_var('func_5004')
call_5005 = func_5004_call()
output = call_5005
func_5006 = relay.Function([], output)
mutated_mod['func_5006'] = func_5006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5006_call = mutated_mod.get_global_var('func_5006')
call_5030 = relay.TupleGetItem(func_5004_call(), 1)
call_5031 = relay.TupleGetItem(func_5006_call(), 1)
uop_5068 = relay.erf(call_5030.astype('float64')) # shape=(6, 13, 6)
uop_5070 = relay.erf(call_5031.astype('float64')) # shape=(6, 13, 6)
uop_5076 = relay.asinh(call_5030.astype('float32')) # shape=(6, 13, 6)
uop_5078 = relay.asinh(call_5031.astype('float32')) # shape=(6, 13, 6)
output = relay.Tuple([uop_5068,uop_5076,])
output2 = relay.Tuple([uop_5070,uop_5078,])
func_5080 = relay.Function([], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
output = func_5080()
func_5081 = relay.Function([], output)
mutated_mod['func_5081'] = func_5081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_5127 = func_2922_call()
call_5128 = func_2922_call()
uop_5155 = relay.sin(call_5127.astype('float32')) # shape=(715,)
uop_5157 = relay.sin(call_5128.astype('float32')) # shape=(715,)
output = relay.Tuple([uop_5155,])
output2 = relay.Tuple([uop_5157,])
func_5158 = relay.Function([], output)
mod['func_5158'] = func_5158
mod = relay.transform.InferType()(mod)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5158_call = mutated_mod.get_global_var('func_5158')
call_5159 = func_5158_call()
output = call_5159
func_5160 = relay.Function([], output)
mutated_mod['func_5160'] = func_5160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2876_call = mod.get_global_var('func_2876')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_5227 = func_2876_call()
call_5228 = func_2876_call()
var_5232 = relay.var("var_5232", dtype = "int16", shape = (715,))#candidate|5232|(715,)|var|int16
bop_5233 = relay.logical_or(call_5227.astype('bool'), relay.reshape(var_5232.astype('bool'), relay.shape_of(call_5227))) # shape=(715,)
bop_5236 = relay.logical_or(call_5228.astype('bool'), relay.reshape(var_5232.astype('bool'), relay.shape_of(call_5228))) # shape=(715,)
func_3800_call = mod.get_global_var('func_3800')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_5245 = relay.TupleGetItem(func_3800_call(relay.reshape(call_5227.astype('float64'), [715,])), 0)
call_5246 = relay.TupleGetItem(func_3803_call(relay.reshape(call_5227.astype('float64'), [715,])), 0)
uop_5248 = relay.erf(call_5227.astype('float64')) # shape=(715,)
uop_5250 = relay.erf(call_5228.astype('float64')) # shape=(715,)
func_2678_call = mod.get_global_var('func_2678')
func_2680_call = mutated_mod.get_global_var('func_2680')
var_5255 = relay.var("var_5255", dtype = "float64", shape = (1352,))#candidate|5255|(1352,)|var|float64
call_5254 = relay.TupleGetItem(func_2678_call(relay.reshape(var_5255.astype('float64'), [8, 13, 13])), 0)
call_5256 = relay.TupleGetItem(func_2680_call(relay.reshape(var_5255.astype('float64'), [8, 13, 13])), 0)
func_3007_call = mod.get_global_var('func_3007')
func_3009_call = mutated_mod.get_global_var('func_3009')
var_5264 = relay.var("var_5264", dtype = "float32", shape = (144,))#candidate|5264|(144,)|var|float32
call_5263 = relay.TupleGetItem(func_3007_call(relay.reshape(var_5264.astype('float32'), [144,])), 0)
call_5265 = relay.TupleGetItem(func_3009_call(relay.reshape(var_5264.astype('float32'), [144,])), 0)
output = relay.Tuple([bop_5233,call_5245,uop_5248,call_5254,var_5255,call_5263,var_5264,])
output2 = relay.Tuple([bop_5236,call_5246,uop_5250,call_5256,var_5255,call_5265,var_5264,])
func_5283 = relay.Function([var_5232,var_5255,var_5264,], output)
mod['func_5283'] = func_5283
mod = relay.transform.InferType()(mod)
mutated_mod['func_5283'] = func_5283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5283_call = mutated_mod.get_global_var('func_5283')
var_5285 = relay.var("var_5285", dtype = "int16", shape = (715,))#candidate|5285|(715,)|var|int16
var_5286 = relay.var("var_5286", dtype = "float64", shape = (1352,))#candidate|5286|(1352,)|var|float64
var_5287 = relay.var("var_5287", dtype = "float32", shape = (144,))#candidate|5287|(144,)|var|float32
call_5284 = func_5283_call(var_5285,var_5286,var_5287,)
output = call_5284
func_5288 = relay.Function([var_5285,var_5286,var_5287,], output)
mutated_mod['func_5288'] = func_5288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5158_call = mod.get_global_var('func_5158')
func_5160_call = mutated_mod.get_global_var('func_5160')
call_5316 = relay.TupleGetItem(func_5158_call(), 0)
call_5317 = relay.TupleGetItem(func_5160_call(), 0)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_5320 = relay.TupleGetItem(func_1757_call(), 0)
call_5321 = relay.TupleGetItem(func_1759_call(), 0)
output = relay.Tuple([call_5316,call_5320,])
output2 = relay.Tuple([call_5317,call_5321,])
func_5343 = relay.Function([], output)
mod['func_5343'] = func_5343
mod = relay.transform.InferType()(mod)
output = func_5343()
func_5344 = relay.Function([], output)
mutated_mod['func_5344'] = func_5344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5343_call = mod.get_global_var('func_5343')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_5353 = relay.TupleGetItem(func_5343_call(), 1)
call_5354 = relay.TupleGetItem(func_5344_call(), 1)
func_2664_call = mod.get_global_var('func_2664')
func_2666_call = mutated_mod.get_global_var('func_2666')
var_5359 = relay.var("var_5359", dtype = "float32", shape = (144,))#candidate|5359|(144,)|var|float32
call_5358 = relay.TupleGetItem(func_2664_call(relay.reshape(var_5359.astype('float32'), [144,])), 0)
call_5360 = relay.TupleGetItem(func_2666_call(relay.reshape(var_5359.astype('float32'), [144,])), 0)
output = relay.Tuple([call_5353,call_5358,var_5359,])
output2 = relay.Tuple([call_5354,call_5360,var_5359,])
func_5363 = relay.Function([var_5359,], output)
mod['func_5363'] = func_5363
mod = relay.transform.InferType()(mod)
mutated_mod['func_5363'] = func_5363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5364 = relay.var("var_5364", dtype = "float32", shape = (144,))#candidate|5364|(144,)|var|float32
func_5363_call = mutated_mod.get_global_var('func_5363')
call_5365 = func_5363_call(var_5364)
output = call_5365
func_5366 = relay.Function([var_5364], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2131_call = mod.get_global_var('func_2131')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_5379 = func_2131_call()
call_5380 = func_2131_call()
output = call_5379
output2 = call_5380
func_5393 = relay.Function([], output)
mod['func_5393'] = func_5393
mod = relay.transform.InferType()(mod)
output = func_5393()
func_5394 = relay.Function([], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_5399 = func_5393_call()
call_5400 = func_5393_call()
output = relay.Tuple([call_5399,])
output2 = relay.Tuple([call_5400,])
func_5414 = relay.Function([], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
output = func_5414()
func_5415 = relay.Function([], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4915_call = mutated_mod.get_global_var('func_4915')
call_5422 = relay.TupleGetItem(func_4913_call(), 1)
call_5423 = relay.TupleGetItem(func_4915_call(), 1)
output = call_5422
output2 = call_5423
func_5432 = relay.Function([], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
output = func_5432()
func_5433 = relay.Function([], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_5434 = relay.TupleGetItem(func_4174_call(), 0)
call_5435 = relay.TupleGetItem(func_4176_call(), 0)
func_5343_call = mod.get_global_var('func_5343')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_5456 = relay.TupleGetItem(func_5343_call(), 1)
call_5457 = relay.TupleGetItem(func_5344_call(), 1)
bop_5460 = relay.subtract(call_5456.astype('uint32'), relay.reshape(call_5434.astype('uint32'), relay.shape_of(call_5456))) # shape=(715,)
bop_5463 = relay.subtract(call_5457.astype('uint32'), relay.reshape(call_5435.astype('uint32'), relay.shape_of(call_5457))) # shape=(715,)
output = bop_5460
output2 = bop_5463
func_5470 = relay.Function([], output)
mod['func_5470'] = func_5470
mod = relay.transform.InferType()(mod)
mutated_mod['func_5470'] = func_5470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mutated_mod.get_global_var('func_5470')
call_5471 = func_5470_call()
output = call_5471
func_5472 = relay.Function([], output)
mutated_mod['func_5472'] = func_5472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_5549 = relay.TupleGetItem(func_2152_call(), 1)
call_5550 = relay.TupleGetItem(func_2153_call(), 1)
const_5553 = relay.const([[[6,9,1,4,-6,-8,9,6,2,3,2,4,-6],[-1,2,-10,-9,4,8,-7,-1,1,-3,-8,-6,7],[-4,7,8,2,5,10,-10,-8,-2,-5,2,-3,-4],[9,1,-7,9,-4,2,-6,-7,-5,-1,-7,7,-6],[-7,-5,-9,8,-10,-6,1,-5,5,1,10,-8,6]],[[3,-5,-6,7,3,6,9,-10,-5,4,-3,-3,-10],[-10,-3,-4,-2,3,-3,-9,-8,10,1,2,-1,7],[-5,8,-5,-6,7,-3,10,8,8,-10,2,-6,9],[10,6,6,10,-9,-4,-3,4,9,4,7,-5,-10],[6,10,6,7,-9,-7,9,-6,-2,4,-5,-10,-10]],[[-10,-4,10,6,7,-1,-6,-7,1,-1,-9,-4,-9],[-5,7,-3,-8,5,7,1,-5,-10,3,6,-5,9],[-9,6,3,6,5,-4,8,-5,3,1,-6,-1,-8],[3,7,7,6,-6,5,8,3,6,-3,6,-5,-6],[-10,2,-5,3,-8,9,-4,-2,7,10,1,-9,7]],[[2,6,4,4,-6,-10,2,9,-3,-4,-3,-4,9],[9,4,7,7,-2,9,-7,-5,-2,-7,8,-4,-5],[-5,10,-8,4,-4,-6,4,1,3,8,9,9,-3],[-7,9,-5,-3,-8,5,-3,-5,-1,-8,-4,-2,-3],[6,-8,8,7,-5,4,9,-1,6,-5,-4,1,9]],[[-4,-10,4,8,-7,5,-6,6,2,-1,-2,-6,7],[-3,3,6,7,-6,-3,2,1,-4,2,4,-9,-7],[-2,-8,-3,9,-5,3,2,4,4,-7,-5,-3,-5],[3,3,-5,-2,-6,-5,1,10,3,-3,-1,-3,3],[1,9,4,10,-9,-2,9,6,-3,-6,-2,6,6]],[[-6,6,-10,-7,5,-8,-7,-9,10,7,1,-4,2],[8,3,5,-4,9,10,-3,-5,9,2,3,7,7],[-9,-7,-4,8,8,7,8,7,1,-4,-5,-10,-2],[-6,-4,-7,3,-3,8,6,-9,-9,8,5,-6,-6],[2,7,-9,-3,7,6,-5,-6,-4,-8,-5,10,-2]],[[5,-5,-10,-6,-1,1,10,5,7,6,-10,6,-3],[-4,8,-9,-4,3,1,1,6,7,8,-1,9,-8],[10,-8,9,-10,-8,10,-3,-7,2,-10,10,4,9],[-2,-7,-1,8,-3,-3,-4,2,-4,8,-3,9,-1],[-1,6,-2,-2,3,-7,-5,8,1,-9,-7,-10,-6]],[[7,6,-4,-3,-9,-3,6,-4,-4,3,-7,5,9],[-10,-9,2,4,4,-7,10,-1,-6,-6,-10,-1,4],[7,-3,3,7,-2,8,9,3,8,-1,-6,-8,1],[-5,-10,10,10,4,-9,-5,-10,-6,-4,6,-2,-1],[-7,-3,6,3,-8,-3,-8,-2,-10,7,-2,10,10]],[[8,-4,-2,-9,-9,4,-10,5,-1,-2,10,-1,-3],[-8,7,-10,3,5,5,10,-8,8,-7,3,7,-2],[-9,-4,4,-7,1,7,3,1,7,-6,8,-6,8],[-2,7,2,6,2,7,4,-9,3,-4,-2,6,7],[1,-8,3,3,-5,-7,8,-3,-1,4,8,1,-4]],[[5,8,-5,-5,7,-4,-9,-5,1,8,-10,-1,-6],[-4,10,-8,7,9,5,4,2,-4,8,-9,-3,-3],[3,-9,-2,8,10,-9,3,8,1,-2,1,-4,-5],[10,-10,-3,6,4,5,-3,9,2,1,-2,6,-5],[-1,-8,4,4,-10,8,1,7,5,10,4,-4,6]],[[7,-1,8,5,-6,-5,-4,-1,2,-6,7,1,-3],[-1,-9,-4,-8,-1,5,-4,7,-5,-4,-5,8,7],[3,3,4,5,-1,-10,-4,-7,8,-3,-3,-6,-5],[-5,-4,-8,-2,-5,5,10,10,6,2,4,7,5],[-6,-6,1,5,8,2,-6,-8,6,-6,-9,-10,-8]]], dtype = "int16")#candidate|5553|(11, 5, 13)|const|int16
bop_5554 = relay.add(call_5549.astype('uint8'), relay.reshape(const_5553.astype('uint8'), relay.shape_of(call_5549))) # shape=(11, 5, 13)
bop_5557 = relay.add(call_5550.astype('uint8'), relay.reshape(const_5553.astype('uint8'), relay.shape_of(call_5550))) # shape=(11, 5, 13)
output = relay.Tuple([bop_5554,])
output2 = relay.Tuple([bop_5557,])
func_5563 = relay.Function([], output)
mod['func_5563'] = func_5563
mod = relay.transform.InferType()(mod)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5563_call = mutated_mod.get_global_var('func_5563')
call_5564 = func_5563_call()
output = call_5564
func_5565 = relay.Function([], output)
mutated_mod['func_5565'] = func_5565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1897_call = mod.get_global_var('func_1897')
func_1899_call = mutated_mod.get_global_var('func_1899')
call_5595 = relay.TupleGetItem(func_1897_call(), 0)
call_5596 = relay.TupleGetItem(func_1899_call(), 0)
func_5004_call = mod.get_global_var('func_5004')
func_5006_call = mutated_mod.get_global_var('func_5006')
call_5610 = relay.TupleGetItem(func_5004_call(), 1)
call_5611 = relay.TupleGetItem(func_5006_call(), 1)
output = relay.Tuple([call_5595,call_5610,])
output2 = relay.Tuple([call_5596,call_5611,])
func_5613 = relay.Function([], output)
mod['func_5613'] = func_5613
mod = relay.transform.InferType()(mod)
output = func_5613()
func_5614 = relay.Function([], output)
mutated_mod['func_5614'] = func_5614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_5618 = func_5470_call()
call_5619 = func_5470_call()
output = relay.Tuple([call_5618,])
output2 = relay.Tuple([call_5619,])
func_5627 = relay.Function([], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
mutated_mod['func_5627'] = func_5627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mutated_mod.get_global_var('func_5627')
call_5628 = func_5627_call()
output = call_5628
func_5629 = relay.Function([], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2947_call = mod.get_global_var('func_2947')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_5636 = func_2947_call()
call_5637 = func_2947_call()
uop_5638 = relay.tan(call_5636.astype('float32')) # shape=(715,)
uop_5640 = relay.tan(call_5637.astype('float32')) # shape=(715,)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_5644 = relay.TupleGetItem(func_4068_call(), 0)
call_5645 = relay.TupleGetItem(func_4070_call(), 0)
func_5283_call = mod.get_global_var('func_5283')
func_5288_call = mutated_mod.get_global_var('func_5288')
var_5651 = relay.var("var_5651", dtype = "float64", shape = (1352,))#candidate|5651|(1352,)|var|float64
const_5652 = relay.const([-0.663992,-6.521898,-6.485777,-8.767536,9.811474,4.990633,4.399267,-3.238427,1.069645,-0.331216,-8.939485,-6.010068,-1.018854,0.874166,-7.181641,8.099129,6.170163,5.669011,-9.455629,-0.430929,7.232973,2.443593,2.752314,0.316672,-0.494123,3.264806,1.869427,9.997021,7.126542,0.883940,-6.314061,-8.979932,-5.520827,5.691541,-6.024495,-1.654688,-5.418736,-7.805284,2.117676,-2.016710,3.386525,-1.558908,1.070992,1.371469,-6.701728,-5.778836,3.791831,-3.364979,-3.978406,-6.577829,3.804319,7.669838,4.484226,4.530824,7.742806,-9.214532,-2.304022,1.639175,-5.933680,-6.808501,0.049527,-3.649621,-3.577382,-1.851628,-1.336624,8.838870,-5.927359,9.444977,-6.574961,-8.724729,3.509127,-4.403987,-8.421543,1.711771,-7.468017,2.399434,6.091583,6.055188,9.101008,-5.275012,-5.223133,3.883729,-3.910917,-5.666996,-1.316819,5.123605,0.553472,7.003832,6.338015,6.356144,-4.296943,-9.164480,-6.551629,7.308796,6.646031,0.884897,6.728826,-6.668277,-9.742269,-4.126426,-3.526580,-1.906382,-2.557052,9.810283,-0.783626,1.674573,1.757910,-0.719272,1.107670,5.301017,-9.048160,2.342853,-0.935800,2.665377,-4.747084,8.978558,3.115652,9.130769,2.315853,-2.504564,6.082094,-0.643217,2.363519,-6.815899,2.200709,1.056175,-3.714643,7.314527,8.724818,5.589417,8.281245,-3.925741,-3.459885,-6.679326,-9.681911,-8.865341,-8.618929,-0.040641,1.071059,5.411216,5.143695,-7.846574,3.650633,-2.236557], dtype = "float32")#candidate|5652|(144,)|const|float32
call_5650 = relay.TupleGetItem(func_5283_call(relay.reshape(uop_5638.astype('int16'), [715,]), relay.reshape(var_5651.astype('float64'), [1352,]), relay.reshape(const_5652.astype('float32'), [144,]), ), 6)
call_5653 = relay.TupleGetItem(func_5288_call(relay.reshape(uop_5638.astype('int16'), [715,]), relay.reshape(var_5651.astype('float64'), [1352,]), relay.reshape(const_5652.astype('float32'), [144,]), ), 6)
output = relay.Tuple([uop_5638,call_5644,call_5650,var_5651,const_5652,])
output2 = relay.Tuple([uop_5640,call_5645,call_5653,var_5651,const_5652,])
func_5656 = relay.Function([var_5651,], output)
mod['func_5656'] = func_5656
mod = relay.transform.InferType()(mod)
mutated_mod['func_5656'] = func_5656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5657 = relay.var("var_5657", dtype = "float64", shape = (1352,))#candidate|5657|(1352,)|var|float64
func_5656_call = mutated_mod.get_global_var('func_5656')
call_5658 = func_5656_call(var_5657)
output = call_5658
func_5659 = relay.Function([var_5657], output)
mutated_mod['func_5659'] = func_5659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_5690 = relay.TupleGetItem(func_1757_call(), 1)
call_5691 = relay.TupleGetItem(func_1759_call(), 1)
func_3800_call = mod.get_global_var('func_3800')
func_3803_call = mutated_mod.get_global_var('func_3803')
const_5696 = relay.const([6.832401,-6.825368,9.713989,6.171209,1.537446,-5.478327,1.539937,4.510754,-9.336543,0.728417,3.580777,3.777198,-3.387208,-5.620661,6.192026,-8.987400,0.758287,-5.173635,-1.564743,2.094463,4.742496,-2.318673,0.797097,-7.079747,0.520833,7.920927,9.334237,8.840932,-0.817362,3.419489,5.999890,-8.006489,6.674447,-1.023526,8.669942,0.719501,0.982161,0.214406,5.590508,-2.787313,0.542346,1.116154,7.468238,4.993572,-0.802746,0.429284,-6.685823,0.104362,-0.564703,1.607838,2.104379,5.859428,1.901932,9.982658,-7.628326,3.783105,9.305923,-7.683251,5.579862,6.821701,9.209226,-7.068445,-0.135724,5.706810,1.910982,-5.567025,3.548652,8.898058,5.126779,-3.899284,8.087832,2.515958,-3.870850,9.885657,1.107439,-6.723381,4.587554,1.199683,-1.779309,-4.969183,8.761414,-7.743437,-8.755917,5.577187,-7.718121,-9.910758,-0.717533,1.062306,1.034902,-0.931236,6.086450,4.364156,0.794327,-5.187939,4.071121,9.383744,-8.371271,-2.200350,-4.527563,-0.597577,6.465799,-9.853938,-1.197086,-5.983028,-1.754604,9.217946,9.912973,-8.122132,4.108419,-8.494153,4.488203,8.995289,6.139338,7.949874,-3.242194,9.342951,-5.541844,4.683703,4.996121,-8.011226,-5.925077,1.059803,8.277497,4.740746,-8.613536,4.467750,5.766255,4.045946,-8.693977,-3.087569,-1.210409,-0.877157,8.249787,-9.244968,-9.921833,-5.229901,-3.286626,-7.637784,3.514220,-0.189007,-6.433119,-7.374749,-2.747527,-4.922845,-0.512461,2.526904,-4.983668,4.846090,9.672881,-4.954632,-5.478631,4.186267,-2.340949,-9.145620,0.761115,-0.847523,4.589356,8.418503,-4.292624,-3.381231,2.722809,-5.346177,-2.251273,8.657198,1.285287,2.677344,8.034927,-2.042273,-2.832945,1.770809,6.654548,6.999948,-3.897303,-5.593884,9.191626,5.176207,2.571109,-9.168961,3.217592,2.273901,-2.058775,9.091592,5.964939,4.088322,-1.947845,5.101268,-1.816796,-5.418303,-1.303332,-8.285875,-0.072680,-8.657150,5.278204,3.131135,-8.079148,2.457131,3.729218,-1.892891,-3.283227,-9.646027,4.192965,-2.495624,8.840790,-2.164388,3.732171,4.581766,2.773018,5.263687,-6.654630,6.373158,-7.353204,1.516176,8.257101,-2.376169,-2.744983,1.108088,8.935330,1.678478,-9.441281,-0.030962,-2.971336,3.419120,9.084917,-2.055562,2.668989,-6.636528,-2.853366,8.969085,-7.486434,3.467662,4.928542,-4.141082,-6.835157,0.877719,1.876132,4.654157,7.570814,4.157643,0.445364,-3.241913,-7.422548,-6.678241,4.052499,-1.724169,-9.806748,-1.603088,-7.119197,-9.025157,-9.236497,-8.960074,9.950101,-2.798731,-1.102398,2.236114,7.316299,2.896432,-0.408581,3.087564,5.454417,1.018178,2.980218,3.400331,-1.331368,2.399345,0.129463,2.647659,5.638326,1.902584,0.329033,4.081364,8.596043,-8.084759,6.597197,2.171715,-9.588277,-1.270409,-8.756763,4.474213,8.627834,3.738949,-6.579304,5.637473,-1.485588,-3.866347,1.485472,9.367067,-7.633540,-8.673844,8.325908,-9.727988,2.830405,1.274487,7.825373,-2.186289,4.326072,0.107681,-7.012867,0.478841,-0.486456,3.049754,-9.059793,-8.404927,-5.298313,-0.986817,-4.549932,6.496104,7.121816,4.856233,-0.073447,1.012842,8.468011,5.880944,1.628285,4.302086,-3.170639,3.094096,7.117924,1.998845,-7.656133,2.459351,4.037203,-3.840425,9.733544,0.003170,-1.945583,-2.238081,5.213793,4.682313,-7.648665,-6.109261,4.260507,5.928308,1.461627,0.636168,-5.776578,-4.130971,5.321908,-2.481716,-6.613889,-9.210216,-3.631573,6.258294,0.702412,-4.391353,1.859989,-1.428607,-1.731489,7.507204,3.148146,-4.060451,7.636167,2.480056,0.763854,7.997449,1.062733,-5.753294,-0.793779,1.680891,4.613326,-3.980159,5.812045,4.378139,-4.603423,0.586718,7.906878,-9.529449,9.681008,-7.294685,6.085594,-9.330070,7.315709,4.167850,-7.221743,0.476687,-2.128596,-7.872780,0.062595,-3.258294,-6.029341,1.792044,8.835471,-8.457981,7.389168,3.903534,9.838820,1.886247,0.705662,-6.368773,2.438279,5.496517,7.790767,7.366418,5.945704,6.156398,-6.626153,-6.546737,-1.803882,-0.619834,8.685215,-7.748724,4.171599,8.080271,-9.808611,8.239712,-5.172216,-1.843462,-4.449784,-3.956194,7.903726,-4.020676,-2.629376,8.701506,2.027582,-3.750646,2.902158,1.407212,-2.636004,0.601224,4.437838,-7.775393,2.006678,4.709400,2.536362,-6.847953,3.519268,-8.492612,5.904055,-6.643837,7.285952,2.242704,-8.617583,8.651256,7.559987,6.879030,3.545943,-5.218037,-2.011686,5.402554,4.624894,-9.395851,-6.427280,-1.656680,-7.613231,-4.376000,7.422721,0.444130,9.438469,-5.938003,1.940706,1.078386,-2.063911,-9.245174,7.122066,-4.454953,6.772023,-4.709007,9.490950,5.580320,7.291476,8.222612,0.710877,-3.154480,6.653104,4.834478,1.958763,-8.615282,6.188166,-5.599436,-6.215206,7.524680,-8.631650,0.265317,5.259854,2.370145,-5.656923,7.583886,4.363006,-4.568631,2.694967,-5.190186,-7.644320,-2.471788,2.891839,0.576732,1.197423,3.644004,-8.305481,5.921558,9.036124,-1.093116,2.564064,1.864371,-7.165862,4.716913,5.475463,-5.693153,-5.439225,3.807132,3.467445,8.150294,-1.232793,-6.393136,0.739042,-7.158565,3.592076,0.094729,-2.817779,5.674046,-5.871553,-5.485542,-6.689621,-7.164164,7.245986,-0.880495,-3.278183,1.656168,-9.831911,7.841597,7.383422,-0.053847,-0.828652,9.179774,-3.857522,6.286903,-1.478706,9.072182,-6.419813,2.352665,8.191283,3.919413,-8.092905,-4.265550,-0.083978,-6.376219,2.603832,-8.824945,-7.461005,6.752756,6.022750,-4.303125,-2.623048,-8.403668,3.880339,1.197674,-9.931363,-5.230042,1.981126,7.713866,-7.747277,-4.634988,3.061800,2.140587,-9.284311,-3.728603,-6.529323,2.919693,-4.345861,0.674382,-9.770392,0.098662,2.812826,5.153065,-3.922420,8.132368,-7.126876,9.654119,-1.875109,-5.267422,2.375567,-6.665158,7.282182,-3.256520,-4.579819,1.136080,-8.217050,4.119376,-3.097054,7.399426,2.946256,3.085792,-5.680075,1.718701,2.366330,0.827369,9.368139,-4.728355,-8.617277,-1.173980,7.196655,8.109642,-1.111322,4.288507,3.750523,-1.864611,3.403668,-1.261196,-7.654108,5.331455,9.748154,-5.112086,-9.104452,4.746461,1.717932,5.586297,6.678022,3.116949,4.571603,-7.153782,0.515654,-9.960887,-6.626549,-0.512953,-0.835923,9.262975,-8.516602,-2.722799,-7.564922,9.412974,-7.051119,-5.471159,6.985557,9.417868,6.745132,1.566194,-3.878537,7.697608,7.099273,8.791402,8.019419,0.495599,-3.331519,1.432405,-0.819471,6.994934,9.071380,-2.769053,9.356505,-7.912657,-8.714161,2.906811,2.308895,8.398989,-9.614620,-1.738167,5.068301,4.629993,-7.053131,9.624594,-4.858326,4.469132,-3.554771,-5.232214,5.815108,-3.979649,4.994401,3.798795,8.686054,2.510701,3.757931,7.026247,1.547402,1.568204,7.439757,-1.158198,5.236450,-5.195540,-0.684681,0.749826,7.613456,1.831281,8.373962,7.608593,9.641884,-8.544370,-1.570530,-2.159602,-3.570972,5.681270,-7.482351,5.423275,7.919720,3.105003,7.078571,-2.884397,7.025893,4.402711,-1.367764,8.703172,8.213998,-4.315623,3.031510,8.755854,-2.765836,-9.049778,1.881621,-2.483724,0.598590,-5.339988,-8.853442,3.001608,-9.088587,-9.393468,3.280530,-5.796619,5.989338,-2.620176,5.165720,7.952555,7.103615,-8.736786,4.315388,1.142322,3.946832,0.168196,-3.514008], dtype = "float64")#candidate|5696|(715,)|const|float64
call_5695 = relay.TupleGetItem(func_3800_call(relay.reshape(const_5696.astype('float64'), [715,])), 0)
call_5697 = relay.TupleGetItem(func_3803_call(relay.reshape(const_5696.astype('float64'), [715,])), 0)
func_4913_call = mod.get_global_var('func_4913')
func_4915_call = mutated_mod.get_global_var('func_4915')
call_5719 = relay.TupleGetItem(func_4913_call(), 1)
call_5720 = relay.TupleGetItem(func_4915_call(), 1)
output = relay.Tuple([call_5690,call_5695,const_5696,call_5719,])
output2 = relay.Tuple([call_5691,call_5697,const_5696,call_5720,])
func_5732 = relay.Function([], output)
mod['func_5732'] = func_5732
mod = relay.transform.InferType()(mod)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5732_call = mutated_mod.get_global_var('func_5732')
call_5733 = func_5732_call()
output = call_5733
func_5734 = relay.Function([], output)
mutated_mod['func_5734'] = func_5734
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5821 = relay.const([[[-3.893464,0.533277,7.331953,-0.472136,7.609183,-2.229348,-9.952325],[-8.826314,-9.610513,-8.791928,9.218964,-1.655040,9.203812,-8.867923],[5.180065,-9.706880,5.037960,-7.471990,1.383478,8.963970,-5.553885],[4.543937,-2.678102,3.288543,-1.562756,9.653620,-5.113002,1.990216],[8.355704,1.128904,2.612478,-5.448039,9.410710,2.260853,-7.742889],[-7.563531,-7.426252,0.631198,8.207001,1.520496,-9.743178,2.705558],[-4.384541,-9.787794,-6.667779,-6.396854,1.584997,-6.444977,9.088667],[-4.663561,5.023527,-3.608945,-4.076930,-0.918961,-1.500565,5.091398],[-9.190259,-9.319647,7.329388,-4.062133,-2.052382,4.750725,-9.385933],[-9.733120,7.118233,8.489144,6.778900,-9.630495,0.427164,-6.412275]],[[-6.763005,-4.652230,-4.708921,-1.127612,0.949181,-1.541181,7.504653],[-5.850076,3.375435,-0.914187,2.391610,8.031757,3.448759,-7.417256],[-3.551161,7.431933,-0.460512,-4.535910,-6.373480,-3.558138,4.717372],[8.648668,-1.830940,-8.180326,-5.915594,-0.850761,-2.149439,8.864857],[2.525333,-8.777887,-8.070917,-3.214265,4.108411,6.773259,7.105087],[-5.060136,-3.751097,-9.167448,6.213290,5.817644,3.543079,4.486252],[6.292716,6.600177,-9.448046,2.206463,9.966361,5.190861,-0.823846],[-7.693594,-2.258285,-5.543723,-4.439752,6.929264,-5.967849,-9.780177],[-1.983452,9.921338,-8.283003,-3.891302,2.174117,0.344028,9.487020],[7.687434,2.119293,-6.421867,-0.705956,6.905458,1.402012,-0.147998]],[[1.495458,0.424389,-7.127454,1.300649,9.772206,7.809109,1.924536],[-2.244851,7.381286,-0.408916,0.003378,-6.984355,-8.954100,0.857802],[-2.718444,1.865658,-8.819252,7.366498,8.027832,0.713583,-6.902880],[0.426885,6.217739,4.626340,-7.503220,5.642767,-3.714258,0.558738],[3.551846,-6.090143,4.439511,6.661534,-1.802450,-7.789650,-2.984202],[-3.417151,7.270587,-7.038793,7.205667,3.087816,-3.799499,-7.083952],[7.277346,6.714477,-4.304228,-7.586376,2.378653,9.197087,3.147814],[3.629517,9.559770,-1.613738,-5.341602,5.793466,-9.976228,2.787785],[1.521601,6.279937,2.200121,-7.569639,-6.694223,6.980794,-1.331914],[4.042789,5.601684,0.891681,7.103352,0.349711,9.711040,8.307662]],[[7.324660,-5.063210,-0.696387,6.627292,-1.107163,0.270410,0.973878],[-2.276065,6.571733,5.802891,-5.097240,2.285545,-8.123607,8.184780],[7.063231,-3.191473,6.356400,-6.509826,-7.540506,-4.025971,3.557241],[-9.883031,-0.410196,-6.784181,-5.257635,-4.888339,7.467424,-2.262460],[-0.109356,5.638951,6.652609,6.972131,-9.853871,-3.723728,8.305146],[2.284682,1.307204,3.664877,-8.807764,9.327416,4.285248,1.709927],[-4.748601,9.332507,-9.371862,-2.630096,-0.237013,-9.266694,5.468085],[1.768995,9.903678,4.782041,-5.888324,4.830761,0.523450,-5.030835],[-0.565428,0.053723,9.665131,-8.899013,6.987869,5.228402,-3.844403],[-2.895992,1.196796,-1.136107,-7.858820,8.044315,4.281168,2.657193]],[[9.629260,0.891059,2.848980,-2.328206,7.234562,-2.602262,-3.207810],[-0.705902,-8.270671,-1.377204,6.401148,-5.137996,7.954268,-7.422864],[-2.366811,6.992746,8.263217,-4.137418,0.596739,-1.598017,2.208312],[0.773034,-9.729190,-4.910734,-4.304699,-7.814082,0.717552,3.479007],[-8.228093,6.625716,7.854392,4.480602,-3.417964,3.595088,-4.962732],[-2.565734,7.269454,8.884957,-1.946484,-6.051901,4.378619,-0.344074],[6.108390,7.093945,3.875395,2.246645,7.690083,-8.901152,-9.875111],[0.833386,5.646496,-4.867851,1.661567,-1.015103,2.214421,-1.441156],[-0.571751,7.431327,-0.618922,3.204633,-7.501792,-6.025485,7.537580],[6.832143,-8.616108,1.725979,-8.810897,-9.101153,7.486426,5.925885]],[[2.849570,2.298986,-9.807038,-9.861440,4.850517,5.016527,-2.631621],[6.714003,-5.560568,6.125916,8.526434,-2.539339,-7.102830,4.562460],[2.561242,-1.220741,-7.342617,-7.876552,-0.080297,3.814189,0.890702],[8.224249,-0.235138,9.415852,9.657280,-1.297464,0.716580,4.652203],[0.393388,-2.121350,9.815216,-7.069952,-5.462885,1.054078,7.837353],[8.115596,8.694774,-9.337337,1.622935,-8.307856,-2.178100,-9.322937],[5.099051,7.193259,-7.448117,1.887582,-1.507099,-4.033761,0.733566],[0.932729,-8.334325,8.006664,-5.705083,-1.302728,3.840418,-2.579260],[6.270520,-8.667478,-2.039688,1.740949,0.822056,2.122251,-8.886524],[-3.771671,2.784574,-3.320189,-5.028147,2.551822,8.847831,9.879211]],[[-5.823961,-0.209999,-7.508770,-6.761053,-8.309348,8.075640,-1.678812],[5.665626,-0.085097,-7.985065,-1.438284,-7.757724,-3.992269,2.259269],[8.615106,4.612762,-3.768112,9.360226,-6.901462,-1.640825,6.380536],[-0.202898,-1.009202,2.802082,0.571020,-4.016499,-4.642441,6.072940],[-4.164641,4.610730,5.436463,4.587673,-0.435500,-3.511963,-9.648106],[-3.795289,-3.160668,1.356113,-8.952478,-1.637896,6.873171,6.162735],[4.926929,-8.659256,6.884263,4.928649,-0.801042,6.319170,9.551446],[9.686527,-6.129956,6.841148,-1.300470,2.428352,5.475417,3.586904],[-1.869514,9.647220,1.119772,6.096441,1.090962,5.124685,2.526005],[-1.146312,-0.984486,-4.455811,3.639953,1.478830,-9.555748,7.614927]],[[-8.331686,-6.578920,3.582191,-7.707710,-2.351256,-7.291861,-6.459895],[8.609633,-0.669198,-2.953445,-7.506905,5.501102,2.349141,7.870594],[6.691543,1.333536,3.731655,-9.863750,2.217653,1.000561,-8.829510],[1.047220,2.505716,-2.872291,9.583254,-3.687545,0.958662,6.897808],[9.261410,-4.039813,9.975792,-0.999474,-1.266103,-4.626027,-0.733049],[8.585290,9.226181,7.569506,5.354370,-1.255778,6.306105,-5.555900],[-1.871761,0.210825,6.443666,-7.408708,5.246059,2.519431,4.427824],[-1.619655,-0.374471,-0.522298,-6.475500,-9.018521,6.685979,-4.471877],[-4.485476,7.797978,4.099828,-5.462387,-8.221155,2.014792,2.090793],[6.288527,-9.643974,-0.579601,8.137861,-5.043741,4.478682,-2.856598]],[[4.174656,3.836547,3.039139,-2.729688,4.168056,8.286883,3.064810],[1.603221,-2.038514,6.319716,-2.852388,1.687420,-3.424436,-4.620509],[-2.440340,-3.459637,0.673334,5.497911,-6.205509,9.765339,-2.085777],[-0.646780,-3.149234,5.513845,-9.090460,3.349705,-2.958382,2.697146],[4.387415,-4.968368,-8.690970,3.731365,-1.251657,-1.558183,3.732568],[-5.916175,6.636868,2.804109,1.114524,-6.946754,-9.885580,-6.265856],[-5.061968,9.722007,4.563854,2.170315,0.653710,-3.135014,-2.062951],[-4.488247,-1.800460,7.757890,5.586910,8.629359,8.861381,7.803271],[-9.595733,3.811669,8.655715,-9.961599,-7.313335,-8.098824,-6.526022],[-7.587052,6.303995,-8.233423,5.663916,5.839837,2.102959,4.201755]],[[-7.533347,-6.704039,8.890089,2.407802,-4.592401,3.981536,-5.617010],[-3.467448,-8.787581,4.786064,-2.643222,-9.583363,8.767525,-4.056459],[-0.346140,-2.633785,-3.573062,1.008847,-8.933400,-0.871970,-5.519163],[1.214412,0.691005,-4.174055,-4.828039,-2.726538,5.136480,8.559930],[-0.560615,9.630450,1.347266,-0.707246,-3.769941,9.920171,-6.682180],[-6.041662,-1.704281,7.285962,9.450687,7.485900,4.046344,-7.446241],[-7.547143,-8.365673,-0.333956,-5.754630,4.139535,8.784974,-7.124393],[-3.576276,4.410810,-7.948567,-4.045062,5.274961,7.539516,-3.703107],[-7.836472,5.235435,-0.520251,-3.602315,-4.326487,-2.583536,6.281331],[3.031878,8.589069,-4.602998,-1.158247,-4.041752,7.500660,9.590525]]], dtype = "float32")#candidate|5821|(10, 10, 7)|const|float32
uop_5822 = relay.log10(const_5821.astype('float32')) # shape=(10, 10, 7)
output = relay.Tuple([uop_5822,])
output2 = relay.Tuple([uop_5822,])
func_5830 = relay.Function([], output)
mod['func_5830'] = func_5830
mod = relay.transform.InferType()(mod)
output = func_5830()
func_5831 = relay.Function([], output)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_5883 = relay.TupleGetItem(func_2152_call(), 0)
call_5884 = relay.TupleGetItem(func_2153_call(), 0)
output = relay.Tuple([call_5883,])
output2 = relay.Tuple([call_5884,])
func_5885 = relay.Function([], output)
mod['func_5885'] = func_5885
mod = relay.transform.InferType()(mod)
mutated_mod['func_5885'] = func_5885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5885_call = mutated_mod.get_global_var('func_5885')
call_5886 = func_5885_call()
output = call_5886
func_5887 = relay.Function([], output)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5898 = relay.const([[[3.413346,8.748363,-3.186617,7.045669],[-9.523032,9.808741,9.944209,8.986934],[6.288150,-4.104784,-0.305962,-4.295200],[2.804270,-7.622872,-6.297924,8.142707],[-1.765612,-0.217352,8.754486,-5.930143],[-0.686137,-6.596545,-0.616429,0.362445],[7.988176,-3.240090,2.961770,-8.405875],[8.273992,-5.964957,-0.163999,1.064524],[-7.946812,6.925877,-5.314181,9.429329],[-1.522019,-0.341379,-1.122211,-8.245005],[-7.024290,2.181592,4.790007,-3.541667],[-8.691432,-6.523681,-9.267973,5.277862]],[[-2.145679,-1.660333,-8.218208,5.410143],[7.634204,5.626886,9.704410,6.050210],[-3.085032,4.283977,-7.358199,4.229562],[4.213167,2.028190,5.547125,-9.999130],[-4.764166,-9.674134,8.039545,2.280749],[-2.284970,-2.856174,-0.807415,9.549629],[-6.252400,-4.403568,-0.242912,5.281771],[-8.156174,2.881838,5.811646,3.283167],[-6.049634,-6.770464,8.208876,-8.429712],[-1.524707,5.477243,-5.552555,-0.300055],[-3.664671,5.414408,-1.651726,-6.485763],[4.732998,-2.687712,0.499985,-9.430591]],[[-4.721990,3.015346,-9.428394,2.183557],[-0.227290,3.992426,9.341741,9.731238],[5.899109,-5.222666,2.082848,-9.678057],[-3.336957,4.583746,-2.743653,4.606950],[-2.408831,-2.022548,-3.962280,-3.055462],[-4.944012,6.657169,0.727866,3.869844],[4.387949,-5.340884,-4.599112,2.013539],[4.040476,5.285678,5.952153,-8.335660],[5.943046,-5.692150,-9.343341,3.966241],[8.842923,-0.470728,3.983658,7.437867],[5.018519,-2.325011,-7.690089,-6.996293],[-1.336151,7.928724,-2.577526,-8.035315]],[[-0.825692,7.130454,1.991546,6.001154],[5.079667,0.973918,-8.061374,4.149724],[-9.386553,1.563015,-7.954170,-5.879383],[6.067381,-6.896809,-0.267040,-9.490005],[1.615380,4.063943,-5.455681,5.869456],[2.197480,-0.293801,1.567494,9.790742],[9.707046,-5.026297,9.132608,9.118292],[-2.096335,-0.619012,-4.552937,0.845422],[7.790880,-5.737282,-7.201028,8.914457],[-9.397640,1.099148,-4.153633,3.890419],[2.839534,3.444553,-8.650105,-3.813521],[-4.176755,3.318077,4.195597,-9.727116]],[[-8.068338,-9.076093,7.548983,-0.578911],[8.582176,6.781431,-7.912295,-0.043931],[5.016676,-5.139823,-5.682925,-9.919851],[-7.304836,8.290295,9.335656,-3.094363],[-7.962779,-0.663541,-3.481320,7.181130],[-9.367116,7.781827,8.032893,-8.012987],[6.307932,-5.111094,5.860955,-3.016096],[6.215857,1.709512,-6.264216,-7.315280],[-6.949910,-9.800099,6.100559,1.407265],[-5.263545,-7.925362,-5.727952,-3.767020],[-0.814881,5.010866,-3.306714,1.978057],[5.679500,-0.630079,-0.970066,-7.023603]],[[1.887483,9.386890,-6.431487,-2.586749],[-2.775077,-8.267215,8.337948,-1.489213],[3.329466,-5.279290,-0.881541,7.631641],[-1.992619,6.006605,-8.136220,-3.238998],[-9.314133,-8.913143,-7.133871,5.016251],[-8.188785,0.696610,1.301209,1.282306],[4.187381,-5.078410,5.378970,4.543930],[6.699753,-9.090098,-1.170596,8.633437],[-1.460992,0.741248,-2.297090,1.186981],[-6.369600,-3.698759,2.603174,-0.171946],[5.071107,-9.527068,4.991682,4.616964],[-4.300096,-6.788332,-4.317255,4.830046]],[[-1.172817,3.518792,1.111576,6.882076],[4.988138,1.713993,1.018463,6.775215],[-0.304144,7.619844,1.725504,-6.630147],[-1.458409,-0.391547,-4.033686,4.094513],[-7.605738,8.075621,-2.936431,6.385035],[3.679240,-8.070056,-9.622356,2.281408],[3.918682,-8.191946,9.237632,-0.449367],[-4.446227,-3.630123,-9.734773,8.921501],[-1.084102,-7.944992,9.884609,-9.858434],[9.803347,2.952673,-8.461631,-6.696549],[7.470366,-8.679052,-7.062804,-5.265604],[9.202611,9.971100,-8.085754,-7.586478]],[[-5.115612,3.904210,-9.148245,-3.222821],[-1.828286,-9.694109,-8.948948,-1.813075],[5.493882,3.542412,8.273131,-3.490865],[-3.994396,-2.312598,-2.197671,-3.425413],[-2.558765,-1.586509,1.880610,-4.089704],[-0.636231,9.485105,3.401878,-2.306199],[-3.503875,-4.678262,8.329361,1.331859],[1.331771,8.096170,-1.406119,-6.573555],[6.507141,-1.488578,1.720760,4.309585],[4.721723,-0.950344,-7.670082,4.065534],[-7.605511,5.572737,9.911717,-6.027098],[-3.740369,-3.740359,2.819406,2.272544]],[[-7.812308,7.479558,-5.705559,1.390262],[9.033075,8.978347,4.447816,5.381559],[-9.274537,1.067408,7.887596,-4.846249],[7.657800,-6.400278,7.463100,-8.067349],[8.639045,0.706634,-7.846112,2.435338],[4.105877,2.003481,-5.236228,-4.785742],[5.149173,-1.133373,6.738510,1.531981],[4.903855,7.018486,7.646884,-5.079515],[-7.939809,8.240003,8.910116,-2.538207],[5.560325,8.548946,-7.776865,-3.452464],[5.041247,-0.080581,-1.037114,-0.381284],[-4.311591,-0.191614,2.584664,-5.969584]],[[3.849808,-4.988837,3.258470,2.180881],[-1.448151,-2.106063,-1.151474,1.596749],[1.614184,3.545996,2.546830,4.072494],[7.931027,3.525777,7.332673,-4.832229],[8.840073,7.272869,-4.868588,3.566454],[1.863467,3.470400,2.219301,7.518427],[6.603134,-9.830928,-2.264275,-4.557617],[0.527372,-4.302751,8.081562,2.394682],[0.596265,0.833687,7.366638,9.633673],[-5.303543,9.264344,6.693519,-4.481735],[9.354322,3.795579,3.330522,0.492305],[5.094799,9.479229,4.995187,-0.512545]],[[6.774112,-8.294295,-7.031048,5.041235],[-9.657770,-8.684473,9.164990,-6.880935],[9.394473,5.022050,8.849955,-2.664829],[-8.487686,-8.929342,-4.061268,2.960884],[-0.270626,2.961620,1.654099,-1.921977],[3.514836,6.806386,8.859153,5.876946],[9.505071,1.967119,8.676741,5.886466],[8.782979,5.457876,-2.937868,1.578385],[-2.680820,-9.291237,4.715574,-1.728722],[9.748932,-9.704616,2.677674,-9.164248],[-5.020462,-0.605546,1.358738,2.662193],[8.093890,-9.891836,5.285599,-4.617604]],[[-1.630183,1.979325,6.367773,-9.338188],[6.853443,-6.105479,-8.052993,4.017173],[-5.498913,5.288424,-2.088348,1.230130],[4.099348,3.675157,2.747758,8.857903],[-6.369944,-3.888081,-3.313514,2.519923],[6.317124,-7.025057,-2.267330,-6.400518],[5.684927,-3.159849,-0.721176,3.851798],[0.473062,5.300732,3.650047,7.015472],[3.585038,4.450608,-0.990869,-2.874455],[-6.070428,-1.488856,-9.172898,-2.827692],[-9.750532,8.316606,-6.705404,-3.147350],[-7.892691,-1.194597,-0.295504,4.943324]],[[0.842683,3.463600,3.179106,2.569393],[8.158180,-4.752088,-5.225524,0.247312],[1.692032,-2.673680,-2.588527,-6.718590],[-7.190958,-2.937136,-6.490812,-8.566353],[-1.272143,3.624092,0.029890,-5.258299],[-3.357825,5.670638,3.773294,4.372835],[0.406652,-3.466842,4.190402,-0.703794],[2.165957,-4.760596,0.903926,-0.086107],[6.845505,5.507313,-2.932003,0.665926],[0.976602,-6.809339,9.582557,5.972372],[3.934879,-0.612934,-7.980396,-7.353653],[4.720183,2.176502,3.943331,7.966380]],[[-7.974139,-1.864019,-6.350484,7.092181],[-4.641087,-6.776100,-6.727180,-9.872039],[9.399729,-1.249814,-3.240897,6.480410],[9.098307,-6.075160,-0.461719,2.738158],[-8.175090,-3.732460,1.948082,-9.020894],[6.244057,-7.722401,6.669584,7.447307],[9.642855,-3.002252,-7.044723,-5.347373],[3.116419,-2.371327,-0.426022,-2.543088],[0.769564,3.080440,-5.169543,-6.648597],[-6.176655,2.810846,-8.499973,-8.884778],[-6.075874,7.274620,-4.684095,0.505089],[-2.538832,-2.246600,5.091679,5.399972]],[[1.201658,-9.215507,0.978262,1.554403],[7.594437,1.339691,9.618915,0.190075],[-7.745654,-9.911051,-9.629340,-4.509173],[3.191955,5.321060,5.099158,-8.619214],[0.717362,3.151507,7.029413,-7.014317],[1.373405,-3.475043,3.540826,7.004732],[-4.381568,5.537055,4.352946,3.840629],[-8.377537,6.687807,-9.612372,-0.345855],[-8.524325,-9.462321,-8.564210,-9.013338],[-4.903173,-1.731632,6.276644,6.358819],[8.917546,-3.911893,7.133937,4.957024],[2.472001,6.770514,-0.567358,0.465017]],[[7.175939,8.998920,0.207481,-9.303481],[-1.555654,0.824329,-9.680891,-9.172566],[8.508471,-7.990136,-4.754248,-0.633122],[-7.101305,6.055896,0.944161,-7.552328],[-0.345546,-3.853769,0.811025,9.595055],[4.556666,9.630813,-9.987773,3.948577],[4.710267,-5.038389,-9.747544,9.132955],[-8.857089,8.188030,2.716812,5.989780],[0.101328,1.036941,-1.987257,0.879258],[-8.006625,9.718391,-5.590163,-5.616295],[-9.116293,5.940803,-2.815390,3.139305],[-1.832317,-1.472377,-1.213892,6.617546]]], dtype = "float32")#candidate|5898|(16, 12, 4)|const|float32
uop_5899 = relay.sqrt(const_5898.astype('float32')) # shape=(16, 12, 4)
output = relay.Tuple([uop_5899,])
output2 = relay.Tuple([uop_5899,])
func_5907 = relay.Function([], output)
mod['func_5907'] = func_5907
mod = relay.transform.InferType()(mod)
output = func_5907()
func_5908 = relay.Function([], output)
mutated_mod['func_5908'] = func_5908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_5923 = func_4270_call()
call_5924 = func_4270_call()
output = relay.Tuple([call_5923,])
output2 = relay.Tuple([call_5924,])
func_5950 = relay.Function([], output)
mod['func_5950'] = func_5950
mod = relay.transform.InferType()(mod)
output = func_5950()
func_5951 = relay.Function([], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mod.get_global_var('func_5432')
func_5433_call = mutated_mod.get_global_var('func_5433')
call_6003 = func_5432_call()
call_6004 = func_5432_call()
output = relay.Tuple([call_6003,])
output2 = relay.Tuple([call_6004,])
func_6005 = relay.Function([], output)
mod['func_6005'] = func_6005
mod = relay.transform.InferType()(mod)
mutated_mod['func_6005'] = func_6005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6005_call = mutated_mod.get_global_var('func_6005')
call_6006 = func_6005_call()
output = call_6006
func_6007 = relay.Function([], output)
mutated_mod['func_6007'] = func_6007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5343_call = mod.get_global_var('func_5343')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_6016 = relay.TupleGetItem(func_5343_call(), 1)
call_6017 = relay.TupleGetItem(func_5344_call(), 1)
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
const_6028 = relay.const([8.277267,-1.299564,-4.190329,3.371447,-1.066909,3.711912,-0.718510,1.525122,-8.872591,-7.568842,2.202443,3.248943,-2.245884,9.179674,-7.442375,-7.716012,5.923551,4.865869,5.523451,-0.936990,8.663571,1.562623,-8.570913,-3.199709,-4.843966,7.291156,-5.025012,4.665709,-5.453372,-4.988284,5.828654,-8.237870,-2.080246,-2.293960,-2.008073,4.697795,-4.690355,0.032159,9.369089,-0.232544,9.954486,2.274484,-7.696908,-9.806781,-0.060062,1.651846,6.915835,-9.466845,3.881072,-5.580288,-0.401783,2.459293,-3.443761,6.102558,3.710908,2.358325,8.328053,-4.585641,9.374407,-5.288667,6.641991,3.838475,-0.312784,-1.883500,-2.128057,3.394249,0.284343,-2.244194,-2.656652,9.072974,8.960274,-8.471850,-3.478442,-6.639842,7.034078,6.884871,-1.009241,-9.876511,-8.352852,7.142693,5.334680,6.952117,5.775791,-3.589522,1.296862,5.020367,-9.853493,5.832737,-1.348838,-3.373383,3.872521,1.967595,-3.683122,-4.829384,-3.506723,8.043198,-7.608126,-4.774457,-8.916798,8.939910,9.167624,-1.349216,-6.808877,-7.741489,4.454742,1.247851,-4.213000,1.192453,-1.277160,4.376097,2.748777,-3.738324,-4.056012,5.332196,5.813528,-2.745894,-4.025692,-7.622871,2.812033,1.296548,1.083449,1.947610,2.361140,-6.927310,-6.103115,9.879925,-4.062255,9.814577,-9.543496,-8.502429,-9.687966,-4.037801,3.672488,3.867013,7.171868,-2.611909,3.497393,-5.178969,-0.751173,-7.683980,8.841958,-5.098985,0.028532,-0.810087,-8.828059,5.311680,4.017991,2.604639,-4.626647,9.547872,-3.157128,-2.671121,7.215165,-2.784029,9.303217,-6.611005,-2.783156,2.372048,1.255930,-4.211501,-1.895811,-0.664180,8.119334,-1.372160,-1.361443,-2.103538,5.657037,4.264703,0.834359,-2.689630,-5.168041,0.421826,7.304336,5.703909,-3.450654,0.949271,0.189051,5.077330,4.824303,6.066120,3.243941,-4.763429,-2.632983,-6.603255,-4.353249,0.320704,8.700807,7.271793,8.919481,7.870693,-6.133208,-4.049578,-4.606452,9.185104,8.972179,-8.892938,-8.699657,-4.541196,-9.400061,-4.515574,8.235752,0.862309,8.377309,-3.573819,0.792107,-6.334314,-2.097010,-5.600738,-8.583991,-5.081436,-4.191235,2.837018,-7.075423,0.628167,-8.337038,4.555799,9.358851,-5.734649,7.445218,5.624041,8.062576,0.763683,-6.899502,-6.722862,8.005282,0.280686,2.792852,-5.420728,-8.366202,-6.550149,6.163182,-8.060882,4.112661,2.616964,2.500760,2.933961,0.326283,-2.632054,-4.374689,-1.812513,-7.906680,3.727487,-6.172511,5.437382,-4.275740,7.313793,0.509009,-1.817556,3.973055,4.445593,8.811750,1.024368,2.088537,-2.416762,-8.345034,9.427803,-5.505015,0.743829,-2.182707,0.439146,-7.279162,3.100874,0.179336,-5.446600,0.762842,2.911604,6.712676,6.985613,0.600084,-3.660773,2.150891,-2.641541,2.463184,-7.915565,-4.713543,-1.290684,7.465837,-8.455344,1.628190,4.567459,-4.788209,9.572157,0.070602,1.406473,8.189693,-0.179220,5.017395,-0.514274,-1.187049,5.125742,4.564449,-8.188585,1.424022,6.611679,0.660521,7.073502,2.501365,3.294448,-9.411717,2.978007,5.363745,-2.547067,-9.056289,0.955658,6.486714,2.630513,-8.411332,7.605379,-8.031163,-4.721136,2.454592,-8.793137,3.290415,8.782348,-4.047110,5.084021,4.895328,-7.261670,-0.665896,-1.142948,-0.840116,-8.321238,6.560756,-5.220872,-0.352681,-3.226350,5.351040,6.652270,-7.230525,-8.478191,5.002446,-3.457415,2.625955,8.470590,-9.648589,5.397098,5.637400,5.690502,-3.014437,2.450992,5.578581,-7.198453,-6.345316,4.819500,2.075329,5.022914,1.221554,4.909360,-1.240086,-8.316940,-1.067198,-4.108445,-6.464039,2.667952,6.192838,5.906670,-1.047698,9.387179,1.502213,5.417880,-8.585671,-7.485282,1.529468,-3.528285,-7.290067,-9.263441,0.113941,-7.336017,4.830977,-6.294715,-2.874543,4.585134,7.508113,3.285134,1.213100,1.431681,3.875811,2.733005,1.815889,0.499850,-8.007376,2.545879,-4.117450,9.137452,6.293336,-7.100763,-3.402671,-8.775129,0.271703,-8.422462,-7.242657,-6.489580,1.147327,-8.708364,-2.685269,-3.721700,-6.883071,-2.007872,-0.346474,-5.260233,2.216397,8.021413,-8.110176,0.148500,-3.630402,-3.491783,-7.412031,-7.401494,-8.160573,-2.231162,-3.561489,4.058169,-6.211273,5.554418,-6.939217,-5.100288,3.424644,6.880641,6.660895,0.692580,-5.370738,5.734282,-3.975440,2.806354,-9.393984,1.429934,-5.315119,8.864889,-3.792729,3.043997,-7.879833,-4.451739,-0.521481,0.893855,2.237490,4.454407,-0.806038,-4.680034,-9.613610,8.247112,8.118113,-8.927396,-2.587751,4.535251,-3.621111,1.263970,-5.034379,-9.255508,3.968519,2.238267,-8.085590,-1.152117,5.332445,-8.866869,-9.763586,-6.027780,-1.924362,-9.940261,0.942900,-8.088434,-4.115457,-2.070804,2.722326,1.787474,4.093833,6.642876,8.033600,-8.092355,-8.146942,6.141724,7.414098,2.227860,-1.355010,-4.508064,5.155614,9.116044,-3.705522,-0.182116,3.025881,-3.723057,-0.798425,-6.122667,2.319921,-0.429970,9.298669,5.161504,-6.822440,8.346541,-3.873620,-7.711742,-6.382984,9.355799,0.714122,-0.986981,-9.851263,3.159413,4.631036,-9.204142,7.374470,-1.005537,-0.184152,7.089672,-9.135092,2.037900,-2.826530,-1.411078,-1.431208,9.400486,-8.671284,-9.446684,-4.099032,6.342946,6.639901,-7.205353,1.043574,-1.396880,-8.792686,-9.827978,-3.423099,6.795406,9.084549,4.001643,-2.880723,0.486910,-8.290930,3.472516,-7.984407,-4.598735,-4.622673,-0.241386,-2.911817,-7.729747,-5.789967,6.129809,-3.899836,8.431303,2.531983,8.695665,7.728726,-1.629505,-0.484398,-2.501447,-2.381711,3.462658,7.299614,-3.541437,-9.808435,5.273534,7.047518,0.543462,4.336109,1.679168,6.864965,-3.276347,-4.341653,-1.942746,-6.619088,3.495237,-0.314532,-6.767350,-3.565828,0.986218,4.377405,2.434378,6.836730,-4.605428,6.587610,6.785882,9.872101,9.699191,-4.496636,-3.386910,-0.662926,-0.688906,-8.037091,-1.850087,8.994040,5.119200,-9.550280,-0.566285,6.180805,0.572878,-3.175073,5.195143,-6.986880,3.628257,9.409852,-0.647036,7.240590,-4.688030,8.222763,-3.903353,-4.092383,0.931634,-1.165218,-8.823833,-7.862290,-3.842602,5.595034,-9.451076,-9.815387,-0.013006,-0.538619,7.409629,2.726480,8.239023,9.802643,-3.283894,-3.668741,-5.634706,8.598959,-4.584969,-8.519593,-7.833268,7.501848,-1.494091,0.026748,8.750896,2.549816,4.593016,-7.660441,1.184882,4.187385,2.899871,6.244241,-4.232455,-6.511716,-1.393331,-5.504858,-5.976911,-9.134586,4.929391,-3.712285,1.862391,-8.347441,-2.778370,4.581086,-0.359825,1.022438,-6.441821,8.705071,3.108630,-2.619107,8.027016,6.898760,-9.548676,-2.650679,4.882464,-0.077672,-1.076080,4.095346,7.988005,-4.807314,3.504154,3.028433,-3.657600,6.400536,-7.145397,7.316055,-6.120902,-4.276004,-5.223579,-1.523091,7.555534,-0.588574,9.956564,-2.016626,9.191558,-4.918851,2.308570,-0.177800,6.589633,1.744248,6.260077,1.586186,5.350846,-2.005310,-6.683590,4.726869,4.834217,3.859097,-8.637435,5.555130,-8.079334,-0.177385,0.522312,1.579167,-3.770473,7.146096,9.875018,1.487027,-8.205094,8.210392,7.993596,-8.702132,-3.199325,2.799543,6.359790,-5.544031,0.859856,7.617604,-8.189533,3.115221,-4.230166,-8.044935,9.586673,-5.432027,-0.817306,-6.300515,3.220596,-4.937764,-6.003088,-5.695135,5.776860,8.379671,3.326588,7.265037,5.761899,0.162653,9.661769,4.834738,9.577206,-0.626671,7.651212,8.802169,7.509245,1.494833,-2.017711,-0.183158,-4.641992,-6.565423,-0.293431,2.064217,-7.861708,9.619797,4.391113,-6.396950,6.126154,-6.058239,3.997181,8.304232,2.297264,-5.691328,-4.651237,7.074511,-2.703027,-7.423210,-7.201183,-1.744093,-2.882367], dtype = "float64")#candidate|6028|(750,)|const|float64
call_6027 = func_709_call(relay.reshape(const_6028.astype('float64'), [10, 15, 5]))
call_6029 = func_709_call(relay.reshape(const_6028.astype('float64'), [10, 15, 5]))
func_3140_call = mod.get_global_var('func_3140')
func_3143_call = mutated_mod.get_global_var('func_3143')
const_6033 = relay.const([[3.236519,1.652145,9.528420,-6.512867,3.766790,7.584665,-2.246247,-8.126643,-2.406833,2.774453,5.681781,-1.798450,-2.657000,-4.181638,0.024364,0.963316,-8.747181,8.226753,-8.304739,-8.579882],[-1.878079,-6.467899,-6.209049,7.513215,-8.151268,8.721560,-4.529270,-9.561341,6.909101,5.021374,5.575514,9.388013,-6.578297,9.577628,-4.852769,-9.433930,-6.561964,-0.416349,-1.982306,3.918638],[-5.464484,-2.415793,-7.356055,4.777888,-1.340858,1.949698,6.965496,1.325967,6.219319,9.520357,-7.681527,-5.309015,-8.122521,3.902730,9.181106,5.446526,2.015692,-9.203592,8.227116,-5.192868],[-4.442908,7.945867,-5.298895,2.171391,0.011710,-6.362239,9.937199,-8.430190,3.637508,-9.022308,4.593996,-4.084682,1.620100,-4.274878,-5.321868,-0.548196,-3.559491,-0.492380,-1.856651,2.534805],[-3.107352,3.201577,-2.608235,9.097438,3.074858,-2.170436,-7.770894,-3.854054,1.325533,-1.559737,1.038833,4.074062,-2.899050,-9.158397,6.763963,-3.061217,0.153110,9.901034,-8.779999,2.537872],[-5.616546,-3.795057,-9.229388,9.590046,6.673148,5.063499,-6.216374,4.523725,9.993833,-3.848445,3.933546,-9.791505,-4.782323,-2.445591,7.609159,8.859295,-9.055509,-9.719478,-8.242308,-2.974990]], dtype = "float64")#candidate|6033|(6, 20)|const|float64
call_6032 = relay.TupleGetItem(func_3140_call(relay.reshape(const_6033.astype('float64'), [3, 10, 4])), 0)
call_6034 = relay.TupleGetItem(func_3143_call(relay.reshape(const_6033.astype('float64'), [3, 10, 4])), 0)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_6045 = relay.TupleGetItem(func_1051_call(), 4)
call_6046 = relay.TupleGetItem(func_1052_call(), 4)
bop_6052 = relay.logical_and(call_6027.astype('bool'), relay.reshape(const_6028.astype('bool'), relay.shape_of(call_6027))) # shape=(10, 15, 5)
bop_6055 = relay.logical_and(call_6029.astype('bool'), relay.reshape(const_6028.astype('bool'), relay.shape_of(call_6029))) # shape=(10, 15, 5)
uop_6058 = relay.cosh(call_6027.astype('float32')) # shape=(10, 15, 5)
uop_6060 = relay.cosh(call_6029.astype('float32')) # shape=(10, 15, 5)
output = relay.Tuple([call_6016,call_6032,const_6033,call_6045,bop_6052,uop_6058,])
output2 = relay.Tuple([call_6017,call_6034,const_6033,call_6046,bop_6055,uop_6060,])
func_6068 = relay.Function([], output)
mod['func_6068'] = func_6068
mod = relay.transform.InferType()(mod)
output = func_6068()
func_6069 = relay.Function([], output)
mutated_mod['func_6069'] = func_6069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3298_call = mod.get_global_var('func_3298')
func_3299_call = mutated_mod.get_global_var('func_3299')
call_6101 = relay.TupleGetItem(func_3298_call(), 0)
call_6102 = relay.TupleGetItem(func_3299_call(), 0)
var_6117 = relay.var("var_6117", dtype = "int16", shape = (715,))#candidate|6117|(715,)|var|int16
bop_6118 = relay.floor_divide(call_6101.astype('float64'), relay.reshape(var_6117.astype('float64'), relay.shape_of(call_6101))) # shape=(715,)
bop_6121 = relay.floor_divide(call_6102.astype('float64'), relay.reshape(var_6117.astype('float64'), relay.shape_of(call_6102))) # shape=(715,)
output = bop_6118
output2 = bop_6121
func_6127 = relay.Function([var_6117,], output)
mod['func_6127'] = func_6127
mod = relay.transform.InferType()(mod)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6128 = relay.var("var_6128", dtype = "int16", shape = (715,))#candidate|6128|(715,)|var|int16
func_6127_call = mutated_mod.get_global_var('func_6127')
call_6129 = func_6127_call(var_6128)
output = call_6129
func_6130 = relay.Function([var_6128], output)
mutated_mod['func_6130'] = func_6130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_6135 = relay.TupleGetItem(func_1546_call(), 0)
call_6136 = relay.TupleGetItem(func_1548_call(), 0)
output = relay.Tuple([call_6135,])
output2 = relay.Tuple([call_6136,])
func_6145 = relay.Function([], output)
mod['func_6145'] = func_6145
mod = relay.transform.InferType()(mod)
mutated_mod['func_6145'] = func_6145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mutated_mod.get_global_var('func_6145')
call_6146 = func_6145_call()
output = call_6146
func_6147 = relay.Function([], output)
mutated_mod['func_6147'] = func_6147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3298_call = mod.get_global_var('func_3298')
func_3299_call = mutated_mod.get_global_var('func_3299')
call_6243 = relay.TupleGetItem(func_3298_call(), 0)
call_6244 = relay.TupleGetItem(func_3299_call(), 0)
func_1216_call = mod.get_global_var('func_1216')
func_1217_call = mutated_mod.get_global_var('func_1217')
call_6247 = func_1216_call()
call_6248 = func_1216_call()
func_2113_call = mod.get_global_var('func_2113')
func_2118_call = mutated_mod.get_global_var('func_2118')
const_6260 = relay.const([9.475130,-3.228479,-7.126680,-8.080738,6.084162,-8.854346,6.712453,9.157028,-0.360061,-4.323224,7.962531,-7.070558,2.500459,-8.644864,5.343486,-2.912107,4.712955,-5.745021,9.308840,-6.103683,7.971462,5.811231,-9.505412,-8.630912,-6.226906,9.334381,-5.587849,4.906352,-2.255863,-8.628974,-6.719929,3.017019,0.083853,0.844295,-6.986458,7.455959,-4.904260,-5.411264,5.266099,1.325371,0.710527,1.296868,-1.111233,0.956244,-8.138378,-6.759958,-8.344296,-6.228348,-2.766583,-3.882855,-0.407486,-9.810993,0.042590,0.810040,8.504887,-4.223917,-6.108825,-9.464897,6.235774,1.349813,5.783198,-2.910202,4.959379,4.953076,-9.733766,-0.149403,-4.331032,3.121862,0.238479,-8.499486,4.604321,6.170988,7.618791,5.582397,-1.731530,-0.019717,-4.754103,7.718167,-7.270320,5.018555,5.605318,3.449967,-5.633269,1.832663,4.952487,-4.484569,-4.297633,-7.574408,3.036072,-5.298377,8.778202,2.806250,7.337246,9.592488,-0.052527,-3.510352,4.312282,2.885742,-2.735065,3.067930,-7.591940,8.062635,-2.055563,-1.835056,4.918657,0.541720,-1.144529,-9.962555,9.078970,0.091505,6.419433,6.492630,7.464629,-0.867171,8.648881,0.641528,-1.916641,5.329773,1.031617,-9.076324,-8.574526,8.127976,5.930854,7.814757,0.049047,-7.718323,-6.674016,5.543499,-7.710024,-2.180598,-7.256436,4.999375,-6.962781,7.651800,8.591194,-8.825604,1.839285,-4.642889,3.899240,9.373032,-2.336654,5.402294,-7.902208,-3.249158], dtype = "float32")#candidate|6260|(144,)|const|float32
const_6261 = relay.const([[-0.725085,-1.279154,-4.539838,0.432733,-7.290780,-3.639825],[6.606839,-2.636468,2.174415,-6.338071,9.670508,5.889706],[7.086912,-9.875418,-7.121912,-4.378387,3.492261,-0.629516],[-7.546766,-2.384863,-0.612186,4.482373,4.907583,5.324855],[-8.933346,9.095020,-5.607228,2.418587,7.926648,0.544795],[-0.959864,-1.093039,5.741496,-4.701165,2.857935,-7.534497],[5.887969,1.236285,1.228320,2.298306,6.625988,6.306160],[-8.746869,8.033950,1.913602,8.123957,-2.122017,2.865176],[1.976451,9.510323,5.168214,-2.687764,8.240479,2.480782],[-7.210142,-7.898768,9.246551,3.575239,-9.421793,-7.621282],[-8.078672,-0.906370,3.332689,-5.162719,7.032559,8.435128]], dtype = "float32")#candidate|6261|(11, 6)|const|float32
const_6262 = relay.const([10,-8,3,4,-7,4,-4,7,-8,-6,-7,-3,-5,1,6,7,-5,6,-6,4,9,-9,8,6,-3,2,1,2,-6,7,2,-8,1,-6,6,-10,7,-10,5,10,-6,-7,-8,4,-3,-5,-5,3,7,-2,-9,-8,10,-1,1,5,4,6,-5,5,1,3,3,1,7,-2,6,3,7,-2,-5,-10,1,10,-6,3,7,5,-4,-9,-2,9,3,5,-8,-8,6,-4,4,2,-9,1,-3,-5,5,-7,-8,-4,-10,9,-5,-3,-7,-7,-10,-4,4,-6,-4,-3,6,-5,-8,-5,9,8,-5,5,5,4,3,-6,-3,-3,3,5,7,6,-10,-6,7,3,5,1,-1,7,4,8,-4,-4,8,8,1,5,-5,8,-6,-1,8,3,8,1,3,-9,4,-6,7,10,-10,-7,5,-6,-8,-2,-10,6,-6,1,-8,-10,8,-7,-2,2,9,6,7,-6,10,1,-4,-1,4,2,4,6,-8,8,-9,1,-10,-3,10,1,-7,3,7,-2,5,7,-5,-3,8,-4,-2,5,3,-8,-7,-4,-1,-8,10,1,5,9,3,-5,-3,-7,4,-6,2,-10,3,5,-3,-2,4,-10,-3,9,3,8,10,1,-7,-1,-3,10,-6,-9,2,2,7,5,3,6,7,-1,9,-3,1,7,-6,9,6,9,-9,3,4,-4,1,2,5,-7,5,3,5,-1,1,-2,-6,-6,-1,1,-7,2,-6,-8,-6,-7,8,-1,4,-3,-2,3,-6,-2,-7,4,-7,-4], dtype = "int32")#candidate|6262|(294,)|const|int32
call_6259 = relay.TupleGetItem(func_2113_call(relay.reshape(const_6260.astype('float32'), [72, 2]), relay.reshape(const_6261.astype('float32'), [11, 3, 2]), relay.reshape(const_6262.astype('int32'), [294,]), ), 8)
call_6263 = relay.TupleGetItem(func_2118_call(relay.reshape(const_6260.astype('float32'), [72, 2]), relay.reshape(const_6261.astype('float32'), [11, 3, 2]), relay.reshape(const_6262.astype('int32'), [294,]), ), 8)
output = relay.Tuple([call_6243,call_6247,call_6259,const_6260,const_6261,const_6262,])
output2 = relay.Tuple([call_6244,call_6248,call_6263,const_6260,const_6261,const_6262,])
func_6269 = relay.Function([], output)
mod['func_6269'] = func_6269
mod = relay.transform.InferType()(mod)
output = func_6269()
func_6270 = relay.Function([], output)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_6307 = relay.TupleGetItem(func_4822_call(), 0)
call_6308 = relay.TupleGetItem(func_4824_call(), 0)
output = call_6307
output2 = call_6308
func_6343 = relay.Function([], output)
mod['func_6343'] = func_6343
mod = relay.transform.InferType()(mod)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6343_call = mutated_mod.get_global_var('func_6343')
call_6344 = func_6343_call()
output = call_6344
func_6345 = relay.Function([], output)
mutated_mod['func_6345'] = func_6345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2947_call = mod.get_global_var('func_2947')
func_2948_call = mutated_mod.get_global_var('func_2948')
call_6366 = func_2947_call()
call_6367 = func_2947_call()
func_709_call = mod.get_global_var('func_709')
func_712_call = mutated_mod.get_global_var('func_712')
var_6388 = relay.var("var_6388", dtype = "float64", shape = (750,))#candidate|6388|(750,)|var|float64
call_6387 = func_709_call(relay.reshape(var_6388.astype('float64'), [10, 15, 5]))
call_6389 = func_709_call(relay.reshape(var_6388.astype('float64'), [10, 15, 5]))
const_6390 = relay.const([5.214320,4.749122,-4.754688,7.719508,8.886072,-0.356302,1.132739,-6.014146,-6.983459,3.271316,0.183969,-8.140159,-7.718384,-0.271186,-1.309327,-2.897387,0.585212,-8.491249,-7.711149,-9.928569,3.853476,-9.475172,-8.336919,-9.085866,4.460059,5.495887,3.341333,-9.000357,0.597591,-0.184567,-9.566280,8.872237,-9.492323,3.119166,-8.289404,-2.362326,-5.546140,-8.976234,9.077041,8.689070,-3.556005,4.072623,-8.197646,-1.645784,1.791203,-7.173940,1.540035,0.145582,8.394205,-1.795279,-7.365839,-9.644451,4.090674,7.396643,1.869118,-5.742432,4.288396,-6.318504,1.686392,9.352816,8.503384,-0.662201,-4.248423,-8.024203,-0.193290,3.844429,3.300948,9.629627,-3.858269,0.321651,4.553518,5.958990,5.921769,7.319096,-6.962112,9.986703,-2.327264,-3.018484,2.577827,-8.906792,6.309374,-8.271643,9.204743,-6.319137,9.699427,-9.630399,2.451759,0.248291,9.790161,3.926577,-7.638238,6.336346,-4.791283,6.204757,-3.366034,6.342928,1.496591,-8.852314,3.512717,-8.129910,-6.444232,5.466832,-3.148284,-4.959628,1.660708,-4.890623,8.588792,-7.613408,3.290682,2.997705,-0.638086,-4.025668,3.585388,-4.500591,7.670440,3.634333,1.121514,6.033541,0.535181,2.895583,9.467473,-2.056076,7.972835,-2.774880,-6.848730,-0.438437,-7.098748,-3.585737,0.551825,-4.626312,6.403661,-5.863753,-2.836117,1.594753,-3.956977,4.806799,-4.129715,-7.096850,-5.685994,-6.146234,-7.988617,4.119230,7.161787,-8.451819,6.975616,2.453154,-6.900197,7.934183,4.689294,0.724964,-5.043734,3.302129,-6.401151,-4.305929,-1.939928,-0.213052,-2.728854,6.752101,6.357539,-3.215353,-3.279103,-8.026139,-6.975844,-0.759366,-3.762512,7.977727,-4.174211,2.530785,-8.048945,4.968599,-6.512789,6.074880,-3.271809,3.763277,1.172710,-2.957984,2.288847,-6.384998,-7.605154,-7.589142,-9.020008,3.467211,-9.467806,-1.947834,2.711048,-2.569950,9.226696,-8.698952,-6.193143,5.007652,0.526518,-8.508243,-3.129574,-1.303230,6.957786,4.178781,-9.067381,-0.324323,9.173484,7.403521,-3.694429,1.800005,-6.479977,3.867812,7.738889,-8.920716,-8.663123,8.094152,9.384025,-3.601023,-0.945217,9.376364,-6.161118,-8.043758,-3.540580,-2.333061,1.238844,-7.974846,7.374108,-9.271909,-1.125164,-6.700118,6.596823,-9.984993,7.541972,8.419834,-6.615339,1.090258,-5.370530,8.171344,9.872941,-4.671098,6.929967,-3.503053,-1.577479,0.259329,3.844095,-9.666038,3.595357,-9.322305,1.793488,0.236197,-7.289333,-7.821260,-5.974056,5.026201,-7.444239,-7.547742,-6.234501,-7.290775,5.063122,2.561703,4.079230,-4.612993,-7.024098,-2.090421,-6.546740,-3.293926,-6.964989,-9.448959,-5.025120,-1.857906,7.015504,-1.858221,-8.244582,-8.351667,-6.169999,-3.483423,9.106585,-8.762315,9.621253,1.544019,-6.537435,-4.039890,9.972696,1.326552,-3.942231,-1.568698,-8.347724,2.991050,0.952268,7.274693,-7.565389,-2.995229,-8.500943,4.824625,8.939035,3.198453,-1.355406,-4.408140,-4.497216,1.728167,8.275483,-6.507906,-6.133469,-0.004729,-2.704447,4.380107,-8.408102,-2.449048,8.248951,-0.234684,5.612800,-5.872972,-5.811916,5.856798,3.218070,4.557873,-6.706489,-1.136025,-5.717388,-4.302608,-1.443076,4.227113,5.176872,1.605572,8.595398,5.719651,-1.404460,7.664026,-5.976600,5.426945,9.926714,6.381431,0.498637,7.604746,-1.008295,-6.837552,8.783497,0.255753,4.061054,1.876270,9.952986,6.254622,1.904566,-9.035102,2.063111,7.710767,-5.379231,-9.393466,-9.806363,1.568859,-0.745003,-6.434726,2.367028,-1.321690,-5.077635,-7.030472,7.503367,8.697622,-4.447832,-7.377668,-8.089102,-5.430285,-9.442109,-8.851950,-0.694704,-2.254222,7.522507,5.289233,-6.603753,2.354657,8.763562,-9.153233,-7.602739,7.900708,6.812388,-4.452279,0.261776,6.986170,-4.923441,2.374673,6.612891,8.947698,-1.149154,-2.380730,-4.394392,9.895757,9.098425,-9.698029,-8.792520,-5.171655,-3.059006,9.407977,9.858753,3.740342,-1.798459,2.100917,-2.843103,-4.576368,5.608326,-8.846105,-8.106750,3.866532,0.023678,4.038218,-5.322536,-8.307214,3.616939,-6.222532,-7.404335,-6.962698,-6.505983,-1.640765,-9.992470,2.629106,0.261055,3.572419,-0.386779,9.630025,9.008538,1.121946,-2.229613,-2.263029,0.662654,6.963515,-0.645678,-9.864214,9.325094,-0.439081,7.481119,7.440986,2.124300,-9.427945,0.258684,8.509811,3.138183,-1.231108,-6.835334,1.880325,-4.751511,6.913304,-3.491924,4.428947,6.930143,5.881138,-3.223875,2.407284,7.307125,5.576605,-5.234338,0.673554,3.795252,8.976666,-6.644422,5.950366,3.744000,-6.012799,-9.446363,0.203385,5.454201,-3.520135,5.561616,8.633762,8.655540,-5.131811,9.468076,9.963938,8.527657,3.646176,6.837829,-6.904373,5.587810,-6.120748,8.245882,3.710261,-7.920660,-7.096631,-2.467749,8.396212,-9.302134,2.862216,9.915206,-2.369065,8.179583,6.214517,-8.415172,-1.301791,-5.192393,0.979050,-8.152817,-7.077901,-4.234116,5.763652,-2.073619,-8.802392,-1.003411,-4.761279,9.624026,-8.723468,-4.477048,2.511995,-7.306712,4.145520,4.777717,-8.738828,3.730208,-7.088853,3.268334,-8.843676,-6.350116,-4.955475,-1.783429,6.662223,0.786497,3.769404,8.674353,-2.925142,-6.042566,-6.026366,-2.844241,7.083312,8.180255,6.178982,9.547926,-6.037740,-9.805006,-6.201737,4.752683,-7.841712,-3.684201,9.159020,8.089500,4.686190,1.117013,2.382033,-4.451959,9.634225,-6.813940,-9.123504,3.999486,-2.007277,9.274167,-0.506676,-2.782635,6.976240,-0.274376,-6.831248,-7.355396,5.701439,2.963003,2.827825,-7.466733,0.957410,2.338829,-8.777516,-8.584422,-2.817571,-5.880211,-4.316181,-6.183983,4.817653,-1.339121,-1.637284,6.053758,-3.145723,-5.429191,-4.678710,6.426837,5.298658,2.695277,4.285655,-4.469782,4.674630,-3.969969,6.474766,4.978524,-1.580571,-0.356702,-6.564354,-3.148363,-5.914731,-0.791259,2.833722,-6.543033,-2.149577,5.144660,7.460753,9.176669,-3.670748,8.562036,-2.163098,-1.041005,-4.005836,3.132706,-5.925039,-2.273898,-0.007177,2.359576,-4.336658,7.342800,3.926473,-5.151709,-9.229522,2.365210,7.215859,8.364439,7.073488,-3.318570,-8.168691,-6.340784,-8.353157,-5.386145,4.250388,-9.187137,8.942644,-0.961116,-1.369200,-7.071798,-5.862680,3.866915,-8.055236,-9.574868,-6.186066,8.060003,-6.570071,4.444340,-9.658020,-2.981154,7.266677,6.710707,-2.952654,6.936254,-9.881035,7.451343,2.994237,0.367193,4.315511,0.991005,-3.034550,4.807232,-0.896770,4.698917,-8.242530,-3.075866,0.906054,-5.140309,3.609749,-5.634693,6.040699,6.617176,9.447618,-3.993869,-0.460035,-7.472802,1.198044,9.669541,9.099090,-6.228532,-4.926449,4.424689,5.022287,6.265982,-6.821934,-4.483051,-4.968494,-0.280879,-0.464953,-7.953423,6.539127,-8.059744,-3.840676,-9.415102,-4.286339,1.247246,-9.226861,-7.674413,3.435036,-0.136916,-0.579754,9.635961,-4.558189,-7.078434,1.236575,0.938109,3.510760,2.521464,-3.848016,2.927964,-7.602510,3.183160,-3.632758,-8.295828,-6.705957,5.870934,-1.649518,0.679415,-3.662448,2.219246,-3.754038,-1.861769,-3.053462,-4.590227,-1.236751,-9.748384,-0.422719,3.821671,1.790650,-9.153666,-4.103743,-9.077381,9.326899,-6.513708,6.572543,7.430407,-6.551110,-9.838005,3.042735,6.518770,-0.740635,-0.532154,-5.692098,1.982089,-9.862105,5.053628], dtype = "float64")#candidate|6390|(715,)|const|float64
bop_6391 = relay.floor_mod(call_6366.astype('float32'), relay.reshape(const_6390.astype('float32'), relay.shape_of(call_6366))) # shape=(715,)
bop_6394 = relay.floor_mod(call_6367.astype('float32'), relay.reshape(const_6390.astype('float32'), relay.shape_of(call_6367))) # shape=(715,)
uop_6395 = relay.tan(var_6388.astype('float64')) # shape=(750,)
output = relay.Tuple([call_6387,bop_6391,uop_6395,])
output2 = relay.Tuple([call_6389,bop_6394,uop_6395,])
func_6399 = relay.Function([var_6388,], output)
mod['func_6399'] = func_6399
mod = relay.transform.InferType()(mod)
var_6400 = relay.var("var_6400", dtype = "float64", shape = (750,))#candidate|6400|(750,)|var|float64
output = func_6399(var_6400)
func_6401 = relay.Function([var_6400], output)
mutated_mod['func_6401'] = func_6401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1633_call = mod.get_global_var('func_1633')
func_1634_call = mutated_mod.get_global_var('func_1634')
call_6407 = relay.TupleGetItem(func_1633_call(), 0)
call_6408 = relay.TupleGetItem(func_1634_call(), 0)
output = call_6407
output2 = call_6408
func_6420 = relay.Function([], output)
mod['func_6420'] = func_6420
mod = relay.transform.InferType()(mod)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6420_call = mutated_mod.get_global_var('func_6420')
call_6421 = func_6420_call()
output = call_6421
func_6422 = relay.Function([], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_6426 = func_5470_call()
call_6427 = func_5470_call()
func_1633_call = mod.get_global_var('func_1633')
func_1634_call = mutated_mod.get_global_var('func_1634')
call_6450 = relay.TupleGetItem(func_1633_call(), 0)
call_6451 = relay.TupleGetItem(func_1634_call(), 0)
var_6452 = relay.var("var_6452", dtype = "uint32", shape = (715,))#candidate|6452|(715,)|var|uint32
bop_6453 = relay.right_shift(call_6426.astype('uint16'), relay.reshape(var_6452.astype('uint16'), relay.shape_of(call_6426))) # shape=(715,)
bop_6456 = relay.right_shift(call_6427.astype('uint16'), relay.reshape(var_6452.astype('uint16'), relay.shape_of(call_6427))) # shape=(715,)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_6468 = relay.TupleGetItem(func_4174_call(), 2)
call_6469 = relay.TupleGetItem(func_4176_call(), 2)
output = relay.Tuple([call_6450,bop_6453,call_6468,])
output2 = relay.Tuple([call_6451,bop_6456,call_6469,])
func_6492 = relay.Function([var_6452,], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6493 = relay.var("var_6493", dtype = "uint32", shape = (715,))#candidate|6493|(715,)|var|uint32
func_6492_call = mutated_mod.get_global_var('func_6492')
call_6494 = func_6492_call(var_6493)
output = call_6494
func_6495 = relay.Function([var_6493], output)
mutated_mod['func_6495'] = func_6495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_6507 = relay.TupleGetItem(func_1791_call(), 0)
call_6508 = relay.TupleGetItem(func_1792_call(), 0)
func_5283_call = mod.get_global_var('func_5283')
func_5288_call = mutated_mod.get_global_var('func_5288')
const_6529 = relay.const([-5,4,2,3,9,-2,-8,3,-7,9,-7,1,-2,-10,-6,-2,-7,-8,4,-2,3,-3,4,-3,1,9,6,9,-2,10,-7,10,-1,-4,10,-8,-8,4,-7,3,8,-5,-5,2,-5,-7,7,6,-6,4,6,8,3,8,-10,-9,6,-3,-6,10,1,4,7,-7,2,-10,3,2,2,7,2,10,-10,9,-2,-9,-8,-1,5,-9,-1,-5,7,-2,9,2,-7,-7,9,-5,5,-4,-7,8,-6,10,4,-2,7,3,-5,-7,-9,-9,10,-1,-8,-6,1,10,10,3,-7,6,-8,8,-4,-8,-9,3,-3,-4,9,-7,-5,6,-6,9,5,-5,-4,8,10,-3,5,8,-8,8,-6,8,3,-7,6,-10,1,5,10,5,9,9,-2,1,-1,1,-5,9,4,7,-3,-8,4,-2,-7,4,-3,-2,-10,-8,6,-10,-6,-9,8,10,-4,-6,2,-3,-2,-8,10,3,5,-2,-9,-1,3,7,9,3,-8,2,-8,10,1,-7,10,-2,-9,7,9,7,2,-5,3,-4,8,10,10,6,-2,4,-2,6,-1,3,2,1,-4,-3,-4,-8,3,-6,2,8,-6,-5,-9,2,-5,-9,5,-9,6,-5,-10,-3,-5,-8,3,-10,-8,-7,-7,6,-4,-6,-7,-7,8,-5,7,1,-7,10,3,-8,6,-8,4,2,3,4,-5,-2,5,1,-5,5,-9,3,4,5,-9,-10,10,-1,-1,10,-8,-9,10,-4,-10,9,3,-5,3,4,4,-5,7,5,2,4,-10,2,10,-6,-4,-4,-7,1,-9,-4,-10,-7,-6,5,-10,6,9,-3,-4,1,-4,-5,4,-2,3,-5,-6,10,-9,-8,1,10,-3,-8,1,-5,6,9,7,2,9,1,-4,-7,-5,1,-10,5,-3,10,-4,-3,6,2,-3,-3,6,6,-6,-2,-8,6,-3,1,6,1,8,-4,-4,-10,-1,-9,-9,-6,10,6,8,-5,-5,-8,-10,2,-5,-6,3,5,-9,10,1,-10,3,-8,10,-3,-2,5,-1,1,5,4,1,3,-6,-7,10,-8,7,-5,9,-1,8,2,7,7,1,2,-3,-6,-10,5,-2,5,9,6,8,1,-5,7,-8,-4,6,-5,-2,7,3,4,-7,7,-8,5,10,2,-1,-7,-3,-10,-8,-7,3,4,8,-3,8,-2,-1,-2,3,8,5,4,8,-7,8,-9,-2,7,3,-4,8,-9,4,-3,5,10,-7,-8,-8,-1,2,7,5,1,-6,10,4,-6,-1,3,8,-6,10,2,-8,4,5,2,-7,-9,-2,8,8,-2,3,-5,-3,-8,4,2,-4,-1,-10,-8,-10,2,8,7,6,-5,9,9,-2,4,8,-7,4,1,1,-1,-8,2,-4,2,-10,-6,10,10,4,-5,2,7,9,10,-9,2,5,-3,-5,-7,-3,-4,2,-4,-2,1,10,9,-5,-1,9,2,-9,3,2,-9,-6,-8,8,5,1,-3,-3,2,1,-4,1,6,-3,-4,-10,-9,-5,-5,7,1,5,10,-6,7,8,-2,9,8,9,-6,2,-5,10,-10,-9,6,-6,-1,-1,-2,2,-7,-1,5,-7,-1,6,-6,8,-7,8,1,2,-8,4,3,3,-9,6,-4,-6,-2,3,-3,5,-5,5,-8,-10,1,6,10,-5,4,6,4,5,6,-3,8,-9,4,-1,-3,1,-6,10,-6,6,6,-10,-4,4,4,9,9,4,-1,8,-7,10,7,9,4,-5,-9,-1,-3,-3,6,8,-9,1,-9,-6,9,2,-7,-9,-8,3,1,-2,-3,-1,6,-6,-4,-7,-5,1,-10,-10,-6,9,-5,-3,10,-3,10,-2,5,-1,3,4,-10,4,8,6,4,9,-10,10,-8,3], dtype = "int16")#candidate|6529|(715,)|const|int16
var_6530 = relay.var("var_6530", dtype = "float64", shape = (1352,))#candidate|6530|(1352,)|var|float64
var_6531 = relay.var("var_6531", dtype = "float32", shape = (144,))#candidate|6531|(144,)|var|float32
call_6528 = relay.TupleGetItem(func_5283_call(relay.reshape(const_6529.astype('int16'), [715,]), relay.reshape(var_6530.astype('float64'), [1352,]), relay.reshape(var_6531.astype('float32'), [144,]), ), 5)
call_6532 = relay.TupleGetItem(func_5288_call(relay.reshape(const_6529.astype('int16'), [715,]), relay.reshape(var_6530.astype('float64'), [1352,]), relay.reshape(var_6531.astype('float32'), [144,]), ), 5)
func_3599_call = mod.get_global_var('func_3599')
func_3601_call = mutated_mod.get_global_var('func_3601')
var_6541 = relay.var("var_6541", dtype = "int8", shape = ())#candidate|6541|()|var|int8
call_6540 = relay.TupleGetItem(func_3599_call(relay.reshape(var_6541.astype('int8'), [])), 2)
call_6542 = relay.TupleGetItem(func_3601_call(relay.reshape(var_6541.astype('int8'), [])), 2)
func_2826_call = mod.get_global_var('func_2826')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_6543 = relay.TupleGetItem(func_2826_call(), 1)
call_6544 = relay.TupleGetItem(func_2827_call(), 1)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
call_6549 = relay.TupleGetItem(func_961_call(relay.reshape(const_6529.astype('int16'), [13, 55]), relay.reshape(call_6528.astype('float32'), [144,]), ), 6)
call_6550 = relay.TupleGetItem(func_964_call(relay.reshape(const_6529.astype('int16'), [13, 55]), relay.reshape(call_6528.astype('float32'), [144,]), ), 6)
func_3966_call = mod.get_global_var('func_3966')
func_3968_call = mutated_mod.get_global_var('func_3968')
call_6566 = relay.TupleGetItem(func_3966_call(), 0)
call_6567 = relay.TupleGetItem(func_3968_call(), 0)
output = relay.Tuple([call_6507,call_6528,const_6529,var_6530,var_6531,call_6540,var_6541,call_6543,call_6549,call_6566,])
output2 = relay.Tuple([call_6508,call_6532,const_6529,var_6530,var_6531,call_6542,var_6541,call_6544,call_6550,call_6567,])
func_6569 = relay.Function([var_6530,var_6531,var_6541,], output)
mod['func_6569'] = func_6569
mod = relay.transform.InferType()(mod)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mutated_mod.get_global_var('func_6569')
var_6571 = relay.var("var_6571", dtype = "float64", shape = (1352,))#candidate|6571|(1352,)|var|float64
var_6572 = relay.var("var_6572", dtype = "float32", shape = (144,))#candidate|6572|(144,)|var|float32
var_6573 = relay.var("var_6573", dtype = "int8", shape = ())#candidate|6573|()|var|int8
call_6570 = func_6569_call(var_6571,var_6572,var_6573,)
output = call_6570
func_6574 = relay.Function([var_6571,var_6572,var_6573,], output)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_6592 = relay.TupleGetItem(func_1757_call(), 1)
call_6593 = relay.TupleGetItem(func_1759_call(), 1)
output = relay.Tuple([call_6592,])
output2 = relay.Tuple([call_6593,])
func_6615 = relay.Function([], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6615_call = mutated_mod.get_global_var('func_6615')
call_6616 = func_6615_call()
output = call_6616
func_6617 = relay.Function([], output)
mutated_mod['func_6617'] = func_6617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4915_call = mutated_mod.get_global_var('func_4915')
call_6628 = relay.TupleGetItem(func_4913_call(), 2)
call_6629 = relay.TupleGetItem(func_4915_call(), 2)
func_3007_call = mod.get_global_var('func_3007')
func_3009_call = mutated_mod.get_global_var('func_3009')
var_6634 = relay.var("var_6634", dtype = "float32", shape = (144,))#candidate|6634|(144,)|var|float32
call_6633 = relay.TupleGetItem(func_3007_call(relay.reshape(var_6634.astype('float32'), [144,])), 1)
call_6635 = relay.TupleGetItem(func_3009_call(relay.reshape(var_6634.astype('float32'), [144,])), 1)
func_89_call = mod.get_global_var('func_89')
func_92_call = mutated_mod.get_global_var('func_92')
call_6636 = relay.TupleGetItem(func_89_call(relay.reshape(call_6628.astype('int16'), [11, 5, 13])), 0)
call_6637 = relay.TupleGetItem(func_92_call(relay.reshape(call_6628.astype('int16'), [11, 5, 13])), 0)
output = relay.Tuple([call_6628,call_6633,var_6634,call_6636,])
output2 = relay.Tuple([call_6629,call_6635,var_6634,call_6637,])
func_6640 = relay.Function([var_6634,], output)
mod['func_6640'] = func_6640
mod = relay.transform.InferType()(mod)
mutated_mod['func_6640'] = func_6640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6641 = relay.var("var_6641", dtype = "float32", shape = (144,))#candidate|6641|(144,)|var|float32
func_6640_call = mutated_mod.get_global_var('func_6640')
call_6642 = func_6640_call(var_6641)
output = call_6642
func_6643 = relay.Function([var_6641], output)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6269_call = mod.get_global_var('func_6269')
func_6270_call = mutated_mod.get_global_var('func_6270')
call_6690 = relay.TupleGetItem(func_6269_call(), 3)
call_6691 = relay.TupleGetItem(func_6270_call(), 3)
output = relay.Tuple([call_6690,])
output2 = relay.Tuple([call_6691,])
func_6705 = relay.Function([], output)
mod['func_6705'] = func_6705
mod = relay.transform.InferType()(mod)
mutated_mod['func_6705'] = func_6705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6705_call = mutated_mod.get_global_var('func_6705')
call_6706 = func_6705_call()
output = call_6706
func_6707 = relay.Function([], output)
mutated_mod['func_6707'] = func_6707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_6722 = func_4270_call()
call_6723 = func_4270_call()
output = call_6722
output2 = call_6723
func_6724 = relay.Function([], output)
mod['func_6724'] = func_6724
mod = relay.transform.InferType()(mod)
mutated_mod['func_6724'] = func_6724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6724_call = mutated_mod.get_global_var('func_6724')
call_6725 = func_6724_call()
output = call_6725
func_6726 = relay.Function([], output)
mutated_mod['func_6726'] = func_6726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5343_call = mod.get_global_var('func_5343')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_6730 = relay.TupleGetItem(func_5343_call(), 0)
call_6731 = relay.TupleGetItem(func_5344_call(), 0)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_6748 = relay.TupleGetItem(func_1757_call(), 0)
call_6749 = relay.TupleGetItem(func_1759_call(), 0)
output = relay.Tuple([call_6730,call_6748,])
output2 = relay.Tuple([call_6731,call_6749,])
func_6767 = relay.Function([], output)
mod['func_6767'] = func_6767
mod = relay.transform.InferType()(mod)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6767_call = mutated_mod.get_global_var('func_6767')
call_6768 = func_6767_call()
output = call_6768
func_6769 = relay.Function([], output)
mutated_mod['func_6769'] = func_6769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_6770 = func_5470_call()
call_6771 = func_5470_call()
func_6767_call = mod.get_global_var('func_6767')
func_6769_call = mutated_mod.get_global_var('func_6769')
call_6772 = relay.TupleGetItem(func_6767_call(), 1)
call_6773 = relay.TupleGetItem(func_6769_call(), 1)
func_3800_call = mod.get_global_var('func_3800')
func_3803_call = mutated_mod.get_global_var('func_3803')
call_6782 = relay.TupleGetItem(func_3800_call(relay.reshape(call_6770.astype('float64'), [715,])), 0)
call_6783 = relay.TupleGetItem(func_3803_call(relay.reshape(call_6770.astype('float64'), [715,])), 0)
func_1082_call = mod.get_global_var('func_1082')
func_1084_call = mutated_mod.get_global_var('func_1084')
var_6794 = relay.var("var_6794", dtype = "int32", shape = (294,))#candidate|6794|(294,)|var|int32
call_6793 = relay.TupleGetItem(func_1082_call(relay.reshape(var_6794.astype('int32'), [7, 14, 3])), 0)
call_6795 = relay.TupleGetItem(func_1084_call(relay.reshape(var_6794.astype('int32'), [7, 14, 3])), 0)
output = relay.Tuple([call_6770,call_6772,call_6782,call_6793,var_6794,])
output2 = relay.Tuple([call_6771,call_6773,call_6783,call_6795,var_6794,])
func_6801 = relay.Function([var_6794,], output)
mod['func_6801'] = func_6801
mod = relay.transform.InferType()(mod)
var_6802 = relay.var("var_6802", dtype = "int32", shape = (294,))#candidate|6802|(294,)|var|int32
output = func_6801(var_6802)
func_6803 = relay.Function([var_6802], output)
mutated_mod['func_6803'] = func_6803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_6869 = func_1575_call()
call_6870 = func_1575_call()
func_3007_call = mod.get_global_var('func_3007')
func_3009_call = mutated_mod.get_global_var('func_3009')
var_6876 = relay.var("var_6876", dtype = "float32", shape = (144,))#candidate|6876|(144,)|var|float32
call_6875 = relay.TupleGetItem(func_3007_call(relay.reshape(var_6876.astype('float32'), [144,])), 2)
call_6877 = relay.TupleGetItem(func_3009_call(relay.reshape(var_6876.astype('float32'), [144,])), 2)
output = relay.Tuple([call_6869,call_6875,var_6876,])
output2 = relay.Tuple([call_6870,call_6877,var_6876,])
func_6878 = relay.Function([var_6876,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
var_6879 = relay.var("var_6879", dtype = "float32", shape = (144,))#candidate|6879|(144,)|var|float32
output = func_6878(var_6879)
func_6880 = relay.Function([var_6879], output)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2826_call = mod.get_global_var('func_2826')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_6985 = relay.TupleGetItem(func_2826_call(), 2)
call_6986 = relay.TupleGetItem(func_2827_call(), 2)
uop_6989 = relay.cosh(call_6985.astype('float32')) # shape=(8, 13, 13)
uop_6991 = relay.cosh(call_6986.astype('float32')) # shape=(8, 13, 13)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_7009 = relay.TupleGetItem(func_6615_call(), 0)
call_7010 = relay.TupleGetItem(func_6617_call(), 0)
func_5885_call = mod.get_global_var('func_5885')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_7020 = relay.TupleGetItem(func_5885_call(), 0)
call_7021 = relay.TupleGetItem(func_5887_call(), 0)
output = relay.Tuple([uop_6989,call_7009,call_7020,])
output2 = relay.Tuple([uop_6991,call_7010,call_7021,])
func_7026 = relay.Function([], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
mutated_mod['func_7026'] = func_7026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mutated_mod.get_global_var('func_7026')
call_7027 = func_7026_call()
output = call_7027
func_7028 = relay.Function([], output)
mutated_mod['func_7028'] = func_7028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_7065 = relay.TupleGetItem(func_1546_call(), 1)
call_7066 = relay.TupleGetItem(func_1548_call(), 1)
func_3161_call = mod.get_global_var('func_3161')
func_3163_call = mutated_mod.get_global_var('func_3163')
call_7077 = func_3161_call()
call_7078 = func_3161_call()
func_2152_call = mod.get_global_var('func_2152')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_7079 = relay.TupleGetItem(func_2152_call(), 1)
call_7080 = relay.TupleGetItem(func_2153_call(), 1)
func_4850_call = mod.get_global_var('func_4850')
func_4852_call = mutated_mod.get_global_var('func_4852')
call_7094 = relay.TupleGetItem(func_4850_call(), 0)
call_7095 = relay.TupleGetItem(func_4852_call(), 0)
func_5656_call = mod.get_global_var('func_5656')
func_5659_call = mutated_mod.get_global_var('func_5659')
var_7110 = relay.var("var_7110", dtype = "float64", shape = (1352,))#candidate|7110|(1352,)|var|float64
call_7109 = relay.TupleGetItem(func_5656_call(relay.reshape(var_7110.astype('float64'), [1352,])), 4)
call_7111 = relay.TupleGetItem(func_5659_call(relay.reshape(var_7110.astype('float64'), [1352,])), 4)
func_2131_call = mod.get_global_var('func_2131')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_7149 = func_2131_call()
call_7150 = func_2131_call()
var_7156 = relay.var("var_7156", dtype = "float64", shape = (1352,))#candidate|7156|(1352,)|var|float64
bop_7157 = relay.maximum(var_7110.astype('float64'), relay.reshape(var_7156.astype('float64'), relay.shape_of(var_7110))) # shape=(1352,)
output = relay.Tuple([call_7065,call_7077,call_7079,call_7094,call_7109,call_7149,bop_7157,])
output2 = relay.Tuple([call_7066,call_7078,call_7080,call_7095,call_7111,call_7150,bop_7157,])
func_7173 = relay.Function([var_7110,var_7156,], output)
mod['func_7173'] = func_7173
mod = relay.transform.InferType()(mod)
mutated_mod['func_7173'] = func_7173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7173_call = mutated_mod.get_global_var('func_7173')
var_7175 = relay.var("var_7175", dtype = "float64", shape = (1352,))#candidate|7175|(1352,)|var|float64
var_7176 = relay.var("var_7176", dtype = "float64", shape = (1352,))#candidate|7176|(1352,)|var|float64
call_7174 = func_7173_call(var_7175,var_7176,)
output = call_7174
func_7177 = relay.Function([var_7175,var_7176,], output)
mutated_mod['func_7177'] = func_7177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_7186 = func_1575_call()
call_7187 = func_1575_call()
output = call_7186
output2 = call_7187
func_7191 = relay.Function([], output)
mod['func_7191'] = func_7191
mod = relay.transform.InferType()(mod)
output = func_7191()
func_7192 = relay.Function([], output)
mutated_mod['func_7192'] = func_7192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5006_call = mutated_mod.get_global_var('func_5006')
call_7237 = relay.TupleGetItem(func_5004_call(), 1)
call_7238 = relay.TupleGetItem(func_5006_call(), 1)
output = relay.Tuple([call_7237,])
output2 = relay.Tuple([call_7238,])
func_7242 = relay.Function([], output)
mod['func_7242'] = func_7242
mod = relay.transform.InferType()(mod)
output = func_7242()
func_7243 = relay.Function([], output)
mutated_mod['func_7243'] = func_7243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3504_call = mod.get_global_var('func_3504')
func_3506_call = mutated_mod.get_global_var('func_3506')
call_7250 = relay.TupleGetItem(func_3504_call(), 0)
call_7251 = relay.TupleGetItem(func_3506_call(), 0)
func_2876_call = mod.get_global_var('func_2876')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_7258 = func_2876_call()
call_7259 = func_2876_call()
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
var_7267 = relay.var("var_7267", dtype = "int32", shape = (49, 6))#candidate|7267|(49, 6)|var|int32
call_7266 = relay.TupleGetItem(func_6801_call(relay.reshape(var_7267.astype('int32'), [294,])), 0)
call_7268 = relay.TupleGetItem(func_6803_call(relay.reshape(var_7267.astype('int32'), [294,])), 0)
uop_7296 = relay.tan(var_7267.astype('float32')) # shape=(49, 6)
func_2446_call = mod.get_global_var('func_2446')
func_2449_call = mutated_mod.get_global_var('func_2449')
call_7298 = relay.TupleGetItem(func_2446_call(relay.reshape(call_7266.astype('int16'), [715,])), 5)
call_7299 = relay.TupleGetItem(func_2449_call(relay.reshape(call_7266.astype('int16'), [715,])), 5)
output = relay.Tuple([call_7250,call_7258,call_7266,uop_7296,call_7298,])
output2 = relay.Tuple([call_7251,call_7259,call_7268,uop_7296,call_7299,])
func_7303 = relay.Function([var_7267,], output)
mod['func_7303'] = func_7303
mod = relay.transform.InferType()(mod)
mutated_mod['func_7303'] = func_7303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7304 = relay.var("var_7304", dtype = "int32", shape = (49, 6))#candidate|7304|(49, 6)|var|int32
func_7303_call = mutated_mod.get_global_var('func_7303')
call_7305 = func_7303_call(var_7304)
output = call_7305
func_7306 = relay.Function([var_7304], output)
mutated_mod['func_7306'] = func_7306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7026_call = mod.get_global_var('func_7026')
func_7028_call = mutated_mod.get_global_var('func_7028')
call_7353 = relay.TupleGetItem(func_7026_call(), 2)
call_7354 = relay.TupleGetItem(func_7028_call(), 2)
output = call_7353
output2 = call_7354
func_7361 = relay.Function([], output)
mod['func_7361'] = func_7361
mod = relay.transform.InferType()(mod)
mutated_mod['func_7361'] = func_7361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7361_call = mutated_mod.get_global_var('func_7361')
call_7362 = func_7361_call()
output = call_7362
func_7363 = relay.Function([], output)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_7379 = relay.TupleGetItem(func_4822_call(), 0)
call_7380 = relay.TupleGetItem(func_4824_call(), 0)
output = relay.Tuple([call_7379,])
output2 = relay.Tuple([call_7380,])
func_7388 = relay.Function([], output)
mod['func_7388'] = func_7388
mod = relay.transform.InferType()(mod)
mutated_mod['func_7388'] = func_7388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7388_call = mutated_mod.get_global_var('func_7388')
call_7389 = func_7388_call()
output = call_7389
func_7390 = relay.Function([], output)
mutated_mod['func_7390'] = func_7390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_7396 = relay.TupleGetItem(func_1051_call(), 0)
call_7397 = relay.TupleGetItem(func_1052_call(), 0)
func_4370_call = mod.get_global_var('func_4370')
func_4371_call = mutated_mod.get_global_var('func_4371')
call_7414 = relay.TupleGetItem(func_4370_call(), 1)
call_7415 = relay.TupleGetItem(func_4371_call(), 1)
output = relay.Tuple([call_7396,call_7414,])
output2 = relay.Tuple([call_7397,call_7415,])
func_7420 = relay.Function([], output)
mod['func_7420'] = func_7420
mod = relay.transform.InferType()(mod)
mutated_mod['func_7420'] = func_7420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7420_call = mutated_mod.get_global_var('func_7420')
call_7421 = func_7420_call()
output = call_7421
func_7422 = relay.Function([], output)
mutated_mod['func_7422'] = func_7422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4370_call = mod.get_global_var('func_4370')
func_4371_call = mutated_mod.get_global_var('func_4371')
call_7482 = relay.TupleGetItem(func_4370_call(), 0)
call_7483 = relay.TupleGetItem(func_4371_call(), 0)
func_4370_call = mod.get_global_var('func_4370')
func_4371_call = mutated_mod.get_global_var('func_4371')
call_7509 = relay.TupleGetItem(func_4370_call(), 0)
call_7510 = relay.TupleGetItem(func_4371_call(), 0)
output = relay.Tuple([call_7482,call_7509,])
output2 = relay.Tuple([call_7483,call_7510,])
func_7511 = relay.Function([], output)
mod['func_7511'] = func_7511
mod = relay.transform.InferType()(mod)
mutated_mod['func_7511'] = func_7511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7511_call = mutated_mod.get_global_var('func_7511')
call_7512 = func_7511_call()
output = call_7512
func_7513 = relay.Function([], output)
mutated_mod['func_7513'] = func_7513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3276_call = mod.get_global_var('func_3276')
func_3277_call = mutated_mod.get_global_var('func_3277')
call_7524 = func_3276_call()
call_7525 = func_3276_call()
output = relay.Tuple([call_7524,])
output2 = relay.Tuple([call_7525,])
func_7535 = relay.Function([], output)
mod['func_7535'] = func_7535
mod = relay.transform.InferType()(mod)
mutated_mod['func_7535'] = func_7535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7535_call = mutated_mod.get_global_var('func_7535')
call_7536 = func_7535_call()
output = call_7536
func_7537 = relay.Function([], output)
mutated_mod['func_7537'] = func_7537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_7544 = func_4270_call()
call_7545 = func_4270_call()
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_7550 = relay.TupleGetItem(func_4392_call(), 0)
call_7551 = relay.TupleGetItem(func_4394_call(), 0)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_7554 = relay.TupleGetItem(func_1757_call(), 0)
call_7555 = relay.TupleGetItem(func_1759_call(), 0)
const_7556 = relay.const([[[-7.655871,4.403977,8.981222,3.757663,-2.780897,-9.361701,-0.337140,-7.547209,-3.258997,3.867690,1.555382,5.814642,6.099554],[-1.480445,-3.376974,5.855984,-1.496159,8.503337,-0.654078,0.472552,0.445634,5.904027,-2.512903,-8.986115,5.133535,-8.447423],[4.309493,-2.148111,0.748015,-2.246836,-2.999286,-7.648900,-0.660340,-0.095893,-4.582339,-8.589216,1.111462,-2.710210,7.198873],[-9.464795,-0.982528,8.404736,-3.541291,-2.359036,1.526618,5.533401,-2.849544,-6.804923,0.364945,8.580375,3.996971,-1.197288],[2.154056,-3.061072,3.319825,-2.692133,2.884325,-5.269666,6.350022,-1.313165,9.840045,-5.940375,2.445911,-3.860859,0.921073],[3.528152,9.709808,3.929738,-7.715807,7.468416,-4.454893,6.036410,-2.294429,-1.437478,-7.324319,-8.010635,-4.099009,9.240870],[3.240535,3.355420,3.156351,2.751268,-4.753599,-6.983348,5.447760,-2.423376,3.808042,7.603198,2.549206,8.062098,-3.734573],[7.412869,-6.966420,0.065393,1.690163,-2.801603,3.540026,1.463302,-5.075184,-5.960665,-0.211278,6.498835,-2.874120,8.238758],[-5.689762,8.724843,-8.023192,-7.198505,1.682119,-0.005755,-0.819179,5.903199,4.392381,3.483528,-3.550429,7.434505,-6.855639],[-2.124584,6.387392,1.322885,-3.979745,4.107967,8.643019,3.371762,0.374401,1.915737,-9.705258,2.134230,-6.204963,5.098957],[-9.846751,8.127234,-5.349784,3.919929,3.209445,8.561675,3.562431,-5.010103,-6.711134,9.007115,2.220217,5.664417,0.517560],[3.400012,4.924245,8.085503,2.411257,5.130770,-5.111570,-1.100797,2.147278,-7.935305,-0.044397,2.800958,-4.011095,-5.451673],[-7.554034,-7.157653,-4.509104,9.639440,-3.046594,4.307540,8.863692,9.031232,1.203515,0.933394,-0.957872,5.808458,-0.025375]],[[4.925009,6.250976,-7.611913,-8.126591,7.761878,2.188387,-2.890423,3.304679,2.985455,-0.642006,8.484383,-0.585113,-9.528749],[-5.057021,4.515110,8.408267,3.326327,-8.805108,-2.802375,-4.428876,8.845618,-1.150201,-7.652623,1.081994,-0.362756,-1.266821],[2.385721,-9.521812,9.893396,9.656517,3.236072,-0.211422,9.008050,-4.464379,9.745304,-8.545719,-7.981723,-9.057550,-4.761941],[9.608505,-4.689488,-4.832671,-7.708849,0.824142,5.555198,0.325036,7.376980,-3.730492,-8.469773,-1.281387,2.402384,1.315864],[8.583445,-3.088272,7.404594,-7.589585,-7.776014,-7.387990,6.810585,-4.526948,-5.679598,7.918626,3.639585,4.247208,2.607044],[7.586891,-8.521008,-1.614206,3.831226,3.520263,-8.605630,-8.286919,8.985796,-9.485299,-0.905889,0.048040,-7.913020,9.465358],[-0.177602,1.308504,-9.133649,2.463896,8.919621,6.445894,-1.626653,-2.667969,-0.741767,1.676845,9.010740,8.611214,2.309733],[-6.749341,2.522755,8.268784,-6.494267,7.494071,-2.830358,9.339654,6.429235,-7.545072,-3.756329,-0.623937,4.565513,-2.494908],[4.395802,-5.264560,-8.633068,-0.095668,-3.791399,-1.184633,0.732373,-3.415828,-8.847466,6.714979,-6.338300,6.642878,-8.567125],[4.176995,-6.716953,-4.083560,8.937264,-8.487276,-3.548521,-3.917854,-8.063228,7.675366,-2.012689,2.420166,-8.494336,-9.356583],[-9.751160,0.558291,-6.543973,-6.148206,-8.537376,-6.377083,-3.558098,1.825570,-5.285186,8.551259,-9.065640,-4.596688,-0.294716],[2.074308,-9.321212,7.675652,-0.669238,-6.570390,-9.247202,7.877719,8.926089,-8.154929,-0.580995,-8.089223,0.651511,2.993791],[3.600096,5.071104,-9.294452,-6.339900,-1.286281,3.138876,-3.043490,1.146151,9.931578,1.714273,1.335290,-1.268266,4.190599]],[[-9.989099,-5.485139,0.731165,0.667723,-1.621869,3.505378,-5.151111,-8.702635,-5.175989,3.813907,8.381768,-9.801283,-5.639407],[8.938797,7.131216,4.133712,5.470401,-1.080208,5.884492,3.813602,4.078668,-0.769737,4.183836,0.060549,6.783374,2.152024],[6.539883,2.521698,5.316471,-8.396471,-7.654749,-9.398198,-6.332636,-2.776703,-5.500840,4.009688,-2.881293,-4.918547,-7.217034],[-6.431623,-5.375581,4.364194,0.729104,5.252637,9.217585,-4.780505,-8.267745,7.715138,2.005679,-4.420603,-7.776357,4.366244],[-5.878085,-6.564775,3.123989,-5.771568,-1.732881,-1.040390,7.114019,2.256446,9.006116,-9.932983,-4.762763,-1.247528,8.937730],[-8.874722,-6.756262,-5.427233,9.595407,-6.000520,3.759343,-9.263346,-0.306141,-0.374406,4.837866,-2.432946,1.870007,-7.167633],[-1.810210,7.296852,8.589894,1.717506,1.448593,-2.908040,-6.502031,5.408384,-9.382834,-3.420478,-6.074588,-4.035312,-5.877389],[3.246288,4.030842,4.089781,-9.290250,9.500966,-9.136063,-2.813915,-4.360956,-6.758713,3.305316,7.601061,-9.292096,-4.542281],[-4.559232,-1.419611,9.306995,-9.779404,6.993815,-3.458251,-4.478239,5.059695,1.230529,-7.450098,7.361293,-2.082639,-1.032681],[-8.102469,8.548223,-2.697939,9.276351,-9.634636,-5.376958,2.755206,6.724382,0.013319,1.341292,-5.771263,-5.065987,-4.498013],[-4.031135,-4.333308,-9.227571,5.807682,3.755741,8.560706,-1.472644,1.051215,-0.562142,-2.619092,9.584410,8.178315,-5.676227],[7.086325,-5.558231,-1.192534,-3.431986,-0.234937,5.987359,4.834627,8.289773,5.277552,-0.997798,-5.860832,0.915078,-2.634286],[-0.313277,8.684132,-6.021513,-9.297630,6.523269,0.680713,8.397667,-0.032239,8.824329,-0.191337,0.822948,-2.494788,-5.257354]],[[-2.762209,0.979285,-7.459429,6.781882,-6.756596,-1.059375,-7.515200,-9.111022,-7.016846,4.149046,-7.192831,-8.933854,9.802934],[6.063216,7.228466,-7.645976,0.696476,6.334577,-6.327319,-0.513888,-6.949986,7.879266,-1.113205,-3.459436,7.740372,6.625320],[-2.993696,-2.509803,7.994818,2.681503,-5.903257,2.204495,5.495604,0.153857,3.059396,-1.216321,4.197866,-1.327821,4.218647],[-2.563849,7.405505,3.860169,1.627910,0.277067,8.026929,7.987874,8.444057,8.574355,5.084048,-0.249519,-4.674793,-9.135850],[-2.500866,9.593981,0.436461,-4.298957,-5.037637,-8.117358,-4.900618,-8.563577,-5.548237,6.412012,-1.654078,-0.529216,4.984125],[-2.885092,-7.547363,5.263234,-5.988744,-2.518206,-8.531584,-6.322596,-0.848338,-7.774649,-0.582646,-5.618803,3.635951,-4.553808],[0.657964,7.151902,3.321922,-8.071900,3.412925,-9.920203,0.396680,8.251876,-6.190696,-0.364620,9.230804,4.688736,4.826956],[-8.354602,7.200229,8.886718,-9.499468,6.835544,-0.660193,5.686463,-8.615655,3.655036,-4.634292,8.043279,-5.905461,-4.766558],[7.152915,-4.948026,5.787050,7.775956,4.350316,2.210788,5.588817,-2.203187,5.406964,0.918371,9.401449,3.597392,-4.603216],[-1.588062,-8.139086,-7.123803,-2.192817,-3.678457,6.189260,-5.084283,-9.131847,-6.114004,9.839519,-1.408585,-2.698205,-1.450687],[-1.637368,-8.615723,-3.273058,-2.921262,3.145679,-2.526335,2.834509,3.246806,-4.316676,7.693231,-4.692921,3.745136,-8.221177],[-6.187337,7.397429,4.967707,-2.950887,-9.686141,-0.654835,9.569176,5.492716,-9.384051,-3.752335,-2.987534,6.051804,-6.246677],[4.945740,1.190563,0.500663,8.439578,-4.157540,-8.779144,-8.978781,-0.666790,6.944006,-7.268089,9.017366,4.190472,-1.793701]],[[0.084738,-7.315954,2.306157,9.715378,2.179303,-5.709364,6.123941,8.086743,3.948285,4.867135,8.282003,0.287265,7.893112],[-2.450387,1.856006,-3.363314,-4.613787,-6.495298,8.599828,0.870090,-7.874876,3.938898,-2.974074,6.638197,-7.107497,4.049440],[-9.683756,8.743048,-5.289894,-9.804031,-3.994053,-5.134158,8.674892,5.307915,-7.870371,-5.243477,-5.027531,-7.612692,-9.720566],[6.573684,-5.948015,-3.725702,2.300171,8.912351,9.733111,7.499989,-3.676850,5.952506,-4.668445,-9.875902,4.044789,3.053206],[-1.218041,-5.307412,-3.576611,7.033323,1.798387,2.370030,1.915984,-5.738285,-1.798377,0.771825,3.028610,9.004720,6.580791],[-8.151961,-1.448232,-6.618642,6.512355,3.936780,-9.208825,4.008775,3.536925,4.555475,3.488991,6.039974,1.263875,-0.839089],[0.791225,9.127095,-6.745991,7.850610,8.282807,7.814542,2.105988,-0.149040,-1.532235,7.154371,-3.546433,-3.370725,-5.943858],[-2.328752,-7.988505,-4.210034,-2.614534,-5.926978,5.950711,6.777337,-4.485479,2.227951,7.009872,0.539211,1.256481,2.616655],[4.509298,7.379866,-1.748405,-1.920030,1.269130,-9.507536,-4.107052,-9.857081,2.374710,-6.036174,-7.586821,9.497704,-1.824834],[0.007151,8.433217,2.368092,6.037399,-1.728188,-0.511043,-4.051252,7.322233,0.710229,-6.637335,7.667120,1.498309,3.109148],[4.534582,-6.651484,5.908701,-2.199948,-4.379611,-3.626082,-8.407094,8.403000,0.805853,-6.472277,8.778349,-7.531338,1.811179],[1.691190,0.735491,9.141044,9.581424,-5.818754,6.413941,0.593999,7.133884,2.131210,-5.292975,-7.429702,0.175369,-6.145232],[8.923562,-4.964844,-9.401861,0.464492,-0.499598,-8.338647,-8.542487,-3.045853,2.577057,-1.391556,1.657375,4.937956,-8.994564]],[[3.407380,-6.956194,-5.576522,-7.939572,6.296363,-0.465276,8.008750,4.580543,-8.586679,-5.790115,3.187561,-7.647613,-1.062273],[-7.425689,5.272682,-9.250408,-2.751564,-2.416578,-3.264009,8.915486,6.202240,-8.548805,-8.549774,5.152950,-3.615124,9.087757],[0.387842,7.086389,-6.803611,1.323170,-0.035879,-5.490870,1.095136,-2.830244,-6.635352,4.318821,5.670763,-4.645251,5.414146],[5.111091,2.363490,7.908384,-3.827117,5.006160,-9.358693,1.240826,-5.938289,1.416393,-4.634274,1.404006,3.956593,6.023872],[-4.365062,-2.808483,4.816146,9.730399,4.985938,9.485335,4.188250,-4.564202,-8.705989,4.189214,8.678844,-5.443989,-1.742532],[-4.100083,-1.530849,-2.449513,6.141009,-1.894181,-0.340647,-0.406394,-3.730561,-4.395262,-2.747816,-3.883907,-2.716763,9.233545],[-0.576750,9.082727,3.540243,4.087166,6.127738,-5.142309,-3.750658,9.795562,4.544808,-5.232017,-0.965013,1.693319,8.187318],[7.364141,9.316708,-5.987804,-2.885046,-4.686274,8.925558,3.270742,-3.170585,-3.254866,-1.596684,1.550833,2.968601,5.121406],[-1.676242,-0.704847,-3.134751,0.796758,-7.696204,-4.779717,-0.003907,-1.210336,-2.546462,-2.430325,4.215390,4.718824,1.997624],[0.935390,2.959392,-9.172766,-8.835308,6.127570,-1.025092,-0.174556,-1.737533,5.242710,-8.315273,9.526229,2.832337,6.518919],[-9.558759,-0.701328,9.317826,-1.889742,-4.234883,9.788051,5.675637,-3.966819,6.467170,-5.305388,8.579992,-9.172229,4.855703],[-8.804161,-1.939252,1.374470,-2.117424,-7.388382,-6.670507,-3.287300,4.033526,7.239202,4.550682,-0.966290,-3.933754,-5.960062],[-0.672225,1.438623,-2.244766,-2.157380,0.451543,3.825244,3.830403,-7.742245,-8.233708,-5.785192,-6.386337,-7.611214,1.382473]],[[-0.537522,7.248024,3.857578,-9.498829,1.963523,-4.025811,2.089949,-5.949617,-3.202753,-5.560350,0.708507,1.226865,-4.350858],[4.858220,8.499915,5.855779,-9.572035,8.015008,-8.649372,0.464765,-2.697710,0.082920,6.019361,4.187121,9.984466,-3.475076],[-7.079542,-2.263373,4.302607,-5.762483,8.007321,1.910038,-7.435651,0.031247,-0.576098,2.016364,2.021973,-0.236648,-8.275930],[-4.519902,3.183500,-5.771206,-4.134336,-5.227516,-7.368271,4.522605,-1.845701,8.538879,8.739575,8.369349,7.179571,-7.859562],[9.439046,-8.168629,-4.499819,6.188935,9.905065,-7.210488,-3.151083,-8.267276,6.547014,-1.927603,-3.476793,-0.857726,5.816890],[2.272746,-1.126864,3.554700,-0.446370,6.987581,-6.195577,-4.699461,-6.685132,2.488591,1.182003,5.179029,5.463018,-3.847786],[-0.352326,4.737482,-3.423716,-5.357750,2.269885,-6.482303,9.585859,-3.784719,-6.278928,-6.749954,1.751511,6.333768,8.814445],[9.225968,1.349454,-9.955982,0.604665,3.082121,-5.591156,-3.384911,9.787324,6.740369,7.881520,-7.798080,-3.331511,-5.064212],[-1.230461,-5.484155,0.069226,8.659864,3.390405,-8.097787,8.581945,-5.161367,1.734373,7.548054,6.565815,-3.876729,8.259005],[-5.691860,8.986039,2.077567,-7.956711,6.536427,-4.632957,-2.813641,-2.534131,-2.859678,-1.041254,2.400216,5.443012,-3.983262],[0.804575,5.291456,9.392155,-4.799165,9.745185,6.240822,0.677064,8.330358,4.401798,5.111536,-9.764779,3.357915,-6.537529],[-8.430353,-5.102253,-0.198193,0.144557,-5.171210,8.092001,1.212086,-5.151868,-9.636782,7.681774,0.443634,-6.275474,-6.097837],[-8.335365,9.570815,-7.470239,8.454803,6.259728,-0.040239,5.708937,3.228522,4.247029,1.719772,6.595473,2.067207,8.747697]],[[2.420931,8.659245,-7.525899,-4.088422,-2.099602,-7.403371,7.356532,2.999077,-9.664136,-9.750659,5.747301,3.632776,7.651387],[2.638105,5.487653,-7.447088,-0.845393,2.405448,8.586407,-9.710242,-7.791902,0.671942,-1.683570,-1.783103,-6.920133,9.719784],[-8.196077,-4.214006,8.844394,6.416970,9.111178,-8.506216,5.785469,-7.426735,9.964829,0.642651,4.467504,3.637441,2.183760],[0.914612,-9.402438,-2.746737,3.295524,-8.657704,-7.907307,3.966794,4.316530,3.955349,6.063711,-7.352846,-8.272247,8.684385],[-6.001775,-8.890024,-1.554681,8.805777,-0.151307,6.693607,2.305282,-6.091594,5.000750,0.935970,0.025363,-4.606617,-9.160334],[9.672197,-4.523416,6.258837,4.114800,-2.633019,1.251050,-0.092978,3.145443,5.733648,-0.082090,-4.123553,4.580861,-0.233327],[-2.468971,-0.444860,7.907557,-3.761197,-0.782979,2.184416,5.260658,0.670131,0.570986,-8.954649,1.583608,4.051641,7.668504],[-0.779497,7.039119,-5.418763,9.387664,6.557330,-8.440236,-9.446488,3.964371,1.921035,2.461846,9.393929,-2.151919,-1.973051],[7.323997,3.163908,4.752302,8.744235,0.075503,9.207931,-3.804904,6.824700,-3.757188,9.566769,7.234154,-1.106246,3.185279],[-1.762936,5.289353,-8.924245,-8.857085,2.420748,9.647698,5.509286,-9.927263,6.992234,1.369551,-6.637944,-6.001711,2.260952],[-5.977392,-6.932734,5.230900,4.709111,7.695563,2.396145,-0.485278,-7.995125,7.597555,-8.781452,-1.253964,7.015573,-4.825729],[6.731151,9.890244,8.025917,-3.229271,-3.392520,-0.006214,-1.629349,4.206670,0.023866,-8.150649,8.656909,9.516264,-7.419660],[9.056436,0.482214,3.834921,-7.611878,8.328558,-9.703462,4.355157,1.698526,-6.358913,-4.696367,4.123129,2.551439,2.350354]]], dtype = "float32")#candidate|7556|(8, 13, 13)|const|float32
bop_7557 = relay.not_equal(call_7550.astype('bool'), relay.reshape(const_7556.astype('bool'), relay.shape_of(call_7550))) # shape=(8, 13, 13)
bop_7560 = relay.not_equal(call_7551.astype('bool'), relay.reshape(const_7556.astype('bool'), relay.shape_of(call_7551))) # shape=(8, 13, 13)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_7571 = relay.TupleGetItem(func_5414_call(), 0)
call_7572 = relay.TupleGetItem(func_5415_call(), 0)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_7576 = func_1575_call()
call_7577 = func_1575_call()
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_7595 = func_1337_call()
call_7596 = func_1337_call()
func_5656_call = mod.get_global_var('func_5656')
func_5659_call = mutated_mod.get_global_var('func_5659')
call_7601 = relay.TupleGetItem(func_5656_call(relay.reshape(call_7550.astype('float64'), [1352,])), 2)
call_7602 = relay.TupleGetItem(func_5659_call(relay.reshape(call_7550.astype('float64'), [1352,])), 2)
func_2514_call = mod.get_global_var('func_2514')
func_2517_call = mutated_mod.get_global_var('func_2517')
const_7604 = relay.const([4.818383,2.946259,1.610784,-4.503466,-9.698546,2.555999,3.767467,3.119505,-7.579655,3.249740,-9.097017,-8.101566,-9.105607,4.132275,-8.273042,3.665004,-0.185354,-2.528921,-5.141639,6.989630,-9.638907,-3.787987,8.456859,4.751680,-2.905755,-8.874678,9.952174,-5.308523,-1.675020,6.011679,1.104216,-7.481506,-4.606889,1.539917,4.264980,2.280075,7.820337,-8.310369,4.010187,-4.673984,-6.034661,9.375802,4.374923,-1.398916,6.118163,-6.441457,-7.268557,-6.284638,8.149480,6.077878,-6.497036,-5.969045,0.090986,-5.931159,-5.585102,-8.510702,-3.665808,1.630796,5.865654,5.531003,9.610475,6.728983,-5.732734,-5.431542,8.107642,7.378962,-7.973704,7.458379,-0.399214,6.535148,-6.464757,6.566040,8.682326,-7.159438,-7.721560,0.047066,2.201713,5.552835,-2.335308,-1.481142,-5.058349,7.654337,4.833568,-0.054995,1.216263,2.904371,7.253328,-3.537251,8.561065,6.819502,-8.395831,0.789209,-9.685050,7.828538,9.042107,-1.855753,8.927071,-7.358545,3.633004,-9.156719,-6.908710,-8.225678,0.409875,-8.608296,-0.372882,-3.758206,-1.200512,-9.748716,3.854885,0.984105,2.771084,-0.953937,-8.097764,-6.926139,4.266561,-2.360543,-4.601982,4.674046,6.129743,-7.200932,8.730773,-8.441032,-2.842184,-2.146224,-6.672643,-8.880639,-9.806846,8.489572,-2.035539,-2.366539,-9.085324,5.108039,5.666039,-4.030960,5.959009,-4.937030,-3.947674,-9.701548,-6.565259,-2.778502,5.621102,-3.375722,0.693449,-1.037193,4.379800,4.513958,0.855246,-5.083477,1.183309,2.352326,8.213062,9.393328,-0.115140,8.938414,1.837025,6.464635,-5.549104,-7.808655,6.561094,5.103855,5.650399,8.930809,-5.218760,1.154190,-6.614946,-9.464571,6.185820,2.768846,9.751422,-1.958716,-8.553374,9.265426,9.742218,-1.656547,-3.786027,-4.456379,-7.248495,-4.354882,2.487358,-3.926306,-3.593931,-7.344130,6.286565,1.276182,-6.350867,2.036074,-3.876955,6.077705,-8.498864,-7.044752,-7.750059,-1.375824,-2.057203,3.333568,-2.357107,-4.604830,-7.946503,-9.207328,-2.982326,-6.506661,0.513889,-1.659082,1.847790,-5.659338,7.240127,-5.676378,7.094665,8.855997,-2.255224,1.389916,-8.543510,8.099484,-8.445033,-6.076719,-8.055884,7.041395,-4.312495,5.378167,-5.562761,6.420608,-7.553265,2.705211,-9.968242,-6.134436,3.054139,-5.021109,2.511177,-0.653199,4.396133,-4.056465,2.454297,-7.904164,4.374105,2.824483,2.569845,-5.624906,7.112534,2.392307,-8.805382,-3.562565,9.373328,1.046473,-7.596041,7.250779,4.096459,9.482838,5.546001,-0.777174,4.883475,-3.767685,8.899280,6.324042,-3.105616,-0.548159,-2.794976,-0.537920,3.392950,-1.256217,7.452377,-4.489981,4.195981,-5.875608,6.093960,-4.425159,-2.283621,1.014335,3.530998,-4.394391,7.169385,-8.036312,1.385603,9.983245,-9.848443,2.320017,9.456354,-3.399235,7.912693,-6.761148,-4.965991,-1.773949,2.125944,-9.337767,-9.160290,0.200182,9.331422,9.732894,-7.317689,-8.696103,-8.467845,7.030469,6.684070,-5.767081,-8.994995,8.570311,7.513655,5.003040,4.947824,8.548631,2.172843,8.526143,-4.299775,4.585975,9.496186,-4.788936,4.304324,-7.644312,0.750710,-2.705910,8.830531,-9.117811,8.771530,8.610307,2.665065,-3.213281,5.146812,-4.957128,-7.993438,2.394935,8.852980,5.345523,2.780594,3.460120,-2.254846,-4.752443,2.032775,3.246874,-0.137885,9.418077,0.077793,-1.675053,9.834929,1.125638,8.622734,0.310908,-3.901757,9.931836,-1.346278,-9.220653,-0.965543,-2.673447,-0.960068,-6.924038,0.076842,-7.659840,6.195922,3.222188,5.581757,-9.543621,9.088675,2.164787,-9.942429,8.195661,9.550689,-5.769952,-7.769676,0.435964,-8.661180,-8.058267,4.777902,-8.132488,0.877224,7.511984,-7.171247,2.089872,-6.064307,1.872800,-1.577612,7.478436,9.769535,0.276768,8.295864,-6.934143,0.476078,6.981692,4.626660,6.785224,9.067322,-6.042610,6.374144,-4.566921,-4.719680,-8.255552,-3.484488,1.723817,5.901191,-2.805538,0.666775,-9.523409,6.538851,-7.014655,-5.244610,3.387760,-4.386295,9.675873,-7.219798,0.463214,-0.393495,8.267556,-7.474642,-7.299582,3.245720,-7.040942,5.571690,7.613824,-9.259327,0.321625,-3.268283,-2.937681,-2.891465,-6.502011,4.755280,-4.589659,7.410860,5.326358,-9.553650,-8.783642,-6.472319,-9.975987,4.599643,-5.185615,2.432975,-7.239884,-8.204791,5.412577,3.708734,0.786765,4.243726,-8.107636,9.170980,-8.993742,8.699859,-3.095715,6.912102,8.290249,-4.092239,-8.125050,2.123189,3.286932,-7.773580,8.788719,-3.452963,-9.464605,-7.507367,9.097395,-8.302808,5.975885,-8.918426,8.587808,-0.814662,-8.723745,-8.513036,6.654930,-5.434213,-8.171586,1.679369,-4.793793,-5.725624,3.645512,5.328960,4.829691,2.915604,9.936060,-2.710911,0.922998,7.052022,7.811434,3.621965,0.778357,-8.153060,-1.672676,5.731934,9.295909,1.478508,-6.922844,0.731478,3.190055,-8.195691,-6.984103,1.276458,-8.374063,-3.997315,0.679059,-9.578914,8.180412,-7.046727,-8.250504,-3.173395,5.143859,-4.868414,-6.673570,4.167878,-1.043044,-9.115980,-9.271267,4.162361,-6.937639,0.826971,0.078752,-4.836039,-5.330393,-4.419917,0.238103,-6.824333,-0.137028,-6.652722,7.363094,-0.232184,-5.338736,-8.936941,6.220834,2.020037,0.351691,4.443345,-4.472000,0.160248,-4.579771,3.426197,-9.014590,-2.463393,-9.788258,1.169320,5.480701,-6.189733,-2.390439,-0.942044,-9.606162,8.325642,-0.786917,-0.005626,2.482059,8.337350,9.669725,0.920930,1.885557,-1.583423,-5.159843,3.584172,-7.024510,5.858793,-9.459948,-9.964919,3.194061,8.596631,-0.123767,-1.303889,2.102211,7.997935,-1.665039,5.086495,-2.665858,-6.606432,1.373739,-2.696030,8.653252,5.464468,-9.682270,-1.563252,1.673688,5.971061,2.446049,3.654957,-2.202486,0.694951,2.644790,-7.933925,-4.290654,2.225164,-1.345066,8.356541,1.603388,8.102239,-8.294015,-3.987714,1.914303,4.337961,2.004041,-0.199896,5.118715,9.446777,-7.035134,0.382124,-8.927567,-5.305657,-8.639044,-7.140610,-1.863788,4.597013,8.077187,8.849484,-9.428834,7.854101,6.295351,3.577763,9.363752,-8.286190,-5.433277,-2.514101,-4.457806,9.317526,8.895834,-9.642081,5.652897,-0.311494,6.395174,-7.336650,8.455249,-0.524775,0.173542,9.848260,-6.796784,-2.796336,9.685154,2.942451,5.169433,5.409770,-7.416393,4.942620,4.463423,-6.869383,1.876786,-7.917347,-2.592772,0.126267,-7.085120,-8.630036,-9.744729,9.282751,1.537323,7.978185,0.501136,7.825574,3.786371,-3.386654,4.743667,7.437166,4.983238,2.352713,-4.883151,9.770106,3.696179,9.104653,-2.021936,-6.273418,0.054244,-7.413177,-5.206858,-6.167376,-8.670764,-4.764483,8.914857,-8.938228,-1.517166,-2.476248,5.338604,2.629768,6.995156,-8.553895,-6.854049,-9.376381,7.236050,-8.874861,-9.802910,5.080980,6.437279,-7.048080,7.235645,7.616815,-2.549943,4.889005,6.370811,6.541799,1.420670,-6.460719,-5.766046,-8.532004,-6.599989,3.248174,3.215932,4.663374,-8.143175,-9.237721,7.374231,0.105424,2.543325,0.036700,-3.278231,-0.033180,-8.320060,3.149807,7.662121,-6.163295,-9.279225,-9.249152,-8.270103,6.946664,-0.678519,5.931302,2.741193,3.475332,4.833582,-3.687495,0.176511,1.812252,6.835407,-3.421131,-6.259366,-3.950784,-9.732067,0.761369,4.265752,-6.478737,-6.089675,3.803695,-9.127800,-9.399023,5.589065,1.384721,1.636580,-1.935706,4.524194,5.068263,-8.082914,7.375730,7.144308,7.015793,7.902624,-3.037932,1.373461,2.976309,-9.713131,7.771345,-5.787949,5.475348,-3.221666,1.395189,-5.698729,7.688857,-9.852913,-9.169436,0.861391,-0.132042,8.525299,-4.024799,-7.354576,-6.210235,-0.447935,-4.266792,4.381313,-5.644575,-4.854492,2.339645,4.875611,7.296160,0.472059,5.080430,8.150905,3.109683,-3.417782,-1.426118,-1.047672,3.227053,-1.364797,9.541758,5.840801,9.765905,8.215098,0.898816,-0.938808,3.072087,-3.109723,-9.844700,-8.710514,-6.405978,-9.708511,-2.033370,1.621355,1.519837,3.101671,4.500861,-0.171072,-9.268745,-5.626312,-1.893547,-6.597131,-1.445652,-3.572850,9.307219,4.627279,6.641609,-2.464594,-4.736062,-7.871605,8.109083,-2.975179,-6.988610,-9.291644,8.663379,-6.271899,9.866080,1.184112,0.455904,-6.131762,-2.651096,-5.081096,6.106214,5.549776,5.060165,0.377029,-0.102530,8.286532,9.203323,8.392678,-8.306817,-5.623515,8.205280,-9.266200,-4.627092,9.948040,-2.725476,-3.865999,-5.906345,3.254702,6.891313,-5.989147,-6.530044,2.490785,3.167825,-1.203699,-8.152463,9.246536,-5.692300,0.817005,1.051615,-3.415874,-8.928961,9.156961,-6.716727,-8.721165,-1.870894,8.625353,0.028270,-2.527344,-2.889877,-6.191035,4.554254,-4.223575,1.717040,-2.124394,-7.171264,-3.884283,-1.274826,2.110738,-1.453073,-0.004022,-9.980847,-6.579812,-4.550178,3.465814,7.621779,-1.134445,6.279301,9.824586,-2.002300,4.176237,-2.292485,5.318654,-6.965471,1.967910,3.646370,7.287807,-7.562532,2.475410,-4.468402,7.482241,-8.855973,-5.915760,-0.507041,1.242580,-1.052492,3.683192,-4.341834,0.808273,2.801983,-9.605561,-7.429037,-1.889830,3.132033,-7.150996,-4.906812,1.726062,6.555249,1.286045,1.886371,-1.169188,3.290424,-8.738437,-5.043480,-3.893255,4.739046,-3.322023,-6.146997,-1.761064,-0.342220,1.947711,-1.456137,-3.166840,9.802485,4.335628,-5.909918,-7.655308], dtype = "float64")#candidate|7604|(910,)|const|float64
call_7603 = relay.TupleGetItem(func_2514_call(relay.reshape(const_7604.astype('float64'), [13, 7, 10])), 1)
call_7605 = relay.TupleGetItem(func_2517_call(relay.reshape(const_7604.astype('float64'), [13, 7, 10])), 1)
output = relay.Tuple([call_7544,call_7554,bop_7557,call_7571,call_7576,call_7595,call_7601,call_7603,const_7604,])
output2 = relay.Tuple([call_7545,call_7555,bop_7560,call_7572,call_7577,call_7596,call_7602,call_7605,const_7604,])
func_7611 = relay.Function([], output)
mod['func_7611'] = func_7611
mod = relay.transform.InferType()(mod)
output = func_7611()
func_7612 = relay.Function([], output)
mutated_mod['func_7612'] = func_7612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7388_call = mod.get_global_var('func_7388')
func_7390_call = mutated_mod.get_global_var('func_7390')
call_7645 = relay.TupleGetItem(func_7388_call(), 0)
call_7646 = relay.TupleGetItem(func_7390_call(), 0)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_7651 = func_1575_call()
call_7652 = func_1575_call()
func_3108_call = mod.get_global_var('func_3108')
func_3110_call = mutated_mod.get_global_var('func_3110')
call_7675 = relay.TupleGetItem(func_3108_call(), 1)
call_7676 = relay.TupleGetItem(func_3110_call(), 1)
func_6801_call = mod.get_global_var('func_6801')
func_6803_call = mutated_mod.get_global_var('func_6803')
var_7694 = relay.var("var_7694", dtype = "int32", shape = (294,))#candidate|7694|(294,)|var|int32
call_7693 = relay.TupleGetItem(func_6801_call(relay.reshape(var_7694.astype('int32'), [294,])), 3)
call_7695 = relay.TupleGetItem(func_6803_call(relay.reshape(var_7694.astype('int32'), [294,])), 3)
bop_7714 = relay.greater(call_7693.astype('bool'), relay.reshape(var_7694.astype('bool'), relay.shape_of(call_7693))) # shape=(7, 14, 3)
bop_7717 = relay.greater(call_7695.astype('bool'), relay.reshape(var_7694.astype('bool'), relay.shape_of(call_7695))) # shape=(7, 14, 3)
func_4490_call = mod.get_global_var('func_4490')
func_4493_call = mutated_mod.get_global_var('func_4493')
var_7719 = relay.var("var_7719", dtype = "bool", shape = (1210,))#candidate|7719|(1210,)|var|bool
call_7718 = func_4490_call(relay.reshape(var_7719.astype('bool'), [11, 11, 10]))
call_7720 = func_4490_call(relay.reshape(var_7719.astype('bool'), [11, 11, 10]))
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_7722 = func_1337_call()
call_7723 = func_1337_call()
func_6068_call = mod.get_global_var('func_6068')
func_6069_call = mutated_mod.get_global_var('func_6069')
call_7724 = relay.TupleGetItem(func_6068_call(), 3)
call_7725 = relay.TupleGetItem(func_6069_call(), 3)
func_2826_call = mod.get_global_var('func_2826')
func_2827_call = mutated_mod.get_global_var('func_2827')
call_7730 = relay.TupleGetItem(func_2826_call(), 0)
call_7731 = relay.TupleGetItem(func_2827_call(), 0)
func_2330_call = mod.get_global_var('func_2330')
func_2331_call = mutated_mod.get_global_var('func_2331')
call_7738 = relay.TupleGetItem(func_2330_call(), 2)
call_7739 = relay.TupleGetItem(func_2331_call(), 2)
output = relay.Tuple([call_7645,call_7651,call_7675,bop_7714,call_7718,var_7719,call_7722,call_7724,call_7730,call_7738,])
output2 = relay.Tuple([call_7646,call_7652,call_7676,bop_7717,call_7720,var_7719,call_7723,call_7725,call_7731,call_7739,])
func_7741 = relay.Function([var_7694,var_7719,], output)
mod['func_7741'] = func_7741
mod = relay.transform.InferType()(mod)
var_7742 = relay.var("var_7742", dtype = "int32", shape = (294,))#candidate|7742|(294,)|var|int32
var_7743 = relay.var("var_7743", dtype = "bool", shape = (1210,))#candidate|7743|(1210,)|var|bool
output = func_7741(var_7742,var_7743,)
func_7744 = relay.Function([var_7742,var_7743,], output)
mutated_mod['func_7744'] = func_7744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4971_call = mod.get_global_var('func_4971')
func_4972_call = mutated_mod.get_global_var('func_4972')
call_7783 = func_4971_call()
call_7784 = func_4971_call()
output = relay.Tuple([call_7783,])
output2 = relay.Tuple([call_7784,])
func_7788 = relay.Function([], output)
mod['func_7788'] = func_7788
mod = relay.transform.InferType()(mod)
mutated_mod['func_7788'] = func_7788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mutated_mod.get_global_var('func_7788')
call_7789 = func_7788_call()
output = call_7789
func_7790 = relay.Function([], output)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_7828 = func_5393_call()
call_7829 = func_5393_call()
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_7871 = func_5393_call()
call_7872 = func_5393_call()
output = relay.Tuple([call_7828,call_7871,])
output2 = relay.Tuple([call_7829,call_7872,])
func_7884 = relay.Function([], output)
mod['func_7884'] = func_7884
mod = relay.transform.InferType()(mod)
output = func_7884()
func_7885 = relay.Function([], output)
mutated_mod['func_7885'] = func_7885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4412_call = mod.get_global_var('func_4412')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_7905 = func_4412_call()
call_7906 = func_4412_call()
func_7361_call = mod.get_global_var('func_7361')
func_7363_call = mutated_mod.get_global_var('func_7363')
call_7911 = func_7361_call()
call_7912 = func_7361_call()
func_6878_call = mod.get_global_var('func_6878')
func_6880_call = mutated_mod.get_global_var('func_6880')
var_7914 = relay.var("var_7914", dtype = "float32", shape = (144,))#candidate|7914|(144,)|var|float32
call_7913 = relay.TupleGetItem(func_6878_call(relay.reshape(var_7914.astype('float32'), [144,])), 2)
call_7915 = relay.TupleGetItem(func_6880_call(relay.reshape(var_7914.astype('float32'), [144,])), 2)
func_2574_call = mod.get_global_var('func_2574')
func_2577_call = mutated_mod.get_global_var('func_2577')
var_7925 = relay.var("var_7925", dtype = "uint16", shape = (112,))#candidate|7925|(112,)|var|uint16
call_7924 = relay.TupleGetItem(func_2574_call(relay.reshape(var_7925.astype('uint16'), [2, 8, 7]), relay.reshape(var_7925.astype('uint16'), [2, 8, 7]), ), 2)
call_7926 = relay.TupleGetItem(func_2577_call(relay.reshape(var_7925.astype('uint16'), [2, 8, 7]), relay.reshape(var_7925.astype('uint16'), [2, 8, 7]), ), 2)
output = relay.Tuple([call_7905,call_7911,call_7913,var_7914,call_7924,var_7925,])
output2 = relay.Tuple([call_7906,call_7912,call_7915,var_7914,call_7926,var_7925,])
func_7969 = relay.Function([var_7914,var_7925,], output)
mod['func_7969'] = func_7969
mod = relay.transform.InferType()(mod)
var_7970 = relay.var("var_7970", dtype = "float32", shape = (144,))#candidate|7970|(144,)|var|float32
var_7971 = relay.var("var_7971", dtype = "uint16", shape = (112,))#candidate|7971|(112,)|var|uint16
output = func_7969(var_7970,var_7971,)
func_7972 = relay.Function([var_7970,var_7971,], output)
mutated_mod['func_7972'] = func_7972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_7976 = func_1337_call()
call_7977 = func_1337_call()
func_6145_call = mod.get_global_var('func_6145')
func_6147_call = mutated_mod.get_global_var('func_6147')
call_8075 = relay.TupleGetItem(func_6145_call(), 0)
call_8076 = relay.TupleGetItem(func_6147_call(), 0)
output = relay.Tuple([call_7976,call_8075,])
output2 = relay.Tuple([call_7977,call_8076,])
func_8091 = relay.Function([], output)
mod['func_8091'] = func_8091
mod = relay.transform.InferType()(mod)
output = func_8091()
func_8092 = relay.Function([], output)
mutated_mod['func_8092'] = func_8092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8093 = relay.var("var_8093", dtype = "float32", shape = ())#candidate|8093|()|var|float32
var_8094 = relay.var("var_8094", dtype = "float32", shape = (11, 13, 9))#candidate|8094|(11, 13, 9)|var|float32
bop_8095 = relay.power(var_8093.astype('float32'), var_8094.astype('float32')) # shape=(11, 13, 9)
output = relay.Tuple([bop_8095,])
output2 = relay.Tuple([bop_8095,])
func_8102 = relay.Function([var_8093,var_8094,], output)
mod['func_8102'] = func_8102
mod = relay.transform.InferType()(mod)
mutated_mod['func_8102'] = func_8102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8102_call = mutated_mod.get_global_var('func_8102')
var_8104 = relay.var("var_8104", dtype = "float32", shape = ())#candidate|8104|()|var|float32
var_8105 = relay.var("var_8105", dtype = "float32", shape = (11, 13, 9))#candidate|8105|(11, 13, 9)|var|float32
call_8103 = func_8102_call(var_8104,var_8105,)
output = call_8103
func_8106 = relay.Function([var_8104,var_8105,], output)
mutated_mod['func_8106'] = func_8106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7242_call = mod.get_global_var('func_7242')
func_7243_call = mutated_mod.get_global_var('func_7243')
call_8118 = relay.TupleGetItem(func_7242_call(), 0)
call_8119 = relay.TupleGetItem(func_7243_call(), 0)
var_8124 = relay.var("var_8124", dtype = "uint16", shape = (6, 13, 6))#candidate|8124|(6, 13, 6)|var|uint16
bop_8125 = relay.multiply(call_8118.astype('int64'), relay.reshape(var_8124.astype('int64'), relay.shape_of(call_8118))) # shape=(6, 13, 6)
bop_8128 = relay.multiply(call_8119.astype('int64'), relay.reshape(var_8124.astype('int64'), relay.shape_of(call_8119))) # shape=(6, 13, 6)
func_7884_call = mod.get_global_var('func_7884')
func_7885_call = mutated_mod.get_global_var('func_7885')
call_8132 = relay.TupleGetItem(func_7884_call(), 1)
call_8133 = relay.TupleGetItem(func_7885_call(), 1)
var_8149 = relay.var("var_8149", dtype = "uint16", shape = (6, 13, 6))#candidate|8149|(6, 13, 6)|var|uint16
bop_8150 = relay.add(call_8118.astype('uint64'), relay.reshape(var_8149.astype('uint64'), relay.shape_of(call_8118))) # shape=(6, 13, 6)
bop_8153 = relay.add(call_8119.astype('uint64'), relay.reshape(var_8149.astype('uint64'), relay.shape_of(call_8119))) # shape=(6, 13, 6)
func_3468_call = mod.get_global_var('func_3468')
func_3473_call = mutated_mod.get_global_var('func_3473')
const_8174 = relay.const([-7,-7,-6,-1,6,-5,-4,2,2,5,1,-7,-7,1,5,-10,5,-9,8,3,3,-7,-8,-7,3,6,-1,5,3,-4,2,-3,5,-9,5,-7,9,5,4,-10,3,5,6,2,5,-10,-1,-7,4,-9,7,-7,-3,6,4,6,-1,-1,-2,8,10,6,8,8,-7,-3,5,1,-2,-5,2,-6,-4,-1,2,4,5,3,-5,-7,10,-7,10,2,6,2,9,-10,-7,-1,-8,2,7,9,8,4,-8,4,-10,1,4,-3,-3,7,-4,2,-3,7,2,4,4,10,1,-1,8,9,9,-6,7,-4,-2,-4,3,-7,-9,-4,8,-6,-8,10,-1,10,10,-2,-9,-9,3,6,-5,10,1,-7,-8,8,2,-3,-6,2,-1,5,1,1,-5,9,-9,4,-4,10,5,-9,-3,-7,7,7,4,-8,-5,-10,-5,2,9,-5,-8,5,1,8,8,7,7,-3,-5,7,-1,4,-7,1,4,-10,-1,4,1,-7,1,6,7,10,-2,6,5,9,-8,-9,6,-3,-6,-8,2,8,1,-1,3,2,8,7,10,5,-6,-8,-4,9,1,7,-5,5,8,4,-7,9,6,7,3,2,4,2,-3,8,-8,-5,1,-7,-8,-2,-9,10,-6,1,-9,-9,-5,3,-1,1,-7,10,-10,8,-10,-5,-3,6,2,-9,2,-3,10,-6,8,-10,-6,2,-9,-6,-5,8,5,-5,1,5,-3,-10,-6,-4,6,7,4,9,-4,-2,5,-4,6,-7,-7,-2,-3,-5,-9,-1,-5,-6,-2,4,-2,-6,10,7,-1,-3,-9,1,7,10,7,2,4,2,-5,-5,-5,-3,-10,1,7,2,-8,9,-8,-3,4,8], dtype = "uint8")#candidate|8174|(330,)|const|uint8
var_8175 = relay.var("var_8175", dtype = "int32", shape = (294,))#candidate|8175|(294,)|var|int32
call_8173 = relay.TupleGetItem(func_3468_call(relay.reshape(const_8174.astype('uint8'), [5, 6, 11]), relay.reshape(const_8174.astype('uint8'), [5, 6, 11]), relay.reshape(var_8175.astype('int32'), [294,]), ), 3)
call_8176 = relay.TupleGetItem(func_3473_call(relay.reshape(const_8174.astype('uint8'), [5, 6, 11]), relay.reshape(const_8174.astype('uint8'), [5, 6, 11]), relay.reshape(var_8175.astype('int32'), [294,]), ), 3)
func_4773_call = mod.get_global_var('func_4773')
func_4775_call = mutated_mod.get_global_var('func_4775')
var_8181 = relay.var("var_8181", dtype = "int16", shape = (715,))#candidate|8181|(715,)|var|int16
call_8180 = relay.TupleGetItem(func_4773_call(relay.reshape(var_8181.astype('int16'), [715,])), 3)
call_8182 = relay.TupleGetItem(func_4775_call(relay.reshape(var_8181.astype('int16'), [715,])), 3)
output = relay.Tuple([bop_8125,call_8132,bop_8150,call_8173,const_8174,var_8175,call_8180,var_8181,])
output2 = relay.Tuple([bop_8128,call_8133,bop_8153,call_8176,const_8174,var_8175,call_8182,var_8181,])
func_8185 = relay.Function([var_8124,var_8149,var_8175,var_8181,], output)
mod['func_8185'] = func_8185
mod = relay.transform.InferType()(mod)
mutated_mod['func_8185'] = func_8185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8185_call = mutated_mod.get_global_var('func_8185')
var_8187 = relay.var("var_8187", dtype = "uint16", shape = (6, 13, 6))#candidate|8187|(6, 13, 6)|var|uint16
var_8188 = relay.var("var_8188", dtype = "uint16", shape = (6, 13, 6))#candidate|8188|(6, 13, 6)|var|uint16
var_8189 = relay.var("var_8189", dtype = "int32", shape = (294,))#candidate|8189|(294,)|var|int32
var_8190 = relay.var("var_8190", dtype = "int16", shape = (715,))#candidate|8190|(715,)|var|int16
call_8186 = func_8185_call(var_8187,var_8188,var_8189,var_8190,)
output = call_8186
func_8191 = relay.Function([var_8187,var_8188,var_8189,var_8190,], output)
mutated_mod['func_8191'] = func_8191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3110_call = mutated_mod.get_global_var('func_3110')
call_8200 = relay.TupleGetItem(func_3108_call(), 1)
call_8201 = relay.TupleGetItem(func_3110_call(), 1)
func_5907_call = mod.get_global_var('func_5907')
func_5908_call = mutated_mod.get_global_var('func_5908')
call_8210 = relay.TupleGetItem(func_5907_call(), 0)
call_8211 = relay.TupleGetItem(func_5908_call(), 0)
output = relay.Tuple([call_8200,call_8210,])
output2 = relay.Tuple([call_8201,call_8211,])
func_8212 = relay.Function([], output)
mod['func_8212'] = func_8212
mod = relay.transform.InferType()(mod)
mutated_mod['func_8212'] = func_8212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8212_call = mutated_mod.get_global_var('func_8212')
call_8213 = func_8212_call()
output = call_8213
func_8214 = relay.Function([], output)
mutated_mod['func_8214'] = func_8214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4295_call = mod.get_global_var('func_4295')
func_4296_call = mutated_mod.get_global_var('func_4296')
call_8318 = func_4295_call()
call_8319 = func_4295_call()
output = call_8318
output2 = call_8319
func_8320 = relay.Function([], output)
mod['func_8320'] = func_8320
mod = relay.transform.InferType()(mod)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8320_call = mutated_mod.get_global_var('func_8320')
call_8321 = func_8320_call()
output = call_8321
func_8322 = relay.Function([], output)
mutated_mod['func_8322'] = func_8322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1462_call = mod.get_global_var('func_1462')
func_1464_call = mutated_mod.get_global_var('func_1464')
call_8367 = func_1462_call()
call_8368 = func_1462_call()
output = relay.Tuple([call_8367,])
output2 = relay.Tuple([call_8368,])
func_8373 = relay.Function([], output)
mod['func_8373'] = func_8373
mod = relay.transform.InferType()(mod)
mutated_mod['func_8373'] = func_8373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mutated_mod.get_global_var('func_8373')
call_8374 = func_8373_call()
output = call_8374
func_8375 = relay.Function([], output)
mutated_mod['func_8375'] = func_8375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5613_call = mod.get_global_var('func_5613')
func_5614_call = mutated_mod.get_global_var('func_5614')
call_8397 = relay.TupleGetItem(func_5613_call(), 0)
call_8398 = relay.TupleGetItem(func_5614_call(), 0)
output = call_8397
output2 = call_8398
func_8412 = relay.Function([], output)
mod['func_8412'] = func_8412
mod = relay.transform.InferType()(mod)
mutated_mod['func_8412'] = func_8412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8412_call = mutated_mod.get_global_var('func_8412')
call_8413 = func_8412_call()
output = call_8413
func_8414 = relay.Function([], output)
mutated_mod['func_8414'] = func_8414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7611_call = mod.get_global_var('func_7611')
func_7612_call = mutated_mod.get_global_var('func_7612')
call_8437 = relay.TupleGetItem(func_7611_call(), 5)
call_8438 = relay.TupleGetItem(func_7612_call(), 5)
func_2678_call = mod.get_global_var('func_2678')
func_2680_call = mutated_mod.get_global_var('func_2680')
const_8470 = relay.const([-6.575435,8.105324,-6.115577,5.387216,-0.815729,0.799993,-6.031342,-8.653639,-0.249767,-5.097337,-8.437919,2.146612,-5.621251,4.442576,5.250406,0.263809,-9.793473,-6.411209,8.878941,3.065149,0.979719,-4.997299,9.931866,6.353434,9.795590,8.692448,-5.494271,-7.635230,-9.439454,6.172550,-1.889863,2.641981,0.447115,-4.864482,7.701813,-3.316639,-2.174766,-0.737214,2.320385,-4.141522,-9.338314,-5.314238,-1.517569,7.625717,-4.249418,-5.739168,5.577022,-2.496655,6.636907,-4.705018,-9.942137,-2.902252,5.540756,-1.352774,-1.758457,7.206482,6.216441,-3.342929,-6.037997,-9.210574,-3.771649,1.219443,-4.657928,-8.936479,-9.309790,7.590359,7.099901,-0.748687,-4.013437,-5.151874,2.266089,5.448105,6.432302,-4.654789,0.131781,5.759934,6.001816,-7.893365,-6.371652,-5.024856,9.773365,8.445976,4.029691,7.811426,6.299554,-2.403041,1.860282,4.126520,9.298879,-6.199856,-2.632893,-7.260798,-8.951922,4.256021,6.873680,-7.794141,6.789721,-5.677234,5.195659,1.840406,8.556593,0.206448,0.401706,0.256689,-4.206827,-3.095849,8.673592,-0.109276,8.333151,-6.360063,7.922332,0.353370,5.168631,6.066529,6.766193,3.865223,0.868737,3.950797,9.840585,7.546386,-3.128956,-6.464810,8.482445,2.862280,-7.275679,4.721989,-6.186366,5.387276,-9.604383,-5.529893,8.545042,-7.482771,-8.060071,3.147828,7.988598,6.298332,-6.776569,1.123096,2.106876,-7.069073,8.517226,4.923603,-8.147788,7.055175,-7.587116,-6.555727,9.128163,-0.642139,-4.634297,8.545132,-1.816490,0.809415,-0.420682,-0.531765,-0.713143,3.099964,6.440191,5.548075,3.690297,-6.379221,4.597986,9.454772,-7.844047,-3.110894,-1.108662,-2.396534,8.865874,0.371886,-1.088050,7.451718,7.295702,-7.325130,3.173570,-6.623660,-3.389199,-1.576485,-1.195870,-4.727553,2.478820,6.340988,-2.190697,5.247252,-5.784552,0.019836,-5.332713,1.772196,-8.461661,-0.259922,9.928436,-0.648530,-6.030146,6.425092,7.041593,5.143352,8.869044,-5.297810,-7.915327,6.331551,-0.689990,5.124942,8.996858,-8.113090,8.976795,1.051267,-9.267542,-6.140857,2.877207,6.496514,-4.696922,4.294228,4.669010,5.481662,0.001267,-0.610124,-3.107500,8.287038,-7.828966,3.810430,-2.623668,1.174866,-7.879495,0.504970,3.462980,-2.909547,9.233452,3.597758,0.153410,-0.897310,0.488971,9.821275,0.163845,6.579835,-6.150074,4.031995,-3.233789,0.693422,-7.079412,-4.697408,5.987003,5.769861,-6.263930,-2.434265,-1.051742,5.088708,6.158903,6.810638,5.902613,6.839158,6.098129,-0.507562,0.350504,-4.181241,4.869361,9.624603,-0.819061,5.874563,-2.988804,-0.673741,5.523549,-9.366013,-9.191393,8.161797,4.688202,-1.457561,1.274002,-8.884382,-7.746504,-3.747464,1.766611,1.756015,7.966558,-8.680294,-3.534984,-2.591384,-9.449961,-6.094061,-2.264743,-9.861826,-4.800754,-7.461910,-4.114843,-6.363446,5.060929,-5.751257,1.656845,-9.422539,-7.543974,-3.573182,-3.150284,-8.662715,9.218453,2.755530,-7.761642,6.709109,-4.336742,-0.260040,-7.043108,-7.307822,-5.066741,-3.435003,-8.518124,-8.469760,-5.507864,5.927529,1.879454,4.884175,-9.995868,-2.402411,1.210342,-9.142071,6.421342,-1.956403,3.183955,7.818984,7.642083,8.298430,9.728414,-6.143829,-9.711928,-2.554695,-6.269171,1.312029,-7.786857,4.580988,5.343067,-3.998169,3.160901,0.995067,4.635085,-9.323478,-6.572356,-8.762959,6.099256,8.114730,-5.854113,4.127846,-4.710526,9.524697,-4.311897,-5.686974,-3.165295,-5.855959,4.719576,1.606733,-9.068813,3.218250,0.601251,-0.866154,-4.284017,6.156558,6.723752,1.800429,7.932315,3.056147,-0.665947,3.389251,-8.011690,-6.607176,1.241291,-5.400965,5.409286,9.548169,8.345323,2.007769,5.397520,-4.578835,4.829545,-0.230422,-4.427706,-4.203520,4.314170,-8.034574,3.964744,2.727760,-5.564508,-1.381362,0.926692,-6.334962,-7.361323,8.051518,-8.416479,-5.479512,4.346330,-2.197075,-4.767889,-7.941202,9.538992,3.244279,4.560003,6.076761,-9.624330,1.962551,8.149012,-0.069002,5.471453,-3.576441,3.803349,4.736601,6.565341,2.647351,-3.816046,-6.712513,-2.960763,-5.087777,-7.389499,9.476316,-3.088930,1.265929,-1.483732,3.832126,6.557067,-9.120278,-4.119384,1.837487,4.066665,-6.694655,4.904184,0.737255,-4.211877,5.968257,-1.720168,-0.805017,-8.931101,-1.577235,7.331645,-3.742776,8.323016,-3.523140,4.846029,-0.356678,-6.263153,-3.829986,6.096514,9.546430,-0.802796,-6.849966,6.934929,5.662440,-8.605424,-6.227670,5.554312,-6.264625,6.208273,-9.007087,5.884797,-9.023907,3.519431,6.052325,-8.600635,7.188324,2.879017,2.148314,-7.031118,-1.101380,0.975624,-7.284944,-0.767270,4.702133,3.465050,-8.407732,-2.851027,-2.930554,9.182314,-6.667894,-3.993151,-3.713011,-1.733111,-5.482865,-5.621519,5.835980,-2.460010,-0.532687,9.886894,-6.478210,-7.545151,3.554378,5.874985,-2.238261,8.222077,2.035188,-8.123632,1.461496,6.501618,1.126853,5.019290,4.307614,7.913933,-3.657320,-0.062364,3.095586,5.305142,2.025224,3.770958,7.077119,2.556055,-5.359502,3.299911,-9.179263,-1.890960,-6.819485,-4.027923,2.846226,-0.184398,-4.986097,-2.697621,4.646471,-5.915236,0.665244,-4.939258,-0.242753,2.344559,-2.469415,5.716651,0.946333,-8.193242,0.256909,-7.872051,-2.852574,-6.062943,6.016369,0.730028,-1.203533,3.086285,8.980294,-0.599038,3.704380,-9.252495,-2.163238,-3.238258,2.240766,-2.477146,-0.442599,0.372307,7.134308,8.324343,7.382837,7.460123,4.742956,0.896031,-2.043605,-2.144015,8.434663,6.638509,-8.772840,0.460042,4.560586,-6.344320,-1.914922,-5.309521,5.899546,-7.849041,-4.550743,-9.238702,0.445283,-9.423444,-8.720985,1.379942,-7.551786,4.376908,3.144285,-0.487641,-1.307558,-6.226570,3.919059,-3.417543,-6.984541,5.353802,-0.181107,-3.996501,4.988436,-6.176420,-2.189181,0.431952,-6.693555,7.972716,6.927980,-5.832697,5.122507,0.702076,-2.365258,1.622446,-9.885098,1.810508,2.165058,-7.071675,1.199883,-2.616172,7.292656,-5.073553,-5.538809,0.325175,9.519720,-1.109285,-6.936605,8.079772,9.786376,6.721033,5.695580,1.478635,3.900146,0.095355,-9.648120,-8.253418,9.024194,1.539577,-8.562864,-7.325761,9.763493,-3.645544,-0.195219,-5.653031,9.001851,3.795095,-8.417748,2.862670,7.153504,-0.164694,-6.192366,3.688480,5.597784,2.461294,9.833317,-5.862204,-7.502637,-8.312750,-6.278769,0.676825,-1.766914,7.063822,2.810392,-6.899910,2.042779,-9.213060,9.264006,-6.621511,-5.043375,1.527358,8.169562,-9.946957,-6.059794,-8.639178,5.816600,-4.102560,-6.068882,1.694491,-4.053622,-2.186062,-9.769236,5.940467,-4.189722,4.855532,-5.677791,-7.717198,-0.542778,3.331007,1.807267,6.606251,9.684604,6.202386,1.581784,8.459084,-1.129528,-9.238412,-5.926889,3.829131,2.298621,-2.336387,6.686331,0.877060,5.078249,-8.984382,-1.714040,-3.469445,-1.221874,3.922514,-5.813280,9.117959,1.500953,7.339482,-1.135586,-9.408770,0.252391,0.227002,-3.295230,-9.846183,8.634960,-2.526346,2.028691,-3.593778,-1.691692,5.957489,-3.860872,-1.357367,-2.907444,-6.467967,-1.110714,-9.282178,2.827905,-7.095627,-5.728649,1.889788,3.807013,4.935121,-7.196436,-1.021350,-1.851700,5.985999,2.321111,-3.038967,-4.180280,-9.834278,6.380001,-3.943095,-7.968795,-7.293524,-0.550420,-1.648856,-3.444900,-9.125636,1.999728,9.355145,-8.447941,9.868119,-3.834424,-3.726034,-4.299502,5.454662,0.450890,-9.557975,-6.354446,5.453940,-2.526173,0.954378,5.038285,-2.636988,-4.408691,-7.643593,-0.928802,-9.997362,7.442199,8.068675,6.743834,-7.092471,7.748489,-8.520716,4.289176,-8.257506,-2.944841,-1.248917,7.869912,-5.446098,7.550043,-2.752683,-8.347247,-3.088070,6.447572,0.839489,6.743077,-4.256034,-1.659829,-4.737257,-3.569675,-9.457320,-2.890740,-4.004235,7.264419,-8.331449,-0.952484,-8.155919,0.535430,-9.973626,0.952415,-4.051966,4.331510,4.194075,8.781708,-0.098415,-8.650661,-2.927944,5.840650,-8.948168,-2.201939,9.887082,6.674732,8.476291,2.645484,-8.865242,-1.778180,5.940724,3.801913,4.036006,-6.038109,-4.642084,-7.547002,-8.187278,8.924315,-8.317458,8.663163,-0.590282,-4.445928,7.770339,-8.143333,-6.872759,-2.210922,-7.866713,-6.193562,7.271554,1.402488,6.476339,-0.438112,-2.624066,-1.447899,2.475704,-5.723174,-4.906385,-7.680346,-1.792151,4.762087,1.619051,-7.943688,2.598346,3.624564,-1.107494,-0.092033,0.853817,6.730393,8.796288,-0.502202,1.910853,-9.254655,7.553364,8.173889,5.457105,-3.510560,9.569331,8.762656,6.750858,0.234929,3.563368,1.710466,-3.820850,-2.605084,-2.809296,7.370148,-0.842341,-7.693106,-2.363831,1.798924,-6.308154,-0.169028,3.220048,2.559111,-8.401634,-2.474656,-4.039088,-4.710729,-5.894631,-5.801741,-1.575392,-1.111999,-8.462761,-3.200499,-5.177072,-6.956515,-3.002705,-9.709079,-8.990185,-5.566714,-9.185809,4.390786,5.915491,-2.564005,-1.761341,-2.277355,-6.038970,5.151277,4.625812,8.436294,-3.680516,0.015831,-6.761714,-3.859271,4.565439,5.173957,7.232140,-9.493975,4.954591,-2.714395,-5.986599,-2.649887,8.241640,8.528066,6.185572,-5.458944,-0.312531,-6.344890,-3.844176,-9.935121,-5.352545,4.722564,-5.330700,-9.412942,-0.004168,6.699111,9.088075,7.490609,-7.040845,-8.328830,9.387304,7.463778,-3.510511,-7.632156,-1.011114,-8.872818,3.830452,-3.637073,8.720185,8.173045,6.488261,-5.079264,-0.369275,6.702159,-5.452648,-9.370946,-2.614785,-9.232651,-5.794748,8.147916,0.543848,0.277180,-3.772313,-6.302754,-8.228246,0.603524,-6.370253,-4.108705,-0.660055,5.171373,2.316121,-8.008527,8.282950,-3.289383,-0.360382,-6.312722,4.616387,-7.988278,2.922731,-8.676552,-5.529836,8.333909,8.316516,5.957139,8.893962,6.781599,-7.535870,7.916635,-1.225803,8.524080,2.070257,-9.896765,2.238664,-8.207748,0.420871,-6.940764,9.361174,-4.488619,-3.504044,-9.975981,7.356683,-7.601502,2.088836,7.796213,-7.226079,-3.377426,5.251095,-7.199460,9.691780,2.874432,4.589944,-9.471374,-4.674397,-5.553924,-4.271654,-9.660085,-9.115112,-7.495867,-8.143545,9.655770,-9.137124,0.554544,-8.781297,7.905585,-7.291659,-0.912495,-7.626367,-3.372885,6.854370,9.810915,5.762022,1.658219,1.364822,-0.035410,-9.464434,-3.866165,0.205464,-6.421161,4.290381,-0.434641,-0.602771,-4.702885,4.559177,2.323936,5.720436,9.587487,3.287358,-7.938583,-6.015866,-9.448767,-5.884294,3.863585,-7.433386,5.349644,8.764679,-1.052966,-8.292649,3.673885,8.295652,-1.834562,2.977484,-4.344123,9.329542,3.696543,8.039827,-1.049499,-6.930597,5.497425,0.761188,9.321328,-5.399861,-2.956646,-2.675144,4.522191,7.574410,-7.502519,2.183513,6.358932,8.957521,-7.311507,-3.648690,-6.207428,-4.506157,-8.164780,-9.147419,8.032721,0.610183,5.333385,8.965795,7.601326,-7.287038,0.753082,-8.406133,-7.072239,-7.281792,-3.501305,7.224188,5.066447,8.463749,1.907378,3.249066,-2.328520,4.270728,-9.184333,-9.933885,3.230437,8.210229,-2.288093,6.787628,0.946716,3.583636,-8.967530,-7.104407,8.178278,8.796590,2.001992,4.718240,3.090086,1.733745,6.149755,-5.585985,9.544704,2.088425,4.369546,-9.798385,-2.169776,2.711027,8.435241,6.570257,6.133252,2.851217,0.024967,-3.364913,3.944757,7.324370,-5.151407,8.620302,4.950080,2.058425,0.611146,-5.949905,-4.794971,8.245672,3.961927,-2.074208,3.955098,-7.709563,-6.081110,-8.769878,-9.979813,-8.143964,9.108874,-7.408914,-3.776683,1.918224,-6.753785,-6.139889,5.157474,-1.915133,-4.833803,2.211727,-8.290551,-8.314215,7.402645,8.874365,-5.722104,-3.875117,9.640548,1.163139,-5.005106,-8.380513,-5.010675,6.305028,-9.429614,-7.972301,-5.609118,-8.079563,1.601415,7.509138,6.068325,6.649154,-7.318925,3.457204,-2.470421,-4.486712,-4.802118,3.875421,4.241130,-9.242900,-6.456050,-7.301891,4.905746,-2.781126,6.399771,3.036873,-2.707752,4.263382,-5.362778,-0.658170,5.496293,1.186181,7.536600,-5.863577,-3.353021,-0.318405,4.735947,9.758941,-8.573581,-6.185636,-4.381625,-0.402247,-4.055777,0.330518,6.981162,7.858817,-9.107835,-1.144336,-8.463734,-0.198788,9.566067,5.008996,3.386782,0.956359,-3.033201,-2.363155,8.091704,4.608928,-2.667491,-2.140843,8.367296,-4.043520,8.935683,2.986419,9.350826,-1.083938,0.879314,5.704944,-5.403670,-1.402168,-7.520373,9.024392,8.153259,0.591260,-9.246673,3.893438,-2.104715,5.589088,-2.287549,9.063052,9.148973,2.662271,8.922051,4.570913,1.843884,0.208700,-6.573130,-5.579598,1.382299,6.920456,6.226000,3.164467,-0.229876,3.031479,-7.545119,-1.654798,-5.392588,-8.013948,8.460913,-7.502761,7.958406,-6.078930,-3.870725,4.307068,9.735143,2.042526,-4.299549,-4.994327,-5.434266,6.598663,-1.802876,-0.889838,8.870305,-4.974773,-4.866405,-7.099015,-2.038406,-2.289594,6.446375,7.782329,-0.790664,8.625193,3.334719,-8.348396,-9.935249,-3.182079,3.311455,5.978257,3.877808,9.076654,-7.108337,7.616914,2.778855,-9.703823,-7.783640,9.115938,-0.937675,5.752482,-8.074128,4.454138,6.752602,5.969750,-3.400572,-0.747322,-8.470629,-3.266757,6.125948,-3.301812,5.220684,2.121949,-0.277602,-4.500337,4.350588,-8.388154,0.721446,-0.488877,-7.685721,-3.627901,5.728186,-9.318675,-5.100825,-0.956993,0.236002,-3.290606,8.679531,-5.769311,-0.901796,6.929774,-1.357620,8.060663,9.187197,-9.526701,6.936947,5.299600,0.384398,0.214696,-0.993786,1.866073,-6.172532,-5.142397,3.852671,6.077388,9.115352,-5.728744,-7.884974,-3.504416,6.406159,2.816705,6.693259,1.610522,8.383779,-6.439862,7.862010,3.481036,-0.588183,4.704412,-8.899352,7.707573,5.215472,7.365313,-5.695515,-7.165485,-1.042339,-2.008019,-0.405850,7.858618,-3.162290,8.385209,1.531860,7.279863,-6.599924,-9.905287,0.959197,-1.723092,9.069326], dtype = "float64")#candidate|8470|(1352,)|const|float64
call_8469 = relay.TupleGetItem(func_2678_call(relay.reshape(const_8470.astype('float64'), [8, 13, 13])), 0)
call_8471 = relay.TupleGetItem(func_2680_call(relay.reshape(const_8470.astype('float64'), [8, 13, 13])), 0)
output = relay.Tuple([call_8437,call_8469,const_8470,])
output2 = relay.Tuple([call_8438,call_8471,const_8470,])
func_8479 = relay.Function([], output)
mod['func_8479'] = func_8479
mod = relay.transform.InferType()(mod)
mutated_mod['func_8479'] = func_8479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8479_call = mutated_mod.get_global_var('func_8479')
call_8480 = func_8479_call()
output = call_8480
func_8481 = relay.Function([], output)
mutated_mod['func_8481'] = func_8481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_8494 = func_4209_call()
call_8495 = func_4209_call()
output = relay.Tuple([call_8494,])
output2 = relay.Tuple([call_8495,])
func_8501 = relay.Function([], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
output = func_8501()
func_8502 = relay.Function([], output)
mutated_mod['func_8502'] = func_8502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_8540 = func_5470_call()
call_8541 = func_5470_call()
var_8542 = relay.var("var_8542", dtype = "uint32", shape = (715,))#candidate|8542|(715,)|var|uint32
bop_8543 = relay.add(call_8540.astype('int32'), relay.reshape(var_8542.astype('int32'), relay.shape_of(call_8540))) # shape=(715,)
bop_8546 = relay.add(call_8541.astype('int32'), relay.reshape(var_8542.astype('int32'), relay.shape_of(call_8541))) # shape=(715,)
output = relay.Tuple([bop_8543,])
output2 = relay.Tuple([bop_8546,])
func_8553 = relay.Function([var_8542,], output)
mod['func_8553'] = func_8553
mod = relay.transform.InferType()(mod)
mutated_mod['func_8553'] = func_8553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8554 = relay.var("var_8554", dtype = "uint32", shape = (715,))#candidate|8554|(715,)|var|uint32
func_8553_call = mutated_mod.get_global_var('func_8553')
call_8555 = func_8553_call(var_8554)
output = call_8555
func_8556 = relay.Function([var_8554], output)
mutated_mod['func_8556'] = func_8556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4915_call = mutated_mod.get_global_var('func_4915')
call_8564 = relay.TupleGetItem(func_4913_call(), 2)
call_8565 = relay.TupleGetItem(func_4915_call(), 2)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_8577 = relay.TupleGetItem(func_4174_call(), 0)
call_8578 = relay.TupleGetItem(func_4176_call(), 0)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_8582 = relay.TupleGetItem(func_4068_call(), 1)
call_8583 = relay.TupleGetItem(func_4070_call(), 1)
output = relay.Tuple([call_8564,call_8577,call_8582,])
output2 = relay.Tuple([call_8565,call_8578,call_8583,])
func_8608 = relay.Function([], output)
mod['func_8608'] = func_8608
mod = relay.transform.InferType()(mod)
output = func_8608()
func_8609 = relay.Function([], output)
mutated_mod['func_8609'] = func_8609
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8614 = relay.const([[[5,7,-9,4,10,-6,-8,1,1,-8,9,-9,-4,6,9,7],[3,-2,2,-6,9,-1,4,4,-9,2,-10,3,-2,-9,6,-9],[-1,1,-8,-6,-1,-6,8,-2,2,-6,-3,-8,9,-9,5,-4],[-6,2,4,-5,-2,1,2,-6,7,7,-1,8,4,7,-3,8],[5,-5,5,-3,-10,-6,10,-7,5,9,-10,-8,-2,4,3,5],[9,7,2,2,6,6,-1,3,8,-2,8,-3,-2,-8,-8,-2]],[[-6,2,1,-2,1,5,3,-5,-9,-7,6,1,-6,2,-3,2],[5,7,-7,5,9,9,-7,2,1,6,9,3,6,1,2,-9],[7,-3,7,2,7,7,-6,-1,-8,4,4,-5,5,-2,-9,-3],[8,-1,-5,10,-4,9,8,7,-7,-5,10,-1,-6,-3,-3,1],[4,6,-5,-3,-7,-9,2,-1,8,-10,-6,7,-4,-8,9,-8],[-1,2,3,7,10,5,3,-3,-1,-1,-3,-10,-1,4,8,-2]],[[-8,-7,4,3,1,7,5,4,2,3,-6,-4,9,-6,2,6],[-2,5,8,-9,-7,2,6,-5,3,-4,1,5,-8,9,-7,-1],[9,-5,3,7,-8,-1,-4,3,-6,-6,6,9,4,-3,-4,-10],[-10,1,8,-5,-6,3,5,-7,6,2,-9,-6,-10,4,3,8],[-10,7,8,6,-10,-5,-6,8,8,-2,10,9,-6,5,-8,1],[3,-6,1,6,-1,-8,3,-7,-5,-7,-8,6,-9,5,3,3]],[[-5,-6,1,10,3,8,-4,-7,7,-6,10,1,3,5,2,-2],[9,5,-2,-1,-5,-10,-6,-9,-1,-8,-9,8,-4,7,-3,5],[9,-1,7,5,-2,10,-4,-1,-4,-3,7,-4,-8,-9,2,-2],[-3,1,8,-3,-2,8,-2,10,9,10,9,-9,6,6,1,6],[-3,-6,-4,-1,2,2,-2,3,-8,-7,8,1,-3,2,9,10],[9,-4,4,9,7,-1,6,8,6,10,-3,-10,10,-10,3,10]],[[5,5,9,5,-5,-3,-10,-4,8,2,5,-10,7,-3,-2,-2],[-6,6,1,1,10,9,-9,-8,-9,10,4,10,-2,4,7,-10],[-5,10,2,3,7,1,5,3,-2,9,-5,-9,-1,8,9,10],[-6,9,2,-9,-4,-5,2,4,-2,-9,-9,3,-1,7,-1,-5],[7,-5,8,8,-6,2,2,1,-10,-3,9,10,-7,2,-3,-4],[-3,-9,-7,-4,1,-1,3,-1,2,-1,-9,5,-5,1,5,8]],[[8,-8,4,8,-7,10,-10,-2,-4,5,3,7,-6,6,8,1],[1,9,-1,-1,-5,-10,-2,9,-5,-9,-4,-6,7,-4,-8,-8],[-4,4,-5,8,8,5,10,5,-8,-4,1,7,-4,2,5,8],[-9,7,-7,-6,-2,-4,6,-10,6,-1,5,-6,8,-10,-9,2],[-3,4,3,7,-2,8,2,2,-1,4,10,7,-7,-9,-5,4],[10,-8,-7,-8,5,7,-3,5,4,4,-1,-10,-5,-5,-1,-8]],[[7,4,2,5,10,-7,2,1,-1,-10,3,1,10,-10,-4,-2],[8,-9,9,-10,-7,-4,-8,5,-9,4,-6,1,10,4,2,7],[1,-10,7,9,-6,-2,-7,6,5,-9,-2,4,-4,5,4,7],[5,4,-9,9,8,-2,10,1,5,-4,-2,8,-7,-1,-7,6],[8,-8,-5,-2,8,-7,9,4,10,10,8,-8,-3,8,9,-3],[-4,-4,6,3,10,-2,10,3,-8,1,-3,3,-10,-7,4,6]],[[1,-8,-5,-10,-1,-4,-2,10,-1,8,-2,1,3,-2,8,-9],[-7,-5,-8,-5,-9,9,-5,-3,-1,-10,1,8,-7,-5,8,3],[10,8,-3,6,-2,-5,-7,-5,9,-3,5,6,-2,9,4,-5],[-10,-2,-6,6,5,-8,2,-1,7,3,5,-7,10,-7,10,9],[-7,-2,9,-2,1,-5,1,4,-1,-3,-6,-5,8,3,6,-5],[-10,5,-5,4,-6,9,-6,-7,-7,3,-3,-10,-10,7,4,8]]], dtype = "int32")#candidate|8614|(8, 6, 16)|const|int32
var_8615 = relay.var("var_8615", dtype = "int32", shape = (8, 6, 16))#candidate|8615|(8, 6, 16)|var|int32
bop_8616 = relay.less_equal(const_8614.astype('bool'), relay.reshape(var_8615.astype('bool'), relay.shape_of(const_8614))) # shape=(8, 6, 16)
output = bop_8616
output2 = bop_8616
func_8621 = relay.Function([var_8615,], output)
mod['func_8621'] = func_8621
mod = relay.transform.InferType()(mod)
var_8622 = relay.var("var_8622", dtype = "int32", shape = (8, 6, 16))#candidate|8622|(8, 6, 16)|var|int32
output = func_8621(var_8622)
func_8623 = relay.Function([var_8622], output)
mutated_mod['func_8623'] = func_8623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1791_call = mod.get_global_var('func_1791')
func_1792_call = mutated_mod.get_global_var('func_1792')
call_8697 = relay.TupleGetItem(func_1791_call(), 0)
call_8698 = relay.TupleGetItem(func_1792_call(), 0)
output = relay.Tuple([call_8697,])
output2 = relay.Tuple([call_8698,])
func_8708 = relay.Function([], output)
mod['func_8708'] = func_8708
mod = relay.transform.InferType()(mod)
mutated_mod['func_8708'] = func_8708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mutated_mod.get_global_var('func_8708')
call_8709 = func_8708_call()
output = call_8709
func_8710 = relay.Function([], output)
mutated_mod['func_8710'] = func_8710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
call_8746 = func_4209_call()
call_8747 = func_4209_call()
output = relay.Tuple([call_8746,])
output2 = relay.Tuple([call_8747,])
func_8750 = relay.Function([], output)
mod['func_8750'] = func_8750
mod = relay.transform.InferType()(mod)
output = func_8750()
func_8751 = relay.Function([], output)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7361_call = mod.get_global_var('func_7361')
func_7363_call = mutated_mod.get_global_var('func_7363')
call_8770 = func_7361_call()
call_8771 = func_7361_call()
const_8773 = relay.const([[[2.432290,-7.841250,-7.759506,7.381485,-5.063376,6.568253,-8.020862,-3.514657,-8.260092,0.656947,-3.069464],[0.287846,-5.352015,-6.647438,-0.936209,-2.516599,5.391789,-7.235293,8.093999,-5.004417,3.126523,2.687116],[-2.546104,-5.809511,2.890074,-0.407439,8.464724,3.930134,-3.623225,8.652179,0.452746,-4.182900,-4.147632],[-2.076611,2.587007,-6.207440,-3.974507,-4.859695,2.506733,4.206310,-3.748643,6.280925,9.921370,-9.363498],[-0.044893,9.893905,0.972573,8.397711,-8.974401,2.817521,-5.363991,-4.954497,-2.627222,3.655905,2.076971],[-5.750051,-3.150521,2.128782,-7.778550,8.918627,-1.722683,-0.206642,-3.700147,2.780839,-0.938615,-2.959408],[-6.240551,3.093051,-5.878190,6.978634,-5.269085,8.674431,1.392749,-1.697812,-6.087726,-0.940995,-8.920563],[-2.971666,-3.914316,-8.734803,4.012315,6.574895,3.505404,-7.727354,2.741049,-1.345946,9.728857,-0.593348],[-2.931367,-8.326863,-0.053666,6.722670,3.880483,-9.163057,-0.694926,-6.728280,4.279584,7.472714,4.505540],[-3.151737,4.352834,-5.545447,6.094405,2.570813,3.201264,-0.915156,5.829460,0.235822,-9.617530,-5.496471],[-0.445840,-2.622718,7.322765,-0.442897,0.577814,4.715218,3.269895,8.620973,8.103743,6.792715,-0.709753],[-6.615957,1.184652,-3.225766,9.289667,-3.866712,-8.169627,-6.390498,6.810818,-2.947869,6.460559,3.204679],[9.418148,5.134133,-5.495958,3.070788,0.990662,-1.741596,9.580612,-7.081230,0.465438,-3.224939,9.006513]],[[9.539551,-0.536955,9.394974,-9.191646,-3.524846,6.433662,-3.408464,-8.211148,-3.820001,2.344616,4.112265],[0.557911,-1.710770,-1.513502,-2.731664,7.494911,-2.645844,3.347675,8.510565,2.492060,7.374755,-5.408018],[-9.339525,-0.202311,-9.337244,9.376489,-5.251422,3.761525,1.014585,-0.304389,9.947474,-0.351432,8.691210],[2.127435,0.413930,-1.770703,4.829957,-3.794750,-2.797199,-0.377740,-9.739260,-6.120736,-4.175668,8.996554],[4.554799,-4.285748,6.553846,1.554053,-5.206601,-2.716503,8.150547,4.005573,7.050460,-5.183206,-7.103226],[-5.932513,-3.545636,7.047927,-4.133658,-7.856498,-7.299793,-8.352649,8.335419,-5.568809,-3.476882,4.272166],[-3.875606,-3.442985,-7.153171,0.572131,5.543421,-2.777436,-4.936936,-4.558757,-3.130775,-2.268361,1.110781],[7.604284,-9.079609,9.469869,-9.100824,-4.577859,1.523719,-3.595838,2.186936,-9.622236,2.182859,-2.454183],[-5.433418,-0.273236,-8.957590,-2.595821,4.338824,-9.425054,3.451040,-3.116807,5.871964,-6.408297,2.254459],[-4.899628,-2.524291,5.133722,2.430821,7.162973,-7.792487,4.160072,2.235306,1.182814,1.067146,-0.942952],[9.155167,-6.676120,-1.032538,3.682634,0.623391,-8.210476,-1.175111,8.139301,-5.834175,0.294157,-4.662680],[1.060142,-8.701071,-5.263029,-8.899558,9.561959,7.604403,-3.093662,-8.999171,6.421295,-8.351224,-8.572323],[9.942365,-7.295924,-2.109585,-3.493187,-9.807233,-7.125318,-5.327636,-4.188444,-3.274890,-6.631379,2.115122]],[[2.052279,-3.623872,1.160875,-4.930786,4.242470,6.592608,6.668334,-4.924637,-3.037972,0.668104,5.534593],[0.170695,2.679278,1.702082,1.743886,-8.471295,9.108351,2.833969,7.893312,-9.270833,6.569730,7.674333],[4.388584,6.552107,-3.890549,5.984757,-7.538812,-0.463433,-8.907373,-4.372245,-9.903763,-1.820062,0.212401],[1.543171,7.028350,-2.083826,3.043222,-8.635122,9.250998,6.695728,-5.287744,3.927055,4.295617,-8.390146],[-7.553387,-6.050657,-8.275396,-9.835284,-8.362797,-5.441606,0.280077,0.671063,-0.962111,7.827826,6.083434],[-6.764557,9.759671,-5.121824,3.652255,-7.432722,2.752144,-6.737746,7.835260,-4.925796,-8.359874,-6.940852],[1.444604,7.307775,6.780032,5.277107,4.407516,-7.386184,6.203153,0.948278,-3.754092,-6.303477,-4.149499],[0.636671,4.490536,-6.225852,-0.005238,5.654877,-8.232898,-2.274975,-3.894734,-6.204974,6.957621,-7.803901],[9.180956,4.135828,-5.321546,-2.687122,-0.734764,-2.862844,4.055848,-6.884931,6.783712,5.066868,-1.280645],[7.558612,6.368016,-5.011223,7.083877,8.706092,-1.086301,-8.399778,9.751756,-2.338750,-7.072945,4.019252],[5.692311,4.256414,-0.577203,-8.033671,-6.136863,7.798882,0.858504,-5.895582,-8.756119,8.531951,-5.697048],[8.605995,-7.017206,-0.042083,6.959081,-7.286215,8.228831,5.406338,-4.560514,-9.461545,-9.172995,-9.853520],[9.758266,-2.744460,4.448286,-7.404277,0.464149,6.411969,3.300038,-9.836556,0.771338,2.308173,-2.595795]],[[-7.046436,-0.413580,-4.930276,-5.984993,-7.125332,8.413267,-5.400966,2.189955,4.802605,-7.195741,-9.434603],[-9.210563,-7.518655,-7.752441,-2.977170,0.288593,1.886254,8.124045,-3.991486,8.981087,4.762506,4.812318],[7.652560,-5.238104,8.521917,2.724708,7.427914,-1.191496,8.630638,4.791679,6.114941,2.368111,5.560686],[-4.622763,-3.374445,-3.370258,4.424303,4.787688,-6.178700,0.986726,2.354543,-7.356340,-3.115341,-1.563086],[1.775936,2.885954,-7.056001,4.345185,1.471598,5.355801,8.383885,1.226909,6.191937,0.092021,-5.356876],[5.385910,4.418093,-6.804654,-5.681808,-7.028573,3.151417,7.727863,-3.697884,5.476681,-6.037767,4.336465],[-0.338849,-4.913837,-3.311219,-7.559444,-5.650437,-8.468910,6.815220,7.879278,5.833269,1.379224,2.732154],[9.424526,3.483709,3.068003,7.895442,-7.695141,6.900579,-8.731634,-2.691878,9.771446,-1.205965,5.255731],[-5.124534,-9.342094,-4.697411,-3.268394,-3.160720,2.444685,-9.401887,4.964088,3.467350,-8.708119,6.308521],[-8.215769,2.569793,-5.909397,0.293572,1.566558,5.952541,-8.547420,7.686130,6.634786,-9.694239,1.967404],[-6.117125,-9.195167,-4.669629,-7.811162,0.185354,-0.707421,-2.385775,5.336729,-9.908413,-7.807995,-3.571116],[7.663345,8.835904,0.079901,0.814003,7.708194,2.438355,1.250661,-0.066853,3.258550,2.321351,-0.463227],[4.971221,7.720417,-2.954134,9.334562,-1.436748,-2.242480,3.822333,5.064050,-7.377246,-3.478109,8.668626]],[[-9.438227,-0.306530,2.943325,0.761708,3.554217,2.219802,-8.898468,-1.702900,-0.629114,-6.201884,1.188419],[-1.935238,-4.430127,6.380722,2.595308,-5.912552,-8.937277,4.346626,-1.699770,4.581070,8.929743,5.715506],[-7.207705,9.670233,-4.867588,5.117909,-0.961299,0.727809,-1.024553,0.659376,5.227908,8.127475,-3.832503],[7.358346,1.482587,8.199981,-3.428025,-4.505175,-7.590610,6.374912,2.725343,-0.031196,7.162659,-8.608648],[-8.047654,5.979314,-9.673747,3.086835,0.018528,5.575121,0.981888,-2.866031,6.604376,-7.790971,-3.780954],[7.511930,-9.994262,3.838504,7.870393,-1.331539,-5.709371,8.269593,-0.216563,2.235815,1.106274,5.715109],[8.065297,-2.413119,-8.068080,0.856498,7.669233,8.138732,-1.649218,1.213700,-3.455422,-0.237973,6.485428],[8.084068,-8.339174,8.388142,-8.680228,5.829085,-7.773885,-2.702871,-0.173784,-5.886037,-1.706515,-8.700599],[-7.573658,-8.468510,5.008542,2.917594,-2.536193,-0.213086,-6.040898,8.556075,-9.369720,-2.821195,-5.855522],[-2.753532,-6.630596,-4.331978,-9.547790,-6.143580,-2.939933,8.095869,2.837342,-0.159242,-8.646708,-8.102086],[1.141855,3.471822,-1.996902,-2.065177,-6.537827,-1.210252,9.722704,-6.120906,6.007102,4.207984,5.585146],[2.419937,7.226180,7.890376,-3.390998,-9.454651,3.664581,-6.877273,-5.372619,-9.130852,3.393907,3.786650],[-4.920241,-0.912403,-1.361750,7.481199,-1.399528,-4.171122,5.225319,7.472338,-7.141038,7.894200,1.321899]],[[5.268514,-0.497406,3.088431,-5.285050,4.437202,-3.605919,-4.591523,1.744783,-5.113693,-8.687459,0.198494],[-9.029919,-5.971121,0.013124,-0.475260,0.569685,-0.878799,-2.603197,1.605978,-8.190365,0.702296,-8.092832],[-2.730304,7.697946,6.279127,4.405629,0.308280,-8.259444,-2.700314,2.308679,-2.965671,3.812680,5.625947],[-9.462184,-8.673137,1.146651,3.987473,-4.571101,7.651788,6.308134,4.537084,7.374554,-3.100618,-8.362745],[3.804727,-2.384596,-7.406005,-1.203864,2.001342,-4.875031,-5.646022,4.044454,8.353888,2.590722,0.964488],[-3.823324,4.873045,-8.419818,3.472554,4.942975,-2.145407,-3.226908,2.706872,-2.297667,-3.353462,-1.255473],[-6.814245,-1.337974,6.590328,-7.250432,-8.666480,-0.315670,9.945441,-0.448793,4.722880,7.105370,1.095319],[0.977422,7.534330,3.209531,-7.811562,-8.920364,5.565270,8.431461,-2.381704,0.583274,-6.465633,-5.396273],[-5.488045,-2.422872,-6.343813,-1.573937,3.859485,-5.757742,4.692087,-6.151987,-6.309716,3.475881,-4.318972],[-3.778307,-0.457745,9.095140,5.918429,-4.267672,-5.428870,-2.630676,7.178583,-7.884128,-7.274486,3.580734],[-0.537813,0.639807,-7.381103,-7.928922,4.011980,6.441023,3.055714,-0.377779,-9.153535,-4.968343,3.256877],[-3.634796,5.375262,-4.887930,4.559723,-9.317859,5.745450,-1.832966,-8.046075,-9.208969,-9.820200,3.521402],[3.388925,-3.753974,3.713111,-0.982334,0.788282,0.117847,-3.200960,-2.240462,4.194657,9.547107,2.438920]]], dtype = "float32")#candidate|8773|(6, 13, 11)|const|float32
bop_8774 = relay.logical_or(call_8770.astype('bool'), relay.reshape(const_8773.astype('bool'), relay.shape_of(call_8770))) # shape=(6, 13, 11)
bop_8777 = relay.logical_or(call_8771.astype('bool'), relay.reshape(const_8773.astype('bool'), relay.shape_of(call_8771))) # shape=(6, 13, 11)
uop_8781 = relay.erf(call_8770.astype('float32')) # shape=(6, 13, 11)
uop_8783 = relay.erf(call_8771.astype('float32')) # shape=(6, 13, 11)
func_5656_call = mod.get_global_var('func_5656')
func_5659_call = mutated_mod.get_global_var('func_5659')
var_8796 = relay.var("var_8796", dtype = "float64", shape = (13, 104))#candidate|8796|(13, 104)|var|float64
call_8795 = relay.TupleGetItem(func_5656_call(relay.reshape(var_8796.astype('float64'), [1352,])), 2)
call_8797 = relay.TupleGetItem(func_5659_call(relay.reshape(var_8796.astype('float64'), [1352,])), 2)
uop_8801 = relay.acos(uop_8781.astype('float64')) # shape=(6, 13, 11)
uop_8803 = relay.acos(uop_8783.astype('float64')) # shape=(6, 13, 11)
func_8412_call = mod.get_global_var('func_8412')
func_8414_call = mutated_mod.get_global_var('func_8414')
call_8805 = func_8412_call()
call_8806 = func_8412_call()
output = relay.Tuple([bop_8774,call_8795,var_8796,uop_8801,call_8805,])
output2 = relay.Tuple([bop_8777,call_8797,var_8796,uop_8803,call_8806,])
func_8811 = relay.Function([var_8796,], output)
mod['func_8811'] = func_8811
mod = relay.transform.InferType()(mod)
mutated_mod['func_8811'] = func_8811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8812 = relay.var("var_8812", dtype = "float64", shape = (13, 104))#candidate|8812|(13, 104)|var|float64
func_8811_call = mutated_mod.get_global_var('func_8811')
call_8813 = func_8811_call(var_8812)
output = call_8813
func_8814 = relay.Function([var_8812], output)
mutated_mod['func_8814'] = func_8814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_8916 = relay.TupleGetItem(func_4174_call(), 2)
call_8917 = relay.TupleGetItem(func_4176_call(), 2)
func_7535_call = mod.get_global_var('func_7535')
func_7537_call = mutated_mod.get_global_var('func_7537')
call_8926 = relay.TupleGetItem(func_7535_call(), 0)
call_8927 = relay.TupleGetItem(func_7537_call(), 0)
func_5470_call = mod.get_global_var('func_5470')
func_5472_call = mutated_mod.get_global_var('func_5472')
call_8929 = func_5470_call()
call_8930 = func_5470_call()
func_1633_call = mod.get_global_var('func_1633')
func_1634_call = mutated_mod.get_global_var('func_1634')
call_8941 = relay.TupleGetItem(func_1633_call(), 0)
call_8942 = relay.TupleGetItem(func_1634_call(), 0)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_8964 = relay.TupleGetItem(func_1546_call(), 1)
call_8965 = relay.TupleGetItem(func_1548_call(), 1)
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_8967 = relay.TupleGetItem(func_4822_call(), 1)
call_8968 = relay.TupleGetItem(func_4824_call(), 1)
output = relay.Tuple([call_8916,call_8926,call_8929,call_8941,call_8964,call_8967,])
output2 = relay.Tuple([call_8917,call_8927,call_8930,call_8942,call_8965,call_8968,])
func_8974 = relay.Function([], output)
mod['func_8974'] = func_8974
mod = relay.transform.InferType()(mod)
output = func_8974()
func_8975 = relay.Function([], output)
mutated_mod['func_8975'] = func_8975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1338_call = mutated_mod.get_global_var('func_1338')
call_9035 = func_1337_call()
call_9036 = func_1337_call()
func_2678_call = mod.get_global_var('func_2678')
func_2680_call = mutated_mod.get_global_var('func_2680')
var_9049 = relay.var("var_9049", dtype = "float64", shape = (1352,))#candidate|9049|(1352,)|var|float64
call_9048 = relay.TupleGetItem(func_2678_call(relay.reshape(var_9049.astype('float64'), [8, 13, 13])), 0)
call_9050 = relay.TupleGetItem(func_2680_call(relay.reshape(var_9049.astype('float64'), [8, 13, 13])), 0)
output = relay.Tuple([call_9035,call_9048,var_9049,])
output2 = relay.Tuple([call_9036,call_9050,var_9049,])
func_9053 = relay.Function([var_9049,], output)
mod['func_9053'] = func_9053
mod = relay.transform.InferType()(mod)
var_9054 = relay.var("var_9054", dtype = "float64", shape = (1352,))#candidate|9054|(1352,)|var|float64
output = func_9053(var_9054)
func_9055 = relay.Function([var_9054], output)
mutated_mod['func_9055'] = func_9055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6724_call = mod.get_global_var('func_6724')
func_6726_call = mutated_mod.get_global_var('func_6726')
call_9100 = func_6724_call()
call_9101 = func_6724_call()
output = call_9100
output2 = call_9101
func_9126 = relay.Function([], output)
mod['func_9126'] = func_9126
mod = relay.transform.InferType()(mod)
mutated_mod['func_9126'] = func_9126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9126_call = mutated_mod.get_global_var('func_9126')
call_9127 = func_9126_call()
output = call_9127
func_9128 = relay.Function([], output)
mutated_mod['func_9128'] = func_9128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_9176 = relay.TupleGetItem(func_7788_call(), 0)
call_9177 = relay.TupleGetItem(func_7790_call(), 0)
func_961_call = mod.get_global_var('func_961')
func_964_call = mutated_mod.get_global_var('func_964')
const_9183 = relay.const([[9],[-8],[-4],[2],[9],[1],[6],[4],[7],[-9],[-2],[-6],[9],[5],[3],[10],[7],[-2],[1],[10],[-2],[3],[-10],[-7],[10],[1],[4],[3],[9],[3],[-9],[3],[10],[-8],[9],[-2],[-10],[2],[3],[-8],[7],[5],[7],[7],[5],[-7],[2],[2],[-5],[-5],[-10],[-9],[2],[-4],[-1],[8],[-2],[-9],[10],[-4],[-5],[-9],[10],[3],[4],[2],[-6],[8],[-2],[-5],[-5],[-9],[7],[-5],[-4],[-1],[-9],[-10],[-6],[6],[2],[7],[9],[-8],[-8],[-2],[-7],[9],[10],[10],[-2],[-5],[-5],[-1],[9],[-10],[3],[2],[3],[-5],[-4],[-5],[7],[-6],[7],[-3],[9],[1],[4],[-5],[-7],[-7],[-4],[-4],[-9],[-9],[5],[6],[7],[1],[8],[-4],[-1],[-2],[-5],[1],[4],[2],[-6],[-7],[5],[-2],[10],[-4],[-1],[-1],[-6],[-7],[10],[-3],[8],[4],[-1],[4],[-5],[4],[6],[2],[-3],[-3],[1],[3],[-8],[6],[2],[2],[-5],[-6],[7],[6],[10],[3],[6],[-2],[-2],[-5],[-8],[2],[-1],[-6],[2],[-6],[6],[-5],[-1],[-4],[1],[-7],[-3],[-7],[-3],[-1],[1],[8],[4],[6],[2],[10],[4],[-1],[-6],[-6],[-2],[-5],[-3],[1],[-5],[8],[6],[7],[-10],[3],[-2],[1],[10],[-1],[-5],[-3],[-3],[2],[-1],[1],[-7],[-1],[6],[4],[-10],[9],[-2],[8],[-2],[-8],[7],[4],[10],[-5],[2],[6],[-6],[4],[-2],[10],[-5],[-3],[-9],[1],[-3],[8],[10],[1],[1],[2],[3],[-5],[-4],[3],[-9],[-9],[-1],[-3],[7],[-2],[3],[-10],[4],[-5],[-9],[-8],[-3],[-3],[2],[-5],[10],[7],[-6],[2],[4],[-4],[3],[-10],[-7],[-10],[1],[1],[1],[-3],[2],[7],[-1],[3],[-5],[-3],[-8],[6],[2],[6],[2],[-8],[-6],[-7],[10],[3],[9],[4],[-2],[-7],[4],[6],[8],[-1],[1],[-10],[5],[-7],[4],[7],[5],[8],[10],[2],[-10],[9],[-3],[-6],[-10],[-9],[-6],[3],[6],[2],[4],[-8],[1],[-3],[-9],[-3],[7],[5],[-10],[9],[9],[8],[-9],[-7],[-2],[7],[-10],[7],[10],[-2],[-6],[-9],[10],[1],[6],[7],[-7],[1],[7],[3],[8],[-5],[4],[10],[1],[-6],[-1],[-8],[-1],[-9],[8],[-4],[-3],[5],[4],[-1],[-7],[-1],[-10],[8],[4],[-8],[8],[-4],[-6],[8],[2],[-3],[7],[-7],[5],[5],[6],[-4],[6],[-10],[5],[-3],[-6],[2],[3],[8],[-3],[2],[-8],[-3],[9],[-4],[2],[3],[-9],[8],[3],[-8],[10],[10],[1],[-1],[-10],[4],[-4],[-2],[5],[-9],[-3],[4],[-7],[7],[4],[8],[-5],[-1],[8],[-1],[-5],[-8],[-4],[-1],[6],[5],[-4],[3],[-1],[-1],[6],[-3],[8],[9],[6],[-6],[-7],[-1],[5],[-7],[3],[10],[10],[9],[4],[10],[-9],[-4],[7],[-5],[-3],[3],[7],[10],[-7],[5],[-10],[-7],[8],[6],[6],[-5],[7],[4],[-1],[6],[-9],[-8],[4],[-10],[-7],[-2],[10],[9],[-7],[-2],[-1],[10],[6],[-3],[-2],[-3],[-9],[-9],[10],[-5],[-4],[6],[-6],[2],[2],[-6],[2],[-10],[-9],[-5],[9],[2],[-10],[-10],[-10],[-7],[-1],[8],[8],[3],[-5],[2],[7],[4],[-2],[-5],[-9],[-10],[7],[9],[-6],[-4],[9],[-6],[-4],[-8],[10],[-6],[1],[-10],[-1],[5],[-3],[-10],[6],[2],[6],[-3],[-7],[-4],[10],[2],[2],[-4],[10],[-6],[-3],[2],[8],[10],[1],[-8],[-5],[-4],[9],[-5],[-1],[-6],[5],[-8],[8],[-7],[-6],[6],[-2],[8],[8],[2],[6],[-8],[-5],[-4],[2],[-3],[-2],[3],[6],[-10],[10],[6],[2],[-5],[1],[-6],[3],[-2],[8],[7],[5],[-8],[-3],[-8],[2],[1],[4],[4],[-3],[-8],[8],[1],[-7],[2],[-10],[5],[10],[-4],[-6],[-10],[-10],[2],[10],[2],[7],[-10],[-6],[-6],[6],[8],[6],[-1],[9],[-9],[-8],[5],[4],[4],[5],[9],[-7],[-9],[-2],[6],[3],[-3],[-9],[7],[-10],[5],[7],[-7],[-1],[-5],[6],[10],[-5],[-8],[4],[-4],[-10],[-7],[-3],[-9],[3],[2],[7],[-1],[10],[-5],[-1],[2],[4],[2],[4],[4],[-5],[2],[-5],[3],[-6],[8],[-6],[-10],[-4],[-5],[-9],[-3],[-8],[10],[3],[5],[5],[9],[8],[-6],[9],[-6],[2],[3],[2],[-4],[-6],[-4],[4],[-6],[8],[-6],[-9],[-2],[9],[1],[-1],[-2],[4],[10],[-5],[7],[-1],[-8],[6],[1],[-3],[8],[-4],[-9],[8]], dtype = "int16")#candidate|9183|(715, 1)|const|int16
var_9184 = relay.var("var_9184", dtype = "float32", shape = (144,))#candidate|9184|(144,)|var|float32
call_9182 = relay.TupleGetItem(func_961_call(relay.reshape(const_9183.astype('int16'), [13, 55]), relay.reshape(var_9184.astype('float32'), [144,]), ), 3)
call_9185 = relay.TupleGetItem(func_964_call(relay.reshape(const_9183.astype('int16'), [13, 55]), relay.reshape(var_9184.astype('float32'), [144,]), ), 3)
output = relay.Tuple([call_9176,call_9182,const_9183,var_9184,])
output2 = relay.Tuple([call_9177,call_9185,const_9183,var_9184,])
func_9189 = relay.Function([var_9184,], output)
mod['func_9189'] = func_9189
mod = relay.transform.InferType()(mod)
mutated_mod['func_9189'] = func_9189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9190 = relay.var("var_9190", dtype = "float32", shape = (144,))#candidate|9190|(144,)|var|float32
func_9189_call = mutated_mod.get_global_var('func_9189')
call_9191 = func_9189_call(var_9190)
output = call_9191
func_9192 = relay.Function([var_9190], output)
mutated_mod['func_9192'] = func_9192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2152_call = mod.get_global_var('func_2152')
func_2153_call = mutated_mod.get_global_var('func_2153')
call_9200 = relay.TupleGetItem(func_2152_call(), 2)
call_9201 = relay.TupleGetItem(func_2153_call(), 2)
output = call_9200
output2 = call_9201
func_9210 = relay.Function([], output)
mod['func_9210'] = func_9210
mod = relay.transform.InferType()(mod)
output = func_9210()
func_9211 = relay.Function([], output)
mutated_mod['func_9211'] = func_9211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7361_call = mod.get_global_var('func_7361')
func_7363_call = mutated_mod.get_global_var('func_7363')
call_9341 = func_7361_call()
call_9342 = func_7361_call()
func_1462_call = mod.get_global_var('func_1462')
func_1464_call = mutated_mod.get_global_var('func_1464')
call_9348 = func_1462_call()
call_9349 = func_1462_call()
func_3276_call = mod.get_global_var('func_3276')
func_3277_call = mutated_mod.get_global_var('func_3277')
call_9359 = func_3276_call()
call_9360 = func_3276_call()
func_6878_call = mod.get_global_var('func_6878')
func_6880_call = mutated_mod.get_global_var('func_6880')
const_9371 = relay.const([[1.809330,-2.789536],[1.659739,-0.302669],[-8.021199,5.085086],[-4.735411,3.348115],[2.101058,8.107808],[-3.524927,-3.304882],[-0.373264,3.144593],[7.232912,-5.673949],[3.917895,5.084839],[-3.240826,-3.936065],[4.725879,4.929655],[4.548209,2.399397],[1.761459,8.230896],[6.491129,-3.944234],[2.963019,9.955803],[-1.625718,1.416681],[-4.839119,-8.459320],[-8.968677,6.342173],[-7.921901,-1.390460],[5.953763,2.140015],[-1.904668,-2.013621],[-0.724634,1.905679],[-9.025358,-0.915620],[8.168514,-2.973293],[-4.184639,-0.821153],[0.104874,-9.380656],[-0.126916,-5.949314],[-2.710604,2.707115],[-7.088938,5.062400],[-4.860017,6.551252],[9.135803,9.044895],[7.723801,-2.744379],[2.787777,2.451928],[-5.382423,-6.244838],[-3.240948,-0.247012],[-9.337201,0.235737],[9.829496,3.986071],[0.128843,-8.018673],[6.110512,7.722078],[1.957191,-3.353710],[6.568332,-2.026396],[-9.381619,-7.420878],[4.955461,2.073289],[-9.871224,-1.756652],[7.886333,6.501217],[-9.425417,8.123429],[-1.396225,5.549839],[-4.512443,-6.086440],[4.197369,0.823885],[6.896064,-4.098555],[-4.318496,5.291597],[-8.018231,-0.413593],[9.525200,-4.304925],[9.078791,5.796827],[3.098310,-5.050161],[8.093840,9.400666],[7.944088,-8.462332],[-6.390044,4.657434],[-0.785371,-3.886906],[-7.277301,8.768130],[-8.457024,-2.508707],[7.597527,7.214553],[-6.724487,5.229253],[-2.993831,-5.798626],[9.191313,7.272685],[9.733519,9.660602],[1.773675,-9.271730],[-5.975475,5.954260],[7.287182,2.877808],[-3.584852,9.051431],[-4.224904,-5.557352],[8.825977,-5.699698]], dtype = "float32")#candidate|9371|(72, 2)|const|float32
call_9370 = relay.TupleGetItem(func_6878_call(relay.reshape(const_9371.astype('float32'), [144,])), 1)
call_9372 = relay.TupleGetItem(func_6880_call(relay.reshape(const_9371.astype('float32'), [144,])), 1)
output = relay.Tuple([call_9341,call_9348,call_9359,call_9370,const_9371,])
output2 = relay.Tuple([call_9342,call_9349,call_9360,call_9372,const_9371,])
func_9375 = relay.Function([], output)
mod['func_9375'] = func_9375
mod = relay.transform.InferType()(mod)
output = func_9375()
func_9376 = relay.Function([], output)
mutated_mod['func_9376'] = func_9376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9390 = relay.var("var_9390", dtype = "int16", shape = (9, 12, 16))#candidate|9390|(9, 12, 16)|var|int16
const_9391 = relay.const([[[-8,8,1,1,4,-4,-4,9,-3,5,-1,-1,4,7,-6,10],[1,6,-9,-5,-4,8,-5,-10,-9,-6,-9,-1,10,10,2,-10],[9,6,-6,-1,-1,-8,7,-7,-2,-7,1,5,6,7,-7,-1],[-4,-4,-10,-9,-5,-7,5,-9,6,10,-5,-1,10,9,5,-4],[8,9,5,9,7,2,-10,10,10,5,5,-6,-4,-4,6,-7],[-8,-4,-6,-10,-7,-4,-5,4,6,-1,-5,-6,4,9,-8,6],[-5,-8,3,4,10,6,-4,-1,10,-1,-8,6,-9,-2,5,4],[10,3,-9,3,8,-5,2,5,7,-8,5,9,-1,2,10,-10],[-7,2,-1,-5,6,1,7,9,10,-1,1,10,10,10,7,10],[10,-9,-9,-9,-6,1,4,7,5,-2,7,-8,3,9,-7,-5],[-3,9,-1,-6,-9,-8,9,9,-5,-2,-3,3,10,6,-3,4],[9,7,-2,-7,-2,-3,2,4,-3,4,-9,-1,-9,4,-2,-7]],[[2,9,8,6,-2,-10,-3,4,3,3,4,-8,-3,-6,-1,-3],[8,-10,9,8,-6,-6,5,6,-7,-9,-3,6,9,10,-5,-6],[7,9,1,7,-6,-6,-4,-8,-1,2,3,-9,-9,6,-2,-7],[8,2,5,-9,-4,-3,-7,-9,-7,-2,10,5,-10,1,1,10],[-6,-1,4,2,-4,6,6,-2,6,-5,7,4,-9,1,5,-3],[4,3,-5,7,10,3,-9,-10,8,9,-5,3,10,-6,-3,-9],[3,8,7,-7,9,4,2,-10,1,-6,-4,10,10,2,-5,2],[-1,3,-6,-4,10,-4,5,-5,-5,5,-9,-7,3,4,-8,-5],[7,-6,10,-9,-9,-5,8,1,2,-5,10,-9,9,10,-10,-8],[-3,-1,6,3,4,2,-9,-5,8,1,-2,-3,-4,10,-8,-10],[-5,-3,-2,8,4,9,-2,4,6,2,-8,1,-7,-5,-1,5],[-7,-7,-3,-6,-5,-2,-1,1,-4,7,7,3,9,1,2,-6]],[[-2,-9,-9,4,1,-5,4,2,-8,-1,9,2,-1,-9,-7,-5],[7,-6,10,2,-7,6,2,1,-8,-8,-8,4,1,4,8,9],[-3,6,4,-5,-5,-4,10,9,-10,5,-7,-7,4,-8,-3,10],[1,-9,3,8,6,7,9,-4,-4,7,9,10,7,8,7,8],[-5,5,-3,-8,-6,7,-2,4,-1,9,-7,5,-9,6,2,-5],[10,-7,-4,-4,-1,-8,3,10,5,7,-8,-7,-5,4,4,-6],[-9,9,-7,4,5,2,-5,3,-2,3,-3,9,-3,7,2,4],[-6,7,-6,-1,2,-9,6,9,4,-9,2,7,3,-3,-9,10],[-7,-9,5,-4,-3,-8,-6,-10,8,-9,9,4,-2,-1,-3,6],[-6,-3,-7,2,1,-3,-6,9,-10,2,6,5,2,-1,-5,-5],[4,-3,-6,-2,-4,5,-6,2,5,-7,-10,1,8,-9,10,5],[-3,-4,-3,7,9,-7,-6,-3,5,-4,-2,-8,-6,5,-10,-2]],[[9,1,2,1,-10,8,-1,9,-1,-2,-7,-3,-7,10,9,10],[8,1,-1,-1,3,9,10,-2,10,-4,-2,1,-7,9,-3,-3],[-4,10,9,8,-3,-7,-4,4,1,-2,-6,4,-6,-9,-4,9],[-9,1,2,-9,6,-10,5,6,-3,-10,-3,-2,7,-7,6,-9],[7,-2,-9,8,8,-8,3,8,-6,4,-5,8,8,5,3,8],[3,-1,-10,10,6,-1,-5,2,9,1,-2,6,-4,5,-4,-7],[2,9,-6,10,-10,10,1,-7,10,4,8,-4,-2,10,-10,3],[7,-6,5,-5,-8,-10,-9,-9,8,-10,3,9,-1,-3,7,6],[10,-7,7,-9,8,-6,-10,-5,8,3,9,9,2,-2,-8,3],[10,2,-1,-4,2,-8,-5,-1,10,4,-9,-1,5,-7,4,10],[9,3,2,-1,-7,1,3,3,-9,5,10,-6,-1,-7,-3,1],[8,2,-1,-8,-3,10,-10,-1,2,4,4,-8,-3,2,-1,-7]],[[-6,10,-3,6,7,4,-3,-6,-1,-8,2,-1,-2,-4,7,5],[-2,9,-5,-3,-2,-10,10,-9,-10,-9,6,1,5,4,-7,-3],[4,-6,8,-1,-4,5,-9,-8,-3,1,-7,9,8,-1,-2,3],[8,-5,9,-5,9,9,-6,6,2,-9,2,8,-1,4,-5,1],[8,-10,-4,-10,-6,-10,5,-2,-7,-5,-10,8,4,-7,1,-4],[2,8,10,-10,8,-9,-7,-10,-1,-3,10,2,-5,4,-5,-7],[-2,-6,4,9,5,4,8,-4,1,-9,1,4,2,-2,-8,-7],[-3,-5,8,-10,1,-3,-10,-7,8,-3,-1,3,-6,-2,5,7],[4,-6,5,3,1,-2,-7,-3,6,2,-4,-1,-1,7,4,-3],[-5,9,6,-3,-2,-8,-5,-3,-7,-10,-1,1,4,7,1,4],[-10,3,9,-1,-2,-9,9,2,5,7,1,-8,-6,-2,-5,-1],[3,1,2,2,-2,-5,-1,7,8,-1,-1,-5,4,-4,-8,-3]],[[10,3,-7,-10,-4,-8,-1,-2,-8,-8,-4,8,2,6,-8,1],[5,2,8,1,-6,-10,3,-5,-5,-1,-8,6,10,2,-2,-6],[8,1,9,-2,8,-1,4,-5,1,-9,-5,-10,8,3,-6,9],[6,-2,9,-9,7,-1,7,9,1,6,-2,9,10,-10,-10,2],[8,-10,-9,-7,10,-7,-3,3,-4,-8,-7,6,10,4,6,5],[-2,-2,-5,-9,-6,-1,3,-1,-5,5,7,-9,-9,6,-1,-1],[5,3,-10,-4,-9,5,1,10,4,-7,-1,7,-1,5,-3,2],[10,7,-10,-6,6,-2,7,2,-9,4,7,-10,-6,8,-3,-7],[-8,3,-5,-6,2,9,-9,-3,-2,-8,2,-5,5,10,-6,3],[3,-1,-8,-1,-6,-2,-1,-3,3,2,-3,4,10,8,-10,1],[8,2,-10,6,5,-9,4,1,-7,-5,-10,10,4,8,-10,9],[-1,-4,6,-7,2,9,-9,-5,5,-9,-2,9,-9,-2,-7,9]],[[-4,1,4,2,3,2,-4,-10,-1,-4,-10,-1,-9,9,3,-4],[-2,-6,-2,-2,10,6,-5,2,7,-10,-8,-7,-1,-5,-6,-1],[5,-3,-4,1,-3,7,-5,-5,-5,-1,-4,-2,-7,-1,-9,1],[8,10,-1,9,9,-3,4,-9,2,4,10,-1,6,-2,-4,8],[7,7,8,-3,1,1,3,-6,10,1,7,-9,-5,7,-3,1],[-2,9,2,7,9,9,-10,7,5,1,1,7,10,5,-1,-5],[-5,-3,6,10,-1,-7,4,-10,5,4,-1,4,-9,9,5,2],[-8,-7,-8,2,-8,10,-5,4,2,-6,1,6,-8,9,-9,-5],[6,3,-1,-3,4,-4,6,10,7,10,-7,7,3,1,7,-1],[8,-8,9,-9,-7,-5,-2,-10,3,5,8,7,10,-3,4,1],[-8,-4,-10,-1,7,-9,-10,-5,9,-3,4,10,8,2,-9,-7],[-9,3,3,8,9,6,-6,-10,-3,-4,3,-10,7,-6,-4,-3]],[[-1,4,-10,3,-4,9,-1,7,-4,-10,2,1,-3,-6,-9,10],[5,3,10,7,6,-4,-6,1,-9,-6,-1,2,3,1,-9,1],[6,-1,1,-10,3,6,-2,-9,5,4,4,10,-6,-1,-1,-8],[8,5,9,-8,7,2,-10,10,8,-3,-10,2,-3,10,5,3],[9,-5,-3,-1,-9,-10,5,4,4,10,10,1,-4,1,8,5],[4,-6,-4,-5,-1,4,5,-1,-7,6,-2,-3,9,-8,-8,4],[4,8,8,-1,-10,-5,4,5,-9,-9,9,9,-5,-5,-1,-6],[-1,-3,10,8,-10,5,2,-3,3,4,-3,-8,-2,-3,3,8],[-4,3,-6,1,7,-9,-6,-10,6,10,6,10,-10,1,-2,7],[1,-1,-4,-4,-8,8,7,4,-1,-7,-2,-7,1,8,-8,-3],[-9,-5,-7,-2,1,-1,-9,6,-1,6,-1,8,10,7,-2,-6],[-3,4,9,-6,-7,1,-4,-5,-9,8,4,1,-3,4,9,8]],[[1,3,-9,10,-8,3,5,6,-9,-3,-2,10,1,1,-4,-1],[3,2,-4,10,-3,-3,9,4,6,2,10,-5,6,2,-7,2],[6,1,-10,2,-2,-2,6,10,3,-2,-5,-3,-3,10,7,-7],[8,5,-9,-1,-1,1,-1,1,-4,-5,10,-10,5,10,-2,7],[6,-9,-8,-5,5,8,8,8,-2,3,-2,-4,2,9,4,-7],[-7,-5,-7,5,8,-8,5,-10,-8,1,-5,7,1,-3,-9,5],[-7,2,-1,-7,-4,-5,10,8,-8,10,-5,1,10,-9,4,-6],[4,-4,4,-4,-4,-7,-6,-4,5,-8,-8,6,-4,-8,1,-7],[1,2,1,-6,-6,-1,10,-7,-9,5,5,-5,6,-7,-7,-4],[6,-4,1,-5,-4,9,2,-1,4,-8,9,10,-7,4,1,-2],[1,5,-7,9,7,-7,8,1,6,-3,-5,10,-7,-5,2,5],[-3,-5,3,4,-6,10,-9,-5,4,-7,8,10,4,6,-3,9]]], dtype = "int16")#candidate|9391|(9, 12, 16)|const|int16
bop_9392 = relay.minimum(var_9390.astype('int16'), relay.reshape(const_9391.astype('int16'), relay.shape_of(var_9390))) # shape=(9, 12, 16)
func_8212_call = mod.get_global_var('func_8212')
func_8214_call = mutated_mod.get_global_var('func_8214')
call_9398 = relay.TupleGetItem(func_8212_call(), 0)
call_9399 = relay.TupleGetItem(func_8214_call(), 0)
func_4773_call = mod.get_global_var('func_4773')
func_4775_call = mutated_mod.get_global_var('func_4775')
call_9402 = relay.TupleGetItem(func_4773_call(relay.reshape(call_9398.astype('int16'), [715,])), 5)
call_9403 = relay.TupleGetItem(func_4775_call(relay.reshape(call_9398.astype('int16'), [715,])), 5)
func_4412_call = mod.get_global_var('func_4412')
func_4413_call = mutated_mod.get_global_var('func_4413')
call_9407 = func_4412_call()
call_9408 = func_4412_call()
output = relay.Tuple([bop_9392,call_9398,call_9402,call_9407,])
output2 = relay.Tuple([bop_9392,call_9399,call_9403,call_9408,])
func_9418 = relay.Function([var_9390,], output)
mod['func_9418'] = func_9418
mod = relay.transform.InferType()(mod)
mutated_mod['func_9418'] = func_9418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9419 = relay.var("var_9419", dtype = "int16", shape = (9, 12, 16))#candidate|9419|(9, 12, 16)|var|int16
func_9418_call = mutated_mod.get_global_var('func_9418')
call_9420 = func_9418_call(var_9419)
output = call_9420
func_9421 = relay.Function([var_9419], output)
mutated_mod['func_9421'] = func_9421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1546_call = mod.get_global_var('func_1546')
func_1548_call = mutated_mod.get_global_var('func_1548')
call_9437 = relay.TupleGetItem(func_1546_call(), 1)
call_9438 = relay.TupleGetItem(func_1548_call(), 1)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_9443 = relay.TupleGetItem(func_6615_call(), 0)
call_9444 = relay.TupleGetItem(func_6617_call(), 0)
output = relay.Tuple([call_9437,call_9443,])
output2 = relay.Tuple([call_9438,call_9444,])
func_9450 = relay.Function([], output)
mod['func_9450'] = func_9450
mod = relay.transform.InferType()(mod)
mutated_mod['func_9450'] = func_9450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9450_call = mutated_mod.get_global_var('func_9450')
call_9451 = func_9450_call()
output = call_9451
func_9452 = relay.Function([], output)
mutated_mod['func_9452'] = func_9452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5006_call = mutated_mod.get_global_var('func_5006')
call_9484 = relay.TupleGetItem(func_5004_call(), 0)
call_9485 = relay.TupleGetItem(func_5006_call(), 0)
func_2514_call = mod.get_global_var('func_2514')
func_2517_call = mutated_mod.get_global_var('func_2517')
var_9508 = relay.var("var_9508", dtype = "float64", shape = (910,))#candidate|9508|(910,)|var|float64
call_9507 = relay.TupleGetItem(func_2514_call(relay.reshape(var_9508.astype('float64'), [13, 7, 10])), 0)
call_9509 = relay.TupleGetItem(func_2517_call(relay.reshape(var_9508.astype('float64'), [13, 7, 10])), 0)
output = relay.Tuple([call_9484,call_9507,var_9508,])
output2 = relay.Tuple([call_9485,call_9509,var_9508,])
func_9517 = relay.Function([var_9508,], output)
mod['func_9517'] = func_9517
mod = relay.transform.InferType()(mod)
var_9518 = relay.var("var_9518", dtype = "float64", shape = (910,))#candidate|9518|(910,)|var|float64
output = func_9517(var_9518)
func_9519 = relay.Function([var_9518], output)
mutated_mod['func_9519'] = func_9519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_9544 = relay.TupleGetItem(func_4174_call(), 2)
call_9545 = relay.TupleGetItem(func_4176_call(), 2)
func_1831_call = mod.get_global_var('func_1831')
func_1832_call = mutated_mod.get_global_var('func_1832')
call_9565 = relay.TupleGetItem(func_1831_call(), 1)
call_9566 = relay.TupleGetItem(func_1832_call(), 1)
var_9596 = relay.var("var_9596", dtype = "float32", shape = (6, 13, 11))#candidate|9596|(6, 13, 11)|var|float32
bop_9597 = relay.logical_xor(call_9544.astype('int8'), relay.reshape(var_9596.astype('int8'), relay.shape_of(call_9544))) # shape=(6, 13, 11)
bop_9600 = relay.logical_xor(call_9545.astype('int8'), relay.reshape(var_9596.astype('int8'), relay.shape_of(call_9545))) # shape=(6, 13, 11)
func_4577_call = mod.get_global_var('func_4577')
func_4579_call = mutated_mod.get_global_var('func_4579')
call_9619 = relay.TupleGetItem(func_4577_call(), 0)
call_9620 = relay.TupleGetItem(func_4579_call(), 0)
func_4295_call = mod.get_global_var('func_4295')
func_4296_call = mutated_mod.get_global_var('func_4296')
call_9621 = func_4295_call()
call_9622 = func_4295_call()
output = relay.Tuple([call_9565,bop_9597,call_9619,call_9621,])
output2 = relay.Tuple([call_9566,bop_9600,call_9620,call_9622,])
func_9625 = relay.Function([var_9596,], output)
mod['func_9625'] = func_9625
mod = relay.transform.InferType()(mod)
var_9626 = relay.var("var_9626", dtype = "float32", shape = (6, 13, 11))#candidate|9626|(6, 13, 11)|var|float32
output = func_9625(var_9626)
func_9627 = relay.Function([var_9626], output)
mutated_mod['func_9627'] = func_9627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7420_call = mod.get_global_var('func_7420')
func_7422_call = mutated_mod.get_global_var('func_7422')
call_9753 = relay.TupleGetItem(func_7420_call(), 0)
call_9754 = relay.TupleGetItem(func_7422_call(), 0)
output = call_9753
output2 = call_9754
func_9767 = relay.Function([], output)
mod['func_9767'] = func_9767
mod = relay.transform.InferType()(mod)
mutated_mod['func_9767'] = func_9767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9767_call = mutated_mod.get_global_var('func_9767')
call_9768 = func_9767_call()
output = call_9768
func_9769 = relay.Function([], output)
mutated_mod['func_9769'] = func_9769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_9783 = relay.TupleGetItem(func_8373_call(), 0)
call_9784 = relay.TupleGetItem(func_8375_call(), 0)
output = relay.Tuple([call_9783,])
output2 = relay.Tuple([call_9784,])
func_9785 = relay.Function([], output)
mod['func_9785'] = func_9785
mod = relay.transform.InferType()(mod)
output = func_9785()
func_9786 = relay.Function([], output)
mutated_mod['func_9786'] = func_9786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9946 = relay.var("var_9946", dtype = "uint64", shape = (2, 12, 14))#candidate|9946|(2, 12, 14)|var|uint64
var_9947 = relay.var("var_9947", dtype = "uint64", shape = (2, 12, 14))#candidate|9947|(2, 12, 14)|var|uint64
bop_9948 = relay.logical_xor(var_9946.astype('uint64'), relay.reshape(var_9947.astype('uint64'), relay.shape_of(var_9946))) # shape=(2, 12, 14)
output = relay.Tuple([bop_9948,])
output2 = relay.Tuple([bop_9948,])
func_9960 = relay.Function([var_9946,var_9947,], output)
mod['func_9960'] = func_9960
mod = relay.transform.InferType()(mod)
mutated_mod['func_9960'] = func_9960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9960_call = mutated_mod.get_global_var('func_9960')
var_9962 = relay.var("var_9962", dtype = "uint64", shape = (2, 12, 14))#candidate|9962|(2, 12, 14)|var|uint64
var_9963 = relay.var("var_9963", dtype = "uint64", shape = (2, 12, 14))#candidate|9963|(2, 12, 14)|var|uint64
call_9961 = func_9960_call(var_9962,var_9963,)
output = call_9961
func_9964 = relay.Function([var_9962,var_9963,], output)
mutated_mod['func_9964'] = func_9964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9989 = relay.var("var_9989", dtype = "int8", shape = (15, 10, 10))#candidate|9989|(15, 10, 10)|var|int8
var_9990 = relay.var("var_9990", dtype = "int8", shape = (15, 10, 10))#candidate|9990|(15, 10, 10)|var|int8
bop_9991 = relay.bitwise_and(var_9989.astype('int8'), relay.reshape(var_9990.astype('int8'), relay.shape_of(var_9989))) # shape=(15, 10, 10)
func_5004_call = mod.get_global_var('func_5004')
func_5006_call = mutated_mod.get_global_var('func_5006')
call_9994 = relay.TupleGetItem(func_5004_call(), 0)
call_9995 = relay.TupleGetItem(func_5006_call(), 0)
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_10000 = relay.TupleGetItem(func_4822_call(), 3)
call_10001 = relay.TupleGetItem(func_4824_call(), 3)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_10006 = func_5393_call()
call_10007 = func_5393_call()
func_7535_call = mod.get_global_var('func_7535')
func_7537_call = mutated_mod.get_global_var('func_7537')
call_10019 = relay.TupleGetItem(func_7535_call(), 0)
call_10020 = relay.TupleGetItem(func_7537_call(), 0)
uop_10029 = relay.rsqrt(call_9994.astype('float32')) # shape=(715,)
uop_10031 = relay.rsqrt(call_9995.astype('float32')) # shape=(715,)
output = relay.Tuple([bop_9991,call_10000,call_10006,call_10019,uop_10029,])
output2 = relay.Tuple([bop_9991,call_10001,call_10007,call_10020,uop_10031,])
func_10038 = relay.Function([var_9989,var_9990,], output)
mod['func_10038'] = func_10038
mod = relay.transform.InferType()(mod)
mutated_mod['func_10038'] = func_10038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10038_call = mutated_mod.get_global_var('func_10038')
var_10040 = relay.var("var_10040", dtype = "int8", shape = (15, 10, 10))#candidate|10040|(15, 10, 10)|var|int8
var_10041 = relay.var("var_10041", dtype = "int8", shape = (15, 10, 10))#candidate|10041|(15, 10, 10)|var|int8
call_10039 = func_10038_call(var_10040,var_10041,)
output = call_10039
func_10042 = relay.Function([var_10040,var_10041,], output)
mutated_mod['func_10042'] = func_10042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4913_call = mod.get_global_var('func_4913')
func_4915_call = mutated_mod.get_global_var('func_4915')
call_10061 = relay.TupleGetItem(func_4913_call(), 1)
call_10062 = relay.TupleGetItem(func_4915_call(), 1)
output = relay.Tuple([call_10061,])
output2 = relay.Tuple([call_10062,])
func_10066 = relay.Function([], output)
mod['func_10066'] = func_10066
mod = relay.transform.InferType()(mod)
mutated_mod['func_10066'] = func_10066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10066_call = mutated_mod.get_global_var('func_10066')
call_10067 = func_10066_call()
output = call_10067
func_10068 = relay.Function([], output)
mutated_mod['func_10068'] = func_10068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_10105 = func_2922_call()
call_10106 = func_2922_call()
output = call_10105
output2 = call_10106
func_10111 = relay.Function([], output)
mod['func_10111'] = func_10111
mod = relay.transform.InferType()(mod)
mutated_mod['func_10111'] = func_10111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10111_call = mutated_mod.get_global_var('func_10111')
call_10112 = func_10111_call()
output = call_10112
func_10113 = relay.Function([], output)
mutated_mod['func_10113'] = func_10113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6147_call = mutated_mod.get_global_var('func_6147')
call_10140 = relay.TupleGetItem(func_6145_call(), 0)
call_10141 = relay.TupleGetItem(func_6147_call(), 0)
output = call_10140
output2 = call_10141
func_10149 = relay.Function([], output)
mod['func_10149'] = func_10149
mod = relay.transform.InferType()(mod)
mutated_mod['func_10149'] = func_10149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10149_call = mutated_mod.get_global_var('func_10149')
call_10150 = func_10149_call()
output = call_10150
func_10151 = relay.Function([], output)
mutated_mod['func_10151'] = func_10151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10111_call = mod.get_global_var('func_10111')
func_10113_call = mutated_mod.get_global_var('func_10113')
call_10154 = func_10111_call()
call_10155 = func_10111_call()
output = call_10154
output2 = call_10155
func_10159 = relay.Function([], output)
mod['func_10159'] = func_10159
mod = relay.transform.InferType()(mod)
mutated_mod['func_10159'] = func_10159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10159_call = mutated_mod.get_global_var('func_10159')
call_10160 = func_10159_call()
output = call_10160
func_10161 = relay.Function([], output)
mutated_mod['func_10161'] = func_10161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6068_call = mod.get_global_var('func_6068')
func_6069_call = mutated_mod.get_global_var('func_6069')
call_10162 = relay.TupleGetItem(func_6068_call(), 5)
call_10163 = relay.TupleGetItem(func_6069_call(), 5)
uop_10185 = relay.atan(call_10162.astype('float32')) # shape=(10, 15, 5)
uop_10187 = relay.atan(call_10163.astype('float32')) # shape=(10, 15, 5)
bop_10188 = relay.subtract(uop_10185.astype('float64'), relay.reshape(call_10162.astype('float64'), relay.shape_of(uop_10185))) # shape=(10, 15, 5)
bop_10191 = relay.subtract(uop_10187.astype('float64'), relay.reshape(call_10163.astype('float64'), relay.shape_of(uop_10187))) # shape=(10, 15, 5)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_10193 = func_2922_call()
call_10194 = func_2922_call()
output = relay.Tuple([bop_10188,call_10193,])
output2 = relay.Tuple([bop_10191,call_10194,])
func_10205 = relay.Function([], output)
mod['func_10205'] = func_10205
mod = relay.transform.InferType()(mod)
mutated_mod['func_10205'] = func_10205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10205_call = mutated_mod.get_global_var('func_10205')
call_10206 = func_10205_call()
output = call_10206
func_10207 = relay.Function([], output)
mutated_mod['func_10207'] = func_10207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
call_10285 = func_4686_call()
call_10286 = func_4686_call()
output = call_10285
output2 = call_10286
func_10292 = relay.Function([], output)
mod['func_10292'] = func_10292
mod = relay.transform.InferType()(mod)
output = func_10292()
func_10293 = relay.Function([], output)
mutated_mod['func_10293'] = func_10293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8479_call = mod.get_global_var('func_8479')
func_8481_call = mutated_mod.get_global_var('func_8481')
call_10294 = relay.TupleGetItem(func_8479_call(), 2)
call_10295 = relay.TupleGetItem(func_8481_call(), 2)
var_10300 = relay.var("var_10300", dtype = "float64", shape = (1352,))#candidate|10300|(1352,)|var|float64
bop_10301 = relay.not_equal(call_10294.astype('bool'), relay.reshape(var_10300.astype('bool'), relay.shape_of(call_10294))) # shape=(1352,)
bop_10304 = relay.not_equal(call_10295.astype('bool'), relay.reshape(var_10300.astype('bool'), relay.shape_of(call_10295))) # shape=(1352,)
output = bop_10301
output2 = bop_10304
func_10307 = relay.Function([var_10300,], output)
mod['func_10307'] = func_10307
mod = relay.transform.InferType()(mod)
mutated_mod['func_10307'] = func_10307
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10308 = relay.var("var_10308", dtype = "float64", shape = (1352,))#candidate|10308|(1352,)|var|float64
func_10307_call = mutated_mod.get_global_var('func_10307')
call_10309 = func_10307_call(var_10308)
output = call_10309
func_10310 = relay.Function([var_10308], output)
mutated_mod['func_10310'] = func_10310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10318 = relay.var("var_10318", dtype = "float64", shape = (14, 7, 5))#candidate|10318|(14, 7, 5)|var|float64
uop_10319 = relay.asinh(var_10318.astype('float64')) # shape=(14, 7, 5)
func_5950_call = mod.get_global_var('func_5950')
func_5951_call = mutated_mod.get_global_var('func_5951')
call_10325 = relay.TupleGetItem(func_5950_call(), 0)
call_10326 = relay.TupleGetItem(func_5951_call(), 0)
output = relay.Tuple([uop_10319,call_10325,])
output2 = relay.Tuple([uop_10319,call_10326,])
func_10339 = relay.Function([var_10318,], output)
mod['func_10339'] = func_10339
mod = relay.transform.InferType()(mod)
mutated_mod['func_10339'] = func_10339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10340 = relay.var("var_10340", dtype = "float64", shape = (14, 7, 5))#candidate|10340|(14, 7, 5)|var|float64
func_10339_call = mutated_mod.get_global_var('func_10339')
call_10341 = func_10339_call(var_10340)
output = call_10341
func_10342 = relay.Function([var_10340], output)
mutated_mod['func_10342'] = func_10342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_10405 = relay.TupleGetItem(func_4174_call(), 1)
call_10406 = relay.TupleGetItem(func_4176_call(), 1)
output = relay.Tuple([call_10405,])
output2 = relay.Tuple([call_10406,])
func_10429 = relay.Function([], output)
mod['func_10429'] = func_10429
mod = relay.transform.InferType()(mod)
output = func_10429()
func_10430 = relay.Function([], output)
mutated_mod['func_10430'] = func_10430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8750_call = mod.get_global_var('func_8750')
func_8751_call = mutated_mod.get_global_var('func_8751')
call_10455 = relay.TupleGetItem(func_8750_call(), 0)
call_10456 = relay.TupleGetItem(func_8751_call(), 0)
func_2876_call = mod.get_global_var('func_2876')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_10466 = func_2876_call()
call_10467 = func_2876_call()
output = relay.Tuple([call_10455,call_10466,])
output2 = relay.Tuple([call_10456,call_10467,])
func_10469 = relay.Function([], output)
mod['func_10469'] = func_10469
mod = relay.transform.InferType()(mod)
output = func_10469()
func_10470 = relay.Function([], output)
mutated_mod['func_10470'] = func_10470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_10490 = relay.TupleGetItem(func_8373_call(), 0)
call_10491 = relay.TupleGetItem(func_8375_call(), 0)
output = call_10490
output2 = call_10491
func_10499 = relay.Function([], output)
mod['func_10499'] = func_10499
mod = relay.transform.InferType()(mod)
output = func_10499()
func_10500 = relay.Function([], output)
mutated_mod['func_10500'] = func_10500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7535_call = mod.get_global_var('func_7535')
func_7537_call = mutated_mod.get_global_var('func_7537')
call_10501 = relay.TupleGetItem(func_7535_call(), 0)
call_10502 = relay.TupleGetItem(func_7537_call(), 0)
func_1143_call = mod.get_global_var('func_1143')
func_1146_call = mutated_mod.get_global_var('func_1146')
const_10508 = relay.const([10,-7,-4,6,7,2,3,10,-6,-7,6,1,2,-6,-3,5,3,-8,6,3,-1,5,-6,4,-7,-9,8,-6,-7,-5,7,4,3,7,7,-5,4,4,4,-1,9,-4,9,-9,-10,9,-6,9,4,-9,7,-1,3,-10,3,7,-3,-1,1,-1,6,-2,2,10,-1,-10,2,-9,9,3,3,6,-3,10,-6,-8,-10,5,-4,-1,3,-3,-5,3,4,-7,-5,2,-7,3,3,8,-2,7,-7,10,2,-6,-6,2,-4,-6,10,-9,10,2,3,-9,2,-2,-6,8,6,6,4,1,-5,-9,6,-3,1,-2,-7,9,8,-10,-4,2,-4,-3,6,-8,-2,7,-6,6,10,-10,-10,-8,-2,3,-7,-7,3,3,3,-2,10,-5,-2,2,1,-10,-4,-9,7,2,7,8,9,-9,3,-1,1,-9,-7,4,4,-8,2,-7,-9,6,-10,8,-6,-4,-8,-3,-1,3,-3,7,-3,-8,-4,8,5,1,-10,5,-6,6,5,7,2,-5,9,4,9,-6,8,8,8,9,10,6,4,-4,-3,-9,10,-10,8,-10,-8,9,2,7,1,-10,9,-9,-9,-4,-3,-5,-8,2,1,-10,10,-2,9,6,5,-10,-1,-9,-1,3,7,7,-5,1,4,-2,3,9,-5,-3,-1,7,2,-4,-1,9,5,5,-8,7,-8,-6,-4,4,-10,-10,-9,-4,-4,-6,-5,5,2,1,6,1,6,-6,4,10,6,6,-6,6,9,7,10,6,-3,3,-5,-3,4,1,-9,4,10,9,-2,-8,-1,-5,-8,-3,7,10,10,5,5,4,9,-9,9,7,-7,2,-1,-8,-7,-9,9,-8,-5,5,-9,3,-8,-6,-2,-8,-9,6,-7,-10,7,9,-1,5,8,-7,10,6,4,-4,-5,5,3,6,6,-2,-7,7,8,5,3,-2,4,10,9,6,8,-2,3,-1,-5,-1,4,4,3,7,-3,-10,8,-7,-6,5,-4,-5,4,-5,-8,3,8,5,7,7,2,9,7,-9,8,-7,10,7,-9,-2,1,-1,5,10,8,3,7,4,-7,9,8,6,-9,9,-7,2,-10,-9,-9,-6,10,-10,1,-1,6,2,5,1,10,1,-5,-7,6,-8,9,-5,-5,-6,-9,-3,-6,-1,4,4,-4,-3,-7,-1,-8,-1,5,6,1,6,-8,4,-5,-4,7,-3,4,-9,8,-6,-9,5,-3,5,2,3,-10,5,-2,-4,-8,9,5,-5,-7,1,-7,1,-7,5,8,1,-3,-3,7,5,4,-7,3,2,-2,8,-9,-1,-7,-8,-4,-3,7,-3,3,10,-5,6,1,-8,3,4,6,2,4,8,-1,7,7,4,2,-7,3,5,-5,8,-8,4,10,7,6,-3,6,-6,-4,3,6,-2,-7,-2,-7,-2,3,-9,2,6,-1,4,1,-10,-2,-8,7,7,7,6,-2,-1,6,7,-7,-5,-3,8,1,-6,3,3,-6,-5,2,6,-2,8,-8,6,-9,6,10,-4,1,5,-8,5,-1,-6,2,8,3,-3,-10,-8,8,10,7,-8,-6,4,3,7,-2,8,8,-9,3,-2,9,-3,4,-4,7,-9,6,6,-5,-7,9,2,-3,-6,2,-9,-8,9,-6,-2,6,-8,7,6,-9,10,10,5,4,10,-1,-1,1,-2,-5,-2,8,-5,-5,8,6,2,-1,-9,-10,4,-8,-2,-5,8,1,-10,9,3,-8,8,8,-10,-8,-7,-8,2,4,-4,2,-8,1,9,5,4,2,9,-3,-10,-10,1,-8,3,-1,-2,7,4,-9,-10,7,-8,-7,9,-8,2,8,7,8,-9,-4,-2,10,-1,-10,-3,-4,-6,-10,10,5,-7,7,10,-3,-6,9], dtype = "int16")#candidate|10508|(715,)|const|int16
call_10507 = func_1143_call(relay.reshape(const_10508.astype('int16'), [715,]))
call_10509 = func_1143_call(relay.reshape(const_10508.astype('int16'), [715,]))
func_9210_call = mod.get_global_var('func_9210')
func_9211_call = mutated_mod.get_global_var('func_9211')
call_10520 = func_9210_call()
call_10521 = func_9210_call()
func_5343_call = mod.get_global_var('func_5343')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_10525 = relay.TupleGetItem(func_5343_call(), 0)
call_10526 = relay.TupleGetItem(func_5344_call(), 0)
func_8608_call = mod.get_global_var('func_8608')
func_8609_call = mutated_mod.get_global_var('func_8609')
call_10527 = relay.TupleGetItem(func_8608_call(), 0)
call_10528 = relay.TupleGetItem(func_8609_call(), 0)
func_8621_call = mod.get_global_var('func_8621')
func_8623_call = mutated_mod.get_global_var('func_8623')
var_10531 = relay.var("var_10531", dtype = "int32", shape = (32, 24))#candidate|10531|(32, 24)|var|int32
call_10530 = func_8621_call(relay.reshape(var_10531.astype('int32'), [8, 6, 16]))
call_10532 = func_8621_call(relay.reshape(var_10531.astype('int32'), [8, 6, 16]))
func_8320_call = mod.get_global_var('func_8320')
func_8322_call = mutated_mod.get_global_var('func_8322')
call_10535 = func_8320_call()
call_10536 = func_8320_call()
func_1172_call = mod.get_global_var('func_1172')
func_1174_call = mutated_mod.get_global_var('func_1174')
call_10542 = func_1172_call()
call_10543 = func_1172_call()
func_7173_call = mod.get_global_var('func_7173')
func_7177_call = mutated_mod.get_global_var('func_7177')
const_10545 = relay.const([3.364738,6.783185,-2.822038,1.850773,3.343667,-2.222700,7.431336,-0.815783,1.628672,0.846138,6.400592,-7.736065,-5.543706,3.927847,2.348846,0.197344,5.353292,-4.743506,8.803710,-0.014469,-3.563235,6.803709,-1.555526,-9.869546,7.567603,0.503847,3.876456,7.225553,-0.539178,5.067687,-6.604952,6.466325,7.928322,3.738234,4.779606,4.068261,-0.414260,5.234257,-9.012482,-5.560134,1.752295,7.270192,-4.003167,-6.498998,1.753076,-9.048352,-0.446957,-2.927207,0.809405,-0.209545,3.906380,-8.935468,-5.848316,-6.697899,9.991661,2.554843,-8.494884,4.440439,0.659326,-7.262100,8.415559,-2.726735,-0.100143,7.564791,-6.635038,-4.593239,0.946129,-7.130158,-3.359273,8.535503,9.887451,-5.318287,6.749680,-0.480347,5.340694,1.780330,-7.013034,-8.566763,-1.636390,-0.939184,3.660259,-6.462440,-0.683635,-3.903929,6.844896,-4.796687,-3.852976,3.826682,6.049678,9.310081,-2.163769,9.027275,-1.902684,7.755634,-6.899702,-5.211830,-9.969372,-5.557594,7.397550,4.790297,-7.977357,7.042748,-6.921722,-1.857625,6.798181,-6.794071,0.585449,-7.884723,0.436913,-3.054043,7.886953,4.303467,-0.068478,-0.538420,-8.371339,-1.018966,-3.111283,-1.109756,-6.412119,-0.081170,-2.660805,1.919601,-6.171934,4.299416,3.422949,2.568399,-0.126785,-1.928054,6.846483,-8.065234,-2.872826,-7.834357,1.083093,8.084217,-0.248472,8.573149,-9.951998,-0.883403,-7.731574,-3.068659,7.047798,-4.342183,-5.330623,-3.376630,-3.875539,-0.408337,-5.960425,8.318558,7.969371,6.877424,-7.178355,-0.879048,-1.814980,0.852974,-4.678590,-4.763970,-4.857708,-1.042088,-3.430976,-0.813531,8.511672,8.076974,3.157337,5.400219,-5.179899,-7.121686,8.428506,2.894458,3.771240,-9.374651,2.044093,-1.894165,-8.018090,-4.855190,9.006786,5.372989,2.090050,-5.693841,0.026543,0.452441,9.073951,-9.088000,-0.506955,-5.208470,-4.682595,-4.450392,3.354800,2.284452,2.426017,-5.439987,-0.796849,4.897223,4.742249,1.969684,-3.278343,-6.304202,-0.644016,-2.159018,-4.571300,1.273199,-1.140198,-4.879831,-3.747142,2.363764,-1.984131,-3.685200,8.436929,-7.309043,-1.864522,4.355399,8.483435,-6.751581,-7.551480,-7.709193,3.189569,1.158244,2.743018,0.920195,-3.601498,4.085688,4.994104,8.933477,-5.474717,9.711246,7.665589,3.840846,-9.254671,0.062890,-9.007703,1.814744,6.277395,5.400208,4.110764,-6.129001,9.732503,-3.335982,7.600474,7.399081,4.605331,-6.445737,1.583350,8.134286,8.721043,-0.276684,3.797048,8.068453,4.518200,3.726897,-8.036943,-7.716627,-7.389723,-5.287683,-5.809199,0.732286,-4.063945,7.462662,2.117791,0.828117,7.495578,-0.881301,5.023612,8.466641,7.812584,1.941583,-2.213183,1.098942,-1.697435,-7.106705,-3.101703,0.825761,-2.899871,-6.347759,2.903132,-3.433691,-6.971612,2.258919,6.917509,-4.450843,-1.721924,-3.680182,4.424967,5.312921,6.575603,-9.467678,3.615559,-6.639333,-5.554551,6.978896,-6.152850,-5.874607,-9.768811,-2.277356,-9.597261,-7.714341,2.944510,9.045918,9.528628,-8.298289,9.275911,-3.071049,-1.656060,-0.565815,2.619583,7.496176,1.789342,-2.427103,8.625213,2.686313,7.815430,-9.892012,-0.857640,2.047522,-5.832864,-6.022842,4.242887,-0.806755,0.604769,-6.149535,-8.294148,-3.375473,-1.112367,-0.878007,-0.462217,4.639832,6.461546,-7.061280,-0.178606,7.428555,1.103637,-5.363970,-9.819225,0.059836,8.375943,2.269869,9.354009,7.119515,-6.993159,5.076653,-9.435924,7.670973,7.252106,6.765299,2.566775,-3.133440,2.140928,0.306092,-1.111315,8.717365,9.887550,2.237414,1.619020,-9.065608,-3.137396,-2.295026,-6.736971,8.584505,6.203854,4.469700,7.798212,0.044686,-0.508333,5.956858,6.490289,-0.823729,4.451246,1.645777,3.603791,-4.798554,-9.014399,-2.965674,-6.430825,-9.562146,-9.412186,2.255118,3.058539,-0.636656,8.537580,-1.609299,1.329277,1.203691,8.038617,1.901927,-2.006935,-1.516191,-6.227817,-1.520339,-3.057212,-5.621406,-1.249041,7.949174,-6.299269,-2.112547,6.565403,9.219908,4.614037,7.303606,5.877670,9.236247,-0.420112,-4.683009,-0.518213,-1.834147,3.258653,-5.556926,-8.215957,-4.117293,4.322618,-3.261111,1.483629,3.743607,3.431774,9.157972,9.253557,-9.905061,7.067922,-3.485716,4.147612,-2.059542,1.838750,8.828198,-9.364027,8.570605,-7.333641,-5.088315,0.609424,-8.766878,-8.658207,2.753212,3.132506,-8.403579,5.692861,-0.068708,7.153449,2.208146,9.980103,-1.262932,-8.621417,-1.176171,4.739291,1.985303,-6.417091,5.786772,2.904774,6.635561,7.051031,6.096244,-5.390599,9.875237,2.541036,8.423681,0.623177,-5.956739,5.682138,-4.368867,-1.754099,4.279796,-8.618153,3.263913,7.640141,-3.994136,-8.918560,1.867227,3.952511,-9.751971,-1.457015,-3.335784,3.504496,2.938423,1.962899,-5.136075,9.524766,-2.824456,-4.621427,-8.890445,-7.154484,-4.399431,-6.614692,-9.779354,5.407055,-7.055353,-8.477941,5.113456,-2.673600,-5.638220,0.553573,4.545580,-1.105654,-2.584483,4.279448,-4.088982,9.796422,3.239292,3.544950,8.571858,-5.858542,-2.701392,-0.660135,4.174377,-9.646967,-5.462203,-3.500526,8.941290,-4.032761,9.377344,-0.237359,5.306829,1.938029,3.605995,-9.393922,8.139003,0.460619,5.292395,8.573024,-4.873901,-6.749159,5.436566,-7.950677,0.043012,-7.655639,-7.833232,3.662053,-3.767346,-9.607773,2.820298,3.088747,-2.722597,-1.540407,-9.556468,-5.765506,6.067028,-6.043316,5.091197,6.517530,6.851431,8.395222,-3.978987,5.943637,0.177784,7.248628,7.420268,4.505722,8.399521,3.536590,-9.639338,-7.902475,8.043528,-9.312324,5.162229,0.073108,-5.848825,-2.403549,6.559680,6.917630,-8.745221,3.665082,8.133141,9.572381,-2.908826,9.115761,-2.455789,7.826973,-2.387950,-2.353921,5.764856,-0.459670,-4.629669,6.828455,-0.382703,7.130303,6.816957,-2.688688,5.129280,8.513601,2.804999,-3.065106,-5.170716,9.351608,-4.012550,-6.429667,4.830710,9.498382,9.210047,-0.622405,9.521530,-7.398732,-5.735705,-6.784805,-0.414139,-1.693940,-2.641978,0.576559,-1.270589,5.550880,-2.946079,-9.390288,-0.138937,-5.602664,-6.426398,6.002048,-8.825751,-1.734087,1.294396,-6.652162,-1.856185,2.919883,-1.212611,6.011281,9.597587,1.144676,-7.121577,3.931831,3.774383,9.738505,-2.684805,0.989745,-3.450506,-6.768647,-1.949272,-3.197344,8.220979,6.741670,-3.968351,-2.492775,1.441091,-3.183513,6.667804,-2.199470,4.621138,2.331718,7.501346,-0.836367,-4.457797,5.385540,2.602626,-1.362251,7.374168,-3.515332,-2.656932,1.437512,-4.259035,-1.373928,2.467652,-3.856393,-5.128125,9.290447,9.689503,2.616395,-9.451506,-6.855905,-3.637736,-6.254784,3.103368,-1.846055,8.217839,6.608344,8.646609,1.611677,9.162133,7.475480,0.450729,3.553102,-8.762839,4.296849,6.489898,-4.822244,-2.271865,7.815591,-0.016197,4.431172,3.692187,6.672037,-3.166515,9.866245,9.761616,2.616603,9.893308,8.535666,-7.842829,-3.911604,-8.772341,2.802586,4.219725,-8.162582,-5.737358,1.067457,7.455083,-9.482351,-7.665939,7.986290,-1.223029,-7.377649,0.309360,3.682035,-2.570225,3.832442,3.720193,8.579252,1.725432,-6.329318,-4.777494,1.247108,-2.569966,0.339795,1.028026,-8.109652,-0.006037,-8.194920,-6.835031,9.089151,8.101981,-6.913018,7.915059,-5.411776,1.885740,8.405604,-4.896063,6.772769,-3.454804,3.980783,2.371652,-5.702372,3.510785,5.199362,-9.241505,-4.306317,7.271748,-7.324371,7.298451,2.476619,3.997441,-3.118460,0.579095,0.604663,-5.939170,-9.356675,-2.129999,3.001046,3.901390,-6.546208,1.852389,5.498830,1.320380,-1.107339,-3.079570,9.748369,-5.968110,-9.219376,-4.564870,0.805740,-2.518400,-4.764894,-1.849551,-5.054119,1.054431,-3.149700,-3.127679,5.080856,7.199220,-2.967650,-4.150643,-0.390954,4.474821,-8.369591,-0.587044,-7.280678,1.087132,3.237503,4.693077,3.858605,-8.213990,0.312797,-4.902056,-0.734010,-5.079155,5.650229,7.844318,4.308588,-2.623585,-0.438436,-1.156993,-0.262629,5.268661,5.943441,0.683895,3.816487,-2.319334,-3.850146,-4.589740,7.770324,1.989071,3.227060,-7.841939,7.673764,-5.557111,1.563097,7.832814,7.892643,8.607161,3.844854,0.520514,1.871020,7.048296,-8.741890,-9.524207,7.811383,7.887782,-8.968990,5.765340,-6.567427,6.119634,-6.298195,1.520004,-9.773490,0.815247,-0.180620,-2.857760,-5.215296,5.367865,6.611212,-7.959103,-0.017072,4.680245,3.176430,-7.729993,2.246632,2.248173,-3.524584,0.476438,-5.293231,-1.084024,5.181523,-7.135204,5.180506,1.872695,7.187349,4.758713,8.712342,3.257444,4.842624,-4.444480,5.573543,0.330366,8.708004,-0.942996,1.271425,-5.317363,-0.560072,-5.022055,-7.882313,-3.700161,-9.458281,2.435788,8.681639,-9.458320,6.338382,3.553134,8.516089,-3.922721,4.467732,-8.257769,-8.454672,1.747676,4.444021,-5.763077,1.825048,2.923429,-9.607898,0.843463,8.046378,-1.466039,9.803424,-9.024788,-7.377171,0.251011,5.721791,-8.265920,-4.861278,-8.324712,-3.017680,4.761199,-3.169303,7.483394,-2.049495,-3.461700,-9.123716,-8.213132,-8.708777,-8.021432,7.518468,-5.619539,9.142949,-1.159657,-2.072432,6.620276,7.236905,1.523664,-6.983120,-2.126603,1.158385,-9.080266,-8.000681,9.067377,7.097046,6.377350,0.607787,-2.207681,3.013694,-0.796914,6.244311,-8.594914,9.632752,-7.321394,-2.118860,-0.494183,9.183323,8.509949,0.762638,-3.254918,8.048770,3.465680,0.352388,4.855904,3.344157,8.448199,-9.940531,8.929197,3.549179,9.863207,4.022949,3.263422,-3.857808,-0.083218,-3.052737,1.135138,-2.872520,-5.752938,-8.952358,-3.942943,-1.761776,-9.370467,7.944838,-6.661879,-7.459131,-7.789859,8.376483,-1.988843,9.667962,8.427409,-7.189185,7.674808,2.344843,-0.248507,9.717864,3.059909,-9.317460,-1.817230,-9.846379,-2.483250,-7.301273,-9.701561,4.438536,-5.931819,3.161203,-5.014285,-8.522939,-6.125382,5.227229,4.544526,-5.693204,-5.328812,-5.339849,-9.104604,2.815525,8.000130,-7.286105,2.221479,2.925771,-7.377570,2.211978,-5.678524,-8.377769,-4.809809,6.508631,-5.143228,-0.803752,3.509969,-3.641651,4.819007,-9.173170,2.517299,-3.638006,-9.793644,-3.399056,-7.761533,2.369661,1.953091,-9.814031,-9.767504,2.389880,4.437903,6.900621,3.620487,-5.237711,-7.044078,0.044959,7.948722,-0.412283,8.445531,-2.113312,7.390392,-0.887300,2.458480,-6.273306,3.565051,6.214381,5.662650,7.359691,-3.945316,-3.940121,-8.357360,-2.646534,2.074614,-4.223896,-0.068992,6.062892,-3.805694,-6.535642,-4.591621,9.638971,4.578247,-9.834077,-2.963246,7.324293,8.011183,8.684422,8.568192,-4.072127,-7.448612,-4.147187,9.320579,-4.697773,6.954428,-9.529270,4.212638,6.285603,-9.415112,-6.848598,2.997722,9.295384,0.145540,2.846316,-7.340933,1.589225,-2.203926,1.864219,9.297388,2.563629,9.350699,-6.536232,-8.985010,4.890160,5.003478,4.521269,8.562817,-4.268474,5.301471,7.440060,9.460878,-5.099319,-4.312592,8.809016,-1.358637,5.578326,-9.348227,-1.865727,5.096573,3.699003,3.548196,-5.653226,7.155533,9.325969,-7.527570,4.161749,-3.035261,8.102633,4.434669,-9.685523,8.805935,3.448662,-0.828099,-4.944692,6.062747,-2.810142,-5.202696,6.303611,0.790060,-0.614721,-1.435995,9.244255,-6.617577,3.066632,-3.537120,0.685137,6.084580,6.270158,-3.182894,-0.050451,-8.775420,5.435375,5.662413,-1.649681,4.101696,-0.917133,-8.667350,-8.457822,-1.199352,7.048687,-3.935457,-2.375160,7.643225,8.576951,-3.774583,-8.230573,-1.555430,4.763210,-1.516773,8.613171,5.678170,1.798212,2.399538,-2.679183,-1.011930,-6.941748,-9.729617,-7.165477,3.293585,9.741975,8.356900,-4.952420,1.242392,9.989628,9.487749,-4.051207,-6.542668,0.427725,0.884813,2.690977,8.138064,-0.287100,4.157006,0.623828,-3.726845,-1.756831,-7.547638,-6.367784,-4.425733,-2.722081,-9.752654,-3.374143,-0.176247,-5.965290,5.563862,1.145905,-9.317693,-7.541721,8.102547,-3.251654,8.222797,2.474282,6.426928,7.063210,-1.795991,4.694632,-6.297501,2.118236,0.641588,9.208821,-2.616458,6.613950,-4.246005,-3.445974,-1.834783,-1.222383,1.958629,4.431632,2.315069,-6.640576,-7.866271,-1.511196,-6.277462,-4.484638,1.620866,-4.199558,-3.841292,-3.496131,-9.108774,-4.387124,1.785560,-5.692325,4.875013,4.337158,-9.319741,-0.027607,-0.834383,-9.555132,-7.415566,-7.739668,-2.529946,4.636705,4.692757,9.063438,-3.908870,-9.238717,-7.778251,-3.866353,-8.459213,-9.955282,-6.882937,-0.099100,5.324500,5.175688,5.580412,-2.182825,-2.581714,-0.916395,3.358390,7.883331,-6.889113,-1.034837,-2.808579,-0.520802,-7.685628,-7.500571,7.921030,1.707793,7.057425,-3.429213,2.138487,-0.896652,6.195465,9.041491,-4.189785,-5.690564,-7.742518,-1.741161,-7.820036,6.916010,7.801013,7.619917,-5.317779,-9.584206,2.570254,-0.439857,8.760011,-1.288931,-6.377674,4.165072,1.229355,9.374233,-5.095352,-3.715879,-4.879158,-4.511157,4.854973,-2.277881,-1.737656,1.500443,1.748873,-1.474023,-1.359423,1.524320,-0.774872,-4.127406,2.006812,5.860614,6.804576,-1.955112,-2.989976,2.458955,-7.505469,9.559642,-6.110806,-4.704166,1.439306,-7.342186,6.372626,-0.361127,4.359010,7.377900,-0.481288,-0.989053,8.379505,8.374147,7.850230,5.498551,-8.723215,1.394541,-8.949573,-0.468945,-0.470741,6.966962,2.336153,-1.735420,-4.848758,7.327213,-1.374644,-6.361432,-7.955551,4.361974,7.755076,6.193176,-4.959356,-2.138019,-4.272201,-7.257485,-3.077610,-5.283011,5.343987,-9.610038,9.627334,-8.403146,9.592666,3.536176,-5.418859,-6.366833,1.916148,3.540078,-4.446890,-2.439204,-4.012366,8.093074,2.368412,-8.295996,-1.678343,-0.634597,-0.937469,-8.661803,-8.911121,1.339720,-9.391440,-8.793853,0.995799,5.910757,2.604880,-8.124901,-3.566175,-3.747855,-9.972964,-4.720249,9.619631,-2.748964,4.028440], dtype = "float64")#candidate|10545|(1352,)|const|float64
call_10544 = relay.TupleGetItem(func_7173_call(relay.reshape(const_10545.astype('float64'), [1352,]), relay.reshape(const_10545.astype('float64'), [1352,]), ), 4)
call_10546 = relay.TupleGetItem(func_7177_call(relay.reshape(const_10545.astype('float64'), [1352,]), relay.reshape(const_10545.astype('float64'), [1352,]), ), 4)
func_1143_call = mod.get_global_var('func_1143')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_10555 = func_1143_call(relay.reshape(call_10520.astype('int16'), [715,]))
call_10556 = func_1143_call(relay.reshape(call_10520.astype('int16'), [715,]))
output = relay.Tuple([call_10501,call_10507,const_10508,call_10520,call_10525,call_10527,call_10530,var_10531,call_10535,call_10542,call_10544,const_10545,call_10555,])
output2 = relay.Tuple([call_10502,call_10509,const_10508,call_10521,call_10526,call_10528,call_10532,var_10531,call_10536,call_10543,call_10546,const_10545,call_10556,])
func_10558 = relay.Function([var_10531,], output)
mod['func_10558'] = func_10558
mod = relay.transform.InferType()(mod)
mutated_mod['func_10558'] = func_10558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10559 = relay.var("var_10559", dtype = "int32", shape = (32, 24))#candidate|10559|(32, 24)|var|int32
func_10558_call = mutated_mod.get_global_var('func_10558')
call_10560 = func_10558_call(var_10559)
output = call_10560
func_10561 = relay.Function([var_10559], output)
mutated_mod['func_10561'] = func_10561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6068_call = mod.get_global_var('func_6068')
func_6069_call = mutated_mod.get_global_var('func_6069')
call_10581 = relay.TupleGetItem(func_6068_call(), 0)
call_10582 = relay.TupleGetItem(func_6069_call(), 0)
func_1051_call = mod.get_global_var('func_1051')
func_1052_call = mutated_mod.get_global_var('func_1052')
call_10584 = relay.TupleGetItem(func_1051_call(), 2)
call_10585 = relay.TupleGetItem(func_1052_call(), 2)
func_1575_call = mod.get_global_var('func_1575')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_10592 = func_1575_call()
call_10593 = func_1575_call()
var_10596 = relay.var("var_10596", dtype = "float32", shape = (6, 13, 11))#candidate|10596|(6, 13, 11)|var|float32
bop_10597 = relay.logical_and(call_10592.astype('bool'), relay.reshape(var_10596.astype('bool'), relay.shape_of(call_10592))) # shape=(6, 13, 11)
bop_10600 = relay.logical_and(call_10593.astype('bool'), relay.reshape(var_10596.astype('bool'), relay.shape_of(call_10593))) # shape=(6, 13, 11)
func_9960_call = mod.get_global_var('func_9960')
func_9964_call = mutated_mod.get_global_var('func_9964')
const_10602 = relay.const([2,-9,-5,5,4,-6,-5,4,10,5,7,-8,7,3,9,-9,-2,-9,-3,-10,-6,-5,-1,-7,10,2,-5,-8,-6,-10,7,-7,-8,-7,-1,-9,-3,9,5,7,-8,-5,-3,5,4,-6,5,-9,10,-5,4,7,10,3,4,5,9,6,4,1,7,8,-3,-4,-4,-3,4,-6,-7,-2,-9,2,-8,9,-10,-10,2,-6,7,-9,10,9,-3,10,4,-3,-10,2,-3,-10,3,-7,-9,9,4,9,9,2,5,-4,-6,3,-1,-6,5,-7,-7,3,-9,6,-10,9,-2,-3,-3,-5,3,-6,2,1,9,6,-2,4,3,7,4,5,7,3,5,10,8,6,-8,-7,-3,-3,-2,-8,-6,8,-1,5,1,7,-8,7,2,5,-8,-5,3,-10,4,10,3,3,3,1,8,1,4,1,9,6,-8,2,8,8,10,-5,8,-6,-5,-4,-6,10,-10,7,-7,-9,-3,-8,-3,-4,-4,5,-4,2,9,-4,-10,-8,-3,2,-10,-7,-3,4,1,8,-7,-7,5,2,-7,10,9,8,5,-4,-10,-7,-7,-9,-1,4,-10,-8,-2,9,-7,7,-9,7,-2,10,-3,-6,-10,-7,-2,8,1,8,-8,-3,8,-8,4,2,6,9,-8,10,-2,8,7,7,-6,3,10,1,-7,-4,6,-8,-5,-4,4,1,-10,-9,9,-8,8,10,-9,-7,-10,9,6,-8,6,6,-5,-7,9,3,1,10,-5,9,-1,-2,9,5,-1,-10,5,9,4,5,2,-1,1,4,4,-10,2,-4,-5,8,-1,1,6,-6,-5,-6,-8,4,8,5,-3,-7,-9,8,9,8,-4,-8,10,-3,-4,6,3,1,-7,-5,1,5,-2,-2,1,-3], dtype = "uint64")#candidate|10602|(336,)|const|uint64
call_10601 = relay.TupleGetItem(func_9960_call(relay.reshape(const_10602.astype('uint64'), [2, 12, 14]), relay.reshape(const_10602.astype('uint64'), [2, 12, 14]), ), 0)
call_10603 = relay.TupleGetItem(func_9964_call(relay.reshape(const_10602.astype('uint64'), [2, 12, 14]), relay.reshape(const_10602.astype('uint64'), [2, 12, 14]), ), 0)
output = relay.Tuple([call_10581,call_10584,bop_10597,call_10601,const_10602,])
output2 = relay.Tuple([call_10582,call_10585,bop_10600,call_10603,const_10602,])
func_10630 = relay.Function([var_10596,], output)
mod['func_10630'] = func_10630
mod = relay.transform.InferType()(mod)
var_10631 = relay.var("var_10631", dtype = "float32", shape = (6, 13, 11))#candidate|10631|(6, 13, 11)|var|float32
output = func_10630(var_10631)
func_10632 = relay.Function([var_10631], output)
mutated_mod['func_10632'] = func_10632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8412_call = mod.get_global_var('func_8412')
func_8414_call = mutated_mod.get_global_var('func_8414')
call_10685 = func_8412_call()
call_10686 = func_8412_call()
output = call_10685
output2 = call_10686
func_10689 = relay.Function([], output)
mod['func_10689'] = func_10689
mod = relay.transform.InferType()(mod)
mutated_mod['func_10689'] = func_10689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10689_call = mutated_mod.get_global_var('func_10689')
call_10690 = func_10689_call()
output = call_10690
func_10691 = relay.Function([], output)
mutated_mod['func_10691'] = func_10691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mod.get_global_var('func_8608')
func_8609_call = mutated_mod.get_global_var('func_8609')
call_10708 = relay.TupleGetItem(func_8608_call(), 1)
call_10709 = relay.TupleGetItem(func_8609_call(), 1)
output = relay.Tuple([call_10708,])
output2 = relay.Tuple([call_10709,])
func_10729 = relay.Function([], output)
mod['func_10729'] = func_10729
mod = relay.transform.InferType()(mod)
output = func_10729()
func_10730 = relay.Function([], output)
mutated_mod['func_10730'] = func_10730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2922_call = mod.get_global_var('func_2922')
func_2924_call = mutated_mod.get_global_var('func_2924')
call_10756 = func_2922_call()
call_10757 = func_2922_call()
uop_10768 = relay.acosh(call_10756.astype('float64')) # shape=(715,)
uop_10770 = relay.acosh(call_10757.astype('float64')) # shape=(715,)
output = relay.Tuple([uop_10768,])
output2 = relay.Tuple([uop_10770,])
func_10773 = relay.Function([], output)
mod['func_10773'] = func_10773
mod = relay.transform.InferType()(mod)
output = func_10773()
func_10774 = relay.Function([], output)
mutated_mod['func_10774'] = func_10774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2330_call = mod.get_global_var('func_2330')
func_2331_call = mutated_mod.get_global_var('func_2331')
call_10804 = relay.TupleGetItem(func_2330_call(), 0)
call_10805 = relay.TupleGetItem(func_2331_call(), 0)
output = call_10804
output2 = call_10805
func_10831 = relay.Function([], output)
mod['func_10831'] = func_10831
mod = relay.transform.InferType()(mod)
mutated_mod['func_10831'] = func_10831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10831_call = mutated_mod.get_global_var('func_10831')
call_10832 = func_10831_call()
output = call_10832
func_10833 = relay.Function([], output)
mutated_mod['func_10833'] = func_10833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7388_call = mod.get_global_var('func_7388')
func_7390_call = mutated_mod.get_global_var('func_7390')
call_10834 = relay.TupleGetItem(func_7388_call(), 0)
call_10835 = relay.TupleGetItem(func_7390_call(), 0)
func_2664_call = mod.get_global_var('func_2664')
func_2666_call = mutated_mod.get_global_var('func_2666')
var_10837 = relay.var("var_10837", dtype = "float32", shape = (144,))#candidate|10837|(144,)|var|float32
call_10836 = relay.TupleGetItem(func_2664_call(relay.reshape(var_10837.astype('float32'), [144,])), 3)
call_10838 = relay.TupleGetItem(func_2666_call(relay.reshape(var_10837.astype('float32'), [144,])), 3)
func_2678_call = mod.get_global_var('func_2678')
func_2680_call = mutated_mod.get_global_var('func_2680')
const_10849 = relay.const([-7.673834,-8.798616,-4.019605,2.366137,-5.398681,9.992682,-3.490392,-2.793777,4.113732,6.978798,-5.552861,0.932204,-1.732275,-3.449800,5.692327,-5.346839,-7.113305,0.454762,3.939427,-9.154092,-0.986056,5.519301,6.960150,5.924913,4.483194,-4.176409,3.509384,4.917643,2.897769,5.352778,9.993769,-7.563767,-7.365796,0.029626,2.611664,6.065617,7.123257,-4.738489,8.374851,5.204701,-2.816845,-9.109930,5.553558,6.738153,9.035490,-2.772593,3.411111,-6.848047,-5.380282,6.575665,4.433568,-7.343026,2.662948,-7.339569,-6.127148,2.929823,6.300076,-0.587378,-9.639187,7.777288,-2.309071,-1.764045,5.599742,8.861657,-2.828442,5.579382,5.150409,4.240084,-8.025212,4.798391,7.704542,8.177147,3.359508,-3.798260,-8.415001,8.595331,3.872479,-4.758962,6.093921,-7.631996,-4.557965,9.606565,0.338304,3.341732,-5.636409,-1.186841,7.017715,8.477290,7.499568,-5.047919,5.688431,-8.252171,-9.648062,7.771813,-6.111497,4.053069,7.494240,7.889959,1.126320,-1.652822,1.839382,-5.388032,4.485360,5.723575,0.290143,-2.336607,-2.868333,4.450965,6.639903,-0.231411,-9.266345,-2.284432,-1.198671,1.876493,-7.147991,-1.454763,-9.323623,9.693137,-0.820675,8.798255,-5.146327,-0.927592,-2.793212,7.966504,2.670208,-8.913111,-9.375980,4.174091,-8.662564,-4.376784,9.156882,-5.925546,6.267902,3.922855,2.374274,6.023982,-4.981825,-1.313864,9.544461,-5.628588,9.592292,2.083075,1.481916,-3.469825,2.490885,1.139520,9.758230,-9.015073,7.453546,-8.220100,-1.569125,-7.843275,-6.085426,-1.299526,0.915096,-4.345479,8.528178,-3.550717,-6.862176,-1.784745,9.631511,-2.126608,3.132785,-8.093628,-4.502930,1.494687,-8.705558,5.746125,-0.881421,6.605925,-7.172376,-1.222657,2.038956,1.111108,-7.956890,6.214049,5.830192,-4.144138,-7.753527,8.117494,-9.134790,-8.777670,-3.020805,9.308476,8.131879,-6.877395,-3.647938,6.445024,1.914830,1.720909,-6.781517,-9.715545,4.457398,-2.916827,0.149358,-9.075423,0.717341,-6.107635,3.197202,-8.680487,-2.849090,-1.128258,-0.603899,-1.282142,-6.623017,7.032813,-0.735747,-5.542244,-1.522818,-0.631886,-8.487549,9.671389,0.463614,-1.371750,4.767877,9.759043,1.854620,-3.265659,6.212016,-8.308651,9.363281,-3.743970,0.738947,0.522076,1.362898,8.937393,-1.381578,5.754502,-3.122347,-7.241848,7.654675,-8.676879,-9.296473,-8.928780,8.397619,5.413771,-2.446129,7.811650,5.785710,6.680598,-3.413523,-2.571791,-9.438746,-1.221359,7.846551,-7.439795,-2.004490,-2.382897,-5.278359,-9.713685,6.872223,-1.142648,2.607853,5.764275,-2.511033,6.315673,6.023993,9.792285,-5.813575,-3.159899,0.334945,-7.798043,7.896285,-7.276906,8.741434,-6.067562,-3.687237,-3.719875,-4.411914,-7.140904,-7.058060,4.922072,-2.775702,7.132747,-0.663108,-5.431124,3.856195,4.048911,8.632078,-0.360956,-3.407228,8.515484,0.395484,-8.141372,3.786096,-3.117980,-9.961014,9.868764,-5.850996,5.737579,4.702949,-8.814215,-3.686751,3.506515,3.704493,-9.666790,-5.706990,2.105505,7.698946,5.279453,-1.487152,6.515164,2.844983,1.034766,5.189421,-2.262278,8.642678,9.915251,-9.298383,4.384993,-2.067257,5.463660,-0.563411,-7.632469,-8.268564,-1.514158,9.091699,-2.987689,4.782334,6.569539,-2.197364,1.649720,-7.593766,-7.530143,0.816418,2.113609,5.111631,9.946443,4.129767,-8.711439,0.900305,-1.742511,-3.771829,-2.450636,4.336305,-2.070528,6.236392,4.879431,9.578737,3.581235,9.889275,-8.578359,0.713383,-5.734003,-7.957437,2.578494,-1.979046,-6.088020,-9.637840,-3.741897,-4.502572,3.176964,-3.236842,-1.734490,-0.671400,-3.232684,-5.224357,2.504259,-4.696680,-4.599253,-5.676777,4.077213,0.530653,1.901121,-9.375892,6.589691,-0.728618,-2.003904,6.683859,-8.693866,-5.608636,-4.631023,-7.988993,5.643529,7.523056,1.266429,9.443402,-6.328314,-8.537555,-5.624708,3.224078,-2.751448,-3.949617,-0.927166,0.939101,-4.015960,-1.147284,-5.191753,-5.255829,6.943877,7.852134,7.087490,0.748087,2.673431,5.089728,-9.300745,-7.690518,-3.284834,-1.778881,-1.934566,-6.849708,6.650013,0.175736,5.726775,0.738040,-6.032129,4.729188,5.751380,9.433552,-2.213816,-9.878353,-5.007509,6.111154,-2.723315,9.290923,0.362360,4.341859,-7.262813,-4.007873,-6.283850,4.138983,-8.063012,-9.950853,2.198537,5.279184,-2.196372,8.334971,-7.292368,7.780134,-2.308283,0.015753,-8.868600,-8.911285,-3.891992,-0.047936,0.204315,3.485967,-0.893010,5.464664,3.968258,-3.408014,6.490824,-5.105901,-5.375035,-2.879392,6.344956,1.899184,-6.034496,-8.774254,-7.909652,9.269043,-6.193061,-3.638323,-4.766510,5.572521,-5.886946,7.179436,0.319761,5.106734,3.727244,-1.947905,2.993680,8.110603,0.471208,-1.747192,-9.437980,5.352126,-6.455639,-5.694082,-8.135763,1.092843,0.378078,-5.119152,-3.792754,-3.273430,6.037797,-2.462617,-8.965326,-5.739399,-0.831228,-5.691684,-9.267068,3.021306,7.033213,8.959567,6.653230,-2.650682,4.842835,3.826463,-1.631979,1.052662,-5.850383,-0.768720,6.150848,6.037694,-2.711128,4.923732,8.411792,8.407173,-1.424788,-8.382244,4.254156,-8.903327,7.376947,7.970838,9.557146,1.525547,-0.567042,2.058032,-2.133676,0.942647,-4.676257,2.043821,-9.162604,-9.016503,3.300730,-3.337662,7.827431,2.416162,1.930495,-7.097096,-0.811442,-5.291163,4.865307,-7.479787,-8.296411,-9.723401,-4.130196,9.285601,9.575710,7.689298,-7.233814,0.360409,-5.804351,5.028846,4.212922,8.937468,5.314602,3.600142,8.317233,3.218177,4.838033,-4.792117,2.338089,-7.360606,9.673095,-9.753060,-3.289942,9.754888,-6.068626,-2.895140,-1.215742,0.060791,0.324758,-3.845153,5.951394,2.931937,-2.873128,-6.130261,6.922006,-4.063554,3.401697,-3.785786,-0.369067,-3.547255,-5.062038,3.594345,-2.876620,8.360941,1.740783,-0.722054,9.218790,2.065826,2.282542,4.038646,4.798887,5.357993,-0.101844,-9.345287,1.705342,-9.361716,6.427430,-8.726203,-0.978146,8.093025,-0.507307,-8.237300,8.001066,3.888754,-1.017041,8.172330,-8.471370,-4.548176,6.812728,9.341684,0.243580,-1.667651,4.873066,1.201454,-3.081017,3.625253,-4.853931,-4.179757,-0.076782,9.975899,3.928002,-2.182587,9.782980,-8.791972,4.547602,-4.450621,3.474226,0.665242,4.800897,9.648678,7.969010,-2.444506,-3.156258,-9.765343,-4.593301,4.789883,-9.406607,0.935975,-8.146440,-5.281334,-9.629609,9.288854,-1.954284,-4.717078,8.202959,5.599270,7.381338,-0.596383,7.275038,-4.834425,-5.625498,6.984878,4.126525,9.970090,-1.698905,2.953074,-8.063837,8.201323,4.865102,-0.560857,9.418829,2.808835,-6.972450,-6.320869,-5.679894,7.653624,6.781982,-7.717787,-8.490097,-9.264356,2.441774,1.653967,-1.665179,-0.559612,-0.822059,-7.709590,2.128419,-1.074995,-6.168992,5.197387,3.532172,1.379667,6.300321,1.369814,6.137841,-6.644108,9.931984,-6.238977,-6.059371,4.056631,-7.995573,-7.201924,-0.657843,5.752219,-6.401031,0.436240,2.320292,-2.723447,-4.659601,-0.407539,0.631160,6.496798,-7.333045,0.360644,-4.075865,-1.518900,-7.461806,-7.890901,8.403202,2.631600,-6.969404,-9.762354,-0.949204,-6.107777,-2.459695,-2.193033,-6.577526,0.950518,-8.782595,8.247251,2.966150,8.807173,0.397474,-2.320068,6.210189,-4.391265,9.481657,5.806011,4.002917,-4.138007,4.889333,5.797919,-3.532975,-8.146532,6.245682,-6.695798,6.980949,0.010306,8.279511,-3.290229,5.192881,7.783622,4.874671,-9.639895,-1.116682,-2.936704,-7.894206,9.185701,-1.765553,8.510096,-0.269500,3.854975,5.193540,-5.944942,-3.444398,0.927045,7.837589,-4.671636,5.551905,9.411636,-2.532623,6.699354,3.807254,0.988187,9.874960,-0.322077,-0.897170,6.222384,-3.915470,6.985205,-6.800860,-7.434316,5.320522,-7.055653,-9.214037,-4.799853,-7.205286,7.867457,6.157460,2.843792,8.563888,-6.607180,7.461283,5.007566,7.237474,4.804074,9.129497,3.050895,-0.135418,2.549452,7.118673,4.936085,-9.975650,4.821358,-6.582777,-9.550606,-6.287124,3.707658,-2.886896,8.849233,1.556944,-8.173119,8.037419,6.664794,8.101209,-4.534638,7.931253,-2.472062,-7.713439,8.708416,5.025573,-6.150564,-1.622937,3.516780,-4.319805,-1.150818,8.052636,-6.991347,-2.641224,7.517782,-1.560620,-1.687607,1.890909,8.102934,-8.081635,-4.833024,-9.780361,-1.116355,5.313314,-9.223974,-7.109836,0.064732,2.999687,-9.388094,-0.414654,9.357315,1.085475,-5.344698,3.054265,-4.748367,-7.008295,1.440357,4.101555,3.489215,8.258033,-0.299534,-1.779622,-7.781009,6.447198,9.565236,-0.277296,6.614091,-1.930820,-0.106458,7.579870,8.730111,-4.402747,1.872523,-8.561311,-0.089838,-9.393656,-3.831890,-1.696036,-2.812843,7.634744,5.238321,-6.495745,-5.867078,-0.350624,-8.303679,9.314647,3.279918,-2.645070,-8.029903,3.184256,7.449633,3.063417,-2.708529,-3.851881,-5.905622,-2.937960,8.148490,-8.451060,4.017607,-1.494273,-3.014757,-4.986690,8.662202,-6.724564,8.920926,-4.682748,8.027636,-4.479446,-5.628563,-8.012671,9.802523,-7.986708,-7.009187,-5.680908,-8.476779,5.243746,-3.485346,-6.088537,7.311303,3.716056,3.224737,1.604128,-1.155326,-9.519307,-3.603366,5.585095,-8.859089,-1.063250,-7.096412,-7.908758,1.753423,6.827073,4.582732,-5.173062,3.049903,-1.752425,8.262752,7.533788,0.582700,-3.772392,1.874500,3.027729,-1.359544,-2.538385,-6.683687,6.573474,-7.930426,-8.365371,-8.266658,-5.928568,-3.360886,-2.851916,-4.682197,3.345955,-4.323921,7.429230,6.875989,2.279248,-3.548241,-5.672449,-3.884695,5.529908,0.500601,1.375312,-6.313321,5.518219,-3.393856,-3.604202,4.413051,-3.827264,-5.097975,4.882991,4.332190,4.956056,-9.330166,-3.042391,8.693965,-9.058056,3.380510,-0.262338,3.065405,5.494455,-7.615540,1.121410,6.779311,4.619543,8.823310,-3.354886,3.974937,2.439634,3.634862,-6.787300,3.356113,2.955399,-1.618443,-7.455367,4.168093,8.932159,0.096004,-9.476992,3.974670,-6.087346,-3.417727,0.990313,-6.584885,-9.694356,-8.724950,-5.994790,6.405535,7.272473,-8.904128,4.731046,2.645746,3.184838,5.649838,4.771074,6.582160,-7.105649,-8.537825,8.524702,-2.194806,1.885149,-5.899150,-9.216771,6.358171,-2.793504,0.351718,-1.318555,-2.221135,7.369123,3.952726,-6.659737,0.751327,-8.032557,-0.343930,-8.135320,6.838037,-1.490773,-7.658619,5.106351,-7.156364,6.838791,-0.755522,-0.008112,0.044252,-7.624841,-0.992745,1.287119,4.724743,-5.481509,8.831638,-3.753035,-2.575521,-7.086039,1.179759,-4.732346,5.038453,1.940136,5.273307,0.880031,-2.430263,0.256502,-2.110430,-0.074744,9.275416,-7.838718,9.814461,1.715041,3.586709,-8.738254,-4.180656,-3.367786,-0.121681,4.183241,6.422006,-9.210848,-6.664343,-9.533652,-4.704229,0.927636,3.382666,-9.672314,-6.283991,-8.143592,-8.254710,1.007551,-7.396570,-1.340139,6.953448,-9.459223,-7.817076,-3.772608,3.289782,-0.523111,1.726098,6.137596,5.811131,-4.834096,1.735680,6.878262,8.662410,-7.238846,-1.464902,8.148211,-4.994759,-3.975261,-6.734012,-9.065793,2.026321,-2.615587,-0.977538,-2.063645,8.951181,7.977359,3.189757,-6.718979,2.328246,-8.414112,-0.746782,-7.895060,-4.940922,9.703819,2.055809,-9.265867,-5.239409,-2.987144,-8.729279,-5.649367,7.436307,-6.403294,-2.917495,3.999968,-9.473015,0.027853,4.224646,3.064534,-0.930634,9.978316,-5.934504,4.714845,-6.256120,2.339425,-2.018762,-1.117458,-2.124146,-3.306465,-9.468387,-8.551182,-4.412144,1.289808,4.615540,4.237113,3.273513,-0.044020,-7.461465,0.847913,0.488569,6.286544,-3.284772,5.659654,-0.064766,-6.229353,8.999415,3.070704,-8.789090,-7.068460,-8.914464,-8.903214,-5.413488,9.118809,-9.875054,8.014078,-4.757302,1.478451,-6.530283,4.190347,-7.991655,0.487678,-9.252220,1.509598,8.973366,5.859596,7.622339,-7.029582,-3.706684,-1.261521,-8.193508,-0.895202,-5.202497,4.204333,-5.702753,-4.620736,-1.091171,-8.138866,-2.029075,-5.013904,8.826572,0.440922,2.221498,-9.302358,-4.049138,-8.576486,-9.098944,7.791210,-6.838751,-3.456519,1.641919,1.604758,-5.129934,-7.690212,-1.855038,8.941198,-3.369865,-9.299422,-5.887566,5.970663,-7.975337,9.768463,-8.149604,0.006075,4.563180,8.996103,-4.482148,6.599346,9.679875,-3.744945,-1.097448,0.171363,-3.795250,-1.989776,6.722026,4.874870,5.704211,-1.073460,3.402296,-3.470006,6.188855,0.084574,-9.247433,4.649448,6.948381,9.018060,9.169006,-1.864785,8.173047,-0.754670,9.696403,-1.357496,-0.691131,-8.206553,-0.867753,-9.149359,1.840619,-3.394796,-3.773441,6.077907,7.933928,5.955602,0.646796,-8.185724,-7.993537,1.427588,5.658010,-5.733048,2.069712,5.819573,4.843396,3.973945,-1.621215,1.094590,9.479970,-7.574144,4.924742,5.029278,1.990560,7.022504,-3.961224,5.835390,-1.714137,6.585472,9.156898,-5.148360,6.024541,4.440025,8.822278,-8.067832,1.178555,9.438049,4.550323,4.574013,-4.570682,-1.764036,-2.090889,-3.050492,-7.549004,-7.700799,0.603820,-7.308321,-8.750425,-8.436086,-4.556865,8.502222,3.221012,2.186508,1.554727,0.910026,6.974004,8.846958,-5.621275,9.877339,5.841813,-2.986955,-6.430596,6.186365,-2.171606,-2.373117,3.977333,-5.785513,-0.181337,0.969504,-7.901448,0.404671,-1.663984,1.315109,8.401086,2.994688,-7.409029,9.433776,0.923819,-6.254813,-5.644390,-5.286427,-8.686590,-7.157624,-6.212381,-3.381043,-3.036796,2.027254,-4.898000,5.015909,2.150596,0.907773,-9.297129,-4.269974,7.545458,8.347616,0.233153,9.582294,-4.204909,-0.785167,6.505322,-2.866984,-8.933831,8.390130,-4.937028,-2.612428,5.018333,-0.680835,-1.738429,6.295789,5.668673,4.922661,1.285298,-4.635075,-3.109361,-9.206267,1.809193,-7.390621,-7.833152,1.216229,-5.906242,-0.013937,1.668397,-2.510884,5.932573,4.389374,-5.379282,9.982400,-9.915674,-9.296105,-4.541426,-6.108834], dtype = "float64")#candidate|10849|(1352,)|const|float64
call_10848 = relay.TupleGetItem(func_2678_call(relay.reshape(const_10849.astype('float64'), [8, 13, 13])), 0)
call_10850 = relay.TupleGetItem(func_2680_call(relay.reshape(const_10849.astype('float64'), [8, 13, 13])), 0)
func_7535_call = mod.get_global_var('func_7535')
func_7537_call = mutated_mod.get_global_var('func_7537')
call_10854 = relay.TupleGetItem(func_7535_call(), 0)
call_10855 = relay.TupleGetItem(func_7537_call(), 0)
func_10066_call = mod.get_global_var('func_10066')
func_10068_call = mutated_mod.get_global_var('func_10068')
call_10862 = relay.TupleGetItem(func_10066_call(), 0)
call_10863 = relay.TupleGetItem(func_10068_call(), 0)
func_8553_call = mod.get_global_var('func_8553')
func_8556_call = mutated_mod.get_global_var('func_8556')
call_10864 = relay.TupleGetItem(func_8553_call(relay.reshape(call_10834.astype('uint32'), [715,])), 0)
call_10865 = relay.TupleGetItem(func_8556_call(relay.reshape(call_10834.astype('uint32'), [715,])), 0)
func_9053_call = mod.get_global_var('func_9053')
func_9055_call = mutated_mod.get_global_var('func_9055')
call_10868 = relay.TupleGetItem(func_9053_call(relay.reshape(call_10848.astype('float64'), [1352,])), 0)
call_10869 = relay.TupleGetItem(func_9055_call(relay.reshape(call_10848.astype('float64'), [1352,])), 0)
const_10889 = relay.const([0.170376,-0.105691,-4.594881,8.389156,0.628088,-5.082511,-4.184823,-1.198713,-5.763934,-4.097307,-4.053422,-8.687176,-5.602723,6.176485,-8.725206,3.884959,1.986351,-3.107373,-1.276211,-7.178084,-7.134520,-3.600767,6.851667,-0.612572,0.691207,7.872842,9.063440,4.082549,-5.280593,-9.087116,3.165401,-5.017321,-4.763475,-8.969703,-6.299508,-4.135556,-6.535188,6.455652,4.192280,8.247194,-6.967130,2.253848,-9.898537,2.212400,1.771810,7.382091,7.884237,6.795094,1.393959,6.605273,-2.465825,-1.379909,-0.966138,-5.710997,-8.275432,-3.615848,-2.153122,-4.928318,-0.073622,4.553607,-3.336789,-0.350159,6.526649,8.389467,-9.435228,-0.103688,-1.171908,5.751175,1.257368,-6.339727,4.964286,-4.147371,-7.388838,-4.851554,4.155331,4.649433,-9.427030,0.462970,8.900417,-2.123353,0.773929,1.761051,-7.952113,-9.682851,-9.726352,9.528688,2.570465,-9.308798,-9.018258,-9.737836,-7.250513,1.316187,-8.532767,-3.665714,4.487351,0.113431,-9.573491,-7.138456,6.159562,-4.393852,-4.973862,5.320949,0.400857,2.798663,-5.128077,4.708393,0.717304,3.128076,-9.645334,-1.985394,1.331697,-2.370499,-9.522349,-0.331211,-0.802034,0.783877,-4.404941,-5.474666,-1.011429,4.109292,-7.519598,-5.205018,-2.674041,8.812324,4.667990,-6.515049,8.781513,-4.492553,-1.462775,7.599195,0.234236,4.455120,8.581960,-6.179411,3.313318,-5.993733,-0.366550,-8.507993,-5.190798,2.433956,6.001445,-6.413641,2.593390,-7.527729,9.479704,-4.801670,-8.399492,-7.847673,7.698490,-5.875153,2.342754,-0.886203,0.547931,-4.761989,-4.142492,0.951932,5.379021,-7.900611,4.583706,-4.571696,-1.478577,4.259315,-9.651343,-7.957506,-6.774572,5.428578,8.109537,-2.218111,-6.978637,4.029108,-2.004803,-6.316422,-8.300748,-6.256021,1.491921,0.913345,7.132532,-2.248280,-3.538235,-5.871528,5.212847,-5.378834,2.542101,2.151363,6.294224,8.209388,-5.047251,-8.509159,-7.317438,-8.528697,3.544507,-2.609640,-6.083899,9.906379,0.645245,-4.681086,3.314602,-9.314962,2.432448,-0.053203,-5.657062,-5.584498,2.225307,4.159833,-6.714270,2.979107,0.646158,-1.608466,-2.068953,2.523657,3.995433,7.067387,-5.746207,-1.094987,6.168413,9.133619,-8.161413,-8.379517,-3.328923,7.943116,4.588167,-5.282038,-3.605452,9.834032,-0.410057,9.554313,-7.512680,-6.730895,-1.962712,-9.463080,5.468997,3.586094,3.314599,5.904059,5.631680,-6.649197,4.278163,-1.864643,-9.843277,9.004226,-8.534794,-0.138551,9.710814,3.408564,1.474800,7.504549,5.530509,-1.059546,0.891367,-3.788085,7.659311,2.408707,-9.699140,-9.854982,4.285362,9.312798,-5.469451,-7.568645,2.003316,9.388179,8.845003,9.869570,3.247915,-2.154786,-4.124376,-8.756234,9.010459,-4.603560,4.465652,-8.137030,-1.282270,-9.518487,-8.628128,-7.520816,-1.588375,-3.008973,1.690472,4.090580,-8.118363,0.497813,-3.100035,-9.908478,7.540659,2.103940,1.790602,-8.822964,-9.896318,9.306276,3.691277,-2.576005,9.718487,-9.096774,-3.787447,-1.498775,8.492835,1.451125,3.858492,2.077487,0.163519,8.175677,5.730089,-7.063995,-7.205929,-2.466434,-5.597882,1.000093,3.644096,-9.746795,6.745321,-9.699083,-2.826703,2.634798,1.389785,-1.190916,8.100040,-1.967380,6.251054,-2.715506,-2.881592,-7.930596,0.765911,-3.465344,2.455993,9.840299,6.017583,8.473264,6.702986,0.239154,3.318784,8.181043,9.927518,0.201892,2.144200,-3.039041,-0.715729,-5.738635,2.998149,7.133604,2.528319,5.059460,-0.934353,-3.955647,2.926919,7.392507,4.233402,-5.847220,-0.136002,-6.202237,5.703032,4.268528,6.835784,-2.277487,-4.020270,5.942964,-9.752989,1.311644,8.944137,-4.384368,8.494354,2.875536,0.492754,-6.558769,-4.456078,7.034166,3.182451,8.292364,-6.425390,1.890667,2.386714,-2.539850,-5.188901,8.131972,6.175572,-1.518532,4.214123,9.742723,2.776294,-7.115924,-4.917265,-2.095765,-3.865770,-9.204836,5.543706,5.280601,-1.522901,-7.304388,6.107991,-1.890187,0.938559,-4.389904,2.053391,3.228103,5.080583,-2.130350,7.258820,9.013821,-3.726313,-7.059341,-7.886573,2.615357,8.144256,9.652482,5.569807,7.647059,-2.579598,6.844558,-3.939470,7.729489,-2.123531,0.261715,-6.572480,5.554048,4.456974,-2.145119,8.227559,-5.275459,4.766413,-9.042558,-7.280647,4.420933,8.971705,-1.527407,-3.909685,6.103528,6.909502,-0.024971,6.991166,-4.277781,-2.417340,-5.832813,-1.635974,-6.538658,-7.547116,-4.541421,3.591406,-5.565035,-9.459729,-3.471681,-0.483488,4.597754,-9.201091,1.723790,4.036879,-4.935809,-2.029161,-3.062000,-4.034077,-1.056679,8.828472,9.805895,-1.106983,4.151469,-3.087533,0.267433,6.933745,-5.766700,6.943852,8.987755,7.011243,-9.785253,0.227588,9.664636,3.915586,-7.351875,-8.848521,0.924164,0.170388,-8.073681,-4.006140,-1.403912,-7.907721,-0.496883,-3.822459,7.194818,9.856052,4.354250,-4.840662,-6.836629,-9.986294,-3.144189,-7.570547,-4.270837,-8.657513,9.793579,-7.864973,-0.940784,-0.821998,-0.722561,-6.252526,5.594533,8.315843,-2.775206,9.714453,-4.874313,-0.762659,-5.720186,-9.151557,-9.778643,8.798517,-6.525564,-6.133204,7.406606,3.997107,4.120919,1.693288,7.366693,-0.723692,-3.085276,7.555458,4.358813,4.792300,-5.165538,-4.965717,-7.554114,1.773969,-6.880295,8.635743,-9.090379,7.663109,-8.640451,-0.242345,-0.892451,-4.761775,-0.168226,3.952126,1.422877,-7.609338,-8.681315,-3.354748,-3.292280,9.561533,9.946740,-9.625993,3.425105,-5.910427,-0.383109,-7.812841,9.594651,3.622946,-8.142862,6.805471,4.488430,1.486795,1.689861,-2.338031,1.995570,-5.261906,-6.621920,7.267303,-1.730301,-2.309045,-6.498035,4.394099,1.970407,-3.801510,7.816067,5.250936,5.879235,3.413298,-4.702600,-0.546700,5.386061,3.631087,-9.207799,-2.403391,-5.382427,2.103177,7.384601,-8.030655,-7.599563,-3.897840,-1.424258,-8.977304,-7.762490,-3.831807,-7.930124,0.045228,6.853926,8.408157,6.104782,9.070565,-0.379673,-5.643701,4.100340,-8.548377,8.378286,-7.717204,-9.405745,0.659109,-7.810073,-5.328264,9.247751,-3.347431,-3.312327,-1.824144,4.299860,1.621713,-3.718880,6.274889,-5.016237,4.940205,-7.168497,6.460805,2.179594,-9.362884,0.700243,-1.893855,-3.843428,2.494546,-7.342006,-8.873132,2.324506,-6.246162,3.438065,-8.376701,2.485315,-6.274878,3.049057,9.178136,-7.628254,-2.457220,-3.694012,-3.242592,3.353162,9.290463,4.450630,-9.141166,5.882408,1.654255,-1.419428,-7.394673,5.390411,-7.476269,-6.596610,1.461136,3.248732,-0.869881,-7.090057,-3.944572,0.730076,-4.479007,4.368362,1.579805,9.084955,6.579588,-7.355904,5.212743,-2.363774,-6.065900,3.582385,-2.944763,5.090438,-2.762915,1.102659,-8.057797,-4.143840,-5.845068,4.209371,-0.335213,-1.654257,-5.757582,9.782803,-7.680211,5.059138,4.533917,1.835317,4.690863,-7.112624,-1.039369,-5.135210,-5.903078,2.652476,-5.857474,0.288951,5.945340,1.215230,-9.030448,-7.032915,-3.546196,-3.290346,-4.760163,0.456453,-6.734381,-8.172873,-0.896510,3.814760,5.190001,9.536286,8.423114,8.548242,-4.997899,9.032803,3.628360,1.303643,0.234216,1.933238,1.212961,-2.352454,6.870071,8.862092,3.921301,-3.571865,5.162133,6.861437,-7.406235,-1.037121,9.549649,-7.139320,0.878090,-7.437509,5.323281,-4.058886,7.661910,-0.223526,5.952005,-3.463753,9.135573,-6.827875,-6.244461,2.135576,-8.785745,4.887428,7.597792,-8.785467,5.319942,-9.156251,1.900407,-7.121426,5.103858,7.315609,-7.125001,0.091909,-3.936188,-9.777847,6.242970,-3.114876,6.490849,6.596570,0.186802,5.451395,9.593535,4.690374,4.727427,6.522848,-2.037229,4.129431,-4.766823,-0.019625,-4.861246,4.691067,9.407958,3.963192,7.129106,8.369683,7.841079,4.759358,-3.821392,9.675527,-8.031892,-3.067541,3.176596,0.453546,8.907494,-6.665037,0.386097,6.689256,2.473826,4.903383,-8.129887,2.893073,-6.114485,-2.774456,6.175316,-2.289085,-2.769388,5.362280,-4.491992,9.310987,-1.689378,-4.597456,8.715690,-2.075591,-6.867813,2.981851,3.045869,-6.461770,4.486438,-9.008694,-3.184820,3.129633,-0.823297,-1.654474,8.597131,-4.169124,-3.371558,4.341401,-0.250982,-9.701064,-0.504068,9.706598,0.302047,1.365135,-6.803334,9.694251,-8.850026,5.558650,4.239342,2.605655,2.198389,7.513908,-1.084090,1.724243,-8.977264,-8.086896,3.677653,-8.413757,0.144410,-5.741544,-6.613226,3.795258,-6.774545,8.702491,-2.716676,-3.944033,-3.590658,7.797775,3.841386,8.820641,4.414869,-9.331038,-7.668936,4.134808,-1.295816,1.912122,7.800729,4.106289,-4.501952,-5.280347,5.216890,-8.022705,-3.513536,9.723716,1.463699,2.151896,-8.709968,9.638969,7.576834,-0.426723,-7.979296,-2.598207,-8.807513,5.446519,-4.391487,-6.277504,5.840087,8.404227,-3.707313,3.657730,4.509059,-6.474842,-4.525886,-2.781224,-9.844364,4.149836,2.687179,5.255933,9.274923,-9.460438,-7.930368,1.965413,8.007351,4.472187,8.736920,5.633872,4.024099,-5.606425,-6.210932,5.072029,-6.605719,9.159360,-8.780223,7.472983,-2.426443,3.490263,-0.022112,-9.111483,1.962015,-8.836750,-7.117372,-5.202410,4.786296,0.678891,8.446742,8.047284,8.153616,7.239652,9.185079,3.964466,-4.517207,-9.536999,9.055801,7.984025,-1.207095,-3.541902,4.722973,-1.261184,3.960460,-0.447560,7.229472,-1.949576,3.013055,-8.695245,3.028872,-3.569204,9.485471,-1.461546,1.444010,1.852638,9.628989,-8.900283,-8.625090,-1.803481,-2.879188,5.941933,-1.038103,-5.460916,4.726868,-4.521383,-2.716748,8.213853,5.659814,-9.046637,2.620365,-2.081369,5.418924,0.036035,4.329397,-7.070830,7.144631,2.878288,7.399146,8.694157,9.848323,0.235229,-1.610432,5.551472,9.687017,-0.734503,5.476973,6.579218,6.668554,6.877932,-5.143196,-2.596629,7.312709,4.007473,4.694159,9.834844,-4.286011,-4.885320,7.699894,-1.189271,3.741885,0.685527,2.567417,-8.723650,-4.559101,-3.701984,3.296644,-2.714088,-6.386838,1.392775,-5.787691,-2.698799,-3.284519,5.771692,-1.006205,-3.117301,-8.938291,2.066629,-4.139371,-9.549973,0.904635,-3.901504,4.377356,1.899465,-2.448518,2.603299,9.281049,-6.176914,-3.249803,-0.612212,5.239017,-6.359608,-7.039748,-7.134513,2.479139,2.442831,5.021536,5.860146,-4.938794,-9.168847,-7.668777,2.007128,-1.868856,7.529243,5.612933,5.779378,-2.921129,-8.098560,3.918690,1.063345,6.022252,2.378750,-6.437046,6.041612,3.916974,-4.628293,8.436828,-5.795409,7.704514,-8.971018,0.486995,4.190781,-7.903888,-0.779082,-7.930300,-4.828794,3.196503,-1.609820,6.251327,-4.883374,-6.127637,-1.678860,0.663082,5.161459,-9.849536,7.629778,8.118039,3.649009,3.827869,-2.243419,9.380541,5.147945,-4.765825,7.228736,-0.034660,4.829658,-4.361244,-1.002799,-3.295942,-4.338798,-2.416361,-2.074884,-2.778655,7.806709,1.086661,-5.675510,-5.368984,2.044224,4.428040,-2.576234,3.511548,-9.120599,0.174855,7.232386,-0.326090,-4.524718,0.953228,4.821292,-7.467693,7.243638,-8.593677,8.399238,-1.717264,4.492134,8.970166,3.024387,6.372684,-7.016925,-9.934716,-0.440003,9.930250,0.764596,5.843573,-0.440044,8.012237,-8.769110,2.332717,5.798819,-1.658377,-7.124006,-5.273561,-6.783726,8.448864,1.815842,-3.607268,0.939603,-8.894122,2.080131,7.102035,-9.313151,9.272883,-1.207178,-3.988143,-6.888251,-2.385673,-9.067808,-4.862711,9.835438,0.547110,-8.244427,-8.459075,9.905604,-3.433306,2.782730,-3.881271,9.557841,-7.352852,7.347199,0.680800,8.127178,-4.363293,-5.445097,9.651097,-8.046372,-5.503527,-5.923903,-0.825517,-4.923227,-0.771550,-7.674743,5.306933,0.078501,2.072543,-8.277915,-8.051392,9.100907,7.608253,-5.919121,0.220677,7.108151,9.545833,-9.982956,5.307866,-5.518429,-1.065800,-6.889329,-7.878131,6.079900,-8.647921,-3.338752,-0.441920,0.496250,-3.362918,-5.598288,0.347543,8.712523,2.388192,-5.354617,-2.502438,4.135417,-2.628840,-4.077129,1.502569,-4.618687,7.126568,-2.031715,-6.667512,7.829628,0.867995,-7.469153,7.460085,0.590295,-9.863746,8.613447,7.649694,6.247539,7.004827,-7.557339,-8.064370,-7.535604,-7.741013,1.691569,8.306436,3.460821,-5.886317,7.442087,8.816852,-0.190905,-2.193046,3.493972,-4.538189,5.118512,-5.409915,-0.598894,2.216252,1.009594,-9.472839,-1.560206,7.024403,-9.773770,-5.294413,-9.402983,1.473086,5.403660,-3.376899,6.691253,8.952471,-6.554827,-1.899596,-6.641304,-7.998627,6.356115,-2.333914,-6.038637,1.539972,9.472218,-7.480849,-0.408421,2.654272,8.498166,-4.441312,-5.553890,-6.739710,0.829509,-8.756295,-0.478075,8.156538,9.498257,7.111141,-4.651917,-7.640780,-2.655185,8.743405,-2.142064,-0.721916,-1.886819,-4.871287,3.812172,-7.572611,-8.018537,-9.351805,2.988047,-0.383280,-6.431234,-4.775644,6.105985,-2.584862,8.929670,-4.146236,-6.557185,0.789835,5.738640,-8.426830,-1.053938,1.703457,5.987981,4.746680,-8.581248,9.568864,-4.102017,0.051711,-4.566139,0.231375,2.754785,-5.442715,6.705033,-3.705441,8.755476,7.533567,4.796852,-5.461698,-1.614998,3.247794,-4.412606,6.819408,-2.820815,-9.431552,5.189295,-6.940166,7.605210,-1.635602,0.186601,0.860878,2.834361,-4.515430,4.383739,2.531758,5.373478,-1.304731,0.666784,-8.430388,-3.681761,2.043556,-5.968675,-0.153548,-1.798519,-0.521124,-2.894131,-7.075093,-5.339317,-3.630454,-1.251604,-3.603793,7.747440,3.319010,-1.867521,-6.923911,-7.318489,-6.515038,-2.745469,-3.638407,-7.456096,-7.906042,-8.053111,-4.968653,2.845574,-9.685607,2.439240,7.367650,-8.557174,4.248176,-0.711324,4.585366,5.966121,-0.820843,1.361421,-6.402343,9.099211,-9.231551,-6.454630,4.918262,1.816409,2.158686,-4.899276,6.601139,1.524910,2.795719,5.294614,-1.574826,1.871093,-1.124709,5.903421,-9.619951,6.884624,-9.186546,2.492412,7.607620,6.505569,9.995324,-2.403676], dtype = "float64")#candidate|10889|(1352,)|const|float64
bop_10890 = relay.greater(const_10849.astype('bool'), relay.reshape(const_10889.astype('bool'), relay.shape_of(const_10849))) # shape=(1352,)
func_10630_call = mod.get_global_var('func_10630')
func_10632_call = mutated_mod.get_global_var('func_10632')
call_10897 = relay.TupleGetItem(func_10630_call(relay.reshape(call_10854.astype('float32'), [6, 13, 11])), 2)
call_10898 = relay.TupleGetItem(func_10632_call(relay.reshape(call_10854.astype('float32'), [6, 13, 11])), 2)
bop_10901 = relay.less(bop_10890.astype('bool'), relay.reshape(const_10849.astype('bool'), relay.shape_of(bop_10890))) # shape=(1352,)
bop_10905 = relay.bitwise_or(call_10864.astype('uint16'), relay.reshape(call_10834.astype('uint16'), relay.shape_of(call_10864))) # shape=(715,)
bop_10908 = relay.bitwise_or(call_10865.astype('uint16'), relay.reshape(call_10835.astype('uint16'), relay.shape_of(call_10865))) # shape=(715,)
func_7788_call = mod.get_global_var('func_7788')
func_7790_call = mutated_mod.get_global_var('func_7790')
call_10916 = relay.TupleGetItem(func_7788_call(), 0)
call_10917 = relay.TupleGetItem(func_7790_call(), 0)
bop_10920 = relay.add(bop_10890.astype('int16'), relay.reshape(bop_10901.astype('int16'), relay.shape_of(bop_10890))) # shape=(1352,)
uop_10931 = relay.sin(bop_10901.astype('float32')) # shape=(1352,)
uop_10935 = relay.exp(uop_10931.astype('float64')) # shape=(1352,)
func_3735_call = mod.get_global_var('func_3735')
func_3737_call = mutated_mod.get_global_var('func_3737')
call_10937 = relay.TupleGetItem(func_3735_call(), 1)
call_10938 = relay.TupleGetItem(func_3737_call(), 1)
func_10773_call = mod.get_global_var('func_10773')
func_10774_call = mutated_mod.get_global_var('func_10774')
call_10948 = relay.TupleGetItem(func_10773_call(), 0)
call_10949 = relay.TupleGetItem(func_10774_call(), 0)
func_10630_call = mod.get_global_var('func_10630')
func_10632_call = mutated_mod.get_global_var('func_10632')
call_10950 = relay.TupleGetItem(func_10630_call(relay.reshape(call_10854.astype('float32'), [6, 13, 11])), 2)
call_10951 = relay.TupleGetItem(func_10632_call(relay.reshape(call_10854.astype('float32'), [6, 13, 11])), 2)
func_8621_call = mod.get_global_var('func_8621')
func_8623_call = mutated_mod.get_global_var('func_8623')
var_10961 = relay.var("var_10961", dtype = "int32", shape = (768,))#candidate|10961|(768,)|var|int32
call_10960 = func_8621_call(relay.reshape(var_10961.astype('int32'), [8, 6, 16]))
call_10962 = func_8621_call(relay.reshape(var_10961.astype('int32'), [8, 6, 16]))
bop_10972 = relay.less(call_10948.astype('bool'), relay.reshape(bop_10905.astype('bool'), relay.shape_of(call_10948))) # shape=(715,)
bop_10975 = relay.less(call_10949.astype('bool'), relay.reshape(bop_10908.astype('bool'), relay.shape_of(call_10949))) # shape=(715,)
func_6068_call = mod.get_global_var('func_6068')
func_6069_call = mutated_mod.get_global_var('func_6069')
call_10976 = relay.TupleGetItem(func_6068_call(), 0)
call_10977 = relay.TupleGetItem(func_6069_call(), 0)
output = relay.Tuple([call_10836,var_10837,call_10848,call_10854,call_10862,call_10868,call_10897,call_10916,bop_10920,uop_10935,call_10937,call_10950,call_10960,var_10961,bop_10972,call_10976,])
output2 = relay.Tuple([call_10838,var_10837,call_10850,call_10855,call_10863,call_10869,call_10898,call_10917,bop_10920,uop_10935,call_10938,call_10951,call_10962,var_10961,bop_10975,call_10977,])
func_10989 = relay.Function([var_10837,var_10961,], output)
mod['func_10989'] = func_10989
mod = relay.transform.InferType()(mod)
var_10990 = relay.var("var_10990", dtype = "float32", shape = (144,))#candidate|10990|(144,)|var|float32
var_10991 = relay.var("var_10991", dtype = "int32", shape = (768,))#candidate|10991|(768,)|var|int32
output = func_10989(var_10990,var_10991,)
func_10992 = relay.Function([var_10990,var_10991,], output)
mutated_mod['func_10992'] = func_10992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3966_call = mod.get_global_var('func_3966')
func_3968_call = mutated_mod.get_global_var('func_3968')
call_10998 = relay.TupleGetItem(func_3966_call(), 2)
call_10999 = relay.TupleGetItem(func_3968_call(), 2)
output = relay.Tuple([call_10998,])
output2 = relay.Tuple([call_10999,])
func_11000 = relay.Function([], output)
mod['func_11000'] = func_11000
mod = relay.transform.InferType()(mod)
mutated_mod['func_11000'] = func_11000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11000_call = mutated_mod.get_global_var('func_11000')
call_11001 = func_11000_call()
output = call_11001
func_11002 = relay.Function([], output)
mutated_mod['func_11002'] = func_11002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11055 = relay.var("var_11055", dtype = "float32", shape = (13, 13, 16))#candidate|11055|(13, 13, 16)|var|float32
const_11056 = relay.constdtype = "float32")#candidate|11056|(13, 13, 16)|const|float32
bop_11057 = relay.maximum(var_11055.astype('float32'), relay.reshape(const_11056.astype('float32'), relay.shape_of(var_11055))) # shape=(13, 13, 16)
output = bop_11057
output2 = bop_11057
F = relay.Function([var_11055,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11055,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

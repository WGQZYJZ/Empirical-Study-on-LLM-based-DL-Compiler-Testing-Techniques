==========mod==========
#[version = "0.0.5"]
def @func_744() -> (Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  %0 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %1 = %0.0;
  %2 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %3 = %2.1;
  %4 = cast(%3, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %5 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%1, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = logical_and(%6, %7) /* ty=Tensor[(2, 9, 9), bool] */;
  %9 = cast(%8, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %10 = cast(%1, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %11 = reshape(%9, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %12 = reshape(%10, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %13 = @func_667(%11, %12) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
  %14 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %15 = cast(%1, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %16 = log2(%15) /* ty=Tensor[(2, 9, 9), float64] */;
  %17 = cast(%1, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%16, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %21 = subtract(%19, %20) /* ty=Tensor[(2, 9, 9), uint8] */;
  %22 = cast(%21, dtype="int32") /* ty=Tensor[(2, 9, 9), int32] */;
  %23 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%3, dtype="int32") /* ty=Tensor[(2, 9, 9), int32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %26 = %13.1;
  %27 = %14.1;
  %28 = logical_xor(%24, %25) /* ty=Tensor[(2, 9, 9), int32] */;
  (%8, %26, %27, %28)
}

def @func_8367() -> (Tensor[(2, 9, 9), int32],) {
  %29 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
  %30 = %29.1;
  (%30,)
}

def @func_3676() -> (Tensor[(2, 9, 9), float64],) {
  %31 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
  (%31,)
}

def @func_5296() -> (Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) {
  %32 = @func_5100() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %33 = @func_1966() /* ty=(Tensor[(7, 14), float32],) */;
  %34 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %35 = %34.0;
  %36 = cast(%35, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %37 = cos(%36) /* ty=Tensor[(2, 9, 9), float64] */;
  %38 = cast(%35, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %42 = cast(%37, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %43 = cast(%37, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %44 = reshape(%42, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %45 = reshape(%43, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %46 = @func_667(%44, %45) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
  %47 = %32.0;
  %48 = %33.0;
  %49 = mod(%40, %41) /* ty=Tensor[(2, 9, 9), float32] */;
  %50 = %46.4;
  %51 = @func_4840() /* ty=Tensor[(2, 9, 9), float64] */;
  (%47, %48, %49, %50, %51)
}

def @func_1546() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) {
  %52 = cast(meta[relay.Constant][0] /* ty=Tensor[(98), float32] */, dtype="float32") /* ty=Tensor[(98), float32] */;
  %53 = reshape(%52, newshape=[7, 14]) /* ty=Tensor[(7, 14), float32] */;
  %54 = @func_1439(%53) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32]) */;
  %55 = @func_1494() /* ty=Tensor[(2, 9, 9), float64] */;
  %56 = %54.2;
  (%55, %56, meta[relay.Constant][0] /* ty=Tensor[(98), float32] */)
}

def @func_4456() -> Tensor[(7, 14), float32] {
  %57 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
  %57.0
}

def @func_10798() -> (Tensor[(7, 7, 2), float32],) {
  %58 = @func_8995() /* ty=(Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) */;
  %59 = %58.2;
  (%59,)
}

def @func_1904() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  %60 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %61 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %62 = cast(meta[relay.Constant][1] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %63 = reshape(%62, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %64 = @func_1209(%63) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */;
  %65 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %66 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %67 = cast(meta[relay.Constant][1] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %68 = reshape(%67, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %69 = @func_982(%68) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */;
  %70 = %60.1;
  %71 = %61.0;
  %72 = %64.0;
  %73 = %65.0;
  %74 = %66.1;
  %75 = %69.0;
  (%70, %71, %72, meta[relay.Constant][1] /* ty=Tensor[(105), float64] */, %73, %74, %75)
}

def @func_3498() -> (Tensor[(2, 9, 9), int32],) {
  %76 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  (%76,)
}

def @func_2085(%var_2080: Tensor[(60), uint16]) -> (Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(169, 14), float32], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) {
  %77 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %78 = %77.1;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
  %80 = reshape(%79, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
  %81 = @func_792(%80) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
  %82 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %83 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %84 = cast(meta[relay.Constant][2] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
  %86 = reshape(%84, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
  %87 = reshape(%85, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
  %88 = @func_1024(%86, %87) /* ty=(Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) */;
  %89 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %90 = cast(meta[relay.Constant][2] /* ty=Tensor[(169, 14), uint8] */, dtype="float64") /* ty=Tensor[(169, 14), float64] */;
  %91 = erf(%90) /* ty=Tensor[(169, 14), float64] */;
  %92 = cast(%91, dtype="float32") /* ty=Tensor[(169, 14), float32] */;
  %93 = cast(%var_2080, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %94 = cast(%var_2080, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %95 = reshape(%93, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %96 = reshape(%94, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %97 = @func_1237(%95, %96) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %98 = %81.1;
  %99 = %82.0;
  %100 = @func_1494() /* ty=Tensor[(2, 9, 9), float64] */;
  %101 = %83.3;
  %102 = %88.0;
  %103 = %89.0;
  %104 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %105 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %106 = log(%92) /* ty=Tensor[(169, 14), float32] */;
  %107 = %97.0;
  (%78, %98, %99, %100, %101, %102, %103, %104, %105, %106, %107, %var_2080)
}

def @func_438() -> Tensor[(2, 9, 9), float64] {
  %108 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %108.1
}

def @func_7113() -> Tensor[(7, 14), float32] {
  @func_4456() /* ty=Tensor[(7, 14), float32] */
}

def @func_7874() -> Tensor[(2, 9, 9), float64] {
  @func_1726() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_8300() -> (Tensor[(2, 9, 9), float64],) {
  %109 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  (%109,)
}

def @func_10160() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), uint8]) {
  %110 = @func_8397() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %111 = @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
  %112 = %110.0;
  %113 = %111.0;
  (%112, %113)
}

def @main() -> (Tensor[(10, 6, 7), float64],) {
  %114 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  %115 = sinh(%114) /* ty=Tensor[(10, 6, 7), float64] */;
  (%115,)
}

def @func_7320() -> (Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(105), float64]) {
  %116 = @func_5296() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) */;
  %117 = cast(meta[relay.Constant][4] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %118 = reshape(%117, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %119 = @func_5958(%118) /* ty=(Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %120 = %116.1;
  %121 = %119.0;
  (%120, %121, meta[relay.Constant][4] /* ty=Tensor[(105), float64] */)
}

def @func_1237(%var_1227: Tensor[(5, 3, 4), uint16], %var_1228: Tensor[(5, 3, 4), uint16]) -> (Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) {
  %122 = cast(%var_1228, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %123 = shape_of(%var_1227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%var_1227, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %127 = reshape(%126, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %128 = @func_963(%127) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
  %129 = greater(%124, %125) /* ty=Tensor[(5, 3, 4), bool] */;
  %130 = %128.1;
  (%129, %130, meta[relay.Constant][5] /* ty=Tensor[(105), float64] */)
}

def @func_6208(%var_6164: Tensor[(2, 9, 9), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  %131 = @func_4882() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %132 = %131.0;
  %133 = cast(%var_6164, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%132, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %137 = floor_divide(%135, %136) /* ty=Tensor[(2, 9, 9), float64] */;
  %138 = @func_3564() /* ty=Tensor[(2, 9, 9), float32] */;
  (%137, %138)
}

def @func_413() -> (Tensor[(2, 9, 9), uint8],) {
  %139 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %140 = %139.0;
  %141 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 9, 9), float32] */, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %142 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%140, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %145 = bitwise_xor(%143, %144) /* ty=Tensor[(2, 9, 9), uint8] */;
  (%145,)
}

def @func_1648() -> Tensor[(2, 9, 9), int32] {
  %146 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %146.3
}

def @func_6106() -> Tensor[(2, 9, 9), float64] {
  %147 = @func_3794() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %147.0
}

def @func_4127() -> (Tensor[(2, 9, 9), int32],) {
  %148 = @func_3498() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %149 = %148.0;
  (%149,)
}

def @func_6270(%var_6255: Tensor[(105), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64], Tensor[(2, 9, 9), uint8]) {
  %150 = @func_4907() /* ty=Tensor[(7, 7, 2), float32] */;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(7, 7, 2), float64] */;
  %152 = asinh(%151) /* ty=Tensor[(7, 7, 2), float64] */;
  %153 = cast(%152, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
  %154 = cast(%var_6255, dtype="float64") /* ty=Tensor[(105), float64] */;
  %155 = reshape(%154, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %156 = @func_963(%155) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
  %157 = @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
  %158 = atan(%153) /* ty=Tensor[(7, 7, 2), float32] */;
  %159 = %156.2;
  %160 = %157.0;
  (%158, %159, %var_6255, %160)
}

def @func_8094() -> Tensor[(2, 9, 9), float64] {
  %161 = @func_6350() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %161.0
}

def @func_3381() -> (Tensor[(2, 9, 9), float64],) {
  %162 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %163 = %162.0;
  (%163,)
}

def @func_2953(%var_2922: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float64], Tensor[(60), uint16], Tensor[(7, 7, 2), float32]) {
  %164 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %165 = %164.1;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %167 = cast(%var_2922, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %168 = cast(%var_2922, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %169 = reshape(%167, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %170 = reshape(%168, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %171 = @func_1237(%169, %170) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %172 = @func_2477() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %173 = acosh(%166) /* ty=Tensor[(2, 9, 9), float32] */;
  %174 = %171.1;
  %175 = %172.0;
  (%173, %174, %var_2922, %175)
}

def @func_6856() -> Tensor[(2, 9, 9), float32] {
  @func_4822() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_11049(%var_11036: Tensor[(7, 7, 2), float32], %var_11045: Tensor[(105, 1), float64]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), int16], Tensor[(2, 9, 9), uint8], Tensor[(105, 1), float64]) {
  %176 = @func_8138() /* ty=(Tensor[(7, 7, 2), bool], Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32]) */;
  %177 = %176.2;
  %178 = cast(%var_11036, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
  %179 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%177, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %182 = cast(%var_11045, dtype="float64") /* ty=Tensor[(105, 1), float64] */;
  %183 = reshape(%182, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %184 = @func_6270(%183) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64], Tensor[(2, 9, 9), uint8]) */;
  %185 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %186 = multiply(%180, %181) /* ty=Tensor[(7, 7, 2), int16] */;
  %187 = %184.3;
  (%185, %186, %187, %var_11045)
}

def @func_7387() -> Tensor[(2, 9, 9), float64] {
  @func_6881() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_10632() -> Tensor[(2, 9, 9), float32] {
  %188 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
  %188.0
}

def @func_1726() -> Tensor[(2, 9, 9), float64] {
  %189 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %189.0
}

def @func_9429() -> Tensor[(2, 9, 9), float64] {
  @func_438() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_10283() -> (Tensor[(2, 9, 9), int32],) {
  %190 = @func_7794() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %191 = %190.2;
  (%191,)
}

def @func_5826(%var_5810: Tensor[(15, 11, 1), float32]) -> Tensor[(15, 11, 1), float32] {
  %192 = cast(%var_5810, dtype="float32") /* ty=Tensor[(15, 11, 1), float32] */;
  %193 = cos(%192) /* ty=Tensor[(15, 11, 1), float32] */;
  %194 = cast(%193, dtype="float64") /* ty=Tensor[(15, 11, 1), float64] */;
  %195 = acosh(%194) /* ty=Tensor[(15, 11, 1), float64] */;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(15, 11, 1), float32] */;
  log2(%196) /* ty=Tensor[(15, 11, 1), float32] */
}

def @func_3625(%var_3615: Tensor[(6, 7, 16), float64]) -> (Tensor[(6, 7, 16), float64],) {
  %197 = cast(%var_3615, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %198 = rsqrt(%197) /* ty=Tensor[(6, 7, 16), float64] */;
  (%198,)
}

def @func_5734() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) {
  %199 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %200 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %201 = %199.0;
  %202 = %200.0;
  (%201, %202)
}

def @func_8397() -> (Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  %203 = @func_7225() /* ty=(Tensor[(7, 14), float32], Tensor[(21, 5), float64]) */;
  %204 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %205 = %203.1;
  (%204, %205)
}

def @func_9380() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) {
  %206 = @func_6284() /* ty=(Tensor[(7, 14), float32],) */;
  %207 = @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %208 = @func_7975() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %209 = @func_3648() /* ty=Tensor[(2, 9, 9), float64] */;
  %210 = %206.0;
  %211 = %207.0;
  %212 = %208.0;
  (%209, %210, %211, %212)
}

def @func_9583() -> Tensor[(2, 9, 9), float64] {
  @func_7874() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_7269() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) {
  %213 = @func_5785() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %214 = @func_3381() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %215 = %213.0;
  %216 = @func_2320() /* ty=Tensor[(2, 9, 9), bool] */;
  %217 = %214.0;
  (%215, %216, %217)
}

def @func_1397() -> (Tensor[(2, 9, 9), float32],) {
  %218 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %219 = %218.0;
  %220 = cast(%219, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %221 = tan(%220) /* ty=Tensor[(2, 9, 9), float32] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %223 = shape_of(%219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%219, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %226 = divide(%224, %225) /* ty=Tensor[(2, 9, 9), float32] */;
  (%226,)
}

def @func_6546() -> (Tensor[(7, 7, 2), float32],) {
  %227 = @func_4907() /* ty=Tensor[(7, 7, 2), float32] */;
  (%227,)
}

def @func_2803(%var_2777: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), uint8], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) {
  %228 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %229 = cast(%var_2777, dtype="float64") /* ty=Tensor[(105), float64] */;
  %230 = reshape(%229, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %231 = @func_1209(%230) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */;
  %232 = %228.0;
  %233 = %231.1;
  (%232, %233, %var_2777)
}

def @func_6658() -> (Tensor[(2, 9, 9), int32],) {
  %234 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %235 = %234.0;
  (%235,)
}

def @func_10715() -> (Tensor[(2, 9, 9), float64],) {
  %236 = @func_6406() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %237 = %236.1;
  (%237,)
}

def @func_3089(%var_3057: Tensor[(4, 5, 7), int8]) -> (Tensor[(4, 5, 7), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float32], Tensor[(2, 9, 9), float64]) {
  %238 = cast(meta[relay.Constant][7] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %239 = cast(%var_3057, dtype="bool") /* ty=Tensor[(4, 5, 7), bool] */;
  %240 = not_equal(%238, %239) /* ty=Tensor[(4, 5, 7), bool] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %242 = cast(meta[relay.Constant][8] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %243 = reshape(%242, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float32] */;
  %244 = atan(%241) /* ty=Tensor[(4, 5, 7), float32] */;
  %245 = @func_2594(%243) /* ty=Tensor[(7, 3, 5), float32] */;
  %246 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  (%244, %245, meta[relay.Constant][8] /* ty=Tensor[(105), float32] */, %246)
}

def @func_3547() -> (Tensor[(7, 14), float32], Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), int32]) {
  %247 = cast(meta[relay.Constant][9] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %248 = reshape(%247, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %249 = @func_856(%248) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
  %250 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
  %251 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %252 = %249.0;
  %253 = %250.1;
  (%251, %252, meta[relay.Constant][9] /* ty=Tensor[(21, 5), float64] */, %253)
}

def @func_6720() -> (Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) {
  %254 = @func_3676() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %255 = @func_6047() /* ty=Tensor[(21, 5), float64] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %257 = %254.0;
  %258 = asin(%256) /* ty=Tensor[(21, 5), float64] */;
  (%257, %258)
}

def @func_7518() -> (Tensor[(1, 16, 9), float32],) {
  %259 = @func_4168() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */;
  %260 = %259.0;
  (%260,)
}

def @func_4219() -> (Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) {
  %261 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %263 = @func_2477() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %264 = sigmoid(%262) /* ty=Tensor[(2, 9, 9), float32] */;
  %265 = %263.0;
  (%264, %265)
}

def @func_4736(%var_4716: Tensor[(336, 2), float64]) -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(6, 7, 16), float64], Tensor[(336, 2), float64]) {
  %266 = @func_3794() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %267 = %266.0;
  %268 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 9, 9), float64] */, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %272 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %273 = cast(%var_4716, dtype="float64") /* ty=Tensor[(336, 2), float64] */;
  %274 = reshape(%273, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %275 = @func_3625(%274) /* ty=(Tensor[(6, 7, 16), float64],) */;
  %276 = not_equal(%270, %271) /* ty=Tensor[(2, 9, 9), bool] */;
  %277 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %278 = %272.0;
  %279 = %275.0;
  (%276, %277, %278, %279, %var_4716)
}

def @func_6764(%var_6761: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64],) {
  %280 = cast(%var_6761, dtype="float64") /* ty=Tensor[(1, 12, 6), float64] */;
  %281 = atan(%280) /* ty=Tensor[(1, 12, 6), float64] */;
  (%281,)
}

def @func_7975() -> (Tensor[(2, 9, 9), float64],) {
  %282 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  (%282,)
}

def @func_1154() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  %283 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %284 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %285 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %286 = %283.0;
  %287 = %284.0;
  %288 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  (%285, %286, %287, %288)
}

def @func_6406() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %289 = @func_3381() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %290 = @func_1799() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %291 = %289.0;
  %292 = %290.0;
  (%291, %292)
}

def @func_4882() -> (Tensor[(2, 9, 9), float32],) {
  %293 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
  %294 = %293.0;
  (%294,)
}

def @func_5929() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8]) {
  %295 = @func_4168() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */;
  %296 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %297 = @func_3648() /* ty=Tensor[(2, 9, 9), float64] */;
  %298 = %295.1;
  (%296, %297, %298)
}

def @func_6881() -> Tensor[(2, 9, 9), float64] {
  %299 = @func_5296() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) */;
  %299.4
}

def @func_9242(%var_9232: Tensor[(168, 4), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 3, 5), bool], Tensor[(105, 1), float64], Tensor[(2, 9, 9), float64], Tensor[(60), uint16], Tensor[(336, 2), float64], Tensor[(168, 4), float64]) {
  %300 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %301 = cast(meta[relay.Constant][11] /* ty=Tensor[(105, 1), float64] */, dtype="float64") /* ty=Tensor[(105, 1), float64] */;
  %302 = reshape(%301, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %303 = @func_856(%302) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
  %304 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %305 = reshape(%304, newshape=[60]) /* ty=Tensor[(60), uint16] */;
  %306 = @func_5632(%305) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) */;
  %307 = cast(%var_9232, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %308 = reshape(%307, newshape=[336, 2]) /* ty=Tensor[(336, 2), float64] */;
  %309 = @func_4736(%308) /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(6, 7, 16), float64], Tensor[(336, 2), float64]) */;
  %310 = @func_8243() /* ty=Tensor[(7, 7, 2), float32] */;
  %311 = %300.0;
  %312 = %303.0;
  %313 = %306.0;
  %314 = %309.4;
  (%310, %311, %312, meta[relay.Constant][11] /* ty=Tensor[(105, 1), float64] */, %313, meta[relay.Constant][12] /* ty=Tensor[(60), uint16] */, %314, %var_9232)
}

def @func_11066() -> Tensor[(2, 9, 9), float64] {
  %315 = @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %315.2
}

def @func_5446(%var_5396: Tensor[(7, 15), float64], %var_5424: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) {
  %316 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %318 = cast(meta[relay.Constant][13] /* ty=Tensor[(468), uint64] */, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %319 = cast(meta[relay.Constant][13] /* ty=Tensor[(468), uint64] */, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %320 = reshape(%318, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint64] */;
  %321 = reshape(%319, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint64] */;
  %322 = @func_3695(%320, %321) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(2, 9, 9), float64]) */;
  %323 = cast(%var_5396, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %324 = reshape(%323, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %325 = @func_2803(%324) /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %326 = cast(%var_5424, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %327 = cast(%var_5424, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %328 = reshape(%326, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %329 = reshape(%327, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %330 = @func_1237(%328, %329) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %331 = %330.0;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
  %333 = sqrt(%317) /* ty=Tensor[(2, 9, 9), float64] */;
  %334 = %322.0;
  %335 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %336 = %325.0;
  %337 = @func_3591() /* ty=Tensor[(7, 14), float32] */;
  %338 = sinh(%332) /* ty=Tensor[(5, 3, 4), float32] */;
  (%333, %334, meta[relay.Constant][13] /* ty=Tensor[(468), uint64] */, %335, %336, %var_5396, %var_5424, %337, %338)
}

def @func_6617(%var_6574: Tensor[(14, 11, 13), float32], %var_6602: Tensor[(14, 11, 13), float32]) -> (Tensor[(14, 11, 13), float32], Tensor[(14, 11, 13), float64], Tensor[(14, 11, 13), bool], Tensor[(2, 9, 9), float32]) {
  %339 = cast(%var_6574, dtype="float32") /* ty=Tensor[(14, 11, 13), float32] */;
  %340 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(14, 11, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 13), float32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %343 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 11, 13), float32] */, dtype="float64") /* ty=Tensor[(14, 11, 13), float64] */;
  %344 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(14, 11, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 11, 13), float32] */, dtype="float64") /* ty=Tensor[(14, 11, 13), float64] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %347 = cast(%var_6602, dtype="bool") /* ty=Tensor[(14, 11, 13), bool] */;
  %348 = shape_of(%var_6574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_6574, dtype="bool") /* ty=Tensor[(14, 11, 13), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %351 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %352 = divide(%341, %342) /* ty=Tensor[(14, 11, 13), float32] */;
  %353 = mod(%345, %346) /* ty=Tensor[(14, 11, 13), float64] */;
  %354 = logical_or(%349, %350) /* ty=Tensor[(14, 11, 13), bool] */;
  %355 = %351.0;
  (%352, %353, %354, %355)
}

def @func_2565(%var_2482: Tensor[(11, 15, 5), int16], %var_2483: Tensor[(11, 15, 5), int16], %var_2491: Tensor[(7, 15), float64], %var_2494: Tensor[(4, 252), int64]) -> (Tensor[(11, 15, 5), int16], Tensor[(105), float64], Tensor[(7, 15), float64], Tensor[(12, 7, 12), int64], Tensor[(4, 252), int64], Tensor[(2, 9, 9), int32], Tensor[(105), float64], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32]) {
  %356 = cast(%var_2483, dtype="int16") /* ty=Tensor[(11, 15, 5), int16] */;
  %357 = shape_of(%var_2482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_2482, dtype="int16") /* ty=Tensor[(11, 15, 5), int16] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %360 = cast(%var_2491, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %361 = reshape(%360, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %362 = @func_963(%361) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
  %363 = cast(%var_2494, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
  %364 = cast(%var_2494, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
  %365 = reshape(%363, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
  %366 = reshape(%364, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
  %367 = %362.0;
  %368 = cast(%367, dtype="float64") /* ty=Tensor[(105), float64] */;
  %369 = reshape(%368, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %370 = @func_1209(%369) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */;
  %371 = cast(%367, dtype="float64") /* ty=Tensor[(105), float64] */;
  %372 = reshape(%371, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %373 = @func_963(%372) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
  %374 = add(%358, %359) /* ty=Tensor[(11, 15, 5), int16] */;
  %375 = @func_1576(%365, %366) /* ty=Tensor[(12, 7, 12), int64] */;
  %376 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  %377 = %370.2;
  %378 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  %379 = %373.2;
  (%374, %367, %var_2491, %375, %var_2494, %376, %377, %378, %379)
}

def @func_8995() -> (Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) {
  %380 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %381 = @func_6479() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 14), float32]) */;
  %382 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %383 = @func_4618() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) */;
  %384 = %380.0;
  %385 = %381.1;
  %386 = %382.0;
  %387 = %383.1;
  (%384, %385, %386, %387)
}

def @func_8073(%var_8045: uint16) -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(7, 14), float32], uint16, Tensor[(462), uint16], Tensor[(7, 3, 5), float64], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32]) {
  %388 = @func_6068() /* ty=(Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) */;
  %389 = @func_4053() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %390 = cast(%var_8045, dtype="uint16") /* ty=uint16 */;
  %391 = cast(meta[relay.Constant][16] /* ty=Tensor[(462), uint16] */, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %392 = reshape(%390, newshape=[]) /* ty=uint16 */;
  %393 = reshape(%391, newshape=[462]) /* ty=Tensor[(462), uint16] */;
  %394 = @func_7939(%392, %393) /* ty=(Tensor[(7, 14), float32], Tensor[(7, 6, 11), uint16], uint16, Tensor[(462), uint16]) */;
  %395 = cast(meta[relay.Constant][17] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %396 = reshape(%395, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %397 = @func_963(%396) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
  %398 = @func_3676() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %399 = @func_6284() /* ty=(Tensor[(7, 14), float32],) */;
  %400 = %388.1;
  %401 = %389.0;
  %402 = @func_3591() /* ty=Tensor[(7, 14), float32] */;
  %403 = %394.0;
  %404 = %397.1;
  %405 = %398.0;
  %406 = %399.0;
  (%400, %401, %402, %403, %var_8045, meta[relay.Constant][16] /* ty=Tensor[(462), uint16] */, %404, meta[relay.Constant][17] /* ty=Tensor[(21, 5), float64] */, %405, %406)
}

def @func_963(%var_943: Tensor[(105), float64]) -> (Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) {
  %407 = cast(%var_943, dtype="float64") /* ty=Tensor[(105), float64] */;
  %408 = reshape(%407, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %409 = @func_856(%408) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
  %410 = %409.0;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %412 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %413 = %412.0;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %415 = cosh(%411) /* ty=Tensor[(7, 3, 5), float64] */;
  %416 = atanh(%414) /* ty=Tensor[(2, 9, 9), float32] */;
  (%var_943, %415, %416)
}

def @func_1494() -> Tensor[(2, 9, 9), float64] {
  %417 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %417.2
}

def @func_9261() -> (Tensor[(2, 9, 9), float64],) {
  %418 = @func_2181() /* ty=Tensor[(2, 9, 9), float64] */;
  (%418,)
}

def @func_3188() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) {
  %419 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %420 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  (%419, %420)
}

def @func_3148(%var_3129: Tensor[(55, 15), int16], %var_3131: Tensor[(1008), int64]) -> (Tensor[(98), float32], Tensor[(98), float32], Tensor[(105), float64], Tensor[(55, 15), int16], Tensor[(105), float64], Tensor[(1008), int64]) {
  %421 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %422 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %423 = cast(%var_3129, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
  %424 = cast(%var_3129, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
  %425 = cast(meta[relay.Constant][18] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %426 = cast(%var_3131, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %427 = reshape(%423, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), int16] */;
  %428 = reshape(%424, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), int16] */;
  %429 = reshape(%425, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %430 = reshape(%426, newshape=[4, 252]) /* ty=Tensor[(4, 252), int64] */;
  %431 = @func_2565(%427, %428, %429, %430) /* ty=(Tensor[(11, 15, 5), int16], Tensor[(105), float64], Tensor[(7, 15), float64], Tensor[(12, 7, 12), int64], Tensor[(4, 252), int64], Tensor[(2, 9, 9), int32], Tensor[(105), float64], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32]) */;
  %432 = %421.2;
  %433 = %422.2;
  %434 = %431.6;
  (%432, %433, %434, %var_3129, meta[relay.Constant][18] /* ty=Tensor[(105), float64] */, %var_3131)
}

def @func_10441() -> (Tensor[(2, 9, 9), float64],) {
  %435 = @func_7794() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %436 = %435.1;
  (%436,)
}

def @func_9515(%var_9506: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64]) {
  %437 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %438 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %439 = cast(%var_9506, dtype="float64") /* ty=Tensor[(105), float64] */;
  %440 = reshape(%439, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %441 = @func_7672(%440) /* ty=(Tensor[(7, 14), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float32], Tensor[(21, 5), bool]) */;
  %442 = %437.4;
  %443 = %438.0;
  %444 = %441.2;
  (%442, %443, %444, %var_9506)
}

def @func_3794() -> (Tensor[(2, 9, 9), float64],) {
  %445 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %446 = %445.0;
  (%446,)
}

def @func_1799() -> (Tensor[(2, 9, 9), float64],) {
  %447 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %448 = %447.2;
  (%448,)
}

def @func_4566() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(7, 3, 5), float32]) {
  %449 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %450 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %451 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %452 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %453 = reshape(%451, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %454 = reshape(%452, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %455 = @func_1237(%453, %454) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %456 = %455.1;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
  %458 = %449.0;
  %459 = %450.0;
  %460 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %461 = acosh(%457) /* ty=Tensor[(7, 3, 5), float32] */;
  (%458, %459, %460, meta[relay.Constant][19] /* ty=Tensor[(60), uint16] */, %461)
}

def @func_11140() -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %462 = @func_4882() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %463 = @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */;
  %464 = @func_2320() /* ty=Tensor[(2, 9, 9), bool] */;
  %465 = %462.0;
  %466 = @func_6106() /* ty=Tensor[(2, 9, 9), float64] */;
  %467 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %468 = %463.0;
  (%464, %465, %466, %467, %468)
}

def @func_667(%var_608: Tensor[(2, 9, 9), float64], %var_663: Tensor[(2, 9, 9), float64]) -> (Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) {
  %469 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %470 = %469.0;
  %471 = cast(%var_608, dtype="int64") /* ty=Tensor[(2, 9, 9), int64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="int64") /* ty=Tensor[(2, 9, 9), int64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %475 = cast(meta[relay.Constant][20] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %476 = cast(meta[relay.Constant][20] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %477 = reshape(%475, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %478 = reshape(%476, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %479 = @func_561(%477, %478) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %480 = cast(%var_608, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %481 = asin(%480) /* ty=Tensor[(2, 9, 9), float32] */;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %483 = asinh(%482) /* ty=Tensor[(2, 9, 9), float64] */;
  %484 = cast(%var_663, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = bitwise_or(%473, %474) /* ty=Tensor[(2, 9, 9), int64] */;
  %489 = %479.1;
  %490 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  %491 = greater_equal(%486, %487) /* ty=Tensor[(2, 9, 9), bool] */;
  (%488, %489, meta[relay.Constant][20] /* ty=Tensor[(105), float64] */, %490, %491)
}

def @func_7016() -> Tensor[(7, 7, 2), float32] {
  %492 = @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %492.0
}

def @func_4019() -> (Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) {
  %493 = cast(meta[relay.Constant][21] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %494 = reshape(%493, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %495 = @func_856(%494) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
  %496 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
  %497 = %495.1;
  (%496, %497, meta[relay.Constant][21] /* ty=Tensor[(105), float64] */)
}

def @func_3564() -> Tensor[(2, 9, 9), float32] {
  @func_922() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_6047() -> Tensor[(21, 5), float64] {
  %498 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
  %498.1
}

def @func_9269() -> Tensor[(2, 9, 9), float64] {
  @func_1726() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_5958(%var_5950: Tensor[(21, 5), float64]) -> (Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  %499 = @func_4566() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(7, 3, 5), float32]) */;
  %500 = cast(%var_5950, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %501 = reshape(%500, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %502 = @func_982(%501) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */;
  %503 = %499.3;
  %504 = %502.0;
  (%503, %504, %var_5950)
}

def @func_9815(%var_9805: Tensor[(686), bool]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) {
  %505 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
  %506 = cast(%var_9805, dtype="bool") /* ty=Tensor[(686), bool] */;
  %507 = reshape(%506, newshape=[686]) /* ty=Tensor[(686), bool] */;
  %508 = @func_6036(%507) /* ty=(Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) */;
  %509 = %505.1;
  %510 = %508.0;
  (%509, %510, %var_9805)
}

def @func_5522(%var_5492: uint16, %var_5493: Tensor[(7, 6, 11), uint16]) -> (Tensor[(7, 6, 11), uint16],) {
  %511 = cast(%var_5492, dtype="uint16") /* ty=uint16 */;
  %512 = cast(%var_5493, dtype="uint16") /* ty=Tensor[(7, 6, 11), uint16] */;
  %513 = subtract(%511, %512) /* ty=Tensor[(7, 6, 11), uint16] */;
  (%513,)
}

def @func_10954(%var_10928: Tensor[(21, 5), float64]) -> (Tensor[(21, 5), bool], Tensor[(2, 9, 9), float64]) {
  %514 = @func_6047() /* ty=Tensor[(21, 5), float64] */;
  %515 = cast(%var_10928, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(2), int32] */;
  %517 = cast(%514, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %519 = @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */;
  %520 = greater_equal(%517, %518) /* ty=Tensor[(21, 5), bool] */;
  %521 = %519.0;
  (%520, %521)
}

def @func_4168() -> (Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) {
  %522 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
  %523 = @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %524 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
  %525 = cos(%522) /* ty=Tensor[(1, 16, 9), float32] */;
  %526 = %523.1;
  %527 = %524.1;
  %528 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
  (%525, %526, %527, %528)
}

def @func_4053() -> (Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  %529 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
  %530 = @func_3564() /* ty=Tensor[(2, 9, 9), float32] */;
  %531 = %529.1;
  (%530, %531)
}

def @func_261() -> (Tensor[(2, 9, 9), float32],) {
  %532 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %533 = acos(%532) /* ty=Tensor[(2, 9, 9), float32] */;
  (%533,)
}

def @func_3648() -> Tensor[(2, 9, 9), float64] {
  @func_2181() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_982(%var_972: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) {
  %534 = cast(%var_972, dtype="float64") /* ty=Tensor[(105), float64] */;
  %535 = cast(%var_972, dtype="float64") /* ty=Tensor[(105), float64] */;
  %536 = reshape(%534, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %537 = reshape(%535, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %538 = @func_561(%536, %537) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %539 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %540 = %538.1;
  (%539, %540, %var_972)
}

def @func_2857() -> Tensor[(2, 9, 9), float64] {
  @func_338() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_10371() -> (Tensor[(2, 9, 9), int32],) {
  %541 = @func_6658() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %542 = %541.0;
  (%542,)
}

def @func_561(%var_516: Tensor[(7, 3, 5), float64], %var_552: Tensor[(7, 3, 5), float64]) -> (Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) {
  %543 = cast(%var_516, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %544 = cast(%var_516, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %545 = asinh(%544) /* ty=Tensor[(7, 3, 5), float64] */;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %547 = sigmoid(%546) /* ty=Tensor[(7, 3, 5), float64] */;
  %548 = cast(%var_516, dtype="uint64") /* ty=Tensor[(7, 3, 5), uint64] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="uint64") /* ty=Tensor[(7, 3, 5), uint64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %552 = bitwise_xor(%550, %551) /* ty=Tensor[(7, 3, 5), uint64] */;
  %553 = cast(%552, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
  %554 = cast(%var_552, dtype="bool") /* ty=Tensor[(7, 3, 5), bool] */;
  %555 = shape_of(%var_516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%var_516, dtype="bool") /* ty=Tensor[(7, 3, 5), bool] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %558 = acos(%543) /* ty=Tensor[(7, 3, 5), float64] */;
  %559 = exp(%553) /* ty=Tensor[(7, 3, 5), float32] */;
  %560 = less(%556, %557) /* ty=Tensor[(7, 3, 5), bool] */;
  (%558, %559, %560)
}

def @func_6068() -> (Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) {
  %561 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
  %562 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %563 = %561.0;
  %564 = %562.0;
  (%563, %564)
}

def @func_6036(%var_6029: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) {
  %565 = @func_4289() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %566 = cast(%var_6029, dtype="bool") /* ty=Tensor[(686), bool] */;
  %567 = reshape(%566, newshape=[686]) /* ty=Tensor[(686), bool] */;
  %568 = @func_4397(%567) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) */;
  %569 = %565.0;
  %570 = %568.1;
  (%569, %570, %var_6029)
}

def @func_5667() -> (Tensor[(2, 9, 9), int32],) {
  %571 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %572 = %571.0;
  (%572,)
}

def @func_4840() -> Tensor[(2, 9, 9), float64] {
  @func_1494() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_7002() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) {
  %573 = @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
  %574 = %573.0;
  %575 = @func_3758() /* ty=Tensor[(2, 9, 9), float64] */;
  (%574, %575)
}

def @func_3525() -> Tensor[(2, 9, 9), float64] {
  %576 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %576.0
}

def @func_6350() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %577 = @func_5609() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */;
  %578 = %577.1;
  %579 = @func_6106() /* ty=Tensor[(2, 9, 9), float64] */;
  (%578, %579)
}

def @func_856(%var_845: Tensor[(21, 5), float64]) -> (Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) {
  %580 = cast(%var_845, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %581 = cast(%var_845, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %582 = reshape(%580, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %583 = reshape(%581, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %584 = @func_561(%582, %583) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %585 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %586 = %585.0;
  %587 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %588 = %587.0;
  %589 = cast(%588, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %590 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%586, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = %584.2;
  %594 = logical_or(%591, %592) /* ty=Tensor[(2, 9, 9), bool] */;
  (%593, %var_845, %594)
}

def @func_5785() -> (Tensor[(2, 9, 9), uint8],) {
  %595 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %596 = %595.0;
  (%596,)
}

def @func_7939(%var_7918: uint16, %var_7919: Tensor[(462), uint16]) -> (Tensor[(7, 14), float32], Tensor[(7, 6, 11), uint16], uint16, Tensor[(462), uint16]) {
  %597 = cast(%var_7918, dtype="uint16") /* ty=uint16 */;
  %598 = cast(%var_7919, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %599 = reshape(%597, newshape=[]) /* ty=uint16 */;
  %600 = reshape(%598, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint16] */;
  %601 = @func_5522(%599, %600) /* ty=(Tensor[(7, 6, 11), uint16],) */;
  %602 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %603 = %601.0;
  (%602, %603, %var_7918, %var_7919)
}

def @func_1576(%var_1571: Tensor[(12, 7, 12), int64], %var_1572: Tensor[(12, 7, 12), int64]) -> Tensor[(12, 7, 12), int64] {
  %604 = cast(%var_1572, dtype="int64") /* ty=Tensor[(12, 7, 12), int64] */;
  %605 = shape_of(%var_1571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%var_1571, dtype="int64") /* ty=Tensor[(12, 7, 12), int64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  maximum(%606, %607) /* ty=Tensor[(12, 7, 12), int64] */
}

def @func_922() -> Tensor[(2, 9, 9), float32] {
  %608 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %608.0
}

def @func_792(%var_779: Tensor[(7, 7, 2), float32]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) {
  %609 = cast(%var_779, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
  %610 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %611 = tan(%609) /* ty=Tensor[(7, 7, 2), float32] */;
  %612 = %610.2;
  (%611, %612)
}

def @func_8243() -> Tensor[(7, 7, 2), float32] {
  @func_4907() /* ty=Tensor[(7, 7, 2), float32] */
}

def @func_3695(%var_3685: Tensor[(13, 3, 12), uint64], %var_3686: Tensor[(13, 3, 12), uint64]) -> (Tensor[(13, 3, 12), bool], Tensor[(2, 9, 9), float64]) {
  %613 = cast(%var_3686, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %614 = shape_of(%var_3685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%var_3685, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %617 = @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %618 = less_equal(%615, %616) /* ty=Tensor[(13, 3, 12), bool] */;
  %619 = %617.2;
  (%618, %619)
}

def @func_8493(%var_8478: Tensor[(825), int16], %var_8479: Tensor[(1008), int64]) -> (Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(825), int16], Tensor[(1008), int64]) {
  %620 = cast(%var_8478, dtype="int16") /* ty=Tensor[(825), int16] */;
  %621 = cast(%var_8479, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %622 = reshape(%620, newshape=[55, 15]) /* ty=Tensor[(55, 15), int16] */;
  %623 = reshape(%621, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %624 = @func_3148(%622, %623) /* ty=(Tensor[(98), float32], Tensor[(98), float32], Tensor[(105), float64], Tensor[(55, 15), int16], Tensor[(105), float64], Tensor[(1008), int64]) */;
  %625 = @func_3648() /* ty=Tensor[(2, 9, 9), float64] */;
  %626 = %624.2;
  (%625, %626, %var_8478, %var_8479)
}

def @func_7339() -> (Tensor[(2, 9, 9), float32], Tensor[(11, 2, 7), int16], Tensor[(154), int16]) {
  %627 = @func_2857() /* ty=Tensor[(2, 9, 9), float64] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %629 = cast(meta[relay.Constant][24] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %630 = reshape(%629, newshape=[11, 2, 7]) /* ty=Tensor[(11, 2, 7), int16] */;
  %631 = rsqrt(%628) /* ty=Tensor[(2, 9, 9), float32] */;
  %632 = @func_7065(%630) /* ty=Tensor[(11, 2, 7), int16] */;
  (%631, %632, meta[relay.Constant][24] /* ty=Tensor[(154), int16] */)
}

def @func_4289() -> (Tensor[(2, 9, 9), int32],) {
  %633 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %634 = %633.0;
  (%634,)
}

def @func_8797() -> (Tensor[(2, 9, 9), float64],) {
  %635 = @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */;
  %636 = %635.0;
  (%636,)
}

def @func_1927() -> Tensor[(7, 14), float32] {
  %637 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %637.1
}

def @func_5904(%var_5873: Tensor[(6, 14, 3), bool], %var_5874: Tensor[(6, 14, 3), bool]) -> (Tensor[(6, 14, 3), bool], Tensor[(2, 9, 9), float64], Tensor[(6, 14, 3), uint32]) {
  %638 = cast(%var_5874, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %639 = shape_of(%var_5873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_5873, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %643 = cast(%var_5874, dtype="uint32") /* ty=Tensor[(6, 14, 3), uint32] */;
  %644 = shape_of(%var_5873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%var_5873, dtype="uint32") /* ty=Tensor[(6, 14, 3), uint32] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %647 = logical_or(%640, %641) /* ty=Tensor[(6, 14, 3), bool] */;
  %648 = %642.2;
  %649 = maximum(%645, %646) /* ty=Tensor[(6, 14, 3), uint32] */;
  (%647, %648, %649)
}

def @func_1439(%var_1430: Tensor[(7, 14), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32]) {
  %650 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %651 = cast(%var_1430, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
  %652 = reshape(%651, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
  %653 = @func_792(%652) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
  %654 = %650.1;
  %655 = %653.0;
  (%654, %655, %var_1430)
}

def @func_9871(%var_9861: Tensor[(60), uint16]) -> (Tensor[(7, 3, 5), float32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  %656 = @func_9333() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */;
  %657 = %656.1;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %659 = cast(%var_9861, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %660 = reshape(%658, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %661 = reshape(%659, newshape=[60]) /* ty=Tensor[(60), uint16] */;
  %662 = @func_5446(%660, %661) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) */;
  %663 = %662.7;
  %664 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %665 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  (%657, %663, %var_9861, %664, %665)
}

def @func_7065(%var_7061: Tensor[(11, 2, 7), int16]) -> Tensor[(11, 2, 7), int16] {
  %666 = cast(%var_7061, dtype="int16") /* ty=Tensor[(11, 2, 7), int16] */;
  %667 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(11, 2, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 2, 7), int16] */, dtype="int16") /* ty=Tensor[(11, 2, 7), int16] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%668, %669) /* ty=Tensor[(11, 2, 7), int16] */
}

def @func_7613(%var_7540: Tensor[(15, 6, 10), float64], %var_7546: Tensor[(15, 6, 10), float64], %var_7606: Tensor[(162), float32]) -> (Tensor[(15, 6, 10), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(15, 6, 10), uint16], Tensor[(15, 6, 10), bool], Tensor[(2, 9, 9), float64], Tensor[(162), float32]) {
  %670 = cast(%var_7546, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %671 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%var_7540, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %674 = @func_6479() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 14), float32]) */;
  %675 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 6, 10), float64] */, dtype="uint16") /* ty=Tensor[(15, 6, 10), uint16] */;
  %676 = shape_of(%var_7546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_7546, dtype="uint16") /* ty=Tensor[(15, 6, 10), uint16] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %679 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %680 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_7540, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %683 = floor_mod(%681, %682) /* ty=Tensor[(15, 6, 10), float64] */;
  %684 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 6, 10), float64] */, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%683, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = cast(%var_7606, dtype="float32") /* ty=Tensor[(162), float32] */;
  %689 = reshape(%688, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float32] */;
  %690 = @func_6208(%689) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %691 = power(%672, %673) /* ty=Tensor[(15, 6, 10), float64] */;
  %692 = %674.0;
  %693 = @func_4456() /* ty=Tensor[(7, 14), float32] */;
  %694 = left_shift(%677, %678) /* ty=Tensor[(15, 6, 10), uint16] */;
  %695 = less(%686, %687) /* ty=Tensor[(15, 6, 10), bool] */;
  %696 = %690.0;
  (%691, %692, %693, %694, %695, %696, %var_7606)
}

def @func_7044(%var_7032: Tensor[(7, 7, 2), float32]) -> Tensor[(7, 7, 2), uint32] {
  %697 = @func_7016() /* ty=Tensor[(7, 7, 2), float32] */;
  %698 = cast(%var_7032, dtype="uint32") /* ty=Tensor[(7, 7, 2), uint32] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="uint32") /* ty=Tensor[(7, 7, 2), uint32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%700, %701) /* ty=Tensor[(7, 7, 2), uint32] */
}

def @func_398() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %702 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %705 = exp(%704) /* ty=Tensor[(2, 9, 9), float64] */;
  %706 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  (%705, %706)
}

def @func_6479() -> (Tensor[(7, 14), float32], Tensor[(7, 14), float32]) {
  %707 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
  %708 = @func_4456() /* ty=Tensor[(7, 14), float32] */;
  %709 = %707.0;
  (%708, %709)
}

def @func_1966() -> (Tensor[(7, 14), float32],) {
  %710 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  (%710,)
}

def @func_2280(%var_2199: Tensor[(98, 1), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(98, 1), float32], Tensor[(1008), int64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(12, 7, 12), float32]) {
  %711 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %712 = cast(%var_2199, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
  %713 = reshape(%712, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
  %714 = @func_792(%713) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
  %715 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %716 = cast(meta[relay.Constant][28] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %717 = cast(meta[relay.Constant][28] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %718 = reshape(%716, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
  %719 = reshape(%717, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
  %720 = @func_1576(%718, %719) /* ty=Tensor[(12, 7, 12), int64] */;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %722 = exp(%721) /* ty=Tensor[(12, 7, 12), float64] */;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
  %724 = %711.2;
  %725 = %714.0;
  %726 = %715.0;
  %727 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  %728 = tan(%723) /* ty=Tensor[(12, 7, 12), float32] */;
  (%724, %725, %var_2199, meta[relay.Constant][28] /* ty=Tensor[(1008), int64] */, %726, %727, %728)
}

def @func_10200() -> Tensor[(2, 9, 9), float64] {
  @func_9429() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_8914(%var_8898: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) {
  %729 = @func_5785() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %730 = @func_3498() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %731 = cast(%var_8898, dtype="bool") /* ty=Tensor[(686), bool] */;
  %732 = reshape(%731, newshape=[686]) /* ty=Tensor[(686), bool] */;
  %733 = @func_6036(%732) /* ty=(Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) */;
  %734 = %729.0;
  %735 = %730.0;
  %736 = %733.0;
  (%734, %735, %736, %var_8898)
}

def @func_9056(%var_9019: Tensor[(7, 6, 5), float32]) -> (Tensor[(7, 6, 5), float32], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float64], Tensor[(7, 6, 5), bool], Tensor[(2, 9, 9), float64]) {
  %737 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %738 = shape_of(%var_9019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%var_9019, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %741 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %742 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
  %743 = cast(%var_9019, dtype="bool") /* ty=Tensor[(7, 6, 5), bool] */;
  %744 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 6, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 6, 5), float32] */, dtype="bool") /* ty=Tensor[(7, 6, 5), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = @func_8797() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %748 = mod(%739, %740) /* ty=Tensor[(7, 6, 5), float32] */;
  %749 = %741.0;
  %750 = %742.0;
  %751 = equal(%745, %746) /* ty=Tensor[(7, 6, 5), bool] */;
  %752 = %747.0;
  (%748, %749, %750, %751, %752)
}

def @func_5632(%var_5629: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float64], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) {
  %753 = cast(%var_5629, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %754 = cast(%var_5629, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %755 = reshape(%753, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %756 = reshape(%754, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %757 = @func_1237(%755, %756) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %758 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %759 = %757.0;
  (%758, %759, %var_5629)
}

def @func_10711() -> (Tensor[(2, 9, 9), float32],) {
  %760 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %761 = %760.0;
  (%761,)
}

def @func_6284() -> (Tensor[(7, 14), float32],) {
  %762 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  (%762,)
}

def @func_338() -> Tensor[(2, 9, 9), float64] {
  %763 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %764 = %763.0;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  atan(%765) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_9333() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) {
  %766 = @func_7002() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
  %767 = cast(meta[relay.Constant][30] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %768 = cast(meta[relay.Constant][30] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %769 = reshape(%767, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %770 = reshape(%768, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %771 = @func_561(%769, %770) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %772 = %766.1;
  %773 = %771.1;
  (%772, %773, meta[relay.Constant][30] /* ty=Tensor[(105), float64] */)
}

def @func_5567() -> (Tensor[(2, 9, 9), float32],) {
  %774 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %775 = %774.0;
  (%775,)
}

def @func_4907() -> Tensor[(7, 7, 2), float32] {
  %776 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
  %776.1
}

def @func_3758() -> Tensor[(2, 9, 9), float64] {
  %777 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  log10(%778) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_1024(%var_994: Tensor[(14, 13, 13), uint8], %var_995: Tensor[(14, 13, 13), uint8]) -> (Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) {
  %779 = cast(%var_995, dtype="uint8") /* ty=Tensor[(14, 13, 13), uint8] */;
  %780 = shape_of(%var_994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_994, dtype="uint8") /* ty=Tensor[(14, 13, 13), uint8] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %783 = bitwise_or(%781, %782) /* ty=Tensor[(14, 13, 13), uint8] */;
  %784 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  (%783, %784)
}

def @func_4949(%var_4925: Tensor[(2, 9, 9), float32]) -> (Tensor[(2, 9, 9), uint16], Tensor[(105), float64]) {
  %785 = @func_4822() /* ty=Tensor[(2, 9, 9), float32] */;
  %786 = cast(%var_4925, dtype="uint16") /* ty=Tensor[(2, 9, 9), uint16] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%785, dtype="uint16") /* ty=Tensor[(2, 9, 9), uint16] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %790 = cast(%785, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %791 = add(%788, %789) /* ty=Tensor[(2, 9, 9), uint16] */;
  %792 = cast(%791, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %793 = reshape(%790, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %794 = reshape(%792, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %795 = @func_667(%793, %794) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
  %796 = %795.2;
  (%791, %796)
}

def @func_2181() -> Tensor[(2, 9, 9), float64] {
  %797 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %800 = sinh(%799) /* ty=Tensor[(2, 9, 9), float64] */;
  %801 = cast(%800, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  sin(%801) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_10534() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %802 = @func_4882() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %803 = @func_8610() /* ty=Tensor[(2, 9, 9), float64] */;
  %804 = %802.0;
  %805 = @func_9583() /* ty=Tensor[(2, 9, 9), float64] */;
  (%803, %804, %805)
}

def @func_3864() -> (Tensor[(7, 14), float32],) {
  %806 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  (%806,)
}

def @func_1757() -> (Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) {
  %807 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
  %808 = reshape(%807, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
  %809 = @func_792(%808) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
  %810 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %811 = %810.1;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %813 = %809.0;
  %814 = sin(%812) /* ty=Tensor[(7, 3, 5), float64] */;
  (%813, meta[relay.Constant][31] /* ty=Tensor[(7, 14), float32] */, %814)
}

def @func_1366() -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %815 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %816 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %817 = cast(%816, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %818 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%815, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %821 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %822 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %823 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %824 = less_equal(%819, %820) /* ty=Tensor[(2, 9, 9), bool] */;
  %825 = %821.3;
  %826 = %822.3;
  %827 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %828 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %829 = %823.2;
  %830 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  (%824, %825, %826, %827, %828, %829, %830)
}

def @func_7225() -> (Tensor[(7, 14), float32], Tensor[(21, 5), float64]) {
  %831 = @func_6068() /* ty=(Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) */;
  %832 = @func_6047() /* ty=Tensor[(21, 5), float64] */;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
  %834 = atanh(%833) /* ty=Tensor[(21, 5), float32] */;
  %835 = cast(%834, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %836 = %831.0;
  %837 = sigmoid(%835) /* ty=Tensor[(21, 5), float64] */;
  (%836, %837)
}

def @func_8886(%var_8848: Tensor[(21, 5), float64]) -> (Tensor[(21, 5), uint32], Tensor[(2, 9, 9), float64], Tensor[(21, 5), float32]) {
  %838 = @func_8397() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %839 = %838.1;
  %840 = cast(%var_8848, dtype="uint32") /* ty=Tensor[(21, 5), uint32] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %842 = cast(%839, dtype="uint32") /* ty=Tensor[(21, 5), uint32] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %844 = cast(%var_8848, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
  %845 = bitwise_or(%842, %843) /* ty=Tensor[(21, 5), uint32] */;
  %846 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
  %847 = rsqrt(%844) /* ty=Tensor[(21, 5), float32] */;
  (%845, %846, %847)
}

def @func_1209(%var_1199: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) {
  %848 = cast(%var_1199, dtype="float64") /* ty=Tensor[(105), float64] */;
  %849 = cast(%var_1199, dtype="float64") /* ty=Tensor[(105), float64] */;
  %850 = reshape(%848, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %851 = reshape(%849, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %852 = @func_561(%850, %851) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %853 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  %854 = cast(%853, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %855 = cast(%853, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %856 = reshape(%854, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %857 = reshape(%855, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %858 = @func_667(%856, %857) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
  %859 = %852.0;
  %860 = %858.1;
  (%853, %859, %var_1199, %860)
}

def @func_8175() -> (Tensor[(7, 14), float32],) {
  %861 = @func_7113() /* ty=Tensor[(7, 14), float32] */;
  (%861,)
}

def @func_9725() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %862 = @func_7339() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(11, 2, 7), int16], Tensor[(154), int16]) */;
  %863 = @func_5609() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */;
  %864 = %862.0;
  %865 = %863.1;
  (%864, %865)
}

def @func_5043() -> (Tensor[(2, 9, 9), int32], Tensor[(14, 13, 13), uint8], Tensor[(169, 14), uint8]) {
  %866 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
  %867 = cast(meta[relay.Constant][32] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
  %868 = cast(meta[relay.Constant][32] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
  %869 = reshape(%867, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
  %870 = reshape(%868, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
  %871 = @func_1024(%869, %870) /* ty=(Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) */;
  %872 = %866.1;
  %873 = %871.0;
  (%872, %873, meta[relay.Constant][32] /* ty=Tensor[(169, 14), uint8] */)
}

def @func_2477() -> (Tensor[(7, 7, 2), float32],) {
  %874 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %875 = %874.0;
  (%875,)
}

def @func_4397(%var_4365: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) {
  %876 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %877 = %876.0;
  %878 = cast(%877, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %879 = cast(%var_4365, dtype="bool") /* ty=Tensor[(686), bool] */;
  %880 = reshape(%879, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), bool] */;
  %881 = @func_2618(%880) /* ty=(Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) */;
  %882 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
  %883 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
  %884 = log(%878) /* ty=Tensor[(2, 9, 9), float32] */;
  %885 = %881.1;
  %886 = %882.0;
  (%883, %884, %885, %var_4365, %886)
}

def @func_4785() -> (Tensor[(21, 5), float64], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float64]) {
  %887 = @func_3547() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), int32]) */;
  %888 = cast(meta[relay.Constant][33] /* ty=Tensor[(686), bool] */, dtype="bool") /* ty=Tensor[(686), bool] */;
  %889 = reshape(%888, newshape=[686]) /* ty=Tensor[(686), bool] */;
  %890 = @func_4397(%889) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) */;
  %891 = %887.2;
  %892 = %890.2;
  %893 = @func_2181() /* ty=Tensor[(2, 9, 9), float64] */;
  (%891, %892, meta[relay.Constant][33] /* ty=Tensor[(686), bool] */, %893)
}

def @func_8138() -> (Tensor[(7, 7, 2), bool], Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32]) {
  %894 = @func_4907() /* ty=Tensor[(7, 7, 2), float32] */;
  %895 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 7, 2), float32] */, dtype="bool") /* ty=Tensor[(7, 7, 2), bool] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="bool") /* ty=Tensor[(7, 7, 2), bool] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %899 = @func_6406() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %900 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
  %901 = greater(%897, %898) /* ty=Tensor[(7, 7, 2), bool] */;
  %902 = %899.0;
  %903 = cos(%900) /* ty=Tensor[(7, 7, 2), float32] */;
  (%901, %902, %903)
}

def @func_7672(%var_7667: Tensor[(21, 5), float64]) -> (Tensor[(7, 14), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float32], Tensor[(21, 5), bool]) {
  %904 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %905 = cast(meta[relay.Constant][35] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %906 = reshape(%905, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %907 = @func_5958(%906) /* ty=(Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %908 = %907.2;
  %909 = cast(%908, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %910 = sinh(%909) /* ty=Tensor[(21, 5), float64] */;
  %911 = cast(%var_7667, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %912 = shape_of(%910, dtype="int32") /* ty=Tensor[(2), int32] */;
  %913 = cast(%910, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %915 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %916 = %904.0;
  %917 = logical_or(%913, %914) /* ty=Tensor[(21, 5), bool] */;
  (%915, meta[relay.Constant][35] /* ty=Tensor[(105), float64] */, %916, %917)
}

def @func_4618() -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) {
  %918 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
  %919 = %918.1;
  %920 = cast(%919, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
  %921 = asin(%920) /* ty=Tensor[(7, 7, 2), float32] */;
  %922 = cast(%921, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
  %923 = reshape(%922, newshape=[98, 1]) /* ty=Tensor[(98, 1), float32] */;
  %924 = @func_2280(%923) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(98, 1), float32], Tensor[(1008), int64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(12, 7, 12), float32]) */;
  %925 = %924.4;
  (%921, %925)
}

def @func_5609() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %926 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %927 = %926.0;
  %928 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  (%927, %928)
}

def @func_9689() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %929 = @func_9261() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %930 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %931 = %929.0;
  %932 = %930.0;
  %933 = @func_6926() /* ty=Tensor[(2, 9, 9), float64] */;
  (%931, %932, %933)
}

def @func_10012(%var_9998: Tensor[(1, 105), float64], %var_9999: Tensor[(60), uint16], %var_10006: Tensor[(14, 105), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(60), uint16], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(14, 105), uint16]) {
  %934 = @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %935 = cast(%var_9998, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
  %936 = cast(%var_9999, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %937 = reshape(%935, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %938 = reshape(%936, newshape=[60]) /* ty=Tensor[(60), uint16] */;
  %939 = @func_5446(%937, %938) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) */;
  %940 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
  %941 = cast(%var_9998, dtype="uint16") /* ty=Tensor[(1, 105), uint16] */;
  %942 = cast(%var_10006, dtype="uint16") /* ty=Tensor[(14, 105), uint16] */;
  %943 = %934.0;
  %944 = %939.6;
  %945 = %940.0;
  %946 = minimum(%941, %942) /* ty=Tensor[(14, 105), uint16] */;
  (%943, %944, %var_9999, %945, %946)
}

def @func_2320() -> Tensor[(2, 9, 9), bool] {
  %947 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %947.0
}

def @func_6926() -> Tensor[(2, 9, 9), float64] {
  %948 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  %949 = cast(%948, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  erf(%949) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_2594(%var_2579: Tensor[(7, 3, 5), float32]) -> Tensor[(7, 3, 5), float32] {
  %950 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %951 = %950.1;
  %952 = cast(%var_2579, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
  %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%951, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%954, %955) /* ty=Tensor[(7, 3, 5), float32] */
}

def @func_10338() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) {
  %956 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %957 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %958 = %956.0;
  %959 = %957.0;
  (%958, %959)
}

def @func_8599() -> (Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32]) {
  %960 = @func_4168() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */;
  %961 = %960.2;
  %962 = @func_8243() /* ty=Tensor[(7, 7, 2), float32] */;
  (%961, %962)
}

def @func_8610() -> Tensor[(2, 9, 9), float64] {
  %963 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %963.6
}

def @func_4490(%var_4460: Tensor[(7, 12, 10), int8], %var_4461: Tensor[(7, 12, 10), int8]) -> (Tensor[(7, 12, 10), int8], Tensor[(7, 12, 10), float32]) {
  %964 = cast(%var_4461, dtype="int8") /* ty=Tensor[(7, 12, 10), int8] */;
  %965 = shape_of(%var_4460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%var_4460, dtype="int8") /* ty=Tensor[(7, 12, 10), int8] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %968 = cast(%var_4461, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  %969 = bitwise_and(%966, %967) /* ty=Tensor[(7, 12, 10), int8] */;
  %970 = rsqrt(%968) /* ty=Tensor[(7, 12, 10), float32] */;
  (%969, %970)
}

def @func_4822() -> Tensor[(2, 9, 9), float32] {
  %971 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %971.1
}

def @func_3591() -> Tensor[(7, 14), float32] {
  %972 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %972.1
}

def @func_8751(%var_8685: Tensor[(21, 5), float64]) -> (Tensor[(14, 7, 7), bool], Tensor[(686), bool], Tensor[(21, 5), float64], Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32], Tensor[(21, 5), float64]) {
  %973 = cast(meta[relay.Constant][36] /* ty=Tensor[(686), bool] */, dtype="bool") /* ty=Tensor[(686), bool] */;
  %974 = reshape(%973, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), bool] */;
  %975 = @func_2618(%974) /* ty=(Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) */;
  %976 = @func_8397() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %977 = %976.1;
  %978 = cast(%var_8685, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %979 = shape_of(%977, dtype="int32") /* ty=Tensor[(2), int32] */;
  %980 = cast(%977, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %982 = cast(%var_8685, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
  %983 = cosh(%982) /* ty=Tensor[(21, 5), float32] */;
  %984 = cast(%977, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(2), int32] */;
  %986 = cast(%983, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %988 = cast(%var_8685, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %989 = %975.0;
  %990 = divide(%980, %981) /* ty=Tensor[(21, 5), float64] */;
  %991 = power(%986, %987) /* ty=Tensor[(21, 5), float64] */;
  %992 = @func_8243() /* ty=Tensor[(7, 7, 2), float32] */;
  %993 = erf(%988) /* ty=Tensor[(21, 5), float64] */;
  (%989, meta[relay.Constant][36] /* ty=Tensor[(686), bool] */, %990, %991, %992, %993)
}

def @func_5100() -> (Tensor[(2, 9, 9), float32],) {
  %994 = @func_2320() /* ty=Tensor[(2, 9, 9), bool] */;
  %995 = cast(%994, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %996 = cosh(%995) /* ty=Tensor[(2, 9, 9), float32] */;
  (%996,)
}

def @func_8228(%var_8178: int16) -> (Tensor[(8, 7, 16), int16], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64]) {
  %997 = cast(%var_8178, dtype="int16") /* ty=int16 */;
  %998 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 7, 16), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 16), int16] */;
  %999 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %1000 = bitwise_or(%997, %998) /* ty=Tensor[(8, 7, 16), int16] */;
  %1001 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %1002 = %999.1;
  %1003 = @func_3591() /* ty=Tensor[(7, 14), float32] */;
  %1004 = @func_2857() /* ty=Tensor[(2, 9, 9), float64] */;
  (%1000, %1001, %1002, %1003, %1004)
}

def @func_10763(%var_10749: Tensor[(11, 7, 8), uint16], %var_10750: Tensor[(11, 7, 8), uint16]) -> Tensor[(11, 7, 8), uint16] {
  %1005 = cast(%var_10750, dtype="uint16") /* ty=Tensor[(11, 7, 8), uint16] */;
  %1006 = shape_of(%var_10749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%var_10749, dtype="uint16") /* ty=Tensor[(11, 7, 8), uint16] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%1007, %1008) /* ty=Tensor[(11, 7, 8), uint16] */
}

def @func_2618(%var_2604: Tensor[(14, 7, 7), bool]) -> (Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) {
  %1009 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 7, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 7, 7), bool] */;
  %1010 = shape_of(%var_2604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_2604, dtype="bool") /* ty=Tensor[(14, 7, 7), bool] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1013 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %1014 = logical_and(%1011, %1012) /* ty=Tensor[(14, 7, 7), bool] */;
  %1015 = %1013.0;
  (%1014, %1015)
}

def @func_7794() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  %1016 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %1017 = @func_6881() /* ty=Tensor[(2, 9, 9), float64] */;
  %1018 = %1016.0;
  %1019 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  (%1017, %1018, %1019)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2280(%var_2199: Tensor[(98, 1), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(98, 1), float32], Tensor[(1008), int64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(12, 7, 12), float32]) {
  %0 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %1 = cast(%var_2199, dtype="float32") /* ty=Tensor[(98, 1), float32] */;
  %2 = reshape(%1, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
  %3 = @func_792(%2) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
  %4 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %7 = reshape(%5, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
  %8 = reshape(%6, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
  %9 = @func_1576(%7, %8) /* ty=Tensor[(12, 7, 12), int64] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %11 = exp(%10) /* ty=Tensor[(12, 7, 12), float64] */;
  %12 = cast(%11, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
  %13 = %0.2;
  %14 = %3.0;
  %15 = %4.0;
  %16 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  %17 = tan(%12) /* ty=Tensor[(12, 7, 12), float32] */;
  (%13, %14, %var_2199, meta[relay.Constant][0] /* ty=Tensor[(1008), int64] */, %15, %16, %17)
}

def @func_1800() -> (Tensor[(2, 9, 9), float64],) {
  %20 = fn () -> (Tensor[(2, 9, 9), float64],) {
    %18 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
    %19 = %18.2;
    (%19,)
  };
  %20() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_6284() -> (Tensor[(7, 14), float32],) {
  %21 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  (%21,)
}

def @func_7975() -> (Tensor[(2, 9, 9), float64],) {
  %22 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  (%22,)
}

def @func_10340() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) {
  @func_10338() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */
}

def @func_3500() -> (Tensor[(2, 9, 9), int32],) {
  @func_3498() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_9431() -> Tensor[(2, 9, 9), float64] {
  @func_9429() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_671(%var_669: Tensor[(2, 9, 9), float64], %var_670: Tensor[(2, 9, 9), float64]) -> (Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) {
  @func_667(%var_669, %var_670) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */
}

def @func_3695(%var_3685: Tensor[(13, 3, 12), uint64], %var_3686: Tensor[(13, 3, 12), uint64]) -> (Tensor[(13, 3, 12), bool], Tensor[(2, 9, 9), float64]) {
  %23 = cast(%var_3686, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %24 = shape_of(%var_3685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_3685, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %28 = less_equal(%25, %26) /* ty=Tensor[(13, 3, 12), bool] */;
  %29 = %27.2;
  (%28, %29)
}

def @func_1546() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) {
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(98), float32] */, dtype="float32") /* ty=Tensor[(98), float32] */;
  %31 = reshape(%30, newshape=[7, 14]) /* ty=Tensor[(7, 14), float32] */;
  %32 = @func_1439(%31) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32]) */;
  %33 = @func_1494() /* ty=Tensor[(2, 9, 9), float64] */;
  %34 = %32.2;
  (%33, %34, meta[relay.Constant][1] /* ty=Tensor[(98), float32] */)
}

def @func_2596(%var_2595: Tensor[(7, 3, 5), float32]) -> Tensor[(7, 3, 5), float32] {
  %41 = fn (%var_2579: Tensor[(7, 3, 5), float32]) -> Tensor[(7, 3, 5), float32] {
    %35 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
    %36 = %35.1;
    %37 = cast(%var_2579, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
    %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(%36, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%39, %40) /* ty=Tensor[(7, 3, 5), float32] */
  };
  %41(%var_2595) /* ty=Tensor[(7, 3, 5), float32] */
}

def @func_8611() -> Tensor[(2, 9, 9), float64] {
  %43 = fn () -> Tensor[(2, 9, 9), float64] {
    %42 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %42.6
  };
  %43() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_3189() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) {
  %46 = fn () -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) {
    %44 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    %45 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
    (%44, %45)
  };
  %46() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */
}

def @func_8753(%var_8752: Tensor[(21, 5), float64]) -> (Tensor[(14, 7, 7), bool], Tensor[(686), bool], Tensor[(21, 5), float64], Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32], Tensor[(21, 5), float64]) {
  %68 = fn (%var_8685: Tensor[(21, 5), float64]) -> (Tensor[(14, 7, 7), bool], Tensor[(686), bool], Tensor[(21, 5), float64], Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32], Tensor[(21, 5), float64]) {
    %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(686), bool] */, dtype="bool") /* ty=Tensor[(686), bool] */;
    %48 = reshape(%47, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), bool] */;
    %49 = @func_2618(%48) /* ty=(Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) */;
    %50 = @func_8397() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
    %51 = %50.1;
    %52 = cast(%var_8685, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(2), int32] */;
    %54 = cast(%51, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %56 = cast(%var_8685, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
    %57 = cosh(%56) /* ty=Tensor[(21, 5), float32] */;
    %58 = cast(%51, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(2), int32] */;
    %60 = cast(%57, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %62 = cast(%var_8685, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %63 = %49.0;
    %64 = divide(%54, %55) /* ty=Tensor[(21, 5), float64] */;
    %65 = power(%60, %61) /* ty=Tensor[(21, 5), float64] */;
    %66 = @func_8243() /* ty=Tensor[(7, 7, 2), float32] */;
    %67 = erf(%62) /* ty=Tensor[(21, 5), float64] */;
    (%63, meta[relay.Constant][2] /* ty=Tensor[(686), bool] */, %64, %65, %66, %67)
  };
  %68(%var_8752) /* ty=(Tensor[(14, 7, 7), bool], Tensor[(686), bool], Tensor[(21, 5), float64], Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32], Tensor[(21, 5), float64]) */
}

def @func_6481() -> (Tensor[(7, 14), float32], Tensor[(7, 14), float32]) {
  @func_6479() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 14), float32]) */
}

def @func_8177() -> (Tensor[(7, 14), float32],) {
  @func_8175() /* ty=(Tensor[(7, 14), float32],) */
}

def @func_413() -> (Tensor[(2, 9, 9), uint8],) {
  %69 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %70 = %69.0;
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 9, 9), float32] */, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %75 = bitwise_xor(%73, %74) /* ty=Tensor[(2, 9, 9), uint8] */;
  (%75,)
}

def @func_1650() -> Tensor[(2, 9, 9), int32] {
  @func_1648() /* ty=Tensor[(2, 9, 9), int32] */
}

def @func_9262() -> (Tensor[(2, 9, 9), float64],) {
  %77 = fn () -> (Tensor[(2, 9, 9), float64],) {
    %76 = @func_2181() /* ty=Tensor[(2, 9, 9), float64] */;
    (%76,)
  };
  %77() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_1579(%var_1577: Tensor[(12, 7, 12), int64], %var_1578: Tensor[(12, 7, 12), int64]) -> Tensor[(12, 7, 12), int64] {
  %82 = fn (%var_1571: Tensor[(12, 7, 12), int64], %var_1572: Tensor[(12, 7, 12), int64]) -> Tensor[(12, 7, 12), int64] {
    %78 = cast(%var_1572, dtype="int64") /* ty=Tensor[(12, 7, 12), int64] */;
    %79 = shape_of(%var_1571, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(%var_1571, dtype="int64") /* ty=Tensor[(12, 7, 12), int64] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    maximum(%80, %81) /* ty=Tensor[(12, 7, 12), int64] */
  };
  %82(%var_1577, %var_1578) /* ty=Tensor[(12, 7, 12), int64] */
}

def @func_9871(%var_9861: Tensor[(60), uint16]) -> (Tensor[(7, 3, 5), float32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  %83 = @func_9333() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */;
  %84 = %83.1;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
  %86 = cast(%var_9861, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %87 = reshape(%85, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %88 = reshape(%86, newshape=[60]) /* ty=Tensor[(60), uint16] */;
  %89 = @func_5446(%87, %88) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) */;
  %90 = %89.7;
  %91 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %92 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  (%84, %90, %var_9861, %91, %92)
}

def @func_8175() -> (Tensor[(7, 14), float32],) {
  %93 = @func_7113() /* ty=Tensor[(7, 14), float32] */;
  (%93,)
}

def @func_5786() -> (Tensor[(2, 9, 9), uint8],) {
  %96 = fn () -> (Tensor[(2, 9, 9), uint8],) {
    %94 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
    %95 = %94.0;
    (%95,)
  };
  %96() /* ty=(Tensor[(2, 9, 9), uint8],) */
}

def @func_8398() -> (Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  %100 = fn () -> (Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
    %97 = @func_7225() /* ty=(Tensor[(7, 14), float32], Tensor[(21, 5), float64]) */;
    %98 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    %99 = %97.1;
    (%98, %99)
  };
  %100() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */
}

def @func_10283() -> (Tensor[(2, 9, 9), int32],) {
  %101 = @func_7794() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %102 = %101.2;
  (%102,)
}

def @func_1968() -> (Tensor[(7, 14), float32],) {
  @func_1966() /* ty=(Tensor[(7, 14), float32],) */
}

def @func_7341() -> (Tensor[(2, 9, 9), float32], Tensor[(11, 2, 7), int16], Tensor[(154), int16]) {
  @func_7339() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(11, 2, 7), int16], Tensor[(154), int16]) */
}

def @func_4128() -> (Tensor[(2, 9, 9), int32],) {
  %105 = fn () -> (Tensor[(2, 9, 9), int32],) {
    %103 = @func_3498() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %104 = %103.0;
    (%104,)
  };
  %105() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_6352() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  @func_6350() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */
}

def @func_6720() -> (Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) {
  %106 = @func_3676() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %107 = @func_6047() /* ty=Tensor[(21, 5), float64] */;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %109 = %106.0;
  %110 = asin(%108) /* ty=Tensor[(21, 5), float64] */;
  (%109, %110)
}

def @func_8096() -> Tensor[(2, 9, 9), float64] {
  @func_8094() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_439() -> Tensor[(2, 9, 9), float64] {
  %112 = fn () -> Tensor[(2, 9, 9), float64] {
    %111 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %111.1
  };
  %112() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_5449(%var_5447: Tensor[(7, 15), float64], %var_5448: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) {
  %136 = fn (%var_5396: Tensor[(7, 15), float64], %var_5424: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) {
    %113 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
    %114 = cast(%113, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %115 = cast(meta[relay.Constant][4] /* ty=Tensor[(468), uint64] */, dtype="uint64") /* ty=Tensor[(468), uint64] */;
    %116 = cast(meta[relay.Constant][4] /* ty=Tensor[(468), uint64] */, dtype="uint64") /* ty=Tensor[(468), uint64] */;
    %117 = reshape(%115, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint64] */;
    %118 = reshape(%116, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint64] */;
    %119 = @func_3695(%117, %118) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(2, 9, 9), float64]) */;
    %120 = cast(%var_5396, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
    %121 = reshape(%120, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %122 = @func_2803(%121) /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
    %123 = cast(%var_5424, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %124 = cast(%var_5424, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %125 = reshape(%123, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
    %126 = reshape(%124, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
    %127 = @func_1237(%125, %126) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
    %128 = %127.0;
    %129 = cast(%128, dtype="float32") /* ty=Tensor[(5, 3, 4), float32] */;
    %130 = sqrt(%114) /* ty=Tensor[(2, 9, 9), float64] */;
    %131 = %119.0;
    %132 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
    %133 = %122.0;
    %134 = @func_3591() /* ty=Tensor[(7, 14), float32] */;
    %135 = sinh(%129) /* ty=Tensor[(5, 3, 4), float32] */;
    (%130, %131, meta[relay.Constant][4] /* ty=Tensor[(468), uint64] */, %132, %133, %var_5396, %var_5424, %134, %135)
  };
  %136(%var_5447, %var_5448) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) */
}

def @func_3566() -> Tensor[(2, 9, 9), float32] {
  @func_3564() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_4457() -> Tensor[(7, 14), float32] {
  %138 = fn () -> Tensor[(7, 14), float32] {
    %137 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
    %137.0
  };
  %138() /* ty=Tensor[(7, 14), float32] */
}

def @func_1028(%var_1026: Tensor[(14, 13, 13), uint8], %var_1027: Tensor[(14, 13, 13), uint8]) -> (Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) {
  @func_1024(%var_1026, %var_1027) /* ty=(Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) */
}

def @func_4290() -> (Tensor[(2, 9, 9), int32],) {
  %141 = fn () -> (Tensor[(2, 9, 9), int32],) {
    %139 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %140 = %139.0;
    (%140,)
  };
  %141() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_2955(%var_2954: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float64], Tensor[(60), uint16], Tensor[(7, 7, 2), float32]) {
  %154 = fn (%var_2922: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float64], Tensor[(60), uint16], Tensor[(7, 7, 2), float32]) {
    %142 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
    %143 = %142.1;
    %144 = cast(%143, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %145 = cast(%var_2922, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %146 = cast(%var_2922, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %147 = reshape(%145, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
    %148 = reshape(%146, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
    %149 = @func_1237(%147, %148) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
    %150 = @func_2477() /* ty=(Tensor[(7, 7, 2), float32],) */;
    %151 = acosh(%144) /* ty=Tensor[(2, 9, 9), float32] */;
    %152 = %149.1;
    %153 = %150.0;
    (%151, %152, %var_2922, %153)
  };
  %154(%var_2954) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float64], Tensor[(60), uint16], Tensor[(7, 7, 2), float32]) */
}

def @func_2183() -> Tensor[(2, 9, 9), float64] {
  @func_2181() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_5668() -> (Tensor[(2, 9, 9), int32],) {
  %157 = fn () -> (Tensor[(2, 9, 9), int32],) {
    %155 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %156 = %155.0;
    (%156,)
  };
  %157() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_5908(%var_5906: Tensor[(6, 14, 3), bool], %var_5907: Tensor[(6, 14, 3), bool]) -> (Tensor[(6, 14, 3), bool], Tensor[(2, 9, 9), float64], Tensor[(6, 14, 3), uint32]) {
  @func_5904(%var_5906, %var_5907) /* ty=(Tensor[(6, 14, 3), bool], Tensor[(2, 9, 9), float64], Tensor[(6, 14, 3), uint32]) */
}

def @func_5610() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %161 = fn () -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
    %158 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %159 = %158.0;
    %160 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
    (%159, %160)
  };
  %161() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_6764(%var_6761: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64],) {
  %162 = cast(%var_6761, dtype="float64") /* ty=Tensor[(1, 12, 6), float64] */;
  %163 = atan(%162) /* ty=Tensor[(1, 12, 6), float64] */;
  (%163,)
}

def @func_9059(%var_9057: Tensor[(7, 6, 5), float32]) -> (Tensor[(7, 6, 5), float32], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float64], Tensor[(7, 6, 5), bool], Tensor[(2, 9, 9), float64]) {
  @func_9056(%var_9057) /* ty=(Tensor[(7, 6, 5), float32], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float64], Tensor[(7, 6, 5), bool], Tensor[(2, 9, 9), float64]) */
}

def @func_9271() -> Tensor[(2, 9, 9), float64] {
  @func_9269() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_2181() -> Tensor[(2, 9, 9), float64] {
  %164 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %167 = sinh(%166) /* ty=Tensor[(2, 9, 9), float64] */;
  %168 = cast(%167, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  sin(%168) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_1904() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  %169 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %170 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %171 = cast(meta[relay.Constant][5] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %172 = reshape(%171, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %173 = @func_1209(%172) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */;
  %174 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %175 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %176 = cast(meta[relay.Constant][5] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %177 = reshape(%176, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %178 = @func_982(%177) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */;
  %179 = %169.1;
  %180 = %170.0;
  %181 = %173.0;
  %182 = %174.0;
  %183 = %175.1;
  %184 = %178.0;
  (%179, %180, %181, meta[relay.Constant][5] /* ty=Tensor[(105), float64] */, %182, %183, %184)
}

def @func_3564() -> Tensor[(2, 9, 9), float32] {
  @func_922() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_7674(%var_7673: Tensor[(21, 5), float64]) -> (Tensor[(7, 14), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float32], Tensor[(21, 5), bool]) {
  %199 = fn (%var_7667: Tensor[(21, 5), float64]) -> (Tensor[(7, 14), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float32], Tensor[(21, 5), bool]) {
    %185 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %186 = cast(meta[relay.Constant][6] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %187 = reshape(%186, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %188 = @func_5958(%187) /* ty=(Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
    %189 = %188.2;
    %190 = cast(%189, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %191 = sinh(%190) /* ty=Tensor[(21, 5), float64] */;
    %192 = cast(%var_7667, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
    %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(2), int32] */;
    %194 = cast(%191, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
    %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %196 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
    %197 = %185.0;
    %198 = logical_or(%194, %195) /* ty=Tensor[(21, 5), bool] */;
    (%196, meta[relay.Constant][6] /* ty=Tensor[(105), float64] */, %197, %198)
  };
  %199(%var_7673) /* ty=(Tensor[(7, 14), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float32], Tensor[(21, 5), bool]) */
}

def @func_6048() -> Tensor[(21, 5), float64] {
  %201 = fn () -> Tensor[(21, 5), float64] {
    %200 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
    %200.1
  };
  %201() /* ty=Tensor[(21, 5), float64] */
}

def @func_5931() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8]) {
  @func_5929() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8]) */
}

def @func_2322() -> Tensor[(2, 9, 9), bool] {
  @func_2320() /* ty=Tensor[(2, 9, 9), bool] */
}

def @func_7322() -> (Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(105), float64]) {
  @func_7320() /* ty=(Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(105), float64]) */
}

def @func_7977() -> (Tensor[(2, 9, 9), float64],) {
  @func_7975() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_6350() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %202 = @func_5609() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */;
  %203 = %202.1;
  %204 = @func_6106() /* ty=Tensor[(2, 9, 9), float64] */;
  (%203, %204)
}

def @func_8243() -> Tensor[(7, 7, 2), float32] {
  @func_4907() /* ty=Tensor[(7, 7, 2), float32] */
}

def @func_8916(%var_8915: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) {
  %213 = fn (%var_8898: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) {
    %205 = @func_5785() /* ty=(Tensor[(2, 9, 9), uint8],) */;
    %206 = @func_3498() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %207 = cast(%var_8898, dtype="bool") /* ty=Tensor[(686), bool] */;
    %208 = reshape(%207, newshape=[686]) /* ty=Tensor[(686), bool] */;
    %209 = @func_6036(%208) /* ty=(Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) */;
    %210 = %205.0;
    %211 = %206.0;
    %212 = %209.0;
    (%210, %211, %212, %var_8898)
  };
  %213(%var_8915) /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) */
}

def @func_1441(%var_1440: Tensor[(7, 14), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32]) {
  %220 = fn (%var_1430: Tensor[(7, 14), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32]) {
    %214 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %215 = cast(%var_1430, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
    %216 = reshape(%215, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
    %217 = @func_792(%216) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
    %218 = %214.1;
    %219 = %217.0;
    (%218, %219, %var_1430)
  };
  %220(%var_1440) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32]) */
}

def @func_4490(%var_4460: Tensor[(7, 12, 10), int8], %var_4461: Tensor[(7, 12, 10), int8]) -> (Tensor[(7, 12, 10), int8], Tensor[(7, 12, 10), float32]) {
  %221 = cast(%var_4461, dtype="int8") /* ty=Tensor[(7, 12, 10), int8] */;
  %222 = shape_of(%var_4460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_4460, dtype="int8") /* ty=Tensor[(7, 12, 10), int8] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %225 = cast(%var_4461, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  %226 = bitwise_and(%223, %224) /* ty=Tensor[(7, 12, 10), int8] */;
  %227 = rsqrt(%225) /* ty=Tensor[(7, 12, 10), float32] */;
  (%226, %227)
}

def @func_4020() -> (Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) {
  %233 = fn () -> (Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) {
    %228 = cast(meta[relay.Constant][7] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %229 = reshape(%228, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %230 = @func_856(%229) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
    %231 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
    %232 = %230.1;
    (%231, %232, meta[relay.Constant][7] /* ty=Tensor[(105), float64] */)
  };
  %233() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */
}

def @func_8888(%var_8887: Tensor[(21, 5), float64]) -> (Tensor[(21, 5), uint32], Tensor[(2, 9, 9), float64], Tensor[(21, 5), float32]) {
  %244 = fn (%var_8848: Tensor[(21, 5), float64]) -> (Tensor[(21, 5), uint32], Tensor[(2, 9, 9), float64], Tensor[(21, 5), float32]) {
    %234 = @func_8397() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
    %235 = %234.1;
    %236 = cast(%var_8848, dtype="uint32") /* ty=Tensor[(21, 5), uint32] */;
    %237 = shape_of(%235, dtype="int32") /* ty=Tensor[(2), int32] */;
    %238 = cast(%235, dtype="uint32") /* ty=Tensor[(21, 5), uint32] */;
    %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %240 = cast(%var_8848, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
    %241 = bitwise_or(%238, %239) /* ty=Tensor[(21, 5), uint32] */;
    %242 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
    %243 = rsqrt(%240) /* ty=Tensor[(21, 5), float32] */;
    (%241, %242, %243)
  };
  %244(%var_8887) /* ty=(Tensor[(21, 5), uint32], Tensor[(2, 9, 9), float64], Tensor[(21, 5), float32]) */
}

def @func_10798() -> (Tensor[(7, 7, 2), float32],) {
  %245 = @func_8995() /* ty=(Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) */;
  %246 = %245.2;
  (%246,)
}

def @func_8138() -> (Tensor[(7, 7, 2), bool], Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32]) {
  %247 = @func_4907() /* ty=Tensor[(7, 7, 2), float32] */;
  %248 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 7, 2), float32] */, dtype="bool") /* ty=Tensor[(7, 7, 2), bool] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="bool") /* ty=Tensor[(7, 7, 2), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %252 = @func_6406() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %253 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
  %254 = greater(%250, %251) /* ty=Tensor[(7, 7, 2), bool] */;
  %255 = %252.0;
  %256 = cos(%253) /* ty=Tensor[(7, 7, 2), float32] */;
  (%254, %255, %256)
}

def @func_1648() -> Tensor[(2, 9, 9), int32] {
  %257 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %257.3
}

def @func_2088(%var_2086: Tensor[(60), uint16]) -> (Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(169, 14), float32], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) {
  @func_2085(%var_2086) /* ty=(Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(169, 14), float32], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) */
}

def @main() -> (Tensor[(10, 6, 7), float64],) {
  %258 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  %259 = sinh(%258) /* ty=Tensor[(10, 6, 7), float64] */;
  (%259,)
}

def @func_7875() -> Tensor[(2, 9, 9), float64] {
  %260 = fn () -> Tensor[(2, 9, 9), float64] {
    @func_1726() /* ty=Tensor[(2, 9, 9), float64] */
  };
  %260() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_1758() -> (Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) {
  %269 = fn () -> (Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) {
    %261 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
    %262 = reshape(%261, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
    %263 = @func_792(%262) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
    %264 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
    %265 = %264.1;
    %266 = cast(%265, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
    %267 = %263.0;
    %268 = sin(%266) /* ty=Tensor[(7, 3, 5), float64] */;
    (%267, meta[relay.Constant][10] /* ty=Tensor[(7, 14), float32] */, %268)
  };
  %269() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */
}

def @func_922() -> Tensor[(2, 9, 9), float32] {
  %270 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %270.0
}

def @func_9382() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) {
  @func_9380() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_6621(%var_6619: Tensor[(14, 11, 13), float32], %var_6620: Tensor[(14, 11, 13), float32]) -> (Tensor[(14, 11, 13), float32], Tensor[(14, 11, 13), float64], Tensor[(14, 11, 13), bool], Tensor[(2, 9, 9), float32]) {
  @func_6617(%var_6619, %var_6620) /* ty=(Tensor[(14, 11, 13), float32], Tensor[(14, 11, 13), float64], Tensor[(14, 11, 13), bool], Tensor[(2, 9, 9), float32]) */
}

def @func_11052(%var_11050: Tensor[(7, 7, 2), float32], %var_11051: Tensor[(105, 1), float64]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), int16], Tensor[(2, 9, 9), uint8], Tensor[(105, 1), float64]) {
  %283 = fn (%var_11036: Tensor[(7, 7, 2), float32], %var_11045: Tensor[(105, 1), float64]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), int16], Tensor[(2, 9, 9), uint8], Tensor[(105, 1), float64]) {
    %271 = @func_8138() /* ty=(Tensor[(7, 7, 2), bool], Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32]) */;
    %272 = %271.2;
    %273 = cast(%var_11036, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
    %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
    %275 = cast(%272, dtype="int16") /* ty=Tensor[(7, 7, 2), int16] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %277 = cast(%var_11045, dtype="float64") /* ty=Tensor[(105, 1), float64] */;
    %278 = reshape(%277, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %279 = @func_6270(%278) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64], Tensor[(2, 9, 9), uint8]) */;
    %280 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
    %281 = multiply(%275, %276) /* ty=Tensor[(7, 7, 2), int16] */;
    %282 = %279.3;
    (%280, %281, %282, %var_11045)
  };
  %283(%var_11050, %var_11051) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), int16], Tensor[(2, 9, 9), uint8], Tensor[(105, 1), float64]) */
}

def @func_3549() -> (Tensor[(7, 14), float32], Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), int32]) {
  @func_3547() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), int32]) */
}

def @func_9727() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  @func_9725() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_5958(%var_5950: Tensor[(21, 5), float64]) -> (Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  %284 = @func_4566() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(7, 3, 5), float32]) */;
  %285 = cast(%var_5950, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %286 = reshape(%285, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %287 = @func_982(%286) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */;
  %288 = %284.3;
  %289 = %287.0;
  (%288, %289, %var_5950)
}

def @func_3699(%var_3697: Tensor[(13, 3, 12), uint64], %var_3698: Tensor[(13, 3, 12), uint64]) -> (Tensor[(13, 3, 12), bool], Tensor[(2, 9, 9), float64]) {
  @func_3695(%var_3697, %var_3698) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(2, 9, 9), float64]) */
}

def @func_6883() -> Tensor[(2, 9, 9), float64] {
  @func_6881() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_7618(%var_7615: Tensor[(15, 6, 10), float64], %var_7616: Tensor[(15, 6, 10), float64], %var_7617: Tensor[(162), float32]) -> (Tensor[(15, 6, 10), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(15, 6, 10), uint16], Tensor[(15, 6, 10), bool], Tensor[(2, 9, 9), float64], Tensor[(162), float32]) {
  @func_7613(%var_7615, %var_7616, %var_7617) /* ty=(Tensor[(15, 6, 10), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(15, 6, 10), uint16], Tensor[(15, 6, 10), bool], Tensor[(2, 9, 9), float64], Tensor[(162), float32]) */
}

def @func_8996() -> (Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) {
  %298 = fn () -> (Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) {
    %290 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %291 = @func_6479() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 14), float32]) */;
    %292 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
    %293 = @func_4618() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) */;
    %294 = %290.0;
    %295 = %291.1;
    %296 = %292.0;
    %297 = %293.1;
    (%294, %295, %296, %297)
  };
  %298() /* ty=(Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) */
}

def @func_667(%var_608: Tensor[(2, 9, 9), float64], %var_663: Tensor[(2, 9, 9), float64]) -> (Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) {
  %299 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %300 = %299.0;
  %301 = cast(%var_608, dtype="int64") /* ty=Tensor[(2, 9, 9), int64] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="int64") /* ty=Tensor[(2, 9, 9), int64] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %305 = cast(meta[relay.Constant][11] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %306 = cast(meta[relay.Constant][11] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %307 = reshape(%305, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %308 = reshape(%306, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %309 = @func_561(%307, %308) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %310 = cast(%var_608, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %311 = asin(%310) /* ty=Tensor[(2, 9, 9), float32] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %313 = asinh(%312) /* ty=Tensor[(2, 9, 9), float64] */;
  %314 = cast(%var_663, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = bitwise_or(%303, %304) /* ty=Tensor[(2, 9, 9), int64] */;
  %319 = %309.1;
  %320 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  %321 = greater_equal(%316, %317) /* ty=Tensor[(2, 9, 9), bool] */;
  (%318, %319, meta[relay.Constant][11] /* ty=Tensor[(105), float64] */, %320, %321)
}

def @func_10161() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), uint8]) {
  %326 = fn () -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), uint8]) {
    %322 = @func_8397() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
    %323 = @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
    %324 = %322.0;
    %325 = %323.0;
    (%324, %325)
  };
  %326() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), uint8]) */
}

def @func_1548() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) {
  @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */
}

def @func_4399(%var_4398: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) {
  %338 = fn (%var_4365: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) {
    %327 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
    %328 = %327.0;
    %329 = cast(%328, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %330 = cast(%var_4365, dtype="bool") /* ty=Tensor[(686), bool] */;
    %331 = reshape(%330, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), bool] */;
    %332 = @func_2618(%331) /* ty=(Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) */;
    %333 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
    %334 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
    %335 = log(%329) /* ty=Tensor[(2, 9, 9), float32] */;
    %336 = %332.1;
    %337 = %333.0;
    (%334, %335, %336, %var_4365, %337)
  };
  %338(%var_4398) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) */
}

def @func_3091(%var_3090: Tensor[(4, 5, 7), int8]) -> (Tensor[(4, 5, 7), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float32], Tensor[(2, 9, 9), float64]) {
  %348 = fn (%var_3057: Tensor[(4, 5, 7), int8]) -> (Tensor[(4, 5, 7), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float32], Tensor[(2, 9, 9), float64]) {
    %339 = cast(meta[relay.Constant][12] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %340 = cast(%var_3057, dtype="bool") /* ty=Tensor[(4, 5, 7), bool] */;
    %341 = not_equal(%339, %340) /* ty=Tensor[(4, 5, 7), bool] */;
    %342 = cast(%341, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
    %343 = cast(meta[relay.Constant][13] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
    %344 = reshape(%343, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float32] */;
    %345 = atan(%342) /* ty=Tensor[(4, 5, 7), float32] */;
    %346 = @func_2594(%344) /* ty=Tensor[(7, 3, 5), float32] */;
    %347 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
    (%345, %346, meta[relay.Constant][13] /* ty=Tensor[(105), float32] */, %347)
  };
  %348(%var_3090) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_3498() -> (Tensor[(2, 9, 9), int32],) {
  %349 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
  (%349,)
}

def @func_10338() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) {
  %350 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %351 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %352 = %350.0;
  %353 = %351.0;
  (%352, %353)
}

def @func_10633() -> Tensor[(2, 9, 9), float32] {
  %355 = fn () -> Tensor[(2, 9, 9), float32] {
    %354 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
    %354.0
  };
  %355() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_7004() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) {
  @func_7002() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */
}

def @func_10285() -> (Tensor[(2, 9, 9), int32],) {
  @func_10283() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_5904(%var_5873: Tensor[(6, 14, 3), bool], %var_5874: Tensor[(6, 14, 3), bool]) -> (Tensor[(6, 14, 3), bool], Tensor[(2, 9, 9), float64], Tensor[(6, 14, 3), uint32]) {
  %356 = cast(%var_5874, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %357 = shape_of(%var_5873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_5873, dtype="bool") /* ty=Tensor[(6, 14, 3), bool] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %360 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
  %361 = cast(%var_5874, dtype="uint32") /* ty=Tensor[(6, 14, 3), uint32] */;
  %362 = shape_of(%var_5873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_5873, dtype="uint32") /* ty=Tensor[(6, 14, 3), uint32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %365 = logical_or(%358, %359) /* ty=Tensor[(6, 14, 3), bool] */;
  %366 = %360.2;
  %367 = maximum(%363, %364) /* ty=Tensor[(6, 14, 3), uint32] */;
  (%365, %366, %367)
}

def @func_6070() -> (Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) {
  @func_6068() /* ty=(Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) */
}

def @func_1398() -> (Tensor[(2, 9, 9), float32],) {
  %377 = fn () -> (Tensor[(2, 9, 9), float32],) {
    %368 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %369 = %368.0;
    %370 = cast(%369, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %371 = tan(%370) /* ty=Tensor[(2, 9, 9), float32] */;
    %372 = cast(%371, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %373 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
    %374 = cast(%369, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %376 = divide(%374, %375) /* ty=Tensor[(2, 9, 9), float32] */;
    (%376,)
  };
  %377() /* ty=(Tensor[(2, 9, 9), float32],) */
}

def @func_4494(%var_4492: Tensor[(7, 12, 10), int8], %var_4493: Tensor[(7, 12, 10), int8]) -> (Tensor[(7, 12, 10), int8], Tensor[(7, 12, 10), float32]) {
  @func_4490(%var_4492, %var_4493) /* ty=(Tensor[(7, 12, 10), int8], Tensor[(7, 12, 10), float32]) */
}

def @func_2805(%var_2804: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), uint8], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) {
  %384 = fn (%var_2777: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), uint8], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) {
    %378 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
    %379 = cast(%var_2777, dtype="float64") /* ty=Tensor[(105), float64] */;
    %380 = reshape(%379, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %381 = @func_1209(%380) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */;
    %382 = %378.0;
    %383 = %381.1;
    (%382, %383, %var_2777)
  };
  %384(%var_2804) /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */
}

def @func_1728() -> Tensor[(2, 9, 9), float64] {
  @func_1726() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_7018() -> Tensor[(7, 7, 2), float32] {
  @func_7016() /* ty=Tensor[(7, 7, 2), float32] */
}

def @func_5526(%var_5524: uint16, %var_5525: Tensor[(7, 6, 11), uint16]) -> (Tensor[(7, 6, 11), uint16],) {
  @func_5522(%var_5524, %var_5525) /* ty=(Tensor[(7, 6, 11), uint16],) */
}

def @func_8228(%var_8178: int16) -> (Tensor[(8, 7, 16), int16], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64]) {
  %385 = cast(%var_8178, dtype="int16") /* ty=int16 */;
  %386 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 7, 16), int16] */, dtype="int16") /* ty=Tensor[(8, 7, 16), int16] */;
  %387 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %388 = bitwise_or(%385, %386) /* ty=Tensor[(8, 7, 16), int16] */;
  %389 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %390 = %387.1;
  %391 = @func_3591() /* ty=Tensor[(7, 14), float32] */;
  %392 = @func_2857() /* ty=Tensor[(2, 9, 9), float64] */;
  (%388, %389, %390, %391, %392)
}

def @func_8075(%var_8074: uint16) -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(7, 14), float32], uint16, Tensor[(462), uint16], Tensor[(7, 3, 5), float64], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32]) {
  %412 = fn (%var_8045: uint16) -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(7, 14), float32], uint16, Tensor[(462), uint16], Tensor[(7, 3, 5), float64], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32]) {
    %393 = @func_6068() /* ty=(Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) */;
    %394 = @func_4053() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
    %395 = cast(%var_8045, dtype="uint16") /* ty=uint16 */;
    %396 = cast(meta[relay.Constant][15] /* ty=Tensor[(462), uint16] */, dtype="uint16") /* ty=Tensor[(462), uint16] */;
    %397 = reshape(%395, newshape=[]) /* ty=uint16 */;
    %398 = reshape(%396, newshape=[462]) /* ty=Tensor[(462), uint16] */;
    %399 = @func_7939(%397, %398) /* ty=(Tensor[(7, 14), float32], Tensor[(7, 6, 11), uint16], uint16, Tensor[(462), uint16]) */;
    %400 = cast(meta[relay.Constant][16] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %401 = reshape(%400, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %402 = @func_963(%401) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
    %403 = @func_3676() /* ty=(Tensor[(2, 9, 9), float64],) */;
    %404 = @func_6284() /* ty=(Tensor[(7, 14), float32],) */;
    %405 = %393.1;
    %406 = %394.0;
    %407 = @func_3591() /* ty=Tensor[(7, 14), float32] */;
    %408 = %399.0;
    %409 = %402.1;
    %410 = %403.0;
    %411 = %404.0;
    (%405, %406, %407, %408, %var_8045, meta[relay.Constant][15] /* ty=Tensor[(462), uint16] */, %409, meta[relay.Constant][16] /* ty=Tensor[(21, 5), float64] */, %410, %411)
  };
  %412(%var_8074) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(7, 14), float32], uint16, Tensor[(462), uint16], Tensor[(7, 3, 5), float64], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32]) */
}

def @func_7320() -> (Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(105), float64]) {
  %413 = @func_5296() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) */;
  %414 = cast(meta[relay.Constant][17] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %415 = reshape(%414, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %416 = @func_5958(%415) /* ty=(Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */;
  %417 = %413.1;
  %418 = %416.0;
  (%417, %418, meta[relay.Constant][17] /* ty=Tensor[(105), float64] */)
}

def @func_6546() -> (Tensor[(7, 7, 2), float32],) {
  %419 = @func_4907() /* ty=Tensor[(7, 7, 2), float32] */;
  (%419,)
}

def @func_1241(%var_1239: Tensor[(5, 3, 4), uint16], %var_1240: Tensor[(5, 3, 4), uint16]) -> (Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) {
  @func_1237(%var_1239, %var_1240) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */
}

def @func_6068() -> (Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) {
  %420 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
  %421 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %422 = %420.0;
  %423 = %421.0;
  (%422, %423)
}

def @func_5632(%var_5629: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float64], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) {
  %424 = cast(%var_5629, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %425 = cast(%var_5629, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %426 = reshape(%424, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %427 = reshape(%425, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %428 = @func_1237(%426, %427) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %429 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %430 = %428.0;
  (%429, %430, %var_5629)
}

def @func_9269() -> Tensor[(2, 9, 9), float64] {
  @func_1726() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_9333() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) {
  %431 = @func_7002() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
  %432 = cast(meta[relay.Constant][18] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %433 = cast(meta[relay.Constant][18] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %434 = reshape(%432, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %435 = reshape(%433, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %436 = @func_561(%434, %435) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %437 = %431.1;
  %438 = %436.1;
  (%437, %438, meta[relay.Constant][18] /* ty=Tensor[(105), float64] */)
}

def @func_7227() -> (Tensor[(7, 14), float32], Tensor[(21, 5), float64]) {
  @func_7225() /* ty=(Tensor[(7, 14), float32], Tensor[(21, 5), float64]) */
}

def @func_9335() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) {
  @func_9333() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */
}

def @func_6617(%var_6574: Tensor[(14, 11, 13), float32], %var_6602: Tensor[(14, 11, 13), float32]) -> (Tensor[(14, 11, 13), float32], Tensor[(14, 11, 13), float64], Tensor[(14, 11, 13), bool], Tensor[(2, 9, 9), float32]) {
  %439 = cast(%var_6574, dtype="float32") /* ty=Tensor[(14, 11, 13), float32] */;
  %440 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(14, 11, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 13), float32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %443 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 11, 13), float32] */, dtype="float64") /* ty=Tensor[(14, 11, 13), float64] */;
  %444 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(14, 11, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 11, 13), float32] */, dtype="float64") /* ty=Tensor[(14, 11, 13), float64] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %447 = cast(%var_6602, dtype="bool") /* ty=Tensor[(14, 11, 13), bool] */;
  %448 = shape_of(%var_6574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%var_6574, dtype="bool") /* ty=Tensor[(14, 11, 13), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %451 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %452 = divide(%441, %442) /* ty=Tensor[(14, 11, 13), float32] */;
  %453 = mod(%445, %446) /* ty=Tensor[(14, 11, 13), float64] */;
  %454 = logical_or(%449, %450) /* ty=Tensor[(14, 11, 13), bool] */;
  %455 = %451.0;
  (%452, %453, %454, %455)
}

def @func_3383() -> (Tensor[(2, 9, 9), float64],) {
  @func_3381() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_9725() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %456 = @func_7339() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(11, 2, 7), int16], Tensor[(154), int16]) */;
  %457 = @func_5609() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */;
  %458 = %456.0;
  %459 = %457.1;
  (%458, %459)
}

def @func_3758() -> Tensor[(2, 9, 9), float64] {
  %460 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %461 = cast(%460, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  log10(%461) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_8094() -> Tensor[(2, 9, 9), float64] {
  %462 = @func_6350() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %462.0
}

def @func_6479() -> (Tensor[(7, 14), float32], Tensor[(7, 14), float32]) {
  %463 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
  %464 = @func_4456() /* ty=Tensor[(7, 14), float32] */;
  %465 = %463.0;
  (%464, %465)
}

def @func_261() -> (Tensor[(2, 9, 9), float32],) {
  %466 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 9, 9), float32] */, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %467 = acos(%466) /* ty=Tensor[(2, 9, 9), float32] */;
  (%467,)
}

def @func_5635(%var_5633: Tensor[(60), uint16]) -> (Tensor[(2, 9, 9), float64], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) {
  @func_5632(%var_5633) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) */
}

def @func_6211(%var_6209: Tensor[(2, 9, 9), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  @func_6208(%var_6209) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */
}

def @func_4221() -> (Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) {
  @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */
}

def @func_8798() -> (Tensor[(2, 9, 9), float64],) {
  %470 = fn () -> (Tensor[(2, 9, 9), float64],) {
    %468 = @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */;
    %469 = %468.0;
    (%469,)
  };
  %470() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_2085(%var_2080: Tensor[(60), uint16]) -> (Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(169, 14), float32], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) {
  %471 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %472 = %471.1;
  %473 = cast(%472, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
  %474 = reshape(%473, newshape=[7, 7, 2]) /* ty=Tensor[(7, 7, 2), float32] */;
  %475 = @func_792(%474) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */;
  %476 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %477 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %478 = cast(meta[relay.Constant][22] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
  %479 = cast(meta[relay.Constant][22] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
  %480 = reshape(%478, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
  %481 = reshape(%479, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
  %482 = @func_1024(%480, %481) /* ty=(Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) */;
  %483 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %484 = cast(meta[relay.Constant][22] /* ty=Tensor[(169, 14), uint8] */, dtype="float64") /* ty=Tensor[(169, 14), float64] */;
  %485 = erf(%484) /* ty=Tensor[(169, 14), float64] */;
  %486 = cast(%485, dtype="float32") /* ty=Tensor[(169, 14), float32] */;
  %487 = cast(%var_2080, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %488 = cast(%var_2080, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %489 = reshape(%487, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %490 = reshape(%488, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %491 = @func_1237(%489, %490) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %492 = %475.1;
  %493 = %476.0;
  %494 = @func_1494() /* ty=Tensor[(2, 9, 9), float64] */;
  %495 = %477.3;
  %496 = %482.0;
  %497 = %483.0;
  %498 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %499 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %500 = log(%486) /* ty=Tensor[(169, 14), float32] */;
  %501 = %491.0;
  (%472, %492, %493, %494, %495, %496, %497, %498, %499, %500, %501, %var_2080)
}

def @func_8496(%var_8494: Tensor[(825), int16], %var_8495: Tensor[(1008), int64]) -> (Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(825), int16], Tensor[(1008), int64]) {
  %509 = fn (%var_8478: Tensor[(825), int16], %var_8479: Tensor[(1008), int64]) -> (Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(825), int16], Tensor[(1008), int64]) {
    %502 = cast(%var_8478, dtype="int16") /* ty=Tensor[(825), int16] */;
    %503 = cast(%var_8479, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %504 = reshape(%502, newshape=[55, 15]) /* ty=Tensor[(55, 15), int16] */;
    %505 = reshape(%503, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
    %506 = @func_3148(%504, %505) /* ty=(Tensor[(98), float32], Tensor[(98), float32], Tensor[(105), float64], Tensor[(55, 15), int16], Tensor[(105), float64], Tensor[(1008), int64]) */;
    %507 = @func_3648() /* ty=Tensor[(2, 9, 9), float64] */;
    %508 = %506.2;
    (%507, %508, %var_8478, %var_8479)
  };
  %509(%var_8494, %var_8495) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(825), int16], Tensor[(1008), int64]) */
}

def @func_8599() -> (Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32]) {
  %510 = @func_4168() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */;
  %511 = %510.2;
  %512 = @func_8243() /* ty=Tensor[(7, 7, 2), float32] */;
  (%511, %512)
}

def @func_10202() -> Tensor[(2, 9, 9), float64] {
  @func_10200() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_11142() -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  @func_11140() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */
}

def @func_10717() -> (Tensor[(2, 9, 9), float64],) {
  @func_10715() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_8302() -> (Tensor[(2, 9, 9), float64],) {
  @func_8300() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_9583() -> Tensor[(2, 9, 9), float64] {
  @func_7874() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_2859() -> Tensor[(2, 9, 9), float64] {
  @func_2857() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_4169() -> (Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) {
  %520 = fn () -> (Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) {
    %513 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 9), float32] */;
    %514 = @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
    %515 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
    %516 = cos(%513) /* ty=Tensor[(1, 16, 9), float32] */;
    %517 = %514.1;
    %518 = %515.1;
    %519 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
    (%516, %517, %518, %519)
  };
  %520() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */
}

def @func_8245() -> Tensor[(7, 7, 2), float32] {
  @func_8243() /* ty=Tensor[(7, 7, 2), float32] */
}

def @func_10800() -> (Tensor[(7, 7, 2), float32],) {
  @func_10798() /* ty=(Tensor[(7, 7, 2), float32],) */
}

def @func_6856() -> Tensor[(2, 9, 9), float32] {
  @func_4822() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_11068() -> Tensor[(2, 9, 9), float64] {
  @func_11066() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_7016() -> Tensor[(7, 7, 2), float32] {
  %521 = @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %521.0
}

def @func_3795() -> (Tensor[(2, 9, 9), float64],) {
  %524 = fn () -> (Tensor[(2, 9, 9), float64],) {
    %522 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %523 = %522.0;
    (%523,)
  };
  %524() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_4566() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(7, 3, 5), float32]) {
  %525 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %526 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %527 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %528 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %529 = reshape(%527, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %530 = reshape(%528, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), uint16] */;
  %531 = @func_1237(%529, %530) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) */;
  %532 = %531.1;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
  %534 = %525.0;
  %535 = %526.0;
  %536 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %537 = acosh(%533) /* ty=Tensor[(7, 3, 5), float32] */;
  (%534, %535, %536, meta[relay.Constant][24] /* ty=Tensor[(60), uint16] */, %537)
}

def @func_6858() -> Tensor[(2, 9, 9), float32] {
  @func_6856() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_5044() -> (Tensor[(2, 9, 9), int32], Tensor[(14, 13, 13), uint8], Tensor[(169, 14), uint8]) {
  %546 = fn () -> (Tensor[(2, 9, 9), int32], Tensor[(14, 13, 13), uint8], Tensor[(169, 14), uint8]) {
    %538 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
    %539 = cast(meta[relay.Constant][25] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
    %540 = cast(meta[relay.Constant][25] /* ty=Tensor[(169, 14), uint8] */, dtype="uint8") /* ty=Tensor[(169, 14), uint8] */;
    %541 = reshape(%539, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
    %542 = reshape(%540, newshape=[14, 13, 13]) /* ty=Tensor[(14, 13, 13), uint8] */;
    %543 = @func_1024(%541, %542) /* ty=(Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) */;
    %544 = %538.1;
    %545 = %543.0;
    (%544, %545, meta[relay.Constant][25] /* ty=Tensor[(169, 14), uint8] */)
  };
  %546() /* ty=(Tensor[(2, 9, 9), int32], Tensor[(14, 13, 13), uint8], Tensor[(169, 14), uint8]) */
}

def @func_4823() -> Tensor[(2, 9, 9), float32] {
  %548 = fn () -> Tensor[(2, 9, 9), float32] {
    %547 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %547.1
  };
  %548() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_6106() -> Tensor[(2, 9, 9), float64] {
  %549 = @func_3794() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %549.0
}

def @func_3649() -> Tensor[(2, 9, 9), float64] {
  %550 = fn () -> Tensor[(2, 9, 9), float64] {
    @func_2181() /* ty=Tensor[(2, 9, 9), float64] */
  };
  %550() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_1966() -> (Tensor[(7, 14), float32],) {
  %551 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  (%551,)
}

def @func_7271() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) {
  @func_7269() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) */
}

def @func_7519() -> (Tensor[(1, 16, 9), float32],) {
  %554 = fn () -> (Tensor[(1, 16, 9), float32],) {
    %552 = @func_4168() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */;
    %553 = %552.0;
    (%553,)
  };
  %554() /* ty=(Tensor[(1, 16, 9), float32],) */
}

def @func_6927() -> Tensor[(2, 9, 9), float64] {
  %557 = fn () -> Tensor[(2, 9, 9), float64] {
    %555 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
    %556 = cast(%555, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    erf(%556) /* ty=Tensor[(2, 9, 9), float64] */
  };
  %557() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_400() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */
}

def @func_745() -> (Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  %587 = fn () -> (Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
    %558 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %559 = %558.0;
    %560 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %561 = %560.1;
    %562 = cast(%561, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
    %563 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %564 = cast(%559, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %566 = logical_and(%564, %565) /* ty=Tensor[(2, 9, 9), bool] */;
    %567 = cast(%566, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %568 = cast(%559, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %569 = reshape(%567, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
    %570 = reshape(%568, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
    %571 = @func_667(%569, %570) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
    %572 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %573 = cast(%559, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %574 = log2(%573) /* ty=Tensor[(2, 9, 9), float64] */;
    %575 = cast(%559, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
    %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(%574, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %579 = subtract(%577, %578) /* ty=Tensor[(2, 9, 9), uint8] */;
    %580 = cast(%579, dtype="int32") /* ty=Tensor[(2, 9, 9), int32] */;
    %581 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
    %582 = cast(%561, dtype="int32") /* ty=Tensor[(2, 9, 9), int32] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %584 = %571.1;
    %585 = %572.1;
    %586 = logical_xor(%582, %583) /* ty=Tensor[(2, 9, 9), int32] */;
    (%566, %584, %585, %586)
  };
  %587() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */
}

def @func_6286() -> (Tensor[(7, 14), float32],) {
  @func_6284() /* ty=(Tensor[(7, 14), float32],) */
}

def @func_1495() -> Tensor[(2, 9, 9), float64] {
  %589 = fn () -> Tensor[(2, 9, 9), float64] {
    %588 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
    %588.2
  };
  %589() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_7269() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) {
  %590 = @func_5785() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %591 = @func_3381() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %592 = %590.0;
  %593 = @func_2320() /* ty=Tensor[(2, 9, 9), bool] */;
  %594 = %591.0;
  (%592, %593, %594)
}

def @func_3627(%var_3626: Tensor[(6, 7, 16), float64]) -> (Tensor[(6, 7, 16), float64],) {
  %597 = fn (%var_3615: Tensor[(6, 7, 16), float64]) -> (Tensor[(6, 7, 16), float64],) {
    %595 = cast(%var_3615, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
    %596 = rsqrt(%595) /* ty=Tensor[(6, 7, 16), float64] */;
    (%596,)
  };
  %597(%var_3626) /* ty=(Tensor[(6, 7, 16), float64],) */
}

def @func_1928() -> Tensor[(7, 14), float32] {
  %599 = fn () -> Tensor[(7, 14), float32] {
    %598 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
    %598.1
  };
  %599() /* ty=Tensor[(7, 14), float32] */
}

def @func_7067(%var_7066: Tensor[(11, 2, 7), int16]) -> Tensor[(11, 2, 7), int16] {
  %604 = fn (%var_7061: Tensor[(11, 2, 7), int16]) -> Tensor[(11, 2, 7), int16] {
    %600 = cast(%var_7061, dtype="int16") /* ty=Tensor[(11, 2, 7), int16] */;
    %601 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(11, 2, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %602 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 2, 7), int16] */, dtype="int16") /* ty=Tensor[(11, 2, 7), int16] */;
    %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_and(%602, %603) /* ty=Tensor[(11, 2, 7), int16] */
  };
  %604(%var_7066) /* ty=Tensor[(11, 2, 7), int16] */
}

def @func_9817(%var_9816: Tensor[(686), bool]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) {
  %611 = fn (%var_9805: Tensor[(686), bool]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) {
    %605 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
    %606 = cast(%var_9805, dtype="bool") /* ty=Tensor[(686), bool] */;
    %607 = reshape(%606, newshape=[686]) /* ty=Tensor[(686), bool] */;
    %608 = @func_6036(%607) /* ty=(Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) */;
    %609 = %605.1;
    %610 = %608.0;
    (%609, %610, %var_9805)
  };
  %611(%var_9816) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(686), bool]) */
}

def @func_984(%var_983: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) {
  %619 = fn (%var_972: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) {
    %612 = cast(%var_972, dtype="float64") /* ty=Tensor[(105), float64] */;
    %613 = cast(%var_972, dtype="float64") /* ty=Tensor[(105), float64] */;
    %614 = reshape(%612, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
    %615 = reshape(%613, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
    %616 = @func_561(%614, %615) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
    %617 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    %618 = %616.1;
    (%617, %618, %var_972)
  };
  %619(%var_983) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 3, 5), float32], Tensor[(105), float64]) */
}

def @func_9244(%var_9243: Tensor[(168, 4), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 3, 5), bool], Tensor[(105, 1), float64], Tensor[(2, 9, 9), float64], Tensor[(60), uint16], Tensor[(336, 2), float64], Tensor[(168, 4), float64]) {
  %635 = fn (%var_9232: Tensor[(168, 4), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 3, 5), bool], Tensor[(105, 1), float64], Tensor[(2, 9, 9), float64], Tensor[(60), uint16], Tensor[(336, 2), float64], Tensor[(168, 4), float64]) {
    %620 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %621 = cast(meta[relay.Constant][27] /* ty=Tensor[(105, 1), float64] */, dtype="float64") /* ty=Tensor[(105, 1), float64] */;
    %622 = reshape(%621, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %623 = @func_856(%622) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
    %624 = cast(meta[relay.Constant][28] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %625 = reshape(%624, newshape=[60]) /* ty=Tensor[(60), uint16] */;
    %626 = @func_5632(%625) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(5, 3, 4), bool], Tensor[(60), uint16]) */;
    %627 = cast(%var_9232, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
    %628 = reshape(%627, newshape=[336, 2]) /* ty=Tensor[(336, 2), float64] */;
    %629 = @func_4736(%628) /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(6, 7, 16), float64], Tensor[(336, 2), float64]) */;
    %630 = @func_8243() /* ty=Tensor[(7, 7, 2), float32] */;
    %631 = %620.0;
    %632 = %623.0;
    %633 = %626.0;
    %634 = %629.4;
    (%630, %631, %632, meta[relay.Constant][27] /* ty=Tensor[(105, 1), float64] */, %633, meta[relay.Constant][28] /* ty=Tensor[(60), uint16] */, %634, %var_9232)
  };
  %635(%var_9243) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 3, 5), bool], Tensor[(105, 1), float64], Tensor[(2, 9, 9), float64], Tensor[(60), uint16], Tensor[(336, 2), float64], Tensor[(168, 4), float64]) */
}

def @func_3592() -> Tensor[(7, 14), float32] {
  %637 = fn () -> Tensor[(7, 14), float32] {
    %636 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
    %636.1
  };
  %637() /* ty=Tensor[(7, 14), float32] */
}

def @func_263() -> (Tensor[(2, 9, 9), float32],) {
  @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */
}

def @func_6272(%var_6271: Tensor[(105), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64], Tensor[(2, 9, 9), uint8]) {
  %649 = fn (%var_6255: Tensor[(105), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64], Tensor[(2, 9, 9), uint8]) {
    %638 = @func_4907() /* ty=Tensor[(7, 7, 2), float32] */;
    %639 = cast(%638, dtype="float64") /* ty=Tensor[(7, 7, 2), float64] */;
    %640 = asinh(%639) /* ty=Tensor[(7, 7, 2), float64] */;
    %641 = cast(%640, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
    %642 = cast(%var_6255, dtype="float64") /* ty=Tensor[(105), float64] */;
    %643 = reshape(%642, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %644 = @func_963(%643) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
    %645 = @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
    %646 = atan(%641) /* ty=Tensor[(7, 7, 2), float32] */;
    %647 = %644.2;
    %648 = %645.0;
    (%646, %647, %var_6255, %648)
  };
  %649(%var_6271) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64], Tensor[(2, 9, 9), uint8]) */
}

def @func_3760() -> Tensor[(2, 9, 9), float64] {
  @func_3758() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_5734() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) {
  %650 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
  %651 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %652 = %650.0;
  %653 = %651.0;
  (%652, %653)
}

def @func_2477() -> (Tensor[(7, 7, 2), float32],) {
  %654 = @func_1757() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(7, 14), float32], Tensor[(7, 3, 5), float64]) */;
  %655 = %654.0;
  (%655,)
}

def @func_4786() -> (Tensor[(21, 5), float64], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float64]) {
  %663 = fn () -> (Tensor[(21, 5), float64], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float64]) {
    %656 = @func_3547() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), int32]) */;
    %657 = cast(meta[relay.Constant][29] /* ty=Tensor[(686), bool] */, dtype="bool") /* ty=Tensor[(686), bool] */;
    %658 = reshape(%657, newshape=[686]) /* ty=Tensor[(686), bool] */;
    %659 = @func_4397(%658) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) */;
    %660 = %656.2;
    %661 = %659.2;
    %662 = @func_2181() /* ty=Tensor[(2, 9, 9), float64] */;
    (%660, %661, meta[relay.Constant][29] /* ty=Tensor[(686), bool] */, %662)
  };
  %663() /* ty=(Tensor[(21, 5), float64], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float64]) */
}

def @func_5297() -> (Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) {
  %684 = fn () -> (Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) {
    %664 = @func_5100() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %665 = @func_1966() /* ty=(Tensor[(7, 14), float32],) */;
    %666 = @func_4127() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %667 = %666.0;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %669 = cos(%668) /* ty=Tensor[(2, 9, 9), float64] */;
    %670 = cast(%667, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
    %672 = cast(%669, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %674 = cast(%669, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %675 = cast(%669, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %676 = reshape(%674, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
    %677 = reshape(%675, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
    %678 = @func_667(%676, %677) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
    %679 = %664.0;
    %680 = %665.0;
    %681 = mod(%672, %673) /* ty=Tensor[(2, 9, 9), float32] */;
    %682 = %678.4;
    %683 = @func_4840() /* ty=Tensor[(2, 9, 9), float64] */;
    (%679, %680, %681, %682, %683)
  };
  %684() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) */
}

def @func_1237(%var_1227: Tensor[(5, 3, 4), uint16], %var_1228: Tensor[(5, 3, 4), uint16]) -> (Tensor[(5, 3, 4), bool], Tensor[(7, 3, 5), float64], Tensor[(105), float64]) {
  %685 = cast(%var_1228, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %686 = shape_of(%var_1227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%var_1227, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = cast(meta[relay.Constant][30] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %690 = reshape(%689, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %691 = @func_963(%690) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
  %692 = greater(%687, %688) /* ty=Tensor[(5, 3, 4), bool] */;
  %693 = %691.1;
  (%692, %693, meta[relay.Constant][30] /* ty=Tensor[(105), float64] */)
}

def @func_6881() -> Tensor[(2, 9, 9), float64] {
  %694 = @func_5296() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64]) */;
  %694.4
}

def @func_9874(%var_9872: Tensor[(60), uint16]) -> (Tensor[(7, 3, 5), float32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  @func_9871(%var_9872) /* ty=(Tensor[(7, 3, 5), float32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */
}

def @func_11066() -> Tensor[(2, 9, 9), float64] {
  %695 = @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %695.2
}

def @func_10715() -> (Tensor[(2, 9, 9), float64],) {
  %696 = @func_6406() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %697 = %696.1;
  (%697,)
}

def @func_4568() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(7, 3, 5), float32]) {
  @func_4566() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32], Tensor[(7, 14), float32], Tensor[(60), uint16], Tensor[(7, 3, 5), float32]) */
}

def @func_3677() -> (Tensor[(2, 9, 9), float64],) {
  %699 = fn () -> (Tensor[(2, 9, 9), float64],) {
    %698 = @func_3525() /* ty=Tensor[(2, 9, 9), float64] */;
    (%698,)
  };
  %699() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_7388() -> Tensor[(2, 9, 9), float64] {
  %700 = fn () -> Tensor[(2, 9, 9), float64] {
    @func_6881() /* ty=Tensor[(2, 9, 9), float64] */
  };
  %700() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_6659() -> (Tensor[(2, 9, 9), int32],) {
  %703 = fn () -> (Tensor[(2, 9, 9), int32],) {
    %701 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %702 = %701.0;
    (%702,)
  };
  %703() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_7225() -> (Tensor[(7, 14), float32], Tensor[(21, 5), float64]) {
  %704 = @func_6068() /* ty=(Tensor[(7, 14), float32], Tensor[(2, 9, 9), float32]) */;
  %705 = @func_6047() /* ty=Tensor[(21, 5), float64] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(21, 5), float32] */;
  %707 = atanh(%706) /* ty=Tensor[(21, 5), float32] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %709 = %704.0;
  %710 = sigmoid(%708) /* ty=Tensor[(21, 5), float64] */;
  (%709, %710)
}

def @func_5101() -> (Tensor[(2, 9, 9), float32],) {
  %714 = fn () -> (Tensor[(2, 9, 9), float32],) {
    %711 = @func_2320() /* ty=Tensor[(2, 9, 9), bool] */;
    %712 = cast(%711, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %713 = cosh(%712) /* ty=Tensor[(2, 9, 9), float32] */;
    (%713,)
  };
  %714() /* ty=(Tensor[(2, 9, 9), float32],) */
}

def @func_5961(%var_5959: Tensor[(21, 5), float64]) -> (Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  @func_5958(%var_5959) /* ty=(Tensor[(60), uint16], Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */
}

def @func_7339() -> (Tensor[(2, 9, 9), float32], Tensor[(11, 2, 7), int16], Tensor[(154), int16]) {
  %715 = @func_2857() /* ty=Tensor[(2, 9, 9), float64] */;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %717 = cast(meta[relay.Constant][31] /* ty=Tensor[(154), int16] */, dtype="int16") /* ty=Tensor[(154), int16] */;
  %718 = reshape(%717, newshape=[11, 2, 7]) /* ty=Tensor[(11, 2, 7), int16] */;
  %719 = rsqrt(%716) /* ty=Tensor[(2, 9, 9), float32] */;
  %720 = @func_7065(%718) /* ty=Tensor[(11, 2, 7), int16] */;
  (%719, %720, meta[relay.Constant][31] /* ty=Tensor[(154), int16] */)
}

def @func_9380() -> (Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) {
  %721 = @func_6284() /* ty=(Tensor[(7, 14), float32],) */;
  %722 = @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %723 = @func_7975() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %724 = @func_3648() /* ty=Tensor[(2, 9, 9), float64] */;
  %725 = %721.0;
  %726 = %722.0;
  %727 = %723.0;
  (%724, %725, %726, %727)
}

def @func_8601() -> (Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32]) {
  @func_8599() /* ty=(Tensor[(21, 5), float64], Tensor[(7, 7, 2), float32]) */
}

def @func_9585() -> Tensor[(2, 9, 9), float64] {
  @func_9583() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_4739(%var_4737: Tensor[(336, 2), float64]) -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(6, 7, 16), float64], Tensor[(336, 2), float64]) {
  @func_4736(%var_4737) /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(6, 7, 16), float64], Tensor[(336, 2), float64]) */
}

def @func_8231(%var_8229: int16) -> (Tensor[(8, 7, 16), int16], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64]) {
  @func_8228(%var_8229) /* ty=(Tensor[(8, 7, 16), int16], Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_10016(%var_10013: Tensor[(1, 105), float64], %var_10014: Tensor[(60), uint16], %var_10015: Tensor[(14, 105), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(60), uint16], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(14, 105), uint16]) {
  %741 = fn (%var_9998: Tensor[(1, 105), float64], %var_9999: Tensor[(60), uint16], %var_10006: Tensor[(14, 105), float64]) -> (Tensor[(7, 7, 2), float32], Tensor[(60), uint16], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(14, 105), uint16]) {
    %728 = @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */;
    %729 = cast(%var_9998, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
    %730 = cast(%var_9999, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %731 = reshape(%729, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
    %732 = reshape(%730, newshape=[60]) /* ty=Tensor[(60), uint16] */;
    %733 = @func_5446(%731, %732) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(13, 3, 12), bool], Tensor[(468), uint64], Tensor[(7, 14), float32], Tensor[(2, 9, 9), uint8], Tensor[(7, 15), float64], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(5, 3, 4), float32]) */;
    %734 = @func_3864() /* ty=(Tensor[(7, 14), float32],) */;
    %735 = cast(%var_9998, dtype="uint16") /* ty=Tensor[(1, 105), uint16] */;
    %736 = cast(%var_10006, dtype="uint16") /* ty=Tensor[(14, 105), uint16] */;
    %737 = %728.0;
    %738 = %733.6;
    %739 = %734.0;
    %740 = minimum(%735, %736) /* ty=Tensor[(14, 105), uint16] */;
    (%737, %738, %var_9999, %739, %740)
  };
  %741(%var_10013, %var_10014, %var_10015) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(60), uint16], Tensor[(60), uint16], Tensor[(7, 14), float32], Tensor[(14, 105), uint16]) */
}

def @func_6208(%var_6164: Tensor[(2, 9, 9), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  %742 = @func_4882() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %743 = %742.0;
  %744 = cast(%var_6164, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%743, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %748 = floor_divide(%746, %747) /* ty=Tensor[(2, 9, 9), float64] */;
  %749 = @func_3564() /* ty=Tensor[(2, 9, 9), float32] */;
  (%748, %749)
}

def @func_4951(%var_4950: Tensor[(2, 9, 9), float32]) -> (Tensor[(2, 9, 9), uint16], Tensor[(105), float64]) {
  %762 = fn (%var_4925: Tensor[(2, 9, 9), float32]) -> (Tensor[(2, 9, 9), uint16], Tensor[(105), float64]) {
    %750 = @func_4822() /* ty=Tensor[(2, 9, 9), float32] */;
    %751 = cast(%var_4925, dtype="uint16") /* ty=Tensor[(2, 9, 9), uint16] */;
    %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
    %753 = cast(%750, dtype="uint16") /* ty=Tensor[(2, 9, 9), uint16] */;
    %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %755 = cast(%750, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %756 = add(%753, %754) /* ty=Tensor[(2, 9, 9), uint16] */;
    %757 = cast(%756, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
    %758 = reshape(%755, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
    %759 = reshape(%757, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
    %760 = @func_667(%758, %759) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
    %761 = %760.2;
    (%756, %761)
  };
  %762(%var_4950) /* ty=(Tensor[(2, 9, 9), uint16], Tensor[(105), float64]) */
}

def @func_8140() -> (Tensor[(7, 7, 2), bool], Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32]) {
  @func_8138() /* ty=(Tensor[(7, 7, 2), bool], Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32]) */
}

def @func_6108() -> Tensor[(2, 9, 9), float64] {
  @func_6106() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_340() -> Tensor[(2, 9, 9), float64] {
  @func_338() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_794(%var_793: Tensor[(7, 7, 2), float32]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) {
  %767 = fn (%var_779: Tensor[(7, 7, 2), float32]) -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) {
    %763 = cast(%var_779, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
    %764 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
    %765 = tan(%763) /* ty=Tensor[(7, 7, 2), float32] */;
    %766 = %764.2;
    (%765, %766)
  };
  %767(%var_793) /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_10200() -> Tensor[(2, 9, 9), float64] {
  @func_9429() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_564(%var_562: Tensor[(7, 3, 5), float64], %var_563: Tensor[(7, 3, 5), float64]) -> (Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) {
  %786 = fn (%var_516: Tensor[(7, 3, 5), float64], %var_552: Tensor[(7, 3, 5), float64]) -> (Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) {
    %768 = cast(%var_516, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
    %769 = cast(%var_516, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
    %770 = asinh(%769) /* ty=Tensor[(7, 3, 5), float64] */;
    %771 = cast(%770, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
    %772 = sigmoid(%771) /* ty=Tensor[(7, 3, 5), float64] */;
    %773 = cast(%var_516, dtype="uint64") /* ty=Tensor[(7, 3, 5), uint64] */;
    %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
    %775 = cast(%772, dtype="uint64") /* ty=Tensor[(7, 3, 5), uint64] */;
    %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %777 = bitwise_xor(%775, %776) /* ty=Tensor[(7, 3, 5), uint64] */;
    %778 = cast(%777, dtype="float32") /* ty=Tensor[(7, 3, 5), float32] */;
    %779 = cast(%var_552, dtype="bool") /* ty=Tensor[(7, 3, 5), bool] */;
    %780 = shape_of(%var_516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %781 = cast(%var_516, dtype="bool") /* ty=Tensor[(7, 3, 5), bool] */;
    %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %783 = acos(%768) /* ty=Tensor[(7, 3, 5), float64] */;
    %784 = exp(%778) /* ty=Tensor[(7, 3, 5), float32] */;
    %785 = less(%781, %782) /* ty=Tensor[(7, 3, 5), bool] */;
    (%783, %784, %785)
  };
  %786(%var_562, %var_563) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */
}

def @func_7046(%var_7045: Tensor[(7, 7, 2), float32]) -> Tensor[(7, 7, 2), uint32] {
  %792 = fn (%var_7032: Tensor[(7, 7, 2), float32]) -> Tensor[(7, 7, 2), uint32] {
    %787 = @func_7016() /* ty=Tensor[(7, 7, 2), float32] */;
    %788 = cast(%var_7032, dtype="uint32") /* ty=Tensor[(7, 7, 2), uint32] */;
    %789 = shape_of(%787, dtype="int32") /* ty=Tensor[(3), int32] */;
    %790 = cast(%787, dtype="uint32") /* ty=Tensor[(7, 7, 2), uint32] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_or(%790, %791) /* ty=Tensor[(7, 7, 2), uint32] */
  };
  %792(%var_7045) /* ty=Tensor[(7, 7, 2), uint32] */
}

def @func_10763(%var_10749: Tensor[(11, 7, 8), uint16], %var_10750: Tensor[(11, 7, 8), uint16]) -> Tensor[(11, 7, 8), uint16] {
  %793 = cast(%var_10750, dtype="uint16") /* ty=Tensor[(11, 7, 8), uint16] */;
  %794 = shape_of(%var_10749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_10749, dtype="uint16") /* ty=Tensor[(11, 7, 8), uint16] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%795, %796) /* ty=Tensor[(11, 7, 8), uint16] */
}

def @func_965(%var_964: Tensor[(105), float64]) -> (Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) {
  %807 = fn (%var_943: Tensor[(105), float64]) -> (Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) {
    %797 = cast(%var_943, dtype="float64") /* ty=Tensor[(105), float64] */;
    %798 = reshape(%797, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %799 = @func_856(%798) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
    %800 = %799.0;
    %801 = cast(%800, dtype="float64") /* ty=Tensor[(7, 3, 5), float64] */;
    %802 = @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */;
    %803 = %802.0;
    %804 = cast(%803, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
    %805 = cosh(%801) /* ty=Tensor[(7, 3, 5), float64] */;
    %806 = atanh(%804) /* ty=Tensor[(2, 9, 9), float32] */;
    (%var_943, %805, %806)
  };
  %807(%var_964) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */
}

def @func_10712() -> (Tensor[(2, 9, 9), float32],) {
  %810 = fn () -> (Tensor[(2, 9, 9), float32],) {
    %808 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %809 = %808.0;
    (%809,)
  };
  %810() /* ty=(Tensor[(2, 9, 9), float32],) */
}

def @func_5522(%var_5492: uint16, %var_5493: Tensor[(7, 6, 11), uint16]) -> (Tensor[(7, 6, 11), uint16],) {
  %811 = cast(%var_5492, dtype="uint16") /* ty=uint16 */;
  %812 = cast(%var_5493, dtype="uint16") /* ty=Tensor[(7, 6, 11), uint16] */;
  %813 = subtract(%811, %812) /* ty=Tensor[(7, 6, 11), uint16] */;
  (%813,)
}

def @func_7613(%var_7540: Tensor[(15, 6, 10), float64], %var_7546: Tensor[(15, 6, 10), float64], %var_7606: Tensor[(162), float32]) -> (Tensor[(15, 6, 10), float64], Tensor[(7, 14), float32], Tensor[(7, 14), float32], Tensor[(15, 6, 10), uint16], Tensor[(15, 6, 10), bool], Tensor[(2, 9, 9), float64], Tensor[(162), float32]) {
  %814 = cast(%var_7546, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %815 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%var_7540, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %818 = @func_6479() /* ty=(Tensor[(7, 14), float32], Tensor[(7, 14), float32]) */;
  %819 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 10), float64] */, dtype="uint16") /* ty=Tensor[(15, 6, 10), uint16] */;
  %820 = shape_of(%var_7546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_7546, dtype="uint16") /* ty=Tensor[(15, 6, 10), uint16] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %823 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %824 = shape_of(%var_7540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%var_7540, dtype="float64") /* ty=Tensor[(15, 6, 10), float64] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %827 = floor_mod(%825, %826) /* ty=Tensor[(15, 6, 10), float64] */;
  %828 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 6, 10), float64] */, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%827, dtype="bool") /* ty=Tensor[(15, 6, 10), bool] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %832 = cast(%var_7606, dtype="float32") /* ty=Tensor[(162), float32] */;
  %833 = reshape(%832, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float32] */;
  %834 = @func_6208(%833) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
  %835 = power(%816, %817) /* ty=Tensor[(15, 6, 10), float64] */;
  %836 = %818.0;
  %837 = @func_4456() /* ty=Tensor[(7, 14), float32] */;
  %838 = left_shift(%821, %822) /* ty=Tensor[(15, 6, 10), uint16] */;
  %839 = less(%830, %831) /* ty=Tensor[(15, 6, 10), bool] */;
  %840 = %834.0;
  (%835, %836, %837, %838, %839, %840, %var_7606)
}

def @func_398() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %841 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %842 = %841.0;
  %843 = cast(%842, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %844 = exp(%843) /* ty=Tensor[(2, 9, 9), float64] */;
  %845 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  (%844, %845)
}

def @func_2570(%var_2566: Tensor[(11, 15, 5), int16], %var_2567: Tensor[(11, 15, 5), int16], %var_2568: Tensor[(7, 15), float64], %var_2569: Tensor[(4, 252), int64]) -> (Tensor[(11, 15, 5), int16], Tensor[(105), float64], Tensor[(7, 15), float64], Tensor[(12, 7, 12), int64], Tensor[(4, 252), int64], Tensor[(2, 9, 9), int32], Tensor[(105), float64], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32]) {
  %870 = fn (%var_2482: Tensor[(11, 15, 5), int16], %var_2483: Tensor[(11, 15, 5), int16], %var_2491: Tensor[(7, 15), float64], %var_2494: Tensor[(4, 252), int64]) -> (Tensor[(11, 15, 5), int16], Tensor[(105), float64], Tensor[(7, 15), float64], Tensor[(12, 7, 12), int64], Tensor[(4, 252), int64], Tensor[(2, 9, 9), int32], Tensor[(105), float64], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32]) {
    %846 = cast(%var_2483, dtype="int16") /* ty=Tensor[(11, 15, 5), int16] */;
    %847 = shape_of(%var_2482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %848 = cast(%var_2482, dtype="int16") /* ty=Tensor[(11, 15, 5), int16] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %850 = cast(%var_2491, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
    %851 = reshape(%850, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %852 = @func_963(%851) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
    %853 = cast(%var_2494, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
    %854 = cast(%var_2494, dtype="int64") /* ty=Tensor[(4, 252), int64] */;
    %855 = reshape(%853, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
    %856 = reshape(%854, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int64] */;
    %857 = %852.0;
    %858 = cast(%857, dtype="float64") /* ty=Tensor[(105), float64] */;
    %859 = reshape(%858, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %860 = @func_1209(%859) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */;
    %861 = cast(%857, dtype="float64") /* ty=Tensor[(105), float64] */;
    %862 = reshape(%861, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %863 = @func_963(%862) /* ty=(Tensor[(105), float64], Tensor[(7, 3, 5), float64], Tensor[(2, 9, 9), float32]) */;
    %864 = add(%848, %849) /* ty=Tensor[(11, 15, 5), int16] */;
    %865 = @func_1576(%855, %856) /* ty=Tensor[(12, 7, 12), int64] */;
    %866 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
    %867 = %860.2;
    %868 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
    %869 = %863.2;
    (%864, %857, %var_2491, %865, %var_2494, %866, %867, %868, %869)
  };
  %870(%var_2566, %var_2567, %var_2568, %var_2569) /* ty=(Tensor[(11, 15, 5), int16], Tensor[(105), float64], Tensor[(7, 15), float64], Tensor[(12, 7, 12), int64], Tensor[(4, 252), int64], Tensor[(2, 9, 9), int32], Tensor[(105), float64], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32]) */
}

def @func_415() -> (Tensor[(2, 9, 9), uint8],) {
  @func_413() /* ty=(Tensor[(2, 9, 9), uint8],) */
}

def @func_1024(%var_994: Tensor[(14, 13, 13), uint8], %var_995: Tensor[(14, 13, 13), uint8]) -> (Tensor[(14, 13, 13), uint8], Tensor[(2, 9, 9), float64]) {
  %871 = cast(%var_995, dtype="uint8") /* ty=Tensor[(14, 13, 13), uint8] */;
  %872 = shape_of(%var_994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%var_994, dtype="uint8") /* ty=Tensor[(14, 13, 13), uint8] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %875 = bitwise_or(%873, %874) /* ty=Tensor[(14, 13, 13), uint8] */;
  %876 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  (%875, %876)
}

def @func_6722() -> (Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) {
  @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */
}

def @func_1212(%var_1210: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) {
  @func_1209(%var_1210) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) */
}

def @func_7943(%var_7941: uint16, %var_7942: Tensor[(462), uint16]) -> (Tensor[(7, 14), float32], Tensor[(7, 6, 11), uint16], uint16, Tensor[(462), uint16]) {
  @func_7939(%var_7941, %var_7942) /* ty=(Tensor[(7, 14), float32], Tensor[(7, 6, 11), uint16], uint16, Tensor[(462), uint16]) */
}

def @func_6767(%var_6765: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64],) {
  @func_6764(%var_6765) /* ty=(Tensor[(1, 12, 6), float64],) */
}

def @func_9690() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %882 = fn () -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
    %877 = @func_9261() /* ty=(Tensor[(2, 9, 9), float64],) */;
    %878 = @func_5567() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %879 = %877.0;
    %880 = %878.0;
    %881 = @func_6926() /* ty=Tensor[(2, 9, 9), float64] */;
    (%879, %880, %881)
  };
  %882() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_338() -> Tensor[(2, 9, 9), float64] {
  %883 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  atan(%885) /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_8368() -> (Tensor[(2, 9, 9), int32],) {
  %888 = fn () -> (Tensor[(2, 9, 9), int32],) {
    %886 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
    %887 = %886.1;
    (%887,)
  };
  %888() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_5828(%var_5827: Tensor[(15, 11, 1), float32]) -> Tensor[(15, 11, 1), float32] {
  %894 = fn (%var_5810: Tensor[(15, 11, 1), float32]) -> Tensor[(15, 11, 1), float32] {
    %889 = cast(%var_5810, dtype="float32") /* ty=Tensor[(15, 11, 1), float32] */;
    %890 = cos(%889) /* ty=Tensor[(15, 11, 1), float32] */;
    %891 = cast(%890, dtype="float64") /* ty=Tensor[(15, 11, 1), float64] */;
    %892 = acosh(%891) /* ty=Tensor[(15, 11, 1), float64] */;
    %893 = cast(%892, dtype="float32") /* ty=Tensor[(15, 11, 1), float32] */;
    log2(%893) /* ty=Tensor[(15, 11, 1), float32] */
  };
  %894(%var_5827) /* ty=Tensor[(15, 11, 1), float32] */
}

def @func_4736(%var_4716: Tensor[(336, 2), float64]) -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(6, 7, 16), float64], Tensor[(336, 2), float64]) {
  %895 = @func_3794() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %896 = %895.0;
  %897 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 9, 9), float64] */, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %901 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %902 = cast(%var_4716, dtype="float64") /* ty=Tensor[(336, 2), float64] */;
  %903 = reshape(%902, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %904 = @func_3625(%903) /* ty=(Tensor[(6, 7, 16), float64],) */;
  %905 = not_equal(%899, %900) /* ty=Tensor[(2, 9, 9), bool] */;
  %906 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %907 = %901.0;
  %908 = %904.0;
  (%905, %906, %907, %908, %var_4716)
}

def @func_3381() -> (Tensor[(2, 9, 9), float64],) {
  %909 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %910 = %909.0;
  (%910,)
}

def @func_10372() -> (Tensor[(2, 9, 9), int32],) {
  %913 = fn () -> (Tensor[(2, 9, 9), int32],) {
    %911 = @func_6658() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %912 = %911.0;
    (%912,)
  };
  %913() /* ty=(Tensor[(2, 9, 9), int32],) */
}

def @func_7002() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) {
  %914 = @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */;
  %915 = %914.0;
  %916 = @func_3758() /* ty=Tensor[(2, 9, 9), float64] */;
  (%915, %916)
}

def @func_10535() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
  %921 = fn () -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) {
    %917 = @func_4882() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %918 = @func_8610() /* ty=Tensor[(2, 9, 9), float64] */;
    %919 = %917.0;
    %920 = @func_9583() /* ty=Tensor[(2, 9, 9), float64] */;
    (%918, %919, %920)
  };
  %921() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64]) */
}

def @func_1726() -> Tensor[(2, 9, 9), float64] {
  %922 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
  %922.0
}

def @func_2320() -> Tensor[(2, 9, 9), bool] {
  %923 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
  %923.0
}

def @func_3865() -> (Tensor[(7, 14), float32],) {
  %925 = fn () -> (Tensor[(7, 14), float32],) {
    %924 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
    (%924,)
  };
  %925() /* ty=(Tensor[(7, 14), float32],) */
}

def @func_10956(%var_10955: Tensor[(21, 5), float64]) -> (Tensor[(21, 5), bool], Tensor[(2, 9, 9), float64]) {
  %934 = fn (%var_10928: Tensor[(21, 5), float64]) -> (Tensor[(21, 5), bool], Tensor[(2, 9, 9), float64]) {
    %926 = @func_6047() /* ty=Tensor[(21, 5), float64] */;
    %927 = cast(%var_10928, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
    %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(2), int32] */;
    %929 = cast(%926, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
    %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %931 = @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */;
    %932 = greater_equal(%929, %930) /* ty=Tensor[(21, 5), bool] */;
    %933 = %931.0;
    (%932, %933)
  };
  %934(%var_10955) /* ty=(Tensor[(21, 5), bool], Tensor[(2, 9, 9), float64]) */
}

def @func_4054() -> (Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
  %938 = fn () -> (Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) {
    %935 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
    %936 = @func_3564() /* ty=Tensor[(2, 9, 9), float32] */;
    %937 = %935.1;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(21, 5), float64]) */
}

def @func_6548() -> (Tensor[(7, 7, 2), float32],) {
  @func_6546() /* ty=(Tensor[(7, 7, 2), float32],) */
}

def @func_7795() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
  %943 = fn () -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) {
    %939 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %940 = @func_6881() /* ty=Tensor[(2, 9, 9), float64] */;
    %941 = %939.0;
    %942 = @func_1648() /* ty=Tensor[(2, 9, 9), int32] */;
    (%940, %941, %942)
  };
  %943() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */
}

def @func_2620(%var_2619: Tensor[(14, 7, 7), bool]) -> (Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) {
  %951 = fn (%var_2604: Tensor[(14, 7, 7), bool]) -> (Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) {
    %944 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 7, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 7, 7), bool] */;
    %945 = shape_of(%var_2604, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%var_2604, dtype="bool") /* ty=Tensor[(14, 7, 7), bool] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %948 = @func_1397() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %949 = logical_and(%946, %947) /* ty=Tensor[(14, 7, 7), bool] */;
    %950 = %948.0;
    (%949, %950)
  };
  %951(%var_2619) /* ty=(Tensor[(14, 7, 7), bool], Tensor[(2, 9, 9), float32]) */
}

def @func_2283(%var_2281: Tensor[(98, 1), float32]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(98, 1), float32], Tensor[(1008), int64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(12, 7, 12), float32]) {
  @func_2280(%var_2281) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(98, 1), float32], Tensor[(1008), int64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(12, 7, 12), float32]) */
}

def @func_1155() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  %958 = fn () -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
    %952 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %953 = @func_398() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %954 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
    %955 = %952.0;
    %956 = %953.0;
    %957 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    (%954, %955, %956, %957)
  };
  %958() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */
}

def @func_858(%var_857: Tensor[(21, 5), float64]) -> (Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) {
  %974 = fn (%var_845: Tensor[(21, 5), float64]) -> (Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) {
    %959 = cast(%var_845, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %960 = cast(%var_845, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %961 = reshape(%959, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
    %962 = reshape(%960, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
    %963 = @func_561(%961, %962) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
    %964 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
    %965 = %964.0;
    %966 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %967 = %966.0;
    %968 = cast(%967, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
    %969 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
    %970 = cast(%965, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
    %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %972 = %963.2;
    %973 = logical_or(%970, %971) /* ty=Tensor[(2, 9, 9), bool] */;
    (%972, %var_845, %973)
  };
  %974(%var_857) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */
}

def @func_3526() -> Tensor[(2, 9, 9), float64] {
  %976 = fn () -> Tensor[(2, 9, 9), float64] {
    %975 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
    %975.0
  };
  %976() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_11140() -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %977 = @func_4882() /* ty=(Tensor[(2, 9, 9), float32],) */;
  %978 = @func_6720() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64]) */;
  %979 = @func_2320() /* ty=Tensor[(2, 9, 9), bool] */;
  %980 = %977.0;
  %981 = @func_6106() /* ty=Tensor[(2, 9, 9), float64] */;
  %982 = @func_1726() /* ty=Tensor[(2, 9, 9), float64] */;
  %983 = %978.0;
  (%979, %980, %981, %982, %983)
}

def @func_4619() -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) {
  %992 = fn () -> (Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) {
    %984 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
    %985 = %984.1;
    %986 = cast(%985, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
    %987 = asin(%986) /* ty=Tensor[(7, 7, 2), float32] */;
    %988 = cast(%987, dtype="float32") /* ty=Tensor[(7, 7, 2), float32] */;
    %989 = reshape(%988, newshape=[98, 1]) /* ty=Tensor[(98, 1), float32] */;
    %990 = @func_2280(%989) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 7, 2), float32], Tensor[(98, 1), float32], Tensor[(1008), int64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(12, 7, 12), float32]) */;
    %991 = %990.4;
    (%987, %991)
  };
  %992() /* ty=(Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float32]) */
}

def @func_2479() -> (Tensor[(7, 7, 2), float32],) {
  @func_2477() /* ty=(Tensor[(7, 7, 2), float32],) */
}

def @func_4883() -> (Tensor[(2, 9, 9), float32],) {
  %995 = fn () -> (Tensor[(2, 9, 9), float32],) {
    %993 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
    %994 = %993.0;
    (%994,)
  };
  %995() /* ty=(Tensor[(2, 9, 9), float32],) */
}

def @func_3547() -> (Tensor[(7, 14), float32], Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), int32]) {
  %996 = cast(meta[relay.Constant][36] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %997 = reshape(%996, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %998 = @func_856(%997) /* ty=(Tensor[(7, 3, 5), bool], Tensor[(21, 5), float64], Tensor[(2, 9, 9), bool]) */;
  %999 = @func_3188() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), int32]) */;
  %1000 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %1001 = %998.0;
  %1002 = %999.1;
  (%1000, %1001, meta[relay.Constant][36] /* ty=Tensor[(21, 5), float64] */, %1002)
}

def @func_6038(%var_6037: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) {
  %1009 = fn (%var_6029: Tensor[(686), bool]) -> (Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) {
    %1003 = @func_4289() /* ty=(Tensor[(2, 9, 9), int32],) */;
    %1004 = cast(%var_6029, dtype="bool") /* ty=Tensor[(686), bool] */;
    %1005 = reshape(%1004, newshape=[686]) /* ty=Tensor[(686), bool] */;
    %1006 = @func_4397(%1005) /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(686), bool], Tensor[(2, 9, 9), float32]) */;
    %1007 = %1003.0;
    %1008 = %1006.1;
    (%1007, %1008, %var_6029)
  };
  %1009(%var_6037) /* ty=(Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32], Tensor[(686), bool]) */
}

def @func_2857() -> Tensor[(2, 9, 9), float64] {
  @func_338() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_10442() -> (Tensor[(2, 9, 9), float64],) {
  %1012 = fn () -> (Tensor[(2, 9, 9), float64],) {
    %1010 = @func_7794() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
    %1011 = %1010.1;
    (%1011,)
  };
  %1012() /* ty=(Tensor[(2, 9, 9), float64],) */
}

def @func_1209(%var_1199: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float64], Tensor[(7, 3, 5), float64], Tensor[(105), float64], Tensor[(7, 3, 5), float32]) {
  %1013 = cast(%var_1199, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1014 = cast(%var_1199, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1015 = reshape(%1013, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %1016 = reshape(%1014, newshape=[7, 3, 5]) /* ty=Tensor[(7, 3, 5), float64] */;
  %1017 = @func_561(%1015, %1016) /* ty=(Tensor[(7, 3, 5), float64], Tensor[(7, 3, 5), float32], Tensor[(7, 3, 5), bool]) */;
  %1018 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %1020 = cast(%1018, dtype="float64") /* ty=Tensor[(2, 9, 9), float64] */;
  %1021 = reshape(%1019, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %1022 = reshape(%1020, newshape=[2, 9, 9]) /* ty=Tensor[(2, 9, 9), float64] */;
  %1023 = @func_667(%1021, %1022) /* ty=(Tensor[(2, 9, 9), int64], Tensor[(7, 3, 5), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), bool]) */;
  %1024 = %1017.0;
  %1025 = %1023.1;
  (%1018, %1024, %var_1199, %1025)
}

def @func_4219() -> (Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) {
  %1026 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
  %1027 = cast(%1026, dtype="float32") /* ty=Tensor[(2, 9, 9), float32] */;
  %1028 = @func_2477() /* ty=(Tensor[(7, 7, 2), float32],) */;
  %1029 = sigmoid(%1027) /* ty=Tensor[(2, 9, 9), float32] */;
  %1030 = %1028.0;
  (%1029, %1030)
}

def @func_9429() -> Tensor[(2, 9, 9), float64] {
  @func_438() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_1367() -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %1047 = fn () -> (Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
    %1031 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    %1032 = @func_438() /* ty=Tensor[(2, 9, 9), float64] */;
    %1033 = cast(%1032, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
    %1034 = shape_of(%1031, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1035 = cast(%1031, dtype="bool") /* ty=Tensor[(2, 9, 9), bool] */;
    %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1037 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
    %1038 = @func_1154() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */;
    %1039 = @func_744() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(7, 3, 5), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), int32]) */;
    %1040 = less_equal(%1035, %1036) /* ty=Tensor[(2, 9, 9), bool] */;
    %1041 = %1037.3;
    %1042 = %1038.3;
    %1043 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    %1044 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
    %1045 = %1039.2;
    %1046 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
    (%1040, %1041, %1042, %1043, %1044, %1045, %1046)
  };
  %1047() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */
}

def @func_9517(%var_9516: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64]) {
  %1056 = fn (%var_9506: Tensor[(105), float64]) -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64]) {
    %1048 = @func_1366() /* ty=(Tensor[(2, 9, 9), bool], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */;
    %1049 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %1050 = cast(%var_9506, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1051 = reshape(%1050, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %1052 = @func_7672(%1051) /* ty=(Tensor[(7, 14), float32], Tensor[(105), float64], Tensor[(2, 9, 9), float32], Tensor[(21, 5), bool]) */;
    %1053 = %1048.4;
    %1054 = %1049.0;
    %1055 = %1052.2;
    (%1053, %1054, %1055, %var_9506)
  };
  %1056(%var_9516) /* ty=(Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float32], Tensor[(105), float64]) */
}

def @func_6407() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
  %1061 = fn () -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) {
    %1057 = @func_3381() /* ty=(Tensor[(2, 9, 9), float64],) */;
    %1058 = @func_1799() /* ty=(Tensor[(2, 9, 9), float64],) */;
    %1059 = %1057.0;
    %1060 = %1058.0;
    (%1059, %1060)
  };
  %1061() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float64]) */
}

def @func_7115() -> Tensor[(7, 14), float32] {
  @func_7113() /* ty=Tensor[(7, 14), float32] */
}

def @func_5736() -> (Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) {
  @func_5734() /* ty=(Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64]) */
}

def @func_924() -> Tensor[(2, 9, 9), float32] {
  @func_922() /* ty=Tensor[(2, 9, 9), float32] */
}

def @func_3151(%var_3149: Tensor[(55, 15), int16], %var_3150: Tensor[(1008), int64]) -> (Tensor[(98), float32], Tensor[(98), float32], Tensor[(105), float64], Tensor[(55, 15), int16], Tensor[(105), float64], Tensor[(1008), int64]) {
  %1076 = fn (%var_3129: Tensor[(55, 15), int16], %var_3131: Tensor[(1008), int64]) -> (Tensor[(98), float32], Tensor[(98), float32], Tensor[(105), float64], Tensor[(55, 15), int16], Tensor[(105), float64], Tensor[(1008), int64]) {
    %1062 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
    %1063 = @func_1546() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(7, 14), float32], Tensor[(98), float32]) */;
    %1064 = cast(%var_3129, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
    %1065 = cast(%var_3129, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
    %1066 = cast(meta[relay.Constant][37] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1067 = cast(%var_3131, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %1068 = reshape(%1064, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), int16] */;
    %1069 = reshape(%1065, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), int16] */;
    %1070 = reshape(%1066, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
    %1071 = reshape(%1067, newshape=[4, 252]) /* ty=Tensor[(4, 252), int64] */;
    %1072 = @func_2565(%1068, %1069, %1070, %1071) /* ty=(Tensor[(11, 15, 5), int16], Tensor[(105), float64], Tensor[(7, 15), float64], Tensor[(12, 7, 12), int64], Tensor[(4, 252), int64], Tensor[(2, 9, 9), int32], Tensor[(105), float64], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float32]) */;
    %1073 = %1062.2;
    %1074 = %1063.2;
    %1075 = %1072.6;
    (%1073, %1074, %1075, %var_3129, meta[relay.Constant][37] /* ty=Tensor[(105), float64] */, %var_3131)
  };
  %1076(%var_3149, %var_3150) /* ty=(Tensor[(98), float32], Tensor[(98), float32], Tensor[(105), float64], Tensor[(55, 15), int16], Tensor[(105), float64], Tensor[(1008), int64]) */
}

def @func_4841() -> Tensor[(2, 9, 9), float64] {
  %1077 = fn () -> Tensor[(2, 9, 9), float64] {
    @func_1494() /* ty=Tensor[(2, 9, 9), float64] */
  };
  %1077() /* ty=Tensor[(2, 9, 9), float64] */
}

def @func_5568() -> (Tensor[(2, 9, 9), float32],) {
  %1080 = fn () -> (Tensor[(2, 9, 9), float32],) {
    %1078 = @func_261() /* ty=(Tensor[(2, 9, 9), float32],) */;
    %1079 = %1078.0;
    (%1079,)
  };
  %1080() /* ty=(Tensor[(2, 9, 9), float32],) */
}

def @func_8300() -> (Tensor[(2, 9, 9), float64],) {
  %1081 = @func_338() /* ty=Tensor[(2, 9, 9), float64] */;
  (%1081,)
}

def @func_7113() -> Tensor[(7, 14), float32] {
  @func_4456() /* ty=Tensor[(7, 14), float32] */
}

def @func_5929() -> (Tensor[(2, 9, 9), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8]) {
  %1082 = @func_4168() /* ty=(Tensor[(1, 16, 9), float32], Tensor[(2, 9, 9), uint8], Tensor[(21, 5), float64], Tensor[(2, 9, 9), float64]) */;
  %1083 = @func_922() /* ty=Tensor[(2, 9, 9), float32] */;
  %1084 = @func_3648() /* ty=Tensor[(2, 9, 9), float64] */;
  %1085 = %1082.1;
  (%1083, %1084, %1085)
}

def @func_10767(%var_10765: Tensor[(11, 7, 8), uint16], %var_10766: Tensor[(11, 7, 8), uint16]) -> Tensor[(11, 7, 8), uint16] {
  @func_10763(%var_10765, %var_10766) /* ty=Tensor[(11, 7, 8), uint16] */
}

def @func_1906() -> (Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) {
  @func_1904() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), uint8], Tensor[(2, 9, 9), float64], Tensor[(105), float64], Tensor[(7, 7, 2), float32], Tensor[(2, 9, 9), float64], Tensor[(2, 9, 9), float32]) */
}

def @func_4908() -> Tensor[(7, 7, 2), float32] {
  %1087 = fn () -> Tensor[(7, 7, 2), float32] {
    %1086 = @func_4219() /* ty=(Tensor[(2, 9, 9), float32], Tensor[(7, 7, 2), float32]) */;
    %1086.1
  };
  %1087() /* ty=Tensor[(7, 7, 2), float32] */
}

def @func_9056(%var_9019: Tensor[(7, 6, 5), float32]) -> (Tensor[(7, 6, 5), float32], Tensor[(2, 9, 9), int32], Tensor[(2, 9, 9), float64], Tensor[(7, 6, 5), bool], Tensor[(2, 9, 9), float64]) {
  %1088 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %1089 = shape_of(%var_9019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%var_9019, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1092 = @func_5667() /* ty=(Tensor[(2, 9, 9), int32],) */;
  %1093 = @func_4019() /* ty=(Tensor[(2, 9, 9), float64], Tensor[(21, 5), float64], Tensor[(105), float64]) */;
  %1094 = cast(%var_9019, dtype="bool") /* ty=Tensor[(7, 6, 5), bool] */;
  %1095 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(7, 6, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 6, 5), float32] */, dtype="bool") /* ty=Tensor[(7, 6, 5), bool] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1098 = @func_8797() /* ty=(Tensor[(2, 9, 9), float64],) */;
  %1099 = mod(%1090, %1091) /* ty=Tensor[(7, 6, 5), float32] */;
  %1100 = %1092.0;
  %1101 = %1093.0;
  %1102 = equal(%1096, %1097) /* ty=Tensor[(7, 6, 5), bool] */;
  %1103 = %1098.0;
  (%1099, %1100, %1101, %1102, %1103)
}

def @func_7939(%var_7918: uint16, %var_7919: Tensor[(462), uint16]) -> (Tensor[(7, 14), float32], Tensor[(7, 6, 11), uint16], uint16, Tensor[(462), uint16]) {
  %1104 = cast(%var_7918, dtype="uint16") /* ty=uint16 */;
  %1105 = cast(%var_7919, dtype="uint16") /* ty=Tensor[(462), uint16] */;
  %1106 = reshape(%1104, newshape=[]) /* ty=uint16 */;
  %1107 = reshape(%1105, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint16] */;
  %1108 = @func_5522(%1106, %1107) /* ty=(Tensor[(7, 6, 11), uint16],) */;
  %1109 = @func_1927() /* ty=Tensor[(7, 14), float32] */;
  %1110 = %1108.0;
  (%1109, %1110, %var_7918, %var_7919)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen533/build/output.py:3555: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen533/build/output.py:3560: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen533/build/output.py:3580: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')

===================================
#[version = "0.0.5"]
def @main() -> ((Tensor[(10, 6, 7), float64],), ()) {
  let %x: Tensor[(10, 6, 7), float64] = meta[relay.Constant][0] /* ty=Tensor[(10, 6, 7), float64] */;
  let %x1: Tensor[(10, 6, 7), float64] = zeros_like(%x) /* ty=Tensor[(10, 6, 7), float64] */;
  let %x2: (Tensor[(10, 6, 7), float64],) = (%x,);
  %0 = zeros(shape=[10, 6, 7], dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  let %x3: (Tensor[(10, 6, 7), float64],) = (%0,);
  %1 = ones(shape=[10, 6, 7], dtype="float64") /* ty=Tensor[(10, 6, 7), float64] */;
  %2 = (%1,);
  %3 = %2.0;
  %4 = (
    let %x4: Tensor[(10, 6, 7), float64] = add(%x1, %3) /* ty=Tensor[(10, 6, 7), float64] */;
    ()
  );
  (%x2, %4)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen533/build/output.py", line 3585, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(420) tvmgen_default_fused_zeros_kernel0(double* __restrict__ T_full) {
  T_full[(((int)threadIdx.x))] = 0.000000e+00;
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


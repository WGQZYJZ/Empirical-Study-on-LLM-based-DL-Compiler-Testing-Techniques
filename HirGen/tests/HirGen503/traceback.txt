==========mod==========
#[version = "0.0.5"]
def @func_5813() -> Tensor[(5, 7, 12), uint16] {
  %0 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %0.0
}

def @func_3861(%var_3823: Tensor[(288), float32], %var_3826: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) {
  %1 = cast(%var_3823, dtype="float32") /* ty=Tensor[(288), float32] */;
  %2 = reshape(%1, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
  %3 = @func_926(%2) /* ty=(Tensor[(12, 2, 12), float32],) */;
  %4 = cast(%var_3826, dtype="int64") /* ty=Tensor[(360), int64] */;
  %5 = reshape(%4, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %6 = @func_1313(%5) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */;
  %7 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
  %8 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %9 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %10 = %3.0;
  %11 = %6.5;
  %12 = %7.0;
  (%8, %9, %10, %var_3823, %11, %var_3826, %12)
}

def @func_10243(%var_10208: Tensor[(300), bool]) -> (Tensor[(5, 7, 12), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(800), bool]) {
  %13 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
  %14 = cast(%var_10208, dtype="bool") /* ty=Tensor[(300), bool] */;
  %15 = reshape(%14, newshape=[300, 1]) /* ty=Tensor[(300, 1), bool] */;
  %16 = @func_4979(%15) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) */;
  %17 = @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %18 = @func_7175() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %21 = reshape(%19, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %22 = reshape(%20, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %23 = @func_2492(%21, %22) /* ty=(Tensor[(10, 16, 5), uint32],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="bool") /* ty=Tensor[(10, 16, 5), bool] */;
  %26 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(800), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(800), uint32] */, dtype="bool") /* ty=Tensor[(800), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?), bool] */;
  %29 = %13.0;
  %30 = %16.1;
  %31 = %17.0;
  %32 = %18.0;
  %33 = logical_or(%27, %28) /* ty=Tensor[(800), bool] */;
  (%29, %30, %var_10208, %31, %32, %33)
}

def @func_115(%var_100: Tensor[(8, 9, 12), float64]) -> Tensor[(8, 9, 12), uint64] {
  %34 = cast(%var_100, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %35 = sinh(%34) /* ty=Tensor[(8, 9, 12), float64] */;
  %36 = cast(%var_100, dtype="uint64") /* ty=Tensor[(8, 9, 12), uint64] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="uint64") /* ty=Tensor[(8, 9, 12), uint64] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%38, %39) /* ty=Tensor[(8, 9, 12), uint64] */
}

def @func_3106(%var_3102: Tensor[(1, 15, 13), float64]) -> (Tensor[(1, 15, 13), float64],) {
  %40 = cast(%var_3102, dtype="float64") /* ty=Tensor[(1, 15, 13), float64] */;
  %41 = sinh(%40) /* ty=Tensor[(1, 15, 13), float64] */;
  (%41,)
}

def @func_5442(%var_5389: Tensor[(200), float64], %var_5436: Tensor[(864), float64]) -> (Tensor[(13, 13, 2), uint16], Tensor[(8, 5, 5), float64], Tensor[(200), float64], Tensor[(13, 13, 2), float64], Tensor[(8, 13, 10), float32], Tensor[(1040), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(864), float64]) {
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %43 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %46 = less(%44, %45) /* ty=Tensor[(13, 13, 2), bool] */;
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="uint16") /* ty=Tensor[(13, 13, 2), uint16] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="uint16") /* ty=Tensor[(13, 13, 2), uint16] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %51 = cast(%var_5389, dtype="float64") /* ty=Tensor[(200), float64] */;
  %52 = reshape(%51, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
  %53 = @func_5139(%52) /* ty=(Tensor[(8, 5, 5), float64],) */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %56 = reshape(%55, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), float32] */;
  %57 = @func_1204(%56) /* ty=(Tensor[(8, 13, 10), float32],) */;
  %58 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %59 = reshape(%58, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %60 = @func_1313(%59) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */;
  %61 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %62 = cast(%var_5436, dtype="float64") /* ty=Tensor[(864), float64] */;
  %63 = reshape(%61, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %64 = reshape(%62, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %65 = @func_1694(%63, %64) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %66 = add(%49, %50) /* ty=Tensor[(13, 13, 2), uint16] */;
  %67 = %53.0;
  %68 = sinh(%54) /* ty=Tensor[(13, 13, 2), float64] */;
  %69 = %57.0;
  %70 = %60.0;
  %71 = %65.3;
  (%66, %67, %var_5389, %68, %69, meta[relay.Constant][3] /* ty=Tensor[(1040), float32] */, %70, meta[relay.Constant][4] /* ty=Tensor[(360), int64] */, %71, %var_5436)
}

def @func_5197(%var_5191: Tensor[(9504), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(480), float32], Tensor[(11, 864), float64], Tensor[(360), int64], Tensor[(36, 24), float64], Tensor[(9504), float64]) {
  %72 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %73 = cast(meta[relay.Constant][5] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %74 = reshape(%73, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %75 = @func_2702(%74) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %77 = %72.0;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %79 = cast(meta[relay.Constant][7] /* ty=Tensor[(36, 24), float64] */, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
  %80 = cast(%var_5191, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %81 = reshape(%76, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %82 = reshape(%78, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
  %83 = reshape(%79, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %84 = reshape(%80, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
  %85 = @func_4149(%81, %82, %83, %84) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
  %86 = %75.2;
  %87 = %85.3;
  (%77, %86, meta[relay.Constant][5] /* ty=Tensor[(480), float32] */, %87, meta[relay.Constant][6] /* ty=Tensor[(360), int64] */, meta[relay.Constant][7] /* ty=Tensor[(36, 24), float64] */, %var_5191)
}

def @func_5251() -> Tensor[(5, 7, 12), uint16] {
  @func_4878() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_9766() -> Tensor[(5, 7, 12), uint16] {
  @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_5575() -> Tensor[(15, 2, 12), uint16] {
  @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_3965(%var_3881: Tensor[(300), int32], %var_3896: Tensor[(1040), float32], %var_3917: Tensor[(288), float32]) -> (Tensor[(480), float32], Tensor[(60), int32], Tensor[(12, 5, 5), uint32], Tensor[(1040), float32], Tensor[(360), int64], Tensor[(210), float64], Tensor[(288), float32], Tensor[(8, 9, 12), float64], Tensor[(8, 13, 10), float32]) {
  %88 = @func_3669() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */;
  %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %90 = cast(%var_3881, dtype="int32") /* ty=Tensor[(300), int32] */;
  %91 = reshape(%89, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), int32] */;
  %92 = reshape(%90, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), int32] */;
  %93 = @func_1468(%91, %92) /* ty=Tensor[(12, 5, 5), bool] */;
  %94 = cast(%var_3881, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%93, dtype="uint32") /* ty=Tensor[(12, 5, 5), uint32] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %98 = cast(meta[relay.Constant][9] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %99 = cast(%var_3917, dtype="float32") /* ty=Tensor[(288), float32] */;
  %100 = reshape(%98, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %101 = reshape(%99, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %102 = @func_1770(%100, %101) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %103 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %104 = cast(%var_3896, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %105 = reshape(%104, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), float32] */;
  %106 = @func_1204(%105) /* ty=(Tensor[(8, 13, 10), float32],) */;
  %107 = %106.0;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %109 = sqrt(%108) /* ty=Tensor[(8, 13, 10), float64] */;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %111 = %88.3;
  %112 = bitwise_xor(%96, %97) /* ty=Tensor[(12, 5, 5), uint32] */;
  %113 = %102.3;
  %114 = %103.0;
  %115 = acos(%110) /* ty=Tensor[(8, 13, 10), float32] */;
  (%111, meta[relay.Constant][8] /* ty=Tensor[(60), int32] */, %112, %var_3896, %113, meta[relay.Constant][9] /* ty=Tensor[(210), float64] */, %var_3917, %114, %115)
}

def @func_6526() -> (Tensor[(15, 2, 12), uint16],) {
  %116 = @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %117 = %116.0;
  (%117,)
}

def @func_8264() -> (Tensor[(15, 2, 12), float64],) {
  %118 = @func_5953() /* ty=Tensor[(15, 2, 12), float64] */;
  (%118,)
}

def @func_1422() -> (Tensor[(5, 7, 12), uint16],) {
  %119 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%119,)
}

def @func_8700() -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(300), bool]) {
  %120 = cast(meta[relay.Constant][10] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %121 = reshape(%120, newshape=[150, 2]) /* ty=Tensor[(150, 2), bool] */;
  %122 = @func_7046(%121) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(9504), bool], Tensor[(5, 7, 12), bool], Tensor[(15, 2, 12), bool], Tensor[(150, 2), bool], Tensor[(15, 2, 12), uint16]) */;
  %123 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  %124 = %122.2;
  (%123, %124, meta[relay.Constant][10] /* ty=Tensor[(300), bool] */)
}

def @func_2771() -> (Tensor[(5, 7, 12), float32],) {
  %125 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %126 = %125.0;
  %127 = cast(%126, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %128 = cosh(%127) /* ty=Tensor[(5, 7, 12), float32] */;
  (%128,)
}

def @func_3338(%var_3323: Tensor[(5, 7, 12), uint16]) -> (Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), bool]) {
  %129 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %130 = cast(%var_3323, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%129, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %134 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  %135 = less_equal(%132, %133) /* ty=Tensor[(5, 7, 12), bool] */;
  (%134, %135)
}

def @func_7959() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %136 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
  %137 = @func_6604() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %138 = %136.1;
  %139 = %137.1;
  (%138, %139)
}

def @func_2380() -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) {
  %140 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %142 = reshape(%141, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %143 = @func_1869(%142) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */;
  %144 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %145 = cast(meta[relay.Constant][13] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
  %146 = reshape(%144, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), int32] */;
  %147 = reshape(%145, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), int32] */;
  %148 = %140.0;
  %149 = %143.2;
  %150 = @func_1468(%146, %147) /* ty=Tensor[(12, 5, 5), bool] */;
  (%148, %149, meta[relay.Constant][11] /* ty=Tensor[(864), float64] */, %150, meta[relay.Constant][12] /* ty=Tensor[(60), int32] */, meta[relay.Constant][13] /* ty=Tensor[(300), int32] */)
}

def @func_1313(%var_1218: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) {
  %151 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %152 = cast(%var_1218, dtype="int64") /* ty=Tensor[(360), int64] */;
  %153 = cast(meta[relay.Constant][14] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %154 = reshape(%152, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %155 = reshape(%153, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %156 = @func_601(%154, %155) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %157 = cast(meta[relay.Constant][14] /* ty=Tensor[(864), float64] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %158 = sigmoid(%157) /* ty=Tensor[(864), float32] */;
  %159 = cast(%158, dtype="float64") /* ty=Tensor[(864), float64] */;
  %160 = atanh(%159) /* ty=Tensor[(864), float64] */;
  %161 = cast(%160, dtype="bool") /* ty=Tensor[(864), bool] */;
  %162 = shape_of(%158, dtype="int32") /* ty=Tensor[(1), int32] */;
  %163 = cast(%158, dtype="bool") /* ty=Tensor[(864), bool] */;
  %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?), bool] */;
  %165 = cast(%var_1218, dtype="int64") /* ty=Tensor[(360), int64] */;
  %166 = cast(%158, dtype="float64") /* ty=Tensor[(864), float64] */;
  %167 = reshape(%165, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %168 = reshape(%166, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %169 = @func_601(%167, %168) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %170 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %171 = %151.0;
  %172 = %156.2;
  %173 = less(%163, %164) /* ty=Tensor[(864), bool] */;
  %174 = %169.4;
  %175 = %170.0;
  (%171, %172, %var_1218, %173, %174, %175)
}

def @func_8191() -> Tensor[(5, 7, 12), uint16] {
  %176 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %176.0
}

def @func_9511() -> (Tensor[(5, 7, 12), uint16],) {
  %177 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %178 = %177.0;
  (%178,)
}

def @func_2623() -> (Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) {
  %179 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %180 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 2, 12), uint16] */, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %184 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %185 = cast(%184, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %186 = less_equal(%182, %183) /* ty=Tensor[(15, 2, 12), bool] */;
  %187 = sigmoid(%185) /* ty=Tensor[(5, 7, 12), float64] */;
  (%186, %187)
}

def @func_1998(%var_1971: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) {
  %188 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %189 = cast(%var_1971, dtype="int64") /* ty=Tensor[(360), int64] */;
  %190 = reshape(%189, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %191 = @func_1313(%190) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */;
  %192 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %193 = %188.1;
  %194 = @func_1528() /* ty=Tensor[(5, 7, 12), uint16] */;
  %195 = %191.1;
  %196 = %192.0;
  (%193, %194, %195, %var_1971, %196)
}

def @func_7128() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %197 = cast(meta[relay.Constant][16] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %198 = reshape(%197, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %199 = @func_5315(%198) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %200 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %201 = @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */;
  %202 = %199.0;
  %203 = @func_6790() /* ty=Tensor[(5, 7, 12), uint16] */;
  %204 = %200.1;
  (%201, %202, meta[relay.Constant][16] /* ty=Tensor[(480), float32] */, %203, %204)
}

def @func_853(%var_836: Tensor[(3, 10, 16), float32], %var_839: Tensor[(3, 10, 16), float32]) -> (Tensor[(3, 10, 16), int64],) {
  %205 = cast(%var_836, dtype="float32") /* ty=Tensor[(3, 10, 16), float32] */;
  %206 = sigmoid(%205) /* ty=Tensor[(3, 10, 16), float32] */;
  %207 = cast(%var_839, dtype="int64") /* ty=Tensor[(3, 10, 16), int64] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%206, dtype="int64") /* ty=Tensor[(3, 10, 16), int64] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %211 = minimum(%209, %210) /* ty=Tensor[(3, 10, 16), int64] */;
  (%211,)
}

def @func_2404(%var_2382: Tensor[(13, 9, 6), uint32]) -> (Tensor[(13, 9, 6), float64], Tensor[(13, 9, 6), float64]) {
  %212 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="uint32") /* ty=Tensor[(13, 9, 6), uint32] */;
  %213 = shape_of(%var_2382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_2382, dtype="uint32") /* ty=Tensor[(13, 9, 6), uint32] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %216 = logical_xor(%214, %215) /* ty=Tensor[(13, 9, 6), uint32] */;
  %217 = cast(%216, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %218 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %221 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %222 = mod(%219, %220) /* ty=Tensor[(13, 9, 6), float64] */;
  %223 = exp(%221) /* ty=Tensor[(13, 9, 6), float64] */;
  (%222, %223)
}

def @func_5553() -> (Tensor[(15, 2, 12), uint16],) {
  %224 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %225 = %224.5;
  (%225,)
}

def @func_4353(%var_4337: Tensor[(15, 2, 12), bool]) -> (Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) {
  %226 = @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */;
  %227 = %226.0;
  %228 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  %229 = cast(%228, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %230 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%227, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %233 = cast(%var_4337, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %234 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%228, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = mod(%231, %232) /* ty=Tensor[(15, 2, 12), float64] */;
  %238 = greater(%235, %236) /* ty=Tensor[(15, 2, 12), bool] */;
  (%237, %238)
}

def @func_7705(%var_7695: Tensor[(13, 9, 6), float64]) -> (Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), float32]) {
  %239 = @func_5646() /* ty=Tensor[(13, 9, 6), float64] */;
  %240 = cast(%var_7695, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %244 = divide(%242, %243) /* ty=Tensor[(13, 9, 6), float64] */;
  %245 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
  (%244, %245)
}

def @func_3035() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) {
  %246 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %247 = %246.0;
  %248 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%247, %248)
}

def @func_8820() -> (Tensor[(15, 2, 12), bool],) {
  %249 = @func_8248() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */;
  %250 = %249.2;
  (%250,)
}

def @func_5139(%var_5131: Tensor[(8, 5, 5), float64]) -> (Tensor[(8, 5, 5), float64],) {
  %251 = cast(%var_5131, dtype="float64") /* ty=Tensor[(8, 5, 5), float64] */;
  %252 = asinh(%251) /* ty=Tensor[(8, 5, 5), float64] */;
  (%252,)
}

def @func_10445() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %253 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %254 = @func_6315() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %255 = %253.0;
  %256 = %254.0;
  (%255, %256)
}

def @func_7938() -> (Tensor[(5, 7, 12), uint16],) {
  %257 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %258 = %257.2;
  (%258,)
}

def @func_9135() -> Tensor[(5, 7, 12), uint16] {
  %259 = @func_7128() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %259.1
}

def @main(%var_10915: Tensor[(9, 4, 5), float32]) -> (Tensor[(9, 4, 5), uint64],) {
  %260 = cast(%var_10915, dtype="float32") /* ty=Tensor[(9, 4, 5), float32] */;
  %261 = erf(%260) /* ty=Tensor[(9, 4, 5), float32] */;
  %262 = cast(%var_10915, dtype="uint64") /* ty=Tensor[(9, 4, 5), uint64] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="uint64") /* ty=Tensor[(9, 4, 5), uint64] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %266 = right_shift(%264, %265) /* ty=Tensor[(9, 4, 5), uint64] */;
  (%266,)
}

def @func_3669() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) {
  %267 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %268 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %269 = cast(meta[relay.Constant][18] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %270 = cast(meta[relay.Constant][18] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %271 = reshape(%269, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
  %272 = reshape(%270, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
  %273 = @func_853(%271, %272) /* ty=(Tensor[(3, 10, 16), int64],) */;
  %274 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 117), float32] */, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %275 = reshape(%274, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %276 = @func_3561(%275) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) */;
  %277 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
  %278 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(15, 117), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %279 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
  %282 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 117), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %283 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %285 = bitwise_or(%283, %284) /* ty=Tensor[(15, 117), uint64] */;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %287 = %267.0;
  %288 = %268.0;
  %289 = %273.0;
  %290 = @func_3019() /* ty=Tensor[(864), float64] */;
  %291 = %276.1;
  %292 = right_shift(%279, %280) /* ty=Tensor[(15, 117), uint64] */;
  %293 = log10(%286) /* ty=Tensor[(15, 117), float32] */;
  (%287, %288, %289, meta[relay.Constant][18] /* ty=Tensor[(480), float32] */, %290, %291, %292, %293)
}

def @func_2546() -> (Tensor[(15, 2, 12), uint16],) {
  %294 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
  (%294,)
}

def @func_6345() -> (Tensor[(5, 7, 12), uint16],) {
  %295 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%295,)
}

def @func_9566() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(13, 9, 6), float64], Tensor[(800), uint32]) {
  %296 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %297 = @func_6255() /* ty=(Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) */;
  %298 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %299 = %296.4;
  %300 = @func_5646() /* ty=Tensor[(13, 9, 6), float64] */;
  %301 = %297.1;
  (%298, %299, %300, %301)
}

def @func_6255() -> (Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) {
  %302 = cast(meta[relay.Constant][21] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %303 = cast(meta[relay.Constant][21] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %304 = reshape(%302, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %305 = reshape(%303, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %306 = @func_2492(%304, %305) /* ty=(Tensor[(10, 16, 5), uint32],) */;
  %307 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %310 = sqrt(%309) /* ty=Tensor[(5, 7, 12), float32] */;
  %311 = cast(%308, dtype="int64") /* ty=Tensor[(5, 7, 12), int64] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="int64") /* ty=Tensor[(5, 7, 12), int64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %315 = %306.0;
  %316 = right_shift(%313, %314) /* ty=Tensor[(5, 7, 12), int64] */;
  (%315, meta[relay.Constant][21] /* ty=Tensor[(800), uint32] */, %316)
}

def @func_7313(%var_7292: uint32, %var_7293: Tensor[(10, 9, 5), uint32], %var_7308: Tensor[(36, 10), bool]) -> (Tensor[(10, 9, 5), uint32], Tensor[(15, 2, 12), bool], Tensor[(36, 10), bool]) {
  %317 = cast(%var_7292, dtype="uint32") /* ty=uint32 */;
  %318 = cast(%var_7293, dtype="uint32") /* ty=Tensor[(10, 9, 5), uint32] */;
  %319 = cast(%var_7308, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
  %320 = reshape(%319, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
  %321 = @func_4353(%320) /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) */;
  %322 = subtract(%317, %318) /* ty=Tensor[(10, 9, 5), uint32] */;
  %323 = %321.1;
  (%322, %323, %var_7308)
}

def @func_9475(%var_9472: Tensor[(1040), float32]) -> (Tensor[(8, 9, 12), float64], Tensor[(12, 2, 12), float32], Tensor[(1040), float32]) {
  %324 = cast(%var_9472, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %325 = reshape(%324, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %326 = @func_1886(%325) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) */;
  %327 = @func_6578() /* ty=Tensor[(8, 9, 12), float64] */;
  %328 = %326.1;
  (%327, %328, %var_9472)
}

def @func_5475() -> (Tensor[(5, 7, 12), uint16],) {
  %329 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %330 = %329.0;
  (%330,)
}

def @func_7247() -> (Tensor[(5, 7, 12), uint16],) {
  %331 = @func_4838() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %332 = %331.0;
  (%332,)
}

def @func_1869(%var_1837: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) {
  %333 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %334 = %333.0;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %336 = cast(meta[relay.Constant][22] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %337 = cast(%var_1837, dtype="float64") /* ty=Tensor[(864), float64] */;
  %338 = reshape(%336, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %339 = reshape(%337, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %340 = @func_1694(%338, %339) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %341 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %342 = cast(meta[relay.Constant][22] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %343 = cast(%var_1837, dtype="float64") /* ty=Tensor[(864), float64] */;
  %344 = reshape(%342, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %345 = reshape(%343, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %346 = @func_1694(%344, %345) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %347 = rsqrt(%335) /* ty=Tensor[(5, 7, 12), float64] */;
  %348 = %340.0;
  %349 = %341.0;
  %350 = %346.1;
  (%347, %348, meta[relay.Constant][22] /* ty=Tensor[(360), int64] */, %var_1837, %349, %350)
}

def @func_3561(%var_3544: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) {
  %351 = cast(%var_3544, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %352 = atan(%351) /* ty=Tensor[(13, 15, 9), float32] */;
  %353 = @func_3247() /* ty=Tensor[(5, 7, 12), float32] */;
  (%352, %353)
}

def @func_9379(%var_9366: Tensor[(15, 2, 12), float64]) -> (Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), float64]) {
  %354 = @func_5953() /* ty=Tensor[(15, 2, 12), float64] */;
  %355 = cast(%var_9366, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %359 = cast(%354, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %360 = shape_of(%var_9366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_9366, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %363 = floor_mod(%357, %358) /* ty=Tensor[(15, 2, 12), float32] */;
  %364 = floor_divide(%361, %362) /* ty=Tensor[(15, 2, 12), float64] */;
  (%363, %364)
}

def @func_490() -> (Tensor[(5, 7, 12), uint16],) {
  %365 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %366 = %365.0;
  (%366,)
}

def @func_8083() -> Tensor[(5, 7, 12), uint16] {
  @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_3758(%var_3719: Tensor[(360), int64]) -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64]) {
  %367 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %368 = cast(%var_3719, dtype="int64") /* ty=Tensor[(360), int64] */;
  %369 = reshape(%368, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %370 = @func_1998(%369) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */;
  %371 = %367.1;
  %372 = %370.1;
  (%371, %372, %var_3719)
}

def @func_4149(%var_4119: Tensor[(360), int64], %var_4130: Tensor[(5, 7, 12), float32], %var_4142: Tensor[(864), float64], %var_4143: Tensor[(9504), float64]) -> (Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) {
  %373 = cast(%var_4119, dtype="int64") /* ty=Tensor[(360), int64] */;
  %374 = reshape(%373, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %375 = @func_3247() /* ty=Tensor[(5, 7, 12), float32] */;
  %376 = cast(%var_4130, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = cast(%var_4119, dtype="int64") /* ty=Tensor[(360), int64] */;
  %381 = cast(%var_4142, dtype="float64") /* ty=Tensor[(864), float64] */;
  %382 = cast(%var_4143, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %383 = reshape(%380, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %384 = reshape(%381, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %385 = reshape(%382, newshape=[11, 864]) /* ty=Tensor[(11, 864), float64] */;
  %386 = @func_1628(%383, %384, %385) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %387 = cast(%var_4142, dtype="float64") /* ty=Tensor[(864), float64] */;
  %388 = reshape(%387, newshape=[216, 4]) /* ty=Tensor[(216, 4), float64] */;
  %389 = @func_2921(%388) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %390 = @func_553(%374) /* ty=Tensor[(15, 2, 12), bool] */;
  %391 = less(%378, %379) /* ty=Tensor[(5, 7, 12), bool] */;
  %392 = %386.3;
  %393 = %389.1;
  (%390, %var_4119, %391, %392, %var_4142, %var_4143, %393)
}

def @func_4838() -> (Tensor[(5, 7, 12), uint16],) {
  %394 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%394,)
}

def @func_6363() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %395 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
  %396 = @func_5251() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%395, %396)
}

def @func_5097() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64]) {
  %397 = @func_3801() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %398 = @func_4592() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32]) */;
  %399 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
  %400 = cast(meta[relay.Constant][23] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %401 = reshape(%400, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %402 = %397.0;
  %403 = %398.1;
  %404 = %399.1;
  %405 = @func_115(%401) /* ty=Tensor[(8, 9, 12), uint64] */;
  (%402, %403, %404, %405, meta[relay.Constant][23] /* ty=Tensor[(864), float64] */)
}

def @func_10693() -> Tensor[(15, 2, 12), uint32] {
  %406 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
  %406.2
}

def @func_601(%var_595: Tensor[(360), int64], %var_599: Tensor[(1, 864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) {
  %407 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %408 = cast(%var_595, dtype="int64") /* ty=Tensor[(360), int64] */;
  %409 = reshape(%408, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %410 = cast(%var_599, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %411 = reshape(%410, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %412 = %407.0;
  %413 = @func_553(%409) /* ty=Tensor[(15, 2, 12), bool] */;
  %414 = @func_115(%411) /* ty=Tensor[(8, 9, 12), uint64] */;
  (%412, %413, %var_595, %414, %var_599)
}

def @func_3247() -> Tensor[(5, 7, 12), float32] {
  %415 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %416 = %415.0;
  %417 = cast(%416, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  asin(%417) /* ty=Tensor[(5, 7, 12), float32] */
}

def @func_10051(%var_10027: Tensor[(800), uint32]) -> (Tensor[(15, 2, 12), bool], Tensor[(10, 16, 5), uint32], Tensor[(800), uint32]) {
  %418 = @func_7885() /* ty=(Tensor[(15, 2, 12), bool],) */;
  %419 = cast(%var_10027, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %420 = cast(%var_10027, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %421 = reshape(%419, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %422 = reshape(%420, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %423 = @func_2492(%421, %422) /* ty=(Tensor[(10, 16, 5), uint32],) */;
  %424 = %418.0;
  %425 = %423.0;
  (%424, %425, %var_10027)
}

def @func_2529() -> Tensor[(15, 2, 12), uint16] {
  @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_4979(%var_4968: Tensor[(300, 1), bool]) -> (Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) {
  %426 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %427 = %426.1;
  %428 = cast(%427, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %429 = cast(%var_4968, dtype="bool") /* ty=Tensor[(300, 1), bool] */;
  %430 = reshape(%428, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %431 = reshape(%429, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
  %432 = @func_4778(%430, %431) /* ty=(Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) */;
  %433 = %432.3;
  (%427, %433, %var_4968)
}

def @func_5953() -> Tensor[(15, 2, 12), float64] {
  %434 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
  %434.0
}

def @func_8972() -> (Tensor[(5, 7, 12), float32],) {
  %435 = @func_6315() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %436 = %435.1;
  (%436,)
}

def @func_1174(%var_1115: Tensor[(288), float32]) -> (Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16]) {
  %437 = cast(%var_1115, dtype="float32") /* ty=Tensor[(288), float32] */;
  %438 = reshape(%437, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
  %439 = @func_926(%438) /* ty=(Tensor[(12, 2, 12), float32],) */;
  %440 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %441 = cast(%440, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %442 = log(%441) /* ty=Tensor[(5, 7, 12), float64] */;
  %443 = cast(%440, dtype="int32") /* ty=Tensor[(5, 7, 12), int32] */;
  %444 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%442, dtype="int32") /* ty=Tensor[(5, 7, 12), int32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %447 = add(%445, %446) /* ty=Tensor[(5, 7, 12), int32] */;
  %448 = cast(%442, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %452 = %439.0;
  %453 = bitwise_or(%450, %451) /* ty=Tensor[(5, 7, 12), uint16] */;
  (%452, %var_1115, %453)
}

def @func_1819() -> (Tensor[(5, 7, 12), uint16],) {
  %454 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%454,)
}

def @func_7165() -> Tensor[(15, 2, 12), int16] {
  %455 = @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */;
  %456 = %455.4;
  %457 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 2, 12), uint16] */, dtype="int16") /* ty=Tensor[(15, 2, 12), int16] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="int16") /* ty=Tensor[(15, 2, 12), int16] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  right_shift(%459, %460) /* ty=Tensor[(15, 2, 12), int16] */
}

def @func_4926() -> (Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %461 = @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */;
  %462 = @func_2546() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %463 = %461.3;
  %464 = %462.0;
  %465 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %466 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%463, %464, %465, %466)
}

def @func_3527() -> (Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) {
  %467 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %468 = %467.0;
  %469 = cast(%468, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %470 = log(%469) /* ty=Tensor[(15, 2, 12), float64] */;
  %471 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
  (%470, %471)
}

def @func_10305(%var_10303: Tensor[(288), float32]) -> (Tensor[(15, 2, 12), uint16], Tensor[(288), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) {
  %472 = cast(meta[relay.Constant][25] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %473 = cast(%var_10303, dtype="float32") /* ty=Tensor[(288), float32] */;
  %474 = reshape(%472, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %475 = reshape(%473, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %476 = @func_1770(%474, %475) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %477 = @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */;
  %478 = %476.2;
  (%477, %478, meta[relay.Constant][25] /* ty=Tensor[(35, 6), float64] */, %var_10303)
}

def @func_1770(%var_1740: Tensor[(10, 3, 7), float64], %var_1744: Tensor[(288), float32]) -> (Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) {
  %479 = cast(%var_1740, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
  %480 = cast(%var_1744, dtype="float32") /* ty=Tensor[(288), float32] */;
  %481 = reshape(%480, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %482 = @func_1174(%481) /* ty=(Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16]) */;
  %483 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %484 = cast(meta[relay.Constant][27] /* ty=Tensor[(216, 4), float64] */, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
  %485 = reshape(%483, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %486 = reshape(%484, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %487 = @func_601(%485, %486) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %488 = sin(%479) /* ty=Tensor[(10, 3, 7), float64] */;
  %489 = %482.1;
  %490 = %487.2;
  (%488, %489, %var_1744, %490, meta[relay.Constant][26] /* ty=Tensor[(360), int64] */, meta[relay.Constant][27] /* ty=Tensor[(216, 4), float64] */)
}

def @func_8376() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), uint16]) {
  %491 = @func_6345() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %492 = @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
  %494 = @func_5553() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %495 = %491.0;
  %496 = cosh(%493) /* ty=Tensor[(15, 2, 12), float32] */;
  %497 = %494.0;
  (%495, %496, %497)
}

def @func_8434(%var_8432: Tensor[(864), float64]) -> (Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64], Tensor[(864), float64], Tensor[(200), float64], Tensor[(864), float64]) {
  %498 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
  %499 = @func_8264() /* ty=(Tensor[(15, 2, 12), float64],) */;
  %500 = cast(meta[relay.Constant][28] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %501 = cast(%var_8432, dtype="float64") /* ty=Tensor[(864), float64] */;
  %502 = reshape(%500, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %503 = reshape(%501, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %504 = @func_5442(%502, %503) /* ty=(Tensor[(13, 13, 2), uint16], Tensor[(8, 5, 5), float64], Tensor[(200), float64], Tensor[(13, 13, 2), float64], Tensor[(8, 13, 10), float32], Tensor[(1040), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(864), float64]) */;
  %505 = %498.1;
  %506 = %499.0;
  %507 = %504.9;
  (%505, %506, %507, meta[relay.Constant][28] /* ty=Tensor[(200), float64] */, %var_8432)
}

def @func_4046(%var_4028: Tensor[(7, 16, 9), float32]) -> Tensor[(7, 16, 9), float32] {
  %508 = cast(%var_4028, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %509 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(7, 16, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%510, %511) /* ty=Tensor[(7, 16, 9), float32] */
}

def @func_8740() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  %512 = @func_2771() /* ty=(Tensor[(5, 7, 12), float32],) */;
  %513 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %514 = %512.0;
  (%513, %514)
}

def @func_3478() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) {
  %515 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %516 = @func_1528() /* ty=Tensor[(5, 7, 12), uint16] */;
  %517 = cast(%516, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %518 = exp(%517) /* ty=Tensor[(5, 7, 12), float64] */;
  %519 = cast(%518, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %520 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%516, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %523 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %524 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 117), uint32] */, dtype="uint32") /* ty=Tensor[(6, 117), uint32] */;
  %525 = reshape(%524, newshape=[13, 9, 6]) /* ty=Tensor[(13, 9, 6), uint32] */;
  %526 = @func_2404(%525) /* ty=(Tensor[(13, 9, 6), float64], Tensor[(13, 9, 6), float64]) */;
  %527 = %515.0;
  %528 = greater(%521, %522) /* ty=Tensor[(5, 7, 12), bool] */;
  %529 = %523.3;
  %530 = %526.0;
  (%527, %528, %529, %530, meta[relay.Constant][30] /* ty=Tensor[(6, 117), uint32] */)
}

def @func_8748() -> Tensor[(5, 7, 12), uint16] {
  %531 = @func_7959() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %531.1
}

def @func_8895() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  %532 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %533 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %534 = %532.0;
  %535 = %533.0;
  (%534, %535)
}

def @func_9090(%var_9054: Tensor[(2, 6, 12), int16], %var_9069: Tensor[(360), int64], %var_9070: Tensor[(864), float64], %var_9083: Tensor[(288), float32]) -> (Tensor[(2, 6, 12), int16], Tensor[(864), float64], Tensor[(360), int64], Tensor[(864), float64], Tensor[(15, 117), float32], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(288), float32]) {
  %536 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %537 = cast(%var_9054, dtype="int16") /* ty=Tensor[(2, 6, 12), int16] */;
  %538 = cast(%var_9069, dtype="int64") /* ty=Tensor[(360), int64] */;
  %539 = cast(%var_9070, dtype="float64") /* ty=Tensor[(864), float64] */;
  %540 = reshape(%538, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %541 = reshape(%539, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %542 = @func_1389(%540, %541) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %543 = @func_3669() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */;
  %544 = cast(%var_9069, dtype="int64") /* ty=Tensor[(360), int64] */;
  %545 = reshape(%544, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %546 = @func_3758(%545) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64]) */;
  %547 = cast(%var_9083, dtype="float32") /* ty=Tensor[(288), float32] */;
  %548 = cast(%var_9069, dtype="int64") /* ty=Tensor[(360), int64] */;
  %549 = reshape(%547, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %550 = reshape(%548, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %551 = @func_3861(%549, %550) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) */;
  %552 = bitwise_and(%536, %537) /* ty=Tensor[(2, 6, 12), int16] */;
  %553 = %542.3;
  %554 = %543.7;
  %555 = %546.0;
  %556 = %551.0;
  (%552, %553, %var_9069, %var_9070, %554, %555, %556, %var_9083)
}

def @func_7732() -> (Tensor[(5, 7, 12), uint16],) {
  %557 = @func_6521() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) */;
  %558 = %557.0;
  (%558,)
}

def @func_8248() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) {
  %559 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %560 = @func_7529() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), float64], Tensor[(8, 9, 12), float64], Tensor[(300), bool], Tensor[(15, 2, 12), bool], Tensor[(9504), float64]) */;
  %561 = %559.1;
  %562 = @func_6486() /* ty=Tensor[(5, 7, 12), uint16] */;
  %563 = %560.6;
  (%561, %562, %563)
}

def @func_8557() -> (Tensor[(5, 7, 12), uint16],) {
  %564 = @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %565 = %564.1;
  (%565,)
}

def @func_10363(%var_10340: Tensor[(5, 16, 11), float32], %var_10343: Tensor[(5, 16, 11), float32]) -> (Tensor[(5, 16, 11), int16], Tensor[(864), float64], Tensor[(5, 16, 11), int8]) {
  %566 = cast(%var_10343, dtype="int16") /* ty=Tensor[(5, 16, 11), int16] */;
  %567 = shape_of(%var_10340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%var_10340, dtype="int16") /* ty=Tensor[(5, 16, 11), int16] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %570 = cast(%var_10340, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %571 = acos(%570) /* ty=Tensor[(5, 16, 11), float32] */;
  %572 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 16, 11), float32] */, dtype="int8") /* ty=Tensor[(5, 16, 11), int8] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="int8") /* ty=Tensor[(5, 16, 11), int8] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %576 = left_shift(%568, %569) /* ty=Tensor[(5, 16, 11), int16] */;
  %577 = @func_3019() /* ty=Tensor[(864), float64] */;
  %578 = bitwise_or(%574, %575) /* ty=Tensor[(5, 16, 11), int8] */;
  (%576, %577, %578)
}

def @func_4397(%var_4373: Tensor[(7, 8, 16), uint32], %var_4374: Tensor[(7, 8, 16), uint32], %var_4389: Tensor[(195), float64]) -> (Tensor[(7, 8, 16), float64], Tensor[(1, 15, 13), float64], Tensor[(195), float64]) {
  %579 = cast(%var_4374, dtype="bool") /* ty=Tensor[(7, 8, 16), bool] */;
  %580 = shape_of(%var_4373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_4373, dtype="bool") /* ty=Tensor[(7, 8, 16), bool] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %583 = less_equal(%581, %582) /* ty=Tensor[(7, 8, 16), bool] */;
  %584 = cast(%583, dtype="float64") /* ty=Tensor[(7, 8, 16), float64] */;
  %585 = cast(%var_4389, dtype="float64") /* ty=Tensor[(195), float64] */;
  %586 = reshape(%585, newshape=[1, 15, 13]) /* ty=Tensor[(1, 15, 13), float64] */;
  %587 = @func_3106(%586) /* ty=(Tensor[(1, 15, 13), float64],) */;
  %588 = atan(%584) /* ty=Tensor[(7, 8, 16), float64] */;
  %589 = %587.0;
  (%588, %589, %var_4389)
}

def @func_9928() -> (Tensor[(5, 7, 12), uint16],) {
  %590 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %591 = %590.0;
  (%591,)
}

def @func_10651() -> Tensor[(5, 7, 12), uint16] {
  %592 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
  %592.1
}

def @func_8210(%var_8203: Tensor[(12, 7, 11), int32], %var_8204: Tensor[(12, 7, 11), int32]) -> (Tensor[(12, 7, 11), bool],) {
  %593 = cast(%var_8204, dtype="bool") /* ty=Tensor[(12, 7, 11), bool] */;
  %594 = shape_of(%var_8203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%var_8203, dtype="bool") /* ty=Tensor[(12, 7, 11), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = less_equal(%595, %596) /* ty=Tensor[(12, 7, 11), bool] */;
  (%597,)
}

def @func_9167() -> Tensor[(5, 7, 12), uint16] {
  %598 = @func_8740() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %598.0
}

def @func_1053() -> Tensor[(5, 7, 12), uint16] {
  @func_818() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_8133() -> (Tensor[(7, 9, 14), int16],) {
  %599 = @func_6899() /* ty=(Tensor[(7, 9, 14), int16],) */;
  %600 = %599.0;
  (%600,)
}

def @func_1389(%var_1375: Tensor[(360), int64], %var_1376: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) {
  %601 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %602 = %601.0;
  %603 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 7, 12), uint16] */, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%602, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %607 = cast(%var_1375, dtype="int64") /* ty=Tensor[(360), int64] */;
  %608 = cast(%var_1376, dtype="float64") /* ty=Tensor[(864), float64] */;
  %609 = reshape(%607, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %610 = reshape(%608, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %611 = @func_601(%609, %610) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %612 = mod(%605, %606) /* ty=Tensor[(5, 7, 12), float32] */;
  %613 = %611.4;
  (%612, %613, %var_1375, %var_1376)
}

def @func_1204(%var_1200: Tensor[(8, 13, 10), float32]) -> (Tensor[(8, 13, 10), float32],) {
  %614 = cast(%var_1200, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %615 = sinh(%614) /* ty=Tensor[(8, 13, 10), float32] */;
  (%615,)
}

def @func_782(%var_771: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) {
  %616 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %617 = cast(%var_771, dtype="int64") /* ty=Tensor[(360), int64] */;
  %618 = reshape(%617, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %619 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %620 = @func_553(%618) /* ty=Tensor[(15, 2, 12), bool] */;
  %621 = cast(%620, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %622 = reshape(%621, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %623 = %616.0;
  %624 = %619.0;
  %625 = @func_553(%622) /* ty=Tensor[(15, 2, 12), bool] */;
  (%623, %620, %var_771, %624, %625)
}

def @func_10475() -> Tensor[(5, 7, 12), uint16] {
  %626 = @func_6521() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) */;
  %626.0
}

def @func_7999(%var_7974: Tensor[(14, 15, 5), int8], %var_7995: Tensor[(14, 15, 5), int8]) -> (Tensor[(14, 15, 5), int8], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(14, 15, 5), bool]) {
  %627 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 15, 5), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 5), int8] */;
  %628 = shape_of(%var_7974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_7974, dtype="int8") /* ty=Tensor[(14, 15, 5), int8] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %631 = cast(meta[relay.Constant][35] /* ty=Tensor[(864, 1), float64] */, dtype="float64") /* ty=Tensor[(864, 1), float64] */;
  %632 = reshape(%631, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %633 = @func_1869(%632) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */;
  %634 = cast(%var_7995, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %635 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(14, 15, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 15, 5), int8] */, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %638 = bitwise_and(%629, %630) /* ty=Tensor[(14, 15, 5), int8] */;
  %639 = @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */;
  %640 = %633.2;
  %641 = not_equal(%636, %637) /* ty=Tensor[(14, 15, 5), bool] */;
  (%638, %639, %640, meta[relay.Constant][35] /* ty=Tensor[(864, 1), float64] */, %641)
}

def @func_10720() -> Tensor[(864), float64] {
  @func_4725() /* ty=Tensor[(864), float64] */
}

def @func_2874() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) {
  %642 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %643 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %644 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %645 = %644.0;
  %646 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 2, 12), uint16] */, dtype="uint32") /* ty=Tensor[(15, 2, 12), uint32] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="uint32") /* ty=Tensor[(15, 2, 12), uint32] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %650 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %651 = %642.1;
  %652 = %643.0;
  %653 = bitwise_xor(%648, %649) /* ty=Tensor[(15, 2, 12), uint32] */;
  %654 = %650.0;
  (%651, %652, %653, %654)
}

def @func_6873() -> (Tensor[(5, 7, 12), uint16],) {
  %655 = @func_6345() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %656 = %655.0;
  (%656,)
}

def @func_5920() -> (Tensor[(15, 2, 12), uint16],) {
  %657 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %658 = %657.0;
  (%658,)
}

def @func_7885() -> (Tensor[(15, 2, 12), bool],) {
  %659 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  (%659,)
}

def @func_10559(%var_10477: int8, %var_10478: Tensor[(12, 14, 1), int8], %var_10516: Tensor[(800, 1), uint32]) -> (Tensor[(12, 14, 1), bool], Tensor[(13, 9, 6), float64], Tensor[(8, 5, 5), float64], Tensor[(5, 7, 12), float32], Tensor[(585, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(800, 200), bool]) {
  %660 = cast(%var_10477, dtype="bool") /* ty=bool */;
  %661 = cast(%var_10478, dtype="bool") /* ty=Tensor[(12, 14, 1), bool] */;
  %662 = @func_9566() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(13, 9, 6), float64], Tensor[(800), uint32]) */;
  %663 = cast(meta[relay.Constant][37] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %664 = reshape(%663, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
  %665 = @func_5139(%664) /* ty=(Tensor[(8, 5, 5), float64],) */;
  %666 = cast(meta[relay.Constant][38] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %667 = reshape(%666, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %668 = @func_3561(%667) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) */;
  %669 = cast(%var_10516, dtype="uint32") /* ty=Tensor[(800, 1), uint32] */;
  %670 = reshape(%669, newshape=[800]) /* ty=Tensor[(800), uint32] */;
  %671 = @func_10051(%670) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(10, 16, 5), uint32], Tensor[(800), uint32]) */;
  %672 = @func_7247() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %673 = @func_7885() /* ty=(Tensor[(15, 2, 12), bool],) */;
  %674 = cast(%var_10516, dtype="bool") /* ty=Tensor[(800, 1), bool] */;
  %675 = cast(meta[relay.Constant][37] /* ty=Tensor[(200), float64] */, dtype="bool") /* ty=Tensor[(200), bool] */;
  %676 = less_equal(%660, %661) /* ty=Tensor[(12, 14, 1), bool] */;
  %677 = %662.2;
  %678 = %665.0;
  %679 = %668.1;
  %680 = @func_8748() /* ty=Tensor[(5, 7, 12), uint16] */;
  %681 = %671.0;
  %682 = @func_6578() /* ty=Tensor[(8, 9, 12), float64] */;
  %683 = %672.0;
  %684 = %673.0;
  %685 = logical_or(%674, %675) /* ty=Tensor[(800, 200), bool] */;
  (%676, %677, %678, %679, meta[relay.Constant][38] /* ty=Tensor[(585, 3), float32] */, %680, %681, %682, %683, %684, %685)
}

def @func_1628(%var_1562: Tensor[(360), int64], %var_1563: Tensor[(864), float64], %var_1588: Tensor[(11, 864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  %686 = cast(%var_1562, dtype="int64") /* ty=Tensor[(360), int64] */;
  %687 = cast(%var_1563, dtype="float64") /* ty=Tensor[(864), float64] */;
  %688 = reshape(%686, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %689 = reshape(%687, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %690 = @func_1389(%688, %689) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %691 = %690.1;
  %692 = cast(%691, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %693 = cast(%var_1588, dtype="float64") /* ty=Tensor[(11, 864), float64] */;
  %694 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %697 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %698 = %697.0;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %700 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %701 = floor_mod(%692, %693) /* ty=Tensor[(11, 864), float64] */;
  %702 = sin(%696) /* ty=Tensor[(5, 7, 12), float64] */;
  %703 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %704 = acos(%699) /* ty=Tensor[(5, 7, 12), float32] */;
  (%700, %var_1562, %var_1563, %701, %702, %703, %704)
}

def @func_2921(%var_2914: Tensor[(216, 4), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) {
  %705 = @func_2682() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */;
  %706 = cast(%var_2914, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
  %707 = reshape(%706, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %708 = @func_1869(%707) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */;
  %709 = %705.3;
  %710 = %708.2;
  (%709, %710, %var_2914)
}

def @func_2333() -> (Tensor[(8, 9, 12), float64],) {
  %711 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %712 = %711.1;
  (%712,)
}

def @func_7046(%var_7037: Tensor[(150, 2), bool]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(9504), bool], Tensor[(5, 7, 12), bool], Tensor[(15, 2, 12), bool], Tensor[(150, 2), bool], Tensor[(15, 2, 12), uint16]) {
  %713 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %714 = @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %715 = cast(meta[relay.Constant][39] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %716 = %714.0;
  %717 = cast(%716, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %718 = cast(meta[relay.Constant][40] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %719 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 2376), float64] */, dtype="float64") /* ty=Tensor[(4, 2376), float64] */;
  %720 = reshape(%715, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %721 = reshape(%717, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
  %722 = reshape(%718, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %723 = reshape(%719, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
  %724 = @func_4149(%720, %721, %722, %723) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
  %725 = %724.5;
  %726 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 2376), float64] */, dtype="bool") /* ty=Tensor[(4, 2376), bool] */;
  %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(1), int32] */;
  %728 = cast(%725, dtype="bool") /* ty=Tensor[(9504), bool] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?), bool] */;
  %730 = %713.2;
  %731 = cast(%730, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %732 = reshape(%731, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), uint16] */;
  %733 = @func_3338(%732) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), bool]) */;
  %734 = cast(meta[relay.Constant][40] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %735 = cast(%var_7037, dtype="bool") /* ty=Tensor[(150, 2), bool] */;
  %736 = reshape(%734, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %737 = reshape(%735, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
  %738 = @func_4778(%736, %737) /* ty=(Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) */;
  %739 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %740 = logical_and(%728, %729) /* ty=Tensor[(9504), bool] */;
  %741 = %733.1;
  %742 = %738.7;
  %743 = %739.0;
  (%730, %716, meta[relay.Constant][39] /* ty=Tensor[(360), int64] */, meta[relay.Constant][40] /* ty=Tensor[(864), float64] */, %740, %741, %742, %var_7037, %743)
}

def @func_5315(%var_5308: Tensor[(480), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) {
  %744 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %745 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %746 = cast(%var_5308, dtype="float32") /* ty=Tensor[(480), float32] */;
  %747 = reshape(%746, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %748 = @func_2702(%747) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %749 = %744.2;
  %750 = %745.0;
  %751 = %748.1;
  (%749, %750, %751, %var_5308)
}

def @func_2492(%var_2472: Tensor[(10, 16, 5), uint32], %var_2473: Tensor[(10, 16, 5), uint32]) -> (Tensor[(10, 16, 5), uint32],) {
  %752 = cast(%var_2473, dtype="uint32") /* ty=Tensor[(10, 16, 5), uint32] */;
  %753 = shape_of(%var_2472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%var_2472, dtype="uint32") /* ty=Tensor[(10, 16, 5), uint32] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %756 = right_shift(%754, %755) /* ty=Tensor[(10, 16, 5), uint32] */;
  (%756,)
}

def @func_2984() -> (Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) {
  %757 = @func_2771() /* ty=(Tensor[(5, 7, 12), float32],) */;
  %758 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %759 = %758.0;
  %760 = cast(%759, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %761 = %757.0;
  %762 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %763 = sin(%760) /* ty=Tensor[(15, 2, 12), float64] */;
  (%761, %762, %763)
}

def @func_8530() -> (Tensor[(5, 7, 12), uint16],) {
  %764 = @func_7128() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %765 = %764.4;
  (%765,)
}

def @func_9861(%var_9817: Tensor[(13, 9, 11), float32], %var_9820: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), bool], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(13, 9, 11), float64], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float32]) {
  %766 = cast(%var_9817, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %767 = cast(%var_9820, dtype="bool") /* ty=Tensor[(13, 9, 11), bool] */;
  %768 = shape_of(%var_9817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_9817, dtype="bool") /* ty=Tensor[(13, 9, 11), bool] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %771 = cast(meta[relay.Constant][42] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %772 = reshape(%771, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %773 = @func_2702(%772) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %774 = cast(%var_9817, dtype="float64") /* ty=Tensor[(13, 9, 11), float64] */;
  %775 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %776 = %775.0;
  %777 = cast(%776, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %778 = reshape(%777, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), float64] */;
  %779 = @func_9379(%778) /* ty=(Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), float64]) */;
  %780 = sinh(%766) /* ty=Tensor[(13, 9, 11), float32] */;
  %781 = greater_equal(%769, %770) /* ty=Tensor[(13, 9, 11), bool] */;
  %782 = %773.0;
  %783 = atanh(%774) /* ty=Tensor[(13, 9, 11), float64] */;
  %784 = %779.0;
  (%780, %781, %782, meta[relay.Constant][42] /* ty=Tensor[(480), float32] */, %783, %776, %784)
}

def @func_10899() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %785 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
  %786 = @func_9032() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %787 = %785.1;
  %788 = %786.0;
  (%787, %788)
}

def @func_4725() -> Tensor[(864), float64] {
  @func_3019() /* ty=Tensor[(864), float64] */
}

def @func_6315() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  %789 = @func_4878() /* ty=Tensor[(5, 7, 12), uint16] */;
  %790 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
  (%789, %790)
}

def @func_7570() -> (Tensor[(15, 2, 12), uint16], Tensor[(12, 5, 5), bool]) {
  %791 = @func_5920() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %792 = @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */;
  %793 = %791.0;
  %794 = %792.2;
  (%793, %794)
}

def @func_4878() -> Tensor[(5, 7, 12), uint16] {
  %795 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %795.0
}

def @func_6034(%var_6028: uint16, %var_6029: Tensor[(3, 1, 8), uint16]) -> Tensor[(3, 1, 8), bool] {
  %796 = cast(%var_6028, dtype="bool") /* ty=bool */;
  %797 = cast(%var_6029, dtype="bool") /* ty=Tensor[(3, 1, 8), bool] */;
  greater(%796, %797) /* ty=Tensor[(3, 1, 8), bool] */
}

def @func_10424() -> Tensor[(5, 7, 12), float32] {
  %798 = @func_8972() /* ty=(Tensor[(5, 7, 12), float32],) */;
  %798.0
}

def @func_5859() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  %799 = cast(meta[relay.Constant][43] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %800 = reshape(%799, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %801 = @func_5315(%800) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %802 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
  %803 = @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */;
  %804 = %801.1;
  %805 = %802.1;
  %806 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  (%803, %804, meta[relay.Constant][43] /* ty=Tensor[(480), float32] */, %805, %806)
}

def @func_1694(%var_1691: Tensor[(360), int64], %var_1692: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) {
  %807 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %808 = cast(%var_1691, dtype="int64") /* ty=Tensor[(360), int64] */;
  %809 = cast(%var_1692, dtype="float64") /* ty=Tensor[(864), float64] */;
  %810 = reshape(%808, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %811 = reshape(%809, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %812 = @func_601(%810, %811) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %813 = %807.0;
  %814 = %812.3;
  (%813, %814, %var_1691, %var_1692)
}

def @func_7830(%var_7810: Tensor[(1008), float32]) -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) {
  %815 = @func_4569() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) */;
  %816 = %815.0;
  %817 = cast(%816, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %818 = cast(%var_7810, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %819 = reshape(%818, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float32] */;
  %820 = atanh(%817) /* ty=Tensor[(8, 9, 12), float64] */;
  %821 = @func_6790() /* ty=Tensor[(5, 7, 12), uint16] */;
  %822 = @func_4046(%819) /* ty=Tensor[(7, 16, 9), float32] */;
  (%820, %821, %822, %var_7810)
}

def @func_8122(%var_8110: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) {
  %823 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %824 = cast(meta[relay.Constant][44] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %825 = cast(%var_8110, dtype="float64") /* ty=Tensor[(864), float64] */;
  %826 = reshape(%824, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %827 = reshape(%825, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %828 = @func_601(%826, %827) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %829 = %823.0;
  %830 = %828.4;
  (%829, %830, meta[relay.Constant][44] /* ty=Tensor[(360), int64] */, %var_8110)
}

def @func_9535() -> (Tensor[(8, 9, 12), float64],) {
  %831 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %832 = %831.0;
  (%832,)
}

def @func_5716() -> Tensor[(5, 7, 12), float32] {
  %833 = @func_3669() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */;
  %833.5
}

def @func_476() -> (Tensor[(5, 7, 12), uint16],) {
  %834 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %835 = log2(%834) /* ty=Tensor[(5, 7, 12), float64] */;
  %836 = cast(%835, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %837 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(5, 7, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 7, 12), float64] */, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %840 = maximum(%838, %839) /* ty=Tensor[(5, 7, 12), uint16] */;
  (%840,)
}

def @func_818() -> Tensor[(5, 7, 12), uint16] {
  @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_10584(%var_10575: Tensor[(8, 16, 14), int8]) -> Tensor[(8, 16, 14), bool] {
  %841 = cast(%var_10575, dtype="bool") /* ty=Tensor[(8, 16, 14), bool] */;
  %842 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(8, 16, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 16, 14), int8] */, dtype="bool") /* ty=Tensor[(8, 16, 14), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%843, %844) /* ty=Tensor[(8, 16, 14), bool] */
}

def @func_10829(%var_10827: Tensor[(200), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) {
  %845 = @func_7175() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %846 = cast(meta[relay.Constant][47] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %847 = reshape(%846, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %848 = @func_6303(%847) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) */;
  %849 = cast(%var_10827, dtype="float64") /* ty=Tensor[(200), float64] */;
  %850 = reshape(%849, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
  %851 = @func_5139(%850) /* ty=(Tensor[(8, 5, 5), float64],) */;
  %852 = %845.0;
  %853 = %848.1;
  %854 = %851.0;
  (%852, %853, meta[relay.Constant][47] /* ty=Tensor[(360), int64] */, %854, %var_10827)
}

def @func_4592() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32]) {
  %855 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %856 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
  %857 = %855.0;
  %858 = %856.2;
  (%857, %858)
}

def @func_1901() -> Tensor[(15, 2, 12), uint16] {
  %859 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %859.5
}

def @func_7282() -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) {
  %860 = @func_7175() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %861 = cast(meta[relay.Constant][48] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %862 = reshape(%861, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %863 = @func_6303(%862) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) */;
  %864 = cast(meta[relay.Constant][49] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %865 = reshape(%864, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
  %866 = @func_5139(%865) /* ty=(Tensor[(8, 5, 5), float64],) */;
  %867 = %860.0;
  %868 = %863.2;
  %869 = %866.0;
  (%867, %868, meta[relay.Constant][48] /* ty=Tensor[(360), int64] */, %869, meta[relay.Constant][49] /* ty=Tensor[(200), float64] */)
}

def @func_876() -> Tensor[(5, 7, 12), uint16] {
  %870 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %870.0
}

def @func_1528() -> Tensor[(5, 7, 12), uint16] {
  @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_10470() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %871 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %872 = @func_8083() /* ty=Tensor[(5, 7, 12), uint16] */;
  %873 = %871.2;
  (%872, %873)
}

def @func_6521() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  %874 = @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %875 = @func_2546() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %876 = @func_5553() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %877 = %874.1;
  %878 = %875.0;
  %879 = %876.0;
  (%877, %878, %879)
}

def @func_7175() -> (Tensor[(5, 7, 12), uint16],) {
  %880 = @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */;
  %881 = %880.1;
  (%881,)
}

def @func_6835() -> (Tensor[(5, 7, 12), uint16],) {
  %882 = @func_6604() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %883 = %882.1;
  (%883,)
}

def @func_2459(%var_2446: Tensor[(8, 4, 14), float64], %var_2447: Tensor[(8, 4, 14), float64]) -> (Tensor[(8, 4, 14), float64],) {
  %884 = cast(%var_2447, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %885 = shape_of(%var_2446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%var_2446, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %888 = maximum(%886, %887) /* ty=Tensor[(8, 4, 14), float64] */;
  (%888,)
}

def @func_6750() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) {
  %889 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %890 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 60), float32] */, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %891 = reshape(%890, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %892 = @func_5315(%891) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %893 = @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */;
  %894 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %895 = %889.0;
  %896 = %892.0;
  %897 = %893.2;
  %898 = %894.1;
  (%895, %896, meta[relay.Constant][50] /* ty=Tensor[(8, 60), float32] */, %897, %898)
}

def @func_5128() -> (Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), uint16]) {
  %899 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %900 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %901 = %899.0;
  %902 = %900.0;
  (%901, %902)
}

def @func_3019() -> Tensor[(864), float64] {
  %903 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %903.2
}

def @func_5877() -> Tensor[(13, 9, 6), float64] {
  @func_5646() /* ty=Tensor[(13, 9, 6), float64] */
}

def @func_8291() -> (Tensor[(200), float64],) {
  %904 = @func_7282() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) */;
  %905 = %904.4;
  (%905,)
}

def @func_2251() -> (Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) {
  %906 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %907 = %906.2;
  %908 = cast(%907, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %909 = cosh(%908) /* ty=Tensor[(8, 9, 12), float64] */;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %911 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %912 = asinh(%910) /* ty=Tensor[(8, 9, 12), float64] */;
  (%911, %912)
}

def @func_10009() -> (Tensor[(5, 7, 12), uint16], Tensor[(7, 9, 14), int16]) {
  %913 = @func_5097() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64]) */;
  %914 = @func_8133() /* ty=(Tensor[(7, 9, 14), int16],) */;
  %915 = %913.2;
  %916 = %914.0;
  (%915, %916)
}

def @func_2702(%var_2692: Tensor[(480), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) {
  %917 = cast(%var_2692, dtype="float32") /* ty=Tensor[(480), float32] */;
  %918 = cast(%var_2692, dtype="float32") /* ty=Tensor[(480), float32] */;
  %919 = reshape(%917, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
  %920 = reshape(%918, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
  %921 = @func_853(%919, %920) /* ty=(Tensor[(3, 10, 16), int64],) */;
  %922 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %923 = %921.0;
  (%922, %923, %var_2692)
}

def @func_10403(%var_10399: Tensor[(528), float32], %var_10400: Tensor[(35, 6), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(288), float32], Tensor[(528), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) {
  %924 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %925 = cast(%var_10399, dtype="float32") /* ty=Tensor[(528), float32] */;
  %926 = cast(%var_10400, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %927 = cast(meta[relay.Constant][51] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %928 = reshape(%925, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %929 = reshape(%926, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %930 = reshape(%927, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %931 = @func_4286(%928, %929, %930) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(11, 6, 8), bool], Tensor[(5, 7, 12), float64], Tensor[(216, 4), float64], Tensor[(210), float64], Tensor[(288), float32]) */;
  %932 = %924.0;
  %933 = %931.6;
  (%932, %933, %var_10399, %var_10400, meta[relay.Constant][51] /* ty=Tensor[(288), float32] */)
}

def @func_2682() -> (Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) {
  %934 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %935 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %936 = reshape(%935, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %937 = %934.0;
  %938 = @func_553(%936) /* ty=Tensor[(15, 2, 12), bool] */;
  %939 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%937, %938, meta[relay.Constant][52] /* ty=Tensor[(360), int64] */, %939)
}

def @func_5863() -> Tensor[(864), float64] {
  @func_3019() /* ty=Tensor[(864), float64] */
}

def @func_3138(%var_3121: Tensor[(5, 1, 3), int32], %var_3122: Tensor[(5, 13, 3), int32]) -> Tensor[(5, 13, 3), int64] {
  %940 = cast(%var_3121, dtype="bool") /* ty=Tensor[(5, 1, 3), bool] */;
  %941 = cast(%var_3122, dtype="bool") /* ty=Tensor[(5, 13, 3), bool] */;
  %942 = less(%940, %941) /* ty=Tensor[(5, 13, 3), bool] */;
  %943 = cast(%var_3122, dtype="int64") /* ty=Tensor[(5, 13, 3), int64] */;
  %944 = shape_of(%942, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%942, dtype="int64") /* ty=Tensor[(5, 13, 3), int64] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%945, %946) /* ty=Tensor[(5, 13, 3), int64] */
}

def @func_7600(%var_7590: float64, %var_7591: Tensor[(7, 3, 6), float64]) -> (Tensor[(7, 3, 6), float64], Tensor[(5, 7, 12), uint16]) {
  %947 = cast(%var_7590, dtype="float64") /* ty=float64 */;
  %948 = cast(%var_7591, dtype="float64") /* ty=Tensor[(7, 3, 6), float64] */;
  %949 = floor_mod(%947, %948) /* ty=Tensor[(7, 3, 6), float64] */;
  %950 = @func_6790() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%949, %950)
}

def @func_620() -> Tensor[(5, 7, 12), uint16] {
  %951 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %951.0
}

def @func_3188() -> Tensor[(15, 2, 12), bool] {
  %952 = @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */;
  %952.0
}

def @func_7529() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), float64], Tensor[(8, 9, 12), float64], Tensor[(300), bool], Tensor[(15, 2, 12), bool], Tensor[(9504), float64]) {
  %953 = @func_6873() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %954 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %955 = reshape(%954, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %956 = @func_782(%955) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */;
  %957 = %953.0;
  %958 = cast(%957, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %959 = reshape(%958, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), uint16] */;
  %960 = cast(meta[relay.Constant][54] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %961 = reshape(%960, newshape=[300, 1]) /* ty=Tensor[(300, 1), bool] */;
  %962 = @func_4979(%961) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) */;
  %963 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %964 = @func_2297(%959) /* ty=Tensor[(5, 7, 12), float64] */;
  %965 = cast(%964, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %966 = %962.0;
  %967 = cast(%966, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %968 = cast(meta[relay.Constant][55] /* ty=Tensor[(9504), float64] */, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %969 = reshape(%963, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %970 = reshape(%965, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
  %971 = reshape(%967, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %972 = reshape(%968, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
  %973 = @func_4149(%969, %970, %971, %972) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
  %974 = %956.4;
  %975 = %973.0;
  (%957, %974, meta[relay.Constant][53] /* ty=Tensor[(360), int64] */, %964, %966, meta[relay.Constant][54] /* ty=Tensor[(300), bool] */, %975, meta[relay.Constant][55] /* ty=Tensor[(9504), float64] */)
}

def @func_2297(%var_2285: Tensor[(5, 7, 12), uint16]) -> Tensor[(5, 7, 12), float64] {
  %976 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  %977 = cast(%var_2285, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%976, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%979, %980) /* ty=Tensor[(5, 7, 12), float64] */
}

def @func_4569() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) {
  %981 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %982 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %983 = reshape(%982, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %984 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %985 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
  %986 = %985.2;
  %987 = cast(%986, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %988 = %981.1;
  %989 = cast(%988, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %990 = reshape(%987, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %991 = reshape(%989, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %992 = @func_1694(%990, %991) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %993 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %994 = @func_553(%983) /* ty=Tensor[(15, 2, 12), bool] */;
  %995 = %984.2;
  %996 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  %997 = %992.2;
  (%988, %993, %994, meta[relay.Constant][56] /* ty=Tensor[(360), int64] */, %995, %986, %996, %997)
}

def @func_7461() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32], Tensor[(800), uint32]) {
  %998 = @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */;
  %999 = @func_6255() /* ty=(Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) */;
  %1000 = %998.1;
  %1001 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
  %1002 = %999.1;
  (%1000, %1001, %1002)
}

def @func_5646() -> Tensor[(13, 9, 6), float64] {
  %1003 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %1003.0
}

def @func_6604() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %1004 = @func_1528() /* ty=Tensor[(5, 7, 12), uint16] */;
  %1005 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%1004, %1005)
}

def @func_3692(%var_3684: Tensor[(288), float32]) -> (Tensor[(864), float64], Tensor[(12, 2, 12), float32], Tensor[(288), float32]) {
  %1006 = cast(%var_3684, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1007 = reshape(%1006, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
  %1008 = @func_926(%1007) /* ty=(Tensor[(12, 2, 12), float32],) */;
  %1009 = @func_3019() /* ty=Tensor[(864), float64] */;
  %1010 = %1008.0;
  (%1009, %1010, %var_3684)
}

def @func_6486() -> Tensor[(5, 7, 12), uint16] {
  @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_1002() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) {
  %1011 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1012 = cast(meta[relay.Constant][57] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %1013 = reshape(%1012, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %1014 = cast(meta[relay.Constant][58] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
  %1015 = cast(meta[relay.Constant][57] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %1016 = reshape(%1014, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1017 = reshape(%1015, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %1018 = @func_601(%1016, %1017) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %1019 = cast(meta[relay.Constant][58] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
  %1020 = reshape(%1019, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %1021 = @func_553(%1020) /* ty=Tensor[(15, 2, 12), bool] */;
  %1022 = cast(meta[relay.Constant][58] /* ty=Tensor[(180, 2), int64] */, dtype="uint16") /* ty=Tensor[(180, 2), uint16] */;
  %1023 = shape_of(%1021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%1021, dtype="uint16") /* ty=Tensor[(15, 2, 12), uint16] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1026 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %1027 = %1011.0;
  %1028 = @func_115(%1013) /* ty=Tensor[(8, 9, 12), uint64] */;
  %1029 = %1018.3;
  %1030 = bitwise_or(%1024, %1025) /* ty=Tensor[(15, 2, 12), uint16] */;
  (%1026, %1027, %1028, meta[relay.Constant][57] /* ty=Tensor[(864), float64] */, %1029, %1030)
}

def @func_1886(%var_1882: Tensor[(1040), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) {
  %1031 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1032 = cast(meta[relay.Constant][59] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1033 = reshape(%1032, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
  %1034 = @func_926(%1033) /* ty=(Tensor[(12, 2, 12), float32],) */;
  %1035 = cast(%var_1882, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %1036 = reshape(%1035, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), float32] */;
  %1037 = @func_1204(%1036) /* ty=(Tensor[(8, 13, 10), float32],) */;
  %1038 = %1031.0;
  %1039 = %1034.0;
  %1040 = %1037.0;
  (%1038, %1039, meta[relay.Constant][59] /* ty=Tensor[(288), float32] */, %1040, %var_1882)
}

def @func_7185() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %1041 = @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1042 = %1041.0;
  %1043 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%1042, %1043)
}

def @func_9032() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64]) {
  %1044 = @func_4838() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1045 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
  %1046 = %1044.0;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_3801() -> (Tensor[(5, 7, 12), uint16],) {
  %1048 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%1048,)
}

def @func_6326() -> (Tensor[(15, 2, 12), float64],) {
  %1049 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
  %1050 = %1049.0;
  (%1050,)
}

def @func_1468(%var_1463: Tensor[(12, 5, 1), int32], %var_1464: Tensor[(12, 5, 5), int32]) -> Tensor[(12, 5, 5), bool] {
  %1051 = cast(%var_1463, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %1052 = cast(%var_1464, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  equal(%1051, %1052) /* ty=Tensor[(12, 5, 5), bool] */
}

def @func_7072(%var_7068: Tensor[(864), float64], %var_7069: Tensor[(24, 396), float64]) -> (Tensor[(15, 2, 12), uint16], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(24, 396), float64]) {
  %1053 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
  %1054 = %1053.1;
  %1055 = cast(%1054, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %1056 = cast(%var_7068, dtype="float64") /* ty=Tensor[(864), float64] */;
  %1057 = cast(%var_7069, dtype="float64") /* ty=Tensor[(24, 396), float64] */;
  %1058 = reshape(%1055, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1059 = reshape(%1056, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %1060 = reshape(%1057, newshape=[11, 864]) /* ty=Tensor[(11, 864), float64] */;
  %1061 = @func_1628(%1058, %1059, %1060) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %1062 = %1061.3;
  (%1054, %1062, %var_7068, %var_7069)
}

def @func_10096() -> (Tensor[(5, 7, 12), float32],) {
  %1063 = @func_3247() /* ty=Tensor[(5, 7, 12), float32] */;
  (%1063,)
}

def @func_10755() -> (Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), bool]) {
  %1064 = @func_7570() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(12, 5, 5), bool]) */;
  %1065 = @func_8820() /* ty=(Tensor[(15, 2, 12), bool],) */;
  %1066 = %1064.0;
  %1067 = %1065.0;
  (%1066, %1067)
}

def @func_6303(%var_6294: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) {
  %1068 = cast(%var_6294, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1069 = reshape(%1068, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1070 = @func_782(%1069) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */;
  %1071 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
  %1072 = %1070.2;
  (%1071, %1072, %var_6294)
}

def @func_5901(%var_5887: Tensor[(14, 12, 3), float32]) -> (Tensor[(14, 12, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %1073 = cast(%var_5887, dtype="float32") /* ty=Tensor[(14, 12, 3), float32] */;
  %1074 = @func_4569() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) */;
  %1075 = log(%1073) /* ty=Tensor[(14, 12, 3), float32] */;
  %1076 = %1074.1;
  %1077 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%1075, %1076, %1077)
}

def @func_9423(%var_9418: Tensor[(8, 9, 5), float64]) -> Tensor[(8, 9, 5), float64] {
  %1078 = cast(%var_9418, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
  atan(%1078) /* ty=Tensor[(8, 9, 5), float64] */
}

def @func_2812() -> (Tensor[(15, 2, 12), uint16],) {
  %1079 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
  (%1079,)
}

def @func_926(%var_917: Tensor[(12, 2, 12), float32]) -> (Tensor[(12, 2, 12), float32],) {
  %1080 = cast(%var_917, dtype="float32") /* ty=Tensor[(12, 2, 12), float32] */;
  %1081 = exp(%1080) /* ty=Tensor[(12, 2, 12), float32] */;
  (%1081,)
}

def @func_6475(%var_6451: Tensor[(4, 9, 6), float32]) -> Tensor[(4, 9, 6), float32] {
  %1082 = cast(%var_6451, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %1083 = log2(%1082) /* ty=Tensor[(4, 9, 6), float32] */;
  %1084 = cast(%1083, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  exp(%1084) /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_4778(%var_4741: Tensor[(864), float64], %var_4756: Tensor[(12, 5, 5), bool]) -> (Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) {
  %1085 = cast(%var_4741, dtype="float64") /* ty=Tensor[(864), float64] */;
  %1086 = reshape(%1085, newshape=[216, 4]) /* ty=Tensor[(216, 4), float64] */;
  %1087 = @func_2921(%1086) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %1088 = %1087.2;
  %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
  %1090 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %1091 = %1090.3;
  %1092 = cast(%var_4756, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %1093 = shape_of(%1091, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%1091, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1096 = @func_2682() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */;
  %1097 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 72), float32] */, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %1098 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %1099 = cast(%1098, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %1100 = reshape(%1097, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1101 = reshape(%1099, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1102 = @func_3861(%1100, %1101) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) */;
  %1103 = %1096.1;
  %1104 = cast(%1103, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %1105 = reshape(%1104, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
  %1106 = @func_4353(%1105) /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) */;
  %1107 = sigmoid(%1089) /* ty=Tensor[(216, 4), float64] */;
  %1108 = logical_and(%1094, %1095) /* ty=Tensor[(12, 5, 5), bool] */;
  %1109 = %1102.3;
  %1110 = %1106.1;
  (%var_4741, %1098, %1107, %1108, %1103, %1109, meta[relay.Constant][60] /* ty=Tensor[(4, 72), float32] */, %1110)
}

def @func_6899() -> (Tensor[(7, 9, 14), int16],) {
  %1111 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 9, 14), int16] */, dtype="int16") /* ty=Tensor[(7, 9, 14), int16] */;
  %1112 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(7, 9, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1113 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 9, 14), int16] */, dtype="int16") /* ty=Tensor[(7, 9, 14), int16] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1115 = maximum(%1113, %1114) /* ty=Tensor[(7, 9, 14), int16] */;
  (%1115,)
}

def @func_6718(%var_6700: Tensor[(5, 7, 12), uint16]) -> Tensor[(5, 7, 12), bool] {
  %1116 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1117 = %1116.0;
  %1118 = cast(%var_6700, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %1119 = shape_of(%1117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(%1117, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1120, %1121) /* ty=Tensor[(5, 7, 12), bool] */
}

def @func_6790() -> Tensor[(5, 7, 12), uint16] {
  %1122 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1122.0
}

def @func_553(%var_535: Tensor[(15, 2, 12), int64]) -> Tensor[(15, 2, 12), bool] {
  %1123 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 2, 12), int64] */, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %1124 = shape_of(%var_535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%var_535, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1125, %1126) /* ty=Tensor[(15, 2, 12), bool] */
}

def @func_4286(%var_4215: Tensor[(11, 6, 8), float32], %var_4281: Tensor[(210), float64], %var_4282: Tensor[(288), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(11, 6, 8), bool], Tensor[(5, 7, 12), float64], Tensor[(216, 4), float64], Tensor[(210), float64], Tensor[(288), float32]) {
  %1127 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1128 = cast(%var_4215, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %1129 = log10(%1128) /* ty=Tensor[(11, 6, 8), float32] */;
  %1130 = cast(%var_4215, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %1131 = shape_of(%1129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1132 = cast(%1129, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1134 = logical_or(%1132, %1133) /* ty=Tensor[(11, 6, 8), bool] */;
  %1135 = cast(%1134, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %1136 = shape_of(%1129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1137 = cast(%1129, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1139 = @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */;
  %1140 = cast(%var_4281, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1141 = cast(%var_4282, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1142 = reshape(%1140, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %1143 = reshape(%1141, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1144 = @func_1770(%1142, %1143) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %1145 = %1127.0;
  %1146 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %1147 = greater(%1137, %1138) /* ty=Tensor[(11, 6, 8), bool] */;
  %1148 = %1139.1;
  %1149 = %1144.5;
  (%1145, %1146, %1147, %1148, %1149, %var_4281, %var_4282)
}

def @func_6922(%var_6910: Tensor[(360), int64], %var_6912: Tensor[(72, 132), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(72, 132), float64], Tensor[(5, 7, 12), uint16], Tensor[(1040), float32]) {
  %1150 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1151 = cast(%var_6910, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1152 = %1150.0;
  %1153 = cast(%1152, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %1154 = cast(meta[relay.Constant][64] /* ty=Tensor[(864, 1), float64] */, dtype="float64") /* ty=Tensor[(864, 1), float64] */;
  %1155 = cast(%var_6912, dtype="float64") /* ty=Tensor[(72, 132), float64] */;
  %1156 = reshape(%1151, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1157 = reshape(%1153, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
  %1158 = reshape(%1154, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %1159 = reshape(%1155, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
  %1160 = @func_4149(%1156, %1157, %1158, %1159) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
  %1161 = cast(meta[relay.Constant][65] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %1162 = reshape(%1161, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
  %1163 = @func_1886(%1162) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) */;
  %1164 = %1160.0;
  %1165 = %1163.0;
  (%1152, %1164, %var_6910, meta[relay.Constant][64] /* ty=Tensor[(864, 1), float64] */, %var_6912, %1165, meta[relay.Constant][65] /* ty=Tensor[(1040), float32] */)
}

def @func_6578() -> Tensor[(8, 9, 12), float64] {
  %1166 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
  %1166.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10694() -> Tensor[(15, 2, 12), uint32] {
  %1 = fn () -> Tensor[(15, 2, 12), uint32] {
    %0 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
    %0.2
  };
  %1() /* ty=Tensor[(15, 2, 12), uint32] */
}

def @func_10053(%var_10052: Tensor[(800), uint32]) -> (Tensor[(15, 2, 12), bool], Tensor[(10, 16, 5), uint32], Tensor[(800), uint32]) {
  %10 = fn (%var_10027: Tensor[(800), uint32]) -> (Tensor[(15, 2, 12), bool], Tensor[(10, 16, 5), uint32], Tensor[(800), uint32]) {
    %2 = @func_7885() /* ty=(Tensor[(15, 2, 12), bool],) */;
    %3 = cast(%var_10027, dtype="uint32") /* ty=Tensor[(800), uint32] */;
    %4 = cast(%var_10027, dtype="uint32") /* ty=Tensor[(800), uint32] */;
    %5 = reshape(%3, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
    %6 = reshape(%4, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
    %7 = @func_2492(%5, %6) /* ty=(Tensor[(10, 16, 5), uint32],) */;
    %8 = %2.0;
    %9 = %7.0;
    (%8, %9, %var_10027)
  };
  %10(%var_10052) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(10, 16, 5), uint32], Tensor[(800), uint32]) */
}

def @func_7705(%var_7695: Tensor[(13, 9, 6), float64]) -> (Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), float32]) {
  %11 = @func_5646() /* ty=Tensor[(13, 9, 6), float64] */;
  %12 = cast(%var_7695, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %16 = divide(%14, %15) /* ty=Tensor[(13, 9, 6), float64] */;
  %17 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
  (%16, %17)
}

def @func_1054() -> Tensor[(5, 7, 12), uint16] {
  %18 = fn () -> Tensor[(5, 7, 12), uint16] {
    @func_818() /* ty=Tensor[(5, 7, 12), uint16] */
  };
  %18() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_6527() -> (Tensor[(15, 2, 12), uint16],) {
  %21 = fn () -> (Tensor[(15, 2, 12), uint16],) {
    %19 = @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
    %20 = %19.0;
    (%20,)
  };
  %21() /* ty=(Tensor[(15, 2, 12), uint16],) */
}

def @func_4571() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) {
  @func_4569() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) */
}

def @func_6037(%var_6035: uint16, %var_6036: Tensor[(3, 1, 8), uint16]) -> Tensor[(3, 1, 8), bool] {
  %24 = fn (%var_6028: uint16, %var_6029: Tensor[(3, 1, 8), uint16]) -> Tensor[(3, 1, 8), bool] {
    %22 = cast(%var_6028, dtype="bool") /* ty=bool */;
    %23 = cast(%var_6029, dtype="bool") /* ty=Tensor[(3, 1, 8), bool] */;
    greater(%22, %23) /* ty=Tensor[(3, 1, 8), bool] */
  };
  %24(%var_6035, %var_6036) /* ty=Tensor[(3, 1, 8), bool] */
}

def @func_6718(%var_6700: Tensor[(5, 7, 12), uint16]) -> Tensor[(5, 7, 12), bool] {
  %25 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %26 = %25.0;
  %27 = cast(%var_6700, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%26, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%29, %30) /* ty=Tensor[(5, 7, 12), bool] */
}

def @func_6835() -> (Tensor[(5, 7, 12), uint16],) {
  %31 = @func_6604() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %32 = %31.1;
  (%32,)
}

def @func_5955() -> Tensor[(15, 2, 12), float64] {
  @func_5953() /* ty=Tensor[(15, 2, 12), float64] */
}

def @func_10900() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %37 = fn () -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) {
    %33 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
    %34 = @func_9032() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64]) */;
    %35 = %33.1;
    %36 = %34.0;
    (%35, %36)
  };
  %37() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_4880() -> Tensor[(5, 7, 12), uint16] {
  @func_4878() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_6257() -> (Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) {
  @func_6255() /* ty=(Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) */
}

def @func_7832(%var_7831: Tensor[(1008), float32]) -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) {
  %46 = fn (%var_7810: Tensor[(1008), float32]) -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) {
    %38 = @func_4569() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) */;
    %39 = %38.0;
    %40 = cast(%39, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
    %41 = cast(%var_7810, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %42 = reshape(%41, newshape=[7, 16, 9]) /* ty=Tensor[(7, 16, 9), float32] */;
    %43 = atanh(%40) /* ty=Tensor[(8, 9, 12), float64] */;
    %44 = @func_6790() /* ty=Tensor[(5, 7, 12), uint16] */;
    %45 = @func_4046(%42) /* ty=Tensor[(7, 16, 9), float32] */;
    (%43, %44, %45, %var_7810)
  };
  %46(%var_7831) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(7, 16, 9), float32], Tensor[(1008), float32]) */
}

def @func_3188() -> Tensor[(15, 2, 12), bool] {
  %47 = @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */;
  %47.0
}

def @func_3760(%var_3759: Tensor[(360), int64]) -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64]) {
  %54 = fn (%var_3719: Tensor[(360), int64]) -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64]) {
    %48 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
    %49 = cast(%var_3719, dtype="int64") /* ty=Tensor[(360), int64] */;
    %50 = reshape(%49, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %51 = @func_1998(%50) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */;
    %52 = %48.1;
    %53 = %51.1;
    (%52, %53, %var_3719)
  };
  %54(%var_3759) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64]) */
}

def @func_8134() -> (Tensor[(7, 9, 14), int16],) {
  %57 = fn () -> (Tensor[(7, 9, 14), int16],) {
    %55 = @func_6899() /* ty=(Tensor[(7, 9, 14), int16],) */;
    %56 = %55.0;
    (%56,)
  };
  %57() /* ty=(Tensor[(7, 9, 14), int16],) */
}

def @func_4291(%var_4288: Tensor[(11, 6, 8), float32], %var_4289: Tensor[(210), float64], %var_4290: Tensor[(288), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(11, 6, 8), bool], Tensor[(5, 7, 12), float64], Tensor[(216, 4), float64], Tensor[(210), float64], Tensor[(288), float32]) {
  @func_4286(%var_4288, %var_4289, %var_4290) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(11, 6, 8), bool], Tensor[(5, 7, 12), float64], Tensor[(216, 4), float64], Tensor[(210), float64], Tensor[(288), float32]) */
}

def @func_10403(%var_10399: Tensor[(528), float32], %var_10400: Tensor[(35, 6), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(288), float32], Tensor[(528), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) {
  %58 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %59 = cast(%var_10399, dtype="float32") /* ty=Tensor[(528), float32] */;
  %60 = cast(%var_10400, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %61 = cast(meta[relay.Constant][0] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %62 = reshape(%59, newshape=[11, 6, 8]) /* ty=Tensor[(11, 6, 8), float32] */;
  %63 = reshape(%60, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %64 = reshape(%61, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %65 = @func_4286(%62, %63, %64) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(11, 6, 8), bool], Tensor[(5, 7, 12), float64], Tensor[(216, 4), float64], Tensor[(210), float64], Tensor[(288), float32]) */;
  %66 = %58.0;
  %67 = %65.6;
  (%66, %67, %var_10399, %var_10400, meta[relay.Constant][0] /* ty=Tensor[(288), float32] */)
}

def @func_2773() -> (Tensor[(5, 7, 12), float32],) {
  @func_2771() /* ty=(Tensor[(5, 7, 12), float32],) */
}

def @func_6900() -> (Tensor[(7, 9, 14), int16],) {
  %73 = fn () -> (Tensor[(7, 9, 14), int16],) {
    %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 9, 14), int16] */, dtype="int16") /* ty=Tensor[(7, 9, 14), int16] */;
    %69 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(7, 9, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %70 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 9, 14), int16] */, dtype="int16") /* ty=Tensor[(7, 9, 14), int16] */;
    %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %72 = maximum(%70, %71) /* ty=Tensor[(7, 9, 14), int16] */;
    (%72,)
  };
  %73() /* ty=(Tensor[(7, 9, 14), int16],) */
}

def @func_556(%var_554: Tensor[(15, 2, 12), int64]) -> Tensor[(15, 2, 12), bool] {
  @func_553(%var_554) /* ty=Tensor[(15, 2, 12), bool] */
}

def @func_6521() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  %74 = @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %75 = @func_2546() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %76 = @func_5553() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %77 = %74.1;
  %78 = %75.0;
  %79 = %76.0;
  (%77, %78, %79)
}

def @func_1889(%var_1887: Tensor[(1040), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) {
  @func_1886(%var_1887) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) */
}

def @func_3802() -> (Tensor[(5, 7, 12), uint16],) {
  %81 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %80 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
    (%80,)
  };
  %81() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_7959() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %82 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
  %83 = @func_6604() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %84 = %82.1;
  %85 = %83.1;
  (%84, %85)
}

def @func_2297(%var_2285: Tensor[(5, 7, 12), uint16]) -> Tensor[(5, 7, 12), float64] {
  %86 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  %87 = cast(%var_2285, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%89, %90) /* ty=Tensor[(5, 7, 12), float64] */
}

def @func_8083() -> Tensor[(5, 7, 12), uint16] {
  @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_7939() -> (Tensor[(5, 7, 12), uint16],) {
  %93 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %91 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
    %92 = %91.2;
    (%92,)
  };
  %93() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_5878() -> Tensor[(13, 9, 6), float64] {
  %94 = fn () -> Tensor[(13, 9, 6), float64] {
    @func_5646() /* ty=Tensor[(13, 9, 6), float64] */
  };
  %94() /* ty=Tensor[(13, 9, 6), float64] */
}

def @func_1472(%var_1470: Tensor[(12, 5, 1), int32], %var_1471: Tensor[(12, 5, 5), int32]) -> Tensor[(12, 5, 5), bool] {
  @func_1468(%var_1470, %var_1471) /* ty=Tensor[(12, 5, 5), bool] */
}

def @func_8531() -> (Tensor[(5, 7, 12), uint16],) {
  %97 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %95 = @func_7128() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
    %96 = %95.4;
    (%96,)
  };
  %97() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_9566() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(13, 9, 6), float64], Tensor[(800), uint32]) {
  %98 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %99 = @func_6255() /* ty=(Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) */;
  %100 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %101 = %98.4;
  %102 = @func_5646() /* ty=Tensor[(13, 9, 6), float64] */;
  %103 = %99.1;
  (%100, %101, %102, %103)
}

def @func_8085() -> Tensor[(5, 7, 12), uint16] {
  @func_8083() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_4928() -> (Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_476() -> (Tensor[(5, 7, 12), uint16],) {
  %104 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %105 = log2(%104) /* ty=Tensor[(5, 7, 12), float64] */;
  %106 = cast(%105, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %107 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 7, 12), float64] */, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %110 = maximum(%108, %109) /* ty=Tensor[(5, 7, 12), uint16] */;
  (%110,)
}

def @func_8293() -> (Tensor[(200), float64],) {
  @func_8291() /* ty=(Tensor[(200), float64],) */
}

def @func_8248() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) {
  %111 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %112 = @func_7529() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), float64], Tensor[(8, 9, 12), float64], Tensor[(300), bool], Tensor[(15, 2, 12), bool], Tensor[(9504), float64]) */;
  %113 = %111.1;
  %114 = @func_6486() /* ty=Tensor[(5, 7, 12), uint16] */;
  %115 = %112.6;
  (%113, %114, %115)
}

def @func_1886(%var_1882: Tensor[(1040), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) {
  %116 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %117 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %118 = reshape(%117, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
  %119 = @func_926(%118) /* ty=(Tensor[(12, 2, 12), float32],) */;
  %120 = cast(%var_1882, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %121 = reshape(%120, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), float32] */;
  %122 = @func_1204(%121) /* ty=(Tensor[(8, 13, 10), float32],) */;
  %123 = %116.0;
  %124 = %119.0;
  %125 = %122.0;
  (%123, %124, meta[relay.Constant][4] /* ty=Tensor[(288), float32] */, %125, %var_1882)
}

def @func_7531() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), float64], Tensor[(8, 9, 12), float64], Tensor[(300), bool], Tensor[(15, 2, 12), bool], Tensor[(9504), float64]) {
  @func_7529() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), float64], Tensor[(8, 9, 12), float64], Tensor[(300), bool], Tensor[(15, 2, 12), bool], Tensor[(9504), float64]) */
}

def @func_10587(%var_10585: Tensor[(8, 16, 14), int8]) -> Tensor[(8, 16, 14), bool] {
  @func_10584(%var_10585) /* ty=Tensor[(8, 16, 14), bool] */
}

def @func_2921(%var_2914: Tensor[(216, 4), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) {
  %126 = @func_2682() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */;
  %127 = cast(%var_2914, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
  %128 = reshape(%127, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %129 = @func_1869(%128) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */;
  %130 = %126.3;
  %131 = %129.2;
  (%130, %131, %var_2914)
}

def @func_818() -> Tensor[(5, 7, 12), uint16] {
  @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_6305(%var_6304: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) {
  %137 = fn (%var_6294: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) {
    %132 = cast(%var_6294, dtype="int64") /* ty=Tensor[(360), int64] */;
    %133 = reshape(%132, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %134 = @func_782(%133) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */;
    %135 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
    %136 = %134.2;
    (%135, %136, %var_6294)
  };
  %137(%var_6304) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) */
}

def @func_5315(%var_5308: Tensor[(480), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) {
  %138 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %139 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %140 = cast(%var_5308, dtype="float32") /* ty=Tensor[(480), float32] */;
  %141 = reshape(%140, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %142 = @func_2702(%141) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %143 = %138.2;
  %144 = %139.0;
  %145 = %142.1;
  (%143, %144, %145, %var_5308)
}

def @func_8191() -> Tensor[(5, 7, 12), uint16] {
  %146 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %146.0
}

def @func_4155(%var_4151: Tensor[(360), int64], %var_4152: Tensor[(5, 7, 12), float32], %var_4153: Tensor[(864), float64], %var_4154: Tensor[(9504), float64]) -> (Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) {
  @func_4149(%var_4151, %var_4152, %var_4153, %var_4154) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */
}

def @func_6345() -> (Tensor[(5, 7, 12), uint16],) {
  %147 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%147,)
}

def @func_7186() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %151 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
    %148 = @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %149 = %148.0;
    %150 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
    (%149, %150)
  };
  %151() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_5814() -> Tensor[(5, 7, 12), uint16] {
  %153 = fn () -> Tensor[(5, 7, 12), uint16] {
    %152 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %152.0
  };
  %153() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_9032() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64]) {
  %154 = @func_4838() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %155 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
  %156 = %154.0;
  %157 = %155.0;
  (%156, %157)
}

def @func_926(%var_917: Tensor[(12, 2, 12), float32]) -> (Tensor[(12, 2, 12), float32],) {
  %158 = cast(%var_917, dtype="float32") /* ty=Tensor[(12, 2, 12), float32] */;
  %159 = exp(%158) /* ty=Tensor[(12, 2, 12), float32] */;
  (%159,)
}

def @func_3138(%var_3121: Tensor[(5, 1, 3), int32], %var_3122: Tensor[(5, 13, 3), int32]) -> Tensor[(5, 13, 3), int64] {
  %160 = cast(%var_3121, dtype="bool") /* ty=Tensor[(5, 1, 3), bool] */;
  %161 = cast(%var_3122, dtype="bool") /* ty=Tensor[(5, 13, 3), bool] */;
  %162 = less(%160, %161) /* ty=Tensor[(5, 13, 3), bool] */;
  %163 = cast(%var_3122, dtype="int64") /* ty=Tensor[(5, 13, 3), int64] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="int64") /* ty=Tensor[(5, 13, 3), int64] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%165, %166) /* ty=Tensor[(5, 13, 3), int64] */
}

def @func_8741() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  %170 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
    %167 = @func_2771() /* ty=(Tensor[(5, 7, 12), float32],) */;
    %168 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
    %169 = %167.0;
    (%168, %169)
  };
  %170() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */
}

def @func_8749() -> Tensor[(5, 7, 12), uint16] {
  %172 = fn () -> Tensor[(5, 7, 12), uint16] {
    %171 = @func_7959() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
    %171.1
  };
  %172() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_8377() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), uint16]) {
  %180 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), uint16]) {
    %173 = @func_6345() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %174 = @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */;
    %175 = cast(%174, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
    %176 = @func_5553() /* ty=(Tensor[(15, 2, 12), uint16],) */;
    %177 = %173.0;
    %178 = cosh(%175) /* ty=Tensor[(15, 2, 12), float32] */;
    %179 = %176.0;
    (%177, %178, %179)
  };
  %180() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), uint16]) */
}

def @func_9930() -> (Tensor[(5, 7, 12), uint16],) {
  @func_9928() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_10245(%var_10244: Tensor[(300), bool]) -> (Tensor[(5, 7, 12), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(800), bool]) {
  %202 = fn (%var_10208: Tensor[(300), bool]) -> (Tensor[(5, 7, 12), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(800), bool]) {
    %181 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
    %182 = cast(%var_10208, dtype="bool") /* ty=Tensor[(300), bool] */;
    %183 = reshape(%182, newshape=[300, 1]) /* ty=Tensor[(300, 1), bool] */;
    %184 = @func_4979(%183) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) */;
    %185 = @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %186 = @func_7175() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %187 = cast(meta[relay.Constant][5] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
    %188 = cast(meta[relay.Constant][5] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
    %189 = reshape(%187, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
    %190 = reshape(%188, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
    %191 = @func_2492(%189, %190) /* ty=(Tensor[(10, 16, 5), uint32],) */;
    %192 = %191.0;
    %193 = cast(%192, dtype="bool") /* ty=Tensor[(10, 16, 5), bool] */;
    %194 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(800), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %195 = cast(meta[relay.Constant][5] /* ty=Tensor[(800), uint32] */, dtype="bool") /* ty=Tensor[(800), bool] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?), bool] */;
    %197 = %181.0;
    %198 = %184.1;
    %199 = %185.0;
    %200 = %186.0;
    %201 = logical_or(%195, %196) /* ty=Tensor[(800), bool] */;
    (%197, %198, %var_10208, %199, %200, %201)
  };
  %202(%var_10244) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(12, 5, 5), bool], Tensor[(300), bool], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(800), bool]) */
}

def @func_6579() -> Tensor[(8, 9, 12), float64] {
  %204 = fn () -> Tensor[(8, 9, 12), float64] {
    %203 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
    %203.0
  };
  %204() /* ty=Tensor[(8, 9, 12), float64] */
}

def @func_1003() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) {
  %225 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) {
    %205 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %206 = cast(meta[relay.Constant][6] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %207 = reshape(%206, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
    %208 = cast(meta[relay.Constant][7] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
    %209 = cast(meta[relay.Constant][6] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %210 = reshape(%208, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %211 = reshape(%209, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
    %212 = @func_601(%210, %211) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
    %213 = cast(meta[relay.Constant][7] /* ty=Tensor[(180, 2), int64] */, dtype="int64") /* ty=Tensor[(180, 2), int64] */;
    %214 = reshape(%213, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
    %215 = @func_553(%214) /* ty=Tensor[(15, 2, 12), bool] */;
    %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(180, 2), int64] */, dtype="uint16") /* ty=Tensor[(180, 2), uint16] */;
    %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%215, dtype="uint16") /* ty=Tensor[(15, 2, 12), uint16] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %220 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
    %221 = %205.0;
    %222 = @func_115(%207) /* ty=Tensor[(8, 9, 12), uint64] */;
    %223 = %212.3;
    %224 = bitwise_or(%218, %219) /* ty=Tensor[(15, 2, 12), uint16] */;
    (%220, %221, %222, meta[relay.Constant][6] /* ty=Tensor[(864), float64] */, %223, %224)
  };
  %225() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */
}

def @func_1176(%var_1175: Tensor[(288), float32]) -> (Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16]) {
  %243 = fn (%var_1115: Tensor[(288), float32]) -> (Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16]) {
    %226 = cast(%var_1115, dtype="float32") /* ty=Tensor[(288), float32] */;
    %227 = reshape(%226, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
    %228 = @func_926(%227) /* ty=(Tensor[(12, 2, 12), float32],) */;
    %229 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
    %230 = cast(%229, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
    %231 = log(%230) /* ty=Tensor[(5, 7, 12), float64] */;
    %232 = cast(%229, dtype="int32") /* ty=Tensor[(5, 7, 12), int32] */;
    %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %234 = cast(%231, dtype="int32") /* ty=Tensor[(5, 7, 12), int32] */;
    %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %236 = add(%234, %235) /* ty=Tensor[(5, 7, 12), int32] */;
    %237 = cast(%231, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
    %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
    %239 = cast(%236, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %241 = %228.0;
    %242 = bitwise_or(%239, %240) /* ty=Tensor[(5, 7, 12), uint16] */;
    (%241, %var_1115, %242)
  };
  %243(%var_1175) /* ty=(Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16]) */
}

def @func_2531() -> Tensor[(15, 2, 12), uint16] {
  @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_10447() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  @func_10445() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_7885() -> (Tensor[(15, 2, 12), bool],) {
  %244 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  (%244,)
}

def @func_7248() -> (Tensor[(5, 7, 12), uint16],) {
  %247 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %245 = @func_4838() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %246 = %245.0;
    (%246,)
  };
  %247() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_5318(%var_5316: Tensor[(480), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) {
  @func_5315(%var_5316) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */
}

def @func_2682() -> (Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) {
  %248 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %249 = cast(meta[relay.Constant][8] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %250 = reshape(%249, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %251 = %248.0;
  %252 = @func_553(%250) /* ty=Tensor[(15, 2, 12), bool] */;
  %253 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%251, %252, meta[relay.Constant][8] /* ty=Tensor[(360), int64] */, %253)
}

def @func_4727() -> Tensor[(864), float64] {
  @func_4725() /* ty=Tensor[(864), float64] */
}

def @func_5860() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  %262 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) {
    %254 = cast(meta[relay.Constant][9] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %255 = reshape(%254, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %256 = @func_5315(%255) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
    %257 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
    %258 = @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */;
    %259 = %256.1;
    %260 = %257.1;
    %261 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
    (%258, %259, meta[relay.Constant][9] /* ty=Tensor[(480), float32] */, %260, %261)
  };
  %262() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) */
}

def @func_6317() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  @func_6315() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */
}

def @func_8122(%var_8110: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) {
  %263 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %264 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %265 = cast(%var_8110, dtype="float64") /* ty=Tensor[(864), float64] */;
  %266 = reshape(%264, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %267 = reshape(%265, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %268 = @func_601(%266, %267) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %269 = %263.0;
  %270 = %268.4;
  (%269, %270, meta[relay.Constant][10] /* ty=Tensor[(360), int64] */, %var_8110)
}

def @func_8896() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  %275 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) {
    %271 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %272 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
    %273 = %271.0;
    %274 = %272.0;
    (%273, %274)
  };
  %275() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16]) */
}

def @func_8213(%var_8211: Tensor[(12, 7, 11), int32], %var_8212: Tensor[(12, 7, 11), int32]) -> (Tensor[(12, 7, 11), bool],) {
  %281 = fn (%var_8203: Tensor[(12, 7, 11), int32], %var_8204: Tensor[(12, 7, 11), int32]) -> (Tensor[(12, 7, 11), bool],) {
    %276 = cast(%var_8204, dtype="bool") /* ty=Tensor[(12, 7, 11), bool] */;
    %277 = shape_of(%var_8203, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%var_8203, dtype="bool") /* ty=Tensor[(12, 7, 11), bool] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %280 = less_equal(%278, %279) /* ty=Tensor[(12, 7, 11), bool] */;
    (%280,)
  };
  %281(%var_8211, %var_8212) /* ty=(Tensor[(12, 7, 11), bool],) */
}

def @func_1819() -> (Tensor[(5, 7, 12), uint16],) {
  %282 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%282,)
}

def @func_2625() -> (Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) {
  @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */
}

def @func_3561(%var_3544: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) {
  %283 = cast(%var_3544, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %284 = atan(%283) /* ty=Tensor[(13, 15, 9), float32] */;
  %285 = @func_3247() /* ty=Tensor[(5, 7, 12), float32] */;
  (%284, %285)
}

def @func_3480() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) {
  @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */
}

def @func_118(%var_116: Tensor[(8, 9, 12), float64]) -> Tensor[(8, 9, 12), uint64] {
  @func_115(%var_116) /* ty=Tensor[(8, 9, 12), uint64] */
}

def @func_6605() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %288 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
    %286 = @func_1528() /* ty=Tensor[(5, 7, 12), uint16] */;
    %287 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
    (%286, %287)
  };
  %288() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_4840() -> (Tensor[(5, 7, 12), uint16],) {
  @func_4838() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_4046(%var_4028: Tensor[(7, 16, 9), float32]) -> Tensor[(7, 16, 9), float32] {
  %289 = cast(%var_4028, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %290 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(7, 16, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 16, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 16, 9), float32] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%291, %292) /* ty=Tensor[(7, 16, 9), float32] */
}

def @func_10424() -> Tensor[(5, 7, 12), float32] {
  %293 = @func_8972() /* ty=(Tensor[(5, 7, 12), float32],) */;
  %293.0
}

def @func_6255() -> (Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) {
  %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %295 = cast(meta[relay.Constant][12] /* ty=Tensor[(800), uint32] */, dtype="uint32") /* ty=Tensor[(800), uint32] */;
  %296 = reshape(%294, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %297 = reshape(%295, newshape=[10, 16, 5]) /* ty=Tensor[(10, 16, 5), uint32] */;
  %298 = @func_2492(%296, %297) /* ty=(Tensor[(10, 16, 5), uint32],) */;
  %299 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %300 = %299.0;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %302 = sqrt(%301) /* ty=Tensor[(5, 7, 12), float32] */;
  %303 = cast(%300, dtype="int64") /* ty=Tensor[(5, 7, 12), int64] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="int64") /* ty=Tensor[(5, 7, 12), int64] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %307 = %298.0;
  %308 = right_shift(%305, %306) /* ty=Tensor[(5, 7, 12), int64] */;
  (%307, meta[relay.Constant][12] /* ty=Tensor[(800), uint32] */, %308)
}

def @func_4569() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) {
  %309 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %310 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %311 = reshape(%310, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %312 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %313 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
  %314 = %313.2;
  %315 = cast(%314, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %316 = %309.1;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %318 = reshape(%315, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %319 = reshape(%317, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %320 = @func_1694(%318, %319) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %321 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %322 = @func_553(%311) /* ty=Tensor[(15, 2, 12), bool] */;
  %323 = %312.2;
  %324 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  %325 = %320.2;
  (%316, %321, %322, meta[relay.Constant][13] /* ty=Tensor[(360), int64] */, %323, %314, %324, %325)
}

def @func_1901() -> Tensor[(15, 2, 12), uint16] {
  %326 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %326.5
}

def @func_2459(%var_2446: Tensor[(8, 4, 14), float64], %var_2447: Tensor[(8, 4, 14), float64]) -> (Tensor[(8, 4, 14), float64],) {
  %327 = cast(%var_2447, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %328 = shape_of(%var_2446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_2446, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %331 = maximum(%329, %330) /* ty=Tensor[(8, 4, 14), float64] */;
  (%331,)
}

def @func_10722() -> Tensor[(864), float64] {
  @func_10720() /* ty=Tensor[(864), float64] */
}

def @func_5647() -> Tensor[(13, 9, 6), float64] {
  %333 = fn () -> Tensor[(13, 9, 6), float64] {
    %332 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
    %332.0
  };
  %333() /* ty=Tensor[(13, 9, 6), float64] */
}

def @func_4725() -> Tensor[(864), float64] {
  @func_3019() /* ty=Tensor[(864), float64] */
}

def @func_5554() -> (Tensor[(15, 2, 12), uint16],) {
  %336 = fn () -> (Tensor[(15, 2, 12), uint16],) {
    %334 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
    %335 = %334.5;
    (%335,)
  };
  %336() /* ty=(Tensor[(15, 2, 12), uint16],) */
}

def @func_8434(%var_8432: Tensor[(864), float64]) -> (Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64], Tensor[(864), float64], Tensor[(200), float64], Tensor[(864), float64]) {
  %337 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
  %338 = @func_8264() /* ty=(Tensor[(15, 2, 12), float64],) */;
  %339 = cast(meta[relay.Constant][14] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %340 = cast(%var_8432, dtype="float64") /* ty=Tensor[(864), float64] */;
  %341 = reshape(%339, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %342 = reshape(%340, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %343 = @func_5442(%341, %342) /* ty=(Tensor[(13, 13, 2), uint16], Tensor[(8, 5, 5), float64], Tensor[(200), float64], Tensor[(13, 13, 2), float64], Tensor[(8, 13, 10), float32], Tensor[(1040), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(864), float64]) */;
  %344 = %337.1;
  %345 = %338.0;
  %346 = %343.9;
  (%344, %345, %346, meta[relay.Constant][14] /* ty=Tensor[(200), float64] */, %var_8432)
}

def @func_7072(%var_7068: Tensor[(864), float64], %var_7069: Tensor[(24, 396), float64]) -> (Tensor[(15, 2, 12), uint16], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(24, 396), float64]) {
  %347 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
  %348 = %347.1;
  %349 = cast(%348, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %350 = cast(%var_7068, dtype="float64") /* ty=Tensor[(864), float64] */;
  %351 = cast(%var_7069, dtype="float64") /* ty=Tensor[(24, 396), float64] */;
  %352 = reshape(%349, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %353 = reshape(%350, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %354 = reshape(%351, newshape=[11, 864]) /* ty=Tensor[(11, 864), float64] */;
  %355 = @func_1628(%352, %353, %354) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %356 = %355.3;
  (%348, %356, %var_7068, %var_7069)
}

def @func_7887() -> (Tensor[(15, 2, 12), bool],) {
  @func_7885() /* ty=(Tensor[(15, 2, 12), bool],) */
}

def @func_9169() -> Tensor[(5, 7, 12), uint16] {
  @func_9167() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_4402(%var_4399: Tensor[(7, 8, 16), uint32], %var_4400: Tensor[(7, 8, 16), uint32], %var_4401: Tensor[(195), float64]) -> (Tensor[(7, 8, 16), float64], Tensor[(1, 15, 13), float64], Tensor[(195), float64]) {
  @func_4397(%var_4399, %var_4400, %var_4401) /* ty=(Tensor[(7, 8, 16), float64], Tensor[(1, 15, 13), float64], Tensor[(195), float64]) */
}

def @func_6486() -> Tensor[(5, 7, 12), uint16] {
  @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_8558() -> (Tensor[(5, 7, 12), uint16],) {
  %359 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %357 = @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
    %358 = %357.1;
    (%358,)
  };
  %359() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_7570() -> (Tensor[(15, 2, 12), uint16], Tensor[(12, 5, 5), bool]) {
  %360 = @func_5920() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %361 = @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */;
  %362 = %360.0;
  %363 = %361.2;
  (%362, %363)
}

def @func_2407(%var_2405: Tensor[(13, 9, 6), uint32]) -> (Tensor[(13, 9, 6), float64], Tensor[(13, 9, 6), float64]) {
  @func_2404(%var_2405) /* ty=(Tensor[(13, 9, 6), float64], Tensor[(13, 9, 6), float64]) */
}

def @func_7961() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  @func_7959() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_5476() -> (Tensor[(5, 7, 12), uint16],) {
  %366 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %364 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %365 = %364.0;
    (%365,)
  };
  %366() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_1698(%var_1696: Tensor[(360), int64], %var_1697: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) {
  @func_1694(%var_1696, %var_1697) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */
}

def @func_9423(%var_9418: Tensor[(8, 9, 5), float64]) -> Tensor[(8, 9, 5), float64] {
  %367 = cast(%var_9418, dtype="float64") /* ty=Tensor[(8, 9, 5), float64] */;
  atan(%367) /* ty=Tensor[(8, 9, 5), float64] */
}

def @func_2251() -> (Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) {
  %368 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %369 = %368.2;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %371 = cosh(%370) /* ty=Tensor[(8, 9, 12), float64] */;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %373 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %374 = asinh(%372) /* ty=Tensor[(8, 9, 12), float64] */;
  (%373, %374)
}

def @func_10363(%var_10340: Tensor[(5, 16, 11), float32], %var_10343: Tensor[(5, 16, 11), float32]) -> (Tensor[(5, 16, 11), int16], Tensor[(864), float64], Tensor[(5, 16, 11), int8]) {
  %375 = cast(%var_10343, dtype="int16") /* ty=Tensor[(5, 16, 11), int16] */;
  %376 = shape_of(%var_10340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%var_10340, dtype="int16") /* ty=Tensor[(5, 16, 11), int16] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %379 = cast(%var_10340, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %380 = acos(%379) /* ty=Tensor[(5, 16, 11), float32] */;
  %381 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 16, 11), float32] */, dtype="int8") /* ty=Tensor[(5, 16, 11), int8] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%380, dtype="int8") /* ty=Tensor[(5, 16, 11), int8] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %385 = left_shift(%377, %378) /* ty=Tensor[(5, 16, 11), int16] */;
  %386 = @func_3019() /* ty=Tensor[(864), float64] */;
  %387 = bitwise_or(%383, %384) /* ty=Tensor[(5, 16, 11), int8] */;
  (%385, %386, %387)
}

def @func_5098() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64]) {
  %397 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64]) {
    %388 = @func_3801() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %389 = @func_4592() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32]) */;
    %390 = @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */;
    %391 = cast(meta[relay.Constant][16] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %392 = reshape(%391, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
    %393 = %388.0;
    %394 = %389.1;
    %395 = %390.1;
    %396 = @func_115(%392) /* ty=Tensor[(8, 9, 12), uint64] */;
    (%393, %394, %395, %396, meta[relay.Constant][16] /* ty=Tensor[(864), float64] */)
  };
  %397() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64]) */
}

def @func_2705(%var_2703: Tensor[(480), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) {
  @func_2702(%var_2703) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */
}

def @func_9034() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64]) {
  @func_9032() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64]) */
}

def @func_9426(%var_9424: Tensor[(8, 9, 5), float64]) -> Tensor[(8, 9, 5), float64] {
  @func_9423(%var_9424) /* ty=Tensor[(8, 9, 5), float64] */
}

def @func_2404(%var_2382: Tensor[(13, 9, 6), uint32]) -> (Tensor[(13, 9, 6), float64], Tensor[(13, 9, 6), float64]) {
  %398 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="uint32") /* ty=Tensor[(13, 9, 6), uint32] */;
  %399 = shape_of(%var_2382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%var_2382, dtype="uint32") /* ty=Tensor[(13, 9, 6), uint32] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %402 = logical_xor(%400, %401) /* ty=Tensor[(13, 9, 6), uint32] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %404 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %407 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 9, 6), uint32] */, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %408 = mod(%405, %406) /* ty=Tensor[(13, 9, 6), float64] */;
  %409 = exp(%407) /* ty=Tensor[(13, 9, 6), float64] */;
  (%408, %409)
}

def @func_8193() -> Tensor[(5, 7, 12), uint16] {
  @func_8191() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_4878() -> Tensor[(5, 7, 12), uint16] {
  %410 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %410.0
}

def @func_7572() -> (Tensor[(15, 2, 12), uint16], Tensor[(12, 5, 5), bool]) {
  @func_7570() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(12, 5, 5), bool]) */
}

def @func_10097() -> (Tensor[(5, 7, 12), float32],) {
  %412 = fn () -> (Tensor[(5, 7, 12), float32],) {
    %411 = @func_3247() /* ty=Tensor[(5, 7, 12), float32] */;
    (%411,)
  };
  %412() /* ty=(Tensor[(5, 7, 12), float32],) */
}

def @func_2496(%var_2494: Tensor[(10, 16, 5), uint32], %var_2495: Tensor[(10, 16, 5), uint32]) -> (Tensor[(10, 16, 5), uint32],) {
  @func_2492(%var_2494, %var_2495) /* ty=(Tensor[(10, 16, 5), uint32],) */
}

def @func_1529() -> Tensor[(5, 7, 12), uint16] {
  %413 = fn () -> Tensor[(5, 7, 12), uint16] {
    @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
  };
  %413() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_5130() -> (Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), uint16]) {
  @func_5128() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), uint16]) */
}

def @func_5128() -> (Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), uint16]) {
  %414 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %415 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %416 = %414.0;
  %417 = %415.0;
  (%416, %417)
}

def @func_2300(%var_2298: Tensor[(5, 7, 12), uint16]) -> Tensor[(5, 7, 12), float64] {
  @func_2297(%var_2298) /* ty=Tensor[(5, 7, 12), float64] */
}

def @func_2335() -> (Tensor[(8, 9, 12), float64],) {
  @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */
}

def @func_6478(%var_6476: Tensor[(4, 9, 6), float32]) -> Tensor[(4, 9, 6), float32] {
  @func_6475(%var_6476) /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_2875() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) {
  %431 = fn () -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) {
    %418 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
    %419 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
    %420 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
    %421 = %420.0;
    %422 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 2, 12), uint16] */, dtype="uint32") /* ty=Tensor[(15, 2, 12), uint32] */;
    %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %424 = cast(%421, dtype="uint32") /* ty=Tensor[(15, 2, 12), uint32] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %426 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %427 = %418.1;
    %428 = %419.0;
    %429 = bitwise_xor(%424, %425) /* ty=Tensor[(15, 2, 12), uint32] */;
    %430 = %426.0;
    (%427, %428, %429, %430)
  };
  %431() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */
}

def @func_8265() -> (Tensor[(15, 2, 12), float64],) {
  %433 = fn () -> (Tensor[(15, 2, 12), float64],) {
    %432 = @func_5953() /* ty=Tensor[(15, 2, 12), float64] */;
    (%432,)
  };
  %433() /* ty=(Tensor[(15, 2, 12), float64],) */
}

def @func_3478() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) {
  %434 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %435 = @func_1528() /* ty=Tensor[(5, 7, 12), uint16] */;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %437 = exp(%436) /* ty=Tensor[(5, 7, 12), float64] */;
  %438 = cast(%437, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %439 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%435, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %442 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
  %443 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 117), uint32] */, dtype="uint32") /* ty=Tensor[(6, 117), uint32] */;
  %444 = reshape(%443, newshape=[13, 9, 6]) /* ty=Tensor[(13, 9, 6), uint32] */;
  %445 = @func_2404(%444) /* ty=(Tensor[(13, 9, 6), float64], Tensor[(13, 9, 6), float64]) */;
  %446 = %434.0;
  %447 = greater(%440, %441) /* ty=Tensor[(5, 7, 12), bool] */;
  %448 = %442.3;
  %449 = %445.0;
  (%446, %447, %448, %449, meta[relay.Constant][19] /* ty=Tensor[(6, 117), uint32] */)
}

def @func_10829(%var_10827: Tensor[(200), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) {
  %450 = @func_7175() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %451 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %452 = reshape(%451, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %453 = @func_6303(%452) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) */;
  %454 = cast(%var_10827, dtype="float64") /* ty=Tensor[(200), float64] */;
  %455 = reshape(%454, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
  %456 = @func_5139(%455) /* ty=(Tensor[(8, 5, 5), float64],) */;
  %457 = %450.0;
  %458 = %453.1;
  %459 = %456.0;
  (%457, %458, meta[relay.Constant][20] /* ty=Tensor[(360), int64] */, %459, %var_10827)
}

def @func_10407(%var_10405: Tensor[(528), float32], %var_10406: Tensor[(35, 6), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(288), float32], Tensor[(528), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) {
  @func_10403(%var_10405, %var_10406) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(288), float32], Tensor[(528), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) */
}

def @func_1424() -> (Tensor[(5, 7, 12), uint16],) {
  @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_8973() -> (Tensor[(5, 7, 12), float32],) {
  %462 = fn () -> (Tensor[(5, 7, 12), float32],) {
    %460 = @func_6315() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
    %461 = %460.1;
    (%461,)
  };
  %462() /* ty=(Tensor[(5, 7, 12), float32],) */
}

def @func_5575() -> Tensor[(15, 2, 12), uint16] {
  @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_1903() -> Tensor[(15, 2, 12), uint16] {
  @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_6347() -> (Tensor[(5, 7, 12), uint16],) {
  @func_6345() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_9135() -> Tensor[(5, 7, 12), uint16] {
  %463 = @func_7128() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %463.1
}

def @func_478() -> (Tensor[(5, 7, 12), uint16],) {
  @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_877() -> Tensor[(5, 7, 12), uint16] {
  %465 = fn () -> Tensor[(5, 7, 12), uint16] {
    %464 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %464.0
  };
  %465() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_4286(%var_4215: Tensor[(11, 6, 8), float32], %var_4281: Tensor[(210), float64], %var_4282: Tensor[(288), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(11, 6, 8), bool], Tensor[(5, 7, 12), float64], Tensor[(216, 4), float64], Tensor[(210), float64], Tensor[(288), float32]) {
  %466 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %467 = cast(%var_4215, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %468 = log10(%467) /* ty=Tensor[(11, 6, 8), float32] */;
  %469 = cast(%var_4215, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%468, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %473 = logical_or(%471, %472) /* ty=Tensor[(11, 6, 8), bool] */;
  %474 = cast(%473, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %475 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%468, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %478 = @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */;
  %479 = cast(%var_4281, dtype="float64") /* ty=Tensor[(210), float64] */;
  %480 = cast(%var_4282, dtype="float32") /* ty=Tensor[(288), float32] */;
  %481 = reshape(%479, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %482 = reshape(%480, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %483 = @func_1770(%481, %482) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %484 = %466.0;
  %485 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %486 = greater(%476, %477) /* ty=Tensor[(11, 6, 8), bool] */;
  %487 = %478.1;
  %488 = %483.5;
  (%484, %485, %486, %487, %488, %var_4281, %var_4282)
}

def @func_6925(%var_6923: Tensor[(360), int64], %var_6924: Tensor[(72, 132), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(72, 132), float64], Tensor[(5, 7, 12), uint16], Tensor[(1040), float32]) {
  %505 = fn (%var_6910: Tensor[(360), int64], %var_6912: Tensor[(72, 132), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(72, 132), float64], Tensor[(5, 7, 12), uint16], Tensor[(1040), float32]) {
    %489 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %490 = cast(%var_6910, dtype="int64") /* ty=Tensor[(360), int64] */;
    %491 = %489.0;
    %492 = cast(%491, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
    %493 = cast(meta[relay.Constant][21] /* ty=Tensor[(864, 1), float64] */, dtype="float64") /* ty=Tensor[(864, 1), float64] */;
    %494 = cast(%var_6912, dtype="float64") /* ty=Tensor[(72, 132), float64] */;
    %495 = reshape(%490, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %496 = reshape(%492, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
    %497 = reshape(%493, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %498 = reshape(%494, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
    %499 = @func_4149(%495, %496, %497, %498) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
    %500 = cast(meta[relay.Constant][22] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %501 = reshape(%500, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
    %502 = @func_1886(%501) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) */;
    %503 = %499.0;
    %504 = %502.0;
    (%491, %503, %var_6910, meta[relay.Constant][21] /* ty=Tensor[(864, 1), float64] */, %var_6912, %504, meta[relay.Constant][22] /* ty=Tensor[(1040), float32] */)
  };
  %505(%var_6923, %var_6924) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(72, 132), float64], Tensor[(5, 7, 12), uint16], Tensor[(1040), float32]) */
}

def @func_7283() -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) {
  %516 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) {
    %506 = @func_7175() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %507 = cast(meta[relay.Constant][23] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %508 = reshape(%507, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %509 = @func_6303(%508) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(360), int64], Tensor[(360), int64]) */;
    %510 = cast(meta[relay.Constant][24] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %511 = reshape(%510, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
    %512 = @func_5139(%511) /* ty=(Tensor[(8, 5, 5), float64],) */;
    %513 = %506.0;
    %514 = %509.2;
    %515 = %512.0;
    (%513, %514, meta[relay.Constant][23] /* ty=Tensor[(360), int64] */, %515, meta[relay.Constant][24] /* ty=Tensor[(200), float64] */)
  };
  %516() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) */
}

def @func_5252() -> Tensor[(5, 7, 12), uint16] {
  %517 = fn () -> Tensor[(5, 7, 12), uint16] {
    @func_4878() /* ty=Tensor[(5, 7, 12), uint16] */
  };
  %517() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_4356(%var_4354: Tensor[(15, 2, 12), bool]) -> (Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) {
  @func_4353(%var_4354) /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) */
}

def @func_2547() -> (Tensor[(15, 2, 12), uint16],) {
  %519 = fn () -> (Tensor[(15, 2, 12), uint16],) {
    %518 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
    (%518,)
  };
  %519() /* ty=(Tensor[(15, 2, 12), uint16],) */
}

def @func_6365() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  @func_6363() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_3190() -> Tensor[(15, 2, 12), bool] {
  @func_3188() /* ty=Tensor[(15, 2, 12), bool] */
}

def @func_1207(%var_1205: Tensor[(8, 13, 10), float32]) -> (Tensor[(8, 13, 10), float32],) {
  @func_1204(%var_1205) /* ty=(Tensor[(8, 13, 10), float32],) */
}

def @func_4353(%var_4337: Tensor[(15, 2, 12), bool]) -> (Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) {
  %520 = @func_2623() /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) */;
  %521 = %520.0;
  %522 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %524 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%521, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %527 = cast(%var_4337, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %528 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%522, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %531 = mod(%525, %526) /* ty=Tensor[(15, 2, 12), float64] */;
  %532 = greater(%529, %530) /* ty=Tensor[(15, 2, 12), bool] */;
  (%531, %532)
}

def @func_6363() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %533 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
  %534 = @func_5251() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%533, %534)
}

def @func_7046(%var_7037: Tensor[(150, 2), bool]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(9504), bool], Tensor[(5, 7, 12), bool], Tensor[(15, 2, 12), bool], Tensor[(150, 2), bool], Tensor[(15, 2, 12), uint16]) {
  %535 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %536 = @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %537 = cast(meta[relay.Constant][25] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %538 = %536.0;
  %539 = cast(%538, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %540 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %541 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 2376), float64] */, dtype="float64") /* ty=Tensor[(4, 2376), float64] */;
  %542 = reshape(%537, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %543 = reshape(%539, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
  %544 = reshape(%540, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %545 = reshape(%541, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
  %546 = @func_4149(%542, %543, %544, %545) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
  %547 = %546.5;
  %548 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 2376), float64] */, dtype="bool") /* ty=Tensor[(4, 2376), bool] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(1), int32] */;
  %550 = cast(%547, dtype="bool") /* ty=Tensor[(9504), bool] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?), bool] */;
  %552 = %535.2;
  %553 = cast(%552, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %554 = reshape(%553, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), uint16] */;
  %555 = @func_3338(%554) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), bool]) */;
  %556 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %557 = cast(%var_7037, dtype="bool") /* ty=Tensor[(150, 2), bool] */;
  %558 = reshape(%556, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %559 = reshape(%557, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
  %560 = @func_4778(%558, %559) /* ty=(Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) */;
  %561 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %562 = logical_and(%550, %551) /* ty=Tensor[(9504), bool] */;
  %563 = %555.1;
  %564 = %560.7;
  %565 = %561.0;
  (%552, %538, meta[relay.Constant][25] /* ty=Tensor[(360), int64] */, meta[relay.Constant][26] /* ty=Tensor[(864), float64] */, %562, %563, %564, %var_7037, %565)
}

def @func_4926() -> (Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %566 = @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */;
  %567 = @func_2546() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %568 = %566.3;
  %569 = %567.0;
  %570 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %571 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%568, %569, %570, %571)
}

def @func_9381(%var_9380: Tensor[(15, 2, 12), float64]) -> (Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), float64]) {
  %583 = fn (%var_9366: Tensor[(15, 2, 12), float64]) -> (Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), float64]) {
    %572 = @func_5953() /* ty=Tensor[(15, 2, 12), float64] */;
    %573 = cast(%var_9366, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
    %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(%572, dtype="float32") /* ty=Tensor[(15, 2, 12), float32] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %577 = cast(%572, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
    %578 = shape_of(%var_9366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %579 = cast(%var_9366, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %581 = floor_mod(%575, %576) /* ty=Tensor[(15, 2, 12), float32] */;
    %582 = floor_divide(%579, %580) /* ty=Tensor[(15, 2, 12), float64] */;
    (%581, %582)
  };
  %583(%var_9380) /* ty=(Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), float64]) */
}

def @func_2813() -> (Tensor[(15, 2, 12), uint16],) {
  %585 = fn () -> (Tensor[(15, 2, 12), uint16],) {
    %584 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
    (%584,)
  };
  %585() /* ty=(Tensor[(15, 2, 12), uint16],) */
}

def @func_10011() -> (Tensor[(5, 7, 12), uint16], Tensor[(7, 9, 14), int16]) {
  @func_10009() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(7, 9, 14), int16]) */
}

def @func_5865() -> Tensor[(864), float64] {
  @func_5863() /* ty=Tensor[(864), float64] */
}

def @func_9095(%var_9091: Tensor[(2, 6, 12), int16], %var_9092: Tensor[(360), int64], %var_9093: Tensor[(864), float64], %var_9094: Tensor[(288), float32]) -> (Tensor[(2, 6, 12), int16], Tensor[(864), float64], Tensor[(360), int64], Tensor[(864), float64], Tensor[(15, 117), float32], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(288), float32]) {
  %607 = fn (%var_9054: Tensor[(2, 6, 12), int16], %var_9069: Tensor[(360), int64], %var_9070: Tensor[(864), float64], %var_9083: Tensor[(288), float32]) -> (Tensor[(2, 6, 12), int16], Tensor[(864), float64], Tensor[(360), int64], Tensor[(864), float64], Tensor[(15, 117), float32], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(288), float32]) {
    %586 = cast(meta[relay.Constant][28] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %587 = cast(%var_9054, dtype="int16") /* ty=Tensor[(2, 6, 12), int16] */;
    %588 = cast(%var_9069, dtype="int64") /* ty=Tensor[(360), int64] */;
    %589 = cast(%var_9070, dtype="float64") /* ty=Tensor[(864), float64] */;
    %590 = reshape(%588, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %591 = reshape(%589, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %592 = @func_1389(%590, %591) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) */;
    %593 = @func_3669() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */;
    %594 = cast(%var_9069, dtype="int64") /* ty=Tensor[(360), int64] */;
    %595 = reshape(%594, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %596 = @func_3758(%595) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64]) */;
    %597 = cast(%var_9083, dtype="float32") /* ty=Tensor[(288), float32] */;
    %598 = cast(%var_9069, dtype="int64") /* ty=Tensor[(360), int64] */;
    %599 = reshape(%597, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %600 = reshape(%598, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %601 = @func_3861(%599, %600) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) */;
    %602 = bitwise_and(%586, %587) /* ty=Tensor[(2, 6, 12), int16] */;
    %603 = %592.3;
    %604 = %593.7;
    %605 = %596.0;
    %606 = %601.0;
    (%602, %603, %var_9069, %var_9070, %604, %605, %606, %var_9083)
  };
  %607(%var_9091, %var_9092, %var_9093, %var_9094) /* ty=(Tensor[(2, 6, 12), int16], Tensor[(864), float64], Tensor[(360), int64], Tensor[(864), float64], Tensor[(15, 117), float32], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(288), float32]) */
}

def @func_9167() -> Tensor[(5, 7, 12), uint16] {
  %608 = @func_8740() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %608.0
}

def @func_1313(%var_1218: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) {
  %609 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %610 = cast(%var_1218, dtype="int64") /* ty=Tensor[(360), int64] */;
  %611 = cast(meta[relay.Constant][29] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %612 = reshape(%610, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %613 = reshape(%611, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %614 = @func_601(%612, %613) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %615 = cast(meta[relay.Constant][29] /* ty=Tensor[(864), float64] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %616 = sigmoid(%615) /* ty=Tensor[(864), float32] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(864), float64] */;
  %618 = atanh(%617) /* ty=Tensor[(864), float64] */;
  %619 = cast(%618, dtype="bool") /* ty=Tensor[(864), bool] */;
  %620 = shape_of(%616, dtype="int32") /* ty=Tensor[(1), int32] */;
  %621 = cast(%616, dtype="bool") /* ty=Tensor[(864), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?), bool] */;
  %623 = cast(%var_1218, dtype="int64") /* ty=Tensor[(360), int64] */;
  %624 = cast(%616, dtype="float64") /* ty=Tensor[(864), float64] */;
  %625 = reshape(%623, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %626 = reshape(%624, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %627 = @func_601(%625, %626) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %628 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %629 = %609.0;
  %630 = %614.2;
  %631 = less(%621, %622) /* ty=Tensor[(864), bool] */;
  %632 = %627.4;
  %633 = %628.0;
  (%629, %630, %var_1218, %631, %632, %633)
}

def @func_782(%var_771: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) {
  %634 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %635 = cast(%var_771, dtype="int64") /* ty=Tensor[(360), int64] */;
  %636 = reshape(%635, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %637 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %638 = @func_553(%636) /* ty=Tensor[(15, 2, 12), bool] */;
  %639 = cast(%638, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
  %640 = reshape(%639, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %641 = %634.0;
  %642 = %637.0;
  %643 = @func_553(%640) /* ty=Tensor[(15, 2, 12), bool] */;
  (%641, %638, %var_771, %642, %643)
}

def @func_9928() -> (Tensor[(5, 7, 12), uint16],) {
  %644 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %645 = %644.0;
  (%645,)
}

def @func_6837() -> (Tensor[(5, 7, 12), uint16],) {
  @func_6835() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_1316(%var_1314: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) {
  @func_1313(%var_1314) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */
}

def @func_9512() -> (Tensor[(5, 7, 12), uint16],) {
  %648 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %646 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %647 = %646.0;
    (%647,)
  };
  %648() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_1869(%var_1837: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) {
  %649 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %650 = %649.0;
  %651 = cast(%650, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %652 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %653 = cast(%var_1837, dtype="float64") /* ty=Tensor[(864), float64] */;
  %654 = reshape(%652, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %655 = reshape(%653, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %656 = @func_1694(%654, %655) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %657 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %658 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %659 = cast(%var_1837, dtype="float64") /* ty=Tensor[(864), float64] */;
  %660 = reshape(%658, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %661 = reshape(%659, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %662 = @func_1694(%660, %661) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %663 = rsqrt(%651) /* ty=Tensor[(5, 7, 12), float64] */;
  %664 = %656.0;
  %665 = %657.0;
  %666 = %662.1;
  (%663, %664, meta[relay.Constant][30] /* ty=Tensor[(360), int64] */, %var_1837, %665, %666)
}

def @func_5199(%var_5198: Tensor[(9504), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(480), float32], Tensor[(11, 864), float64], Tensor[(360), int64], Tensor[(36, 24), float64], Tensor[(9504), float64]) {
  %683 = fn (%var_5191: Tensor[(9504), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(480), float32], Tensor[(11, 864), float64], Tensor[(360), int64], Tensor[(36, 24), float64], Tensor[(9504), float64]) {
    %667 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %668 = cast(meta[relay.Constant][31] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %669 = reshape(%668, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %670 = @func_2702(%669) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
    %671 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %672 = %667.0;
    %673 = cast(%672, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
    %674 = cast(meta[relay.Constant][33] /* ty=Tensor[(36, 24), float64] */, dtype="float64") /* ty=Tensor[(36, 24), float64] */;
    %675 = cast(%var_5191, dtype="float64") /* ty=Tensor[(9504), float64] */;
    %676 = reshape(%671, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %677 = reshape(%673, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
    %678 = reshape(%674, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %679 = reshape(%675, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
    %680 = @func_4149(%676, %677, %678, %679) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
    %681 = %670.2;
    %682 = %680.3;
    (%672, %681, meta[relay.Constant][31] /* ty=Tensor[(480), float32] */, %682, meta[relay.Constant][32] /* ty=Tensor[(360), int64] */, meta[relay.Constant][33] /* ty=Tensor[(36, 24), float64] */, %var_5191)
  };
  %683(%var_5198) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(480), float32], Tensor[(11, 864), float64], Tensor[(360), int64], Tensor[(36, 24), float64], Tensor[(9504), float64]) */
}

def @func_8250() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) {
  @func_8248() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */
}

def @func_2333() -> (Tensor[(8, 9, 12), float64],) {
  %684 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %685 = %684.1;
  (%685,)
}

def @func_9568() -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(13, 9, 6), float64], Tensor[(800), uint32]) {
  @func_9566() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(13, 9, 6), float64], Tensor[(800), uint32]) */
}

def @func_492() -> (Tensor[(5, 7, 12), uint16],) {
  @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_10367(%var_10365: Tensor[(5, 16, 11), float32], %var_10366: Tensor[(5, 16, 11), float32]) -> (Tensor[(5, 16, 11), int16], Tensor[(864), float64], Tensor[(5, 16, 11), int8]) {
  @func_10363(%var_10365, %var_10366) /* ty=(Tensor[(5, 16, 11), int16], Tensor[(864), float64], Tensor[(5, 16, 11), int8]) */
}

def @func_1998(%var_1971: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) {
  %686 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %687 = cast(%var_1971, dtype="int64") /* ty=Tensor[(360), int64] */;
  %688 = reshape(%687, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %689 = @func_1313(%688) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */;
  %690 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %691 = %686.1;
  %692 = @func_1528() /* ty=Tensor[(5, 7, 12), uint16] */;
  %693 = %689.1;
  %694 = %690.0;
  (%691, %692, %693, %var_1971, %694)
}

def @func_6315() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  %695 = @func_4878() /* ty=Tensor[(5, 7, 12), uint16] */;
  %696 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
  (%695, %696)
}

def @func_7529() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), float64], Tensor[(8, 9, 12), float64], Tensor[(300), bool], Tensor[(15, 2, 12), bool], Tensor[(9504), float64]) {
  %697 = @func_6873() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %698 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %699 = reshape(%698, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %700 = @func_782(%699) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */;
  %701 = %697.0;
  %702 = cast(%701, dtype="uint16") /* ty=Tensor[(5, 7, 12), uint16] */;
  %703 = reshape(%702, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), uint16] */;
  %704 = cast(meta[relay.Constant][35] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %705 = reshape(%704, newshape=[300, 1]) /* ty=Tensor[(300, 1), bool] */;
  %706 = @func_4979(%705) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) */;
  %707 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
  %708 = @func_2297(%703) /* ty=Tensor[(5, 7, 12), float64] */;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %710 = %706.0;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %712 = cast(meta[relay.Constant][36] /* ty=Tensor[(9504), float64] */, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %713 = reshape(%707, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %714 = reshape(%709, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float32] */;
  %715 = reshape(%711, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %716 = reshape(%712, newshape=[9504]) /* ty=Tensor[(9504), float64] */;
  %717 = @func_4149(%713, %714, %715, %716) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) */;
  %718 = %700.4;
  %719 = %717.0;
  (%701, %718, meta[relay.Constant][34] /* ty=Tensor[(360), int64] */, %708, %710, meta[relay.Constant][35] /* ty=Tensor[(300), bool] */, %719, meta[relay.Constant][36] /* ty=Tensor[(9504), float64] */)
}

def @func_10720() -> Tensor[(864), float64] {
  @func_4725() /* ty=Tensor[(864), float64] */
}

def @func_3692(%var_3684: Tensor[(288), float32]) -> (Tensor[(864), float64], Tensor[(12, 2, 12), float32], Tensor[(288), float32]) {
  %720 = cast(%var_3684, dtype="float32") /* ty=Tensor[(288), float32] */;
  %721 = reshape(%720, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
  %722 = @func_926(%721) /* ty=(Tensor[(12, 2, 12), float32],) */;
  %723 = @func_3019() /* ty=Tensor[(864), float64] */;
  %724 = %722.0;
  (%723, %724, %var_3684)
}

def @func_5920() -> (Tensor[(15, 2, 12), uint16],) {
  %725 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %726 = %725.0;
  (%726,)
}

def @func_1773(%var_1771: Tensor[(10, 3, 7), float64], %var_1772: Tensor[(288), float32]) -> (Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) {
  %739 = fn (%var_1740: Tensor[(10, 3, 7), float64], %var_1744: Tensor[(288), float32]) -> (Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) {
    %727 = cast(%var_1740, dtype="float64") /* ty=Tensor[(10, 3, 7), float64] */;
    %728 = cast(%var_1744, dtype="float32") /* ty=Tensor[(288), float32] */;
    %729 = reshape(%728, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %730 = @func_1174(%729) /* ty=(Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16]) */;
    %731 = cast(meta[relay.Constant][37] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %732 = cast(meta[relay.Constant][38] /* ty=Tensor[(216, 4), float64] */, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
    %733 = reshape(%731, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %734 = reshape(%732, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
    %735 = @func_601(%733, %734) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
    %736 = sin(%727) /* ty=Tensor[(10, 3, 7), float64] */;
    %737 = %730.1;
    %738 = %735.2;
    (%736, %737, %var_1744, %738, meta[relay.Constant][37] /* ty=Tensor[(360), int64] */, meta[relay.Constant][38] /* ty=Tensor[(216, 4), float64] */)
  };
  %739(%var_1771, %var_1772) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */
}

def @func_4593() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32]) {
  %744 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32]) {
    %740 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %741 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
    %742 = %740.0;
    %743 = %741.2;
    (%742, %743)
  };
  %744() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32]) */
}

def @func_10009() -> (Tensor[(5, 7, 12), uint16], Tensor[(7, 9, 14), int16]) {
  %745 = @func_5097() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64]) */;
  %746 = @func_8133() /* ty=(Tensor[(7, 9, 14), int16],) */;
  %747 = %745.2;
  %748 = %746.0;
  (%747, %748)
}

def @func_7128() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %749 = cast(meta[relay.Constant][39] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %750 = reshape(%749, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %751 = @func_5315(%750) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %752 = @func_1002() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(864), float64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), uint16]) */;
  %753 = @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */;
  %754 = %751.0;
  %755 = @func_6790() /* ty=Tensor[(5, 7, 12), uint16] */;
  %756 = %752.1;
  (%753, %754, meta[relay.Constant][39] /* ty=Tensor[(480), float32] */, %755, %756)
}

def @func_5141(%var_5140: Tensor[(8, 5, 5), float64]) -> (Tensor[(8, 5, 5), float64],) {
  %759 = fn (%var_5131: Tensor[(8, 5, 5), float64]) -> (Tensor[(8, 5, 5), float64],) {
    %757 = cast(%var_5131, dtype="float64") /* ty=Tensor[(8, 5, 5), float64] */;
    %758 = asinh(%757) /* ty=Tensor[(8, 5, 5), float64] */;
    (%758,)
  };
  %759(%var_5140) /* ty=(Tensor[(8, 5, 5), float64],) */
}

def @func_6873() -> (Tensor[(5, 7, 12), uint16],) {
  %760 = @func_6345() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %761 = %760.0;
  (%761,)
}

def @func_10476() -> Tensor[(5, 7, 12), uint16] {
  %763 = fn () -> Tensor[(5, 7, 12), uint16] {
    %762 = @func_6521() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) */;
    %762.0
  };
  %763() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_6791() -> Tensor[(5, 7, 12), uint16] {
  %765 = fn () -> Tensor[(5, 7, 12), uint16] {
    %764 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %764.0
  };
  %765() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_2702(%var_2692: Tensor[(480), float32]) -> (Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) {
  %766 = cast(%var_2692, dtype="float32") /* ty=Tensor[(480), float32] */;
  %767 = cast(%var_2692, dtype="float32") /* ty=Tensor[(480), float32] */;
  %768 = reshape(%766, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
  %769 = reshape(%767, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
  %770 = @func_853(%768, %769) /* ty=(Tensor[(3, 10, 16), int64],) */;
  %771 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %772 = %770.0;
  (%771, %772, %var_2692)
}

def @func_2492(%var_2472: Tensor[(10, 16, 5), uint32], %var_2473: Tensor[(10, 16, 5), uint32]) -> (Tensor[(10, 16, 5), uint32],) {
  %773 = cast(%var_2473, dtype="uint32") /* ty=Tensor[(10, 16, 5), uint32] */;
  %774 = shape_of(%var_2472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%var_2472, dtype="uint32") /* ty=Tensor[(10, 16, 5), uint32] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %777 = right_shift(%775, %776) /* ty=Tensor[(10, 16, 5), uint32] */;
  (%777,)
}

def @func_10470() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %778 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %779 = @func_8083() /* ty=Tensor[(5, 7, 12), uint16] */;
  %780 = %778.2;
  (%779, %780)
}

def @func_10563(%var_10560: int8, %var_10561: Tensor[(12, 14, 1), int8], %var_10562: Tensor[(800, 1), uint32]) -> (Tensor[(12, 14, 1), bool], Tensor[(13, 9, 6), float64], Tensor[(8, 5, 5), float64], Tensor[(5, 7, 12), float32], Tensor[(585, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(800, 200), bool]) {
  %807 = fn (%var_10477: int8, %var_10478: Tensor[(12, 14, 1), int8], %var_10516: Tensor[(800, 1), uint32]) -> (Tensor[(12, 14, 1), bool], Tensor[(13, 9, 6), float64], Tensor[(8, 5, 5), float64], Tensor[(5, 7, 12), float32], Tensor[(585, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(800, 200), bool]) {
    %781 = cast(%var_10477, dtype="bool") /* ty=bool */;
    %782 = cast(%var_10478, dtype="bool") /* ty=Tensor[(12, 14, 1), bool] */;
    %783 = @func_9566() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(13, 9, 6), float64], Tensor[(800), uint32]) */;
    %784 = cast(meta[relay.Constant][40] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
    %785 = reshape(%784, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
    %786 = @func_5139(%785) /* ty=(Tensor[(8, 5, 5), float64],) */;
    %787 = cast(meta[relay.Constant][41] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
    %788 = reshape(%787, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
    %789 = @func_3561(%788) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) */;
    %790 = cast(%var_10516, dtype="uint32") /* ty=Tensor[(800, 1), uint32] */;
    %791 = reshape(%790, newshape=[800]) /* ty=Tensor[(800), uint32] */;
    %792 = @func_10051(%791) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(10, 16, 5), uint32], Tensor[(800), uint32]) */;
    %793 = @func_7247() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %794 = @func_7885() /* ty=(Tensor[(15, 2, 12), bool],) */;
    %795 = cast(%var_10516, dtype="bool") /* ty=Tensor[(800, 1), bool] */;
    %796 = cast(meta[relay.Constant][40] /* ty=Tensor[(200), float64] */, dtype="bool") /* ty=Tensor[(200), bool] */;
    %797 = less_equal(%781, %782) /* ty=Tensor[(12, 14, 1), bool] */;
    %798 = %783.2;
    %799 = %786.0;
    %800 = %789.1;
    %801 = @func_8748() /* ty=Tensor[(5, 7, 12), uint16] */;
    %802 = %792.0;
    %803 = @func_6578() /* ty=Tensor[(8, 9, 12), float64] */;
    %804 = %793.0;
    %805 = %794.0;
    %806 = logical_or(%795, %796) /* ty=Tensor[(800, 200), bool] */;
    (%797, %798, %799, %800, meta[relay.Constant][41] /* ty=Tensor[(585, 3), float32] */, %801, %802, %803, %804, %805, %806)
  };
  %807(%var_10560, %var_10561, %var_10562) /* ty=(Tensor[(12, 14, 1), bool], Tensor[(13, 9, 6), float64], Tensor[(8, 5, 5), float64], Tensor[(5, 7, 12), float32], Tensor[(585, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(800, 200), bool]) */
}

def @func_8820() -> (Tensor[(15, 2, 12), bool],) {
  %808 = @func_8248() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */;
  %809 = %808.2;
  (%809,)
}

def @func_7130() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  @func_7128() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_10832(%var_10830: Tensor[(200), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) {
  @func_10829(%var_10830) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) */
}

def @func_9767() -> Tensor[(5, 7, 12), uint16] {
  %810 = fn () -> Tensor[(5, 7, 12), uint16] {
    @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
  };
  %810() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_620() -> Tensor[(5, 7, 12), uint16] {
  %811 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %811.0
}

def @func_3970(%var_3967: Tensor[(300), int32], %var_3968: Tensor[(1040), float32], %var_3969: Tensor[(288), float32]) -> (Tensor[(480), float32], Tensor[(60), int32], Tensor[(12, 5, 5), uint32], Tensor[(1040), float32], Tensor[(360), int64], Tensor[(210), float64], Tensor[(288), float32], Tensor[(8, 9, 12), float64], Tensor[(8, 13, 10), float32]) {
  @func_3965(%var_3967, %var_3968, %var_3969) /* ty=(Tensor[(480), float32], Tensor[(60), int32], Tensor[(12, 5, 5), uint32], Tensor[(1040), float32], Tensor[(360), int64], Tensor[(210), float64], Tensor[(288), float32], Tensor[(8, 9, 12), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_3695(%var_3693: Tensor[(288), float32]) -> (Tensor[(864), float64], Tensor[(12, 2, 12), float32], Tensor[(288), float32]) {
  @func_3692(%var_3693) /* ty=(Tensor[(864), float64], Tensor[(12, 2, 12), float32], Tensor[(288), float32]) */
}

def @func_10472() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  @func_10470() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_8701() -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(300), bool]) {
  %817 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(300), bool]) {
    %812 = cast(meta[relay.Constant][42] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
    %813 = reshape(%812, newshape=[150, 2]) /* ty=Tensor[(150, 2), bool] */;
    %814 = @func_7046(%813) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(9504), bool], Tensor[(5, 7, 12), bool], Tensor[(15, 2, 12), bool], Tensor[(150, 2), bool], Tensor[(15, 2, 12), uint16]) */;
    %815 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
    %816 = %814.2;
    (%815, %816, meta[relay.Constant][42] /* ty=Tensor[(300), bool] */)
  };
  %817() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(300), bool]) */
}

def @func_622() -> Tensor[(5, 7, 12), uint16] {
  @func_620() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_9137() -> Tensor[(5, 7, 12), uint16] {
  @func_9135() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_1628(%var_1562: Tensor[(360), int64], %var_1563: Tensor[(864), float64], %var_1588: Tensor[(11, 864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  %818 = cast(%var_1562, dtype="int64") /* ty=Tensor[(360), int64] */;
  %819 = cast(%var_1563, dtype="float64") /* ty=Tensor[(864), float64] */;
  %820 = reshape(%818, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %821 = reshape(%819, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %822 = @func_1389(%820, %821) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) */;
  %823 = %822.1;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %825 = cast(%var_1588, dtype="float64") /* ty=Tensor[(11, 864), float64] */;
  %826 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %827 = %826.0;
  %828 = cast(%827, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %829 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %830 = %829.0;
  %831 = cast(%830, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %832 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  %833 = floor_mod(%824, %825) /* ty=Tensor[(11, 864), float64] */;
  %834 = sin(%828) /* ty=Tensor[(5, 7, 12), float64] */;
  %835 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %836 = acos(%831) /* ty=Tensor[(5, 7, 12), float32] */;
  (%832, %var_1562, %var_1563, %833, %834, %835, %836)
}

def @func_1633(%var_1630: Tensor[(360), int64], %var_1631: Tensor[(864), float64], %var_1632: Tensor[(11, 864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) {
  @func_1628(%var_1630, %var_1631, %var_1632) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */
}

def @func_1468(%var_1463: Tensor[(12, 5, 1), int32], %var_1464: Tensor[(12, 5, 5), int32]) -> Tensor[(12, 5, 5), bool] {
  %837 = cast(%var_1463, dtype="bool") /* ty=Tensor[(12, 5, 1), bool] */;
  %838 = cast(%var_1464, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
  equal(%837, %838) /* ty=Tensor[(12, 5, 5), bool] */
}

def @func_2924(%var_2922: Tensor[(216, 4), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) {
  @func_2921(%var_2922) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) */
}

def @func_3564(%var_3562: Tensor[(13, 15, 9), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) {
  @func_3561(%var_3562) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) */
}

def @func_7603(%var_7601: float64, %var_7602: Tensor[(7, 3, 6), float64]) -> (Tensor[(7, 3, 6), float64], Tensor[(5, 7, 12), uint16]) {
  %843 = fn (%var_7590: float64, %var_7591: Tensor[(7, 3, 6), float64]) -> (Tensor[(7, 3, 6), float64], Tensor[(5, 7, 12), uint16]) {
    %839 = cast(%var_7590, dtype="float64") /* ty=float64 */;
    %840 = cast(%var_7591, dtype="float64") /* ty=Tensor[(7, 3, 6), float64] */;
    %841 = floor_mod(%839, %840) /* ty=Tensor[(7, 3, 6), float64] */;
    %842 = @func_6790() /* ty=Tensor[(5, 7, 12), uint16] */;
    (%841, %842)
  };
  %843(%var_7601, %var_7602) /* ty=(Tensor[(7, 3, 6), float64], Tensor[(5, 7, 12), uint16]) */
}

def @func_10756() -> (Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), bool]) {
  %848 = fn () -> (Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), bool]) {
    %844 = @func_7570() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(12, 5, 5), bool]) */;
    %845 = @func_8820() /* ty=(Tensor[(15, 2, 12), bool],) */;
    %846 = %844.0;
    %847 = %845.0;
    (%846, %847)
  };
  %848() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), bool]) */
}

def @func_7166() -> Tensor[(15, 2, 12), int16] {
  %855 = fn () -> Tensor[(15, 2, 12), int16] {
    %849 = @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */;
    %850 = %849.4;
    %851 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 2, 12), uint16] */, dtype="int16") /* ty=Tensor[(15, 2, 12), int16] */;
    %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
    %853 = cast(%850, dtype="int16") /* ty=Tensor[(15, 2, 12), int16] */;
    %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    right_shift(%853, %854) /* ty=Tensor[(15, 2, 12), int16] */
  };
  %855() /* ty=Tensor[(15, 2, 12), int16] */
}

def @func_1694(%var_1691: Tensor[(360), int64], %var_1692: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) {
  %856 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %857 = cast(%var_1691, dtype="int64") /* ty=Tensor[(360), int64] */;
  %858 = cast(%var_1692, dtype="float64") /* ty=Tensor[(864), float64] */;
  %859 = reshape(%857, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %860 = reshape(%858, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
  %861 = @func_601(%859, %860) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
  %862 = %856.0;
  %863 = %861.3;
  (%862, %863, %var_1691, %var_1692)
}

def @func_9861(%var_9817: Tensor[(13, 9, 11), float32], %var_9820: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), bool], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(13, 9, 11), float64], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float32]) {
  %864 = cast(%var_9817, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %865 = cast(%var_9820, dtype="bool") /* ty=Tensor[(13, 9, 11), bool] */;
  %866 = shape_of(%var_9817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_9817, dtype="bool") /* ty=Tensor[(13, 9, 11), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = cast(meta[relay.Constant][44] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %870 = reshape(%869, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %871 = @func_2702(%870) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %872 = cast(%var_9817, dtype="float64") /* ty=Tensor[(13, 9, 11), float64] */;
  %873 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
  %874 = %873.0;
  %875 = cast(%874, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %876 = reshape(%875, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), float64] */;
  %877 = @func_9379(%876) /* ty=(Tensor[(15, 2, 12), float32], Tensor[(15, 2, 12), float64]) */;
  %878 = sinh(%864) /* ty=Tensor[(13, 9, 11), float32] */;
  %879 = greater_equal(%867, %868) /* ty=Tensor[(13, 9, 11), bool] */;
  %880 = %871.0;
  %881 = atanh(%872) /* ty=Tensor[(13, 9, 11), float64] */;
  %882 = %877.0;
  (%878, %879, %880, meta[relay.Constant][44] /* ty=Tensor[(480), float32] */, %881, %874, %882)
}

def @func_9865(%var_9863: Tensor[(13, 9, 11), float32], %var_9864: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), bool], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(13, 9, 11), float64], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float32]) {
  @func_9861(%var_9863, %var_9864) /* ty=(Tensor[(13, 9, 11), float32], Tensor[(13, 9, 11), bool], Tensor[(5, 7, 12), uint16], Tensor[(480), float32], Tensor[(13, 9, 11), float64], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float32]) */
}

def @func_1821() -> (Tensor[(5, 7, 12), uint16],) {
  @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_8291() -> (Tensor[(200), float64],) {
  %883 = @func_7282() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(8, 5, 5), float64], Tensor[(200), float64]) */;
  %884 = %883.4;
  (%884,)
}

def @func_785(%var_783: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) {
  @func_782(%var_783) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool]) */
}

def @func_3864(%var_3862: Tensor[(288), float32], %var_3863: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) {
  %897 = fn (%var_3823: Tensor[(288), float32], %var_3826: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) {
    %885 = cast(%var_3823, dtype="float32") /* ty=Tensor[(288), float32] */;
    %886 = reshape(%885, newshape=[12, 2, 12]) /* ty=Tensor[(12, 2, 12), float32] */;
    %887 = @func_926(%886) /* ty=(Tensor[(12, 2, 12), float32],) */;
    %888 = cast(%var_3826, dtype="int64") /* ty=Tensor[(360), int64] */;
    %889 = reshape(%888, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %890 = @func_1313(%889) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */;
    %891 = @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */;
    %892 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
    %893 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
    %894 = %887.0;
    %895 = %890.5;
    %896 = %891.0;
    (%892, %893, %894, %var_3823, %895, %var_3826, %896)
  };
  %897(%var_3862, %var_3863) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) */
}

def @func_553(%var_535: Tensor[(15, 2, 12), int64]) -> Tensor[(15, 2, 12), bool] {
  %898 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 2, 12), int64] */, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %899 = shape_of(%var_535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_535, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%900, %901) /* ty=Tensor[(15, 2, 12), bool] */
}

def @func_2253() -> (Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) {
  @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */
}

def @func_2529() -> Tensor[(15, 2, 12), uint16] {
  @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_5903(%var_5902: Tensor[(14, 12, 3), float32]) -> (Tensor[(14, 12, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %907 = fn (%var_5887: Tensor[(14, 12, 3), float32]) -> (Tensor[(14, 12, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
    %902 = cast(%var_5887, dtype="float32") /* ty=Tensor[(14, 12, 3), float32] */;
    %903 = @func_4569() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64]) */;
    %904 = log(%902) /* ty=Tensor[(14, 12, 3), float32] */;
    %905 = %903.1;
    %906 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
    (%904, %905, %906)
  };
  %907(%var_5902) /* ty=(Tensor[(14, 12, 3), float32], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */
}

def @func_5953() -> Tensor[(15, 2, 12), float64] {
  %908 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
  %908.0
}

def @func_2463(%var_2461: Tensor[(8, 4, 14), float64], %var_2462: Tensor[(8, 4, 14), float64]) -> (Tensor[(8, 4, 14), float64],) {
  @func_2459(%var_2461, %var_2462) /* ty=(Tensor[(8, 4, 14), float64],) */
}

def @func_10445() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) {
  %909 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %910 = @func_6315() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %911 = %909.0;
  %912 = %910.0;
  (%911, %912)
}

def @func_3035() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) {
  %913 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %914 = %913.0;
  %915 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%914, %915)
}

def @func_2986() -> (Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) {
  @func_2984() /* ty=(Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) */
}

def @func_7317(%var_7314: uint32, %var_7315: Tensor[(10, 9, 5), uint32], %var_7316: Tensor[(36, 10), bool]) -> (Tensor[(10, 9, 5), uint32], Tensor[(15, 2, 12), bool], Tensor[(36, 10), bool]) {
  %923 = fn (%var_7292: uint32, %var_7293: Tensor[(10, 9, 5), uint32], %var_7308: Tensor[(36, 10), bool]) -> (Tensor[(10, 9, 5), uint32], Tensor[(15, 2, 12), bool], Tensor[(36, 10), bool]) {
    %916 = cast(%var_7292, dtype="uint32") /* ty=uint32 */;
    %917 = cast(%var_7293, dtype="uint32") /* ty=Tensor[(10, 9, 5), uint32] */;
    %918 = cast(%var_7308, dtype="bool") /* ty=Tensor[(36, 10), bool] */;
    %919 = reshape(%918, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
    %920 = @func_4353(%919) /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) */;
    %921 = subtract(%916, %917) /* ty=Tensor[(10, 9, 5), uint32] */;
    %922 = %920.1;
    (%921, %922, %var_7308)
  };
  %923(%var_7314, %var_7315, %var_7316) /* ty=(Tensor[(10, 9, 5), uint32], Tensor[(15, 2, 12), bool], Tensor[(36, 10), bool]) */
}

def @func_4049(%var_4047: Tensor[(7, 16, 9), float32]) -> Tensor[(7, 16, 9), float32] {
  @func_4046(%var_4047) /* ty=Tensor[(7, 16, 9), float32] */
}

def @func_4981(%var_4980: Tensor[(300, 1), bool]) -> (Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) {
  %932 = fn (%var_4968: Tensor[(300, 1), bool]) -> (Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) {
    %924 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
    %925 = %924.1;
    %926 = cast(%925, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
    %927 = cast(%var_4968, dtype="bool") /* ty=Tensor[(300, 1), bool] */;
    %928 = reshape(%926, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %929 = reshape(%927, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), bool] */;
    %930 = @func_4778(%928, %929) /* ty=(Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) */;
    %931 = %930.3;
    (%925, %931, %var_4968)
  };
  %932(%var_4980) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(12, 5, 5), bool], Tensor[(300, 1), bool]) */
}

def @func_5717() -> Tensor[(5, 7, 12), float32] {
  %934 = fn () -> Tensor[(5, 7, 12), float32] {
    %933 = @func_3669() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */;
    %933.5
  };
  %934() /* ty=Tensor[(5, 7, 12), float32] */
}

def @func_5922() -> (Tensor[(15, 2, 12), uint16],) {
  @func_5920() /* ty=(Tensor[(15, 2, 12), uint16],) */
}

def @func_3965(%var_3881: Tensor[(300), int32], %var_3896: Tensor[(1040), float32], %var_3917: Tensor[(288), float32]) -> (Tensor[(480), float32], Tensor[(60), int32], Tensor[(12, 5, 5), uint32], Tensor[(1040), float32], Tensor[(360), int64], Tensor[(210), float64], Tensor[(288), float32], Tensor[(8, 9, 12), float64], Tensor[(8, 13, 10), float32]) {
  %935 = @func_3669() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */;
  %936 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %937 = cast(%var_3881, dtype="int32") /* ty=Tensor[(300), int32] */;
  %938 = reshape(%936, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), int32] */;
  %939 = reshape(%937, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), int32] */;
  %940 = @func_1468(%938, %939) /* ty=Tensor[(12, 5, 5), bool] */;
  %941 = cast(%var_3881, dtype="uint32") /* ty=Tensor[(300), uint32] */;
  %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%940, dtype="uint32") /* ty=Tensor[(12, 5, 5), uint32] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %945 = cast(meta[relay.Constant][47] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %946 = cast(%var_3917, dtype="float32") /* ty=Tensor[(288), float32] */;
  %947 = reshape(%945, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
  %948 = reshape(%946, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %949 = @func_1770(%947, %948) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %950 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
  %951 = cast(%var_3896, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %952 = reshape(%951, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), float32] */;
  %953 = @func_1204(%952) /* ty=(Tensor[(8, 13, 10), float32],) */;
  %954 = %953.0;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %956 = sqrt(%955) /* ty=Tensor[(8, 13, 10), float64] */;
  %957 = cast(%956, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %958 = %935.3;
  %959 = bitwise_xor(%943, %944) /* ty=Tensor[(12, 5, 5), uint32] */;
  %960 = %949.3;
  %961 = %950.0;
  %962 = acos(%957) /* ty=Tensor[(8, 13, 10), float32] */;
  (%958, meta[relay.Constant][46] /* ty=Tensor[(60), int32] */, %959, %var_3896, %960, meta[relay.Constant][47] /* ty=Tensor[(210), float64] */, %var_3917, %961, %962)
}

def @func_3020() -> Tensor[(864), float64] {
  %964 = fn () -> Tensor[(864), float64] {
    %963 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
    %963.2
  };
  %964() /* ty=Tensor[(864), float64] */
}

def @func_2381() -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) {
  %976 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) {
    %965 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %966 = cast(meta[relay.Constant][48] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %967 = reshape(%966, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %968 = @func_1869(%967) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */;
    %969 = cast(meta[relay.Constant][49] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %970 = cast(meta[relay.Constant][50] /* ty=Tensor[(300), int32] */, dtype="int32") /* ty=Tensor[(300), int32] */;
    %971 = reshape(%969, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), int32] */;
    %972 = reshape(%970, newshape=[12, 5, 5]) /* ty=Tensor[(12, 5, 5), int32] */;
    %973 = %965.0;
    %974 = %968.2;
    %975 = @func_1468(%971, %972) /* ty=Tensor[(12, 5, 5), bool] */;
    (%973, %974, meta[relay.Constant][48] /* ty=Tensor[(864), float64] */, %975, meta[relay.Constant][49] /* ty=Tensor[(60), int32] */, meta[relay.Constant][50] /* ty=Tensor[(300), int32] */)
  };
  %976() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */
}

def @func_2771() -> (Tensor[(5, 7, 12), float32],) {
  %977 = @func_1422() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %978 = %977.0;
  %979 = cast(%978, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %980 = cosh(%979) /* ty=Tensor[(5, 7, 12), float32] */;
  (%980,)
}

def @func_9536() -> (Tensor[(8, 9, 12), float64],) {
  %983 = fn () -> (Tensor[(8, 9, 12), float64],) {
    %981 = @func_2333() /* ty=(Tensor[(8, 9, 12), float64],) */;
    %982 = %981.0;
    (%982,)
  };
  %983() /* ty=(Tensor[(8, 9, 12), float64],) */
}

def @func_820() -> Tensor[(5, 7, 12), uint16] {
  @func_818() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_7049(%var_7047: Tensor[(150, 2), bool]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(9504), bool], Tensor[(5, 7, 12), bool], Tensor[(15, 2, 12), bool], Tensor[(150, 2), bool], Tensor[(15, 2, 12), uint16]) {
  @func_7046(%var_7047) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(9504), bool], Tensor[(5, 7, 12), bool], Tensor[(15, 2, 12), bool], Tensor[(150, 2), bool], Tensor[(15, 2, 12), uint16]) */
}

def @func_605(%var_603: Tensor[(360), int64], %var_604: Tensor[(1, 864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) {
  @func_601(%var_603, %var_604) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */
}

def @func_5863() -> Tensor[(864), float64] {
  @func_3019() /* ty=Tensor[(864), float64] */
}

def @func_5577() -> Tensor[(15, 2, 12), uint16] {
  @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */
}

def @func_929(%var_927: Tensor[(12, 2, 12), float32]) -> (Tensor[(12, 2, 12), float32],) {
  @func_926(%var_927) /* ty=(Tensor[(12, 2, 12), float32],) */
}

def @func_6475(%var_6451: Tensor[(4, 9, 6), float32]) -> Tensor[(4, 9, 6), float32] {
  %984 = cast(%var_6451, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  %985 = log2(%984) /* ty=Tensor[(4, 9, 6), float32] */;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(4, 9, 6), float32] */;
  exp(%986) /* ty=Tensor[(4, 9, 6), float32] */
}

def @func_6488() -> Tensor[(5, 7, 12), uint16] {
  @func_6486() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_6752() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) {
  @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */
}

def @func_9477(%var_9476: Tensor[(1040), float32]) -> (Tensor[(8, 9, 12), float64], Tensor[(12, 2, 12), float32], Tensor[(1040), float32]) {
  %992 = fn (%var_9472: Tensor[(1040), float32]) -> (Tensor[(8, 9, 12), float64], Tensor[(12, 2, 12), float32], Tensor[(1040), float32]) {
    %987 = cast(%var_9472, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %988 = reshape(%987, newshape=[1040]) /* ty=Tensor[(1040), float32] */;
    %989 = @func_1886(%988) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(8, 13, 10), float32], Tensor[(1040), float32]) */;
    %990 = @func_6578() /* ty=Tensor[(8, 9, 12), float64] */;
    %991 = %989.1;
    (%990, %991, %var_9472)
  };
  %992(%var_9476) /* ty=(Tensor[(8, 9, 12), float64], Tensor[(12, 2, 12), float32], Tensor[(1040), float32]) */
}

def @func_10652() -> Tensor[(5, 7, 12), uint16] {
  %994 = fn () -> Tensor[(5, 7, 12), uint16] {
    %993 = @func_2874() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint32], Tensor[(5, 7, 12), uint16]) */;
    %993.1
  };
  %994() /* ty=Tensor[(5, 7, 12), uint16] */
}

def @func_1392(%var_1390: Tensor[(360), int64], %var_1391: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) {
  %1008 = fn (%var_1375: Tensor[(360), int64], %var_1376: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) {
    %995 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %996 = %995.0;
    %997 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 7, 12), uint16] */, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
    %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
    %999 = cast(%996, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
    %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1001 = cast(%var_1375, dtype="int64") /* ty=Tensor[(360), int64] */;
    %1002 = cast(%var_1376, dtype="float64") /* ty=Tensor[(864), float64] */;
    %1003 = reshape(%1001, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %1004 = reshape(%1002, newshape=[1, 864]) /* ty=Tensor[(1, 864), float64] */;
    %1005 = @func_601(%1003, %1004) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) */;
    %1006 = mod(%999, %1000) /* ty=Tensor[(5, 7, 12), float32] */;
    %1007 = %1005.4;
    (%1006, %1007, %var_1375, %var_1376)
  };
  %1008(%var_1390, %var_1391) /* ty=(Tensor[(5, 7, 12), float32], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) */
}

def @func_4781(%var_4779: Tensor[(864), float64], %var_4780: Tensor[(12, 5, 5), bool]) -> (Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) {
  %1035 = fn (%var_4741: Tensor[(864), float64], %var_4756: Tensor[(12, 5, 5), bool]) -> (Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) {
    %1009 = cast(%var_4741, dtype="float64") /* ty=Tensor[(864), float64] */;
    %1010 = reshape(%1009, newshape=[216, 4]) /* ty=Tensor[(216, 4), float64] */;
    %1011 = @func_2921(%1010) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
    %1012 = %1011.2;
    %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(216, 4), float64] */;
    %1014 = @func_2380() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(12, 5, 5), bool], Tensor[(60), int32], Tensor[(300), int32]) */;
    %1015 = %1014.3;
    %1016 = cast(%var_4756, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
    %1017 = shape_of(%1015, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1018 = cast(%1015, dtype="bool") /* ty=Tensor[(12, 5, 5), bool] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1020 = @func_2682() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */;
    %1021 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 72), float32] */, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
    %1022 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
    %1023 = cast(%1022, dtype="int64") /* ty=Tensor[(15, 2, 12), int64] */;
    %1024 = reshape(%1021, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1025 = reshape(%1023, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %1026 = @func_3861(%1024, %1025) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(12, 2, 12), float32], Tensor[(288), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(5, 7, 12), float32]) */;
    %1027 = %1020.1;
    %1028 = cast(%1027, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
    %1029 = reshape(%1028, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), bool] */;
    %1030 = @func_4353(%1029) /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), bool]) */;
    %1031 = sigmoid(%1013) /* ty=Tensor[(216, 4), float64] */;
    %1032 = logical_and(%1018, %1019) /* ty=Tensor[(12, 5, 5), bool] */;
    %1033 = %1026.3;
    %1034 = %1030.1;
    (%var_4741, %1022, %1031, %1032, %1027, %1033, meta[relay.Constant][52] /* ty=Tensor[(4, 72), float32] */, %1034)
  };
  %1035(%var_4779, %var_4780) /* ty=(Tensor[(864), float64], Tensor[(15, 2, 12), uint16], Tensor[(216, 4), float64], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), bool], Tensor[(288), float32], Tensor[(4, 72), float32], Tensor[(15, 2, 12), bool]) */
}

def @main(%var_10915: Tensor[(9, 4, 5), float32]) -> (Tensor[(9, 4, 5), uint64],) {
  %1036 = cast(%var_10915, dtype="float32") /* ty=Tensor[(9, 4, 5), float32] */;
  %1037 = erf(%1036) /* ty=Tensor[(9, 4, 5), float32] */;
  %1038 = cast(%var_10915, dtype="uint64") /* ty=Tensor[(9, 4, 5), uint64] */;
  %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1037, dtype="uint64") /* ty=Tensor[(9, 4, 5), uint64] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1042 = right_shift(%1040, %1041) /* ty=Tensor[(9, 4, 5), uint64] */;
  (%1042,)
}

def @func_8437(%var_8435: Tensor[(864), float64]) -> (Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64], Tensor[(864), float64], Tensor[(200), float64], Tensor[(864), float64]) {
  @func_8434(%var_8435) /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64], Tensor[(864), float64], Tensor[(200), float64], Tensor[(864), float64]) */
}

def @func_10584(%var_10575: Tensor[(8, 16, 14), int8]) -> Tensor[(8, 16, 14), bool] {
  %1043 = cast(%var_10575, dtype="bool") /* ty=Tensor[(8, 16, 14), bool] */;
  %1044 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(8, 16, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1045 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 16, 14), int8] */, dtype="bool") /* ty=Tensor[(8, 16, 14), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1045, %1046) /* ty=Tensor[(8, 16, 14), bool] */
}

def @func_6875() -> (Tensor[(5, 7, 12), uint16],) {
  @func_6873() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_10426() -> Tensor[(5, 7, 12), float32] {
  @func_10424() /* ty=Tensor[(5, 7, 12), float32] */
}

def @func_3341(%var_3339: Tensor[(5, 7, 12), uint16]) -> (Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), bool]) {
  @func_3338(%var_3339) /* ty=(Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), bool]) */
}

def @func_8002(%var_8000: Tensor[(14, 15, 5), int8], %var_8001: Tensor[(14, 15, 5), int8]) -> (Tensor[(14, 15, 5), int8], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(14, 15, 5), bool]) {
  %1062 = fn (%var_7974: Tensor[(14, 15, 5), int8], %var_7995: Tensor[(14, 15, 5), int8]) -> (Tensor[(14, 15, 5), int8], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(14, 15, 5), bool]) {
    %1047 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 15, 5), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 5), int8] */;
    %1048 = shape_of(%var_7974, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1049 = cast(%var_7974, dtype="int8") /* ty=Tensor[(14, 15, 5), int8] */;
    %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1051 = cast(meta[relay.Constant][55] /* ty=Tensor[(864, 1), float64] */, dtype="float64") /* ty=Tensor[(864, 1), float64] */;
    %1052 = reshape(%1051, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %1053 = @func_1869(%1052) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */;
    %1054 = cast(%var_7995, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
    %1055 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(14, 15, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1056 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 15, 5), int8] */, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
    %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1058 = bitwise_and(%1049, %1050) /* ty=Tensor[(14, 15, 5), int8] */;
    %1059 = @func_5813() /* ty=Tensor[(5, 7, 12), uint16] */;
    %1060 = %1053.2;
    %1061 = not_equal(%1056, %1057) /* ty=Tensor[(14, 15, 5), bool] */;
    (%1058, %1059, %1060, meta[relay.Constant][55] /* ty=Tensor[(864, 1), float64] */, %1061)
  };
  %1062(%var_8000, %var_8001) /* ty=(Tensor[(14, 15, 5), int8], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864, 1), float64], Tensor[(14, 15, 5), bool]) */
}

def @func_6327() -> (Tensor[(15, 2, 12), float64],) {
  %1065 = fn () -> (Tensor[(15, 2, 12), float64],) {
    %1063 = @func_3527() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */;
    %1064 = %1063.0;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(15, 2, 12), float64],) */
}

def @func_3248() -> Tensor[(5, 7, 12), float32] {
  %1069 = fn () -> Tensor[(5, 7, 12), float32] {
    %1066 = @func_1819() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %1067 = %1066.0;
    %1068 = cast(%1067, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
    asin(%1068) /* ty=Tensor[(5, 7, 12), float32] */
  };
  %1069() /* ty=Tensor[(5, 7, 12), float32] */
}

def @func_6523() -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) {
  @func_6521() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) */
}

def @func_3106(%var_3102: Tensor[(1, 15, 13), float64]) -> (Tensor[(1, 15, 13), float64],) {
  %1070 = cast(%var_3102, dtype="float64") /* ty=Tensor[(1, 15, 13), float64] */;
  %1071 = sinh(%1070) /* ty=Tensor[(1, 15, 13), float64] */;
  (%1071,)
}

def @func_7708(%var_7706: Tensor[(13, 9, 6), float64]) -> (Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), float32]) {
  @func_7705(%var_7706) /* ty=(Tensor[(13, 9, 6), float64], Tensor[(5, 7, 12), float32]) */
}

def @func_7076(%var_7074: Tensor[(864), float64], %var_7075: Tensor[(24, 396), float64]) -> (Tensor[(15, 2, 12), uint16], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(24, 396), float64]) {
  @func_7072(%var_7074, %var_7075) /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(24, 396), float64]) */
}

def @func_601(%var_595: Tensor[(360), int64], %var_599: Tensor[(1, 864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(8, 9, 12), uint64], Tensor[(1, 864), float64]) {
  %1072 = @func_490() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1073 = cast(%var_595, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1074 = reshape(%1073, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %1075 = cast(%var_599, dtype="float64") /* ty=Tensor[(1, 864), float64] */;
  %1076 = reshape(%1075, newshape=[8, 9, 12]) /* ty=Tensor[(8, 9, 12), float64] */;
  %1077 = %1072.0;
  %1078 = @func_553(%1074) /* ty=Tensor[(15, 2, 12), bool] */;
  %1079 = @func_115(%1076) /* ty=Tensor[(8, 9, 12), uint64] */;
  (%1077, %1078, %var_595, %1079, %var_599)
}

def @func_3037() -> (Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) {
  @func_3035() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(5, 7, 12), uint16]) */
}

def @func_4838() -> (Tensor[(5, 7, 12), uint16],) {
  %1080 = @func_1053() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%1080,)
}

def @func_490() -> (Tensor[(5, 7, 12), uint16],) {
  %1081 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_3142(%var_3140: Tensor[(5, 1, 3), int32], %var_3141: Tensor[(5, 13, 3), int32]) -> Tensor[(5, 13, 3), int64] {
  @func_3138(%var_3140, %var_3141) /* ty=Tensor[(5, 13, 3), int64] */
}

def @func_5445(%var_5443: Tensor[(200), float64], %var_5444: Tensor[(864), float64]) -> (Tensor[(13, 13, 2), uint16], Tensor[(8, 5, 5), float64], Tensor[(200), float64], Tensor[(13, 13, 2), float64], Tensor[(8, 13, 10), float32], Tensor[(1040), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(864), float64]) {
  %1113 = fn (%var_5389: Tensor[(200), float64], %var_5436: Tensor[(864), float64]) -> (Tensor[(13, 13, 2), uint16], Tensor[(8, 5, 5), float64], Tensor[(200), float64], Tensor[(13, 13, 2), float64], Tensor[(8, 13, 10), float32], Tensor[(1040), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(864), float64]) {
    %1083 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
    %1084 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1085 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
    %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1087 = less(%1085, %1086) /* ty=Tensor[(13, 13, 2), bool] */;
    %1088 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="uint16") /* ty=Tensor[(13, 13, 2), uint16] */;
    %1089 = shape_of(%1087, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1090 = cast(%1087, dtype="uint16") /* ty=Tensor[(13, 13, 2), uint16] */;
    %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1092 = cast(%var_5389, dtype="float64") /* ty=Tensor[(200), float64] */;
    %1093 = reshape(%1092, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), float64] */;
    %1094 = @func_5139(%1093) /* ty=(Tensor[(8, 5, 5), float64],) */;
    %1095 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 13, 2), uint16] */, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
    %1096 = cast(meta[relay.Constant][58] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %1097 = reshape(%1096, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), float32] */;
    %1098 = @func_1204(%1097) /* ty=(Tensor[(8, 13, 10), float32],) */;
    %1099 = cast(meta[relay.Constant][59] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %1100 = reshape(%1099, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %1101 = @func_1313(%1100) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(864), bool], Tensor[(1, 864), float64], Tensor[(5, 7, 12), uint16]) */;
    %1102 = cast(meta[relay.Constant][59] /* ty=Tensor[(360), int64] */, dtype="int64") /* ty=Tensor[(360), int64] */;
    %1103 = cast(%var_5436, dtype="float64") /* ty=Tensor[(864), float64] */;
    %1104 = reshape(%1102, newshape=[360]) /* ty=Tensor[(360), int64] */;
    %1105 = reshape(%1103, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %1106 = @func_1694(%1104, %1105) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64], Tensor[(360), int64], Tensor[(864), float64]) */;
    %1107 = add(%1090, %1091) /* ty=Tensor[(13, 13, 2), uint16] */;
    %1108 = %1094.0;
    %1109 = sinh(%1095) /* ty=Tensor[(13, 13, 2), float64] */;
    %1110 = %1098.0;
    %1111 = %1101.0;
    %1112 = %1106.3;
    (%1107, %1108, %var_5389, %1109, %1110, meta[relay.Constant][58] /* ty=Tensor[(1040), float32] */, %1111, meta[relay.Constant][59] /* ty=Tensor[(360), int64] */, %1112, %var_5436)
  };
  %1113(%var_5443, %var_5444) /* ty=(Tensor[(13, 13, 2), uint16], Tensor[(8, 5, 5), float64], Tensor[(200), float64], Tensor[(13, 13, 2), float64], Tensor[(8, 13, 10), float32], Tensor[(1040), float32], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(864), float64]) */
}

def @func_115(%var_100: Tensor[(8, 9, 12), float64]) -> Tensor[(8, 9, 12), uint64] {
  %1114 = cast(%var_100, dtype="float64") /* ty=Tensor[(8, 9, 12), float64] */;
  %1115 = sinh(%1114) /* ty=Tensor[(8, 9, 12), float64] */;
  %1116 = cast(%var_100, dtype="uint64") /* ty=Tensor[(8, 9, 12), uint64] */;
  %1117 = shape_of(%1115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1118 = cast(%1115, dtype="uint64") /* ty=Tensor[(8, 9, 12), uint64] */;
  %1119 = dyn.reshape(%1116, %1117, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  minimum(%1118, %1119) /* ty=Tensor[(8, 9, 12), uint64] */
}

def @func_1872(%var_1870: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) {
  @func_1869(%var_1870) /* ty=(Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), uint64]) */
}

def @func_6721(%var_6719: Tensor[(5, 7, 12), uint16]) -> Tensor[(5, 7, 12), bool] {
  @func_6718(%var_6719) /* ty=Tensor[(5, 7, 12), bool] */
}

def @func_7176() -> (Tensor[(5, 7, 12), uint16],) {
  %1122 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %1120 = @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */;
    %1121 = %1120.1;
    (%1121,)
  };
  %1122() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_4149(%var_4119: Tensor[(360), int64], %var_4130: Tensor[(5, 7, 12), float32], %var_4142: Tensor[(864), float64], %var_4143: Tensor[(9504), float64]) -> (Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), bool], Tensor[(11, 864), float64], Tensor[(864), float64], Tensor[(9504), float64], Tensor[(360), int64]) {
  %1123 = cast(%var_4119, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1124 = reshape(%1123, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), int64] */;
  %1125 = @func_3247() /* ty=Tensor[(5, 7, 12), float32] */;
  %1126 = cast(%var_4130, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %1127 = shape_of(%1125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%1125, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1130 = cast(%var_4119, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1131 = cast(%var_4142, dtype="float64") /* ty=Tensor[(864), float64] */;
  %1132 = cast(%var_4143, dtype="float64") /* ty=Tensor[(9504), float64] */;
  %1133 = reshape(%1130, newshape=[360]) /* ty=Tensor[(360), int64] */;
  %1134 = reshape(%1131, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %1135 = reshape(%1132, newshape=[11, 864]) /* ty=Tensor[(11, 864), float64] */;
  %1136 = @func_1628(%1133, %1134, %1135) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(864), float64], Tensor[(11, 864), float64], Tensor[(5, 7, 12), float64], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32]) */;
  %1137 = cast(%var_4142, dtype="float64") /* ty=Tensor[(864), float64] */;
  %1138 = reshape(%1137, newshape=[216, 4]) /* ty=Tensor[(216, 4), float64] */;
  %1139 = @func_2921(%1138) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
  %1140 = @func_553(%1124) /* ty=Tensor[(15, 2, 12), bool] */;
  %1141 = less(%1128, %1129) /* ty=Tensor[(5, 7, 12), bool] */;
  %1142 = %1136.3;
  %1143 = %1139.1;
  (%1140, %var_4119, %1141, %1142, %var_4142, %var_4143, %1143)
}

def @func_3670() -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) {
  %1171 = fn () -> (Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) {
    %1144 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
    %1145 = @func_476() /* ty=(Tensor[(5, 7, 12), uint16],) */;
    %1146 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1147 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1148 = reshape(%1146, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
    %1149 = reshape(%1147, newshape=[3, 10, 16]) /* ty=Tensor[(3, 10, 16), float32] */;
    %1150 = @func_853(%1148, %1149) /* ty=(Tensor[(3, 10, 16), int64],) */;
    %1151 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 117), float32] */, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
    %1152 = reshape(%1151, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
    %1153 = @func_3561(%1152) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(5, 7, 12), float32]) */;
    %1154 = cast(meta[relay.Constant][62] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
    %1155 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(15, 117), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1156 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
    %1157 = dyn.reshape(%1154, %1155, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1158 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
    %1159 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(15, 117), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1160 = cast(meta[relay.Constant][62] /* ty=Tensor[(15, 117), float32] */, dtype="uint64") /* ty=Tensor[(15, 117), uint64] */;
    %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %1162 = bitwise_or(%1160, %1161) /* ty=Tensor[(15, 117), uint64] */;
    %1163 = cast(%1162, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
    %1164 = %1144.0;
    %1165 = %1145.0;
    %1166 = %1150.0;
    %1167 = @func_3019() /* ty=Tensor[(864), float64] */;
    %1168 = %1153.1;
    %1169 = right_shift(%1156, %1157) /* ty=Tensor[(15, 117), uint64] */;
    %1170 = log10(%1163) /* ty=Tensor[(15, 117), float32] */;
    (%1164, %1165, %1166, meta[relay.Constant][60] /* ty=Tensor[(480), float32] */, %1167, %1168, %1169, %1170)
  };
  %1171() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(3, 10, 16), int64], Tensor[(480), float32], Tensor[(864), float64], Tensor[(5, 7, 12), float32], Tensor[(15, 117), uint64], Tensor[(15, 117), float32]) */
}

def @func_8125(%var_8123: Tensor[(864), float64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) {
  @func_8122(%var_8123) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(1, 864), float64], Tensor[(360), int64], Tensor[(864), float64]) */
}

def @func_7733() -> (Tensor[(5, 7, 12), uint16],) {
  %1174 = fn () -> (Tensor[(5, 7, 12), uint16],) {
    %1172 = @func_6521() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), uint16]) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(5, 7, 12), uint16],) */
}

def @func_8822() -> (Tensor[(15, 2, 12), bool],) {
  @func_8820() /* ty=(Tensor[(15, 2, 12), bool],) */
}

def @func_6750() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) {
  %1175 = @func_5475() /* ty=(Tensor[(5, 7, 12), uint16],) */;
  %1176 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 60), float32] */, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %1177 = reshape(%1176, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1178 = @func_5315(%1177) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(8, 9, 12), float64], Tensor[(3, 10, 16), int64], Tensor[(480), float32]) */;
  %1179 = @func_3478() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), bool], Tensor[(12, 5, 5), bool], Tensor[(13, 9, 6), float64], Tensor[(6, 117), uint32]) */;
  %1180 = @func_4926() /* ty=(Tensor[(13, 9, 6), float64], Tensor[(15, 2, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16]) */;
  %1181 = %1175.0;
  %1182 = %1178.0;
  %1183 = %1179.2;
  %1184 = %1180.1;
  (%1181, %1182, meta[relay.Constant][63] /* ty=Tensor[(8, 60), float32] */, %1183, %1184)
}

def @func_1422() -> (Tensor[(5, 7, 12), uint16],) {
  %1185 = @func_818() /* ty=Tensor[(5, 7, 12), uint16] */;
  (%1185,)
}

def @func_4397(%var_4373: Tensor[(7, 8, 16), uint32], %var_4374: Tensor[(7, 8, 16), uint32], %var_4389: Tensor[(195), float64]) -> (Tensor[(7, 8, 16), float64], Tensor[(1, 15, 13), float64], Tensor[(195), float64]) {
  %1186 = cast(%var_4374, dtype="bool") /* ty=Tensor[(7, 8, 16), bool] */;
  %1187 = shape_of(%var_4373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1188 = cast(%var_4373, dtype="bool") /* ty=Tensor[(7, 8, 16), bool] */;
  %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1190 = less_equal(%1188, %1189) /* ty=Tensor[(7, 8, 16), bool] */;
  %1191 = cast(%1190, dtype="float64") /* ty=Tensor[(7, 8, 16), float64] */;
  %1192 = cast(%var_4389, dtype="float64") /* ty=Tensor[(195), float64] */;
  %1193 = reshape(%1192, newshape=[1, 15, 13]) /* ty=Tensor[(1, 15, 13), float64] */;
  %1194 = @func_3106(%1193) /* ty=(Tensor[(1, 15, 13), float64],) */;
  %1195 = atan(%1191) /* ty=Tensor[(7, 8, 16), float64] */;
  %1196 = %1194.0;
  (%1195, %1196, %var_4389)
}

def @func_3338(%var_3323: Tensor[(5, 7, 12), uint16]) -> (Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), bool]) {
  %1197 = @func_620() /* ty=Tensor[(5, 7, 12), uint16] */;
  %1198 = cast(%var_3323, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%1197, dtype="bool") /* ty=Tensor[(5, 7, 12), bool] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1202 = @func_3188() /* ty=Tensor[(15, 2, 12), bool] */;
  %1203 = less_equal(%1200, %1201) /* ty=Tensor[(5, 7, 12), bool] */;
  (%1202, %1203)
}

def @func_2684() -> (Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) {
  @func_2682() /* ty=(Tensor[(8, 9, 12), float64], Tensor[(15, 2, 12), bool], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */
}

def @func_10307(%var_10306: Tensor[(288), float32]) -> (Tensor[(15, 2, 12), uint16], Tensor[(288), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) {
  %1211 = fn (%var_10303: Tensor[(288), float32]) -> (Tensor[(15, 2, 12), uint16], Tensor[(288), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) {
    %1204 = cast(meta[relay.Constant][64] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
    %1205 = cast(%var_10303, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1206 = reshape(%1204, newshape=[10, 3, 7]) /* ty=Tensor[(10, 3, 7), float64] */;
    %1207 = reshape(%1205, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1208 = @func_1770(%1206, %1207) /* ty=(Tensor[(10, 3, 7), float64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(360), int64], Tensor[(360), int64], Tensor[(216, 4), float64]) */;
    %1209 = @func_5575() /* ty=Tensor[(15, 2, 12), uint16] */;
    %1210 = %1208.2;
    (%1209, %1210, meta[relay.Constant][64] /* ty=Tensor[(35, 6), float64] */, %var_10303)
  };
  %1211(%var_10306) /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(288), float32], Tensor[(35, 6), float64], Tensor[(288), float32]) */
}

def @func_1204(%var_1200: Tensor[(8, 13, 10), float32]) -> (Tensor[(8, 13, 10), float32],) {
  %1212 = cast(%var_1200, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %1213 = sinh(%1212) /* ty=Tensor[(8, 13, 10), float32] */;
  (%1213,)
}

def @func_2984() -> (Tensor[(5, 7, 12), float32], Tensor[(15, 2, 12), uint16], Tensor[(15, 2, 12), float64]) {
  %1214 = @func_2771() /* ty=(Tensor[(5, 7, 12), float32],) */;
  %1215 = @func_2251() /* ty=(Tensor[(15, 2, 12), uint16], Tensor[(8, 9, 12), float64]) */;
  %1216 = %1215.0;
  %1217 = cast(%1216, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %1218 = %1214.0;
  %1219 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %1220 = sin(%1217) /* ty=Tensor[(15, 2, 12), float64] */;
  (%1218, %1219, %1220)
}

def @func_2001(%var_1999: Tensor[(360), int64]) -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) {
  @func_1998(%var_1999) /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(360), int64], Tensor[(360), int64], Tensor[(5, 7, 12), uint16]) */
}

def @func_856(%var_854: Tensor[(3, 10, 16), float32], %var_855: Tensor[(3, 10, 16), float32]) -> (Tensor[(3, 10, 16), int64],) {
  %1228 = fn (%var_836: Tensor[(3, 10, 16), float32], %var_839: Tensor[(3, 10, 16), float32]) -> (Tensor[(3, 10, 16), int64],) {
    %1221 = cast(%var_836, dtype="float32") /* ty=Tensor[(3, 10, 16), float32] */;
    %1222 = sigmoid(%1221) /* ty=Tensor[(3, 10, 16), float32] */;
    %1223 = cast(%var_839, dtype="int64") /* ty=Tensor[(3, 10, 16), int64] */;
    %1224 = shape_of(%1222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1225 = cast(%1222, dtype="int64") /* ty=Tensor[(3, 10, 16), int64] */;
    %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1227 = minimum(%1225, %1226) /* ty=Tensor[(3, 10, 16), int64] */;
    (%1227,)
  };
  %1228(%var_854, %var_855) /* ty=(Tensor[(3, 10, 16), int64],) */
}

def @func_2623() -> (Tensor[(15, 2, 12), bool], Tensor[(5, 7, 12), float64]) {
  %1229 = @func_1901() /* ty=Tensor[(15, 2, 12), uint16] */;
  %1230 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 2, 12), uint16] */, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %1231 = shape_of(%1229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(%1229, dtype="bool") /* ty=Tensor[(15, 2, 12), bool] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1234 = @func_876() /* ty=Tensor[(5, 7, 12), uint16] */;
  %1235 = cast(%1234, dtype="float64") /* ty=Tensor[(5, 7, 12), float64] */;
  %1236 = less_equal(%1232, %1233) /* ty=Tensor[(15, 2, 12), bool] */;
  %1237 = sigmoid(%1235) /* ty=Tensor[(5, 7, 12), float64] */;
  (%1236, %1237)
}

def @func_3109(%var_3107: Tensor[(1, 15, 13), float64]) -> (Tensor[(1, 15, 13), float64],) {
  @func_3106(%var_3107) /* ty=(Tensor[(1, 15, 13), float64],) */
}

def @func_7462() -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32], Tensor[(800), uint32]) {
  %1243 = fn () -> (Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32], Tensor[(800), uint32]) {
    %1238 = @func_6750() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), uint16], Tensor[(8, 60), float32], Tensor[(12, 5, 5), bool], Tensor[(15, 2, 12), uint16]) */;
    %1239 = @func_6255() /* ty=(Tensor[(10, 16, 5), uint32], Tensor[(800), uint32], Tensor[(5, 7, 12), int64]) */;
    %1240 = %1238.1;
    %1241 = @func_5716() /* ty=Tensor[(5, 7, 12), float32] */;
    %1242 = %1239.1;
    (%1240, %1241, %1242)
  };
  %1243() /* ty=(Tensor[(5, 7, 12), uint16], Tensor[(5, 7, 12), float32], Tensor[(800), uint32]) */
}

def @func_3528() -> (Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) {
  %1249 = fn () -> (Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) {
    %1244 = @func_2812() /* ty=(Tensor[(15, 2, 12), uint16],) */;
    %1245 = %1244.0;
    %1246 = cast(%1245, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
    %1247 = log(%1246) /* ty=Tensor[(15, 2, 12), float64] */;
    %1248 = @func_2529() /* ty=Tensor[(15, 2, 12), uint16] */;
    (%1247, %1248)
  };
  %1249() /* ty=(Tensor[(15, 2, 12), float64], Tensor[(15, 2, 12), uint16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen503/build/output.py:3853: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen503/build/output.py", line 3858, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(180) tvmgen_default_fused_erf_cast_cast_reshape_right_shift_kernel0(uint64_t* __restrict__ T_right_shift, float* __restrict__ placeholder) {
  T_right_shift[(((int)threadIdx.x))] = (((uint64_t)erff(placeholder[(((int)threadIdx.x))])) >> ((uint64_t)placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_11265(%var_11258: Tensor[(6, 10, 1), float32]) -> Tensor[(6, 10, 1), uint32] {
  %0 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %1 = %0.2;
  %2 = cast(%1, dtype="uint32") /* ty=uint32 */;
  %3 = cast(%var_11258, dtype="uint32") /* ty=Tensor[(6, 10, 1), uint32] */;
  multiply(%2, %3) /* ty=Tensor[(6, 10, 1), uint32] */
}

def @func_3253() -> Tensor[(8, 12, 3), float64] {
  @func_1850() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_9177() -> (Tensor[(8, 12, 3), int32],) {
  %4 = @func_9059() /* ty=Tensor[(8, 12, 3), int32] */;
  (%4,)
}

def @func_2229(%var_2212: Tensor[(8, 12, 3), float64]) -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), float64]) {
  %5 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %6 = %5.0;
  %7 = cast(%var_2212, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %12 = divide(%9, %10) /* ty=Tensor[(8, 12, 3), float32] */;
  %13 = %11.0;
  (%12, %13)
}

def @func_2504() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %14 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %15 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  %16 = %14.0;
  (%15, %16)
}

def @func_7157() -> (Tensor[(8, 12, 3), float32], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(24, 8), float64]) {
  %17 = @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %20 = reshape(%18, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
  %21 = reshape(%19, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), float64] */;
  %22 = @func_4269(%20, %21) /* ty=(Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) */;
  %23 = %17.0;
  %24 = %22.1;
  (%23, %24, meta[relay.Constant][0] /* ty=Tensor[(48), float32] */, meta[relay.Constant][1] /* ty=Tensor[(24, 8), float64] */)
}

def @func_9528(%var_9525: Tensor[(7, 182), float64]) -> (Tensor[(150), uint64], Tensor[(8, 12, 3), float64], Tensor[(1078), int16], Tensor[(539, 2), int16], Tensor[(13, 7, 14), int32], Tensor[(7, 182), float64]) {
  %25 = @func_6424() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */;
  %26 = @func_4670() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(539, 2), int16] */, dtype="int16") /* ty=Tensor[(539, 2), int16] */;
  %28 = reshape(%27, newshape=[1078]) /* ty=Tensor[(1078), int16] */;
  %29 = @func_6527(%28) /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32], Tensor[(1078), int16]) */;
  %30 = cast(%var_9525, dtype="float64") /* ty=Tensor[(7, 182), float64] */;
  %31 = reshape(%30, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
  %32 = @func_6080(%31) /* ty=(Tensor[(13, 7, 14), int32],) */;
  %33 = %25.2;
  %34 = %26.0;
  %35 = %29.2;
  %36 = %32.0;
  (%33, %34, %35, meta[relay.Constant][2] /* ty=Tensor[(539, 2), int16] */, %36, %var_9525)
}

def @func_2104(%var_2096: Tensor[(8, 12, 3), float64]) -> Tensor[(8, 12, 3), int32] {
  %37 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  %38 = cast(%var_2096, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%40, %41) /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_3265() -> (Tensor[(13, 7, 14), float32],) {
  %42 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %43 = %42.1;
  (%43,)
}

def @func_7344() -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) {
  %44 = @func_5294() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32]) */;
  %45 = %44.1;
  %46 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  (%45, %46)
}

def @func_4496() -> (Tensor[(8, 12, 3), int32],) {
  %47 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  (%47,)
}

def @func_7383() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), int32]) {
  %48 = @func_4068() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %49 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %50 = %48.0;
  %51 = %49.0;
  (%50, %51)
}

def @func_10238() -> Tensor[(8, 12, 3), float32] {
  %52 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %52.1
}

def @func_11001() -> Tensor[(8, 12, 3), float64] {
  %53 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %53.0
}

def @func_11083(%var_11056: Tensor[(10, 13, 3), bool], %var_11057: Tensor[(10, 13, 3), bool], %var_11062: Tensor[(60), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(60), uint8], Tensor[(10, 13, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1078), int16], Tensor[(1470), float64], Tensor[(1274), float64]) {
  %54 = cast(%var_11062, dtype="uint8") /* ty=Tensor[(60), uint8] */;
  %55 = reshape(%54, newshape=[60]) /* ty=Tensor[(60), uint8] */;
  %56 = @func_10917(%55) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 6, 4), uint8], Tensor[(60), uint8], Tensor[(8, 12, 3), float64]) */;
  %57 = cast(%var_11057, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %58 = shape_of(%var_11056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%var_11056, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %61 = logical_or(%59, %60) /* ty=Tensor[(10, 13, 3), bool] */;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(10, 13, 3), float64] */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(1078), int16] */, dtype="int16") /* ty=Tensor[(1078), int16] */;
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %66 = reshape(%63, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), int16] */;
  %67 = reshape(%64, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %68 = reshape(%65, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %69 = @func_3473(%66, %67, %68) /* ty=(Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %70 = %56.0;
  %71 = acosh(%62) /* ty=Tensor[(10, 13, 3), float64] */;
  %72 = %69.5;
  (%70, %var_11062, %71, %72, meta[relay.Constant][3] /* ty=Tensor[(1078), int16] */, meta[relay.Constant][4] /* ty=Tensor[(1470), float64] */, meta[relay.Constant][5] /* ty=Tensor[(1274), float64] */)
}

def @func_13333() -> Tensor[(8, 12, 3), int32] {
  %73 = @func_12531() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float32], Tensor[(150), uint64]) */;
  %73.0
}

def @func_155(%var_131: Tensor[(15, 13, 2), uint8]) -> (Tensor[(15, 13, 2), float32],) {
  %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 13, 2), uint8] */, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %75 = shape_of(%var_131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_131, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = greater_equal(%76, %77) /* ty=Tensor[(15, 13, 2), bool] */;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(15, 13, 2), float32] */;
  %80 = atanh(%79) /* ty=Tensor[(15, 13, 2), float32] */;
  (%80,)
}

def @func_5403() -> (Tensor[(8, 12, 3), float64],) {
  %81 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  (%81,)
}

def @func_4770(%var_4764: Tensor[(2, 7, 12), uint64]) -> (Tensor[(2, 7, 12), uint64],) {
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 7, 12), uint64] */, dtype="uint64") /* ty=Tensor[(2, 7, 12), uint64] */;
  %83 = shape_of(%var_4764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%var_4764, dtype="uint64") /* ty=Tensor[(2, 7, 12), uint64] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %86 = multiply(%84, %85) /* ty=Tensor[(2, 7, 12), uint64] */;
  (%86,)
}

def @func_10345() -> (Tensor[(8, 12, 3), int32],) {
  %87 = @func_8201() /* ty=Tensor[(8, 12, 3), int32] */;
  (%87,)
}

def @func_13668() -> Tensor[(8, 12, 3), int32] {
  %88 = @func_10370() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32]) */;
  %88.1
}

def @func_4036(%var_4022: Tensor[(14, 105), float64], %var_4023: uint64, %var_4031: Tensor[(8, 4), uint32]) -> (Tensor[(8, 12, 3), int32], Tensor[(15, 7, 14), uint16], Tensor[(14, 105), float64], uint64, float32, Tensor[(8, 4), uint32]) {
  %89 = cast(%var_4022, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
  %90 = cast(%var_4023, dtype="uint64") /* ty=uint64 */;
  %91 = reshape(%89, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float64] */;
  %92 = reshape(%90, newshape=[]) /* ty=uint64 */;
  %93 = @func_1461(%91, %92) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */;
  %94 = cast(%var_4031, dtype="uint32") /* ty=Tensor[(8, 4), uint32] */;
  %95 = cast(%var_4031, dtype="uint32") /* ty=Tensor[(8, 4), uint32] */;
  %96 = cast(%var_4023, dtype="float32") /* ty=float32 */;
  %97 = reshape(%94, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), uint32] */;
  %98 = reshape(%95, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), uint32] */;
  %99 = reshape(%96, newshape=[]) /* ty=float32 */;
  %100 = @func_2075(%97, %98, %99) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 6, 16), bool], float32, Tensor[(1274), float64], Tensor[(1, 945), uint64]) */;
  %101 = @func_3313() /* ty=Tensor[(8, 12, 3), int32] */;
  %102 = %93.1;
  %103 = %100.2;
  (%101, %102, %var_4022, %var_4023, %103, %var_4031)
}

def @func_9716() -> (Tensor[(8, 12, 3), float64],) {
  %104 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %105 = %104.0;
  (%105,)
}

def @func_9352() -> Tensor[(8, 12, 3), float64] {
  %106 = @func_8163() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) */;
  %106.1
}

def @func_12492(%var_12464: Tensor[(156), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64], Tensor[(13, 7, 14), float32]) {
  %107 = @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %108 = cast(%var_12464, dtype="uint64") /* ty=Tensor[(156), uint64] */;
  %109 = reshape(%108, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), uint64] */;
  %110 = @func_10596() /* ty=Tensor[(8, 12, 3), float64] */;
  %111 = %107.0;
  %112 = @func_7478(%109) /* ty=Tensor[(13, 3, 4), uint64] */;
  %113 = @func_5983() /* ty=Tensor[(13, 7, 14), float32] */;
  (%110, %111, %112, %var_12464, %113)
}

def @func_1461(%var_1411: Tensor[(15, 7, 14), float64], %var_1452: uint64) -> (Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) {
  %114 = cast(%var_1411, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %115 = exp(%114) /* ty=Tensor[(15, 7, 14), float64] */;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %117 = log10(%116) /* ty=Tensor[(15, 7, 14), float32] */;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %119 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%115, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %122 = cast(%115, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
  %123 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%117, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %126 = cast(%var_1452, dtype="uint64") /* ty=uint64 */;
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(36, 6), uint64] */, dtype="uint64") /* ty=Tensor[(36, 6), uint64] */;
  %128 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %129 = reshape(%126, newshape=[]) /* ty=uint64 */;
  %130 = reshape(%127, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
  %131 = reshape(%128, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %132 = @func_1045(%129, %130, %131) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
  %133 = power(%120, %121) /* ty=Tensor[(15, 7, 14), float32] */;
  %134 = bitwise_xor(%124, %125) /* ty=Tensor[(15, 7, 14), uint16] */;
  %135 = %132.4;
  (%133, %134, %135, %var_1452, meta[relay.Constant][8] /* ty=Tensor[(36, 6), uint64] */, meta[relay.Constant][9] /* ty=Tensor[(528), int8] */)
}

def @func_4939(%var_4894: Tensor[(945), uint64], %var_4895: Tensor[(108, 2), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(108, 2), uint64], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(945), float32], Tensor[(945), bool]) {
  %136 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %137 = cast(meta[relay.Constant][10] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %138 = reshape(%137, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %139 = cast(%var_4894, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %140 = cast(%var_4895, dtype="uint64") /* ty=Tensor[(108, 2), uint64] */;
  %141 = reshape(%139, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %142 = reshape(%140, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %143 = @func_3047(%141, %142) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) */;
  %144 = %143.2;
  %145 = cast(%var_4894, dtype="float32") /* ty=Tensor[(945), float32] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(1), int32] */;
  %147 = cast(%144, dtype="float32") /* ty=Tensor[(945), float32] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?), float32] */;
  %149 = cast(%var_4894, dtype="bool") /* ty=Tensor[(945), bool] */;
  %150 = shape_of(%144, dtype="int32") /* ty=Tensor[(1), int32] */;
  %151 = cast(%144, dtype="bool") /* ty=Tensor[(945), bool] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?), bool] */;
  %153 = %136.1;
  %154 = @func_585(%138) /* ty=Tensor[(11, 9, 4), float64] */;
  %155 = mod(%147, %148) /* ty=Tensor[(945), float32] */;
  %156 = less_equal(%151, %152) /* ty=Tensor[(945), bool] */;
  (%153, %var_4895, %154, meta[relay.Constant][10] /* ty=Tensor[(396), float64] */, %155, %156)
}

def @func_9641() -> Tensor[(8, 12, 3), float64] {
  %157 = @func_8311() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), float64]) */;
  %157.1
}

def @func_9059() -> Tensor[(8, 12, 3), int32] {
  @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_3901(%var_3878: Tensor[(216), uint64]) -> (Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(945), uint64], Tensor[(216), uint64], Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) {
  %158 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %159 = %158.1;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %161 = cast(meta[relay.Constant][11] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %162 = cast(%var_3878, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %163 = reshape(%161, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %164 = reshape(%162, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %165 = @func_3047(%163, %164) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) */;
  %166 = cast(meta[relay.Constant][12] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %167 = reshape(%166, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %168 = @func_155(%167) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %169 = cos(%160) /* ty=Tensor[(13, 7, 14), float32] */;
  %170 = %165.0;
  %171 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  %172 = %168.0;
  (%169, %170, meta[relay.Constant][11] /* ty=Tensor[(945), uint64] */, %var_3878, %171, %172, meta[relay.Constant][12] /* ty=Tensor[(390), uint8] */)
}

def @func_7294() -> Tensor[(8, 12, 3), bool] {
  %173 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %173.1
}

def @func_8311() -> (Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), float64]) {
  %174 = @func_7433() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) */;
  %175 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %176 = %174.0;
  %177 = %175.0;
  (%176, %177)
}

def @func_2518() -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) {
  %178 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %179 = cast(9.20311f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %180 = reshape(%179, newshape=[]) /* ty=float32 */;
  %181 = @func_1670(%180) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %182 = %178.0;
  %183 = %181.1;
  (%182, %183, 9.20311f /* ty=float32 */)
}

def @func_9076() -> (Tensor[(12, 5, 11), float32],) {
  %184 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 11), float32] */;
  %185 = sqrt(%184) /* ty=Tensor[(12, 5, 11), float32] */;
  (%185,)
}

def @func_9439(%var_9432: int8) -> (Tensor[(6, 1, 3), bool],) {
  %186 = cast(%var_9432, dtype="bool") /* ty=bool */;
  %187 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 1, 3), int8] */, dtype="bool") /* ty=Tensor[(6, 1, 3), bool] */;
  %188 = not_equal(%186, %187) /* ty=Tensor[(6, 1, 3), bool] */;
  (%188,)
}

def @func_3416() -> (Tensor[(8, 12, 3), float64],) {
  %189 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %190 = %189.0;
  (%190,)
}

def @func_8351(%var_8344: Tensor[(390, 1), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(390, 1), uint8], Tensor[(1344, 1), float32], Tensor[(390, 1), uint8], Tensor[(1274), float64]) {
  %191 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %192 = cast(meta[relay.Constant][15] /* ty=Tensor[(1344, 1), float32] */, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
  %193 = cast(meta[relay.Constant][15] /* ty=Tensor[(1344, 1), float32] */, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
  %194 = cast(%var_8344, dtype="uint8") /* ty=Tensor[(390, 1), uint8] */;
  %195 = cast(meta[relay.Constant][16] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %196 = reshape(%192, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %197 = reshape(%193, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %198 = reshape(%194, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
  %199 = reshape(%195, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %200 = @func_771(%196, %197, %198, %199) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %201 = %191.0;
  %202 = %200.4;
  (%201, %202, meta[relay.Constant][15] /* ty=Tensor[(1344, 1), float32] */, %var_8344, meta[relay.Constant][16] /* ty=Tensor[(1274), float64] */)
}

def @func_10682() -> (Tensor[(13, 7, 14), float32], Tensor[(1, 2, 9), float64], Tensor[(18), float64], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64]) {
  %203 = @func_3265() /* ty=(Tensor[(13, 7, 14), float32],) */;
  %204 = cast(meta[relay.Constant][17] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %205 = reshape(%204, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), float64] */;
  %206 = cast(meta[relay.Constant][18] /* ty=Tensor[(156), uint64] */, dtype="uint64") /* ty=Tensor[(156), uint64] */;
  %207 = reshape(%206, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), uint64] */;
  %208 = %203.0;
  %209 = @func_5282(%205) /* ty=Tensor[(1, 2, 9), float64] */;
  %210 = @func_7478(%207) /* ty=Tensor[(13, 3, 4), uint64] */;
  (%208, %209, meta[relay.Constant][17] /* ty=Tensor[(18), float64] */, %210, meta[relay.Constant][18] /* ty=Tensor[(156), uint64] */)
}

def @func_7927() -> (Tensor[(8, 12, 3), int32],) {
  %211 = @func_7344() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %212 = %211.1;
  (%212,)
}

def @func_10015() -> (Tensor[(16, 12, 2), int64], Tensor[(8, 12, 3), int32]) {
  %213 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 12, 2), int64] */, dtype="int64") /* ty=Tensor[(16, 12, 2), int64] */;
  %214 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(16, 12, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 12, 2), int64] */, dtype="int64") /* ty=Tensor[(16, 12, 2), int64] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %217 = @func_7927() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %218 = bitwise_or(%215, %216) /* ty=Tensor[(16, 12, 2), int64] */;
  %219 = %217.0;
  (%218, %219)
}

def @func_4377() -> Tensor[(13, 7, 14), float64] {
  %220 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %220.1
}

def @func_2373() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) {
  %221 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  %222 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %223 = %222.0;
  %224 = cast(%223, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %225 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%221, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = cast(%223, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %229 = sigmoid(%228) /* ty=Tensor[(8, 12, 3), float32] */;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %231 = reshape(%230, newshape=[8, 12, 3]) /* ty=Tensor[(8, 12, 3), float64] */;
  %232 = not_equal(%226, %227) /* ty=Tensor[(8, 12, 3), bool] */;
  %233 = @func_2104(%231) /* ty=Tensor[(8, 12, 3), int32] */;
  (%232, %229, %233)
}

def @func_5735(%var_5730: float64, %var_5731: Tensor[(9, 8, 9), float64]) -> Tensor[(9, 8, 9), float64] {
  %234 = cast(%var_5730, dtype="float64") /* ty=float64 */;
  %235 = cast(%var_5731, dtype="float64") /* ty=Tensor[(9, 8, 9), float64] */;
  mod(%234, %235) /* ty=Tensor[(9, 8, 9), float64] */
}

def @func_8560(%var_8535: Tensor[(10, 6, 1), uint8]) -> Tensor[(10, 6, 4), uint8] {
  %236 = cast(%var_8535, dtype="uint8") /* ty=Tensor[(10, 6, 1), uint8] */;
  %237 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 6, 4), uint8] */, dtype="uint8") /* ty=Tensor[(10, 6, 4), uint8] */;
  bitwise_and(%236, %237) /* ty=Tensor[(10, 6, 4), uint8] */
}

def @func_12358() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) {
  %238 = @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %239 = %238.0;
  %240 = @func_11827() /* ty=Tensor[(8, 12, 3), float64] */;
  (%239, %240)
}

def @func_9467() -> (Tensor[(8, 12, 3), bool],) {
  %241 = @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %242 = %241.0;
  (%242,)
}

def @func_3575() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) {
  %243 = cast(meta[relay.Constant][22] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %244 = reshape(%243, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %245 = @func_3219(%244) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */;
  %246 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  %247 = %245.0;
  (%246, %247, meta[relay.Constant][22] /* ty=Tensor[(2640), float32] */)
}

def @func_3219(%var_3197: Tensor[(2640), float32]) -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) {
  %248 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %249 = cast(%var_3197, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %250 = reshape(%249, newshape=[15, 16, 11]) /* ty=Tensor[(15, 16, 11), float32] */;
  %251 = @func_3149(%250) /* ty=(Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) */;
  %252 = cast(meta[relay.Constant][23] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %253 = reshape(%252, newshape=[4, 6, 10]) /* ty=Tensor[(4, 6, 10), float64] */;
  %254 = @func_1628(%253) /* ty=(Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) */;
  %255 = %248.0;
  %256 = %251.1;
  %257 = %254.1;
  (%255, %256, %var_3197, %257, meta[relay.Constant][23] /* ty=Tensor[(240), float64] */)
}

def @func_9029() -> Tensor[(8, 12, 3), int32] {
  %258 = @func_7927() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %258.0
}

def @func_4686() -> (Tensor[(8, 12, 3), float32],) {
  %259 = @func_3575() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) */;
  %260 = %259.1;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %262 = sinh(%261) /* ty=Tensor[(8, 12, 3), float32] */;
  (%262,)
}

def @func_6236(%var_6222: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8]) {
  %263 = cast(meta[relay.Constant][24] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %264 = cast(%var_6222, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %265 = reshape(%263, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %266 = reshape(%264, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %267 = @func_340(%265, %266) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %268 = @func_5610() /* ty=Tensor[(8, 12, 3), int32] */;
  %269 = %267.1;
  (%268, %269, meta[relay.Constant][24] /* ty=Tensor[(528), int8] */, %var_6222)
}

def @func_10191() -> Tensor[(8, 12, 3), float64] {
  %270 = @func_10124() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
  %270.0
}

def @func_3345(%var_3331: Tensor[(12, 1, 13), bool], %var_3332: Tensor[(12, 3, 13), bool]) -> (Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) {
  %271 = cast(%var_3331, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
  %272 = cast(%var_3332, dtype="bool") /* ty=Tensor[(12, 3, 13), bool] */;
  %273 = logical_or(%271, %272) /* ty=Tensor[(12, 3, 13), bool] */;
  %274 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  (%273, %274)
}

def @func_10272() -> (Tensor[(10, 6, 7), bool],) {
  %275 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
  %276 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(10, 6, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %279 = logical_and(%277, %278) /* ty=Tensor[(10, 6, 7), bool] */;
  (%279,)
}

def @func_11565(%var_11513: Tensor[(150), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(150), uint64], Tensor[(10, 15, ?), float32]) {
  %280 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
  %281 = cast(%var_11513, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %282 = cast(%var_11513, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %283 = reshape(%281, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %284 = reshape(%282, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %285 = @func_5248(%283, %284) /* ty=Tensor[(10, 15, ?), bool] */;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(10, 15, ?), float32] */;
  %287 = %280.1;
  %288 = cos(%286) /* ty=Tensor[(10, 15, ?), float32] */;
  (%287, %var_11513, %288)
}

def @func_8388() -> (Tensor[(13, 2), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), bool]) {
  %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %290 = @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %291 = asinh(%289) /* ty=Tensor[(13, 2), float64] */;
  %292 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  %293 = %290.0;
  (%291, %292, %293)
}

def @func_10791() -> (Tensor[(8, 12, 3), int32],) {
  %294 = @func_10384() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1470), float64], Tensor[(1078), int16]) */;
  %295 = %294.0;
  (%295,)
}

def @func_7798() -> (Tensor[(8, 12, 3), float64],) {
  %296 = @func_6542() /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) */;
  %297 = %296.1;
  (%297,)
}

def @func_8812() -> (Tensor[(10, 15, ?), bool],) {
  %298 = @func_6424() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */;
  %299 = %298.1;
  (%299,)
}

def @func_12239() -> (Tensor[(8, 12, 3), float64],) {
  %300 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
  %301 = %300.1;
  (%301,)
}

def @func_5983() -> Tensor[(13, 7, 14), float32] {
  %302 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %302.1
}

def @func_2798(%var_2782: Tensor[(15, 7, 14), float32]) -> (Tensor[(8, 12, 3), bool], uint64, Tensor[(15, 7, 14), float64], Tensor[(1274), float64]) {
  %303 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %304 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %305 = reshape(%304, newshape=[]) /* ty=uint64 */;
  %306 = @func_2152(%305) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */;
  %307 = %306.2;
  %308 = cast(%var_2782, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %312 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %313 = reshape(%312, newshape=[]) /* ty=uint64 */;
  %314 = @func_2152(%313) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */;
  %315 = %303.0;
  %316 = mod(%310, %311) /* ty=Tensor[(15, 7, 14), float64] */;
  %317 = %314.0;
  (%315, meta[relay.Constant][28] /* ty=uint64 */, %316, %317)
}

def @func_9677() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(390), uint8], Tensor[(390), uint8], Tensor[(8, 12, 3), bool]) {
  %318 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %319 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %320 = cast(meta[relay.Constant][29] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %321 = reshape(%320, newshape=[390]) /* ty=Tensor[(390), uint8] */;
  %322 = @func_6236(%321) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8]) */;
  %323 = %318.0;
  %324 = %319.0;
  %325 = %322.3;
  %326 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  (%323, %324, %325, meta[relay.Constant][29] /* ty=Tensor[(390), uint8] */, %326)
}

def @func_3047(%var_3016: Tensor[(945), uint64], %var_3017: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) {
  %327 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %330 = cast(%var_3016, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %331 = cast(%var_3017, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %332 = reshape(%329, newshape=[8, 12, 3]) /* ty=Tensor[(8, 12, 3), float64] */;
  %333 = reshape(%330, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %334 = reshape(%331, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %335 = @func_2480(%332, %333, %334) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32, Tensor[(15, 9, 1), float32], Tensor[(945), uint64], Tensor[(216), uint64]) */;
  %336 = %335.5;
  %337 = cast(%var_3016, dtype="bool") /* ty=Tensor[(945), bool] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(1), int32] */;
  %339 = cast(%336, dtype="bool") /* ty=Tensor[(945), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?), bool] */;
  %341 = not_equal(%339, %340) /* ty=Tensor[(945), bool] */;
  %342 = cast(%341, dtype="float64") /* ty=Tensor[(945), float64] */;
  %343 = exp(%342) /* ty=Tensor[(945), float64] */;
  (%328, %var_3017, %343)
}

def @func_4482() -> (Tensor[(8, 12, 3), float64],) {
  %344 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %345 = %344.0;
  (%345,)
}

def @func_11198(%var_11195: Tensor[(396), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64]) {
  %346 = @func_6853() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %347 = @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */;
  %348 = cast(%var_11195, dtype="float64") /* ty=Tensor[(396), float64] */;
  %349 = reshape(%348, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %350 = %346.0;
  %351 = %347.0;
  %352 = @func_585(%349) /* ty=Tensor[(11, 9, 4), float64] */;
  (%350, %351, %352, %var_11195)
}

def @func_9034() -> Tensor[(8, 12, 3), bool] {
  %353 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %353.0
}

def @func_8731() -> Tensor[(8, 12, 3), int32] {
  @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_11677(%var_11649: Tensor[(945), uint64], %var_11650: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(945), uint64], Tensor[(216), uint64]) {
  %354 = @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %355 = @func_7344() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %356 = cast(%var_11649, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %357 = cast(%var_11650, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %358 = reshape(%356, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %359 = reshape(%357, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint64] */;
  %360 = @func_4939(%358, %359) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(108, 2), uint64], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(945), float32], Tensor[(945), bool]) */;
  %361 = %354.0;
  %362 = %355.0;
  %363 = %360.2;
  (%361, %362, %363, %var_11649, %var_11650)
}

def @func_3993(%var_3985: Tensor[(14, 6, 9), float32]) -> Tensor[(14, 6, 9), float32] {
  %364 = cast(%var_3985, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  erf(%364) /* ty=Tensor[(14, 6, 9), float32] */
}

def @func_13707() -> (Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) {
  %365 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %366 = @func_11806() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) */;
  %367 = %365.1;
  %368 = %366.1;
  (%367, %368)
}

def @func_3388() -> Tensor[(8, 12, 3), int32] {
  @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_1896() -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
  %369 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %370 = cast(meta[relay.Constant][30] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %371 = reshape(%370, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
  %372 = @func_500(%371) /* ty=(Tensor[(13, 7, 14), float64],) */;
  %373 = %369.0;
  %374 = %372.0;
  (%373, %374, meta[relay.Constant][30] /* ty=Tensor[(1274), float64] */)
}

def @func_6605() -> Tensor[(8, 12, 3), float64] {
  @func_4459() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_1628(%var_1615: Tensor[(4, 6, 10), float64]) -> (Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) {
  %375 = cast(%var_1615, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %376 = cast(%var_1615, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %377 = erf(%375) /* ty=Tensor[(4, 6, 10), float64] */;
  %378 = sin(%376) /* ty=Tensor[(4, 6, 10), float64] */;
  (%377, %378)
}

def @func_7762(%var_7745: Tensor[(8, 11, 12), uint32], %var_7746: Tensor[(8, 11, 12), uint32]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 11, 12), bool]) {
  %379 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %380 = cast(%var_7746, dtype="uint32") /* ty=Tensor[(8, 11, 12), uint32] */;
  %381 = shape_of(%var_7745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_7745, dtype="uint32") /* ty=Tensor[(8, 11, 12), uint32] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %384 = maximum(%382, %383) /* ty=Tensor[(8, 11, 12), uint32] */;
  %385 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 11, 12), uint32] */, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %389 = %379.0;
  %390 = logical_or(%387, %388) /* ty=Tensor[(8, 11, 12), bool] */;
  (%389, %390)
}

def @func_6986(%var_6969: Tensor[(10, 16, 2), float32]) -> (Tensor[(10, 16, 2), float32],) {
  %391 = cast(%var_6969, dtype="float32") /* ty=Tensor[(10, 16, 2), float32] */;
  %392 = log(%391) /* ty=Tensor[(10, 16, 2), float32] */;
  (%392,)
}

def @func_10056() -> float32 {
  %393 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %393.2
}

def @func_8920(%var_8906: Tensor[(24, 10), float64]) -> (Tensor[(13, 7, 14), float64], uint64, Tensor[(24, 10), float64]) {
  %394 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %395 = cast(%var_8906, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %396 = reshape(%395, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %397 = @func_4592(%396) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) */;
  %398 = %394.1;
  %399 = %397.2;
  (%398, %399, %var_8906)
}

def @func_10753() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(156), bool]) {
  %400 = @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %401 = @func_9696() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %402 = @func_9955() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %403 = cast(meta[relay.Constant][32] /* ty=Tensor[(156), bool] */, dtype="bool") /* ty=Tensor[(156), bool] */;
  %404 = reshape(%403, newshape=[39, 4]) /* ty=Tensor[(39, 4), bool] */;
  %405 = @func_7563(%404) /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int8], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(468), bool]) */;
  %406 = %400.0;
  %407 = %401.0;
  %408 = %402.0;
  %409 = %405.5;
  (%406, %407, %408, %409, meta[relay.Constant][32] /* ty=Tensor[(156), bool] */)
}

def @func_13607() -> (Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float64]) {
  %410 = @func_12264() /* ty=(Tensor[(390), uint8], Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */;
  %411 = %410.2;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(10, 15, ?), float64] */;
  %413 = @func_8731() /* ty=Tensor[(8, 12, 3), int32] */;
  %414 = log2(%412) /* ty=Tensor[(10, 15, ?), float64] */;
  (%413, %414)
}

def @func_2584(%var_2576: Tensor[(1344), float32], %var_2578: Tensor[(1274), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  %415 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %416 = cast(%var_2576, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %417 = cast(%var_2576, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %418 = cast(meta[relay.Constant][33] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %419 = cast(%var_2578, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %420 = reshape(%416, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %421 = reshape(%417, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %422 = reshape(%418, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
  %423 = reshape(%419, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %424 = @func_771(%420, %421, %422, %423) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %425 = %415.2;
  %426 = %424.0;
  (%425, %426, %var_2576, meta[relay.Constant][33] /* ty=Tensor[(390), uint8] */, %var_2578)
}

def @func_5412() -> (Tensor[(8, 12, 3), float64],) {
  %427 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %428 = %427.0;
  (%428,)
}

def @func_7399() -> (Tensor[(6, 13, 5), float32],) {
  %429 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 13, 5), float32] */;
  %430 = atan(%429) /* ty=Tensor[(6, 13, 5), float32] */;
  (%430,)
}

def @func_9428() -> (Tensor[(8, 12, 3), int32],) {
  %431 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  (%431,)
}

def @func_10124() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  %432 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %433 = @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %434 = %432.0;
  %435 = %433.0;
  (%434, %435)
}

def @func_9696() -> (Tensor[(8, 12, 3), bool],) {
  %436 = @func_9467() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %437 = %436.0;
  (%437,)
}

def @func_2428() -> Tensor[(8, 12, 3), int32] {
  %438 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %438.2
}

def @func_9315() -> (Tensor[(8, 12, 3), float64],) {
  %439 = @func_4747() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %440 = %439.0;
  (%440,)
}

def @func_11806() -> (Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) {
  %441 = cast(meta[relay.Constant][35] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %442 = reshape(%441, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %443 = @func_4592(%442) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) */;
  %444 = %443.3;
  %445 = cast(meta[relay.Constant][35] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %449 = @func_9352() /* ty=Tensor[(8, 12, 3), float64] */;
  %450 = divide(%447, %448) /* ty=Tensor[(4, 6, 10), float64] */;
  (%449, %450)
}

def @func_2152(%var_2147: uint64) -> (Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) {
  %451 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %452 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %453 = cast(meta[relay.Constant][36] /* ty=Tensor[(490, 3), float64] */, dtype="float64") /* ty=Tensor[(490, 3), float64] */;
  %454 = cast(%var_2147, dtype="uint64") /* ty=uint64 */;
  %455 = reshape(%453, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float64] */;
  %456 = reshape(%454, newshape=[]) /* ty=uint64 */;
  %457 = @func_1461(%455, %456) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */;
  %458 = %451.2;
  %459 = %452.2;
  %460 = %457.0;
  (%458, %459, %460, meta[relay.Constant][36] /* ty=Tensor[(490, 3), float64] */, %var_2147)
}

def @func_10776() -> (Tensor[(8, 12, 3), int32],) {
  %461 = @func_10345() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %462 = %461.0;
  (%462,)
}

def @func_8849(%var_8820: Tensor[(528), int8], %var_8821: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 6, 11), int8], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(8, 12, 3), int32]) {
  %463 = cast(%var_8820, dtype="int8") /* ty=Tensor[(528), int8] */;
  %464 = cast(%var_8821, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %465 = reshape(%463, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %466 = reshape(%464, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %467 = @func_340(%465, %466) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %468 = @func_5709() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %469 = @func_7021() /* ty=Tensor[(8, 12, 3), int32] */;
  %470 = %467.0;
  %471 = %468.0;
  (%469, %470, %var_8820, %var_8821, %471)
}

def @func_2480(%var_2448: Tensor[(8, 12, 3), float64], %var_2466: Tensor[(945), uint64], %var_2467: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32, Tensor[(15, 9, 1), float32], Tensor[(945), uint64], Tensor[(216), uint64]) {
  %472 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %473 = %472.0;
  %474 = cast(%var_2448, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %478 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %479 = cast(0.039403f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %480 = reshape(%479, newshape=[]) /* ty=float32 */;
  %481 = @func_1670(%480) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %482 = cast(%var_2466, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %483 = cast(%var_2467, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %484 = reshape(%482, newshape=[15, 9, 7]) /* ty=Tensor[(15, 9, 7), uint64] */;
  %485 = reshape(%483, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %486 = @func_1217(%484, %485) /* ty=(Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) */;
  %487 = logical_and(%476, %477) /* ty=Tensor[(8, 12, 3), bool] */;
  %488 = %478.0;
  %489 = %481.1;
  %490 = %486.6;
  (%487, %488, %489, 0.039403f /* ty=float32 */, %490, %var_2466, %var_2467)
}

def @func_8273(%var_8250: uint64, %var_8252: Tensor[(528), int8]) -> (Tensor[(8, 12, 3), float64], Tensor[(390, ?), int8], uint64, Tensor[(528), int8], Tensor[(2, 108), float32]) {
  %491 = @func_3575() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) */;
  %492 = cast(%var_8250, dtype="uint64") /* ty=uint64 */;
  %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 108), uint64] */, dtype="uint64") /* ty=Tensor[(2, 108), uint64] */;
  %494 = cast(%var_8252, dtype="int8") /* ty=Tensor[(528), int8] */;
  %495 = reshape(%492, newshape=[]) /* ty=uint64 */;
  %496 = reshape(%493, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
  %497 = reshape(%494, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %498 = @func_1045(%495, %496, %497) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
  %499 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 108), uint64] */, dtype="float32") /* ty=Tensor[(2, 108), float32] */;
  %500 = %491.1;
  %501 = %498.2;
  %502 = sin(%499) /* ty=Tensor[(2, 108), float32] */;
  (%500, %501, %var_8250, %var_8252, %502)
}

def @func_12264() -> (Tensor[(390), uint8], Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) {
  %503 = @func_10169() /* ty=(Tensor[(390), uint8],) */;
  %504 = cast(meta[relay.Constant][38] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %505 = cast(meta[relay.Constant][38] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %506 = reshape(%504, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %507 = reshape(%505, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %508 = %503.0;
  %509 = @func_8731() /* ty=Tensor[(8, 12, 3), int32] */;
  %510 = @func_5248(%506, %507) /* ty=Tensor[(10, 15, ?), bool] */;
  (%508, %509, %510, meta[relay.Constant][38] /* ty=Tensor[(150), uint64] */)
}

def @func_6502() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  %511 = @func_5483() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) */;
  %512 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %513 = %511.0;
  %514 = %512.0;
  (%513, %514)
}

def @func_3313() -> Tensor[(8, 12, 3), int32] {
  @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_11097() -> (Tensor[(8, 12, 3), int32],) {
  %515 = @func_6853() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %516 = %515.0;
  (%516,)
}

def @func_8989(%var_8979: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(1344), float32], Tensor[(390), uint8]) {
  %517 = @func_6122() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %518 = cast(%var_8979, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %519 = reshape(%518, newshape=[390]) /* ty=Tensor[(390), uint8] */;
  %520 = @func_5092(%519) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %521 = %517.0;
  %522 = %520.2;
  (%521, %522, %var_8979)
}

def @func_8652(%var_8641: Tensor[(1, 12, 8), uint8]) -> (Tensor[(?, 12, 8), bool],) {
  %523 = cast(%var_8641, dtype="bool") /* ty=Tensor[(1, 12, 8), bool] */;
  %524 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(1, 12, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 12, 8), uint8] */, dtype="bool") /* ty=Tensor[(1, 12, 8), bool] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %527 = equal(%525, %526) /* ty=Tensor[(?, 12, 8), bool] */;
  (%527,)
}

def @func_1850() -> Tensor[(8, 12, 3), float64] {
  %528 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %528.0
}

def @func_4459() -> Tensor[(8, 12, 3), float64] {
  %529 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %529.0
}

def @func_6785() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  %530 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %531 = @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %532 = %530.0;
  %533 = %531.0;
  (%532, %533)
}

def @func_5709() -> (Tensor[(8, 12, 3), int32],) {
  %534 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  (%534,)
}

def @func_7951() -> (Tensor[(8, 12, 3), bool],) {
  %535 = @func_7294() /* ty=Tensor[(8, 12, 3), bool] */;
  (%535,)
}

def @func_10860() -> Tensor[(8, 12, 3), int32] {
  %536 = @func_10345() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %536.0
}

def @func_12044() -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), int32]) {
  %537 = @func_10714() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %538 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
  %539 = %537.0;
  %540 = %538.0;
  (%539, %540)
}

def @func_5294() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32]) {
  %541 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %542 = %541.0;
  %543 = cast(%542, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %544 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  %545 = asinh(%543) /* ty=Tensor[(8, 12, 3), float32] */;
  (%544, %545)
}

def @func_8163() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) {
  %546 = @func_6122() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %547 = @func_6542() /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) */;
  %548 = %546.0;
  %549 = %547.1;
  (%548, %549)
}

def @func_4303(%var_4299: Tensor[(1, 1078), int16]) -> (Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) {
  %550 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %551 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %552 = cast(%var_4299, dtype="int16") /* ty=Tensor[(1, 1078), int16] */;
  %553 = cast(meta[relay.Constant][40] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %554 = %551.0;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %556 = reshape(%552, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), int16] */;
  %557 = reshape(%553, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %558 = reshape(%555, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %559 = @func_3473(%556, %557, %558) /* ty=(Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %560 = %550.2;
  %561 = %559.2;
  (%560, %554, %561, %var_4299, meta[relay.Constant][40] /* ty=Tensor[(1470), float64] */)
}

def @func_4992() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) {
  %562 = @func_4670() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %563 = @func_4536() /* ty=Tensor[(8, 12, 3), float64] */;
  %564 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  %565 = %562.0;
  (%563, %564, %565)
}

def @func_5507() -> (Tensor[(8, 12, 3), float64],) {
  %566 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  (%566,)
}

def @func_5092(%var_5088: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  %567 = cast(meta[relay.Constant][41] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %568 = cast(meta[relay.Constant][41] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %569 = cast(%var_5088, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %570 = cast(meta[relay.Constant][42] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %571 = reshape(%567, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %572 = reshape(%568, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %573 = reshape(%569, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
  %574 = reshape(%570, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %575 = @func_771(%571, %572, %573, %574) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %576 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  %577 = %575.0;
  (%576, %577, meta[relay.Constant][41] /* ty=Tensor[(1344), float32] */, %var_5088, meta[relay.Constant][42] /* ty=Tensor[(1274), float64] */)
}

def @func_7433() -> (Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) {
  %578 = cast(4.10967f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %579 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 1), float64] */;
  %580 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %581 = %580.0;
  %582 = cast(%581, dtype="int8") /* ty=Tensor[(8, 12, 3), int8] */;
  %583 = cast(4.10967f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
  %584 = add(%578, %579) /* ty=Tensor[(6, 15, 1), float64] */;
  %585 = left_shift(%582, %583) /* ty=Tensor[(8, 12, 3), int8] */;
  (%584, %585)
}

def @func_4592(%var_4587: Tensor[(4, 60), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) {
  %586 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %587 = reshape(%586, newshape=[]) /* ty=uint64 */;
  %588 = @func_2152(%587) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */;
  %589 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %590 = reshape(%589, newshape=[4, 6, 10]) /* ty=Tensor[(4, 6, 10), float64] */;
  %591 = @func_1628(%590) /* ty=(Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) */;
  %592 = cast(%var_4587, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %593 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(4, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %594 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %596 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  %597 = %588.0;
  %598 = %591.0;
  %599 = mod(%594, %595) /* ty=Tensor[(4, 60), float64] */;
  (%596, %597, meta[relay.Constant][44] /* ty=uint64 */, %598, %599)
}

def @func_5080(%var_5068: Tensor[(195, 2), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(24, 22), int8], Tensor[(195, 2), uint8]) {
  %600 = cast(meta[relay.Constant][46] /* ty=Tensor[(24, 22), int8] */, dtype="int8") /* ty=Tensor[(24, 22), int8] */;
  %601 = cast(%var_5068, dtype="uint8") /* ty=Tensor[(195, 2), uint8] */;
  %602 = reshape(%600, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %603 = reshape(%601, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %604 = @func_340(%602, %603) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %605 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  %606 = %604.1;
  (%605, %606, meta[relay.Constant][46] /* ty=Tensor[(24, 22), int8] */, %var_5068)
}

def @func_5850() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  %607 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %608 = %607.0;
  %609 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  %610 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  (%608, %609, %610)
}

def @func_4269(%var_4232: Tensor[(1, 8, 6), float32], %var_4263: Tensor[(4, 8, 6), float64]) -> (Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) {
  %611 = cast(%var_4232, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
  %612 = cast(%var_4232, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
  %613 = exp(%612) /* ty=Tensor[(1, 8, 6), float64] */;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
  %615 = cast(%613, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
  %616 = cast(%var_4263, dtype="bool") /* ty=Tensor[(4, 8, 6), bool] */;
  %617 = acos(%611) /* ty=Tensor[(1, 8, 6), float32] */;
  %618 = log10(%614) /* ty=Tensor[(1, 8, 6), float32] */;
  %619 = logical_and(%615, %616) /* ty=Tensor[(4, 8, 6), bool] */;
  (%617, %618, %619)
}

def @func_6952() -> (Tensor[(13, 7, 14), float64],) {
  %620 = @func_5234() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %621 = %620.0;
  (%621,)
}

def @func_1217(%var_1152: Tensor[(15, 9, 7), uint64], %var_1176: Tensor[(216), uint64]) -> (Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) {
  %622 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 9, 1), uint64] */, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %623 = cast(%var_1152, dtype="bool") /* ty=Tensor[(15, 9, 7), bool] */;
  %624 = cast(meta[relay.Constant][48] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %625 = cast(%var_1176, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %626 = cast(meta[relay.Constant][49] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %627 = reshape(%624, newshape=[]) /* ty=uint64 */;
  %628 = reshape(%625, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
  %629 = reshape(%626, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %630 = @func_1045(%627, %628, %629) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
  %631 = cast(meta[relay.Constant][48] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %632 = cast(%var_1176, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %633 = cast(meta[relay.Constant][49] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %634 = reshape(%631, newshape=[]) /* ty=uint64 */;
  %635 = reshape(%632, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
  %636 = reshape(%633, newshape=[528]) /* ty=Tensor[(528), int8] */;
  %637 = @func_1045(%634, %635, %636) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
  %638 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 9, 1), uint64] */, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %639 = log2(%638) /* ty=Tensor[(15, 9, 1), float32] */;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %641 = equal(%622, %623) /* ty=Tensor[(15, 9, 7), bool] */;
  %642 = %630.4;
  %643 = %637.2;
  %644 = erf(%640) /* ty=Tensor[(15, 9, 1), float32] */;
  (%641, %642, meta[relay.Constant][48] /* ty=uint64 */, %var_1176, meta[relay.Constant][49] /* ty=Tensor[(528), int8] */, %643, %644)
}

def @func_4670() -> (Tensor[(8, 12, 3), float64],) {
  %645 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %646 = %645.0;
  (%646,)
}

def @func_7478(%var_7465: Tensor[(13, 3, 4), uint64]) -> Tensor[(13, 3, 4), uint64] {
  %647 = cast(%var_7465, dtype="uint64") /* ty=Tensor[(13, 3, 4), uint64] */;
  %648 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(13, 3, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 3, 4), uint64] */, dtype="uint64") /* ty=Tensor[(13, 3, 4), uint64] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%649, %650) /* ty=Tensor[(13, 3, 4), uint64] */
}

def @func_7515() -> Tensor[(8, 12, 3), bool] {
  %651 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %651.0
}

def @func_6122() -> (Tensor[(8, 12, 3), int32],) {
  %652 = @func_5709() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %653 = %652.0;
  (%653,)
}

def @func_10253() -> (Tensor[(13, 7, 14), float32],) {
  %654 = @func_5983() /* ty=Tensor[(13, 7, 14), float32] */;
  (%654,)
}

def @func_1670(%var_1641: float32) -> (Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
  %655 = cast(%var_1641, dtype="bool") /* ty=bool */;
  %656 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 6, 16), float32] */, dtype="bool") /* ty=Tensor[(4, 6, 16), bool] */;
  %657 = cast(meta[relay.Constant][52] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %658 = reshape(%657, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
  %659 = @func_500(%658) /* ty=(Tensor[(13, 7, 14), float64],) */;
  %660 = greater_equal(%655, %656) /* ty=Tensor[(4, 6, 16), bool] */;
  %661 = %659.0;
  (%660, %661, meta[relay.Constant][52] /* ty=Tensor[(1274), float64] */)
}

def @func_10987() -> Tensor[(8, 12, 3), bool] {
  @func_4514() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_13090() -> (Tensor[(8, 12, 3), float64],) {
  %662 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  (%662,)
}

def @func_9978() -> (Tensor[(8, 12, 3), float64],) {
  %663 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %664 = %663.2;
  (%664,)
}

def @func_771(%var_749: Tensor[(14, 12, 8), float32], %var_750: Tensor[(14, 12, 8), float32], %var_763: Tensor[(390, 1), uint8], %var_768: Tensor[(1274), float64]) -> (Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
  %665 = cast(%var_750, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %666 = shape_of(%var_749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%var_749, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %669 = cast(%var_749, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
  %670 = shape_of(%var_750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%var_750, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %673 = cast(meta[relay.Constant][53] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %674 = cast(%var_763, dtype="uint8") /* ty=Tensor[(390, 1), uint8] */;
  %675 = reshape(%673, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %676 = reshape(%674, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %677 = @func_340(%675, %676) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %678 = cast(%var_768, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %679 = reshape(%678, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
  %680 = @func_500(%679) /* ty=(Tensor[(13, 7, 14), float64],) */;
  %681 = multiply(%667, %668) /* ty=Tensor[(14, 12, 8), float32] */;
  %682 = less(%671, %672) /* ty=Tensor[(14, 12, 8), bool] */;
  %683 = %677.1;
  %684 = %680.0;
  (%681, %682, %683, meta[relay.Constant][53] /* ty=Tensor[(528), int8] */, %var_763, %684, %var_768)
}

def @func_6853() -> (Tensor[(8, 12, 3), int32],) {
  %685 = @func_5610() /* ty=Tensor[(8, 12, 3), int32] */;
  (%685,)
}

def @func_5282(%var_5276: Tensor[(1, 2, 9), float64]) -> Tensor[(1, 2, 9), float64] {
  %686 = cast(%var_5276, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  sinh(%686) /* ty=Tensor[(1, 2, 9), float64] */
}

def @func_5248(%var_5236: Tensor[(10, 15, 1), uint64], %var_5237: Tensor[(10, 15, 1), uint64]) -> Tensor[(10, 15, ?), bool] {
  %687 = cast(%var_5237, dtype="bool") /* ty=Tensor[(10, 15, 1), bool] */;
  %688 = shape_of(%var_5236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_5236, dtype="bool") /* ty=Tensor[(10, 15, 1), bool] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%689, %690) /* ty=Tensor[(10, 15, ?), bool] */
}

def @func_13475(%var_13462: Tensor[(4, 3, 10), uint64], %var_13463: Tensor[(4, 3, 10), uint64]) -> (Tensor[(4, 3, 10), bool], Tensor[(4, 3, 10), float32], Tensor[(15, 10, 3), bool], Tensor[(1, 450), float32]) {
  %691 = cast(%var_13463, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %692 = shape_of(%var_13462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%var_13462, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %695 = cast(%var_13463, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
  %696 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
  %697 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 450), float32] */, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
  %698 = reshape(%696, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float32] */;
  %699 = reshape(%697, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
  %700 = @func_5174(%698, %699) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), bool]) */;
  %701 = less_equal(%693, %694) /* ty=Tensor[(4, 3, 10), bool] */;
  %702 = sinh(%695) /* ty=Tensor[(4, 3, 10), float32] */;
  %703 = %700.1;
  (%701, %702, %703, meta[relay.Constant][54] /* ty=Tensor[(1, 450), float32] */)
}

def @func_6080(%var_6062: Tensor[(13, 7, 14), float64]) -> (Tensor[(13, 7, 14), int32],) {
  %704 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %705 = %704.1;
  %706 = cast(%var_6062, dtype="int32") /* ty=Tensor[(13, 7, 14), int32] */;
  %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%705, dtype="int32") /* ty=Tensor[(13, 7, 14), int32] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %710 = logical_xor(%708, %709) /* ty=Tensor[(13, 7, 14), int32] */;
  (%710,)
}

def @func_9955() -> (Tensor[(8, 12, 3), float64],) {
  %711 = @func_7136() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %712 = %711.0;
  (%712,)
}

def @func_1045(%var_1001: uint64, %var_1002: Tensor[(12, 6, 3), uint64], %var_1007: Tensor[(528), int8]) -> (Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) {
  %713 = cast(%var_1001, dtype="bool") /* ty=bool */;
  %714 = cast(%var_1002, dtype="bool") /* ty=Tensor[(12, 6, 3), bool] */;
  %715 = cast(%var_1007, dtype="int8") /* ty=Tensor[(528), int8] */;
  %716 = cast(meta[relay.Constant][55] /* ty=Tensor[(390, 1), uint8] */, dtype="uint8") /* ty=Tensor[(390, 1), uint8] */;
  %717 = reshape(%715, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %718 = reshape(%716, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %719 = @func_340(%717, %718) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %720 = %719.2;
  %721 = cast(%720, dtype="int8") /* ty=Tensor[(195, 2), int8] */;
  %722 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(390, 1), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %723 = cast(meta[relay.Constant][55] /* ty=Tensor[(390, 1), uint8] */, dtype="int8") /* ty=Tensor[(390, 1), int8] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %725 = cast(%var_1001, dtype="uint16") /* ty=uint16 */;
  %726 = cast(meta[relay.Constant][55] /* ty=Tensor[(390, 1), uint8] */, dtype="uint16") /* ty=Tensor[(390, 1), uint16] */;
  %727 = cast(%var_1002, dtype="uint32") /* ty=Tensor[(12, 6, 3), uint32] */;
  %728 = cast(%var_1001, dtype="uint32") /* ty=uint32 */;
  %729 = greater(%713, %714) /* ty=Tensor[(12, 6, 3), bool] */;
  %730 = bitwise_xor(%723, %724) /* ty=Tensor[(390, ?), int8] */;
  %731 = minimum(%725, %726) /* ty=Tensor[(390, 1), uint16] */;
  %732 = add(%727, %728) /* ty=Tensor[(12, 6, 3), uint32] */;
  (%729, %var_1007, %730, %731, %732)
}

def @func_8201() -> Tensor[(8, 12, 3), int32] {
  @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_8892() -> Tensor[(8, 12, 3), int32] {
  @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_6527(%var_6523: Tensor[(1078), int16]) -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32], Tensor[(1078), int16]) {
  %733 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %734 = %733.2;
  %735 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 12, 3), float64] */, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %739 = cast(%var_6523, dtype="int16") /* ty=Tensor[(1078), int16] */;
  %740 = reshape(%739, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), int16] */;
  %741 = @func_4303(%740) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) */;
  %742 = mod(%737, %738) /* ty=Tensor[(8, 12, 3), float32] */;
  %743 = %741.0;
  (%742, %743, %var_6523)
}

def @func_12122() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float64]) {
  %744 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %745 = @func_10714() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %746 = %744.0;
  %747 = @func_10987() /* ty=Tensor[(8, 12, 3), bool] */;
  %748 = %745.0;
  (%746, %747, %748)
}

def @func_12759() -> (Tensor[(8, 12, 3), int32],) {
  %749 = @func_8941() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %750 = %749.0;
  (%750,)
}

def @func_13179() -> (Tensor[(8, 12, 3), float64],) {
  %751 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %752 = %751.0;
  (%752,)
}

def @func_13558() -> Tensor[(8, 12, 3), int32] {
  @func_9029() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_340(%var_327: Tensor[(8, 6, 11), int8], %var_336: Tensor[(195, 2), uint8]) -> (Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) {
  %753 = cast(%var_327, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
  %754 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(8, 6, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 6, 11), int8] */, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %757 = cast(%var_336, dtype="uint8") /* ty=Tensor[(195, 2), uint8] */;
  %758 = reshape(%757, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %759 = @func_155(%758) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %760 = minimum(%755, %756) /* ty=Tensor[(8, 6, 11), int8] */;
  %761 = %759.0;
  (%760, %761, %var_336)
}

def @func_3515() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  %762 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %763 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %764 = %762.0;
  %765 = %763.0;
  (%764, %765)
}

def @main(%var_13789: Tensor[(4, 3, 12), bool]) -> (Tensor[(4, 3, 12), bool],) {
  %766 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 3, 12), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %767 = shape_of(%var_13789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%var_13789, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %770 = logical_or(%768, %769) /* ty=Tensor[(4, 3, 12), bool] */;
  (%770,)
}

def @func_12531() -> (Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float32], Tensor[(150), uint64]) {
  %771 = @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %772 = cast(meta[relay.Constant][59] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %773 = reshape(%772, newshape=[150]) /* ty=Tensor[(150), uint64] */;
  %774 = @func_11565(%773) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(150), uint64], Tensor[(10, 15, ?), float32]) */;
  %775 = %771.0;
  %776 = %774.2;
  (%775, %776, meta[relay.Constant][59] /* ty=Tensor[(150), uint64] */)
}

def @func_2686() -> (Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) {
  %777 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %778 = %777.1;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %780 = cosh(%779) /* ty=Tensor[(13, 7, 14), float64] */;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %782 = exp(%781) /* ty=Tensor[(13, 7, 14), float32] */;
  %783 = cast(%782, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %784 = cast(%778, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %785 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%780, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %788 = floor_divide(%786, %787) /* ty=Tensor[(13, 7, 14), float64] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %790 = acos(%783) /* ty=Tensor[(13, 7, 14), float32] */;
  %791 = tan(%789) /* ty=Tensor[(13, 7, 14), float32] */;
  (%790, %791)
}

def @func_5234() -> (Tensor[(13, 7, 14), float64],) {
  %792 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %793 = %792.1;
  (%793,)
}

def @func_11433() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) {
  %794 = @func_7709() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64]) */;
  %795 = cast(meta[relay.Constant][60] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %796 = reshape(%795, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %797 = @func_585(%796) /* ty=Tensor[(11, 9, 4), float64] */;
  %798 = cast(%797, dtype="bool") /* ty=Tensor[(11, 9, 4), bool] */;
  %799 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %800 = cast(meta[relay.Constant][60] /* ty=Tensor[(396), float64] */, dtype="bool") /* ty=Tensor[(396), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?), bool] */;
  %802 = %794.0;
  %803 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  %804 = equal(%800, %801) /* ty=Tensor[(396), bool] */;
  (%802, %803, %804)
}

def @func_12867(%var_12844: Tensor[(756), float32]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(14, 6, 9), float32], Tensor[(756), bool]) {
  %805 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %806 = @func_9315() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %807 = cast(meta[relay.Constant][61] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %808 = reshape(%807, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %809 = cast(%var_12844, dtype="bool") /* ty=Tensor[(756), bool] */;
  %810 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(756), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %811 = cast(meta[relay.Constant][61] /* ty=Tensor[(756), float32] */, dtype="bool") /* ty=Tensor[(756), bool] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?), bool] */;
  %813 = %805.1;
  %814 = %806.0;
  %815 = @func_3993(%808) /* ty=Tensor[(14, 6, 9), float32] */;
  %816 = not_equal(%811, %812) /* ty=Tensor[(756), bool] */;
  (%813, %814, %815, %816)
}

def @func_12295() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %817 = @func_9716() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %818 = %817.0;
  %819 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  (%818, %819)
}

def @func_4652() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) {
  %820 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %822 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  %823 = sin(%821) /* ty=Tensor[(8, 12, 3), float64] */;
  (%822, %823)
}

def @func_10331() -> Tensor[(8, 12, 3), float32] {
  %824 = @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */;
  %824.0
}

def @func_5212() -> (Tensor[(8, 12, 3), int32],) {
  %825 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  (%825,)
}

def @func_3706(%var_3644: Tensor[(13, 12, 8), float32], %var_3645: Tensor[(13, 12, 8), float32], %var_3676: Tensor[(1274), float64], %var_3681: Tensor[(528), int8], %var_3682: Tensor[(390), uint8], %var_3696: Tensor[(396), float64], %var_3703: Tensor[(156), bool], %var_3704: Tensor[(468), bool]) -> (Tensor[(13, 12, 8), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(12, 3, 13), bool], Tensor[(156), bool], Tensor[(468), bool]) {
  %826 = cast(%var_3645, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %827 = shape_of(%var_3644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_3644, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %830 = minimum(%828, %829) /* ty=Tensor[(13, 12, 8), float32] */;
  %831 = cast(%830, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
  %832 = shape_of(%var_3644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%var_3644, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %835 = cast(%var_3676, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %836 = reshape(%835, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
  %837 = @func_500(%836) /* ty=(Tensor[(13, 7, 14), float64],) */;
  %838 = cast(%var_3681, dtype="int8") /* ty=Tensor[(528), int8] */;
  %839 = cast(%var_3682, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %840 = reshape(%838, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %841 = reshape(%839, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %842 = @func_340(%840, %841) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %843 = cast(%var_3696, dtype="float64") /* ty=Tensor[(396), float64] */;
  %844 = reshape(%843, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %845 = cast(%var_3703, dtype="bool") /* ty=Tensor[(156), bool] */;
  %846 = cast(%var_3704, dtype="bool") /* ty=Tensor[(468), bool] */;
  %847 = reshape(%845, newshape=[12, 1, 13]) /* ty=Tensor[(12, 1, 13), bool] */;
  %848 = reshape(%846, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), bool] */;
  %849 = @func_3345(%847, %848) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) */;
  %850 = less_equal(%833, %834) /* ty=Tensor[(13, 12, 8), bool] */;
  %851 = %837.0;
  %852 = %842.1;
  %853 = @func_585(%844) /* ty=Tensor[(11, 9, 4), float64] */;
  %854 = %849.0;
  (%850, %851, %var_3676, %852, %var_3681, %var_3682, %853, %var_3696, %854, %var_3703, %var_3704)
}

def @func_4514() -> Tensor[(8, 12, 3), bool] {
  %855 = @func_4068() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %855.0
}

def @func_12645() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(390), uint8], Tensor[(8, 12, 3), bool], float32, Tensor[(8, 12, 3), float64]) {
  %856 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %857 = @func_8201() /* ty=Tensor[(8, 12, 3), int32] */;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %859 = reshape(%858, newshape=[8, 12, 3]) /* ty=Tensor[(8, 12, 3), float64] */;
  %860 = cast(meta[relay.Constant][62] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %861 = reshape(%860, newshape=[390]) /* ty=Tensor[(390), uint8] */;
  %862 = @func_5092(%861) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %863 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %864 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %865 = %856.0;
  %866 = @func_2104(%859) /* ty=Tensor[(8, 12, 3), int32] */;
  %867 = %862.1;
  %868 = @func_9791() /* ty=Tensor[(8, 12, 3), bool] */;
  %869 = %863.2;
  %870 = %864.0;
  (%865, %857, %866, %867, meta[relay.Constant][62] /* ty=Tensor[(390), uint8] */, %868, %869, %870)
}

def @func_6424() -> (Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) {
  %871 = @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
  %872 = cast(meta[relay.Constant][63] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %873 = cast(meta[relay.Constant][63] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %874 = reshape(%872, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %875 = reshape(%873, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %876 = %871.1;
  %877 = @func_5248(%874, %875) /* ty=Tensor[(10, 15, ?), bool] */;
  (%876, %877, meta[relay.Constant][63] /* ty=Tensor[(150), uint64] */)
}

def @func_8941() -> (Tensor[(8, 12, 3), int32],) {
  %878 = @func_3313() /* ty=Tensor[(8, 12, 3), int32] */;
  (%878,)
}

def @func_9264(%var_9246: Tensor[(48), float32]) -> (Tensor[(4, 8, 6), bool], Tensor[(48), float32], Tensor[(24, 8), bool], Tensor[(24, 8), float64]) {
  %879 = cast(%var_9246, dtype="float32") /* ty=Tensor[(48), float32] */;
  %880 = @func_7157() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(24, 8), float64]) */;
  %881 = %880.3;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %883 = reshape(%879, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
  %884 = reshape(%882, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), float64] */;
  %885 = @func_4269(%883, %884) /* ty=(Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) */;
  %886 = cast(meta[relay.Constant][64] /* ty=Tensor[(24, 8), float64] */, dtype="bool") /* ty=Tensor[(24, 8), bool] */;
  %887 = shape_of(%881, dtype="int32") /* ty=Tensor[(2), int32] */;
  %888 = cast(%881, dtype="bool") /* ty=Tensor[(24, 8), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %890 = cast(meta[relay.Constant][64] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %891 = %885.2;
  %892 = less(%888, %889) /* ty=Tensor[(24, 8), bool] */;
  %893 = tan(%890) /* ty=Tensor[(24, 8), float64] */;
  (%891, %var_9246, %892, %893)
}

def @func_10537(%var_10506: Tensor[(9, 10, 10), float64]) -> Tensor[(9, 10, 10), float32] {
  %894 = cast(%var_10506, dtype="float64") /* ty=Tensor[(9, 10, 10), float64] */;
  %895 = acos(%894) /* ty=Tensor[(9, 10, 10), float64] */;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  tan(%896) /* ty=Tensor[(9, 10, 10), float32] */
}

def @func_13025() -> (Tensor[(8, 12, 3), int32],) {
  %897 = @func_12358() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) */;
  %898 = %897.0;
  (%898,)
}

def @func_3473(%var_3448: Tensor[(14, 7, 11), int16], %var_3454: Tensor[(1470), float64], %var_3470: Tensor[(1274), float64]) -> (Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  %899 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 7, 11), int16] */, dtype="int16") /* ty=Tensor[(14, 7, 11), int16] */;
  %900 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%var_3448, dtype="int16") /* ty=Tensor[(14, 7, 11), int16] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %903 = cast(%var_3454, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %904 = cast(meta[relay.Constant][66] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %905 = reshape(%903, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float64] */;
  %906 = reshape(%904, newshape=[]) /* ty=uint64 */;
  %907 = @func_1461(%905, %906) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */;
  %908 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %909 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 1344), float32] */, dtype="float32") /* ty=Tensor[(1, 1344), float32] */;
  %910 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 1344), float32] */, dtype="float32") /* ty=Tensor[(1, 1344), float32] */;
  %911 = cast(meta[relay.Constant][68] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %912 = cast(%var_3470, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %913 = reshape(%909, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %914 = reshape(%910, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %915 = reshape(%911, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
  %916 = reshape(%912, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %917 = @func_771(%913, %914, %915, %916) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %918 = maximum(%901, %902) /* ty=Tensor[(14, 7, 11), int16] */;
  %919 = %907.2;
  %920 = %908.2;
  %921 = %917.0;
  (%918, %919, %var_3454, meta[relay.Constant][66] /* ty=uint64 */, %920, %921, meta[relay.Constant][67] /* ty=Tensor[(1, 1344), float32] */, meta[relay.Constant][68] /* ty=Tensor[(390), uint8] */, %var_3470)
}

def @func_5610() -> Tensor[(8, 12, 3), int32] {
  %922 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %922.0
}

def @func_11341(%var_11321: Tensor[(14, 10, 2), int8], %var_11322: Tensor[(14, 10, 2), int8]) -> (Tensor[(14, 10, 2), bool], Tensor[(14, 6, 9), float32], Tensor[(54, 14), float32]) {
  %923 = cast(%var_11322, dtype="bool") /* ty=Tensor[(14, 10, 2), bool] */;
  %924 = shape_of(%var_11321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%var_11321, dtype="bool") /* ty=Tensor[(14, 10, 2), bool] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %927 = cast(meta[relay.Constant][69] /* ty=Tensor[(54, 14), float32] */, dtype="float32") /* ty=Tensor[(54, 14), float32] */;
  %928 = reshape(%927, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %929 = less_equal(%925, %926) /* ty=Tensor[(14, 10, 2), bool] */;
  %930 = @func_3993(%928) /* ty=Tensor[(14, 6, 9), float32] */;
  (%929, %930, meta[relay.Constant][69] /* ty=Tensor[(54, 14), float32] */)
}

def @func_10714() -> (Tensor[(13, 7, 14), float64],) {
  %931 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %932 = %931.1;
  (%932,)
}

def @func_13231() -> (Tensor[(8, 12, 3), int32],) {
  %933 = @func_6853() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %934 = %933.0;
  (%934,)
}

def @func_4068() -> (Tensor[(8, 12, 3), bool],) {
  %935 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %936 = %935.0;
  (%936,)
}

def @func_4867(%var_4821: float32, %var_4841: Tensor[(1470), float64], %var_4842: Tensor[(32), uint32], %var_4850: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(1274), float64], Tensor[(15, 16, 11), float32], Tensor[(2640), int16], Tensor[(8, 4), uint32], Tensor[(1470), float64], Tensor[(32), uint32], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) {
  %937 = cast(%var_4821, dtype="float32") /* ty=float32 */;
  %938 = reshape(%937, newshape=[]) /* ty=float32 */;
  %939 = @func_1670(%938) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %940 = cast(meta[relay.Constant][70] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %941 = reshape(%940, newshape=[15, 16, 11]) /* ty=Tensor[(15, 16, 11), float32] */;
  %942 = @func_3149(%941) /* ty=(Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) */;
  %943 = cast(meta[relay.Constant][70] /* ty=Tensor[(2640), float32] */, dtype="int16") /* ty=Tensor[(2640), int16] */;
  %944 = cast(%var_4821, dtype="int16") /* ty=int16 */;
  %945 = cast(%var_4841, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %946 = cast(%var_4821, dtype="uint64") /* ty=uint64 */;
  %947 = cast(%var_4842, dtype="uint32") /* ty=Tensor[(32), uint32] */;
  %948 = reshape(%945, newshape=[14, 105]) /* ty=Tensor[(14, 105), float64] */;
  %949 = reshape(%946, newshape=[]) /* ty=uint64 */;
  %950 = reshape(%947, newshape=[8, 4]) /* ty=Tensor[(8, 4), uint32] */;
  %951 = @func_4036(%948, %949, %950) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(15, 7, 14), uint16], Tensor[(14, 105), float64], uint64, float32, Tensor[(8, 4), uint32]) */;
  %952 = cast(%var_4850, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %953 = reshape(%952, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %954 = @func_155(%953) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %955 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  %956 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  %957 = %939.2;
  %958 = %942.0;
  %959 = add(%943, %944) /* ty=Tensor[(2640), int16] */;
  %960 = %951.5;
  %961 = %954.0;
  (%955, %956, %957, %958, %959, %960, %var_4841, %var_4842, %961, %var_4850)
}

def @func_11827() -> Tensor[(8, 12, 3), float64] {
  %962 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %962.0
}

def @func_3149(%var_3085: Tensor[(15, 16, 11), float32]) -> (Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) {
  %963 = cast(meta[relay.Constant][71] /* ty=Tensor[(15, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 1), float32] */;
  %964 = cast(%var_3085, dtype="float32") /* ty=Tensor[(15, 16, 11), float32] */;
  %965 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %966 = %965.1;
  %967 = cast(meta[relay.Constant][72] /* ty=Tensor[(13, 7, 14), float64] */, dtype="bool") /* ty=Tensor[(13, 7, 14), bool] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%966, dtype="bool") /* ty=Tensor[(13, 7, 14), bool] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %971 = floor_divide(%963, %964) /* ty=Tensor[(15, 16, 11), float32] */;
  %972 = less_equal(%969, %970) /* ty=Tensor[(13, 7, 14), bool] */;
  (%971, %972)
}

def @func_10169() -> (Tensor[(390), uint8],) {
  %973 = @func_5483() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) */;
  %974 = %973.1;
  (%974,)
}

def @func_7021() -> Tensor[(8, 12, 3), int32] {
  %975 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %975.0
}

def @func_11988() -> (Tensor[(6, 13, 5), float32],) {
  %976 = @func_7399() /* ty=(Tensor[(6, 13, 5), float32],) */;
  %977 = %976.0;
  (%977,)
}

def @func_11952() -> (Tensor[(6, 13, 5), float32],) {
  %978 = @func_7399() /* ty=(Tensor[(6, 13, 5), float32],) */;
  %979 = %978.0;
  (%979,)
}

def @func_3931(%var_3915: Tensor[(390), uint8], %var_3925: Tensor[(396), float64]) -> (Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8], Tensor[(2640), float32], Tensor[(2640), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64], uint64, Tensor[(1470), float32]) {
  %980 = cast(%var_3915, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %981 = reshape(%980, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %982 = @func_155(%981) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %983 = cast(meta[relay.Constant][73] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %984 = reshape(%983, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %985 = @func_3219(%984) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */;
  %986 = cast(%var_3925, dtype="float64") /* ty=Tensor[(396), float64] */;
  %987 = reshape(%986, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %988 = cast(meta[relay.Constant][74] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %989 = reshape(%988, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float32] */;
  %990 = @func_2798(%989) /* ty=(Tensor[(8, 12, 3), bool], uint64, Tensor[(15, 7, 14), float64], Tensor[(1274), float64]) */;
  %991 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  %992 = %982.0;
  %993 = %985.2;
  %994 = @func_585(%987) /* ty=Tensor[(11, 9, 4), float64] */;
  %995 = %990.1;
  (%991, %992, %var_3915, %993, meta[relay.Constant][73] /* ty=Tensor[(2640), float32] */, %994, %var_3925, %995, meta[relay.Constant][74] /* ty=Tensor[(1470), float32] */)
}

def @func_500(%var_486: Tensor[(13, 7, 14), float64]) -> (Tensor[(13, 7, 14), float64],) {
  %996 = cast(%var_486, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %997 = atan(%996) /* ty=Tensor[(13, 7, 14), float64] */;
  (%997,)
}

def @func_9898(%var_9854: Tensor[(4, 4, 12), float32], %var_9855: Tensor[(4, 4, 12), float32]) -> (Tensor[(4, 4, 12), int16], Tensor[(4, 4, 12), float32], Tensor[(8, 12, 3), int32]) {
  %998 = cast(%var_9855, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %999 = shape_of(%var_9854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1000 = cast(%var_9854, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1002 = divide(%1000, %1001) /* ty=Tensor[(4, 4, 12), float32] */;
  %1003 = cast(%var_9855, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1007 = cast(%var_9854, dtype="float64") /* ty=Tensor[(4, 4, 12), float64] */;
  %1008 = asinh(%1007) /* ty=Tensor[(4, 4, 12), float64] */;
  %1009 = cast(%1008, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %1010 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %1011 = add(%1005, %1006) /* ty=Tensor[(4, 4, 12), int16] */;
  %1012 = cosh(%1009) /* ty=Tensor[(4, 4, 12), float32] */;
  %1013 = %1010.0;
  (%1011, %1012, %1013)
}

def @func_10384() -> (Tensor[(8, 12, 3), int32], Tensor[(1470), float64], Tensor[(1078), int16]) {
  %1014 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %1015 = cast(meta[relay.Constant][75] /* ty=Tensor[(1078), int16] */, dtype="int16") /* ty=Tensor[(1078), int16] */;
  %1016 = reshape(%1015, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), int16] */;
  %1017 = @func_4303(%1016) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) */;
  %1018 = %1014.1;
  %1019 = %1017.4;
  (%1018, %1019, meta[relay.Constant][75] /* ty=Tensor[(1078), int16] */)
}

def @func_5142() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %1020 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %1021 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1022 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %1023 = %1020.0;
  %1024 = %1021.0;
  %1025 = %1022.1;
  (%1023, %1024, %1025)
}

def @func_6542() -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) {
  %1026 = @func_5234() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %1027 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1028 = %1026.0;
  %1029 = %1027.0;
  (%1028, %1029)
}

def @func_10917(%var_10896: Tensor[(60), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(10, 6, 4), uint8], Tensor[(60), uint8], Tensor[(8, 12, 3), float64]) {
  %1030 = @func_9428() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %1031 = cast(%var_10896, dtype="uint8") /* ty=Tensor[(60), uint8] */;
  %1032 = reshape(%1031, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), uint8] */;
  %1033 = @func_7136() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1034 = %1030.0;
  %1035 = @func_8560(%1032) /* ty=Tensor[(10, 6, 4), uint8] */;
  %1036 = %1033.0;
  (%1034, %1035, %var_10896, %1036)
}

def @func_5483() -> (Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) {
  %1037 = @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
  %1038 = %1037.1;
  %1039 = cast(meta[relay.Constant][76] /* ty=Tensor[(8, 12, 3), bool] */, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
  %1040 = shape_of(%1038, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%1038, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1043 = cast(meta[relay.Constant][77] /* ty=Tensor[(216), uint64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %1044 = reshape(%1043, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %1045 = @func_3901(%1044) /* ty=(Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(945), uint64], Tensor[(216), uint64], Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) */;
  %1046 = minimum(%1041, %1042) /* ty=Tensor[(8, 12, 3), int32] */;
  %1047 = %1045.6;
  (%1046, %1047, meta[relay.Constant][77] /* ty=Tensor[(216), uint64] */)
}

def @func_9832() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %1048 = @func_6605() /* ty=Tensor[(8, 12, 3), float64] */;
  %1049 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  (%1048, %1049)
}

def @func_11997() -> (Tensor[(8, 12, 3), float64],) {
  %1050 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_1812() -> (Tensor[(8, 12, 3), float64],) {
  %1052 = cast(meta[relay.Constant][78] /* ty=Tensor[(8, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %1053 = sqrt(%1052) /* ty=Tensor[(8, 12, 3), float64] */;
  (%1053,)
}

def @func_7563(%var_7558: Tensor[(39, 4), bool]) -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int8], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(468), bool]) {
  %1054 = @func_6952() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %1055 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1056 = @func_7433() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) */;
  %1057 = @func_7344() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %1058 = cast(%var_7558, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
  %1059 = cast(meta[relay.Constant][79] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %1060 = reshape(%1058, newshape=[12, 1, 13]) /* ty=Tensor[(12, 1, 13), bool] */;
  %1061 = reshape(%1059, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), bool] */;
  %1062 = @func_3345(%1060, %1061) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) */;
  %1063 = %1054.0;
  %1064 = %1055.0;
  %1065 = %1056.1;
  %1066 = %1057.1;
  %1067 = %1062.1;
  (%1063, %1064, %1065, %1066, %1067, %var_7558, meta[relay.Constant][79] /* ty=Tensor[(468), bool] */)
}

def @func_4747() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %1068 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1069 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1070 = %1068.0;
  %1071 = %1069.0;
  (%1070, %1071)
}

def @func_9791() -> Tensor[(8, 12, 3), bool] {
  %1072 = @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
  %1072.1
}

def @func_2075(%var_2052: Tensor[(2, 8, 2), uint32], %var_2053: Tensor[(2, 8, 2), uint32], %var_2062: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(4, 6, 16), bool], float32, Tensor[(1274), float64], Tensor[(1, 945), uint64]) {
  %1073 = cast(%var_2053, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1074 = shape_of(%var_2052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%var_2052, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1077 = cast(%var_2062, dtype="float32") /* ty=float32 */;
  %1078 = reshape(%1077, newshape=[]) /* ty=float32 */;
  %1079 = @func_1670(%1078) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %1080 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 945), uint64] */, dtype="uint64") /* ty=Tensor[(1, 945), uint64] */;
  %1081 = reshape(%1080, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %1082 = @func_2027(%1081) /* ty=(Tensor[(1274), float64], Tensor[(15, 9, 7), bool], Tensor[(945), uint64], Tensor[(216), uint64]) */;
  %1083 = equal(%1075, %1076) /* ty=Tensor[(2, 8, 2), bool] */;
  %1084 = %1079.0;
  %1085 = %1082.0;
  (%1083, %1084, %var_2062, %1085, meta[relay.Constant][80] /* ty=Tensor[(1, 945), uint64] */)
}

def @func_4536() -> Tensor[(8, 12, 3), float64] {
  @func_3253() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_10596() -> Tensor[(8, 12, 3), float64] {
  %1086 = @func_9716() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1086.0
}

def @func_12436() -> Tensor[(8, 12, 3), float64] {
  %1087 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
  %1087.1
}

def @func_7136() -> (Tensor[(8, 12, 3), float64],) {
  %1088 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1089 = %1088.0;
  (%1089,)
}

def @func_585(%var_582: Tensor[(11, 9, 4), float64]) -> Tensor[(11, 9, 4), float64] {
  %1090 = cast(%var_582, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  cosh(%1090) /* ty=Tensor[(11, 9, 4), float64] */
}

def @func_8630() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  %1091 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  %1092 = @func_8201() /* ty=Tensor[(8, 12, 3), int32] */;
  (%1091, %1092)
}

def @func_8518(%var_8511: Tensor[(132, 20), float32]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(132, 20), float32]) {
  %1093 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1094 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %1095 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %1096 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %1097 = cast(%var_8511, dtype="float32") /* ty=Tensor[(132, 20), float32] */;
  %1098 = reshape(%1097, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %1099 = @func_3219(%1098) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */;
  %1100 = %1093.0;
  %1101 = %1094.1;
  %1102 = %1095.1;
  %1103 = %1096.1;
  %1104 = %1099.0;
  (%1100, %1101, %1102, %1103, %1104, %var_8511)
}

def @func_10370() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32]) {
  %1105 = @func_4652() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %1106 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %1107 = %1105.1;
  %1108 = %1106.0;
  (%1107, %1108)
}

def @func_5174(%var_5151: Tensor[(15, 10, 3), float32], %var_5169: Tensor[(15, 10, 3), float64]) -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), bool]) {
  %1109 = cast(%var_5151, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
  %1110 = cast(%var_5151, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
  %1111 = asinh(%1110) /* ty=Tensor[(15, 10, 3), float64] */;
  %1112 = cast(%var_5169, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1113 = shape_of(%1111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%1111, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1116 = acosh(%1109) /* ty=Tensor[(15, 10, 3), float32] */;
  %1117 = greater_equal(%1114, %1115) /* ty=Tensor[(15, 10, 3), bool] */;
  (%1116, %1117)
}

def @func_9343() -> Tensor[(8, 12, 3), float64] {
  %1118 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1118.0
}

def @func_12192(%var_12182: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(1344), float32], Tensor[(390), uint8]) {
  %1119 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %1120 = cast(%var_12182, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %1121 = reshape(%1120, newshape=[390]) /* ty=Tensor[(390), uint8] */;
  %1122 = @func_5092(%1121) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %1123 = %1119.0;
  %1124 = @func_10238() /* ty=Tensor[(8, 12, 3), float32] */;
  %1125 = %1122.2;
  (%1123, %1124, %1125, %var_12182)
}

def @func_2027(%var_2019: Tensor[(945), uint64]) -> (Tensor[(1274), float64], Tensor[(15, 9, 7), bool], Tensor[(945), uint64], Tensor[(216), uint64]) {
  %1126 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %1127 = cast(%var_2019, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %1128 = cast(meta[relay.Constant][81] /* ty=Tensor[(216), uint64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %1129 = reshape(%1127, newshape=[15, 9, 7]) /* ty=Tensor[(15, 9, 7), uint64] */;
  %1130 = reshape(%1128, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %1131 = @func_1217(%1129, %1130) /* ty=(Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) */;
  %1132 = %1126.2;
  %1133 = %1131.0;
  (%1132, %1133, %var_2019, meta[relay.Constant][81] /* ty=Tensor[(216), uint64] */)
}

def @func_12514() -> Tensor[(8, 12, 3), int32] {
  @func_8892() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_7709() -> (Tensor[(8, 12, 3), int32], Tensor[(1274), float64]) {
  %1134 = @func_5709() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %1135 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %1136 = %1134.0;
  %1137 = %1135.2;
  (%1136, %1137)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6952() -> (Tensor[(13, 7, 14), float64],) {
  %0 = @func_5234() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_8313() -> (Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), float64]) {
  @func_8311() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_8518(%var_8511: Tensor[(132, 20), float32]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(132, 20), float32]) {
  %2 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %3 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %4 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %5 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %6 = cast(%var_8511, dtype="float32") /* ty=Tensor[(132, 20), float32] */;
  %7 = reshape(%6, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %8 = @func_3219(%7) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */;
  %9 = %2.0;
  %10 = %3.1;
  %11 = %4.1;
  %12 = %5.1;
  %13 = %8.0;
  (%9, %10, %11, %12, %13, %var_8511)
}

def @func_8942() -> (Tensor[(8, 12, 3), int32],) {
  %15 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %14 = @func_3313() /* ty=Tensor[(8, 12, 3), int32] */;
    (%14,)
  };
  %15() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_6425() -> (Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) {
  %23 = fn () -> (Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) {
    %16 = @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
    %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
    %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
    %19 = reshape(%17, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
    %20 = reshape(%18, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
    %21 = %16.1;
    %22 = @func_5248(%19, %20) /* ty=Tensor[(10, 15, ?), bool] */;
    (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(150), uint64] */)
  };
  %23() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */
}

def @func_7710() -> (Tensor[(8, 12, 3), int32], Tensor[(1274), float64]) {
  %28 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(1274), float64]) {
    %24 = @func_5709() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %25 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %26 = %24.0;
    %27 = %25.2;
    (%26, %27)
  };
  %28() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64]) */
}

def @func_11345(%var_11343: Tensor[(14, 10, 2), int8], %var_11344: Tensor[(14, 10, 2), int8]) -> (Tensor[(14, 10, 2), bool], Tensor[(14, 6, 9), float32], Tensor[(54, 14), float32]) {
  @func_11341(%var_11343, %var_11344) /* ty=(Tensor[(14, 10, 2), bool], Tensor[(14, 6, 9), float32], Tensor[(54, 14), float32]) */
}

def @func_2428() -> Tensor[(8, 12, 3), int32] {
  %29 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %29.2
}

def @func_4671() -> (Tensor[(8, 12, 3), float64],) {
  %32 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %30 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %31 = %30.0;
    (%31,)
  };
  %32() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_10274() -> (Tensor[(10, 6, 7), bool],) {
  @func_10272() /* ty=(Tensor[(10, 6, 7), bool],) */
}

def @func_11001() -> Tensor[(8, 12, 3), float64] {
  %33 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %33.0
}

def @func_9439(%var_9432: int8) -> (Tensor[(6, 1, 3), bool],) {
  %34 = cast(%var_9432, dtype="bool") /* ty=bool */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 1, 3), int8] */, dtype="bool") /* ty=Tensor[(6, 1, 3), bool] */;
  %36 = not_equal(%34, %35) /* ty=Tensor[(6, 1, 3), bool] */;
  (%36,)
}

def @func_2518() -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) {
  %37 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %38 = cast(9.20311f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %39 = reshape(%38, newshape=[]) /* ty=float32 */;
  %40 = @func_1670(%39) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %41 = %37.0;
  %42 = %40.1;
  (%41, %42, 9.20311f /* ty=float32 */)
}

def @func_9678() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(390), uint8], Tensor[(390), uint8], Tensor[(8, 12, 3), bool]) {
  %52 = fn () -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(390), uint8], Tensor[(390), uint8], Tensor[(8, 12, 3), bool]) {
    %43 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %44 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
    %46 = reshape(%45, newshape=[390]) /* ty=Tensor[(390), uint8] */;
    %47 = @func_6236(%46) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8]) */;
    %48 = %43.0;
    %49 = %44.0;
    %50 = %47.3;
    %51 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
    (%48, %49, %50, meta[relay.Constant][2] /* ty=Tensor[(390), uint8] */, %51)
  };
  %52() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(390), uint8], Tensor[(390), uint8], Tensor[(8, 12, 3), bool]) */
}

def @func_10372() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32]) {
  @func_10370() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32]) */
}

def @func_6854() -> (Tensor[(8, 12, 3), int32],) {
  %54 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %53 = @func_5610() /* ty=Tensor[(8, 12, 3), int32] */;
    (%53,)
  };
  %54() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_6542() -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) {
  %55 = @func_5234() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %56 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %57 = %55.0;
  %58 = %56.0;
  (%57, %58)
}

def @func_12867(%var_12844: Tensor[(756), float32]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(14, 6, 9), float32], Tensor[(756), bool]) {
  %59 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %60 = @func_9315() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %62 = reshape(%61, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %63 = cast(%var_12844, dtype="bool") /* ty=Tensor[(756), bool] */;
  %64 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(756), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(756), float32] */, dtype="bool") /* ty=Tensor[(756), bool] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), bool] */;
  %67 = %59.1;
  %68 = %60.0;
  %69 = @func_3993(%62) /* ty=Tensor[(14, 6, 9), float32] */;
  %70 = not_equal(%65, %66) /* ty=Tensor[(756), bool] */;
  (%67, %68, %69, %70)
}

def @func_3575() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) {
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %72 = reshape(%71, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %73 = @func_3219(%72) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */;
  %74 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
  %75 = %73.0;
  (%74, %75, meta[relay.Constant][4] /* ty=Tensor[(2640), float32] */)
}

def @func_10777() -> (Tensor[(8, 12, 3), int32],) {
  %78 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %76 = @func_10345() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %77 = %76.0;
    (%77,)
  };
  %78() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_3901(%var_3878: Tensor[(216), uint64]) -> (Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(945), uint64], Tensor[(216), uint64], Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) {
  %79 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
  %80 = %79.1;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(945), uint64] */, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %83 = cast(%var_3878, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %84 = reshape(%82, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %85 = reshape(%83, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %86 = @func_3047(%84, %85) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) */;
  %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %88 = reshape(%87, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %89 = @func_155(%88) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %90 = cos(%81) /* ty=Tensor[(13, 7, 14), float32] */;
  %91 = %86.0;
  %92 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  %93 = %89.0;
  (%90, %91, meta[relay.Constant][5] /* ty=Tensor[(945), uint64] */, %var_3878, %92, %93, meta[relay.Constant][6] /* ty=Tensor[(390), uint8] */)
}

def @func_4305(%var_4304: Tensor[(1, 1078), int16]) -> (Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) {
  %106 = fn (%var_4299: Tensor[(1, 1078), int16]) -> (Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) {
    %94 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %95 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
    %96 = cast(%var_4299, dtype="int16") /* ty=Tensor[(1, 1078), int16] */;
    %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %98 = %95.0;
    %99 = cast(%98, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
    %100 = reshape(%96, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), int16] */;
    %101 = reshape(%97, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
    %102 = reshape(%99, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
    %103 = @func_3473(%100, %101, %102) /* ty=(Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
    %104 = %94.2;
    %105 = %103.2;
    (%104, %98, %105, %var_4299, meta[relay.Constant][7] /* ty=Tensor[(1470), float64] */)
  };
  %106(%var_4304) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) */
}

def @func_9030() -> Tensor[(8, 12, 3), int32] {
  %108 = fn () -> Tensor[(8, 12, 3), int32] {
    %107 = @func_7927() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %107.0
  };
  %108() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_8655(%var_8653: Tensor[(1, 12, 8), uint8]) -> (Tensor[(?, 12, 8), bool],) {
  @func_8652(%var_8653) /* ty=(Tensor[(?, 12, 8), bool],) */
}

def @func_11434() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) {
  %120 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) {
    %109 = @func_7709() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64]) */;
    %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
    %111 = reshape(%110, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
    %112 = @func_585(%111) /* ty=Tensor[(11, 9, 4), float64] */;
    %113 = cast(%112, dtype="bool") /* ty=Tensor[(11, 9, 4), bool] */;
    %114 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(396), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %115 = cast(meta[relay.Constant][8] /* ty=Tensor[(396), float64] */, dtype="bool") /* ty=Tensor[(396), bool] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?), bool] */;
    %117 = %109.0;
    %118 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
    %119 = equal(%115, %116) /* ty=Tensor[(396), bool] */;
    (%117, %118, %119)
  };
  %120() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */
}

def @func_8920(%var_8906: Tensor[(24, 10), float64]) -> (Tensor[(13, 7, 14), float64], uint64, Tensor[(24, 10), float64]) {
  %121 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %122 = cast(%var_8906, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %123 = reshape(%122, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %124 = @func_4592(%123) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) */;
  %125 = %121.1;
  %126 = %124.2;
  (%125, %126, %var_8906)
}

def @func_8814() -> (Tensor[(10, 15, ?), bool],) {
  @func_8812() /* ty=(Tensor[(10, 15, ?), bool],) */
}

def @func_13231() -> (Tensor[(8, 12, 3), int32],) {
  %127 = @func_6853() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %128 = %127.0;
  (%128,)
}

def @func_8652(%var_8641: Tensor[(1, 12, 8), uint8]) -> (Tensor[(?, 12, 8), bool],) {
  %129 = cast(%var_8641, dtype="bool") /* ty=Tensor[(1, 12, 8), bool] */;
  %130 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(1, 12, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 12, 8), uint8] */, dtype="bool") /* ty=Tensor[(1, 12, 8), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = equal(%131, %132) /* ty=Tensor[(?, 12, 8), bool] */;
  (%133,)
}

def @func_4040(%var_4037: Tensor[(14, 105), float64], %var_4038: uint64, %var_4039: Tensor[(8, 4), uint32]) -> (Tensor[(8, 12, 3), int32], Tensor[(15, 7, 14), uint16], Tensor[(14, 105), float64], uint64, float32, Tensor[(8, 4), uint32]) {
  %149 = fn (%var_4022: Tensor[(14, 105), float64], %var_4023: uint64, %var_4031: Tensor[(8, 4), uint32]) -> (Tensor[(8, 12, 3), int32], Tensor[(15, 7, 14), uint16], Tensor[(14, 105), float64], uint64, float32, Tensor[(8, 4), uint32]) {
    %134 = cast(%var_4022, dtype="float64") /* ty=Tensor[(14, 105), float64] */;
    %135 = cast(%var_4023, dtype="uint64") /* ty=uint64 */;
    %136 = reshape(%134, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float64] */;
    %137 = reshape(%135, newshape=[]) /* ty=uint64 */;
    %138 = @func_1461(%136, %137) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */;
    %139 = cast(%var_4031, dtype="uint32") /* ty=Tensor[(8, 4), uint32] */;
    %140 = cast(%var_4031, dtype="uint32") /* ty=Tensor[(8, 4), uint32] */;
    %141 = cast(%var_4023, dtype="float32") /* ty=float32 */;
    %142 = reshape(%139, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), uint32] */;
    %143 = reshape(%140, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), uint32] */;
    %144 = reshape(%141, newshape=[]) /* ty=float32 */;
    %145 = @func_2075(%142, %143, %144) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 6, 16), bool], float32, Tensor[(1274), float64], Tensor[(1, 945), uint64]) */;
    %146 = @func_3313() /* ty=Tensor[(8, 12, 3), int32] */;
    %147 = %138.1;
    %148 = %145.2;
    (%146, %147, %var_4022, %var_4023, %148, %var_4031)
  };
  %149(%var_4037, %var_4038, %var_4039) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(15, 7, 14), uint16], Tensor[(14, 105), float64], uint64, float32, Tensor[(8, 4), uint32]) */
}

def @func_7137() -> (Tensor[(8, 12, 3), float64],) {
  %152 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %150 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %151 = %150.0;
    (%151,)
  };
  %152() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_7765(%var_7763: Tensor[(8, 11, 12), uint32], %var_7764: Tensor[(8, 11, 12), uint32]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 11, 12), bool]) {
  %165 = fn (%var_7745: Tensor[(8, 11, 12), uint32], %var_7746: Tensor[(8, 11, 12), uint32]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 11, 12), bool]) {
    %153 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %154 = cast(%var_7746, dtype="uint32") /* ty=Tensor[(8, 11, 12), uint32] */;
    %155 = shape_of(%var_7745, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%var_7745, dtype="uint32") /* ty=Tensor[(8, 11, 12), uint32] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %158 = maximum(%156, %157) /* ty=Tensor[(8, 11, 12), uint32] */;
    %159 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 11, 12), uint32] */, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
    %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%158, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %163 = %153.0;
    %164 = logical_or(%161, %162) /* ty=Tensor[(8, 11, 12), bool] */;
    (%163, %164)
  };
  %165(%var_7763, %var_7764) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 11, 12), bool]) */
}

def @func_5142() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %166 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %167 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %168 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %169 = %166.0;
  %170 = %167.0;
  %171 = %168.1;
  (%169, %170, %171)
}

def @func_2430() -> Tensor[(8, 12, 3), int32] {
  @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_8892() -> Tensor[(8, 12, 3), int32] {
  @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_10793() -> (Tensor[(8, 12, 3), int32],) {
  @func_10791() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_1220(%var_1218: Tensor[(15, 9, 7), uint64], %var_1219: Tensor[(216), uint64]) -> (Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) {
  %195 = fn (%var_1152: Tensor[(15, 9, 7), uint64], %var_1176: Tensor[(216), uint64]) -> (Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) {
    %172 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 9, 1), uint64] */, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
    %173 = cast(%var_1152, dtype="bool") /* ty=Tensor[(15, 9, 7), bool] */;
    %174 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %175 = cast(%var_1176, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %177 = reshape(%174, newshape=[]) /* ty=uint64 */;
    %178 = reshape(%175, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
    %179 = reshape(%176, newshape=[528]) /* ty=Tensor[(528), int8] */;
    %180 = @func_1045(%177, %178, %179) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
    %181 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %182 = cast(%var_1176, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %183 = cast(meta[relay.Constant][13] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %184 = reshape(%181, newshape=[]) /* ty=uint64 */;
    %185 = reshape(%182, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
    %186 = reshape(%183, newshape=[528]) /* ty=Tensor[(528), int8] */;
    %187 = @func_1045(%184, %185, %186) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
    %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 9, 1), uint64] */, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %189 = log2(%188) /* ty=Tensor[(15, 9, 1), float32] */;
    %190 = cast(%189, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %191 = equal(%172, %173) /* ty=Tensor[(15, 9, 7), bool] */;
    %192 = %180.4;
    %193 = %187.2;
    %194 = erf(%190) /* ty=Tensor[(15, 9, 1), float32] */;
    (%191, %192, meta[relay.Constant][12] /* ty=uint64 */, %var_1176, meta[relay.Constant][13] /* ty=Tensor[(528), int8] */, %193, %194)
  };
  %195(%var_1218, %var_1219) /* ty=(Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) */
}

def @func_11097() -> (Tensor[(8, 12, 3), int32],) {
  %196 = @func_6853() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %197 = %196.0;
  (%197,)
}

def @func_9469() -> (Tensor[(8, 12, 3), bool],) {
  @func_9467() /* ty=(Tensor[(8, 12, 3), bool],) */
}

def @func_2029(%var_2028: Tensor[(945), uint64]) -> (Tensor[(1274), float64], Tensor[(15, 9, 7), bool], Tensor[(945), uint64], Tensor[(216), uint64]) {
  %206 = fn (%var_2019: Tensor[(945), uint64]) -> (Tensor[(1274), float64], Tensor[(15, 9, 7), bool], Tensor[(945), uint64], Tensor[(216), uint64]) {
    %198 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %199 = cast(%var_2019, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %200 = cast(meta[relay.Constant][14] /* ty=Tensor[(216), uint64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %201 = reshape(%199, newshape=[15, 9, 7]) /* ty=Tensor[(15, 9, 7), uint64] */;
    %202 = reshape(%200, newshape=[216]) /* ty=Tensor[(216), uint64] */;
    %203 = @func_1217(%201, %202) /* ty=(Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) */;
    %204 = %198.2;
    %205 = %203.0;
    (%204, %205, %var_2019, meta[relay.Constant][14] /* ty=Tensor[(216), uint64] */)
  };
  %206(%var_2028) /* ty=(Tensor[(1274), float64], Tensor[(15, 9, 7), bool], Tensor[(945), uint64], Tensor[(216), uint64]) */
}

def @func_7481(%var_7479: Tensor[(13, 3, 4), uint64]) -> Tensor[(13, 3, 4), uint64] {
  @func_7478(%var_7479) /* ty=Tensor[(13, 3, 4), uint64] */
}

def @func_588(%var_586: Tensor[(11, 9, 4), float64]) -> Tensor[(11, 9, 4), float64] {
  @func_585(%var_586) /* ty=Tensor[(11, 9, 4), float64] */
}

def @func_10715() -> (Tensor[(13, 7, 14), float64],) {
  %209 = fn () -> (Tensor[(13, 7, 14), float64],) {
    %207 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
    %208 = %207.1;
    (%208,)
  };
  %209() /* ty=(Tensor[(13, 7, 14), float64],) */
}

def @func_8852(%var_8850: Tensor[(528), int8], %var_8851: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 6, 11), int8], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(8, 12, 3), int32]) {
  %219 = fn (%var_8820: Tensor[(528), int8], %var_8821: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 6, 11), int8], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(8, 12, 3), int32]) {
    %210 = cast(%var_8820, dtype="int8") /* ty=Tensor[(528), int8] */;
    %211 = cast(%var_8821, dtype="uint8") /* ty=Tensor[(390), uint8] */;
    %212 = reshape(%210, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
    %213 = reshape(%211, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
    %214 = @func_340(%212, %213) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
    %215 = @func_5709() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %216 = @func_7021() /* ty=Tensor[(8, 12, 3), int32] */;
    %217 = %214.0;
    %218 = %215.0;
    (%216, %217, %var_8820, %var_8821, %218)
  };
  %219(%var_8850, %var_8851) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 6, 11), int8], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(8, 12, 3), int32]) */
}

def @func_9442(%var_9440: int8) -> (Tensor[(6, 1, 3), bool],) {
  @func_9439(%var_9440) /* ty=(Tensor[(6, 1, 3), bool],) */
}

def @func_4652() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) {
  %220 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  %221 = cast(%220, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %222 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  %223 = sin(%221) /* ty=Tensor[(8, 12, 3), float64] */;
  (%222, %223)
}

def @func_8389() -> (Tensor[(13, 2), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), bool]) {
  %229 = fn () -> (Tensor[(13, 2), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), bool]) {
    %224 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
    %225 = @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */;
    %226 = asinh(%224) /* ty=Tensor[(13, 2), float64] */;
    %227 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
    %228 = %225.0;
    (%226, %227, %228)
  };
  %229() /* ty=(Tensor[(13, 2), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), bool]) */
}

def @func_10345() -> (Tensor[(8, 12, 3), int32],) {
  %230 = @func_8201() /* ty=Tensor[(8, 12, 3), int32] */;
  (%230,)
}

def @func_3050(%var_3048: Tensor[(945), uint64], %var_3049: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) {
  %248 = fn (%var_3016: Tensor[(945), uint64], %var_3017: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) {
    %231 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %232 = %231.0;
    %233 = cast(%232, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
    %234 = cast(%var_3016, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %235 = cast(%var_3017, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %236 = reshape(%233, newshape=[8, 12, 3]) /* ty=Tensor[(8, 12, 3), float64] */;
    %237 = reshape(%234, newshape=[945]) /* ty=Tensor[(945), uint64] */;
    %238 = reshape(%235, newshape=[216]) /* ty=Tensor[(216), uint64] */;
    %239 = @func_2480(%236, %237, %238) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32, Tensor[(15, 9, 1), float32], Tensor[(945), uint64], Tensor[(216), uint64]) */;
    %240 = %239.5;
    %241 = cast(%var_3016, dtype="bool") /* ty=Tensor[(945), bool] */;
    %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(1), int32] */;
    %243 = cast(%240, dtype="bool") /* ty=Tensor[(945), bool] */;
    %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?), bool] */;
    %245 = not_equal(%243, %244) /* ty=Tensor[(945), bool] */;
    %246 = cast(%245, dtype="float64") /* ty=Tensor[(945), float64] */;
    %247 = exp(%246) /* ty=Tensor[(945), float64] */;
    (%232, %var_3017, %247)
  };
  %248(%var_3048, %var_3049) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) */
}

def @func_9353() -> Tensor[(8, 12, 3), float64] {
  %250 = fn () -> Tensor[(8, 12, 3), float64] {
    %249 = @func_8163() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) */;
    %249.1
  };
  %250() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_8812() -> (Tensor[(10, 15, ?), bool],) {
  %251 = @func_6424() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */;
  %252 = %251.1;
  (%252,)
}

def @func_9642() -> Tensor[(8, 12, 3), float64] {
  %254 = fn () -> Tensor[(8, 12, 3), float64] {
    %253 = @func_8311() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), float64]) */;
    %253.1
  };
  %254() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_3313() -> Tensor[(8, 12, 3), int32] {
  @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_10862() -> Tensor[(8, 12, 3), int32] {
  @func_10860() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_7566(%var_7564: Tensor[(39, 4), bool]) -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int8], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(468), bool]) {
  @func_7563(%var_7564) /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int8], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(468), bool]) */
}

def @func_10124() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  %255 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %256 = @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %257 = %255.0;
  %258 = %256.0;
  (%257, %258)
}

def @func_5082(%var_5081: Tensor[(195, 2), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(24, 22), int8], Tensor[(195, 2), uint8]) {
  %266 = fn (%var_5068: Tensor[(195, 2), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(24, 22), int8], Tensor[(195, 2), uint8]) {
    %259 = cast(meta[relay.Constant][16] /* ty=Tensor[(24, 22), int8] */, dtype="int8") /* ty=Tensor[(24, 22), int8] */;
    %260 = cast(%var_5068, dtype="uint8") /* ty=Tensor[(195, 2), uint8] */;
    %261 = reshape(%259, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
    %262 = reshape(%260, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
    %263 = @func_340(%261, %262) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
    %264 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
    %265 = %263.1;
    (%264, %265, meta[relay.Constant][16] /* ty=Tensor[(24, 22), int8] */, %var_5068)
  };
  %266(%var_5081) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(24, 22), int8], Tensor[(195, 2), uint8]) */
}

def @func_10272() -> (Tensor[(10, 6, 7), bool],) {
  %267 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
  %268 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(10, 6, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 6, 7), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = logical_and(%269, %270) /* ty=Tensor[(10, 6, 7), bool] */;
  (%271,)
}

def @func_6504() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */
}

def @func_9317() -> (Tensor[(8, 12, 3), float64],) {
  @func_9315() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_9344() -> Tensor[(8, 12, 3), float64] {
  %273 = fn () -> Tensor[(8, 12, 3), float64] {
    %272 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %272.0
  };
  %273() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_4939(%var_4894: Tensor[(945), uint64], %var_4895: Tensor[(108, 2), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(108, 2), uint64], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(945), float32], Tensor[(945), bool]) {
  %274 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %275 = cast(meta[relay.Constant][19] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %276 = reshape(%275, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %277 = cast(%var_4894, dtype="uint64") /* ty=Tensor[(945), uint64] */;
  %278 = cast(%var_4895, dtype="uint64") /* ty=Tensor[(108, 2), uint64] */;
  %279 = reshape(%277, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %280 = reshape(%278, newshape=[216]) /* ty=Tensor[(216), uint64] */;
  %281 = @func_3047(%279, %280) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(216), uint64], Tensor[(945), float64]) */;
  %282 = %281.2;
  %283 = cast(%var_4894, dtype="float32") /* ty=Tensor[(945), float32] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(1), int32] */;
  %285 = cast(%282, dtype="float32") /* ty=Tensor[(945), float32] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?), float32] */;
  %287 = cast(%var_4894, dtype="bool") /* ty=Tensor[(945), bool] */;
  %288 = shape_of(%282, dtype="int32") /* ty=Tensor[(1), int32] */;
  %289 = cast(%282, dtype="bool") /* ty=Tensor[(945), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?), bool] */;
  %291 = %274.1;
  %292 = @func_585(%276) /* ty=Tensor[(11, 9, 4), float64] */;
  %293 = mod(%285, %286) /* ty=Tensor[(945), float32] */;
  %294 = less_equal(%289, %290) /* ty=Tensor[(945), bool] */;
  (%291, %var_4895, %292, meta[relay.Constant][19] /* ty=Tensor[(396), float64] */, %293, %294)
}

def @func_2584(%var_2576: Tensor[(1344), float32], %var_2578: Tensor[(1274), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  %295 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %296 = cast(%var_2576, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %297 = cast(%var_2576, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %298 = cast(meta[relay.Constant][20] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %299 = cast(%var_2578, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %300 = reshape(%296, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %301 = reshape(%297, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %302 = reshape(%298, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
  %303 = reshape(%299, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %304 = @func_771(%300, %301, %302, %303) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %305 = %295.2;
  %306 = %304.0;
  (%305, %306, %var_2576, meta[relay.Constant][20] /* ty=Tensor[(390), uint8] */, %var_2578)
}

def @func_343(%var_341: Tensor[(8, 6, 11), int8], %var_342: Tensor[(195, 2), uint8]) -> (Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) {
  %316 = fn (%var_327: Tensor[(8, 6, 11), int8], %var_336: Tensor[(195, 2), uint8]) -> (Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) {
    %307 = cast(%var_327, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
    %308 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 6, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %309 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 6, 11), int8] */, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
    %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %311 = cast(%var_336, dtype="uint8") /* ty=Tensor[(195, 2), uint8] */;
    %312 = reshape(%311, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
    %313 = @func_155(%312) /* ty=(Tensor[(15, 13, 2), float32],) */;
    %314 = minimum(%309, %310) /* ty=Tensor[(8, 6, 11), int8] */;
    %315 = %313.0;
    (%314, %315, %var_336)
  };
  %316(%var_341, %var_342) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */
}

def @func_10791() -> (Tensor[(8, 12, 3), int32],) {
  %317 = @func_10384() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1470), float64], Tensor[(1078), int16]) */;
  %318 = %317.0;
  (%318,)
}

def @func_4460() -> Tensor[(8, 12, 3), float64] {
  %320 = fn () -> Tensor[(8, 12, 3), float64] {
    %319 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %319.0
  };
  %320() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_10598() -> Tensor[(8, 12, 3), float64] {
  @func_10596() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_3152(%var_3150: Tensor[(15, 16, 11), float32]) -> (Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) {
  @func_3149(%var_3150) /* ty=(Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) */
}

def @func_13334() -> Tensor[(8, 12, 3), int32] {
  %322 = fn () -> Tensor[(8, 12, 3), int32] {
    %321 = @func_12531() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float32], Tensor[(150), uint64]) */;
    %321.0
  };
  %322() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_8311() -> (Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), float64]) {
  %323 = @func_7433() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) */;
  %324 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %325 = %323.0;
  %326 = %324.0;
  (%325, %326)
}

def @func_6529(%var_6528: Tensor[(1078), int16]) -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32], Tensor[(1078), int16]) {
  %338 = fn (%var_6523: Tensor[(1078), int16]) -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32], Tensor[(1078), int16]) {
    %327 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
    %328 = %327.2;
    %329 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 12, 3), float64] */, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
    %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%328, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %333 = cast(%var_6523, dtype="int16") /* ty=Tensor[(1078), int16] */;
    %334 = reshape(%333, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), int16] */;
    %335 = @func_4303(%334) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) */;
    %336 = mod(%331, %332) /* ty=Tensor[(8, 12, 3), float32] */;
    %337 = %335.0;
    (%336, %337, %var_6523)
  };
  %338(%var_6528) /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32], Tensor[(1078), int16]) */
}

def @func_3996(%var_3994: Tensor[(14, 6, 9), float32]) -> Tensor[(14, 6, 9), float32] {
  @func_3993(%var_3994) /* ty=Tensor[(14, 6, 9), float32] */
}

def @func_4943(%var_4941: Tensor[(945), uint64], %var_4942: Tensor[(108, 2), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(108, 2), uint64], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(945), float32], Tensor[(945), bool]) {
  @func_4939(%var_4941, %var_4942) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(108, 2), uint64], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(945), float32], Tensor[(945), bool]) */
}

def @func_12494(%var_12493: Tensor[(156), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64], Tensor[(13, 7, 14), float32]) {
  %346 = fn (%var_12464: Tensor[(156), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64], Tensor[(13, 7, 14), float32]) {
    %339 = @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %340 = cast(%var_12464, dtype="uint64") /* ty=Tensor[(156), uint64] */;
    %341 = reshape(%340, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), uint64] */;
    %342 = @func_10596() /* ty=Tensor[(8, 12, 3), float64] */;
    %343 = %339.0;
    %344 = @func_7478(%341) /* ty=Tensor[(13, 3, 4), uint64] */;
    %345 = @func_5983() /* ty=Tensor[(13, 7, 14), float32] */;
    (%342, %343, %344, %var_12464, %345)
  };
  %346(%var_12493) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64], Tensor[(13, 7, 14), float32]) */
}

def @func_10255() -> (Tensor[(13, 7, 14), float32],) {
  @func_10253() /* ty=(Tensor[(13, 7, 14), float32],) */
}

def @func_10989() -> Tensor[(8, 12, 3), bool] {
  @func_10987() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_502(%var_501: Tensor[(13, 7, 14), float64]) -> (Tensor[(13, 7, 14), float64],) {
  %349 = fn (%var_486: Tensor[(13, 7, 14), float64]) -> (Tensor[(13, 7, 14), float64],) {
    %347 = cast(%var_486, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
    %348 = atan(%347) /* ty=Tensor[(13, 7, 14), float64] */;
    (%348,)
  };
  %349(%var_501) /* ty=(Tensor[(13, 7, 14), float64],) */
}

def @func_3904(%var_3902: Tensor[(216), uint64]) -> (Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(945), uint64], Tensor[(216), uint64], Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) {
  @func_3901(%var_3902) /* ty=(Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(945), uint64], Tensor[(216), uint64], Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) */
}

def @func_12359() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) {
  %353 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) {
    %350 = @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %351 = %350.0;
    %352 = @func_11827() /* ty=Tensor[(8, 12, 3), float64] */;
    (%351, %352)
  };
  %353() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) */
}

def @func_5403() -> (Tensor[(8, 12, 3), float64],) {
  %354 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  (%354,)
}

def @func_158(%var_156: Tensor[(15, 13, 2), uint8]) -> (Tensor[(15, 13, 2), float32],) {
  @func_155(%var_156) /* ty=(Tensor[(15, 13, 2), float32],) */
}

def @func_10015() -> (Tensor[(16, 12, 2), int64], Tensor[(8, 12, 3), int32]) {
  %355 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 12, 2), int64] */, dtype="int64") /* ty=Tensor[(16, 12, 2), int64] */;
  %356 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(16, 12, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 12, 2), int64] */, dtype="int64") /* ty=Tensor[(16, 12, 2), int64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %359 = @func_7927() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %360 = bitwise_or(%357, %358) /* ty=Tensor[(16, 12, 2), int64] */;
  %361 = %359.0;
  (%360, %361)
}

def @func_4070() -> (Tensor[(8, 12, 3), bool],) {
  @func_4068() /* ty=(Tensor[(8, 12, 3), bool],) */
}

def @func_12760() -> (Tensor[(8, 12, 3), int32],) {
  %364 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %362 = @func_8941() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %363 = %362.0;
    (%363,)
  };
  %364() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_12240() -> (Tensor[(8, 12, 3), float64],) {
  %367 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %365 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
    %366 = %365.1;
    (%366,)
  };
  %367() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_585(%var_582: Tensor[(11, 9, 4), float64]) -> Tensor[(11, 9, 4), float64] {
  %368 = cast(%var_582, dtype="float64") /* ty=Tensor[(11, 9, 4), float64] */;
  cosh(%368) /* ty=Tensor[(11, 9, 4), float64] */
}

def @func_1631(%var_1629: Tensor[(4, 6, 10), float64]) -> (Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) {
  @func_1628(%var_1629) /* ty=(Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) */
}

def @func_10332() -> Tensor[(8, 12, 3), float32] {
  %370 = fn () -> Tensor[(8, 12, 3), float32] {
    %369 = @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */;
    %369.0
  };
  %370() /* ty=Tensor[(8, 12, 3), float32] */
}

def @func_7951() -> (Tensor[(8, 12, 3), bool],) {
  %371 = @func_7294() /* ty=Tensor[(8, 12, 3), bool] */;
  (%371,)
}

def @func_3315() -> Tensor[(8, 12, 3), int32] {
  @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_9956() -> (Tensor[(8, 12, 3), float64],) {
  %374 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %372 = @func_7136() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %373 = %372.0;
    (%373,)
  };
  %374() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_13026() -> (Tensor[(8, 12, 3), int32],) {
  %377 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %375 = @func_12358() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) */;
    %376 = %375.0;
    (%376,)
  };
  %377() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_6083(%var_6081: Tensor[(13, 7, 14), float64]) -> (Tensor[(13, 7, 14), int32],) {
  @func_6080(%var_6081) /* ty=(Tensor[(13, 7, 14), int32],) */
}

def @func_1814() -> (Tensor[(8, 12, 3), float64],) {
  @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_7022() -> Tensor[(8, 12, 3), int32] {
  %379 = fn () -> Tensor[(8, 12, 3), int32] {
    %378 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %378.0
  };
  %379() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_13233() -> (Tensor[(8, 12, 3), int32],) {
  @func_13231() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_12533() -> (Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float32], Tensor[(150), uint64]) {
  @func_12531() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float32], Tensor[(150), uint64]) */
}

def @func_1812() -> (Tensor[(8, 12, 3), float64],) {
  %380 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %381 = sqrt(%380) /* ty=Tensor[(8, 12, 3), float64] */;
  (%381,)
}

def @func_10596() -> Tensor[(8, 12, 3), float64] {
  %382 = @func_9716() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %382.0
}

def @func_8923(%var_8921: Tensor[(24, 10), float64]) -> (Tensor[(13, 7, 14), float64], uint64, Tensor[(24, 10), float64]) {
  @func_8920(%var_8921) /* ty=(Tensor[(13, 7, 14), float64], uint64, Tensor[(24, 10), float64]) */
}

def @func_5738(%var_5736: float64, %var_5737: Tensor[(9, 8, 9), float64]) -> Tensor[(9, 8, 9), float64] {
  %385 = fn (%var_5730: float64, %var_5731: Tensor[(9, 8, 9), float64]) -> Tensor[(9, 8, 9), float64] {
    %383 = cast(%var_5730, dtype="float64") /* ty=float64 */;
    %384 = cast(%var_5731, dtype="float64") /* ty=Tensor[(9, 8, 9), float64] */;
    mod(%383, %384) /* ty=Tensor[(9, 8, 9), float64] */
  };
  %385(%var_5736, %var_5737) /* ty=Tensor[(9, 8, 9), float64] */
}

def @func_5144() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_11997() -> (Tensor[(8, 12, 3), float64],) {
  %386 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %387 = %386.0;
  (%387,)
}

def @func_6080(%var_6062: Tensor[(13, 7, 14), float64]) -> (Tensor[(13, 7, 14), int32],) {
  %388 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %389 = %388.1;
  %390 = cast(%var_6062, dtype="int32") /* ty=Tensor[(13, 7, 14), int32] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="int32") /* ty=Tensor[(13, 7, 14), int32] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %394 = logical_xor(%392, %393) /* ty=Tensor[(13, 7, 14), int32] */;
  (%394,)
}

def @func_9902(%var_9900: Tensor[(4, 4, 12), float32], %var_9901: Tensor[(4, 4, 12), float32]) -> (Tensor[(4, 4, 12), int16], Tensor[(4, 4, 12), float32], Tensor[(8, 12, 3), int32]) {
  @func_9898(%var_9900, %var_9901) /* ty=(Tensor[(4, 4, 12), int16], Tensor[(4, 4, 12), float32], Tensor[(8, 12, 3), int32]) */
}

def @func_12192(%var_12182: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(1344), float32], Tensor[(390), uint8]) {
  %395 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %396 = cast(%var_12182, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %397 = reshape(%396, newshape=[390]) /* ty=Tensor[(390), uint8] */;
  %398 = @func_5092(%397) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %399 = %395.0;
  %400 = @func_10238() /* ty=Tensor[(8, 12, 3), float32] */;
  %401 = %398.2;
  (%399, %400, %401, %var_12182)
}

def @func_4867(%var_4821: float32, %var_4841: Tensor[(1470), float64], %var_4842: Tensor[(32), uint32], %var_4850: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(1274), float64], Tensor[(15, 16, 11), float32], Tensor[(2640), int16], Tensor[(8, 4), uint32], Tensor[(1470), float64], Tensor[(32), uint32], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) {
  %402 = cast(%var_4821, dtype="float32") /* ty=float32 */;
  %403 = reshape(%402, newshape=[]) /* ty=float32 */;
  %404 = @func_1670(%403) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %405 = cast(meta[relay.Constant][26] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %406 = reshape(%405, newshape=[15, 16, 11]) /* ty=Tensor[(15, 16, 11), float32] */;
  %407 = @func_3149(%406) /* ty=(Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) */;
  %408 = cast(meta[relay.Constant][26] /* ty=Tensor[(2640), float32] */, dtype="int16") /* ty=Tensor[(2640), int16] */;
  %409 = cast(%var_4821, dtype="int16") /* ty=int16 */;
  %410 = cast(%var_4841, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %411 = cast(%var_4821, dtype="uint64") /* ty=uint64 */;
  %412 = cast(%var_4842, dtype="uint32") /* ty=Tensor[(32), uint32] */;
  %413 = reshape(%410, newshape=[14, 105]) /* ty=Tensor[(14, 105), float64] */;
  %414 = reshape(%411, newshape=[]) /* ty=uint64 */;
  %415 = reshape(%412, newshape=[8, 4]) /* ty=Tensor[(8, 4), uint32] */;
  %416 = @func_4036(%413, %414, %415) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(15, 7, 14), uint16], Tensor[(14, 105), float64], uint64, float32, Tensor[(8, 4), uint32]) */;
  %417 = cast(%var_4850, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %418 = reshape(%417, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %419 = @func_155(%418) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %420 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  %421 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  %422 = %404.2;
  %423 = %407.0;
  %424 = add(%408, %409) /* ty=Tensor[(2640), int16] */;
  %425 = %416.5;
  %426 = %419.0;
  (%420, %421, %422, %423, %424, %425, %var_4841, %var_4842, %426, %var_4850)
}

def @func_4378() -> Tensor[(13, 7, 14), float64] {
  %428 = fn () -> Tensor[(13, 7, 14), float64] {
    %427 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %427.1
  };
  %428() /* ty=Tensor[(13, 7, 14), float64] */
}

def @func_1897() -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
  %435 = fn () -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
    %429 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %430 = cast(meta[relay.Constant][27] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %431 = reshape(%430, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
    %432 = @func_500(%431) /* ty=(Tensor[(13, 7, 14), float64],) */;
    %433 = %429.0;
    %434 = %432.0;
    (%433, %434, meta[relay.Constant][27] /* ty=Tensor[(1274), float64] */)
  };
  %435() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */
}

def @func_7385() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), int32]) {
  @func_7383() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), int32]) */
}

def @func_10683() -> (Tensor[(13, 7, 14), float32], Tensor[(1, 2, 9), float64], Tensor[(18), float64], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64]) {
  %444 = fn () -> (Tensor[(13, 7, 14), float32], Tensor[(1, 2, 9), float64], Tensor[(18), float64], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64]) {
    %436 = @func_3265() /* ty=(Tensor[(13, 7, 14), float32],) */;
    %437 = cast(meta[relay.Constant][28] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
    %438 = reshape(%437, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), float64] */;
    %439 = cast(meta[relay.Constant][29] /* ty=Tensor[(156), uint64] */, dtype="uint64") /* ty=Tensor[(156), uint64] */;
    %440 = reshape(%439, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), uint64] */;
    %441 = %436.0;
    %442 = @func_5282(%438) /* ty=Tensor[(1, 2, 9), float64] */;
    %443 = @func_7478(%440) /* ty=Tensor[(13, 3, 4), uint64] */;
    (%441, %442, meta[relay.Constant][28] /* ty=Tensor[(18), float64] */, %443, meta[relay.Constant][29] /* ty=Tensor[(156), uint64] */)
  };
  %444() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(1, 2, 9), float64], Tensor[(18), float64], Tensor[(13, 3, 4), uint64], Tensor[(156), uint64]) */
}

def @func_8353(%var_8352: Tensor[(390, 1), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(390, 1), uint8], Tensor[(1344, 1), float32], Tensor[(390, 1), uint8], Tensor[(1274), float64]) {
  %457 = fn (%var_8344: Tensor[(390, 1), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(390, 1), uint8], Tensor[(1344, 1), float32], Tensor[(390, 1), uint8], Tensor[(1274), float64]) {
    %445 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %446 = cast(meta[relay.Constant][30] /* ty=Tensor[(1344, 1), float32] */, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
    %447 = cast(meta[relay.Constant][30] /* ty=Tensor[(1344, 1), float32] */, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
    %448 = cast(%var_8344, dtype="uint8") /* ty=Tensor[(390, 1), uint8] */;
    %449 = cast(meta[relay.Constant][31] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %450 = reshape(%446, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
    %451 = reshape(%447, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
    %452 = reshape(%448, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
    %453 = reshape(%449, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
    %454 = @func_771(%450, %451, %452, %453) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %455 = %445.0;
    %456 = %454.4;
    (%455, %456, meta[relay.Constant][30] /* ty=Tensor[(1344, 1), float32] */, %var_8344, meta[relay.Constant][31] /* ty=Tensor[(1274), float64] */)
  };
  %457(%var_8352) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(390, 1), uint8], Tensor[(1344, 1), float32], Tensor[(390, 1), uint8], Tensor[(1274), float64]) */
}

def @func_5251(%var_5249: Tensor[(10, 15, 1), uint64], %var_5250: Tensor[(10, 15, 1), uint64]) -> Tensor[(10, 15, ?), bool] {
  %462 = fn (%var_5236: Tensor[(10, 15, 1), uint64], %var_5237: Tensor[(10, 15, 1), uint64]) -> Tensor[(10, 15, ?), bool] {
    %458 = cast(%var_5237, dtype="bool") /* ty=Tensor[(10, 15, 1), bool] */;
    %459 = shape_of(%var_5236, dtype="int32") /* ty=Tensor[(3), int32] */;
    %460 = cast(%var_5236, dtype="bool") /* ty=Tensor[(10, 15, 1), bool] */;
    %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%460, %461) /* ty=Tensor[(10, 15, ?), bool] */
  };
  %462(%var_5249, %var_5250) /* ty=Tensor[(10, 15, ?), bool] */
}

def @func_8276(%var_8274: uint64, %var_8275: Tensor[(528), int8]) -> (Tensor[(8, 12, 3), float64], Tensor[(390, ?), int8], uint64, Tensor[(528), int8], Tensor[(2, 108), float32]) {
  %475 = fn (%var_8250: uint64, %var_8252: Tensor[(528), int8]) -> (Tensor[(8, 12, 3), float64], Tensor[(390, ?), int8], uint64, Tensor[(528), int8], Tensor[(2, 108), float32]) {
    %463 = @func_3575() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) */;
    %464 = cast(%var_8250, dtype="uint64") /* ty=uint64 */;
    %465 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 108), uint64] */, dtype="uint64") /* ty=Tensor[(2, 108), uint64] */;
    %466 = cast(%var_8252, dtype="int8") /* ty=Tensor[(528), int8] */;
    %467 = reshape(%464, newshape=[]) /* ty=uint64 */;
    %468 = reshape(%465, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
    %469 = reshape(%466, newshape=[528]) /* ty=Tensor[(528), int8] */;
    %470 = @func_1045(%467, %468, %469) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
    %471 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 108), uint64] */, dtype="float32") /* ty=Tensor[(2, 108), float32] */;
    %472 = %463.1;
    %473 = %470.2;
    %474 = sin(%471) /* ty=Tensor[(2, 108), float32] */;
    (%472, %473, %var_8250, %var_8252, %474)
  };
  %475(%var_8274, %var_8275) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(390, ?), int8], uint64, Tensor[(528), int8], Tensor[(2, 108), float32]) */
}

def @func_9060() -> Tensor[(8, 12, 3), int32] {
  %476 = fn () -> Tensor[(8, 12, 3), int32] {
    @func_2428() /* ty=Tensor[(8, 12, 3), int32] */
  };
  %476() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_12122() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float64]) {
  %477 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %478 = @func_10714() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %479 = %477.0;
  %480 = @func_10987() /* ty=Tensor[(8, 12, 3), bool] */;
  %481 = %478.0;
  (%479, %480, %481)
}

def @func_11829() -> Tensor[(8, 12, 3), float64] {
  @func_11827() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_11565(%var_11513: Tensor[(150), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(150), uint64], Tensor[(10, 15, ?), float32]) {
  %482 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
  %483 = cast(%var_11513, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %484 = cast(%var_11513, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %485 = reshape(%483, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %486 = reshape(%484, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %487 = @func_5248(%485, %486) /* ty=Tensor[(10, 15, ?), bool] */;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(10, 15, ?), float32] */;
  %489 = %482.1;
  %490 = cos(%488) /* ty=Tensor[(10, 15, ?), float32] */;
  (%489, %var_11513, %490)
}

def @func_1049(%var_1046: uint64, %var_1047: Tensor[(12, 6, 3), uint64], %var_1048: Tensor[(528), int8]) -> (Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) {
  %511 = fn (%var_1001: uint64, %var_1002: Tensor[(12, 6, 3), uint64], %var_1007: Tensor[(528), int8]) -> (Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) {
    %491 = cast(%var_1001, dtype="bool") /* ty=bool */;
    %492 = cast(%var_1002, dtype="bool") /* ty=Tensor[(12, 6, 3), bool] */;
    %493 = cast(%var_1007, dtype="int8") /* ty=Tensor[(528), int8] */;
    %494 = cast(meta[relay.Constant][33] /* ty=Tensor[(390, 1), uint8] */, dtype="uint8") /* ty=Tensor[(390, 1), uint8] */;
    %495 = reshape(%493, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
    %496 = reshape(%494, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
    %497 = @func_340(%495, %496) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
    %498 = %497.2;
    %499 = cast(%498, dtype="int8") /* ty=Tensor[(195, 2), int8] */;
    %500 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(390, 1), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %501 = cast(meta[relay.Constant][33] /* ty=Tensor[(390, 1), uint8] */, dtype="int8") /* ty=Tensor[(390, 1), int8] */;
    %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %503 = cast(%var_1001, dtype="uint16") /* ty=uint16 */;
    %504 = cast(meta[relay.Constant][33] /* ty=Tensor[(390, 1), uint8] */, dtype="uint16") /* ty=Tensor[(390, 1), uint16] */;
    %505 = cast(%var_1002, dtype="uint32") /* ty=Tensor[(12, 6, 3), uint32] */;
    %506 = cast(%var_1001, dtype="uint32") /* ty=uint32 */;
    %507 = greater(%491, %492) /* ty=Tensor[(12, 6, 3), bool] */;
    %508 = bitwise_xor(%501, %502) /* ty=Tensor[(390, ?), int8] */;
    %509 = minimum(%503, %504) /* ty=Tensor[(390, 1), uint16] */;
    %510 = add(%505, %506) /* ty=Tensor[(12, 6, 3), uint32] */;
    (%507, %var_1007, %508, %509, %510)
  };
  %511(%var_1046, %var_1047, %var_1048) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */
}

def @func_5852() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  @func_5850() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */
}

def @func_7400() -> (Tensor[(6, 13, 5), float32],) {
  %514 = fn () -> (Tensor[(6, 13, 5), float32],) {
    %512 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 13, 5), float32] */;
    %513 = atan(%512) /* ty=Tensor[(6, 13, 5), float32] */;
    (%513,)
  };
  %514() /* ty=(Tensor[(6, 13, 5), float32],) */
}

def @func_2800(%var_2799: Tensor[(15, 7, 14), float32]) -> (Tensor[(8, 12, 3), bool], uint64, Tensor[(15, 7, 14), float64], Tensor[(1274), float64]) {
  %530 = fn (%var_2782: Tensor[(15, 7, 14), float32]) -> (Tensor[(8, 12, 3), bool], uint64, Tensor[(15, 7, 14), float64], Tensor[(1274), float64]) {
    %515 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %516 = cast(meta[relay.Constant][35] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %517 = reshape(%516, newshape=[]) /* ty=uint64 */;
    %518 = @func_2152(%517) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */;
    %519 = %518.2;
    %520 = cast(%var_2782, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
    %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
    %522 = cast(%519, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
    %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %524 = cast(meta[relay.Constant][35] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %525 = reshape(%524, newshape=[]) /* ty=uint64 */;
    %526 = @func_2152(%525) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */;
    %527 = %515.0;
    %528 = mod(%522, %523) /* ty=Tensor[(15, 7, 14), float64] */;
    %529 = %526.0;
    (%527, meta[relay.Constant][35] /* ty=uint64 */, %528, %529)
  };
  %530(%var_2799) /* ty=(Tensor[(8, 12, 3), bool], uint64, Tensor[(15, 7, 14), float64], Tensor[(1274), float64]) */
}

def @func_12266() -> (Tensor[(390), uint8], Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) {
  @func_12264() /* ty=(Tensor[(390), uint8], Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */
}

def @func_4873(%var_4869: float32, %var_4870: Tensor[(1470), float64], %var_4871: Tensor[(32), uint32], %var_4872: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(1274), float64], Tensor[(15, 16, 11), float32], Tensor[(2640), int16], Tensor[(8, 4), uint32], Tensor[(1470), float64], Tensor[(32), uint32], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) {
  @func_4867(%var_4869, %var_4870, %var_4871, %var_4872) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(1274), float64], Tensor[(15, 16, 11), float32], Tensor[(2640), int16], Tensor[(8, 4), uint32], Tensor[(1470), float64], Tensor[(32), uint32], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) */
}

def @func_6502() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  %531 = @func_5483() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) */;
  %532 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %533 = %531.0;
  %534 = %532.0;
  (%533, %534)
}

def @func_7434() -> (Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) {
  %543 = fn () -> (Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) {
    %535 = cast(4.10967f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %536 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 15, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 1), float64] */;
    %537 = @func_5507() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %538 = %537.0;
    %539 = cast(%538, dtype="int8") /* ty=Tensor[(8, 12, 3), int8] */;
    %540 = cast(4.10967f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
    %541 = add(%535, %536) /* ty=Tensor[(6, 15, 1), float64] */;
    %542 = left_shift(%539, %540) /* ty=Tensor[(8, 12, 3), int8] */;
    (%541, %542)
  };
  %543() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) */
}

def @func_10191() -> Tensor[(8, 12, 3), float64] {
  %544 = @func_10124() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
  %544.0
}

def @func_11088(%var_11085: Tensor[(10, 13, 3), bool], %var_11086: Tensor[(10, 13, 3), bool], %var_11087: Tensor[(60), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(60), uint8], Tensor[(10, 13, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1078), int16], Tensor[(1470), float64], Tensor[(1274), float64]) {
  @func_11083(%var_11085, %var_11086, %var_11087) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(60), uint8], Tensor[(10, 13, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1078), int16], Tensor[(1470), float64], Tensor[(1274), float64]) */
}

def @func_11200(%var_11199: Tensor[(396), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64]) {
  %552 = fn (%var_11195: Tensor[(396), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64]) {
    %545 = @func_6853() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %546 = @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */;
    %547 = cast(%var_11195, dtype="float64") /* ty=Tensor[(396), float64] */;
    %548 = reshape(%547, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
    %549 = %545.0;
    %550 = %546.0;
    %551 = @func_585(%548) /* ty=Tensor[(11, 9, 4), float64] */;
    (%549, %550, %551, %var_11195)
  };
  %552(%var_11199) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64]) */
}

def @func_13091() -> (Tensor[(8, 12, 3), float64],) {
  %554 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %553 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
    (%553,)
  };
  %554() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_12870(%var_12868: Tensor[(756), float32]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(14, 6, 9), float32], Tensor[(756), bool]) {
  @func_12867(%var_12868) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(14, 6, 9), float32], Tensor[(756), bool]) */
}

def @func_9898(%var_9854: Tensor[(4, 4, 12), float32], %var_9855: Tensor[(4, 4, 12), float32]) -> (Tensor[(4, 4, 12), int16], Tensor[(4, 4, 12), float32], Tensor[(8, 12, 3), int32]) {
  %555 = cast(%var_9855, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %556 = shape_of(%var_9854, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_9854, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %559 = divide(%557, %558) /* ty=Tensor[(4, 4, 12), float32] */;
  %560 = cast(%var_9855, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%559, dtype="int16") /* ty=Tensor[(4, 4, 12), int16] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %564 = cast(%var_9854, dtype="float64") /* ty=Tensor[(4, 4, 12), float64] */;
  %565 = asinh(%564) /* ty=Tensor[(4, 4, 12), float64] */;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %567 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %568 = add(%562, %563) /* ty=Tensor[(4, 4, 12), int16] */;
  %569 = cosh(%566) /* ty=Tensor[(4, 4, 12), float32] */;
  %570 = %567.0;
  (%568, %569, %570)
}

def @func_6607() -> Tensor[(8, 12, 3), float64] {
  @func_6605() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_5710() -> (Tensor[(8, 12, 3), int32],) {
  %572 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %571 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
    (%571,)
  };
  %572() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_5484() -> (Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) {
  %584 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) {
    %573 = @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
    %574 = %573.1;
    %575 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 12, 3), bool] */, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
    %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(%574, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %579 = cast(meta[relay.Constant][38] /* ty=Tensor[(216), uint64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %580 = reshape(%579, newshape=[216]) /* ty=Tensor[(216), uint64] */;
    %581 = @func_3901(%580) /* ty=(Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(945), uint64], Tensor[(216), uint64], Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8]) */;
    %582 = minimum(%577, %578) /* ty=Tensor[(8, 12, 3), int32] */;
    %583 = %581.6;
    (%582, %583, meta[relay.Constant][38] /* ty=Tensor[(216), uint64] */)
  };
  %584() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) */
}

def @func_2080(%var_2077: Tensor[(2, 8, 2), uint32], %var_2078: Tensor[(2, 8, 2), uint32], %var_2079: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(4, 6, 16), bool], float32, Tensor[(1274), float64], Tensor[(1, 945), uint64]) {
  @func_2075(%var_2077, %var_2078, %var_2079) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 6, 16), bool], float32, Tensor[(1274), float64], Tensor[(1, 945), uint64]) */
}

def @func_5412() -> (Tensor[(8, 12, 3), float64],) {
  %585 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %586 = %585.0;
  (%586,)
}

def @func_5414() -> (Tensor[(8, 12, 3), float64],) {
  @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_7953() -> (Tensor[(8, 12, 3), bool],) {
  @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */
}

def @func_9717() -> (Tensor[(8, 12, 3), float64],) {
  %589 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %587 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %588 = %587.0;
    (%588,)
  };
  %589() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_4514() -> Tensor[(8, 12, 3), bool] {
  %590 = @func_4068() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %590.0
}

def @func_9696() -> (Tensor[(8, 12, 3), bool],) {
  %591 = @func_9467() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %592 = %591.0;
  (%592,)
}

def @func_12046() -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), int32]) {
  @func_12044() /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), int32]) */
}

def @func_9078() -> (Tensor[(12, 5, 11), float32],) {
  @func_9076() /* ty=(Tensor[(12, 5, 11), float32],) */
}

def @func_11680(%var_11678: Tensor[(945), uint64], %var_11679: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(945), uint64], Tensor[(216), uint64]) {
  %603 = fn (%var_11649: Tensor[(945), uint64], %var_11650: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(945), uint64], Tensor[(216), uint64]) {
    %593 = @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %594 = @func_7344() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %595 = cast(%var_11649, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %596 = cast(%var_11650, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %597 = reshape(%595, newshape=[945]) /* ty=Tensor[(945), uint64] */;
    %598 = reshape(%596, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint64] */;
    %599 = @func_4939(%597, %598) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(108, 2), uint64], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(945), float32], Tensor[(945), bool]) */;
    %600 = %593.0;
    %601 = %594.0;
    %602 = %599.2;
    (%600, %601, %602, %var_11649, %var_11650)
  };
  %603(%var_11678, %var_11679) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32], Tensor[(11, 9, 4), float64], Tensor[(945), uint64], Tensor[(216), uint64]) */
}

def @func_11953() -> (Tensor[(6, 13, 5), float32],) {
  %606 = fn () -> (Tensor[(6, 13, 5), float32],) {
    %604 = @func_7399() /* ty=(Tensor[(6, 13, 5), float32],) */;
    %605 = %604.0;
    (%605,)
  };
  %606() /* ty=(Tensor[(6, 13, 5), float32],) */
}

def @func_12044() -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), int32]) {
  %607 = @func_10714() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %608 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
  %609 = %607.0;
  %610 = %608.0;
  (%609, %610)
}

def @func_2506() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_10170() -> (Tensor[(390), uint8],) {
  %613 = fn () -> (Tensor[(390), uint8],) {
    %611 = @func_5483() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(390), uint8], Tensor[(216), uint64]) */;
    %612 = %611.1;
    (%612,)
  };
  %613() /* ty=(Tensor[(390), uint8],) */
}

def @func_4772(%var_4771: Tensor[(2, 7, 12), uint64]) -> (Tensor[(2, 7, 12), uint64],) {
  %619 = fn (%var_4764: Tensor[(2, 7, 12), uint64]) -> (Tensor[(2, 7, 12), uint64],) {
    %614 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 7, 12), uint64] */, dtype="uint64") /* ty=Tensor[(2, 7, 12), uint64] */;
    %615 = shape_of(%var_4764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %616 = cast(%var_4764, dtype="uint64") /* ty=Tensor[(2, 7, 12), uint64] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %618 = multiply(%616, %617) /* ty=Tensor[(2, 7, 12), uint64] */;
    (%618,)
  };
  %619(%var_4771) /* ty=(Tensor[(2, 7, 12), uint64],) */
}

def @func_8202() -> Tensor[(8, 12, 3), int32] {
  %620 = fn () -> Tensor[(8, 12, 3), int32] {
    @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
  };
  %620() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_11003() -> Tensor[(8, 12, 3), float64] {
  @func_11001() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_3515() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  %621 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %622 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %623 = %621.0;
  %624 = %622.0;
  (%623, %624)
}

def @func_3716(%var_3708: Tensor[(13, 12, 8), float32], %var_3709: Tensor[(13, 12, 8), float32], %var_3710: Tensor[(1274), float64], %var_3711: Tensor[(528), int8], %var_3712: Tensor[(390), uint8], %var_3713: Tensor[(396), float64], %var_3714: Tensor[(156), bool], %var_3715: Tensor[(468), bool]) -> (Tensor[(13, 12, 8), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(12, 3, 13), bool], Tensor[(156), bool], Tensor[(468), bool]) {
  @func_3706(%var_3708, %var_3709, %var_3710, %var_3711, %var_3712, %var_3713, %var_3714, %var_3715) /* ty=(Tensor[(13, 12, 8), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(12, 3, 13), bool], Tensor[(156), bool], Tensor[(468), bool]) */
}

def @func_13708() -> (Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) {
  %629 = fn () -> (Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) {
    %625 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
    %626 = @func_11806() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) */;
    %627 = %625.1;
    %628 = %626.1;
    (%627, %628)
  };
  %629() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) */
}

def @func_9178() -> (Tensor[(8, 12, 3), int32],) {
  %631 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %630 = @func_9059() /* ty=Tensor[(8, 12, 3), int32] */;
    (%630,)
  };
  %631() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_5295() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32]) {
  %637 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32]) {
    %632 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %633 = %632.0;
    %634 = cast(%633, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
    %635 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
    %636 = asinh(%634) /* ty=Tensor[(8, 12, 3), float32] */;
    (%635, %636)
  };
  %637() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32]) */
}

def @func_5095(%var_5093: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  @func_5092(%var_5093) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */
}

def @func_2375() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) {
  @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */
}

def @func_3149(%var_3085: Tensor[(15, 16, 11), float32]) -> (Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) {
  %638 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 1), float32] */;
  %639 = cast(%var_3085, dtype="float32") /* ty=Tensor[(15, 16, 11), float32] */;
  %640 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %641 = %640.1;
  %642 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 7, 14), float64] */, dtype="bool") /* ty=Tensor[(13, 7, 14), bool] */;
  %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%641, dtype="bool") /* ty=Tensor[(13, 7, 14), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = floor_divide(%638, %639) /* ty=Tensor[(15, 16, 11), float32] */;
  %647 = less_equal(%644, %645) /* ty=Tensor[(13, 7, 14), bool] */;
  (%646, %647)
}

def @func_4497() -> (Tensor[(8, 12, 3), int32],) {
  %649 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %648 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
    (%648,)
  };
  %649() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_3416() -> (Tensor[(8, 12, 3), float64],) {
  %650 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %651 = %650.0;
  (%651,)
}

def @func_3931(%var_3915: Tensor[(390), uint8], %var_3925: Tensor[(396), float64]) -> (Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8], Tensor[(2640), float32], Tensor[(2640), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64], uint64, Tensor[(1470), float32]) {
  %652 = cast(%var_3915, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %653 = reshape(%652, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), uint8] */;
  %654 = @func_155(%653) /* ty=(Tensor[(15, 13, 2), float32],) */;
  %655 = cast(meta[relay.Constant][42] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %656 = reshape(%655, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %657 = @func_3219(%656) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */;
  %658 = cast(%var_3925, dtype="float64") /* ty=Tensor[(396), float64] */;
  %659 = reshape(%658, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %660 = cast(meta[relay.Constant][43] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %661 = reshape(%660, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float32] */;
  %662 = @func_2798(%661) /* ty=(Tensor[(8, 12, 3), bool], uint64, Tensor[(15, 7, 14), float64], Tensor[(1274), float64]) */;
  %663 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  %664 = %654.0;
  %665 = %657.2;
  %666 = @func_585(%659) /* ty=Tensor[(11, 9, 4), float64] */;
  %667 = %662.1;
  (%663, %664, %var_3915, %665, meta[relay.Constant][42] /* ty=Tensor[(2640), float32] */, %666, %var_3925, %667, meta[relay.Constant][43] /* ty=Tensor[(1470), float32] */)
}

def @func_6124() -> (Tensor[(8, 12, 3), int32],) {
  @func_6122() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_9315() -> (Tensor[(8, 12, 3), float64],) {
  %668 = @func_4747() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %669 = %668.0;
  (%669,)
}

def @func_4483() -> (Tensor[(8, 12, 3), float64],) {
  %672 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %670 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
    %671 = %670.0;
    (%671,)
  };
  %672() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_8631() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  %675 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
    %673 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
    %674 = @func_8201() /* ty=Tensor[(8, 12, 3), int32] */;
    (%673, %674)
  };
  %675() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */
}

def @func_5284(%var_5283: Tensor[(1, 2, 9), float64]) -> Tensor[(1, 2, 9), float64] {
  %677 = fn (%var_5276: Tensor[(1, 2, 9), float64]) -> Tensor[(1, 2, 9), float64] {
    %676 = cast(%var_5276, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
    sinh(%676) /* ty=Tensor[(1, 2, 9), float64] */
  };
  %677(%var_5283) /* ty=Tensor[(1, 2, 9), float64] */
}

def @func_7158() -> (Tensor[(8, 12, 3), float32], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(24, 8), float64]) {
  %686 = fn () -> (Tensor[(8, 12, 3), float32], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(24, 8), float64]) {
    %678 = @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */;
    %679 = cast(meta[relay.Constant][44] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %680 = cast(meta[relay.Constant][45] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
    %681 = reshape(%679, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
    %682 = reshape(%680, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), float64] */;
    %683 = @func_4269(%681, %682) /* ty=(Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) */;
    %684 = %678.0;
    %685 = %683.1;
    (%684, %685, meta[relay.Constant][44] /* ty=Tensor[(48), float32] */, meta[relay.Constant][45] /* ty=Tensor[(24, 8), float64] */)
  };
  %686() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(24, 8), float64]) */
}

def @func_8521(%var_8519: Tensor[(132, 20), float32]) -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(132, 20), float32]) {
  @func_8518(%var_8519) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32], Tensor[(8, 12, 3), float64], Tensor[(132, 20), float32]) */
}

def @func_9076() -> (Tensor[(12, 5, 11), float32],) {
  %687 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 11), float32] */;
  %688 = sqrt(%687) /* ty=Tensor[(12, 5, 11), float32] */;
  (%688,)
}

def @func_9267(%var_9265: Tensor[(48), float32]) -> (Tensor[(4, 8, 6), bool], Tensor[(48), float32], Tensor[(24, 8), bool], Tensor[(24, 8), float64]) {
  @func_9264(%var_9265) /* ty=(Tensor[(4, 8, 6), bool], Tensor[(48), float32], Tensor[(24, 8), bool], Tensor[(24, 8), float64]) */
}

def @func_11999() -> (Tensor[(8, 12, 3), float64],) {
  @func_11997() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_12295() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %689 = @func_9716() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %690 = %689.0;
  %691 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  (%690, %691)
}

def @func_4516() -> Tensor[(8, 12, 3), bool] {
  @func_4514() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_12645() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(390), uint8], Tensor[(8, 12, 3), bool], float32, Tensor[(8, 12, 3), float64]) {
  %692 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %693 = @func_8201() /* ty=Tensor[(8, 12, 3), int32] */;
  %694 = cast(%693, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %695 = reshape(%694, newshape=[8, 12, 3]) /* ty=Tensor[(8, 12, 3), float64] */;
  %696 = cast(meta[relay.Constant][47] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %697 = reshape(%696, newshape=[390]) /* ty=Tensor[(390), uint8] */;
  %698 = @func_5092(%697) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %699 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %700 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %701 = %692.0;
  %702 = @func_2104(%695) /* ty=Tensor[(8, 12, 3), int32] */;
  %703 = %698.1;
  %704 = @func_9791() /* ty=Tensor[(8, 12, 3), bool] */;
  %705 = %699.2;
  %706 = %700.0;
  (%701, %693, %702, %703, meta[relay.Constant][47] /* ty=Tensor[(390), uint8] */, %704, %705, %706)
}

def @func_11808() -> (Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) {
  @func_11806() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) */
}

def @func_9429() -> (Tensor[(8, 12, 3), int32],) {
  %708 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %707 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
    (%707,)
  };
  %708() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_3254() -> Tensor[(8, 12, 3), float64] {
  %709 = fn () -> Tensor[(8, 12, 3), float64] {
    @func_1850() /* ty=Tensor[(8, 12, 3), float64] */
  };
  %709() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_12515() -> Tensor[(8, 12, 3), int32] {
  %710 = fn () -> Tensor[(8, 12, 3), int32] {
    @func_8892() /* ty=Tensor[(8, 12, 3), int32] */
  };
  %710() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_6786() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
  %715 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) {
    %711 = @func_4496() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %712 = @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %713 = %711.0;
    %714 = %712.0;
    (%713, %714)
  };
  %715() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */
}

def @func_13180() -> (Tensor[(8, 12, 3), float64],) {
  %718 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %716 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %717 = %716.0;
    (%717,)
  };
  %718() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_12124() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float64]) {
  @func_12122() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(13, 7, 14), float64]) */
}

def @func_10017() -> (Tensor[(16, 12, 2), int64], Tensor[(8, 12, 3), int32]) {
  @func_10015() /* ty=(Tensor[(16, 12, 2), int64], Tensor[(8, 12, 3), int32]) */
}

def @func_3222(%var_3220: Tensor[(2640), float32]) -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) {
  @func_3219(%var_3220) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) */
}

def @func_4594(%var_4593: Tensor[(4, 60), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) {
  %733 = fn (%var_4587: Tensor[(4, 60), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) {
    %719 = cast(meta[relay.Constant][48] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %720 = reshape(%719, newshape=[]) /* ty=uint64 */;
    %721 = @func_2152(%720) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */;
    %722 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %723 = reshape(%722, newshape=[4, 6, 10]) /* ty=Tensor[(4, 6, 10), float64] */;
    %724 = @func_1628(%723) /* ty=(Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) */;
    %725 = cast(%var_4587, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %726 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(4, 60), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %727 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %729 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
    %730 = %721.0;
    %731 = %724.0;
    %732 = mod(%727, %728) /* ty=Tensor[(4, 60), float64] */;
    (%729, %730, meta[relay.Constant][48] /* ty=uint64 */, %731, %732)
  };
  %733(%var_4593) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) */
}

def @func_3477(%var_3474: Tensor[(14, 7, 11), int16], %var_3475: Tensor[(1470), float64], %var_3476: Tensor[(1274), float64]) -> (Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  %757 = fn (%var_3448: Tensor[(14, 7, 11), int16], %var_3454: Tensor[(1470), float64], %var_3470: Tensor[(1274), float64]) -> (Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
    %734 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 7, 11), int16] */, dtype="int16") /* ty=Tensor[(14, 7, 11), int16] */;
    %735 = shape_of(%var_3448, dtype="int32") /* ty=Tensor[(3), int32] */;
    %736 = cast(%var_3448, dtype="int16") /* ty=Tensor[(14, 7, 11), int16] */;
    %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %738 = cast(%var_3454, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %739 = cast(meta[relay.Constant][51] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %740 = reshape(%738, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float64] */;
    %741 = reshape(%739, newshape=[]) /* ty=uint64 */;
    %742 = @func_1461(%740, %741) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */;
    %743 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %744 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 1344), float32] */, dtype="float32") /* ty=Tensor[(1, 1344), float32] */;
    %745 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 1344), float32] */, dtype="float32") /* ty=Tensor[(1, 1344), float32] */;
    %746 = cast(meta[relay.Constant][53] /* ty=Tensor[(390), uint8] */, dtype="uint8") /* ty=Tensor[(390), uint8] */;
    %747 = cast(%var_3470, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %748 = reshape(%744, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
    %749 = reshape(%745, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
    %750 = reshape(%746, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
    %751 = reshape(%747, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
    %752 = @func_771(%748, %749, %750, %751) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %753 = maximum(%736, %737) /* ty=Tensor[(14, 7, 11), int16] */;
    %754 = %742.2;
    %755 = %743.2;
    %756 = %752.0;
    (%753, %754, %var_3454, meta[relay.Constant][51] /* ty=uint64 */, %755, %756, meta[relay.Constant][52] /* ty=Tensor[(1, 1344), float32] */, meta[relay.Constant][53] /* ty=Tensor[(390), uint8] */, %var_3470)
  };
  %757(%var_3474, %var_3475, %var_3476) /* ty=(Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */
}

def @func_9792() -> Tensor[(8, 12, 3), bool] {
  %759 = fn () -> Tensor[(8, 12, 3), bool] {
    %758 = @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */;
    %758.1
  };
  %759() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_10539(%var_10538: Tensor[(9, 10, 10), float64]) -> Tensor[(9, 10, 10), float32] {
  %763 = fn (%var_10506: Tensor[(9, 10, 10), float64]) -> Tensor[(9, 10, 10), float32] {
    %760 = cast(%var_10506, dtype="float64") /* ty=Tensor[(9, 10, 10), float64] */;
    %761 = acos(%760) /* ty=Tensor[(9, 10, 10), float64] */;
    %762 = cast(%761, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
    tan(%762) /* ty=Tensor[(9, 10, 10), float32] */
  };
  %763(%var_10538) /* ty=Tensor[(9, 10, 10), float32] */
}

def @func_1672(%var_1671: float32) -> (Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
  %771 = fn (%var_1641: float32) -> (Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
    %764 = cast(%var_1641, dtype="bool") /* ty=bool */;
    %765 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 6, 16), float32] */, dtype="bool") /* ty=Tensor[(4, 6, 16), bool] */;
    %766 = cast(meta[relay.Constant][55] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %767 = reshape(%766, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
    %768 = @func_500(%767) /* ty=(Tensor[(13, 7, 14), float64],) */;
    %769 = greater_equal(%764, %765) /* ty=Tensor[(4, 6, 16), bool] */;
    %770 = %768.0;
    (%769, %770, meta[relay.Constant][55] /* ty=Tensor[(1274), float64] */)
  };
  %771(%var_1671) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */
}

def @func_6605() -> Tensor[(8, 12, 3), float64] {
  @func_4459() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_3577() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) {
  @func_3575() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) */
}

def @func_6236(%var_6222: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8]) {
  %772 = cast(meta[relay.Constant][56] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %773 = cast(%var_6222, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %774 = reshape(%772, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %775 = reshape(%773, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %776 = @func_340(%774, %775) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %777 = @func_5610() /* ty=Tensor[(8, 12, 3), int32] */;
  %778 = %776.1;
  (%777, %778, meta[relay.Constant][56] /* ty=Tensor[(528), int8] */, %var_6222)
}

def @func_12531() -> (Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float32], Tensor[(150), uint64]) {
  %779 = @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %780 = cast(meta[relay.Constant][57] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %781 = reshape(%780, newshape=[150]) /* ty=Tensor[(150), uint64] */;
  %782 = @func_11565(%781) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(150), uint64], Tensor[(10, 15, ?), float32]) */;
  %783 = %779.0;
  %784 = %782.2;
  (%783, %784, meta[relay.Constant][57] /* ty=Tensor[(150), uint64] */)
}

def @func_2373() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) {
  %785 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  %786 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %789 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(%785, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %792 = cast(%787, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %793 = sigmoid(%792) /* ty=Tensor[(8, 12, 3), float32] */;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(8, 12, 3), float64] */;
  %795 = reshape(%794, newshape=[8, 12, 3]) /* ty=Tensor[(8, 12, 3), float64] */;
  %796 = not_equal(%790, %791) /* ty=Tensor[(8, 12, 3), bool] */;
  %797 = @func_2104(%795) /* ty=Tensor[(8, 12, 3), int32] */;
  (%796, %793, %797)
}

def @func_13668() -> Tensor[(8, 12, 3), int32] {
  %798 = @func_10370() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32]) */;
  %798.1
}

def @func_13670() -> Tensor[(8, 12, 3), int32] {
  @func_13668() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_2106(%var_2105: Tensor[(8, 12, 3), float64]) -> Tensor[(8, 12, 3), int32] {
  %804 = fn (%var_2096: Tensor[(8, 12, 3), float64]) -> Tensor[(8, 12, 3), int32] {
    %799 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
    %800 = cast(%var_2096, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
    %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
    %802 = cast(%799, dtype="int32") /* ty=Tensor[(8, 12, 3), int32] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_xor(%802, %803) /* ty=Tensor[(8, 12, 3), int32] */
  };
  %804(%var_2105) /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_10193() -> Tensor[(8, 12, 3), float64] {
  @func_10191() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_10755() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(156), bool]) {
  @func_10753() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(156), bool]) */
}

def @func_8991(%var_8990: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(1344), float32], Tensor[(390), uint8]) {
  %811 = fn (%var_8979: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(1344), float32], Tensor[(390), uint8]) {
    %805 = @func_6122() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %806 = cast(%var_8979, dtype="uint8") /* ty=Tensor[(390), uint8] */;
    %807 = reshape(%806, newshape=[390]) /* ty=Tensor[(390), uint8] */;
    %808 = @func_5092(%807) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
    %809 = %805.0;
    %810 = %808.2;
    (%809, %810, %var_8979)
  };
  %811(%var_8990) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1344), float32], Tensor[(390), uint8]) */
}

def @func_2520() -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) {
  @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */
}

def @func_7383() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), int32]) {
  %812 = @func_4068() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %813 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %814 = %812.0;
  %815 = %813.0;
  (%814, %815)
}

def @func_7799() -> (Tensor[(8, 12, 3), float64],) {
  %818 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %816 = @func_6542() /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) */;
    %817 = %816.1;
    (%817,)
  };
  %818() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_8733() -> Tensor[(8, 12, 3), int32] {
  @func_8731() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_9035() -> Tensor[(8, 12, 3), bool] {
  %820 = fn () -> Tensor[(8, 12, 3), bool] {
    %819 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %819.0
  };
  %820() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_7295() -> Tensor[(8, 12, 3), bool] {
  %822 = fn () -> Tensor[(8, 12, 3), bool] {
    %821 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
    %821.1
  };
  %822() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_9530(%var_9529: Tensor[(7, 182), float64]) -> (Tensor[(150), uint64], Tensor[(8, 12, 3), float64], Tensor[(1078), int16], Tensor[(539, 2), int16], Tensor[(13, 7, 14), int32], Tensor[(7, 182), float64]) {
  %835 = fn (%var_9525: Tensor[(7, 182), float64]) -> (Tensor[(150), uint64], Tensor[(8, 12, 3), float64], Tensor[(1078), int16], Tensor[(539, 2), int16], Tensor[(13, 7, 14), int32], Tensor[(7, 182), float64]) {
    %823 = @func_6424() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */;
    %824 = @func_4670() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %825 = cast(meta[relay.Constant][58] /* ty=Tensor[(539, 2), int16] */, dtype="int16") /* ty=Tensor[(539, 2), int16] */;
    %826 = reshape(%825, newshape=[1078]) /* ty=Tensor[(1078), int16] */;
    %827 = @func_6527(%826) /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32], Tensor[(1078), int16]) */;
    %828 = cast(%var_9525, dtype="float64") /* ty=Tensor[(7, 182), float64] */;
    %829 = reshape(%828, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
    %830 = @func_6080(%829) /* ty=(Tensor[(13, 7, 14), int32],) */;
    %831 = %823.2;
    %832 = %824.0;
    %833 = %827.2;
    %834 = %830.0;
    (%831, %832, %833, meta[relay.Constant][58] /* ty=Tensor[(539, 2), int16] */, %834, %var_9525)
  };
  %835(%var_9529) /* ty=(Tensor[(150), uint64], Tensor[(8, 12, 3), float64], Tensor[(1078), int16], Tensor[(539, 2), int16], Tensor[(13, 7, 14), int32], Tensor[(7, 182), float64]) */
}

def @func_5214() -> (Tensor[(8, 12, 3), int32],) {
  @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_3993(%var_3985: Tensor[(14, 6, 9), float32]) -> Tensor[(14, 6, 9), float32] {
  %836 = cast(%var_3985, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  erf(%836) /* ty=Tensor[(14, 6, 9), float32] */
}

def @func_10057() -> float32 {
  %838 = fn () -> float32 {
    %837 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
    %837.2
  };
  %838() /* ty=float32 */
}

def @func_12297() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  @func_12295() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_8560(%var_8535: Tensor[(10, 6, 1), uint8]) -> Tensor[(10, 6, 4), uint8] {
  %839 = cast(%var_8535, dtype="uint8") /* ty=Tensor[(10, 6, 1), uint8] */;
  %840 = cast(meta[relay.Constant][59] /* ty=Tensor[(10, 6, 4), uint8] */, dtype="uint8") /* ty=Tensor[(10, 6, 4), uint8] */;
  bitwise_and(%839, %840) /* ty=Tensor[(10, 6, 4), uint8] */
}

def @func_776(%var_772: Tensor[(14, 12, 8), float32], %var_773: Tensor[(14, 12, 8), float32], %var_774: Tensor[(390, 1), uint8], %var_775: Tensor[(1274), float64]) -> (Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
  %861 = fn (%var_749: Tensor[(14, 12, 8), float32], %var_750: Tensor[(14, 12, 8), float32], %var_763: Tensor[(390, 1), uint8], %var_768: Tensor[(1274), float64]) -> (Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) {
    %841 = cast(%var_750, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
    %842 = shape_of(%var_749, dtype="int32") /* ty=Tensor[(3), int32] */;
    %843 = cast(%var_749, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
    %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %845 = cast(%var_749, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
    %846 = shape_of(%var_750, dtype="int32") /* ty=Tensor[(3), int32] */;
    %847 = cast(%var_750, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %849 = cast(meta[relay.Constant][60] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %850 = cast(%var_763, dtype="uint8") /* ty=Tensor[(390, 1), uint8] */;
    %851 = reshape(%849, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
    %852 = reshape(%850, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
    %853 = @func_340(%851, %852) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
    %854 = cast(%var_768, dtype="float64") /* ty=Tensor[(1274), float64] */;
    %855 = reshape(%854, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
    %856 = @func_500(%855) /* ty=(Tensor[(13, 7, 14), float64],) */;
    %857 = multiply(%843, %844) /* ty=Tensor[(14, 12, 8), float32] */;
    %858 = less(%847, %848) /* ty=Tensor[(14, 12, 8), bool] */;
    %859 = %853.1;
    %860 = %856.0;
    (%857, %858, %859, meta[relay.Constant][60] /* ty=Tensor[(528), int8] */, %var_763, %860, %var_768)
  };
  %861(%var_772, %var_773, %var_774, %var_775) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */
}

def @func_11083(%var_11056: Tensor[(10, 13, 3), bool], %var_11057: Tensor[(10, 13, 3), bool], %var_11062: Tensor[(60), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(60), uint8], Tensor[(10, 13, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1078), int16], Tensor[(1470), float64], Tensor[(1274), float64]) {
  %862 = cast(%var_11062, dtype="uint8") /* ty=Tensor[(60), uint8] */;
  %863 = reshape(%862, newshape=[60]) /* ty=Tensor[(60), uint8] */;
  %864 = @func_10917(%863) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 6, 4), uint8], Tensor[(60), uint8], Tensor[(8, 12, 3), float64]) */;
  %865 = cast(%var_11057, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %866 = shape_of(%var_11056, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_11056, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = logical_or(%867, %868) /* ty=Tensor[(10, 13, 3), bool] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(10, 13, 3), float64] */;
  %871 = cast(meta[relay.Constant][61] /* ty=Tensor[(1078), int16] */, dtype="int16") /* ty=Tensor[(1078), int16] */;
  %872 = cast(meta[relay.Constant][62] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %873 = cast(meta[relay.Constant][63] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %874 = reshape(%871, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), int16] */;
  %875 = reshape(%872, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %876 = reshape(%873, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %877 = @func_3473(%874, %875, %876) /* ty=(Tensor[(14, 7, 11), int16], Tensor[(12, 6, 3), uint32], Tensor[(1470), float64], uint64, Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1, 1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */;
  %878 = %864.0;
  %879 = acosh(%870) /* ty=Tensor[(10, 13, 3), float64] */;
  %880 = %877.5;
  (%878, %var_11062, %879, %880, meta[relay.Constant][61] /* ty=Tensor[(1078), int16] */, meta[relay.Constant][62] /* ty=Tensor[(1470), float64] */, meta[relay.Constant][63] /* ty=Tensor[(1274), float64] */)
}

def @func_6544() -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) {
  @func_6542() /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_4748() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %885 = fn () -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
    %881 = @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %882 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %883 = %881.0;
    %884 = %882.0;
    (%883, %884)
  };
  %885() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_6122() -> (Tensor[(8, 12, 3), int32],) {
  %886 = @func_5709() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %887 = %886.0;
  (%887,)
}

def @func_3266() -> (Tensor[(13, 7, 14), float32],) {
  %890 = fn () -> (Tensor[(13, 7, 14), float32],) {
    %888 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
    %889 = %888.1;
    (%889,)
  };
  %890() /* ty=(Tensor[(13, 7, 14), float32],) */
}

def @func_5092(%var_5088: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), float64], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  %891 = cast(meta[relay.Constant][64] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %892 = cast(meta[relay.Constant][64] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %893 = cast(%var_5088, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %894 = cast(meta[relay.Constant][65] /* ty=Tensor[(1274), float64] */, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %895 = reshape(%891, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %896 = reshape(%892, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %897 = reshape(%893, newshape=[390, 1]) /* ty=Tensor[(390, 1), uint8] */;
  %898 = reshape(%894, newshape=[1274]) /* ty=Tensor[(1274), float64] */;
  %899 = @func_771(%895, %896, %897, %898) /* ty=(Tensor[(14, 12, 8), float32], Tensor[(14, 12, 8), bool], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390, 1), uint8], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %900 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
  %901 = %899.0;
  (%900, %901, meta[relay.Constant][64] /* ty=Tensor[(1344), float32] */, %var_5088, meta[relay.Constant][65] /* ty=Tensor[(1274), float64] */)
}

def @func_5177(%var_5175: Tensor[(15, 10, 3), float32], %var_5176: Tensor[(15, 10, 3), float64]) -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), bool]) {
  %911 = fn (%var_5151: Tensor[(15, 10, 3), float32], %var_5169: Tensor[(15, 10, 3), float64]) -> (Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), bool]) {
    %902 = cast(%var_5151, dtype="float32") /* ty=Tensor[(15, 10, 3), float32] */;
    %903 = cast(%var_5151, dtype="float64") /* ty=Tensor[(15, 10, 3), float64] */;
    %904 = asinh(%903) /* ty=Tensor[(15, 10, 3), float64] */;
    %905 = cast(%var_5169, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
    %907 = cast(%904, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %909 = acosh(%902) /* ty=Tensor[(15, 10, 3), float32] */;
    %910 = greater_equal(%907, %908) /* ty=Tensor[(15, 10, 3), bool] */;
    (%909, %910)
  };
  %911(%var_5175, %var_5176) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), bool]) */
}

def @func_8894() -> Tensor[(8, 12, 3), int32] {
  @func_8892() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_9979() -> (Tensor[(8, 12, 3), float64],) {
  %914 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %912 = @func_4992() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
    %913 = %912.2;
    (%913,)
  };
  %914() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_11827() -> Tensor[(8, 12, 3), float64] {
  %915 = @func_2504() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
  %915.0
}

def @func_3418() -> (Tensor[(8, 12, 3), float64],) {
  @func_3416() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_10385() -> (Tensor[(8, 12, 3), int32], Tensor[(1470), float64], Tensor[(1078), int16]) {
  %922 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(1470), float64], Tensor[(1078), int16]) {
    %916 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
    %917 = cast(meta[relay.Constant][66] /* ty=Tensor[(1078), int16] */, dtype="int16") /* ty=Tensor[(1078), int16] */;
    %918 = reshape(%917, newshape=[1, 1078]) /* ty=Tensor[(1, 1078), int16] */;
    %919 = @func_4303(%918) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(13, 7, 14), float32], Tensor[(1470), float64], Tensor[(1, 1078), int16], Tensor[(1470), float64]) */;
    %920 = %916.1;
    %921 = %919.4;
    (%920, %921, meta[relay.Constant][66] /* ty=Tensor[(1078), int16] */)
  };
  %922() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1470), float64], Tensor[(1078), int16]) */
}

def @func_4654() -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) {
  @func_4652() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */
}

def @func_3935(%var_3933: Tensor[(390), uint8], %var_3934: Tensor[(396), float64]) -> (Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8], Tensor[(2640), float32], Tensor[(2640), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64], uint64, Tensor[(1470), float32]) {
  @func_3931(%var_3933, %var_3934) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(15, 13, 2), float32], Tensor[(390), uint8], Tensor[(2640), float32], Tensor[(2640), float32], Tensor[(11, 9, 4), float64], Tensor[(396), float64], uint64, Tensor[(1470), float32]) */
}

def @func_2075(%var_2052: Tensor[(2, 8, 2), uint32], %var_2053: Tensor[(2, 8, 2), uint32], %var_2062: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(4, 6, 16), bool], float32, Tensor[(1274), float64], Tensor[(1, 945), uint64]) {
  %923 = cast(%var_2053, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %924 = shape_of(%var_2052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%var_2052, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %927 = cast(%var_2062, dtype="float32") /* ty=float32 */;
  %928 = reshape(%927, newshape=[]) /* ty=float32 */;
  %929 = @func_1670(%928) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %930 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 945), uint64] */, dtype="uint64") /* ty=Tensor[(1, 945), uint64] */;
  %931 = reshape(%930, newshape=[945]) /* ty=Tensor[(945), uint64] */;
  %932 = @func_2027(%931) /* ty=(Tensor[(1274), float64], Tensor[(15, 9, 7), bool], Tensor[(945), uint64], Tensor[(216), uint64]) */;
  %933 = equal(%925, %926) /* ty=Tensor[(2, 8, 2), bool] */;
  %934 = %929.0;
  %935 = %932.0;
  (%933, %934, %var_2062, %935, meta[relay.Constant][67] /* ty=Tensor[(1, 945), uint64] */)
}

def @func_3389() -> Tensor[(8, 12, 3), int32] {
  %936 = fn () -> Tensor[(8, 12, 3), int32] {
    @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
  };
  %936() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_11989() -> (Tensor[(6, 13, 5), float32],) {
  %939 = fn () -> (Tensor[(6, 13, 5), float32],) {
    %937 = @func_7399() /* ty=(Tensor[(6, 13, 5), float32],) */;
    %938 = %937.0;
    (%938,)
  };
  %939() /* ty=(Tensor[(6, 13, 5), float32],) */
}

def @main(%var_13789: Tensor[(4, 3, 12), bool]) -> (Tensor[(4, 3, 12), bool],) {
  %940 = cast(meta[relay.Constant][68] /* ty=Tensor[(4, 3, 12), bool] */, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %941 = shape_of(%var_13789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%var_13789, dtype="bool") /* ty=Tensor[(4, 3, 12), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = logical_or(%942, %943) /* ty=Tensor[(4, 3, 12), bool] */;
  (%944,)
}

def @func_1851() -> Tensor[(8, 12, 3), float64] {
  %946 = fn () -> Tensor[(8, 12, 3), float64] {
    %945 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %945.0
  };
  %946() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_7563(%var_7558: Tensor[(39, 4), bool]) -> (Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int8], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(468), bool]) {
  %947 = @func_6952() /* ty=(Tensor[(13, 7, 14), float64],) */;
  %948 = @func_4482() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %949 = @func_7433() /* ty=(Tensor[(6, 15, 1), float64], Tensor[(8, 12, 3), int8]) */;
  %950 = @func_7344() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %951 = cast(%var_7558, dtype="bool") /* ty=Tensor[(39, 4), bool] */;
  %952 = cast(meta[relay.Constant][69] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %953 = reshape(%951, newshape=[12, 1, 13]) /* ty=Tensor[(12, 1, 13), bool] */;
  %954 = reshape(%952, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), bool] */;
  %955 = @func_3345(%953, %954) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) */;
  %956 = %947.0;
  %957 = %948.0;
  %958 = %949.1;
  %959 = %950.1;
  %960 = %955.1;
  (%956, %957, %958, %959, %960, %var_7558, meta[relay.Constant][69] /* ty=Tensor[(468), bool] */)
}

def @func_7478(%var_7465: Tensor[(13, 3, 4), uint64]) -> Tensor[(13, 3, 4), uint64] {
  %961 = cast(%var_7465, dtype="uint64") /* ty=Tensor[(13, 3, 4), uint64] */;
  %962 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(13, 3, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 3, 4), uint64] */, dtype="uint64") /* ty=Tensor[(13, 3, 4), uint64] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%963, %964) /* ty=Tensor[(13, 3, 4), uint64] */
}

def @func_2688() -> (Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) {
  @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */
}

def @func_5235() -> (Tensor[(13, 7, 14), float64],) {
  %967 = fn () -> (Tensor[(13, 7, 14), float64],) {
    %965 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %966 = %965.1;
    (%966,)
  };
  %967() /* ty=(Tensor[(13, 7, 14), float64],) */
}

def @func_7928() -> (Tensor[(8, 12, 3), int32],) {
  %970 = fn () -> (Tensor[(8, 12, 3), int32],) {
    %968 = @func_7344() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %969 = %968.1;
    (%969,)
  };
  %970() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_11267(%var_11266: Tensor[(6, 10, 1), float32]) -> Tensor[(6, 10, 1), uint32] {
  %975 = fn (%var_11258: Tensor[(6, 10, 1), float32]) -> Tensor[(6, 10, 1), uint32] {
    %971 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
    %972 = %971.2;
    %973 = cast(%972, dtype="uint32") /* ty=uint32 */;
    %974 = cast(%var_11258, dtype="uint32") /* ty=Tensor[(6, 10, 1), uint32] */;
    multiply(%973, %974) /* ty=Tensor[(6, 10, 1), uint32] */
  };
  %975(%var_11266) /* ty=Tensor[(6, 10, 1), uint32] */
}

def @func_3219(%var_3197: Tensor[(2640), float32]) -> (Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), bool], Tensor[(2640), float32], Tensor[(4, 6, 10), float64], Tensor[(240), float64]) {
  %976 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
  %977 = cast(%var_3197, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %978 = reshape(%977, newshape=[15, 16, 11]) /* ty=Tensor[(15, 16, 11), float32] */;
  %979 = @func_3149(%978) /* ty=(Tensor[(15, 16, 11), float32], Tensor[(13, 7, 14), bool]) */;
  %980 = cast(meta[relay.Constant][71] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %981 = reshape(%980, newshape=[4, 6, 10]) /* ty=Tensor[(4, 6, 10), float64] */;
  %982 = @func_1628(%981) /* ty=(Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) */;
  %983 = %976.0;
  %984 = %979.1;
  %985 = %982.1;
  (%983, %984, %var_3197, %985, meta[relay.Constant][71] /* ty=Tensor[(240), float64] */)
}

def @func_4538() -> Tensor[(8, 12, 3), float64] {
  @func_4536() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_4688() -> (Tensor[(8, 12, 3), float32],) {
  @func_4686() /* ty=(Tensor[(8, 12, 3), float32],) */
}

def @func_12264() -> (Tensor[(390), uint8], Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) {
  %986 = @func_10169() /* ty=(Tensor[(390), uint8],) */;
  %987 = cast(meta[relay.Constant][72] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %988 = cast(meta[relay.Constant][72] /* ty=Tensor[(150), uint64] */, dtype="uint64") /* ty=Tensor[(150), uint64] */;
  %989 = reshape(%987, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %990 = reshape(%988, newshape=[10, 15, 1]) /* ty=Tensor[(10, 15, 1), uint64] */;
  %991 = %986.0;
  %992 = @func_8731() /* ty=Tensor[(8, 12, 3), int32] */;
  %993 = @func_5248(%989, %990) /* ty=Tensor[(10, 15, ?), bool] */;
  (%991, %992, %993, meta[relay.Constant][72] /* ty=Tensor[(150), uint64] */)
}

def @func_10753() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(156), bool]) {
  %994 = @func_5212() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %995 = @func_9696() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %996 = @func_9955() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %997 = cast(meta[relay.Constant][73] /* ty=Tensor[(156), bool] */, dtype="bool") /* ty=Tensor[(156), bool] */;
  %998 = reshape(%997, newshape=[39, 4]) /* ty=Tensor[(39, 4), bool] */;
  %999 = @func_7563(%998) /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int8], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(39, 4), bool], Tensor[(468), bool]) */;
  %1000 = %994.0;
  %1001 = %995.0;
  %1002 = %996.0;
  %1003 = %999.5;
  (%1000, %1001, %1002, %1003, meta[relay.Constant][73] /* ty=Tensor[(156), bool] */)
}

def @func_5212() -> (Tensor[(8, 12, 3), int32],) {
  %1004 = @func_2428() /* ty=Tensor[(8, 12, 3), int32] */;
  (%1004,)
}

def @func_2231(%var_2230: Tensor[(8, 12, 3), float64]) -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), float64]) {
  %1014 = fn (%var_2212: Tensor[(8, 12, 3), float64]) -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), float64]) {
    %1005 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %1006 = %1005.0;
    %1007 = cast(%var_2212, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
    %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1009 = cast(%1006, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1011 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %1012 = divide(%1009, %1010) /* ty=Tensor[(8, 12, 3), float32] */;
    %1013 = %1011.0;
    (%1012, %1013)
  };
  %1014(%var_2230) /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), float64]) */
}

def @func_11099() -> (Tensor[(8, 12, 3), int32],) {
  @func_11097() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_9833() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %1017 = fn () -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
    %1015 = @func_6605() /* ty=Tensor[(8, 12, 3), float64] */;
    %1016 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
    (%1015, %1016)
  };
  %1017() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */
}

def @func_4536() -> Tensor[(8, 12, 3), float64] {
  @func_3253() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_13478(%var_13476: Tensor[(4, 3, 10), uint64], %var_13477: Tensor[(4, 3, 10), uint64]) -> (Tensor[(4, 3, 10), bool], Tensor[(4, 3, 10), float32], Tensor[(15, 10, 3), bool], Tensor[(1, 450), float32]) {
  %1031 = fn (%var_13462: Tensor[(4, 3, 10), uint64], %var_13463: Tensor[(4, 3, 10), uint64]) -> (Tensor[(4, 3, 10), bool], Tensor[(4, 3, 10), float32], Tensor[(15, 10, 3), bool], Tensor[(1, 450), float32]) {
    %1018 = cast(%var_13463, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
    %1019 = shape_of(%var_13462, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1020 = cast(%var_13462, dtype="bool") /* ty=Tensor[(4, 3, 10), bool] */;
    %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1022 = cast(%var_13463, dtype="float32") /* ty=Tensor[(4, 3, 10), float32] */;
    %1023 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 450), float32] */, dtype="float32") /* ty=Tensor[(1, 450), float32] */;
    %1024 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 450), float32] */, dtype="float64") /* ty=Tensor[(1, 450), float64] */;
    %1025 = reshape(%1023, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float32] */;
    %1026 = reshape(%1024, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), float64] */;
    %1027 = @func_5174(%1025, %1026) /* ty=(Tensor[(15, 10, 3), float32], Tensor[(15, 10, 3), bool]) */;
    %1028 = less_equal(%1020, %1021) /* ty=Tensor[(4, 3, 10), bool] */;
    %1029 = sinh(%1022) /* ty=Tensor[(4, 3, 10), float32] */;
    %1030 = %1027.1;
    (%1028, %1029, %1030, meta[relay.Constant][74] /* ty=Tensor[(1, 450), float32] */)
  };
  %1031(%var_13476, %var_13477) /* ty=(Tensor[(4, 3, 10), bool], Tensor[(4, 3, 10), float32], Tensor[(15, 10, 3), bool], Tensor[(1, 450), float32]) */
}

def @func_1464(%var_1462: Tensor[(15, 7, 14), float64], %var_1463: uint64) -> (Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) {
  %1054 = fn (%var_1411: Tensor[(15, 7, 14), float64], %var_1452: uint64) -> (Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) {
    %1032 = cast(%var_1411, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
    %1033 = exp(%1032) /* ty=Tensor[(15, 7, 14), float64] */;
    %1034 = cast(%1033, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
    %1035 = log10(%1034) /* ty=Tensor[(15, 7, 14), float32] */;
    %1036 = cast(%1035, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
    %1037 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1038 = cast(%1033, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
    %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1040 = cast(%1033, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
    %1041 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1042 = cast(%1035, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
    %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1044 = cast(%var_1452, dtype="uint64") /* ty=uint64 */;
    %1045 = cast(meta[relay.Constant][75] /* ty=Tensor[(36, 6), uint64] */, dtype="uint64") /* ty=Tensor[(36, 6), uint64] */;
    %1046 = cast(meta[relay.Constant][76] /* ty=Tensor[(528), int8] */, dtype="int8") /* ty=Tensor[(528), int8] */;
    %1047 = reshape(%1044, newshape=[]) /* ty=uint64 */;
    %1048 = reshape(%1045, newshape=[12, 6, 3]) /* ty=Tensor[(12, 6, 3), uint64] */;
    %1049 = reshape(%1046, newshape=[528]) /* ty=Tensor[(528), int8] */;
    %1050 = @func_1045(%1047, %1048, %1049) /* ty=(Tensor[(12, 6, 3), bool], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(390, 1), uint16], Tensor[(12, 6, 3), uint32]) */;
    %1051 = power(%1038, %1039) /* ty=Tensor[(15, 7, 14), float32] */;
    %1052 = bitwise_xor(%1042, %1043) /* ty=Tensor[(15, 7, 14), uint16] */;
    %1053 = %1050.4;
    (%1051, %1052, %1053, %var_1452, meta[relay.Constant][75] /* ty=Tensor[(36, 6), uint64] */, meta[relay.Constant][76] /* ty=Tensor[(528), int8] */)
  };
  %1054(%var_1462, %var_1463) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */
}

def @func_10347() -> (Tensor[(8, 12, 3), int32],) {
  @func_10345() /* ty=(Tensor[(8, 12, 3), int32],) */
}

def @func_12195(%var_12193: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(1344), float32], Tensor[(390), uint8]) {
  @func_12192(%var_12193) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(1344), float32], Tensor[(390), uint8]) */
}

def @func_10919(%var_10918: Tensor[(60), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(10, 6, 4), uint8], Tensor[(60), uint8], Tensor[(8, 12, 3), float64]) {
  %1062 = fn (%var_10896: Tensor[(60), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(10, 6, 4), uint8], Tensor[(60), uint8], Tensor[(8, 12, 3), float64]) {
    %1055 = @func_9428() /* ty=(Tensor[(8, 12, 3), int32],) */;
    %1056 = cast(%var_10896, dtype="uint8") /* ty=Tensor[(60), uint8] */;
    %1057 = reshape(%1056, newshape=[10, 6, 1]) /* ty=Tensor[(10, 6, 1), uint8] */;
    %1058 = @func_7136() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %1059 = %1055.0;
    %1060 = @func_8560(%1057) /* ty=Tensor[(10, 6, 4), uint8] */;
    %1061 = %1058.0;
    (%1059, %1060, %var_10896, %1061)
  };
  %1062(%var_10918) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 6, 4), uint8], Tensor[(60), uint8], Tensor[(8, 12, 3), float64]) */
}

def @func_6988(%var_6987: Tensor[(10, 16, 2), float32]) -> (Tensor[(10, 16, 2), float32],) {
  %1065 = fn (%var_6969: Tensor[(10, 16, 2), float32]) -> (Tensor[(10, 16, 2), float32],) {
    %1063 = cast(%var_6969, dtype="float32") /* ty=Tensor[(10, 16, 2), float32] */;
    %1064 = log(%1063) /* ty=Tensor[(10, 16, 2), float32] */;
    (%1064,)
  };
  %1065(%var_6987) /* ty=(Tensor[(10, 16, 2), float32],) */
}

def @func_13608() -> (Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float64]) {
  %1071 = fn () -> (Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float64]) {
    %1066 = @func_12264() /* ty=(Tensor[(390), uint8], Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), bool], Tensor[(150), uint64]) */;
    %1067 = %1066.2;
    %1068 = cast(%1067, dtype="float64") /* ty=Tensor[(10, 15, ?), float64] */;
    %1069 = @func_8731() /* ty=Tensor[(8, 12, 3), int32] */;
    %1070 = log2(%1068) /* ty=Tensor[(10, 15, ?), float64] */;
    (%1069, %1070)
  };
  %1071() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(10, 15, ?), float64]) */
}

def @func_6239(%var_6237: Tensor[(390), uint8]) -> (Tensor[(8, 12, 3), int32], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8]) {
  @func_6236(%var_6237) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8]) */
}

def @func_5405() -> (Tensor[(8, 12, 3), float64],) {
  @func_5403() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_12647() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(390), uint8], Tensor[(8, 12, 3), bool], float32, Tensor[(8, 12, 3), float64]) {
  @func_12645() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(390), uint8], Tensor[(8, 12, 3), bool], float32, Tensor[(8, 12, 3), float64]) */
}

def @func_7516() -> Tensor[(8, 12, 3), bool] {
  %1073 = fn () -> Tensor[(8, 12, 3), bool] {
    %1072 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %1072.0
  };
  %1073() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_2588(%var_2586: Tensor[(1344), float32], %var_2587: Tensor[(1274), float64]) -> (Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) {
  @func_2584(%var_2586, %var_2587) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(14, 12, 8), float32], Tensor[(1344), float32], Tensor[(390), uint8], Tensor[(1274), float64]) */
}

def @func_5611() -> Tensor[(8, 12, 3), int32] {
  %1075 = fn () -> Tensor[(8, 12, 3), int32] {
    %1074 = @func_5142() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) */;
    %1074.0
  };
  %1075() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_7345() -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) {
  %1079 = fn () -> (Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) {
    %1076 = @func_5294() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float32]) */;
    %1077 = %1076.1;
    %1078 = @func_3388() /* ty=Tensor[(8, 12, 3), int32] */;
    (%1077, %1078)
  };
  %1079() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */
}

def @func_10370() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), int32]) {
  %1080 = @func_4652() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */;
  %1081 = @func_6502() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), int32]) */;
  %1082 = %1080.1;
  %1083 = %1081.0;
  (%1082, %1083)
}

def @func_10987() -> Tensor[(8, 12, 3), bool] {
  @func_4514() /* ty=Tensor[(8, 12, 3), bool] */
}

def @func_8731() -> Tensor[(8, 12, 3), int32] {
  @func_3313() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_13559() -> Tensor[(8, 12, 3), int32] {
  %1084 = fn () -> Tensor[(8, 12, 3), int32] {
    @func_9029() /* ty=Tensor[(8, 12, 3), int32] */
  };
  %1084() /* ty=Tensor[(8, 12, 3), int32] */
}

def @func_11806() -> (Tensor[(8, 12, 3), float64], Tensor[(4, 6, 10), float64]) {
  %1085 = cast(meta[relay.Constant][77] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1086 = reshape(%1085, newshape=[4, 60]) /* ty=Tensor[(4, 60), float64] */;
  %1087 = @func_4592(%1086) /* ty=(Tensor[(8, 12, 3), int32], Tensor[(1274), float64], uint64, Tensor[(4, 6, 10), float64], Tensor[(4, 60), float64]) */;
  %1088 = %1087.3;
  %1089 = cast(meta[relay.Constant][77] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1091 = cast(%1088, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1093 = @func_9352() /* ty=Tensor[(8, 12, 3), float64] */;
  %1094 = divide(%1091, %1092) /* ty=Tensor[(4, 6, 10), float64] */;
  (%1093, %1094)
}

def @func_10126() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  @func_10124() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */
}

def @func_5508() -> (Tensor[(8, 12, 3), float64],) {
  %1096 = fn () -> (Tensor[(8, 12, 3), float64],) {
    %1095 = @func_4459() /* ty=Tensor[(8, 12, 3), float64] */;
    (%1095,)
  };
  %1096() /* ty=(Tensor[(8, 12, 3), float64],) */
}

def @func_1628(%var_1615: Tensor[(4, 6, 10), float64]) -> (Tensor[(4, 6, 10), float64], Tensor[(4, 6, 10), float64]) {
  %1097 = cast(%var_1615, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %1098 = cast(%var_1615, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %1099 = erf(%1097) /* ty=Tensor[(4, 6, 10), float64] */;
  %1100 = sin(%1098) /* ty=Tensor[(4, 6, 10), float64] */;
  (%1099, %1100)
}

def @func_4272(%var_4270: Tensor[(1, 8, 6), float32], %var_4271: Tensor[(4, 8, 6), float64]) -> (Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) {
  %1110 = fn (%var_4232: Tensor[(1, 8, 6), float32], %var_4263: Tensor[(4, 8, 6), float64]) -> (Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) {
    %1101 = cast(%var_4232, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
    %1102 = cast(%var_4232, dtype="float64") /* ty=Tensor[(1, 8, 6), float64] */;
    %1103 = exp(%1102) /* ty=Tensor[(1, 8, 6), float64] */;
    %1104 = cast(%1103, dtype="float32") /* ty=Tensor[(1, 8, 6), float32] */;
    %1105 = cast(%1103, dtype="bool") /* ty=Tensor[(1, 8, 6), bool] */;
    %1106 = cast(%var_4263, dtype="bool") /* ty=Tensor[(4, 8, 6), bool] */;
    %1107 = acos(%1101) /* ty=Tensor[(1, 8, 6), float32] */;
    %1108 = log10(%1104) /* ty=Tensor[(1, 8, 6), float32] */;
    %1109 = logical_and(%1105, %1106) /* ty=Tensor[(4, 8, 6), bool] */;
    (%1107, %1108, %1109)
  };
  %1110(%var_4270, %var_4271) /* ty=(Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) */
}

def @func_2154(%var_2153: uint64) -> (Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) {
  %1121 = fn (%var_2147: uint64) -> (Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) {
    %1111 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %1112 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %1113 = cast(meta[relay.Constant][78] /* ty=Tensor[(490, 3), float64] */, dtype="float64") /* ty=Tensor[(490, 3), float64] */;
    %1114 = cast(%var_2147, dtype="uint64") /* ty=uint64 */;
    %1115 = reshape(%1113, newshape=[15, 7, 14]) /* ty=Tensor[(15, 7, 14), float64] */;
    %1116 = reshape(%1114, newshape=[]) /* ty=uint64 */;
    %1117 = @func_1461(%1115, %1116) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), uint16], Tensor[(12, 6, 3), uint32], uint64, Tensor[(36, 6), uint64], Tensor[(528), int8]) */;
    %1118 = %1111.2;
    %1119 = %1112.2;
    %1120 = %1117.0;
    (%1118, %1119, %1120, meta[relay.Constant][78] /* ty=Tensor[(490, 3), float64] */, %var_2147)
  };
  %1121(%var_2153) /* ty=(Tensor[(1274), float64], Tensor[(1274), float64], Tensor[(15, 7, 14), float32], Tensor[(490, 3), float64], uint64) */
}

def @func_5850() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  %1122 = @func_5412() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1123 = %1122.0;
  %1124 = @func_3253() /* ty=Tensor[(8, 12, 3), float64] */;
  %1125 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
  (%1123, %1124, %1125)
}

def @func_11568(%var_11566: Tensor[(150), uint64]) -> (Tensor[(8, 12, 3), float64], Tensor[(150), uint64], Tensor[(10, 15, ?), float32]) {
  @func_11565(%var_11566) /* ty=(Tensor[(8, 12, 3), float64], Tensor[(150), uint64], Tensor[(10, 15, ?), float32]) */
}

def @func_3348(%var_3346: Tensor[(12, 1, 13), bool], %var_3347: Tensor[(12, 3, 13), bool]) -> (Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) {
  %1130 = fn (%var_3331: Tensor[(12, 1, 13), bool], %var_3332: Tensor[(12, 3, 13), bool]) -> (Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) {
    %1126 = cast(%var_3331, dtype="bool") /* ty=Tensor[(12, 1, 13), bool] */;
    %1127 = cast(%var_3332, dtype="bool") /* ty=Tensor[(12, 3, 13), bool] */;
    %1128 = logical_or(%1126, %1127) /* ty=Tensor[(12, 3, 13), bool] */;
    %1129 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
    (%1128, %1129)
  };
  %1130(%var_3346, %var_3347) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) */
}

def @func_8165() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) {
  @func_8163() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) */
}

def @func_2484(%var_2481: Tensor[(8, 12, 3), float64], %var_2482: Tensor[(945), uint64], %var_2483: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32, Tensor[(15, 9, 1), float32], Tensor[(945), uint64], Tensor[(216), uint64]) {
  %1150 = fn (%var_2448: Tensor[(8, 12, 3), float64], %var_2466: Tensor[(945), uint64], %var_2467: Tensor[(216), uint64]) -> (Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32, Tensor[(15, 9, 1), float32], Tensor[(945), uint64], Tensor[(216), uint64]) {
    %1131 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %1132 = %1131.0;
    %1133 = cast(%var_2448, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
    %1134 = shape_of(%1132, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1135 = cast(%1132, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
    %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1137 = @func_1896() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %1138 = cast(0.039403f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1139 = reshape(%1138, newshape=[]) /* ty=float32 */;
    %1140 = @func_1670(%1139) /* ty=(Tensor[(4, 6, 16), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64]) */;
    %1141 = cast(%var_2466, dtype="uint64") /* ty=Tensor[(945), uint64] */;
    %1142 = cast(%var_2467, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %1143 = reshape(%1141, newshape=[15, 9, 7]) /* ty=Tensor[(15, 9, 7), uint64] */;
    %1144 = reshape(%1142, newshape=[216]) /* ty=Tensor[(216), uint64] */;
    %1145 = @func_1217(%1143, %1144) /* ty=(Tensor[(15, 9, 7), bool], Tensor[(12, 6, 3), uint32], uint64, Tensor[(216), uint64], Tensor[(528), int8], Tensor[(390, ?), int8], Tensor[(15, 9, 1), float32]) */;
    %1146 = logical_and(%1135, %1136) /* ty=Tensor[(8, 12, 3), bool] */;
    %1147 = %1137.0;
    %1148 = %1140.1;
    %1149 = %1145.6;
    (%1146, %1147, %1148, 0.039403f /* ty=float32 */, %1149, %var_2466, %var_2467)
  };
  %1150(%var_2481, %var_2482, %var_2483) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32, Tensor[(15, 9, 1), float32], Tensor[(945), uint64], Tensor[(216), uint64]) */
}

def @func_8563(%var_8561: Tensor[(10, 6, 1), uint8]) -> Tensor[(10, 6, 4), uint8] {
  @func_8560(%var_8561) /* ty=Tensor[(10, 6, 4), uint8] */
}

def @func_10239() -> Tensor[(8, 12, 3), float32] {
  %1152 = fn () -> Tensor[(8, 12, 3), float32] {
    %1151 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
    %1151.1
  };
  %1152() /* ty=Tensor[(8, 12, 3), float32] */
}

def @func_9698() -> (Tensor[(8, 12, 3), bool],) {
  @func_9696() /* ty=(Tensor[(8, 12, 3), bool],) */
}

def @func_5984() -> Tensor[(13, 7, 14), float32] {
  %1154 = fn () -> Tensor[(13, 7, 14), float32] {
    %1153 = @func_2686() /* ty=(Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) */;
    %1153.1
  };
  %1154() /* ty=Tensor[(13, 7, 14), float32] */
}

def @func_9264(%var_9246: Tensor[(48), float32]) -> (Tensor[(4, 8, 6), bool], Tensor[(48), float32], Tensor[(24, 8), bool], Tensor[(24, 8), float64]) {
  %1155 = cast(%var_9246, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1156 = @func_7157() /* ty=(Tensor[(8, 12, 3), float32], Tensor[(1, 8, 6), float32], Tensor[(48), float32], Tensor[(24, 8), float64]) */;
  %1157 = %1156.3;
  %1158 = cast(%1157, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %1159 = reshape(%1155, newshape=[1, 8, 6]) /* ty=Tensor[(1, 8, 6), float32] */;
  %1160 = reshape(%1158, newshape=[4, 8, 6]) /* ty=Tensor[(4, 8, 6), float64] */;
  %1161 = @func_4269(%1159, %1160) /* ty=(Tensor[(1, 8, 6), float32], Tensor[(1, 8, 6), float32], Tensor[(4, 8, 6), bool]) */;
  %1162 = cast(meta[relay.Constant][79] /* ty=Tensor[(24, 8), float64] */, dtype="bool") /* ty=Tensor[(24, 8), bool] */;
  %1163 = shape_of(%1157, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1164 = cast(%1157, dtype="bool") /* ty=Tensor[(24, 8), bool] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1166 = cast(meta[relay.Constant][79] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %1167 = %1161.2;
  %1168 = less(%1164, %1165) /* ty=Tensor[(24, 8), bool] */;
  %1169 = tan(%1166) /* ty=Tensor[(24, 8), float64] */;
  (%1167, %var_9246, %1168, %1169)
}

def @func_4686() -> (Tensor[(8, 12, 3), float32],) {
  %1170 = @func_3575() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(2640), float32]) */;
  %1171 = %1170.1;
  %1172 = cast(%1171, dtype="float32") /* ty=Tensor[(8, 12, 3), float32] */;
  %1173 = sinh(%1172) /* ty=Tensor[(8, 12, 3), float32] */;
  (%1173,)
}

def @func_11341(%var_11321: Tensor[(14, 10, 2), int8], %var_11322: Tensor[(14, 10, 2), int8]) -> (Tensor[(14, 10, 2), bool], Tensor[(14, 6, 9), float32], Tensor[(54, 14), float32]) {
  %1174 = cast(%var_11322, dtype="bool") /* ty=Tensor[(14, 10, 2), bool] */;
  %1175 = shape_of(%var_11321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1176 = cast(%var_11321, dtype="bool") /* ty=Tensor[(14, 10, 2), bool] */;
  %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1178 = cast(meta[relay.Constant][80] /* ty=Tensor[(54, 14), float32] */, dtype="float32") /* ty=Tensor[(54, 14), float32] */;
  %1179 = reshape(%1178, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %1180 = less_equal(%1176, %1177) /* ty=Tensor[(14, 10, 2), bool] */;
  %1181 = @func_3993(%1179) /* ty=Tensor[(14, 6, 9), float32] */;
  (%1180, %1181, meta[relay.Constant][80] /* ty=Tensor[(54, 14), float32] */)
}

def @func_9467() -> (Tensor[(8, 12, 3), bool],) {
  %1182 = @func_7951() /* ty=(Tensor[(8, 12, 3), bool],) */;
  %1183 = %1182.0;
  (%1183,)
}

def @func_2504() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), float64]) {
  %1184 = @func_1812() /* ty=(Tensor[(8, 12, 3), float64],) */;
  %1185 = @func_1850() /* ty=Tensor[(8, 12, 3), float64] */;
  %1186 = %1184.0;
  (%1185, %1186)
}

def @func_6954() -> (Tensor[(13, 7, 14), float64],) {
  @func_6952() /* ty=(Tensor[(13, 7, 14), float64],) */
}

def @func_10253() -> (Tensor[(13, 7, 14), float32],) {
  %1187 = @func_5983() /* ty=Tensor[(13, 7, 14), float32] */;
  (%1187,)
}

def @func_155(%var_131: Tensor[(15, 13, 2), uint8]) -> (Tensor[(15, 13, 2), float32],) {
  %1188 = cast(meta[relay.Constant][81] /* ty=Tensor[(15, 13, 2), uint8] */, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %1189 = shape_of(%var_131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%var_131, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1192 = greater_equal(%1190, %1191) /* ty=Tensor[(15, 13, 2), bool] */;
  %1193 = cast(%1192, dtype="float32") /* ty=Tensor[(15, 13, 2), float32] */;
  %1194 = atanh(%1193) /* ty=Tensor[(15, 13, 2), float32] */;
  (%1194,)
}

def @func_4068() -> (Tensor[(8, 12, 3), bool],) {
  %1195 = @func_2373() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float32], Tensor[(8, 12, 3), int32]) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_4993() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) {
  %1201 = fn () -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) {
    %1197 = @func_4670() /* ty=(Tensor[(8, 12, 3), float64],) */;
    %1198 = @func_4536() /* ty=Tensor[(8, 12, 3), float64] */;
    %1199 = @func_4514() /* ty=Tensor[(8, 12, 3), bool] */;
    %1200 = %1197.0;
    (%1198, %1199, %1200)
  };
  %1201() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool], Tensor[(8, 12, 3), float64]) */
}

def @func_3517() -> (Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) {
  @func_3515() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(8, 12, 3), bool]) */
}

def @func_12437() -> Tensor[(8, 12, 3), float64] {
  %1203 = fn () -> Tensor[(8, 12, 3), float64] {
    %1202 = @func_11433() /* ty=(Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64], Tensor[(396), bool]) */;
    %1202.1
  };
  %1203() /* ty=Tensor[(8, 12, 3), float64] */
}

def @func_10860() -> Tensor[(8, 12, 3), int32] {
  %1204 = @func_10345() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %1204.0
}

def @func_3706(%var_3644: Tensor[(13, 12, 8), float32], %var_3645: Tensor[(13, 12, 8), float32], %var_3676: Tensor[(1274), float64], %var_3681: Tensor[(528), int8], %var_3682: Tensor[(390), uint8], %var_3696: Tensor[(396), float64], %var_3703: Tensor[(156), bool], %var_3704: Tensor[(468), bool]) -> (Tensor[(13, 12, 8), bool], Tensor[(13, 7, 14), float64], Tensor[(1274), float64], Tensor[(15, 13, 2), float32], Tensor[(528), int8], Tensor[(390), uint8], Tensor[(11, 9, 4), float64], Tensor[(396), float64], Tensor[(12, 3, 13), bool], Tensor[(156), bool], Tensor[(468), bool]) {
  %1205 = cast(%var_3645, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %1206 = shape_of(%var_3644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(%var_3644, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1209 = minimum(%1207, %1208) /* ty=Tensor[(13, 12, 8), float32] */;
  %1210 = cast(%1209, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
  %1211 = shape_of(%var_3644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1212 = cast(%var_3644, dtype="bool") /* ty=Tensor[(13, 12, 8), bool] */;
  %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1214 = cast(%var_3676, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1215 = reshape(%1214, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), float64] */;
  %1216 = @func_500(%1215) /* ty=(Tensor[(13, 7, 14), float64],) */;
  %1217 = cast(%var_3681, dtype="int8") /* ty=Tensor[(528), int8] */;
  %1218 = cast(%var_3682, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %1219 = reshape(%1217, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), int8] */;
  %1220 = reshape(%1218, newshape=[195, 2]) /* ty=Tensor[(195, 2), uint8] */;
  %1221 = @func_340(%1219, %1220) /* ty=(Tensor[(8, 6, 11), int8], Tensor[(15, 13, 2), float32], Tensor[(195, 2), uint8]) */;
  %1222 = cast(%var_3696, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1223 = reshape(%1222, newshape=[11, 9, 4]) /* ty=Tensor[(11, 9, 4), float64] */;
  %1224 = cast(%var_3703, dtype="bool") /* ty=Tensor[(156), bool] */;
  %1225 = cast(%var_3704, dtype="bool") /* ty=Tensor[(468), bool] */;
  %1226 = reshape(%1224, newshape=[12, 1, 13]) /* ty=Tensor[(12, 1, 13), bool] */;
  %1227 = reshape(%1225, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), bool] */;
  %1228 = @func_3345(%1226, %1227) /* ty=(Tensor[(12, 3, 13), bool], Tensor[(8, 12, 3), float64]) */;
  %1229 = less_equal(%1212, %1213) /* ty=Tensor[(13, 12, 8), bool] */;
  %1230 = %1216.0;
  %1231 = %1221.1;
  %1232 = @func_585(%1223) /* ty=Tensor[(11, 9, 4), float64] */;
  %1233 = %1228.0;
  (%1229, %1230, %var_3676, %1231, %var_3681, %var_3682, %1232, %var_3696, %1233, %var_3703, %var_3704)
}

def @func_2686() -> (Tensor[(13, 7, 14), float32], Tensor[(13, 7, 14), float32]) {
  %1234 = @func_2518() /* ty=(Tensor[(8, 12, 3), float64], Tensor[(13, 7, 14), float64], float32) */;
  %1235 = %1234.1;
  %1236 = cast(%1235, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %1237 = cosh(%1236) /* ty=Tensor[(13, 7, 14), float64] */;
  %1238 = cast(%1237, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %1239 = exp(%1238) /* ty=Tensor[(13, 7, 14), float32] */;
  %1240 = cast(%1239, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %1241 = cast(%1235, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %1242 = shape_of(%1237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1243 = cast(%1237, dtype="float64") /* ty=Tensor[(13, 7, 14), float64] */;
  %1244 = dyn.reshape(%1241, %1242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1245 = floor_divide(%1243, %1244) /* ty=Tensor[(13, 7, 14), float64] */;
  %1246 = cast(%1245, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %1247 = acos(%1240) /* ty=Tensor[(13, 7, 14), float32] */;
  %1248 = tan(%1246) /* ty=Tensor[(13, 7, 14), float32] */;
  (%1247, %1248)
}

def @func_8163() -> (Tensor[(8, 12, 3), int32], Tensor[(8, 12, 3), float64]) {
  %1249 = @func_6122() /* ty=(Tensor[(8, 12, 3), int32],) */;
  %1250 = @func_6542() /* ty=(Tensor[(13, 7, 14), float64], Tensor[(8, 12, 3), float64]) */;
  %1251 = %1249.0;
  %1252 = %1250.1;
  (%1251, %1252)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen367/build/output.py:3979: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen367/build/output.py", line 3984, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(144) tvmgen_default_fused_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_logical_or[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) || ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_131 = relay.var("var_131", dtype = "uint8", shape = (15, 13, 2))#candidate|131|(15, 13, 2)|var|uint8
const_132 = relay.const([[[3,2],[2,-5],[-1,-5],[3,-4],[6,1],[10,4],[-9,7],[1,1],[-4,8],[-8,4],[-6,-6],[-4,-9],[2,4]],[[8,-3],[10,2],[-9,-7],[-5,8],[10,3],[-1,-4],[-1,-9],[-4,6],[-3,-10],[10,6],[6,4],[-10,5],[6,-5]],[[-6,4],[-5,10],[-6,-3],[5,1],[7,9],[-1,-5],[5,1],[9,-8],[7,2],[-5,-3],[-1,9],[2,-5],[7,4]],[[-5,9],[10,-9],[5,6],[1,6],[-2,-6],[-7,-1],[7,10],[8,-6],[-5,-2],[4,-6],[1,3],[-9,8],[9,-4]],[[-1,5],[-9,-5],[-1,9],[-5,-10],[4,-8],[-7,-7],[-1,6],[8,-6],[5,10],[6,-10],[-8,2],[-1,10],[8,10]],[[-10,-2],[1,9],[-7,2],[-6,-7],[-10,9],[7,-9],[4,6],[9,9],[-5,10],[-8,7],[6,9],[-4,4],[3,-1]],[[-7,-3],[-2,-4],[4,-10],[-4,-7],[1,-8],[-5,-7],[-3,-2],[6,-9],[4,5],[10,6],[-3,-5],[9,7],[-5,-5]],[[4,-7],[4,-3],[3,-3],[-5,-10],[8,-1],[4,-7],[-7,3],[1,-2],[9,-2],[-1,3],[-1,10],[7,-3],[7,7]],[[9,4],[-8,1],[4,-6],[5,6],[-7,3],[-9,5],[2,-2],[-1,2],[-3,-7],[-5,4],[-2,-2],[10,-6],[-1,6]],[[1,-8],[9,-5],[1,10],[6,-6],[-6,10],[-3,-8],[4,-2],[4,-5],[-1,-9],[4,-1],[-1,-10],[-8,8],[9,5]],[[-2,-6],[8,1],[8,-8],[-10,-1],[3,9],[1,-3],[-8,-5],[10,-8],[3,-1],[2,7],[-10,10],[4,-4],[1,2]],[[-5,-3],[5,9],[-5,10],[-8,1],[2,9],[2,2],[1,4],[-3,6],[-3,-10],[-4,-6],[5,1],[6,3],[-9,-2]],[[2,-9],[-1,-6],[1,-2],[-2,5],[-3,-7],[8,10],[-9,1],[-5,-10],[-6,1],[4,-2],[1,1],[8,9],[6,10]],[[3,7],[-2,1],[1,6],[2,7],[-5,1],[4,-7],[-6,6],[4,8],[-7,-1],[-3,-8],[-4,4],[-2,-2],[-9,-2]],[[2,7],[-8,4],[10,-9],[-6,6],[3,-6],[10,2],[10,-8],[-4,-1],[-4,8],[3,5],[-3,10],[5,1],[-2,4]]], dtype = "uint8")#candidate|132|(15, 13, 2)|const|uint8
bop_133 = relay.greater_equal(var_131.astype('bool'), relay.reshape(const_132.astype('bool'), relay.shape_of(var_131))) # shape=(15, 13, 2)
uop_137 = relay.atanh(bop_133.astype('float32')) # shape=(15, 13, 2)
output = relay.Tuple([uop_137,])
output2 = relay.Tuple([uop_137,])
func_155 = relay.Function([var_131,], output)
mod['func_155'] = func_155
mod = relay.transform.InferType()(mod)
mutated_mod['func_155'] = func_155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_156 = relay.var("var_156", dtype = "uint8", shape = (15, 13, 2))#candidate|156|(15, 13, 2)|var|uint8
func_155_call = mutated_mod.get_global_var('func_155')
call_157 = func_155_call(var_156)
output = call_157
func_158 = relay.Function([var_156], output)
mutated_mod['func_158'] = func_158
mutated_mod = relay.transform.InferType()(mutated_mod)
const_326 = relay.const([[[4,-5,-2,1,-4,3,1,-7,-4,-5,-2],[4,6,2,-4,1,2,-3,8,8,-10,-3],[7,-2,-2,9,-10,9,8,1,6,-2,-8],[3,-2,10,-4,-5,-5,-3,1,-1,6,-6],[-1,10,9,-6,-8,4,1,-2,-9,5,1],[10,-1,3,-1,4,8,-9,-6,1,-5,-4]],[[1,1,-10,-3,-6,4,-2,-5,-10,4,2],[2,-2,2,9,6,-1,-9,5,3,-3,-9],[6,9,-2,3,-10,-4,9,10,3,10,-4],[4,-1,1,3,-10,-3,-6,-1,10,3,4],[1,4,1,-7,-2,-6,-7,-8,8,-3,6],[7,8,1,-3,-5,-10,-10,2,-5,8,9]],[[10,-10,-5,9,-2,-1,6,-10,-8,5,4],[10,-3,-2,8,-8,1,5,1,-9,2,3],[-5,-9,10,2,1,9,7,-9,-3,1,7],[1,-2,2,2,2,-8,10,-8,1,-2,-7],[4,-2,-3,2,-1,-9,-3,6,6,-3,-10],[-2,5,8,-8,6,1,2,3,5,8,6]],[[4,-9,10,5,-4,6,2,7,-1,3,-3],[5,10,-1,-1,-2,-8,5,2,8,7,-7],[10,-9,9,2,-9,-9,6,-7,-6,3,-9],[-2,8,-9,3,-4,-10,-5,-6,-10,-5,-4],[-8,1,-2,-7,-3,-2,-10,6,6,8,2],[2,2,3,-10,2,9,-1,-8,-2,1,3]],[[-6,7,-8,6,10,-8,-2,4,7,10,-7],[-9,-3,-5,-6,8,-7,3,-9,5,-9,-4],[3,2,1,-8,-7,3,-9,-6,7,8,-8],[9,-2,-7,-9,-1,-8,-4,9,7,-10,-7],[9,5,-9,9,-6,7,5,8,-6,8,-5],[2,6,-1,-10,-7,-4,-4,-7,-2,-3,10]],[[4,6,8,3,6,-9,-7,-1,9,-5,-4],[5,3,-4,-6,-6,4,-10,6,8,-1,6],[-7,4,-9,-6,7,4,-9,-6,-5,-3,6],[3,-7,4,2,-5,-9,5,-7,2,-4,-1],[7,8,-2,2,4,-10,10,10,-5,3,5],[3,10,-3,-2,-9,-2,2,8,1,-3,7]],[[-4,7,4,-5,-7,9,4,4,-8,4,10],[5,-1,-3,7,8,-7,-1,5,7,6,9],[-10,5,-6,10,-6,5,9,-2,8,-8,-8],[-3,6,-5,8,2,7,-7,-8,-10,-10,-2],[4,7,-7,-6,-7,8,-1,-8,6,-8,-7],[7,-2,10,5,4,9,3,8,10,8,-1]],[[-8,-7,-8,7,-2,3,-3,-7,-8,-8,-2],[-2,8,-8,-10,5,-7,-2,9,-2,-8,-4],[-9,-9,-4,3,-8,8,5,-4,6,-2,-4],[-2,8,4,1,6,3,-9,2,2,-5,8],[8,-6,3,-1,-6,2,7,9,5,9,1],[-4,-10,-5,-9,-6,4,3,-3,6,7,3]]], dtype = "int8")#candidate|326|(8, 6, 11)|const|int8
var_327 = relay.var("var_327", dtype = "int8", shape = (8, 6, 11))#candidate|327|(8, 6, 11)|var|int8
bop_328 = relay.minimum(const_326.astype('int8'), relay.reshape(var_327.astype('int8'), relay.shape_of(const_326))) # shape=(8, 6, 11)
func_155_call = mod.get_global_var('func_155')
func_158_call = mutated_mod.get_global_var('func_158')
var_336 = relay.var("var_336", dtype = "uint8", shape = (195, 2))#candidate|336|(195, 2)|var|uint8
call_335 = relay.TupleGetItem(func_155_call(relay.reshape(var_336.astype('uint8'), [15, 13, 2])), 0)
call_337 = relay.TupleGetItem(func_158_call(relay.reshape(var_336.astype('uint8'), [15, 13, 2])), 0)
output = relay.Tuple([bop_328,call_335,var_336,])
output2 = relay.Tuple([bop_328,call_337,var_336,])
func_340 = relay.Function([var_327,var_336,], output)
mod['func_340'] = func_340
mod = relay.transform.InferType()(mod)
var_341 = relay.var("var_341", dtype = "int8", shape = (8, 6, 11))#candidate|341|(8, 6, 11)|var|int8
var_342 = relay.var("var_342", dtype = "uint8", shape = (195, 2))#candidate|342|(195, 2)|var|uint8
output = func_340(var_341,var_342,)
func_343 = relay.Function([var_341,var_342,], output)
mutated_mod['func_343'] = func_343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_486 = relay.var("var_486", dtype = "float64", shape = (13, 7, 14))#candidate|486|(13, 7, 14)|var|float64
uop_487 = relay.atan(var_486.astype('float64')) # shape=(13, 7, 14)
output = relay.Tuple([uop_487,])
output2 = relay.Tuple([uop_487,])
func_500 = relay.Function([var_486,], output)
mod['func_500'] = func_500
mod = relay.transform.InferType()(mod)
var_501 = relay.var("var_501", dtype = "float64", shape = (13, 7, 14))#candidate|501|(13, 7, 14)|var|float64
output = func_500(var_501)
func_502 = relay.Function([var_501], output)
mutated_mod['func_502'] = func_502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_582 = relay.var("var_582", dtype = "float64", shape = (11, 9, 4))#candidate|582|(11, 9, 4)|var|float64
uop_583 = relay.cosh(var_582.astype('float64')) # shape=(11, 9, 4)
output = uop_583
output2 = uop_583
func_585 = relay.Function([var_582,], output)
mod['func_585'] = func_585
mod = relay.transform.InferType()(mod)
mutated_mod['func_585'] = func_585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_586 = relay.var("var_586", dtype = "float64", shape = (11, 9, 4))#candidate|586|(11, 9, 4)|var|float64
func_585_call = mutated_mod.get_global_var('func_585')
call_587 = func_585_call(var_586)
output = call_587
func_588 = relay.Function([var_586], output)
mutated_mod['func_588'] = func_588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_749 = relay.var("var_749", dtype = "float32", shape = (14, 12, 8))#candidate|749|(14, 12, 8)|var|float32
var_750 = relay.var("var_750", dtype = "float32", shape = (14, 12, 8))#candidate|750|(14, 12, 8)|var|float32
bop_751 = relay.multiply(var_749.astype('float32'), relay.reshape(var_750.astype('float32'), relay.shape_of(var_749))) # shape=(14, 12, 8)
bop_754 = relay.less(var_750.astype('bool'), relay.reshape(var_749.astype('bool'), relay.shape_of(var_750))) # shape=(14, 12, 8)
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
const_762 = relay.const([-7,9,8,-6,2,-1,-10,-3,-4,10,9,5,9,-6,-9,10,-10,9,-1,-2,-7,-5,5,-5,-7,7,9,6,1,-8,7,-6,6,-8,2,-3,2,-7,10,-10,-5,2,8,-3,-8,-9,10,5,-1,-7,2,2,-10,2,1,6,8,1,6,5,6,2,-9,3,9,-5,-2,4,5,1,-8,3,4,4,-9,-7,-2,10,7,3,5,-8,2,6,-8,7,-3,3,-6,1,-7,8,-1,-1,4,-6,-10,4,6,3,-9,9,-1,-1,-1,-10,-3,10,-9,-4,-6,1,-5,-10,-7,5,3,5,-8,1,-1,10,9,9,2,2,4,-4,8,-9,8,8,8,7,4,-7,-7,10,-10,6,4,10,1,8,9,-6,-1,-10,10,7,5,8,5,-10,8,-7,-5,-2,-10,-10,8,-7,10,2,-7,3,-4,-4,8,-6,-3,9,-7,-6,1,-5,2,10,9,2,-10,8,6,5,-7,10,-1,9,2,-6,-3,-2,2,5,-1,-9,-1,-6,-8,-1,-9,4,2,9,-1,6,5,7,9,1,10,-2,-7,-6,-7,-10,7,-6,9,4,-10,2,-6,7,2,5,9,10,6,-9,-4,9,2,4,-3,-1,-7,-2,-3,-10,6,4,-3,-1,4,-1,-8,-2,8,-4,-4,-7,8,-4,8,-4,9,2,-6,-2,3,-1,-6,3,-8,-6,-10,3,-4,-10,3,9,-4,6,3,2,-1,-9,5,10,7,-6,-1,-6,6,-9,10,10,10,5,4,-1,10,10,10,-9,-8,-5,-3,-5,-6,9,4,-3,-5,-10,-8,4,1,-3,5,-9,6,3,-4,8,3,-10,-7,1,-1,-3,-10,-9,2,-3,4,2,-3,-1,3,8,7,1,1,7,3,-3,8,5,3,-7,-7,9,3,-6,9,2,-4,-1,-5,8,-10,-2,-2,6,-2,-2,-3,-8,1,3,-9,-8,-8,-7,7,2,6,-6,8,4,7,8,9,6,-9,1,-4,9,10,-6,1,6,1,-6,2,-8,5,8,-1,3,-3,-5,7,-10,2,-4,3,2,10,2,5,-2,9,4,4,9,-4,-4,-10,8,8,9,-9,-7,7,2,3,-2,-4,10,4,3,6,10,2,10,-7,-5,-7,7,2,-8,3,-7,6,5,9,-9,7,-10,7,-3,8,3,10,1,-9,-9,1,-1,3,9,6,-4,-7,-4,-4,-9,6,-10,-1,-10,-2,-3,5,9,10,8,6,-8,8,-7,10,-7,-7,-7,-9,-9,8,-3,-7,-10,10,2,-2,9,2,-4,-4,-3,7,-1,6,9,-3,-6,-7,-5,4,3,8,8,9,-4,-1,6,-6,-6,7,8,-8,-8,1,-3,1,-3,-9,-8,-10,-3,-1,3,-6,-4,6,10], dtype = "int8")#candidate|762|(528,)|const|int8
var_763 = relay.var("var_763", dtype = "uint8", shape = (390, 1))#candidate|763|(390, 1)|var|uint8
call_761 = relay.TupleGetItem(func_340_call(relay.reshape(const_762.astype('int8'), [8, 6, 11]), relay.reshape(var_763.astype('uint8'), [195, 2]), ), 1)
call_764 = relay.TupleGetItem(func_343_call(relay.reshape(const_762.astype('int8'), [8, 6, 11]), relay.reshape(var_763.astype('uint8'), [195, 2]), ), 1)
func_500_call = mod.get_global_var('func_500')
func_502_call = mutated_mod.get_global_var('func_502')
var_768 = relay.var("var_768", dtype = "float64", shape = (1274,))#candidate|768|(1274,)|var|float64
call_767 = relay.TupleGetItem(func_500_call(relay.reshape(var_768.astype('float64'), [13, 7, 14])), 0)
call_769 = relay.TupleGetItem(func_502_call(relay.reshape(var_768.astype('float64'), [13, 7, 14])), 0)
output = relay.Tuple([bop_751,bop_754,call_761,const_762,var_763,call_767,var_768,])
output2 = relay.Tuple([bop_751,bop_754,call_764,const_762,var_763,call_769,var_768,])
func_771 = relay.Function([var_749,var_750,var_763,var_768,], output)
mod['func_771'] = func_771
mod = relay.transform.InferType()(mod)
var_772 = relay.var("var_772", dtype = "float32", shape = (14, 12, 8))#candidate|772|(14, 12, 8)|var|float32
var_773 = relay.var("var_773", dtype = "float32", shape = (14, 12, 8))#candidate|773|(14, 12, 8)|var|float32
var_774 = relay.var("var_774", dtype = "uint8", shape = (390, 1))#candidate|774|(390, 1)|var|uint8
var_775 = relay.var("var_775", dtype = "float64", shape = (1274,))#candidate|775|(1274,)|var|float64
output = func_771(var_772,var_773,var_774,var_775,)
func_776 = relay.Function([var_772,var_773,var_774,var_775,], output)
mutated_mod['func_776'] = func_776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1001 = relay.var("var_1001", dtype = "uint64", shape = ())#candidate|1001|()|var|uint64
var_1002 = relay.var("var_1002", dtype = "uint64", shape = (12, 6, 3))#candidate|1002|(12, 6, 3)|var|uint64
bop_1003 = relay.greater(var_1001.astype('bool'), var_1002.astype('bool')) # shape=(12, 6, 3)
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
var_1007 = relay.var("var_1007", dtype = "int8", shape = (528,))#candidate|1007|(528,)|var|int8
const_1008 = relay.const([[10],[1],[6],[-9],[2],[10],[10],[-8],[-9],[-5],[4],[9],[6],[-6],[-3],[5],[10],[7],[-5],[-2],[-2],[2],[-10],[-5],[1],[-5],[3],[10],[-4],[-4],[-5],[-8],[6],[1],[-4],[8],[-7],[-10],[-9],[7],[2],[6],[4],[5],[-2],[-4],[-9],[-2],[-10],[8],[-7],[-9],[-7],[3],[-3],[7],[-10],[3],[8],[-5],[8],[-9],[-4],[5],[3],[-9],[10],[-5],[7],[4],[-8],[-7],[3],[-4],[9],[-3],[-9],[-7],[-5],[-6],[-6],[9],[2],[-6],[3],[1],[8],[-10],[10],[-1],[-5],[8],[-9],[6],[7],[-2],[-8],[-2],[6],[1],[7],[-3],[-4],[5],[-8],[4],[3],[9],[9],[3],[9],[1],[-8],[-10],[-3],[6],[-7],[-5],[3],[-4],[8],[-6],[10],[-10],[1],[4],[-1],[-7],[-2],[-5],[-10],[-4],[-9],[5],[-1],[-5],[-8],[8],[6],[-8],[-3],[9],[1],[-5],[5],[-7],[1],[9],[10],[-2],[-6],[10],[7],[4],[5],[-2],[-4],[6],[-7],[8],[1],[4],[-7],[-1],[-10],[10],[9],[-1],[-7],[2],[7],[-2],[-3],[8],[-9],[1],[-2],[-1],[-1],[-5],[-3],[-8],[-4],[-1],[-4],[-3],[-4],[-3],[3],[-8],[-8],[4],[5],[8],[-6],[-8],[8],[1],[7],[-1],[4],[-3],[10],[7],[9],[-8],[6],[6],[5],[-9],[7],[-10],[-5],[8],[-5],[-4],[-4],[-9],[-5],[8],[4],[1],[-7],[-3],[-3],[3],[-8],[-6],[8],[-5],[-5],[-1],[-8],[-1],[-9],[-6],[-4],[2],[8],[-4],[-6],[2],[2],[8],[-1],[2],[-4],[5],[5],[4],[7],[-6],[-9],[-2],[4],[9],[-5],[-7],[-8],[-6],[10],[7],[2],[3],[-9],[3],[6],[-5],[-10],[3],[5],[7],[2],[6],[8],[9],[9],[-3],[7],[10],[4],[-10],[-3],[-7],[-5],[6],[-6],[-7],[-4],[6],[-4],[-4],[-2],[-4],[5],[-3],[-5],[9],[-1],[10],[1],[-4],[-6],[3],[6],[6],[6],[-3],[-8],[-7],[10],[10],[-4],[-5],[7],[1],[-9],[7],[7],[-9],[-1],[3],[6],[-8],[-2],[5],[-7],[-9],[-8],[-8],[-8],[-5],[5],[6],[1],[-5],[10],[-2],[3],[-1],[6],[-8],[3],[-6],[2],[5],[2],[-8],[-1],[-8],[-8],[7],[-2],[-4],[-10],[1],[3],[1],[-5],[-6],[-10],[6],[5],[8],[8],[10],[-1],[-6],[7],[-10],[-7],[5],[8],[-5],[-2],[1],[-3],[3],[-3],[-6],[8],[-1],[-3],[4],[8],[-9],[4],[-2],[-1],[-7]], dtype = "uint8")#candidate|1008|(390, 1)|const|uint8
call_1006 = relay.TupleGetItem(func_340_call(relay.reshape(var_1007.astype('int8'), [8, 6, 11]), relay.reshape(const_1008.astype('uint8'), [195, 2]), ), 2)
call_1009 = relay.TupleGetItem(func_343_call(relay.reshape(var_1007.astype('int8'), [8, 6, 11]), relay.reshape(const_1008.astype('uint8'), [195, 2]), ), 2)
bop_1016 = relay.bitwise_xor(const_1008.astype('int8'), relay.reshape(call_1006.astype('int8'), relay.shape_of(const_1008))) # shape=(390, 1)
bop_1019 = relay.bitwise_xor(const_1008.astype('int8'), relay.reshape(call_1009.astype('int8'), relay.shape_of(const_1008))) # shape=(390, 1)
bop_1027 = relay.minimum(var_1001.astype('uint16'), const_1008.astype('uint16')) # shape=(390, 1)
bop_1037 = relay.add(var_1002.astype('uint32'), var_1001.astype('uint32')) # shape=(12, 6, 3)
output = relay.Tuple([bop_1003,var_1007,bop_1016,bop_1027,bop_1037,])
output2 = relay.Tuple([bop_1003,var_1007,bop_1019,bop_1027,bop_1037,])
func_1045 = relay.Function([var_1001,var_1002,var_1007,], output)
mod['func_1045'] = func_1045
mod = relay.transform.InferType()(mod)
var_1046 = relay.var("var_1046", dtype = "uint64", shape = ())#candidate|1046|()|var|uint64
var_1047 = relay.var("var_1047", dtype = "uint64", shape = (12, 6, 3))#candidate|1047|(12, 6, 3)|var|uint64
var_1048 = relay.var("var_1048", dtype = "int8", shape = (528,))#candidate|1048|(528,)|var|int8
output = func_1045(var_1046,var_1047,var_1048,)
func_1049 = relay.Function([var_1046,var_1047,var_1048,], output)
mutated_mod['func_1049'] = func_1049
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1151 = relay.const([[[-6],[4],[-4],[-1],[-2],[-7],[8],[5],[7]],[[5],[8],[-4],[5],[9],[9],[10],[2],[3]],[[6],[8],[-4],[1],[7],[2],[-7],[-10],[3]],[[3],[7],[-5],[-1],[-4],[-1],[-8],[-2],[-5]],[[1],[10],[3],[4],[9],[5],[7],[9],[2]],[[-2],[9],[6],[2],[-4],[-10],[3],[-6],[-9]],[[-7],[9],[8],[-7],[3],[-9],[-1],[8],[5]],[[-9],[7],[3],[4],[-9],[1],[9],[3],[-3]],[[3],[-6],[-9],[1],[-5],[8],[-2],[9],[10]],[[-9],[8],[-5],[5],[6],[-4],[-1],[-10],[-5]],[[-9],[6],[7],[4],[-1],[-1],[4],[7],[7]],[[2],[8],[2],[-4],[2],[7],[2],[-6],[-9]],[[-4],[-6],[-7],[8],[-6],[-7],[7],[-7],[-5]],[[10],[9],[5],[1],[-3],[8],[2],[9],[9]],[[-7],[-9],[-1],[8],[-6],[-4],[1],[2],[8]]], dtype = "uint64")#candidate|1151|(15, 9, 1)|const|uint64
var_1152 = relay.var("var_1152", dtype = "uint64", shape = (15, 9, 7))#candidate|1152|(15, 9, 7)|var|uint64
bop_1153 = relay.equal(const_1151.astype('bool'), var_1152.astype('bool')) # shape=(15, 9, 7)
uop_1172 = relay.log2(const_1151.astype('float32')) # shape=(15, 9, 1)
func_1045_call = mod.get_global_var('func_1045')
func_1049_call = mutated_mod.get_global_var('func_1049')
const_1175 = relay.const(1, dtype = "uint64")#candidate|1175|()|const|uint64
var_1176 = relay.var("var_1176", dtype = "uint64", shape = (216,))#candidate|1176|(216,)|var|uint64
const_1177 = relay.const([-2,-5,10,-6,1,4,-1,-7,-8,-10,8,7,-9,-5,7,-4,3,-9,-1,-4,6,-2,-2,7,-9,-2,6,-2,-8,-7,9,7,3,6,2,4,7,-6,-4,-8,-1,-10,2,1,7,6,-9,9,-8,6,5,9,-6,3,-7,3,-3,-4,-4,-4,4,8,-4,7,-6,-3,3,-4,-4,-10,-10,-8,5,10,6,-2,-6,6,-1,-2,-6,-7,7,-7,-10,4,10,-5,-2,6,-10,10,1,6,1,-9,4,-5,9,4,10,9,9,-7,-8,-1,-3,4,1,8,-7,6,-2,4,2,1,7,-4,-4,9,5,-2,-3,4,6,3,-8,-7,-1,-4,-1,6,4,6,10,2,5,6,10,-1,2,2,-6,-2,9,9,10,-2,5,4,3,-3,-2,6,6,10,3,8,10,6,4,3,-1,10,-3,3,4,2,-2,-2,8,-8,4,10,-6,3,-10,-5,9,10,4,8,9,6,10,4,7,-9,-8,3,3,-3,2,7,7,-5,-1,7,-5,-3,-8,-3,9,-8,-8,10,-6,-6,4,2,-1,10,-2,-1,-1,-1,3,8,3,10,4,5,-6,-2,4,-2,3,-4,1,1,4,-5,-6,-1,-6,2,-3,-1,8,9,-9,7,-3,6,-8,7,1,-1,2,7,6,-9,-8,8,-6,-10,-8,-7,-9,4,-2,-1,3,-1,7,5,9,2,6,7,-9,-7,5,-7,-6,2,-5,2,-7,5,3,5,5,3,-9,1,7,-4,-1,7,-5,-7,1,8,-4,-4,-4,1,8,1,2,5,10,-4,-4,8,7,10,5,-10,5,-8,-2,-10,-2,-10,-3,-6,8,-3,8,-2,7,6,3,4,9,7,-10,-4,6,-5,-10,-1,10,1,-7,4,8,-9,6,-9,3,8,2,4,-7,8,-3,-6,-5,2,1,-8,-7,-7,10,10,1,7,-10,-3,3,4,2,-8,8,-1,-7,5,-5,9,-10,9,8,9,10,-7,-3,10,3,-4,-9,10,-3,-1,9,6,-10,-5,2,6,-5,-6,4,-6,3,9,-5,9,4,-8,2,6,-10,8,-4,5,-9,-8,6,-1,-3,2,-9,-6,1,-10,10,4,-7,-4,-1,10,2,3,3,-9,-4,2,4,-8,4,9,-4,-3,-7,3,4,6,-3,-3,2,-1,-5,-10,1,-3,8,8,-4,4,-8,9,-10,9,3,10,-6,-10,3,1,1,-2,7,-2,1,-2,5,-10,-6,10,10,3,-10,8,-6,-1,4,-6,3,2,6,-2,7,5,2,-3,5,10,-10,1,9,2,5,-4,8,2,-10,-6,-8,-2,-6,3,-2,9,3,-9,3,-6,3,-9,-6,6,9,4,-3,-8,-3,2,-7,-9,-10,3,-2,-6,-10,6], dtype = "int8")#candidate|1177|(528,)|const|int8
call_1174 = relay.TupleGetItem(func_1045_call(relay.reshape(const_1175.astype('uint64'), []), relay.reshape(var_1176.astype('uint64'), [12, 6, 3]), relay.reshape(const_1177.astype('int8'), [528,]), ), 4)
call_1178 = relay.TupleGetItem(func_1049_call(relay.reshape(const_1175.astype('uint64'), []), relay.reshape(var_1176.astype('uint64'), [12, 6, 3]), relay.reshape(const_1177.astype('int8'), [528,]), ), 4)
func_1045_call = mod.get_global_var('func_1045')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_1192 = relay.TupleGetItem(func_1045_call(relay.reshape(const_1175.astype('uint64'), []), relay.reshape(var_1176.astype('uint64'), [12, 6, 3]), relay.reshape(const_1177.astype('int8'), [528,]), ), 2)
call_1193 = relay.TupleGetItem(func_1049_call(relay.reshape(const_1175.astype('uint64'), []), relay.reshape(var_1176.astype('uint64'), [12, 6, 3]), relay.reshape(const_1177.astype('int8'), [528,]), ), 2)
uop_1210 = relay.erf(uop_1172.astype('float32')) # shape=(15, 9, 1)
output = relay.Tuple([bop_1153,call_1174,const_1175,var_1176,const_1177,call_1192,uop_1210,])
output2 = relay.Tuple([bop_1153,call_1178,const_1175,var_1176,const_1177,call_1193,uop_1210,])
func_1217 = relay.Function([var_1152,var_1176,], output)
mod['func_1217'] = func_1217
mod = relay.transform.InferType()(mod)
var_1218 = relay.var("var_1218", dtype = "uint64", shape = (15, 9, 7))#candidate|1218|(15, 9, 7)|var|uint64
var_1219 = relay.var("var_1219", dtype = "uint64", shape = (216,))#candidate|1219|(216,)|var|uint64
output = func_1217(var_1218,var_1219,)
func_1220 = relay.Function([var_1218,var_1219,], output)
mutated_mod['func_1220'] = func_1220
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1411 = relay.var("var_1411", dtype = "float64", shape = (15, 7, 14))#candidate|1411|(15, 7, 14)|var|float64
uop_1412 = relay.exp(var_1411.astype('float64')) # shape=(15, 7, 14)
uop_1419 = relay.log10(uop_1412.astype('float32')) # shape=(15, 7, 14)
bop_1434 = relay.power(uop_1412.astype('float32'), relay.reshape(uop_1419.astype('float32'), relay.shape_of(uop_1412))) # shape=(15, 7, 14)
bop_1444 = relay.bitwise_xor(uop_1419.astype('uint16'), relay.reshape(uop_1412.astype('uint16'), relay.shape_of(uop_1419))) # shape=(15, 7, 14)
func_1045_call = mod.get_global_var('func_1045')
func_1049_call = mutated_mod.get_global_var('func_1049')
var_1452 = relay.var("var_1452", dtype = "uint64", shape = ())#candidate|1452|()|var|uint64
const_1453 = relay.const([[3,-8,-3,3,4,5],[-9,-9,4,-1,2,-1],[2,-6,1,-6,8,-3],[1,-8,1,5,10,5],[2,4,-4,8,10,4],[1,-10,-6,-2,8,-1],[3,-1,2,6,3,-9],[-6,-1,-2,-10,7,-2],[2,9,3,-8,-8,9],[4,5,7,4,-2,10],[10,-6,7,-9,3,-8],[7,-3,7,-6,-9,-8],[-6,10,7,-3,9,5],[9,-6,1,-9,1,7],[5,-9,-6,-3,-9,-4],[4,-5,-7,2,6,8],[-3,10,-10,2,-10,-4],[-9,-1,-1,-7,2,-9],[-4,-5,-8,-2,10,4],[8,-7,-6,7,7,4],[-2,-2,-4,-3,3,-1],[-3,-1,4,4,1,10],[-2,3,-6,-7,9,-3],[2,1,6,-6,6,1],[-1,2,6,-1,1,-6],[-2,-5,2,-4,-6,10],[9,-8,-1,3,-3,6],[-8,-6,3,-6,-6,-6],[9,-3,-4,-6,6,8],[-4,-1,-7,-6,6,-6],[5,3,-4,-10,-8,-7],[-5,-7,-8,10,5,7],[-10,7,-7,6,6,3],[-8,-3,7,3,5,-5],[-3,5,8,-10,-6,-4],[-1,-5,10,8,-3,8]], dtype = "uint64")#candidate|1453|(36, 6)|const|uint64
const_1454 = relay.const([2,-9,2,-3,9,-8,-8,5,5,4,4,-8,-6,3,2,5,5,2,7,4,-5,-5,7,8,-8,2,10,6,2,10,-7,-8,10,-2,5,10,-8,-6,-7,-7,-7,-10,-2,3,-8,-7,-9,-1,-7,5,-9,-6,2,-2,-4,-5,-9,-10,-1,-4,-9,6,-8,-6,-10,-10,7,-5,-6,7,7,5,-7,6,9,9,-3,-5,-3,-9,-3,1,-3,-7,5,-2,-8,-10,-1,6,-8,-9,1,-3,6,-7,-9,9,5,4,1,-2,-3,5,9,-8,-6,8,-3,-4,-1,8,-7,5,-2,-2,6,-6,-6,-5,-2,-2,9,10,10,-1,-2,4,-5,-3,-9,3,-1,-6,-10,2,3,-4,3,-2,-5,6,1,1,9,4,1,5,6,8,10,8,5,6,4,-3,-1,10,-8,-10,5,7,3,9,-3,3,-9,9,-3,-4,-2,-7,5,-9,-8,-4,-4,10,-2,7,6,-3,3,10,6,4,-10,-5,10,-2,4,3,4,9,4,5,8,-6,-9,-10,10,-7,6,-7,-7,-7,2,10,7,4,-7,-3,9,7,-8,5,10,-8,3,3,4,-2,1,-2,3,-2,-7,5,-6,3,9,2,9,6,-5,5,-10,-6,1,9,-6,-4,6,10,-2,-6,3,10,7,-6,-4,4,8,-5,9,-4,-7,-9,-8,4,4,-2,-7,-10,8,-7,-9,-6,-2,-5,-7,6,-7,-6,6,8,-2,-8,5,-3,6,-7,2,1,6,-5,-6,6,5,-2,-6,4,1,6,2,10,1,2,-1,-7,10,2,2,1,2,10,-4,-5,-8,2,10,7,-9,7,3,-9,-8,1,8,7,7,-7,4,9,-3,-2,-5,8,-8,-6,-1,-6,-7,-8,10,7,7,-2,8,-2,2,-7,3,-1,-10,-5,-1,9,7,4,-3,9,-5,-10,10,-5,8,-1,5,3,6,-6,9,6,-1,5,1,5,-5,-8,-8,9,-5,8,-2,-5,9,7,5,5,-6,-1,6,-3,-2,8,-6,-8,9,10,7,10,-7,5,4,9,2,-7,5,-1,-2,8,8,-8,-2,-8,6,-8,-7,-4,-4,-1,2,-7,7,-5,-7,-7,-1,-1,5,-5,-7,1,-5,-7,9,-7,5,7,2,-2,-7,3,4,-2,-5,-10,-7,8,-8,-2,4,-6,-3,-2,-5,5,1,-9,-4,-4,5,1,4,5,-4,-9,-6,7,9,6,4,-7,9,-2,6,-4,-9,-6,-4,-9,8,9,4,-5,7,-1,3,8,4,7,-5,5,-5,8,-2,10,-6,5,-6,5,2,-6,3,-6,-1,1,3,-1,6,8,8,-7,-6,4,-3,-5,4,1,-5,-8,-2,-2,4,-1,-3,-6,6,5,6,-4,-8,-7,2,4,4,4], dtype = "int8")#candidate|1454|(528,)|const|int8
call_1451 = relay.TupleGetItem(func_1045_call(relay.reshape(var_1452.astype('uint64'), []), relay.reshape(const_1453.astype('uint64'), [12, 6, 3]), relay.reshape(const_1454.astype('int8'), [528,]), ), 4)
call_1455 = relay.TupleGetItem(func_1049_call(relay.reshape(var_1452.astype('uint64'), []), relay.reshape(const_1453.astype('uint64'), [12, 6, 3]), relay.reshape(const_1454.astype('int8'), [528,]), ), 4)
output = relay.Tuple([bop_1434,bop_1444,call_1451,var_1452,const_1453,const_1454,])
output2 = relay.Tuple([bop_1434,bop_1444,call_1455,var_1452,const_1453,const_1454,])
func_1461 = relay.Function([var_1411,var_1452,], output)
mod['func_1461'] = func_1461
mod = relay.transform.InferType()(mod)
var_1462 = relay.var("var_1462", dtype = "float64", shape = (15, 7, 14))#candidate|1462|(15, 7, 14)|var|float64
var_1463 = relay.var("var_1463", dtype = "uint64", shape = ())#candidate|1463|()|var|uint64
output = func_1461(var_1462,var_1463,)
func_1464 = relay.Function([var_1462,var_1463,], output)
mutated_mod['func_1464'] = func_1464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1615 = relay.var("var_1615", dtype = "float64", shape = (4, 6, 10))#candidate|1615|(4, 6, 10)|var|float64
uop_1616 = relay.erf(var_1615.astype('float64')) # shape=(4, 6, 10)
uop_1619 = relay.sin(var_1615.astype('float64')) # shape=(4, 6, 10)
output = relay.Tuple([uop_1616,uop_1619,])
output2 = relay.Tuple([uop_1616,uop_1619,])
func_1628 = relay.Function([var_1615,], output)
mod['func_1628'] = func_1628
mod = relay.transform.InferType()(mod)
mutated_mod['func_1628'] = func_1628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1629 = relay.var("var_1629", dtype = "float64", shape = (4, 6, 10))#candidate|1629|(4, 6, 10)|var|float64
func_1628_call = mutated_mod.get_global_var('func_1628')
call_1630 = func_1628_call(var_1629)
output = call_1630
func_1631 = relay.Function([var_1629], output)
mutated_mod['func_1631'] = func_1631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1641 = relay.var("var_1641", dtype = "float32", shape = ())#candidate|1641|()|var|float32
const_1642 = relay.const([[[0.534543,4.925254,-1.155269,7.963115,5.364689,8.479860,4.400799,4.636341,4.719833,-0.359855,3.322578,2.906683,1.152066,-9.214258,-8.236619,-6.538297],[3.674553,-8.747335,-9.872402,-0.975839,2.292013,-9.538362,-1.717306,-7.980115,5.233930,3.167607,8.997456,-3.666690,-2.469713,2.031549,-3.919158,8.538259],[4.068081,4.566858,1.552194,0.841913,9.593788,6.409590,-4.321733,6.941173,8.103059,-6.461307,0.349072,6.240982,9.917190,8.116385,-0.399618,3.205795],[-9.187367,-9.043680,-0.704015,-9.710187,8.354070,6.637567,6.313345,3.533079,7.340078,-5.775551,-1.024413,-5.743602,-1.407377,1.372657,-6.985297,-5.482412],[5.051838,0.951653,3.578263,-1.046868,3.941403,-5.809851,-8.217427,8.709971,5.020588,6.222028,-5.434982,5.785395,8.942128,7.643150,2.964742,-9.501819],[-6.954563,-4.611811,0.785871,4.035742,-1.505061,6.365456,3.817226,-7.860521,-6.222600,1.845799,0.401229,7.765376,8.888748,2.293924,5.704787,-5.326874]],[[6.423012,3.840789,0.742785,9.958166,-3.225180,-0.910863,-7.444681,-3.874527,-2.445007,9.307972,-3.334813,-0.461515,2.360345,-7.300564,9.138867,5.888039],[7.452461,8.680948,9.477960,-6.654667,-8.850359,4.320635,4.702827,7.448426,1.621728,1.885514,-0.938475,-0.398916,3.812976,-4.728614,2.456794,2.735685],[-9.901455,3.260959,-1.060650,1.258136,-2.768990,1.704260,-9.608483,-4.245070,2.496753,2.688585,2.385154,0.869189,-8.292217,-7.217112,7.597689,-8.419672],[-8.330562,8.045685,9.441661,8.558142,-5.409161,9.554848,-4.267902,-8.261738,9.554841,1.116807,9.933794,-5.475685,-2.488668,7.211831,-4.235073,9.808737],[6.430505,1.897849,3.320029,7.545181,5.027593,-0.721576,-8.777671,9.362212,-3.970857,-7.538333,-1.174866,3.138448,4.071569,-3.384205,-5.250166,4.252067],[8.727491,-6.483711,9.961292,-6.958570,-3.132290,-2.280970,1.283249,-8.736385,-0.970911,-7.401068,0.231272,6.132759,-4.526462,3.223669,3.065976,2.727291]],[[5.554762,7.210366,0.643648,-2.970490,-8.226732,-8.132761,-7.124358,1.478913,5.407683,3.682979,7.252103,-6.407448,9.323174,-8.293497,-9.801245,4.518456],[8.721925,-2.901592,-5.881662,-4.567692,-7.821000,-2.587367,-1.320227,1.017588,5.907354,-3.831744,-3.569191,9.869837,-7.058453,-8.329874,1.148305,4.705900],[4.487826,0.377873,-1.465173,-1.907866,-2.789187,2.822127,9.950621,-9.787169,-2.400187,6.658745,1.841173,-8.834983,0.095461,-4.731839,-5.369864,6.050537],[-1.366361,0.922564,9.515315,6.687903,-8.380123,-8.287887,4.310312,2.263892,7.139649,-5.992075,0.789422,7.953197,-2.872230,1.186823,6.357993,-0.734986],[9.240442,-7.773521,6.255305,-4.329783,-5.590188,7.706281,8.031506,6.659771,-8.097550,-2.197309,-2.257763,-1.435511,7.651846,4.039331,-0.217475,-6.752383],[1.995217,-9.796746,-9.192780,2.176083,5.809469,9.192942,6.819179,-4.747381,-5.834617,7.542342,-9.196374,0.401276,0.466998,-5.657727,-1.830695,3.007296]],[[6.672330,0.797908,-2.999700,-9.620889,2.663915,-2.241200,4.132720,-7.252703,8.289307,-1.759452,8.546217,-2.505530,9.537649,6.804955,2.729620,9.291850],[-9.133866,0.708707,4.901554,7.942077,8.849528,9.570530,-7.940908,-8.159107,5.814663,4.389364,6.471695,1.009630,-2.153743,-9.946675,4.288529,-6.781844],[-7.563537,-0.595132,0.525941,5.754451,-1.763398,7.914772,-8.539701,-6.130333,9.483639,2.931746,1.637047,4.208020,7.870338,-9.285409,2.443990,-2.924175],[-5.484697,-6.995226,-7.449277,-1.532030,-0.562279,8.871856,2.978645,7.428576,1.997307,0.771504,9.126930,-8.890953,3.094195,-1.198713,5.574240,-5.633759],[4.195539,-6.184421,-3.040443,-8.869277,-4.330682,-9.701977,-9.732626,-8.819412,-4.174499,-5.340745,-4.145823,-2.476937,6.431567,8.430966,1.777109,-8.793566],[-0.322117,4.531545,5.303158,8.636119,9.849688,-5.278524,7.927115,-4.152010,-4.578658,-2.548746,7.199750,-6.438477,8.284176,-2.031525,-0.273823,3.316899]]], dtype = "float32")#candidate|1642|(4, 6, 16)|const|float32
bop_1643 = relay.greater_equal(var_1641.astype('bool'), const_1642.astype('bool')) # shape=(4, 6, 16)
func_500_call = mod.get_global_var('func_500')
func_502_call = mutated_mod.get_global_var('func_502')
const_1665 = relay.const([2.246471,3.886887,3.747279,1.552037,-9.647769,4.792146,9.649554,6.194864,1.854662,-5.413823,8.036560,-6.109466,2.947085,-8.488118,5.191809,-8.323857,-1.805265,1.805226,-0.022295,-7.533694,-2.852446,-3.782192,3.738726,-5.182164,9.412149,6.478832,-8.451224,-1.016150,-4.678152,-1.403992,-5.394623,-9.108182,-7.677113,-2.700610,9.620684,-3.418698,-3.894183,8.338521,-5.440908,-4.961529,-7.059497,-3.651432,-1.130672,4.109520,1.290483,-3.965474,-7.969821,-6.722586,-2.801019,-3.325405,-1.401326,2.317383,7.986557,-4.681709,8.083795,-2.935586,-5.589083,-1.797777,0.725663,5.652551,2.585046,-6.172391,-2.819345,-5.612047,2.544919,-1.379223,5.898632,-5.405774,3.305690,-4.527571,-0.552623,-1.411459,-2.944636,3.217968,-7.170190,-3.998073,-2.950936,-1.755931,-5.657037,-6.254980,8.623944,5.334296,-5.725944,4.242297,-9.466421,-7.011235,-5.076985,6.439235,3.345163,4.593622,9.131127,9.019081,-6.716327,-2.784515,0.731470,0.370572,-5.714046,6.721621,-3.060272,-5.747486,3.055876,5.963266,7.240866,-9.261422,8.414607,9.353112,8.351317,5.597220,-8.267772,-2.743305,-6.563400,-2.223307,-7.577502,0.114084,-0.104178,8.867881,7.541140,-8.400167,9.619682,7.221551,-9.809855,4.150960,-9.016805,6.075318,5.582798,-9.383958,9.301504,-4.255393,-5.447644,4.188382,7.724725,-5.511659,1.947204,9.707334,9.807271,-2.469971,3.112723,-8.011749,-1.279643,-9.601222,7.298423,3.735924,0.325473,7.818589,8.567204,3.405937,6.289384,4.267103,-9.262230,-5.459636,-1.290179,6.555554,-8.152634,0.582648,3.466704,-2.792367,-1.591689,-3.458428,0.928172,5.299860,-5.543623,2.792027,2.358807,-9.000309,-2.475341,2.825717,3.903501,-9.679219,-3.300926,-6.119992,-7.766530,5.547240,-9.580784,-4.992163,5.442021,3.616172,-2.843805,5.385239,3.890964,8.160483,-1.401269,-3.010133,2.227852,-5.841925,-7.223244,-1.386765,6.113120,5.906513,8.005106,-3.804915,-2.145167,-8.587274,-1.183990,-7.279365,7.467602,5.478894,-7.393463,-2.488949,6.419006,-3.602352,7.360042,-9.572248,-3.336572,0.854161,0.125437,-1.807209,9.636707,7.833345,-0.452343,6.682945,6.972356,-8.318927,7.701303,-6.356889,3.671287,-0.384698,4.332619,4.210782,0.974998,1.757812,-0.748217,-4.003091,-8.915609,-0.420478,2.249643,-8.848004,-3.886086,-9.323803,1.199108,-8.927825,2.593290,-0.542597,7.187780,-2.410255,-5.698848,-3.872078,4.998175,-7.072326,-8.195505,2.271248,-0.701932,-6.313832,-3.937764,-8.759948,6.466304,-5.872246,-2.374419,7.669426,-9.188965,-2.400662,0.117083,-6.041074,8.370611,-1.050184,8.196422,8.359276,-8.494393,-0.549921,-4.354115,-6.052264,-1.598206,4.281106,5.825197,-2.419555,-9.536779,-0.206402,8.559193,0.221008,3.543151,-8.518802,6.949246,5.300640,-9.354864,-8.769522,-0.014771,-1.760024,4.657208,2.743175,6.653193,-5.953554,-5.938243,6.341172,9.192240,-0.686930,3.364789,9.671099,-4.271109,-0.424883,3.082536,-0.853663,5.574552,-0.481035,-2.460736,-9.712758,0.523214,0.322886,4.827456,-8.932056,1.375083,-6.461759,4.386665,5.386095,-2.877988,-3.104671,-5.428809,3.036790,-1.054233,-1.825510,-7.139130,-2.794643,-3.698184,7.778757,-6.577485,-0.538731,8.587465,-5.960523,3.527034,-9.654086,3.747150,8.108270,1.795692,-6.208413,-1.667609,-1.049276,5.270496,-2.577147,4.074055,9.052918,9.326140,7.647016,-8.227238,-8.045870,-3.225302,9.114516,5.431600,5.560220,-7.292798,-6.894164,9.342046,3.067149,0.072188,-2.231632,0.094422,5.329072,6.666590,1.270617,-8.236262,5.677549,0.333786,6.212602,1.405588,3.033845,-2.920309,-7.824019,9.244225,-4.118288,-6.151745,8.560652,-0.048148,-9.836137,5.518027,-6.867673,3.422668,-9.991509,-8.644910,-6.429565,5.533631,5.072224,6.449480,3.882361,5.586098,-5.413544,-6.262071,-3.739163,-6.255258,-5.166767,-5.004810,4.039564,6.027063,-1.410924,2.119800,1.480122,4.790841,-7.129536,2.496343,4.425254,6.119503,-0.069900,9.709061,8.264642,8.909658,4.084954,-5.548638,-1.126672,8.176374,1.446763,7.419928,2.227694,-5.774634,6.647801,0.144343,-5.534874,-0.703436,-3.306786,6.682939,0.849347,8.652489,7.150450,-6.918474,3.223815,-9.293583,-5.747393,-0.877026,-2.178778,-0.766746,-2.585960,-1.298495,-0.825662,5.272645,-7.376338,-0.428344,7.457973,4.822688,1.088234,-1.650924,7.935009,-9.510586,-4.448859,4.195536,5.775080,5.024083,4.226992,-5.515607,-2.830086,-8.441000,7.362925,3.196643,-7.534932,1.283049,-1.243285,8.125446,-6.486861,7.913890,-8.078077,-4.258810,-3.163934,4.369497,1.412184,-0.877262,5.078933,7.415027,2.680459,3.858837,5.571623,-9.878191,6.776247,8.182605,7.521367,-4.386880,1.049844,0.446939,-6.300136,9.474310,-2.313420,-7.096838,-8.632203,-9.988895,-4.885900,7.727838,-1.716448,5.623268,2.365568,-6.857754,5.669137,-0.865014,3.480055,7.202577,-6.283214,0.170345,-2.336711,-5.465113,4.967577,-2.798172,4.811659,9.943315,0.273862,6.718158,1.510189,8.405387,-3.120903,7.887294,3.186258,-5.455559,7.516751,6.074128,6.000801,-2.131119,-4.138085,-2.281656,3.685655,-0.607823,-4.735594,4.436446,9.463789,-8.870965,2.125289,6.247704,-3.160529,-1.827296,8.730656,8.057416,-2.068937,-3.204499,7.996347,-5.502948,-0.101421,6.664432,-3.116230,2.189208,-7.580430,4.895079,1.453195,-7.651480,-9.546490,-3.850118,-6.961906,-2.484341,7.780451,-5.671879,4.060712,9.217972,4.986852,-0.416212,-4.877367,8.185977,-1.277504,-9.948569,6.487231,3.952568,3.164074,9.411462,-5.219808,-7.353520,-4.974696,-6.704350,6.122787,-3.072508,-9.680989,-8.550483,-1.755028,7.147430,3.643019,-0.735791,2.053046,-4.499394,2.292277,-2.311997,-0.540494,-9.057451,9.152934,-6.626603,-4.013891,5.071684,-7.806733,5.964655,4.004806,9.840635,-9.318219,9.631536,7.897792,3.226264,-9.858984,-9.807791,-5.979214,3.018779,8.348889,0.585160,-1.548532,9.297260,-0.721184,6.524172,7.254061,-1.198832,4.445737,0.690882,-8.384192,2.939509,6.919740,1.369464,-7.387008,3.347467,-1.896973,-9.386737,-3.142785,9.653526,-5.537030,-9.213705,3.082191,-3.074835,5.829049,-3.329844,-2.948421,-6.827367,4.690642,9.477293,-3.353547,-2.875919,7.305732,-8.503074,-5.168643,9.856873,-1.640068,-4.994621,-8.469338,-8.555704,0.049803,5.474548,2.175821,0.043611,1.999062,-0.434007,0.526806,2.822126,8.262783,-0.595438,8.599236,2.267036,-7.653167,-7.869923,-6.507499,-9.697987,6.906294,5.824794,2.001795,1.494432,0.070567,-0.292529,-2.936574,-5.626681,1.986264,0.054403,-0.856438,5.557088,8.122388,1.179818,-2.560701,3.464277,-8.617720,-8.576279,5.034151,-8.248022,-1.378352,5.218422,-4.141643,-7.976765,6.452187,8.954021,-9.713077,-8.833893,-7.801666,2.706313,0.165283,-1.122399,5.586408,8.440001,-1.536659,-2.322570,-9.938150,-3.714762,7.509653,5.709412,-3.893286,-8.114537,3.252728,-7.726981,-9.122011,-0.243900,-6.568296,4.607130,-0.007671,-0.330767,7.781683,9.397829,1.991564,-5.864678,-3.461419,0.826868,-9.918382,-7.401443,-2.952171,7.773803,-4.229125,-1.799044,-9.820669,0.727316,-1.236828,-2.587152,-0.992843,5.167434,9.043183,-4.775755,7.433728,-2.441596,9.557817,1.645617,-8.349889,-6.429857,1.043219,3.042309,5.709816,-4.908871,0.472728,4.736776,-4.724129,3.864311,-1.303080,4.028594,5.555936,-2.623538,-7.180600,-9.812743,-6.791327,-0.870745,9.143762,-2.265862,-0.061715,-1.925493,1.615397,0.637020,-0.332513,3.657077,-0.948355,5.744435,-9.867056,-2.363696,6.586458,5.403536,9.674134,7.586784,-9.592938,4.099467,-3.210320,-4.959030,1.316688,9.370177,-6.525285,4.263978,-4.937204,-9.518376,-2.506532,6.709157,9.479487,3.372786,-1.573265,6.328208,-0.014918,1.099789,-2.110475,-9.553207,7.612377,1.427328,-8.756964,-3.653997,0.737210,-0.003384,8.097433,-7.505536,-0.578705,-7.281674,-3.076749,7.039115,-8.236036,-6.370783,-3.164076,5.718455,-5.076146,0.165518,7.928192,0.199371,-0.511068,-3.026900,-4.064021,-1.709280,-5.340761,6.119478,-7.113201,-3.124958,-4.872156,7.478451,9.539515,-9.822189,-6.427087,5.838943,-4.410700,-2.978442,-3.645125,-7.599879,5.731820,3.096833,4.784575,2.340995,-4.579164,0.516241,-4.966556,8.461757,5.652394,9.221436,-8.483815,7.433753,-8.608784,0.522383,-5.821548,6.475658,5.514073,3.028803,8.912100,-1.271222,-4.272244,-0.120710,0.724420,3.471486,-5.808821,-7.162498,1.761313,9.763844,7.687786,-4.816884,-9.933482,-3.121532,-2.971361,1.913734,-3.035471,1.501569,8.890007,2.366948,-6.368809,7.204390,2.008644,7.902748,7.886305,-7.380992,6.129672,-2.968741,-9.861297,4.349583,-9.235791,8.015477,4.773191,-8.460196,-9.097343,1.249374,-9.442029,3.579863,-1.907614,-1.957892,5.695880,-5.496672,2.425602,5.405419,8.897863,-7.688430,2.054407,-3.567931,1.471347,7.592148,-2.674170,-4.157822,6.058981,4.227941,-3.875768,9.380964,-1.317898,-0.073385,-8.045550,-0.228187,1.598213,0.523344,-2.243572,0.403649,-0.275835,8.094343,0.819558,0.735768,-7.864487,-9.273956,-4.342967,-9.240322,3.896777,-1.500206,-9.989393,-2.805615,-5.349764,-1.358126,5.628010,-5.750436,-6.076344,3.484029,9.128285,-1.115377,8.496019,-7.977874,-2.231452,-0.615825,2.666148,9.348808,7.997942,0.530444,-8.282098,-9.584923,1.728541,8.979298,7.823324,0.280421,-8.709112,-2.638344,-6.503518,4.140333,9.232662,9.522321,5.736900,8.813499,-4.459451,-1.946145,-6.642477,-9.549528,0.143152,-4.688497,-5.984839,1.683166,2.517236,-8.139806,-2.260987,8.308731,-9.244129,-8.876066,5.229510,-8.648100,8.156391,-5.967824,-8.848688,2.545426,7.759913,-4.863067,-1.057254,-7.469192,9.778430,7.115193,-8.078243,8.501613,3.165613,-5.692770,4.543160,-6.656885,0.552327,2.006162,-3.688116,1.720534,-2.913140,8.118593,0.831013,-6.608859,9.982680,-4.192508,-3.770641,-7.403850,-0.488281,8.930919,4.986178,-8.716975,-0.222605,-2.497737,-0.661022,-9.273065,7.255970,5.768749,1.815141,7.591473,-8.911780,1.858033,-4.703164,-0.069463,-3.155539,-7.672941,-9.436091,9.407243,-4.870713,4.812896,5.244448,3.052942,8.288668,-4.998413,3.942644,1.390672,7.250641,-7.290856,-2.728939,-0.608933,-3.854932,7.456805,6.836168,-5.932564,-1.856152,5.787467,8.659227,6.216568,9.643078,-8.570232,6.627831,-7.273872,-4.834798,-6.757869,-3.809956,7.644255,-0.364255,0.758435,4.494262,8.081790,5.296158,-0.610346,-4.661010,6.219501,0.983452,-9.975558,-6.982814,1.457664,9.991909,4.108390,3.968539,9.649413,5.705710,8.600351,-3.691941,3.687409,7.253134,-4.964896,9.998461,-9.566545,0.393857,9.385053,9.309164,-7.566780,4.196526,-3.497653,3.060481,-4.960388,-2.354272,3.151109,-9.159643,-8.523788,-8.402845,7.828934,4.433710,-9.463697,-6.869456,-2.998373,5.464929,1.702115,-9.857416,5.438686,5.909324,2.466771,7.712940,-7.128641,3.788070,-3.861965,3.404856,4.102181,8.780509,-8.961813,1.744428,2.829828,3.867631,8.813541,5.778817,1.512429,-8.575480,-1.678744,-0.398106,-0.762936,-9.042239,0.224584,-7.183125,-5.822166,8.526875,-9.343650,7.301963,1.878795,-4.907184,-3.650810,5.916444,-8.398361,-3.788305,1.058631,3.285473,-1.731211,-3.813945,8.142367,-8.614777,-1.756033,-8.788360,8.566332,3.457524,6.006981,7.246477,2.597569,5.994983,3.403335,-4.363444,-7.401471,-5.929160,4.870693,5.434707,1.914429,-8.251185,9.586227,-6.037011,-6.710850,5.846584,3.267316,-4.020547,8.597619,-3.060786,5.875975,1.986402,-1.961183,9.217497,1.971718,3.051039,-5.853489,-8.035941,-7.828997,-3.543158,-8.039687,-0.116225,5.222143,-5.950814,8.802549,2.014122,-4.323943,-4.836286,-5.548973,-4.774960,-0.115250,-2.347041,-2.354339,-6.876515,-3.295710,3.798495,-2.832246,-0.501219,-2.017506,-9.354422,-3.831817,4.335962,6.913195,4.677344,3.652274,2.237560,1.666111,-4.100108,-6.740106,6.728322,-3.859452,-7.827673,-2.140263,-9.624258,6.701636,-6.376399,-8.911101,-9.678767,-0.060310,0.571771,-7.603378,7.181773,-3.384534,6.269358,1.196429,6.140680,1.891757,-9.609049,4.459723,5.010410,-4.656930,-5.835519,2.148644,-1.089261,-5.227447,6.598822,-5.979729,4.206125,-6.320984,0.352777,0.099829,0.033420,-3.288754,-4.107471,-9.084665,5.755580,-0.182823,5.429147,-8.050409,5.106256,1.390357,8.031600,6.623761,7.839793,4.735127,5.653022,6.016487,-6.853952,9.946180,6.559862,-4.537242,-3.856355,-3.809593,-4.537335,5.621763,-7.291983,-6.231395,-0.027598,-6.328851,6.475353,-9.989957,-1.571749,-6.633797,-5.682278,7.846074,9.524573,-8.121549,-3.858622,-5.388075,6.456146,-6.840304,-8.550119,-3.246417,1.216973,-5.240811,-9.127245,0.982185,6.422260,3.802515,9.283231,9.137945,-5.520883,-0.949582,3.532355,4.784296,-5.102046,-0.908021,-2.996455,7.259631,8.478555,3.550230,7.097818,-4.819443,-5.366335,-6.545343,-4.437753,-4.826169,3.929232,-8.202486,6.260139,6.356029,2.401079,0.100908,-1.863284,5.011135,-0.295528,-9.860079,-8.408110,-2.907322,-8.210667,-1.789273,5.112405], dtype = "float64")#candidate|1665|(1274,)|const|float64
call_1664 = relay.TupleGetItem(func_500_call(relay.reshape(const_1665.astype('float64'), [13, 7, 14])), 0)
call_1666 = relay.TupleGetItem(func_502_call(relay.reshape(const_1665.astype('float64'), [13, 7, 14])), 0)
output = relay.Tuple([bop_1643,call_1664,const_1665,])
output2 = relay.Tuple([bop_1643,call_1666,const_1665,])
func_1670 = relay.Function([var_1641,], output)
mod['func_1670'] = func_1670
mod = relay.transform.InferType()(mod)
var_1671 = relay.var("var_1671", dtype = "float32", shape = ())#candidate|1671|()|var|float32
output = func_1670(var_1671)
func_1672 = relay.Function([var_1671], output)
mutated_mod['func_1672'] = func_1672
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1805 = relay.const([[[-1.566595,-5.687302,-3.696319],[4.899431,7.205915,3.329125],[8.676158,-8.471830,0.462752],[4.120704,8.516699,7.177486],[-8.463219,-8.005290,-3.636272],[6.865936,0.318276,-4.350980],[6.936913,-5.817811,-9.021528],[3.145072,-7.557374,4.742899],[-4.233756,-1.794304,-7.086146],[-1.916945,6.700511,-9.003984],[-5.683478,-7.305873,-3.584777],[-4.453971,-0.295494,-4.595444]],[[-6.438113,4.373684,6.784848],[6.495014,6.546082,-0.556958],[2.991170,-2.850263,2.046881],[-8.238502,-4.013144,5.323396],[3.965995,-4.040939,-6.937014],[6.601429,-5.587799,6.062308],[6.577076,-4.622357,-2.319776],[-1.303653,4.841358,-3.070067],[2.929626,-3.581288,4.368574],[-1.598807,1.194247,-8.101651],[-7.660602,6.069119,-2.732241],[-7.728288,1.280750,-9.877408]],[[6.851391,5.474501,-7.426168],[3.130882,-6.863022,1.041322],[3.526323,-6.473718,4.774393],[-9.127635,-5.134865,-6.527608],[-6.823283,-0.347845,8.102984],[5.220471,2.870189,5.923911],[-9.399941,-5.526143,1.306242],[-3.416006,5.853155,0.459521],[-8.846240,-4.412810,0.346836],[9.271999,-3.709387,3.529657],[4.180420,-1.305162,7.776598],[-3.827206,8.595099,-9.815411]],[[-0.220216,3.078597,-1.805995],[-1.111243,6.607646,0.183910],[-8.037293,-6.204392,3.984059],[-9.973743,4.949593,0.536071],[6.426696,-5.197677,-0.080709],[2.189960,-6.583301,1.552355],[9.553668,2.712880,-1.255471],[-0.790714,9.860357,1.055639],[-2.193954,6.692993,8.557880],[0.541463,-6.095487,8.873074],[-1.427695,-3.905162,3.721087],[1.696399,7.438160,0.287103]],[[-9.733053,-9.886782,9.534316],[-3.189245,-1.278424,0.622799],[-1.443507,-4.175122,-0.390767],[-3.501282,-6.536616,5.286682],[-4.001155,-1.067861,1.752954],[0.635075,5.298373,-4.857813],[-2.170415,4.756316,-2.978533],[-1.279496,8.096449,-0.522070],[-8.551350,-7.691260,7.810263],[-3.280851,5.195228,2.904774],[9.769234,-0.432630,8.620813],[5.276478,3.909614,-1.778042]],[[2.669900,-2.060038,9.374347],[-6.800689,8.082109,-4.876041],[2.687978,-7.458219,8.773044],[5.662095,3.925946,-6.962321],[-0.718556,-5.545999,-5.058578],[-1.609052,5.278036,-4.071429],[3.241164,-1.471270,5.135708],[0.437749,5.039095,0.563961],[5.671371,1.396257,-3.275141],[5.728607,4.833907,-4.288306],[-1.451075,6.822323,-7.095105],[-7.314991,7.626879,-0.201168]],[[2.117267,6.263184,-8.581882],[-6.036046,6.003978,-2.805178],[4.632348,2.104257,3.104189],[-3.692679,-8.005901,4.205638],[4.440902,-3.076007,-0.706401],[1.320755,-5.153870,-4.732729],[-7.442141,-0.838032,7.412689],[5.863614,0.756683,7.646121],[2.034277,-9.447210,-5.888212],[-1.984442,-0.312660,-4.778623],[7.676735,-4.854409,-3.542393],[-3.257994,7.907748,-7.246233]],[[8.329329,8.197131,-3.129198],[3.826717,-5.546295,1.515242],[5.485821,-1.636011,-3.406856],[-3.463539,5.407914,0.660338],[-6.268022,-7.957532,0.178850],[-9.679880,-0.514735,8.176157],[-2.709882,-6.599508,-3.453160],[8.695882,6.610944,2.546586],[-3.703558,-5.423987,7.906572],[7.245830,2.091485,5.620469],[1.562940,-9.428409,-4.918416],[-1.074203,-6.817118,8.940310]]], dtype = "float64")#candidate|1805|(8, 12, 3)|const|float64
uop_1806 = relay.sqrt(const_1805.astype('float64')) # shape=(8, 12, 3)
output = relay.Tuple([uop_1806,])
output2 = relay.Tuple([uop_1806,])
func_1812 = relay.Function([], output)
mod['func_1812'] = func_1812
mod = relay.transform.InferType()(mod)
mutated_mod['func_1812'] = func_1812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mutated_mod.get_global_var('func_1812')
call_1813 = func_1812_call()
output = call_1813
func_1814 = relay.Function([], output)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_1833 = relay.TupleGetItem(func_1812_call(), 0)
call_1834 = relay.TupleGetItem(func_1814_call(), 0)
output = call_1833
output2 = call_1834
func_1850 = relay.Function([], output)
mod['func_1850'] = func_1850
mod = relay.transform.InferType()(mod)
output = func_1850()
func_1851 = relay.Function([], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_1878 = relay.TupleGetItem(func_1812_call(), 0)
call_1879 = relay.TupleGetItem(func_1814_call(), 0)
func_500_call = mod.get_global_var('func_500')
func_502_call = mutated_mod.get_global_var('func_502')
const_1885 = relay.const([-3.756336,-6.857525,5.680971,7.639418,-4.647252,-6.120438,-3.779154,-7.009379,-6.663660,4.454929,-5.642211,-3.541869,-1.714502,6.689879,8.603161,4.880618,-7.930019,9.834080,-2.193001,6.934040,-3.930270,8.305929,-1.532847,0.137295,-1.948297,-7.294237,6.177916,-4.686045,6.295459,7.303051,-4.757755,3.201459,-9.713188,3.048898,8.682463,8.654676,-8.302815,-4.474966,9.824623,5.699475,-0.362541,-9.255739,-3.853818,4.502930,-0.075623,-8.654886,0.460520,4.261856,-2.869048,-1.472822,-5.857236,6.148723,-3.257300,4.175411,5.320652,6.974858,-1.789469,6.666631,2.115927,-0.714441,-5.684514,-5.964941,-8.007221,9.444210,-8.561432,-4.840621,-2.555089,6.440306,0.261183,-2.563451,7.173587,-3.287559,9.683150,-7.816913,-6.641397,-3.167872,4.298101,-7.828688,-0.342132,-1.914250,-6.699916,7.950065,-4.020195,8.794895,1.409370,-0.991751,-8.457394,-9.089633,9.943801,-2.928932,-7.161614,-3.855190,4.558295,1.029894,-0.493043,3.123006,6.325776,9.161290,2.973906,6.435187,-8.178463,-0.595687,4.157318,-3.911596,6.131886,-7.080060,7.655147,-6.246893,-8.365170,9.702892,8.443907,7.454046,1.274908,3.840730,9.405791,-7.362760,-1.843297,-0.326665,1.662202,-2.933069,3.295826,-1.023607,9.101621,-3.850145,9.433281,6.880193,-3.304298,6.105012,3.649060,-1.389108,2.244286,2.475859,1.456356,9.706261,-8.024360,-4.574419,0.606515,9.336462,8.006313,-2.681668,9.046746,7.496840,-3.806613,7.406796,9.857208,-7.106632,-9.784832,7.033449,-1.252151,0.147904,-3.816302,-9.697334,-7.541511,7.775290,2.845757,-0.090744,1.962988,-2.725692,-6.230071,2.005017,-6.262472,4.977706,9.767355,-8.291574,7.230539,4.991820,5.908755,5.079498,6.809185,0.368259,-5.019553,1.742837,-7.073174,6.027298,8.687570,-8.516922,3.640132,8.174231,-2.152506,-4.804673,4.712063,-6.630489,6.981235,-8.144393,-9.687699,-0.399377,-8.424919,-4.101299,5.230115,2.374135,-2.612208,-9.418343,0.081878,5.439178,-6.387378,-8.981876,2.633064,-7.674800,-1.005305,6.474634,2.443917,-4.654261,4.573386,-0.759003,-2.210453,1.546241,6.347561,-1.803352,5.729952,8.035676,9.268255,9.093512,-7.695619,-5.691226,0.295893,6.195974,3.339586,-1.581041,-5.313588,9.652854,-0.350824,1.654156,8.566395,7.745527,7.351940,-2.971124,-1.394074,4.504617,9.009596,0.418429,7.915068,9.248682,-1.178571,7.775385,-9.787316,-0.631805,-4.770745,5.123492,6.226540,-2.756603,5.736978,-7.014592,5.593736,-2.614108,5.195177,4.619988,-5.827121,2.493379,-1.745024,3.038707,4.703510,2.078261,1.325480,1.520083,7.837270,-5.586349,-5.839194,-5.187622,-3.164600,6.754799,1.054827,5.970721,4.595108,-5.787296,6.558971,9.711926,8.487593,-8.413230,2.085225,-6.507180,-5.280797,8.870063,3.358562,-1.985740,-9.582399,4.134609,-2.712161,8.236929,7.561019,9.151478,2.471103,0.100316,2.298193,2.934104,-9.048382,-2.706260,-9.399096,5.772550,9.721160,-5.099056,9.911250,1.182630,-1.222509,-9.682255,2.664085,-5.080857,-6.768948,9.820041,-4.916792,-4.875852,-6.192953,1.837780,-9.931904,-7.708715,-6.666596,8.815584,-2.755076,4.216411,8.191809,-0.603154,3.833399,0.306155,4.628363,8.002365,8.467749,-4.589195,-7.946551,1.517489,-9.860424,9.233620,-2.946202,9.630443,9.428754,4.136938,-3.505547,8.784602,-1.869878,4.167474,-3.299758,3.375033,-8.706990,7.573932,7.965078,7.143664,7.939433,-3.652669,7.816563,-5.137327,-6.733133,5.007702,-7.841874,-8.149943,5.952438,-7.505207,2.821961,0.025422,9.238976,-1.547135,5.126131,-5.716354,-8.490806,-4.051378,-2.647729,7.739844,-3.303416,3.513414,1.785577,-4.829793,4.070322,-4.460252,-6.236067,-1.690238,2.900740,1.607419,-2.982265,6.961539,-2.463440,-8.389574,-3.173409,-0.712226,-0.324871,0.030409,6.514613,-0.537532,-9.572297,1.478934,9.042398,-8.546368,1.731022,2.478121,-1.966979,-9.307332,0.371154,4.621709,-4.910934,-4.059703,-1.779954,9.045904,2.401697,-5.011810,-3.811264,9.603313,-9.460616,-2.077728,5.777791,3.768490,-4.166583,-1.330704,3.665912,-1.342657,8.063260,-9.685282,-7.892012,-9.329353,-6.958676,-5.768354,-7.293598,-6.499910,5.826948,-3.690613,-0.753151,-7.289134,-0.969005,-6.872221,4.596011,4.086010,-6.239118,-9.263692,4.739826,-1.174059,2.386422,4.251322,-0.791961,-8.136251,-5.438505,-2.729093,0.297875,-4.976906,-6.729148,9.302474,4.476678,-6.739969,-6.651882,-4.815044,4.827854,0.691881,4.485963,5.706131,-9.015092,-8.307812,-6.588125,-4.462912,3.163984,8.846541,7.263783,1.726115,-6.733291,-2.760419,-0.554573,-1.817624,-2.650066,3.568768,-2.535655,2.882332,-5.328109,-0.368206,2.495829,-1.720188,3.281412,-7.919953,-1.616941,0.737761,3.471877,-2.370929,-2.592132,-4.193852,-4.331109,1.271276,-2.525047,-1.323341,-4.885136,4.721427,8.686908,-1.039834,-4.230840,1.815887,1.219458,0.014334,7.763330,-4.346081,-7.380943,-2.132337,-7.801101,-2.633511,-0.451493,-3.276209,1.135722,-2.197127,5.558403,7.098520,2.916270,6.894091,2.646244,-3.386410,-2.256174,-0.022416,3.176757,4.048309,-7.095903,-8.310179,-0.674477,4.910639,-6.719555,-7.084969,2.762827,1.124217,8.298642,8.414964,3.340157,8.616004,-7.259155,7.196912,-8.545974,-5.008420,-6.847495,0.720831,9.295045,-6.667826,1.802713,4.056845,-5.647671,7.189911,0.969173,-5.807228,-3.630125,-7.138392,3.147792,-9.225079,5.556936,4.913009,4.107437,-5.956285,1.354524,2.232838,-4.443423,5.945301,1.771083,-2.134578,8.777591,-0.800984,-5.023220,9.254579,-1.695984,2.958864,-9.090423,6.588903,2.673661,-6.409413,-5.948255,9.085529,-9.285063,5.387275,-2.197253,0.259182,-4.273769,2.322958,-1.362136,-8.459449,6.675525,-0.311083,-7.969016,5.020907,-0.305582,4.903802,8.181225,5.421807,1.064438,-2.786914,-4.536430,-5.952927,5.795657,7.843704,-2.728567,-1.320936,2.497564,2.432114,-9.645920,1.191988,-9.365855,6.322906,-1.758844,4.315796,9.594950,7.754591,5.662316,-0.589312,4.207928,2.416146,7.473560,8.652214,-6.195088,1.861999,-9.381330,5.272666,7.633466,-1.302767,6.207458,0.421136,1.954139,-9.300562,-4.387080,8.779756,-5.952876,6.238410,-4.707942,-7.890173,4.226726,0.152075,4.710489,-3.766748,2.125073,-4.635386,0.609768,8.273119,-2.977931,0.439728,-2.565042,-0.288168,3.957186,3.750528,8.475491,2.371902,9.035459,-5.692486,8.584955,7.409140,4.848611,-3.487191,0.223433,-0.300750,8.630853,3.075385,-7.325655,2.192332,7.856907,-2.437050,-3.334837,-0.702473,-7.243398,-0.307673,3.332015,6.758806,8.177463,1.887814,4.584144,-4.533673,-9.934060,4.664010,-4.028757,-1.046211,2.678391,-1.879297,-0.880673,8.528585,8.092103,9.301228,6.100685,9.227211,-7.253385,3.794003,-8.094922,-4.901074,3.819119,-9.824090,-6.314684,-5.473566,3.510055,-7.890296,9.126621,-1.552509,0.472920,8.514378,-3.918410,-5.137933,-3.083354,1.753042,2.428041,1.844569,6.803736,-4.645772,-9.126362,8.894666,1.589028,-1.483551,5.808173,9.077532,-7.582382,2.138162,-0.328985,1.912698,3.809705,0.314907,-8.140874,-4.979556,-2.104925,-3.777532,2.008713,-8.251034,4.439039,9.709997,-8.879848,4.693241,4.993836,7.459195,-3.475531,-9.890685,6.050609,8.951294,-7.446939,9.497358,-6.066480,-3.014109,1.812732,4.172267,7.784673,3.997052,3.039400,-7.664071,5.097922,-2.482148,-1.648374,-5.497741,1.994587,9.271076,3.929755,-8.902675,-8.949761,1.685011,-7.780145,-6.597167,7.593011,5.269162,6.697586,1.680576,9.588263,-6.401373,3.090754,-0.421528,-5.930282,-2.853441,-6.558017,-1.605926,4.607086,7.136051,-0.228906,7.900081,7.441692,-2.289766,-9.324122,-0.411519,-3.415710,7.020399,6.157645,-4.956610,-3.785248,6.280389,0.229475,1.835000,3.405866,-4.601010,9.157251,2.587183,-0.205941,2.715916,7.087433,3.036551,-4.298854,6.770780,-7.665518,-7.289793,1.085183,3.814501,1.332821,0.071877,5.663755,-8.106423,-7.299728,-4.054446,7.687833,3.173190,2.621211,-3.366944,-7.720451,1.580880,7.152077,3.157830,9.291861,-3.181567,2.912240,4.555627,0.508480,9.134978,2.002179,3.133515,7.239512,6.729168,5.406044,5.699221,-7.613688,-1.931019,-1.154261,-5.981268,-7.010262,-1.199766,-6.626254,3.310536,5.454880,6.666836,-0.959224,7.739396,-0.648669,-0.142633,6.841948,0.120645,-5.382928,7.571397,4.375595,-2.472829,-4.624853,4.630638,-1.395878,8.156639,-9.395811,-4.592330,5.713939,-3.205454,-4.370573,4.213459,-9.034537,9.934107,-2.129683,4.155371,-6.240014,9.662966,-3.745607,-3.089965,4.429349,-7.744127,-2.844499,-8.821214,3.739750,2.802138,9.648810,0.043687,4.125370,-6.067861,3.536093,6.060924,1.675199,4.367266,-2.262038,-5.086575,6.250864,7.826783,7.550443,5.007217,-0.543021,3.189703,1.490564,-0.846098,4.982277,-8.961601,-5.910794,5.666761,-1.943090,-0.551180,-6.897620,4.231653,2.229448,5.331857,-9.877255,1.570967,-3.540927,2.440252,9.289991,-7.532228,-1.279689,-4.155815,6.827544,1.850056,-1.092138,-3.606410,-5.854300,-7.626148,-5.925829,0.668316,-7.061005,7.311360,1.523442,-8.523470,-9.921156,8.999983,2.980563,-2.033412,2.721410,-4.495437,4.198196,-9.242773,-1.154125,8.956539,8.121051,-5.960931,-7.305654,-8.209872,-9.327034,-6.073755,7.428367,7.981527,6.276541,8.605723,0.591559,-9.473851,-4.997198,1.901119,3.370588,2.160479,9.332641,-2.124277,-5.707928,8.040205,3.072548,5.573938,5.444026,8.652773,-9.522606,-4.152844,0.756097,-1.643199,5.591419,-7.460585,7.737590,9.012509,0.331832,-9.510769,-2.468853,-9.026323,7.916704,1.337946,7.394994,-0.987222,7.319128,3.058090,2.629298,6.370075,9.341122,-7.590694,0.856236,9.933675,6.455365,-7.782953,7.176072,-5.593695,6.374595,-5.345177,-7.837209,-4.892624,1.100003,-6.944795,-4.747974,7.624072,-9.021132,-2.380113,-7.075997,-4.696879,6.124735,7.776424,-8.224143,4.557743,2.521381,-4.614810,-3.227712,-3.237777,-3.120755,6.038759,-8.074408,7.090250,-6.909827,-6.446837,8.914862,-4.212660,-2.510269,-5.127480,7.898874,-3.515949,6.107965,7.942042,0.923983,9.725329,-9.316239,-7.022923,3.351365,7.260941,8.413947,-6.623787,5.496086,5.865922,8.494311,-0.133966,-4.048193,0.083992,5.893090,7.675759,-9.835541,-6.575590,1.310668,0.919854,-9.226479,-6.421810,3.570775,9.744779,-1.020135,-4.275961,-0.040099,-3.502440,4.409124,-8.786373,-0.637730,0.672431,-0.826371,-9.570479,4.954030,-5.382574,-5.015862,5.448910,-2.880126,-9.752177,-2.323730,-2.580707,2.610123,3.418663,-1.854586,1.395125,5.968449,-9.578251,8.839581,-3.561635,-6.589124,-8.404106,6.517949,-5.631333,-0.831892,-5.648603,7.694685,5.208147,-1.218609,8.436359,-4.002938,6.230507,-2.739445,3.122103,-5.379904,-4.419149,3.920340,-1.241809,-0.185281,-8.746836,9.637691,1.535814,7.582835,-8.219806,9.285205,-4.049305,-5.345239,-1.306442,1.721137,-5.438019,3.260632,8.383103,-7.256015,5.646783,-2.526169,3.649853,0.407831,9.676368,-9.693873,-5.736639,7.130961,9.976506,-8.773629,-4.283318,-3.460699,-8.106037,3.769138,-3.052307,5.212908,0.125574,9.561705,3.707206,4.841886,4.909656,-0.049206,-0.667536,-0.110818,-7.087164,0.022858,0.937053,0.093604,4.411938,4.439064,-2.876548,5.928464,-3.174787,5.027387,8.025804,-4.475872,-2.647661,-9.887717,8.162255,-6.725624,-1.961288,-2.977085,0.063275,3.093991,4.063304,-2.777008,8.550706,2.427699,-4.675111,6.480854,0.327092,-0.331994,1.308682,-6.926408,-8.201823,-4.780380,-4.420792,-9.199153,-3.389173,-7.579302,-6.331903,-5.849408,3.408173,1.124901,-7.821587,1.287323,4.928493,4.686205,6.985664,7.096406,-1.028160,-5.739130,-0.983652,2.859414,-8.792806,-4.223778,-4.570555,-1.861114,-1.883213,-0.862660,-1.686212,3.839507,1.135276,-9.614591,-2.792130,-9.214188,2.454755,-6.382992,1.603630,0.151875,6.453198,-0.639436,-4.701973,5.175420,9.844324,8.546709,-4.570451,6.202819,1.382756,-9.296027,0.679502,-7.934109,5.573526,-9.147637,-4.065768,-2.436804,-4.918061,-4.329326,9.992488,8.376855,6.576135,-6.595648,3.966806,9.273584,-5.487451,6.392943,5.699503,-5.931389,-6.940437,7.728969,-7.126677,-5.980404,9.259766,7.221253,9.099234,1.304910,2.875615,-7.081578,8.635729,0.206232,0.717953,6.172394,5.441333,4.244992,-5.676730,-6.499676,-4.869233,6.221202,3.895600,-2.733444,-1.547587,3.787145,1.314695,-7.832542,-2.618033,-5.735580,-5.185481,-8.975961,-7.333204,0.209114,-2.670259,5.622541,8.494516,-5.160475,-2.949829,3.741576,-7.470845,-9.968542,-8.924101,-1.635431,2.329881,-4.312551,-8.975868,4.501219,-9.424745,-6.943030,-9.826008,7.241128,-6.276480,9.116276,-6.332196,3.100126,8.384535,-9.880387,3.854909,-0.154038,-1.953457,-0.573060,5.825069,0.485605,2.557540,1.915013,8.745155,7.240904,-5.991196,-0.591666,5.851059,-1.974421,-2.082823,-9.005665,6.274860,-9.802823,5.790827,8.933209,-8.494257,-5.097503,-6.164284,1.174730,-4.430725,3.560437,0.903190,1.730552,-7.144582,-9.543070,-2.575074], dtype = "float64")#candidate|1885|(1274,)|const|float64
call_1884 = relay.TupleGetItem(func_500_call(relay.reshape(const_1885.astype('float64'), [13, 7, 14])), 0)
call_1886 = relay.TupleGetItem(func_502_call(relay.reshape(const_1885.astype('float64'), [13, 7, 14])), 0)
output = relay.Tuple([call_1878,call_1884,const_1885,])
output2 = relay.Tuple([call_1879,call_1886,const_1885,])
func_1896 = relay.Function([], output)
mod['func_1896'] = func_1896
mod = relay.transform.InferType()(mod)
output = func_1896()
func_1897 = relay.Function([], output)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_1982 = relay.TupleGetItem(func_1896_call(), 2)
call_1983 = relay.TupleGetItem(func_1897_call(), 2)
func_1217_call = mod.get_global_var('func_1217')
func_1220_call = mutated_mod.get_global_var('func_1220')
var_2019 = relay.var("var_2019", dtype = "uint64", shape = (945,))#candidate|2019|(945,)|var|uint64
const_2020 = relay.const([-9,8,7,-7,-1,10,-4,-6,4,6,-9,10,-9,2,-10,-10,9,-6,-8,-5,3,-10,6,4,10,-9,9,10,6,7,6,6,5,-4,-7,1,-6,9,-9,-1,-10,-9,2,7,1,3,-1,-3,-10,-9,-7,9,5,3,-8,4,7,-7,5,4,-9,-5,5,-7,6,6,-8,7,2,7,6,-9,9,9,-1,-1,-1,1,6,-3,-3,8,-3,-7,6,-4,-7,3,-9,9,-7,-8,-9,-4,-6,1,-7,3,5,4,5,-4,-3,10,1,-9,2,-7,-8,-7,-10,-6,-7,-9,-10,-4,3,7,6,5,9,-6,-5,1,3,-10,6,2,-6,8,5,10,1,-3,7,6,4,-6,-4,4,4,-4,1,-6,8,2,-7,1,-10,-6,-2,4,4,-7,-4,8,7,10,8,5,-9,9,-9,-7,5,-7,-6,3,8,10,10,-2,10,5,6,-5,-6,5,5,6,5,-6,-6,-3,-8,-8,1,-7,10,8,-3,4,-7,7,-1,3,8,-9,10,-9,-4,-1,7,-5,-2,-4,6,-6,-7,5,6,3,9,10,-3,10], dtype = "uint64")#candidate|2020|(216,)|const|uint64
call_2018 = relay.TupleGetItem(func_1217_call(relay.reshape(var_2019.astype('uint64'), [15, 9, 7]), relay.reshape(const_2020.astype('uint64'), [216,]), ), 0)
call_2021 = relay.TupleGetItem(func_1220_call(relay.reshape(var_2019.astype('uint64'), [15, 9, 7]), relay.reshape(const_2020.astype('uint64'), [216,]), ), 0)
output = relay.Tuple([call_1982,call_2018,var_2019,const_2020,])
output2 = relay.Tuple([call_1983,call_2021,var_2019,const_2020,])
func_2027 = relay.Function([var_2019,], output)
mod['func_2027'] = func_2027
mod = relay.transform.InferType()(mod)
var_2028 = relay.var("var_2028", dtype = "uint64", shape = (945,))#candidate|2028|(945,)|var|uint64
output = func_2027(var_2028)
func_2029 = relay.Function([var_2028], output)
mutated_mod['func_2029'] = func_2029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2052 = relay.var("var_2052", dtype = "uint32", shape = (2, 8, 2))#candidate|2052|(2, 8, 2)|var|uint32
var_2053 = relay.var("var_2053", dtype = "uint32", shape = (2, 8, 2))#candidate|2053|(2, 8, 2)|var|uint32
bop_2054 = relay.equal(var_2052.astype('bool'), relay.reshape(var_2053.astype('bool'), relay.shape_of(var_2052))) # shape=(2, 8, 2)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
var_2062 = relay.var("var_2062", dtype = "float32", shape = ())#candidate|2062|()|var|float32
call_2061 = relay.TupleGetItem(func_1670_call(relay.reshape(var_2062.astype('float32'), [])), 0)
call_2063 = relay.TupleGetItem(func_1672_call(relay.reshape(var_2062.astype('float32'), [])), 0)
func_2027_call = mod.get_global_var('func_2027')
func_2029_call = mutated_mod.get_global_var('func_2029')
const_2070 = relay.const([[3,10,9,-9,8,3,-7,-10,-7,-3,7,-8,6,-1,-2,-2,-9,6,2,2,-5,1,-3,4,3,-6,7,-3,10,5,6,-6,2,2,7,6,-1,6,10,-2,9,5,6,8,1,7,-3,-4,-4,10,2,-5,-3,-7,-1,5,-8,8,8,9,1,9,-8,-8,-9,6,-4,-4,-4,-1,-9,6,9,-3,-8,-8,-10,-3,-10,-5,-1,2,-3,-4,5,-1,2,-6,-9,-7,3,8,-2,4,-3,-3,-1,2,9,-1,3,-3,-9,-5,-7,-9,-8,4,9,-4,-8,-1,-3,-2,-10,9,5,8,10,-6,6,7,-4,7,-10,10,-9,-6,-3,-5,1,6,-9,-2,6,5,-3,9,5,5,-7,3,5,10,-8,-10,-2,-3,-9,-7,-2,10,-7,7,4,-7,-4,-9,-10,8,8,4,-4,-9,5,1,-2,-5,9,1,1,-4,-6,5,-6,3,2,-1,8,1,-10,1,3,-9,7,6,7,4,-5,-1,-5,-4,-6,1,-7,-9,7,6,-7,4,6,3,-2,-9,7,9,-8,7,7,10,-4,-10,-1,1,-3,2,-5,-5,2,-5,7,1,6,-9,-9,9,-10,-4,-5,-8,10,-10,-3,-5,2,-3,3,-4,5,-5,4,8,3,4,-9,-8,2,-5,6,9,-9,7,-8,4,-6,-8,1,6,-9,3,3,-6,-1,10,-2,-5,1,4,3,-3,-7,1,8,-3,8,-3,-7,-3,-10,4,-2,-3,-1,2,-7,4,5,-1,3,-10,-9,-1,1,-5,-7,-5,9,1,6,-5,10,6,-7,10,2,10,-2,10,-4,-6,-5,1,-8,-4,-8,9,10,-3,4,-6,1,10,4,-7,-4,-1,-4,2,5,-10,7,-8,5,-2,3,7,-4,9,4,6,9,-6,-10,-8,-6,-5,-8,-8,4,-3,-7,-3,5,9,-8,-7,4,1,-4,8,-7,-3,-8,7,-10,-9,9,10,-3,-3,-5,7,4,3,9,9,6,1,10,4,-6,-1,-6,-1,9,8,-4,3,-5,7,-10,9,6,-8,6,8,-6,1,9,10,3,2,-7,5,-3,-5,9,-1,-2,3,2,1,2,1,-1,-9,-3,2,-8,-9,1,8,-7,-9,7,-6,5,6,-9,-1,9,9,-3,-9,9,-5,-3,-4,-9,9,5,2,5,9,6,6,-2,-9,-7,-9,8,9,-5,2,-6,-10,6,-10,2,7,-1,-7,-10,-1,5,-3,2,-4,5,-10,9,-9,-4,8,-10,7,-9,-6,9,4,-5,-6,-9,5,10,-2,-7,-6,1,10,10,-3,-2,-8,4,4,10,-10,4,-2,3,3,-6,3,-6,9,10,5,-10,-2,8,6,10,9,-3,8,5,-8,-2,-8,-3,4,-8,-7,5,-3,-7,-3,6,9,-2,-3,-10,-8,1,-1,-5,-2,-6,-9,8,4,-10,-10,-8,4,-8,7,-8,-10,-2,-7,-6,10,-6,4,9,-9,4,5,-10,2,-8,6,5,-8,7,-6,4,8,4,-4,-10,4,-2,-6,10,10,8,-5,-2,-1,-8,-3,-2,-2,2,9,-1,-6,4,5,1,-3,9,-3,2,-1,9,-3,-6,-7,-3,8,1,-4,7,10,-3,8,-10,-7,3,3,4,4,10,-6,-10,-4,-10,8,10,-7,9,-6,-6,-3,1,-4,-1,4,-2,4,-7,-4,9,-8,10,-1,-3,-9,-2,-2,8,9,-4,9,-3,9,1,1,-7,-8,-6,-5,-10,10,9,-6,-7,4,-7,-9,-8,-4,-4,-1,-6,8,-10,3,-9,3,-4,-3,-3,6,2,2,-8,10,-1,-2,10,9,3,3,4,8,-2,-2,-9,-4,-6,2,-3,3,-1,-9,5,4,-9,-9,-10,2,9,-8,-2,9,9,9,4,-5,9,8,3,1,9,-6,7,3,-10,4,3,10,-7,-3,-1,3,-2,3,3,9,3,10,-1,-6,4,-5,-3,9,3,10,10,-3,4,-10,-9,-10,-2,4,5,-8,-8,-6,-9,-3,-8,-4,6,-3,-3,-1,1,7,-2,-1,-1,-6,4,-1,8,3,9,-4,-5,7,-1,-2,-8,10,-10,-8,9,-1,5,-4,-8,-9,-6,-1,-4,-1,-7,-9,-2,6,9,-4,-8,-1,-8,6,-4,4,9,-1,4,-8,-4,5,-6,-9,-6,5,-9,9,-3,-5,1,7,5,-3,-7,-9,7,-7,6,10,-3,8,-1,-1,-1,1,8,-1,5,3,4,5,7,-6,9,6,3,6,-10,-10,5,-2,9,-7,7,8,-1,3,-4,10,-7,7,-10,-5,10,-1,5,10,-9,10,-7,7,1,8,1,1,4,-9,1,-9,7,9,-5,10,6,-8,-8,4,7,5,10,9,5,2,-1,-10,1,2,8,8,2,10,-10,-9,4,6,-1,-10,2,4,-1,4,4,5,-8,6,8,-9,-10,-9,2,10,10,-2,2,-8,2,4,-7,-10,4,4,3,2,2,8,7,-1,-8,3,-1,-2,2,1,-6]], dtype = "uint64")#candidate|2070|(1, 945)|const|uint64
call_2069 = relay.TupleGetItem(func_2027_call(relay.reshape(const_2070.astype('uint64'), [945,])), 0)
call_2071 = relay.TupleGetItem(func_2029_call(relay.reshape(const_2070.astype('uint64'), [945,])), 0)
output = relay.Tuple([bop_2054,call_2061,var_2062,call_2069,const_2070,])
output2 = relay.Tuple([bop_2054,call_2063,var_2062,call_2071,const_2070,])
func_2075 = relay.Function([var_2052,var_2053,var_2062,], output)
mod['func_2075'] = func_2075
mod = relay.transform.InferType()(mod)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2075_call = mutated_mod.get_global_var('func_2075')
var_2077 = relay.var("var_2077", dtype = "uint32", shape = (2, 8, 2))#candidate|2077|(2, 8, 2)|var|uint32
var_2078 = relay.var("var_2078", dtype = "uint32", shape = (2, 8, 2))#candidate|2078|(2, 8, 2)|var|uint32
var_2079 = relay.var("var_2079", dtype = "float32", shape = ())#candidate|2079|()|var|float32
call_2076 = func_2075_call(var_2077,var_2078,var_2079,)
output = call_2076
func_2080 = relay.Function([var_2077,var_2078,var_2079,], output)
mutated_mod['func_2080'] = func_2080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_2088 = func_1850_call()
call_2089 = func_1850_call()
var_2096 = relay.var("var_2096", dtype = "float64", shape = (8, 12, 3))#candidate|2096|(8, 12, 3)|var|float64
bop_2097 = relay.bitwise_xor(call_2088.astype('int32'), relay.reshape(var_2096.astype('int32'), relay.shape_of(call_2088))) # shape=(8, 12, 3)
bop_2100 = relay.bitwise_xor(call_2089.astype('int32'), relay.reshape(var_2096.astype('int32'), relay.shape_of(call_2089))) # shape=(8, 12, 3)
output = bop_2097
output2 = bop_2100
func_2104 = relay.Function([var_2096,], output)
mod['func_2104'] = func_2104
mod = relay.transform.InferType()(mod)
var_2105 = relay.var("var_2105", dtype = "float64", shape = (8, 12, 3))#candidate|2105|(8, 12, 3)|var|float64
output = func_2104(var_2105)
func_2106 = relay.Function([var_2105], output)
mutated_mod['func_2106'] = func_2106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2134 = relay.TupleGetItem(func_1896_call(), 2)
call_2135 = relay.TupleGetItem(func_1897_call(), 2)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2136 = relay.TupleGetItem(func_1896_call(), 2)
call_2137 = relay.TupleGetItem(func_1897_call(), 2)
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
const_2146 = relay.const([[2.434573,4.810150,7.690570],[4.339614,8.050410,8.814137],[7.302728,-4.733769,-8.356206],[0.231384,-6.120641,6.269175],[-2.667698,-2.369594,8.847293],[2.198681,0.362799,-9.279883],[6.480457,-1.664016,-5.022301],[-9.647431,0.827995,-6.770348],[8.264314,7.660894,-2.995310],[4.808559,2.973174,0.823879],[9.563663,6.122159,-6.620676],[-1.575279,1.587172,-4.315766],[-7.987535,4.160689,9.185649],[1.087163,4.252306,4.724021],[-6.198845,9.309012,-3.919274],[-3.339113,3.866191,-8.111044],[3.296441,-8.289429,4.629200],[-9.513161,6.900855,-3.957373],[-7.476409,4.885549,-8.704500],[2.859620,8.748911,-5.834759],[1.135007,-5.830495,-4.150212],[-3.015017,2.850279,-1.334641],[1.114059,-0.762144,-3.093332],[-4.844867,3.898238,3.323300],[-9.097800,-5.912677,3.384837],[3.327762,8.739200,2.905149],[-6.767584,2.066806,-4.890070],[-7.952481,7.442557,-7.783173],[9.239580,-4.215408,-8.504933],[-0.122182,-8.981162,3.269257],[4.382717,-1.620249,-4.602536],[-0.714677,-9.565153,-0.210850],[2.792684,-5.577287,1.633089],[6.826593,2.688793,7.715368],[1.571208,-7.870184,-6.202534],[2.220968,-0.107379,-4.690213],[3.987617,9.819939,8.078766],[9.975028,5.563964,9.407065],[-3.745239,1.997595,-1.627357],[-8.440283,0.705193,8.503337],[-4.300921,3.056891,-8.405727],[2.338546,7.333163,5.996282],[-9.017882,8.115339,5.104752],[-6.232981,8.743142,4.142694],[2.514703,0.117448,0.098745],[-5.714911,1.763918,-9.066097],[-9.486451,-8.142857,2.559347],[-4.565158,-8.770807,2.742996],[-0.828152,8.309537,1.268128],[4.528542,-5.623041,1.965025],[8.083765,8.120175,-3.436514],[-6.593349,4.909055,-2.967253],[8.908526,-6.928457,-6.362415],[1.828271,-8.070909,0.213533],[4.466554,-1.747165,6.577948],[6.522614,3.775491,-2.300906],[1.363494,-3.871849,9.991429],[6.164057,9.248482,-9.508303],[6.528664,-6.097391,-5.567329],[2.035627,-6.256600,-9.314361],[-2.507227,-2.573226,-8.370115],[1.585613,-9.016965,9.502299],[-0.671398,-5.346210,-4.143430],[8.827976,-4.825497,9.897538],[0.841276,-1.651974,-9.409576],[-2.008222,3.765291,1.146672],[1.976732,8.858517,-2.259316],[2.548896,0.275536,4.636834],[-8.502028,1.288677,-0.080876],[4.447969,0.560968,-5.446382],[-0.781967,-3.716968,8.531547],[-6.064826,-8.388900,-9.800879],[-0.908512,0.219230,9.059594],[9.901106,-2.893029,-9.892638],[-3.124393,-0.744841,-4.718816],[6.155437,4.555321,-1.823911],[0.833722,6.737830,-2.128244],[9.957795,6.025887,-7.751606],[4.674954,-4.467058,-4.738240],[-4.850983,2.297249,-0.429459],[9.698098,-2.248806,-6.156173],[-4.599132,5.127522,9.873224],[8.497301,-7.487457,-6.647683],[-6.661207,6.994621,8.898798],[6.494931,-6.376287,-4.985464],[-4.978297,-1.027649,4.999227],[1.235274,4.935824,4.539683],[-7.335226,4.454006,-9.060330],[5.526350,9.056268,4.589309],[-3.939579,-5.110574,1.441210],[-1.506142,8.376390,8.078125],[8.578216,-8.512052,4.655468],[2.771931,-4.122832,5.248404],[-8.140405,0.624339,5.088742],[-8.463622,-5.900048,-4.076587],[-6.210522,9.119726,5.595431],[-9.869508,-3.110228,4.765387],[-8.285091,6.459245,3.987406],[8.347724,-7.285376,1.186783],[-8.137747,5.992519,6.301379],[-0.589874,-1.963229,2.515424],[-1.481141,-6.841428,-9.623719],[0.988772,5.594387,2.249560],[7.330276,-9.951539,-9.421875],[7.104278,-2.138834,9.233412],[-1.900815,6.598043,5.510765],[-8.768778,-5.275409,-3.020643],[6.680299,8.066197,8.108687],[3.846996,-8.811645,-1.012642],[-3.945804,2.012779,-4.405041],[-4.588024,-6.615958,-1.328372],[-8.507923,-6.892020,7.387649],[6.938577,-5.384156,7.023357],[6.928613,-3.750984,2.646232],[-5.126479,-0.911965,-6.815657],[-0.124370,3.011207,-9.666495],[7.667021,-3.162957,8.965263],[-0.079736,-5.777704,3.800877],[-0.889383,5.226292,-6.721029],[3.784588,-2.809619,-7.868900],[3.192540,7.407653,-6.695517],[-2.392156,-6.260092,0.878360],[-2.273546,-7.884485,-8.380035],[2.591193,-9.833776,8.175263],[7.526402,-9.484163,-7.443504],[-6.219822,1.639014,-7.692031],[2.465446,9.966238,7.748195],[4.424981,8.563570,5.421705],[4.181468,-8.065404,7.560191],[9.095264,9.256485,-4.293456],[-4.301981,4.785477,-9.972302],[7.028629,-9.298649,6.600360],[8.317957,9.703444,-7.326306],[-7.122516,8.653514,4.662937],[-0.019743,0.953523,-9.405726],[6.920057,-6.924425,7.983359],[-1.461336,-8.743949,8.351371],[5.885021,-5.805493,4.520535],[1.687855,1.365566,1.539995],[2.979836,0.877049,3.239505],[-4.063001,-2.383748,9.725748],[5.917331,4.773217,-0.983416],[4.787186,6.692875,-9.467388],[-7.109983,2.580003,1.770718],[-0.682441,-0.497904,3.958443],[-8.935402,9.580205,5.747731],[-7.695453,-8.160642,-0.207154],[-6.924234,-7.390251,-4.142980],[5.657494,-0.556052,-4.764275],[3.430642,-1.613909,-0.072182],[4.551239,5.633398,4.487465],[8.925462,2.012983,8.907824],[-7.160761,7.896361,-1.606259],[7.840099,-5.953835,-5.687126],[5.195139,-5.543722,2.175091],[-1.085216,0.481701,2.859612],[-4.397735,-8.178222,4.936145],[6.902242,5.407449,-0.476760],[-8.582068,3.572749,-5.157747],[1.092595,5.798151,0.782220],[-5.500232,9.912523,-5.335440],[0.520484,2.886797,-9.428770],[3.165086,-1.490308,7.248061],[-4.730929,9.648123,-6.247677],[8.207083,0.321202,4.666544],[-2.923778,-5.456622,1.849293],[-4.174594,2.249859,-8.918376],[-4.063959,-9.139328,4.271994],[-0.097776,9.183150,3.413978],[1.130173,-5.605589,-3.094490],[4.940099,8.751173,-9.984503],[-5.833828,4.652357,0.977660],[-5.984260,-2.172022,-2.892615],[-3.270826,8.759343,-6.035968],[1.833911,-7.928024,2.422869],[-9.396547,7.664469,-6.960357],[-1.857676,-1.720100,5.742139],[-1.895633,-4.537057,-6.786252],[-8.874140,7.250928,-3.197818],[-6.818608,7.443249,9.310480],[2.589656,5.013697,-1.278124],[5.943471,6.227906,-1.199338],[3.465383,-6.567762,5.925532],[-6.217787,9.579386,-2.849947],[-9.348501,4.328798,8.760181],[-1.982383,-1.903046,9.675401],[5.740359,-9.926422,-7.774819],[9.547541,8.656873,8.681093],[-0.286064,-7.247449,8.792980],[-6.637342,9.799285,9.495066],[-7.584299,-4.996148,-3.699655],[0.972203,-8.574712,-6.644994],[3.644940,-6.276634,1.901822],[8.365934,4.550166,4.976971],[-8.205520,-3.937091,8.542251],[-8.961536,1.781176,5.361721],[-0.225990,-3.454142,-5.854592],[-1.933380,-9.481525,-6.158621],[-5.769268,-5.072443,3.846331],[0.145218,2.536466,2.902069],[6.385364,-4.344342,-3.133264],[-7.975975,7.012315,6.584414],[5.112875,7.102739,-5.957506],[5.048746,4.139264,6.502221],[2.043114,6.028636,-3.701841],[-9.267867,-2.445419,9.379756],[-8.243773,-2.968242,-2.506459],[3.028924,1.143411,1.983378],[-0.067614,-4.584014,-7.744543],[-0.968171,-3.410074,-6.006098],[-4.632551,6.364903,-8.016044],[-2.274098,-1.165008,-8.589925],[-3.751841,7.225157,-7.109436],[-6.221805,2.327426,-6.352947],[-5.801135,-2.480555,-2.479155],[4.314146,9.446267,-3.779501],[8.219540,-3.809200,7.377186],[-8.733021,-3.092301,4.706625],[2.463657,6.249312,-2.935931],[-2.325902,-1.201230,-8.241313],[-7.715640,4.713887,-9.889195],[5.077050,-2.121054,7.541767],[-1.145851,-0.750495,4.413546],[6.659341,3.353442,-6.127458],[-4.046776,-1.592960,8.672361],[-1.367799,-2.466924,4.073638],[2.097351,5.009769,-3.007941],[1.560953,-9.247964,6.667022],[6.432622,-8.579253,4.083763],[-9.282249,-8.896087,-1.065815],[9.152759,2.799939,-9.320954],[-7.920069,5.476941,-0.128384],[4.918931,-1.823193,5.999653],[5.631583,-8.014878,0.097213],[-2.214106,5.706301,-6.407728],[-9.732591,-2.243657,9.174424],[-8.853169,-2.671680,2.284383],[8.378226,-4.515655,5.042249],[6.479134,-1.550647,-6.189458],[1.426002,-6.175813,6.350795],[-6.624340,-9.879680,1.634208],[-1.517295,-2.562098,5.987366],[6.128823,-9.338514,-3.321313],[5.738159,-8.025169,4.297758],[3.560642,-6.294426,-8.229363],[-3.925912,5.788558,0.278932],[-9.223050,6.485213,9.270412],[8.568827,1.293508,-6.467738],[8.250659,-3.658356,-3.625668],[-7.089237,-6.847404,1.780249],[7.432488,-2.437079,-3.518361],[2.556318,4.585753,2.394353],[-5.794895,1.927628,-3.271893],[0.487941,6.719415,-9.407713],[-7.705098,7.548979,3.122015],[3.524534,-6.168026,6.807175],[8.538633,1.250009,0.271180],[4.504244,2.653484,-9.043501],[9.534920,7.564330,4.448908],[-5.521267,9.049881,-3.697960],[-5.286895,9.316168,2.354084],[7.273638,5.124563,0.532764],[-7.772890,-5.758555,4.573781],[9.405437,2.555476,8.168363],[-0.184828,-4.388369,6.861511],[-6.962059,-8.571358,-7.683983],[5.325441,-5.999687,6.199595],[0.629728,4.814469,8.859948],[-2.576204,6.874784,-3.433080],[-1.403279,-7.927437,-9.145835],[-6.761778,9.376509,-1.542486],[-3.928435,4.833170,-9.265166],[9.516370,-0.058312,-5.680030],[6.656240,2.054643,-6.991226],[-0.266086,-4.196798,7.453375],[-9.228491,-6.731569,-0.079106],[-3.242321,-4.174685,8.185270],[-7.102967,-5.556843,3.980977],[-2.483551,-2.272474,8.713645],[6.090638,5.667213,-8.186483],[-5.890428,-0.677852,-5.159733],[8.906623,-7.255740,8.135115],[9.294810,-7.868860,-1.866239],[-6.335213,-9.520856,-2.919848],[2.409052,6.024173,-7.239751],[6.501175,7.634912,9.039117],[-6.403787,-4.105986,-7.241631],[-1.058091,7.375030,0.583619],[6.994280,-2.340963,-2.183355],[8.393044,1.379165,2.712444],[1.171953,-1.605174,-3.053549],[-0.617979,8.881616,1.788518],[-7.609560,2.349335,-5.591546],[-6.736033,-7.749916,-4.524565],[4.444350,-0.326510,-3.393743],[-1.306533,-0.355768,-0.623501],[-0.192205,3.534359,7.961809],[0.610825,-2.019305,4.914494],[-4.817216,-7.788215,3.107623],[4.712616,6.057961,2.645488],[8.824430,3.698461,-3.789785],[1.750755,-9.435082,-0.298057],[1.988671,-5.625822,-7.106939],[1.714842,2.413526,8.204221],[-1.647767,4.772076,-5.746383],[6.799892,7.434123,4.731810],[0.319295,-8.832323,0.909472],[3.889351,1.951768,3.744952],[-3.644948,-0.721607,-1.689341],[-5.539586,-4.423183,-0.075570],[-5.581624,8.412000,-1.304377],[1.961967,1.753445,-7.516349],[0.165368,8.799969,2.418776],[-1.006274,9.414600,7.056001],[5.049726,-2.183915,4.257169],[-1.141995,5.380513,0.200524],[8.907743,3.572646,0.878655],[8.940445,8.889404,2.870207],[2.333352,-3.255038,-2.509494],[2.783747,2.497349,8.007646],[-3.387868,-9.070092,9.279522],[-1.403361,5.347309,9.538188],[5.632546,5.200227,-7.761771],[0.307157,-6.314859,-8.024574],[3.722669,-7.927816,-7.897146],[7.689760,-9.922683,-2.789697],[-0.075288,-4.988571,-6.218375],[-6.721053,-5.118240,-0.036839],[-4.207035,6.507124,-2.482678],[5.722136,2.102842,-0.491360],[3.010179,-7.028027,-4.362074],[-2.400109,4.411255,-8.812236],[-4.022397,6.027738,-3.455468],[5.429032,3.506839,3.260877],[8.671513,3.834460,2.326247],[-3.873350,-4.720713,-6.681800],[9.347471,7.543453,9.372741],[-3.728657,-1.396251,-7.554004],[5.110203,0.750251,-3.945174],[-7.920214,9.992641,-3.991660],[-1.597167,7.888587,-8.626650],[5.613991,-7.573961,-4.377810],[-8.701117,-9.921689,2.858968],[4.710731,-5.080023,5.015146],[0.877454,-5.379888,-3.405248],[5.901139,4.316144,8.919743],[-7.872851,4.697739,7.331040],[-3.866804,-0.373671,-8.444216],[-9.144735,9.605168,-3.150479],[7.683635,-3.110576,-3.847968],[2.339720,1.421020,-0.567243],[-7.034956,7.730944,-5.084965],[0.495851,-1.046751,2.156052],[7.046290,-8.702107,-4.192666],[-4.387527,1.504598,-2.913321],[7.432641,6.348736,-4.854410],[5.912791,7.828384,0.781091],[3.747912,-2.892146,-5.777852],[-2.612574,2.591960,-3.592342],[3.992858,-2.959846,-7.968816],[-2.416030,-2.891602,-1.563185],[9.755492,1.366283,8.138558],[-5.106199,5.822301,-3.266711],[-5.760233,-5.222419,-8.298774],[-7.215479,1.763629,-5.604565],[8.020543,9.309330,-8.909631],[-7.989147,1.620913,-4.025334],[-7.261191,0.852550,-6.893667],[-8.663924,-9.840950,-1.737008],[3.281445,-3.116381,4.923802],[-0.460133,2.437809,-9.544351],[-2.574028,8.344726,-1.624661],[-9.382288,7.342108,1.257111],[3.122670,-0.043712,-4.414228],[-4.781842,2.753799,-3.465446],[6.538520,4.001141,-8.982607],[8.752181,0.527011,-3.892781],[-1.324989,-4.844788,-7.437926],[6.525316,0.689950,8.518969],[8.888414,-9.281269,-5.815161],[6.913823,2.444656,-2.000476],[5.161417,-1.618855,-5.389239],[-4.686758,1.343757,-0.677595],[-3.283853,-8.007972,-2.744278],[3.416749,2.398809,-6.312053],[-0.202583,-6.697068,9.714193],[1.638436,-6.258930,7.100421],[-5.107811,5.586589,-6.371272],[7.475346,-3.766890,4.216690],[5.651504,-6.008835,-6.102083],[-7.281194,-0.853222,-9.761008],[8.229510,-7.528111,-5.558871],[4.886519,-5.375839,-9.366711],[-7.431937,5.799749,9.213254],[2.052244,-5.632743,-3.441832],[4.229549,7.456056,1.383338],[4.244783,-4.887559,-9.707510],[8.563001,8.886416,-6.897563],[-1.934191,-3.518073,3.844674],[-4.804188,-1.591877,-6.432631],[4.400658,-7.528357,-5.202960],[1.594826,-6.943314,0.009735],[-3.500423,-4.088293,-0.212409],[4.329184,-0.737507,7.983072],[-5.158236,-3.209361,-1.624990],[9.830078,-4.554776,-8.546669],[8.295240,-3.534538,2.188868],[-4.248713,-9.620470,-1.139361],[1.042896,-1.203555,1.069601],[-0.735157,0.957170,-1.881548],[4.295563,-5.386065,1.301491],[-5.527817,-8.409860,6.085012],[8.314345,0.418457,-3.587795],[-3.878964,8.210086,1.117362],[-7.699013,-0.810798,4.296751],[2.203748,-0.623795,-0.196710],[1.392628,-5.506459,-0.922000],[3.042595,4.398645,2.568998],[-4.131393,-8.659404,-5.073713],[-4.437804,9.569831,8.322335],[-6.308260,0.353710,-1.840157],[-7.113430,0.973750,3.886700],[-5.961583,0.437888,5.813764],[-9.362172,-3.438493,3.595921],[-3.412128,-2.505248,6.506308],[-6.380808,-8.624904,-4.385786],[-8.590989,-8.452666,-0.769958],[0.568098,5.031348,-9.949154],[9.964492,-5.780032,9.848225],[4.568742,-9.703958,5.075516],[3.955827,7.977053,-9.593792],[-9.444572,-4.036597,-6.624817],[-5.817705,-5.672104,-7.098367],[-3.276431,5.321271,4.108335],[-7.832932,-1.334844,-7.101841],[-2.940355,-1.618440,-0.045830],[-7.586890,7.206289,1.044637],[2.850470,2.856229,5.553291],[-3.881469,4.644294,4.627667],[9.654128,4.209037,-9.741699],[3.040482,1.882775,-3.585429],[-4.757779,-1.927527,3.889131],[0.733395,2.255161,-8.553828],[-2.786750,-8.159145,-2.184685],[1.687011,-8.254960,-5.913856],[-5.811760,2.293405,2.206636],[6.131198,-9.293241,8.966154],[-5.802051,-3.838616,1.439948],[-3.439473,-0.866839,0.131810],[-4.904655,-9.665128,-3.214782],[3.835355,-2.195260,-4.653426],[-4.794377,-8.363770,-1.576867],[9.578642,-9.872379,-4.845759],[-4.973735,-8.358075,-0.137603],[-4.401966,-0.946226,5.619303],[0.721025,2.736422,8.145296],[0.248981,-1.271448,0.630747],[3.288100,9.975660,-2.199045],[7.814558,-5.358878,1.007508],[5.038040,-6.656964,-7.746284],[-6.095499,-6.347976,-6.938712],[-9.134665,-6.941400,5.037634],[7.990296,-4.337776,-9.082454],[-4.676411,8.628362,5.591788],[5.433080,-7.239738,-2.628558],[9.564792,-3.293166,1.199085],[-1.922186,-0.419769,-7.101737],[-0.813458,-0.178586,-8.597977],[5.608327,-3.070032,8.887444],[-8.525180,5.697491,-7.652911],[8.829829,-9.169605,-6.175240],[-2.001238,2.392043,1.217545],[-2.987395,4.821499,-1.444398],[-0.817654,9.643888,-9.820015],[-2.532420,2.003646,-8.236823],[-0.928773,-4.127166,6.366037],[-8.936523,9.190756,0.153699],[9.533495,-2.743320,-7.550115],[-6.184507,-4.589385,-8.985537],[-7.922363,0.067588,-1.610494],[-0.264088,-9.151310,4.371312],[5.001938,4.181448,-5.971308],[6.185649,9.332449,-0.247708],[-0.988537,-7.739228,-7.822293],[4.337346,2.590322,3.047745],[-4.609110,-4.999875,-8.165381],[8.033584,4.528120,-1.968386],[1.263088,3.323209,3.840045],[-8.220512,-6.690523,-3.539362],[9.944989,-3.050631,2.809331]], dtype = "float64")#candidate|2146|(490, 3)|const|float64
var_2147 = relay.var("var_2147", dtype = "uint64", shape = ())#candidate|2147|()|var|uint64
call_2145 = relay.TupleGetItem(func_1461_call(relay.reshape(const_2146.astype('float64'), [15, 7, 14]), relay.reshape(var_2147.astype('uint64'), []), ), 0)
call_2148 = relay.TupleGetItem(func_1464_call(relay.reshape(const_2146.astype('float64'), [15, 7, 14]), relay.reshape(var_2147.astype('uint64'), []), ), 0)
output = relay.Tuple([call_2134,call_2136,call_2145,const_2146,var_2147,])
output2 = relay.Tuple([call_2135,call_2137,call_2148,const_2146,var_2147,])
func_2152 = relay.Function([var_2147,], output)
mod['func_2152'] = func_2152
mod = relay.transform.InferType()(mod)
var_2153 = relay.var("var_2153", dtype = "uint64", shape = ())#candidate|2153|()|var|uint64
output = func_2152(var_2153)
func_2154 = relay.Function([var_2153], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2207 = relay.TupleGetItem(func_1896_call(), 0)
call_2208 = relay.TupleGetItem(func_1897_call(), 0)
var_2212 = relay.var("var_2212", dtype = "float64", shape = (8, 12, 3))#candidate|2212|(8, 12, 3)|var|float64
bop_2213 = relay.divide(call_2207.astype('float32'), relay.reshape(var_2212.astype('float32'), relay.shape_of(call_2207))) # shape=(8, 12, 3)
bop_2216 = relay.divide(call_2208.astype('float32'), relay.reshape(var_2212.astype('float32'), relay.shape_of(call_2208))) # shape=(8, 12, 3)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2219 = relay.TupleGetItem(func_1896_call(), 0)
call_2220 = relay.TupleGetItem(func_1897_call(), 0)
output = relay.Tuple([bop_2213,call_2219,])
output2 = relay.Tuple([bop_2216,call_2220,])
func_2229 = relay.Function([var_2212,], output)
mod['func_2229'] = func_2229
mod = relay.transform.InferType()(mod)
var_2230 = relay.var("var_2230", dtype = "float64", shape = (8, 12, 3))#candidate|2230|(8, 12, 3)|var|float64
output = func_2229(var_2230)
func_2231 = relay.Function([var_2230], output)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_2309 = relay.TupleGetItem(func_1812_call(), 0)
call_2310 = relay.TupleGetItem(func_1814_call(), 0)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_2329 = func_1850_call()
call_2330 = func_1850_call()
bop_2345 = relay.not_equal(call_2329.astype('bool'), relay.reshape(call_2309.astype('bool'), relay.shape_of(call_2329))) # shape=(8, 12, 3)
bop_2348 = relay.not_equal(call_2330.astype('bool'), relay.reshape(call_2310.astype('bool'), relay.shape_of(call_2330))) # shape=(8, 12, 3)
uop_2357 = relay.sigmoid(call_2309.astype('float32')) # shape=(8, 12, 3)
uop_2359 = relay.sigmoid(call_2310.astype('float32')) # shape=(8, 12, 3)
func_2104_call = mod.get_global_var('func_2104')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_2361 = func_2104_call(relay.reshape(uop_2357.astype('float64'), [8, 12, 3]))
call_2362 = func_2104_call(relay.reshape(uop_2357.astype('float64'), [8, 12, 3]))
output = relay.Tuple([bop_2345,uop_2357,call_2361,])
output2 = relay.Tuple([bop_2348,uop_2359,call_2362,])
func_2373 = relay.Function([], output)
mod['func_2373'] = func_2373
mod = relay.transform.InferType()(mod)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mutated_mod.get_global_var('func_2373')
call_2374 = func_2373_call()
output = call_2374
func_2375 = relay.Function([], output)
mutated_mod['func_2375'] = func_2375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_2426 = relay.TupleGetItem(func_2373_call(), 2)
call_2427 = relay.TupleGetItem(func_2375_call(), 2)
output = call_2426
output2 = call_2427
func_2428 = relay.Function([], output)
mod['func_2428'] = func_2428
mod = relay.transform.InferType()(mod)
mutated_mod['func_2428'] = func_2428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mutated_mod.get_global_var('func_2428')
call_2429 = func_2428_call()
output = call_2429
func_2430 = relay.Function([], output)
mutated_mod['func_2430'] = func_2430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_2438 = relay.TupleGetItem(func_1812_call(), 0)
call_2439 = relay.TupleGetItem(func_1814_call(), 0)
var_2448 = relay.var("var_2448", dtype = "float64", shape = (8, 12, 3))#candidate|2448|(8, 12, 3)|var|float64
bop_2449 = relay.logical_and(call_2438.astype('bool'), relay.reshape(var_2448.astype('bool'), relay.shape_of(call_2438))) # shape=(8, 12, 3)
bop_2452 = relay.logical_and(call_2439.astype('bool'), relay.reshape(var_2448.astype('bool'), relay.shape_of(call_2439))) # shape=(8, 12, 3)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_2455 = relay.TupleGetItem(func_1896_call(), 0)
call_2456 = relay.TupleGetItem(func_1897_call(), 0)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
const_2461 = relay.const(0.039403, dtype = "float32")#candidate|2461|()|const|float32
call_2460 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2461.astype('float32'), [])), 1)
call_2462 = relay.TupleGetItem(func_1672_call(relay.reshape(const_2461.astype('float32'), [])), 1)
func_1217_call = mod.get_global_var('func_1217')
func_1220_call = mutated_mod.get_global_var('func_1220')
var_2466 = relay.var("var_2466", dtype = "uint64", shape = (945,))#candidate|2466|(945,)|var|uint64
var_2467 = relay.var("var_2467", dtype = "uint64", shape = (216,))#candidate|2467|(216,)|var|uint64
call_2465 = relay.TupleGetItem(func_1217_call(relay.reshape(var_2466.astype('uint64'), [15, 9, 7]), relay.reshape(var_2467.astype('uint64'), [216,]), ), 6)
call_2468 = relay.TupleGetItem(func_1220_call(relay.reshape(var_2466.astype('uint64'), [15, 9, 7]), relay.reshape(var_2467.astype('uint64'), [216,]), ), 6)
output = relay.Tuple([bop_2449,call_2455,call_2460,const_2461,call_2465,var_2466,var_2467,])
output2 = relay.Tuple([bop_2452,call_2456,call_2462,const_2461,call_2468,var_2466,var_2467,])
func_2480 = relay.Function([var_2448,var_2466,var_2467,], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
var_2481 = relay.var("var_2481", dtype = "float64", shape = (8, 12, 3))#candidate|2481|(8, 12, 3)|var|float64
var_2482 = relay.var("var_2482", dtype = "uint64", shape = (945,))#candidate|2482|(945,)|var|uint64
var_2483 = relay.var("var_2483", dtype = "uint64", shape = (216,))#candidate|2483|(216,)|var|uint64
output = func_2480(var_2481,var_2482,var_2483,)
func_2484 = relay.Function([var_2481,var_2482,var_2483,], output)
mutated_mod['func_2484'] = func_2484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_2488 = func_1850_call()
call_2489 = func_1850_call()
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_2493 = relay.TupleGetItem(func_1812_call(), 0)
call_2494 = relay.TupleGetItem(func_1814_call(), 0)
output = relay.Tuple([call_2488,call_2493,])
output2 = relay.Tuple([call_2489,call_2494,])
func_2504 = relay.Function([], output)
mod['func_2504'] = func_2504
mod = relay.transform.InferType()(mod)
mutated_mod['func_2504'] = func_2504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2504_call = mutated_mod.get_global_var('func_2504')
call_2505 = func_2504_call()
output = call_2505
func_2506 = relay.Function([], output)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2504_call = mod.get_global_var('func_2504')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_2507 = relay.TupleGetItem(func_2504_call(), 0)
call_2508 = relay.TupleGetItem(func_2506_call(), 0)
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
const_2512 = relay.const(9.203111, dtype = "float32")#candidate|2512|()|const|float32
call_2511 = relay.TupleGetItem(func_1670_call(relay.reshape(const_2512.astype('float32'), [])), 1)
call_2513 = relay.TupleGetItem(func_1672_call(relay.reshape(const_2512.astype('float32'), [])), 1)
output = relay.Tuple([call_2507,call_2511,const_2512,])
output2 = relay.Tuple([call_2508,call_2513,const_2512,])
func_2518 = relay.Function([], output)
mod['func_2518'] = func_2518
mod = relay.transform.InferType()(mod)
mutated_mod['func_2518'] = func_2518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mutated_mod.get_global_var('func_2518')
call_2519 = func_2518_call()
output = call_2519
func_2520 = relay.Function([], output)
mutated_mod['func_2520'] = func_2520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_2539 = relay.TupleGetItem(func_2373_call(), 2)
call_2540 = relay.TupleGetItem(func_2375_call(), 2)
func_771_call = mod.get_global_var('func_771')
func_776_call = mutated_mod.get_global_var('func_776')
var_2576 = relay.var("var_2576", dtype = "float32", shape = (1344,))#candidate|2576|(1344,)|var|float32
const_2577 = relay.const([8,-7,-3,-8,-8,2,-5,-8,5,7,-6,9,-6,1,1,-8,-7,4,1,3,-8,-7,-5,-9,8,-2,-2,-6,-3,8,-8,-5,-3,-3,10,6,-10,2,7,6,7,4,8,8,9,-9,4,10,-2,2,10,7,8,-5,-1,4,8,-5,-10,-10,-9,-5,-3,-10,1,-5,7,-3,3,4,9,-4,-8,3,-4,-6,-4,-5,10,-9,7,-4,-10,-1,-4,-9,-3,-2,-1,-8,10,7,-6,10,-10,-1,-5,-1,-3,-7,9,2,8,4,10,4,5,3,-6,1,2,-4,6,-1,10,-6,6,3,-1,-3,9,1,1,-9,-9,-4,2,-9,3,-7,-9,-4,-10,-9,5,2,-1,10,-8,-8,9,9,8,-10,-7,-6,8,1,6,-1,-4,-5,-7,-7,-3,-4,-7,-6,9,7,-10,4,2,8,-7,-1,3,8,-2,-8,9,9,-5,2,8,-1,2,-8,3,6,-6,-3,-2,2,-5,9,2,-10,3,-2,1,9,1,10,7,5,3,-6,-8,-1,7,-7,-9,6,8,3,1,5,-3,-5,-2,-6,8,-2,-8,-9,4,-6,2,-7,7,-2,-1,-2,3,-5,-8,10,2,-2,8,7,-7,6,-4,2,10,2,10,-6,-1,-9,-3,-5,-2,5,-10,1,5,9,-10,-1,-4,2,6,8,-2,-6,-6,7,-2,8,-7,9,6,-3,8,7,-8,-7,-10,4,2,6,-3,-7,-5,6,4,6,-5,10,-3,-9,-7,-7,-1,-10,1,2,9,10,4,8,3,-2,2,-6,-9,8,-1,-5,-4,-7,3,2,1,-7,-9,-5,-8,-3,-6,-7,-3,-1,8,9,2,-10,7,6,5,3,8,-8,-4,1,1,-5,3,-9,3,-4,5,-2,7,2,-1,7,4,8,-8,8,-6,-4,-10,-9,-2,-9,-8,-9,9,8,6,-1,-3,-8,7,10,10,2,8,2,6,-5,2,-1,5,3,7,2,1,10,-6,3,6,-6,9,-4,-1,9,-5,6,-2,-1,-3,8,3,-3], dtype = "uint8")#candidate|2577|(390,)|const|uint8
var_2578 = relay.var("var_2578", dtype = "float64", shape = (1274,))#candidate|2578|(1274,)|var|float64
call_2575 = relay.TupleGetItem(func_771_call(relay.reshape(var_2576.astype('float32'), [14, 12, 8]), relay.reshape(var_2576.astype('float32'), [14, 12, 8]), relay.reshape(const_2577.astype('uint8'), [390, 1]), relay.reshape(var_2578.astype('float64'), [1274,]), ), 0)
call_2579 = relay.TupleGetItem(func_776_call(relay.reshape(var_2576.astype('float32'), [14, 12, 8]), relay.reshape(var_2576.astype('float32'), [14, 12, 8]), relay.reshape(const_2577.astype('uint8'), [390, 1]), relay.reshape(var_2578.astype('float64'), [1274,]), ), 0)
output = relay.Tuple([call_2539,call_2575,var_2576,const_2577,var_2578,])
output2 = relay.Tuple([call_2540,call_2579,var_2576,const_2577,var_2578,])
func_2584 = relay.Function([var_2576,var_2578,], output)
mod['func_2584'] = func_2584
mod = relay.transform.InferType()(mod)
mutated_mod['func_2584'] = func_2584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2584_call = mutated_mod.get_global_var('func_2584')
var_2586 = relay.var("var_2586", dtype = "float32", shape = (1344,))#candidate|2586|(1344,)|var|float32
var_2587 = relay.var("var_2587", dtype = "float64", shape = (1274,))#candidate|2587|(1274,)|var|float64
call_2585 = func_2584_call(var_2586,var_2587,)
output = call_2585
func_2588 = relay.Function([var_2586,var_2587,], output)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_2629 = relay.TupleGetItem(func_2518_call(), 1)
call_2630 = relay.TupleGetItem(func_2520_call(), 1)
uop_2637 = relay.cosh(call_2629.astype('float64')) # shape=(13, 7, 14)
uop_2639 = relay.cosh(call_2630.astype('float64')) # shape=(13, 7, 14)
uop_2645 = relay.exp(uop_2637.astype('float32')) # shape=(13, 7, 14)
uop_2647 = relay.exp(uop_2639.astype('float32')) # shape=(13, 7, 14)
uop_2653 = relay.acos(uop_2645.astype('float32')) # shape=(13, 7, 14)
uop_2655 = relay.acos(uop_2647.astype('float32')) # shape=(13, 7, 14)
bop_2657 = relay.floor_divide(uop_2637.astype('float64'), relay.reshape(call_2629.astype('float64'), relay.shape_of(uop_2637))) # shape=(13, 7, 14)
bop_2660 = relay.floor_divide(uop_2639.astype('float64'), relay.reshape(call_2630.astype('float64'), relay.shape_of(uop_2639))) # shape=(13, 7, 14)
uop_2673 = relay.tan(bop_2657.astype('float32')) # shape=(13, 7, 14)
uop_2675 = relay.tan(bop_2660.astype('float32')) # shape=(13, 7, 14)
output = relay.Tuple([uop_2653,uop_2673,])
output2 = relay.Tuple([uop_2655,uop_2675,])
func_2686 = relay.Function([], output)
mod['func_2686'] = func_2686
mod = relay.transform.InferType()(mod)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mutated_mod.get_global_var('func_2686')
call_2687 = func_2686_call()
output = call_2687
func_2688 = relay.Function([], output)
mutated_mod['func_2688'] = func_2688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_2739 = relay.TupleGetItem(func_2373_call(), 0)
call_2740 = relay.TupleGetItem(func_2375_call(), 0)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
const_2752 = relay.const(-7, dtype = "uint64")#candidate|2752|()|const|uint64
call_2751 = relay.TupleGetItem(func_2152_call(relay.reshape(const_2752.astype('uint64'), [])), 2)
call_2753 = relay.TupleGetItem(func_2154_call(relay.reshape(const_2752.astype('uint64'), [])), 2)
var_2782 = relay.var("var_2782", dtype = "float32", shape = (15, 7, 14))#candidate|2782|(15, 7, 14)|var|float32
bop_2783 = relay.mod(call_2751.astype('float64'), relay.reshape(var_2782.astype('float64'), relay.shape_of(call_2751))) # shape=(15, 7, 14)
bop_2786 = relay.mod(call_2753.astype('float64'), relay.reshape(var_2782.astype('float64'), relay.shape_of(call_2753))) # shape=(15, 7, 14)
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2796 = relay.TupleGetItem(func_2152_call(relay.reshape(const_2752.astype('uint64'), [])), 0)
call_2797 = relay.TupleGetItem(func_2154_call(relay.reshape(const_2752.astype('uint64'), [])), 0)
output = relay.Tuple([call_2739,const_2752,bop_2783,call_2796,])
output2 = relay.Tuple([call_2740,const_2752,bop_2786,call_2797,])
func_2798 = relay.Function([var_2782,], output)
mod['func_2798'] = func_2798
mod = relay.transform.InferType()(mod)
var_2799 = relay.var("var_2799", dtype = "float32", shape = (15, 7, 14))#candidate|2799|(15, 7, 14)|var|float32
output = func_2798(var_2799)
func_2800 = relay.Function([var_2799], output)
mutated_mod['func_2800'] = func_2800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_2975 = relay.TupleGetItem(func_1812_call(), 0)
call_2976 = relay.TupleGetItem(func_1814_call(), 0)
func_2480_call = mod.get_global_var('func_2480')
func_2484_call = mutated_mod.get_global_var('func_2484')
var_3016 = relay.var("var_3016", dtype = "uint64", shape = (945,))#candidate|3016|(945,)|var|uint64
var_3017 = relay.var("var_3017", dtype = "uint64", shape = (216,))#candidate|3017|(216,)|var|uint64
call_3015 = relay.TupleGetItem(func_2480_call(relay.reshape(call_2975.astype('float64'), [8, 12, 3]), relay.reshape(var_3016.astype('uint64'), [945,]), relay.reshape(var_3017.astype('uint64'), [216,]), ), 5)
call_3018 = relay.TupleGetItem(func_2484_call(relay.reshape(call_2975.astype('float64'), [8, 12, 3]), relay.reshape(var_3016.astype('uint64'), [945,]), relay.reshape(var_3017.astype('uint64'), [216,]), ), 5)
bop_3022 = relay.not_equal(call_3015.astype('bool'), relay.reshape(var_3016.astype('bool'), relay.shape_of(call_3015))) # shape=(945,)
bop_3025 = relay.not_equal(call_3018.astype('bool'), relay.reshape(var_3016.astype('bool'), relay.shape_of(call_3018))) # shape=(945,)
uop_3029 = relay.exp(bop_3022.astype('float64')) # shape=(945,)
uop_3031 = relay.exp(bop_3025.astype('float64')) # shape=(945,)
output = relay.Tuple([call_2975,var_3017,uop_3029,])
output2 = relay.Tuple([call_2976,var_3017,uop_3031,])
func_3047 = relay.Function([var_3016,var_3017,], output)
mod['func_3047'] = func_3047
mod = relay.transform.InferType()(mod)
var_3048 = relay.var("var_3048", dtype = "uint64", shape = (945,))#candidate|3048|(945,)|var|uint64
var_3049 = relay.var("var_3049", dtype = "uint64", shape = (216,))#candidate|3049|(216,)|var|uint64
output = func_3047(var_3048,var_3049,)
func_3050 = relay.Function([var_3048,var_3049,], output)
mutated_mod['func_3050'] = func_3050
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3084 = relay.const([[[9.643261],[9.287802],[-8.839225],[6.942442],[-1.424024],[-7.228951],[-3.555069],[-4.876500],[9.351036],[-4.603932],[-2.132384],[0.309614],[-4.043746],[-3.138550],[9.851265],[3.469797]],[[3.330370],[-9.770276],[2.373314],[-9.753148],[3.373852],[5.537774],[5.027764],[0.340483],[9.791714],[-5.883661],[-5.924341],[3.434851],[7.905813],[4.983780],[4.105743],[8.394147]],[[5.684595],[8.768296],[5.091562],[7.869948],[-9.004351],[9.767609],[-5.176502],[-0.095830],[-5.509778],[-3.871587],[-5.280973],[6.683820],[8.851421],[-2.178229],[3.101754],[9.103836]],[[7.724002],[-4.430456],[-3.555674],[6.687776],[-0.845779],[-6.531533],[4.924867],[-2.993449],[3.997029],[5.958678],[-9.985777],[8.955150],[8.862288],[-7.711361],[-1.684576],[6.157960]],[[-9.720082],[-0.161712],[7.042615],[1.113022],[-2.222724],[2.132432],[-6.501731],[1.078581],[-5.927706],[4.247228],[2.592682],[-5.302258],[-0.227700],[-7.225776],[-9.927456],[-8.941787]],[[4.927180],[2.323259],[7.994060],[-8.372660],[8.856045],[2.808671],[5.786766],[3.051386],[8.155808],[-0.442889],[-6.702478],[6.791981],[8.511197],[5.590329],[-0.909455],[0.831767]],[[-5.480451],[-2.782178],[2.509389],[-5.882681],[-4.275307],[8.400935],[-6.846296],[8.831279],[8.905170],[0.773720],[-5.493784],[9.918043],[-4.537512],[2.126876],[-5.805215],[-6.381053]],[[-9.295821],[-8.006573],[4.768341],[-5.789833],[0.098403],[6.295074],[-0.917956],[5.892347],[-3.705164],[6.314035],[-4.028099],[-6.812616],[0.016129],[2.236450],[-5.919113],[3.227667]],[[-2.884334],[4.876009],[-9.740102],[-7.741149],[8.420121],[0.844088],[-4.308164],[3.377799],[3.082315],[-1.244557],[6.164389],[-9.676016],[-5.066510],[5.982028],[8.038886],[5.703838]],[[-0.423967],[7.386223],[-0.995185],[-9.449275],[3.477323],[-0.583921],[7.889440],[-2.651421],[-7.503243],[-1.835563],[-5.416223],[5.795792],[-9.987385],[8.104252],[8.126811],[7.234343]],[[3.939354],[-1.379668],[-4.659300],[8.171021],[-6.833560],[-0.310225],[-8.347810],[3.927120],[3.023239],[-7.961440],[-2.784322],[-5.522618],[-4.476051],[0.258775],[5.003445],[-6.321030]],[[2.704124],[-5.381774],[5.190612],[-1.769459],[2.748380],[8.847881],[3.057346],[8.024668],[-8.475357],[-2.762401],[4.398642],[7.950431],[8.087528],[6.251855],[-2.216603],[1.007638]],[[-0.308362],[7.301441],[-2.969383],[0.523404],[-8.990381],[9.777506],[9.117732],[-2.421161],[-5.277699],[6.177340],[-4.264134],[-6.240523],[4.700928],[-4.705166],[0.489963],[7.750644]],[[7.358342],[6.215713],[-5.760692],[-8.319886],[-0.829741],[3.656993],[-7.406598],[1.137295],[-9.088847],[-4.582807],[-2.023981],[-2.541214],[-5.033626],[9.501631],[6.124491],[0.478037]],[[8.601873],[-9.000195],[3.552421],[1.902880],[-3.397746],[-3.564325],[-1.536408],[6.534529],[-8.156428],[1.697969],[-7.151887],[-2.776434],[-0.052839],[-7.206628],[-7.090202],[7.029019]]], dtype = "float32")#candidate|3084|(15, 16, 1)|const|float32
var_3085 = relay.var("var_3085", dtype = "float32", shape = (15, 16, 11))#candidate|3085|(15, 16, 11)|var|float32
bop_3086 = relay.floor_divide(const_3084.astype('float32'), var_3085.astype('float32')) # shape=(15, 16, 11)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_3093 = relay.TupleGetItem(func_2518_call(), 1)
call_3094 = relay.TupleGetItem(func_2520_call(), 1)
const_3101 = relay.const([[[-5.218621,-6.990184,-6.293588,6.285290,-9.719655,0.077518,-6.435547,4.528077,-7.419106,-3.397734,2.115488,-9.968356,-2.354972,9.989736],[1.406719,0.115424,6.539556,2.498490,-4.566722,-3.369522,-6.073291,-5.104436,9.656017,-2.375714,3.002645,6.839723,-5.390218,-7.157847],[-2.474503,0.188710,-9.940178,4.745271,-0.491303,1.355672,-6.541791,4.316056,-1.122363,4.060511,2.903692,0.582893,-0.034191,7.848237],[1.686884,8.245924,-3.815575,3.229435,-2.745616,-4.438679,3.916997,8.143057,0.501535,0.992098,-8.345265,4.055972,-1.185454,-6.727141],[4.477808,8.381446,8.467782,-2.368134,5.393388,6.548607,5.210079,-2.909615,4.509497,-0.794876,-6.262110,-8.352981,-3.235938,9.078173],[5.533556,7.050992,9.743547,1.655608,-4.600399,-2.698413,3.221966,2.313408,-2.652090,-1.187269,5.189573,-6.336913,-1.450089,-5.471459],[1.979338,7.953275,-2.276650,7.098823,5.235122,-0.723468,1.806317,-9.206626,-1.187721,0.699141,3.841161,9.427210,-7.600774,0.318046]],[[-7.725112,9.221809,9.245186,-4.346002,2.439875,8.505157,-6.075438,-5.557919,0.861288,3.949951,-6.843402,-1.412878,-8.621459,-8.285416],[6.017171,5.549690,-5.182288,7.775897,8.907287,3.948119,-9.892039,8.615399,-8.960734,-7.887462,-5.782705,-6.978181,-9.770923,3.025836],[-5.320256,1.659826,7.874232,1.809435,0.446117,9.062699,3.389574,9.349907,9.284970,-8.847045,0.732228,3.885633,-0.100741,-1.452397],[-8.908930,7.221165,-9.411558,7.577282,6.065616,4.241278,8.382446,4.855319,3.377910,-5.029085,-2.664644,-5.218739,4.943626,6.765668],[2.772299,-4.998896,2.288594,-8.552938,-1.424882,4.761510,2.147493,-3.884208,3.932926,8.271216,8.113927,-4.080297,-4.549003,4.500133],[-6.677185,-2.889638,-7.237852,-2.291431,-1.743168,2.293455,-2.966612,9.145546,2.356804,-4.511513,4.223004,8.739927,-7.772047,-4.291580],[3.113032,-9.758017,3.468300,8.164672,-7.844744,6.486772,1.762492,4.160833,-8.525375,2.821469,8.050856,-9.545822,7.402573,2.964879]],[[2.695341,-6.008072,8.069944,0.839309,8.859780,-5.127901,-9.387899,7.711922,1.160284,9.289148,0.012760,2.845911,-6.721079,1.386792],[-3.583940,8.241139,1.203104,-5.531047,6.914946,4.036195,-6.301938,-4.897186,5.118125,-0.487241,-4.325162,-2.087887,-2.395650,-1.413307],[-4.568103,-9.394838,-5.474497,-3.302553,-1.957015,-8.008386,-5.604580,-2.575791,-1.004450,1.958342,-0.542299,-6.170068,2.433981,-8.602253],[-4.605903,5.043484,3.180733,7.420851,4.847235,4.487814,-1.967158,7.150308,4.158923,-8.809896,-0.730898,9.132263,6.095847,-2.991871],[5.431260,1.670562,7.147790,-9.530869,-5.891275,8.303704,7.801212,1.836472,-2.666861,2.868907,1.842330,8.390541,6.515402,-8.123522],[-1.565539,-4.381341,-6.527896,-8.980448,-3.675701,-4.478433,-7.002522,-8.232013,-7.929767,-7.889342,3.746278,-6.614802,8.433652,-7.725482],[-1.276845,1.133681,0.182012,-8.153474,4.115794,-6.755976,1.804950,9.476193,-5.014715,-8.315122,1.616843,0.998295,-4.227923,3.335934]],[[-9.766707,-3.692333,2.606904,8.164209,0.942052,-2.345481,-4.071757,-7.987615,2.925654,-1.198813,-0.206049,-0.556277,9.722900,-0.976287],[6.423341,5.442026,2.669467,-1.550549,3.945361,-7.865665,-5.271421,-5.064537,0.128155,-7.869482,-1.356135,-5.080960,7.249380,-0.858238],[-0.782332,-0.408932,0.250937,4.797647,-5.497584,8.672725,-6.722745,-0.783813,-3.974988,6.904742,-1.438489,-6.800587,-8.303684,6.668095],[5.218731,-1.934024,-8.667997,1.657352,-5.021583,-1.900450,-6.633694,6.429971,3.987848,3.651396,-9.693445,5.155598,0.762273,2.810660],[-5.284140,1.939079,-3.174655,-8.604244,2.778261,-8.088902,-6.631037,-4.820006,-6.100870,4.593253,8.445421,3.489024,-5.112154,-9.074482],[-4.012867,6.898747,-1.459747,-9.028643,0.279631,9.576965,-1.283810,-1.726607,2.476674,-1.405380,-2.383725,1.917521,-7.952115,1.544787],[-4.191852,-6.033214,8.171414,9.109916,6.797604,8.600997,-0.259001,6.579552,-2.485050,-1.779824,-6.709109,-9.931497,-6.867794,-0.950256]],[[-3.091375,5.935335,-9.721198,-5.650870,-8.531399,9.886522,3.935819,-8.482993,-6.029570,2.875916,8.433223,-3.914536,-4.950758,3.758945],[-2.042617,9.816003,0.589017,5.568307,5.419797,-7.745762,-2.462758,3.438121,-3.497366,7.364332,8.634033,6.742193,-0.794018,-4.012403],[-5.514288,-0.552590,3.754642,-9.875547,-6.505939,-2.509892,5.517327,6.282983,5.361436,9.734419,-6.472278,-4.041206,3.908846,3.774041],[9.519942,-9.648751,6.580795,-9.992952,4.855157,1.096720,8.501848,0.243299,-7.136041,-2.332186,4.255541,9.962141,-8.902463,7.133140],[-9.830507,-2.264500,-6.876697,3.088913,5.002302,-2.877750,-5.947517,-9.342445,-1.301742,-4.217288,1.371823,-1.417200,5.485802,-4.835734],[5.553001,2.159009,-4.769549,0.710358,5.023279,-3.051540,-3.990183,6.301916,0.993035,-3.786582,2.493546,-1.306192,7.255875,6.089968],[3.086644,9.216038,4.516773,-0.639909,-9.618748,-5.733124,-0.307083,-5.802942,5.934525,-3.104101,7.350131,-1.546002,4.740868,6.845646]],[[2.741473,8.437702,3.685047,5.445524,-5.475284,-7.476381,1.005832,-8.232569,-7.547085,9.425027,-2.898312,-7.486001,-8.550292,-6.546389],[5.594891,4.914671,-8.876608,2.656038,8.046159,-4.733855,-2.338259,-1.476831,2.857873,-5.978593,5.039340,2.668801,5.482020,1.178953],[8.937771,6.720009,-9.203074,1.773920,-8.954454,-8.670351,-6.436368,3.352684,9.744948,-3.398935,-2.240592,-4.458997,-2.473880,0.771482],[5.219400,-8.629609,-5.711473,-9.742391,-0.870343,5.717989,-3.934643,-1.746591,-8.393394,-4.649778,9.405745,-9.731565,0.290736,9.248302],[-4.192646,8.142868,3.822422,-8.946280,7.347257,-3.538682,3.374832,-3.213334,1.562533,-5.714299,-2.902156,-5.944871,2.481132,0.557028],[6.255189,8.702044,0.584556,-2.976355,-6.563974,-1.661495,8.735339,7.823549,-3.249499,-1.308829,-0.162972,7.090277,6.114449,-4.864708],[-1.485220,0.093888,-5.006325,-7.804103,1.627030,-6.629580,9.575691,-3.176573,-0.794351,1.613048,8.253095,-3.858107,-6.675586,2.617880]],[[9.644183,9.556524,4.200578,-1.580390,5.629559,-2.068018,4.739797,-7.894263,4.833013,9.487026,-1.921959,6.324481,-4.888873,9.747725],[5.940460,8.227664,-1.650337,6.953296,9.389384,0.693782,-2.071456,-0.855396,-8.661976,-7.048358,7.673108,5.301004,8.929846,1.422685],[9.072967,-9.074047,6.507566,2.176181,-5.093683,-8.593865,-6.340745,-0.544779,5.091564,-3.655743,6.046711,6.652105,-8.080388,-3.668556],[3.230162,-1.934128,-9.006090,-7.263153,-6.198916,4.010157,-0.276806,-3.213545,7.578793,5.220639,6.336396,5.068458,-7.010935,2.920248],[7.388354,-7.894617,-5.922203,0.648634,-6.556356,-8.300452,-1.468088,1.285833,4.537481,9.823925,8.377190,2.814414,3.539883,8.621426],[-9.703532,-0.939387,5.019016,-6.276987,2.297639,-3.690720,3.714956,-0.915742,5.654350,-9.259272,-9.024879,0.434276,-6.070589,-1.363950],[3.021289,-9.094937,0.622615,-1.028016,6.413251,-9.656000,-4.123829,-1.230917,5.290222,1.339550,5.838851,-7.828568,-0.311110,5.072129]],[[-5.651891,-2.858207,0.493029,4.973753,9.330897,9.292764,4.593375,-5.307892,7.694678,0.165701,7.919491,0.063914,2.195620,-6.586235],[2.878461,-1.663656,-3.805193,-0.854075,2.205713,-7.549576,3.223677,-4.583312,8.151842,-3.336243,0.204600,2.870660,8.645827,8.095241],[-1.413371,-9.964059,4.369209,-4.292417,8.414862,-5.648639,-6.496688,9.909679,-2.006934,-8.589753,-6.626517,-0.697201,7.879905,3.272592],[-8.836248,8.132353,-8.061528,6.206470,-1.668338,9.570443,-0.597114,3.142334,-5.053255,-9.092813,-8.768785,-3.408169,1.622166,-3.894660],[8.491907,5.785340,3.610083,-8.916383,-7.607564,4.695114,7.667160,-2.795300,-8.411431,3.099728,2.080739,-3.908391,-8.612413,-3.742068],[0.614943,-5.846958,-9.643615,8.417973,-9.557684,-0.553764,0.546739,-6.304691,-7.332445,-3.706172,-8.701798,-7.977747,1.691261,2.376564],[3.595083,2.039440,-9.358155,8.483256,-2.274330,-1.298656,8.883481,1.944688,2.098612,2.079078,6.783727,-8.269295,8.275866,8.085570]],[[9.712110,4.233186,-7.875293,-0.494032,-1.823446,-9.755021,-7.676536,-4.758343,5.738352,-5.784087,9.949073,-4.729791,9.345433,-8.615817],[5.676045,2.372374,-8.882161,-3.697933,7.704658,8.241076,-7.274131,-6.660408,5.554623,-9.275491,2.445926,2.649618,7.457361,1.636627],[-0.622180,3.695555,4.432326,5.991824,9.181160,-7.729250,-3.381736,2.879317,6.576114,6.011148,-7.168160,6.420952,-1.515997,-8.174974],[1.181403,-9.655084,4.286413,2.082350,-5.905690,-4.426558,-3.098042,-1.154495,-9.298895,-4.054833,-3.308306,-5.225504,0.604256,-7.325632],[-9.095198,4.758706,-3.717813,-7.371084,-0.935232,-0.512652,-6.391236,-7.444242,4.975649,1.363938,-4.515841,-3.311405,8.474437,5.303910],[-3.095116,-9.461704,-0.491300,-7.082093,6.699461,-1.478895,0.174158,-8.774789,5.975433,-2.907811,4.465912,6.167947,2.550696,-1.308904],[-3.250987,-2.895673,7.168712,-3.546996,-1.985770,-3.187185,4.147108,8.243532,7.382567,-1.970982,7.766112,-8.438880,-7.889232,-0.964084]],[[3.915707,-5.958534,7.485594,-3.949300,9.578408,-9.665548,-2.128927,2.447961,-5.794042,-7.876224,-0.926591,-3.072206,1.540669,-2.701458],[-1.489226,-9.056468,-1.584777,-6.473455,6.131550,-2.191143,9.283233,-6.487418,-2.652813,0.983030,4.671479,-6.026012,-5.626774,5.959560],[3.153302,6.544982,-1.103363,7.786384,-7.058205,-5.310984,0.526725,-0.215140,-0.395313,-8.872720,-2.138830,2.858235,2.671896,3.659704],[-3.311359,6.896587,-5.173428,-8.151079,-1.418929,8.722808,9.842424,-0.548370,5.342917,2.353518,-7.490508,-7.166488,8.703962,-7.851708],[9.676749,-7.181080,-3.371158,-8.241863,-3.719737,5.679855,-8.451828,7.690197,0.694408,-8.327203,-5.699410,-8.987755,7.893764,7.224425],[-7.656887,3.750655,3.085270,0.512379,-8.550370,-6.582525,-2.609136,1.939026,0.875274,-5.995686,1.387508,1.772295,-1.131793,-0.106730],[-3.902630,-4.057524,7.696131,-1.360049,2.288751,-9.572131,0.563023,-2.220991,-2.994096,1.662017,-8.984018,-1.951515,-3.985261,1.457756]],[[2.467101,8.674751,5.990526,-7.864318,4.582283,5.222795,0.971598,-4.160390,8.760944,-0.462662,2.761846,1.868771,-1.327491,1.739754],[4.913806,3.547772,-7.611249,-9.593938,5.544376,-4.042669,7.685958,6.125768,7.743505,-7.024704,6.947657,-5.679804,-5.061478,-2.981996],[-5.120414,1.862299,9.859356,-9.093485,1.236723,1.090611,-9.866671,-3.374300,-0.258129,-9.695246,8.595183,-9.332354,2.911551,6.320258],[-3.816928,-2.813805,2.621516,-6.746345,5.007395,-2.203586,3.943115,2.841948,4.479610,8.263184,8.862781,0.280061,-8.325323,1.974659],[6.245321,1.303545,2.372506,-9.107656,-4.005869,7.060130,7.705411,-2.936701,5.192409,-5.654982,5.970847,-4.460089,5.372859,-8.591555],[2.941253,-5.334977,-3.227985,-6.239615,6.247925,5.260803,2.738104,4.825354,-6.130648,8.757902,0.321789,6.222949,-5.617602,-6.851188],[1.609201,8.337640,-6.737456,1.738294,-2.697737,-0.254742,-8.424652,0.523334,-3.182828,3.155347,-4.987623,8.598930,-0.513305,2.572351]],[[-2.678911,9.448918,-8.278278,6.468027,-8.725953,0.706538,-2.087476,-9.268462,9.397321,6.217495,4.631760,1.173423,7.401404,5.780514],[4.202936,-6.289316,-8.866367,3.276818,7.584258,-0.652277,-8.212581,-9.363665,8.890309,6.737363,-5.545079,2.246154,5.913270,4.501943],[2.856877,2.495685,6.463321,-5.049228,4.737308,-3.623395,-7.113099,-1.617329,9.458545,-6.520267,9.909300,3.086172,-4.361070,9.795585],[2.628233,-4.609141,-6.933690,1.955971,-5.018859,6.583384,-8.903342,-8.258271,-8.410955,6.180965,2.138932,0.206881,0.624436,-1.713964],[4.241994,-3.078538,-3.764182,1.326105,-1.354653,3.511376,-8.794983,-7.658144,-4.111323,-8.084163,9.374350,-5.192648,0.807777,7.187445],[0.842656,-1.298671,-4.947358,2.363892,2.384977,9.622125,-4.572504,-4.078307,5.785495,3.996223,5.432069,6.566625,1.602062,8.882760],[6.487036,2.253555,-9.319288,2.868857,-5.879571,-5.913787,5.510751,4.398434,-9.319388,-2.414507,-6.902543,3.682772,1.863705,-5.000873]],[[9.298861,4.612371,2.622709,6.226133,-2.764929,-1.140050,9.454278,6.512631,-3.452078,-9.319437,-3.817815,-5.008740,-8.737956,5.359286],[-8.802376,-6.963028,4.393649,-9.762332,4.102335,6.835944,-0.448009,-9.588120,-3.205329,-0.524419,8.504936,5.055215,-0.727861,-7.110844],[3.263316,-9.980276,-8.307531,1.327459,3.917980,-4.091953,7.229565,-6.242791,3.698352,-1.179977,-2.546568,-8.485513,0.258082,-8.265426],[6.132221,8.713812,-9.113025,1.522806,-0.799411,-8.752793,-8.377397,-1.895280,-8.925685,-2.061419,-5.994969,2.786224,6.918814,-2.673040],[6.836852,-1.944549,8.923294,-0.538721,-9.296932,-6.494067,-3.957257,-8.511680,5.285041,6.602178,4.242922,0.780499,-4.172365,6.944557],[-7.374025,-8.662336,-8.916441,1.037269,-0.519114,5.608574,6.585789,-5.311881,-4.268638,-2.352582,3.085071,-5.275743,1.468867,-2.597787],[-0.833655,-9.789578,9.224701,9.200410,6.871673,-8.567319,-8.821609,-7.743681,8.877143,8.475181,8.668182,-1.449455,7.092855,-1.180451]]], dtype = "float64")#candidate|3101|(13, 7, 14)|const|float64
bop_3102 = relay.less_equal(call_3093.astype('bool'), relay.reshape(const_3101.astype('bool'), relay.shape_of(call_3093))) # shape=(13, 7, 14)
bop_3105 = relay.less_equal(call_3094.astype('bool'), relay.reshape(const_3101.astype('bool'), relay.shape_of(call_3094))) # shape=(13, 7, 14)
output = relay.Tuple([bop_3086,bop_3102,])
output2 = relay.Tuple([bop_3086,bop_3105,])
func_3149 = relay.Function([var_3085,], output)
mod['func_3149'] = func_3149
mod = relay.transform.InferType()(mod)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3150 = relay.var("var_3150", dtype = "float32", shape = (15, 16, 11))#candidate|3150|(15, 16, 11)|var|float32
func_3149_call = mutated_mod.get_global_var('func_3149')
call_3151 = func_3149_call(var_3150)
output = call_3151
func_3152 = relay.Function([var_3150], output)
mutated_mod['func_3152'] = func_3152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_3191 = relay.TupleGetItem(func_1896_call(), 0)
call_3192 = relay.TupleGetItem(func_1897_call(), 0)
func_3149_call = mod.get_global_var('func_3149')
func_3152_call = mutated_mod.get_global_var('func_3152')
var_3197 = relay.var("var_3197", dtype = "float32", shape = (2640,))#candidate|3197|(2640,)|var|float32
call_3196 = relay.TupleGetItem(func_3149_call(relay.reshape(var_3197.astype('float32'), [15, 16, 11])), 1)
call_3198 = relay.TupleGetItem(func_3152_call(relay.reshape(var_3197.astype('float32'), [15, 16, 11])), 1)
func_1628_call = mod.get_global_var('func_1628')
func_1631_call = mutated_mod.get_global_var('func_1631')
const_3211 = relay.const([-5.231343,-4.104412,0.881032,-3.314978,7.430388,-8.013613,8.018766,-0.352223,2.803107,0.377606,6.382492,-0.725953,-0.472292,3.286000,-4.761338,3.847510,6.715212,5.357986,-9.540886,1.582094,2.957818,-8.044731,-6.819580,-7.997639,2.857794,-8.034697,-3.737411,2.016943,9.599709,-4.227435,-3.460968,-2.872905,6.129054,-2.437274,-1.040253,-5.381072,3.066283,-3.181296,1.707381,-7.771830,2.046319,3.982424,1.084786,-3.314861,5.309302,-0.277059,2.420473,3.871539,-6.093242,-0.736105,5.650121,4.075920,-8.831120,6.771613,-6.197605,-1.561900,-8.409836,-1.155041,-2.555038,-6.230002,7.723779,6.271633,1.017441,-6.362470,5.959666,-5.531153,0.490006,8.281472,-3.806524,2.790386,-3.203053,-8.294605,-9.265236,-7.972826,8.076803,-4.911117,8.448080,4.041853,4.853014,9.515711,7.638874,5.439324,5.760993,-5.565879,0.549264,-2.027032,8.939658,-1.500606,3.755668,-4.261961,5.177105,-2.799238,8.342181,-0.856617,6.123383,5.642073,6.011045,9.318242,8.370651,-4.018350,1.399731,3.811687,5.235515,-3.193058,-9.518788,-0.346812,-3.786590,7.326253,-4.590606,-9.599121,0.315592,-8.165933,-1.011138,4.788338,8.156600,7.468083,-6.203346,4.747117,-1.273298,3.460948,0.188540,5.902443,-6.942034,9.771372,-2.142870,-1.516758,9.975352,-8.041350,-6.314317,1.943590,-1.120511,-3.162191,6.004843,-4.531093,-6.342380,1.521535,1.499868,8.923920,0.965619,6.291508,-9.554728,4.874353,-7.792879,2.855037,1.206960,7.110574,1.174598,-3.233791,6.654326,5.275702,-8.798625,0.895620,4.552651,3.467394,9.099373,-0.254077,-5.123594,7.196173,4.133703,8.061939,-1.379319,-8.268161,5.147335,-2.350999,-2.234501,-7.487323,-8.066890,-3.839061,-2.196063,-9.104173,-2.720130,9.777817,-4.664303,-7.382593,9.202489,-5.112401,-7.650610,-4.169412,-5.073923,-8.370331,-0.710938,7.222191,8.949464,-3.511276,-7.626490,7.557474,5.863802,3.953805,-1.890276,0.265478,-6.256612,8.882192,1.633507,-0.334925,-9.435974,-2.197294,4.009120,-4.816958,3.982965,-3.214033,1.039942,1.547101,-7.369786,9.181977,-9.793924,-0.425590,-3.763593,1.917395,7.545170,3.300799,-0.148041,-7.209443,-4.246837,-2.895733,8.044051,9.948459,6.938539,6.868840,9.106963,-3.567405,-8.822348,-5.260550,-7.070184,-0.273056,5.001841,0.022849,8.587889,2.558060,-3.151259,5.361956,-6.547826,4.119218,0.545392,7.905217,9.435035,-1.777519,6.644791,-7.018859,-6.334382,2.812963], dtype = "float64")#candidate|3211|(240,)|const|float64
call_3210 = relay.TupleGetItem(func_1628_call(relay.reshape(const_3211.astype('float64'), [4, 6, 10])), 1)
call_3212 = relay.TupleGetItem(func_1631_call(relay.reshape(const_3211.astype('float64'), [4, 6, 10])), 1)
output = relay.Tuple([call_3191,call_3196,var_3197,call_3210,const_3211,])
output2 = relay.Tuple([call_3192,call_3198,var_3197,call_3212,const_3211,])
func_3219 = relay.Function([var_3197,], output)
mod['func_3219'] = func_3219
mod = relay.transform.InferType()(mod)
mutated_mod['func_3219'] = func_3219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3220 = relay.var("var_3220", dtype = "float32", shape = (2640,))#candidate|3220|(2640,)|var|float32
func_3219_call = mutated_mod.get_global_var('func_3219')
call_3221 = func_3219_call(var_3220)
output = call_3221
func_3222 = relay.Function([var_3220], output)
mutated_mod['func_3222'] = func_3222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_3229 = func_1850_call()
call_3230 = func_1850_call()
output = call_3229
output2 = call_3230
func_3253 = relay.Function([], output)
mod['func_3253'] = func_3253
mod = relay.transform.InferType()(mod)
output = func_3253()
func_3254 = relay.Function([], output)
mutated_mod['func_3254'] = func_3254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_3260 = relay.TupleGetItem(func_2686_call(), 1)
call_3261 = relay.TupleGetItem(func_2688_call(), 1)
output = relay.Tuple([call_3260,])
output2 = relay.Tuple([call_3261,])
func_3265 = relay.Function([], output)
mod['func_3265'] = func_3265
mod = relay.transform.InferType()(mod)
output = func_3265()
func_3266 = relay.Function([], output)
mutated_mod['func_3266'] = func_3266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_3298 = func_2428_call()
call_3299 = func_2428_call()
output = call_3298
output2 = call_3299
func_3313 = relay.Function([], output)
mod['func_3313'] = func_3313
mod = relay.transform.InferType()(mod)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mutated_mod.get_global_var('func_3313')
call_3314 = func_3313_call()
output = call_3314
func_3315 = relay.Function([], output)
mutated_mod['func_3315'] = func_3315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3331 = relay.var("var_3331", dtype = "bool", shape = (12, 1, 13))#candidate|3331|(12, 1, 13)|var|bool
var_3332 = relay.var("var_3332", dtype = "bool", shape = (12, 3, 13))#candidate|3332|(12, 3, 13)|var|bool
bop_3333 = relay.logical_or(var_3331.astype('bool'), var_3332.astype('bool')) # shape=(12, 3, 13)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_3343 = func_1850_call()
call_3344 = func_1850_call()
output = relay.Tuple([bop_3333,call_3343,])
output2 = relay.Tuple([bop_3333,call_3344,])
func_3345 = relay.Function([var_3331,var_3332,], output)
mod['func_3345'] = func_3345
mod = relay.transform.InferType()(mod)
var_3346 = relay.var("var_3346", dtype = "bool", shape = (12, 1, 13))#candidate|3346|(12, 1, 13)|var|bool
var_3347 = relay.var("var_3347", dtype = "bool", shape = (12, 3, 13))#candidate|3347|(12, 3, 13)|var|bool
output = func_3345(var_3346,var_3347,)
func_3348 = relay.Function([var_3346,var_3347,], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mod.get_global_var('func_3313')
func_3315_call = mutated_mod.get_global_var('func_3315')
call_3386 = func_3313_call()
call_3387 = func_3313_call()
output = call_3386
output2 = call_3387
func_3388 = relay.Function([], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
output = func_3388()
func_3389 = relay.Function([], output)
mutated_mod['func_3389'] = func_3389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_3398 = relay.TupleGetItem(func_1812_call(), 0)
call_3399 = relay.TupleGetItem(func_1814_call(), 0)
output = relay.Tuple([call_3398,])
output2 = relay.Tuple([call_3399,])
func_3416 = relay.Function([], output)
mod['func_3416'] = func_3416
mod = relay.transform.InferType()(mod)
mutated_mod['func_3416'] = func_3416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3416_call = mutated_mod.get_global_var('func_3416')
call_3417 = func_3416_call()
output = call_3417
func_3418 = relay.Function([], output)
mutated_mod['func_3418'] = func_3418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3448 = relay.var("var_3448", dtype = "int16", shape = (14, 7, 11))#candidate|3448|(14, 7, 11)|var|int16
const_3449 = relay.const([[[2,9,3,-3,4,-6,7,-2,-5,7,-7],[-7,2,-5,-1,-10,-2,-8,-6,4,2,-5],[-7,7,-2,-8,-3,-9,10,-1,-6,6,9],[-5,-7,-5,10,-8,-8,1,-1,10,-3,10],[-10,4,1,6,-4,-3,1,-7,-9,-7,2],[-7,-8,9,-4,5,-10,-10,9,-9,8,-1],[1,9,5,-4,-4,9,8,3,7,-5,-7]],[[5,10,6,-7,6,-6,-7,1,-9,-4,6],[6,-1,-9,7,-3,1,-8,1,5,5,-2],[-4,6,7,2,10,-5,1,1,-10,-2,-8],[-8,-8,-8,-4,-3,-3,-4,9,-6,-5,3],[-6,4,7,-9,-6,5,9,5,4,-6,9],[7,-7,8,-5,6,5,9,5,8,4,7],[7,-9,-2,-7,-4,-10,9,-2,10,8,-9]],[[-1,5,-8,-3,4,-7,-10,-7,-1,-9,-3],[10,3,-3,-9,-7,9,-10,-3,-1,2,10],[-8,-6,8,-9,-6,-6,3,1,4,-2,2],[-1,4,9,-2,7,6,9,3,-6,-9,9],[4,5,7,-2,-7,3,-4,9,-1,-4,-2],[-2,-10,-3,1,-2,3,4,5,1,6,3],[-6,6,9,-8,-2,5,9,3,-3,8,4]],[[-7,7,-1,4,4,8,-1,9,-7,10,-5],[3,2,4,-1,-9,5,10,8,10,6,-2],[-5,6,4,-6,-4,8,5,3,8,8,-9],[-9,-4,1,-7,7,-7,-3,-7,-1,-10,-7],[9,-4,-4,-10,3,-2,-8,-7,9,6,4],[-7,10,4,-7,6,-2,2,-3,1,-2,2],[-7,7,-2,-1,2,-9,-6,-4,-5,6,1]],[[3,10,1,-8,-4,-10,2,1,8,1,-8],[2,9,-4,-5,3,-10,-4,7,-2,9,-1],[5,4,7,-3,-2,9,-2,-6,-10,5,-4],[-9,-2,-3,4,-4,5,-4,-3,1,4,7],[-5,-3,4,2,-8,10,-3,-1,-6,-10,4],[7,-1,-5,8,-10,-8,7,10,9,-4,6],[-3,-6,5,-2,-10,-6,-5,7,-6,-8,10]],[[6,7,-6,6,10,-2,-8,2,3,7,4],[-2,-7,8,5,-1,7,-6,-10,-6,2,7],[-2,8,-5,-7,-6,2,9,7,7,5,-7],[-7,-3,-9,1,-5,-7,8,-7,-10,4,-4],[-1,9,10,-4,-4,8,-5,2,-1,7,-9],[9,-10,9,-1,8,-6,2,10,-5,-8,-2],[9,7,3,9,10,8,-9,5,9,-3,-2]],[[-3,2,9,-2,-1,6,-1,3,-3,-8,-3],[9,6,-3,5,4,10,-7,-6,-9,-9,6],[-6,-10,1,1,6,2,-7,2,10,1,2],[8,-6,4,4,5,-8,-10,-4,1,-10,-1],[9,3,9,-1,2,10,8,1,-3,-5,-3],[8,-7,-5,-3,8,-2,-1,-4,4,2,2],[-8,-4,-1,-2,4,-2,-8,-10,5,-10,6]],[[10,4,4,7,-5,-2,8,8,10,7,-2],[8,5,-7,-4,8,5,-9,-5,-6,3,-9],[-3,-8,-8,-4,-1,2,10,3,-4,-8,-1],[9,-5,-6,5,1,2,-3,-6,1,-3,-3],[2,-7,-7,7,-5,-5,1,1,9,-6,-1],[1,7,-5,5,-3,6,-5,-6,2,-7,2],[-10,-6,2,10,-10,-1,3,5,-5,-4,8]],[[-3,-10,-6,2,6,10,1,-1,-7,1,8],[-3,-3,1,9,-5,-4,5,-3,-9,-7,3],[2,8,-5,-7,-7,5,-1,5,6,10,8],[-3,2,-2,-10,8,8,-1,-7,7,-9,1],[-1,-9,10,-10,-5,-9,-4,8,7,5,-2],[-10,7,2,-2,-7,1,1,-3,10,-3,-7],[-4,-10,-8,4,-3,6,2,5,3,8,-8]],[[-7,-9,1,10,6,10,2,-10,8,3,-3],[-4,-10,2,10,6,-1,6,4,7,-7,5],[-6,10,-8,10,9,-10,10,6,10,-9,6],[2,-1,-1,7,-2,10,-7,-2,-8,2,1],[-9,-3,-10,1,-10,-9,1,1,-5,-9,2],[1,-4,6,-8,7,5,-8,4,2,-10,5],[8,-7,9,-8,-5,-5,-2,4,-10,-7,3]],[[-10,5,-3,3,-6,3,6,3,-1,4,7],[10,6,-4,-5,-8,-6,-6,-10,6,-10,1],[-9,9,-3,9,-9,-1,1,7,2,10,10],[8,5,-6,-1,2,-3,3,5,4,-2,-8],[8,-6,3,-2,-4,-3,-2,-7,-7,-4,-9],[4,10,-10,3,-3,3,3,7,-9,4,3],[10,-1,-6,-7,6,1,-9,6,8,3,3]],[[9,3,-3,9,-5,6,8,-2,9,6,4],[10,9,3,1,-10,-6,-8,10,-6,6,2],[4,-9,-4,4,2,9,-5,-5,-8,7,-10],[6,-4,-6,4,4,-3,-4,8,6,3,-1],[-8,5,3,-2,10,-2,10,-5,-7,-4,-2],[7,8,9,-9,-10,-9,4,10,5,-4,4],[-7,10,-6,4,5,-7,7,4,8,-4,2]],[[1,4,2,4,-3,3,-7,-8,-8,-4,-5],[10,-6,3,7,8,7,-3,1,5,8,-5],[-10,6,7,-2,3,-10,-2,1,-10,7,-2],[-8,-8,4,2,1,-4,9,-8,-2,5,-2],[-8,-8,3,-6,6,5,-7,-9,8,-1,8],[-2,3,9,-7,-8,-3,1,-2,8,-1,3],[2,6,-4,10,1,10,7,5,-10,9,9]],[[-1,9,10,-4,9,-9,-4,6,-6,-10,-2],[-8,1,9,-3,-9,9,6,1,4,-4,7],[-5,3,-1,-10,10,-9,7,-10,-6,5,-1],[7,-8,2,-6,-1,-1,4,7,-4,-3,-9],[-2,-1,8,-6,-4,10,5,-6,-8,-4,1],[-10,4,-7,-8,-7,5,-9,-3,-3,9,1],[-3,7,-1,-2,-8,3,6,-1,8,5,6]]], dtype = "int16")#candidate|3449|(14, 7, 11)|const|int16
bop_3450 = relay.maximum(var_3448.astype('int16'), relay.reshape(const_3449.astype('int16'), relay.shape_of(var_3448))) # shape=(14, 7, 11)
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_3454 = relay.var("var_3454", dtype = "float64", shape = (1470,))#candidate|3454|(1470,)|var|float64
const_3455 = relay.const(-8, dtype = "uint64")#candidate|3455|()|const|uint64
call_3453 = relay.TupleGetItem(func_1461_call(relay.reshape(var_3454.astype('float64'), [15, 7, 14]), relay.reshape(const_3455.astype('uint64'), []), ), 2)
call_3456 = relay.TupleGetItem(func_1464_call(relay.reshape(var_3454.astype('float64'), [15, 7, 14]), relay.reshape(const_3455.astype('uint64'), []), ), 2)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_3461 = relay.TupleGetItem(func_2373_call(), 2)
call_3462 = relay.TupleGetItem(func_2375_call(), 2)
func_771_call = mod.get_global_var('func_771')
func_776_call = mutated_mod.get_global_var('func_776')
const_3468 = relay.const([[1.354487,-2.589452,0.872213,-7.252113,5.957622,3.568259,4.158810,-5.415374,9.407445,-0.854386,2.803314,-4.358273,5.106558,2.913948,-4.826227,7.552206,5.115921,1.535710,7.324112,-2.379541,-3.459909,-3.366065,6.617539,-6.392413,-3.952987,-8.237416,-5.451302,6.002092,8.518838,1.800763,7.582798,3.403768,-4.560815,2.943001,-4.230843,-5.070517,-2.972346,-9.491845,9.087655,-1.147380,6.344973,-3.930627,8.906411,9.238686,-9.219103,-0.360967,-1.371844,-0.263347,4.412136,-6.833975,9.865681,-4.428883,-8.642351,-0.721476,2.272932,7.035412,8.563736,-4.933762,8.944520,5.481536,-2.054648,6.773213,3.750237,3.911793,-5.753359,-8.647525,8.693416,5.838803,4.067589,9.725312,-9.022451,6.172007,-1.874987,-4.253578,-6.248055,6.209633,1.515716,3.172951,-6.109073,1.338096,-3.177637,7.205704,8.100945,8.849457,-7.308729,9.753177,8.591592,-7.235448,3.101969,6.903536,6.648459,-4.072436,-0.997788,0.206698,6.633416,4.916558,5.141397,3.090325,2.808289,7.210768,7.380516,-5.466747,-2.669095,8.157120,9.504907,5.577936,0.280055,0.598866,0.345121,6.326248,-5.278960,-0.968424,7.059419,-2.072156,7.953257,-4.702556,-9.324501,3.249159,4.680365,-3.853773,-1.524681,4.199982,-4.275072,6.740026,-7.427201,-7.081838,1.408194,-3.653777,-9.490557,3.963563,-3.687714,-8.921809,-9.263823,9.914074,-5.173863,-3.543236,2.435559,4.567153,-6.330345,9.848974,9.953031,2.460951,9.958725,3.506615,-4.240360,3.689946,-5.924782,-7.556486,4.831959,-7.184603,2.334310,-7.235778,4.840849,-1.082681,-8.667189,-8.580868,7.121189,-5.081064,6.619340,-7.204223,-4.075884,-0.124382,-3.413344,5.949637,5.806324,5.161563,-8.010050,8.703447,7.685871,-8.772649,-6.715430,0.594840,-2.277317,-7.148482,7.872740,-0.167418,-2.036777,-5.275527,4.585606,-0.567125,-7.338274,9.921455,-5.666107,-8.555281,0.492367,8.255407,4.785130,2.242808,7.213687,6.044208,9.498589,-6.121312,-8.290477,-7.189190,4.492361,-7.242837,-1.329924,-7.722978,8.028919,1.625933,9.047643,-3.583471,6.482721,4.548626,6.106311,-9.446784,-5.544737,-3.532144,6.304199,-0.046401,6.810544,-8.904268,-2.920149,-5.584928,1.717326,-3.879185,0.569295,9.792115,5.207082,0.873305,2.934271,7.323351,-9.364242,6.874841,-9.946185,-3.090793,-5.561245,0.656119,-4.238198,-0.108222,1.693733,-9.878048,0.626634,-1.277287,-9.764969,2.572420,7.357415,8.152424,-1.399181,5.356358,-9.609543,6.315325,5.661714,-8.317555,-2.503238,2.110446,3.058347,-2.246321,-1.210867,3.002519,-6.366747,-4.172642,3.538797,-2.660738,-9.061021,-6.324116,6.962139,-5.993230,4.508432,-1.590428,0.052531,8.544954,-9.704657,-1.175431,-2.217150,4.618437,-4.212596,-5.308924,-5.625414,-2.644749,6.801029,3.193563,-9.531744,1.893229,-8.789771,6.874562,2.274932,5.756376,2.351069,-4.971974,4.702478,-9.839752,-0.976790,-2.682327,7.757578,7.460462,1.695607,-2.881533,-2.819966,5.668745,3.614085,0.183789,-4.875473,-2.522968,-3.696155,1.599009,2.193520,5.941862,1.793918,-4.479578,-8.641575,6.986036,-3.143602,4.200742,0.498268,-2.708926,-7.327596,4.653154,-0.143105,-6.331913,0.049730,-4.584386,9.075919,-3.184511,3.330372,-2.572729,-2.355547,-0.233429,0.169362,-6.199820,-0.941582,9.186584,-3.660095,6.742012,7.257014,6.136729,-1.585534,7.818239,3.075975,-3.028979,-3.514899,8.909649,-8.914655,6.714798,2.790703,-1.625758,-4.259661,-4.963741,-5.764934,1.865991,5.910792,-2.138621,2.610690,-2.282532,8.719280,6.073710,3.472774,6.307274,-8.401574,7.900578,-4.309002,-7.840075,2.646500,5.353559,-3.652683,5.244250,7.728499,6.294030,3.971193,5.678643,-1.765091,-0.710730,2.161682,0.225521,9.202495,-3.576388,-6.228383,-4.690449,3.096566,-4.720060,0.977757,-7.869447,9.539850,5.019112,4.417249,-2.245917,3.343500,9.980662,-9.123351,5.352280,1.979275,7.872052,-4.919938,8.092491,1.002777,3.961868,-4.026498,8.432606,-2.519251,-9.827323,6.743091,2.107283,-9.694436,-6.424692,-8.817508,-4.347519,0.514372,3.717015,3.867190,2.155235,-9.628634,8.975686,-0.965398,7.581704,6.152256,-7.487683,-6.620327,-4.746034,-3.610899,8.655808,-7.601382,-2.697666,0.795152,6.212437,9.810121,7.821080,4.074387,-6.649867,1.138297,-3.911106,8.405387,3.381568,4.963024,-2.917219,-6.183770,-9.823676,3.348111,-6.304063,-4.768624,-7.480197,0.991908,-6.213989,-2.976616,-4.837644,-2.659503,8.063359,-0.433734,6.437307,-9.043873,0.412917,5.233259,3.183294,3.075406,7.726190,5.181847,8.497045,9.687323,2.980173,-8.225562,3.353375,6.773332,-4.897019,8.767418,1.158093,-1.758574,3.609982,-0.395436,-8.590468,-7.620831,9.699634,4.796619,-2.081420,-6.276250,8.499276,-9.614723,3.240617,1.097978,4.570336,9.936443,-3.938227,1.662567,9.552079,-6.426241,1.098012,6.699971,-4.648734,5.607818,1.102664,-7.760053,-4.809597,2.391683,-8.601126,-3.931633,-5.984894,-5.034539,5.076201,-4.148577,6.757750,-6.583640,3.120245,-5.137322,5.872193,4.600597,1.449915,3.538423,-7.130173,-7.864331,9.757578,-2.061851,-9.379655,-2.769352,-4.793419,2.021656,4.189687,7.715038,5.849581,-1.240048,1.429071,-1.716730,9.469447,2.971966,-3.045663,6.872899,-6.544244,2.750290,-4.592351,-9.109893,-9.596911,2.515429,0.142223,7.339012,-1.697979,0.437784,0.409535,-7.648094,2.991607,-2.708815,8.759547,1.076105,3.451231,5.024964,-2.258216,-6.715735,8.641331,-8.122046,-5.775100,8.704176,9.302343,1.087446,-6.834806,-1.556847,6.007516,-5.249113,-0.864147,-3.476211,-9.631794,7.817551,8.046079,-2.647811,4.395759,8.365073,-2.784554,-8.614889,-8.270977,-4.379601,-0.962430,-5.493383,6.057703,-3.467482,6.257474,1.277358,-0.429835,-0.761822,-7.221993,-1.028683,-2.725755,-1.160574,2.569719,-5.431159,-0.930262,-6.679215,8.132786,-8.214792,9.061667,-5.685429,7.226302,9.683866,1.499863,8.890751,-5.537305,8.353125,4.908027,0.646378,6.510906,-8.335161,-1.158299,-3.397615,-0.111456,-5.017414,5.684733,-1.757190,-5.859237,6.762946,1.953083,4.221238,-0.042283,-1.303389,-1.876127,-6.282747,-8.812993,4.307076,-4.523510,-1.868904,-7.610496,-7.242431,-0.465984,-0.413244,-3.882938,-7.405578,-9.220732,7.067025,-1.969337,0.971230,5.544135,-1.104782,-7.734773,-0.618451,8.975364,3.934561,8.318802,-7.520496,-9.483297,-7.777848,-5.249781,1.205205,6.963283,0.474987,-1.069143,-8.828628,2.235741,7.626486,1.021896,-7.146300,7.544469,-3.501398,1.052878,-3.320680,-7.803963,7.359743,0.089424,0.606841,9.216285,-0.539300,4.303357,-7.253553,-4.172317,4.161107,8.005667,-7.981975,7.367472,-8.241698,5.538711,0.670533,8.210911,-0.414098,3.709069,3.414806,4.161548,-1.292275,6.323158,1.620664,4.680234,1.353995,-6.921791,8.434311,-7.302600,-0.051901,-3.682315,7.655799,-1.775527,-5.396679,-7.363754,5.426421,0.776389,-6.532305,-4.442018,-0.512278,-7.521684,-3.780954,-5.366505,0.868772,7.406130,-6.257654,7.566283,-6.746110,-6.392082,6.704169,-0.287504,-5.962914,-5.126578,-6.722865,-1.120969,-5.158053,-3.259957,6.381512,-9.379618,-6.639297,-3.212987,4.949097,-6.789136,-4.974951,-3.983115,2.357585,-3.661085,6.214726,4.784786,2.097623,-3.759001,-8.532302,-0.602850,9.041209,-4.279553,2.754772,2.550018,-5.399195,-0.262029,-5.284353,-7.981721,0.086532,6.012723,-9.317876,5.430845,-0.274709,8.980322,-7.642557,-8.606463,9.065806,4.796108,5.792338,1.186922,4.601728,-9.210361,5.092554,5.357319,5.470845,7.521600,0.291767,9.171018,-4.508355,1.420679,0.728524,9.224486,-7.623812,6.074045,3.243411,-8.113072,-8.325872,-8.499286,1.430748,-7.470754,-5.425191,-0.240019,-0.935982,3.555307,7.644336,-6.572813,-9.976544,8.128610,-7.174521,-3.768601,7.205743,-6.086075,-7.471748,3.882915,8.280167,-4.507247,4.108035,3.871642,6.300157,6.849077,6.952539,3.258838,3.197457,5.110351,2.824389,9.384941,-6.120556,-5.107804,-8.480354,-3.511064,4.548442,8.705711,-7.608708,1.387575,6.773681,-1.568179,-3.125902,-6.635666,-5.421607,5.752958,0.410394,-3.845315,1.144344,-2.280866,6.297048,0.423648,-4.818241,7.597022,2.426322,-6.221972,4.928444,-9.696126,-4.919663,9.848210,-7.656462,-0.683685,4.715655,5.434790,7.214166,-6.459996,-4.739223,8.794350,-2.999278,5.681635,0.362366,-9.833761,-7.104028,-5.745176,9.252921,7.311625,8.038248,-1.743196,5.421542,1.966275,8.349164,4.388348,4.781347,-6.569870,5.438384,4.709713,2.993014,-4.865279,-6.195436,-7.699223,-6.095195,1.189560,4.197449,3.371470,6.820336,2.634138,-7.988749,5.701501,-8.421665,-4.080518,4.188488,-5.194615,2.549765,6.484044,-6.896824,-3.033413,4.372317,-7.481171,6.051760,1.832322,-1.670052,9.002115,8.044079,-3.407575,2.224493,-0.469383,-7.614780,5.041795,5.912952,-5.962096,7.863014,-5.439769,-3.894133,6.099727,-9.537551,5.073250,-4.791070,-4.848416,0.433062,6.349455,4.408610,4.324416,-0.450016,2.463589,2.793461,9.928266,-3.198079,-2.840867,-2.770229,-7.465940,-9.830051,4.449873,7.298596,7.271857,-9.456454,7.488787,-8.863549,-2.291754,8.589088,-7.349335,1.621700,6.647429,9.500573,-5.023848,-8.957086,5.232557,-1.596175,5.324415,-3.898038,-5.127145,8.917030,-0.603162,4.566235,-5.175801,-9.529098,2.648191,9.607832,-3.496578,-3.616578,-7.994180,6.239943,-3.984035,6.626745,8.150650,-8.289143,-3.808144,4.727505,4.881782,0.919641,-6.453227,-5.823389,0.613226,-5.209904,-7.108533,0.291252,0.741900,-6.993376,-8.056785,1.666161,8.187403,-3.130129,8.638008,-9.232362,-2.632306,9.914944,-1.363140,-4.485512,3.968101,3.947034,-0.223345,-6.346571,3.901875,2.076709,-1.928886,-9.004644,-0.661833,-4.057307,-8.303631,-1.612510,-1.513939,5.906745,3.349996,9.828928,2.570343,-2.080890,8.926331,2.597964,-1.590901,-9.708548,-0.921851,-2.833607,4.906427,-4.556790,-9.314354,-4.276767,-9.077885,0.800092,-6.900053,-0.808522,1.560666,6.013872,-9.654029,5.331661,8.354017,9.801385,-3.734222,-2.200079,-3.590712,-9.365584,6.837428,-9.843346,-5.224291,5.094478,-5.240383,-0.143178,-9.112054,-8.343020,2.255433,3.514405,6.845272,-7.262675,1.155652,-1.222905,5.546748,-0.249534,3.136444,1.252668,-5.807301,-7.838515,-1.660863,-7.614721,-1.545191,7.725816,-3.623710,-1.445103,-9.190114,-3.427923,8.056237,1.869871,8.035949,7.623726,-6.441723,-6.398989,7.341002,8.764213,-2.859485,8.018189,-5.341967,-1.042371,0.712766,0.042365,9.304886,3.455032,-9.251164,6.599986,-6.064812,-5.649871,8.933964,4.672348,-2.721136,1.168918,-3.141677,3.830779,3.883142,-1.622783,7.550364,-2.388218,2.323184,5.251118,9.596014,9.306097,-1.432386,-6.483208,-1.242728,-5.917709,7.494288,0.832648,-6.177199,-4.023740,-9.607632,7.817276,-5.063811,-9.021487,1.970062,8.906891,1.085561,2.583722,0.009244,0.629972,3.181213,-9.271109,3.016752,2.006382,-2.050085,-3.039548,-0.563795,-6.165479,2.819201,-9.877173,0.650939,2.183728,-0.926298,-7.924986,1.853732,9.350237,6.158700,1.536754,-4.274783,3.483103,-0.182689,5.281377,2.918605,-8.651269,2.634548,2.688830,-8.946133,9.258804,4.924343,-3.771705,7.654542,-8.842935,3.562800,-9.121012,-8.462027,5.828590,2.932370,6.799193,-0.997057,0.368308,-0.405994,-7.931753,-8.547353,8.887755,1.703430,-2.918969,3.821858,-4.236273,-3.406096,-4.201991,-5.165119,0.100140,6.141691,-3.095469,-4.054124,3.864359,-1.936570,-1.896057,6.991791,8.129725,2.917409,9.490877,-2.728423,-9.647539,-9.051312,9.560155,-3.247657,-0.819100,1.387454,7.294050,5.859577,-9.361038,8.692633,-8.839922,-8.406563,7.432115,5.599911,-2.833643,-0.730468,-2.582203,-2.151307,2.608241,-4.187614,-6.687910,-8.054464,-0.983601,-0.682674,-9.882945,5.472318,-6.494937,-5.448786,1.397649,-6.435764,4.669326,-8.990660,-4.894493,8.782835,5.427431,2.306452,5.982186,-0.804077,3.403930,-1.168210,-9.280295,-6.778992,0.568594,-8.805789,-0.491094,-9.379384,-5.691847,1.451357,2.353787,-9.619882,2.902864,-2.068637,-6.648538,-5.762909,0.469223,3.066586,-3.698303,-9.545503,-4.841206,-5.561683,-2.663877,-6.043733,-4.385877,2.064431,-1.834785,-0.744368,4.570782,-9.097222,5.521248,-3.935635,3.527836,-5.421004,2.965982,4.075649,-6.413021,6.657354,-3.607381,3.677871,6.459333,9.727611,-1.442158,2.192049,-5.679525,8.052347,-3.516683,3.714038,4.604705,4.312968,-7.116492,-9.531939,1.494937,8.505143,7.367166,-0.925390,8.014133,-3.695618,4.338743,-0.109644,1.707585,-8.364260,6.472283,6.212099,4.824261,2.637823,2.361755,-8.149487,3.990612,8.732943,-2.765868,-1.585771,4.961326,-8.964802,-6.822887,-8.342254,-6.435557,-9.473751,-3.221578,4.214071,-5.819423,-3.761287,-8.843816,-7.020251,-2.413842,4.619517,4.401936,4.260937,-5.610144,-9.016717,-2.641228,1.354094,7.876744,-4.215132,8.351210,4.981895,-9.435503,-6.937912,0.288138,7.858600,-0.469052,-8.721964,-3.886724,-1.390838,6.145957,5.501799,1.359138,1.535048,-7.009961,9.776406,5.821352,-5.972877,-4.805886,-3.314951,9.372528,8.484368,-6.949867,-8.269677,9.697630,-2.556628,3.972218,-9.582986,-9.875010,8.406066,0.813791,-9.575164,6.967853,1.701300,1.614536,9.709634,1.158317,-2.137279,6.563634,-9.203543,9.732506,2.228837,-0.343919,-8.454016,8.168715,-2.831357,-3.351559,8.926558,5.689114,1.375078,6.073212,4.902711,7.984866,-3.088566,-5.684327,-9.974249,7.061036,-0.676025,2.502354,-2.443149,-1.151653,-5.624023,-6.442296,8.791315,-0.139604,-9.941766,2.926303,-8.209631,-8.158424,5.671145,0.514360,-3.578241,-7.497450,-7.677607,4.580343,-8.529091,8.294787,-4.372815,5.872188,4.820231,-0.906928,6.933155,-7.296919,5.381544,-7.373497,8.097732]], dtype = "float32")#candidate|3468|(1, 1344)|const|float32
const_3469 = relay.const([-4,6,-3,4,9,6,7,6,-6,1,-6,-1,9,9,6,3,1,10,10,-5,-6,-1,-7,-4,3,-8,-8,-7,-2,2,2,-8,7,-7,1,-6,-5,2,3,-4,1,-5,-3,-5,9,-3,-7,4,-2,-10,4,-10,4,10,7,-6,-8,-7,-1,5,2,-1,-2,10,7,-7,-10,2,10,-3,-8,5,-10,-8,-5,-3,3,-3,-2,-9,6,1,-2,10,-7,-6,6,2,4,-8,-2,-3,8,2,-10,10,6,2,6,-7,-8,9,-6,9,10,-6,-2,-1,-6,2,-3,-4,4,4,-1,-3,6,3,3,-2,1,7,-9,-8,1,-3,-2,3,6,-6,-10,5,2,-10,10,-8,-9,6,3,-5,4,9,8,2,1,8,-10,9,-1,-5,-10,3,9,-9,3,-7,5,-5,-9,-4,8,2,-7,9,10,8,-8,9,-10,8,-4,2,-4,-2,-5,-3,-10,-10,8,6,3,5,-5,-7,-7,-10,-3,-10,-1,-9,-1,-1,9,-10,1,4,10,-5,6,-1,10,-3,6,-9,-8,-5,-1,9,-8,-9,-7,-2,2,3,1,10,5,-4,7,-10,-10,-3,1,-4,-5,7,6,10,-1,6,8,3,9,4,1,-10,-9,5,-7,9,2,5,-7,5,-7,-10,-7,8,-2,-2,8,-7,9,7,1,-9,3,-2,-6,-8,10,-7,5,-4,10,2,-2,-7,1,6,-1,6,8,6,-6,8,-6,-4,-2,8,6,4,-8,-8,6,-2,8,2,-5,1,-5,-7,4,10,10,2,9,-6,6,8,10,10,8,-6,-10,-4,6,6,3,-7,-5,10,6,2,2,5,-10,1,-7,-4,-4,2,10,-9,3,7,-9,-1,-5,-9,3,-10,-9,2,8,2,4,1,1,10,-7,1,6,-1,5,9,-3,2,9,-7,1,10,-3,-1,10,10,10,3,5,8,-3,-9,-7,-8,6,5,5,3,4,-6,-7,2,-8,-1,9,7,6,6,-7,-2,-10,-10,-2,-6,-9,3,-9,-1,-9,1], dtype = "uint8")#candidate|3469|(390,)|const|uint8
var_3470 = relay.var("var_3470", dtype = "float64", shape = (1274,))#candidate|3470|(1274,)|var|float64
call_3467 = relay.TupleGetItem(func_771_call(relay.reshape(const_3468.astype('float32'), [14, 12, 8]), relay.reshape(const_3468.astype('float32'), [14, 12, 8]), relay.reshape(const_3469.astype('uint8'), [390, 1]), relay.reshape(var_3470.astype('float64'), [1274,]), ), 0)
call_3471 = relay.TupleGetItem(func_776_call(relay.reshape(const_3468.astype('float32'), [14, 12, 8]), relay.reshape(const_3468.astype('float32'), [14, 12, 8]), relay.reshape(const_3469.astype('uint8'), [390, 1]), relay.reshape(var_3470.astype('float64'), [1274,]), ), 0)
output = relay.Tuple([bop_3450,call_3453,var_3454,const_3455,call_3461,call_3467,const_3468,const_3469,var_3470,])
output2 = relay.Tuple([bop_3450,call_3456,var_3454,const_3455,call_3462,call_3471,const_3468,const_3469,var_3470,])
func_3473 = relay.Function([var_3448,var_3454,var_3470,], output)
mod['func_3473'] = func_3473
mod = relay.transform.InferType()(mod)
var_3474 = relay.var("var_3474", dtype = "int16", shape = (14, 7, 11))#candidate|3474|(14, 7, 11)|var|int16
var_3475 = relay.var("var_3475", dtype = "float64", shape = (1470,))#candidate|3475|(1470,)|var|float64
var_3476 = relay.var("var_3476", dtype = "float64", shape = (1274,))#candidate|3476|(1274,)|var|float64
output = func_3473(var_3474,var_3475,var_3476,)
func_3477 = relay.Function([var_3474,var_3475,var_3476,], output)
mutated_mod['func_3477'] = func_3477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3416_call = mod.get_global_var('func_3416')
func_3418_call = mutated_mod.get_global_var('func_3418')
call_3494 = relay.TupleGetItem(func_3416_call(), 0)
call_3495 = relay.TupleGetItem(func_3418_call(), 0)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_3503 = relay.TupleGetItem(func_2373_call(), 0)
call_3504 = relay.TupleGetItem(func_2375_call(), 0)
output = relay.Tuple([call_3494,call_3503,])
output2 = relay.Tuple([call_3495,call_3504,])
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
mutated_mod['func_3515'] = func_3515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mutated_mod.get_global_var('func_3515')
call_3516 = func_3515_call()
output = call_3516
func_3517 = relay.Function([], output)
mutated_mod['func_3517'] = func_3517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_3530 = func_3388_call()
call_3531 = func_3388_call()
func_3219_call = mod.get_global_var('func_3219')
func_3222_call = mutated_mod.get_global_var('func_3222')
const_3535 = relay.const([-7.356529,4.152298,-6.268538,-5.597237,-3.902548,0.395838,-9.197166,8.812168,2.384355,8.245090,-2.913784,-3.598585,8.729910,-1.512360,9.810905,9.976913,-2.293851,-0.936616,-9.386913,-7.844151,-1.530140,-3.142862,6.885673,-2.002380,5.212659,-0.689496,8.206403,3.117438,8.528822,6.742180,-3.837362,-4.414533,-4.739961,4.568117,4.416514,7.662072,-1.226854,2.556862,-0.482778,-3.871106,4.543858,9.105760,9.743165,0.325997,5.758383,1.305400,-8.003772,-8.048755,-4.799598,0.708166,2.239723,6.042566,-2.549111,-4.010211,-6.436770,1.767921,5.731206,2.885534,1.154872,9.466960,4.208073,-3.884150,-9.207523,-0.540394,1.953992,9.299373,1.398150,-3.350957,7.035371,-0.925212,7.526594,1.131917,-3.972860,5.204123,7.571059,-4.221887,4.620771,-3.618841,-6.785192,7.363794,5.466668,-8.073586,4.183270,-1.559121,8.609110,2.110914,-5.545078,-2.788189,6.073783,-5.062979,-1.912132,4.625061,-0.795890,-1.213981,4.856540,-1.589769,-7.166323,9.781027,2.270217,-8.734785,-0.084698,4.949240,-8.472477,0.465045,6.721283,-1.167405,3.995137,8.875094,-1.276831,-0.498003,4.829550,-1.671139,1.108462,-0.774063,3.422600,-9.690491,-3.750861,2.931863,3.210093,-8.002410,-6.886303,-8.028687,-6.759361,1.540016,9.735336,-8.917803,-9.256416,-7.314743,-7.783879,-1.814936,5.019234,4.607848,-2.915645,-8.309542,-9.107572,-1.271418,-6.189397,-9.201408,2.206911,1.022006,9.254594,1.166845,-4.803440,7.781979,-1.976231,-8.015087,-2.511739,1.022617,-8.612401,-5.176303,-1.373972,-1.315019,-4.799711,-9.983301,-0.723945,-8.023696,2.324776,-0.545642,-9.665762,7.498820,4.342821,-9.222038,2.641478,1.104310,-3.771002,-0.463536,-5.078226,9.671052,0.111206,-3.426225,0.366053,8.900711,3.232935,-1.704450,-8.222879,-3.648683,6.057798,5.896795,1.052295,7.192447,0.063035,-2.449162,-1.379781,-3.531128,0.630544,9.291781,3.485373,-9.965044,-4.463753,-0.526718,-0.844614,2.970291,-0.259894,-0.892132,2.310009,4.789333,-6.964243,-5.788202,6.451956,-8.497567,-4.475489,0.167099,4.664410,-7.993132,-7.479183,-9.058608,3.471872,-3.900478,-7.184176,4.289387,-4.772083,-5.715158,3.806324,5.179462,2.626842,3.947018,-9.594438,-4.321762,-6.839228,8.116196,9.115420,1.714079,3.140699,-7.770913,8.837374,3.198713,-6.359967,-1.152644,9.709108,-0.954240,5.816178,-2.116288,-3.600572,2.545016,4.401427,4.941083,-4.045317,7.534837,1.895409,-6.794788,-7.923537,-5.757659,6.451420,-6.968658,6.418356,-1.148852,-1.031433,-9.756379,0.326372,-7.944585,-2.029266,2.047356,-7.530123,3.464282,6.985596,-8.060565,3.907504,-5.195780,3.697504,0.075711,-0.739093,-5.412816,-3.649673,5.240566,-8.509805,-3.836516,-8.787785,-2.942264,6.500708,-0.146321,2.069809,-7.264502,2.423894,9.764477,3.529062,8.844526,-9.196958,-1.292081,-0.855642,-5.422744,5.399249,-6.592007,9.653005,7.184719,-8.753558,4.994755,-5.414171,-4.634220,-5.207332,7.181994,2.798192,9.443800,-1.177837,-7.321840,-1.157757,4.287202,-8.053327,9.420052,-2.534016,-1.083820,-2.699697,-4.891972,4.076094,-2.905149,9.113259,4.730125,2.686278,-3.556414,-0.217728,-3.370033,-1.808396,6.627136,6.265585,-8.475388,7.963559,-4.013927,-8.543763,-4.071120,-1.835924,2.014982,-3.646416,-0.949607,-5.741651,0.206776,7.149198,3.405554,-2.033832,-9.568432,5.295759,5.220606,3.196373,-8.340785,1.342370,8.784461,3.609239,6.457187,8.270128,0.665358,-1.312037,5.082963,6.074155,7.955419,7.900513,2.424558,-9.748674,0.547666,8.673499,0.187486,-2.196566,-9.364781,-9.332523,-9.712916,4.472488,5.130437,-2.737291,7.292135,4.058797,6.908641,1.201975,5.429539,-3.605467,8.687368,-8.393384,-9.781451,-5.344077,-7.088714,-6.589995,-6.890947,2.797795,5.752689,-1.935661,8.255715,-2.785250,-9.863518,3.783904,8.633341,-6.054744,1.078440,-9.333433,-2.741812,-3.832152,2.652685,1.278561,-5.463545,2.746807,-4.562202,6.332709,6.246228,9.681868,6.230561,6.772159,-8.583859,6.075264,-1.123193,8.833967,-6.638541,0.733843,-7.079433,-8.896689,6.766168,-1.091662,9.391945,0.267694,3.255861,9.805041,-5.324541,-8.503193,-6.064980,-0.153853,0.292819,0.474260,-8.975135,3.705043,0.403108,7.205632,4.548054,8.697747,4.185524,1.978675,7.131403,1.521205,0.620188,-3.426410,-7.324869,-6.088121,-8.658818,0.706089,-6.751301,8.113550,-7.818205,2.017078,-2.550185,1.059432,7.093270,4.231207,5.183296,-7.705092,-6.592518,-3.688675,-7.217123,-1.195112,6.110570,6.380701,-1.686986,0.031129,6.453382,-1.137781,5.302184,-5.345513,-4.057128,9.939583,-1.776766,-8.966830,-5.612095,0.153974,8.278906,7.076211,-2.556257,-2.436214,2.606290,0.411949,-7.426759,4.994888,6.321585,2.803696,3.629777,7.326896,-4.120186,-3.464811,6.336208,1.007895,5.902660,2.929590,7.277758,-9.597973,7.565794,-0.335675,1.084814,-4.343497,6.351031,-1.225965,-2.628047,-6.835100,2.245385,-9.750107,5.628485,0.845943,-0.848691,-0.595618,-4.495397,4.174623,-6.631130,-9.917126,4.913559,4.482331,-7.544320,9.176697,3.081686,6.412487,-0.020305,0.090984,-0.515278,-0.472773,1.545895,-4.331565,7.715096,-3.039326,7.245494,3.113277,4.160243,3.313417,-1.304306,-4.742755,3.229032,-8.841367,3.152844,5.071861,-0.882361,3.944857,-1.776861,6.002732,1.313232,4.581749,-5.052955,8.890518,5.446323,4.671354,9.383934,-8.388971,-1.486746,-2.667009,-5.631656,0.623679,5.103194,3.422547,-5.287625,4.449405,-1.065587,0.533234,8.936426,-5.675219,7.048525,-6.415328,4.343133,0.893226,4.502455,-7.212203,4.079089,-5.483506,-5.835083,-6.009919,-6.796115,-1.784035,6.430788,-8.419029,-2.110113,1.925124,-4.705783,-5.269370,-0.553728,8.004131,5.185760,-3.164147,7.968823,6.259124,-5.083542,9.195166,0.573889,5.685312,3.938030,7.235989,-6.055563,8.034961,-6.628437,-7.725236,-2.616654,-6.016169,6.777077,-7.567650,8.735696,-3.516304,-7.396958,-6.690443,0.758800,-6.554244,7.895624,-7.903701,-7.222542,6.704010,5.975820,-5.674092,5.826931,2.179619,0.982496,-9.440375,8.112808,-6.250811,-1.378493,5.100051,-9.717793,-5.384177,7.392526,3.460259,-2.559897,-7.665867,-2.963168,7.618043,5.827242,2.023371,3.460614,5.827496,-4.484359,-4.374131,9.783433,0.210385,7.582596,8.041061,-7.310532,-4.701919,1.844204,4.180037,1.320561,-6.265751,9.061960,3.334148,9.685458,-1.877461,-7.631878,-1.119163,-8.748265,4.507272,4.895206,5.353248,1.232504,-1.602213,-3.024053,4.973606,4.785149,6.521929,5.495456,7.311439,6.741216,-1.560290,-6.315481,9.764838,-7.812339,-3.378454,-1.846654,-2.391560,3.003981,-2.152863,-8.822376,-5.660992,2.351063,-3.957464,-4.332838,1.822480,8.051543,-2.559236,-6.373041,3.516127,-1.170034,-5.700970,4.810545,5.608178,-2.944573,-0.185008,8.402572,-0.516484,-0.197291,3.178261,-3.914586,8.303279,-1.482279,4.384512,2.771645,-2.715429,-3.622322,-3.377503,4.572371,-2.797301,-1.092521,-9.767037,0.941316,-3.251156,0.657820,9.263070,2.174932,-9.170167,-9.068493,-2.609202,-0.067110,8.230047,-1.781737,-3.008672,2.366307,7.193980,6.069926,2.642749,-4.962457,4.590666,9.149086,5.741317,1.541132,3.799202,1.405449,7.366684,-3.561891,-3.874290,1.778257,-8.664400,0.335734,-5.363088,6.549989,-2.740022,3.961499,9.831373,-8.097256,5.492850,-5.702239,1.696161,8.066652,1.792695,2.373978,-7.798206,-6.508981,-5.978270,-6.344867,6.973626,-4.162776,8.862249,1.269830,3.285401,4.691219,9.713367,5.605214,6.435506,0.589179,-5.489000,-2.055765,7.975791,6.928809,-4.033904,-6.599456,6.139157,7.390746,6.434097,1.851434,-0.965080,5.208531,1.565484,-9.400701,2.024189,7.638495,0.602636,-4.732532,6.721675,-6.552775,7.481477,3.744015,5.310170,5.762770,3.984877,3.153536,9.664141,0.307705,8.987287,3.141707,1.011079,-0.067342,-2.208502,-8.345047,-4.571970,-5.064567,7.781739,-3.792549,-7.426332,4.875761,2.452141,-2.107847,-1.510367,9.518446,5.379228,-3.898848,9.486070,1.808849,-8.073090,6.684927,-7.344089,-1.676973,4.691606,5.643046,1.242103,2.124522,4.374571,1.209550,2.903953,-8.224772,-3.988996,-6.961089,4.057553,4.052333,1.674971,8.554338,-0.322334,4.210281,-8.357281,-4.422894,-8.369110,-0.764249,1.494652,8.984435,-0.616121,5.000534,-5.415048,2.334030,-6.594605,5.574483,2.058893,6.255139,1.023799,-1.457929,8.866796,0.181166,-8.590497,-6.589451,3.863818,3.689383,8.481872,-6.734314,-0.321235,6.061803,6.018073,-2.826024,4.808911,-3.096479,-4.683457,9.698760,8.049068,8.182096,-0.476432,8.236297,8.952195,-2.720579,-0.226767,1.815651,-5.853520,7.714933,5.617343,-9.139945,2.319650,1.287905,1.549646,-7.519808,8.127741,6.465169,0.922956,-7.290237,1.576579,3.034073,5.392808,-0.097092,6.242300,6.064103,9.311212,-5.652511,3.553679,-7.744754,-8.659579,1.826053,7.432836,0.627519,-0.963653,7.951236,-6.906154,8.553217,4.207223,3.151666,7.018469,-5.276315,4.029881,6.200414,-8.181778,4.282027,-7.972195,8.999290,2.266273,-3.069607,-2.813460,1.537880,-5.453912,-5.079593,-3.924850,9.030693,6.419959,-3.953175,-3.391852,0.995422,-4.101692,9.022268,7.238814,-4.962921,6.413197,-9.109127,-6.845383,0.550467,-8.891903,7.484145,6.800590,-6.000545,-8.054026,9.938030,3.550079,5.863130,-8.540864,-9.580044,7.776841,-5.875075,-6.785939,-0.736879,4.861910,2.279280,-9.689991,-7.424498,9.380425,-9.218064,-7.565722,-9.608767,-4.272875,5.856273,-1.934738,-4.318384,-7.056675,3.082987,-7.667119,5.099485,5.816855,9.105909,2.047768,7.431442,3.196413,-5.774982,-5.206823,1.295313,0.575251,7.656412,-9.913820,0.095263,-9.776597,0.601982,0.919497,-2.007405,-9.319085,-6.103090,-7.940829,-6.838163,9.831712,1.878668,-5.046503,-6.964083,3.084083,7.469382,8.563755,-4.216784,8.197211,-5.518969,-3.100355,3.112949,0.376144,5.456039,-5.308104,3.964946,-7.551202,0.423002,0.207255,-0.506160,3.652884,-4.672603,8.368106,-6.654974,3.571539,2.081139,-0.621242,-0.746104,-2.972434,8.229681,8.132597,-3.916608,7.843333,-2.028493,2.757428,1.873115,3.567178,0.891997,-2.101492,8.805059,2.496848,3.466609,-0.668969,5.450821,6.471567,1.784693,5.377253,1.134963,8.091430,8.608851,-3.270669,4.178163,-6.436410,-8.619761,-6.687726,-5.984306,-9.235847,0.329248,0.368164,5.967707,0.925903,-2.834629,-8.146184,8.331093,1.995795,-6.025524,6.852443,2.830749,2.605730,-6.740844,-1.368204,5.761398,0.231080,3.895051,3.008967,7.592925,7.422466,0.254736,3.880106,7.060891,9.521819,7.751784,9.268947,-0.753050,-3.495210,-9.459863,-2.057861,-0.469126,5.612766,-7.811225,-2.772449,7.337382,8.689624,-7.210643,-8.586512,-6.264356,6.282286,-6.243357,-4.223195,4.732844,-0.177651,8.232243,6.871998,-8.451633,0.220286,5.211491,-2.680173,3.431408,5.789112,8.833904,2.183484,5.291839,8.317457,7.857018,6.416157,-7.460029,6.846582,-9.181684,5.310119,3.743341,0.579721,0.046467,2.963091,-6.022069,-6.237854,-7.030052,0.526329,-0.884328,-8.327948,-1.786895,6.916734,5.914807,8.573937,5.639883,-0.578504,5.716977,-0.437711,4.314028,-1.617029,-8.834655,1.077014,-3.469865,6.666695,2.978783,5.315735,3.140195,7.735348,9.380102,-1.996642,6.279230,8.077712,-0.523817,9.915422,5.322882,0.500601,-6.673514,4.503661,6.453842,-7.389634,-2.138901,7.843211,-5.900142,-9.523222,8.346433,-6.045624,4.701067,5.342388,1.264962,9.414568,-2.888505,4.967674,-6.434081,-5.506757,4.647046,-8.100449,-6.263844,0.988860,-8.683007,-4.568437,-6.700996,5.817467,-9.763236,1.158118,7.308414,-3.950791,-0.756800,4.127479,-3.627381,-0.134958,-7.039749,7.801378,-3.794220,0.735459,-4.902485,-5.716323,-6.759463,-7.020701,6.876594,1.074464,6.431176,-0.595717,3.290716,-7.436630,7.067155,6.136033,5.096992,-7.947202,0.146952,8.608531,5.693741,-3.307114,8.863430,-8.927499,-3.976713,5.755524,-2.323098,7.091549,0.589077,4.318952,5.506709,-1.091198,-4.868847,-3.443533,-8.123115,5.145228,-8.390507,-9.123921,4.949123,-9.288181,-1.129525,7.773308,4.889237,-3.842208,-3.248108,-3.507822,-0.020654,-0.725264,0.054635,-7.695745,-7.129679,-4.588798,7.691919,-9.662746,9.269785,-0.356739,2.042651,-3.843000,3.666887,3.792456,2.572853,6.975563,9.198615,-7.450263,-9.500558,-9.357009,-7.582220,0.800656,4.914704,-9.722689,-4.690398,-4.409951,-9.801050,2.753926,4.884444,7.850443,-5.670039,-7.844711,1.713754,-1.132928,3.739114,-6.886034,2.301307,3.295235,-8.625304,-9.622327,7.069279,-2.599754,5.881247,5.346417,-6.960789,9.297201,8.066791,-9.994906,-0.117720,-6.923949,-3.963139,-3.637424,5.892295,-5.059754,5.655043,-6.685132,-4.260976,8.531589,-6.348817,-2.136532,7.656412,4.971685,-9.113091,1.944601,8.368627,-0.120113,1.103119,8.247850,3.799609,-0.053972,-3.374478,4.348453,8.681570,2.281176,6.419176,-8.621561,4.734860,6.967455,-6.317951,8.306824,-4.378900,8.962318,-2.707131,-0.430838,-1.282921,-3.416890,-1.815654,6.662258,-6.218279,7.808849,0.595215,3.696826,-5.247835,-3.125633,1.930394,-5.486587,9.625849,3.605094,-4.123358,4.548484,-2.901721,-5.852519,7.342360,-8.249288,-8.179382,0.236673,-7.758445,-1.772043,1.860592,9.625261,-1.986670,5.541203,9.097089,0.454798,-1.114119,-4.300141,5.844451,8.892682,5.041969,-1.586732,-3.242079,8.530361,-3.808848,2.490182,-0.773375,1.838478,-6.745481,-2.396079,1.181781,1.989104,9.571054,1.355672,-8.399247,4.267661,-2.350161,9.675941,-5.231978,5.842045,1.541254,-3.391770,3.819403,-1.587097,-9.234981,4.962886,5.109551,-0.338625,3.121681,4.132626,-3.553944,0.369961,-5.461859,6.462045,6.362056,-3.401636,2.393330,-4.991205,-5.341766,-4.569765,8.195541,-4.288320,7.497629,2.908793,-0.965534,-1.550002,-9.686545,-1.912157,8.587979,4.063903,-1.032921,7.394777,-7.586234,8.303054,-0.753073,-2.924254,3.358619,-9.027043,8.394741,9.578800,-1.528086,-7.552912,8.941422,-0.597893,8.387702,9.945730,9.875819,8.155115,-5.054664,-2.416322,4.265764,4.268808,9.310755,7.515837,4.410255,9.242515,-4.464668,-8.635995,-1.583315,-1.365443,-6.601586,8.648485,-7.717093,-2.501948,4.901875,-0.202806,3.490628,-0.089125,4.399272,2.604296,-0.291081,0.292205,-6.431885,9.310409,-1.886844,-9.401518,8.789725,-0.157287,5.668094,7.293905,9.151248,3.062812,5.382854,9.875618,8.952853,6.828305,1.256484,-2.388000,0.158767,-6.959461,-5.254351,-7.317756,5.406123,1.257418,3.151130,8.044393,-2.418020,7.140703,-2.322522,9.636975,1.140251,-3.911023,6.054299,5.415763,-7.819078,-3.455543,-6.558709,-0.096812,5.764702,-6.157785,-2.352482,6.626798,-2.172237,-5.797244,9.322697,-3.868655,6.737429,-2.279994,-3.056554,7.286921,2.123374,2.752311,-6.804248,1.398951,5.064119,8.218002,-3.063133,9.165500,5.252863,7.505992,7.135105,-6.088533,-9.029035,1.695343,-7.016749,4.408620,-6.935290,0.892832,2.064889,-8.745680,3.945234,-5.837488,-5.208824,-0.756855,-2.476156,-5.450775,-3.309845,-8.987498,5.560995,2.890383,-1.468075,-8.479268,6.839652,7.859483,-6.234416,5.399645,2.453660,4.565661,7.896831,-2.529111,-2.361340,2.797737,5.231608,4.213898,0.702271,-0.371891,-0.005393,-7.767017,-7.846561,-6.153393,9.795562,-8.384286,5.338833,-7.761134,-4.369078,-6.755403,-4.888659,3.461718,1.566390,-7.912633,8.778370,-4.117961,4.323423,0.232683,6.294755,4.225448,8.330379,4.385295,9.608540,-9.984706,-5.175443,-5.860442,-7.597882,-1.701941,9.778635,0.535436,8.124116,-1.676509,-4.934570,0.087552,3.887613,3.059050,-4.768199,1.574923,-2.911955,8.175147,5.014596,9.936548,2.008447,7.415960,7.794238,1.330133,3.757858,7.249190,2.520558,9.924900,2.815525,-7.963651,8.805794,-2.715866,0.764657,7.602003,0.665290,-4.757790,-2.609883,8.684529,-3.866810,0.110135,-2.402950,-7.023479,1.394344,-2.137676,-7.644076,-1.216753,5.350481,0.655721,3.321751,7.534389,-3.183787,1.483584,9.309949,-8.103102,-0.358952,8.774887,-2.790710,-6.442883,3.652251,6.833639,2.672377,-3.683299,-6.026103,9.975307,-1.068460,-2.472325,1.741698,7.847379,1.640522,-2.461663,0.075428,-2.358324,1.105776,5.996190,-7.687479,-5.220591,1.231591,-1.077668,8.500333,1.868844,-3.071528,-4.360240,4.112010,-0.534824,1.421952,-2.970278,2.038885,-6.894780,-2.386566,0.741000,-5.778809,-7.780202,-6.444523,4.224179,1.112411,0.435767,4.935072,3.645852,-9.913457,3.384122,-2.861128,-2.474456,-9.352667,7.396134,9.700428,8.508675,-1.550494,5.558625,-1.579482,-9.634475,6.807538,5.704420,6.209093,2.675207,7.122908,8.134648,4.376558,5.964258,7.213903,-7.261633,6.788995,-9.840261,1.225348,0.832788,9.978488,4.885908,2.147087,5.164039,0.398995,-6.883538,0.383015,8.968898,-6.884271,-2.356830,5.964504,-2.836145,0.914565,-0.850397,-1.267451,-8.011246,-9.856473,-8.108291,2.857831,-7.329990,-0.783288,9.335989,2.325180,-2.988746,1.682426,9.008071,1.455057,8.961862,-6.578650,-8.159630,4.078666,-2.185599,-6.815068,-7.849695,-7.773638,9.299263,9.985370,-0.486449,3.354344,-4.782289,-5.349279,0.512285,5.022286,-7.542523,-4.590283,-3.644205,5.623098,2.108606,1.785287,5.481961,4.548774,5.492070,3.697925,9.021122,-4.161318,2.470042,3.911023,7.166903,-7.361602,-9.314640,-4.126923,-4.792964,-0.516810,9.835648,0.664592,0.367620,3.081116,-1.005984,5.669123,2.696788,8.474632,-7.091376,6.491105,-8.963812,5.887356,3.965345,9.001798,8.604931,8.494043,-7.965802,-8.637304,1.629119,-8.174206,-3.953279,4.772748,6.582957,5.758576,9.357748,6.534778,-7.742587,9.557869,-2.606861,1.870218,-5.803621,6.967688,-1.852220,-4.172867,6.481528,6.453510,-7.215057,-3.454655,0.706888,1.080579,-4.103603,-0.299335,3.220376,-3.530798,2.719707,-0.590106,3.228547,-8.464667,3.477082,2.372375,7.940251,-6.846091,-8.521228,5.262969,-9.830813,-3.140293,-0.957358,5.810309,-6.279128,8.764104,-8.705223,6.003306,4.834297,6.854333,3.130869,-9.622766,8.466864,-0.970458,9.786219,3.505021,8.415582,-1.122170,4.524397,8.316985,-4.513247,1.865122,-8.517379,-7.465642,-7.528438,-2.213415,-1.727414,-2.749200,-7.785397,1.668534,-4.613219,8.059927,7.156677,3.213495,-5.555475,-4.523767,-7.910723,1.307684,2.013727,-6.449196,6.519182,0.731000,8.507434,2.339495,-8.097134,6.811731,5.663090,-9.267682,5.285750,4.014598,9.636514,-1.268394,6.647768,-2.389298,7.123177,-4.619615,-6.032625,-7.992770,0.206503,0.598899,1.294871,3.550532,0.573930,2.293228,9.777473,-8.025145,-7.348462,-9.357956,-7.634710,-2.067838,-4.429610,-1.515852,-3.824225,-3.846439,-2.971741,-3.800156,6.938239,6.471599,5.072889,4.077261,5.844192,4.789449,-5.670493,-3.763261,1.491475,-8.234717,9.865817,-2.690515,5.288050,-3.621411,-2.588777,8.453904,-7.392738,-5.881945,0.721733,-2.667914,-1.666492,5.183319,-0.966750,7.621547,-3.296103,4.244495,6.384339,-9.684471,-4.233215,-0.850286,1.986429,-7.897337,-3.079312,3.794851,-3.512566,7.890981,-4.151237,7.261671,-4.035754,-7.555666,-3.732699,-7.467328,3.024730,5.974173,3.983019,-6.951461,5.901919,-4.746550,3.625165,-6.048135,-9.978454,-6.894742,-0.672443,2.776880,8.666734,4.585301,7.133365,3.442086,-1.724285,-1.917807,-3.502176,-8.190681,-8.291584,-0.126801,7.288293,8.762201,-5.902622,-4.511170,-0.934060,4.431208,9.743689,3.026556,-7.392305,5.475048,6.999602,0.265470,-6.727037,-7.988099,-1.425060,-4.957565,8.445725,0.923849,-4.949759,-7.511402,6.130831,-2.303527,-3.985493,6.470178,-3.461305,-7.288949,8.170585,4.929066,8.198268,-0.163995,-9.339573,9.358176,-6.080795,6.472830,-4.362198,0.743367,8.959482,-0.472731,-0.781819,0.450233,-0.258702,-0.085558,5.408531,1.368740,2.413065,-2.458548,5.549346,0.577866,5.451235,-1.063300,-8.569258,6.512353,1.778921,-4.785583,-1.126507,-0.927696,3.988417,-4.942169,-0.421397,1.234668,6.791615,-1.945596,-0.159141,-0.500347,-6.676764,6.984573,8.222853,2.496069,5.227821,-8.851001,9.433078,-4.592719,3.963146,4.658555,2.397293,-9.892831,-7.917544,4.547864,-9.351068,-1.167685,-7.317936,-7.699427,3.461789,-3.452186,6.435615,-7.600028,3.841415,4.184446,2.266953,-4.230198,0.189215,7.692805,1.445370,-6.203463,-2.139117,9.129642,7.433355,-0.926232,3.162171,7.446129,3.517238,2.612314,-3.201121,-3.011686,8.898442,-8.273909,7.189770,-6.773265,-3.293099,-5.901368,-3.187322,0.988972,3.840388,-4.032995,-3.765917,1.019056,7.263831,-1.911439,5.431794,5.779350,-7.302753,-9.491715,0.095831,-2.797831,2.603697,-9.532585,-6.443326,8.617224,-5.791087,-2.801482,4.266873,-8.690079,-2.244639,9.231297,3.701329,-4.101297,-7.518918,1.443165,-6.404887,-6.419556,5.778484,4.514014,-2.452960,1.786416,-3.879232,-7.418415,-4.130756,-5.263221,7.573349,-6.784625,-4.567249,-4.495104,2.442153,-0.611204,-0.095772,-0.300102,9.745315,9.856274,-3.864166,-6.278442,8.273477,2.238090,-3.814887,-8.128180,9.738129,-1.737203,-0.789945,-5.531926,0.452141,7.976758,6.578916,8.808471,5.808650,4.057756,7.897313,-5.214928,-7.441153,-7.056204,2.498613,-5.030927,-6.104579,-9.248497,-9.872232,-1.767890,6.641536,6.337716,6.706467,3.067813,6.607581,9.757484,2.682567,4.321254,8.986621,-3.554313,6.458001,2.123959,9.504989,-3.076142,-1.349039,1.222428,-3.212437,2.518851,6.916053,-4.323108,1.076797,-2.583972,7.413167,-3.683660,1.306181,8.967104,5.245934,-8.668537,-7.181641,-7.074380,-0.744481,-0.875031,-5.473263,-6.376292,-2.944698,4.484382,-4.706593,-3.338492,9.916177,-8.273719,1.133611,3.176624,-2.121547,-1.009069,-1.611792,-4.573812,-2.228544,0.026521,-6.161742,5.724060,-3.887150,-9.175236,-0.391330,-9.137677,5.247784,-6.542608,-6.859966,6.293165,-0.395194,0.857895,2.172941,3.846018,-1.055243,-3.672220,-6.891099,-8.612935,-8.112538,-7.787333,4.619454,0.279932,6.809984,-7.287095,7.557246,1.594399,5.814647,8.586555,-7.560132,-7.079165,0.337893,1.237790,-1.766338,7.201457,-8.008892,2.877553,-1.665916,-1.677208,9.318996,-9.083357,-4.972930,-7.947840,-4.743644,-9.005976,-2.574307,-6.679682,-1.727456,1.542050,7.176684,1.943383,-1.994754,2.813382,4.201109,5.131938,-8.895552,-9.885716,5.971930,-0.374876,-9.333560,-0.777929,-4.964697,-7.046020,-9.898718,0.903619,-5.434984,5.459434,-2.315194,-6.776623,-3.844189,-6.138587,0.695920,4.549052,8.395903,-5.676677,4.966241,-7.788667,4.714724,-8.420046,-3.869697,3.405343,-7.769962,-1.064439,-0.881765,8.986092,-5.636370,7.538390,-7.629342,-3.031709,3.727385,7.831862,5.128992,-9.628608,-6.456021,-4.710631,-7.466465,-7.949327,-6.757451,8.266845,1.623475,8.980300,-0.480999,8.575653,7.290006,-9.788841,-0.063545,3.992150,5.795860,8.790889,-7.400996,5.732480,1.256823,-3.291791,-6.136570,-5.143825,-0.968117,8.002733,3.385004,7.602634,-9.463405,7.766711,1.138640,-4.806657,-7.172325,-2.538126,4.457459,7.739238,3.811288,-9.868078,-8.486221,3.095518,-3.679834,0.708273,3.491382,-9.705094,1.563572,2.722424,9.511417,1.510921,0.950549,-3.866562,4.550800,4.588852,8.587915,-3.316896,4.684071,-4.864460,-6.186784,2.099648,-8.513946,1.616253,5.971349,-2.168309,-4.771261,-5.452300,-3.212057,-4.334025,-6.544675,-4.588274,9.730636,4.738631,8.647876,-9.154251,-1.526864,1.825538,-0.812297,-0.568036,6.375869,-4.239574,-4.648533,2.705908,8.069804,1.960995,-7.061932,-2.081902,-4.268227,-5.784208,0.466750,-9.077082,-5.479781,3.982342,-7.256113,-4.174015,-6.228566,-2.410967,3.754448,8.343704,0.200563,-1.205108,2.097942,-0.474088,5.612008,8.411719,3.897299,-3.023152,6.638147,-2.722516,3.547246,-8.753860,1.532885,-2.587957,-7.976451,-7.463193,-4.809603,2.967354,0.957967,-8.776246,-2.775275,8.196353,4.254625,5.406669,4.262913,-7.053013,-6.591238,7.564719,5.444570,-3.752377,9.878986,-8.961562,-2.692508,0.980431,0.357666,-7.816264,6.685563,2.741658,7.947328,-2.030252,5.692242,1.472310,8.863988,4.110897,-3.121986,-1.492519,-4.565462,-6.461973,6.550472,-9.625087,1.731463,-0.513620,5.690457,9.252969,6.383192,9.736355,-2.277986,-2.488893,5.577019,3.491653,-1.159045,-1.654391,-0.727128,9.597946,-7.910263,-4.593736,-1.415730,4.569319,-6.381694,-2.004701,-5.629778,-2.720709,-4.546805,-2.192160,7.962171,6.344976,4.328612,-7.582723,-4.285302,5.392972,-5.041060,-8.611125,5.189005,-1.362712,-3.333035,6.872596,-8.843210,-2.332707,-3.950496,1.615496,-9.750140,8.330303,-7.020926,3.345441,3.614816,7.181221,-8.250934,-2.917884,5.172065,1.629022,5.832175,-6.371302,8.296438,-8.657196,7.917964,1.665993,1.548754,-5.070205,-2.770660,-6.057323,-8.272757,9.807621,-5.839076,-5.793776,-1.030365,4.401323,-5.592205,-9.180151,-3.122241,-7.901016,-6.161718,5.985491,-6.987203,9.560888,8.259098,0.535377,7.590603,-7.645828,-8.014128,-0.569179,2.873400,1.604393,2.423117,5.050215,-5.468643,-3.961900,8.347551,-4.594568,2.845461,-8.712101,-8.447112,-4.962813,0.397081,3.367643,-1.755942,-0.391276,4.994171,2.839655,5.783172,2.512856,-2.150232,-4.556092,0.507534,-2.130911,-5.568501,-7.341645,-3.939666,6.327755,6.383033,4.954792,-0.843711,3.546370,4.854191,-9.173763,1.857186,9.767477,2.811404,6.978347,-9.539435,6.766561,4.055831,6.570334,3.756719,5.278135,1.627362,-5.032771,-5.273194,-7.054386,-4.265037,6.105730,-2.532995,-4.790491,-2.521440,-6.900783,3.064212,-6.559127,6.306863,-9.718588,-7.364001,-0.083360,-6.036020,8.857234,-1.243555,4.131220,-8.861801,5.539756,4.697588,3.266717,2.513497,-6.273407,0.457790,3.378778,6.277389,0.488137,0.419071,8.754349,-5.369722,7.527497,-0.246070,-2.717619,2.770964,6.368511,6.049298,-3.789888,9.839377,2.597425,3.838190,6.853047,-1.872621,-9.382292,-4.528989,7.650798,-7.957966,-8.066223,2.844069,-1.224583,-0.861246,6.781035,-9.503868,-9.409698,3.682630,-5.651791,6.823203,8.204385,4.011909,6.862996,1.768426,-4.253190,4.648669,2.783986,7.908130,1.240851,3.041319,5.933962,5.715189,8.616066,6.234845,5.373037,-5.017994,-4.341346,2.863290,7.614489,0.520933,-7.243060,-4.282732,3.800770,5.004081,3.053374,-6.279469,-2.517320,6.465389,-8.320329,-7.189708,2.494681,-1.958545,-5.085984,6.891308,-7.213955,5.365942,-9.284104,-8.112609,-6.902910,-3.404652,2.439331,-3.451808,-5.505449,3.235362,4.816181,7.782400,-0.235055,-6.709908,0.824367,7.558698,-5.543192,-9.380067,-8.927528,8.766525,6.152486,2.108624,-4.504624,-4.184337,8.543424,0.583552,3.559863,5.162929,-1.522171,-3.123752,6.280238,2.221538,5.758201,-7.575876,4.242917,-0.055008,-2.648773,0.664378,2.216096,7.778241,0.517743,9.343402,1.808179,8.752516,1.047708,3.389543,0.982510,-3.451351,9.524792,-7.726006,-7.830671,0.489203,-5.591725,3.437589,-4.151342,-7.225538,5.675932], dtype = "float32")#candidate|3535|(2640,)|const|float32
call_3534 = relay.TupleGetItem(func_3219_call(relay.reshape(const_3535.astype('float32'), [2640,])), 0)
call_3536 = relay.TupleGetItem(func_3222_call(relay.reshape(const_3535.astype('float32'), [2640,])), 0)
output = relay.Tuple([call_3530,call_3534,const_3535,])
output2 = relay.Tuple([call_3531,call_3536,const_3535,])
func_3575 = relay.Function([], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
mutated_mod['func_3575'] = func_3575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mutated_mod.get_global_var('func_3575')
call_3576 = func_3575_call()
output = call_3576
func_3577 = relay.Function([], output)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3644 = relay.var("var_3644", dtype = "float32", shape = (13, 12, 8))#candidate|3644|(13, 12, 8)|var|float32
var_3645 = relay.var("var_3645", dtype = "float32", shape = (13, 12, 8))#candidate|3645|(13, 12, 8)|var|float32
bop_3646 = relay.minimum(var_3644.astype('float32'), relay.reshape(var_3645.astype('float32'), relay.shape_of(var_3644))) # shape=(13, 12, 8)
bop_3651 = relay.less_equal(var_3644.astype('bool'), relay.reshape(bop_3646.astype('bool'), relay.shape_of(var_3644))) # shape=(13, 12, 8)
func_500_call = mod.get_global_var('func_500')
func_502_call = mutated_mod.get_global_var('func_502')
var_3676 = relay.var("var_3676", dtype = "float64", shape = (1274,))#candidate|3676|(1274,)|var|float64
call_3675 = relay.TupleGetItem(func_500_call(relay.reshape(var_3676.astype('float64'), [13, 7, 14])), 0)
call_3677 = relay.TupleGetItem(func_502_call(relay.reshape(var_3676.astype('float64'), [13, 7, 14])), 0)
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
var_3681 = relay.var("var_3681", dtype = "int8", shape = (528,))#candidate|3681|(528,)|var|int8
var_3682 = relay.var("var_3682", dtype = "uint8", shape = (390,))#candidate|3682|(390,)|var|uint8
call_3680 = relay.TupleGetItem(func_340_call(relay.reshape(var_3681.astype('int8'), [8, 6, 11]), relay.reshape(var_3682.astype('uint8'), [195, 2]), ), 1)
call_3683 = relay.TupleGetItem(func_343_call(relay.reshape(var_3681.astype('int8'), [8, 6, 11]), relay.reshape(var_3682.astype('uint8'), [195, 2]), ), 1)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
var_3696 = relay.var("var_3696", dtype = "float64", shape = (396,))#candidate|3696|(396,)|var|float64
call_3695 = func_585_call(relay.reshape(var_3696.astype('float64'), [11, 9, 4]))
call_3697 = func_585_call(relay.reshape(var_3696.astype('float64'), [11, 9, 4]))
func_3345_call = mod.get_global_var('func_3345')
func_3348_call = mutated_mod.get_global_var('func_3348')
var_3703 = relay.var("var_3703", dtype = "bool", shape = (156,))#candidate|3703|(156,)|var|bool
var_3704 = relay.var("var_3704", dtype = "bool", shape = (468,))#candidate|3704|(468,)|var|bool
call_3702 = relay.TupleGetItem(func_3345_call(relay.reshape(var_3703.astype('bool'), [12, 1, 13]), relay.reshape(var_3704.astype('bool'), [12, 3, 13]), ), 0)
call_3705 = relay.TupleGetItem(func_3348_call(relay.reshape(var_3703.astype('bool'), [12, 1, 13]), relay.reshape(var_3704.astype('bool'), [12, 3, 13]), ), 0)
output = relay.Tuple([bop_3651,call_3675,var_3676,call_3680,var_3681,var_3682,call_3695,var_3696,call_3702,var_3703,var_3704,])
output2 = relay.Tuple([bop_3651,call_3677,var_3676,call_3683,var_3681,var_3682,call_3697,var_3696,call_3705,var_3703,var_3704,])
func_3706 = relay.Function([var_3644,var_3645,var_3676,var_3681,var_3682,var_3696,var_3703,var_3704,], output)
mod['func_3706'] = func_3706
mod = relay.transform.InferType()(mod)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3706_call = mutated_mod.get_global_var('func_3706')
var_3708 = relay.var("var_3708", dtype = "float32", shape = (13, 12, 8))#candidate|3708|(13, 12, 8)|var|float32
var_3709 = relay.var("var_3709", dtype = "float32", shape = (13, 12, 8))#candidate|3709|(13, 12, 8)|var|float32
var_3710 = relay.var("var_3710", dtype = "float64", shape = (1274,))#candidate|3710|(1274,)|var|float64
var_3711 = relay.var("var_3711", dtype = "int8", shape = (528,))#candidate|3711|(528,)|var|int8
var_3712 = relay.var("var_3712", dtype = "uint8", shape = (390,))#candidate|3712|(390,)|var|uint8
var_3713 = relay.var("var_3713", dtype = "float64", shape = (396,))#candidate|3713|(396,)|var|float64
var_3714 = relay.var("var_3714", dtype = "bool", shape = (156,))#candidate|3714|(156,)|var|bool
var_3715 = relay.var("var_3715", dtype = "bool", shape = (468,))#candidate|3715|(468,)|var|bool
call_3707 = func_3706_call(var_3708,var_3709,var_3710,var_3711,var_3712,var_3713,var_3714,var_3715,)
output = call_3707
func_3716 = relay.Function([var_3708,var_3709,var_3710,var_3711,var_3712,var_3713,var_3714,var_3715,], output)
mutated_mod['func_3716'] = func_3716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_3822 = relay.TupleGetItem(func_2686_call(), 1)
call_3823 = relay.TupleGetItem(func_2688_call(), 1)
uop_3872 = relay.cos(call_3822.astype('float32')) # shape=(13, 7, 14)
uop_3874 = relay.cos(call_3823.astype('float32')) # shape=(13, 7, 14)
func_3047_call = mod.get_global_var('func_3047')
func_3050_call = mutated_mod.get_global_var('func_3050')
const_3877 = relay.const([-6,-7,7,5,5,-6,-1,5,10,5,9,-1,9,-9,10,9,5,2,7,5,-5,3,7,-9,7,4,-4,-3,2,7,1,10,9,-7,-9,10,-7,-1,-2,1,4,5,2,-10,-1,-8,2,2,8,-8,4,-1,3,-3,-2,-4,2,6,-7,-8,-5,5,-2,9,-6,9,6,-9,3,2,8,4,5,-4,8,5,8,-3,6,-4,-10,4,-4,5,-7,-7,-4,7,-10,-4,-4,-4,-8,7,-8,8,-4,3,7,9,4,-1,6,-8,10,7,-8,8,-9,-1,6,6,-2,-9,-7,-3,4,-9,-1,-7,8,6,-6,-3,-9,-5,-4,4,9,6,-2,7,4,-4,-3,-7,6,7,8,-8,-4,10,3,-5,7,-8,-10,-5,-3,1,-2,8,-10,2,7,-4,3,9,10,-8,-5,6,-5,2,-9,-5,1,-1,-10,-10,-2,-10,-2,1,-4,1,-7,-9,-9,10,3,-1,1,-7,4,10,6,1,8,2,-2,3,1,2,2,7,9,2,-1,-1,-8,3,10,2,7,-1,-6,-8,6,-4,-4,-6,3,3,8,-1,6,2,7,5,7,-2,-10,-9,-2,5,-6,-1,8,2,-9,-6,-8,-2,-4,8,-2,-6,3,-9,10,1,6,6,-5,1,3,2,8,6,-10,3,7,8,-7,-4,-2,3,-8,-1,-7,-8,2,2,3,-1,-2,-7,-6,-10,-2,9,1,2,-1,2,-7,-8,10,10,8,6,-8,1,-10,8,-7,-7,-1,6,4,-9,10,-2,7,-4,5,-5,5,-10,8,8,-7,2,8,9,9,4,3,-10,10,-5,3,8,7,4,6,-9,-1,-2,-2,-10,6,8,10,2,-1,-4,7,4,-2,7,4,-2,10,3,-4,1,-9,-1,-9,10,10,-6,-8,10,1,-9,-5,10,-6,7,8,-1,-1,5,-5,-1,8,3,8,-7,3,3,-10,3,-8,7,-10,-2,-1,2,9,-3,1,-5,9,7,10,10,-3,-6,-5,6,1,8,-2,-10,-4,-1,8,5,10,9,-1,9,-4,-6,10,-6,-9,-3,-7,-3,-5,-7,10,10,3,9,-8,8,5,-1,-6,-8,-5,6,-5,2,-5,2,-10,-5,-4,5,-5,4,-8,7,-3,-1,-7,10,-7,-1,-1,10,-7,-4,-1,1,-3,10,-1,9,3,4,-8,1,9,10,4,3,6,2,-6,7,-9,3,5,6,4,9,6,-7,-1,7,8,-9,-7,6,-6,-3,10,-5,-9,-3,2,-5,2,-3,1,-2,-10,-5,-2,10,-4,2,-2,8,-7,6,-5,-8,-3,1,3,-6,4,9,4,3,4,-1,2,10,2,-9,-7,3,-9,5,-8,2,4,-8,-3,-4,6,-5,-7,-8,-1,6,-5,7,7,-4,4,-7,-9,5,-7,1,6,-4,1,2,10,-7,10,6,7,-2,-8,-1,5,-1,7,-8,7,8,3,-7,9,-5,-9,6,-3,-1,7,-9,8,-5,-1,-9,-2,-6,8,-5,9,-8,2,-8,-2,5,-1,-2,-4,5,7,-6,3,-3,7,-10,9,-9,-3,6,-6,-5,-7,5,3,9,-3,8,-8,9,-10,-6,-8,-1,-1,-8,-10,-1,9,8,-5,-1,-3,6,-9,-9,-3,-7,-7,4,7,-5,5,4,2,-8,-1,7,8,-5,6,6,-8,-2,1,-3,8,-5,-3,-8,1,4,-3,-5,-2,-7,-4,-10,4,-7,10,5,-9,-10,9,7,-2,-3,-2,7,1,-4,5,-7,-8,7,-6,3,-1,8,-10,2,-8,8,-3,5,9,9,5,-4,-2,-10,-3,4,7,4,8,1,10,5,-6,-7,4,-8,6,2,3,6,9,10,3,5,-9,-7,-8,4,5,-9,-1,-7,-9,5,-3,7,-3,7,-2,-7,-1,-2,7,2,-9,-10,-6,-5,8,-6,-3,4,-2,1,-3,7,-3,2,-4,3,-5,-4,-1,-7,-1,1,-8,7,6,-5,8,-5,-10,-2,-3,-8,7,-1,-2,-7,-3,-6,-3,-2,3,-8,-9,4,9,-4,9,3,5,-6,2,10,4,-6,-9,6,8,-4,6,-6,2,-7,3,10,-4,5,-2,1,10,-4,6,2,-1,-10,-2,2,-10,6,-1,-3,3,-10,4,-2,7,-5,4,-8,4,4,8,-10,6,-4,-4,-1,7,-1,-3,7,-9,-4,2,9,-1,1,-8,-8,9,-3,-6,-10,-8,-6,-6,-10,7,-7,5,4,9,-3,-6,-5,-10,-10,5,-1,-2,1,-10,-4,-4,-8,9,2,9,6,8,-2,2,-7,1,9,5,-3,2,3,-10,-4,5,6,-3,9,6,10,-5,-6,-6,-2,-6,5,-4,-5,-1,3,6,8,-4,3,-10,9,-3,-2,1,-10,-8,-8,-5,-7,3,-10,1,-2,-7,-6,-1,2,9,3,-7,8,7,-10,-8,-7,-10,2,9,6,-1,4,-7,-6,-10,8,-9,5,-2,-8,-5,-3,-4,-4,-1,8,3,3,-8,-6,-7], dtype = "uint64")#candidate|3877|(945,)|const|uint64
var_3878 = relay.var("var_3878", dtype = "uint64", shape = (216,))#candidate|3878|(216,)|var|uint64
call_3876 = relay.TupleGetItem(func_3047_call(relay.reshape(const_3877.astype('uint64'), [945,]), relay.reshape(var_3878.astype('uint64'), [216,]), ), 0)
call_3879 = relay.TupleGetItem(func_3050_call(relay.reshape(const_3877.astype('uint64'), [945,]), relay.reshape(var_3878.astype('uint64'), [216,]), ), 0)
func_3253_call = mod.get_global_var('func_3253')
func_3254_call = mutated_mod.get_global_var('func_3254')
call_3889 = func_3253_call()
call_3890 = func_3253_call()
func_155_call = mod.get_global_var('func_155')
func_158_call = mutated_mod.get_global_var('func_158')
const_3894 = relay.const([-2,9,6,8,7,7,-7,1,-9,-6,-8,1,-2,4,-2,6,-9,5,-1,7,-6,-5,-5,10,9,-10,-1,-7,-7,-4,6,-5,7,10,5,-3,-2,-8,5,10,6,-10,-3,7,-2,1,3,4,-7,5,4,5,-8,-2,10,8,-3,2,-9,-6,-4,-10,-4,-4,-1,-3,10,-2,8,3,7,6,4,-6,9,-6,10,9,-2,-4,-3,-9,-4,3,-6,-10,10,3,-5,6,10,8,-10,3,-9,5,4,7,5,-10,4,4,-7,7,5,-6,7,-4,-1,9,5,-4,-9,7,-8,-5,-10,-8,5,8,1,6,10,-7,8,-2,1,2,-4,-4,-9,-5,-9,5,-8,-5,-1,-9,10,3,-1,10,1,-1,-4,-7,5,1,7,-9,3,6,-6,6,-10,-5,5,10,-9,3,6,-6,4,-7,5,7,-2,1,-7,-6,-7,-7,-6,10,-8,1,-5,-6,-4,1,9,-7,-1,10,5,-5,5,-5,-9,-10,-8,-2,8,1,1,3,-9,2,7,8,-6,-2,-4,-3,2,9,-4,4,-9,6,-6,-9,-7,5,-10,6,5,-8,7,-2,-7,-2,2,-5,-8,10,-9,-8,-9,-2,5,7,-6,-9,-10,-5,-1,-10,-10,5,-5,1,-5,2,-2,-5,2,7,10,-2,-6,-7,-3,-2,-9,10,-2,-2,10,1,8,-10,-1,-10,-2,9,-1,-7,-3,-5,3,-8,6,2,-4,9,2,-2,-6,-3,-7,8,-9,10,1,-6,-3,-1,-6,5,7,-2,3,1,-8,-10,7,5,-1,9,2,-6,10,2,-10,6,2,8,3,5,-6,-8,-2,-10,-8,5,-4,5,-8,-10,5,-8,3,2,-9,-1,3,9,-2,8,-8,4,-4,8,7,2,3,8,-8,-3,-1,-4,-4,2,2,10,1,-3,-2,-8,-8,-10,10,8,2,7,-8,10,3,-1,-9,6,6,6,-2,-6,5,-3,8,5,7,-5,-4,-10,-4,6,4,5,1,6,8,-4,-10,7,10,-9,-5,-1,-7,10], dtype = "uint8")#candidate|3894|(390,)|const|uint8
call_3893 = relay.TupleGetItem(func_155_call(relay.reshape(const_3894.astype('uint8'), [15, 13, 2])), 0)
call_3895 = relay.TupleGetItem(func_158_call(relay.reshape(const_3894.astype('uint8'), [15, 13, 2])), 0)
output = relay.Tuple([uop_3872,call_3876,const_3877,var_3878,call_3889,call_3893,const_3894,])
output2 = relay.Tuple([uop_3874,call_3879,const_3877,var_3878,call_3890,call_3895,const_3894,])
func_3901 = relay.Function([var_3878,], output)
mod['func_3901'] = func_3901
mod = relay.transform.InferType()(mod)
mutated_mod['func_3901'] = func_3901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3902 = relay.var("var_3902", dtype = "uint64", shape = (216,))#candidate|3902|(216,)|var|uint64
func_3901_call = mutated_mod.get_global_var('func_3901')
call_3903 = func_3901_call(var_3902)
output = call_3903
func_3904 = relay.Function([var_3902], output)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3253_call = mod.get_global_var('func_3253')
func_3254_call = mutated_mod.get_global_var('func_3254')
call_3906 = func_3253_call()
call_3907 = func_3253_call()
func_155_call = mod.get_global_var('func_155')
func_158_call = mutated_mod.get_global_var('func_158')
var_3915 = relay.var("var_3915", dtype = "uint8", shape = (390,))#candidate|3915|(390,)|var|uint8
call_3914 = relay.TupleGetItem(func_155_call(relay.reshape(var_3915.astype('uint8'), [15, 13, 2])), 0)
call_3916 = relay.TupleGetItem(func_158_call(relay.reshape(var_3915.astype('uint8'), [15, 13, 2])), 0)
func_3219_call = mod.get_global_var('func_3219')
func_3222_call = mutated_mod.get_global_var('func_3222')
const_3922 = relay.const([3.168612,-4.533812,-2.855368,-1.284870,1.970310,-6.132624,7.713348,0.553368,8.128306,-0.979341,9.776980,-8.184190,8.293472,2.613429,-3.178459,3.757672,-8.051515,-5.720539,4.144386,7.334592,1.479288,7.268702,-3.548365,-4.964778,4.228157,9.343771,-1.729031,5.364243,8.803288,-6.556386,7.939289,8.924308,7.364520,3.283660,6.974299,7.992291,-4.567050,3.130401,5.501300,1.045638,-5.406390,9.200163,-3.159212,1.184550,5.814873,3.992076,7.508250,-0.003908,0.496663,7.847144,3.550092,4.904657,2.914870,-6.312537,-2.210760,-5.249634,-5.883466,3.052297,-8.367789,0.958626,-5.720518,2.267888,4.135085,-2.256359,7.253679,6.378795,-9.106894,-8.386324,1.842045,-2.049113,-6.408651,9.961707,5.496934,2.360975,8.511063,3.041198,-8.028886,3.127013,9.377672,-8.068036,5.395401,3.000883,-1.384418,-9.754733,-7.020623,0.444128,0.755682,-4.689447,0.976713,-2.225967,-8.158855,-1.330556,-4.208801,-6.948733,9.181627,-1.623348,5.668875,-7.516620,-3.295612,3.463393,8.181572,1.746697,3.437121,4.252394,-8.453451,9.590734,-5.556325,1.100739,1.108111,-3.276432,-8.947534,-5.866109,-4.350574,0.350707,1.893946,7.420296,2.637396,1.723931,-9.242847,7.466948,-5.879707,3.435992,-0.428278,-2.731551,3.524954,-1.712323,2.618917,9.441500,4.876096,-9.664682,5.636002,2.719484,4.642069,-1.125898,-9.543926,-7.654573,-4.852001,6.393839,-8.007901,1.533994,-3.356589,6.149312,-9.154079,8.064491,3.442937,-7.779649,9.958533,0.174546,-9.808829,0.387644,8.326361,1.856017,4.551487,-2.104924,-7.095645,4.242876,5.724655,3.364406,4.265650,9.231892,-1.956678,-2.632248,5.860966,-5.145368,7.444555,-6.144256,5.901767,-1.288745,-8.109174,-4.793335,-5.109995,7.853777,-4.319928,4.884327,7.281036,-1.996586,-0.968710,-3.630739,-9.618087,0.453809,-0.781828,-1.411848,-7.879057,-3.682444,3.865871,4.841925,4.222590,1.275696,4.824126,1.577735,3.009661,0.242551,-5.923363,-8.562441,-8.476773,-1.047860,2.503541,5.993215,-1.821797,5.050103,-1.486976,1.292247,9.090944,-6.122071,-8.713525,-6.027813,9.112800,3.819034,2.334398,2.511024,-1.262492,-1.517396,-1.529853,2.253776,3.274570,0.069630,6.213421,4.240590,4.496761,-8.180458,-4.069635,-0.793045,-3.377736,0.049827,8.063772,6.331653,7.050477,7.274823,0.193427,-3.003117,4.865850,9.488118,-4.591454,-1.080196,-3.662230,7.446798,2.863736,-8.430097,-1.654889,0.755292,-5.761942,1.257944,-1.371658,-3.702076,9.778057,-4.883091,-4.901419,3.669297,7.866722,-8.920484,-2.841081,-0.474033,4.059575,2.671226,-7.109827,6.456168,-9.235707,-4.341728,-3.321342,-1.263944,4.195692,-1.703997,-2.419496,4.312055,2.936057,0.239382,3.842129,8.102060,3.181834,-0.686996,9.209606,-3.360337,-1.703152,-1.653111,5.269699,-8.949646,-5.321528,-3.319466,6.218330,-4.878940,-4.906758,-8.497573,4.952600,-1.139325,4.355285,-8.764197,3.830858,-0.340706,-8.076807,-8.574159,3.081144,-0.980168,7.988395,6.502643,-0.875175,-2.258549,3.041319,5.863680,-1.971227,2.923876,-3.516784,5.749846,2.931564,-6.089250,-2.340983,9.368242,7.501734,6.735049,9.226943,4.776260,-0.382179,-0.584710,6.848143,-9.685988,6.721976,8.135380,-0.969331,5.402343,-0.354601,5.247384,-5.532005,-3.838022,-1.387107,8.908936,-3.813230,-2.488568,-5.354862,0.658277,-6.059727,0.581455,9.357298,5.651748,9.661423,7.821371,-9.219878,0.548239,-4.861850,4.909938,2.307181,-2.113966,3.252387,3.699612,1.239859,7.045474,-8.019779,1.294330,0.867486,5.818117,-4.199698,-9.598324,5.957421,9.322281,-6.173212,1.640160,9.643737,7.326540,-8.272111,-1.222783,2.342983,4.616414,1.013155,-3.404634,7.643341,0.722805,-6.031622,1.850627,7.951754,3.426562,0.806041,-0.609308,-0.851679,9.133451,-2.709673,-3.186190,-2.482330,4.411555,7.361263,-0.055477,-4.919391,-7.713347,-8.755852,-0.510695,-7.980016,3.065166,-4.091235,1.879604,6.944488,9.818698,-3.045727,-4.303978,2.272167,-1.096895,2.324450,-3.973542,0.890040,-5.918434,-8.586951,6.411690,3.933233,-2.181113,-0.517625,-0.453818,-6.345775,1.372837,-5.083407,3.609174,-0.514769,-0.013488,6.967651,6.320714,3.861680,-1.690517,-8.136229,-3.908727,-1.165626,-2.539873,-8.564763,-7.308652,-3.062785,-4.660809,9.309358,7.104112,7.322056,3.732122,-1.908952,7.625058,0.280659,7.539011,-8.959427,8.667665,-1.642940,0.940885,-1.886471,5.550682,-6.911127,3.424475,-1.052019,1.355876,-8.185787,-8.809427,5.843963,-6.223557,4.625204,-0.475712,-1.696951,-1.210541,8.923068,2.906207,5.252923,4.226667,-6.849838,-2.914067,1.867454,9.108128,-3.052704,-3.903921,8.189488,-5.912783,-1.968916,-3.384745,-1.788289,2.948775,2.706916,-0.051367,3.260710,-3.429871,-2.156409,-8.166710,-1.196620,-8.934324,1.263864,-9.153572,8.944046,5.792700,7.646639,-0.206394,-6.960404,-4.156764,8.815983,3.634621,-7.311110,-5.059054,-3.390198,-8.617234,-2.236476,3.505081,5.046386,9.057368,9.294749,-0.799551,-9.101504,-0.389457,-1.423655,-5.952614,5.466377,-6.929995,6.075335,7.006555,-6.744714,-7.425222,-9.337049,-1.556183,4.842080,-1.680996,8.522441,-4.571820,-5.692513,-2.274988,9.337322,-4.495453,-5.390683,-5.106352,0.884863,9.778020,2.039874,0.867911,-1.790166,9.213909,1.830642,-7.635761,-0.140925,-2.160732,1.946899,9.859016,-7.669194,-8.250265,-2.203840,-2.013862,-8.959297,6.101876,-4.332551,7.151586,4.964983,-0.051034,-9.796441,2.866997,3.894531,3.311263,-0.684327,3.764394,-5.229986,-0.511017,-1.318201,0.422185,-2.348138,-6.080298,7.945915,1.196944,-1.213320,2.857015,-9.083260,3.151275,-4.610407,2.915795,8.145798,0.850737,-8.031042,8.628954,8.859298,8.255798,4.440923,-3.348278,1.750606,6.744994,3.101352,-7.274112,9.821319,-6.097684,6.946864,9.238998,-5.265472,-2.917753,-6.328555,-4.158106,-8.150190,1.604519,2.023151,-0.106667,-4.834353,4.850359,-6.741503,1.194763,4.120553,-5.013691,2.394016,-5.976028,-5.896187,-8.691091,-7.695238,-7.590303,-6.104985,-9.301074,3.232242,-6.816374,7.189060,-9.438675,-9.565167,0.251418,9.439799,-5.266319,0.097039,-3.554801,7.281576,-2.203852,8.677281,5.052529,3.001439,-4.031779,-8.300764,-1.873871,-8.260253,-7.652135,-3.987224,-4.250328,3.421159,6.333298,2.823564,-3.338303,-6.756804,-2.050090,-7.622873,-3.912449,-6.848347,-9.786476,0.824178,-0.534513,3.351380,-7.105617,-2.687325,1.891973,6.457152,7.490090,6.938428,-5.464227,-8.094327,3.410826,-2.886996,-5.006794,-0.750985,6.074962,3.532332,7.422874,-0.457962,1.594279,7.432928,-9.204358,6.359210,6.057458,-2.114451,-3.965659,5.470301,9.658339,0.560986,-0.341597,-0.722558,-7.187996,6.324933,0.027517,0.717698,-7.186658,2.002549,-3.125888,-5.416102,8.890684,4.304389,-8.409777,-8.974123,-2.906459,1.382784,4.644843,-0.531357,-7.128808,-0.575396,-5.097717,-2.943859,-5.477752,4.832456,-4.338159,-5.100522,-7.717801,9.499159,-1.333363,-2.732257,-8.945727,4.889720,-5.351687,4.932042,8.536697,-4.960057,3.886849,9.778857,-0.699089,-8.720229,-1.430634,5.112673,-3.446876,2.527541,-7.677420,0.699657,-1.437384,-1.417303,9.702752,1.459430,6.869145,-6.806597,-2.004657,-1.354162,-2.526462,4.458771,-8.855283,-2.456171,4.923079,4.941775,1.933452,-2.216601,-8.177857,-9.934155,-0.945089,-7.765679,7.354913,4.196811,-4.931631,8.036976,-4.103536,-5.358078,4.642752,-9.180064,-3.926687,-2.014662,-2.955868,9.378523,4.119643,-0.488698,0.936667,-0.833651,5.327516,-6.853702,6.435846,5.336483,-4.468781,-0.964309,-3.433836,1.735156,8.271439,-1.496671,-6.513358,-9.520737,-2.359346,-2.015888,2.280575,-8.820860,-4.975908,9.028957,-7.978494,2.152955,-8.771864,-8.444007,-0.809515,7.687223,9.822466,-6.833001,-6.502546,-2.872166,6.955206,-5.749770,6.561878,-3.959885,-8.978364,7.819625,-8.107070,4.353537,0.622863,2.215907,3.736628,5.946631,-2.966978,7.962627,-2.013428,1.626137,-0.947886,-2.913055,5.619547,9.626982,-1.974353,-4.840145,8.189338,3.582242,-6.702888,1.624331,-2.435351,-4.069230,-2.750669,4.220002,4.959909,-1.885641,-9.803389,2.103041,6.775735,3.866546,-6.479983,-5.658160,-7.253594,-4.214487,-0.440652,-6.253998,-7.022332,-0.830253,-0.614175,5.216978,-7.200317,7.254142,-6.106560,-5.156203,7.634513,-0.301979,-1.303653,-8.205427,-9.236958,9.705510,-2.905761,2.390036,-4.664132,4.828749,2.699585,0.612110,-8.135958,5.966041,1.223968,3.636322,6.117998,-7.782964,-3.579654,-5.006147,6.554468,-7.726158,-1.234413,-8.311290,0.396748,2.193468,-0.866565,-0.016930,-7.695433,-4.393237,-8.484297,-6.140464,4.392623,9.398597,3.349222,-9.407869,0.286451,-4.120283,5.858449,-2.166157,-4.527146,8.524606,-6.153151,-8.582023,3.136859,7.077227,-1.871686,-5.371468,-9.022184,9.615613,4.290091,0.567247,-1.149222,-8.225560,-4.515914,-8.825915,1.374919,-4.500387,-4.787533,-6.805728,7.212878,6.812965,2.729085,4.502694,5.361277,-9.792339,-7.503516,1.861032,9.660304,-6.225337,-5.586999,2.584049,1.754695,-6.113654,-9.838954,8.576393,-1.769478,4.236463,-8.111817,1.142110,0.351616,7.732546,7.329057,7.194155,-5.377718,6.992354,-1.544000,-6.231744,-4.270342,5.604164,9.360665,-2.005379,1.248993,-6.436384,-2.145800,7.100372,5.736655,5.538604,2.618107,6.719256,0.229918,7.083220,2.634752,4.459456,-1.389731,-0.341064,9.370263,9.066652,-7.504788,8.531522,0.717997,8.288748,9.974368,-7.397927,8.355626,-9.536824,-2.745671,-5.272157,-1.190430,6.174332,0.802894,-5.053475,-9.926347,9.185996,8.069245,0.166689,-7.692130,2.416733,9.638826,-0.480457,-8.334393,2.553124,-3.039772,-2.489331,8.808562,5.375231,-8.795214,-8.644574,7.484430,0.727220,-1.808337,-1.142290,4.307338,-6.854510,6.988578,0.811546,4.221551,-0.481373,8.265236,-8.300301,-8.767456,0.081063,-2.686433,1.640166,2.104445,-7.239450,6.469463,-6.479396,1.030100,7.721819,-1.825894,-8.648353,-2.349255,7.585688,5.158780,-0.843268,-8.333333,-0.467799,0.748496,-6.953986,2.417347,-9.159012,2.885184,3.894067,1.549893,0.682132,-0.960241,-3.896486,-0.246388,-9.334908,7.767668,2.300912,-2.772376,-9.904725,4.006653,-6.705239,-1.008470,3.761742,-2.571986,-3.060657,-0.932587,7.711576,5.013249,5.911334,4.126622,1.895192,-0.889693,-6.119963,4.872660,9.285273,-3.129583,6.839103,-2.788971,-2.930863,6.637452,1.451701,1.085578,-5.376478,-1.323741,-5.912526,8.574165,-1.804474,2.785797,-4.211495,-5.339197,1.642566,-1.475179,2.820064,-8.620116,8.137285,-6.576207,9.644376,3.052626,-6.968977,5.584449,0.185126,-1.699969,-8.581557,5.932779,-8.135513,-3.157530,-9.219858,-0.868433,-8.305650,2.994279,4.040020,-9.881617,1.129573,-0.431745,2.209790,3.730447,0.786297,-0.953310,8.930394,-2.969942,5.361004,2.242914,4.008105,6.844050,-4.530712,8.080494,-0.953600,-0.381343,6.850085,4.091615,-3.451060,-1.669630,7.779893,-8.923687,-3.381615,-1.474992,1.302360,8.346393,-3.905432,-9.324089,0.293393,-2.541179,9.746748,-6.386942,2.438565,6.579606,-8.385081,5.208524,3.312542,-5.618884,5.915388,2.909426,-3.339700,3.551526,-4.108549,-8.871829,-1.145821,1.337451,8.252922,-1.377141,-5.899445,1.920431,9.694510,-3.374315,-4.205717,-4.937038,2.731451,-0.066967,-2.587938,-6.589012,-9.907544,2.454517,7.933368,-4.257342,-3.872194,-5.384117,9.869053,4.782661,-4.666771,8.636225,-6.832249,-5.772364,2.008632,6.766579,1.878631,-2.710960,-6.390062,-5.514092,3.149883,3.060395,3.322148,-7.224503,7.108871,-9.409573,6.915972,-0.962095,6.946526,4.442595,0.768506,2.476271,7.814365,-1.228126,4.461158,0.139577,-7.124178,-3.654188,-3.630433,-1.595629,-4.832649,-1.358380,-1.802860,1.291667,2.508269,-7.530032,0.868359,1.854436,-6.528757,0.047169,-3.790292,-7.822770,1.072093,9.660605,0.523371,5.924516,-9.630148,5.799111,-5.638473,-2.492131,1.583896,-1.550394,-7.104404,2.716507,-5.997072,-0.623215,-5.678412,4.360322,4.694220,3.606441,-7.600031,-7.563155,-9.016412,1.820669,-5.783962,6.797646,-8.639169,0.459947,1.674523,0.225649,0.277517,5.877782,-2.832673,6.898833,3.808199,-3.247727,9.358391,-7.208530,-5.413945,-3.916706,3.273429,7.687662,4.904531,4.524868,3.551720,-9.150224,-1.497874,-1.451096,-5.320393,3.456838,1.464590,6.068601,-4.302662,-4.987885,8.262301,-1.885126,-2.496961,5.985977,-7.094253,2.987479,4.598501,-9.338191,2.294545,4.506348,-7.587329,3.923032,-3.377195,-4.508085,-2.379729,-2.981601,8.659073,-4.872345,-8.836861,3.217417,-2.942188,-8.758415,7.622888,-5.012850,-8.127126,-6.516330,-7.471209,-9.040769,4.930028,7.251680,1.439813,1.922016,-6.478505,0.173558,6.595815,3.463453,7.973433,-9.173209,-1.345934,7.759258,-6.209184,6.353326,9.180616,1.400455,-6.239150,-2.839428,-3.167761,-8.083752,3.815943,2.114547,1.078073,3.147493,5.563353,9.545220,-0.386017,-4.276941,-2.538320,4.634990,0.403246,-2.504416,1.417339,2.037540,8.374736,7.373115,3.443792,1.918080,7.639112,4.147286,-4.106125,4.517354,7.297051,1.531005,6.215686,9.008609,-3.663704,5.205319,-6.389460,7.944224,-4.640351,2.953499,-1.200616,-5.441105,6.013929,-9.535673,-2.680853,-5.793213,1.981131,-9.302706,-6.051768,0.818024,9.863533,-0.365796,3.397149,1.670203,-5.988964,-1.654041,-0.461818,3.776562,-7.014243,6.303652,7.500177,2.511222,-9.129696,1.323243,4.261011,9.749679,6.425573,0.319223,5.700511,2.524478,2.793234,-5.535979,-5.551148,5.469778,3.233209,-6.016489,-8.819066,0.207887,3.173206,8.313923,7.954446,2.416340,-9.394550,-9.461308,-8.965923,-7.012473,1.627784,6.194126,-0.911072,-7.884471,7.963006,-1.700457,-8.940016,-9.054192,-9.266992,8.340912,-0.758843,0.134311,9.329998,0.957803,2.525705,7.564018,-2.823255,-6.782836,0.658077,6.431022,6.186565,-8.094470,3.268966,9.938475,-4.963957,-6.368908,-1.995337,2.730439,6.312118,6.228782,-6.458181,9.350856,6.608715,6.167089,-9.406396,4.776668,-2.713269,-5.032262,3.693068,-4.356659,-3.164328,-2.048301,-9.747071,-6.159482,-0.430510,-5.328642,-5.735738,-2.593671,6.891580,-8.674379,-9.224652,-4.537010,3.297543,-8.381372,-6.133369,-6.063886,8.822082,4.901035,-3.002617,7.446774,1.892524,-4.332380,6.975501,7.048615,-7.497769,6.873589,-2.557826,-6.013833,-6.408585,-5.873584,4.360417,7.381529,5.647456,-5.470676,-6.792711,9.403345,1.148470,4.582334,-4.271995,2.476818,-4.299383,8.635741,-8.376716,-0.197606,-3.657897,-6.843978,3.026643,9.622103,-6.780843,-0.195538,3.219945,8.049961,9.492026,-9.380444,8.626129,3.873871,-1.850643,-0.174755,-7.886537,7.698595,0.842723,-0.045138,5.544895,-4.561494,7.233033,-0.826676,-6.277641,1.774010,-1.773893,0.094345,1.627727,3.153724,5.774094,5.897148,-0.402815,-6.879420,-1.905896,-4.976119,-2.282560,5.313343,1.619004,1.884419,9.041176,-7.498914,-1.303121,-5.645166,-2.481698,6.358350,8.812644,7.783550,4.497222,-8.466529,-6.517484,0.348266,0.238769,-9.053324,-2.503482,-4.111265,-8.439421,7.404192,-1.221519,-8.747401,9.031139,-4.056468,-3.335488,-0.136663,9.301611,3.124428,0.905440,5.325979,-0.418895,8.010601,2.023188,-7.739848,-5.596463,-0.096028,8.936270,6.898881,-0.616174,-4.589611,8.153826,-0.416778,6.433997,-1.181761,-2.361953,3.414983,9.688221,7.133833,-6.874153,-7.508910,5.656419,7.346895,-0.950458,7.851759,-0.908193,6.663573,-8.215804,-6.018470,-4.116716,-5.914275,-5.698969,4.171014,-1.050896,-6.636025,-9.461027,-0.385144,0.890760,7.585011,-9.813208,-6.277569,-3.265142,5.478854,1.609591,-1.573809,-0.817509,-7.496704,-2.353268,6.105273,-3.122058,5.602891,-8.197735,-0.843014,1.596203,1.691284,-8.479983,-7.357716,-3.375320,6.230961,3.042294,4.841371,-6.118850,1.325081,8.654462,-6.699558,-4.958386,-8.127821,5.445812,8.813504,-3.253443,-8.871073,-6.836369,7.240253,-8.653069,0.551532,-7.258282,-2.268847,-7.950030,0.041149,-3.066611,-3.708484,0.470951,1.412503,7.741009,5.302529,-9.937890,7.447388,-0.634973,6.094940,4.263070,0.279518,4.421426,0.709622,2.851072,7.192139,-0.871333,-3.708701,-4.820792,-0.581985,-0.215148,-5.529842,2.475273,-4.604678,-5.842159,7.809544,-1.247774,-6.199616,-6.125429,6.389572,-2.540132,7.265183,-9.354335,3.833815,1.076252,1.169738,4.521505,-6.535349,7.788197,9.185180,-9.804877,9.434923,1.069591,-6.147832,9.136022,9.635826,-3.854673,-5.319759,-0.999861,-8.701938,7.020984,-9.106729,9.774900,-3.723029,1.961524,-2.522477,-2.203976,-0.829225,3.213274,6.477258,-8.017816,7.780606,5.091361,-7.288242,3.828301,3.328195,-5.583266,1.074678,7.897199,-4.683968,4.267081,-4.730299,-4.192476,9.648224,-0.253576,5.736957,5.796992,5.064932,-4.183044,8.352938,-0.853528,6.699525,-7.302769,-9.329029,-1.018783,-8.000358,-8.859732,5.693179,4.691580,-4.261673,2.663150,-7.412048,-9.688946,9.952094,0.457635,-1.951943,9.687907,-5.648641,1.816638,6.250177,9.707455,5.419122,6.500310,4.117365,-8.036261,-3.331812,4.400482,-4.072233,-1.352091,-2.224836,-9.234051,-6.756556,-1.737036,7.057565,2.242294,9.247705,-0.242678,-1.385293,4.189290,-1.349289,-1.820146,3.959979,-5.127715,8.492915,7.734057,-4.545575,1.060097,-3.479461,-9.340144,0.602284,-9.085946,-3.572329,2.915854,-9.713828,-9.842213,-9.051594,5.520640,-0.755409,-8.431667,1.114715,-9.215824,1.021733,-5.313501,9.967515,-0.406339,-6.866564,-0.539878,7.432578,-2.207503,-7.556269,7.285141,6.017892,9.540699,-0.655736,5.759391,5.986046,6.133029,4.625110,-5.309689,-2.617597,2.641670,-0.459306,-5.544269,-5.795011,9.941081,1.706206,4.522587,-3.825307,8.522986,-1.678619,-0.476125,-7.929007,8.715984,0.940514,-9.736294,-5.351146,-4.979768,7.468537,-0.713187,3.108389,6.549118,-4.009940,8.077700,5.388126,6.522028,-0.091534,3.881381,-1.294493,-8.712829,3.801117,6.991582,2.449298,-2.689992,-5.376562,-2.523520,-3.926510,2.373533,-2.627836,0.510396,3.860909,-8.441381,-5.930642,-4.577886,-9.843514,-7.441198,2.134252,0.956077,-2.867604,-3.285933,-5.028702,-3.065243,-3.416109,-5.618127,8.475943,-8.337387,-3.182480,-1.910584,-6.854922,4.941385,2.818781,-3.044634,-0.386000,1.697830,8.707206,2.985632,-4.099644,0.622623,2.459379,-3.392503,0.076412,9.010572,2.224412,2.582332,-1.993560,-2.839345,-8.171189,4.950613,-4.505875,3.261653,-5.566247,7.236552,3.749999,8.405108,-4.152159,4.879304,-1.062484,-7.849525,-3.029512,3.727066,-7.937423,-6.241614,9.609595,0.353533,9.486434,0.433146,-1.984162,-5.205693,8.950834,-7.907706,2.661305,-8.304658,1.611929,9.118926,-3.219746,-8.336001,-2.650330,2.584847,-2.096677,0.157495,-9.464175,7.158056,-1.668928,-3.874253,7.171424,3.195924,-2.437975,-0.531373,-6.262640,1.939575,3.799153,-7.075931,-5.670598,5.497134,-8.843794,-7.127184,9.167326,0.620971,-5.352047,-9.093819,2.667769,-4.478111,7.515597,1.396904,0.923065,-0.517225,-0.472698,-4.004108,-2.919726,-7.095176,1.277208,7.099539,-0.152581,-1.687212,-1.251435,8.059788,-4.449366,6.082938,-6.996575,-6.710671,5.579166,-0.631906,5.715386,3.506303,-7.797084,-7.289373,-1.162322,6.068552,8.321615,6.293415,-8.943755,7.005445,1.023494,-3.965850,3.831588,7.092427,1.809924,-4.003930,-4.361782,-4.898967,7.313994,-4.107671,2.074507,9.779349,0.513599,-8.688078,2.245668,4.575541,0.779651,-0.158777,-0.698395,2.159989,-5.105721,-5.248393,1.927927,9.615775,6.644794,5.827104,1.428476,5.548126,8.349053,-7.683601,0.762345,8.428763,1.687401,5.168838,3.398270,0.082669,4.375697,3.135486,3.047753,6.726400,-5.250015,8.652000,5.687278,2.857224,-1.409686,8.198872,2.100084,-2.209939,3.430854,-4.398112,1.294111,-8.316364,5.670486,2.958079,-2.107142,0.589814,8.107036,7.687984,-7.948223,-0.373340,-4.430724,-5.977848,-0.560588,7.800342,3.204210,9.941777,1.835995,6.006105,5.823092,7.197795,1.562746,-0.091173,3.319739,-9.790635,-4.661653,4.952346,-8.217952,-2.861625,-3.670027,-0.574609,5.633083,-8.171845,7.965035,2.226460,8.726740,0.517202,-1.040535,0.848083,2.615869,1.674322,-9.471256,-3.434903,-8.671493,-7.626505,-3.842856,-6.804053,-6.199779,6.338592,-9.786934,-2.731981,3.616222,9.621721,2.897204,-6.660132,-1.062411,0.734901,-5.804161,3.814965,-7.469182,7.511568,2.902077,8.696809,7.471430,8.669466,8.209139,8.050772,3.443661,-2.303793,4.525832,3.779758,-7.545594,2.388757,3.820019,-8.799338,-1.686465,-2.565528,7.780644,4.370538,-1.738343,1.624843,-1.525690,8.523244,4.124258,-6.764511,-6.319650,-1.756044,-4.999027,7.665515,-5.871582,-0.087411,2.627968,-5.963574,-0.801912,1.782268,0.165878,-3.363351,2.967521,2.157861,-5.982560,-5.677172,-2.801205,7.173447,-9.931309,-1.382869,-3.929000,5.546190,7.021089,3.001990,5.325519,3.228776,6.527187,-1.266294,2.694076,1.427661,4.290365,-2.793161,-8.411753,0.216952,-3.112503,9.605406,-8.574879,-8.889082,1.683962,3.356907,6.239331,7.419778,-0.982081,0.432229,7.717472,9.777809,-5.184097,-9.549113,-1.326244,8.532932,7.018657,3.196659,3.803968,-9.090785,6.599813,0.480562,-9.173976,0.309044,-3.103966,-8.012494,9.156781,3.911961,2.898923,-8.260024,7.901102,-5.284783,6.722312,-0.399535,1.281605,0.491215,-6.833335,1.110601,8.916753,3.865211,-7.116888,2.394908,-5.997150,5.763431,9.529289,9.401891,-8.252594,0.010860,4.260782,-7.900377,-6.081569,-9.028263,8.147629,7.303422,-8.111370,-7.058443,-0.938140,9.375854,-1.159815,-9.587414,-6.279673,-3.507565,2.897880,-2.897218,7.463507,-8.714516,-6.819048,-1.490447,-2.780001,-8.570975,1.078490,5.209196,9.705929,-8.489359,-6.169365,5.703189,-3.053319,0.306400,5.469967,-5.207392,-3.942558,1.264310,4.715123,-3.602363,9.881811,0.150324,-3.408589,2.024874,4.942356,8.243653,-4.602770,-8.272038,3.010594,0.195363,-9.889227,5.115589,-1.044554,3.301269,8.633935,0.512015,4.683625,8.155238,-8.688057,4.160551,-9.424545,5.596974,3.507037,9.020044,6.739092,9.633556,-0.932368,-2.991612,3.269663,1.057008,-7.170887,-9.988148,4.357148,7.767120,-9.517983,1.415729,6.234159,0.534469,-8.459060,4.882096,8.534954,5.768331,-0.697589,-3.294027,-9.528867,-9.623749,2.303587,-2.096330,-2.650285,-3.363178,-5.831432,1.506589,-3.132085,-1.449847,4.669396,-8.693122,-4.650522,-5.194509,0.370056,3.231322,-0.930530,-3.430161,-4.406332,-2.190303,-7.623522,7.866578,-6.533185,5.918517,7.787055,-1.784927,7.993739,-8.928101,-3.884248,-4.595610,1.652215,7.352341,2.318596,3.914197,-6.558135,-8.523489,-9.159372,9.363987,-5.378988,0.806722,-1.686821,-8.131764,-1.724129,-8.577484,-1.776427,2.438216,-1.367965,2.644710,-7.199879,7.399831,7.819352,-7.927108,2.884203,-5.886294,-0.906259,9.926035,2.034094,-9.741787,-4.692144,8.485409,-8.750065,8.582275,4.509443,-2.089030,9.216736,0.079755,-9.367785,3.874397,1.397810,2.046617,0.844293,6.421666,0.574413,9.433229,-8.475449,-1.942226,3.482668,9.865860,-3.820572,-3.512779,5.953947,-2.563161,3.667859,2.679706,-0.456021,-2.834911,0.835545,-1.212119,-6.014432,0.755999,-0.685996,7.616156,4.772941,5.920442,-3.587677,0.340564,8.209414,4.863241,6.697016,4.911950,-9.287646,-5.419995,4.119471,-3.914305,-4.705235,-9.239819,5.812122,-8.360115,-0.424438,-2.922950,5.409322,-8.992427,-7.147032,-6.888946,-1.812849,3.830033,6.792092,8.292869,-8.965164,-3.915873,9.785537,-0.226885,-5.665924,8.582333,-8.030744,-6.220035,5.642731,-1.443516,-7.630655,-8.594194,-7.144064,4.978402,8.769196,2.392828,-1.986882,-4.392338,-9.221478,-1.213099,9.124950,-2.511631,-8.925579,0.590428,6.732583,6.365328,-8.314168,1.485981,5.177353,3.002459,1.817135,-5.012746,-3.916534,2.640474,0.628516,-0.248199,1.832475,-4.962454,2.352807,0.203668,4.417878,-5.696574,-7.107503,6.190602,0.436631,-0.553215,1.994917,-3.621906,0.336396,-2.012033,-2.257297,4.244395,9.690736,3.487573,-2.914590,-1.751071,1.671859,6.557740,-1.690565,9.561334,2.922853,-5.168007,-7.902928,4.838266,-4.285360,6.817396,-3.862291,-9.816445,-2.233186,-5.468990,-2.153873,5.240166,7.762912,-7.246998,7.577445,6.288817,4.426751,9.991479,0.454226,-1.217749,-4.074364,-7.953557,-8.596009,8.318397,-8.061899,3.167773,-4.536370,-5.079611,-3.194035,7.799806,-9.451562,-8.515668,-2.038712,5.970979,-4.017224,0.816882,2.434587,5.653924,-9.668194,1.270708,-6.320015,1.432621,7.570981,6.208179,-4.336578,5.005895,7.130034,1.672306,1.013886,0.210807,-7.384990,-9.450969,-8.227286,5.719563,-2.838341,3.666188,-4.260278,5.039137,-5.336882,3.479679,3.323233,3.082904,-5.221435,-0.897251,-7.818203,-5.021112,-9.868515,-2.699657,-2.920709,9.229579,-9.827533,-9.940516,-8.131417,-3.312536,-8.813210,9.711535,-2.883246,-6.262892,2.170062,-3.562227,8.933979,-6.593224,-0.644185,-7.731161,9.723670,1.141586,1.428095,-9.431804,-1.922570,-6.513713,-2.400013,-5.436108,1.512511,3.079468,-7.363198,-1.261586,-0.760516,2.725555,7.407766,-6.809499,-8.220521,7.068108,3.758601,1.947575,-4.453019,-4.562927,5.589062,-6.349733,6.073371,-7.610550,5.074324,5.391420,7.906672,-1.253598,1.556571,3.802629,2.686922,2.703897,-5.154290,-3.093483,-4.237889,4.108061,6.182959,-7.279677,-7.134853,-2.288563,5.545306,6.822247,2.069678,-1.829660,-6.186879,-2.440179,-3.971859,-5.443522,-4.110740,5.927035,3.910155,-4.897312,-2.224980,-8.073625,1.764850,4.721818,-4.660145,-2.208733,-7.668768,-2.308339,-2.502277,-2.103846,-6.127230,-8.165715,3.128942,-0.722850,-8.532851,-9.507081,1.344771,0.975622,8.635126,-4.958512,-9.014043,6.923090,5.609274,0.074930,-1.664104,-8.132800,7.696203,5.523846,-5.469841,7.104684,3.840463,-7.443123,-2.329431,6.734895,-3.446781,-8.141146,-7.437431,0.687637,4.288266,-4.571742,2.096631,7.184069,9.289398,1.599577,-7.111394,-5.948350,-5.234562,-7.758853,2.940707,7.827073,4.219523,-1.828181,2.685472,0.558249,-5.701552,8.294877,-4.116710,-8.679035,0.744585,-7.821976,5.595768,5.742655,9.158226,-4.371819,-3.782843,-4.390983,6.122612,5.762106,-0.260967,-6.508142,-2.626834,-4.444661,-4.259923,-7.776477,7.380915,3.217977,-8.967966,-4.242152,-7.045412,-8.997046,-3.564765,9.681713,8.580737,1.691551,4.028278,-8.748689,7.382609,3.861183,-8.199867,7.360488,-9.868673,-2.107372,-7.836392,-1.332527,6.227082,1.934682,6.649102,-8.276680,7.259002,-1.625139,8.312695,0.114019,-2.994997,-7.367432,-6.497442,-4.746714,-9.234731,2.518069,5.230386,1.402537,-1.269363,7.098132,2.661209,-5.367922,7.368738,-7.187985,-5.821470,5.675584,-6.657672,5.087066,9.012874,9.748137,-9.483594,-5.619134,-3.509280,-3.492261,-3.747054,-5.179164,9.045587,5.260713,6.915516,5.160567,1.317515,-2.934823,-9.399388,-0.919467,1.965111,1.116311,0.582342,-6.578112,-1.524532,-9.897584,-1.951593], dtype = "float32")#candidate|3922|(2640,)|const|float32
call_3921 = relay.TupleGetItem(func_3219_call(relay.reshape(const_3922.astype('float32'), [2640,])), 2)
call_3923 = relay.TupleGetItem(func_3222_call(relay.reshape(const_3922.astype('float32'), [2640,])), 2)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
var_3925 = relay.var("var_3925", dtype = "float64", shape = (396,))#candidate|3925|(396,)|var|float64
call_3924 = func_585_call(relay.reshape(var_3925.astype('float64'), [11, 9, 4]))
call_3926 = func_585_call(relay.reshape(var_3925.astype('float64'), [11, 9, 4]))
func_2798_call = mod.get_global_var('func_2798')
func_2800_call = mutated_mod.get_global_var('func_2800')
const_3928 = relay.const([-4.048527,-9.958897,-6.825827,1.086579,3.739087,7.284553,-6.803716,-5.468835,8.541535,7.409205,-0.445901,5.743105,-1.581826,-4.572289,9.169236,4.069781,-5.437293,7.395750,-3.424615,7.623350,-0.458121,3.081187,1.084524,2.513950,-8.344923,0.857636,6.577049,7.268225,7.092980,9.258475,-1.378793,-4.899402,-2.682032,5.705584,0.028368,6.104575,-8.883210,-7.346638,-3.431142,-8.186694,-0.226733,5.702461,6.973073,-2.704742,-4.071080,9.901715,-3.787709,-5.594551,5.885157,9.387565,-4.801481,-8.737328,3.410481,-2.941299,5.160660,-4.339146,5.079013,5.364938,-3.152881,6.918574,-8.044576,9.819888,-1.381039,5.806611,-2.136734,-7.177167,7.315990,0.819693,-1.908106,-5.435165,-7.063853,7.863363,8.570535,-0.288288,-3.280900,-2.895806,-7.534872,4.345772,9.417095,-8.280718,0.070662,1.351182,-0.398916,4.032954,-3.264568,-0.070053,-5.936531,-6.888570,-2.127413,8.429640,-7.640208,5.340680,-2.963802,-6.139542,-7.563920,3.954376,5.578891,-7.605854,8.558217,-4.185723,-2.533167,-9.650846,2.989766,-2.001763,-2.898244,-2.484585,4.864039,5.018272,6.555096,-9.410716,3.372300,6.464171,-8.451107,-1.641835,-7.874378,9.701311,4.472611,3.328769,8.330927,-5.369328,-8.969698,-8.054259,6.921967,9.629922,1.389038,-6.401342,0.027318,-8.681444,3.042603,3.071603,9.899918,-3.856428,-4.545725,1.022830,7.329894,2.164362,1.592322,-8.597466,-3.490710,3.864938,2.232939,-5.448233,6.075944,-3.628914,9.773095,-8.248099,-5.750956,2.865928,3.418444,-8.277129,-9.309158,-4.797662,-1.241735,-1.183226,-8.145438,-9.098951,1.306931,-2.511361,8.286896,-5.790487,-5.516370,-7.231880,2.290262,5.469584,-1.931227,-5.480318,-4.518324,-7.535419,6.513214,2.429818,-1.715046,3.680409,-1.103502,0.639397,-5.624641,-5.000012,-6.903792,7.573405,-1.236767,-8.531234,9.552193,6.537468,9.121688,-5.270334,5.637913,-8.918070,6.231365,0.212877,3.413514,-7.490732,-8.679041,-1.573730,3.143736,6.881410,6.350172,-7.311828,-4.230196,-9.839641,-1.479685,-3.472240,-6.742500,8.457673,-6.746445,2.957973,9.520706,6.845422,-8.791679,0.884902,4.845514,0.114873,-7.401094,9.315311,5.461987,8.675319,-8.284273,2.165816,-8.410520,1.164267,-5.535729,4.022496,-3.497456,6.156169,-8.666666,-6.062192,4.285919,-9.110963,1.332487,-6.312680,4.851105,-2.521743,4.807115,-0.908568,3.159937,-4.916215,-3.063850,9.663520,-1.019307,7.892209,6.572131,3.321755,7.452577,1.761171,3.530658,-8.974699,1.853610,1.819570,-7.757708,-6.866901,5.568263,8.418309,-8.531965,-0.915692,-2.143290,-7.117259,2.866781,-9.031018,4.515703,1.246429,-1.295148,-4.547181,5.834953,-5.954018,9.403384,9.933915,-7.124601,0.176507,6.545306,6.108311,0.013873,-6.782374,2.964037,-2.627515,-6.213348,-7.053995,8.710305,-1.198870,-8.994529,-1.990124,5.682134,-4.161079,9.472417,9.313221,4.934646,-2.969503,-0.421070,7.732698,4.425642,-3.366415,0.513435,-6.536715,6.227500,1.511116,-6.426913,-0.228761,8.395153,6.020938,-2.112469,-5.667151,6.335123,-2.497311,5.601358,-1.235332,8.960254,-7.644071,7.524296,3.072443,2.309062,-5.905708,2.351800,7.282292,9.036415,5.650342,0.049504,4.887776,-0.060335,-2.240275,8.603892,-3.510913,-5.438644,5.283137,-1.515602,-6.162487,-7.256126,9.916976,1.346702,-5.291335,6.921879,-4.364170,7.078959,6.823949,-3.425280,9.336408,-5.924838,-6.044532,-7.600333,-1.987167,4.585801,-1.987327,1.717161,6.024322,3.602578,1.503674,0.169865,9.370452,9.272421,-9.790576,3.256095,4.804142,2.591906,-3.543274,-0.302163,-2.017058,7.137235,4.918701,-5.880015,-9.439146,-9.284228,-9.175583,5.632244,6.156565,1.202443,-3.218741,1.893960,-3.037951,-6.504457,9.069653,-7.737826,-5.410389,-6.807827,-7.396903,-1.279990,-7.990778,8.382540,-5.653397,3.760445,3.668861,1.558556,4.917882,-7.089014,8.306561,-4.776590,8.637421,3.142311,-7.097180,2.988961,-1.291506,9.035038,-3.558735,-4.400787,-1.070730,-1.756256,-6.582137,3.820184,2.390811,1.727179,-5.622770,9.576727,-7.705173,3.799006,-2.412902,-9.683787,-4.923915,-4.158964,-9.069410,9.847274,-6.922131,-5.370554,3.534381,-3.977340,1.439278,-7.649430,9.644967,5.840356,-7.580512,-1.315309,0.386278,2.480980,5.412211,9.573989,-6.860608,-7.331465,-7.122555,6.753508,-7.153318,-5.253179,-4.278839,-3.935195,-0.942318,1.360703,-2.897584,-4.226510,-4.268697,-2.112293,4.466386,9.130079,-9.339125,-1.774133,2.683792,4.275332,4.731543,1.150442,-3.760337,8.006124,-0.797265,9.818833,-9.748488,-4.541194,5.770463,-1.353542,-8.172734,4.058115,9.105337,-1.184891,1.806740,1.045260,5.725266,-4.780083,-9.521052,6.481463,2.134242,3.056288,-6.486244,-1.674443,-5.147535,-9.861882,2.448433,-1.095724,2.078963,6.005892,-4.185177,2.504113,6.520383,7.712593,8.580697,-0.998756,1.194205,-3.197058,-5.102049,0.729113,-1.993915,4.263006,6.466686,-2.997834,-1.511218,-4.706474,-9.942901,9.436340,1.596805,0.212829,8.817169,4.974055,-4.934243,-7.529056,5.796790,1.681438,4.345045,7.888333,-0.866627,2.104242,7.584422,3.535940,1.258533,7.105397,2.460870,9.536946,7.855093,5.267063,-1.015920,-6.888907,-1.832612,0.285376,-8.663890,-6.743875,1.373466,-9.102068,7.686322,-8.777303,-6.650720,-7.050180,7.817218,-6.717292,-5.783050,-3.603679,1.918722,-2.925722,-4.473646,0.450515,-0.549616,-1.517354,6.957078,-1.154880,-8.918587,1.988511,6.589448,2.578382,6.727724,6.339456,0.808712,-8.897306,-5.291624,-8.455883,7.669941,0.679013,-9.167165,1.646798,-4.152218,-2.296800,-1.251107,4.060759,5.364565,-7.885088,-0.361283,6.133445,1.775186,-6.666749,-1.915320,3.721990,-6.294030,-2.593193,-9.235532,-5.542188,0.227694,7.107606,-5.952190,8.467188,7.061520,-8.571795,5.371636,-0.359542,-8.003959,-5.524255,4.050757,-6.780965,4.931935,-8.092580,-1.180999,-7.735054,-5.124539,0.799961,3.702637,-0.772590,5.519137,-3.929291,-0.054548,1.307737,-5.626899,-0.614049,3.402182,5.808296,5.658762,-6.707280,2.885398,5.958071,7.026592,-4.593772,-1.897062,1.276402,-2.185356,-8.470105,-8.529368,3.783334,-2.591921,4.139911,-6.864943,-2.057596,-4.155368,0.848449,7.332609,7.717388,1.607468,0.147600,3.659756,5.772491,1.223010,-2.266956,-3.193805,-4.289164,2.245255,-5.802344,-6.327354,8.629785,-4.884740,-6.429155,-7.809318,-7.211021,-9.501213,2.847298,-9.835044,5.044002,-5.055243,-9.152544,8.818936,5.576680,-9.632642,-9.660113,-3.215958,3.842331,-9.455343,7.891233,-9.128463,-7.630954,8.379096,-3.357322,9.826206,9.116301,7.817987,-4.070587,-7.923107,-8.037240,0.273978,-5.301741,-6.564210,-5.637248,3.582434,7.479990,9.197497,-4.619688,4.560184,1.329010,-0.329559,2.984310,-9.827651,-9.947554,1.942986,1.388288,9.914390,5.542337,0.314727,-8.942574,0.951356,-4.563637,-2.710061,5.001277,1.285708,-9.076037,-5.245417,-2.931902,1.264245,2.846681,4.498076,9.374259,-9.396973,-2.616319,7.946169,8.571151,3.074028,5.563677,-4.731546,7.742901,7.935684,-5.827556,7.169897,-7.661738,3.192032,-1.713000,-7.411870,-7.442919,-2.505953,7.434700,7.946846,-3.362751,-5.907633,-4.974278,-9.837017,1.186355,3.531816,6.307271,-8.679107,9.265808,-5.957057,-5.946174,-7.140548,2.553264,5.987626,-7.403626,8.509995,9.493881,-7.551755,8.744920,-7.771989,8.909352,-6.634670,-8.398646,-6.218858,-4.213989,9.566549,-2.958723,8.700906,-5.147831,-5.814728,-9.016366,8.278623,8.277994,2.351307,6.303452,5.716753,-4.788144,6.818005,-9.488639,-6.689707,-2.359212,3.660099,1.339391,1.917945,-4.961517,-3.233261,3.409802,-9.612987,-6.005113,2.682208,3.070901,-3.525993,-7.789485,7.290402,2.677296,-7.164916,3.022042,-3.154189,-9.491008,9.652469,3.616941,4.149114,5.537914,-2.247030,-2.343010,1.929290,-2.968041,6.175100,-5.977225,-9.862358,-5.145143,2.296143,-1.773550,6.119454,5.385835,9.525857,-1.421219,-5.065530,7.499793,9.328412,-5.320497,3.763753,-7.935736,-0.368617,4.926858,6.279757,7.419186,-5.591099,-9.412032,-3.566339,-8.864366,0.446193,6.521796,-3.438681,-4.398908,-3.692431,5.514284,3.904557,-0.497244,-8.381565,-8.000219,0.037877,-2.876741,-1.258921,1.358427,1.840529,-3.509507,4.121115,-6.196231,-7.823670,5.534870,6.184487,1.973702,0.919905,-3.507715,1.523791,6.434021,-3.475622,-8.858575,-3.197664,-6.370252,1.020322,-1.029668,-9.523998,6.275540,2.884864,6.489885,1.348515,-3.325099,-4.518069,-9.706317,3.953662,-1.613661,2.586191,-5.963199,4.929287,2.806485,-6.435420,6.696875,-5.094104,2.776537,2.158815,5.445816,8.492555,5.105574,-8.214192,-6.221220,0.768832,-3.432981,5.215350,7.532220,9.655298,-1.722653,-0.103662,-7.526755,-7.113502,7.742401,-2.664465,-1.156700,-8.299745,5.875591,2.376347,-3.048169,-6.796207,3.425322,-5.198626,-8.213128,-2.658512,6.797594,-7.501749,5.741968,9.896499,4.529143,4.560371,-2.189845,1.080620,3.007318,9.920060,-6.684549,-3.079559,6.599110,-3.654144,-0.101873,-5.912954,5.480408,8.911659,7.510722,0.384443,-4.613055,-5.815614,-3.951331,-1.186751,-3.797524,-4.340771,4.882192,7.392637,0.969688,0.937229,-2.097948,4.946631,-9.197648,-5.288339,6.375619,-2.668976,5.726838,-3.399519,8.202177,3.605892,-9.113878,-1.037610,-9.070325,4.213347,2.802326,3.456115,-7.425276,3.054428,2.528308,2.274721,-2.000238,-1.925018,-1.761581,7.771549,9.045692,-1.791357,-7.949309,0.015599,-0.456468,-7.171094,0.205519,2.698921,-6.939918,8.036202,-4.396233,8.960259,-5.484922,-6.645421,-7.792648,-4.074284,-0.577480,-0.382377,3.088732,6.383288,-3.213631,5.262030,9.480451,1.770919,-4.243729,6.163420,0.751469,7.050080,-6.263033,4.123559,5.312999,-4.770902,-7.576803,2.671108,4.818678,1.269751,-2.293255,8.941727,2.073073,-9.725159,6.948924,-2.892466,-2.392925,9.142742,-6.322918,8.485238,-6.048945,8.959424,-1.723794,0.836097,-3.822609,5.096703,9.950637,-2.544511,-0.783219,-5.661041,2.388987,-1.465031,-0.409811,-5.985367,-8.226562,9.001607,-4.873828,4.089218,3.757809,-6.651981,3.702984,-7.519001,-1.718468,5.491406,4.153624,3.486649,7.367313,-2.371233,1.276290,-3.641341,2.693135,-1.758454,-2.464941,-5.779347,-6.685190,1.552556,0.789853,8.510253,6.450745,-0.219778,-5.219447,8.659550,7.257347,-8.104666,-7.279865,0.144465,-1.713806,8.056751,9.976535,-9.073987,-1.655782,-6.138854,3.194112,-9.450916,-0.627168,-0.326822,-4.618593,-9.275699,3.065534,-2.825467,0.561726,1.574397,0.693460,8.876611,2.836538,3.746516,5.791265,9.260013,5.050063,7.221967,-1.634392,-8.445567,8.291196,-9.708638,7.724471,3.541461,-0.759519,-6.897628,7.702758,8.875050,9.218620,5.841258,-5.425576,-4.320704,-2.535003,6.646288,1.561812,2.171213,8.854246,5.509856,-5.393205,2.745416,-8.156094,-8.467272,2.383230,-9.023096,-2.149866,-7.561901,-5.923246,-5.470460,-5.822400,4.970518,-6.776044,0.563694,-9.426828,-6.313716,0.447322,-5.268153,-7.777408,0.042701,-9.308535,-1.430459,6.881993,7.939430,8.724972,-1.562585,6.978736,8.834070,-5.932729,3.022661,-3.321966,5.660991,-9.309725,4.678450,2.122630,-3.354116,-5.494097,-6.547851,5.318767,0.235055,-2.023683,2.589981,8.376874,1.006293,2.266835,-4.098752,-7.982232,4.522648,6.346260,1.240769,2.716110,-8.647493,2.756341,-6.585535,-6.883933,5.550556,2.424366,4.837704,-1.746171,4.301156,3.819889,2.130590,1.769299,-1.977536,1.801161,8.177108,-9.479308,-1.931645,5.541103,-5.509384,-0.421543,-7.592504,-5.205523,-6.468756,-4.117202,-6.918315,0.749625,0.888800,-7.181873,-6.728899,-6.914422,3.965265,7.341686,-8.151794,-9.601679,1.176718,-1.115082,-6.266755,5.288220,8.104526,-3.951943,1.684375,9.865578,2.942501,3.018671,0.653158,0.609876,-8.051537,-4.815259,7.529414,1.922942,3.883617,-5.935932,2.458212,-5.175184,6.428253,-3.555315,2.365673,-5.902563,-0.626030,-4.073834,4.191021,-0.986807,-4.079351,-3.975167,1.083940,-6.005206,6.548812,-7.728112,-3.749735,-5.051138,-8.573406,9.985602,-5.278677,-2.395872,8.862233,3.621560,-1.247138,-8.326017,-4.906183,1.205415,-6.362019,6.531221,-4.855843,-8.283822,-9.108781,4.523962,-9.470395,-0.389760,-0.204342,5.413449,7.242186,-1.998504,-1.678725,8.743653,9.912014,-8.546479,-1.146455,6.596145,4.251413,-8.796282,-9.531825,-1.586665,-9.744509,-5.767237,7.988056,-9.631577,-5.535985,8.843563,8.104749,8.938806,0.536137,-8.029990,6.840568,-8.234640,-5.453787,8.142601,-6.265812,0.235865,-6.739024,5.309650,0.426826,8.858639,-2.567392,-6.489735,2.771880,-0.395476,4.667136,-7.707863,8.974270,2.950769,1.455413,-6.021080,4.046704,-1.570700,2.538950,5.759209,9.283746,-9.240932,6.637266,0.438485,0.191460,8.275594,2.681090,5.594401,1.656365,-0.122535,2.309698,-6.523378,-0.574851,0.953731,6.896310,-1.332432,2.924796,-6.386144,9.656537,9.082221,-9.557273,0.865886,-1.678152,-4.668575,2.765650,7.444740,2.887694,1.499502,-1.583010,-9.560292,-9.769854,0.408696,7.788274,-8.058950,1.176146,0.020314,3.842335,9.901364,-9.510475,3.246661,-4.170540,-7.549642,-7.806568,0.811561,-5.175570,-3.035092,-0.003525,-6.458751,-3.672006,-4.092692,-5.803216,1.057578,-3.088413,-9.302994,-9.686051,1.110595,-0.835420,-9.706112,1.414381,6.162084,5.585595,-3.952082,0.659770,-8.446094,-7.058388,-9.137768,-8.364101,-1.703910,-2.470775,0.404167,-3.439906,-2.330982,6.050524,9.270131,-8.634921,-8.016045,8.978780,-5.710868,-5.971690,-6.635521,9.647605,1.337156,-2.164004,7.969935,-6.096538,9.773671,5.630423,6.509519,-7.122239,2.322520,-9.168400,6.720308,4.335810,-9.350231,-8.522455,-5.851209,1.489002,4.461187,8.592543,9.213436,-0.057986,-7.193290,-2.137564,-9.093974,-0.975654,7.097818,2.496384,-7.171045,-5.036995,-8.222688,7.302158,3.734921,0.508142,-7.594789,9.218107,-6.582421,-2.337449,8.068948,0.959834,-4.734326,3.858012,-9.231649,-6.911633,9.823373,3.801738,6.839586,-1.549762,-2.780736,6.954214,-0.901457,-2.693155,-5.362159,3.510973,6.989831,7.498119,4.634078,9.546043,-6.101051,-0.434939,1.317114,9.360529,6.976717,0.433121,5.647276,-9.888558,8.183145,2.974527,-5.886167,7.020702,7.930742,7.087761,8.428003,-2.449546,-7.951362,-3.994738,-0.523580,-7.012526,8.403034,9.708209,-3.536332,8.780332,-9.850276,-2.268198,6.155282,-7.194703,-0.858055,3.083222,0.003808,8.953975,9.390152,9.408444,-9.007659,3.034122,2.873864,-2.391655,-9.261519,4.865832,-8.429036,2.826401,8.147772,-8.236206,6.262203,7.791613,0.317662,-6.557080,-2.159547,0.777473,7.843149,7.327900,5.332661,5.358269,8.351519,1.044988,-9.732888,9.322499,-4.853446,2.543314,-7.542745,-3.981292,-3.877400,-3.179245,-8.416968,7.360829,-9.182177,-3.021288,-6.352354,0.911768,-6.594106,-3.998976,-3.874768,-3.249604,1.322530,-0.749704,7.294149,-8.360222,-9.691799,-1.757261,-3.126073,-7.645440,-4.718036,-0.349220,-7.158697,-3.821674,-2.390815,6.709340], dtype = "float32")#candidate|3928|(1470,)|const|float32
call_3927 = relay.TupleGetItem(func_2798_call(relay.reshape(const_3928.astype('float32'), [15, 7, 14])), 1)
call_3929 = relay.TupleGetItem(func_2800_call(relay.reshape(const_3928.astype('float32'), [15, 7, 14])), 1)
output = relay.Tuple([call_3906,call_3914,var_3915,call_3921,const_3922,call_3924,var_3925,call_3927,const_3928,])
output2 = relay.Tuple([call_3907,call_3916,var_3915,call_3923,const_3922,call_3926,var_3925,call_3929,const_3928,])
func_3931 = relay.Function([var_3915,var_3925,], output)
mod['func_3931'] = func_3931
mod = relay.transform.InferType()(mod)
mutated_mod['func_3931'] = func_3931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3931_call = mutated_mod.get_global_var('func_3931')
var_3933 = relay.var("var_3933", dtype = "uint8", shape = (390,))#candidate|3933|(390,)|var|uint8
var_3934 = relay.var("var_3934", dtype = "float64", shape = (396,))#candidate|3934|(396,)|var|float64
call_3932 = func_3931_call(var_3933,var_3934,)
output = call_3932
func_3935 = relay.Function([var_3933,var_3934,], output)
mutated_mod['func_3935'] = func_3935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3985 = relay.var("var_3985", dtype = "float32", shape = (14, 6, 9))#candidate|3985|(14, 6, 9)|var|float32
uop_3986 = relay.erf(var_3985.astype('float32')) # shape=(14, 6, 9)
output = uop_3986
output2 = uop_3986
func_3993 = relay.Function([var_3985,], output)
mod['func_3993'] = func_3993
mod = relay.transform.InferType()(mod)
mutated_mod['func_3993'] = func_3993
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3994 = relay.var("var_3994", dtype = "float32", shape = (14, 6, 9))#candidate|3994|(14, 6, 9)|var|float32
func_3993_call = mutated_mod.get_global_var('func_3993')
call_3995 = func_3993_call(var_3994)
output = call_3995
func_3996 = relay.Function([var_3994], output)
mutated_mod['func_3996'] = func_3996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mod.get_global_var('func_3313')
func_3315_call = mutated_mod.get_global_var('func_3315')
call_3998 = func_3313_call()
call_3999 = func_3313_call()
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_4022 = relay.var("var_4022", dtype = "float64", shape = (14, 105))#candidate|4022|(14, 105)|var|float64
var_4023 = relay.var("var_4023", dtype = "uint64", shape = ())#candidate|4023|()|var|uint64
call_4021 = relay.TupleGetItem(func_1461_call(relay.reshape(var_4022.astype('float64'), [15, 7, 14]), relay.reshape(var_4023.astype('uint64'), []), ), 1)
call_4024 = relay.TupleGetItem(func_1464_call(relay.reshape(var_4022.astype('float64'), [15, 7, 14]), relay.reshape(var_4023.astype('uint64'), []), ), 1)
func_2075_call = mod.get_global_var('func_2075')
func_2080_call = mutated_mod.get_global_var('func_2080')
var_4031 = relay.var("var_4031", dtype = "uint32", shape = (8, 4))#candidate|4031|(8, 4)|var|uint32
call_4030 = relay.TupleGetItem(func_2075_call(relay.reshape(var_4031.astype('uint32'), [2, 8, 2]), relay.reshape(var_4031.astype('uint32'), [2, 8, 2]), relay.reshape(var_4023.astype('float32'), []), ), 2)
call_4032 = relay.TupleGetItem(func_2080_call(relay.reshape(var_4031.astype('uint32'), [2, 8, 2]), relay.reshape(var_4031.astype('uint32'), [2, 8, 2]), relay.reshape(var_4023.astype('float32'), []), ), 2)
output = relay.Tuple([call_3998,call_4021,var_4022,var_4023,call_4030,var_4031,])
output2 = relay.Tuple([call_3999,call_4024,var_4022,var_4023,call_4032,var_4031,])
func_4036 = relay.Function([var_4022,var_4023,var_4031,], output)
mod['func_4036'] = func_4036
mod = relay.transform.InferType()(mod)
var_4037 = relay.var("var_4037", dtype = "float64", shape = (14, 105))#candidate|4037|(14, 105)|var|float64
var_4038 = relay.var("var_4038", dtype = "uint64", shape = ())#candidate|4038|()|var|uint64
var_4039 = relay.var("var_4039", dtype = "uint32", shape = (8, 4))#candidate|4039|(8, 4)|var|uint32
output = func_4036(var_4037,var_4038,var_4039,)
func_4040 = relay.Function([var_4037,var_4038,var_4039,], output)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_4042 = relay.TupleGetItem(func_2373_call(), 0)
call_4043 = relay.TupleGetItem(func_2375_call(), 0)
output = relay.Tuple([call_4042,])
output2 = relay.Tuple([call_4043,])
func_4068 = relay.Function([], output)
mod['func_4068'] = func_4068
mod = relay.transform.InferType()(mod)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mutated_mod.get_global_var('func_4068')
call_4069 = func_4068_call()
output = call_4069
func_4070 = relay.Function([], output)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4232 = relay.var("var_4232", dtype = "float32", shape = (1, 8, 6))#candidate|4232|(1, 8, 6)|var|float32
uop_4233 = relay.acos(var_4232.astype('float32')) # shape=(1, 8, 6)
uop_4236 = relay.exp(var_4232.astype('float64')) # shape=(1, 8, 6)
uop_4258 = relay.log10(uop_4236.astype('float32')) # shape=(1, 8, 6)
var_4263 = relay.var("var_4263", dtype = "float64", shape = (4, 8, 6))#candidate|4263|(4, 8, 6)|var|float64
bop_4264 = relay.logical_and(uop_4236.astype('bool'), var_4263.astype('bool')) # shape=(4, 8, 6)
output = relay.Tuple([uop_4233,uop_4258,bop_4264,])
output2 = relay.Tuple([uop_4233,uop_4258,bop_4264,])
func_4269 = relay.Function([var_4232,var_4263,], output)
mod['func_4269'] = func_4269
mod = relay.transform.InferType()(mod)
var_4270 = relay.var("var_4270", dtype = "float32", shape = (1, 8, 6))#candidate|4270|(1, 8, 6)|var|float32
var_4271 = relay.var("var_4271", dtype = "float64", shape = (4, 8, 6))#candidate|4271|(4, 8, 6)|var|float64
output = func_4269(var_4270,var_4271,)
func_4272 = relay.Function([var_4270,var_4271,], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_4274 = relay.TupleGetItem(func_2373_call(), 2)
call_4275 = relay.TupleGetItem(func_2375_call(), 2)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_4296 = relay.TupleGetItem(func_2686_call(), 0)
call_4297 = relay.TupleGetItem(func_2688_call(), 0)
func_3473_call = mod.get_global_var('func_3473')
func_3477_call = mutated_mod.get_global_var('func_3477')
var_4299 = relay.var("var_4299", dtype = "int16", shape = (1, 1078))#candidate|4299|(1, 1078)|var|int16
const_4300 = relay.const([-3.153301,0.851239,-9.258349,-4.818181,4.421465,-3.524974,3.284374,-1.329651,-1.052121,-7.782407,4.074174,-0.199808,-6.339758,5.543365,6.935792,-2.011568,-8.970085,8.623514,8.416886,-6.917936,-0.962958,-6.929348,-6.253256,-0.090666,2.336201,-1.759873,9.415142,-0.937451,0.683558,-4.394156,-9.446056,-5.450347,-0.625469,4.002761,5.319416,9.416948,-9.133302,9.320526,-7.855882,-5.143046,-3.678921,-3.889719,8.156652,7.961352,-9.003712,1.315417,-2.974693,-5.377345,-9.130313,-7.834330,6.992181,3.230105,-9.805512,-8.045077,-9.335037,-5.277689,2.682917,1.472716,2.272515,5.787321,-4.377915,-7.508378,-0.339514,0.720683,5.292457,2.535599,0.576399,-5.507832,3.557520,-8.466238,7.420065,4.946685,-6.511479,5.930137,6.564658,9.760257,-9.826094,3.269829,-6.349531,5.745703,-1.437290,-7.649760,6.063125,2.594914,-5.166135,-8.948150,-0.814071,-1.315351,-4.553935,-1.918501,0.820074,9.354467,-2.313576,-2.594449,-9.528617,-8.536054,-6.341692,-9.997930,6.438464,7.629501,-3.413116,-0.515361,8.709592,7.084129,-9.248705,2.560519,7.954840,6.140899,3.255512,8.967078,2.867810,8.135919,-1.930401,7.810259,7.487111,6.749609,8.471594,0.506355,1.924791,-3.020791,-4.154125,3.066831,5.505510,4.928870,-2.710914,-1.425947,-7.251232,-0.917860,9.859182,0.710122,-0.634268,-7.444120,-7.559660,-9.994214,-7.471549,5.270853,-4.668220,2.642581,-0.030261,7.399094,2.904678,-1.645792,1.700782,-8.919085,3.363203,3.163996,0.610191,5.991056,3.953446,3.122444,-1.772239,8.394982,6.902337,-0.567248,6.039653,-5.823092,5.714396,9.985428,4.452641,-1.965201,9.960572,-4.881811,6.407992,-0.908817,5.501127,7.174560,-5.750709,6.238879,7.145692,4.371040,2.035650,6.573477,5.763910,0.765617,-7.548629,7.473237,3.558891,-3.809624,8.713512,-1.076835,-6.743879,-5.944109,-2.147567,-6.546585,-0.253378,-7.509623,-9.977343,-7.437840,-1.825921,-8.985578,8.545770,-8.957358,-9.771893,-9.643272,5.713684,-5.382933,-0.120317,8.576597,-0.225289,-8.143304,1.511211,-3.066326,-7.335031,6.183500,-9.791786,3.639826,1.244926,0.895229,1.111661,9.810581,-8.278843,-2.757912,0.007256,9.258508,-4.787954,-2.608659,-1.419287,5.486697,1.511304,-3.560160,-2.306457,-0.359166,6.361358,0.119425,0.461871,-8.792617,6.016357,-3.856840,-7.173513,-3.228685,7.788146,-4.072895,-1.756672,-2.439272,9.380717,1.141384,-5.376389,4.260519,8.205257,-7.086524,-8.551369,-9.860043,-0.441876,-4.687375,-8.513571,7.297955,2.241533,-0.517350,8.283482,6.808485,6.676402,-7.173987,-5.416735,9.520580,8.455255,-0.625092,-2.336121,6.123449,6.744114,2.987429,-8.004457,7.959340,2.353807,5.281769,-2.640330,3.220329,-4.767670,-0.950596,4.548340,-9.298716,1.109222,-5.560052,-9.167434,-2.401775,0.038648,3.613006,-2.319401,7.731362,-9.549200,-7.235531,-9.758197,-9.260928,-2.020254,9.471406,8.335525,-6.915615,7.557619,-2.045115,-7.067303,9.256790,2.336740,0.305383,-2.317105,4.975995,-8.045051,5.391767,2.307366,7.647699,-5.298018,5.121575,-8.542175,9.539521,8.363333,7.265520,-4.575734,6.677808,-0.199139,-8.962975,-7.245663,7.966195,1.919930,4.271108,8.429589,-8.702540,8.402338,3.747820,8.775576,2.777176,-7.183518,-2.719221,-7.846290,-7.757076,7.020216,1.911371,-5.399693,-1.285583,0.641143,-1.102271,-1.451961,2.931657,6.953815,6.806785,2.490660,6.023547,-7.640329,-2.769081,0.066268,8.910491,4.703093,-0.881290,3.750720,-3.405194,-5.984613,0.653960,0.395190,7.642635,2.663746,-6.683564,9.593444,6.496869,6.160757,-3.866065,-9.219184,2.728290,-3.238353,-6.301467,-1.614998,1.393825,9.829041,8.826822,2.378888,5.486109,-7.499718,6.867217,1.818844,7.294323,-1.836737,-8.468859,5.826235,9.908289,5.970489,4.322074,-3.794766,5.916251,-3.213134,-4.999573,3.274949,-3.203763,8.232359,1.424829,-0.385610,-8.051540,8.501507,-5.274122,-2.403000,-2.571833,5.229920,-3.156602,-4.220168,8.733828,-6.004797,-8.963035,-7.702299,1.270964,-3.421620,-1.245962,8.915610,-1.219511,7.394493,8.731676,-2.584029,-8.835004,-5.285526,4.701288,-7.471238,7.187498,-9.084006,-0.305461,-3.878833,9.115484,-3.607605,-0.646415,-9.093134,-1.604767,9.195869,7.352455,-9.893112,3.333394,-5.124495,5.877986,2.551780,-6.215256,7.176791,-1.787617,-6.019852,-3.563835,-7.462943,0.035326,8.526564,-5.638508,1.464809,-2.441695,4.215678,-2.218393,-7.711367,-8.046162,-8.561464,-3.095517,3.951618,-8.550863,-4.387964,3.153800,6.054332,4.822023,-4.584310,3.014828,2.658429,9.767952,8.177714,4.922291,-3.780485,7.056304,-1.519897,-0.793105,3.762298,0.874962,1.051344,-4.609468,8.659571,-0.977479,0.894436,-6.341268,7.958012,-1.404701,9.245141,0.378560,8.166754,8.127866,-4.039968,-8.925903,-5.018114,8.339926,-7.014324,-0.209597,8.891907,2.903419,-8.363965,7.635572,-9.384018,-4.202147,0.235201,2.369451,-6.464098,-9.356146,-6.527179,-3.439925,1.836907,-5.255369,5.393871,9.509565,5.859474,-3.394562,-4.622030,-7.430741,8.889622,5.852463,-9.760013,1.911260,0.524763,7.345343,-2.419252,-2.677392,5.344924,3.888671,8.754186,5.182101,-8.458562,-7.934808,0.814420,8.083540,2.550496,-3.204525,3.936589,-8.370605,0.910452,-3.119800,-5.880538,9.715217,4.563702,-9.610644,-1.950482,-2.119684,9.981015,7.827897,4.343131,8.948951,4.779251,-1.443250,-0.534370,3.158392,-4.560108,6.220910,-5.956536,-5.294759,-6.229943,-5.622757,-1.547637,6.071326,9.594344,-9.199737,7.692707,3.313298,1.993405,4.307146,6.067042,-9.762625,-7.379267,-3.875507,-4.090127,-3.600436,5.250129,1.975958,4.704192,-1.940581,-2.202739,3.693472,-3.628749,-6.509117,-2.889227,5.490237,5.681702,7.188806,-4.845285,-2.711778,-7.987308,9.586390,-6.346978,9.061555,4.571420,-5.642951,7.210834,0.451153,4.817760,7.922361,4.039113,6.262283,-8.644267,-0.307804,-6.150224,-1.958585,6.092072,-8.125315,-3.796195,-7.189152,6.728224,6.875481,-2.321010,9.984783,0.344988,-7.883873,0.320266,0.743658,-4.382624,-7.847965,-6.750505,-7.550049,-3.925541,5.464113,-2.681117,-5.871416,7.266606,-3.959902,-5.890960,1.441497,6.411009,-9.090601,3.195659,-8.618368,9.612065,-5.411252,1.299368,-5.519119,7.577071,3.298097,1.879657,-6.448984,0.561515,-7.015021,-1.408538,0.637646,0.043866,-0.542645,7.658952,4.516000,-5.854144,2.994762,-8.560694,5.390063,9.096380,6.838694,2.232667,9.053137,8.899869,-9.744043,6.628583,0.735226,-7.466736,3.633979,-3.544630,-0.552933,-6.878002,3.352174,7.003152,3.082836,5.844487,0.851532,-2.231369,1.500782,3.612484,8.399025,-8.660410,1.134638,-5.735796,-5.397647,1.509350,6.025942,-2.712429,-1.466815,-5.804573,8.188210,3.884656,-0.983805,7.956612,1.839355,5.303306,-9.005172,9.775253,-0.028869,-7.915743,-6.217951,-0.087258,-4.828690,-3.767598,-7.592068,-6.403906,-0.262614,6.254359,0.970577,8.196945,2.726601,3.667881,-3.644736,7.652399,-5.647067,7.251122,-6.694091,1.478795,0.316050,7.433432,-3.143853,1.498864,9.119473,7.786093,1.088064,6.267398,5.308676,-6.641750,8.899557,9.933655,-4.640634,6.002845,-2.682648,2.503932,-2.922099,6.915292,-8.146321,-4.883098,9.549843,-2.747184,-3.377040,9.463833,-0.297876,0.258343,-7.438529,1.956238,8.354195,4.251229,8.820030,8.096771,4.666518,-7.126878,7.308883,-6.800729,-7.030712,-0.598394,-9.395096,5.903512,4.950650,6.444937,1.192800,-6.192635,5.630712,-3.061781,-1.184881,-4.079654,-8.089529,7.577905,6.513199,3.930212,-2.787012,-0.356104,8.182982,4.544939,-2.040282,-0.349433,-0.250490,2.592657,-4.658914,-8.019587,5.728705,5.792434,-1.837092,-3.056536,-8.911486,5.253631,0.932513,8.063493,5.945875,8.433205,0.066422,9.022319,0.901943,7.515894,-0.789338,-5.052867,6.771458,-6.794192,7.642920,9.549554,-9.620750,-4.017981,1.205432,-2.266509,9.105039,-6.266730,-6.701211,-2.115105,-4.153056,3.592420,4.821636,0.135096,5.685680,-1.601406,-3.611773,-8.506683,0.205241,-9.382767,2.342624,9.638497,-1.021643,8.822715,-8.844364,-7.763545,-7.722339,8.114336,-7.179812,-9.938681,-8.982461,-8.242856,-0.845932,1.887303,4.562206,-4.860497,7.914760,9.416500,-0.886995,-6.821381,-4.301088,3.648524,-9.533323,4.434388,6.347117,3.845092,-8.666044,-9.235694,-8.469007,-1.826094,1.388424,-2.822245,1.771856,6.100513,4.717732,-6.024084,-9.444193,-3.578615,-7.323993,5.127854,3.890638,-8.684704,-1.359417,-8.270264,-1.859672,6.898330,-6.934156,-7.586981,8.271612,3.990008,6.974431,4.162131,1.892777,4.534812,1.235533,-6.334727,6.560475,-8.306791,1.070996,-1.138193,-1.030969,-7.424926,-7.933063,-1.664746,-6.845418,-4.470688,0.539477,0.090595,7.898144,-0.719125,-4.784406,3.974674,0.301916,9.892058,-5.565769,2.639409,2.342771,9.787128,-4.648703,-7.355128,5.282920,7.871895,-8.259895,-7.732242,8.887690,-8.996720,4.955199,3.123489,1.138391,0.490482,-3.387640,-7.679308,-3.829407,1.960786,7.602891,5.217446,-3.311626,6.637042,-6.715445,-6.341872,4.906504,1.601129,-7.498163,1.484628,2.535836,-4.230661,8.960948,-2.275280,-8.530993,7.732920,0.659580,4.240372,0.213518,-0.438866,-0.657122,2.748773,0.601341,-5.113291,8.702734,1.855690,-0.271628,-4.038155,1.929258,-6.423153,7.137988,5.511788,-6.459640,-1.326702,-1.464867,4.739755,-9.715194,-7.098115,3.543763,8.050638,-8.797134,-3.808098,-8.778904,4.084414,1.612721,-0.191649,7.656118,3.611578,-3.981492,6.557636,-0.867410,9.126166,1.842935,-7.846177,-7.921400,2.529854,-9.504062,9.148296,-7.156434,-6.532798,-7.888610,-5.135217,1.148401,-0.127513,-2.691251,-4.550483,-1.088954,1.155553,5.661698,6.675963,0.455806,-7.314551,-4.979107,5.137529,-4.481805,-3.466522,-3.097609,-5.941679,-5.730428,9.010865,-2.204159,8.506880,3.361826,-1.089591,-4.194464,-4.869742,-4.812498,6.944533,-8.227080,-0.108643,2.946157,-4.761233,6.256259,3.159216,8.851601,-7.188177,-8.803614,-1.416022,-6.091419,-4.507836,-0.327294,3.649136,3.266491,5.300271,6.833232,6.609221,-9.894051,-2.259339,-9.027948,3.894633,-1.056104,-8.489983,1.590416,-5.405062,7.736777,-8.932055,5.643236,5.624825,9.462214,-5.157179,-2.033023,7.994035,3.757032,-0.313369,5.578411,3.702525,-0.007477,-8.545997,7.481731,2.620243,0.088287,-9.199321,0.193445,2.459109,8.167279,8.815252,1.222280,-4.513568,-3.839713,2.607166,2.207280,4.523923,-8.738889,7.572229,-4.312338,-5.357245,7.554900,-0.008765,-8.554757,7.621691,-7.401455,1.160506,3.387024,-3.884925,5.854446,6.312763,3.297009,-8.037757,-2.861520,9.438290,-2.633685,-8.428906,-5.472841,0.968530,-4.101301,-4.256094,2.180123,1.048337,-9.466252,8.250020,2.700679,-7.572544,9.452928,-5.584499,-2.992843,7.567565,9.678843,-9.664578,-6.651197,6.682840,-7.771097,9.756158,6.506326,-7.697121,6.895789,5.381939,-9.558873,5.261875,-7.547321,4.090729,9.049108,-5.835314,-6.454461,-8.216791,-6.992207,-5.490083,-8.634745,-9.597244,-2.921046,1.464288,-7.480108,-8.886474,-9.632056,8.908510,4.240110,8.539511,9.503307,0.165908,0.340524,-6.229698,7.266871,-2.355834,4.019803,-6.286439,-9.102701,4.555729,-4.551850,5.606282,3.301667,-9.683745,-7.411748,0.302322,2.155805,0.761979,-9.158109,-3.258694,-6.430809,8.095714,2.761292,4.656098,5.331568,4.921152,-6.493257,-9.850510,2.271306,-9.674787,7.495946,2.186692,3.386314,7.804915,-2.727055,4.496503,-7.957373,-3.082426,-8.990345,7.486279,-6.703988,-1.351239,-5.823127,-9.026611,9.181919,3.835954,-0.065187,5.467866,2.758789,-1.663466,-3.414578,0.992218,-4.113485,-5.731851,4.223210,5.577665,-9.748962,8.316626,-7.529796,-1.857037,-5.177728,-6.992255,-3.117742,-5.784403,-0.479749,-6.553176,5.426222,-1.043903,3.567449,-3.845274,-0.048283,2.408192,1.389941,0.219797,-0.199710,5.295031,6.316199,-7.592185,3.611348,-4.576791,6.230890,-7.820442,-0.443343,-4.691797,-3.723932,-1.285914,-9.150536,8.872246,-6.496954,-7.052821,9.117624,-9.135431,6.105140,-1.484435,8.222000,2.360534,4.586210,4.590922,-9.806843,-3.540694,7.662710,9.716365,-5.737036,2.589374,-3.446159,4.481038,-8.419894,-2.590872,-3.195028,-9.012690,1.089491,-8.071942,-4.804912,-9.129726,-5.788787,5.224764,-3.709031,7.088994,5.746710,8.483440,-2.090829,2.568274,-0.139903,7.217776,9.664060,5.941787,9.194995,6.803942,0.391455,-5.788543,-8.390287,8.935709,-2.623606,4.417333,-0.197855,8.684622,-0.465746,1.185828,6.881408,8.757194,-5.232463,8.205288,6.545531,3.003219,7.966526,-4.667867,3.476959,-0.408998,-0.513994,-6.955929,-1.639076,-9.968510,-3.666009,-6.385857,-5.785637,-7.780975,-4.846977,-3.842691,5.190979,-3.963954,7.783323,-0.398697,3.813325,-5.985273,3.286193,-6.741778,5.811270,-8.033880,-0.565944,7.778626,-2.199123,0.522679,3.217860,-9.438019,-1.186098,9.734345,0.340666,-2.510349,-1.826571,3.360599,8.115467,-7.717669,-5.800032,0.265334,7.523696,8.256628,-0.571391,-7.430879,-4.950702,-9.785946,6.448705,-7.876648,-7.877296,2.758433,8.019437,-4.228609,-1.596376,5.798864,8.732451,7.668112,2.490601,-4.726512,-5.041557,-7.055267,-5.213825,9.241350,-3.255465,-4.198230,-7.915815,-8.442610,-0.769202,8.380437,3.806412,4.343843,4.335997,2.057986,3.440996,-5.861823,-6.638441,-1.892983,-1.566181,-4.601649,2.017268,0.444728,3.487766,-8.840822,-9.687067,-2.413064,-0.378396,-0.921989,8.241361,3.954920,0.319782,-5.971098,-3.242414,-1.976816,-6.640063,8.736330,-5.567008,3.671866,-9.183585,1.543086,0.330787,-0.675195,-2.618029,2.101090,-0.582528,-9.037553,4.450496,2.493743,-2.735763,-4.667796,6.408420,-1.655035,-4.009193,9.285711,5.546370,4.109761,-0.385770,5.414935,-9.804507,-2.606413,7.798888,-8.829529,5.482424,-3.783407,-5.491479,-3.571887,-1.407792,3.474260,5.999656,-1.548010,0.020065,0.682665,5.014187,-8.207387,-2.842525,1.404226,-4.757372,-4.114989,8.107158,2.940742,9.294494,7.061356,-1.261004,-3.007429,6.787272,8.410125,-0.432503,2.258129,6.530828,5.637682,-4.329666,4.151907,-2.871161,6.448808,-3.833540,6.360728,-7.872649,5.807680,3.867637,-0.302422,-8.229343,-8.427693,1.928562,4.642614,6.466627,-8.497226,6.720047,-6.804085,2.191515,6.905635,-0.075138,5.631077,-2.439296,-8.123923,-0.905071,-4.959296,-8.807981,5.758402,-2.036716,-8.059510,6.818948,-9.004250,-3.861511,-4.457815,-7.399289,0.544323,0.254885,1.892400,7.395677,9.356411,9.716005,6.303743,-8.042025,3.707862,0.584554,7.825237,-2.919281,4.488356,-8.368087,-1.966705,5.310714,-4.288024,-3.420511,-6.113865,5.756064,2.612080,-9.289226,-5.504784,6.489508,5.948081,8.909153,8.496530,-2.590490,-7.950885,-5.084012,1.507746,-0.304887,-0.750527,-9.705682,-4.399606,4.821478,-5.297508,-7.292920,-9.783004,-4.301869,-3.357108,-2.304580,9.315306,-7.504003,-7.444110,-4.870372,8.648397,1.762887,4.004377,-7.273655,0.289529,2.783507,4.280017,-2.259701,7.382894,-1.312035], dtype = "float64")#candidate|4300|(1470,)|const|float64
call_4298 = relay.TupleGetItem(func_3473_call(relay.reshape(var_4299.astype('int16'), [14, 7, 11]), relay.reshape(const_4300.astype('float64'), [1470,]), relay.reshape(call_4296.astype('float64'), [1274,]), ), 2)
call_4301 = relay.TupleGetItem(func_3477_call(relay.reshape(var_4299.astype('int16'), [14, 7, 11]), relay.reshape(const_4300.astype('float64'), [1470,]), relay.reshape(call_4296.astype('float64'), [1274,]), ), 2)
output = relay.Tuple([call_4274,call_4296,call_4298,var_4299,const_4300,])
output2 = relay.Tuple([call_4275,call_4297,call_4301,var_4299,const_4300,])
func_4303 = relay.Function([var_4299,], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
var_4304 = relay.var("var_4304", dtype = "int16", shape = (1, 1078))#candidate|4304|(1, 1078)|var|int16
output = func_4303(var_4304)
func_4305 = relay.Function([var_4304], output)
mutated_mod['func_4305'] = func_4305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_4358 = relay.TupleGetItem(func_1896_call(), 1)
call_4359 = relay.TupleGetItem(func_1897_call(), 1)
output = call_4358
output2 = call_4359
func_4377 = relay.Function([], output)
mod['func_4377'] = func_4377
mod = relay.transform.InferType()(mod)
output = func_4377()
func_4378 = relay.Function([], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_4452 = relay.TupleGetItem(func_1896_call(), 0)
call_4453 = relay.TupleGetItem(func_1897_call(), 0)
output = call_4452
output2 = call_4453
func_4459 = relay.Function([], output)
mod['func_4459'] = func_4459
mod = relay.transform.InferType()(mod)
output = func_4459()
func_4460 = relay.Function([], output)
mutated_mod['func_4460'] = func_4460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2504_call = mod.get_global_var('func_2504')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_4471 = relay.TupleGetItem(func_2504_call(), 0)
call_4472 = relay.TupleGetItem(func_2506_call(), 0)
output = relay.Tuple([call_4471,])
output2 = relay.Tuple([call_4472,])
func_4482 = relay.Function([], output)
mod['func_4482'] = func_4482
mod = relay.transform.InferType()(mod)
output = func_4482()
func_4483 = relay.Function([], output)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_4491 = func_2428_call()
call_4492 = func_2428_call()
output = relay.Tuple([call_4491,])
output2 = relay.Tuple([call_4492,])
func_4496 = relay.Function([], output)
mod['func_4496'] = func_4496
mod = relay.transform.InferType()(mod)
output = func_4496()
func_4497 = relay.Function([], output)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4510 = relay.TupleGetItem(func_4068_call(), 0)
call_4511 = relay.TupleGetItem(func_4070_call(), 0)
output = call_4510
output2 = call_4511
func_4514 = relay.Function([], output)
mod['func_4514'] = func_4514
mod = relay.transform.InferType()(mod)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mutated_mod.get_global_var('func_4514')
call_4515 = func_4514_call()
output = call_4515
func_4516 = relay.Function([], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3253_call = mod.get_global_var('func_3253')
func_3254_call = mutated_mod.get_global_var('func_3254')
call_4532 = func_3253_call()
call_4533 = func_3253_call()
output = call_4532
output2 = call_4533
func_4536 = relay.Function([], output)
mod['func_4536'] = func_4536
mod = relay.transform.InferType()(mod)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4536_call = mutated_mod.get_global_var('func_4536')
call_4537 = func_4536_call()
output = call_4537
func_4538 = relay.Function([], output)
mutated_mod['func_4538'] = func_4538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_4545 = func_3388_call()
call_4546 = func_3388_call()
func_2152_call = mod.get_global_var('func_2152')
func_2154_call = mutated_mod.get_global_var('func_2154')
const_4548 = relay.const(3, dtype = "uint64")#candidate|4548|()|const|uint64
call_4547 = relay.TupleGetItem(func_2152_call(relay.reshape(const_4548.astype('uint64'), [])), 0)
call_4549 = relay.TupleGetItem(func_2154_call(relay.reshape(const_4548.astype('uint64'), [])), 0)
func_1628_call = mod.get_global_var('func_1628')
func_1631_call = mutated_mod.get_global_var('func_1631')
const_4580 = relay.const([[-5.658329,8.803627,-7.593197,-5.727338,4.311633,-2.577344,8.121915,9.974985,-0.210028,-3.156753,2.548402,-9.280334,-5.937952,-8.607853,-0.909662,-7.590649,8.815620,-3.606334,-6.796260,2.024754,3.059601,-5.122739,7.022866,-8.995223,-7.126167,4.246880,-1.900496,2.841487,0.584556,3.626359,-7.968110,-0.152496,1.167874,4.851164,6.641957,6.981645,-3.765986,-3.069578,-8.227409,-5.450117,3.369939,-0.301904,0.611079,-2.336033,-6.726624,-6.185494,8.917667,-4.551013,4.650546,-8.278736,-3.142201,-8.467621,7.578400,-4.839674,1.952544,-8.682166,-1.065318,-5.003468,-0.835575,-3.408334],[1.508560,7.809296,2.228260,1.711354,8.567531,-4.253735,-0.188311,7.336302,7.400258,0.221576,-2.119498,1.198925,-2.880849,-8.278164,-3.154299,7.870611,1.789985,-6.665117,-3.986638,5.299990,2.279903,1.370091,-1.804296,1.584794,6.553005,-3.814804,-6.276987,-2.663728,-2.125259,-1.946080,-9.031078,-3.712547,-7.653975,-5.743455,-3.902342,3.998071,5.142977,3.183969,9.258579,7.206753,7.020746,-0.401644,0.519108,0.958484,4.479455,-5.235932,5.261240,7.680629,6.699269,2.738103,2.419970,8.943085,9.808814,8.757719,2.752245,5.867869,-8.137374,8.193738,4.135312,4.089613],[-1.381880,-2.202988,-9.964723,6.604332,4.243885,-8.255154,2.278704,-2.654396,-7.238794,1.802591,-3.700081,7.987014,-3.397669,4.588757,4.578676,-8.434584,-9.885547,1.779547,-2.827945,0.389878,8.177351,8.748564,3.875384,-1.810739,8.771727,-6.057787,-2.320434,-9.234493,-7.402713,-7.570328,2.819288,6.480722,0.502171,-9.921551,1.065239,-9.534003,8.483447,-9.167264,4.865092,1.985304,-1.614037,-0.853285,2.686345,-1.445288,-9.838534,1.228807,0.472746,-1.922040,3.211380,3.157955,-4.568805,-8.604146,2.376944,-9.688292,9.095106,9.289289,7.765604,-5.076783,-2.268240,-2.255370],[-0.328581,-1.730448,-1.539865,-0.718791,-1.477768,6.420696,5.687566,-6.236129,-7.417743,7.976976,-7.220525,3.870592,4.623554,-5.567103,-8.230738,-2.315119,-6.551055,7.690676,5.075386,3.267001,3.596205,-9.939524,-7.855414,8.547307,-1.721603,-9.451751,5.287983,-5.642733,9.600655,-0.942842,-7.888135,-3.656642,-5.219023,5.683437,-5.121692,1.317980,4.562229,-1.367769,-1.793394,-0.132152,3.113115,-8.896984,4.372329,8.393007,6.284198,-6.240052,-3.880385,9.968227,-5.171943,1.295471,0.126291,-8.211801,-3.485610,-4.400982,-9.366685,7.687608,6.930803,-0.334219,6.865877,9.760765]], dtype = "float64")#candidate|4580|(4, 60)|const|float64
call_4579 = relay.TupleGetItem(func_1628_call(relay.reshape(const_4580.astype('float64'), [4, 6, 10])), 0)
call_4581 = relay.TupleGetItem(func_1631_call(relay.reshape(const_4580.astype('float64'), [4, 6, 10])), 0)
var_4587 = relay.var("var_4587", dtype = "float64", shape = (4, 60))#candidate|4587|(4, 60)|var|float64
bop_4588 = relay.mod(const_4580.astype('float64'), relay.reshape(var_4587.astype('float64'), relay.shape_of(const_4580))) # shape=(4, 60)
output = relay.Tuple([call_4545,call_4547,const_4548,call_4579,bop_4588,])
output2 = relay.Tuple([call_4546,call_4549,const_4548,call_4581,bop_4588,])
func_4592 = relay.Function([var_4587,], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
var_4593 = relay.var("var_4593", dtype = "float64", shape = (4, 60))#candidate|4593|(4, 60)|var|float64
output = func_4592(var_4593)
func_4594 = relay.Function([var_4593], output)
mutated_mod['func_4594'] = func_4594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_4608 = func_4514_call()
call_4609 = func_4514_call()
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_4629 = func_4459_call()
call_4630 = func_4459_call()
uop_4648 = relay.sin(call_4629.astype('float64')) # shape=(8, 12, 3)
uop_4650 = relay.sin(call_4630.astype('float64')) # shape=(8, 12, 3)
output = relay.Tuple([call_4608,uop_4648,])
output2 = relay.Tuple([call_4609,uop_4650,])
func_4652 = relay.Function([], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4653 = func_4652_call()
output = call_4653
func_4654 = relay.Function([], output)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4482_call = mod.get_global_var('func_4482')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_4661 = relay.TupleGetItem(func_4482_call(), 0)
call_4662 = relay.TupleGetItem(func_4483_call(), 0)
output = relay.Tuple([call_4661,])
output2 = relay.Tuple([call_4662,])
func_4670 = relay.Function([], output)
mod['func_4670'] = func_4670
mod = relay.transform.InferType()(mod)
output = func_4670()
func_4671 = relay.Function([], output)
mutated_mod['func_4671'] = func_4671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
call_4672 = relay.TupleGetItem(func_3575_call(), 1)
call_4673 = relay.TupleGetItem(func_3577_call(), 1)
uop_4679 = relay.sinh(call_4672.astype('float32')) # shape=(8, 12, 3)
uop_4681 = relay.sinh(call_4673.astype('float32')) # shape=(8, 12, 3)
output = relay.Tuple([uop_4679,])
output2 = relay.Tuple([uop_4681,])
func_4686 = relay.Function([], output)
mod['func_4686'] = func_4686
mod = relay.transform.InferType()(mod)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mutated_mod.get_global_var('func_4686')
call_4687 = func_4686_call()
output = call_4687
func_4688 = relay.Function([], output)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3416_call = mod.get_global_var('func_3416')
func_3418_call = mutated_mod.get_global_var('func_3418')
call_4707 = relay.TupleGetItem(func_3416_call(), 0)
call_4708 = relay.TupleGetItem(func_3418_call(), 0)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_4735 = relay.TupleGetItem(func_1812_call(), 0)
call_4736 = relay.TupleGetItem(func_1814_call(), 0)
output = relay.Tuple([call_4707,call_4735,])
output2 = relay.Tuple([call_4708,call_4736,])
func_4747 = relay.Function([], output)
mod['func_4747'] = func_4747
mod = relay.transform.InferType()(mod)
output = func_4747()
func_4748 = relay.Function([], output)
mutated_mod['func_4748'] = func_4748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4764 = relay.var("var_4764", dtype = "uint64", shape = (2, 7, 12))#candidate|4764|(2, 7, 12)|var|uint64
const_4765 = relay.const([[[2,3,-9,5,1,6,8,-7,5,-7,7,-3],[9,3,-6,1,10,-8,-1,9,-2,-3,-8,-1],[10,-9,-4,-1,2,2,6,-6,7,7,8,2],[-10,2,-7,-3,1,-3,4,9,-8,4,2,10],[3,-9,-3,10,-8,-3,5,6,-10,2,-5,-10],[10,6,-3,3,-4,-8,5,-2,2,10,5,-7],[4,-1,-10,1,6,-4,-2,6,1,-6,-5,9]],[[-6,-9,4,-6,-5,7,-9,-7,-4,3,-10,-5],[-6,-7,-7,-2,-5,6,5,8,-8,-5,-3,-3],[5,-4,-6,6,-8,-6,-1,-2,7,6,9,-2],[-10,5,1,-2,-3,-1,-5,-4,2,-2,6,9],[-1,7,-2,-6,-10,-6,8,-7,-4,1,-5,-6],[2,-2,-1,6,-8,1,-4,2,7,-4,6,5],[10,-3,10,-2,7,-3,-6,2,3,-6,10,2]]], dtype = "uint64")#candidate|4765|(2, 7, 12)|const|uint64
bop_4766 = relay.multiply(var_4764.astype('uint64'), relay.reshape(const_4765.astype('uint64'), relay.shape_of(var_4764))) # shape=(2, 7, 12)
output = relay.Tuple([bop_4766,])
output2 = relay.Tuple([bop_4766,])
func_4770 = relay.Function([var_4764,], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
var_4771 = relay.var("var_4771", dtype = "uint64", shape = (2, 7, 12))#candidate|4771|(2, 7, 12)|var|uint64
output = func_4770(var_4771)
func_4772 = relay.Function([var_4771], output)
mutated_mod['func_4772'] = func_4772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_4789 = func_2428_call()
call_4790 = func_2428_call()
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_4804 = func_2428_call()
call_4805 = func_2428_call()
func_1670_call = mod.get_global_var('func_1670')
func_1672_call = mutated_mod.get_global_var('func_1672')
var_4821 = relay.var("var_4821", dtype = "float32", shape = ())#candidate|4821|()|var|float32
call_4820 = relay.TupleGetItem(func_1670_call(relay.reshape(var_4821.astype('float32'), [])), 2)
call_4822 = relay.TupleGetItem(func_1672_call(relay.reshape(var_4821.astype('float32'), [])), 2)
func_3149_call = mod.get_global_var('func_3149')
func_3152_call = mutated_mod.get_global_var('func_3152')
const_4826 = relay.const([4.473226,-9.361854,-7.788828,-6.557870,-4.816446,1.881312,-9.473258,-2.896550,-3.801074,1.085276,4.146525,4.090435,5.477002,4.078719,-5.151289,-7.480027,-9.408257,9.267147,-9.992977,5.196563,0.661944,3.428893,3.079373,8.969741,-6.328139,5.329628,-0.841483,-9.884735,2.226039,-9.883605,-3.890910,3.096499,6.044421,-5.319245,-7.221913,-1.685217,-1.960199,-5.959691,1.052023,3.309783,-7.855487,-0.094600,0.305196,-0.653126,-3.606652,-0.308214,3.732037,3.443586,8.747044,4.320128,-0.286484,8.774190,3.762242,-7.432844,-1.973385,-4.112619,-6.819368,1.620583,7.019524,-6.385660,-1.411415,5.435656,-4.243186,-9.515432,-4.566047,8.212898,-0.811576,9.444699,-7.681979,-8.119578,2.379133,8.199174,7.797226,-3.082120,-8.739209,8.847897,6.126749,0.525417,1.223157,6.054825,3.818012,-8.401610,-4.630664,3.230275,8.000777,7.191513,-8.587832,-1.969439,6.096443,7.708859,0.454657,-5.794669,6.968900,-9.843850,4.978389,-0.126543,4.124917,-1.552789,-1.485849,-0.118885,-4.140537,-6.499510,6.788333,-0.891427,7.940852,-1.152302,-6.677418,-2.792022,-9.092908,3.415190,-0.157949,-9.435544,-3.314370,5.364316,-1.716329,5.433980,4.338161,-6.691400,-8.632583,4.916697,-8.517532,5.030911,-8.751729,-9.836114,-5.222461,0.161856,8.738063,-8.167337,-1.027533,-1.321555,-1.931289,5.770296,9.037001,-6.125071,9.872765,-8.892851,9.808202,-0.597694,3.988853,4.908200,-2.471730,-6.649050,-9.683690,-2.429653,8.336231,-3.101899,-3.942293,2.634704,9.553146,7.811024,-0.421151,-0.184011,3.396095,9.297505,1.672650,8.903096,3.544273,9.932012,-9.737458,6.884712,-9.965152,0.032180,0.091812,-4.245963,-3.439673,9.432353,9.842190,3.123265,5.821151,0.612380,0.142048,-9.969245,7.413039,-9.399455,8.275427,5.110516,5.053203,-2.475548,0.825963,8.275187,5.328002,-7.920194,-1.495184,8.751229,2.868942,-0.243653,5.942798,6.151405,-1.276490,6.986130,7.035107,9.948657,2.535562,-8.969709,0.008861,0.479949,-3.498803,9.352240,4.850941,-0.990557,-5.842353,6.807361,-0.021286,-6.600911,-1.873928,-8.229028,-8.396209,5.337940,-1.104384,-4.094721,4.431566,-7.843276,-4.517982,1.230592,-2.092665,-4.817299,-0.207123,3.157564,-1.416447,-1.282129,0.747935,5.764065,-3.190056,7.064524,-6.526051,-8.025626,3.293773,7.450612,7.211693,1.135028,8.110566,-9.539404,7.988663,-6.961468,3.323704,0.097438,8.283131,-8.926978,4.954937,-9.183451,4.012688,3.021180,5.648214,-6.447333,9.954820,7.209606,1.349681,8.112540,2.107783,7.336148,-1.017781,8.287912,8.792171,0.966867,0.111202,-2.867672,0.201167,-7.749545,-2.348387,9.301116,-1.623110,-2.115808,-9.099137,5.598186,0.242380,-4.612466,4.648761,-0.871322,1.274922,6.375980,4.260938,0.686054,4.928104,-6.873957,9.616437,-3.895777,-5.118840,0.377933,-9.833493,-0.710048,0.367175,4.810696,-9.351500,8.364623,6.175026,-8.039196,-8.139787,9.892359,2.739789,-1.558605,4.386200,1.024197,5.440366,-4.804569,8.157373,-1.673975,8.405365,7.293147,9.522684,8.143931,1.143190,8.908890,-0.058482,9.197010,-2.880072,-2.761003,-8.219982,1.555146,-3.064231,0.801430,-8.274112,1.140197,6.532815,0.475344,6.193032,-2.324452,8.984238,3.205977,-0.548506,7.380362,-0.003630,5.263446,5.585253,-7.408834,-1.257634,2.708954,5.688558,4.943336,2.846209,8.543831,9.109317,5.198442,-2.501779,-2.055896,-6.724509,7.978605,8.219521,1.770852,-0.770988,3.099564,-1.192529,4.767184,8.930600,-8.322351,-8.373230,8.244820,9.802068,-9.079257,5.783712,5.028235,-5.802823,-2.314350,5.457299,6.193103,-1.699109,-5.737567,2.961379,-0.652411,-5.047774,-8.347390,2.024930,5.853744,-2.380729,-5.786383,-5.044564,7.421678,-8.340132,4.772030,-5.687607,4.997194,2.627427,8.430198,-5.672260,3.622521,-6.012431,4.320827,7.498538,3.451011,-9.331455,-8.533475,8.458228,9.362889,8.352166,3.994875,3.177472,-4.061835,-4.469226,-7.959534,-4.647904,-4.070478,7.581998,-1.035553,-9.292668,-9.585692,4.422348,5.853143,5.617320,-9.151587,2.588616,-4.597981,2.647956,7.596276,-9.154840,-2.906374,7.918034,8.748885,-1.010688,-8.944671,8.138641,0.904700,3.438181,9.975162,7.652375,8.518318,2.573222,-0.153552,9.135470,4.885822,2.437622,-1.447249,-4.808549,2.465277,5.708772,0.462133,-5.785795,8.011071,0.477920,-8.771778,-5.898594,-2.781209,5.487757,-4.497305,-2.664401,-5.729977,5.476053,5.007893,2.023834,-4.722919,-4.530970,3.776821,-0.647813,-2.842941,-3.605470,7.921313,-9.151254,-3.858342,-8.829655,-4.462733,-0.529652,-0.414239,0.624571,2.291702,-7.124526,9.832747,1.553898,8.532694,0.757429,-3.908959,2.411071,8.248870,6.617107,5.451736,-3.890257,-6.268721,1.464402,6.577467,-4.995731,4.664478,-0.304099,8.993993,9.883052,-0.621878,-6.502890,-7.124502,-4.603931,-9.590143,-3.881909,3.226318,0.794060,1.257572,-9.049209,-1.357576,-2.556560,4.847875,-1.216260,-8.812535,7.535125,4.533515,7.102193,4.327605,2.119845,3.779525,-4.665473,-2.199963,8.188562,-1.682021,-7.820215,-7.424475,-3.473147,-9.233047,0.304511,-0.418186,3.902541,-9.048462,-7.215108,-8.020821,2.873786,0.804609,-1.312403,-7.551317,0.409683,5.720287,6.953125,-7.703592,2.657353,-8.366376,-4.077210,3.087675,-9.674990,-5.274858,-6.931451,-4.974380,1.444005,0.734404,-2.954179,7.960208,-9.234457,4.317972,-0.476784,3.688956,-5.540087,-1.459351,-8.376128,-8.609056,-9.039546,1.389962,4.677012,-1.622366,1.572394,-2.604183,9.199612,-3.942363,-7.280296,3.143208,9.829614,-1.775923,3.299469,-4.565274,1.194707,-4.754379,-4.357482,-4.986289,-1.742457,-7.592740,-6.247901,7.680805,-8.864744,3.983650,0.564430,6.791504,4.607526,0.530722,5.877836,-6.175027,-9.724953,-9.919896,6.221948,6.674454,8.433179,8.646653,-7.012053,-2.518649,-0.913978,-4.499479,-2.144203,5.209934,9.916667,-0.228670,-5.053702,8.959115,-0.574094,9.504366,-1.493254,2.977277,-2.091820,7.584980,8.177905,1.124048,6.786827,5.506039,-8.150161,9.847326,4.469911,-5.902335,8.127011,4.423815,6.762128,5.404073,4.634756,5.805517,4.072891,-8.354374,-3.433882,8.692782,7.901179,-9.076528,9.044460,-1.556934,3.916548,-1.527993,-1.174678,-2.361974,5.854611,-7.211935,-2.159220,-6.821088,-6.214118,-7.950453,7.549278,7.631977,1.334260,-4.058673,7.087280,2.748745,3.086013,7.380578,2.187810,0.344022,5.256941,4.180024,2.334227,-7.223288,8.886161,2.877552,-9.337918,7.541348,-0.880211,-4.808935,-0.969652,-6.859109,0.180582,-5.416242,-7.534090,0.224211,7.614791,2.796432,3.207612,-0.005927,4.950471,0.367306,-7.471486,0.299407,-0.057071,1.164179,1.657075,-9.321869,5.155138,-7.963531,-1.490218,-4.227291,-0.162301,-9.841513,0.884591,-8.126509,-0.399595,-1.280107,4.519165,6.853384,4.280063,-3.521794,6.453434,9.184315,7.686296,-1.823594,-8.014326,9.430344,-6.796833,-5.732866,7.799692,-5.253610,-3.712878,-0.847900,-2.520954,6.826075,-0.586048,9.705171,-2.326521,1.153947,-8.105605,2.176376,-6.802936,8.014454,-9.093901,-5.777239,0.465191,-4.409723,7.534552,5.420046,-4.928884,2.360966,-9.829187,-1.278575,2.775711,3.727162,9.575105,-7.722503,2.977044,8.613154,7.722108,9.408462,-7.881612,-9.682335,7.178130,-1.980323,-2.604397,-9.688217,-3.021925,5.506294,-8.803057,1.775369,8.111856,5.927202,1.938781,3.772003,-7.807171,9.167625,-9.306311,-5.702123,7.639026,7.539204,-1.226360,5.132100,0.308712,6.600224,8.494829,8.960657,-9.369597,7.680090,5.490699,6.386114,-2.327441,4.985150,-1.713230,-6.676062,-9.213495,-0.867053,8.299295,5.455649,-1.260015,8.721339,8.753095,0.661700,7.047555,2.772700,2.900423,8.837356,-7.195510,-0.904827,-0.231922,-1.688761,-8.001857,-0.611123,-4.142368,-7.835875,-8.010446,-2.365797,2.057133,6.176666,9.567136,1.514352,3.235279,-1.061665,1.015834,8.575752,2.338872,-0.865880,-4.520374,4.829999,-2.536514,2.557096,1.011464,-3.848833,7.726706,-8.733818,4.965979,2.693335,-2.594812,-1.838001,-7.778223,9.791880,1.425191,-3.740122,-1.710479,1.559146,7.468091,1.214427,-8.228269,4.766135,-3.668301,-2.234584,-5.424298,-5.057872,3.732238,-5.890084,-7.189547,8.466319,-5.185830,8.484385,-5.981827,4.659392,-9.088404,-9.240026,5.799240,-6.904646,5.960432,6.627407,4.498118,-7.020601,-8.388623,-3.357267,7.370775,-2.898658,2.076877,-1.454356,-4.792416,-8.559034,6.523152,-0.409045,-8.616017,-9.599380,8.939060,3.881287,8.071343,-5.873988,4.797262,7.162246,-8.598925,-7.996970,8.686914,6.885418,-8.810644,-1.520229,3.676370,-6.995107,-5.230908,7.316875,-3.068937,-2.329555,1.082777,3.393479,5.077591,5.539817,1.402425,-1.056296,-2.059852,-2.733974,5.891108,-2.510694,1.481208,-4.057367,7.824512,-1.296588,8.648775,-2.664343,0.345926,3.022384,-1.027981,-6.702292,-9.340916,-3.479924,7.191583,5.722909,-6.097805,2.156505,7.689741,0.440970,5.579704,-3.486272,-9.031459,2.861949,4.527529,-8.155100,7.503700,6.310062,4.813973,0.655149,-6.262506,8.382317,-4.632187,5.570009,2.007144,4.674056,-8.516989,0.261460,-6.803486,-6.835132,8.793640,8.769019,8.259490,-7.316471,-1.591820,3.976893,-8.173993,4.160015,8.479176,-7.911171,2.470518,-2.684325,-2.349696,-1.593226,-5.628644,-2.365958,-3.206556,9.151937,-9.189473,-9.512675,9.556695,5.419310,0.766584,-2.611548,8.256702,3.168312,-4.875940,-7.202456,5.338498,5.123375,6.496334,6.441765,5.556544,-9.586605,-0.435192,3.826894,-3.997558,8.622442,9.600545,1.404517,8.749838,-6.189435,-8.229105,-2.928157,2.666469,2.745988,3.959409,-9.785759,6.364123,-6.739427,-6.388426,4.394096,-3.547568,-6.534780,4.046513,3.101076,-8.481660,-9.829500,-8.910281,-9.318644,3.292817,5.664461,-6.589265,8.507856,-0.152113,4.641009,7.564969,6.401642,9.155650,-3.091037,2.930289,4.576344,4.636993,-2.466028,-7.723915,2.027851,1.167635,-9.152198,5.491312,4.397221,1.457112,-8.743467,-1.067727,4.105192,0.636599,-7.378383,5.334255,-8.676118,4.579523,-0.032557,8.747845,6.632603,-5.501029,-0.292672,-2.329182,1.312156,-5.018142,-9.149767,-7.286552,-3.985160,7.791213,-6.302650,5.798509,5.170321,-5.577538,-0.313484,-0.925471,-0.489687,-4.091308,-0.509750,-5.536819,-8.866832,1.948338,2.015865,-0.122045,3.753987,-1.348135,-3.334741,-5.019271,1.621270,-0.839459,-5.631545,3.138934,9.818930,1.578189,-7.508287,-2.688909,-7.534234,-1.225323,7.187238,2.914118,-5.486753,-2.676393,9.349859,6.906216,2.545271,3.335577,-4.300233,-3.552567,-6.549231,8.478205,-0.240776,4.053846,2.505350,-1.620941,5.519862,5.941892,-6.134921,-7.021656,-4.834820,-9.007553,0.901110,0.060925,-5.631948,-9.170081,5.379086,-2.647434,9.185211,-2.127121,8.397994,6.453643,-7.716303,-9.189943,-7.848699,5.394711,-5.661487,3.509841,8.963119,9.530848,-1.933017,-4.647903,7.343355,9.889856,-1.633356,6.157737,0.644761,-4.805594,5.226051,-8.051018,-8.577728,-1.782769,8.651954,-9.942557,-5.975538,-7.028607,5.467038,-4.148822,5.458920,0.636864,3.437157,9.252025,8.497202,6.996044,9.313908,7.451764,0.882646,-7.246028,6.346373,6.948572,8.041817,-0.474274,-8.297516,9.920090,7.859822,8.816845,-8.372537,1.612644,0.230373,-5.377878,-4.405658,-1.632146,-1.967645,-7.664295,0.395816,6.270713,7.514151,-3.288733,4.059278,-9.260401,-6.338707,3.970870,-8.332690,2.019058,9.128858,-9.745324,8.192529,0.273707,-3.629073,9.509139,6.714364,-9.120333,-4.492355,-9.769484,-3.798353,-3.755991,8.503017,2.030357,-3.820730,9.259221,7.578131,0.683342,-2.391976,-9.977554,-1.094825,-4.745253,-7.950767,6.725758,7.970970,-6.595455,-0.012615,9.124555,1.265550,9.704885,1.978377,9.633475,7.093451,4.620069,-1.496821,-0.563527,8.421454,-5.696706,8.801841,-3.403329,-3.665691,-1.319618,-7.366222,-3.425024,2.003278,5.200758,-2.532668,5.820682,-1.003410,7.515427,-3.634162,7.584187,-0.713312,6.865032,3.705824,6.623954,6.438079,-9.232118,5.687009,2.403352,5.603664,9.820951,0.221191,2.875491,7.576376,-0.327105,-9.741221,3.734464,-3.335259,-9.170502,-6.893917,4.247113,2.941212,9.055519,-4.793006,7.247106,-2.893541,3.058786,0.594071,4.127289,0.250935,-9.055613,8.783263,-0.889304,4.042403,-8.152581,-4.211879,0.861474,6.320064,-7.791741,7.347339,8.850932,-5.813720,1.873974,9.182722,-9.392677,4.594113,-9.101173,-6.705347,-8.592057,7.886465,-3.643974,-1.638557,-4.295451,-9.539825,9.006363,-8.263389,2.682233,8.280963,5.830437,3.959434,0.863402,-2.259850,-2.415917,-0.915896,-6.893735,1.108409,-8.793294,-3.340793,3.868886,6.916622,-4.556956,-5.523970,8.311983,7.891425,-6.082821,-6.225124,5.598836,-6.748007,-6.978856,-2.001832,-2.430056,2.942931,3.678553,9.183706,-2.928973,7.726422,8.320309,7.388757,3.133708,6.400190,8.546889,8.181075,-7.484358,-0.645373,-3.609161,-8.609930,-8.024791,5.976006,9.168278,4.339073,-5.677786,3.103050,-4.281406,-0.530217,2.498988,9.914380,1.989914,6.334394,-2.555198,-9.941497,-0.249624,-2.333626,-5.419651,-1.245556,-5.708643,-1.506780,-2.859187,-2.176468,-2.188451,-1.501868,-7.637963,-0.261886,-7.763797,-7.703606,-2.470212,6.808632,8.573031,2.320057,-0.580202,7.925196,2.678564,2.934534,6.344499,-2.401171,-2.281815,2.436626,1.729465,-4.817058,7.848678,-5.025676,-5.921236,-3.622363,8.010984,7.316679,8.205303,5.165846,-1.318876,-2.107269,-0.543462,7.018230,1.916698,-5.226972,2.992420,-1.003242,5.949669,-0.394012,5.224660,9.287491,-5.257436,-1.365954,1.697217,0.532427,-1.327916,-2.961458,-9.741797,9.197700,-6.093078,-6.968024,-9.735014,5.733016,-6.903138,6.585679,-0.601928,-1.708733,-2.541723,9.801266,-7.332232,5.910820,-1.246851,-0.067575,-5.820540,8.080466,2.670579,-9.354755,-3.637040,6.297250,6.206962,-4.586750,7.258207,-3.997097,7.784602,1.678156,-4.717482,-6.560727,-7.036665,-8.290518,-1.670537,-0.782554,6.914375,-3.590172,-0.211819,-5.780092,-9.648890,7.825315,-7.444767,6.361761,5.397391,3.343983,-2.467932,3.782812,-5.161195,8.318240,4.203121,-3.014467,-0.172531,-1.453350,-8.236209,-7.873687,-0.423010,-5.762844,3.493318,-0.119133,4.657841,5.699382,-7.315528,-7.098720,-5.242800,6.460100,6.863883,-1.402367,-7.387157,-8.176058,-8.178838,-2.112166,1.537069,6.336371,-2.274987,8.887636,5.188083,4.697070,9.552657,7.446825,1.908386,2.590977,-6.348285,-4.542387,7.780273,-6.535604,7.842891,-9.462623,0.877305,-3.505866,7.074071,5.378167,-7.490777,-8.482512,5.741611,3.650634,4.760950,2.299441,-5.107742,-5.065519,9.710453,5.707459,3.602791,3.258197,1.417458,7.589909,9.234868,-1.009200,5.974917,-5.283593,-1.144736,-7.300596,-8.436319,2.166446,6.839667,-6.560749,-2.209104,-0.908624,1.840725,2.963499,9.153186,-6.213957,5.031035,-5.218490,6.165047,4.723490,-0.807396,0.161428,-0.983626,0.360506,7.938808,-5.782221,-8.731681,0.189767,-2.687510,-4.593495,2.653598,-2.380054,7.607459,-1.871521,3.850152,-4.138524,6.558991,0.869853,8.322037,8.562826,-7.155215,-6.513917,-7.340061,9.745238,-9.916821,-1.758847,-7.457535,4.018193,1.656294,-2.509439,4.459395,-2.947910,9.603632,-7.095402,3.080295,7.268160,9.462681,-1.108397,7.662230,-1.210048,5.251810,-1.669036,-3.396826,-8.428577,7.063948,-6.159170,9.431616,6.688873,-6.602291,6.608288,2.482068,-7.748757,6.441572,6.981556,-3.654814,-6.954471,-0.983316,8.348158,-8.952947,2.213463,-9.718910,5.684125,-0.819343,-0.671321,-0.309704,-6.894562,-8.521917,7.367551,6.627710,7.536302,-5.263254,-3.182207,-8.430496,6.610927,1.764041,-3.677775,2.636225,5.506556,-3.249246,-7.045273,-0.615543,-0.995838,3.052791,-5.409152,-1.090487,-3.966197,2.900043,-7.494838,-9.720922,4.826730,-1.971095,-6.476207,0.491236,2.800173,4.969699,-5.676910,3.131609,3.811269,-9.414642,7.209848,7.135549,-5.338689,-4.977530,-4.762480,-9.022770,-0.050667,5.208279,-1.383838,6.847744,-3.613093,-2.077430,-4.162689,1.492350,-3.435382,5.088787,3.749047,-7.980870,9.090565,-6.474061,8.018761,9.720862,2.873965,-8.002223,9.453172,0.464634,9.772298,9.593806,8.847836,2.590383,-1.819218,-2.444366,1.736790,9.881785,9.055487,-3.019943,8.677046,8.329853,-9.521967,-9.950941,9.991206,7.931290,6.859979,-6.410904,0.693437,8.092348,-2.344556,2.749450,-9.859730,-8.700164,-5.513038,-0.768152,5.015512,-1.894522,-3.327735,9.539024,8.121861,-4.578981,9.288130,6.369213,-0.055707,3.976534,-1.623021,-4.653315,2.448695,7.399484,0.364874,9.222595,3.313961,-3.531513,4.389342,7.896128,-9.157548,2.211664,-6.410870,-7.641119,7.036866,3.777131,3.027353,-5.749192,-7.301269,-6.614454,-1.828882,-3.419691,-3.192281,0.408329,8.591515,-4.064885,-3.105083,8.559738,-2.848714,6.654328,9.885311,-6.990474,-4.811442,-8.675937,-1.232539,-0.345404,-5.848819,-8.724505,5.682923,-3.268096,-7.771635,-4.862904,7.630190,4.238430,2.548533,1.723724,7.563429,4.805323,7.652219,-8.048852,9.415554,-6.073155,-9.238602,-7.428968,-5.343555,-0.491753,2.668985,1.871189,-6.769281,-0.051405,1.888737,4.198905,4.940403,-7.010884,-1.223738,-5.358072,6.815315,0.614819,3.897231,6.566523,3.239672,-3.599322,-4.657726,3.458448,-2.277734,-6.893148,6.737302,-4.082891,6.638152,3.020609,-9.404630,2.871775,-0.398205,2.321159,-3.933248,9.592640,-9.415337,-6.298299,9.542143,2.392789,6.093364,8.295343,5.006256,-7.181899,-8.636108,-0.076344,4.558855,-6.799182,8.286392,-7.506088,-3.477217,8.805577,7.360570,0.792606,9.518202,8.989842,6.466954,7.153351,-3.657369,8.423569,-2.111639,6.322904,4.372773,5.401397,9.613665,-9.267627,-3.088977,-7.991593,5.306266,-4.241192,7.925486,0.175093,2.940400,0.111523,-2.974560,-4.570029,2.571122,2.389390,-5.852069,0.332115,-5.567211,1.761504,5.625204,-5.804809,-4.703528,0.117189,-4.946091,-2.923226,9.717622,-5.709602,-1.898355,-7.415216,-5.860551,-9.194472,1.083101,4.988719,7.124088,-4.269490,-2.819352,5.406134,0.683260,-2.632020,6.445305,1.622326,4.144723,9.282205,9.449803,2.428493,0.406616,-8.462679,8.765998,-4.312218,-8.826509,7.400833,4.704538,9.151952,5.831493,3.830384,-0.032560,0.432364,-1.470730,0.315456,4.165146,7.981478,-7.897037,5.918942,6.400531,-8.076035,-7.592114,7.188857,-6.297175,-0.890473,-9.436355,2.787587,5.528333,-1.558305,4.422992,6.682959,-7.701844,7.446906,-4.347545,-4.919587,-5.368774,4.571025,-4.641162,-5.688306,-0.657891,-4.630463,-8.103818,2.433773,9.078371,3.026111,-1.276781,0.880767,-3.753242,1.926265,5.913192,-3.897178,1.260113,-9.753881,-9.891394,-6.649238,2.173576,-5.483988,-8.300840,2.200177,3.283311,-3.935259,0.911589,0.829607,-8.128431,-8.886055,-2.301962,5.261198,4.361476,-2.786192,4.457615,-7.436557,7.442095,-7.492916,-2.002022,4.904622,7.152508,1.126185,9.511761,-5.709966,-6.592734,5.669322,5.639168,-6.089283,-3.326451,9.140018,2.225714,1.285667,-2.104289,2.818803,5.332394,-8.389710,-2.374489,-7.185739,-5.460885,-7.387337,8.469816,-9.159813,-9.659362,9.378751,8.302829,-3.004885,-2.979430,6.679718,-5.270375,-1.467101,-4.950481,-2.415404,-2.131023,-7.522809,9.585023,9.148532,7.168624,5.226238,-4.384351,-8.821004,7.939269,7.964858,-2.436972,-7.620851,6.238457,8.471104,-1.854693,-3.604792,-3.876947,3.439640,3.578554,-0.466357,-0.061826,0.385627,2.192118,-3.559610,-8.696196,-4.977384,3.481537,1.458182,5.520521,-3.925854,-9.879302,5.629673,3.529109,-8.120256,6.467903,9.512978,6.690683,1.939532,4.949949,5.185978,0.409893,-5.000985,3.698757,4.818698,-0.569271,-7.915399,-4.405197,0.155328,-2.299605,5.323949,1.190326,-3.847361,0.514805,2.034299,1.393967,-2.916199,-2.383004,4.702057,5.464197,0.036461,-9.413983,-3.902295,2.475656,9.685988,-6.450427,7.466595,3.323392,-7.130304,4.996189,4.073429,-0.772718,0.069831,7.619495,-9.640051,0.479183,-6.630441,8.259814,2.582700,2.000365,0.917325,5.269831,2.878922,-0.918913,7.811430,7.218224,-5.405625,-6.299275,-6.065711,6.628888,-3.328239,-9.757877,-2.219141,-7.821873,-1.509302,-7.174355,7.073248,1.800010,2.166089,-7.229716,8.033317,1.682338,8.713417,-3.122058,1.362073,6.536778,-7.244486,4.713496,7.979689,-1.066423,5.337725,1.695419,-5.123224,3.936633,-6.633290,-3.713271,0.455330,-4.476800,-1.532346,-5.756679,-4.593289,5.901653,-5.143067,7.367498,-4.288831,1.635893,8.265146,-3.756582,2.547768,1.040311,7.619707,-9.664458,3.665324,-4.999485,7.752278,-0.518539,-8.469241,-2.572425,-9.284873,-4.635547,-7.960972,-4.054008,2.123483,5.201360,-2.954839,-5.569029,5.433172,-1.376631,5.036791,-4.096155,1.408968,-6.356889,-3.993291,-1.017510,3.719456,-8.559037,4.940707,4.303216,4.517714,9.713628,6.648990,-1.325312,-3.210896,0.480637,7.193019,-9.924406,-8.084705,-0.222595,-1.559074,4.908077,3.861660,1.130469,-9.977445,0.738088,2.873243,8.216389,5.529838,7.523521,-9.533988,5.585749,-0.192610,6.400285,6.265270,-8.501089,-2.894574,1.823991,1.319306,-5.351622,6.699992,5.517615,2.927716,3.198841,-9.811762,-0.338468,2.173684,-7.735259,-0.559662,9.098263,2.869059,3.496332,2.280330,-7.340105,8.828239,5.128728,-7.111040,4.525587,8.437653,-7.276561,-3.571668,7.387104,3.954241,4.161644,1.797666,2.455129,-1.396048,-0.549584,6.750090,-4.368098,-9.189753,5.609102,2.745492,-4.381571,2.515564,-9.781995,3.582459,3.171126,-1.852748,-4.273134,5.337297,-9.905148,-6.823115,-9.539729,6.563305,-6.749081,-6.942570,2.193157,6.843617,-7.538254,-8.394899,-7.021062,-3.386854,-1.485351,-0.473321,-8.439130,-8.581283,-0.760055,-2.285823,-7.697751,7.394489,8.406280,-1.156217,9.923747,-9.849151,-2.985717,9.813269,-7.410733,6.710722,-9.107076,-5.869831,8.217807,6.614511,6.731227,-1.433617,-2.455481,0.251503,1.169891,-3.958615,4.922662,3.598383,6.740728,-9.712282,-1.588515,0.275413,9.134223,-9.686212,-1.645673,-9.433247,5.885946,-9.499234,8.623028,4.170670,8.583679,0.039478,-0.279654,7.533858,0.474705,8.857761,5.588855,-8.366611,-7.810926,9.742855,7.353897,9.995686,7.341505,-6.695943,9.517286,2.627384,9.136995,1.379716,3.716545,9.050970,-0.778439,1.715645,4.792309,-8.258850,-1.062459,3.711517,-3.734945,-3.073125,-7.024816,-4.763980,-8.150683,-3.052796,-2.368097,5.380407,-3.368117,7.690636,9.075375,-0.841543,-3.888817,7.759275,0.651281,-1.422748,7.125307,8.476572,3.796301,1.029049,9.308824,3.172826,5.391777,-3.362755,-9.128084,-3.586345,-8.837950,-3.520620,9.510057,4.897175,-8.450292,-6.179936,-4.250891,3.651015,8.565685,8.498001,4.369415,0.962005,2.853198,-4.546530,2.713295,0.241407,-9.081637,-3.018803,8.849570,-0.124473,-2.689476,5.894746,-9.974215,-2.761721,6.960734,-8.202549,2.865411,4.297383,3.805995,-2.094116,-3.336186,-3.734853,1.003381,5.645879,-6.977742,6.452214,-2.703802,1.762857,3.410789,7.265450,8.765466,9.229885,5.456627,6.512747,8.350106,4.035097,-5.472045,-9.945853,-2.002124,-7.536885,3.814186,5.400658,1.240379,-3.448805,1.608918,3.943478,3.437025,2.191931,-2.457408,-4.118991,-4.087094,5.072942,5.918656,-9.607831,1.438447,3.034971,-5.086104,3.538416,9.839476,6.746275,4.412451,-2.574364,1.836084,2.216467,-7.540498,8.737417,1.283716,1.505543,-7.790568,-7.914232,9.044828,-1.805112,6.015122,9.374437,5.230590,4.340789,3.978183,-3.311697,5.406248,-5.156854,7.335403,-0.445779,3.630208,1.818986,7.108506,3.439389,0.643855,4.976760,4.939375,-3.124420,3.309144,0.418200,4.178499,2.226564,7.538142,-0.729162,-5.100572,4.155021,8.891528,0.493562,5.960555,2.187943,1.395446,1.376941,4.418403,2.093805,1.866328,0.960871,-4.464597,7.875144,5.952894,-9.076880,-1.552857,5.379510,4.519287,-3.574488,0.873740,3.927772,-1.179289,-1.415381,-2.376019,-6.665419,-8.693392,-2.988676,1.842379,7.994607,-3.953004,-9.479143,9.652668,-7.223035,-3.641475,2.188031,-0.063828,-5.820218,2.889249,-7.002952,1.582191,5.182155,-6.369764,-1.071786,0.946636,-2.761138,-3.099519,-7.387737,-5.702242,-8.935251,-4.272456,5.592352,-1.686419,3.257641,-7.824365,-6.672203,1.896457,3.625795,0.449093,4.348235,8.393459,-0.788137,-0.238418,-0.422956,3.099137,8.289578,-4.390635,-8.044714,1.846670,4.570803,1.800690,7.262362,9.230391,1.947878,-2.037858,-7.354787,-9.826610,9.606327,9.125908,-9.375296,-3.843121,-5.693263,-5.806670,-2.286791,7.715491,8.618592,1.747922,7.298367,5.195972,4.776476,1.976576,-3.653155,3.588432,-9.769566,3.285719,0.212963,-9.496285,-6.571751,2.765075,-1.513335,-6.955735,6.121418,-5.598700,4.300256,3.019729,-9.755631,-3.272499,1.307669,-4.558575,-8.977015,-3.043567,-5.573913,-9.978060,4.866885,9.049255,-7.419349,1.781004,7.195204,-5.382362,7.195975,7.478879,-9.041776,-1.208438,1.961515,6.433705,-4.040089,-3.717206,-6.620349,-6.734944,-7.114048,-1.021886,0.676877,-3.302101,3.461114,0.494064,2.593691,-9.474721,-3.590075,7.199875,-5.362329,-3.585964,-8.818498,6.645337,7.253722,-6.156635,1.101191,-4.786761,-1.174071,6.187422,2.021223,-8.367599,3.099122,-5.623911,-1.677385,-7.237670,-6.472293,7.847251,9.217029,5.820726,-1.839649,-4.538027,-9.020191,8.173786,9.225587,1.132881,3.678575,2.036927,-3.775678,1.222502,2.274717,3.582462,-4.800620,-2.690910,4.690100,-3.056842,6.842225,5.706726,3.011770,-3.315914,2.203037,0.740918,-3.340586,-8.694121,-2.440903,4.410642,7.768719,6.750499,3.743353,7.777558,3.078074,4.052528,-5.386591,5.876208,3.744752,-3.679147,1.826469,1.051634,2.558325,-8.371978,5.285971,0.079013,8.296802,-3.958828,3.828371,7.165113,9.523516,3.498847,-9.750233,8.249698,9.486639,-1.304274,1.685901,-0.855060,5.997111,-3.172614,-1.405323,8.574426,-0.526486,-5.515204,8.277462,0.004451,-0.713498,-5.831839,4.052347,-0.037545,-2.986183,1.068610,4.284460,-7.933896,-3.895968,2.845155,-1.990140,-6.862784,0.602661,-4.268494,8.024337,2.264386,2.909140,-5.305433,-5.898964,3.447430,2.970081,-3.341247,-4.557640,-5.197577,-9.069200,9.374026,-3.510659,6.344133,-7.597246,5.415593,0.261989,-5.059491,-7.026473,0.550937,8.163436,4.581449,2.473715,6.234888,-4.543804,1.980719,-5.573230,-6.781254,-6.266037,-6.838433,7.939422,-5.631318,-5.072598,8.681707,6.009830,8.401297,4.585165,-4.532370,7.474986,-8.014358,3.168800,-0.667752,-2.405747,-8.406249,-9.147965,-8.309843,-4.559109,4.159837,7.539153,-7.977222,3.852191,2.223309,-7.855078,-6.594893,-2.150324,-8.312313,-3.902812,4.743147,2.746114,7.234263,-0.832610,6.410557,0.893796,6.026347,-4.775306,1.562009,-7.093447,-6.776211,-7.699958,-2.539586,-7.947234,-1.296111,7.803420,3.938313,-0.986641,-1.207728,-1.424592,1.187926,-5.762541,-3.787382,-1.078373,5.456733,4.958026,-5.255088], dtype = "float32")#candidate|4826|(2640,)|const|float32
call_4825 = relay.TupleGetItem(func_3149_call(relay.reshape(const_4826.astype('float32'), [15, 16, 11])), 0)
call_4827 = relay.TupleGetItem(func_3152_call(relay.reshape(const_4826.astype('float32'), [15, 16, 11])), 0)
bop_4829 = relay.add(const_4826.astype('int16'), var_4821.astype('int16')) # shape=(2640,)
func_4036_call = mod.get_global_var('func_4036')
func_4040_call = mutated_mod.get_global_var('func_4040')
var_4841 = relay.var("var_4841", dtype = "float64", shape = (1470,))#candidate|4841|(1470,)|var|float64
var_4842 = relay.var("var_4842", dtype = "uint32", shape = (32,))#candidate|4842|(32,)|var|uint32
call_4840 = relay.TupleGetItem(func_4036_call(relay.reshape(var_4841.astype('float64'), [14, 105]), relay.reshape(var_4821.astype('uint64'), []), relay.reshape(var_4842.astype('uint32'), [8, 4]), ), 5)
call_4843 = relay.TupleGetItem(func_4040_call(relay.reshape(var_4841.astype('float64'), [14, 105]), relay.reshape(var_4821.astype('uint64'), []), relay.reshape(var_4842.astype('uint32'), [8, 4]), ), 5)
func_155_call = mod.get_global_var('func_155')
func_158_call = mutated_mod.get_global_var('func_158')
var_4850 = relay.var("var_4850", dtype = "uint8", shape = (390,))#candidate|4850|(390,)|var|uint8
call_4849 = relay.TupleGetItem(func_155_call(relay.reshape(var_4850.astype('uint8'), [15, 13, 2])), 0)
call_4851 = relay.TupleGetItem(func_158_call(relay.reshape(var_4850.astype('uint8'), [15, 13, 2])), 0)
output = relay.Tuple([call_4789,call_4804,call_4820,call_4825,bop_4829,call_4840,var_4841,var_4842,call_4849,var_4850,])
output2 = relay.Tuple([call_4790,call_4805,call_4822,call_4827,bop_4829,call_4843,var_4841,var_4842,call_4851,var_4850,])
func_4867 = relay.Function([var_4821,var_4841,var_4842,var_4850,], output)
mod['func_4867'] = func_4867
mod = relay.transform.InferType()(mod)
mutated_mod['func_4867'] = func_4867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4867_call = mutated_mod.get_global_var('func_4867')
var_4869 = relay.var("var_4869", dtype = "float32", shape = ())#candidate|4869|()|var|float32
var_4870 = relay.var("var_4870", dtype = "float64", shape = (1470,))#candidate|4870|(1470,)|var|float64
var_4871 = relay.var("var_4871", dtype = "uint32", shape = (32,))#candidate|4871|(32,)|var|uint32
var_4872 = relay.var("var_4872", dtype = "uint8", shape = (390,))#candidate|4872|(390,)|var|uint8
call_4868 = func_4867_call(var_4869,var_4870,var_4871,var_4872,)
output = call_4868
func_4873 = relay.Function([var_4869,var_4870,var_4871,var_4872,], output)
mutated_mod['func_4873'] = func_4873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2504_call = mod.get_global_var('func_2504')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_4881 = relay.TupleGetItem(func_2504_call(), 1)
call_4882 = relay.TupleGetItem(func_2506_call(), 1)
func_3047_call = mod.get_global_var('func_3047')
func_3050_call = mutated_mod.get_global_var('func_3050')
var_4894 = relay.var("var_4894", dtype = "uint64", shape = (945,))#candidate|4894|(945,)|var|uint64
var_4895 = relay.var("var_4895", dtype = "uint64", shape = (108, 2))#candidate|4895|(108, 2)|var|uint64
call_4893 = relay.TupleGetItem(func_3047_call(relay.reshape(var_4894.astype('uint64'), [945,]), relay.reshape(var_4895.astype('uint64'), [216,]), ), 2)
call_4896 = relay.TupleGetItem(func_3050_call(relay.reshape(var_4894.astype('uint64'), [945,]), relay.reshape(var_4895.astype('uint64'), [216,]), ), 2)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
const_4898 = relay.const([-0.610046,9.724518,-3.138923,0.975516,-3.542276,-5.302295,3.881919,-9.676139,-5.228861,-8.302621,4.485325,-2.246169,1.975095,-3.039427,2.356574,-4.936417,-8.763654,9.708669,5.918912,-1.701437,5.885422,4.380175,-4.576638,-6.949377,-5.965930,3.134922,-5.352030,-3.655303,3.066464,-4.170180,-1.116926,-0.143618,-5.848269,2.947099,-2.747599,8.122232,-8.656249,9.149432,6.119965,-4.204886,-4.430401,5.435728,7.255471,-8.401904,3.688838,3.252530,8.831453,-8.346494,-3.492884,-1.816261,3.498888,-7.906022,-4.210480,-3.653565,-6.658196,-2.854472,-4.278338,0.476085,0.313636,-2.602565,-0.627540,-3.391187,9.354652,-8.511786,-1.034585,5.892868,-2.410116,6.181845,2.478056,-7.068526,-4.869548,-2.162149,8.232175,6.015834,-3.746248,6.068096,0.792268,-7.481726,-2.048821,-6.753804,7.900403,-1.447244,-9.077669,6.898955,-4.768266,3.266778,-5.958376,0.483986,2.116723,-3.433315,6.823262,-2.158003,5.427435,9.784588,0.654067,-9.347962,8.913936,6.810825,-8.986560,6.182343,-6.747540,-4.513559,9.865338,-9.967157,-5.040731,-9.685781,-8.828757,-2.440095,9.410159,5.429876,-4.867401,-4.898817,0.581214,8.099663,-8.344320,-7.351719,9.477881,6.572402,-1.836744,0.197238,-5.039186,-6.620130,-3.143898,-6.789990,8.880542,9.629668,5.915304,3.068528,5.503421,-4.544166,-5.120114,-1.156663,9.829502,-8.784258,-5.031303,-9.201023,3.934478,3.648570,-0.565305,6.791816,-8.286927,9.960997,-7.930204,-7.975395,8.538409,6.104384,4.432110,0.653454,2.246973,-0.929338,5.760120,-3.001906,-5.485721,-4.849215,7.223187,-6.188636,-0.040477,0.402012,-1.494938,-2.705208,7.497657,3.645302,-6.769375,4.971237,-5.457618,2.066192,0.885331,-1.549497,8.052626,-7.540398,3.658178,-1.501723,-3.813607,-4.448314,9.637190,-5.231830,7.474015,3.279535,-9.209192,7.154723,9.652056,-5.829304,3.230210,-0.565279,7.309376,4.214209,2.547528,8.628658,-9.710296,-2.139234,-6.938376,-5.265059,5.030354,4.374933,-8.792890,-8.554620,8.922769,-1.941137,-7.772960,-6.182891,3.170864,-6.158193,6.148743,-6.348636,4.334140,-0.171767,8.160872,3.277406,-6.476885,-2.665541,-8.629657,-0.306781,9.365023,-1.259882,7.426375,-8.711442,-4.189539,7.013603,-6.759912,1.132552,1.862161,8.446291,-4.883156,6.193788,-4.888275,-2.747597,-3.066143,-2.022772,8.422653,4.144118,9.558616,-4.364318,-9.099971,-2.723679,3.462662,3.607716,8.671917,-4.090440,9.393403,-6.025345,0.120212,-8.260099,-7.219836,-8.003571,5.369105,-0.021713,7.805533,3.800652,5.473654,-8.428194,1.386379,3.551345,-2.680031,3.182110,4.788631,6.879148,-8.629355,-0.393568,1.738540,-1.124070,1.332850,7.912071,8.705760,-8.124355,-4.844456,-6.336653,-7.790356,-9.664034,0.764033,9.183903,-6.273120,9.578545,-4.986066,5.116728,-0.518144,2.133390,-3.891787,-5.095393,6.020433,-0.769321,8.404564,4.252890,-6.846833,1.086469,8.021066,-5.282155,9.156760,-4.027392,-0.231114,5.788061,-3.078874,-0.404486,-4.155374,-2.270123,3.205061,6.717590,2.106786,7.069840,4.157282,7.206743,8.566717,-3.526536,-5.642239,-1.209891,-4.958831,7.253946,-5.981377,0.194315,5.527402,-0.338433,1.999825,2.686420,8.244810,-3.584962,3.413383,3.297733,-7.895858,-3.234546,5.678209,2.851200,-1.193263,-6.917937,-7.708119,6.624331,3.462865,-9.553614,-1.240532,-4.934358,-1.180841,-4.204985,-5.091894,-3.992803,2.395068,5.434253,-0.646111,-7.341821,-6.249118,5.062319,-6.493844,-0.114273,0.588855,-0.464879,-2.053748,1.513067,-1.606277,3.057306,8.507839,8.366101,-9.731109,3.363765,4.785548,3.358047,-3.924841,-4.937191,-7.460941,8.059697,5.142487,5.192488,-1.318315,6.484600,-5.403970,3.324002,-9.432765,-9.368227,-2.810180,1.670912,5.831865,7.746789,-7.239185,-9.436855,-2.349371,-7.548185,-5.975083,8.837796,-5.243528,9.381821,1.402351,-9.598419,4.520751,-4.119993,1.677128,8.327587,6.732119,-2.637798,-6.630163,-3.497465,-1.268727,-9.297561,-1.809983,8.523913,-6.001378,0.484454,-6.426792,-0.028227,-8.283712,3.222664], dtype = "float64")#candidate|4898|(396,)|const|float64
call_4897 = func_585_call(relay.reshape(const_4898.astype('float64'), [11, 9, 4]))
call_4899 = func_585_call(relay.reshape(const_4898.astype('float64'), [11, 9, 4]))
bop_4901 = relay.mod(call_4893.astype('float32'), relay.reshape(var_4894.astype('float32'), relay.shape_of(call_4893))) # shape=(945,)
bop_4904 = relay.mod(call_4896.astype('float32'), relay.reshape(var_4894.astype('float32'), relay.shape_of(call_4896))) # shape=(945,)
bop_4919 = relay.less_equal(call_4893.astype('bool'), relay.reshape(var_4894.astype('bool'), relay.shape_of(call_4893))) # shape=(945,)
bop_4922 = relay.less_equal(call_4896.astype('bool'), relay.reshape(var_4894.astype('bool'), relay.shape_of(call_4896))) # shape=(945,)
output = relay.Tuple([call_4881,var_4895,call_4897,const_4898,bop_4901,bop_4919,])
output2 = relay.Tuple([call_4882,var_4895,call_4899,const_4898,bop_4904,bop_4922,])
func_4939 = relay.Function([var_4894,var_4895,], output)
mod['func_4939'] = func_4939
mod = relay.transform.InferType()(mod)
mutated_mod['func_4939'] = func_4939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4939_call = mutated_mod.get_global_var('func_4939')
var_4941 = relay.var("var_4941", dtype = "uint64", shape = (945,))#candidate|4941|(945,)|var|uint64
var_4942 = relay.var("var_4942", dtype = "uint64", shape = (108, 2))#candidate|4942|(108, 2)|var|uint64
call_4940 = func_4939_call(var_4941,var_4942,)
output = call_4940
func_4943 = relay.Function([var_4941,var_4942,], output)
mutated_mod['func_4943'] = func_4943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4536_call = mod.get_global_var('func_4536')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_4947 = func_4536_call()
call_4948 = func_4536_call()
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_4955 = func_4514_call()
call_4956 = func_4514_call()
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_4957 = relay.TupleGetItem(func_4670_call(), 0)
call_4958 = relay.TupleGetItem(func_4671_call(), 0)
output = relay.Tuple([call_4947,call_4955,call_4957,])
output2 = relay.Tuple([call_4948,call_4956,call_4958,])
func_4992 = relay.Function([], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
output = func_4992()
func_4993 = relay.Function([], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_5039 = func_4459_call()
call_5040 = func_4459_call()
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
const_5067 = relay.const([[2,-1,-8,3,2,-10,6,-9,5,-9,-9,1,-1,-2,8,8,7,2,-6,3,-4,8],[-6,-4,8,7,-8,-9,-5,-5,2,-1,-5,-6,6,10,10,-2,4,7,-1,1,5,10],[10,2,-1,3,-6,8,8,-1,-3,-7,1,2,10,-3,5,6,-9,9,9,-7,-3,-6],[10,-1,4,-1,-2,7,8,7,-5,9,1,-3,2,-5,4,7,-3,-6,-4,10,-2,8],[-10,3,9,-7,-10,1,2,-8,-9,8,-3,9,-3,-3,-7,-7,7,-10,2,7,2,5],[-3,-8,-7,-4,-3,8,-3,5,4,-7,-3,-1,6,8,-5,-2,7,-1,-8,-5,-10,-1],[5,-3,9,4,-8,-7,-3,2,2,-4,-6,5,4,7,4,6,-5,10,10,-5,9,3],[-9,-9,9,-1,-10,8,-6,-7,4,-10,2,-2,6,-1,1,8,-8,-2,10,-3,8,4],[8,-4,5,-3,6,1,3,8,3,6,10,-10,9,-1,-5,-3,-4,-9,-3,-8,-8,-10],[1,6,3,-7,10,-3,1,8,-9,-10,9,2,2,8,8,-2,5,3,10,1,7,10],[10,-3,10,1,-3,-1,4,-4,7,-3,3,-2,-6,-4,-1,-1,6,-7,5,6,-3,-2],[6,3,-3,-10,2,1,7,3,2,8,-5,-4,4,-2,-9,-8,-2,10,5,2,-2,-7],[10,6,3,-10,10,3,-6,-3,-1,9,9,-9,-7,-4,-3,7,-3,5,-8,6,-1,-4],[-6,-9,7,8,-7,-2,7,-3,-9,4,-5,7,6,-3,-4,3,1,7,-1,-6,4,-1],[4,-3,-4,2,-8,5,4,-10,-5,10,-4,-6,2,1,7,-6,8,3,-6,1,6,9],[-4,-10,-1,-6,7,-2,-1,-4,-7,-1,-10,6,1,-4,-5,-1,-4,-9,1,-2,5,-7],[6,-9,4,9,4,1,-5,6,-8,3,8,-6,5,-7,-1,1,10,2,7,7,9,1],[-1,-7,2,10,10,-8,4,-9,4,4,-9,-5,10,-2,-7,6,-7,-8,1,-8,-2,9],[-4,10,-10,1,1,-6,7,1,-10,-4,9,8,10,4,4,9,-4,7,5,3,-3,8],[-8,4,7,-5,-9,-10,-2,-2,-8,6,10,-5,-1,-3,-7,2,2,-3,3,-7,4,-1],[2,3,-4,1,4,1,4,10,6,9,10,-9,2,7,-3,-2,-4,2,-4,4,-1,-3],[-10,10,-9,-4,-1,-3,-8,10,-9,-4,-5,-2,3,9,2,1,-7,8,10,-4,-6,5],[-5,5,5,-10,-10,-1,8,-9,2,-2,10,4,5,-10,-2,5,10,-5,3,-7,-6,8],[-10,4,-6,2,8,6,5,4,-3,-9,1,9,-9,-9,-9,-1,-1,-3,-1,4,5,3]], dtype = "int8")#candidate|5067|(24, 22)|const|int8
var_5068 = relay.var("var_5068", dtype = "uint8", shape = (195, 2))#candidate|5068|(195, 2)|var|uint8
call_5066 = relay.TupleGetItem(func_340_call(relay.reshape(const_5067.astype('int8'), [8, 6, 11]), relay.reshape(var_5068.astype('uint8'), [195, 2]), ), 1)
call_5069 = relay.TupleGetItem(func_343_call(relay.reshape(const_5067.astype('int8'), [8, 6, 11]), relay.reshape(var_5068.astype('uint8'), [195, 2]), ), 1)
output = relay.Tuple([call_5039,call_5066,const_5067,var_5068,])
output2 = relay.Tuple([call_5040,call_5069,const_5067,var_5068,])
func_5080 = relay.Function([var_5068,], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
var_5081 = relay.var("var_5081", dtype = "uint8", shape = (195, 2))#candidate|5081|(195, 2)|var|uint8
output = func_5080(var_5081)
func_5082 = relay.Function([var_5081], output)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_5084 = func_4459_call()
call_5085 = func_4459_call()
func_771_call = mod.get_global_var('func_771')
func_776_call = mutated_mod.get_global_var('func_776')
const_5087 = relay.const([-4.470410,7.959961,5.945304,-0.829522,-5.698274,-9.099865,3.846442,8.462541,0.191571,-8.024619,-7.815798,8.092825,8.414924,7.249317,1.551886,2.405773,7.463014,5.418695,-2.715557,5.814262,7.669479,1.338452,-0.953223,2.112388,-1.277396,3.906378,3.580185,3.882802,3.226668,7.380630,-1.228963,-0.243014,9.677664,-4.551090,-9.844099,-0.671822,4.745238,-4.879714,2.528496,2.753776,5.331978,-5.295221,3.351332,7.962576,-2.450178,0.750239,-4.073783,-7.308608,-3.282538,9.508701,-4.022059,-2.566465,9.276596,-2.909582,-6.485310,9.373543,-7.812165,-8.158169,5.426957,0.581138,6.198972,-9.575085,-8.449196,8.065134,6.805760,5.885138,3.275901,0.416377,-0.895264,9.020382,0.553089,-1.234269,-8.151701,3.363068,1.482561,4.613221,-4.158429,-4.893062,8.336068,7.402456,-5.984121,-7.791184,-3.570675,7.509022,1.080496,-8.444070,5.244324,4.553866,5.678743,9.279449,4.076411,8.788705,-9.571246,-1.252319,-5.283463,-4.534733,3.705331,-0.853553,-9.039392,-0.328155,-9.569787,-3.391757,-9.139541,0.168884,-4.039123,-1.955614,4.700405,3.112342,4.084075,6.428011,5.345056,-4.876651,7.351610,7.562424,-2.489843,4.138089,-4.891573,-5.236144,7.663348,-9.999789,-2.400958,5.181236,8.691842,7.104292,2.384576,-5.866383,-6.495178,6.018531,0.978413,8.489615,-7.325962,-7.833664,-8.779193,2.247206,-8.158137,-2.195443,-0.994405,-6.670584,-0.589700,-7.157053,9.485735,8.192116,-1.612166,5.603102,2.312905,0.170309,1.315062,-1.611679,2.068849,-4.906041,2.077521,-5.578316,-5.181138,7.620704,5.701361,-7.613667,-9.524583,-6.053139,-8.501268,-8.623255,7.747093,-2.913744,7.109428,-3.152928,-2.289284,-9.145458,8.423031,-7.506999,-1.355422,0.127207,3.350136,-3.778706,8.496422,-8.003943,-6.155936,8.155229,1.201273,-7.842462,-9.319873,8.570633,2.798976,-5.720005,-5.403527,8.515463,8.924731,-1.247399,-6.856388,-5.268725,-5.151975,-2.609574,-5.373110,-5.732696,7.255781,-3.007765,4.242459,-0.788169,-8.110284,-0.219840,9.142659,3.641988,-8.521526,-4.045875,-7.250492,-2.200410,9.054372,8.105417,-3.992797,9.064102,-2.910004,8.549809,6.507743,7.032090,-2.523733,5.774756,3.645885,-3.276872,-8.353111,-3.190885,-1.350307,7.276547,6.390179,9.841184,-4.871862,4.372870,-4.843934,8.494531,6.934494,5.303408,-7.124938,7.748027,2.960200,8.645303,-2.962218,-4.757978,-8.014299,8.432209,-0.839084,1.364545,2.638280,-8.441028,5.857829,-3.754980,-7.959024,-5.798192,-6.216147,-6.571744,-1.639821,8.270427,9.813105,0.854954,-1.758059,-0.761859,3.284614,2.524422,-9.661901,-3.503575,9.347152,-1.842149,6.793020,-9.011967,3.731537,0.511365,-8.671513,-6.730384,1.477726,2.511634,-1.470339,-7.468148,3.320676,0.670074,0.459484,9.295360,-7.014252,-9.023682,0.604862,4.719041,9.281322,-4.020541,2.160444,-9.345552,-7.954049,-8.308678,1.028165,-1.233527,4.513828,-9.422787,7.889765,0.451890,-6.111873,0.590122,2.089344,-5.030698,-6.329150,-1.614176,9.941468,-4.145063,6.789712,6.143370,9.342111,7.849263,4.874862,-5.030566,-4.630539,-5.250823,9.993713,-6.252080,-2.794833,-3.940276,8.109370,-9.808570,4.043057,-5.955891,-1.472423,7.204836,4.992924,-7.775097,-1.696779,7.518679,-1.084603,6.383324,-3.641281,-8.485206,-3.605019,6.269027,-0.789885,8.377107,-9.122773,-3.279473,4.073311,-9.941770,-0.329991,9.442200,6.866990,3.623376,-2.256290,-3.007044,-3.724327,4.828760,2.014547,-1.597314,-9.647176,2.909702,7.244494,1.409686,9.573231,0.167499,-2.996478,-4.856525,-6.169364,-4.052514,6.192709,3.320356,8.071999,-3.838089,3.841272,-3.945004,-2.876848,-6.179968,6.961076,-5.068588,2.696304,1.998794,-9.247042,-5.409354,1.100176,7.592736,6.062952,6.815760,2.632349,7.530575,-0.961171,6.251555,2.510271,3.892495,0.675250,1.530787,0.037002,6.407628,-9.012835,-4.347181,-9.456458,-8.110167,-3.572572,-1.030844,-7.542033,-9.919209,-3.259203,1.797064,5.656302,-1.538419,7.844456,-5.296453,-7.549625,-0.635003,0.601272,4.802512,2.310135,2.075229,7.757636,4.214425,6.616607,-6.274555,8.476976,5.120285,-9.423006,-3.687369,6.687976,4.468779,-8.373602,-8.824823,-6.184181,8.407880,-4.823633,-1.907936,-1.723343,4.489594,0.418004,8.746768,3.334574,-4.413749,6.395791,9.421011,5.953386,-5.617648,9.665385,0.380286,-7.175618,8.124108,9.359664,-1.291855,6.913338,4.228419,-6.405052,-2.802582,4.941646,9.305384,5.172692,1.331839,3.989280,-1.729605,-2.011665,2.731236,-4.038401,7.363453,-3.990443,8.912324,8.808045,-8.447760,-3.283107,-2.589921,7.632218,-9.659280,-2.015984,7.788929,7.094455,-4.330476,4.143559,8.213759,-5.430299,8.555065,-2.863571,7.684420,0.706115,3.331998,-9.880211,1.078564,-0.630709,-5.773724,6.121714,-1.128544,1.311441,8.206399,-7.060849,-1.567925,5.690825,7.410672,-4.283070,-0.755738,2.366942,7.974454,7.370906,5.559587,-6.883854,-0.209558,-9.107127,8.091455,-8.107481,-0.134661,8.733189,4.276007,3.647228,-2.805782,4.422802,1.125001,4.114728,-4.383556,-0.302294,-4.862786,9.355625,-3.925944,9.711889,6.005012,-4.943956,3.483219,-5.949745,5.415209,9.518356,-2.824505,-1.147833,9.129403,-8.782476,-8.334143,-0.535480,-6.383844,0.999473,9.832469,-0.757927,-0.490478,-9.754356,-6.028469,9.486843,-9.652496,6.148638,8.719750,8.308846,7.855396,6.462685,-5.349398,-1.073200,9.940605,5.634882,8.801211,-8.081051,4.418966,3.962340,6.089792,7.900692,6.524591,-4.617341,-7.096332,-9.811194,-7.436166,3.198211,9.901762,9.364649,2.305749,4.060486,-0.895808,6.333435,-5.180261,1.482355,3.240810,-3.252502,4.705081,2.097864,-0.395936,-2.986464,2.820680,8.984958,3.786689,-8.286277,8.644565,3.694792,7.206303,5.195390,0.015554,6.535620,0.802711,-2.667310,5.853511,-6.692855,2.319851,-0.453365,-7.630708,5.088822,-2.195161,1.011642,8.605597,0.954866,6.554265,-2.839664,5.562625,5.470285,8.248230,2.192386,5.135658,-1.829238,-3.046561,-3.057997,-6.330788,4.245167,3.065950,2.057827,2.523401,4.254718,4.967081,-3.113258,8.164298,-5.971006,4.745004,2.359548,8.910421,2.554829,-3.235354,9.203533,3.558969,0.780719,5.394204,3.133737,0.127235,8.376835,-2.195858,6.475511,5.198507,5.666950,-7.308589,4.455218,-4.681085,5.441095,-9.009608,-0.685774,2.425906,-0.183126,-4.410142,-2.055076,-3.635356,-6.946457,5.375151,0.106469,0.370860,1.260030,9.233470,-3.991086,5.701506,4.046719,-8.934086,9.419227,6.938262,-4.524462,7.565426,-1.951746,-9.876303,-6.489751,-4.332381,-9.402398,-5.529886,3.482917,-4.758217,-3.994681,-4.989137,-3.177979,6.893454,-2.945528,6.539152,-1.109237,8.018862,9.756925,9.344047,4.432291,2.383703,-3.770256,8.573991,3.993983,8.891610,4.819848,5.902195,-6.889934,6.594086,-1.259250,8.996683,7.230289,6.401986,-6.429222,0.023142,-8.072289,3.337202,-5.041800,5.230076,-8.054793,9.511912,-1.608957,7.791535,7.464696,2.948089,-7.123011,-9.621503,-7.344891,-7.993636,6.456375,-9.518450,-5.784218,-4.616460,4.720578,-7.587981,-5.448389,0.479102,2.245000,9.601311,-5.578979,-4.697011,2.193624,-2.330566,-2.622046,-2.327253,-7.696607,1.513198,-2.422007,-7.996666,2.734368,5.031581,-3.069041,-1.216093,-7.830408,2.413908,8.639477,1.609468,-8.220328,-8.796523,-4.343203,-9.484957,3.207750,8.232192,0.621489,4.148105,-5.864359,-4.711204,-3.788802,-4.901276,-7.028979,4.332664,0.213089,-3.451059,-6.101431,-9.492074,3.581033,-7.746310,2.667319,-6.865348,9.570161,1.215301,4.361573,-3.160641,0.901776,-2.111837,-4.170254,3.600919,-4.568695,-1.182145,-9.309639,8.704291,9.331125,-7.804474,2.671739,-1.731980,2.812676,-0.409198,5.327460,-7.600240,-0.160927,5.064767,-5.347361,-6.807043,-6.772918,7.116120,-9.999997,3.301580,-3.551248,-4.671765,-2.254735,-1.334994,-2.286581,-6.542911,-6.155967,-3.720084,3.561498,6.805910,-6.891847,-7.346016,-2.026105,5.798873,-1.861395,4.225573,3.048692,-9.034701,-3.739532,5.051188,-2.207647,-1.540738,-3.829158,1.436372,-9.739504,8.180129,-2.729268,-1.761715,3.885457,3.889186,-2.502281,9.271958,-3.743629,2.698490,-3.322849,-5.696795,6.865060,9.911397,5.529541,6.916911,-2.071792,2.373709,6.242971,7.587723,1.413656,-8.742564,6.482300,0.683137,-7.146993,-7.708385,5.365062,5.176040,-7.066153,-3.713852,8.855021,8.538098,-9.245129,-0.668790,-1.845561,3.354941,5.743474,2.195592,9.663516,-9.537351,-0.922520,-1.499198,7.478564,-4.094717,9.092501,-6.419540,-3.533180,-0.974140,-9.442997,-2.252041,-8.879419,-4.633506,-2.235184,7.092618,4.570951,5.018681,-9.360926,8.860918,9.934390,8.809041,8.830691,0.110163,-6.978958,-3.726687,-2.409892,6.329984,-7.133688,-1.034745,-9.537622,-1.042821,-8.601678,9.145358,-2.770344,-2.343110,-5.901529,-1.498252,9.197205,7.218940,6.565686,-6.498385,0.078888,-1.974050,-1.558322,-6.103202,-6.529656,-8.273458,-6.621699,-0.324339,-3.260170,-7.894809,-4.468899,-2.877394,-2.625967,1.270375,-7.060260,2.386638,-6.206136,4.095435,5.666853,2.974626,1.089329,-2.167968,2.927893,-3.647791,1.450272,-9.996135,5.000163,-1.754129,-4.585453,1.338407,7.887724,-2.330663,-3.286323,-6.798027,9.615009,-9.788819,5.277014,-1.825260,5.204849,3.147753,5.395219,-0.177295,-9.600886,-7.485519,8.679484,2.096533,3.141148,-2.302293,-0.554412,2.206865,-4.430513,-2.240521,-3.354059,-9.234287,3.283348,-2.688023,5.265867,1.855602,3.832971,-2.916412,1.138312,-1.165552,-9.686471,-5.782765,9.340884,-5.009081,3.587188,-3.697326,-8.439078,6.092341,-5.596110,-8.600535,8.224864,8.444441,-7.149416,7.108862,-6.988179,-2.280008,-1.067753,3.366614,-5.542500,0.423128,-0.854919,8.747667,-3.523318,-5.316459,-7.322694,-3.679387,-0.411929,4.952178,0.699501,-4.972400,-8.996750,-7.664397,5.029068,-7.399935,-2.314619,-4.665171,5.752065,2.205286,-6.329491,-7.570353,-3.151558,-6.936535,9.255133,6.234413,-2.268852,-3.692360,-4.043220,2.514124,-1.187562,0.916476,9.744264,8.899584,0.765648,-1.060783,-1.184836,1.077264,8.536544,5.539024,4.430410,-9.400754,-3.925321,-9.139712,3.139525,-1.267387,2.680715,-4.413456,5.871327,-8.428744,-1.894304,6.895814,8.226957,-1.239997,-4.151340,2.501854,-1.597581,-2.214586,-9.981715,-5.278988,-0.532195,3.375805,-2.643333,7.972448,2.829823,6.672026,-7.357353,-6.661820,9.818577,4.830161,-2.332479,5.945373,-8.480652,3.546711,-4.277234,-5.945753,3.490102,-4.150177,-1.763474,1.936417,8.193752,8.700975,4.283815,-5.454082,-1.213681,2.508264,-0.989575,-2.841429,-4.163372,-1.032049,7.055639,2.575148,-6.228779,-0.809956,2.271052,5.975187,-1.715394,4.760377,-1.356828,-0.077202,8.706771,-3.291649,-7.344499,-5.641461,-1.510186,2.375658,7.653059,-5.932737,6.600907,-2.363052,4.712283,2.676655,7.107218,8.841223,-2.951469,-5.630859,0.104725,-9.078975,9.607910,-6.760504,1.823386,0.039671,9.336860,-5.950217,6.757700,1.000407,-5.016321,-8.186107,0.086230,-2.636815,-3.607901,8.167412,5.944716,5.209113,-6.599815,-9.230189,-7.308300,4.205860,-7.423912,-6.798507,-4.817603,-1.432774,-7.102984,-3.013000,-7.500513,-2.113543,-5.252647,3.035509,5.132120,-3.920366,-5.536581,7.034125,6.357887,-5.592990,-4.474827,4.403501,5.560102,-4.496529,-1.250324,7.348729,8.321345,5.897793,-1.708936,7.314959,-8.622729,7.566813,-9.705295,9.958918,6.385037,7.116981,-0.678721,5.343867,-5.269006,2.364971,-3.429049,-3.086152,-6.486732,2.698663,-3.505211,-6.055496,4.001544,3.905389,-5.752343,4.561963,5.591836,-6.315261,0.925638,2.959003,4.135839,-6.964879,6.848944,5.018919,2.827776,-5.631534,7.925874,-6.951740,9.026484,-2.430117,-0.728028,3.553019,0.724500,2.314833,8.556057,-7.460575,4.435812,3.563059,0.820386,7.739065,7.047269,-9.596436,-6.256828,4.443999,4.972437,-6.161416,4.322426,2.674615,6.294642,9.404090,5.867660,2.808076,5.975118,5.302507,7.702405,5.889370,1.169528,6.513179,-7.889535,9.375510,-1.222476,3.160325,0.100306,-9.115794,9.952491,-5.124778,-4.631478,1.444828,-5.992819,-6.114958,7.955394,-2.665402,-0.013865,5.024784,2.629647,-8.718517,-2.103828,5.171990,-3.063421,-1.792842,-3.686219,-9.374408,-3.445209,-3.611548,-0.722655,-2.682955,-2.471286,-5.156355,-9.572608,3.340996,-4.433295,4.837398,1.695984,8.713309,9.210502,9.908847,-4.662767,-1.735685,7.696668,3.503386,9.892191,-0.934889,-0.925767,-4.481521,-6.467451,-5.303161,8.967247,1.714994,0.983323,-4.746461,-4.213891,-9.912015,1.794558,3.050654,4.139900,2.910824,-2.800250,-9.761759,-0.901581,7.404723,-3.465917,-6.939965,8.549720,-6.748256,-2.092787,5.611452,-8.646166,9.343975,-3.933344,-6.134884,3.326879,5.151847,3.918833,-0.809600,-7.502241,-1.165126,-6.504367,1.243327,-6.983375,-6.742157,-1.736677,2.268513,3.949995,6.566019,6.303191,3.017986,3.569622,-3.289730,-7.192318,-8.816549,-6.531729,2.850053,1.143941,1.434963,-8.184559,-2.677536,1.802175,0.609222,-7.258692,0.593527,-2.803124,-9.009177,6.581515,5.154797,-7.607275,-4.842271,-7.461305,4.893513,-0.425996,-3.725656,-9.977944,-1.500269,-1.559034,-6.032162,-5.287883,5.252919,-4.311252,-5.384160,-9.341834,8.919522,4.993915,-9.424504,6.693161,-8.488383,-4.696462,-5.014192,9.460250,-7.504646,-1.801616,0.073110,-1.367064,0.908957,-8.310598,-9.235617,5.891958,1.052937,-5.081434,1.533009,6.206312,1.138000,-4.172349,-8.107935,-0.704311,8.153551,4.574293,1.613994,5.662398,-6.727291,-3.142179,6.711145,-3.968745,6.852218,-3.103511,-4.099019,-4.798896,0.233931,7.175576,-1.358514,-8.379445,-1.051751,-4.053411,-8.003539,7.487557,-5.107619,5.933634,7.324423], dtype = "float32")#candidate|5087|(1344,)|const|float32
var_5088 = relay.var("var_5088", dtype = "uint8", shape = (390,))#candidate|5088|(390,)|var|uint8
const_5089 = relay.const([-0.691620,-4.613811,-6.503217,0.887611,8.555655,2.451488,2.572969,-6.496737,-7.137808,8.181014,-6.662940,-0.317795,-2.123735,7.414967,0.129168,-4.683385,-1.454377,0.012342,-1.479755,7.245494,-3.842657,6.029040,7.439220,5.761874,2.761184,-9.280660,2.314109,6.306834,-4.266753,2.751754,6.131110,-7.055861,-2.292702,-8.525907,-7.824470,-2.968727,-7.603506,-4.498437,-6.470535,-9.584483,8.619263,3.262288,9.477280,-8.848970,1.089523,-3.084191,-2.183910,-3.442448,-8.288557,7.697655,6.412508,5.921613,3.407844,8.157656,-6.977551,3.692123,-1.080301,-4.161747,5.476304,-1.149148,-4.647588,9.422233,6.628684,9.378398,3.447241,-9.485684,9.096740,-1.374323,1.515973,-1.333678,2.782057,9.094343,-9.575524,-7.486242,7.506909,-8.606747,6.873711,-6.059033,-9.426223,-0.646925,-4.600192,-5.924407,-1.858243,-1.358169,-1.206016,8.382606,-9.080453,-4.619425,-1.543119,0.028442,9.543887,4.111250,8.888777,1.454995,-2.838033,4.620813,-8.801378,-9.096049,8.699816,-6.118223,7.405995,5.055587,9.042404,-5.494849,-1.003270,3.251902,8.869586,-3.359598,-7.712661,-5.072393,7.977559,7.150708,3.248978,0.275252,-3.362064,0.200479,0.702843,8.889679,-9.208492,0.089349,9.174786,-7.081839,3.197974,-0.416293,-4.289800,-4.910042,-4.008621,5.401766,8.460731,-4.561201,-2.183242,7.436655,5.571185,-2.618169,-6.508294,-4.960802,-8.848241,9.849350,-0.217903,7.269769,-8.332973,-1.902438,0.054401,7.736850,-9.924867,-0.227313,5.725492,7.397652,8.155076,-6.811120,2.981750,1.722073,4.966073,8.375506,-2.468399,-2.194193,2.289892,-2.530470,-0.300273,0.778265,8.322491,4.469613,-3.014973,0.117155,8.251407,7.364924,5.964742,-8.833677,9.250779,-1.499241,0.642984,5.046421,6.634995,7.571475,7.367349,0.557698,8.887337,5.815228,9.731633,2.768708,-1.118684,3.897988,4.830911,-5.170954,5.584327,4.447647,4.067294,2.624909,-2.060338,-7.306855,-6.252970,-4.024222,-6.750038,4.546765,8.248530,-3.166804,7.468917,9.107061,-6.164680,-0.525681,-8.236277,-9.686701,-1.552696,-5.009559,-5.768511,-2.526540,-5.786555,-3.251842,-2.301472,-7.241046,-9.604741,6.249365,-1.236921,5.045680,-6.599258,1.974168,9.149408,-7.817909,4.125070,-6.562449,3.840370,-1.787555,5.625658,-1.965836,-6.200540,8.114465,-1.493059,7.297163,8.675913,7.686772,-7.735253,-4.834006,-4.339001,3.473696,-0.958412,0.984879,-4.458513,6.631251,4.440822,4.792617,6.154559,-0.409377,5.147345,-6.688570,-8.923457,-1.734674,-9.112246,-1.494388,3.571310,9.253649,4.421745,9.508026,-6.254651,-2.544153,-7.494921,-5.847955,-3.679792,5.530721,-0.774873,5.259861,2.023098,1.595913,-1.093151,-5.910821,3.127501,2.026675,1.161523,-7.193889,-9.693446,6.159581,-5.128831,-9.904937,-8.083832,-7.846987,6.552662,-9.857602,2.309576,3.137934,3.088065,4.240019,0.443432,-3.466697,7.239084,-2.205773,0.676200,-3.743844,0.475925,-0.589410,8.382136,-6.178177,-0.500974,0.864497,-1.374322,-7.943066,4.094037,-5.729340,-3.130974,3.299995,1.134129,3.749431,4.149223,-3.218893,-2.245965,-4.189689,1.762295,7.276541,8.502001,8.618922,8.903838,-0.921303,2.437408,7.108781,1.974281,8.157787,-2.795475,1.909482,5.840187,1.526214,-6.139812,4.636911,-2.324472,-5.115570,0.278132,-0.527324,1.926690,7.458009,8.070527,-7.216404,5.606949,-5.609066,7.414414,7.642307,8.638705,-4.871898,2.901664,-2.700285,-6.441857,1.926612,-6.592298,-1.667522,-8.689886,7.552134,-7.404362,-4.345573,4.292485,-9.591462,-2.411791,5.758248,-1.822705,-3.351194,4.685409,2.268717,7.277000,-8.305670,-6.721117,5.279455,-7.013890,0.292188,-2.602039,0.754020,-6.377077,-0.790889,3.236170,-9.741322,-1.628688,9.122284,8.413273,7.339134,-2.164103,3.007565,3.095398,8.358666,9.375053,-7.382338,7.254375,6.513081,8.254300,-2.447970,-7.303502,-3.612393,2.452664,-7.951541,8.900268,5.612323,6.084726,-6.598130,0.363120,5.048919,-9.501448,8.869491,6.296714,1.960675,-5.032624,4.171236,0.433636,1.364290,-2.403405,8.011362,-8.286660,3.435975,6.754337,-3.052033,7.005575,7.763919,1.263003,0.055124,-5.160483,-0.688907,0.810963,8.137406,4.876995,9.677382,-1.840886,3.351377,-2.168449,3.514042,3.217895,-9.015495,9.830422,-4.106518,-4.142254,7.701693,3.268286,-3.324405,7.154259,3.019880,-5.907818,-7.753466,0.749626,4.183363,-7.555309,-0.747564,-4.287144,1.682519,-4.348240,7.107816,7.023779,3.805002,-4.904442,8.979879,6.769791,-5.707587,-0.502399,5.062939,3.601837,7.726259,0.208465,4.067421,-3.704502,0.746552,-7.770351,-4.211275,5.189553,-6.834178,7.274137,2.317602,-8.665656,-3.894513,0.285054,6.348112,6.002626,-2.595504,-2.092343,-7.829619,-5.705715,8.592428,-1.229454,2.480127,-8.411967,4.012339,2.630766,-3.834043,9.328059,-3.574767,-8.981445,9.500946,-5.479114,-8.894104,7.819320,-3.508860,-5.575522,-7.289996,6.358505,-4.600748,-6.025580,1.802757,0.176112,1.908010,-3.609847,6.129047,1.345961,-5.307458,-6.258084,-8.631380,-4.179998,-3.314905,5.284929,8.717358,-4.591874,-1.192925,-0.432157,-1.228561,2.264625,-3.369486,-8.118518,5.279807,-5.363141,8.969712,-8.825356,-9.998362,-0.331082,-6.482575,2.642613,-4.574760,9.489019,-6.776240,-5.369723,6.261334,5.588908,-2.906207,5.801394,6.471049,9.653338,5.257795,6.650991,-4.198343,-0.950161,6.780310,7.019298,9.055293,-2.213631,-2.560650,-3.723447,-0.337297,0.368216,5.087782,-7.214198,-2.543005,-2.579058,-8.907323,2.244109,0.695846,8.296594,1.811843,1.146444,5.671625,2.970757,-2.152816,-0.855329,2.240617,5.157660,-5.218507,8.937721,-3.569266,-3.639446,4.813940,6.436254,4.378963,9.225360,0.264266,9.552359,-4.647447,-2.789095,7.075855,-5.941172,-6.692831,3.058684,5.560239,2.071606,-4.627137,-7.723645,3.769872,9.473593,-7.113870,-3.918055,8.927502,8.316787,-6.789206,-7.362895,-0.673999,-8.680758,7.633777,0.086493,-9.682286,-5.899481,8.491591,1.959297,-1.460749,8.008979,7.389504,4.212765,-1.082731,9.784665,-3.322926,-5.051321,-7.981087,-4.901605,-4.278358,-1.250167,-9.158075,-3.078585,-5.482414,1.425869,-2.737071,3.413585,-7.388086,-7.362351,5.760487,3.408200,9.654401,-0.255160,-9.906237,6.704437,6.088909,2.804722,-9.296761,9.399609,5.267892,-2.688519,4.166704,-3.072998,-7.190792,-8.136387,-5.090246,6.954390,6.612398,3.916490,-1.595263,2.855669,-0.772130,-7.976494,-0.627179,7.447044,-6.219648,9.217764,-3.465952,3.712406,-0.698140,-5.765499,6.119038,-7.340426,-9.135874,-3.838251,5.099027,-7.208765,-3.874656,-0.816041,-9.776854,2.324084,1.126366,-1.885169,-0.941976,-6.046652,-2.098598,8.143721,4.575388,-2.207011,9.958221,-3.272241,-2.914213,-5.534691,2.440235,8.901052,1.201667,-8.669716,4.919077,-1.025406,-2.672915,-0.623071,2.025937,-3.095577,-3.040897,-8.436671,0.363136,-4.539497,9.022980,8.450564,0.472396,-7.872292,4.707899,-5.720669,-7.629494,-6.820060,3.174629,9.020475,-7.947099,9.386356,-8.481558,-6.475329,1.053312,-4.558389,5.204410,7.680269,-8.092120,6.341843,3.087836,6.983461,-4.096960,-3.607420,-7.121848,9.994787,-1.728723,4.971906,-3.245116,-0.151079,-5.118327,8.938571,-6.823565,1.874721,-4.114038,-2.513466,-5.413214,9.359056,6.625495,-1.631338,1.182734,-0.148383,7.749716,6.977186,3.946476,4.522025,-4.673379,-2.911073,4.994312,5.590620,-5.366944,7.167779,4.451381,-0.341035,9.953014,7.421525,-9.230031,-7.728119,7.952014,8.740847,0.550524,4.650778,4.892963,9.400760,1.615939,1.390311,-6.250540,-5.654989,2.193051,1.723162,8.122244,-8.193027,-4.897354,9.595620,-0.062565,4.824423,2.851123,6.901546,-9.114157,-3.262570,2.930740,6.316284,-5.693379,-0.790410,-9.467369,-5.886608,-0.444298,1.166136,9.152455,-1.013525,-4.953500,-9.460250,-1.859016,-8.625390,-9.700622,-0.369831,-4.020720,0.106227,8.746842,3.497765,5.184506,-8.058506,-9.860074,5.291759,-4.281447,1.894445,2.396738,3.353755,5.439680,-0.680893,-5.280796,3.198536,-9.004744,2.235316,-9.203767,-5.002715,8.113731,8.914068,-5.166927,1.405318,8.857795,6.414206,-9.528350,-7.127024,5.124270,5.329702,-9.931727,-7.589590,-2.558515,-5.384142,-1.816956,-3.320490,3.426166,2.400895,-4.923573,7.598481,2.963420,-4.112796,3.188949,6.952998,8.528043,-2.865399,-3.350738,9.409240,-0.423050,2.913854,-1.517948,-3.954665,-5.366179,8.314266,9.319526,-0.171464,-9.362220,-1.540043,9.072344,-0.353971,0.106493,-4.867646,0.741108,-9.493946,-4.907293,5.887264,5.961545,-9.522076,9.080915,7.282290,-9.832589,-4.504966,-0.302150,-9.262071,-7.782490,5.763139,7.335541,1.487136,2.528888,5.894219,-7.493091,-5.216217,-2.956611,3.499496,-0.817619,-4.239581,-6.890870,6.621778,-0.934237,-6.220138,-3.256726,-8.629420,-3.407942,1.976685,3.626438,3.912969,5.319133,9.459606,-0.230010,2.564440,9.364712,-7.164327,-9.305054,6.076314,9.174936,-9.748777,5.427730,-0.441267,-4.978774,3.667721,-3.764786,0.407431,-5.434918,2.682836,3.958040,9.871149,0.957302,-2.856285,-9.320602,-2.068891,-1.571770,9.730968,6.148356,3.506054,7.305375,9.531830,2.239510,7.562699,3.599315,-5.969976,-4.893037,-3.973299,2.458022,5.218695,-4.338956,-4.568337,-3.594731,-3.551929,4.776026,-0.868293,-7.832242,-5.171451,-7.545269,1.057187,-1.036327,2.956439,1.171721,-1.295887,-7.166490,-5.442760,0.424753,1.480759,3.887235,5.432940,6.626262,9.800110,7.406590,8.908051,-6.078943,-7.365059,1.663501,4.336692,9.289819,6.774892,4.048261,-1.170159,-6.659066,2.110804,5.973272,-5.571616,-5.320307,-6.905381,2.600693,6.444310,-5.357625,9.532500,2.813771,-6.190972,-4.741518,7.124067,-1.318317,8.527777,7.061285,-4.724823,4.005559,-3.851702,-0.829787,-6.734849,-7.495259,1.516861,4.000673,-3.971658,3.103986,6.851377,0.088116,-7.766358,-5.992188,-1.820912,-8.881832,-7.547817,-4.481021,7.603027,0.637383,-4.460168,1.993530,-1.512581,-1.860839,-3.090032,5.368208,-1.207685,-0.133575,-1.787879,-0.184058,-2.174952,1.938757,-9.649414,3.324980,2.986078,9.805471,2.917245,0.913169,5.253933,-0.939121,-0.262245,5.308507,-0.456318,6.918131,-9.565875,-5.807312,-2.594021,0.493108,4.177809,-1.747437,6.871767,-9.176943,-2.017881,-6.594826,-2.907521,0.635975,0.884706,5.960561,-6.381161,-5.345891,-8.350071,-6.849539,2.296243,0.801213,-0.020535,2.116897,-4.291821,-2.543832,7.635961,-5.564774,-9.504384,-5.228305,1.622064,9.326865,-0.194397,-2.590159,-5.989884,1.802129,9.805356,-4.936080,-5.792572,7.995146,-0.708376,-7.639634,4.823414,2.124112,-5.855334,6.054553,3.493971,-6.454995,-7.203604,-0.346954,6.658463,-7.620913,-8.725480,-7.979847,-4.702854,4.401700,-1.518241,4.248454,7.963538,0.207327,-9.424201,8.281870,7.824172,-9.575651,-7.477797,1.893240,-3.987023,-2.743727,-8.851688,-2.205290,6.186927,6.351655,3.082729,8.036476,3.621964,-1.941958,8.826552,9.256067,6.314384,-2.354185,-6.520653,7.465021,-3.818081,-1.247017,7.691655,6.431670,-1.070378,-3.825409,3.723030,-8.443746,-7.850484,1.993549,-1.627717,-9.208951,-9.884148,-8.299301,-8.686477,0.773009,8.158424,-1.873556,-2.942950,2.259861,-1.081581,-0.296493,9.817619,2.639981,-5.536189,8.770295,6.562667,-9.866417,0.261666,8.096091,1.555671,-9.570579,-9.810186,0.901815,-9.840200,5.915113,-0.624576,0.481860,3.857068,3.282155,2.902526,-0.174570,-8.973785,-4.120308,0.192529,-1.183066,-5.617228,-4.295391,5.704404,-5.021825,-7.705833,-9.732440,7.093722,3.470245,-2.762671,-1.928273,3.769934,7.257170,-9.582006,0.473023,0.176650,-5.159558,-8.243620,-6.676286,-2.103420,-0.751951,-0.668604,9.852566,-8.864305,-8.660921,2.303394,-3.262799,-5.893141,-8.131387,6.588375,-4.931012,3.920893,-4.436227,6.054943,9.094208,1.758392,1.670684,7.738694,-7.052043,5.705613,-8.179945,1.615658,1.956374,-3.853075,-8.972643,-2.884672,-0.995594,6.066227,4.089344,1.618488,-3.814955,-5.781703,2.525187,-9.976934,1.138471,-7.652554,-1.514691,-6.852908,1.937985,-8.914774,-8.363546,2.006594,-0.638514,-7.533359,4.184788,2.024209,-9.203246,9.131080,2.794058,3.912620,6.090682,-3.246102,-1.018621,-1.644071,-1.327884,6.566444,9.773396,7.815035,-8.180217,2.773315,-5.845461,0.413846,4.638487,-2.699288,2.979158,5.774209,0.812716,-7.601584,9.719265,-3.722508,6.919838,-8.683453,-5.075265,8.418286,3.885202,-2.763158,8.738118,7.647832,4.358109,6.307443,6.565670,5.856333,-2.537337,-7.511947,-9.000196,4.328674,9.204887,-7.225526,-1.969344,-6.710962,5.410144,9.565837,-2.265303,1.339083,-3.875120,-0.374369,4.315446,-5.719997,-1.686670,7.812481,2.824919,-5.939481,8.308737,-2.369005,-0.943945,1.663671,-9.242115,-5.419243,1.227710,-7.914384,-3.350136,-2.740952,-8.855971,-9.246724,0.414375,-9.725954,-4.479482,9.128493,4.742558,9.300805,-8.805374,1.994065,8.020884,-2.685937,8.528879,-4.045392,5.424912,-6.735711,-8.642316,-0.943901,-0.639810], dtype = "float64")#candidate|5089|(1274,)|const|float64
call_5086 = relay.TupleGetItem(func_771_call(relay.reshape(const_5087.astype('float32'), [14, 12, 8]), relay.reshape(const_5087.astype('float32'), [14, 12, 8]), relay.reshape(var_5088.astype('uint8'), [390, 1]), relay.reshape(const_5089.astype('float64'), [1274,]), ), 0)
call_5090 = relay.TupleGetItem(func_776_call(relay.reshape(const_5087.astype('float32'), [14, 12, 8]), relay.reshape(const_5087.astype('float32'), [14, 12, 8]), relay.reshape(var_5088.astype('uint8'), [390, 1]), relay.reshape(const_5089.astype('float64'), [1274,]), ), 0)
output = relay.Tuple([call_5084,call_5086,const_5087,var_5088,const_5089,])
output2 = relay.Tuple([call_5085,call_5090,const_5087,var_5088,const_5089,])
func_5092 = relay.Function([var_5088,], output)
mod['func_5092'] = func_5092
mod = relay.transform.InferType()(mod)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5093 = relay.var("var_5093", dtype = "uint8", shape = (390,))#candidate|5093|(390,)|var|uint8
func_5092_call = mutated_mod.get_global_var('func_5092')
call_5094 = func_5092_call(var_5093)
output = call_5094
func_5095 = relay.Function([var_5093], output)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_5107 = relay.TupleGetItem(func_4496_call(), 0)
call_5108 = relay.TupleGetItem(func_4497_call(), 0)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_5114 = relay.TupleGetItem(func_1812_call(), 0)
call_5115 = relay.TupleGetItem(func_1814_call(), 0)
func_2504_call = mod.get_global_var('func_2504')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_5140 = relay.TupleGetItem(func_2504_call(), 1)
call_5141 = relay.TupleGetItem(func_2506_call(), 1)
output = relay.Tuple([call_5107,call_5114,call_5140,])
output2 = relay.Tuple([call_5108,call_5115,call_5141,])
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5143 = func_5142_call()
output = call_5143
func_5144 = relay.Function([], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5151 = relay.var("var_5151", dtype = "float32", shape = (15, 10, 3))#candidate|5151|(15, 10, 3)|var|float32
uop_5152 = relay.acosh(var_5151.astype('float32')) # shape=(15, 10, 3)
uop_5155 = relay.asinh(var_5151.astype('float64')) # shape=(15, 10, 3)
var_5169 = relay.var("var_5169", dtype = "float64", shape = (15, 10, 3))#candidate|5169|(15, 10, 3)|var|float64
bop_5170 = relay.greater_equal(uop_5155.astype('bool'), relay.reshape(var_5169.astype('bool'), relay.shape_of(uop_5155))) # shape=(15, 10, 3)
output = relay.Tuple([uop_5152,bop_5170,])
output2 = relay.Tuple([uop_5152,bop_5170,])
func_5174 = relay.Function([var_5151,var_5169,], output)
mod['func_5174'] = func_5174
mod = relay.transform.InferType()(mod)
var_5175 = relay.var("var_5175", dtype = "float32", shape = (15, 10, 3))#candidate|5175|(15, 10, 3)|var|float32
var_5176 = relay.var("var_5176", dtype = "float64", shape = (15, 10, 3))#candidate|5176|(15, 10, 3)|var|float64
output = func_5174(var_5175,var_5176,)
func_5177 = relay.Function([var_5175,var_5176,], output)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_5190 = func_2428_call()
call_5191 = func_2428_call()
output = relay.Tuple([call_5190,])
output2 = relay.Tuple([call_5191,])
func_5212 = relay.Function([], output)
mod['func_5212'] = func_5212
mod = relay.transform.InferType()(mod)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5212_call = mutated_mod.get_global_var('func_5212')
call_5213 = func_5212_call()
output = call_5213
func_5214 = relay.Function([], output)
mutated_mod['func_5214'] = func_5214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_5225 = relay.TupleGetItem(func_1896_call(), 1)
call_5226 = relay.TupleGetItem(func_1897_call(), 1)
output = relay.Tuple([call_5225,])
output2 = relay.Tuple([call_5226,])
func_5234 = relay.Function([], output)
mod['func_5234'] = func_5234
mod = relay.transform.InferType()(mod)
output = func_5234()
func_5235 = relay.Function([], output)
mutated_mod['func_5235'] = func_5235
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5236 = relay.var("var_5236", dtype = "uint64", shape = (10, 15, 1))#candidate|5236|(10, 15, 1)|var|uint64
var_5237 = relay.var("var_5237", dtype = "uint64", shape = (10, 15, 1))#candidate|5237|(10, 15, 1)|var|uint64
bop_5238 = relay.greater_equal(var_5236.astype('bool'), relay.reshape(var_5237.astype('bool'), relay.shape_of(var_5236))) # shape=(10, 15, 1)
output = bop_5238
output2 = bop_5238
func_5248 = relay.Function([var_5236,var_5237,], output)
mod['func_5248'] = func_5248
mod = relay.transform.InferType()(mod)
var_5249 = relay.var("var_5249", dtype = "uint64", shape = (10, 15, 1))#candidate|5249|(10, 15, 1)|var|uint64
var_5250 = relay.var("var_5250", dtype = "uint64", shape = (10, 15, 1))#candidate|5250|(10, 15, 1)|var|uint64
output = func_5248(var_5249,var_5250,)
func_5251 = relay.Function([var_5249,var_5250,], output)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5276 = relay.var("var_5276", dtype = "float64", shape = (1, 2, 9))#candidate|5276|(1, 2, 9)|var|float64
uop_5277 = relay.sinh(var_5276.astype('float64')) # shape=(1, 2, 9)
output = uop_5277
output2 = uop_5277
func_5282 = relay.Function([var_5276,], output)
mod['func_5282'] = func_5282
mod = relay.transform.InferType()(mod)
var_5283 = relay.var("var_5283", dtype = "float64", shape = (1, 2, 9))#candidate|5283|(1, 2, 9)|var|float64
output = func_5282(var_5283)
func_5284 = relay.Function([var_5283], output)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4482_call = mod.get_global_var('func_4482')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_5286 = relay.TupleGetItem(func_4482_call(), 0)
call_5287 = relay.TupleGetItem(func_4483_call(), 0)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_5288 = func_3388_call()
call_5289 = func_3388_call()
uop_5291 = relay.asinh(call_5286.astype('float32')) # shape=(8, 12, 3)
uop_5293 = relay.asinh(call_5287.astype('float32')) # shape=(8, 12, 3)
output = relay.Tuple([call_5288,uop_5291,])
output2 = relay.Tuple([call_5289,uop_5293,])
func_5294 = relay.Function([], output)
mod['func_5294'] = func_5294
mod = relay.transform.InferType()(mod)
output = func_5294()
func_5295 = relay.Function([], output)
mutated_mod['func_5295'] = func_5295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_5380 = func_4459_call()
call_5381 = func_4459_call()
output = relay.Tuple([call_5380,])
output2 = relay.Tuple([call_5381,])
func_5403 = relay.Function([], output)
mod['func_5403'] = func_5403
mod = relay.transform.InferType()(mod)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5403_call = mutated_mod.get_global_var('func_5403')
call_5404 = func_5403_call()
output = call_5404
func_5405 = relay.Function([], output)
mutated_mod['func_5405'] = func_5405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3416_call = mod.get_global_var('func_3416')
func_3418_call = mutated_mod.get_global_var('func_3418')
call_5408 = relay.TupleGetItem(func_3416_call(), 0)
call_5409 = relay.TupleGetItem(func_3418_call(), 0)
output = relay.Tuple([call_5408,])
output2 = relay.Tuple([call_5409,])
func_5412 = relay.Function([], output)
mod['func_5412'] = func_5412
mod = relay.transform.InferType()(mod)
mutated_mod['func_5412'] = func_5412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mutated_mod.get_global_var('func_5412')
call_5413 = func_5412_call()
output = call_5413
func_5414 = relay.Function([], output)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_5451 = relay.TupleGetItem(func_3515_call(), 1)
call_5452 = relay.TupleGetItem(func_3517_call(), 1)
const_5456 = relay.const([[[True,True,False],[False,False,True],[False,False,False],[True,True,True],[True,False,True],[False,True,False],[False,True,True],[False,True,True],[True,False,True],[False,True,False],[False,False,False],[False,False,False]],[[True,False,False],[False,True,False],[True,False,False],[False,True,True],[False,True,False],[True,False,False],[False,True,False],[True,True,True],[False,True,True],[False,True,True],[False,True,True],[False,True,True]],[[False,False,True],[True,False,False],[False,False,False],[True,True,False],[True,True,True],[True,True,True],[False,True,False],[True,True,False],[False,True,True],[True,True,False],[False,False,False],[False,True,False]],[[False,True,False],[False,False,True],[False,True,False],[False,False,True],[True,False,False],[True,True,True],[True,True,False],[False,True,False],[False,True,False],[False,True,True],[False,False,False],[False,False,True]],[[True,True,False],[False,True,True],[True,False,True],[False,True,True],[True,True,False],[False,True,True],[False,False,True],[False,False,False],[True,True,False],[True,True,True],[False,True,False],[True,True,True]],[[False,False,True],[True,False,False],[False,False,True],[True,False,True],[False,False,True],[True,False,True],[False,True,False],[False,False,False],[True,True,True],[True,False,False],[False,False,False],[True,True,True]],[[False,False,True],[True,True,True],[False,True,True],[True,True,True],[True,True,False],[True,True,False],[True,True,True],[False,False,True],[False,True,True],[True,False,True],[False,False,True],[True,False,False]],[[False,False,True],[True,False,False],[False,True,True],[False,False,True],[False,False,False],[False,False,False],[True,True,True],[True,False,False],[False,False,False],[True,True,False],[True,True,True],[False,False,True]]], dtype = "bool")#candidate|5456|(8, 12, 3)|const|bool
bop_5457 = relay.minimum(call_5451.astype('int32'), relay.reshape(const_5456.astype('int32'), relay.shape_of(call_5451))) # shape=(8, 12, 3)
bop_5460 = relay.minimum(call_5452.astype('int32'), relay.reshape(const_5456.astype('int32'), relay.shape_of(call_5452))) # shape=(8, 12, 3)
func_3901_call = mod.get_global_var('func_3901')
func_3904_call = mutated_mod.get_global_var('func_3904')
const_5476 = relay.const([4,-1,3,7,10,-7,-6,4,10,9,-6,8,5,-4,-8,-6,6,-7,-5,-8,-4,7,-7,-7,6,3,-10,1,-2,-2,-3,-5,6,-9,-8,5,4,-5,4,6,-9,3,9,7,-2,-4,-9,-5,2,-5,2,6,1,-5,-3,-6,-1,4,-6,3,-9,-2,-7,5,-10,-2,10,8,-9,-10,-5,5,-7,8,-1,1,10,-10,2,-8,6,7,-10,-1,8,-3,8,-9,-8,-10,7,-9,-7,-8,4,3,8,6,-5,-10,8,7,9,3,-2,6,-6,-8,6,4,-4,10,9,1,-4,-8,-4,10,-1,-3,-8,2,-6,9,-8,5,-1,5,2,-5,-9,-1,-10,-6,-6,1,10,9,8,9,10,10,-9,-3,-3,1,3,-4,-3,-3,-9,-2,-2,4,-9,-7,-9,2,4,-10,8,-8,3,6,-10,6,5,-8,-1,6,7,10,-2,5,10,2,9,8,2,10,3,3,6,-5,-6,-8,4,-1,10,2,-5,9,4,8,3,10,-3,-6,-4,7,-1,5,5,-2,5,-7,10,-4,5,-2,9,-6,5,-5,-10,1], dtype = "uint64")#candidate|5476|(216,)|const|uint64
call_5475 = relay.TupleGetItem(func_3901_call(relay.reshape(const_5476.astype('uint64'), [216,])), 6)
call_5477 = relay.TupleGetItem(func_3904_call(relay.reshape(const_5476.astype('uint64'), [216,])), 6)
output = relay.Tuple([bop_5457,call_5475,const_5476,])
output2 = relay.Tuple([bop_5460,call_5477,const_5476,])
func_5483 = relay.Function([], output)
mod['func_5483'] = func_5483
mod = relay.transform.InferType()(mod)
output = func_5483()
func_5484 = relay.Function([], output)
mutated_mod['func_5484'] = func_5484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_5496 = func_4459_call()
call_5497 = func_4459_call()
output = relay.Tuple([call_5496,])
output2 = relay.Tuple([call_5497,])
func_5507 = relay.Function([], output)
mod['func_5507'] = func_5507
mod = relay.transform.InferType()(mod)
output = func_5507()
func_5508 = relay.Function([], output)
mutated_mod['func_5508'] = func_5508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_5608 = relay.TupleGetItem(func_5142_call(), 0)
call_5609 = relay.TupleGetItem(func_5144_call(), 0)
output = call_5608
output2 = call_5609
func_5610 = relay.Function([], output)
mod['func_5610'] = func_5610
mod = relay.transform.InferType()(mod)
output = func_5610()
func_5611 = relay.Function([], output)
mutated_mod['func_5611'] = func_5611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_5705 = func_3388_call()
call_5706 = func_3388_call()
output = relay.Tuple([call_5705,])
output2 = relay.Tuple([call_5706,])
func_5709 = relay.Function([], output)
mod['func_5709'] = func_5709
mod = relay.transform.InferType()(mod)
output = func_5709()
func_5710 = relay.Function([], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5730 = relay.var("var_5730", dtype = "float64", shape = ())#candidate|5730|()|var|float64
var_5731 = relay.var("var_5731", dtype = "float64", shape = (9, 8, 9))#candidate|5731|(9, 8, 9)|var|float64
bop_5732 = relay.mod(var_5730.astype('float64'), var_5731.astype('float64')) # shape=(9, 8, 9)
output = bop_5732
output2 = bop_5732
func_5735 = relay.Function([var_5730,var_5731,], output)
mod['func_5735'] = func_5735
mod = relay.transform.InferType()(mod)
var_5736 = relay.var("var_5736", dtype = "float64", shape = ())#candidate|5736|()|var|float64
var_5737 = relay.var("var_5737", dtype = "float64", shape = (9, 8, 9))#candidate|5737|(9, 8, 9)|var|float64
output = func_5735(var_5736,var_5737,)
func_5738 = relay.Function([var_5736,var_5737,], output)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_5797 = relay.TupleGetItem(func_5412_call(), 0)
call_5798 = relay.TupleGetItem(func_5414_call(), 0)
func_3253_call = mod.get_global_var('func_3253')
func_3254_call = mutated_mod.get_global_var('func_3254')
call_5834 = func_3253_call()
call_5835 = func_3253_call()
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_5846 = func_4514_call()
call_5847 = func_4514_call()
output = relay.Tuple([call_5797,call_5834,call_5846,])
output2 = relay.Tuple([call_5798,call_5835,call_5847,])
func_5850 = relay.Function([], output)
mod['func_5850'] = func_5850
mod = relay.transform.InferType()(mod)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5850_call = mutated_mod.get_global_var('func_5850')
call_5851 = func_5850_call()
output = call_5851
func_5852 = relay.Function([], output)
mutated_mod['func_5852'] = func_5852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_5957 = relay.TupleGetItem(func_2686_call(), 1)
call_5958 = relay.TupleGetItem(func_2688_call(), 1)
output = call_5957
output2 = call_5958
func_5983 = relay.Function([], output)
mod['func_5983'] = func_5983
mod = relay.transform.InferType()(mod)
output = func_5983()
func_5984 = relay.Function([], output)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_6039 = relay.TupleGetItem(func_2518_call(), 1)
call_6040 = relay.TupleGetItem(func_2520_call(), 1)
var_6062 = relay.var("var_6062", dtype = "float64", shape = (13, 7, 14))#candidate|6062|(13, 7, 14)|var|float64
bop_6063 = relay.logical_xor(call_6039.astype('int32'), relay.reshape(var_6062.astype('int32'), relay.shape_of(call_6039))) # shape=(13, 7, 14)
bop_6066 = relay.logical_xor(call_6040.astype('int32'), relay.reshape(var_6062.astype('int32'), relay.shape_of(call_6040))) # shape=(13, 7, 14)
output = relay.Tuple([bop_6063,])
output2 = relay.Tuple([bop_6066,])
func_6080 = relay.Function([var_6062,], output)
mod['func_6080'] = func_6080
mod = relay.transform.InferType()(mod)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6081 = relay.var("var_6081", dtype = "float64", shape = (13, 7, 14))#candidate|6081|(13, 7, 14)|var|float64
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6082 = func_6080_call(var_6081)
output = call_6082
func_6083 = relay.Function([var_6081], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_6116 = relay.TupleGetItem(func_5709_call(), 0)
call_6117 = relay.TupleGetItem(func_5710_call(), 0)
output = relay.Tuple([call_6116,])
output2 = relay.Tuple([call_6117,])
func_6122 = relay.Function([], output)
mod['func_6122'] = func_6122
mod = relay.transform.InferType()(mod)
mutated_mod['func_6122'] = func_6122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6122_call = mutated_mod.get_global_var('func_6122')
call_6123 = func_6122_call()
output = call_6123
func_6124 = relay.Function([], output)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5610_call = mod.get_global_var('func_5610')
func_5611_call = mutated_mod.get_global_var('func_5611')
call_6202 = func_5610_call()
call_6203 = func_5610_call()
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
const_6221 = relay.const([4,-3,-3,-3,-5,-2,-7,-2,6,-6,-4,3,-7,7,1,4,-9,-6,-9,7,2,-7,-2,-1,-3,-5,1,10,-2,7,-7,7,-10,-8,4,3,5,-2,8,-5,10,7,-7,1,-8,-3,1,-2,-6,10,-6,-3,2,7,-1,-3,2,4,9,-1,6,-3,-7,-6,5,-3,10,9,-3,3,9,-7,-8,-2,-8,5,10,-1,-2,8,-4,6,6,7,2,-5,6,3,5,-2,-2,-9,4,7,-6,1,7,5,3,-5,9,-7,2,-2,7,1,10,2,-7,-10,-6,-4,-10,-4,-8,9,9,-6,-8,-7,10,-4,6,-6,5,-8,7,-3,9,-2,-8,-6,-7,-5,1,-9,10,3,1,8,5,8,8,-1,-9,-7,3,2,-6,-4,1,-9,-9,6,4,-6,2,3,5,10,-8,-1,-10,9,-1,4,8,-4,8,5,-4,2,-8,7,-2,7,1,9,2,9,2,-7,9,-7,1,-10,4,-2,-1,-6,-5,-3,3,-10,-1,-10,2,-5,-1,9,-6,-7,-3,5,-8,-8,-5,1,-2,-5,-10,10,-4,-5,9,7,3,6,-2,1,-1,5,8,6,-7,-7,-7,2,-3,-8,-1,6,10,-9,4,-6,-6,2,7,8,-8,4,1,1,-3,6,8,7,5,-2,-3,-3,1,7,-3,3,-9,9,5,5,10,1,3,-6,1,7,-8,6,-8,-7,-9,4,-9,9,-4,-1,4,-2,1,7,-8,7,9,-7,-8,9,7,7,-6,-2,-1,-5,-9,3,-7,-2,-5,2,4,-10,-4,-2,-10,-8,5,9,7,10,2,-3,-4,-5,4,2,7,-10,10,-3,-1,9,3,2,5,-3,7,-8,-1,-9,-10,-10,-4,-9,4,-7,3,3,-5,5,6,6,5,4,7,-8,-4,-6,-3,-3,5,4,-5,5,1,-9,-1,2,-9,2,10,4,10,-2,-3,10,2,-7,10,-6,-3,9,10,-9,-8,6,1,-1,2,-4,10,-4,-9,-9,4,-9,10,10,-1,-2,10,-8,10,1,-5,-6,10,-7,-10,7,4,8,6,-6,6,8,6,6,7,7,-2,-9,10,1,-2,1,-4,2,10,9,-5,-2,4,8,-7,3,5,-2,-8,4,-3,8,5,-9,9,1,-6,-7,-4,2,-10,-1,-9,-10,7,-8,9,8,-5,9,7,-8,-6,5,-1,-9,6,-6,2,1,-7,8,5,2,-2,-4,2,2,-8,-5,-8,10,4,-8,-9,6,7,6,9,-4,8,10,1,-9,2,9,-10,-1,-4,-3,-7,-3,-2,-8,6,3,-9,7,6,-2,9,8,10,-6,-10,9,5,-4,2,9,4,-3,7,-5,-3,-3,6,-2,3,-3,6,-2,6,9,8,6,-1,4,-9,1], dtype = "int8")#candidate|6221|(528,)|const|int8
var_6222 = relay.var("var_6222", dtype = "uint8", shape = (390,))#candidate|6222|(390,)|var|uint8
call_6220 = relay.TupleGetItem(func_340_call(relay.reshape(const_6221.astype('int8'), [8, 6, 11]), relay.reshape(var_6222.astype('uint8'), [195, 2]), ), 1)
call_6223 = relay.TupleGetItem(func_343_call(relay.reshape(const_6221.astype('int8'), [8, 6, 11]), relay.reshape(var_6222.astype('uint8'), [195, 2]), ), 1)
output = relay.Tuple([call_6202,call_6220,const_6221,var_6222,])
output2 = relay.Tuple([call_6203,call_6223,const_6221,var_6222,])
func_6236 = relay.Function([var_6222,], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
mutated_mod['func_6236'] = func_6236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6237 = relay.var("var_6237", dtype = "uint8", shape = (390,))#candidate|6237|(390,)|var|uint8
func_6236_call = mutated_mod.get_global_var('func_6236')
call_6238 = func_6236_call(var_6237)
output = call_6238
func_6239 = relay.Function([var_6237], output)
mutated_mod['func_6239'] = func_6239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_6392 = relay.TupleGetItem(func_3515_call(), 1)
call_6393 = relay.TupleGetItem(func_3517_call(), 1)
func_5248_call = mod.get_global_var('func_5248')
func_5251_call = mutated_mod.get_global_var('func_5251')
const_6415 = relay.const([-6,-9,9,-4,-1,-7,2,1,7,-2,-3,-6,-9,-7,2,9,-4,-3,-4,1,-3,-6,-4,-4,2,-2,8,7,10,10,-7,-2,-9,3,1,-1,-4,1,3,-7,-3,3,8,9,-1,2,7,-8,-8,-2,-4,-3,-9,4,-10,-8,-1,-4,-10,-9,-1,-8,2,7,-6,8,1,8,-6,1,-3,-8,-9,-3,5,-1,-10,7,6,5,2,-1,7,-10,-10,-8,9,7,-10,8,-2,-2,-7,-8,2,4,-7,6,2,6,8,-7,3,8,6,-9,-4,-5,-9,-5,-8,-4,3,10,7,-7,1,-5,-10,8,-8,6,-7,4,-4,6,9,7,-9,5,-3,4,-8,10,1,-2,6,-10,9,-10,4,-4,-3,2,8,-1,-2,6,-1,8], dtype = "uint64")#candidate|6415|(150,)|const|uint64
call_6414 = func_5248_call(relay.reshape(const_6415.astype('uint64'), [10, 15, 1]), relay.reshape(const_6415.astype('uint64'), [10, 15, 1]), )
call_6416 = func_5248_call(relay.reshape(const_6415.astype('uint64'), [10, 15, 1]), relay.reshape(const_6415.astype('uint64'), [10, 15, 1]), )
output = relay.Tuple([call_6392,call_6414,const_6415,])
output2 = relay.Tuple([call_6393,call_6416,const_6415,])
func_6424 = relay.Function([], output)
mod['func_6424'] = func_6424
mod = relay.transform.InferType()(mod)
output = func_6424()
func_6425 = relay.Function([], output)
mutated_mod['func_6425'] = func_6425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5483_call = mod.get_global_var('func_5483')
func_5484_call = mutated_mod.get_global_var('func_5484')
call_6482 = relay.TupleGetItem(func_5483_call(), 0)
call_6483 = relay.TupleGetItem(func_5484_call(), 0)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_6492 = relay.TupleGetItem(func_4496_call(), 0)
call_6493 = relay.TupleGetItem(func_4497_call(), 0)
output = relay.Tuple([call_6482,call_6492,])
output2 = relay.Tuple([call_6483,call_6493,])
func_6502 = relay.Function([], output)
mod['func_6502'] = func_6502
mod = relay.transform.InferType()(mod)
mutated_mod['func_6502'] = func_6502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mutated_mod.get_global_var('func_6502')
call_6503 = func_6502_call()
output = call_6503
func_6504 = relay.Function([], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_6510 = relay.TupleGetItem(func_5142_call(), 2)
call_6511 = relay.TupleGetItem(func_5144_call(), 2)
const_6514 = relay.const([[[5.171795,5.370247,-4.119544],[2.883691,-9.082604,-0.382982],[-7.954075,3.957103,9.054727],[5.555782,-2.949356,7.505142],[-8.801658,8.429801,7.390071],[-0.847111,1.664058,-6.928403],[1.309000,2.053285,-8.124146],[2.912910,-1.407039,-7.111211],[-6.415858,-5.472123,-0.462454],[5.880147,5.816505,-4.875556],[3.395060,4.908156,-6.507986],[7.469640,-4.909825,7.024049]],[[-7.199864,4.542622,-4.373996],[2.285983,8.777686,6.435654],[9.907986,-5.894991,0.041020],[-7.872875,-2.817313,-0.511840],[2.372282,-9.533658,-6.684513],[6.582843,-7.954623,-0.512462],[-0.149343,4.136245,2.651394],[2.471346,7.575115,4.150012],[-1.871142,-5.358655,2.291276],[-4.528719,-2.742000,-8.671111],[-4.867544,2.803603,-6.705461],[9.145111,0.445058,3.214742]],[[4.433926,-0.418231,-3.904680],[-2.296457,5.626848,7.571402],[3.806616,2.200176,-6.965220],[-1.497797,1.611407,9.658826],[2.354783,3.643022,5.446429],[6.154480,5.608983,-9.822166],[8.577646,3.133328,2.495662],[-5.874773,-5.670866,-3.486570],[4.914302,9.879168,-4.037438],[6.701570,-4.558710,1.995952],[5.625576,-7.103360,-8.018348],[-0.027222,1.933669,-3.175117]],[[7.239182,7.929654,-2.696136],[-9.343874,9.890826,9.293031],[5.927040,3.319931,0.731090],[3.278898,-1.161793,0.372349],[-0.274733,-7.612340,8.085155],[-9.556042,4.487474,-9.121646],[4.720960,-8.809481,8.701880],[5.822198,-2.535494,-7.501777],[1.585574,-9.503887,0.192314],[-6.124714,4.955996,-0.062052],[8.489665,4.564703,-9.673909],[-7.946692,9.197585,-0.475906]],[[-7.212063,0.418322,5.996882],[-1.014731,7.820095,-6.498431],[7.972552,8.640223,1.701716],[0.173287,-6.258277,-7.501000],[4.366809,1.529952,9.893771],[7.725742,2.519999,-4.661059],[-0.291688,9.274216,1.145250],[-2.523714,-2.326874,9.005784],[6.636880,-7.895920,-4.295174],[3.767032,2.944751,-8.099650],[-2.080170,5.998540,-4.399614],[-2.418548,-9.724584,-9.600260]],[[8.244654,-5.733467,-4.149135],[-5.165429,6.947736,-9.163035],[5.083226,8.292465,-5.548319],[9.132753,6.539143,-5.535002],[-2.991169,-1.534111,-5.439073],[-8.474587,2.353237,5.386949],[-2.431521,-7.127847,-5.557951],[8.385061,-0.218275,-8.224441],[-5.763807,3.268714,-3.704989],[8.320625,6.712186,-0.179773],[9.667921,1.997988,4.971034],[-6.379161,-7.474610,0.953539]],[[0.472159,-9.176239,6.230749],[-9.577066,-4.931541,0.408456],[9.485976,6.533742,-6.858611],[-9.410091,-2.570958,8.111749],[-8.751716,-3.859696,-9.875488],[0.504734,-7.818744,7.146341],[7.313410,-1.013007,5.909745],[-5.707576,-2.460910,5.046805],[0.330258,-1.683916,-9.258244],[-2.394973,-1.269200,7.326906],[-6.451140,-5.560912,9.311565],[5.925474,-6.170206,-6.436533]],[[7.563781,-6.909017,6.595078],[0.747132,-2.016999,-1.647242],[6.997796,0.970917,4.125043],[-0.442264,-8.117803,4.015058],[-8.953939,-8.826037,-4.492359],[-3.752764,4.377860,5.765316],[4.822585,-3.988124,0.155356],[-9.142448,6.820294,-8.185601],[-8.276022,-9.479334,9.754553],[-7.178896,-8.702422,-4.993809],[-2.252140,5.924436,-6.446764],[-0.721504,3.766143,4.083422]]], dtype = "float64")#candidate|6514|(8, 12, 3)|const|float64
bop_6515 = relay.mod(call_6510.astype('float32'), relay.reshape(const_6514.astype('float32'), relay.shape_of(call_6510))) # shape=(8, 12, 3)
bop_6518 = relay.mod(call_6511.astype('float32'), relay.reshape(const_6514.astype('float32'), relay.shape_of(call_6511))) # shape=(8, 12, 3)
func_4303_call = mod.get_global_var('func_4303')
func_4305_call = mutated_mod.get_global_var('func_4305')
var_6523 = relay.var("var_6523", dtype = "int16", shape = (1078,))#candidate|6523|(1078,)|var|int16
call_6522 = relay.TupleGetItem(func_4303_call(relay.reshape(var_6523.astype('int16'), [1, 1078])), 0)
call_6524 = relay.TupleGetItem(func_4305_call(relay.reshape(var_6523.astype('int16'), [1, 1078])), 0)
output = relay.Tuple([bop_6515,call_6522,var_6523,])
output2 = relay.Tuple([bop_6518,call_6524,var_6523,])
func_6527 = relay.Function([var_6523,], output)
mod['func_6527'] = func_6527
mod = relay.transform.InferType()(mod)
var_6528 = relay.var("var_6528", dtype = "int16", shape = (1078,))#candidate|6528|(1078,)|var|int16
output = func_6527(var_6528)
func_6529 = relay.Function([var_6528], output)
mutated_mod['func_6529'] = func_6529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5234_call = mod.get_global_var('func_5234')
func_5235_call = mutated_mod.get_global_var('func_5235')
call_6537 = relay.TupleGetItem(func_5234_call(), 0)
call_6538 = relay.TupleGetItem(func_5235_call(), 0)
func_5412_call = mod.get_global_var('func_5412')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_6539 = relay.TupleGetItem(func_5412_call(), 0)
call_6540 = relay.TupleGetItem(func_5414_call(), 0)
output = relay.Tuple([call_6537,call_6539,])
output2 = relay.Tuple([call_6538,call_6540,])
func_6542 = relay.Function([], output)
mod['func_6542'] = func_6542
mod = relay.transform.InferType()(mod)
mutated_mod['func_6542'] = func_6542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6542_call = mutated_mod.get_global_var('func_6542')
call_6543 = func_6542_call()
output = call_6543
func_6544 = relay.Function([], output)
mutated_mod['func_6544'] = func_6544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_6594 = func_4459_call()
call_6595 = func_4459_call()
output = call_6594
output2 = call_6595
func_6605 = relay.Function([], output)
mod['func_6605'] = func_6605
mod = relay.transform.InferType()(mod)
mutated_mod['func_6605'] = func_6605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6605_call = mutated_mod.get_global_var('func_6605')
call_6606 = func_6605_call()
output = call_6606
func_6607 = relay.Function([], output)
mutated_mod['func_6607'] = func_6607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_6762 = relay.TupleGetItem(func_4496_call(), 0)
call_6763 = relay.TupleGetItem(func_4497_call(), 0)
func_5212_call = mod.get_global_var('func_5212')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_6781 = relay.TupleGetItem(func_5212_call(), 0)
call_6782 = relay.TupleGetItem(func_5214_call(), 0)
output = relay.Tuple([call_6762,call_6781,])
output2 = relay.Tuple([call_6763,call_6782,])
func_6785 = relay.Function([], output)
mod['func_6785'] = func_6785
mod = relay.transform.InferType()(mod)
output = func_6785()
func_6786 = relay.Function([], output)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5610_call = mod.get_global_var('func_5610')
func_5611_call = mutated_mod.get_global_var('func_5611')
call_6851 = func_5610_call()
call_6852 = func_5610_call()
output = relay.Tuple([call_6851,])
output2 = relay.Tuple([call_6852,])
func_6853 = relay.Function([], output)
mod['func_6853'] = func_6853
mod = relay.transform.InferType()(mod)
output = func_6853()
func_6854 = relay.Function([], output)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5234_call = mod.get_global_var('func_5234')
func_5235_call = mutated_mod.get_global_var('func_5235')
call_6948 = relay.TupleGetItem(func_5234_call(), 0)
call_6949 = relay.TupleGetItem(func_5235_call(), 0)
output = relay.Tuple([call_6948,])
output2 = relay.Tuple([call_6949,])
func_6952 = relay.Function([], output)
mod['func_6952'] = func_6952
mod = relay.transform.InferType()(mod)
mutated_mod['func_6952'] = func_6952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6952_call = mutated_mod.get_global_var('func_6952')
call_6953 = func_6952_call()
output = call_6953
func_6954 = relay.Function([], output)
mutated_mod['func_6954'] = func_6954
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6969 = relay.var("var_6969", dtype = "float32", shape = (10, 16, 2))#candidate|6969|(10, 16, 2)|var|float32
uop_6970 = relay.log(var_6969.astype('float32')) # shape=(10, 16, 2)
output = relay.Tuple([uop_6970,])
output2 = relay.Tuple([uop_6970,])
func_6986 = relay.Function([var_6969,], output)
mod['func_6986'] = func_6986
mod = relay.transform.InferType()(mod)
var_6987 = relay.var("var_6987", dtype = "float32", shape = (10, 16, 2))#candidate|6987|(10, 16, 2)|var|float32
output = func_6986(var_6987)
func_6988 = relay.Function([var_6987], output)
mutated_mod['func_6988'] = func_6988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_7014 = relay.TupleGetItem(func_4496_call(), 0)
call_7015 = relay.TupleGetItem(func_4497_call(), 0)
output = call_7014
output2 = call_7015
func_7021 = relay.Function([], output)
mod['func_7021'] = func_7021
mod = relay.transform.InferType()(mod)
output = func_7021()
func_7022 = relay.Function([], output)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5507_call = mod.get_global_var('func_5507')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_7103 = relay.TupleGetItem(func_5507_call(), 0)
call_7104 = relay.TupleGetItem(func_5508_call(), 0)
output = relay.Tuple([call_7103,])
output2 = relay.Tuple([call_7104,])
func_7136 = relay.Function([], output)
mod['func_7136'] = func_7136
mod = relay.transform.InferType()(mod)
output = func_7136()
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
call_7138 = relay.TupleGetItem(func_4686_call(), 0)
call_7139 = relay.TupleGetItem(func_4688_call(), 0)
func_4269_call = mod.get_global_var('func_4269')
func_4272_call = mutated_mod.get_global_var('func_4272')
const_7148 = relay.const([-5.102602,-4.096487,0.514341,-1.186784,4.855516,4.130217,2.822698,7.071592,7.890132,5.987198,-2.342561,-6.028236,-2.340301,-0.719493,1.201798,-5.569099,5.847960,7.555337,-7.840562,-5.573315,-6.717013,7.735213,-1.181667,6.392292,-6.336660,9.718539,-1.818588,8.160400,0.799061,-7.330691,8.706619,-3.497075,1.007251,-1.234905,-1.742825,6.048506,-9.269031,-0.229025,-8.348826,-4.508291,0.213473,5.344044,0.355019,-1.821886,-8.167106,5.495438,8.113919,-1.566297], dtype = "float32")#candidate|7148|(48,)|const|float32
const_7149 = relay.const([[9.558650,-4.157429,-4.234883,2.640036,7.750479,9.774311,-2.255661,0.361444],[1.698203,5.149876,-9.263193,5.409408,8.715516,4.822987,-5.773888,8.408437],[-3.605856,2.189191,-5.832081,2.650223,0.144840,-1.573810,-9.436056,-4.542414],[2.093363,-0.209682,-4.707193,9.188053,8.595326,2.895958,3.240855,8.020228],[5.674749,0.512569,7.803306,9.541639,2.985885,-2.914825,-1.372009,3.364325],[-6.622433,6.634850,7.964051,-7.453295,0.379804,-7.011794,-4.277018,-0.112450],[8.781164,-8.166789,-0.047117,6.898921,8.058332,6.079378,3.966253,-2.412348],[8.757534,-2.957150,-3.925538,5.143824,7.094693,-6.377073,0.440880,0.417641],[-6.954733,2.991851,2.944970,-0.115273,-2.146991,-6.346887,4.703364,6.464136],[-1.969542,3.787840,-9.762336,-7.689438,3.962365,8.489133,8.128482,4.336545],[-6.057004,8.142368,2.347375,5.549025,6.693035,9.775274,-5.216762,9.050600],[1.149427,6.319528,5.503071,1.929238,-9.525147,8.239791,3.651131,-7.612129],[0.093064,3.126797,8.890521,-3.847083,9.085161,1.696165,-2.271263,-2.449254],[-7.096351,0.361564,-5.585778,-2.311965,-7.878173,-6.644568,-1.567401,3.113324],[-3.394745,-4.274729,9.440775,5.157602,2.199967,-8.772608,6.318711,4.713580],[-8.853126,-8.237437,0.662725,-4.913697,-8.505870,7.210887,3.090579,7.400120],[2.108736,3.833055,-5.728057,7.913898,-4.093139,-0.199428,7.338321,0.821202],[-0.152066,-9.753569,-4.943768,0.030254,5.863838,8.422261,-7.928918,0.969784],[-9.120146,-6.940503,9.833995,-6.029327,-3.839201,1.343884,-0.611482,3.432345],[-9.226784,-7.408412,-6.786766,-4.503281,-8.664766,-9.421194,-5.609340,6.297370],[3.812966,3.477932,5.768600,-8.177587,-6.206711,4.011300,-5.637111,-2.394912],[-6.933856,3.962969,-7.884346,9.320380,3.366794,1.718435,7.501081,-4.017679],[6.256777,1.923059,-3.128614,-2.003944,4.102810,9.138250,-2.949978,9.236766],[9.616014,-4.716953,-1.062116,-5.322970,9.421047,9.074890,-4.328373,6.481262]], dtype = "float64")#candidate|7149|(24, 8)|const|float64
call_7147 = relay.TupleGetItem(func_4269_call(relay.reshape(const_7148.astype('float32'), [1, 8, 6]), relay.reshape(const_7149.astype('float64'), [4, 8, 6]), ), 1)
call_7150 = relay.TupleGetItem(func_4272_call(relay.reshape(const_7148.astype('float32'), [1, 8, 6]), relay.reshape(const_7149.astype('float64'), [4, 8, 6]), ), 1)
output = relay.Tuple([call_7138,call_7147,const_7148,const_7149,])
output2 = relay.Tuple([call_7139,call_7150,const_7148,const_7149,])
func_7157 = relay.Function([], output)
mod['func_7157'] = func_7157
mod = relay.transform.InferType()(mod)
output = func_7157()
func_7158 = relay.Function([], output)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mod.get_global_var('func_4992')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_7292 = relay.TupleGetItem(func_4992_call(), 1)
call_7293 = relay.TupleGetItem(func_4993_call(), 1)
output = call_7292
output2 = call_7293
func_7294 = relay.Function([], output)
mod['func_7294'] = func_7294
mod = relay.transform.InferType()(mod)
output = func_7294()
func_7295 = relay.Function([], output)
mutated_mod['func_7295'] = func_7295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5294_call = mod.get_global_var('func_5294')
func_5295_call = mutated_mod.get_global_var('func_5295')
call_7328 = relay.TupleGetItem(func_5294_call(), 1)
call_7329 = relay.TupleGetItem(func_5295_call(), 1)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_7339 = func_3388_call()
call_7340 = func_3388_call()
output = relay.Tuple([call_7328,call_7339,])
output2 = relay.Tuple([call_7329,call_7340,])
func_7344 = relay.Function([], output)
mod['func_7344'] = func_7344
mod = relay.transform.InferType()(mod)
output = func_7344()
func_7345 = relay.Function([], output)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_7369 = relay.TupleGetItem(func_4068_call(), 0)
call_7370 = relay.TupleGetItem(func_4070_call(), 0)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_7381 = relay.TupleGetItem(func_6502_call(), 0)
call_7382 = relay.TupleGetItem(func_6504_call(), 0)
output = relay.Tuple([call_7369,call_7381,])
output2 = relay.Tuple([call_7370,call_7382,])
func_7383 = relay.Function([], output)
mod['func_7383'] = func_7383
mod = relay.transform.InferType()(mod)
mutated_mod['func_7383'] = func_7383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7383_call = mutated_mod.get_global_var('func_7383')
call_7384 = func_7383_call()
output = call_7384
func_7385 = relay.Function([], output)
mutated_mod['func_7385'] = func_7385
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7393 = relay.const([[[-1.255277,8.292309,-8.842184,0.590759,8.013962],[2.246295,-1.845783,-4.608533,-4.059007,8.043202],[5.935259,-3.376536,-4.061319,-8.315063,5.105080],[7.606087,5.357850,2.790356,-4.530594,-3.858544],[8.886363,5.489677,8.917697,-9.564740,9.803960],[5.399840,-7.661852,-5.924513,3.388160,-1.390805],[-9.151365,-2.389031,5.293410,8.141766,-4.346399],[1.546947,2.685275,8.948974,-3.207322,-0.830216],[-7.767095,3.039733,0.825091,2.460286,-8.512738],[-4.938164,-8.863144,-0.431356,-3.019379,4.261186],[3.879102,-0.289135,3.361609,-3.172188,6.257550],[3.745483,-4.171705,-2.702773,-8.973839,-1.997708],[-3.662419,-0.151652,8.152510,-5.942077,-1.113144]],[[9.353859,-8.351320,8.584420,7.681145,-6.494928],[-9.178312,-8.935003,-5.366537,1.390698,9.177510],[3.202129,-1.299312,-6.599103,-9.666531,5.103131],[-5.377189,8.470763,-8.381292,-0.839795,-1.469843],[-8.306359,-2.684285,5.003980,-4.951359,9.015594],[-1.761369,1.233896,-0.899369,-8.276891,-2.895110],[-7.511117,-9.832005,9.625207,-4.574625,4.000248],[-5.711266,9.284490,-7.703159,9.577756,3.469493],[-6.428863,5.455135,-3.580179,1.045330,0.889474],[-4.869848,-9.171340,1.621469,8.359596,8.655810],[-0.820685,5.540175,-1.544010,-6.889190,-3.449173],[2.738452,8.298412,-3.979613,-4.787664,-2.968177],[3.918286,9.754498,-5.533389,0.092865,-9.561528]],[[-1.026009,9.075015,3.306021,8.504473,9.883438],[6.600382,0.518504,-4.638558,9.352217,0.315871],[-4.517839,-3.570666,8.457409,-0.124780,2.157733],[8.285062,6.284656,1.326612,0.006991,-3.788798],[-0.905361,3.412444,-0.501186,5.237739,-1.857179],[9.511417,5.147863,9.953101,-0.240955,3.173696],[-2.308050,2.450487,9.690403,-0.896977,-3.451797],[-0.494188,5.749473,-9.438675,4.326747,1.999831],[-4.465045,-9.380419,-2.469437,-0.058916,4.372924],[-5.740892,8.342302,5.923076,-5.538727,4.619015],[-9.573719,2.946950,5.493130,5.939021,0.130912],[-2.674953,1.496318,2.341051,-8.547816,6.432665],[-5.855356,-9.134930,2.171249,-2.191869,5.473574]],[[-4.866345,2.271623,1.209648,1.722640,0.767419],[9.092333,4.650867,-3.585846,7.847216,-4.314205],[-8.447425,-9.029081,-7.475683,-3.224038,-2.417041],[-4.903437,0.947891,-1.940086,-0.141087,4.713541],[6.721899,-1.374660,-4.867486,0.709576,3.204636],[-1.939802,-9.377761,-8.137231,-0.346816,-5.437507],[9.763699,-3.023549,-3.572528,2.835148,-3.628508],[9.077485,-4.420540,-1.882609,-3.433813,-9.295138],[-2.907379,-5.091790,0.752521,8.002079,0.599277],[-4.694631,5.988827,-0.485869,-0.268767,-1.389610],[-1.774814,-5.885893,6.530431,9.164365,-2.944135],[-0.159861,-4.904647,-8.857017,4.134392,-3.455068],[2.844125,2.887331,8.458221,-9.487802,-9.177401]],[[-7.742627,-4.115995,6.804372,-9.347451,-3.373750],[-6.381228,5.014909,3.985197,-2.605884,7.245979],[7.770111,-6.436623,6.203208,-5.840654,5.875803],[1.779628,-8.689741,-7.835967,1.968487,-5.322008],[3.640272,-6.358826,-4.949610,-3.462927,5.008907],[2.757525,-1.396305,8.891649,0.701943,-1.363659],[-7.644046,-5.208361,0.239509,-0.600586,8.233532],[-0.609392,8.323418,6.645383,-9.432911,7.383690],[-0.115968,4.389031,-3.634356,-1.541064,-3.111340],[-2.728366,-3.470665,5.469092,1.826063,0.664442],[1.137536,7.847707,-2.804129,-3.111767,3.167324],[-0.688890,-5.089334,-2.781808,5.725303,-7.464452],[4.143315,-4.733939,8.344474,-1.944939,-6.291590]],[[-0.617653,7.828195,-2.123359,-0.376931,9.161443],[-5.217244,1.810095,5.029339,5.209346,3.582948],[-5.109096,-2.389026,-0.171657,6.228787,-0.942096],[-3.026683,3.694955,4.927956,-6.348581,-1.824698],[6.456488,0.886838,5.756281,-9.551837,8.924071],[-7.448269,9.237248,6.553601,-0.601277,-9.360273],[-8.284415,5.694460,-5.931681,9.122474,6.158846],[-5.412429,0.838142,4.853870,-3.076594,7.539078],[0.790955,-8.760936,6.711178,1.784552,-9.322263],[-7.422823,-1.849318,-6.356019,-8.444050,5.717038],[7.861958,-0.933289,-4.409305,1.233535,-1.552221],[-9.067756,-3.008056,-8.040022,-2.173267,2.781789],[6.235491,1.218282,-2.593991,-5.923711,-6.252304]]], dtype = "float32")#candidate|7393|(6, 13, 5)|const|float32
uop_7394 = relay.atan(const_7393.astype('float32')) # shape=(6, 13, 5)
output = relay.Tuple([uop_7394,])
output2 = relay.Tuple([uop_7394,])
func_7399 = relay.Function([], output)
mod['func_7399'] = func_7399
mod = relay.transform.InferType()(mod)
output = func_7399()
func_7400 = relay.Function([], output)
mutated_mod['func_7400'] = func_7400
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7420 = relay.const(4.109672, dtype = "float64")#candidate|7420|()|const|float64
const_7421 = relay.const([[[-3.407565],[8.297474],[-1.719868],[-3.112688],[-5.006906],[3.114379],[7.240728],[1.362088],[-7.125666],[7.154437],[-8.487484],[1.357516],[1.451721],[9.483387],[-1.371309]],[[-2.038248],[0.630635],[-6.414787],[6.733194],[-2.797407],[-3.462923],[-9.749996],[-5.819497],[-2.945864],[-9.636543],[1.013063],[8.262059],[4.027559],[8.050545],[-4.255423]],[[-7.964205],[5.439583],[-6.938326],[9.252461],[-5.340336],[-2.435293],[6.283815],[9.324717],[-7.889551],[-3.573109],[1.127408],[8.831428],[-8.409745],[8.673130],[-2.428988]],[[-6.386339],[-8.438583],[-6.877363],[8.042287],[8.443438],[-4.020599],[-4.664225],[-0.359915],[4.446237],[-4.548455],[5.065977],[7.723543],[-7.778605],[3.735683],[-6.440765]],[[7.698376],[-9.701816],[-1.693802],[9.451470],[-1.134317],[2.345705],[-9.081134],[-4.896266],[7.311051],[8.695551],[8.457736],[5.415779],[-3.751191],[0.361306],[1.247525]],[[7.929784],[-7.773747],[0.955458],[-9.600237],[-0.967615],[4.449841],[4.411352],[3.341562],[-3.907438],[-3.705688],[-7.595735],[-7.147275],[-0.101000],[-7.375594],[-8.327051]]], dtype = "float64")#candidate|7421|(6, 15, 1)|const|float64
bop_7422 = relay.add(const_7420.astype('float64'), const_7421.astype('float64')) # shape=(6, 15, 1)
func_5507_call = mod.get_global_var('func_5507')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_7425 = relay.TupleGetItem(func_5507_call(), 0)
call_7426 = relay.TupleGetItem(func_5508_call(), 0)
bop_7429 = relay.left_shift(call_7425.astype('int8'), const_7420.astype('int8')) # shape=(8, 12, 3)
bop_7432 = relay.left_shift(call_7426.astype('int8'), const_7420.astype('int8')) # shape=(8, 12, 3)
output = relay.Tuple([bop_7422,bop_7429,])
output2 = relay.Tuple([bop_7422,bop_7432,])
func_7433 = relay.Function([], output)
mod['func_7433'] = func_7433
mod = relay.transform.InferType()(mod)
output = func_7433()
func_7434 = relay.Function([], output)
mutated_mod['func_7434'] = func_7434
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7464 = relay.const([[[9,4,10,-1],[2,10,2,-5],[-8,2,-4,5]],[[-1,5,-8,-9],[-6,-1,4,-7],[-1,6,2,10]],[[4,-5,3,8],[-5,-3,10,10],[-6,2,-2,6]],[[-5,-9,-2,8],[-3,6,-3,1],[1,-10,5,-7]],[[-8,-2,-8,-6],[-1,-4,5,10],[-7,3,5,7]],[[-7,5,7,-2],[-10,7,-5,3],[-9,-10,10,-2]],[[8,-8,-1,-9],[4,-10,-5,-7],[-9,5,9,-9]],[[-6,5,-10,-5],[-4,3,10,6],[5,6,-8,-7]],[[9,-10,-9,-7],[7,2,-10,-8],[-2,2,5,9]],[[-3,2,-9,-6],[-10,-7,5,-7],[-7,-2,8,3]],[[-4,-5,4,9],[-8,-7,-1,-5],[1,-1,7,1]],[[-8,3,6,7],[1,-7,5,-2],[-8,-8,-6,-9]],[[5,5,9,-8],[-2,3,4,-6],[-2,-2,10,10]]], dtype = "uint64")#candidate|7464|(13, 3, 4)|const|uint64
var_7465 = relay.var("var_7465", dtype = "uint64", shape = (13, 3, 4))#candidate|7465|(13, 3, 4)|var|uint64
bop_7466 = relay.bitwise_or(const_7464.astype('uint64'), relay.reshape(var_7465.astype('uint64'), relay.shape_of(const_7464))) # shape=(13, 3, 4)
output = bop_7466
output2 = bop_7466
func_7478 = relay.Function([var_7465,], output)
mod['func_7478'] = func_7478
mod = relay.transform.InferType()(mod)
mutated_mod['func_7478'] = func_7478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7479 = relay.var("var_7479", dtype = "uint64", shape = (13, 3, 4))#candidate|7479|(13, 3, 4)|var|uint64
func_7478_call = mutated_mod.get_global_var('func_7478')
call_7480 = func_7478_call(var_7479)
output = call_7480
func_7481 = relay.Function([var_7479], output)
mutated_mod['func_7481'] = func_7481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_7513 = relay.TupleGetItem(func_2373_call(), 0)
call_7514 = relay.TupleGetItem(func_2375_call(), 0)
output = call_7513
output2 = call_7514
func_7515 = relay.Function([], output)
mod['func_7515'] = func_7515
mod = relay.transform.InferType()(mod)
output = func_7515()
func_7516 = relay.Function([], output)
mutated_mod['func_7516'] = func_7516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6952_call = mod.get_global_var('func_6952')
func_6954_call = mutated_mod.get_global_var('func_6954')
call_7519 = relay.TupleGetItem(func_6952_call(), 0)
call_7520 = relay.TupleGetItem(func_6954_call(), 0)
func_4482_call = mod.get_global_var('func_4482')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_7521 = relay.TupleGetItem(func_4482_call(), 0)
call_7522 = relay.TupleGetItem(func_4483_call(), 0)
func_7433_call = mod.get_global_var('func_7433')
func_7434_call = mutated_mod.get_global_var('func_7434')
call_7539 = relay.TupleGetItem(func_7433_call(), 1)
call_7540 = relay.TupleGetItem(func_7434_call(), 1)
func_7344_call = mod.get_global_var('func_7344')
func_7345_call = mutated_mod.get_global_var('func_7345')
call_7548 = relay.TupleGetItem(func_7344_call(), 1)
call_7549 = relay.TupleGetItem(func_7345_call(), 1)
func_3345_call = mod.get_global_var('func_3345')
func_3348_call = mutated_mod.get_global_var('func_3348')
var_7558 = relay.var("var_7558", dtype = "bool", shape = (39, 4))#candidate|7558|(39, 4)|var|bool
const_7559 = relay.const([False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,False], dtype = "bool")#candidate|7559|(468,)|const|bool
call_7557 = relay.TupleGetItem(func_3345_call(relay.reshape(var_7558.astype('bool'), [12, 1, 13]), relay.reshape(const_7559.astype('bool'), [12, 3, 13]), ), 1)
call_7560 = relay.TupleGetItem(func_3348_call(relay.reshape(var_7558.astype('bool'), [12, 1, 13]), relay.reshape(const_7559.astype('bool'), [12, 3, 13]), ), 1)
output = relay.Tuple([call_7519,call_7521,call_7539,call_7548,call_7557,var_7558,const_7559,])
output2 = relay.Tuple([call_7520,call_7522,call_7540,call_7549,call_7560,var_7558,const_7559,])
func_7563 = relay.Function([var_7558,], output)
mod['func_7563'] = func_7563
mod = relay.transform.InferType()(mod)
mutated_mod['func_7563'] = func_7563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7564 = relay.var("var_7564", dtype = "bool", shape = (39, 4))#candidate|7564|(39, 4)|var|bool
func_7563_call = mutated_mod.get_global_var('func_7563')
call_7565 = func_7563_call(var_7564)
output = call_7565
func_7566 = relay.Function([var_7564], output)
mutated_mod['func_7566'] = func_7566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_7646 = relay.TupleGetItem(func_5709_call(), 0)
call_7647 = relay.TupleGetItem(func_5710_call(), 0)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_7653 = relay.TupleGetItem(func_1896_call(), 2)
call_7654 = relay.TupleGetItem(func_1897_call(), 2)
output = relay.Tuple([call_7646,call_7653,])
output2 = relay.Tuple([call_7647,call_7654,])
func_7709 = relay.Function([], output)
mod['func_7709'] = func_7709
mod = relay.transform.InferType()(mod)
output = func_7709()
func_7710 = relay.Function([], output)
mutated_mod['func_7710'] = func_7710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7745 = relay.var("var_7745", dtype = "uint32", shape = (8, 11, 12))#candidate|7745|(8, 11, 12)|var|uint32
var_7746 = relay.var("var_7746", dtype = "uint32", shape = (8, 11, 12))#candidate|7746|(8, 11, 12)|var|uint32
bop_7747 = relay.maximum(var_7745.astype('uint32'), relay.reshape(var_7746.astype('uint32'), relay.shape_of(var_7745))) # shape=(8, 11, 12)
func_1812_call = mod.get_global_var('func_1812')
func_1814_call = mutated_mod.get_global_var('func_1814')
call_7754 = relay.TupleGetItem(func_1812_call(), 0)
call_7755 = relay.TupleGetItem(func_1814_call(), 0)
const_7756 = relay.const([[[-8,-5,-3,3,-3,9,-5,-1,9,4,-8,-5],[-1,-7,2,9,4,-5,8,-1,6,-2,6,5],[-1,-1,-3,-9,1,-7,8,2,-10,3,6,3],[-3,-5,6,-6,1,5,6,-10,10,7,-3,-3],[8,5,1,8,-4,-5,-4,-9,-10,9,-8,10],[-8,9,-8,8,-10,1,-2,-5,3,9,3,-2],[-10,-1,-4,8,10,5,10,5,8,-1,-7,7],[8,-7,1,8,-2,2,9,-8,-9,-8,-6,-9],[1,5,6,-7,-7,9,-4,3,-3,-10,7,1],[10,-5,4,-9,3,4,5,8,-6,3,-2,-3],[-3,7,-2,-8,-10,7,6,-1,-1,10,4,1]],[[3,-9,-10,1,-7,5,-1,-10,-5,-4,-4,-2],[8,2,-10,-4,-4,-9,5,-10,-2,-2,8,-3],[8,6,10,8,1,-4,2,5,2,2,6,10],[9,-3,3,-1,-1,4,6,3,-3,-10,4,-2],[-9,-6,8,-5,7,3,-3,-2,1,6,-1,5],[-6,8,10,8,4,-6,-9,9,-8,7,-5,6],[6,-3,10,10,5,-8,6,4,-10,-4,1,7],[4,-3,-5,-6,2,10,9,10,8,9,-5,-5],[5,-8,-3,-8,-10,-7,-1,-8,4,4,5,-7],[3,-6,3,7,-3,4,7,2,-4,-2,5,7],[7,-3,7,-5,8,-3,5,6,-3,3,-2,-9]],[[7,1,-1,-9,2,-1,4,3,9,2,4,-3],[10,-6,2,-1,7,1,4,6,-2,7,5,7],[-4,2,-10,-4,3,-5,5,6,-9,2,8,9],[5,7,6,5,-4,-9,-2,-5,4,1,-7,3],[-5,1,-3,3,-6,9,4,-3,3,-3,6,-1],[7,4,-1,9,-2,-9,-1,-4,-3,-3,8,-7],[10,5,9,10,8,-9,-1,-4,1,9,-8,-2],[-9,-1,-1,-8,-10,8,-1,-5,-2,-9,-5,7],[8,9,-10,-8,4,-6,8,7,-8,-5,-5,9],[7,2,3,-9,5,7,-8,6,6,8,-7,2],[-2,-6,9,6,-3,7,8,-7,3,10,-2,-3]],[[8,2,6,1,-3,7,-4,8,-1,-5,1,2],[7,5,-8,-8,10,2,-4,-4,-3,8,3,-5],[3,5,-2,-9,-1,-8,3,-7,-6,8,3,-6],[4,4,-10,-4,-10,8,-8,-3,-1,9,-7,-8],[-7,-2,8,-9,-1,-2,5,-5,-6,1,10,-4],[4,-7,-4,-5,-1,3,2,4,6,-4,5,-8],[-2,7,-2,5,6,1,8,3,1,-1,-8,8],[-2,-9,-2,7,7,-6,-7,-6,-4,5,3,1],[3,-10,-6,7,1,-6,4,-8,7,9,-6,9],[4,-4,-1,2,7,-5,10,-1,-9,-5,10,1],[9,5,4,7,-7,4,6,-4,-6,3,10,-7]],[[3,-1,5,-4,1,-2,-3,-3,-10,10,1,-6],[-2,4,-7,2,-3,4,-4,-4,8,-10,-5,-3],[9,10,7,10,-8,-5,5,4,-2,-6,9,-1],[-8,-7,-5,-7,-4,-6,-4,4,9,9,-9,-2],[3,9,-9,-10,3,-9,8,1,-4,6,-1,2],[-10,-4,3,-1,-3,10,-1,9,10,10,-2,1],[-10,-6,7,-1,-8,-9,-10,-9,1,4,-2,7],[9,-9,10,8,8,1,1,-4,8,10,-4,-10],[8,8,-5,9,4,-8,9,6,-10,-3,-10,10],[8,5,-6,-6,7,2,1,-7,-1,-1,10,6],[-6,-1,-5,6,10,7,6,-10,-9,6,-6,-7]],[[9,5,-7,1,1,-2,4,2,-9,10,4,10],[-2,5,1,-3,4,-2,-1,6,5,-10,8,-3],[-3,-6,-2,-2,3,10,-3,-6,3,8,1,7],[4,6,-1,2,-1,3,-3,8,6,9,3,4],[3,9,6,1,5,-3,-6,4,-1,3,-4,1],[-10,-7,8,-8,-3,-5,7,8,-3,2,-6,-9],[3,-1,4,9,2,9,-9,-3,8,-3,3,-6],[-2,8,-5,5,10,9,9,1,5,-3,7,-1],[3,-9,-5,5,-5,7,9,-10,-9,-4,-6,-2],[-5,7,1,8,-2,-2,-3,-8,9,8,9,-6],[4,9,-7,1,5,3,-8,10,9,8,-9,10]],[[-10,-6,6,-7,4,-2,-6,2,-5,-7,-7,2],[1,7,4,7,-8,3,5,-6,-8,1,-5,3],[-1,2,1,3,2,1,-9,-2,-1,1,-6,6],[-7,-6,-3,10,-3,-9,6,6,4,-6,6,-8],[-2,5,-5,-2,2,-3,-10,7,7,8,2,3],[-1,-8,6,6,-6,6,5,-4,-5,-2,-3,-8],[6,6,-10,-5,10,8,1,4,8,-9,-7,10],[1,8,-10,6,2,6,-3,-3,-4,8,8,3],[3,6,6,-5,7,-10,-10,5,-8,-6,-3,3],[1,-5,5,-4,1,-10,6,-3,-9,-2,-9,2],[9,8,6,-3,5,5,-5,10,-1,-2,-8,-1]],[[-8,-5,-1,4,-5,-4,-6,-8,-5,8,-4,-8],[1,-1,5,-3,5,9,6,-6,8,2,8,-2],[2,5,-10,-8,-2,-7,1,7,-9,1,-2,6],[8,-1,-7,1,4,-7,6,-3,-6,-5,-2,4],[1,-9,-4,-10,-5,1,5,-3,-6,1,-8,2],[7,-1,-10,-10,-10,-1,-4,-9,5,10,9,-6],[6,9,-4,-7,8,7,5,-8,-6,1,1,6],[-9,-5,2,5,1,-1,7,-7,8,-3,-1,9],[-10,-7,10,9,2,10,-7,1,1,4,-9,-2],[-5,9,-6,5,-1,-10,-10,2,5,7,7,10],[9,3,-5,7,10,5,-8,-5,-7,-10,4,-8]]], dtype = "uint32")#candidate|7756|(8, 11, 12)|const|uint32
bop_7757 = relay.logical_or(bop_7747.astype('bool'), relay.reshape(const_7756.astype('bool'), relay.shape_of(bop_7747))) # shape=(8, 11, 12)
output = relay.Tuple([call_7754,bop_7757,])
output2 = relay.Tuple([call_7755,bop_7757,])
func_7762 = relay.Function([var_7745,var_7746,], output)
mod['func_7762'] = func_7762
mod = relay.transform.InferType()(mod)
var_7763 = relay.var("var_7763", dtype = "uint32", shape = (8, 11, 12))#candidate|7763|(8, 11, 12)|var|uint32
var_7764 = relay.var("var_7764", dtype = "uint32", shape = (8, 11, 12))#candidate|7764|(8, 11, 12)|var|uint32
output = func_7762(var_7763,var_7764,)
func_7765 = relay.Function([var_7763,var_7764,], output)
mutated_mod['func_7765'] = func_7765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6542_call = mod.get_global_var('func_6542')
func_6544_call = mutated_mod.get_global_var('func_6544')
call_7772 = relay.TupleGetItem(func_6542_call(), 1)
call_7773 = relay.TupleGetItem(func_6544_call(), 1)
output = relay.Tuple([call_7772,])
output2 = relay.Tuple([call_7773,])
func_7798 = relay.Function([], output)
mod['func_7798'] = func_7798
mod = relay.transform.InferType()(mod)
output = func_7798()
func_7799 = relay.Function([], output)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7344_call = mod.get_global_var('func_7344')
func_7345_call = mutated_mod.get_global_var('func_7345')
call_7925 = relay.TupleGetItem(func_7344_call(), 1)
call_7926 = relay.TupleGetItem(func_7345_call(), 1)
output = relay.Tuple([call_7925,])
output2 = relay.Tuple([call_7926,])
func_7927 = relay.Function([], output)
mod['func_7927'] = func_7927
mod = relay.transform.InferType()(mod)
output = func_7927()
func_7928 = relay.Function([], output)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7294_call = mod.get_global_var('func_7294')
func_7295_call = mutated_mod.get_global_var('func_7295')
call_7929 = func_7294_call()
call_7930 = func_7294_call()
output = relay.Tuple([call_7929,])
output2 = relay.Tuple([call_7930,])
func_7951 = relay.Function([], output)
mod['func_7951'] = func_7951
mod = relay.transform.InferType()(mod)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7951_call = mutated_mod.get_global_var('func_7951')
call_7952 = func_7951_call()
output = call_7952
func_7953 = relay.Function([], output)
mutated_mod['func_7953'] = func_7953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6122_call = mod.get_global_var('func_6122')
func_6124_call = mutated_mod.get_global_var('func_6124')
call_8159 = relay.TupleGetItem(func_6122_call(), 0)
call_8160 = relay.TupleGetItem(func_6124_call(), 0)
func_6542_call = mod.get_global_var('func_6542')
func_6544_call = mutated_mod.get_global_var('func_6544')
call_8161 = relay.TupleGetItem(func_6542_call(), 1)
call_8162 = relay.TupleGetItem(func_6544_call(), 1)
output = relay.Tuple([call_8159,call_8161,])
output2 = relay.Tuple([call_8160,call_8162,])
func_8163 = relay.Function([], output)
mod['func_8163'] = func_8163
mod = relay.transform.InferType()(mod)
mutated_mod['func_8163'] = func_8163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8163_call = mutated_mod.get_global_var('func_8163')
call_8164 = func_8163_call()
output = call_8164
func_8165 = relay.Function([], output)
mutated_mod['func_8165'] = func_8165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mod.get_global_var('func_3313')
func_3315_call = mutated_mod.get_global_var('func_3315')
call_8189 = func_3313_call()
call_8190 = func_3313_call()
output = call_8189
output2 = call_8190
func_8201 = relay.Function([], output)
mod['func_8201'] = func_8201
mod = relay.transform.InferType()(mod)
output = func_8201()
func_8202 = relay.Function([], output)
mutated_mod['func_8202'] = func_8202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
call_8236 = relay.TupleGetItem(func_3575_call(), 1)
call_8237 = relay.TupleGetItem(func_3577_call(), 1)
func_1045_call = mod.get_global_var('func_1045')
func_1049_call = mutated_mod.get_global_var('func_1049')
var_8250 = relay.var("var_8250", dtype = "uint64", shape = ())#candidate|8250|()|var|uint64
const_8251 = relay.const([[-5,-4,9,3,-2,9,-10,-2,9,-1,-8,10,8,10,1,3,-4,-2,-10,-9,9,-2,-8,1,10,-4,2,2,1,2,-9,-9,-1,-5,7,5,3,3,4,3,-8,6,10,-2,1,4,-8,-4,5,1,-5,-5,6,4,-6,5,3,-5,-9,-5,-10,10,-3,6,6,-7,6,1,-4,1,3,3,7,-10,-3,-5,-5,1,-1,-5,8,8,-6,5,6,-9,2,-7,-9,5,2,-7,7,5,6,-3,-2,8,9,-9,9,-4,-9,2,-7,-10,-9,8],[-4,1,2,6,-4,3,8,-8,9,2,10,8,2,-8,4,6,10,-9,1,8,10,9,-5,-6,7,-4,1,8,-1,-4,-4,-4,8,-9,-1,-6,-10,10,10,-2,4,-5,8,-8,-10,4,5,-8,-3,3,4,6,2,1,-2,10,9,-10,-1,-7,-3,6,-1,2,-3,-2,2,-3,4,8,-7,1,-6,-2,-1,1,-2,-3,-3,-8,8,5,8,8,-4,-9,7,-6,2,1,8,7,-8,10,-5,-8,-8,5,-3,-7,1,7,-5,10,-10,3,2,-6]], dtype = "uint64")#candidate|8251|(2, 108)|const|uint64
var_8252 = relay.var("var_8252", dtype = "int8", shape = (528,))#candidate|8252|(528,)|var|int8
call_8249 = relay.TupleGetItem(func_1045_call(relay.reshape(var_8250.astype('uint64'), []), relay.reshape(const_8251.astype('uint64'), [12, 6, 3]), relay.reshape(var_8252.astype('int8'), [528,]), ), 2)
call_8253 = relay.TupleGetItem(func_1049_call(relay.reshape(var_8250.astype('uint64'), []), relay.reshape(const_8251.astype('uint64'), [12, 6, 3]), relay.reshape(var_8252.astype('int8'), [528,]), ), 2)
uop_8257 = relay.sin(const_8251.astype('float32')) # shape=(2, 108)
output = relay.Tuple([call_8236,call_8249,var_8250,var_8252,uop_8257,])
output2 = relay.Tuple([call_8237,call_8253,var_8250,var_8252,uop_8257,])
func_8273 = relay.Function([var_8250,var_8252,], output)
mod['func_8273'] = func_8273
mod = relay.transform.InferType()(mod)
var_8274 = relay.var("var_8274", dtype = "uint64", shape = ())#candidate|8274|()|var|uint64
var_8275 = relay.var("var_8275", dtype = "int8", shape = (528,))#candidate|8275|(528,)|var|int8
output = func_8273(var_8274,var_8275,)
func_8276 = relay.Function([var_8274,var_8275,], output)
mutated_mod['func_8276'] = func_8276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7433_call = mod.get_global_var('func_7433')
func_7434_call = mutated_mod.get_global_var('func_7434')
call_8280 = relay.TupleGetItem(func_7433_call(), 0)
call_8281 = relay.TupleGetItem(func_7434_call(), 0)
func_5507_call = mod.get_global_var('func_5507')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_8298 = relay.TupleGetItem(func_5507_call(), 0)
call_8299 = relay.TupleGetItem(func_5508_call(), 0)
output = relay.Tuple([call_8280,call_8298,])
output2 = relay.Tuple([call_8281,call_8299,])
func_8311 = relay.Function([], output)
mod['func_8311'] = func_8311
mod = relay.transform.InferType()(mod)
mutated_mod['func_8311'] = func_8311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8311_call = mutated_mod.get_global_var('func_8311')
call_8312 = func_8311_call()
output = call_8312
func_8313 = relay.Function([], output)
mutated_mod['func_8313'] = func_8313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5507_call = mod.get_global_var('func_5507')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_8319 = relay.TupleGetItem(func_5507_call(), 0)
call_8320 = relay.TupleGetItem(func_5508_call(), 0)
func_771_call = mod.get_global_var('func_771')
func_776_call = mutated_mod.get_global_var('func_776')
const_8343 = relay.const([[-0.970010],[8.350385],[-8.260253],[-4.588285],[-5.022897],[5.684719],[-5.331581],[-1.201614],[-2.140004],[-1.319290],[5.078033],[-8.165726],[1.999663],[-5.314550],[-0.982536],[1.262401],[-5.903972],[8.496714],[5.887746],[2.014206],[5.518202],[-6.696301],[6.577129],[-9.698498],[-9.900488],[1.757530],[-3.967264],[-2.808750],[8.340277],[-1.782964],[2.544567],[-9.093934],[-2.373005],[1.313952],[3.918956],[-7.525956],[4.216564],[2.894000],[9.996749],[-3.331889],[-8.133733],[0.929020],[3.977942],[-3.862157],[-8.212204],[2.671402],[-1.298810],[2.411237],[9.420518],[-1.903684],[5.320877],[5.443713],[2.854194],[-5.169686],[3.874786],[-9.991682],[-6.848912],[-8.653843],[7.909683],[-7.041850],[1.197704],[-9.501494],[-9.840352],[2.304574],[-0.376500],[-0.199744],[-6.138464],[-9.790487],[-4.342748],[-1.614394],[7.161525],[1.833530],[-9.833599],[-8.616456],[-1.870867],[7.632421],[-6.583254],[0.333924],[4.347069],[-5.491595],[7.587075],[0.381508],[2.539598],[4.656124],[-7.280808],[7.191175],[9.741378],[2.556104],[-9.598550],[1.198617],[9.255233],[4.585557],[-4.962797],[-1.921968],[7.768918],[6.706129],[0.515791],[-2.959772],[-9.447649],[6.826654],[3.066199],[8.619356],[0.859662],[-5.765457],[-0.991400],[4.618896],[-3.064231],[7.839358],[2.297034],[-2.549983],[-2.935320],[0.748115],[-4.769481],[-5.059296],[-2.048055],[-3.205057],[-0.705972],[-5.384337],[-9.316473],[-5.757135],[-4.684120],[-8.179791],[-2.520028],[-5.804439],[1.230288],[-3.778556],[-9.692691],[-4.654551],[5.521604],[-2.761772],[-8.240198],[0.185286],[-9.772359],[-0.628684],[-2.146691],[2.468811],[-7.672332],[4.377555],[6.877974],[2.235543],[-6.152257],[-1.897990],[9.826529],[2.826448],[-1.703809],[-6.477014],[-6.986283],[6.616938],[0.494672],[-2.149755],[-4.679616],[1.461118],[0.215826],[6.480304],[-0.854034],[-8.291384],[-8.390702],[7.479127],[0.943272],[-2.154120],[-1.213377],[-7.542806],[-3.334373],[5.986577],[3.321065],[8.613847],[2.066394],[1.040746],[4.046095],[1.207889],[3.693334],[-8.661585],[9.754239],[5.139978],[8.137847],[-6.502137],[4.932961],[-8.266320],[-1.625270],[5.342134],[7.681562],[-0.456993],[8.431076],[-7.669006],[-6.775430],[-8.650821],[8.744838],[-6.258338],[2.511110],[6.857984],[5.944148],[-9.891828],[-8.869582],[0.714263],[9.331072],[-4.854827],[1.675600],[6.086969],[-0.799197],[-4.792844],[-8.982227],[-3.405908],[4.628162],[-8.536690],[4.776735],[1.752904],[2.669605],[9.910719],[0.588781],[-0.164049],[9.002239],[7.114345],[2.448476],[-5.256995],[-8.947596],[4.504167],[8.869836],[-1.623119],[-7.160378],[3.972415],[-2.407263],[-7.456209],[9.541821],[8.660831],[-5.623499],[8.274694],[3.507140],[9.996203],[3.675755],[-0.549197],[-1.190533],[-8.172163],[-2.817524],[-6.528761],[0.767139],[-6.156940],[8.734945],[9.674011],[-9.463676],[4.036674],[9.886123],[-2.084476],[5.708331],[7.954484],[8.739023],[0.739514],[7.749415],[-8.617797],[-1.733078],[-2.725874],[-7.821495],[-6.112805],[-9.202270],[-7.463120],[-2.010150],[3.270046],[-9.513299],[-9.594150],[3.745205],[5.214813],[-1.942935],[-4.499695],[-2.303363],[7.688950],[-8.446669],[7.491702],[-8.301953],[-1.986726],[8.637299],[0.551510],[-2.333398],[7.769278],[-5.544638],[-6.757409],[-1.732790],[1.598281],[-9.031168],[-4.865963],[-4.160605],[-6.790710],[-4.797977],[2.143246],[4.774943],[5.055110],[5.845797],[-1.744032],[9.660814],[-6.783731],[-9.292944],[-0.866842],[-2.174184],[4.632752],[4.080076],[-7.546895],[9.956470],[-2.055374],[-5.685635],[-1.596868],[0.896596],[-8.431518],[-1.641647],[-3.639683],[0.586940],[7.658906],[-8.069469],[-4.770881],[1.671515],[8.920553],[0.067512],[-9.895910],[-8.200475],[-7.031193],[9.935363],[-8.193346],[-6.257205],[2.942628],[-1.295992],[3.446544],[-2.542482],[5.788273],[-1.161009],[-2.526353],[3.806958],[-4.946158],[2.294725],[4.271379],[-5.735426],[-8.675361],[-4.634989],[-3.959065],[7.784868],[0.620902],[-0.110280],[6.343796],[7.256797],[1.885579],[-1.299570],[-5.048654],[1.203810],[5.928433],[9.489275],[1.408726],[-5.851332],[8.674974],[-4.998249],[-7.374471],[4.587858],[9.716396],[-8.964573],[9.759766],[3.260727],[4.164430],[-4.526173],[5.354158],[-3.364179],[-8.556605],[3.529029],[2.024159],[5.398414],[-8.648236],[3.939221],[0.636480],[-3.066314],[-5.676881],[-2.905910],[7.709313],[-1.611822],[5.245857],[-4.013429],[-7.297776],[8.130854],[-7.317085],[-1.667943],[6.319288],[1.219900],[-7.680060],[-3.577000],[3.732592],[-8.604817],[2.175984],[5.093471],[9.315360],[0.704180],[-9.725328],[2.777530],[-7.580725],[0.481508],[-1.408160],[6.999770],[9.197630],[2.714677],[0.784121],[-8.519987],[8.829801],[-0.904286],[8.611295],[6.836355],[5.391314],[4.228073],[-7.387552],[-0.276751],[-3.016895],[2.833116],[-9.906036],[-3.551497],[8.231159],[5.081887],[8.421174],[-2.887200],[-5.522104],[4.665590],[-1.829965],[-0.670920],[0.111972],[-0.712616],[0.922093],[-2.999802],[-2.973584],[-4.056198],[-2.795107],[8.574833],[-4.749308],[-6.291544],[-2.882498],[-7.044945],[8.992494],[-0.242628],[-9.116716],[2.959372],[-7.676526],[7.034373],[4.945136],[8.685383],[-9.817426],[-4.842634],[-6.175283],[-1.984528],[-7.885604],[-5.794116],[8.542743],[4.752164],[-6.474002],[7.697275],[6.205806],[-5.861142],[-1.819987],[4.539219],[-1.234790],[8.095102],[-0.284889],[7.287460],[4.234768],[6.239443],[7.573350],[-1.836733],[9.635369],[3.407336],[6.860743],[-0.838413],[-6.387048],[6.919525],[7.156006],[-9.158131],[2.661765],[-0.713358],[3.434023],[8.048698],[9.913848],[-7.807362],[-6.214139],[-4.547056],[-1.998363],[-2.901994],[-6.396029],[-4.184417],[1.209645],[8.680462],[-0.126217],[-8.016725],[7.229066],[2.563092],[8.851844],[-2.603674],[-7.197294],[4.384323],[1.076312],[-3.870029],[6.618477],[-2.177196],[8.374576],[-6.510545],[-7.743802],[5.530898],[2.965914],[-8.566669],[-8.646282],[7.909081],[-2.942327],[4.820091],[-9.010757],[-8.104795],[-3.640400],[-0.771781],[0.180995],[5.462689],[9.127226],[2.480469],[7.077377],[2.439455],[0.659587],[9.216380],[1.637536],[7.098101],[-0.707814],[-7.549211],[4.927412],[7.676456],[8.115674],[2.745776],[-0.620688],[-9.044728],[1.454394],[6.772346],[-9.207341],[9.598964],[-9.413822],[-1.795548],[-1.249041],[-0.762337],[-6.837205],[5.103010],[5.258749],[4.276129],[-8.138865],[0.385614],[5.972599],[3.717488],[7.483368],[0.220368],[2.646237],[2.645943],[7.255542],[8.894274],[6.767172],[2.151081],[0.891841],[8.490602],[6.689563],[8.384800],[-4.792732],[-1.495263],[-4.478786],[-1.348897],[-7.508963],[-9.827262],[-4.854570],[8.723440],[0.049091],[8.798270],[-2.071626],[-8.889158],[-5.759974],[-2.695277],[-6.107164],[4.539352],[-5.177769],[-2.056981],[3.435747],[0.545324],[-6.137956],[8.234005],[3.964115],[-7.453704],[-8.670652],[-7.584383],[-8.020374],[-1.887430],[-7.589590],[-8.510022],[-1.778975],[4.650752],[9.387688],[-1.139339],[-6.358094],[-8.874934],[2.892986],[-5.849159],[6.639222],[7.636781],[-4.554995],[-6.127303],[-9.457799],[0.709752],[-5.209371],[4.729007],[-4.479701],[2.210055],[-5.128767],[-1.466533],[7.118512],[3.723882],[4.903136],[-5.474768],[-3.706997],[-3.493028],[4.863602],[-8.651765],[1.581563],[-1.314408],[7.247045],[-6.723541],[8.144998],[-9.257644],[0.505339],[-9.740643],[1.470423],[9.121342],[9.451916],[4.941889],[4.825057],[5.621929],[1.664126],[-3.125621],[3.524158],[-5.116936],[-5.608931],[-9.935441],[-3.738907],[0.929455],[-0.030621],[4.918763],[1.086197],[-5.016521],[-0.370496],[5.086530],[4.007170],[-0.061951],[-7.291457],[4.453875],[3.137825],[-3.686914],[-0.677517],[3.023321],[3.932892],[4.659215],[7.402433],[-2.087817],[1.321467],[8.146759],[-6.131895],[-2.791073],[8.773809],[-7.258705],[5.412559],[-8.237427],[0.637427],[1.676241],[4.424023],[6.446424],[5.211680],[-1.009678],[3.148802],[-5.114889],[7.305557],[-3.999932],[-5.226088],[4.123461],[9.772594],[9.234646],[2.247565],[9.234377],[-0.573240],[0.231887],[-2.336804],[3.416864],[5.049386],[-5.321974],[-1.857181],[2.926428],[-9.472156],[3.311955],[-3.559715],[5.833553],[5.549721],[0.683578],[-9.389223],[8.724133],[5.139397],[-9.712493],[8.520324],[3.667589],[-6.496700],[4.224829],[-3.924089],[-2.275035],[-7.192326],[8.156651],[3.255437],[-9.637545],[4.330531],[7.753506],[1.974159],[5.503918],[1.353336],[-9.617772],[8.995346],[5.238476],[4.684544],[-4.199586],[-0.634839],[-3.836498],[-2.743678],[1.906257],[-4.210577],[-1.711007],[2.971338],[9.970304],[7.447834],[9.454573],[6.341008],[6.685609],[-2.463377],[-4.136126],[-2.373781],[4.000498],[0.827602],[7.746212],[-3.602482],[4.668571],[2.592349],[-2.020515],[-2.778420],[1.418409],[-1.271453],[-0.653842],[-1.255760],[-8.870782],[4.901987],[-4.951431],[1.957953],[-1.705361],[8.131682],[3.993309],[-4.204112],[5.012814],[-4.553822],[0.732272],[9.860421],[-6.909322],[2.785520],[3.421952],[5.989288],[-8.595145],[-8.962245],[-1.905062],[4.964052],[5.937725],[-9.121708],[-4.002890],[0.751796],[-7.545080],[8.421398],[-8.236860],[-4.551565],[6.526054],[-7.451812],[6.607441],[-4.538205],[-3.618878],[-5.124142],[0.565931],[8.320141],[5.724232],[5.174497],[-3.769061],[0.475444],[-1.178577],[-8.751201],[0.387152],[-5.999696],[2.926048],[-0.388980],[-6.486166],[-8.459238],[2.697700],[6.455272],[-8.211209],[5.712987],[-5.428534],[5.173995],[-7.460471],[-6.298536],[-7.048624],[3.160671],[7.340323],[-3.305911],[-7.367389],[-6.618025],[6.772678],[7.156111],[4.908443],[2.196857],[4.066510],[1.865657],[0.313390],[0.926851],[7.387635],[2.741512],[-1.786848],[-8.807958],[-0.191229],[-0.039770],[3.417785],[8.411215],[-5.752086],[0.024735],[6.150143],[3.034074],[-2.080773],[-2.023389],[-0.641260],[7.941324],[3.496928],[1.422005],[1.518388],[-7.554760],[-9.405232],[4.381240],[1.091606],[-0.067936],[4.696632],[2.769873],[6.802897],[-2.525718],[-7.729428],[2.917742],[-3.793204],[-9.805022],[6.628611],[7.006642],[7.581218],[-5.064539],[3.465644],[3.172775],[-9.046111],[-6.189089],[-1.064305],[-8.068300],[-7.786003],[6.356947],[-3.817181],[5.382471],[0.021165],[-1.756183],[0.151143],[3.883225],[6.740113],[-0.263139],[2.070501],[6.165003],[-0.534179],[-4.167593],[-9.255320],[-9.763022],[7.883622],[0.994528],[-0.571262],[-6.762802],[-0.585533],[6.819229],[-3.946004],[7.679931],[-1.569465],[-0.362169],[8.178566],[-0.015241],[4.374952],[-5.092992],[8.486091],[2.227563],[-0.666067],[-1.949525],[4.023365],[-7.095234],[-4.485671],[-2.110206],[1.724635],[-4.637744],[7.002523],[3.688063],[7.869537],[-0.416670],[-0.213654],[-3.507039],[7.711565],[-6.238200],[-9.702518],[9.343955],[3.643913],[9.027352],[0.516321],[0.007686],[2.031981],[-5.682999],[-9.637970],[-4.724333],[1.503441],[5.421273],[3.347320],[-7.934321],[6.521535],[3.216626],[5.856460],[7.394859],[-5.337708],[-8.738034],[-4.020195],[-5.475487],[-8.206246],[7.848952],[6.328797],[-6.131142],[-2.478541],[-9.517951],[9.932099],[7.676482],[-7.885078],[-6.372387],[5.282823],[-8.942707],[-1.500946],[0.413752],[-9.342972],[6.920113],[-4.286070],[-4.560335],[-7.450910],[2.045385],[-0.193209],[-3.219101],[-5.724430],[-1.191888],[-4.495877],[-2.123718],[-3.051803],[-0.866701],[-3.829897],[-3.984618],[5.196563],[2.802761],[-6.857469],[7.541432],[-3.958596],[0.725836],[8.338595],[-9.365339],[1.297925],[-9.810924],[6.821191],[8.269436],[1.496953],[-3.948133],[9.934096],[3.899129],[-2.267063],[0.707063],[-5.865984],[2.340470],[8.367548],[8.690780],[5.472894],[-9.514520],[-2.379343],[-2.526658],[2.514703],[2.500450],[3.732299],[-0.817669],[-9.875218],[-5.351630],[-5.993508],[2.586324],[-0.694807],[4.851362],[-8.015211],[-8.633793],[-3.294820],[-0.682010],[3.976384],[-5.588599],[5.301595],[-5.596476],[-1.571045],[1.621189],[-5.808879],[9.371131],[0.978113],[1.550011],[-2.407490],[0.517784],[4.933133],[-2.778617],[-2.412296],[-9.827526],[0.424090],[9.870739],[-5.129488],[-7.931959],[-4.356440],[-4.747752],[6.952290],[-4.879279],[-7.361915],[-8.491525],[-4.381396],[5.878505],[-1.130552],[-4.995242],[5.546592],[-0.154880],[3.329468],[6.689818],[4.945011],[-6.003416],[6.825611],[-8.647182],[7.386258],[-0.433832],[-5.556015],[-4.671045],[-4.199338],[-9.587644],[5.056199],[-8.788585],[7.862148],[8.319654],[-7.558496],[9.569515],[-6.422674],[0.380327],[-7.806813],[-5.665259],[-1.376309],[5.205773],[-2.178207],[-6.382912],[-4.713183],[7.570131],[0.310884],[-8.443573],[-9.747844],[5.611807],[-6.430564],[2.625180],[4.209380],[-1.645248],[-0.955991],[0.714600],[9.467078],[-1.296419],[-9.748892],[1.494016],[1.021133],[-2.514186],[-7.976998],[-4.450373],[-1.970243],[2.744760],[-0.344744],[-4.744443],[7.958708],[6.801426],[0.344880],[6.636272],[8.071147],[-1.387601],[-7.571328],[-1.997408],[-4.377943],[-9.294735],[0.046558],[-8.407440],[-7.345043],[-5.580734],[-6.981581],[-4.754425],[-5.960642],[3.495466],[-9.481455],[-8.501051],[-4.943867],[0.347113],[-8.867370],[5.468773],[-6.929593],[9.380014],[-6.347332],[-5.797524],[9.361393],[3.216324],[5.734060],[-2.802108],[6.088870],[6.513361],[-2.298283],[7.023800],[7.440434],[5.619950],[2.630656],[-7.012929],[-7.994519],[0.886042],[3.033662],[5.386630],[1.862856],[-9.997245],[6.062864],[-6.323365],[3.602092],[-9.706484],[4.589203],[-4.692922],[3.020514],[0.178172],[-4.903384],[-8.568814],[8.850279],[0.749186],[8.399547],[-4.063159],[8.504439],[8.664404],[6.802905],[8.014585],[-2.859096],[-5.349393],[-8.147550],[-1.036274],[-1.363602],[-2.236185],[8.851628],[0.213903],[-8.460929],[-5.121612],[3.024431],[-6.877734],[3.260350],[3.274641],[2.345633],[7.852630],[9.644040],[-0.133277],[2.010063],[5.621574],[-0.720291],[-3.607611],[-5.599334],[-2.777579],[0.289430],[6.009735],[0.743222],[7.514217],[4.680022],[3.500608],[-8.008457],[-4.172885],[-4.408500],[9.302772],[7.578382],[8.662678],[-1.273121],[-2.235748],[2.498444],[6.069296],[5.038707],[-0.884542],[3.630454],[9.471406],[-6.455889],[0.226640],[-8.285753],[-3.118686],[-6.329787],[-1.858543],[-4.702729],[8.693620],[7.191982],[-4.947495],[5.876579],[8.593200],[-9.254685],[9.125944],[-8.351331],[-8.384310],[-4.411982],[9.690215],[-4.032536],[9.550112],[3.548057],[-5.129735],[-4.989282],[-1.318378],[7.402207],[-2.835370],[-0.002880],[5.195639],[7.841793],[-3.393510],[-8.497807],[1.147874],[6.851827],[5.226610],[-2.900576],[-7.415283],[-7.132467],[-1.037046],[1.039018],[-5.554472],[3.722999],[0.954778],[7.565587],[-1.709968],[3.887086],[-3.404446],[1.842207],[-3.076254],[-3.556715],[-0.547030],[7.632818],[-0.944066],[-7.578538],[-9.796194],[9.773981],[-7.306328],[3.511964],[-0.459630],[5.276394],[-0.363348],[-0.923059],[-4.382910],[-7.221152],[-1.587153],[-1.228232],[3.820198],[0.810448],[4.214669],[-6.569391],[9.697531],[-5.568616],[-2.821491],[4.670689],[-8.621056],[1.371560],[-9.920423],[7.626708],[-9.176389],[8.277839],[-9.405897],[8.181885],[1.249659],[9.396250],[-5.519354],[-8.006745],[2.254917],[-2.270397],[1.511873],[2.395974],[-2.959708],[-2.690998],[-4.866922],[5.924750],[6.531078],[0.987628],[-6.512798],[4.606804],[2.433479],[-1.958069],[3.909587],[-6.665131],[4.632792],[-2.404772],[-4.751522],[3.914716],[0.288899],[4.304631],[5.118723],[-1.627666],[-3.626625],[6.342902],[-5.728262],[-3.633662],[1.930323],[-6.576387],[-3.361186],[-2.099197],[4.833095],[-9.569009],[-5.704468],[-4.302721],[4.714475],[7.866372],[-7.257427],[8.987937],[7.424301],[9.323589],[2.180056],[5.393333],[-0.630978],[8.676557],[-6.197845],[-0.112372],[5.206846],[-5.009259],[-0.247267],[8.378694],[-2.158072],[1.056172],[-6.566328],[2.872417],[1.455761],[9.373404],[7.698572],[8.647946],[-6.064905],[-9.775883],[-8.278589],[-4.112760],[2.235172],[9.172592],[2.993995],[0.410530],[9.799940],[-5.731382],[0.525123],[4.043925],[-8.585769],[1.684588],[-8.820722],[5.356768],[-8.136457],[3.111683],[8.625131],[-5.090498],[-2.295527]], dtype = "float32")#candidate|8343|(1344, 1)|const|float32
var_8344 = relay.var("var_8344", dtype = "uint8", shape = (390, 1))#candidate|8344|(390, 1)|var|uint8
const_8345 = relay.const([-9.474547,3.278874,-1.344987,4.453352,9.559390,9.151968,-1.654004,-8.826907,1.773537,7.802152,3.311313,0.528591,5.801569,-7.691906,8.109236,-6.135273,-1.276278,-1.260166,4.284874,-5.371328,4.304378,7.475348,-9.933454,-1.563519,7.324039,-7.609589,8.693272,-4.063728,4.154421,1.869313,6.679963,2.531173,0.606095,5.165288,2.065362,2.202069,6.149412,-8.554401,4.139150,-2.910612,-7.469928,6.450118,-2.278651,8.492463,-7.534423,5.812514,-7.924846,3.140066,-6.942180,-4.727965,7.114338,-1.104350,-3.823873,-5.718217,8.481390,-9.946648,0.132362,8.682059,3.742441,-6.673612,5.189734,-6.935782,-7.175342,4.965215,-5.549251,-7.087919,-8.937029,-8.309707,5.942683,-8.589084,2.030777,6.874554,-0.047543,9.844829,6.156300,4.864663,4.096807,-9.101426,-4.012624,-4.400011,8.729045,-2.084690,0.962242,-4.656058,5.244101,4.830825,-7.893846,-8.828992,5.689655,-1.436177,6.117516,4.343468,1.360970,-0.751673,6.884191,-6.794733,4.225043,-1.335358,-4.029528,2.401340,4.751081,-3.031359,5.875928,-2.913012,-7.549067,4.685364,7.429904,-9.325881,-2.477955,-0.583438,3.434343,-6.983530,6.427356,8.143557,-8.765996,7.080008,2.391442,2.388400,-3.095671,0.239408,-6.498909,-6.868269,3.906790,4.432292,7.765281,-7.095839,-8.015280,9.162639,9.269798,7.320769,-0.890269,-3.242359,9.927822,-0.049240,6.407325,-7.971968,9.362250,5.114802,-3.469578,-7.902760,-7.826896,-9.548059,-0.120903,-8.741482,8.283837,7.618275,1.284477,6.521058,3.729221,-5.930654,-4.097598,-2.846123,-4.257280,-7.315630,-3.485813,-1.561174,2.484984,-6.076389,5.389215,-4.758620,-2.053800,-8.191798,0.595210,-7.755812,3.821060,5.359304,-5.889252,7.717223,-9.734104,9.016456,4.977720,3.142570,-4.312753,-3.141010,4.946637,-1.385543,-8.363662,1.452118,6.021334,-9.259459,-7.046580,-1.349384,5.231383,4.466435,1.702719,8.698984,4.839718,-5.125818,-5.918256,1.403149,4.723196,2.642123,-6.222230,1.252122,1.347161,-0.805196,3.336781,-6.467494,7.469199,-1.475098,-0.241634,1.544850,5.646513,3.564794,-9.118919,8.159548,3.588190,8.140062,9.767130,4.536137,-3.050567,-8.711811,-6.345902,-9.123412,0.229510,-4.171985,-4.461700,2.033308,9.235201,5.351975,4.811954,9.974544,-8.743304,-5.888493,6.914267,-6.891210,5.074628,-6.083964,1.534823,1.448579,2.942820,-6.193229,2.382993,7.802605,-1.335945,-4.428351,9.474688,-9.905247,-6.086614,3.179937,-4.940238,9.950341,1.813198,7.669545,1.470033,3.896309,3.394314,-1.581590,8.259510,8.237194,8.535031,0.881841,-7.507263,-8.946018,-1.894372,-5.595459,8.437932,-5.160930,0.915636,1.290304,3.930329,-5.870056,-4.025063,4.832012,-5.490336,8.102068,8.504135,7.339673,1.473788,-8.549837,9.025366,-2.948546,6.886490,8.362254,0.958795,8.521705,6.986191,8.067140,-4.059938,5.514003,9.633179,-1.226199,7.633021,-8.680140,9.018576,-4.994652,-4.692275,2.078938,-7.086512,-1.131313,8.152105,-7.554349,7.499841,-8.748975,-9.546182,9.969464,3.448351,-8.722627,3.755961,4.564391,-7.906628,7.553003,-1.942844,-2.692533,-1.046169,-1.053384,-2.415748,-9.096816,-3.149210,2.316054,4.496388,4.907579,5.598342,8.171777,-6.726902,0.844178,4.763692,0.581805,-5.621963,-5.524769,1.580343,-9.682991,4.927034,2.158182,-1.532050,-6.722548,4.018150,-5.590051,-8.257438,0.821294,-6.699753,4.539857,-3.739864,8.325807,-0.606726,4.714851,7.686642,0.097827,-1.679558,-6.287480,0.128827,-6.645919,-1.476297,0.063528,0.427252,-0.099651,-6.572609,3.442945,-3.889290,6.215983,-9.237671,-8.102348,-6.736273,-0.645315,7.077563,4.737755,2.802274,7.863100,-4.306199,-0.026861,-8.697730,8.943723,-4.542385,1.656196,-3.593923,7.011668,3.232596,-2.096444,2.710522,-9.799759,6.967200,-4.451838,-7.735348,0.685382,-9.237795,-8.686223,-7.790112,9.660709,-3.429852,1.736550,2.589904,4.286227,0.551650,9.757905,-9.950493,1.416063,3.326167,-8.317360,2.566876,8.731514,-7.136742,-9.672803,1.706402,5.218628,-8.813273,-2.782226,-8.591377,-0.702689,1.290459,-6.038234,-9.734100,-3.432638,1.426161,3.832643,-7.886565,9.636290,-9.647081,7.234396,9.478088,1.336872,5.408196,-3.521077,1.504417,0.100986,-7.561535,-4.594553,5.383676,-1.017773,2.694665,-2.092869,-6.722422,-2.395295,8.484547,6.510685,5.067548,0.381860,-8.447797,-2.122610,-5.021406,4.118192,5.548449,1.823516,-6.374587,-7.437673,7.433257,2.735618,-5.998804,-1.582040,1.316396,-5.813483,-5.258832,4.152732,7.735142,-8.066273,-2.207960,-3.334742,0.983078,-0.218923,-2.511333,-9.560297,6.803290,2.966532,8.042942,-6.266076,0.716009,8.957931,-5.087647,3.820628,-2.762063,9.737712,3.100045,7.991661,-0.744299,-7.374070,-0.865687,-8.769372,-0.717929,9.955733,-6.619706,-1.653090,-6.316409,8.706032,-8.402724,6.877132,0.197308,7.903315,-3.403378,3.858178,9.465674,3.862231,-5.492042,1.911339,-4.800374,6.925216,-1.610151,-5.204105,8.988781,9.732303,-3.381069,0.618419,-1.883674,-7.623939,1.326025,5.755620,4.420219,-4.184077,-1.963546,-2.146708,-9.206789,3.632018,9.059780,3.376787,-4.769674,5.438814,4.689392,-8.231320,7.813451,7.292943,-2.537550,4.202907,3.391952,-2.639402,-6.268424,-6.911958,-9.804327,5.469315,-3.218148,-4.845063,-5.299143,5.701193,-7.125770,5.063938,7.096173,-7.642990,1.026070,4.757411,1.646742,-9.756574,2.867080,-0.361699,4.921594,9.404621,1.422854,-1.577235,1.655936,5.360035,0.999652,-3.987006,4.769743,-8.816894,-0.993643,-6.025876,6.646827,1.941686,4.304874,-3.935385,-4.363096,-7.877876,-4.962674,0.757092,5.234144,6.658363,3.695637,3.045905,0.720681,2.573286,8.471743,6.535551,-9.567068,3.346062,8.657530,-1.302079,-5.887769,3.531928,3.078554,-3.152434,9.633106,0.873927,0.846827,-3.952029,7.779116,7.695822,0.175331,9.112636,9.571873,4.232160,6.061289,-5.660728,1.841634,-5.039261,-6.763189,3.612340,-4.444959,-5.763154,4.705091,-6.384292,-1.723643,2.510264,0.172948,-9.917297,-7.020152,7.083520,3.868289,3.763906,0.395003,-5.730937,-9.658179,8.814388,-2.451286,5.384677,-0.597215,-5.138464,8.671503,-1.466512,2.126412,0.503344,7.326747,1.394850,7.998927,4.261298,-9.436342,-0.624838,1.669024,7.418837,-2.381122,1.536693,0.861283,9.121579,9.502954,4.404550,-6.340224,-7.273589,9.206225,4.341444,-4.450967,3.619935,-4.049783,-8.276486,3.215439,6.933815,-9.467357,7.617677,6.739790,-6.463324,-9.777467,1.241175,-5.634613,-5.979572,0.963742,-1.864513,-9.936414,-6.865901,-0.866043,-8.018187,-0.673897,4.942178,-8.198413,-2.212777,4.787054,3.198657,-4.791032,8.812685,-8.855516,-1.554315,4.500152,-8.055704,-7.508032,-6.027846,6.180727,3.070824,-6.695449,-8.228293,2.289914,-5.054101,2.175481,-7.707493,-4.960233,-4.342417,-8.307345,-2.636139,-4.422040,4.389945,8.089329,7.596843,9.376380,8.399439,6.074499,-7.445877,-5.325967,3.926441,-4.736433,-8.443076,3.589129,-8.625827,9.671503,3.520487,3.691844,2.053434,-3.159552,8.401459,1.617359,-8.357654,-5.606780,0.990028,3.724809,-0.362549,-6.294781,6.649874,7.959287,1.818061,-8.614639,-0.226596,-5.486923,7.999979,-8.489775,-9.865769,9.298598,-3.268158,3.360756,-2.565349,4.894822,3.561642,9.029226,6.409363,-3.822370,-9.560734,-2.643626,-5.382840,-2.150690,0.984821,-8.291813,-2.078092,-8.036141,6.787125,-7.558177,4.990406,-0.103863,1.821908,8.938106,-4.504796,-6.591840,-6.283204,-0.192700,4.956232,-6.666246,7.229689,-1.150455,-7.309261,7.673164,-7.932687,-9.018451,4.829958,-8.027916,-1.820806,7.645289,9.945563,0.773974,-0.947300,-6.799888,-8.224520,8.107838,1.840157,8.501078,-7.401186,9.196733,-3.269380,-7.164024,-4.246101,8.617796,-7.801575,-4.112960,-0.338970,-9.801631,3.461080,-3.906423,3.791140,5.697941,0.414498,6.483127,3.385047,-1.024808,-5.163649,4.605628,-0.398295,9.611830,-4.072586,-7.301973,-6.738876,5.315084,-4.230750,6.007679,6.053275,-1.002370,-3.850177,4.493951,2.697156,7.108075,-4.365070,-3.442274,3.235551,-3.867375,9.026019,-7.734127,6.104654,1.021948,9.511072,0.031581,-5.722919,6.397628,4.250224,-6.170888,7.129494,-9.833966,0.464606,-9.144677,2.929804,-4.087906,0.751018,-3.027860,-8.046197,-1.085905,-3.814244,1.588741,-8.623970,6.149605,2.930160,-3.585580,-3.851044,-9.753526,7.724548,-2.741680,2.530790,-4.929397,-7.066085,5.026615,-5.404418,-8.534661,-6.767949,6.639591,6.001969,-2.996156,2.785043,9.716578,-6.349303,3.663728,-5.594532,-6.883156,-1.808804,-5.772576,7.491549,2.825180,-9.017300,-2.453905,0.683678,7.443991,4.411059,4.094113,-3.900154,-5.339783,8.125155,-9.163630,7.442843,7.556373,6.471936,-8.664739,-6.056410,8.834026,-7.396308,4.055315,3.265059,-9.944735,-8.455448,0.342871,-3.799278,5.678800,4.331354,0.663972,-3.456581,-6.077584,-3.735167,-9.954218,8.117047,3.168745,-2.773191,2.081326,4.377200,-2.068605,-6.729246,-8.984466,3.650460,-8.731203,-2.927009,7.893905,-9.467738,-0.375643,8.920508,1.253965,-2.462146,-8.845488,3.966327,1.983228,1.594158,1.371876,6.425123,-5.205615,1.834689,-6.845926,-6.471614,1.132814,2.258592,4.559460,-3.955243,6.731528,-0.235695,1.044104,-7.815633,-0.531224,-3.541878,4.116061,-3.235352,-6.181334,-3.744765,5.023538,5.669592,1.269725,-0.255558,9.136979,-6.108003,-6.351986,-8.151992,-9.358951,-2.085513,-7.168954,-4.134480,-2.133607,6.396877,6.063295,3.578317,-1.382019,1.192712,-2.722306,-3.983757,-4.175384,-7.347758,6.015718,7.217278,7.557602,0.600973,-1.587380,8.691011,-2.363427,-5.064209,-0.253963,-2.444793,-0.123059,0.447396,4.701433,-6.543602,-1.551972,-6.361682,1.762787,4.556226,6.314521,-1.224256,6.372531,8.210060,-4.453066,9.609277,1.554939,4.528009,9.449203,-5.721628,-0.461465,-9.614651,-4.953429,1.445129,-0.984462,-1.383368,8.525808,-7.518312,4.591304,-7.861762,4.216206,-5.156971,0.271846,-9.876214,-2.756259,0.211326,8.223626,8.610514,6.704384,5.108855,-4.497136,2.256720,-6.798204,-5.914528,9.814697,2.422778,-1.810051,-4.445752,7.808743,-2.001964,1.332084,-9.053692,5.302839,-2.231161,-3.606097,1.624982,-0.768171,-0.279751,-1.605688,-7.946079,0.240893,-3.098874,1.483349,7.494976,7.486366,3.418462,-4.575157,1.238343,6.248560,-6.964400,5.215253,-3.071123,-9.484890,-4.695331,4.954879,3.905849,-2.497414,-9.389492,-0.544086,-4.739776,5.786736,-5.230701,1.982689,-4.518368,-0.133700,5.606881,-1.053128,0.093944,-9.271425,4.485993,-4.194044,2.435900,-4.820305,-4.033242,3.306218,-6.900677,-6.630122,-4.227269,-6.081777,1.324230,7.767179,-8.410331,-2.764126,4.392288,3.813325,9.494153,5.805516,-9.058744,-8.385175,-1.734927,1.970106,3.293390,7.294944,7.014807,-0.652189,-7.357031,7.940417,1.869446,-5.433255,1.640497,1.415640,0.269402,3.185303,-7.617864,0.982390,7.144163,4.347802,-2.328964,7.072809,-6.809464,-8.580460,8.028983,4.875544,-8.460022,8.520407,7.207478,-8.524026,8.143614,-2.112849,6.424751,-9.074502,-6.782160,8.513417,4.295686,-4.791213,-2.111953,-2.638686,1.354930,-4.835562,-6.083993,8.272856,-4.707764,-7.110323,4.968655,0.365046,-6.473567,3.519429,6.497702,-9.912146,2.759962,-2.979080,7.753743,-9.525373,-6.387630,-8.313877,-4.557355,-7.441836,0.971908,9.454162,6.325808,-9.258298,-7.411321,-9.897644,-2.729872,-2.704563,-6.842925,-8.022924,-1.614146,-9.506479,2.740866,0.070976,-8.972257,8.818032,-1.553314,-2.680388,5.458808,-2.721085,-4.843701,-5.047289,6.556151,3.549934,2.376288,3.304001,-2.127494,3.833529,3.723834,0.626681,-5.300567,1.410137,5.511931,1.134962,-4.038811,6.993114,-1.723141,-0.042842,-9.718168,5.879275,5.650515,2.774518,-6.530094,0.483798,7.843623,9.163382,9.027562,3.105378,-0.935564,-8.878849,-0.718606,-6.218254,7.645973,-7.223141,-6.763863,1.273323,-8.539070,1.342432,4.074033,-7.336201,7.597952,4.890508,1.886781,-9.115391,1.388765,-1.322487,-2.761345,-1.533263,8.934911,5.860562,9.562264,8.529214,-3.083912,-8.938208,-7.847770,-6.714784,0.715944,-9.083113,-3.593969,-3.831198,9.374189,1.021429,1.877051,0.941455,-8.676399,-0.715206,-3.622218,-6.771247,-8.852247,-1.632735,2.369868,3.226347,-5.762028,0.418789,-1.521680,-3.445469,3.503206,6.307141,-1.642696,5.035036,8.535214,-0.755150,-6.208726,-4.373682,0.952794,6.117958,-4.098509,0.206279,-0.582525,5.138718,8.407224,4.436844,-9.822628,5.022171,1.083668,8.203710,8.932165,-6.889775,-2.096985,-3.515646,-2.064278,6.687120,-5.910603,2.587131,2.293350,8.558008,8.738358,9.150282,3.952033,-8.427810,-8.529263,-6.103471,3.725735,1.449356,7.245215,2.506632,9.427865,-7.859534,-8.736807,-5.818065,4.806743,-1.553817,-9.746288,-6.353180,-1.874281,6.608694,-9.917796,-1.530278,-9.584191,-9.877043,-4.621009,1.925860,-1.612447,1.804861,-1.123349,-1.031536,-3.769779,-3.053387,8.465361,-3.566980,4.933539,-0.735239,7.352703,6.891439,-1.587699], dtype = "float64")#candidate|8345|(1274,)|const|float64
call_8342 = relay.TupleGetItem(func_771_call(relay.reshape(const_8343.astype('float32'), [14, 12, 8]), relay.reshape(const_8343.astype('float32'), [14, 12, 8]), relay.reshape(var_8344.astype('uint8'), [390, 1]), relay.reshape(const_8345.astype('float64'), [1274,]), ), 4)
call_8346 = relay.TupleGetItem(func_776_call(relay.reshape(const_8343.astype('float32'), [14, 12, 8]), relay.reshape(const_8343.astype('float32'), [14, 12, 8]), relay.reshape(var_8344.astype('uint8'), [390, 1]), relay.reshape(const_8345.astype('float64'), [1274,]), ), 4)
output = relay.Tuple([call_8319,call_8342,const_8343,var_8344,const_8345,])
output2 = relay.Tuple([call_8320,call_8346,const_8343,var_8344,const_8345,])
func_8351 = relay.Function([var_8344,], output)
mod['func_8351'] = func_8351
mod = relay.transform.InferType()(mod)
var_8352 = relay.var("var_8352", dtype = "uint8", shape = (390, 1))#candidate|8352|(390, 1)|var|uint8
output = func_8351(var_8352)
func_8353 = relay.Function([var_8352], output)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8367 = relay.const([[8.024393,-5.042804],[2.994760,2.291432],[-9.293391,-1.495603],[-9.317276,4.004220],[-9.712673,1.199069],[5.841546,7.658356],[7.026271,6.702569],[-3.800588,-2.527542],[0.187418,8.579177],[3.682062,1.756668],[1.724315,8.056607],[-0.218968,-9.752319],[-0.610186,-4.426925]], dtype = "float64")#candidate|8367|(13, 2)|const|float64
uop_8368 = relay.asinh(const_8367.astype('float64')) # shape=(13, 2)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_8370 = func_4514_call()
call_8371 = func_4514_call()
func_7951_call = mod.get_global_var('func_7951')
func_7953_call = mutated_mod.get_global_var('func_7953')
call_8381 = relay.TupleGetItem(func_7951_call(), 0)
call_8382 = relay.TupleGetItem(func_7953_call(), 0)
output = relay.Tuple([uop_8368,call_8370,call_8381,])
output2 = relay.Tuple([uop_8368,call_8371,call_8382,])
func_8388 = relay.Function([], output)
mod['func_8388'] = func_8388
mod = relay.transform.InferType()(mod)
output = func_8388()
func_8389 = relay.Function([], output)
mutated_mod['func_8389'] = func_8389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_8477 = relay.TupleGetItem(func_5412_call(), 0)
call_8478 = relay.TupleGetItem(func_5414_call(), 0)
func_4992_call = mod.get_global_var('func_4992')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_8489 = relay.TupleGetItem(func_4992_call(), 1)
call_8490 = relay.TupleGetItem(func_4993_call(), 1)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_8496 = relay.TupleGetItem(func_2686_call(), 1)
call_8497 = relay.TupleGetItem(func_2688_call(), 1)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_8505 = relay.TupleGetItem(func_2686_call(), 1)
call_8506 = relay.TupleGetItem(func_2688_call(), 1)
func_3219_call = mod.get_global_var('func_3219')
func_3222_call = mutated_mod.get_global_var('func_3222')
var_8511 = relay.var("var_8511", dtype = "float32", shape = (132, 20))#candidate|8511|(132, 20)|var|float32
call_8510 = relay.TupleGetItem(func_3219_call(relay.reshape(var_8511.astype('float32'), [2640,])), 0)
call_8512 = relay.TupleGetItem(func_3222_call(relay.reshape(var_8511.astype('float32'), [2640,])), 0)
output = relay.Tuple([call_8477,call_8489,call_8496,call_8505,call_8510,var_8511,])
output2 = relay.Tuple([call_8478,call_8490,call_8497,call_8506,call_8512,var_8511,])
func_8518 = relay.Function([var_8511,], output)
mod['func_8518'] = func_8518
mod = relay.transform.InferType()(mod)
mutated_mod['func_8518'] = func_8518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8519 = relay.var("var_8519", dtype = "float32", shape = (132, 20))#candidate|8519|(132, 20)|var|float32
func_8518_call = mutated_mod.get_global_var('func_8518')
call_8520 = func_8518_call(var_8519)
output = call_8520
func_8521 = relay.Function([var_8519], output)
mutated_mod['func_8521'] = func_8521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8535 = relay.var("var_8535", dtype = "uint8", shape = (10, 6, 1))#candidate|8535|(10, 6, 1)|var|uint8
const_8536 = relay.const([[[2,-9,-6,5],[9,-7,10,3],[5,-5,-4,6],[6,-3,-10,6],[-10,-6,-3,-8],[-9,-3,10,-9]],[[4,3,-6,7],[10,7,-10,-3],[-10,-7,-2,-5],[7,-9,2,3],[-1,3,7,1],[10,9,-1,-2]],[[-3,-3,-3,5],[-4,8,4,3],[10,-5,8,6],[4,-9,2,-7],[10,2,-10,-5],[3,2,7,-3]],[[5,-5,5,-2],[1,-5,3,-7],[-6,8,6,-10],[-5,4,-10,-10],[-8,8,10,-2],[1,1,-3,-9]],[[-9,-3,-10,-4],[5,-8,7,-8],[5,-8,-5,-4],[-2,-2,-7,-4],[-8,1,-9,-3],[-5,9,-1,8]],[[-4,10,9,-6],[3,5,-9,-6],[7,-4,-4,-3],[10,-2,-1,-8],[9,4,4,-10],[-6,-4,-6,-1]],[[-10,9,4,3],[-4,-6,5,9],[1,-3,-1,-1],[10,1,6,8],[7,-9,9,-6],[7,7,-7,8]],[[-10,-5,6,10],[-1,-3,-5,2],[10,4,3,4],[5,4,10,1],[6,2,4,-7],[5,4,3,-3]],[[-9,-2,-8,-4],[10,4,-3,1],[-3,-9,-7,3],[-8,-1,3,4],[10,4,-4,8],[8,5,8,-9]],[[1,7,-8,-9],[7,7,-3,-2],[9,-10,6,-7],[1,-4,-8,-10],[-2,-6,-9,-9],[6,-6,9,3]]], dtype = "uint8")#candidate|8536|(10, 6, 4)|const|uint8
bop_8537 = relay.bitwise_and(var_8535.astype('uint8'), const_8536.astype('uint8')) # shape=(10, 6, 4)
output = bop_8537
output2 = bop_8537
func_8560 = relay.Function([var_8535,], output)
mod['func_8560'] = func_8560
mod = relay.transform.InferType()(mod)
mutated_mod['func_8560'] = func_8560
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8561 = relay.var("var_8561", dtype = "uint8", shape = (10, 6, 1))#candidate|8561|(10, 6, 1)|var|uint8
func_8560_call = mutated_mod.get_global_var('func_8560')
call_8562 = func_8560_call(var_8561)
output = call_8562
func_8563 = relay.Function([var_8561], output)
mutated_mod['func_8563'] = func_8563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_8585 = func_2428_call()
call_8586 = func_2428_call()
func_8201_call = mod.get_global_var('func_8201')
func_8202_call = mutated_mod.get_global_var('func_8202')
call_8597 = func_8201_call()
call_8598 = func_8201_call()
output = relay.Tuple([call_8585,call_8597,])
output2 = relay.Tuple([call_8586,call_8598,])
func_8630 = relay.Function([], output)
mod['func_8630'] = func_8630
mod = relay.transform.InferType()(mod)
output = func_8630()
func_8631 = relay.Function([], output)
mutated_mod['func_8631'] = func_8631
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8640 = relay.const([[[10,3,2,-6,-8,8,8,5],[-7,-6,9,8,-1,6,-1,-1],[2,8,8,8,8,-5,-9,-2],[1,3,8,-1,-2,-9,1,5],[-6,7,6,-1,1,-3,-6,-9],[7,-8,-5,-3,8,-9,2,2],[6,-3,5,9,9,10,-8,-4],[-1,7,-3,-3,2,2,8,3],[3,8,-9,-8,8,-4,7,1],[-2,5,9,-8,2,5,4,-5],[2,-9,-2,-9,-4,-7,3,-10],[6,-2,-5,-4,-2,8,6,7]]], dtype = "uint8")#candidate|8640|(1, 12, 8)|const|uint8
var_8641 = relay.var("var_8641", dtype = "uint8", shape = (1, 12, 8))#candidate|8641|(1, 12, 8)|var|uint8
bop_8642 = relay.equal(const_8640.astype('bool'), relay.reshape(var_8641.astype('bool'), relay.shape_of(const_8640))) # shape=(1, 12, 8)
output = relay.Tuple([bop_8642,])
output2 = relay.Tuple([bop_8642,])
func_8652 = relay.Function([var_8641,], output)
mod['func_8652'] = func_8652
mod = relay.transform.InferType()(mod)
mutated_mod['func_8652'] = func_8652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8653 = relay.var("var_8653", dtype = "uint8", shape = (1, 12, 8))#candidate|8653|(1, 12, 8)|var|uint8
func_8652_call = mutated_mod.get_global_var('func_8652')
call_8654 = func_8652_call(var_8653)
output = call_8654
func_8655 = relay.Function([var_8653], output)
mutated_mod['func_8655'] = func_8655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mod.get_global_var('func_3313')
func_3315_call = mutated_mod.get_global_var('func_3315')
call_8721 = func_3313_call()
call_8722 = func_3313_call()
output = call_8721
output2 = call_8722
func_8731 = relay.Function([], output)
mod['func_8731'] = func_8731
mod = relay.transform.InferType()(mod)
mutated_mod['func_8731'] = func_8731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8731_call = mutated_mod.get_global_var('func_8731')
call_8732 = func_8731_call()
output = call_8732
func_8733 = relay.Function([], output)
mutated_mod['func_8733'] = func_8733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6424_call = mod.get_global_var('func_6424')
func_6425_call = mutated_mod.get_global_var('func_6425')
call_8807 = relay.TupleGetItem(func_6424_call(), 1)
call_8808 = relay.TupleGetItem(func_6425_call(), 1)
output = relay.Tuple([call_8807,])
output2 = relay.Tuple([call_8808,])
func_8812 = relay.Function([], output)
mod['func_8812'] = func_8812
mod = relay.transform.InferType()(mod)
mutated_mod['func_8812'] = func_8812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8812_call = mutated_mod.get_global_var('func_8812')
call_8813 = func_8812_call()
output = call_8813
func_8814 = relay.Function([], output)
mutated_mod['func_8814'] = func_8814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7021_call = mod.get_global_var('func_7021')
func_7022_call = mutated_mod.get_global_var('func_7022')
call_8815 = func_7021_call()
call_8816 = func_7021_call()
func_340_call = mod.get_global_var('func_340')
func_343_call = mutated_mod.get_global_var('func_343')
var_8820 = relay.var("var_8820", dtype = "int8", shape = (528,))#candidate|8820|(528,)|var|int8
var_8821 = relay.var("var_8821", dtype = "uint8", shape = (390,))#candidate|8821|(390,)|var|uint8
call_8819 = relay.TupleGetItem(func_340_call(relay.reshape(var_8820.astype('int8'), [8, 6, 11]), relay.reshape(var_8821.astype('uint8'), [195, 2]), ), 0)
call_8822 = relay.TupleGetItem(func_343_call(relay.reshape(var_8820.astype('int8'), [8, 6, 11]), relay.reshape(var_8821.astype('uint8'), [195, 2]), ), 0)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_8823 = relay.TupleGetItem(func_5709_call(), 0)
call_8824 = relay.TupleGetItem(func_5710_call(), 0)
output = relay.Tuple([call_8815,call_8819,var_8820,var_8821,call_8823,])
output2 = relay.Tuple([call_8816,call_8822,var_8820,var_8821,call_8824,])
func_8849 = relay.Function([var_8820,var_8821,], output)
mod['func_8849'] = func_8849
mod = relay.transform.InferType()(mod)
var_8850 = relay.var("var_8850", dtype = "int8", shape = (528,))#candidate|8850|(528,)|var|int8
var_8851 = relay.var("var_8851", dtype = "uint8", shape = (390,))#candidate|8851|(390,)|var|uint8
output = func_8849(var_8850,var_8851,)
func_8852 = relay.Function([var_8850,var_8851,], output)
mutated_mod['func_8852'] = func_8852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_8889 = func_2428_call()
call_8890 = func_2428_call()
output = call_8889
output2 = call_8890
func_8892 = relay.Function([], output)
mod['func_8892'] = func_8892
mod = relay.transform.InferType()(mod)
mutated_mod['func_8892'] = func_8892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mutated_mod.get_global_var('func_8892')
call_8893 = func_8892_call()
output = call_8893
func_8894 = relay.Function([], output)
mutated_mod['func_8894'] = func_8894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_8898 = relay.TupleGetItem(func_1896_call(), 1)
call_8899 = relay.TupleGetItem(func_1897_call(), 1)
func_4592_call = mod.get_global_var('func_4592')
func_4594_call = mutated_mod.get_global_var('func_4594')
var_8906 = relay.var("var_8906", dtype = "float64", shape = (24, 10))#candidate|8906|(24, 10)|var|float64
call_8905 = relay.TupleGetItem(func_4592_call(relay.reshape(var_8906.astype('float64'), [4, 60])), 2)
call_8907 = relay.TupleGetItem(func_4594_call(relay.reshape(var_8906.astype('float64'), [4, 60])), 2)
output = relay.Tuple([call_8898,call_8905,var_8906,])
output2 = relay.Tuple([call_8899,call_8907,var_8906,])
func_8920 = relay.Function([var_8906,], output)
mod['func_8920'] = func_8920
mod = relay.transform.InferType()(mod)
mutated_mod['func_8920'] = func_8920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8921 = relay.var("var_8921", dtype = "float64", shape = (24, 10))#candidate|8921|(24, 10)|var|float64
func_8920_call = mutated_mod.get_global_var('func_8920')
call_8922 = func_8920_call(var_8921)
output = call_8922
func_8923 = relay.Function([var_8921], output)
mutated_mod['func_8923'] = func_8923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mod.get_global_var('func_3313')
func_3315_call = mutated_mod.get_global_var('func_3315')
call_8934 = func_3313_call()
call_8935 = func_3313_call()
output = relay.Tuple([call_8934,])
output2 = relay.Tuple([call_8935,])
func_8941 = relay.Function([], output)
mod['func_8941'] = func_8941
mod = relay.transform.InferType()(mod)
output = func_8941()
func_8942 = relay.Function([], output)
mutated_mod['func_8942'] = func_8942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6122_call = mod.get_global_var('func_6122')
func_6124_call = mutated_mod.get_global_var('func_6124')
call_8976 = relay.TupleGetItem(func_6122_call(), 0)
call_8977 = relay.TupleGetItem(func_6124_call(), 0)
func_5092_call = mod.get_global_var('func_5092')
func_5095_call = mutated_mod.get_global_var('func_5095')
var_8979 = relay.var("var_8979", dtype = "uint8", shape = (390,))#candidate|8979|(390,)|var|uint8
call_8978 = relay.TupleGetItem(func_5092_call(relay.reshape(var_8979.astype('uint8'), [390,])), 2)
call_8980 = relay.TupleGetItem(func_5095_call(relay.reshape(var_8979.astype('uint8'), [390,])), 2)
output = relay.Tuple([call_8976,call_8978,var_8979,])
output2 = relay.Tuple([call_8977,call_8980,var_8979,])
func_8989 = relay.Function([var_8979,], output)
mod['func_8989'] = func_8989
mod = relay.transform.InferType()(mod)
var_8990 = relay.var("var_8990", dtype = "uint8", shape = (390,))#candidate|8990|(390,)|var|uint8
output = func_8989(var_8990)
func_8991 = relay.Function([var_8990], output)
mutated_mod['func_8991'] = func_8991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7927_call = mod.get_global_var('func_7927')
func_7928_call = mutated_mod.get_global_var('func_7928')
call_9006 = relay.TupleGetItem(func_7927_call(), 0)
call_9007 = relay.TupleGetItem(func_7928_call(), 0)
output = call_9006
output2 = call_9007
func_9029 = relay.Function([], output)
mod['func_9029'] = func_9029
mod = relay.transform.InferType()(mod)
output = func_9029()
func_9030 = relay.Function([], output)
mutated_mod['func_9030'] = func_9030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_9031 = relay.TupleGetItem(func_2373_call(), 0)
call_9032 = relay.TupleGetItem(func_2375_call(), 0)
output = call_9031
output2 = call_9032
func_9034 = relay.Function([], output)
mod['func_9034'] = func_9034
mod = relay.transform.InferType()(mod)
output = func_9034()
func_9035 = relay.Function([], output)
mutated_mod['func_9035'] = func_9035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2428_call = mod.get_global_var('func_2428')
func_2430_call = mutated_mod.get_global_var('func_2430')
call_9057 = func_2428_call()
call_9058 = func_2428_call()
output = call_9057
output2 = call_9058
func_9059 = relay.Function([], output)
mod['func_9059'] = func_9059
mod = relay.transform.InferType()(mod)
output = func_9059()
func_9060 = relay.Function([], output)
mutated_mod['func_9060'] = func_9060
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9069 = relay.const([[[2.887488,8.074887,-9.310864,3.060182,9.520591,-5.955316,-9.225575,-9.683422,9.737622,-1.985536,-9.466627],[0.158063,1.905072,5.739668,-5.453053,3.733164,2.313873,0.513059,6.352211,-3.997002,-7.944297,4.809434],[0.028898,3.973261,-5.738658,-5.389498,-1.263327,5.808842,1.587234,4.080007,9.778719,4.616878,1.857835],[-7.397275,8.811133,2.883943,-2.807770,-1.087419,3.970681,-8.167072,8.256437,-7.693809,-9.327474,-7.576958],[-9.121170,2.259741,-4.845213,-7.919112,4.651599,-8.290893,4.468818,-8.985325,-1.521701,0.195608,9.578615]],[[2.297514,7.194093,-3.279905,1.297965,2.102022,-8.456251,2.962414,7.942643,7.530401,-3.109355,9.449835],[1.989900,4.716485,-8.184759,7.574219,6.432539,1.683105,-6.724658,-9.953026,-7.954221,1.697462,6.118088],[8.088669,8.350940,7.881703,-3.004343,4.412616,3.324360,0.754330,-1.685869,4.377694,6.230178,-0.676527],[-3.892864,5.123310,-9.041039,-0.186071,1.233386,-4.618838,-1.623279,-4.850043,-2.042920,-5.438070,7.356315],[9.878891,9.157025,0.209327,0.090399,-5.850605,-7.294907,-2.352928,6.841600,-7.919045,-1.790200,9.876882]],[[7.775457,3.372063,0.660609,7.351228,5.062916,-9.685000,7.188098,5.741186,9.864951,-4.279600,9.585737],[-3.870197,8.312238,4.497060,2.349844,-5.547383,6.940378,-7.890087,-0.634987,6.757392,1.493185,-3.951511],[0.306643,8.752668,5.080630,-7.977146,2.814618,8.633561,-2.360560,-7.785618,0.511678,-0.002486,3.052053],[-4.870468,-7.546574,2.749171,7.198051,-7.724420,-7.494147,-9.024667,2.424758,-3.550244,0.765774,-8.505268],[1.935580,-7.831237,7.360309,8.713151,3.271899,-0.639483,4.785954,7.201756,4.489954,9.571006,-8.412373]],[[-7.794803,-8.109034,-5.086021,-4.745205,7.700105,5.200387,3.635896,-1.390769,0.580397,-3.127770,3.236051],[-8.287085,-5.331451,-9.990221,4.461002,2.645577,5.295430,-8.664195,-1.075279,-5.865308,-2.969665,0.493897],[-4.702492,-2.601697,0.852453,-0.409085,-4.479132,-2.152962,-9.776712,-1.864125,6.016906,0.556634,-5.353673],[-3.131603,1.755772,-0.629009,-4.250124,2.029315,-1.217115,9.340956,-0.338954,-0.920426,-3.964124,8.152398],[-3.849477,-5.888455,-3.719807,-2.542778,7.853812,7.895904,9.978194,4.478463,8.676686,-2.744736,-9.533385]],[[3.886645,0.368159,-8.305131,-3.233714,8.476329,3.497136,-3.051027,0.257614,-2.118520,8.801091,8.038406],[-9.856304,3.123821,1.583780,7.001766,4.389893,-0.751863,-5.207208,-1.436990,1.419290,7.957334,1.999549],[-3.334956,-8.423838,0.194389,-1.862114,-2.099845,1.480769,-6.013031,-2.030847,9.119532,-1.059149,-8.075594],[-8.471667,-3.582797,-8.869004,-8.691862,0.240054,6.885680,-3.305224,-5.443695,0.381262,9.923163,-5.678905],[-6.169795,2.971474,-9.253752,2.489424,-0.471596,6.619197,5.852077,6.925588,8.556529,-8.098799,-0.343129]],[[9.840970,2.625348,-6.718326,-8.566749,-3.977155,9.827937,-6.423752,-4.882038,-4.853046,1.110783,1.500908],[-1.957882,-9.043874,3.870047,-1.811090,2.992697,-4.163198,-9.751882,5.949077,6.723496,6.554619,8.710724],[-5.770187,-6.631909,6.887299,-5.654083,-4.438922,6.292231,-6.097586,-4.728618,-3.716923,0.006760,-3.662886],[9.756622,-5.530261,-9.983594,7.194924,8.483431,0.886105,8.776874,5.865329,5.319131,-5.261914,-8.876963],[5.711820,9.086432,9.492894,1.582480,-9.766980,0.277947,9.769124,2.450201,-9.587374,2.444244,-3.583109]],[[-4.620224,-7.159515,8.995059,-2.951643,-1.025796,-2.003972,1.681544,-7.369844,-1.635102,-6.815899,6.413847],[9.821235,-8.121342,8.360159,1.191645,-4.344432,6.449161,4.294098,5.864352,-2.457702,3.243528,3.128571],[-0.901479,5.833932,1.932170,7.449342,-1.351687,2.561870,-1.790212,-7.268423,-1.941926,2.873205,8.822689],[-4.150377,-0.467592,-5.568250,-6.785381,-0.270790,9.886030,6.474780,9.296463,7.264946,1.053837,4.413842],[6.543402,3.089408,-4.822649,9.111129,5.002024,5.701900,0.561315,8.610028,0.599865,-0.967794,-3.570419]],[[5.763863,-2.220795,9.387586,8.100412,9.493965,-7.942337,-8.997342,3.255255,-3.810142,-2.104936,-5.083262],[-4.187688,5.175193,-6.937797,-4.992406,7.229479,-7.644204,4.507638,9.488564,-4.812987,0.326222,0.874326],[-1.471327,-7.109705,7.873420,-3.989853,-9.921814,3.049649,-8.208744,4.861925,-8.533689,6.510836,7.789425],[-7.286864,2.423140,9.869705,6.996478,8.638782,-1.372945,6.993341,-9.900053,2.320950,-0.898903,-3.568899],[-1.841726,9.113857,-1.852308,-5.491736,0.220742,-0.588466,9.144830,-8.966961,-1.252687,-9.473304,2.373377]],[[-4.168683,7.264912,-4.702884,-1.695571,8.674931,-6.205979,-8.012620,7.491039,-7.411910,6.236583,0.171093],[7.872593,-9.629599,7.139789,-6.262963,-5.347346,-3.934415,-8.333992,7.365450,0.961185,-9.924369,9.379263],[-3.471493,3.132024,-4.313504,2.147595,5.152322,9.777882,-0.555313,6.459410,3.134150,1.804232,4.292495],[-8.238763,4.811514,2.876108,8.590751,-8.606820,4.956186,6.848541,-8.375537,-3.943659,8.719153,4.102406],[-2.979016,-5.965320,-8.287402,-4.399861,6.184020,-8.386241,-2.061434,-4.187267,8.107197,-3.441923,-3.228719]],[[-1.757171,-8.485958,9.553002,-5.521543,-5.088498,0.783884,-7.125961,-0.638141,2.140820,9.739214,-1.835290],[-8.140174,7.264941,2.416464,-8.537119,1.873704,9.626918,9.188818,4.412524,5.192343,9.202433,-8.387476],[9.168627,-0.666767,1.988526,-6.344661,6.291776,-1.325001,-4.852439,-9.684511,-8.950784,7.808507,-2.437237],[-2.895215,-1.761653,1.110808,-2.354187,2.142094,-0.565701,-6.606926,5.013329,-1.807834,0.039177,-2.126132],[-0.981516,9.207593,-8.586388,-1.900342,4.189780,5.828822,8.076499,9.825107,-1.928946,1.096170,-1.121322]],[[-2.872949,-9.248891,7.638368,-2.420395,-8.467229,-8.581705,0.188480,-5.603694,2.634708,-2.206311,-2.394624],[2.881309,0.278401,-6.002643,4.194717,-8.541746,3.164301,-2.031504,3.859290,-4.646763,2.289943,9.999251],[4.548415,7.002724,6.206142,0.491364,6.153683,-4.026845,5.651776,8.858599,2.811822,-0.375150,-1.177916],[1.128000,3.355413,7.041032,7.583837,1.625299,7.974687,9.204001,-9.555831,-4.234949,-6.919017,-1.428625],[7.730647,-3.580106,-5.833348,9.779109,9.291609,-3.938620,-5.054238,5.084049,-2.897511,6.852418,7.260839]],[[-9.953089,0.290677,1.810915,9.505726,9.626558,0.253258,-8.409390,6.410977,1.404405,-7.178639,9.810855],[8.134299,-7.212437,-1.288791,5.135576,9.335236,2.028104,-9.574307,-7.517888,6.377943,4.495159,2.426785],[-0.097058,0.286207,7.704833,7.311085,7.499703,9.882737,-7.905945,0.430205,-3.477454,4.546867,4.416640],[-9.731390,-0.128428,-2.279638,6.333361,2.944525,-6.267585,8.293903,-4.779141,-5.917043,2.647024,-5.496704],[4.509230,-1.530440,-3.675056,-0.038853,3.838879,9.003509,-8.495388,1.534395,3.527877,7.355293,-6.774203]]], dtype = "float32")#candidate|9069|(12, 5, 11)|const|float32
uop_9070 = relay.sqrt(const_9069.astype('float32')) # shape=(12, 5, 11)
output = relay.Tuple([uop_9070,])
output2 = relay.Tuple([uop_9070,])
func_9076 = relay.Function([], output)
mod['func_9076'] = func_9076
mod = relay.transform.InferType()(mod)
mutated_mod['func_9076'] = func_9076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9076_call = mutated_mod.get_global_var('func_9076')
call_9077 = func_9076_call()
output = call_9077
func_9078 = relay.Function([], output)
mutated_mod['func_9078'] = func_9078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9059_call = mod.get_global_var('func_9059')
func_9060_call = mutated_mod.get_global_var('func_9060')
call_9119 = func_9059_call()
call_9120 = func_9059_call()
output = relay.Tuple([call_9119,])
output2 = relay.Tuple([call_9120,])
func_9177 = relay.Function([], output)
mod['func_9177'] = func_9177
mod = relay.transform.InferType()(mod)
output = func_9177()
func_9178 = relay.Function([], output)
mutated_mod['func_9178'] = func_9178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7157_call = mod.get_global_var('func_7157')
func_7158_call = mutated_mod.get_global_var('func_7158')
call_9219 = relay.TupleGetItem(func_7157_call(), 3)
call_9220 = relay.TupleGetItem(func_7158_call(), 3)
func_4269_call = mod.get_global_var('func_4269')
func_4272_call = mutated_mod.get_global_var('func_4272')
var_9246 = relay.var("var_9246", dtype = "float32", shape = (48,))#candidate|9246|(48,)|var|float32
call_9245 = relay.TupleGetItem(func_4269_call(relay.reshape(var_9246.astype('float32'), [1, 8, 6]), relay.reshape(call_9219.astype('float64'), [4, 8, 6]), ), 2)
call_9247 = relay.TupleGetItem(func_4272_call(relay.reshape(var_9246.astype('float32'), [1, 8, 6]), relay.reshape(call_9219.astype('float64'), [4, 8, 6]), ), 2)
const_9249 = relay.const([[9.993473,-8.215106,2.447308,-6.299253,0.455829,-9.008282,-4.017103,-0.884768],[2.520485,-6.996091,0.215892,0.430504,-9.044750,-3.413719,-7.152904,-8.569005],[-1.301226,9.094354,-4.039926,-5.861848,6.820326,6.346156,1.304575,8.113373],[4.035964,8.396560,4.386148,0.861405,-2.373010,5.422964,4.903328,-1.678307],[-3.335243,1.006516,-0.367655,3.209098,-4.298056,4.293133,-2.751709,-3.656469],[-2.791302,-4.524166,0.402732,5.979028,4.662478,-5.328872,6.432723,4.471786],[-2.057835,-9.433946,-6.576992,9.200963,-6.011020,-7.467085,1.168377,7.500770],[9.803489,0.211385,2.618279,-7.445449,-4.699329,1.938959,-9.303782,1.395157],[6.028276,9.765752,2.524671,-6.725350,8.051233,-2.190033,-3.659672,-3.171292],[5.225089,-2.915431,3.952740,-0.384682,5.943892,3.248110,-6.979302,-2.525852],[-8.468787,5.018626,-3.258773,5.030853,-7.483852,-9.989391,6.033329,-0.753274],[1.963056,6.594333,-1.050775,-5.591406,5.460846,3.031132,-0.322802,5.836070],[5.853501,5.146348,8.687866,3.635598,-9.071775,-6.639245,-9.148302,0.630187],[8.705401,-9.158534,-0.634390,1.587315,-9.593285,8.170145,-0.315125,9.413640],[1.806300,-8.219218,-8.133743,-0.739513,9.522568,-6.850826,-3.718621,1.101834],[3.655841,3.977670,-5.008744,5.829755,0.647739,-9.097562,-6.242138,1.014570],[-4.307045,-6.959817,1.063208,3.993887,7.013344,-5.763798,7.050308,0.056147],[-8.967207,-2.842569,4.176586,8.109525,-0.833787,-2.059861,-0.863129,-3.104022],[9.817380,8.692350,-8.837604,-6.995797,-7.945373,6.258572,-7.770126,-4.438388],[3.395979,-6.309537,3.836922,0.652438,8.967845,-4.716886,6.854952,-8.572042],[6.624194,7.866708,-8.868303,9.446315,-0.355694,8.551207,1.517044,3.963984],[-3.507231,2.827938,-5.885314,-6.423858,-8.941146,2.187343,3.759683,6.389498],[4.868944,-7.352505,-9.959290,-6.461775,-9.131604,4.553414,-5.931434,-5.041825],[-5.041730,-6.849753,-4.565336,-9.264273,1.159721,-4.365559,1.585004,4.783120]], dtype = "float64")#candidate|9249|(24, 8)|const|float64
bop_9250 = relay.less(call_9219.astype('bool'), relay.reshape(const_9249.astype('bool'), relay.shape_of(call_9219))) # shape=(24, 8)
bop_9253 = relay.less(call_9220.astype('bool'), relay.reshape(const_9249.astype('bool'), relay.shape_of(call_9220))) # shape=(24, 8)
uop_9259 = relay.tan(const_9249.astype('float64')) # shape=(24, 8)
output = relay.Tuple([call_9245,var_9246,bop_9250,uop_9259,])
output2 = relay.Tuple([call_9247,var_9246,bop_9253,uop_9259,])
func_9264 = relay.Function([var_9246,], output)
mod['func_9264'] = func_9264
mod = relay.transform.InferType()(mod)
mutated_mod['func_9264'] = func_9264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9265 = relay.var("var_9265", dtype = "float32", shape = (48,))#candidate|9265|(48,)|var|float32
func_9264_call = mutated_mod.get_global_var('func_9264')
call_9266 = func_9264_call(var_9265)
output = call_9266
func_9267 = relay.Function([var_9265], output)
mutated_mod['func_9267'] = func_9267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4747_call = mod.get_global_var('func_4747')
func_4748_call = mutated_mod.get_global_var('func_4748')
call_9292 = relay.TupleGetItem(func_4747_call(), 0)
call_9293 = relay.TupleGetItem(func_4748_call(), 0)
output = relay.Tuple([call_9292,])
output2 = relay.Tuple([call_9293,])
func_9315 = relay.Function([], output)
mod['func_9315'] = func_9315
mod = relay.transform.InferType()(mod)
mutated_mod['func_9315'] = func_9315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9315_call = mutated_mod.get_global_var('func_9315')
call_9316 = func_9315_call()
output = call_9316
func_9317 = relay.Function([], output)
mutated_mod['func_9317'] = func_9317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3416_call = mod.get_global_var('func_3416')
func_3418_call = mutated_mod.get_global_var('func_3418')
call_9337 = relay.TupleGetItem(func_3416_call(), 0)
call_9338 = relay.TupleGetItem(func_3418_call(), 0)
output = call_9337
output2 = call_9338
func_9343 = relay.Function([], output)
mod['func_9343'] = func_9343
mod = relay.transform.InferType()(mod)
output = func_9343()
func_9344 = relay.Function([], output)
mutated_mod['func_9344'] = func_9344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8163_call = mod.get_global_var('func_8163')
func_8165_call = mutated_mod.get_global_var('func_8165')
call_9347 = relay.TupleGetItem(func_8163_call(), 1)
call_9348 = relay.TupleGetItem(func_8165_call(), 1)
output = call_9347
output2 = call_9348
func_9352 = relay.Function([], output)
mod['func_9352'] = func_9352
mod = relay.transform.InferType()(mod)
output = func_9352()
func_9353 = relay.Function([], output)
mutated_mod['func_9353'] = func_9353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_9412 = func_3388_call()
call_9413 = func_3388_call()
output = relay.Tuple([call_9412,])
output2 = relay.Tuple([call_9413,])
func_9428 = relay.Function([], output)
mod['func_9428'] = func_9428
mod = relay.transform.InferType()(mod)
output = func_9428()
func_9429 = relay.Function([], output)
mutated_mod['func_9429'] = func_9429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9432 = relay.var("var_9432", dtype = "int8", shape = ())#candidate|9432|()|var|int8
const_9433 = relay.const([[[6,-10,9]],[[-5,-9,-3]],[[-1,-9,8]],[[6,-9,2]],[[-8,4,5]],[[-5,3,2]]], dtype = "int8")#candidate|9433|(6, 1, 3)|const|int8
bop_9434 = relay.not_equal(var_9432.astype('bool'), const_9433.astype('bool')) # shape=(6, 1, 3)
output = relay.Tuple([bop_9434,])
output2 = relay.Tuple([bop_9434,])
func_9439 = relay.Function([var_9432,], output)
mod['func_9439'] = func_9439
mod = relay.transform.InferType()(mod)
mutated_mod['func_9439'] = func_9439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9440 = relay.var("var_9440", dtype = "int8", shape = ())#candidate|9440|()|var|int8
func_9439_call = mutated_mod.get_global_var('func_9439')
call_9441 = func_9439_call(var_9440)
output = call_9441
func_9442 = relay.Function([var_9440], output)
mutated_mod['func_9442'] = func_9442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7951_call = mod.get_global_var('func_7951')
func_7953_call = mutated_mod.get_global_var('func_7953')
call_9452 = relay.TupleGetItem(func_7951_call(), 0)
call_9453 = relay.TupleGetItem(func_7953_call(), 0)
output = relay.Tuple([call_9452,])
output2 = relay.Tuple([call_9453,])
func_9467 = relay.Function([], output)
mod['func_9467'] = func_9467
mod = relay.transform.InferType()(mod)
mutated_mod['func_9467'] = func_9467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9467_call = mutated_mod.get_global_var('func_9467')
call_9468 = func_9467_call()
output = call_9468
func_9469 = relay.Function([], output)
mutated_mod['func_9469'] = func_9469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6424_call = mod.get_global_var('func_6424')
func_6425_call = mutated_mod.get_global_var('func_6425')
call_9493 = relay.TupleGetItem(func_6424_call(), 2)
call_9494 = relay.TupleGetItem(func_6425_call(), 2)
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_9508 = relay.TupleGetItem(func_4670_call(), 0)
call_9509 = relay.TupleGetItem(func_4671_call(), 0)
func_6527_call = mod.get_global_var('func_6527')
func_6529_call = mutated_mod.get_global_var('func_6529')
const_9522 = relay.const([[5,9],[6,10],[4,-6],[3,1],[-6,-5],[-7,3],[-5,2],[4,5],[7,-1],[-9,4],[3,8],[8,6],[-10,2],[3,5],[-8,10],[-1,1],[-8,-5],[-1,8],[-9,-10],[8,2],[-6,-7],[-10,8],[9,1],[-2,10],[-3,5],[-3,6],[9,-10],[-1,-9],[7,-7],[-8,6],[-3,-9],[-7,5],[7,-4],[10,4],[-7,8],[-7,6],[-3,-2],[9,2],[4,9],[2,3],[-3,-2],[6,-4],[-10,-2],[1,10],[10,7],[-9,3],[10,-7],[5,6],[7,-3],[-1,8],[1,-8],[-8,6],[-10,9],[-4,5],[6,10],[1,1],[1,-3],[-9,4],[8,2],[-10,-6],[-5,-2],[-7,5],[-8,-5],[1,9],[8,-6],[10,8],[-2,6],[1,4],[6,5],[2,5],[2,-1],[5,-5],[-1,-3],[1,-2],[4,-8],[-1,10],[-8,-9],[2,-2],[-7,9],[2,-7],[7,7],[3,-2],[9,-1],[2,-6],[-6,-1],[-2,-5],[6,10],[-10,-5],[9,4],[1,-9],[7,9],[-1,10],[-3,-6],[-3,-5],[-6,9],[6,-2],[5,-8],[-5,-7],[7,10],[4,-5],[-2,-3],[1,4],[-4,3],[8,-4],[-5,-9],[9,1],[-1,-4],[-2,1],[10,-6],[3,8],[4,9],[9,5],[8,-2],[-8,-3],[-5,-6],[-5,-8],[-3,6],[6,-5],[-5,4],[-10,10],[3,-2],[-7,3],[-3,-9],[-6,-5],[-3,8],[5,2],[10,6],[7,5],[-7,2],[-6,-6],[-4,9],[-1,-2],[5,4],[3,-2],[3,4],[-3,9],[-8,6],[6,4],[6,-1],[-10,-1],[-2,7],[-2,10],[-6,-5],[-3,-10],[5,-6],[-7,-2],[-6,2],[-3,2],[-10,3],[-7,-7],[-7,-1],[7,3],[7,-3],[-2,1],[-8,-3],[-10,8],[-4,-1],[-4,-4],[-1,9],[-8,7],[2,4],[-7,-1],[10,7],[8,9],[6,3],[-8,-1],[3,6],[4,1],[-7,9],[9,-10],[5,8],[-5,-7],[7,-1],[8,6],[1,5],[7,-3],[-8,-8],[-4,8],[6,-5],[3,1],[2,4],[5,-1],[2,-4],[-9,-1],[9,8],[10,5],[1,8],[-1,-3],[5,5],[5,-8],[2,-6],[-7,10],[8,1],[3,7],[-5,-10],[-6,-1],[10,8],[-2,4],[8,-4],[7,-3],[1,5],[10,-2],[7,-3],[-4,-1],[-2,10],[7,7],[2,-2],[-5,-5],[1,-2],[2,-7],[-5,1],[5,-4],[4,3],[7,-9],[-1,-9],[-6,-5],[-6,7],[3,8],[-4,-7],[-10,-8],[-6,8],[-10,4],[7,-8],[-10,1],[1,4],[2,2],[-1,-7],[-2,7],[-5,-1],[1,-4],[9,-3],[-4,4],[2,9],[-10,-10],[-2,3],[-1,1],[-5,-10],[-6,-5],[6,-5],[-2,-6],[-7,-8],[6,9],[6,-9],[2,4],[-2,4],[-9,-4],[-8,-5],[-8,-5],[-6,3],[5,-9],[1,10],[9,1],[-8,-1],[3,-10],[-4,1],[8,6],[-1,7],[8,6],[5,3],[10,7],[-8,-3],[-4,1],[-9,-8],[10,-10],[-3,-6],[-4,-10],[-8,5],[6,6],[-10,4],[3,2],[10,1],[-3,3],[-10,7],[-3,5],[10,1],[-1,2],[7,7],[-3,-4],[-8,5],[7,-9],[8,1],[1,-5],[5,8],[3,9],[-8,-2],[7,4],[-2,-9],[8,4],[-2,-9],[10,-5],[-10,-2],[5,-4],[10,-3],[-3,-2],[-7,-4],[7,-5],[4,3],[8,10],[2,-2],[5,-1],[-4,-2],[1,-4],[5,5],[5,-10],[-4,2],[2,1],[-5,-3],[10,5],[-6,3],[-1,8],[-2,-7],[-3,-5],[-1,-8],[-10,-8],[-1,-5],[-5,-5],[5,10],[6,3],[1,6],[-8,-10],[9,-3],[4,-3],[-10,-5],[7,8],[1,-10],[-6,-4],[3,-10],[8,-2],[-7,-5],[-4,-7],[7,1],[-4,-7],[-7,-10],[2,-1],[-4,7],[-10,-9],[2,7],[4,-2],[5,-4],[4,-6],[10,3],[1,-6],[4,7],[10,10],[-3,10],[2,8],[-7,10],[8,2],[3,-10],[1,9],[9,1],[5,-3],[-10,-6],[9,2],[8,9],[8,-4],[9,5],[-9,-7],[-2,8],[-2,4],[8,-8],[5,4],[2,1],[-5,2],[8,5],[-10,6],[3,-9],[-8,10],[-4,4],[-8,7],[2,-1],[3,-10],[-1,-8],[7,2],[9,4],[-6,-3],[1,-2],[-4,1],[6,-2],[7,2],[4,6],[-6,-1],[4,10],[8,-2],[1,-9],[2,-2],[4,-1],[-3,-7],[-3,-10],[5,-3],[5,-9],[-9,5],[5,-6],[6,9],[-9,2],[-1,2],[-4,-4],[2,-10],[-3,3],[9,1],[-3,-3],[4,-10],[-10,6],[3,-7],[8,8],[7,10],[-8,-1],[10,1],[8,2],[-5,4],[7,7],[7,7],[-3,9],[2,1],[2,-6],[-3,-6],[10,4],[2,-1],[9,-7],[1,-6],[-8,6],[4,-1],[-7,-9],[-4,3],[4,-9],[9,-5],[7,-7],[-7,-3],[-7,4],[-4,8],[-2,4],[-1,-1],[-8,1],[-2,6],[-10,8],[-7,2],[-7,5],[-3,-5],[-9,10],[9,5],[4,5],[-6,-5],[-7,6],[1,-9],[-4,2],[-9,-2],[-9,8],[-6,5],[1,-5],[-2,-5],[-3,-2],[7,-5],[-8,-8],[-5,3],[5,-1],[-4,-2],[-6,-4],[-9,-7],[8,-9],[3,-7],[2,-5],[-10,-10],[-10,7],[-9,3],[-5,-6],[-5,-1],[4,-1],[-3,-5],[-8,3],[-1,-2],[-5,-6],[-5,2],[7,-8],[-4,-9],[-8,-5],[-1,-7],[3,6],[2,4],[6,-4],[1,2],[-5,-4],[9,7],[-4,-8],[5,3],[-5,1],[-6,7],[-8,-2],[8,-9],[-6,3],[-6,3],[-5,6],[-6,9],[9,-1],[8,8],[8,5],[6,10],[-6,-9],[5,4],[-5,-1],[9,-4],[-1,-5],[2,5],[5,-7],[-3,-5],[2,-3],[8,-7],[8,-7],[8,-9],[-8,-10],[-8,-10],[4,-6],[-6,5],[-6,5],[6,8],[9,-4],[9,-10],[8,5],[4,10],[5,-2],[-8,-9],[7,-10],[-5,10],[-6,-3],[-8,1],[-2,3],[-4,-1],[-9,-1],[1,-3],[3,3],[4,4],[-8,4],[-9,-1],[1,-4],[-6,-7],[-9,4],[-8,10],[10,3],[-9,-3],[-3,2]], dtype = "int16")#candidate|9522|(539, 2)|const|int16
call_9521 = relay.TupleGetItem(func_6527_call(relay.reshape(const_9522.astype('int16'), [1078,])), 2)
call_9523 = relay.TupleGetItem(func_6529_call(relay.reshape(const_9522.astype('int16'), [1078,])), 2)
func_6080_call = mod.get_global_var('func_6080')
func_6083_call = mutated_mod.get_global_var('func_6083')
var_9525 = relay.var("var_9525", dtype = "float64", shape = (7, 182))#candidate|9525|(7, 182)|var|float64
call_9524 = relay.TupleGetItem(func_6080_call(relay.reshape(var_9525.astype('float64'), [13, 7, 14])), 0)
call_9526 = relay.TupleGetItem(func_6083_call(relay.reshape(var_9525.astype('float64'), [13, 7, 14])), 0)
output = relay.Tuple([call_9493,call_9508,call_9521,const_9522,call_9524,var_9525,])
output2 = relay.Tuple([call_9494,call_9509,call_9523,const_9522,call_9526,var_9525,])
func_9528 = relay.Function([var_9525,], output)
mod['func_9528'] = func_9528
mod = relay.transform.InferType()(mod)
var_9529 = relay.var("var_9529", dtype = "float64", shape = (7, 182))#candidate|9529|(7, 182)|var|float64
output = func_9528(var_9529)
func_9530 = relay.Function([var_9529], output)
mutated_mod['func_9530'] = func_9530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8311_call = mod.get_global_var('func_8311')
func_8313_call = mutated_mod.get_global_var('func_8313')
call_9609 = relay.TupleGetItem(func_8311_call(), 1)
call_9610 = relay.TupleGetItem(func_8313_call(), 1)
output = call_9609
output2 = call_9610
func_9641 = relay.Function([], output)
mod['func_9641'] = func_9641
mod = relay.transform.InferType()(mod)
output = func_9641()
func_9642 = relay.Function([], output)
mutated_mod['func_9642'] = func_9642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4482_call = mod.get_global_var('func_4482')
func_4483_call = mutated_mod.get_global_var('func_4483')
call_9647 = relay.TupleGetItem(func_4482_call(), 0)
call_9648 = relay.TupleGetItem(func_4483_call(), 0)
func_3416_call = mod.get_global_var('func_3416')
func_3418_call = mutated_mod.get_global_var('func_3418')
call_9654 = relay.TupleGetItem(func_3416_call(), 0)
call_9655 = relay.TupleGetItem(func_3418_call(), 0)
func_6236_call = mod.get_global_var('func_6236')
func_6239_call = mutated_mod.get_global_var('func_6239')
const_9657 = relay.const([-3,1,3,1,-1,4,2,9,1,8,-8,-3,10,9,8,6,-10,9,8,1,10,9,9,2,9,-5,-10,10,-10,-3,-5,-2,-6,10,8,5,-9,10,6,10,-3,-2,3,10,-5,2,3,-6,-2,7,8,-9,-8,-6,2,-10,1,7,-8,-5,-1,-4,2,5,6,5,-4,2,-3,8,6,-10,4,1,6,6,5,-4,-9,1,1,-1,10,6,-4,1,-4,7,10,-9,-3,6,6,7,8,-3,5,3,7,-1,6,3,4,-8,-7,3,-6,10,-8,9,4,-7,8,-4,-1,-8,-6,-7,-10,-5,3,-8,6,1,6,1,4,9,-10,-6,8,8,-4,4,-1,2,-6,5,2,-5,-7,-8,-6,2,-2,7,-10,-5,1,10,-10,-9,5,-8,1,-5,2,1,10,4,-10,3,-9,6,-10,3,9,6,-8,-8,10,1,-7,-9,-6,1,7,9,2,5,2,-2,2,4,4,8,7,7,-2,3,1,-5,7,4,7,-1,-7,-1,-3,-6,-9,5,6,10,-10,5,6,-10,3,-4,1,-1,-2,-5,7,4,-10,2,10,-3,4,10,7,4,-5,-10,8,7,6,-5,-5,-9,-7,-10,-10,5,-10,-3,-8,7,-7,-10,-2,5,8,1,10,-10,-10,1,-1,3,3,10,-4,5,-8,8,-1,-6,-4,4,-6,10,3,5,10,-7,7,-4,-6,6,-3,2,9,3,-6,7,1,7,9,-2,-1,1,6,-10,-4,6,1,9,7,-3,-1,4,-10,-8,2,-9,8,-4,-5,9,-3,7,5,3,-10,-5,-1,-4,8,1,1,7,-7,-4,-5,4,-7,1,-8,4,-3,2,-7,-4,-8,7,4,-9,-4,5,-9,7,-1,8,5,1,2,-3,-8,4,-3,-7,6,7,-2,-9,-3,-7,-7,8,-10,1,2,8,10,-8,-4,9,3,-10,-10,6,-9,10,1,-7,8,-10,1,-10,2,5,5,6,2,4,6,7,-6,-1,-6,-5,-8,5,-5,-2,5,2], dtype = "uint8")#candidate|9657|(390,)|const|uint8
call_9656 = relay.TupleGetItem(func_6236_call(relay.reshape(const_9657.astype('uint8'), [390,])), 3)
call_9658 = relay.TupleGetItem(func_6239_call(relay.reshape(const_9657.astype('uint8'), [390,])), 3)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_9659 = func_4514_call()
call_9660 = func_4514_call()
output = relay.Tuple([call_9647,call_9654,call_9656,const_9657,call_9659,])
output2 = relay.Tuple([call_9648,call_9655,call_9658,const_9657,call_9660,])
func_9677 = relay.Function([], output)
mod['func_9677'] = func_9677
mod = relay.transform.InferType()(mod)
output = func_9677()
func_9678 = relay.Function([], output)
mutated_mod['func_9678'] = func_9678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9467_call = mod.get_global_var('func_9467')
func_9469_call = mutated_mod.get_global_var('func_9469')
call_9686 = relay.TupleGetItem(func_9467_call(), 0)
call_9687 = relay.TupleGetItem(func_9469_call(), 0)
output = relay.Tuple([call_9686,])
output2 = relay.Tuple([call_9687,])
func_9696 = relay.Function([], output)
mod['func_9696'] = func_9696
mod = relay.transform.InferType()(mod)
mutated_mod['func_9696'] = func_9696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9696_call = mutated_mod.get_global_var('func_9696')
call_9697 = func_9696_call()
output = call_9697
func_9698 = relay.Function([], output)
mutated_mod['func_9698'] = func_9698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5414_call = mutated_mod.get_global_var('func_5414')
call_9699 = relay.TupleGetItem(func_5412_call(), 0)
call_9700 = relay.TupleGetItem(func_5414_call(), 0)
output = relay.Tuple([call_9699,])
output2 = relay.Tuple([call_9700,])
func_9716 = relay.Function([], output)
mod['func_9716'] = func_9716
mod = relay.transform.InferType()(mod)
output = func_9716()
func_9717 = relay.Function([], output)
mutated_mod['func_9717'] = func_9717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3515_call = mod.get_global_var('func_3515')
func_3517_call = mutated_mod.get_global_var('func_3517')
call_9765 = relay.TupleGetItem(func_3515_call(), 1)
call_9766 = relay.TupleGetItem(func_3517_call(), 1)
output = call_9765
output2 = call_9766
func_9791 = relay.Function([], output)
mod['func_9791'] = func_9791
mod = relay.transform.InferType()(mod)
output = func_9791()
func_9792 = relay.Function([], output)
mutated_mod['func_9792'] = func_9792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6605_call = mod.get_global_var('func_6605')
func_6607_call = mutated_mod.get_global_var('func_6607')
call_9799 = func_6605_call()
call_9800 = func_6605_call()
func_3253_call = mod.get_global_var('func_3253')
func_3254_call = mutated_mod.get_global_var('func_3254')
call_9828 = func_3253_call()
call_9829 = func_3253_call()
output = relay.Tuple([call_9799,call_9828,])
output2 = relay.Tuple([call_9800,call_9829,])
func_9832 = relay.Function([], output)
mod['func_9832'] = func_9832
mod = relay.transform.InferType()(mod)
output = func_9832()
func_9833 = relay.Function([], output)
mutated_mod['func_9833'] = func_9833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9854 = relay.var("var_9854", dtype = "float32", shape = (4, 4, 12))#candidate|9854|(4, 4, 12)|var|float32
var_9855 = relay.var("var_9855", dtype = "float32", shape = (4, 4, 12))#candidate|9855|(4, 4, 12)|var|float32
bop_9856 = relay.divide(var_9854.astype('float32'), relay.reshape(var_9855.astype('float32'), relay.shape_of(var_9854))) # shape=(4, 4, 12)
bop_9861 = relay.add(bop_9856.astype('int16'), relay.reshape(var_9855.astype('int16'), relay.shape_of(bop_9856))) # shape=(4, 4, 12)
uop_9871 = relay.asinh(var_9854.astype('float64')) # shape=(4, 4, 12)
uop_9874 = relay.cosh(uop_9871.astype('float32')) # shape=(4, 4, 12)
func_4496_call = mod.get_global_var('func_4496')
func_4497_call = mutated_mod.get_global_var('func_4497')
call_9896 = relay.TupleGetItem(func_4496_call(), 0)
call_9897 = relay.TupleGetItem(func_4497_call(), 0)
output = relay.Tuple([bop_9861,uop_9874,call_9896,])
output2 = relay.Tuple([bop_9861,uop_9874,call_9897,])
func_9898 = relay.Function([var_9854,var_9855,], output)
mod['func_9898'] = func_9898
mod = relay.transform.InferType()(mod)
mutated_mod['func_9898'] = func_9898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9898_call = mutated_mod.get_global_var('func_9898')
var_9900 = relay.var("var_9900", dtype = "float32", shape = (4, 4, 12))#candidate|9900|(4, 4, 12)|var|float32
var_9901 = relay.var("var_9901", dtype = "float32", shape = (4, 4, 12))#candidate|9901|(4, 4, 12)|var|float32
call_9899 = func_9898_call(var_9900,var_9901,)
output = call_9899
func_9902 = relay.Function([var_9900,var_9901,], output)
mutated_mod['func_9902'] = func_9902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7136_call = mod.get_global_var('func_7136')
func_7137_call = mutated_mod.get_global_var('func_7137')
call_9949 = relay.TupleGetItem(func_7136_call(), 0)
call_9950 = relay.TupleGetItem(func_7137_call(), 0)
output = relay.Tuple([call_9949,])
output2 = relay.Tuple([call_9950,])
func_9955 = relay.Function([], output)
mod['func_9955'] = func_9955
mod = relay.transform.InferType()(mod)
output = func_9955()
func_9956 = relay.Function([], output)
mutated_mod['func_9956'] = func_9956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mod.get_global_var('func_4992')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_9957 = relay.TupleGetItem(func_4992_call(), 2)
call_9958 = relay.TupleGetItem(func_4993_call(), 2)
output = relay.Tuple([call_9957,])
output2 = relay.Tuple([call_9958,])
func_9978 = relay.Function([], output)
mod['func_9978'] = func_9978
mod = relay.transform.InferType()(mod)
output = func_9978()
func_9979 = relay.Function([], output)
mutated_mod['func_9979'] = func_9979
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9989 = relay.const([[[-3,-7],[-2,1],[-8,10],[-5,10],[9,5],[-5,-6],[-8,9],[3,5],[4,3],[9,-5],[-4,3],[-3,-7]],[[6,4],[-10,-10],[-9,-10],[8,10],[-7,8],[-7,-3],[2,-10],[-2,7],[10,-9],[-2,-7],[-10,5],[4,10]],[[8,-9],[2,6],[9,-9],[5,-7],[5,-5],[9,-8],[-1,-4],[8,-8],[3,3],[-9,-9],[7,7],[2,-8]],[[4,-6],[7,9],[-8,-5],[-9,5],[10,7],[-7,6],[-4,7],[-9,-5],[-8,3],[4,5],[6,-10],[-5,-7]],[[3,2],[10,-5],[3,10],[-6,-4],[-5,-2],[-8,1],[-9,9],[6,-6],[-9,10],[-10,-4],[4,4],[9,6]],[[4,3],[5,8],[-4,7],[-4,-10],[3,4],[4,6],[-4,-8],[10,-6],[-2,-8],[2,-2],[-6,10],[-1,-5]],[[-2,-8],[9,-4],[4,-5],[-8,9],[-10,8],[7,-2],[-6,-5],[3,-1],[-8,-1],[3,-9],[1,-3],[7,-10]],[[1,2],[-7,-2],[-5,2],[-6,-4],[4,-3],[-5,7],[-10,-7],[-4,-5],[7,4],[-10,-9],[-3,6],[7,-6]],[[-9,1],[-5,10],[-9,-2],[5,8],[5,-8],[-8,3],[-9,3],[-8,7],[1,-1],[-6,-2],[1,-8],[5,10]],[[9,6],[-4,-1],[7,9],[6,-5],[3,5],[-9,6],[5,6],[-1,-10],[2,-10],[-5,7],[8,9],[1,-2]],[[10,-6],[4,-8],[-8,-9],[-9,-1],[-2,-5],[-3,-1],[10,4],[-6,8],[4,4],[7,-9],[4,-4],[-4,4]],[[-8,-5],[3,2],[7,-7],[-2,10],[2,-6],[-8,4],[10,7],[-4,9],[9,-5],[-9,-8],[-4,-1],[3,-4]],[[7,-3],[-2,7],[6,-3],[-4,-4],[-6,7],[-7,4],[-1,2],[10,8],[4,2],[-8,-8],[-4,7],[-5,3]],[[2,-7],[-7,2],[9,4],[10,5],[-5,1],[-8,10],[-2,-2],[-9,-8],[-6,-10],[7,-1],[-8,4],[-8,1]],[[7,-1],[-1,-9],[-9,9],[5,-7],[-2,4],[-10,6],[1,-3],[2,-6],[-6,-6],[-7,1],[7,2],[-7,4]],[[7,-1],[-4,-3],[10,6],[2,10],[9,4],[-4,-2],[4,4],[-4,-5],[6,-7],[4,5],[-8,3],[-5,5]]], dtype = "int64")#candidate|9989|(16, 12, 2)|const|int64
const_9990 = relay.const([[[10,4],[-4,-10],[-9,-3],[-6,-4],[1,5],[1,8],[-1,9],[2,7],[-5,7],[9,-8],[10,-5],[-4,-9]],[[-4,3],[-6,9],[8,3],[3,2],[-4,9],[4,-10],[-7,-3],[6,6],[-10,-5],[9,-2],[-3,7],[-6,8]],[[-7,1],[-4,-6],[-8,4],[2,-3],[-8,-7],[-2,6],[-5,-1],[-1,10],[6,9],[-6,1],[-5,7],[-4,8]],[[-9,-8],[3,6],[6,-8],[6,5],[3,2],[-1,3],[-9,-1],[-3,2],[3,4],[-4,5],[-8,9],[5,8]],[[9,5],[-4,-8],[-1,5],[-10,-7],[-8,1],[1,-4],[-1,5],[-8,-1],[-4,9],[-7,2],[-7,-1],[5,-2]],[[-8,5],[-10,-8],[-1,-6],[7,-7],[6,-10],[4,2],[-10,-8],[10,6],[-4,-7],[9,5],[8,10],[-9,-6]],[[-7,-1],[-8,-2],[-5,-3],[-4,-2],[9,3],[5,-1],[-9,6],[-10,-6],[-9,-7],[7,7],[-4,6],[-9,-6]],[[-8,-10],[7,5],[4,4],[4,-10],[5,3],[-1,-6],[3,2],[-10,2],[-7,2],[4,10],[7,-2],[3,7]],[[3,2],[10,-8],[-9,7],[-1,9],[1,-2],[7,5],[-5,8],[-2,10],[4,-7],[9,9],[8,-9],[-5,6]],[[10,-3],[3,2],[8,8],[4,5],[-9,4],[10,7],[-9,6],[5,-10],[-4,-1],[-2,5],[-4,9],[-2,-7]],[[9,-8],[-7,8],[1,2],[7,-10],[-6,10],[-5,-9],[9,-8],[4,-1],[-9,3],[-5,-3],[-4,2],[-6,4]],[[5,-1],[10,-1],[2,9],[7,9],[10,3],[3,-2],[3,-8],[-8,3],[6,-6],[-8,7],[-8,-3],[8,-4]],[[-6,-4],[5,5],[1,6],[-4,5],[-5,-10],[1,10],[-4,6],[-9,-10],[7,5],[1,-9],[1,-2],[-6,-9]],[[-1,3],[-4,3],[10,-2],[10,-5],[8,-1],[7,-9],[-7,5],[1,4],[3,-4],[-2,7],[-6,10],[-10,5]],[[4,7],[7,-2],[-9,8],[3,2],[1,4],[-2,-5],[9,6],[-10,-9],[8,6],[4,-2],[8,-4],[3,-8]],[[-3,8],[-1,-4],[8,-10],[-3,-3],[-5,-8],[8,1],[-9,-7],[-1,7],[-7,-9],[-7,9],[-5,2],[-9,8]]], dtype = "int64")#candidate|9990|(16, 12, 2)|const|int64
bop_9991 = relay.bitwise_or(const_9989.astype('int64'), relay.reshape(const_9990.astype('int64'), relay.shape_of(const_9989))) # shape=(16, 12, 2)
func_7927_call = mod.get_global_var('func_7927')
func_7928_call = mutated_mod.get_global_var('func_7928')
call_10010 = relay.TupleGetItem(func_7927_call(), 0)
call_10011 = relay.TupleGetItem(func_7928_call(), 0)
output = relay.Tuple([bop_9991,call_10010,])
output2 = relay.Tuple([bop_9991,call_10011,])
func_10015 = relay.Function([], output)
mod['func_10015'] = func_10015
mod = relay.transform.InferType()(mod)
mutated_mod['func_10015'] = func_10015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10015_call = mutated_mod.get_global_var('func_10015')
call_10016 = func_10015_call()
output = call_10016
func_10017 = relay.Function([], output)
mutated_mod['func_10017'] = func_10017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_10028 = relay.TupleGetItem(func_2518_call(), 2)
call_10029 = relay.TupleGetItem(func_2520_call(), 2)
output = call_10028
output2 = call_10029
func_10056 = relay.Function([], output)
mod['func_10056'] = func_10056
mod = relay.transform.InferType()(mod)
output = func_10056()
func_10057 = relay.Function([], output)
mutated_mod['func_10057'] = func_10057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5507_call = mod.get_global_var('func_5507')
func_5508_call = mutated_mod.get_global_var('func_5508')
call_10116 = relay.TupleGetItem(func_5507_call(), 0)
call_10117 = relay.TupleGetItem(func_5508_call(), 0)
func_7951_call = mod.get_global_var('func_7951')
func_7953_call = mutated_mod.get_global_var('func_7953')
call_10122 = relay.TupleGetItem(func_7951_call(), 0)
call_10123 = relay.TupleGetItem(func_7953_call(), 0)
output = relay.Tuple([call_10116,call_10122,])
output2 = relay.Tuple([call_10117,call_10123,])
func_10124 = relay.Function([], output)
mod['func_10124'] = func_10124
mod = relay.transform.InferType()(mod)
mutated_mod['func_10124'] = func_10124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10124_call = mutated_mod.get_global_var('func_10124')
call_10125 = func_10124_call()
output = call_10125
func_10126 = relay.Function([], output)
mutated_mod['func_10126'] = func_10126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5483_call = mod.get_global_var('func_5483')
func_5484_call = mutated_mod.get_global_var('func_5484')
call_10165 = relay.TupleGetItem(func_5483_call(), 1)
call_10166 = relay.TupleGetItem(func_5484_call(), 1)
output = relay.Tuple([call_10165,])
output2 = relay.Tuple([call_10166,])
func_10169 = relay.Function([], output)
mod['func_10169'] = func_10169
mod = relay.transform.InferType()(mod)
output = func_10169()
func_10170 = relay.Function([], output)
mutated_mod['func_10170'] = func_10170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10124_call = mod.get_global_var('func_10124')
func_10126_call = mutated_mod.get_global_var('func_10126')
call_10183 = relay.TupleGetItem(func_10124_call(), 0)
call_10184 = relay.TupleGetItem(func_10126_call(), 0)
output = call_10183
output2 = call_10184
func_10191 = relay.Function([], output)
mod['func_10191'] = func_10191
mod = relay.transform.InferType()(mod)
mutated_mod['func_10191'] = func_10191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10191_call = mutated_mod.get_global_var('func_10191')
call_10192 = func_10191_call()
output = call_10192
func_10193 = relay.Function([], output)
mutated_mod['func_10193'] = func_10193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_10225 = relay.TupleGetItem(func_2373_call(), 1)
call_10226 = relay.TupleGetItem(func_2375_call(), 1)
output = call_10225
output2 = call_10226
func_10238 = relay.Function([], output)
mod['func_10238'] = func_10238
mod = relay.transform.InferType()(mod)
output = func_10238()
func_10239 = relay.Function([], output)
mutated_mod['func_10239'] = func_10239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5983_call = mod.get_global_var('func_5983')
func_5984_call = mutated_mod.get_global_var('func_5984')
call_10248 = func_5983_call()
call_10249 = func_5983_call()
output = relay.Tuple([call_10248,])
output2 = relay.Tuple([call_10249,])
func_10253 = relay.Function([], output)
mod['func_10253'] = func_10253
mod = relay.transform.InferType()(mod)
mutated_mod['func_10253'] = func_10253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10253_call = mutated_mod.get_global_var('func_10253')
call_10254 = func_10253_call()
output = call_10254
func_10255 = relay.Function([], output)
mutated_mod['func_10255'] = func_10255
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10262 = relay.const([[[True,False,True,False,False,False,True],[True,False,False,True,False,True,True],[False,True,False,False,True,False,False],[False,False,False,False,True,True,True],[False,True,True,True,True,False,True],[False,False,False,True,False,True,False]],[[True,False,True,True,True,True,True],[False,True,True,False,True,True,True],[True,False,False,True,False,False,True],[True,False,False,True,True,True,False],[True,False,False,False,False,True,False],[True,False,True,True,False,True,True]],[[True,False,False,False,True,True,False],[True,True,True,False,True,True,False],[False,False,False,False,False,True,False],[False,False,False,True,True,False,False],[True,True,False,False,True,False,True],[False,True,True,True,False,False,False]],[[False,True,False,False,False,False,False],[False,True,True,True,False,True,False],[True,True,True,False,False,True,False],[False,True,True,False,True,False,False],[True,False,False,True,False,False,False],[False,False,False,False,False,True,True]],[[False,True,False,True,False,True,True],[True,False,True,True,True,True,True],[False,True,True,False,False,True,True],[False,True,True,False,False,False,False],[False,True,False,False,False,False,True],[True,True,False,False,True,True,True]],[[False,False,False,True,False,False,True],[False,True,False,False,True,False,False],[True,False,False,True,True,False,True],[False,False,False,True,True,False,True],[False,True,False,True,False,False,False],[False,False,True,False,False,True,False]],[[True,True,False,False,True,False,True],[True,True,False,True,True,False,False],[True,False,True,True,True,True,False],[True,True,False,True,False,True,True],[False,True,True,True,False,True,True],[False,False,False,True,True,False,False]],[[False,False,False,True,False,True,True],[True,False,True,True,True,False,False],[True,True,False,True,False,True,False],[True,True,True,True,True,True,False],[False,True,False,False,True,False,False],[True,True,True,True,True,False,False]],[[False,False,False,False,False,False,True],[False,False,False,True,True,True,False],[False,True,False,False,False,False,False],[False,False,False,True,True,True,False],[False,False,False,True,False,True,True],[False,True,False,True,True,False,False]],[[False,False,True,False,True,True,False],[True,False,True,True,False,True,True],[False,True,True,False,True,False,True],[True,True,False,False,False,True,True],[False,True,True,False,True,False,True],[False,False,True,False,False,False,True]]], dtype = "bool")#candidate|10262|(10, 6, 7)|const|bool
const_10263 = relay.const([[[False,False,False,True,False,True,False],[False,False,True,True,True,True,True],[False,False,True,True,False,False,True],[False,True,True,False,False,True,False],[True,True,True,True,True,True,False],[True,False,False,True,True,True,False]],[[False,True,False,False,True,True,True],[True,True,False,False,False,False,False],[True,True,True,False,False,False,True],[False,True,True,True,False,True,True],[True,False,True,True,True,True,True],[True,True,False,False,False,True,False]],[[True,True,True,False,False,False,False],[True,False,True,True,True,False,False],[True,True,True,False,True,True,True],[True,False,False,False,True,True,False],[False,False,True,True,True,False,True],[True,False,True,False,False,False,True]],[[True,False,False,True,True,True,True],[False,False,True,True,True,True,True],[False,False,False,False,False,True,True],[True,True,False,True,True,True,True],[True,True,True,False,True,True,True],[False,False,True,True,True,False,False]],[[False,True,False,False,False,False,True],[False,True,False,False,False,True,True],[True,False,False,False,False,True,False],[True,False,False,False,True,True,True],[False,True,True,False,False,True,False],[False,True,True,True,False,False,True]],[[False,True,False,True,True,False,True],[True,False,False,True,False,False,True],[True,True,False,True,False,True,True],[False,True,False,True,False,True,False],[True,True,True,True,False,True,True],[False,True,False,True,True,False,False]],[[False,False,True,True,True,True,True],[True,True,False,False,False,False,True],[False,False,True,True,True,False,True],[False,True,False,False,False,False,True],[False,True,False,False,True,True,True],[True,True,False,False,False,True,False]],[[False,True,True,False,True,False,False],[True,False,True,True,True,True,True],[False,True,False,False,False,False,False],[False,False,True,True,True,False,True],[True,True,False,True,False,True,True],[False,False,True,True,False,False,False]],[[False,True,True,False,True,True,False],[True,False,False,True,False,True,False],[True,True,False,False,False,False,True],[True,True,False,True,True,False,False],[False,False,False,False,False,True,False],[True,False,False,False,False,False,False]],[[False,True,False,True,True,False,True],[True,False,False,False,False,True,True],[True,True,True,True,True,True,True],[True,False,True,False,True,True,True],[True,True,True,False,True,True,True],[False,False,True,True,False,True,False]]], dtype = "bool")#candidate|10263|(10, 6, 7)|const|bool
bop_10264 = relay.logical_and(const_10262.astype('bool'), relay.reshape(const_10263.astype('bool'), relay.shape_of(const_10262))) # shape=(10, 6, 7)
output = relay.Tuple([bop_10264,])
output2 = relay.Tuple([bop_10264,])
func_10272 = relay.Function([], output)
mod['func_10272'] = func_10272
mod = relay.transform.InferType()(mod)
mutated_mod['func_10272'] = func_10272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10272_call = mutated_mod.get_global_var('func_10272')
call_10273 = func_10272_call()
output = call_10273
func_10274 = relay.Function([], output)
mutated_mod['func_10274'] = func_10274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
call_10313 = relay.TupleGetItem(func_4686_call(), 0)
call_10314 = relay.TupleGetItem(func_4688_call(), 0)
output = call_10313
output2 = call_10314
func_10331 = relay.Function([], output)
mod['func_10331'] = func_10331
mod = relay.transform.InferType()(mod)
output = func_10331()
func_10332 = relay.Function([], output)
mutated_mod['func_10332'] = func_10332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8201_call = mod.get_global_var('func_8201')
func_8202_call = mutated_mod.get_global_var('func_8202')
call_10340 = func_8201_call()
call_10341 = func_8201_call()
output = relay.Tuple([call_10340,])
output2 = relay.Tuple([call_10341,])
func_10345 = relay.Function([], output)
mod['func_10345'] = func_10345
mod = relay.transform.InferType()(mod)
mutated_mod['func_10345'] = func_10345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10345_call = mutated_mod.get_global_var('func_10345')
call_10346 = func_10345_call()
output = call_10346
func_10347 = relay.Function([], output)
mutated_mod['func_10347'] = func_10347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mod.get_global_var('func_4652')
func_4654_call = mutated_mod.get_global_var('func_4654')
call_10353 = relay.TupleGetItem(func_4652_call(), 1)
call_10354 = relay.TupleGetItem(func_4654_call(), 1)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_10357 = relay.TupleGetItem(func_6502_call(), 0)
call_10358 = relay.TupleGetItem(func_6504_call(), 0)
output = relay.Tuple([call_10353,call_10357,])
output2 = relay.Tuple([call_10354,call_10358,])
func_10370 = relay.Function([], output)
mod['func_10370'] = func_10370
mod = relay.transform.InferType()(mod)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mutated_mod.get_global_var('func_10370')
call_10371 = func_10370_call()
output = call_10371
func_10372 = relay.Function([], output)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_10373 = relay.TupleGetItem(func_6502_call(), 1)
call_10374 = relay.TupleGetItem(func_6504_call(), 1)
func_4303_call = mod.get_global_var('func_4303')
func_4305_call = mutated_mod.get_global_var('func_4305')
const_10376 = relay.const([-7,-7,3,-6,-10,5,-2,-6,3,-10,-2,6,3,-5,5,3,1,10,8,8,-8,-9,-8,-9,5,-9,4,10,9,2,-5,5,5,-1,1,2,4,10,-4,-5,10,-6,1,-4,3,-4,1,6,5,10,9,-5,-3,7,8,6,5,-4,8,-7,-4,-1,10,-2,7,1,5,-10,-3,-6,8,8,-4,2,-8,4,1,6,5,4,-3,-9,-3,7,-6,6,6,7,-4,-3,9,-6,-3,2,2,9,3,4,-8,1,-5,-8,-10,-3,6,-9,-5,5,-9,5,3,7,-5,1,3,7,-8,10,-10,4,-3,2,10,-6,-4,-2,-7,4,-1,3,-6,1,5,-4,6,-2,-1,-7,-4,1,1,7,-2,10,-4,7,-5,-6,2,5,5,9,4,8,6,-5,3,-7,-1,-10,1,-8,8,5,1,-9,9,-6,-1,-2,4,-6,-9,3,1,6,-3,-6,-8,10,-3,10,7,7,-10,7,-6,2,7,7,1,7,10,6,6,-9,-4,-1,3,-9,10,-9,-10,-4,-6,-4,-6,2,6,-4,-3,1,2,-8,-3,9,4,10,7,-10,4,-2,7,-6,4,-7,-5,-4,-4,1,3,1,-6,-3,6,9,-9,2,-7,-3,10,-5,10,-9,6,-2,-2,6,5,-2,-5,10,-2,-2,-3,-7,6,-8,-5,-1,-9,-10,7,8,5,10,10,4,4,-10,-10,8,3,2,-4,-1,-7,5,-4,7,-4,-9,-9,-8,-8,8,9,4,3,-2,-3,4,-3,-6,-2,6,10,-2,-10,-1,-1,6,8,-4,10,-10,10,-2,2,9,1,-2,3,-1,6,-1,3,-9,-1,-2,2,1,5,-4,-3,3,-10,-6,-8,-6,-9,1,6,2,4,6,5,7,-5,1,6,2,8,1,-5,10,5,5,-3,7,-1,1,-4,-8,-1,-7,-2,3,8,-5,10,-4,-9,4,-6,-7,-8,2,9,3,10,7,10,1,-3,-1,-2,-7,6,2,6,10,2,-8,-4,2,-2,4,-10,-1,1,-7,-7,-5,8,6,9,-8,7,-3,-8,5,-4,3,5,-7,6,-1,-8,7,-6,-10,8,-7,3,-6,-4,10,-9,2,-4,2,2,-4,-10,6,3,-2,-3,8,10,6,4,-2,8,-8,-2,2,-2,6,-9,-9,-8,5,-3,-7,4,6,9,10,-1,-10,9,-9,-10,4,-7,2,-5,7,8,10,9,-2,4,-4,2,-10,-7,1,-3,-7,-7,6,-5,-9,-10,7,-3,-6,10,-1,-5,1,-9,-9,7,-3,-4,8,5,-2,-4,-2,7,5,-9,10,-9,-8,-5,-1,5,-9,-4,-8,-2,-3,1,-5,-5,-6,7,2,8,4,-7,8,-8,10,-3,2,3,4,-3,2,9,6,-5,2,8,-7,-3,-8,-1,5,-1,9,-4,-7,2,-9,-1,-9,-5,10,-8,-10,-1,4,-1,5,-7,5,7,-2,-3,-2,-8,-9,-3,-6,-5,4,7,7,6,-9,6,6,-5,-4,9,-1,10,-8,10,-6,2,-2,-7,-10,-2,-7,2,4,2,-6,-6,8,8,9,-1,6,4,-6,-8,5,5,10,5,-5,-4,8,9,-5,3,8,8,9,1,-6,-2,-2,-5,6,-6,1,-3,9,-4,-2,8,-2,3,2,-9,-4,-1,9,9,-10,-6,5,9,-1,8,-1,-3,-5,-4,-10,-7,-5,-1,8,10,4,-8,-5,-3,-9,10,-9,5,-9,3,2,-6,-10,-9,-6,6,-5,7,1,-6,2,2,-3,5,6,3,-8,2,5,-8,-4,-9,1,9,-9,-4,-3,10,3,-9,-3,-4,-1,-3,-2,7,7,5,5,2,8,-3,-2,8,10,2,-10,-6,-5,-9,-10,-2,-4,7,-8,-1,2,-9,1,-8,7,-4,-6,-9,-7,-9,7,-4,-6,-8,9,-5,7,7,-3,7,-7,-8,1,-6,-8,-7,-4,-3,3,9,5,5,7,-8,-7,2,-7,-8,10,1,9,-10,-1,5,8,-8,-7,-5,-6,-7,-9,8,-1,-8,-10,-8,9,4,-3,-5,-3,4,-9,6,-1,8,-6,-9,5,-10,6,-6,6,-4,8,-1,-6,3,-3,9,-4,5,-5,8,2,7,-6,5,-2,2,-10,-1,10,-10,-2,1,7,-7,2,4,-3,-4,-3,-10,7,5,9,-4,7,-5,4,-7,2,3,1,-8,8,3,8,-6,-9,4,6,-8,1,-4,-7,-4,-8,5,-6,-4,-2,6,4,6,-3,-1,8,2,3,4,10,1,7,-5,-8,7,-10,1,-5,7,-9,6,8,-9,-7,-2,-1,3,8,2,9,-5,10,-2,7,4,-8,5,10,6,5,4,-1,-7,-7,7,6,-4,10,-5,5,-2,10,8,9,1,4,-3,2,-5,7,-4,4,3,-4,-8,6,2,7,-9,-6,2,6,6,-5,7,-1,-7,9,-8,8,1,-7,-1,-5,-1,-3,-2,10,4,-8,-7,2,-5,-4,3,10,8,-9,2,-1,8,7,2,-9,-5,7,-6,-8,1,4,5,-8,-1,-2,-4,7,-9,-1,4,-7,-6,10,5,-5,-9,-10,2,7,-6,6,4,-1,8,1,-3,10,5,3,8,-6,-6,-1,-4,-10,7,-10,7,-3,-5,-8,3,10,-8,7,3,-4,2,5,-4,-8,-1,4,-2,-5,-1,7,-1,-1,-2,-6,4,1,-7,-1,3,2,10,6,-2,8,5,7,-4,6,9,-10,4,-10,-10,-2,2,1,-1,-1,7,6,7,-6,2,-9,-8,5,-2,2,9,7,9,3,-4,-3,-6,-10,2,5,10,6,-3,-9,-7,-9,7,8,-5,-8,-5,-7,-1,5,-5,-7,4,-4], dtype = "int16")#candidate|10376|(1078,)|const|int16
call_10375 = relay.TupleGetItem(func_4303_call(relay.reshape(const_10376.astype('int16'), [1, 1078])), 4)
call_10377 = relay.TupleGetItem(func_4305_call(relay.reshape(const_10376.astype('int16'), [1, 1078])), 4)
output = relay.Tuple([call_10373,call_10375,const_10376,])
output2 = relay.Tuple([call_10374,call_10377,const_10376,])
func_10384 = relay.Function([], output)
mod['func_10384'] = func_10384
mod = relay.transform.InferType()(mod)
output = func_10384()
func_10385 = relay.Function([], output)
mutated_mod['func_10385'] = func_10385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10506 = relay.var("var_10506", dtype = "float64", shape = (9, 10, 10))#candidate|10506|(9, 10, 10)|var|float64
uop_10507 = relay.acos(var_10506.astype('float64')) # shape=(9, 10, 10)
uop_10523 = relay.tan(uop_10507.astype('float32')) # shape=(9, 10, 10)
output = uop_10523
output2 = uop_10523
func_10537 = relay.Function([var_10506,], output)
mod['func_10537'] = func_10537
mod = relay.transform.InferType()(mod)
var_10538 = relay.var("var_10538", dtype = "float64", shape = (9, 10, 10))#candidate|10538|(9, 10, 10)|var|float64
output = func_10537(var_10538)
func_10539 = relay.Function([var_10538], output)
mutated_mod['func_10539'] = func_10539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9716_call = mod.get_global_var('func_9716')
func_9717_call = mutated_mod.get_global_var('func_9717')
call_10584 = relay.TupleGetItem(func_9716_call(), 0)
call_10585 = relay.TupleGetItem(func_9717_call(), 0)
output = call_10584
output2 = call_10585
func_10596 = relay.Function([], output)
mod['func_10596'] = func_10596
mod = relay.transform.InferType()(mod)
mutated_mod['func_10596'] = func_10596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10596_call = mutated_mod.get_global_var('func_10596')
call_10597 = func_10596_call()
output = call_10597
func_10598 = relay.Function([], output)
mutated_mod['func_10598'] = func_10598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3265_call = mod.get_global_var('func_3265')
func_3266_call = mutated_mod.get_global_var('func_3266')
call_10669 = relay.TupleGetItem(func_3265_call(), 0)
call_10670 = relay.TupleGetItem(func_3266_call(), 0)
func_5282_call = mod.get_global_var('func_5282')
func_5284_call = mutated_mod.get_global_var('func_5284')
const_10673 = relay.const([-1.873710,-3.290297,-5.771803,-5.460485,6.286773,-1.359051,-8.866672,5.723340,1.043635,6.049142,-8.940344,8.459080,-4.460986,-8.246288,6.195272,0.174805,2.066180,-1.063957], dtype = "float64")#candidate|10673|(18,)|const|float64
call_10672 = func_5282_call(relay.reshape(const_10673.astype('float64'), [1, 2, 9]))
call_10674 = func_5282_call(relay.reshape(const_10673.astype('float64'), [1, 2, 9]))
func_7478_call = mod.get_global_var('func_7478')
func_7481_call = mutated_mod.get_global_var('func_7481')
const_10678 = relay.const([7,1,-3,-5,-2,-5,-1,1,-1,-3,-2,5,4,-4,-2,1,2,3,4,8,2,-10,4,-9,8,3,-10,-5,-10,-7,7,-4,-1,6,-6,3,2,1,7,-4,1,-4,-6,7,9,10,3,-6,-2,2,-9,-6,-10,-10,6,-1,-1,-9,-3,5,-2,7,1,-10,6,-3,-6,-9,-5,-3,-10,9,9,-10,-4,-6,2,-4,9,-7,5,-1,6,-9,-6,3,7,1,2,10,-6,4,2,-8,1,5,5,9,7,-4,4,-10,1,-9,-3,-9,-7,-5,-1,9,10,8,-1,9,-8,-10,-2,3,4,-6,-1,5,8,-7,7,-8,2,-4,-4,-3,-8,3,5,-1,8,-7,-4,8,-4,-10,-3,-10,6,-9,9,-3,5,4,3,-1,5,-1,10,-9,-4,-5], dtype = "uint64")#candidate|10678|(156,)|const|uint64
call_10677 = func_7478_call(relay.reshape(const_10678.astype('uint64'), [13, 3, 4]))
call_10679 = func_7478_call(relay.reshape(const_10678.astype('uint64'), [13, 3, 4]))
output = relay.Tuple([call_10669,call_10672,const_10673,call_10677,const_10678,])
output2 = relay.Tuple([call_10670,call_10674,const_10673,call_10679,const_10678,])
func_10682 = relay.Function([], output)
mod['func_10682'] = func_10682
mod = relay.transform.InferType()(mod)
output = func_10682()
func_10683 = relay.Function([], output)
mutated_mod['func_10683'] = func_10683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_10706 = relay.TupleGetItem(func_2518_call(), 1)
call_10707 = relay.TupleGetItem(func_2520_call(), 1)
output = relay.Tuple([call_10706,])
output2 = relay.Tuple([call_10707,])
func_10714 = relay.Function([], output)
mod['func_10714'] = func_10714
mod = relay.transform.InferType()(mod)
output = func_10714()
func_10715 = relay.Function([], output)
mutated_mod['func_10715'] = func_10715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5212_call = mod.get_global_var('func_5212')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_10731 = relay.TupleGetItem(func_5212_call(), 0)
call_10732 = relay.TupleGetItem(func_5214_call(), 0)
func_9696_call = mod.get_global_var('func_9696')
func_9698_call = mutated_mod.get_global_var('func_9698')
call_10736 = relay.TupleGetItem(func_9696_call(), 0)
call_10737 = relay.TupleGetItem(func_9698_call(), 0)
func_9955_call = mod.get_global_var('func_9955')
func_9956_call = mutated_mod.get_global_var('func_9956')
call_10744 = relay.TupleGetItem(func_9955_call(), 0)
call_10745 = relay.TupleGetItem(func_9956_call(), 0)
func_7563_call = mod.get_global_var('func_7563')
func_7566_call = mutated_mod.get_global_var('func_7566')
const_10750 = relay.const([True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False], dtype = "bool")#candidate|10750|(156,)|const|bool
call_10749 = relay.TupleGetItem(func_7563_call(relay.reshape(const_10750.astype('bool'), [39, 4])), 5)
call_10751 = relay.TupleGetItem(func_7566_call(relay.reshape(const_10750.astype('bool'), [39, 4])), 5)
output = relay.Tuple([call_10731,call_10736,call_10744,call_10749,const_10750,])
output2 = relay.Tuple([call_10732,call_10737,call_10745,call_10751,const_10750,])
func_10753 = relay.Function([], output)
mod['func_10753'] = func_10753
mod = relay.transform.InferType()(mod)
mutated_mod['func_10753'] = func_10753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10753_call = mutated_mod.get_global_var('func_10753')
call_10754 = func_10753_call()
output = call_10754
func_10755 = relay.Function([], output)
mutated_mod['func_10755'] = func_10755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10345_call = mod.get_global_var('func_10345')
func_10347_call = mutated_mod.get_global_var('func_10347')
call_10765 = relay.TupleGetItem(func_10345_call(), 0)
call_10766 = relay.TupleGetItem(func_10347_call(), 0)
output = relay.Tuple([call_10765,])
output2 = relay.Tuple([call_10766,])
func_10776 = relay.Function([], output)
mod['func_10776'] = func_10776
mod = relay.transform.InferType()(mod)
output = func_10776()
func_10777 = relay.Function([], output)
mutated_mod['func_10777'] = func_10777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10384_call = mod.get_global_var('func_10384')
func_10385_call = mutated_mod.get_global_var('func_10385')
call_10778 = relay.TupleGetItem(func_10384_call(), 0)
call_10779 = relay.TupleGetItem(func_10385_call(), 0)
output = relay.Tuple([call_10778,])
output2 = relay.Tuple([call_10779,])
func_10791 = relay.Function([], output)
mod['func_10791'] = func_10791
mod = relay.transform.InferType()(mod)
mutated_mod['func_10791'] = func_10791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10791_call = mutated_mod.get_global_var('func_10791')
call_10792 = func_10791_call()
output = call_10792
func_10793 = relay.Function([], output)
mutated_mod['func_10793'] = func_10793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10345_call = mod.get_global_var('func_10345')
func_10347_call = mutated_mod.get_global_var('func_10347')
call_10848 = relay.TupleGetItem(func_10345_call(), 0)
call_10849 = relay.TupleGetItem(func_10347_call(), 0)
output = call_10848
output2 = call_10849
func_10860 = relay.Function([], output)
mod['func_10860'] = func_10860
mod = relay.transform.InferType()(mod)
mutated_mod['func_10860'] = func_10860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10860_call = mutated_mod.get_global_var('func_10860')
call_10861 = func_10860_call()
output = call_10861
func_10862 = relay.Function([], output)
mutated_mod['func_10862'] = func_10862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9428_call = mod.get_global_var('func_9428')
func_9429_call = mutated_mod.get_global_var('func_9429')
call_10881 = relay.TupleGetItem(func_9428_call(), 0)
call_10882 = relay.TupleGetItem(func_9429_call(), 0)
func_8560_call = mod.get_global_var('func_8560')
func_8563_call = mutated_mod.get_global_var('func_8563')
var_10896 = relay.var("var_10896", dtype = "uint8", shape = (60,))#candidate|10896|(60,)|var|uint8
call_10895 = func_8560_call(relay.reshape(var_10896.astype('uint8'), [10, 6, 1]))
call_10897 = func_8560_call(relay.reshape(var_10896.astype('uint8'), [10, 6, 1]))
func_7136_call = mod.get_global_var('func_7136')
func_7137_call = mutated_mod.get_global_var('func_7137')
call_10902 = relay.TupleGetItem(func_7136_call(), 0)
call_10903 = relay.TupleGetItem(func_7137_call(), 0)
output = relay.Tuple([call_10881,call_10895,var_10896,call_10902,])
output2 = relay.Tuple([call_10882,call_10897,var_10896,call_10903,])
func_10917 = relay.Function([var_10896,], output)
mod['func_10917'] = func_10917
mod = relay.transform.InferType()(mod)
var_10918 = relay.var("var_10918", dtype = "uint8", shape = (60,))#candidate|10918|(60,)|var|uint8
output = func_10917(var_10918)
func_10919 = relay.Function([var_10918], output)
mutated_mod['func_10919'] = func_10919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4514_call = mod.get_global_var('func_4514')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_10956 = func_4514_call()
call_10957 = func_4514_call()
output = call_10956
output2 = call_10957
func_10987 = relay.Function([], output)
mod['func_10987'] = func_10987
mod = relay.transform.InferType()(mod)
mutated_mod['func_10987'] = func_10987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10987_call = mutated_mod.get_global_var('func_10987')
call_10988 = func_10987_call()
output = call_10988
func_10989 = relay.Function([], output)
mutated_mod['func_10989'] = func_10989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3416_call = mod.get_global_var('func_3416')
func_3418_call = mutated_mod.get_global_var('func_3418')
call_10997 = relay.TupleGetItem(func_3416_call(), 0)
call_10998 = relay.TupleGetItem(func_3418_call(), 0)
output = call_10997
output2 = call_10998
func_11001 = relay.Function([], output)
mod['func_11001'] = func_11001
mod = relay.transform.InferType()(mod)
mutated_mod['func_11001'] = func_11001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11001_call = mutated_mod.get_global_var('func_11001')
call_11002 = func_11001_call()
output = call_11002
func_11003 = relay.Function([], output)
mutated_mod['func_11003'] = func_11003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11056 = relay.var("var_11056", dtype = "bool", shape = (10, 13, 3))#candidate|11056|(10, 13, 3)|var|bool
var_11057 = relay.var("var_11057", dtype = "bool", shape = (10, 13, 3))#candidate|11057|(10, 13, 3)|var|bool
bop_11058 = relay.logical_or(var_11056.astype('bool'), relay.reshape(var_11057.astype('bool'), relay.shape_of(var_11056))) # shape=(10, 13, 3)
func_10917_call = mod.get_global_var('func_10917')
func_10919_call = mutated_mod.get_global_var('func_10919')
var_11062 = relay.var("var_11062", dtype = "uint8", shape = (60,))#candidate|11062|(60,)|var|uint8
call_11061 = relay.TupleGetItem(func_10917_call(relay.reshape(var_11062.astype('uint8'), [60,])), 0)
call_11063 = relay.TupleGetItem(func_10919_call(relay.reshape(var_11062.astype('uint8'), [60,])), 0)
uop_11067 = relay.acosh(bop_11058.astype('float64')) # shape=(10, 13, 3)
func_3473_call = mod.get_global_var('func_3473')
func_3477_call = mutated_mod.get_global_var('func_3477')
const_11074 = relay.const([-3,-6,9,9,-6,-10,6,-8,-5,8,-9,-8,9,8,7,-1,2,-7,-9,3,-3,-6,5,10,7,1,2,-7,-7,-7,4,3,5,-5,6,-2,4,-8,4,-8,7,-8,-7,2,-2,10,-6,4,-5,-10,10,10,9,-3,-7,3,10,-2,10,3,-2,-10,6,-4,4,1,-3,7,10,-5,3,-2,-1,2,-10,-3,-7,-3,-6,3,-10,-5,-7,4,-4,-6,-9,2,3,-9,-8,-5,7,8,-4,5,-9,-6,-3,-4,1,6,6,-10,-1,-4,-3,-3,-9,-6,-4,-9,-1,9,-7,-3,-1,-8,8,-8,7,7,10,-2,1,-2,-9,9,-5,-4,-1,3,-7,-1,-1,3,10,9,9,9,-9,6,3,6,4,-4,-8,-7,10,-9,6,10,-1,7,2,2,8,-9,-3,-1,-6,4,-2,10,-8,4,8,-9,4,-9,-4,8,-8,5,4,2,10,6,4,5,-3,-5,2,-2,-2,3,-3,-7,7,-4,-7,3,-10,-9,-4,-10,3,10,1,-2,-4,-8,5,7,5,-5,8,10,-4,6,-3,-5,-2,-2,8,6,8,-6,-7,-6,-6,5,-6,4,3,-10,-4,5,-1,-9,-2,10,8,4,10,-2,-9,-2,3,7,-6,4,-3,8,-9,-4,3,-2,9,-8,8,-9,6,-3,7,-7,-6,-5,-2,-4,1,2,9,6,-2,1,4,-6,-1,-1,9,-1,9,-4,8,-1,-6,-2,-7,-5,3,-8,7,-1,-2,-7,2,-6,4,3,-7,-3,-5,8,-3,2,2,-7,3,7,2,-8,10,9,-3,-7,5,5,-5,6,7,-6,-8,-8,-2,-8,-9,-3,10,2,-2,-4,-7,1,-4,-9,-4,2,9,3,-4,-8,-9,1,-2,-1,-2,-3,5,-2,-2,-10,8,-6,-1,-10,2,-8,-8,-10,-4,5,7,-8,6,9,-2,2,-10,-9,-1,-8,7,-4,6,7,5,7,-4,2,4,-5,4,-4,-8,-7,-2,-2,2,-5,-1,10,8,8,10,-1,-5,1,-4,4,-8,10,6,10,-9,-6,-1,6,4,1,-4,-10,-7,-8,6,4,3,-5,-8,-6,-1,-5,1,-2,-5,-10,-5,10,1,-4,10,-10,-4,1,-9,-8,3,3,-7,10,-7,-5,-3,4,-4,1,-8,8,-8,-3,8,-9,5,5,-8,5,7,10,4,-4,-4,-4,-7,-6,1,-2,-3,8,-5,-1,9,-10,6,4,4,10,-2,2,-7,2,10,-5,-7,10,-7,6,-6,2,-8,4,4,-2,8,-4,2,3,4,-4,2,-4,2,-6,-8,-2,5,-8,10,3,-6,5,7,-10,7,-1,-8,1,-4,-10,-5,9,-6,9,9,-6,-3,2,8,-8,-6,5,3,-3,2,1,6,9,9,10,2,-4,6,2,8,8,-8,-9,8,9,-7,-7,-10,-5,-4,10,10,8,8,9,-1,-3,9,-1,-7,-6,3,-7,10,4,8,8,6,3,8,-3,8,-2,-9,5,5,10,5,-1,-1,6,8,7,-2,9,4,-2,9,1,-7,6,8,-10,-5,-5,-5,-6,-7,-9,5,10,4,-2,-6,-3,-9,-6,6,7,6,-8,5,8,-8,2,6,3,-3,-3,5,-3,6,1,-5,3,-2,-6,8,-10,10,-10,-3,-6,-7,7,-4,6,10,-2,-8,8,-10,1,-10,-6,3,7,-10,-6,2,9,-6,8,4,2,-8,4,-9,-8,5,7,2,6,7,-7,5,-8,2,-8,-7,8,5,5,-4,10,9,-7,-3,10,-5,10,-6,-3,-4,5,-3,9,3,-1,9,6,9,8,8,-4,9,-5,2,-1,10,2,-9,3,-4,-10,-8,-10,2,10,6,-3,8,9,-7,-8,8,-4,10,-8,-4,7,5,-8,7,-4,-2,9,-4,-9,9,-10,7,2,1,-2,-8,-6,10,9,2,10,2,-3,8,-9,-9,-1,-3,4,5,-1,-8,-8,-1,-6,4,-8,-5,-5,2,9,-5,8,3,3,9,-5,-1,5,-1,8,7,4,-8,7,2,-1,-6,6,10,-1,5,8,-8,1,-4,-5,-6,4,-7,-4,-9,-10,4,6,7,-5,-1,10,5,-9,2,-9,4,-2,6,-3,-3,-2,9,10,-5,-10,-7,-8,-4,1,-4,4,-6,2,-4,-9,-8,-3,8,2,-10,4,5,-2,-2,4,-3,-5,-5,-1,1,-8,-10,3,4,-3,-10,-4,10,3,-8,5,5,2,-6,3,-2,4,1,10,-7,-2,10,3,3,-10,-4,4,-7,-3,9,10,-6,3,-4,-5,-6,7,2,-5,-9,-5,2,-4,6,-1,3,6,6,7,4,10,-8,5,-8,-6,-7,-9,2,9,-1,3,-4,5,10,-9,-5,-4,5,-4,2,-9,3,-10,-1,3,1,-8,-6,-6,-5,9,-3,3,-2,10,-1,3,-9,10,-3,-2,10,-1,2,-1,2,5,4,-3,6,-10,-4,-2,-7,-3,-5,7,6,10,-5,5,4,3,9,-4,-1,4,9,-8,-8,9,9,-9,-3,-5,3,-6,-9,4,-4,2,5,1,-2,2,-2,-5,6,8,-6,-8,10,-5,10,6,6,-9,4,6,-9,-9,-9,1,-10,-5,-1,-5,-6,1,-8,9,-5,-6,8,-6,-10,7,-9,7,9,-6,-6,5,-9,-7,3,2,4,-6,10,9,-7,9,7,7,-9,-8,2,-4,-8,-10,7,-9,-8,5,-7,7,-1,1,-4,3,1,-6,-3,-6,3,3,7,-3,7,2,4,-1,8,4,2,3,9,6,4,-4,-9,-7,9,1,9,3,5,-10,-5,2,2,-9,-7,-2,1,7,4,-6,5,-10,-3,10,4,8,6,7], dtype = "int16")#candidate|11074|(1078,)|const|int16
const_11075 = relay.const([-1.895851,0.087137,-2.276440,1.340237,-2.418591,-6.624849,7.479091,4.497231,2.387088,1.252115,8.046505,-1.542815,-6.078534,-8.186732,-1.043886,-9.457440,8.851079,-9.169418,0.145829,-6.550316,-1.155072,2.792289,-9.381634,8.444223,2.850467,-3.798505,-7.504085,0.409974,-7.764160,-5.033965,4.722348,-5.142759,1.637319,-4.892437,-0.670782,-2.498424,-5.831848,1.931984,-6.891019,-3.193962,0.410863,9.259933,3.141659,-9.001860,-3.824626,0.097569,8.237663,-0.793698,-9.546251,-9.397229,1.120436,-5.189915,-7.166765,-1.868401,-1.534843,-3.805655,2.597729,2.862703,-6.107203,2.074099,0.587394,-4.972696,-3.531566,3.159969,6.768031,0.249296,-0.303097,-2.722841,2.611625,-6.581818,2.991523,0.919947,-6.225928,-6.156026,6.694604,5.211612,-5.530530,5.493215,-6.505373,9.857853,-3.406565,-1.808521,-8.581884,3.039644,2.713369,-6.788977,-9.604637,-8.277125,-0.171801,5.064546,-8.883612,-4.492409,-9.799986,0.879844,-2.885412,4.001725,2.994198,-3.484678,-1.016003,-4.386913,5.781890,6.267100,-6.763561,-4.387173,-7.939875,-0.474530,-0.285106,9.437002,2.201208,5.835964,2.193350,-3.307359,-2.338041,3.163903,1.372527,-9.203925,-0.325808,-3.738994,9.870032,5.028513,3.534688,-9.931381,7.589905,-0.582265,-5.701845,-8.830277,-3.441230,5.668807,5.312253,-7.097865,-3.633549,9.420706,-6.251672,5.585970,-8.486317,3.815131,4.638437,7.532262,8.972205,0.054732,2.898526,4.002722,-9.013790,-1.657763,0.802787,-6.393779,-4.462928,-8.658823,-1.114398,-5.559980,7.649437,-7.105838,-7.458678,3.217790,4.554023,5.232047,-7.407446,3.364073,9.057035,9.834877,-3.332075,-7.386502,1.525242,8.492532,9.895733,5.487943,8.100744,1.490646,9.166007,4.158079,6.445401,-1.962967,7.162831,-6.313234,9.446407,-7.941470,-2.736037,-5.174888,6.544310,4.308963,-0.756908,4.675915,-1.575155,9.924190,6.058193,-8.667101,3.130129,1.104142,-7.793325,-6.915245,5.987386,6.811986,9.926775,2.160963,9.226411,8.104443,5.322219,1.214612,6.651321,-7.154693,6.232828,3.896749,0.210964,-6.042300,1.888708,5.305772,2.670030,-4.294472,4.345139,0.328465,-1.908046,-6.166871,-0.828871,4.393587,-9.520723,-6.977917,-7.964866,-5.380274,-3.838411,-2.796787,1.846379,-6.747465,-6.044583,-8.632972,5.711305,3.171236,-5.697899,8.554242,2.355573,9.842732,-1.133749,-5.503038,6.473403,-8.636246,5.883794,3.220973,3.461234,2.728727,-2.132915,0.872279,0.160322,6.105765,-1.751531,-9.881161,0.876732,5.487136,-1.715470,1.701255,-7.661117,9.849637,-6.333767,9.099650,3.194807,6.270336,-2.225055,3.550087,0.612972,7.318869,8.480287,-8.013263,5.571605,1.055369,5.587615,-4.355469,-6.508246,4.105513,-4.855962,-4.636183,0.857015,-1.823078,-9.503433,0.406054,-3.075413,0.585522,8.424882,1.415270,9.744873,-0.917346,1.202885,8.016206,-3.988360,-2.672491,1.079626,-7.840244,-3.441943,-1.679636,-7.602354,4.830019,-1.007780,4.171565,-2.524383,9.201616,5.164542,-4.241825,-1.438725,-3.841032,-1.951396,7.727680,-3.291975,-4.671147,-6.576139,4.036845,-9.331072,-2.456080,-0.756308,-5.107003,-4.474673,-2.433956,8.751468,-0.184447,-6.451409,4.406947,8.496938,-8.814843,-9.999100,-1.334850,7.252135,-8.237588,-4.388034,1.339905,-0.183778,2.028093,8.868614,-8.355935,-2.658774,-7.861586,9.505900,2.866801,-3.743070,-7.878136,-6.376149,-3.774877,9.380985,-2.968728,4.991731,-7.030415,6.772099,-8.593576,3.749724,-5.918265,7.526785,0.972384,-8.814660,6.434623,-0.823051,3.473199,-8.089646,5.609619,-5.183459,-5.322903,1.908474,9.566319,-3.305956,5.203323,-6.372202,-9.043864,-3.810889,0.407290,-8.518413,1.884659,-8.936005,-4.491022,-3.175100,-4.811851,2.424148,-6.254144,7.334988,5.067944,0.297407,-2.316522,-4.542059,7.051842,-2.488236,4.363137,9.842310,7.028018,-7.380553,3.424419,1.787354,1.745593,-1.495395,8.132467,-1.556748,3.036190,3.989666,7.721525,-6.235630,-0.198043,7.586086,-5.003162,2.499214,0.592650,6.670494,-9.160462,-0.193098,5.315366,-7.101903,3.078889,8.455001,-6.070781,-0.259896,7.463984,7.750558,9.751940,6.502994,8.071777,3.466251,-1.367174,4.050385,-0.760742,4.551222,-6.287722,-0.797986,-1.157026,2.974130,0.178734,-1.274174,-0.844130,-3.710270,4.860557,6.220030,-2.500736,8.389523,7.690025,-2.965099,-8.973546,5.593718,3.271714,-8.351484,-8.666978,-5.847548,2.159140,-7.006000,-6.239802,8.378482,-5.927896,3.091033,-5.384041,-3.415702,1.154744,4.765108,-7.357023,7.999465,-3.771066,7.191481,8.956919,-7.627660,-8.133064,-8.379287,-9.848823,-0.447816,2.611366,7.002063,-3.788841,5.850630,-8.486827,-4.338510,-0.900622,-2.158691,6.251726,5.880026,-9.695346,-3.659172,-4.734848,4.459067,-3.736606,0.342469,2.883993,7.387679,-3.627319,-6.553467,3.683917,2.783960,-4.186254,1.213363,0.601706,-8.756880,-8.365162,6.292505,3.054735,1.898764,-9.430351,5.607747,-3.995937,-6.960582,-1.195808,6.941448,9.308287,4.021555,3.218067,7.658899,4.036575,-4.451409,-5.752903,-4.820905,-1.318191,-9.507357,-5.806947,1.738158,-4.671778,-7.562947,-2.370704,0.979400,-2.500528,1.915394,1.756117,7.773461,-9.922478,-9.739113,8.665659,-5.180554,0.180123,-6.068969,4.685134,-3.795217,5.150684,-3.158526,-3.560531,7.565350,-2.692711,-3.408400,-7.700486,-2.488635,3.309217,4.929720,0.114285,6.800944,-3.351730,-3.067685,6.003364,-6.036815,7.717269,-6.956058,-5.935677,5.635413,-2.832202,-5.104949,3.693535,2.746028,9.810167,6.833087,-7.650916,1.711629,-7.048394,-8.052966,-4.904172,6.979164,7.529339,-5.646606,5.094526,-1.849488,6.999976,-3.941310,4.299414,-6.831225,4.867384,3.590071,-1.213652,-2.437863,6.827592,-5.337391,8.425939,8.930206,4.635795,-5.491732,5.371935,-9.544394,7.611096,8.383862,-1.412531,-0.529707,0.990311,6.308246,-3.865060,6.553054,5.992415,-2.703210,8.987685,0.511645,9.992892,0.566260,4.139689,3.472020,8.464954,1.004558,-0.005235,9.286461,-5.570002,1.267552,-9.396042,-2.619145,-2.010738,3.270079,-4.550338,-3.400391,-5.823062,0.226498,4.445942,5.086697,0.672086,-2.417185,-2.635950,-5.407023,9.853878,9.838712,-8.539156,9.994824,-8.525724,-2.327226,9.488626,-7.871316,-1.140179,6.466627,8.202701,-1.746574,-8.367337,-4.630477,-6.167352,8.478245,6.170006,-9.888486,-8.277393,-6.527704,-6.374515,9.437515,-6.308473,0.458641,6.103372,-6.770008,7.362732,-2.727764,-1.721389,-6.646942,6.471023,-3.839807,3.129883,-6.162848,-9.639973,-6.104867,8.261991,-2.262503,-2.055998,-7.583254,4.034578,-0.686745,-5.357048,-7.389677,1.787376,4.911327,-7.416182,9.770841,-5.672012,4.852186,0.455187,1.994859,8.046946,-9.471365,-9.757948,-6.739183,3.174396,-0.391966,0.676563,-0.243572,-8.424210,8.187038,7.055453,-6.508254,-4.531095,-7.441580,0.519241,-0.040312,-1.358826,-9.842634,6.737713,-5.874518,3.925998,-0.800988,0.314468,-3.811990,4.175192,-9.408663,-4.124852,-2.023747,-8.398405,-9.761447,3.359987,-7.844749,4.643398,-1.416677,8.209817,-4.757713,9.849276,2.723508,1.584235,-9.543395,1.358342,-2.671397,9.863683,-3.104195,3.024763,-6.467241,6.185889,-0.493410,9.749590,-3.084999,9.298010,-1.608302,1.199519,6.278364,3.334736,4.959788,-3.133162,-0.874864,6.004227,0.265333,-0.312022,7.654395,0.133876,-6.698912,-2.835278,2.147427,1.795754,-6.616848,-9.040655,-8.802320,-5.376310,-4.197067,4.037702,-8.058728,-3.828289,8.236845,0.730777,-3.225425,3.510712,-9.557453,0.243342,8.627482,3.169274,-1.352381,-2.691764,4.951945,-0.438597,4.205134,-5.231257,-5.418834,-0.898127,1.352747,-7.437369,-4.789367,1.286842,3.789866,-6.630720,6.282919,0.358740,2.271920,-0.144077,-4.994776,4.918997,-2.810210,8.086263,-9.246357,0.133576,-3.833742,8.384037,5.667579,8.602652,-7.893805,3.924316,0.147674,6.229601,-9.408424,4.045953,-1.457618,9.741104,-7.936420,-9.763961,-7.042426,2.728635,5.736712,7.267563,3.603025,-9.258238,-5.769753,0.836332,-6.192155,2.617102,4.193321,0.861863,3.002711,-9.027561,4.159833,-9.170315,-9.673117,-3.037249,-7.639997,-5.692771,-7.439043,3.231201,7.970468,-6.377000,4.005384,-2.795599,-8.808432,5.853272,-9.643742,-8.286589,-3.092378,8.742138,-3.937676,-6.747770,5.845269,-8.002795,6.020278,7.740104,-0.602823,-5.312709,5.226871,-0.542780,-0.060900,1.069277,-2.586674,7.185546,-3.870055,3.681969,-3.332983,3.318978,2.169518,-0.100661,-6.137950,8.992195,3.856769,-7.567414,-7.775427,8.141351,-5.766492,-4.633381,-0.663740,0.640538,-5.880486,3.342876,7.460804,5.905055,-3.311324,6.532383,0.571156,5.661974,7.054081,4.812331,7.740424,-8.208768,9.728163,-9.337576,-4.893240,-8.741251,-7.522110,-2.669153,-0.121121,-9.637210,3.727391,8.839829,-7.310901,4.387699,0.719073,-4.550224,3.140971,-6.022139,6.314765,-8.805147,8.432358,-7.376135,-0.053260,3.337227,-1.983154,5.858152,4.112316,-1.661083,-5.480179,5.825063,-1.945357,-0.283954,3.377287,-0.721890,5.171395,-9.568053,4.802261,-9.185298,6.447123,9.181941,-2.453927,0.118458,1.977131,7.371783,-5.225201,7.443266,-7.424243,-5.950550,2.080610,-4.359394,-0.810836,4.978649,-7.146469,2.482963,4.842192,0.723052,-7.623677,3.874557,3.636255,3.901236,-4.966203,-6.758832,-1.882690,-0.599647,-9.497950,-5.463698,4.532698,-6.169994,4.834811,-4.563531,-9.135285,-6.394815,-1.061087,7.421198,5.301201,7.048963,0.912706,-7.336230,7.159265,9.160879,-7.408285,-0.551884,8.192980,7.150528,-4.727465,5.781270,6.329443,0.292079,-1.434833,1.116574,4.102983,8.921611,8.972681,-9.642267,-4.634471,-5.359906,5.158774,-0.754195,3.232353,-6.107490,8.306504,0.292676,6.097976,7.415862,9.243057,0.925797,7.076593,6.335548,3.042393,4.330984,-2.532643,-9.511587,-1.953373,-4.001931,-0.776598,-3.888339,0.950328,-8.937025,-0.120621,-5.652266,6.046607,0.603272,-0.034338,7.878640,-9.556423,5.379562,-2.499592,4.563011,-1.857223,-5.099755,-8.688437,8.977899,-0.197178,-0.122774,4.412939,-4.536554,8.322468,8.225212,9.353005,9.748909,-8.860635,-0.783363,-5.568824,6.011572,5.578974,4.179048,-6.688926,7.541929,-8.918537,-8.211020,-8.720854,-7.761133,-3.098446,3.034373,-5.951420,2.913846,7.485205,3.499795,2.373021,2.809905,3.452817,-5.084765,9.835443,-9.194712,-4.603511,0.083916,-3.076786,-7.504813,5.889596,-2.952873,-7.978529,-1.818679,9.071585,0.378758,2.480738,7.923975,0.131659,-8.043230,-4.398469,-9.009070,5.640372,5.615843,-7.726007,-7.436524,-4.356753,7.170952,3.261363,-1.780361,-9.141434,4.631380,-0.680467,-9.332357,4.997143,-0.002192,5.407744,-7.869577,-2.445960,-9.184988,4.545396,2.100710,0.528262,-6.365657,-9.453305,0.555657,-7.370959,-8.582131,-0.043119,-7.607034,-8.516437,6.287300,9.370245,-5.697077,2.921348,-2.067347,-1.903897,-3.418912,8.077219,-0.635230,-8.911295,-9.429101,-4.576028,7.092009,7.361736,-1.396164,7.183330,9.417883,0.997043,-4.991800,2.141534,5.084179,-3.882267,8.298768,-2.098880,-5.535801,-6.442532,2.975866,2.553948,7.583517,-6.377941,-6.926097,9.547423,1.361316,-8.767852,0.243840,-1.102263,7.745731,8.046929,-4.508520,-1.369958,-7.827559,5.959542,0.349936,-6.421863,5.223915,0.233549,-4.611263,-9.701052,1.702469,-8.173331,-4.652453,-8.953420,8.971528,-0.927608,1.731935,-4.214803,8.140456,-8.426833,9.153300,7.184221,7.697516,-3.548184,0.442084,7.263675,3.062876,-5.794491,4.262112,9.876435,-6.702026,-9.177181,-4.588714,0.392918,4.186611,8.818775,-3.440329,2.844674,6.252579,-8.377566,-7.597733,0.163574,7.275089,5.701587,-2.435291,9.955615,4.777902,7.113740,9.628823,1.051444,-1.069530,9.171496,-7.941768,-4.865689,-2.829679,-2.511149,3.655303,2.651661,4.607310,8.098612,0.300317,-9.668030,-0.800162,9.993547,-8.834483,-9.722171,0.590216,-2.874276,1.624050,3.277830,5.291441,-1.818751,9.854095,5.091427,1.967710,1.451979,3.771567,0.235578,7.210012,6.636527,9.912748,-2.132245,3.375515,-8.211547,6.590866,9.515893,-8.137610,2.443292,4.129466,-2.098116,6.614700,3.781153,-6.455813,9.907811,0.194247,7.041651,-9.256064,5.693069,-1.703008,-9.524904,9.911818,-6.104656,-3.424957,-1.283225,-2.066052,-3.366540,-2.920448,6.727617,-3.384433,-8.723122,4.076427,-2.200754,1.114654,-4.044324,-4.976949,8.521700,-7.944647,9.808750,-1.251335,-5.906547,-7.494945,-9.340245,-5.300569,4.162350,-7.377150,6.045413,-0.630131,-1.557286,1.315309,6.220651,9.649786,-1.463038,4.891946,-4.962559,2.453814,-2.323631,9.776797,-3.913480,-1.216034,-4.694388,5.994825,8.762250,-4.571606,2.102963,-7.738295,8.437636,2.396663,2.481021,7.403384,-7.805703,-8.879401,-9.667710,-8.906937,3.038983,3.123830,5.670988,4.696667,-2.936789,-2.049287,-1.891036,-2.327406,1.681998,0.263029,-1.050007,-4.882567,2.769666,-1.681697,5.659080,-7.682331,8.835556,-8.189883,-7.289409,1.394572,3.859266,-8.383428,-2.066609,4.551243,-8.899522,-5.090260,4.055131,-0.090488,6.196611,7.698920,1.384634,-3.480009,5.270132,3.736936,-0.197331,-4.263940,9.740405,8.559684,0.648053,7.767876,0.465539,3.917286,-2.841200,8.080152,-4.733963,-4.935615,-9.990277,-1.759978,-0.177874,6.748748,1.857260,-4.202033,-0.555842,-6.174122,3.352033,-3.115233,-4.720061,9.223418,2.077424,-5.053115,7.403287,1.966360,6.121588,8.842329,5.789494,8.210474,-2.261996,5.414669,0.271824,1.809909,9.807124,-2.339454,3.165789,7.394003,-9.667454,-3.461583,-0.322126,-6.243550,6.319286,8.872845,-5.986807,9.246329,6.756196,-2.744418,2.130438,4.063018,5.129108,-6.103513,0.856660,5.092126,7.283511,-0.249802,4.057853,-4.118731,-1.735757,8.705829,-8.192172,-8.267221,-4.942712,-7.001469,-5.421126,-0.842995,0.341635,-8.260213,-2.812095,1.500625,3.439532,-9.815547,-9.284810,3.069631,-7.118874,3.502249,-6.621549,-3.575219,-2.897454,-6.488833,-9.778055,-1.648829,2.314109,0.493526,-1.271384,9.506596,-6.368458,-8.431258,-4.517434,9.942952,8.492687,3.646639,-3.577542,-0.661577,6.610954,5.230228,9.660903,7.417176,-6.547265,0.040103,3.193798,-0.167563,-6.078680,-6.657301,3.809760,5.116604,8.924429,-0.814239,0.162209,-4.535389,0.229215,-5.117337,-2.309469,5.625697,-5.324563,3.507132,8.704924,9.580177,3.720962,9.921540,-5.172081,7.912409,7.515828,9.903690,-4.118507,0.210288,-9.733713,-8.482832,-3.416503,3.995516,-4.943082,-0.204221,4.518986,3.192090,-1.270459,0.327771,-6.517517,-3.765529,-5.651404,-8.557176,7.154401,-8.048711,7.721048,-2.800317,-5.897409,9.220975,4.832655,-9.823091,2.106279,0.301140,-7.491506,-3.183109,6.324696,7.210525,7.862354,-7.776619,3.124809,-1.561695,5.909281,-4.090516,-9.479932,6.733182,-4.850983,-9.499061,4.991594,5.662272,-9.330559,-5.014769,-1.761269,2.614871,0.786095,-1.694434,-8.489376,-9.092229,-1.253790,5.116824,-8.955297,-5.567571,3.459373,-9.257044,-3.381128,-8.929910,-4.986283,-6.378681,-7.899484,-8.460654], dtype = "float64")#candidate|11075|(1470,)|const|float64
const_11076 = relay.const([3.778504,5.749519,-6.260923,-4.570357,8.706411,7.313058,-9.357207,-9.870613,3.198344,9.451923,6.500164,-2.944378,-0.930140,-6.349461,-9.193526,4.419170,4.462083,4.618498,-0.471336,-4.518510,-3.830735,-4.281449,4.304286,7.982049,4.661252,-2.016024,-5.159551,3.076854,0.332395,-5.921196,2.347797,3.920285,-1.070161,-5.595237,4.627656,2.881778,6.370154,-6.669956,-1.895978,1.201841,-4.985555,-7.370210,9.215222,0.903145,8.664139,-1.228250,-6.439294,5.164406,-1.824967,7.723628,-4.860737,9.710761,-3.988762,0.523026,7.036139,-0.420605,-3.691879,-7.008094,-7.040695,4.114462,1.387744,-7.628771,1.676668,-7.500933,-9.586186,4.338039,-3.130564,-6.923729,-8.554802,4.945299,-9.242149,-6.265730,3.235602,-6.895345,-8.338498,4.807018,7.770841,8.667145,-4.641822,-2.449762,9.993671,0.274968,-2.449929,-4.009987,7.684277,-3.211756,-6.215827,6.123110,1.227045,6.487707,0.980376,2.111752,6.661819,3.063094,6.664825,-6.012683,-4.474546,-6.667769,4.671687,2.311361,2.814412,-8.624246,-3.077786,3.264795,-6.416589,-7.845991,5.742067,-9.845674,-7.258430,-6.421119,-2.115984,6.208461,9.481895,7.670249,-4.352019,1.276225,4.449155,6.652719,8.962172,6.586925,-3.880426,2.850127,-1.756386,-2.301830,-9.412824,-5.124431,4.609756,9.535438,3.811832,5.016628,5.590600,8.667013,-2.204462,2.202954,5.804077,1.602829,-4.651397,-5.524010,4.578585,8.440551,2.372916,-5.087683,2.700975,7.417562,-5.063682,1.023496,-3.220626,-7.537889,4.802545,-5.121232,7.155484,-7.090612,6.618063,-5.940788,5.892245,-9.057067,0.185560,3.397427,-0.500104,9.170913,1.115097,-0.702600,-5.190612,0.704822,-7.709356,-3.988832,9.323308,3.274498,9.212771,2.593318,-6.760589,-0.288969,-9.259641,-2.614418,-6.200679,-1.315642,-1.810087,7.412723,1.474426,0.023278,8.784072,7.143649,-2.748075,0.679186,-8.797977,8.808958,-6.996886,-9.077879,3.654308,1.934879,2.514280,-3.352389,-7.619920,-9.709049,-9.290355,-0.135657,3.404126,-5.544968,-2.532581,-7.936732,6.041168,5.208357,9.302516,-9.756109,9.389045,-9.949201,6.046808,-7.490605,8.266161,-6.985783,-9.251431,9.190945,-0.440453,-9.450601,0.834710,-9.583200,-9.273834,-5.048378,4.573243,-9.643609,-0.084078,3.693164,3.698117,9.156223,-8.982429,-0.929317,-1.124269,2.248305,-5.718270,-2.669052,-1.512941,-6.652683,-2.219941,-5.616466,1.725101,-9.656337,6.948334,-5.096919,-7.345975,0.960269,5.232690,5.650743,8.975504,-2.797332,-1.617335,1.248364,8.001352,0.016790,-7.299719,-3.593971,7.820944,8.846482,-9.028905,3.613996,-9.640404,-1.320190,7.590337,0.472634,-4.415493,-7.846809,-6.669939,5.851231,6.773492,-8.666519,-2.717463,9.756023,0.706311,-8.805416,-5.365853,-9.267510,2.397414,-4.990904,8.940739,4.171499,-8.027724,-9.034167,-0.667203,-4.709209,0.286314,7.003271,7.132394,8.643252,-1.985317,5.622574,0.864150,6.675751,-5.943074,0.812285,5.534889,6.679574,-8.206970,4.755032,6.342664,-4.479292,-8.727166,-6.351303,9.010098,-4.582816,3.963753,-0.656191,-6.672154,6.599050,-4.708786,-5.454309,-6.800573,4.116203,1.687598,1.275851,-7.653849,4.326771,8.374191,1.193795,5.988620,-1.124694,5.871053,-5.108670,-4.699957,-8.313156,-4.548889,7.449129,-6.871492,-7.842702,2.790796,-0.616577,1.744961,-0.419169,6.971828,2.476872,9.401164,6.178589,3.925845,-6.370079,-5.424574,-7.708485,6.171864,8.007362,-1.483948,-4.156824,4.186727,5.280870,-7.692695,1.168328,1.398941,9.624016,8.454829,0.205336,-1.041805,-2.439256,-0.837668,8.456457,-4.732087,2.262663,-2.316657,-2.771675,-6.296770,2.013085,3.843660,-7.713622,5.321845,-8.978601,5.554270,4.650461,6.976594,-9.289762,-0.615229,-6.165487,-7.198393,4.773943,9.986966,-6.571862,-3.705042,-3.146722,-2.252798,-7.566589,-8.361245,-1.964033,8.765407,9.160400,-1.303796,-8.769381,-6.447807,4.650983,4.188694,2.579873,2.176136,-5.337114,6.212111,2.165756,-6.506696,-9.951945,-0.829083,-8.561474,-4.031814,1.911913,8.427406,-8.348101,-5.766542,-2.941922,-0.569351,-2.814534,6.802993,9.346117,7.411852,-4.884508,0.072657,7.158537,-0.494138,3.450845,2.060521,1.401965,-7.131782,-2.559702,5.400511,-4.616794,4.784501,8.897260,-3.765279,5.997645,-7.864037,9.765103,-2.837653,9.688369,-2.877274,-7.651844,4.995251,-5.531291,2.858000,-4.237593,6.803604,-1.576228,0.856880,3.892813,9.892277,-4.745358,-0.210064,7.068963,-0.958306,9.955634,5.750053,-9.585753,1.257189,-0.090031,-2.044904,-8.090609,-3.348934,-6.106041,-9.569437,7.715892,-9.563453,2.913947,1.300541,-5.160084,-2.243634,-1.747479,8.894779,-9.314952,1.236017,0.090771,-7.883646,8.385650,-2.380570,-4.947124,6.714373,-9.331736,3.893314,-5.328456,-7.826830,-4.377136,3.466402,-7.656433,-9.641421,2.508493,-6.472746,4.169953,-2.298555,4.814793,-7.172676,-3.227777,9.329112,1.215684,-9.115660,3.720181,-5.136988,2.182204,-3.669765,-9.900672,6.699184,-5.860139,-1.423209,-6.081376,-1.390768,-3.266943,6.576823,-0.093158,5.948877,-1.180521,0.833264,9.818096,8.216519,5.799345,-7.107262,-8.076216,-0.946917,6.381146,-4.429391,4.500074,7.127945,2.474727,-7.547197,6.154456,-4.220080,-8.402726,4.028496,8.855144,-5.004278,-3.604205,4.644971,-8.409792,5.369142,-3.860367,4.626362,-4.327562,3.264897,-5.278584,3.770368,-0.796422,1.830383,-0.058345,-7.414255,2.574123,-5.520144,6.534226,2.056876,3.115819,-6.468417,-7.079855,-9.045833,-2.344861,3.444345,8.881956,8.659868,-3.031785,-6.717657,5.858927,-5.941091,-3.514637,0.193979,-9.072537,5.357709,0.667558,-3.579780,-6.910365,1.223237,-2.486641,9.466806,0.508392,0.260990,4.843338,-3.486248,-7.748243,3.380310,-8.360352,4.338065,0.489743,-5.785319,-6.971266,2.325327,5.876644,6.929332,8.623545,-4.355200,9.839061,-1.786859,6.775447,-6.095084,7.629482,-5.111632,-7.475527,2.858953,2.605711,-8.325380,-9.590261,-1.586178,-6.235099,6.372886,-7.021668,0.325405,-9.674425,-5.897682,-9.531236,1.837517,-9.577653,5.253640,4.631150,2.059423,1.970228,-7.288294,2.944424,9.440580,9.006524,6.380345,-9.964100,0.155529,-7.392948,8.777156,-9.800735,-4.701301,-1.068428,1.743610,-2.714896,-8.137859,5.347925,7.558871,1.403017,-9.981166,-9.850327,-8.412824,-2.474682,0.078430,5.343533,-2.589269,4.982485,1.485208,-2.487028,-0.319065,9.713949,-9.709414,2.318442,4.683304,2.644487,8.068528,6.940117,-4.107291,-1.405955,-0.298656,-9.837660,7.077884,5.822053,-3.217081,-3.034929,8.752111,0.866855,-2.268773,0.731657,-9.208834,8.839031,-7.111098,3.402969,5.757928,-1.833009,-8.483415,-9.925600,7.765463,-7.636870,3.121878,-1.651155,-5.228042,9.848176,-4.553465,-1.183060,5.662188,4.730926,-9.983698,-4.030439,-0.793980,7.301602,-3.595670,-0.705980,3.544851,2.983503,9.302169,4.154372,3.705016,-8.765952,-6.605837,-2.553270,9.390457,7.009049,6.564441,3.096717,9.432257,-0.154085,-1.206545,0.892086,5.434717,-7.203697,-6.789321,-3.013588,-5.441425,6.530562,2.792401,-1.678168,4.976426,-4.563172,-5.200843,-4.301334,-6.420146,7.666553,-2.883107,-3.585670,1.170822,-7.693212,9.894954,7.960365,-1.648750,-2.273698,3.246592,-9.241996,-6.455191,4.590133,-6.490451,-8.836783,-0.478784,6.181981,-4.287171,-5.634398,-3.850333,8.860732,5.698589,-0.052774,-4.326368,9.751346,1.860742,-1.839559,-6.670190,-0.071935,-1.514473,0.272858,-3.672801,6.787713,-1.852673,-4.670130,-2.001342,-4.546183,2.974854,8.460544,2.677906,5.721960,-4.420243,8.592532,4.977773,3.940596,-9.679594,-5.331338,2.042701,-8.159746,2.287261,8.848474,-0.298298,0.944867,-5.845862,1.882310,3.118268,-1.999222,6.380042,-2.155755,-8.447370,-5.420666,-0.170486,7.988903,-5.067259,3.131541,2.781559,4.007401,4.909606,0.123288,-3.181995,3.525299,1.977861,1.316655,3.721400,9.412145,-3.231042,8.839042,-6.248845,-3.698613,-6.755104,-4.234668,-5.191381,3.521499,-0.062003,2.197087,-9.636598,-7.172574,2.075467,-6.771795,5.862947,-1.435697,5.588369,-9.569497,-7.854253,-8.653553,-0.226994,-5.108752,-1.517267,-8.637615,-2.413009,1.539970,7.702459,-2.697846,-7.563393,9.548535,-9.029858,2.999382,6.032097,6.391709,-7.856364,-1.032829,-7.577119,-6.303954,6.176276,6.577220,-5.224418,-6.556311,-7.211472,-3.631212,2.886342,-9.820484,0.234111,1.606978,4.459792,7.357726,-2.071683,6.641459,-3.732853,0.915847,-3.151592,-0.500120,-3.577195,-6.675167,9.204901,5.472349,7.257368,6.460176,8.844083,6.083511,5.260051,-5.874621,7.049788,3.462576,6.377384,6.615554,7.441382,7.052600,-7.086717,4.988573,-3.690956,-7.998945,-2.186451,6.780941,-8.588946,9.608461,2.670153,4.627006,2.165613,-8.415855,1.556404,-5.869433,9.080692,-6.934170,-5.278945,-5.465501,-6.330076,-5.375051,-3.994691,-2.596552,-6.992666,-1.646653,-0.091435,-2.863330,-9.852749,-3.155319,-2.166323,3.713050,-1.818534,0.888671,1.949842,-9.366305,-8.361309,-1.898443,-8.062036,6.607948,-3.802501,-4.512858,2.832334,-7.513091,1.763688,-7.666469,-4.610674,-2.670490,7.140523,8.059647,2.160094,9.672051,-0.315273,-9.806752,-7.496166,8.633776,3.094560,6.232970,4.035760,8.713723,1.471661,-7.246499,6.319652,-8.183665,7.046345,9.977167,5.905315,-9.456012,-4.921483,-4.023620,0.411763,-8.693558,1.157378,1.230743,0.784519,-1.645539,-3.148717,-8.154457,8.987033,3.895184,-3.948387,9.602006,0.794295,1.701939,-3.534166,-0.516358,-4.198841,-5.966459,0.144616,-7.368060,-6.528555,9.829833,9.930302,-6.712205,-3.933932,2.420606,-4.980571,1.489893,7.580768,-0.235745,-1.864881,8.820638,2.854936,2.751555,0.809494,6.029993,-8.532765,7.250222,0.821409,-2.562185,7.871248,-7.869702,-3.286580,4.726900,8.609666,6.792217,-0.326690,-4.890005,-0.641177,-1.977837,8.775928,-6.369461,-2.087544,8.701507,7.044686,-5.329897,-8.030880,6.196697,-2.202137,-1.164835,-8.098627,8.427821,-8.466083,-1.954291,5.986603,-2.084876,-0.972648,-1.139585,-0.105678,-7.834714,8.725179,-7.974938,-4.997616,-9.134254,-1.210683,-8.706346,-2.780485,-2.656935,1.494456,-8.368503,4.115910,8.607878,1.544708,8.269717,7.947127,4.653030,-6.713364,-6.470249,3.638097,0.640132,1.021386,-5.564458,8.955850,-7.901821,4.830715,-5.804048,-8.426893,3.570381,0.647335,8.117419,-9.211296,-5.346028,8.878628,2.808371,8.605168,-7.698178,-0.914922,4.408093,5.357353,-4.628312,-6.727177,-0.584960,-7.770479,-1.522164,-3.562732,5.164155,-0.802675,0.344114,-3.570910,2.288557,0.690925,1.951706,-5.843988,2.230990,-0.125928,5.979329,-8.389679,2.588442,4.659808,8.150293,-7.528463,-8.349289,-4.960569,-0.935103,4.054358,-4.037020,3.879538,-2.368589,-4.310488,-5.890987,-5.199141,3.392612,7.213842,1.357041,-0.599148,-4.912711,8.995329,-0.639934,-1.815591,8.090635,-3.243771,-6.794619,7.254096,9.469259,-6.680715,-0.089912,2.327733,-6.482748,1.174244,4.223008,-2.795786,-1.113543,9.513598,9.034921,8.356309,4.832760,-0.078852,3.200768,-1.166974,-5.176176,-3.137530,6.525284,-9.663015,-4.529227,-3.446773,-8.018922,1.599471,-6.601826,9.947198,-7.850081,-2.554718,-7.437387,8.804701,-1.865229,-3.486145,0.979862,-7.303286,8.770414,-2.048508,-7.284245,6.771935,7.096262,0.068648,8.183762,0.994334,9.514582,2.477020,-0.686732,8.312002,7.430013,1.814629,8.381907,2.793688,6.878891,-4.916866,-9.352631,-6.662913,1.463053,-7.020726,-2.048269,-2.212188,5.582286,4.903086,7.033504,9.627316,-9.214466,7.687221,-1.074763,-7.268697,-7.022485,3.288549,6.565915,-7.986237,3.761946,0.409475,-1.390316,2.289337,-8.134423,0.503787,7.772625,-1.948799,-3.358166,0.506580,-2.462995,-3.980391,4.026199,-3.025047,6.868731,5.673216,1.664136,-8.701925,-7.978016,7.462608,-4.167621,-7.590752,7.617049,8.509004,-7.955275,-3.938698,1.616485,0.249124,-2.076233,1.538446,-2.336255,-3.273437,8.060781,7.404717,-5.816343,-9.471531,-2.879134,7.661050,2.465780,0.260680,3.004633,6.244282,-8.473822,8.261846,-4.530010,-2.400149,8.250550,-8.656953,7.312685,3.934952,-1.394133,-1.250766,-5.644949,2.147831,-2.207148,-6.926951,-0.761065,-7.669475,-3.056314,-5.115178,-7.125793,-9.442168,5.132120,8.158020,-0.098455,1.747271,-0.988546,9.931008,4.612495,9.725950,3.555922,3.780695,6.905863,-8.388140,-3.601643,-2.515414,3.756155,-6.458181,2.916392,9.165049,-2.726566,-4.492848,-4.117924,-9.956880,-3.376699,-0.248149,9.213459,-4.014094,2.136754,-9.472516,6.418747,9.646082,3.947465,7.584359,8.387963,9.682345,9.435210,-9.386162,2.971619,5.685186,-3.241909,-5.321894,-7.765989,-0.571636,5.679731,7.741344,7.644330,-6.247797,-1.496069,3.047859,-6.661383,-5.581436,0.674640,-3.473480,9.234974,-1.802208,0.906306,0.992555,3.662116,5.258413,-7.770327,8.733034,5.712129,5.081531,-2.421827,5.232718,5.018801,-5.933217,5.131424,6.215014,6.666781,-0.536022,-4.070799,-6.623066,-6.305571,3.838358,-5.621495,-0.180225,-5.983963], dtype = "float64")#candidate|11076|(1274,)|const|float64
call_11073 = relay.TupleGetItem(func_3473_call(relay.reshape(const_11074.astype('int16'), [14, 7, 11]), relay.reshape(const_11075.astype('float64'), [1470,]), relay.reshape(const_11076.astype('float64'), [1274,]), ), 5)
call_11077 = relay.TupleGetItem(func_3477_call(relay.reshape(const_11074.astype('int16'), [14, 7, 11]), relay.reshape(const_11075.astype('float64'), [1470,]), relay.reshape(const_11076.astype('float64'), [1274,]), ), 5)
output = relay.Tuple([call_11061,var_11062,uop_11067,call_11073,const_11074,const_11075,const_11076,])
output2 = relay.Tuple([call_11063,var_11062,uop_11067,call_11077,const_11074,const_11075,const_11076,])
func_11083 = relay.Function([var_11056,var_11057,var_11062,], output)
mod['func_11083'] = func_11083
mod = relay.transform.InferType()(mod)
mutated_mod['func_11083'] = func_11083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11083_call = mutated_mod.get_global_var('func_11083')
var_11085 = relay.var("var_11085", dtype = "bool", shape = (10, 13, 3))#candidate|11085|(10, 13, 3)|var|bool
var_11086 = relay.var("var_11086", dtype = "bool", shape = (10, 13, 3))#candidate|11086|(10, 13, 3)|var|bool
var_11087 = relay.var("var_11087", dtype = "uint8", shape = (60,))#candidate|11087|(60,)|var|uint8
call_11084 = func_11083_call(var_11085,var_11086,var_11087,)
output = call_11084
func_11088 = relay.Function([var_11085,var_11086,var_11087,], output)
mutated_mod['func_11088'] = func_11088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6853_call = mod.get_global_var('func_6853')
func_6854_call = mutated_mod.get_global_var('func_6854')
call_11090 = relay.TupleGetItem(func_6853_call(), 0)
call_11091 = relay.TupleGetItem(func_6854_call(), 0)
output = relay.Tuple([call_11090,])
output2 = relay.Tuple([call_11091,])
func_11097 = relay.Function([], output)
mod['func_11097'] = func_11097
mod = relay.transform.InferType()(mod)
mutated_mod['func_11097'] = func_11097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11097_call = mutated_mod.get_global_var('func_11097')
call_11098 = func_11097_call()
output = call_11098
func_11099 = relay.Function([], output)
mutated_mod['func_11099'] = func_11099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6853_call = mod.get_global_var('func_6853')
func_6854_call = mutated_mod.get_global_var('func_6854')
call_11153 = relay.TupleGetItem(func_6853_call(), 0)
call_11154 = relay.TupleGetItem(func_6854_call(), 0)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
call_11186 = relay.TupleGetItem(func_4686_call(), 0)
call_11187 = relay.TupleGetItem(func_4688_call(), 0)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
var_11195 = relay.var("var_11195", dtype = "float64", shape = (396,))#candidate|11195|(396,)|var|float64
call_11194 = func_585_call(relay.reshape(var_11195.astype('float64'), [11, 9, 4]))
call_11196 = func_585_call(relay.reshape(var_11195.astype('float64'), [11, 9, 4]))
output = relay.Tuple([call_11153,call_11186,call_11194,var_11195,])
output2 = relay.Tuple([call_11154,call_11187,call_11196,var_11195,])
func_11198 = relay.Function([var_11195,], output)
mod['func_11198'] = func_11198
mod = relay.transform.InferType()(mod)
var_11199 = relay.var("var_11199", dtype = "float64", shape = (396,))#candidate|11199|(396,)|var|float64
output = func_11198(var_11199)
func_11200 = relay.Function([var_11199], output)
mutated_mod['func_11200'] = func_11200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_11255 = relay.TupleGetItem(func_2518_call(), 2)
call_11256 = relay.TupleGetItem(func_2520_call(), 2)
var_11258 = relay.var("var_11258", dtype = "float32", shape = (6, 10, 1))#candidate|11258|(6, 10, 1)|var|float32
bop_11259 = relay.multiply(call_11255.astype('uint32'), var_11258.astype('uint32')) # shape=(6, 10, 1)
bop_11262 = relay.multiply(call_11256.astype('uint32'), var_11258.astype('uint32')) # shape=(6, 10, 1)
output = bop_11259
output2 = bop_11262
func_11265 = relay.Function([var_11258,], output)
mod['func_11265'] = func_11265
mod = relay.transform.InferType()(mod)
var_11266 = relay.var("var_11266", dtype = "float32", shape = (6, 10, 1))#candidate|11266|(6, 10, 1)|var|float32
output = func_11265(var_11266)
func_11267 = relay.Function([var_11266], output)
mutated_mod['func_11267'] = func_11267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11321 = relay.var("var_11321", dtype = "int8", shape = (14, 10, 2))#candidate|11321|(14, 10, 2)|var|int8
var_11322 = relay.var("var_11322", dtype = "int8", shape = (14, 10, 2))#candidate|11322|(14, 10, 2)|var|int8
bop_11323 = relay.less_equal(var_11321.astype('bool'), relay.reshape(var_11322.astype('bool'), relay.shape_of(var_11321))) # shape=(14, 10, 2)
func_3993_call = mod.get_global_var('func_3993')
func_3996_call = mutated_mod.get_global_var('func_3996')
const_11327 = relay.const([[-2.323778,0.141035,9.430758,-7.736498,3.435462,-3.509183,5.289287,0.145370,4.076773,-4.362815,-6.610052,4.849583,-5.901587,-1.789113],[4.921466,-2.604684,8.748252,7.009828,-6.450476,1.385744,-5.193440,2.126609,-4.449537,-5.650349,7.638042,-7.500458,-5.566043,-5.281192],[-6.804178,1.608574,0.381870,7.046327,0.135967,3.471436,7.693382,-9.237111,-5.411547,9.190253,-8.829306,-5.670321,-1.495755,4.752237],[7.088555,8.319674,-9.440170,4.878755,-8.281145,8.467661,8.495022,-1.867439,6.686488,-6.533089,-0.457645,-3.620533,0.551557,-6.730814],[3.191573,7.389960,8.083477,-7.406057,5.427805,-9.712783,6.586043,-7.205210,-3.362964,3.350721,4.613554,-4.198394,1.102731,-3.299913],[7.381900,-2.355848,-2.468252,3.720059,4.895126,4.525460,4.279187,-2.681313,4.742986,3.787348,1.507945,9.450094,-0.515164,0.122947],[9.076479,9.737659,-8.124648,2.349256,4.715541,4.387385,7.869547,3.138152,-5.136905,5.446425,-6.416799,1.154384,8.440810,-3.657494],[-8.922468,5.290791,0.445686,3.173030,-8.832498,-2.243340,8.388272,-0.845243,5.204312,-0.412294,-1.559921,8.582335,-9.901296,-2.853705],[-2.247232,-5.023455,-8.599094,-8.935179,-8.641181,-3.472021,-8.756963,-7.599551,-9.777763,-2.559678,-9.094811,6.800080,-4.093432,-7.793252],[4.958919,-5.382961,7.541783,0.783346,-1.627516,-4.225537,0.350282,-0.542852,2.381207,5.343628,6.062631,9.409764,-6.636934,-4.990373],[-6.753258,-2.744014,-7.250185,3.087826,7.852301,0.139710,-7.335392,-7.738068,-4.715569,6.061104,6.956566,3.344923,0.818739,-4.093135],[3.559130,-6.340158,5.285230,-2.744621,-5.751556,-6.684101,-4.043222,6.533761,1.488596,-1.939106,-2.536812,4.062493,-3.434457,2.052697],[-1.107147,-3.329019,-4.088471,4.241250,9.464176,1.080271,3.519223,1.665383,-3.008735,-5.806117,-6.161070,4.119357,-7.293393,-3.406451],[-2.612260,-6.623211,8.045120,-4.192257,-2.661038,-0.632861,5.907905,8.592969,6.105460,-8.430883,0.446430,4.214779,1.327710,1.843293],[2.750949,2.099111,3.613939,-2.818931,-4.773143,-9.299746,-5.537941,-2.116838,4.525005,-0.245096,-5.125422,-0.774443,4.039961,8.942318],[-6.593134,6.250614,-7.857440,4.923289,-9.274114,-1.556764,5.135375,7.191665,4.694981,0.729399,3.266588,8.341419,3.074561,-6.542246],[7.073259,8.917144,-3.457918,-7.988830,8.906049,-9.882783,6.863583,-5.295897,6.897851,4.884574,7.185832,2.582146,-0.836325,-7.415556],[-0.518275,7.417582,-3.877422,-3.337000,2.825390,5.790365,-7.366101,-1.579087,1.634618,-0.932791,8.383498,0.727903,6.997570,3.268713],[-8.663645,1.434553,-0.225074,-8.122177,2.563861,2.178440,2.384110,-8.490351,-5.773842,-3.590427,1.836936,6.485298,-0.244637,-3.460018],[6.446113,8.732652,5.849887,6.744537,1.175895,5.478814,-1.150106,7.656845,2.754723,2.296838,0.251503,9.790888,4.994413,5.760930],[-1.841721,9.620410,9.539184,2.677784,3.748284,6.490025,-5.243501,7.122666,6.737234,4.971233,-8.522087,8.058253,-3.889370,5.450981],[2.401138,5.404452,-3.117029,7.826198,2.560813,-6.629903,9.249520,-3.065666,-1.401766,-0.444789,-0.372262,9.106970,0.359408,-7.681548],[5.215998,5.003208,-9.760991,-9.087475,8.072971,3.315552,-7.653754,5.482969,6.986873,-0.760188,0.945983,9.431693,-7.053041,6.770491],[2.698821,8.677000,1.166174,8.710806,7.185967,-9.590700,-0.812661,6.660450,5.129494,-2.771727,-5.709252,9.304034,-5.979438,-2.225520],[7.339605,-1.447375,4.831994,0.111326,-0.530511,8.929404,3.789826,-3.315776,9.528624,-6.326735,-4.128945,2.400222,3.611833,-5.917842],[2.770194,-9.241064,-8.778870,-6.444400,-4.563229,-7.465793,-2.117234,-7.114621,2.555844,8.410374,5.877575,-1.566851,9.185884,-6.782419],[-2.199318,-6.311404,3.659402,-7.837199,4.824479,-6.851819,-3.337055,-2.360401,-0.042384,-0.602504,5.173340,-7.558983,-5.322345,-3.534383],[-5.871599,-4.000594,5.263158,-9.134594,-8.636598,8.155427,0.255419,6.731939,-8.093833,7.212932,3.776523,4.159565,6.365575,3.662080],[-9.700192,8.262936,-0.617334,4.782965,-9.827275,0.313789,-3.859500,-1.201699,-1.775308,2.734071,6.437201,7.270944,5.183590,2.428280],[-5.474709,-4.342982,-6.110071,8.526363,1.239920,2.002452,-0.808071,-2.128294,9.634789,6.220218,1.519346,-3.160468,6.577963,2.104065],[-7.245253,7.137791,5.019492,6.386466,-5.072660,-3.760573,6.606039,7.745648,-2.372614,-4.984345,9.807411,6.002829,5.984594,7.276749],[9.508227,0.116929,-6.632238,-7.785075,-9.220552,0.835004,-0.209749,-6.953554,2.109305,-2.638830,-2.725341,4.000127,-5.127076,-7.949429],[0.568517,-6.642393,-9.938448,-5.115909,-0.495485,-3.367137,4.104399,9.945990,3.572434,1.024879,-3.977904,7.666984,8.087982,-7.681663],[7.860049,4.337617,-4.023614,-0.753010,5.613071,5.229182,0.170574,-0.067028,-8.393087,3.233697,4.547865,-1.087808,-6.904412,-0.036751],[8.650721,2.999457,6.401362,2.003643,-5.074054,-9.220606,-7.018810,4.711507,9.439721,-4.044543,-2.549331,-2.804537,6.151737,8.098097],[-3.680355,0.691203,-2.150271,-7.573906,0.398110,8.537580,1.770286,4.414178,-9.414011,-5.303083,-4.809550,4.536890,-2.896998,-3.782132],[-6.294783,5.691184,-6.235511,-5.828666,4.190476,-8.462896,-5.895808,-2.565559,-7.666833,-6.872154,-0.707848,-3.379236,5.160362,2.796556],[8.598848,2.970750,7.204297,-7.473553,2.046345,-5.670432,-1.366603,5.843484,1.623249,-4.650470,3.211869,-1.814919,9.300376,-3.148924],[-1.019874,-8.898670,-8.670303,0.306330,-3.636515,0.230604,6.246615,-8.546865,-9.004429,-2.723320,1.226129,3.826864,6.522485,4.125084],[0.402061,-7.607468,9.098041,8.184291,-2.104153,-0.235679,4.676452,5.179029,9.868573,-2.535515,7.887515,0.632517,3.078236,-5.684138],[-3.305451,-3.992105,7.205900,5.241648,2.847342,-6.856108,-0.651408,5.012332,-9.395070,-6.013760,-0.416988,-3.986784,6.925284,9.039332],[-4.733706,-6.945567,4.004362,-4.783406,4.056365,8.286976,3.304429,-7.797083,-3.728232,9.638291,-4.633034,7.116423,-8.169454,0.352066],[0.397962,-3.296364,-1.675181,5.984130,2.425372,-5.034328,3.407617,-3.058721,-9.026325,-5.101869,-5.489499,9.542539,8.607293,2.778845],[-9.163849,-2.689535,6.235008,-9.899952,0.610538,8.383650,7.996656,0.227876,-2.232777,3.742029,-3.832597,5.917296,6.061883,-1.663695],[8.534184,-9.654147,-5.684897,-5.871174,-1.398368,4.487929,-3.781433,-5.018051,-8.806725,-5.856947,6.761623,9.783775,-4.140100,-4.367721],[-0.330936,-6.392238,9.104098,6.898742,6.223570,8.041715,-0.821387,4.278849,-2.884069,5.738486,6.850152,1.566568,6.524104,6.471941],[1.121216,-5.262031,-1.461367,-0.476445,5.022752,1.493411,0.794927,-1.386885,4.070165,-3.119969,-2.282814,-0.829581,7.145813,-1.080757],[1.160552,-3.231214,-7.536137,-5.852234,-9.870462,-3.137027,-8.768390,-4.897555,-3.489003,-1.404493,4.711471,4.333733,-5.209471,9.979633],[9.240554,-4.069762,5.210795,-4.621435,8.987882,-9.205314,2.557241,-2.573138,-4.391084,8.933513,2.400795,-9.548286,-6.565859,-9.500345],[-9.549807,-9.629981,-5.267726,-4.469878,-6.416168,2.229131,5.554909,5.433577,-2.920597,-2.011633,-0.645467,9.924026,0.518904,-5.567364],[-1.943323,-9.795995,7.915395,-6.744828,-7.529121,0.418895,1.481432,-4.963514,7.744445,7.250737,0.308205,-8.006926,1.383187,-9.772972],[-6.447319,-0.275460,2.812606,8.335917,-5.107070,-6.381121,-2.401432,0.423378,-0.824008,-9.295977,1.261319,2.632798,7.798679,-8.167556],[-8.292874,-1.355765,-2.572899,8.173257,9.515360,-5.452688,-0.131840,-5.535266,-9.239114,6.700163,-1.198144,-5.320824,6.128735,-1.091812],[-5.411483,-2.315632,8.352529,1.898911,8.469330,-0.163886,8.704290,-5.698468,4.648384,-0.597336,-9.681208,1.078696,1.285918,-4.493948]], dtype = "float32")#candidate|11327|(54, 14)|const|float32
call_11326 = func_3993_call(relay.reshape(const_11327.astype('float32'), [14, 6, 9]))
call_11328 = func_3993_call(relay.reshape(const_11327.astype('float32'), [14, 6, 9]))
output = relay.Tuple([bop_11323,call_11326,const_11327,])
output2 = relay.Tuple([bop_11323,call_11328,const_11327,])
func_11341 = relay.Function([var_11321,var_11322,], output)
mod['func_11341'] = func_11341
mod = relay.transform.InferType()(mod)
mutated_mod['func_11341'] = func_11341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11341_call = mutated_mod.get_global_var('func_11341')
var_11343 = relay.var("var_11343", dtype = "int8", shape = (14, 10, 2))#candidate|11343|(14, 10, 2)|var|int8
var_11344 = relay.var("var_11344", dtype = "int8", shape = (14, 10, 2))#candidate|11344|(14, 10, 2)|var|int8
call_11342 = func_11341_call(var_11343,var_11344,)
output = call_11342
func_11345 = relay.Function([var_11343,var_11344,], output)
mutated_mod['func_11345'] = func_11345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7709_call = mod.get_global_var('func_7709')
func_7710_call = mutated_mod.get_global_var('func_7710')
call_11394 = relay.TupleGetItem(func_7709_call(), 0)
call_11395 = relay.TupleGetItem(func_7710_call(), 0)
func_585_call = mod.get_global_var('func_585')
func_588_call = mutated_mod.get_global_var('func_588')
const_11411 = relay.const([-1.759429,-7.460042,4.223685,5.434400,-7.908536,0.604680,-9.416952,-0.607648,-2.754389,-6.311525,3.017480,-7.040448,7.885742,6.280961,-8.839787,-3.141051,-6.121226,5.872505,7.949655,-7.723650,7.590936,-2.370174,7.514077,-9.774880,-6.720386,-4.465483,1.162964,6.260415,1.912328,-8.422375,-0.658246,-5.748760,3.254714,-7.853435,-8.070281,-2.678183,-1.443680,8.429951,2.891669,5.100805,-6.082631,-7.571728,2.366667,5.058765,-7.920434,-2.575997,-0.431032,9.924065,-2.486334,-8.098712,-8.392219,-4.900136,8.230915,-7.998408,-5.386966,5.734884,6.734994,-4.074046,7.148509,4.650599,5.510447,-8.260925,-4.461489,9.677578,3.973001,-1.403306,5.231201,5.406942,-3.672336,6.552136,6.000232,-9.605707,-3.070735,0.936531,-9.979874,0.474850,-5.326175,9.592576,8.608208,-8.071785,9.484944,5.270943,5.199127,4.267964,-7.547494,-9.948630,0.288621,6.505961,-1.120043,-8.018377,3.587132,-5.865269,4.294600,8.620472,8.935119,-0.228938,-3.250085,5.281981,-2.432207,0.007165,1.005523,-3.217650,-0.922133,4.109545,4.095971,3.350457,0.574644,-8.295049,-0.885426,-9.091762,6.988171,-9.579807,-3.384868,-1.721721,-6.744763,4.429887,5.557722,8.665024,1.316358,-1.233160,-0.567656,-5.485108,-0.876275,-4.308288,-3.870891,-7.746415,0.324578,3.148840,-2.807467,-3.722288,9.463546,-1.258403,-9.184371,3.926343,-1.460027,-6.406892,8.289872,8.207954,0.489303,-0.672471,-8.316668,-7.523548,4.856350,0.637535,0.884351,9.728353,5.567039,6.106931,6.480642,-5.564625,1.983903,-9.911075,8.888356,-1.474764,0.653628,-2.430545,4.172136,-0.689417,-0.277306,-0.647380,8.740965,-8.897733,5.819336,-6.013485,-9.160517,3.066070,2.036974,3.484502,4.797339,-6.464019,-3.949956,-7.622078,2.305782,4.516834,-0.211747,2.640676,8.013638,-4.298254,5.161242,9.789500,0.578608,7.977374,-4.917952,0.358365,-1.557553,-4.074049,-9.949450,-7.791582,0.079444,5.576913,2.752229,-4.945993,8.584905,-6.850320,6.720546,-3.076408,-2.990381,-9.679237,-9.830592,-0.018304,8.069622,-7.201280,4.604515,3.380492,-0.004491,-1.360131,1.213240,-0.296768,0.303267,5.977669,-2.136936,-4.922319,-1.418443,3.302306,-4.056667,3.434170,-8.136268,-7.265717,8.456875,7.586302,-3.081200,8.930311,-0.053104,-8.786148,-3.720185,-1.649428,-5.593472,3.159359,9.795359,9.390010,-8.121431,6.904185,-8.617459,-3.319679,2.124639,8.407917,1.625394,7.424359,-4.663924,-1.365212,-3.092711,8.849604,4.429073,7.987486,9.599866,-3.235413,4.734177,5.720149,4.018115,4.229242,4.137755,9.685887,-1.207969,-3.055045,-0.899712,1.849998,6.473824,8.759124,-4.597738,-0.515587,-1.000377,9.667315,-3.258322,0.264602,8.309343,8.338400,-7.219728,0.380021,9.404935,5.893687,-6.526210,-9.265411,-5.831006,-8.675553,-9.005637,-6.734913,-8.810650,6.135133,-2.411961,-2.541582,3.536745,-0.065502,-1.934518,-5.063562,0.926123,-8.118326,7.991558,-3.725390,-1.453339,-3.150713,4.779904,6.203870,-4.258577,-6.425451,-5.283040,-5.457963,-9.692291,7.129966,8.937036,8.177584,0.851393,-1.822956,-8.594535,-4.701174,-0.049417,-0.378047,-4.820244,9.492298,-8.687631,8.898770,-0.859070,-1.393114,2.559296,-0.679779,-1.330485,3.931862,8.353663,-0.724739,-1.800519,-6.220248,2.055129,-9.456216,7.716477,-0.586345,-0.826175,-2.724639,-5.676766,7.609343,-7.521734,-0.130515,9.853555,-2.068767,7.906993,8.864982,-2.890698,-0.521519,-5.203166,6.215044,-2.045433,3.071028,5.369947,-4.877510,-8.868432,3.251627,0.252250,5.426091,-1.896745,5.899761,-9.143498,5.801203,-5.786504,-0.523731,1.793689,-0.158003,-5.314777,-5.238097,9.186089,9.061745,-4.293440,-4.692210,-5.546028,0.386971,-0.366094,-7.328727,3.289005,7.595261,-4.851262,-5.462433,4.536293,3.610759,-8.942003,2.337012,-1.172567,0.943821,-8.765963,-8.867673,-9.793974,9.378978,-2.847606,7.184036,1.431876,-3.171008,8.476749,2.029632,9.873314,-4.706823,-6.597427,-0.174436,-3.063986,-7.536073,2.271737,2.670307,-3.752967,-6.967220,-6.016560,-5.738987], dtype = "float64")#candidate|11411|(396,)|const|float64
call_11410 = func_585_call(relay.reshape(const_11411.astype('float64'), [11, 9, 4]))
call_11412 = func_585_call(relay.reshape(const_11411.astype('float64'), [11, 9, 4]))
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_11417 = func_1850_call()
call_11418 = func_1850_call()
bop_11429 = relay.equal(const_11411.astype('bool'), relay.reshape(call_11410.astype('bool'), relay.shape_of(const_11411))) # shape=(396,)
bop_11432 = relay.equal(const_11411.astype('bool'), relay.reshape(call_11412.astype('bool'), relay.shape_of(const_11411))) # shape=(396,)
output = relay.Tuple([call_11394,call_11417,bop_11429,])
output2 = relay.Tuple([call_11395,call_11418,bop_11432,])
func_11433 = relay.Function([], output)
mod['func_11433'] = func_11433
mod = relay.transform.InferType()(mod)
output = func_11433()
func_11434 = relay.Function([], output)
mutated_mod['func_11434'] = func_11434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11433_call = mod.get_global_var('func_11433')
func_11434_call = mutated_mod.get_global_var('func_11434')
call_11493 = relay.TupleGetItem(func_11433_call(), 1)
call_11494 = relay.TupleGetItem(func_11434_call(), 1)
func_5248_call = mod.get_global_var('func_5248')
func_5251_call = mutated_mod.get_global_var('func_5251')
var_11513 = relay.var("var_11513", dtype = "uint64", shape = (150,))#candidate|11513|(150,)|var|uint64
call_11512 = func_5248_call(relay.reshape(var_11513.astype('uint64'), [10, 15, 1]), relay.reshape(var_11513.astype('uint64'), [10, 15, 1]), )
call_11514 = func_5248_call(relay.reshape(var_11513.astype('uint64'), [10, 15, 1]), relay.reshape(var_11513.astype('uint64'), [10, 15, 1]), )
uop_11550 = relay.cos(call_11512.astype('float32')) # shape=(10, 15, 1)
uop_11552 = relay.cos(call_11514.astype('float32')) # shape=(10, 15, 1)
output = relay.Tuple([call_11493,var_11513,uop_11550,])
output2 = relay.Tuple([call_11494,var_11513,uop_11552,])
func_11565 = relay.Function([var_11513,], output)
mod['func_11565'] = func_11565
mod = relay.transform.InferType()(mod)
mutated_mod['func_11565'] = func_11565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11566 = relay.var("var_11566", dtype = "uint64", shape = (150,))#candidate|11566|(150,)|var|uint64
func_11565_call = mutated_mod.get_global_var('func_11565')
call_11567 = func_11565_call(var_11566)
output = call_11567
func_11568 = relay.Function([var_11566], output)
mutated_mod['func_11568'] = func_11568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11097_call = mod.get_global_var('func_11097')
func_11099_call = mutated_mod.get_global_var('func_11099')
call_11615 = relay.TupleGetItem(func_11097_call(), 0)
call_11616 = relay.TupleGetItem(func_11099_call(), 0)
func_7344_call = mod.get_global_var('func_7344')
func_7345_call = mutated_mod.get_global_var('func_7345')
call_11641 = relay.TupleGetItem(func_7344_call(), 0)
call_11642 = relay.TupleGetItem(func_7345_call(), 0)
func_4939_call = mod.get_global_var('func_4939')
func_4943_call = mutated_mod.get_global_var('func_4943')
var_11649 = relay.var("var_11649", dtype = "uint64", shape = (945,))#candidate|11649|(945,)|var|uint64
var_11650 = relay.var("var_11650", dtype = "uint64", shape = (216,))#candidate|11650|(216,)|var|uint64
call_11648 = relay.TupleGetItem(func_4939_call(relay.reshape(var_11649.astype('uint64'), [945,]), relay.reshape(var_11650.astype('uint64'), [108, 2]), ), 2)
call_11651 = relay.TupleGetItem(func_4943_call(relay.reshape(var_11649.astype('uint64'), [945,]), relay.reshape(var_11650.astype('uint64'), [108, 2]), ), 2)
output = relay.Tuple([call_11615,call_11641,call_11648,var_11649,var_11650,])
output2 = relay.Tuple([call_11616,call_11642,call_11651,var_11649,var_11650,])
func_11677 = relay.Function([var_11649,var_11650,], output)
mod['func_11677'] = func_11677
mod = relay.transform.InferType()(mod)
var_11678 = relay.var("var_11678", dtype = "uint64", shape = (945,))#candidate|11678|(945,)|var|uint64
var_11679 = relay.var("var_11679", dtype = "uint64", shape = (216,))#candidate|11679|(216,)|var|uint64
output = func_11677(var_11678,var_11679,)
func_11680 = relay.Function([var_11678,var_11679,], output)
mutated_mod['func_11680'] = func_11680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9352_call = mod.get_global_var('func_9352')
func_9353_call = mutated_mod.get_global_var('func_9353')
call_11756 = func_9352_call()
call_11757 = func_9352_call()
func_4592_call = mod.get_global_var('func_4592')
func_4594_call = mutated_mod.get_global_var('func_4594')
const_11784 = relay.const([-5.577964,2.838178,-8.997954,-5.261624,8.682701,-8.509385,9.355364,-4.123002,4.437078,0.451702,-7.385932,5.293262,-1.859785,9.538219,5.574687,6.810935,9.670115,1.186510,-8.171892,4.831616,-8.238606,1.152267,5.250990,7.014740,9.639729,-0.898339,-2.803670,9.790271,1.680360,-2.113298,8.022527,-1.832499,-5.847322,1.281740,-6.626220,-4.624936,-1.508090,-7.873328,2.763147,-5.091930,-2.267927,-6.366409,-9.842316,-7.808361,0.020025,-6.364934,-2.403356,5.103348,7.464437,7.613944,9.822556,-7.260697,0.759427,-6.931752,-2.373089,9.143627,8.102104,-9.937041,1.622464,4.262439,4.139956,-7.956231,6.399993,5.129713,-6.536920,-2.802335,-3.789896,1.014293,9.469115,7.889967,-2.877133,-5.564582,-6.694464,-3.405864,2.124549,-5.313848,6.159942,-4.552089,-7.982000,4.590677,-6.391907,4.871001,7.540278,0.164963,-6.272866,-7.243501,8.578727,-2.545570,6.123973,-4.065898,0.474657,-3.450421,2.265833,5.169410,-5.318738,-1.753220,-7.217377,2.873347,-6.135641,-8.053551,7.215724,9.365083,8.384390,1.737310,-9.992719,-0.421283,-3.086574,0.534490,8.573354,-2.519242,9.060162,0.307726,-9.617031,8.818460,0.433963,3.929711,2.857059,8.593719,-5.769244,5.722864,-5.920469,-2.505692,-9.088363,-5.201801,-5.463374,1.038248,2.293246,9.009358,-4.417160,-8.481905,-9.275660,-5.390525,4.828803,2.433713,-7.159440,-5.927239,-2.832891,-1.323810,-2.771479,-2.543546,9.304621,6.618838,-9.116191,-6.263101,5.064168,-3.602880,-8.196104,1.454873,3.091569,6.039171,-3.284902,-4.449611,7.849935,1.333399,-7.170777,-1.176450,-1.279435,-8.805396,9.124834,2.598574,-9.658879,-6.496353,-5.752026,-5.824768,-5.276448,-3.472338,7.702258,0.661059,1.203591,8.263066,1.011586,7.347279,4.943335,-8.398642,-4.872827,1.257373,-4.555189,5.219992,-0.423332,-9.108102,4.036401,9.682366,3.867889,2.551128,1.885795,-6.521235,2.847438,-9.816200,-4.077587,9.063659,-9.494660,9.177138,-0.778281,-0.226886,-2.850748,-8.392793,2.705688,-0.685021,-3.106811,4.027757,-6.323202,-7.289678,0.442502,-7.626597,-5.278211,-5.463302,6.068834,9.214202,-1.813290,-5.118456,-7.456565,-7.978429,-9.721270,-9.442784,4.878676,-3.304755,-2.238428,1.880635,-7.474490,9.452609,1.181091,6.354877,4.560040,-4.156014,-5.403909,-3.364283,8.653984,-0.044196,4.689521,4.595508,-9.319503,4.109833,-0.941353,-2.149591,-8.879614,1.423178,8.606299,-7.078104,3.144203,-5.442660], dtype = "float64")#candidate|11784|(240,)|const|float64
call_11783 = relay.TupleGetItem(func_4592_call(relay.reshape(const_11784.astype('float64'), [4, 60])), 3)
call_11785 = relay.TupleGetItem(func_4594_call(relay.reshape(const_11784.astype('float64'), [4, 60])), 3)
bop_11788 = relay.divide(call_11783.astype('float64'), relay.reshape(const_11784.astype('float64'), relay.shape_of(call_11783))) # shape=(4, 6, 10)
bop_11791 = relay.divide(call_11785.astype('float64'), relay.reshape(const_11784.astype('float64'), relay.shape_of(call_11785))) # shape=(4, 6, 10)
output = relay.Tuple([call_11756,bop_11788,])
output2 = relay.Tuple([call_11757,bop_11791,])
func_11806 = relay.Function([], output)
mod['func_11806'] = func_11806
mod = relay.transform.InferType()(mod)
mutated_mod['func_11806'] = func_11806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11806_call = mutated_mod.get_global_var('func_11806')
call_11807 = func_11806_call()
output = call_11807
func_11808 = relay.Function([], output)
mutated_mod['func_11808'] = func_11808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2504_call = mod.get_global_var('func_2504')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_11820 = relay.TupleGetItem(func_2504_call(), 0)
call_11821 = relay.TupleGetItem(func_2506_call(), 0)
output = call_11820
output2 = call_11821
func_11827 = relay.Function([], output)
mod['func_11827'] = func_11827
mod = relay.transform.InferType()(mod)
mutated_mod['func_11827'] = func_11827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11827_call = mutated_mod.get_global_var('func_11827')
call_11828 = func_11827_call()
output = call_11828
func_11829 = relay.Function([], output)
mutated_mod['func_11829'] = func_11829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mod.get_global_var('func_7399')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_11950 = relay.TupleGetItem(func_7399_call(), 0)
call_11951 = relay.TupleGetItem(func_7400_call(), 0)
output = relay.Tuple([call_11950,])
output2 = relay.Tuple([call_11951,])
func_11952 = relay.Function([], output)
mod['func_11952'] = func_11952
mod = relay.transform.InferType()(mod)
output = func_11952()
func_11953 = relay.Function([], output)
mutated_mod['func_11953'] = func_11953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mod.get_global_var('func_7399')
func_7400_call = mutated_mod.get_global_var('func_7400')
call_11982 = relay.TupleGetItem(func_7399_call(), 0)
call_11983 = relay.TupleGetItem(func_7400_call(), 0)
output = relay.Tuple([call_11982,])
output2 = relay.Tuple([call_11983,])
func_11988 = relay.Function([], output)
mod['func_11988'] = func_11988
mod = relay.transform.InferType()(mod)
output = func_11988()
func_11989 = relay.Function([], output)
mutated_mod['func_11989'] = func_11989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2504_call = mod.get_global_var('func_2504')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_11990 = relay.TupleGetItem(func_2504_call(), 0)
call_11991 = relay.TupleGetItem(func_2506_call(), 0)
output = relay.Tuple([call_11990,])
output2 = relay.Tuple([call_11991,])
func_11997 = relay.Function([], output)
mod['func_11997'] = func_11997
mod = relay.transform.InferType()(mod)
mutated_mod['func_11997'] = func_11997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11997_call = mutated_mod.get_global_var('func_11997')
call_11998 = func_11997_call()
output = call_11998
func_11999 = relay.Function([], output)
mutated_mod['func_11999'] = func_11999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10714_call = mod.get_global_var('func_10714')
func_10715_call = mutated_mod.get_global_var('func_10715')
call_12008 = relay.TupleGetItem(func_10714_call(), 0)
call_12009 = relay.TupleGetItem(func_10715_call(), 0)
func_11433_call = mod.get_global_var('func_11433')
func_11434_call = mutated_mod.get_global_var('func_11434')
call_12015 = relay.TupleGetItem(func_11433_call(), 0)
call_12016 = relay.TupleGetItem(func_11434_call(), 0)
output = relay.Tuple([call_12008,call_12015,])
output2 = relay.Tuple([call_12009,call_12016,])
func_12044 = relay.Function([], output)
mod['func_12044'] = func_12044
mod = relay.transform.InferType()(mod)
mutated_mod['func_12044'] = func_12044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12044_call = mutated_mod.get_global_var('func_12044')
call_12045 = func_12044_call()
output = call_12045
func_12046 = relay.Function([], output)
mutated_mod['func_12046'] = func_12046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_12093 = relay.TupleGetItem(func_5142_call(), 0)
call_12094 = relay.TupleGetItem(func_5144_call(), 0)
func_10987_call = mod.get_global_var('func_10987')
func_10989_call = mutated_mod.get_global_var('func_10989')
call_12102 = func_10987_call()
call_12103 = func_10987_call()
func_10714_call = mod.get_global_var('func_10714')
func_10715_call = mutated_mod.get_global_var('func_10715')
call_12110 = relay.TupleGetItem(func_10714_call(), 0)
call_12111 = relay.TupleGetItem(func_10715_call(), 0)
output = relay.Tuple([call_12093,call_12102,call_12110,])
output2 = relay.Tuple([call_12094,call_12103,call_12111,])
func_12122 = relay.Function([], output)
mod['func_12122'] = func_12122
mod = relay.transform.InferType()(mod)
mutated_mod['func_12122'] = func_12122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12122_call = mutated_mod.get_global_var('func_12122')
call_12123 = func_12122_call()
output = call_12123
func_12124 = relay.Function([], output)
mutated_mod['func_12124'] = func_12124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_12167 = relay.TupleGetItem(func_2373_call(), 0)
call_12168 = relay.TupleGetItem(func_2375_call(), 0)
func_10238_call = mod.get_global_var('func_10238')
func_10239_call = mutated_mod.get_global_var('func_10239')
call_12174 = func_10238_call()
call_12175 = func_10238_call()
func_5092_call = mod.get_global_var('func_5092')
func_5095_call = mutated_mod.get_global_var('func_5095')
var_12182 = relay.var("var_12182", dtype = "uint8", shape = (390,))#candidate|12182|(390,)|var|uint8
call_12181 = relay.TupleGetItem(func_5092_call(relay.reshape(var_12182.astype('uint8'), [390,])), 2)
call_12183 = relay.TupleGetItem(func_5095_call(relay.reshape(var_12182.astype('uint8'), [390,])), 2)
output = relay.Tuple([call_12167,call_12174,call_12181,var_12182,])
output2 = relay.Tuple([call_12168,call_12175,call_12183,var_12182,])
func_12192 = relay.Function([var_12182,], output)
mod['func_12192'] = func_12192
mod = relay.transform.InferType()(mod)
mutated_mod['func_12192'] = func_12192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12193 = relay.var("var_12193", dtype = "uint8", shape = (390,))#candidate|12193|(390,)|var|uint8
func_12192_call = mutated_mod.get_global_var('func_12192')
call_12194 = func_12192_call(var_12193)
output = call_12194
func_12195 = relay.Function([var_12193], output)
mutated_mod['func_12195'] = func_12195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11433_call = mod.get_global_var('func_11433')
func_11434_call = mutated_mod.get_global_var('func_11434')
call_12225 = relay.TupleGetItem(func_11433_call(), 1)
call_12226 = relay.TupleGetItem(func_11434_call(), 1)
output = relay.Tuple([call_12225,])
output2 = relay.Tuple([call_12226,])
func_12239 = relay.Function([], output)
mod['func_12239'] = func_12239
mod = relay.transform.InferType()(mod)
output = func_12239()
func_12240 = relay.Function([], output)
mutated_mod['func_12240'] = func_12240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10169_call = mod.get_global_var('func_10169')
func_10170_call = mutated_mod.get_global_var('func_10170')
call_12241 = relay.TupleGetItem(func_10169_call(), 0)
call_12242 = relay.TupleGetItem(func_10170_call(), 0)
func_8731_call = mod.get_global_var('func_8731')
func_8733_call = mutated_mod.get_global_var('func_8733')
call_12243 = func_8731_call()
call_12244 = func_8731_call()
func_5248_call = mod.get_global_var('func_5248')
func_5251_call = mutated_mod.get_global_var('func_5251')
const_12255 = relay.const([-7,8,7,-6,-3,4,-3,-9,1,6,7,10,1,-5,10,-10,7,4,9,-5,-6,-10,-3,-4,2,-10,9,5,5,-2,7,3,-1,-10,-9,-5,-3,6,3,-10,1,-4,-2,-2,-10,-2,-6,3,-6,-10,-7,9,-9,3,6,8,5,-10,10,4,6,-7,2,2,4,-4,6,-2,-10,-8,10,6,6,2,5,6,-3,4,4,5,7,-2,3,-9,-10,-9,-10,6,10,4,4,-9,-2,4,10,-7,-7,1,2,2,6,2,8,-4,8,4,-5,-10,-5,-6,-4,-1,3,-10,1,-8,-5,2,10,2,1,3,8,-6,10,9,8,-2,1,7,5,-6,8,4,4,-8,-3,-3,-6,5,3,-7,-3,2,-2,5,-2,8,10,8], dtype = "uint64")#candidate|12255|(150,)|const|uint64
call_12254 = func_5248_call(relay.reshape(const_12255.astype('uint64'), [10, 15, 1]), relay.reshape(const_12255.astype('uint64'), [10, 15, 1]), )
call_12256 = func_5248_call(relay.reshape(const_12255.astype('uint64'), [10, 15, 1]), relay.reshape(const_12255.astype('uint64'), [10, 15, 1]), )
output = relay.Tuple([call_12241,call_12243,call_12254,const_12255,])
output2 = relay.Tuple([call_12242,call_12244,call_12256,const_12255,])
func_12264 = relay.Function([], output)
mod['func_12264'] = func_12264
mod = relay.transform.InferType()(mod)
mutated_mod['func_12264'] = func_12264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12264_call = mutated_mod.get_global_var('func_12264')
call_12265 = func_12264_call()
output = call_12265
func_12266 = relay.Function([], output)
mutated_mod['func_12266'] = func_12266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9716_call = mod.get_global_var('func_9716')
func_9717_call = mutated_mod.get_global_var('func_9717')
call_12277 = relay.TupleGetItem(func_9716_call(), 0)
call_12278 = relay.TupleGetItem(func_9717_call(), 0)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_12283 = func_4459_call()
call_12284 = func_4459_call()
output = relay.Tuple([call_12277,call_12283,])
output2 = relay.Tuple([call_12278,call_12284,])
func_12295 = relay.Function([], output)
mod['func_12295'] = func_12295
mod = relay.transform.InferType()(mod)
mutated_mod['func_12295'] = func_12295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12295_call = mutated_mod.get_global_var('func_12295')
call_12296 = func_12295_call()
output = call_12296
func_12297 = relay.Function([], output)
mutated_mod['func_12297'] = func_12297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11097_call = mod.get_global_var('func_11097')
func_11099_call = mutated_mod.get_global_var('func_11099')
call_12349 = relay.TupleGetItem(func_11097_call(), 0)
call_12350 = relay.TupleGetItem(func_11099_call(), 0)
func_11827_call = mod.get_global_var('func_11827')
func_11829_call = mutated_mod.get_global_var('func_11829')
call_12356 = func_11827_call()
call_12357 = func_11827_call()
output = relay.Tuple([call_12349,call_12356,])
output2 = relay.Tuple([call_12350,call_12357,])
func_12358 = relay.Function([], output)
mod['func_12358'] = func_12358
mod = relay.transform.InferType()(mod)
output = func_12358()
func_12359 = relay.Function([], output)
mutated_mod['func_12359'] = func_12359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11433_call = mod.get_global_var('func_11433')
func_11434_call = mutated_mod.get_global_var('func_11434')
call_12412 = relay.TupleGetItem(func_11433_call(), 1)
call_12413 = relay.TupleGetItem(func_11434_call(), 1)
output = call_12412
output2 = call_12413
func_12436 = relay.Function([], output)
mod['func_12436'] = func_12436
mod = relay.transform.InferType()(mod)
output = func_12436()
func_12437 = relay.Function([], output)
mutated_mod['func_12437'] = func_12437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10596_call = mod.get_global_var('func_10596')
func_10598_call = mutated_mod.get_global_var('func_10598')
call_12451 = func_10596_call()
call_12452 = func_10596_call()
func_11097_call = mod.get_global_var('func_11097')
func_11099_call = mutated_mod.get_global_var('func_11099')
call_12458 = relay.TupleGetItem(func_11097_call(), 0)
call_12459 = relay.TupleGetItem(func_11099_call(), 0)
func_7478_call = mod.get_global_var('func_7478')
func_7481_call = mutated_mod.get_global_var('func_7481')
var_12464 = relay.var("var_12464", dtype = "uint64", shape = (156,))#candidate|12464|(156,)|var|uint64
call_12463 = func_7478_call(relay.reshape(var_12464.astype('uint64'), [13, 3, 4]))
call_12465 = func_7478_call(relay.reshape(var_12464.astype('uint64'), [13, 3, 4]))
func_5983_call = mod.get_global_var('func_5983')
func_5984_call = mutated_mod.get_global_var('func_5984')
call_12483 = func_5983_call()
call_12484 = func_5983_call()
output = relay.Tuple([call_12451,call_12458,call_12463,var_12464,call_12483,])
output2 = relay.Tuple([call_12452,call_12459,call_12465,var_12464,call_12484,])
func_12492 = relay.Function([var_12464,], output)
mod['func_12492'] = func_12492
mod = relay.transform.InferType()(mod)
var_12493 = relay.var("var_12493", dtype = "uint64", shape = (156,))#candidate|12493|(156,)|var|uint64
output = func_12492(var_12493)
func_12494 = relay.Function([var_12493], output)
mutated_mod['func_12494'] = func_12494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8892_call = mod.get_global_var('func_8892')
func_8894_call = mutated_mod.get_global_var('func_8894')
call_12507 = func_8892_call()
call_12508 = func_8892_call()
output = call_12507
output2 = call_12508
func_12514 = relay.Function([], output)
mod['func_12514'] = func_12514
mod = relay.transform.InferType()(mod)
output = func_12514()
func_12515 = relay.Function([], output)
mutated_mod['func_12515'] = func_12515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5212_call = mod.get_global_var('func_5212')
func_5214_call = mutated_mod.get_global_var('func_5214')
call_12516 = relay.TupleGetItem(func_5212_call(), 0)
call_12517 = relay.TupleGetItem(func_5214_call(), 0)
func_11565_call = mod.get_global_var('func_11565')
func_11568_call = mutated_mod.get_global_var('func_11568')
const_12529 = relay.const([2,7,-10,-3,-4,10,-6,-7,5,-9,-10,5,-6,-10,-9,-1,-9,-6,1,-8,2,5,4,-10,3,-4,-10,4,8,-2,4,-9,-2,-2,6,8,-1,-8,6,-6,1,-3,-10,7,-8,6,-4,5,-2,9,-8,-6,1,-5,-5,-7,10,-7,6,2,-5,-7,3,-5,8,3,-2,-4,6,-1,10,-7,-7,-5,-8,-8,-3,-2,-5,-3,8,1,-8,2,-6,-5,2,-9,8,-1,-10,9,-3,4,-5,-3,5,-4,10,-7,10,3,7,10,-7,-10,-1,-2,8,-2,-3,8,8,-2,-8,7,2,10,3,3,-1,8,-3,-4,-8,-4,3,8,-3,-2,-9,9,-8,-1,8,-2,10,-1,-4,-4,3,-3,9,10,4,-3,10,6,-10,8], dtype = "uint64")#candidate|12529|(150,)|const|uint64
call_12528 = relay.TupleGetItem(func_11565_call(relay.reshape(const_12529.astype('uint64'), [150,])), 2)
call_12530 = relay.TupleGetItem(func_11568_call(relay.reshape(const_12529.astype('uint64'), [150,])), 2)
output = relay.Tuple([call_12516,call_12528,const_12529,])
output2 = relay.Tuple([call_12517,call_12530,const_12529,])
func_12531 = relay.Function([], output)
mod['func_12531'] = func_12531
mod = relay.transform.InferType()(mod)
mutated_mod['func_12531'] = func_12531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12531_call = mutated_mod.get_global_var('func_12531')
call_12532 = func_12531_call()
output = call_12532
func_12533 = relay.Function([], output)
mutated_mod['func_12533'] = func_12533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mod.get_global_var('func_4992')
func_4993_call = mutated_mod.get_global_var('func_4993')
call_12539 = relay.TupleGetItem(func_4992_call(), 0)
call_12540 = relay.TupleGetItem(func_4993_call(), 0)
func_8201_call = mod.get_global_var('func_8201')
func_8202_call = mutated_mod.get_global_var('func_8202')
call_12584 = func_8201_call()
call_12585 = func_8201_call()
func_2104_call = mod.get_global_var('func_2104')
func_2106_call = mutated_mod.get_global_var('func_2106')
call_12597 = func_2104_call(relay.reshape(call_12584.astype('float64'), [8, 12, 3]))
call_12598 = func_2104_call(relay.reshape(call_12584.astype('float64'), [8, 12, 3]))
func_5092_call = mod.get_global_var('func_5092')
func_5095_call = mutated_mod.get_global_var('func_5095')
const_12611 = relay.const([-8,-3,3,8,-7,-6,1,-5,-6,-7,-6,-7,-2,-6,-4,6,3,9,-1,3,-3,6,2,6,-4,-9,7,7,-2,4,-9,-8,-4,-8,5,3,-4,-3,-10,-4,-1,5,8,9,7,6,6,10,-4,-4,-2,6,-6,2,-7,10,-7,5,-9,5,-8,5,8,5,-4,10,6,3,2,-7,10,-8,4,-4,10,2,4,-3,3,-4,-6,4,-8,-1,-2,1,8,3,-5,-7,-8,-2,-6,-5,-2,7,-3,10,-10,6,-9,-6,-8,-9,5,5,-4,-6,-1,-1,-1,-9,-1,-8,9,-5,-2,-7,9,3,-1,7,-7,-10,-5,-9,1,-3,-8,5,4,10,-10,-8,3,3,10,-3,-5,5,-6,-6,-4,-1,-9,-4,8,-1,-10,-9,10,9,4,-9,7,-8,-8,-9,-5,-7,-9,-7,4,7,-7,-7,10,7,9,4,-7,8,9,10,-8,-8,7,-3,-3,2,-9,-5,6,3,-7,9,9,1,-5,-2,7,1,5,-6,-6,-8,-9,2,-6,-9,1,-7,7,10,1,4,-2,-4,1,-5,10,2,6,-5,10,-5,3,-3,10,-10,-5,-8,3,4,-4,1,-2,-1,6,1,9,-6,6,1,-3,8,9,-7,-10,4,-9,5,-7,-8,-2,8,-4,6,-4,-7,-9,-6,-1,-1,-3,-4,-2,-4,7,2,10,3,-4,4,-5,6,-6,-2,-5,-1,-10,1,-5,-10,6,4,-4,1,-7,10,8,7,8,4,-4,2,-9,5,7,-8,9,-10,-2,-3,-6,2,8,-9,-1,-10,7,9,6,-1,9,-5,-3,1,3,-4,-6,-4,-6,-3,-5,3,6,7,-8,-4,-8,-7,-1,6,-4,-3,-7,-7,10,-1,4,5,6,1,-10,2,1,3,-8,7,1,2,-7,-2,-10,1,5,-3,10,6,8,-2,-7,-2,3,-7,-9,2,-10,4,7,4,-3,-2,1,-5,-6,-8,9,8,-7,-8,-5,-2,-7,7,-4,-4,7,2,-8,7,-1,8,2,5,2,8,6,-2], dtype = "uint8")#candidate|12611|(390,)|const|uint8
call_12610 = relay.TupleGetItem(func_5092_call(relay.reshape(const_12611.astype('uint8'), [390,])), 1)
call_12612 = relay.TupleGetItem(func_5095_call(relay.reshape(const_12611.astype('uint8'), [390,])), 1)
func_9791_call = mod.get_global_var('func_9791')
func_9792_call = mutated_mod.get_global_var('func_9792')
call_12618 = func_9791_call()
call_12619 = func_9791_call()
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_12621 = relay.TupleGetItem(func_2518_call(), 2)
call_12622 = relay.TupleGetItem(func_2520_call(), 2)
func_2518_call = mod.get_global_var('func_2518')
func_2520_call = mutated_mod.get_global_var('func_2520')
call_12627 = relay.TupleGetItem(func_2518_call(), 0)
call_12628 = relay.TupleGetItem(func_2520_call(), 0)
output = relay.Tuple([call_12539,call_12584,call_12597,call_12610,const_12611,call_12618,call_12621,call_12627,])
output2 = relay.Tuple([call_12540,call_12585,call_12598,call_12612,const_12611,call_12619,call_12622,call_12628,])
func_12645 = relay.Function([], output)
mod['func_12645'] = func_12645
mod = relay.transform.InferType()(mod)
mutated_mod['func_12645'] = func_12645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12645_call = mutated_mod.get_global_var('func_12645')
call_12646 = func_12645_call()
output = call_12646
func_12647 = relay.Function([], output)
mutated_mod['func_12647'] = func_12647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8941_call = mod.get_global_var('func_8941')
func_8942_call = mutated_mod.get_global_var('func_8942')
call_12720 = relay.TupleGetItem(func_8941_call(), 0)
call_12721 = relay.TupleGetItem(func_8942_call(), 0)
output = relay.Tuple([call_12720,])
output2 = relay.Tuple([call_12721,])
func_12759 = relay.Function([], output)
mod['func_12759'] = func_12759
mod = relay.transform.InferType()(mod)
output = func_12759()
func_12760 = relay.Function([], output)
mutated_mod['func_12760'] = func_12760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_12822 = relay.TupleGetItem(func_6502_call(), 1)
call_12823 = relay.TupleGetItem(func_6504_call(), 1)
func_9315_call = mod.get_global_var('func_9315')
func_9317_call = mutated_mod.get_global_var('func_9317')
call_12824 = relay.TupleGetItem(func_9315_call(), 0)
call_12825 = relay.TupleGetItem(func_9317_call(), 0)
func_3993_call = mod.get_global_var('func_3993')
func_3996_call = mutated_mod.get_global_var('func_3996')
const_12834 = relay.const([-2.822044,7.681029,-2.607053,9.596124,7.691854,5.538447,-7.500357,-4.890990,6.095022,3.531622,-4.281477,-4.149683,-0.723600,2.769850,-4.042547,5.059226,-3.749045,-6.085784,4.012299,6.721272,0.451408,0.647062,6.574938,-3.575620,-8.588082,-0.726617,-6.448550,6.608921,7.179970,-6.796202,2.338993,-5.819486,4.876394,8.309550,-4.305028,5.144990,2.879024,5.085278,-7.382554,1.421623,2.011343,-9.889811,9.195105,-4.671289,-0.337554,-6.629546,-6.844131,6.494919,-2.543242,5.734217,1.573750,-6.163198,1.273130,-1.768465,8.191479,9.451987,9.143442,-8.918917,0.867804,5.178362,-8.858626,8.664656,-7.982562,-3.378979,0.313753,8.243836,-7.730735,-7.024932,5.630768,2.664983,-9.247179,7.963336,-9.778665,-4.546681,1.506613,-3.109328,-5.932725,-1.029886,-9.978636,1.469688,-5.015179,1.695921,-0.073126,0.140775,-0.619947,5.802851,0.038305,-7.528882,-4.767435,7.744489,8.357531,5.072358,7.989570,-7.116767,-9.189121,-7.798949,5.502724,8.178194,0.272516,5.556451,-1.746647,-8.422437,-0.999920,5.388781,-4.071201,-6.551028,-4.435632,4.435213,7.725126,-9.696967,1.843399,6.061765,-8.393956,-9.392937,5.065518,9.300912,-8.126287,3.379551,-4.307429,-3.908029,2.822005,-9.838420,-3.492080,6.748999,-9.478259,-2.302941,-4.289856,-0.666345,-5.315672,-6.032648,-1.833199,9.907873,-9.242380,9.347894,-6.351010,1.861348,-4.558952,3.365359,5.485195,6.069734,-6.747850,7.056483,5.581493,6.440216,-6.179197,6.353551,1.763973,-9.096159,3.888696,8.101420,2.028176,0.978826,-6.960831,-8.089103,7.189491,4.044054,2.670234,4.468588,-7.042069,8.478337,-5.405964,-9.617922,9.000231,3.300026,-4.920008,-2.432781,1.557990,-0.961530,8.327712,7.833042,-8.443889,-9.595544,4.711163,-1.140493,5.027325,5.372217,-0.617554,3.152026,-4.913019,-2.841649,7.149200,-3.742810,-1.155451,3.202824,9.289264,-8.062507,1.466035,-4.516419,-6.611126,2.818465,-7.052072,-5.976063,-1.946379,-4.080033,-3.647553,1.637506,-2.171337,2.357375,-3.441361,-5.552379,4.160503,7.905184,1.231212,-1.104361,-1.802306,5.677257,-3.763338,8.342803,-8.912559,0.431157,-0.897143,-1.887182,-8.766409,7.489797,-4.718151,-7.010758,2.270782,4.092250,8.947965,-3.217375,8.338703,-1.307909,1.143243,-7.467912,-2.492066,7.642845,-7.630398,6.705826,5.939897,-4.640838,-6.175346,8.960098,-6.051512,-0.594297,-3.907300,-1.144233,0.720133,6.550690,-0.563945,-8.820842,2.971789,-7.573100,3.432255,-4.198249,-3.073796,6.727078,-8.242611,-3.270145,7.631427,-4.050492,-1.475119,5.000031,-5.958914,-8.587270,-1.833805,5.856090,-0.369493,8.089225,7.165105,-9.883288,-8.136669,-5.978046,7.780736,-2.118330,1.029794,-4.837383,5.696877,1.343479,0.891790,-8.840576,-7.167031,5.539587,2.545979,0.519024,8.897832,0.952141,4.150814,-6.939764,-9.272308,6.334632,8.344910,7.421548,8.403863,-2.211607,4.971888,-3.953470,-8.974605,-1.525586,-2.283437,-4.527192,-1.023903,-8.391881,9.155536,-7.828211,1.910271,-4.196202,2.311410,7.027129,-8.943185,1.214734,-1.408196,-4.599591,-3.333275,7.053312,-7.282137,-7.639310,5.760150,-7.476134,0.091498,-2.829071,-0.354634,2.547454,7.192277,-5.619169,0.697414,2.748973,7.305425,-6.252952,-4.045544,-3.721574,-0.530927,3.260479,8.925347,-3.980122,-0.631770,8.017945,5.104594,2.858095,8.733429,4.692177,6.613189,4.328278,-5.657425,-2.694062,5.146862,1.437426,8.433365,4.289021,-7.368727,9.907355,-6.891007,0.713602,-8.591892,-5.922690,-6.580786,-3.045132,-9.339802,-7.950235,0.243932,-1.079986,7.442383,-9.754921,-3.334879,-8.200054,-6.974618,-5.423937,-0.313045,-3.404924,-6.324648,7.354541,-3.528413,-1.459518,8.218867,6.581788,-6.966939,4.375522,0.604388,-1.753068,2.261758,-2.840958,7.456462,-1.164886,-1.031155,-3.216082,-5.228478,3.831733,3.902434,3.944285,-3.082286,8.888569,-1.263303,2.238046,0.288854,-3.273461,-8.623276,-0.693516,1.472015,8.606767,9.259964,-7.357832,8.796422,0.022386,9.443452,8.919309,9.656231,-5.647452,9.798178,-6.164732,-2.500628,3.625440,2.200145,-6.132771,2.869372,0.643809,5.155319,-3.050278,2.837275,2.942642,-2.201207,7.858942,7.469311,-9.933981,4.165977,7.215034,5.423129,-5.399850,-7.109230,7.293717,-2.957547,7.416989,-2.185970,0.097811,0.425729,-1.410084,9.002491,8.058828,-4.282391,-2.017155,-7.465772,4.167926,-1.127691,3.495676,-5.878319,-4.387307,6.458271,-5.738745,5.749878,7.036480,-9.401781,9.945107,3.989444,-7.436050,-0.261930,8.747724,1.828818,-5.432368,-3.776132,-3.784955,-3.717321,-3.732290,-0.641695,8.204913,-5.499901,-2.474545,-7.959415,-2.589785,4.204936,7.954562,0.257470,-2.155234,3.300748,3.754769,-8.221414,-4.695698,-7.950597,-6.487080,0.339451,5.125172,7.043306,-2.921848,0.630054,6.035965,-3.952693,-4.836656,-0.273609,-9.004722,2.587315,6.472865,0.008319,-7.861910,-1.848111,1.899207,-5.011992,6.631278,-3.519146,3.349766,8.856424,-7.683538,-9.021054,3.270372,-4.309511,-4.768005,1.686476,4.360937,-2.324252,9.934454,7.033083,-6.869645,5.746475,8.093125,-5.719756,6.688561,0.618157,1.577059,-2.102401,-8.408259,-8.264552,-8.045153,1.840364,-0.124576,2.193140,-8.716365,-0.504645,-2.674943,7.359501,-7.432390,-8.697073,8.528788,4.089814,4.350332,0.892062,-6.050256,8.048107,-3.080493,6.099727,-9.677151,-7.975152,1.417368,3.886226,-6.906903,6.338831,-9.998696,-8.906986,4.379566,-5.320728,9.476713,2.019554,7.661459,-5.579640,3.086442,5.573925,-8.111112,-0.259835,-1.067223,3.961119,-0.950022,0.388700,-9.000440,-2.188703,-4.662208,8.190931,1.789252,5.270281,5.192999,-6.711252,1.397808,-3.548461,9.450916,9.724056,-9.905302,-9.034020,3.144282,-2.466356,0.240517,-7.266303,5.543011,3.875101,-1.821086,-3.477955,-8.273156,-0.754820,-4.788403,6.185034,4.962343,8.153973,8.564956,1.108005,-6.460799,-6.312075,-2.218810,9.029526,-5.053271,-2.016745,5.659578,-3.552104,4.593867,-9.856543,1.095830,5.069063,-5.153861,5.120610,-9.155686,1.695709,-2.688285,-4.671721,-0.207172,-8.702990,-8.226203,4.935908,5.853096,2.223940,-2.864860,-4.949051,2.324525,-2.653548,0.259885,8.419250,-8.996152,-2.786181,7.394600,-1.019071,-2.900246,-8.719278,3.784570,-9.052191,-9.744285,-5.909498,9.730634,-6.173010,-6.386278,9.140277,-1.524232,-4.409674,9.844018,5.128493,3.933345,-9.976216,9.329118,0.957144,-4.654822,6.995749,9.794652,6.020355,5.450537,-5.424289,-2.514561,3.998241,-8.490486,-7.692858,-7.285933,-4.372590,2.002894,0.013007,-1.306080,0.072568,-5.225801,0.309595,-4.029708,7.208113,-9.313665,-2.948636,5.757359,-9.496074,3.863523,1.960022,-8.574039,4.136672,-4.284197,-5.113138,5.442791,3.301483,8.100336,-7.813753,6.521679,4.193792,2.868321,-3.467794,7.416591,-0.557068,3.464755,-2.537598,-0.771994,7.056013,-9.637990,2.256091,-4.575032,5.248066,8.833404,5.986888,9.109992,-1.209971,-0.991079,1.804819,8.049220,-1.963923,6.759422,3.978519,8.437732,-1.020631,-1.738521,8.115890,-2.053149,-5.176732,-9.687407,-6.009567,-0.293061,-9.027658,-7.835510,-8.975080,-4.335719,-3.639627,6.823065,5.600294,7.497418,-9.703536,5.072237,-2.761925,0.834272,1.509147,-2.541984,9.575466,-5.617545,-3.883040,-1.860461,1.080149,3.335602,-0.273244,4.251860,6.962378,-2.462563,-1.896414,-2.073640,5.206538,-7.625334,9.619751,5.175820,3.189784,0.043612,-9.158088,7.058997,-6.610561,9.310546,1.734734,-1.420946,8.452175,9.580808,-1.370783,-4.375270,1.499505,-3.456942,-0.821832,7.945807,0.956819,7.860049,-9.128018,6.501574,4.949927,-2.256503,6.076811,-2.512652,8.037737,0.596336,3.201571,4.205515,-0.076501,0.925438], dtype = "float32")#candidate|12834|(756,)|const|float32
call_12833 = func_3993_call(relay.reshape(const_12834.astype('float32'), [14, 6, 9]))
call_12835 = func_3993_call(relay.reshape(const_12834.astype('float32'), [14, 6, 9]))
var_12844 = relay.var("var_12844", dtype = "float32", shape = (756,))#candidate|12844|(756,)|var|float32
bop_12845 = relay.not_equal(const_12834.astype('bool'), relay.reshape(var_12844.astype('bool'), relay.shape_of(const_12834))) # shape=(756,)
output = relay.Tuple([call_12822,call_12824,call_12833,bop_12845,])
output2 = relay.Tuple([call_12823,call_12825,call_12835,bop_12845,])
func_12867 = relay.Function([var_12844,], output)
mod['func_12867'] = func_12867
mod = relay.transform.InferType()(mod)
mutated_mod['func_12867'] = func_12867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12868 = relay.var("var_12868", dtype = "float32", shape = (756,))#candidate|12868|(756,)|var|float32
func_12867_call = mutated_mod.get_global_var('func_12867')
call_12869 = func_12867_call(var_12868)
output = call_12869
func_12870 = relay.Function([var_12868], output)
mutated_mod['func_12870'] = func_12870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12358_call = mod.get_global_var('func_12358')
func_12359_call = mutated_mod.get_global_var('func_12359')
call_13022 = relay.TupleGetItem(func_12358_call(), 0)
call_13023 = relay.TupleGetItem(func_12359_call(), 0)
output = relay.Tuple([call_13022,])
output2 = relay.Tuple([call_13023,])
func_13025 = relay.Function([], output)
mod['func_13025'] = func_13025
mod = relay.transform.InferType()(mod)
output = func_13025()
func_13026 = relay.Function([], output)
mutated_mod['func_13026'] = func_13026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3253_call = mod.get_global_var('func_3253')
func_3254_call = mutated_mod.get_global_var('func_3254')
call_13086 = func_3253_call()
call_13087 = func_3253_call()
output = relay.Tuple([call_13086,])
output2 = relay.Tuple([call_13087,])
func_13090 = relay.Function([], output)
mod['func_13090'] = func_13090
mod = relay.transform.InferType()(mod)
output = func_13090()
func_13091 = relay.Function([], output)
mutated_mod['func_13091'] = func_13091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1896_call = mod.get_global_var('func_1896')
func_1897_call = mutated_mod.get_global_var('func_1897')
call_13160 = relay.TupleGetItem(func_1896_call(), 0)
call_13161 = relay.TupleGetItem(func_1897_call(), 0)
output = relay.Tuple([call_13160,])
output2 = relay.Tuple([call_13161,])
func_13179 = relay.Function([], output)
mod['func_13179'] = func_13179
mod = relay.transform.InferType()(mod)
output = func_13179()
func_13180 = relay.Function([], output)
mutated_mod['func_13180'] = func_13180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6853_call = mod.get_global_var('func_6853')
func_6854_call = mutated_mod.get_global_var('func_6854')
call_13225 = relay.TupleGetItem(func_6853_call(), 0)
call_13226 = relay.TupleGetItem(func_6854_call(), 0)
output = relay.Tuple([call_13225,])
output2 = relay.Tuple([call_13226,])
func_13231 = relay.Function([], output)
mod['func_13231'] = func_13231
mod = relay.transform.InferType()(mod)
mutated_mod['func_13231'] = func_13231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13231_call = mutated_mod.get_global_var('func_13231')
call_13232 = func_13231_call()
output = call_13232
func_13233 = relay.Function([], output)
mutated_mod['func_13233'] = func_13233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12531_call = mod.get_global_var('func_12531')
func_12533_call = mutated_mod.get_global_var('func_12533')
call_13303 = relay.TupleGetItem(func_12531_call(), 0)
call_13304 = relay.TupleGetItem(func_12533_call(), 0)
output = call_13303
output2 = call_13304
func_13333 = relay.Function([], output)
mod['func_13333'] = func_13333
mod = relay.transform.InferType()(mod)
output = func_13333()
func_13334 = relay.Function([], output)
mutated_mod['func_13334'] = func_13334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13462 = relay.var("var_13462", dtype = "uint64", shape = (4, 3, 10))#candidate|13462|(4, 3, 10)|var|uint64
var_13463 = relay.var("var_13463", dtype = "uint64", shape = (4, 3, 10))#candidate|13463|(4, 3, 10)|var|uint64
bop_13464 = relay.less_equal(var_13462.astype('bool'), relay.reshape(var_13463.astype('bool'), relay.shape_of(var_13462))) # shape=(4, 3, 10)
uop_13470 = relay.sinh(var_13463.astype('float32')) # shape=(4, 3, 10)
func_5174_call = mod.get_global_var('func_5174')
func_5177_call = mutated_mod.get_global_var('func_5177')
const_13473 = relay.const([[-8.180231,-4.138121,-8.530751,-2.535464,3.812485,6.598567,-0.487837,-7.520442,5.300206,-8.486600,5.968944,3.812123,5.063271,0.636616,-9.474762,8.799842,-2.601754,2.945028,-1.400244,7.491566,-4.048113,-8.909087,-2.360945,-1.788855,-5.809939,4.776762,-7.252354,-1.480107,4.824198,9.444015,-9.961992,4.664424,-0.561414,2.355494,-4.637127,3.171370,2.601942,2.664262,-9.829354,3.504105,-3.768896,2.125873,1.491121,5.312120,7.473806,2.932941,9.744786,-8.124524,4.099395,2.587411,9.262137,6.169953,-9.953530,-4.636183,-8.430923,1.768041,9.512920,-4.132849,-2.296344,7.238171,-3.633721,4.733275,0.854157,-6.690692,5.483616,-0.227287,-7.075338,0.590476,7.822696,6.054571,-3.972234,-7.876184,5.946760,-7.390001,-3.596126,-6.098151,-4.117059,2.653704,3.071180,1.880665,6.832723,8.494847,7.621990,-4.213533,4.248674,-5.239308,-4.534747,1.686565,2.250405,-6.568672,0.556442,8.820768,-9.703676,-2.912016,-3.202512,0.580398,4.478954,8.181717,4.200176,3.835766,3.922149,-3.478435,9.817203,-1.838128,-8.344163,-1.033300,7.381560,2.916014,-3.957372,7.996449,6.840839,-6.641828,-3.487552,6.809872,1.546406,-7.890256,7.590054,3.749313,-1.342322,0.153646,-4.935483,-6.226047,4.735672,8.744371,4.180913,-7.713720,8.964691,-2.137762,-3.755598,-5.003875,-1.534414,0.374999,5.313678,-4.572363,-9.273790,-0.760080,-8.861117,-1.210440,4.411907,0.314512,-8.246810,1.203766,1.827214,0.931978,-2.561671,3.525386,-0.566903,-0.770805,1.388535,8.185624,-0.161290,-7.670587,8.780844,5.406804,2.516167,8.745989,-7.335112,4.061180,-4.218558,-6.956523,-5.906649,-5.489040,-3.032135,5.708968,8.897316,8.384285,-7.317918,-3.409240,-8.473627,-5.456680,8.552125,4.522759,3.569235,1.442687,-2.423202,-6.349209,3.430130,4.792803,9.152977,-3.870279,-5.656902,-0.977118,5.604019,-6.315087,-3.258806,7.852750,-7.457766,-0.686400,-3.077978,-8.962163,0.114190,1.691048,4.582392,-2.294962,7.536337,0.363195,-7.468027,8.503637,0.330195,1.701624,-3.904150,6.853904,2.847358,-8.275509,8.437510,-1.325548,9.769009,0.199469,0.398449,7.473373,-2.784997,-5.597745,3.503248,2.073745,7.431122,-1.036469,2.833720,-4.600691,9.173083,-5.000616,2.050822,6.924650,9.088946,5.001734,-6.651442,2.725420,-9.553091,0.306608,4.154334,-7.322447,9.616793,0.477642,-1.161600,-6.487854,-3.588751,-4.726224,3.177141,9.209771,-6.191977,8.113314,8.338109,-8.115486,-8.003283,4.752861,-8.443120,-4.871656,2.034592,-4.412078,-4.891900,0.763875,-1.334442,-5.178976,-5.121910,-2.317632,2.621826,5.603868,-1.712302,-3.040550,-4.989987,5.782734,1.130008,-9.141766,8.198326,-2.890353,8.246567,-8.189554,4.873777,-1.650441,-4.613268,-8.685134,-0.825948,4.782773,3.379570,-4.758043,5.620005,-4.200632,4.622756,4.113536,-7.259207,-9.605587,-1.439737,6.946982,-1.183014,5.038687,-4.864253,-9.356726,3.420087,8.450400,1.783804,-7.668056,6.764191,3.213959,-6.059184,9.459786,-8.628640,-6.684155,9.659755,-7.580987,1.795658,-8.059328,5.034408,3.197799,-6.355026,-7.267980,-5.389818,4.864698,5.668389,-8.613668,0.363318,-6.399288,-2.235930,-2.198819,-3.709807,6.380581,-1.906588,9.844064,-2.575475,4.543099,-7.798645,-3.991959,-9.362148,-0.117127,-3.418707,2.639128,4.630232,2.786336,4.994012,4.896447,-8.606326,6.783057,-9.370159,-8.964072,9.036968,-0.373553,0.615405,-9.086736,-4.135296,-2.867770,-4.548678,-5.148856,9.780276,7.728127,-8.713294,6.509319,9.765728,6.766514,9.662422,-9.556249,3.874081,-8.176564,0.503300,8.940973,-5.024398,-4.922470,4.976002,-7.062097,-5.675745,5.290011,-2.632830,9.544126,-4.731973,2.889546,-4.241130,-5.342735,-1.939318,7.900844,-3.922338,5.362155,-5.772468,6.607579,2.595326,-0.564662,5.388398,-6.445069,-7.753368,7.327352,-2.046885,2.275614,-9.959412,7.277557,-2.731133,-8.560688,5.010395,2.811409,0.395579,5.092423,-5.011698,-4.825819,-0.858425,1.905505,-1.165270,3.505278,-2.159380,8.712446,-4.925516,8.819499,2.012734,5.047233,-9.828944,-1.047143,7.259443,-9.529072,-1.668831,3.730952,4.680511,4.256559,8.317371,-1.016433,0.855449,-6.975986,-8.970351,7.519680,0.365340,-0.097198,9.788353,5.473361,4.965509,5.148916,-7.461475,-6.247719,5.444584,5.602308,-3.726762,-0.157504,-4.989573,0.004990,3.711718,-3.490680,-1.403050,-5.343426,-4.067906,-3.978693,2.781467,6.177739,4.888686,3.650121,9.453351,0.501765,-2.266998,-6.574490,8.179879,-0.136195,-1.507415,3.530447,9.318515,-6.382159,-1.341882,7.640217,-0.990906,7.250952]], dtype = "float32")#candidate|13473|(1, 450)|const|float32
call_13472 = relay.TupleGetItem(func_5174_call(relay.reshape(const_13473.astype('float32'), [15, 10, 3]), relay.reshape(const_13473.astype('float64'), [15, 10, 3]), ), 1)
call_13474 = relay.TupleGetItem(func_5177_call(relay.reshape(const_13473.astype('float32'), [15, 10, 3]), relay.reshape(const_13473.astype('float64'), [15, 10, 3]), ), 1)
output = relay.Tuple([bop_13464,uop_13470,call_13472,const_13473,])
output2 = relay.Tuple([bop_13464,uop_13470,call_13474,const_13473,])
func_13475 = relay.Function([var_13462,var_13463,], output)
mod['func_13475'] = func_13475
mod = relay.transform.InferType()(mod)
var_13476 = relay.var("var_13476", dtype = "uint64", shape = (4, 3, 10))#candidate|13476|(4, 3, 10)|var|uint64
var_13477 = relay.var("var_13477", dtype = "uint64", shape = (4, 3, 10))#candidate|13477|(4, 3, 10)|var|uint64
output = func_13475(var_13476,var_13477,)
func_13478 = relay.Function([var_13476,var_13477,], output)
mutated_mod['func_13478'] = func_13478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9029_call = mod.get_global_var('func_9029')
func_9030_call = mutated_mod.get_global_var('func_9030')
call_13550 = func_9029_call()
call_13551 = func_9029_call()
output = call_13550
output2 = call_13551
func_13558 = relay.Function([], output)
mod['func_13558'] = func_13558
mod = relay.transform.InferType()(mod)
output = func_13558()
func_13559 = relay.Function([], output)
mutated_mod['func_13559'] = func_13559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8731_call = mod.get_global_var('func_8731')
func_8733_call = mutated_mod.get_global_var('func_8733')
call_13581 = func_8731_call()
call_13582 = func_8731_call()
func_12264_call = mod.get_global_var('func_12264')
func_12266_call = mutated_mod.get_global_var('func_12266')
call_13596 = relay.TupleGetItem(func_12264_call(), 2)
call_13597 = relay.TupleGetItem(func_12266_call(), 2)
uop_13601 = relay.log2(call_13596.astype('float64')) # shape=(10, 15, 1)
uop_13603 = relay.log2(call_13597.astype('float64')) # shape=(10, 15, 1)
output = relay.Tuple([call_13581,uop_13601,])
output2 = relay.Tuple([call_13582,uop_13603,])
func_13607 = relay.Function([], output)
mod['func_13607'] = func_13607
mod = relay.transform.InferType()(mod)
output = func_13607()
func_13608 = relay.Function([], output)
mutated_mod['func_13608'] = func_13608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_13650 = relay.TupleGetItem(func_10370_call(), 1)
call_13651 = relay.TupleGetItem(func_10372_call(), 1)
output = call_13650
output2 = call_13651
func_13668 = relay.Function([], output)
mod['func_13668'] = func_13668
mod = relay.transform.InferType()(mod)
mutated_mod['func_13668'] = func_13668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13668_call = mutated_mod.get_global_var('func_13668')
call_13669 = func_13668_call()
output = call_13669
func_13670 = relay.Function([], output)
mutated_mod['func_13670'] = func_13670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_13693 = relay.TupleGetItem(func_5142_call(), 1)
call_13694 = relay.TupleGetItem(func_5144_call(), 1)
func_11806_call = mod.get_global_var('func_11806')
func_11808_call = mutated_mod.get_global_var('func_11808')
call_13695 = relay.TupleGetItem(func_11806_call(), 1)
call_13696 = relay.TupleGetItem(func_11808_call(), 1)
output = relay.Tuple([call_13693,call_13695,])
output2 = relay.Tuple([call_13694,call_13696,])
func_13707 = relay.Function([], output)
mod['func_13707'] = func_13707
mod = relay.transform.InferType()(mod)
output = func_13707()
func_13708 = relay.Function([], output)
mutated_mod['func_13708'] = func_13708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13789 = relay.var("var_13789", dtype = "bool", shape = (4, 3, 12))#candidate|13789|(4, 3, 12)|var|bool
const_13790 = relay.const([[[False,False,True,True,True,True,False,False,True,False,False,False],[False,True,True,False,True,True,True,False,True,True,True,True],[True,False,False,True,True,True,False,False,True,True,True,False]],[[False,True,False,True,True,True,False,True,False,True,True,True],[True,True,True,False,False,False,True,True,True,True,True,False],[False,True,False,True,False,True,True,True,True,False,False,False]],[[True,False,False,True,False,True,False,True,False,False,True,True],[False,False,False,True,True,True,False,False,False,False,True,True],[False,True,False,True,True,False,True,False,True,True,True,True]],[[True,True,False,True,True,True,False,False,True,True,True,False],[False,True,False,True,False,False,False,False,True,False,True,False],[False,False,False,True,False,True,False,True,False,False,False,False]]], dtype = "bool")#candidate|13790|(4, 3, 12)|const|bool
bop_13791 = relay.logical_or(var_13789.astype('bool'), relay.reshape(const_13790.astype('bool'), relay.shape_of(var_13789))) # shape=(4, 3, 12)
output = relay.Tuple([bop_13791,])
output2 = relay.Tuple([bop_13791,])
F = relay.Function([var_13789,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13789,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
	relay.transform.InferType(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_4526() -> Tensor[(2730), float32] {
  %0 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %0.0
}

def @func_11411() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(1694), uint16], Tensor[(11, 154), float32]) {
  %1 = @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */;
  %2 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 154), float32] */, dtype="float32") /* ty=Tensor[(11, 154), float32] */;
  %4 = reshape(%3, newshape=[1694]) /* ty=Tensor[(1694), float32] */;
  %5 = @func_10893(%4) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), float32], Tensor[(936), uint64], Tensor[(1694), uint16]) */;
  %6 = %1.3;
  %7 = %2.0;
  %8 = %5.3;
  (%6, %7, %8, meta[relay.Constant][0] /* ty=Tensor[(11, 154), float32] */)
}

def @func_5281(%var_5271: Tensor[(378), uint32]) -> (Tensor[(2730), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %9 = cast(%var_5271, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %10 = cast(%var_5271, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %11 = reshape(%9, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %12 = reshape(%10, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %13 = @func_917(%11, %12) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %14 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %15 = %13.0;
  (%14, %15, %var_5271)
}

def @func_11726(%var_11714: Tensor[(768), float64], %var_11715: Tensor[(48, 8), float32]) -> (Tensor[(15, 10, 3), bool], Tensor[(11, 8, 14), bool], Tensor[(1232), uint32], Tensor[(280, 1), float64], Tensor[(768), float64], Tensor[(48, 8), float32]) {
  %16 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(1232), uint32] */, dtype="uint32") /* ty=Tensor[(1232), uint32] */;
  %18 = reshape(%17, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), uint32] */;
  %19 = cast(%var_11714, dtype="float64") /* ty=Tensor[(768), float64] */;
  %20 = cast(%var_11715, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %21 = reshape(%19, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %22 = reshape(%20, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %23 = @func_9395(%21, %22) /* ty=(Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) */;
  %24 = %16.1;
  %25 = @func_10429(%18) /* ty=Tensor[(11, 8, 14), bool] */;
  %26 = %23.2;
  (%24, %25, meta[relay.Constant][1] /* ty=Tensor[(1232), uint32] */, %26, %var_11714, %var_11715)
}

def @func_4916() -> (Tensor[(2730), uint8],) {
  %27 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %28 = %27.0;
  (%28,)
}

def @func_5741(%var_5721: Tensor[(15, 2, 10), int16]) -> (Tensor[(15, 2, 10), int16], Tensor[(13, 12, 11), float64]) {
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 2, 10), int16] */, dtype="int16") /* ty=Tensor[(15, 2, 10), int16] */;
  %30 = shape_of(%var_5721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%var_5721, dtype="int16") /* ty=Tensor[(15, 2, 10), int16] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %33 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %34 = right_shift(%31, %32) /* ty=Tensor[(15, 2, 10), int16] */;
  %35 = %33.0;
  (%34, %35)
}

def @func_3285() -> Tensor[(13, 12, 11), float64] {
  %36 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %36.0
}

def @func_5846(%var_5807: uint64, %var_5808: Tensor[(13, 6, 12), uint64], %var_5840: Tensor[(121, 14), float32]) -> (Tensor[(13, 6, 12), uint64], Tensor[(2730), float32], Tensor[(13, 6, 12), float32], Tensor[(11, 14, 11), float32], Tensor[(121, 14), float32]) {
  %37 = cast(%var_5807, dtype="uint64") /* ty=uint64 */;
  %38 = cast(%var_5808, dtype="uint64") /* ty=Tensor[(13, 6, 12), uint64] */;
  %39 = cast(%var_5808, dtype="float32") /* ty=Tensor[(13, 6, 12), float32] */;
  %40 = cast(%var_5840, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
  %41 = cast(%var_5840, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
  %42 = cast(%var_5840, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
  %43 = reshape(%40, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %44 = reshape(%41, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %45 = reshape(%42, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %46 = @func_5664(%43, %44, %45) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
  %47 = left_shift(%37, %38) /* ty=Tensor[(13, 6, 12), uint64] */;
  %48 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %49 = sinh(%39) /* ty=Tensor[(13, 6, 12), float32] */;
  %50 = %46.0;
  (%47, %48, %49, %50, %var_5840)
}

def @func_4681(%var_4669: Tensor[(13, 12, 11), float64]) -> Tensor[(13, 12, 11), bool] {
  %51 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %52 = %51.0;
  %53 = cast(%var_4669, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%52, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%55, %56) /* ty=Tensor[(13, 12, 11), bool] */
}

def @func_11379(%var_11372: Tensor[(13, 12, 11), float64]) -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint64]) {
  %57 = @func_7835() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %58 = %57.0;
  %59 = cast(%var_11372, dtype="uint64") /* ty=Tensor[(13, 12, 11), uint64] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="uint64") /* ty=Tensor[(13, 12, 11), uint64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %63 = @func_7721() /* ty=Tensor[(2730), float32] */;
  %64 = left_shift(%61, %62) /* ty=Tensor[(13, 12, 11), uint64] */;
  (%63, %64)
}

def @func_11924(%var_11861: Tensor[(6, 14, 12), float32], %var_11862: Tensor[(6, 14, 12), float32], %var_11907: Tensor[(1694), float32]) -> (Tensor[(6, 14, 12), float32], Tensor[(224, 2), float64], Tensor[(2730), float32], Tensor[(2, 13, 8), float64], Tensor[(208), float64], Tensor[(1694), int32], Tensor[(13, 12, 11), float64]) {
  %65 = cast(%var_11862, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %66 = shape_of(%var_11861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_11861, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %69 = @func_11006() /* ty=(Tensor[(2730), float32],) */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %71 = reshape(%70, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(224, 2), float64] */, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %73 = reshape(%72, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %74 = @func_8901(%73) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(1694), float32], Tensor[(448), float64], Tensor[(1694), float32]) */;
  %75 = %74.4;
  %76 = cast(%var_11907, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(1), int32] */;
  %78 = cast(%75, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?), int32] */;
  %80 = mod(%67, %68) /* ty=Tensor[(6, 14, 12), float32] */;
  %81 = %69.0;
  %82 = @func_4650(%71) /* ty=Tensor[(2, 13, 8), float64] */;
  %83 = logical_xor(%78, %79) /* ty=Tensor[(1694), int32] */;
  %84 = @func_2931() /* ty=Tensor[(13, 12, 11), float64] */;
  (%80, meta[relay.Constant][3] /* ty=Tensor[(224, 2), float64] */, %81, %82, meta[relay.Constant][4] /* ty=Tensor[(208), float64] */, %83, %84)
}

def @func_12025(%var_12014: uint8) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) {
  %85 = cast(%var_12014, dtype="uint8") /* ty=uint8 */;
  %86 = @func_6363() /* ty=Tensor[(2730), float32] */;
  %87 = cast(%86, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
  %88 = reshape(%85, newshape=[]) /* ty=uint8 */;
  %89 = reshape(%87, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
  %90 = @func_1022(%88, %89) /* ty=(Tensor[(13, 14, 15), bool],) */;
  %91 = @func_4852() /* ty=Tensor[(2730), float32] */;
  %92 = %90.0;
  (%91, %86, %92, %var_12014)
}

def @func_1006(%var_989: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), float64],) {
  %93 = cast(%var_989, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %94 = erf(%93) /* ty=Tensor[(13, 12, 11), float64] */;
  %95 = cast(%94, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %96 = sigmoid(%95) /* ty=Tensor[(13, 12, 11), float64] */;
  (%96,)
}

def @func_11215() -> (Tensor[(450), int16], Tensor[(378), uint32], Tensor[(378), float64]) {
  %97 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %98 = @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */;
  %99 = %98.2;
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(1), int32] */;
  %102 = cast(%99, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %104 = cast(meta[relay.Constant][5] /* ty=Tensor[(378), uint32] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %105 = %97.2;
  %106 = bitwise_and(%102, %103) /* ty=Tensor[(378), uint32] */;
  %107 = exp(%104) /* ty=Tensor[(378), float64] */;
  (%105, %106, %107)
}

def @func_9308(%var_9249: Tensor[(3, 10, 15), float32], %var_9294: Tensor[(3, 10, 15), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) {
  %108 = cast(%var_9249, dtype="float32") /* ty=Tensor[(3, 10, 15), float32] */;
  %109 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 10, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 15), float32] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %112 = floor_mod(%110, %111) /* ty=Tensor[(3, 10, 15), float32] */;
  %113 = cast(%var_9249, dtype="uint64") /* ty=Tensor[(3, 10, 15), uint64] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%112, dtype="uint64") /* ty=Tensor[(3, 10, 15), uint64] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %117 = cast(%var_9249, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %118 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 10, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 10, 15), float32] */, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = greater(%119, %120) /* ty=Tensor[(3, 10, 15), bool] */;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %123 = exp(%122) /* ty=Tensor[(3, 10, 15), float64] */;
  %124 = cast(%var_9294, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%123, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %128 = @func_7027() /* ty=Tensor[(13, 12, 11), float64] */;
  %129 = subtract(%115, %116) /* ty=Tensor[(3, 10, 15), uint64] */;
  %130 = greater_equal(%126, %127) /* ty=Tensor[(3, 10, 15), bool] */;
  (%128, %129, %130)
}

def @func_3558() -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  %131 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %132 = %131.0;
  %133 = @func_2931() /* ty=Tensor[(13, 12, 11), float64] */;
  (%132, %133)
}

def @func_9652(%var_9624: Tensor[(4, 112), float64], %var_9625: Tensor[(286, 6), float64]) -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), uint8], Tensor[(286, 6), float64], Tensor[(1694), float32], Tensor[(4, 112), bool], Tensor[(1716), float64], Tensor[(13, 12, 11), float64]) {
  %134 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %135 = cast(%var_9624, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %136 = cast(%var_9625, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %137 = cast(meta[relay.Constant][7] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %138 = reshape(%135, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %139 = reshape(%136, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %140 = reshape(%137, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
  %141 = @func_7641(%138, %139, %140) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
  %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 112), float64] */, dtype="bool") /* ty=Tensor[(4, 112), bool] */;
  %143 = shape_of(%var_9624, dtype="int32") /* ty=Tensor[(2), int32] */;
  %144 = cast(%var_9624, dtype="bool") /* ty=Tensor[(4, 112), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %146 = @func_8665() /* ty=(Tensor[(1716), float64],) */;
  %147 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %148 = %134.0;
  %149 = %141.2;
  %150 = less(%144, %145) /* ty=Tensor[(4, 112), bool] */;
  %151 = %146.0;
  %152 = %147.0;
  (%148, %149, %var_9625, meta[relay.Constant][7] /* ty=Tensor[(1694), float32] */, %150, %151, %152)
}

def @func_3251() -> Tensor[(2730), float32] {
  %153 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %153.0
}

def @func_7344() -> (Tensor[(13, 12, 11), float64],) {
  %154 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %155 = %154.0;
  (%155,)
}

def @func_12851() -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), uint8]) {
  %156 = @func_9029() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %157 = @func_3558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %158 = @func_11949() /* ty=Tensor[(2730), uint8] */;
  %159 = %156.0;
  %160 = %157.0;
  %161 = @func_12518() /* ty=Tensor[(2730), uint8] */;
  (%158, %159, %160, %161)
}

def @func_5088() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) {
  %162 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %163 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  %164 = %162.0;
  (%163, %164)
}

def @func_12879(%var_12861: Tensor[(15, 7, 8), int8], %var_12871: uint8) -> (Tensor[(15, 7, 8), int8], uint8, uint8, Tensor[(15, 7, 8), float32]) {
  %165 = cast(%var_12861, dtype="int8") /* ty=Tensor[(15, 7, 8), int8] */;
  %166 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(15, 7, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 7, 8), int8] */, dtype="int8") /* ty=Tensor[(15, 7, 8), int8] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %169 = cast(%var_12871, dtype="uint8") /* ty=uint8 */;
  %170 = reshape(%169, newshape=[]) /* ty=uint8 */;
  %171 = @func_12454(%170) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(2730), float32], uint8, Tensor[(13, 12, 11), float64], Tensor[(378), uint32], Tensor[(1, 450), int16], Tensor[(13, 12, 11), float32]) */;
  %172 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 7, 8), int8] */, dtype="float32") /* ty=Tensor[(15, 7, 8), float32] */;
  %173 = logical_xor(%167, %168) /* ty=Tensor[(15, 7, 8), int8] */;
  %174 = %171.3;
  %175 = cosh(%172) /* ty=Tensor[(15, 7, 8), float32] */;
  (%173, %174, %var_12871, %175)
}

def @func_8665() -> (Tensor[(1716), float64],) {
  %176 = @func_8151() /* ty=(Tensor[(1716), float64], Tensor[(13, 12, 11), float64], Tensor[(450), int16]) */;
  %177 = %176.0;
  (%177,)
}

def @func_3411() -> (Tensor[(2730), float32],) {
  %178 = @func_3251() /* ty=Tensor[(2730), float32] */;
  (%178,)
}

def @func_11360(%var_11283: Tensor[(13, 12, 11), float32]) -> (Tensor[(13, 12, 11), uint16], Tensor[(15, 10, 3), bool], Tensor[(450), int16], Tensor[(13, 12, 11), float32], Tensor[(13, 12, 11), float64]) {
  %179 = @func_7820() /* ty=(Tensor[(450), int16], Tensor[(13, 12, 11), float32]) */;
  %180 = %179.1;
  %181 = cast(%var_11283, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %185 = cast(meta[relay.Constant][10] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %186 = reshape(%185, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %187 = @func_5209() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %188 = %187.1;
  %189 = cast(%188, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %190 = shape_of(%var_11283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%var_11283, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %193 = @func_3558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %194 = right_shift(%183, %184) /* ty=Tensor[(13, 12, 11), uint16] */;
  %195 = @func_3777(%186) /* ty=Tensor[(15, 10, 3), bool] */;
  %196 = power(%191, %192) /* ty=Tensor[(13, 12, 11), float32] */;
  %197 = %193.1;
  (%194, %195, meta[relay.Constant][10] /* ty=Tensor[(450), int16] */, %196, %197)
}

def @func_8925(%var_8916: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(6, 2, 15), float64]) {
  %198 = cast(%var_8916, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %199 = reshape(%198, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %200 = @func_7776(%199) /* ty=(Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
  %202 = asinh(%201) /* ty=Tensor[(6, 2, 15), float32] */;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(6, 2, 15), float64] */;
  %204 = %200.1;
  %205 = log2(%203) /* ty=Tensor[(6, 2, 15), float64] */;
  (%204, %var_8916, %205)
}

def @func_12518() -> Tensor[(2730), uint8] {
  %206 = @func_8007() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
  %206.0
}

def @func_7392() -> (Tensor[(2730), float32],) {
  %207 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %208 = %207.0;
  (%208,)
}

def @func_6577(%var_6544: Tensor[(600), float32], %var_6545: float32, %var_6547: Tensor[(1, 378), uint32]) -> (Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) {
  %209 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
  %210 = atan(%209) /* ty=Tensor[(11, 5, 8), float64] */;
  %211 = cast(%210, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
  %212 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(11, 5, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 5, 8), float64] */, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = cast(%var_6544, dtype="float32") /* ty=Tensor[(600), float32] */;
  %216 = cast(%var_6545, dtype="float32") /* ty=float32 */;
  %217 = cast(meta[relay.Constant][13] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %218 = cast(%var_6547, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %219 = reshape(%215, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), float32] */;
  %220 = reshape(%216, newshape=[]) /* ty=float32 */;
  %221 = reshape(%217, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %222 = reshape(%218, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %223 = @func_2481(%219, %220, %221, %222) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %224 = @func_3558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %225 = not_equal(%213, %214) /* ty=Tensor[(11, 5, 8), bool] */;
  %226 = %223.6;
  %227 = %224.1;
  (%225, %226, %var_6544, %var_6545, meta[relay.Constant][13] /* ty=Tensor[(384), float32] */, %var_6547, %227)
}

def @func_2931() -> Tensor[(13, 12, 11), float64] {
  %228 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %228.0
}

def @func_13080(%var_13044: Tensor[(1716), float64], %var_13078: Tensor[(1694), float32]) -> (Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(448), float64], Tensor[(1716), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32], Tensor[(286, 6), int32], float32, Tensor[(280), float64], Tensor[(384), float32], Tensor[(11, 154), float32], Tensor[(1694), float32]) {
  %229 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %230 = cast(meta[relay.Constant][14] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %231 = cast(%var_13044, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %232 = reshape(%230, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %233 = reshape(%231, newshape=[286, 6]) /* ty=Tensor[(286, 6), float64] */;
  %234 = @func_9652(%232, %233) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint8], Tensor[(286, 6), float64], Tensor[(1694), float32], Tensor[(4, 112), bool], Tensor[(1716), float64], Tensor[(13, 12, 11), float64]) */;
  %235 = cast(meta[relay.Constant][15] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(450), float32] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %237 = reshape(%235, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float32] */;
  %238 = reshape(%236, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float64] */;
  %239 = @func_9308(%237, %238) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) */;
  %240 = @func_8990() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(286, 6), int32], Tensor[(2730), int8]) */;
  %241 = cast(meta[relay.Constant][16] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %242 = cast(meta[relay.Constant][17] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %243 = reshape(%241, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %244 = reshape(%242, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %245 = @func_3711(%243, %244) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */;
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %247 = cast(%var_13044, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %248 = cast(%var_13078, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %249 = reshape(%246, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %250 = reshape(%247, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %251 = reshape(%248, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
  %252 = @func_7641(%249, %250, %251) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
  %253 = %229.1;
  %254 = %234.0;
  %255 = %239.1;
  %256 = %240.1;
  %257 = %245.2;
  %258 = %252.4;
  (%253, %254, meta[relay.Constant][14] /* ty=Tensor[(448), float64] */, %var_13044, %255, meta[relay.Constant][15] /* ty=Tensor[(450), float32] */, %256, %257, meta[relay.Constant][16] /* ty=Tensor[(280), float64] */, meta[relay.Constant][17] /* ty=Tensor[(384), float32] */, %258, %var_13078)
}

def @func_2602(%var_2568: float32, %var_2581: Tensor[(384), float32]) -> (Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) {
  %259 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %260 = cast(meta[relay.Constant][18] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %261 = cast(%var_2568, dtype="float32") /* ty=float32 */;
  %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %263 = cast(meta[relay.Constant][20] /* ty=Tensor[(378, 1), uint32] */, dtype="uint32") /* ty=Tensor[(378, 1), uint32] */;
  %264 = reshape(%260, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), float32] */;
  %265 = reshape(%261, newshape=[]) /* ty=float32 */;
  %266 = reshape(%262, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %267 = reshape(%263, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %268 = @func_2481(%264, %265, %266, %267) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %269 = cast(%var_2581, dtype="float64") /* ty=Tensor[(384), float64] */;
  %270 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(384), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %271 = cast(meta[relay.Constant][19] /* ty=Tensor[(384), float32] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?), float64] */;
  %273 = %268.0;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %275 = cast(%var_2568, dtype="float32") /* ty=float32 */;
  %276 = cast(meta[relay.Constant][19] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %277 = cast(meta[relay.Constant][20] /* ty=Tensor[(378, 1), uint32] */, dtype="uint32") /* ty=Tensor[(378, 1), uint32] */;
  %278 = reshape(%274, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), float32] */;
  %279 = reshape(%275, newshape=[]) /* ty=float32 */;
  %280 = reshape(%276, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %281 = reshape(%277, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %282 = @func_2481(%278, %279, %280, %281) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %283 = %259.0;
  %284 = mod(%271, %272) /* ty=Tensor[(384), float64] */;
  %285 = %282.5;
  (%283, %273, meta[relay.Constant][18] /* ty=Tensor[(600), float32] */, %var_2568, meta[relay.Constant][20] /* ty=Tensor[(378, 1), uint32] */, %284, %285)
}

def @func_11065(%var_11033: Tensor[(4, 13, 9), int32], %var_11037: Tensor[(4, 13, 9), bool]) -> (Tensor[(4, 13, 9), int64], Tensor[(13, 12, 11), float64], Tensor[(4, 13, 9), int64]) {
  %286 = cast(%var_11033, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
  %287 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(4, 13, 9), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 13, 9), int32] */, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %290 = less(%288, %289) /* ty=Tensor[(4, 13, 9), bool] */;
  %291 = cast(%var_11037, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
  %292 = shape_of(%290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%290, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %295 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %296 = cast(%var_11037, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
  %297 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(4, 13, 9), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 13, 9), int32] */, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %300 = add(%293, %294) /* ty=Tensor[(4, 13, 9), int64] */;
  %301 = %295.0;
  %302 = multiply(%298, %299) /* ty=Tensor[(4, 13, 9), int64] */;
  (%300, %301, %302)
}

def @func_7641(%var_7586: Tensor[(448), float64], %var_7601: Tensor[(13, 12, 11), float64], %var_7617: Tensor[(11, 154), float32]) -> (Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) {
  %303 = cast(%var_7586, dtype="float64") /* ty=Tensor[(448), float64] */;
  %304 = reshape(%303, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %305 = @func_147(%304) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %306 = @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %307 = %306.1;
  %308 = cast(%var_7601, dtype="uint8") /* ty=Tensor[(13, 12, 11), uint8] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="uint8") /* ty=Tensor[(13, 12, 11), uint8] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %312 = cast(%var_7617, dtype="float32") /* ty=Tensor[(11, 154), float32] */;
  %313 = reshape(%312, newshape=[1694]) /* ty=Tensor[(1694), float32] */;
  %314 = @func_6469(%313) /* ty=(Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) */;
  %315 = %314.2;
  %316 = cast(%315, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %317 = %305.0;
  %318 = logical_xor(%310, %311) /* ty=Tensor[(13, 12, 11), uint8] */;
  %319 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %320 = acosh(%316) /* ty=Tensor[(1694), float32] */;
  (%317, %var_7586, %318, %319, %var_7617, %320)
}

def @func_2438() -> (Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) {
  %321 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 8, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %322 = cast(meta[relay.Constant][23] /* ty=Tensor[(286, 6), float64] */, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %323 = reshape(%322, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %324 = @func_1006(%323) /* ty=(Tensor[(13, 12, 11), float64],) */;
  %325 = exp(%321) /* ty=Tensor[(5, 8, 15), float32] */;
  %326 = %324.0;
  (%325, %326, meta[relay.Constant][23] /* ty=Tensor[(286, 6), float64] */)
}

def @func_3497(%var_3484: Tensor[(15, 63), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) {
  %327 = cast(%var_3484, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
  %328 = reshape(%327, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %329 = @func_3423(%328) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(7, 15, 9), float32], Tensor[(945), float32]) */;
  %330 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %331 = %329.0;
  (%330, %331, %var_3484)
}

def @func_9501() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %332 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
  %333 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %334 = %332.0;
  %335 = %333.0;
  (%334, %335)
}

def @func_12290(%var_12287: Tensor[(378), uint32], %var_12288: Tensor[(2156), uint8]) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(3, 126), int64], Tensor[(378), uint32], Tensor[(2156), uint8]) {
  %336 = @func_10168() /* ty=(Tensor[(6, 3, 16), float32], Tensor[(2730), float32]) */;
  %337 = @func_10321() /* ty=(Tensor[(2730), float32],) */;
  %338 = cast(%var_12287, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %339 = cast(%var_12288, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %340 = reshape(%338, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %341 = reshape(%339, newshape=[2156]) /* ty=Tensor[(2156), uint8] */;
  %342 = @func_8454(%340, %341) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(448), float64], Tensor[(2156), uint8], Tensor[(105, 9), float32], Tensor[(3, 126), int64]) */;
  %343 = %336.1;
  %344 = %337.0;
  %345 = %342.9;
  (%343, %344, %345, %var_12287, %var_12288)
}

def @func_12951() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %346 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
  %347 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %348 = %346.0;
  %349 = %347.1;
  (%348, %349)
}

def @func_5568() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) {
  %350 = cast(meta[relay.Constant][24] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %351 = reshape(%350, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %352 = @func_3992(%351) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(384), float64], Tensor[(280), float64], Tensor[(384), float32]) */;
  %353 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %354 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %355 = %352.2;
  (%353, %354, %355, meta[relay.Constant][24] /* ty=Tensor[(384), float32] */)
}

def @func_7835() -> (Tensor[(13, 12, 11), float64],) {
  %356 = @func_5624() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %357 = %356.0;
  (%357,)
}

def @func_8901(%var_8888: Tensor[(448), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(1694), float32], Tensor[(448), float64], Tensor[(1694), float32]) {
  %358 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %359 = cast(%var_8888, dtype="float64") /* ty=Tensor[(448), float64] */;
  %360 = @func_8048() /* ty=Tensor[(13, 12, 11), float64] */;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %362 = cast(meta[relay.Constant][25] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %363 = reshape(%359, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %364 = reshape(%361, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %365 = reshape(%362, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
  %366 = @func_7641(%363, %364, %365) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
  %367 = %358.0;
  %368 = %366.5;
  (%367, %360, %368, %var_8888, meta[relay.Constant][25] /* ty=Tensor[(1694), float32] */)
}

def @func_9146(%var_9123: Tensor[(3, 126), uint32], %var_9124: Tensor[(280), float64], %var_9144: Tensor[(450), int16]) -> (Tensor[(2730), float32], Tensor[(384), float32], Tensor[(600), float32], float32, Tensor[(3, 126), uint32], Tensor[(280), float64], Tensor[(2730), float32], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  %369 = cast(meta[relay.Constant][26] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %370 = cast(-7.76883f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %371 = cast(%var_9123, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %372 = cast(%var_9124, dtype="float64") /* ty=Tensor[(280), float64] */;
  %373 = reshape(%369, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %374 = reshape(%370, newshape=[]) /* ty=float32 */;
  %375 = reshape(%371, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %376 = reshape(%372, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %377 = @func_7149(%373, %374, %375, %376) /* ty=(Tensor[(2730), float32], float32, Tensor[(600), float32], float32, Tensor[(378), uint32], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(384), float32]) */;
  %378 = cast(%var_9144, dtype="int16") /* ty=Tensor[(450), int16] */;
  %379 = reshape(%378, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %380 = @func_8079() /* ty=Tensor[(2730), float32] */;
  %381 = %377.7;
  %382 = @func_6821() /* ty=Tensor[(2730), float32] */;
  %383 = @func_3777(%379) /* ty=Tensor[(15, 10, 3), bool] */;
  (%380, %381, meta[relay.Constant][26] /* ty=Tensor[(600), float32] */, -7.76883f /* ty=float32 */, %var_9123, %var_9124, %382, %383, %var_9144)
}

def @func_10168() -> (Tensor[(6, 3, 16), float32], Tensor[(2730), float32]) {
  %384 = @func_4617() /* ty=(Tensor[(6, 3, 16), float32],) */;
  %385 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %386 = %384.0;
  %387 = %385.0;
  (%386, %387)
}

def @func_1022(%var_1011: uint8, %var_1012: Tensor[(13, 14, 15), uint8]) -> (Tensor[(13, 14, 15), bool],) {
  %388 = cast(%var_1011, dtype="bool") /* ty=bool */;
  %389 = cast(%var_1012, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %390 = equal(%388, %389) /* ty=Tensor[(13, 14, 15), bool] */;
  (%390,)
}

def @func_1173(%var_1160: float32, %var_1161: Tensor[(8, 12, 4), float32]) -> Tensor[(8, 12, 4), float32] {
  %391 = cast(%var_1160, dtype="float32") /* ty=float32 */;
  %392 = cast(%var_1161, dtype="float32") /* ty=Tensor[(8, 12, 4), float32] */;
  mod(%391, %392) /* ty=Tensor[(8, 12, 4), float32] */
}

def @func_5496(%var_5486: Tensor[(3, 126), uint32]) -> (Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(9, 3, 14), uint32], Tensor[(3, 126), uint32], Tensor[(15, 10, 3), bool], Tensor[(5, 90), int16]) {
  %393 = @func_4379() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %394 = cast(%var_5486, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %395 = cast(%var_5486, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %396 = reshape(%394, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %397 = reshape(%395, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %398 = @func_917(%396, %397) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %399 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 90), int16] */, dtype="int16") /* ty=Tensor[(5, 90), int16] */;
  %400 = reshape(%399, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %401 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %402 = %393.0;
  %403 = %398.0;
  %404 = @func_3777(%400) /* ty=Tensor[(15, 10, 3), bool] */;
  (%401, %402, %403, %var_5486, %404, meta[relay.Constant][27] /* ty=Tensor[(5, 90), int16] */)
}

def @func_5526() -> (Tensor[(13, 12, 11), float64],) {
  %405 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  (%405,)
}

def @func_6325(%var_6300: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), bool]) {
  %406 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %407 = @func_5353() /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) */;
  %408 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %409 = @func_4399() /* ty=Tensor[(13, 12, 11), float64] */;
  %410 = cast(%var_6300, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = %406.0;
  %415 = %407.2;
  %416 = %408.0;
  %417 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %418 = logical_and(%412, %413) /* ty=Tensor[(13, 12, 11), bool] */;
  (%414, %415, %416, %417, %418)
}

def @func_7721() -> Tensor[(2730), float32] {
  %419 = @func_5601() /* ty=(Tensor[(2730), float32],) */;
  %419.0
}

def @func_5353() -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) {
  %420 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %421 = cast(meta[relay.Constant][28] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %422 = reshape(%421, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %423 = @func_1006(%422) /* ty=(Tensor[(13, 12, 11), float64],) */;
  %424 = %420.0;
  %425 = %423.0;
  (%424, %425, meta[relay.Constant][28] /* ty=Tensor[(1716), float64] */)
}

def @func_11232() -> (Tensor[(2730), float32],) {
  %426 = @func_7721() /* ty=Tensor[(2730), float32] */;
  (%426,)
}

def @func_147(%var_97: Tensor[(4, 8, 14), float64]) -> (Tensor[(4, 8, 14), float64],) {
  %427 = cast(%var_97, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
  %428 = sinh(%427) /* ty=Tensor[(4, 8, 14), float64] */;
  (%428,)
}

def @func_2916() -> (Tensor[(13, 12, 11), float64],) {
  %429 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %430 = %429.0;
  (%430,)
}

def @func_9710() -> (Tensor[(13, 12, 11), float64],) {
  %431 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %432 = %431.0;
  (%432,)
}

def @func_13538(%var_13530: uint8) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) {
  %433 = @func_7344() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %434 = @func_12771() /* ty=(Tensor[(2730), float32], Tensor[(2730), uint8]) */;
  %435 = cast(%var_13530, dtype="uint8") /* ty=uint8 */;
  %436 = %434.0;
  %437 = cast(%436, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
  %438 = reshape(%435, newshape=[]) /* ty=uint8 */;
  %439 = reshape(%437, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
  %440 = @func_1022(%438, %439) /* ty=(Tensor[(13, 14, 15), bool],) */;
  %441 = %433.0;
  %442 = %440.0;
  (%441, %436, %442, %var_13530)
}

def @func_2862(%var_2739: float32, %var_2740: Tensor[(384), float32], %var_2771: Tensor[(448), float64], %var_2820: Tensor[(378, 2), float32]) -> (Tensor[(13, 12, 11), float32], float32, Tensor[(384), float32], Tensor[(378, ?), int64], Tensor[(4, 8, 14), float64], Tensor[(384), float64], Tensor[(378, 2), bool], Tensor[(378, 448), bool], Tensor[(600), float32], Tensor[(384), float64]) {
  %443 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %444 = %443.0;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %446 = cast(%var_2739, dtype="float32") /* ty=float32 */;
  %447 = cast(%var_2740, dtype="float32") /* ty=Tensor[(384), float32] */;
  %448 = reshape(%446, newshape=[]) /* ty=float32 */;
  %449 = reshape(%447, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %450 = @func_2602(%448, %449) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
  %451 = %450.4;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
  %453 = sigmoid(%452) /* ty=Tensor[(378, 1), float64] */;
  %454 = cast(%451, dtype="int64") /* ty=Tensor[(378, 1), int64] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(2), int32] */;
  %456 = cast(%453, dtype="int64") /* ty=Tensor[(378, 1), int64] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %458 = cast(%var_2771, dtype="float64") /* ty=Tensor[(448), float64] */;
  %459 = reshape(%458, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %460 = @func_147(%459) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %461 = cast(%var_2739, dtype="float32") /* ty=float32 */;
  %462 = cast(%var_2740, dtype="float32") /* ty=Tensor[(384), float32] */;
  %463 = reshape(%461, newshape=[]) /* ty=float32 */;
  %464 = reshape(%462, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %465 = @func_2602(%463, %464) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
  %466 = cast(%453, dtype="float32") /* ty=Tensor[(378, 1), float32] */;
  %467 = exp(%466) /* ty=Tensor[(378, 1), float32] */;
  %468 = cast(%467, dtype="bool") /* ty=Tensor[(378, 1), bool] */;
  %469 = cast(%var_2820, dtype="bool") /* ty=Tensor[(378, 2), bool] */;
  %470 = cast(%467, dtype="int32") /* ty=Tensor[(378, 1), int32] */;
  %471 = cast(%var_2771, dtype="int32") /* ty=Tensor[(448), int32] */;
  %472 = bitwise_xor(%470, %471) /* ty=Tensor[(378, 448), int32] */;
  %473 = cast(%var_2771, dtype="float32") /* ty=Tensor[(448), float32] */;
  %474 = cast(%453, dtype="float32") /* ty=Tensor[(378, 1), float32] */;
  %475 = mod(%473, %474) /* ty=Tensor[(378, 448), float32] */;
  %476 = cast(%475, dtype="bool") /* ty=Tensor[(378, 448), bool] */;
  %477 = shape_of(%472, dtype="int32") /* ty=Tensor[(2), int32] */;
  %478 = cast(%472, dtype="bool") /* ty=Tensor[(378, 448), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %480 = cast(%var_2739, dtype="float32") /* ty=float32 */;
  %481 = %465.5;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(384), float32] */;
  %483 = reshape(%480, newshape=[]) /* ty=float32 */;
  %484 = reshape(%482, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %485 = @func_2602(%483, %484) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
  %486 = cast(%var_2739, dtype="float32") /* ty=float32 */;
  %487 = cast(%var_2740, dtype="float32") /* ty=Tensor[(384), float32] */;
  %488 = reshape(%486, newshape=[]) /* ty=float32 */;
  %489 = reshape(%487, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %490 = @func_2602(%488, %489) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
  %491 = log2(%445) /* ty=Tensor[(13, 12, 11), float32] */;
  %492 = right_shift(%456, %457) /* ty=Tensor[(378, ?), int64] */;
  %493 = %460.0;
  %494 = logical_and(%468, %469) /* ty=Tensor[(378, 2), bool] */;
  %495 = equal(%478, %479) /* ty=Tensor[(378, 448), bool] */;
  %496 = %485.2;
  %497 = %490.5;
  (%491, %var_2739, %var_2740, %492, %493, %481, %494, %495, %496, %497)
}

def @func_3045() -> (Tensor[(2730), float32],) {
  %498 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %499 = cast(meta[relay.Constant][29] /* ty=Tensor[(2730), float64] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(1), int32] */;
  %501 = cast(%498, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?), float32] */;
  %503 = floor_mod(%501, %502) /* ty=Tensor[(2730), float32] */;
  (%503,)
}

def @func_3103(%var_3080: Tensor[(13, 12, 11), float64]) -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) {
  %504 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %505 = %504.0;
  %506 = cast(%var_3080, dtype="uint32") /* ty=Tensor[(13, 12, 11), uint32] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%505, dtype="uint32") /* ty=Tensor[(13, 12, 11), uint32] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %510 = cast(%505, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %511 = exp(%510) /* ty=Tensor[(13, 12, 11), float32] */;
  %512 = cast(%505, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %513 = shape_of(%511, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%511, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %516 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %517 = bitwise_and(%508, %509) /* ty=Tensor[(13, 12, 11), uint32] */;
  %518 = bitwise_xor(%514, %515) /* ty=Tensor[(13, 12, 11), uint16] */;
  (%516, %517, %518)
}

def @func_13298() -> Tensor[(13, 12, 11), float64] {
  @func_3285() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_7149(%var_7125: Tensor[(600), float32], %var_7126: float32, %var_7127: Tensor[(378), uint32], %var_7146: Tensor[(280), float64]) -> (Tensor[(2730), float32], float32, Tensor[(600), float32], float32, Tensor[(378), uint32], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(384), float32]) {
  %519 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %520 = cast(%var_7125, dtype="float32") /* ty=Tensor[(600), float32] */;
  %521 = cast(%var_7126, dtype="float32") /* ty=float32 */;
  %522 = cast(%var_7127, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %523 = reshape(%520, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %524 = reshape(%521, newshape=[]) /* ty=float32 */;
  %525 = reshape(%522, newshape=[1, 378]) /* ty=Tensor[(1, 378), uint32] */;
  %526 = @func_6577(%523, %524, %525) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) */;
  %527 = cast(%var_7146, dtype="float64") /* ty=Tensor[(280), float64] */;
  %528 = %526.3;
  %529 = cast(%528, dtype="float32") /* ty=float32 */;
  %530 = cast(meta[relay.Constant][30] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %531 = reshape(%527, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %532 = reshape(%529, newshape=[]) /* ty=float32 */;
  %533 = reshape(%530, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %534 = @func_3219(%531, %532, %533) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %535 = %519.0;
  %536 = %534.0;
  (%535, %528, %var_7125, %var_7126, %var_7127, %536, %var_7146, meta[relay.Constant][30] /* ty=Tensor[(384), float32] */)
}

def @func_6015() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) {
  %537 = @func_5601() /* ty=(Tensor[(2730), float32],) */;
  %538 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %539 = %537.0;
  %540 = %538.1;
  %541 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%539, %540, %541)
}

def @func_7820() -> (Tensor[(450), int16], Tensor[(13, 12, 11), float32]) {
  %542 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %543 = %542.2;
  %544 = cast(%543, dtype="int16") /* ty=Tensor[(450), int16] */;
  %545 = reshape(%544, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %546 = @func_6663(%545) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %547 = %546.7;
  (%543, %547)
}

def @func_4069() -> (Tensor[(13, 12, 11), float64],) {
  %548 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %549 = %548.0;
  %550 = cast(%549, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %551 = log10(%550) /* ty=Tensor[(13, 12, 11), float64] */;
  (%551,)
}

def @func_11447() -> (Tensor[(13, 12, 11), float64],) {
  %552 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %553 = %552.0;
  (%553,)
}

def @func_12107() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(10, 45), float32]) {
  %554 = @func_11006() /* ty=(Tensor[(2730), float32],) */;
  %555 = cast(meta[relay.Constant][31] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %556 = cast(meta[relay.Constant][31] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %557 = cast(meta[relay.Constant][31] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %558 = reshape(%555, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %559 = reshape(%556, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %560 = reshape(%557, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %561 = @func_5664(%558, %559, %560) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
  %562 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
  %563 = @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */;
  %564 = cast(meta[relay.Constant][32] /* ty=Tensor[(10, 45), int16] */, dtype="int16") /* ty=Tensor[(10, 45), int16] */;
  %565 = reshape(%564, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %566 = @func_6663(%565) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %567 = %566.2;
  %568 = cast(%567, dtype="float32") /* ty=Tensor[(450, 1), float32] */;
  %569 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(10, 45), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %570 = cast(meta[relay.Constant][32] /* ty=Tensor[(10, 45), int16] */, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %572 = %554.0;
  %573 = @func_6363() /* ty=Tensor[(2730), float32] */;
  %574 = %561.0;
  %575 = %562.0;
  %576 = %563.0;
  %577 = divide(%570, %571) /* ty=Tensor[(10, 45), float32] */;
  (%572, %573, %574, meta[relay.Constant][31] /* ty=Tensor[(1694), float32] */, %575, %576, %577)
}

def @func_10429(%var_10421: Tensor[(11, 8, 14), uint32]) -> Tensor[(11, 8, 14), bool] {
  %578 = cast(%var_10421, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
  %579 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(11, 8, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 8, 14), uint32] */, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%580, %581) /* ty=Tensor[(11, 8, 14), bool] */
}

def @func_4617() -> (Tensor[(6, 3, 16), float32],) {
  %582 = @func_4431() /* ty=Tensor[(6, 3, 16), float32] */;
  (%582,)
}

def @func_12583() -> Tensor[(2730), float64] {
  @func_2963() /* ty=Tensor[(2730), float64] */
}

def @func_11587() -> (Tensor[(2730), float32], Tensor[(2730), uint8]) {
  %583 = @func_9566() /* ty=(Tensor[(2730), float32],) */;
  %584 = %583.0;
  %585 = @func_10704() /* ty=Tensor[(2730), uint8] */;
  (%584, %585)
}

def @func_8007() -> (Tensor[(2730), uint8], Tensor[(2730), float32]) {
  %586 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %587 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%586, %587)
}

def @func_13852() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  %588 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
  %589 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %590 = %589.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %592 = sinh(%591) /* ty=Tensor[(13, 12, 11), float64] */;
  %593 = cast(%592, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %594 = reshape(%593, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %595 = @func_1006(%594) /* ty=(Tensor[(13, 12, 11), float64],) */;
  %596 = %588.0;
  %597 = %595.0;
  (%596, %592, %597)
}

def @func_7903(%var_7871: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) {
  %598 = cast(%var_7871, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %599 = reshape(%598, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %600 = @func_7776(%599) /* ty=(Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) */;
  %601 = cast(meta[relay.Constant][34] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %602 = reshape(%601, newshape=[1694]) /* ty=Tensor[(1694), float32] */;
  %603 = @func_6469(%602) /* ty=(Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) */;
  %604 = cast(meta[relay.Constant][34] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %605 = erf(%604) /* ty=Tensor[(1694), float32] */;
  %606 = cast(meta[relay.Constant][35] /* ty=Tensor[(1694), float32] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(1), int32] */;
  %608 = cast(%605, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?), float64] */;
  %610 = @func_7721() /* ty=Tensor[(2730), float32] */;
  %611 = %600.1;
  %612 = %603.0;
  %613 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %614 = maximum(%608, %609) /* ty=Tensor[(1694), float64] */;
  (%610, %611, %var_7871, %612, %613, %614)
}

def @func_3423(%var_3421: Tensor[(945), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(7, 15, 9), float32], Tensor[(945), float32]) {
  %615 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %616 = cast(%var_3421, dtype="float32") /* ty=Tensor[(945), float32] */;
  %617 = reshape(%616, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), float32] */;
  %618 = @func_2902(%617) /* ty=(Tensor[(7, 15, 9), float32], Tensor[(5, 8, 15), float32]) */;
  %619 = %615.0;
  %620 = %618.0;
  (%619, %620, %var_3421)
}

def @func_3219(%var_3194: Tensor[(2, 14, 10), float64], %var_3202: float32, %var_3203: Tensor[(384), float32]) -> (Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) {
  %621 = cast(%var_3194, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %622 = cast(%var_3202, dtype="float32") /* ty=float32 */;
  %623 = cast(%var_3203, dtype="float32") /* ty=Tensor[(384), float32] */;
  %624 = reshape(%622, newshape=[]) /* ty=float32 */;
  %625 = reshape(%623, newshape=[8, 12, 4]) /* ty=Tensor[(8, 12, 4), float32] */;
  %626 = cos(%621) /* ty=Tensor[(2, 14, 10), float64] */;
  %627 = @func_1173(%624, %625) /* ty=Tensor[(8, 12, 4), float32] */;
  (%626, %627, %var_3202, %var_3203)
}

def @func_6750() -> (Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), int64], Tensor[(1694), float32]) {
  %628 = @func_5526() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %629 = cast(meta[relay.Constant][36] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %630 = cast(meta[relay.Constant][36] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %631 = cast(meta[relay.Constant][36] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %632 = reshape(%629, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %633 = reshape(%630, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %634 = reshape(%631, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %635 = @func_5664(%632, %633, %634) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
  %636 = %628.0;
  %637 = %635.1;
  (%636, %637, meta[relay.Constant][36] /* ty=Tensor[(1694), float32] */)
}

def @func_10321() -> (Tensor[(2730), float32],) {
  %638 = @func_6363() /* ty=Tensor[(2730), float32] */;
  (%638,)
}

def @func_4765(%var_4733: float32) -> (Tensor[(6, 3, 16), float32], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32], Tensor[(13, 12, 11), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  %639 = cast(%var_4733, dtype="float32") /* ty=float32 */;
  %640 = cast(meta[relay.Constant][37] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %641 = reshape(%639, newshape=[]) /* ty=float32 */;
  %642 = reshape(%640, newshape=[8, 12, 4]) /* ty=Tensor[(8, 12, 4), float32] */;
  %643 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %644 = %643.0;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %646 = cast(meta[relay.Constant][38] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %647 = reshape(%646, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %648 = @func_147(%647) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %649 = @func_4431() /* ty=Tensor[(6, 3, 16), float32] */;
  %650 = @func_1173(%641, %642) /* ty=Tensor[(8, 12, 4), float32] */;
  %651 = tan(%645) /* ty=Tensor[(13, 12, 11), float32] */;
  %652 = %648.0;
  (%649, %650, %var_4733, meta[relay.Constant][37] /* ty=Tensor[(384), float32] */, %651, %652, meta[relay.Constant][38] /* ty=Tensor[(448), float64] */)
}

def @func_8374() -> (Tensor[(378), uint32],) {
  %653 = @func_5624() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %654 = %653.2;
  (%654,)
}

def @func_4010() -> Tensor[(13, 12, 11), float64] {
  @func_3285() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_6363() -> Tensor[(2730), float32] {
  @func_3251() /* ty=Tensor[(2730), float32] */
}

def @func_4431() -> Tensor[(6, 3, 16), float32] {
  %655 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 3, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  atan(%655) /* ty=Tensor[(6, 3, 16), float32] */
}

def @func_4379() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) {
  %656 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %657 = cast(meta[relay.Constant][40] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %658 = reshape(%657, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %659 = @func_3103(%658) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) */;
  %660 = %656.0;
  %661 = %659.2;
  (%660, %661, meta[relay.Constant][40] /* ty=Tensor[(1716), float64] */)
}

def @func_8079() -> Tensor[(2730), float32] {
  %662 = @func_6015() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) */;
  %662.2
}

def @func_8596() -> (Tensor[(13, 12, 11), float32],) {
  %663 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %665 = acos(%664) /* ty=Tensor[(13, 12, 11), float32] */;
  (%665,)
}

def @func_9983() -> (Tensor[(2730), float64], Tensor[(2730), float32]) {
  %666 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
  %667 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %668 = %666.0;
  (%667, %668)
}

def @func_8252() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %669 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
  %670 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %672 = reshape(%671, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %673 = @func_7903(%672) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) */;
  %674 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  %675 = %669.0;
  %676 = %673.4;
  %677 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %678 = @func_6998() /* ty=Tensor[(13, 12, 11), float64] */;
  (%674, %675, %670, %676, %677, %678)
}

def @main(%var_13886: Tensor[(1, 15, 10), float32]) -> (Tensor[(1, 15, 10), float32],) {
  %679 = cast(%var_13886, dtype="float32") /* ty=Tensor[(1, 15, 10), float32] */;
  %680 = erf(%679) /* ty=Tensor[(1, 15, 10), float32] */;
  (%680,)
}

def @func_13648() -> (Tensor[(4, 16, 7), float32], Tensor[(13, 12, 11), float64], Tensor[(2730), float64], Tensor[(2730), float32]) {
  %681 = @func_3931() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */;
  %682 = @func_13298() /* ty=Tensor[(13, 12, 11), float64] */;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %684 = reshape(%683, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %685 = @func_9789(%684) /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %686 = %681.1;
  %687 = @func_12583() /* ty=Tensor[(2730), float64] */;
  %688 = %685.0;
  (%686, %682, %687, %688)
}

def @func_7477() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %689 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
  %690 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
  %691 = @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %692 = %689.0;
  %693 = %690.0;
  %694 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %695 = %691.2;
  (%692, %693, %694, %695)
}

def @func_6728(%var_6706: Tensor[(280), float64]) -> (Tensor[(9, 3, 14), uint32], float32, Tensor[(280), float64], Tensor[(1, 384), float32], Tensor[(11, 5, 8), bool], Tensor[(2, 300), bool]) {
  %696 = @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */;
  %697 = cast(%var_6706, dtype="float64") /* ty=Tensor[(280), float64] */;
  %698 = cast(-7.26646f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %699 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 384), float32] */, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %700 = reshape(%697, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %701 = reshape(%698, newshape=[]) /* ty=float32 */;
  %702 = reshape(%699, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %703 = @func_3219(%700, %701, %702) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %704 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 300), float32] */, dtype="float32") /* ty=Tensor[(2, 300), float32] */;
  %705 = cast(-7.26646f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %706 = %696.1;
  %707 = cast(%706, dtype="uint32") /* ty=Tensor[(9, 3, 14), uint32] */;
  %708 = reshape(%704, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %709 = reshape(%705, newshape=[]) /* ty=float32 */;
  %710 = reshape(%707, newshape=[1, 378]) /* ty=Tensor[(1, 378), uint32] */;
  %711 = @func_6577(%708, %709, %710) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) */;
  %712 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 300), float32] */, dtype="bool") /* ty=Tensor[(2, 300), bool] */;
  %713 = cast(-7.26646f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %714 = %703.2;
  %715 = %711.0;
  %716 = greater_equal(%712, %713) /* ty=Tensor[(2, 300), bool] */;
  (%706, %714, %var_6706, meta[relay.Constant][41] /* ty=Tensor[(1, 384), float32] */, %715, %716)
}

def @func_5601() -> (Tensor[(2730), float32],) {
  %717 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%717,)
}

def @func_2902(%var_2889: Tensor[(7, 15, 9), float32]) -> (Tensor[(7, 15, 9), float32], Tensor[(5, 8, 15), float32]) {
  %718 = cast(%var_2889, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
  %719 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %720 = cosh(%718) /* ty=Tensor[(7, 15, 9), float32] */;
  %721 = %719.0;
  (%720, %721)
}

def @func_11138() -> (Tensor[(13, 12, 11), float64], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  %722 = cast(meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %723 = reshape(%722, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %724 = @func_147(%723) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %725 = @func_8123() /* ty=Tensor[(13, 12, 11), float64] */;
  %726 = %724.0;
  (%725, %726, meta[relay.Constant][43] /* ty=Tensor[(448), float64] */)
}

def @func_7079() -> (Tensor[(2730), uint8], Tensor[(2730), float32]) {
  %727 = @func_5601() /* ty=(Tensor[(2730), float32],) */;
  %728 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %729 = %727.0;
  (%728, %729)
}

def @func_3931() -> (Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) {
  %730 = @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %731 = cast(meta[relay.Constant][44] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %732 = reshape(%731, newshape=[4, 16, 7]) /* ty=Tensor[(4, 16, 7), float64] */;
  %733 = @func_3379(%732) /* ty=(Tensor[(4, 16, 7), float64], Tensor[(4, 16, 7), float32]) */;
  %734 = %730.0;
  %735 = %733.1;
  (%734, %735, meta[relay.Constant][44] /* ty=Tensor[(448), float64] */)
}

def @func_4650(%var_4635: Tensor[(2, 13, 8), float64]) -> Tensor[(2, 13, 8), float64] {
  %736 = cast(%var_4635, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  acos(%736) /* ty=Tensor[(2, 13, 8), float64] */
}

def @func_2943() -> Tensor[(2730), uint8] {
  %737 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %737.3
}

def @func_11613() -> (Tensor[(2730), uint8],) {
  %738 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %739 = %738.3;
  (%739,)
}

def @func_5664(%var_5637: Tensor[(11, 14, 11), float32], %var_5638: Tensor[(11, 14, 11), float32], %var_5652: Tensor[(11, 14, 11), float32]) -> (Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) {
  %740 = cast(%var_5638, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  %741 = shape_of(%var_5637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_5637, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %744 = cast(%var_5652, dtype="int64") /* ty=Tensor[(11, 14, 11), int64] */;
  %745 = shape_of(%var_5638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_5638, dtype="int64") /* ty=Tensor[(11, 14, 11), int64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %748 = mod(%742, %743) /* ty=Tensor[(11, 14, 11), float32] */;
  %749 = add(%746, %747) /* ty=Tensor[(11, 14, 11), int64] */;
  (%748, %749)
}

def @func_6998() -> Tensor[(13, 12, 11), float64] {
  %750 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %750.0
}

def @func_13502(%var_13443: uint64, %var_13444: Tensor[(14, 13, 8), uint64]) -> (Tensor[(14, 13, 8), bool], Tensor[(13, 12, 11), float64], Tensor[(14, 13, 8), float64], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64]) {
  %751 = cast(%var_13443, dtype="bool") /* ty=bool */;
  %752 = cast(%var_13444, dtype="bool") /* ty=Tensor[(14, 13, 8), bool] */;
  %753 = @func_7835() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %754 = cast(%var_13444, dtype="float64") /* ty=Tensor[(14, 13, 8), float64] */;
  %755 = @func_11613() /* ty=(Tensor[(2730), uint8],) */;
  %756 = @func_9029() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %757 = not_equal(%751, %752) /* ty=Tensor[(14, 13, 8), bool] */;
  %758 = %753.0;
  %759 = sin(%754) /* ty=Tensor[(14, 13, 8), float64] */;
  %760 = %755.0;
  %761 = %756.0;
  (%757, %758, %759, %760, %761)
}

def @func_7543() -> (Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  %762 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %763 = cast(meta[relay.Constant][45] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %764 = reshape(%763, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %765 = %762.0;
  %766 = @func_3777(%764) /* ty=Tensor[(15, 10, 3), bool] */;
  (%765, %766, meta[relay.Constant][45] /* ty=Tensor[(450), int16] */)
}

def @func_4212(%var_4205: Tensor[(280), float64], %var_4206: float32, %var_4207: Tensor[(384), float32]) -> (Tensor[(286, 6), int32], Tensor[(8, 12, 4), float32], Tensor[(280), float64], float32, Tensor[(384), float32]) {
  %767 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %768 = cast(%var_4205, dtype="float64") /* ty=Tensor[(280), float64] */;
  %769 = cast(%var_4206, dtype="float32") /* ty=float32 */;
  %770 = cast(%var_4207, dtype="float32") /* ty=Tensor[(384), float32] */;
  %771 = reshape(%768, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %772 = reshape(%769, newshape=[]) /* ty=float32 */;
  %773 = reshape(%770, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %774 = @func_3219(%771, %772, %773) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %775 = %767.0;
  %776 = %774.1;
  (%775, %776, %var_4205, %var_4206, %var_4207)
}

def @func_4339() -> (Tensor[(2730), float32],) {
  %777 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %778 = %777.0;
  (%778,)
}

def @func_3113() -> Tensor[(13, 12, 11), float64] {
  @func_2931() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_3711(%var_3692: Tensor[(280), float64], %var_3694: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) {
  %779 = cast(%var_3692, dtype="float64") /* ty=Tensor[(280), float64] */;
  %780 = cast(-3.8661f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %781 = cast(%var_3694, dtype="float32") /* ty=Tensor[(384), float32] */;
  %782 = reshape(%779, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %783 = reshape(%780, newshape=[]) /* ty=float32 */;
  %784 = reshape(%781, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %785 = @func_3219(%782, %783, %784) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %786 = %785.3;
  %787 = cast(%786, dtype="float64") /* ty=Tensor[(384), float64] */;
  %788 = cast(%var_3692, dtype="float64") /* ty=Tensor[(280), float64] */;
  %789 = cast(-3.8661f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %790 = cast(%786, dtype="float32") /* ty=Tensor[(384), float32] */;
  %791 = reshape(%788, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %792 = reshape(%789, newshape=[]) /* ty=float32 */;
  %793 = reshape(%790, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %794 = @func_3219(%791, %792, %793) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %795 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  %796 = asin(%787) /* ty=Tensor[(384), float64] */;
  %797 = %794.0;
  %798 = @func_3251() /* ty=Tensor[(2730), float32] */;
  (%795, %var_3692, -3.8661f /* ty=float32 */, %var_3694, %796, %797, %798)
}

def @func_2481(%var_2448: Tensor[(5, 8, 15), float32], %var_2458: float32, %var_2459: Tensor[(12, 32), float32], %var_2476: Tensor[(378), uint32]) -> (Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %799 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %800 = %799.0;
  %801 = cast(%var_2448, dtype="int16") /* ty=Tensor[(5, 8, 15), int16] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="int16") /* ty=Tensor[(5, 8, 15), int16] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %805 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %806 = cast(%var_2458, dtype="float32") /* ty=float32 */;
  %807 = cast(%var_2459, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %808 = reshape(%806, newshape=[]) /* ty=float32 */;
  %809 = reshape(%807, newshape=[8, 12, 4]) /* ty=Tensor[(8, 12, 4), float32] */;
  %810 = cast(%var_2476, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %811 = cast(%var_2476, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %812 = reshape(%810, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %813 = reshape(%811, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %814 = @func_917(%812, %813) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %815 = multiply(%803, %804) /* ty=Tensor[(5, 8, 15), int16] */;
  %816 = %805.2;
  %817 = @func_1173(%808, %809) /* ty=Tensor[(8, 12, 4), float32] */;
  %818 = %814.0;
  (%815, %816, %817, %var_2458, %var_2459, %818, %var_2476)
}

def @func_4970() -> (Tensor[(2730), float32],) {
  %819 = @func_4852() /* ty=Tensor[(2730), float32] */;
  (%819,)
}

def @func_5209() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %820 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %821 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  (%820, %821)
}

def @func_10734(%var_10720: Tensor[(112, 4), float64]) -> (Tensor[(2730), float32], Tensor[(448), float64], Tensor[(112, 4), float64], Tensor[(286, 6), float64], Tensor[(1694), float32]) {
  %822 = @func_7079() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
  %823 = cast(%var_10720, dtype="float64") /* ty=Tensor[(112, 4), float64] */;
  %824 = cast(meta[relay.Constant][46] /* ty=Tensor[(286, 6), float64] */, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %825 = cast(meta[relay.Constant][47] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %826 = reshape(%823, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %827 = reshape(%824, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %828 = reshape(%825, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
  %829 = @func_7641(%826, %827, %828) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
  %830 = %822.1;
  %831 = %829.1;
  (%830, %831, %var_10720, meta[relay.Constant][46] /* ty=Tensor[(286, 6), float64] */, meta[relay.Constant][47] /* ty=Tensor[(1694), float32] */)
}

def @func_8753(%var_8690: Tensor[(12, 32), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], float32, Tensor[(140, 2), float64], float32, Tensor[(12, 32), float32], Tensor[(13, 12, 11), float64], Tensor[(6, 3, 16), float64]) {
  %832 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %833 = cast(meta[relay.Constant][48] /* ty=Tensor[(140, 2), float64] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %834 = cast(-6.61591f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %835 = cast(%var_8690, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %836 = reshape(%833, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %837 = reshape(%834, newshape=[]) /* ty=float32 */;
  %838 = reshape(%835, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %839 = @func_4212(%836, %837, %838) /* ty=(Tensor[(286, 6), int32], Tensor[(8, 12, 4), float32], Tensor[(280), float64], float32, Tensor[(384), float32]) */;
  %840 = @func_4617() /* ty=(Tensor[(6, 3, 16), float32],) */;
  %841 = %840.0;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  %843 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  %844 = %832.0;
  %845 = %839.3;
  %846 = @func_6998() /* ty=Tensor[(13, 12, 11), float64] */;
  %847 = acosh(%842) /* ty=Tensor[(6, 3, 16), float64] */;
  (%843, %844, %845, meta[relay.Constant][48] /* ty=Tensor[(140, 2), float64] */, -6.61591f /* ty=float32 */, %var_8690, %846, %847)
}

def @func_5977(%var_5926: Tensor[(14, 14, 11), uint8], %var_5927: Tensor[(14, 14, 11), uint8], %var_5963: Tensor[(14, 14, 11), uint8], %var_5971: Tensor[(945), float32]) -> (Tensor[(448), float64], Tensor[(14, 14, 11), uint64], Tensor[(14, 14, 11), uint64], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) {
  %848 = @func_3931() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */;
  %849 = cast(%var_5927, dtype="bool") /* ty=Tensor[(14, 14, 11), bool] */;
  %850 = shape_of(%var_5926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%var_5926, dtype="bool") /* ty=Tensor[(14, 14, 11), bool] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %853 = greater(%851, %852) /* ty=Tensor[(14, 14, 11), bool] */;
  %854 = cast(%853, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %855 = shape_of(%var_5926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%var_5926, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %858 = cast(%var_5963, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %859 = shape_of(%var_5926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%var_5926, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %862 = cast(%var_5971, dtype="float32") /* ty=Tensor[(945), float32] */;
  %863 = reshape(%862, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %864 = @func_3497(%863) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */;
  %865 = %848.2;
  %866 = subtract(%856, %857) /* ty=Tensor[(14, 14, 11), uint64] */;
  %867 = add(%860, %861) /* ty=Tensor[(14, 14, 11), uint64] */;
  %868 = %864.0;
  (%865, %866, %867, %868, %var_5971)
}

def @func_11006() -> (Tensor[(2730), float32],) {
  %869 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%869,)
}

def @func_917(%var_909: Tensor[(9, 3, 14), uint32], %var_910: Tensor[(9, 3, 14), uint32]) -> (Tensor[(9, 3, 14), uint32],) {
  %870 = cast(%var_910, dtype="uint32") /* ty=Tensor[(9, 3, 14), uint32] */;
  %871 = shape_of(%var_909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%var_909, dtype="uint32") /* ty=Tensor[(9, 3, 14), uint32] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %874 = left_shift(%872, %873) /* ty=Tensor[(9, 3, 14), uint32] */;
  (%874,)
}

def @func_11834() -> (Tensor[(13, 12, 11), float32], Tensor[(384), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) {
  %875 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %876 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %877 = @func_10829() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) */;
  %878 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
  %879 = %875.0;
  %880 = %876.3;
  %881 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %882 = %877.0;
  %883 = %878.0;
  (%879, %880, %881, %882, %883)
}

def @func_13243() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float64]) {
  %884 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %885 = @func_9983() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */;
  %886 = %884.0;
  %887 = %885.0;
  (%886, %887)
}

def @func_5143() -> (Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) {
  %888 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 378), uint32] */, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %889 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 378), uint32] */, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %890 = reshape(%888, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %891 = reshape(%889, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %892 = @func_917(%890, %891) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %893 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %894 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 378), uint32] */, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %895 = cast(meta[relay.Constant][50] /* ty=Tensor[(4, 378), uint32] */, dtype="float64") /* ty=Tensor[(4, 378), float64] */;
  %896 = minimum(%894, %895) /* ty=Tensor[(4, 378), float64] */;
  %897 = cast(%896, dtype="float32") /* ty=Tensor[(4, 378), float32] */;
  %898 = @func_4010() /* ty=Tensor[(13, 12, 11), float64] */;
  %899 = %892.0;
  %900 = %893.0;
  %901 = sigmoid(%897) /* ty=Tensor[(4, 378), float32] */;
  (%898, %899, %900, %901)
}

def @func_6469(%var_6443: Tensor[(1694), float32]) -> (Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) {
  %902 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %903 = cast(%var_6443, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %904 = cast(%var_6443, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %905 = cast(%var_6443, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %906 = reshape(%903, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %907 = reshape(%904, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %908 = reshape(%905, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %909 = @func_5664(%906, %907, %908) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
  %910 = %902.0;
  %911 = %909.0;
  (%910, %911, %var_6443)
}

def @func_11098() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  %912 = @func_7820() /* ty=(Tensor[(450), int16], Tensor[(13, 12, 11), float32]) */;
  %913 = @func_6499() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) */;
  %914 = cast(meta[relay.Constant][51] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %915 = reshape(%914, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %916 = @func_147(%915) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %917 = %912.1;
  %918 = %913.0;
  %919 = %916.0;
  (%917, %918, %919, meta[relay.Constant][51] /* ty=Tensor[(448), float64] */)
}

def @func_8454(%var_8400: Tensor[(378), uint32], %var_8440: Tensor[(2156), uint8]) -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(448), float64], Tensor[(2156), uint8], Tensor[(105, 9), float32], Tensor[(3, 126), int64]) {
  %920 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %921 = @func_4379() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %922 = @func_7079() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
  %923 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %924 = cast(%var_8440, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %925 = cast(%var_8440, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %926 = cast(%var_8440, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %927 = cast(meta[relay.Constant][52] /* ty=Tensor[(105, 9), float32] */, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
  %928 = reshape(%924, newshape=[14, 14, 11]) /* ty=Tensor[(14, 14, 11), uint8] */;
  %929 = reshape(%925, newshape=[14, 14, 11]) /* ty=Tensor[(14, 14, 11), uint8] */;
  %930 = reshape(%926, newshape=[14, 14, 11]) /* ty=Tensor[(14, 14, 11), uint8] */;
  %931 = reshape(%927, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %932 = @func_5977(%928, %929, %930, %931) /* ty=(Tensor[(448), float64], Tensor[(14, 14, 11), uint64], Tensor[(14, 14, 11), uint64], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) */;
  %933 = cast(%var_8400, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %934 = reshape(%933, newshape=[3, 126]) /* ty=Tensor[(3, 126), uint32] */;
  %935 = @func_5496(%934) /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(9, 3, 14), uint32], Tensor[(3, 126), uint32], Tensor[(15, 10, 3), bool], Tensor[(5, 90), int16]) */;
  %936 = %935.3;
  %937 = cast(%var_8400, dtype="int64") /* ty=Tensor[(378), int64] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(2), int32] */;
  %939 = cast(%936, dtype="int64") /* ty=Tensor[(3, 126), int64] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %941 = %920.0;
  %942 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %943 = %921.0;
  %944 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %945 = %922.0;
  %946 = %923.1;
  %947 = %932.0;
  %948 = multiply(%939, %940) /* ty=Tensor[(3, 126), int64] */;
  (%941, %942, %943, %944, %945, %946, %947, %var_8440, meta[relay.Constant][52] /* ty=Tensor[(105, 9), float32] */, %948)
}

def @func_6663(%var_6631: Tensor[(450, 1), int16]) -> (Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) {
  %949 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %950 = cast(%var_6631, dtype="int16") /* ty=Tensor[(450, 1), int16] */;
  %951 = reshape(%950, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %952 = @func_4970() /* ty=(Tensor[(2730), float32],) */;
  %953 = %949.0;
  %954 = @func_3777(%951) /* ty=Tensor[(15, 10, 3), bool] */;
  %955 = %952.0;
  %956 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %957 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  %958 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %959 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  (%953, %954, %var_6631, %955, %956, %957, %958, %959)
}

def @func_5685(%var_5672: Tensor[(10, 2, 14), int32]) -> (Tensor[(10, 2, 14), int32], Tensor[(1716), float64]) {
  %960 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 2, 14), int32] */, dtype="int32") /* ty=Tensor[(10, 2, 14), int32] */;
  %961 = shape_of(%var_5672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%var_5672, dtype="int32") /* ty=Tensor[(10, 2, 14), int32] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %964 = @func_5353() /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) */;
  %965 = left_shift(%962, %963) /* ty=Tensor[(10, 2, 14), int32] */;
  %966 = %964.2;
  (%965, %966)
}

def @func_6821() -> Tensor[(2730), float32] {
  @func_3251() /* ty=Tensor[(2730), float32] */
}

def @func_6499() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) {
  %967 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %968 = cast(meta[relay.Constant][54] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
  %969 = reshape(%968, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %970 = @func_3497(%969) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */;
  %971 = %967.0;
  %972 = %970.0;
  (%971, %972, meta[relay.Constant][54] /* ty=Tensor[(945), float32] */)
}

def @func_4399() -> Tensor[(13, 12, 11), float64] {
  @func_3113() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_2963() -> Tensor[(2730), float64] {
  %973 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %974 = %973.3;
  %975 = cast(%974, dtype="float64") /* ty=Tensor[(2730), float64] */;
  atan(%975) /* ty=Tensor[(2730), float64] */
}

def @func_4126(%var_4106: Tensor[(2730), float32]) -> (Tensor[(286, 6), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32]) {
  %976 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %977 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %978 = %977.0;
  %979 = cast(%var_4106, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %980 = shape_of(%978, dtype="int32") /* ty=Tensor[(1), int32] */;
  %981 = cast(%978, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?), float32] */;
  %983 = %976.2;
  %984 = @func_2931() /* ty=Tensor[(13, 12, 11), float64] */;
  %985 = power(%981, %982) /* ty=Tensor[(2730), float32] */;
  (%983, %984, %985)
}

def @func_8553() -> (Tensor[(2730), float32],) {
  %986 = @func_4970() /* ty=(Tensor[(2730), float32],) */;
  %987 = %986.0;
  (%987,)
}

def @func_12373() -> Tensor[(2730), float32] {
  %988 = @func_9983() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */;
  %988.1
}

def @func_2695() -> (Tensor[(13, 12, 11), float64],) {
  %989 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %990 = %989.1;
  (%990,)
}

def @func_9689() -> (Tensor[(2730), float32],) {
  %991 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
  %992 = %991.0;
  (%992,)
}

def @func_6402() -> (Tensor[(13, 12, 11), float64],) {
  %993 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %994 = %993.0;
  (%994,)
}

def @func_7027() -> Tensor[(13, 12, 11), float64] {
  %995 = @func_5526() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %995.0
}

def @func_6175() -> (Tensor[(2730), float32],) {
  %996 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %997 = cast(%996, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %998 = sqrt(%997) /* ty=Tensor[(2730), float32] */;
  (%998,)
}

def @func_9104(%var_9067: Tensor[(15, 1, 1), float32], %var_9068: Tensor[(15, 1, 3), float32], %var_9100: Tensor[(5, 189), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(15, 1, 3), int64], Tensor[(15, 63), float32], Tensor[(5, 189), float32]) {
  %999 = cast(%var_9067, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %1000 = cast(%var_9068, dtype="float32") /* ty=Tensor[(15, 1, 3), float32] */;
  %1001 = floor_mod(%999, %1000) /* ty=Tensor[(15, 1, 3), float32] */;
  %1002 = cast(%1001, dtype="int64") /* ty=Tensor[(15, 1, 3), int64] */;
  %1003 = cast(%var_9067, dtype="int64") /* ty=Tensor[(15, 1, 1), int64] */;
  %1004 = cast(%var_9100, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
  %1005 = reshape(%1004, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %1006 = @func_3497(%1005) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */;
  %1007 = @func_8048() /* ty=Tensor[(13, 12, 11), float64] */;
  %1008 = maximum(%1002, %1003) /* ty=Tensor[(15, 1, 3), int64] */;
  %1009 = %1006.2;
  (%1007, %1008, %1009, %var_9100)
}

def @func_12454(%var_12412: uint8) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(2730), float32], uint8, Tensor[(13, 12, 11), float64], Tensor[(378), uint32], Tensor[(1, 450), int16], Tensor[(13, 12, 11), float32]) {
  %1010 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1011 = cast(%var_12412, dtype="uint8") /* ty=uint8 */;
  %1012 = reshape(%1011, newshape=[]) /* ty=uint8 */;
  %1013 = @func_12025(%1012) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) */;
  %1014 = @func_3931() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */;
  %1015 = cast(meta[relay.Constant][55] /* ty=Tensor[(1, 450), int16] */, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %1016 = reshape(%1015, newshape=[50, 9]) /* ty=Tensor[(50, 9), int16] */;
  %1017 = @func_10343(%1016) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(50, 9), int16], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %1018 = @func_8596() /* ty=(Tensor[(13, 12, 11), float32],) */;
  %1019 = %1010.0;
  %1020 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %1021 = %1013.1;
  %1022 = %1014.0;
  %1023 = %1017.4;
  %1024 = %1018.0;
  (%1019, %1020, %1021, %var_12412, %1022, %1023, meta[relay.Constant][55] /* ty=Tensor[(1, 450), int16] */, %1024)
}

def @func_13383() -> (Tensor[(13, 12, 11), float64],) {
  %1025 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1026 = %1025.0;
  (%1026,)
}

def @func_5881() -> (Tensor[(13, 12, 11), float64],) {
  %1027 = @func_4399() /* ty=Tensor[(13, 12, 11), float64] */;
  (%1027,)
}

def @func_8048() -> Tensor[(13, 12, 11), float64] {
  %1028 = @func_7477() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %1028.3
}

def @func_3670() -> Tensor[(13, 12, 11), float32] {
  %1029 = @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1030 = %1029.0;
  %1031 = cast(%1030, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  cosh(%1031) /* ty=Tensor[(13, 12, 11), float32] */
}

def @func_10893(%var_10884: Tensor[(1694), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), float32], Tensor[(936), uint64], Tensor[(1694), uint16]) {
  %1032 = cast(meta[relay.Constant][56] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1033 = cast(meta[relay.Constant][57] /* ty=Tensor[(936), uint64] */, dtype="uint64") /* ty=Tensor[(936), uint64] */;
  %1034 = cast(%var_10884, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %1035 = reshape(%1032, newshape=[]) /* ty=uint64 */;
  %1036 = reshape(%1033, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint64] */;
  %1037 = reshape(%1034, newshape=[121, 14]) /* ty=Tensor[(121, 14), float32] */;
  %1038 = @func_5846(%1035, %1036, %1037) /* ty=(Tensor[(13, 6, 12), uint64], Tensor[(2730), float32], Tensor[(13, 6, 12), float32], Tensor[(11, 14, 11), float32], Tensor[(121, 14), float32]) */;
  %1039 = cast(meta[relay.Constant][56] /* ty=uint64 */, dtype="uint16") /* ty=uint16 */;
  %1040 = cast(%var_10884, dtype="uint16") /* ty=Tensor[(1694), uint16] */;
  %1041 = @func_4399() /* ty=Tensor[(13, 12, 11), float64] */;
  %1042 = %1038.3;
  %1043 = bitwise_or(%1039, %1040) /* ty=Tensor[(1694), uint16] */;
  (%1041, %1042, meta[relay.Constant][57] /* ty=Tensor[(936), uint64] */, %1043)
}

def @func_10343(%var_10335: Tensor[(50, 9), int16]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(50, 9), int16], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %1044 = @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */;
  %1045 = cast(%var_10335, dtype="int16") /* ty=Tensor[(50, 9), int16] */;
  %1046 = reshape(%1045, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %1047 = @func_6663(%1046) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %1048 = cast(meta[relay.Constant][58] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %1049 = cast(meta[relay.Constant][58] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %1050 = reshape(%1048, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %1051 = reshape(%1049, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %1052 = @func_917(%1050, %1051) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %1053 = %1044.2;
  %1054 = %1047.4;
  %1055 = %1052.0;
  (%1053, %1054, %var_10335, %1055, meta[relay.Constant][58] /* ty=Tensor[(378), uint32] */)
}

def @func_12686() -> (Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  %1056 = @func_11138() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) */;
  %1057 = cast(meta[relay.Constant][59] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %1058 = reshape(%1057, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %1059 = %1056.0;
  %1060 = @func_3777(%1058) /* ty=Tensor[(15, 10, 3), bool] */;
  (%1059, %1060, meta[relay.Constant][59] /* ty=Tensor[(450), int16] */)
}

def @func_8849(%var_8833: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(378, 1), uint32], float32, Tensor[(384), float32], Tensor[(2730), float32]) {
  %1061 = cast(-2.20637f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1062 = cast(%var_8833, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1063 = reshape(%1061, newshape=[]) /* ty=float32 */;
  %1064 = reshape(%1062, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1065 = @func_2602(%1063, %1064) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
  %1066 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
  %1067 = @func_4010() /* ty=Tensor[(13, 12, 11), float64] */;
  %1068 = %1065.4;
  %1069 = %1066.0;
  (%1067, %1068, -2.20637f /* ty=float32 */, %var_8833, %1069)
}

def @func_3604() -> (Tensor[(13, 12, 11), float64],) {
  %1070 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1071 = %1070.0;
  (%1071,)
}

def @func_10264() -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) {
  %1072 = @func_8596() /* ty=(Tensor[(13, 12, 11), float32],) */;
  %1073 = @func_8374() /* ty=(Tensor[(378), uint32],) */;
  %1074 = @func_6998() /* ty=Tensor[(13, 12, 11), float64] */;
  %1075 = cast(%1074, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %1076 = reshape(%1075, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %1077 = @func_7903(%1076) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) */;
  %1078 = %1072.0;
  %1079 = %1073.0;
  %1080 = %1077.4;
  (%1074, %1078, %1079, %1080)
}

def @func_9348() -> (Tensor[(13, 12, 11), float32],) {
  %1081 = @func_8252() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_10865() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32]) {
  %1083 = @func_7679() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1084 = cast(meta[relay.Constant][60] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %1085 = cast(meta[relay.Constant][60] /* ty=Tensor[(450), float32] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1086 = reshape(%1084, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float32] */;
  %1087 = reshape(%1085, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float64] */;
  %1088 = @func_9308(%1086, %1087) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) */;
  %1089 = @func_6821() /* ty=Tensor[(2730), float32] */;
  %1090 = %1083.0;
  %1091 = %1088.1;
  (%1089, %1090, %1091, meta[relay.Constant][60] /* ty=Tensor[(450), float32] */)
}

def @func_12261() -> uint8 {
  %1092 = @func_10829() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) */;
  %1092.5
}

def @func_12641() -> (Tensor[(450), float32], Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(2730), uint8]) {
  %1093 = @func_10865() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32]) */;
  %1094 = @func_4916() /* ty=(Tensor[(2730), uint8],) */;
  %1095 = @func_5209() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %1096 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %1097 = %1093.3;
  %1098 = %1094.0;
  %1099 = %1095.0;
  %1100 = %1096.0;
  (%1097, %1098, %1099, %1100)
}

def @func_7679() -> (Tensor[(13, 12, 11), float64],) {
  %1101 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1102 = %1101.0;
  (%1102,)
}

def @func_13767(%var_13754: Tensor[(768), float64], %var_13755: Tensor[(384), float32]) -> (Tensor[(2730), float32], Tensor[(384), float64], Tensor[(768), float64], Tensor[(384), float32]) {
  %1103 = @func_8275() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %1104 = cast(%var_13754, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1105 = cast(%var_13755, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1106 = reshape(%1104, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
  %1107 = reshape(%1105, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1108 = @func_9395(%1106, %1107) /* ty=(Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) */;
  %1109 = %1103.1;
  %1110 = %1108.1;
  (%1109, %1110, %var_13754, %var_13755)
}

def @func_8151() -> (Tensor[(1716), float64], Tensor[(13, 12, 11), float64], Tensor[(450), int16]) {
  %1111 = @func_4379() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %1112 = cast(meta[relay.Constant][61] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %1113 = reshape(%1112, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %1114 = @func_6663(%1113) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %1115 = %1111.2;
  %1116 = %1114.4;
  (%1115, %1116, meta[relay.Constant][61] /* ty=Tensor[(450), int16] */)
}

def @func_3072() -> (Tensor[(13, 12, 11), float64],) {
  %1117 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1118 = %1117.0;
  (%1118,)
}

def @func_9029() -> (Tensor[(13, 12, 11), float64],) {
  %1119 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1120 = %1119.0;
  (%1120,)
}

def @func_8990() -> (Tensor[(13, 12, 11), float64], Tensor[(286, 6), int32], Tensor[(2730), int8]) {
  %1121 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %1122 = @func_8553() /* ty=(Tensor[(2730), float32],) */;
  %1123 = %1122.0;
  %1124 = cast(meta[relay.Constant][62] /* ty=Tensor[(2730), float32] */, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1126 = cast(%1123, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1128 = @func_7027() /* ty=Tensor[(13, 12, 11), float64] */;
  %1129 = %1121.0;
  %1130 = right_shift(%1126, %1127) /* ty=Tensor[(2730), int8] */;
  (%1128, %1129, %1130)
}

def @func_13128() -> (Tensor[(2730), float32], Tensor[(2730), float64]) {
  %1131 = @func_9983() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */;
  %1132 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %1133 = %1131.0;
  (%1132, %1133)
}

def @func_11949() -> Tensor[(2730), uint8] {
  %1134 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %1134.3
}

def @func_10938() -> Tensor[(2730), float32] {
  %1135 = @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */;
  %1135.3
}

def @func_3777(%var_3743: Tensor[(15, 10, 3), int16]) -> Tensor[(15, 10, 3), bool] {
  %1136 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 10, 3), int16] */, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1137 = shape_of(%var_3743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%var_3743, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1140 = equal(%1138, %1139) /* ty=Tensor[(15, 10, 3), bool] */;
  %1141 = cast(%1140, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1142 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(15, 10, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1143 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 10, 3), int16] */, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1143, %1144) /* ty=Tensor[(15, 10, 3), bool] */
}

def @func_6692() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  %1145 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1146 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1147 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %1148 = %1145.0;
  %1149 = %1146.0;
  (%1147, %1148, %1149)
}

def @func_10408() -> Tensor[(13, 12, 11), float64] {
  @func_3113() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_10447() -> Tensor[(13, 12, 11), float64] {
  %1150 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %1150.0
}

def @func_5624() -> (Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %1151 = @func_4881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1152 = cast(meta[relay.Constant][64] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %1153 = cast(meta[relay.Constant][64] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %1154 = reshape(%1152, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %1155 = reshape(%1153, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %1156 = @func_917(%1154, %1155) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %1157 = %1151.0;
  %1158 = %1156.0;
  (%1157, %1158, meta[relay.Constant][64] /* ty=Tensor[(378), uint32] */)
}

def @func_12771() -> (Tensor[(2730), float32], Tensor[(2730), uint8]) {
  %1159 = @func_12107() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(10, 45), float32]) */;
  %1160 = %1159.1;
  %1161 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  (%1160, %1161)
}

def @func_3168() -> (Tensor[(2730), uint8],) {
  %1162 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  (%1162,)
}

def @func_9566() -> (Tensor[(2730), float32],) {
  %1163 = @func_9501() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %1164 = %1163.0;
  (%1164,)
}

def @func_12526(%var_12523: Tensor[(11, 5, 9), float64]) -> (Tensor[(11, 5, 9), float64],) {
  %1165 = cast(%var_12523, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
  %1166 = sigmoid(%1165) /* ty=Tensor[(11, 5, 9), float64] */;
  (%1166,)
}

def @func_3379(%var_3338: Tensor[(4, 16, 7), float64]) -> (Tensor[(4, 16, 7), float64], Tensor[(4, 16, 7), float32]) {
  %1167 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 7), float64] */;
  %1168 = cast(%var_3338, dtype="uint8") /* ty=Tensor[(4, 16, 7), uint8] */;
  %1169 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(4, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1170 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 16, 7), float64] */, dtype="uint8") /* ty=Tensor[(4, 16, 7), uint8] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1172 = bitwise_and(%1170, %1171) /* ty=Tensor[(4, 16, 7), uint8] */;
  %1173 = cast(%1172, dtype="float32") /* ty=Tensor[(4, 16, 7), float32] */;
  %1174 = asinh(%1167) /* ty=Tensor[(4, 16, 7), float64] */;
  %1175 = acosh(%1173) /* ty=Tensor[(4, 16, 7), float32] */;
  (%1174, %1175)
}

def @func_10829() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) {
  %1176 = @func_9501() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %1177 = @func_10321() /* ty=(Tensor[(2730), float32],) */;
  %1178 = cast(meta[relay.Constant][66] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1179 = @func_4852() /* ty=Tensor[(2730), float32] */;
  %1180 = cast(%1179, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
  %1181 = reshape(%1178, newshape=[]) /* ty=uint8 */;
  %1182 = reshape(%1180, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
  %1183 = @func_1022(%1181, %1182) /* ty=(Tensor[(13, 14, 15), bool],) */;
  %1184 = %1176.0;
  %1185 = %1177.0;
  %1186 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  %1187 = %1183.0;
  %1188 = @func_10447() /* ty=Tensor[(13, 12, 11), float64] */;
  (%1184, %1179, %1185, %1186, %1187, meta[relay.Constant][66] /* ty=uint8 */, %1188)
}

def @func_12340(%var_12335: Tensor[(4, 7, 7), float32]) -> Tensor[(4, 7, 7), float32] {
  %1189 = cast(%var_12335, dtype="float32") /* ty=Tensor[(4, 7, 7), float32] */;
  cos(%1189) /* ty=Tensor[(4, 7, 7), float32] */
}

def @func_13229() -> Tensor[(13, 12, 11), float64] {
  %1190 = @func_5526() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1190.0
}

def @func_7776(%var_7760: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) {
  %1191 = @func_7027() /* ty=Tensor[(13, 12, 11), float64] */;
  %1192 = cast(%var_7760, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %1193 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(%1191, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1196 = @func_7079() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
  %1197 = equal(%1194, %1195) /* ty=Tensor[(13, 12, 11), bool] */;
  %1198 = %1196.1;
  (%1197, %1198)
}

def @func_2538() -> (Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) {
  %1199 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %1200 = %1199.2;
  %1201 = cast(meta[relay.Constant][67] /* ty=Tensor[(286, 6), float64] */, dtype="bool") /* ty=Tensor[(286, 6), bool] */;
  %1202 = shape_of(%1200, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1203 = cast(%1200, dtype="bool") /* ty=Tensor[(286, 6), bool] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1205 = not_equal(%1203, %1204) /* ty=Tensor[(286, 6), bool] */;
  %1206 = cast(meta[relay.Constant][67] /* ty=Tensor[(286, 6), float64] */, dtype="int32") /* ty=Tensor[(286, 6), int32] */;
  %1207 = shape_of(%1205, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1208 = cast(%1205, dtype="int32") /* ty=Tensor[(286, 6), int32] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1210 = cast(meta[relay.Constant][68] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1211 = cast(meta[relay.Constant][69] /* ty=Tensor[(2730), uint8] */, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
  %1212 = reshape(%1210, newshape=[]) /* ty=uint8 */;
  %1213 = reshape(%1211, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
  %1214 = @func_1022(%1212, %1213) /* ty=(Tensor[(13, 14, 15), bool],) */;
  %1215 = multiply(%1208, %1209) /* ty=Tensor[(286, 6), int32] */;
  %1216 = %1214.0;
  (%1215, %1216, meta[relay.Constant][68] /* ty=uint8 */, meta[relay.Constant][69] /* ty=Tensor[(2730), uint8] */)
}

def @func_10704() -> Tensor[(2730), uint8] {
  %1217 = @func_4916() /* ty=(Tensor[(2730), uint8],) */;
  %1217.0
}

def @func_12306(%var_12303: Tensor[(7, 14, 5), float64]) -> (Tensor[(7, 14, 5), float64],) {
  %1218 = cast(%var_12303, dtype="float64") /* ty=Tensor[(7, 14, 5), float64] */;
  %1219 = cos(%1218) /* ty=Tensor[(7, 14, 5), float64] */;
  (%1219,)
}

def @func_8275() -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %1220 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %1221 = @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %1222 = @func_4881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1223 = %1220.0;
  %1224 = %1221.0;
  %1225 = %1222.0;
  (%1223, %1224, %1225)
}

def @func_10565(%var_10516: Tensor[(14, 9, 7), float64]) -> (Tensor[(14, 9, 7), float64], Tensor[(2730), float32], Tensor[(2730), float32]) {
  %1226 = cast(%var_10516, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
  %1227 = @func_10321() /* ty=(Tensor[(2730), float32],) */;
  %1228 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %1229 = atan(%1226) /* ty=Tensor[(14, 9, 7), float64] */;
  %1230 = %1227.0;
  %1231 = %1228.0;
  (%1229, %1230, %1231)
}

def @func_13183() -> (Tensor[(450), int16],) {
  %1232 = @func_12686() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %1233 = %1232.2;
  (%1233,)
}

def @func_10610() -> (Tensor[(2730), float32],) {
  %1234 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%1234,)
}

def @func_8123() -> Tensor[(13, 12, 11), float64] {
  @func_7027() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_9395(%var_9354: Tensor[(4, 16, 12), float64], %var_9376: Tensor[(384), float32]) -> (Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) {
  %1235 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
  %1236 = cast(meta[relay.Constant][70] /* ty=Tensor[(280, 1), float64] */, dtype="float64") /* ty=Tensor[(280, 1), float64] */;
  %1237 = cast(%var_9376, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1238 = reshape(%1236, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1239 = reshape(%1237, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1240 = @func_3711(%1238, %1239) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */;
  %1241 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %1242 = shape_of(%var_9354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1243 = cast(%var_9354, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
  %1244 = dyn.reshape(%1241, %1242, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1245 = mod(%1243, %1244) /* ty=Tensor[(4, 16, 12), float64] */;
  %1246 = cast(%1245, dtype="int8") /* ty=Tensor[(4, 16, 12), int8] */;
  %1247 = shape_of(%var_9354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%var_9354, dtype="int8") /* ty=Tensor[(4, 16, 12), int8] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1250 = %1235.0;
  %1251 = %1240.4;
  %1252 = right_shift(%1248, %1249) /* ty=Tensor[(4, 16, 12), int8] */;
  (%1250, %1251, meta[relay.Constant][70] /* ty=Tensor[(280, 1), float64] */, %var_9376, %1252)
}

def @func_7753() -> Tensor[(13, 12, 11), float32] {
  %1253 = @func_7344() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1254 = %1253.0;
  %1255 = cast(meta[relay.Constant][72] /* ty=Tensor[(13, 12, 11), float64] */, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %1256 = shape_of(%1254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(%1254, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%1257, %1258) /* ty=Tensor[(13, 12, 11), float32] */
}

def @func_4881() -> (Tensor[(13, 12, 11), float64],) {
  %1259 = @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1260 = %1259.0;
  (%1260,)
}

def @func_4852() -> Tensor[(2730), float32] {
  %1261 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %1261.0
}

def @func_3992(%var_3990: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(384), float64], Tensor[(280), float64], Tensor[(384), float32]) {
  %1262 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1263 = cast(meta[relay.Constant][73] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1264 = cast(%var_3990, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1265 = reshape(%1263, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1266 = reshape(%1264, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1267 = @func_3711(%1265, %1266) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */;
  %1268 = %1262.0;
  %1269 = %1267.4;
  (%1268, %1269, meta[relay.Constant][73] /* ty=Tensor[(280), float64] */, %var_3990)
}

def @func_9789(%var_9773: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) {
  %1270 = cast(%var_9773, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %1271 = reshape(%1270, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %1272 = @func_3103(%1271) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) */;
  %1273 = @func_4852() /* ty=Tensor[(2730), float32] */;
  %1274 = %1272.2;
  (%1273, %1274, %var_9773)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10867() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32]) {
  @func_10865() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32]) */
}

def @func_11449() -> (Tensor[(13, 12, 11), float64],) {
  @func_11447() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_9151(%var_9148: Tensor[(3, 126), uint32], %var_9149: Tensor[(280), float64], %var_9150: Tensor[(450), int16]) -> (Tensor[(2730), float32], Tensor[(384), float32], Tensor[(600), float32], float32, Tensor[(3, 126), uint32], Tensor[(280), float64], Tensor[(2730), float32], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  @func_9146(%var_9148, %var_9149, %var_9150) /* ty=(Tensor[(2730), float32], Tensor[(384), float32], Tensor[(600), float32], float32, Tensor[(3, 126), uint32], Tensor[(280), float64], Tensor[(2730), float32], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */
}

def @func_11068(%var_11066: Tensor[(4, 13, 9), int32], %var_11067: Tensor[(4, 13, 9), bool]) -> (Tensor[(4, 13, 9), int64], Tensor[(13, 12, 11), float64], Tensor[(4, 13, 9), int64]) {
  %17 = fn (%var_11033: Tensor[(4, 13, 9), int32], %var_11037: Tensor[(4, 13, 9), bool]) -> (Tensor[(4, 13, 9), int64], Tensor[(13, 12, 11), float64], Tensor[(4, 13, 9), int64]) {
    %0 = cast(%var_11033, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(4, 13, 9), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 13, 9), int32] */, dtype="bool") /* ty=Tensor[(4, 13, 9), bool] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %4 = less(%2, %3) /* ty=Tensor[(4, 13, 9), bool] */;
    %5 = cast(%var_11037, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
    %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
    %7 = cast(%4, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
    %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %9 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %10 = cast(%var_11037, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
    %11 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(4, 13, 9), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 13, 9), int32] */, dtype="int64") /* ty=Tensor[(4, 13, 9), int64] */;
    %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %14 = add(%7, %8) /* ty=Tensor[(4, 13, 9), int64] */;
    %15 = %9.0;
    %16 = multiply(%12, %13) /* ty=Tensor[(4, 13, 9), int64] */;
    (%14, %15, %16)
  };
  %17(%var_11066, %var_11067) /* ty=(Tensor[(4, 13, 9), int64], Tensor[(13, 12, 11), float64], Tensor[(4, 13, 9), int64]) */
}

def @func_3286() -> Tensor[(13, 12, 11), float64] {
  %19 = fn () -> Tensor[(13, 12, 11), float64] {
    %18 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %18.0
  };
  %19() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_12028(%var_12026: uint8) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) {
  @func_12025(%var_12026) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) */
}

def @func_3253() -> Tensor[(2730), float32] {
  @func_3251() /* ty=Tensor[(2730), float32] */
}

def @func_2964() -> Tensor[(2730), float64] {
  %23 = fn () -> Tensor[(2730), float64] {
    %20 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
    %21 = %20.3;
    %22 = cast(%21, dtype="float64") /* ty=Tensor[(2730), float64] */;
    atan(%22) /* ty=Tensor[(2730), float64] */
  };
  %23() /* ty=Tensor[(2730), float64] */
}

def @func_7681() -> (Tensor[(13, 12, 11), float64],) {
  @func_7679() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_7822() -> (Tensor[(450), int16], Tensor[(13, 12, 11), float32]) {
  @func_7820() /* ty=(Tensor[(450), int16], Tensor[(13, 12, 11), float32]) */
}

def @func_12262() -> uint8 {
  %25 = fn () -> uint8 {
    %24 = @func_10829() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) */;
    %24.5
  };
  %25() /* ty=uint8 */
}

def @func_4650(%var_4635: Tensor[(2, 13, 8), float64]) -> Tensor[(2, 13, 8), float64] {
  %26 = cast(%var_4635, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  acos(%26) /* ty=Tensor[(2, 13, 8), float64] */
}

def @func_12773() -> (Tensor[(2730), float32], Tensor[(2730), uint8]) {
  @func_12771() /* ty=(Tensor[(2730), float32], Tensor[(2730), uint8]) */
}

def @func_2904(%var_2903: Tensor[(7, 15, 9), float32]) -> (Tensor[(7, 15, 9), float32], Tensor[(5, 8, 15), float32]) {
  %31 = fn (%var_2889: Tensor[(7, 15, 9), float32]) -> (Tensor[(7, 15, 9), float32], Tensor[(5, 8, 15), float32]) {
    %27 = cast(%var_2889, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
    %28 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
    %29 = cosh(%27) /* ty=Tensor[(7, 15, 9), float32] */;
    %30 = %28.0;
    (%29, %30)
  };
  %31(%var_2903) /* ty=(Tensor[(7, 15, 9), float32], Tensor[(5, 8, 15), float32]) */
}

def @func_13245() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float64]) {
  @func_13243() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float64]) */
}

def @func_3073() -> (Tensor[(13, 12, 11), float64],) {
  %34 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %32 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %33 = %32.0;
    (%33,)
  };
  %34() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_7149(%var_7125: Tensor[(600), float32], %var_7126: float32, %var_7127: Tensor[(378), uint32], %var_7146: Tensor[(280), float64]) -> (Tensor[(2730), float32], float32, Tensor[(600), float32], float32, Tensor[(378), uint32], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(384), float32]) {
  %35 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %36 = cast(%var_7125, dtype="float32") /* ty=Tensor[(600), float32] */;
  %37 = cast(%var_7126, dtype="float32") /* ty=float32 */;
  %38 = cast(%var_7127, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %39 = reshape(%36, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %40 = reshape(%37, newshape=[]) /* ty=float32 */;
  %41 = reshape(%38, newshape=[1, 378]) /* ty=Tensor[(1, 378), uint32] */;
  %42 = @func_6577(%39, %40, %41) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) */;
  %43 = cast(%var_7146, dtype="float64") /* ty=Tensor[(280), float64] */;
  %44 = %42.3;
  %45 = cast(%44, dtype="float32") /* ty=float32 */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %47 = reshape(%43, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %48 = reshape(%45, newshape=[]) /* ty=float32 */;
  %49 = reshape(%46, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %50 = @func_3219(%47, %48, %49) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %51 = %35.0;
  %52 = %50.0;
  (%51, %44, %var_7125, %var_7126, %var_7127, %52, %var_7146, meta[relay.Constant][1] /* ty=Tensor[(384), float32] */)
}

def @func_9567() -> (Tensor[(2730), float32],) {
  %55 = fn () -> (Tensor[(2730), float32],) {
    %53 = @func_9501() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
    %54 = %53.0;
    (%54,)
  };
  %55() /* ty=(Tensor[(2730), float32],) */
}

def @func_10610() -> (Tensor[(2730), float32],) {
  %56 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%56,)
}

def @func_4129(%var_4127: Tensor[(2730), float32]) -> (Tensor[(286, 6), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32]) {
  @func_4126(%var_4127) /* ty=(Tensor[(286, 6), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32]) */
}

def @func_4433() -> Tensor[(6, 3, 16), float32] {
  @func_4431() /* ty=Tensor[(6, 3, 16), float32] */
}

def @func_11615() -> (Tensor[(2730), uint8],) {
  @func_11613() /* ty=(Tensor[(2730), uint8],) */
}

def @func_8555() -> (Tensor[(2730), float32],) {
  @func_8553() /* ty=(Tensor[(2730), float32],) */
}

def @func_8124() -> Tensor[(13, 12, 11), float64] {
  %57 = fn () -> Tensor[(13, 12, 11), float64] {
    @func_7027() /* ty=Tensor[(13, 12, 11), float64] */
  };
  %57() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_4526() -> Tensor[(2730), float32] {
  %58 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %58.0
}

def @func_11929(%var_11926: Tensor[(6, 14, 12), float32], %var_11927: Tensor[(6, 14, 12), float32], %var_11928: Tensor[(1694), float32]) -> (Tensor[(6, 14, 12), float32], Tensor[(224, 2), float64], Tensor[(2730), float32], Tensor[(2, 13, 8), float64], Tensor[(208), float64], Tensor[(1694), int32], Tensor[(13, 12, 11), float64]) {
  @func_11924(%var_11926, %var_11927, %var_11928) /* ty=(Tensor[(6, 14, 12), float32], Tensor[(224, 2), float64], Tensor[(2730), float32], Tensor[(2, 13, 8), float64], Tensor[(208), float64], Tensor[(1694), int32], Tensor[(13, 12, 11), float64]) */
}

def @func_3103(%var_3080: Tensor[(13, 12, 11), float64]) -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) {
  %59 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %60 = %59.0;
  %61 = cast(%var_3080, dtype="uint32") /* ty=Tensor[(13, 12, 11), uint32] */;
  %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%60, dtype="uint32") /* ty=Tensor[(13, 12, 11), uint32] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %65 = cast(%60, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %66 = exp(%65) /* ty=Tensor[(13, 12, 11), float32] */;
  %67 = cast(%60, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %71 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %72 = bitwise_and(%63, %64) /* ty=Tensor[(13, 12, 11), uint32] */;
  %73 = bitwise_xor(%69, %70) /* ty=Tensor[(13, 12, 11), uint16] */;
  (%71, %72, %73)
}

def @func_13231() -> Tensor[(13, 12, 11), float64] {
  @func_13229() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_10168() -> (Tensor[(6, 3, 16), float32], Tensor[(2730), float32]) {
  %74 = @func_4617() /* ty=(Tensor[(6, 3, 16), float32],) */;
  %75 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %76 = %74.0;
  %77 = %75.0;
  (%76, %77)
}

def @func_9792(%var_9790: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) {
  @func_9789(%var_9790) /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */
}

def @func_4767(%var_4766: float32) -> (Tensor[(6, 3, 16), float32], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32], Tensor[(13, 12, 11), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  %92 = fn (%var_4733: float32) -> (Tensor[(6, 3, 16), float32], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32], Tensor[(13, 12, 11), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
    %78 = cast(%var_4733, dtype="float32") /* ty=float32 */;
    %79 = cast(meta[relay.Constant][2] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %80 = reshape(%78, newshape=[]) /* ty=float32 */;
    %81 = reshape(%79, newshape=[8, 12, 4]) /* ty=Tensor[(8, 12, 4), float32] */;
    %82 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %83 = %82.0;
    %84 = cast(%83, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
    %85 = cast(meta[relay.Constant][3] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %86 = reshape(%85, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
    %87 = @func_147(%86) /* ty=(Tensor[(4, 8, 14), float64],) */;
    %88 = @func_4431() /* ty=Tensor[(6, 3, 16), float32] */;
    %89 = @func_1173(%80, %81) /* ty=Tensor[(8, 12, 4), float32] */;
    %90 = tan(%84) /* ty=Tensor[(13, 12, 11), float32] */;
    %91 = %87.0;
    (%88, %89, %var_4733, meta[relay.Constant][2] /* ty=Tensor[(384), float32] */, %90, %91, meta[relay.Constant][3] /* ty=Tensor[(448), float64] */)
  };
  %92(%var_4766) /* ty=(Tensor[(6, 3, 16), float32], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32], Tensor[(13, 12, 11), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) */
}

def @func_11232() -> (Tensor[(2730), float32],) {
  %93 = @func_7721() /* ty=Tensor[(2730), float32] */;
  (%93,)
}

def @func_9348() -> (Tensor[(13, 12, 11), float32],) {
  %94 = @func_8252() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %95 = %94.0;
  (%95,)
}

def @func_5668(%var_5665: Tensor[(11, 14, 11), float32], %var_5666: Tensor[(11, 14, 11), float32], %var_5667: Tensor[(11, 14, 11), float32]) -> (Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) {
  %106 = fn (%var_5637: Tensor[(11, 14, 11), float32], %var_5638: Tensor[(11, 14, 11), float32], %var_5652: Tensor[(11, 14, 11), float32]) -> (Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) {
    %96 = cast(%var_5638, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
    %97 = shape_of(%var_5637, dtype="int32") /* ty=Tensor[(3), int32] */;
    %98 = cast(%var_5637, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
    %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %100 = cast(%var_5652, dtype="int64") /* ty=Tensor[(11, 14, 11), int64] */;
    %101 = shape_of(%var_5638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%var_5638, dtype="int64") /* ty=Tensor[(11, 14, 11), int64] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %104 = mod(%98, %99) /* ty=Tensor[(11, 14, 11), float32] */;
    %105 = add(%102, %103) /* ty=Tensor[(11, 14, 11), int64] */;
    (%104, %105)
  };
  %106(%var_5665, %var_5666, %var_5667) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */
}

def @func_5850(%var_5847: uint64, %var_5848: Tensor[(13, 6, 12), uint64], %var_5849: Tensor[(121, 14), float32]) -> (Tensor[(13, 6, 12), uint64], Tensor[(2730), float32], Tensor[(13, 6, 12), float32], Tensor[(11, 14, 11), float32], Tensor[(121, 14), float32]) {
  %121 = fn (%var_5807: uint64, %var_5808: Tensor[(13, 6, 12), uint64], %var_5840: Tensor[(121, 14), float32]) -> (Tensor[(13, 6, 12), uint64], Tensor[(2730), float32], Tensor[(13, 6, 12), float32], Tensor[(11, 14, 11), float32], Tensor[(121, 14), float32]) {
    %107 = cast(%var_5807, dtype="uint64") /* ty=uint64 */;
    %108 = cast(%var_5808, dtype="uint64") /* ty=Tensor[(13, 6, 12), uint64] */;
    %109 = cast(%var_5808, dtype="float32") /* ty=Tensor[(13, 6, 12), float32] */;
    %110 = cast(%var_5840, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
    %111 = cast(%var_5840, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
    %112 = cast(%var_5840, dtype="float32") /* ty=Tensor[(121, 14), float32] */;
    %113 = reshape(%110, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
    %114 = reshape(%111, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
    %115 = reshape(%112, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
    %116 = @func_5664(%113, %114, %115) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
    %117 = left_shift(%107, %108) /* ty=Tensor[(13, 6, 12), uint64] */;
    %118 = @func_3251() /* ty=Tensor[(2730), float32] */;
    %119 = sinh(%109) /* ty=Tensor[(13, 6, 12), float32] */;
    %120 = %116.0;
    (%117, %118, %119, %120, %var_5840)
  };
  %121(%var_5847, %var_5848, %var_5849) /* ty=(Tensor[(13, 6, 12), uint64], Tensor[(2730), float32], Tensor[(13, 6, 12), float32], Tensor[(11, 14, 11), float32], Tensor[(121, 14), float32]) */
}

def @func_3113() -> Tensor[(13, 12, 11), float64] {
  @func_2931() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_6469(%var_6443: Tensor[(1694), float32]) -> (Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) {
  %122 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %123 = cast(%var_6443, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %124 = cast(%var_6443, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %125 = cast(%var_6443, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %126 = reshape(%123, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %127 = reshape(%124, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %128 = reshape(%125, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %129 = @func_5664(%126, %127, %128) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
  %130 = %122.0;
  %131 = %129.0;
  (%130, %131, %var_6443)
}

def @func_6731(%var_6729: Tensor[(280), float64]) -> (Tensor[(9, 3, 14), uint32], float32, Tensor[(280), float64], Tensor[(1, 384), float32], Tensor[(11, 5, 8), bool], Tensor[(2, 300), bool]) {
  @func_6728(%var_6729) /* ty=(Tensor[(9, 3, 14), uint32], float32, Tensor[(280), float64], Tensor[(1, 384), float32], Tensor[(11, 5, 8), bool], Tensor[(2, 300), bool]) */
}

def @func_8596() -> (Tensor[(13, 12, 11), float32],) {
  %132 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %133 = cast(%132, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %134 = acos(%133) /* ty=Tensor[(13, 12, 11), float32] */;
  (%134,)
}

def @func_3670() -> Tensor[(13, 12, 11), float32] {
  %135 = @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %136 = %135.0;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  cosh(%137) /* ty=Tensor[(13, 12, 11), float32] */
}

def @func_9104(%var_9067: Tensor[(15, 1, 1), float32], %var_9068: Tensor[(15, 1, 3), float32], %var_9100: Tensor[(5, 189), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(15, 1, 3), int64], Tensor[(15, 63), float32], Tensor[(5, 189), float32]) {
  %138 = cast(%var_9067, dtype="float32") /* ty=Tensor[(15, 1, 1), float32] */;
  %139 = cast(%var_9068, dtype="float32") /* ty=Tensor[(15, 1, 3), float32] */;
  %140 = floor_mod(%138, %139) /* ty=Tensor[(15, 1, 3), float32] */;
  %141 = cast(%140, dtype="int64") /* ty=Tensor[(15, 1, 3), int64] */;
  %142 = cast(%var_9067, dtype="int64") /* ty=Tensor[(15, 1, 1), int64] */;
  %143 = cast(%var_9100, dtype="float32") /* ty=Tensor[(5, 189), float32] */;
  %144 = reshape(%143, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %145 = @func_3497(%144) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */;
  %146 = @func_8048() /* ty=Tensor[(13, 12, 11), float64] */;
  %147 = maximum(%141, %142) /* ty=Tensor[(15, 1, 3), int64] */;
  %148 = %145.2;
  (%146, %147, %148, %var_9100)
}

def @func_9146(%var_9123: Tensor[(3, 126), uint32], %var_9124: Tensor[(280), float64], %var_9144: Tensor[(450), int16]) -> (Tensor[(2730), float32], Tensor[(384), float32], Tensor[(600), float32], float32, Tensor[(3, 126), uint32], Tensor[(280), float64], Tensor[(2730), float32], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  %149 = cast(meta[relay.Constant][4] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %150 = cast(-7.76883f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %151 = cast(%var_9123, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %152 = cast(%var_9124, dtype="float64") /* ty=Tensor[(280), float64] */;
  %153 = reshape(%149, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %154 = reshape(%150, newshape=[]) /* ty=float32 */;
  %155 = reshape(%151, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %156 = reshape(%152, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %157 = @func_7149(%153, %154, %155, %156) /* ty=(Tensor[(2730), float32], float32, Tensor[(600), float32], float32, Tensor[(378), uint32], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(384), float32]) */;
  %158 = cast(%var_9144, dtype="int16") /* ty=Tensor[(450), int16] */;
  %159 = reshape(%158, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %160 = @func_8079() /* ty=Tensor[(2730), float32] */;
  %161 = %157.7;
  %162 = @func_6821() /* ty=Tensor[(2730), float32] */;
  %163 = @func_3777(%159) /* ty=Tensor[(15, 10, 3), bool] */;
  (%160, %161, meta[relay.Constant][4] /* ty=Tensor[(600), float32] */, -7.76883f /* ty=float32 */, %var_9123, %var_9124, %162, %163, %var_9144)
}

def @func_6472(%var_6470: Tensor[(1694), float32]) -> (Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) {
  @func_6469(%var_6470) /* ty=(Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) */
}

def @func_13128() -> (Tensor[(2730), float32], Tensor[(2730), float64]) {
  %164 = @func_9983() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */;
  %165 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %166 = %164.0;
  (%165, %166)
}

def @func_5983(%var_5979: Tensor[(14, 14, 11), uint8], %var_5980: Tensor[(14, 14, 11), uint8], %var_5981: Tensor[(14, 14, 11), uint8], %var_5982: Tensor[(945), float32]) -> (Tensor[(448), float64], Tensor[(14, 14, 11), uint64], Tensor[(14, 14, 11), uint64], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) {
  @func_5977(%var_5979, %var_5980, %var_5981, %var_5982) /* ty=(Tensor[(448), float64], Tensor[(14, 14, 11), uint64], Tensor[(14, 14, 11), uint64], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) */
}

def @func_6015() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) {
  %167 = @func_5601() /* ty=(Tensor[(2730), float32],) */;
  %168 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %169 = %167.0;
  %170 = %168.1;
  %171 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%169, %170, %171)
}

def @func_5570() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) {
  @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */
}

def @func_12688() -> (Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  @func_12686() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */
}

def @func_13183() -> (Tensor[(450), int16],) {
  %172 = @func_12686() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %173 = %172.2;
  (%173,)
}

def @func_8007() -> (Tensor[(2730), uint8], Tensor[(2730), float32]) {
  %174 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %175 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%174, %175)
}

def @func_5499(%var_5497: Tensor[(3, 126), uint32]) -> (Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(9, 3, 14), uint32], Tensor[(3, 126), uint32], Tensor[(15, 10, 3), bool], Tensor[(5, 90), int16]) {
  @func_5496(%var_5497) /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(9, 3, 14), uint32], Tensor[(3, 126), uint32], Tensor[(15, 10, 3), bool], Tensor[(5, 90), int16]) */
}

def @func_7905(%var_7904: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) {
  %193 = fn (%var_7871: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) {
    %176 = cast(%var_7871, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %177 = reshape(%176, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %178 = @func_7776(%177) /* ty=(Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) */;
    %179 = cast(meta[relay.Constant][5] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %180 = reshape(%179, newshape=[1694]) /* ty=Tensor[(1694), float32] */;
    %181 = @func_6469(%180) /* ty=(Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) */;
    %182 = cast(meta[relay.Constant][5] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %183 = erf(%182) /* ty=Tensor[(1694), float32] */;
    %184 = cast(meta[relay.Constant][6] /* ty=Tensor[(1694), float32] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(1), int32] */;
    %186 = cast(%183, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?), float64] */;
    %188 = @func_7721() /* ty=Tensor[(2730), float32] */;
    %189 = %178.1;
    %190 = %181.0;
    %191 = @func_3251() /* ty=Tensor[(2730), float32] */;
    %192 = maximum(%186, %187) /* ty=Tensor[(1694), float64] */;
    (%188, %189, %var_7871, %190, %191, %192)
  };
  %193(%var_7904) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) */
}

def @func_4069() -> (Tensor[(13, 12, 11), float64],) {
  %194 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %197 = log10(%196) /* ty=Tensor[(13, 12, 11), float64] */;
  (%197,)
}

def @func_6694() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */
}

def @func_5145() -> (Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) {
  @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */
}

def @func_13083(%var_13081: Tensor[(1716), float64], %var_13082: Tensor[(1694), float32]) -> (Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(448), float64], Tensor[(1716), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32], Tensor[(286, 6), int32], float32, Tensor[(280), float64], Tensor[(384), float32], Tensor[(11, 154), float32], Tensor[(1694), float32]) {
  %228 = fn (%var_13044: Tensor[(1716), float64], %var_13078: Tensor[(1694), float32]) -> (Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(448), float64], Tensor[(1716), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32], Tensor[(286, 6), int32], float32, Tensor[(280), float64], Tensor[(384), float32], Tensor[(11, 154), float32], Tensor[(1694), float32]) {
    %198 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
    %199 = cast(meta[relay.Constant][7] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %200 = cast(%var_13044, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %201 = reshape(%199, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
    %202 = reshape(%200, newshape=[286, 6]) /* ty=Tensor[(286, 6), float64] */;
    %203 = @func_9652(%201, %202) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint8], Tensor[(286, 6), float64], Tensor[(1694), float32], Tensor[(4, 112), bool], Tensor[(1716), float64], Tensor[(13, 12, 11), float64]) */;
    %204 = cast(meta[relay.Constant][8] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %205 = cast(meta[relay.Constant][8] /* ty=Tensor[(450), float32] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %206 = reshape(%204, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float32] */;
    %207 = reshape(%205, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float64] */;
    %208 = @func_9308(%206, %207) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) */;
    %209 = @func_8990() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(286, 6), int32], Tensor[(2730), int8]) */;
    %210 = cast(meta[relay.Constant][9] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %211 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %212 = reshape(%210, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %213 = reshape(%211, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %214 = @func_3711(%212, %213) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */;
    %215 = cast(meta[relay.Constant][7] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %216 = cast(%var_13044, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %217 = cast(%var_13078, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %218 = reshape(%215, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %219 = reshape(%216, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %220 = reshape(%217, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
    %221 = @func_7641(%218, %219, %220) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
    %222 = %198.1;
    %223 = %203.0;
    %224 = %208.1;
    %225 = %209.1;
    %226 = %214.2;
    %227 = %221.4;
    (%222, %223, meta[relay.Constant][7] /* ty=Tensor[(448), float64] */, %var_13044, %224, meta[relay.Constant][8] /* ty=Tensor[(450), float32] */, %225, %226, meta[relay.Constant][9] /* ty=Tensor[(280), float64] */, meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, %227, %var_13078)
  };
  %228(%var_13081, %var_13082) /* ty=(Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(448), float64], Tensor[(1716), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32], Tensor[(286, 6), int32], float32, Tensor[(280), float64], Tensor[(384), float32], Tensor[(11, 154), float32], Tensor[(1694), float32]) */
}

def @func_9652(%var_9624: Tensor[(4, 112), float64], %var_9625: Tensor[(286, 6), float64]) -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), uint8], Tensor[(286, 6), float64], Tensor[(1694), float32], Tensor[(4, 112), bool], Tensor[(1716), float64], Tensor[(13, 12, 11), float64]) {
  %229 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %230 = cast(%var_9624, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %231 = cast(%var_9625, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
  %232 = cast(meta[relay.Constant][11] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %233 = reshape(%230, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %234 = reshape(%231, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %235 = reshape(%232, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
  %236 = @func_7641(%233, %234, %235) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
  %237 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 112), float64] */, dtype="bool") /* ty=Tensor[(4, 112), bool] */;
  %238 = shape_of(%var_9624, dtype="int32") /* ty=Tensor[(2), int32] */;
  %239 = cast(%var_9624, dtype="bool") /* ty=Tensor[(4, 112), bool] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %241 = @func_8665() /* ty=(Tensor[(1716), float64],) */;
  %242 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %243 = %229.0;
  %244 = %236.2;
  %245 = less(%239, %240) /* ty=Tensor[(4, 112), bool] */;
  %246 = %241.0;
  %247 = %242.0;
  (%243, %244, %var_9625, meta[relay.Constant][11] /* ty=Tensor[(1694), float32] */, %245, %246, %247)
}

def @func_3047() -> (Tensor[(2730), float32],) {
  @func_3045() /* ty=(Tensor[(2730), float32],) */
}

def @func_3932() -> (Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) {
  %254 = fn () -> (Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) {
    %248 = @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %249 = cast(meta[relay.Constant][13] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %250 = reshape(%249, newshape=[4, 16, 7]) /* ty=Tensor[(4, 16, 7), float64] */;
    %251 = @func_3379(%250) /* ty=(Tensor[(4, 16, 7), float64], Tensor[(4, 16, 7), float32]) */;
    %252 = %248.0;
    %253 = %251.1;
    (%252, %253, meta[relay.Constant][13] /* ty=Tensor[(448), float64] */)
  };
  %254() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */
}

def @func_6823() -> Tensor[(2730), float32] {
  @func_6821() /* ty=Tensor[(2730), float32] */
}

def @func_13383() -> (Tensor[(13, 12, 11), float64],) {
  %255 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %256 = %255.0;
  (%256,)
}

def @func_10170() -> (Tensor[(6, 3, 16), float32], Tensor[(2730), float32]) {
  @func_10168() /* ty=(Tensor[(6, 3, 16), float32], Tensor[(2730), float32]) */
}

def @func_11217() -> (Tensor[(450), int16], Tensor[(378), uint32], Tensor[(378), float64]) {
  @func_11215() /* ty=(Tensor[(450), int16], Tensor[(378), uint32], Tensor[(378), float64]) */
}

def @func_6728(%var_6706: Tensor[(280), float64]) -> (Tensor[(9, 3, 14), uint32], float32, Tensor[(280), float64], Tensor[(1, 384), float32], Tensor[(11, 5, 8), bool], Tensor[(2, 300), bool]) {
  %257 = @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */;
  %258 = cast(%var_6706, dtype="float64") /* ty=Tensor[(280), float64] */;
  %259 = cast(-7.26646f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %260 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 384), float32] */, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %261 = reshape(%258, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %262 = reshape(%259, newshape=[]) /* ty=float32 */;
  %263 = reshape(%260, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %264 = @func_3219(%261, %262, %263) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
  %265 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 300), float32] */, dtype="float32") /* ty=Tensor[(2, 300), float32] */;
  %266 = cast(-7.26646f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %267 = %257.1;
  %268 = cast(%267, dtype="uint32") /* ty=Tensor[(9, 3, 14), uint32] */;
  %269 = reshape(%265, newshape=[600]) /* ty=Tensor[(600), float32] */;
  %270 = reshape(%266, newshape=[]) /* ty=float32 */;
  %271 = reshape(%268, newshape=[1, 378]) /* ty=Tensor[(1, 378), uint32] */;
  %272 = @func_6577(%269, %270, %271) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) */;
  %273 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 300), float32] */, dtype="bool") /* ty=Tensor[(2, 300), bool] */;
  %274 = cast(-7.26646f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %275 = %264.2;
  %276 = %272.0;
  %277 = greater_equal(%273, %274) /* ty=Tensor[(2, 300), bool] */;
  (%267, %275, %var_6706, meta[relay.Constant][14] /* ty=Tensor[(1, 384), float32] */, %276, %277)
}

def @func_7723() -> Tensor[(2730), float32] {
  @func_7721() /* ty=Tensor[(2730), float32] */
}

def @func_8275() -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %278 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %279 = @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %280 = @func_4881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %281 = %278.0;
  %282 = %279.0;
  %283 = %280.0;
  (%281, %282, %283)
}

def @func_12882(%var_12880: Tensor[(15, 7, 8), int8], %var_12881: uint8) -> (Tensor[(15, 7, 8), int8], uint8, uint8, Tensor[(15, 7, 8), float32]) {
  %295 = fn (%var_12861: Tensor[(15, 7, 8), int8], %var_12871: uint8) -> (Tensor[(15, 7, 8), int8], uint8, uint8, Tensor[(15, 7, 8), float32]) {
    %284 = cast(%var_12861, dtype="int8") /* ty=Tensor[(15, 7, 8), int8] */;
    %285 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(15, 7, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 7, 8), int8] */, dtype="int8") /* ty=Tensor[(15, 7, 8), int8] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %288 = cast(%var_12871, dtype="uint8") /* ty=uint8 */;
    %289 = reshape(%288, newshape=[]) /* ty=uint8 */;
    %290 = @func_12454(%289) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(2730), float32], uint8, Tensor[(13, 12, 11), float64], Tensor[(378), uint32], Tensor[(1, 450), int16], Tensor[(13, 12, 11), float32]) */;
    %291 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 7, 8), int8] */, dtype="float32") /* ty=Tensor[(15, 7, 8), float32] */;
    %292 = logical_xor(%286, %287) /* ty=Tensor[(15, 7, 8), int8] */;
    %293 = %290.3;
    %294 = cosh(%291) /* ty=Tensor[(15, 7, 8), float32] */;
    (%292, %293, %var_12871, %294)
  };
  %295(%var_12880, %var_12881) /* ty=(Tensor[(15, 7, 8), int8], uint8, uint8, Tensor[(15, 7, 8), float32]) */
}

def @func_10448() -> Tensor[(13, 12, 11), float64] {
  %297 = fn () -> Tensor[(13, 12, 11), float64] {
    %296 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
    %296.0
  };
  %297() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_7545() -> (Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */
}

def @func_12852() -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), uint8]) {
  %304 = fn () -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), uint8]) {
    %298 = @func_9029() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %299 = @func_3558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
    %300 = @func_11949() /* ty=Tensor[(2730), uint8] */;
    %301 = %298.0;
    %302 = %299.0;
    %303 = @func_12518() /* ty=Tensor[(2730), uint8] */;
    (%300, %301, %302, %303)
  };
  %304() /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), uint8]) */
}

def @func_8458(%var_8456: Tensor[(378), uint32], %var_8457: Tensor[(2156), uint8]) -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(448), float64], Tensor[(2156), uint8], Tensor[(105, 9), float32], Tensor[(3, 126), int64]) {
  @func_8454(%var_8456, %var_8457) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(448), float64], Tensor[(2156), uint8], Tensor[(105, 9), float32], Tensor[(3, 126), int64]) */
}

def @func_7646(%var_7643: Tensor[(448), float64], %var_7644: Tensor[(13, 12, 11), float64], %var_7645: Tensor[(11, 154), float32]) -> (Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) {
  @func_7641(%var_7643, %var_7644, %var_7645) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */
}

def @func_10264() -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) {
  %305 = @func_8596() /* ty=(Tensor[(13, 12, 11), float32],) */;
  %306 = @func_8374() /* ty=(Tensor[(378), uint32],) */;
  %307 = @func_6998() /* ty=Tensor[(13, 12, 11), float64] */;
  %308 = cast(%307, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %309 = reshape(%308, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %310 = @func_7903(%309) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) */;
  %311 = %305.0;
  %312 = %306.0;
  %313 = %310.4;
  (%307, %311, %312, %313)
}

def @func_7641(%var_7586: Tensor[(448), float64], %var_7601: Tensor[(13, 12, 11), float64], %var_7617: Tensor[(11, 154), float32]) -> (Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) {
  %314 = cast(%var_7586, dtype="float64") /* ty=Tensor[(448), float64] */;
  %315 = reshape(%314, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %316 = @func_147(%315) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %317 = @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %318 = %317.1;
  %319 = cast(%var_7601, dtype="uint8") /* ty=Tensor[(13, 12, 11), uint8] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%318, dtype="uint8") /* ty=Tensor[(13, 12, 11), uint8] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %323 = cast(%var_7617, dtype="float32") /* ty=Tensor[(11, 154), float32] */;
  %324 = reshape(%323, newshape=[1694]) /* ty=Tensor[(1694), float32] */;
  %325 = @func_6469(%324) /* ty=(Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32]) */;
  %326 = %325.2;
  %327 = cast(%326, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %328 = %316.0;
  %329 = logical_xor(%321, %322) /* ty=Tensor[(13, 12, 11), uint8] */;
  %330 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %331 = acosh(%327) /* ty=Tensor[(1694), float32] */;
  (%328, %var_7586, %329, %330, %var_7617, %331)
}

def @func_9503() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  @func_9501() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_1173(%var_1160: float32, %var_1161: Tensor[(8, 12, 4), float32]) -> Tensor[(8, 12, 4), float32] {
  %332 = cast(%var_1160, dtype="float32") /* ty=float32 */;
  %333 = cast(%var_1161, dtype="float32") /* ty=Tensor[(8, 12, 4), float32] */;
  mod(%332, %333) /* ty=Tensor[(8, 12, 4), float32] */
}

def @func_6663(%var_6631: Tensor[(450, 1), int16]) -> (Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) {
  %334 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %335 = cast(%var_6631, dtype="int16") /* ty=Tensor[(450, 1), int16] */;
  %336 = reshape(%335, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %337 = @func_4970() /* ty=(Tensor[(2730), float32],) */;
  %338 = %334.0;
  %339 = @func_3777(%336) /* ty=Tensor[(15, 10, 3), bool] */;
  %340 = %337.0;
  %341 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %342 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  %343 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %344 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  (%338, %339, %var_6631, %340, %341, %342, %343, %344)
}

def @func_3413() -> (Tensor[(2730), float32],) {
  @func_3411() /* ty=(Tensor[(2730), float32],) */
}

def @func_5624() -> (Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %345 = @func_4881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %346 = cast(meta[relay.Constant][17] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %347 = cast(meta[relay.Constant][17] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %348 = reshape(%346, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %349 = reshape(%347, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %350 = @func_917(%348, %349) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %351 = %345.0;
  %352 = %350.0;
  (%351, %352, meta[relay.Constant][17] /* ty=Tensor[(378), uint32] */)
}

def @func_11950() -> Tensor[(2730), uint8] {
  %354 = fn () -> Tensor[(2730), uint8] {
    %353 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
    %353.3
  };
  %354() /* ty=Tensor[(2730), uint8] */
}

def @func_2606(%var_2604: float32, %var_2605: Tensor[(384), float32]) -> (Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) {
  @func_2602(%var_2604, %var_2605) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */
}

def @func_3606() -> (Tensor[(13, 12, 11), float64],) {
  @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_12454(%var_12412: uint8) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(2730), float32], uint8, Tensor[(13, 12, 11), float64], Tensor[(378), uint32], Tensor[(1, 450), int16], Tensor[(13, 12, 11), float32]) {
  %355 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %356 = cast(%var_12412, dtype="uint8") /* ty=uint8 */;
  %357 = reshape(%356, newshape=[]) /* ty=uint8 */;
  %358 = @func_12025(%357) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) */;
  %359 = @func_3931() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */;
  %360 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 450), int16] */, dtype="int16") /* ty=Tensor[(1, 450), int16] */;
  %361 = reshape(%360, newshape=[50, 9]) /* ty=Tensor[(50, 9), int16] */;
  %362 = @func_10343(%361) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(50, 9), int16], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %363 = @func_8596() /* ty=(Tensor[(13, 12, 11), float32],) */;
  %364 = %355.0;
  %365 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %366 = %358.1;
  %367 = %359.0;
  %368 = %362.4;
  %369 = %363.0;
  (%364, %365, %366, %var_12412, %367, %368, meta[relay.Constant][18] /* ty=Tensor[(1, 450), int16] */, %369)
}

def @func_1025(%var_1023: uint8, %var_1024: Tensor[(13, 14, 15), uint8]) -> (Tensor[(13, 14, 15), bool],) {
  %373 = fn (%var_1011: uint8, %var_1012: Tensor[(13, 14, 15), uint8]) -> (Tensor[(13, 14, 15), bool],) {
    %370 = cast(%var_1011, dtype="bool") /* ty=bool */;
    %371 = cast(%var_1012, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %372 = equal(%370, %371) /* ty=Tensor[(13, 14, 15), bool] */;
    (%372,)
  };
  %373(%var_1023, %var_1024) /* ty=(Tensor[(13, 14, 15), bool],) */
}

def @func_7345() -> (Tensor[(13, 12, 11), float64],) {
  %376 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %374 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %375 = %374.0;
    (%375,)
  };
  %376() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_3223(%var_3220: Tensor[(2, 14, 10), float64], %var_3221: float32, %var_3222: Tensor[(384), float32]) -> (Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) {
  %384 = fn (%var_3194: Tensor[(2, 14, 10), float64], %var_3202: float32, %var_3203: Tensor[(384), float32]) -> (Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) {
    %377 = cast(%var_3194, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
    %378 = cast(%var_3202, dtype="float32") /* ty=float32 */;
    %379 = cast(%var_3203, dtype="float32") /* ty=Tensor[(384), float32] */;
    %380 = reshape(%378, newshape=[]) /* ty=float32 */;
    %381 = reshape(%379, newshape=[8, 12, 4]) /* ty=Tensor[(8, 12, 4), float32] */;
    %382 = cos(%377) /* ty=Tensor[(2, 14, 10), float64] */;
    %383 = @func_1173(%380, %381) /* ty=Tensor[(8, 12, 4), float32] */;
    (%382, %383, %var_3202, %var_3203)
  };
  %384(%var_3220, %var_3221, %var_3222) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */
}

def @func_5685(%var_5672: Tensor[(10, 2, 14), int32]) -> (Tensor[(10, 2, 14), int32], Tensor[(1716), float64]) {
  %385 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 2, 14), int32] */, dtype="int32") /* ty=Tensor[(10, 2, 14), int32] */;
  %386 = shape_of(%var_5672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_5672, dtype="int32") /* ty=Tensor[(10, 2, 14), int32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %389 = @func_5353() /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) */;
  %390 = left_shift(%387, %388) /* ty=Tensor[(10, 2, 14), int32] */;
  %391 = %389.2;
  (%390, %391)
}

def @func_11363(%var_11361: Tensor[(13, 12, 11), float32]) -> (Tensor[(13, 12, 11), uint16], Tensor[(15, 10, 3), bool], Tensor[(450), int16], Tensor[(13, 12, 11), float32], Tensor[(13, 12, 11), float64]) {
  @func_11360(%var_11361) /* ty=(Tensor[(13, 12, 11), uint16], Tensor[(15, 10, 3), bool], Tensor[(450), int16], Tensor[(13, 12, 11), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_4617() -> (Tensor[(6, 3, 16), float32],) {
  %392 = @func_4431() /* ty=Tensor[(6, 3, 16), float32] */;
  (%392,)
}

def @func_3411() -> (Tensor[(2730), float32],) {
  %393 = @func_3251() /* ty=Tensor[(2730), float32] */;
  (%393,)
}

def @func_6327(%var_6326: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), bool]) {
  %407 = fn (%var_6300: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), bool]) {
    %394 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %395 = @func_5353() /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) */;
    %396 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
    %397 = @func_4399() /* ty=Tensor[(13, 12, 11), float64] */;
    %398 = cast(%var_6300, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
    %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
    %400 = cast(%397, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %402 = %394.0;
    %403 = %395.2;
    %404 = %396.0;
    %405 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
    %406 = logical_and(%400, %401) /* ty=Tensor[(13, 12, 11), bool] */;
    (%402, %403, %404, %405, %406)
  };
  %407(%var_6326) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), bool]) */
}

def @func_8901(%var_8888: Tensor[(448), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(1694), float32], Tensor[(448), float64], Tensor[(1694), float32]) {
  %408 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %409 = cast(%var_8888, dtype="float64") /* ty=Tensor[(448), float64] */;
  %410 = @func_8048() /* ty=Tensor[(13, 12, 11), float64] */;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %412 = cast(meta[relay.Constant][20] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %413 = reshape(%409, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %414 = reshape(%411, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %415 = reshape(%412, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
  %416 = @func_7641(%413, %414, %415) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
  %417 = %408.0;
  %418 = %416.5;
  (%417, %410, %418, %var_8888, meta[relay.Constant][20] /* ty=Tensor[(1694), float32] */)
}

def @func_10409() -> Tensor[(13, 12, 11), float64] {
  %419 = fn () -> Tensor[(13, 12, 11), float64] {
    @func_3113() /* ty=Tensor[(13, 12, 11), float64] */
  };
  %419() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_13540(%var_13539: uint8) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) {
  %430 = fn (%var_13530: uint8) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) {
    %420 = @func_7344() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %421 = @func_12771() /* ty=(Tensor[(2730), float32], Tensor[(2730), uint8]) */;
    %422 = cast(%var_13530, dtype="uint8") /* ty=uint8 */;
    %423 = %421.0;
    %424 = cast(%423, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
    %425 = reshape(%422, newshape=[]) /* ty=uint8 */;
    %426 = reshape(%424, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
    %427 = @func_1022(%425, %426) /* ty=(Tensor[(13, 14, 15), bool],) */;
    %428 = %420.0;
    %429 = %427.0;
    (%428, %423, %429, %var_13530)
  };
  %430(%var_13539) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) */
}

def @func_6176() -> (Tensor[(2730), float32],) {
  %434 = fn () -> (Tensor[(2730), float32],) {
    %431 = @func_2963() /* ty=Tensor[(2730), float64] */;
    %432 = cast(%431, dtype="float32") /* ty=Tensor[(2730), float32] */;
    %433 = sqrt(%432) /* ty=Tensor[(2730), float32] */;
    (%433,)
  };
  %434() /* ty=(Tensor[(2730), float32],) */
}

def @func_10706() -> Tensor[(2730), uint8] {
  @func_10704() /* ty=Tensor[(2730), uint8] */
}

def @func_5353() -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) {
  %435 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %436 = cast(meta[relay.Constant][21] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %437 = reshape(%436, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %438 = @func_1006(%437) /* ty=(Tensor[(13, 12, 11), float64],) */;
  %439 = %435.0;
  %440 = %438.0;
  (%439, %440, meta[relay.Constant][21] /* ty=Tensor[(1716), float64] */)
}

def @func_13853() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  %451 = fn () -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
    %441 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
    %442 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %443 = %442.0;
    %444 = cast(%443, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
    %445 = sinh(%444) /* ty=Tensor[(13, 12, 11), float64] */;
    %446 = cast(%445, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
    %447 = reshape(%446, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %448 = @func_1006(%447) /* ty=(Tensor[(13, 12, 11), float64],) */;
    %449 = %441.0;
    %450 = %448.0;
    (%449, %445, %450)
  };
  %451() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */
}

def @func_10704() -> Tensor[(2730), uint8] {
  %452 = @func_4916() /* ty=(Tensor[(2730), uint8],) */;
  %452.0
}

def @func_13185() -> (Tensor[(450), int16],) {
  @func_13183() /* ty=(Tensor[(450), int16],) */
}

def @main(%var_13886: Tensor[(1, 15, 10), float32]) -> (Tensor[(1, 15, 10), float32],) {
  %453 = cast(%var_13886, dtype="float32") /* ty=Tensor[(1, 15, 10), float32] */;
  %454 = erf(%453) /* ty=Tensor[(1, 15, 10), float32] */;
  (%454,)
}

def @func_9789(%var_9773: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) {
  %455 = cast(%var_9773, dtype="float64") /* ty=Tensor[(1716), float64] */;
  %456 = reshape(%455, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
  %457 = @func_3103(%456) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) */;
  %458 = @func_4852() /* ty=Tensor[(2730), float32] */;
  %459 = %457.2;
  (%458, %459, %var_9773)
}

def @func_8753(%var_8690: Tensor[(12, 32), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], float32, Tensor[(140, 2), float64], float32, Tensor[(12, 32), float32], Tensor[(13, 12, 11), float64], Tensor[(6, 3, 16), float64]) {
  %460 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
  %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(140, 2), float64] */, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %462 = cast(-6.61591f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %463 = cast(%var_8690, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %464 = reshape(%461, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %465 = reshape(%462, newshape=[]) /* ty=float32 */;
  %466 = reshape(%463, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %467 = @func_4212(%464, %465, %466) /* ty=(Tensor[(286, 6), int32], Tensor[(8, 12, 4), float32], Tensor[(280), float64], float32, Tensor[(384), float32]) */;
  %468 = @func_4617() /* ty=(Tensor[(6, 3, 16), float32],) */;
  %469 = %468.0;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  %471 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  %472 = %460.0;
  %473 = %467.3;
  %474 = @func_6998() /* ty=Tensor[(13, 12, 11), float64] */;
  %475 = acosh(%470) /* ty=Tensor[(6, 3, 16), float64] */;
  (%471, %472, %473, meta[relay.Constant][22] /* ty=Tensor[(140, 2), float64] */, -6.61591f /* ty=float32 */, %var_8690, %474, %475)
}

def @func_12294(%var_12292: Tensor[(378), uint32], %var_12293: Tensor[(2156), uint8]) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(3, 126), int64], Tensor[(378), uint32], Tensor[(2156), uint8]) {
  @func_12290(%var_12292, %var_12293) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(3, 126), int64], Tensor[(378), uint32], Tensor[(2156), uint8]) */
}

def @func_4854() -> Tensor[(2730), float32] {
  @func_4852() /* ty=Tensor[(2730), float32] */
}

def @func_5089() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) {
  %479 = fn () -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) {
    %476 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
    %477 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
    %478 = %476.0;
    (%477, %478)
  };
  %479() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */
}

def @func_10830() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) {
  %493 = fn () -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) {
    %480 = @func_9501() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
    %481 = @func_10321() /* ty=(Tensor[(2730), float32],) */;
    %482 = cast(meta[relay.Constant][23] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %483 = @func_4852() /* ty=Tensor[(2730), float32] */;
    %484 = cast(%483, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
    %485 = reshape(%482, newshape=[]) /* ty=uint8 */;
    %486 = reshape(%484, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
    %487 = @func_1022(%485, %486) /* ty=(Tensor[(13, 14, 15), bool],) */;
    %488 = %480.0;
    %489 = %481.0;
    %490 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
    %491 = %487.0;
    %492 = @func_10447() /* ty=Tensor[(13, 12, 11), float64] */;
    (%488, %483, %489, %490, %491, meta[relay.Constant][23] /* ty=uint8 */, %492)
  };
  %493() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) */
}

def @func_4970() -> (Tensor[(2730), float32],) {
  %494 = @func_4852() /* ty=Tensor[(2730), float32] */;
  (%494,)
}

def @func_11234() -> (Tensor[(2730), float32],) {
  @func_11232() /* ty=(Tensor[(2730), float32],) */
}

def @func_8454(%var_8400: Tensor[(378), uint32], %var_8440: Tensor[(2156), uint8]) -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(448), float64], Tensor[(2156), uint8], Tensor[(105, 9), float32], Tensor[(3, 126), int64]) {
  %495 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %496 = @func_4379() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %497 = @func_7079() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
  %498 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %499 = cast(%var_8440, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %500 = cast(%var_8440, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %501 = cast(%var_8440, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %502 = cast(meta[relay.Constant][24] /* ty=Tensor[(105, 9), float32] */, dtype="float32") /* ty=Tensor[(105, 9), float32] */;
  %503 = reshape(%499, newshape=[14, 14, 11]) /* ty=Tensor[(14, 14, 11), uint8] */;
  %504 = reshape(%500, newshape=[14, 14, 11]) /* ty=Tensor[(14, 14, 11), uint8] */;
  %505 = reshape(%501, newshape=[14, 14, 11]) /* ty=Tensor[(14, 14, 11), uint8] */;
  %506 = reshape(%502, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %507 = @func_5977(%503, %504, %505, %506) /* ty=(Tensor[(448), float64], Tensor[(14, 14, 11), uint64], Tensor[(14, 14, 11), uint64], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) */;
  %508 = cast(%var_8400, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %509 = reshape(%508, newshape=[3, 126]) /* ty=Tensor[(3, 126), uint32] */;
  %510 = @func_5496(%509) /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(9, 3, 14), uint32], Tensor[(3, 126), uint32], Tensor[(15, 10, 3), bool], Tensor[(5, 90), int16]) */;
  %511 = %510.3;
  %512 = cast(%var_8400, dtype="int64") /* ty=Tensor[(378), int64] */;
  %513 = shape_of(%511, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%511, dtype="int64") /* ty=Tensor[(3, 126), int64] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %516 = %495.0;
  %517 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %518 = %496.0;
  %519 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %520 = %497.0;
  %521 = %498.1;
  %522 = %507.0;
  %523 = multiply(%514, %515) /* ty=Tensor[(3, 126), int64] */;
  (%516, %517, %518, %519, %520, %521, %522, %var_8440, meta[relay.Constant][24] /* ty=Tensor[(105, 9), float32] */, %523)
}

def @func_12641() -> (Tensor[(450), float32], Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(2730), uint8]) {
  %524 = @func_10865() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32]) */;
  %525 = @func_4916() /* ty=(Tensor[(2730), uint8],) */;
  %526 = @func_5209() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %527 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %528 = %524.3;
  %529 = %525.0;
  %530 = %526.0;
  %531 = %527.0;
  (%528, %529, %530, %531)
}

def @func_2538() -> (Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) {
  %532 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %533 = %532.2;
  %534 = cast(meta[relay.Constant][25] /* ty=Tensor[(286, 6), float64] */, dtype="bool") /* ty=Tensor[(286, 6), bool] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(2), int32] */;
  %536 = cast(%533, dtype="bool") /* ty=Tensor[(286, 6), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %538 = not_equal(%536, %537) /* ty=Tensor[(286, 6), bool] */;
  %539 = cast(meta[relay.Constant][25] /* ty=Tensor[(286, 6), float64] */, dtype="int32") /* ty=Tensor[(286, 6), int32] */;
  %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(%538, dtype="int32") /* ty=Tensor[(286, 6), int32] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %543 = cast(meta[relay.Constant][26] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %544 = cast(meta[relay.Constant][27] /* ty=Tensor[(2730), uint8] */, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
  %545 = reshape(%543, newshape=[]) /* ty=uint8 */;
  %546 = reshape(%544, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
  %547 = @func_1022(%545, %546) /* ty=(Tensor[(13, 14, 15), bool],) */;
  %548 = multiply(%541, %542) /* ty=Tensor[(286, 6), int32] */;
  %549 = %547.0;
  (%548, %549, meta[relay.Constant][26] /* ty=uint8 */, meta[relay.Constant][27] /* ty=Tensor[(2730), uint8] */)
}

def @func_10321() -> (Tensor[(2730), float32],) {
  %550 = @func_6363() /* ty=Tensor[(2730), float32] */;
  (%550,)
}

def @func_8756(%var_8754: Tensor[(12, 32), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], float32, Tensor[(140, 2), float64], float32, Tensor[(12, 32), float32], Tensor[(13, 12, 11), float64], Tensor[(6, 3, 16), float64]) {
  @func_8753(%var_8754) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], float32, Tensor[(140, 2), float64], float32, Tensor[(12, 32), float32], Tensor[(13, 12, 11), float64], Tensor[(6, 3, 16), float64]) */
}

def @func_11447() -> (Tensor[(13, 12, 11), float64],) {
  %551 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %552 = %551.0;
  (%552,)
}

def @func_12342(%var_12341: Tensor[(4, 7, 7), float32]) -> Tensor[(4, 7, 7), float32] {
  %554 = fn (%var_12335: Tensor[(4, 7, 7), float32]) -> Tensor[(4, 7, 7), float32] {
    %553 = cast(%var_12335, dtype="float32") /* ty=Tensor[(4, 7, 7), float32] */;
    cos(%553) /* ty=Tensor[(4, 7, 7), float32] */
  };
  %554(%var_12341) /* ty=Tensor[(4, 7, 7), float32] */
}

def @func_3559() -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  %558 = fn () -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
    %555 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %556 = %555.0;
    %557 = @func_2931() /* ty=Tensor[(13, 12, 11), float64] */;
    (%556, %557)
  };
  %558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */
}

def @func_8991() -> (Tensor[(13, 12, 11), float64], Tensor[(286, 6), int32], Tensor[(2730), int8]) {
  %569 = fn () -> (Tensor[(13, 12, 11), float64], Tensor[(286, 6), int32], Tensor[(2730), int8]) {
    %559 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
    %560 = @func_8553() /* ty=(Tensor[(2730), float32],) */;
    %561 = %560.0;
    %562 = cast(meta[relay.Constant][28] /* ty=Tensor[(2730), float32] */, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(1), int32] */;
    %564 = cast(%561, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?), int8] */;
    %566 = @func_7027() /* ty=Tensor[(13, 12, 11), float64] */;
    %567 = %559.0;
    %568 = right_shift(%564, %565) /* ty=Tensor[(2730), int8] */;
    (%566, %567, %568)
  };
  %569() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(286, 6), int32], Tensor[(2730), int8]) */
}

def @func_3714(%var_3712: Tensor[(280), float64], %var_3713: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) {
  %590 = fn (%var_3692: Tensor[(280), float64], %var_3694: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) {
    %570 = cast(%var_3692, dtype="float64") /* ty=Tensor[(280), float64] */;
    %571 = cast(-3.8661f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %572 = cast(%var_3694, dtype="float32") /* ty=Tensor[(384), float32] */;
    %573 = reshape(%570, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %574 = reshape(%571, newshape=[]) /* ty=float32 */;
    %575 = reshape(%572, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %576 = @func_3219(%573, %574, %575) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
    %577 = %576.3;
    %578 = cast(%577, dtype="float64") /* ty=Tensor[(384), float64] */;
    %579 = cast(%var_3692, dtype="float64") /* ty=Tensor[(280), float64] */;
    %580 = cast(-3.8661f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %581 = cast(%577, dtype="float32") /* ty=Tensor[(384), float32] */;
    %582 = reshape(%579, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %583 = reshape(%580, newshape=[]) /* ty=float32 */;
    %584 = reshape(%581, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %585 = @func_3219(%582, %583, %584) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
    %586 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
    %587 = asin(%578) /* ty=Tensor[(384), float64] */;
    %588 = %585.0;
    %589 = @func_3251() /* ty=Tensor[(2730), float32] */;
    (%586, %var_3692, -3.8661f /* ty=float32 */, %var_3694, %587, %588, %589)
  };
  %590(%var_3712, %var_3713) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */
}

def @func_9109(%var_9106: Tensor[(15, 1, 1), float32], %var_9107: Tensor[(15, 1, 3), float32], %var_9108: Tensor[(5, 189), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(15, 1, 3), int64], Tensor[(15, 63), float32], Tensor[(5, 189), float32]) {
  @func_9104(%var_9106, %var_9107, %var_9108) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 1, 3), int64], Tensor[(15, 63), float32], Tensor[(5, 189), float32]) */
}

def @func_9030() -> (Tensor[(13, 12, 11), float64],) {
  %593 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %591 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %592 = %591.0;
    (%592,)
  };
  %593() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_12584() -> Tensor[(2730), float64] {
  %594 = fn () -> Tensor[(2730), float64] {
    @func_2963() /* ty=Tensor[(2730), float64] */
  };
  %594() /* ty=Tensor[(2730), float64] */
}

def @func_4916() -> (Tensor[(2730), uint8],) {
  %595 = @func_3168() /* ty=(Tensor[(2730), uint8],) */;
  %596 = %595.0;
  (%596,)
}

def @func_12643() -> (Tensor[(450), float32], Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(2730), uint8]) {
  @func_12641() /* ty=(Tensor[(450), float32], Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(2730), uint8]) */
}

def @func_2439() -> (Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) {
  %603 = fn () -> (Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) {
    %597 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 8, 15), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
    %598 = cast(meta[relay.Constant][30] /* ty=Tensor[(286, 6), float64] */, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
    %599 = reshape(%598, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %600 = @func_1006(%599) /* ty=(Tensor[(13, 12, 11), float64],) */;
    %601 = exp(%597) /* ty=Tensor[(5, 8, 15), float32] */;
    %602 = %600.0;
    (%601, %602, meta[relay.Constant][30] /* ty=Tensor[(286, 6), float64] */)
  };
  %603() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */
}

def @func_12373() -> Tensor[(2730), float32] {
  %604 = @func_9983() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */;
  %604.1
}

def @func_3672() -> Tensor[(13, 12, 11), float32] {
  @func_3670() /* ty=Tensor[(13, 12, 11), float32] */
}

def @func_5882() -> (Tensor[(13, 12, 11), float64],) {
  %606 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %605 = @func_4399() /* ty=Tensor[(13, 12, 11), float64] */;
    (%605,)
  };
  %606() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_7392() -> (Tensor[(2730), float32],) {
  %607 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %608 = %607.0;
  (%608,)
}

def @func_13648() -> (Tensor[(4, 16, 7), float32], Tensor[(13, 12, 11), float64], Tensor[(2730), float64], Tensor[(2730), float32]) {
  %609 = @func_3931() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */;
  %610 = @func_13298() /* ty=Tensor[(13, 12, 11), float64] */;
  %611 = cast(%610, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %612 = reshape(%611, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %613 = @func_9789(%612) /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %614 = %609.1;
  %615 = @func_12583() /* ty=Tensor[(2730), float64] */;
  %616 = %613.0;
  (%614, %610, %615, %616)
}

def @func_12952() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %621 = fn () -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
    %617 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
    %618 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
    %619 = %617.0;
    %620 = %618.1;
    (%619, %620)
  };
  %621() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_8254() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  @func_8252() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_11140() -> (Tensor[(13, 12, 11), float64], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  @func_11138() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) */
}

def @func_11215() -> (Tensor[(450), int16], Tensor[(378), uint32], Tensor[(378), float64]) {
  %622 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %623 = @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */;
  %624 = %623.2;
  %625 = cast(meta[relay.Constant][31] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(1), int32] */;
  %627 = cast(%624, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %629 = cast(meta[relay.Constant][31] /* ty=Tensor[(378), uint32] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %630 = %622.2;
  %631 = bitwise_and(%627, %628) /* ty=Tensor[(378), uint32] */;
  %632 = exp(%629) /* ty=Tensor[(378), float64] */;
  (%630, %631, %632)
}

def @func_13650() -> (Tensor[(4, 16, 7), float32], Tensor[(13, 12, 11), float64], Tensor[(2730), float64], Tensor[(2730), float32]) {
  @func_13648() /* ty=(Tensor[(4, 16, 7), float32], Tensor[(13, 12, 11), float64], Tensor[(2730), float64], Tensor[(2730), float32]) */
}

def @func_6692() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) {
  %633 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %634 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %635 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %636 = %633.0;
  %637 = %634.0;
  (%635, %636, %637)
}

def @func_10343(%var_10335: Tensor[(50, 9), int16]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(50, 9), int16], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %638 = @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */;
  %639 = cast(%var_10335, dtype="int16") /* ty=Tensor[(50, 9), int16] */;
  %640 = reshape(%639, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %641 = @func_6663(%640) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %642 = cast(meta[relay.Constant][32] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %643 = cast(meta[relay.Constant][32] /* ty=Tensor[(378), uint32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %644 = reshape(%642, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %645 = reshape(%643, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %646 = @func_917(%644, %645) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %647 = %638.2;
  %648 = %641.4;
  %649 = %646.0;
  (%647, %648, %var_10335, %649, meta[relay.Constant][32] /* ty=Tensor[(378), uint32] */)
}

def @func_4852() -> Tensor[(2730), float32] {
  %650 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %650.0
}

def @func_920(%var_918: Tensor[(9, 3, 14), uint32], %var_919: Tensor[(9, 3, 14), uint32]) -> (Tensor[(9, 3, 14), uint32],) {
  %656 = fn (%var_909: Tensor[(9, 3, 14), uint32], %var_910: Tensor[(9, 3, 14), uint32]) -> (Tensor[(9, 3, 14), uint32],) {
    %651 = cast(%var_910, dtype="uint32") /* ty=Tensor[(9, 3, 14), uint32] */;
    %652 = shape_of(%var_909, dtype="int32") /* ty=Tensor[(3), int32] */;
    %653 = cast(%var_909, dtype="uint32") /* ty=Tensor[(9, 3, 14), uint32] */;
    %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %655 = left_shift(%653, %654) /* ty=Tensor[(9, 3, 14), uint32] */;
    (%655,)
  };
  %656(%var_918, %var_919) /* ty=(Tensor[(9, 3, 14), uint32],) */
}

def @func_3106(%var_3104: Tensor[(13, 12, 11), float64]) -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) {
  @func_3103(%var_3104) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) */
}

def @func_4341() -> (Tensor[(2730), float32],) {
  @func_4339() /* ty=(Tensor[(2730), float32],) */
}

def @func_5741(%var_5721: Tensor[(15, 2, 10), int16]) -> (Tensor[(15, 2, 10), int16], Tensor[(13, 12, 11), float64]) {
  %657 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 2, 10), int16] */, dtype="int16") /* ty=Tensor[(15, 2, 10), int16] */;
  %658 = shape_of(%var_5721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%var_5721, dtype="int16") /* ty=Tensor[(15, 2, 10), int16] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %661 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %662 = right_shift(%659, %660) /* ty=Tensor[(15, 2, 10), int16] */;
  %663 = %661.0;
  (%662, %663)
}

def @func_3425(%var_3424: Tensor[(945), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(7, 15, 9), float32], Tensor[(945), float32]) {
  %670 = fn (%var_3421: Tensor[(945), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(7, 15, 9), float32], Tensor[(945), float32]) {
    %664 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %665 = cast(%var_3421, dtype="float32") /* ty=Tensor[(945), float32] */;
    %666 = reshape(%665, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), float32] */;
    %667 = @func_2902(%666) /* ty=(Tensor[(7, 15, 9), float32], Tensor[(5, 8, 15), float32]) */;
    %668 = %664.0;
    %669 = %667.0;
    (%668, %669, %var_3421)
  };
  %670(%var_3424) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(7, 15, 9), float32], Tensor[(945), float32]) */
}

def @func_13130() -> (Tensor[(2730), float32], Tensor[(2730), float64]) {
  @func_13128() /* ty=(Tensor[(2730), float32], Tensor[(2730), float64]) */
}

def @func_4918() -> (Tensor[(2730), uint8],) {
  @func_4916() /* ty=(Tensor[(2730), uint8],) */
}

def @func_12528(%var_12527: Tensor[(11, 5, 9), float64]) -> (Tensor[(11, 5, 9), float64],) {
  %673 = fn (%var_12523: Tensor[(11, 5, 9), float64]) -> (Tensor[(11, 5, 9), float64],) {
    %671 = cast(%var_12523, dtype="float64") /* ty=Tensor[(11, 5, 9), float64] */;
    %672 = sigmoid(%671) /* ty=Tensor[(11, 5, 9), float64] */;
    (%672,)
  };
  %673(%var_12527) /* ty=(Tensor[(11, 5, 9), float64],) */
}

def @func_4681(%var_4669: Tensor[(13, 12, 11), float64]) -> Tensor[(13, 12, 11), bool] {
  %674 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %675 = %674.0;
  %676 = cast(%var_4669, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%678, %679) /* ty=Tensor[(13, 12, 11), bool] */
}

def @func_11924(%var_11861: Tensor[(6, 14, 12), float32], %var_11862: Tensor[(6, 14, 12), float32], %var_11907: Tensor[(1694), float32]) -> (Tensor[(6, 14, 12), float32], Tensor[(224, 2), float64], Tensor[(2730), float32], Tensor[(2, 13, 8), float64], Tensor[(208), float64], Tensor[(1694), int32], Tensor[(13, 12, 11), float64]) {
  %680 = cast(%var_11862, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %681 = shape_of(%var_11861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%var_11861, dtype="float32") /* ty=Tensor[(6, 14, 12), float32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %684 = @func_11006() /* ty=(Tensor[(2730), float32],) */;
  %685 = cast(meta[relay.Constant][35] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %686 = reshape(%685, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %687 = cast(meta[relay.Constant][34] /* ty=Tensor[(224, 2), float64] */, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %688 = reshape(%687, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %689 = @func_8901(%688) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(1694), float32], Tensor[(448), float64], Tensor[(1694), float32]) */;
  %690 = %689.4;
  %691 = cast(%var_11907, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(1), int32] */;
  %693 = cast(%690, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?), int32] */;
  %695 = mod(%682, %683) /* ty=Tensor[(6, 14, 12), float32] */;
  %696 = %684.0;
  %697 = @func_4650(%686) /* ty=Tensor[(2, 13, 8), float64] */;
  %698 = logical_xor(%693, %694) /* ty=Tensor[(1694), int32] */;
  %699 = @func_2931() /* ty=Tensor[(13, 12, 11), float64] */;
  (%695, meta[relay.Constant][34] /* ty=Tensor[(224, 2), float64] */, %696, %697, meta[relay.Constant][35] /* ty=Tensor[(208), float64] */, %698, %699)
}

def @func_11835() -> (Tensor[(13, 12, 11), float32], Tensor[(384), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) {
  %709 = fn () -> (Tensor[(13, 12, 11), float32], Tensor[(384), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) {
    %700 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
    %701 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
    %702 = @func_10829() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 14, 15), bool], uint8, Tensor[(13, 12, 11), float64]) */;
    %703 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
    %704 = %700.0;
    %705 = %701.3;
    %706 = @func_4526() /* ty=Tensor[(2730), float32] */;
    %707 = %702.0;
    %708 = %703.0;
    (%704, %705, %706, %707, %708)
  };
  %709() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(384), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) */
}

def @func_5143() -> (Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) {
  %710 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 378), uint32] */, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %711 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 378), uint32] */, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
  %712 = reshape(%710, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %713 = reshape(%711, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %714 = @func_917(%712, %713) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %715 = @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %716 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 378), uint32] */, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %717 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 378), uint32] */, dtype="float64") /* ty=Tensor[(4, 378), float64] */;
  %718 = minimum(%716, %717) /* ty=Tensor[(4, 378), float64] */;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(4, 378), float32] */;
  %720 = @func_4010() /* ty=Tensor[(13, 12, 11), float64] */;
  %721 = %714.0;
  %722 = %715.0;
  %723 = sigmoid(%719) /* ty=Tensor[(4, 378), float32] */;
  (%720, %721, %722, %723)
}

def @func_2602(%var_2568: float32, %var_2581: Tensor[(384), float32]) -> (Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) {
  %724 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %725 = cast(meta[relay.Constant][38] /* ty=Tensor[(600), float32] */, dtype="float32") /* ty=Tensor[(600), float32] */;
  %726 = cast(%var_2568, dtype="float32") /* ty=float32 */;
  %727 = cast(meta[relay.Constant][39] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %728 = cast(meta[relay.Constant][40] /* ty=Tensor[(378, 1), uint32] */, dtype="uint32") /* ty=Tensor[(378, 1), uint32] */;
  %729 = reshape(%725, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), float32] */;
  %730 = reshape(%726, newshape=[]) /* ty=float32 */;
  %731 = reshape(%727, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %732 = reshape(%728, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %733 = @func_2481(%729, %730, %731, %732) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %734 = cast(%var_2581, dtype="float64") /* ty=Tensor[(384), float64] */;
  %735 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(384), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %736 = cast(meta[relay.Constant][39] /* ty=Tensor[(384), float32] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?), float64] */;
  %738 = %733.0;
  %739 = cast(%738, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %740 = cast(%var_2568, dtype="float32") /* ty=float32 */;
  %741 = cast(meta[relay.Constant][39] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %742 = cast(meta[relay.Constant][40] /* ty=Tensor[(378, 1), uint32] */, dtype="uint32") /* ty=Tensor[(378, 1), uint32] */;
  %743 = reshape(%739, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), float32] */;
  %744 = reshape(%740, newshape=[]) /* ty=float32 */;
  %745 = reshape(%741, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
  %746 = reshape(%742, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %747 = @func_2481(%743, %744, %745, %746) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
  %748 = %724.0;
  %749 = mod(%736, %737) /* ty=Tensor[(384), float64] */;
  %750 = %747.5;
  (%748, %738, meta[relay.Constant][38] /* ty=Tensor[(600), float32] */, %var_2568, meta[relay.Constant][40] /* ty=Tensor[(378, 1), uint32] */, %749, %750)
}

def @func_1009(%var_1007: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), float64],) {
  @func_1006(%var_1007) /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_147(%var_97: Tensor[(4, 8, 14), float64]) -> (Tensor[(4, 8, 14), float64],) {
  %751 = cast(%var_97, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
  %752 = sinh(%751) /* ty=Tensor[(4, 8, 14), float64] */;
  (%752,)
}

def @func_3045() -> (Tensor[(2730), float32],) {
  %753 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %754 = cast(meta[relay.Constant][41] /* ty=Tensor[(2730), float64] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(1), int32] */;
  %756 = cast(%753, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?), float32] */;
  %758 = floor_mod(%756, %757) /* ty=Tensor[(2730), float32] */;
  (%758,)
}

def @func_7394() -> (Tensor[(2730), float32],) {
  @func_7392() /* ty=(Tensor[(2730), float32],) */
}

def @func_6017() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) {
  @func_6015() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) */
}

def @func_8553() -> (Tensor[(2730), float32],) {
  %759 = @func_4970() /* ty=(Tensor[(2730), float32],) */;
  %760 = %759.0;
  (%760,)
}

def @func_10431(%var_10430: Tensor[(11, 8, 14), uint32]) -> Tensor[(11, 8, 14), bool] {
  %765 = fn (%var_10421: Tensor[(11, 8, 14), uint32]) -> Tensor[(11, 8, 14), bool] {
    %761 = cast(%var_10421, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
    %762 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(11, 8, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 8, 14), uint32] */, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%763, %764) /* ty=Tensor[(11, 8, 14), bool] */
  };
  %765(%var_10430) /* ty=Tensor[(11, 8, 14), bool] */
}

def @func_10939() -> Tensor[(2730), float32] {
  %767 = fn () -> Tensor[(2730), float32] {
    %766 = @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */;
    %766.3
  };
  %767() /* ty=Tensor[(2730), float32] */
}

def @func_4528() -> Tensor[(2730), float32] {
  @func_4526() /* ty=Tensor[(2730), float32] */
}

def @func_8049() -> Tensor[(13, 12, 11), float64] {
  %769 = fn () -> Tensor[(13, 12, 11), float64] {
    %768 = @func_7477() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
    %768.3
  };
  %769() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_10895(%var_10894: Tensor[(1694), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), float32], Tensor[(936), uint64], Tensor[(1694), uint16]) {
  %782 = fn (%var_10884: Tensor[(1694), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), float32], Tensor[(936), uint64], Tensor[(1694), uint16]) {
    %770 = cast(meta[relay.Constant][43] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %771 = cast(meta[relay.Constant][44] /* ty=Tensor[(936), uint64] */, dtype="uint64") /* ty=Tensor[(936), uint64] */;
    %772 = cast(%var_10884, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %773 = reshape(%770, newshape=[]) /* ty=uint64 */;
    %774 = reshape(%771, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint64] */;
    %775 = reshape(%772, newshape=[121, 14]) /* ty=Tensor[(121, 14), float32] */;
    %776 = @func_5846(%773, %774, %775) /* ty=(Tensor[(13, 6, 12), uint64], Tensor[(2730), float32], Tensor[(13, 6, 12), float32], Tensor[(11, 14, 11), float32], Tensor[(121, 14), float32]) */;
    %777 = cast(meta[relay.Constant][43] /* ty=uint64 */, dtype="uint16") /* ty=uint16 */;
    %778 = cast(%var_10884, dtype="uint16") /* ty=Tensor[(1694), uint16] */;
    %779 = @func_4399() /* ty=Tensor[(13, 12, 11), float64] */;
    %780 = %776.3;
    %781 = bitwise_or(%777, %778) /* ty=Tensor[(1694), uint16] */;
    (%779, %780, meta[relay.Constant][44] /* ty=Tensor[(936), uint64] */, %781)
  };
  %782(%var_10894) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), float32], Tensor[(936), uint64], Tensor[(1694), uint16]) */
}

def @func_4216(%var_4213: Tensor[(280), float64], %var_4214: float32, %var_4215: Tensor[(384), float32]) -> (Tensor[(286, 6), int32], Tensor[(8, 12, 4), float32], Tensor[(280), float64], float32, Tensor[(384), float32]) {
  %793 = fn (%var_4205: Tensor[(280), float64], %var_4206: float32, %var_4207: Tensor[(384), float32]) -> (Tensor[(286, 6), int32], Tensor[(8, 12, 4), float32], Tensor[(280), float64], float32, Tensor[(384), float32]) {
    %783 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
    %784 = cast(%var_4205, dtype="float64") /* ty=Tensor[(280), float64] */;
    %785 = cast(%var_4206, dtype="float32") /* ty=float32 */;
    %786 = cast(%var_4207, dtype="float32") /* ty=Tensor[(384), float32] */;
    %787 = reshape(%784, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %788 = reshape(%785, newshape=[]) /* ty=float32 */;
    %789 = reshape(%786, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %790 = @func_3219(%787, %788, %789) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(384), float32]) */;
    %791 = %783.0;
    %792 = %790.1;
    (%791, %792, %var_4205, %var_4206, %var_4207)
  };
  %793(%var_4213, %var_4214, %var_4215) /* ty=(Tensor[(286, 6), int32], Tensor[(8, 12, 4), float32], Tensor[(280), float64], float32, Tensor[(384), float32]) */
}

def @func_8252() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %794 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
  %795 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  %796 = cast(%795, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %797 = reshape(%796, newshape=[1716]) /* ty=Tensor[(1716), float64] */;
  %798 = @func_7903(%797) /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(1694), float64]) */;
  %799 = @func_3670() /* ty=Tensor[(13, 12, 11), float32] */;
  %800 = %794.0;
  %801 = %798.4;
  %802 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %803 = @func_6998() /* ty=Tensor[(13, 12, 11), float64] */;
  (%799, %800, %795, %801, %802, %803)
}

def @func_7080() -> (Tensor[(2730), uint8], Tensor[(2730), float32]) {
  %807 = fn () -> (Tensor[(2730), uint8], Tensor[(2730), float32]) {
    %804 = @func_5601() /* ty=(Tensor[(2730), float32],) */;
    %805 = @func_2943() /* ty=Tensor[(2730), uint8] */;
    %806 = %804.0;
    (%805, %806)
  };
  %807() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */
}

def @func_4882() -> (Tensor[(13, 12, 11), float64],) {
  %810 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %808 = @func_3604() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %809 = %808.0;
    (%809,)
  };
  %810() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_2932() -> Tensor[(13, 12, 11), float64] {
  %812 = fn () -> Tensor[(13, 12, 11), float64] {
    %811 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %811.0
  };
  %812() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_4339() -> (Tensor[(2730), float32],) {
  %813 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %814 = %813.0;
  (%814,)
}

def @func_5568() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) {
  %815 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %816 = reshape(%815, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %817 = @func_3992(%816) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(384), float64], Tensor[(280), float64], Tensor[(384), float32]) */;
  %818 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %819 = @func_4526() /* ty=Tensor[(2730), float32] */;
  %820 = %817.2;
  (%818, %819, %820, meta[relay.Constant][45] /* ty=Tensor[(384), float32] */)
}

def @func_5688(%var_5686: Tensor[(10, 2, 14), int32]) -> (Tensor[(10, 2, 14), int32], Tensor[(1716), float64]) {
  @func_5685(%var_5686) /* ty=(Tensor[(10, 2, 14), int32], Tensor[(1716), float64]) */
}

def @func_11613() -> (Tensor[(2730), uint8],) {
  %821 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
  %822 = %821.3;
  (%822,)
}

def @func_6999() -> Tensor[(13, 12, 11), float64] {
  %824 = fn () -> Tensor[(13, 12, 11), float64] {
    %823 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %823.0
  };
  %824() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_7721() -> Tensor[(2730), float32] {
  %825 = @func_5601() /* ty=(Tensor[(2730), float32],) */;
  %825.0
}

def @func_8598() -> (Tensor[(13, 12, 11), float32],) {
  @func_8596() /* ty=(Tensor[(13, 12, 11), float32],) */
}

def @func_11360(%var_11283: Tensor[(13, 12, 11), float32]) -> (Tensor[(13, 12, 11), uint16], Tensor[(15, 10, 3), bool], Tensor[(450), int16], Tensor[(13, 12, 11), float32], Tensor[(13, 12, 11), float64]) {
  %826 = @func_7820() /* ty=(Tensor[(450), int16], Tensor[(13, 12, 11), float32]) */;
  %827 = %826.1;
  %828 = cast(%var_11283, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%827, dtype="uint16") /* ty=Tensor[(13, 12, 11), uint16] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %832 = cast(meta[relay.Constant][46] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %833 = reshape(%832, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %834 = @func_5209() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
  %835 = %834.1;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %837 = shape_of(%var_11283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_11283, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %840 = @func_3558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
  %841 = right_shift(%830, %831) /* ty=Tensor[(13, 12, 11), uint16] */;
  %842 = @func_3777(%833) /* ty=Tensor[(15, 10, 3), bool] */;
  %843 = power(%838, %839) /* ty=Tensor[(13, 12, 11), float32] */;
  %844 = %840.1;
  (%841, %842, meta[relay.Constant][46] /* ty=Tensor[(450), int16] */, %843, %844)
}

def @func_5209() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %845 = @func_3251() /* ty=Tensor[(2730), float32] */;
  %846 = @func_3285() /* ty=Tensor[(13, 12, 11), float64] */;
  (%845, %846)
}

def @func_11138() -> (Tensor[(13, 12, 11), float64], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  %847 = cast(meta[relay.Constant][47] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %848 = reshape(%847, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
  %849 = @func_147(%848) /* ty=(Tensor[(4, 8, 14), float64],) */;
  %850 = @func_8123() /* ty=Tensor[(13, 12, 11), float64] */;
  %851 = %849.0;
  (%850, %851, meta[relay.Constant][47] /* ty=Tensor[(448), float64] */)
}

def @func_9350() -> (Tensor[(13, 12, 11), float32],) {
  @func_9348() /* ty=(Tensor[(13, 12, 11), float32],) */
}

def @func_4401() -> Tensor[(13, 12, 11), float64] {
  @func_4399() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_8666() -> (Tensor[(1716), float64],) {
  %854 = fn () -> (Tensor[(1716), float64],) {
    %852 = @func_8151() /* ty=(Tensor[(1716), float64], Tensor[(13, 12, 11), float64], Tensor[(450), int16]) */;
    %853 = %852.0;
    (%853,)
  };
  %854() /* ty=(Tensor[(1716), float64],) */
}

def @func_12107() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(10, 45), float32]) {
  %855 = @func_11006() /* ty=(Tensor[(2730), float32],) */;
  %856 = cast(meta[relay.Constant][48] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %857 = cast(meta[relay.Constant][48] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %858 = cast(meta[relay.Constant][48] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %859 = reshape(%856, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %860 = reshape(%857, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %861 = reshape(%858, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
  %862 = @func_5664(%859, %860, %861) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
  %863 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
  %864 = @func_5143() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(13, 12, 11), float64], Tensor[(4, 378), float32]) */;
  %865 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 45), int16] */, dtype="int16") /* ty=Tensor[(10, 45), int16] */;
  %866 = reshape(%865, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %867 = @func_6663(%866) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %868 = %867.2;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(450, 1), float32] */;
  %870 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(10, 45), int16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %871 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 45), int16] */, dtype="float32") /* ty=Tensor[(10, 45), float32] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %873 = %855.0;
  %874 = @func_6363() /* ty=Tensor[(2730), float32] */;
  %875 = %862.0;
  %876 = %863.0;
  %877 = %864.0;
  %878 = divide(%871, %872) /* ty=Tensor[(10, 45), float32] */;
  (%873, %874, %875, meta[relay.Constant][48] /* ty=Tensor[(1694), float32] */, %876, %877, %878)
}

def @func_11099() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
  %887 = fn () -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) {
    %879 = @func_7820() /* ty=(Tensor[(450), int16], Tensor[(13, 12, 11), float32]) */;
    %880 = @func_6499() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) */;
    %881 = cast(meta[relay.Constant][50] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %882 = reshape(%881, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
    %883 = @func_147(%882) /* ty=(Tensor[(4, 8, 14), float64],) */;
    %884 = %879.1;
    %885 = %880.0;
    %886 = %883.0;
    (%884, %885, %886, meta[relay.Constant][50] /* ty=Tensor[(448), float64] */)
  };
  %887() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) */
}

def @func_4010() -> Tensor[(13, 12, 11), float64] {
  @func_3285() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_8009() -> (Tensor[(2730), uint8], Tensor[(2730), float32]) {
  @func_8007() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */
}

def @func_12518() -> Tensor[(2730), uint8] {
  %888 = @func_8007() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
  %888.0
}

def @func_7155(%var_7151: Tensor[(600), float32], %var_7152: float32, %var_7153: Tensor[(378), uint32], %var_7154: Tensor[(280), float64]) -> (Tensor[(2730), float32], float32, Tensor[(600), float32], float32, Tensor[(378), uint32], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(384), float32]) {
  @func_7149(%var_7151, %var_7152, %var_7153, %var_7154) /* ty=(Tensor[(2730), float32], float32, Tensor[(600), float32], float32, Tensor[(378), uint32], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(384), float32]) */
}

def @func_13770(%var_13768: Tensor[(768), float64], %var_13769: Tensor[(384), float32]) -> (Tensor[(2730), float32], Tensor[(384), float64], Tensor[(768), float64], Tensor[(384), float32]) {
  %897 = fn (%var_13754: Tensor[(768), float64], %var_13755: Tensor[(384), float32]) -> (Tensor[(2730), float32], Tensor[(384), float64], Tensor[(768), float64], Tensor[(384), float32]) {
    %889 = @func_8275() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */;
    %890 = cast(%var_13754, dtype="float64") /* ty=Tensor[(768), float64] */;
    %891 = cast(%var_13755, dtype="float32") /* ty=Tensor[(384), float32] */;
    %892 = reshape(%890, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
    %893 = reshape(%891, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %894 = @func_9395(%892, %893) /* ty=(Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) */;
    %895 = %889.1;
    %896 = %894.1;
    (%895, %896, %var_13754, %var_13755)
  };
  %897(%var_13768, %var_13769) /* ty=(Tensor[(2730), float32], Tensor[(384), float64], Tensor[(768), float64], Tensor[(384), float32]) */
}

def @func_10567(%var_10566: Tensor[(14, 9, 7), float64]) -> (Tensor[(14, 9, 7), float64], Tensor[(2730), float32], Tensor[(2730), float32]) {
  %904 = fn (%var_10516: Tensor[(14, 9, 7), float64]) -> (Tensor[(14, 9, 7), float64], Tensor[(2730), float32], Tensor[(2730), float32]) {
    %898 = cast(%var_10516, dtype="float64") /* ty=Tensor[(14, 9, 7), float64] */;
    %899 = @func_10321() /* ty=(Tensor[(2730), float32],) */;
    %900 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
    %901 = atan(%898) /* ty=Tensor[(14, 9, 7), float64] */;
    %902 = %899.0;
    %903 = %900.0;
    (%901, %902, %903)
  };
  %904(%var_10566) /* ty=(Tensor[(14, 9, 7), float64], Tensor[(2730), float32], Tensor[(2730), float32]) */
}

def @func_3497(%var_3484: Tensor[(15, 63), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) {
  %905 = cast(%var_3484, dtype="float32") /* ty=Tensor[(15, 63), float32] */;
  %906 = reshape(%905, newshape=[945]) /* ty=Tensor[(945), float32] */;
  %907 = @func_3423(%906) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(7, 15, 9), float32], Tensor[(945), float32]) */;
  %908 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
  %909 = %907.0;
  (%908, %909, %var_3484)
}

def @func_12520() -> Tensor[(2730), uint8] {
  @func_12518() /* ty=Tensor[(2730), uint8] */
}

def @func_5977(%var_5926: Tensor[(14, 14, 11), uint8], %var_5927: Tensor[(14, 14, 11), uint8], %var_5963: Tensor[(14, 14, 11), uint8], %var_5971: Tensor[(945), float32]) -> (Tensor[(448), float64], Tensor[(14, 14, 11), uint64], Tensor[(14, 14, 11), uint64], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) {
  %910 = @func_3931() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 16, 7), float32], Tensor[(448), float64]) */;
  %911 = cast(%var_5927, dtype="bool") /* ty=Tensor[(14, 14, 11), bool] */;
  %912 = shape_of(%var_5926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%var_5926, dtype="bool") /* ty=Tensor[(14, 14, 11), bool] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %915 = greater(%913, %914) /* ty=Tensor[(14, 14, 11), bool] */;
  %916 = cast(%915, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %917 = shape_of(%var_5926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%var_5926, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %920 = cast(%var_5963, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %921 = shape_of(%var_5926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%var_5926, dtype="uint64") /* ty=Tensor[(14, 14, 11), uint64] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %924 = cast(%var_5971, dtype="float32") /* ty=Tensor[(945), float32] */;
  %925 = reshape(%924, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
  %926 = @func_3497(%925) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */;
  %927 = %910.2;
  %928 = subtract(%918, %919) /* ty=Tensor[(14, 14, 11), uint64] */;
  %929 = add(%922, %923) /* ty=Tensor[(14, 14, 11), uint64] */;
  %930 = %926.0;
  (%927, %928, %929, %930, %var_5971)
}

def @func_6403() -> (Tensor[(13, 12, 11), float64],) {
  %933 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %931 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %932 = %931.0;
    (%932,)
  };
  %933() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_5281(%var_5271: Tensor[(378), uint32]) -> (Tensor[(2730), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %934 = cast(%var_5271, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %935 = cast(%var_5271, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %936 = reshape(%934, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %937 = reshape(%935, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %938 = @func_917(%936, %937) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %939 = @func_2963() /* ty=Tensor[(2730), float64] */;
  %940 = %938.0;
  (%939, %940, %var_5271)
}

def @func_5527() -> (Tensor[(13, 12, 11), float64],) {
  %942 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %941 = @func_3113() /* ty=Tensor[(13, 12, 11), float64] */;
    (%941,)
  };
  %942() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_3779(%var_3778: Tensor[(15, 10, 3), int16]) -> Tensor[(15, 10, 3), bool] {
  %952 = fn (%var_3743: Tensor[(15, 10, 3), int16]) -> Tensor[(15, 10, 3), bool] {
    %943 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 10, 3), int16] */, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %944 = shape_of(%var_3743, dtype="int32") /* ty=Tensor[(3), int32] */;
    %945 = cast(%var_3743, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %947 = equal(%945, %946) /* ty=Tensor[(15, 10, 3), bool] */;
    %948 = cast(%947, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %949 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(15, 10, 3), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 10, 3), int16] */, dtype="bool") /* ty=Tensor[(15, 10, 3), bool] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%950, %951) /* ty=Tensor[(15, 10, 3), bool] */
  };
  %952(%var_3778) /* ty=Tensor[(15, 10, 3), bool] */
}

def @func_2917() -> (Tensor[(13, 12, 11), float64],) {
  %955 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %953 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %954 = %953.0;
    (%954,)
  };
  %955() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_6666(%var_6664: Tensor[(450, 1), int16]) -> (Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) {
  @func_6663(%var_6664) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */
}

def @func_1177(%var_1175: float32, %var_1176: Tensor[(8, 12, 4), float32]) -> Tensor[(8, 12, 4), float32] {
  @func_1173(%var_1175, %var_1176) /* ty=Tensor[(8, 12, 4), float32] */
}

def @func_11587() -> (Tensor[(2730), float32], Tensor[(2730), uint8]) {
  %956 = @func_9566() /* ty=(Tensor[(2730), float32],) */;
  %957 = %956.0;
  %958 = @func_10704() /* ty=Tensor[(2730), uint8] */;
  (%957, %958)
}

def @func_12308(%var_12307: Tensor[(7, 14, 5), float64]) -> (Tensor[(7, 14, 5), float64],) {
  %961 = fn (%var_12303: Tensor[(7, 14, 5), float64]) -> (Tensor[(7, 14, 5), float64],) {
    %959 = cast(%var_12303, dtype="float64") /* ty=Tensor[(7, 14, 5), float64] */;
    %960 = cos(%959) /* ty=Tensor[(7, 14, 5), float64] */;
    (%960,)
  };
  %961(%var_12307) /* ty=(Tensor[(7, 14, 5), float64],) */
}

def @func_5602() -> (Tensor[(2730), float32],) {
  %963 = fn () -> (Tensor[(2730), float32],) {
    %962 = @func_4526() /* ty=Tensor[(2730), float32] */;
    (%962,)
  };
  %963() /* ty=(Tensor[(2730), float32],) */
}

def @func_3169() -> (Tensor[(2730), uint8],) {
  %965 = fn () -> (Tensor[(2730), uint8],) {
    %964 = @func_2943() /* ty=Tensor[(2730), uint8] */;
    (%964,)
  };
  %965() /* ty=(Tensor[(2730), uint8],) */
}

def @func_9690() -> (Tensor[(2730), float32],) {
  %968 = fn () -> (Tensor[(2730), float32],) {
    %966 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
    %967 = %966.0;
    (%967,)
  };
  %968() /* ty=(Tensor[(2730), float32],) */
}

def @func_8375() -> (Tensor[(378), uint32],) {
  %971 = fn () -> (Tensor[(378), uint32],) {
    %969 = @func_5624() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
    %970 = %969.2;
    (%970,)
  };
  %971() /* ty=(Tensor[(378), uint32],) */
}

def @func_13299() -> Tensor[(13, 12, 11), float64] {
  %972 = fn () -> Tensor[(13, 12, 11), float64] {
    @func_3285() /* ty=Tensor[(13, 12, 11), float64] */
  };
  %972() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_3500(%var_3498: Tensor[(15, 63), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) {
  @func_3497(%var_3498) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */
}

def @func_9711() -> (Tensor[(13, 12, 11), float64],) {
  %975 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %973 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %974 = %973.0;
    (%974,)
  };
  %975() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_1006(%var_989: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), float64],) {
  %976 = cast(%var_989, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %977 = erf(%976) /* ty=Tensor[(13, 12, 11), float64] */;
  %978 = cast(%977, dtype="float64") /* ty=Tensor[(13, 12, 11), float64] */;
  %979 = sigmoid(%978) /* ty=Tensor[(13, 12, 11), float64] */;
  (%979,)
}

def @func_8277() -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  @func_8275() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_6581(%var_6578: Tensor[(600), float32], %var_6579: float32, %var_6580: Tensor[(1, 378), uint32]) -> (Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) {
  %999 = fn (%var_6544: Tensor[(600), float32], %var_6545: float32, %var_6547: Tensor[(1, 378), uint32]) -> (Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) {
    %980 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 5, 8), float64] */;
    %981 = atan(%980) /* ty=Tensor[(11, 5, 8), float64] */;
    %982 = cast(%981, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
    %983 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(11, 5, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %984 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 5, 8), float64] */, dtype="bool") /* ty=Tensor[(11, 5, 8), bool] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %986 = cast(%var_6544, dtype="float32") /* ty=Tensor[(600), float32] */;
    %987 = cast(%var_6545, dtype="float32") /* ty=float32 */;
    %988 = cast(meta[relay.Constant][53] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %989 = cast(%var_6547, dtype="uint32") /* ty=Tensor[(1, 378), uint32] */;
    %990 = reshape(%986, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), float32] */;
    %991 = reshape(%987, newshape=[]) /* ty=float32 */;
    %992 = reshape(%988, newshape=[12, 32]) /* ty=Tensor[(12, 32), float32] */;
    %993 = reshape(%989, newshape=[378]) /* ty=Tensor[(378), uint32] */;
    %994 = @func_2481(%990, %991, %992, %993) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
    %995 = @func_3558() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
    %996 = not_equal(%984, %985) /* ty=Tensor[(11, 5, 8), bool] */;
    %997 = %994.6;
    %998 = %995.1;
    (%996, %997, %var_6544, %var_6545, meta[relay.Constant][53] /* ty=Tensor[(384), float32] */, %var_6547, %998)
  };
  %999(%var_6578, %var_6579, %var_6580) /* ty=(Tensor[(11, 5, 8), bool], Tensor[(378), uint32], Tensor[(600), float32], float32, Tensor[(384), float32], Tensor[(1, 378), uint32], Tensor[(13, 12, 11), float64]) */
}

def @func_7778(%var_7777: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) {
  %1008 = fn (%var_7760: Tensor[(13, 12, 11), float64]) -> (Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) {
    %1000 = @func_7027() /* ty=Tensor[(13, 12, 11), float64] */;
    %1001 = cast(%var_7760, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
    %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1003 = cast(%1000, dtype="bool") /* ty=Tensor[(13, 12, 11), bool] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1005 = @func_7079() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
    %1006 = equal(%1003, %1004) /* ty=Tensor[(13, 12, 11), bool] */;
    %1007 = %1005.1;
    (%1006, %1007)
  };
  %1008(%var_7777) /* ty=(Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) */
}

def @func_10865() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(450), float32]) {
  %1009 = @func_7679() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1010 = cast(meta[relay.Constant][54] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %1011 = cast(meta[relay.Constant][54] /* ty=Tensor[(450), float32] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1012 = reshape(%1010, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float32] */;
  %1013 = reshape(%1011, newshape=[3, 10, 15]) /* ty=Tensor[(3, 10, 15), float64] */;
  %1014 = @func_9308(%1012, %1013) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) */;
  %1015 = @func_6821() /* ty=Tensor[(2730), float32] */;
  %1016 = %1009.0;
  %1017 = %1014.1;
  (%1015, %1016, %1017, meta[relay.Constant][54] /* ty=Tensor[(450), float32] */)
}

def @func_13505(%var_13503: uint64, %var_13504: Tensor[(14, 13, 8), uint64]) -> (Tensor[(14, 13, 8), bool], Tensor[(13, 12, 11), float64], Tensor[(14, 13, 8), float64], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64]) {
  %1029 = fn (%var_13443: uint64, %var_13444: Tensor[(14, 13, 8), uint64]) -> (Tensor[(14, 13, 8), bool], Tensor[(13, 12, 11), float64], Tensor[(14, 13, 8), float64], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64]) {
    %1018 = cast(%var_13443, dtype="bool") /* ty=bool */;
    %1019 = cast(%var_13444, dtype="bool") /* ty=Tensor[(14, 13, 8), bool] */;
    %1020 = @func_7835() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1021 = cast(%var_13444, dtype="float64") /* ty=Tensor[(14, 13, 8), float64] */;
    %1022 = @func_11613() /* ty=(Tensor[(2730), uint8],) */;
    %1023 = @func_9029() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1024 = not_equal(%1018, %1019) /* ty=Tensor[(14, 13, 8), bool] */;
    %1025 = %1020.0;
    %1026 = sin(%1021) /* ty=Tensor[(14, 13, 8), float64] */;
    %1027 = %1022.0;
    %1028 = %1023.0;
    (%1024, %1025, %1026, %1027, %1028)
  };
  %1029(%var_13503, %var_13504) /* ty=(Tensor[(14, 13, 8), bool], Tensor[(13, 12, 11), float64], Tensor[(14, 13, 8), float64], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64]) */
}

def @func_4399() -> Tensor[(13, 12, 11), float64] {
  @func_3113() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_3251() -> Tensor[(2730), float32] {
  %1030 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
  %1030.0
}

def @func_10736(%var_10735: Tensor[(112, 4), float64]) -> (Tensor[(2730), float32], Tensor[(448), float64], Tensor[(112, 4), float64], Tensor[(286, 6), float64], Tensor[(1694), float32]) {
  %1041 = fn (%var_10720: Tensor[(112, 4), float64]) -> (Tensor[(2730), float32], Tensor[(448), float64], Tensor[(112, 4), float64], Tensor[(286, 6), float64], Tensor[(1694), float32]) {
    %1031 = @func_7079() /* ty=(Tensor[(2730), uint8], Tensor[(2730), float32]) */;
    %1032 = cast(%var_10720, dtype="float64") /* ty=Tensor[(112, 4), float64] */;
    %1033 = cast(meta[relay.Constant][55] /* ty=Tensor[(286, 6), float64] */, dtype="float64") /* ty=Tensor[(286, 6), float64] */;
    %1034 = cast(meta[relay.Constant][56] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1035 = reshape(%1032, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %1036 = reshape(%1033, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %1037 = reshape(%1034, newshape=[11, 154]) /* ty=Tensor[(11, 154), float32] */;
    %1038 = @func_7641(%1035, %1036, %1037) /* ty=(Tensor[(4, 8, 14), float64], Tensor[(448), float64], Tensor[(13, 12, 11), uint8], Tensor[(2730), float64], Tensor[(11, 154), float32], Tensor[(1694), float32]) */;
    %1039 = %1031.1;
    %1040 = %1038.1;
    (%1039, %1040, %var_10720, meta[relay.Constant][55] /* ty=Tensor[(286, 6), float64] */, meta[relay.Constant][56] /* ty=Tensor[(1694), float32] */)
  };
  %1041(%var_10735) /* ty=(Tensor[(2730), float32], Tensor[(448), float64], Tensor[(112, 4), float64], Tensor[(286, 6), float64], Tensor[(1694), float32]) */
}

def @func_6364() -> Tensor[(2730), float32] {
  %1042 = fn () -> Tensor[(2730), float32] {
    @func_3251() /* ty=Tensor[(2730), float32] */
  };
  %1042() /* ty=Tensor[(2730), float32] */
}

def @func_7679() -> (Tensor[(13, 12, 11), float64],) {
  %1043 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_11008() -> (Tensor[(2730), float32],) {
  @func_11006() /* ty=(Tensor[(2730), float32],) */
}

def @func_12109() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(10, 45), float32]) {
  @func_12107() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(10, 45), float32]) */
}

def @func_9398(%var_9396: Tensor[(4, 16, 12), float64], %var_9397: Tensor[(384), float32]) -> (Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) {
  %1063 = fn (%var_9354: Tensor[(4, 16, 12), float64], %var_9376: Tensor[(384), float32]) -> (Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) {
    %1045 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
    %1046 = cast(meta[relay.Constant][57] /* ty=Tensor[(280, 1), float64] */, dtype="float64") /* ty=Tensor[(280, 1), float64] */;
    %1047 = cast(%var_9376, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1048 = reshape(%1046, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %1049 = reshape(%1047, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1050 = @func_3711(%1048, %1049) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */;
    %1051 = cast(meta[relay.Constant][58] /* ty=Tensor[(4, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
    %1052 = shape_of(%var_9354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1053 = cast(%var_9354, dtype="float64") /* ty=Tensor[(4, 16, 12), float64] */;
    %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1055 = mod(%1053, %1054) /* ty=Tensor[(4, 16, 12), float64] */;
    %1056 = cast(%1055, dtype="int8") /* ty=Tensor[(4, 16, 12), int8] */;
    %1057 = shape_of(%var_9354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1058 = cast(%var_9354, dtype="int8") /* ty=Tensor[(4, 16, 12), int8] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1060 = %1045.0;
    %1061 = %1050.4;
    %1062 = right_shift(%1058, %1059) /* ty=Tensor[(4, 16, 12), int8] */;
    (%1060, %1061, meta[relay.Constant][57] /* ty=Tensor[(280, 1), float64] */, %var_9376, %1062)
  };
  %1063(%var_9396, %var_9397) /* ty=(Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) */
}

def @func_5284(%var_5282: Tensor[(378), uint32]) -> (Tensor[(2730), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  @func_5281(%var_5282) /* ty=(Tensor[(2730), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */
}

def @func_12771() -> (Tensor[(2730), float32], Tensor[(2730), uint8]) {
  %1064 = @func_12107() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(11, 14, 11), float32], Tensor[(1694), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(10, 45), float32]) */;
  %1065 = %1064.1;
  %1066 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  (%1065, %1066)
}

def @func_11412() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(1694), uint16], Tensor[(11, 154), float32]) {
  %1075 = fn () -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(1694), uint16], Tensor[(11, 154), float32]) {
    %1067 = @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */;
    %1068 = @func_6402() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1069 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 154), float32] */, dtype="float32") /* ty=Tensor[(11, 154), float32] */;
    %1070 = reshape(%1069, newshape=[1694]) /* ty=Tensor[(1694), float32] */;
    %1071 = @func_10893(%1070) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), float32], Tensor[(936), uint64], Tensor[(1694), uint16]) */;
    %1072 = %1067.3;
    %1073 = %1068.0;
    %1074 = %1071.3;
    (%1072, %1073, %1074, meta[relay.Constant][59] /* ty=Tensor[(11, 154), float32] */)
  };
  %1075() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(1694), uint16], Tensor[(11, 154), float32]) */
}

def @func_2867(%var_2863: float32, %var_2864: Tensor[(384), float32], %var_2865: Tensor[(448), float64], %var_2866: Tensor[(378, 2), float32]) -> (Tensor[(13, 12, 11), float32], float32, Tensor[(384), float32], Tensor[(378, ?), int64], Tensor[(4, 8, 14), float64], Tensor[(384), float64], Tensor[(378, 2), bool], Tensor[(378, 448), bool], Tensor[(600), float32], Tensor[(384), float64]) {
  %1131 = fn (%var_2739: float32, %var_2740: Tensor[(384), float32], %var_2771: Tensor[(448), float64], %var_2820: Tensor[(378, 2), float32]) -> (Tensor[(13, 12, 11), float32], float32, Tensor[(384), float32], Tensor[(378, ?), int64], Tensor[(4, 8, 14), float64], Tensor[(384), float64], Tensor[(378, 2), bool], Tensor[(378, 448), bool], Tensor[(600), float32], Tensor[(384), float64]) {
    %1076 = @func_2695() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1077 = %1076.0;
    %1078 = cast(%1077, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
    %1079 = cast(%var_2739, dtype="float32") /* ty=float32 */;
    %1080 = cast(%var_2740, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1081 = reshape(%1079, newshape=[]) /* ty=float32 */;
    %1082 = reshape(%1080, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1083 = @func_2602(%1081, %1082) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
    %1084 = %1083.4;
    %1085 = cast(%1084, dtype="float64") /* ty=Tensor[(378, 1), float64] */;
    %1086 = sigmoid(%1085) /* ty=Tensor[(378, 1), float64] */;
    %1087 = cast(%1084, dtype="int64") /* ty=Tensor[(378, 1), int64] */;
    %1088 = shape_of(%1086, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1089 = cast(%1086, dtype="int64") /* ty=Tensor[(378, 1), int64] */;
    %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1091 = cast(%var_2771, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1092 = reshape(%1091, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), float64] */;
    %1093 = @func_147(%1092) /* ty=(Tensor[(4, 8, 14), float64],) */;
    %1094 = cast(%var_2739, dtype="float32") /* ty=float32 */;
    %1095 = cast(%var_2740, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1096 = reshape(%1094, newshape=[]) /* ty=float32 */;
    %1097 = reshape(%1095, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1098 = @func_2602(%1096, %1097) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
    %1099 = cast(%1086, dtype="float32") /* ty=Tensor[(378, 1), float32] */;
    %1100 = exp(%1099) /* ty=Tensor[(378, 1), float32] */;
    %1101 = cast(%1100, dtype="bool") /* ty=Tensor[(378, 1), bool] */;
    %1102 = cast(%var_2820, dtype="bool") /* ty=Tensor[(378, 2), bool] */;
    %1103 = cast(%1100, dtype="int32") /* ty=Tensor[(378, 1), int32] */;
    %1104 = cast(%var_2771, dtype="int32") /* ty=Tensor[(448), int32] */;
    %1105 = bitwise_xor(%1103, %1104) /* ty=Tensor[(378, 448), int32] */;
    %1106 = cast(%var_2771, dtype="float32") /* ty=Tensor[(448), float32] */;
    %1107 = cast(%1086, dtype="float32") /* ty=Tensor[(378, 1), float32] */;
    %1108 = mod(%1106, %1107) /* ty=Tensor[(378, 448), float32] */;
    %1109 = cast(%1108, dtype="bool") /* ty=Tensor[(378, 448), bool] */;
    %1110 = shape_of(%1105, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1111 = cast(%1105, dtype="bool") /* ty=Tensor[(378, 448), bool] */;
    %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1113 = cast(%var_2739, dtype="float32") /* ty=float32 */;
    %1114 = %1098.5;
    %1115 = cast(%1114, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1116 = reshape(%1113, newshape=[]) /* ty=float32 */;
    %1117 = reshape(%1115, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1118 = @func_2602(%1116, %1117) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
    %1119 = cast(%var_2739, dtype="float32") /* ty=float32 */;
    %1120 = cast(%var_2740, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1121 = reshape(%1119, newshape=[]) /* ty=float32 */;
    %1122 = reshape(%1120, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1123 = @func_2602(%1121, %1122) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
    %1124 = log2(%1078) /* ty=Tensor[(13, 12, 11), float32] */;
    %1125 = right_shift(%1089, %1090) /* ty=Tensor[(378, ?), int64] */;
    %1126 = %1093.0;
    %1127 = logical_and(%1101, %1102) /* ty=Tensor[(378, 2), bool] */;
    %1128 = equal(%1111, %1112) /* ty=Tensor[(378, 448), bool] */;
    %1129 = %1118.2;
    %1130 = %1123.5;
    (%1124, %var_2739, %var_2740, %1125, %1126, %1114, %1127, %1128, %1129, %1130)
  };
  %1131(%var_2863, %var_2864, %var_2865, %var_2866) /* ty=(Tensor[(13, 12, 11), float32], float32, Tensor[(384), float32], Tensor[(378, ?), int64], Tensor[(4, 8, 14), float64], Tensor[(384), float64], Tensor[(378, 2), bool], Tensor[(378, 448), bool], Tensor[(600), float32], Tensor[(384), float64]) */
}

def @func_8851(%var_8850: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(378, 1), uint32], float32, Tensor[(384), float32], Tensor[(2730), float32]) {
  %1141 = fn (%var_8833: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(378, 1), uint32], float32, Tensor[(384), float32], Tensor[(2730), float32]) {
    %1132 = cast(-2.20637f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1133 = cast(%var_8833, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1134 = reshape(%1132, newshape=[]) /* ty=float32 */;
    %1135 = reshape(%1133, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1136 = @func_2602(%1134, %1135) /* ty=(Tensor[(286, 6), int32], Tensor[(5, 8, 15), int16], Tensor[(600), float32], float32, Tensor[(378, 1), uint32], Tensor[(384), float64], Tensor[(9, 3, 14), uint32]) */;
    %1137 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
    %1138 = @func_4010() /* ty=Tensor[(13, 12, 11), float64] */;
    %1139 = %1136.4;
    %1140 = %1137.0;
    (%1138, %1139, -2.20637f /* ty=float32 */, %var_8833, %1140)
  };
  %1141(%var_8850) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(378, 1), uint32], float32, Tensor[(384), float32], Tensor[(2730), float32]) */
}

def @func_12025(%var_12014: uint8) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 14, 15), bool], uint8) {
  %1142 = cast(%var_12014, dtype="uint8") /* ty=uint8 */;
  %1143 = @func_6363() /* ty=Tensor[(2730), float32] */;
  %1144 = cast(%1143, dtype="uint8") /* ty=Tensor[(2730), uint8] */;
  %1145 = reshape(%1142, newshape=[]) /* ty=uint8 */;
  %1146 = reshape(%1144, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), uint8] */;
  %1147 = @func_1022(%1145, %1146) /* ty=(Tensor[(13, 14, 15), bool],) */;
  %1148 = @func_4852() /* ty=Tensor[(2730), float32] */;
  %1149 = %1147.0;
  (%1148, %1143, %1149, %var_12014)
}

def @func_150(%var_148: Tensor[(4, 8, 14), float64]) -> (Tensor[(4, 8, 14), float64],) {
  @func_147(%var_148) /* ty=(Tensor[(4, 8, 14), float64],) */
}

def @func_9501() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %1150 = @func_4339() /* ty=(Tensor[(2730), float32],) */;
  %1151 = @func_5881() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1152 = %1150.0;
  %1153 = %1151.0;
  (%1152, %1153)
}

def @func_2944() -> Tensor[(2730), uint8] {
  %1155 = fn () -> Tensor[(2730), uint8] {
    %1154 = @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */;
    %1154.3
  };
  %1155() /* ty=Tensor[(2730), uint8] */
}

def @func_13229() -> Tensor[(13, 12, 11), float64] {
  %1156 = @func_5526() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1156.0
}

def @func_4972() -> (Tensor[(2730), float32],) {
  @func_4970() /* ty=(Tensor[(2730), float32],) */
}

def @func_6500() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) {
  %1163 = fn () -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) {
    %1157 = @func_5568() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(280), float64], Tensor[(384), float32]) */;
    %1158 = cast(meta[relay.Constant][60] /* ty=Tensor[(945), float32] */, dtype="float32") /* ty=Tensor[(945), float32] */;
    %1159 = reshape(%1158, newshape=[15, 63]) /* ty=Tensor[(15, 63), float32] */;
    %1160 = @func_3497(%1159) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(15, 63), float32]) */;
    %1161 = %1157.0;
    %1162 = %1160.0;
    (%1161, %1162, meta[relay.Constant][60] /* ty=Tensor[(945), float32] */)
  };
  %1163() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(945), float32]) */
}

def @func_4012() -> Tensor[(13, 12, 11), float64] {
  @func_4010() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_11006() -> (Tensor[(2730), float32],) {
  %1164 = @func_4526() /* ty=Tensor[(2730), float32] */;
  (%1164,)
}

def @func_7478() -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  %1172 = fn () -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
    %1165 = @func_7392() /* ty=(Tensor[(2730), float32],) */;
    %1166 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
    %1167 = @func_6692() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64]) */;
    %1168 = %1165.0;
    %1169 = %1166.0;
    %1170 = @func_4526() /* ty=Tensor[(2730), float32] */;
    %1171 = %1167.2;
    (%1168, %1169, %1170, %1171)
  };
  %1172() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_4431() -> Tensor[(6, 3, 16), float32] {
  %1173 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 3, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  atan(%1173) /* ty=Tensor[(6, 3, 16), float32] */
}

def @func_7543() -> (Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  %1174 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1175 = cast(meta[relay.Constant][62] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %1176 = reshape(%1175, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %1177 = %1174.0;
  %1178 = @func_3777(%1176) /* ty=Tensor[(15, 10, 3), bool] */;
  (%1177, %1178, meta[relay.Constant][62] /* ty=Tensor[(450), int16] */)
}

def @func_10266() -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) {
  @func_10264() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float32], Tensor[(378), uint32], Tensor[(2730), float32]) */
}

def @func_7820() -> (Tensor[(450), int16], Tensor[(13, 12, 11), float32]) {
  %1179 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
  %1180 = %1179.2;
  %1181 = cast(%1180, dtype="int16") /* ty=Tensor[(450), int16] */;
  %1182 = reshape(%1181, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
  %1183 = @func_6663(%1182) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
  %1184 = %1183.7;
  (%1180, %1184)
}

def @func_7027() -> Tensor[(13, 12, 11), float64] {
  %1185 = @func_5526() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1185.0
}

def @func_10323() -> (Tensor[(2730), float32],) {
  @func_10321() /* ty=(Tensor[(2730), float32],) */
}

def @func_3379(%var_3338: Tensor[(4, 16, 7), float64]) -> (Tensor[(4, 16, 7), float64], Tensor[(4, 16, 7), float32]) {
  %1186 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 16, 7), float64] */;
  %1187 = cast(%var_3338, dtype="uint8") /* ty=Tensor[(4, 16, 7), uint8] */;
  %1188 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(4, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 16, 7), float64] */, dtype="uint8") /* ty=Tensor[(4, 16, 7), uint8] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1191 = bitwise_and(%1189, %1190) /* ty=Tensor[(4, 16, 7), uint8] */;
  %1192 = cast(%1191, dtype="float32") /* ty=Tensor[(4, 16, 7), float32] */;
  %1193 = asinh(%1186) /* ty=Tensor[(4, 16, 7), float64] */;
  %1194 = acosh(%1192) /* ty=Tensor[(4, 16, 7), float32] */;
  (%1193, %1194)
}

def @func_4684(%var_4682: Tensor[(13, 12, 11), float64]) -> Tensor[(13, 12, 11), bool] {
  @func_4681(%var_4682) /* ty=Tensor[(13, 12, 11), bool] */
}

def @func_5626() -> (Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  @func_5624() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */
}

def @func_10346(%var_10344: Tensor[(50, 9), int16]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(50, 9), int16], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  @func_10343(%var_10344) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(50, 9), int16], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */
}

def @func_10612() -> (Tensor[(2730), float32],) {
  @func_10610() /* ty=(Tensor[(2730), float32],) */
}

def @func_5211() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) {
  @func_5209() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), float64]) */
}

def @func_12686() -> (Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) {
  %1195 = @func_11138() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(4, 8, 14), float64], Tensor[(448), float64]) */;
  %1196 = cast(meta[relay.Constant][64] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
  %1197 = reshape(%1196, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %1198 = %1195.0;
  %1199 = @func_3777(%1197) /* ty=Tensor[(15, 10, 3), bool] */;
  (%1198, %1199, meta[relay.Constant][64] /* ty=Tensor[(450), int16] */)
}

def @func_3115() -> Tensor[(13, 12, 11), float64] {
  @func_3113() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_5744(%var_5742: Tensor[(15, 2, 10), int16]) -> (Tensor[(15, 2, 10), int16], Tensor[(13, 12, 11), float64]) {
  @func_5741(%var_5742) /* ty=(Tensor[(15, 2, 10), int16], Tensor[(13, 12, 11), float64]) */
}

def @func_8927(%var_8926: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(6, 2, 15), float64]) {
  %1208 = fn (%var_8916: Tensor[(1716), float64]) -> (Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(6, 2, 15), float64]) {
    %1200 = cast(%var_8916, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %1201 = reshape(%1200, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %1202 = @func_7776(%1201) /* ty=(Tensor[(13, 12, 11), bool], Tensor[(2730), float32]) */;
    %1203 = cast(meta[relay.Constant][65] /* ty=Tensor[(6, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(6, 2, 15), float32] */;
    %1204 = asinh(%1203) /* ty=Tensor[(6, 2, 15), float32] */;
    %1205 = cast(%1204, dtype="float64") /* ty=Tensor[(6, 2, 15), float64] */;
    %1206 = %1202.1;
    %1207 = log2(%1205) /* ty=Tensor[(6, 2, 15), float64] */;
    (%1206, %var_8916, %1207)
  };
  %1208(%var_8926) /* ty=(Tensor[(2730), float32], Tensor[(1716), float64], Tensor[(6, 2, 15), float64]) */
}

def @func_4126(%var_4106: Tensor[(2730), float32]) -> (Tensor[(286, 6), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32]) {
  %1209 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
  %1210 = @func_3411() /* ty=(Tensor[(2730), float32],) */;
  %1211 = %1210.0;
  %1212 = cast(%var_4106, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %1213 = shape_of(%1211, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1214 = cast(%1211, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %1215 = dyn.reshape(%1212, %1213, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1216 = %1209.2;
  %1217 = @func_2931() /* ty=Tensor[(13, 12, 11), float64] */;
  %1218 = power(%1214, %1215) /* ty=Tensor[(2730), float32] */;
  (%1216, %1217, %1218)
}

def @func_2696() -> (Tensor[(13, 12, 11), float64],) {
  %1221 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %1219 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
    %1220 = %1219.1;
    (%1220,)
  };
  %1221() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_3604() -> (Tensor[(13, 12, 11), float64],) {
  %1222 = @func_3072() /* ty=(Tensor[(13, 12, 11), float64],) */;
  %1223 = %1222.0;
  (%1223,)
}

def @func_8152() -> (Tensor[(1716), float64], Tensor[(13, 12, 11), float64], Tensor[(450), int16]) {
  %1230 = fn () -> (Tensor[(1716), float64], Tensor[(13, 12, 11), float64], Tensor[(450), int16]) {
    %1224 = @func_4379() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
    %1225 = cast(meta[relay.Constant][66] /* ty=Tensor[(450), int16] */, dtype="int16") /* ty=Tensor[(450), int16] */;
    %1226 = reshape(%1225, newshape=[450, 1]) /* ty=Tensor[(450, 1), int16] */;
    %1227 = @func_6663(%1226) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(15, 10, 3), bool], Tensor[(450, 1), int16], Tensor[(2730), float32], Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(13, 12, 11), float32]) */;
    %1228 = %1224.2;
    %1229 = %1227.4;
    (%1228, %1229, meta[relay.Constant][66] /* ty=Tensor[(450), int16] */)
  };
  %1230() /* ty=(Tensor[(1716), float64], Tensor[(13, 12, 11), float64], Tensor[(450), int16]) */
}

def @func_11589() -> (Tensor[(2730), float32], Tensor[(2730), uint8]) {
  @func_11587() /* ty=(Tensor[(2730), float32], Tensor[(2730), uint8]) */
}

def @func_9311(%var_9309: Tensor[(3, 10, 15), float32], %var_9310: Tensor[(3, 10, 15), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) {
  %1254 = fn (%var_9249: Tensor[(3, 10, 15), float32], %var_9294: Tensor[(3, 10, 15), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) {
    %1231 = cast(%var_9249, dtype="float32") /* ty=Tensor[(3, 10, 15), float32] */;
    %1232 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(3, 10, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1233 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 15), float32] */;
    %1234 = dyn.reshape(%1231, %1232, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1235 = floor_mod(%1233, %1234) /* ty=Tensor[(3, 10, 15), float32] */;
    %1236 = cast(%var_9249, dtype="uint64") /* ty=Tensor[(3, 10, 15), uint64] */;
    %1237 = shape_of(%1235, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1238 = cast(%1235, dtype="uint64") /* ty=Tensor[(3, 10, 15), uint64] */;
    %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1240 = cast(%var_9249, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
    %1241 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(3, 10, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1242 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 10, 15), float32] */, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
    %1243 = dyn.reshape(%1240, %1241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1244 = greater(%1242, %1243) /* ty=Tensor[(3, 10, 15), bool] */;
    %1245 = cast(%1244, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
    %1246 = exp(%1245) /* ty=Tensor[(3, 10, 15), float64] */;
    %1247 = cast(%var_9294, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
    %1248 = shape_of(%1246, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1249 = cast(%1246, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
    %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1251 = @func_7027() /* ty=Tensor[(13, 12, 11), float64] */;
    %1252 = subtract(%1238, %1239) /* ty=Tensor[(3, 10, 15), uint64] */;
    %1253 = greater_equal(%1249, %1250) /* ty=Tensor[(3, 10, 15), bool] */;
    (%1251, %1252, %1253)
  };
  %1254(%var_9309, %var_9310) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(3, 10, 15), uint64], Tensor[(3, 10, 15), bool]) */
}

def @func_4071() -> (Tensor[(13, 12, 11), float64],) {
  @func_4069() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_6751() -> (Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), int64], Tensor[(1694), float32]) {
  %1265 = fn () -> (Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), int64], Tensor[(1694), float32]) {
    %1255 = @func_5526() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1256 = cast(meta[relay.Constant][68] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1257 = cast(meta[relay.Constant][68] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1258 = cast(meta[relay.Constant][68] /* ty=Tensor[(1694), float32] */, dtype="float32") /* ty=Tensor[(1694), float32] */;
    %1259 = reshape(%1256, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
    %1260 = reshape(%1257, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
    %1261 = reshape(%1258, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float32] */;
    %1262 = @func_5664(%1259, %1260, %1261) /* ty=(Tensor[(11, 14, 11), float32], Tensor[(11, 14, 11), int64]) */;
    %1263 = %1255.0;
    %1264 = %1262.1;
    (%1263, %1264, meta[relay.Constant][68] /* ty=Tensor[(1694), float32] */)
  };
  %1265() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(11, 14, 11), int64], Tensor[(1694), float32]) */
}

def @func_8080() -> Tensor[(2730), float32] {
  %1267 = fn () -> Tensor[(2730), float32] {
    %1266 = @func_6015() /* ty=(Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32]) */;
    %1266.2
  };
  %1267() /* ty=Tensor[(2730), float32] */
}

def @func_5496(%var_5486: Tensor[(3, 126), uint32]) -> (Tensor[(2730), uint8], Tensor[(2730), float32], Tensor[(9, 3, 14), uint32], Tensor[(3, 126), uint32], Tensor[(15, 10, 3), bool], Tensor[(5, 90), int16]) {
  %1268 = @func_4379() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */;
  %1269 = cast(%var_5486, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %1270 = cast(%var_5486, dtype="uint32") /* ty=Tensor[(3, 126), uint32] */;
  %1271 = reshape(%1269, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %1272 = reshape(%1270, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
  %1273 = @func_917(%1271, %1272) /* ty=(Tensor[(9, 3, 14), uint32],) */;
  %1274 = cast(meta[relay.Constant][69] /* ty=Tensor[(5, 90), int16] */, dtype="int16") /* ty=Tensor[(5, 90), int16] */;
  %1275 = reshape(%1274, newshape=[15, 10, 3]) /* ty=Tensor[(15, 10, 3), int16] */;
  %1276 = @func_2943() /* ty=Tensor[(2730), uint8] */;
  %1277 = %1268.0;
  %1278 = %1273.0;
  %1279 = @func_3777(%1275) /* ty=Tensor[(15, 10, 3), bool] */;
  (%1276, %1277, %1278, %var_5486, %1279, meta[relay.Constant][69] /* ty=Tensor[(5, 90), int16] */)
}

def @func_4380() -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) {
  %1286 = fn () -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) {
    %1280 = @func_3045() /* ty=(Tensor[(2730), float32],) */;
    %1281 = cast(meta[relay.Constant][70] /* ty=Tensor[(1716), float64] */, dtype="float64") /* ty=Tensor[(1716), float64] */;
    %1282 = reshape(%1281, newshape=[13, 12, 11]) /* ty=Tensor[(13, 12, 11), float64] */;
    %1283 = @func_3103(%1282) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint32], Tensor[(13, 12, 11), uint16]) */;
    %1284 = %1280.0;
    %1285 = %1283.2;
    (%1284, %1285, meta[relay.Constant][70] /* ty=Tensor[(1716), float64] */)
  };
  %1286() /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint16], Tensor[(1716), float64]) */
}

def @func_11729(%var_11727: Tensor[(768), float64], %var_11728: Tensor[(48, 8), float32]) -> (Tensor[(15, 10, 3), bool], Tensor[(11, 8, 14), bool], Tensor[(1232), uint32], Tensor[(280, 1), float64], Tensor[(768), float64], Tensor[(48, 8), float32]) {
  %1298 = fn (%var_11714: Tensor[(768), float64], %var_11715: Tensor[(48, 8), float32]) -> (Tensor[(15, 10, 3), bool], Tensor[(11, 8, 14), bool], Tensor[(1232), uint32], Tensor[(280, 1), float64], Tensor[(768), float64], Tensor[(48, 8), float32]) {
    %1287 = @func_7543() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(15, 10, 3), bool], Tensor[(450), int16]) */;
    %1288 = cast(meta[relay.Constant][71] /* ty=Tensor[(1232), uint32] */, dtype="uint32") /* ty=Tensor[(1232), uint32] */;
    %1289 = reshape(%1288, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), uint32] */;
    %1290 = cast(%var_11714, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1291 = cast(%var_11715, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
    %1292 = reshape(%1290, newshape=[4, 16, 12]) /* ty=Tensor[(4, 16, 12), float64] */;
    %1293 = reshape(%1291, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1294 = @func_9395(%1292, %1293) /* ty=(Tensor[(2730), float32], Tensor[(384), float64], Tensor[(280, 1), float64], Tensor[(384), float32], Tensor[(4, 16, 12), int8]) */;
    %1295 = %1287.1;
    %1296 = @func_10429(%1289) /* ty=Tensor[(11, 8, 14), bool] */;
    %1297 = %1294.2;
    (%1295, %1296, meta[relay.Constant][71] /* ty=Tensor[(1232), uint32] */, %1297, %var_11714, %var_11715)
  };
  %1298(%var_11727, %var_11728) /* ty=(Tensor[(15, 10, 3), bool], Tensor[(11, 8, 14), bool], Tensor[(1232), uint32], Tensor[(280, 1), float64], Tensor[(768), float64], Tensor[(48, 8), float32]) */
}

def @func_8904(%var_8902: Tensor[(448), float64]) -> (Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(1694), float32], Tensor[(448), float64], Tensor[(1694), float32]) {
  @func_8901(%var_8902) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(13, 12, 11), float64], Tensor[(1694), float32], Tensor[(448), float64], Tensor[(1694), float32]) */
}

def @func_12290(%var_12287: Tensor[(378), uint32], %var_12288: Tensor[(2156), uint8]) -> (Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(3, 126), int64], Tensor[(378), uint32], Tensor[(2156), uint8]) {
  %1299 = @func_10168() /* ty=(Tensor[(6, 3, 16), float32], Tensor[(2730), float32]) */;
  %1300 = @func_10321() /* ty=(Tensor[(2730), float32],) */;
  %1301 = cast(%var_12287, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %1302 = cast(%var_12288, dtype="uint8") /* ty=Tensor[(2156), uint8] */;
  %1303 = reshape(%1301, newshape=[378]) /* ty=Tensor[(378), uint32] */;
  %1304 = reshape(%1302, newshape=[2156]) /* ty=Tensor[(2156), uint8] */;
  %1305 = @func_8454(%1303, %1304) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), float32], Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(448), float64], Tensor[(2156), uint8], Tensor[(105, 9), float32], Tensor[(3, 126), int64]) */;
  %1306 = %1299.1;
  %1307 = %1300.0;
  %1308 = %1305.9;
  (%1306, %1307, %1308, %var_12287, %var_12288)
}

def @func_9656(%var_9654: Tensor[(4, 112), float64], %var_9655: Tensor[(286, 6), float64]) -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), uint8], Tensor[(286, 6), float64], Tensor[(1694), float32], Tensor[(4, 112), bool], Tensor[(1716), float64], Tensor[(13, 12, 11), float64]) {
  @func_9652(%var_9654, %var_9655) /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), uint8], Tensor[(286, 6), float64], Tensor[(1694), float32], Tensor[(4, 112), bool], Tensor[(1716), float64], Tensor[(13, 12, 11), float64]) */
}

def @func_4619() -> (Tensor[(6, 3, 16), float32],) {
  @func_4617() /* ty=(Tensor[(6, 3, 16), float32],) */
}

def @func_11381(%var_11380: Tensor[(13, 12, 11), float64]) -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint64]) {
  %1317 = fn (%var_11372: Tensor[(13, 12, 11), float64]) -> (Tensor[(2730), float32], Tensor[(13, 12, 11), uint64]) {
    %1309 = @func_7835() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1310 = %1309.0;
    %1311 = cast(%var_11372, dtype="uint64") /* ty=Tensor[(13, 12, 11), uint64] */;
    %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1313 = cast(%1310, dtype="uint64") /* ty=Tensor[(13, 12, 11), uint64] */;
    %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1315 = @func_7721() /* ty=Tensor[(2730), float32] */;
    %1316 = left_shift(%1313, %1314) /* ty=Tensor[(13, 12, 11), uint64] */;
    (%1315, %1316)
  };
  %1317(%var_11380) /* ty=(Tensor[(2730), float32], Tensor[(13, 12, 11), uint64]) */
}

def @func_13243() -> (Tensor[(13, 12, 11), float32], Tensor[(2730), float64]) {
  %1318 = @func_5088() /* ty=(Tensor[(13, 12, 11), float32], Tensor[(2730), float32]) */;
  %1319 = @func_9983() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */;
  %1320 = %1318.0;
  %1321 = %1319.0;
  (%1320, %1321)
}

def @func_3994(%var_3993: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(384), float64], Tensor[(280), float64], Tensor[(384), float32]) {
  %1330 = fn (%var_3990: Tensor[(384), float32]) -> (Tensor[(13, 12, 11), float64], Tensor[(384), float64], Tensor[(280), float64], Tensor[(384), float32]) {
    %1322 = @func_2916() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1323 = cast(meta[relay.Constant][72] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %1324 = cast(%var_3990, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1325 = reshape(%1323, newshape=[280]) /* ty=Tensor[(280), float64] */;
    %1326 = reshape(%1324, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1327 = @func_3711(%1325, %1326) /* ty=(Tensor[(13, 12, 11), float32], Tensor[(280), float64], float32, Tensor[(384), float32], Tensor[(384), float64], Tensor[(2, 14, 10), float64], Tensor[(2730), float32]) */;
    %1328 = %1322.0;
    %1329 = %1327.4;
    (%1328, %1329, meta[relay.Constant][72] /* ty=Tensor[(280), float64] */, %var_3990)
  };
  %1330(%var_3993) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(384), float64], Tensor[(280), float64], Tensor[(384), float32]) */
}

def @func_3382(%var_3380: Tensor[(4, 16, 7), float64]) -> (Tensor[(4, 16, 7), float64], Tensor[(4, 16, 7), float32]) {
  @func_3379(%var_3380) /* ty=(Tensor[(4, 16, 7), float64], Tensor[(4, 16, 7), float32]) */
}

def @func_9984() -> (Tensor[(2730), float64], Tensor[(2730), float32]) {
  %1334 = fn () -> (Tensor[(2730), float64], Tensor[(2730), float32]) {
    %1331 = @func_6175() /* ty=(Tensor[(2730), float32],) */;
    %1332 = @func_2963() /* ty=Tensor[(2730), float64] */;
    %1333 = %1331.0;
    (%1332, %1333)
  };
  %1334() /* ty=(Tensor[(2730), float64], Tensor[(2730), float32]) */
}

def @func_2486(%var_2482: Tensor[(5, 8, 15), float32], %var_2483: float32, %var_2484: Tensor[(12, 32), float32], %var_2485: Tensor[(378), uint32]) -> (Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
  %1355 = fn (%var_2448: Tensor[(5, 8, 15), float32], %var_2458: float32, %var_2459: Tensor[(12, 32), float32], %var_2476: Tensor[(378), uint32]) -> (Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) {
    %1335 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
    %1336 = %1335.0;
    %1337 = cast(%var_2448, dtype="int16") /* ty=Tensor[(5, 8, 15), int16] */;
    %1338 = shape_of(%1336, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1339 = cast(%1336, dtype="int16") /* ty=Tensor[(5, 8, 15), int16] */;
    %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1341 = @func_2438() /* ty=(Tensor[(5, 8, 15), float32], Tensor[(13, 12, 11), float64], Tensor[(286, 6), float64]) */;
    %1342 = cast(%var_2458, dtype="float32") /* ty=float32 */;
    %1343 = cast(%var_2459, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
    %1344 = reshape(%1342, newshape=[]) /* ty=float32 */;
    %1345 = reshape(%1343, newshape=[8, 12, 4]) /* ty=Tensor[(8, 12, 4), float32] */;
    %1346 = cast(%var_2476, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %1347 = cast(%var_2476, dtype="uint32") /* ty=Tensor[(378), uint32] */;
    %1348 = reshape(%1346, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
    %1349 = reshape(%1347, newshape=[9, 3, 14]) /* ty=Tensor[(9, 3, 14), uint32] */;
    %1350 = @func_917(%1348, %1349) /* ty=(Tensor[(9, 3, 14), uint32],) */;
    %1351 = multiply(%1339, %1340) /* ty=Tensor[(5, 8, 15), int16] */;
    %1352 = %1341.2;
    %1353 = @func_1173(%1344, %1345) /* ty=Tensor[(8, 12, 4), float32] */;
    %1354 = %1350.0;
    (%1351, %1352, %1353, %var_2458, %var_2459, %1354, %var_2476)
  };
  %1355(%var_2482, %var_2483, %var_2484, %var_2485) /* ty=(Tensor[(5, 8, 15), int16], Tensor[(286, 6), float64], Tensor[(8, 12, 4), float32], float32, Tensor[(12, 32), float32], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */
}

def @func_2540() -> (Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) {
  @func_2538() /* ty=(Tensor[(286, 6), int32], Tensor[(13, 14, 15), bool], uint8, Tensor[(2730), uint8]) */
}

def @func_7754() -> Tensor[(13, 12, 11), float32] {
  %1362 = fn () -> Tensor[(13, 12, 11), float32] {
    %1356 = @func_7344() /* ty=(Tensor[(13, 12, 11), float64],) */;
    %1357 = %1356.0;
    %1358 = cast(meta[relay.Constant][73] /* ty=Tensor[(13, 12, 11), float64] */, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
    %1359 = shape_of(%1357, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1360 = cast(%1357, dtype="float32") /* ty=Tensor[(13, 12, 11), float32] */;
    %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%1360, %1361) /* ty=Tensor[(13, 12, 11), float32] */
  };
  %1362() /* ty=Tensor[(13, 12, 11), float32] */
}

def @func_6821() -> Tensor[(2730), float32] {
  @func_3251() /* ty=Tensor[(2730), float32] */
}

def @func_12375() -> Tensor[(2730), float32] {
  @func_12373() /* ty=Tensor[(2730), float32] */
}

def @func_12457(%var_12455: uint8) -> (Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(2730), float32], uint8, Tensor[(13, 12, 11), float64], Tensor[(378), uint32], Tensor[(1, 450), int16], Tensor[(13, 12, 11), float32]) {
  @func_12454(%var_12455) /* ty=(Tensor[(13, 12, 11), float64], Tensor[(2730), float32], Tensor[(2730), float32], uint8, Tensor[(13, 12, 11), float64], Tensor[(378), uint32], Tensor[(1, 450), int16], Tensor[(13, 12, 11), float32]) */
}

def @func_7029() -> Tensor[(13, 12, 11), float64] {
  @func_7027() /* ty=Tensor[(13, 12, 11), float64] */
}

def @func_5355() -> (Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) {
  @func_5353() /* ty=(Tensor[(2730), uint8], Tensor[(13, 12, 11), float64], Tensor[(1716), float64]) */
}

def @func_13385() -> (Tensor[(13, 12, 11), float64],) {
  @func_13383() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_7836() -> (Tensor[(13, 12, 11), float64],) {
  %1365 = fn () -> (Tensor[(13, 12, 11), float64],) {
    %1363 = @func_5624() /* ty=(Tensor[(13, 12, 11), float64], Tensor[(9, 3, 14), uint32], Tensor[(378), uint32]) */;
    %1364 = %1363.0;
    (%1364,)
  };
  %1365() /* ty=(Tensor[(13, 12, 11), float64],) */
}

def @func_4653(%var_4651: Tensor[(2, 13, 8), float64]) -> Tensor[(2, 13, 8), float64] {
  @func_4650(%var_4651) /* ty=Tensor[(2, 13, 8), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen572/build/output.py:3988: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen572/build/output.py", line 3993, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(150) tvmgen_default_fused_erf_kernel0(float* __restrict__ T_erf, float* __restrict__ placeholder) {
  T_erf[(((int)threadIdx.x))] = erff(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


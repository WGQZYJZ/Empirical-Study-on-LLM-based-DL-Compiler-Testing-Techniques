import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_114 = relay.var("var_114", dtype = "float32", shape = (7, 11, 4))#candidate|114|(7, 11, 4)|var|float32
uop_115 = relay.acosh(var_114.astype('float32')) # shape=(7, 11, 4)
output = relay.Tuple([uop_115,])
output2 = relay.Tuple([uop_115,])
func_125 = relay.Function([var_114,], output)
mod['func_125'] = func_125
mod = relay.transform.InferType()(mod)
var_126 = relay.var("var_126", dtype = "float32", shape = (7, 11, 4))#candidate|126|(7, 11, 4)|var|float32
output = func_125(var_126)
func_127 = relay.Function([var_126], output)
mutated_mod['func_127'] = func_127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_149 = relay.var("var_149", dtype = "float64", shape = (11, 14, 8))#candidate|149|(11, 14, 8)|var|float64
uop_150 = relay.cos(var_149.astype('float64')) # shape=(11, 14, 8)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
const_153 = relay.const([-1.434757,-4.918589,4.881476,-7.030216,3.470799,-9.002484,2.440709,-8.143554,8.746756,1.517877,5.252374,3.828065,6.773405,-6.172162,3.061301,2.320285,5.038414,6.921561,-8.944755,8.163674,-2.632131,-3.841389,4.259849,5.026563,-1.078538,-3.103995,-9.432307,-8.179561,6.162982,2.234633,6.975449,7.611387,-0.175373,6.653741,-7.154705,-7.463437,5.348501,6.389006,3.838748,7.732097,5.347693,3.845669,9.259882,4.896613,3.351556,-5.553420,8.957300,0.703171,-9.948980,3.140809,-9.923385,4.738422,-5.676333,-7.919884,-6.713721,0.695023,9.251721,7.832960,1.250410,9.215344,5.939226,7.494695,2.681231,-9.834783,-0.295543,3.298639,2.476220,-1.830570,7.417727,-5.939864,-5.653657,2.731567,-1.491900,8.520416,6.674056,-2.517112,-7.337952,-1.694044,4.772486,3.520682,-8.279171,-3.560215,9.111457,7.773581,8.750957,-2.525986,-0.748658,5.606260,4.129943,-6.447586,2.655893,4.195476,-0.802591,-1.989193,3.190373,7.167689,-7.995473,9.595630,-9.753503,-0.258630,-2.462960,-6.922230,-6.794282,-4.318113,-1.434429,-9.826903,9.124053,1.937627,8.229285,4.392436,4.096814,-2.155173,-1.076941,5.721297,8.173686,-0.355678,7.020421,-8.619265,-5.693864,8.263487,9.258937,9.057155,9.588941,-5.424019,-2.722368,9.175263,3.862860,0.888921,-4.360750,-4.822833,-2.308303,0.668485,8.691142,8.887354,-2.598708,-9.144824,-6.913347,1.088362,-8.196632,4.190896,9.602536,-0.646135,-1.227955,9.206406,1.940206,-1.261824,-0.845368,2.700057,1.799528,-9.159537,8.420062,4.976078,-7.079457,5.694712,7.854060,2.175070,-9.284014,9.894560,1.875330,2.240075,-9.020016,-1.231932,7.146275,4.034497,-5.756132,2.441962,-4.831011,6.067834,9.469997,-8.661685,1.390349,4.594586,2.865398,4.145908,0.528160,5.486255,-9.620432,8.023892,0.977904,3.603823,-5.853160,5.743389,6.130047,0.661321,-6.423025,7.992657,4.371184,7.980406,7.829305,7.664497,2.904581,4.346398,-7.054755,4.558378,3.756690,8.335092,0.592332,-1.862208,3.819109,0.324902,1.593207,-0.146163,-6.651374,-3.512343,-6.949988,-8.172254,-4.935690,6.210037,-9.415881,4.710020,9.868095,1.028879,8.315450,-4.206733,7.189077,-4.022109,-9.040361,3.973617,-8.547102,1.901666,5.004123,-9.527603,1.019788,-5.775611,2.354369,4.534116,-7.457414,9.484081,-3.937261,6.884871,-0.189454,4.248134,-6.918308,6.234795,-7.472930,6.467965,-0.698722,3.640572,0.356361,-7.391748,2.940143,-9.973208,-6.748720,-9.635697,2.862943,1.796884,1.148484,-0.948523,2.109250,3.649362,-7.352161,-6.159084,-8.468383,-9.441698,7.804546,-9.059316,-1.762518,1.335574,9.520492,-4.874086,2.394251,-8.632854,-3.668758,-2.639649,-2.194492,6.775255,-8.334735,4.308019,1.132100,-9.822343,-8.527402,-2.288415,5.467436,-2.851458,3.507086,6.919410,-0.717399,0.363793,1.598666,-6.367324,5.065090,-2.675878,0.312977,1.560301,-9.019665,-5.633282,-0.535709,9.901315,-5.006136,-4.197295,-2.441190,-0.909554,3.551005,5.342601,8.893835,-9.072986,9.350617,-0.397242,1.579483,-0.825355,9.144342,-6.611583,9.936614,-3.929116,5.344213,1.313752,-3.221332,-9.099855], dtype = "float32")#candidate|153|(308,)|const|float32
call_152 = relay.TupleGetItem(func_125_call(relay.reshape(const_153.astype('float32'), [7, 11, 4])), 0)
call_154 = relay.TupleGetItem(func_127_call(relay.reshape(const_153.astype('float32'), [7, 11, 4])), 0)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
call_164 = relay.TupleGetItem(func_125_call(relay.reshape(call_152.astype('float32'), [7, 11, 4])), 0)
call_165 = relay.TupleGetItem(func_127_call(relay.reshape(call_152.astype('float32'), [7, 11, 4])), 0)
output = relay.Tuple([uop_150,call_152,const_153,call_164,])
output2 = relay.Tuple([uop_150,call_154,const_153,call_165,])
func_166 = relay.Function([var_149,], output)
mod['func_166'] = func_166
mod = relay.transform.InferType()(mod)
var_167 = relay.var("var_167", dtype = "float64", shape = (11, 14, 8))#candidate|167|(11, 14, 8)|var|float64
output = func_166(var_167)
func_168 = relay.Function([var_167], output)
mutated_mod['func_168'] = func_168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1322 = relay.var("var_1322", dtype = "float64", shape = (12, 15, 3))#candidate|1322|(12, 15, 3)|var|float64
uop_1323 = relay.sin(var_1322.astype('float64')) # shape=(12, 15, 3)
output = uop_1323
output2 = uop_1323
func_1329 = relay.Function([var_1322,], output)
mod['func_1329'] = func_1329
mod = relay.transform.InferType()(mod)
var_1330 = relay.var("var_1330", dtype = "float64", shape = (12, 15, 3))#candidate|1330|(12, 15, 3)|var|float64
output = func_1329(var_1330)
func_1331 = relay.Function([var_1330], output)
mutated_mod['func_1331'] = func_1331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1446 = relay.var("var_1446", dtype = "uint8", shape = ())#candidate|1446|()|var|uint8
var_1447 = relay.var("var_1447", dtype = "uint8", shape = (14, 14, 8))#candidate|1447|(14, 14, 8)|var|uint8
bop_1448 = relay.maximum(var_1446.astype('uint8'), var_1447.astype('uint8')) # shape=(14, 14, 8)
output = relay.Tuple([bop_1448,])
output2 = relay.Tuple([bop_1448,])
func_1461 = relay.Function([var_1446,var_1447,], output)
mod['func_1461'] = func_1461
mod = relay.transform.InferType()(mod)
var_1462 = relay.var("var_1462", dtype = "uint8", shape = ())#candidate|1462|()|var|uint8
var_1463 = relay.var("var_1463", dtype = "uint8", shape = (14, 14, 8))#candidate|1463|(14, 14, 8)|var|uint8
output = func_1461(var_1462,var_1463,)
func_1464 = relay.Function([var_1462,var_1463,], output)
mutated_mod['func_1464'] = func_1464
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1574 = relay.const([[[-5.836553,-9.944983,-7.148725,-2.662691,1.605104,-4.439426,7.516141,-5.583261,8.073342],[-7.940758,-6.035587,-0.086468,8.890553,2.465797,4.926096,-8.800890,3.530898,9.784963],[7.676353,-0.898895,-5.597612,-1.361643,0.322821,1.494563,5.619165,5.562553,0.664894],[-4.108467,-4.588020,7.223420,-6.748452,-3.386038,4.426766,-6.099594,1.727802,7.032058],[2.644430,-1.410580,-0.775101,0.036798,6.736576,5.046929,5.779394,-2.743673,7.957311],[4.931857,7.752488,-7.306918,9.438363,0.598861,7.035360,-1.643029,7.060863,8.794734],[-1.689557,2.706871,3.238855,-5.297799,-9.259185,8.495987,5.937984,-0.725909,-5.612397],[9.224833,3.534466,-9.048705,1.864364,5.503358,6.514989,-3.116898,-2.826140,-6.643020],[-3.603030,-6.846518,5.439303,3.857281,-3.341768,6.634280,-0.878639,-4.757084,-6.341642],[-4.482692,5.553900,-5.210265,-2.946051,-6.922989,-5.813980,4.153734,-9.274674,1.014584]],[[5.407220,-0.796213,-9.517068,-7.223152,-5.423263,-3.094703,6.484914,-0.764192,7.219565],[-5.601465,5.250051,-1.233982,6.631735,-7.411092,9.555000,7.734069,-1.036874,-3.516782],[9.799687,3.936139,2.700845,-9.289471,-7.334113,7.537156,9.466328,-5.280975,-5.678365],[-9.853220,-4.943920,9.179830,1.731206,-7.583145,-9.330318,-4.957091,5.731816,1.447260],[-5.695788,0.318358,-6.072858,-7.554188,-1.498893,-5.989189,7.639892,-0.154450,-3.193360],[2.791484,-6.914082,7.701027,-3.492392,6.013985,-9.976141,-8.070276,-3.924618,3.743292],[-3.429871,1.825568,-4.684694,0.554263,-4.673208,6.559739,-1.906442,-7.668334,-9.015046],[6.140483,-1.136635,-1.984460,-8.847300,6.563744,6.725690,4.535940,-4.498621,-8.321559],[2.585751,-5.379797,-0.900118,-9.831948,-5.263670,3.349437,-5.102056,9.823255,7.570623],[0.118137,-2.868133,1.078523,-0.115894,1.024725,3.618586,1.163159,2.248068,-2.830497]],[[-7.217889,-3.176360,-3.281921,3.625404,9.712595,9.128448,1.682921,-2.804957,6.184121],[9.185164,-9.719265,-4.148979,-9.224339,-4.389133,5.525169,7.269162,7.671120,-5.548891],[-5.075504,0.472119,-8.302185,-4.119127,1.960425,8.968444,-8.881282,-7.018221,5.439361],[-3.724881,7.310584,0.984512,-7.493792,-2.964694,5.159618,1.251864,-5.518035,0.443888],[4.034545,-1.038238,-6.849522,7.999716,-1.409693,2.413507,-8.517887,-5.806549,4.290255],[-3.972336,-5.587715,3.793095,4.747367,0.138961,5.119022,-3.967465,2.063265,-0.568329],[-6.203197,-9.893791,1.209267,-0.072099,-3.299289,6.368519,-0.648989,7.436691,-7.229293],[-3.404430,4.945521,-7.288039,-0.534985,8.125168,9.720202,9.829642,5.640000,8.072835],[-4.192446,-1.863418,-1.512426,-0.851324,3.624407,6.052448,-3.231628,6.807579,-8.385497],[1.090200,-7.629057,-0.588477,-2.382927,1.344691,3.798633,-2.917438,-9.994480,-7.788026]],[[3.885304,2.833051,-4.474641,-2.786162,5.912487,-1.382641,5.668691,-1.451457,-7.865327],[-5.087918,0.313063,-6.618153,-9.154608,-6.149041,7.025329,7.391459,1.087988,1.151001],[5.229062,-6.206330,4.912692,-9.620956,-6.064771,-4.988233,8.292176,6.434212,-4.335871],[-1.319285,1.274692,2.764053,1.225087,4.755009,-8.732239,5.845819,-2.842856,-4.613861],[-8.292127,9.861397,0.485002,-1.821274,-3.939808,6.588469,0.146426,6.924193,-5.757062],[-8.729324,8.281980,-2.097365,-7.719554,9.008847,-0.978876,2.372566,9.133366,6.533863],[-0.268258,0.560969,-5.297463,-5.429095,-0.426557,-2.644737,-4.184808,7.166785,-8.639775],[5.883677,9.395385,5.876612,-8.365080,-1.984169,3.319704,1.791498,9.375202,-4.424603],[3.728528,-3.191640,-2.816172,5.158840,0.714475,-4.138780,-9.832815,-3.624151,6.124103],[6.063586,-4.007107,1.622561,-0.985087,-4.838959,8.423571,8.663123,9.948256,4.657216]],[[-6.148930,-4.537188,0.928745,7.132101,1.440634,5.063550,4.429400,-7.531817,-0.520900],[-5.318389,-8.537460,3.268945,8.160191,2.565787,-4.462444,8.926206,7.501139,-2.851815],[-7.450646,-6.508013,6.851206,-6.359292,3.225954,0.488778,-4.533245,-8.015468,-1.075991],[4.237340,-0.863743,-8.702347,7.173814,1.819397,4.479790,6.171014,0.087360,4.873790],[8.492714,5.410075,8.703670,-0.712894,-4.485097,-3.392215,-5.395639,6.521008,-8.480590],[7.073439,8.846877,-7.229917,-1.662719,-1.351823,-7.486658,9.879402,-5.324856,-4.617181],[2.216289,4.608596,0.538321,-5.437564,4.913872,-2.434363,5.651002,6.751861,-4.198349],[5.766174,9.107146,-9.798654,-7.079208,0.977983,-7.157548,-3.473315,0.650886,-9.050472],[6.886457,-5.357625,-9.988235,8.382294,1.750235,-7.366346,-4.697532,-1.205848,7.672160],[5.100219,-8.587583,-7.905700,-0.678578,-7.181933,3.185296,-3.030926,9.917534,6.887993]],[[0.539470,9.324119,-8.489507,-4.845100,-7.278963,-4.047709,6.240330,3.569438,6.168469],[1.314439,-2.987600,1.378495,-0.804895,-0.943420,-4.680191,6.524012,-9.036877,-2.176246],[-6.111438,-3.177630,-5.855566,-3.040206,-1.816556,2.229968,-3.522707,-6.181074,0.015294],[-1.269907,9.782706,7.789071,-0.602190,-1.217507,-1.138832,7.324575,8.552643,9.874164],[0.089891,-4.046196,7.216119,7.273560,-6.237537,-6.025125,0.045559,1.357846,9.637259],[-5.984679,7.193291,1.181862,-1.802648,-3.631266,-3.597869,0.697078,4.897618,6.439674],[1.120669,-6.889401,-8.979007,9.793436,3.612403,2.199484,-4.822756,1.657711,-1.663533],[6.560458,2.767223,-7.135317,0.649048,1.589732,8.567915,7.089781,8.820341,-8.432441],[-3.923484,4.118553,-0.548725,-2.951748,4.036116,-6.160517,-8.881652,-2.949409,1.303715],[9.383351,-2.066435,-3.092644,-4.411120,-8.031606,8.549404,5.832950,9.521706,-0.255900]],[[8.028578,-2.142180,-0.050249,-4.206684,-4.756187,-4.823944,-5.628913,-1.588042,1.997984],[-0.392385,-5.593660,7.921678,-1.686941,3.593219,-9.386241,1.120327,-9.587803,-1.471479],[9.693802,-7.170467,9.314588,4.902960,-2.857492,-6.676364,-1.779753,0.412807,2.725409],[5.188154,-9.051395,5.517851,-8.385540,-2.213476,-7.935842,5.597273,-8.147043,3.766482],[-6.889200,5.905497,-0.926913,-5.590466,-6.295626,9.885034,0.914259,4.710842,5.325880],[-6.638445,-4.577689,2.063601,7.560773,-8.134098,-6.236189,0.537497,-9.220242,6.676445],[-3.588231,-6.339530,-9.830726,-7.578629,-0.498007,1.291307,7.361947,9.893371,-0.974042],[-7.918187,2.118135,2.127134,1.572563,-3.615779,7.400375,-6.326421,-2.159079,8.561844],[7.150240,-2.667369,9.602463,1.021976,1.126383,-0.136472,5.019473,5.170557,9.312473],[-4.274433,6.506393,6.554874,2.227972,-2.926980,-6.123063,-1.702442,7.926790,8.105932]],[[-7.141164,5.699261,3.775758,8.439069,9.433684,4.559180,-4.857393,8.958896,-1.955961],[-8.212654,-0.070867,1.895129,-0.361950,-3.575431,-2.296798,0.513582,7.603804,-6.295298],[-1.619376,4.384241,-7.474286,8.107246,5.798392,-2.891494,9.817111,9.877767,0.572121],[-2.941208,-0.306194,-9.432831,-8.601592,9.031774,-6.629375,-5.396859,0.785086,-1.845301],[-2.253749,-4.751194,-8.223821,9.192106,-2.292287,-8.725882,-4.764538,9.334399,9.175260],[9.063724,0.927045,7.758195,6.360867,0.918463,-1.490971,-3.814440,0.852525,-4.612430],[-8.232241,0.008590,-7.823286,-7.289635,-1.588428,2.653017,6.737319,6.426924,6.124832],[0.727121,-1.421728,2.752434,-8.410384,0.147834,9.043378,-6.074711,0.071973,-4.977992],[7.169886,-1.289632,-8.850205,6.950125,3.255529,5.209391,-6.651820,1.874469,7.965987],[0.408020,-5.293928,1.684984,-2.918160,6.256778,9.449162,6.708138,5.214127,-7.541656]],[[4.451420,5.699290,-5.246442,4.105084,8.762609,5.160926,1.325286,1.574216,1.284579],[1.191865,-1.191519,4.767487,-5.379117,-9.127515,5.883666,-9.029047,-1.077740,0.817332],[-7.517495,7.692833,0.034726,-6.990715,2.307070,-2.762935,-6.393461,-1.211233,3.175409],[-8.214375,-6.195609,6.927484,0.316109,-0.212982,6.569611,-6.585606,-8.671010,-4.830692],[-3.951164,3.788990,-8.378518,-1.395347,0.348217,2.922858,-3.586161,6.452408,-2.225005],[-7.079250,-1.743848,0.146028,-5.713923,2.863555,-8.489890,-7.115370,-7.912278,-7.885988],[-8.759477,5.163831,-4.716645,-3.387595,-6.885748,4.306711,-1.483680,-8.484436,2.063007],[-1.160782,4.381047,-7.413745,5.194320,-2.332054,-2.444619,-6.290568,4.180361,2.120109],[-9.203709,-3.588880,9.709083,3.472085,-6.928540,-0.819939,-9.249827,2.725907,-4.490148],[2.657413,4.396492,4.184972,-5.426569,-6.861112,8.546501,9.708932,7.394657,-2.478665]],[[-7.133700,-0.113350,9.488677,-5.355731,8.810754,4.237953,3.668553,-9.297598,-3.022887],[0.236732,8.019873,-8.869973,0.353905,8.985910,4.438419,2.912588,1.191731,-4.797659],[-5.120914,-5.582898,0.308601,0.359629,-6.942672,4.957285,1.052922,-2.269144,-1.951628],[8.353938,-8.452059,-2.562556,-4.377710,5.030971,2.462395,-7.687622,-3.439754,7.464899],[-0.641862,3.651788,-8.529068,4.794376,0.202135,1.151095,-3.296810,4.648113,4.415679],[-0.671551,5.541830,9.824047,-6.958420,-7.947033,1.953701,-9.397465,-3.972807,-5.246967],[-6.663772,-7.897789,8.780285,5.960346,-3.155017,8.198558,-0.886142,5.321555,5.586812],[-9.954273,-4.532101,8.473444,-9.692393,3.051841,1.969818,-9.582084,0.037716,1.657464],[-7.352649,-4.795034,8.561311,-9.718363,3.472340,5.335336,-1.373794,-1.584763,-2.774744],[-9.835322,4.822383,2.733358,-0.495103,-6.995449,-6.304917,-8.316462,-9.577963,2.441454]],[[-7.582118,1.485856,7.367084,6.051450,-3.531140,-8.065805,9.389407,-0.858413,-6.732204],[4.550706,0.847784,-4.786130,8.393640,-6.761302,9.246554,7.095356,6.196313,8.110148],[8.619776,-0.875773,5.541076,-8.192809,-9.309750,1.636518,-6.658946,6.696344,0.734982],[1.144123,-0.567819,-3.693872,9.450746,-4.146080,8.294047,4.608482,-1.480334,-7.603642],[-5.075580,-1.992864,2.127293,3.482465,-9.813122,4.735754,-7.777902,-4.316978,-5.879378],[-4.644541,-3.009315,-3.231164,-9.459557,-3.578818,-5.839614,-4.454403,4.442667,3.008261],[8.866756,-7.193125,7.040741,3.525440,-5.694944,-6.979617,-3.721937,-5.935624,3.397915],[-4.228314,-2.350902,-7.298026,-9.219225,2.861041,8.562722,-5.318012,7.185498,-0.975123],[4.780559,-5.307851,3.892840,-1.338866,2.051797,-4.544843,-2.948093,-7.599625,0.991305],[1.804287,-8.588252,9.707632,8.693009,-2.370011,-9.644776,1.005891,-0.085503,2.262158]],[[-9.977986,3.112915,-0.072033,9.218090,1.370298,4.530821,-1.582187,-7.910682,7.874078],[3.958150,0.932396,4.392132,-8.060028,1.495361,-9.002857,7.344483,7.320907,-0.855691],[-7.834338,-4.505182,-2.626569,0.102865,-4.442907,9.693077,6.243816,-7.918472,-1.929283],[9.163027,-8.617668,5.574031,2.279877,9.085716,0.701098,6.720753,4.697556,0.726151],[9.745193,8.853652,-3.769368,-0.637701,9.808482,4.014957,-2.213778,-8.979504,2.053268],[-8.269524,-4.630172,1.722059,0.337394,-4.971131,-6.371820,-4.987102,-7.428758,0.352211],[-9.454651,-4.539230,-5.772653,8.183749,-0.479795,0.984802,3.922975,7.856604,-5.204928],[-7.100440,7.158054,-9.887612,-2.764034,0.052960,-5.094974,-3.549785,-7.027512,-6.095828],[-4.528559,-8.277765,-9.491395,-7.576008,2.313137,9.892218,8.606551,8.243246,-3.146374],[-8.221332,4.047287,4.975987,2.302876,-8.520166,4.139110,-1.761478,3.240478,-1.111051]],[[4.270293,5.854767,-0.814426,-0.739530,-7.836718,-2.450367,6.062791,-7.198942,4.182998],[7.357749,2.802529,-7.839296,-4.269739,-8.173130,5.325596,7.956290,1.724359,0.813525],[-4.160650,3.128555,-1.464687,9.495124,8.378457,-1.657684,-2.815025,7.117138,3.996582],[-0.519370,-3.980939,1.791089,9.091881,-2.357189,-3.050961,1.041473,2.734192,1.455608],[-0.724445,-9.920369,-3.270553,-9.268996,-2.072714,-6.207293,-1.288391,0.406885,0.964467],[-5.121530,-5.409758,-8.415836,0.665571,0.544370,-1.577154,-2.822058,9.312539,-2.378168],[6.653888,-7.304577,-5.368571,0.714877,8.283330,-5.924576,-0.801914,-0.966876,8.556750],[4.389024,-2.304503,-2.058492,9.787480,0.487278,4.189501,7.732512,4.000948,-1.902107],[-9.072153,-6.952231,-9.234018,6.833532,8.389673,0.199163,-0.716519,7.434299,4.283367],[8.364377,-9.365884,-1.368796,2.911004,-6.423280,2.798623,-5.394663,1.945114,-8.352451]],[[0.575440,-7.491325,7.405886,-7.789178,-1.939132,-0.374549,1.185853,-2.569746,-9.327175],[3.140344,-2.855056,-6.520236,-7.852261,-1.192673,4.400478,4.746029,-4.618621,-0.910809],[-6.177714,3.833817,-5.157607,-1.667407,1.173830,-5.152515,2.773174,7.044241,0.847839],[-4.045782,1.575364,5.065627,6.464161,1.554258,-3.444915,9.735085,-0.751930,2.714996],[-1.137318,-0.725403,8.080955,4.875740,-1.419721,-2.308206,5.495607,1.709804,6.505108],[5.436349,-0.709033,-8.460222,-5.227936,4.619263,-5.743720,-1.286601,-6.295521,7.967309],[7.504136,7.143709,8.600610,2.155857,-7.619878,8.384964,-9.970006,-1.167326,-8.434464],[2.604352,-6.896255,9.534091,-1.240270,4.270983,2.322756,-1.314534,2.476766,-8.179112],[2.765765,0.399209,1.314411,-3.960429,-3.289224,-5.193083,2.674989,3.528253,-3.409859],[0.495352,-5.746781,1.118678,1.433031,-6.942276,2.082413,3.593390,7.184832,-0.165543]]], dtype = "float32")#candidate|1574|(14, 10, 9)|const|float32
uop_1575 = relay.sinh(const_1574.astype('float32')) # shape=(14, 10, 9)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
var_1581 = relay.var("var_1581", dtype = "float32", shape = (308,))#candidate|1581|(308,)|var|float32
call_1580 = relay.TupleGetItem(func_125_call(relay.reshape(var_1581.astype('float32'), [7, 11, 4])), 0)
call_1582 = relay.TupleGetItem(func_127_call(relay.reshape(var_1581.astype('float32'), [7, 11, 4])), 0)
output = relay.Tuple([uop_1575,call_1580,var_1581,])
output2 = relay.Tuple([uop_1575,call_1582,var_1581,])
func_1586 = relay.Function([var_1581,], output)
mod['func_1586'] = func_1586
mod = relay.transform.InferType()(mod)
var_1587 = relay.var("var_1587", dtype = "float32", shape = (308,))#candidate|1587|(308,)|var|float32
output = func_1586(var_1587)
func_1588 = relay.Function([var_1587], output)
mutated_mod['func_1588'] = func_1588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1623 = relay.var("var_1623", dtype = "float32", shape = (15, 9, 4))#candidate|1623|(15, 9, 4)|var|float32
uop_1624 = relay.atanh(var_1623.astype('float32')) # shape=(15, 9, 4)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
var_1630 = relay.var("var_1630", dtype = "float32", shape = (154, 2))#candidate|1630|(154, 2)|var|float32
call_1629 = relay.TupleGetItem(func_125_call(relay.reshape(var_1630.astype('float32'), [7, 11, 4])), 0)
call_1631 = relay.TupleGetItem(func_127_call(relay.reshape(var_1630.astype('float32'), [7, 11, 4])), 0)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
call_1633 = relay.TupleGetItem(func_1586_call(relay.reshape(call_1629.astype('float32'), [308,])), 1)
call_1634 = relay.TupleGetItem(func_1588_call(relay.reshape(call_1629.astype('float32'), [308,])), 1)
const_1646 = relay.const([[[-9.593247,1.863128,7.453210,-5.674760],[0.866275,-0.428484,2.784284,1.331817],[2.229106,0.624805,-3.418928,8.702742],[-9.671998,-8.776474,-3.243360,-3.275699],[8.995290,0.203500,1.017887,9.294596],[-1.232190,3.104669,6.825778,5.679214],[-9.566683,8.506893,-1.645932,-4.030200],[7.248445,9.991130,8.303625,-9.357203],[1.792711,3.923482,7.789623,0.010480]],[[-1.124635,1.939828,0.415615,7.106720],[-2.521271,6.400908,4.637271,2.744016],[-0.450906,1.985838,-0.206228,-9.108285],[7.813413,-6.091325,8.294912,-9.623556],[-9.682592,2.022598,-5.909794,0.784720],[2.924075,4.263861,8.803378,3.056488],[9.988225,4.605879,1.926855,3.482434],[2.235233,5.737888,-8.794345,-7.643907],[-9.098421,-7.117726,-9.764612,0.881400]],[[-4.829778,0.655258,9.551582,0.224912],[2.351395,-8.417696,2.595578,8.715712],[1.179837,1.008439,7.618082,5.038814],[0.024502,-8.173873,3.516040,-1.514874],[5.579789,7.299737,-8.360740,9.141429],[4.857359,-3.708390,-1.198635,0.472842],[6.967620,3.127519,8.512929,-2.086671],[-3.284325,-8.160312,-4.228827,-9.958990],[-6.605059,-1.303435,-9.360983,-3.617083]],[[0.485343,-0.524575,9.568171,7.646265],[-4.506825,9.772486,8.428161,1.329825],[-4.773452,-3.873288,-2.146285,-0.078759],[-7.261615,7.366143,5.244119,3.844102],[6.940528,-5.913782,0.075189,0.358473],[-5.796789,9.974106,-8.301097,6.079095],[8.603334,1.231670,-2.517226,-0.615657],[-9.152405,-3.638564,-8.557609,-5.687653],[2.163457,-1.784342,-4.138156,0.562370]],[[-5.329220,6.604517,8.665569,6.829550],[-7.195912,-1.996474,7.227368,3.885127],[-4.768067,6.168767,0.226025,-4.686397],[-5.308690,-4.129825,-2.080021,4.919849],[-1.438538,3.933719,9.608527,-0.790471],[5.190505,6.125720,-2.619303,-5.787378],[-4.574718,4.880909,1.028717,-2.374772],[-7.079375,3.112044,-2.261049,7.159987],[5.970556,-9.611658,3.349019,-0.786699]],[[9.270309,0.963857,-1.186500,1.953813],[4.349812,5.005147,-8.443587,-0.485924],[-3.945703,-3.255666,-9.959795,8.736032],[-9.403900,2.425084,9.793496,7.087442],[5.915307,-3.441004,-7.369838,-5.264791],[-3.951850,3.914532,9.729335,1.078283],[3.580788,5.146750,2.513509,4.348728],[-0.038735,0.077894,-5.612451,0.078735],[-7.443511,3.361766,9.183247,-7.768311]],[[0.791399,-1.127908,-1.291669,-5.494507],[0.468264,2.458108,7.814239,6.254108],[6.886653,2.549804,6.468291,5.322469],[-4.437189,-7.801264,-5.176426,4.808153],[-2.516790,5.497014,4.130106,-1.892077],[4.457201,6.131303,-5.396887,-7.649880],[5.416507,2.346276,-0.164543,-7.499112],[-2.280191,-7.231303,-7.888545,-2.830806],[-9.727365,8.032172,-9.690647,-5.454738]],[[6.548451,-0.500201,-7.142019,-8.526264],[-7.365140,-9.145159,-2.042724,9.664097],[-3.175564,-1.371822,9.120010,2.656657],[-2.835005,3.066737,5.958287,-5.796205],[9.103719,-6.621550,2.111392,1.521542],[1.876735,0.987714,3.103979,-3.575997],[-3.310797,-9.696462,8.632578,3.903679],[-8.731953,-6.388040,7.890747,-5.353458],[0.584097,-2.681882,8.792106,-8.074304]],[[-1.412011,4.142465,-9.227424,1.259761],[-4.351789,-1.454221,9.708975,7.115324],[-8.573545,8.292983,-0.525176,-2.935115],[5.909473,-0.709704,3.420840,5.616905],[-0.062980,9.784737,-7.193955,-0.742806],[-5.221701,-5.875739,-3.203116,0.423360],[-8.711740,-6.521783,-9.218934,-5.712874],[-2.549169,7.465198,-8.716976,4.536273],[7.282270,2.927013,4.684036,-2.397555]],[[6.461270,8.800726,-5.410236,-5.545608],[-0.918491,9.920790,-1.754745,-7.740125],[-5.390312,-5.953550,-8.002368,-3.976628],[-6.074737,5.370636,6.205097,3.568498],[-7.997905,-6.123002,5.418767,2.618964],[-4.604927,-5.152979,7.822636,7.497477],[-5.698989,-2.018588,9.177764,-1.921652],[-8.883278,5.632366,9.366472,-2.378235],[5.297694,-0.048240,-4.583081,-3.360003]],[[-9.004078,3.638993,7.656546,-6.887131],[-2.927375,-3.324376,4.457075,7.256069],[-8.213286,9.378136,8.394415,-1.520334],[-7.206807,1.185276,-0.184819,4.435870],[-4.954813,-9.992907,3.362267,-3.414845],[2.061362,4.284049,8.722777,9.943375],[0.539778,-3.081054,-8.423299,-0.510869],[6.439389,2.868694,1.155320,2.725468],[4.240048,-1.622074,-2.409744,-1.286092]],[[2.753126,-0.766310,-9.011910,5.746419],[-5.972849,-4.169713,-2.869523,9.135228],[-6.418986,8.038812,-4.622399,-7.449439],[0.311109,-6.091657,3.072537,4.051165],[2.867915,6.118195,9.959132,4.488727],[-5.036155,9.322029,-1.313271,8.234930],[4.293942,6.593503,0.510857,-9.961046],[-4.516054,-3.571791,8.245251,-1.459039],[9.478553,6.559700,-8.018636,-6.214156]],[[-8.315533,2.788380,-5.448409,-8.921874],[-1.091491,3.597653,8.683859,-4.848274],[9.179323,1.402524,-8.844488,1.459150],[6.491924,7.038521,3.488683,0.736758],[2.889591,9.120785,1.438649,1.787503],[8.035440,8.849587,-5.747891,-0.250525],[-9.688317,0.253086,2.593928,-1.801067],[6.355433,8.264703,2.513892,-9.259128],[7.149905,-4.047803,2.786643,-5.260884]],[[6.196879,7.842788,0.988913,9.704375],[2.335573,3.141076,6.136989,-1.560943],[3.468488,1.463737,-7.815134,8.703302],[1.887862,-0.569705,8.610543,5.354698],[-8.387409,4.247249,-7.191847,0.795012],[0.843573,1.320273,-2.325409,6.613825],[5.373515,-5.719693,-1.888837,2.134299],[5.859556,1.066129,5.457520,2.015591],[1.323398,7.081986,3.951097,-0.667832]],[[1.774597,9.848452,2.914539,5.854697],[-5.578737,-6.024233,5.818748,-8.194636],[3.835337,-4.017671,7.304359,-5.425078],[-2.308412,-9.304262,-4.452559,-2.606388],[-1.931612,9.128914,-6.516339,-6.018857],[-5.747001,6.562304,2.454720,-2.698976],[4.512516,0.172692,6.075994,-4.725567],[6.611444,3.414411,8.252147,-8.236449],[-1.495601,6.076161,-1.131987,3.104554]]], dtype = "float32")#candidate|1646|(15, 9, 4)|const|float32
bop_1647 = relay.mod(uop_1624.astype('float32'), relay.reshape(const_1646.astype('float32'), relay.shape_of(uop_1624))) # shape=(15, 9, 4)
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
var_1652 = relay.var("var_1652", dtype = "float64", shape = (4, 308))#candidate|1652|(4, 308)|var|float64
call_1651 = relay.TupleGetItem(func_166_call(relay.reshape(var_1652.astype('float64'), [11, 14, 8])), 0)
call_1653 = relay.TupleGetItem(func_168_call(relay.reshape(var_1652.astype('float64'), [11, 14, 8])), 0)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
call_1663 = relay.TupleGetItem(func_1586_call(relay.reshape(call_1633.astype('float32'), [308,])), 0)
call_1664 = relay.TupleGetItem(func_1588_call(relay.reshape(call_1633.astype('float32'), [308,])), 0)
output = relay.Tuple([call_1629,var_1630,call_1633,bop_1647,call_1651,var_1652,call_1663,])
output2 = relay.Tuple([call_1631,var_1630,call_1634,bop_1647,call_1653,var_1652,call_1664,])
func_1677 = relay.Function([var_1623,var_1630,var_1652,], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
var_1678 = relay.var("var_1678", dtype = "float32", shape = (15, 9, 4))#candidate|1678|(15, 9, 4)|var|float32
var_1679 = relay.var("var_1679", dtype = "float32", shape = (154, 2))#candidate|1679|(154, 2)|var|float32
var_1680 = relay.var("var_1680", dtype = "float64", shape = (4, 308))#candidate|1680|(4, 308)|var|float64
output = func_1677(var_1678,var_1679,var_1680,)
func_1681 = relay.Function([var_1678,var_1679,var_1680,], output)
mutated_mod['func_1681'] = func_1681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "uint8", shape = (10, 13, 14))#candidate|1740|(10, 13, 14)|var|uint8
var_1741 = relay.var("var_1741", dtype = "uint8", shape = (10, 13, 14))#candidate|1741|(10, 13, 14)|var|uint8
bop_1742 = relay.logical_xor(var_1740.astype('uint8'), relay.reshape(var_1741.astype('uint8'), relay.shape_of(var_1740))) # shape=(10, 13, 14)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
const_1756 = relay.const([8.369920,6.870709,-1.412278,5.330101,7.145791,9.910131,2.268975,-6.958741,-7.739137,-2.656150,1.504319,5.317308,9.416514,-7.693681,7.545331,9.493098,6.887045,7.239672,-9.419603,7.885675,1.815198,-7.783826,7.475628,2.456024,5.156300,7.867122,-6.656162,3.350963,0.595339,-6.999717,3.698913,2.977470,-5.263312,2.179812,6.508021,-8.903556,8.334572,8.162592,9.812427,9.012473,-3.055670,-5.872586,8.617823,6.655689,3.550943,-1.508369,7.969567,-3.222503,-6.078267,-0.529572,-1.285110,-5.357702,0.865740,-9.342135,7.294565,3.184077,0.956796,-1.875570,6.963915,2.532783,9.387460,5.371070,6.214421,-4.649757,0.083419,7.297891,-6.668055,-1.229177,6.566419,-9.710045,-3.372243,-0.225633,0.132763,-3.342548,-9.698760,-7.953891,2.693826,-4.646616,1.870494,4.531306,6.885992,-2.700248,-9.600197,5.517829,-3.891026,-9.103823,0.018063,-3.202006,9.661039,7.358840,-6.076301,6.431033,-7.964734,-4.606876,5.276978,-6.834228,-8.834244,-3.725331,3.048546,-6.399789,4.743706,-3.799666,7.512558,-5.363543,-0.033105,1.563418,1.073154,-0.985136,-0.438581,4.925337,-5.571092,0.949289,-8.449862,-2.561987,5.007923,5.798914,2.425516,-6.334028,-5.989937,-5.487298,-5.683068,6.169868,-6.391740,8.874797,-2.016248,-2.358394,7.109403,5.092864,5.346222,2.671387,-5.164966,-8.188481,5.912732,8.898810,9.571070,-3.296155,6.043572,0.962057,2.248797,-0.014075,3.186346,2.893438,-6.187829,-3.887157,-3.623662,7.328367,0.545806,-7.893324,-1.887333,-5.567642,5.624070,8.212878,5.229557,7.818754,-7.645540,-7.678746,-8.370124,-6.806026,0.996303,4.417925,-2.699449,-2.034954,-3.215205,-2.902840,-3.892157,-3.150235,1.047108,-6.160041,-3.769784,-7.186350,-7.679381,-0.836204,-7.176402,5.884603,9.037323,3.179042,3.446677,2.291867,-7.028221,-4.299159,0.287403,5.734021,9.735254,1.500789,3.419397,-3.845897,-1.412358,-2.696981,6.389544,-3.013335,-1.009154,-8.531067,-5.179999,5.108553,-1.247394,0.211444,-1.145599,-6.798022,1.112966,4.077946,3.904547,-1.500399,-5.260034,-0.463897,-3.917460,5.231188,-9.587416,3.021402,3.724201,-3.216163,-5.466449,8.174671,-6.944342,-1.277164,6.986413,-2.823780,8.690582,4.595531,7.097479,3.715475,-8.174009,4.736964,9.494186,4.433937,9.020901,-6.080710,-0.490673,7.477945,1.840690,-7.918459,6.602766,-3.312326,4.177176,0.563680,4.639081,-8.698762,5.330241,7.641392,-1.093774,4.960667,-8.419995,-3.287385,-1.953221,7.907573,2.163475,-1.932136,-5.503496,-2.711539,-9.200101,-6.609453,-5.572127,-9.544287,-6.713549,-3.012300,-3.493298,2.014983,8.738446,7.904307,6.368722,-3.754687,-2.111624,7.219958,2.000794,-7.762723,5.590454,6.035760,-9.581943,6.831448,8.832013,4.626508,-4.989394,-0.955806,-9.003320,8.850122,-4.183376,4.993553,-9.151692,5.687248,-5.649283,-3.787538,3.054883,7.434559,4.726281,-7.459772,2.592070,-9.479233,-8.434763,7.713289,9.982475,-2.324972,-2.326683,-5.275889,9.425036,-3.421661,-9.929146,5.017964,7.471693,0.560513,-1.057662,5.254716,8.635346,6.906571,0.668616,2.865872,6.569093,-0.460786,2.143793,-9.154906], dtype = "float32")#candidate|1756|(308,)|const|float32
call_1755 = relay.TupleGetItem(func_1586_call(relay.reshape(const_1756.astype('float32'), [308,])), 2)
call_1757 = relay.TupleGetItem(func_1588_call(relay.reshape(const_1756.astype('float32'), [308,])), 2)
bop_1775 = relay.multiply(var_1741.astype('int32'), relay.reshape(bop_1742.astype('int32'), relay.shape_of(var_1741))) # shape=(10, 13, 14)
uop_1781 = relay.asin(bop_1775.astype('float64')) # shape=(10, 13, 14)
output = relay.Tuple([call_1755,const_1756,uop_1781,])
output2 = relay.Tuple([call_1757,const_1756,uop_1781,])
func_1800 = relay.Function([var_1740,var_1741,], output)
mod['func_1800'] = func_1800
mod = relay.transform.InferType()(mod)
var_1801 = relay.var("var_1801", dtype = "uint8", shape = (10, 13, 14))#candidate|1801|(10, 13, 14)|var|uint8
var_1802 = relay.var("var_1802", dtype = "uint8", shape = (10, 13, 14))#candidate|1802|(10, 13, 14)|var|uint8
output = func_1800(var_1801,var_1802,)
func_1803 = relay.Function([var_1801,var_1802,], output)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2124 = relay.var("var_2124", dtype = "int64", shape = ())#candidate|2124|()|var|int64
var_2125 = relay.var("var_2125", dtype = "int64", shape = (13, 2, 15))#candidate|2125|(13, 2, 15)|var|int64
bop_2126 = relay.multiply(var_2124.astype('int64'), var_2125.astype('int64')) # shape=(13, 2, 15)
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
const_2134 = relay.const([-2,-1,-3,7,10,-1,-5,2,10,-8,-4,-10,-3,6,-10,-7,9,9,9,-3,4,-2,7,-4,5,-4,9,3,-4,3,10,-4,9,3,3,-9,-10,-8,6,-5,-4,-1,2,2,-3,-10,8,-1,9,-3,10,9,-4,6,-9,-2,-10,5,-6,-8,5,-1,-1,-7,6,3,3,-5,-9,6,4,2,-10,-7,-5,5,-2,2,-7,-4,-9,9,10,-9,-5,-8,1,-2,-6,-7,-4,10,7,9,-9,6,-1,1,9,10,-5,2,10,-8,4,7,6,-4,-9,8,8,-7,-1,8,-10,-3,-1,-2,-10,7,-6,4,2,-6,2,9,9,7,-6,-1,7,1,8,9,4,4,10,1,-7,-3,2,-9,9,3,4,2,-8,1,10,6,6,3,9,8,-2,6,-4,-7,4,-10,3,-2,-7,-9,-3,-1,8,-4,10,4,4,6,-7,-3,-2,-1,-5,8,-6,-8,-3,-7,-5,-9,-5,-6,2,-9,2,2,-2,-9,-4,8,-5,8,-9,10,-7,8,-1,-1,4,-4,1,-2,-8,10,9,1,-6,3,-7,-9,1,6,-2,7,-8,-4,-6,2,9,-6,-7,4,10,-9,10,1,5,-3,6,-5,-10,5,-7,-10,6,7,-4,9,8,-1,5,-8,-1,7,1,-4,-3,9,-6,8,-4,7,6,4,-3,-10,6,1,1,7,-10,-4,-1,-4,-1,-1,7,-5,-6,-7,-3,-9,9,8,-8,3,-9,-2,10,-9,6,10,-10,6,-5,6,2,-8,-5,-10,-5,-2,9,-5,10,2,4,9,6,-1,-10,8,10,2,4,8,-4,2,-4,4,10,10,-9,-1,6,-5,-7,-8,-1,-4,-2,-6,5,-10,6,-3,-2,-2,3,6,-5,6,6,-1,-6,-3,1,7,-7,7,4,10,4,-5,-7,-6,3,-4,-8,5,-4,-6,-6,-3,1,6,9,-1,8,-9,8,7,7,-10,10,3,-2,9,4,-2,-1,2,4,2,-1,9,6,1,-1,2,-6,3,6,7,5,4,-8,5,-10,-4,-10,10,-10,3,4,1,10,8,-10,-5,6,1,6,8,5,-8,-6,4,9,-7,3,-3,-4,1,9,8,-3,-1,-7,6,-10,8,3,2,-9,7,7,-7,2,-6,3,-6,3,7,6,-1,-10,-2,2,6,-3,5,2,2,9,-3,-9,9,6,-3,1,-9,-4,-3,9,8,-2,-3,-5,8,-10,-8,-2,5,5,2,-2,1,4,-10,5,6,-1,2,3,-3,3,-5,10,-2,-8,5,7,-5,9,-5,-5,2,9,3,-5,4,8,2,-9,-5,1,6,3,9,7,6,3,10,-3,-4,9,-4,-9,-7,3,7,9,9,5,5,2,-5,-1,-6,8,-1,-10,-6,-1,7,-4,-7,-8,-6,-4,8,-2,10,-10,8,-8,6,3,-7,4,8,10,10,2,4,7,-4,7,-4,10,-6,10,8,-4,10,9,-8,5,-9,-6,-5,-5,3,2,-10,9,3,-7,-7,-6,-9,-6,5,6,10,-9,2,5,7,-3,2,-2,-5,7,-10,-8,-9,-5,-6,10,-3,-5,4,-10,-7,-9,-9,5,-2,4,5,-10,-6,9,-7,2,-10,5,-4,7,10,-10,1,-2,8,-4,10,7,10,-10,7,-7,8,10,-6,3,7,6,-1,-10,4,1,-7,-10,4,-5,3,-7,3,2,8,-9,1,2,4,2,-5,4,3,2,5,8,9,-8,3,-4,-5,6,8,1,-10,-10,8,-1,-7,8,-10,1,-2,-4,8,7,-10,-3,-1,-2,9,-7,7,10,1,-7,6,2,6,-6,3,10,-6,-4,9,-7,-10,-7,-4,-1,7,-10,8,5,-6,-8,2,-2,5,5,-4,2,1,-10,-6,-4,1,-8,-3,-2,-1,6,10,-4,-6,9,-5,5,-10,-3,-6,-9,-8,-7,-7,-10,9,4,5,-6,-10,2,-6,1,2,2,10,6,-8,9,-1,-6,4,-2,1,-2,3,-6,3,-6,-3,2,2,9,2,-7,-6,3,-6,-9,-5,8,6,-8,5,-3,-4,10,-6,8,-9,-3,10,5,1,3,-6,5,-6,5,8,-10,5,-8,10,-1,1,-4,-9,4,-4,7,9,5,4,-7,-8,-3,-6,5,7,7,-9,-6,1,-10,9,8,-7,3,3,-4,-6,5,7,2,-8,-3,-1,7,1,8,5,7,-8,-5,-2,-3,5,-2,2,8,4,-10,10,-6,5,2,9,3,-10,10,9,-2,-3,-7,-10,-6,-8,-7,4,-3,7,-10,-5,-4,3,-8,-9,-7,5,-7,10,-9,-10,1,2,-2,7,7,-4,8,-7,2,-5,6,2,6,9,-2,-2,2,5,4,5,-4,2,-8,8,-3,-6,6,-4,-10,6,3,-3,3,-8,-1,-6,-4,9,-7,4,2,9,-8,8,10,-1,5,10,3,-7,-3,-9,1,-10,5,-8,-6,4,-2,3,10,6,8,-5,4,-5,-5,7,-4,-6,-3,-7,1,-2,-8,6,-8,5,-6,7,2,-10,-10,-5,-6,-5,-3,-5,-8,7,1,-5,-6,7,3,-4,7,2,-3,-4,-5,-5,5,-3,10,-10,5,-1,8,-3,-1,-3,-4,-8,1,-5,4,7,1,-2,-1,-1,-10,7,10,6,-8,-2,6,-9,-3,-5,6,6,-3,-10,3,-3,6,10,4,7,-6,6,10,-1,10,2,10,-3,6,-1,5,-3,-6,6,8,-1,4,-8,-3,-7,-7,-8,7,-1,-5,4,-6,10,10,3,-1,2,-2,-10,-1,9,-8,-4,10,-9,-8,4,10,8,-4,-7,5,-10,2,-3,1,-1,-1,-5,10,6,9,-4,8,10,-2,6,-8,6,8,-5,3,9,10,-5,-10,-10,2,9,-7,9,3,9,-2,3,4,3,3,1,8,4,8,-8,-2,-8,3,10,-5,-9,-4,10,-2,5,-5,-9,-4,-2,8,3,-4,-9,-2,-4,8,5,10,9,-6,-9,3,-5,-10,-1,6,10,-7,-8,-10,4,-10,9,4,-3,-2,-3,-8,-4,-3,9,-9,9,10,4,2,5,7,-1,1,3,-6,-10,5,5,9,9,-4,3,-8,1,5,1,1,-4,7,6,4,-8,-8,-6,8,4,-4,6,-3,3,5,9,7,6,1,-9,-8,3,-1,-4,4,1,-4,-1,5,3,7,4,5,10,-4,2,-6,-9,-4,6,-2,6,-5,2,-1,10,9,2,3,-2,2,10,-9,-5,-3,-10,9,10,-5,3,-7,3,-6,2,8,-8,-9,8,-9,-8,-5,7,4,-7,-10,-4,5,5,-4,-3,-4,-3,-1,-1,-4,-5,9,3,9,-4,-4,8,-8,3,1,-4,-10,7,8,4,-7,10,-10,9,7,-10,2,10,-10,-1,10,-5,-2,2,10,-1,4,5,8,-7,9,-6,5,2,1,-8,1,-3,-6,3,10,7,9,2,-9,-2,6,3,4,-9,-1,7,-10,4,-5,6,-3,1,-6,-9,4,5,-9,-3,6,-7,-9,-8,5,5,-9,5,-3,-3,-3,-5,-2,-7,9,-4,-2,-1,-7,9,10,-2,-6,-2,5,-9,-6,3,5,8,2,8,-5,4,-7,-4,7,-6,2,2,-3,-4,-5,6,-9,-5,-8,-6,9,7,-2,-3,-6,2,8,3,-6,8,-6,-5,-1,-9,-3,-4,-2,8,-1,-3,-1,4,2,9,-6,3,-3,10,-9,5,-1,-4,-1,7,5,-8,8,6,-9,9,-3,-9,1,2,-8,1,5,2,-10,-7,-10,1,-7,9,-3,-3,-3,3,-4,5,2,-1,3,-3,2,-8,-5,4,6,-9,-4,-3,7,-10,-3,-4,2,3,7,-10,8,-5,5,-6,-3,-9,-9,3,-10,-10,-9,-1,-8,-8,-10,5,-4,-2,10,-1,-5,9,3,-2,4,-10,-4,3,3,6,2,3,2,7,5,4,-10,-4,4,8,7,10,-6,5,8,5,5,-8,-5,-10,4,-10,8,7,-1,-1,-2,-10,-7,8,-6,-7,-2,7,-9,10,2,10,-6,-3,2,3,-6,2,10,9,4,-9,1,8,5,-7,-9,-7,4,2,-4,1,2,3,5,9,8,-10,8,-10,5,9,4,1,-8,7,-7,-9,-2,-10,4,8,1,-4,-5,1], dtype = "uint8")#candidate|2134|(1568,)|const|uint8
call_2133 = relay.TupleGetItem(func_1461_call(relay.reshape(var_2124.astype('uint8'), []), relay.reshape(const_2134.astype('uint8'), [14, 14, 8]), ), 0)
call_2135 = relay.TupleGetItem(func_1464_call(relay.reshape(var_2124.astype('uint8'), []), relay.reshape(const_2134.astype('uint8'), [14, 14, 8]), ), 0)
output = relay.Tuple([bop_2126,call_2133,const_2134,])
output2 = relay.Tuple([bop_2126,call_2135,const_2134,])
func_2138 = relay.Function([var_2124,var_2125,], output)
mod['func_2138'] = func_2138
mod = relay.transform.InferType()(mod)
mutated_mod['func_2138'] = func_2138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2138_call = mutated_mod.get_global_var('func_2138')
var_2140 = relay.var("var_2140", dtype = "int64", shape = ())#candidate|2140|()|var|int64
var_2141 = relay.var("var_2141", dtype = "int64", shape = (13, 2, 15))#candidate|2141|(13, 2, 15)|var|int64
call_2139 = func_2138_call(var_2140,var_2141,)
output = call_2139
func_2142 = relay.Function([var_2140,var_2141,], output)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2273 = relay.const([[[-7,7],[7,-8],[-2,2],[10,1],[-4,-4],[8,-7],[6,7],[4,-9],[-8,2],[8,10],[5,-6],[-8,1],[-7,5]],[[3,-10],[-8,10],[-8,-4],[5,2],[5,5],[-3,-7],[5,-3],[2,-2],[9,-5],[-10,-10],[6,-5],[-9,-4],[10,-6]],[[-8,6],[-10,-10],[6,-9],[-5,-4],[1,-3],[8,-8],[6,1],[9,1],[-10,-5],[-5,-5],[8,-9],[-10,7],[-7,-10]],[[10,-3],[-10,-4],[-4,8],[-1,6],[-9,-8],[7,-9],[-10,-2],[-7,-3],[-2,3],[1,-1],[-2,8],[-4,-1],[7,10]],[[-7,-3],[-5,6],[-9,7],[5,3],[7,2],[-5,-5],[5,3],[-7,6],[-10,-3],[-7,-7],[9,-10],[-5,-2],[-7,4]],[[-5,2],[-8,3],[-6,9],[1,-2],[-2,7],[-2,8],[7,2],[6,-5],[-6,2],[2,9],[-6,7],[-2,-6],[-8,8]]], dtype = "int8")#candidate|2273|(6, 13, 2)|const|int8
const_2274 = relay.const([[[7,3],[-2,-5],[-4,-5],[-2,-5],[10,3],[1,-3],[-4,7],[-9,1],[-10,-5],[5,-1],[-9,-1],[7,-7],[9,7]],[[10,9],[10,-2],[-6,-4],[-9,1],[9,3],[8,-8],[-10,-4],[-4,9],[2,10],[5,10],[4,2],[-2,-9],[4,-8]],[[10,9],[-10,-10],[-5,-2],[8,8],[3,7],[-1,5],[1,-4],[-10,9],[-10,-9],[-3,-9],[-6,5],[3,9],[1,-5]],[[6,-8],[6,2],[-6,-3],[9,-9],[8,3],[8,-10],[-1,-7],[7,-7],[-4,8],[6,-3],[2,1],[9,-6],[-9,-3]],[[-6,8],[-3,2],[-8,1],[-1,-1],[2,9],[1,7],[-9,7],[3,5],[-4,-1],[-9,-9],[1,9],[10,8],[6,-7]],[[-7,-7],[9,-4],[-5,-6],[-1,7],[9,7],[5,-1],[-7,-10],[6,10],[-2,-10],[10,-5],[-3,5],[7,6],[-6,-5]]], dtype = "int8")#candidate|2274|(6, 13, 2)|const|int8
bop_2275 = relay.maximum(const_2273.astype('int8'), relay.reshape(const_2274.astype('int8'), relay.shape_of(const_2273))) # shape=(6, 13, 2)
output = bop_2275
output2 = bop_2275
func_2281 = relay.Function([], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
output = func_2281()
func_2282 = relay.Function([], output)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2283 = relay.var("var_2283", dtype = "float32", shape = (16, 14, 14))#candidate|2283|(16, 14, 14)|var|float32
uop_2284 = relay.atanh(var_2283.astype('float32')) # shape=(16, 14, 14)
output = relay.Tuple([uop_2284,])
output2 = relay.Tuple([uop_2284,])
func_2300 = relay.Function([var_2283,], output)
mod['func_2300'] = func_2300
mod = relay.transform.InferType()(mod)
var_2301 = relay.var("var_2301", dtype = "float32", shape = (16, 14, 14))#candidate|2301|(16, 14, 14)|var|float32
output = func_2300(var_2301)
func_2302 = relay.Function([var_2301], output)
mutated_mod['func_2302'] = func_2302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2473 = func_2281_call()
call_2474 = func_2281_call()
uop_2477 = relay.acos(call_2473.astype('float32')) # shape=(6, 13, 2)
uop_2479 = relay.acos(call_2474.astype('float32')) # shape=(6, 13, 2)
uop_2480 = relay.erf(uop_2477.astype('float64')) # shape=(6, 13, 2)
uop_2482 = relay.erf(uop_2479.astype('float64')) # shape=(6, 13, 2)
bop_2486 = relay.left_shift(uop_2480.astype('int16'), relay.reshape(uop_2477.astype('int16'), relay.shape_of(uop_2480))) # shape=(6, 13, 2)
bop_2489 = relay.left_shift(uop_2482.astype('int16'), relay.reshape(uop_2479.astype('int16'), relay.shape_of(uop_2482))) # shape=(6, 13, 2)
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_2499 = relay.var("var_2499", dtype = "uint8", shape = ())#candidate|2499|()|var|uint8
const_2500 = relay.const([3,3,10,6,2,4,3,-7,-3,6,3,-6,10,9,8,-7,2,7,-5,-9,-8,-1,5,3,-10,9,2,10,-5,-7,8,4,-7,-1,3,-7,7,6,-8,7,-10,1,-2,-6,-1,9,-9,9,-3,8,2,-9,-5,-10,5,-1,4,9,-5,2,-7,5,-6,-4,7,-7,7,-10,4,-5,7,-4,-10,-8,7,2,5,-2,4,-1,9,-9,-7,-1,9,10,2,9,-6,-8,9,6,9,-4,-7,-1,-5,5,1,5,-1,-8,-8,6,5,6,6,-9,-4,-6,-10,-7,9,-8,-5,-2,5,-1,8,6,1,-9,-8,10,1,-2,4,5,1,-6,6,5,8,6,-1,-9,-6,9,-5,7,6,-7,9,4,7,6,-5,-7,-5,9,7,10,6,-9,-8,-9,4,-3,-9,-2,-6,-2,-7,6,-1,-10,4,-4,-7,3,9,-10,-1,-7,1,-7,-6,-1,-7,7,-1,8,4,8,-5,9,-7,9,5,8,-5,-6,-5,6,-2,-2,7,-2,2,-6,-3,10,-5,7,5,7,-2,3,-10,9,-1,6,-1,-10,-10,-9,-1,-2,8,-8,5,-4,-10,4,5,1,6,-3,8,9,10,-1,-7,-9,10,-7,-5,-2,8,-3,1,7,3,-6,5,-9,5,8,-2,-6,-4,-9,-6,4,-9,6,-2,9,3,8,-3,3,-6,-2,7,1,3,-10,1,2,2,-9,-9,10,4,-1,5,-6,4,1,6,-3,-4,-5,-9,-4,-4,-5,-1,-6,5,5,1,4,9,-9,9,-3,8,-5,-6,-8,-2,-3,2,-2,-7,10,8,7,9,-4,9,9,-5,4,5,-2,-7,-2,2,-7,-2,-9,8,2,2,-6,-1,-8,-1,-10,4,-3,-4,-1,10,-7,2,-7,-4,10,2,6,-10,4,7,-8,-5,-4,-6,7,-3,-2,-2,9,-5,1,4,-3,-4,-8,10,-5,-4,5,-6,-10,9,-7,-9,9,5,3,1,-4,4,7,-7,-10,3,-3,-10,-9,-4,-9,3,1,10,-7,-2,6,-2,-2,7,-10,-9,-1,-7,-5,-7,6,-4,7,-10,7,-5,8,7,-8,3,-7,2,-9,-8,-10,1,-6,10,3,8,-2,2,-2,-9,3,10,-2,8,9,-8,-1,-4,7,10,6,9,-1,-5,10,-5,5,5,-8,-1,-6,-6,9,4,6,8,-2,-7,6,9,-7,10,-10,9,5,4,8,-10,2,5,-8,9,9,-4,-9,2,-5,-7,-5,-2,-6,-2,8,3,6,9,2,3,-5,8,-7,-1,-1,9,7,-4,10,7,-10,10,-2,-7,7,8,6,-8,-4,-5,-7,1,-8,7,3,-5,-8,-6,-4,-7,-4,2,8,-2,1,7,4,4,-5,9,8,-10,9,-7,10,3,-6,3,-7,8,4,7,-5,9,1,5,-2,-6,-2,5,8,7,4,-9,7,-10,3,9,8,8,-6,9,-10,10,-9,-4,-2,10,-1,9,-6,-8,-8,-9,-7,-6,-9,-2,1,1,-8,6,7,7,6,-7,7,-3,4,-9,-8,5,-9,8,-10,9,-5,-9,-2,-10,4,-3,3,-6,-2,10,-2,-7,2,3,4,2,-9,-2,7,3,9,2,4,1,-7,-5,-5,-1,10,1,-8,-5,-1,-1,-9,10,10,10,-2,-1,-1,7,1,-5,4,6,8,-10,-8,-9,-5,5,-3,-1,-7,3,9,5,9,-2,7,-4,9,6,-5,6,-6,-5,-7,3,9,3,-7,7,-2,9,-6,6,9,7,-9,-3,-6,-5,7,1,7,3,4,-9,8,6,3,1,6,-5,1,-1,8,-3,5,8,-8,5,2,8,4,-6,-8,8,-7,8,-2,-6,-8,-3,1,-4,-4,-10,-4,8,2,6,3,3,-10,-7,-1,-1,1,1,-9,2,-5,2,3,-1,6,-5,3,8,-1,6,-9,1,2,6,9,5,-2,-5,-8,10,-6,-2,4,-4,6,-7,8,-9,-9,2,-2,-4,-5,-9,-7,-7,-5,4,1,-6,-8,4,-10,6,5,-9,-8,-3,-4,-6,-3,-4,1,10,7,-9,-9,-3,-5,10,9,-10,2,10,6,-7,-10,-9,-10,-5,7,2,-8,-6,-5,6,6,1,-9,-4,-8,6,-3,-10,-4,-9,-8,6,7,-2,10,6,-4,-6,9,-10,2,-4,-8,7,9,2,9,5,2,10,-7,-8,5,-4,3,-1,7,-7,10,-9,-9,8,9,-8,3,2,4,1,-3,6,-8,-8,-4,3,10,5,-1,9,-8,-4,5,-1,8,-10,6,7,-3,-2,-2,1,5,3,-8,-9,-9,5,8,3,-7,-7,7,10,10,6,-5,8,-2,-7,3,-7,6,4,-10,-10,-8,-2,2,6,4,-8,3,-10,-6,5,2,10,4,3,-1,-10,3,-5,-4,1,-6,-8,6,4,-6,1,-3,-9,7,10,7,6,-4,7,3,-7,-8,10,4,5,-2,-9,9,3,-9,3,-3,-10,-1,6,-6,5,-1,-7,6,4,-10,5,2,-5,-1,9,-7,-4,7,-2,-4,-6,-1,-9,-6,-9,7,-6,-3,1,1,-9,-10,-9,-4,9,-10,-4,-7,10,-7,10,4,-4,10,3,5,2,-7,-2,1,-1,-8,2,6,-9,-2,9,-8,4,-6,1,-3,9,-3,-10,-4,-7,-4,6,-2,4,-7,-1,6,4,6,-5,8,8,-5,-8,-1,-1,-6,6,-3,2,-5,-6,-2,-5,6,5,4,-7,-4,-9,-2,10,9,-5,-8,4,-2,6,-1,-2,1,-4,1,-5,8,9,-6,9,-5,-8,1,-8,-2,-9,-5,3,8,-10,-9,-5,-1,-1,3,2,4,3,-2,2,-7,-9,2,8,-9,9,5,7,8,5,-7,1,7,-9,-7,10,-2,6,-3,3,5,10,-8,8,-4,-9,-9,2,-4,-2,-10,5,-5,5,5,8,10,10,4,3,-10,-8,-3,-7,-9,-10,-5,-2,-5,-8,3,-8,5,-8,-5,-8,-5,6,-5,9,-3,-5,-3,9,-2,-8,-3,7,-4,9,-9,-6,3,4,-6,4,-1,10,-5,-2,5,3,6,-8,-8,4,3,-2,2,4,1,1,-8,6,9,-4,9,2,9,10,8,5,-1,-8,2,-5,2,7,-5,7,2,-8,-1,10,4,-7,1,-2,10,-9,3,-7,10,-9,6,10,-7,1,-3,-8,-1,7,-1,-6,2,3,-1,-2,-2,-7,9,8,-10,-4,2,-7,-10,-4,-5,10,-8,-3,-1,2,-8,-4,10,2,3,-10,1,5,-4,-10,1,-8,-3,10,8,9,-2,-4,5,10,-6,-2,-10,8,-9,-4,-10,-1,-3,-7,4,-8,9,1,-10,3,-3,-10,-3,8,-7,-2,3,10,-6,-7,-4,-9,7,-8,-10,2,7,8,-2,-4,9,8,9,9,4,8,-1,1,-6,6,2,-1,1,1,-8,-2,10,10,-7,-7,-5,1,9,-7,-2,2,10,-5,5,-4,-10,9,-8,1,7,10,-2,-1,2,-7,10,2,-3,1,-4,8,-5,6,-7,1,-5,-8,-2,10,-5,-2,-6,-5,1,4,2,9,-2,-1,2,-5,-4,3,-1,2,10,1,8,5,-3,-3,5,-4,-7,-6,-10,-5,3,10,3,-10,-8,8,-8,-5,4,-7,2,-5,-8,-7,3,3,-9,2,9,-4,-2,4,7,-2,-9,-3,-2,-9,1,-1,7,-2,8,-8,-5,-3,7,8,7,9,9,-5,10,3,10,-8,7,3,6,-2,6,-10,5,8,-8,-5,9,-1,-6,2,8,2,4,3,-9,-4,2,-7,-2,6,4,-10,-5,-3,5,6,-9,-1,8,-4,-8,-9,2,7,2,7,-7,10,8,-3,-1,6,-9,-3,-8,-3,7,7,9,5,-7,9,7,-6,-3,8,9,-5,9,-5,-7,5,2,3,-8,-5,1,1,-3,5,-7,1,-6,-4,6,-4,-10,9,5,-5,2,-9,4,-3,8,-3,10,1,-2,-1,-6,1,7,8,-2,4,3,-7,3,3,7,-6,-10,2,-4,10,9,-6,1,-8,-6,-7,4,-7,-3,8,-6,6,3,-8,1,7,-9,-6,-6,3,7,-3,3,7,10,-9,-4,-2,5,6,-10,-7,5,-1,-8,-2,-4,5,7,-5,-1,-5,1,4,9], dtype = "uint8")#candidate|2500|(1568,)|const|uint8
call_2498 = relay.TupleGetItem(func_1461_call(relay.reshape(var_2499.astype('uint8'), []), relay.reshape(const_2500.astype('uint8'), [14, 14, 8]), ), 0)
call_2501 = relay.TupleGetItem(func_1464_call(relay.reshape(var_2499.astype('uint8'), []), relay.reshape(const_2500.astype('uint8'), [14, 14, 8]), ), 0)
output = relay.Tuple([bop_2486,call_2498,var_2499,const_2500,])
output2 = relay.Tuple([bop_2489,call_2501,var_2499,const_2500,])
func_2503 = relay.Function([var_2499,], output)
mod['func_2503'] = func_2503
mod = relay.transform.InferType()(mod)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2504 = relay.var("var_2504", dtype = "uint8", shape = ())#candidate|2504|()|var|uint8
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2505 = func_2503_call(var_2504)
output = call_2505
func_2506 = relay.Function([var_2504], output)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2555 = func_2281_call()
call_2556 = func_2281_call()
uop_2561 = relay.acosh(call_2555.astype('float64')) # shape=(6, 13, 2)
uop_2563 = relay.acosh(call_2556.astype('float64')) # shape=(6, 13, 2)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_2571 = relay.var("var_2571", dtype = "uint8", shape = (7, 260))#candidate|2571|(7, 260)|var|uint8
call_2570 = relay.TupleGetItem(func_1800_call(relay.reshape(var_2571.astype('uint8'), [10, 13, 14]), relay.reshape(var_2571.astype('uint8'), [10, 13, 14]), ), 0)
call_2572 = relay.TupleGetItem(func_1803_call(relay.reshape(var_2571.astype('uint8'), [10, 13, 14]), relay.reshape(var_2571.astype('uint8'), [10, 13, 14]), ), 0)
func_1677_call = mod.get_global_var('func_1677')
func_1681_call = mutated_mod.get_global_var('func_1681')
var_2577 = relay.var("var_2577", dtype = "float32", shape = (540,))#candidate|2577|(540,)|var|float32
var_2578 = relay.var("var_2578", dtype = "float64", shape = (1232,))#candidate|2578|(1232,)|var|float64
call_2576 = relay.TupleGetItem(func_1677_call(relay.reshape(var_2577.astype('float32'), [15, 9, 4]), relay.reshape(call_2570.astype('float32'), [154, 2]), relay.reshape(var_2578.astype('float64'), [4, 308]), ), 3)
call_2579 = relay.TupleGetItem(func_1681_call(relay.reshape(var_2577.astype('float32'), [15, 9, 4]), relay.reshape(call_2570.astype('float32'), [154, 2]), relay.reshape(var_2578.astype('float64'), [4, 308]), ), 3)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2580 = func_2281_call()
call_2581 = func_2281_call()
output = relay.Tuple([uop_2561,call_2570,var_2571,call_2576,var_2577,var_2578,call_2580,])
output2 = relay.Tuple([uop_2563,call_2572,var_2571,call_2579,var_2577,var_2578,call_2581,])
func_2582 = relay.Function([var_2571,var_2577,var_2578,], output)
mod['func_2582'] = func_2582
mod = relay.transform.InferType()(mod)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2582_call = mutated_mod.get_global_var('func_2582')
var_2584 = relay.var("var_2584", dtype = "uint8", shape = (7, 260))#candidate|2584|(7, 260)|var|uint8
var_2585 = relay.var("var_2585", dtype = "float32", shape = (540,))#candidate|2585|(540,)|var|float32
var_2586 = relay.var("var_2586", dtype = "float64", shape = (1232,))#candidate|2586|(1232,)|var|float64
call_2583 = func_2582_call(var_2584,var_2585,var_2586,)
output = call_2583
func_2587 = relay.Function([var_2584,var_2585,var_2586,], output)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2604 = func_2281_call()
call_2605 = func_2281_call()
var_2607 = relay.var("var_2607", dtype = "int8", shape = (6, 13, 2))#candidate|2607|(6, 13, 2)|var|int8
bop_2608 = relay.bitwise_xor(call_2604.astype('int16'), relay.reshape(var_2607.astype('int16'), relay.shape_of(call_2604))) # shape=(6, 13, 2)
bop_2611 = relay.bitwise_xor(call_2605.astype('int16'), relay.reshape(var_2607.astype('int16'), relay.shape_of(call_2605))) # shape=(6, 13, 2)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
var_2625 = relay.var("var_2625", dtype = "float32", shape = (3136,))#candidate|2625|(3136,)|var|float32
call_2624 = relay.TupleGetItem(func_2300_call(relay.reshape(var_2625.astype('float32'), [16, 14, 14])), 0)
call_2626 = relay.TupleGetItem(func_2302_call(relay.reshape(var_2625.astype('float32'), [16, 14, 14])), 0)
uop_2636 = relay.atan(bop_2608.astype('float64')) # shape=(6, 13, 2)
uop_2638 = relay.atan(bop_2611.astype('float64')) # shape=(6, 13, 2)
bop_2643 = relay.greater(uop_2636.astype('bool'), relay.reshape(call_2604.astype('bool'), relay.shape_of(uop_2636))) # shape=(6, 13, 2)
bop_2646 = relay.greater(uop_2638.astype('bool'), relay.reshape(call_2605.astype('bool'), relay.shape_of(uop_2638))) # shape=(6, 13, 2)
bop_2656 = relay.less(uop_2636.astype('bool'), relay.reshape(bop_2643.astype('bool'), relay.shape_of(uop_2636))) # shape=(6, 13, 2)
bop_2659 = relay.less(uop_2638.astype('bool'), relay.reshape(bop_2646.astype('bool'), relay.shape_of(uop_2638))) # shape=(6, 13, 2)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
const_2674 = relay.const([-4.914882,-0.618012,9.003262,7.392878,-4.832250,-2.612973,-6.332970,-9.536350,8.430640,-1.834586,-4.159200,6.435857,-3.687930,9.535878,-8.155686,-7.282452,7.083990,-4.282927,3.092701,4.149211,-5.049109,7.569187,-8.887017,-5.589500,-1.064896,-2.365238,-7.350378,-3.455161,7.364824,-7.946120,4.113425,-7.365518,0.404319,0.833225,-9.904453,5.609712,4.758742,-1.383495,-3.739285,8.082469,6.426678,4.463961,3.526362,-3.964409,9.667127,-7.547818,-2.060452,8.531356,-7.709096,-9.721511,3.015602,4.154959,5.750573,4.685081,-9.506731,-1.971910,-5.166383,-7.501259,-8.410528,-5.389287,0.190335,-0.262431,2.525772,-8.752757,-1.746395,9.692986,-2.004494,-5.898649,-0.184941,4.952634,-3.443014,-3.565200,2.575987,7.581857,-0.772052,6.685838,-7.087278,0.145672,-7.519403,2.602344,-2.041146,-8.093723,6.527569,-2.754109,-6.759926,3.353217,-5.365549,5.900850,-5.950135,2.797468,-4.220278,-3.177856,-2.972262,8.294904,1.824410,7.855818,9.825663,-2.618827,8.600152,-7.737350,-0.108041,-5.938223,9.341588,-0.179293,-4.432583,-9.701585,4.984257,-2.015008,-8.685551,-8.010758,-6.039146,-6.810651,9.017503,9.071030,8.943686,0.745901,5.602573,-8.258701,3.940976,-0.877578,-1.900055,6.702047,9.471344,8.937821,6.647627,-9.300454,-5.141806,8.081959,6.146760,-3.895864,-7.924402,7.904241,7.856046,-5.672788,-9.772465,1.804944,-1.116958,-3.020851,-4.610907,0.729988,4.707052,3.338096,-5.668795,-2.753059,5.111573,9.360049,-2.494461,0.080783,-2.579302,-9.250716,-1.552993,-0.081413,-4.920284,4.655045,-1.568522,-5.738581,-0.234213,4.262354,-1.151987,-8.851901,-5.170669,3.319826,-7.590319,7.111660,1.657470,-8.477272,8.445658,-0.692505,8.316274,-3.349359,-2.517064,-0.801749,-1.458077,-1.605875,5.632530,9.931716,-0.681390,-9.530949,9.255154,4.540957,8.545615,5.010252,-1.825921,4.394893,8.107849,-9.226181,-0.244334,-7.654514,-7.310536,-6.691749,8.549525,-8.882601,-5.602333,9.472094,-3.684318,-7.019107,-3.904991,-7.940834,5.582193,-7.449199,6.500921,4.376830,5.418425,-3.785133,-8.127193,4.644507,-5.275401,2.607019,-8.734456,2.500431,4.522321,8.093401,4.381179,6.663748,9.742551,2.946630,-5.983488,-4.017971,-8.641057,7.401005,2.892723,-1.576039,-5.642011,1.486390,-1.471667,6.251058,-4.934639,7.913723,-7.861308,9.448433,4.255040,-6.584130,5.135472,8.193104,-2.895803,-1.593083,-4.033845,3.336801,-7.157116,6.742813,5.268649,-7.003758,9.683354,4.089336,-8.337746,3.600783,4.633102,4.575753,5.336247,-8.642939,-3.702262,5.481655,-3.735159,8.734213,2.905678,7.230958,-8.617937,7.268481,-2.733429,4.393774,2.077590,-5.244792,9.551987,4.586643,-8.185377,-7.534384,-2.314717,7.127195,-5.908099,9.174602,-4.066222,6.386583,-9.083573,-2.043039,7.322123,-9.408851,8.429690,-2.814620,-1.996088,1.560702,8.883247,1.321040,6.686266,-1.815394,-6.935146,-9.114646,8.225220,7.342485,-4.515941,-6.917622,3.899635,-7.092755,3.430880,1.574811,-1.191064,-8.669896,-0.993635,8.893267,8.478607,-9.752917,1.692447,-6.110919,-4.946244,-4.279311,8.221485,-5.297435,7.064884,3.879259], dtype = "float32")#candidate|2674|(308,)|const|float32
call_2673 = relay.TupleGetItem(func_1586_call(relay.reshape(const_2674.astype('float32'), [308,])), 0)
call_2675 = relay.TupleGetItem(func_1588_call(relay.reshape(const_2674.astype('float32'), [308,])), 0)
output = relay.Tuple([call_2624,var_2625,bop_2656,call_2673,const_2674,])
output2 = relay.Tuple([call_2626,var_2625,bop_2659,call_2675,const_2674,])
func_2682 = relay.Function([var_2607,var_2625,], output)
mod['func_2682'] = func_2682
mod = relay.transform.InferType()(mod)
mutated_mod['func_2682'] = func_2682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2682_call = mutated_mod.get_global_var('func_2682')
var_2684 = relay.var("var_2684", dtype = "int8", shape = (6, 13, 2))#candidate|2684|(6, 13, 2)|var|int8
var_2685 = relay.var("var_2685", dtype = "float32", shape = (3136,))#candidate|2685|(3136,)|var|float32
call_2683 = func_2682_call(var_2684,var_2685,)
output = call_2683
func_2686 = relay.Function([var_2684,var_2685,], output)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2688 = func_2281_call()
call_2689 = func_2281_call()
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
const_2702 = relay.const([[-6.836126,-9.818501,-5.316784,-2.106613,3.508592,-2.556509,1.631923,-4.573266,-4.019520,-4.178427,-6.337628,-4.512228,7.941938,-1.037694,8.767468,5.408581,-3.605474,3.602020,-7.175475,-2.083394,-2.467306,-0.371287,9.444060,-4.336588,-3.997622,-9.545811,-4.393235,2.104906,-0.515333,6.941112,8.428153,7.180718,-8.900372,7.176674,4.150976,-6.719941,-4.002372,2.632636,0.738858,6.766245,-0.270512,-6.511677,8.947732,8.759998,2.111900,3.487767,8.007517,-4.589239,8.282396,-6.992563,-2.793318,-4.869746,1.654284,-8.997773,7.260755,-3.278063,8.663912,-4.311921,-1.032611,-5.920741,-8.794552,5.303198,6.784435,7.642726,2.477554,6.305005,-6.793278,-3.619225,9.034181,-2.132988,8.696966,-3.832349,0.485106,5.332153,-0.775027,-3.145682,8.022526,-3.772061,8.796475,0.047359,1.601265,-1.797911,-4.504739,4.696342,-3.252344,5.472662,-4.621429,-9.351090,-2.550509,-7.147233,-2.896028,-4.513047,-6.995125,-3.771817,-3.564858,-5.320753,-8.963535,-0.769028,4.289393,-5.953953,5.733827,8.716452,3.501449,-6.004813,3.377731,7.250946,7.142409,0.313534,-8.630015,7.639673,9.577468,1.706193,3.656678,3.106786,0.053250,-4.050119,8.013017,6.284173,0.070634,-6.290143,-7.475792,-9.212742,1.058873,7.902979,4.905790,9.790864,-6.619031,-9.366994,-4.924349,-1.055134,4.596844,-3.009819,5.601103,-6.797104,0.099159,7.516938,-8.156656,3.225367,-0.488654,8.871242,-0.077596,-4.004797,0.002859,-5.667214,-7.756703,-0.902098,3.569957,-6.173785,-0.770769,4.689170,-8.243697,0.019031,0.285793,-0.373969,0.790108,7.331672,-8.700875,-0.767635,4.880697,6.719245,6.133961,1.466269,0.770323,6.623680,-5.210886,1.052516,-5.652591,5.871184,-9.177515,7.026414,-9.791388,7.484729,-1.152857,-3.325242,-4.377944,-7.824611,9.330110,-8.756128,9.833787,-1.147877],[-8.993048,-7.574247,-7.883124,-5.465614,-1.979995,-7.015461,6.002850,9.581945,6.911685,7.057760,-4.308049,-9.902460,8.918688,-8.190500,-3.484893,3.297807,-6.031997,6.409410,6.105706,3.018104,2.017453,-1.266425,4.049023,8.936724,-4.095766,-7.770916,-7.869633,-9.157036,0.151743,-6.734845,-8.962502,0.972904,-9.794359,2.788432,-4.494878,3.917076,3.936638,-5.368547,0.569822,6.494776,-7.121448,-3.695365,-9.278546,0.564096,6.530235,-5.572278,1.639896,7.041134,-7.228245,7.337684,0.822526,4.464488,9.510714,-0.227112,2.984049,-7.325749,1.104518,-4.613814,3.187364,-4.583623,5.136123,-4.956490,-9.841438,-8.883524,2.707066,8.288759,-3.536363,0.636791,2.818671,1.879671,2.953432,-5.657935,-3.089591,8.580084,-4.473621,3.049722,-4.548358,-4.985433,6.820316,6.370093,7.908394,8.895583,4.895097,8.748698,-9.211910,7.076658,-9.151888,0.264409,-6.745641,-5.917395,-7.295944,3.154960,-7.727971,6.443543,-0.019982,-4.751738,6.937493,-6.227649,-9.949061,1.578726,-0.110062,-6.342073,3.702618,7.299065,-6.306473,-0.471157,4.666315,3.662853,-0.823014,5.227075,-1.789877,-2.041491,-3.491167,-0.582912,-3.841353,2.616498,8.956272,8.056315,6.444988,-3.201742,-6.507157,-1.668603,-2.179303,3.563890,-2.469320,-2.693058,-5.587985,6.384798,6.293399,6.787944,2.637505,-5.979395,7.008498,4.027408,-1.719451,-7.498290,5.672210,1.273545,5.174192,-1.265435,7.184527,-6.310018,6.083622,-8.618368,1.327926,-8.522139,7.610400,0.082643,-2.276474,5.756772,1.844830,1.992650,5.003759,-8.507389,-6.726219,-1.451564,9.120284,8.506024,-0.037262,9.534156,-6.237914,4.325340,-0.448477,-3.596838,3.504487,-7.253095,9.574553,6.543622,-6.348766,5.640725,-8.817498,-0.204701,-9.566361,-3.003487,-6.889747,6.396667,6.892536,-5.036543,5.433187,-7.766002],[-1.468883,8.393077,2.506046,-4.996859,3.602000,-7.409996,-7.949208,6.730462,-4.759013,9.594519,-5.016739,6.050372,9.584109,2.530264,-6.097803,-0.904317,-4.151640,2.068123,-5.289164,4.042067,7.444076,-8.490890,8.479564,2.854470,5.764570,-5.478788,0.342858,-5.948522,2.295796,2.307637,2.161556,-8.111328,-6.755739,7.139890,-4.429908,-1.757403,-4.918022,7.300612,-1.285620,-2.835777,4.003850,3.096294,-8.310704,-3.224287,-0.629188,-5.480426,7.926221,0.860717,-5.986700,-3.146805,-2.326220,-6.962937,8.850293,-0.447725,-8.833976,-5.227801,4.772676,-6.430940,0.652216,2.433016,4.239862,0.628009,-2.577149,-7.473039,-2.982810,4.591766,8.724584,1.250088,2.705361,-1.939260,-5.742017,-5.263794,3.551330,-4.149664,8.350280,-0.610287,2.043377,9.991542,-0.474720,-7.571547,-0.909546,1.751797,1.180602,1.376244,-1.222357,8.088141,-0.811297,-2.963866,-3.415623,-1.372052,-6.467116,-0.667959,-0.779598,-0.450427,0.350234,3.254646,-0.133413,4.378378,-2.556374,5.724201,0.389247,7.923343,-8.675581,0.254811,-7.269107,-6.068056,-2.215448,-6.806419,-9.144113,2.922219,8.091904,0.507947,-0.938204,-5.885634,0.814451,9.965187,-5.961094,-1.419977,2.518249,5.356117,2.867070,-4.729596,1.126162,9.065241,8.914070,1.215763,6.997223,6.417568,-4.847721,-8.526996,6.139304,-2.571432,3.064775,-0.246686,-7.149814,-9.935951,9.726727,2.717238,-1.150143,-3.233551,2.799140,-6.978337,-9.745655,-7.918851,5.613821,7.792579,8.046451,-3.127815,-2.368133,0.208083,7.489023,5.314668,-6.025932,0.704597,8.590345,6.218102,7.641902,2.911774,5.938961,-9.103349,1.809591,3.913635,5.385938,4.980927,-3.959916,-4.410486,-9.189580,-7.339311,-0.912090,1.032883,1.007664,0.638340,7.620800,-4.450637,-0.601417,8.094132,-3.561660,-8.577138,7.031341,-3.913304]], dtype = "float64")#candidate|2702|(3, 180)|const|float64
call_2701 = func_1329_call(relay.reshape(const_2702.astype('float64'), [12, 15, 3]))
call_2703 = func_1329_call(relay.reshape(const_2702.astype('float64'), [12, 15, 3]))
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_2710 = func_1329_call(relay.reshape(call_2701.astype('float64'), [12, 15, 3]))
call_2711 = func_1329_call(relay.reshape(call_2701.astype('float64'), [12, 15, 3]))
output = relay.Tuple([call_2688,call_2701,const_2702,call_2710,])
output2 = relay.Tuple([call_2689,call_2703,const_2702,call_2711,])
func_2716 = relay.Function([], output)
mod['func_2716'] = func_2716
mod = relay.transform.InferType()(mod)
output = func_2716()
func_2717 = relay.Function([], output)
mutated_mod['func_2717'] = func_2717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2739 = func_2281_call()
call_2740 = func_2281_call()
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
var_2745 = relay.var("var_2745", dtype = "float64", shape = (3, 180))#candidate|2745|(3, 180)|var|float64
call_2744 = func_1329_call(relay.reshape(var_2745.astype('float64'), [12, 15, 3]))
call_2746 = func_1329_call(relay.reshape(var_2745.astype('float64'), [12, 15, 3]))
output = relay.Tuple([call_2739,call_2744,var_2745,])
output2 = relay.Tuple([call_2740,call_2746,var_2745,])
func_2748 = relay.Function([var_2745,], output)
mod['func_2748'] = func_2748
mod = relay.transform.InferType()(mod)
mutated_mod['func_2748'] = func_2748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2749 = relay.var("var_2749", dtype = "float64", shape = (3, 180))#candidate|2749|(3, 180)|var|float64
func_2748_call = mutated_mod.get_global_var('func_2748')
call_2750 = func_2748_call(var_2749)
output = call_2750
func_2751 = relay.Function([var_2749], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2753 = relay.var("var_2753", dtype = "uint32", shape = (16, 15, 9))#candidate|2753|(16, 15, 9)|var|uint32
var_2754 = relay.var("var_2754", dtype = "uint32", shape = (16, 15, 9))#candidate|2754|(16, 15, 9)|var|uint32
bop_2755 = relay.bitwise_or(var_2753.astype('uint32'), relay.reshape(var_2754.astype('uint32'), relay.shape_of(var_2753))) # shape=(16, 15, 9)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2766 = relay.TupleGetItem(func_2716_call(), 3)
call_2767 = relay.TupleGetItem(func_2717_call(), 3)
output = relay.Tuple([bop_2755,call_2766,])
output2 = relay.Tuple([bop_2755,call_2767,])
func_2777 = relay.Function([var_2753,var_2754,], output)
mod['func_2777'] = func_2777
mod = relay.transform.InferType()(mod)
var_2778 = relay.var("var_2778", dtype = "uint32", shape = (16, 15, 9))#candidate|2778|(16, 15, 9)|var|uint32
var_2779 = relay.var("var_2779", dtype = "uint32", shape = (16, 15, 9))#candidate|2779|(16, 15, 9)|var|uint32
output = func_2777(var_2778,var_2779,)
func_2780 = relay.Function([var_2778,var_2779,], output)
mutated_mod['func_2780'] = func_2780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2782 = relay.TupleGetItem(func_2716_call(), 2)
call_2783 = relay.TupleGetItem(func_2717_call(), 2)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2786 = func_2281_call()
call_2787 = func_2281_call()
func_2748_call = mod.get_global_var('func_2748')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_2808 = relay.TupleGetItem(func_2748_call(relay.reshape(call_2782.astype('float64'), [3, 180])), 0)
call_2809 = relay.TupleGetItem(func_2751_call(relay.reshape(call_2782.astype('float64'), [3, 180])), 0)
output = relay.Tuple([call_2782,call_2786,call_2808,])
output2 = relay.Tuple([call_2783,call_2787,call_2809,])
func_2815 = relay.Function([], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mutated_mod.get_global_var('func_2815')
call_2816 = func_2815_call()
output = call_2816
func_2817 = relay.Function([], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2820 = func_2281_call()
call_2821 = func_2281_call()
output = call_2820
output2 = call_2821
func_2822 = relay.Function([], output)
mod['func_2822'] = func_2822
mod = relay.transform.InferType()(mod)
mutated_mod['func_2822'] = func_2822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mutated_mod.get_global_var('func_2822')
call_2823 = func_2822_call()
output = call_2823
func_2824 = relay.Function([], output)
mutated_mod['func_2824'] = func_2824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2830 = func_2281_call()
call_2831 = func_2281_call()
uop_2847 = relay.exp(call_2830.astype('float64')) # shape=(6, 13, 2)
uop_2849 = relay.exp(call_2831.astype('float64')) # shape=(6, 13, 2)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
const_2862 = relay.const([5.844042,-0.096334,-0.741405,3.310950,4.833153,7.841115,-9.683905,-9.047296,-1.990695,1.046354,-3.882533,8.681687,1.955582,-9.198993,9.601830,-7.144413,1.956075,0.057916,5.109585,1.062848,-6.183057,1.506695,-8.888904,-1.857647,9.480834,-3.138653,-3.387920,4.197772,0.489273,-1.497772,0.631980,-1.700016,-7.008793,-4.001133,-9.676538,-5.752016,-7.067521,2.372295,-3.603081,-3.440387,3.728285,8.079517,-0.607445,2.563773,-0.610470,0.038912,-0.545965,4.669685,3.881859,6.746573,6.379707,8.277657,5.918506,-1.363347,-9.342473,5.199340,-6.256343,3.192503,7.517500,-1.597987,8.908097,0.885567,6.105514,-2.329783,-8.798432,3.131271,7.649226,-0.737036,7.393461,-4.144709,0.676520,-7.818883,-7.929359,-3.364204,-4.560459,-7.084264,-9.507628,-2.488827,-4.664323,1.545472,-4.821471,-8.009731,3.333389,-3.861713,-0.040926,-0.052394,5.740905,9.497349,5.730180,7.539079,-8.236984,5.451038,-6.961769,5.439210,-2.720633,7.386194,2.538228,-8.039419,-1.491689,3.539296,-4.721620,-2.831233,-6.169287,8.544125,-9.085700,-7.987908,-7.552106,7.993884,2.220883,2.920248,8.862687,-3.585234,1.436287,4.115642,2.263679,-0.875458,2.675509,4.001052,-4.498813,7.452789,-4.210780,7.889962,6.883527,5.939610,8.829392,-3.290051,3.761329,5.347411,9.134267,8.366998,-6.846417,-8.048318,-2.784816,8.318468,1.437284,1.427632,-3.871752,-4.552639,-4.210120,-2.303214,2.416538,-5.701034,1.953442,3.641916,9.738607,-6.541167,-2.678068,4.610647,-8.304758,0.205490,5.402068,0.527312,7.857848,5.771966,4.607492,-6.816565,-0.601081,-4.627263,-5.412956,-1.937087,-4.338836,8.279628,-8.487774,5.247611,-9.326901,-9.911639,-0.441919,2.768962,5.738251,2.233253,8.708850,4.331064,-5.160939,2.775092,5.063234,-2.892557,-7.325581,-0.774606,-7.407848,-8.235099,-5.670261,-3.696664,-4.711212,5.799059,-0.917018,3.627954,-5.463822,0.357679,-0.385047,2.043234,7.041772,5.767607,-6.681252,-7.322408,7.727400,9.766342,0.022503,-8.672251,9.123385,4.993845,-4.173040,9.424886,-4.459708,-5.748239,-9.936064,-2.629172,6.425037,6.537337,-7.655105,0.860437,-0.907939,3.781244,-5.710002,-5.699377,7.388076,-9.907382,-7.334544,-8.343877,-6.445924,8.568843,3.178361,-5.761147,9.247284,-6.358821,5.644765,7.319849,-1.089981,5.367704,5.109695,-4.308315,-2.407197,-1.573129,9.292705,5.930869,4.158864,-5.328237,-0.717148,-2.231905,-0.629154,9.544832,-4.273918,-9.693442,-1.488180,2.753847,4.756918,-5.660814,-5.072129,-6.542539,-6.495024,-0.579190,-1.901753,-8.387744,6.434021,-9.237090,9.871122,-2.604126,-0.029198,-3.943858,-1.008914,-0.987202,5.413798,9.369135,-1.054182,3.189354,9.971246,-2.005024,-2.725527,7.265417,0.006241,-7.398552,2.320861,-0.029213,9.151118,-9.477838,8.144926,9.601770,-8.071165,-2.474134,-7.724886,6.496313,6.320782,1.366840,-0.182099,-0.543710,-9.083069,-3.800141,5.250092,3.393791,7.858656,-8.389331,3.637621,6.676677,3.845929,-5.505147,-7.546619,1.130412,4.404921,4.596967,0.077093,-2.946555,-6.274767,-3.183377,8.798179,-2.591383,0.884622,9.818923,-7.590063,-1.127291], dtype = "float32")#candidate|2862|(308,)|const|float32
call_2861 = relay.TupleGetItem(func_125_call(relay.reshape(const_2862.astype('float32'), [7, 11, 4])), 0)
call_2863 = relay.TupleGetItem(func_127_call(relay.reshape(const_2862.astype('float32'), [7, 11, 4])), 0)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
call_2864 = relay.TupleGetItem(func_1586_call(relay.reshape(const_2862.astype('float32'), [308,])), 1)
call_2865 = relay.TupleGetItem(func_1588_call(relay.reshape(const_2862.astype('float32'), [308,])), 1)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
call_2866 = relay.TupleGetItem(func_125_call(relay.reshape(call_2864.astype('float32'), [7, 11, 4])), 0)
call_2867 = relay.TupleGetItem(func_127_call(relay.reshape(call_2864.astype('float32'), [7, 11, 4])), 0)
output = relay.Tuple([uop_2847,call_2861,const_2862,call_2864,call_2866,])
output2 = relay.Tuple([uop_2849,call_2863,const_2862,call_2865,call_2867,])
func_2884 = relay.Function([], output)
mod['func_2884'] = func_2884
mod = relay.transform.InferType()(mod)
output = func_2884()
func_2885 = relay.Function([], output)
mutated_mod['func_2885'] = func_2885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_2894 = func_2822_call()
call_2895 = func_2822_call()
var_2896 = relay.var("var_2896", dtype = "int8", shape = (6, 13, 2))#candidate|2896|(6, 13, 2)|var|int8
bop_2897 = relay.multiply(call_2894.astype('uint8'), relay.reshape(var_2896.astype('uint8'), relay.shape_of(call_2894))) # shape=(6, 13, 2)
bop_2900 = relay.multiply(call_2895.astype('uint8'), relay.reshape(var_2896.astype('uint8'), relay.shape_of(call_2895))) # shape=(6, 13, 2)
output = bop_2897
output2 = bop_2900
func_2901 = relay.Function([var_2896,], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
var_2902 = relay.var("var_2902", dtype = "int8", shape = (6, 13, 2))#candidate|2902|(6, 13, 2)|var|int8
output = func_2901(var_2902)
func_2903 = relay.Function([var_2902], output)
mutated_mod['func_2903'] = func_2903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_2907 = relay.TupleGetItem(func_2815_call(), 2)
call_2908 = relay.TupleGetItem(func_2817_call(), 2)
func_2884_call = mod.get_global_var('func_2884')
func_2885_call = mutated_mod.get_global_var('func_2885')
call_2915 = relay.TupleGetItem(func_2884_call(), 4)
call_2916 = relay.TupleGetItem(func_2885_call(), 4)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
const_2922 = relay.const(8, dtype = "uint8")#candidate|2922|()|const|uint8
call_2921 = relay.TupleGetItem(func_2503_call(relay.reshape(const_2922.astype('uint8'), [])), 0)
call_2923 = relay.TupleGetItem(func_2506_call(relay.reshape(const_2922.astype('uint8'), [])), 0)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_2929 = relay.TupleGetItem(func_2716_call(), 3)
call_2930 = relay.TupleGetItem(func_2717_call(), 3)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_2938 = relay.TupleGetItem(func_2503_call(relay.reshape(const_2922.astype('uint8'), [])), 3)
call_2939 = relay.TupleGetItem(func_2506_call(relay.reshape(const_2922.astype('uint8'), [])), 3)
func_2138_call = mod.get_global_var('func_2138')
func_2142_call = mutated_mod.get_global_var('func_2142')
var_2942 = relay.var("var_2942", dtype = "int64", shape = (390,))#candidate|2942|(390,)|var|int64
call_2941 = relay.TupleGetItem(func_2138_call(relay.reshape(const_2922.astype('int64'), []), relay.reshape(var_2942.astype('int64'), [13, 2, 15]), ), 2)
call_2943 = relay.TupleGetItem(func_2142_call(relay.reshape(const_2922.astype('int64'), []), relay.reshape(var_2942.astype('int64'), [13, 2, 15]), ), 2)
output = relay.Tuple([call_2907,call_2915,call_2921,const_2922,call_2929,call_2938,call_2941,var_2942,])
output2 = relay.Tuple([call_2908,call_2916,call_2923,const_2922,call_2930,call_2939,call_2943,var_2942,])
func_2944 = relay.Function([var_2942,], output)
mod['func_2944'] = func_2944
mod = relay.transform.InferType()(mod)
var_2945 = relay.var("var_2945", dtype = "int64", shape = (390,))#candidate|2945|(390,)|var|int64
output = func_2944(var_2945)
func_2946 = relay.Function([var_2945], output)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_2975 = func_2281_call()
call_2976 = func_2281_call()
output = call_2975
output2 = call_2976
func_3012 = relay.Function([], output)
mod['func_3012'] = func_3012
mod = relay.transform.InferType()(mod)
mutated_mod['func_3012'] = func_3012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3013 = func_3012_call()
output = call_3013
func_3014 = relay.Function([], output)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3046 = relay.var("var_3046", dtype = "uint64", shape = ())#candidate|3046|()|var|uint64
var_3047 = relay.var("var_3047", dtype = "uint64", shape = (1, 4, 3))#candidate|3047|(1, 4, 3)|var|uint64
bop_3048 = relay.logical_xor(var_3046.astype('uint64'), var_3047.astype('uint64')) # shape=(1, 4, 3)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_3052 = func_2822_call()
call_3053 = func_2822_call()
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
const_3059 = relay.const([[-6,-1,-3,-8,10,-9,-8,1,10,6,-5,6,3,6,3,1,1,4,10,7,1,-2,-7,-6,9,6,-5,5,10,7,5,5,-1,4,-10,-1,8,-9,-8,-2,8,-10,4,-2,9,10,-9,-4,3,-4,-10,3,10,-3,-10,7,4,-1,-3,3,-4,7,-7,8,8,2,-8,-6,-10,9,3,-5,3,7,1,-7,-2,-8,5,8,7,1,-6,8,-3,3,-4,5,8,-3,-2,4,5,1,-10,-3,-9,-4,9,-1,8,-10,-4,-10,-7,-1,-3,2,-9,-6,-4,-5,3,-7,1,9,-4,2,6,-10,4,3,-8,-5,-8,5,-2,-6,-10,-9,3,-10,9,-4,-5,9,8,7,4,5,3,-5,-10,1,-6,-1,-10,-5,-5,3,5,-9,3,1,8,-1,-7,7,9,-9,8,-3,3,7,-7,9,-4,5,6,5,3,6,-2,9,-1,-6,2,-7,-9,4,9,-8,-2,10,-10,-2,9,-4,1,4,-4,8,2,-3,-2,-9],[-8,3,1,-8,8,-7,-7,10,6,7,6,8,-3,-9,5,7,6,-7,-3,9,4,8,8,-9,-2,4,6,-6,-2,5,4,5,1,-8,-7,-4,4,4,10,4,-4,7,-2,-8,-7,-6,-4,-10,2,-7,-6,2,3,-10,1,-4,-4,-4,4,-5,-4,4,1,-1,4,2,1,10,7,-8,3,3,4,8,-9,1,-1,9,2,2,10,-6,7,-6,5,3,7,-9,-5,-9,7,6,-8,9,7,-6,7,-9,-9,9,10,-3,-9,-7,7,-9,-7,-2,1,5,-5,4,-4,-6,-9,-6,-6,7,-1,-2,-10,5,-7,4,-2,-6,1,-9,-5,7,-10,5,4,-5,-6,-7,9,8,3,-6,3,2,-3,1,7,-4,-3,-5,2,-3,-9,5,-4,-6,4,-10,3,3,2,-4,3,6,-8,4,2,-6,-10,1,-5,9,-8,-8,-2,4,6,2,5,-7,2,-1,-1,-7,2,-6,-4,8,-5,-10,-9,10,-4,9,2,-2,-9,9],[2,4,-2,2,-5,-8,7,7,6,-5,10,8,10,-6,-3,-1,-9,-2,5,-8,4,-1,6,9,7,-2,6,3,-10,-6,-4,-1,-4,-7,-6,-9,1,-1,2,-10,-4,8,-4,7,-9,-8,-10,7,3,2,9,10,-5,-8,3,-6,2,-8,-6,-10,-7,-8,-1,-2,-9,6,8,-7,-8,-10,6,-7,-9,-5,-9,-9,-7,-3,6,-3,-2,2,-4,2,7,-3,7,1,7,10,5,2,10,10,-5,-8,3,-6,2,-9,10,-10,-3,3,-9,6,4,-5,7,8,-8,8,10,-8,-2,1,-10,6,-4,-5,-4,6,-1,2,-6,-2,1,-8,2,3,-5,-5,-5,-10,2,3,-6,-3,2,9,-8,-4,8,1,-8,-3,1,7,9,-7,3,-6,-1,-8,-6,10,-5,-4,6,5,2,-6,8,-10,-3,9,-9,4,5,2,8,-5,6,-8,-7,-6,-4,1,-8,-8,-10,-6,3,-8,2,10,-1,5,-6,-10,9,-1,8,5,-5,-6],[2,-3,-2,3,-10,-5,2,8,6,-1,4,8,-4,-10,7,-3,10,6,-6,7,4,6,-4,3,10,7,-6,10,9,10,-7,-7,-8,8,-1,-9,-9,-10,7,4,-9,-5,-7,6,4,4,-8,10,-3,1,5,1,-7,8,-4,3,-5,-8,-3,2,2,-3,-8,-8,3,-5,1,6,-6,-2,-7,6,5,-8,-10,-8,-6,-5,-5,-5,4,1,-7,5,-9,8,4,-2,9,9,-10,-6,-9,-1,3,5,10,-5,10,2,9,-9,-3,-1,-1,-6,7,-7,10,-1,6,10,-1,-2,-7,4,2,8,-4,-10,9,-8,-7,-5,5,-9,3,6,6,-6,-2,-8,4,2,5,7,-9,2,-1,10,-4,-8,10,-2,-2,1,1,-10,7,6,-5,8,7,-7,-9,-6,-8,10,6,6,2,-4,9,9,8,-10,8,5,7,4,9,-9,-4,-6,-2,-10,2,-9,-10,8,2,10,-5,-5,-7,8,-1,-4,5,5,4,2,-1,-8,-9,-8],[-4,1,3,4,7,7,-9,2,1,-1,-3,1,-6,-5,-5,6,-3,-3,-4,-6,8,-8,-4,-9,6,-2,-5,-10,-3,-5,-10,-2,-7,9,9,-2,-9,-2,-9,-10,2,-3,-6,-7,-2,9,-3,-4,5,2,9,1,-2,-2,5,-7,5,-6,-7,-4,-7,-8,4,-1,-5,3,4,-3,8,-7,-9,-3,-6,-7,-4,-9,-4,9,1,8,-10,-2,-6,1,2,10,4,-6,-10,3,-6,5,1,9,-4,10,10,10,-10,-2,1,-4,5,9,-6,1,7,1,10,2,9,-9,7,-4,10,-7,-10,-10,-4,-10,1,10,7,-8,3,8,3,10,-7,-4,2,10,6,-7,-8,9,-8,9,-4,10,-6,-9,8,-10,-6,3,-8,10,-4,-2,-3,4,-2,7,-10,5,-7,-7,-6,1,-1,-1,-9,3,-7,-8,8,2,-2,7,-7,-8,-7,-1,-1,-6,-1,1,8,-5,-1,-5,-2,-10,-7,-6,1,9,10,2,4,-4,-5,-5,9,5],[-3,-8,9,-9,6,1,1,7,1,1,-7,10,-9,4,7,7,-2,-4,4,-9,1,10,-9,-1,6,6,8,5,5,7,-1,-1,-3,5,-10,-8,2,1,4,-2,8,4,-5,5,-10,-1,9,3,-9,-9,-3,-10,-4,-8,4,9,-9,-8,-1,4,5,2,9,8,-6,-9,-6,3,1,-10,-3,-7,-9,-9,-9,-2,10,10,1,-9,7,-5,-8,-2,-4,-6,-9,-9,9,1,-1,-4,-8,2,4,-6,1,3,4,8,8,-2,8,-7,1,7,-2,-5,-5,2,8,10,1,-9,-7,-2,-3,-3,-8,-10,-10,-5,7,-7,-8,-2,8,6,-3,6,-3,6,3,-9,-2,1,5,8,-7,2,3,2,6,-3,-2,-1,-7,1,6,10,8,-2,9,-4,-5,10,10,9,7,-5,1,3,2,-8,5,-8,1,-3,10,-5,-6,2,6,-4,-5,3,6,6,2,-8,-1,-8,-8,5,10,4,-4,4,2,-4,-6,3,-2,9,2,-3],[-6,9,5,4,1,-3,-6,6,2,5,6,-7,-8,6,-4,4,9,-5,-5,-2,-7,-5,10,3,1,8,-5,-10,3,-4,3,8,1,-8,2,-7,5,-4,-3,-4,4,-4,1,3,-9,3,-6,8,8,-6,-8,-1,-4,5,-3,-2,3,7,1,9,8,-6,7,-2,9,-5,-10,9,1,-9,-3,3,-8,-1,10,-3,-4,-3,-10,-5,-2,8,-7,3,-1,4,3,1,8,4,-3,-8,-5,-9,-5,-6,7,8,8,-3,4,-4,-7,-2,-8,4,-3,-2,5,-3,-8,-9,2,-10,-9,-1,4,-9,10,-5,8,-10,2,-1,-5,-7,-3,9,-4,-6,-6,3,2,-1,5,-1,-7,-6,-4,6,-1,-4,9,-10,4,5,4,-10,-4,-1,8,4,4,4,6,9,3,2,5,-7,9,-9,-2,1,1,-4,3,-6,-7,7,2,-3,-9,9,8,-5,7,-1,-4,-4,-6,5,6,8,-4,9,1,1,8,4,-3,4,-2,9,-9,2],[-1,5,-10,1,10,-10,-1,-2,10,-4,6,4,-2,5,-8,-7,4,4,-6,8,4,-8,-8,3,-8,-2,2,-4,9,-8,-6,3,6,6,6,-10,3,-5,-10,-10,5,3,-7,4,6,-2,6,4,5,-3,-3,1,-1,-8,7,9,9,-1,-1,-2,-8,1,10,-3,-5,-7,-1,6,-9,3,4,9,-6,-2,9,3,-10,9,-10,-6,3,5,6,-6,-6,4,-10,3,-5,-2,1,-2,-10,1,-5,6,4,10,3,-6,4,8,5,10,8,-4,7,-10,-7,8,-9,10,8,-5,7,-1,-3,4,2,-8,6,-3,-8,-10,5,-6,6,10,-9,6,-8,8,-8,9,-8,4,9,-7,-10,1,-6,-10,7,6,-4,-2,3,-6,-2,-3,-2,-4,-4,-7,7,10,6,-4,9,-9,-6,7,-10,-2,-8,3,-2,2,-8,-10,8,6,9,7,4,3,6,1,3,-6,-8,2,8,8,2,10,-10,-1,10,9,5,-6,-1,5,-10,-6]], dtype = "uint8")#candidate|3059|(8, 196)|const|uint8
call_3058 = relay.TupleGetItem(func_1461_call(relay.reshape(var_3046.astype('uint8'), []), relay.reshape(const_3059.astype('uint8'), [14, 14, 8]), ), 0)
call_3060 = relay.TupleGetItem(func_1464_call(relay.reshape(var_3046.astype('uint8'), []), relay.reshape(const_3059.astype('uint8'), [14, 14, 8]), ), 0)
output = relay.Tuple([bop_3048,call_3052,call_3058,const_3059,])
output2 = relay.Tuple([bop_3048,call_3053,call_3060,const_3059,])
func_3062 = relay.Function([var_3046,var_3047,], output)
mod['func_3062'] = func_3062
mod = relay.transform.InferType()(mod)
var_3063 = relay.var("var_3063", dtype = "uint64", shape = ())#candidate|3063|()|var|uint64
var_3064 = relay.var("var_3064", dtype = "uint64", shape = (1, 4, 3))#candidate|3064|(1, 4, 3)|var|uint64
output = func_3062(var_3063,var_3064,)
func_3065 = relay.Function([var_3063,var_3064,], output)
mutated_mod['func_3065'] = func_3065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_3070 = func_2281_call()
call_3071 = func_2281_call()
output = call_3070
output2 = call_3071
func_3073 = relay.Function([], output)
mod['func_3073'] = func_3073
mod = relay.transform.InferType()(mod)
mutated_mod['func_3073'] = func_3073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mutated_mod.get_global_var('func_3073')
call_3074 = func_3073_call()
output = call_3074
func_3075 = relay.Function([], output)
mutated_mod['func_3075'] = func_3075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3116 = relay.TupleGetItem(func_2815_call(), 0)
call_3117 = relay.TupleGetItem(func_2817_call(), 0)
func_2682_call = mod.get_global_var('func_2682')
func_2686_call = mutated_mod.get_global_var('func_2686')
const_3123 = relay.const([-6,-9,4,1,-8,-10,5,-4,3,9,-7,-4,-2,-8,-9,9,10,6,-3,9,-5,4,6,-6,-1,3,-10,1,-10,-4,-1,-4,3,4,-6,1,-2,3,3,7,6,4,-8,9,5,7,-8,-7,-1,-1,6,10,7,5,5,-5,-3,9,3,1,3,6,-9,6,-7,-10,-9,8,4,-5,5,-9,9,2,-8,-2,1,6,-2,-1,-9,10,1,-5,3,-5,-10,-9,-4,10,3,5,-9,-3,3,-10,5,2,9,-3,7,-3,2,-7,2,-8,-9,-9,4,-1,-8,-9,10,10,-9,2,-3,-7,4,1,3,-2,-2,3,5,-3,5,-5,-5,4,10,-2,-8,7,-2,1,10,8,-6,-8,-4,-3,4,4,5,-5,-4,9,7,6,-6,5,-10,-8,5,-7], dtype = "int8")#candidate|3123|(156,)|const|int8
var_3124 = relay.var("var_3124", dtype = "float32", shape = (3136,))#candidate|3124|(3136,)|var|float32
call_3122 = relay.TupleGetItem(func_2682_call(relay.reshape(const_3123.astype('int8'), [6, 13, 2]), relay.reshape(var_3124.astype('float32'), [3136,]), ), 2)
call_3125 = relay.TupleGetItem(func_2686_call(relay.reshape(const_3123.astype('int8'), [6, 13, 2]), relay.reshape(var_3124.astype('float32'), [3136,]), ), 2)
func_2748_call = mod.get_global_var('func_2748')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3138 = relay.TupleGetItem(func_2748_call(relay.reshape(call_3116.astype('float64'), [3, 180])), 2)
call_3139 = relay.TupleGetItem(func_2751_call(relay.reshape(call_3116.astype('float64'), [3, 180])), 2)
output = relay.Tuple([call_3116,call_3122,const_3123,var_3124,call_3138,])
output2 = relay.Tuple([call_3117,call_3125,const_3123,var_3124,call_3139,])
func_3140 = relay.Function([var_3124,], output)
mod['func_3140'] = func_3140
mod = relay.transform.InferType()(mod)
mutated_mod['func_3140'] = func_3140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3141 = relay.var("var_3141", dtype = "float32", shape = (3136,))#candidate|3141|(3136,)|var|float32
func_3140_call = mutated_mod.get_global_var('func_3140')
call_3142 = func_3140_call(var_3141)
output = call_3142
func_3143 = relay.Function([var_3141], output)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3169 = relay.TupleGetItem(func_2716_call(), 2)
call_3170 = relay.TupleGetItem(func_2717_call(), 2)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_3178 = func_2822_call()
call_3179 = func_2822_call()
output = relay.Tuple([call_3169,call_3178,])
output2 = relay.Tuple([call_3170,call_3179,])
func_3181 = relay.Function([], output)
mod['func_3181'] = func_3181
mod = relay.transform.InferType()(mod)
output = func_3181()
func_3182 = relay.Function([], output)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3195 = relay.var("var_3195", dtype = "uint64", shape = (15, 3, 16))#candidate|3195|(15, 3, 16)|var|uint64
var_3196 = relay.var("var_3196", dtype = "uint64", shape = (15, 3, 16))#candidate|3196|(15, 3, 16)|var|uint64
bop_3197 = relay.bitwise_or(var_3195.astype('uint64'), relay.reshape(var_3196.astype('uint64'), relay.shape_of(var_3195))) # shape=(15, 3, 16)
output = bop_3197
output2 = bop_3197
func_3206 = relay.Function([var_3195,var_3196,], output)
mod['func_3206'] = func_3206
mod = relay.transform.InferType()(mod)
var_3207 = relay.var("var_3207", dtype = "uint64", shape = (15, 3, 16))#candidate|3207|(15, 3, 16)|var|uint64
var_3208 = relay.var("var_3208", dtype = "uint64", shape = (15, 3, 16))#candidate|3208|(15, 3, 16)|var|uint64
output = func_3206(var_3207,var_3208,)
func_3209 = relay.Function([var_3207,var_3208,], output)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3223 = relay.TupleGetItem(func_3181_call(), 0)
call_3224 = relay.TupleGetItem(func_3182_call(), 0)
func_2884_call = mod.get_global_var('func_2884')
func_2885_call = mutated_mod.get_global_var('func_2885')
call_3226 = relay.TupleGetItem(func_2884_call(), 0)
call_3227 = relay.TupleGetItem(func_2885_call(), 0)
output = relay.Tuple([call_3223,call_3226,])
output2 = relay.Tuple([call_3224,call_3227,])
func_3228 = relay.Function([], output)
mod['func_3228'] = func_3228
mod = relay.transform.InferType()(mod)
output = func_3228()
func_3229 = relay.Function([], output)
mutated_mod['func_3229'] = func_3229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_3247 = func_2281_call()
call_3248 = func_2281_call()
uop_3254 = relay.asinh(call_3247.astype('float64')) # shape=(6, 13, 2)
uop_3256 = relay.asinh(call_3248.astype('float64')) # shape=(6, 13, 2)
output = uop_3254
output2 = uop_3256
func_3257 = relay.Function([], output)
mod['func_3257'] = func_3257
mod = relay.transform.InferType()(mod)
output = func_3257()
func_3258 = relay.Function([], output)
mutated_mod['func_3258'] = func_3258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3276 = relay.TupleGetItem(func_2815_call(), 1)
call_3277 = relay.TupleGetItem(func_2817_call(), 1)
output = call_3276
output2 = call_3277
func_3286 = relay.Function([], output)
mod['func_3286'] = func_3286
mod = relay.transform.InferType()(mod)
mutated_mod['func_3286'] = func_3286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3286_call = mutated_mod.get_global_var('func_3286')
call_3287 = func_3286_call()
output = call_3287
func_3288 = relay.Function([], output)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3327 = relay.TupleGetItem(func_2815_call(), 1)
call_3328 = relay.TupleGetItem(func_2817_call(), 1)
var_3333 = relay.var("var_3333", dtype = "int8", shape = (6, 13, 2))#candidate|3333|(6, 13, 2)|var|int8
bop_3334 = relay.not_equal(call_3327.astype('bool'), relay.reshape(var_3333.astype('bool'), relay.shape_of(call_3327))) # shape=(6, 13, 2)
bop_3337 = relay.not_equal(call_3328.astype('bool'), relay.reshape(var_3333.astype('bool'), relay.shape_of(call_3328))) # shape=(6, 13, 2)
bop_3338 = relay.bitwise_or(var_3333.astype('int64'), relay.reshape(call_3327.astype('int64'), relay.shape_of(var_3333))) # shape=(6, 13, 2)
bop_3341 = relay.bitwise_or(var_3333.astype('int64'), relay.reshape(call_3328.astype('int64'), relay.shape_of(var_3333))) # shape=(6, 13, 2)
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_3351 = relay.var("var_3351", dtype = "uint8", shape = (1820,))#candidate|3351|(1820,)|var|uint8
call_3350 = relay.TupleGetItem(func_1800_call(relay.reshape(var_3351.astype('uint8'), [10, 13, 14]), relay.reshape(var_3351.astype('uint8'), [10, 13, 14]), ), 2)
call_3352 = relay.TupleGetItem(func_1803_call(relay.reshape(var_3351.astype('uint8'), [10, 13, 14]), relay.reshape(var_3351.astype('uint8'), [10, 13, 14]), ), 2)
output = relay.Tuple([bop_3334,bop_3338,call_3350,var_3351,])
output2 = relay.Tuple([bop_3337,bop_3341,call_3352,var_3351,])
func_3363 = relay.Function([var_3333,var_3351,], output)
mod['func_3363'] = func_3363
mod = relay.transform.InferType()(mod)
var_3364 = relay.var("var_3364", dtype = "int8", shape = (6, 13, 2))#candidate|3364|(6, 13, 2)|var|int8
var_3365 = relay.var("var_3365", dtype = "uint8", shape = (1820,))#candidate|3365|(1820,)|var|uint8
output = func_3363(var_3364,var_3365,)
func_3366 = relay.Function([var_3364,var_3365,], output)
mutated_mod['func_3366'] = func_3366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3394 = relay.TupleGetItem(func_3181_call(), 1)
call_3395 = relay.TupleGetItem(func_3182_call(), 1)
output = call_3394
output2 = call_3395
func_3396 = relay.Function([], output)
mod['func_3396'] = func_3396
mod = relay.transform.InferType()(mod)
output = func_3396()
func_3397 = relay.Function([], output)
mutated_mod['func_3397'] = func_3397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3398 = relay.var("var_3398", dtype = "uint16", shape = ())#candidate|3398|()|var|uint16
const_3399 = relay.const([[[10,-7,8,9,-9,3,-7,-5,-10,5,4,-4,-5],[-7,9,-5,6,7,-10,-9,1,1,8,6,-4,-8]],[[4,3,9,6,-2,7,3,-1,-10,-3,4,-8,2],[8,7,-2,-10,-10,-5,-6,-9,4,-7,-6,5,8]],[[3,-2,2,-9,-8,1,8,-6,10,-1,-3,1,-9],[-6,6,6,2,2,-7,-4,-6,2,6,6,-10,-3]],[[1,2,2,-4,6,6,7,-3,-3,-1,1,10,3],[-3,2,-5,-3,2,-9,-4,6,2,-9,8,-3,10]],[[4,3,-7,-2,6,1,6,-5,-10,1,-8,-9,-9],[1,-8,8,-1,3,1,7,3,-7,3,-6,-2,9]],[[10,-8,-7,-3,-8,-8,3,-6,-7,2,-1,8,4],[7,1,-5,-3,1,10,6,-4,6,8,-2,5,4]],[[6,1,8,-3,3,-3,10,8,-8,9,-1,-1,-9],[3,-10,1,8,5,10,-6,-7,1,3,-7,-6,-6]],[[1,5,2,-5,2,8,8,8,3,-2,3,8,-5],[-8,3,-7,1,6,9,-6,7,-10,9,-2,-2,-5]],[[-8,-2,9,-5,3,-7,-5,8,4,4,9,-6,-4],[5,3,-10,2,-7,1,3,5,6,3,-3,-9,-8]],[[-2,9,3,9,-3,-8,-10,-5,-6,-5,-8,-10,-5],[10,9,-2,-4,-5,6,-2,5,-1,-4,8,-7,-8]],[[3,8,10,-4,5,10,-9,-6,-10,-4,-8,-4,3],[10,-4,-5,-8,-9,-8,-7,-10,-4,-3,6,9,-2]],[[4,9,7,-7,10,10,-2,4,1,-7,-10,2,1],[7,-7,-7,5,8,5,-3,-7,1,-3,1,8,-8]],[[9,2,-7,10,-7,3,-10,4,-8,8,-3,7,8],[1,-8,-4,9,6,4,10,-10,-5,-5,6,5,9]],[[7,-5,5,-10,-5,9,2,-1,-9,10,-3,-2,4],[-2,-3,9,8,-4,-8,-6,-1,-8,-10,1,-10,-3]]], dtype = "uint16")#candidate|3399|(14, 2, 13)|const|uint16
bop_3400 = relay.bitwise_or(var_3398.astype('uint16'), const_3399.astype('uint16')) # shape=(14, 2, 13)
uop_3409 = relay.sin(bop_3400.astype('float32')) # shape=(14, 2, 13)
output = uop_3409
output2 = uop_3409
func_3416 = relay.Function([var_3398,], output)
mod['func_3416'] = func_3416
mod = relay.transform.InferType()(mod)
mutated_mod['func_3416'] = func_3416
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3417 = relay.var("var_3417", dtype = "uint16", shape = ())#candidate|3417|()|var|uint16
func_3416_call = mutated_mod.get_global_var('func_3416')
call_3418 = func_3416_call(var_3417)
output = call_3418
func_3419 = relay.Function([var_3417], output)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3436 = relay.TupleGetItem(func_2716_call(), 0)
call_3437 = relay.TupleGetItem(func_2717_call(), 0)
func_3416_call = mod.get_global_var('func_3416')
func_3419_call = mutated_mod.get_global_var('func_3419')
const_3441 = relay.const(-6, dtype = "uint16")#candidate|3441|()|const|uint16
call_3440 = func_3416_call(relay.reshape(const_3441.astype('uint16'), []))
call_3442 = func_3416_call(relay.reshape(const_3441.astype('uint16'), []))
output = relay.Tuple([call_3436,call_3440,const_3441,])
output2 = relay.Tuple([call_3437,call_3442,const_3441,])
func_3446 = relay.Function([], output)
mod['func_3446'] = func_3446
mod = relay.transform.InferType()(mod)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mutated_mod.get_global_var('func_3446')
call_3447 = func_3446_call()
output = call_3447
func_3448 = relay.Function([], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3470 = func_3257_call()
call_3471 = func_3257_call()
output = call_3470
output2 = call_3471
func_3481 = relay.Function([], output)
mod['func_3481'] = func_3481
mod = relay.transform.InferType()(mod)
output = func_3481()
func_3482 = relay.Function([], output)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3502 = relay.var("var_3502", dtype = "float64", shape = (12, 8, 3))#candidate|3502|(12, 8, 3)|var|float64
var_3503 = relay.var("var_3503", dtype = "float64", shape = (12, 8, 3))#candidate|3503|(12, 8, 3)|var|float64
bop_3504 = relay.floor_divide(var_3502.astype('float64'), relay.reshape(var_3503.astype('float64'), relay.shape_of(var_3502))) # shape=(12, 8, 3)
output = relay.Tuple([bop_3504,])
output2 = relay.Tuple([bop_3504,])
func_3507 = relay.Function([var_3502,var_3503,], output)
mod['func_3507'] = func_3507
mod = relay.transform.InferType()(mod)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mutated_mod.get_global_var('func_3507')
var_3509 = relay.var("var_3509", dtype = "float64", shape = (12, 8, 3))#candidate|3509|(12, 8, 3)|var|float64
var_3510 = relay.var("var_3510", dtype = "float64", shape = (12, 8, 3))#candidate|3510|(12, 8, 3)|var|float64
call_3508 = func_3507_call(var_3509,var_3510,)
output = call_3508
func_3511 = relay.Function([var_3509,var_3510,], output)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3515 = relay.TupleGetItem(func_2815_call(), 0)
call_3516 = relay.TupleGetItem(func_2817_call(), 0)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3519 = func_3012_call()
call_3520 = func_3012_call()
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_3521 = func_3073_call()
call_3522 = func_3073_call()
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
var_3524 = relay.var("var_3524", dtype = "float32", shape = (3136,))#candidate|3524|(3136,)|var|float32
call_3523 = relay.TupleGetItem(func_2300_call(relay.reshape(var_3524.astype('float32'), [16, 14, 14])), 0)
call_3525 = relay.TupleGetItem(func_2302_call(relay.reshape(var_3524.astype('float32'), [16, 14, 14])), 0)
func_2777_call = mod.get_global_var('func_2777')
func_2780_call = mutated_mod.get_global_var('func_2780')
const_3539 = relay.const([-9,9,8,-7,-6,5,9,7,2,-1,5,-9,6,-9,5,2,-7,-7,10,8,-8,6,-3,-7,10,10,-6,10,-7,8,1,5,1,-4,6,9,-5,1,7,-2,8,4,-5,7,5,5,7,5,1,-3,3,1,6,-5,10,1,1,3,2,-7,5,-3,1,-10,-9,-9,4,8,2,4,1,3,3,-8,-3,-9,9,3,-10,-10,8,9,1,-4,3,6,-5,7,-4,2,2,-8,-3,-10,-5,-2,-2,-5,-10,-6,8,8,3,-3,10,4,9,4,-4,5,-5,-2,-7,7,-7,10,-7,1,4,6,-3,10,4,-2,-6,-8,1,7,-7,7,9,9,8,5,8,-7,-2,1,-1,-4,9,10,-10,-9,-3,-10,4,2,1,-5,1,-8,-1,8,-1,10,4,1,1,2,-6,8,-4,-3,8,-4,10,-1,-10,-4,5,10,-6,-5,2,-10,-2,8,1,-10,9,-9,3,-9,-10,5,-9,-7,7,1,-9,-8,1,6,-7,-10,-10,7,-10,-8,1,8,-8,2,-6,5,-4,-8,-8,9,-3,-4,-10,6,-7,-10,8,8,-10,-1,3,-2,8,-6,-6,-4,3,-10,8,1,-10,4,9,-4,-2,5,-3,-6,9,-9,-4,4,2,-10,-1,6,2,-9,-3,9,-10,-5,-1,5,-1,-7,-9,2,-6,-2,3,-10,9,3,-4,9,7,6,3,10,-10,-10,-9,-10,5,3,9,3,3,-2,-10,-9,-5,7,-10,3,-5,9,-7,8,-3,2,-2,-2,4,-2,-6,-3,9,8,-8,-9,6,-6,9,7,-5,-5,-5,-4,2,-5,-8,-9,10,-6,10,1,5,1,1,5,-8,-7,-9,1,-8,10,-7,-2,-6,-5,-4,-4,-4,-3,4,3,8,4,2,9,-4,-5,-5,7,-5,-10,7,-8,-1,-7,10,-9,-1,-6,-10,2,-3,4,4,-1,-4,-10,5,3,10,4,-10,-8,6,4,10,-10,3,-3,7,-9,-5,1,8,9,-4,10,4,4,4,5,-4,-9,9,7,5,7,5,-9,4,3,-1,-1,-10,4,-3,-10,-2,-5,8,-8,-7,3,7,-7,10,-8,-4,5,-3,10,7,-2,-6,3,8,6,-8,-9,1,-5,-7,-3,3,-5,-8,-2,-2,6,-1,1,-2,-5,6,-7,-10,-7,7,-8,-9,-9,-7,-3,-5,-8,-10,8,-7,-4,6,9,4,-3,-7,3,5,4,3,2,6,6,2,-8,6,-4,-1,-8,-1,10,-3,8,7,9,-7,7,4,9,-7,5,-7,6,9,7,-7,2,9,8,-9,-5,-2,2,-8,-10,-8,-8,1,4,-8,-4,7,-4,5,4,1,-4,4,8,7,-8,-2,-9,-10,7,-4,-2,-8,-9,10,-6,-5,-5,6,-2,1,7,4,-10,-1,-4,-9,-7,-5,-9,2,-6,-8,5,-4,7,6,-3,-2,-5,-2,-7,5,6,-2,5,-10,2,-1,2,-5,3,4,2,-8,8,-7,-9,-1,-2,-1,7,-7,-1,-8,-6,-3,2,6,3,2,4,-6,-2,9,10,-1,5,-5,-10,1,-6,6,2,-2,6,6,-3,-2,-9,-9,4,5,-9,6,-5,-7,3,-9,-7,-2,6,4,2,4,-8,-10,2,2,8,-5,6,6,-7,-4,7,-1,6,4,-9,9,1,10,7,-9,1,-1,-5,-6,-1,9,8,5,-5,-2,-9,-4,2,-6,-7,5,-6,-4,-1,-3,5,-2,-4,-9,-8,-3,-1,7,-10,-4,7,-4,-6,-4,-1,1,3,-8,-2,5,-7,-7,7,6,7,4,-7,-7,-9,10,-1,7,-6,-10,4,-8,-6,-3,-9,10,-7,1,5,9,-2,5,1,5,6,8,1,-3,3,9,3,9,2,-5,2,10,-4,7,-6,5,-10,-4,-10,-7,4,-4,-3,-8,7,-5,-9,4,1,-1,6,1,-10,6,-3,-3,-8,4,4,-10,7,-9,-10,2,-4,8,-10,5,-3,1,3,3,-3,-5,-8,7,8,-2,10,-10,8,4,7,1,10,6,-8,-3,5,-7,2,-8,1,-9,-5,-5,8,-2,-9,-5,-5,-2,-9,3,2,-6,-5,5,6,6,4,6,-1,7,9,10,-2,-6,-5,4,10,-4,-6,-10,-4,6,10,-1,10,10,9,-5,2,9,-10,-7,-5,-5,9,-5,-4,2,-5,-4,1,4,5,9,1,-7,3,9,-6,-8,2,9,-4,-1,-3,4,10,-2,-7,2,-2,-9,4,2,-4,4,-4,3,3,-5,-6,8,6,1,-4,-3,4,1,2,6,4,2,-5,5,7,-4,-8,-1,4,-2,-6,7,9,-8,3,-6,5,4,1,8,9,2,-4,-6,6,-1,2,-4,5,-1,7,-5,3,4,1,3,4,9,-10,-10,-10,-1,-6,3,-7,2,-10,-10,-8,-9,8,9,1,2,3,-10,-3,-7,-5,4,5,-10,3,-1,4,-10,-4,-4,6,-8,10,-4,-8,3,1,7,-1,2,7,-5,-3,-3,3,-4,3,-8,8,5,-2,1,-6,-1,5,1,7,3,10,-9,-3,-1,-4,1,-2,-10,-5,-10,-9,-9,6,-8,-7,-5,9,9,-6,8,3,2,6,-2,2,3,4,-6,4,-3,7,8,-9,-9,1,-5,-7,-10,8,7,5,-1,-3,-9,-3,8,8,7,6,4,-3,2,7,-6,-5,7,4,6,7,4,8,3,9,7,7,-3,-2,4,-8,-8,-3,10,3,3,-3,-3,9,9,5,3,7,4,-2,3,-7,2,6,-7,2,-10,-9,6,-8,-7,-10,6,-10,-1,9,4,-2,7,-10,6,6,-7,-8,6,9,-10,-8,8,-7,2,-2,-1,3,-2,-2,-7,6,-7,6,-2,-7,-5,9,10,-4,-9,9,1,-7,6,-3,2,-6,6,10,-10,10,-9,9,-2,-4,-9,2,6,7,1,-7,-9,-9,7,-5,-6,2,-4,7,-6,-9,-3,-9,2,-10,-5,-5,-10,-1,6,5,1,-7,2,10,-6,-7,2,7,1,5,6,2,6,6,1,4,-1,-6,-7,-1,7,-4,-3,1,2,-1,7,4,-7,7,-4,-10,2,-7,2,3,-7,8,-10,5,-6,10,-10,-9,7,-4,7,-5,2,1,10,-5,3,-9,4,-6,-10,6,-1,8,-2,-8,-8,9,2,4,-4,-3,2,-1,-7,7,-1,9,9,-1,-10,2,-1,6,9,-9,8,-1,5,-7,6,10,-8,-3,-4,7,-5,-2,10,-4,-9,-3,7,9,3,-2,1,-8,1,-5,-8,-9,-3,-3,-8,-1,2,-5,-7,8,-10,1,-4,-10,4,2,-8,-7,3,-2,-7,-9,9,7,-8,-10,-9,10,1,10,3,-7,4,-2,4,-7,8,-9,2,7,-2,8,7,5,-8,-5,-5,-4,6,6,-1,-2,-1,-8,-8,-2,-1,10,-8,7,-9,1,-5,-3,-10,-1,-3,9,-6,6,-3,2,1,-3,-6,7,3,9,2,8,-2,4,-4,9,4,-1,8,-1,7,7,4,-1,3,-4,-4,8,3,-3,-9,-6,10,9,3,4,-4,3,9,5,-6,7,-3,-5,-1,3,1,-10,-7,8,9,-9,-6,-2,-8,5,8,-3,-10,-7,-9,10,10,-2,1,8,-5,-4,3,4,-3,-5,-4,3,-9,7,-3,-9,-7,1,-10,-9,-7,-5,-6,-2,-1,-3,-7,1,9,5,4,-2,-2,10,-1,8,9,8,4,8,9,2,-10,-6,-10,-8,5,-5,4,-1,-4,4,-4,-1,-2,-6,2,1,-1,-10,5,5,-9,-7,6,9,8,-5,6,3,-7,-3,6,-3,-8,-10,-1,3,7,-7,9,-5,9,-1,6,-7,4,-1,1,-1,-7,3,8,-1,9,8,-4,-7,10,2,-6,8,6,-2,5,7,2,1,-8,-5,-10,5,5,-1,-1,-1,-9,-7,-10,1,10,-5,-9,-4,-1,-4,-1,7,10,-1,10,-10,-10,-3,5,4,-3,10,7,7,-1,1,9,-8,-5,-3,-10,3,9,-2,9,10,7,3,1,4,-2,-6,2,-1,-2,1,7,-3,9,3,-1,9,2,-6,2,7,-6,7,6,4,-2,1,10,-10,-9,-6,-7,-10,8,1,7,-6,-2,10,10,-9,8,6,2,-8,8,-3,10,-3,1,-10,4,1,8,-8,-5,1,-5,-3,2,9,-5,6,-6,-4,2,7,-2,4,10,-6,-6,-8,5,-1,-1,8,3,-1,-2,-7,-1,-2,3,-2,-7,5,9,-6,5,3,8,-3,-5,1,1,2,2,-6,-10,-7,-7,2,-8,-10,6,10,-5,6,-7,-9,-4,-2,-7,-3,-7,3,5,-1,4,5,-7,5,-5,-3,-7,-1,-5,9,-1,8,5,3,-9,-2,-6,-4,-1,6,-1,2,-1,-10,8,-10,-4,-9,4,-10,6,7,-10,-6,1,10,-9,9,-5,-10,-8,2,-9,-2,2,-5,5,-2,-4,-5,8,-6,-8,-1,-5,6,1,7,10,2,-3,-10,-10,3,-1,-6,6,10,-10,6,1,-1,1,-2,-9,-5,-3,3,9,5,4,1,-5,3,9,1,3,-2,-9,-7,1,5,7,5,-1,8,-2,-5,-7,4,-10,-7,6,9,-6,-8,-8,-10,8,-3,-6,6,9,6,-10,3,5,10,1,-9,-8,5,9,-5,1,-9,8,-4,5,-4,-2,4,6,1,5,-6,8,-9,7,7,1,-2,9,9,-7,8,7,-9,6,-2,-1,-4,-10,-9,8,-4,9,-1,3,4,-2,-1,4,1,9,5,-2,10,-5,-10,2,3,1,2,5,-5,-8,-5,6,6,-9,-7,9,6,4,-6,-1,2,6,-5,-9,7,7,-2,8,-8,9,10,3,-2,2,-5,-9,-5,10,8,-10,-7,-7,-10,6,-1,-3,3,-7,-3,4,-3,7,-2,10,6,-2,-9,-1,3,-8,2,-7,9,1,4,2,-2,7,-7,1,7,4,4,6,3,-4,-7,-2,-7,-10,10,-10,2,6,4,-1,-3,-8,2,-6,8,-10,3,1,4,-2,-5,7,-2,7,10,-9,-6,-2,1,-3,-10,-3,-6,-4,8,-7,10,2,-8,-10,-8,-3,-5,1,3,-6,9,-7,-6,5,8,-10,-7,4,1,6,-2,4,-4,-5,10,-1,3,-4,-10,6,3,8,-6,7,-6,-7,-2,8,-5,-4,-6,-2,4,9,-6,-1,9,-1,4,2,-3,-10,9,10,5,-7,-10,2,-8,5,4,-3,7,-7,3,5,-8,10,7,1,5,-2,8,6,-3,-10,-9,9,8,-9,3,7,-10,-9,9,6,-8,7,-4,-4,6,-5,10,2,-10,-10,-6,-6,-6,-3,5,-8,-10,2,8,1,1,-10,10,10,-3,-2,-1,-7,-3,3,10,2,-4,3,2,9,-2,6,-9,1,-9,4,1,-7,10,4,-9,9,5,-9,-8,10,-5,1,3,9,4,1,3,-2,8,-2,-6,-2,2,6,10,-1,2,-1,3,6,3,5,-5,-8,4,-2,10,-3,-7,-6,7,-4,-7,-6,4,8,-1,-3,9,-9,-1,5,-7,6,9,1,-7,-5,-9,-7,-2,2,9,10,-7,4,2,-1,-10,-2,-9,3,7,4,-8,1,-7,5,-8,-7,8,3,3,-10,1,9,7,9,1,-2,-6,3,5,3,-5,-6,-2,-2,3,7,5,7,2,-6,1,4,-10,-3,4,-6,-4,3,-3], dtype = "uint32")#candidate|3539|(2160,)|const|uint32
call_3538 = relay.TupleGetItem(func_2777_call(relay.reshape(const_3539.astype('uint32'), [16, 15, 9]), relay.reshape(const_3539.astype('uint32'), [16, 15, 9]), ), 1)
call_3540 = relay.TupleGetItem(func_2780_call(relay.reshape(const_3539.astype('uint32'), [16, 15, 9]), relay.reshape(const_3539.astype('uint32'), [16, 15, 9]), ), 1)
output = relay.Tuple([call_3515,call_3519,call_3521,call_3523,var_3524,call_3538,const_3539,])
output2 = relay.Tuple([call_3516,call_3520,call_3522,call_3525,var_3524,call_3540,const_3539,])
func_3561 = relay.Function([var_3524,], output)
mod['func_3561'] = func_3561
mod = relay.transform.InferType()(mod)
mutated_mod['func_3561'] = func_3561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3562 = relay.var("var_3562", dtype = "float32", shape = (3136,))#candidate|3562|(3136,)|var|float32
func_3561_call = mutated_mod.get_global_var('func_3561')
call_3563 = func_3561_call(var_3562)
output = call_3563
func_3564 = relay.Function([var_3562], output)
mutated_mod['func_3564'] = func_3564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3632 = func_3257_call()
call_3633 = func_3257_call()
output = relay.Tuple([call_3632,])
output2 = relay.Tuple([call_3633,])
func_3637 = relay.Function([], output)
mod['func_3637'] = func_3637
mod = relay.transform.InferType()(mod)
output = func_3637()
func_3638 = relay.Function([], output)
mutated_mod['func_3638'] = func_3638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3657 = relay.TupleGetItem(func_3181_call(), 0)
call_3658 = relay.TupleGetItem(func_3182_call(), 0)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3660 = relay.TupleGetItem(func_3181_call(), 1)
call_3661 = relay.TupleGetItem(func_3182_call(), 1)
func_2748_call = mod.get_global_var('func_2748')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_3668 = relay.TupleGetItem(func_2748_call(relay.reshape(call_3657.astype('float64'), [3, 180])), 2)
call_3669 = relay.TupleGetItem(func_2751_call(relay.reshape(call_3657.astype('float64'), [3, 180])), 2)
func_3363_call = mod.get_global_var('func_3363')
func_3366_call = mutated_mod.get_global_var('func_3366')
const_3684 = relay.const([4,-5,-7,-4,-2,4,1,3,-9,-4,-5,-7,-7,8,-10,-9,4,3,-8,2,1,-1,5,-6,2,5,3,10,5,-3,2,9,3,-7,8,10,-7,-4,8,-9,10,-8,6,-4,5,-7,-7,-4,10,-3,3,10,6,-2,-3,-5,-5,-7,10,-3,9,1,-8,-8,8,-9,-7,-9,-4,-7,4,-4,-4,9,4,-8,-1,9,-6,10,-10,-3,9,-10,-4,3,-1,-6,-8,1,-6,5,10,7,-10,-9,7,7,-7,10,-8,-9,10,5,10,-9,7,-4,-7,4,-9,8,-9,3,-6,7,-5,-2,-4,2,5,2,5,-10,10,-10,8,-6,-6,1,1,-3,-6,9,2,-6,3,6,6,8,9,-7,-7,4,-2,-5,-4,-7,-1,-2,10,-9,-8,10,-2,-9,10,8,9,-1,8,3,-4,4,-1,-10,4,5,-6,-7,-5,1,-4,-3,2,5,-1,2,1,3,-10,-2,-4,-10,1,-9,4,2,-9,-1,10,-1,-4,-4,-6,-6,10,5,-4,4,-10,2,3,2,-8,4,-8,-8,-5,7,1,-10,-9,5,-9,9,-4,-3,-6,2,5,3,-1,6,-5,-9,-4,7,3,-9,3,-2,-10,3,-8,-3,10,-8,8,7,5,-8,-5,4,-7,10,10,4,-7,-9,3,-9,9,6,-9,1,-10,-5,-3,3,-10,9,-7,4,-3,10,-7,1,-6,3,9,-1,4,4,-3,-9,-3,6,3,-5,-3,2,-6,5,-1,9,-4,-1,-6,-8,-3,5,5,-6,-1,5,-8,5,-2,-5,-1,-5,5,-5,-10,-2,-8,-6,8,9,5,-5,-3,-8,-9,9,7,6,7,-7,-2,7,5,3,9,5,8,-8,8,-7,9,8,-8,-10,-6,2,-7,8,-6,7,4,9,2,2,-3,9,-3,-8,3,-7,-6,-5,-2,4,5,-3,-5,-9,-2,-1,10,-5,-8,5,2,10,-3,-10,9,2,7,-3,2,3,4,6,-3,6,-3,-5,-3,2,10,-10,6,-5,9,-7,-9,-2,-4,7,-1,-9,4,-9,8,2,3,-9,3,-4,-1,3,3,4,-6,-5,4,1,-9,-4,2,-5,5,6,9,2,2,3,-3,-5,10,7,-5,1,-9,-2,-8,-7,-4,-2,-4,-4,-2,-4,-4,5,10,-7,10,-10,2,3,-1,-6,5,8,2,6,9,-8,-8,8,-5,-2,2,4,-5,5,-7,-3,-8,-2,2,-6,-7,-5,-7,4,9,-7,-9,6,-9,-4,-1,9,-5,-4,10,-8,-4,3,-8,-5,4,-8,4,8,7,2,-6,-9,-3,-10,1,-9,2,10,8,7,-1,4,8,-1,-6,3,3,7,-5,8,-4,4,-10,8,-2,-9,-9,-8,-8,4,-9,8,-8,-9,-1,-10,-5,-2,9,-2,-4,-3,5,2,10,9,-2,3,-3,5,-1,-10,-7,1,4,-6,6,3,-1,-7,10,2,3,4,-8,-10,3,-7,-2,-8,-4,7,6,-1,7,-9,6,-1,-7,-4,5,5,-6,10,-3,-6,-5,-6,5,9,7,-10,-9,3,7,10,3,-2,10,-7,-10,-9,-8,-7,4,4,4,-6,7,1,-9,8,8,1,1,2,-4,8,10,4,3,-7,6,-2,-7,8,3,7,7,-1,7,2,6,3,5,-2,-7,-7,-4,-5,1,-6,9,-8,-1,-5,-2,-2,-6,6,2,2,-9,-4,8,-6,3,3,-5,-10,-10,7,-1,4,-3,9,-10,-7,-9,-2,10,-6,-9,-7,-2,1,2,-5,6,-8,-2,4,-9,-9,-4,7,-10,-1,4,1,4,9,9,-9,-3,-4,6,-7,3,-5,-8,2,-7,-6,2,-10,-9,-2,-3,5,-10,1,1,2,3,-10,4,-8,7,-4,1,-5,1,3,10,9,9,5,5,1,-9,-10,4,-3,-2,-10,-1,5,4,-7,8,-2,6,-6,-9,3,-9,-10,-9,-6,2,-5,-2,-6,-10,9,-10,4,10,-1,8,-8,4,-2,3,-7,-5,-9,-7,-1,9,-5,-1,-9,3,-2,5,-10,10,-4,-1,7,5,10,2,-9,1,1,6,-7,-1,10,10,5,-3,2,-1,-9,-6,10,-2,8,4,-7,1,-9,-4,-8,-10,-2,-3,-6,-5,3,-4,9,2,1,-7,8,4,-2,-10,-1,-3,-5,9,-1,6,6,-6,8,-2,-8,9,9,-7,2,-1,-8,-7,-9,6,-3,-5,-4,5,3,-5,8,-8,7,-8,-1,-1,-1,3,7,1,4,8,-9,2,-10,-2,10,5,-5,4,10,-6,4,-3,9,-10,2,-2,10,-2,2,-9,5,-10,7,-6,-1,-7,2,-7,-6,5,-4,-8,1,-7,7,5,-9,2,-1,2,1,-7,9,-5,1,-2,6,-9,9,2,-1,-8,4,-6,-8,-4,-8,-1,5,2,5,10,4,-8,7,-1,-9,-1,-8,-7,-5,-5,-4,-10,2,6,5,-7,-7,-4,-9,5,1,-10,-2,7,-9,-10,9,-1,-3,-6,-5,9,-10,-8,-5,6,8,-7,4,-10,6,-6,-2,-6,6,-3,-7,-2,-3,-5,-3,6,-8,4,9,-6,3,-2,1,-8,-9,7,-5,-2,-1,-9,-9,-10,10,-10,-7,5,-10,-5,-6,7,5,-3,5,9,2,4,4,10,-7,4,9,-4,-8,-10,-3,2,-3,10,-10,-5,8,-6,3,-4,-6,-4,10,2,6,-4,8,-9,-1,-10,10,3,-5,8,-5,-10,-3,-6,2,-2,-9,-9,2,-10,9,-2,-5,4,-6,-2,7,1,-4,-4,4,-7,2,-4,4,-7,-5,-1,-6,2,9,10,-6,7,-8,8,-9,-9,-1,-5,-6,-9,9,-1,6,6,9,-5,-7,-7,-5,8,-10,-3,9,-7,8,6,-7,-4,-2,2,6,-6,-10,-9,6,7,4,8,-9,8,4,-9,-1,-5,5,4,-5,-6,1,-7,7,-6,7,-6,-2,6,-10,-6,9,-6,1,6,10,8,-1,2,-3,1,-2,-6,1,10,-6,2,10,-10,8,6,1,-9,10,-2,-10,3,-10,-8,-3,-2,-7,-4,4,9,-1,-10,-8,7,-2,1,4,6,4,-4,-4,-6,3,-9,6,-9,-10,1,9,8,-9,-3,-4,6,3,-3,-8,-8,-10,10,-5,-5,7,5,-6,-7,-1,-7,-9,2,-2,-9,-5,3,-3,1,1,5,2,6,-2,-4,-7,-7,-3,-10,-4,-7,-7,-4,3,-8,-1,-4,2,2,7,4,-6,-2,-10,4,-1,-2,-1,-9,-2,-1,-10,8,9,4,4,9,3,-9,-4,-6,3,-1,4,1,7,-9,-6,-8,6,10,4,-2,-1,-7,-3,9,-2,-2,-10,-6,-2,-5,3,3,7,-9,-3,5,3,10,-8,-4,9,9,-1,-8,2,-3,-9,2,10,-5,4,10,4,3,-8,2,-7,9,-8,10,2,-2,-2,5,8,8,1,-9,-7,-5,-1,2,-10,3,8,5,-1,-1,1,-6,5,1,9,9,2,10,-2,1,-3,-7,10,-3,1,3,-9,1,2,-9,1,8,5,9,10,9,-6,6,-10,-8,-2,-3,9,-4,7,3,-3,-5,9,-4,-4,6,-1,6,3,2,-3,6,-10,-5,4,-9,7,5,-6,8,-4,-9,-7,6,-7,7,3,3,4,4,-6,-8,7,-2,2,4,-2,-1,-6,-9,5,-6,-9,-4,9,-4,-3,9,-4,2,8,-6,-8,9,3,-10,6,-7,-5,10,10,-6,-4,2,3,-8,1,1,-10,-7,10,1,3,1,-10,-9,-2,-3,1,8,1,-7,7,-6,-10,-10,-10,6,-7,-1,-7,7,-9,-8,8,-6,-2,-3,-3,-6,2,5,4,-5,-8,10,-9,7,-1,-8,-2,8,-7,3,-2,5,4,5,-1,1,-7,5,1,-3,8,9,-6,-2,-2,5,3,-5,9,-4,-10,-8,-7,-4,6,9,1,-1,-9,-9,9,2,-5,-8,-8,-3,-7,-7,7,-3,3,4,-3,10,-10,-10,5,9,-10,-4,-9,-9,1,5,9,8,3,5,-9,-6,4,-5,10,8,-3,10,-1,-2,-5,8,-6,-6,-10,-3,-4,7,-6,6,8,-8,8,5,-7,10,4,5,-6,-9,2,5,-10,5,-5,-4,6,-4,-7,4,3,-5,-3,9,1,-6,-9,-10,-3,6,7,9,-9,-8,9,2,7,3,8,-9,-9,2,6,-8,5,5,4,-5,-6,-1,8,-10,-1,-3,4,-5,-7,-2,9,1,4,7,-1,-10,7,3,7,10,-6,-6,-7,5,8,-8,-9,-2,-7,2,-1,-7,6,-6,5,8,9,4,-6,9,-6,2,7,8,-1,4,-3,-10,2,1,-2,-1,-4,6,-3,4,3,5,-8,-4,5,10,-8,8,-10,9,9,-2,2,3,-4,-5,4,9,-4,2,-2,7,7,-1,-4,7,-10,-8,-9,-8,-9,4,-2,7,9,-5,-2,-2,-6,3,5,5,3,8,4,6,8,9,4,-5,-3,-5,-3,-3,-2,-10,10,-4,9,-4,-7,-8,-2,-4,3,1,-10,-3,5,-3,-6,-6,8,-9,4,-2,6,8,7,8,1,-7,8,-7,6,10,3,-8,9,-8,1,-6,9,6,-3,-7,-4,9,-4,4,6,-2,3,-10,5,5,-9,4,-4,6,-3,-6,-9,2,1,1,-2,-6,3,9,-5,6,7,4,8,-9,-6,1,-9,-7,9,-10,3,7,-4,-5,-1,5,-1,-9,10,4,-2,9,10,-4,6,-1,1,-6,-4,-6,-4,-5,1,-5,-2,6,6,5,-3,-4,-4,1,-10,-2,8,1,10,-6,-10,1,2,3,-5,3,-7], dtype = "uint8")#candidate|3684|(1820,)|const|uint8
call_3683 = relay.TupleGetItem(func_3363_call(relay.reshape(call_3660.astype('int8'), [6, 13, 2]), relay.reshape(const_3684.astype('uint8'), [1820,]), ), 3)
call_3685 = relay.TupleGetItem(func_3366_call(relay.reshape(call_3660.astype('int8'), [6, 13, 2]), relay.reshape(const_3684.astype('uint8'), [1820,]), ), 3)
output = relay.Tuple([call_3657,call_3660,call_3668,call_3683,const_3684,])
output2 = relay.Tuple([call_3658,call_3661,call_3669,call_3685,const_3684,])
func_3686 = relay.Function([], output)
mod['func_3686'] = func_3686
mod = relay.transform.InferType()(mod)
mutated_mod['func_3686'] = func_3686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3686_call = mutated_mod.get_global_var('func_3686')
call_3687 = func_3686_call()
output = call_3687
func_3688 = relay.Function([], output)
mutated_mod['func_3688'] = func_3688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3228_call = mod.get_global_var('func_3228')
func_3229_call = mutated_mod.get_global_var('func_3229')
call_3741 = relay.TupleGetItem(func_3228_call(), 1)
call_3742 = relay.TupleGetItem(func_3229_call(), 1)
output = call_3741
output2 = call_3742
func_3755 = relay.Function([], output)
mod['func_3755'] = func_3755
mod = relay.transform.InferType()(mod)
output = func_3755()
func_3756 = relay.Function([], output)
mutated_mod['func_3756'] = func_3756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_3762 = func_3257_call()
call_3763 = func_3257_call()
func_3396_call = mod.get_global_var('func_3396')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_3776 = func_3396_call()
call_3777 = func_3396_call()
uop_3780 = relay.sinh(call_3762.astype('float32')) # shape=(6, 13, 2)
uop_3782 = relay.sinh(call_3763.astype('float32')) # shape=(6, 13, 2)
uop_3786 = relay.log10(call_3762.astype('float64')) # shape=(6, 13, 2)
uop_3788 = relay.log10(call_3763.astype('float64')) # shape=(6, 13, 2)
uop_3789 = relay.log2(uop_3780.astype('float32')) # shape=(6, 13, 2)
uop_3791 = relay.log2(uop_3782.astype('float32')) # shape=(6, 13, 2)
func_166_call = mod.get_global_var('func_166')
func_168_call = mutated_mod.get_global_var('func_168')
const_3815 = relay.const([-5.616937,3.695765,-9.431439,-8.241559,-8.856111,2.709883,3.662274,5.815086,-6.015442,7.181624,-6.970710,-4.027471,-8.675471,-6.733411,2.164927,3.274504,-4.027315,-2.783528,5.159400,6.845744,-2.741172,-4.719721,-3.894539,-4.410300,6.813441,-5.685190,6.875090,3.165459,4.673799,3.942439,8.557757,-6.061927,-1.224773,-7.529658,1.893188,9.097235,-1.858513,5.394927,9.576240,-0.553919,-3.414185,-7.803658,6.678958,8.114204,-6.389747,-1.870197,-6.246590,3.179821,3.256814,-3.463895,1.317101,4.677731,-6.694161,-8.059754,-7.194461,-7.495247,-4.295200,0.753305,-9.176733,-1.580590,4.760918,0.338315,-2.774728,-1.193084,-7.841442,-4.359922,-4.478044,-5.250686,6.118779,-6.852026,1.621021,-9.022372,-3.668870,2.920350,-7.786678,0.383940,-2.980692,7.687971,7.988721,7.954970,6.183167,8.438927,4.400019,-5.631960,7.101364,-9.734759,6.099928,-3.177396,-9.068607,7.461295,9.334090,6.574424,8.681648,-5.643955,-9.210395,-0.088467,-9.468341,-5.283864,3.273395,-0.217586,3.695079,1.859650,0.862506,-2.491427,-4.019397,-2.321313,-3.031757,5.963876,5.721784,-0.122906,2.147444,9.593659,2.266438,3.120767,-0.020204,6.016513,0.677685,-6.405099,-0.882137,-8.028589,-1.475354,-4.173728,-7.246359,-9.210747,-7.518061,-4.664322,-2.508831,9.365295,7.225618,-9.026859,-4.982051,7.646879,3.845172,-7.282662,0.599673,-7.062520,4.558028,-1.662140,-2.946682,3.859671,-5.099223,4.102529,6.831397,-8.635222,4.804968,-8.806895,-3.658620,2.719434,-6.875961,4.777618,2.364156,9.085840,-3.768988,-0.378303,0.701132,9.982008,4.116587,-7.081003,5.021314,6.499002,9.818766,-1.193722,-5.750942,8.159515,0.100276,-2.907532,-4.292822,-8.281557,0.552204,-7.488731,-0.076988,-6.231466,-7.073453,0.737008,2.360190,-6.846803,-6.051691,-9.669616,6.308556,7.500532,-2.900697,2.826546,-5.231549,-3.369542,-1.343916,-2.128941,-7.448833,8.639514,4.381828,3.551327,9.616655,1.069366,-0.761677,-7.545432,-4.946664,8.008652,9.422809,9.827537,-5.792251,-2.565393,-3.239906,2.861773,5.458675,1.449035,7.427965,-6.822058,6.717021,3.588152,0.972917,8.638340,9.720261,7.084420,7.552662,-9.149039,-9.792726,-2.304222,4.541155,3.258980,-8.898749,7.057695,8.750337,8.337134,-4.096800,1.421405,-3.958158,7.080092,0.474433,6.782825,4.687123,-1.079853,-7.611210,7.382909,-3.518417,-2.994634,2.882245,5.270768,0.479031,3.630925,5.170269,-9.515586,8.479682,6.933403,-9.194670,1.015892,8.631559,5.260708,5.448419,1.841343,4.191712,-4.219260,-0.947617,-5.095119,-1.342848,6.293841,-5.145465,-9.794228,9.134021,-8.306406,-6.170522,9.580901,7.980307,7.866840,0.819381,-6.671101,-9.536815,-6.445800,-9.749355,2.646485,-9.627631,-6.246082,-3.724694,9.157386,1.565697,4.790761,3.119251,5.209598,0.190470,6.016900,6.314758,8.110056,3.443376,-2.528881,-7.489638,-8.690704,-2.371072,2.686974,2.684763,-1.618521,-5.229069,-3.510399,2.228195,-6.220009,-9.523037,6.275324,-5.015775,-8.664585,-0.617156,8.407153,-8.818532,-0.694538,8.204334,0.339884,-5.207748,8.669687,5.634171,-5.483851,5.460864,2.292439,3.821110,4.717888,2.264202,3.312341,9.198474,9.822648,-1.352193,-9.285690,8.819101,0.403230,-0.147222,1.307485,-7.099416,-8.786219,-3.468767,-8.572833,-0.003927,0.912765,3.288532,-0.562948,-8.832744,-6.617240,5.145924,-6.144010,-1.427752,-4.805467,-7.840790,-1.183272,3.958868,-4.822129,-6.589419,6.850347,-6.657569,-4.933505,9.504835,-6.976947,-3.889406,3.325666,-9.144899,1.128356,6.460536,2.759450,2.051057,-6.330716,-4.887324,-3.793574,8.221263,2.739932,8.200775,6.751723,-7.894862,-1.929239,-7.472857,-8.240047,3.250166,0.315413,0.864376,-0.998816,-9.595735,-9.058003,1.270831,7.204316,-7.182851,-3.502391,0.027850,6.374678,-2.021288,-4.072505,2.089932,6.349010,-3.265095,7.852859,7.222115,-8.787722,-5.648559,-3.929821,-3.450710,7.561508,-2.559628,-6.151896,2.690922,-0.432841,3.003417,5.376874,7.635908,5.419949,0.120242,-1.393303,-8.904161,8.105687,7.659346,-9.714845,7.196353,-1.380440,5.998628,1.894959,-8.565916,-9.867759,2.682742,-8.647843,-3.895084,-9.709934,-1.776950,-6.869087,-1.979843,-3.424121,0.833009,7.373511,-2.249339,5.150485,-3.713224,-1.143187,-2.662716,-1.396729,-8.708237,-2.099637,-0.481865,3.875951,9.908507,2.386233,7.453833,3.291035,-5.761342,0.648613,7.772239,-4.880883,-9.334571,-9.672500,-2.759678,-1.162840,-4.810890,3.645003,9.473427,3.408040,4.100879,-9.430970,-0.658587,7.856694,-8.875703,2.897113,6.745711,1.676647,0.195343,-8.057121,-2.816115,-0.682568,-9.173136,8.230984,-4.671049,-3.254193,0.789735,-7.244581,2.225169,-4.916279,1.787463,3.367059,-1.496790,-0.081887,-3.791446,4.762875,5.446267,5.819023,2.866101,0.057564,-2.096150,5.712041,9.745752,2.079830,-6.777502,-0.749429,-6.048681,-6.702957,7.538693,-5.684876,-8.115997,-4.929725,5.322106,6.226045,7.377865,8.005956,-8.298556,0.842505,-0.120845,-8.959867,1.920666,-9.073762,-3.467626,-2.434581,5.717267,-1.138496,-5.248650,2.049981,-5.222824,-6.853184,-5.346142,2.133710,7.888129,-1.187306,-9.058688,-3.861551,0.616691,8.394895,9.312259,3.698820,-0.578913,-5.160547,2.312372,-2.144627,-7.466899,9.904950,-6.313476,-6.812248,3.502618,-0.088668,3.978218,0.780243,5.554271,7.765930,-8.578439,-6.245581,-2.574303,8.013049,-7.848985,3.918998,9.079586,4.941929,-3.996664,3.435840,-5.070090,0.757056,-2.421702,5.814353,0.429079,-3.003502,0.174467,-5.065546,-5.769305,4.210252,7.774700,5.980135,6.826576,4.592448,-0.970628,-1.279966,-4.177714,8.833009,-5.421134,-5.366199,8.190953,-3.481014,9.893020,-5.208751,-1.663583,1.104918,-8.512697,-6.605140,4.784653,9.510542,-2.593824,2.243631,7.067108,0.987488,9.279933,8.101135,9.146434,0.126757,-6.998879,-0.517159,-1.700052,4.892748,-7.416507,-3.830806,5.202582,-6.789382,7.478837,-3.583025,-2.369572,3.523130,4.321967,-3.337992,-6.189094,-4.678810,6.705928,1.442655,-2.166162,-8.911007,0.723225,-3.935647,4.614918,-8.120835,-6.802703,6.885580,2.036768,-6.881142,-3.582638,2.019250,2.305904,1.646756,-3.061348,-6.227896,5.685764,7.125764,4.907434,7.992849,-8.945552,-6.006250,-0.704166,8.739735,-9.541748,9.007993,-5.989373,7.707503,-0.667619,-7.461497,4.093646,1.417339,-1.310016,7.881983,-4.796744,-6.027582,4.990477,-7.173537,-2.779982,1.351205,1.378640,2.309936,7.334875,3.717372,-0.257487,-0.622369,-3.526003,-6.410680,-3.939527,4.802320,6.757540,-7.602434,-6.209601,-7.872772,-4.799873,5.371147,-7.735073,-5.001509,6.186878,5.348922,5.344906,9.021627,4.228477,-5.511008,-8.281174,9.806191,8.973290,-5.416011,-5.555981,3.545081,-4.573021,-9.904811,8.311681,-7.510003,4.120587,-7.016715,2.935435,-7.899510,-8.907681,-0.850812,-5.625078,-5.098632,9.087373,3.155304,1.041763,3.306228,4.268507,8.560285,-4.773588,1.280062,3.683987,-7.141214,-6.280951,-0.862871,-9.255596,6.841118,-3.926623,-2.907517,-6.007817,3.210467,-5.965884,2.765055,-7.118377,2.079328,-9.237705,-3.770790,-3.677796,-6.129141,-6.178639,3.448633,1.539778,1.341164,-2.009906,-8.883040,-5.199368,6.888325,-4.810758,-4.079201,4.241989,2.053512,2.618478,6.062138,-6.195948,-2.617854,-9.537049,9.433638,-3.926764,4.373020,2.432061,5.675858,5.362636,-3.510894,3.719565,7.810701,-3.159631,-9.007294,-5.935504,-8.380768,7.113884,7.543192,-0.684410,1.074818,-3.423438,-7.748393,-1.131128,0.386606,-0.252640,4.182260,-8.653011,-5.985497,0.296236,-9.817083,-5.247491,0.238424,9.107574,-4.390151,5.994895,-2.886913,-4.943812,1.444206,-5.793268,7.960256,9.955473,-9.984613,5.117736,-7.351527,9.129974,-6.702921,3.925677,8.196483,9.523943,3.491183,-9.016177,-4.275538,-0.778364,2.217919,-2.150737,5.768251,-3.148299,6.815272,-8.700166,-0.155043,7.390520,3.105993,-4.280441,2.220877,-4.839202,6.968811,0.287728,-8.617194,4.205136,-0.915721,-9.244992,6.124822,-3.613097,-2.330324,7.402663,-8.354570,8.218615,8.912318,7.224728,8.432649,6.729485,-1.480297,-1.397134,-1.607759,-3.712977,9.830970,-3.743755,2.405697,-3.046301,1.247357,4.765694,-5.914989,-3.403400,-0.098404,-1.926658,8.204499,-5.743837,-4.681364,-7.481355,3.187386,-4.831624,0.095473,4.652756,0.767753,-5.039732,9.855296,-0.751086,7.233590,-8.659127,-4.060938,2.736102,-1.774887,2.972683,5.953751,-1.515247,4.838908,6.377626,0.635282,5.744381,-3.986341,-0.224387,9.188064,1.543144,6.670921,4.413738,9.450754,3.335890,-5.505728,-4.903750,2.373169,-9.024560,3.725491,0.015622,0.727142,9.555813,4.315267,9.725283,4.218478,5.661402,-6.856515,-4.652175,5.550391,-5.568140,1.872008,9.729107,8.905020,1.699661,-3.957612,6.264720,5.118295,3.954625,-4.742239,-9.743107,-3.345483,-2.057537,-0.277492,-2.251757,9.188159,1.710706,7.224878,2.188518,7.413670,-2.277222,3.342530,9.520808,-8.360777,6.897770,6.406945,-2.450443,9.411170,4.246181,-6.435744,-5.545524,-0.641423,-1.118749,-3.402971,-5.267519,-4.014744,0.794775,-8.115796,-4.222282,-6.257365,-9.136886,7.257148,9.258984,2.138663,-1.608567,-5.010795,6.372341,3.797804,-7.037799,7.231235,5.559769,1.163589,-6.053129,4.772374,7.027855,-6.552012,2.570846,-9.031225,8.170831,3.210919,7.911464,-5.958559,-7.938260,-2.425785,1.748096,6.145672,8.007498,-6.453175,0.280852,0.230113,5.632793,-2.887515,5.601350,3.262532,-1.173056,2.821884,-4.779278,7.841310,7.918976,1.603854,5.934461,0.743291,-2.559888,-6.590370,7.307852,-2.088302,-1.418655,7.825916,6.312582,-3.293342,-7.513403,-0.725738,1.101832,6.017860,8.281899,5.764501,-8.491587,-1.927856,-9.600155,-5.344612,-2.346695,-2.874859,6.856053,-9.931981,-9.778417,-9.226532,-4.845291,4.129550,-5.595498,-2.350136,-5.794126,1.601360,-2.453024,8.809763,-4.787725,-0.593498,-3.399734,8.111650,4.919116,-3.787697,-6.859211,-8.951638,4.767940,-0.226292,-3.696825,-1.195904,0.296630,4.395455,5.097954,-0.646556,-1.989403,-6.562843,-0.255189,-0.636248,9.402882,2.411497,-1.387890,2.215778,-3.965452,5.719690,-4.746691,4.562125,9.884538,-2.910919,3.391005,0.452293,3.757650,-9.938626,8.643575,9.640999,1.079716,2.502540,-3.451324,-7.767564,-5.169181,-9.446948,2.740186,-4.211577,-2.128783,8.642512,-8.647113,-3.596974,-2.109098,1.197538,8.575551,-2.743970,1.299573,-3.226578,-1.420036,-4.445001,3.573311,-8.168803,-1.467824,1.245115,4.255252,-8.711745,7.825340,2.131527,2.629732,-6.053372,-1.341958,-4.137925,-4.717232,3.868125,2.446061,6.449746,-8.875259,6.161086,9.817711,-3.295170,1.479748,-8.695602,0.075934,-7.615933,-4.199304,1.714131,8.904355,-3.367037,1.586361,3.671477,-2.361532,9.978378,-7.082532,8.909508,5.353793,-6.245154,4.063533,-7.408225,-0.369117,5.588445,6.644083,9.100757,-7.184700,-5.555574,-6.755091,-6.899426,-6.272534,1.255577,-8.151983,-7.642094,-8.498165,-5.928263,5.460430,-6.453997,1.320232,-9.138978,4.759886,-8.284394,-0.526667,9.174977,-0.454705,5.686282,3.874877,4.809069,0.577402,7.932447,-6.593962,3.180005,-5.721656,5.623473,-2.141984,-3.060771,-4.349239,2.190699,4.995773,7.919563,8.695221,7.328977,4.204048,-8.933463,-1.560675,6.515026,-6.647364,1.464040,-1.306768,-0.784637,-3.438118,-9.521845,0.061762,7.550752,-7.735640,-8.977434,0.707538,-4.714987,-0.687127,-2.834268,6.616379,4.492828,-9.846155,-9.515110,-0.238956,7.515120,-1.673606,1.243637,-8.023195,-8.917754,2.705902,-2.542833,-5.824437,6.758023,1.294479,-2.625346,4.496372,-3.699326,-8.133854,7.369518,-0.687770,2.017657,-7.014893,-7.314043,-4.486093,-3.106924,-6.587365,-5.820824,3.955242,1.040056,4.722194,4.497033,-3.116876,5.404918,8.426456,0.890993,9.315067,-6.105880,2.286089,-5.652029,3.082355,7.552412,2.681806,1.221829,5.239774,-4.699864,-1.940188,-2.545568,2.224195,5.464574,-8.564020,-7.945930,6.225139,9.912500,-0.446010,-4.308233,-2.985507,9.767494,-1.764738,6.661614,5.488432,-1.795527,1.950673,-5.031467,-8.562049,1.062082,-4.795974,5.469800,-0.816966,-9.430552,-0.104423,7.011310,-7.123488,5.847759,7.693993,7.533222,-1.837596,-9.452607,-3.891737,-3.668561,-4.706254,3.644313,-3.673267,-6.190327,1.023549,2.365832,-4.253744,6.995401,3.249969,0.285073,6.993860,2.096663,-1.062430,7.758810,2.787333,-9.640260,-4.203855,-7.549511,-7.930730,9.560760,-0.698244,3.456981,8.567839,1.956282,7.741698,8.899745,4.579001,-7.099777,-4.554104,-4.195086], dtype = "float64")#candidate|3815|(1232,)|const|float64
call_3814 = relay.TupleGetItem(func_166_call(relay.reshape(const_3815.astype('float64'), [11, 14, 8])), 1)
call_3816 = relay.TupleGetItem(func_168_call(relay.reshape(const_3815.astype('float64'), [11, 14, 8])), 1)
output = relay.Tuple([call_3776,uop_3786,uop_3789,call_3814,const_3815,])
output2 = relay.Tuple([call_3777,uop_3788,uop_3791,call_3816,const_3815,])
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
mutated_mod['func_3819'] = func_3819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mutated_mod.get_global_var('func_3819')
call_3820 = func_3819_call()
output = call_3820
func_3821 = relay.Function([], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3830 = relay.TupleGetItem(func_3181_call(), 0)
call_3831 = relay.TupleGetItem(func_3182_call(), 0)
var_3845 = relay.var("var_3845", dtype = "float64", shape = (3, 180))#candidate|3845|(3, 180)|var|float64
bop_3846 = relay.multiply(call_3830.astype('uint32'), relay.reshape(var_3845.astype('uint32'), relay.shape_of(call_3830))) # shape=(3, 180)
bop_3849 = relay.multiply(call_3831.astype('uint32'), relay.reshape(var_3845.astype('uint32'), relay.shape_of(call_3831))) # shape=(3, 180)
func_2944_call = mod.get_global_var('func_2944')
func_2946_call = mutated_mod.get_global_var('func_2946')
var_3856 = relay.var("var_3856", dtype = "int64", shape = (390,))#candidate|3856|(390,)|var|int64
call_3855 = relay.TupleGetItem(func_2944_call(relay.reshape(var_3856.astype('int64'), [390,])), 5)
call_3857 = relay.TupleGetItem(func_2946_call(relay.reshape(var_3856.astype('int64'), [390,])), 5)
output = relay.Tuple([bop_3846,call_3855,var_3856,])
output2 = relay.Tuple([bop_3849,call_3857,var_3856,])
func_3864 = relay.Function([var_3845,var_3856,], output)
mod['func_3864'] = func_3864
mod = relay.transform.InferType()(mod)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mutated_mod.get_global_var('func_3864')
var_3866 = relay.var("var_3866", dtype = "float64", shape = (3, 180))#candidate|3866|(3, 180)|var|float64
var_3867 = relay.var("var_3867", dtype = "int64", shape = (390,))#candidate|3867|(390,)|var|int64
call_3865 = func_3864_call(var_3866,var_3867,)
output = call_3865
func_3868 = relay.Function([var_3866,var_3867,], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3396_call = mod.get_global_var('func_3396')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_3876 = func_3396_call()
call_3877 = func_3396_call()
output = call_3876
output2 = call_3877
func_3887 = relay.Function([], output)
mod['func_3887'] = func_3887
mod = relay.transform.InferType()(mod)
output = func_3887()
func_3888 = relay.Function([], output)
mutated_mod['func_3888'] = func_3888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_4008 = func_3257_call()
call_4009 = func_3257_call()
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_4011 = relay.const([-2,-2,6,-10,7,-1,8,-8,-8,5,-2,-4,10,5,9,-6,3,-5,7,5,-9,4,8,8,-7,-1,-7,-4,-8,-8,7,9,3,10,1,-6,2,8,4,-5,10,1,-2,4,-6,-8,-8,4,2,1,-1,-4,9,-4,-9,-5,8,6,-5,-9,-5,-3,-3,4,4,9,-4,-10,-4,-7,5,9,2,-3,-6,-5,9,-5,8,10,-7,-7,1,-6,-4,-7,7,-4,1,-3,10,-9,-7,-3,-4,-6,9,3,-1,-4,-2,-5,7,9,7,-9,1,5,-2,4,1,-8,5,10,-10,10,7,2,-5,6,-4,-8,-2,-4,3,-2,-10,-5,-4,1,-1,-8,8,-4,3,-4,2,-10,7,1,-2,2,-5,-4,-2,-3,-8,3,10,-9,-7,8,5,6,-3,-1,9,-6,-2,3,7,-9,6,-1,7,-9,-4,-6,6,10,8,-6,-7,-1,-5,5,10,-1,5,-3,3,-9,-9,-6,4,6,-9,8,5,7,6,5,5,2,-7,4,-7,7,-7,-2,-6,4,-1,3,4,9,1,5,10,-8,4,-9,5,6,-6,3,-9,9,-9,-7,2,2,1,-1,-7,-10,-9,10,4,5,6,-5,-7,4,-9,-1,-8,4,2,-10,4,-10,10,8,9,5,-3,2,-7,6,-9,6,-1,5,-8,4,7,-7,-5,-1,10,10,8,-1,-8,2,-3,-5,1,-10,6,-2,-6,-2,-6,5,-2,-9,-9,-7,9,-6,-8,-9,-2,-9,-10,5,-2,9,9,5,-1,4,-7,8,-10,8,-7,6,-5,10,-8,3,2,-9,6,-4,10,-8,9,-1,-10,7,-8,-7,-2,10,1,-9,5,-6,3,9,-8,-10,-3,-5,10,2,-9,-2,-7,-8,-6,-3,-6,-2,-9,-4,-10,-3,5,-7,2,-4,-10,9,-7,-8,-5,-3,-2,-3,8,7,2,-10,-9,-2,6,-3,2,-8,2,-3,-8,9,-3,-10,-2,6,8,10,3,-2,10,7,-9,3,10,-8,4,8,-2,8,-7,5,-10,-5,-9,-2,-4,2,-4,5,-5,-4,-2,8,-3,5,1,-7,7,2,1,-8,2,8,-7,2,6,2,-2,-2,-9,7,7,10,6,-3,-5,9,2,-5,-10,2,-5,-6,7,2,-2,-3,-2,6,-7,4,1,1,-3,-2,-5,1,-9,9,-4,9,9,-7,-6,-9,-4,-5,6,-8,-2,2,-3,9,9,-7,10,-10,-9,-2,-2,6,-5,10,-6,-10,9,10,-6,-5,9,-9,9,10,6,10,4,-3,8,-10,-4,-7,-4,-6,-7,5,-4,-7,-4,10,10,6,-8,4,-4,2,-5,-2,7,-9,-10,8,-1,-8,1,-4,10,6,-1,-7,5,5,-10,10,5,-10,6,-3,-5,1,-1,-9,-5,2,-5,2,-8,-9,4,-8,9,-5,7,3,9,10,-10,-2,5,-10,-2,-10,9,-1,-9,1,-6,-6,-6,-5,-4,6,7,9,-3,2,-3,-6,-4,-5,-3,-4,5,-1,10,8,2,-7,4,-1,-7,2,7,-10,4,-7,-4,-5,-10,1,-4,-5,-5,-7,2,-7,3,9,-5,5,6,6,3,-8,2,5,8,-6,6,-1,-1,5,8,-8,-5,-2,-4,-9,-4,10,-6,-3,6,-7,-3,1,7,-10,2,-7,10,5,2,1,-3,-1,7,-5,-3,7,1,2,4,2,-1,-10,-10,6,-3,9,9,8,6,-1,4,-7,-4,2,10,-3,-2,-1,-1,8,4,-3,7,-9,3,-4,-7,-3,-9,-10,-8,7,9,-6,-4,6,10,-1,1,2,9,2,-6,-9,-9,-1,4,-6,-5,-3,7,-7,1,3,-7,7,-10,1,3,10,-1,-8,10,-7,-8,-4,-4,-1,-6,-6,-9,8,-1,7,1,7,-8,-8,-2,-5,-7,-5,-9,-5,-3,7,-1,3,-6,-5,8,10,8,-6,2,1,10,2,4,-2,6,1,6,1,-4,8,8,-8,5,5,5,9,-1,5,-8,-4,-8,-4,-9,-4,-3,3,-10,8,-6,5,10,-7,6,-8,-8,-1,-7,9,-1,-7,7,6,2,7,8,7,7,-10,-7,9,3,2,-8,8,-5,-6,6,2,-7,-3,-10,-2,8,1,-2,-9,-2,-5,-1,2,7,-8,9,10,-8,2,5,6,7,9,10,4,-8,-4,3,6,-5,4,6,-1,-9,4,-8,9,10,5,-7,-5,2,-5,7,-7,-6,8,7,8,-4,-3,-5,-8,-2,6,-5,-4,10,2,-3,-2,1,10,-1,7,-1,10,3,-10,2,-4,-6,-4,10,-4,6,-1,-5,-9,1,4,6,-9,-1,-4,4,-9,-8,7,-2,2,-6,-7,8,-9,-1,3,4,-6,1,-7,-10,7,3,6,4,3,3,-3,7,-9,5,-8,4,-6,-6,1,-3,-1,-2,-2,-7,8,-9,10,-5,6,3,-8,10,3,9,9,2,-8,1,3,-7,9,-4,-1,9,8,5,-10,-10,-10,-7,-10,-3,5,8,-1,1,-10,8,-3,-1,1,-6,1,-4,-6,-2,-9,-5,-6,-2,-10,6,7,3,2,-2,-2,-6,8,-5,-10,-3,1,-5,2,5,-2,4,-6,-1,1,-3,-4,5,8,8,-7,9,10,-7,1,6,7,-3,5,1,-9,-8,-5,5,-2,-1,4,9,2,-6,-9,6,-10,-9,5,2,8,7,2,-5,4,3,6,2,9,-2,-10,-6,-7,7,9,-6,-9,8,-4,6,-1,-6,5,6,7,2,-4,10,-5,5,-6,1,-1,-9,-2,-3,-7,1,-8,-4,2,-2,8,10,-9,-7,4,-2,-7,-10,-7,-3,3,-6,10,5,10,10,9,1,-7,-3,-8,-7,-10,-5,9,3,3,-2,3,-7,-5,1,7,2,-2,-6,-3,-7,-10,-10,-2,3,-4,10,-4,-8,-4,-5,-3,-6,3,9,-2,9,-1,-5,1,10,-4,-3,-7,-7,2,-1,-10,-1,-8,-1,7,4,-10,-10,-6,-8,-3,9,2,3,10,8,-3,-5,9,1,7,-1,4,-7,4,-1,4,8,-5,-1,-7,5,10,-8,5,5,5,-8,-9,-9,8,-9,7,-10,10,-7,2,6,-3,1,4,-1,-1,-7,-2,1,-6,4,-2,8,-8,1,-9,2,-1,-4,-8,-3,-4,7,-7,-7,3,-8,8,6,-3,7,-2,-5,-1,-8,-4,6,-3,3,3,5,-5,-10,-9,10,3,-5,4,10,9,-4,10,10,-5,5,6,6,3,2,-2,3,10,10,7,9,9,10,3,5,4,-8,2,-10,9,6,-6,7,-8,-8,-9,3,-10,9,3,-5,-6,5,-6,2,9,-7,8,1,-10,-2,-7,7,6,-5,2,5,-3,-7,-7,4,-8,3,4,-3,-4,-1,8,10,-4,2,-5,5,9,-6,-10,4,-1,5,2,10,-10,9,-9,-3,-6,-2,-4,-8,8,9,4,9,10,-1,-1,-8,-1,1,8,6,1,-4,4,7,-5,3,8,5,5,2,-6,-9,9,-7,-7,10,1,-2,7,-9,4,4,-6,-1,4,9,4,-6,-1,10,8,-6,6,-3,7,-9,-8,4,3,-6,-1,-8,-4,-9,-7,-5,-1,-3,-8,3,-10,8,-5,-1,8,-5,2,-3,8,-3,1,10,-8,-8,-9,4,3,-7,-4,7,6,10,-7,-6,5,10,9,7,-2,6,7,-1,3,9,8,9,9,-4,4,-3,-1,-6,-4,-10,9,-8,-7,5,6,-7,-9,8,6,6,2,-9,-2,-5,-10,-3,-10,-3,9,-7,1,9,8,10,9,-6,-5,6,-1,-6,-6,8,-1,3,1,6,1,4,5,5,-9,-9,-5,-4,7,-5,-2,-9,6,-2,1,8,5,3,-7,-8,-1,-3,-1,3,10,9,5,-2,1,7,-3,-3,-9,2,7,4,-4,-4,-5,-1,9,6,1,4,-3,-3,7,9,-4,-6,1,-9,-7,8,-4,-9,-2,-6,5,4,-2,-6,-10,-7,-8,-5,2,-1,-9,-3,1,-5,-8,-5,-2,1,-3,2,-4,10,-3,10,-3,4,-2,-6,-10,-6,-1,-9,2,-6,1,-2,9,8,9,5,8,5,-6,-3,-9,5,1,-4,6,-8,7,1,-4,-8,-4,6,-4,-2,-9,9,3,9,-7,-7,-2,-9,6,7,-8,2,9,6,6,-4,-10,-4,-6,-8,-5,-6,-9,10,-7,-5,3,9,-5,5,-2,8,-3,-6,5,-2,9,9,-4,-3,-9,8,-6,-4,-1,-4,-10,-4,5,2,3,10,1,-10,-2,8,3,-1,-2,-2,8,3,-10,-10,8,-5,-7,5,-6,-5,-9,-8,-8,1,-8,2,-1,-3,-3,-6,-9,5,5,4,-6,8,5,-8,-8,2,4,-1,10,-5,-9,5,1,-1,-2,6,7,3,-3,-4,2,5,1,-10,-10,-3,8,-4,-10,3,-4,-9,-4,-1,-5,-6,-1,10,8,3,7,-8,6,3,-9,-9,5,3,2,6,9,4,-4,-3,6,-2,-6,9,-4,-9,7,5,-7,1,2,-7,-1,4,7,10,5,-8,4,-4,-10,-1,-10,10,7,-9,1,2,8,7,-5,-1,-1,-3,8,3,-8,-6,-3,8,-2,-10,4,4,10,-7,2,-5,-7,-8,-4,3,-7,4,7,-1,10,1,3,-6,-1,-8,-1,6,1,-2,-6,1,-4,-5,-9,-10,-8,-5,-6,-4,5,10,6,5,1,-4,-2,2,2,-9,-6,3,9,2,8,4,9,1,-9,3,-4,7,-6,6,-8,2,-3,7,3,-9,7,-4,7,-2,-2,6,-5,-3,-6,10,3,8,-7,10,-4,10,-4,10,2], dtype = "uint8")#candidate|4011|(1820,)|const|uint8
call_4010 = relay.TupleGetItem(func_1800_call(relay.reshape(const_4011.astype('uint8'), [10, 13, 14]), relay.reshape(const_4011.astype('uint8'), [10, 13, 14]), ), 0)
call_4012 = relay.TupleGetItem(func_1803_call(relay.reshape(const_4011.astype('uint8'), [10, 13, 14]), relay.reshape(const_4011.astype('uint8'), [10, 13, 14]), ), 0)
output = relay.Tuple([call_4008,call_4010,const_4011,])
output2 = relay.Tuple([call_4009,call_4012,const_4011,])
func_4016 = relay.Function([], output)
mod['func_4016'] = func_4016
mod = relay.transform.InferType()(mod)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4016_call = mutated_mod.get_global_var('func_4016')
call_4017 = func_4016_call()
output = call_4017
func_4018 = relay.Function([], output)
mutated_mod['func_4018'] = func_4018
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4030 = relay.const([[[-8.756261,-6.526729,-5.719861,5.084668,9.980402,1.604257,-8.472550,-8.994567,0.348536,-5.078119,-1.503052,8.148499,-7.392493,-1.336027,0.753542],[0.416940,7.341305,-9.649365,-8.659130,8.259842,5.544963,9.205982,-1.123393,9.845373,4.201883,-3.356750,-9.065716,7.768908,6.305261,-9.614564],[7.143510,-2.180581,-7.153663,-6.924693,3.147595,-8.562123,-1.046168,-8.918547,7.618616,-7.659989,8.722382,-8.082159,-8.262205,-1.996883,-1.709477],[2.323294,5.086044,-5.132266,-2.589763,-9.257348,-1.216659,-2.173392,-0.709883,8.810734,-4.850130,-3.976995,-9.435008,-3.518924,-4.642852,5.597421],[8.358200,-3.485398,-1.010944,-3.883739,-0.837472,-8.869693,7.121359,0.461799,5.861109,-9.386542,2.664289,7.657609,6.633043,-2.834771,4.958518],[-1.015218,-9.921860,8.419267,-5.101259,-1.025053,-3.147638,2.467666,0.650708,6.382697,-9.009433,6.493128,6.201111,3.612940,-4.398690,-6.695353],[1.592796,-9.996869,-1.955725,2.405322,-6.511036,4.211000,-1.751216,-7.292539,6.227718,5.455680,5.782843,6.189638,5.809018,-1.396535,7.755746],[0.163778,8.037568,-7.518330,9.960447,-6.833209,1.225665,-7.097473,0.080067,-9.715647,6.268620,-0.708480,-7.422919,6.515530,-8.483316,1.123594]],[[-9.394408,8.502170,-5.336657,2.726484,4.084098,7.333298,8.828864,-6.086300,3.525418,-5.353745,-0.500773,1.831578,-3.975676,2.071717,-3.842427],[-6.142920,4.163911,3.446976,-6.568050,-3.032720,-0.821927,-5.680852,8.012022,-9.595690,6.453583,7.737355,6.308250,-6.336226,1.670959,1.388392],[-0.057118,2.372366,1.585288,-8.370734,1.576773,7.819355,-7.495582,-9.189365,-6.258428,-8.547159,1.792304,-7.635437,5.305630,-2.193405,-5.854106],[-0.693223,-5.160156,-1.635034,-7.451162,1.940554,1.357794,-9.482740,-9.671578,-0.643303,0.748231,4.329936,-6.470428,-4.057027,-0.830199,7.845356],[-1.979627,-8.347816,7.231034,-5.884941,2.511012,3.491171,-6.742679,-4.767631,-7.011333,1.365568,-6.739240,-5.816026,-2.633310,-7.510517,-9.408139],[1.402349,8.602854,7.398762,6.686770,1.873942,0.245501,4.766654,-8.500943,-1.993801,-9.471881,-5.024779,-0.663100,-1.255043,9.041228,-7.863296],[-6.102303,-9.043092,5.306983,-2.508077,4.812327,9.035519,-6.624535,-9.771907,-1.129567,-7.306408,9.999854,0.112767,2.682537,-3.782362,-7.654334],[-2.777099,5.657791,8.995278,-4.939822,2.972645,9.568291,-5.631608,6.386905,-8.253882,-0.789713,5.388689,7.697499,2.389579,-5.874619,-6.122637]],[[-0.725236,8.571010,2.185675,-1.797092,-0.149738,-7.005550,-3.884845,2.761953,0.421564,-7.150026,-4.559704,0.114730,-4.377591,6.276693,7.499337],[-8.506246,-6.062157,4.300747,-2.587247,-6.410078,4.874104,-5.988633,9.338282,5.180644,7.734349,-3.156869,4.254174,4.000353,2.552928,-1.659370],[-1.220994,-8.074252,-0.910834,5.598476,-5.254370,2.470866,-4.167441,5.604436,-7.826843,-0.353723,-4.437665,2.135030,7.685283,-0.015043,1.621773],[6.818711,2.320890,9.937143,5.313095,-4.260268,-8.404461,5.956191,5.468132,-0.815111,6.471499,3.320272,-9.755885,-2.008734,1.135588,-3.908522],[9.935743,2.409612,7.285027,9.814580,1.418667,-5.307781,5.659265,-5.264657,5.330146,-6.831901,4.956550,-9.295540,4.683534,0.516798,8.554478],[7.097385,3.556897,6.720054,3.884895,9.972507,-8.233624,-3.741869,9.775968,-9.413759,-1.052902,-9.372924,-1.708906,8.356791,4.183889,9.213549],[-3.721959,5.807645,0.666160,-7.101810,8.051774,1.447724,-2.596025,-0.277132,-0.631022,-8.604479,6.240461,-5.661905,0.163875,3.041632,7.444761],[-8.972242,-3.088425,1.768317,-9.469318,-8.890458,-6.633988,-1.497787,-4.259845,-2.330430,7.643015,0.264467,1.005309,6.855391,0.623441,6.155301]],[[6.515645,-9.436723,-8.955219,6.712717,7.270443,-5.877221,8.633620,-6.796238,2.715947,-0.284432,2.432313,-5.721898,2.245640,-9.468174,-2.915937],[7.162019,0.714355,1.648946,-4.430185,-8.530098,5.050887,4.154038,8.234941,-4.622095,-1.441285,-0.998033,-1.406572,4.430240,-4.630996,-8.452415],[0.742731,-6.141238,7.647934,-6.141005,-1.758406,4.574680,-6.431236,-9.879292,9.354030,-5.366371,2.841314,3.796183,6.609149,0.242092,-2.630525],[6.122913,-9.466690,-7.096477,5.425702,3.634205,-2.191732,7.093580,4.061992,-2.211973,-1.258088,-1.672487,1.688095,8.532100,-0.131843,-8.320271],[-7.626133,9.445307,0.580594,-6.207138,-0.883886,-3.111844,5.706606,7.273818,0.997106,5.101084,6.846959,3.763859,3.156891,3.235177,-6.280566],[9.186760,0.012741,7.780910,-0.836825,-1.804006,6.866864,7.379774,-8.151256,7.382413,9.096336,-1.988718,-6.255977,8.282434,-5.681075,-8.907147],[3.358595,-1.005085,-9.550721,3.223813,4.667499,1.372827,1.628800,9.205733,-5.763282,3.880527,2.609567,-0.702543,-7.229099,-7.990097,-3.345561],[3.565806,-3.312208,0.808514,0.330296,8.093320,-9.580488,5.280879,-4.804460,2.489708,2.276208,-9.186084,-9.009852,-8.248095,-1.360663,-5.754072]],[[4.812927,-3.814454,9.597835,-3.538605,3.636913,9.259126,6.494445,8.720149,-1.253101,-4.396075,0.829767,-1.609932,5.188410,-1.307137,8.666341],[-5.949890,-8.644151,-1.215140,-8.939768,-9.806967,2.970908,8.011953,-9.423595,-9.470743,-9.844320,-8.148298,0.216646,7.983620,-4.080170,-0.333019],[-0.141527,-4.029574,-9.739503,-7.435855,-4.704086,-8.216868,2.602970,-8.959628,-3.521243,-9.251337,8.837289,-3.151921,5.240609,7.933931,-2.890474],[-6.416275,-3.208020,8.485641,5.555429,-5.984100,7.508412,1.939705,-2.750162,-2.498092,-9.398414,2.230884,-2.873860,-3.185715,-8.372839,6.951554],[-9.787031,7.034069,-3.780355,4.333732,3.598961,2.668636,-8.686321,0.117151,-3.005283,2.927767,-6.782071,-4.943390,-7.675717,-7.147801,-3.803217],[9.473018,0.329614,-6.152624,-9.133279,-2.345012,7.895322,-5.149948,-1.664834,-4.670994,9.590592,-5.881622,3.387619,-7.137789,6.839594,-7.008958],[-9.775123,-0.866182,-8.433738,-8.765184,-0.504185,-6.336559,-5.348346,6.029251,-8.553129,-0.954252,1.688763,9.313742,1.935423,1.832994,8.591047],[9.467487,6.547096,3.261303,-0.135208,-5.460478,-7.666980,-3.864752,1.943512,-6.806923,1.263864,-3.191816,4.937390,7.291527,6.131162,5.390791]]], dtype = "float64")#candidate|4030|(5, 8, 15)|const|float64
uop_4031 = relay.acos(const_4030.astype('float64')) # shape=(5, 8, 15)
output = relay.Tuple([uop_4031,])
output2 = relay.Tuple([uop_4031,])
func_4038 = relay.Function([], output)
mod['func_4038'] = func_4038
mod = relay.transform.InferType()(mod)
output = func_4038()
func_4039 = relay.Function([], output)
mutated_mod['func_4039'] = func_4039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_4059 = func_2822_call()
call_4060 = func_2822_call()
func_2901_call = mod.get_global_var('func_2901')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_4065 = func_2901_call(relay.reshape(call_4059.astype('int8'), [6, 13, 2]))
call_4066 = func_2901_call(relay.reshape(call_4059.astype('int8'), [6, 13, 2]))
output = relay.Tuple([call_4059,call_4065,])
output2 = relay.Tuple([call_4060,call_4066,])
func_4071 = relay.Function([], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
output = func_4071()
func_4072 = relay.Function([], output)
mutated_mod['func_4072'] = func_4072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_4125 = relay.TupleGetItem(func_3819_call(), 1)
call_4126 = relay.TupleGetItem(func_3821_call(), 1)
output = call_4125
output2 = call_4126
func_4131 = relay.Function([], output)
mod['func_4131'] = func_4131
mod = relay.transform.InferType()(mod)
output = func_4131()
func_4132 = relay.Function([], output)
mutated_mod['func_4132'] = func_4132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_4141 = func_3012_call()
call_4142 = func_3012_call()
func_4071_call = mod.get_global_var('func_4071')
func_4072_call = mutated_mod.get_global_var('func_4072')
call_4149 = relay.TupleGetItem(func_4071_call(), 0)
call_4150 = relay.TupleGetItem(func_4072_call(), 0)
output = relay.Tuple([call_4141,call_4149,])
output2 = relay.Tuple([call_4142,call_4150,])
func_4154 = relay.Function([], output)
mod['func_4154'] = func_4154
mod = relay.transform.InferType()(mod)
mutated_mod['func_4154'] = func_4154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4154_call = mutated_mod.get_global_var('func_4154')
call_4155 = func_4154_call()
output = call_4155
func_4156 = relay.Function([], output)
mutated_mod['func_4156'] = func_4156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_4172 = func_2822_call()
call_4173 = func_2822_call()
output = relay.Tuple([call_4172,])
output2 = relay.Tuple([call_4173,])
func_4177 = relay.Function([], output)
mod['func_4177'] = func_4177
mod = relay.transform.InferType()(mod)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mutated_mod.get_global_var('func_4177')
call_4178 = func_4177_call()
output = call_4178
func_4179 = relay.Function([], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3396_call = mod.get_global_var('func_3396')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_4184 = func_3396_call()
call_4185 = func_3396_call()
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_4187 = relay.var("var_4187", dtype = "uint8", shape = (1820,))#candidate|4187|(1820,)|var|uint8
call_4186 = relay.TupleGetItem(func_1800_call(relay.reshape(var_4187.astype('uint8'), [10, 13, 14]), relay.reshape(var_4187.astype('uint8'), [10, 13, 14]), ), 0)
call_4188 = relay.TupleGetItem(func_1803_call(relay.reshape(var_4187.astype('uint8'), [10, 13, 14]), relay.reshape(var_4187.astype('uint8'), [10, 13, 14]), ), 0)
func_3416_call = mod.get_global_var('func_3416')
func_3419_call = mutated_mod.get_global_var('func_3419')
var_4194 = relay.var("var_4194", dtype = "uint16", shape = ())#candidate|4194|()|var|uint16
call_4193 = func_3416_call(relay.reshape(var_4194.astype('uint16'), []))
call_4195 = func_3416_call(relay.reshape(var_4194.astype('uint16'), []))
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_4199 = func_3012_call()
call_4200 = func_3012_call()
output = relay.Tuple([call_4184,call_4186,var_4187,call_4193,var_4194,call_4199,])
output2 = relay.Tuple([call_4185,call_4188,var_4187,call_4195,var_4194,call_4200,])
func_4205 = relay.Function([var_4187,var_4194,], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
var_4206 = relay.var("var_4206", dtype = "uint8", shape = (1820,))#candidate|4206|(1820,)|var|uint8
var_4207 = relay.var("var_4207", dtype = "uint16", shape = ())#candidate|4207|()|var|uint16
output = func_4205(var_4206,var_4207,)
func_4208 = relay.Function([var_4206,var_4207,], output)
mutated_mod['func_4208'] = func_4208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4237 = relay.var("var_4237", dtype = "float64", shape = (2, 15, 4))#candidate|4237|(2, 15, 4)|var|float64
uop_4238 = relay.sinh(var_4237.astype('float64')) # shape=(2, 15, 4)
output = uop_4238
output2 = uop_4238
func_4244 = relay.Function([var_4237,], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
var_4245 = relay.var("var_4245", dtype = "float64", shape = (2, 15, 4))#candidate|4245|(2, 15, 4)|var|float64
output = func_4244(var_4245)
func_4246 = relay.Function([var_4245], output)
mutated_mod['func_4246'] = func_4246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mod.get_global_var('func_3755')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_4267 = func_3755_call()
call_4268 = func_3755_call()
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_4273 = relay.TupleGetItem(func_2716_call(), 2)
call_4274 = relay.TupleGetItem(func_2717_call(), 2)
func_1677_call = mod.get_global_var('func_1677')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_4276 = relay.const([-0.584193,1.759973,1.834986,4.895030,2.929657,-2.877874,-0.814364,9.626491,3.348159,8.894775,7.206329,3.932471,-8.362430,-4.114457,9.006546,-4.466224,-0.921845,9.053978,3.517637,7.268526,-9.828949,2.356928,-7.668055,-9.191214,-7.523517,5.374194,1.658695,0.927412,-2.293311,6.864218,1.240911,6.215436,7.821558,4.194666,-6.875901,7.528274,8.803401,9.060786,-2.796438,4.424976,5.338759,-3.638911,2.290729,-2.119594,1.866005,-9.765889,3.138504,-3.577155,-4.699519,9.324123,-8.346079,5.904173,-6.081721,2.550182,-5.905920,5.310913,-9.209253,8.937758,0.211444,4.270858,7.090154,2.264349,2.860341,-5.930770,2.910651,-8.487772,-0.173875,0.548061,7.080660,2.336973,-4.005833,7.000765,-7.758928,-4.431097,8.928413,-6.284315,8.329746,8.983042,5.209492,-3.517749,-2.532544,3.245425,0.627736,0.269451,4.362915,-2.268817,3.208885,-6.507235,-9.533442,6.443021,-8.150557,5.485559,8.946791,5.798981,-0.888742,5.077848,-7.042906,8.934926,-5.458257,-6.609936,-5.934937,0.549053,5.115447,3.961483,-0.098410,8.244612,1.827060,7.369974,9.352017,3.330744,-6.262226,-0.042316,4.783103,-9.977528,-1.462040,-7.077403,-4.416066,-2.186191,6.013915,1.953621,-4.337905,6.530391,5.310489,-2.691373,3.415985,-7.297332,7.045422,-6.026153,2.944897,-4.564579,-0.895066,-1.043288,-4.674317,-6.852662,-3.608088,0.079423,-0.374648,-2.395606,7.255307,-1.717802,1.091817,9.468259,-1.128512,4.792618,-5.852480,2.858779,-4.162828,7.731317,5.126714,5.183074,-6.588811,-1.262695,3.584753,-0.899496,-1.746405,9.754268,-4.524585,-4.294038,-0.618633,-6.946096,6.657810,7.517090,8.704271,-6.922437,-5.040487,-0.654817,-2.515430,6.840947,-0.878633,6.810697,2.274780,-6.313210,5.622623,-6.556819,-3.685323,-9.545908,-1.136132,-1.361350,0.253525,-1.093594,-4.125093,-6.930555,-9.970839,-2.163149,9.605210,6.617285,-1.774813,-3.611002,-6.283861,8.946856,2.683306,-1.619747,-0.823956,2.918778,4.234173,2.416554,8.537504,-6.272590,-3.176294,-0.278522,-2.681172,-7.214676,8.442959,-0.345116,6.910996,-8.232486,-0.648474,-7.256009,8.811833,-4.146267,-9.097683,-5.251227,7.544298,2.212799,4.835540,6.544998,6.978600,-3.527989,3.418690,-8.026060,1.174566,3.955653,2.325655,-6.024986,-1.639534,7.616670,-4.499824,-9.448378,-2.825717,1.089385,4.599904,-5.288498,-9.014733,8.182086,7.350956,-5.354330,-7.705521,-0.509359,-4.080859,1.180807,5.475905,7.137913,-4.651004,7.058765,3.701764,5.925076,-9.091482,7.508323,-6.173024,-3.564081,-2.476074,-8.340778,-2.997311,-1.506076,2.442483,0.457104,-9.335183,5.903976,-2.736104,0.541736,5.620518,-2.041603,-1.998616,3.416880,-1.582872,8.053984,-4.366654,-8.833459,-0.232779,7.456249,-5.891478,7.164722,9.199015,8.360287,7.671585,9.526754,6.310399,-2.950366,2.589572,3.364344,0.911050,-8.917756,-2.363375,1.343339,5.282122,5.109855,6.208802,-1.114061,6.643259,6.617766,5.001374,2.471156,-1.510104,-4.814959,2.792079,-9.003932,-8.066937,5.550797,7.099166,-6.510230,4.432382,-4.193819,-9.297034,-7.234883,-9.816267,-0.933441,-4.778372,9.560586], dtype = "float32")#candidate|4276|(308,)|const|float32
var_4277 = relay.var("var_4277", dtype = "float64", shape = (1232,))#candidate|4277|(1232,)|var|float64
call_4275 = relay.TupleGetItem(func_1677_call(relay.reshape(call_4273.astype('float32'), [15, 9, 4]), relay.reshape(const_4276.astype('float32'), [154, 2]), relay.reshape(var_4277.astype('float64'), [4, 308]), ), 6)
call_4278 = relay.TupleGetItem(func_1681_call(relay.reshape(call_4273.astype('float32'), [15, 9, 4]), relay.reshape(const_4276.astype('float32'), [154, 2]), relay.reshape(var_4277.astype('float64'), [4, 308]), ), 6)
output = relay.Tuple([call_4267,call_4273,call_4275,const_4276,var_4277,])
output2 = relay.Tuple([call_4268,call_4274,call_4278,const_4276,var_4277,])
func_4289 = relay.Function([var_4277,], output)
mod['func_4289'] = func_4289
mod = relay.transform.InferType()(mod)
var_4290 = relay.var("var_4290", dtype = "float64", shape = (1232,))#candidate|4290|(1232,)|var|float64
output = func_4289(var_4290)
func_4291 = relay.Function([var_4290], output)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_4320 = relay.TupleGetItem(func_4038_call(), 0)
call_4321 = relay.TupleGetItem(func_4039_call(), 0)
uop_4326 = relay.log10(call_4320.astype('float32')) # shape=(5, 8, 15)
uop_4328 = relay.log10(call_4321.astype('float32')) # shape=(5, 8, 15)
output = relay.Tuple([uop_4326,])
output2 = relay.Tuple([uop_4328,])
func_4335 = relay.Function([], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mutated_mod.get_global_var('func_4335')
call_4336 = func_4335_call()
output = call_4336
func_4337 = relay.Function([], output)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mod.get_global_var('func_3755')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_4358 = func_3755_call()
call_4359 = func_3755_call()
func_4289_call = mod.get_global_var('func_4289')
func_4291_call = mutated_mod.get_global_var('func_4291')
const_4367 = relay.const([2.108739,4.919826,-7.949207,7.520719,-5.129377,8.566112,2.234801,-4.744871,1.450226,-0.115171,-3.890772,5.510018,-9.608135,3.372528,0.712158,-6.163153,-2.184741,7.481763,5.488264,7.994726,-5.239970,6.112363,-6.032658,1.498924,-2.789949,4.613601,-0.889055,7.194318,0.430388,-3.327262,6.403126,8.962965,9.086406,-0.553030,1.087077,-7.701420,-3.234210,8.849659,3.885049,-6.911938,5.716558,-5.640956,-0.103538,-2.552559,9.579882,6.552375,7.043983,-1.402742,5.264824,-0.724654,-4.363749,-9.498936,-5.184918,8.679895,1.953880,9.932915,3.156988,-5.977861,0.313488,5.194174,0.152453,-8.749110,4.748276,2.717655,4.139475,-3.577825,-9.416954,3.170022,-2.677365,5.599636,-1.300750,-3.143328,-4.956859,-3.168758,-3.840235,-2.915444,-2.531702,-6.307139,0.146592,-4.302991,2.199140,2.011083,4.279227,0.566938,2.533416,3.809304,6.975905,-4.431249,-6.099687,-7.757096,-2.445115,3.504193,2.836963,2.110554,5.578153,5.970187,-2.752650,1.054055,7.849543,9.851387,8.664127,2.289809,1.833283,-6.560258,-8.770696,-8.364900,-3.982794,5.077420,0.802568,-8.239850,-9.544460,-9.875667,-7.392463,-7.116248,-4.647445,9.040095,4.517946,-7.555994,-1.080812,-4.527120,2.536322,4.199941,-1.826964,4.016578,0.012488,3.674163,-3.296850,-1.696579,5.220448,-0.933123,8.174075,3.843522,-6.895866,7.252044,-8.488380,4.611631,-8.911637,7.688719,4.237080,-0.144589,5.393420,-1.449844,3.326213,-5.585651,-5.633692,-6.757520,-6.220819,-8.548696,-8.799431,7.945114,7.568939,-7.756525,-4.877846,7.378465,2.604059,-6.718151,4.718758,-1.743804,-8.970541,8.890070,0.896712,-7.074851,5.078771,4.028622,-3.888112,-9.329547,2.285142,4.961193,9.653153,-9.980604,-8.329215,7.401866,1.484143,1.097289,-2.118241,-9.526916,-8.923479,-8.942629,7.473447,7.709639,-9.318604,-3.880254,5.877940,7.221114,-3.444831,7.141265,7.725631,-3.302146,-7.855078,-9.615270,-6.653841,-4.210145,2.249665,-4.548060,-1.990344,-3.265848,6.026760,0.131912,-4.065410,8.765429,-9.622746,1.679460,9.347476,-6.141317,2.856494,6.003626,-0.941946,1.245243,-7.755438,-9.168872,2.219531,3.604921,7.008092,9.599406,-9.828374,-5.686177,3.936126,-0.598857,9.928598,-7.211420,9.513748,-9.867295,-8.318779,6.858884,7.101485,2.850770,-1.668078,-7.457088,2.000040,5.236904,-2.583292,-1.664584,1.854535,9.206900,-9.974594,-8.024440,0.122374,3.736862,-1.869780,-0.997991,-6.799839,-0.219545,-5.236000,5.707679,5.232900,0.334080,-2.128952,9.776630,-0.102728,8.246361,3.281600,-5.305238,-6.395548,-5.022465,-4.186068,7.654837,-9.349449,7.396111,-9.352264,8.033779,4.787577,4.227964,-0.924075,-6.109719,0.633350,3.932244,2.545377,7.940290,7.855379,-5.016186,-3.175697,2.007272,1.722699,-0.029685,6.630801,1.683412,-2.952197,-2.363505,-3.704682,-9.314156,-1.196565,-0.683960,8.552884,-1.355684,7.733412,8.650787,-3.795370,-0.173316,9.922842,6.161196,-3.237934,-0.579354,8.274029,-9.066626,9.265640,-3.160306,-6.936104,3.508729,-1.378630,2.895103,-2.229046,-5.261432,5.353221,-6.265841,1.216489,3.333760,6.625682,-8.339080,-6.908652,-2.680283,1.403793,-6.091303,8.822973,-5.615406,7.370457,3.277684,-9.653343,-9.482324,-3.717228,-0.695889,-3.788277,-9.656452,7.717625,-4.172811,7.117397,8.745460,6.118317,-4.387256,2.681392,3.519500,-8.402621,-6.621908,-4.389651,-9.618922,-8.451383,-9.014644,-0.669880,-1.787541,9.494896,-6.074421,5.240671,-4.513345,7.492180,1.279444,1.051276,0.079004,1.557924,-9.796308,-3.281783,-6.383404,7.536327,3.639786,9.218866,-4.702645,-2.185033,5.962328,-5.546765,1.894456,5.341134,8.790522,2.737027,-5.840760,-6.768012,-0.565557,-6.396339,9.757607,1.333725,8.472684,-2.093059,3.514323,-1.246811,-1.922379,-1.588063,-5.832562,-7.559045,-4.882495,-4.477848,-2.663478,0.374975,0.770694,-8.063669,-2.697568,1.008812,-1.499674,1.198371,5.355566,8.073601,-1.940394,9.270705,2.016504,-9.364696,5.190518,-8.059661,-3.463550,-1.482385,0.737990,-8.031235,-1.172896,-9.114662,-1.854908,-8.576680,5.018313,6.641465,-4.293351,0.258567,4.597234,4.679726,-8.790861,-4.072265,-2.013700,3.654186,0.579603,8.321126,9.968081,0.500323,0.056231,4.515224,2.343347,-1.676884,6.405379,4.556672,-3.826201,2.021625,-1.400745,1.460681,-9.378406,2.614204,-5.579379,0.325232,-3.731031,6.374034,8.180789,-9.013788,-9.798293,-3.079715,-6.412871,-3.060681,-2.571364,-6.920185,7.486535,1.871910,-4.638308,-5.077787,8.372360,-1.585924,-0.014985,5.000348,7.040071,-4.800137,8.157624,0.234788,-0.352222,-0.828057,-8.084017,1.469449,-7.291412,8.843337,8.829689,7.908086,-7.168165,-3.862120,-8.956703,-1.247309,-0.897703,7.038651,8.516780,8.961689,-6.243484,-4.829069,-5.577350,-3.515733,2.474831,7.910569,9.402753,7.743363,5.025792,-8.767524,-4.290235,2.893584,7.254468,-4.277876,9.423291,-4.886407,1.490403,-6.467442,6.514990,-0.216588,9.321699,8.957065,-1.674650,-4.945059,0.691749,7.994983,9.185193,-6.022275,7.295025,5.898451,-5.697836,-4.038141,-7.752557,-0.751515,-1.661397,-2.983959,-4.998779,-6.932774,5.513654,-6.711071,-4.484746,-6.866467,-4.240575,-0.833818,2.558267,3.560018,-7.702910,6.174041,-3.530236,-1.968239,-7.337784,-3.481989,-7.271598,8.244386,8.075584,-2.721436,-1.906041,7.079195,2.356234,-6.674195,2.719144,2.322655,-0.362948,4.962686,-2.086559,7.136678,-2.658938,6.930765,-1.272403,-4.671534,3.772262,3.721802,4.643718,-1.601379,8.534271,8.060378,-7.425593,-5.660953,4.458800,-1.098487,0.545637,-3.048158,4.014908,-8.151685,8.307618,-7.639082,-7.120276,-2.079610,-2.802365,-9.916337,0.260292,7.452634,-2.868601,-9.216219,8.227177,0.118911,-2.282113,-5.061214,-0.380940,-9.941726,-4.727927,-1.639587,-9.118033,-1.167618,4.633844,-4.818724,4.972180,7.697596,1.256855,5.101167,-0.549514,3.852064,3.210823,-8.289020,3.409429,7.204232,4.116768,-0.080395,-0.443127,4.278797,6.619683,-5.039939,2.183818,5.854130,-9.863937,8.817502,9.801229,9.292823,-0.460650,-1.025618,-3.111055,8.200871,4.599124,-9.775258,9.661533,-6.776733,8.181213,9.478174,-3.962532,-9.758243,5.487612,3.497939,-0.762127,1.565907,-9.366799,-7.478165,3.622803,3.965320,9.656947,-0.662280,8.820842,-2.296962,-6.985620,5.087769,-8.176102,3.887976,6.735129,-2.006100,6.867713,-8.531840,-8.296185,0.312428,3.355916,-4.944951,-6.086219,3.092485,2.502690,-0.070619,7.874098,-8.728912,4.284907,1.361923,-9.708996,5.473734,-8.377538,-9.010591,-8.913571,-6.765574,-7.050725,0.454501,-9.016061,-4.247076,-3.526804,8.419159,-5.078328,7.522837,4.776311,-9.096149,-7.665993,0.048268,8.211494,7.068942,6.587898,3.980778,9.958606,-7.275114,2.141671,8.045802,-4.803875,8.909719,1.147373,-5.805322,-7.963792,-3.255798,-1.571691,4.063593,0.704833,-7.587767,-3.773848,-0.655386,-2.912459,2.923891,8.135352,9.473321,3.030768,-5.347389,7.716597,5.224380,0.085761,-7.070836,-1.895505,-7.717320,1.617272,-7.449507,-2.812894,7.317313,-0.244069,4.519113,4.123119,5.311571,4.436250,2.291597,-6.633578,-0.894752,6.504862,-5.915575,-3.966420,4.749572,0.383627,-4.061622,6.879261,-1.531126,-5.203826,4.446662,-8.916562,2.820118,2.056814,-6.158804,4.374769,8.881119,1.925701,-0.179184,-3.372664,3.706788,-0.528541,-9.808174,9.178545,0.141056,-2.082327,-1.369004,9.137488,-3.108530,-2.936277,-6.767478,-4.271048,-7.496932,1.070917,2.231491,5.658251,9.336257,-5.678052,7.526107,-4.406387,-3.136901,4.916324,7.585186,-3.381528,0.681027,-2.043165,-9.054207,-5.993111,5.871770,-5.223221,9.848854,2.868574,7.079655,-6.390325,-5.995783,1.314768,1.515147,5.246972,8.106563,7.501233,-6.411387,-9.201225,-5.910769,-0.119333,0.423177,-0.196484,-2.860788,8.200325,-6.068333,-8.420981,3.019297,9.419949,-9.707860,9.881157,-3.904373,9.444252,8.690297,6.506625,-5.610990,5.608069,-9.727208,-6.268919,0.404698,-1.076570,-7.507281,-1.682152,-1.768301,-1.078355,-9.216533,-3.570293,-4.701244,-2.513154,-9.863659,9.328579,1.951034,-2.226544,5.132641,-7.162162,-8.750483,-6.723982,0.868275,-2.683385,-8.159599,-8.275200,2.454971,3.159097,-4.048746,3.028984,0.443328,3.804685,3.310382,3.316990,8.067179,4.020853,-2.248567,-0.236819,8.708505,-7.449544,3.408938,-8.535872,2.403712,8.327059,2.893005,-3.106825,1.208346,6.366985,4.080889,6.326721,-6.661261,4.089205,-9.962520,-8.316872,-2.589975,5.178625,-8.862173,-7.121102,0.071612,2.880982,-8.073740,-8.901018,-9.333505,-6.704437,-3.172538,-5.111929,2.115687,7.589126,4.668652,1.725000,-7.353587,2.860853,-4.758092,9.095821,8.901841,8.420007,-6.326703,-8.079746,9.862526,0.316052,-8.384677,4.583179,0.350262,-8.395675,-9.478476,-6.944414,-8.387492,2.820229,-6.507909,9.411597,-1.325734,3.551198,-0.330181,9.705840,8.351288,9.018925,-2.795736,8.978343,7.570530,-8.798723,4.449237,9.903789,-0.877696,-3.283786,0.647014,6.063047,-4.547995,-9.755857,-9.147393,5.083688,-4.872689,9.404449,1.369843,-2.529202,-7.764091,-2.072074,-5.699885,-0.665910,6.823377,7.074132,-2.033309,-2.076746,5.014085,4.855656,-3.698848,3.480955,0.075243,5.947570,2.594061,3.735420,-8.994174,8.196467,9.166941,1.316528,3.047641,6.810826,8.102918,-1.005290,3.777892,-6.604311,-8.071447,-3.814588,9.813067,-2.834534,-1.718765,-1.596208,-3.452864,7.698015,4.824803,-0.845258,2.205285,-1.027026,7.421276,8.204239,-6.834366,-2.631832,-8.927279,-8.919173,-2.351988,-4.592857,4.825690,9.575754,0.738073,2.636327,4.220388,7.605175,-8.035422,-7.981069,-2.868466,-6.677123,7.445728,-1.996142,9.106306,8.443924,1.766152,-9.580286,4.938513,-6.434517,-0.102187,9.999498,7.435712,-6.662459,5.430859,0.546919,6.447326,-8.311622,-1.285634,-1.141756,-2.058187,5.479414,3.519392,-4.297528,8.296021,6.787750,-8.014292,-4.539138,4.577172,6.896273,0.970823,6.268303,-4.201459,5.421838,-1.178795,6.552483,-1.039384,-4.540816,-8.557250,-8.670033,-2.706707,-8.602931,-9.464250,-0.601697,1.322139,-8.522083,2.483107,8.206313,-9.135971,-5.574824,-1.004301,3.640114,3.981355,4.190679,-2.021187,1.943450,7.679458,1.768060,-8.748086,-7.945504,-6.629562,-9.427801,-0.279102,1.897786,2.622620,8.609645,9.221954,-7.685087,-6.618370,2.659586,6.523243,1.118713,-2.711050,-5.449457,9.889908,-5.821709,-3.438458,9.324919,2.511255,0.777572,-7.661723,-3.149681,8.186171,-9.940327,-2.152560,-5.232926,7.903953,1.076872,-8.515502,-4.278555,-0.132892,7.339926,-3.582288,7.473964,-7.085254,-9.043652,7.180900,-4.939599,7.796645,-5.685185,-5.285956,6.232916,8.438155,0.096050,-9.165919,5.422238,7.276721,3.630701,6.456465,3.043870,0.749323,-0.535323,-2.289899,7.642540,-3.127884,-9.370073,-3.294352,-3.088076,-1.523302,-9.557756,9.089883,6.002579,-3.334249,-3.112307,9.536949,8.011123,2.652788,9.541795,5.621309,0.141145,-2.063968,-5.666034,8.051586,-7.171001,4.782167,3.921859,-8.462345,6.286991,8.563578,-5.959146,5.818814,-0.599084,-5.585623,-3.713626,-1.734893,5.560732,9.155002,-4.517054,-5.457956,-2.221811,1.780250,-2.393453,-0.522127,-1.298836,-2.233198,-7.951065,2.135971,-6.700521,-8.653090,3.031922,6.265306,-7.443980,-2.799201,6.085583,3.583557,-4.646614,2.574407,2.146380,-7.509313,-2.053351,-4.371568,-2.272457,3.874598,5.406552,-9.361988,-2.739239,6.006098,-2.374736,6.030246,-2.703208,-6.728771,5.397939,-7.716584,6.974868,3.123274,7.803024,7.513097,2.967086,-8.608827,-1.852676,4.137251,-6.134095,7.424100,-8.907176,0.718962,-8.052358,-1.858571,6.886659,-0.880502,1.888851,-0.237980,8.369501,0.159489,-4.807097,-1.493337,-6.531511,-3.938706,-1.257289,8.100385,-4.979634,-5.029595,-7.201359,2.255318,6.943516,5.316538,5.761656,3.505816,2.942967,5.205128,-1.212308,-6.145986,2.408823,-8.794366,0.760001,-0.671009,-3.432943,-0.451059,5.633852,-1.022192,2.088754,-6.920422,-0.007924,6.679267,-9.530402,4.808517,-9.323684,9.300979,-5.323236,-2.658075,8.907019,-3.115007,8.072846,5.096382,-5.470243,0.513399,5.572911,-8.104956,5.972095,9.989858,-0.818507,-2.751291,-8.760596,-8.931721,1.824062,-8.895309,7.406503,-3.587719,6.667161,-3.067371,-3.597067,8.994946,3.841894,4.674148,-4.916957,-3.888021,1.751910,9.400152,-9.859599,0.122938,-0.495276,-2.348415,-0.863616,-5.283520,-4.573023,4.899409,-6.655375,-0.752534,-4.745313,-6.532687,-5.426886,5.989084,-3.355228,-1.714822,-9.412674,-0.415928,9.602229], dtype = "float64")#candidate|4367|(1232,)|const|float64
call_4366 = relay.TupleGetItem(func_4289_call(relay.reshape(const_4367.astype('float64'), [1232,])), 4)
call_4368 = relay.TupleGetItem(func_4291_call(relay.reshape(const_4367.astype('float64'), [1232,])), 4)
func_3507_call = mod.get_global_var('func_3507')
func_3511_call = mutated_mod.get_global_var('func_3511')
const_4370 = relay.const([-5.952506,0.517417,4.207188,9.467989,-0.047391,2.460281,-4.008724,5.198550,2.587288,7.979024,9.372711,-1.832780,6.572663,-6.578284,-2.601531,-8.589794,-5.558333,9.765578,-4.353023,6.559764,7.008008,8.421001,-5.653940,-0.453377,-8.158290,3.592962,-3.224738,5.665721,-1.545399,-2.295425,6.226532,4.725744,9.702972,9.056613,-4.650373,-1.105846,-2.867185,1.679025,4.669327,-2.338204,3.164541,1.087599,-5.111516,5.186283,-8.664805,6.289346,2.713100,5.453072,-4.257499,-7.649029,-3.827533,-7.219792,-1.799676,0.029723,-1.531115,9.953831,2.324084,2.801553,-5.725611,-0.336073,-5.022416,-6.786572,6.455131,-4.542678,1.510605,-1.015003,-7.225168,-3.062675,-2.823691,-5.808102,6.386630,-4.623794,-3.862810,-6.976698,7.446923,3.160309,1.858925,4.412188,-9.862282,-2.891789,-1.136030,4.066226,8.145925,5.450661,0.438416,-5.361687,6.933200,-1.251244,-8.340774,-8.963943,7.182781,-3.655691,-3.951710,0.232446,0.865526,-6.728670,-7.308313,-7.595854,1.229280,6.191504,2.221130,7.967237,9.098764,-1.261646,9.645186,3.630070,0.845402,5.154980,6.950387,-0.643780,-7.682301,-1.174359,-9.386678,-3.722436,-5.373816,-2.664243,-3.059931,-9.730991,3.359349,7.336890,-0.411175,-4.702176,-9.784242,7.569384,-3.069140,0.965636,-9.022274,-4.558165,-7.113589,-1.131794,-3.720588,3.557931,-5.684134,-6.693803,-6.906199,-2.400078,-4.499249,-8.019250,-9.440489,-5.528723,3.035924,4.759999,9.473526,-8.590227,9.896403,-3.617018,-8.580051,-5.785887,-4.639828,-1.637075,-4.119469,1.134740,7.570591,-8.307479,6.989328,2.197917,-1.740957,-0.483336,-6.925210,1.140634,8.277306,1.425358,9.046413,-8.182172,8.147236,5.313316,-8.622897,-1.704719,-4.704177,4.551077,-9.514056,4.604273,-1.369800,-4.745357,-6.619859,-0.339152,-5.942004,1.366126,7.928769,0.079574,0.872007,-3.044689,0.068350,6.533476,2.559494,4.289662,6.613683,-0.593674,-9.485065,-4.447936,1.435293,-8.587200,6.063247,3.463816,6.749123,2.204419,5.238296,-6.174434,-3.696903,0.846519,9.102264,5.241036,2.162385,-8.173200,8.515751,-5.515253,9.596803,-6.292590,6.861945,0.598618,-9.868682,4.558705,-4.513713,-6.343611,8.823322,4.692617,-5.270392,-3.594731,-3.513902,1.568588,2.532876,-3.886166,-8.324078,9.139569,8.462326,-0.761974,5.860131,7.319960,-5.117350,5.156065,4.423744,-1.098498,5.436560,5.473561,4.651918,1.805205,3.792230,9.579844,-2.599440,5.838420,8.045208,0.373129,3.073915,-8.633283,-3.852662,8.243969,-6.242332,5.250501,-1.985124,-0.684921,1.719054,2.631337,2.427775,-8.635090,4.959689,7.552740,-4.024179,-7.514779,-3.901949,0.194775,-0.956288,-5.930628,-8.823744,-3.416090,4.604248,-8.131640,7.484144,5.678554,-1.517149,-0.859179,7.060853,-9.286109,9.738479,3.450441,5.123120,-2.395673,4.952569,4.085608,0.880921,7.082802,-0.682768,3.405464,6.310645,-5.734351,7.283233,5.096285,9.122671,-9.227651], dtype = "float64")#candidate|4370|(288,)|const|float64
call_4369 = relay.TupleGetItem(func_3507_call(relay.reshape(const_4370.astype('float64'), [12, 8, 3]), relay.reshape(const_4370.astype('float64'), [12, 8, 3]), ), 0)
call_4371 = relay.TupleGetItem(func_3511_call(relay.reshape(const_4370.astype('float64'), [12, 8, 3]), relay.reshape(const_4370.astype('float64'), [12, 8, 3]), ), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_4379 = func_2281_call()
call_4380 = func_2281_call()
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_4394 = func_3012_call()
call_4395 = func_3012_call()
output = relay.Tuple([call_4358,call_4366,const_4367,call_4369,const_4370,call_4379,call_4394,])
output2 = relay.Tuple([call_4359,call_4368,const_4367,call_4371,const_4370,call_4380,call_4395,])
func_4398 = relay.Function([], output)
mod['func_4398'] = func_4398
mod = relay.transform.InferType()(mod)
mutated_mod['func_4398'] = func_4398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mutated_mod.get_global_var('func_4398')
call_4399 = func_4398_call()
output = call_4399
func_4400 = relay.Function([], output)
mutated_mod['func_4400'] = func_4400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_4420 = relay.TupleGetItem(func_2716_call(), 2)
call_4421 = relay.TupleGetItem(func_2717_call(), 2)
var_4425 = relay.var("var_4425", dtype = "float64", shape = (3, 180))#candidate|4425|(3, 180)|var|float64
bop_4426 = relay.subtract(call_4420.astype('uint32'), relay.reshape(var_4425.astype('uint32'), relay.shape_of(call_4420))) # shape=(3, 180)
bop_4429 = relay.subtract(call_4421.astype('uint32'), relay.reshape(var_4425.astype('uint32'), relay.shape_of(call_4421))) # shape=(3, 180)
func_2682_call = mod.get_global_var('func_2682')
func_2686_call = mutated_mod.get_global_var('func_2686')
var_4436 = relay.var("var_4436", dtype = "int8", shape = (156,))#candidate|4436|(156,)|var|int8
const_4437 = relay.const([-4.032552,-2.794238,-0.219412,7.593748,6.578949,2.640113,8.228083,9.125426,7.210801,0.806510,-9.207914,-6.132342,-4.615093,-6.056232,-7.242218,7.167815,-3.227583,7.005462,3.141971,6.013303,9.890630,-7.752365,-6.835437,4.881091,-5.007164,-4.730787,3.543392,-8.097395,6.774322,-0.894780,7.343593,-2.086034,4.360484,-2.224614,-2.521686,3.652136,-5.860816,-9.486989,-7.278816,-2.520496,-8.785606,4.783903,7.831985,2.407756,2.573641,8.653491,-4.424687,-9.275641,5.486279,-8.544246,-3.819630,1.876438,-2.552787,2.570088,1.461457,9.839138,-7.864303,-2.429622,-8.336538,-5.529161,1.050782,-6.719778,-6.294612,4.498829,-4.172529,8.280041,-7.547729,5.789179,7.817810,2.140168,5.086371,-9.908843,6.950252,6.757312,7.989587,3.109091,8.294279,-6.822090,7.741269,7.746000,3.853696,-8.033660,-6.128419,-9.164549,9.198408,-5.899324,4.405542,-4.988528,5.286556,-9.878928,-6.817746,4.066075,-9.963340,5.288010,-8.320008,7.824384,2.954317,7.317784,0.720967,0.039330,2.239335,0.855624,2.069510,0.966200,-0.328367,7.266901,-3.657905,-6.494379,-3.064768,-4.133757,4.410840,-0.184134,8.297407,-4.009917,-0.397740,4.773929,0.679548,-8.988280,7.111215,-7.510106,8.794462,-2.325243,-6.606664,-5.111019,-5.888719,5.764328,-7.910373,-8.348518,9.711399,1.647524,9.898160,1.418625,2.337309,1.274530,-6.440901,-7.828074,1.283308,0.090288,-1.631493,-4.071909,-6.111656,-4.957645,3.718863,-4.508305,2.359104,-0.420552,3.144048,0.652528,6.244221,5.558998,-3.200468,-0.262210,-9.340128,-8.499431,2.421849,2.388899,-3.594407,3.358022,-3.187726,9.115863,6.463058,-0.559642,7.345551,9.495579,-0.095216,-2.010886,2.896995,-9.835843,-9.420484,-4.137888,7.053643,3.750511,1.142126,-5.719104,6.474704,3.551225,4.773606,8.638367,3.219809,-4.846402,4.297005,0.950455,8.773941,-0.627618,-2.556899,7.307039,-0.536244,8.666724,2.457834,2.120911,5.012061,9.999554,6.652464,-0.545251,-8.120216,-8.502194,3.870422,-9.106020,-4.641787,7.143826,5.635148,-1.241053,1.756734,3.707668,5.188009,5.076401,0.506207,-9.597991,4.210396,8.640575,2.324206,8.549059,5.314037,8.572468,-5.805837,-1.958483,6.341349,0.951028,3.083942,-5.544529,-0.606754,9.879648,-2.355629,-6.085930,-4.060380,8.247130,9.527925,5.521920,-1.715438,-6.443037,9.795518,-0.103744,-2.483017,9.325473,-8.520624,-4.827393,-0.234312,-1.152218,8.902198,-1.569231,3.214746,3.330973,3.300474,8.677855,0.314467,-9.215052,5.814570,-1.385583,0.785656,8.763026,3.703378,-8.093451,2.647705,-4.566735,2.692538,6.506673,3.703836,4.556765,2.721984,-3.460540,2.870127,3.992656,-2.098067,-1.254773,7.198195,7.028820,5.826682,-8.518838,9.936065,-2.655731,-4.131660,2.675334,-6.066981,-7.484696,0.761493,8.524634,2.153839,2.509828,-4.738710,2.116345,1.132449,-2.529516,-0.832462,-5.433230,8.472773,-0.011374,-9.460676,0.281950,6.261832,-5.455412,6.966775,7.383621,-7.532458,-5.446108,-5.340604,-9.287223,-5.041521,-7.044374,-9.014579,-9.809304,2.516754,2.214530,-8.858747,9.395407,-5.644506,4.179698,8.226269,-5.785116,1.697506,-1.068612,9.086847,-0.390418,5.070301,-3.036748,6.784453,5.080562,-2.459013,-0.763523,-3.638027,-2.548950,9.274620,-1.085139,-1.586263,-0.966085,2.981520,5.842986,1.847808,-0.012570,-3.670310,-1.349955,-3.582371,8.982452,-9.572350,2.885163,8.919511,6.204866,2.105478,6.748813,1.211879,-5.703617,-6.030005,7.051202,1.099947,-8.702806,-0.621358,8.100569,-3.706703,5.334888,-0.106597,9.098870,-4.886332,-6.931367,-0.002245,6.516847,0.918957,-1.636982,8.458113,9.893337,-5.364884,0.049308,9.690076,3.138840,1.813293,-8.576602,0.347046,1.924830,8.405522,-7.387889,0.369056,8.468930,4.923776,-7.301678,8.736659,7.884283,1.678856,-9.710804,3.038511,-8.100377,6.308747,-1.408123,6.629941,-3.355152,3.070765,-7.177783,9.961536,8.994067,-3.750751,4.361275,9.526027,6.701531,3.970409,7.635854,5.566464,8.032886,6.570739,5.557692,3.297619,1.596988,-3.323575,8.390740,2.190096,-7.804736,-2.556998,3.048806,-8.780846,-6.978627,-2.648548,-6.341278,-6.103748,-3.996202,2.749501,-5.094541,-8.578284,5.729939,7.115341,-2.109839,0.622220,-5.988626,-6.589324,-0.633937,-8.582634,0.901273,-8.814062,-1.295144,1.570528,-0.538299,6.519639,-1.097626,-8.152131,-6.725351,-5.270323,-0.615565,-0.025639,-2.767428,-5.254337,6.045776,7.616568,-8.185456,4.595358,-9.038133,7.091870,0.977171,0.795625,-8.735331,-0.307755,-5.840832,9.220816,-6.103918,6.116522,3.952486,1.524594,8.790052,4.039510,5.593231,-8.453068,8.263090,-8.884574,-4.529952,-1.682044,-5.053592,-9.022738,-2.819877,2.582200,8.958962,1.810631,4.370350,4.474682,2.110757,-7.971763,1.926938,6.439595,-6.188851,-7.334419,0.086799,-8.533105,3.919336,-0.340195,-5.680520,-4.559418,5.353722,-5.460645,3.726079,2.495113,-7.480747,0.609732,-2.721940,3.820782,-1.415361,-5.273668,-4.984256,5.752061,4.255150,9.563500,-1.663957,8.084058,1.554663,-4.098725,5.840370,-7.943896,2.192224,-0.281485,-8.533675,-0.600142,9.236896,-4.413592,9.673597,9.960493,-5.180567,5.046790,-8.438289,-7.385216,-2.802501,-0.526659,-1.697276,-1.790425,-1.478860,9.804027,-9.129054,-8.085321,-2.577935,3.840007,-4.367680,-7.825513,-6.579786,0.095149,-3.938804,-4.210096,-9.477523,1.544933,4.350020,-5.159781,-7.732688,-4.357885,-6.935727,-3.699510,-5.632868,-4.526059,-3.855757,4.133138,-3.600206,4.183046,-5.884961,-8.002009,2.804085,7.126447,6.655148,-1.274745,0.889641,-4.888852,6.330967,1.585844,-1.434395,3.220570,-7.986203,1.881477,3.854521,-0.551499,3.612151,6.784110,-7.629247,5.145866,-1.794193,0.139965,6.074490,0.754593,-5.621622,-1.628314,7.764790,4.102362,-5.920254,-0.068991,3.007521,2.920293,4.252856,1.103891,1.570336,9.041705,1.866058,9.225340,-6.261469,1.399772,5.890436,-3.264527,8.676099,2.045892,-0.963715,-3.736760,-0.307104,-0.177129,-3.602057,2.156691,4.647265,6.270914,1.658106,0.993931,-1.720992,-3.205833,-6.737602,-2.161955,-1.734201,5.044827,6.467968,-9.904015,8.889921,-7.781071,0.611082,6.623971,-4.020047,7.953211,0.783265,-1.640829,5.459681,-0.979886,3.664855,-6.326123,-7.495017,-1.522893,0.569691,7.841270,-8.151211,-1.612640,1.884730,-7.293678,-8.777785,8.366439,-8.435116,7.533226,-2.878028,4.573659,-9.954951,5.978722,7.762203,5.263094,-8.913007,0.985095,-1.148313,-3.968613,7.559767,7.846621,-5.608975,9.191610,-5.171556,4.691869,-1.616895,-2.481351,-4.634528,8.214047,-4.114938,-5.791521,1.533482,7.009001,3.401636,9.849575,-2.387530,-9.745866,9.850366,2.323772,5.107125,-9.322201,2.632905,-3.624733,-8.747372,7.210745,-0.463139,-5.076034,0.555990,9.311864,2.013840,5.149534,-2.528749,8.723006,2.034903,4.158830,7.297776,5.107796,0.960858,-8.003978,8.593751,-8.028809,7.773466,-4.654696,-9.340147,5.090996,-4.010722,6.094020,-5.310876,8.040972,4.086642,-5.380873,-7.368506,5.311549,-4.452192,-3.829272,5.375771,8.052816,7.412319,3.166364,-2.651134,2.754098,8.095359,2.903014,0.105825,1.846909,7.227125,3.602699,9.842267,3.481321,-5.726221,-5.194034,-6.835016,-7.573636,5.712986,0.009437,-4.538922,-1.458082,0.719507,-9.259848,-4.944738,3.843034,9.775394,-6.603127,9.886863,-1.872135,7.265130,2.599127,9.135144,5.931213,6.801008,-1.616925,4.936167,4.760449,-3.601748,-5.182192,-7.987696,-1.959067,-9.836513,-8.516488,5.211811,-6.579867,9.588154,-5.578115,4.796520,5.106357,2.838154,1.879503,5.301281,4.951801,-0.650746,-7.177709,-4.407704,-1.726432,2.234345,-2.185531,-6.746984,0.741701,8.800956,-2.087322,7.730379,6.981055,4.076562,-3.270633,-2.210955,-7.550190,2.044821,9.916405,8.272885,-7.861875,-6.965070,2.720847,8.714861,0.205723,2.384497,-7.948606,8.569764,7.456787,-0.292407,6.173863,0.673664,2.796276,2.692498,-3.510768,-9.049443,2.898847,-3.251144,9.446242,-9.379323,-9.527371,-1.685451,-4.366029,-3.070634,-4.590748,2.003069,9.321450,5.192706,7.405771,1.824628,-1.162485,6.148074,6.270907,-3.110497,9.097669,8.378551,-4.112553,-4.618563,8.900664,-8.085826,6.282982,-6.662075,9.818999,2.492109,-3.631310,-9.422675,9.930152,-0.687686,6.461981,9.208398,0.803140,-1.025307,7.030179,5.914833,-6.173273,-5.716691,8.107258,-2.938825,3.944349,-3.506175,6.039431,-5.062002,-3.330027,7.203442,0.279997,-0.069713,3.731024,6.105007,-4.740540,2.868930,-8.270798,-4.860445,-1.175353,-1.278449,6.468196,2.384832,-8.437766,0.856189,8.077745,-7.543089,8.889748,7.099674,-3.118709,5.767534,6.342119,7.556517,8.435199,-4.165944,-3.209901,7.419515,6.405411,-9.010018,-7.773762,-2.877205,-4.397419,-5.483994,7.432087,-4.166114,-3.485279,-0.586259,7.219756,-5.774138,-6.360638,-0.609024,5.286101,-7.481672,5.686440,-3.840703,-6.352236,1.506673,-3.946893,-2.558961,7.291187,9.036492,5.653359,-7.357049,7.442627,7.580470,1.388583,-3.279739,1.542239,3.738581,-7.399256,-4.678859,-2.443739,8.056842,9.523081,-5.792189,4.823285,3.855995,-3.873434,1.750841,-3.272641,8.212425,-6.385106,-0.865457,-8.006747,-6.424907,-9.173694,2.183984,-3.992040,2.538662,-3.711376,4.314665,4.417916,-9.859078,-1.702932,2.355086,-8.145256,-0.416181,-7.791042,-3.915221,-9.576065,8.149358,6.224143,5.779166,-2.356706,-1.742939,-2.958507,-8.711468,-3.155729,8.281712,-2.275236,3.341554,1.135865,1.433721,-7.824809,-0.547675,4.411739,8.835102,-2.948814,-2.745645,8.023164,-2.650954,-7.642228,6.465566,6.145193,0.865130,5.027327,4.612057,-3.978747,4.139526,-5.876483,3.751926,9.212242,7.486146,5.848705,-6.593309,-3.755766,3.259085,4.946421,7.465804,2.115439,-9.489923,2.533472,-6.641161,5.118420,-8.996519,0.323695,9.167781,9.997209,7.108979,-8.618305,2.070577,-2.999727,-7.587678,-4.521679,-1.967341,-7.618452,-4.099097,-3.255276,-1.605150,-9.427468,-0.099508,-2.254404,3.037449,-9.943872,9.902844,-5.112313,9.215181,0.173583,2.153323,0.697197,8.717539,-1.976372,6.308913,-7.053568,-3.532719,-7.443567,1.907506,-1.488708,-9.738327,7.925900,-2.860778,5.818354,-0.081603,9.323128,-9.992062,8.044128,-2.536385,6.861121,4.534668,3.167623,6.123041,-0.531765,2.194018,8.845298,6.738744,6.840655,-2.420023,9.310345,8.335555,-7.890410,4.375331,6.372285,-3.665807,0.811931,7.190331,5.277079,-3.331796,2.159860,5.499493,-9.545334,5.896067,-7.637004,-3.379649,-1.425481,-1.701303,8.092940,-5.063833,8.775875,2.103311,-3.439482,-6.347995,7.375352,3.385644,-8.632708,7.541434,3.653273,-5.408033,3.327367,9.315486,-1.012554,-0.951675,6.774823,-7.704187,1.294992,6.236573,-5.958368,-7.948938,6.911638,-0.828713,-5.323025,-3.910027,-1.715132,2.708375,6.864109,7.154280,-1.082007,9.214854,3.067756,-5.154403,5.362756,-5.781306,6.162819,-4.893852,4.217228,-9.781901,-3.431625,8.266578,8.471128,-6.805679,-5.881029,-6.402738,-1.204424,-9.064046,-1.527712,-8.360607,8.303429,5.154784,3.836118,7.130600,3.277420,-7.413542,-8.037479,-3.742559,-4.277151,-1.019821,9.292876,8.332002,-2.895117,9.453958,2.189745,-5.965422,-5.223397,3.484972,9.475022,-3.643827,7.153434,1.144054,7.197268,4.370589,-0.330046,-1.439564,6.333757,0.123238,3.093873,-0.776929,9.673881,7.612830,-4.832469,2.394080,7.677398,-7.700844,1.563259,-4.186532,-0.530449,-9.693679,3.098652,-1.743457,4.023027,-4.605269,-2.010526,5.298134,-1.187190,8.226754,2.614877,-0.995648,8.493987,4.193526,-9.149435,1.269923,-4.685392,-0.466857,-1.113985,-9.337231,-6.986346,-7.035450,1.830563,-9.928438,5.924003,-6.889681,5.847773,6.166184,-7.144703,9.762045,6.067334,7.440915,-6.890872,7.136975,-5.147553,-8.183527,3.820196,7.181567,-9.797153,-1.758788,0.674673,0.665677,8.173547,4.740275,4.779096,9.754262,0.019748,-0.772112,-9.920995,-2.092479,0.994883,7.495945,-2.001935,3.376446,3.965164,-6.724357,0.535543,1.607511,-4.516727,-6.774536,6.101510,-1.470158,-3.604255,-7.087103,4.691587,7.933648,-3.848856,9.494791,4.958005,1.551706,-0.841635,9.077140,5.714864,-3.308318,-5.215268,-4.107652,-3.500631,-8.679755,7.829908,4.266247,-8.416936,-2.783967,-1.961127,4.594770,-5.350554,-6.978906,-7.970794,-3.703852,-2.324421,1.685006,7.613429,-2.219423,3.907886,-4.221927,6.975174,8.666389,-6.588739,-8.027190,8.897148,-1.794747,2.641947,-8.636600,1.320582,1.486228,5.535050,-8.457022,-3.490785,4.739223,8.344956,6.191022,9.036559,-1.701377,-4.661974,-9.749275,-6.023539,6.259587,5.543634,6.946052,6.488657,-7.021529,-1.619297,7.112847,1.641893,-6.826094,4.735242,-8.039631,-9.125715,-7.312320,6.446029,-6.331253,-6.763349,6.030063,2.927071,-6.126817,-8.540799,8.758989,9.203342,1.244684,9.273416,2.288791,4.895064,-9.751297,9.014267,-8.559469,5.538319,-7.596426,1.040563,-2.799190,4.192437,7.642516,5.704488,-5.353686,1.107966,-4.488243,4.362352,2.425929,5.579069,-0.737482,9.119954,0.193927,2.083802,-6.593563,-7.678876,9.801175,2.097001,0.269945,2.379760,2.646665,5.322366,-9.850159,4.219754,-3.895247,9.816540,2.879345,5.451377,7.764959,7.080547,9.342979,-2.233867,9.379825,4.269208,8.994565,-5.079183,-4.148745,-2.189489,-7.072489,-5.657337,-7.612794,5.142920,-7.566522,-7.011952,4.439096,8.718048,5.287299,3.204941,2.340771,5.005288,1.488230,0.880548,-9.110270,-6.381346,-1.607027,0.479372,-4.574440,-1.255987,0.838371,3.196455,-1.602652,-9.785224,-1.471845,-5.096927,-1.972547,-4.878659,9.842666,1.592062,0.165223,-1.944456,2.283948,-8.125572,-0.626380,-1.042152,-7.841604,-3.306744,4.801141,-6.107680,-1.967863,6.858243,4.830489,4.395158,-4.362968,-0.232574,-3.547486,4.809667,-9.585774,-8.776229,-0.810486,-7.353457,-9.894722,-6.140114,7.073446,0.596237,3.999206,4.962109,4.959146,-3.945040,9.924614,2.315059,5.363969,3.442173,2.719532,2.822118,0.034537,-0.427833,-8.307626,7.543928,3.550994,-9.383549,0.771684,0.399315,-3.691138,-2.468267,-1.715821,3.132424,-2.764777,2.075961,-5.581837,-1.692109,5.280364,7.425040,8.964381,5.593130,-2.792769,2.666428,1.869328,-0.224340,-9.975045,-9.813807,-8.102747,9.429682,-3.299995,-6.653020,7.309257,-5.101776,8.598387,-5.881365,-1.880249,-5.236839,0.638956,6.218471,-5.077230,-3.607549,-4.671625,-8.911821,5.043108,-9.471046,-1.609365,-2.628017,4.162979,-6.105093,3.519811,6.339153,1.148854,-5.206815,1.497847,3.834226,8.775229,9.468482,-9.556967,-4.056121,7.724864,-6.124501,-3.999944,3.865154,9.456828,-8.105753,-6.106697,4.002066,2.243464,7.267265,1.704760,5.901899,-4.105379,-8.550268,-2.325455,-1.673354,6.302529,1.331973,-1.153348,9.862498,1.450090,-8.648099,3.823006,9.553944,6.709876,-4.923644,8.448773,1.170918,-1.704623,7.990138,-5.257760,-9.250515,-0.028714,8.401560,-2.150349,-7.235381,4.061726,0.926633,-8.034091,5.305674,4.333487,-6.670000,3.664131,4.142955,-6.397383,-4.508880,-3.123873,-3.149822,1.250103,2.441119,4.109536,9.338638,-5.737651,5.774524,5.406131,-9.302749,-2.038122,1.948623,-1.283114,0.193233,1.084514,-2.790478,-2.334166,-3.943702,-8.177604,9.851799,-7.421622,-6.156129,-2.811883,8.734497,4.137082,-7.341803,5.385755,7.808334,-9.786066,-0.259168,1.809939,-4.650147,5.743326,0.942906,-6.314482,9.900860,1.543999,-7.580060,-0.779771,7.310292,2.988814,3.432888,9.434513,1.537019,-1.173544,-6.392467,-3.809070,5.007707,8.385952,1.061201,-3.792744,-3.278990,9.988164,5.893259,3.407792,5.425484,-8.087837,1.296911,4.398233,-3.167317,-4.936933,2.759437,9.861919,-0.975256,4.139277,-0.701740,4.936399,5.774377,9.651836,-5.467213,1.457938,-6.416236,-7.061624,-7.047042,-2.771625,4.798232,5.880969,8.411768,-8.080587,8.616444,2.806184,6.281687,8.132199,5.455266,6.114428,2.957609,8.662515,-7.288739,2.925068,-6.125820,0.538465,-3.243223,-4.997442,2.066738,3.638729,8.596729,2.824911,9.967371,4.193325,3.638907,-4.122804,-6.908173,-3.554180,-6.699061,1.719530,1.375900,-1.691589,4.187905,6.658858,7.364604,8.256978,-1.947357,3.036893,6.018485,-0.670510,6.108928,5.783985,7.972392,2.086920,8.313781,-4.082710,0.568722,-1.203424,1.305380,-9.376878,8.326882,8.390526,-0.127312,3.416224,-5.393443,-9.836065,7.598538,8.302110,-3.988843,-2.356542,4.815166,-4.170924,2.125671,1.858532,0.852357,-7.337777,5.534224,-1.189240,-2.228031,-5.440960,8.223538,2.128600,-2.861374,9.310263,6.108742,8.212335,-6.655047,4.713542,-3.421655,0.027023,-2.518412,-8.098814,9.719227,3.024400,4.078987,-6.866055,6.132974,0.010459,-4.970721,-8.803139,-0.313044,-0.126921,5.920893,-1.405249,-6.966644,2.189927,5.931977,4.568797,-5.381664,2.637998,-1.796038,4.302408,1.084240,3.053744,0.514136,0.671407,4.512057,4.934669,5.843370,7.413496,9.508215,8.470485,-9.177763,7.226152,9.274425,-7.370055,5.049616,9.230439,-7.605875,-8.826805,-5.608403,4.434619,-9.263093,0.232753,8.089336,4.323652,7.779698,7.418878,8.128671,3.877743,9.185149,-3.396565,6.965686,0.146301,2.589122,4.508954,0.795353,1.383088,3.797761,-1.830923,5.968144,9.116805,-5.048862,5.498360,-8.346799,-3.925743,-1.130959,-3.509633,2.871377,-1.050905,6.532876,-1.245202,-4.181469,-7.456821,-6.443489,-2.297196,9.927607,7.254109,2.181379,2.043724,2.037636,2.584771,9.559821,2.359677,-3.435886,1.203037,6.579479,-9.781433,5.759449,-0.546359,6.444777,-5.057031,-9.612838,-0.512294,-6.122548,3.217103,-2.940077,8.536693,-7.216770,-9.821168,-8.292680,5.948304,7.109962,-5.073227,-4.373769,0.868876,4.153421,-3.395069,2.927359,2.984877,0.242860,6.654057,-4.548968,8.277906,0.303877,7.097518,5.414578,7.988992,-8.722227,2.917449,-1.716892,6.622737,-4.502396,-2.813185,-5.772312,0.104914,-7.114067,2.557560,-1.486628,-3.801756,-4.252096,5.533744,-7.400724,7.107918,-6.343998,8.274768,7.414741,6.158629,1.986605,1.791582,7.783886,3.761404,1.193179,-3.765406,4.584297,6.161532,-8.290899,7.276579,4.453386,-8.778450,5.260985,7.945981,-3.130827,0.302991,-2.913863,0.143088,1.748374,9.458873,-7.407452,-0.020909,-7.898881,5.856776,1.215516,1.430397,9.029617,-8.280388,-6.547130,4.569269,-6.142051,-3.930361,4.827214,6.564609,-4.245329,0.529585,-5.312596,-8.739575,2.564318,-0.546423,-1.805976,-8.319868,3.331949,-1.786335,-1.695109,-8.468329,-8.326205,5.652933,-1.241392,4.194719,9.676611,2.861860,-9.446170,8.244988,-0.625350,-1.902356,1.936112,-3.010822,-0.009049,-5.461195,1.462336,7.027676,7.491315,0.429470,1.555875,-3.826464,-2.604029,1.596514,2.633783,-8.708987,-6.453058,-4.682941,0.178681,-5.796876,-5.178607,-6.112206,4.677047,4.226719,-5.309102,-1.714959,3.541450,1.638894,0.383807,5.597216,6.170172,-8.607722,-4.670857,1.353554,8.800316,1.161626,8.085377,9.394898,-3.629713,7.169939,-7.416395,-5.475439,7.407982,7.125248,-6.764697,2.535498,-6.658213,1.134249,5.846449,2.569494,-3.914540,-1.281247,-0.917643,-7.995629,-0.270106,-9.445322,-9.431084,3.756500,-6.182647,-6.803794,4.293022,-7.261725,4.123967,-5.571720,-0.111770,1.719146,4.567376,-9.665474,-5.850803,-9.744732,9.006480,2.278417,3.475014,8.118292,6.937389,9.797548,8.904362,-4.318078,3.691083,3.390836,-0.083763,7.558955,-4.234277,-4.969121,-4.839159,-2.135073,6.881260,7.918942,-6.742455,-9.271745,-5.931815,-0.245864,8.244184,-3.705553,8.194623,-0.197083,3.707058,7.617613,-2.440555,-3.196797,-6.191019,-8.509126,-0.736100,6.279305,-3.560180,-6.334685,4.501394,-1.313817,6.022948,0.616921,1.999475,8.329591,3.336971,-8.179554,-9.996841,1.343150,7.726748,-1.331310,8.319171,-3.883471,5.894209,1.323585,5.024853,0.122865,-0.181618,-6.975020,-5.825695,-8.157665,-3.564852,1.020570,0.677051,-4.398957,-5.010490,-6.747130,-2.932484,6.942757,8.292957,-5.218405,2.143559,-7.538009,-5.127197,8.302892,-2.860307,0.546110,-8.847465,2.864486,9.325762,7.062727,-5.805801,0.930185,-0.784465,-2.538529,1.956895,1.632014,-9.436634,7.847973,-0.979821,0.870413,-4.522000,3.611062,-9.146549,2.264981,-3.707341,6.717048,-7.606519,3.569647,-2.984608,6.030097,-7.643674,-5.356898,-7.820117,-0.541956,-9.113857,7.704922,-1.822594,9.409701,0.221770,-7.056747,7.751219,-9.353452,-2.206496,4.110669,4.671288,7.603406,9.831675,-4.974287,3.787799,-7.885625,-6.265196,-7.549637,-5.928392,3.323031,-1.619407,-0.227024,-6.062099,-0.569653,-5.865976,0.941358,-0.148099,-0.897842,-7.580170,9.188251,9.308957,3.501643,3.057282,-4.307985,9.846083,5.755710,6.528818,-4.406693,-8.841587,-3.804295,-3.559993,-6.853540,-0.462708,-6.441915,6.452840,-0.267951,4.174360,-8.394274,-8.621753,-5.158908,7.022619,7.196337,3.218186,-2.098316,-7.185836,4.942313,-2.827314,1.787837,-9.122961,4.789392,0.430040,-6.936333,8.110024,0.482699,5.034488,2.699617,6.206956,4.146815,-9.544403,-7.617432,-3.895106,7.033337,7.719394,-2.560843,-3.458142,7.901287,6.108819,-9.309404,4.956504,-3.208801,-7.695747,6.967640,0.548766,-8.223160,-9.147854,-9.028399,-5.871467,1.056148,2.798372,9.909524,3.085238,1.561001,-7.126750,0.302067,-9.408965,-5.927324,5.705301,-6.932446,-3.959279,4.246499,-4.827490,-6.837250,1.089428,-8.184062,3.164618,1.430851,0.363233,1.084545,-9.256204,7.636268,9.162386,8.458113,9.751600,5.563850,0.961919,-5.419236,-9.452936,-9.088506,-9.065584,-0.814563,4.009451,-8.670181,4.338579,-1.166879,-7.601507,-6.787283,-4.531546,-9.733585,6.235015,8.475394,-3.773305,-5.619846,-3.671509,7.899502,-7.798970,-0.889656,8.069943,-8.017087,9.000588,-9.488264,-0.986357,1.869735,5.507096,-7.150387,0.186955,3.689174,7.761962,-9.170617,-9.388812,-8.519564,-8.332983,-5.147206,5.978129,-2.558364,-2.491908,-2.778171,1.763137,1.533087,8.691741,1.464613,9.576166,8.968035,4.939747,5.490065,0.414629,-1.217982,-0.101416,4.972692,5.447218,-0.646284,-3.300876,-3.183578,-5.370109,-1.641925,8.566211,-6.209682,-6.269139,0.071954,-1.517985,-2.678405,-7.369866,5.061756,0.860241,-6.964787,-2.302972,-2.316149,5.355667,-9.160877,-2.610725,3.187725,-0.581781,7.552582,6.952569,-4.005031,7.674447,0.491260,2.530856,-6.893630,8.875250,3.809562,-5.181453,4.018628,-7.489800,8.611739,-1.056658,-0.651762,1.836482,-3.598069,-5.407264,-8.522340,1.125284,2.917544,-4.254592,1.723886,-1.838146,4.083306,3.899551,-8.839866,-3.409844,-2.404462,1.220141,0.421740,-7.472617,9.096651,5.512180,-7.359693,-0.624697,1.737011,-4.627795,-0.486407,-6.713139,0.375871,-0.202436,3.969600,0.803710,-5.244725,4.351686,2.904765,7.416597,-6.714884,-2.284307,1.036756,2.965026,5.854131,7.106173,-6.857833,3.778877,7.733817,-6.116751,-5.422166,0.600862,-9.483269,5.926369,-3.600716,-4.975496,6.000263,-3.970658,2.031147,5.703267,9.955722,1.108096,-0.718594,9.084061,-2.615688,6.829068,0.711218,1.598901,0.194916,-2.749015,1.131321,-7.070850,2.722702,4.193897,-5.126222,-2.643691,-5.549205,-0.285353,-9.243263,-0.729355,7.434243,-1.594038,-1.542322,-0.727662,-7.392491,-1.119411,2.091853,-4.940613,6.590861,-3.266150,-0.306468,1.761400,-7.403178,-9.309934,0.346879,5.108324,-2.039663,3.032176,-3.457071,-1.185559,-5.289107,-8.328122,8.936726,4.372219,3.939074,7.140924,-1.931485,-6.586766,-3.359369,1.202146,5.748796,-8.957635,-2.378455,7.871081,3.712340,2.039116,-1.929640,0.491563,-9.737318,-7.930887,-7.461290,-3.568901,-0.507501,6.113989,4.620695,-1.129127,-6.020119,-0.129414,-3.879169,2.340747,4.907900,-4.234846,-5.158720,4.833627,-9.769708,-4.708336,7.292344,0.556178,1.631629,-7.357757,0.720890,-5.535761,0.741692,8.807416,-3.081178,1.865394,8.821021,4.102651,-4.587502,5.932888,-4.875064,9.559900,-9.733395,0.669968,-9.030508,-4.567883,-7.507255,9.735308,9.313695,4.537605,9.715521,6.046710,-0.328468,-7.430797,1.569099,0.055010,-0.835953,-9.388630,3.339153,-7.196773,8.126969,-5.070237,6.365373,-6.378034,-6.758620,-3.057103,-1.586778,-8.612654,-6.801777,3.821359,-8.340340,6.465449,-9.747057,1.865877,7.428659,2.065698,-2.068366,-3.059504,7.426962,-1.466472,5.503267,3.967986,-7.714764,-9.927137,-3.780591,2.412263,7.785520,3.565220,-4.358307,3.389721,6.574817,-6.012936,-9.750602,0.758370,8.898547,9.170409,2.913349,0.184886,9.502039,-6.377730,7.562596,-4.753203,7.255415,-0.935576,4.437290,1.692519,-2.063730,-3.749634,7.004539,-8.103027,-2.633495,9.606522,-6.515765,2.666382,-3.016628,-7.523393,1.740817,-1.909571,-4.696249,-9.532865,1.246729,-2.350395,-1.205623,-5.501185,7.517766,-3.746435,3.072394,9.447606,-9.825231,7.126415,-8.228657,2.646135,-3.250627,-0.477086,-5.220823,-3.786028,4.701908,-5.734084,-0.140442,6.126094,3.233714,8.559321,9.155962,9.957608,5.148428,-8.308303,-9.694331,-4.958090,-1.520235,0.961433,4.809175,-0.550544,2.550003,-3.902433,9.956809,7.704436,-0.023164,3.177409,7.517223,5.378793,1.998621,-9.547671,6.567312,1.205134,-6.567805,0.687500,-2.133685,-1.981976,-4.260588,2.579006,-9.695790,-8.850827,5.148302,-0.478334,-2.137833,-3.656183,1.313423,8.688609,2.996069,-2.083736,-2.679485,5.659737,2.439287,-4.249367,8.077723,-4.159485,-4.074313,-1.469753,-3.890233,-3.390321,-0.167274,7.410272,9.316090,9.225539,4.720764,-7.629882,6.793639,-0.594792,0.738550,-6.500234,0.605236,-3.793913,0.153948,9.217790,1.535926,3.061075,-5.327257,-9.319669,8.495047,-7.211265,7.418346,-5.100035,1.316571,-2.350912,1.146399,5.556494,3.498426,-8.973058,-3.278660,-3.708623,5.014009,1.814405,-8.592459,-7.377820,7.860514,-2.543780,4.855628,7.830754,-8.434034,-3.153204,-9.168895,-0.062611,2.034742,2.435232,-7.051012,-3.809094,6.656492,-9.835251,7.517369,8.728475,1.879933,2.276670,2.921425,6.021681,-8.324803,5.829924,8.232557,-5.331250,4.751780,-7.977697,-1.793103,8.165320,2.173952,7.869635,-0.697983,8.260319,1.418356,5.889298,-6.097877,-5.700488,-7.929925,0.812330,6.637441,-2.964889,7.949944,-0.016014,7.543543,6.574113,5.452453,3.039832,-6.359140,-7.974997,-4.861103,-4.671512,-6.787776,2.779802,-1.992072,7.196961,3.115121,-0.183877,-2.747247,-9.504202,3.659959,-2.241201,-0.514304,-8.752153,1.355915,-4.220639,-7.339578,-4.762207,7.749279,9.570806,-0.427820,8.260178,9.686564,9.422928,6.675729,8.295840,0.024712,2.863977,-1.864050,-1.999936,-5.003880,7.958463,1.930139,-9.348908,5.926501,8.942873,-6.971955,9.101053,-4.983032,3.870827,-2.875938,-7.975262,3.430059,-7.894494,-6.793467,9.748645,3.233940,6.423855,-6.971901,-7.875586,-2.208202,4.212317,-0.130608,-1.308697,5.964224,-7.435834,-5.037719,-9.709464,1.015601,5.930761,4.630175,-5.679138,7.054685,-6.914698,0.702381,-7.575565,-3.917491,-8.878994,-1.506016,6.695575,0.167522,-9.705001,9.246301,2.424787,7.228536,-1.035456,4.088719,8.296809,-2.599646,-2.611381,-6.852992,1.944140,-6.797745,-5.692812,-8.306712,0.381196,5.739050,-2.616864,-5.877900,1.513311,-7.884333,-1.505398,7.863362,4.315276,7.273685,5.047981,-2.656432,-5.039177,5.345179,3.494723,1.096495,9.163451,-9.516033,6.822457,2.280085,-9.211934,-6.799248,2.254776,4.858111,5.102994,-3.780239,-7.073831,-2.460873,1.108016,3.696366,1.019904,4.219195,-8.461159,-1.026456,-1.513525,-8.288248,-6.193510,-4.705784,-7.220066,-4.870568,-4.372431,3.533180,7.739792,-9.787797,1.332266,5.516458,-1.700928,9.890640,8.505996,-7.355652,4.722437,-7.610473,2.195507,1.837972,-7.930970,3.616296,-9.647690,-1.408948,-4.821941,-1.658881,-7.296192,0.407895,8.719215,0.134695,-3.645732,-3.398224,1.372889,6.828553,4.956475,-0.086926,-8.960861,1.949524,-4.452282,-4.150249,-6.882745,-8.470141,0.895416,7.729955,-3.611123,1.360374,-4.486886,-3.787396,-0.884186,-4.946713,-8.651204,-6.360130,-1.786750,2.566379,7.548035,-3.427775,5.803643,-3.557125,-5.143080,8.004245,3.314301,8.558177,-2.438372,9.552220,-5.310039,4.428686,-2.701245,7.554823,0.027198,-4.542657,5.036886,-5.953492,0.498596,5.241944,-4.632049,9.943627,6.575869,5.776426,-6.851501,-3.640007,-9.284750,-7.744053,5.670743,9.761332,-0.315709,8.611312,-3.113754,-5.355225,9.840415,4.246641,-4.252040,9.982022,-9.666198,-5.323907,3.788238,1.259868,-1.795870,-2.522753,1.040360,-1.862236,3.187028,6.813448,3.955190,-9.743935,6.404847,-9.996836,-8.817595,8.632072,-0.441881,5.208425,4.840577,2.601618,-4.272783,2.040051,7.268863,-2.522439,-1.563742,4.537784,6.480473,-3.785783,7.812476,9.224983,-9.274575,-6.456945,-2.730605,-5.634225,-9.108608,5.111086,8.271568,1.507352,-9.493277,-7.396608,6.171157,-4.974364,7.996273,-9.675997,8.542006,-3.822854,-9.672083,-8.188072,-8.526677,-0.324946,-0.314526,-2.509462,0.520174,-9.020073,6.519288,-5.758135,-1.259102,7.507458,0.490974,9.213501,3.982883,-0.664837,-8.707038,-8.287989,6.014072,-4.409598,-4.909277,6.686978,-8.508776,6.437995,-7.820457,-6.544589,-4.211457,-7.006764,2.761440,-2.194597,1.337482,9.533506,0.158741,7.556749,-1.180023,-3.944255,-9.382162,-1.455169,-2.456689,-2.545864,8.497957,7.625608,-2.649975,1.913693,0.523277,5.368409,-3.611482,5.849275,-8.654723,-4.190647,-3.538968,-9.874758,6.028694,3.679488,-5.150215,-1.958848,-8.848305,-8.512037,-0.665450,6.504922,1.382906,-2.324015,0.132892,-5.255921,-5.571201,-6.401383,0.131514,4.424424,-6.002131,-5.553704,-0.626581,-8.309963,1.354988,-6.866150,4.198574,7.831414,-3.225568,-5.876761,1.689875,1.557392,-0.571478,-3.807795,-3.488430,-9.911049,-6.056933,-2.779423,1.557422,-4.223703,1.801533,-6.173230,-4.714165,9.345792,-6.368425,-2.261909,-8.419780,1.604631,4.472817,7.569062,-7.064126,-8.733006,-4.333970,7.405288,-0.462396,-4.234535,-3.572283,-7.103539,5.017122,5.417855,2.637842,2.224600,-9.556496,-6.163603,0.260176,9.322121,4.277573,-1.906367,-9.746320,-7.379194,3.790786,-6.882716,0.210418,-7.824463,9.947261,-0.898398,6.823766,-2.896421,0.583178,-5.553962,-4.730286,-7.712937,7.574901,-2.002123,-4.511250,-4.824971,4.019094,-2.290232,7.226018,3.355305,-1.433844,-4.406444,-3.292801,1.177101,6.962370,-5.799465,-0.121780,-5.377765,2.099070,6.886825,4.923638,-4.688994,0.858395,9.963899,4.093423,2.428625,9.102528,-1.469859,-4.659315,8.210121,7.118909,-0.036441,-7.701207,7.153482,1.980447,2.590338,3.254439,1.399668,-9.207019,0.765403,-9.825795,-2.800490,-5.530804,0.683803,-8.255182,4.544842,-3.308367,6.538693,-6.378057,-6.614286,-0.495235,-5.510801,6.272951,-9.120263,-2.332781,-8.933466,-5.580167,-6.217898,8.924126,7.422098,-2.518858,9.145282,-0.670655,2.534561,2.533311,-0.561679,-7.447944,5.644648,2.826836,4.599501,-1.893888,-4.744937,-6.198048,1.909897,-7.712237,-1.482557,7.858504,2.501101,-4.945356,-4.072137,-0.813152,3.385341,4.470483,8.424315,-4.625045,2.447833,-6.619433,2.574865,-0.549961,-7.062865,-6.353524,-0.828347,-5.359602,2.864258,-8.054940,-4.112668,8.853341,6.567297,5.953773,3.109497,-1.606861,-2.601313,-6.244912,2.959513,-3.763428,3.654915,-1.712282,2.189023,9.677838,-4.094811,-5.907295,-9.359261,-0.054844,9.598760,-3.651654,-9.410615,1.590908,0.743092,-7.855495,-4.327609,-6.682707,5.307746,0.401473,1.494483,-4.045688,0.651969,3.471958,-3.848588,9.416078,4.346463,-4.760722,-2.008738,-4.276275,5.461628,2.401212,6.217546,1.815947,-0.749396,8.445787,0.584970,9.385623,9.484456,-9.391242,9.050605,4.227551,-3.820371,-3.345368,3.715821,-9.654503,2.944607,-2.650760,-4.957839,-5.238739,5.925723,-6.392242,4.128337,3.491455,-2.744213,-3.205679,7.089763,-4.629743,7.765698,6.921423,9.841856,0.367772,4.849779,-0.768732,8.172974,-0.688311,-1.946226,1.633239,6.443840,-5.403009,-5.362103], dtype = "float32")#candidate|4437|(3136,)|const|float32
call_4435 = relay.TupleGetItem(func_2682_call(relay.reshape(var_4436.astype('int8'), [6, 13, 2]), relay.reshape(const_4437.astype('float32'), [3136,]), ), 4)
call_4438 = relay.TupleGetItem(func_2686_call(relay.reshape(var_4436.astype('int8'), [6, 13, 2]), relay.reshape(const_4437.astype('float32'), [3136,]), ), 4)
const_4440 = relay.const([[-1.601840,7.633526,3.080865,-8.244768,5.910510,-0.713445,-2.596729,-2.406218,-7.865304,-8.537177,0.721392,-0.043193,-8.997442,-1.625475,-6.681413,-3.678617,8.118032,-6.489827,-8.572192,7.375101,-3.364497,-7.425763,-5.152013,-8.795090,6.186496,-0.055285,-1.888695,-1.777382,7.292572,7.078567,6.653592,-2.506538,-8.966123,7.608894,4.889754,-8.949674,1.464172,-9.845937,0.292799,-6.977881,-5.035183,6.536390,-3.971108,2.057668,-6.953900,0.771111,-7.557455,7.845062,6.950416,5.414594,8.031728,-1.372977,-1.898237,-1.845154,3.637266,-1.682062,0.306200,1.363321,-7.561153,4.297737,2.303288,-5.172280,-3.023539,-1.780065,-4.050498,-0.790446,0.909718,-6.485089,-7.953632,-8.393102,-8.132577,2.555486,-5.136751,6.106082,8.066424,-5.732928,3.599775,2.398087,-8.918673,9.613554,1.097159,-4.166255,-9.961179,5.306071,6.347376,9.197753,-2.656540,-5.512131,0.139418,0.051227,-0.499331,9.949239,-8.462995,-7.904973,4.639979,-4.120293,3.317045,8.013643,4.940439,-9.833767,-9.853320,-5.366171,-3.732095,-3.985661,-9.957806,5.501867,9.875584,0.803125,6.733587,-7.331728,9.484783,6.618693,8.742235,8.746438,4.799619,2.611677,1.600224,0.513927,-6.014388,0.031291,8.549910,-9.052867,7.515307,7.181537,2.948052,1.857333,-8.234866,3.010021,-8.802407,-4.190013,6.770833,6.620061,-5.564748,-8.256025,-1.956306,5.343130,-1.851229,-6.226650,9.448717,-8.590811,6.851831,-6.434716,8.280060,3.188073,-5.718879,3.361827,-7.132562,-3.785213,0.276875,7.998147,-8.816318,-7.810746,-1.871930,-4.835322,-0.059664,-3.013940,9.960947,9.788447,9.678795,-0.348946,-4.508366,2.192422,-6.424124,7.802873,-4.735392,-5.610163,-8.233340,-2.582806,0.256465,-2.567890,2.264704,-4.464930,8.632212,6.240232,-6.934773,-6.802382,-6.175000,8.416779,8.737487,-1.637591],[-6.744504,-6.421688,1.414415,9.311665,-0.051015,-0.910761,6.471725,-0.860067,-7.263941,8.415151,1.741347,-8.456097,4.937802,-2.355401,-5.531465,-5.725771,1.959092,9.818516,0.743265,-7.017141,9.203039,-7.105172,8.588622,7.265112,-0.552484,-4.912799,3.251804,3.856991,6.739813,1.382303,9.338201,-8.183169,8.292328,5.079496,-5.271620,-0.665440,2.049199,-3.205225,6.531908,-8.518123,-3.473572,5.274493,6.071664,-6.300523,-0.406505,8.354923,-9.650311,2.437957,9.325045,-5.244366,-2.433805,6.666708,0.201988,-5.185551,-4.066369,0.523473,4.439505,-4.643280,8.668690,0.325584,-2.846829,1.928938,-3.966301,-4.026796,-2.374354,-8.886839,3.157022,-6.043935,5.231118,3.490548,0.900465,0.549473,4.937214,-6.463948,-2.425750,1.829850,-4.252599,2.363245,5.679535,-7.324193,0.955542,-6.170567,3.693063,1.193456,9.193531,-6.249925,6.952865,0.316638,9.477590,-3.095204,-5.818197,-9.025752,-2.962134,5.976585,-4.167631,0.131629,-0.721127,-4.578948,-3.016871,0.651088,8.196565,3.306592,3.077743,2.957450,-9.155969,-4.657286,4.948253,1.094886,6.849652,3.986976,-8.733405,5.333734,-8.384135,-1.053009,7.638002,-4.105494,9.331506,-2.174469,0.367742,4.335313,2.435521,-9.982773,5.333607,-3.792547,-2.822238,-2.235442,0.182640,-6.134525,6.881146,-2.108931,-9.855049,1.392757,-3.223766,-7.313334,-0.807986,9.024622,3.035667,-2.319050,8.310560,0.333676,1.378043,3.123433,8.426666,-0.446962,-1.524256,-3.459223,-5.993755,0.183577,4.093770,-7.097530,9.184973,6.660032,5.378014,8.028088,-4.605737,-2.263499,-5.838451,-6.878123,4.067554,1.808218,-7.302468,-0.257784,1.811779,8.182390,0.136798,-4.382436,-5.276003,-4.250599,-7.488163,-3.046428,-2.134761,-2.178795,-7.159291,1.897351,3.833043,-2.627599,-6.335288,-1.041481,-0.050615,-4.812203],[2.566069,-7.164334,-7.420588,8.682603,2.397582,0.657698,2.647545,-4.152510,8.553225,4.371165,-7.076174,-9.694169,6.358722,9.716209,-0.607506,4.985603,-4.355489,2.399165,-2.351634,9.564951,6.195622,-8.263606,-2.159715,-7.932245,-9.344189,1.068062,4.440104,8.437368,-2.694776,-1.498412,-1.099588,9.655087,-8.070286,1.308302,6.543661,-5.999375,7.846971,8.688861,1.125060,6.029902,-7.090357,8.563646,-9.909514,-9.483215,0.388617,-2.165177,-0.111837,-9.077467,-0.633306,-3.195308,1.069665,-9.744493,8.615890,-7.989428,-7.462440,-2.399752,-5.774879,-3.946501,-5.961036,-6.187534,-9.469273,4.211908,-6.484842,9.803227,2.964509,-2.877386,-6.902727,5.709575,6.198861,-3.500800,-0.717784,-4.177487,-6.715202,4.680033,2.187329,-2.492936,-2.350814,-2.288201,-3.067571,-8.655692,9.988448,-2.999377,1.662754,2.709811,4.325405,-3.106233,-7.223040,2.712046,-8.514696,1.778050,-5.662623,7.866743,2.715449,4.967750,5.469895,6.290617,-1.570029,-7.740326,-8.625302,-6.380284,3.405324,5.045441,0.914338,6.688166,4.357840,1.006273,-1.170348,1.021569,1.268133,0.989435,-8.866994,1.775639,-6.921027,-6.765556,-8.811652,3.937932,-8.874774,9.362148,0.035282,5.395877,-4.591105,-7.968885,5.316235,-6.278561,-9.349351,8.208721,6.691995,6.482267,-2.944853,-5.691609,8.440896,-3.611436,-8.447134,1.551100,-7.210977,-9.462913,-5.614684,-1.610118,-5.290175,-4.943588,-0.621277,2.406515,-2.018679,-5.745302,2.346664,5.005441,-8.475086,-8.158308,-1.236864,-0.187185,-6.755928,0.312789,0.062967,-3.973164,-2.694837,-1.976144,-7.166417,-9.427656,-7.306685,3.453642,9.597599,-4.397924,-0.817768,-0.819845,9.066441,-4.317640,-8.371468,-4.137970,4.864814,5.012122,3.993883,-6.037286,-1.673619,-1.474105,7.653791,-0.083968,7.284227,-2.227866,4.966179,-0.970748]], dtype = "float64")#candidate|4440|(3, 180)|const|float64
bop_4441 = relay.logical_or(var_4425.astype('bool'), relay.reshape(const_4440.astype('bool'), relay.shape_of(var_4425))) # shape=(3, 180)
func_3416_call = mod.get_global_var('func_3416')
func_3419_call = mutated_mod.get_global_var('func_3419')
var_4446 = relay.var("var_4446", dtype = "uint16", shape = ())#candidate|4446|()|var|uint16
call_4445 = func_3416_call(relay.reshape(var_4446.astype('uint16'), []))
call_4447 = func_3416_call(relay.reshape(var_4446.astype('uint16'), []))
func_4016_call = mod.get_global_var('func_4016')
func_4018_call = mutated_mod.get_global_var('func_4018')
call_4453 = relay.TupleGetItem(func_4016_call(), 0)
call_4454 = relay.TupleGetItem(func_4018_call(), 0)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_4458 = func_3257_call()
call_4459 = func_3257_call()
output = relay.Tuple([bop_4426,call_4435,var_4436,const_4437,bop_4441,call_4445,var_4446,call_4453,call_4458,])
output2 = relay.Tuple([bop_4429,call_4438,var_4436,const_4437,bop_4441,call_4447,var_4446,call_4454,call_4459,])
func_4463 = relay.Function([var_4425,var_4436,var_4446,], output)
mod['func_4463'] = func_4463
mod = relay.transform.InferType()(mod)
mutated_mod['func_4463'] = func_4463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4463_call = mutated_mod.get_global_var('func_4463')
var_4465 = relay.var("var_4465", dtype = "float64", shape = (3, 180))#candidate|4465|(3, 180)|var|float64
var_4466 = relay.var("var_4466", dtype = "int8", shape = (156,))#candidate|4466|(156,)|var|int8
var_4467 = relay.var("var_4467", dtype = "uint16", shape = ())#candidate|4467|()|var|uint16
call_4464 = func_4463_call(var_4465,var_4466,var_4467,)
output = call_4464
func_4468 = relay.Function([var_4465,var_4466,var_4467,], output)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mod.get_global_var('func_4398')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_4470 = relay.TupleGetItem(func_4398_call(), 4)
call_4471 = relay.TupleGetItem(func_4400_call(), 4)
output = call_4470
output2 = call_4471
func_4474 = relay.Function([], output)
mod['func_4474'] = func_4474
mod = relay.transform.InferType()(mod)
output = func_4474()
func_4475 = relay.Function([], output)
mutated_mod['func_4475'] = func_4475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_4491 = func_2822_call()
call_4492 = func_2822_call()
func_3286_call = mod.get_global_var('func_3286')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_4520 = func_3286_call()
call_4521 = func_3286_call()
output = relay.Tuple([call_4491,call_4520,])
output2 = relay.Tuple([call_4492,call_4521,])
func_4526 = relay.Function([], output)
mod['func_4526'] = func_4526
mod = relay.transform.InferType()(mod)
mutated_mod['func_4526'] = func_4526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4526_call = mutated_mod.get_global_var('func_4526')
call_4527 = func_4526_call()
output = call_4527
func_4528 = relay.Function([], output)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4533 = relay.var("var_4533", dtype = "float64", shape = (10, 5, 6))#candidate|4533|(10, 5, 6)|var|float64
var_4534 = relay.var("var_4534", dtype = "float64", shape = (10, 5, 6))#candidate|4534|(10, 5, 6)|var|float64
bop_4535 = relay.divide(var_4533.astype('float64'), relay.reshape(var_4534.astype('float64'), relay.shape_of(var_4533))) # shape=(10, 5, 6)
func_4398_call = mod.get_global_var('func_4398')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_4545 = relay.TupleGetItem(func_4398_call(), 1)
call_4546 = relay.TupleGetItem(func_4400_call(), 1)
uop_4547 = relay.cos(call_4545.astype('float64')) # shape=(1232,)
uop_4549 = relay.cos(call_4546.astype('float64')) # shape=(1232,)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_4552 = func_2281_call()
call_4553 = func_2281_call()
output = relay.Tuple([bop_4535,uop_4547,call_4552,])
output2 = relay.Tuple([bop_4535,uop_4549,call_4553,])
func_4562 = relay.Function([var_4533,var_4534,], output)
mod['func_4562'] = func_4562
mod = relay.transform.InferType()(mod)
mutated_mod['func_4562'] = func_4562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4562_call = mutated_mod.get_global_var('func_4562')
var_4564 = relay.var("var_4564", dtype = "float64", shape = (10, 5, 6))#candidate|4564|(10, 5, 6)|var|float64
var_4565 = relay.var("var_4565", dtype = "float64", shape = (10, 5, 6))#candidate|4565|(10, 5, 6)|var|float64
call_4563 = func_4562_call(var_4564,var_4565,)
output = call_4563
func_4566 = relay.Function([var_4564,var_4565,], output)
mutated_mod['func_4566'] = func_4566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3887_call = mod.get_global_var('func_3887')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_4704 = func_3887_call()
call_4705 = func_3887_call()
uop_4706 = relay.sqrt(call_4704.astype('float32')) # shape=(6, 13, 2)
uop_4708 = relay.sqrt(call_4705.astype('float32')) # shape=(6, 13, 2)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
var_4719 = relay.var("var_4719", dtype = "float32", shape = (196, 16))#candidate|4719|(196, 16)|var|float32
call_4718 = relay.TupleGetItem(func_2300_call(relay.reshape(var_4719.astype('float32'), [16, 14, 14])), 0)
call_4720 = relay.TupleGetItem(func_2302_call(relay.reshape(var_4719.astype('float32'), [16, 14, 14])), 0)
uop_4725 = relay.atanh(uop_4706.astype('float64')) # shape=(6, 13, 2)
uop_4727 = relay.atanh(uop_4708.astype('float64')) # shape=(6, 13, 2)
func_3481_call = mod.get_global_var('func_3481')
func_3482_call = mutated_mod.get_global_var('func_3482')
call_4738 = func_3481_call()
call_4739 = func_3481_call()
func_3363_call = mod.get_global_var('func_3363')
func_3366_call = mutated_mod.get_global_var('func_3366')
const_4746 = relay.const([-7,-10,7,-9,-9,3,-3,-7,5,8,-6,-5,4,1,6,-2,-2,-4,-6,-7,10,-8,-4,1,-10,7,6,5,1,-9,5,-10,6,7,6,6,3,1,10,-9,1,-8,-10,-8,-8,-6,10,1,1,-7,-1,-5,8,-4,-7,9,-8,6,2,7,-1,-5,10,-7,6,-9,9,-3,-9,-5,1,4,-5,-5,4,-6,-8,8,-7,-10,10,-9,-1,-4,-1,-7,-7,2,-3,6,1,-4,3,7,-6,-2,-6,5,-3,-8,-10,-7,-7,-6,5,8,5,7,4,7,-10,-8,8,-4,2,7,8,-8,2,5,-9,-5,7,-10,5,2,-4,4,6,7,1,-2,8,5,-6,-7,-5,9,4,2,-7,-9,-7,-7,10,-10,5,-1,4,3,6,6,4,-3,5,2,-2,-4,-3,-3,-2,5,7,-2,-3,10,7,-3,9,3,-3,-7,3,5,10,-10,-3,4,10,8,3,5,3,-2,3,-8,8,5,-7,-9,10,-1,-4,-10,3,10,-7,-7,-2,-5,-4,-3,-8,-8,-1,-4,-6,-4,2,-5,-4,-2,-9,-3,7,7,-1,-4,9,8,8,-10,6,5,10,4,6,-6,2,7,7,1,-4,-1,-8,4,-8,2,-8,2,8,1,2,2,-7,3,5,-4,-2,4,3,-8,2,-4,7,-8,4,3,-9,9,-4,-1,-10,-7,-9,2,7,-2,-8,-1,6,1,1,5,-9,-7,1,-1,5,3,7,8,5,-4,8,-7,-5,4,4,-7,6,-5,1,9,-2,-2,10,-4,7,6,-3,10,5,5,3,-2,5,-9,-1,-4,3,-5,-3,-7,-9,8,8,-2,-3,-4,-9,9,-4,-10,-7,10,-8,4,-4,-4,4,6,1,6,-5,10,7,-5,6,-5,-10,6,2,9,-8,10,4,-5,2,-7,-10,-10,-6,7,2,8,9,-10,-1,8,2,3,-1,-1,8,1,-6,-6,-10,6,-4,-6,6,5,-6,9,10,4,-8,6,4,5,-10,4,-5,4,3,-4,5,-6,-4,-9,-7,-6,9,-5,1,6,-3,5,-9,7,8,-2,-1,-4,-5,9,-5,1,9,10,7,5,-6,-8,-9,8,-8,-10,9,6,-6,-8,-2,-8,4,-2,4,1,-8,-5,-7,4,-3,6,8,-6,7,-5,2,9,-1,-6,-10,5,7,-7,-4,10,5,9,-8,-8,-8,3,6,3,4,-4,-8,2,-10,-2,10,-2,-9,-8,6,1,9,-2,-5,4,-8,-4,9,4,5,-8,7,9,10,3,1,10,8,-7,-10,-2,1,-5,-4,-2,4,-3,9,-6,-9,-7,-3,-10,-2,3,10,-2,-3,-3,-5,-7,6,-1,4,-6,-8,-3,3,-3,-2,8,-4,-5,7,-6,-3,-3,-5,-6,4,1,-8,-5,10,5,-6,6,-3,-9,-8,-5,1,2,4,4,9,-10,-8,7,4,-9,-6,10,-5,2,-7,-4,6,-4,-3,10,2,10,-6,-9,10,-1,-5,6,2,-3,6,7,3,-6,-8,8,-6,-9,5,5,7,2,6,2,-7,-7,10,8,-3,-10,1,-10,-8,1,8,9,-9,7,-10,-3,2,1,-4,-5,-1,10,5,-9,3,-6,-6,-6,7,-2,2,3,5,-8,-3,8,10,-6,-9,5,8,3,-6,1,-4,-10,10,2,7,4,5,-6,9,-7,10,8,-3,2,-2,5,-7,4,-8,3,-8,-7,-9,7,6,6,-8,-2,7,-2,-6,-7,-2,10,-9,7,-8,-10,9,6,-1,-9,-9,4,4,7,3,-3,-4,6,6,3,-10,-2,10,4,10,-2,4,-5,2,-8,-5,-3,-6,6,-4,7,-10,5,-6,-3,2,-5,1,-5,-3,9,8,1,-1,-7,6,9,2,5,-2,-4,4,-3,1,-8,-2,4,-9,7,2,2,-7,-3,6,-7,-8,7,10,7,-9,-8,1,3,7,-7,4,-8,-4,-10,-10,-3,7,10,-9,1,-1,-8,-10,-2,1,-9,-1,-7,-9,7,3,-8,9,8,-7,5,7,-2,-4,-8,-4,-3,-4,-1,-5,-2,10,9,-2,-7,-5,6,-6,10,3,-9,5,-3,10,1,4,-4,-5,-4,-9,5,3,-5,-10,-1,1,9,9,4,-7,5,-10,6,1,4,10,3,1,-2,-10,-5,2,8,5,1,9,-3,-4,-8,-10,-6,-2,-4,4,5,1,-9,-3,4,-1,9,-10,10,-3,10,1,-4,4,7,5,6,-3,9,-1,3,8,3,8,2,4,-5,-10,9,8,-6,9,1,6,-7,4,1,3,10,9,-5,3,-7,8,9,-3,8,-8,3,8,-2,-9,-4,9,6,-3,-3,10,1,8,-5,-6,1,10,7,4,-10,-4,-9,-6,5,7,-8,-9,-6,-1,-8,-2,1,4,1,9,3,8,8,-7,5,-10,1,-4,-6,8,3,2,-3,2,-4,-9,-6,-7,3,7,9,3,-7,-7,-5,7,-4,-2,3,2,6,-4,-10,-7,6,1,1,5,4,-3,8,4,8,10,-1,9,-6,10,-6,9,10,7,-5,-3,6,-5,-5,6,-7,5,1,-7,-10,2,-3,8,-8,-7,9,3,6,-10,9,6,-4,-5,-8,-9,9,-4,10,-8,-9,5,-6,3,-6,-5,-3,-2,2,10,-2,-6,-2,-5,-2,-3,9,9,6,-7,9,7,3,-6,7,-2,-7,-9,-1,-1,9,-4,-4,4,-6,-10,5,4,-7,2,8,-4,-6,-4,-9,-8,1,-7,-4,4,-5,5,-4,-9,-1,6,7,-6,2,8,7,10,-1,-4,7,6,-6,4,-2,-2,4,-4,-7,3,-2,-3,-10,-8,9,5,2,9,-2,8,4,9,-8,-10,-5,6,-6,8,-1,7,10,5,-5,2,7,-3,9,-10,7,2,3,-3,9,6,-10,2,-9,4,3,-3,-5,1,8,-3,-3,9,4,-6,-3,-5,-9,5,-3,-2,-4,-5,9,6,-1,-4,-3,10,-5,10,-3,1,1,-10,4,9,6,10,1,-5,-3,7,-4,-3,7,6,-10,10,4,6,-1,-7,-8,-2,-3,5,8,3,-1,10,4,8,5,-5,-7,7,5,-6,-9,6,-7,-9,3,8,8,1,-6,-6,-6,-9,4,-4,-8,-4,9,2,-10,-5,-10,-8,1,-2,10,-7,3,-3,2,5,-8,-8,10,-4,-10,7,2,-10,-7,-9,4,-5,-9,-3,-6,10,9,10,9,-4,-5,-1,-6,-9,5,2,-1,6,5,-3,-10,-4,5,10,10,-5,7,-1,6,6,7,3,-4,9,10,10,-7,9,-10,5,7,4,-3,6,6,-5,1,2,8,-7,-5,8,-3,1,-8,-3,6,8,6,-1,6,-5,3,-4,-1,9,10,-6,-4,8,5,8,1,-3,10,9,-1,4,-4,-4,9,-10,3,-4,5,1,-3,1,5,-9,7,4,2,1,6,10,-1,6,6,-10,-2,-1,10,-7,8,-3,-5,3,4,-5,1,8,6,5,4,5,6,10,-9,-4,-4,4,-3,9,2,6,9,-5,-7,-9,8,8,-1,4,5,9,-5,9,9,-3,-9,-4,4,5,2,4,-7,5,-1,10,-7,5,1,7,-1,-10,-1,1,4,7,-10,-5,3,7,-9,10,-7,7,9,7,-6,2,-3,-3,9,-2,-2,7,9,9,-2,-3,6,-6,-3,6,-2,-7,3,2,1,-4,1,8,7,7,10,6,-9,2,-7,-1,9,6,9,8,1,3,-3,-3,2,-10,1,8,-10,2,-9,6,3,1,-9,-4,-3,4,9,6,9,-4,4,10,10,-9,7,8,9,-1,-10,-9,-1,-9,-4,4,3,-6,9,10,10,-10,-7,6,-10,4,-2,-1,10,5,-6,-7,-6,5,9,-7,-7,5,-7,-1,7,-5,10,2,-7,-4,-6,4,-4,-7,6,-3,1,6,8,-5,5,-4,9,5,-4,8,1,-4,-1,-9,5,10,9,-5,5,2,1,5,3,-5,10,-7,-5,6,-1,5,-7,3,-2,3,-10,9,10,-9,-5,-9,8,-6,8,3,8,-7,-4,3,3,-5,-10,4,6,4,-10,8,3,-4,-9,2,4,4,-2,-6,-4,7,3,5,-7,-3,-4,-6,7,5,7,-1,9,-1,-4,-7,5,-2,7,10,-6,2,3,6,8,-4,-1,5,2,-10,-10,7,-2,4,6,-3,6,-4,-3,-9,-4,-5,-9,2,6,-10,-10,4,5,9,-1,-8,10,-7,4,6,-8,10,9,1,-5,-2,9,7,3,9,-2,4,-9,-7,-7,-1,-1,-6,-5,8,9,7,5,4,-1,5,-10,-5,9,3,2,3,-5,8,6,-1,5,3,-3,-1,9,-6,-2,-9,-3,-7,4,-10,10,8,3,3,9,-9,4,-7,-3,-4,-5,8,-3,5,-6,8,-3,4,-8,-6,-2,9,5,10,8,7,-7,1,9,-9,1,4,6,1,-4,4,4,-3,1,8,-7,5,9,6,-4,-4,-4,10,-6,-7,10,10,5,2,9,5,3,2,8,10,4,-6,4,-10,8,3,-9,3,-6,-1,-3,1,-8,9,-2,7,-7,-4,-8,-3,2,-6,9,-6,-4,-2,-5,4,7,-1,-6,-4,-1,4,-1,-8,3,5,-5,10,9,-6,-6,-2,-6,1,1,-7,-2,-4,7,7,7,-5,6,-10,7,1,-6,8,4,-8,-5,-7,-5,1,2,4,-3,-10,4,3,-5,7,-7,-7,-4,-8,-7,7,6,4,7,7,-8,-8,10,6,-4,-9,9,4,1,2,6,10,9,-2,-3,-8,-8,5,-6,3,5], dtype = "uint8")#candidate|4746|(1820,)|const|uint8
call_4745 = relay.TupleGetItem(func_3363_call(relay.reshape(uop_4706.astype('int8'), [6, 13, 2]), relay.reshape(const_4746.astype('uint8'), [1820,]), ), 1)
call_4747 = relay.TupleGetItem(func_3366_call(relay.reshape(uop_4706.astype('int8'), [6, 13, 2]), relay.reshape(const_4746.astype('uint8'), [1820,]), ), 1)
func_4562_call = mod.get_global_var('func_4562')
func_4566_call = mutated_mod.get_global_var('func_4566')
const_4749 = relay.const([[4.058451,9.524470,-8.801421,5.071669,5.054420,6.564578,1.770565,-9.115153,6.185447,-8.155043,3.026294,2.816771,-5.676635,-8.854686,1.468553,8.258163,5.275586,7.974521,4.827536,-0.948563,7.713603,-3.219035,-8.668426,5.973553,-1.623152,-0.629511,-2.703140,5.972423,-5.268493,1.294689,-3.184216,2.127100,-3.312390,-5.508788,0.305381,-0.501132,-4.735639,1.837354,5.770811,5.461240,6.654024,7.192546,7.829937,-0.093169,9.827532,2.041889,-0.473503,2.504364,-8.125015,-9.777623,6.968147,-1.358947,3.511496,-1.593848,-5.378339,1.119138,9.578710,-6.341297,2.533915,8.145358],[-7.750719,0.323903,6.932045,7.260998,-4.361179,9.151555,9.638993,1.038103,9.803523,4.224921,1.724409,8.580489,-0.067281,-7.092332,-4.698757,-8.906292,-7.111452,1.709862,-0.851581,8.371974,6.816321,-5.799902,-6.089649,1.821767,-4.438712,-4.240455,9.952057,-7.281849,2.943930,-5.088816,-7.801448,-2.197784,-3.099443,-7.721249,5.842686,2.914988,-3.455653,7.412175,4.384485,9.481187,3.418834,-9.086165,6.416371,-5.044911,6.294410,7.560709,9.107366,-7.499537,7.284000,1.697015,0.158777,0.804590,-0.275675,-1.140434,-6.482046,1.578899,2.457225,-1.655623,4.531226,0.229005],[1.842325,-7.391829,0.726120,-4.021016,-5.409779,8.162644,-7.152733,9.996132,4.194885,5.305230,0.361335,4.551914,-5.632447,-9.528862,7.178962,-1.123813,-1.350237,7.314166,9.836380,-0.695519,5.758642,7.093544,2.173471,1.481903,8.682389,-6.292891,9.037432,4.200316,2.735462,7.822516,-1.651808,-5.763855,3.526863,-5.222718,3.287659,-0.927987,-4.721698,2.455420,-3.632333,-6.687678,6.751936,7.463366,-7.391637,-3.370943,-2.838426,-2.358443,4.548979,6.226081,7.230925,2.570800,-8.475758,6.820149,-0.049142,-1.718994,5.958328,-8.980081,5.434768,-3.538492,-9.084870,-7.008680],[-7.176112,9.261641,3.274037,-9.972549,-5.442492,6.611787,5.930520,5.529995,6.136058,2.265314,-6.681846,4.094946,6.199122,-1.396584,-2.981350,-0.015828,0.088200,-7.218597,-7.448244,0.074054,5.296068,8.575561,-4.113331,-2.548105,7.478289,-0.325336,9.035929,7.593597,9.604299,-9.312814,-5.050635,0.438414,5.860685,-2.042292,-5.862039,-9.718331,6.371832,4.807278,9.958266,5.524942,6.504986,-6.612235,-6.126096,6.572723,5.502641,9.325737,-9.559115,-1.779735,3.086905,7.270340,-5.779766,7.698807,3.009144,7.169397,-4.674409,4.786804,7.223085,-5.826100,-7.437302,2.294602],[1.163129,1.769184,5.659526,2.705668,5.578227,1.322057,8.253087,8.496734,1.328732,8.729187,6.208276,9.460376,-2.409948,-8.329226,1.065866,4.827180,9.650518,-2.631299,-0.783149,9.575621,-1.238691,5.118331,4.305097,-5.980206,-0.087832,-3.678811,6.447233,-9.440568,8.121523,-8.312182,-9.379192,8.702732,-7.228290,4.670796,-6.688384,-9.499689,6.911327,-6.128810,-7.916123,2.552321,-6.993960,0.723652,4.442115,7.958874,-2.763367,9.029881,4.600095,-1.364440,-5.474148,-6.158124,-2.126264,5.111247,0.200903,-0.624282,-2.123662,-7.582518,0.171542,-3.590584,8.244759,4.716237]], dtype = "float64")#candidate|4749|(5, 60)|const|float64
call_4748 = relay.TupleGetItem(func_4562_call(relay.reshape(const_4749.astype('float64'), [10, 5, 6]), relay.reshape(const_4749.astype('float64'), [10, 5, 6]), ), 1)
call_4750 = relay.TupleGetItem(func_4566_call(relay.reshape(const_4749.astype('float64'), [10, 5, 6]), relay.reshape(const_4749.astype('float64'), [10, 5, 6]), ), 1)
output = relay.Tuple([call_4718,var_4719,uop_4725,call_4738,call_4745,const_4746,call_4748,const_4749,])
output2 = relay.Tuple([call_4720,var_4719,uop_4727,call_4739,call_4747,const_4746,call_4750,const_4749,])
func_4780 = relay.Function([var_4719,], output)
mod['func_4780'] = func_4780
mod = relay.transform.InferType()(mod)
mutated_mod['func_4780'] = func_4780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4781 = relay.var("var_4781", dtype = "float32", shape = (196, 16))#candidate|4781|(196, 16)|var|float32
func_4780_call = mutated_mod.get_global_var('func_4780')
call_4782 = func_4780_call(var_4781)
output = call_4782
func_4783 = relay.Function([var_4781], output)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_4850 = func_2281_call()
call_4851 = func_2281_call()
output = call_4850
output2 = call_4851
func_4852 = relay.Function([], output)
mod['func_4852'] = func_4852
mod = relay.transform.InferType()(mod)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4852_call = mutated_mod.get_global_var('func_4852')
call_4853 = func_4852_call()
output = call_4853
func_4854 = relay.Function([], output)
mutated_mod['func_4854'] = func_4854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_4885 = relay.TupleGetItem(func_3181_call(), 1)
call_4886 = relay.TupleGetItem(func_3182_call(), 1)
func_2682_call = mod.get_global_var('func_2682')
func_2686_call = mutated_mod.get_global_var('func_2686')
var_4901 = relay.var("var_4901", dtype = "float32", shape = (14, 224))#candidate|4901|(14, 224)|var|float32
call_4900 = relay.TupleGetItem(func_2682_call(relay.reshape(call_4885.astype('int8'), [6, 13, 2]), relay.reshape(var_4901.astype('float32'), [3136,]), ), 3)
call_4902 = relay.TupleGetItem(func_2686_call(relay.reshape(call_4885.astype('int8'), [6, 13, 2]), relay.reshape(var_4901.astype('float32'), [3136,]), ), 3)
output = relay.Tuple([call_4885,call_4900,var_4901,])
output2 = relay.Tuple([call_4886,call_4902,var_4901,])
func_4905 = relay.Function([var_4901,], output)
mod['func_4905'] = func_4905
mod = relay.transform.InferType()(mod)
var_4906 = relay.var("var_4906", dtype = "float32", shape = (14, 224))#candidate|4906|(14, 224)|var|float32
output = func_4905(var_4906)
func_4907 = relay.Function([var_4906], output)
mutated_mod['func_4907'] = func_4907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4940 = relay.var("var_4940", dtype = "int32", shape = ())#candidate|4940|()|var|int32
var_4941 = relay.var("var_4941", dtype = "int32", shape = (2, 11, 2))#candidate|4941|(2, 11, 2)|var|int32
bop_4942 = relay.bitwise_or(var_4940.astype('int32'), var_4941.astype('int32')) # shape=(2, 11, 2)
output = bop_4942
output2 = bop_4942
func_4947 = relay.Function([var_4940,var_4941,], output)
mod['func_4947'] = func_4947
mod = relay.transform.InferType()(mod)
var_4948 = relay.var("var_4948", dtype = "int32", shape = ())#candidate|4948|()|var|int32
var_4949 = relay.var("var_4949", dtype = "int32", shape = (2, 11, 2))#candidate|4949|(2, 11, 2)|var|int32
output = func_4947(var_4948,var_4949,)
func_4950 = relay.Function([var_4948,var_4949,], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3887_call = mod.get_global_var('func_3887')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_4954 = func_3887_call()
call_4955 = func_3887_call()
uop_4960 = relay.rsqrt(call_4954.astype('float32')) # shape=(6, 13, 2)
uop_4962 = relay.rsqrt(call_4955.astype('float32')) # shape=(6, 13, 2)
output = relay.Tuple([uop_4960,])
output2 = relay.Tuple([uop_4962,])
func_4972 = relay.Function([], output)
mod['func_4972'] = func_4972
mod = relay.transform.InferType()(mod)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mutated_mod.get_global_var('func_4972')
call_4973 = func_4972_call()
output = call_4973
func_4974 = relay.Function([], output)
mutated_mod['func_4974'] = func_4974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_5065 = func_3073_call()
call_5066 = func_3073_call()
output = call_5065
output2 = call_5066
func_5073 = relay.Function([], output)
mod['func_5073'] = func_5073
mod = relay.transform.InferType()(mod)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5073_call = mutated_mod.get_global_var('func_5073')
call_5074 = func_5073_call()
output = call_5074
func_5075 = relay.Function([], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5135 = relay.var("var_5135", dtype = "int8", shape = ())#candidate|5135|()|var|int8
var_5136 = relay.var("var_5136", dtype = "int8", shape = (11, 1, 9))#candidate|5136|(11, 1, 9)|var|int8
bop_5137 = relay.less(var_5135.astype('bool'), var_5136.astype('bool')) # shape=(11, 1, 9)
output = bop_5137
output2 = bop_5137
func_5154 = relay.Function([var_5135,var_5136,], output)
mod['func_5154'] = func_5154
mod = relay.transform.InferType()(mod)
var_5155 = relay.var("var_5155", dtype = "int8", shape = ())#candidate|5155|()|var|int8
var_5156 = relay.var("var_5156", dtype = "int8", shape = (11, 1, 9))#candidate|5156|(11, 1, 9)|var|int8
output = func_5154(var_5155,var_5156,)
func_5157 = relay.Function([var_5155,var_5156,], output)
mutated_mod['func_5157'] = func_5157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5225 = relay.var("var_5225", dtype = "int16", shape = (8, 8, 14))#candidate|5225|(8, 8, 14)|var|int16
var_5226 = relay.var("var_5226", dtype = "int16", shape = (8, 8, 14))#candidate|5226|(8, 8, 14)|var|int16
bop_5227 = relay.logical_xor(var_5225.astype('int16'), relay.reshape(var_5226.astype('int16'), relay.shape_of(var_5225))) # shape=(8, 8, 14)
output = relay.Tuple([bop_5227,])
output2 = relay.Tuple([bop_5227,])
func_5231 = relay.Function([var_5225,var_5226,], output)
mod['func_5231'] = func_5231
mod = relay.transform.InferType()(mod)
mutated_mod['func_5231'] = func_5231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5231_call = mutated_mod.get_global_var('func_5231')
var_5233 = relay.var("var_5233", dtype = "int16", shape = (8, 8, 14))#candidate|5233|(8, 8, 14)|var|int16
var_5234 = relay.var("var_5234", dtype = "int16", shape = (8, 8, 14))#candidate|5234|(8, 8, 14)|var|int16
call_5232 = func_5231_call(var_5233,var_5234,)
output = call_5232
func_5235 = relay.Function([var_5233,var_5234,], output)
mutated_mod['func_5235'] = func_5235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4852_call = mod.get_global_var('func_4852')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_5241 = func_4852_call()
call_5242 = func_4852_call()
var_5244 = relay.var("var_5244", dtype = "int8", shape = (6, 13, 2))#candidate|5244|(6, 13, 2)|var|int8
bop_5245 = relay.logical_xor(call_5241.astype('uint8'), relay.reshape(var_5244.astype('uint8'), relay.shape_of(call_5241))) # shape=(6, 13, 2)
bop_5248 = relay.logical_xor(call_5242.astype('uint8'), relay.reshape(var_5244.astype('uint8'), relay.shape_of(call_5242))) # shape=(6, 13, 2)
output = bop_5245
output2 = bop_5248
func_5249 = relay.Function([var_5244,], output)
mod['func_5249'] = func_5249
mod = relay.transform.InferType()(mod)
var_5250 = relay.var("var_5250", dtype = "int8", shape = (6, 13, 2))#candidate|5250|(6, 13, 2)|var|int8
output = func_5249(var_5250)
func_5251 = relay.Function([var_5250], output)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5258 = relay.var("var_5258", dtype = "bool", shape = (8, 11, 12))#candidate|5258|(8, 11, 12)|var|bool
var_5259 = relay.var("var_5259", dtype = "bool", shape = (8, 11, 12))#candidate|5259|(8, 11, 12)|var|bool
bop_5260 = relay.logical_and(var_5258.astype('bool'), relay.reshape(var_5259.astype('bool'), relay.shape_of(var_5258))) # shape=(8, 11, 12)
var_5278 = relay.var("var_5278", dtype = "bool", shape = (8, 11, 12))#candidate|5278|(8, 11, 12)|var|bool
bop_5279 = relay.greater_equal(bop_5260.astype('bool'), relay.reshape(var_5278.astype('bool'), relay.shape_of(bop_5260))) # shape=(8, 11, 12)
output = relay.Tuple([bop_5279,])
output2 = relay.Tuple([bop_5279,])
func_5316 = relay.Function([var_5258,var_5259,var_5278,], output)
mod['func_5316'] = func_5316
mod = relay.transform.InferType()(mod)
var_5317 = relay.var("var_5317", dtype = "bool", shape = (8, 11, 12))#candidate|5317|(8, 11, 12)|var|bool
var_5318 = relay.var("var_5318", dtype = "bool", shape = (8, 11, 12))#candidate|5318|(8, 11, 12)|var|bool
var_5319 = relay.var("var_5319", dtype = "bool", shape = (8, 11, 12))#candidate|5319|(8, 11, 12)|var|bool
output = func_5316(var_5317,var_5318,var_5319,)
func_5320 = relay.Function([var_5317,var_5318,var_5319,], output)
mutated_mod['func_5320'] = func_5320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_5358 = relay.TupleGetItem(func_4177_call(), 0)
call_5359 = relay.TupleGetItem(func_4179_call(), 0)
uop_5360 = relay.asin(call_5358.astype('float32')) # shape=(6, 13, 2)
uop_5362 = relay.asin(call_5359.astype('float32')) # shape=(6, 13, 2)
func_4905_call = mod.get_global_var('func_4905')
func_4907_call = mutated_mod.get_global_var('func_4907')
const_5370 = relay.const([[6.982388,0.617490,-6.053123,-9.739358,3.851715,-9.375647,2.435173,-7.541219],[3.895506,-2.269183,-4.228093,-2.995436,-7.505321,0.316713,1.199033,-0.781116],[-6.219748,-3.696123,-7.928374,-3.726843,2.490673,-6.867666,9.151845,-2.606417],[4.821419,-8.936604,-0.951756,-9.735523,-4.256041,-3.683829,-8.061132,5.500238],[-6.195066,6.139585,-1.966607,-3.747812,8.809480,-1.689433,-5.221847,1.139635],[1.586753,5.911161,-9.147490,3.534065,7.696922,0.355189,-9.070116,1.664942],[-3.654726,7.102935,-7.453094,-1.727650,6.871092,-4.575836,-2.034467,6.316438],[1.900356,4.666805,-4.508129,-1.004438,-0.763850,0.366432,-1.210810,1.706082],[8.641249,3.974141,4.988984,6.668522,4.125103,-9.614476,-9.391862,7.467077],[-8.463352,9.434277,9.920698,-5.860684,1.870231,3.957015,-0.749674,-4.925513],[8.886502,5.848134,-9.225456,5.320056,-3.993739,5.031962,6.599132,-8.371578],[4.696146,-6.220416,-6.926559,4.231018,-7.622482,3.829493,4.680916,1.553845],[-1.254732,8.606566,6.399756,-8.127250,-4.546412,-9.966443,-0.141389,0.614885],[3.008406,7.275109,4.490785,1.032879,4.813891,-2.107066,5.843447,6.556048],[5.662954,-4.046758,-6.303190,-0.622608,-7.562628,-8.345543,-1.658824,-6.949333],[-0.287808,2.137159,-3.879930,3.940277,2.106385,6.133937,2.073334,-7.925113],[3.547141,-2.554636,8.294851,0.270224,8.116256,4.277959,6.442101,6.883363],[8.037663,4.041993,-4.225347,3.008239,9.549223,-9.872694,8.277054,6.221222],[1.892592,-4.418931,-8.960690,-9.267003,-5.111461,5.845977,9.729151,6.141613],[6.514529,9.962380,7.309823,-1.509738,8.405467,-8.820232,4.647142,9.625098],[0.847380,-2.606343,7.114963,8.004435,-3.839334,-7.232288,-8.978788,-0.243129],[-1.491971,1.803132,-1.484763,-9.207763,-0.712354,-1.197554,-7.990385,-2.564933],[-9.347446,-2.652581,0.270509,0.099929,-8.368305,0.180805,8.518352,0.996955],[9.904013,3.652339,-4.001337,8.449876,-7.608540,-7.590469,-5.380775,-3.782926],[4.488444,-0.626129,9.027441,-2.456772,4.995714,-3.770100,8.278694,0.739361],[-9.082580,-5.982673,-5.534048,4.243995,-1.826226,-9.309646,-9.454640,0.025398],[0.837937,-8.211199,2.024202,-0.026220,-3.603402,6.312819,-3.512705,1.552893],[4.500130,5.986573,1.759293,7.564220,9.099639,-7.036002,-3.919039,6.414585],[-7.560668,-2.592808,9.807333,-7.600586,1.581781,8.522214,-4.323424,-6.944159],[1.021781,-8.376130,-9.699603,-4.104414,7.462622,4.372417,-0.314387,9.930422],[-1.999349,-6.493140,-8.514082,-4.864549,-5.570222,-9.248733,-1.190519,-2.329640],[-1.670791,-6.831040,-9.763415,-9.228186,-5.656870,-9.376370,9.371978,9.752754],[4.523667,5.796486,-8.097986,-2.049205,0.809173,-4.383943,7.100699,3.240335],[4.946800,6.670127,-5.763857,3.104097,0.955390,8.591157,6.160696,4.848189],[-3.067264,-2.159512,-0.530134,2.199444,8.349795,4.408013,3.460915,6.215811],[-0.352040,-5.895615,-7.701686,1.968054,3.168701,-4.653049,5.930226,-9.654398],[-4.989848,0.742328,8.830000,6.092087,-7.740598,8.008645,3.774973,-8.595492],[0.147453,0.417418,-9.350756,-4.355575,6.437245,-9.161310,-6.236967,5.015151],[2.251999,5.010591,4.574946,-5.427988,2.028915,8.801806,-7.873183,-1.132537],[0.151869,2.777556,6.868746,4.844443,5.243343,2.375108,-6.892499,-4.563512],[2.176443,-7.771536,-3.420202,-0.467105,2.355432,7.956116,9.234229,4.942333],[0.038791,-8.962906,-9.413469,8.302092,1.684890,7.746618,3.679351,-2.642922],[2.138352,-0.302489,8.703099,6.002307,-5.197139,-9.674864,3.231987,-6.206105],[-3.242180,5.713654,1.422454,-7.198077,9.598505,-8.731967,-7.176684,-2.079485],[-2.726841,4.104052,2.194014,-3.205694,7.550846,-8.230849,-6.470190,6.399938],[1.785331,-6.655640,-2.627085,-8.791468,-7.103715,-6.657076,7.421760,7.066168],[8.586184,8.468799,0.013392,2.473606,-3.663897,4.612974,-7.407193,6.288927],[5.822138,-3.487640,7.778211,-3.393289,-6.124917,-7.729259,8.155044,7.086644],[-0.596162,5.620565,-5.836946,7.274629,-1.655691,8.600161,5.721923,6.018273],[-2.212078,-3.523567,-7.911305,-9.015414,-1.803833,-2.827999,-4.706830,-8.214287],[-2.190738,-4.605187,-8.147860,4.833345,4.069063,-4.602368,6.188066,7.086482],[7.309388,3.662512,-8.837296,-7.196186,-2.847631,-5.793936,-8.151144,-6.721589],[3.047574,2.935904,-8.793857,-5.141384,-3.638125,-7.401940,-3.094195,7.688909],[-7.387320,2.229910,-2.583678,9.174938,-9.428045,9.246941,-1.687764,5.834279],[9.675203,-5.581104,1.152700,5.773738,8.668336,-9.565383,1.821664,3.617882],[-0.940977,4.564345,4.463084,-2.403666,-5.764785,-8.677404,6.294949,-2.815197],[8.218152,-5.078210,-1.674698,-6.139694,2.578652,8.981810,-3.128847,-5.006727],[-5.686788,-9.794413,-7.648059,5.687097,-6.860489,-7.721353,-5.551425,-0.319475],[9.207451,-0.739498,-4.755238,7.811979,6.629004,6.729335,1.739656,1.074618],[9.520322,9.234997,-8.636849,-5.055674,4.586198,-9.814161,-7.278848,2.807554],[0.921431,6.064424,-3.273836,7.513222,3.544558,8.332397,2.187979,-5.416903],[-7.712693,-6.377758,4.503041,-0.610550,1.494424,-4.813313,3.500014,4.867154],[0.945414,7.866674,5.854597,-3.040378,0.981604,-0.247171,-8.660850,1.819938],[-0.606278,3.635152,-1.993294,-6.443281,-3.855318,9.192338,-9.236872,-0.877939],[6.043449,9.146548,-4.482253,-1.682600,-4.382228,-6.398269,7.721278,6.485301],[-6.791754,4.342037,-1.746904,-7.209487,-6.790691,2.167363,8.387087,1.761365],[9.734231,4.702062,-8.881831,9.391304,-5.623350,4.331636,6.752276,-3.917411],[9.378022,-9.080421,0.400261,-0.129014,9.071139,2.873865,3.634935,4.519227],[5.193124,-8.423760,-7.729701,-7.298284,-6.696198,0.160766,5.346651,1.267490],[7.345808,-6.752046,-3.303596,5.216096,-2.568798,-2.903788,3.719245,-6.059526],[2.808242,-6.768126,-2.454588,-3.502619,-9.805676,-1.317489,4.078715,-4.331091],[-7.092186,-1.274821,1.444128,-8.566434,-5.675947,1.156967,-3.436644,-0.899098],[-5.066501,-9.029379,-5.728312,7.910041,-7.829075,-7.845811,7.038112,-1.199693],[1.843174,5.766686,-7.578361,6.396559,-1.330002,-0.860441,-9.157232,-4.332501],[3.951718,-7.726833,-6.910395,-5.463146,5.354415,-3.274204,8.054582,-5.960044],[2.856296,3.442463,3.464124,-7.466483,4.223230,4.830079,-8.746832,3.554534],[-6.270905,8.914933,5.317399,1.558078,-8.145842,-0.047055,-6.480428,-5.563453],[-8.658326,-3.079397,-6.316117,0.702986,5.300045,-3.038026,8.554299,-9.124460],[8.230866,-6.156693,4.400354,4.627829,5.489428,-7.658092,9.056644,-5.964377],[-5.587924,6.946608,6.991988,9.230376,7.822921,-5.932531,3.877068,-0.435602],[-6.256849,8.156110,-1.223835,8.453381,-1.718588,-6.845655,3.198182,3.308997],[6.530181,-5.188068,-9.653623,5.098456,3.191144,-3.145570,-2.014980,4.765849],[2.582438,7.818252,-7.569598,0.478605,-9.121008,-4.356987,-0.080812,5.764042],[-6.647989,4.516375,8.473931,1.427221,-0.618900,9.009890,-2.563255,-4.256275],[-6.460909,-8.404876,-8.340302,3.139930,4.851687,-1.897845,-1.656620,4.020940],[-3.096557,9.065627,8.498031,-9.808004,-5.654021,2.837547,9.884858,-7.873587],[4.010183,-8.947400,-6.386414,-3.579644,1.632580,-3.957851,-5.206390,-7.982412],[-6.065722,2.782674,-9.405620,2.887805,7.887800,-5.925752,-0.347107,-2.674865],[0.464468,-1.966528,8.128372,6.767786,2.941056,-6.260934,1.644267,-0.950185],[-1.375814,4.661058,-7.022467,2.637318,4.581647,-9.100278,-9.853133,5.501971],[7.816669,7.464745,-1.038745,7.623947,-0.504212,-5.006222,-5.265306,6.111931],[-5.333502,-7.260127,-1.964945,-2.788880,1.084706,1.049746,-0.013337,7.890583],[-7.753832,-4.272229,0.205090,7.095018,8.825913,0.002418,-0.478051,-4.935529],[0.390808,2.296323,-6.527562,-8.906544,-3.827212,6.003031,-8.523763,-6.159770],[0.456879,-6.067138,-3.337521,3.907470,3.326934,-6.193055,6.897236,-4.988211],[1.930297,-0.465345,5.900677,4.061650,6.323373,-1.540465,3.824520,-8.103257],[2.593687,9.755472,-8.977062,6.045229,1.887571,-7.316835,-4.037332,9.118493],[-8.461286,5.715472,-1.930143,-9.342541,2.614054,-1.779863,3.613026,-2.851426],[7.661185,1.343175,-4.552346,7.544195,-1.451134,-9.549969,-1.402999,-8.957459],[-5.566497,-5.127892,-3.690136,-9.232276,-2.505709,-4.411212,6.436309,-5.098503],[-2.592128,7.819037,6.137422,-4.408361,-1.953544,-5.589817,-2.009498,7.450229],[5.778705,-2.362763,-5.605023,6.820257,1.405507,0.882897,-6.750132,9.685824],[5.722897,7.658813,7.685265,-1.294442,8.953661,-0.960707,0.823199,-3.881975],[3.191274,-0.044475,3.978252,-4.501758,0.220837,6.945621,-8.050746,-6.909888],[8.005697,-7.152983,3.386901,-5.157878,0.803982,-4.235902,2.643123,1.696751],[6.617551,-2.712745,-3.967550,0.211938,-3.982747,6.816235,8.370974,-8.131229],[-6.703176,2.822987,6.080151,-6.282905,-1.355036,2.169089,4.501658,6.221756],[-8.959009,8.680180,-9.815893,-3.814801,5.901770,6.105344,5.437677,-9.212241],[-0.498076,0.015866,2.449118,1.236286,0.007639,7.229147,5.976122,3.639025],[4.828741,-5.670543,-0.865384,-9.175664,9.886824,-9.300560,-8.393191,-0.522859],[7.138792,-4.370133,7.628272,-3.717800,1.051248,2.528449,-7.096684,-0.281149],[9.633788,-1.390267,-0.762271,8.664899,-2.401140,-4.719479,-0.548197,-4.012695],[5.495075,0.991437,-4.145648,4.807515,8.109873,-7.229990,9.181370,6.030070],[-4.308400,-2.068897,7.379960,-6.983454,-1.401302,-2.099542,4.346972,-4.124834],[5.115263,7.967492,1.967945,3.171042,8.040156,1.761576,7.999201,5.645613],[-3.133058,-5.060964,2.253240,5.057962,4.996524,7.465936,-0.235162,8.910513],[8.293495,8.913282,1.644317,5.356458,3.698570,-7.923941,-3.365212,-5.115312],[7.335888,-5.747158,8.926578,-0.784904,8.342695,3.657679,5.260265,8.597646],[9.558798,-7.779978,-6.079164,4.936047,-0.291383,-2.881224,1.111479,5.066429],[6.016677,0.260223,5.161887,2.646796,8.415912,4.713802,-5.644419,1.073375],[0.359372,-0.846060,-2.380889,4.904749,0.052525,7.111095,-4.841893,-6.869069],[-1.679445,-6.855189,0.100019,-4.914901,-3.566659,-2.539054,-4.062826,-9.594449],[3.370859,8.124634,-8.701511,-3.481608,-2.997789,-4.429794,-9.126996,-7.479510],[1.994256,-0.681879,8.432383,0.725828,-2.111950,-4.271663,-7.250530,2.864251],[0.900101,9.288924,0.537973,-8.432002,6.047344,9.643858,6.127100,-9.631036],[-6.837975,2.794610,8.423814,-7.340353,-6.779115,-3.158703,3.907263,-3.897981],[6.904851,3.204535,1.855945,-6.849218,-3.914673,-0.912609,-1.053370,-6.476510],[-7.379204,-1.739650,1.066572,9.713347,7.368104,-3.667642,5.868349,5.800734],[-2.526303,-5.767215,-9.455319,-1.478699,-7.683916,-0.850426,5.174737,5.227689],[7.337775,0.299805,-3.392285,-2.537135,-2.699203,2.715088,-1.924114,-2.112976],[3.826829,-9.586247,-7.899291,-9.090893,-6.062077,2.663749,-4.252182,5.695498],[-3.913226,-0.694776,0.356595,-5.489017,6.048393,-6.480981,-0.348738,-3.950007],[7.172909,-8.750990,1.564234,-7.037655,9.073041,4.903068,-1.875548,4.223185],[7.145596,-6.950374,6.060002,-4.217646,-0.190358,-3.999663,-4.186676,-3.805957],[4.585751,1.171873,5.608192,-5.551206,1.044741,-3.189447,-5.425927,-5.048489],[1.906036,1.637043,6.719916,6.346324,-8.288093,-8.766231,-7.709447,-8.642101],[4.393559,-4.316523,3.846371,-8.635421,-5.045997,-8.255029,-8.430049,-2.155409],[1.212563,-2.628225,-7.794150,-3.099126,3.375731,2.203646,6.897857,-1.415341],[8.801683,-3.150067,7.744336,4.769939,9.961742,3.947997,-2.891490,-9.408763],[2.267528,-5.235131,-1.913005,-7.948608,5.274927,-7.580055,7.558067,-3.692602],[8.267716,8.517270,6.561871,2.631711,-3.771046,-1.391315,-2.973902,0.841486],[-2.959345,0.368799,-2.367578,-8.769841,5.099341,5.411776,7.764678,7.796159],[-3.707006,-8.725124,6.173569,-8.375726,-7.220868,-7.319453,6.499562,-4.579598],[2.732549,2.454310,2.219100,-6.607259,-7.113733,7.368667,0.275612,-3.198252],[0.074327,1.768475,-8.732546,-5.044249,-0.129898,-4.394743,-4.448581,3.978550],[-2.110234,-8.882652,4.588606,6.478475,-8.348888,8.739874,5.299447,4.013817],[-5.953490,-9.972068,-1.445359,7.006533,5.281449,2.183103,-8.558761,-9.897639],[0.028455,-0.001073,5.721555,-0.437611,-9.016053,2.026508,4.254819,-7.096824],[4.343316,9.947879,-9.903504,-9.073411,-0.808264,4.443056,7.670206,4.227815],[-7.024507,9.942414,1.328905,5.439100,2.476214,-7.690841,2.768556,9.288088],[6.415041,0.999594,5.265154,4.247412,4.384394,7.238687,-4.833412,2.543803],[-8.262402,-3.474261,-3.222932,-8.172053,-6.311744,-2.250043,7.444070,-2.562734],[-6.718952,-7.581064,-6.063211,0.603055,7.868254,-0.771357,-9.689198,-3.521275],[-7.079061,-5.181515,1.340388,-3.434136,1.470071,8.192880,-2.002839,9.822447],[0.405843,7.155027,-1.716052,1.836268,5.089121,6.952792,2.842188,-9.278945],[1.076112,-2.261502,2.081604,-4.353897,-8.532251,-8.747123,-6.479332,1.847182],[4.000287,9.092925,-0.229447,8.489037,-3.521035,8.611853,8.212970,7.937213],[-1.353162,6.221050,-3.533366,8.370317,7.200587,-9.593309,5.015646,-3.080858],[-3.782872,-2.428469,-8.974936,-7.936926,4.336889,5.720958,0.820777,0.838082],[-8.151877,-2.844303,-6.654593,9.059921,6.234440,0.252433,-6.614399,6.910976],[6.402801,3.715504,-0.322043,-8.421950,5.401297,-1.812922,-9.224689,-2.345787],[-8.800117,-3.263285,-5.594280,-4.981458,6.263580,2.202521,6.406569,-2.256407],[-0.796024,0.138837,9.272849,-7.135347,7.790214,4.508592,-4.025280,-0.643885],[-7.616536,-2.462261,9.089277,-6.992977,-4.987870,-0.201754,9.646553,4.836610],[-2.750953,-4.848903,-2.902509,-9.160752,8.820343,-8.380641,9.987218,-0.008309],[8.568192,2.008859,2.259412,5.917670,5.440217,-8.927308,-6.006588,-5.872186],[-0.342254,-6.986137,-5.039736,-4.049146,-6.346979,3.795646,1.716430,-3.860890],[-1.845194,0.324952,8.600672,-1.489683,-1.227045,1.803077,-6.509415,4.003314],[-6.142802,7.309803,-5.520600,-7.074272,-7.805563,2.904529,0.341442,-0.595836],[9.897870,-5.537581,-3.970568,1.961370,0.409271,8.512841,-8.177829,-2.169863],[-2.072261,8.844419,3.830189,-8.224734,-4.738481,7.858708,9.155880,7.854551],[-0.596654,2.301387,-0.224032,2.695215,-2.631929,4.189818,-1.167338,2.167572],[-0.600057,0.794949,1.207888,0.869478,7.326387,0.098143,0.224032,8.296522],[-6.130530,-8.612381,1.031154,-5.996475,1.679471,1.676807,7.356864,-9.774327],[1.276692,7.494827,4.059041,-7.024451,-8.069090,4.539620,1.684513,5.137635],[-6.378447,-4.224743,8.277888,9.166194,3.357974,-3.142106,2.945771,-2.516378],[2.618972,8.849486,-6.795829,8.281573,-2.142811,-6.995023,-5.593748,7.677415],[-0.206284,-5.938006,1.922273,-4.688526,-0.674922,6.751707,7.578805,3.321356],[-0.187881,-0.051170,-3.778210,4.295205,-9.177274,-8.292198,9.105792,2.711169],[-7.548401,6.145674,4.354606,-6.776526,8.673543,-9.068997,6.925879,5.079388],[-1.899853,-6.423590,9.688824,1.179573,-2.020759,-7.054355,-8.192462,3.163527],[-0.504078,-0.515229,-2.027510,4.554915,-5.233380,-0.228462,8.465503,6.216510],[7.325214,9.537155,1.094456,4.056563,-2.643602,3.479390,1.743750,6.850731],[-6.477841,-0.531365,-9.627538,-3.712231,1.072965,-2.022286,-2.926967,-6.072416],[-4.419376,-5.829689,1.499277,9.482399,-8.032423,-3.246591,2.305775,9.771212],[8.220843,-8.802599,5.134330,-0.664915,2.820762,-3.057812,3.424823,-6.763849],[-9.323138,7.306490,-5.776233,4.107352,-3.960920,-6.937561,-6.728095,8.153037],[5.679835,0.076947,-9.547472,8.536819,3.882517,4.289824,4.515173,-9.598773],[-7.808124,7.268465,-2.708463,2.075866,-5.573665,-9.988497,6.717099,-4.823172],[9.757002,-3.424530,5.319987,4.367825,1.906555,9.264656,-6.495898,-0.712140],[-6.833725,3.754619,-2.388354,6.831516,2.365149,8.226927,2.034677,0.697598],[-6.313526,-9.908982,-8.899045,-3.861707,-1.597955,-7.705786,3.277922,9.322892],[-9.694108,-6.727169,-6.997336,4.185210,2.314840,-7.572659,-3.043838,2.733200],[8.107520,-6.329053,3.138818,5.957790,2.215087,0.934185,-3.432343,-4.445435],[3.062159,-6.869320,-9.299788,8.248910,-0.212059,-2.103528,-0.331517,8.777148],[9.870597,2.454325,-6.437977,-8.493675,-6.272257,-4.396454,-1.783321,9.095386],[9.598294,6.997595,0.926617,2.483983,7.384395,-0.449472,4.189101,4.014596],[5.926364,-9.212283,-4.296945,3.510466,-3.376871,9.621585,-2.132131,-8.171602],[-6.668091,1.887995,8.818401,-1.162975,-0.536234,-3.601836,-4.013605,-9.920132],[-3.176145,-5.195858,0.255618,7.682333,3.017009,8.185628,0.146794,-9.817292],[3.604044,2.797281,-7.883301,3.962265,-9.306647,6.639972,-6.094400,-3.906763],[-1.847994,4.549049,7.941792,8.360819,9.643553,-0.339252,-3.473303,0.598593],[6.669634,-8.629357,-7.349195,-3.737477,5.612997,2.590814,-8.318183,-4.302147],[-1.953166,-3.159466,-4.918302,2.005285,-1.038945,-1.773098,-7.001529,3.104747],[-8.319566,5.137940,2.554076,7.578517,6.968181,-1.581803,8.495941,-1.026170],[-0.315606,8.281620,-7.067006,1.301459,-7.886212,-5.524896,3.636359,-9.792685],[6.281570,-1.982816,-3.186548,-7.578417,-4.100728,8.919904,0.366877,-6.176541],[-1.605605,9.168897,-9.801740,-3.705130,-4.288995,3.271675,-1.713319,-7.317413],[3.110157,-7.207952,-6.150016,-0.408308,-0.086670,-1.362097,3.624265,6.877062],[-5.800951,0.919024,3.266237,-4.241361,-0.432781,3.698365,6.766629,-2.283763],[-4.129550,-2.816216,1.756805,-9.337519,-3.540032,-8.445647,8.012705,-1.967494],[-7.692521,-7.563821,5.961394,9.115673,-4.991771,-0.437383,-7.527260,-4.225969],[7.023401,-7.860119,6.005712,-0.270019,0.552587,-8.102104,3.026750,8.290068],[-3.748089,8.262488,-8.182768,2.240388,-6.642447,-2.533167,-8.136862,5.659895],[-7.812046,9.869640,-9.383517,9.175078,-1.997294,-6.495818,-9.420762,7.106956],[8.390628,-7.978170,9.144722,-6.183426,4.263422,1.498683,-9.932497,-5.305376],[-6.772464,-1.423960,6.329369,-1.075607,9.716084,5.352817,-4.234084,-1.132935],[-4.724501,7.142046,-4.172839,6.096976,2.877490,-9.765819,5.730414,-4.411516],[-2.474927,5.078053,-9.303469,1.808312,-1.180162,-3.523521,5.824294,4.522473],[1.698641,4.186201,-9.607368,-2.894051,3.857015,3.301165,6.370456,-2.610721],[1.150955,8.760153,-9.960863,2.190976,-3.781520,3.309439,7.272721,0.662381],[-7.420359,-6.236803,8.255119,-8.258560,7.040960,6.024545,8.635607,-7.053093],[2.375434,-5.711330,-7.342900,5.921846,0.431191,-5.005687,1.602023,-3.236229],[2.688562,-1.600352,9.047329,5.007350,5.945727,5.303163,5.565071,3.528079],[6.837950,-0.358058,2.365995,-8.924483,-9.576213,4.331265,-8.517954,0.976004],[9.736173,-5.348277,-8.406801,0.730636,3.805834,-5.031540,4.149057,8.107315],[-5.117748,-1.438229,1.120948,-9.094553,-1.219427,7.189828,5.486421,-0.192441],[6.563518,7.097566,-5.645650,4.208971,5.218680,-7.898848,8.411545,-5.439839],[6.221483,8.927370,5.594036,8.942448,-1.367735,0.476894,4.923297,-1.075098],[-6.746318,2.437285,-3.201206,-0.142966,-0.904292,-7.888401,1.205634,1.013361],[-3.634865,0.325911,1.535151,3.802458,-2.449254,4.129264,-1.465099,-3.732825],[-7.943154,8.326098,-1.828414,-1.397786,5.838474,-7.000461,6.211635,3.398946],[-1.011758,-6.625415,9.446495,8.012135,-7.696131,-3.873289,-8.073887,2.732208],[-6.934395,-6.674453,4.040082,8.368887,5.601174,6.061936,-4.731412,-1.347492],[7.443795,-5.053344,-5.959829,-0.255039,-4.148717,9.464610,1.439032,4.625781],[-6.001126,-5.446566,7.450691,-6.637191,8.898283,9.995822,-7.511912,2.496794],[-4.420721,4.038271,9.472543,9.450067,-5.572608,6.575226,-4.276282,5.599468],[-2.876165,-9.385691,2.160780,-2.252047,-2.574203,-5.803325,-2.895638,-4.870268],[2.159430,5.703183,-7.104690,2.022070,-8.749508,-1.434736,0.033132,4.034043],[-4.172264,6.575234,-6.265056,-2.436764,-0.853679,0.409774,-6.848288,5.373347],[1.044768,9.407874,-9.855186,-2.219134,6.876310,3.377893,-7.795056,-7.593974],[-7.088657,5.953406,0.819115,0.552040,-0.989579,-9.141940,-5.603791,8.610363],[3.311067,4.400184,2.713051,-7.140904,8.855221,1.839148,-7.652800,-2.886782],[-5.640498,0.059103,1.248186,5.201496,2.828780,8.969029,8.013408,-3.850658],[6.704028,-3.254335,9.237594,7.958124,-1.464153,6.140106,-4.020515,6.896986],[7.627789,-6.491187,5.189723,-4.104398,-2.749149,0.281659,-5.967279,-5.002886],[1.676431,-9.027057,5.031448,3.525367,2.306694,-5.755515,-1.336556,-8.335188],[-4.096464,3.618736,-7.207805,-2.985025,0.500941,-2.956269,0.809593,2.497600],[-1.557492,-6.709902,2.321510,0.735354,-7.367855,-6.951059,-1.383696,-0.697441],[9.308072,-6.594433,3.725323,-3.023916,-5.561042,6.101284,8.833576,6.075971],[-0.926542,4.852554,5.035389,-1.145384,-7.044250,1.120002,8.375127,4.420933],[8.264849,-4.363268,0.521301,3.340429,-3.606680,6.779692,7.498145,0.464279],[-9.331561,8.784476,9.071896,8.392096,-5.589814,-9.687209,-9.937614,-7.628463],[-6.731431,4.729306,-7.388160,9.646233,1.113053,-8.903059,0.379416,-3.920047],[4.593725,-4.754748,-2.400408,-0.668612,-1.652481,-8.312429,2.893636,-4.393399],[-0.954998,7.783435,-6.515627,3.200021,8.536243,-5.431304,6.508817,1.757468],[-9.899916,8.549237,1.044784,8.201790,9.035402,8.320692,-3.636117,-3.724778],[5.004450,0.180786,-5.712699,0.404566,2.043042,9.564796,-2.512187,2.872776],[-6.758650,7.559020,-5.310863,7.233763,5.506759,-8.498594,-3.422341,-0.338408],[-2.764466,8.503570,-7.970971,9.843414,-8.169380,-4.705599,8.153057,9.571740],[-0.502429,6.454428,1.057351,-9.638004,6.176204,-8.516830,1.762573,9.487202],[0.443026,7.927638,6.743120,8.248468,5.849100,3.532833,9.653257,-5.815672],[3.582930,-6.500248,-7.023948,4.030524,-7.098396,2.895693,-6.807722,5.259462],[2.221949,6.368042,5.311515,-0.131688,-7.552553,3.876216,-1.055527,-4.492022],[-2.170833,-2.555551,4.940008,-1.945081,6.512558,-5.886326,5.428076,8.047138],[-4.169494,6.161448,9.894907,-3.978712,2.601387,6.494138,1.313419,-0.495024],[9.966736,-4.586384,-3.582329,-4.301935,-3.752201,-5.141130,-1.400574,-1.570560],[-0.529639,3.405813,6.115635,-9.883690,3.953213,-0.571460,5.645167,-2.522053],[3.753868,3.808328,-0.270004,5.473834,-9.519205,-8.216419,-2.076221,4.697108],[-5.671544,-2.953195,-8.985437,2.344537,5.083016,-0.067774,-4.886635,1.092027],[1.392788,3.914392,-4.108196,-8.041475,-7.468330,7.162867,5.833071,-3.649816],[0.169454,6.507626,7.051457,-1.053643,-0.745150,5.657653,0.467479,-1.929331],[3.036090,-1.071630,7.565190,2.832594,6.099024,-9.011344,9.659289,9.437846],[4.225616,5.644508,3.898943,5.444802,-9.079894,-9.835172,0.694167,0.635268],[-6.414425,-5.311535,-5.453175,-4.373657,6.127400,3.487353,7.770379,2.337952],[1.325626,4.302853,-7.416977,5.181276,9.969024,3.878180,-6.365043,9.308300],[-6.529176,-7.027979,8.773091,2.211930,0.742197,-2.671060,5.880006,-9.226267],[-0.327831,5.801958,-5.381932,1.724944,-8.343779,0.436703,9.400152,3.954771],[-8.154556,8.935707,-2.296358,-7.949049,7.774309,-7.629898,2.532495,6.819362],[-3.731325,-4.142387,0.471377,-6.969445,-9.628858,1.205698,3.100552,-7.869664],[-9.836070,1.711510,-1.749908,5.885870,-4.913394,-5.339790,-9.602251,0.748101],[-5.504613,2.895239,-2.515128,4.585623,4.112867,-7.424872,2.542084,7.857295],[-1.156683,3.040518,-0.815154,-2.556529,-1.237957,-3.976399,2.667609,-2.193345],[-1.386087,1.485763,4.310824,6.467780,8.217481,6.885788,-7.181011,4.835254],[-7.013158,6.845494,5.058042,5.172922,-6.990467,-2.117466,-8.926248,8.572243],[-4.259344,6.707124,7.866743,3.618838,-6.074241,-7.998875,7.890904,-2.789910],[-0.399218,-2.010133,9.019363,6.344876,-7.652507,9.681709,-0.190872,0.736166],[-4.046886,4.753000,5.953108,-7.629486,5.991538,6.385295,-5.159837,-4.429589],[2.664911,-1.753232,7.567322,3.385523,1.805315,-1.189119,1.544311,3.090265],[-6.246962,-7.681242,9.172480,8.777638,3.750332,6.740219,-5.281211,-1.352864],[-2.061752,3.916137,-4.705577,5.242464,9.303656,-6.142924,4.356905,-1.354543],[-5.234978,-3.632352,-2.941557,-3.423306,-5.894377,2.348244,-7.611294,-5.722665],[0.182608,-2.205560,-9.247781,0.952259,2.288144,6.639269,1.392217,-5.134178],[-9.198285,6.931713,-7.180825,-6.550010,0.136936,-5.851258,9.525955,3.131735],[-7.554679,-5.843830,9.142272,-9.410373,4.532585,-6.052729,-7.889541,-2.100488],[2.101767,0.098741,-2.608265,-8.841925,3.941183,3.887994,1.732947,3.421027],[-2.633524,5.003602,-7.524121,-1.444792,0.941374,-6.487974,8.304152,-3.919619],[3.383410,-5.717655,7.434234,3.209777,1.547916,5.752086,0.476316,-9.858731],[-4.748426,-4.560850,-3.558433,6.723814,8.689040,8.134112,-4.616006,9.119323],[1.274964,6.439012,-1.094143,5.078672,2.636384,-8.214205,-5.998918,-1.865965],[-7.483252,6.770539,4.880511,-9.359219,-1.818628,7.024001,1.229614,-9.457876],[2.293776,7.522845,0.026330,1.801015,7.195639,1.238441,7.665333,9.468776],[-6.466126,-0.914690,3.047203,-6.554663,-0.818193,-9.535748,-2.912726,-5.186168],[0.722517,6.523244,-4.569316,5.402514,2.099579,8.440893,2.162582,-3.041515],[8.016833,8.678730,-2.066111,9.242983,-8.780152,-3.827297,-3.066959,-3.584626],[8.829928,-1.433153,-6.299582,4.767955,9.141295,-7.373441,7.230107,-6.782923],[5.810919,8.597035,-7.830209,-5.992824,9.917313,2.686495,5.147215,8.103536],[-8.331813,9.605058,5.881618,-7.621361,1.864795,4.453912,2.292436,-1.059059],[-0.757890,-7.090629,-8.543188,6.619439,-7.267905,2.049813,-1.919818,-3.199722],[6.839606,3.522653,-8.159456,2.878936,9.552605,3.104162,-8.802236,7.477238],[1.018665,5.799474,8.641135,8.789885,-3.812972,0.073876,8.006005,3.101371],[5.818933,-8.034228,-5.797522,-9.016224,-0.804441,-4.663789,4.949391,4.345837],[-6.613471,-0.154439,2.961987,3.001810,-1.145146,-0.542460,-4.602151,-4.270155],[4.376639,2.861092,-1.959741,4.239111,0.072454,-0.467252,1.761255,-3.225578],[-1.377629,1.429131,-5.960737,7.596512,-4.646943,8.063714,4.282439,-1.800054],[-4.522744,-2.839145,3.614294,4.761852,-4.043010,1.918885,-9.213639,3.466622],[-5.203621,-7.882047,9.923112,-9.104006,-6.546034,-5.409184,9.611999,-6.934156],[-0.099367,2.633558,-3.837736,6.339813,-5.525921,-5.444374,-8.571412,8.001910],[2.271670,4.265972,-3.508423,-6.658466,2.373525,-0.407397,0.483283,-2.940542],[-8.698808,-7.202990,5.228715,6.720730,-5.742300,-4.652082,2.893598,-5.261666],[5.382447,4.694717,7.914180,-3.617898,-3.648127,1.067323,8.411287,1.876591],[0.807047,-9.598054,7.093956,-3.728536,-5.835490,-9.850605,0.796162,-0.850622],[8.069565,-4.965230,9.810941,1.349088,9.117563,4.780076,3.860449,-4.000044],[-7.870788,4.748416,-4.284250,-5.691965,-6.365919,-2.072344,0.038912,-6.793202],[-8.091651,9.593749,-8.810001,0.021427,5.775644,-4.742312,-9.973044,-1.890878],[-1.625547,-8.253233,9.954901,6.792907,-6.955696,2.608805,-2.697979,-8.806529],[-9.412587,-8.600667,-8.604111,5.210183,-5.090217,-7.243532,-2.085548,-1.248922],[-6.066430,-2.974473,0.204808,4.016118,7.478837,6.643419,9.844093,5.129531],[0.531620,-0.871560,6.929592,6.373426,4.556510,-1.137629,-4.203888,-5.859033],[-6.086236,2.662451,-0.091735,8.857597,2.606694,9.564860,-3.683700,4.137795],[-7.418584,6.702381,0.163996,-0.561171,7.415917,-4.212143,4.518930,-8.653774],[0.930484,7.441353,9.440221,-3.271742,4.201593,4.221689,-1.961281,2.090811],[-3.190751,-7.974821,8.441606,-5.759017,-4.368307,9.854927,-1.648124,1.790500],[5.577256,6.693455,0.630916,4.581522,-2.333922,-6.867209,4.513394,6.672266],[-0.485399,7.747132,-3.095790,-5.002676,0.279023,-0.865364,-8.983358,7.095954],[-6.167414,-0.122105,-4.194147,-7.285448,-4.590609,6.789480,-5.032041,4.087278],[3.174538,0.275839,-1.667935,-0.291802,9.765756,4.706239,-3.148422,7.945111],[-3.152023,-9.858843,8.405679,1.002953,8.491977,-1.125765,9.885341,-8.280554],[-4.190064,8.667301,-0.121783,-9.765960,-0.984239,0.222006,2.925576,-4.658165],[-4.077408,-7.733707,9.699198,2.547551,5.730088,1.902315,9.516312,0.885647],[0.166436,-2.359231,-2.291342,6.674622,4.245193,3.187672,5.225892,-9.855726],[-5.586387,6.249804,-1.191151,-3.657565,-6.142760,-2.380545,2.253991,-9.603150],[-0.394759,-3.346590,8.241860,-6.257189,-6.585033,2.267150,1.674854,3.828686],[5.033258,3.564939,3.663797,2.632689,0.439982,9.737626,9.367444,5.657972],[8.775585,-8.433045,5.130365,9.199718,-9.765763,8.194153,-0.005794,6.364934],[-2.749277,8.795834,-7.684669,0.171297,-6.472305,-7.540237,-9.681992,-2.222112],[-1.220324,7.110327,0.910702,7.719529,4.865160,2.797397,-3.320245,9.938830],[3.057078,-6.373650,1.808787,-8.829463,1.998244,2.136596,-8.743384,6.789073],[-2.684962,6.833841,0.746640,5.128729,4.988587,-7.384710,2.669648,-5.149322],[-1.424899,-6.135134,1.430097,5.939309,-9.083027,-8.690988,-2.032264,7.692373],[-4.856613,-5.779347,1.897248,7.538494,-9.656565,-8.854616,2.203870,4.076891],[-0.288286,-9.144964,-0.263668,-6.441343,-5.318292,4.150028,-0.655960,-7.816655],[9.182219,-1.618673,-0.365940,-4.500122,3.737009,0.867874,7.235798,-2.421515],[-3.483169,4.162821,-7.953461,7.370721,8.952302,-7.056564,6.089444,-3.620115],[9.822106,-6.865362,-7.360500,0.786845,2.985467,4.522168,7.318700,-2.307063],[-6.849913,-6.547313,5.894399,2.882970,-7.145310,-8.392925,-2.817395,9.861816],[6.784042,-3.042496,-0.002000,3.221796,-4.442075,-4.638609,-7.787359,5.010004],[5.285856,-3.572767,-2.178442,8.785848,2.166715,-2.336339,-4.432987,6.094002],[2.080278,-5.550053,0.933140,-2.335885,-5.640939,2.480523,3.442445,7.479498],[-9.223786,-3.041983,1.307779,-3.705222,6.688287,4.564292,-0.373081,-7.376408],[-2.960274,6.890073,-8.108052,5.293165,-2.847315,-4.900315,9.942540,-1.840576],[8.236781,-6.073611,-5.960698,0.836953,-5.532393,-6.102226,2.421959,-4.347963],[1.548740,-1.442611,9.920449,-2.287859,-4.515998,-6.631797,-1.832759,-0.895525],[7.697353,-1.304198,3.105881,6.467091,-5.515011,-8.887033,-1.858021,7.367931],[-6.294137,-8.556606,3.036754,9.089299,0.814959,-8.598153,6.514989,5.314207],[1.962791,-4.207637,4.117149,-6.497487,2.920987,6.056534,-9.160796,2.087753],[-8.481007,-5.748990,-8.528251,-1.480174,6.814815,2.913240,2.490495,8.395832],[9.538080,5.409765,-8.709328,-7.223655,-0.094173,7.675049,8.918327,0.173288],[-6.407649,1.237097,1.398071,-5.489512,-9.336566,0.531649,-8.876426,8.133554],[6.270543,-7.212781,-1.011960,1.205041,4.445287,4.975291,-2.713713,-7.988712],[9.504140,5.179589,6.233640,6.937114,-9.383443,3.991640,-9.013913,-5.062383],[3.710236,9.468328,2.318592,-6.757952,5.742233,5.929544,-4.012615,7.603643],[-9.876434,0.155265,-4.067139,7.949385,0.308773,-4.889150,0.910337,6.159231],[4.599886,3.541636,-6.467896,9.347926,3.575450,1.814941,5.647486,0.296925],[4.691925,0.609125,-1.078234,-7.859719,-2.510226,8.778193,8.398125,-0.240557],[3.242885,-7.202320,-4.158439,2.072194,-9.061480,7.997005,4.545969,1.305346],[1.748535,5.265745,-7.836748,-8.396372,-7.573811,-3.169229,-9.136169,-2.519616],[-8.290424,0.863896,6.646385,0.278217,4.801233,3.375259,7.092782,-0.379181],[5.072135,-9.922938,9.105933,-6.882042,-8.538552,-9.562404,-5.510651,-3.265545],[8.403502,3.217026,5.540313,-9.607672,4.366491,3.666013,6.584439,-6.056273],[0.530348,-9.168545,9.912563,-1.802107,9.693305,-0.659856,-8.286784,7.680717],[2.809549,-8.082599,1.780383,2.878848,-4.502564,1.568877,-6.083015,-3.205249],[4.540803,4.938446,-7.828582,-8.332721,-6.372489,0.490400,-6.203755,-1.325324],[0.709538,-8.837282,5.425271,8.270562,-1.590170,0.503126,-8.795842,5.498640],[-7.120752,-6.812970,-0.963899,6.680347,-0.671580,3.243824,1.354147,-8.437954],[-8.061596,1.574437,-6.918951,4.234613,2.325830,-9.369404,8.731325,2.715986],[-6.401543,-5.234350,6.589726,7.170916,-1.823878,-0.205743,-1.322634,-8.150243],[9.748474,-1.723392,-8.850698,-0.413396,7.114021,-4.126156,-2.564219,-0.789787],[9.901573,-7.369342,-1.135473,-8.694049,-9.174053,-4.131705,7.061959,-8.304796],[-9.212116,0.999647,-5.824884,8.314163,-3.099632,-9.004303,1.032553,8.110645],[0.649398,2.590521,7.839359,-9.962292,-5.604404,-7.184507,0.437085,-5.220914],[0.142539,7.531133,-3.965042,1.334456,-9.459661,1.980649,1.667418,-2.539346]], dtype = "float32")#candidate|5370|(392, 8)|const|float32
call_5369 = relay.TupleGetItem(func_4905_call(relay.reshape(const_5370.astype('float32'), [14, 224])), 2)
call_5371 = relay.TupleGetItem(func_4907_call(relay.reshape(const_5370.astype('float32'), [14, 224])), 2)
bop_5385 = relay.floor_mod(uop_5360.astype('float64'), relay.reshape(call_5358.astype('float64'), relay.shape_of(uop_5360))) # shape=(6, 13, 2)
bop_5388 = relay.floor_mod(uop_5362.astype('float64'), relay.reshape(call_5359.astype('float64'), relay.shape_of(uop_5362))) # shape=(6, 13, 2)
output = relay.Tuple([call_5369,const_5370,bop_5385,])
output2 = relay.Tuple([call_5371,const_5370,bop_5388,])
func_5393 = relay.Function([], output)
mod['func_5393'] = func_5393
mod = relay.transform.InferType()(mod)
output = func_5393()
func_5394 = relay.Function([], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_5425 = relay.TupleGetItem(func_3446_call(), 1)
call_5426 = relay.TupleGetItem(func_3448_call(), 1)
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_5435 = relay.TupleGetItem(func_3637_call(), 0)
call_5436 = relay.TupleGetItem(func_3638_call(), 0)
output = relay.Tuple([call_5425,call_5435,])
output2 = relay.Tuple([call_5426,call_5436,])
func_5437 = relay.Function([], output)
mod['func_5437'] = func_5437
mod = relay.transform.InferType()(mod)
mutated_mod['func_5437'] = func_5437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5437_call = mutated_mod.get_global_var('func_5437')
call_5438 = func_5437_call()
output = call_5438
func_5439 = relay.Function([], output)
mutated_mod['func_5439'] = func_5439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_5447 = func_2822_call()
call_5448 = func_2822_call()
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_5454 = relay.var("var_5454", dtype = "uint8", shape = ())#candidate|5454|()|var|uint8
const_5455 = relay.const([-5,3,-4,-7,-4,-6,9,-2,1,3,-9,9,-6,-6,-3,-4,-4,10,-9,-2,-4,-9,-4,-3,1,8,10,-1,-10,1,-2,6,3,5,-5,-7,3,-3,-9,9,2,-9,-5,-7,9,-10,4,-8,-2,-10,-8,-5,3,8,-4,-9,4,-7,8,4,5,-10,-8,7,-9,-8,-4,-10,2,-8,-2,-3,6,-5,-7,4,3,-10,-2,2,3,-2,2,3,-7,10,-9,8,-6,-2,4,-2,1,7,-6,7,-8,6,1,3,10,9,-10,-5,-2,7,2,-10,-1,6,-7,-9,-4,-4,-4,-2,4,-2,-8,9,3,-3,-7,-9,1,8,-10,10,1,10,-3,-8,4,1,8,-2,-8,-7,8,-3,-3,7,-7,-9,5,4,2,4,3,-7,-7,-3,2,2,-7,-2,-8,-6,-8,-3,-4,2,10,-1,-3,-5,5,-7,-9,-10,-4,9,-1,-6,1,3,-8,-1,-1,1,-1,4,6,5,-10,6,-5,-3,1,7,-1,-7,-3,7,-1,10,7,-7,7,10,7,1,-2,-10,6,-5,6,-5,-10,-7,-3,4,2,4,-5,7,2,-6,4,9,1,-6,6,10,-6,-9,-3,-10,8,4,-10,-7,-1,-9,7,5,-2,9,-6,3,5,10,9,-4,-4,10,9,8,-8,-5,5,-7,4,-2,-4,-2,-1,10,2,6,-2,10,4,3,5,1,9,6,3,-4,4,-9,-8,-6,-2,-8,9,-8,-6,-6,-9,10,2,-1,-3,-3,1,-4,10,-1,2,-9,-7,-3,9,5,-6,-8,-2,-3,-2,-4,8,-3,-9,3,4,-4,2,-6,-9,-1,-8,3,-7,-7,-3,-3,-10,-1,9,-4,-9,-5,-8,-2,-6,1,-3,5,1,1,2,8,8,-5,-5,-3,-5,-3,-1,-9,-1,10,5,4,-7,9,-8,-3,6,5,-5,6,-7,5,8,-3,-6,-3,-8,6,-3,-5,2,9,-6,-1,-3,4,-10,7,7,-6,-5,-4,9,10,-5,-5,3,-8,8,-3,-8,10,8,-5,9,5,-2,9,-9,3,4,-2,2,9,9,3,-8,7,-2,8,4,7,4,-7,-5,-6,8,9,8,-10,-9,-6,5,1,-8,9,4,-9,-2,-1,5,-7,5,-3,-3,2,7,8,-3,-1,10,2,6,2,8,-4,-1,7,6,-9,-4,-10,8,5,7,-2,-8,10,-8,3,-8,-8,-9,-2,-5,-5,-1,4,-2,-3,-6,5,3,-9,10,6,8,-4,1,1,9,8,10,-3,2,-1,-1,2,4,7,-1,1,-9,8,2,-9,-7,5,9,-10,-2,-9,9,-10,-3,4,-10,-5,1,10,-3,6,-7,7,-9,-7,10,-5,-7,10,2,6,-1,10,4,-5,10,-7,2,-5,3,-3,7,-9,-3,-6,5,6,5,-7,-7,-8,-6,5,10,-9,1,-5,-10,-7,-3,9,-7,1,-2,-2,3,-7,4,-6,-2,-9,-9,-3,7,3,3,6,-8,1,-7,8,-3,-6,-6,3,-7,3,7,4,-8,-3,-10,2,-10,-7,-7,7,-7,9,7,-3,6,-2,-4,6,5,2,8,5,-8,-5,7,-5,6,10,-7,10,9,-4,-10,2,10,3,7,-8,-10,9,6,2,7,-5,-4,-8,9,-3,-2,4,-8,-2,5,-1,-2,2,4,9,-5,8,3,2,7,9,-10,-1,-10,-5,-4,9,9,-3,-5,-6,1,2,9,-6,-7,6,-9,-6,-2,5,-9,2,-6,-3,-1,1,-5,6,7,2,6,-1,-7,-4,-10,-6,3,-9,5,10,-10,-6,6,-1,-1,-6,1,1,-8,6,6,-9,10,-8,9,-10,10,6,-7,8,-1,8,4,1,-6,10,-1,-3,-6,-5,-8,5,-3,4,1,-2,8,6,9,6,4,-9,6,5,4,8,-7,2,6,-1,-9,1,1,1,-3,-7,-2,2,-10,-9,-1,6,2,9,5,-6,3,2,-3,5,-10,4,1,-10,-5,7,6,3,1,-5,-1,1,-8,-9,-7,-8,-9,9,-8,-2,5,-6,-3,10,-10,10,-8,5,-5,-9,-9,7,7,7,-4,6,-8,-2,-3,5,-9,-5,8,-3,4,-5,-6,8,-10,-9,-4,6,9,-3,2,6,-4,8,-2,-5,2,-7,4,-4,-10,9,-9,-8,-2,-1,-10,6,9,-8,-5,-5,-4,-7,-10,1,3,-6,4,1,8,2,8,-5,-2,-7,-5,3,-7,-6,-1,-6,8,5,9,-9,7,-6,1,-3,2,1,-4,-9,-5,7,3,-10,-7,-4,-10,-3,6,3,1,-2,6,4,-8,-1,7,8,-1,-2,3,5,1,-2,9,8,-1,-5,-6,9,2,-8,7,-1,-6,9,1,7,-3,-2,-6,2,-1,-8,-6,2,6,8,-9,4,-4,-9,6,-10,4,-3,10,-2,4,1,-5,-9,4,6,6,1,2,4,5,-9,6,1,-7,9,3,3,-3,-10,-8,2,-6,-4,4,-8,-2,10,-1,5,6,-1,-4,-6,5,-7,2,-6,4,-7,-8,9,-4,-9,2,2,8,4,6,-2,-7,5,-10,-8,-9,-5,1,-8,-3,-9,10,2,5,-3,-7,3,6,3,-6,-10,-7,-1,-1,3,-5,10,4,-5,-9,9,5,-1,-7,-7,-7,-10,-4,-3,2,-10,10,4,1,2,-10,-7,4,-6,-4,6,9,-8,-8,9,-8,-7,-8,-2,-2,10,-7,7,-9,-2,7,6,5,1,4,-3,9,-9,-3,-6,7,-7,5,6,8,-6,-10,-10,-6,-8,1,1,1,6,2,9,10,-4,1,-10,1,-5,-10,-6,8,-7,3,-8,9,-10,-6,2,4,-10,7,-7,5,9,-9,-2,-9,7,-8,-10,-8,9,7,1,-7,-10,10,3,1,3,-9,6,-5,-3,9,1,2,-3,-3,-2,-7,5,2,-5,1,3,-2,-9,-4,-9,6,2,1,-6,-2,-5,3,-4,-7,7,6,2,-1,-4,-5,-9,4,8,-7,-10,-3,5,2,-10,-10,-10,9,6,-5,4,-3,1,-4,-5,-1,9,-7,-1,-8,1,-10,-6,-5,8,3,7,6,-5,7,3,-2,-2,-9,-1,4,6,-5,2,7,9,1,-5,-6,-7,-10,-8,3,5,-5,-2,8,-4,2,-2,-3,10,9,-10,8,5,-10,-2,5,6,4,10,5,9,-7,8,-4,-5,-6,5,4,1,2,-6,3,-10,1,-10,-3,6,10,3,4,6,-3,-1,-10,1,-8,-1,-1,7,-1,8,6,8,-2,1,-9,6,-7,-10,-1,-8,-10,-7,10,-2,-1,-8,8,6,-9,6,3,1,-8,6,2,6,3,-2,9,5,-8,-8,1,6,8,-7,1,2,8,7,-4,-1,-8,1,7,-7,10,-1,7,2,-7,-10,-6,-8,-2,4,9,2,-8,-3,8,-2,-3,-1,10,8,10,-8,10,-3,-10,-6,-4,-6,-1,9,-7,8,-4,2,10,-3,-8,9,6,10,-10,-7,-7,7,10,-7,-7,-8,-4,4,2,4,-6,-2,8,-10,-10,-3,8,7,5,6,7,-2,-8,-4,-2,4,5,4,-8,2,-1,-7,6,-8,7,3,-2,4,-1,-2,-9,5,-10,7,-1,-10,-3,-1,2,-10,-5,-3,-9,-7,-7,5,5,10,-9,5,-6,-2,3,-10,5,2,-4,-9,1,-3,-4,6,10,-5,5,-9,-7,3,-6,-3,-2,3,9,1,5,-2,-4,-10,-4,-1,7,1,-1,-3,7,8,-2,-5,2,-5,-10,7,5,8,2,-10,9,2,6,-7,-5,2,7,-10,-3,-5,2,-9,-7,6,-6,8,-8,5,10,-4,-8,-2,-4,-1,7,-4,-8,-6,9,4,-8,1,5,-7,10,7,10,3,2,-4,2,8,2,4,-5,9,1,9,-7,-10,-2,5,8,9,-3,-7,-1,-4,-10,-4,-7,8,4,3,-8,8,-9,3,4,7,2,-4,-10,8,9,5,-7,-3,4,10,-8,-1,5,4,3,7,-7,10,9,7,4,-3,7,-9,9,-1,2,-6,4,-4,-3,-4,-2,-8,-6,1,7,8,8,-2,-1,-6,7,-9,1,-9,6,5,-10,1,5,4,3,-5,1,10,2,-6,7,9,-9,-2,-4,5,7,-9,-7,6,7,3,-1,-2,8,-4,-3,4], dtype = "uint8")#candidate|5455|(1568,)|const|uint8
call_5453 = relay.TupleGetItem(func_1461_call(relay.reshape(var_5454.astype('uint8'), []), relay.reshape(const_5455.astype('uint8'), [14, 14, 8]), ), 0)
call_5456 = relay.TupleGetItem(func_1464_call(relay.reshape(var_5454.astype('uint8'), []), relay.reshape(const_5455.astype('uint8'), [14, 14, 8]), ), 0)
output = relay.Tuple([call_5447,call_5453,var_5454,const_5455,])
output2 = relay.Tuple([call_5448,call_5456,var_5454,const_5455,])
func_5457 = relay.Function([var_5454,], output)
mod['func_5457'] = func_5457
mod = relay.transform.InferType()(mod)
var_5458 = relay.var("var_5458", dtype = "uint8", shape = ())#candidate|5458|()|var|uint8
output = func_5457(var_5458)
func_5459 = relay.Function([var_5458], output)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_5508 = func_3257_call()
call_5509 = func_3257_call()
output = call_5508
output2 = call_5509
func_5514 = relay.Function([], output)
mod['func_5514'] = func_5514
mod = relay.transform.InferType()(mod)
output = func_5514()
func_5515 = relay.Function([], output)
mutated_mod['func_5515'] = func_5515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5616 = relay.TupleGetItem(func_3819_call(), 1)
call_5617 = relay.TupleGetItem(func_3821_call(), 1)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_5627 = relay.TupleGetItem(func_4038_call(), 0)
call_5628 = relay.TupleGetItem(func_4039_call(), 0)
func_2682_call = mod.get_global_var('func_2682')
func_2686_call = mutated_mod.get_global_var('func_2686')
var_5638 = relay.var("var_5638", dtype = "float32", shape = (3136,))#candidate|5638|(3136,)|var|float32
call_5637 = relay.TupleGetItem(func_2682_call(relay.reshape(call_5616.astype('int8'), [6, 13, 2]), relay.reshape(var_5638.astype('float32'), [3136,]), ), 2)
call_5639 = relay.TupleGetItem(func_2686_call(relay.reshape(call_5616.astype('int8'), [6, 13, 2]), relay.reshape(var_5638.astype('float32'), [3136,]), ), 2)
var_5646 = relay.var("var_5646", dtype = "bool", shape = (6, 13, 2))#candidate|5646|(6, 13, 2)|var|bool
bop_5647 = relay.greater_equal(call_5637.astype('bool'), relay.reshape(var_5646.astype('bool'), relay.shape_of(call_5637))) # shape=(6, 13, 2)
bop_5650 = relay.greater_equal(call_5639.astype('bool'), relay.reshape(var_5646.astype('bool'), relay.shape_of(call_5639))) # shape=(6, 13, 2)
output = relay.Tuple([call_5616,call_5627,var_5638,bop_5647,])
output2 = relay.Tuple([call_5617,call_5628,var_5638,bop_5650,])
func_5651 = relay.Function([var_5638,var_5646,], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
var_5652 = relay.var("var_5652", dtype = "float32", shape = (3136,))#candidate|5652|(3136,)|var|float32
var_5653 = relay.var("var_5653", dtype = "bool", shape = (6, 13, 2))#candidate|5653|(6, 13, 2)|var|bool
output = func_5651(var_5652,var_5653,)
func_5654 = relay.Function([var_5652,var_5653,], output)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3481_call = mod.get_global_var('func_3481')
func_3482_call = mutated_mod.get_global_var('func_3482')
call_5661 = func_3481_call()
call_5662 = func_3481_call()
output = call_5661
output2 = call_5662
func_5682 = relay.Function([], output)
mod['func_5682'] = func_5682
mod = relay.transform.InferType()(mod)
output = func_5682()
func_5683 = relay.Function([], output)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_5728 = relay.TupleGetItem(func_3637_call(), 0)
call_5729 = relay.TupleGetItem(func_3638_call(), 0)
uop_5734 = relay.cos(call_5728.astype('float64')) # shape=(6, 13, 2)
uop_5736 = relay.cos(call_5729.astype('float64')) # shape=(6, 13, 2)
func_4780_call = mod.get_global_var('func_4780')
func_4783_call = mutated_mod.get_global_var('func_4783')
var_5738 = relay.var("var_5738", dtype = "float32", shape = (3136,))#candidate|5738|(3136,)|var|float32
call_5737 = relay.TupleGetItem(func_4780_call(relay.reshape(var_5738.astype('float32'), [196, 16])), 1)
call_5739 = relay.TupleGetItem(func_4783_call(relay.reshape(var_5738.astype('float32'), [196, 16])), 1)
func_2901_call = mod.get_global_var('func_2901')
func_2903_call = mutated_mod.get_global_var('func_2903')
call_5742 = func_2901_call(relay.reshape(uop_5734.astype('int8'), [6, 13, 2]))
call_5743 = func_2901_call(relay.reshape(uop_5734.astype('int8'), [6, 13, 2]))
func_1800_call = mod.get_global_var('func_1800')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_5760 = relay.var("var_5760", dtype = "uint8", shape = (1820,))#candidate|5760|(1820,)|var|uint8
call_5759 = relay.TupleGetItem(func_1800_call(relay.reshape(var_5760.astype('uint8'), [10, 13, 14]), relay.reshape(var_5760.astype('uint8'), [10, 13, 14]), ), 2)
call_5761 = relay.TupleGetItem(func_1803_call(relay.reshape(var_5760.astype('uint8'), [10, 13, 14]), relay.reshape(var_5760.astype('uint8'), [10, 13, 14]), ), 2)
func_4780_call = mod.get_global_var('func_4780')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_5764 = relay.TupleGetItem(func_4780_call(relay.reshape(call_5737.astype('float32'), [196, 16])), 1)
call_5765 = relay.TupleGetItem(func_4783_call(relay.reshape(call_5737.astype('float32'), [196, 16])), 1)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_5769 = relay.TupleGetItem(func_2815_call(), 1)
call_5770 = relay.TupleGetItem(func_2817_call(), 1)
uop_5773 = relay.tan(call_5759.astype('float32')) # shape=(10, 13, 14)
uop_5775 = relay.tan(call_5761.astype('float32')) # shape=(10, 13, 14)
func_3416_call = mod.get_global_var('func_3416')
func_3419_call = mutated_mod.get_global_var('func_3419')
var_5777 = relay.var("var_5777", dtype = "uint16", shape = ())#candidate|5777|()|var|uint16
call_5776 = func_3416_call(relay.reshape(var_5777.astype('uint16'), []))
call_5778 = func_3416_call(relay.reshape(var_5777.astype('uint16'), []))
output = relay.Tuple([uop_5734,call_5737,var_5738,call_5742,var_5760,call_5764,call_5769,uop_5773,call_5776,var_5777,])
output2 = relay.Tuple([uop_5736,call_5739,var_5738,call_5743,var_5760,call_5765,call_5770,uop_5775,call_5778,var_5777,])
func_5784 = relay.Function([var_5738,var_5760,var_5777,], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
var_5785 = relay.var("var_5785", dtype = "float32", shape = (3136,))#candidate|5785|(3136,)|var|float32
var_5786 = relay.var("var_5786", dtype = "uint8", shape = (1820,))#candidate|5786|(1820,)|var|uint8
var_5787 = relay.var("var_5787", dtype = "uint16", shape = ())#candidate|5787|()|var|uint16
output = func_5784(var_5785,var_5786,var_5787,)
func_5788 = relay.Function([var_5785,var_5786,var_5787,], output)
mutated_mod['func_5788'] = func_5788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5682_call = mod.get_global_var('func_5682')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_5801 = func_5682_call()
call_5802 = func_5682_call()
output = relay.Tuple([call_5801,])
output2 = relay.Tuple([call_5802,])
func_5807 = relay.Function([], output)
mod['func_5807'] = func_5807
mod = relay.transform.InferType()(mod)
output = func_5807()
func_5808 = relay.Function([], output)
mutated_mod['func_5808'] = func_5808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2282_call = mutated_mod.get_global_var('func_2282')
call_5845 = func_2281_call()
call_5846 = func_2281_call()
func_5249_call = mod.get_global_var('func_5249')
func_5251_call = mutated_mod.get_global_var('func_5251')
call_5849 = func_5249_call(relay.reshape(call_5845.astype('int8'), [6, 13, 2]))
call_5850 = func_5249_call(relay.reshape(call_5845.astype('int8'), [6, 13, 2]))
func_3206_call = mod.get_global_var('func_3206')
func_3209_call = mutated_mod.get_global_var('func_3209')
const_5860 = relay.const([5,-9,-7,-5,-2,4,-2,4,-1,6,-2,-9,-6,6,-4,-7,10,-10,-4,2,1,-3,1,8,10,-3,-1,-3,-7,-3,5,8,8,4,6,-10,-4,-9,2,-8,3,7,6,-3,9,3,-5,-3,10,7,-5,-10,3,5,9,2,-7,-8,-8,-5,6,-5,9,-4,-5,-5,-1,1,-8,-1,-2,-1,-1,1,1,-10,-3,7,-1,1,5,8,2,-2,-8,7,8,-8,-10,-10,-4,-7,-3,9,7,-2,7,-8,1,-9,-3,-6,6,-9,4,7,-10,-7,1,9,-9,10,-2,4,10,-10,-10,5,-2,-4,4,6,-8,-6,-10,-6,-7,4,-7,-1,-2,10,-1,1,9,-2,5,-6,-3,-1,-9,-2,5,6,-6,9,-9,-1,-3,-4,8,-7,5,5,8,-1,-4,5,-10,-1,7,-4,8,7,-10,6,-8,-10,-6,9,4,3,4,7,-7,10,-10,-10,-4,2,7,-1,-2,-8,-9,-2,-8,10,3,5,8,5,4,8,2,1,1,4,6,-10,8,9,-9,5,-8,5,10,6,5,3,8,-5,-7,-10,1,-9,6,-5,4,-10,-2,10,2,7,2,5,3,8,-10,-4,-10,10,-8,-10,6,-7,-4,-2,5,-6,-9,-6,10,4,-2,-1,-9,10,-5,-10,-2,-9,5,3,-3,6,9,-4,-8,6,-5,6,-9,1,-7,-5,9,-3,7,6,-6,-2,6,1,4,-8,8,5,10,-1,9,6,-4,-4,-7,-3,-3,-8,-10,-7,-10,-5,10,-4,-6,-7,-3,-2,-4,-7,9,5,-4,-2,-4,9,5,2,4,6,-1,4,6,10,-6,-2,-5,-6,-2,3,9,-1,10,2,9,3,-8,3,-6,-5,-10,-5,6,5,-2,-5,2,9,-7,-5,6,-6,8,-8,2,7,10,8,5,-3,2,2,-4,-6,-10,7,3,-10,-5,-5,4,1,-4,-2,-10,8,5,-6,8,9,-6,-6,10,-10,-8,3,7,-8,1,-1,-8,-3,-8,-1,-4,6,5,-9,-10,1,3,10,6,-2,9,-9,2,-10,-2,9,-9,6,-7,-10,-3,2,7,-6,1,1,1,7,-4,6,-7,-4,9,2,-6,-2,-7,4,8,6,-10,-9,9,-6,4,10,4,10,5,-9,6,9,10,7,7,-7,-2,-10,2,-3,8,8,7,-7,-9,5,-2,1,8,-9,-3,4,1,-4,1,-1,-1,5,6,2,2,3,2,3,-3,-6,9,10,3,-4,1,5,4,-4,2,8,-5,-8,-6,-8,-5,5,-4,3,9,4,-3,-6,1,-9,-5,-8,7,-7,7,2,-10,6,-2,-3,-6,-2,10,-6,-7,-3,-2,-3,5,4,5,-5,-2,9,8,4,-3,-3,-6,1,7,-8,-2,-10,2,2,9,-2,-6,7,-5,10,-9,8,-5,1,-2,1,-9,-3,-4,-10,-2,-5,3,6,3,7,-10,-9,5,-7,8,-3,6,10,10,-6,-2,3,-3,5,-5,-9,-9,-10,-8,-1,4,3,-9,1,-5,-4,-7,2,5,9,-10,-5,-7,-3,-3,-1,-8,6,-9,9,-5,1,-9,4,-10,4,-1,1,5,3,10,-4,8,8,-8,-3,9,4,7,-1,-3,7,5,2,-5,9,-8,-6,4,8,-2,-6,-5,10,-10,-8,-8,-7,-6,5,3,-7,-7,-7,-8,5,-6,-2,1,4,4,6,-1,-5,1,6,-3,5,5,-3,7,-4,6,7,-7,1,-4,-5,10,-10,9,-5,1,4,-3,3,-2,-4,-3,10,-1,3,-9,-10,8,10,-10,-2,6,-8,-1,-9,-8,-5,-6,-10,5,-4,-10,3,-6,5,-1,-6,-3,6,-5,-8,1,-3,6,6,5,-6,-6,-2,4,-8,-6,-2,9,10,-4,-9,2,4,3,1], dtype = "uint64")#candidate|5860|(720,)|const|uint64
call_5859 = func_3206_call(relay.reshape(const_5860.astype('uint64'), [15, 3, 16]), relay.reshape(const_5860.astype('uint64'), [15, 3, 16]), )
call_5861 = func_3206_call(relay.reshape(const_5860.astype('uint64'), [15, 3, 16]), relay.reshape(const_5860.astype('uint64'), [15, 3, 16]), )
uop_5863 = relay.erf(call_5859.astype('float32')) # shape=(15, 3, 16)
uop_5865 = relay.erf(call_5861.astype('float32')) # shape=(15, 3, 16)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_5870 = relay.TupleGetItem(func_4177_call(), 0)
call_5871 = relay.TupleGetItem(func_4179_call(), 0)
output = relay.Tuple([call_5845,call_5849,const_5860,uop_5863,call_5870,])
output2 = relay.Tuple([call_5846,call_5850,const_5860,uop_5865,call_5871,])
func_5872 = relay.Function([], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mutated_mod.get_global_var('func_5872')
call_5873 = func_5872_call()
output = call_5873
func_5874 = relay.Function([], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5877 = relay.var("var_5877", dtype = "float64", shape = (13, 16, 10))#candidate|5877|(13, 16, 10)|var|float64
uop_5878 = relay.asinh(var_5877.astype('float64')) # shape=(13, 16, 10)
uop_5888 = relay.log10(uop_5878.astype('float64')) # shape=(13, 16, 10)
func_5682_call = mod.get_global_var('func_5682')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_5890 = func_5682_call()
call_5891 = func_5682_call()
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_5901 = relay.TupleGetItem(func_5872_call(), 1)
call_5902 = relay.TupleGetItem(func_5874_call(), 1)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_5908 = relay.TupleGetItem(func_4038_call(), 0)
call_5909 = relay.TupleGetItem(func_4039_call(), 0)
func_4244_call = mod.get_global_var('func_4244')
func_4246_call = mutated_mod.get_global_var('func_4246')
var_5913 = relay.var("var_5913", dtype = "float64", shape = (120,))#candidate|5913|(120,)|var|float64
call_5912 = func_4244_call(relay.reshape(var_5913.astype('float64'), [2, 15, 4]))
call_5914 = func_4244_call(relay.reshape(var_5913.astype('float64'), [2, 15, 4]))
func_3286_call = mod.get_global_var('func_3286')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_5917 = func_3286_call()
call_5918 = func_3286_call()
uop_5926 = relay.cosh(uop_5878.astype('float32')) # shape=(13, 16, 10)
output = relay.Tuple([uop_5888,call_5890,call_5901,call_5908,call_5912,var_5913,call_5917,uop_5926,])
output2 = relay.Tuple([uop_5888,call_5891,call_5902,call_5909,call_5914,var_5913,call_5918,uop_5926,])
func_5948 = relay.Function([var_5877,var_5913,], output)
mod['func_5948'] = func_5948
mod = relay.transform.InferType()(mod)
var_5949 = relay.var("var_5949", dtype = "float64", shape = (13, 16, 10))#candidate|5949|(13, 16, 10)|var|float64
var_5950 = relay.var("var_5950", dtype = "float64", shape = (120,))#candidate|5950|(120,)|var|float64
output = func_5948(var_5949,var_5950,)
func_5951 = relay.Function([var_5949,var_5950,], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mod.get_global_var('func_3755')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_5980 = func_3755_call()
call_5981 = func_3755_call()
func_2682_call = mod.get_global_var('func_2682')
func_2686_call = mutated_mod.get_global_var('func_2686')
var_5996 = relay.var("var_5996", dtype = "float32", shape = (3136,))#candidate|5996|(3136,)|var|float32
call_5995 = relay.TupleGetItem(func_2682_call(relay.reshape(call_5980.astype('int8'), [6, 13, 2]), relay.reshape(var_5996.astype('float32'), [3136,]), ), 0)
call_5997 = relay.TupleGetItem(func_2686_call(relay.reshape(call_5980.astype('int8'), [6, 13, 2]), relay.reshape(var_5996.astype('float32'), [3136,]), ), 0)
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_5999 = relay.TupleGetItem(func_3637_call(), 0)
call_6000 = relay.TupleGetItem(func_3638_call(), 0)
uop_6018 = relay.sin(call_5995.astype('float64')) # shape=(16, 14, 14)
uop_6020 = relay.sin(call_5997.astype('float64')) # shape=(16, 14, 14)
output = relay.Tuple([call_5980,var_5996,call_5999,uop_6018,])
output2 = relay.Tuple([call_5981,var_5996,call_6000,uop_6020,])
func_6022 = relay.Function([var_5996,], output)
mod['func_6022'] = func_6022
mod = relay.transform.InferType()(mod)
var_6023 = relay.var("var_6023", dtype = "float32", shape = (3136,))#candidate|6023|(3136,)|var|float32
output = func_6022(var_6023)
func_6024 = relay.Function([var_6023], output)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3073_call = mod.get_global_var('func_3073')
func_3075_call = mutated_mod.get_global_var('func_3075')
call_6080 = func_3073_call()
call_6081 = func_3073_call()
output = relay.Tuple([call_6080,])
output2 = relay.Tuple([call_6081,])
func_6082 = relay.Function([], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
output = func_6082()
func_6083 = relay.Function([], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_6111 = func_3257_call()
call_6112 = func_3257_call()
output = call_6111
output2 = call_6112
func_6117 = relay.Function([], output)
mod['func_6117'] = func_6117
mod = relay.transform.InferType()(mod)
output = func_6117()
func_6118 = relay.Function([], output)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6171 = relay.var("var_6171", dtype = "float32", shape = (1, 7, 7))#candidate|6171|(1, 7, 7)|var|float32
uop_6172 = relay.cosh(var_6171.astype('float32')) # shape=(1, 7, 7)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_6184 = relay.TupleGetItem(func_3446_call(), 0)
call_6185 = relay.TupleGetItem(func_3448_call(), 0)
bop_6187 = relay.floor_mod(uop_6172.astype('float64'), relay.reshape(var_6171.astype('float64'), relay.shape_of(uop_6172))) # shape=(1, 7, 7)
output = relay.Tuple([call_6184,bop_6187,])
output2 = relay.Tuple([call_6185,bop_6187,])
func_6190 = relay.Function([var_6171,], output)
mod['func_6190'] = func_6190
mod = relay.transform.InferType()(mod)
mutated_mod['func_6190'] = func_6190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6191 = relay.var("var_6191", dtype = "float32", shape = (1, 7, 7))#candidate|6191|(1, 7, 7)|var|float32
func_6190_call = mutated_mod.get_global_var('func_6190')
call_6192 = func_6190_call(var_6191)
output = call_6192
func_6193 = relay.Function([var_6191], output)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_6269 = relay.TupleGetItem(func_5872_call(), 3)
call_6270 = relay.TupleGetItem(func_5874_call(), 3)
uop_6282 = relay.cos(call_6269.astype('float32')) # shape=(15, 3, 16)
uop_6284 = relay.cos(call_6270.astype('float32')) # shape=(15, 3, 16)
output = uop_6282
output2 = uop_6284
func_6294 = relay.Function([], output)
mod['func_6294'] = func_6294
mod = relay.transform.InferType()(mod)
output = func_6294()
func_6295 = relay.Function([], output)
mutated_mod['func_6295'] = func_6295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_6296 = relay.TupleGetItem(func_2815_call(), 1)
call_6297 = relay.TupleGetItem(func_2817_call(), 1)
func_4526_call = mod.get_global_var('func_4526')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_6315 = relay.TupleGetItem(func_4526_call(), 1)
call_6316 = relay.TupleGetItem(func_4528_call(), 1)
output = relay.Tuple([call_6296,call_6315,])
output2 = relay.Tuple([call_6297,call_6316,])
func_6327 = relay.Function([], output)
mod['func_6327'] = func_6327
mod = relay.transform.InferType()(mod)
output = func_6327()
func_6328 = relay.Function([], output)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mod.get_global_var('func_4398')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_6375 = relay.TupleGetItem(func_4398_call(), 4)
call_6376 = relay.TupleGetItem(func_4400_call(), 4)
output = relay.Tuple([call_6375,])
output2 = relay.Tuple([call_6376,])
func_6377 = relay.Function([], output)
mod['func_6377'] = func_6377
mod = relay.transform.InferType()(mod)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6377_call = mutated_mod.get_global_var('func_6377')
call_6378 = func_6377_call()
output = call_6378
func_6379 = relay.Function([], output)
mutated_mod['func_6379'] = func_6379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_6390 = relay.TupleGetItem(func_4038_call(), 0)
call_6391 = relay.TupleGetItem(func_4039_call(), 0)
output = call_6390
output2 = call_6391
func_6395 = relay.Function([], output)
mod['func_6395'] = func_6395
mod = relay.transform.InferType()(mod)
output = func_6395()
func_6396 = relay.Function([], output)
mutated_mod['func_6396'] = func_6396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_6462 = relay.TupleGetItem(func_2716_call(), 1)
call_6463 = relay.TupleGetItem(func_2717_call(), 1)
func_2901_call = mod.get_global_var('func_2901')
func_2903_call = mutated_mod.get_global_var('func_2903')
var_6467 = relay.var("var_6467", dtype = "int8", shape = (156,))#candidate|6467|(156,)|var|int8
call_6466 = func_2901_call(relay.reshape(var_6467.astype('int8'), [6, 13, 2]))
call_6468 = func_2901_call(relay.reshape(var_6467.astype('int8'), [6, 13, 2]))
func_5154_call = mod.get_global_var('func_5154')
func_5157_call = mutated_mod.get_global_var('func_5157')
var_6489 = relay.var("var_6489", dtype = "int8", shape = ())#candidate|6489|()|var|int8
const_6490 = relay.const([-4,2,2,-8,4,9,1,4,-4,-4,-2,-6,5,5,6,5,-3,-1,-10,4,-4,-7,3,-5,-6,1,-9,8,-4,2,-9,9,3,-8,10,-10,-7,1,8,-6,-5,2,-5,-8,3,10,-6,-5,10,5,-7,4,3,3,-3,8,5,2,2,10,1,-9,-8,7,10,-6,8,-3,9,-2,5,10,2,2,3,7,-2,10,-1,-6,10,7,3,-1,-8,-3,-5,-4,5,8,10,2,2,-9,-1,-5,6,3,4], dtype = "int8")#candidate|6490|(99,)|const|int8
call_6488 = func_5154_call(relay.reshape(var_6489.astype('int8'), []), relay.reshape(const_6490.astype('int8'), [11, 1, 9]), )
call_6491 = func_5154_call(relay.reshape(var_6489.astype('int8'), []), relay.reshape(const_6490.astype('int8'), [11, 1, 9]), )
output = relay.Tuple([call_6462,call_6466,var_6467,call_6488,var_6489,const_6490,])
output2 = relay.Tuple([call_6463,call_6468,var_6467,call_6491,var_6489,const_6490,])
func_6507 = relay.Function([var_6467,var_6489,], output)
mod['func_6507'] = func_6507
mod = relay.transform.InferType()(mod)
var_6508 = relay.var("var_6508", dtype = "int8", shape = (156,))#candidate|6508|(156,)|var|int8
var_6509 = relay.var("var_6509", dtype = "int8", shape = ())#candidate|6509|()|var|int8
output = func_6507(var_6508,var_6509,)
func_6510 = relay.Function([var_6508,var_6509,], output)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6512 = relay.var("var_6512", dtype = "float64", shape = (4, 12, 3))#candidate|6512|(4, 12, 3)|var|float64
uop_6513 = relay.sin(var_6512.astype('float64')) # shape=(4, 12, 3)
func_3228_call = mod.get_global_var('func_3228')
func_3229_call = mutated_mod.get_global_var('func_3229')
call_6529 = relay.TupleGetItem(func_3228_call(), 1)
call_6530 = relay.TupleGetItem(func_3229_call(), 1)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_6544 = relay.TupleGetItem(func_2716_call(), 2)
call_6545 = relay.TupleGetItem(func_2717_call(), 2)
uop_6547 = relay.sigmoid(var_6512.astype('float32')) # shape=(4, 12, 3)
output = relay.Tuple([uop_6513,call_6529,call_6544,uop_6547,])
output2 = relay.Tuple([uop_6513,call_6530,call_6545,uop_6547,])
func_6550 = relay.Function([var_6512,], output)
mod['func_6550'] = func_6550
mod = relay.transform.InferType()(mod)
var_6551 = relay.var("var_6551", dtype = "float64", shape = (4, 12, 3))#candidate|6551|(4, 12, 3)|var|float64
output = func_6550(var_6551)
func_6552 = relay.Function([var_6551], output)
mutated_mod['func_6552'] = func_6552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5514_call = mod.get_global_var('func_5514')
func_5515_call = mutated_mod.get_global_var('func_5515')
call_6573 = func_5514_call()
call_6574 = func_5514_call()
var_6606 = relay.var("var_6606", dtype = "float64", shape = (6, 13, 2))#candidate|6606|(6, 13, 2)|var|float64
bop_6607 = relay.subtract(call_6573.astype('float32'), relay.reshape(var_6606.astype('float32'), relay.shape_of(call_6573))) # shape=(6, 13, 2)
bop_6610 = relay.subtract(call_6574.astype('float32'), relay.reshape(var_6606.astype('float32'), relay.shape_of(call_6574))) # shape=(6, 13, 2)
output = bop_6607
output2 = bop_6610
func_6613 = relay.Function([var_6606,], output)
mod['func_6613'] = func_6613
mod = relay.transform.InferType()(mod)
var_6614 = relay.var("var_6614", dtype = "float64", shape = (6, 13, 2))#candidate|6614|(6, 13, 2)|var|float64
output = func_6613(var_6614)
func_6615 = relay.Function([var_6614], output)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4131_call = mod.get_global_var('func_4131')
func_4132_call = mutated_mod.get_global_var('func_4132')
call_6632 = func_4131_call()
call_6633 = func_4131_call()
func_2748_call = mod.get_global_var('func_2748')
func_2751_call = mutated_mod.get_global_var('func_2751')
var_6647 = relay.var("var_6647", dtype = "float64", shape = (540,))#candidate|6647|(540,)|var|float64
call_6646 = relay.TupleGetItem(func_2748_call(relay.reshape(var_6647.astype('float64'), [3, 180])), 2)
call_6648 = relay.TupleGetItem(func_2751_call(relay.reshape(var_6647.astype('float64'), [3, 180])), 2)
func_1677_call = mod.get_global_var('func_1677')
func_1681_call = mutated_mod.get_global_var('func_1681')
var_6651 = relay.var("var_6651", dtype = "float32", shape = (308,))#candidate|6651|(308,)|var|float32
const_6652 = relay.const([-6.575785,-5.471494,-0.949490,0.858348,4.691605,8.388272,-4.505549,-6.967633,-1.707513,5.927297,5.265599,5.982375,-5.340698,-6.233444,4.771942,-5.912675,9.686875,3.975385,-2.351411,6.318440,4.560011,9.536043,-6.831366,-8.304350,-5.228669,3.091185,1.790387,0.008935,-5.846205,3.315508,4.521223,2.868669,8.260108,-0.118974,3.257173,0.120375,-6.221499,-8.087864,-3.744181,8.686299,-2.663999,4.923372,3.508080,6.775117,-5.413068,-5.762899,5.401970,-0.747506,-7.395291,-1.829599,-9.383984,-3.106757,-0.752462,6.108318,8.591953,6.007051,6.024871,9.013328,5.506054,7.224992,-9.551561,9.108165,6.944762,-0.420691,-6.457182,-7.482781,-9.536591,7.513178,5.566695,7.543978,3.097819,7.824960,8.609337,-5.205909,1.204633,-8.461229,7.998539,9.423329,2.331705,-3.590991,6.489024,-9.893489,7.864754,-7.984602,9.500915,2.288263,6.791389,9.205203,-6.065122,0.528227,9.939388,9.006392,-6.797956,-1.214490,-8.519761,3.580483,3.187805,8.638524,-6.391365,1.297164,4.965643,-9.294901,6.393303,-6.449251,3.096955,-8.094476,4.476586,0.054960,-7.085415,-8.014444,-2.517509,-0.675266,1.847472,-0.328778,-3.500976,5.837576,1.264100,-9.016044,-4.024887,-4.394914,-6.279346,-4.486974,-6.237444,2.399452,3.283126,5.853665,-0.646626,9.537953,7.559544,5.560600,-6.898382,3.031051,-9.987945,-8.649313,-0.409123,5.948602,0.615874,8.468742,4.324973,9.791131,-2.401169,7.016464,-9.059632,-9.938362,-7.532616,7.981160,3.389085,-4.729027,-9.399460,-5.398215,5.982547,-7.403571,8.014342,-6.245374,-2.626245,-9.809495,-9.343847,8.509417,-5.594761,-0.718618,2.780374,8.491239,6.678071,6.695996,0.760341,-5.257530,0.095678,9.452164,-4.206068,1.556793,2.353410,3.350095,1.154296,7.167894,7.200878,9.227431,4.500659,2.679514,-8.778676,3.572723,-2.789420,7.854922,-3.942443,-6.068258,-9.169013,1.825258,1.527523,-4.747174,-1.464061,9.517049,2.779798,-3.143323,4.405751,2.692948,-0.162120,8.996857,7.813702,-6.911708,-4.361136,-7.205683,4.891697,-2.088304,8.527387,7.385366,-3.655469,1.304400,4.665641,4.622782,9.988478,4.293105,5.335679,-1.422414,9.034149,-2.097554,9.752054,-4.458460,-7.634486,-9.800270,7.315483,1.578365,-2.905281,-6.207224,6.527638,-1.936019,-0.040698,-0.608545,7.620005,-2.296365,-8.307503,-9.852477,-5.301826,-3.840965,7.836524,-5.253857,-7.539413,9.059895,-4.482988,1.340269,4.318126,-6.192188,5.121753,4.256243,1.184201,3.447243,-7.545927,6.249728,-4.984049,2.422774,-7.720120,1.011007,-7.297122,3.330782,-2.097621,-7.251147,1.301846,2.158120,9.969035,3.291271,1.491015,-6.873094,-8.345454,-7.401603,3.504998,-7.061436,3.866669,0.283190,-5.189555,-1.082319,1.008192,-7.773655,7.771707,2.634869,-8.411454,9.640118,8.068276,0.976284,0.584004,-0.425045,-0.387492,0.272323,-4.287037,0.308021,1.605886,8.353133,-0.610139,4.243217,-8.862966,-0.064467,5.854716,-4.850494,-5.202682,-9.681133,1.683828,-4.103133,-0.373139,4.225006,-7.397197,8.721010,-2.230375,-5.733747,9.968058,-2.695119,-4.703776,-3.604902,-4.670446,-9.509664,9.820269,-1.837735,-1.321657,-5.869145,-5.297947,7.108355,-2.727016,6.757286,-5.591523,5.920602,7.703561,2.163233,-8.894491,-1.252255,-4.125179,9.252071,5.868018,-4.244328,2.162561,-0.897219,-4.976683,-4.814421,0.752519,7.343740,-6.829374,6.270010,-3.979902,7.693545,-2.542001,6.144296,6.570051,-5.012410,-3.209667,-2.785530,9.464931,-2.485966,-3.732191,-5.971885,-7.078067,6.742696,-0.501184,-6.769341,6.182772,-2.164406,7.164006,-8.494956,-0.208316,-4.999621,4.746080,-0.018452,2.789136,-7.805292,-2.675756,0.468601,-6.374698,2.621756,5.388635,6.235722,6.175933,5.899196,1.792521,7.677504,-0.757047,5.129323,-9.197203,4.501912,-5.408728,-3.470409,-3.270068,3.923211,-4.265422,-9.932414,-6.987895,5.367417,8.139368,2.380754,-3.065976,-2.572666,-3.614402,2.273839,-5.778954,-3.604552,-8.607603,4.432351,8.436887,-5.337923,0.827929,1.040211,-7.739434,9.459545,0.372969,3.419222,-1.053035,9.891326,2.127454,9.804332,5.030286,-4.835068,-8.206615,-3.047332,-2.028241,-0.871538,9.507748,2.429135,-1.135478,0.538143,7.989371,2.677486,1.131775,-6.233097,9.900112,-3.654637,-5.392812,2.583658,-8.891413,-2.293089,-0.970736,-4.827859,-6.171785,9.329965,-2.187743,4.942983,8.707694,3.925836,1.094577,9.178258,-6.310141,3.307071,-2.481747,5.148530,-5.990054,5.663000,-8.686094,2.390005,-3.464159,2.792600,6.022073,-6.210464,-6.924300,4.959434,-8.220978,-2.523077,-3.289451,8.326301,-8.648860,3.111344,-7.587929,4.292231,-3.972715,0.171798,-5.063229,-0.827634,0.621227,-5.460462,-6.406086,1.066164,3.673849,8.350702,1.455434,-4.662711,-1.809318,2.077602,7.634212,7.423813,2.830238,-0.344673,-3.823032,3.604645,5.789483,5.865602,-8.937810,-7.640042,-7.851076,1.340334,-1.554103,-9.633617,-7.727518,6.910563,-2.877096,4.689318,-9.600020,3.054423,-5.096092,-1.209380,1.354357,-7.676645,7.581086,5.881339,-1.176263,0.347899,-8.353492,6.258111,3.584100,-7.108297,-1.330745,8.177753,5.902283,5.865934,-3.744989,-0.130588,9.631110,6.947797,2.523964,-7.560400,5.176688,7.316057,4.960914,-3.401338,2.670546,1.815836,7.760544,-2.086517,8.066681,-1.647140,-1.620673,0.927305,4.923328,-4.107784,5.571432,7.260820,-4.855324,6.671763,4.271483,5.010387,-3.656950,-1.026838,7.615467,9.251831,-6.189364,-5.870081,-0.529425,-1.733312,-6.846909,-1.919163,-8.576826,3.676780,-2.353862,-9.037219,-0.786182,3.645478,-3.121721,-6.487482,-2.712361,1.973346,-7.040053,0.363635,0.478855,-0.761693,-8.545384,-5.473391,-8.604110,-1.855966,-7.505644,1.613851,-0.950471,4.774778,-6.050305,-1.519465,4.910549,-9.943206,-9.082556,-0.297166,1.562758,9.961850,-0.975993,-6.032862,6.729194,1.707231,-8.626691,9.008080,4.489776,8.331784,-1.516519,7.226212,8.548652,9.861083,0.998762,-3.888796,6.521188,2.250431,5.902084,-2.191343,-6.818274,-9.230528,-8.769913,1.616972,-8.262736,-8.977384,-4.702527,3.660206,3.370591,8.189592,-3.354569,1.347249,-7.661031,3.042949,9.092059,-1.832183,-2.644298,-9.955973,-0.600696,-8.582359,-6.056299,-5.911877,-9.099678,7.728732,-2.466709,4.725111,-2.565731,-4.058894,0.069485,-1.608801,-1.268295,-4.416679,8.863804,6.118969,-4.763062,-7.909523,-4.817325,7.503321,-0.998136,-1.984741,-6.465303,-7.342426,8.683410,1.881559,-9.033891,3.631909,-7.935260,6.033658,-9.683859,-4.292676,9.395625,6.421805,7.322443,-6.704390,3.456881,-3.969575,-3.068895,-4.066743,-2.602158,-1.852589,7.663493,0.340512,9.942397,8.575008,1.333645,-2.803910,1.946465,4.852600,3.197861,-2.589375,-0.162740,-7.049649,6.695070,-4.410378,-2.183788,8.208914,-5.455510,9.015370,6.631029,8.261478,-8.575157,3.309009,-0.198815,-6.972180,7.032178,-6.988983,-0.170107,-5.022868,-8.993006,0.921314,-6.804972,-9.138328,9.169175,-2.237458,7.465841,5.498111,-1.219596,0.680881,8.644770,-3.839001,-1.674013,8.030371,7.694196,8.977160,-6.836339,-3.601924,6.231723,-5.528671,-3.001106,9.826407,-6.706035,-8.849075,-3.344905,0.698374,2.964313,-2.629750,5.454079,-8.136843,8.844816,-8.188945,-8.137417,-1.275455,3.478833,-5.835419,-6.718062,4.793272,7.115569,2.625003,2.874125,6.919938,-1.194342,9.027051,7.399723,-9.392379,8.331513,1.080194,3.526138,5.130694,-7.231667,-5.797125,1.794386,2.595629,9.250434,-6.340642,-2.171754,-9.857790,3.404789,-5.884244,8.051210,-9.615144,9.971084,9.925446,8.664792,0.460472,-6.776826,-8.961367,-7.046269,-4.111784,-9.793676,-8.479562,5.541073,6.813568,-5.002835,7.255749,-9.359062,-0.338663,1.662707,-8.779307,-7.434004,-0.350189,-9.628098,8.264648,6.557121,-9.144746,-2.491256,-1.749679,3.654813,5.233136,4.811147,-1.361435,-2.393958,3.397744,-5.287446,-6.328539,9.086830,1.998947,-2.745258,-4.827534,2.013122,1.860113,-2.446631,9.641882,-7.200790,3.274498,8.155249,4.223048,2.456693,-6.096505,0.723130,-1.130287,6.471617,-5.299673,-5.171984,7.816728,3.867102,-3.979740,-3.416868,-7.606039,-3.514631,-9.140641,2.591596,9.447449,-5.846821,-7.612731,-9.873763,0.305925,-9.132351,7.518181,-3.687451,-8.014551,-0.401609,8.243574,-7.484740,6.978270,-6.042947,4.334276,9.583971,-2.288529,-9.881625,8.575052,0.779424,-1.638139,-3.053998,0.164757,7.151293,9.675424,-7.244968,-1.538646,-9.251984,9.811447,-3.259847,-2.470422,2.157904,4.043245,6.751527,-9.407592,4.600213,-5.550200,8.331285,9.967406,-0.524391,-2.738346,7.930504,4.865010,-0.751335,-9.252067,9.735386,-3.143320,6.705681,-0.708136,9.872214,-9.216422,-8.453233,-6.188354,-3.730730,-2.075218,-6.058691,0.118133,0.893758,2.032378,4.986770,-7.137983,-2.481298,3.825819,8.677666,-8.911393,-8.292087,0.187928,-8.235261,-2.269134,2.850850,2.107731,2.392736,-0.826647,0.693364,-0.534397,6.814039,-5.779517,-4.420371,-0.812406,9.641867,-5.347126,9.059763,-6.720380,3.428310,-4.188948,3.044051,7.283505,-5.330033,-4.162947,7.417675,-0.416726,8.313276,3.986474,-1.380771,1.704236,-5.363222,1.600420,-5.162330,0.121349,3.883626,-2.765836,5.034032,5.888180,6.833527,-3.084748,1.568266,-0.345392,8.575035,-4.843733,4.500050,4.346446,7.974366,3.966759,0.850181,7.133423,-3.146317,7.422275,7.927751,7.099757,-8.112250,-9.128441,-5.966360,0.492075,-7.191501,4.065603,1.347679,9.197380,2.544218,-9.940447,-6.831303,1.940505,-3.786769,-2.134878,-5.233634,-2.379785,3.345778,-7.243914,9.604810,4.414302,7.866486,3.342273,-0.287904,6.184687,5.926868,-1.767948,6.321656,-6.442230,-0.293746,-6.794491,-8.343363,-5.227974,6.671890,0.452091,-3.255851,-7.527509,3.148367,-0.573277,-9.586146,-9.130693,-3.942864,2.541404,-7.997874,8.220364,0.525023,6.553279,-2.036456,3.701361,-8.849592,9.358523,-8.599048,-2.776027,5.684946,6.358945,-4.705269,-3.508296,-8.503926,4.673396,7.426337,4.534229,-1.737731,2.106547,-5.928790,-6.508098,2.945153,1.685841,2.336843,-7.759504,7.885486,-8.362027,3.216970,-7.905584,0.809952,-4.167917,-8.187731,4.504174,0.979133,6.458895,3.868278,-4.123811,0.054935,-7.421257,-1.433691,-9.667769,-1.678582,4.146909,7.168259,2.953269,4.017802,7.493668,-8.550614,-2.738058,8.761187,4.717149,1.385604,-7.312699,-3.308632,0.980223,8.983968,-4.766506,4.869471,8.833612,6.815740,8.662504,-0.644695,-4.911884,0.930064,-7.829525,-2.653346,5.344415,-3.056804,4.133037,3.443302,8.857466,-0.411581,-0.171181,9.837653,-4.954632,2.318732,-4.714046,-5.418030,-7.995349,4.338195,8.845140,-8.883946,-7.905462,-8.397053,1.512655,-7.365289,-5.004699,-0.213480,-1.196034,-1.948381,-3.747149,-5.398229,9.463420,0.626245,-8.597005,9.950187,3.335096,8.783785,-2.195302,4.731799,4.084678,-7.289257,-4.349446,-5.455501,-7.800779,1.663851,-8.118851,7.375878,-7.273286,0.745346,-5.993409,-9.184200,0.044678,7.017286,6.425593,3.438089,-3.444353,-2.211228,9.060136,-8.681598,3.580412,-2.072448,9.435364,-8.664485,9.750208,9.526145,-7.099417,9.894050,8.230338,1.212257,0.990370,9.303309,-3.915783,-2.146955,-6.945512,0.402324,-5.364573,-2.343833,-1.382250,3.854314,-2.397964,8.801283,9.488445,-5.308342,3.572862,4.104078,4.433736,-9.379499,0.792425,9.719943,0.381729,5.981710,-8.916166,-1.210876,-1.893466,-1.817379,-8.439791,8.766304,-8.732412,-6.627800,0.027095,-0.353650,-5.722871,-2.562213,7.589649,5.797989,8.958662,-0.746242,-7.534352,-8.419822,1.614072,-5.044542,-3.279910,8.158109,1.707840,-7.809102,5.722124,1.748935,8.310550,0.924739,3.295487,-4.646917,-2.102733,5.023789,2.246832,9.109334,-5.462763,-9.738937,-3.273355,-9.968408,4.510792,-5.013476,2.899252,-4.799951,-9.610532,-4.376326,-5.777971,-0.343629,5.208108,-3.805342,3.933797,9.670106,7.391820,-9.845442,8.293520,3.234667,0.856975,-9.747874,-1.245520,5.324257,-1.352304,-7.415497,-8.425368,0.815507,-6.294083,-9.608957,-6.389307,-8.486137,0.831010,6.853231,7.581764,9.992210,-7.795366,4.732726,-5.842010,1.494477,-1.417418,-5.547549,-3.457648,8.075007,8.762314,-9.357936,9.228879,5.031722,6.352426,-4.491707,9.757467,2.341101,1.732959,-5.138648,-2.464455,-3.790612,-1.647407,9.360095,9.102221,6.814627,9.974070,-5.812153,-9.312673,7.210861,-1.770903,-2.825983,-7.391887,6.301125,9.887830,0.429777,-0.106012,-0.684107,-5.639660,7.800682,-9.716094,-3.830375,2.406513,2.533711,-4.280742,2.887728,-2.217355,4.334201,-0.279515,-6.412947,-8.306967], dtype = "float64")#candidate|6652|(1232,)|const|float64
call_6650 = relay.TupleGetItem(func_1677_call(relay.reshape(var_6647.astype('float32'), [15, 9, 4]), relay.reshape(var_6651.astype('float32'), [154, 2]), relay.reshape(const_6652.astype('float64'), [4, 308]), ), 6)
call_6653 = relay.TupleGetItem(func_1681_call(relay.reshape(var_6647.astype('float32'), [15, 9, 4]), relay.reshape(var_6651.astype('float32'), [154, 2]), relay.reshape(const_6652.astype('float64'), [4, 308]), ), 6)
output = relay.Tuple([call_6632,call_6646,var_6647,call_6650,var_6651,const_6652,])
output2 = relay.Tuple([call_6633,call_6648,var_6647,call_6653,var_6651,const_6652,])
func_6656 = relay.Function([var_6647,var_6651,], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mutated_mod.get_global_var('func_6656')
var_6658 = relay.var("var_6658", dtype = "float64", shape = (540,))#candidate|6658|(540,)|var|float64
var_6659 = relay.var("var_6659", dtype = "float32", shape = (308,))#candidate|6659|(308,)|var|float32
call_6657 = func_6656_call(var_6658,var_6659,)
output = call_6657
func_6660 = relay.Function([var_6658,var_6659,], output)
mutated_mod['func_6660'] = func_6660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3887_call = mod.get_global_var('func_3887')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_6662 = func_3887_call()
call_6663 = func_3887_call()
func_4131_call = mod.get_global_var('func_4131')
func_4132_call = mutated_mod.get_global_var('func_4132')
call_6669 = func_4131_call()
call_6670 = func_4131_call()
func_5948_call = mod.get_global_var('func_5948')
func_5951_call = mutated_mod.get_global_var('func_5951')
var_6683 = relay.var("var_6683", dtype = "float64", shape = (2080,))#candidate|6683|(2080,)|var|float64
const_6684 = relay.const([-7.771031,-0.588121,2.130361,-8.879050,-5.033233,-1.385416,-5.231582,2.896175,8.069564,-4.481505,-5.166575,-7.820792,-5.309364,9.662558,-9.708304,2.077757,-0.572704,-6.394895,3.314617,9.263125,-7.866985,9.301393,2.784846,7.259753,-4.827302,-7.475045,-7.097576,-1.860256,-7.973557,-1.772124,-1.571974,4.740090,-2.242837,-7.886765,-2.024148,2.024098,5.063435,9.744261,2.788414,7.960590,8.186336,3.704940,-2.003043,-4.321666,3.671959,7.167211,-0.528586,-0.124151,2.885374,4.608176,-2.309786,-6.279757,4.895588,-1.535344,-1.998659,-2.847587,7.983271,-8.634242,0.619266,-1.652198,5.986562,-2.268091,8.044915,-4.543005,-5.541074,-1.657472,7.597230,-8.124320,9.712971,7.849703,8.493508,9.691160,6.264587,-1.401810,-5.706198,7.101971,4.931351,-6.753624,-9.402776,7.112315,-4.918426,4.367021,-6.928112,-7.317909,-8.586219,6.127242,9.933197,-7.462519,-1.365192,-6.253899,-9.528649,1.270773,8.707499,-3.287155,-9.301764,-7.072516,8.366636,-5.526669,-5.388181,9.894984,9.772025,-1.658624,3.910553,5.379299,9.748417,9.325256,-5.655097,0.679651,-6.374466,0.315430,4.615740,2.303334,-5.076756,-5.678761,-8.553826,9.279658,2.561275,-8.559348,3.023500,-2.052290], dtype = "float64")#candidate|6684|(120,)|const|float64
call_6682 = relay.TupleGetItem(func_5948_call(relay.reshape(var_6683.astype('float64'), [13, 16, 10]), relay.reshape(const_6684.astype('float64'), [120,]), ), 1)
call_6685 = relay.TupleGetItem(func_5951_call(relay.reshape(var_6683.astype('float64'), [13, 16, 10]), relay.reshape(const_6684.astype('float64'), [120,]), ), 1)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_6694 = relay.TupleGetItem(func_3181_call(), 0)
call_6695 = relay.TupleGetItem(func_3182_call(), 0)
uop_6707 = relay.sin(call_6694.astype('float64')) # shape=(3, 180)
uop_6709 = relay.sin(call_6695.astype('float64')) # shape=(3, 180)
output = relay.Tuple([call_6662,call_6669,call_6682,var_6683,const_6684,uop_6707,])
output2 = relay.Tuple([call_6663,call_6670,call_6685,var_6683,const_6684,uop_6709,])
func_6713 = relay.Function([var_6683,], output)
mod['func_6713'] = func_6713
mod = relay.transform.InferType()(mod)
mutated_mod['func_6713'] = func_6713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6714 = relay.var("var_6714", dtype = "float64", shape = (2080,))#candidate|6714|(2080,)|var|float64
func_6713_call = mutated_mod.get_global_var('func_6713')
call_6715 = func_6713_call(var_6714)
output = call_6715
func_6716 = relay.Function([var_6714], output)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5437_call = mod.get_global_var('func_5437')
func_5439_call = mutated_mod.get_global_var('func_5439')
call_6749 = relay.TupleGetItem(func_5437_call(), 1)
call_6750 = relay.TupleGetItem(func_5439_call(), 1)
func_4154_call = mod.get_global_var('func_4154')
func_4156_call = mutated_mod.get_global_var('func_4156')
call_6761 = relay.TupleGetItem(func_4154_call(), 0)
call_6762 = relay.TupleGetItem(func_4156_call(), 0)
output = relay.Tuple([call_6749,call_6761,])
output2 = relay.Tuple([call_6750,call_6762,])
func_6775 = relay.Function([], output)
mod['func_6775'] = func_6775
mod = relay.transform.InferType()(mod)
mutated_mod['func_6775'] = func_6775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6775_call = mutated_mod.get_global_var('func_6775')
call_6776 = func_6775_call()
output = call_6776
func_6777 = relay.Function([], output)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3755_call = mod.get_global_var('func_3755')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_6789 = func_3755_call()
call_6790 = func_3755_call()
output = relay.Tuple([call_6789,])
output2 = relay.Tuple([call_6790,])
func_6793 = relay.Function([], output)
mod['func_6793'] = func_6793
mod = relay.transform.InferType()(mod)
output = func_6793()
func_6794 = relay.Function([], output)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_6795 = relay.TupleGetItem(func_4972_call(), 0)
call_6796 = relay.TupleGetItem(func_4974_call(), 0)
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
var_6817 = relay.var("var_6817", dtype = "float32", shape = (3136, 1))#candidate|6817|(3136, 1)|var|float32
call_6816 = relay.TupleGetItem(func_2300_call(relay.reshape(var_6817.astype('float32'), [16, 14, 14])), 0)
call_6818 = relay.TupleGetItem(func_2302_call(relay.reshape(var_6817.astype('float32'), [16, 14, 14])), 0)
func_5682_call = mod.get_global_var('func_5682')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_6823 = func_5682_call()
call_6824 = func_5682_call()
output = relay.Tuple([call_6795,call_6816,var_6817,call_6823,])
output2 = relay.Tuple([call_6796,call_6818,var_6817,call_6824,])
func_6836 = relay.Function([var_6817,], output)
mod['func_6836'] = func_6836
mod = relay.transform.InferType()(mod)
mutated_mod['func_6836'] = func_6836
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6837 = relay.var("var_6837", dtype = "float32", shape = (3136, 1))#candidate|6837|(3136, 1)|var|float32
func_6836_call = mutated_mod.get_global_var('func_6836')
call_6838 = func_6836_call(var_6837)
output = call_6838
func_6839 = relay.Function([var_6837], output)
mutated_mod['func_6839'] = func_6839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_6873 = relay.TupleGetItem(func_5393_call(), 0)
call_6874 = relay.TupleGetItem(func_5394_call(), 0)
output = relay.Tuple([call_6873,])
output2 = relay.Tuple([call_6874,])
func_6875 = relay.Function([], output)
mod['func_6875'] = func_6875
mod = relay.transform.InferType()(mod)
output = func_6875()
func_6876 = relay.Function([], output)
mutated_mod['func_6876'] = func_6876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3887_call = mod.get_global_var('func_3887')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_6948 = func_3887_call()
call_6949 = func_3887_call()
func_2300_call = mod.get_global_var('func_2300')
func_2302_call = mutated_mod.get_global_var('func_2302')
const_6972 = relay.const([-6.217387,-3.284789,8.636599,-5.523443,5.716695,4.838703,-6.649469,-3.854348,6.337986,9.288111,-1.683134,4.943879,3.056545,0.320126,-8.366995,4.476734,-4.750810,-2.820543,6.740638,5.677422,-7.386626,4.182765,7.069767,6.529591,7.663654,6.250383,1.569208,2.953239,-1.040207,-0.052389,1.197540,3.175041,4.161346,-0.338413,-3.870804,0.232741,-1.319516,-4.151015,0.451023,-9.325255,-6.428141,-6.760132,7.157793,-2.599066,-0.889093,-2.053104,-5.848488,-6.259066,-4.435331,6.671591,-0.263473,7.982874,8.432496,-5.858119,7.980209,9.139635,-6.844170,-5.326146,9.107724,-7.194503,9.349115,-7.968558,-6.795598,8.262232,0.950938,-2.725248,-3.780896,-5.045177,9.510167,-3.478195,-8.504155,-3.687602,7.508878,-1.887887,3.017310,-8.243877,1.181525,-1.710076,5.034550,-1.483230,-3.555933,-3.657054,-6.341541,-1.558950,-0.792997,8.991825,7.631419,5.286015,-2.502676,8.522104,-3.247819,-5.455580,-1.700555,-2.038560,-5.933630,-0.194462,0.499382,5.946276,-1.635387,3.421653,-9.896485,0.247434,-1.591745,-0.665279,-8.327118,-5.693222,-3.290200,-2.964288,7.083436,-1.439040,-6.763385,3.036178,-5.455127,2.432671,-7.622605,3.046630,0.528532,-8.465857,3.292345,-5.944890,9.430092,6.055880,0.530189,-7.870297,-7.017000,1.050578,-4.475230,-3.872633,4.204660,0.005913,-5.889072,1.259925,1.540849,2.721610,-1.333852,-3.085083,-4.386383,7.102120,0.084502,-4.676656,4.948006,-1.477778,-1.227886,-4.014074,0.673687,-7.457198,-7.664112,5.998974,8.675128,-3.746265,8.781701,3.347589,-4.928375,3.267057,9.699957,2.398573,7.240465,-6.654479,-4.729226,-4.831401,-1.300903,3.324544,-6.064201,-5.898203,3.059927,3.792858,6.921977,-7.902306,-8.404374,8.047189,-4.769554,-6.471486,2.320335,4.803262,4.842206,7.526792,-7.249647,-7.863820,2.575894,8.459432,3.539285,2.943304,0.578787,1.655308,-5.529086,4.174675,7.576734,-4.341896,-6.203140,3.694082,3.726464,3.349772,7.924824,-3.917456,-0.718626,-9.215334,4.512320,-9.348125,7.327641,-1.068489,2.668553,-5.821091,6.375599,9.576216,4.451691,3.900685,5.457636,-4.452844,-9.271220,5.378728,-1.328727,-6.573200,-6.942452,9.045653,-4.236487,8.158359,5.899523,1.961527,-6.640178,9.011629,1.278769,3.367249,6.976692,1.498839,-5.736062,5.596937,-2.050238,-2.379409,-5.454021,9.669473,8.849395,-3.792497,-9.747349,7.485530,-9.058795,-1.110257,1.713989,-4.747478,-7.943594,-2.900999,0.227477,1.160732,-0.746371,-5.395406,3.828288,7.575385,-0.829154,-2.250518,2.679293,8.492627,-5.671709,1.071877,7.950581,-7.739307,-1.527123,9.131340,-1.838274,7.104042,-2.197547,-7.683956,1.548047,1.091513,8.808056,6.628380,5.689164,0.086348,-9.573027,-6.723229,-6.808906,9.105587,7.072920,-1.294886,-6.935534,-8.001806,3.711745,-5.997289,9.346641,-2.224630,1.603561,8.917421,8.157322,-1.768383,-9.889554,0.230628,-9.606651,2.092083,6.040387,9.895459,9.195250,6.934384,-8.696174,-2.731187,3.594422,3.251320,-3.482994,5.187336,5.303896,6.543927,-6.366005,-0.749739,-7.658276,8.238687,-8.162535,1.940234,-7.997835,-5.955513,-2.986846,-4.503409,-9.217663,7.446278,3.617229,-2.393203,-5.872162,-7.396956,-7.166271,1.610946,-9.060252,2.430487,-1.071579,-7.166364,9.032155,6.385213,3.240281,7.262087,9.816624,-9.815415,9.729786,7.084554,3.417676,7.438691,1.035315,-1.792093,5.058013,-0.801007,-7.328791,-5.221197,0.689592,2.268339,-6.825464,-9.324966,2.229720,-3.482831,0.583676,6.484401,7.539984,1.246837,5.465521,-1.576464,6.950662,-3.382756,4.624807,0.818897,5.232273,-3.688641,5.426568,8.085250,0.967606,1.630799,-0.961585,3.987638,6.539782,-1.953828,-2.238518,4.646945,4.563719,2.781782,8.769422,9.999291,-4.099465,-0.146783,2.177981,-4.001250,2.703355,6.264804,-8.843498,9.521323,8.298037,7.608411,-3.636612,8.339173,-8.319353,-4.490232,0.624162,-8.490974,3.938792,1.553049,0.975887,-7.848816,-0.736139,-3.639221,-6.982186,-6.938792,4.310150,-9.981111,3.192054,7.579228,-8.193810,5.909925,7.663277,0.687446,-0.177421,6.112978,1.276170,-3.392378,-0.822369,-3.342588,-5.620389,-5.726667,-8.491933,9.018092,4.328540,-1.183494,-1.375632,6.941745,0.143281,0.028477,-6.688278,8.140620,-6.436613,3.360980,-9.162608,2.679081,-2.981424,-7.969671,-7.678826,-7.567421,-4.402767,-8.790885,-5.977937,5.227187,-2.707187,2.733326,0.550369,-8.725924,-8.121048,-6.073160,-8.638545,4.568845,-6.872159,3.537261,4.951094,-1.371915,-7.740699,9.302794,-7.783477,0.451784,9.103587,1.461531,3.791965,-3.681510,9.532507,3.637747,-6.111152,6.798428,-4.375533,-6.514262,-8.436725,-1.414875,6.893207,-7.070565,-4.873285,-1.622018,-2.521962,-8.529559,-9.333989,-5.489543,-8.500115,8.642067,-7.817030,7.614547,1.464401,8.534541,-2.102504,4.208069,6.900241,2.152297,4.656040,1.091342,-2.771783,0.392202,-0.794917,-0.940377,8.779292,7.247325,-9.157105,8.605865,-2.500085,-8.359376,-8.444636,-7.491328,0.934709,3.653283,-6.248144,-4.178845,-7.011372,1.008057,7.332644,4.321799,7.252725,1.939697,5.329287,0.480406,0.145232,-7.565834,6.419128,6.301885,3.978596,1.891694,0.259959,-1.374238,-7.899298,-6.075628,3.711060,-8.157217,-8.273965,3.463646,-8.537796,-2.458189,-2.431383,9.046082,5.171498,-3.633421,9.409218,-7.850272,9.449094,8.921418,-7.515027,-4.314562,5.257707,-7.182442,-6.367826,-9.204556,2.634331,-1.633862,6.234835,4.622932,-0.139892,5.373398,-7.149074,-9.223050,-5.268967,9.070740,8.590067,0.595702,-5.027096,-4.816473,3.832148,-8.881959,7.708908,-3.484653,-5.068693,-5.885810,8.986026,9.558813,3.765093,2.288118,2.562815,4.632578,-2.171542,1.901211,-1.829425,8.864870,-3.130807,-8.961479,-6.441615,3.998109,7.460306,7.206428,8.273464,-6.399637,-4.473954,1.248972,-7.598484,-1.131226,3.767472,1.926805,-4.771403,8.426004,-3.767736,-6.158735,-3.810651,-5.034149,9.569331,-4.025323,-5.909236,-0.959935,-9.683158,-2.325855,-4.911833,-6.183585,-3.577878,3.462971,-1.962203,-9.117269,6.534772,-7.321312,-8.894322,7.960457,-1.488579,-7.283255,-0.275535,-5.311262,-3.199683,8.444081,5.235168,-7.480554,0.421643,-9.874799,-0.835814,4.602733,-9.938051,4.847066,-6.483151,-5.921524,-1.855436,0.568721,8.081789,-8.583132,-5.885420,-5.681444,7.168858,7.764743,3.341994,-1.537279,-5.404340,7.319165,4.751840,2.354418,4.277079,8.719701,8.202821,-3.176708,-6.302725,-3.301265,-7.741078,-4.580822,-0.626251,-9.344564,-9.447681,4.091809,-8.959829,2.914638,-5.203015,5.283343,-1.876621,3.920889,1.762476,8.478476,-3.737105,-5.318592,-3.800886,-8.337635,0.272783,-9.713499,-6.472442,-9.912675,-8.454113,-6.007494,2.923276,-5.899799,-7.056407,2.489008,4.382149,4.460944,-0.792118,-0.745422,7.722517,0.430735,-2.550292,-2.605578,-3.852200,0.602917,-1.641756,5.167413,-6.378156,1.128240,2.362628,-5.132854,7.780877,9.916232,-8.393949,5.523158,-8.422009,-1.828894,-5.716953,9.495336,4.349748,-2.654835,2.841267,1.991038,4.757489,-1.329888,6.841527,-1.331364,4.502681,8.680234,2.869333,5.846619,9.724276,-3.682816,-5.184777,-9.361655,1.000261,7.852795,-3.256412,-9.628813,9.978546,9.873769,1.641452,-2.406010,6.323271,-5.447089,-3.531149,-2.107023,5.359610,7.206800,5.123995,-6.108060,-6.812703,5.071310,-3.083594,1.803978,-7.464488,6.208590,-1.026350,-3.692877,1.066977,-3.579569,-8.210188,0.316605,-3.413824,3.628187,7.864457,-8.961275,1.072787,-8.733863,6.974967,-0.049236,-8.463580,1.389385,9.905675,-9.559628,6.744085,-1.297399,-9.309821,8.381402,-5.164479,-5.808229,-6.948466,-3.796390,-7.910288,-3.148601,-5.197183,9.690443,-4.497856,5.485612,1.434875,-9.464220,-2.869473,-2.503627,-7.355358,6.604283,4.725662,-5.463167,-7.677668,8.341001,-6.841047,-7.262037,-8.218953,2.639429,9.098288,-3.835626,2.949710,8.161020,5.175112,-3.279245,1.600769,5.124983,1.657133,8.369554,-7.499901,-4.057869,-5.419564,2.049562,-4.614223,1.987610,9.519565,-7.085996,-8.145832,-1.098369,-8.105955,0.598466,4.395711,-1.070223,0.315567,-5.150016,-0.520780,-9.714571,-2.312470,-0.531875,-5.720248,-7.664171,0.619238,-2.191251,-9.289210,-1.629717,3.761168,-6.376408,-3.561279,4.653965,-7.123765,1.934384,-5.429027,5.788792,9.489512,-9.079169,8.521550,4.190581,4.667355,-7.787658,-4.546963,-2.056128,7.597706,-8.397637,2.040075,7.131600,-3.543079,3.606158,-5.477328,1.765925,-4.815105,6.208176,-9.295649,-5.802118,8.127295,6.798050,8.519868,8.391537,-1.744488,-0.725172,-1.377929,-4.388359,-1.018741,3.786364,-6.666709,-0.257356,-4.231441,2.129211,-6.526399,2.458605,-0.318371,-8.841184,-0.114077,-8.041032,9.027992,3.149735,-6.732727,-7.079209,0.635342,5.032422,-3.291083,-5.536040,-5.145816,2.250971,7.662852,-9.352254,5.570822,-4.370968,-3.161464,3.044943,2.436851,0.862133,-6.244933,1.909633,-2.138590,4.325321,-1.542690,1.144876,3.754668,-7.899799,9.192963,3.059724,8.096102,5.972849,-0.466051,2.363507,4.058690,-4.882426,1.496162,8.171921,-5.260705,-8.600322,-9.201631,8.802976,2.768820,-7.854701,-4.648398,5.009346,5.606712,-3.339440,2.995707,-8.502150,-3.388348,-6.349786,-3.488236,5.621154,2.051367,1.662305,-8.812995,3.921615,-3.084146,-6.047915,5.803087,-4.631889,-7.261432,2.836195,4.420088,-8.145859,-9.362135,5.659566,-5.813133,4.314818,-4.405446,1.350186,-9.653057,-9.515217,4.469452,0.809310,6.950657,5.031671,-2.238485,0.802600,-2.610362,-8.092715,0.985915,7.326273,-9.069042,3.213543,-4.942947,8.654894,1.957944,8.750581,3.084626,-9.338538,2.699990,-5.082214,-0.121827,3.160508,-6.099088,3.634893,9.522811,7.844031,1.527996,-7.613480,-2.441595,-7.889200,-0.056889,-3.264903,9.917156,-1.806810,-9.411402,-6.667485,-6.816450,-9.554884,4.541064,-7.938015,-6.693168,8.576878,-1.963980,8.998607,6.990436,7.264104,-7.838390,0.992298,-9.350983,-8.079469,4.319247,8.555947,-8.761389,-0.127430,0.245684,-6.583049,-5.397248,8.843103,3.716679,2.707188,3.171404,-4.273391,-5.426700,4.962241,9.482346,-8.231204,-9.096191,3.775958,4.678600,0.678540,-0.678929,-2.283607,7.258916,-8.328737,7.405064,3.705028,-0.994708,-8.855651,-3.270464,2.395435,7.790274,-9.911952,8.701711,-1.578305,0.049655,0.126572,6.527929,-0.911885,6.130702,6.565472,9.661635,1.718214,5.153253,-1.828974,3.944781,4.654794,4.981923,1.714580,9.357633,3.535876,1.860896,7.950129,4.583432,6.132884,-0.988580,2.608146,1.757964,1.393653,-6.500766,-8.342093,0.110494,-9.661592,8.070879,2.299660,6.970714,4.834045,4.650677,5.564707,8.038394,7.754722,9.434432,4.705295,-5.148636,6.743328,-8.250605,-5.091446,-4.775369,0.253214,-8.958740,-1.324564,9.494409,-2.473491,-4.087983,7.144220,-7.281529,2.596376,3.795327,4.378524,9.861922,-4.428246,-8.593920,7.532873,0.458247,2.906031,2.184868,2.199311,3.891911,8.734586,2.197300,1.883103,-1.161250,-4.104620,5.083913,7.825413,-4.017570,9.953264,-0.133482,1.898873,9.419373,-1.553350,6.422948,8.908402,4.448685,-5.173895,-6.408350,4.028833,7.735249,-8.064962,1.869733,9.287992,-4.722814,-4.635056,-0.628136,-3.535667,-0.161999,-4.369190,1.379500,3.830504,5.668701,1.047995,5.505539,-8.744428,-0.931523,-4.485461,-2.811252,-5.937412,-8.211727,8.030884,-2.896865,-0.713255,-0.124627,-5.876681,-0.132407,7.498470,-0.532525,5.365215,0.512314,-2.920381,0.824655,1.980598,-3.872621,-5.496656,-4.653743,4.292493,9.316765,-5.251450,0.011610,2.988549,-7.882324,3.848070,-1.309460,-0.255544,-1.608072,6.178964,2.849750,0.026202,-5.482255,-7.229530,5.692629,-9.548890,9.163836,8.502916,4.977150,1.840437,4.611097,-3.360985,3.326132,3.120946,5.115763,0.445502,9.531009,0.367885,-7.790422,-2.276986,7.921867,0.207828,9.010851,6.029301,3.248170,-4.418055,7.013233,-5.600209,-9.213575,-2.667630,6.573444,-2.303149,-4.495880,-5.938522,-5.206229,9.138496,5.456267,-7.588107,0.626742,-9.645237,-9.340608,5.790122,5.893838,4.929610,6.651637,-8.622074,3.346682,9.088931,-2.941505,1.619623,-3.876060,-5.732466,6.464108,8.925943,3.199010,9.412172,-1.196462,1.575726,2.428947,3.168029,9.985800,8.156286,6.479130,-3.342754,-7.792019,-3.224951,-8.307080,5.179350,5.971343,-1.506294,-3.402686,6.813715,-7.504499,-6.442893,4.813907,-5.579844,0.724216,4.419396,-1.157133,-2.640815,9.639682,-6.453044,-6.156594,5.226623,-4.866516,-6.348179,-5.013206,2.121777,-5.894804,-0.326766,-0.472806,-2.350034,-4.452494,-1.910777,-5.952096,9.823079,8.800753,9.521116,6.961214,2.570835,2.049856,-9.466036,5.535518,-7.621787,-2.663535,2.967855,-0.498495,-1.367548,-2.439629,3.613154,-7.193018,-7.240787,-7.934781,4.189864,8.776730,8.950139,-1.075751,-4.638221,-3.550093,3.341646,4.801796,8.175941,2.384797,-1.391051,-3.046524,-3.184621,-8.751578,-9.832027,-4.764983,1.047383,-5.555399,-3.549043,-0.916870,7.520213,-2.597820,1.225485,9.118647,7.401421,2.801191,-0.057721,4.475657,-1.791291,-9.850992,5.379786,-2.526493,-3.372102,0.261720,4.990518,5.233515,-5.908588,1.801859,2.806842,-0.543780,3.601959,-4.566666,9.748611,-4.350864,3.325576,-0.401355,-7.805703,0.059367,-7.792824,3.928608,5.399414,-3.305119,-2.230157,7.231691,-2.208131,-0.375030,5.863955,-8.443004,0.746329,-1.062678,1.162902,1.582987,2.828192,-4.560523,8.102590,2.065158,-8.245469,0.258872,-5.972675,-9.731400,-0.048330,-9.449599,8.473083,5.306174,-6.916462,7.543531,-3.888575,4.136173,-4.646435,9.834293,5.569984,-8.222929,-8.790647,5.723827,-5.764306,-7.737603,-7.682997,7.894091,1.438801,-5.826096,-4.180291,6.988673,-8.468903,7.063655,-2.926920,2.308046,8.094767,1.331134,5.760431,-7.365713,-3.695202,-7.400703,-6.386877,-9.409252,-9.170360,8.246015,-9.604258,-0.959523,5.898912,3.562503,-1.643179,2.515582,-9.625290,-8.476763,5.714919,-2.924317,9.808894,0.470900,-4.738056,3.642882,-4.651376,7.175568,0.561112,-0.916111,5.866624,-7.724391,-6.995977,-0.922782,-3.269282,-2.585996,8.723682,3.291108,4.308971,-2.149501,-9.574759,7.697520,-5.511031,7.438404,-1.147401,-1.423424,-1.499651,4.404571,9.976283,5.147020,-7.208351,5.118554,-9.053752,-3.738327,0.741154,3.003200,-1.754865,6.441761,-8.207397,-6.259825,-4.952436,-5.090125,9.389094,2.986121,7.536002,-0.995123,-7.173535,-9.436453,-5.152765,-0.844129,7.212744,7.678615,-0.779187,7.778386,-8.992675,9.515869,-2.823472,8.156556,-9.717730,-0.959204,1.640343,7.164968,8.458247,9.370184,9.310958,7.591486,0.700624,-0.449262,7.798023,-6.402225,-2.922231,-0.172101,-1.629904,-2.592795,-6.667590,-5.983572,-8.542131,5.588684,2.397856,3.981728,0.683426,-8.927837,-1.615216,-0.298387,-4.507371,0.445653,6.684264,0.004758,3.605961,-6.727848,3.969272,2.934014,-7.161106,9.816478,4.981366,-4.854677,4.407979,-6.664955,-9.331877,-2.370219,5.289271,5.826283,8.406941,-3.415926,-9.623119,8.565660,-4.680942,7.174034,0.359851,-7.512661,-8.777205,3.847403,0.633151,3.452299,1.722811,-3.838166,6.908058,4.085719,1.964354,7.368655,-1.823512,9.140788,1.537542,3.978778,5.109508,-2.668447,6.411946,5.085941,4.768099,-0.320709,-5.166170,9.151161,-9.667262,5.658438,1.631094,0.607782,7.253247,-2.074590,-2.684883,3.469185,0.367989,7.277859,-4.064128,-7.392769,9.277540,-3.115564,3.917167,9.887680,-6.454635,4.349661,5.038407,2.121590,6.779911,8.135893,9.234220,4.546866,-8.282501,3.715339,-7.265983,-1.246056,-1.884662,7.110815,9.910594,4.026647,7.085248,4.341436,-9.707025,4.877830,-4.954911,5.780202,-9.869851,-2.116753,9.627686,2.278595,2.621176,4.641973,-5.616055,-8.316891,4.312687,1.713348,-6.893951,2.639679,4.816684,3.897970,8.262894,9.486823,7.385065,8.522894,-8.341714,-2.948878,-2.383545,7.037402,2.181606,-6.597332,-4.882895,0.931687,-3.377470,0.524334,-4.960272,8.253132,9.498083,2.544817,9.343296,0.325529,0.062592,5.232508,9.119760,-4.117070,-7.706927,7.503160,-3.965490,-4.877158,3.654298,-8.633124,-5.529968,9.926067,-2.532150,-6.394951,5.014190,3.115847,-8.782663,1.489364,-4.140893,-8.546092,-9.756735,3.409327,-9.147045,-6.603984,6.357334,2.898250,-7.328421,3.825101,1.323356,-1.220011,4.195259,7.296722,9.819228,0.077251,-2.819802,-9.797789,6.685065,2.193637,3.840155,4.146799,-7.294415,-6.615345,7.460403,-4.697636,-8.654972,-7.721913,-6.623971,4.732866,-0.776545,0.968461,-1.217385,8.815420,5.486559,3.490551,-0.709908,0.140740,-3.551059,-0.029925,7.774641,-5.541850,3.879148,7.409772,2.549287,0.602714,5.191959,-0.669387,7.831879,1.500321,4.820111,1.622551,0.431307,-7.857459,2.842342,-8.967774,4.880567,-6.520408,4.565502,7.204278,-1.118231,-6.252018,5.774880,7.989014,-3.620709,-6.541357,1.110375,-8.211037,-3.400837,-2.984842,9.090787,2.074276,-1.358736,6.983695,8.380368,-3.949935,-2.349879,-8.494840,4.670771,-4.590077,-7.888154,8.503842,-9.103525,7.005662,8.283791,-8.286206,-9.529231,2.262582,0.226272,-3.036932,5.305001,-2.019346,2.283940,-7.973238,-7.623727,-1.291542,0.408964,0.596984,2.215164,-1.026031,-5.653431,4.991463,-6.711609,1.171633,-9.658287,6.914715,-1.190811,0.957770,-1.705351,0.649412,-5.526949,4.396847,6.513446,6.689416,1.397631,5.293851,8.201168,-3.086381,-8.149261,5.282300,9.217258,-7.946448,2.086262,7.570903,0.003791,-7.744738,0.191388,8.030469,-1.412749,4.815489,6.646031,-9.202823,-4.122877,-6.847448,-9.529860,7.371859,-7.370586,-2.773057,0.320034,0.450385,-6.162467,-0.404158,-1.597088,-2.847300,-2.021303,-0.666392,2.650855,-8.657610,-7.278922,-2.204972,5.272321,-8.305756,6.359634,7.553446,4.826314,-4.333465,-9.852979,0.127326,-3.288293,-3.977421,1.900128,-2.933597,5.034135,-9.002689,-5.978191,-1.437873,-1.593112,4.454904,4.447466,-8.508737,-9.134761,-1.879538,5.330942,0.578770,-6.152700,0.499894,-7.392898,-2.747177,-8.439511,4.944103,9.796602,-5.041276,4.114919,9.370851,-4.524491,4.158690,-1.948069,-1.653090,5.285180,-3.626224,2.574291,2.952324,1.536747,7.494458,0.833865,-0.819102,-1.179667,-0.887413,8.355136,6.463800,-0.003712,-1.578413,-4.454099,-4.813708,-8.711600,9.824516,-0.075772,8.263202,-2.756831,-1.107003,-6.036685,-5.660676,5.845422,-2.502857,0.850513,6.791677,-7.737519,-0.340452,-3.939489,-5.812510,9.628802,-3.654491,-4.746742,-9.587571,-4.273220,-4.930274,2.382242,3.850497,-0.240495,1.560703,4.967548,7.911515,-5.181443,1.150740,-1.142287,1.107732,3.003536,-1.270655,-7.039354,0.339345,6.798591,0.740181,-0.173911,5.205563,-8.359140,-2.783689,8.009700,3.719524,-1.644070,-4.374506,-1.783982,-3.683940,2.525236,2.321606,5.144122,-2.556390,1.391528,-1.074099,5.273140,-9.674271,-3.115925,8.242153,-9.410608,-1.622994,0.638676,1.214380,-3.810553,-8.661143,-0.943876,2.859945,-8.421481,-5.543995,2.088400,6.733107,2.339493,-2.422441,3.165497,6.033444,-0.882675,-3.991301,5.525166,7.528232,8.084957,9.608848,-8.287831,-7.740190,7.246873,-5.422655,8.054904,3.519411,1.967345,-0.739613,8.185812,-0.446799,5.009085,-7.429427,-4.436129,7.575273,1.451234,-0.097762,6.196127,-5.285923,1.560913,-9.590835,-0.663875,5.983989,8.984273,-3.446282,-1.727691,1.881575,6.795607,-6.814613,0.861518,-9.821007,-5.403670,-9.978920,1.572964,-8.434191,2.426312,6.528659,-2.411091,0.618318,-9.149996,1.573416,-8.138337,1.694968,-2.103948,-2.909978,7.699681,-7.703465,7.452083,6.419665,1.608342,1.596090,-8.448061,-8.596628,-3.311039,8.687560,-9.592406,4.120380,4.127469,-6.668181,-7.816019,9.677087,4.994819,5.331436,1.998751,6.249708,2.981507,2.254453,1.986202,-0.700888,-2.592948,7.656661,-3.896647,0.475285,4.300871,2.829831,-9.698550,1.580240,-5.760825,-5.744692,4.933869,-6.659676,8.031192,5.965411,-8.208925,-8.207026,6.236746,3.894344,-4.305960,8.929974,-7.910462,1.014250,4.456618,2.125714,1.528332,5.736254,6.471048,4.342129,-3.034953,-5.796062,7.090425,9.846747,-7.599223,-0.777075,5.586284,-8.145778,1.654553,2.762129,-6.748690,-1.633931,-3.353638,-6.291341,-3.182419,-3.714886,-0.134736,9.935705,9.108661,-9.821792,4.415837,-2.166763,-8.427763,-0.975520,-1.612661,4.861581,-2.643094,1.870721,7.317859,2.015918,1.631738,-4.762483,-7.222932,1.325768,-4.185415,4.593310,5.618605,2.762143,-2.773896,9.440256,9.860476,2.522253,-1.332303,-1.804899,-5.003515,6.864661,-3.262376,-9.895049,6.318235,-9.014238,7.025183,7.513398,-9.120171,7.690992,5.530540,6.561503,2.655246,-7.855784,8.789695,3.992133,-7.645606,-5.027529,6.081041,5.281095,-9.221448,-7.355734,6.232213,-7.467415,-6.334321,-8.490627,-2.270561,-2.394772,-8.055669,-6.395154,-6.925404,-1.102993,-1.762760,9.647700,5.690336,7.427323,-5.866608,1.259853,7.322336,1.730763,4.050452,3.812935,-3.232405,5.536483,7.137776,-8.056915,-6.518369,-5.087307,9.393563,-3.940878,0.638421,2.219581,5.986503,8.799879,-5.709217,6.984220,3.314626,-7.091553,-1.616085,-6.268465,8.349016,1.605054,9.722970,-4.678631,3.633405,3.054787,-0.440474,6.157330,-5.340541,1.496915,3.819461,-2.225046,0.263113,-1.717977,8.152849,6.433246,-2.854318,-3.038504,5.183952,-5.435362,4.145202,2.522928,-7.328488,2.868978,1.593195,-2.828887,7.938405,8.149493,7.235581,4.501074,7.889361,4.880754,2.744352,6.596141,-0.632816,-5.975103,-1.673652,-4.706290,-6.494694,2.458434,-9.694758,-5.983997,-2.152951,-2.708691,-6.359619,-2.535480,2.019551,0.924236,0.912379,9.322826,-3.453016,9.673170,7.510608,-2.851442,-7.353716,3.088013,1.086006,-8.123138,-4.756092,9.229720,-5.835217,-2.452882,1.492138,9.354201,-7.123493,-7.312058,-2.930536,5.705006,6.955068,7.374721,1.358379,-7.778749,-0.328124,7.119233,-2.337222,6.428218,-9.463108,-5.789894,1.527724,6.195958,-4.757196,0.031210,1.242925,-9.192724,-7.016363,-7.186913,-9.517323,-4.319989,-6.416916,2.867688,-2.538902,9.593024,-8.351545,-6.330956,7.860705,-2.388098,8.062199,-8.432040,-9.216611,-2.015586,-9.330798,5.201323,4.830382,-7.842605,9.078819,-3.339337,-0.545038,-4.802758,9.385260,9.102930,-4.024461,-3.586140,1.446061,9.733612,9.275781,-8.898276,-8.524212,7.639056,8.482194,1.904022,1.648963,-8.835298,-9.878247,3.689138,4.155991,-2.216551,-2.942998,0.360544,-1.647483,2.213934,-6.263568,3.746929,1.716918,4.993867,-6.086738,6.944200,-2.828535,-9.367639,0.624004,9.419818,-3.042691,-9.973832,-1.596152,-3.232388,-7.178148,6.180318,0.098719,-4.011290,8.856558,9.432921,-7.203070,6.110274,-7.494068,0.875284,0.967703,-1.873061,0.027223,-9.390454,-0.043111,-9.011308,9.890083,-8.938099,-9.862992,7.695416,-1.431602,-2.341669,-8.578091,5.855728,5.921636,-4.026059,5.763647,-2.200932,3.016791,8.699179,0.403114,5.847490,1.473008,7.210258,-9.438978,1.843037,7.297669,7.615289,2.281931,-5.195467,-2.342490,-2.785955,7.753344,-0.150804,2.765515,-2.586275,7.038622,6.286886,0.519040,-9.517429,-2.913654,-2.615435,4.920792,1.874938,1.649684,1.082620,-1.923038,4.163550,-9.609421,-6.613488,0.619975,-2.951741,-3.407923,6.194387,-9.405721,9.352718,5.744418,-9.585982,-9.702340,-9.079007,0.186457,9.195193,6.885353,0.892356,-4.230305,3.634880,0.176892,-1.245194,-7.430721,0.628697,0.461455,8.815012,8.032006,-2.288729,3.159221,1.347051,-1.053879,-8.806531,6.528537,-4.346785,3.247469,-7.813811,0.078900,4.378685,-4.245621,3.204192,4.772248,7.849875,-4.452329,-9.388261,-1.870858,1.589166,-9.797203,-2.375587,9.061532,7.649665,-7.068371,2.179806,-5.038145,9.533593,-3.684096,3.984809,0.445967,-1.799782,-0.225689,4.602041,-2.287625,7.623431,-5.016967,-3.360088,-7.900765,4.150242,3.227327,0.522675,8.740826,6.837547,4.549748,2.876713,8.677657,-7.699446,0.105511,-3.606662,-6.158168,-8.515980,4.614827,1.494272,9.702635,-3.272548,0.910433,-2.203429,4.608973,-5.755808,-4.267646,0.752652,5.520696,2.959518,-7.052174,-0.264059,-3.681965,6.175823,-9.031708,8.615502,4.175866,-3.167816,0.133229,6.263278,-2.107499,6.990684,-0.411217,-3.941814,8.289972,-1.350782,5.020719,-1.379804,4.334818,3.172544,-0.734922,1.329037,1.244580,3.897836,4.843000,4.922728,-6.086822,-4.879489,0.940375,2.915618,7.008093,-4.454022,-5.632920,-3.243586,0.148108,0.576471,-3.603731,2.810283,7.957760,1.510705,-5.346973,-3.089628,8.646305,2.272722,-7.704862,3.276460,-2.193648,-0.940800,0.238749,-4.069097,4.155049,-6.293061,7.781436,6.502612,-0.469612,7.215364,9.893521,-3.652186,-2.726530,0.148470,-4.938293,-5.743511,0.128792,3.404559,0.392826,5.009299,-9.899510,5.550878,1.591830,-6.101036,3.827267,-1.321311,7.369748,5.808856,-3.665135,-9.537231,-0.309758,1.201082,-2.529848,-8.552887,8.699829,-4.370161,4.751057,7.021938,-8.102422,0.916727,4.463526,-1.004409,-1.699671,-2.604580,-9.715252,5.880428,-6.858560,-3.065757,2.945489,-4.994915,-5.609182,-4.864657,-6.180711,7.788434,2.048650,-9.656763,-6.882046,-7.751200,2.410401,-5.621391,6.049330,-1.801719,-2.761674,-9.925793,0.401007,-5.065485,3.337609,1.457349,-4.543676,-0.807852,2.887948,-1.829166,8.019385,-6.659857,-3.572791,6.228726,-8.854692,1.949439,-0.534995,1.439052,-3.487893,-0.568912,-6.986279,-0.442866,-7.334303,9.573330,6.649122,7.449514,-3.328104,7.696027,-5.370516,-0.074457,-6.734097,-5.716859,-3.887043,-5.225787,6.599420,-9.925508,4.567408,9.857549,-1.433813,7.861753,-4.934926,-9.797434,4.762650,7.057167,-7.228657,-8.866439,6.716854,-3.267254,-7.926746,2.684398,0.042737,-9.868744,-5.285912,-9.452869,-0.476995,-4.459062,-3.318194,5.849326,0.687281,-8.804335,-4.535947,-2.612493,4.766025,4.197252,-1.281494,7.734973,8.295500,-5.666794,0.773694,-9.964770,-9.061494,1.895946,3.247247,-9.625826,4.244714,8.668286,-9.397350,-0.594354,-3.412495,0.438550,-4.188081,-4.830348,-0.649281,7.544594,5.665590,0.283532,-5.828443,-6.985532,9.208269,-4.422573,1.960340,9.089115,-8.679221,6.938638,6.494798,4.566200,-0.863163,0.404459,-4.105597,-9.156818,-9.238055,9.408183,-0.161682,6.936098,5.790148,2.118413,6.603202,-1.038859,-2.528922,-5.089181,-2.122025,0.561924,4.387858,-4.740200,6.637847,2.642976,-1.406210,-5.256448,-0.540204,3.441577,-7.467117,4.765676,2.490644,0.987940,5.936157,3.514579,7.407118,-3.555349,-7.895217,-4.012432,-1.628577,8.823912,-7.281990,3.459082,3.274887,-0.487454,6.294211,7.985822,7.509114,-3.802151,-3.237014,5.110460,-5.281636,-5.540223,-5.485434,-5.535533,-4.060993,6.842993,-7.232183,-2.727353,6.464603,7.769416,-3.569408,3.256510,1.817970,-1.866880,-1.028596,8.589169,-5.129271,6.120330,-1.379899,9.056186,1.167300,9.004058,7.074752,-6.827632,0.071326,-1.064383,-4.438662,8.408440,3.758920,-2.808011,5.576381,2.314195,8.909474,-1.474376,-4.101551,5.077433,8.548161,6.979954,-0.857975,4.272793,6.840591,6.210525,-0.775836,0.464659,-9.764222,8.706192,3.745950,0.367535,8.124104,-1.134756,4.824004,4.023577,0.196025,-3.015870,-8.016524,1.556603,5.899562,-5.764454,4.653843,3.979279,2.435967,-0.398006,0.273410,8.957747,2.583897,1.982294,4.890728,2.283373,4.601460,-2.674148,-4.329757,-1.131607,-8.810608,9.567727,-9.257064,-6.857931,9.606173,8.415709,-1.048335,2.384165,-8.878685,8.380601,8.298142,-5.121360,-9.274287,8.609239,-8.065160,-3.223197,-6.907520,9.356533,-6.274547,-4.816062,-3.916288,9.620558,-6.003148,-7.235582,4.978308,9.803383,3.465580,3.501250,-5.002055,-5.535281,-7.485040,-4.072477,-8.356697,-9.353340,9.599494,-2.559742,-6.643358,-6.558071,-9.031987,1.187228,-4.322293,-4.316037,1.037250,1.697761,-0.192194,-5.610835,-0.166920,2.424054,-0.891179,-3.772226,-5.064533,6.812155,-0.669411,-8.018491,8.911062,-1.854248,-5.529460,9.335530,-1.652890,9.958198,-0.695047,-2.676948,-3.606859,7.704071,1.595551,-9.336081,-3.287753,-7.708433,-9.484947,4.944359,-6.436477,1.431051,-7.767750,-3.115610,-5.124153,-9.752983,-4.608858,2.137584,-6.621732,3.474602,-6.349679,-8.407022,-5.840686,3.877354,0.983650,-9.018419,-3.977965,-7.576710,-2.112163,-2.962740,-6.037992,3.413593,6.427116,-6.934856,3.210823,1.880780,7.821558,-6.635763,-7.320652,-9.956784,-3.628443,1.982584,6.340843,4.025138,5.074951,-7.224890,-3.127285,-1.962538,-1.365774,-9.593124,-9.161188,-9.413333,2.904020,6.430996,-2.382970,6.671534,-8.161096,-4.163192,-3.777371,3.044946,3.599347,0.879716,5.729332,1.507638,-5.396875,2.265034,4.727364,4.167518,-8.476466,-6.812221,-1.144408,8.860407,-0.992673,-1.939434,-2.638206,-5.882335,7.410900,4.839149,1.567553,5.966360,-2.505817,6.600840,-3.301565,-2.463542,3.569719,4.862269,-8.221232,0.054260,-5.620237,1.509578,1.540780,-1.285023,-5.348719,-4.745188,-7.741458,1.922132,-1.517792,-4.863910,0.078211,-9.776349,7.106773,0.582467,-5.847412,7.367579,-7.307771,7.100263,-5.876047,6.093413,-9.829877,5.277653,4.960996,5.750903,5.373124,-5.013915,7.673182,9.215667,-8.159584,-3.027721,5.631659,-0.744531,4.826446,-6.752946,0.152420,-5.066826,8.149749,4.936877,-0.108597,-6.288079,-9.155580,9.865538,8.717728,8.124963,4.927942,3.323028,2.963173,-8.120976,6.552499,-7.893118,-0.123603,-1.844892,-9.326261,-2.968288,2.884260,-8.720540,8.917143,0.687163,3.342990,7.672126,-7.317299,8.620602,-1.366140,-1.901609,-5.447675,-5.277894,4.660836,-8.389628,-0.779964,6.119942,-8.271742,-5.631922,4.609159,-0.832207,-1.234709,6.031117,-6.413348,-2.439952,-6.956292,1.195653,4.122845,-4.341404,-6.831819,9.897349,5.119130,-3.131617,-6.937408,-6.738776,-0.493883,-4.638197,-7.815004,-3.973179,0.372280,6.587518,9.280162,-5.197639,-0.873758,-8.633666,-6.544622,-3.084197,-1.274017,3.498736,0.662123,-1.810132,-4.628252,-2.029772,-1.891319,-3.668119,8.036230,0.783559,-6.614222,1.431811,-9.342248,1.047109,4.786531,6.710809,5.862390,3.076001,-3.450314,-3.875358,-7.830979,1.967897,9.952026,-7.598826,6.631083,-2.239303,-1.500551,-9.539320,5.867824,2.601484,6.220548,-3.346047,5.227184,5.871079,0.046641,-0.361774,-6.756846,-5.316666,0.809909,-8.397837,-6.598855,-9.953779,5.889331,-7.327845,2.666218,7.539642,-2.147403,0.825468,8.668200,0.656882,-6.895836,8.586228,0.174669,5.712893,-9.697765,5.753356,-5.554047,0.197929,-7.634627,-9.813878,7.099321,5.499235,9.554129,7.307850,4.715399,9.790438,3.870704,7.657387,-8.786601,1.148418,-7.956411,7.357586,1.791265,-9.594946,-4.387744,7.815705,7.289520,6.295152,8.178867,6.597789,0.426141,-5.244939,9.022980,4.775033,-1.384335,4.010381,6.704224,5.911608,2.959881,8.201301,-2.605254,-3.362653,2.907134,-4.080524,-1.202506,2.370941,-3.624378,-0.272019,4.263332,9.439072,6.572102,3.067107,-2.144939,6.565967,-2.358457,4.518640,7.413752,-7.693092,-9.073751,8.138149,9.554781,-8.541614,-0.818959,0.244931,4.427015,-7.553508,3.429733,7.690257,-0.807879,-5.006973,9.964387,-2.047158,7.598826,7.517661,4.379421,-1.788120,-7.551712,8.922815,-9.803593,-8.306540,8.228914,-1.882908,-8.660358,-5.148716,-9.090434,-0.646647,7.621575,-6.490560,9.095350,-3.057317,-5.505523,0.528613,6.966285,4.558266,-7.535581,1.881941,-3.003312,-3.522224,-8.455562,-0.965756,9.545234,-1.945713,5.699001,3.245068,9.080568,6.313777,3.028832,-0.666760,7.453023,-0.405141,6.203951,-1.773623,8.169595,2.744690,6.688028,-6.314527,-4.339338,8.463606,4.912223,-4.395319,-1.555090,-6.876011,4.588169,1.978410,-8.694184,-8.945566,9.060312,-0.072787,8.880232,-4.525415,6.930650,-4.008354,-5.693992,9.447156,-1.487382,-4.122759,8.290242,-0.366336,8.444299,-7.805520,3.222281,7.199471,7.817707,2.294738,1.213802,7.413204,-8.000124,-8.969510,-8.834778,-0.188164,-0.010836,8.305594,2.714443], dtype = "float32")#candidate|6972|(3136,)|const|float32
call_6971 = relay.TupleGetItem(func_2300_call(relay.reshape(const_6972.astype('float32'), [16, 14, 14])), 0)
call_6973 = relay.TupleGetItem(func_2302_call(relay.reshape(const_6972.astype('float32'), [16, 14, 14])), 0)
func_3257_call = mod.get_global_var('func_3257')
func_3258_call = mutated_mod.get_global_var('func_3258')
call_6978 = func_3257_call()
call_6979 = func_3257_call()
output = relay.Tuple([call_6948,call_6971,const_6972,call_6978,])
output2 = relay.Tuple([call_6949,call_6973,const_6972,call_6979,])
func_6980 = relay.Function([], output)
mod['func_6980'] = func_6980
mod = relay.transform.InferType()(mod)
output = func_6980()
func_6981 = relay.Function([], output)
mutated_mod['func_6981'] = func_6981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_7041 = relay.TupleGetItem(func_4972_call(), 0)
call_7042 = relay.TupleGetItem(func_4974_call(), 0)
output = call_7041
output2 = call_7042
func_7070 = relay.Function([], output)
mod['func_7070'] = func_7070
mod = relay.transform.InferType()(mod)
output = func_7070()
func_7071 = relay.Function([], output)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mod.get_global_var('func_5807')
func_5808_call = mutated_mod.get_global_var('func_5808')
call_7080 = relay.TupleGetItem(func_5807_call(), 0)
call_7081 = relay.TupleGetItem(func_5808_call(), 0)
output = relay.Tuple([call_7080,])
output2 = relay.Tuple([call_7081,])
func_7096 = relay.Function([], output)
mod['func_7096'] = func_7096
mod = relay.transform.InferType()(mod)
output = func_7096()
func_7097 = relay.Function([], output)
mutated_mod['func_7097'] = func_7097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_7102 = func_3012_call()
call_7103 = func_3012_call()
func_4463_call = mod.get_global_var('func_4463')
func_4468_call = mutated_mod.get_global_var('func_4468')
var_7114 = relay.var("var_7114", dtype = "float64", shape = (1, 540))#candidate|7114|(1, 540)|var|float64
var_7115 = relay.var("var_7115", dtype = "uint16", shape = ())#candidate|7115|()|var|uint16
call_7113 = relay.TupleGetItem(func_4463_call(relay.reshape(var_7114.astype('float64'), [3, 180]), relay.reshape(call_7102.astype('int8'), [156,]), relay.reshape(var_7115.astype('uint16'), []), ), 8)
call_7116 = relay.TupleGetItem(func_4468_call(relay.reshape(var_7114.astype('float64'), [3, 180]), relay.reshape(call_7102.astype('int8'), [156,]), relay.reshape(var_7115.astype('uint16'), []), ), 8)
func_2748_call = mod.get_global_var('func_2748')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_7120 = relay.TupleGetItem(func_2748_call(relay.reshape(var_7114.astype('float64'), [3, 180])), 0)
call_7121 = relay.TupleGetItem(func_2751_call(relay.reshape(var_7114.astype('float64'), [3, 180])), 0)
func_4852_call = mod.get_global_var('func_4852')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_7136 = func_4852_call()
call_7137 = func_4852_call()
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
const_7149 = relay.const([8.764005,0.418302,9.901413,6.084483,0.345120,-8.125956,7.292176,-8.570950,-1.142667,-7.682556,3.911809,1.760349,3.059186,5.095943,7.496178,9.764068,0.267584,-0.579503,-8.867044,5.885536,-1.438521,3.625165,8.995884,-1.617997,-8.559085,5.480176,-3.657474,4.756526,-2.026418,4.112242,-3.371862,-2.141995,4.093645,-2.995438,1.251092,-4.165765,5.459638,4.871822,2.364166,4.711524,-1.404337,5.556507,1.626484,-5.771704,9.271560,1.957449,-8.892934,4.974782,9.983224,1.227155,5.805242,-7.511509,9.435152,8.659218,4.543520,-4.856525,1.449166,1.718988,3.427453,-9.217345,6.018268,-7.317905,-5.026900,2.206015,-5.660262,-9.861243,-1.609666,-8.040763,-4.387342,6.915499,-9.495843,2.573371,9.808511,9.361843,-1.774270,-7.814455,0.497731,8.173183,-1.235377,3.673713,7.568016,6.569184,8.068803,-5.799831,0.718887,8.542608,9.099598,-6.392779,6.271933,5.987316,5.428848,2.686431,5.562544,-3.980997,-3.004922,-8.339742,2.049623,3.222432,7.210444,-6.685376,6.353018,0.925444,-6.649288,-5.091050,5.563182,4.422476,7.736332,0.828163,7.741664,-3.298367,-7.467621,-7.407502,-3.681970,-3.663705,9.421716,1.203642,-6.682449,6.348945,-6.900625,4.435198,-1.793935,-8.330689,8.688132,-5.480424,-1.389140,-1.974390,8.289338,-3.511003,9.135633,5.184930,-6.750649,6.852896,1.982771,1.074504,-0.552404,8.485449,-1.494841,-6.708832,-5.322075,-7.130168,-2.157755,7.408497,9.210237,1.744782], dtype = "float64")#candidate|7149|(144,)|const|float64
call_7148 = relay.TupleGetItem(func_6550_call(relay.reshape(const_7149.astype('float64'), [4, 12, 3])), 3)
call_7150 = relay.TupleGetItem(func_6552_call(relay.reshape(const_7149.astype('float64'), [4, 12, 3])), 3)
output = relay.Tuple([call_7102,call_7113,var_7114,var_7115,call_7120,call_7136,call_7148,const_7149,])
output2 = relay.Tuple([call_7103,call_7116,var_7114,var_7115,call_7121,call_7137,call_7150,const_7149,])
func_7158 = relay.Function([var_7114,var_7115,], output)
mod['func_7158'] = func_7158
mod = relay.transform.InferType()(mod)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7158_call = mutated_mod.get_global_var('func_7158')
var_7160 = relay.var("var_7160", dtype = "float64", shape = (1, 540))#candidate|7160|(1, 540)|var|float64
var_7161 = relay.var("var_7161", dtype = "uint16", shape = ())#candidate|7161|()|var|uint16
call_7159 = func_7158_call(var_7160,var_7161,)
output = call_7159
func_7162 = relay.Function([var_7160,var_7161,], output)
mutated_mod['func_7162'] = func_7162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_7178 = func_2822_call()
call_7179 = func_2822_call()
var_7180 = relay.var("var_7180", dtype = "int8", shape = (6, 13, 2))#candidate|7180|(6, 13, 2)|var|int8
bop_7181 = relay.bitwise_and(call_7178.astype('uint32'), relay.reshape(var_7180.astype('uint32'), relay.shape_of(call_7178))) # shape=(6, 13, 2)
bop_7184 = relay.bitwise_and(call_7179.astype('uint32'), relay.reshape(var_7180.astype('uint32'), relay.shape_of(call_7179))) # shape=(6, 13, 2)
output = bop_7181
output2 = bop_7184
func_7188 = relay.Function([var_7180,], output)
mod['func_7188'] = func_7188
mod = relay.transform.InferType()(mod)
var_7189 = relay.var("var_7189", dtype = "int8", shape = (6, 13, 2))#candidate|7189|(6, 13, 2)|var|int8
output = func_7188(var_7189)
func_7190 = relay.Function([var_7189], output)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6793_call = mod.get_global_var('func_6793')
func_6794_call = mutated_mod.get_global_var('func_6794')
call_7192 = relay.TupleGetItem(func_6793_call(), 0)
call_7193 = relay.TupleGetItem(func_6794_call(), 0)
func_4526_call = mod.get_global_var('func_4526')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_7233 = relay.TupleGetItem(func_4526_call(), 1)
call_7234 = relay.TupleGetItem(func_4528_call(), 1)
output = relay.Tuple([call_7192,call_7233,])
output2 = relay.Tuple([call_7193,call_7234,])
func_7242 = relay.Function([], output)
mod['func_7242'] = func_7242
mod = relay.transform.InferType()(mod)
mutated_mod['func_7242'] = func_7242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7242_call = mutated_mod.get_global_var('func_7242')
call_7243 = func_7242_call()
output = call_7243
func_7244 = relay.Function([], output)
mutated_mod['func_7244'] = func_7244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3481_call = mod.get_global_var('func_3481')
func_3482_call = mutated_mod.get_global_var('func_3482')
call_7254 = func_3481_call()
call_7255 = func_3481_call()
output = call_7254
output2 = call_7255
func_7264 = relay.Function([], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
mutated_mod['func_7264'] = func_7264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7264_call = mutated_mod.get_global_var('func_7264')
call_7265 = func_7264_call()
output = call_7265
func_7266 = relay.Function([], output)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2884_call = mod.get_global_var('func_2884')
func_2885_call = mutated_mod.get_global_var('func_2885')
call_7272 = relay.TupleGetItem(func_2884_call(), 0)
call_7273 = relay.TupleGetItem(func_2885_call(), 0)
output = relay.Tuple([call_7272,])
output2 = relay.Tuple([call_7273,])
func_7274 = relay.Function([], output)
mod['func_7274'] = func_7274
mod = relay.transform.InferType()(mod)
mutated_mod['func_7274'] = func_7274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mutated_mod.get_global_var('func_7274')
call_7275 = func_7274_call()
output = call_7275
func_7276 = relay.Function([], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7302 = relay.var("var_7302", dtype = "float64", shape = (13, 4, 16))#candidate|7302|(13, 4, 16)|var|float64
uop_7303 = relay.cosh(var_7302.astype('float64')) # shape=(13, 4, 16)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_7321 = relay.TupleGetItem(func_4177_call(), 0)
call_7322 = relay.TupleGetItem(func_4179_call(), 0)
uop_7329 = relay.asin(uop_7303.astype('float32')) # shape=(13, 4, 16)
output = relay.Tuple([call_7321,uop_7329,])
output2 = relay.Tuple([call_7322,uop_7329,])
func_7347 = relay.Function([var_7302,], output)
mod['func_7347'] = func_7347
mod = relay.transform.InferType()(mod)
mutated_mod['func_7347'] = func_7347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7348 = relay.var("var_7348", dtype = "float64", shape = (13, 4, 16))#candidate|7348|(13, 4, 16)|var|float64
func_7347_call = mutated_mod.get_global_var('func_7347')
call_7349 = func_7347_call(var_7348)
output = call_7349
func_7350 = relay.Function([var_7348], output)
mutated_mod['func_7350'] = func_7350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6117_call = mod.get_global_var('func_6117')
func_6118_call = mutated_mod.get_global_var('func_6118')
call_7399 = func_6117_call()
call_7400 = func_6117_call()
func_5948_call = mod.get_global_var('func_5948')
func_5951_call = mutated_mod.get_global_var('func_5951')
var_7402 = relay.var("var_7402", dtype = "float64", shape = (2080,))#candidate|7402|(2080,)|var|float64
const_7403 = relay.const([0.099062,-1.230321,-2.824753,-6.878112,3.994931,6.467651,-0.753652,4.271790,-3.144038,-7.531650,4.317692,-6.386244,-4.133709,-8.937375,3.544387,5.625355,-8.597839,2.744278,-0.725101,2.153171,-1.886969,2.695928,-5.614740,-6.935222,-3.201900,-4.609604,-4.550602,-5.162351,-2.266790,-4.434656,-1.862063,3.276218,-5.917663,5.918720,-5.950252,-3.544864,-1.615665,0.581486,-4.771887,1.787169,7.255507,-1.604572,-6.222442,-4.816988,-6.994014,-8.288516,-9.128013,2.572934,2.891147,4.981796,2.188974,-1.334351,6.298331,7.671918,8.326185,6.124841,-2.414292,2.611490,-1.090109,0.537192,-2.622860,4.647854,1.960821,7.498484,-1.443735,2.971001,2.554716,1.981973,4.855584,-3.005861,8.370982,0.344743,-6.728927,-3.246111,3.250035,6.443212,-9.753737,-4.153874,5.012479,-5.123753,2.849022,-9.785772,0.757269,2.809383,-8.868008,-3.009373,0.409313,4.353864,-4.542824,-1.325641,6.708280,2.928952,3.820713,-2.525985,-5.563050,-6.603729,-0.230789,-5.880212,-0.661337,-3.346206,3.066068,-0.307986,2.253150,-6.090513,4.127997,2.400725,-9.536174,-1.967157,-0.607681,5.777085,3.311856,-9.264828,-1.360836,-6.871706,2.718569,0.327741,2.310016,6.750591,9.992909,-0.904561], dtype = "float64")#candidate|7403|(120,)|const|float64
call_7401 = relay.TupleGetItem(func_5948_call(relay.reshape(var_7402.astype('float64'), [13, 16, 10]), relay.reshape(const_7403.astype('float64'), [120,]), ), 2)
call_7404 = relay.TupleGetItem(func_5951_call(relay.reshape(var_7402.astype('float64'), [13, 16, 10]), relay.reshape(const_7403.astype('float64'), [120,]), ), 2)
output = relay.Tuple([call_7399,call_7401,var_7402,const_7403,])
output2 = relay.Tuple([call_7400,call_7404,var_7402,const_7403,])
func_7410 = relay.Function([var_7402,], output)
mod['func_7410'] = func_7410
mod = relay.transform.InferType()(mod)
var_7411 = relay.var("var_7411", dtype = "float64", shape = (2080,))#candidate|7411|(2080,)|var|float64
output = func_7410(var_7411)
func_7412 = relay.Function([var_7411], output)
mutated_mod['func_7412'] = func_7412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7488 = relay.var("var_7488", dtype = "uint32", shape = (10, 15, 11))#candidate|7488|(10, 15, 11)|var|uint32
const_7489 = relay.const([[[7,-4,9,2,-4,3,-9,10,-7,5,3],[-10,2,3,4,-7,-5,-5,-9,-6,-4,-8],[-7,4,1,-7,-7,1,1,-9,9,-5,6],[-1,-6,7,7,3,-4,-9,6,1,4,-3],[5,-7,9,-1,3,10,-8,-9,2,10,-9],[-5,6,8,-10,-3,2,-9,4,-6,1,-6],[4,-3,-7,4,-3,-1,-5,-9,10,1,-3],[-5,-10,6,8,2,9,-8,-8,4,-1,10],[-4,2,10,7,6,4,4,9,4,-4,7],[-1,6,6,-10,5,5,7,-3,-1,-10,-6],[5,-8,7,3,-6,8,-2,9,-1,6,-6],[-1,9,9,-5,4,10,-10,-6,8,-9,-3],[-1,3,-1,-7,-1,-7,8,-2,10,-4,9],[-5,7,6,2,-9,4,-6,-10,-1,9,3],[-3,-10,-2,1,-8,-6,-4,3,4,8,3]],[[-4,-6,5,-2,-3,-3,7,-7,7,-9,-2],[-5,-8,6,-6,1,-3,-4,10,-7,2,8],[-7,2,-2,-7,1,-9,3,-4,-8,9,-1],[2,-1,-6,10,4,9,-1,6,-5,-2,-5],[-10,3,5,-1,-5,8,1,10,-8,-9,10],[-9,-8,3,-1,-4,-9,-10,9,3,-2,1],[-6,5,3,2,3,-10,-8,-2,3,-1,-5],[9,10,-9,2,6,-8,2,4,-7,-7,-10],[9,-5,8,-7,5,-6,-5,-9,-4,4,7],[-3,2,-10,6,6,-1,-10,-5,3,-10,-6],[5,-3,-10,1,7,-10,4,9,-9,-7,-6],[-1,-3,-2,3,-9,3,7,3,1,-2,8],[-1,3,-2,2,7,-8,8,-3,-7,-1,-6],[-4,-6,8,5,1,-5,-8,7,4,5,-2],[3,4,-8,8,1,3,-6,5,-9,7,-1]],[[2,7,1,9,5,-1,-9,3,-6,-1,4],[-2,-1,3,6,5,5,-5,3,2,-3,6],[5,-1,-4,10,2,-4,4,10,-5,-9,8],[7,-5,9,3,9,-5,-8,5,-6,1,-9],[-1,-4,-6,7,6,-5,-2,-10,2,-4,2],[-9,-10,-3,6,6,10,4,-5,-10,-4,4],[1,-2,3,-3,7,-1,6,-8,5,8,3],[3,-2,9,-8,-5,-6,4,-2,-6,7,-6],[1,-5,-5,4,-6,6,-10,5,9,-8,6],[6,-9,7,-10,-10,4,-5,-8,-6,6,2],[6,-5,-9,10,5,3,10,1,-4,9,6],[-8,-5,-9,-6,-8,-2,7,-7,7,7,-7],[2,7,1,-4,1,3,6,-8,5,-7,10],[10,-3,9,-9,-6,-6,-8,10,8,-4,9],[3,4,-5,6,-5,3,3,9,-2,-2,-10]],[[7,-2,1,-6,-10,10,-8,5,2,-10,1],[1,-5,4,1,-10,6,-5,-10,9,-9,-3],[6,3,-1,3,8,1,6,3,-1,-6,-4],[6,-2,-3,-4,8,-8,5,3,1,-3,5],[10,-5,-10,10,3,-10,-8,6,1,1,-8],[-9,6,2,-4,9,6,7,-6,-2,2,4],[4,2,-7,-5,1,5,7,7,8,-7,9],[-2,10,3,-7,4,10,-9,10,3,-9,7],[10,7,-9,4,-8,-2,-2,2,4,1,1],[3,3,3,6,9,-5,4,3,-1,-4,-3],[7,-8,-1,-7,8,-6,-7,6,-10,-1,-3],[8,-3,-1,1,5,-9,-9,1,-5,-7,1],[-1,-7,-2,-7,-3,3,3,5,5,-3,3],[5,7,5,2,-8,-3,-3,5,-1,4,-4],[-7,-2,-1,9,7,7,5,-10,8,-7,2]],[[5,9,-6,10,-1,-1,9,9,7,1,2],[8,10,-9,-6,-8,-10,8,1,8,-5,6],[4,-4,-1,-4,1,-6,-5,-10,6,5,7],[4,3,10,4,4,3,-6,2,-9,10,-4],[10,10,-3,4,10,8,9,-1,-5,-10,4],[-5,5,-9,-9,2,8,7,-8,-1,-6,-10],[-8,9,-8,4,-4,10,2,6,4,-3,1],[6,-9,-8,6,2,-10,9,-10,2,1,3],[1,7,9,-10,7,10,2,1,-5,-4,-3],[-5,-8,-7,10,2,-3,-9,-8,3,-4,1],[2,-4,4,3,2,2,-6,-9,-3,10,-10],[6,-9,-3,-3,-10,6,-1,-3,10,2,-5],[3,9,-5,-9,9,4,6,4,4,2,10],[-2,6,8,6,-10,-7,4,-7,8,-10,-7],[-10,6,5,-5,9,-5,1,-7,-9,7,-6]],[[-8,6,1,8,4,9,3,-8,-8,-6,-6],[-8,-4,-9,-3,-4,10,-6,-9,10,-2,5],[-2,2,2,3,-4,8,-8,-1,-4,3,-8],[-4,3,10,3,-1,-8,5,2,7,-8,8],[-4,10,-7,-1,-2,-1,10,-2,-9,-10,-9],[-9,4,9,-1,-2,7,2,-5,-8,-9,-3],[10,-6,10,6,-2,10,-8,-9,-7,5,-3],[9,-9,4,-4,9,-6,-3,-2,8,3,-9],[9,2,-9,2,-4,-9,-6,3,1,3,8],[4,4,-3,9,8,9,6,6,9,10,3],[10,5,-7,-1,-6,-4,-8,-5,-8,-7,-4],[-7,2,10,-6,8,-10,-9,3,3,-4,10],[-3,-9,2,2,-8,8,-4,1,-3,6,-2],[-10,5,-6,10,9,3,-8,3,-8,-8,-10],[-7,4,10,3,5,8,-7,-8,-10,-2,-4]],[[-7,10,-9,-2,-3,-10,8,7,3,-5,3],[-5,10,-8,10,5,-1,3,-5,9,-5,-5],[10,-4,-3,3,-10,-6,8,5,8,-5,4],[8,-4,-9,5,-2,5,9,-7,-5,3,-9],[7,-8,3,3,3,9,8,6,2,-2,6],[-7,2,-9,-5,-7,-2,7,-2,3,2,3],[-9,-7,7,-10,-9,-3,10,9,2,-8,-2],[-8,-5,-8,-2,-1,9,6,7,8,-2,10],[-3,-7,-4,-9,-10,-1,-9,-4,-1,4,4],[6,5,-9,5,10,8,-4,4,9,10,3],[-8,-2,3,-8,7,8,8,-10,-7,-10,10],[7,7,10,-5,-9,-9,1,7,8,-3,-6],[4,-3,-6,7,-9,10,10,5,2,-6,5],[2,7,5,-6,3,7,-4,3,7,-4,9],[-6,9,10,-8,3,6,1,3,2,-9,4]],[[-10,-5,-8,-5,-2,1,8,7,6,-7,3],[4,5,-4,5,-8,-4,3,1,-8,8,6],[-1,-1,4,-7,-3,-3,-7,5,-4,8,-5],[9,-8,10,-4,-1,9,2,-1,10,-2,-4],[-3,-2,1,4,-10,3,10,3,10,-1,-9],[2,-1,-3,9,-1,-8,9,2,5,-6,9],[2,2,-7,10,-3,5,-9,9,8,10,3],[-5,-5,-7,9,-7,-8,-2,1,3,4,-9],[8,3,-10,-2,-4,-9,9,10,-2,6,7],[6,-10,1,7,-9,10,1,-4,-2,-1,-7],[-7,-6,-3,10,2,5,5,10,-6,4,-10],[5,-7,-4,7,7,-8,4,7,1,-8,-3],[-2,4,1,-5,3,9,-6,10,-6,-9,2],[-6,-7,-2,5,9,-10,7,-1,4,-4,-7],[10,6,-4,2,10,7,-7,4,4,-9,-8]],[[-6,3,-6,7,-7,-9,-2,-10,9,2,-7],[4,-1,9,-3,-10,-8,2,-10,-7,3,2],[1,2,1,-7,-5,2,-1,7,9,-6,-2],[3,5,-9,-10,-8,2,-2,-3,1,-3,-5],[-5,-10,-2,3,3,6,-10,8,7,-2,5],[-9,-4,-8,5,-1,8,5,8,-5,-8,8],[-5,7,-2,10,2,6,2,-2,9,-5,5],[-6,10,1,-2,5,7,1,2,9,-3,-9],[-10,1,-4,-6,-10,9,4,9,3,5,-7],[-1,10,-2,-6,-7,4,6,6,-7,4,6],[10,-6,-9,-4,7,-5,7,9,10,10,6],[2,-7,10,-6,1,-4,-10,-8,-9,-10,-4],[-4,10,1,-8,9,-2,-10,10,-9,-4,8],[5,-8,10,3,-5,-9,2,9,8,1,-4],[2,-9,-5,-5,-8,-8,7,4,-4,-8,6]],[[-2,2,-2,-1,4,-10,-6,7,-9,-2,-1],[9,-10,6,5,-9,-8,-8,-2,7,-4,-2],[-2,-2,3,-10,-4,2,1,3,10,6,1],[-8,-4,-2,2,9,-10,-6,4,9,-4,-5],[7,-4,9,6,-3,4,7,-6,-9,-2,-5],[-4,-6,-8,-4,-9,10,-1,-1,-9,-9,-2],[1,7,2,-1,-10,5,-7,-8,7,-3,1],[7,1,6,1,8,7,-3,7,-5,6,4],[-4,-6,2,-7,-5,4,-2,-6,10,6,1],[6,1,4,-1,3,-1,-6,10,3,-10,3],[-7,5,-5,5,-8,2,2,9,4,-7,-2],[-7,8,10,-7,10,-2,-3,5,2,1,-5],[2,6,-7,-1,8,1,-8,-6,6,10,4],[-4,5,4,-2,9,-4,-9,10,10,-8,5],[-4,8,10,7,-5,-3,-8,6,-8,5,-2]]], dtype = "uint32")#candidate|7489|(10, 15, 11)|const|uint32
bop_7490 = relay.left_shift(var_7488.astype('uint32'), relay.reshape(const_7489.astype('uint32'), relay.shape_of(var_7488))) # shape=(10, 15, 11)
output = relay.Tuple([bop_7490,])
output2 = relay.Tuple([bop_7490,])
func_7495 = relay.Function([var_7488,], output)
mod['func_7495'] = func_7495
mod = relay.transform.InferType()(mod)
mutated_mod['func_7495'] = func_7495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7496 = relay.var("var_7496", dtype = "uint32", shape = (10, 15, 11))#candidate|7496|(10, 15, 11)|var|uint32
func_7495_call = mutated_mod.get_global_var('func_7495')
call_7497 = func_7495_call(var_7496)
output = call_7497
func_7498 = relay.Function([var_7496], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5437_call = mod.get_global_var('func_5437')
func_5439_call = mutated_mod.get_global_var('func_5439')
call_7589 = relay.TupleGetItem(func_5437_call(), 1)
call_7590 = relay.TupleGetItem(func_5439_call(), 1)
func_4562_call = mod.get_global_var('func_4562')
func_4566_call = mutated_mod.get_global_var('func_4566')
var_7613 = relay.var("var_7613", dtype = "float64", shape = (10, 30))#candidate|7613|(10, 30)|var|float64
call_7612 = relay.TupleGetItem(func_4562_call(relay.reshape(var_7613.astype('float64'), [10, 5, 6]), relay.reshape(var_7613.astype('float64'), [10, 5, 6]), ), 1)
call_7614 = relay.TupleGetItem(func_4566_call(relay.reshape(var_7613.astype('float64'), [10, 5, 6]), relay.reshape(var_7613.astype('float64'), [10, 5, 6]), ), 1)
output = relay.Tuple([call_7589,call_7612,var_7613,])
output2 = relay.Tuple([call_7590,call_7614,var_7613,])
func_7617 = relay.Function([var_7613,], output)
mod['func_7617'] = func_7617
mod = relay.transform.InferType()(mod)
mutated_mod['func_7617'] = func_7617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7618 = relay.var("var_7618", dtype = "float64", shape = (10, 30))#candidate|7618|(10, 30)|var|float64
func_7617_call = mutated_mod.get_global_var('func_7617')
call_7619 = func_7617_call(var_7618)
output = call_7619
func_7620 = relay.Function([var_7618], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5393_call = mod.get_global_var('func_5393')
func_5394_call = mutated_mod.get_global_var('func_5394')
call_7633 = relay.TupleGetItem(func_5393_call(), 2)
call_7634 = relay.TupleGetItem(func_5394_call(), 2)
output = relay.Tuple([call_7633,])
output2 = relay.Tuple([call_7634,])
func_7637 = relay.Function([], output)
mod['func_7637'] = func_7637
mod = relay.transform.InferType()(mod)
output = func_7637()
func_7638 = relay.Function([], output)
mutated_mod['func_7638'] = func_7638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7070_call = mod.get_global_var('func_7070')
func_7071_call = mutated_mod.get_global_var('func_7071')
call_7720 = func_7070_call()
call_7721 = func_7070_call()
func_5457_call = mod.get_global_var('func_5457')
func_5459_call = mutated_mod.get_global_var('func_5459')
const_7725 = relay.const(-7, dtype = "uint8")#candidate|7725|()|const|uint8
call_7724 = relay.TupleGetItem(func_5457_call(relay.reshape(const_7725.astype('uint8'), [])), 1)
call_7726 = relay.TupleGetItem(func_5459_call(relay.reshape(const_7725.astype('uint8'), [])), 1)
output = relay.Tuple([call_7720,call_7724,const_7725,])
output2 = relay.Tuple([call_7721,call_7726,const_7725,])
func_7727 = relay.Function([], output)
mod['func_7727'] = func_7727
mod = relay.transform.InferType()(mod)
mutated_mod['func_7727'] = func_7727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7727_call = mutated_mod.get_global_var('func_7727')
call_7728 = func_7727_call()
output = call_7728
func_7729 = relay.Function([], output)
mutated_mod['func_7729'] = func_7729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6117_call = mod.get_global_var('func_6117')
func_6118_call = mutated_mod.get_global_var('func_6118')
call_7738 = func_6117_call()
call_7739 = func_6117_call()
output = call_7738
output2 = call_7739
func_7743 = relay.Function([], output)
mod['func_7743'] = func_7743
mod = relay.transform.InferType()(mod)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7743_call = mutated_mod.get_global_var('func_7743')
call_7744 = func_7743_call()
output = call_7744
func_7745 = relay.Function([], output)
mutated_mod['func_7745'] = func_7745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6793_call = mod.get_global_var('func_6793')
func_6794_call = mutated_mod.get_global_var('func_6794')
call_7816 = relay.TupleGetItem(func_6793_call(), 0)
call_7817 = relay.TupleGetItem(func_6794_call(), 0)
output = call_7816
output2 = call_7817
func_7818 = relay.Function([], output)
mod['func_7818'] = func_7818
mod = relay.transform.InferType()(mod)
mutated_mod['func_7818'] = func_7818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7818_call = mutated_mod.get_global_var('func_7818')
call_7819 = func_7818_call()
output = call_7819
func_7820 = relay.Function([], output)
mutated_mod['func_7820'] = func_7820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6980_call = mod.get_global_var('func_6980')
func_6981_call = mutated_mod.get_global_var('func_6981')
call_7844 = relay.TupleGetItem(func_6980_call(), 0)
call_7845 = relay.TupleGetItem(func_6981_call(), 0)
var_7852 = relay.var("var_7852", dtype = "int8", shape = (6, 13, 2))#candidate|7852|(6, 13, 2)|var|int8
bop_7853 = relay.mod(call_7844.astype('float64'), relay.reshape(var_7852.astype('float64'), relay.shape_of(call_7844))) # shape=(6, 13, 2)
bop_7856 = relay.mod(call_7845.astype('float64'), relay.reshape(var_7852.astype('float64'), relay.shape_of(call_7845))) # shape=(6, 13, 2)
func_2138_call = mod.get_global_var('func_2138')
func_2142_call = mutated_mod.get_global_var('func_2142')
var_7860 = relay.var("var_7860", dtype = "int64", shape = ())#candidate|7860|()|var|int64
var_7861 = relay.var("var_7861", dtype = "int64", shape = (390,))#candidate|7861|(390,)|var|int64
call_7859 = relay.TupleGetItem(func_2138_call(relay.reshape(var_7860.astype('int64'), []), relay.reshape(var_7861.astype('int64'), [13, 2, 15]), ), 1)
call_7862 = relay.TupleGetItem(func_2142_call(relay.reshape(var_7860.astype('int64'), []), relay.reshape(var_7861.astype('int64'), [13, 2, 15]), ), 1)
func_7264_call = mod.get_global_var('func_7264')
func_7266_call = mutated_mod.get_global_var('func_7266')
call_7874 = func_7264_call()
call_7875 = func_7264_call()
output = relay.Tuple([bop_7853,call_7859,var_7860,var_7861,call_7874,])
output2 = relay.Tuple([bop_7856,call_7862,var_7860,var_7861,call_7875,])
func_7894 = relay.Function([var_7852,var_7860,var_7861,], output)
mod['func_7894'] = func_7894
mod = relay.transform.InferType()(mod)
mutated_mod['func_7894'] = func_7894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7894_call = mutated_mod.get_global_var('func_7894')
var_7896 = relay.var("var_7896", dtype = "int8", shape = (6, 13, 2))#candidate|7896|(6, 13, 2)|var|int8
var_7897 = relay.var("var_7897", dtype = "int64", shape = ())#candidate|7897|()|var|int64
var_7898 = relay.var("var_7898", dtype = "int64", shape = (390,))#candidate|7898|(390,)|var|int64
call_7895 = func_7894_call(var_7896,var_7897,var_7898,)
output = call_7895
func_7899 = relay.Function([var_7896,var_7897,var_7898,], output)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7905 = relay.var("var_7905", dtype = "float32", shape = (6, 5, 3))#candidate|7905|(6, 5, 3)|var|float32
uop_7906 = relay.atanh(var_7905.astype('float32')) # shape=(6, 5, 3)
uop_7916 = relay.acosh(var_7905.astype('float64')) # shape=(6, 5, 3)
output = relay.Tuple([uop_7906,uop_7916,])
output2 = relay.Tuple([uop_7906,uop_7916,])
func_7919 = relay.Function([var_7905,], output)
mod['func_7919'] = func_7919
mod = relay.transform.InferType()(mod)
mutated_mod['func_7919'] = func_7919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7920 = relay.var("var_7920", dtype = "float32", shape = (6, 5, 3))#candidate|7920|(6, 5, 3)|var|float32
func_7919_call = mutated_mod.get_global_var('func_7919')
call_7921 = func_7919_call(var_7920)
output = call_7921
func_7922 = relay.Function([var_7920], output)
mutated_mod['func_7922'] = func_7922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mod.get_global_var('func_7274')
func_7276_call = mutated_mod.get_global_var('func_7276')
call_8042 = relay.TupleGetItem(func_7274_call(), 0)
call_8043 = relay.TupleGetItem(func_7276_call(), 0)
func_1677_call = mod.get_global_var('func_1677')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_8057 = relay.const([[-1.710742,2.857501,-9.878561,-4.106361,2.657226,9.183319,-0.291679,4.526259,-8.949988,2.083873,-5.740747,9.118339,-5.255496,4.560533,-4.663457,-6.427746,5.685243,-5.410417,-8.104949,-7.897326,-8.877848,-5.193252,-8.827483,3.167882,4.069680,2.374616,-1.706699,-5.468004,0.949218,1.392692],[0.211533,-3.226574,2.781267,3.241087,7.083476,-4.441270,9.589700,-4.422755,-2.028516,-6.084747,-8.897509,-9.919745,0.224947,6.424986,-4.598067,-3.415739,8.591237,-1.858178,1.633575,-9.086811,-8.909935,0.779036,-8.917318,2.560919,4.483185,-1.850485,8.538963,-3.289561,6.783620,4.395965],[4.098200,-0.485402,-6.823739,7.874528,-5.916723,-9.332125,-5.497623,-8.879020,-4.229015,-1.185868,-3.655519,5.552096,4.125247,-3.516089,-1.639938,-9.052502,3.819390,-5.628224,-7.507894,-2.745669,5.086194,3.449139,-4.921503,-5.008319,2.543747,-7.612875,1.506754,0.132299,-9.778637,-6.243891],[3.565793,-0.694276,3.894746,-5.540399,-4.731569,-1.503856,6.935032,-5.209408,7.596675,-6.713818,0.352813,-1.500927,7.927830,0.637275,5.240636,-2.683597,-5.277643,-6.312085,0.070005,4.594345,3.227412,4.517011,9.932206,-9.497513,7.686898,6.278851,4.663223,2.092564,1.550997,-6.135247],[-3.979532,3.442944,7.985932,-1.745628,-2.539872,9.643426,3.748362,7.106017,-0.912485,-3.804979,-1.425081,-1.391270,7.811476,-9.885643,-3.114659,-7.952845,6.289729,1.462236,8.951122,4.963652,-6.610714,3.955035,-6.473855,-7.546518,-5.944306,-8.232782,0.516472,-2.104430,-5.360200,2.995228],[-4.970647,-9.270072,-6.971378,-9.112706,1.577800,1.344348,-0.106568,-7.229870,0.230986,3.577018,4.183651,9.490996,-9.734782,6.078869,-7.532037,3.022051,-7.703902,4.323650,-2.652054,-7.179269,4.616592,2.826381,-5.109484,-7.646644,-8.829173,4.911749,2.818746,-6.329440,0.527420,5.299343],[0.686092,-3.861951,-7.551956,-9.002677,7.567838,-6.800007,-5.272926,4.080006,5.616955,5.434403,4.960524,2.932017,9.832823,5.391985,-8.103902,-2.463645,7.865505,5.238812,-0.720614,-0.280369,5.462293,8.602480,-0.078441,-0.802900,-9.352386,-3.310266,0.745836,1.745519,9.199129,2.540116],[7.090476,4.572494,-4.346912,-8.900954,-9.602932,-1.209670,4.628523,-8.738664,-5.406099,-7.884093,-1.006735,6.537530,-9.893212,-8.264571,3.372020,7.022663,9.202739,6.546940,-6.785302,2.129835,0.259744,-4.839700,2.714698,-7.709064,8.391556,-5.735755,7.789233,0.815147,-5.733724,-9.573837],[3.192952,-5.296253,-0.081749,-6.015357,9.195132,-5.385022,-7.093950,-5.875321,4.403584,8.973513,0.525863,-1.390948,9.888852,-5.265096,4.221948,4.660353,6.580615,8.388857,-4.097392,-1.166487,6.987396,-7.527835,8.676790,9.322190,5.759458,2.041657,4.898425,-0.618994,-9.334423,-4.376295],[2.038068,-4.197491,-4.441154,-5.838190,-6.984526,-7.812060,0.505475,6.845470,3.779486,6.615292,6.856087,0.525572,-8.883172,-6.689158,6.086971,-5.033151,-2.344229,9.035898,6.842493,5.049296,-2.168989,7.819722,-3.266076,-6.374066,-9.748353,0.460690,-4.942446,-2.269845,-3.812130,5.211223],[4.635378,-9.189951,0.166228,-0.825116,4.114054,-8.781576,-9.867537,-5.182304,-8.193805,-4.582743,-4.229964,-1.790724,0.647289,-3.718263,9.042015,1.406329,9.882430,4.623773,6.052946,3.814758,1.140123,-3.238109,-1.885999,6.928092,6.633117,2.743212,2.290591,-1.668941,-6.747333,-6.287090],[6.871825,-6.166132,8.764800,4.072464,-6.187310,4.215446,-4.698077,1.474894,-2.174209,1.604307,-5.426781,-5.037122,-1.263731,-6.282333,3.479173,6.086191,-8.374828,6.046096,0.625123,-6.977358,-4.658328,3.347251,7.483012,3.412835,5.396259,0.473000,3.834030,5.132609,8.962033,-7.824163],[-5.837104,6.202657,6.784805,-2.156816,3.835848,-0.258772,4.664732,-7.551116,-8.572457,-7.730835,-6.115003,-1.198340,3.977212,9.745871,0.964768,4.646597,0.074274,7.995456,-6.938044,8.956973,-5.762820,6.538628,-0.316381,7.596742,5.399886,-2.297143,8.491748,1.810672,7.197625,8.582028],[-9.290431,-4.453434,2.491082,-2.141869,-6.113801,5.940083,-8.861023,-0.889912,-9.808418,6.947889,2.785395,8.218082,-7.694286,-8.593315,-9.195041,5.451340,-1.521741,-5.431020,6.430953,3.356130,4.592858,-1.217587,3.296008,-2.330779,-2.505003,6.534682,0.729712,5.069079,6.665310,2.288491],[4.693646,-3.892106,6.768214,-2.775867,-2.713366,-7.678937,-0.825445,8.644387,1.497805,-6.342355,7.884228,0.293478,-3.460217,0.292422,-8.423327,8.400465,2.732736,-1.333419,8.852198,8.552940,-0.297016,1.201243,-2.734935,7.479924,-1.049894,-1.454208,9.670200,-5.524814,-4.703204,-9.929629],[6.515695,-7.849991,2.666371,5.939821,4.193942,-6.424171,-0.538645,8.400796,-0.771080,-1.915214,-9.182589,3.563011,-1.992312,5.059585,2.722004,-2.782095,-9.926919,1.136257,9.718764,-0.404079,9.015187,-4.242635,-8.429172,-9.405845,-9.865318,4.068753,9.469752,5.156341,-4.029077,-8.298985],[-3.446635,-9.129175,-0.776835,-6.992061,-5.078623,-7.983516,-0.706142,1.280922,-6.205013,0.524246,-6.695092,1.721439,2.496879,-7.473980,-8.198263,4.506420,5.439545,5.033679,7.841551,1.759406,-0.823448,6.247082,-9.952124,3.662133,9.545322,-2.615325,9.220593,6.158152,-8.726603,-1.346190],[5.807843,6.900570,-0.418786,-9.478068,-7.698374,8.922841,4.961372,2.312644,-1.639959,0.596023,-1.872986,7.880040,8.684972,-7.491985,-6.093257,-5.319603,1.867028,-0.983390,-4.518877,4.062642,-2.151147,9.172389,-6.699028,-1.591167,5.989655,-5.088053,6.689188,7.212978,-3.827435,-9.832172]], dtype = "float32")#candidate|8057|(18, 30)|const|float32
const_8058 = relay.const([-0.656844,-9.161592,8.490976,3.480214,-8.433494,-7.543784,-3.643734,6.696664,-2.666841,4.987271,-1.100396,-5.841685,-4.047611,5.036442,-6.364181,-8.080808,3.270957,2.038244,9.079334,-2.977014,-7.449766,-0.436272,1.576628,-8.680065,2.444845,1.182179,0.042551,-2.618972,-5.818279,3.414522,-9.294283,2.707250,-2.873690,-5.287502,-5.851270,7.200498,4.506845,1.925436,-7.456656,-7.863240,2.833513,8.957809,-3.718135,-2.717479,7.438865,1.579115,-2.854002,5.093147,3.287696,-0.809726,4.987380,-7.609638,1.305580,5.145106,-9.929298,1.857677,-3.242196,-4.615257,-7.770427,5.121923,-1.709222,4.998646,-4.498028,3.024015,1.265179,0.456647,7.167910,0.794443,9.211006,-2.661854,4.921350,1.900149,-7.438442,-1.650736,-9.641781,3.002523,-4.035283,2.785350,5.159663,-8.232381,-5.084143,4.561246,-1.529852,-1.297434,-9.682612,6.250460,-8.794864,7.006487,-2.584943,-4.939423,0.672419,4.644121,-5.248646,-7.461669,1.259757,-9.906823,-5.837693,3.643153,8.203228,-9.814829,3.927755,0.256709,-0.798175,-1.784631,-4.198327,-9.709286,-8.095510,2.736978,-0.754878,4.161930,-4.668612,-6.897087,8.077982,5.856926,3.314543,-5.006065,5.381102,8.937859,-2.384172,-0.982797,-0.406141,7.179627,-9.105376,1.670760,-9.659032,-2.357483,4.696688,-8.032716,6.254997,1.143765,4.657217,2.587168,0.889510,9.152238,-4.148239,-9.069211,-5.843273,-4.641439,-2.187029,7.907371,-1.721080,6.378555,-9.471917,-9.352747,-3.807812,7.613537,-7.804142,-6.151676,4.033368,8.580910,-5.530865,-5.364924,5.427304,1.528570,-8.288984,3.880683,6.383500,-5.868477,-6.054152,5.228952,-5.782034,-1.201022,7.368171,-1.101611,-5.349584,-1.593855,5.687304,8.238968,3.743438,-9.224801,-4.119831,-4.607120,9.290838,4.808008,-3.766072,-5.372726,5.488296,0.938111,2.834734,5.249878,9.976091,-0.898182,-7.556834,-5.716796,4.058392,-5.254198,-7.851132,8.478210,4.357417,4.749217,2.009341,2.087955,-2.834002,6.289134,-8.723070,-0.614185,-4.207736,9.754884,-7.642240,2.553962,-8.053526,2.475094,-9.697950,-4.606300,-3.044684,6.138508,5.391367,-8.150515,9.738286,-5.612084,2.319501,-8.023213,9.546562,-6.601549,0.604348,3.302570,8.290936,-6.023286,6.602399,-1.182653,-1.945297,8.624531,-2.204233,4.527809,6.631066,9.592470,-3.103917,6.461688,9.074690,-1.825195,0.432978,8.972081,-8.574229,-9.412442,-9.617577,6.384874,6.577553,9.118789,3.572247,1.181166,-9.158392,4.230900,-1.894628,-2.372269,-2.299570,-8.119883,2.143062,2.045799,5.480897,7.427838,-1.671974,-8.404628,-3.804003,2.414923,5.650627,-6.868162,9.136511,-5.930133,-7.169188,-7.771065,2.993604,-4.805096,-2.766802,5.393659,-2.400600,5.392813,8.119515,-1.857532,0.929442,5.935098,-5.279301,-7.060102,4.620088,-2.123459,-4.714496,3.759745,4.495529,-6.299460,1.056140,-6.411274,-4.058035,-9.114154,7.893933,5.329863,-3.446877,0.186723,8.956799,-5.070450,2.436780,-1.873641,2.935955,1.057317,-1.742366,-9.402677,5.121324,4.874610,9.451026,-9.230865,-4.511653,2.029247,-2.511694,1.361870,5.479802,0.257591,-8.310788,-7.686343,6.735320,4.124761], dtype = "float32")#candidate|8058|(308,)|const|float32
const_8059 = relay.const([-7.763743,-0.881234,-1.954735,-1.834998,7.645535,5.416475,8.424605,0.265070,-1.959417,3.794989,-6.473249,9.370601,8.707233,2.334110,-8.592187,-2.149248,6.076658,-1.510701,2.822404,-4.512525,0.137811,-0.415275,9.855479,8.055766,-4.603145,-9.433556,-8.048267,-0.695296,-7.848227,-0.258480,-5.566303,2.454402,3.686131,8.280837,4.713049,2.640886,3.550768,9.871236,3.325899,9.680057,8.927333,9.615787,2.696706,4.159675,8.093693,-6.577076,-8.800102,-6.354536,-5.330055,-8.933829,6.012996,-6.402583,-3.906578,3.300720,-8.298750,6.443122,3.207347,0.034413,4.650274,-9.673542,-5.236479,-4.265584,1.864221,-9.818338,1.765485,0.219609,3.703262,2.651685,7.340065,0.888737,3.144332,4.351292,8.567374,7.221970,6.794303,-0.015187,6.560755,2.302853,6.593334,-1.597452,-5.515512,7.653376,7.909604,7.841704,-7.847718,-8.233466,-7.122548,-8.506161,-9.352371,-4.259361,7.665179,2.148218,5.577829,7.393016,-5.659837,9.253608,6.704541,-5.755977,-8.102045,5.438151,7.435448,-5.092300,6.924404,9.165167,2.714498,-7.706149,-8.844923,2.476357,-0.995369,-8.879391,-0.529312,5.747703,4.980913,-7.042058,-0.792827,-2.222039,8.642312,3.631528,9.414345,-2.561248,-3.933222,1.942497,-3.275316,-3.239022,-3.392518,8.379109,1.380089,-2.953987,3.174726,-3.665339,4.533739,2.880946,8.221466,9.934686,6.600025,9.535226,-2.409686,4.020423,2.564667,8.803691,-4.120374,-8.684582,-9.704948,-0.157563,4.627809,5.704972,6.912937,6.321453,7.539533,8.844346,-1.049557,-5.152435,-0.997333,7.933901,8.153258,9.263538,-4.549093,2.989699,-5.441245,-0.062206,-6.755486,-6.845475,-4.179544,5.375495,3.610336,-0.885658,7.442056,-1.494645,-5.328245,-3.690029,9.393780,-9.753454,4.960192,-8.488897,5.330997,-6.894938,-2.852004,-1.055208,-4.402017,-5.389295,-3.447936,-8.156511,4.995918,9.330745,-7.038629,3.326047,5.927685,2.280064,-4.138116,8.398155,-0.101887,6.392880,-3.448839,4.813845,4.052519,-0.888165,2.727820,-1.073007,-1.519901,-5.212376,3.230646,-9.203147,3.751093,8.993793,9.398563,-0.295798,-4.007486,-0.905254,2.103303,-6.207454,1.831936,-6.618204,6.662390,7.089329,2.963717,-6.022880,7.954842,7.696214,3.894645,-1.951679,2.772497,-0.215846,9.840929,9.696374,5.363075,8.331776,-1.684281,9.763971,-7.035045,2.301596,-0.604890,-1.446720,-7.395630,7.772513,8.110621,-0.779075,-6.222992,-1.330728,2.993319,-9.780235,3.455491,7.933644,2.086351,4.592639,4.124769,5.984480,8.734153,-3.711196,-2.108498,9.076095,5.563198,-3.063445,-8.199220,5.716319,-2.133226,-6.536748,-0.649636,-0.095276,-4.211082,5.364673,-9.210904,-7.769100,9.725802,-9.817300,-7.871733,6.683022,0.156137,8.525139,-3.525981,-0.740737,-9.282323,4.607055,-3.563500,-2.356360,0.693076,4.216017,1.856008,6.904917,-2.988274,-8.642262,2.540025,-4.738742,6.935054,2.945020,8.214802,8.928131,-5.324004,-3.998244,-1.204869,-0.906873,-3.462961,7.116498,8.503441,-1.364940,-7.636159,-0.132580,-1.858900,0.778654,-2.869164,-5.113499,-5.146157,0.406394,-0.024120,3.765759,-2.522806,-5.634305,1.990060,-1.550148,7.314868,-6.491948,3.136440,1.904374,-9.353975,-1.444695,2.579105,-0.698712,-9.694102,8.649175,5.216846,4.563525,-6.477671,-3.245145,3.626139,-0.713272,-6.094463,3.343958,3.005921,6.814780,4.145637,-7.739023,-1.458410,-4.708249,-2.804250,2.994365,-8.437295,5.943025,3.966508,1.550686,4.859845,8.409004,-3.451112,8.070799,0.450671,6.703882,-7.023179,-7.486573,-3.494495,3.484645,-3.975925,-4.163382,9.744577,6.672983,-7.661581,-6.990693,-1.630261,4.733732,-0.874212,-5.538040,5.587152,-8.027628,1.746508,8.627094,9.172080,-3.532063,4.389937,-5.646800,-7.402843,4.852648,-8.035146,-9.603922,3.698617,-9.561855,2.005678,-3.473702,-5.443812,-9.471982,9.536189,-0.068844,9.999662,-4.255044,7.302250,7.162450,-7.200352,-5.829272,-2.812998,7.362316,-0.857213,8.407696,-2.951187,2.730935,-0.074897,-6.938924,0.139193,-0.581997,5.714102,8.525606,-3.535619,-6.726626,-8.608239,5.802571,-5.638273,-8.839869,-6.800375,-8.054564,7.705281,-2.666602,0.833293,7.633602,1.272933,7.022176,-9.164206,5.028545,-0.764578,8.648444,2.144824,5.458779,9.373995,-0.368716,-3.985849,-7.557808,-8.486683,2.908387,8.309347,-8.957702,1.473003,2.699971,8.698666,-4.369513,5.664344,-5.386974,-2.486445,-6.478657,0.471782,-7.034441,8.852330,-0.660700,7.635049,2.935970,-1.761240,1.917499,-3.190422,-1.093182,6.313781,0.289653,-1.957222,5.784089,6.395741,5.697180,6.791896,-9.085686,-1.016369,-2.185767,6.734344,0.357169,-6.629415,3.791847,4.076501,-8.555294,-9.160562,2.081546,3.089925,1.431077,-3.889280,2.377301,-4.088952,-3.401622,-6.466122,-4.318842,8.658465,-6.257613,-2.756246,-5.284925,7.732170,8.902237,-8.863397,-1.541912,5.642079,-2.831212,-0.808142,6.849697,-2.864080,-6.866346,6.685406,-3.216213,-9.737355,-5.471574,-0.191542,-4.678896,3.698330,7.819631,3.973602,2.895159,6.681523,-9.640200,8.604512,3.858379,-7.418172,8.145713,-9.191625,-4.679188,-2.903872,-8.399575,1.147214,-8.951593,-7.832415,-9.548420,1.580837,-9.371784,5.238195,6.183024,6.357282,-4.475395,-6.755920,6.674658,0.497515,1.215912,-8.428952,-4.756943,-3.289601,-0.707227,-1.226145,-9.705478,-0.831211,3.279069,-5.949210,-3.337032,5.335680,0.147110,-8.769714,-2.542801,-0.524955,3.082888,8.566337,-4.471388,-6.888994,-1.818342,5.727781,6.415272,-1.180505,8.457912,8.239392,-5.702511,5.791045,-9.306589,-6.684015,0.811792,-8.658791,1.390862,2.287770,4.129806,-5.693973,-9.293955,9.140685,9.683529,-8.537467,-2.174709,-1.138676,-1.109131,-0.600464,-6.231200,-0.951896,1.727181,-1.255278,-6.794948,-3.223632,-1.839325,-2.085784,-0.955023,-4.076580,0.367676,-6.907599,-3.185039,-7.350140,-9.491179,6.070759,4.232017,5.738983,-2.826196,2.290433,8.173963,-6.794377,-7.809938,-7.165497,-5.681270,-8.046118,-8.755117,1.942431,9.797660,3.166705,-9.489359,-4.333041,-1.407990,-8.439360,-3.020916,-3.681090,3.861095,4.887200,8.832591,-8.868954,-4.809203,7.601780,-0.036393,8.760076,-3.562982,1.744685,1.750003,-1.338861,0.526114,-5.421520,-2.586790,5.065204,6.832229,8.658303,6.225720,5.315889,-0.795482,-2.855524,6.468130,-0.636284,-0.298554,4.043760,-5.410618,-4.634526,-0.136600,1.587701,2.555367,6.602875,1.277242,0.801992,-4.065366,-3.265810,6.225602,3.911889,-6.388608,-7.283141,-8.492865,-9.205061,6.577160,-7.459140,4.830266,-9.496685,8.319667,6.697868,-5.911442,1.659430,4.566215,1.369482,-5.060692,-7.261718,-9.801952,0.734433,-0.647047,5.403147,-8.345219,1.892855,8.208935,-4.636387,2.823044,4.575270,-0.565658,0.362535,-9.623390,-6.170547,6.436575,0.657245,4.393905,-0.448632,-3.842649,4.376185,-5.740975,-0.793627,-2.878985,-5.150834,4.145688,6.465388,-8.644898,6.415881,2.435259,3.709839,-1.023180,5.636389,0.074549,2.760049,2.797931,6.166128,-2.166862,-9.095161,-5.484601,-2.191308,-2.376918,-8.505115,-5.514629,-0.705001,9.971368,6.714103,-0.086426,-3.965206,-0.588020,-6.865764,-4.289090,3.624618,0.172245,-5.434146,-4.199781,7.276326,-5.112221,5.912095,-7.829435,4.440630,0.896781,8.174489,8.208301,-6.355628,-4.844665,9.205594,-7.027363,1.549325,-2.119760,9.034294,-5.153715,-4.433518,-2.065371,-8.857301,4.997833,6.254941,-2.601428,-0.079645,-3.154084,2.992028,5.721243,6.271396,-3.858329,-9.636534,-2.908727,9.761185,-7.707014,-9.966448,-2.619834,0.027323,-4.836307,-7.787953,-1.357458,-4.300763,9.857010,7.020899,-3.245943,-4.563975,8.465651,-1.330396,1.795883,-6.314379,8.568989,-7.679512,8.832966,8.606354,-6.979961,-4.464415,-1.806670,7.299065,4.122915,1.614045,-1.102059,-1.812491,-1.842830,5.295296,-2.850409,5.773813,-9.270850,0.254521,-5.467825,3.673715,5.209265,4.111412,-7.957799,3.059751,6.221721,-7.637104,8.204523,6.048919,6.583451,8.520362,-9.048728,9.881208,-9.924673,0.701088,4.782351,-6.149654,-2.943036,-0.783448,-7.098305,-9.539944,-5.393456,3.557317,0.810545,6.940230,-1.975055,8.309014,-3.978920,7.851569,2.730502,3.906520,-0.314672,0.688628,5.962239,9.978247,-7.664022,3.642644,-5.199009,-4.136132,5.928375,-6.841963,-6.577575,-8.141515,-4.729493,6.881910,-5.235011,-5.329255,-5.836013,-3.134098,-0.904166,-8.653249,7.424285,9.593756,-1.577004,-1.501513,-9.305238,4.264452,-3.072989,8.594879,-3.302064,-3.320785,6.521252,6.783710,5.194047,0.330133,0.941837,-3.482534,7.748583,1.783250,4.848402,6.669802,-9.850548,-4.138518,-0.081907,-9.354429,-7.579437,-6.238049,3.929040,-7.713968,6.843063,-7.144696,6.308376,7.720909,5.716773,-0.796230,-6.414788,-4.853433,8.753676,1.521406,-7.192261,-5.937443,6.173489,-3.648866,-8.700374,2.717824,-6.523122,-8.494235,-4.016833,-6.315091,-5.508687,-3.025265,-9.548715,-4.297079,9.449255,4.412539,8.239725,-5.346543,-7.107553,4.785375,1.369825,-7.450413,4.231504,6.443664,0.210422,2.145481,7.959980,-8.281724,-7.078260,9.217260,8.461950,3.289331,-6.665931,1.875022,-2.437808,0.999506,3.421261,2.416451,-9.657357,-8.721948,-5.930242,-4.254525,1.889627,0.455195,0.572384,5.237026,1.133162,2.506509,-1.555630,9.152874,6.879637,7.761207,-5.249291,6.362439,2.436893,-4.846985,6.251072,3.685996,-6.215578,-2.732053,6.415818,-4.617842,-0.266960,-4.354568,-6.535373,5.358777,-3.923554,-9.240797,6.991409,-6.362547,8.914894,-2.680168,5.354793,3.531431,-1.745537,3.051024,2.951176,4.422720,2.856867,-6.008946,9.671051,0.184111,-8.670438,-6.215172,-1.160058,6.636810,-9.169220,-9.054637,6.557976,3.513785,-4.132227,-1.535642,-7.060459,8.489218,0.128889,4.256301,-3.585025,9.802393,-0.088122,-8.060560,-1.318837,-8.250076,-4.762128,-7.062486,-2.636573,4.968441,-8.536621,-3.352252,1.938692,-0.932150,2.155152,4.817366,-1.487878,5.645494,0.728829,2.352348,3.122307,-3.217775,7.583793,6.247341,-0.098022,-6.703039,-6.689152,6.241623,-0.544313,3.319997,5.398827,0.574155,6.551679,-3.472996,8.096892,-9.594876,9.572287,-3.603414,8.763479,-7.309573,-2.192750,-0.297989,4.043093,2.106659,3.651795,0.553343,8.106820,-8.797849,8.797900,7.517746,7.955144,4.097078,-2.791522,9.274080,-2.719247,6.883130,-2.799750,9.380273,1.278009,1.783651,7.192912,3.170244,-2.808931,3.013611,-2.179245,-9.726498,-9.603323,-1.484874,2.148667,-2.026255,3.766733,-0.407549,6.080998,7.616908,-0.134355,2.872982,-7.687147,5.290914,2.422372,-9.880838,8.225030,3.485810,0.742814,3.081900,8.160550,-6.081863,0.765501,-5.915694,-3.992839,-8.005827,-6.666491,6.443586,-2.588746,7.971035,4.949672,-9.520757,-1.244549,9.216235,6.248870,-9.553726,-2.570996,-8.816275,-4.477667,6.743704,-6.654405,7.218627,1.233078,1.171497,2.068857,1.828479,7.318694,-9.496106,2.097002,2.831453,-6.103839,0.462445,-9.649595,-3.608789,-8.712848,4.563450,5.941219,-9.101695,0.229037,4.806839,-1.349237,-4.865432,-3.596250,-3.890475,-0.112545,-5.037707,1.882689,6.727180,9.972821,-3.493410,3.820291,9.261198,8.614651,-2.283309,4.789842,7.500560,-1.390251,3.740045,-0.509931,9.707447,0.777551,8.851194,9.747503,-9.754477,9.056374,1.206515,2.068628,2.590059,-3.131103,1.860764,5.741613,7.172768,-6.120552,-8.711004,-1.093043,6.635297,-9.839279,2.983998,-7.228914,-2.659857,-6.718983,-7.134567,-3.683988,-7.568059,0.897236,5.979558,1.600762,9.392871,4.584754,-5.987802,0.474711,-5.493208,1.860134,6.810342,6.706550,1.701091,7.546455,7.886303,2.700498,-1.801292,-2.624624,-7.351553,9.063939,8.148814,4.038152,-3.766498,-5.583328,-7.339928,-7.349579,0.749855,-3.497858,-6.407806,-2.841963,1.589383,0.229092,1.816443,4.256308,4.946382,7.473136,-3.551293,8.938998,1.791841,6.714614,4.473550,7.016301,7.425099,1.267517,-3.756660,-1.657612,5.634582,3.124684,8.742127,-7.896408,6.395023,2.927380,2.752421,2.806000,-6.631927,-1.698459,-9.211197,-5.363786,1.108705,4.729227,-0.370472,-2.182059,-7.211386,-1.803406,-7.545662,-1.687303,-8.306350,1.521504,-1.637143,-4.664537,6.627503,-9.461256,-9.187395,-8.170482,-5.879884,0.416628,7.350425,3.255778,-0.150401,2.665141,-3.127764,-4.852202,9.275294,-5.904238,-2.312828,1.457836,-0.432276,-0.522078,-8.746858,-5.665129,-9.537752,4.949042,2.911163,7.323094,-2.333995,8.546910,2.713403,0.591845,3.837344,-0.565254,-1.582004,-0.205275,-5.130200,-7.487023,1.208514,5.882180,-3.701556,2.446528,8.907532,5.388799], dtype = "float64")#candidate|8059|(1232,)|const|float64
call_8056 = relay.TupleGetItem(func_1677_call(relay.reshape(const_8057.astype('float32'), [15, 9, 4]), relay.reshape(const_8058.astype('float32'), [154, 2]), relay.reshape(const_8059.astype('float64'), [4, 308]), ), 3)
call_8060 = relay.TupleGetItem(func_1681_call(relay.reshape(const_8057.astype('float32'), [15, 9, 4]), relay.reshape(const_8058.astype('float32'), [154, 2]), relay.reshape(const_8059.astype('float64'), [4, 308]), ), 3)
func_3363_call = mod.get_global_var('func_3363')
func_3366_call = mutated_mod.get_global_var('func_3366')
var_8084 = relay.var("var_8084", dtype = "uint8", shape = (1820,))#candidate|8084|(1820,)|var|uint8
call_8083 = relay.TupleGetItem(func_3363_call(relay.reshape(call_8042.astype('int8'), [6, 13, 2]), relay.reshape(var_8084.astype('uint8'), [1820,]), ), 0)
call_8085 = relay.TupleGetItem(func_3366_call(relay.reshape(call_8042.astype('int8'), [6, 13, 2]), relay.reshape(var_8084.astype('uint8'), [1820,]), ), 0)
func_3561_call = mod.get_global_var('func_3561')
func_3564_call = mutated_mod.get_global_var('func_3564')
const_8099 = relay.const([1.590572,0.888934,-2.966199,5.843821,-0.093952,-9.495262,1.242120,-2.480044,-6.638206,-7.798711,-5.091520,5.415624,-7.550519,6.032003,-9.745375,6.250947,2.946818,1.295613,-9.911603,-1.847154,-2.291771,2.925303,6.792196,5.346199,-2.322570,2.409944,-4.395425,3.570337,-0.096195,-9.917642,6.663903,-9.234760,-3.941061,-0.881962,1.380666,-2.637690,-5.346313,5.393887,7.639266,5.874348,5.812725,6.152723,1.111246,-3.356386,4.149817,-3.698206,-4.873858,9.858532,-3.384355,1.489459,4.977034,-1.986907,7.599685,8.720439,-2.791114,6.080343,4.461195,6.137447,4.120656,-7.054292,-8.302491,-2.374909,-2.153073,9.847410,9.301436,-5.655811,-4.836090,-6.213588,-8.629564,9.993448,2.847825,-1.819247,9.571717,2.677668,9.461956,9.462121,9.073518,-6.504631,7.496163,-3.022286,1.186499,0.134531,5.074935,1.459232,-9.307602,-5.600471,0.901161,-2.980390,-4.532227,-0.722321,-1.623588,4.516312,9.614686,3.516776,-7.139756,5.637530,-0.149496,2.853147,9.898127,5.609867,4.282344,0.068345,9.368539,7.752130,9.844000,8.323866,5.822554,1.374284,6.695468,-5.999485,8.300964,5.862260,-1.472791,5.501847,8.823309,0.689970,7.074677,-9.821838,7.868927,-9.502589,9.081965,-9.010055,7.146310,3.866014,-1.832206,-5.983959,0.499197,7.594870,-6.497712,0.322534,9.027058,1.848801,9.348894,9.336182,0.475242,-7.337070,-5.649787,-1.935765,-3.535924,-7.735743,4.574255,-8.909661,-9.090950,-5.970277,0.785350,-4.076004,3.394609,2.265939,3.450137,3.238543,-4.282215,5.206822,-4.242680,-5.624843,0.440529,0.837955,1.092138,-5.378944,3.291813,0.463138,-0.824112,6.315056,2.248033,5.432582,-2.806333,4.566416,-9.298710,2.031768,-6.151345,4.886798,-6.982720,-8.092584,4.087019,5.760734,-7.073295,0.240200,-1.180071,-0.662593,4.895250,9.571939,-4.316591,-9.022312,5.981540,7.587584,-9.893448,-6.697044,6.729971,-7.502600,6.830780,3.495229,-1.604252,-7.499710,4.082692,-6.931572,-3.175348,-9.552262,6.331727,9.924220,-7.824739,-4.297459,-0.567422,8.800203,-8.098511,-8.294754,4.064504,5.522757,-5.712158,9.286008,-8.050275,-5.111932,0.882461,7.568015,8.425895,0.439848,5.113480,-3.643568,-1.585584,3.361445,-7.413752,-6.790165,8.516074,7.851839,-7.163301,5.105032,6.181546,3.642878,6.159741,3.966216,-0.049189,-2.935327,-1.325630,5.150092,6.367366,7.173294,-6.217904,2.594248,4.265566,9.931208,6.899352,-6.660680,-3.281818,1.286647,-3.396842,-9.644974,-7.240523,-6.001641,-1.685522,8.643749,-1.818794,1.116524,6.696845,-0.693435,3.763526,-8.119787,2.029725,1.491960,-9.393636,7.979191,5.038755,6.935986,-6.284048,5.546465,9.787120,-3.412103,2.000866,-9.213610,8.587498,-4.486697,-8.067198,9.545785,5.267803,6.622396,-4.807006,7.652386,8.143570,6.677216,-8.327964,-1.026039,2.506507,-8.662010,-5.548185,0.946327,0.465813,-1.961108,-3.510018,9.566518,3.720930,-9.730822,7.659689,0.414041,-3.869539,7.416587,3.875634,7.666501,-1.751779,-1.922699,-4.114708,-3.363549,3.054581,-5.281393,9.168592,1.087068,-5.311071,-8.531151,1.437853,-1.205918,-8.668471,2.857147,0.692230,-3.406306,-6.005528,-0.457919,9.517185,-8.651998,-3.319299,-6.216899,7.102879,-3.726809,7.374846,8.811951,-8.773649,8.510249,0.453441,7.540821,6.217737,1.300777,-5.715315,-1.032225,-6.561763,-3.011011,7.787079,-7.245049,-9.226513,2.376825,3.501852,4.931269,-7.162390,-3.554875,9.358856,0.585587,-6.380429,-6.855783,-0.811082,-0.202997,0.945674,6.994105,9.366904,0.635359,-2.550429,-2.921059,-6.836069,-3.812847,-8.975368,-1.400171,-2.245802,-0.730752,-2.598999,9.565800,7.471336,-4.413229,-8.941084,-3.823959,4.233376,3.734265,-3.619698,-3.007417,3.349586,7.070055,8.122234,0.978897,6.669053,-4.774988,-4.754909,0.657307,2.325512,2.163394,3.242578,-4.275236,0.811771,3.887605,8.709479,-7.021902,-2.106426,-8.773722,-7.446902,1.320328,3.630814,7.182397,6.253125,0.398320,-8.173947,-7.204934,-7.610345,7.706179,-3.783322,0.520833,-4.044479,6.822741,-5.049633,-9.429787,8.402100,-4.504696,-6.923497,8.543451,-4.330661,-6.538777,9.694777,4.286752,6.667001,2.263140,4.704887,9.004672,7.129927,-7.534975,-6.303804,-3.074627,-2.219428,-3.965557,-2.343571,-4.095037,4.476338,-5.316045,1.468303,-7.016510,-3.033957,-4.115885,1.178364,0.232021,-0.221393,-4.953567,-1.272683,7.619047,4.804597,0.468804,8.128817,3.990779,6.555084,9.895751,8.591095,7.700329,5.477667,9.674410,-3.412484,5.876092,-4.159383,3.073354,-5.897294,2.274962,3.532594,-6.642148,-2.306848,0.566805,4.417193,-8.592235,-8.627745,-7.406784,6.522687,-7.358207,-3.012723,4.026531,2.815535,0.263940,5.514784,-1.740905,-0.799554,9.122870,-9.965368,-3.516424,4.200645,-8.803039,-1.164611,8.224833,-8.589912,7.478253,-9.386415,2.536017,-4.136808,5.669962,0.308553,-0.085770,-7.770949,-6.905072,-5.123054,-0.587593,3.631015,7.753794,2.515488,2.678776,3.657211,-1.357555,9.372147,5.516565,3.043637,4.838668,-2.563347,-6.766704,3.069047,8.908759,9.202694,3.058225,-8.177298,-8.218904,-4.014711,6.721207,9.839113,7.256366,5.254587,-0.727103,1.398249,7.514194,2.777658,6.889457,-8.222028,-4.626193,-6.514406,-9.553108,-7.916985,1.307127,1.290846,-5.301185,-3.291799,9.156165,0.093330,-0.072154,-1.149902,-6.670715,2.326929,-9.199459,8.319964,2.591895,1.722750,-8.799743,1.961848,-8.862408,5.006002,2.534916,-5.785212,8.369258,-6.365739,-1.843947,-3.604925,-4.110631,-0.390162,9.537651,6.879570,-0.114813,3.360749,-6.033206,-5.728682,4.482773,-1.117184,7.661319,1.837059,-8.987299,5.047993,-2.352718,4.272394,3.667040,-5.115697,0.512275,-3.888025,-9.252929,1.863049,-7.584623,9.351149,6.184650,-1.941057,-7.041849,1.566988,7.819196,7.662533,-7.484639,-8.486880,3.098128,8.529634,-4.100693,-0.734123,3.709650,6.381876,3.108290,9.819033,-2.012766,2.915443,6.293134,6.658633,7.204845,4.192680,-6.280776,-4.028065,-0.538793,-2.489216,8.728680,0.867824,-3.759806,-8.179464,5.106321,-2.722394,6.264485,-5.161176,4.459837,3.973508,-4.878101,-9.179532,-1.054586,-0.320535,-8.268873,1.045626,1.158312,-8.382205,8.363545,4.904045,-0.811328,7.923669,-2.367442,8.212125,5.408170,-9.750030,7.214969,-0.782915,1.293225,-1.001306,-9.652862,7.752333,-8.499102,1.294575,-2.929896,-4.385136,1.458951,-5.222221,3.516105,1.263854,-8.226154,-8.956384,-8.989792,1.133609,-5.683127,-3.266780,5.512506,-2.443390,8.342765,-6.409683,3.743892,6.739840,-4.729001,-4.366145,7.469138,-3.267203,8.522134,1.284338,-5.128226,-7.962157,-5.995085,4.502418,-4.619779,5.030791,0.603327,-6.966446,-7.690016,8.997336,7.635058,-0.371052,4.556010,4.762647,5.291087,3.325830,3.495460,-5.459907,-5.429589,-6.480176,-4.986455,-5.862150,7.480453,-8.700530,-6.851372,-6.852603,1.045399,-0.134791,9.496083,1.690420,-6.648018,-2.244924,-7.649622,9.404509,-3.113757,-8.956882,6.140623,1.460023,0.227880,-5.572402,8.907778,1.799157,0.560463,-8.917490,5.235685,-5.965042,-7.184294,-3.105150,4.938332,1.210366,9.795315,-6.746842,-0.420460,9.998183,2.456594,-6.080759,-7.135938,7.361961,0.111836,-1.244087,-3.302730,0.117510,-6.954767,3.963119,5.280247,4.905098,-5.612197,-5.426790,7.804426,-7.528677,6.954867,-3.570395,9.485454,-8.216353,7.127017,0.282021,8.240677,-8.440975,-5.258701,0.246800,-3.487770,-3.992605,9.493462,4.244804,-3.347345,3.185086,-4.764137,9.472107,-6.873400,2.740729,2.408468,2.928607,5.896457,-7.508145,8.100234,6.214606,-7.238979,0.595088,-0.014903,4.890710,-6.744100,9.757079,-4.270133,-9.254683,-4.672607,-3.134278,4.690347,-7.528843,6.853598,-2.889207,-8.080037,-0.035328,-4.765292,-6.459695,-2.704216,1.912700,3.911503,-9.756833,-4.512035,-0.177817,-9.509990,-3.337037,-2.376621,-1.897476,4.024667,-3.653748,-4.048726,-0.240980,-7.446316,-4.027758,-6.187039,-4.454899,-6.394220,7.980730,4.814291,9.958637,-3.126545,6.594833,-7.158896,-2.693601,8.505719,6.308369,4.153195,-1.924468,6.149073,2.104230,-7.060308,9.458401,-5.151226,4.566303,-4.457879,7.091120,-1.504298,0.143577,-8.132394,-9.689370,-3.299809,0.020337,-8.671998,-0.686664,-4.422696,9.446583,4.592141,8.968491,-8.529053,5.778026,7.863992,3.872148,-6.944477,-6.908730,4.647058,-1.408561,5.344182,8.418093,8.942739,7.948428,2.598198,-2.997410,4.010052,-2.173399,7.080203,-4.199970,-9.639036,-4.486942,-7.803462,1.087061,-0.481579,7.728539,-8.955735,3.399507,-1.580056,9.965466,9.750011,-0.202250,-9.213606,-9.593760,7.206342,-6.656355,0.655244,-9.602877,-5.724274,6.496429,1.290480,-3.208826,6.177470,9.060790,-3.756803,-0.217692,-5.650160,-1.962037,5.235786,-7.972375,1.185709,3.574608,-1.966985,-2.077459,0.856649,5.476982,-4.851686,-5.087075,2.241736,-2.976996,5.558983,3.382379,7.733050,-0.529578,0.757751,3.599216,9.744646,8.914662,-5.108637,-9.137919,4.249325,-3.000254,5.289627,0.990188,-4.079309,-5.840548,-7.006538,-0.972032,6.946350,9.102473,9.988942,6.281342,4.244476,-2.670868,-1.364404,3.167998,-9.091505,-4.956194,3.114492,-8.219567,5.078171,9.713291,2.521460,9.220838,-1.885429,6.982090,-1.821461,-5.534670,5.905270,9.659235,-5.399515,3.854889,4.214576,-4.186289,2.556561,-3.733967,-9.638943,9.844424,4.951456,-6.271124,8.837002,-2.978600,3.563093,6.519852,4.853156,-8.537057,5.347418,9.454780,3.636940,3.662734,-2.375467,6.572494,0.803439,-1.319576,-1.900173,-2.068976,-3.726779,6.819114,-9.744407,-3.393962,5.770107,9.296733,-2.412845,7.156365,-1.301121,6.070650,3.698501,1.187084,7.691161,1.340023,3.660838,9.727282,-7.496526,1.434134,8.275161,8.870819,-1.825585,2.392752,6.282248,9.419998,-7.654775,-6.544237,7.280200,-0.838659,-1.426707,-0.829167,-7.842929,3.661208,-9.930224,7.866194,7.234167,7.545785,8.622616,-7.082507,3.258284,-0.426385,-1.882713,5.914848,6.464833,-8.659034,-0.113182,6.991378,-1.908702,0.972950,4.742252,-9.531429,1.520557,-0.306446,4.801222,0.698292,-8.598951,-6.457897,8.536419,2.557749,3.665818,-1.470732,-3.158543,-8.519797,-2.994756,-5.668520,-5.241870,-1.842667,-7.446774,-5.528690,-2.411003,-1.034801,-6.792720,7.997992,4.337798,-0.885992,6.201372,-7.446651,-7.015075,-8.613330,-6.708900,-2.342661,-9.166837,3.022695,9.568658,-5.484399,6.296639,8.067602,6.295513,7.073416,8.635086,1.519298,-2.570888,-7.200389,6.655953,-0.019169,4.681884,-9.555835,7.540417,-5.569674,-5.063047,-3.568211,-6.006486,0.174530,3.980780,-4.598181,-9.199260,8.673239,4.189772,2.058053,-8.748418,-8.417852,-7.369864,8.801443,-7.124191,-8.146172,-1.513440,3.594480,-2.511532,-2.178237,4.735877,-0.843003,8.584184,9.231400,-3.303171,7.648009,-1.858280,-6.075330,-4.879733,-0.682564,-2.737791,6.828912,-2.349754,9.575322,5.016052,-3.970525,-4.094986,-7.315815,-3.780117,-8.136115,-3.549986,1.309946,8.915833,7.759541,-9.950477,9.793440,6.574733,8.469352,7.126417,-0.431735,8.409289,7.786538,-4.492389,7.330927,1.163310,1.227222,1.284259,-1.696994,-2.795514,-3.756957,-3.436248,6.062274,9.527353,3.441936,7.250127,3.308585,-2.573667,-9.667051,9.421564,6.514643,3.723999,-0.147946,7.360251,-2.882785,3.030949,-9.507988,-1.043453,1.658583,4.035641,-0.327068,-0.469798,2.737407,-4.692415,2.727557,9.144857,3.244390,6.260851,9.347607,-0.198921,2.802064,-7.123589,1.607399,0.542129,-3.427373,8.454661,-0.239416,9.781950,-4.384389,6.885420,6.821328,-4.894724,-1.683321,-4.254999,1.142129,9.240699,-8.621259,-5.747401,-0.842768,-2.757847,-6.680965,8.576607,-2.214918,-2.157384,-3.425267,-8.444601,-1.016390,-2.679438,6.731445,-3.258863,-8.160858,6.057049,-1.807687,-1.469844,1.829277,2.755717,0.422323,-3.036237,4.798758,-6.334912,6.656567,9.573327,-1.132404,-4.923648,6.972598,-0.265111,-7.728925,-7.985368,4.941475,2.623649,-4.474980,5.485357,9.614753,2.944642,-9.055791,-6.051139,-3.616195,-5.939365,-5.542803,-7.462795,8.564820,7.702858,-7.842510,-7.777021,-3.191963,0.787238,4.393589,-4.156922,-1.199782,6.717176,-6.707936,-5.301449,-9.955534,6.406698,1.951716,-0.777666,-9.366076,-1.745931,4.388766,-0.713875,-2.425117,-2.716695,-0.971566,-0.030344,-2.490055,-9.620756,-2.388080,-1.488295,2.866144,2.150086,2.789238,9.408179,4.113421,0.972757,1.618524,-3.434582,6.563091,2.438465,-7.309559,-4.389111,6.117373,8.635548,-5.781093,-0.094388,6.537560,-6.191310,5.154541,-1.431299,-9.606836,-3.172344,4.986426,4.741238,0.585977,6.348155,7.072699,3.035226,-7.465117,-7.733341,-4.526037,-0.484421,-2.978072,-7.605178,-2.955900,-2.793907,-5.257896,-1.976093,7.088003,-5.702445,-3.657661,-8.778968,-4.602119,3.313117,-3.614779,8.329483,-6.845677,-7.831076,-3.691408,0.145466,8.566147,2.982449,-6.630646,-0.437316,-1.163598,-9.283346,-1.934552,-3.527381,-3.376451,9.562007,6.539635,6.690804,-7.993963,-3.270501,9.642695,9.893446,5.714150,-9.907848,5.750880,2.668620,-2.268919,-3.493025,3.779293,4.099280,-8.003396,-5.704311,3.499740,-8.353231,-0.754842,-7.621708,-1.208248,-5.209497,5.765082,6.469148,9.845043,-8.709898,-0.482223,-8.198744,4.998367,-1.967249,-6.085072,3.554736,-9.437160,4.524898,-2.503759,-7.329687,-9.282002,-5.226465,-8.151953,-0.162984,-7.584935,5.525507,7.173537,-0.459007,5.023123,4.071178,-8.469081,2.352715,-6.469432,9.133348,-5.554672,6.561846,-2.530737,-6.076166,7.387951,8.563650,1.940560,-5.805676,-7.896639,7.153980,5.946721,-3.041696,8.049486,1.091822,-8.177678,-6.276580,-0.444844,4.172507,5.420495,7.089162,-1.717642,3.947717,4.788013,8.978383,-8.743782,3.285763,2.926081,4.753088,5.881591,-8.614161,3.758941,4.557757,-9.408747,6.374026,-1.167474,-5.401947,7.574871,2.926698,7.993811,-0.308182,1.703615,-4.970968,8.798995,-9.453185,-8.150699,9.128119,9.545983,6.711946,6.132760,-7.474634,-7.684316,9.053485,-8.677976,-7.306893,2.212296,6.725844,5.565850,4.035703,-0.360342,7.654855,-1.994420,-9.140438,3.065699,7.020053,-2.696545,1.455059,-8.003147,-9.691521,5.326943,-6.701378,-4.792013,8.180018,5.601103,-4.506084,-9.628624,-0.560175,-9.236686,6.815870,4.866804,4.178865,-8.553368,-3.603106,8.739054,4.284440,5.016626,0.471365,9.077091,6.691385,9.726485,-1.164801,-4.090055,-0.805824,-8.708663,-5.807248,-0.796020,7.501044,-6.847516,0.376339,4.672704,-8.947462,-5.033463,-0.091930,5.335388,1.638262,1.582755,-8.853342,-0.638044,8.138385,-8.801729,-3.344275,8.671440,2.221343,5.496975,2.132221,4.625681,-7.652809,7.975086,-6.269206,-5.682474,8.770175,4.208322,3.922679,-3.805374,-1.507050,6.109437,4.816037,1.954256,-9.117028,0.390752,6.869100,-4.769143,-4.736314,-5.113102,-8.236050,-6.638673,-4.151211,1.698302,-8.107984,-5.192144,9.984554,5.913090,-1.449541,0.337366,-7.050466,-5.897671,-4.074103,2.388184,-3.299767,2.112765,-7.807412,-1.091521,0.373473,5.458464,2.582302,9.328531,3.146730,7.588804,4.416878,-0.576210,4.148242,2.468780,1.310252,2.973574,-6.680420,-1.075537,-7.871401,0.659702,4.011157,4.314675,3.605159,5.636849,-4.901688,-7.286194,2.719637,7.515105,-1.911798,-8.423146,7.961179,8.224277,-7.281398,-2.861644,1.089851,5.759439,-5.536002,6.642180,6.071253,-3.129930,-9.888164,4.120508,-0.401051,-3.009575,1.547194,-8.613146,-8.722762,-5.927656,-5.766384,-6.359565,-2.456390,-1.125144,-2.912416,-8.909623,-7.088444,2.814319,-2.193009,-0.442911,7.679546,0.778429,-4.074176,5.044054,1.238861,6.465676,9.730741,2.672137,2.258002,-8.793825,-6.787236,1.105979,-8.826815,6.167861,4.973468,2.334311,-7.448903,8.302293,-7.464269,-6.461399,-0.469693,1.220677,8.934642,-0.316818,-8.107250,-9.545059,8.240449,1.876945,1.097187,-8.098831,7.621437,7.115748,-1.012764,-1.962613,-4.576252,7.077619,-1.996112,-1.203679,4.837149,7.924268,6.689136,-0.563743,6.256861,-1.950894,-1.567870,-9.497047,-1.747284,-4.011969,-5.201668,-9.089455,0.185437,-8.103513,-8.706706,9.479441,3.664905,-9.053624,-1.156696,8.530844,-0.702259,-6.310039,4.712572,-3.662525,5.947646,-7.186380,6.976166,-5.194648,-6.326028,4.362138,1.008236,7.085044,4.559661,1.041310,-3.122130,3.683118,2.624235,-2.735010,-6.509429,-4.925437,6.783586,-6.148488,1.401093,6.435743,0.740015,4.716525,7.829934,4.094402,-8.617356,-6.012381,7.285890,4.677214,-8.967277,5.721371,1.097330,-4.275416,3.251092,7.053793,6.171246,-0.704173,2.597507,1.308415,-4.400541,0.509442,3.207989,-8.414389,-4.043687,3.293754,9.816150,1.526331,2.071243,8.302509,-9.130473,3.938117,2.263497,-8.910086,1.341425,2.897672,-8.877272,-7.181804,-3.763792,0.372224,4.879069,6.916638,9.709194,0.523748,-1.070212,0.313096,7.515687,-6.926153,2.777999,-2.327261,-6.267156,-1.423252,-4.047151,3.434808,2.097880,9.047440,8.348902,8.344659,-4.958600,9.128648,0.227919,2.028836,-0.183759,6.736400,1.969277,-1.977486,1.936673,-5.209006,-8.495589,8.770459,-7.742599,-0.047267,1.094891,6.071133,-6.490206,1.810087,1.159564,-1.740575,-9.839918,5.507722,8.977547,-4.307277,1.568051,1.035396,-4.049772,7.648849,8.763761,-7.097603,-4.509312,-2.493610,3.626110,-9.023118,6.865337,-2.996319,5.738811,9.187103,5.054321,3.071394,-1.137810,-6.165893,4.264137,-6.630263,7.352231,-6.070414,-7.985432,-7.200858,-0.161665,-4.998623,-1.213186,2.820077,2.751197,-0.645291,-2.778542,8.076440,-5.389129,4.615943,2.150175,7.162038,3.081206,-0.147333,-6.702178,9.245082,-2.414768,-8.194540,-0.256087,-6.644012,-0.876124,-5.787585,-6.781823,-2.049947,-6.417901,2.670534,2.555860,-8.777061,-4.992803,-6.001742,-5.603166,3.030949,3.404038,5.088180,2.559730,8.702696,-0.524357,8.609442,9.825297,-7.925459,2.740832,-5.776374,-9.868665,4.267139,7.970081,2.553643,4.106585,-1.033260,7.740869,-3.766744,9.563285,-2.314076,-8.342472,9.627397,9.429682,2.484472,2.648885,0.158879,-5.202772,-5.854559,-9.965922,0.055402,-0.147312,4.998270,4.602524,-5.574217,1.534005,7.472955,-3.321373,-7.536156,-6.419140,2.193073,6.114584,6.618183,2.757425,4.695086,1.894415,-8.310018,2.348630,2.804683,5.497894,0.585123,5.880334,-1.370649,5.190137,8.912047,-7.967362,0.637972,-6.255903,-6.177940,-8.966650,7.518608,-3.294630,0.576859,8.213315,2.178477,5.221837,-9.681421,7.778439,-8.516727,0.580964,-5.636162,-6.053964,0.623114,-9.765648,2.679978,9.672459,-9.435544,-2.394557,8.762836,4.162541,-9.427825,-6.845872,2.036966,-7.528944,-7.313769,9.570753,9.181767,3.314702,-8.368351,-3.041400,-3.822960,9.941838,-6.255411,4.874298,4.941471,-0.757347,4.403203,-7.900127,-2.371930,-0.532762,-5.755609,3.243846,-0.161262,-8.229330,-5.263516,-0.300923,4.253916,6.480883,0.007759,0.560372,0.264015,-2.170889,-4.119728,2.197319,0.512420,-5.473585,-7.483085,-7.992541,-3.267296,7.546360,0.149005,8.308444,8.329933,-9.883428,5.837886,-4.491712,7.316062,4.709470,0.223693,-2.970566,7.411636,7.283799,-3.844203,-8.957658,-2.568856,5.435873,2.799180,-0.740925,-3.387542,5.119606,4.843319,-6.258320,-3.272164,-8.953278,0.804143,7.565942,4.413238,-4.726012,-3.008597,-3.086110,-3.045511,-5.164015,7.036563,5.526794,-5.424260,6.653822,-5.492593,-0.193508,-3.932583,-1.061773,-5.875633,-6.234562,-5.934638,4.888898,3.164850,-6.479674,-1.041412,4.030078,8.252954,9.482082,9.481883,1.250293,-5.210510,-7.432469,3.037305,-1.957199,-6.107407,5.241767,6.281283,3.585331,8.470763,0.714956,4.461343,9.006344,6.691125,-2.562602,0.605635,-6.392920,7.843619,-6.506199,4.014534,-5.371930,9.255747,1.058706,9.198473,4.879550,-6.858940,-2.174938,5.186882,-8.012948,-0.548376,5.531452,2.547665,8.104398,9.463148,5.742253,1.388516,-1.745746,7.923859,1.921985,7.782976,5.136956,0.454997,9.379262,5.735476,1.264519,-9.911074,-6.970161,-5.338005,-7.449979,0.619937,0.261225,-4.169840,-6.595246,3.137553,-6.375240,-4.129621,-6.481625,7.423211,4.136751,2.690359,-2.613101,7.804570,8.674425,-2.100445,5.336011,6.225912,-7.217622,3.528343,-7.465326,9.756209,5.790697,-9.521393,3.293213,3.939463,3.354197,-7.450881,-5.330883,-0.558703,2.262383,1.998216,-0.522872,2.201832,-2.453126,6.956939,0.224984,7.194629,3.882440,-9.096006,8.530808,6.544590,7.044682,-5.649309,0.687877,9.417226,-7.039695,-2.955557,-5.981289,5.007711,-1.582023,6.036914,6.399041,-9.330989,-1.650728,-9.982987,-4.583251,-6.775990,1.314862,3.000013,7.281531,9.672563,6.670097,1.801752,-1.259679,4.549898,6.709047,-8.272007,6.299558,6.855944,-8.600573,-8.672317,8.862198,-0.906372,9.044498,-7.777237,-7.184146,-5.430996,2.902026,8.232082,6.457915,-4.343882,5.740059,8.482062,5.713123,7.293748,-4.911000,-6.551336,-5.524695,-4.844774,-3.869719,2.221714,5.484364,-6.720343,8.474653,-9.476774,-7.378505,2.097632,8.284104,8.258256,-2.283976,-9.315133,-2.084963,-3.865267,8.244011,-6.809493,7.678299,0.619359,-3.541649,8.182383,8.127164,-7.586955,-6.374874,-8.199376,-1.603087,-1.979376,-9.780944,-9.093793,0.365088,0.395709,6.862667,-3.414317,1.641659,8.272610,-0.244290,1.031119,-4.118094,9.532084,-7.160336,4.060211,0.898632,2.660553,-7.653495,-4.742493,-1.293360,6.865860,-8.259759,4.206353,3.384492,5.572200,3.507533,1.012160,-6.344579,3.819798,-4.013350,0.758946,-2.352917,6.374714,-8.684952,6.891750,-5.837647,8.222181,-8.662999,-1.498647,0.405539,8.795008,6.727632,2.110166,-5.266949,-6.961912,3.923232,-0.940798,-9.490724,-3.927931,-1.416960,1.006514,-4.025114,2.582323,9.232329,-3.547375,9.752435,-7.813358,8.442379,-4.194751,-6.015556,-8.024478,-9.150209,8.415476,2.096617,-6.333259,2.851216,-6.753483,-5.419185,1.713485,6.827180,-4.533035,0.801941,4.070776,-2.512788,-6.152930,-8.176073,-9.601402,-3.849083,4.715375,-0.774083,8.984050,-6.603370,0.641531,6.945152,-6.550001,4.153961,3.103716,2.410263,3.157908,-3.215454,-1.350748,-0.144320,2.630653,6.182093,-8.936923,-5.387620,2.266389,2.670809,1.934699,3.729173,-6.602692,8.874649,-2.640984,-1.647611,-8.285226,5.675041,-7.531537,-6.645560,-4.549095,-3.296491,0.731972,-8.809274,3.760856,2.623677,-1.529509,5.199061,9.826423,-2.473686,3.638344,3.482648,4.928017,2.635671,5.947199,-4.850658,3.681103,-1.931553,7.407087,5.018171,7.325670,-1.845851,-1.531472,-9.517309,-6.637113,2.105246,7.667065,8.349081,8.456475,-5.765573,-9.437864,2.267818,-1.789417,-6.060663,-3.333038,-4.965689,4.571073,-7.765043,-7.055291,5.790257,7.515075,1.022574,-2.263222,-5.649149,9.401381,-2.167062,1.499455,2.340968,0.758949,0.557046,5.721913,6.179459,-4.316350,-0.606073,-3.392924,2.248986,-1.447116,9.107443,-9.397393,8.235944,-6.153037,7.226058,4.392436,0.868688,9.620038,-6.397765,3.606253,1.733233,7.541966,-7.433312,5.570790,-2.933680,-1.360640,-4.334227,6.065074,-1.301553,3.799734,8.151937,-5.261775,-2.592459,5.880855,3.283279,-1.528775,6.494357,-7.045309,-9.000852,5.533797,-6.324401,-4.793535,-1.986944,-9.581297,4.662052,4.667568,-0.212631,-5.423771,0.498669,7.106724,-9.875533,6.581473,-8.420012,0.748145,9.982381,1.939450,2.269183,9.844476,3.926965,-5.375550,3.151052,0.675408,-2.504700,-5.302667,0.505039,-4.016560,-7.805154,6.777240,6.667899,8.143114,-5.432589,-7.775663,-1.869743,8.499918,3.355051,-8.935325,0.787740,-2.201394,9.019701,1.644624,4.811952,-2.345223,9.282596,-6.486025,3.264214,-0.305721,-9.284327,4.131282,-6.513387,-7.313812,-3.501092,-0.477436,-7.532800,2.608848,-7.199136,-3.482938,-3.525580,7.006103,7.421447,1.224097,5.310136,-1.346366,-9.312358,-6.869494,-8.151295,5.806158,4.154632,4.376031,-9.502908,-6.866986,2.249698,-9.639320,8.360166,-9.168617,7.562133,3.905105,7.245620,-0.146407,8.740430,-7.814563,0.553176,5.232917,7.456183,-9.835023,5.763099,-9.668546,-9.835326,0.646724,-4.684498,-4.153268,3.152361,-7.342964,2.228574,-3.240109,8.102230,-2.323715,-5.039452,-1.483966,-4.029094,-9.870657,0.305549,5.805249,7.927429,9.218171,-7.703274,-1.493413,-1.569847,-1.157740,9.179006,-2.563121,3.987001,-5.130319,-8.044781,6.149912,5.690577,8.708200,6.150235,-1.602058,1.509048,-3.688677,0.793154,1.156222,-5.678290,4.339739,-5.726949,-4.945496,6.810064,-3.908268,6.095021,-8.705683,0.729243,3.690294,-4.590796,3.939675,-3.223443,6.838454,-3.862320,2.374745,-0.175623,7.887620,-8.331449,-7.008556,-0.021515,-4.310279,3.197054,-6.258605,-1.315799,9.710281,-6.353643,-3.961807,-6.759138,-0.017589,-7.277439,1.307593,1.329822,0.358660,1.205815,6.466953,-5.871327,3.510637,-5.316294,-7.406740,-1.875819,-6.309121,3.867354,4.207386,-7.336151,-0.418829,9.646756,-6.517407,-5.545384,-1.487767,8.586566,7.279883,7.147591,2.726936,7.832228,-1.547609,9.494933,-9.571588,6.126814,1.759613,1.042732,-2.067325,8.409704,2.314306,2.011148,5.797699,2.263489,-3.805828,-5.931947,4.515244,-8.347562,7.524552,-6.571023,-9.743744,1.426482,0.244144,2.276974,7.165366,-9.565490,2.766925,-4.103191,2.089578,6.591878,2.559419,3.196877,5.716691,-5.062188,-8.684716,-4.145182,1.675699,-8.951831,5.501685,-5.461373,-5.749243,2.373725,-8.167817,0.491158,-2.590735,-7.546672,-2.381599,-8.082931,9.363444,-9.352098,8.447786,-0.020856,-3.514349,3.636960,-1.487932,-5.917765,0.098890,-0.807653,4.758017,6.691834,4.978119,6.411429,0.109521,1.728789,7.617639,-2.864474,6.854107,8.979899,2.597621,8.056113,-1.633826,8.206570,8.923846,-8.775040,6.543240,-4.045919,5.448112,-8.271454,0.476608,9.830811,0.455407,6.047139,-5.643402,-1.884323,-5.260989,8.748123,5.227702,-5.786309,6.019151,0.759706,-7.836080,6.535271,-6.550652,-1.996648,5.264517,-8.429448,-3.199211,2.480462,-4.866647,-4.639254,2.457554,5.703664,-8.258222,-1.961492,-7.998931,-6.026724,8.026442,-5.102111,9.614271,-3.053610,-1.439754,4.041302,-7.324701,7.528368,-4.589154,1.482314,-9.224591,-7.717493,-6.855342,-1.104914,7.587427,7.335427,-5.693268,-4.978774,4.160826,-0.176418,7.455677,-4.963958,1.976711,-3.637601,6.054208,4.728021,-6.410246,5.219721,-7.480435,-9.085668,-2.873865,2.552903,3.446848,5.888022,-7.590574,4.760814,8.314867,7.666345,0.017157,4.299639,-2.033014,-4.734217,-4.970173,4.475642,3.317101,-0.648305,-7.085296,-3.627429,3.340974,-5.930043,-8.150761,2.557509,2.900800,-5.006451,-6.580251,6.486441,-3.391088,-1.690413,2.027761,-0.579666,5.984282,9.031566,-5.707205,0.173164,9.951072,7.262632,1.637785,5.854571,3.625990,-5.564464,2.157971,-9.275995,6.288872,8.874084,4.159847,-9.502822,-7.603745,-1.926785,9.826410,5.985439,7.705680,-4.199568,1.953030,0.436467,2.479154,7.552401,5.644433,5.716961,-6.270916,-9.114220,-1.758848,-9.123599,-5.687028,9.587921,-5.478466,-5.372999,1.950180,0.048439,-5.092675,5.385530,-2.714462,6.260566,5.946791,-1.838297,3.473417,1.123190,1.021409,-2.475912,-0.894212,-2.738782,-3.820294,-2.639491,8.571770,6.264265,-3.133846,-6.514121,7.726191,-4.506539,-8.895751,-8.113789,0.006616,9.770868,9.479896,-3.149259,6.441809,-8.282996,4.233949,5.328374,-9.792611,0.193593,5.165543,3.765971,0.170478,8.704889,7.911097,5.996057,8.551915,7.236107,-2.771081,-8.412361,-5.705907,-4.832076,9.921937,1.459086,-8.277596,-0.617604,-4.646709,-4.215819,-0.524903,1.977836,3.946300,-2.490051,3.697819,4.589935,-0.186883,4.314907,-6.088971,-7.187535,4.376028,-5.486598,-0.061947,7.985037,-5.680849,-5.775850,-4.271027,-8.651537,-7.238909,-5.706664,2.730857,-7.928538,-9.687845,-8.943451,2.364637,-1.099917,-3.924604,-6.483989,-3.065364,0.181321,0.166381,7.753996,2.497500,7.710803,-4.160275,2.964986,3.314735,5.778505,4.660659,-0.966022,0.224165,5.389488,1.994994,-0.615814,-3.152213,3.364800,-6.998844,2.391293,-3.268170,5.063238,-0.881312,-8.035816,-9.113683,7.221993,-6.291293,-5.585842,9.425032,3.692380,2.519385,-1.305721,-5.651172,2.934302,-0.367063,-4.235049,0.621282,7.849306,9.136596,3.177827,-3.291512,2.836012,4.596739,-9.108659,-2.139762,1.124752,2.279073,8.356472,9.562492,-8.848387,4.176016,5.449889,1.240855,-1.372135,-0.481423,-0.670493,1.223741,2.554076,-8.698177,9.125113,-7.217846,-2.032707,-9.322199,2.464517,4.234292,2.484977,-4.298108,3.907772,1.701752,-6.835713,-9.513239,-5.162124,9.947077,-6.997055,1.767091,-6.300546,-4.339268,-2.909380,-7.041272,3.940658,0.297936,-9.096814,4.696230,5.529483,9.116131,-9.174807,4.356860,9.466803,4.983060,-2.099641,0.981907,-0.147410,1.338651,-6.412356,-6.666250,8.673169,-8.177380,0.041941,-5.444309,7.847397,7.607571,9.599910,-8.141129,2.056855,-5.315974,9.110529,-5.958013,7.985343,-8.211379,8.442566,2.959640,-0.660437,-0.862888,7.549075,3.510915,-5.558597,5.309668,5.959012,2.981960,2.352487,-1.549386,9.925443,-2.663955,-6.945355,4.052735,9.791808,0.922638,-6.692461,7.007090,-9.558063,-5.255951,0.350170,-5.240187,-0.895034,6.351795,1.086852,-0.554744,-4.826307,2.471985,3.924003,-9.148205,-4.113739,-9.318674,7.201388,-2.254772,-3.417902,3.759737,-4.451091,-9.047345,6.077412,-3.833222,3.429094,6.630969,3.625563,1.404097,3.084626,4.853942,6.211637,4.987439,-6.580638,-7.310965,-8.223589,-2.851166,6.623904,2.302593,4.323997,5.931773,-1.674109,-9.386377,4.758222,-6.437794,-0.334283,-5.791587,-1.659003,-8.082928,-8.828249,4.975180,-0.876432,1.662280,5.849333,-9.686209,1.663866,6.720283,0.656319,1.228998,0.664456,6.733906,-8.358183,1.747309,2.360245,5.861492,-6.810402,9.797850,-2.891448,-6.631682,9.434220,-8.745257,-9.785055,4.808222,-7.920532,8.836884,-9.130016,6.587304,-9.963263,6.389524,-4.279556,1.069835,-6.310217,-3.485175,-3.863126,-4.940310,4.309540,-5.188444,-3.257097,5.628110,-2.679538,0.144660,-7.260044,9.541183,9.628503,-1.270405,9.633079,6.251391,-4.444758,2.566604,-2.794092,3.676916,-3.235135,-1.177581,1.562485,2.265547,-8.177406,-1.626216,5.527689,5.898435,7.297928,4.185379,-2.949606,-5.364032,-4.503079,2.829518,3.874426,-6.473530,-0.667434,-8.244106,4.221546,5.135184,-6.164038,-2.145823,-4.992570,7.199942,3.272442,-6.385427,5.184723,9.491734,-6.982430,-5.250969,6.568072,-9.226068,9.574367,7.229199,-0.589332,-4.599290,-9.280536,6.308801,9.314743,-9.375009,9.054274,-5.026118,7.535537,-3.788087,-4.065352,4.578362,8.529714,3.570310,4.488999,5.280674,2.405985,-9.687338,-3.575302,-3.364166,-4.484623,8.568315,-2.092100,-8.464968,0.728962,8.726391,-4.462478,6.631306,-5.486294,-4.477263,1.051592,-9.882747,-1.529954,-7.565872,-7.732836,-2.673659,-8.151565,-1.708474,9.082561,-6.936421,6.252394,-4.968911,8.981426,3.701599,-5.489686,5.654904,-1.730624,-7.754918,-1.062393,6.641980,-4.007945,-5.883377,8.038690,8.047873,5.796232,8.997521,1.255728,-6.680278,0.026264,0.920139,-7.442368,2.170053,-5.578408,4.136307,4.806877,7.226485,-4.756243,-0.588479,-4.971327,-1.472594,7.669776,-9.527702,8.052595,4.883172,-5.258505,-8.878338,7.705854,0.219998,9.027797,0.138891,-1.871922,-4.271673,-8.857998,-1.373939,-7.552376,-8.623487,2.184113,9.390270,-3.703585,3.868684,0.544887,1.448772,-0.152921,-6.471130,9.239021,-7.883176,-3.784785,-3.996333,2.003293,9.232623,5.874149,3.058478,-2.860428,7.127137,-0.969766,0.758457,-1.105806,-3.879466,-1.441043,-2.325813,-6.133447,0.509108,-3.538651,1.539519,-8.419978,2.528811,4.142176,-3.512651,6.726618,-8.948887,2.594636,6.268685,-3.189272,-5.229790,-9.598417,-4.022952,8.363105,6.430180,3.342698,2.938114,2.622052,1.950460,3.987420,-8.050024,0.322762,-5.666888,7.098010,-5.639305,-7.689067,-1.589254,2.078946,0.083087,-5.729930,-3.618009,-9.765655], dtype = "float32")#candidate|8099|(3136,)|const|float32
call_8098 = relay.TupleGetItem(func_3561_call(relay.reshape(const_8099.astype('float32'), [3136,])), 4)
call_8100 = relay.TupleGetItem(func_3564_call(relay.reshape(const_8099.astype('float32'), [3136,])), 4)
output = relay.Tuple([call_8042,call_8056,const_8057,const_8058,const_8059,call_8083,var_8084,call_8098,const_8099,])
output2 = relay.Tuple([call_8043,call_8060,const_8057,const_8058,const_8059,call_8085,var_8084,call_8100,const_8099,])
func_8105 = relay.Function([var_8084,], output)
mod['func_8105'] = func_8105
mod = relay.transform.InferType()(mod)
var_8106 = relay.var("var_8106", dtype = "uint8", shape = (1820,))#candidate|8106|(1820,)|var|uint8
output = func_8105(var_8106)
func_8107 = relay.Function([var_8106], output)
mutated_mod['func_8107'] = func_8107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_8111 = relay.TupleGetItem(func_4038_call(), 0)
call_8112 = relay.TupleGetItem(func_4039_call(), 0)
func_6656_call = mod.get_global_var('func_6656')
func_6660_call = mutated_mod.get_global_var('func_6660')
const_8127 = relay.const([-9.999034,-5.811673,1.109402,-1.664240,-7.861071,8.750248,-0.199572,-5.141022,-4.891819,0.474082,-0.793207,9.914140,0.133075,6.097705,-1.715240,8.436017,-6.863975,1.657875,6.657234,-8.681273,-4.381302,-5.499098,-2.893129,5.464075,-2.076935,6.068647,-8.605579,4.032388,-5.796819,-8.190639,-5.188783,1.119953,7.243762,-9.212852,9.900385,-9.092528,-9.833167,-5.698734,-7.544945,8.485504,-2.752714,3.904785,-6.116803,-9.667353,1.167963,8.417316,-8.033337,9.087693,0.119179,-9.153260,-5.901081,-6.750645,2.587063,-3.398984,-9.368354,-8.250255,-1.170900,3.994412,5.729502,7.107139,-6.857628,-7.242567,-6.728820,7.659997,5.224994,-9.931726,-8.295980,-6.104818,2.110236,0.235907,7.051205,-2.386882,6.408484,-5.122489,2.404341,-2.710191,-1.229084,-4.573357,-1.646571,8.157871,4.783598,7.510430,-7.986671,-6.774561,-1.416301,-4.268434,0.245570,-5.909290,-4.809309,1.090932,-8.888438,-6.640868,-1.935311,2.500609,-0.043631,-1.658434,-6.630935,8.742130,-0.887813,-1.972303,-3.076585,-7.558769,4.029857,-7.038180,7.143046,0.748057,7.403266,-9.490075,-3.279195,-8.951770,-4.383282,9.487956,2.869618,-3.183572,-3.880031,-3.480420,9.390521,-3.227841,8.254554,-5.497952,9.735173,2.752704,5.560330,-4.216649,9.310574,-7.662355,-1.801754,9.146704,0.078549,2.174560,-5.459041,-8.365866,-6.892530,4.210026,4.003204,-1.433665,6.901604,-6.395332,7.424869,0.997395,1.056318,1.923348,4.025539,5.992463,-4.133604,-2.406814,7.486495,-4.871032,9.884157,3.618557,1.254325,9.050365,9.702274,-2.960907,5.760173,-8.866753,5.228242,-6.035322,-7.918202,2.133342,-5.298854,8.472527,-8.432043,5.215044,3.841378,5.050233,-0.106160,-6.876897,-6.629598,-0.435091,-3.726880,-3.996787,-5.130779,-9.259271,7.329705,3.719322,6.643635,2.700363,-9.499958,2.342058,6.115011,2.559345,-5.944550,-3.433284,-2.804229,-1.001162,0.810743,-3.597270,4.549275,-5.350225,7.595953,-2.389074,-4.201478,-8.534769,-8.629863,4.811692,-8.526382,5.188085,-7.074316,6.871982,-7.494532,6.897219,9.790244,-3.622935,-3.012149,4.169445,-9.652390,-9.792898,0.259426,-6.575101,-1.277418,9.337706,-3.629157,8.254037,-8.152946,4.607761,-9.002038,-3.774919,-9.487072,-9.835295,1.202682,-0.911413,4.309930,2.605097,-7.246182,-9.933919,0.312585,2.903718,-8.126500,-1.705634,-6.854635,-0.424745,-7.389983,-0.242248,4.242612,9.222720,-0.812593,-5.182200,-3.422200,-1.989741,7.179654,0.962054,-6.386246,-7.361013,-8.142571,-7.853050,-5.691697,2.160641,6.133361,-1.962006,1.431519,-8.394035,6.440303,5.231168,-1.329201,-8.368370,9.780257,-7.088157,3.187679,-7.460840,2.845069,-5.075064,3.357284,-4.173276,6.448935,5.032332,-4.640940,-5.278271,8.310626,9.356253,3.591593,5.439534,0.839141,-2.087556,5.873724,-8.022243,7.201745,-4.765640,1.118120,-0.533886,2.268133,5.731849,1.837591,-8.736665,2.052974,-8.482030,6.815918,3.157926,4.680659,6.557961,3.040756,4.348027,-6.820231,2.023230,-2.172331,-7.393366,-4.239046,0.841465,8.258961,-9.041323,5.395640,1.506105,-8.772253,0.433319,4.587433,-7.982384,3.832345,4.242417,-7.802151,4.496971,-4.591973,-9.321843,2.564675,-6.729994,1.622592,8.457513,2.059436,-2.573858,-7.867851,5.863149,-7.869424,-7.308716,8.904590,-0.547358,-0.363662,-4.201740,0.831318,8.063850,-7.734002,-3.744796,-7.927124,-4.890940,-3.055699,-0.061944,7.014645,-9.299400,0.612017,2.488245,1.877704,-6.645040,8.932491,-1.480020,-0.434565,8.871137,-3.544156,-4.718606,9.748872,-3.268382,3.087242,-0.732704,5.697327,5.074019,6.697186,7.623726,-3.971449,9.698350,3.384833,-4.222181,0.995904,-0.773095,4.506240,2.899563,-3.931074,1.085689,-0.075722,-4.468235,-8.174555,-1.263659,-5.598104,-7.919513,-4.729429,-9.591486,-9.658554,6.535219,-7.194399,9.993741,-6.921821,-3.676337,-9.454980,6.575263,-6.827014,-7.683517,6.132536,-9.809774,7.268187,-1.290750,-8.345210,6.279325,9.042387,6.381273,-9.865076,-4.986761,2.777121,4.109493,-1.884950,-7.013899,-7.796323,1.262729,5.254819,2.787405,0.938696,-5.577855,-4.195559,-0.050790,-6.200518,5.081179,-4.511638,-4.565298,1.104322,5.028397,-5.340881,-8.778838,0.738661,-5.815502,9.311000,4.666981,8.378361,7.852990,7.779606,9.057044,6.816471,-1.486830,-7.070392,5.849632,7.564766,3.650920,-1.814247,-9.669739,-8.598957,-7.022449,3.493079,-5.506094,-7.464395,-4.808571,8.892366,6.140683,0.858913,-0.707739,-2.964386,9.845896,-8.693892,3.667495,-6.603869,-6.028314,-6.321001,-2.275662,-8.075953,-9.427209,-6.806482,-4.239853,6.360318,-4.193016,-9.234580,-9.682244,-4.183782,-1.137514,6.145932,6.272039,7.808989,-6.027916,7.579532,8.383671,1.020135,-7.099229,1.657782,6.083395,-8.106571,0.705551,-6.636956,-5.563524,1.982636,8.101486,-2.539297,-2.301875,5.702708,-5.214593,5.700352,-7.958427,2.801360,4.393529,-4.056896,0.623428,-0.003878,6.492170,4.369881,-9.434489,-9.391628,2.064703,-6.819534,-9.786606,-0.531016,-0.652643,1.642146,-4.176568,1.574122,6.387748,-3.413153,1.139430,3.293105,8.179028,-4.877381,6.479676,9.876135,2.749327,-8.414753,3.740282,-1.665911,-9.086761,1.060987,3.758833,-1.140653,-6.580573,6.570131,-7.184775,-8.398213,1.607744,5.681826,8.555707,5.469750,-8.469725,-9.863262,-3.214551,-5.486689,-9.368367,7.867677,-6.250478,-7.874221,-6.552380,-6.438182,-4.405276,-0.894906,4.434651,-2.036319,1.350032,-5.776087,8.737312,7.724856,9.498123,5.485920,3.039126], dtype = "float64")#candidate|8127|(540,)|const|float64
const_8128 = relay.const([-2.632477,-0.292281,7.671016,6.194508,-7.277410,8.032295,5.556971,0.215740,6.498877,8.742172,-0.065268,-3.021017,-4.019490,2.346708,4.100052,-9.793253,-0.176909,5.008432,5.727364,-9.727832,3.039165,9.703948,-5.687187,-8.604818,1.388342,-4.866470,9.893910,6.423302,2.771279,8.697892,3.797057,-4.490611,-5.740543,6.413658,2.295180,-9.594048,-7.276244,9.085706,-0.899712,-0.589435,9.346810,5.951692,1.968492,8.803351,0.770524,6.988585,-8.678123,3.727478,8.367415,-8.528148,-6.317117,-4.689224,-9.957318,3.270829,6.189055,2.641664,-8.729636,7.945295,1.371052,-3.476884,-5.690311,6.427869,-6.349279,9.631997,-1.744844,-6.913542,-8.331954,7.671492,-7.857085,0.118308,-9.298600,2.089713,-4.972566,-6.316110,8.361952,-8.933094,-6.083144,-3.098442,-8.392643,6.659030,2.969260,0.875841,-2.640656,1.427789,1.595802,-4.408701,7.110712,4.702725,3.540561,2.987655,-1.946008,-9.676161,-8.993795,7.239467,-3.375592,8.501442,-2.623921,-3.753746,1.258652,-6.619959,-2.179831,-4.340098,-1.993832,1.256700,4.749230,-8.395199,2.816934,-3.045566,3.040881,-8.712003,-3.936889,1.547510,3.193235,0.296128,7.779912,2.906598,8.539358,8.430430,5.707145,7.221118,-9.265532,7.204593,-2.704035,2.004117,6.593834,0.823950,3.116147,0.411985,-5.551146,8.288521,-1.963566,-0.287823,-4.304354,2.688230,-2.848860,-3.075617,-4.854291,-4.712719,0.609914,-2.309440,-3.757317,7.267364,-7.495196,-8.839821,0.060035,5.061305,-7.870711,3.374600,8.211457,2.066999,0.577432,-9.431247,9.259608,-8.622106,-0.384918,5.681545,3.742374,-4.177914,9.250261,-3.160031,-4.030833,-4.377717,8.861061,8.534086,-7.106401,0.458003,-5.255984,5.405526,-4.937273,7.634069,-3.444019,5.540012,2.008487,-6.989439,-7.795340,4.077657,-9.703394,-3.791208,-5.519257,-4.641845,-6.918505,-5.076993,-9.504600,-5.342775,-5.438080,0.947162,-8.732591,-3.124225,2.992232,6.053169,1.381587,-3.661368,-6.797424,-9.118191,6.350135,-3.705134,-2.873549,-7.216975,-5.043095,8.069071,-3.767764,-4.640533,-9.104406,-4.118707,0.071482,0.748398,9.719274,-9.528760,-8.058958,-8.873518,7.049094,3.279646,1.696615,-6.562100,-3.655411,-8.972612,8.502144,-7.181071,2.197601,9.694897,-7.220893,-3.843048,-4.482120,3.077037,6.513367,-2.808861,-9.545653,-4.614952,-8.323137,-5.060208,-6.764657,9.424078,4.879959,8.360063,9.792770,9.867109,-9.140949,3.356295,-8.421624,7.506415,-3.615357,-4.708218,-1.205538,-1.891396,-3.809396,5.986872,-1.438779,-6.388963,-5.440081,-6.536102,-0.683968,6.487918,5.235768,4.473135,-4.761528,8.344172,1.839415,3.599232,-2.907790,-7.848501,-3.711466,-3.774601,-6.756146,-0.885040,-9.185939,-0.794525,-8.894066,4.382645,-6.172839,9.312491,-3.548598,9.312096,4.803108,8.308864,7.920325,-3.807388,1.690108,-7.246689,4.705238,2.033162,5.685553,-7.874938,2.245767,-1.608546,-4.417965,-5.838541,-2.442519,-2.406434,0.847854,-8.975700,6.161522,-3.446203,7.614325,5.217461,-4.089459,-6.078321,-4.317934,2.050170,3.355434,-9.809173,-8.256143,-1.209136,-2.616213,-0.093966,-2.537634,-8.718900,4.691231,-2.667735], dtype = "float32")#candidate|8128|(308,)|const|float32
call_8126 = relay.TupleGetItem(func_6656_call(relay.reshape(const_8127.astype('float64'), [540,]), relay.reshape(const_8128.astype('float32'), [308,]), ), 4)
call_8129 = relay.TupleGetItem(func_6660_call(relay.reshape(const_8127.astype('float64'), [540,]), relay.reshape(const_8128.astype('float32'), [308,]), ), 4)
func_6875_call = mod.get_global_var('func_6875')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_8130 = relay.TupleGetItem(func_6875_call(), 0)
call_8131 = relay.TupleGetItem(func_6876_call(), 0)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_8141 = func_3012_call()
call_8142 = func_3012_call()
func_4526_call = mod.get_global_var('func_4526')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_8151 = relay.TupleGetItem(func_4526_call(), 1)
call_8152 = relay.TupleGetItem(func_4528_call(), 1)
output = relay.Tuple([call_8111,call_8126,const_8127,const_8128,call_8130,call_8141,call_8151,])
output2 = relay.Tuple([call_8112,call_8129,const_8127,const_8128,call_8131,call_8142,call_8152,])
func_8153 = relay.Function([], output)
mod['func_8153'] = func_8153
mod = relay.transform.InferType()(mod)
mutated_mod['func_8153'] = func_8153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8153_call = mutated_mod.get_global_var('func_8153')
call_8154 = func_8153_call()
output = call_8154
func_8155 = relay.Function([], output)
mutated_mod['func_8155'] = func_8155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mod.get_global_var('func_4972')
func_4974_call = mutated_mod.get_global_var('func_4974')
call_8165 = relay.TupleGetItem(func_4972_call(), 0)
call_8166 = relay.TupleGetItem(func_4974_call(), 0)
func_7188_call = mod.get_global_var('func_7188')
func_7190_call = mutated_mod.get_global_var('func_7190')
call_8202 = func_7188_call(relay.reshape(call_8165.astype('int8'), [6, 13, 2]))
call_8203 = func_7188_call(relay.reshape(call_8165.astype('int8'), [6, 13, 2]))
output = relay.Tuple([call_8165,call_8202,])
output2 = relay.Tuple([call_8166,call_8203,])
func_8204 = relay.Function([], output)
mod['func_8204'] = func_8204
mod = relay.transform.InferType()(mod)
mutated_mod['func_8204'] = func_8204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8204_call = mutated_mod.get_global_var('func_8204')
call_8205 = func_8204_call()
output = call_8205
func_8206 = relay.Function([], output)
mutated_mod['func_8206'] = func_8206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_8242 = relay.TupleGetItem(func_5872_call(), 4)
call_8243 = relay.TupleGetItem(func_5874_call(), 4)
func_4289_call = mod.get_global_var('func_4289')
func_4291_call = mutated_mod.get_global_var('func_4291')
var_8246 = relay.var("var_8246", dtype = "float64", shape = (1232,))#candidate|8246|(1232,)|var|float64
call_8245 = relay.TupleGetItem(func_4289_call(relay.reshape(var_8246.astype('float64'), [1232,])), 3)
call_8247 = relay.TupleGetItem(func_4291_call(relay.reshape(var_8246.astype('float64'), [1232,])), 3)
output = relay.Tuple([call_8242,call_8245,var_8246,])
output2 = relay.Tuple([call_8243,call_8247,var_8246,])
func_8263 = relay.Function([var_8246,], output)
mod['func_8263'] = func_8263
mod = relay.transform.InferType()(mod)
var_8264 = relay.var("var_8264", dtype = "float64", shape = (1232,))#candidate|8264|(1232,)|var|float64
output = func_8263(var_8264)
func_8265 = relay.Function([var_8264], output)
mutated_mod['func_8265'] = func_8265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8153_call = mod.get_global_var('func_8153')
func_8155_call = mutated_mod.get_global_var('func_8155')
call_8381 = relay.TupleGetItem(func_8153_call(), 5)
call_8382 = relay.TupleGetItem(func_8155_call(), 5)
output = call_8381
output2 = call_8382
func_8384 = relay.Function([], output)
mod['func_8384'] = func_8384
mod = relay.transform.InferType()(mod)
output = func_8384()
func_8385 = relay.Function([], output)
mutated_mod['func_8385'] = func_8385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mod.get_global_var('func_5807')
func_5808_call = mutated_mod.get_global_var('func_5808')
call_8429 = relay.TupleGetItem(func_5807_call(), 0)
call_8430 = relay.TupleGetItem(func_5808_call(), 0)
output = relay.Tuple([call_8429,])
output2 = relay.Tuple([call_8430,])
func_8433 = relay.Function([], output)
mod['func_8433'] = func_8433
mod = relay.transform.InferType()(mod)
mutated_mod['func_8433'] = func_8433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mutated_mod.get_global_var('func_8433')
call_8434 = func_8433_call()
output = call_8434
func_8435 = relay.Function([], output)
mutated_mod['func_8435'] = func_8435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3014_call = mutated_mod.get_global_var('func_3014')
call_8466 = func_3012_call()
call_8467 = func_3012_call()
output = relay.Tuple([call_8466,])
output2 = relay.Tuple([call_8467,])
func_8474 = relay.Function([], output)
mod['func_8474'] = func_8474
mod = relay.transform.InferType()(mod)
output = func_8474()
func_8475 = relay.Function([], output)
mutated_mod['func_8475'] = func_8475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_8496 = relay.TupleGetItem(func_2815_call(), 0)
call_8497 = relay.TupleGetItem(func_2817_call(), 0)
const_8501 = relay.const([[-1.432101,-9.740127,-5.126512,4.700299,5.970154,-2.945331,2.705965,-0.361505,6.673257,6.035398,-0.038952,2.131483,2.497910,5.631541,-7.141343,9.200531,9.190824,-1.662802,1.139579,1.868259,5.223737,-6.015165,3.958131,2.587246,3.518817,3.050599,-9.359769,8.647890,-0.967328,7.310385,4.134834,5.255487,-2.565827,-3.849093,-0.367881,-8.910919,8.949887,-2.771505,-3.676129,7.242370,-8.414755,4.511615,-8.695497,-6.540479,-4.440118,1.098569,8.110047,-9.964551,-7.536940,7.975142,-5.537129,-9.634113,-3.575590,-1.896406,-5.396790,-8.822993,-6.172124,-7.947441,-4.786149,5.562954,-5.911299,-9.241434,-2.295073,9.322029,-7.002196,8.464217,-0.555293,-2.906015,-4.482070,0.871578,3.311734,4.667667,-8.342361,-8.853664,-5.134467,5.179309,-4.522652,-7.817307,-9.809126,0.513768,2.053367,0.931036,9.203363,-6.744166,0.902972,-5.997924,-9.162277,-7.789726,6.146212,2.946263,8.631048,-4.947838,2.931926,-1.669979,-4.488415,-4.476073,-1.948543,-6.375022,3.454515,6.627488,-7.676840,4.110667,5.157326,2.154264,-0.800074,-9.886099,8.789675,6.467175,-4.105354,-2.872233,-7.341436,-3.623962,4.560588,-0.767393,1.522326,0.355816,6.213144,-4.659510,-5.812626,-1.235968,1.387981,-4.136920,1.982781,7.717586,1.261518,0.017274,-0.281567,-2.609091,-1.092651,-5.414565,-0.967528,4.283185,6.879331,-0.872738,-8.801992,-1.379681,-6.064038,-5.214720,8.011443,7.737629,-7.644520,-6.046528,-4.149918,-9.860603,1.221897,-1.843714,-4.018599,4.127389,-9.861981,7.457703,-8.853207,-0.703791,8.537300,8.040364,-3.469603,1.994322,4.596600,8.580199,4.973797,-5.451540,-8.797693,-2.046045,-9.020744,-6.002316,-8.250808,1.890808,-1.576322,4.296708,1.261742,-8.908944,1.265273,-5.431757,5.603264,-8.983527,0.537859,6.965759,0.184001,-2.237561,6.795382,-8.722313],[-2.818893,4.366304,3.752525,-2.392116,1.331959,-8.962208,1.713684,2.431828,-1.944707,2.473156,-7.878296,-5.189516,-7.457781,6.559284,4.573620,8.131851,-9.408155,-8.833575,6.457787,-7.975144,8.729126,1.386752,9.577414,4.467049,-0.582408,5.297794,3.784257,4.053958,-7.701091,-8.727597,-9.927685,9.848110,-6.806895,8.284640,4.886935,-4.707591,-3.005287,1.059403,-2.538493,-7.967115,1.493547,6.466614,7.755928,-3.984110,6.624879,4.045961,4.784192,-7.333330,8.061558,8.516521,4.696425,8.026059,-8.522650,1.909554,-1.670795,0.633022,6.421309,-4.838812,0.664591,-0.746893,1.247654,4.734416,5.704511,-6.657176,3.312398,9.764290,1.207347,-1.650088,4.510926,-6.798918,9.331353,4.341076,-7.316667,0.737341,-5.628434,9.566797,-3.895086,-5.552488,-4.414522,-8.621218,5.784285,7.685205,-6.394988,-7.216816,4.677059,7.762368,-5.225224,-1.216310,4.922630,6.392050,6.414838,8.419745,0.825855,5.055119,6.507387,7.440437,2.128049,6.998476,-2.179728,4.237063,9.963240,6.370481,6.536098,-4.026519,1.341908,1.631905,-5.243778,-5.943184,-4.474345,-3.135676,8.073610,-3.360732,-5.751986,0.881318,0.800523,-8.217529,7.924810,3.909894,1.401517,5.683704,2.632595,-6.070008,-8.177338,7.202147,-6.520820,-0.206507,7.622732,9.212359,-3.460533,-3.971462,3.023149,-0.997521,-9.754470,-4.846576,-0.622699,2.869142,-2.021635,7.008093,-4.899356,4.020600,-8.873879,2.644264,8.200104,9.178027,8.582075,5.326493,4.601259,2.289033,2.533407,3.944102,-2.039631,5.019050,-4.622676,6.466711,9.726670,-1.832311,-8.522869,0.386782,-4.430674,0.887855,1.915189,-0.662996,4.031221,-7.466790,8.073431,-5.094759,-4.322997,-5.646312,-0.932885,-4.146446,0.887507,-8.977310,-9.390293,3.189692,-3.906917,-7.504390,1.134026,-0.124838,-2.392158,-5.353915],[3.570749,7.149370,-5.213294,-0.752124,7.578760,3.911161,0.377220,-0.271446,7.181871,-6.514671,2.683663,9.920481,-7.482487,9.277735,7.585346,-7.816239,-4.767208,-4.374350,-6.127235,1.369829,9.472303,-1.200672,-2.242396,-4.510578,-6.962340,-0.523924,4.412319,-7.649991,8.229905,8.488740,9.153905,8.606689,7.474560,2.487701,7.056791,-0.170160,4.768484,7.179133,6.318714,5.069143,9.152513,6.147625,-6.024678,-0.660998,5.990810,-2.843318,6.361611,-6.896703,7.663271,-2.432369,8.135350,-9.216733,3.113803,-1.448840,4.106256,-3.086926,1.758551,-1.796840,-2.536782,-3.804344,-0.046592,-3.158256,-7.798405,-0.956068,-2.133085,-6.304153,3.070766,-2.599651,0.740966,-1.272651,4.087782,9.674658,-0.382400,-6.364366,-5.961414,0.609349,7.372487,-9.325401,-5.347204,6.639971,-3.985826,-5.327562,-6.646727,-2.246238,-3.920349,1.482283,-5.630230,-4.350751,-5.506591,9.737020,5.642267,4.025848,-6.427504,6.820063,-1.685646,-6.789489,-9.285420,6.755647,3.745312,-7.157380,-9.625875,8.025143,-5.073370,7.938645,-2.944951,2.160627,0.482619,-0.821160,9.863144,5.575318,0.888902,-4.450623,-1.937389,-0.972092,8.245822,1.186681,-2.930253,-8.903849,2.941363,1.148133,-0.560627,4.971250,5.274759,-1.445500,9.686015,5.868093,7.250228,7.615176,7.869305,9.372865,-3.746999,-4.768922,-4.430806,-9.012577,-1.745101,5.724478,-6.154938,9.190980,5.833267,-0.119116,1.672305,2.482786,4.248174,-9.460735,-8.304702,-4.380125,7.565728,-3.034106,4.693530,2.671103,-4.081053,0.091573,8.387215,0.191179,-6.696007,-9.927315,2.482319,-2.436417,-2.269409,4.577455,-6.080278,5.357265,-0.760188,0.044926,-9.484643,1.238168,-8.739686,-6.081277,2.981589,-6.902619,2.287679,0.241606,-9.641341,-2.730843,4.955623,3.740548,2.791971,6.870516,-5.860677,3.212299]], dtype = "float64")#candidate|8501|(3, 180)|const|float64
bop_8502 = relay.add(call_8496.astype('int32'), relay.reshape(const_8501.astype('int32'), relay.shape_of(call_8496))) # shape=(3, 180)
bop_8505 = relay.add(call_8497.astype('int32'), relay.reshape(const_8501.astype('int32'), relay.shape_of(call_8497))) # shape=(3, 180)
uop_8506 = relay.tan(const_8501.astype('float64')) # shape=(3, 180)
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
var_8513 = relay.var("var_8513", dtype = "float64", shape = (144,))#candidate|8513|(144,)|var|float64
call_8512 = relay.TupleGetItem(func_6550_call(relay.reshape(var_8513.astype('float64'), [4, 12, 3])), 3)
call_8514 = relay.TupleGetItem(func_6552_call(relay.reshape(var_8513.astype('float64'), [4, 12, 3])), 3)
output = relay.Tuple([bop_8502,uop_8506,call_8512,var_8513,])
output2 = relay.Tuple([bop_8505,uop_8506,call_8514,var_8513,])
func_8529 = relay.Function([var_8513,], output)
mod['func_8529'] = func_8529
mod = relay.transform.InferType()(mod)
var_8530 = relay.var("var_8530", dtype = "float64", shape = (144,))#candidate|8530|(144,)|var|float64
output = func_8529(var_8530)
func_8531 = relay.Function([var_8530], output)
mutated_mod['func_8531'] = func_8531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4852_call = mod.get_global_var('func_4852')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_8592 = func_4852_call()
call_8593 = func_4852_call()
output = call_8592
output2 = call_8593
func_8602 = relay.Function([], output)
mod['func_8602'] = func_8602
mod = relay.transform.InferType()(mod)
mutated_mod['func_8602'] = func_8602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8602_call = mutated_mod.get_global_var('func_8602')
call_8603 = func_8602_call()
output = call_8603
func_8604 = relay.Function([], output)
mutated_mod['func_8604'] = func_8604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5437_call = mod.get_global_var('func_5437')
func_5439_call = mutated_mod.get_global_var('func_5439')
call_8655 = relay.TupleGetItem(func_5437_call(), 0)
call_8656 = relay.TupleGetItem(func_5439_call(), 0)
func_5231_call = mod.get_global_var('func_5231')
func_5235_call = mutated_mod.get_global_var('func_5235')
const_8661 = relay.const([[-6,8],[-3,-8],[7,7],[9,10],[-9,5],[-2,10],[1,1],[-6,8],[9,-6],[2,-1],[7,-6],[-7,4],[-5,-8],[9,8],[-6,7],[-6,-7],[-2,5],[7,4],[-3,10],[7,6],[4,2],[1,-5],[-9,-2],[7,9],[-2,-3],[10,5],[-2,-3],[-9,-2],[2,8],[1,2],[-4,-4],[6,10],[10,9],[5,-3],[-6,-5],[-5,10],[10,-3],[-9,-3],[-1,-4],[2,5],[9,2],[-7,-10],[-3,-8],[9,-8],[-5,-10],[-5,-7],[-1,5],[7,3],[-5,10],[10,-5],[-3,1],[-2,-3],[-9,-9],[-7,5],[9,1],[-2,-2],[9,-1],[1,2],[-10,8],[-2,-8],[7,5],[6,-1],[-10,1],[-7,2],[-4,-5],[-8,9],[-9,-1],[9,10],[-1,-9],[5,-3],[4,-10],[8,9],[3,-9],[2,-3],[6,-10],[5,10],[-6,-4],[10,-9],[-3,9],[9,5],[5,-4],[-1,-6],[3,1],[-7,-6],[1,6],[-7,-8],[-2,-4],[-7,2],[3,7],[-3,1],[8,-3],[-5,7],[-9,7],[-8,8],[2,-10],[1,10],[-7,9],[1,-5],[-4,-5],[-9,4],[7,-6],[4,2],[4,-6],[-3,-8],[-7,-10],[7,-1],[-6,-1],[-1,5],[-4,-1],[-2,6],[-5,2],[3,6],[-9,10],[4,8],[-8,-6],[-1,6],[-9,6],[10,-9],[6,-2],[-1,1],[-7,-5],[-2,10],[1,-8],[-7,8],[1,-9],[-5,5],[2,-2],[-8,-3],[6,5],[-3,10],[2,-6],[4,9],[9,-6],[8,10],[9,-3],[7,-1],[3,10],[2,10],[8,7],[2,-7],[3,7],[-5,1],[9,10],[-7,-8],[8,6],[8,7],[2,7],[-7,-6],[6,-2],[-8,-4],[7,4],[6,6],[-10,5],[10,3],[6,-7],[4,3],[-7,-10],[10,-4],[9,-10],[-10,10],[-1,-7],[7,-5],[1,7],[-5,5],[7,-7],[-9,-5],[10,5],[2,-1],[10,-3],[9,-1],[-10,-6],[-9,5],[6,7],[4,6],[-5,-4],[-4,-1],[-3,1],[-2,4],[1,7],[9,-9],[5,-10],[8,-2],[7,-2],[-1,7],[-7,7],[3,3],[1,7],[1,5],[-2,2],[-3,2],[10,-2],[9,4],[8,-7],[-5,6],[-10,6],[-8,5],[7,1],[4,1],[9,5],[-3,-6],[-2,-3],[-5,3],[-1,-5],[3,1],[9,-2],[-7,-7],[6,-6],[10,-1],[9,9],[2,-1],[4,-4],[-8,-5],[-6,2],[-9,2],[10,4],[4,-4],[9,8],[7,4],[5,-6],[-2,-2],[9,-4],[4,2],[5,-5],[1,-3],[3,2],[1,9],[6,1],[-8,6],[8,4],[7,-5],[3,-1],[-7,9],[-6,-10],[-8,4],[-4,-10],[9,-10],[8,-6],[-1,7],[-1,2],[-5,-10],[1,9],[-8,-3],[-8,-7],[-1,-2],[10,-5],[-1,6],[-5,3],[-1,-2],[-10,-2],[-3,-3],[10,-6],[6,1],[9,8],[2,-3],[-4,6],[9,8],[8,8],[-6,2],[10,6],[-9,-1],[-5,-10],[2,-4],[2,-4],[10,10],[5,-1],[10,7],[-3,-3],[4,-1],[-2,-7],[-6,3],[-3,-9],[-8,-10],[9,-3],[3,9],[7,-10],[-8,9],[4,4],[-9,8],[-3,-2],[5,5],[-1,3],[10,-4],[3,-7],[5,-1],[-4,-10],[4,-2],[4,8],[-5,-5],[1,2],[9,-8],[10,-5],[3,-5],[-3,-9],[-3,-1],[-4,8],[2,-8],[3,-4],[-6,7],[10,-10],[-8,-10],[-9,5],[10,9],[-5,-5],[-10,1],[3,-6],[-10,4],[2,10],[10,-8],[-9,-9],[9,2],[4,-2],[-8,-8],[10,1],[-6,9],[10,10],[1,9],[3,6],[-5,-7],[-4,5],[-3,5],[8,5],[-3,-6],[4,-3],[3,5],[-9,9],[9,-4],[6,7],[4,-5],[9,8],[2,5],[7,-3],[9,10],[10,5],[-5,4],[-10,-3],[6,5],[-5,7],[5,7],[9,6],[-1,7],[4,-1],[-3,-2],[-8,5],[2,9],[-3,9],[6,3],[8,-3],[-6,10],[-4,-10],[-8,10],[-9,1],[-7,1],[7,-9],[5,-10],[3,-2],[6,8],[-5,-9],[-3,10],[-3,3],[1,1],[1,-3],[-4,-1],[-6,4],[7,4],[-2,-4],[1,7],[4,6],[-4,-3],[7,-3],[-9,-7],[-9,7],[-5,-9],[-3,2],[-8,-9],[-8,8],[-2,-9],[9,9],[6,2],[-7,3],[-9,8],[5,5],[-8,-6],[9,-8],[-6,-7],[9,-4],[-4,-2],[5,-4],[8,-8],[2,8],[8,-4],[-9,6],[-1,4],[-1,-5],[-5,7],[-4,6],[-2,7],[-10,2],[9,4],[10,7],[5,1],[8,-10],[-5,-4],[-7,-1],[7,-1],[-2,-4],[8,-1],[8,-2],[-9,-8],[9,1],[6,-2],[-6,-9],[10,-9],[-2,-3],[10,1],[-4,-2],[3,2],[-9,-5],[6,5],[-8,-4],[-4,-1],[5,7],[10,7],[10,-8],[1,-5],[3,-5],[-7,3],[-7,-6],[-10,-7],[10,2],[3,-5],[9,6],[-5,10],[2,9],[8,-5],[-8,7],[-7,-3],[-10,9],[6,-4],[9,-7],[-2,-2],[-4,2],[-2,-8],[9,8],[-10,4],[-10,3],[7,3],[7,10],[-10,-4]], dtype = "int16")#candidate|8661|(448, 2)|const|int16
call_8660 = relay.TupleGetItem(func_5231_call(relay.reshape(const_8661.astype('int16'), [8, 8, 14]), relay.reshape(const_8661.astype('int16'), [8, 8, 14]), ), 0)
call_8662 = relay.TupleGetItem(func_5235_call(relay.reshape(const_8661.astype('int16'), [8, 8, 14]), relay.reshape(const_8661.astype('int16'), [8, 8, 14]), ), 0)
func_7495_call = mod.get_global_var('func_7495')
func_7498_call = mutated_mod.get_global_var('func_7498')
var_8664 = relay.var("var_8664", dtype = "uint32", shape = (5, 330))#candidate|8664|(5, 330)|var|uint32
call_8663 = relay.TupleGetItem(func_7495_call(relay.reshape(var_8664.astype('uint32'), [10, 15, 11])), 0)
call_8665 = relay.TupleGetItem(func_7498_call(relay.reshape(var_8664.astype('uint32'), [10, 15, 11])), 0)
uop_8667 = relay.cosh(const_8661.astype('float64')) # shape=(448, 2)
output = relay.Tuple([call_8655,call_8660,call_8663,var_8664,uop_8667,])
output2 = relay.Tuple([call_8656,call_8662,call_8665,var_8664,uop_8667,])
func_8671 = relay.Function([var_8664,], output)
mod['func_8671'] = func_8671
mod = relay.transform.InferType()(mod)
mutated_mod['func_8671'] = func_8671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8672 = relay.var("var_8672", dtype = "uint32", shape = (5, 330))#candidate|8672|(5, 330)|var|uint32
func_8671_call = mutated_mod.get_global_var('func_8671')
call_8673 = func_8671_call(var_8672)
output = call_8673
func_8674 = relay.Function([var_8672], output)
mutated_mod['func_8674'] = func_8674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3396_call = mod.get_global_var('func_3396')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_8693 = func_3396_call()
call_8694 = func_3396_call()
output = relay.Tuple([call_8693,])
output2 = relay.Tuple([call_8694,])
func_8707 = relay.Function([], output)
mod['func_8707'] = func_8707
mod = relay.transform.InferType()(mod)
mutated_mod['func_8707'] = func_8707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8707_call = mutated_mod.get_global_var('func_8707')
call_8708 = func_8707_call()
output = call_8708
func_8709 = relay.Function([], output)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8789 = relay.var("var_8789", dtype = "int16", shape = ())#candidate|8789|()|var|int16
var_8790 = relay.var("var_8790", dtype = "int16", shape = (15, 13, 6))#candidate|8790|(15, 13, 6)|var|int16
bop_8791 = relay.maximum(var_8789.astype('int16'), var_8790.astype('int16')) # shape=(15, 13, 6)
func_5784_call = mod.get_global_var('func_5784')
func_5788_call = mutated_mod.get_global_var('func_5788')
var_8795 = relay.var("var_8795", dtype = "float32", shape = (3136,))#candidate|8795|(3136,)|var|float32
const_8796 = relay.const([10,10,-1,10,-8,5,-4,-10,-9,10,1,8,-5,-9,7,-4,2,-4,8,-10,-3,-8,4,-8,9,4,-1,7,-1,8,-10,5,-8,-8,3,3,-1,-4,8,-9,-9,-6,5,-6,-10,4,-9,-4,8,-5,10,-10,8,-7,6,-5,6,7,5,-8,10,-6,1,-7,-4,3,-10,-6,-6,7,8,1,3,7,-1,-6,-7,9,-4,8,-1,-3,-5,-1,1,-5,10,-5,3,-5,-7,7,-3,3,-7,7,-3,10,1,-8,-9,-3,10,4,-10,-10,-9,-2,-7,10,-7,1,1,-7,-1,7,2,9,-8,5,-3,4,6,-4,2,-5,5,8,-5,8,-3,-8,-5,-5,1,10,9,-7,1,-5,7,9,-6,-8,3,1,-3,1,5,2,7,3,5,10,9,-8,-9,-8,5,8,-4,-5,7,6,1,-1,9,6,-1,-9,-4,-9,-7,8,5,-1,6,-7,-10,-4,-10,-9,8,-2,-2,1,1,8,9,9,3,-6,-3,-1,-7,-6,-1,-5,-10,6,-1,7,9,7,1,-1,-5,3,-9,3,-9,-4,-3,7,-7,5,-4,-7,8,-8,-1,5,-7,5,3,3,-8,2,5,5,4,9,4,8,3,1,6,-9,4,-10,-6,9,-7,5,10,-3,2,4,-9,8,-2,-5,6,-3,10,7,4,9,-9,-3,-6,5,10,2,4,1,-10,6,10,6,1,-5,-1,8,1,-1,10,3,-7,-1,-6,9,-7,-9,2,-9,1,10,10,-4,-9,-6,-10,1,5,-10,-2,-6,-2,8,-2,-9,-2,-9,-4,3,-7,-4,-9,6,-5,-6,5,-8,9,-3,4,6,-10,10,7,9,4,4,-6,-9,7,10,5,9,5,-7,-5,-6,-7,8,2,1,-9,-1,-3,8,4,-2,-5,5,6,-10,4,-5,-4,8,-10,-4,-1,-6,5,-6,1,8,-2,5,-6,8,-10,-4,6,2,10,-9,-3,9,8,-5,-5,4,-7,-7,1,-4,8,7,9,-2,-7,1,-5,-6,-8,-1,-5,2,1,6,3,-4,7,7,-1,8,-9,8,1,-8,-4,-2,3,8,1,7,-5,7,4,-9,-2,-5,-7,-6,4,7,-2,-4,3,10,-7,2,-1,3,2,10,-10,-8,5,-5,-7,-6,3,5,-5,2,3,3,2,9,9,-1,-4,8,-2,-10,-7,-1,10,4,10,-7,-9,-8,6,4,-9,-4,3,-4,-7,5,3,-2,-1,-8,4,5,6,4,-5,7,3,-6,-5,3,-5,4,4,2,-4,-8,8,10,9,3,-4,7,-4,-6,-3,9,-9,9,10,-9,-4,1,-2,-5,6,-6,-8,8,6,-1,4,9,4,7,9,-6,-2,-6,-9,5,9,-6,4,9,1,-1,9,-6,-5,-6,-8,-9,9,-7,6,-4,5,10,-7,1,10,-10,-1,-3,-1,3,9,-2,-9,7,-10,8,2,-7,8,4,10,-10,-4,7,10,-5,-4,-9,5,-6,-6,2,-2,-8,7,-10,-8,7,-3,-7,4,6,-8,-1,-1,-8,1,9,-9,6,9,-2,-8,8,3,6,9,7,7,10,7,6,-8,-3,-10,-4,7,-5,-6,8,-10,9,6,-7,-8,-8,-5,-4,9,-1,-6,-7,2,10,7,-9,10,-8,-8,9,2,-10,4,-9,1,4,-8,10,5,9,-6,2,-8,6,5,-1,-3,-3,7,1,-5,-5,6,-4,7,-4,4,3,-6,10,-2,-8,6,-3,-7,-2,1,-7,5,7,-7,-5,7,-4,4,-4,-9,-3,-8,-7,-3,7,-8,-1,6,-5,1,3,-7,-10,-3,9,-9,-6,-9,1,-3,5,3,-4,-4,-1,8,-2,10,-8,-6,-4,9,1,-4,9,-1,1,-8,4,-4,6,8,9,-10,3,-1,-5,9,-8,8,-4,-2,4,10,4,2,7,10,8,-10,9,9,4,10,3,-9,-9,-2,3,-3,-7,10,3,-10,1,-3,3,-4,2,-7,4,-3,-7,7,6,-8,3,7,-8,-8,-6,1,6,4,-9,-2,7,5,-2,-7,-10,-3,4,8,6,-3,10,-2,9,-2,-9,9,-4,1,5,-4,4,8,7,10,-6,6,6,10,-5,4,-1,-9,7,8,-9,-1,-10,-1,-6,8,5,-6,5,-8,2,-4,5,7,5,-8,-10,7,7,-4,-10,-3,-10,8,6,-4,8,-3,-3,-6,8,3,10,-7,-10,10,-5,9,-1,-1,-4,9,-4,4,-3,-6,-4,-10,-10,3,-9,-2,-3,2,-7,-5,9,-3,-4,-2,9,9,-6,-8,-5,-6,2,-1,-8,-3,5,10,-9,10,-1,-4,10,-4,10,5,-2,2,-1,-1,3,6,1,5,-8,-7,5,9,-5,-4,-4,-2,1,10,-4,-9,-8,-6,-2,1,4,-10,9,8,10,-9,-2,1,-5,-3,6,8,10,3,5,-3,3,-1,1,-6,-1,7,8,-7,1,-1,-4,2,-1,6,-10,6,-10,-6,6,4,-9,-1,1,7,7,-2,5,5,-9,-5,-9,2,7,2,10,-1,9,3,7,5,-7,5,10,-1,10,-10,6,8,-8,7,6,-4,-7,6,-6,-1,7,7,5,-10,2,4,2,1,2,-7,-5,3,9,-9,-2,9,6,9,-4,8,9,-5,-6,10,-4,6,9,3,-1,-4,-1,-2,-9,-8,-2,-10,-10,3,-1,4,1,5,1,9,-8,-5,-5,8,2,10,4,-6,-5,10,1,3,8,-1,6,3,2,-5,-6,5,-8,-1,-5,5,-3,7,-3,-5,6,9,7,-6,-9,6,-3,-5,-5,3,3,-7,-5,2,5,-6,-5,-3,-7,1,-1,3,-7,-6,3,2,7,4,-6,-1,-6,-9,4,-3,-2,-6,1,-8,-6,-3,-2,-6,-4,3,7,-8,3,-3,-1,7,-3,8,-10,4,-1,-6,-2,3,3,8,2,-4,-5,-1,5,4,8,-2,10,-8,-5,-3,-7,4,2,3,-8,-8,-5,-1,-4,-10,7,-5,-10,-8,-5,1,-7,5,9,-3,6,1,-8,-6,9,9,8,5,-4,2,-3,-5,-9,10,-10,-4,4,-10,8,-7,9,-5,9,-6,10,-2,2,1,-8,9,4,4,1,-2,-7,-7,4,-7,9,-6,1,2,-5,-7,6,3,-3,9,1,4,10,-6,3,-7,-7,1,-1,3,8,1,10,-5,10,-7,-3,1,-2,8,-10,-6,-8,-9,2,4,-4,5,10,-6,-3,-3,4,2,1,-9,-6,2,-4,4,-2,7,5,1,3,8,-10,4,5,2,-9,8,8,1,8,-9,4,-8,9,6,5,-7,5,1,-9,-5,-3,-6,-1,-4,-2,1,10,-7,-7,10,7,10,-9,1,5,-10,8,-1,1,-10,-8,-9,2,-7,10,-2,-5,8,-5,-3,6,-9,9,3,-5,5,6,2,-1,-7,-6,-8,3,-4,7,-9,3,7,-7,-2,-5,-6,10,-1,8,-1,-8,3,7,2,-5,8,10,-9,-8,-1,-7,-4,-6,-9,-4,9,1,5,-7,3,1,-1,-9,-10,-1,-9,-10,7,-9,-2,-1,5,1,2,-1,4,-8,-3,-5,-1,-3,-5,3,-1,-2,-5,2,-7,-2,-4,5,2,-1,10,7,-2,-2,-3,3,-9,-7,-8,-4,5,-3,8,-5,1,5,-3,3,-3,4,-1,-2,-10,5,-9,4,-7,-2,-6,5,-4,1,5,3,-10,-3,-2,3,3,1,-9,5,3,-8,4,-8,-6,-8,-4,8,-5,-7,6,-10,-8,-3,7,2,5,9,-5,-2,6,3,-8,-4,-2,4,10,10,-7,6,1,6,-10,-9,-1,-10,-8,7,-4,3,-3,-5,-2,-5,-8,-5,-1,-6,7,7,-6,-5,8,2,-4,-9,3,1,10,6,-7,8,-3,8,-10,6,-10,2,-4,1,1,-6,-3,-10,1,3,-7,5,-5,-8,5,-3,-8,6,-1,-9,-6,-7,-1,4,-4,-9,7,-1,-6,9,6,8,-9,3,3,2,-8,-8,7,1,10,2,-4,10,-3,-1,3,2,-6,-1,10,8,-4,7,10,-5,-7,-8,2,-1,8,-6,3,-2,5,-8,7,-3,2,-4,-5,3,-8,3,2,6,5,-1,-2,-7,-6,-1,9,-6,1,5,9,-10,-10,8,8,-2,-6,3,-5,4,-5,4,7,7,2,-8,10,9,-2,4,8,4,8,-1,-10,-4,-8,-1,10,6,9,-4,-1,-3,-7,6,-2,1,-10,2,-5,-4,-9,-9,2,3,-9,-2,-8,-7,1,-2,6,4,-6,-5,-5,6,-4,4,-2,5,4,4,-2,8,-6,8,-4,7,9,10,3,-9,-3,-10,10,8,5,-5,-5,-2,-3,-3,5,6,-6,-1,2,-3,-4,2,10,-7,4,-4,5,9,8,-5,-6,8,-7,8,-10,-8,5,8,2,2,7,4,-2,2,-7,-7,-9,-4,6,8,4,-8,-8,6,-2,-3,-4,3,-9,10,-3,2,3,-8,7,-3,-4,4,7,-9,10,-8,-8,-2,7,7,-10,1,5,10,-7,-5,-6,-2,-10,-10,4,5,-8,-1,1,-4,-6,-4,-6,3,9,-6,-10,8,1,10,-7,-9,4,-1,-7,5,9,6,-4,-9,-10,8,3,-8,5,10,-3,-6,-9,1,1,3,5,-5,8,-2,9,8,7,8,4,-1,-7,5,5,5,-1,-5,-8,5,-6,-4,-10,-9,-8,8,-5,10,-7,9,10,7,-2,8,-7,-6,2,8,-4,-9,-3,6,-6,-1,1,7,6,3,-8,-8,1,-10,7,5,6,-6,10,9,8,9,10,3,9,1,-4,-6,4,10], dtype = "uint8")#candidate|8796|(1820,)|const|uint8
call_8794 = relay.TupleGetItem(func_5784_call(relay.reshape(var_8795.astype('float32'), [3136,]), relay.reshape(const_8796.astype('uint8'), [1820,]), relay.reshape(var_8789.astype('uint16'), []), ), 2)
call_8797 = relay.TupleGetItem(func_5788_call(relay.reshape(var_8795.astype('float32'), [3136,]), relay.reshape(const_8796.astype('uint8'), [1820,]), relay.reshape(var_8789.astype('uint16'), []), ), 2)
uop_8798 = relay.cosh(call_8794.astype('float64')) # shape=(3136,)
uop_8800 = relay.cosh(call_8797.astype('float64')) # shape=(3136,)
uop_8802 = relay.sqrt(uop_8798.astype('float32')) # shape=(3136,)
uop_8804 = relay.sqrt(uop_8800.astype('float32')) # shape=(3136,)
output = relay.Tuple([bop_8791,var_8795,const_8796,uop_8802,])
output2 = relay.Tuple([bop_8791,var_8795,const_8796,uop_8804,])
func_8809 = relay.Function([var_8789,var_8790,var_8795,], output)
mod['func_8809'] = func_8809
mod = relay.transform.InferType()(mod)
var_8810 = relay.var("var_8810", dtype = "int16", shape = ())#candidate|8810|()|var|int16
var_8811 = relay.var("var_8811", dtype = "int16", shape = (15, 13, 6))#candidate|8811|(15, 13, 6)|var|int16
var_8812 = relay.var("var_8812", dtype = "float32", shape = (3136,))#candidate|8812|(3136,)|var|float32
output = func_8809(var_8810,var_8811,var_8812,)
func_8813 = relay.Function([var_8810,var_8811,var_8812,], output)
mutated_mod['func_8813'] = func_8813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_8841 = relay.TupleGetItem(func_5872_call(), 0)
call_8842 = relay.TupleGetItem(func_5874_call(), 0)
output = call_8841
output2 = call_8842
func_8845 = relay.Function([], output)
mod['func_8845'] = func_8845
mod = relay.transform.InferType()(mod)
output = func_8845()
func_8846 = relay.Function([], output)
mutated_mod['func_8846'] = func_8846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8474_call = mod.get_global_var('func_8474')
func_8475_call = mutated_mod.get_global_var('func_8475')
call_8847 = relay.TupleGetItem(func_8474_call(), 0)
call_8848 = relay.TupleGetItem(func_8475_call(), 0)
output = relay.Tuple([call_8847,])
output2 = relay.Tuple([call_8848,])
func_8861 = relay.Function([], output)
mod['func_8861'] = func_8861
mod = relay.transform.InferType()(mod)
mutated_mod['func_8861'] = func_8861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mutated_mod.get_global_var('func_8861')
call_8862 = func_8861_call()
output = call_8862
func_8863 = relay.Function([], output)
mutated_mod['func_8863'] = func_8863
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8869 = relay.const([[[False,False,False,False,False],[False,True,True,False,True],[True,True,True,True,True],[False,False,True,False,False]],[[False,False,False,True,False],[True,True,True,True,True],[True,True,False,True,True],[False,True,False,False,True]],[[False,True,False,True,False],[False,True,True,True,False],[True,False,False,True,True],[False,True,False,True,False]],[[False,False,True,False,False],[True,False,True,True,False],[True,True,False,True,True],[False,True,False,True,True]],[[False,False,True,True,False],[False,True,True,True,True],[True,True,True,False,True],[True,True,True,True,True]],[[False,False,False,False,True],[True,False,True,False,False],[False,False,False,True,True],[False,True,True,True,False]],[[False,False,True,True,True],[False,True,False,False,False],[True,False,False,False,False],[True,True,False,False,True]],[[False,False,False,True,True],[True,True,True,False,True],[True,False,True,True,False],[False,True,True,True,True]],[[True,False,True,True,False],[True,False,False,False,True],[True,False,True,True,True],[True,True,True,False,True]],[[False,True,False,True,False],[False,False,False,True,True],[True,False,True,True,True],[False,False,True,False,False]],[[False,True,True,False,True],[False,True,False,True,True],[True,True,False,True,True],[True,True,True,True,False]],[[False,False,False,True,True],[True,True,False,True,True],[False,True,True,True,True],[False,False,False,False,True]],[[True,True,True,False,True],[False,True,False,True,False],[True,True,False,True,False],[False,True,False,False,False]],[[True,False,True,False,False],[True,False,False,True,False],[True,True,False,False,True],[True,False,False,True,True]]], dtype = "bool")#candidate|8869|(14, 4, 5)|const|bool
var_8870 = relay.var("var_8870", dtype = "bool", shape = (14, 4, 5))#candidate|8870|(14, 4, 5)|var|bool
bop_8871 = relay.logical_or(const_8869.astype('bool'), relay.reshape(var_8870.astype('bool'), relay.shape_of(const_8869))) # shape=(14, 4, 5)
output = relay.Tuple([bop_8871,])
output2 = relay.Tuple([bop_8871,])
func_8875 = relay.Function([var_8870,], output)
mod['func_8875'] = func_8875
mod = relay.transform.InferType()(mod)
var_8876 = relay.var("var_8876", dtype = "bool", shape = (14, 4, 5))#candidate|8876|(14, 4, 5)|var|bool
output = func_8875(var_8876)
func_8877 = relay.Function([var_8876], output)
mutated_mod['func_8877'] = func_8877
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8889 = relay.var("var_8889", dtype = "uint8", shape = ())#candidate|8889|()|var|uint8
var_8890 = relay.var("var_8890", dtype = "uint8", shape = (7, 1))#candidate|8890|(7, 1)|var|uint8
bop_8891 = relay.maximum(var_8889.astype('uint8'), var_8890.astype('uint8')) # shape=(7, 1)
func_6793_call = mod.get_global_var('func_6793')
func_6794_call = mutated_mod.get_global_var('func_6794')
call_8905 = relay.TupleGetItem(func_6793_call(), 0)
call_8906 = relay.TupleGetItem(func_6794_call(), 0)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_8909 = relay.TupleGetItem(func_4177_call(), 0)
call_8910 = relay.TupleGetItem(func_4179_call(), 0)
func_6327_call = mod.get_global_var('func_6327')
func_6328_call = mutated_mod.get_global_var('func_6328')
call_8914 = relay.TupleGetItem(func_6327_call(), 0)
call_8915 = relay.TupleGetItem(func_6328_call(), 0)
output = relay.Tuple([bop_8891,call_8905,call_8909,call_8914,])
output2 = relay.Tuple([bop_8891,call_8906,call_8910,call_8915,])
func_8928 = relay.Function([var_8889,var_8890,], output)
mod['func_8928'] = func_8928
mod = relay.transform.InferType()(mod)
var_8929 = relay.var("var_8929", dtype = "uint8", shape = ())#candidate|8929|()|var|uint8
var_8930 = relay.var("var_8930", dtype = "uint8", shape = (7, 1))#candidate|8930|(7, 1)|var|uint8
output = func_8928(var_8929,var_8930,)
func_8931 = relay.Function([var_8929,var_8930,], output)
mutated_mod['func_8931'] = func_8931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6395_call = mod.get_global_var('func_6395')
func_6396_call = mutated_mod.get_global_var('func_6396')
call_9024 = func_6395_call()
call_9025 = func_6395_call()
uop_9027 = relay.log(call_9024.astype('float32')) # shape=(5, 8, 15)
uop_9029 = relay.log(call_9025.astype('float32')) # shape=(5, 8, 15)
output = relay.Tuple([uop_9027,])
output2 = relay.Tuple([uop_9029,])
func_9035 = relay.Function([], output)
mod['func_9035'] = func_9035
mod = relay.transform.InferType()(mod)
output = func_9035()
func_9036 = relay.Function([], output)
mutated_mod['func_9036'] = func_9036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3286_call = mod.get_global_var('func_3286')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_9074 = func_3286_call()
call_9075 = func_3286_call()
func_4905_call = mod.get_global_var('func_4905')
func_4907_call = mutated_mod.get_global_var('func_4907')
var_9087 = relay.var("var_9087", dtype = "float32", shape = (3136,))#candidate|9087|(3136,)|var|float32
call_9086 = relay.TupleGetItem(func_4905_call(relay.reshape(var_9087.astype('float32'), [14, 224])), 0)
call_9088 = relay.TupleGetItem(func_4907_call(relay.reshape(var_9087.astype('float32'), [14, 224])), 0)
func_2884_call = mod.get_global_var('func_2884')
func_2885_call = mutated_mod.get_global_var('func_2885')
call_9105 = relay.TupleGetItem(func_2884_call(), 1)
call_9106 = relay.TupleGetItem(func_2885_call(), 1)
func_5316_call = mod.get_global_var('func_5316')
func_5320_call = mutated_mod.get_global_var('func_5320')
const_9111 = relay.const([True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False], dtype = "bool")#candidate|9111|(1056,)|const|bool
call_9110 = relay.TupleGetItem(func_5316_call(relay.reshape(const_9111.astype('bool'), [8, 11, 12]), relay.reshape(const_9111.astype('bool'), [8, 11, 12]), relay.reshape(const_9111.astype('bool'), [8, 11, 12]), ), 0)
call_9112 = relay.TupleGetItem(func_5320_call(relay.reshape(const_9111.astype('bool'), [8, 11, 12]), relay.reshape(const_9111.astype('bool'), [8, 11, 12]), relay.reshape(const_9111.astype('bool'), [8, 11, 12]), ), 0)
func_7242_call = mod.get_global_var('func_7242')
func_7244_call = mutated_mod.get_global_var('func_7244')
call_9113 = relay.TupleGetItem(func_7242_call(), 1)
call_9114 = relay.TupleGetItem(func_7244_call(), 1)
output = relay.Tuple([call_9074,call_9086,var_9087,call_9105,call_9110,const_9111,call_9113,])
output2 = relay.Tuple([call_9075,call_9088,var_9087,call_9106,call_9112,const_9111,call_9114,])
func_9118 = relay.Function([var_9087,], output)
mod['func_9118'] = func_9118
mod = relay.transform.InferType()(mod)
mutated_mod['func_9118'] = func_9118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9119 = relay.var("var_9119", dtype = "float32", shape = (3136,))#candidate|9119|(3136,)|var|float32
func_9118_call = mutated_mod.get_global_var('func_9118')
call_9120 = func_9118_call(var_9119)
output = call_9120
func_9121 = relay.Function([var_9119], output)
mutated_mod['func_9121'] = func_9121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7743_call = mod.get_global_var('func_7743')
func_7745_call = mutated_mod.get_global_var('func_7745')
call_9146 = func_7743_call()
call_9147 = func_7743_call()
output = relay.Tuple([call_9146,])
output2 = relay.Tuple([call_9147,])
func_9173 = relay.Function([], output)
mod['func_9173'] = func_9173
mod = relay.transform.InferType()(mod)
output = func_9173()
func_9174 = relay.Function([], output)
mutated_mod['func_9174'] = func_9174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_9184 = relay.TupleGetItem(func_5872_call(), 4)
call_9185 = relay.TupleGetItem(func_5874_call(), 4)
func_5807_call = mod.get_global_var('func_5807')
func_5808_call = mutated_mod.get_global_var('func_5808')
call_9190 = relay.TupleGetItem(func_5807_call(), 0)
call_9191 = relay.TupleGetItem(func_5808_call(), 0)
output = relay.Tuple([call_9184,call_9190,])
output2 = relay.Tuple([call_9185,call_9191,])
func_9193 = relay.Function([], output)
mod['func_9193'] = func_9193
mod = relay.transform.InferType()(mod)
output = func_9193()
func_9194 = relay.Function([], output)
mutated_mod['func_9194'] = func_9194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_9201 = relay.TupleGetItem(func_3181_call(), 0)
call_9202 = relay.TupleGetItem(func_3182_call(), 0)
var_9207 = relay.var("var_9207", dtype = "float64", shape = (3, 180))#candidate|9207|(3, 180)|var|float64
bop_9208 = relay.greater(call_9201.astype('bool'), relay.reshape(var_9207.astype('bool'), relay.shape_of(call_9201))) # shape=(3, 180)
bop_9211 = relay.greater(call_9202.astype('bool'), relay.reshape(var_9207.astype('bool'), relay.shape_of(call_9202))) # shape=(3, 180)
func_2503_call = mod.get_global_var('func_2503')
func_2506_call = mutated_mod.get_global_var('func_2506')
const_9214 = relay.const(7, dtype = "uint8")#candidate|9214|()|const|uint8
call_9213 = relay.TupleGetItem(func_2503_call(relay.reshape(const_9214.astype('uint8'), [])), 1)
call_9215 = relay.TupleGetItem(func_2506_call(relay.reshape(const_9214.astype('uint8'), [])), 1)
output = relay.Tuple([bop_9208,call_9213,const_9214,])
output2 = relay.Tuple([bop_9211,call_9215,const_9214,])
func_9224 = relay.Function([var_9207,], output)
mod['func_9224'] = func_9224
mod = relay.transform.InferType()(mod)
mutated_mod['func_9224'] = func_9224
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9225 = relay.var("var_9225", dtype = "float64", shape = (3, 180))#candidate|9225|(3, 180)|var|float64
func_9224_call = mutated_mod.get_global_var('func_9224')
call_9226 = func_9224_call(var_9225)
output = call_9226
func_9227 = relay.Function([var_9225], output)
mutated_mod['func_9227'] = func_9227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mod.get_global_var('func_5807')
func_5808_call = mutated_mod.get_global_var('func_5808')
call_9264 = relay.TupleGetItem(func_5807_call(), 0)
call_9265 = relay.TupleGetItem(func_5808_call(), 0)
uop_9277 = relay.cosh(call_9264.astype('float64')) # shape=(6, 13, 2)
uop_9279 = relay.cosh(call_9265.astype('float64')) # shape=(6, 13, 2)
output = uop_9277
output2 = uop_9279
func_9289 = relay.Function([], output)
mod['func_9289'] = func_9289
mod = relay.transform.InferType()(mod)
mutated_mod['func_9289'] = func_9289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9289_call = mutated_mod.get_global_var('func_9289')
call_9290 = func_9289_call()
output = call_9290
func_9291 = relay.Function([], output)
mutated_mod['func_9291'] = func_9291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6377_call = mod.get_global_var('func_6377')
func_6379_call = mutated_mod.get_global_var('func_6379')
call_9315 = relay.TupleGetItem(func_6377_call(), 0)
call_9316 = relay.TupleGetItem(func_6379_call(), 0)
output = call_9315
output2 = call_9316
func_9320 = relay.Function([], output)
mod['func_9320'] = func_9320
mod = relay.transform.InferType()(mod)
output = func_9320()
func_9321 = relay.Function([], output)
mutated_mod['func_9321'] = func_9321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4131_call = mod.get_global_var('func_4131')
func_4132_call = mutated_mod.get_global_var('func_4132')
call_9322 = func_4131_call()
call_9323 = func_4131_call()
output = call_9322
output2 = call_9323
func_9341 = relay.Function([], output)
mod['func_9341'] = func_9341
mod = relay.transform.InferType()(mod)
output = func_9341()
func_9342 = relay.Function([], output)
mutated_mod['func_9342'] = func_9342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7743_call = mod.get_global_var('func_7743')
func_7745_call = mutated_mod.get_global_var('func_7745')
call_9372 = func_7743_call()
call_9373 = func_7743_call()
output = relay.Tuple([call_9372,])
output2 = relay.Tuple([call_9373,])
func_9380 = relay.Function([], output)
mod['func_9380'] = func_9380
mod = relay.transform.InferType()(mod)
mutated_mod['func_9380'] = func_9380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9380_call = mutated_mod.get_global_var('func_9380')
call_9381 = func_9380_call()
output = call_9381
func_9382 = relay.Function([], output)
mutated_mod['func_9382'] = func_9382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mod.get_global_var('func_4398')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_9387 = relay.TupleGetItem(func_4398_call(), 4)
call_9388 = relay.TupleGetItem(func_4400_call(), 4)
func_125_call = mod.get_global_var('func_125')
func_127_call = mutated_mod.get_global_var('func_127')
var_9409 = relay.var("var_9409", dtype = "float32", shape = (77, 4))#candidate|9409|(77, 4)|var|float32
call_9408 = relay.TupleGetItem(func_125_call(relay.reshape(var_9409.astype('float32'), [7, 11, 4])), 0)
call_9410 = relay.TupleGetItem(func_127_call(relay.reshape(var_9409.astype('float32'), [7, 11, 4])), 0)
output = relay.Tuple([call_9387,call_9408,var_9409,])
output2 = relay.Tuple([call_9388,call_9410,var_9409,])
func_9422 = relay.Function([var_9409,], output)
mod['func_9422'] = func_9422
mod = relay.transform.InferType()(mod)
var_9423 = relay.var("var_9423", dtype = "float32", shape = (77, 4))#candidate|9423|(77, 4)|var|float32
output = func_9422(var_9423)
func_9424 = relay.Function([var_9423], output)
mutated_mod['func_9424'] = func_9424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2822_call = mod.get_global_var('func_2822')
func_2824_call = mutated_mod.get_global_var('func_2824')
call_9444 = func_2822_call()
call_9445 = func_2822_call()
var_9446 = relay.var("var_9446", dtype = "int8", shape = (6, 13, 2))#candidate|9446|(6, 13, 2)|var|int8
bop_9447 = relay.logical_or(call_9444.astype('bool'), relay.reshape(var_9446.astype('bool'), relay.shape_of(call_9444))) # shape=(6, 13, 2)
bop_9450 = relay.logical_or(call_9445.astype('bool'), relay.reshape(var_9446.astype('bool'), relay.shape_of(call_9445))) # shape=(6, 13, 2)
func_3062_call = mod.get_global_var('func_3062')
func_3065_call = mutated_mod.get_global_var('func_3065')
const_9465 = relay.const(1, dtype = "uint64")#candidate|9465|()|const|uint64
var_9466 = relay.var("var_9466", dtype = "uint64", shape = (12,))#candidate|9466|(12,)|var|uint64
call_9464 = relay.TupleGetItem(func_3062_call(relay.reshape(const_9465.astype('uint64'), []), relay.reshape(var_9466.astype('uint64'), [1, 4, 3]), ), 0)
call_9467 = relay.TupleGetItem(func_3065_call(relay.reshape(const_9465.astype('uint64'), []), relay.reshape(var_9466.astype('uint64'), [1, 4, 3]), ), 0)
output = relay.Tuple([bop_9447,call_9464,const_9465,var_9466,])
output2 = relay.Tuple([bop_9450,call_9467,const_9465,var_9466,])
func_9470 = relay.Function([var_9446,var_9466,], output)
mod['func_9470'] = func_9470
mod = relay.transform.InferType()(mod)
var_9471 = relay.var("var_9471", dtype = "int8", shape = (6, 13, 2))#candidate|9471|(6, 13, 2)|var|int8
var_9472 = relay.var("var_9472", dtype = "uint64", shape = (12,))#candidate|9472|(12,)|var|uint64
output = func_9470(var_9471,var_9472,)
func_9473 = relay.Function([var_9471,var_9472,], output)
mutated_mod['func_9473'] = func_9473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8861_call = mod.get_global_var('func_8861')
func_8863_call = mutated_mod.get_global_var('func_8863')
call_9480 = relay.TupleGetItem(func_8861_call(), 0)
call_9481 = relay.TupleGetItem(func_8863_call(), 0)
func_5154_call = mod.get_global_var('func_5154')
func_5157_call = mutated_mod.get_global_var('func_5157')
const_9502 = relay.const(4, dtype = "int8")#candidate|9502|()|const|int8
var_9503 = relay.var("var_9503", dtype = "int8", shape = (99,))#candidate|9503|(99,)|var|int8
call_9501 = func_5154_call(relay.reshape(const_9502.astype('int8'), []), relay.reshape(var_9503.astype('int8'), [11, 1, 9]), )
call_9504 = func_5154_call(relay.reshape(const_9502.astype('int8'), []), relay.reshape(var_9503.astype('int8'), [11, 1, 9]), )
output = relay.Tuple([call_9480,call_9501,const_9502,var_9503,])
output2 = relay.Tuple([call_9481,call_9504,const_9502,var_9503,])
func_9510 = relay.Function([var_9503,], output)
mod['func_9510'] = func_9510
mod = relay.transform.InferType()(mod)
var_9511 = relay.var("var_9511", dtype = "int8", shape = (99,))#candidate|9511|(99,)|var|int8
output = func_9510(var_9511)
func_9512 = relay.Function([var_9511], output)
mutated_mod['func_9512'] = func_9512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7070_call = mod.get_global_var('func_7070')
func_7071_call = mutated_mod.get_global_var('func_7071')
call_9554 = func_7070_call()
call_9555 = func_7070_call()
func_2582_call = mod.get_global_var('func_2582')
func_2587_call = mutated_mod.get_global_var('func_2587')
const_9558 = relay.const([[10,-4,-4,-6,3,7,-1,1,-9,5],[7,9,-5,-5,-6,8,7,-4,-6,-3],[4,-2,-6,-10,-1,-2,-3,6,-1,-6],[9,3,-7,-8,1,2,1,4,-7,2],[-9,8,5,-1,4,5,3,-1,9,3],[-1,5,9,7,4,-5,4,-5,9,5],[-3,-1,8,-7,1,7,5,4,-3,-9],[2,10,-9,-5,2,4,-2,-4,-6,7],[2,-1,-8,-10,-8,10,5,6,-6,2],[2,-7,-10,-5,5,6,-10,6,-4,8],[7,3,-9,-4,3,5,2,2,-5,10],[10,9,5,-7,2,-2,-5,-9,-6,-9],[10,4,10,-6,4,-6,4,-4,9,-9],[-9,9,7,-8,2,-4,3,-8,6,9],[2,2,-9,6,-10,-8,-5,4,-5,-7],[-2,-3,8,10,-5,-2,4,-4,2,10],[2,-4,-5,9,3,-8,6,1,-3,6],[2,7,-1,9,-9,-9,9,8,-2,-3],[-4,1,4,-3,-5,-7,4,4,-2,-1],[4,-4,3,-4,-10,9,1,5,4,-2],[-5,-7,-2,-8,-4,7,-1,8,2,9],[2,-9,10,8,-10,-2,-9,7,9,-6],[-6,-10,4,9,3,-8,-7,-8,1,-10],[8,9,10,9,-1,4,-9,-2,-4,9],[-10,2,3,4,-8,6,-8,-3,1,10],[10,1,8,-2,-6,-8,7,-6,10,6],[-4,-3,-9,3,-10,-4,-6,-8,8,-7],[-1,3,-4,10,-8,-3,-1,5,5,-10],[10,3,-6,-10,-3,1,3,1,2,3],[-8,-2,-5,8,4,4,9,2,10,-2],[-1,8,8,1,-1,-7,3,9,-6,-7],[-3,6,8,-1,-2,-1,7,-8,9,2],[6,-2,-9,-8,-7,5,5,4,-9,-2],[-8,-7,4,-10,7,-6,1,1,-8,3],[3,7,-9,-3,-6,3,-10,8,6,-9],[-10,-5,5,-1,4,-10,1,-6,8,1],[6,9,6,2,-7,-4,-7,8,-4,5],[-2,-6,-2,-3,2,6,10,4,5,8],[8,-1,-3,-7,7,-7,-8,-1,-5,-3],[-2,5,-6,-8,4,5,9,8,-4,-9],[10,-9,8,1,6,-10,-6,-10,3,-5],[5,-2,-5,-4,-5,7,10,-6,-8,10],[2,2,-7,2,10,1,-7,-10,3,-9],[-9,-6,4,7,-8,8,9,9,4,-7],[7,10,1,6,5,2,4,3,9,-2],[7,6,1,3,7,10,8,-9,1,10],[-1,-2,-10,4,4,-6,-9,-8,-8,-6],[1,-8,-9,7,-2,-7,-1,1,5,3],[-3,-2,-1,-3,-3,3,-6,-4,-2,6],[-8,-9,4,-10,-5,-10,-10,-1,7,2],[-2,6,10,4,1,-5,6,5,4,-3],[-8,7,7,1,-1,-4,9,-2,1,10],[9,10,9,-9,1,-4,-3,7,1,4],[10,-5,-9,10,7,4,7,-3,-9,1],[-2,-7,8,-5,-1,-8,-8,-3,-4,-8],[5,6,8,-8,10,5,4,9,5,8],[-2,8,-3,-6,4,-7,10,8,-3,-2],[-6,4,-10,-10,6,2,6,9,-3,-6],[3,-5,-7,8,1,-4,1,-7,-1,-8],[6,-9,2,-4,5,3,5,10,2,3],[-9,10,-7,1,-7,6,-8,8,3,6],[-5,-5,-6,-4,2,-4,6,-1,3,2],[-10,5,-5,10,6,7,7,-4,8,3],[-9,3,1,10,-5,-5,-1,2,5,4],[-10,-5,-5,-1,-8,3,3,3,-9,9],[-5,8,7,2,2,5,6,-10,-10,-4],[-7,-6,-2,-4,3,-4,10,-6,1,-10],[3,6,5,2,7,4,2,4,-8,-6],[4,9,1,-10,3,-5,5,-8,7,6],[6,8,7,-2,2,5,-8,-7,-2,-3],[-9,5,-2,-4,5,-5,-9,10,6,-10],[2,2,4,10,10,-2,4,5,-10,-6],[-9,7,3,4,9,-8,1,-10,-1,10],[-6,2,-10,5,-6,-7,2,-2,1,-2],[10,-3,10,-4,4,6,-6,9,5,-6],[-6,7,8,3,-3,-2,-5,-4,8,9],[1,3,6,-3,-9,4,-3,3,8,1],[-3,6,7,6,-9,-9,-10,8,-6,9],[-10,-1,3,2,-2,-5,-7,-2,3,2],[-2,-2,3,10,-9,-3,1,-1,7,-6],[-8,3,-3,2,2,-8,4,9,-10,-7],[8,-7,3,3,-1,1,9,-9,-1,-10],[4,9,10,7,9,-10,-3,7,-4,10],[-1,-9,6,-5,-8,2,-7,-1,-1,8],[2,10,-4,3,-9,-7,3,3,1,-8],[4,-10,5,9,-10,7,-4,7,-5,-8],[-3,-5,9,8,7,-9,-10,-2,-2,10],[-8,8,-5,10,5,-4,-2,-7,-6,-3],[4,4,4,-8,8,2,6,-8,5,1],[-9,-10,-4,4,-3,5,-2,1,6,4],[-7,10,4,-8,-9,1,-6,8,10,-1],[10,10,6,8,1,6,6,-5,7,3],[4,3,-7,-9,-5,-1,8,-9,-5,6],[6,-7,-9,7,8,3,4,-10,-9,7],[1,2,-9,4,5,1,-6,-8,-3,-3],[2,10,2,-6,-9,6,1,1,-7,8],[-7,-7,-9,7,7,10,-6,7,10,-8],[6,-3,1,1,-9,2,-7,-8,-4,-8],[-7,-2,9,-8,1,-2,-9,6,-8,-8],[7,2,10,10,-7,7,-9,6,6,-10],[1,8,6,-9,-2,-1,10,-2,-5,8],[-3,5,-4,1,-6,-9,-3,-8,2,3],[-6,-2,8,-1,-8,-5,2,4,-3,-7],[6,-8,4,7,-3,9,-5,-10,-7,-5],[9,-8,10,-8,7,-3,-1,1,7,3],[-10,-1,-5,7,-1,-9,-2,1,8,-4],[5,7,10,-3,-8,7,1,3,1,10],[-4,-4,5,-8,-5,8,-2,9,-5,-9],[1,10,-5,7,-3,-10,5,3,9,3],[-6,5,-7,1,7,4,-5,-9,5,6],[5,7,10,-2,-3,-3,5,8,2,-4],[7,-6,-10,5,-1,5,9,-5,-6,-5],[1,8,6,8,5,-7,-9,9,6,-7],[6,-2,-6,3,-2,-10,8,9,-8,-4],[-10,-7,3,-10,-9,7,-9,-2,6,8],[6,2,-10,10,9,-10,6,-10,3,-10],[-7,10,8,4,7,-3,-1,-7,-6,-8],[-4,8,6,-10,9,3,-9,-3,-5,10],[-10,5,5,-4,-2,10,1,-5,-5,5],[-5,2,-3,10,6,2,-2,-7,10,10],[2,-7,7,9,6,-7,-6,6,8,9],[-5,-7,-9,-6,6,2,-5,2,-10,-3],[8,-1,9,-4,-3,-10,-8,-7,-3,-8],[8,-8,9,-2,-2,-9,-3,5,-6,-10],[5,-9,-8,2,9,2,-9,8,-4,-9],[5,9,6,1,-4,-3,2,-2,10,6],[3,7,-10,-8,-7,-1,4,-10,3,-4],[-4,-7,-1,-1,-2,-2,-4,-7,-8,-9],[3,-5,1,7,7,-2,-2,-9,8,6],[4,-7,1,-3,8,-1,-5,7,-4,-1],[-8,1,-3,-5,-8,-5,10,-1,5,-7],[-7,3,7,-9,4,9,6,-4,-2,-4],[-9,-3,10,-8,-9,7,5,9,9,10],[-9,-7,-3,-5,-9,3,7,-5,-1,9],[9,-7,5,-4,-5,10,-5,8,8,-3],[2,3,4,-4,2,-7,1,-7,10,-3],[-8,-9,-9,-3,2,-2,-1,-2,4,10],[-3,-10,10,3,9,-5,10,-3,2,-8],[1,-9,-6,9,-10,9,-5,8,-6,-5],[10,3,-7,10,4,4,-7,-10,-5,-4],[-8,-6,2,10,8,5,9,-9,6,-4],[9,-6,10,-1,4,9,10,9,-1,2],[-6,7,-4,-10,6,-1,-3,-1,-2,7],[10,2,-1,-4,9,2,-4,9,-5,-8],[-2,-8,-7,-7,3,-7,-1,-5,-9,7],[-6,1,7,-7,8,5,-6,6,-2,-2],[-8,10,-9,4,-3,-6,-1,8,-9,-2],[4,-9,-10,4,10,9,-9,9,-3,6],[5,4,8,-4,10,-2,-3,5,-7,-7],[6,-5,4,-3,-9,2,8,10,9,1],[-9,-4,-5,6,-7,-9,1,-10,-7,2],[9,-10,2,-2,-3,2,5,6,4,-4],[-7,8,6,-2,10,-1,-10,7,-10,-2],[-2,-4,-2,-9,-4,-9,-7,-8,-4,7],[4,4,-8,5,8,10,-2,8,-7,-10],[1,2,8,-2,2,-8,-7,10,3,-3],[3,-2,-8,-10,-5,-5,-4,4,-9,-4],[-6,-7,5,10,5,9,-7,-4,9,-1],[8,3,-5,4,3,-4,10,-4,1,3],[9,3,-2,2,-2,-10,-9,4,1,-7],[-6,3,-4,-1,3,8,-5,-8,7,2],[3,4,6,5,6,2,-4,-5,4,-3],[9,8,4,5,-6,-3,-1,-10,-6,2],[6,1,-1,-10,4,1,-7,-1,7,-2],[-5,1,-5,2,-5,-3,-10,-2,-3,-5],[8,-4,7,7,3,8,-8,3,9,5],[4,4,2,-5,10,4,8,-4,5,-10],[3,-6,6,-4,-9,-8,7,-6,-1,6],[3,-1,1,-7,-9,3,-4,4,-10,-6],[7,9,9,5,-8,-9,-2,-1,8,-9],[6,8,3,-1,-10,2,-2,-3,8,-1],[10,7,-10,7,10,-4,8,-8,6,3],[-8,-7,-8,3,10,-2,4,4,-10,4],[9,-6,-2,7,6,7,-7,-8,5,-8],[-7,-5,2,7,-2,-1,10,7,6,1],[-8,-7,1,7,-9,10,9,-9,5,-2],[6,8,-5,-8,-1,-2,-7,3,6,-5],[8,3,3,8,-7,-6,6,-10,1,3],[-9,2,-5,8,-8,8,-10,-3,4,-2],[-4,5,4,-4,-7,10,1,4,8,5],[6,-2,-6,-1,8,1,-4,3,-4,-3],[-1,7,-5,-8,-6,1,-8,-10,7,3]], dtype = "uint8")#candidate|9558|(182, 10)|const|uint8
const_9559 = relay.const([9.493727,-6.501001,-8.525306,-7.866883,-7.654325,0.144761,0.064028,-4.576626,5.148178,-5.905057,-9.544843,8.580351,-7.552533,-9.757912,-1.786160,3.967249,2.983771,7.933838,5.996481,3.556518,0.083402,-6.281045,-2.488920,7.954928,8.349618,1.837670,3.628874,0.811549,2.780667,5.752753,-9.334577,7.276618,-2.619436,0.158592,-1.581781,4.333668,-1.814684,3.255219,5.301998,-3.038202,-3.902496,-3.607454,-7.114966,7.688724,3.893972,2.499707,-9.940606,2.075956,1.226097,-2.234754,-3.485061,3.201201,8.363906,5.057581,5.897800,-9.301309,9.206029,0.352635,-0.216688,2.193897,6.215650,8.964585,-5.439135,-6.814375,-1.977892,9.535031,9.767427,7.185463,1.635469,6.908081,-0.481804,-5.409584,-1.176982,8.313873,7.265997,-6.944288,2.022588,-0.354185,-5.592569,1.631316,1.292087,4.273595,3.581042,2.580690,-7.634262,-9.037846,-8.052425,-9.850009,-3.239131,-5.070860,8.321487,3.013792,-5.573040,-4.970942,-2.733309,0.443943,-9.853709,-4.731703,5.244616,2.419258,-3.250979,-7.497478,-6.049721,7.160159,-3.575703,-8.154444,-0.208071,-6.416628,7.578314,-2.453236,-4.538229,4.976583,-5.821812,3.512465,-4.437229,1.804898,-6.641793,6.908130,5.900113,5.650221,-2.032748,9.275047,6.171076,-3.640057,-9.815139,3.814875,-3.424071,1.988913,-4.380794,0.530722,8.456674,-5.710505,-8.998746,2.403461,-4.030343,-0.657675,-3.493369,-6.031069,4.358273,1.808978,1.462150,4.009995,0.825586,-4.641093,2.470723,-6.812256,5.484010,-5.997352,7.914779,5.423201,-8.327325,-6.231034,1.662558,9.508555,0.037762,-6.672804,2.465300,7.196316,-7.601853,-1.583576,6.871963,4.688539,4.493238,-5.429062,2.573027,4.047589,7.403321,-7.375913,-6.123408,-1.029646,-9.034674,-2.165526,-4.346584,1.065963,0.039166,-7.697880,-6.116228,8.072412,6.001289,-3.669527,2.515474,-5.296121,-3.379447,7.439520,-7.519163,-9.590365,-1.863518,-1.350040,-1.865065,-0.572510,-5.101636,-1.136226,-0.666092,-2.743051,-9.634434,-7.607915,-1.846643,-5.458062,0.533856,5.959157,8.730475,5.269098,-7.122218,-9.260053,0.736995,5.628169,7.106487,-4.281355,7.197272,3.754306,-7.630613,-1.265865,6.610514,6.348324,-6.061043,-9.443735,-4.421541,-1.218455,-0.308402,-2.520502,8.093069,8.599917,0.607909,-1.986702,-2.103833,-4.177889,2.001266,-0.216820,-1.436481,3.053921,-0.486570,-5.388780,8.785937,-5.547183,-9.252770,9.539221,-0.853167,-6.971039,4.715121,-4.296830,0.055146,-8.628591,9.392594,9.361972,-2.775500,2.733179,-4.161858,9.728980,-1.555630,8.226644,-9.563929,-7.442326,2.691965,1.496703,0.305733,7.635056,-2.345311,7.348748,-9.195616,8.383194,4.771340,9.628349,0.020036,-5.678256,-3.190335,-4.610802,-3.548755,5.208704,8.469297,-2.805031,0.404012,5.747710,0.081747,0.637013,4.821594,-4.205196,9.238952,3.724986,1.779011,-5.819045,4.307431,-2.000363,9.778088,-6.161850,-3.460384,3.231141,-1.782017,-3.493870,9.712962,4.357316,-3.104317,-6.770044,8.406433,-6.744223,6.383175,4.352289,4.618241,-6.160800,2.014349,-9.390039,-2.783688,5.386978,-0.010844,-1.563833,-9.554193,7.313580,-7.400098,-5.349319,5.920454,-3.509371,-4.544989,2.832696,9.569910,-2.860317,-8.055327,8.862555,9.952727,9.553407,-5.894862,2.328210,5.164237,6.651557,-4.081396,-5.660443,3.353399,-5.394886,-9.060739,6.125240,-1.666118,-9.066206,-4.326375,4.482002,3.546046,-1.054096,-1.318800,-6.536529,-1.528511,7.345588,4.258290,-3.630047,-2.105781,-2.648159,-1.821965,2.617135,-1.484038,-0.543056,3.861364,-2.929154,-0.011152,-8.318974,-2.542952,3.663814,-7.076199,-0.161764,-6.777943,-4.197083,0.547889,8.477412,9.912139,-5.371030,-5.766858,-0.297835,-5.758291,-9.710949,5.282309,-3.369046,4.623458,-9.467877,-6.582675,-6.047549,0.328222,-4.756045,5.241822,7.148056,-9.181113,-3.435079,-6.156996,-3.455322,7.916605,7.436816,3.162045,5.138189,1.046078,-0.155055,-1.854716,-6.076417,-9.242607,-3.977801,-4.784976,-3.248084,-8.279651,-4.901951,8.735146,7.266976,7.085735,-5.836258,-5.338321,-0.835188,3.695770,-1.640470,6.266840,-5.331691,8.424750,4.812732,-0.837517,-1.173379,6.091828,9.601775,6.735518,3.496335,7.421896,7.013173,9.702710,-7.414882,-0.964700,-8.619192,5.305635,6.870920,-8.987206,6.925927,-3.437551,0.480499,-3.095917,7.229146,6.020784,-6.546341,-2.120262,7.406731,6.828895,-8.083670,-9.264539,4.598013,8.349799,-5.087465,-4.648380,-4.399618,1.755639,-2.634902,-7.210782,6.860791,-0.887548,0.644822,4.484579,0.222266,-1.980288,-6.673777,-5.633134,-0.683861,0.596082,5.383988,-1.673676,-5.051275,8.908380,5.752970,-9.244704,-7.953258,7.983582,9.331695,-0.214739,2.981158,7.484639,2.212561,-5.278613,2.612432,-9.630857,3.898861,3.698038,-7.152028,-1.940866,-3.240316,-8.554076,0.797288,-3.967558,-6.230993,9.928107,5.338050,4.627762,7.888697,3.191963,4.729187,8.664477,-5.030355,2.600182,-8.161560,1.263624,-6.875251,4.105643,9.640278,8.542206,-2.157726,7.143995,9.765313,-7.285509,-8.612754,5.635150,9.053554,-1.137675,0.088280,-6.050358,5.706273,8.484708,8.042405,-7.458185,-7.409224,-3.826062,-6.095278,5.618324,-2.645245,-4.567855,8.011138,6.700371,7.260907,-3.124324,6.573562,-3.853087,-2.223330,-8.847798,-5.163573,-2.428465,-6.411383,8.506051,1.592426,-1.613313,-5.048254,-9.508504,9.234849,-2.279271,-6.321203,7.205638,7.635564,-0.841146,4.579996,5.970575,5.641999,0.364466,-6.492425,0.716744,1.608928,1.431575,-3.555096], dtype = "float32")#candidate|9559|(540,)|const|float32
const_9560 = relay.const([-4.613773,-2.035971,9.836110,9.799799,-5.278943,2.115778,-4.837577,1.871055,-8.179405,-4.764727,6.531321,-0.189700,6.151142,9.328033,-1.121851,-8.621140,-5.132404,-7.060272,-0.143422,3.925395,2.386655,-8.616864,-9.355453,8.450151,7.326350,-0.584038,3.984671,-2.559987,3.646786,5.258191,-7.006598,9.733148,-4.631118,7.314931,5.642204,6.703490,4.708628,5.258822,-7.554843,-1.681501,-0.497851,-6.773153,4.401147,0.868284,-0.049861,-9.916453,-0.829378,0.500926,-4.553174,-3.715541,-0.227119,-1.856376,5.728961,4.523585,-1.754073,-0.601554,-4.094807,-1.556010,7.876434,-8.767368,-6.619130,-1.022853,-8.481436,9.192152,-8.130678,7.632075,-8.790222,-7.530033,3.761401,4.708117,-1.433607,-6.221847,-5.448431,-3.870938,-1.336777,-3.244363,-3.788399,-1.048323,-0.874744,9.529751,8.543363,3.047711,-8.474044,0.431222,4.448259,0.270317,-1.814434,-0.360718,-3.266591,-8.053547,-7.803605,7.074531,-5.210034,8.233197,0.885107,2.046111,7.481635,-3.383627,3.492309,6.334850,-4.773433,-2.537956,2.277526,-9.496130,2.933279,-7.267686,7.927973,-0.436149,0.084116,-2.170188,-1.545721,3.618337,9.444829,4.339269,-4.104806,9.073446,3.898422,2.718548,3.118331,-4.903815,3.060052,-4.005752,-0.083701,-2.228272,-5.351943,0.775797,-8.512348,9.978599,-6.689223,-3.965257,7.241088,-3.503986,2.518283,2.943620,5.582325,-0.859349,1.888431,9.142323,8.107803,8.448393,-8.657757,6.037751,-0.142754,-8.383180,5.537508,3.802244,7.301601,-6.591887,8.710966,9.650220,9.753317,7.867796,-6.525622,4.822546,-1.083405,2.544540,8.086240,-8.732907,3.848873,-8.450365,0.643168,-5.291313,7.539073,-7.345329,-0.756857,4.857355,8.570072,-2.972430,8.971293,3.808048,7.200067,9.922838,3.716022,-2.778184,-9.966286,-4.619353,-0.195298,-7.687712,0.468930,-3.558188,-1.504234,8.096117,4.178400,3.629913,0.721109,-7.569180,-8.129690,0.532700,7.619000,-0.436925,9.955635,-9.595470,8.343887,2.241049,1.786866,6.508700,-7.342488,8.898460,-8.257360,-0.021760,3.917604,-0.926676,-3.058560,-1.738427,3.778588,-2.269141,1.046290,-2.200349,9.037384,0.411612,-0.217616,7.039504,4.514403,-8.840527,8.319601,-1.616284,3.594562,-6.841559,-5.078106,-3.264527,-7.687605,-7.747914,6.073191,-2.530566,6.879197,6.630309,-0.750152,-0.817704,5.611499,-4.994307,1.338362,2.051933,7.813915,5.245032,-7.486386,-2.901189,-8.145065,-4.142727,2.200471,-3.519707,-9.129640,-3.468552,-1.389524,9.852053,9.253031,7.802713,-2.290415,-7.850865,-2.771880,4.707209,2.157709,2.865541,7.507800,4.791911,8.987084,8.354114,4.326073,-1.570835,-8.566625,5.794275,7.065422,-3.381381,6.515026,-9.572142,-0.675033,4.217727,5.696612,2.686310,-3.778677,3.989717,7.743192,-8.979368,8.921975,-2.120400,-8.138273,3.725801,-5.334598,7.664260,-1.104339,-6.219138,0.411366,-0.308740,-0.303162,1.789665,-3.613526,-3.289444,4.020703,-9.233059,-9.260725,-1.741846,-0.682137,-8.632367,-2.896002,4.632850,9.456877,0.938725,5.361992,9.279670,-6.899247,-6.724604,-1.276005,-6.770151,6.569806,-8.243146,3.525759,-7.678183,-1.644510,4.609988,-0.874286,-8.764221,-0.353894,9.014784,1.818809,8.974440,9.173290,8.756749,5.755857,-4.927061,-3.832655,-1.903265,5.938589,-6.321963,7.019227,-2.811111,-5.262293,-6.156806,6.980421,-3.265408,-3.633644,-5.358368,2.296034,2.562710,8.728217,-7.817862,-7.120640,8.113391,6.606572,-7.059869,0.127393,2.930294,4.717743,-3.095432,8.234275,5.542245,4.082750,9.805714,8.291266,2.011607,-6.838450,6.913277,-0.823536,3.476273,-1.300010,-6.295936,-7.280804,6.878951,8.790831,-4.164989,-2.720691,3.719579,6.132602,-9.828437,7.867350,6.305028,6.934066,3.180244,-0.563956,-0.765713,-2.658673,-8.281474,-4.307976,-2.220202,-2.188165,-0.487910,-5.258648,-8.806174,-3.002217,5.641107,-9.536040,-8.104094,5.630843,7.144178,-4.224018,-3.739566,-5.978965,5.033420,-4.228119,4.545527,3.830936,1.592210,9.513289,6.026547,-7.241219,4.202852,-5.815754,7.985146,1.320191,9.448976,-8.273258,-5.748233,-9.168206,5.452371,8.930012,5.300460,-7.792910,0.333391,-0.271469,7.572336,8.091892,5.027725,-6.554511,2.968288,9.138853,9.265239,-4.405896,0.781815,-7.731224,4.411783,0.966806,-6.428697,5.268903,3.504338,-2.596557,-4.607567,6.461093,1.103112,-7.572502,-7.771042,9.775194,7.991047,2.387795,1.921159,6.294168,-3.556689,4.416109,-1.182242,-9.075866,5.015961,6.545744,-3.803243,7.702702,-2.101157,-1.657582,-9.830233,8.401265,1.870612,-3.152126,-3.598538,4.852741,-6.511078,4.103854,4.894953,-6.458819,-6.581616,-7.412877,-7.489258,3.724268,-5.364744,0.766418,3.115054,-3.011555,-8.580925,9.508831,2.566017,5.264845,-6.258336,-7.032003,-4.875288,-2.025256,-3.019830,2.926577,-1.901512,-4.767468,-4.819380,4.553737,-3.786613,-6.509669,-4.612987,3.639650,-3.238566,3.640969,4.518138,-8.090395,-5.706927,-4.850754,4.658212,-1.835053,-9.896431,-8.087628,-3.174842,6.661064,-9.706373,5.580981,7.176093,-4.417529,4.443796,-8.230036,7.463527,-0.741785,2.454246,0.532723,-3.952297,6.296298,-2.269012,9.908745,3.278841,9.125546,-4.075525,3.659349,0.575518,2.793360,1.049839,2.618119,-2.769729,7.999354,-2.755807,1.466244,-3.081962,-5.662404,-6.022605,0.995210,-8.054816,0.679169,-8.650875,-5.410280,-6.903395,-0.322313,-6.095427,8.635508,-1.308915,-9.970176,9.350920,0.260574,-5.676683,-2.667101,-6.111720,1.987167,-1.846739,4.965958,1.357305,-8.563138,-5.818032,5.641984,-5.856805,6.150198,2.395413,8.141828,7.106262,-8.704713,-8.298861,9.031233,2.152453,1.752738,4.016038,-4.023518,2.856721,0.027572,5.057124,-6.419294,5.025063,-8.584705,6.061965,9.702584,0.118587,3.053015,-1.088350,-5.698720,2.800502,5.341173,-3.908130,4.625333,-4.277723,4.164373,4.562055,5.321573,-6.453417,-4.843119,8.156875,-2.470479,3.328070,3.310548,-7.893663,6.066980,0.127343,0.067650,-1.951441,0.995757,0.135241,6.450855,-5.053946,6.735994,-4.612092,4.979468,5.127092,-7.773898,7.839991,-4.071297,5.287442,1.966828,-8.112476,3.565890,0.803644,4.341674,7.048198,5.627407,8.174237,-5.626449,-7.329609,3.747815,-2.172796,4.197689,3.790436,5.272600,9.976319,-6.139271,0.488546,3.660406,-8.498529,9.791446,6.769961,-4.594738,3.711837,-4.315482,-6.845296,1.392344,-3.898145,-6.964788,-8.853774,-6.491563,-2.261877,0.087308,-2.975518,-4.900681,4.280334,8.739779,-8.320806,4.152591,-2.212747,-2.215295,-1.284662,3.313929,-7.161485,-6.262158,-2.272614,-5.014878,8.471430,-4.827389,-9.736865,1.455745,2.987955,-9.881989,-5.390333,8.259652,-9.562085,2.616728,-0.074332,7.324407,-5.089241,4.263681,-3.692512,6.922379,-6.763379,-0.678273,-1.349899,-6.091732,-8.411504,6.971378,6.681057,2.531028,-5.575861,-6.554846,-4.928765,7.290257,1.225059,7.215815,9.678525,-0.555125,-9.736759,-3.147436,-5.272491,-7.822016,-5.460114,5.662889,5.598227,7.302152,7.264973,-7.523395,5.427973,-8.728637,-8.194169,-6.204252,-1.606469,9.572170,0.881579,7.149241,4.835970,-0.713609,6.565142,6.565937,2.432942,3.026452,-1.938234,-9.360063,4.291325,-0.857444,-8.150702,0.476583,1.798962,9.036689,1.128396,-1.300313,7.102086,-5.026485,-1.807260,6.915472,-1.808785,-0.110998,-1.905412,-1.709174,3.648097,8.644196,9.341340,-7.614319,-4.896068,-6.199509,-1.776488,-2.968195,4.680313,5.915876,-6.208585,6.478265,5.248084,6.021327,-7.371580,3.120480,-1.789154,1.200026,-7.337242,4.969676,-6.847568,-8.613545,-6.020025,-0.546057,3.231824,-6.636101,-7.234440,-6.278119,5.260174,1.936560,7.417158,-9.357107,7.288585,5.060715,5.015906,-6.698630,-9.786875,1.686955,8.179420,0.762500,7.193609,-4.191161,8.619769,2.603219,-7.801126,3.955857,2.894092,-0.341428,4.418426,-7.149774,-4.427007,-5.165640,2.213968,7.954818,6.205780,9.036592,-2.520610,-1.387302,-3.678567,1.205950,-8.273452,-8.772757,-6.402935,1.431633,6.718224,-3.346700,-5.213623,-6.474994,-9.719728,1.776334,-8.704269,-2.952429,-5.296874,4.443350,-0.663291,-1.245486,4.992451,9.662476,8.330079,0.170229,-6.887542,-0.641207,4.589311,4.465806,-3.029807,9.205240,5.953949,-7.944371,8.288041,4.044049,-7.677297,-0.346012,-6.992899,8.058445,-6.528817,-6.117676,-8.669117,-9.595015,-6.527145,-9.043923,-2.386455,2.679854,7.245057,4.561350,2.544839,5.917255,-5.871948,2.658519,0.264075,-4.339757,-4.459147,-8.457780,2.550112,-8.240036,-1.098204,7.242130,-8.344553,0.849287,-8.920056,-8.617847,1.132497,5.852656,-8.519519,-2.066705,7.171422,9.484721,-5.491437,-8.752376,-9.532345,3.177905,0.638480,2.603829,1.890495,-4.512487,-1.018151,-4.129120,-2.727676,9.864794,-1.789435,-3.880030,2.499654,6.624525,9.369710,5.313923,-3.590375,7.189991,2.939299,-4.841466,6.809366,-6.713294,3.963103,8.661176,-0.872951,-8.609560,-5.425255,-7.921836,1.486206,8.644893,-8.586531,-5.259088,5.391914,-2.603093,0.204281,-9.576814,4.987789,-8.106972,5.131203,-1.829401,-8.067959,-7.775395,2.045777,-2.865171,7.033106,-3.605861,4.827316,-0.068062,-4.664945,5.883204,0.358351,-6.328860,2.306948,-1.076720,-7.209607,-6.417829,8.908633,8.807107,-4.596788,2.184751,-5.049971,3.264519,6.039926,-9.587351,-0.865362,2.855440,2.629031,0.202965,-1.776351,8.466747,-7.388258,0.087384,9.655675,7.435178,1.571971,5.130839,-5.357338,5.518538,-1.064632,9.672421,5.534448,9.063319,-9.414014,6.948526,-8.939440,5.728878,9.387918,-7.080770,9.424200,-6.156069,9.125628,-0.115721,-5.555989,2.070378,-5.301575,3.596967,5.418517,-2.041942,1.589749,-7.105549,9.524037,6.067323,-5.854550,5.433344,9.155893,-8.639119,7.554329,-7.932514,-1.039417,-3.448393,-0.306718,0.805583,-4.942144,9.222729,3.123169,0.528567,9.734023,5.377623,4.195044,6.647744,-9.902736,5.291328,2.402073,3.183245,0.319260,-9.145181,-8.351454,7.809528,9.819339,-9.977465,-7.454882,7.466031,-3.199059,7.441194,7.048070,-2.326580,5.092247,7.574743,9.113469,-7.939627,1.635333,-6.263651,-3.560071,-2.637651,-8.958387,4.865301,4.448051,-0.803583,9.504521,9.398234,4.550763,4.009204,2.786703,2.336335,9.022402,8.770837,-1.132211,-3.109648,2.134679,-5.122064,-3.017160,-2.725009,1.945176,5.503876,-0.653032,7.089500,0.280276,-5.364606,-7.232577,9.360679,-2.391945,-8.333475,0.872620,1.697692,0.255501,-4.526512,1.182723,0.913921,-8.720408,-7.454126,3.139530,-2.590166,-6.886961,2.830301,-7.429823,-9.301106,1.272688,0.086741,-4.635156,1.452075,-0.190088,9.973230,-7.859520,-1.767930,9.408705,-2.888429,9.099827,5.179270,3.783826,-0.533959,-1.879843,-4.640028,0.842722,-4.744809,1.652293,7.743332,5.288819,7.491356,-1.775036,-6.089706,-5.339702,-3.495030,4.168549,4.373339,2.116429,-9.149500,9.945559,0.983163,-2.652773,-6.717400,-5.126180,-3.804536,-3.696226,3.201034,7.809950,-3.297955,-3.992545,4.903057,4.818319,0.854002,-5.946946,-8.785423,-7.524692,-3.070655,4.519203,-2.370890,8.543872,3.366571,4.724987,-1.591673,7.439085,-6.138421,9.468294,3.414309,3.144016,8.025611,9.394374,9.049827,-2.183260,-9.397944,-7.528025,4.350656,1.426235,1.727875,6.186010,-9.757529,-1.963974,9.968220,-0.486938,-6.977495,6.117951,-6.911303,8.397460,-9.259409,6.848593,5.495116,-5.432748,1.075637,-8.319440,-1.535214,-0.313000,-4.334318,8.677110,0.797250,-1.922097,7.706317,6.306322,-7.039437,7.806565,-5.460377,-5.140245,-8.811938,-1.249320,-9.379020,-8.301946,2.962978,2.900493,-3.952404,0.971653,1.808406,2.294632,5.772665,-5.030526,-2.222418,-0.753375,-9.223297,-6.569921,4.268568,2.316704,7.711981,-4.786012,-6.711839,-6.909641,1.269748,-2.336807,-8.518116,1.094045,5.408664,4.582169,-0.502099,-1.783340,-3.191335,9.019080,-6.788144,-6.976353,6.061855,-2.318175,-4.409194,-6.775023,-8.232948,-5.376461,-2.825328,-4.654305,6.278886,3.129114,7.220942,4.535512,7.175597,-2.404376,6.902762,4.127118,6.270512,-1.013110,3.266206,5.626787,-0.475921,-9.047595,-7.684299,-2.988081,-7.798513,6.329805,0.315763,-1.236588,3.423174,-1.561693,2.091276,5.938900,6.979571,-8.875157,-9.912345,-6.633138,-9.477528,-5.348750,7.256758,-6.300821,-7.287030,-6.618419,-1.477537,-5.381719,4.438157,-6.466433,4.516892,2.750774,-0.557539,3.081308,-3.827968,5.692007,-2.447791,3.251819,-3.331538,1.333745,5.967483,-7.674882,-3.768690,3.740965,-7.841394,-2.080153,-8.046981,-5.137929,-9.858808,2.710758,-5.872629,7.511932,-4.991360,-6.684653], dtype = "float64")#candidate|9560|(1232,)|const|float64
call_9557 = relay.TupleGetItem(func_2582_call(relay.reshape(const_9558.astype('uint8'), [7, 260]), relay.reshape(const_9559.astype('float32'), [540,]), relay.reshape(const_9560.astype('float64'), [1232,]), ), 5)
call_9561 = relay.TupleGetItem(func_2587_call(relay.reshape(const_9558.astype('uint8'), [7, 260]), relay.reshape(const_9559.astype('float32'), [540,]), relay.reshape(const_9560.astype('float64'), [1232,]), ), 5)
func_9341_call = mod.get_global_var('func_9341')
func_9342_call = mutated_mod.get_global_var('func_9342')
call_9563 = func_9341_call()
call_9564 = func_9341_call()
output = relay.Tuple([call_9554,call_9557,const_9558,const_9559,const_9560,call_9563,])
output2 = relay.Tuple([call_9555,call_9561,const_9558,const_9559,const_9560,call_9564,])
func_9586 = relay.Function([], output)
mod['func_9586'] = func_9586
mod = relay.transform.InferType()(mod)
mutated_mod['func_9586'] = func_9586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9586_call = mutated_mod.get_global_var('func_9586')
call_9587 = func_9586_call()
output = call_9587
func_9588 = relay.Function([], output)
mutated_mod['func_9588'] = func_9588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9592 = relay.var("var_9592", dtype = "int8", shape = (4, 16, 11))#candidate|9592|(4, 16, 11)|var|int8
var_9593 = relay.var("var_9593", dtype = "int8", shape = (4, 16, 11))#candidate|9593|(4, 16, 11)|var|int8
bop_9594 = relay.bitwise_or(var_9592.astype('int8'), relay.reshape(var_9593.astype('int8'), relay.shape_of(var_9592))) # shape=(4, 16, 11)
func_7894_call = mod.get_global_var('func_7894')
func_7899_call = mutated_mod.get_global_var('func_7899')
var_9599 = relay.var("var_9599", dtype = "int8", shape = (156,))#candidate|9599|(156,)|var|int8
var_9600 = relay.var("var_9600", dtype = "int64", shape = ())#candidate|9600|()|var|int64
const_9601 = relay.const([-4,-6,4,-9,-1,-9,-4,-1,-1,1,9,10,3,-6,4,7,-8,-8,-4,-9,5,-9,-2,-5,-1,2,-2,-5,2,-4,-5,-6,-1,7,1,-2,3,-7,-10,-2,1,-1,8,-8,9,7,-10,-7,7,-8,-10,-7,10,2,6,-2,-7,2,1,6,-9,-4,-7,-3,6,5,10,1,-5,3,-6,-10,10,-10,1,10,8,2,4,-10,-7,-6,-6,-8,-1,-6,-5,-2,10,5,8,3,9,1,-9,4,7,-2,1,6,2,-1,-8,-4,-6,8,-4,10,-6,-7,-4,-2,4,-4,5,-9,9,6,4,6,8,-2,6,-8,-4,9,7,-1,-5,-6,-6,-7,-4,4,2,-5,-5,5,-10,-4,-9,6,-2,6,5,-8,-8,8,8,9,-2,-2,-5,8,9,2,7,-3,9,8,5,5,-1,-5,-4,8,-3,5,-7,-3,-7,6,7,4,-3,9,8,-9,-6,-9,1,8,-10,-1,-6,-7,3,8,5,5,-6,-3,-10,-7,-9,7,-6,5,6,6,4,6,7,9,-9,1,1,-4,-8,-7,7,-10,-9,-10,-3,-8,10,-6,1,10,-10,-7,-6,-1,-10,-3,4,-2,8,-7,-8,10,10,-6,1,-3,8,-3,-9,-1,7,-9,-7,2,-5,-8,6,3,-4,-1,7,-10,-1,9,1,2,4,-7,-4,-4,-9,-2,-10,5,3,3,-9,5,7,-4,6,6,-9,8,-5,-2,7,-1,10,5,3,5,10,-4,6,7,3,-1,-10,6,3,10,-2,9,1,7,-1,-6,2,1,-5,9,4,10,9,9,-4,4,-4,-9,-8,-8,7,-1,3,9,10,8,10,-10,-6,2,10,7,10,6,10,-6,-10,-8,-7,-3,-6,1,-10,4,-9,-5,4,-2,8,4,-4,7,-7,4,-3,-1,9,3,-2,-5,-7,10,4,8,10,4,-4,5,-7,5,8,-8,-7,-6,10,-10,4,8,1,-2,10,4,-6,-5,-10,2,6,6,-1,-4,6,9,7,-9,-5,-9,8,9], dtype = "int64")#candidate|9601|(390,)|const|int64
call_9598 = relay.TupleGetItem(func_7894_call(relay.reshape(var_9599.astype('int8'), [6, 13, 2]), relay.reshape(var_9600.astype('int64'), []), relay.reshape(const_9601.astype('int64'), [390,]), ), 2)
call_9602 = relay.TupleGetItem(func_7899_call(relay.reshape(var_9599.astype('int8'), [6, 13, 2]), relay.reshape(var_9600.astype('int64'), []), relay.reshape(const_9601.astype('int64'), [390,]), ), 2)
output = relay.Tuple([bop_9594,call_9598,var_9599,var_9600,const_9601,])
output2 = relay.Tuple([bop_9594,call_9602,var_9599,var_9600,const_9601,])
func_9604 = relay.Function([var_9592,var_9593,var_9599,var_9600,], output)
mod['func_9604'] = func_9604
mod = relay.transform.InferType()(mod)
var_9605 = relay.var("var_9605", dtype = "int8", shape = (4, 16, 11))#candidate|9605|(4, 16, 11)|var|int8
var_9606 = relay.var("var_9606", dtype = "int8", shape = (4, 16, 11))#candidate|9606|(4, 16, 11)|var|int8
var_9607 = relay.var("var_9607", dtype = "int8", shape = (156,))#candidate|9607|(156,)|var|int8
var_9608 = relay.var("var_9608", dtype = "int64", shape = ())#candidate|9608|()|var|int64
output = func_9604(var_9605,var_9606,var_9607,var_9608,)
func_9609 = relay.Function([var_9605,var_9606,var_9607,var_9608,], output)
mutated_mod['func_9609'] = func_9609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4526_call = mod.get_global_var('func_4526')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_9690 = relay.TupleGetItem(func_4526_call(), 0)
call_9691 = relay.TupleGetItem(func_4528_call(), 0)
func_3396_call = mod.get_global_var('func_3396')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_9696 = func_3396_call()
call_9697 = func_3396_call()
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_9700 = relay.TupleGetItem(func_3819_call(), 3)
call_9701 = relay.TupleGetItem(func_3821_call(), 3)
output = relay.Tuple([call_9690,call_9696,call_9700,])
output2 = relay.Tuple([call_9691,call_9697,call_9701,])
func_9720 = relay.Function([], output)
mod['func_9720'] = func_9720
mod = relay.transform.InferType()(mod)
mutated_mod['func_9720'] = func_9720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9720_call = mutated_mod.get_global_var('func_9720')
call_9721 = func_9720_call()
output = call_9721
func_9722 = relay.Function([], output)
mutated_mod['func_9722'] = func_9722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mod.get_global_var('func_4398')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_9744 = relay.TupleGetItem(func_4398_call(), 5)
call_9745 = relay.TupleGetItem(func_4400_call(), 5)
func_8671_call = mod.get_global_var('func_8671')
func_8674_call = mutated_mod.get_global_var('func_8674')
const_9776 = relay.const([1,6,-6,3,4,6,5,-5,-9,-2,-7,-6,-6,7,-6,-7,-8,-7,4,4,5,9,7,-7,-8,-1,1,4,-8,5,1,9,6,6,9,-1,1,4,-3,4,1,-6,5,-10,-1,6,-10,5,-2,8,-2,-4,9,9,-1,3,10,-6,3,9,4,8,-8,-2,4,2,10,-9,7,1,2,-10,7,-9,-4,4,2,2,5,-2,3,-6,-3,-2,-4,-6,8,1,4,6,8,5,-2,-2,10,-5,-10,-8,6,1,4,8,-7,-9,-1,-8,5,-1,-10,-1,8,7,-6,3,4,2,3,-10,-1,1,2,-2,-5,-1,7,7,-9,-7,9,5,-4,-9,-6,-9,-6,10,-2,-4,-5,-1,-10,-2,-5,1,7,-5,-4,-9,-1,-9,9,-6,10,-7,8,1,-6,-6,4,-5,3,3,2,10,-10,-4,-6,9,2,-5,4,8,-1,-3,2,-5,5,4,9,3,-1,-8,7,7,3,-10,9,7,2,4,-5,9,-6,9,7,5,-9,8,-2,5,-6,10,-3,-5,8,-9,8,-5,2,-2,-6,-8,-1,10,9,7,-2,-1,8,2,-3,9,10,8,7,-1,-8,-5,5,-10,-5,-2,-8,2,6,9,6,5,-3,-7,2,1,-7,8,-6,-8,7,-7,-10,-8,4,8,-9,-5,-5,-3,10,-8,4,1,-4,10,9,-6,-6,-7,-6,-10,9,7,8,2,6,7,8,10,8,-3,7,8,-6,6,2,-6,1,-5,-5,-9,1,-1,-7,-10,10,4,5,-3,-8,4,4,9,7,-6,-4,-1,4,-3,4,-10,7,4,-7,-4,5,-3,1,-6,-9,-9,1,10,-4,8,6,-4,1,6,6,-3,9,-2,1,7,2,2,7,-9,-5,-1,-5,4,5,-6,-2,-4,8,-1,5,6,5,-3,2,-5,10,-7,-3,3,-3,-8,1,-3,-7,-5,-4,2,-2,2,-6,10,7,1,10,-9,-4,-5,-9,1,5,-10,10,8,6,4,9,6,-3,5,10,6,10,-10,-4,-9,-8,9,3,-9,-7,9,-9,3,1,-3,3,6,3,-6,-8,5,6,-3,1,-5,5,6,8,-5,-7,-1,-10,-4,4,9,5,-9,7,-7,6,-7,-8,6,-2,7,9,-10,9,-3,5,7,7,-10,-10,5,1,-6,4,-6,-10,4,5,2,9,8,-7,-2,3,-1,1,8,5,-2,3,-5,-3,6,-4,-3,-2,-7,-10,-5,2,-5,-1,6,6,-7,8,-3,3,-10,-8,2,-5,-10,9,-7,1,-6,6,8,-2,10,9,10,5,-8,6,-2,10,-8,-9,-4,9,-3,-3,-7,-10,-4,2,-8,5,-7,-10,2,3,1,-4,-2,-4,-10,-10,10,3,6,8,-2,1,-6,10,-1,7,-5,-6,8,4,4,4,-3,-10,2,-4,-2,6,8,-5,3,2,7,-6,7,-10,5,7,-10,-6,4,9,-7,-2,-4,-3,-1,4,-2,-10,10,1,5,-3,4,9,1,4,6,-2,-4,-5,1,-2,10,1,-3,3,-10,-5,8,-4,6,7,-5,10,6,-4,-5,-10,-8,4,5,1,6,2,2,10,-6,-7,6,2,-5,8,5,-6,1,6,7,-5,-3,-6,-5,-2,5,-3,9,2,-4,-5,-10,-3,8,1,5,10,-3,5,-5,10,-8,-1,-10,10,-7,4,5,10,-7,1,-7,1,1,9,-3,-8,-5,8,3,-1,5,8,3,1,1,1,5,9,8,-2,8,-1,-10,-8,9,3,-3,1,-1,5,6,-9,7,-9,-5,-5,-2,5,9,4,3,1,-10,-3,9,-4,-1,8,-2,-3,1,-1,-8,4,2,-5,-7,2,-3,2,-2,-6,3,2,-2,-2,5,-5,-2,10,9,8,6,-5,4,8,6,-8,10,4,-5,5,2,2,-9,5,-10,3,-2,2,8,9,-5,-2,-6,-7,3,-8,-1,8,-5,-7,-7,-8,1,-4,-1,2,1,-1,10,-8,7,9,-8,-8,-1,5,-7,6,4,-6,6,-1,2,4,7,7,7,3,-5,8,6,-4,8,-1,-2,9,3,-7,-1,8,-2,-5,-3,6,-9,-3,-10,8,-9,-2,3,10,-3,-2,-7,-4,7,10,6,-9,-2,10,1,10,6,-4,-5,-7,-1,-3,-3,-9,-6,2,7,-7,-6,-9,-6,1,-4,2,-9,-6,-10,-1,5,3,1,3,9,-6,-8,5,5,7,9,9,-8,8,-5,1,3,1,-1,1,-6,-6,2,-10,7,6,-5,-4,9,1,5,4,-7,-9,1,2,-6,2,10,-3,-7,3,-6,-7,10,-1,-1,2,-1,-10,-10,-8,1,-4,-1,-9,8,4,-10,-8,-8,-5,5,-1,-10,-7,-3,9,-4,-4,10,5,5,3,-10,-6,-2,-9,2,-1,1,3,4,8,4,5,7,-3,9,10,7,-8,-10,-5,-9,5,6,-3,-9,-8,-5,7,5,6,6,-3,-5,3,2,-8,-6,-8,-10,-3,-4,-1,8,-10,-8,6,4,6,-2,5,-6,-4,5,-5,5,-3,2,7,-2,2,-5,3,-8,1,7,-6,8,-7,2,-7,3,3,3,-5,6,4,-6,3,7,7,-9,-9,3,-1,10,-1,9,8,5,-9,-1,-4,-2,-2,-2,-3,2,-9,9,-9,1,4,3,4,-5,8,-7,-4,1,6,-7,-6,4,-3,7,-4,9,8,9,-1,-4,2,-3,-10,4,-10,8,9,1,-5,-3,5,-6,-5,7,-9,7,2,-8,4,10,-3,10,-10,-6,-7,3,-3,7,6,-6,-4,-8,2,-1,-10,-10,1,6,9,4,1,10,-10,1,-10,3,-9,2,-1,-8,6,-5,-8,-6,-3,4,2,7,10,10,-5,6,5,3,-9,-6,-9,-1,2,-5,-2,10,-5,-5,-6,-7,-7,-5,8,-8,-1,5,-5,-8,-6,3,-3,9,1,5,9,10,-4,8,-7,3,1,1,-4,5,3,5,5,6,-10,-5,2,4,-2,-1,9,8,-2,7,7,4,-4,-6,5,-4,2,3,-7,-3,7,10,8,7,-7,5,-8,6,2,-10,-5,-1,4,-2,-8,9,-10,3,-7,9,-7,-1,-5,-9,-10,-3,1,-1,-7,5,-9,3,3,7,-8,-5,-1,4,-3,5,9,-8,4,-9,-4,8,-9,5,9,-4,-8,-4,5,-9,10,-2,3,-3,-9,10,7,7,9,9,-5,6,2,-4,-9,-5,-8,10,-7,10,5,7,6,-9,-7,-4,1,-8,2,-10,-7,-2,2,-6,-6,2,4,5,-7,-8,3,9,-4,7,-8,-8,1,-8,3,3,8,-3,7,4,-4,-10,-4,3,3,5,6,-4,5,-4,-6,10,-2,-8,-2,-5,-5,-3,2,-9,5,-6,-9,-2,4,3,-2,-4,5,-5,6,-3,-5,-2,-4,3,6,4,2,10,-3,6,7,2,-3,10,9,10,2,2,-4,-7,6,6,9,-4,8,-10,1,6,2,-3,1,-6,5,1,3,-10,1,-7,-1,-7,-2,-3,-10,6,6,5,-3,10,-9,7,-1,10,-2,-4,-7,-1,9,-1,6,-3,7,10,6,-7,-3,6,-1,7,5,-6,4,3,-3,2,-2,-2,10,-10,-5,3,3,-3,-10,-10,2,7,-3,-9,7,-4,4,-9,-9,5,9,-2,-1,-7,-5,-6,-2,5,5,10,3,10,-1,6,-9,-3,-10,1,2,-2,4,6,-1,1,-2,6,6,-5,-7,8,3,-4,-8,4,-2,9,-4,-2,-5,-1,-4,4,-4,-7,-1,7,-6,-7,-4,8,-7,2,3,6,-6,7,-5,10,-4,-10,-9,9,6,4,6,5,-7,7,-8,-8,-10,-4,7,-4,-10,6,-1,-7,-2,8,10,-3,10,-9,-3,-5,-3,9,5,-1,-10,-6,-3,-2,3,2,3,4,-7,4,-1,4,9,6,-7,-9,-5,9,-8,-10,1,8,-1,-1,-7,-8,-3,-6,6,-8,-8,-9,2,10,1,4,-4,-9,-7,3,5,-4,-4,3,-10,-10,-6,3,10,-9,-3,-4,5,2,-4,-6,4,7,10,-7,-9,-3,9,4,-9,-10,-7,-9,-10,4,4,2,2,8,-9,4,-4,-4,3,2,-2,4,9,-2,4,2,10,10,5,-3,4,4,-4,-1,-10,-9,-5,2,8,-10,3,-2,8,-4,1,9,7,-5,4,10,-7,6,1,6,5,-2,8,1,10,-10,5,8,3,-4,7,10,-10,8,6,3,-7,-2,-2,4,-10,-3,-2,-8,-2,1,-4,-5,-9,10,-6,9,-1,-2,-5,5,9,-10,-8,-5,1,-2,-6,3,-2,3,9,3,2,-3,2,-2,-5,-1,3,3,-3,-2,4,6], dtype = "uint32")#candidate|9776|(1650,)|const|uint32
call_9775 = relay.TupleGetItem(func_8671_call(relay.reshape(const_9776.astype('uint32'), [5, 330])), 1)
call_9777 = relay.TupleGetItem(func_8674_call(relay.reshape(const_9776.astype('uint32'), [5, 330])), 1)
uop_9783 = relay.cos(call_9775.astype('float64')) # shape=(8, 8, 14)
uop_9785 = relay.cos(call_9777.astype('float64')) # shape=(8, 8, 14)
func_6980_call = mod.get_global_var('func_6980')
func_6981_call = mutated_mod.get_global_var('func_6981')
call_9788 = relay.TupleGetItem(func_6980_call(), 0)
call_9789 = relay.TupleGetItem(func_6981_call(), 0)
output = relay.Tuple([call_9744,const_9776,uop_9783,call_9788,])
output2 = relay.Tuple([call_9745,const_9776,uop_9785,call_9789,])
func_9797 = relay.Function([], output)
mod['func_9797'] = func_9797
mod = relay.transform.InferType()(mod)
output = func_9797()
func_9798 = relay.Function([], output)
mutated_mod['func_9798'] = func_9798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_9802 = relay.TupleGetItem(func_4038_call(), 0)
call_9803 = relay.TupleGetItem(func_4039_call(), 0)
func_9586_call = mod.get_global_var('func_9586')
func_9588_call = mutated_mod.get_global_var('func_9588')
call_9813 = relay.TupleGetItem(func_9586_call(), 5)
call_9814 = relay.TupleGetItem(func_9588_call(), 5)
output = relay.Tuple([call_9802,call_9813,])
output2 = relay.Tuple([call_9803,call_9814,])
func_9815 = relay.Function([], output)
mod['func_9815'] = func_9815
mod = relay.transform.InferType()(mod)
mutated_mod['func_9815'] = func_9815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9815_call = mutated_mod.get_global_var('func_9815')
call_9816 = func_9815_call()
output = call_9816
func_9817 = relay.Function([], output)
mutated_mod['func_9817'] = func_9817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5682_call = mod.get_global_var('func_5682')
func_5683_call = mutated_mod.get_global_var('func_5683')
call_9833 = func_5682_call()
call_9834 = func_5682_call()
func_6980_call = mod.get_global_var('func_6980')
func_6981_call = mutated_mod.get_global_var('func_6981')
call_9837 = relay.TupleGetItem(func_6980_call(), 2)
call_9838 = relay.TupleGetItem(func_6981_call(), 2)
func_9289_call = mod.get_global_var('func_9289')
func_9291_call = mutated_mod.get_global_var('func_9291')
call_9841 = func_9289_call()
call_9842 = func_9289_call()
func_4780_call = mod.get_global_var('func_4780')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_9853 = relay.TupleGetItem(func_4780_call(relay.reshape(call_9837.astype('float32'), [196, 16])), 7)
call_9854 = relay.TupleGetItem(func_4783_call(relay.reshape(call_9837.astype('float32'), [196, 16])), 7)
output = relay.Tuple([call_9833,call_9837,call_9841,call_9853,])
output2 = relay.Tuple([call_9834,call_9838,call_9842,call_9854,])
func_9868 = relay.Function([], output)
mod['func_9868'] = func_9868
mod = relay.transform.InferType()(mod)
mutated_mod['func_9868'] = func_9868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9868_call = mutated_mod.get_global_var('func_9868')
call_9869 = func_9868_call()
output = call_9869
func_9870 = relay.Function([], output)
mutated_mod['func_9870'] = func_9870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8845_call = mod.get_global_var('func_8845')
func_8846_call = mutated_mod.get_global_var('func_8846')
call_9933 = func_8845_call()
call_9934 = func_8845_call()
func_6550_call = mod.get_global_var('func_6550')
func_6552_call = mutated_mod.get_global_var('func_6552')
var_9962 = relay.var("var_9962", dtype = "float64", shape = (144,))#candidate|9962|(144,)|var|float64
call_9961 = relay.TupleGetItem(func_6550_call(relay.reshape(var_9962.astype('float64'), [4, 12, 3])), 2)
call_9963 = relay.TupleGetItem(func_6552_call(relay.reshape(var_9962.astype('float64'), [4, 12, 3])), 2)
output = relay.Tuple([call_9933,call_9961,var_9962,])
output2 = relay.Tuple([call_9934,call_9963,var_9962,])
func_9979 = relay.Function([var_9962,], output)
mod['func_9979'] = func_9979
mod = relay.transform.InferType()(mod)
var_9980 = relay.var("var_9980", dtype = "float64", shape = (144,))#candidate|9980|(144,)|var|float64
output = func_9979(var_9980)
func_9981 = relay.Function([var_9980], output)
mutated_mod['func_9981'] = func_9981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4131_call = mod.get_global_var('func_4131')
func_4132_call = mutated_mod.get_global_var('func_4132')
call_10002 = func_4131_call()
call_10003 = func_4131_call()
func_9586_call = mod.get_global_var('func_9586')
func_9588_call = mutated_mod.get_global_var('func_9588')
call_10007 = relay.TupleGetItem(func_9586_call(), 1)
call_10008 = relay.TupleGetItem(func_9588_call(), 1)
func_4463_call = mod.get_global_var('func_4463')
func_4468_call = mutated_mod.get_global_var('func_4468')
var_10018 = relay.var("var_10018", dtype = "float64", shape = (270, 2))#candidate|10018|(270, 2)|var|float64
var_10019 = relay.var("var_10019", dtype = "uint16", shape = ())#candidate|10019|()|var|uint16
call_10017 = relay.TupleGetItem(func_4463_call(relay.reshape(var_10018.astype('float64'), [3, 180]), relay.reshape(call_10002.astype('int8'), [156,]), relay.reshape(var_10019.astype('uint16'), []), ), 3)
call_10020 = relay.TupleGetItem(func_4468_call(relay.reshape(var_10018.astype('float64'), [3, 180]), relay.reshape(call_10002.astype('int8'), [156,]), relay.reshape(var_10019.astype('uint16'), []), ), 3)
var_10038 = relay.var("var_10038", dtype = "float32", shape = (3136,))#candidate|10038|(3136,)|var|float32
bop_10039 = relay.logical_or(call_10017.astype('bool'), relay.reshape(var_10038.astype('bool'), relay.shape_of(call_10017))) # shape=(3136,)
bop_10042 = relay.logical_or(call_10020.astype('bool'), relay.reshape(var_10038.astype('bool'), relay.shape_of(call_10020))) # shape=(3136,)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_10043 = relay.TupleGetItem(func_9173_call(), 0)
call_10044 = relay.TupleGetItem(func_9174_call(), 0)
output = relay.Tuple([call_10002,call_10007,var_10018,var_10019,bop_10039,call_10043,])
output2 = relay.Tuple([call_10003,call_10008,var_10018,var_10019,bop_10042,call_10044,])
func_10046 = relay.Function([var_10018,var_10019,var_10038,], output)
mod['func_10046'] = func_10046
mod = relay.transform.InferType()(mod)
mutated_mod['func_10046'] = func_10046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10046_call = mutated_mod.get_global_var('func_10046')
var_10048 = relay.var("var_10048", dtype = "float64", shape = (270, 2))#candidate|10048|(270, 2)|var|float64
var_10049 = relay.var("var_10049", dtype = "uint16", shape = ())#candidate|10049|()|var|uint16
var_10050 = relay.var("var_10050", dtype = "float32", shape = (3136,))#candidate|10050|(3136,)|var|float32
call_10047 = func_10046_call(var_10048,var_10049,var_10050,)
output = call_10047
func_10051 = relay.Function([var_10048,var_10049,var_10050,], output)
mutated_mod['func_10051'] = func_10051
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10078 = relay.var("var_10078", dtype = "float32", shape = (3, 5, 14))#candidate|10078|(3, 5, 14)|var|float32
uop_10079 = relay.cosh(var_10078.astype('float32')) # shape=(3, 5, 14)
output = relay.Tuple([uop_10079,])
output2 = relay.Tuple([uop_10079,])
func_10082 = relay.Function([var_10078,], output)
mod['func_10082'] = func_10082
mod = relay.transform.InferType()(mod)
mutated_mod['func_10082'] = func_10082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10083 = relay.var("var_10083", dtype = "float32", shape = (3, 5, 14))#candidate|10083|(3, 5, 14)|var|float32
func_10082_call = mutated_mod.get_global_var('func_10082')
call_10084 = func_10082_call(var_10083)
output = call_10084
func_10085 = relay.Function([var_10083], output)
mutated_mod['func_10085'] = func_10085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4852_call = mod.get_global_var('func_4852')
func_4854_call = mutated_mod.get_global_var('func_4854')
call_10184 = func_4852_call()
call_10185 = func_4852_call()
output = call_10184
output2 = call_10185
func_10186 = relay.Function([], output)
mod['func_10186'] = func_10186
mod = relay.transform.InferType()(mod)
mutated_mod['func_10186'] = func_10186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10186_call = mutated_mod.get_global_var('func_10186')
call_10187 = func_10186_call()
output = call_10187
func_10188 = relay.Function([], output)
mutated_mod['func_10188'] = func_10188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10294 = relay.var("var_10294", dtype = "float64", shape = (10, 16, 12))#candidate|10294|(10, 16, 12)|var|float64
var_10295 = relay.var("var_10295", dtype = "float64", shape = (10, 16, 12))#candidate|10295|(10, 16, 12)|var|float64
bop_10296 = relay.less_equal(var_10294.astype('bool'), relay.reshape(var_10295.astype('bool'), relay.shape_of(var_10294))) # shape=(10, 16, 12)
func_3363_call = mod.get_global_var('func_3363')
func_3366_call = mutated_mod.get_global_var('func_3366')
var_10305 = relay.var("var_10305", dtype = "int8", shape = (156,))#candidate|10305|(156,)|var|int8
const_10306 = relay.const([-4,1,-10,-10,1,7,-5,9,-4,-7,6,-9,3,-6,4,6,10,-1,-10,-7,4,1,9,-1,9,-7,7,1,5,-2,-1,-6,8,3,8,-9,2,-4,-9,7,5,4,7,10,5,10,10,6,1,6,-9,-2,6,-3,10,-5,-3,7,-4,-3,-8,-4,-9,6,2,-1,-8,2,-10,-9,7,7,2,-10,-10,-7,6,-7,-4,6,5,-6,10,-7,5,3,9,-1,-2,7,-4,10,-6,4,8,-5,-7,5,3,10,-5,9,2,7,1,-8,8,6,5,-3,9,-5,3,8,2,-3,2,3,5,10,3,2,5,5,-7,-2,-10,-7,-9,-10,-4,7,8,1,-9,-9,10,4,-9,-7,1,3,8,-6,-4,7,-9,5,4,9,7,-8,1,-2,2,7,9,-5,-1,-4,-5,-2,-3,4,-2,-3,-2,4,4,4,-5,7,10,-1,-3,5,-5,-6,5,-8,-2,-4,3,-8,5,-2,2,6,-3,4,-1,-6,7,7,-10,8,9,6,1,-10,7,-9,-1,-10,2,-2,4,-1,2,4,-4,-5,6,4,7,-6,-6,-3,1,-3,9,8,-5,-6,-7,-10,3,-6,9,8,6,2,10,10,3,4,1,7,1,5,-4,-10,2,-5,8,1,-9,7,-10,-1,-10,-7,7,9,7,-7,-2,-9,-5,-7,10,-6,-1,-8,-9,6,-4,-10,-6,8,-4,-4,1,1,8,8,6,-6,-8,7,-1,-7,-5,5,-6,5,-7,-8,-4,2,-7,-9,6,-9,2,-10,-1,8,-3,-7,8,-3,-3,-1,10,-9,4,9,7,-4,5,2,10,2,-4,4,-3,5,6,4,-1,-4,-3,7,-10,-9,-5,-1,-10,10,-3,6,-9,-3,8,2,10,-6,-8,5,4,-3,2,3,6,-5,-8,-5,3,4,7,1,-2,2,-8,6,-10,10,-4,5,-8,10,-1,-5,-5,6,-4,9,3,-4,8,-2,2,10,9,-5,-6,-3,10,-3,-6,6,7,-6,5,-1,1,-1,9,6,-9,-5,5,-3,-7,-9,7,-2,1,5,7,10,3,-8,5,10,-6,10,-2,-8,3,-1,3,7,1,-9,-1,-6,-2,-7,-2,-4,10,2,9,3,7,4,-9,-5,2,1,-5,-8,-3,6,9,-6,4,-5,7,-6,-3,-6,9,7,7,7,-4,9,-9,5,-4,9,8,-2,-3,9,7,10,-7,1,4,-6,-2,-10,-1,-9,5,-5,-3,7,-5,1,2,-10,-10,-2,7,-7,-2,-10,-1,10,-8,-10,-1,-6,-1,-8,2,-1,9,9,1,6,4,-6,6,2,10,4,6,10,9,-2,8,-3,9,6,9,-5,10,7,-9,2,8,-3,-8,-6,10,7,-3,6,4,6,-4,8,4,1,-4,-5,1,-1,-10,5,4,10,2,-1,-8,2,8,5,7,5,3,6,-7,-4,-3,-9,-10,-4,2,1,-10,1,4,10,-6,-3,-5,2,7,1,4,6,-6,10,-6,10,-5,6,9,-1,8,-3,-4,-7,2,10,7,-1,6,2,2,8,5,7,9,-8,-3,-2,-7,-7,-8,-4,-2,-7,-6,-2,3,6,-3,3,-2,-9,-3,1,1,-10,4,3,8,-6,-10,-3,-8,2,-3,-3,7,9,6,-1,-7,-5,4,-6,-7,7,1,-10,-10,-10,9,-9,7,8,9,10,10,-6,5,-7,6,-10,5,-6,6,7,9,-2,7,10,9,3,-7,-6,-2,-3,-8,-5,-4,-7,7,6,1,10,7,-3,2,-10,4,9,2,6,6,-2,-2,-3,-4,-3,-8,-4,-7,-3,-4,5,-10,5,6,-1,-3,-5,1,-4,-8,1,-3,10,1,-6,10,-2,6,4,7,6,-8,4,10,6,6,3,2,9,9,-6,-7,-9,4,-6,-9,-10,5,10,-4,3,-6,9,-2,-9,6,-1,-4,7,-6,-8,5,-3,5,-6,-10,9,7,-3,-8,1,-8,4,-3,-9,-4,-3,8,-9,-9,-2,-4,-6,8,-10,-2,8,-3,1,5,-4,-10,10,-3,10,2,3,-10,-4,6,5,-7,7,9,-6,9,-5,-7,6,-2,3,8,-9,-5,-9,9,9,10,5,-6,-4,-9,6,4,9,10,-9,8,-1,2,-3,7,-8,10,6,4,-2,1,-10,-4,10,-1,-4,-8,9,6,-5,-4,10,6,-1,-8,-3,3,-3,-2,-2,-1,-1,3,10,-2,2,8,1,8,4,6,-4,-3,-7,7,8,-8,-8,9,-2,-3,-10,-8,4,-4,1,-8,-3,1,5,-1,-7,-4,-2,5,7,-10,-8,9,-4,2,4,-2,2,7,3,-2,7,-7,10,-4,-9,-3,3,-1,-4,-2,-5,-5,10,-4,-8,-5,-4,-7,-4,3,-5,2,-10,-5,-10,-3,3,-3,8,6,-6,4,-5,6,1,-5,-8,4,-2,2,-6,-8,-3,-2,8,10,10,6,6,-7,5,-3,8,3,-6,3,-2,-1,-2,7,-2,6,2,9,5,-4,5,5,5,-7,-3,-3,1,-1,6,5,-6,1,-2,-7,-6,9,-10,-9,2,-8,-6,1,6,10,-9,-1,5,-4,-2,-8,-4,4,-3,1,-6,-2,9,-10,5,-6,-7,1,8,-3,-6,3,-7,-4,-7,-6,1,7,-3,-6,9,7,8,1,1,10,-4,7,-7,2,3,1,7,-5,-5,3,2,1,7,-10,4,6,-3,9,-6,-8,-10,5,4,-2,-3,-2,-4,-9,-3,-9,-8,-6,10,3,-6,-6,-7,-4,3,10,10,2,-3,4,7,6,10,6,-5,7,7,8,4,-5,-9,-2,-6,-4,5,-6,3,8,2,-3,-3,10,4,6,-3,5,-7,-10,3,-2,4,-1,-2,10,2,-2,-4,9,-2,5,9,7,1,8,5,-2,-10,6,1,5,-7,-2,-1,8,7,1,5,1,7,-10,1,-1,-5,10,-3,1,4,-1,-4,2,-2,9,-3,1,-2,-2,3,2,10,-3,-1,-3,10,1,4,-9,-6,-4,-9,-9,-8,-1,-4,-10,-9,9,9,-2,-7,7,6,-10,4,-1,2,3,-1,-2,9,1,-5,7,-2,7,4,1,-7,2,6,4,3,8,4,-9,2,-3,8,-2,-9,-10,-10,2,-1,-1,-8,-2,2,7,10,9,5,8,1,4,9,-10,-4,-8,-7,-1,-4,7,5,-2,-9,-6,4,-8,5,5,-5,-3,-9,3,10,2,6,-1,-5,-7,-5,-9,-8,6,-8,-7,7,-9,3,-2,-5,-10,-4,-4,-4,-3,4,10,8,7,-8,-8,-8,-1,10,-5,-6,6,4,8,10,6,1,10,-1,-7,3,4,-4,-2,8,1,-10,5,6,-3,3,2,7,-7,-9,9,-10,3,10,10,1,-4,-8,-9,2,-3,-3,-1,9,9,2,9,-3,-10,8,-8,1,3,1,-6,-4,-8,-7,7,8,-3,-6,-4,5,-9,-4,-3,1,6,8,4,2,10,2,-5,-5,-1,-1,9,1,-10,-7,9,8,9,-9,9,5,-1,7,7,4,-1,5,10,10,-10,-4,-6,-4,10,9,5,7,1,3,5,8,-2,-8,8,2,-4,6,-9,-6,-4,-8,-9,6,-10,9,-6,-1,-9,-1,-6,6,-1,1,-3,-9,-10,-7,-2,10,-1,5,-6,-8,-5,4,3,-3,-2,-2,-1,-1,8,1,-10,1,-8,3,-5,8,9,5,-2,6,-3,9,1,-7,10,10,7,-3,2,-8,6,-10,8,7,-4,-5,1,-10,-6,3,5,5,-7,-6,4,-7,-9,-5,10,10,5,10,-1,-10,9,4,7,5,-8,4,-6,2,7,6,-9,3,4,-2,6,-6,5,1,9,-5,-1,-1,-1,-4,-10,6,-9,-5,-4,7,-7,7,3,4,-5,1,10,-3,-6,-9,-9,8,-4,10,8,-8,-2,-6,4,-9,9,-5,3,-1,-8,5,-5,-3,6,7,-3,-8,1,-10,-4,-3,8,-5,7,9,-4,3,9,-8,-1,6,1,7,-10,6,3,-8,-9,-1,6,-2,-4,10,2,8,-5,7,10,8,10,-3,-5,-5,3,1,-8,10,1,-7,9,8,10,10,1,10,-3,-6,6,-5,1,-8,10,-3,7,-5,3,-10,9,5,-7,-1,1,-1,3,6,1,-3,10,-3,3,-5,9,3,5,-8,-6,3,8,-2,9,5,2,10,-3,10,10,6,3,9,-9,10,-6,1,-8,-7,3,-6,1,6,10,-3,5,10,-9,8,6,3,5,-5,9,10,5,6,2,9,-1,-2,2,-6,3,-10,4,-10,-7,1,-9,9,-5,-8,-10,8,-1,-8,2,-5,8,3,-1,2,-10,-6,-4,-2,2,7,-1,3,-5,7,5,-4,9,8,2,8,4,10,-10,8,-4,-4,-2,-7,10,-8,-5,-1,-10,4,8,4,9,2,8,-1,-7,-7,4,7,7,-10,-8,7,-7,-1,-7,8,1,-3,-2,-1,-1,-9,2,10,1,-2,-8,-8,3,3,2,-4,-3,-2,-3,-5,3,3,10,-7,-3,2,9,8,7,10,3,4,4,3,1,4,-10,1,10,4,6,-7,-6,-7,-6,-4,-4,7,6,-5,-5,-3,8,8,-10,3,6,1,5,-5,-6,10,-9,5,-4,-4,-1,-6,9,-9,6,-6,-4,-6,-6,7,-2,-1,-3,-8,-7,8,9,9,9,10,-3,-2,5,3,-1,-3,-1,-5,1,1,-8,-7,4,7,-7,-3,-3,-5,-2,-10,-3,7,-7,8,8,5,-10,-4,-2,2,-10,-10,-7,-1,-5,4,-4,-2,3,-9,9,8,-8,-6], dtype = "uint8")#candidate|10306|(1820,)|const|uint8
call_10304 = relay.TupleGetItem(func_3363_call(relay.reshape(var_10305.astype('int8'), [6, 13, 2]), relay.reshape(const_10306.astype('uint8'), [1820,]), ), 0)
call_10307 = relay.TupleGetItem(func_3366_call(relay.reshape(var_10305.astype('int8'), [6, 13, 2]), relay.reshape(const_10306.astype('uint8'), [1820,]), ), 0)
output = relay.Tuple([bop_10296,call_10304,var_10305,const_10306,])
output2 = relay.Tuple([bop_10296,call_10307,var_10305,const_10306,])
func_10309 = relay.Function([var_10294,var_10295,var_10305,], output)
mod['func_10309'] = func_10309
mod = relay.transform.InferType()(mod)
var_10310 = relay.var("var_10310", dtype = "float64", shape = (10, 16, 12))#candidate|10310|(10, 16, 12)|var|float64
var_10311 = relay.var("var_10311", dtype = "float64", shape = (10, 16, 12))#candidate|10311|(10, 16, 12)|var|float64
var_10312 = relay.var("var_10312", dtype = "int8", shape = (156,))#candidate|10312|(156,)|var|int8
output = func_10309(var_10310,var_10311,var_10312,)
func_10313 = relay.Function([var_10310,var_10311,var_10312,], output)
mutated_mod['func_10313'] = func_10313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6775_call = mod.get_global_var('func_6775')
func_6777_call = mutated_mod.get_global_var('func_6777')
call_10356 = relay.TupleGetItem(func_6775_call(), 0)
call_10357 = relay.TupleGetItem(func_6777_call(), 0)
output = relay.Tuple([call_10356,])
output2 = relay.Tuple([call_10357,])
func_10367 = relay.Function([], output)
mod['func_10367'] = func_10367
mod = relay.transform.InferType()(mod)
mutated_mod['func_10367'] = func_10367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10367_call = mutated_mod.get_global_var('func_10367')
call_10368 = func_10367_call()
output = call_10368
func_10369 = relay.Function([], output)
mutated_mod['func_10369'] = func_10369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4177_call = mod.get_global_var('func_4177')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_10405 = relay.TupleGetItem(func_4177_call(), 0)
call_10406 = relay.TupleGetItem(func_4179_call(), 0)
func_9868_call = mod.get_global_var('func_9868')
func_9870_call = mutated_mod.get_global_var('func_9870')
call_10427 = relay.TupleGetItem(func_9868_call(), 0)
call_10428 = relay.TupleGetItem(func_9870_call(), 0)
func_3637_call = mod.get_global_var('func_3637')
func_3638_call = mutated_mod.get_global_var('func_3638')
call_10438 = relay.TupleGetItem(func_3637_call(), 0)
call_10439 = relay.TupleGetItem(func_3638_call(), 0)
func_7410_call = mod.get_global_var('func_7410')
func_7412_call = mutated_mod.get_global_var('func_7412')
const_10442 = relay.const([4.116850,-6.104223,-7.914570,5.305549,-4.249135,-1.010228,1.893428,1.951299,-1.519887,-8.250173,1.558286,1.610618,-0.413093,5.415570,-9.970923,-7.140640,-2.074537,8.392656,-1.859570,8.309302,-7.475400,3.165009,9.057776,2.599804,-4.106201,2.063991,7.938697,-3.333013,2.194874,9.538515,9.933368,5.358716,-8.155439,-8.200239,6.508693,1.120627,2.662631,5.773468,-5.938584,4.186279,-3.211568,-9.306741,3.446053,7.739466,-4.600160,-1.989504,7.739164,1.975012,-4.399792,-8.846499,-4.339372,6.064096,-2.754450,-8.799047,-9.642450,6.838763,-5.634215,-3.169879,-2.303005,-0.575544,7.837859,-7.430758,-9.372382,-6.722408,-7.670984,2.183060,8.131521,-5.131725,5.868238,-3.371034,-7.007206,9.875544,8.636190,1.439037,0.346457,-6.150765,-5.845809,7.576763,1.307371,-1.472196,-6.516213,-9.154653,-3.827438,7.720768,2.734737,8.783929,9.721963,-2.209550,0.711830,1.899850,-8.004485,9.505457,-4.470459,0.426710,-2.536793,3.338652,4.308887,-1.835011,6.566396,-9.756695,2.931860,-6.428249,-0.910519,9.883424,-7.761321,-3.084755,5.671784,-6.235031,2.976396,7.741523,9.103273,-4.614533,-3.125829,-6.407084,3.101806,-4.127418,8.063772,0.198902,1.395112,2.375607,7.419800,-1.060517,6.773522,5.138258,6.742456,-6.426051,1.284758,4.693242,-8.595376,6.947374,-8.206764,-2.412591,6.224997,4.843537,4.882172,-9.403713,1.294319,9.605624,4.927276,2.855359,3.560806,0.450876,-0.759229,-6.478199,0.200002,-6.691482,1.216792,9.609213,1.823822,1.083656,1.314323,1.689186,5.014456,6.106944,3.440856,3.276190,-7.906486,-0.729832,1.577683,4.781754,-1.597938,1.258712,4.992983,-1.625140,9.129887,6.309970,-8.791912,8.123421,1.667309,-6.914595,9.758529,6.561228,3.281703,2.587387,-2.880825,0.768849,-2.407357,-5.163659,3.149707,-2.396218,-0.709464,3.973068,8.662104,-9.483438,7.301451,0.073239,-3.135952,-6.726816,-9.402989,6.694379,6.874395,-8.678847,3.171301,9.960381,2.547893,4.317707,7.579571,-9.026268,-7.506207,3.683524,-3.372891,-9.122297,2.090465,-1.106523,-6.476838,-9.872390,-3.807388,-8.712804,8.761536,-7.410697,6.243850,-1.926050,-2.077003,9.498194,-5.856505,-8.068303,-4.376506,0.552095,7.365848,3.683355,7.151960,1.686534,-8.260404,1.006573,7.886346,2.623122,-1.800201,1.716122,-9.311918,3.375211,3.887010,4.799592,-7.290760,4.750557,-2.959075,-9.912357,-9.779590,7.010231,6.767310,-3.019114,-9.843712,8.376077,-3.712842,6.743549,-1.469957,5.895213,-9.398174,9.721798,2.812678,6.566628,2.659103,-3.867786,5.549878,5.489744,-2.125472,-7.887117,8.032787,8.795514,-7.708632,-4.144870,7.169420,3.220552,5.942509,5.442254,3.620885,-0.163523,-2.214014,7.278098,0.425037,-2.633607,-6.417610,-6.422408,-5.495088,9.215430,1.186431,5.935302,2.177509,-5.791081,3.590166,-1.572418,-4.560895,-3.709291,7.424524,3.494358,-7.601297,-1.635343,-5.667725,-2.780694,9.026564,0.416918,3.401533,2.069223,7.389119,2.320064,4.007496,-0.794380,7.692733,-8.418797,-3.506015,8.149867,1.974884,3.347511,-1.983439,9.395562,-2.733494,-0.289830,2.976524,-3.897030,-4.660765,-6.421815,7.944601,6.258514,4.225564,2.395232,4.174824,-5.910138,4.163588,-0.530986,9.374271,0.241569,1.894734,9.630990,4.863356,2.341036,-9.465566,-0.488878,-7.072966,-1.890490,4.492457,9.159092,-2.443657,-2.024896,-7.489539,3.782593,-3.714533,5.633634,9.804147,-8.634656,-4.852818,-7.214651,8.107933,3.086324,-2.399835,4.202312,8.193259,1.675168,-4.179753,6.570820,-2.196950,-3.568283,9.302252,-1.175804,0.689998,-1.311677,9.141503,-4.560863,7.693160,-7.273496,8.150040,4.676454,4.195171,-7.477238,-4.516585,-0.963542,-1.470318,8.860472,-8.115706,-3.228812,3.207579,9.846314,6.923049,4.287967,4.574708,9.558590,-0.758415,-1.381308,2.205314,6.851821,-2.240428,-2.662572,8.493177,9.690208,-7.339045,4.032418,-2.730505,-4.963215,-8.833757,-3.446000,8.844875,-0.152373,-7.482472,8.570876,7.850846,-4.902276,-9.883092,-2.416371,-9.584683,5.700059,-0.074336,-1.467642,-3.150403,-2.773964,8.936442,-9.495520,-0.204953,-4.460101,2.068139,-8.593759,-5.658073,8.899822,-7.322083,-4.158991,0.861358,1.942269,-8.865612,-7.126653,-9.969664,7.396638,4.451761,-8.692368,-4.994486,-1.111260,5.486585,-4.310604,8.519050,-5.221099,-3.130191,0.157151,7.751698,4.317765,-4.948084,-2.789073,-0.504193,-0.163161,5.609835,-0.746694,0.699007,-6.666281,2.385398,6.208927,-6.935064,-7.590244,-0.752127,-9.991957,-5.804858,-8.830284,7.016380,2.541038,-8.838146,4.933257,0.644345,-7.873935,-8.545053,6.531932,3.862284,6.803590,-5.619149,-0.427930,1.575872,-3.915359,-5.077871,-5.499526,5.035302,-2.730563,-3.949713,-9.959533,0.882464,-1.599152,6.659633,2.890533,-8.864547,-7.539852,1.217684,-7.905086,0.039399,-2.040574,0.819076,2.075636,8.521621,-8.179198,5.076221,7.413115,2.507548,-8.641951,3.343185,-5.989369,-3.685356,-9.700064,9.023780,-0.567169,-5.225981,1.719044,-0.338592,-0.545008,-8.438355,6.933083,5.850605,-9.152104,-9.551500,1.360203,-1.330990,-2.120153,-6.886865,-1.456209,0.618098,-0.023570,-1.981019,8.922847,-4.904174,-5.647851,-8.111334,-7.533348,-6.180321,9.757199,-4.691839,-3.968986,-5.965137,1.163458,4.135312,-9.661997,6.654964,-0.961300,-9.085544,-8.343051,-7.886705,5.488648,-9.902798,-5.657399,-8.681950,9.594144,4.564212,-4.455685,-9.122983,-0.539900,2.271376,-9.452076,-3.556348,-5.882902,-6.129055,8.861086,6.241811,-7.848877,7.508081,-0.456211,-5.375030,-4.380921,4.484901,6.617948,-5.486945,-8.839763,-5.917485,-9.617337,0.897469,-4.183547,6.357633,-4.898887,-4.737347,-5.507886,-3.159055,-1.195574,3.559338,-4.857304,4.249935,-0.924808,0.016853,2.567986,-1.557813,-0.047228,7.638510,3.906882,6.803736,2.642240,-5.184261,8.378011,7.999278,0.077163,-1.805010,7.477226,9.822192,3.449164,-7.871318,0.822614,1.227397,1.791545,-8.299471,2.292676,-8.053040,9.011087,1.171633,0.473433,-3.363309,3.205703,-9.200244,-2.251997,-3.656346,1.464325,2.102084,0.893357,-2.969449,3.876818,-4.303196,-8.951389,3.885210,5.456828,-3.557040,2.683958,-1.587944,8.754626,-0.968295,-8.949991,-6.593512,7.308879,-5.140492,-3.453808,8.547603,1.111966,-7.618675,1.996199,-7.713492,-0.157463,3.785841,6.011056,-4.735810,4.841397,1.139094,-1.045202,7.068329,9.876625,-5.160473,-1.960226,5.203903,6.742118,-7.666187,9.107676,-7.298615,1.758007,-7.350076,1.901373,-2.430900,1.411523,-2.947338,2.561902,6.945095,-7.857029,-8.647341,-0.144096,-6.538195,9.326005,-5.291443,3.952329,1.574634,-9.444805,-2.492441,-9.557101,-5.016135,-4.877890,5.203994,-3.366381,-2.565510,6.858334,-3.797795,-6.506634,3.625128,4.774429,-3.370747,-0.465713,3.728215,6.674742,-6.813093,-6.160060,8.221619,-1.159347,-4.748845,-2.112448,0.993348,9.019511,3.160545,-0.187466,-6.069055,-3.524901,4.857760,-2.841942,3.630868,-5.257502,4.510640,2.847733,6.947239,-1.133798,-1.918735,-7.413800,-6.468479,6.619046,5.311694,-7.634917,1.786748,-6.321673,-8.306176,-5.883245,1.788384,4.530136,3.404825,5.010150,-1.000406,5.091572,-0.687173,-1.751691,1.280096,-1.182714,-7.126592,-6.296045,6.209069,-4.873122,5.584673,-4.244242,1.025398,-1.239350,-7.590699,0.151302,2.431906,6.370905,-4.900453,-5.210381,-1.492476,-2.357382,2.603444,-3.250277,5.260930,-8.535218,3.261252,5.826690,6.825799,-4.120428,-6.440952,-4.354509,-4.459253,6.459356,-7.315656,-3.687584,3.029929,8.849122,-6.175227,2.854608,-2.887108,-2.884385,-8.356227,-1.339058,5.426954,6.192651,-0.878955,8.874985,-7.384726,4.196667,-5.403924,5.553044,-7.262854,7.759329,-7.510852,-9.745496,-5.740498,6.263118,5.350585,-1.515104,-4.178557,-4.655635,-6.550879,5.199029,-2.939004,6.435292,-0.404794,-3.875968,4.634117,4.655215,8.476330,-6.276785,1.706714,-2.930460,4.188246,8.138249,1.535977,-9.191329,-6.333277,-6.622145,-0.488958,1.296224,-8.587541,2.520375,1.191005,9.309041,-8.182103,8.700589,5.988431,-3.132030,-8.165066,-4.704420,1.053402,0.478815,-1.485794,5.971902,8.961579,-8.445607,-4.036470,4.665713,-7.210964,-9.743181,-7.019013,-6.723910,-0.166406,-6.746335,2.507112,-3.714845,4.242421,-9.864567,9.886949,-5.700755,-6.101300,-4.835722,-2.689940,2.413471,-4.608864,-9.672792,0.756317,2.584216,8.079058,-3.441136,-9.054279,-3.520341,1.767497,-8.342022,-0.194865,4.495468,0.372528,4.333598,-4.027242,-4.910044,9.753886,9.523218,-6.031765,-9.760309,1.299519,-3.494497,6.498574,7.682399,9.217742,9.899611,7.962947,-7.100501,-2.932405,-1.755990,-7.167897,3.359907,6.252015,-2.990711,8.888326,-5.706764,-8.670203,3.775570,9.220552,-6.081536,-0.683570,-5.014363,-4.810541,-0.890527,-8.301439,1.830264,2.603657,-0.253842,-0.013788,-5.270157,9.745646,-7.658033,7.506203,3.982515,-7.165277,8.811037,9.158599,-5.776060,4.360717,-5.871087,-3.771804,-4.181026,4.730547,-9.054425,-7.942364,4.688508,7.320696,6.188009,6.500425,7.499505,-1.674222,-7.627620,-3.632977,6.728732,4.673280,-1.363248,-5.339453,-4.456585,6.231094,7.170318,0.245327,-1.393554,-0.660261,-2.535510,-1.184811,0.025583,-1.678074,6.726217,3.745649,-0.126000,-4.137404,-2.422831,-6.188096,-3.564226,7.768171,6.780301,0.677562,-3.735489,0.662208,9.440972,-4.593446,-2.663093,2.544130,-7.777019,-4.997390,5.041222,7.032860,8.967986,-6.062242,2.774549,2.493495,3.551653,-1.204925,-2.788199,-8.147347,-2.287771,2.566528,8.966950,-6.988790,8.407868,8.608799,6.925425,-3.739977,-5.619666,5.416749,-6.350309,-6.025652,9.773601,9.963587,-8.758218,3.556084,5.659430,6.785447,0.862996,-4.895131,-3.986456,-9.377485,-9.907151,3.230523,5.001745,-5.483882,5.677592,2.562250,-9.919677,5.875138,-6.334369,1.901119,3.542400,0.224118,-1.358801,1.904849,6.213559,-2.292372,-2.246704,-7.716315,-5.362924,6.134141,7.807803,-7.236472,-7.581950,-1.066271,9.362085,-8.097875,-3.962690,1.424985,3.750188,5.434790,-5.306280,-7.273159,1.200462,7.936098,1.690342,-6.731287,6.738397,-9.812780,-1.361390,9.392057,-7.674942,-5.044147,8.179103,3.797690,-7.520364,5.138042,8.457853,9.588827,-1.619754,-8.289671,2.840435,-9.696261,-4.538567,-7.635926,8.427474,-0.413906,4.472344,-3.757001,-9.591704,4.319906,-3.924555,-2.778956,-7.898208,9.135680,-2.310017,6.370844,-8.185957,-3.753716,-4.944757,3.108289,-0.531010,-0.928438,-5.538419,-6.732108,-7.211935,3.139219,-4.649871,-5.916875,9.783541,3.327808,-6.267937,1.108890,-4.766883,4.813213,2.246027,-2.990634,-9.365662,7.306981,3.238452,0.196477,-3.696505,3.619136,-1.805749,2.422538,8.641464,2.295935,9.897321,-4.271504,1.571144,3.179271,-5.848454,-7.743435,-0.706368,0.171504,-8.940455,2.053810,5.334661,7.037226,6.734500,3.927921,-9.920019,-6.578113,0.092998,6.383871,-8.580295,4.609896,7.606824,9.477749,-4.201546,6.079306,5.746148,4.735412,7.536815,1.582382,7.290610,0.870985,3.010254,-2.477541,-7.302534,5.207917,-3.429192,0.325204,2.220308,6.516688,0.399072,-9.202608,1.264176,1.722504,-7.483650,0.337571,4.227692,3.110706,-3.207491,-7.540187,-1.925780,6.168969,-7.488598,-6.433586,3.842083,9.639131,-1.305520,-9.281558,0.442835,5.108437,-0.702889,-5.765924,8.489366,-5.251651,3.844305,0.406740,9.333586,-3.744608,4.347535,7.758437,-5.299591,-2.184228,-6.053214,-0.126338,-3.997893,5.841907,2.480485,0.472138,-6.229249,-9.901793,-6.566032,5.889166,2.266804,5.348996,-7.381374,2.147380,-7.774271,0.877276,-3.380696,-9.715585,1.060216,0.545159,3.942455,-0.457071,3.606180,0.076646,-9.695020,9.812689,-1.642584,-3.026046,9.922937,4.800671,0.605200,-8.467676,3.681041,8.584844,-4.984395,9.392614,5.019014,6.195982,-2.885782,-7.748088,9.575378,-0.055640,-3.440973,-5.278922,6.935513,4.629625,5.549532,-2.464968,1.078990,8.030186,3.310463,8.246288,-7.765288,1.398823,-2.218115,6.611122,2.325361,6.254119,8.258881,1.702273,-1.525647,2.601335,-0.013757,-1.136189,3.049253,7.010655,-6.819328,3.530356,-8.010957,2.920821,-0.213593,-2.479361,8.844755,-2.711002,-7.046729,3.817163,-3.041323,-9.967952,-4.308870,-0.029106,-6.179292,-6.960673,0.825390,-2.511377,-8.256131,-9.087368,-9.541471,-9.202180,-7.405864,-2.484815,-8.363905,4.530114,5.258852,7.330968,-4.449335,3.498283,-0.696307,5.022494,-0.829074,4.353940,-1.470617,1.792645,-8.075708,-4.212074,-3.705270,0.506798,-9.186141,-9.656771,-7.773234,8.351674,1.810431,-4.579660,5.445169,4.402677,2.470159,-6.766990,-7.126481,-4.346478,-2.377739,-1.552229,-3.850764,8.824824,-3.020222,-8.184652,-1.146585,-4.398990,-4.777244,6.222789,-9.624327,8.937651,6.686637,7.809159,-2.873997,-9.153997,-6.106938,3.083637,5.691902,5.333609,-2.132192,-5.852463,-6.689347,1.991215,6.853082,-6.154895,4.687529,9.861671,2.074569,2.194628,3.016910,-4.966245,-4.963886,-9.325091,0.998803,8.515786,2.402550,-3.688806,-4.238899,-6.292673,-8.839155,-4.198462,9.424291,-9.739690,-2.251692,-3.157569,3.132897,-5.652150,-6.981655,2.223002,-9.372663,-7.553074,3.317198,2.140389,-1.545696,5.868386,-2.423385,-2.855755,-3.845959,2.062298,-9.686541,-0.439005,-7.226828,7.318653,5.472163,-8.700934,-7.049928,4.445340,8.782158,8.819904,-0.917780,-0.155199,-7.587446,-1.351802,2.545073,-0.344680,2.840728,-2.885318,3.434867,9.221026,-0.580317,-4.709491,-4.542925,-7.780433,7.349803,9.232000,6.905695,-3.990213,-0.704735,-4.499613,-1.613140,-4.704458,7.468912,-5.510314,-5.899022,6.160773,7.012609,3.687451,2.694338,-7.311428,-5.345700,-6.373274,9.285052,0.642128,-7.931557,-1.953976,-6.235400,-3.958558,8.728240,-7.508631,-0.248230,-2.875665,-4.710889,6.361494,-5.334652,-0.501711,9.558614,-4.292911,8.806208,6.621851,2.619991,7.185976,-8.192264,2.720318,-8.662207,2.135754,4.222287,-9.948024,-6.227715,4.410830,9.368703,4.677753,-3.182331,-0.647902,4.983118,1.539984,8.756726,6.804889,9.870327,8.452688,-6.707841,-4.845486,-7.968757,3.440675,0.848733,7.411936,-1.887651,5.064970,-7.486300,2.467216,2.995778,-1.281077,5.639687,-5.530082,-7.260220,-0.364311,6.492926,-0.389976,2.876407,-1.382272,-4.089026,-8.505005,-1.695128,-3.226721,0.977514,-8.721020,-2.910731,0.506916,-1.820037,-7.880750,8.225090,-3.564446,-7.944372,-6.926169,-7.475172,-8.885687,6.142400,-4.107523,-5.975677,-6.087817,-1.590657,9.443775,-5.558522,-5.366421,-1.786423,0.351367,0.986390,-1.674058,2.549707,4.761655,7.700681,-9.069776,-2.305315,-4.690732,3.711035,-8.389149,-8.847762,3.067679,-9.663791,5.098722,-7.448785,-5.493396,-5.847930,5.044786,-6.327909,-4.326998,-4.840061,-9.963840,0.114275,-9.647344,7.232342,-2.182442,-8.378988,-7.809444,7.032469,2.432664,2.078097,0.106462,3.377979,3.965650,5.657230,7.361654,-9.095405,3.940387,6.777863,2.473341,-5.192684,-5.548554,7.099893,-0.367006,-4.310825,-4.848494,9.446203,-9.198881,2.489437,-8.049975,5.194156,-9.543683,3.926284,3.143523,7.680169,-1.468553,-8.023479,-2.773196,1.226890,-2.993476,3.248262,5.034227,-7.398166,7.735091,2.678832,-2.323418,3.566648,5.534136,-1.266957,1.931110,4.299604,-6.784634,-2.008893,3.299027,7.093775,-2.972412,-8.565394,3.810392,8.904050,-5.230693,2.808444,8.787622,-5.628028,3.655863,7.875013,-1.085386,-8.194455,-4.338468,-2.064677,4.773190,1.395241,-5.178177,5.933945,-1.521265,-0.328288,-4.223683,7.383670,-7.922690,-2.294327,2.199207,1.973789,-6.452758,-4.337387,-2.427810,-0.379612,-1.219442,6.303020,7.904105,-3.727525,1.536223,9.983566,-4.204875,9.023366,-5.675359,3.488110,8.652758,7.092369,-3.734500,-8.308369,-9.852064,-5.274009,-2.894537,1.046238,8.219777,0.604412,-3.792453,-6.170305,-7.700984,-6.295374,3.175525,-5.855545,-2.651733,-6.556417,6.726684,8.936677,0.671398,-0.520364,-5.897769,4.351070,0.345744,-1.197521,5.103438,8.724379,9.193980,-7.232407,0.043111,7.863735,8.526790,-3.571974,1.742079,-9.142474,-6.672617,-8.847965,7.699006,-4.268238,3.150101,-0.594682,0.984755,-8.893752,5.423449,7.570243,9.310101,-7.473904,-5.081359,3.068213,2.870375,-8.964346,-1.510005,-3.091970,-1.408150,-8.985673,7.999213,9.960453,-2.886636,1.202358,-0.399589,-3.540714,-4.052133,-2.667610,-0.287491,-0.895219,-9.127905,1.355841,2.666328,-7.058625,-4.301120,7.280606,3.455426,-5.406464,-8.649014,-7.061931,-8.486842,-3.926017,4.509318,8.790661,-4.707892,9.445179,-8.065406,3.544972,-0.455863,8.185829,1.988898,4.811001,1.897469,-6.966664,0.470060,6.101563,-2.421969,-8.005162,-8.216780,2.181759,7.533716,2.155296,8.852649,-8.190224,-8.652458,-9.464525,-1.270382,1.694992,1.108378,-4.504529,-4.691768,-3.509702,8.457104,-2.977953,-3.140928,0.578270,1.713035,5.723292,2.624141,-1.375069,4.703497,8.084651,-3.984613,-5.154283,9.754189,7.504381,-2.630570,-9.066869,-2.283613,8.290383,-5.859071,0.730615,-1.903417,-7.331357,-3.997793,3.362893,6.961211,5.154235,3.039485,1.777218,-3.634705,-2.054200,-5.876319,0.098463,-3.347947,3.145314,8.948989,-0.530972,2.086471,3.508564,0.809632,7.073492,-0.581055,6.063006,-6.233693,-8.103475,7.186093,7.466821,3.537585,-2.268186,-7.656314,-3.015953,-6.897731,6.680809,5.823562,2.851089,1.179014,9.814884,-1.513799,-7.986998,7.912323,0.901308,8.498657,-1.326535,8.361323,-0.719316,-1.651936,2.070692,0.421386,-6.484177,-2.359761,-7.628439,-4.308344,8.621964,-1.530578,-7.832947,-7.225045,-7.971671,-1.898549,-1.567201,0.954305,4.444268,9.007349,5.397169,0.969609,1.396640,8.913439,-0.084756,1.985133,-5.936751,6.055969,4.478205,5.228205,3.054151,-2.030004,9.588031,8.014864,1.421708,-8.595182,0.883285,-1.988239,4.753149,-3.889379,5.250085,9.306847,4.582714,-4.181018,-4.338815,-8.619809,-5.298897,5.784342,2.494709,-8.256812,0.380936,0.534394,6.260724,6.067363,0.033607,-0.078016,5.189553,2.041657,-4.615814,8.748430,0.164812,-6.296038,-0.983425,7.105793,-8.044992,-7.534256,-8.789662,4.755195,3.548022,-5.436617,-6.548914,8.441413,-0.874067,5.481251,6.446652,7.070475,-3.892318,-6.810301,6.693499,-0.001900,0.298202,3.330734,-1.994701,1.351763,5.827791,0.156065,-0.712416,1.545893,7.447150,9.758091,8.960208,4.767635,3.256412,-0.844833,2.017531,-8.524137,6.954774,7.910536,-9.321680,8.165418,-1.469636,-4.876333,-4.927589,-9.046810,-2.805126,-2.891616,-9.117498,2.598128,4.171589,4.868139,8.396609,4.673644,3.332068,-8.644316,-5.616111,-3.932297,-6.642645,4.404710,-7.109300,-7.068486,-9.246243,4.996771,-5.726719,-8.114491,-2.056796,0.541341,9.644114,9.331514,3.584691,9.799388,0.138793,-4.862714,-2.318973,-0.380839,6.394718,0.989246,3.089415,1.265524,7.887440,2.416692,2.814124,1.570418,-0.657869,1.372564,3.527853,2.508881,-8.784158,-4.459048,9.967711,-2.331317,-9.012599,-0.700289,-3.580036,2.466487,8.589072,2.243756,0.550551,-1.729883,9.607441,6.983869,-9.689147,-1.416212,1.890884,9.940738,9.233149,0.501009,6.469047,-3.557987,9.525484,8.297402,-6.277188,8.508330,-7.490822,7.343721,-4.894802,-5.697260,0.022285,8.640193,0.544948,-8.399643,-0.624583,-8.380589,0.661011,7.540272,5.439442,-2.637491,-7.426622,8.158620,2.569149,-1.492790,-4.234450,-3.439477,0.429013,-9.839799,-8.660901,-3.716164,-1.107240,-6.611589,7.111446,5.167193,-1.969739,-1.621381,6.431496,9.557981,7.673195,-9.687585,-0.354202,2.183582,3.094491,4.320425,-0.092682,-0.518301,-5.732075,2.814134,6.098190,-7.277037,-8.630883,-4.419715,2.237508,-3.901041,6.033847,-5.912290,1.148394,-9.067015,5.364432,-3.218611,1.555972,-8.938116,4.607943,7.778383,-6.516129,-9.115210,-0.295262,8.361578,2.790577,-3.282238,-6.593723,-5.562690,6.135804,-1.424244,-0.990695,-2.345366,-6.245912,-8.955822,-7.588525,-8.240648,4.999271,5.964948,4.879648,2.905148,-9.326747,8.540738,-9.809018,-4.095064,-3.530176,-1.207341,7.928244,-8.091011,-6.144338,1.089003,-1.131632,8.944521,3.264123,-3.189786,3.987538,6.923238,5.771478,6.135276,-1.651900,1.373148,-1.415117,-5.164964,9.866532,4.865390,3.150724,-5.412527,-2.286103,0.378393,8.018215,-5.814519,-3.979379,-0.534146,2.623939,4.869377,-5.999327,-9.363915,6.320160,-5.615170,-0.879492,-1.159236,8.387322,4.526004,-0.852682,0.631299,-1.219074,6.318211,5.657727,6.956172,8.306901,-4.242652,6.664500,-5.729103,1.596749,7.338352,3.300085,3.045211,9.202568,-4.193302,-5.633735,7.748044,-0.026083,3.867514,-4.751287,-8.202810,0.204839,0.841628,2.294922,9.375682,7.966209,-1.576346,-7.825886,4.307226,4.512534,-7.290371,2.941612,-9.531356,-9.066832,0.263420,-4.316393,-8.851544,-4.341739,6.631233,8.267651,3.633147,9.160044,5.726845,0.931269,8.168502,7.567477,-2.651769,8.135058,-6.766972,-8.990518,6.600900,4.134678,0.003645,2.735184,2.093286,4.605228,8.435421,0.097951,5.569412,8.862597,9.116515,-6.744268,3.143425,-7.349679,0.327993,0.922238,-5.794523,-2.597999,7.006873,-6.473671,-7.013322,3.973503,-5.872325,0.089057,3.046726,9.584368,2.230948,1.154693], dtype = "float64")#candidate|10442|(2080,)|const|float64
call_10441 = relay.TupleGetItem(func_7410_call(relay.reshape(const_10442.astype('float64'), [2080,])), 1)
call_10443 = relay.TupleGetItem(func_7412_call(relay.reshape(const_10442.astype('float64'), [2080,])), 1)
func_7818_call = mod.get_global_var('func_7818')
func_7820_call = mutated_mod.get_global_var('func_7820')
call_10449 = func_7818_call()
call_10450 = func_7818_call()
func_7495_call = mod.get_global_var('func_7495')
func_7498_call = mutated_mod.get_global_var('func_7498')
var_10452 = relay.var("var_10452", dtype = "uint32", shape = (1650,))#candidate|10452|(1650,)|var|uint32
call_10451 = relay.TupleGetItem(func_7495_call(relay.reshape(var_10452.astype('uint32'), [10, 15, 11])), 0)
call_10453 = relay.TupleGetItem(func_7498_call(relay.reshape(var_10452.astype('uint32'), [10, 15, 11])), 0)
output = relay.Tuple([call_10405,call_10427,call_10438,call_10441,const_10442,call_10449,call_10451,var_10452,])
output2 = relay.Tuple([call_10406,call_10428,call_10439,call_10443,const_10442,call_10450,call_10453,var_10452,])
func_10459 = relay.Function([var_10452,], output)
mod['func_10459'] = func_10459
mod = relay.transform.InferType()(mod)
var_10460 = relay.var("var_10460", dtype = "uint32", shape = (1650,))#candidate|10460|(1650,)|var|uint32
output = func_10459(var_10460)
func_10461 = relay.Function([var_10460], output)
mutated_mod['func_10461'] = func_10461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_10478 = relay.TupleGetItem(func_2716_call(), 1)
call_10479 = relay.TupleGetItem(func_2717_call(), 1)
func_3286_call = mod.get_global_var('func_3286')
func_3288_call = mutated_mod.get_global_var('func_3288')
call_10492 = func_3286_call()
call_10493 = func_3286_call()
output = relay.Tuple([call_10478,call_10492,])
output2 = relay.Tuple([call_10479,call_10493,])
func_10502 = relay.Function([], output)
mod['func_10502'] = func_10502
mod = relay.transform.InferType()(mod)
output = func_10502()
func_10503 = relay.Function([], output)
mutated_mod['func_10503'] = func_10503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4154_call = mod.get_global_var('func_4154')
func_4156_call = mutated_mod.get_global_var('func_4156')
call_10570 = relay.TupleGetItem(func_4154_call(), 1)
call_10571 = relay.TupleGetItem(func_4156_call(), 1)
output = relay.Tuple([call_10570,])
output2 = relay.Tuple([call_10571,])
func_10572 = relay.Function([], output)
mod['func_10572'] = func_10572
mod = relay.transform.InferType()(mod)
mutated_mod['func_10572'] = func_10572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10572_call = mutated_mod.get_global_var('func_10572')
call_10573 = func_10572_call()
output = call_10573
func_10574 = relay.Function([], output)
mutated_mod['func_10574'] = func_10574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7727_call = mod.get_global_var('func_7727')
func_7729_call = mutated_mod.get_global_var('func_7729')
call_10595 = relay.TupleGetItem(func_7727_call(), 0)
call_10596 = relay.TupleGetItem(func_7729_call(), 0)
output = relay.Tuple([call_10595,])
output2 = relay.Tuple([call_10596,])
func_10606 = relay.Function([], output)
mod['func_10606'] = func_10606
mod = relay.transform.InferType()(mod)
mutated_mod['func_10606'] = func_10606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10606_call = mutated_mod.get_global_var('func_10606')
call_10607 = func_10606_call()
output = call_10607
func_10608 = relay.Function([], output)
mutated_mod['func_10608'] = func_10608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10623 = relay.var("var_10623", dtype = "bool", shape = (2, 5, 12))#candidate|10623|(2, 5, 12)|var|bool
var_10624 = relay.var("var_10624", dtype = "bool", shape = (2, 5, 12))#candidate|10624|(2, 5, 12)|var|bool
bop_10625 = relay.logical_and(var_10623.astype('bool'), relay.reshape(var_10624.astype('bool'), relay.shape_of(var_10623))) # shape=(2, 5, 12)
output = bop_10625
output2 = bop_10625
func_10631 = relay.Function([var_10623,var_10624,], output)
mod['func_10631'] = func_10631
mod = relay.transform.InferType()(mod)
mutated_mod['func_10631'] = func_10631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10631_call = mutated_mod.get_global_var('func_10631')
var_10633 = relay.var("var_10633", dtype = "bool", shape = (2, 5, 12))#candidate|10633|(2, 5, 12)|var|bool
var_10634 = relay.var("var_10634", dtype = "bool", shape = (2, 5, 12))#candidate|10634|(2, 5, 12)|var|bool
call_10632 = func_10631_call(var_10633,var_10634,)
output = call_10632
func_10635 = relay.Function([var_10633,var_10634,], output)
mutated_mod['func_10635'] = func_10635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_10651 = relay.TupleGetItem(func_9173_call(), 0)
call_10652 = relay.TupleGetItem(func_9174_call(), 0)
func_9797_call = mod.get_global_var('func_9797')
func_9798_call = mutated_mod.get_global_var('func_9798')
call_10653 = relay.TupleGetItem(func_9797_call(), 3)
call_10654 = relay.TupleGetItem(func_9798_call(), 3)
bop_10655 = relay.minimum(call_10653.astype('uint32'), relay.reshape(call_10651.astype('uint32'), relay.shape_of(call_10653))) # shape=(6, 13, 2)
bop_10658 = relay.minimum(call_10654.astype('uint32'), relay.reshape(call_10652.astype('uint32'), relay.shape_of(call_10654))) # shape=(6, 13, 2)
func_7818_call = mod.get_global_var('func_7818')
func_7820_call = mutated_mod.get_global_var('func_7820')
call_10692 = func_7818_call()
call_10693 = func_7818_call()
func_9868_call = mod.get_global_var('func_9868')
func_9870_call = mutated_mod.get_global_var('func_9870')
call_10696 = relay.TupleGetItem(func_9868_call(), 1)
call_10697 = relay.TupleGetItem(func_9870_call(), 1)
func_9868_call = mod.get_global_var('func_9868')
func_9870_call = mutated_mod.get_global_var('func_9870')
call_10701 = relay.TupleGetItem(func_9868_call(), 1)
call_10702 = relay.TupleGetItem(func_9870_call(), 1)
func_5948_call = mod.get_global_var('func_5948')
func_5951_call = mutated_mod.get_global_var('func_5951')
var_10706 = relay.var("var_10706", dtype = "float64", shape = (104, 20))#candidate|10706|(104, 20)|var|float64
const_10707 = relay.const([[2.225371,-6.512946,-6.353698,-1.628067,-2.630159,9.220269,9.031294,1.236064,9.069585,-3.495042,-5.651176,6.967129,7.320291,6.227643,5.503777,7.621213,4.749963,9.459970,5.953504,8.144162,1.765029,-8.217415,8.311943,-0.427882,9.879230,6.173869,1.017256,-7.478298,0.650207,-5.002280,-8.052608,1.234917,6.223442,2.996466,7.907383,6.916078,1.683040,0.270522,9.808628,9.742261,9.119867,-2.297569,4.847698,3.507309,6.523035,9.430861,-5.628837,5.881421,-9.297709,-4.328398,0.156842,-4.118904,-2.556093,-6.954276,1.824237,-0.594670,-5.569948,5.957925,1.905706,-6.130278,2.554540,5.988352,-8.946009,5.914439,8.015705,-7.308213,9.580854,-5.070111,7.837640,-7.999204,-9.759940,4.733163,3.167314,3.081017,2.194004,0.437146,9.670124,-3.582173,-7.832867,-6.111217,-3.144667,-5.946944,8.665785,1.172479,1.063145,5.581688,-6.185703,-8.208672,-1.378262,4.136050,7.514980,-0.304029,3.291380,2.503579,-0.964591,3.408301,-8.656543,8.091493,-5.869051,-2.452586,-2.199241,-3.281140,-7.017103,-4.445302,-3.731183,6.672008,1.052806,-1.857340,-8.233175,-3.053238,-6.019540,7.515364,0.520542,-3.314782,4.039721,-1.263811,1.855617,7.093816,7.244874,-4.982841]], dtype = "float64")#candidate|10707|(1, 120)|const|float64
call_10705 = relay.TupleGetItem(func_5948_call(relay.reshape(var_10706.astype('float64'), [13, 16, 10]), relay.reshape(const_10707.astype('float64'), [120,]), ), 1)
call_10708 = relay.TupleGetItem(func_5951_call(relay.reshape(var_10706.astype('float64'), [13, 16, 10]), relay.reshape(const_10707.astype('float64'), [120,]), ), 1)
func_4947_call = mod.get_global_var('func_4947')
func_4950_call = mutated_mod.get_global_var('func_4950')
const_10716 = relay.const(-7, dtype = "int32")#candidate|10716|()|const|int32
const_10717 = relay.const([3,2,-7,-9,6,4,-1,-4,-10,-4,-2,-2,1,2,-10,4,-4,7,7,-6,-6,-5,-9,-8,5,-4,6,5,-4,7,9,1,8,-7,-4,8,-3,8,3,-1,-7,5,-2,1], dtype = "int32")#candidate|10717|(44,)|const|int32
call_10715 = func_4947_call(relay.reshape(const_10716.astype('int32'), []), relay.reshape(const_10717.astype('int32'), [2, 11, 2]), )
call_10718 = func_4947_call(relay.reshape(const_10716.astype('int32'), []), relay.reshape(const_10717.astype('int32'), [2, 11, 2]), )
output = relay.Tuple([bop_10655,call_10692,call_10696,call_10701,call_10705,var_10706,const_10707,call_10715,const_10716,const_10717,])
output2 = relay.Tuple([bop_10658,call_10693,call_10697,call_10702,call_10708,var_10706,const_10707,call_10718,const_10716,const_10717,])
func_10726 = relay.Function([var_10706,], output)
mod['func_10726'] = func_10726
mod = relay.transform.InferType()(mod)
var_10727 = relay.var("var_10727", dtype = "float64", shape = (104, 20))#candidate|10727|(104, 20)|var|float64
output = func_10726(var_10727)
func_10728 = relay.Function([var_10727], output)
mutated_mod['func_10728'] = func_10728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5437_call = mod.get_global_var('func_5437')
func_5439_call = mutated_mod.get_global_var('func_5439')
call_10748 = relay.TupleGetItem(func_5437_call(), 0)
call_10749 = relay.TupleGetItem(func_5439_call(), 0)
uop_10754 = relay.exp(call_10748.astype('float64')) # shape=(14, 2, 13)
uop_10756 = relay.exp(call_10749.astype('float64')) # shape=(14, 2, 13)
func_4398_call = mod.get_global_var('func_4398')
func_4400_call = mutated_mod.get_global_var('func_4400')
call_10759 = relay.TupleGetItem(func_4398_call(), 2)
call_10760 = relay.TupleGetItem(func_4400_call(), 2)
uop_10763 = relay.cos(uop_10754.astype('float64')) # shape=(14, 2, 13)
uop_10765 = relay.cos(uop_10756.astype('float64')) # shape=(14, 2, 13)
output = relay.Tuple([call_10759,uop_10763,])
output2 = relay.Tuple([call_10760,uop_10765,])
func_10769 = relay.Function([], output)
mod['func_10769'] = func_10769
mod = relay.transform.InferType()(mod)
mutated_mod['func_10769'] = func_10769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10769_call = mutated_mod.get_global_var('func_10769')
call_10770 = func_10769_call()
output = call_10770
func_10771 = relay.Function([], output)
mutated_mod['func_10771'] = func_10771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5073_call = mod.get_global_var('func_5073')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_10800 = func_5073_call()
call_10801 = func_5073_call()
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_10809 = relay.TupleGetItem(func_3181_call(), 0)
call_10810 = relay.TupleGetItem(func_3182_call(), 0)
func_4131_call = mod.get_global_var('func_4131')
func_4132_call = mutated_mod.get_global_var('func_4132')
call_10812 = func_4131_call()
call_10813 = func_4131_call()
output = relay.Tuple([call_10800,call_10809,call_10812,])
output2 = relay.Tuple([call_10801,call_10810,call_10813,])
func_10815 = relay.Function([], output)
mod['func_10815'] = func_10815
mod = relay.transform.InferType()(mod)
mutated_mod['func_10815'] = func_10815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10815_call = mutated_mod.get_global_var('func_10815')
call_10816 = func_10815_call()
output = call_10816
func_10817 = relay.Function([], output)
mutated_mod['func_10817'] = func_10817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9173_call = mod.get_global_var('func_9173')
func_9174_call = mutated_mod.get_global_var('func_9174')
call_10823 = relay.TupleGetItem(func_9173_call(), 0)
call_10824 = relay.TupleGetItem(func_9174_call(), 0)
output = relay.Tuple([call_10823,])
output2 = relay.Tuple([call_10824,])
func_10828 = relay.Function([], output)
mod['func_10828'] = func_10828
mod = relay.transform.InferType()(mod)
mutated_mod['func_10828'] = func_10828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10828_call = mutated_mod.get_global_var('func_10828')
call_10829 = func_10828_call()
output = call_10829
func_10830 = relay.Function([], output)
mutated_mod['func_10830'] = func_10830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9815_call = mod.get_global_var('func_9815')
func_9817_call = mutated_mod.get_global_var('func_9817')
call_10842 = relay.TupleGetItem(func_9815_call(), 1)
call_10843 = relay.TupleGetItem(func_9817_call(), 1)
output = call_10842
output2 = call_10843
func_10878 = relay.Function([], output)
mod['func_10878'] = func_10878
mod = relay.transform.InferType()(mod)
output = func_10878()
func_10879 = relay.Function([], output)
mutated_mod['func_10879'] = func_10879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3887_call = mod.get_global_var('func_3887')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_10886 = func_3887_call()
call_10887 = func_3887_call()
const_10888 = relay.const([[[1,5],[9,2],[-2,-9],[10,4],[-5,4],[-3,-5],[9,-1],[-1,3],[5,10],[7,-9],[-2,-1],[-10,-2],[-7,1]],[[3,4],[9,10],[-10,-1],[-2,-1],[3,-1],[10,-5],[6,-5],[6,-4],[-1,10],[6,9],[-7,-3],[1,10],[-3,9]],[[3,-4],[-3,-4],[7,9],[-6,10],[-1,10],[-1,-8],[6,-8],[-9,2],[3,2],[5,9],[4,9],[-7,4],[10,-9]],[[-6,5],[5,10],[-2,-7],[-10,-3],[7,-6],[9,4],[8,5],[1,-9],[1,10],[-7,1],[5,-6],[-8,-2],[2,7]],[[7,7],[-9,-1],[8,-9],[4,-4],[-2,-2],[-2,-3],[-9,7],[-5,1],[6,-5],[-4,-7],[-8,1],[8,7],[-10,-8]],[[-7,-5],[6,-8],[-6,2],[10,-9],[4,7],[2,6],[-5,9],[-1,-10],[-8,7],[-4,-6],[5,-4],[-5,-9],[9,-3]]], dtype = "int8")#candidate|10888|(6, 13, 2)|const|int8
bop_10889 = relay.less_equal(call_10886.astype('bool'), relay.reshape(const_10888.astype('bool'), relay.shape_of(call_10886))) # shape=(6, 13, 2)
bop_10892 = relay.less_equal(call_10887.astype('bool'), relay.reshape(const_10888.astype('bool'), relay.shape_of(call_10887))) # shape=(6, 13, 2)
output = relay.Tuple([bop_10889,])
output2 = relay.Tuple([bop_10892,])
func_10906 = relay.Function([], output)
mod['func_10906'] = func_10906
mod = relay.transform.InferType()(mod)
mutated_mod['func_10906'] = func_10906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10906_call = mutated_mod.get_global_var('func_10906')
call_10907 = func_10906_call()
output = call_10907
func_10908 = relay.Function([], output)
mutated_mod['func_10908'] = func_10908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6377_call = mod.get_global_var('func_6377')
func_6379_call = mutated_mod.get_global_var('func_6379')
call_10941 = relay.TupleGetItem(func_6377_call(), 0)
call_10942 = relay.TupleGetItem(func_6379_call(), 0)
func_6507_call = mod.get_global_var('func_6507')
func_6510_call = mutated_mod.get_global_var('func_6510')
const_10969 = relay.const([3,1,5,10,10,-6,-5,8,3,-3,-8,7,-7,-9,2,-1,9,1,-4,10,2,-9,-8,8,6,-8,-6,8,-2,10,-6,-10,-5,-1,-1,-10,-4,-1,8,6,3,-10,1,-2,6,8,7,9,9,10,8,7,3,-8,9,6,-10,-1,-6,-7,-9,4,-2,-7,-2,3,8,-4,9,-1,6,10,-6,10,-6,-4,-1,-10,-1,6,-3,-1,-10,-4,-7,-5,4,2,6,2,6,-6,4,1,-2,-9,5,-6,7,2,-6,-8,4,-10,1,-4,-10,5,8,-1,1,5,-10,-1,-10,-10,3,7,-9,10,3,-6,-6,-8,4,-5,9,-3,1,-7,-10,-9,6,-10,5,2,8,10,6,-10,-7,-7,5,7,-5,-10,1,8,5,2,-10,7,-2,-1,5,3], dtype = "int8")#candidate|10969|(156,)|const|int8
var_10970 = relay.var("var_10970", dtype = "int8", shape = ())#candidate|10970|()|var|int8
call_10968 = relay.TupleGetItem(func_6507_call(relay.reshape(const_10969.astype('int8'), [156,]), relay.reshape(var_10970.astype('int8'), []), ), 1)
call_10971 = relay.TupleGetItem(func_6510_call(relay.reshape(const_10969.astype('int8'), [156,]), relay.reshape(var_10970.astype('int8'), []), ), 1)
output = relay.Tuple([call_10941,call_10968,const_10969,var_10970,])
output2 = relay.Tuple([call_10942,call_10971,const_10969,var_10970,])
func_10992 = relay.Function([var_10970,], output)
mod['func_10992'] = func_10992
mod = relay.transform.InferType()(mod)
var_10993 = relay.var("var_10993", dtype = "int8", shape = ())#candidate|10993|()|var|int8
output = func_10992(var_10993)
func_10994 = relay.Function([var_10993], output)
mutated_mod['func_10994'] = func_10994
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11023 = relay.const(9.149042, dtype = "float64")#candidate|11023|()|const|float64
var_11024 = relay.var("var_11024", dtype = "float64", shape = (10, 6, 6))#candidate|11024|(10, 6, 6)|var|float64
bop_11025 = relay.divide(const_11023.astype('float64'), var_11024.astype('float64')) # shape=(10, 6, 6)
func_2748_call = mod.get_global_var('func_2748')
func_2751_call = mutated_mod.get_global_var('func_2751')
const_11037 = relay.const([-7.846957,-1.273234,5.764880,0.979661,2.961935,-6.807959,-9.844387,-4.980251,5.889340,-3.670926,0.707828,-8.516539,0.819177,-3.040055,1.405739,-5.187147,-9.335723,7.724135,0.636674,4.164324,8.600851,-0.717309,-5.833811,-0.081195,0.982940,-8.015313,-9.143432,9.223840,4.612161,6.203394,-8.275880,-4.251321,-4.028679,-5.170142,3.337759,-2.694212,8.412596,-8.370333,2.928600,-0.804486,-2.097272,5.360943,7.463194,-1.092226,6.709009,7.163002,8.685184,-6.770451,8.829287,-6.982758,-2.015444,-9.360288,2.845406,1.238570,0.056440,8.864906,-6.726323,-5.213370,-6.795326,-0.110439,-9.929222,5.499826,-7.081410,5.285679,5.990196,-5.990838,-0.456090,3.747490,8.766534,0.945234,-0.022185,-5.317034,0.961003,-8.584809,-6.506836,2.478953,2.670322,-7.099249,7.890140,8.129874,6.540341,-9.971221,-9.214520,9.795709,8.638607,-8.595897,-3.779159,-9.881571,-7.440644,3.367336,-2.201396,7.156535,4.275422,2.298959,-9.497712,1.005966,-4.319392,9.118221,-5.086742,-1.635921,6.915120,7.665878,-3.834061,-1.811185,2.268195,0.010900,-0.207761,0.434112,-4.765713,-5.996913,2.394902,8.988844,-4.865969,9.279805,7.430401,-3.930169,-6.349480,-2.071640,8.758045,7.097325,-6.433579,-0.932100,-5.285305,8.299742,-6.393197,9.983220,9.818460,6.585665,4.471980,-2.001793,5.378869,-1.231736,2.515503,-2.716063,4.605822,8.018270,-0.168689,-5.853369,8.734947,0.434888,-0.445749,7.194056,5.348802,5.951337,7.931899,-1.298053,-8.809555,6.760160,3.276418,-1.819037,7.367745,0.146307,-8.303440,-9.146724,1.769245,3.267685,-0.816531,5.112702,-3.673279,0.750648,4.374507,-1.632441,-1.054431,7.559201,6.530768,-6.754913,0.350288,-4.156794,9.305067,8.389717,-5.155761,-1.614596,2.338706,1.910860,-2.691342,-6.744020,-3.246701,8.949667,-4.631644,-6.178923,4.344825,-3.528709,-7.294411,-0.032396,-1.334871,-9.405571,-6.233696,8.823123,1.422518,6.222921,2.452464,6.009533,-1.988992,-3.528288,7.052409,-2.206678,8.763923,4.059764,8.705206,-5.231439,8.722171,0.254498,5.950279,5.451666,9.513407,6.114360,-5.849960,-2.796264,6.532619,4.183089,0.245707,4.837798,4.053730,9.028627,-0.530471,-8.338411,-3.683843,-0.126771,-5.952728,-3.354868,-4.723434,9.161417,-1.614069,-8.891614,-8.223682,-5.273871,3.557062,1.450682,-0.234811,-4.970238,-2.128212,-7.684288,-7.870559,-8.999491,7.647444,-8.025754,-1.073972,-8.739893,9.090025,8.130996,6.539943,5.325760,7.368669,7.618229,7.298479,1.765967,-0.210753,1.925985,-2.284724,4.974760,-3.185319,1.604887,4.236652,-8.137055,-5.620820,1.790949,7.841275,6.993580,6.048144,0.110368,-0.157310,-0.069559,-0.601800,8.705359,0.398712,-2.967815,-5.853648,7.857883,-6.198465,-2.997809,7.199158,-0.326988,-3.429610,5.312276,-5.651085,6.909867,8.772698,7.397463,6.102664,-6.423551,8.388925,-9.620617,6.439831,-7.084618,6.308364,-2.466876,-6.792570,-4.634572,-4.179695,-5.096108,-3.546859,9.040521,5.820359,5.255419,2.740561,8.879645,3.792262,-1.698457,5.706727,-9.908480,9.717091,2.016940,8.489006,8.913911,-3.476666,-8.724164,7.847848,-4.564823,-7.716602,8.141334,-3.150266,-0.892458,-9.323447,-6.131774,8.998818,6.774996,0.727359,-7.811143,-9.060104,0.457693,2.888609,5.591607,4.320417,2.009089,6.780494,-5.288039,-8.946848,5.964849,4.492521,-9.004575,-2.081628,-0.977880,2.185577,-3.480410,-2.644446,-8.981889,7.470006,-0.701021,5.991632,-6.990605,-7.535625,-7.950316,-6.519254,1.631593,0.454773,-5.479239,3.380660,-1.089948,-0.127733,-0.456142,-8.112025,-8.072071,-1.995362,-9.139588,4.221636,4.282264,8.551809,-4.448233,6.608924,-4.196561,8.255587,4.614565,3.025737,2.075656,-2.278957,-7.865529,-2.562225,9.047152,6.145992,1.326268,-5.648980,-6.426390,-8.012655,5.143371,-5.593284,5.468740,2.635901,4.959724,-8.437835,-5.726045,-2.867292,1.977057,2.369902,-9.473064,-7.180529,3.610923,-3.546689,1.610231,-2.982932,-0.439047,-8.314433,8.054053,-4.353669,-7.522855,4.212387,-5.521753,0.610132,6.372612,-6.268836,4.448467,8.486794,5.784825,-1.433708,-7.407239,-6.597489,1.225121,-3.810505,-9.593111,3.265455,6.401869,6.366201,1.536651,8.783671,3.105952,-7.933638,0.718577,-9.106207,7.471424,7.602253,7.693599,-7.524261,-1.022315,6.626829,-8.391785,5.953188,-3.165249,6.896190,2.248001,-5.128593,-5.027405,3.949224,-1.830640,-7.266650,-4.185781,5.494232,4.517410,-8.359472,1.303395,-3.810336,1.799322,7.215814,-0.411231,7.014551,-1.059433,3.940521,-2.841268,-4.903714,-9.541438,-7.859352,-9.492215,-0.087205,9.926623,9.952851,8.744989,-5.555121,6.601851,-7.758513,-7.390038,6.168620,5.004052,8.514877,9.288079,-0.932028,5.792498,-0.208983,-5.179693,1.494305,0.808987,-0.830579,9.916947,1.648600,4.423482,-5.556978,0.336050,-2.291410,-7.577547,-0.971512,0.673917,0.575246,3.101534,-9.760543,3.052204,-8.435517,-8.018790,7.418368,9.628527,-0.620237,-7.072913,5.731208,-8.845102,-0.733438,0.997382,-2.008290,4.684442,3.540763,5.276989,-2.876653,-8.169105,6.334445,-4.029546,-2.340848,-2.453852,-8.883192,9.407072,-7.493804,6.363602,7.505742,-1.478174,8.522606,0.580504,-0.611073,-8.634514,6.928733,6.461649,9.748813,8.285439,-0.707513,-0.499930,-0.235076,-6.326610,8.631662,0.108590,-2.985808,-5.576302,2.406686,3.385964,-2.546606,1.902996,-3.636905,-0.873657,-8.881173,9.264012,5.000188,7.601656,7.587972,2.073293,2.849822,9.564387,-8.986550,4.975518], dtype = "float64")#candidate|11037|(540,)|const|float64
call_11036 = relay.TupleGetItem(func_2748_call(relay.reshape(const_11037.astype('float64'), [3, 180])), 2)
call_11038 = relay.TupleGetItem(func_2751_call(relay.reshape(const_11037.astype('float64'), [3, 180])), 2)
func_10992_call = mod.get_global_var('func_10992')
func_10994_call = mutated_mod.get_global_var('func_10994')
call_11044 = relay.TupleGetItem(func_10992_call(relay.reshape(const_11023.astype('int8'), [])), 3)
call_11045 = relay.TupleGetItem(func_10994_call(relay.reshape(const_11023.astype('int8'), [])), 3)
output = relay.Tuple([bop_11025,call_11036,const_11037,call_11044,])
output2 = relay.Tuple([bop_11025,call_11038,const_11037,call_11045,])
func_11068 = relay.Function([var_11024,], output)
mod['func_11068'] = func_11068
mod = relay.transform.InferType()(mod)
mutated_mod['func_11068'] = func_11068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11069 = relay.var("var_11069", dtype = "float64", shape = (10, 6, 6))#candidate|11069|(10, 6, 6)|var|float64
func_11068_call = mutated_mod.get_global_var('func_11068')
call_11070 = func_11068_call(var_11069)
output = call_11070
func_11071 = relay.Function([var_11069], output)
mutated_mod['func_11071'] = func_11071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8602_call = mod.get_global_var('func_8602')
func_8604_call = mutated_mod.get_global_var('func_8604')
call_11085 = func_8602_call()
call_11086 = func_8602_call()
output = relay.Tuple([call_11085,])
output2 = relay.Tuple([call_11086,])
func_11106 = relay.Function([], output)
mod['func_11106'] = func_11106
mod = relay.transform.InferType()(mod)
mutated_mod['func_11106'] = func_11106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11106_call = mutated_mod.get_global_var('func_11106')
call_11107 = func_11106_call()
output = call_11107
func_11108 = relay.Function([], output)
mutated_mod['func_11108'] = func_11108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5514_call = mod.get_global_var('func_5514')
func_5515_call = mutated_mod.get_global_var('func_5515')
call_11129 = func_5514_call()
call_11130 = func_5514_call()
func_3363_call = mod.get_global_var('func_3363')
func_3366_call = mutated_mod.get_global_var('func_3366')
const_11138 = relay.const([1,7,5,-5,4,-8,-4,2,-5,-1,2,1,10,8,-6,-7,3,8,10,8,1,-9,-1,4,1,-1,3,-2,3,4,-5,6,-6,7,2,-10,-3,7,1,10,-9,6,-2,-6,2,-4,-2,4,7,-4,7,1,4,-4,1,8,6,3,-6,-2,-10,5,9,8,9,2,-7,-5,-10,7,-2,1,-2,-5,5,7,6,-5,-1,10,6,-5,-6,7,9,9,-2,-9,-7,3,4,5,-1,-6,5,2,9,-8,10,-2,1,4,4,-6,-10,2,10,-5,-10,-3,6,-8,-5,-9,-2,-5,2,6,3,-6,-2,6,-6,3,1,-2,-1,1,7,-10,2,-3,7,2,-3,2,7,-9,10,-10,10,-7,10,-7,-1,-9,-4,-9,4,-2,2,-6,3,-1,-9,-3,10,-10,-9,9,-5,5,3,-2,-7,-5,8,5,9,4,8,-5,-9,-1,3,8,-10,-7,7,1,-4,3,8,-3,8,4,-7,4,-5,4,-7,-4,-7,2,-2,10,-9,-10,-2,5,2,-6,8,5,-5,9,-1,-10,6,4,5,4,8,-3,6,-10,5,7,6,-7,1,4,1,-2,-8,-2,2,-8,-1,1,-7,6,-9,-5,7,7,-10,-1,6,5,-2,8,-7,6,-7,5,-10,-6,-6,-3,7,-2,-2,5,8,2,8,-6,6,1,9,-9,-9,-9,8,-9,-3,-1,5,10,5,-5,-4,10,-3,5,-8,-2,-9,-1,4,-3,2,9,-9,3,3,-1,-9,8,1,-5,-10,-6,-9,-8,-7,-7,5,8,-6,-2,-7,7,1,7,3,-10,8,-1,-3,7,10,-2,-3,-10,9,10,-4,-1,6,-6,-9,-1,-4,-3,3,-10,-7,9,1,9,-3,6,-9,2,-7,6,7,-5,2,-10,2,-10,-10,-9,10,3,-8,-3,-7,4,-3,2,-10,3,-8,8,2,-9,7,-7,5,-4,-6,1,10,-9,-8,5,1,9,-2,9,5,8,5,2,-5,2,1,-7,1,-6,-9,6,-8,9,-3,3,8,3,9,3,2,-5,1,6,10,-8,2,8,10,-9,10,1,7,1,-9,-10,-2,-4,9,-4,1,-7,-7,-2,-4,9,4,2,-4,-7,-9,-4,4,-3,-7,9,10,-10,10,-5,-4,10,4,1,-9,3,-5,-9,6,-1,3,-2,5,2,-5,-4,9,8,8,-3,6,-4,-4,2,-7,6,3,2,1,5,-1,6,-5,-7,-2,9,-6,-10,6,-2,-5,4,6,7,-2,-5,3,4,4,10,-2,3,-2,10,-9,4,9,-3,3,-4,4,9,9,-5,7,-8,-4,8,-5,7,-9,9,8,6,-2,8,8,-3,-3,9,-4,8,9,6,-2,-8,-6,2,-9,-7,9,-8,5,5,10,7,-2,-1,-8,-4,10,3,1,9,-6,-2,4,-1,1,-6,-3,-2,7,-5,-10,7,-5,5,-8,7,-3,-8,-10,7,-6,-2,-7,3,8,8,10,-10,-6,10,-1,9,-7,4,-5,-1,-3,1,7,-3,3,-5,-7,-6,1,-6,-5,10,-1,1,3,-6,-3,10,10,-7,5,5,-8,-2,9,3,4,-5,-8,-10,8,-9,4,3,3,10,-5,-7,-8,-1,-10,10,-10,10,1,8,7,-10,-9,8,4,-7,10,1,-6,4,9,-9,-1,6,8,-1,1,7,-6,-1,10,1,-3,-10,7,6,-10,-6,5,-2,5,-9,7,-6,10,5,-7,-2,1,1,7,-5,-2,7,2,-10,3,3,3,4,9,5,-10,-6,8,8,-5,-2,3,-4,-1,1,-4,-5,-8,-2,2,2,-2,-10,8,-8,2,-1,1,9,-10,7,9,-2,-3,-3,-10,5,-5,-4,7,-7,-4,-4,-6,7,5,1,-6,-10,-5,-3,6,-1,-5,6,-9,-10,1,-7,5,2,-10,6,4,-6,-7,-8,-7,5,-3,5,-2,-2,7,10,5,-3,-5,-10,5,9,-3,4,-5,-5,10,8,-2,-8,2,-2,10,-10,6,-5,6,-10,1,10,-7,-4,-4,10,5,-7,-6,1,-6,-10,-1,-3,10,-5,-9,7,-1,-2,3,2,-10,2,10,1,-4,-8,9,-3,5,8,-4,-10,5,-9,6,4,-10,3,10,6,6,-3,5,1,-4,6,5,-3,9,-9,-3,10,-9,-5,-6,7,5,8,5,-2,2,7,5,10,-1,-9,-1,-2,-4,3,8,-4,9,-4,5,3,7,5,-9,-6,-3,9,-3,-8,7,-7,-1,-9,4,5,1,-9,8,-10,10,-9,8,8,-8,8,-10,-10,7,3,3,3,6,4,-7,-10,8,-9,-7,10,7,-1,-5,8,-10,-5,7,-7,-1,8,5,4,-9,-4,4,-4,-5,6,7,4,-4,-8,-1,5,-8,-2,1,10,3,-8,9,-7,-6,6,8,-9,-9,3,-6,1,-9,10,-1,10,6,8,-10,2,10,1,6,-10,1,-6,-2,-10,2,-3,-10,-4,2,4,10,2,-1,-10,3,5,-3,-10,10,10,-9,2,7,-8,1,-3,-5,1,-7,7,10,5,-5,-10,4,6,2,-3,-5,10,-2,-6,-9,6,-7,8,-7,1,-8,6,3,-5,1,6,10,3,-10,-10,-6,-4,9,10,-7,-7,-2,-4,4,-9,-7,10,-10,9,2,8,-6,-10,-8,-1,1,-7,3,-9,-1,4,3,7,-9,-3,8,10,8,8,-2,9,9,6,9,8,4,-10,-8,-2,5,-7,-9,-4,-8,-2,-1,4,9,1,5,-10,3,-8,6,7,5,4,-2,-10,-1,1,-7,2,-4,6,2,10,3,-6,8,-2,-9,7,-7,2,-1,-9,-5,-4,4,10,-3,1,8,9,-3,7,9,3,-2,1,-7,2,3,-3,-6,-5,1,9,5,5,10,10,-5,3,-8,-1,-9,9,8,1,2,5,1,-3,1,-4,10,-8,7,-4,-8,-9,9,8,-7,1,4,5,9,2,7,-1,-8,-4,2,9,7,8,-4,-3,-5,2,-2,5,-4,1,10,8,1,-4,-4,-3,-1,-6,7,-7,6,4,-6,-9,-5,-2,2,-7,-4,4,-4,-10,9,-1,7,-1,-7,1,3,2,10,-6,-3,-3,-4,6,7,-4,-2,-1,10,2,-8,-1,-2,-10,6,-5,9,-10,9,2,2,10,-10,4,4,9,8,-2,2,5,10,-1,-9,5,-6,2,4,3,3,-5,-1,1,-6,-4,-7,-8,-8,-7,7,5,-8,3,-8,-5,2,-2,-6,-6,3,1,-6,6,-8,-3,2,10,4,1,8,7,-6,4,-1,4,-8,-6,4,10,-5,-6,-10,9,8,10,-6,5,-7,5,9,1,-4,4,1,1,9,-4,-4,5,-1,-9,3,8,-4,7,2,-3,-7,6,4,-1,-5,-2,-8,-2,-3,7,-4,7,7,1,1,8,2,-3,1,9,-1,-6,9,7,6,9,8,-8,-9,-4,5,-8,6,-3,-7,7,-3,-6,-1,-4,6,9,-1,-1,-7,1,-9,-7,10,5,4,5,7,10,6,-6,-9,-8,-3,-3,6,-2,-4,-1,1,-4,-8,-2,2,-2,6,-1,-5,5,8,10,-3,10,-3,4,4,9,-6,-4,3,-7,6,-3,-6,10,-8,9,-5,9,-7,4,-10,3,5,6,-5,-6,10,-1,8,2,6,-7,2,10,8,3,8,6,7,-1,7,-3,-7,-5,10,10,1,-8,5,2,-2,3,-5,5,-3,4,6,-6,6,7,-9,1,-6,2,-6,7,1,10,-9,8,3,-1,-1,-3,8,-2,-7,-4,-1,6,-3,7,-3,2,4,-5,3,-8,-4,-3,1,7,8,2,-10,-9,1,6,3,-7,7,-3,-9,5,4,-6,-3,4,4,5,4,8,-9,3,-4,8,4,4,-4,9,-8,2,5,5,10,7,3,3,-10,4,7,-7,-3,6,-1,5,7,-3,1,-4,-9,9,6,3,-10,-2,-9,10,10,-7,-9,2,-10,-10,2,-4,-5,-2,6,-7,-2,-3,-7,-3,7,2,4,3,9,-5,-7,2,3,-5,9,3,-10,-4,-7,8,7,-1,-1,5,10,-1,-10,-1,6,1,-7,-7,-1,7,-8,-4,-2,7,1,-5,5,-10,-8,-7,-6,-10,-3,1,9,-1,-1,-1,-4,-10,2,8,1,2,6,4,10,-4,-10,-6,-10,-4,-4,8,7,2,1,-9,-7,-2,2,6,7,-2,4,-5,-5,-9,-8,-8,3,4,-2,-6,4,2,5,8,10,10,8,-10,4,3,-6,-7,-2,3,-4,1,-1,5,-4,8,3,-8,1,3,9,9,8,2,-7,-4,-8,-10,-9,-2,8,-7,-8,-9,4,8,9,-7,-3,6,6,10,4,-2,3,-8,-6,9,1,-6,-1,6,-2,-8,4,3,-6,5,-3,7,-2,6,-1,5,6,-6,-6,10,7,-2,-3,-2,-8,-3,5,6,4,-9,-10,6,6,4,4,9,-1,2,-6,5,3,-6,7,-10,-5,-5,-5,-2,4,-2,-9,10,2,5,10,3,-9,4,8,-6,-4,9,-5,8,-8,-6,3,-10,-1,2,-7,5,-1,-4,4,5,5,5,6,7,-6,-4,2,4,9,3,1,1,-8,3,7,7,-2,9,-10,4,3,4,2,-7,6,-6,-9,-8,-4,-6,-9,-2,-7,-10,9,-4,-4,6,-8,4,4,-8,-8,9,-7,10,9,-6,-5,5,2,6,8,1,-8,10,6,-6,-4,4,-3,-9,10,-1,2,1,-7,-10,-1,-3,-10,3,-10,-10,-8,-10,-3,-3,2,8,-4,-10,5,8,-2,7,3,-8], dtype = "uint8")#candidate|11138|(1820,)|const|uint8
call_11137 = relay.TupleGetItem(func_3363_call(relay.reshape(call_11129.astype('int8'), [6, 13, 2]), relay.reshape(const_11138.astype('uint8'), [1820,]), ), 3)
call_11139 = relay.TupleGetItem(func_3366_call(relay.reshape(call_11129.astype('int8'), [6, 13, 2]), relay.reshape(const_11138.astype('uint8'), [1820,]), ), 3)
func_9815_call = mod.get_global_var('func_9815')
func_9817_call = mutated_mod.get_global_var('func_9817')
call_11148 = relay.TupleGetItem(func_9815_call(), 1)
call_11149 = relay.TupleGetItem(func_9817_call(), 1)
output = relay.Tuple([call_11129,call_11137,const_11138,call_11148,])
output2 = relay.Tuple([call_11130,call_11139,const_11138,call_11149,])
func_11175 = relay.Function([], output)
mod['func_11175'] = func_11175
mod = relay.transform.InferType()(mod)
output = func_11175()
func_11176 = relay.Function([], output)
mutated_mod['func_11176'] = func_11176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4071_call = mod.get_global_var('func_4071')
func_4072_call = mutated_mod.get_global_var('func_4072')
call_11207 = relay.TupleGetItem(func_4071_call(), 0)
call_11208 = relay.TupleGetItem(func_4072_call(), 0)
output = relay.Tuple([call_11207,])
output2 = relay.Tuple([call_11208,])
func_11219 = relay.Function([], output)
mod['func_11219'] = func_11219
mod = relay.transform.InferType()(mod)
mutated_mod['func_11219'] = func_11219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11219_call = mutated_mod.get_global_var('func_11219')
call_11220 = func_11219_call()
output = call_11220
func_11221 = relay.Function([], output)
mutated_mod['func_11221'] = func_11221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_11283 = relay.TupleGetItem(func_3181_call(), 1)
call_11284 = relay.TupleGetItem(func_3182_call(), 1)
func_2944_call = mod.get_global_var('func_2944')
func_2946_call = mutated_mod.get_global_var('func_2946')
var_11295 = relay.var("var_11295", dtype = "int64", shape = (390,))#candidate|11295|(390,)|var|int64
call_11294 = relay.TupleGetItem(func_2944_call(relay.reshape(var_11295.astype('int64'), [390,])), 0)
call_11296 = relay.TupleGetItem(func_2946_call(relay.reshape(var_11295.astype('int64'), [390,])), 0)
output = relay.Tuple([call_11283,call_11294,var_11295,])
output2 = relay.Tuple([call_11284,call_11296,var_11295,])
func_11303 = relay.Function([var_11295,], output)
mod['func_11303'] = func_11303
mod = relay.transform.InferType()(mod)
var_11304 = relay.var("var_11304", dtype = "int64", shape = (390,))#candidate|11304|(390,)|var|int64
output = func_11303(var_11304)
func_11305 = relay.Function([var_11304], output)
mutated_mod['func_11305'] = func_11305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3396_call = mod.get_global_var('func_3396')
func_3397_call = mutated_mod.get_global_var('func_3397')
call_11317 = func_3396_call()
call_11318 = func_3396_call()
output = relay.Tuple([call_11317,])
output2 = relay.Tuple([call_11318,])
func_11360 = relay.Function([], output)
mod['func_11360'] = func_11360
mod = relay.transform.InferType()(mod)
mutated_mod['func_11360'] = func_11360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11360_call = mutated_mod.get_global_var('func_11360')
call_11361 = func_11360_call()
output = call_11361
func_11362 = relay.Function([], output)
mutated_mod['func_11362'] = func_11362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11368 = relay.var("var_11368", dtype = "float64", shape = (6, 5))#candidate|11368|(6, 5)|var|float64
uop_11369 = relay.tan(var_11368.astype('float64')) # shape=(6, 5)
output = relay.Tuple([uop_11369,])
output2 = relay.Tuple([uop_11369,])
F = relay.Function([var_11368,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11368,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

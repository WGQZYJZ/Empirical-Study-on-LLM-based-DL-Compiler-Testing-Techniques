==========mod==========
#[version = "0.0.5"]
def @func_1329(%var_1322: Tensor[(12, 15, 3), float64]) -> Tensor[(12, 15, 3), float64] {
  %0 = cast(%var_1322, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
  sin(%0) /* ty=Tensor[(12, 15, 3), float64] */
}

def @func_9035() -> (Tensor[(5, 8, 15), float32],) {
  %1 = @func_6395() /* ty=Tensor[(5, 8, 15), float64] */;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %3 = log(%2) /* ty=Tensor[(5, 8, 15), float32] */;
  (%3,)
}

def @func_5872() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) {
  %4 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %5 = cast(%4, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %6 = reshape(%5, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %9 = reshape(%7, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), uint64] */;
  %10 = reshape(%8, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), uint64] */;
  %11 = @func_3206(%9, %10) /* ty=Tensor[(15, 3, 16), uint64] */;
  %12 = cast(%11, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %13 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %14 = @func_5249(%6) /* ty=Tensor[(6, 13, 2), uint8] */;
  %15 = erf(%12) /* ty=Tensor[(15, 3, 16), float32] */;
  %16 = %13.0;
  (%4, %14, meta[relay.Constant][0] /* ty=Tensor[(720), uint64] */, %15, %16)
}

def @func_9341() -> Tensor[(6, 13, 2), float64] {
  @func_4131() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_7637() -> (Tensor[(6, 13, 2), float64],) {
  %17 = @func_5393() /* ty=(Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) */;
  %18 = %17.2;
  (%18,)
}

def @func_4474() -> Tensor[(288), float64] {
  %19 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %19.4
}

def @func_3446() -> (Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) {
  %20 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %21 = cast(meta[relay.Constant][1] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %22 = reshape(%21, newshape=[]) /* ty=uint16 */;
  %23 = %20.0;
  %24 = @func_3416(%22) /* ty=Tensor[(14, 2, 13), float32] */;
  (%23, %24, meta[relay.Constant][1] /* ty=uint16 */)
}

def @func_2822() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_5249(%var_5244: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint8] {
  %25 = @func_4852() /* ty=Tensor[(6, 13, 2), int8] */;
  %26 = cast(%var_5244, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%28, %29) /* ty=Tensor[(6, 13, 2), uint8] */
}

def @func_8204() -> (Tensor[(6, 13, 2), float32], Tensor[(6, 13, 2), uint32]) {
  %30 = @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */;
  %31 = %30.0;
  %32 = cast(%31, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %33 = reshape(%32, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %34 = @func_7188(%33) /* ty=Tensor[(6, 13, 2), uint32] */;
  (%31, %34)
}

def @func_2901(%var_2896: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint8] {
  %35 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %36 = cast(%var_2896, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%38, %39) /* ty=Tensor[(6, 13, 2), uint8] */
}

def @func_2503(%var_2499: uint8) -> (Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) {
  %40 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %42 = acos(%41) /* ty=Tensor[(6, 13, 2), float32] */;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %44 = erf(%43) /* ty=Tensor[(6, 13, 2), float64] */;
  %45 = cast(%42, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %49 = cast(%var_2499, dtype="uint8") /* ty=uint8 */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(1568), uint8] */, dtype="uint8") /* ty=Tensor[(1568), uint8] */;
  %51 = reshape(%49, newshape=[]) /* ty=uint8 */;
  %52 = reshape(%50, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
  %53 = @func_1461(%51, %52) /* ty=(Tensor[(14, 14, 8), uint8],) */;
  %54 = left_shift(%47, %48) /* ty=Tensor[(6, 13, 2), int16] */;
  %55 = %53.0;
  (%54, %55, %var_2499, meta[relay.Constant][2] /* ty=Tensor[(1568), uint8] */)
}

def @func_2777(%var_2753: Tensor[(16, 15, 9), uint32], %var_2754: Tensor[(16, 15, 9), uint32]) -> (Tensor[(16, 15, 9), uint32], Tensor[(12, 15, 3), float64]) {
  %56 = cast(%var_2754, dtype="uint32") /* ty=Tensor[(16, 15, 9), uint32] */;
  %57 = shape_of(%var_2753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%var_2753, dtype="uint32") /* ty=Tensor[(16, 15, 9), uint32] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %60 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %61 = bitwise_or(%58, %59) /* ty=Tensor[(16, 15, 9), uint32] */;
  %62 = %60.3;
  (%61, %62)
}

def @func_4947(%var_4940: int32, %var_4941: Tensor[(2, 11, 2), int32]) -> Tensor[(2, 11, 2), int32] {
  %63 = cast(%var_4940, dtype="int32") /* ty=int32 */;
  %64 = cast(%var_4941, dtype="int32") /* ty=Tensor[(2, 11, 2), int32] */;
  bitwise_or(%63, %64) /* ty=Tensor[(2, 11, 2), int32] */
}

def @func_9797() -> (Tensor[(6, 13, 2), int8], Tensor[(1650), uint32], Tensor[(8, 8, 14), float64], Tensor[(6, 13, 2), int8]) {
  %65 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(1650), uint32] */, dtype="uint32") /* ty=Tensor[(1650), uint32] */;
  %67 = reshape(%66, newshape=[5, 330]) /* ty=Tensor[(5, 330), uint32] */;
  %68 = @func_8671(%67) /* ty=(Tensor[(14, 2, 13), float32], Tensor[(8, 8, 14), int16], Tensor[(10, 15, 11), uint32], Tensor[(5, 330), uint32], Tensor[(448, 2), float64]) */;
  %69 = %68.1;
  %70 = cast(%69, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %71 = @func_6980() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */;
  %72 = %65.5;
  %73 = cos(%70) /* ty=Tensor[(8, 8, 14), float64] */;
  %74 = %71.0;
  (%72, meta[relay.Constant][3] /* ty=Tensor[(1650), uint32] */, %73, %74)
}

def @func_3887() -> Tensor[(6, 13, 2), int8] {
  @func_3396() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_4244(%var_4237: Tensor[(2, 15, 4), float64]) -> Tensor[(2, 15, 4), float64] {
  %75 = cast(%var_4237, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
  sinh(%75) /* ty=Tensor[(2, 15, 4), float64] */
}

def @func_3507(%var_3502: Tensor[(12, 8, 3), float64], %var_3503: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float64],) {
  %76 = cast(%var_3503, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %77 = shape_of(%var_3502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_3502, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %80 = floor_divide(%78, %79) /* ty=Tensor[(12, 8, 3), float64] */;
  (%80,)
}

def @func_5316(%var_5258: Tensor[(8, 11, 12), bool], %var_5259: Tensor[(8, 11, 12), bool], %var_5278: Tensor[(8, 11, 12), bool]) -> (Tensor[(8, 11, 12), bool],) {
  %81 = cast(%var_5259, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %82 = shape_of(%var_5258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_5258, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %85 = logical_and(%83, %84) /* ty=Tensor[(8, 11, 12), bool] */;
  %86 = cast(%var_5278, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = greater_equal(%88, %89) /* ty=Tensor[(8, 11, 12), bool] */;
  (%90,)
}

def @func_6656(%var_6647: Tensor[(540), float64], %var_6651: Tensor[(308), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(540), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) {
  %91 = cast(%var_6647, dtype="float64") /* ty=Tensor[(540), float64] */;
  %92 = reshape(%91, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %93 = @func_2748(%92) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %94 = cast(%var_6647, dtype="float32") /* ty=Tensor[(540), float32] */;
  %95 = cast(%var_6651, dtype="float32") /* ty=Tensor[(308), float32] */;
  %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %97 = reshape(%94, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %98 = reshape(%95, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %99 = reshape(%96, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
  %100 = @func_1677(%97, %98, %99) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
  %101 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  %102 = %93.2;
  %103 = %100.6;
  (%101, %102, %var_6647, %103, %var_6651, meta[relay.Constant][4] /* ty=Tensor[(1232), float64] */)
}

def @func_10606() -> (Tensor[(6, 13, 2), float32],) {
  %104 = @func_7727() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(14, 14, 8), uint8], uint8) */;
  %105 = %104.0;
  (%105,)
}

def @func_9470(%var_9446: Tensor[(6, 13, 2), int8], %var_9466: Tensor[(12), uint64]) -> (Tensor[(6, 13, 2), bool], Tensor[(1, 4, 3), uint64], uint64, Tensor[(12), uint64]) {
  %106 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %107 = cast(%var_9446, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %111 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %112 = cast(%var_9466, dtype="uint64") /* ty=Tensor[(12), uint64] */;
  %113 = reshape(%111, newshape=[]) /* ty=uint64 */;
  %114 = reshape(%112, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), uint64] */;
  %115 = @func_3062(%113, %114) /* ty=(Tensor[(1, 4, 3), uint64], Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], Tensor[(8, 196), uint8]) */;
  %116 = logical_or(%109, %110) /* ty=Tensor[(6, 13, 2), bool] */;
  %117 = %115.0;
  (%116, %117, meta[relay.Constant][5] /* ty=uint64 */, %var_9466)
}

def @func_10726(%var_10706: Tensor[(104, 20), float64]) -> (Tensor[(6, 13, 2), uint32], Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(104, 20), float64], Tensor[(1, 120), float64], Tensor[(2, 11, 2), int32], int32, Tensor[(44), int32]) {
  %118 = @func_9797() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(1650), uint32], Tensor[(8, 8, 14), float64], Tensor[(6, 13, 2), int8]) */;
  %119 = %118.3;
  %120 = @func_9173() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %121 = %120.0;
  %122 = cast(%121, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
  %123 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%119, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %126 = @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */;
  %127 = @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */;
  %128 = cast(%var_10706, dtype="float64") /* ty=Tensor[(104, 20), float64] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 120), float64] */, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %130 = reshape(%128, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %131 = reshape(%129, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %132 = @func_5948(%130, %131) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */;
  %133 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(44), int32] */, dtype="int32") /* ty=Tensor[(44), int32] */;
  %135 = reshape(%133, newshape=[]) /* ty=int32 */;
  %136 = reshape(%134, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), int32] */;
  %137 = minimum(%124, %125) /* ty=Tensor[(6, 13, 2), uint32] */;
  %138 = @func_7818() /* ty=Tensor[(6, 13, 2), float64] */;
  %139 = %126.1;
  %140 = %127.1;
  %141 = %132.1;
  %142 = @func_4947(%135, %136) /* ty=Tensor[(2, 11, 2), int32] */;
  (%137, %138, %139, %140, %141, %var_10706, meta[relay.Constant][6] /* ty=Tensor[(1, 120), float64] */, %142, -7 /* ty=int32 */, meta[relay.Constant][7] /* ty=Tensor[(44), int32] */)
}

def @func_2682(%var_2607: Tensor[(6, 13, 2), int8], %var_2625: Tensor[(3136), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) {
  %143 = cast(%var_2625, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %144 = reshape(%143, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %145 = @func_2300(%144) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %146 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %147 = cast(%var_2607, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %151 = bitwise_xor(%149, %150) /* ty=Tensor[(6, 13, 2), int16] */;
  %152 = cast(%151, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %153 = atan(%152) /* ty=Tensor[(6, 13, 2), float64] */;
  %154 = cast(%146, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%153, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = greater(%156, %157) /* ty=Tensor[(6, 13, 2), bool] */;
  %159 = cast(%158, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %160 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%153, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %164 = reshape(%163, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %165 = @func_1586(%164) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
  %166 = %145.0;
  %167 = less(%161, %162) /* ty=Tensor[(6, 13, 2), bool] */;
  %168 = %165.0;
  (%166, %var_2625, %167, %168, meta[relay.Constant][8] /* ty=Tensor[(308), float32] */)
}

def @func_2884() -> (Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %169 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %171 = cast(meta[relay.Constant][9] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %172 = reshape(%171, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %173 = @func_125(%172) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %175 = reshape(%174, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %176 = @func_1586(%175) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
  %177 = %176.1;
  %178 = cast(%177, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %179 = reshape(%178, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %180 = @func_125(%179) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %181 = exp(%170) /* ty=Tensor[(6, 13, 2), float64] */;
  %182 = %173.0;
  %183 = %180.0;
  (%181, %182, meta[relay.Constant][9] /* ty=Tensor[(308), float32] */, %177, %183)
}

def @func_3481() -> Tensor[(6, 13, 2), float64] {
  @func_3257() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_11303(%var_11295: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(390), int64]) {
  %184 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %185 = cast(%var_11295, dtype="int64") /* ty=Tensor[(390), int64] */;
  %186 = reshape(%185, newshape=[390]) /* ty=Tensor[(390), int64] */;
  %187 = @func_2944(%186) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) */;
  %188 = %184.1;
  %189 = %187.0;
  (%188, %189, %var_11295)
}

def @main(%var_11368: Tensor[(6, 5), float64]) -> (Tensor[(6, 5), float64],) {
  %190 = cast(%var_11368, dtype="float64") /* ty=Tensor[(6, 5), float64] */;
  %191 = tan(%190) /* ty=Tensor[(6, 5), float64] */;
  (%191,)
}

def @func_3396() -> Tensor[(6, 13, 2), int8] {
  %192 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %192.1
}

def @func_4071() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) {
  %193 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %194 = cast(%193, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %195 = reshape(%194, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %196 = @func_2901(%195) /* ty=Tensor[(6, 13, 2), uint8] */;
  (%193, %196)
}

def @func_3073() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_6793() -> (Tensor[(6, 13, 2), float64],) {
  %197 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
  (%197,)
}

def @func_5948(%var_5877: Tensor[(13, 16, 10), float64], %var_5913: Tensor[(120), float64]) -> (Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) {
  %198 = cast(%var_5877, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
  %199 = asinh(%198) /* ty=Tensor[(13, 16, 10), float64] */;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
  %201 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
  %202 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %203 = cast(%var_5913, dtype="float64") /* ty=Tensor[(120), float64] */;
  %204 = reshape(%203, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), float64] */;
  %205 = cast(%199, dtype="float32") /* ty=Tensor[(13, 16, 10), float32] */;
  %206 = log10(%200) /* ty=Tensor[(13, 16, 10), float64] */;
  %207 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
  %208 = %201.1;
  %209 = %202.0;
  %210 = @func_4244(%204) /* ty=Tensor[(2, 15, 4), float64] */;
  %211 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
  %212 = cosh(%205) /* ty=Tensor[(13, 16, 10), float32] */;
  (%206, %207, %208, %209, %210, %var_5913, %211, %212)
}

def @func_7158(%var_7114: Tensor[(1, 540), float64], %var_7115: uint16) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(1, 540), float64], uint16, Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) {
  %213 = cast(%var_7114, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
  %214 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %215 = cast(%214, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %216 = cast(%var_7115, dtype="uint16") /* ty=uint16 */;
  %217 = reshape(%213, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %218 = reshape(%215, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %219 = reshape(%216, newshape=[]) /* ty=uint16 */;
  %220 = @func_4463(%217, %218, %219) /* ty=(Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) */;
  %221 = cast(%var_7114, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
  %222 = reshape(%221, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %223 = @func_2748(%222) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %225 = reshape(%224, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), float64] */;
  %226 = @func_6550(%225) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */;
  %227 = %220.8;
  %228 = %223.0;
  %229 = @func_4852() /* ty=Tensor[(6, 13, 2), int8] */;
  %230 = %226.3;
  (%214, %227, %var_7114, %var_7115, %228, %229, %230, meta[relay.Constant][10] /* ty=Tensor[(144), float64] */)
}

def @func_8384() -> Tensor[(6, 13, 2), int8] {
  %231 = @func_8153() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(308), float32], Tensor[(540), float64], Tensor[(308), float32], Tensor[(14, 224), float32], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %231.5
}

def @func_8263(%var_8246: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1232), float64]) {
  %232 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
  %233 = cast(%var_8246, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %234 = reshape(%233, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %235 = @func_4289(%234) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */;
  %236 = %232.4;
  %237 = %235.3;
  (%236, %237, %var_8246)
}

def @func_6836(%var_6817: Tensor[(3136, 1), float32]) -> (Tensor[(6, 13, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136, 1), float32], Tensor[(6, 13, 2), float64]) {
  %238 = @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */;
  %239 = cast(%var_6817, dtype="float32") /* ty=Tensor[(3136, 1), float32] */;
  %240 = reshape(%239, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %241 = @func_2300(%240) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %242 = %238.0;
  %243 = %241.0;
  %244 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
  (%242, %243, %var_6817, %244)
}

def @func_5784(%var_5738: Tensor[(3136), float32], %var_5760: Tensor[(1820), uint8], %var_5777: uint16) -> (Tensor[(6, 13, 2), float64], Tensor[(196, 16), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), uint8], Tensor[(1820), uint8], Tensor[(196, 16), float32], Tensor[(6, 13, 2), int8], Tensor[(10, 13, 14), float32], Tensor[(14, 2, 13), float32], uint16) {
  %245 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %248 = cast(%var_5738, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %249 = reshape(%248, newshape=[196, 16]) /* ty=Tensor[(196, 16), float32] */;
  %250 = @func_4780(%249) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */;
  %251 = cos(%247) /* ty=Tensor[(6, 13, 2), float64] */;
  %252 = cast(%251, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %253 = reshape(%252, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %254 = %250.1;
  %255 = cast(%254, dtype="float32") /* ty=Tensor[(196, 16), float32] */;
  %256 = reshape(%255, newshape=[196, 16]) /* ty=Tensor[(196, 16), float32] */;
  %257 = @func_4780(%256) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */;
  %258 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %259 = cast(%var_5760, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %260 = cast(%var_5760, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %261 = reshape(%259, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %262 = reshape(%260, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %263 = @func_1800(%261, %262) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %264 = %263.2;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %266 = cast(%var_5777, dtype="uint16") /* ty=uint16 */;
  %267 = reshape(%266, newshape=[]) /* ty=uint16 */;
  %268 = @func_2901(%253) /* ty=Tensor[(6, 13, 2), uint8] */;
  %269 = %257.1;
  %270 = %258.1;
  %271 = tan(%265) /* ty=Tensor[(10, 13, 14), float32] */;
  %272 = @func_3416(%267) /* ty=Tensor[(14, 2, 13), float32] */;
  (%251, %254, %var_5738, %268, %var_5760, %269, %270, %271, %272, %var_5777)
}

def @func_9422(%var_9409: Tensor[(77, 4), float32]) -> (Tensor[(288), float64], Tensor[(7, 11, 4), float32], Tensor[(77, 4), float32]) {
  %273 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %274 = cast(%var_9409, dtype="float32") /* ty=Tensor[(77, 4), float32] */;
  %275 = reshape(%274, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %276 = @func_125(%275) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %277 = %273.4;
  %278 = %276.0;
  (%277, %278, %var_9409)
}

def @func_5807() -> (Tensor[(6, 13, 2), float64],) {
  %279 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
  (%279,)
}

def @func_10631(%var_10623: Tensor[(2, 5, 12), bool], %var_10624: Tensor[(2, 5, 12), bool]) -> Tensor[(2, 5, 12), bool] {
  %280 = cast(%var_10624, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %281 = shape_of(%var_10623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%var_10623, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%282, %283) /* ty=Tensor[(2, 5, 12), bool] */
}

def @func_166(%var_149: Tensor[(11, 14, 8), float64]) -> (Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) {
  %284 = cast(%var_149, dtype="float64") /* ty=Tensor[(11, 14, 8), float64] */;
  %285 = cast(meta[relay.Constant][11] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %286 = reshape(%285, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %287 = @func_125(%286) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %290 = reshape(%289, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %291 = @func_125(%290) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %292 = cos(%284) /* ty=Tensor[(11, 14, 8), float64] */;
  %293 = %291.0;
  (%292, %288, meta[relay.Constant][11] /* ty=Tensor[(308), float32] */, %293)
}

def @func_5514() -> Tensor[(6, 13, 2), float64] {
  @func_3257() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_1586(%var_1581: Tensor[(308), float32]) -> (Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) {
  %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
  %295 = cast(%var_1581, dtype="float32") /* ty=Tensor[(308), float32] */;
  %296 = reshape(%295, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %297 = @func_125(%296) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %298 = sinh(%294) /* ty=Tensor[(14, 10, 9), float32] */;
  %299 = %297.0;
  (%298, %299, %var_1581)
}

def @func_9173() -> (Tensor[(6, 13, 2), float64],) {
  %300 = @func_7743() /* ty=Tensor[(6, 13, 2), float64] */;
  (%300,)
}

def @func_6875() -> (Tensor[(14, 224), float32],) {
  %301 = @func_5393() /* ty=(Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) */;
  %302 = %301.0;
  (%302,)
}

def @func_1677(%var_1623: Tensor[(15, 9, 4), float32], %var_1630: Tensor[(154, 2), float32], %var_1652: Tensor[(4, 308), float64]) -> (Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) {
  %303 = cast(%var_1630, dtype="float32") /* ty=Tensor[(154, 2), float32] */;
  %304 = reshape(%303, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
  %305 = @func_125(%304) /* ty=(Tensor[(7, 11, 4), float32],) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %308 = reshape(%307, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %309 = @func_1586(%308) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
  %310 = cast(%var_1623, dtype="float32") /* ty=Tensor[(15, 9, 4), float32] */;
  %311 = atanh(%310) /* ty=Tensor[(15, 9, 4), float32] */;
  %312 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 4), float32] */;
  %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%311, dtype="float32") /* ty=Tensor[(15, 9, 4), float32] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %316 = cast(%var_1652, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %317 = reshape(%316, newshape=[11, 14, 8]) /* ty=Tensor[(11, 14, 8), float64] */;
  %318 = @func_166(%317) /* ty=(Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) */;
  %319 = %309.1;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %321 = reshape(%320, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %322 = @func_1586(%321) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
  %323 = mod(%314, %315) /* ty=Tensor[(15, 9, 4), float32] */;
  %324 = %318.0;
  %325 = %322.0;
  (%306, %var_1630, %319, %323, %324, %var_1652, %325)
}

def @func_6327() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %326 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %327 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %328 = %326.1;
  %329 = %327.1;
  (%328, %329)
}

def @func_10459(%var_10452: Tensor[(1650), uint32]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(6, 13, 2), float64], Tensor[(10, 15, 11), uint32], Tensor[(1650), uint32]) {
  %330 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %331 = @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */;
  %332 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %333 = cast(meta[relay.Constant][14] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %334 = reshape(%333, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
  %335 = @func_7410(%334) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(120), float64]) */;
  %336 = cast(%var_10452, dtype="uint32") /* ty=Tensor[(1650), uint32] */;
  %337 = reshape(%336, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), uint32] */;
  %338 = @func_7495(%337) /* ty=(Tensor[(10, 15, 11), uint32],) */;
  %339 = %330.0;
  %340 = %331.0;
  %341 = %332.0;
  %342 = %335.1;
  %343 = @func_7818() /* ty=Tensor[(6, 13, 2), float64] */;
  %344 = %338.0;
  (%339, %340, %341, %342, meta[relay.Constant][14] /* ty=Tensor[(2080), float64] */, %343, %344, %var_10452)
}

def @func_10046(%var_10018: Tensor[(270, 2), float64], %var_10019: uint16, %var_10038: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(270, 2), float64], uint16, Tensor[(3136), bool], Tensor[(6, 13, 2), float64]) {
  %345 = @func_9586() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) */;
  %346 = cast(%var_10018, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
  %347 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  %348 = cast(%347, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %349 = cast(%var_10019, dtype="uint16") /* ty=uint16 */;
  %350 = reshape(%346, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %351 = reshape(%348, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %352 = reshape(%349, newshape=[]) /* ty=uint16 */;
  %353 = @func_4463(%350, %351, %352) /* ty=(Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) */;
  %354 = %353.3;
  %355 = cast(%var_10038, dtype="bool") /* ty=Tensor[(3136), bool] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(%354, dtype="bool") /* ty=Tensor[(3136), bool] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), bool] */;
  %359 = @func_9173() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %360 = %345.1;
  %361 = logical_or(%357, %358) /* ty=Tensor[(3136), bool] */;
  %362 = %359.0;
  (%347, %360, %var_10018, %var_10019, %361, %362)
}

def @func_4016() -> (Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(1820), uint8]) {
  %363 = cast(meta[relay.Constant][15] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %364 = cast(meta[relay.Constant][15] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %365 = reshape(%363, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %366 = reshape(%364, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %367 = @func_1800(%365, %366) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %368 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  %369 = %367.0;
  (%368, %369, meta[relay.Constant][15] /* ty=Tensor[(1820), uint8] */)
}

def @func_9979(%var_9962: Tensor[(144), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(144), float64]) {
  %370 = cast(%var_9962, dtype="float64") /* ty=Tensor[(144), float64] */;
  %371 = reshape(%370, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), float64] */;
  %372 = @func_6550(%371) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */;
  %373 = @func_8845() /* ty=Tensor[(6, 13, 2), int8] */;
  %374 = %372.2;
  (%373, %374, %var_9962)
}

def @func_10906() -> (Tensor[(6, 13, 2), bool],) {
  %375 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %376 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 13, 2), int8] */, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %380 = less_equal(%378, %379) /* ty=Tensor[(6, 13, 2), bool] */;
  (%380,)
}

def @func_3228() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) {
  %381 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %382 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %383 = %381.0;
  %384 = %382.0;
  (%383, %384)
}

def @func_10502() -> (Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), int8]) {
  %385 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %386 = %385.1;
  %387 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
  (%386, %387)
}

def @func_7070() -> Tensor[(6, 13, 2), float32] {
  %388 = @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */;
  %388.0
}

def @func_4852() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_8707() -> (Tensor[(6, 13, 2), int8],) {
  %389 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  (%389,)
}

def @func_3181() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) {
  %390 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %391 = %390.2;
  %392 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  (%391, %392)
}

def @func_10878() -> Tensor[(6, 13, 2), float64] {
  %393 = @func_9815() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) */;
  %393.1
}

def @func_125(%var_114: Tensor[(7, 11, 4), float32]) -> (Tensor[(7, 11, 4), float32],) {
  %394 = cast(%var_114, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %395 = acosh(%394) /* ty=Tensor[(7, 11, 4), float32] */;
  (%395,)
}

def @func_4131() -> Tensor[(6, 13, 2), float64] {
  %396 = @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */;
  %396.1
}

def @func_6377() -> (Tensor[(288), float64],) {
  %397 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %398 = %397.4;
  (%398,)
}

def @func_7096() -> (Tensor[(6, 13, 2), float64],) {
  %399 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %400 = %399.0;
  (%400,)
}

def @func_9224(%var_9207: Tensor[(3, 180), float64]) -> (Tensor[(3, 180), bool], Tensor[(14, 14, 8), uint8], uint8) {
  %401 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %402 = %401.0;
  %403 = cast(%var_9207, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(2), int32] */;
  %405 = cast(%402, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %407 = cast(meta[relay.Constant][17] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %408 = reshape(%407, newshape=[]) /* ty=uint8 */;
  %409 = @func_2503(%408) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
  %410 = greater(%405, %406) /* ty=Tensor[(3, 180), bool] */;
  %411 = %409.1;
  (%410, %411, meta[relay.Constant][17] /* ty=uint8 */)
}

def @func_3819() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) {
  %412 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  %413 = cast(%412, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %414 = cast(%412, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %415 = sinh(%414) /* ty=Tensor[(6, 13, 2), float32] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %417 = cast(meta[relay.Constant][18] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %418 = reshape(%417, newshape=[11, 14, 8]) /* ty=Tensor[(11, 14, 8), float64] */;
  %419 = @func_166(%418) /* ty=(Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) */;
  %420 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  %421 = log10(%413) /* ty=Tensor[(6, 13, 2), float64] */;
  %422 = log2(%416) /* ty=Tensor[(6, 13, 2), float32] */;
  %423 = %419.1;
  (%420, %421, %422, %423, meta[relay.Constant][18] /* ty=Tensor[(1232), float64] */)
}

def @func_4177() -> (Tensor[(6, 13, 2), int8],) {
  %424 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  (%424,)
}

def @func_7274() -> (Tensor[(6, 13, 2), float64],) {
  %425 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %426 = %425.0;
  (%426,)
}

def @func_10186() -> Tensor[(6, 13, 2), int8] {
  @func_4852() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_2748(%var_2745: Tensor[(3, 180), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) {
  %427 = cast(%var_2745, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %428 = reshape(%427, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), float64] */;
  %429 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %430 = @func_1329(%428) /* ty=Tensor[(12, 15, 3), float64] */;
  (%429, %430, %var_2745)
}

def @func_6550(%var_6512: Tensor[(4, 12, 3), float64]) -> (Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) {
  %431 = cast(%var_6512, dtype="float64") /* ty=Tensor[(4, 12, 3), float64] */;
  %432 = @func_3228() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) */;
  %433 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %434 = cast(%var_6512, dtype="float32") /* ty=Tensor[(4, 12, 3), float32] */;
  %435 = sin(%431) /* ty=Tensor[(4, 12, 3), float64] */;
  %436 = %432.1;
  %437 = %433.2;
  %438 = sigmoid(%434) /* ty=Tensor[(4, 12, 3), float32] */;
  (%435, %436, %437, %438)
}

def @func_4398() -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %439 = cast(meta[relay.Constant][19] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %440 = reshape(%439, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %441 = @func_4289(%440) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */;
  %442 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %443 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %444 = reshape(%442, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %445 = reshape(%443, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %446 = @func_3507(%444, %445) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %447 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
  %448 = %441.4;
  %449 = %446.0;
  %450 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %451 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  (%447, %448, meta[relay.Constant][19] /* ty=Tensor[(1232), float64] */, %449, meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, %450, %451)
}

def @func_3416(%var_3398: uint16) -> Tensor[(14, 2, 13), float32] {
  %452 = cast(%var_3398, dtype="uint16") /* ty=uint16 */;
  %453 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 2, 13), uint16] */, dtype="uint16") /* ty=Tensor[(14, 2, 13), uint16] */;
  %454 = bitwise_or(%452, %453) /* ty=Tensor[(14, 2, 13), uint16] */;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  sin(%455) /* ty=Tensor[(14, 2, 13), float32] */
}

def @func_4780(%var_4719: Tensor[(196, 16), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) {
  %456 = cast(%var_4719, dtype="float32") /* ty=Tensor[(196, 16), float32] */;
  %457 = reshape(%456, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %458 = @func_2300(%457) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %459 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %460 = cast(%459, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %461 = sqrt(%460) /* ty=Tensor[(6, 13, 2), float32] */;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %463 = cast(%461, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %464 = cast(meta[relay.Constant][22] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %465 = reshape(%463, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %466 = reshape(%464, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %467 = @func_3363(%465, %466) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %468 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %469 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %470 = reshape(%468, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %471 = reshape(%469, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %472 = @func_4562(%470, %471) /* ty=(Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */;
  %473 = %458.0;
  %474 = atanh(%462) /* ty=Tensor[(6, 13, 2), float64] */;
  %475 = @func_3481() /* ty=Tensor[(6, 13, 2), float64] */;
  %476 = %467.1;
  %477 = %472.1;
  (%473, %var_4719, %474, %475, %476, meta[relay.Constant][22] /* ty=Tensor[(1820), uint8] */, %477, meta[relay.Constant][23] /* ty=Tensor[(5, 60), float64] */)
}

def @func_10769() -> (Tensor[(1232), float64], Tensor[(14, 2, 13), float64]) {
  %478 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %479 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %480 = %479.0;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %482 = exp(%481) /* ty=Tensor[(14, 2, 13), float64] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %484 = %478.2;
  %485 = cos(%483) /* ty=Tensor[(14, 2, 13), float64] */;
  (%484, %485)
}

def @func_2281() -> Tensor[(6, 13, 2), int8] {
  %486 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 13, 2), int8] */, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %487 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(6, 13, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 13, 2), int8] */, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  maximum(%488, %489) /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_7264() -> Tensor[(6, 13, 2), float64] {
  @func_3481() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_9510(%var_9503: Tensor[(99), int8]) -> (Tensor[(6, 13, 2), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) {
  %490 = @func_8861() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %491 = cast(meta[relay.Constant][26] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %492 = cast(%var_9503, dtype="int8") /* ty=Tensor[(99), int8] */;
  %493 = reshape(%491, newshape=[]) /* ty=int8 */;
  %494 = reshape(%492, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %495 = %490.0;
  %496 = @func_5154(%493, %494) /* ty=Tensor[(11, 1, 9), bool] */;
  (%495, %496, meta[relay.Constant][26] /* ty=int8 */, %var_9503)
}

def @func_7495(%var_7488: Tensor[(10, 15, 11), uint32]) -> (Tensor[(10, 15, 11), uint32],) {
  %497 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 15, 11), uint32] */, dtype="uint32") /* ty=Tensor[(10, 15, 11), uint32] */;
  %498 = shape_of(%var_7488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%var_7488, dtype="uint32") /* ty=Tensor[(10, 15, 11), uint32] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %501 = left_shift(%499, %500) /* ty=Tensor[(10, 15, 11), uint32] */;
  (%501,)
}

def @func_4526() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %502 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %503 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
  (%502, %503)
}

def @func_3755() -> Tensor[(6, 13, 2), float64] {
  %504 = @func_3228() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) */;
  %504.1
}

def @func_4289(%var_4277: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) {
  %505 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %506 = %505.2;
  %507 = cast(%506, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %508 = cast(meta[relay.Constant][28] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %509 = cast(%var_4277, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %510 = reshape(%507, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %511 = reshape(%508, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %512 = reshape(%509, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
  %513 = @func_1677(%510, %511, %512) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
  %514 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
  %515 = %513.6;
  (%514, %506, %515, meta[relay.Constant][28] /* ty=Tensor[(308), float32] */, %var_4277)
}

def @func_6294() -> Tensor[(15, 3, 16), float32] {
  %516 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
  %517 = %516.3;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  cos(%518) /* ty=Tensor[(15, 3, 16), float32] */
}

def @func_6713(%var_6683: Tensor[(2080), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(2080), float64], Tensor[(120), float64], Tensor[(3, 180), float64]) {
  %519 = cast(%var_6683, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %520 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %521 = reshape(%519, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %522 = reshape(%520, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %523 = @func_5948(%521, %522) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */;
  %524 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %525 = %524.0;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %527 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %528 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  %529 = %523.1;
  %530 = sin(%526) /* ty=Tensor[(3, 180), float64] */;
  (%527, %528, %529, %var_6683, meta[relay.Constant][29] /* ty=Tensor[(120), float64] */, %530)
}

def @func_10815() -> (Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) {
  %531 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %532 = @func_5073() /* ty=Tensor[(6, 13, 2), int8] */;
  %533 = %531.0;
  %534 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  (%532, %533, %534)
}

def @func_8875(%var_8870: Tensor[(14, 4, 5), bool]) -> (Tensor[(14, 4, 5), bool],) {
  %535 = cast(%var_8870, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %536 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(14, 4, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %539 = logical_or(%537, %538) /* ty=Tensor[(14, 4, 5), bool] */;
  (%539,)
}

def @func_3864(%var_3845: Tensor[(3, 180), float64], %var_3856: Tensor[(390), int64]) -> (Tensor[(3, 180), uint32], Tensor[(1568), uint8], Tensor[(390), int64]) {
  %540 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %541 = %540.0;
  %542 = cast(%var_3845, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(2), int32] */;
  %544 = cast(%541, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %546 = cast(%var_3856, dtype="int64") /* ty=Tensor[(390), int64] */;
  %547 = reshape(%546, newshape=[390]) /* ty=Tensor[(390), int64] */;
  %548 = @func_2944(%547) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) */;
  %549 = multiply(%544, %545) /* ty=Tensor[(3, 180), uint32] */;
  %550 = %548.5;
  (%549, %550, %var_3856)
}

def @func_6980() -> (Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) {
  %551 = cast(meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %552 = reshape(%551, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %553 = @func_2300(%552) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %554 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %555 = %553.0;
  %556 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  (%554, %555, meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, %556)
}

def @func_11175() -> (Tensor[(6, 13, 2), float64], Tensor[(1820), uint8], Tensor[(1820), uint8], Tensor[(6, 13, 2), float64]) {
  %557 = @func_5514() /* ty=Tensor[(6, 13, 2), float64] */;
  %558 = cast(%557, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %559 = cast(meta[relay.Constant][32] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %560 = reshape(%558, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %561 = reshape(%559, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %562 = @func_3363(%560, %561) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %563 = @func_9815() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) */;
  %564 = %562.3;
  %565 = %563.1;
  (%557, %564, meta[relay.Constant][32] /* ty=Tensor[(1820), uint8] */, %565)
}

def @func_6613(%var_6606: Tensor[(6, 13, 2), float64]) -> Tensor[(6, 13, 2), float32] {
  %566 = @func_5514() /* ty=Tensor[(6, 13, 2), float64] */;
  %567 = cast(%var_6606, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %569 = cast(%566, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%569, %570) /* ty=Tensor[(6, 13, 2), float32] */
}

def @func_2582(%var_2571: Tensor[(7, 260), uint8], %var_2577: Tensor[(540), float32], %var_2578: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(7, 260), uint8], Tensor[(15, 9, 4), float32], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) {
  %571 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %573 = cast(%var_2571, dtype="uint8") /* ty=Tensor[(7, 260), uint8] */;
  %574 = cast(%var_2571, dtype="uint8") /* ty=Tensor[(7, 260), uint8] */;
  %575 = reshape(%573, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %576 = reshape(%574, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %577 = @func_1800(%575, %576) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %578 = cast(%var_2577, dtype="float32") /* ty=Tensor[(540), float32] */;
  %579 = %577.0;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(308), float32] */;
  %581 = cast(%var_2578, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %582 = reshape(%578, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %583 = reshape(%580, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %584 = reshape(%581, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
  %585 = @func_1677(%582, %583, %584) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
  %586 = acosh(%572) /* ty=Tensor[(6, 13, 2), float64] */;
  %587 = %585.3;
  %588 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  (%586, %579, %var_2571, %587, %var_2577, %var_2578, %588)
}

def @func_10082(%var_10078: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32],) {
  %589 = cast(%var_10078, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %590 = cosh(%589) /* ty=Tensor[(3, 5, 14), float32] */;
  (%590,)
}

def @func_10572() -> (Tensor[(6, 13, 2), int8],) {
  %591 = @func_4154() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %592 = %591.1;
  (%592,)
}

def @func_3140(%var_3124: Tensor[(3136), float32]) -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), float64]) {
  %593 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %594 = cast(meta[relay.Constant][33] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %595 = cast(%var_3124, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %596 = reshape(%594, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %597 = reshape(%595, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %598 = @func_2682(%596, %597) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %599 = %593.0;
  %600 = cast(%599, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %601 = reshape(%600, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %602 = @func_2748(%601) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %603 = %598.2;
  %604 = %602.2;
  (%599, %603, meta[relay.Constant][33] /* ty=Tensor[(156), int8] */, %var_3124, %604)
}

def @func_3561(%var_3524: Tensor[(3136), float32]) -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(12, 15, 3), float64], Tensor[(2160), uint32]) {
  %605 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %606 = cast(%var_3524, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %607 = reshape(%606, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %608 = @func_2300(%607) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %609 = cast(meta[relay.Constant][34] /* ty=Tensor[(2160), uint32] */, dtype="uint32") /* ty=Tensor[(2160), uint32] */;
  %610 = cast(meta[relay.Constant][34] /* ty=Tensor[(2160), uint32] */, dtype="uint32") /* ty=Tensor[(2160), uint32] */;
  %611 = reshape(%609, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), uint32] */;
  %612 = reshape(%610, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), uint32] */;
  %613 = @func_2777(%611, %612) /* ty=(Tensor[(16, 15, 9), uint32], Tensor[(12, 15, 3), float64]) */;
  %614 = %605.0;
  %615 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %616 = @func_3073() /* ty=Tensor[(6, 13, 2), int8] */;
  %617 = %608.0;
  %618 = %613.1;
  (%614, %615, %616, %617, %var_3524, %618, meta[relay.Constant][34] /* ty=Tensor[(2160), uint32] */)
}

def @func_5457(%var_5454: uint8) -> (Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) {
  %619 = cast(%var_5454, dtype="uint8") /* ty=uint8 */;
  %620 = cast(meta[relay.Constant][35] /* ty=Tensor[(1568), uint8] */, dtype="uint8") /* ty=Tensor[(1568), uint8] */;
  %621 = reshape(%619, newshape=[]) /* ty=uint8 */;
  %622 = reshape(%620, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
  %623 = @func_1461(%621, %622) /* ty=(Tensor[(14, 14, 8), uint8],) */;
  %624 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %625 = %623.0;
  (%624, %625, %var_5454, meta[relay.Constant][35] /* ty=Tensor[(1568), uint8] */)
}

def @func_10367() -> (Tensor[(6, 13, 2), float64],) {
  %626 = @func_6775() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) */;
  %627 = %626.0;
  (%627,)
}

def @func_6775() -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) {
  %628 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %629 = @func_4154() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %630 = %628.1;
  %631 = %629.0;
  (%630, %631)
}

def @func_7188(%var_7180: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint32] {
  %632 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %633 = cast(%var_7180, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%635, %636) /* ty=Tensor[(6, 13, 2), uint32] */
}

def @func_6117() -> Tensor[(6, 13, 2), float64] {
  @func_3257() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_5682() -> Tensor[(6, 13, 2), float64] {
  @func_3481() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_8153() -> (Tensor[(5, 8, 15), float64], Tensor[(308), float32], Tensor[(540), float64], Tensor[(308), float32], Tensor[(14, 224), float32], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %637 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %638 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %639 = cast(meta[relay.Constant][37] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %640 = reshape(%638, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %641 = reshape(%639, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %642 = @func_6656(%640, %641) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(540), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */;
  %643 = @func_6875() /* ty=(Tensor[(14, 224), float32],) */;
  %644 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %645 = %637.0;
  %646 = %642.4;
  %647 = %643.0;
  %648 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %649 = %644.1;
  (%645, %646, meta[relay.Constant][36] /* ty=Tensor[(540), float64] */, meta[relay.Constant][37] /* ty=Tensor[(308), float32] */, %647, %648, %649)
}

def @func_8671(%var_8664: Tensor[(5, 330), uint32]) -> (Tensor[(14, 2, 13), float32], Tensor[(8, 8, 14), int16], Tensor[(10, 15, 11), uint32], Tensor[(5, 330), uint32], Tensor[(448, 2), float64]) {
  %650 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %651 = cast(meta[relay.Constant][38] /* ty=Tensor[(448, 2), int16] */, dtype="int16") /* ty=Tensor[(448, 2), int16] */;
  %652 = cast(meta[relay.Constant][38] /* ty=Tensor[(448, 2), int16] */, dtype="int16") /* ty=Tensor[(448, 2), int16] */;
  %653 = reshape(%651, newshape=[8, 8, 14]) /* ty=Tensor[(8, 8, 14), int16] */;
  %654 = reshape(%652, newshape=[8, 8, 14]) /* ty=Tensor[(8, 8, 14), int16] */;
  %655 = @func_5231(%653, %654) /* ty=(Tensor[(8, 8, 14), int16],) */;
  %656 = cast(%var_8664, dtype="uint32") /* ty=Tensor[(5, 330), uint32] */;
  %657 = reshape(%656, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), uint32] */;
  %658 = @func_7495(%657) /* ty=(Tensor[(10, 15, 11), uint32],) */;
  %659 = cast(meta[relay.Constant][38] /* ty=Tensor[(448, 2), int16] */, dtype="float64") /* ty=Tensor[(448, 2), float64] */;
  %660 = %650.0;
  %661 = %655.0;
  %662 = %658.0;
  %663 = cosh(%659) /* ty=Tensor[(448, 2), float64] */;
  (%660, %661, %662, %var_8664, %663)
}

def @func_7743() -> Tensor[(6, 13, 2), float64] {
  @func_6117() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_1800(%var_1740: Tensor[(10, 13, 14), uint8], %var_1741: Tensor[(10, 13, 14), uint8]) -> (Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) {
  %664 = cast(meta[relay.Constant][39] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %665 = reshape(%664, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %666 = @func_1586(%665) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
  %667 = cast(%var_1741, dtype="uint8") /* ty=Tensor[(10, 13, 14), uint8] */;
  %668 = shape_of(%var_1740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_1740, dtype="uint8") /* ty=Tensor[(10, 13, 14), uint8] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %671 = logical_xor(%669, %670) /* ty=Tensor[(10, 13, 14), uint8] */;
  %672 = cast(%671, dtype="int32") /* ty=Tensor[(10, 13, 14), int32] */;
  %673 = shape_of(%var_1741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(%var_1741, dtype="int32") /* ty=Tensor[(10, 13, 14), int32] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %676 = multiply(%674, %675) /* ty=Tensor[(10, 13, 14), int32] */;
  %677 = cast(%676, dtype="float64") /* ty=Tensor[(10, 13, 14), float64] */;
  %678 = %666.2;
  %679 = asin(%677) /* ty=Tensor[(10, 13, 14), float64] */;
  (%678, meta[relay.Constant][39] /* ty=Tensor[(308), float32] */, %679)
}

def @func_3686() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(1820), uint8], Tensor[(1820), uint8]) {
  %680 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %681 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %682 = %680.0;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %684 = reshape(%683, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %685 = @func_2748(%684) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %686 = %681.1;
  %687 = cast(%686, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %688 = cast(meta[relay.Constant][40] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %689 = reshape(%687, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %690 = reshape(%688, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %691 = @func_3363(%689, %690) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %692 = %685.2;
  %693 = %691.3;
  (%682, %686, %692, %693, meta[relay.Constant][40] /* ty=Tensor[(1820), uint8] */)
}

def @func_6190(%var_6171: Tensor[(1, 7, 7), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(?, 7, 7), float64]) {
  %694 = @func_3446() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) */;
  %695 = cast(%var_6171, dtype="float32") /* ty=Tensor[(1, 7, 7), float32] */;
  %696 = cosh(%695) /* ty=Tensor[(1, 7, 7), float32] */;
  %697 = cast(%var_6171, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %701 = %694.0;
  %702 = floor_mod(%699, %700) /* ty=Tensor[(?, 7, 7), float64] */;
  (%701, %702)
}

def @func_5651(%var_5638: Tensor[(3136), float32], %var_5646: Tensor[(6, 13, 2), bool]) -> (Tensor[(6, 13, 2), float64], Tensor[(5, 8, 15), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), bool]) {
  %703 = @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */;
  %704 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %705 = %703.1;
  %706 = cast(%705, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %707 = cast(%var_5638, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %708 = reshape(%706, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %709 = reshape(%707, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %710 = @func_2682(%708, %709) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %711 = %710.2;
  %712 = cast(%var_5646, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%711, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %716 = %704.0;
  %717 = greater_equal(%714, %715) /* ty=Tensor[(6, 13, 2), bool] */;
  (%705, %716, %var_5638, %717)
}

def @func_9815() -> (Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) {
  %718 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %719 = @func_9586() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) */;
  %720 = %718.0;
  %721 = %719.5;
  (%720, %721)
}

def @func_8861() -> (Tensor[(6, 13, 2), int8],) {
  %722 = @func_8474() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %723 = %722.0;
  (%723,)
}

def @func_5437() -> (Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) {
  %724 = @func_3446() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) */;
  %725 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %726 = %724.1;
  %727 = %725.0;
  (%726, %727)
}

def @func_8433() -> (Tensor[(6, 13, 2), float64],) {
  %728 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %729 = %728.0;
  (%729,)
}

def @func_3637() -> (Tensor[(6, 13, 2), float64],) {
  %730 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  (%730,)
}

def @func_3286() -> Tensor[(6, 13, 2), int8] {
  %731 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %731.1
}

def @func_1461(%var_1446: uint8, %var_1447: Tensor[(14, 14, 8), uint8]) -> (Tensor[(14, 14, 8), uint8],) {
  %732 = cast(%var_1446, dtype="uint8") /* ty=uint8 */;
  %733 = cast(%var_1447, dtype="uint8") /* ty=Tensor[(14, 14, 8), uint8] */;
  %734 = maximum(%732, %733) /* ty=Tensor[(14, 14, 8), uint8] */;
  (%734,)
}

def @func_3257() -> Tensor[(6, 13, 2), float64] {
  %735 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  asinh(%736) /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_6507(%var_6467: Tensor[(156), int8], %var_6489: int8) -> (Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) {
  %737 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %738 = cast(%var_6467, dtype="int8") /* ty=Tensor[(156), int8] */;
  %739 = reshape(%738, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %740 = cast(%var_6489, dtype="int8") /* ty=int8 */;
  %741 = cast(meta[relay.Constant][41] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
  %742 = reshape(%740, newshape=[]) /* ty=int8 */;
  %743 = reshape(%741, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
  %744 = %737.1;
  %745 = @func_2901(%739) /* ty=Tensor[(6, 13, 2), uint8] */;
  %746 = @func_5154(%742, %743) /* ty=Tensor[(11, 1, 9), bool] */;
  (%744, %745, %var_6467, %746, %var_6489, meta[relay.Constant][41] /* ty=Tensor[(99), int8] */)
}

def @func_10309(%var_10294: Tensor[(10, 16, 12), float64], %var_10295: Tensor[(10, 16, 12), float64], %var_10305: Tensor[(156), int8]) -> (Tensor[(10, 16, 12), bool], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(1820), uint8]) {
  %747 = cast(%var_10295, dtype="bool") /* ty=Tensor[(10, 16, 12), bool] */;
  %748 = shape_of(%var_10294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_10294, dtype="bool") /* ty=Tensor[(10, 16, 12), bool] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %751 = cast(%var_10305, dtype="int8") /* ty=Tensor[(156), int8] */;
  %752 = cast(meta[relay.Constant][42] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %753 = reshape(%751, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %754 = reshape(%752, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %755 = @func_3363(%753, %754) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %756 = less_equal(%749, %750) /* ty=Tensor[(10, 16, 12), bool] */;
  %757 = %755.0;
  (%756, %757, %var_10305, meta[relay.Constant][42] /* ty=Tensor[(1820), uint8] */)
}

def @func_8845() -> Tensor[(6, 13, 2), int8] {
  %758 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
  %758.0
}

def @func_7727() -> (Tensor[(6, 13, 2), float32], Tensor[(14, 14, 8), uint8], uint8) {
  %759 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %760 = reshape(%759, newshape=[]) /* ty=uint8 */;
  %761 = @func_5457(%760) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
  %762 = @func_7070() /* ty=Tensor[(6, 13, 2), float32] */;
  %763 = %761.1;
  (%762, %763, meta[relay.Constant][43] /* ty=uint8 */)
}

def @func_2815() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %764 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %765 = %764.2;
  %766 = cast(%765, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %767 = reshape(%766, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %768 = @func_2748(%767) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %769 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %770 = %768.0;
  (%765, %769, %770)
}

def @func_10828() -> (Tensor[(6, 13, 2), float64],) {
  %771 = @func_9173() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %772 = %771.0;
  (%772,)
}

def @func_9868() -> (Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) {
  %773 = @func_6980() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */;
  %774 = %773.2;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %776 = reshape(%775, newshape=[196, 16]) /* ty=Tensor[(196, 16), float32] */;
  %777 = @func_4780(%776) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */;
  %778 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
  %779 = @func_9289() /* ty=Tensor[(6, 13, 2), float64] */;
  %780 = %777.7;
  (%778, %774, %779, %780)
}

def @func_5073() -> Tensor[(6, 13, 2), int8] {
  @func_3073() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_3012() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_9586() -> (Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) {
  %781 = cast(meta[relay.Constant][44] /* ty=Tensor[(182, 10), uint8] */, dtype="uint8") /* ty=Tensor[(182, 10), uint8] */;
  %782 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %783 = cast(meta[relay.Constant][46] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %784 = reshape(%781, newshape=[7, 260]) /* ty=Tensor[(7, 260), uint8] */;
  %785 = reshape(%782, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %786 = reshape(%783, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %787 = @func_2582(%784, %785, %786) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(7, 260), uint8], Tensor[(15, 9, 4), float32], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */;
  %788 = @func_7070() /* ty=Tensor[(6, 13, 2), float32] */;
  %789 = %787.5;
  %790 = @func_9341() /* ty=Tensor[(6, 13, 2), float64] */;
  (%788, %789, meta[relay.Constant][44] /* ty=Tensor[(182, 10), uint8] */, meta[relay.Constant][45] /* ty=Tensor[(540), float32] */, meta[relay.Constant][46] /* ty=Tensor[(1232), float64] */, %790)
}

def @func_4038() -> (Tensor[(5, 8, 15), float64],) {
  %791 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 8, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
  %792 = acos(%791) /* ty=Tensor[(5, 8, 15), float64] */;
  (%792,)
}

def @func_4562(%var_4533: Tensor[(10, 5, 6), float64], %var_4534: Tensor[(10, 5, 6), float64]) -> (Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) {
  %793 = cast(%var_4534, dtype="float64") /* ty=Tensor[(10, 5, 6), float64] */;
  %794 = shape_of(%var_4533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_4533, dtype="float64") /* ty=Tensor[(10, 5, 6), float64] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %797 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %798 = %797.1;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %800 = divide(%795, %796) /* ty=Tensor[(10, 5, 6), float64] */;
  %801 = cos(%799) /* ty=Tensor[(1232), float64] */;
  %802 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  (%800, %801, %802)
}

def @func_7894(%var_7852: Tensor[(6, 13, 2), int8], %var_7860: int64, %var_7861: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), float64], Tensor[(14, 14, 8), uint8], int64, Tensor[(390), int64], Tensor[(6, 13, 2), float64]) {
  %803 = @func_6980() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */;
  %804 = %803.0;
  %805 = cast(%var_7852, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %809 = cast(%var_7860, dtype="int64") /* ty=int64 */;
  %810 = cast(%var_7861, dtype="int64") /* ty=Tensor[(390), int64] */;
  %811 = reshape(%809, newshape=[]) /* ty=int64 */;
  %812 = reshape(%810, newshape=[13, 2, 15]) /* ty=Tensor[(13, 2, 15), int64] */;
  %813 = @func_2138(%811, %812) /* ty=(Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) */;
  %814 = mod(%807, %808) /* ty=Tensor[(6, 13, 2), float64] */;
  %815 = %813.1;
  %816 = @func_7264() /* ty=Tensor[(6, 13, 2), float64] */;
  (%814, %815, %var_7860, %var_7861, %816)
}

def @func_6395() -> Tensor[(5, 8, 15), float64] {
  %817 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %817.0
}

def @func_11360() -> (Tensor[(6, 13, 2), int8],) {
  %818 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  (%818,)
}

def @func_7347(%var_7302: Tensor[(13, 4, 16), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(13, 4, 16), float32]) {
  %819 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %820 = cast(%var_7302, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %821 = cosh(%820) /* ty=Tensor[(13, 4, 16), float64] */;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(13, 4, 16), float32] */;
  %823 = %819.0;
  %824 = asin(%822) /* ty=Tensor[(13, 4, 16), float32] */;
  (%823, %824)
}

def @func_9720() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32]) {
  %825 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %826 = @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */;
  %827 = %825.0;
  %828 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  %829 = %826.3;
  (%827, %828, %829)
}

def @func_8809(%var_8789: int16, %var_8790: Tensor[(15, 13, 6), int16], %var_8795: Tensor[(3136), float32]) -> (Tensor[(15, 13, 6), int16], Tensor[(3136), float32], Tensor[(1820), uint8], Tensor[(3136), float32]) {
  %830 = cast(%var_8789, dtype="int16") /* ty=int16 */;
  %831 = cast(%var_8790, dtype="int16") /* ty=Tensor[(15, 13, 6), int16] */;
  %832 = cast(%var_8795, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %833 = cast(meta[relay.Constant][48] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %834 = cast(%var_8789, dtype="uint16") /* ty=uint16 */;
  %835 = reshape(%832, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %836 = reshape(%833, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %837 = reshape(%834, newshape=[]) /* ty=uint16 */;
  %838 = @func_5784(%835, %836, %837) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(196, 16), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), uint8], Tensor[(1820), uint8], Tensor[(196, 16), float32], Tensor[(6, 13, 2), int8], Tensor[(10, 13, 14), float32], Tensor[(14, 2, 13), float32], uint16) */;
  %839 = %838.2;
  %840 = cast(%839, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %841 = cosh(%840) /* ty=Tensor[(3136), float64] */;
  %842 = cast(%841, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %843 = maximum(%830, %831) /* ty=Tensor[(15, 13, 6), int16] */;
  %844 = sqrt(%842) /* ty=Tensor[(3136), float32] */;
  (%843, %var_8795, meta[relay.Constant][48] /* ty=Tensor[(1820), uint8] */, %844)
}

def @func_8105(%var_8084: Tensor[(1820), uint8]) -> (Tensor[(6, 13, 2), float64], Tensor[(15, 9, 4), float32], Tensor[(18, 30), float32], Tensor[(308), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), bool], Tensor[(1820), uint8], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %845 = @func_7274() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %846 = cast(meta[relay.Constant][49] /* ty=Tensor[(18, 30), float32] */, dtype="float32") /* ty=Tensor[(18, 30), float32] */;
  %847 = cast(meta[relay.Constant][50] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %848 = cast(meta[relay.Constant][51] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %849 = reshape(%846, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %850 = reshape(%847, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %851 = reshape(%848, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
  %852 = @func_1677(%849, %850, %851) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
  %853 = %845.0;
  %854 = cast(%853, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %855 = cast(%var_8084, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %856 = reshape(%854, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %857 = reshape(%855, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %858 = @func_3363(%856, %857) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %859 = cast(meta[relay.Constant][52] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %860 = reshape(%859, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %861 = @func_3561(%860) /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(12, 15, 3), float64], Tensor[(2160), uint32]) */;
  %862 = %852.3;
  %863 = %858.0;
  %864 = %861.4;
  (%853, %862, meta[relay.Constant][49] /* ty=Tensor[(18, 30), float32] */, meta[relay.Constant][50] /* ty=Tensor[(308), float32] */, meta[relay.Constant][51] /* ty=Tensor[(1232), float64] */, %863, %var_8084, %864, meta[relay.Constant][52] /* ty=Tensor[(3136), float32] */)
}

def @func_2300(%var_2283: Tensor[(16, 14, 14), float32]) -> (Tensor[(16, 14, 14), float32],) {
  %865 = cast(%var_2283, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
  %866 = atanh(%865) /* ty=Tensor[(16, 14, 14), float32] */;
  (%866,)
}

def @func_4463(%var_4425: Tensor[(3, 180), float64], %var_4436: Tensor[(156), int8], %var_4446: uint16) -> (Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) {
  %867 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %868 = %867.2;
  %869 = cast(%var_4425, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(2), int32] */;
  %871 = cast(%868, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %873 = cast(%var_4436, dtype="int8") /* ty=Tensor[(156), int8] */;
  %874 = cast(meta[relay.Constant][53] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %875 = reshape(%873, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %876 = reshape(%874, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %877 = @func_2682(%875, %876) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %878 = cast(meta[relay.Constant][54] /* ty=Tensor[(3, 180), float64] */, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %879 = shape_of(%var_4425, dtype="int32") /* ty=Tensor[(2), int32] */;
  %880 = cast(%var_4425, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %882 = cast(%var_4446, dtype="uint16") /* ty=uint16 */;
  %883 = reshape(%882, newshape=[]) /* ty=uint16 */;
  %884 = @func_4016() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(1820), uint8]) */;
  %885 = subtract(%871, %872) /* ty=Tensor[(3, 180), uint32] */;
  %886 = %877.4;
  %887 = logical_or(%880, %881) /* ty=Tensor[(3, 180), bool] */;
  %888 = @func_3416(%883) /* ty=Tensor[(14, 2, 13), float32] */;
  %889 = %884.0;
  %890 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  (%885, %886, %var_4436, meta[relay.Constant][53] /* ty=Tensor[(3136), float32] */, %887, %888, %var_4446, %889, %890)
}

def @func_9118(%var_9087: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(3136), float32], Tensor[(7, 11, 4), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), bool], Tensor[(6, 13, 2), int8]) {
  %891 = cast(%var_9087, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %892 = reshape(%891, newshape=[14, 224]) /* ty=Tensor[(14, 224), float32] */;
  %893 = @func_4905(%892) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) */;
  %894 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %895 = cast(meta[relay.Constant][55] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %896 = cast(meta[relay.Constant][55] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %897 = cast(meta[relay.Constant][55] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %898 = reshape(%895, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), bool] */;
  %899 = reshape(%896, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), bool] */;
  %900 = reshape(%897, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), bool] */;
  %901 = @func_5316(%898, %899, %900) /* ty=(Tensor[(8, 11, 12), bool],) */;
  %902 = @func_7242() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) */;
  %903 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
  %904 = %893.0;
  %905 = %894.1;
  %906 = %901.0;
  %907 = %902.1;
  (%903, %904, %var_9087, %905, %906, meta[relay.Constant][55] /* ty=Tensor[(1056), bool] */, %907)
}

def @func_8928(%var_8889: uint8, %var_8890: Tensor[(7, 1), uint8]) -> (Tensor[(7, 1), uint8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %908 = cast(%var_8889, dtype="uint8") /* ty=uint8 */;
  %909 = cast(%var_8890, dtype="uint8") /* ty=Tensor[(7, 1), uint8] */;
  %910 = @func_6793() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %911 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %912 = @func_6327() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %913 = maximum(%908, %909) /* ty=Tensor[(7, 1), uint8] */;
  %914 = %910.0;
  %915 = %911.0;
  %916 = %912.0;
  (%913, %914, %915, %916)
}

def @func_8529(%var_8513: Tensor[(144), float64]) -> (Tensor[(3, 180), int32], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) {
  %917 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %918 = %917.0;
  %919 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 180), float64] */, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
  %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(2), int32] */;
  %921 = cast(%918, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %923 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %924 = cast(%var_8513, dtype="float64") /* ty=Tensor[(144), float64] */;
  %925 = reshape(%924, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), float64] */;
  %926 = @func_6550(%925) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */;
  %927 = add(%921, %922) /* ty=Tensor[(3, 180), int32] */;
  %928 = tan(%923) /* ty=Tensor[(3, 180), float64] */;
  %929 = %926.3;
  (%927, %928, %929, %var_8513)
}

def @func_9193() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64]) {
  %930 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
  %931 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %932 = %930.4;
  %933 = %931.0;
  (%932, %933)
}

def @func_11106() -> (Tensor[(6, 13, 2), int8],) {
  %934 = @func_8602() /* ty=Tensor[(6, 13, 2), int8] */;
  (%934,)
}

def @func_4972() -> (Tensor[(6, 13, 2), float32],) {
  %935 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %936 = cast(%935, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %937 = rsqrt(%936) /* ty=Tensor[(6, 13, 2), float32] */;
  (%937,)
}

def @func_8602() -> Tensor[(6, 13, 2), int8] {
  @func_4852() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_3363(%var_3333: Tensor[(6, 13, 2), int8], %var_3351: Tensor[(1820), uint8]) -> (Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) {
  %938 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %939 = %938.1;
  %940 = cast(%var_3333, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%939, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = cast(%939, dtype="int64") /* ty=Tensor[(6, 13, 2), int64] */;
  %945 = shape_of(%var_3333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(%var_3333, dtype="int64") /* ty=Tensor[(6, 13, 2), int64] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %948 = cast(%var_3351, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %949 = cast(%var_3351, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %950 = reshape(%948, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %951 = reshape(%949, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %952 = @func_1800(%950, %951) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %953 = not_equal(%942, %943) /* ty=Tensor[(6, 13, 2), bool] */;
  %954 = bitwise_or(%946, %947) /* ty=Tensor[(6, 13, 2), int64] */;
  %955 = %952.2;
  (%953, %954, %955, %var_3351)
}

def @func_2138(%var_2124: int64, %var_2125: Tensor[(13, 2, 15), int64]) -> (Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) {
  %956 = cast(%var_2124, dtype="int64") /* ty=int64 */;
  %957 = cast(%var_2125, dtype="int64") /* ty=Tensor[(13, 2, 15), int64] */;
  %958 = cast(%var_2124, dtype="uint8") /* ty=uint8 */;
  %959 = cast(meta[relay.Constant][57] /* ty=Tensor[(1568), uint8] */, dtype="uint8") /* ty=Tensor[(1568), uint8] */;
  %960 = reshape(%958, newshape=[]) /* ty=uint8 */;
  %961 = reshape(%959, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
  %962 = @func_1461(%960, %961) /* ty=(Tensor[(14, 14, 8), uint8],) */;
  %963 = multiply(%956, %957) /* ty=Tensor[(13, 2, 15), int64] */;
  %964 = %962.0;
  (%963, %964, meta[relay.Constant][57] /* ty=Tensor[(1568), uint8] */)
}

def @func_7919(%var_7905: Tensor[(6, 5, 3), float32]) -> (Tensor[(6, 5, 3), float32], Tensor[(6, 5, 3), float64]) {
  %965 = cast(%var_7905, dtype="float32") /* ty=Tensor[(6, 5, 3), float32] */;
  %966 = cast(%var_7905, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %967 = atanh(%965) /* ty=Tensor[(6, 5, 3), float32] */;
  %968 = acosh(%966) /* ty=Tensor[(6, 5, 3), float64] */;
  (%967, %968)
}

def @func_2716() -> (Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) {
  %969 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %970 = reshape(%969, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), float64] */;
  %971 = @func_1329(%970) /* ty=Tensor[(12, 15, 3), float64] */;
  %972 = cast(%971, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
  %973 = reshape(%972, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), float64] */;
  %974 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %975 = @func_1329(%973) /* ty=Tensor[(12, 15, 3), float64] */;
  (%974, %971, meta[relay.Constant][58] /* ty=Tensor[(3, 180), float64] */, %975)
}

def @func_4905(%var_4901: Tensor[(14, 224), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) {
  %976 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %977 = %976.1;
  %978 = cast(%977, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %979 = cast(%var_4901, dtype="float32") /* ty=Tensor[(14, 224), float32] */;
  %980 = reshape(%978, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %981 = reshape(%979, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %982 = @func_2682(%980, %981) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %983 = %982.3;
  (%977, %983, %var_4901)
}

def @func_9320() -> Tensor[(288), float64] {
  %984 = @func_6377() /* ty=(Tensor[(288), float64],) */;
  %984.0
}

def @func_7617(%var_7613: Tensor[(10, 30), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(10, 30), float64]) {
  %985 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %986 = cast(%var_7613, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %987 = cast(%var_7613, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %988 = reshape(%986, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %989 = reshape(%987, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %990 = @func_4562(%988, %989) /* ty=(Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */;
  %991 = %985.1;
  %992 = %990.1;
  (%991, %992, %var_7613)
}

def @func_2944(%var_2942: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) {
  %993 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %994 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %995 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %996 = reshape(%995, newshape=[]) /* ty=uint8 */;
  %997 = @func_2503(%996) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
  %998 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %999 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1000 = reshape(%999, newshape=[]) /* ty=uint8 */;
  %1001 = @func_2503(%1000) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
  %1002 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="int64") /* ty=int64 */;
  %1003 = cast(%var_2942, dtype="int64") /* ty=Tensor[(390), int64] */;
  %1004 = reshape(%1002, newshape=[]) /* ty=int64 */;
  %1005 = reshape(%1003, newshape=[13, 2, 15]) /* ty=Tensor[(13, 2, 15), int64] */;
  %1006 = @func_2138(%1004, %1005) /* ty=(Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) */;
  %1007 = %993.2;
  %1008 = %994.4;
  %1009 = %997.0;
  %1010 = %998.3;
  %1011 = %1001.3;
  %1012 = %1006.2;
  (%1007, %1008, %1009, meta[relay.Constant][59] /* ty=uint8 */, %1010, %1011, %1012, %var_2942)
}

def @func_9380() -> (Tensor[(6, 13, 2), float64],) {
  %1013 = @func_7743() /* ty=Tensor[(6, 13, 2), float64] */;
  (%1013,)
}

def @func_5231(%var_5225: Tensor[(8, 8, 14), int16], %var_5226: Tensor[(8, 8, 14), int16]) -> (Tensor[(8, 8, 14), int16],) {
  %1014 = cast(%var_5226, dtype="int16") /* ty=Tensor[(8, 8, 14), int16] */;
  %1015 = shape_of(%var_5225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%var_5225, dtype="int16") /* ty=Tensor[(8, 8, 14), int16] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1018 = logical_xor(%1016, %1017) /* ty=Tensor[(8, 8, 14), int16] */;
  (%1018,)
}

def @func_6082() -> (Tensor[(6, 13, 2), int8],) {
  %1019 = @func_3073() /* ty=Tensor[(6, 13, 2), int8] */;
  (%1019,)
}

def @func_5393() -> (Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) {
  %1020 = cast(meta[relay.Constant][60] /* ty=Tensor[(392, 8), float32] */, dtype="float32") /* ty=Tensor[(392, 8), float32] */;
  %1021 = reshape(%1020, newshape=[14, 224]) /* ty=Tensor[(14, 224), float32] */;
  %1022 = @func_4905(%1021) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) */;
  %1023 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %1024 = %1023.0;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %1026 = asin(%1025) /* ty=Tensor[(6, 13, 2), float32] */;
  %1027 = cast(%1024, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1029 = cast(%1026, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1031 = %1022.2;
  %1032 = floor_mod(%1029, %1030) /* ty=Tensor[(6, 13, 2), float64] */;
  (%1031, meta[relay.Constant][60] /* ty=Tensor[(392, 8), float32] */, %1032)
}

def @func_8474() -> (Tensor[(6, 13, 2), int8],) {
  %1033 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  (%1033,)
}

def @func_7242() -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) {
  %1034 = @func_6793() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %1035 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %1036 = %1034.0;
  %1037 = %1035.1;
  (%1036, %1037)
}

def @func_9289() -> Tensor[(6, 13, 2), float64] {
  %1038 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %1039 = %1038.0;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  cosh(%1040) /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_11068(%var_11024: Tensor[(10, 6, 6), float64]) -> (Tensor[(10, 6, 6), float64], Tensor[(3, 180), float64], Tensor[(540), float64], int8) {
  %1041 = cast(9.14904f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1042 = cast(%var_11024, dtype="float64") /* ty=Tensor[(10, 6, 6), float64] */;
  %1043 = cast(meta[relay.Constant][61] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1044 = reshape(%1043, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %1045 = @func_2748(%1044) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %1046 = cast(9.14904f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
  %1047 = reshape(%1046, newshape=[]) /* ty=int8 */;
  %1048 = @func_10992(%1047) /* ty=(Tensor[(288), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], int8) */;
  %1049 = divide(%1041, %1042) /* ty=Tensor[(10, 6, 6), float64] */;
  %1050 = %1045.2;
  %1051 = %1048.3;
  (%1049, %1050, meta[relay.Constant][61] /* ty=Tensor[(540), float64] */, %1051)
}

def @func_9604(%var_9592: Tensor[(4, 16, 11), int8], %var_9593: Tensor[(4, 16, 11), int8], %var_9599: Tensor[(156), int8], %var_9600: int64) -> (Tensor[(4, 16, 11), int8], int64, Tensor[(156), int8], int64, Tensor[(390), int64]) {
  %1052 = cast(%var_9593, dtype="int8") /* ty=Tensor[(4, 16, 11), int8] */;
  %1053 = shape_of(%var_9592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%var_9592, dtype="int8") /* ty=Tensor[(4, 16, 11), int8] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1056 = cast(%var_9599, dtype="int8") /* ty=Tensor[(156), int8] */;
  %1057 = cast(%var_9600, dtype="int64") /* ty=int64 */;
  %1058 = cast(meta[relay.Constant][62] /* ty=Tensor[(390), int64] */, dtype="int64") /* ty=Tensor[(390), int64] */;
  %1059 = reshape(%1056, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %1060 = reshape(%1057, newshape=[]) /* ty=int64 */;
  %1061 = reshape(%1058, newshape=[390]) /* ty=Tensor[(390), int64] */;
  %1062 = @func_7894(%1059, %1060, %1061) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(14, 14, 8), uint8], int64, Tensor[(390), int64], Tensor[(6, 13, 2), float64]) */;
  %1063 = bitwise_or(%1054, %1055) /* ty=Tensor[(4, 16, 11), int8] */;
  %1064 = %1062.2;
  (%1063, %1064, %var_9599, %var_9600, meta[relay.Constant][62] /* ty=Tensor[(390), int64] */)
}

def @func_11219() -> (Tensor[(6, 13, 2), int8],) {
  %1065 = @func_4071() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) */;
  %1066 = %1065.0;
  (%1066,)
}

def @func_3206(%var_3195: Tensor[(15, 3, 16), uint64], %var_3196: Tensor[(15, 3, 16), uint64]) -> Tensor[(15, 3, 16), uint64] {
  %1067 = cast(%var_3196, dtype="uint64") /* ty=Tensor[(15, 3, 16), uint64] */;
  %1068 = shape_of(%var_3195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%var_3195, dtype="uint64") /* ty=Tensor[(15, 3, 16), uint64] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%1069, %1070) /* ty=Tensor[(15, 3, 16), uint64] */
}

def @func_5154(%var_5135: int8, %var_5136: Tensor[(11, 1, 9), int8]) -> Tensor[(11, 1, 9), bool] {
  %1071 = cast(%var_5135, dtype="bool") /* ty=bool */;
  %1072 = cast(%var_5136, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
  less(%1071, %1072) /* ty=Tensor[(11, 1, 9), bool] */
}

def @func_4205(%var_4187: Tensor[(1820), uint8], %var_4194: uint16) -> (Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1820), uint8], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), int8]) {
  %1073 = cast(%var_4187, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %1074 = cast(%var_4187, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %1075 = reshape(%1073, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %1076 = reshape(%1074, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %1077 = @func_1800(%1075, %1076) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %1078 = cast(%var_4194, dtype="uint16") /* ty=uint16 */;
  %1079 = reshape(%1078, newshape=[]) /* ty=uint16 */;
  %1080 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  %1081 = %1077.0;
  %1082 = @func_3416(%1079) /* ty=Tensor[(14, 2, 13), float32] */;
  %1083 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  (%1080, %1081, %var_4187, %1082, %var_4194, %1083)
}

def @func_7818() -> Tensor[(6, 13, 2), float64] {
  %1084 = @func_6793() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %1084.0
}

def @func_3062(%var_3046: uint64, %var_3047: Tensor[(1, 4, 3), uint64]) -> (Tensor[(1, 4, 3), uint64], Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], Tensor[(8, 196), uint8]) {
  %1085 = cast(%var_3046, dtype="uint64") /* ty=uint64 */;
  %1086 = cast(%var_3047, dtype="uint64") /* ty=Tensor[(1, 4, 3), uint64] */;
  %1087 = cast(%var_3046, dtype="uint8") /* ty=uint8 */;
  %1088 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 196), uint8] */, dtype="uint8") /* ty=Tensor[(8, 196), uint8] */;
  %1089 = reshape(%1087, newshape=[]) /* ty=uint8 */;
  %1090 = reshape(%1088, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
  %1091 = @func_1461(%1089, %1090) /* ty=(Tensor[(14, 14, 8), uint8],) */;
  %1092 = logical_xor(%1085, %1086) /* ty=Tensor[(1, 4, 3), uint64] */;
  %1093 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %1094 = %1091.0;
  (%1092, %1093, %1094, meta[relay.Constant][63] /* ty=Tensor[(8, 196), uint8] */)
}

def @func_10992(%var_10970: int8) -> (Tensor[(288), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], int8) {
  %1095 = @func_6377() /* ty=(Tensor[(288), float64],) */;
  %1096 = cast(meta[relay.Constant][64] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %1097 = cast(%var_10970, dtype="int8") /* ty=int8 */;
  %1098 = reshape(%1096, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %1099 = reshape(%1097, newshape=[]) /* ty=int8 */;
  %1100 = @func_6507(%1098, %1099) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) */;
  %1101 = %1095.0;
  %1102 = %1100.1;
  (%1101, %1102, meta[relay.Constant][64] /* ty=Tensor[(156), int8] */, %var_10970)
}

def @func_7410(%var_7402: Tensor[(2080), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(120), float64]) {
  %1103 = cast(%var_7402, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %1104 = cast(meta[relay.Constant][65] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1105 = reshape(%1103, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %1106 = reshape(%1104, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %1107 = @func_5948(%1105, %1106) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */;
  %1108 = @func_6117() /* ty=Tensor[(6, 13, 2), float64] */;
  %1109 = %1107.2;
  (%1108, %1109, %var_7402, meta[relay.Constant][65] /* ty=Tensor[(120), float64] */)
}

def @func_4154() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %1110 = @func_4071() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) */;
  %1111 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %1112 = %1110.0;
  (%1111, %1112)
}

def @func_4335() -> (Tensor[(5, 8, 15), float32],) {
  %1113 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %1114 = %1113.0;
  %1115 = cast(%1114, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %1116 = log10(%1115) /* ty=Tensor[(5, 8, 15), float32] */;
  (%1116,)
}

def @func_6022(%var_5996: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(16, 14, 14), float64]) {
  %1117 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %1118 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
  %1119 = cast(%1118, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %1120 = cast(%var_5996, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1121 = reshape(%1119, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %1122 = reshape(%1120, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1123 = @func_2682(%1121, %1122) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %1124 = %1123.0;
  %1125 = cast(%1124, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %1126 = %1117.0;
  %1127 = sin(%1125) /* ty=Tensor[(16, 14, 14), float64] */;
  (%1118, %var_5996, %1126, %1127)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7347(%var_7302: Tensor[(13, 4, 16), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(13, 4, 16), float32]) {
  %0 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %1 = cast(%var_7302, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %2 = cosh(%1) /* ty=Tensor[(13, 4, 16), float64] */;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(13, 4, 16), float32] */;
  %4 = %0.0;
  %5 = asin(%3) /* ty=Tensor[(13, 4, 16), float32] */;
  (%4, %5)
}

def @func_2686(%var_2684: Tensor[(6, 13, 2), int8], %var_2685: Tensor[(3136), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) {
  @func_2682(%var_2684, %var_2685) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */
}

def @func_7818() -> Tensor[(6, 13, 2), float64] {
  %6 = @func_6793() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %6.0
}

def @func_8813(%var_8810: int16, %var_8811: Tensor[(15, 13, 6), int16], %var_8812: Tensor[(3136), float32]) -> (Tensor[(15, 13, 6), int16], Tensor[(3136), float32], Tensor[(1820), uint8], Tensor[(3136), float32]) {
  %22 = fn (%var_8789: int16, %var_8790: Tensor[(15, 13, 6), int16], %var_8795: Tensor[(3136), float32]) -> (Tensor[(15, 13, 6), int16], Tensor[(3136), float32], Tensor[(1820), uint8], Tensor[(3136), float32]) {
    %7 = cast(%var_8789, dtype="int16") /* ty=int16 */;
    %8 = cast(%var_8790, dtype="int16") /* ty=Tensor[(15, 13, 6), int16] */;
    %9 = cast(%var_8795, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %11 = cast(%var_8789, dtype="uint16") /* ty=uint16 */;
    %12 = reshape(%9, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %13 = reshape(%10, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
    %14 = reshape(%11, newshape=[]) /* ty=uint16 */;
    %15 = @func_5784(%12, %13, %14) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(196, 16), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), uint8], Tensor[(1820), uint8], Tensor[(196, 16), float32], Tensor[(6, 13, 2), int8], Tensor[(10, 13, 14), float32], Tensor[(14, 2, 13), float32], uint16) */;
    %16 = %15.2;
    %17 = cast(%16, dtype="float64") /* ty=Tensor[(3136), float64] */;
    %18 = cosh(%17) /* ty=Tensor[(3136), float64] */;
    %19 = cast(%18, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %20 = maximum(%7, %8) /* ty=Tensor[(15, 13, 6), int16] */;
    %21 = sqrt(%19) /* ty=Tensor[(3136), float32] */;
    (%20, %var_8795, meta[relay.Constant][0] /* ty=Tensor[(1820), uint8] */, %21)
  };
  %22(%var_8810, %var_8811, %var_8812) /* ty=(Tensor[(15, 13, 6), int16], Tensor[(3136), float32], Tensor[(1820), uint8], Tensor[(3136), float32]) */
}

def @func_1464(%var_1462: uint8, %var_1463: Tensor[(14, 14, 8), uint8]) -> (Tensor[(14, 14, 8), uint8],) {
  %26 = fn (%var_1446: uint8, %var_1447: Tensor[(14, 14, 8), uint8]) -> (Tensor[(14, 14, 8), uint8],) {
    %23 = cast(%var_1446, dtype="uint8") /* ty=uint8 */;
    %24 = cast(%var_1447, dtype="uint8") /* ty=Tensor[(14, 14, 8), uint8] */;
    %25 = maximum(%23, %24) /* ty=Tensor[(14, 14, 8), uint8] */;
    (%25,)
  };
  %26(%var_1462, %var_1463) /* ty=(Tensor[(14, 14, 8), uint8],) */
}

def @func_3446() -> (Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) {
  %27 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %28 = cast(meta[relay.Constant][1] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %29 = reshape(%28, newshape=[]) /* ty=uint16 */;
  %30 = %27.0;
  %31 = @func_3416(%29) /* ty=Tensor[(14, 2, 13), float32] */;
  (%30, %31, meta[relay.Constant][1] /* ty=uint16 */)
}

def @func_8602() -> Tensor[(6, 13, 2), int8] {
  @func_4852() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_8206() -> (Tensor[(6, 13, 2), float32], Tensor[(6, 13, 2), uint32]) {
  @func_8204() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(6, 13, 2), uint32]) */
}

def @func_10367() -> (Tensor[(6, 13, 2), float64],) {
  %32 = @func_6775() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) */;
  %33 = %32.0;
  (%33,)
}

def @func_4907(%var_4906: Tensor[(14, 224), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) {
  %42 = fn (%var_4901: Tensor[(14, 224), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) {
    %34 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
    %35 = %34.1;
    %36 = cast(%35, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %37 = cast(%var_4901, dtype="float32") /* ty=Tensor[(14, 224), float32] */;
    %38 = reshape(%36, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %39 = reshape(%37, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %40 = @func_2682(%38, %39) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
    %41 = %40.3;
    (%35, %41, %var_4901)
  };
  %42(%var_4906) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) */
}

def @func_7498(%var_7496: Tensor[(10, 15, 11), uint32]) -> (Tensor[(10, 15, 11), uint32],) {
  @func_7495(%var_7496) /* ty=(Tensor[(10, 15, 11), uint32],) */
}

def @func_11176() -> (Tensor[(6, 13, 2), float64], Tensor[(1820), uint8], Tensor[(1820), uint8], Tensor[(6, 13, 2), float64]) {
  %52 = fn () -> (Tensor[(6, 13, 2), float64], Tensor[(1820), uint8], Tensor[(1820), uint8], Tensor[(6, 13, 2), float64]) {
    %43 = @func_5514() /* ty=Tensor[(6, 13, 2), float64] */;
    %44 = cast(%43, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %46 = reshape(%44, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %47 = reshape(%45, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
    %48 = @func_3363(%46, %47) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
    %49 = @func_9815() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) */;
    %50 = %48.3;
    %51 = %49.1;
    (%43, %50, meta[relay.Constant][2] /* ty=Tensor[(1820), uint8] */, %51)
  };
  %52() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1820), uint8], Tensor[(1820), uint8], Tensor[(6, 13, 2), float64]) */
}

def @func_5157(%var_5155: int8, %var_5156: Tensor[(11, 1, 9), int8]) -> Tensor[(11, 1, 9), bool] {
  %55 = fn (%var_5135: int8, %var_5136: Tensor[(11, 1, 9), int8]) -> Tensor[(11, 1, 9), bool] {
    %53 = cast(%var_5135, dtype="bool") /* ty=bool */;
    %54 = cast(%var_5136, dtype="bool") /* ty=Tensor[(11, 1, 9), bool] */;
    less(%53, %54) /* ty=Tensor[(11, 1, 9), bool] */
  };
  %55(%var_5155, %var_5156) /* ty=Tensor[(11, 1, 9), bool] */
}

def @func_11071(%var_11069: Tensor[(10, 6, 6), float64]) -> (Tensor[(10, 6, 6), float64], Tensor[(3, 180), float64], Tensor[(540), float64], int8) {
  @func_11068(%var_11069) /* ty=(Tensor[(10, 6, 6), float64], Tensor[(3, 180), float64], Tensor[(540), float64], int8) */
}

def @func_4566(%var_4564: Tensor[(10, 5, 6), float64], %var_4565: Tensor[(10, 5, 6), float64]) -> (Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) {
  @func_4562(%var_4564, %var_4565) /* ty=(Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_6656(%var_6647: Tensor[(540), float64], %var_6651: Tensor[(308), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(540), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) {
  %56 = cast(%var_6647, dtype="float64") /* ty=Tensor[(540), float64] */;
  %57 = reshape(%56, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %58 = @func_2748(%57) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %59 = cast(%var_6647, dtype="float32") /* ty=Tensor[(540), float32] */;
  %60 = cast(%var_6651, dtype="float32") /* ty=Tensor[(308), float32] */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %62 = reshape(%59, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %63 = reshape(%60, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %64 = reshape(%61, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
  %65 = @func_1677(%62, %63, %64) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
  %66 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  %67 = %58.2;
  %68 = %65.6;
  (%66, %67, %var_6647, %68, %var_6651, meta[relay.Constant][3] /* ty=Tensor[(1232), float64] */)
}

def @func_9720() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32]) {
  %69 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %70 = @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */;
  %71 = %69.0;
  %72 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  %73 = %70.3;
  (%71, %72, %73)
}

def @func_3075() -> Tensor[(6, 13, 2), int8] {
  @func_3073() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_2751(%var_2749: Tensor[(3, 180), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) {
  @func_2748(%var_2749) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */
}

def @func_2582(%var_2571: Tensor[(7, 260), uint8], %var_2577: Tensor[(540), float32], %var_2578: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(7, 260), uint8], Tensor[(15, 9, 4), float32], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) {
  %74 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %76 = cast(%var_2571, dtype="uint8") /* ty=Tensor[(7, 260), uint8] */;
  %77 = cast(%var_2571, dtype="uint8") /* ty=Tensor[(7, 260), uint8] */;
  %78 = reshape(%76, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %79 = reshape(%77, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %80 = @func_1800(%78, %79) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %81 = cast(%var_2577, dtype="float32") /* ty=Tensor[(540), float32] */;
  %82 = %80.0;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(308), float32] */;
  %84 = cast(%var_2578, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %85 = reshape(%81, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %86 = reshape(%83, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
  %87 = reshape(%84, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
  %88 = @func_1677(%85, %86, %87) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
  %89 = acosh(%75) /* ty=Tensor[(6, 13, 2), float64] */;
  %90 = %88.3;
  %91 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  (%89, %82, %var_2571, %90, %var_2577, %var_2578, %91)
}

def @func_5874() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) {
  @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */
}

def @func_3482() -> Tensor[(6, 13, 2), float64] {
  %92 = fn () -> Tensor[(6, 13, 2), float64] {
    @func_3257() /* ty=Tensor[(6, 13, 2), float64] */
  };
  %92() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_10606() -> (Tensor[(6, 13, 2), float32],) {
  %93 = @func_7727() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(14, 14, 8), uint8], uint8) */;
  %94 = %93.0;
  (%94,)
}

def @func_2142(%var_2140: int64, %var_2141: Tensor[(13, 2, 15), int64]) -> (Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) {
  @func_2138(%var_2140, %var_2141) /* ty=(Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) */
}

def @func_5320(%var_5317: Tensor[(8, 11, 12), bool], %var_5318: Tensor[(8, 11, 12), bool], %var_5319: Tensor[(8, 11, 12), bool]) -> (Tensor[(8, 11, 12), bool],) {
  %105 = fn (%var_5258: Tensor[(8, 11, 12), bool], %var_5259: Tensor[(8, 11, 12), bool], %var_5278: Tensor[(8, 11, 12), bool]) -> (Tensor[(8, 11, 12), bool],) {
    %95 = cast(%var_5259, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
    %96 = shape_of(%var_5258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(%var_5258, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %99 = logical_and(%97, %98) /* ty=Tensor[(8, 11, 12), bool] */;
    %100 = cast(%var_5278, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
    %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%99, dtype="bool") /* ty=Tensor[(8, 11, 12), bool] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %104 = greater_equal(%102, %103) /* ty=Tensor[(8, 11, 12), bool] */;
    (%104,)
  };
  %105(%var_5317, %var_5318, %var_5319) /* ty=(Tensor[(8, 11, 12), bool],) */
}

def @func_3073() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_7919(%var_7905: Tensor[(6, 5, 3), float32]) -> (Tensor[(6, 5, 3), float32], Tensor[(6, 5, 3), float64]) {
  %106 = cast(%var_7905, dtype="float32") /* ty=Tensor[(6, 5, 3), float32] */;
  %107 = cast(%var_7905, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %108 = atanh(%106) /* ty=Tensor[(6, 5, 3), float32] */;
  %109 = acosh(%107) /* ty=Tensor[(6, 5, 3), float64] */;
  (%108, %109)
}

def @func_7922(%var_7920: Tensor[(6, 5, 3), float32]) -> (Tensor[(6, 5, 3), float32], Tensor[(6, 5, 3), float64]) {
  @func_7919(%var_7920) /* ty=(Tensor[(6, 5, 3), float32], Tensor[(6, 5, 3), float64]) */
}

def @func_6981() -> (Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) {
  %116 = fn () -> (Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) {
    %110 = cast(meta[relay.Constant][4] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %111 = reshape(%110, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
    %112 = @func_2300(%111) /* ty=(Tensor[(16, 14, 14), float32],) */;
    %113 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
    %114 = %112.0;
    %115 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
    (%113, %114, meta[relay.Constant][4] /* ty=Tensor[(3136), float32] */, %115)
  };
  %116() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */
}

def @func_3366(%var_3364: Tensor[(6, 13, 2), int8], %var_3365: Tensor[(1820), uint8]) -> (Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) {
  %135 = fn (%var_3333: Tensor[(6, 13, 2), int8], %var_3351: Tensor[(1820), uint8]) -> (Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) {
    %117 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %118 = %117.1;
    %119 = cast(%var_3333, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
    %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %121 = cast(%118, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
    %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %123 = cast(%118, dtype="int64") /* ty=Tensor[(6, 13, 2), int64] */;
    %124 = shape_of(%var_3333, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%var_3333, dtype="int64") /* ty=Tensor[(6, 13, 2), int64] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %127 = cast(%var_3351, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %128 = cast(%var_3351, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %129 = reshape(%127, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
    %130 = reshape(%128, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
    %131 = @func_1800(%129, %130) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
    %132 = not_equal(%121, %122) /* ty=Tensor[(6, 13, 2), bool] */;
    %133 = bitwise_or(%125, %126) /* ty=Tensor[(6, 13, 2), int64] */;
    %134 = %131.2;
    (%132, %133, %134, %var_3351)
  };
  %135(%var_3364, %var_3365) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */
}

def @func_2587(%var_2584: Tensor[(7, 260), uint8], %var_2585: Tensor[(540), float32], %var_2586: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(7, 260), uint8], Tensor[(15, 9, 4), float32], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) {
  @func_2582(%var_2584, %var_2585, %var_2586) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(7, 260), uint8], Tensor[(15, 9, 4), float32], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_4972() -> (Tensor[(6, 13, 2), float32],) {
  %136 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %138 = rsqrt(%137) /* ty=Tensor[(6, 13, 2), float32] */;
  (%138,)
}

def @func_2503(%var_2499: uint8) -> (Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) {
  %139 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %141 = acos(%140) /* ty=Tensor[(6, 13, 2), float32] */;
  %142 = cast(%141, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %143 = erf(%142) /* ty=Tensor[(6, 13, 2), float64] */;
  %144 = cast(%141, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %148 = cast(%var_2499, dtype="uint8") /* ty=uint8 */;
  %149 = cast(meta[relay.Constant][5] /* ty=Tensor[(1568), uint8] */, dtype="uint8") /* ty=Tensor[(1568), uint8] */;
  %150 = reshape(%148, newshape=[]) /* ty=uint8 */;
  %151 = reshape(%149, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
  %152 = @func_1461(%150, %151) /* ty=(Tensor[(14, 14, 8), uint8],) */;
  %153 = left_shift(%146, %147) /* ty=Tensor[(6, 13, 2), int16] */;
  %154 = %152.0;
  (%153, %154, %var_2499, meta[relay.Constant][5] /* ty=Tensor[(1568), uint8] */)
}

def @func_9382() -> (Tensor[(6, 13, 2), float64],) {
  @func_9380() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_1803(%var_1801: Tensor[(10, 13, 14), uint8], %var_1802: Tensor[(10, 13, 14), uint8]) -> (Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) {
  %171 = fn (%var_1740: Tensor[(10, 13, 14), uint8], %var_1741: Tensor[(10, 13, 14), uint8]) -> (Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) {
    %155 = cast(meta[relay.Constant][6] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %156 = reshape(%155, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %157 = @func_1586(%156) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
    %158 = cast(%var_1741, dtype="uint8") /* ty=Tensor[(10, 13, 14), uint8] */;
    %159 = shape_of(%var_1740, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%var_1740, dtype="uint8") /* ty=Tensor[(10, 13, 14), uint8] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %162 = logical_xor(%160, %161) /* ty=Tensor[(10, 13, 14), uint8] */;
    %163 = cast(%162, dtype="int32") /* ty=Tensor[(10, 13, 14), int32] */;
    %164 = shape_of(%var_1741, dtype="int32") /* ty=Tensor[(3), int32] */;
    %165 = cast(%var_1741, dtype="int32") /* ty=Tensor[(10, 13, 14), int32] */;
    %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %167 = multiply(%165, %166) /* ty=Tensor[(10, 13, 14), int32] */;
    %168 = cast(%167, dtype="float64") /* ty=Tensor[(10, 13, 14), float64] */;
    %169 = %157.2;
    %170 = asin(%168) /* ty=Tensor[(10, 13, 14), float64] */;
    (%169, meta[relay.Constant][6] /* ty=Tensor[(308), float32] */, %170)
  };
  %171(%var_1801, %var_1802) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */
}

def @func_3143(%var_3141: Tensor[(3136), float32]) -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), float64]) {
  @func_3140(%var_3141) /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), float64]) */
}

def @func_3140(%var_3124: Tensor[(3136), float32]) -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), float64]) {
  %172 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %173 = cast(meta[relay.Constant][7] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %174 = cast(%var_3124, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %175 = reshape(%173, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %176 = reshape(%174, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %177 = @func_2682(%175, %176) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %178 = %172.0;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %180 = reshape(%179, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %181 = @func_2748(%180) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %182 = %177.2;
  %183 = %181.2;
  (%178, %182, meta[relay.Constant][7] /* ty=Tensor[(156), int8] */, %var_3124, %183)
}

def @func_9224(%var_9207: Tensor[(3, 180), float64]) -> (Tensor[(3, 180), bool], Tensor[(14, 14, 8), uint8], uint8) {
  %184 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %185 = %184.0;
  %186 = cast(%var_9207, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(2), int32] */;
  %188 = cast(%185, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %190 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %191 = reshape(%190, newshape=[]) /* ty=uint8 */;
  %192 = @func_2503(%191) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
  %193 = greater(%188, %189) /* ty=Tensor[(3, 180), bool] */;
  %194 = %192.1;
  (%193, %194, meta[relay.Constant][8] /* ty=uint8 */)
}

def @func_10906() -> (Tensor[(6, 13, 2), bool],) {
  %195 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 13, 2), int8] */, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = less_equal(%198, %199) /* ty=Tensor[(6, 13, 2), bool] */;
  (%200,)
}

def @func_4400() -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_3564(%var_3562: Tensor[(3136), float32]) -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(12, 15, 3), float64], Tensor[(2160), uint32]) {
  @func_3561(%var_3562) /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(12, 15, 3), float64], Tensor[(2160), uint32]) */
}

def @func_4072() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) {
  %205 = fn () -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) {
    %201 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    %202 = cast(%201, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %203 = reshape(%202, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %204 = @func_2901(%203) /* ty=Tensor[(6, 13, 2), uint8] */;
    (%201, %204)
  };
  %205() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) */
}

def @func_9194() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64]) {
  %210 = fn () -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64]) {
    %206 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
    %207 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %208 = %206.4;
    %209 = %207.0;
    (%208, %209)
  };
  %210() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64]) */
}

def @func_7495(%var_7488: Tensor[(10, 15, 11), uint32]) -> (Tensor[(10, 15, 11), uint32],) {
  %211 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 15, 11), uint32] */, dtype="uint32") /* ty=Tensor[(10, 15, 11), uint32] */;
  %212 = shape_of(%var_7488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%var_7488, dtype="uint32") /* ty=Tensor[(10, 15, 11), uint32] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %215 = left_shift(%213, %214) /* ty=Tensor[(10, 15, 11), uint32] */;
  (%215,)
}

def @func_127(%var_126: Tensor[(7, 11, 4), float32]) -> (Tensor[(7, 11, 4), float32],) {
  %218 = fn (%var_114: Tensor[(7, 11, 4), float32]) -> (Tensor[(7, 11, 4), float32],) {
    %216 = cast(%var_114, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %217 = acosh(%216) /* ty=Tensor[(7, 11, 4), float32] */;
    (%217,)
  };
  %218(%var_126) /* ty=(Tensor[(7, 11, 4), float32],) */
}

def @func_4562(%var_4533: Tensor[(10, 5, 6), float64], %var_4534: Tensor[(10, 5, 6), float64]) -> (Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) {
  %219 = cast(%var_4534, dtype="float64") /* ty=Tensor[(10, 5, 6), float64] */;
  %220 = shape_of(%var_4533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%var_4533, dtype="float64") /* ty=Tensor[(10, 5, 6), float64] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %223 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %224 = %223.1;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %226 = divide(%221, %222) /* ty=Tensor[(10, 5, 6), float64] */;
  %227 = cos(%225) /* ty=Tensor[(1232), float64] */;
  %228 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  (%226, %227, %228)
}

def @func_9512(%var_9511: Tensor[(99), int8]) -> (Tensor[(6, 13, 2), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) {
  %236 = fn (%var_9503: Tensor[(99), int8]) -> (Tensor[(6, 13, 2), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) {
    %229 = @func_8861() /* ty=(Tensor[(6, 13, 2), int8],) */;
    %230 = cast(meta[relay.Constant][11] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %231 = cast(%var_9503, dtype="int8") /* ty=Tensor[(99), int8] */;
    %232 = reshape(%230, newshape=[]) /* ty=int8 */;
    %233 = reshape(%231, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %234 = %229.0;
    %235 = @func_5154(%232, %233) /* ty=Tensor[(11, 1, 9), bool] */;
    (%234, %235, meta[relay.Constant][11] /* ty=int8 */, %var_9503)
  };
  %236(%var_9511) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) */
}

def @func_7745() -> Tensor[(6, 13, 2), float64] {
  @func_7743() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_3688() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(1820), uint8], Tensor[(1820), uint8]) {
  @func_3686() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(1820), uint8], Tensor[(1820), uint8]) */
}

def @func_5683() -> Tensor[(6, 13, 2), float64] {
  %237 = fn () -> Tensor[(6, 13, 2), float64] {
    @func_3481() /* ty=Tensor[(6, 13, 2), float64] */
  };
  %237() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_2506(%var_2504: uint8) -> (Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) {
  @func_2503(%var_2504) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */
}

def @func_2780(%var_2778: Tensor[(16, 15, 9), uint32], %var_2779: Tensor[(16, 15, 9), uint32]) -> (Tensor[(16, 15, 9), uint32], Tensor[(12, 15, 3), float64]) {
  %245 = fn (%var_2753: Tensor[(16, 15, 9), uint32], %var_2754: Tensor[(16, 15, 9), uint32]) -> (Tensor[(16, 15, 9), uint32], Tensor[(12, 15, 3), float64]) {
    %238 = cast(%var_2754, dtype="uint32") /* ty=Tensor[(16, 15, 9), uint32] */;
    %239 = shape_of(%var_2753, dtype="int32") /* ty=Tensor[(3), int32] */;
    %240 = cast(%var_2753, dtype="uint32") /* ty=Tensor[(16, 15, 9), uint32] */;
    %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %242 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %243 = bitwise_or(%240, %241) /* ty=Tensor[(16, 15, 9), uint32] */;
    %244 = %242.3;
    (%243, %244)
  };
  %245(%var_2778, %var_2779) /* ty=(Tensor[(16, 15, 9), uint32], Tensor[(12, 15, 3), float64]) */
}

def @func_5235(%var_5233: Tensor[(8, 8, 14), int16], %var_5234: Tensor[(8, 8, 14), int16]) -> (Tensor[(8, 8, 14), int16],) {
  @func_5231(%var_5233, %var_5234) /* ty=(Tensor[(8, 8, 14), int16],) */
}

def @func_2822() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_8531(%var_8530: Tensor[(144), float64]) -> (Tensor[(3, 180), int32], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) {
  %259 = fn (%var_8513: Tensor[(144), float64]) -> (Tensor[(3, 180), int32], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) {
    %246 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %247 = %246.0;
    %248 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 180), float64] */, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
    %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(2), int32] */;
    %250 = cast(%247, dtype="int32") /* ty=Tensor[(3, 180), int32] */;
    %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %252 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
    %253 = cast(%var_8513, dtype="float64") /* ty=Tensor[(144), float64] */;
    %254 = reshape(%253, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), float64] */;
    %255 = @func_6550(%254) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */;
    %256 = add(%250, %251) /* ty=Tensor[(3, 180), int32] */;
    %257 = tan(%252) /* ty=Tensor[(3, 180), float64] */;
    %258 = %255.3;
    (%256, %257, %258, %var_8513)
  };
  %259(%var_8530) /* ty=(Tensor[(3, 180), int32], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) */
}

def @func_3756() -> Tensor[(6, 13, 2), float64] {
  %261 = fn () -> Tensor[(6, 13, 2), float64] {
    %260 = @func_3228() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) */;
    %260.1
  };
  %261() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_10188() -> Tensor[(6, 13, 2), int8] {
  @func_10186() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_2282() -> Tensor[(6, 13, 2), int8] {
  %266 = fn () -> Tensor[(6, 13, 2), int8] {
    %262 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 13, 2), int8] */, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %263 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(6, 13, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 13, 2), int8] */, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    maximum(%264, %265) /* ty=Tensor[(6, 13, 2), int8] */
  };
  %266() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_3448() -> (Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) {
  @func_3446() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) */
}

def @func_3819() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) {
  %267 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %269 = cast(%267, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %270 = sinh(%269) /* ty=Tensor[(6, 13, 2), float32] */;
  %271 = cast(%270, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %272 = cast(meta[relay.Constant][15] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %273 = reshape(%272, newshape=[11, 14, 8]) /* ty=Tensor[(11, 14, 8), float64] */;
  %274 = @func_166(%273) /* ty=(Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) */;
  %275 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  %276 = log10(%268) /* ty=Tensor[(6, 13, 2), float64] */;
  %277 = log2(%271) /* ty=Tensor[(6, 13, 2), float32] */;
  %278 = %274.1;
  (%275, %276, %277, %278, meta[relay.Constant][15] /* ty=Tensor[(1232), float64] */)
}

def @func_3888() -> Tensor[(6, 13, 2), int8] {
  %279 = fn () -> Tensor[(6, 13, 2), int8] {
    @func_3396() /* ty=Tensor[(6, 13, 2), int8] */
  };
  %279() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_4337() -> (Tensor[(5, 8, 15), float32],) {
  @func_4335() /* ty=(Tensor[(5, 8, 15), float32],) */
}

def @func_5073() -> Tensor[(6, 13, 2), int8] {
  @func_3073() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_7242() -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) {
  %280 = @func_6793() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %281 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %282 = %280.0;
  %283 = %281.1;
  (%282, %283)
}

def @func_3821() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) {
  @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */
}

def @func_7729() -> (Tensor[(6, 13, 2), float32], Tensor[(14, 14, 8), uint8], uint8) {
  @func_7727() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(14, 14, 8), uint8], uint8) */
}

def @func_3014() -> Tensor[(6, 13, 2), int8] {
  @func_3012() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_6836(%var_6817: Tensor[(3136, 1), float32]) -> (Tensor[(6, 13, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136, 1), float32], Tensor[(6, 13, 2), float64]) {
  %284 = @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */;
  %285 = cast(%var_6817, dtype="float32") /* ty=Tensor[(3136, 1), float32] */;
  %286 = reshape(%285, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %287 = @func_2300(%286) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %288 = %284.0;
  %289 = %287.0;
  %290 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
  (%288, %289, %var_6817, %290)
}

def @func_3288() -> Tensor[(6, 13, 2), int8] {
  @func_3286() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_10879() -> Tensor[(6, 13, 2), float64] {
  %292 = fn () -> Tensor[(6, 13, 2), float64] {
    %291 = @func_9815() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) */;
    %291.1
  };
  %292() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_3507(%var_3502: Tensor[(12, 8, 3), float64], %var_3503: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float64],) {
  %293 = cast(%var_3503, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %294 = shape_of(%var_3502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%var_3502, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %297 = floor_divide(%295, %296) /* ty=Tensor[(12, 8, 3), float64] */;
  (%297,)
}

def @func_6118() -> Tensor[(6, 13, 2), float64] {
  %298 = fn () -> Tensor[(6, 13, 2), float64] {
    @func_3257() /* ty=Tensor[(6, 13, 2), float64] */
  };
  %298() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_2302(%var_2301: Tensor[(16, 14, 14), float32]) -> (Tensor[(16, 14, 14), float32],) {
  %301 = fn (%var_2283: Tensor[(16, 14, 14), float32]) -> (Tensor[(16, 14, 14), float32],) {
    %299 = cast(%var_2283, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
    %300 = atanh(%299) /* ty=Tensor[(16, 14, 14), float32] */;
    (%300,)
  };
  %301(%var_2301) /* ty=(Tensor[(16, 14, 14), float32],) */
}

def @func_3561(%var_3524: Tensor[(3136), float32]) -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(12, 15, 3), float64], Tensor[(2160), uint32]) {
  %302 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %303 = cast(%var_3524, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %304 = reshape(%303, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %305 = @func_2300(%304) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %306 = cast(meta[relay.Constant][16] /* ty=Tensor[(2160), uint32] */, dtype="uint32") /* ty=Tensor[(2160), uint32] */;
  %307 = cast(meta[relay.Constant][16] /* ty=Tensor[(2160), uint32] */, dtype="uint32") /* ty=Tensor[(2160), uint32] */;
  %308 = reshape(%306, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), uint32] */;
  %309 = reshape(%307, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), uint32] */;
  %310 = @func_2777(%308, %309) /* ty=(Tensor[(16, 15, 9), uint32], Tensor[(12, 15, 3), float64]) */;
  %311 = %302.0;
  %312 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %313 = @func_3073() /* ty=Tensor[(6, 13, 2), int8] */;
  %314 = %305.0;
  %315 = %310.1;
  (%311, %312, %313, %314, %var_3524, %315, meta[relay.Constant][16] /* ty=Tensor[(2160), uint32] */)
}

def @func_3864(%var_3845: Tensor[(3, 180), float64], %var_3856: Tensor[(390), int64]) -> (Tensor[(3, 180), uint32], Tensor[(1568), uint8], Tensor[(390), int64]) {
  %316 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %317 = %316.0;
  %318 = cast(%var_3845, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(2), int32] */;
  %320 = cast(%317, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %322 = cast(%var_3856, dtype="int64") /* ty=Tensor[(390), int64] */;
  %323 = reshape(%322, newshape=[390]) /* ty=Tensor[(390), int64] */;
  %324 = @func_2944(%323) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) */;
  %325 = multiply(%320, %321) /* ty=Tensor[(3, 180), uint32] */;
  %326 = %324.5;
  (%325, %326, %var_3856)
}

def @func_5951(%var_5949: Tensor[(13, 16, 10), float64], %var_5950: Tensor[(120), float64]) -> (Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) {
  %342 = fn (%var_5877: Tensor[(13, 16, 10), float64], %var_5913: Tensor[(120), float64]) -> (Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) {
    %327 = cast(%var_5877, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
    %328 = asinh(%327) /* ty=Tensor[(13, 16, 10), float64] */;
    %329 = cast(%328, dtype="float64") /* ty=Tensor[(13, 16, 10), float64] */;
    %330 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
    %331 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
    %332 = cast(%var_5913, dtype="float64") /* ty=Tensor[(120), float64] */;
    %333 = reshape(%332, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), float64] */;
    %334 = cast(%328, dtype="float32") /* ty=Tensor[(13, 16, 10), float32] */;
    %335 = log10(%329) /* ty=Tensor[(13, 16, 10), float64] */;
    %336 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
    %337 = %330.1;
    %338 = %331.0;
    %339 = @func_4244(%333) /* ty=Tensor[(2, 15, 4), float64] */;
    %340 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
    %341 = cosh(%334) /* ty=Tensor[(13, 16, 10), float32] */;
    (%335, %336, %337, %338, %339, %var_5913, %340, %341)
  };
  %342(%var_5949, %var_5950) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */
}

def @func_10635(%var_10633: Tensor[(2, 5, 12), bool], %var_10634: Tensor[(2, 5, 12), bool]) -> Tensor[(2, 5, 12), bool] {
  @func_10631(%var_10633, %var_10634) /* ty=Tensor[(2, 5, 12), bool] */
}

def @func_1588(%var_1587: Tensor[(308), float32]) -> (Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) {
  %349 = fn (%var_1581: Tensor[(308), float32]) -> (Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) {
    %343 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 10, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 9), float32] */;
    %344 = cast(%var_1581, dtype="float32") /* ty=Tensor[(308), float32] */;
    %345 = reshape(%344, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %346 = @func_125(%345) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %347 = sinh(%343) /* ty=Tensor[(14, 10, 9), float32] */;
    %348 = %346.0;
    (%347, %348, %var_1581)
  };
  %349(%var_1587) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */
}

def @func_6794() -> (Tensor[(6, 13, 2), float64],) {
  %351 = fn () -> (Tensor[(6, 13, 2), float64],) {
    %350 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
    (%350,)
  };
  %351() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_8707() -> (Tensor[(6, 13, 2), int8],) {
  %352 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  (%352,)
}

def @func_6713(%var_6683: Tensor[(2080), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(2080), float64], Tensor[(120), float64], Tensor[(3, 180), float64]) {
  %353 = cast(%var_6683, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %354 = cast(meta[relay.Constant][18] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %355 = reshape(%353, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
  %356 = reshape(%354, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %357 = @func_5948(%355, %356) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */;
  %358 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %359 = %358.0;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %361 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %362 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  %363 = %357.1;
  %364 = sin(%360) /* ty=Tensor[(3, 180), float64] */;
  (%361, %362, %363, %var_6683, meta[relay.Constant][18] /* ty=Tensor[(120), float64] */, %364)
}

def @func_7162(%var_7160: Tensor[(1, 540), float64], %var_7161: uint16) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(1, 540), float64], uint16, Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) {
  @func_7158(%var_7160, %var_7161) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(1, 540), float64], uint16, Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) */
}

def @func_4526() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %365 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  %366 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
  (%365, %366)
}

def @func_5251(%var_5250: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint8] {
  %372 = fn (%var_5244: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint8] {
    %367 = @func_4852() /* ty=Tensor[(6, 13, 2), int8] */;
    %368 = cast(%var_5244, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
    %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%367, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    logical_xor(%370, %371) /* ty=Tensor[(6, 13, 2), uint8] */
  };
  %372(%var_5250) /* ty=Tensor[(6, 13, 2), uint8] */
}

def @func_7071() -> Tensor[(6, 13, 2), float32] {
  %374 = fn () -> Tensor[(6, 13, 2), float32] {
    %373 = @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */;
    %373.0
  };
  %374() /* ty=Tensor[(6, 13, 2), float32] */
}

def @func_11305(%var_11304: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(390), int64]) {
  %381 = fn (%var_11295: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(390), int64]) {
    %375 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
    %376 = cast(%var_11295, dtype="int64") /* ty=Tensor[(390), int64] */;
    %377 = reshape(%376, newshape=[390]) /* ty=Tensor[(390), int64] */;
    %378 = @func_2944(%377) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) */;
    %379 = %375.1;
    %380 = %378.0;
    (%379, %380, %var_11295)
  };
  %381(%var_11304) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(390), int64]) */
}

def @func_5231(%var_5225: Tensor[(8, 8, 14), int16], %var_5226: Tensor[(8, 8, 14), int16]) -> (Tensor[(8, 8, 14), int16],) {
  %382 = cast(%var_5226, dtype="int16") /* ty=Tensor[(8, 8, 14), int16] */;
  %383 = shape_of(%var_5225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_5225, dtype="int16") /* ty=Tensor[(8, 8, 14), int16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %386 = logical_xor(%384, %385) /* ty=Tensor[(8, 8, 14), int16] */;
  (%386,)
}

def @func_7617(%var_7613: Tensor[(10, 30), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(10, 30), float64]) {
  %387 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %388 = cast(%var_7613, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %389 = cast(%var_7613, dtype="float64") /* ty=Tensor[(10, 30), float64] */;
  %390 = reshape(%388, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %391 = reshape(%389, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %392 = @func_4562(%390, %391) /* ty=(Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */;
  %393 = %387.1;
  %394 = %392.1;
  (%393, %394, %var_7613)
}

def @func_4783(%var_4781: Tensor[(196, 16), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) {
  @func_4780(%var_4781) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */
}

def @func_4039() -> (Tensor[(5, 8, 15), float64],) {
  %397 = fn () -> (Tensor[(5, 8, 15), float64],) {
    %395 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 8, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
    %396 = acos(%395) /* ty=Tensor[(5, 8, 15), float64] */;
    (%396,)
  };
  %397() /* ty=(Tensor[(5, 8, 15), float64],) */
}

def @func_4154() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %398 = @func_4071() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) */;
  %399 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %400 = %398.0;
  (%399, %400)
}

def @func_10503() -> (Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), int8]) {
  %404 = fn () -> (Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), int8]) {
    %401 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %402 = %401.1;
    %403 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
    (%402, %403)
  };
  %404() /* ty=(Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_4854() -> Tensor[(6, 13, 2), int8] {
  @func_4852() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_2817() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_10815() -> (Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) {
  %405 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %406 = @func_5073() /* ty=Tensor[(6, 13, 2), int8] */;
  %407 = %405.0;
  %408 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  (%406, %407, %408)
}

def @func_7264() -> Tensor[(6, 13, 2), float64] {
  @func_3481() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_8435() -> (Tensor[(6, 13, 2), float64],) {
  @func_8433() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_6777() -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) {
  @func_6775() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_8671(%var_8664: Tensor[(5, 330), uint32]) -> (Tensor[(14, 2, 13), float32], Tensor[(8, 8, 14), int16], Tensor[(10, 15, 11), uint32], Tensor[(5, 330), uint32], Tensor[(448, 2), float64]) {
  %409 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %410 = cast(meta[relay.Constant][20] /* ty=Tensor[(448, 2), int16] */, dtype="int16") /* ty=Tensor[(448, 2), int16] */;
  %411 = cast(meta[relay.Constant][20] /* ty=Tensor[(448, 2), int16] */, dtype="int16") /* ty=Tensor[(448, 2), int16] */;
  %412 = reshape(%410, newshape=[8, 8, 14]) /* ty=Tensor[(8, 8, 14), int16] */;
  %413 = reshape(%411, newshape=[8, 8, 14]) /* ty=Tensor[(8, 8, 14), int16] */;
  %414 = @func_5231(%412, %413) /* ty=(Tensor[(8, 8, 14), int16],) */;
  %415 = cast(%var_8664, dtype="uint32") /* ty=Tensor[(5, 330), uint32] */;
  %416 = reshape(%415, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), uint32] */;
  %417 = @func_7495(%416) /* ty=(Tensor[(10, 15, 11), uint32],) */;
  %418 = cast(meta[relay.Constant][20] /* ty=Tensor[(448, 2), int16] */, dtype="float64") /* ty=Tensor[(448, 2), float64] */;
  %419 = %409.0;
  %420 = %414.0;
  %421 = %417.0;
  %422 = cosh(%418) /* ty=Tensor[(448, 2), float64] */;
  (%419, %420, %421, %var_8664, %422)
}

def @func_4463(%var_4425: Tensor[(3, 180), float64], %var_4436: Tensor[(156), int8], %var_4446: uint16) -> (Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) {
  %423 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %424 = %423.2;
  %425 = cast(%var_4425, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %426 = shape_of(%424, dtype="int32") /* ty=Tensor[(2), int32] */;
  %427 = cast(%424, dtype="uint32") /* ty=Tensor[(3, 180), uint32] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %429 = cast(%var_4436, dtype="int8") /* ty=Tensor[(156), int8] */;
  %430 = cast(meta[relay.Constant][21] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %431 = reshape(%429, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %432 = reshape(%430, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %433 = @func_2682(%431, %432) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
  %434 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 180), float64] */, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %435 = shape_of(%var_4425, dtype="int32") /* ty=Tensor[(2), int32] */;
  %436 = cast(%var_4425, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %438 = cast(%var_4446, dtype="uint16") /* ty=uint16 */;
  %439 = reshape(%438, newshape=[]) /* ty=uint16 */;
  %440 = @func_4016() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(1820), uint8]) */;
  %441 = subtract(%427, %428) /* ty=Tensor[(3, 180), uint32] */;
  %442 = %433.4;
  %443 = logical_or(%436, %437) /* ty=Tensor[(3, 180), bool] */;
  %444 = @func_3416(%439) /* ty=Tensor[(14, 2, 13), float32] */;
  %445 = %440.0;
  %446 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  (%441, %442, %var_4436, meta[relay.Constant][21] /* ty=Tensor[(3136), float32] */, %443, %444, %var_4446, %445, %446)
}

def @func_6190(%var_6171: Tensor[(1, 7, 7), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(?, 7, 7), float64]) {
  %447 = @func_3446() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) */;
  %448 = cast(%var_6171, dtype="float32") /* ty=Tensor[(1, 7, 7), float32] */;
  %449 = cosh(%448) /* ty=Tensor[(1, 7, 7), float32] */;
  %450 = cast(%var_6171, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %454 = %447.0;
  %455 = floor_mod(%452, %453) /* ty=Tensor[(?, 7, 7), float64] */;
  (%454, %455)
}

def @func_6193(%var_6191: Tensor[(1, 7, 7), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(?, 7, 7), float64]) {
  @func_6190(%var_6191) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(?, 7, 7), float64]) */
}

def @func_7158(%var_7114: Tensor[(1, 540), float64], %var_7115: uint16) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(1, 540), float64], uint16, Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(4, 12, 3), float32], Tensor[(144), float64]) {
  %456 = cast(%var_7114, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
  %457 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %458 = cast(%457, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %459 = cast(%var_7115, dtype="uint16") /* ty=uint16 */;
  %460 = reshape(%456, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %461 = reshape(%458, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %462 = reshape(%459, newshape=[]) /* ty=uint16 */;
  %463 = @func_4463(%460, %461, %462) /* ty=(Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) */;
  %464 = cast(%var_7114, dtype="float64") /* ty=Tensor[(1, 540), float64] */;
  %465 = reshape(%464, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %466 = @func_2748(%465) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %467 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %468 = reshape(%467, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), float64] */;
  %469 = @func_6550(%468) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */;
  %470 = %463.8;
  %471 = %466.0;
  %472 = @func_4852() /* ty=Tensor[(6, 13, 2), int8] */;
  %473 = %469.3;
  (%457, %470, %var_7114, %var_7115, %471, %472, %473, meta[relay.Constant][23] /* ty=Tensor[(144), float64] */)
}

def @func_2138(%var_2124: int64, %var_2125: Tensor[(13, 2, 15), int64]) -> (Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) {
  %474 = cast(%var_2124, dtype="int64") /* ty=int64 */;
  %475 = cast(%var_2125, dtype="int64") /* ty=Tensor[(13, 2, 15), int64] */;
  %476 = cast(%var_2124, dtype="uint8") /* ty=uint8 */;
  %477 = cast(meta[relay.Constant][24] /* ty=Tensor[(1568), uint8] */, dtype="uint8") /* ty=Tensor[(1568), uint8] */;
  %478 = reshape(%476, newshape=[]) /* ty=uint8 */;
  %479 = reshape(%477, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
  %480 = @func_1461(%478, %479) /* ty=(Tensor[(14, 14, 8), uint8],) */;
  %481 = multiply(%474, %475) /* ty=Tensor[(13, 2, 15), int64] */;
  %482 = %480.0;
  (%481, %482, meta[relay.Constant][24] /* ty=Tensor[(1568), uint8] */)
}

def @func_5872() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) {
  %483 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %484 = cast(%483, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %485 = reshape(%484, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %486 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %487 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %488 = reshape(%486, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), uint64] */;
  %489 = reshape(%487, newshape=[15, 3, 16]) /* ty=Tensor[(15, 3, 16), uint64] */;
  %490 = @func_3206(%488, %489) /* ty=Tensor[(15, 3, 16), uint64] */;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
  %492 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %493 = @func_5249(%485) /* ty=Tensor[(6, 13, 2), uint8] */;
  %494 = erf(%491) /* ty=Tensor[(15, 3, 16), float32] */;
  %495 = %492.0;
  (%483, %493, meta[relay.Constant][25] /* ty=Tensor[(720), uint64] */, %494, %495)
}

def @func_10817() -> (Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) {
  @func_10815() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) */
}

def @func_2717() -> (Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) {
  %503 = fn () -> (Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) {
    %496 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
    %497 = reshape(%496, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), float64] */;
    %498 = @func_1329(%497) /* ty=Tensor[(12, 15, 3), float64] */;
    %499 = cast(%498, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
    %500 = reshape(%499, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), float64] */;
    %501 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
    %502 = @func_1329(%500) /* ty=Tensor[(12, 15, 3), float64] */;
    (%501, %498, meta[relay.Constant][26] /* ty=Tensor[(3, 180), float64] */, %502)
  };
  %503() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */
}

def @func_7276() -> (Tensor[(6, 13, 2), float64],) {
  @func_7274() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_9291() -> Tensor[(6, 13, 2), float64] {
  @func_9289() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_7727() -> (Tensor[(6, 13, 2), float32], Tensor[(14, 14, 8), uint8], uint8) {
  %504 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %505 = reshape(%504, newshape=[]) /* ty=uint8 */;
  %506 = @func_5457(%505) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
  %507 = @func_7070() /* ty=Tensor[(6, 13, 2), float32] */;
  %508 = %506.1;
  (%507, %508, meta[relay.Constant][27] /* ty=uint8 */)
}

def @func_7820() -> Tensor[(6, 13, 2), float64] {
  @func_7818() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_8674(%var_8672: Tensor[(5, 330), uint32]) -> (Tensor[(14, 2, 13), float32], Tensor[(8, 8, 14), int16], Tensor[(10, 15, 11), uint32], Tensor[(5, 330), uint32], Tensor[(448, 2), float64]) {
  @func_8671(%var_8672) /* ty=(Tensor[(14, 2, 13), float32], Tensor[(8, 8, 14), int16], Tensor[(10, 15, 11), uint32], Tensor[(5, 330), uint32], Tensor[(448, 2), float64]) */
}

def @func_7274() -> (Tensor[(6, 13, 2), float64],) {
  %509 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %510 = %509.0;
  (%510,)
}

def @func_10769() -> (Tensor[(1232), float64], Tensor[(14, 2, 13), float64]) {
  %511 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %512 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %513 = %512.0;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %515 = exp(%514) /* ty=Tensor[(14, 2, 13), float64] */;
  %516 = cast(%515, dtype="float64") /* ty=Tensor[(14, 2, 13), float64] */;
  %517 = %511.2;
  %518 = cos(%516) /* ty=Tensor[(14, 2, 13), float64] */;
  (%517, %518)
}

def @func_9424(%var_9423: Tensor[(77, 4), float32]) -> (Tensor[(288), float64], Tensor[(7, 11, 4), float32], Tensor[(77, 4), float32]) {
  %525 = fn (%var_9409: Tensor[(77, 4), float32]) -> (Tensor[(288), float64], Tensor[(7, 11, 4), float32], Tensor[(77, 4), float32]) {
    %519 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %520 = cast(%var_9409, dtype="float32") /* ty=Tensor[(77, 4), float32] */;
    %521 = reshape(%520, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %522 = @func_125(%521) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %523 = %519.4;
    %524 = %522.0;
    (%523, %524, %var_9409)
  };
  %525(%var_9423) /* ty=(Tensor[(288), float64], Tensor[(7, 11, 4), float32], Tensor[(77, 4), float32]) */
}

def @func_4780(%var_4719: Tensor[(196, 16), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) {
  %526 = cast(%var_4719, dtype="float32") /* ty=Tensor[(196, 16), float32] */;
  %527 = reshape(%526, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %528 = @func_2300(%527) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %529 = @func_3887() /* ty=Tensor[(6, 13, 2), int8] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
  %531 = sqrt(%530) /* ty=Tensor[(6, 13, 2), float32] */;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %533 = cast(%531, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %534 = cast(meta[relay.Constant][28] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %535 = reshape(%533, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %536 = reshape(%534, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %537 = @func_3363(%535, %536) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %538 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %539 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %540 = reshape(%538, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %541 = reshape(%539, newshape=[10, 5, 6]) /* ty=Tensor[(10, 5, 6), float64] */;
  %542 = @func_4562(%540, %541) /* ty=(Tensor[(10, 5, 6), float64], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */;
  %543 = %528.0;
  %544 = atanh(%532) /* ty=Tensor[(6, 13, 2), float64] */;
  %545 = @func_3481() /* ty=Tensor[(6, 13, 2), float64] */;
  %546 = %537.1;
  %547 = %542.1;
  (%543, %var_4719, %544, %545, %546, meta[relay.Constant][28] /* ty=Tensor[(1820), uint8] */, %547, meta[relay.Constant][29] /* ty=Tensor[(5, 60), float64] */)
}

def @func_10051(%var_10048: Tensor[(270, 2), float64], %var_10049: uint16, %var_10050: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(270, 2), float64], uint16, Tensor[(3136), bool], Tensor[(6, 13, 2), float64]) {
  @func_10046(%var_10048, %var_10049, %var_10050) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(270, 2), float64], uint16, Tensor[(3136), bool], Tensor[(6, 13, 2), float64]) */
}

def @func_10461(%var_10460: Tensor[(1650), uint32]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(6, 13, 2), float64], Tensor[(10, 15, 11), uint32], Tensor[(1650), uint32]) {
  %563 = fn (%var_10452: Tensor[(1650), uint32]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(6, 13, 2), float64], Tensor[(10, 15, 11), uint32], Tensor[(1650), uint32]) {
    %548 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
    %549 = @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */;
    %550 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %551 = cast(meta[relay.Constant][30] /* ty=Tensor[(2080), float64] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %552 = reshape(%551, newshape=[2080]) /* ty=Tensor[(2080), float64] */;
    %553 = @func_7410(%552) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(120), float64]) */;
    %554 = cast(%var_10452, dtype="uint32") /* ty=Tensor[(1650), uint32] */;
    %555 = reshape(%554, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), uint32] */;
    %556 = @func_7495(%555) /* ty=(Tensor[(10, 15, 11), uint32],) */;
    %557 = %548.0;
    %558 = %549.0;
    %559 = %550.0;
    %560 = %553.1;
    %561 = @func_7818() /* ty=Tensor[(6, 13, 2), float64] */;
    %562 = %556.0;
    (%557, %558, %559, %560, meta[relay.Constant][30] /* ty=Tensor[(2080), float64] */, %561, %562, %var_10452)
  };
  %563(%var_10460) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(6, 13, 2), float64], Tensor[(10, 15, 11), uint32], Tensor[(1650), uint32]) */
}

def @func_2815() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %564 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
  %565 = %564.2;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %567 = reshape(%566, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %568 = @func_2748(%567) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %569 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %570 = %568.0;
  (%565, %569, %570)
}

def @func_9036() -> (Tensor[(5, 8, 15), float32],) {
  %574 = fn () -> (Tensor[(5, 8, 15), float32],) {
    %571 = @func_6395() /* ty=Tensor[(5, 8, 15), float64] */;
    %572 = cast(%571, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
    %573 = log(%572) /* ty=Tensor[(5, 8, 15), float32] */;
    (%573,)
  };
  %574() /* ty=(Tensor[(5, 8, 15), float32],) */
}

def @func_9289() -> Tensor[(6, 13, 2), float64] {
  %575 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  cosh(%577) /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_9121(%var_9119: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(3136), float32], Tensor[(7, 11, 4), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), bool], Tensor[(6, 13, 2), int8]) {
  @func_9118(%var_9119) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(3136), float32], Tensor[(7, 11, 4), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), bool], Tensor[(6, 13, 2), int8]) */
}

def @func_8877(%var_8876: Tensor[(14, 4, 5), bool]) -> (Tensor[(14, 4, 5), bool],) {
  %583 = fn (%var_8870: Tensor[(14, 4, 5), bool]) -> (Tensor[(14, 4, 5), bool],) {
    %578 = cast(%var_8870, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
    %579 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(14, 4, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %580 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(14, 4, 5), bool] */;
    %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %582 = logical_or(%580, %581) /* ty=Tensor[(14, 4, 5), bool] */;
    (%582,)
  };
  %583(%var_8876) /* ty=(Tensor[(14, 4, 5), bool],) */
}

def @func_10728(%var_10727: Tensor[(104, 20), float64]) -> (Tensor[(6, 13, 2), uint32], Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(104, 20), float64], Tensor[(1, 120), float64], Tensor[(2, 11, 2), int32], int32, Tensor[(44), int32]) {
  %609 = fn (%var_10706: Tensor[(104, 20), float64]) -> (Tensor[(6, 13, 2), uint32], Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(104, 20), float64], Tensor[(1, 120), float64], Tensor[(2, 11, 2), int32], int32, Tensor[(44), int32]) {
    %584 = @func_9797() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(1650), uint32], Tensor[(8, 8, 14), float64], Tensor[(6, 13, 2), int8]) */;
    %585 = %584.3;
    %586 = @func_9173() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %587 = %586.0;
    %588 = cast(%587, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
    %589 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %590 = cast(%585, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
    %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %592 = @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */;
    %593 = @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */;
    %594 = cast(%var_10706, dtype="float64") /* ty=Tensor[(104, 20), float64] */;
    %595 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 120), float64] */, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %596 = reshape(%594, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %597 = reshape(%595, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %598 = @func_5948(%596, %597) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */;
    %599 = cast(-7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %600 = cast(meta[relay.Constant][33] /* ty=Tensor[(44), int32] */, dtype="int32") /* ty=Tensor[(44), int32] */;
    %601 = reshape(%599, newshape=[]) /* ty=int32 */;
    %602 = reshape(%600, newshape=[2, 11, 2]) /* ty=Tensor[(2, 11, 2), int32] */;
    %603 = minimum(%590, %591) /* ty=Tensor[(6, 13, 2), uint32] */;
    %604 = @func_7818() /* ty=Tensor[(6, 13, 2), float64] */;
    %605 = %592.1;
    %606 = %593.1;
    %607 = %598.1;
    %608 = @func_4947(%601, %602) /* ty=Tensor[(2, 11, 2), int32] */;
    (%603, %604, %605, %606, %607, %var_10706, meta[relay.Constant][32] /* ty=Tensor[(1, 120), float64] */, %608, -7 /* ty=int32 */, meta[relay.Constant][33] /* ty=Tensor[(44), int32] */)
  };
  %609(%var_10727) /* ty=(Tensor[(6, 13, 2), uint32], Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(104, 20), float64], Tensor[(1, 120), float64], Tensor[(2, 11, 2), int32], int32, Tensor[(44), int32]) */
}

def @func_3868(%var_3866: Tensor[(3, 180), float64], %var_3867: Tensor[(390), int64]) -> (Tensor[(3, 180), uint32], Tensor[(1568), uint8], Tensor[(390), int64]) {
  @func_3864(%var_3866, %var_3867) /* ty=(Tensor[(3, 180), uint32], Tensor[(1568), uint8], Tensor[(390), int64]) */
}

def @func_7638() -> (Tensor[(6, 13, 2), float64],) {
  %612 = fn () -> (Tensor[(6, 13, 2), float64],) {
    %610 = @func_5393() /* ty=(Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) */;
    %611 = %610.2;
    (%611,)
  };
  %612() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_10313(%var_10310: Tensor[(10, 16, 12), float64], %var_10311: Tensor[(10, 16, 12), float64], %var_10312: Tensor[(156), int8]) -> (Tensor[(10, 16, 12), bool], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(1820), uint8]) {
  %624 = fn (%var_10294: Tensor[(10, 16, 12), float64], %var_10295: Tensor[(10, 16, 12), float64], %var_10305: Tensor[(156), int8]) -> (Tensor[(10, 16, 12), bool], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(1820), uint8]) {
    %613 = cast(%var_10295, dtype="bool") /* ty=Tensor[(10, 16, 12), bool] */;
    %614 = shape_of(%var_10294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%var_10294, dtype="bool") /* ty=Tensor[(10, 16, 12), bool] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %617 = cast(%var_10305, dtype="int8") /* ty=Tensor[(156), int8] */;
    %618 = cast(meta[relay.Constant][34] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %619 = reshape(%617, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %620 = reshape(%618, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
    %621 = @func_3363(%619, %620) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
    %622 = less_equal(%615, %616) /* ty=Tensor[(10, 16, 12), bool] */;
    %623 = %621.0;
    (%622, %623, %var_10305, meta[relay.Constant][34] /* ty=Tensor[(1820), uint8] */)
  };
  %624(%var_10310, %var_10311, %var_10312) /* ty=(Tensor[(10, 16, 12), bool], Tensor[(6, 13, 2), bool], Tensor[(156), int8], Tensor[(1820), uint8]) */
}

def @func_9227(%var_9225: Tensor[(3, 180), float64]) -> (Tensor[(3, 180), bool], Tensor[(14, 14, 8), uint8], uint8) {
  @func_9224(%var_9225) /* ty=(Tensor[(3, 180), bool], Tensor[(14, 14, 8), uint8], uint8) */
}

def @func_7620(%var_7618: Tensor[(10, 30), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(10, 30), float64]) {
  @func_7617(%var_7618) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(10, 30), float64]) */
}

def @func_3638() -> (Tensor[(6, 13, 2), float64],) {
  %626 = fn () -> (Tensor[(6, 13, 2), float64],) {
    %625 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
    (%625,)
  };
  %626() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_3511(%var_3509: Tensor[(12, 8, 3), float64], %var_3510: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float64],) {
  @func_3507(%var_3509, %var_3510) /* ty=(Tensor[(12, 8, 3), float64],) */
}

def @func_2682(%var_2607: Tensor[(6, 13, 2), int8], %var_2625: Tensor[(3136), float32]) -> (Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) {
  %627 = cast(%var_2625, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %628 = reshape(%627, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %629 = @func_2300(%628) /* ty=(Tensor[(16, 14, 14), float32],) */;
  %630 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %631 = cast(%var_2607, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="int16") /* ty=Tensor[(6, 13, 2), int16] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %635 = bitwise_xor(%633, %634) /* ty=Tensor[(6, 13, 2), int16] */;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %637 = atan(%636) /* ty=Tensor[(6, 13, 2), float64] */;
  %638 = cast(%630, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = greater(%640, %641) /* ty=Tensor[(6, 13, 2), bool] */;
  %643 = cast(%642, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %644 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%637, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %647 = cast(meta[relay.Constant][35] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %648 = reshape(%647, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %649 = @func_1586(%648) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
  %650 = %629.0;
  %651 = less(%645, %646) /* ty=Tensor[(6, 13, 2), bool] */;
  %652 = %649.0;
  (%650, %var_2625, %651, %652, meta[relay.Constant][35] /* ty=Tensor[(308), float32] */)
}

def @func_4528() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_8265(%var_8264: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1232), float64]) {
  %659 = fn (%var_8246: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1232), float64]) {
    %653 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
    %654 = cast(%var_8246, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %655 = reshape(%654, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %656 = @func_4289(%655) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */;
    %657 = %653.4;
    %658 = %656.3;
    (%657, %658, %var_8246)
  };
  %659(%var_8264) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1232), float64]) */
}

def @func_11221() -> (Tensor[(6, 13, 2), int8],) {
  @func_11219() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_6024(%var_6023: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(16, 14, 14), float64]) {
  %671 = fn (%var_5996: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(16, 14, 14), float64]) {
    %660 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %661 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
    %662 = cast(%661, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %663 = cast(%var_5996, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %664 = reshape(%662, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %665 = reshape(%663, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %666 = @func_2682(%664, %665) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
    %667 = %666.0;
    %668 = cast(%667, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
    %669 = %660.0;
    %670 = sin(%668) /* ty=Tensor[(16, 14, 14), float64] */;
    (%661, %var_5996, %669, %670)
  };
  %671(%var_6023) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(16, 14, 14), float64]) */
}

def @func_7244() -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) {
  @func_7242() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_8846() -> Tensor[(6, 13, 2), int8] {
  %673 = fn () -> Tensor[(6, 13, 2), int8] {
    %672 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
    %672.0
  };
  %673() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_8204() -> (Tensor[(6, 13, 2), float32], Tensor[(6, 13, 2), uint32]) {
  %674 = @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */;
  %675 = %674.0;
  %676 = cast(%675, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %677 = reshape(%676, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %678 = @func_7188(%677) /* ty=Tensor[(6, 13, 2), uint32] */;
  (%675, %678)
}

def @func_1681(%var_1678: Tensor[(15, 9, 4), float32], %var_1679: Tensor[(154, 2), float32], %var_1680: Tensor[(4, 308), float64]) -> (Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) {
  %702 = fn (%var_1623: Tensor[(15, 9, 4), float32], %var_1630: Tensor[(154, 2), float32], %var_1652: Tensor[(4, 308), float64]) -> (Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) {
    %679 = cast(%var_1630, dtype="float32") /* ty=Tensor[(154, 2), float32] */;
    %680 = reshape(%679, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %681 = @func_125(%680) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %682 = %681.0;
    %683 = cast(%682, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %684 = reshape(%683, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %685 = @func_1586(%684) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
    %686 = cast(%var_1623, dtype="float32") /* ty=Tensor[(15, 9, 4), float32] */;
    %687 = atanh(%686) /* ty=Tensor[(15, 9, 4), float32] */;
    %688 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 9, 4), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 4), float32] */;
    %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(%687, dtype="float32") /* ty=Tensor[(15, 9, 4), float32] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %692 = cast(%var_1652, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
    %693 = reshape(%692, newshape=[11, 14, 8]) /* ty=Tensor[(11, 14, 8), float64] */;
    %694 = @func_166(%693) /* ty=(Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) */;
    %695 = %685.1;
    %696 = cast(%695, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %697 = reshape(%696, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %698 = @func_1586(%697) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
    %699 = mod(%690, %691) /* ty=Tensor[(15, 9, 4), float32] */;
    %700 = %694.0;
    %701 = %698.0;
    (%682, %var_1630, %695, %699, %700, %var_1652, %701)
  };
  %702(%var_1678, %var_1679, %var_1680) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */
}

def @func_3416(%var_3398: uint16) -> Tensor[(14, 2, 13), float32] {
  %703 = cast(%var_3398, dtype="uint16") /* ty=uint16 */;
  %704 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 2, 13), uint16] */, dtype="uint16") /* ty=Tensor[(14, 2, 13), uint16] */;
  %705 = bitwise_or(%703, %704) /* ty=Tensor[(14, 2, 13), uint16] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  sin(%706) /* ty=Tensor[(14, 2, 13), float32] */
}

def @func_2946(%var_2945: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) {
  %727 = fn (%var_2942: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) {
    %707 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %708 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %709 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %710 = reshape(%709, newshape=[]) /* ty=uint8 */;
    %711 = @func_2503(%710) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
    %712 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %713 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %714 = reshape(%713, newshape=[]) /* ty=uint8 */;
    %715 = @func_2503(%714) /* ty=(Tensor[(6, 13, 2), int16], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */;
    %716 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="int64") /* ty=int64 */;
    %717 = cast(%var_2942, dtype="int64") /* ty=Tensor[(390), int64] */;
    %718 = reshape(%716, newshape=[]) /* ty=int64 */;
    %719 = reshape(%717, newshape=[13, 2, 15]) /* ty=Tensor[(13, 2, 15), int64] */;
    %720 = @func_2138(%718, %719) /* ty=(Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) */;
    %721 = %707.2;
    %722 = %708.4;
    %723 = %711.0;
    %724 = %712.3;
    %725 = %715.3;
    %726 = %720.2;
    (%721, %722, %723, meta[relay.Constant][38] /* ty=uint8 */, %724, %725, %726, %var_2942)
  };
  %727(%var_2945) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32], Tensor[(6, 13, 2), int16], uint8, Tensor[(12, 15, 3), float64], Tensor[(1568), uint8], Tensor[(1568), uint8], Tensor[(390), int64]) */
}

def @func_6839(%var_6837: Tensor[(3136, 1), float32]) -> (Tensor[(6, 13, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136, 1), float32], Tensor[(6, 13, 2), float64]) {
  @func_6836(%var_6837) /* ty=(Tensor[(6, 13, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136, 1), float32], Tensor[(6, 13, 2), float64]) */
}

def @func_11108() -> (Tensor[(6, 13, 2), int8],) {
  @func_11106() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_11219() -> (Tensor[(6, 13, 2), int8],) {
  %728 = @func_4071() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8]) */;
  %729 = %728.0;
  (%729,)
}

def @func_5459(%var_5458: uint8) -> (Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) {
  %737 = fn (%var_5454: uint8) -> (Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) {
    %730 = cast(%var_5454, dtype="uint8") /* ty=uint8 */;
    %731 = cast(meta[relay.Constant][39] /* ty=Tensor[(1568), uint8] */, dtype="uint8") /* ty=Tensor[(1568), uint8] */;
    %732 = reshape(%730, newshape=[]) /* ty=uint8 */;
    %733 = reshape(%731, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
    %734 = @func_1461(%732, %733) /* ty=(Tensor[(14, 14, 8), uint8],) */;
    %735 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    %736 = %734.0;
    (%735, %736, %var_5454, meta[relay.Constant][39] /* ty=Tensor[(1568), uint8] */)
  };
  %737(%var_5458) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], uint8, Tensor[(1568), uint8]) */
}

def @func_4018() -> (Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(1820), uint8]) {
  @func_4016() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(1820), uint8]) */
}

def @func_4156() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  @func_4154() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_2748(%var_2745: Tensor[(3, 180), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) {
  %738 = cast(%var_2745, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %739 = reshape(%738, newshape=[12, 15, 3]) /* ty=Tensor[(12, 15, 3), float64] */;
  %740 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %741 = @func_1329(%739) /* ty=Tensor[(12, 15, 3), float64] */;
  (%740, %741, %var_2745)
}

def @func_4132() -> Tensor[(6, 13, 2), float64] {
  %743 = fn () -> Tensor[(6, 13, 2), float64] {
    %742 = @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */;
    %742.1
  };
  %743() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_6295() -> Tensor[(15, 3, 16), float32] {
  %747 = fn () -> Tensor[(15, 3, 16), float32] {
    %744 = @func_5872() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), uint8], Tensor[(720), uint64], Tensor[(15, 3, 16), float32], Tensor[(6, 13, 2), int8]) */;
    %745 = %744.3;
    %746 = cast(%745, dtype="float32") /* ty=Tensor[(15, 3, 16), float32] */;
    cos(%746) /* ty=Tensor[(15, 3, 16), float32] */
  };
  %747() /* ty=Tensor[(15, 3, 16), float32] */
}

def @func_7097() -> (Tensor[(6, 13, 2), float64],) {
  %750 = fn () -> (Tensor[(6, 13, 2), float64],) {
    %748 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %749 = %748.0;
    (%749,)
  };
  %750() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_9118(%var_9087: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(3136), float32], Tensor[(7, 11, 4), float32], Tensor[(8, 11, 12), bool], Tensor[(1056), bool], Tensor[(6, 13, 2), int8]) {
  %751 = cast(%var_9087, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %752 = reshape(%751, newshape=[14, 224]) /* ty=Tensor[(14, 224), float32] */;
  %753 = @func_4905(%752) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) */;
  %754 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
  %755 = cast(meta[relay.Constant][40] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %756 = cast(meta[relay.Constant][40] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %757 = cast(meta[relay.Constant][40] /* ty=Tensor[(1056), bool] */, dtype="bool") /* ty=Tensor[(1056), bool] */;
  %758 = reshape(%755, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), bool] */;
  %759 = reshape(%756, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), bool] */;
  %760 = reshape(%757, newshape=[8, 11, 12]) /* ty=Tensor[(8, 11, 12), bool] */;
  %761 = @func_5316(%758, %759, %760) /* ty=(Tensor[(8, 11, 12), bool],) */;
  %762 = @func_7242() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) */;
  %763 = @func_3286() /* ty=Tensor[(6, 13, 2), int8] */;
  %764 = %753.0;
  %765 = %754.1;
  %766 = %761.0;
  %767 = %762.1;
  (%763, %764, %var_9087, %765, %766, meta[relay.Constant][40] /* ty=Tensor[(1056), bool] */, %767)
}

def @main(%var_11368: Tensor[(6, 5), float64]) -> (Tensor[(6, 5), float64],) {
  %768 = cast(%var_11368, dtype="float64") /* ty=Tensor[(6, 5), float64] */;
  %769 = tan(%768) /* ty=Tensor[(6, 5), float64] */;
  (%769,)
}

def @func_3397() -> Tensor[(6, 13, 2), int8] {
  %771 = fn () -> Tensor[(6, 13, 2), int8] {
    %770 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
    %770.1
  };
  %771() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_9868() -> (Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) {
  %772 = @func_6980() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */;
  %773 = %772.2;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %775 = reshape(%774, newshape=[196, 16]) /* ty=Tensor[(196, 16), float32] */;
  %776 = @func_4780(%775) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */;
  %777 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
  %778 = @func_9289() /* ty=Tensor[(6, 13, 2), float64] */;
  %779 = %776.7;
  (%777, %773, %778, %779)
}

def @func_6083() -> (Tensor[(6, 13, 2), int8],) {
  %781 = fn () -> (Tensor[(6, 13, 2), int8],) {
    %780 = @func_3073() /* ty=Tensor[(6, 13, 2), int8] */;
    (%780,)
  };
  %781() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_10771() -> (Tensor[(1232), float64], Tensor[(14, 2, 13), float64]) {
  @func_10769() /* ty=(Tensor[(1232), float64], Tensor[(14, 2, 13), float64]) */
}

def @func_6876() -> (Tensor[(14, 224), float32],) {
  %784 = fn () -> (Tensor[(14, 224), float32],) {
    %782 = @func_5393() /* ty=(Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) */;
    %783 = %782.0;
    (%783,)
  };
  %784() /* ty=(Tensor[(14, 224), float32],) */
}

def @func_4398() -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %785 = cast(meta[relay.Constant][41] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %786 = reshape(%785, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %787 = @func_4289(%786) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */;
  %788 = cast(meta[relay.Constant][42] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %789 = cast(meta[relay.Constant][42] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %790 = reshape(%788, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %791 = reshape(%789, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %792 = @func_3507(%790, %791) /* ty=(Tensor[(12, 8, 3), float64],) */;
  %793 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
  %794 = %787.4;
  %795 = %792.0;
  %796 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
  %797 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  (%793, %794, meta[relay.Constant][41] /* ty=Tensor[(1232), float64] */, %795, meta[relay.Constant][42] /* ty=Tensor[(288), float64] */, %796, %797)
}

def @func_4468(%var_4465: Tensor[(3, 180), float64], %var_4466: Tensor[(156), int8], %var_4467: uint16) -> (Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) {
  @func_4463(%var_4465, %var_4466, %var_4467) /* ty=(Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) */
}

def @func_8153() -> (Tensor[(5, 8, 15), float64], Tensor[(308), float32], Tensor[(540), float64], Tensor[(308), float32], Tensor[(14, 224), float32], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %798 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %799 = cast(meta[relay.Constant][43] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %800 = cast(meta[relay.Constant][44] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %801 = reshape(%799, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %802 = reshape(%800, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %803 = @func_6656(%801, %802) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(540), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */;
  %804 = @func_6875() /* ty=(Tensor[(14, 224), float32],) */;
  %805 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %806 = %798.0;
  %807 = %803.4;
  %808 = %804.0;
  %809 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
  %810 = %805.1;
  (%806, %807, meta[relay.Constant][43] /* ty=Tensor[(540), float64] */, meta[relay.Constant][44] /* ty=Tensor[(308), float32] */, %808, %809, %810)
}

def @func_8107(%var_8106: Tensor[(1820), uint8]) -> (Tensor[(6, 13, 2), float64], Tensor[(15, 9, 4), float32], Tensor[(18, 30), float32], Tensor[(308), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), bool], Tensor[(1820), uint8], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %831 = fn (%var_8084: Tensor[(1820), uint8]) -> (Tensor[(6, 13, 2), float64], Tensor[(15, 9, 4), float32], Tensor[(18, 30), float32], Tensor[(308), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), bool], Tensor[(1820), uint8], Tensor[(3136), float32], Tensor[(3136), float32]) {
    %811 = @func_7274() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %812 = cast(meta[relay.Constant][45] /* ty=Tensor[(18, 30), float32] */, dtype="float32") /* ty=Tensor[(18, 30), float32] */;
    %813 = cast(meta[relay.Constant][46] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %814 = cast(meta[relay.Constant][47] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %815 = reshape(%812, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
    %816 = reshape(%813, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
    %817 = reshape(%814, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
    %818 = @func_1677(%815, %816, %817) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
    %819 = %811.0;
    %820 = cast(%819, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %821 = cast(%var_8084, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %822 = reshape(%820, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %823 = reshape(%821, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
    %824 = @func_3363(%822, %823) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
    %825 = cast(meta[relay.Constant][48] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %826 = reshape(%825, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %827 = @func_3561(%826) /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(12, 15, 3), float64], Tensor[(2160), uint32]) */;
    %828 = %818.3;
    %829 = %824.0;
    %830 = %827.4;
    (%819, %828, meta[relay.Constant][45] /* ty=Tensor[(18, 30), float32] */, meta[relay.Constant][46] /* ty=Tensor[(308), float32] */, meta[relay.Constant][47] /* ty=Tensor[(1232), float64] */, %829, %var_8084, %830, meta[relay.Constant][48] /* ty=Tensor[(3136), float32] */)
  };
  %831(%var_8106) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(15, 9, 4), float32], Tensor[(18, 30), float32], Tensor[(308), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), bool], Tensor[(1820), uint8], Tensor[(3136), float32], Tensor[(3136), float32]) */
}

def @func_11106() -> (Tensor[(6, 13, 2), int8],) {
  %832 = @func_8602() /* ty=Tensor[(6, 13, 2), int8] */;
  (%832,)
}

def @func_9342() -> Tensor[(6, 13, 2), float64] {
  %833 = fn () -> Tensor[(6, 13, 2), float64] {
    @func_4131() /* ty=Tensor[(6, 13, 2), float64] */
  };
  %833() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_10085(%var_10083: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32],) {
  @func_10082(%var_10083) /* ty=(Tensor[(3, 5, 14), float32],) */
}

def @func_3286() -> Tensor[(6, 13, 2), int8] {
  %834 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %834.1
}

def @func_6510(%var_6508: Tensor[(156), int8], %var_6509: int8) -> (Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) {
  %845 = fn (%var_6467: Tensor[(156), int8], %var_6489: int8) -> (Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) {
    %835 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %836 = cast(%var_6467, dtype="int8") /* ty=Tensor[(156), int8] */;
    %837 = reshape(%836, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %838 = cast(%var_6489, dtype="int8") /* ty=int8 */;
    %839 = cast(meta[relay.Constant][49] /* ty=Tensor[(99), int8] */, dtype="int8") /* ty=Tensor[(99), int8] */;
    %840 = reshape(%838, newshape=[]) /* ty=int8 */;
    %841 = reshape(%839, newshape=[11, 1, 9]) /* ty=Tensor[(11, 1, 9), int8] */;
    %842 = %835.1;
    %843 = @func_2901(%837) /* ty=Tensor[(6, 13, 2), uint8] */;
    %844 = @func_5154(%840, %841) /* ty=Tensor[(11, 1, 9), bool] */;
    (%842, %843, %var_6467, %844, %var_6489, meta[relay.Constant][49] /* ty=Tensor[(99), int8] */)
  };
  %845(%var_6508, %var_6509) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) */
}

def @func_8155() -> (Tensor[(5, 8, 15), float64], Tensor[(308), float32], Tensor[(540), float64], Tensor[(308), float32], Tensor[(14, 224), float32], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  @func_8153() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(308), float32], Tensor[(540), float64], Tensor[(308), float32], Tensor[(14, 224), float32], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_2885() -> (Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
  %861 = fn () -> (Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) {
    %846 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
    %847 = cast(%846, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    %848 = cast(meta[relay.Constant][50] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %849 = reshape(%848, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %850 = @func_125(%849) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %851 = cast(meta[relay.Constant][50] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %852 = reshape(%851, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %853 = @func_1586(%852) /* ty=(Tensor[(14, 10, 9), float32], Tensor[(7, 11, 4), float32], Tensor[(308), float32]) */;
    %854 = %853.1;
    %855 = cast(%854, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %856 = reshape(%855, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %857 = @func_125(%856) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %858 = exp(%847) /* ty=Tensor[(6, 13, 2), float64] */;
    %859 = %850.0;
    %860 = %857.0;
    (%858, %859, meta[relay.Constant][50] /* ty=Tensor[(308), float32] */, %854, %860)
  };
  %861() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_168(%var_167: Tensor[(11, 14, 8), float64]) -> (Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) {
  %872 = fn (%var_149: Tensor[(11, 14, 8), float64]) -> (Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) {
    %862 = cast(%var_149, dtype="float64") /* ty=Tensor[(11, 14, 8), float64] */;
    %863 = cast(meta[relay.Constant][51] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %864 = reshape(%863, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %865 = @func_125(%864) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %866 = %865.0;
    %867 = cast(%866, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
    %868 = reshape(%867, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float32] */;
    %869 = @func_125(%868) /* ty=(Tensor[(7, 11, 4), float32],) */;
    %870 = cos(%862) /* ty=Tensor[(11, 14, 8), float64] */;
    %871 = %869.0;
    (%870, %866, meta[relay.Constant][51] /* ty=Tensor[(308), float32] */, %871)
  };
  %872(%var_167) /* ty=(Tensor[(11, 14, 8), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32]) */
}

def @func_3012() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_5515() -> Tensor[(6, 13, 2), float64] {
  %873 = fn () -> Tensor[(6, 13, 2), float64] {
    @func_3257() /* ty=Tensor[(6, 13, 2), float64] */
  };
  %873() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_4950(%var_4948: int32, %var_4949: Tensor[(2, 11, 2), int32]) -> Tensor[(2, 11, 2), int32] {
  %876 = fn (%var_4940: int32, %var_4941: Tensor[(2, 11, 2), int32]) -> Tensor[(2, 11, 2), int32] {
    %874 = cast(%var_4940, dtype="int32") /* ty=int32 */;
    %875 = cast(%var_4941, dtype="int32") /* ty=Tensor[(2, 11, 2), int32] */;
    bitwise_or(%874, %875) /* ty=Tensor[(2, 11, 2), int32] */
  };
  %876(%var_4948, %var_4949) /* ty=Tensor[(2, 11, 2), int32] */
}

def @func_6615(%var_6614: Tensor[(6, 13, 2), float64]) -> Tensor[(6, 13, 2), float32] {
  %882 = fn (%var_6606: Tensor[(6, 13, 2), float64]) -> Tensor[(6, 13, 2), float32] {
    %877 = @func_5514() /* ty=Tensor[(6, 13, 2), float64] */;
    %878 = cast(%var_6606, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
    %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %880 = cast(%877, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    subtract(%880, %881) /* ty=Tensor[(6, 13, 2), float32] */
  };
  %882(%var_6614) /* ty=Tensor[(6, 13, 2), float32] */
}

def @func_7894(%var_7852: Tensor[(6, 13, 2), int8], %var_7860: int64, %var_7861: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), float64], Tensor[(14, 14, 8), uint8], int64, Tensor[(390), int64], Tensor[(6, 13, 2), float64]) {
  %883 = @func_6980() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */;
  %884 = %883.0;
  %885 = cast(%var_7852, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %889 = cast(%var_7860, dtype="int64") /* ty=int64 */;
  %890 = cast(%var_7861, dtype="int64") /* ty=Tensor[(390), int64] */;
  %891 = reshape(%889, newshape=[]) /* ty=int64 */;
  %892 = reshape(%890, newshape=[13, 2, 15]) /* ty=Tensor[(13, 2, 15), int64] */;
  %893 = @func_2138(%891, %892) /* ty=(Tensor[(13, 2, 15), int64], Tensor[(14, 14, 8), uint8], Tensor[(1568), uint8]) */;
  %894 = mod(%887, %888) /* ty=Tensor[(6, 13, 2), float64] */;
  %895 = %893.1;
  %896 = @func_7264() /* ty=Tensor[(6, 13, 2), float64] */;
  (%894, %895, %var_7860, %var_7861, %896)
}

def @func_9798() -> (Tensor[(6, 13, 2), int8], Tensor[(1650), uint32], Tensor[(8, 8, 14), float64], Tensor[(6, 13, 2), int8]) {
  %907 = fn () -> (Tensor[(6, 13, 2), int8], Tensor[(1650), uint32], Tensor[(8, 8, 14), float64], Tensor[(6, 13, 2), int8]) {
    %897 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %898 = cast(meta[relay.Constant][52] /* ty=Tensor[(1650), uint32] */, dtype="uint32") /* ty=Tensor[(1650), uint32] */;
    %899 = reshape(%898, newshape=[5, 330]) /* ty=Tensor[(5, 330), uint32] */;
    %900 = @func_8671(%899) /* ty=(Tensor[(14, 2, 13), float32], Tensor[(8, 8, 14), int16], Tensor[(10, 15, 11), uint32], Tensor[(5, 330), uint32], Tensor[(448, 2), float64]) */;
    %901 = %900.1;
    %902 = cast(%901, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
    %903 = @func_6980() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), float64]) */;
    %904 = %897.5;
    %905 = cos(%902) /* ty=Tensor[(8, 8, 14), float64] */;
    %906 = %903.0;
    (%904, meta[relay.Constant][52] /* ty=Tensor[(1650), uint32] */, %905, %906)
  };
  %907() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(1650), uint32], Tensor[(8, 8, 14), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_6660(%var_6658: Tensor[(540), float64], %var_6659: Tensor[(308), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(540), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) {
  @func_6656(%var_6658, %var_6659) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(540), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */
}

def @func_11068(%var_11024: Tensor[(10, 6, 6), float64]) -> (Tensor[(10, 6, 6), float64], Tensor[(3, 180), float64], Tensor[(540), float64], int8) {
  %908 = cast(9.14904f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %909 = cast(%var_11024, dtype="float64") /* ty=Tensor[(10, 6, 6), float64] */;
  %910 = cast(meta[relay.Constant][53] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %911 = reshape(%910, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %912 = @func_2748(%911) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %913 = cast(9.14904f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
  %914 = reshape(%913, newshape=[]) /* ty=int8 */;
  %915 = @func_10992(%914) /* ty=(Tensor[(288), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], int8) */;
  %916 = divide(%908, %909) /* ty=Tensor[(10, 6, 6), float64] */;
  %917 = %912.2;
  %918 = %915.3;
  (%916, %917, meta[relay.Constant][53] /* ty=Tensor[(540), float64] */, %918)
}

def @func_6775() -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8]) {
  %919 = @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */;
  %920 = @func_4154() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %921 = %919.1;
  %922 = %920.0;
  (%921, %922)
}

def @func_9586() -> (Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) {
  %923 = cast(meta[relay.Constant][54] /* ty=Tensor[(182, 10), uint8] */, dtype="uint8") /* ty=Tensor[(182, 10), uint8] */;
  %924 = cast(meta[relay.Constant][55] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %925 = cast(meta[relay.Constant][56] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %926 = reshape(%923, newshape=[7, 260]) /* ty=Tensor[(7, 260), uint8] */;
  %927 = reshape(%924, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %928 = reshape(%925, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %929 = @func_2582(%926, %927, %928) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(7, 260), uint8], Tensor[(15, 9, 4), float32], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), int8]) */;
  %930 = @func_7070() /* ty=Tensor[(6, 13, 2), float32] */;
  %931 = %929.5;
  %932 = @func_9341() /* ty=Tensor[(6, 13, 2), float64] */;
  (%930, %931, meta[relay.Constant][54] /* ty=Tensor[(182, 10), uint8] */, meta[relay.Constant][55] /* ty=Tensor[(540), float32] */, meta[relay.Constant][56] /* ty=Tensor[(1232), float64] */, %932)
}

def @func_10608() -> (Tensor[(6, 13, 2), float32],) {
  @func_10606() /* ty=(Tensor[(6, 13, 2), float32],) */
}

def @func_10828() -> (Tensor[(6, 13, 2), float64],) {
  %933 = @func_9173() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %934 = %933.0;
  (%934,)
}

def @func_10046(%var_10018: Tensor[(270, 2), float64], %var_10019: uint16, %var_10038: Tensor[(3136), float32]) -> (Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(270, 2), float64], uint16, Tensor[(3136), bool], Tensor[(6, 13, 2), float64]) {
  %935 = @func_9586() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) */;
  %936 = cast(%var_10018, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
  %937 = @func_4131() /* ty=Tensor[(6, 13, 2), float64] */;
  %938 = cast(%937, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %939 = cast(%var_10019, dtype="uint16") /* ty=uint16 */;
  %940 = reshape(%936, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %941 = reshape(%938, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %942 = reshape(%939, newshape=[]) /* ty=uint16 */;
  %943 = @func_4463(%940, %941, %942) /* ty=(Tensor[(3, 180), uint32], Tensor[(308), float32], Tensor[(156), int8], Tensor[(3136), float32], Tensor[(3, 180), bool], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64]) */;
  %944 = %943.3;
  %945 = cast(%var_10038, dtype="bool") /* ty=Tensor[(3136), bool] */;
  %946 = shape_of(%944, dtype="int32") /* ty=Tensor[(1), int32] */;
  %947 = cast(%944, dtype="bool") /* ty=Tensor[(3136), bool] */;
  %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?), bool] */;
  %949 = @func_9173() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %950 = %935.1;
  %951 = logical_or(%947, %948) /* ty=Tensor[(3136), bool] */;
  %952 = %949.0;
  (%937, %950, %var_10018, %var_10019, %951, %952)
}

def @func_7412(%var_7411: Tensor[(2080), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(120), float64]) {
  %960 = fn (%var_7402: Tensor[(2080), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(120), float64]) {
    %953 = cast(%var_7402, dtype="float64") /* ty=Tensor[(2080), float64] */;
    %954 = cast(meta[relay.Constant][57] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %955 = reshape(%953, newshape=[13, 16, 10]) /* ty=Tensor[(13, 16, 10), float64] */;
    %956 = reshape(%954, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %957 = @func_5948(%955, %956) /* ty=(Tensor[(13, 16, 10), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(5, 8, 15), float64], Tensor[(2, 15, 4), float64], Tensor[(120), float64], Tensor[(6, 13, 2), int8], Tensor[(13, 16, 10), float32]) */;
    %958 = @func_6117() /* ty=Tensor[(6, 13, 2), float64] */;
    %959 = %957.2;
    (%958, %959, %var_7402, meta[relay.Constant][57] /* ty=Tensor[(120), float64] */)
  };
  %960(%var_7411) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), uint8], Tensor[(2080), float64], Tensor[(120), float64]) */
}

def @func_2903(%var_2902: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint8] {
  %966 = fn (%var_2896: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint8] {
    %961 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    %962 = cast(%var_2896, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
    %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(3), int32] */;
    %964 = cast(%961, dtype="uint8") /* ty=Tensor[(6, 13, 2), uint8] */;
    %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    multiply(%964, %965) /* ty=Tensor[(6, 13, 2), uint8] */
  };
  %966(%var_2902) /* ty=Tensor[(6, 13, 2), uint8] */
}

def @func_3258() -> Tensor[(6, 13, 2), float64] {
  %969 = fn () -> Tensor[(6, 13, 2), float64] {
    %967 = @func_2281() /* ty=Tensor[(6, 13, 2), int8] */;
    %968 = cast(%967, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    asinh(%968) /* ty=Tensor[(6, 13, 2), float64] */
  };
  %969() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_8931(%var_8929: uint8, %var_8930: Tensor[(7, 1), uint8]) -> (Tensor[(7, 1), uint8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %979 = fn (%var_8889: uint8, %var_8890: Tensor[(7, 1), uint8]) -> (Tensor[(7, 1), uint8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
    %970 = cast(%var_8889, dtype="uint8") /* ty=uint8 */;
    %971 = cast(%var_8890, dtype="uint8") /* ty=Tensor[(7, 1), uint8] */;
    %972 = @func_6793() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %973 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
    %974 = @func_6327() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %975 = maximum(%970, %971) /* ty=Tensor[(7, 1), uint8] */;
    %976 = %972.0;
    %977 = %973.0;
    %978 = %974.0;
    (%975, %976, %977, %978)
  };
  %979(%var_8929, %var_8930) /* ty=(Tensor[(7, 1), uint8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_3686() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(1820), uint8], Tensor[(1820), uint8]) {
  %980 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %981 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
  %982 = %980.0;
  %983 = cast(%982, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %984 = reshape(%983, newshape=[3, 180]) /* ty=Tensor[(3, 180), float64] */;
  %985 = @func_2748(%984) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64]) */;
  %986 = %981.1;
  %987 = cast(%986, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
  %988 = cast(meta[relay.Constant][58] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %989 = reshape(%987, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
  %990 = reshape(%988, newshape=[1820]) /* ty=Tensor[(1820), uint8] */;
  %991 = @func_3363(%989, %990) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(6, 13, 2), int64], Tensor[(10, 13, 14), float64], Tensor[(1820), uint8]) */;
  %992 = %985.2;
  %993 = %991.3;
  (%982, %986, %992, %993, meta[relay.Constant][58] /* ty=Tensor[(1820), uint8] */)
}

def @func_2824() -> Tensor[(6, 13, 2), int8] {
  @func_2822() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_9174() -> (Tensor[(6, 13, 2), float64],) {
  %995 = fn () -> (Tensor[(6, 13, 2), float64],) {
    %994 = @func_7743() /* ty=Tensor[(6, 13, 2), float64] */;
    (%994,)
  };
  %995() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_3419(%var_3417: uint16) -> Tensor[(14, 2, 13), float32] {
  @func_3416(%var_3417) /* ty=Tensor[(14, 2, 13), float32] */
}

def @func_7899(%var_7896: Tensor[(6, 13, 2), int8], %var_7897: int64, %var_7898: Tensor[(390), int64]) -> (Tensor[(6, 13, 2), float64], Tensor[(14, 14, 8), uint8], int64, Tensor[(390), int64], Tensor[(6, 13, 2), float64]) {
  @func_7894(%var_7896, %var_7897, %var_7898) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(14, 14, 8), uint8], int64, Tensor[(390), int64], Tensor[(6, 13, 2), float64]) */
}

def @func_9321() -> Tensor[(288), float64] {
  %997 = fn () -> Tensor[(288), float64] {
    %996 = @func_6377() /* ty=(Tensor[(288), float64],) */;
    %996.0
  };
  %997() /* ty=Tensor[(288), float64] */
}

def @func_11360() -> (Tensor[(6, 13, 2), int8],) {
  %998 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
  (%998,)
}

def @func_4179() -> (Tensor[(6, 13, 2), int8],) {
  @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_4291(%var_4290: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) {
  %1010 = fn (%var_4277: Tensor[(1232), float64]) -> (Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) {
    %999 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %1000 = %999.2;
    %1001 = cast(%1000, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
    %1002 = cast(meta[relay.Constant][59] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %1003 = cast(%var_4277, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1004 = reshape(%1001, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
    %1005 = reshape(%1002, newshape=[154, 2]) /* ty=Tensor[(154, 2), float32] */;
    %1006 = reshape(%1003, newshape=[4, 308]) /* ty=Tensor[(4, 308), float64] */;
    %1007 = @func_1677(%1004, %1005, %1006) /* ty=(Tensor[(7, 11, 4), float32], Tensor[(154, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(15, 9, 4), float32], Tensor[(11, 14, 8), float64], Tensor[(4, 308), float64], Tensor[(14, 10, 9), float32]) */;
    %1008 = @func_3755() /* ty=Tensor[(6, 13, 2), float64] */;
    %1009 = %1007.6;
    (%1008, %1000, %1009, meta[relay.Constant][59] /* ty=Tensor[(308), float32] */, %var_4277)
  };
  %1010(%var_4290) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(14, 10, 9), float32], Tensor[(308), float32], Tensor[(1232), float64]) */
}

def @func_3229() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) {
  %1015 = fn () -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) {
    %1011 = @func_3181() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */;
    %1012 = @func_2884() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(7, 11, 4), float32], Tensor[(308), float32], Tensor[(7, 11, 4), float32], Tensor[(7, 11, 4), float32]) */;
    %1013 = %1011.0;
    %1014 = %1012.0;
    (%1013, %1014)
  };
  %1015() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) */
}

def @func_10908() -> (Tensor[(6, 13, 2), bool],) {
  @func_10906() /* ty=(Tensor[(6, 13, 2), bool],) */
}

def @func_7266() -> Tensor[(6, 13, 2), float64] {
  @func_7264() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_8433() -> (Tensor[(6, 13, 2), float64],) {
  %1016 = @func_5807() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %1017 = %1016.0;
  (%1017,)
}

def @func_10082(%var_10078: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32],) {
  %1018 = cast(%var_10078, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %1019 = cosh(%1018) /* ty=Tensor[(3, 5, 14), float32] */;
  (%1019,)
}

def @func_5394() -> (Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) {
  %1033 = fn () -> (Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) {
    %1020 = cast(meta[relay.Constant][60] /* ty=Tensor[(392, 8), float32] */, dtype="float32") /* ty=Tensor[(392, 8), float32] */;
    %1021 = reshape(%1020, newshape=[14, 224]) /* ty=Tensor[(14, 224), float32] */;
    %1022 = @func_4905(%1021) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 10, 9), float32], Tensor[(14, 224), float32]) */;
    %1023 = @func_4177() /* ty=(Tensor[(6, 13, 2), int8],) */;
    %1024 = %1023.0;
    %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(6, 13, 2), float32] */;
    %1026 = asin(%1025) /* ty=Tensor[(6, 13, 2), float32] */;
    %1027 = cast(%1024, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1029 = cast(%1026, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1031 = %1022.2;
    %1032 = floor_mod(%1029, %1030) /* ty=Tensor[(6, 13, 2), float64] */;
    (%1031, meta[relay.Constant][60] /* ty=Tensor[(392, 8), float32] */, %1032)
  };
  %1033() /* ty=(Tensor[(14, 224), float32], Tensor[(392, 8), float32], Tensor[(6, 13, 2), float64]) */
}

def @func_6379() -> (Tensor[(288), float64],) {
  @func_6377() /* ty=(Tensor[(288), float64],) */
}

def @func_3209(%var_3207: Tensor[(15, 3, 16), uint64], %var_3208: Tensor[(15, 3, 16), uint64]) -> Tensor[(15, 3, 16), uint64] {
  %1038 = fn (%var_3195: Tensor[(15, 3, 16), uint64], %var_3196: Tensor[(15, 3, 16), uint64]) -> Tensor[(15, 3, 16), uint64] {
    %1034 = cast(%var_3196, dtype="uint64") /* ty=Tensor[(15, 3, 16), uint64] */;
    %1035 = shape_of(%var_3195, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1036 = cast(%var_3195, dtype="uint64") /* ty=Tensor[(15, 3, 16), uint64] */;
    %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%1036, %1037) /* ty=Tensor[(15, 3, 16), uint64] */
  };
  %1038(%var_3207, %var_3208) /* ty=Tensor[(15, 3, 16), uint64] */
}

def @func_5075() -> Tensor[(6, 13, 2), int8] {
  @func_5073() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_6396() -> Tensor[(5, 8, 15), float64] {
  %1040 = fn () -> Tensor[(5, 8, 15), float64] {
    %1039 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
    %1039.0
  };
  %1040() /* ty=Tensor[(5, 8, 15), float64] */
}

def @func_4016() -> (Tensor[(6, 13, 2), float64], Tensor[(308), float32], Tensor[(1820), uint8]) {
  %1041 = cast(meta[relay.Constant][61] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %1042 = cast(meta[relay.Constant][61] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %1043 = reshape(%1041, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %1044 = reshape(%1042, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
  %1045 = @func_1800(%1043, %1044) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
  %1046 = @func_3257() /* ty=Tensor[(6, 13, 2), float64] */;
  %1047 = %1045.0;
  (%1046, %1047, meta[relay.Constant][61] /* ty=Tensor[(1820), uint8] */)
}

def @func_5808() -> (Tensor[(6, 13, 2), float64],) {
  %1049 = fn () -> (Tensor[(6, 13, 2), float64],) {
    %1048 = @func_5682() /* ty=Tensor[(6, 13, 2), float64] */;
    (%1048,)
  };
  %1049() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_8475() -> (Tensor[(6, 13, 2), int8],) {
  %1051 = fn () -> (Tensor[(6, 13, 2), int8],) {
    %1050 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
    (%1050,)
  };
  %1051() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_5437() -> (Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) {
  %1052 = @func_3446() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(14, 2, 13), float32], uint16) */;
  %1053 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
  %1054 = %1052.1;
  %1055 = %1053.0;
  (%1054, %1055)
}

def @func_9981(%var_9980: Tensor[(144), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(144), float64]) {
  %1061 = fn (%var_9962: Tensor[(144), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(144), float64]) {
    %1056 = cast(%var_9962, dtype="float64") /* ty=Tensor[(144), float64] */;
    %1057 = reshape(%1056, newshape=[4, 12, 3]) /* ty=Tensor[(4, 12, 3), float64] */;
    %1058 = @func_6550(%1057) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */;
    %1059 = @func_8845() /* ty=Tensor[(6, 13, 2), int8] */;
    %1060 = %1058.2;
    (%1059, %1060, %var_9962)
  };
  %1061(%var_9980) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(3, 180), float64], Tensor[(144), float64]) */
}

def @func_6552(%var_6551: Tensor[(4, 12, 3), float64]) -> (Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) {
  %1070 = fn (%var_6512: Tensor[(4, 12, 3), float64]) -> (Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) {
    %1062 = cast(%var_6512, dtype="float64") /* ty=Tensor[(4, 12, 3), float64] */;
    %1063 = @func_3228() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), float64]) */;
    %1064 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %1065 = cast(%var_6512, dtype="float32") /* ty=Tensor[(4, 12, 3), float32] */;
    %1066 = sin(%1062) /* ty=Tensor[(4, 12, 3), float64] */;
    %1067 = %1063.1;
    %1068 = %1064.2;
    %1069 = sigmoid(%1065) /* ty=Tensor[(4, 12, 3), float32] */;
    (%1066, %1067, %1068, %1069)
  };
  %1070(%var_6551) /* ty=(Tensor[(4, 12, 3), float64], Tensor[(6, 13, 2), float64], Tensor[(3, 180), float64], Tensor[(4, 12, 3), float32]) */
}

def @func_8385() -> Tensor[(6, 13, 2), int8] {
  %1072 = fn () -> Tensor[(6, 13, 2), int8] {
    %1071 = @func_8153() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(308), float32], Tensor[(540), float64], Tensor[(308), float32], Tensor[(14, 224), float32], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %1071.5
  };
  %1072() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_4208(%var_4206: Tensor[(1820), uint8], %var_4207: uint16) -> (Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1820), uint8], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), int8]) {
  %1084 = fn (%var_4187: Tensor[(1820), uint8], %var_4194: uint16) -> (Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1820), uint8], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), int8]) {
    %1073 = cast(%var_4187, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %1074 = cast(%var_4187, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %1075 = reshape(%1073, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
    %1076 = reshape(%1074, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
    %1077 = @func_1800(%1075, %1076) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
    %1078 = cast(%var_4194, dtype="uint16") /* ty=uint16 */;
    %1079 = reshape(%1078, newshape=[]) /* ty=uint16 */;
    %1080 = @func_3396() /* ty=Tensor[(6, 13, 2), int8] */;
    %1081 = %1077.0;
    %1082 = @func_3416(%1079) /* ty=Tensor[(14, 2, 13), float32] */;
    %1083 = @func_3012() /* ty=Tensor[(6, 13, 2), int8] */;
    (%1080, %1081, %var_4187, %1082, %var_4194, %1083)
  };
  %1084(%var_4206, %var_4207) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(308), float32], Tensor[(1820), uint8], Tensor[(14, 2, 13), float32], uint16, Tensor[(6, 13, 2), int8]) */
}

def @func_9609(%var_9605: Tensor[(4, 16, 11), int8], %var_9606: Tensor[(4, 16, 11), int8], %var_9607: Tensor[(156), int8], %var_9608: int64) -> (Tensor[(4, 16, 11), int8], int64, Tensor[(156), int8], int64, Tensor[(390), int64]) {
  %1098 = fn (%var_9592: Tensor[(4, 16, 11), int8], %var_9593: Tensor[(4, 16, 11), int8], %var_9599: Tensor[(156), int8], %var_9600: int64) -> (Tensor[(4, 16, 11), int8], int64, Tensor[(156), int8], int64, Tensor[(390), int64]) {
    %1085 = cast(%var_9593, dtype="int8") /* ty=Tensor[(4, 16, 11), int8] */;
    %1086 = shape_of(%var_9592, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1087 = cast(%var_9592, dtype="int8") /* ty=Tensor[(4, 16, 11), int8] */;
    %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1089 = cast(%var_9599, dtype="int8") /* ty=Tensor[(156), int8] */;
    %1090 = cast(%var_9600, dtype="int64") /* ty=int64 */;
    %1091 = cast(meta[relay.Constant][62] /* ty=Tensor[(390), int64] */, dtype="int64") /* ty=Tensor[(390), int64] */;
    %1092 = reshape(%1089, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %1093 = reshape(%1090, newshape=[]) /* ty=int64 */;
    %1094 = reshape(%1091, newshape=[390]) /* ty=Tensor[(390), int64] */;
    %1095 = @func_7894(%1092, %1093, %1094) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(14, 14, 8), uint8], int64, Tensor[(390), int64], Tensor[(6, 13, 2), float64]) */;
    %1096 = bitwise_or(%1087, %1088) /* ty=Tensor[(4, 16, 11), int8] */;
    %1097 = %1095.2;
    (%1096, %1097, %var_9599, %var_9600, meta[relay.Constant][62] /* ty=Tensor[(390), int64] */)
  };
  %1098(%var_9605, %var_9606, %var_9607, %var_9608) /* ty=(Tensor[(4, 16, 11), int8], int64, Tensor[(156), int8], int64, Tensor[(390), int64]) */
}

def @func_9817() -> (Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) {
  @func_9815() /* ty=(Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) */
}

def @func_10994(%var_10993: int8) -> (Tensor[(288), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], int8) {
  %1107 = fn (%var_10970: int8) -> (Tensor[(288), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], int8) {
    %1099 = @func_6377() /* ty=(Tensor[(288), float64],) */;
    %1100 = cast(meta[relay.Constant][63] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
    %1101 = cast(%var_10970, dtype="int8") /* ty=int8 */;
    %1102 = reshape(%1100, newshape=[156]) /* ty=Tensor[(156), int8] */;
    %1103 = reshape(%1101, newshape=[]) /* ty=int8 */;
    %1104 = @func_6507(%1102, %1103) /* ty=(Tensor[(12, 15, 3), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], Tensor[(11, 1, 9), bool], int8, Tensor[(99), int8]) */;
    %1105 = %1099.0;
    %1106 = %1104.1;
    (%1105, %1106, meta[relay.Constant][63] /* ty=Tensor[(156), int8] */, %var_10970)
  };
  %1107(%var_10993) /* ty=(Tensor[(288), float64], Tensor[(6, 13, 2), uint8], Tensor[(156), int8], int8) */
}

def @func_7350(%var_7348: Tensor[(13, 4, 16), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(13, 4, 16), float32]) {
  @func_7347(%var_7348) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(13, 4, 16), float32]) */
}

def @func_8604() -> Tensor[(6, 13, 2), int8] {
  @func_8602() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_8709() -> (Tensor[(6, 13, 2), int8],) {
  @func_8707() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_9815() -> (Tensor[(5, 8, 15), float64], Tensor[(6, 13, 2), float64]) {
  %1108 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %1109 = @func_9586() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) */;
  %1110 = %1108.0;
  %1111 = %1109.5;
  (%1110, %1111)
}

def @func_5654(%var_5652: Tensor[(3136), float32], %var_5653: Tensor[(6, 13, 2), bool]) -> (Tensor[(6, 13, 2), float64], Tensor[(5, 8, 15), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), bool]) {
  %1127 = fn (%var_5638: Tensor[(3136), float32], %var_5646: Tensor[(6, 13, 2), bool]) -> (Tensor[(6, 13, 2), float64], Tensor[(5, 8, 15), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), bool]) {
    %1112 = @func_3819() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float32], Tensor[(7, 11, 4), float32], Tensor[(1232), float64]) */;
    %1113 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
    %1114 = %1112.1;
    %1115 = cast(%1114, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %1116 = cast(%var_5638, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1117 = reshape(%1115, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %1118 = reshape(%1116, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %1119 = @func_2682(%1117, %1118) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), bool], Tensor[(14, 10, 9), float32], Tensor[(308), float32]) */;
    %1120 = %1119.2;
    %1121 = cast(%var_5646, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
    %1122 = shape_of(%1120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1123 = cast(%1120, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
    %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1125 = %1113.0;
    %1126 = greater_equal(%1123, %1124) /* ty=Tensor[(6, 13, 2), bool] */;
    (%1114, %1125, %var_5638, %1126)
  };
  %1127(%var_5652, %var_5653) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(5, 8, 15), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), bool]) */
}

def @func_10631(%var_10623: Tensor[(2, 5, 12), bool], %var_10624: Tensor[(2, 5, 12), bool]) -> Tensor[(2, 5, 12), bool] {
  %1128 = cast(%var_10624, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %1129 = shape_of(%var_10623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1130 = cast(%var_10623, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1130, %1131) /* ty=Tensor[(2, 5, 12), bool] */
}

def @func_9722() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32]) {
  @func_9720() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8], Tensor[(7, 11, 4), float32]) */
}

def @func_5439() -> (Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) {
  @func_5437() /* ty=(Tensor[(14, 2, 13), float32], Tensor[(6, 13, 2), float64]) */
}

def @func_6716(%var_6714: Tensor[(2080), float64]) -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(2080), float64], Tensor[(120), float64], Tensor[(3, 180), float64]) {
  @func_6713(%var_6714) /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(2080), float64], Tensor[(120), float64], Tensor[(3, 180), float64]) */
}

def @func_4177() -> (Tensor[(6, 13, 2), int8],) {
  %1132 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
  (%1132,)
}

def @func_4475() -> Tensor[(288), float64] {
  %1134 = fn () -> Tensor[(288), float64] {
    %1133 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %1133.4
  };
  %1134() /* ty=Tensor[(288), float64] */
}

def @func_5788(%var_5785: Tensor[(3136), float32], %var_5786: Tensor[(1820), uint8], %var_5787: uint16) -> (Tensor[(6, 13, 2), float64], Tensor[(196, 16), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), uint8], Tensor[(1820), uint8], Tensor[(196, 16), float32], Tensor[(6, 13, 2), int8], Tensor[(10, 13, 14), float32], Tensor[(14, 2, 13), float32], uint16) {
  %1163 = fn (%var_5738: Tensor[(3136), float32], %var_5760: Tensor[(1820), uint8], %var_5777: uint16) -> (Tensor[(6, 13, 2), float64], Tensor[(196, 16), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), uint8], Tensor[(1820), uint8], Tensor[(196, 16), float32], Tensor[(6, 13, 2), int8], Tensor[(10, 13, 14), float32], Tensor[(14, 2, 13), float32], uint16) {
    %1135 = @func_3637() /* ty=(Tensor[(6, 13, 2), float64],) */;
    %1136 = %1135.0;
    %1137 = cast(%1136, dtype="float64") /* ty=Tensor[(6, 13, 2), float64] */;
    %1138 = cast(%var_5738, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1139 = reshape(%1138, newshape=[196, 16]) /* ty=Tensor[(196, 16), float32] */;
    %1140 = @func_4780(%1139) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */;
    %1141 = cos(%1137) /* ty=Tensor[(6, 13, 2), float64] */;
    %1142 = cast(%1141, dtype="int8") /* ty=Tensor[(6, 13, 2), int8] */;
    %1143 = reshape(%1142, newshape=[6, 13, 2]) /* ty=Tensor[(6, 13, 2), int8] */;
    %1144 = %1140.1;
    %1145 = cast(%1144, dtype="float32") /* ty=Tensor[(196, 16), float32] */;
    %1146 = reshape(%1145, newshape=[196, 16]) /* ty=Tensor[(196, 16), float32] */;
    %1147 = @func_4780(%1146) /* ty=(Tensor[(16, 14, 14), float32], Tensor[(196, 16), float32], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), float64], Tensor[(6, 13, 2), int64], Tensor[(1820), uint8], Tensor[(1232), float64], Tensor[(5, 60), float64]) */;
    %1148 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %1149 = cast(%var_5760, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %1150 = cast(%var_5760, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %1151 = reshape(%1149, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
    %1152 = reshape(%1150, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), uint8] */;
    %1153 = @func_1800(%1151, %1152) /* ty=(Tensor[(308), float32], Tensor[(308), float32], Tensor[(10, 13, 14), float64]) */;
    %1154 = %1153.2;
    %1155 = cast(%1154, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
    %1156 = cast(%var_5777, dtype="uint16") /* ty=uint16 */;
    %1157 = reshape(%1156, newshape=[]) /* ty=uint16 */;
    %1158 = @func_2901(%1143) /* ty=Tensor[(6, 13, 2), uint8] */;
    %1159 = %1147.1;
    %1160 = %1148.1;
    %1161 = tan(%1155) /* ty=Tensor[(10, 13, 14), float32] */;
    %1162 = @func_3416(%1157) /* ty=Tensor[(14, 2, 13), float32] */;
    (%1141, %1144, %var_5738, %1158, %var_5760, %1159, %1160, %1161, %1162, %var_5777)
  };
  %1163(%var_5785, %var_5786, %var_5787) /* ty=(Tensor[(6, 13, 2), float64], Tensor[(196, 16), float32], Tensor[(3136), float32], Tensor[(6, 13, 2), uint8], Tensor[(1820), uint8], Tensor[(196, 16), float32], Tensor[(6, 13, 2), int8], Tensor[(10, 13, 14), float32], Tensor[(14, 2, 13), float32], uint16) */
}

def @func_7743() -> Tensor[(6, 13, 2), float64] {
  @func_6117() /* ty=Tensor[(6, 13, 2), float64] */
}

def @func_10369() -> (Tensor[(6, 13, 2), float64],) {
  @func_10367() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_10572() -> (Tensor[(6, 13, 2), int8],) {
  %1164 = @func_4154() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %1165 = %1164.1;
  (%1165,)
}

def @func_1331(%var_1330: Tensor[(12, 15, 3), float64]) -> Tensor[(12, 15, 3), float64] {
  %1167 = fn (%var_1322: Tensor[(12, 15, 3), float64]) -> Tensor[(12, 15, 3), float64] {
    %1166 = cast(%var_1322, dtype="float64") /* ty=Tensor[(12, 15, 3), float64] */;
    sin(%1166) /* ty=Tensor[(12, 15, 3), float64] */
  };
  %1167(%var_1330) /* ty=Tensor[(12, 15, 3), float64] */
}

def @func_6328() -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
  %1172 = fn () -> (Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) {
    %1168 = @func_2815() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %1169 = @func_4526() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
    %1170 = %1168.1;
    %1171 = %1169.1;
    (%1170, %1171)
  };
  %1172() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */
}

def @func_9473(%var_9471: Tensor[(6, 13, 2), int8], %var_9472: Tensor[(12), uint64]) -> (Tensor[(6, 13, 2), bool], Tensor[(1, 4, 3), uint64], uint64, Tensor[(12), uint64]) {
  %1185 = fn (%var_9446: Tensor[(6, 13, 2), int8], %var_9466: Tensor[(12), uint64]) -> (Tensor[(6, 13, 2), bool], Tensor[(1, 4, 3), uint64], uint64, Tensor[(12), uint64]) {
    %1173 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    %1174 = cast(%var_9446, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
    %1175 = shape_of(%1173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1176 = cast(%1173, dtype="bool") /* ty=Tensor[(6, 13, 2), bool] */;
    %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1178 = cast(meta[relay.Constant][64] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1179 = cast(%var_9466, dtype="uint64") /* ty=Tensor[(12), uint64] */;
    %1180 = reshape(%1178, newshape=[]) /* ty=uint64 */;
    %1181 = reshape(%1179, newshape=[1, 4, 3]) /* ty=Tensor[(1, 4, 3), uint64] */;
    %1182 = @func_3062(%1180, %1181) /* ty=(Tensor[(1, 4, 3), uint64], Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], Tensor[(8, 196), uint8]) */;
    %1183 = logical_or(%1176, %1177) /* ty=Tensor[(6, 13, 2), bool] */;
    %1184 = %1182.0;
    (%1183, %1184, meta[relay.Constant][64] /* ty=uint64 */, %var_9466)
  };
  %1185(%var_9471, %var_9472) /* ty=(Tensor[(6, 13, 2), bool], Tensor[(1, 4, 3), uint64], uint64, Tensor[(12), uint64]) */
}

def @func_4852() -> Tensor[(6, 13, 2), int8] {
  @func_2281() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_11362() -> (Tensor[(6, 13, 2), int8],) {
  @func_11360() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_4246(%var_4245: Tensor[(2, 15, 4), float64]) -> Tensor[(2, 15, 4), float64] {
  %1187 = fn (%var_4237: Tensor[(2, 15, 4), float64]) -> Tensor[(2, 15, 4), float64] {
    %1186 = cast(%var_4237, dtype="float64") /* ty=Tensor[(2, 15, 4), float64] */;
    sinh(%1186) /* ty=Tensor[(2, 15, 4), float64] */
  };
  %1187(%var_4245) /* ty=Tensor[(2, 15, 4), float64] */
}

def @func_8863() -> (Tensor[(6, 13, 2), int8],) {
  @func_8861() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_9380() -> (Tensor[(6, 13, 2), float64],) {
  %1188 = @func_7743() /* ty=Tensor[(6, 13, 2), float64] */;
  (%1188,)
}

def @func_9870() -> (Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) {
  @func_9868() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(3136), float32], Tensor[(6, 13, 2), float64], Tensor[(5, 60), float64]) */
}

def @func_3182() -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) {
  %1192 = fn () -> (Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) {
    %1189 = @func_2716() /* ty=(Tensor[(6, 13, 2), int8], Tensor[(12, 15, 3), float64], Tensor[(3, 180), float64], Tensor[(12, 15, 3), float64]) */;
    %1190 = %1189.2;
    %1191 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    (%1190, %1191)
  };
  %1192() /* ty=(Tensor[(3, 180), float64], Tensor[(6, 13, 2), int8]) */
}

def @func_4974() -> (Tensor[(6, 13, 2), float32],) {
  @func_4972() /* ty=(Tensor[(6, 13, 2), float32],) */
}

def @func_4335() -> (Tensor[(5, 8, 15), float32],) {
  %1193 = @func_4038() /* ty=(Tensor[(5, 8, 15), float64],) */;
  %1194 = %1193.0;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %1196 = log10(%1195) /* ty=Tensor[(5, 8, 15), float32] */;
  (%1196,)
}

def @func_8861() -> (Tensor[(6, 13, 2), int8],) {
  %1197 = @func_8474() /* ty=(Tensor[(6, 13, 2), int8],) */;
  %1198 = %1197.0;
  (%1198,)
}

def @func_9588() -> (Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) {
  @func_9586() /* ty=(Tensor[(6, 13, 2), float32], Tensor[(1232), float64], Tensor[(182, 10), uint8], Tensor[(540), float32], Tensor[(1232), float64], Tensor[(6, 13, 2), float64]) */
}

def @func_6377() -> (Tensor[(288), float64],) {
  %1199 = @func_4398() /* ty=(Tensor[(6, 13, 2), float64], Tensor[(1232), float64], Tensor[(1232), float64], Tensor[(12, 8, 3), float64], Tensor[(288), float64], Tensor[(6, 13, 2), int8], Tensor[(6, 13, 2), int8]) */;
  %1200 = %1199.4;
  (%1200,)
}

def @func_10574() -> (Tensor[(6, 13, 2), int8],) {
  @func_10572() /* ty=(Tensor[(6, 13, 2), int8],) */
}

def @func_7190(%var_7189: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint32] {
  %1206 = fn (%var_7180: Tensor[(6, 13, 2), int8]) -> Tensor[(6, 13, 2), uint32] {
    %1201 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    %1202 = cast(%var_7180, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
    %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1204 = cast(%1201, dtype="uint32") /* ty=Tensor[(6, 13, 2), uint32] */;
    %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_and(%1204, %1205) /* ty=Tensor[(6, 13, 2), uint32] */
  };
  %1206(%var_7189) /* ty=Tensor[(6, 13, 2), uint32] */
}

def @func_10830() -> (Tensor[(6, 13, 2), float64],) {
  @func_10828() /* ty=(Tensor[(6, 13, 2), float64],) */
}

def @func_10186() -> Tensor[(6, 13, 2), int8] {
  @func_4852() /* ty=Tensor[(6, 13, 2), int8] */
}

def @func_3065(%var_3063: uint64, %var_3064: Tensor[(1, 4, 3), uint64]) -> (Tensor[(1, 4, 3), uint64], Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], Tensor[(8, 196), uint8]) {
  %1217 = fn (%var_3046: uint64, %var_3047: Tensor[(1, 4, 3), uint64]) -> (Tensor[(1, 4, 3), uint64], Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], Tensor[(8, 196), uint8]) {
    %1207 = cast(%var_3046, dtype="uint64") /* ty=uint64 */;
    %1208 = cast(%var_3047, dtype="uint64") /* ty=Tensor[(1, 4, 3), uint64] */;
    %1209 = cast(%var_3046, dtype="uint8") /* ty=uint8 */;
    %1210 = cast(meta[relay.Constant][65] /* ty=Tensor[(8, 196), uint8] */, dtype="uint8") /* ty=Tensor[(8, 196), uint8] */;
    %1211 = reshape(%1209, newshape=[]) /* ty=uint8 */;
    %1212 = reshape(%1210, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), uint8] */;
    %1213 = @func_1461(%1211, %1212) /* ty=(Tensor[(14, 14, 8), uint8],) */;
    %1214 = logical_xor(%1207, %1208) /* ty=Tensor[(1, 4, 3), uint64] */;
    %1215 = @func_2822() /* ty=Tensor[(6, 13, 2), int8] */;
    %1216 = %1213.0;
    (%1214, %1215, %1216, meta[relay.Constant][65] /* ty=Tensor[(8, 196), uint8] */)
  };
  %1217(%var_3063, %var_3064) /* ty=(Tensor[(1, 4, 3), uint64], Tensor[(6, 13, 2), int8], Tensor[(14, 14, 8), uint8], Tensor[(8, 196), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen621/build/output.py:3613: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen621/build/output.py", line 3618, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(30) tvmgen_default_fused_tan_kernel0(double* __restrict__ T_tan, double* __restrict__ placeholder) {
  T_tan[(((int)threadIdx.x))] = tan(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


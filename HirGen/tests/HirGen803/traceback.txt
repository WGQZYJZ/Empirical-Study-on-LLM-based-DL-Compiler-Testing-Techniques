==========mod==========
#[version = "0.0.5"]
def @func_391(%var_382: Tensor[(11, 11, 1), float64]) -> (Tensor[(11, 11, 1), float64],) {
  %0 = cast(%var_382, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
  %1 = atan(%0) /* ty=Tensor[(11, 11, 1), float64] */;
  (%1,)
}

def @func_9000() -> Tensor[(10, 14, 1), bool] {
  @func_3066() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_12662() -> (Tensor[(10, 14, 1), bool],) {
  %2 = @func_8982() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 84), bool]) */;
  %3 = %2.0;
  (%3,)
}

def @func_10730() -> (Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %4 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %5 = @func_10671() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %6 = @func_9522() /* ty=Tensor[(10, 14, 3), bool] */;
  %7 = %4.0;
  %8 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  %9 = %5.0;
  (%6, %7, %8, %9)
}

def @func_13061() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %10 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %11 = @func_11936() /* ty=Tensor[(10, 14, 1), bool] */;
  (%10, %11)
}

def @func_11430() -> Tensor[(10, 14, 1), bool] {
  %12 = @func_4519() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %12.1
}

def @func_4519() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %13 = @func_4220() /* ty=(Tensor[(16, 7, 2), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %14 = %13.2;
  %15 = @func_2395() /* ty=Tensor[(10, 14, 1), bool] */;
  (%14, %15)
}

def @func_10345() -> Tensor[(5, 84), float32] {
  %16 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(5, 84), float32] */;
  atan(%17) /* ty=Tensor[(5, 84), float32] */
}

def @func_5345() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) {
  %18 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %19 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  %20 = cast(%19, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 14, 15), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
  %22 = %18.1;
  %23 = less(%20, %21) /* ty=Tensor[(10, 14, 15), bool] */;
  %24 = @func_3359() /* ty=Tensor[(10, 14, 1), float32] */;
  (%22, %23, %24)
}

def @func_12555(%var_12516: Tensor[(4, 208), int8]) -> (Tensor[(10, 14, ?), int64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(420), bool], Tensor[(4, 208), int8], Tensor[(13, 16, 4), float32], Tensor[(1056, 2), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), bool], Tensor[(10, 14, 1), bool]) {
  %25 = @func_11647() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %26 = @func_10564() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
  %28 = reshape(%27, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), bool] */;
  %29 = @func_1774(%28) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */;
  %30 = cast(%var_12516, dtype="int8") /* ty=Tensor[(4, 208), int8] */;
  %31 = cast(%var_12516, dtype="int8") /* ty=Tensor[(4, 208), int8] */;
  %32 = reshape(%30, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int8] */;
  %33 = reshape(%31, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int8] */;
  %34 = @func_11316(%32, %33) /* ty=Tensor[(13, 16, 4), bool] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(13, 16, 4), float32] */;
  %36 = @func_11243() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 70), bool] */, dtype="bool") /* ty=Tensor[(14, 70), bool] */;
  %38 = reshape(%37, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), bool] */;
  %39 = @func_5902(%38) /* ty=(Tensor[(10, 14, 7), float32], Tensor[(121), float64]) */;
  %40 = @func_9555() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %41 = @func_7259() /* ty=Tensor[(10, 14, ?), int64] */;
  %42 = %25.0;
  %43 = %26.1;
  %44 = %29.0;
  %45 = atan(%35) /* ty=Tensor[(13, 16, 4), float32] */;
  %46 = %36.0;
  %47 = %39.0;
  %48 = %40.1;
  (%41, %42, %43, %44, meta[relay.Constant][1] /* ty=Tensor[(420), bool] */, %var_12516, %45, %46, %47, meta[relay.Constant][2] /* ty=Tensor[(14, 70), bool] */, %48)
}

def @func_7259() -> Tensor[(10, 14, ?), int64] {
  %49 = @func_6323() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) */;
  %49.1
}

def @func_12286(%var_12279: Tensor[(1, 108), float64]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 12), float64], Tensor[(1, 108), float64]) {
  %50 = @func_6774() /* ty=(Tensor[(10, 14, ?), uint8],) */;
  %51 = cast(%var_12279, dtype="float64") /* ty=Tensor[(1, 108), float64] */;
  %52 = reshape(%51, newshape=[3, 3, 12]) /* ty=Tensor[(3, 3, 12), float64] */;
  %53 = @func_12072(%52) /* ty=(Tensor[(3, 3, 12), float64],) */;
  %54 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %55 = %50.0;
  %56 = %53.0;
  (%54, %55, %56, %var_12279)
}

def @func_10044() -> Tensor[(10, 14, 1), bool] {
  %57 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %57.0
}

def @func_11672() -> (Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32]) {
  %58 = @func_10364() /* ty=Tensor[(5, 5, 16), uint32] */;
  %59 = @func_8928() /* ty=Tensor[(5, 5, 16), uint32] */;
  (%58, %59)
}

def @func_11841() -> (Tensor[(10, 14, 1), bool],) {
  %60 = @func_7987() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %61 = %60.0;
  (%61,)
}

def @func_2958(%var_2930: Tensor[(10, 14, 14), float64]) -> (Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) {
  %62 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
  %63 = %62.0;
  %64 = cast(%var_2930, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %68 = cast(%var_2930, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
  %69 = floor_divide(%66, %67) /* ty=Tensor[(10, 14, 14), float32] */;
  %70 = asin(%68) /* ty=Tensor[(10, 14, 14), float32] */;
  (%69, %70)
}

def @func_8928() -> Tensor[(5, 5, 16), uint32] {
  %71 = @func_4790() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %71.0
}

def @func_9794(%var_9789: Tensor[(9, 1, 6), int64], %var_9790: Tensor[(9, 11, 6), int64]) -> (Tensor[(9, 11, 6), bool],) {
  %72 = cast(%var_9789, dtype="bool") /* ty=Tensor[(9, 1, 6), bool] */;
  %73 = cast(%var_9790, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %74 = less(%72, %73) /* ty=Tensor[(9, 11, 6), bool] */;
  (%74,)
}

def @func_14599(%var_14520: Tensor[(5, 84), bool], %var_14581: uint32) -> (Tensor[(121), float64], Tensor[(5, 84), float64], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(10, 14, 1), bool]) {
  %75 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %76 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %77 = cast(%var_14520, dtype="uint8") /* ty=Tensor[(5, 84), uint8] */;
  %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(2), int32] */;
  %79 = cast(%76, dtype="uint8") /* ty=Tensor[(5, 84), uint8] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %81 = bitwise_or(%79, %80) /* ty=Tensor[(5, 84), uint8] */;
  %82 = cast(%81, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %83 = tan(%82) /* ty=Tensor[(5, 84), float64] */;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
  %85 = cast(%var_14581, dtype="uint32") /* ty=uint32 */;
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(400), uint32] */, dtype="uint32") /* ty=Tensor[(400), uint32] */;
  %87 = reshape(%85, newshape=[]) /* ty=uint32 */;
  %88 = reshape(%86, newshape=[400, 1]) /* ty=Tensor[(400, 1), uint32] */;
  %89 = @func_7045(%87, %88) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) */;
  %90 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %91 = %75.0;
  %92 = asinh(%84) /* ty=Tensor[(5, 84), float64] */;
  %93 = %89.3;
  %94 = %90.1;
  (%91, %92, %93, %var_14581, meta[relay.Constant][3] /* ty=Tensor[(400), uint32] */, %94)
}

def @func_13399() -> (Tensor[(10, 14, 1), float32], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %95 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %96 = @func_7884() /* ty=(Tensor[(10, 14, ?), uint8], Tensor[(10, 14, 1), bool]) */;
  %97 = @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */;
  %98 = @func_10778() /* ty=Tensor[(10, 14, 1), float32] */;
  %99 = %95.0;
  %100 = %96.1;
  %101 = %97.0;
  %102 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  (%98, %99, %100, %101, %102)
}

def @func_7552() -> Tensor[(10, 14, 7), bool] {
  %103 = @func_5809() /* ty=Tensor[(10, 14, 1), bool] */;
  %104 = cast(%103, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 14, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  less(%104, %105) /* ty=Tensor[(10, 14, 7), bool] */
}

def @func_7605() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %106 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %107 = %106.0;
  %108 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  (%107, %108)
}

def @func_2395() -> Tensor[(10, 14, 1), bool] {
  @func_1734() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_6323() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) {
  %109 = @func_5751() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %110 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %111 = %110.0;
  %112 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %113 = cast(%112, dtype="int64") /* ty=Tensor[(10, 14, 1), int64] */;
  %114 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%111, dtype="int64") /* ty=Tensor[(10, 14, 1), int64] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %117 = %109.1;
  %118 = bitwise_or(%115, %116) /* ty=Tensor[(10, 14, ?), int64] */;
  (%117, %118)
}

def @func_3359() -> Tensor[(10, 14, 1), float32] {
  %119 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %119.2
}

def @func_5809() -> Tensor[(10, 14, 1), bool] {
  %120 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %120.0
}

def @func_9354() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %121 = @func_8475() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %122 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %123 = %121.0;
  %124 = %122.0;
  (%123, %124)
}

def @func_3673() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %125 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %126 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %127 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %128 = %125.3;
  %129 = %126.2;
  %130 = %127.1;
  (%128, %129, %130)
}

def @func_1376() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %131 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %132 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %133 = %131.0;
  %134 = %132.2;
  %135 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%133, %134, %135)
}

def @func_3696() -> Tensor[(10, 14, 1), float32] {
  %136 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %136.2
}

def @func_3039() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %137 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %138 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %139 = %137.0;
  %140 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  %141 = %138.2;
  (%139, %140, %141)
}

def @func_13844() -> Tensor[(10, 14, 1), bool] {
  @func_5824() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_1478(%var_1435: uint32, %var_1436: Tensor[(5, 5, 16), uint32]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) {
  %142 = cast(%var_1435, dtype="uint32") /* ty=uint32 */;
  %143 = cast(%var_1436, dtype="uint32") /* ty=Tensor[(5, 5, 16), uint32] */;
  %144 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %145 = maximum(%142, %143) /* ty=Tensor[(5, 5, 16), uint32] */;
  %146 = %144.1;
  (%145, %146)
}

def @func_7987() -> (Tensor[(10, 14, 1), bool],) {
  %147 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %148 = %147.2;
  (%148,)
}

def @func_8285() -> (Tensor[(121), float64],) {
  %149 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %150 = %149.0;
  (%150,)
}

def @func_1774(%var_1743: Tensor[(10, 14, 3), bool]) -> (Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) {
  %151 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %152 = %151.0;
  %153 = cast(%152, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %154 = cast(%var_1743, dtype="bool") /* ty=Tensor[(10, 14, 3), bool] */;
  %155 = cast(%var_1743, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
  %156 = less_equal(%153, %154) /* ty=Tensor[(10, 14, 3), bool] */;
  %157 = erf(%155) /* ty=Tensor[(10, 14, 3), float64] */;
  (%156, %157)
}

def @func_3318() -> (Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) {
  %158 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %159 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %160 = %158.3;
  %161 = cast(%160, dtype="bool") /* ty=Tensor[(10, 14, 3), bool] */;
  %162 = reshape(%161, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), bool] */;
  %163 = @func_1774(%162) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */;
  %164 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %165 = %159.1;
  %166 = %163.1;
  %167 = %164.0;
  (%160, %165, %166, %167)
}

def @func_2034() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %168 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %169 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %170 = %168.1;
  %171 = %169.2;
  (%170, %171)
}

def @func_3792() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %172 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %173 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %174 = %172.3;
  %175 = %173.2;
  %176 = @func_3359() /* ty=Tensor[(10, 14, 1), float32] */;
  (%174, %175, %176)
}

def @func_10396() -> (Tensor[(10, 14, 1), bool],) {
  %177 = @func_4161() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) */;
  %178 = %177.1;
  (%178,)
}

def @func_14146() -> Tensor[(10, 14, 1), bool] {
  @func_3853() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_6417() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 14), int64]) {
  %179 = @func_5809() /* ty=Tensor[(10, 14, 1), bool] */;
  %180 = cast(%179, dtype="int64") /* ty=Tensor[(10, 14, 1), int64] */;
  %181 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 14, 14), bool] */, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %182 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
  %183 = logical_xor(%180, %181) /* ty=Tensor[(10, 14, 14), int64] */;
  (%182, %183)
}

def @func_4924() -> (Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %184 = cast(meta[relay.Constant][6] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %185 = cast(meta[relay.Constant][6] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %186 = reshape(%184, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %187 = reshape(%185, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %188 = @func_1540(%186, %187) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */;
  %189 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %190 = %189.2;
  %191 = cast(meta[relay.Constant][6] /* ty=Tensor[(2112), float32] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %192 = cast(%190, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %193 = divide(%191, %192) /* ty=Tensor[(10, 14, 2112), float64] */;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(10, 14, 2112), float32] */;
  %195 = cast(%190, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %196 = mod(%194, %195) /* ty=Tensor[(10, 14, 2112), float32] */;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(10, 14, 2112), float64] */;
  %198 = cast(%190, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %199 = cast(%196, dtype="float32") /* ty=Tensor[(10, 14, 2112), float32] */;
  %200 = acos(%199) /* ty=Tensor[(10, 14, 2112), float32] */;
  %201 = cast(%200, dtype="float32") /* ty=Tensor[(10, 14, 2112), float32] */;
  %202 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %203 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %204 = %188.0;
  %205 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %206 = power(%197, %198) /* ty=Tensor[(10, 14, 2112), float64] */;
  %207 = sinh(%201) /* ty=Tensor[(10, 14, 2112), float32] */;
  %208 = %202.0;
  %209 = %203.1;
  (%204, %205, %206, %207, %208, %209)
}

def @func_9609() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %210 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %211 = %210.0;
  %212 = @func_2170() /* ty=Tensor[(10, 14, 1), bool] */;
  (%211, %212)
}

def @func_14438() -> (Tensor[(121), float64], Tensor[(13, 12, 16), uint16], Tensor[(10, 14, 1), bool], Tensor[(1296), float32], Tensor[(312, 8), float32]) {
  %213 = @func_11054() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) */;
  %214 = cast(meta[relay.Constant][7] /* ty=Tensor[(312, 8), uint8] */, dtype="uint8") /* ty=Tensor[(312, 8), uint8] */;
  %215 = cast(meta[relay.Constant][7] /* ty=Tensor[(312, 8), uint8] */, dtype="uint8") /* ty=Tensor[(312, 8), uint8] */;
  %216 = reshape(%214, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %217 = reshape(%215, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %218 = @func_1683(%216, %217) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) */;
  %219 = @func_14050() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1296), float32]) */;
  %220 = cast(meta[relay.Constant][7] /* ty=Tensor[(312, 8), uint8] */, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %221 = rsqrt(%220) /* ty=Tensor[(312, 8), float32] */;
  %222 = cast(%221, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %223 = %213.2;
  %224 = %218.1;
  %225 = @func_13844() /* ty=Tensor[(10, 14, 1), bool] */;
  %226 = %219.2;
  %227 = log2(%222) /* ty=Tensor[(312, 8), float32] */;
  (%223, %224, %225, %226, %227)
}

def @func_13698() -> Tensor[(10, 14, 1), bool] {
  %228 = @func_4970() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) */;
  %228.2
}

def @func_12217() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64], Tensor[(121), float64]) {
  %229 = @func_9496() /* ty=(Tensor[(10, 14, 14), int64],) */;
  %230 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %231 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  %232 = %229.0;
  %233 = %230.0;
  (%231, %232, %233)
}

def @func_1931() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) {
  %234 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %235 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %236 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 84), bool] */, dtype="bool") /* ty=Tensor[(5, 84), bool] */;
  %237 = reshape(%236, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), bool] */;
  %238 = @func_1774(%237) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */;
  %239 = cast(meta[relay.Constant][9] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %240 = cast(meta[relay.Constant][10] /* ty=Tensor[(400), uint32] */, dtype="uint32") /* ty=Tensor[(400), uint32] */;
  %241 = reshape(%239, newshape=[]) /* ty=uint32 */;
  %242 = reshape(%240, newshape=[5, 5, 16]) /* ty=Tensor[(5, 5, 16), uint32] */;
  %243 = @func_1478(%241, %242) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
  %244 = %234.1;
  %245 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %246 = %235.2;
  %247 = %238.0;
  %248 = %243.0;
  (%244, %245, %246, %247, meta[relay.Constant][8] /* ty=Tensor[(5, 84), bool] */, %248, meta[relay.Constant][9] /* ty=uint32 */, meta[relay.Constant][10] /* ty=Tensor[(400), uint32] */)
}

def @func_5902(%var_5893: Tensor[(10, 14, 7), bool]) -> (Tensor[(10, 14, 7), float32], Tensor[(121), float64]) {
  %249 = @func_5594() /* ty=Tensor[(10, 14, 1), bool] */;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %251 = cast(%var_5893, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
  %252 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %253 = power(%250, %251) /* ty=Tensor[(10, 14, 7), float32] */;
  %254 = %252.0;
  (%253, %254)
}

def @func_9178() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(121), bool], Tensor[(10, 14, 11), uint16], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64]) {
  %255 = @func_5345() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) */;
  %256 = @func_6243() /* ty=(Tensor[(121), bool],) */;
  %257 = @func_6207() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %258 = %257.2;
  %259 = cast(%258, dtype="uint16") /* ty=Tensor[(10, 14, 1), uint16] */;
  %260 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 14, 11), bool] */, dtype="uint16") /* ty=Tensor[(10, 14, 11), uint16] */;
  %261 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %262 = @func_6514() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) */;
  %263 = %255.2;
  %264 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  %265 = %256.0;
  %266 = bitwise_xor(%259, %260) /* ty=Tensor[(10, 14, 11), uint16] */;
  %267 = %261.0;
  %268 = %262.1;
  (%263, %264, %265, %266, %267, %268)
}

def @func_1734() -> Tensor[(10, 14, 1), bool] {
  %269 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %269.0
}

def @func_4790() -> (Tensor[(5, 5, 16), uint32],) {
  %270 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %271 = %270.1;
  (%271,)
}

def @func_11476() -> Tensor[(10, 14, 1), bool] {
  @func_4701() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_11994(%var_11983: Tensor[(14, 70), float32]) -> (Tensor[(10, 14, 121), uint64], Tensor[(2112), float32], Tensor[(5, 5, 16), uint32], Tensor[(10, 7, 14), float32], Tensor[(14, 70), float32]) {
  %272 = cast(meta[relay.Constant][12] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %273 = reshape(%272, newshape=[264, 8]) /* ty=Tensor[(264, 8), float32] */;
  %274 = @func_5951(%273) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(264, 8), float32]) */;
  %275 = %274.0;
  %276 = @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %277 = %276.1;
  %278 = cast(%275, dtype="uint64") /* ty=Tensor[(121), uint64] */;
  %279 = cast(%277, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
  %280 = cast(meta[relay.Constant][12] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %281 = cast(%var_11983, dtype="float32") /* ty=Tensor[(14, 70), float32] */;
  %282 = reshape(%281, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
  %283 = @func_3211(%282) /* ty=(Tensor[(10, 7, 14), float32],) */;
  %284 = subtract(%278, %279) /* ty=Tensor[(10, 14, 121), uint64] */;
  %285 = acosh(%280) /* ty=Tensor[(2112), float32] */;
  %286 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
  %287 = %283.0;
  (%284, %285, %286, %287, %var_11983)
}

def @func_11356() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %288 = @func_6595() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
  %289 = @func_4924() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %290 = %288.1;
  %291 = %289.5;
  (%290, %291)
}

def @func_4054(%var_4013: Tensor[(121), float64]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), float32]) {
  %292 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %293 = %292.1;
  %294 = cast(%var_4013, dtype="float64") /* ty=Tensor[(121), float64] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(1), int32] */;
  %296 = cast(%293, dtype="float64") /* ty=Tensor[(121), float64] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?), float64] */;
  %298 = multiply(%296, %297) /* ty=Tensor[(121), float64] */;
  %299 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
  (%298, %299)
}

def @func_6243() -> (Tensor[(121), bool],) {
  %300 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %301 = %300.1;
  %302 = cast(meta[relay.Constant][13] /* ty=Tensor[(121), float64] */, dtype="bool") /* ty=Tensor[(121), bool] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(1), int32] */;
  %304 = cast(%301, dtype="bool") /* ty=Tensor[(121), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?), bool] */;
  %306 = equal(%304, %305) /* ty=Tensor[(121), bool] */;
  (%306,)
}

def @func_12804(%var_12799: Tensor[(980), bool]) -> (Tensor[(11, 11, 1), float64], Tensor[(121), float64], Tensor[(980), bool]) {
  %307 = @func_2289() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(10, 14, 1), bool]) */;
  %308 = cast(%var_12799, dtype="bool") /* ty=Tensor[(980), bool] */;
  %309 = reshape(%308, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), bool] */;
  %310 = @func_5902(%309) /* ty=(Tensor[(10, 14, 7), float32], Tensor[(121), float64]) */;
  %311 = %307.1;
  %312 = %310.1;
  (%311, %312, %var_12799)
}

def @func_2044() -> (Tensor[(5, 5, 16), uint32],) {
  %313 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %314 = %313.5;
  (%314,)
}

def @func_14727(%var_14695: Tensor[(1440), uint8]) -> (Tensor[(121), float64], Tensor[(1440), uint8], Tensor[(1056, 2), float64]) {
  %315 = @func_6263() /* ty=(Tensor[(121), float64],) */;
  %316 = cast(%var_14695, dtype="uint8") /* ty=Tensor[(1440), uint8] */;
  %317 = reshape(%316, newshape=[1440]) /* ty=Tensor[(1440), uint8] */;
  %318 = @func_13204(%317) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(1440), uint8], Tensor[(2496), uint8], Tensor[(1056, 2), float32]) */;
  %319 = %318.4;
  %320 = cast(%319, dtype="float64") /* ty=Tensor[(1056, 2), float64] */;
  %321 = %315.0;
  %322 = acos(%320) /* ty=Tensor[(1056, 2), float64] */;
  (%321, %var_14695, %322)
}

def @func_3878() -> Tensor[(5, 84), bool] {
  %323 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
  %323.1
}

def @func_5030() -> (Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) {
  %324 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %325 = %324.0;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(121), float64] */;
  %327 = reshape(%326, newshape=[121]) /* ty=Tensor[(121), float64] */;
  %328 = @func_4054(%327) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32]) */;
  %329 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %330 = cast(meta[relay.Constant][14] /* ty=Tensor[(2496), uint8] */, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %331 = reshape(%330, newshape=[2496]) /* ty=Tensor[(2496), uint8] */;
  %332 = @func_4644(%331) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */;
  %333 = cast(meta[relay.Constant][15] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %334 = reshape(%333, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %335 = @func_4331(%334) /* ty=(Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
  %336 = %328.1;
  %337 = %329.0;
  %338 = %332.4;
  %339 = %335.2;
  (%325, %336, %337, %338, meta[relay.Constant][14] /* ty=Tensor[(2496), uint8] */, %339, meta[relay.Constant][15] /* ty=Tensor[(2112), float32] */)
}

def @func_5751() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %340 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %341 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %342 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %343 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %344 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %345 = %340.0;
  %346 = %341.0;
  %347 = %342.0;
  %348 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
  %349 = %343.0;
  %350 = %344.0;
  (%345, %346, %347, %348, %349, %350)
}

def @func_5427() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %351 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %352 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %353 = %351.0;
  %354 = %352.0;
  (%353, %354)
}

def @func_1555() -> Tensor[(10, 14, 1), bool] {
  @func_1250() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_8317() -> Tensor[(5, 84), bool] {
  @func_3878() /* ty=Tensor[(5, 84), bool] */
}

def @func_11168() -> (Tensor[(5, 5, 16), float64],) {
  %355 = @func_5869() /* ty=Tensor[(5, 5, 16), uint32] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(5, 5, 16), float64] */;
  %357 = sigmoid(%356) /* ty=Tensor[(5, 5, 16), float64] */;
  (%357,)
}

def @func_1573() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %358 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %359 = %358.0;
  %360 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  (%359, %360)
}

def @func_9555() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %361 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %362 = @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %363 = @func_8864() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %364 = %361.0;
  %365 = %362.2;
  %366 = %363.0;
  (%364, %365, %366)
}

def @func_10661(%var_10639: Tensor[(10, 14, 5), bool]) -> (Tensor[(10, 14, 5), int8], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %367 = @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %368 = %367.0;
  %369 = cast(%368, dtype="int8") /* ty=Tensor[(10, 14, 1), int8] */;
  %370 = cast(%var_10639, dtype="int8") /* ty=Tensor[(10, 14, 5), int8] */;
  %371 = @func_7838() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64]) */;
  %372 = right_shift(%369, %370) /* ty=Tensor[(10, 14, 5), int8] */;
  %373 = %371.1;
  %374 = @func_9000() /* ty=Tensor[(10, 14, 1), bool] */;
  (%372, %373, %374)
}

def @func_6699(%var_6651: Tensor[(12, 8, 15), uint8], %var_6669: Tensor[(624, 4), uint8]) -> (Tensor[(12, 8, 15), uint8], Tensor[(121), bool], Tensor[(2496), uint8], Tensor[(624, 4), float32]) {
  %375 = cast(%var_6651, dtype="uint8") /* ty=Tensor[(12, 8, 15), uint8] */;
  %376 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(12, 8, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 8, 15), uint8] */, dtype="uint8") /* ty=Tensor[(12, 8, 15), uint8] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %379 = @func_6243() /* ty=(Tensor[(121), bool],) */;
  %380 = cast(%var_6669, dtype="uint8") /* ty=Tensor[(624, 4), uint8] */;
  %381 = reshape(%380, newshape=[2496]) /* ty=Tensor[(2496), uint8] */;
  %382 = @func_4644(%381) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */;
  %383 = cast(%var_6669, dtype="float32") /* ty=Tensor[(624, 4), float32] */;
  %384 = multiply(%377, %378) /* ty=Tensor[(12, 8, 15), uint8] */;
  %385 = %379.0;
  %386 = %382.8;
  %387 = log10(%383) /* ty=Tensor[(624, 4), float32] */;
  (%384, %385, %386, %387)
}

def @func_13162() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %388 = @func_11243() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */;
  %389 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %390 = %388.1;
  %391 = %389.0;
  (%390, %391)
}

def @func_7918() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) {
  %392 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %393 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %394 = @func_6795() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1056, 2), float32]) */;
  %395 = %392.0;
  %396 = %393.2;
  %397 = %394.2;
  %398 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  (%395, %396, %397, %398)
}

def @func_3540() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %399 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %400 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %401 = %399.0;
  %402 = %400.0;
  (%401, %402)
}

def @func_4243() -> (Tensor[(10, 14, 1), bool],) {
  %403 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  (%403,)
}

def @func_7400() -> Tensor[(10, 14, 1), bool] {
  @func_6337() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_9375() -> Tensor[(10, 14, 1), bool] {
  @func_2685() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_7100(%var_7076: Tensor[(2, 2, 10), float32]) -> (Tensor[(2, 2, 10), float32], Tensor[(10, 14, ?), int64]) {
  %404 = cast(%var_7076, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %405 = @func_6323() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) */;
  %406 = exp(%404) /* ty=Tensor[(2, 2, 10), float32] */;
  %407 = %405.1;
  (%406, %407)
}

def @func_13935() -> (Tensor[(10, 14, 121), bool], Tensor[(10, 14, 1680), int16]) {
  %408 = cast(meta[relay.Constant][17] /* ty=Tensor[(1680), bool] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %409 = reshape(%408, newshape=[1680]) /* ty=Tensor[(1680), bool] */;
  %410 = @func_3953(%409) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) */;
  %411 = %410.0;
  %412 = @func_6243() /* ty=(Tensor[(121), bool],) */;
  %413 = %412.0;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %415 = cast(%413, dtype="bool") /* ty=Tensor[(121), bool] */;
  %416 = cast(meta[relay.Constant][17] /* ty=Tensor[(1680), bool] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
  %417 = cast(%411, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %418 = not_equal(%414, %415) /* ty=Tensor[(10, 14, 121), bool] */;
  %419 = right_shift(%416, %417) /* ty=Tensor[(10, 14, 1680), int16] */;
  (%418, %419)
}

def @func_2804() -> (Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) {
  %420 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %421 = cast(%420, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %422 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 14, 14), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 14), bool] */;
  %423 = less_equal(%421, %422) /* ty=Tensor[(10, 14, 14), bool] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(10, 14, 14), float64] */;
  %425 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %426 = log2(%424) /* ty=Tensor[(10, 14, 14), float64] */;
  %427 = %425.4;
  (%426, %427)
}

def @func_12974(%var_12879: Tensor[(980), float32], %var_12920: Tensor[(11, 11, 980), uint32], %var_12927: Tensor[(400), uint32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(11, 11, 980), int64], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64]) {
  %428 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %429 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %430 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %431 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %432 = cast(%var_12879, dtype="float32") /* ty=Tensor[(980), float32] */;
  %433 = reshape(%432, newshape=[980]) /* ty=Tensor[(980), float32] */;
  %434 = @func_6112(%433) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) */;
  %435 = cast(%var_12879, dtype="float32") /* ty=Tensor[(980), float32] */;
  %436 = reshape(%435, newshape=[980]) /* ty=Tensor[(980), float32] */;
  %437 = @func_6112(%436) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) */;
  %438 = cast(meta[relay.Constant][19] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %439 = cast(%var_12927, dtype="uint32") /* ty=Tensor[(400), uint32] */;
  %440 = reshape(%438, newshape=[]) /* ty=uint32 */;
  %441 = reshape(%439, newshape=[400, 1]) /* ty=Tensor[(400, 1), uint32] */;
  %442 = @func_7045(%440, %441) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) */;
  %443 = %430.0;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(121), float64] */;
  %445 = reshape(%444, newshape=[121]) /* ty=Tensor[(121), float64] */;
  %446 = @func_1838(%445) /* ty=(Tensor[(11, 11, 1), float64], Tensor[(10, 14, 121), float32]) */;
  %447 = %446.0;
  %448 = cast(%447, dtype="float32") /* ty=Tensor[(11, 11, 1), float32] */;
  %449 = acosh(%448) /* ty=Tensor[(11, 11, 1), float32] */;
  %450 = cast(%449, dtype="uint32") /* ty=Tensor[(11, 11, 1), uint32] */;
  %451 = cast(%var_12879, dtype="uint32") /* ty=Tensor[(980), uint32] */;
  %452 = bitwise_xor(%450, %451) /* ty=Tensor[(11, 11, 980), uint32] */;
  %453 = cast(%var_12920, dtype="bool") /* ty=Tensor[(11, 11, 980), bool] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%452, dtype="bool") /* ty=Tensor[(11, 11, 980), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %457 = logical_or(%455, %456) /* ty=Tensor[(11, 11, 980), bool] */;
  %458 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 11, 980), bool] */, dtype="int64") /* ty=Tensor[(11, 11, 980), int64] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="int64") /* ty=Tensor[(11, 11, 980), int64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %462 = @func_7004() /* ty=(Tensor[(121), float64],) */;
  %463 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %464 = cast(%449, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
  %465 = atanh(%464) /* ty=Tensor[(11, 11, 1), float64] */;
  %466 = cast(%465, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
  %467 = %428.0;
  %468 = %429.1;
  %469 = @func_10206() /* ty=Tensor[(10, 14, 1), bool] */;
  %470 = %431.0;
  %471 = @func_12776() /* ty=Tensor[(10, 14, 1), float32] */;
  %472 = %434.2;
  %473 = %437.5;
  %474 = %442.3;
  %475 = right_shift(%460, %461) /* ty=Tensor[(11, 11, 980), int64] */;
  %476 = %462.0;
  %477 = %463.0;
  %478 = @func_11936() /* ty=Tensor[(10, 14, 1), bool] */;
  %479 = asinh(%466) /* ty=Tensor[(11, 11, 1), float64] */;
  (%467, %468, %469, %443, %470, %471, %472, %473, %474, meta[relay.Constant][19] /* ty=uint32 */, %var_12927, %475, %476, %477, %478, %479)
}

def @func_14315(%var_14286: Tensor[(7, 2, 4), float32]) -> (Tensor[(7, 2, 4), float64], Tensor[(10, 14, 1), bool]) {
  %480 = cast(%var_14286, dtype="float32") /* ty=Tensor[(7, 2, 4), float32] */;
  %481 = sinh(%480) /* ty=Tensor[(7, 2, 4), float32] */;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(7, 2, 4), float64] */;
  %483 = @func_13061() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %484 = sigmoid(%482) /* ty=Tensor[(7, 2, 4), float64] */;
  %485 = %483.0;
  (%484, %485)
}

def @func_14213() -> (Tensor[(15, 5, 7), float64],) {
  %486 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 5, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 7), float64] */;
  %487 = exp(%486) /* ty=Tensor[(15, 5, 7), float64] */;
  (%487,)
}

def @func_5137() -> (Tensor[(121), float64],) {
  %488 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %489 = %488.0;
  (%489,)
}

def @func_2637() -> (Tensor[(121), float64],) {
  %490 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %491 = %490.2;
  (%491,)
}

def @func_9688(%var_9682: Tensor[(2, 20), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), int64], Tensor[(2, 20), float32]) {
  %492 = @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %493 = cast(%var_9682, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %494 = reshape(%493, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %495 = @func_7100(%494) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(10, 14, ?), int64]) */;
  %496 = %492.0;
  %497 = %495.1;
  (%496, %497, %var_9682)
}

def @func_10206() -> Tensor[(10, 14, 1), bool] {
  %498 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %498.0
}

def @func_12072(%var_12057: Tensor[(3, 3, 12), float64]) -> (Tensor[(3, 3, 12), float64],) {
  %499 = cast(%var_12057, dtype="float64") /* ty=Tensor[(3, 3, 12), float64] */;
  %500 = exp(%499) /* ty=Tensor[(3, 3, 12), float64] */;
  (%500,)
}

def @func_2685() -> Tensor[(10, 14, 1), bool] {
  %501 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %501.0
}

def @func_11054() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) {
  %502 = @func_10233() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 40), float32]) */;
  %503 = %502.1;
  %504 = cast(%503, dtype="float32") /* ty=Tensor[(10, 14, 40), float32] */;
  %505 = cosh(%504) /* ty=Tensor[(10, 14, 40), float32] */;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(10, 14, 40), float64] */;
  %507 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %508 = @func_6337() /* ty=Tensor[(10, 14, 1), bool] */;
  %509 = acosh(%506) /* ty=Tensor[(10, 14, 40), float64] */;
  %510 = %507.0;
  (%508, %509, %510)
}

def @func_6207() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %511 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %512 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %513 = %511.0;
  %514 = %512.1;
  %515 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
  (%513, %514, %515)
}

def @func_8551() -> Tensor[(121), float64] {
  %516 = @func_5137() /* ty=(Tensor[(121), float64],) */;
  %516.0
}

def @func_6026() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %517 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
  %518 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  (%517, %518)
}

def @func_13271(%var_13262: Tensor[(121), float64]) -> (Tensor[(10, 14, 121), uint16], Tensor[(121), int32]) {
  %519 = @func_5683() /* ty=(Tensor[(121), float64],) */;
  %520 = %519.0;
  %521 = @func_9000() /* ty=Tensor[(10, 14, 1), bool] */;
  %522 = cast(%520, dtype="uint16") /* ty=Tensor[(121), uint16] */;
  %523 = cast(%521, dtype="uint16") /* ty=Tensor[(10, 14, 1), uint16] */;
  %524 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %525 = %524.0;
  %526 = cast(%var_13262, dtype="int32") /* ty=Tensor[(121), int32] */;
  %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(1), int32] */;
  %528 = cast(%525, dtype="int32") /* ty=Tensor[(121), int32] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?), int32] */;
  %530 = bitwise_or(%522, %523) /* ty=Tensor[(10, 14, 121), uint16] */;
  %531 = right_shift(%528, %529) /* ty=Tensor[(121), int32] */;
  (%530, %531)
}

def @func_1240() -> Tensor[(10, 14, 1), bool] {
  %532 = cast(2 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %533 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 14, 1), int32] */, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  less(%532, %533) /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_4418(%var_4413: Tensor[(1056, 2), float32]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32], uint32, Tensor[(10, 14, 1), float64], Tensor[(1056, 2), float32]) {
  %534 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %535 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %536 = cast(meta[relay.Constant][23] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %537 = %535.0;
  %538 = cast(%537, dtype="uint32") /* ty=Tensor[(5, 5, 16), uint32] */;
  %539 = reshape(%536, newshape=[]) /* ty=uint32 */;
  %540 = reshape(%538, newshape=[5, 5, 16]) /* ty=Tensor[(5, 5, 16), uint32] */;
  %541 = @func_1478(%539, %540) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
  %542 = cast(%var_4413, dtype="float32") /* ty=Tensor[(1056, 2), float32] */;
  %543 = reshape(%542, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %544 = @func_4331(%543) /* ty=(Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
  %545 = %534.0;
  %546 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %547 = %541.0;
  %548 = %544.2;
  (%545, %546, %537, %547, meta[relay.Constant][23] /* ty=uint32 */, %548, %var_4413)
}

def @func_3211(%var_3205: Tensor[(10, 7, 14), float32]) -> (Tensor[(10, 7, 14), float32],) {
  %549 = cast(%var_3205, dtype="float32") /* ty=Tensor[(10, 7, 14), float32] */;
  %550 = atanh(%549) /* ty=Tensor[(10, 7, 14), float32] */;
  (%550,)
}

def @func_9910() -> (Tensor[(10, 14, 1), bool],) {
  %551 = @func_9469() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %552 = %551.0;
  (%552,)
}

def @func_5128() -> (Tensor[(10, 14, 1), float32],) {
  %553 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %555 = sin(%554) /* ty=Tensor[(10, 14, 1), float32] */;
  (%555,)
}

def @func_12746() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %556 = @func_8595() /* ty=(Tensor[(121), float64], Tensor[(121), float64]) */;
  %557 = %556.0;
  %558 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  (%557, %558)
}

def @func_9090() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(4, 420), bool], Tensor[(10, 14, 1), bool]) {
  %559 = @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %560 = %559.0;
  %561 = cast(%560, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %562 = reshape(%561, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), bool] */;
  %563 = @func_6163(%562) /* ty=(Tensor[(10, 14, ?), bool], Tensor[(10, 14, ?), bool]) */;
  %564 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 420), bool] */, dtype="bool") /* ty=Tensor[(4, 420), bool] */;
  %565 = reshape(%564, newshape=[1680]) /* ty=Tensor[(1680), bool] */;
  %566 = @func_3953(%565) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) */;
  %567 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %568 = %563.0;
  %569 = @func_2395() /* ty=Tensor[(10, 14, 1), bool] */;
  %570 = %566.2;
  %571 = %567.1;
  (%560, %568, %569, %570, meta[relay.Constant][24] /* ty=Tensor[(4, 420), bool] */, %571)
}

def @func_13872() -> (Tensor[(10, 14, 1), bool],) {
  %572 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%572,)
}

def @func_10233() -> (Tensor[(121), float64], Tensor[(10, 14, 40), float32]) {
  %573 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 40), float32] */, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %574 = reshape(%573, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
  %575 = @func_9688(%574) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), int64], Tensor[(2, 20), float32]) */;
  %576 = %575.1;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(10, 14, ?), float32] */;
  %578 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 40), float32] */, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %579 = @func_8551() /* ty=Tensor[(121), float64] */;
  %580 = power(%577, %578) /* ty=Tensor[(10, 14, 40), float32] */;
  (%579, %580)
}

def @func_3066() -> Tensor[(10, 14, 1), bool] {
  @func_1555() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_4095(%var_4083: Tensor[(2112), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) {
  %581 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %582 = @func_2341() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %583 = cast(%var_4083, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %584 = cast(%var_4083, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %585 = reshape(%583, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %586 = reshape(%584, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %587 = @func_1540(%585, %586) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */;
  %588 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %589 = %581.1;
  %590 = %582.0;
  %591 = %587.1;
  %592 = %588.2;
  (%589, %590, %591, %var_4083, %592)
}

def @func_13565() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %593 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %594 = @func_6078() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %595 = %593.0;
  %596 = %594.0;
  (%595, %596)
}

def @func_5525() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %597 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %598 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  %599 = %597.0;
  (%598, %599)
}

def @func_11274(%var_11256: Tensor[(6, 10, 14), float32]) -> (Tensor[(6, 10, 14), float32], Tensor[(10, 14, 1), bool]) {
  %600 = cast(%var_11256, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %601 = rsqrt(%600) /* ty=Tensor[(6, 10, 14), float32] */;
  %602 = cast(%601, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %603 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %604 = sigmoid(%602) /* ty=Tensor[(6, 10, 14), float32] */;
  %605 = %603.1;
  (%604, %605)
}

def @func_13506(%var_13503: Tensor[(54), int64], %var_13504: Tensor[(594), int64]) -> (Tensor[(10, 14, 1), bool], Tensor[(9, 11, 6), bool], Tensor[(54), int64], Tensor[(594), int64]) {
  %606 = cast(%var_13503, dtype="int64") /* ty=Tensor[(54), int64] */;
  %607 = cast(%var_13504, dtype="int64") /* ty=Tensor[(594), int64] */;
  %608 = reshape(%606, newshape=[9, 1, 6]) /* ty=Tensor[(9, 1, 6), int64] */;
  %609 = reshape(%607, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), int64] */;
  %610 = @func_9794(%608, %609) /* ty=(Tensor[(9, 11, 6), bool],) */;
  %611 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %612 = %610.0;
  (%611, %612, %var_13503, %var_13504)
}

def @func_4970() -> (Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) {
  %613 = @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %614 = %613.0;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %616 = log10(%615) /* ty=Tensor[(10, 14, 1), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %618 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %619 = cast(meta[relay.Constant][26] /* ty=Tensor[(980, 2), float64] */, dtype="float64") /* ty=Tensor[(980, 2), float64] */;
  %620 = reshape(%619, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %621 = @func_2958(%620) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %622 = rsqrt(%617) /* ty=Tensor[(10, 14, 1), float32] */;
  %623 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  %624 = %618.0;
  %625 = %621.0;
  (%622, %623, %624, %625, meta[relay.Constant][26] /* ty=Tensor[(980, 2), float64] */)
}

def @func_5683() -> (Tensor[(121), float64],) {
  %626 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %627 = %626.1;
  (%627,)
}

def @func_2289() -> (Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(10, 14, 1), bool]) {
  %628 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %629 = @func_2170() /* ty=Tensor[(10, 14, 1), bool] */;
  %630 = %628.1;
  %631 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%629, %630, %631)
}

def @func_7638() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %632 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  %633 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
  (%632, %633)
}

def @func_4735() -> (Tensor[(10, 14, 1), bool],) {
  %634 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  (%634,)
}

def @func_8864() -> (Tensor[(10, 14, 1), bool],) {
  %635 = @func_7528() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64]) */;
  %636 = %635.0;
  (%636,)
}

def @func_10033(%var_10024: Tensor[(5, 84), bool]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(5, 84), int8]) {
  %637 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %638 = cast(meta[relay.Constant][27] /* ty=Tensor[(2496), uint8] */, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %639 = reshape(%638, newshape=[2496]) /* ty=Tensor[(2496), uint8] */;
  %640 = @func_4644(%639) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */;
  %641 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %642 = cast(%var_10024, dtype="int8") /* ty=Tensor[(5, 84), int8] */;
  %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(2), int32] */;
  %644 = cast(%641, dtype="int8") /* ty=Tensor[(5, 84), int8] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %646 = %637.0;
  %647 = %640.0;
  %648 = right_shift(%644, %645) /* ty=Tensor[(5, 84), int8] */;
  (%646, %647, meta[relay.Constant][27] /* ty=Tensor[(2496), uint8] */, %648)
}

def @func_14445() -> Tensor[(10, 14, 1), bool] {
  %649 = @func_9910() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %649.0
}

def @func_5951(%var_5945: Tensor[(264, 8), float32]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(264, 8), float32]) {
  %650 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %651 = cast(%var_5945, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
  %652 = reshape(%651, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %653 = @func_4095(%652) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %654 = %650.1;
  %655 = %653.1;
  (%654, %655, %var_5945)
}

def @func_11936() -> Tensor[(10, 14, 1), bool] {
  %656 = @func_11356() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %656.1
}

def @func_5824() -> Tensor[(10, 14, 1), bool] {
  %657 = @func_5461() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %657.0
}

def @func_12577() -> Tensor[(10, 14, 1), bool] {
  @func_11476() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_8453() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %658 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %659 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %660 = %658.1;
  %661 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %662 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%659, %660, %661, %662)
}

def @func_2737() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) {
  %663 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %664 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %665 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %667 = %663.1;
  %668 = %664.0;
  %669 = asinh(%666) /* ty=Tensor[(10, 14, 1), float32] */;
  (%667, %668, %669)
}

def @func_5594() -> Tensor[(10, 14, 1), bool] {
  @func_1250() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_6595() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) {
  %670 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %671 = @func_5869() /* ty=Tensor[(5, 5, 16), uint32] */;
  %672 = %670.2;
  (%671, %672)
}

def @func_9828() -> (Tensor[(121), float64],) {
  %673 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %674 = %673.0;
  (%674,)
}

def @func_13018() -> (Tensor[(10, 14, 1), bool],) {
  %675 = @func_11647() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %676 = %675.2;
  (%676,)
}

def @func_10180() -> (Tensor[(5, 5, 16), uint32],) {
  %677 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
  (%677,)
}

def @func_6795() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1056, 2), float32]) {
  %678 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %679 = cast(meta[relay.Constant][28] /* ty=Tensor[(1056, 2), float32] */, dtype="float32") /* ty=Tensor[(1056, 2), float32] */;
  %680 = reshape(%679, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %681 = @func_4095(%680) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %682 = %678.0;
  %683 = %681.1;
  (%682, %683, meta[relay.Constant][28] /* ty=Tensor[(1056, 2), float32] */)
}

def @func_6774() -> (Tensor[(10, 14, ?), uint8],) {
  %684 = @func_5030() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
  %685 = %684.5;
  %686 = @func_5751() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %687 = %686.3;
  %688 = cast(%687, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
  %689 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%685, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %692 = add(%690, %691) /* ty=Tensor[(10, 14, ?), uint8] */;
  (%692,)
}

def @func_10364() -> Tensor[(5, 5, 16), uint32] {
  %693 = @func_4790() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %693.0
}

def @func_1250() -> Tensor[(10, 14, 1), bool] {
  @func_1240() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_4936() -> Tensor[(5, 84), bool] {
  %694 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %694.4
}

def @func_3451() -> (Tensor[(10, 14, 1), bool],) {
  %695 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  (%695,)
}

def @func_7158(%var_7147: Tensor[(10, 14, 4), bool]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 4), uint16]) {
  %696 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %697 = @func_4924() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %698 = %697.5;
  %699 = cast(%698, dtype="uint16") /* ty=Tensor[(10, 14, 1), uint16] */;
  %700 = cast(%var_7147, dtype="uint16") /* ty=Tensor[(10, 14, 4), uint16] */;
  %701 = %696.3;
  %702 = bitwise_and(%699, %700) /* ty=Tensor[(10, 14, 4), uint16] */;
  (%701, %702)
}

def @func_8475() -> (Tensor[(10, 14, 1), bool],) {
  %703 = @func_6026() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %704 = %703.0;
  (%704,)
}

def @func_9522() -> Tensor[(10, 14, 3), bool] {
  %705 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %705.3
}

def @func_8148(%var_8106: Tensor[(9, 12, 12), float32]) -> (Tensor[(9, 12, 12), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %706 = cast(%var_8106, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
  %707 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %708 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %709 = @func_4970() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) */;
  %710 = sinh(%706) /* ty=Tensor[(9, 12, 12), float32] */;
  %711 = %707.0;
  %712 = %708.1;
  %713 = %709.2;
  (%710, %711, %712, %713)
}

def @func_7580() -> (Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) {
  %714 = @func_3359() /* ty=Tensor[(10, 14, 1), float32] */;
  %715 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
  (%714, %715)
}

def @func_8982() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 84), bool]) {
  %716 = @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %717 = %716.2;
  %718 = @func_8317() /* ty=Tensor[(5, 84), bool] */;
  (%717, %718)
}

def @func_14050() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1296), float32]) {
  %719 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %720 = cast(meta[relay.Constant][29] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %721 = reshape(%720, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float32] */;
  %722 = @func_8148(%721) /* ty=(Tensor[(9, 12, 12), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %723 = %719.1;
  %724 = %722.1;
  (%723, %724, meta[relay.Constant][29] /* ty=Tensor[(1296), float32] */)
}

def @func_6163(%var_6144: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, ?), bool], Tensor[(10, 14, ?), bool]) {
  %725 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  %726 = cast(%var_6144, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%725, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %730 = cast(%725, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %731 = shape_of(%var_6144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%var_6144, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %734 = not_equal(%728, %729) /* ty=Tensor[(10, 14, ?), bool] */;
  %735 = greater(%732, %733) /* ty=Tensor[(10, 14, ?), bool] */;
  (%734, %735)
}

def @func_5661() -> Tensor[(10, 14, 1), bool] {
  %736 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %736.0
}

def @func_7004() -> (Tensor[(121), float64],) {
  %737 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %738 = %737.0;
  (%738,)
}

def @func_7490() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) {
  %739 = @func_6078() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %740 = cast(meta[relay.Constant][30] /* ty=Tensor[(1960), float64] */, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %741 = reshape(%740, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %742 = @func_2958(%741) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %743 = %739.0;
  %744 = %742.1;
  (%743, %744, meta[relay.Constant][30] /* ty=Tensor[(1960), float64] */)
}

def @func_9469() -> (Tensor[(10, 14, 1), bool],) {
  %745 = @func_4519() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %746 = %745.1;
  (%746,)
}

def @func_3493() -> Tensor[(10, 14, 1), bool] {
  %747 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %747.0
}

def @func_1504() -> (Tensor[(10, 14, 1), bool],) {
  %748 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  (%748,)
}

def @func_5242() -> Tensor[(5, 5, 16), uint32] {
  %749 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %749.1
}

def @func_9271() -> (Tensor[(10, 14, 1), bool],) {
  %750 = @func_6207() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %751 = %750.2;
  (%751,)
}

def @func_7884() -> (Tensor[(10, 14, ?), uint8], Tensor[(10, 14, 1), bool]) {
  %752 = @func_6774() /* ty=(Tensor[(10, 14, ?), uint8],) */;
  %753 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %754 = %752.0;
  %755 = %753.1;
  (%754, %755)
}

def @func_8595() -> (Tensor[(121), float64], Tensor[(121), float64]) {
  %756 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %757 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %758 = %756.2;
  %759 = %757.1;
  (%758, %759)
}

def @func_2341() -> (Tensor[(10, 14, 1), bool],) {
  %760 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%760,)
}

def @func_14257(%var_14232: Tensor[(980), float32], %var_14252: Tensor[(840), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(840), float32]) {
  %761 = @func_12662() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %762 = cast(%var_14232, dtype="float32") /* ty=Tensor[(980), float32] */;
  %763 = reshape(%762, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
  %764 = @func_3211(%763) /* ty=(Tensor[(10, 7, 14), float32],) */;
  %765 = @func_11054() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) */;
  %766 = cast(%var_14252, dtype="float32") /* ty=Tensor[(840), float32] */;
  %767 = reshape(%766, newshape=[6, 10, 14]) /* ty=Tensor[(6, 10, 14), float32] */;
  %768 = @func_11274(%767) /* ty=(Tensor[(6, 10, 14), float32], Tensor[(10, 14, 1), bool]) */;
  %769 = %761.0;
  %770 = %764.0;
  %771 = %765.0;
  %772 = %768.1;
  (%769, %770, %var_14232, %771, %772, %var_14252)
}

def @func_4701() -> Tensor[(10, 14, 1), bool] {
  @func_2395() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_7045(%var_7029: uint32, %var_7030: Tensor[(400, 1), uint32]) -> (Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) {
  %773 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %774 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
  %775 = cast(%var_7029, dtype="uint32") /* ty=uint32 */;
  %776 = cast(%var_7030, dtype="uint32") /* ty=Tensor[(400, 1), uint32] */;
  %777 = reshape(%775, newshape=[]) /* ty=uint32 */;
  %778 = reshape(%776, newshape=[5, 5, 16]) /* ty=Tensor[(5, 5, 16), uint32] */;
  %779 = @func_1478(%777, %778) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
  %780 = %773.3;
  %781 = %774.1;
  %782 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
  %783 = %779.1;
  %784 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %785 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
  (%780, %781, %782, %783, %var_7029, %var_7030, %784, %785)
}

def @func_1278() -> (Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) {
  %786 = cast(meta[relay.Constant][31] /* ty=Tensor[(121), float64] */, dtype="float64") /* ty=Tensor[(121), float64] */;
  %787 = reshape(%786, newshape=[11, 11, 1]) /* ty=Tensor[(11, 11, 1), float64] */;
  %788 = @func_391(%787) /* ty=(Tensor[(11, 11, 1), float64],) */;
  %789 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %790 = %788.0;
  (%789, %790, meta[relay.Constant][31] /* ty=Tensor[(121), float64] */)
}

def @func_10778() -> Tensor[(10, 14, 1), float32] {
  @func_3359() /* ty=Tensor[(10, 14, 1), float32] */
}

def @func_3853() -> Tensor[(10, 14, 1), bool] {
  @func_2685() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_6514() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) {
  %791 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %792 = @func_6417() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 14), int64]) */;
  %793 = %791.2;
  %794 = %792.1;
  (%793, %794)
}

def @main(%var_14850: Tensor[(980), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(10, 14, 980), int32]) {
  %795 = cast(%var_14850, dtype="float32") /* ty=Tensor[(980), float32] */;
  %796 = reshape(%795, newshape=[14, 70]) /* ty=Tensor[(14, 70), float32] */;
  %797 = @func_11994(%796) /* ty=(Tensor[(10, 14, 121), uint64], Tensor[(2112), float32], Tensor[(5, 5, 16), uint32], Tensor[(10, 7, 14), float32], Tensor[(14, 70), float32]) */;
  %798 = @func_7490() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="int32") /* ty=Tensor[(10, 14, 1), int32] */;
  %801 = cast(%var_14850, dtype="int32") /* ty=Tensor[(980), int32] */;
  %802 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  %803 = %797.3;
  %804 = add(%800, %801) /* ty=Tensor[(10, 14, 980), int32] */;
  (%802, %803, %804)
}

def @func_1392() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %805 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %806 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %807 = %805.1;
  %808 = %806.0;
  (%807, %808)
}

def @func_11767() -> (Tensor[(10, 14, ?), bool], Tensor[(1056, 2), float32]) {
  %809 = @func_9090() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(4, 420), bool], Tensor[(10, 14, 1), bool]) */;
  %810 = @func_11243() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */;
  %811 = %809.1;
  %812 = %810.0;
  (%811, %812)
}

def @func_13815(%var_13773: Tensor[(14, 13, 11), float64], %var_13800: Tensor[(1960), float64]) -> (Tensor[(14, 13, 11), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) {
  %813 = cast(%var_13773, dtype="float64") /* ty=Tensor[(14, 13, 11), float64] */;
  %814 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %815 = cast(%var_13800, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %816 = reshape(%815, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %817 = @func_2958(%816) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %818 = cosh(%813) /* ty=Tensor[(14, 13, 11), float64] */;
  %819 = %814.2;
  %820 = %817.0;
  (%818, %819, %820, %var_13800)
}

def @func_9496() -> (Tensor[(10, 14, 14), int64],) {
  %821 = @func_6514() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) */;
  %822 = %821.1;
  (%822,)
}

def @func_12462(%var_12422: Tensor[(108), float64]) -> (Tensor[(6, 5, ?), int16], Tensor[(1056, 2), float32], Tensor[(3, 3, 12), float64], Tensor[(10, 14, 108), uint32], Tensor[(10, 14, 108), float32]) {
  %823 = @func_4161() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) */;
  %824 = @func_7918() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) */;
  %825 = cast(%var_12422, dtype="float64") /* ty=Tensor[(108), float64] */;
  %826 = reshape(%825, newshape=[3, 3, 12]) /* ty=Tensor[(3, 3, 12), float64] */;
  %827 = @func_12072(%826) /* ty=(Tensor[(3, 3, 12), float64],) */;
  %828 = %824.2;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(1056, 2), float32] */;
  %830 = reshape(%829, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %831 = @func_4095(%830) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %832 = %831.4;
  %833 = cast(%var_12422, dtype="uint32") /* ty=Tensor[(108), uint32] */;
  %834 = cast(%832, dtype="uint32") /* ty=Tensor[(10, 14, 1), uint32] */;
  %835 = @func_7987() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %836 = %835.0;
  %837 = cast(%832, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %838 = cast(%var_12422, dtype="float64") /* ty=Tensor[(108), float64] */;
  %839 = power(%837, %838) /* ty=Tensor[(10, 14, 108), float64] */;
  %840 = cast(%836, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %841 = cast(%839, dtype="float32") /* ty=Tensor[(10, 14, 108), float32] */;
  %842 = %823.2;
  %843 = %827.0;
  %844 = right_shift(%833, %834) /* ty=Tensor[(10, 14, 108), uint32] */;
  %845 = mod(%840, %841) /* ty=Tensor[(10, 14, 108), float32] */;
  (%842, %828, %843, %844, %845)
}

def @func_1540(%var_1509: Tensor[(16, 12, 11), float32], %var_1510: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) {
  %846 = cast(%var_1510, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %847 = shape_of(%var_1509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%var_1509, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %850 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %851 = cast(%850, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %852 = floor_mod(%848, %849) /* ty=Tensor[(16, 12, 11), float32] */;
  %853 = sinh(%851) /* ty=Tensor[(10, 14, 1), float64] */;
  (%852, %853)
}

def @func_7838() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64]) {
  %854 = @func_6078() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %855 = @func_7004() /* ty=(Tensor[(121), float64],) */;
  %856 = %854.0;
  %857 = %855.0;
  (%856, %857)
}

def @func_5617() -> Tensor[(10, 14, 3), bool] {
  %858 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %858.0
}

def @func_13204(%var_13192: Tensor[(1440), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(1440), uint8], Tensor[(2496), uint8], Tensor[(1056, 2), float32]) {
  %859 = @func_10564() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %860 = cast(%var_13192, dtype="uint8") /* ty=Tensor[(1440), uint8] */;
  %861 = cast(meta[relay.Constant][32] /* ty=Tensor[(2496), uint8] */, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %862 = reshape(%860, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), uint8] */;
  %863 = reshape(%861, newshape=[624, 4]) /* ty=Tensor[(624, 4), uint8] */;
  %864 = @func_6699(%862, %863) /* ty=(Tensor[(12, 8, 15), uint8], Tensor[(121), bool], Tensor[(2496), uint8], Tensor[(624, 4), float32]) */;
  %865 = @func_11767() /* ty=(Tensor[(10, 14, ?), bool], Tensor[(1056, 2), float32]) */;
  %866 = %859.0;
  %867 = %864.2;
  %868 = %865.1;
  (%866, %867, %var_13192, meta[relay.Constant][32] /* ty=Tensor[(2496), uint8] */, %868)
}

def @func_13961() -> Tensor[(10, 14, 1), bool] {
  %869 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %869.0
}

def @func_14346() -> (Tensor[(10, 14, 1), bool],) {
  %870 = @func_11936() /* ty=Tensor[(10, 14, 1), bool] */;
  (%870,)
}

def @func_4331(%var_4329: Tensor[(2112), float32]) -> (Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) {
  %871 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %872 = cast(%var_4329, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %873 = cast(%var_4329, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %874 = reshape(%872, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %875 = reshape(%873, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %876 = @func_1540(%874, %875) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */;
  %877 = %871.0;
  %878 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %879 = %876.1;
  (%877, %878, %879, %var_4329)
}

def @func_4161() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) {
  %880 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %881 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 5, 1), float64] */;
  %882 = log2(%881) /* ty=Tensor[(6, 5, 1), float64] */;
  %883 = cast(%882, dtype="float64") /* ty=Tensor[(6, 5, 1), float64] */;
  %884 = acosh(%883) /* ty=Tensor[(6, 5, 1), float64] */;
  %885 = cast(%884, dtype="float32") /* ty=Tensor[(6, 5, 1), float32] */;
  %886 = asinh(%885) /* ty=Tensor[(6, 5, 1), float32] */;
  %887 = cast(%886, dtype="int16") /* ty=Tensor[(6, 5, 1), int16] */;
  %888 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%884, dtype="int16") /* ty=Tensor[(6, 5, 1), int16] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %891 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %892 = %880.1;
  %893 = add(%889, %890) /* ty=Tensor[(6, 5, ?), int16] */;
  (%891, %892, %893)
}

def @func_10671() -> (Tensor[(10, 14, 1), float32],) {
  %894 = @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */;
  %895 = %894.0;
  (%895,)
}

def @func_12601(%var_12594: Tensor[(12, 13, 10), float64]) -> Tensor[(12, 13, 10), float64] {
  %896 = cast(%var_12594, dtype="float64") /* ty=Tensor[(12, 13, 10), float64] */;
  rsqrt(%896) /* ty=Tensor[(12, 13, 10), float64] */
}

def @func_11243() -> (Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) {
  %897 = @func_7918() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) */;
  %898 = %897.2;
  %899 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  (%898, %899)
}

def @func_10564() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %900 = @func_10044() /* ty=Tensor[(10, 14, 1), bool] */;
  %901 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  (%900, %901)
}

def @func_12720() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1960), float32], Tensor[(10, 14, 1), bool]) {
  %902 = @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %903 = @func_9469() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %904 = @func_7490() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) */;
  %905 = %904.2;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(1960), float32] */;
  %907 = log(%906) /* ty=Tensor[(1960), float32] */;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(1960), float32] */;
  %909 = %902.0;
  %910 = %903.0;
  %911 = cos(%908) /* ty=Tensor[(1960), float32] */;
  %912 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  (%909, %910, %911, %912)
}

def @func_12776() -> Tensor[(10, 14, 1), float32] {
  %913 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %913.2
}

def @func_7233() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %914 = @func_5345() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) */;
  %915 = @func_2395() /* ty=Tensor[(10, 14, 1), bool] */;
  %916 = %914.2;
  %917 = @func_5824() /* ty=Tensor[(10, 14, 1), bool] */;
  (%915, %916, %917)
}

def @func_8815() -> (Tensor[(10, 14, 1), bool],) {
  %918 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %919 = %918.0;
  (%919,)
}

def @func_1683(%var_1665: Tensor[(13, 12, 16), uint8], %var_1666: Tensor[(13, 12, 16), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) {
  %920 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %921 = cast(%var_1666, dtype="uint8") /* ty=Tensor[(13, 12, 16), uint8] */;
  %922 = shape_of(%var_1665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%var_1665, dtype="uint8") /* ty=Tensor[(13, 12, 16), uint8] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %925 = subtract(%923, %924) /* ty=Tensor[(13, 12, 16), uint8] */;
  %926 = cast(%var_1666, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %930 = %920.1;
  %931 = right_shift(%928, %929) /* ty=Tensor[(13, 12, 16), uint16] */;
  (%930, %931)
}

def @func_6112(%var_6101: Tensor[(980), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) {
  %932 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %933 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %934 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %935 = cast(%var_6101, dtype="float32") /* ty=Tensor[(980), float32] */;
  %936 = reshape(%935, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
  %937 = @func_3211(%936) /* ty=(Tensor[(10, 7, 14), float32],) */;
  %938 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %939 = %932.0;
  %940 = %933.1;
  %941 = %934.1;
  %942 = %937.0;
  %943 = %938.1;
  (%939, %940, %941, %942, %var_6101, %943)
}

def @func_6078() -> (Tensor[(10, 14, 1), bool],) {
  %944 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %945 = %944.0;
  (%945,)
}

def @func_6263() -> (Tensor[(121), float64],) {
  %946 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %947 = %946.0;
  (%947,)
}

def @func_10123(%var_10090: Tensor[(2112), float32]) -> (Tensor[(2112), float64],) {
  %948 = @func_5030() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
  %949 = %948.6;
  %950 = cast(%var_10090, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(1), int32] */;
  %952 = cast(%949, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?), bool] */;
  %954 = logical_or(%952, %953) /* ty=Tensor[(2112), bool] */;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %956 = shape_of(%949, dtype="int32") /* ty=Tensor[(1), int32] */;
  %957 = cast(%949, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?), float64] */;
  %959 = floor_divide(%957, %958) /* ty=Tensor[(2112), float64] */;
  (%959,)
}

def @func_9770() -> Tensor[(10, 14, 1), bool] {
  %960 = @func_7987() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %960.0
}

def @func_6821(%var_6812: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) {
  %961 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %962 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %963 = %962.1;
  %964 = cast(%var_6812, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
  %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%963, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %968 = %961.0;
  %969 = left_shift(%966, %967) /* ty=Tensor[(10, 14, ?), uint64] */;
  (%968, %969)
}

def @func_2170() -> Tensor[(10, 14, 1), bool] {
  %970 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %970.0
}

def @func_7980() -> (Tensor[(10, 14, 1), bool],) {
  %971 = @func_2170() /* ty=Tensor[(10, 14, 1), bool] */;
  (%971,)
}

def @func_3624(%var_3611: Tensor[(10, 14, 12), bool]) -> Tensor[(10, 14, 12), uint32] {
  %972 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %973 = cast(%972, dtype="uint32") /* ty=Tensor[(10, 14, 1), uint32] */;
  %974 = cast(%var_3611, dtype="uint32") /* ty=Tensor[(10, 14, 12), uint32] */;
  right_shift(%973, %974) /* ty=Tensor[(10, 14, 12), uint32] */
}

def @func_4220() -> (Tensor[(16, 7, 2), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %975 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 2), float32] */;
  %976 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %977 = acos(%975) /* ty=Tensor[(16, 7, 2), float32] */;
  %978 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  %979 = %976.1;
  (%977, %978, %979)
}

def @func_13117() -> (Tensor[(10, 14, ?), uint8],) {
  %980 = @func_6774() /* ty=(Tensor[(10, 14, ?), uint8],) */;
  %981 = %980.0;
  (%981,)
}

def @func_4835() -> (Tensor[(10, 14, 1), bool],) {
  %982 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  (%982,)
}

def @func_7669() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %983 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %984 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %985 = %983.0;
  %986 = %984.0;
  %987 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  (%985, %986, %987)
}

def @func_7528() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64]) {
  %988 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %989 = @func_5137() /* ty=(Tensor[(121), float64],) */;
  %990 = %988.0;
  %991 = %989.0;
  (%990, %991)
}

def @func_3725() -> Tensor[(5, 84), bool] {
  %992 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
  %992.1
}

def @func_13768(%var_13763: Tensor[(10, 14, 1960), bool]) -> (Tensor[(1960), int64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1960), bool]) {
  %993 = cast(meta[relay.Constant][35] /* ty=Tensor[(1960), float64] */, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %994 = reshape(%993, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %995 = @func_2958(%994) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %996 = %995.1;
  %997 = cast(%996, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %998 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(1960), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %999 = cast(meta[relay.Constant][35] /* ty=Tensor[(1960), float64] */, dtype="int64") /* ty=Tensor[(1960), int64] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1001 = @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */;
  %1002 = @func_5594() /* ty=Tensor[(10, 14, 1), bool] */;
  %1003 = cast(%1002, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %1004 = cast(meta[relay.Constant][35] /* ty=Tensor[(1960), float64] */, dtype="bool") /* ty=Tensor[(1960), bool] */;
  %1005 = less(%1003, %1004) /* ty=Tensor[(10, 14, 1960), bool] */;
  %1006 = cast(%var_13763, dtype="bool") /* ty=Tensor[(10, 14, 1960), bool] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(10, 14, 1960), bool] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1010 = bitwise_and(%999, %1000) /* ty=Tensor[(1960), int64] */;
  %1011 = %1001.0;
  %1012 = not_equal(%1008, %1009) /* ty=Tensor[(10, 14, 1960), bool] */;
  (%1010, %1011, %1012)
}

def @func_8068(%var_8024: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, ?), uint64], Tensor[(10, 14, ?), uint64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(121), float64]) {
  %1013 = @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %1014 = %1013.0;
  %1015 = cast(%var_8024, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
  %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%1014, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1019 = cast(%1014, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %1020 = reshape(%1019, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), bool] */;
  %1021 = @func_6821(%1020) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) */;
  %1022 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1023 = cast(meta[relay.Constant][36] /* ty=Tensor[(121), float64] */, dtype="float64") /* ty=Tensor[(121), float64] */;
  %1024 = reshape(%1023, newshape=[121]) /* ty=Tensor[(121), float64] */;
  %1025 = @func_4054(%1024) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32]) */;
  %1026 = minimum(%1017, %1018) /* ty=Tensor[(10, 14, ?), uint64] */;
  %1027 = %1021.1;
  %1028 = %1022.0;
  %1029 = @func_5617() /* ty=Tensor[(10, 14, 3), bool] */;
  %1030 = %1025.1;
  (%1026, %1027, %1028, %1029, %1030, meta[relay.Constant][36] /* ty=Tensor[(121), float64] */)
}

def @func_1838(%var_1814: Tensor[(121), float64]) -> (Tensor[(11, 11, 1), float64], Tensor[(10, 14, 121), float32]) {
  %1031 = cast(%var_1814, dtype="float64") /* ty=Tensor[(121), float64] */;
  %1032 = reshape(%1031, newshape=[11, 11, 1]) /* ty=Tensor[(11, 11, 1), float64] */;
  %1033 = @func_391(%1032) /* ty=(Tensor[(11, 11, 1), float64],) */;
  %1034 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %1036 = cast(%var_1814, dtype="float64") /* ty=Tensor[(121), float64] */;
  %1037 = divide(%1035, %1036) /* ty=Tensor[(10, 14, 121), float64] */;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(10, 14, 121), float32] */;
  %1039 = cast(%var_1814, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1040 = %1033.0;
  %1041 = floor_mod(%1038, %1039) /* ty=Tensor[(10, 14, 121), float32] */;
  (%1040, %1041)
}

def @func_4644(%var_4616: Tensor[(2496), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) {
  %1042 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1043 = cast(meta[relay.Constant][37] /* ty=Tensor[(980), float32] */, dtype="float32") /* ty=Tensor[(980), float32] */;
  %1044 = reshape(%1043, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
  %1045 = @func_3211(%1044) /* ty=(Tensor[(10, 7, 14), float32],) */;
  %1046 = cast(meta[relay.Constant][38] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %1047 = reshape(%1046, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %1048 = @func_4095(%1047) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %1049 = cast(meta[relay.Constant][38] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %1050 = reshape(%1049, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %1051 = @func_4095(%1050) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %1052 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %1053 = %1052.2;
  %1054 = cast(meta[relay.Constant][38] /* ty=Tensor[(2112), float32] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1055 = cast(%1053, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %1056 = cast(%var_4616, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %1057 = cast(%var_4616, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %1058 = reshape(%1056, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %1059 = reshape(%1057, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %1060 = @func_1683(%1058, %1059) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) */;
  %1061 = %1042.0;
  %1062 = %1045.0;
  %1063 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %1064 = %1048.2;
  %1065 = %1051.3;
  %1066 = greater(%1054, %1055) /* ty=Tensor[(10, 14, 2112), bool] */;
  %1067 = %1060.1;
  %1068 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  (%1061, %1062, meta[relay.Constant][37] /* ty=Tensor[(980), float32] */, %1063, %1064, %1065, %1066, %1067, %var_4616, %1068)
}

def @func_9980() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %1069 = @func_4790() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %1070 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1071 = %1069.0;
  %1072 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %1073 = %1070.0;
  (%1071, %1072, %1073)
}

def @func_5461() -> (Tensor[(10, 14, 1), bool],) {
  %1074 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
  (%1074,)
}

def @func_11316(%var_11282: Tensor[(13, 16, 4), int8], %var_11283: Tensor[(13, 16, 4), int8]) -> Tensor[(13, 16, 4), bool] {
  %1075 = cast(%var_11283, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %1076 = shape_of(%var_11282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1077 = cast(%var_11282, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1077, %1078) /* ty=Tensor[(13, 16, 4), bool] */
}

def @func_5869() -> Tensor[(5, 5, 16), uint32] {
  %1079 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %1079.0
}

def @func_9429(%var_9413: Tensor[(4, 12, 2), float32]) -> (Tensor[(4, 12, 2), float32],) {
  %1080 = cast(%var_9413, dtype="float32") /* ty=Tensor[(4, 12, 2), float32] */;
  %1081 = log10(%1080) /* ty=Tensor[(4, 12, 2), float32] */;
  (%1081,)
}

def @func_6625() -> (Tensor[(121), float32],) {
  %1082 = @func_5683() /* ty=(Tensor[(121), float64],) */;
  %1083 = %1082.0;
  %1084 = cast(%1083, dtype="float32") /* ty=Tensor[(121), float32] */;
  %1085 = atan(%1084) /* ty=Tensor[(121), float32] */;
  (%1085,)
}

def @func_8404() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %1086 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %1087 = cast(%1086, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %1088 = reshape(%1087, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), bool] */;
  %1089 = @func_6821(%1088) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) */;
  %1090 = %1089.0;
  (%1086, %1090)
}

def @func_3953(%var_3951: Tensor[(1680), bool]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) {
  %1091 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %1092 = cast(%var_3951, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %1093 = reshape(%1092, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), bool] */;
  %1094 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  %1095 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  %1096 = %1091.0;
  %1097 = @func_3624(%1093) /* ty=Tensor[(10, 14, 12), uint32] */;
  (%1094, %1095, %1096, %1097, %var_3951)
}

def @func_5161() -> (Tensor[(10, 14, 1), bool],) {
  %1098 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1099 = %1098.0;
  (%1099,)
}

def @func_13432() -> (Tensor[(5, 5, 16), float64],) {
  %1100 = @func_11168() /* ty=(Tensor[(5, 5, 16), float64],) */;
  %1101 = %1100.0;
  (%1101,)
}

def @func_10928(%var_10907: Tensor[(121), float64]) -> (Tensor[(121), bool],) {
  %1102 = @func_8551() /* ty=Tensor[(121), float64] */;
  %1103 = cast(%var_10907, dtype="bool") /* ty=Tensor[(121), bool] */;
  %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1105 = cast(%1102, dtype="bool") /* ty=Tensor[(121), bool] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1107 = logical_or(%1105, %1106) /* ty=Tensor[(121), bool] */;
  (%1107,)
}

def @func_11647() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %1108 = @func_8285() /* ty=(Tensor[(121), float64],) */;
  %1109 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %1110 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1111 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %1112 = %1108.0;
  %1113 = %1109.1;
  %1114 = %1110.0;
  (%1111, %1112, %1113, %1114)
}

def @func_6337() -> Tensor[(10, 14, 1), bool] {
  %1115 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1115.0
}

def @func_14062() -> (Tensor[(10, 14, 3), bool],) {
  %1116 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %1117 = %1116.3;
  (%1117,)
}

def @func_14124() -> Tensor[(5, 5, 16), uint32] {
  %1118 = @func_11672() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32]) */;
  %1118.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4163() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) {
  @func_4161() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) */
}

def @func_4520() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %3 = fn () -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
    %0 = @func_4220() /* ty=(Tensor[(16, 7, 2), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
    %1 = %0.2;
    %2 = @func_2395() /* ty=Tensor[(10, 14, 1), bool] */;
    (%1, %2)
  };
  %3() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_2172() -> Tensor[(10, 14, 1), bool] {
  @func_2170() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_6775() -> (Tensor[(10, 14, ?), uint8],) {
  %13 = fn () -> (Tensor[(10, 14, ?), uint8],) {
    %4 = @func_5030() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
    %5 = %4.5;
    %6 = @func_5751() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %7 = %6.3;
    %8 = cast(%7, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
    %9 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
    %10 = cast(%5, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %12 = add(%10, %11) /* ty=Tensor[(10, 14, ?), uint8] */;
    (%12,)
  };
  %13() /* ty=(Tensor[(10, 14, ?), uint8],) */
}

def @func_12075(%var_12073: Tensor[(3, 3, 12), float64]) -> (Tensor[(3, 3, 12), float64],) {
  @func_12072(%var_12073) /* ty=(Tensor[(3, 3, 12), float64],) */
}

def @func_9091() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(4, 420), bool], Tensor[(10, 14, 1), bool]) {
  %27 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(4, 420), bool], Tensor[(10, 14, 1), bool]) {
    %14 = @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
    %15 = %14.0;
    %16 = cast(%15, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %17 = reshape(%16, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), bool] */;
    %18 = @func_6163(%17) /* ty=(Tensor[(10, 14, ?), bool], Tensor[(10, 14, ?), bool]) */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 420), bool] */, dtype="bool") /* ty=Tensor[(4, 420), bool] */;
    %20 = reshape(%19, newshape=[1680]) /* ty=Tensor[(1680), bool] */;
    %21 = @func_3953(%20) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) */;
    %22 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %23 = %18.0;
    %24 = @func_2395() /* ty=Tensor[(10, 14, 1), bool] */;
    %25 = %21.2;
    %26 = %22.1;
    (%15, %23, %24, %25, meta[relay.Constant][0] /* ty=Tensor[(4, 420), bool] */, %26)
  };
  %27() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(4, 420), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_9178() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(121), bool], Tensor[(10, 14, 11), uint16], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64]) {
  %28 = @func_5345() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) */;
  %29 = @func_6243() /* ty=(Tensor[(121), bool],) */;
  %30 = @func_6207() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %31 = %30.2;
  %32 = cast(%31, dtype="uint16") /* ty=Tensor[(10, 14, 1), uint16] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 14, 11), bool] */, dtype="uint16") /* ty=Tensor[(10, 14, 11), uint16] */;
  %34 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %35 = @func_6514() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) */;
  %36 = %28.2;
  %37 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  %38 = %29.0;
  %39 = bitwise_xor(%32, %33) /* ty=Tensor[(10, 14, 11), uint16] */;
  %40 = %34.0;
  %41 = %35.1;
  (%36, %37, %38, %39, %40, %41)
}

def @func_8286() -> (Tensor[(121), float64],) {
  %44 = fn () -> (Tensor[(121), float64],) {
    %42 = @func_2637() /* ty=(Tensor[(121), float64],) */;
    %43 = %42.0;
    (%43,)
  };
  %44() /* ty=(Tensor[(121), float64],) */
}

def @func_11769() -> (Tensor[(10, 14, ?), bool], Tensor[(1056, 2), float32]) {
  @func_11767() /* ty=(Tensor[(10, 14, ?), bool], Tensor[(1056, 2), float32]) */
}

def @func_9000() -> Tensor[(10, 14, 1), bool] {
  @func_3066() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_12776() -> Tensor[(10, 14, 1), float32] {
  %45 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %45.2
}

def @func_1478(%var_1435: uint32, %var_1436: Tensor[(5, 5, 16), uint32]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) {
  %46 = cast(%var_1435, dtype="uint32") /* ty=uint32 */;
  %47 = cast(%var_1436, dtype="uint32") /* ty=Tensor[(5, 5, 16), uint32] */;
  %48 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %49 = maximum(%46, %47) /* ty=Tensor[(5, 5, 16), uint32] */;
  %50 = %48.1;
  (%49, %50)
}

def @func_6244() -> (Tensor[(121), bool],) {
  %58 = fn () -> (Tensor[(121), bool],) {
    %51 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %52 = %51.1;
    %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(121), float64] */, dtype="bool") /* ty=Tensor[(121), bool] */;
    %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(1), int32] */;
    %55 = cast(%52, dtype="bool") /* ty=Tensor[(121), bool] */;
    %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?), bool] */;
    %57 = equal(%55, %56) /* ty=Tensor[(121), bool] */;
    (%57,)
  };
  %58() /* ty=(Tensor[(121), bool],) */
}

def @func_2639() -> (Tensor[(121), float64],) {
  @func_2637() /* ty=(Tensor[(121), float64],) */
}

def @func_1776(%var_1775: Tensor[(10, 14, 3), bool]) -> (Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) {
  %66 = fn (%var_1743: Tensor[(10, 14, 3), bool]) -> (Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) {
    %59 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %60 = %59.0;
    %61 = cast(%60, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %62 = cast(%var_1743, dtype="bool") /* ty=Tensor[(10, 14, 3), bool] */;
    %63 = cast(%var_1743, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
    %64 = less_equal(%61, %62) /* ty=Tensor[(10, 14, 3), bool] */;
    %65 = erf(%63) /* ty=Tensor[(10, 14, 3), float64] */;
    (%64, %65)
  };
  %66(%var_1775) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */
}

def @func_6339() -> Tensor[(10, 14, 1), bool] {
  @func_6337() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_11767() -> (Tensor[(10, 14, ?), bool], Tensor[(1056, 2), float32]) {
  %67 = @func_9090() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(4, 420), bool], Tensor[(10, 14, 1), bool]) */;
  %68 = @func_11243() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */;
  %69 = %67.1;
  %70 = %68.0;
  (%69, %70)
}

def @func_7233() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %71 = @func_5345() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) */;
  %72 = @func_2395() /* ty=Tensor[(10, 14, 1), bool] */;
  %73 = %71.2;
  %74 = @func_5824() /* ty=Tensor[(10, 14, 1), bool] */;
  (%72, %73, %74)
}

def @func_7920() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) {
  @func_7918() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) */
}

def @func_6079() -> (Tensor[(10, 14, 1), bool],) {
  %77 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %75 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
    %76 = %75.0;
    (%76,)
  };
  %77() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_7918() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) {
  %78 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %79 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %80 = @func_6795() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1056, 2), float32]) */;
  %81 = %78.0;
  %82 = %79.2;
  %83 = %80.2;
  %84 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  (%81, %82, %83, %84)
}

def @func_13401() -> (Tensor[(10, 14, 1), float32], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  @func_13399() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_14317(%var_14316: Tensor[(7, 2, 4), float32]) -> (Tensor[(7, 2, 4), float64], Tensor[(10, 14, 1), bool]) {
  %91 = fn (%var_14286: Tensor[(7, 2, 4), float32]) -> (Tensor[(7, 2, 4), float64], Tensor[(10, 14, 1), bool]) {
    %85 = cast(%var_14286, dtype="float32") /* ty=Tensor[(7, 2, 4), float32] */;
    %86 = sinh(%85) /* ty=Tensor[(7, 2, 4), float32] */;
    %87 = cast(%86, dtype="float64") /* ty=Tensor[(7, 2, 4), float64] */;
    %88 = @func_13061() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %89 = sigmoid(%87) /* ty=Tensor[(7, 2, 4), float64] */;
    %90 = %88.0;
    (%89, %90)
  };
  %91(%var_14316) /* ty=(Tensor[(7, 2, 4), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_3855() -> Tensor[(10, 14, 1), bool] {
  @func_3853() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_14447() -> Tensor[(10, 14, 1), bool] {
  @func_14445() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_2034() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %92 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %93 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %94 = %92.1;
  %95 = %93.2;
  (%94, %95)
}

def @func_7160(%var_7159: Tensor[(10, 14, 4), bool]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 4), uint16]) {
  %103 = fn (%var_7147: Tensor[(10, 14, 4), bool]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 4), uint16]) {
    %96 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
    %97 = @func_4924() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %98 = %97.5;
    %99 = cast(%98, dtype="uint16") /* ty=Tensor[(10, 14, 1), uint16] */;
    %100 = cast(%var_7147, dtype="uint16") /* ty=Tensor[(10, 14, 4), uint16] */;
    %101 = %96.3;
    %102 = bitwise_and(%99, %100) /* ty=Tensor[(10, 14, 4), uint16] */;
    (%101, %102)
  };
  %103(%var_7159) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 4), uint16]) */
}

def @func_13164() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  @func_13162() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_9497() -> (Tensor[(10, 14, 14), int64],) {
  %106 = fn () -> (Tensor[(10, 14, 14), int64],) {
    %104 = @func_6514() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) */;
    %105 = %104.1;
    (%105,)
  };
  %106() /* ty=(Tensor[(10, 14, 14), int64],) */
}

def @func_5870() -> Tensor[(5, 5, 16), uint32] {
  %108 = fn () -> Tensor[(5, 5, 16), uint32] {
    %107 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
    %107.0
  };
  %108() /* ty=Tensor[(5, 5, 16), uint32] */
}

def @func_12557(%var_12556: Tensor[(4, 208), int8]) -> (Tensor[(10, 14, ?), int64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(420), bool], Tensor[(4, 208), int8], Tensor[(13, 16, 4), float32], Tensor[(1056, 2), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), bool], Tensor[(10, 14, 1), bool]) {
  %133 = fn (%var_12516: Tensor[(4, 208), int8]) -> (Tensor[(10, 14, ?), int64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(420), bool], Tensor[(4, 208), int8], Tensor[(13, 16, 4), float32], Tensor[(1056, 2), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), bool], Tensor[(10, 14, 1), bool]) {
    %109 = @func_11647() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %110 = @func_10564() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %111 = cast(meta[relay.Constant][3] /* ty=Tensor[(420), bool] */, dtype="bool") /* ty=Tensor[(420), bool] */;
    %112 = reshape(%111, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), bool] */;
    %113 = @func_1774(%112) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */;
    %114 = cast(%var_12516, dtype="int8") /* ty=Tensor[(4, 208), int8] */;
    %115 = cast(%var_12516, dtype="int8") /* ty=Tensor[(4, 208), int8] */;
    %116 = reshape(%114, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int8] */;
    %117 = reshape(%115, newshape=[13, 16, 4]) /* ty=Tensor[(13, 16, 4), int8] */;
    %118 = @func_11316(%116, %117) /* ty=Tensor[(13, 16, 4), bool] */;
    %119 = cast(%118, dtype="float32") /* ty=Tensor[(13, 16, 4), float32] */;
    %120 = @func_11243() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */;
    %121 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 70), bool] */, dtype="bool") /* ty=Tensor[(14, 70), bool] */;
    %122 = reshape(%121, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), bool] */;
    %123 = @func_5902(%122) /* ty=(Tensor[(10, 14, 7), float32], Tensor[(121), float64]) */;
    %124 = @func_9555() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %125 = @func_7259() /* ty=Tensor[(10, 14, ?), int64] */;
    %126 = %109.0;
    %127 = %110.1;
    %128 = %113.0;
    %129 = atan(%119) /* ty=Tensor[(13, 16, 4), float32] */;
    %130 = %120.0;
    %131 = %123.0;
    %132 = %124.1;
    (%125, %126, %127, %128, meta[relay.Constant][3] /* ty=Tensor[(420), bool] */, %var_12516, %129, %130, %131, meta[relay.Constant][4] /* ty=Tensor[(14, 70), bool] */, %132)
  };
  %133(%var_12556) /* ty=(Tensor[(10, 14, ?), int64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(420), bool], Tensor[(4, 208), int8], Tensor[(13, 16, 4), float32], Tensor[(1056, 2), float32], Tensor[(10, 14, 7), float32], Tensor[(14, 70), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_10036(%var_10034: Tensor[(5, 84), bool]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(5, 84), int8]) {
  @func_10033(%var_10034) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(5, 84), int8]) */
}

def @func_2396() -> Tensor[(10, 14, 1), bool] {
  %134 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_1734() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %134() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_14146() -> Tensor[(10, 14, 1), bool] {
  @func_3853() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_13061() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %135 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %136 = @func_11936() /* ty=Tensor[(10, 14, 1), bool] */;
  (%135, %136)
}

def @func_14347() -> (Tensor[(10, 14, 1), bool],) {
  %138 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %137 = @func_11936() /* ty=Tensor[(10, 14, 1), bool] */;
    (%137,)
  };
  %138() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_10780() -> Tensor[(10, 14, 1), float32] {
  @func_10778() /* ty=Tensor[(10, 14, 1), float32] */
}

def @func_10565() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %141 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %139 = @func_10044() /* ty=Tensor[(10, 14, 1), bool] */;
    %140 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
    (%139, %140)
  };
  %141() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_7235() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_9469() -> (Tensor[(10, 14, 1), bool],) {
  %142 = @func_4519() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %143 = %142.1;
  (%143,)
}

def @func_2637() -> (Tensor[(121), float64],) {
  %144 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %145 = %144.2;
  (%145,)
}

def @func_8553() -> Tensor[(121), float64] {
  @func_8551() /* ty=Tensor[(121), float64] */
}

def @func_13819(%var_13817: Tensor[(14, 13, 11), float64], %var_13818: Tensor[(1960), float64]) -> (Tensor[(14, 13, 11), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) {
  @func_13815(%var_13817, %var_13818) /* ty=(Tensor[(14, 13, 11), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) */
}

def @func_5951(%var_5945: Tensor[(264, 8), float32]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(264, 8), float32]) {
  %146 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %147 = cast(%var_5945, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
  %148 = reshape(%147, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %149 = @func_4095(%148) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %150 = %146.1;
  %151 = %149.1;
  (%150, %151, %var_5945)
}

def @func_6597() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) {
  @func_6595() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */
}

def @func_13962() -> Tensor[(10, 14, 1), bool] {
  %153 = fn () -> Tensor[(10, 14, 1), bool] {
    %152 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %152.0
  };
  %153() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_3627(%var_3625: Tensor[(10, 14, 12), bool]) -> Tensor[(10, 14, 12), uint32] {
  @func_3624(%var_3625) /* ty=Tensor[(10, 14, 12), uint32] */
}

def @func_11316(%var_11282: Tensor[(13, 16, 4), int8], %var_11283: Tensor[(13, 16, 4), int8]) -> Tensor[(13, 16, 4), bool] {
  %154 = cast(%var_11283, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %155 = shape_of(%var_11282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%var_11282, dtype="bool") /* ty=Tensor[(13, 16, 4), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%156, %157) /* ty=Tensor[(13, 16, 4), bool] */
}

def @func_5826() -> Tensor[(10, 14, 1), bool] {
  @func_5824() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_6823(%var_6822: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) {
  %167 = fn (%var_6812: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) {
    %158 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %159 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %160 = %159.1;
    %161 = cast(%var_6812, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
    %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(3), int32] */;
    %163 = cast(%160, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
    %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %165 = %158.0;
    %166 = left_shift(%163, %164) /* ty=Tensor[(10, 14, ?), uint64] */;
    (%165, %166)
  };
  %167(%var_6822) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) */
}

def @func_3541() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %172 = fn () -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
    %168 = @func_2637() /* ty=(Tensor[(121), float64],) */;
    %169 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %170 = %168.0;
    %171 = %169.0;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_8866() -> (Tensor[(10, 14, 1), bool],) {
  @func_8864() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_9556() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %179 = fn () -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %173 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %174 = @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %175 = @func_8864() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %176 = %173.0;
    %177 = %174.2;
    %178 = %175.0;
    (%176, %177, %178)
  };
  %179() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_7553() -> Tensor[(10, 14, 7), bool] {
  %183 = fn () -> Tensor[(10, 14, 7), bool] {
    %180 = @func_5809() /* ty=Tensor[(10, 14, 1), bool] */;
    %181 = cast(%180, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %182 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 14, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
    less(%181, %182) /* ty=Tensor[(10, 14, 7), bool] */
  };
  %183() /* ty=Tensor[(10, 14, 7), bool] */
}

def @func_7670() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %189 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %184 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %185 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %186 = %184.0;
    %187 = %185.0;
    %188 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
    (%186, %187, %188)
  };
  %189() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_4702() -> Tensor[(10, 14, 1), bool] {
  %190 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_2395() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %190() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_9354() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %191 = @func_8475() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %192 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %193 = %191.0;
  %194 = %192.0;
  (%193, %194)
}

def @func_9828() -> (Tensor[(121), float64],) {
  %195 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %196 = %195.0;
  (%196,)
}

def @func_14445() -> Tensor[(10, 14, 1), bool] {
  %197 = @func_9910() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %197.0
}

def @func_2739() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) {
  @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */
}

def @func_7885() -> (Tensor[(10, 14, ?), uint8], Tensor[(10, 14, 1), bool]) {
  %202 = fn () -> (Tensor[(10, 14, ?), uint8], Tensor[(10, 14, 1), bool]) {
    %198 = @func_6774() /* ty=(Tensor[(10, 14, ?), uint8],) */;
    %199 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %200 = %198.0;
    %201 = %199.1;
    (%200, %201)
  };
  %202() /* ty=(Tensor[(10, 14, ?), uint8], Tensor[(10, 14, 1), bool]) */
}

def @func_12747() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %206 = fn () -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
    %203 = @func_8595() /* ty=(Tensor[(121), float64], Tensor[(121), float64]) */;
    %204 = %203.0;
    %205 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    (%204, %205)
  };
  %206() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_10033(%var_10024: Tensor[(5, 84), bool]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(5, 84), int8]) {
  %207 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %208 = cast(meta[relay.Constant][6] /* ty=Tensor[(2496), uint8] */, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %209 = reshape(%208, newshape=[2496]) /* ty=Tensor[(2496), uint8] */;
  %210 = @func_4644(%209) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */;
  %211 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %212 = cast(%var_10024, dtype="int8") /* ty=Tensor[(5, 84), int8] */;
  %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(2), int32] */;
  %214 = cast(%211, dtype="int8") /* ty=Tensor[(5, 84), int8] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %216 = %207.0;
  %217 = %210.0;
  %218 = right_shift(%214, %215) /* ty=Tensor[(5, 84), int8] */;
  (%216, %217, meta[relay.Constant][6] /* ty=Tensor[(2496), uint8] */, %218)
}

def @func_3792() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %219 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %220 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %221 = %219.3;
  %222 = %220.2;
  %223 = @func_3359() /* ty=Tensor[(10, 14, 1), float32] */;
  (%221, %222, %223)
}

def @func_9375() -> Tensor[(10, 14, 1), bool] {
  @func_2685() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_5595() -> Tensor[(10, 14, 1), bool] {
  %224 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_1250() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %224() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_10347() -> Tensor[(5, 84), float32] {
  @func_10345() /* ty=Tensor[(5, 84), float32] */
}

def @func_4644(%var_4616: Tensor[(2496), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) {
  %225 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %226 = cast(meta[relay.Constant][7] /* ty=Tensor[(980), float32] */, dtype="float32") /* ty=Tensor[(980), float32] */;
  %227 = reshape(%226, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
  %228 = @func_3211(%227) /* ty=(Tensor[(10, 7, 14), float32],) */;
  %229 = cast(meta[relay.Constant][8] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %230 = reshape(%229, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %231 = @func_4095(%230) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %232 = cast(meta[relay.Constant][8] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %233 = reshape(%232, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %234 = @func_4095(%233) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %235 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %236 = %235.2;
  %237 = cast(meta[relay.Constant][8] /* ty=Tensor[(2112), float32] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %238 = cast(%236, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %239 = cast(%var_4616, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %240 = cast(%var_4616, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %241 = reshape(%239, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %242 = reshape(%240, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %243 = @func_1683(%241, %242) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) */;
  %244 = %225.0;
  %245 = %228.0;
  %246 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %247 = %231.2;
  %248 = %234.3;
  %249 = greater(%237, %238) /* ty=Tensor[(10, 14, 2112), bool] */;
  %250 = %243.1;
  %251 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  (%244, %245, meta[relay.Constant][7] /* ty=Tensor[(980), float32] */, %246, %247, %248, %249, %250, %var_4616, %251)
}

def @func_2289() -> (Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(10, 14, 1), bool]) {
  %252 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %253 = @func_2170() /* ty=Tensor[(10, 14, 1), bool] */;
  %254 = %252.1;
  %255 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%253, %254, %255)
}

def @func_7582() -> (Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) {
  @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */
}

def @func_2737() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) {
  %256 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %257 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %258 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %260 = %256.1;
  %261 = %257.0;
  %262 = asinh(%259) /* ty=Tensor[(10, 14, 1), float32] */;
  (%260, %261, %262)
}

def @func_9002() -> Tensor[(10, 14, 1), bool] {
  @func_9000() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_9830() -> (Tensor[(121), float64],) {
  @func_9828() /* ty=(Tensor[(121), float64],) */
}

def @func_7982() -> (Tensor[(10, 14, 1), bool],) {
  @func_7980() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_10345() -> Tensor[(5, 84), float32] {
  %263 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(5, 84), float32] */;
  atan(%264) /* ty=Tensor[(5, 84), float32] */
}

def @func_2341() -> (Tensor[(10, 14, 1), bool],) {
  %265 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  (%265,)
}

def @func_7490() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) {
  %266 = @func_6078() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %267 = cast(meta[relay.Constant][9] /* ty=Tensor[(1960), float64] */, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %268 = reshape(%267, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %269 = @func_2958(%268) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %270 = %266.0;
  %271 = %269.1;
  (%270, %271, meta[relay.Constant][9] /* ty=Tensor[(1960), float64] */)
}

def @func_4243() -> (Tensor[(10, 14, 1), bool],) {
  %272 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  (%272,)
}

def @func_9911() -> (Tensor[(10, 14, 1), bool],) {
  %275 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %273 = @func_9469() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %274 = %273.0;
    (%274,)
  };
  %275() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_6595() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) {
  %276 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %277 = @func_5869() /* ty=Tensor[(5, 5, 16), uint32] */;
  %278 = %276.2;
  (%277, %278)
}

def @func_6515() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) {
  %283 = fn () -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) {
    %279 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
    %280 = @func_6417() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 14), int64]) */;
    %281 = %279.2;
    %282 = %280.1;
    (%281, %282)
  };
  %283() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), int64]) */
}

def @func_8815() -> (Tensor[(10, 14, 1), bool],) {
  %284 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %285 = %284.0;
  (%285,)
}

def @func_2170() -> Tensor[(10, 14, 1), bool] {
  %286 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %286.0
}

def @func_13119() -> (Tensor[(10, 14, ?), uint8],) {
  @func_13117() /* ty=(Tensor[(10, 14, ?), uint8],) */
}

def @func_7530() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64]) {
  @func_7528() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64]) */
}

def @func_2291() -> (Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(10, 14, 1), bool]) {
  @func_2289() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_14260(%var_14258: Tensor[(980), float32], %var_14259: Tensor[(840), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(840), float32]) {
  %299 = fn (%var_14232: Tensor[(980), float32], %var_14252: Tensor[(840), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(840), float32]) {
    %287 = @func_12662() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %288 = cast(%var_14232, dtype="float32") /* ty=Tensor[(980), float32] */;
    %289 = reshape(%288, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
    %290 = @func_3211(%289) /* ty=(Tensor[(10, 7, 14), float32],) */;
    %291 = @func_11054() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) */;
    %292 = cast(%var_14252, dtype="float32") /* ty=Tensor[(840), float32] */;
    %293 = reshape(%292, newshape=[6, 10, 14]) /* ty=Tensor[(6, 10, 14), float32] */;
    %294 = @func_11274(%293) /* ty=(Tensor[(6, 10, 14), float32], Tensor[(10, 14, 1), bool]) */;
    %295 = %287.0;
    %296 = %290.0;
    %297 = %291.0;
    %298 = %294.1;
    (%295, %296, %var_14232, %297, %298, %var_14252)
  };
  %299(%var_14258, %var_14259) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(840), float32]) */
}

def @func_12722() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1960), float32], Tensor[(10, 14, 1), bool]) {
  @func_12720() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1960), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_12603(%var_12602: Tensor[(12, 13, 10), float64]) -> Tensor[(12, 13, 10), float64] {
  %301 = fn (%var_12594: Tensor[(12, 13, 10), float64]) -> Tensor[(12, 13, 10), float64] {
    %300 = cast(%var_12594, dtype="float64") /* ty=Tensor[(12, 13, 10), float64] */;
    rsqrt(%300) /* ty=Tensor[(12, 13, 10), float64] */
  };
  %301(%var_12602) /* ty=Tensor[(12, 13, 10), float64] */
}

def @func_4245() -> (Tensor[(10, 14, 1), bool],) {
  @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_14124() -> Tensor[(5, 5, 16), uint32] {
  %302 = @func_11672() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32]) */;
  %302.0
}

def @func_9797(%var_9795: Tensor[(9, 1, 6), int64], %var_9796: Tensor[(9, 11, 6), int64]) -> (Tensor[(9, 11, 6), bool],) {
  %306 = fn (%var_9789: Tensor[(9, 1, 6), int64], %var_9790: Tensor[(9, 11, 6), int64]) -> (Tensor[(9, 11, 6), bool],) {
    %303 = cast(%var_9789, dtype="bool") /* ty=Tensor[(9, 1, 6), bool] */;
    %304 = cast(%var_9790, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
    %305 = less(%303, %304) /* ty=Tensor[(9, 11, 6), bool] */;
    (%305,)
  };
  %306(%var_9795, %var_9796) /* ty=(Tensor[(9, 11, 6), bool],) */
}

def @func_3360() -> Tensor[(10, 14, 1), float32] {
  %308 = fn () -> Tensor[(10, 14, 1), float32] {
    %307 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
    %307.2
  };
  %308() /* ty=Tensor[(10, 14, 1), float32] */
}

def @func_5618() -> Tensor[(10, 14, 3), bool] {
  %310 = fn () -> Tensor[(10, 14, 3), bool] {
    %309 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
    %309.0
  };
  %310() /* ty=Tensor[(10, 14, 3), bool] */
}

def @func_13117() -> (Tensor[(10, 14, ?), uint8],) {
  %311 = @func_6774() /* ty=(Tensor[(10, 14, ?), uint8],) */;
  %312 = %311.0;
  (%312,)
}

def @func_6265() -> (Tensor[(121), float64],) {
  @func_6263() /* ty=(Tensor[(121), float64],) */
}

def @func_12217() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64], Tensor[(121), float64]) {
  %313 = @func_9496() /* ty=(Tensor[(10, 14, 14), int64],) */;
  %314 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %315 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  %316 = %313.0;
  %317 = %314.0;
  (%315, %316, %317)
}

def @func_9611() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_9609() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_9771() -> Tensor[(10, 14, 1), bool] {
  %319 = fn () -> Tensor[(10, 14, 1), bool] {
    %318 = @func_7987() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %318.0
  };
  %319() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_3673() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %320 = @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */;
  %321 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %322 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %323 = %320.3;
  %324 = %321.2;
  %325 = %322.1;
  (%323, %324, %325)
}

def @func_12072(%var_12057: Tensor[(3, 3, 12), float64]) -> (Tensor[(3, 3, 12), float64],) {
  %326 = cast(%var_12057, dtype="float64") /* ty=Tensor[(3, 3, 12), float64] */;
  %327 = exp(%326) /* ty=Tensor[(3, 3, 12), float64] */;
  (%327,)
}

def @func_10208() -> Tensor[(10, 14, 1), bool] {
  @func_10206() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_1394() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_9377() -> Tensor[(10, 14, 1), bool] {
  @func_9375() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_3039() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %328 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %329 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %330 = %328.0;
  %331 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  %332 = %329.2;
  (%330, %331, %332)
}

def @func_4334(%var_4332: Tensor[(2112), float32]) -> (Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) {
  @func_4331(%var_4332) /* ty=(Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */
}

def @func_4221() -> (Tensor[(16, 7, 2), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %338 = fn () -> (Tensor[(16, 7, 2), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
    %333 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 2), float32] */;
    %334 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %335 = acos(%333) /* ty=Tensor[(16, 7, 2), float32] */;
    %336 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
    %337 = %334.1;
    (%335, %336, %337)
  };
  %338() /* ty=(Tensor[(16, 7, 2), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_7492() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) {
  @func_7490() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) */
}

def @func_6166(%var_6164: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, ?), bool], Tensor[(10, 14, ?), bool]) {
  @func_6163(%var_6164) /* ty=(Tensor[(10, 14, ?), bool], Tensor[(10, 14, ?), bool]) */
}

def @func_5032() -> (Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) {
  @func_5030() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */
}

def @func_10182() -> (Tensor[(5, 5, 16), uint32],) {
  @func_10180() /* ty=(Tensor[(5, 5, 16), uint32],) */
}

def @func_4420(%var_4419: Tensor[(1056, 2), float32]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32], uint32, Tensor[(10, 14, 1), float64], Tensor[(1056, 2), float32]) {
  %354 = fn (%var_4413: Tensor[(1056, 2), float32]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32], uint32, Tensor[(10, 14, 1), float64], Tensor[(1056, 2), float32]) {
    %339 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %340 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
    %341 = cast(meta[relay.Constant][11] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %342 = %340.0;
    %343 = cast(%342, dtype="uint32") /* ty=Tensor[(5, 5, 16), uint32] */;
    %344 = reshape(%341, newshape=[]) /* ty=uint32 */;
    %345 = reshape(%343, newshape=[5, 5, 16]) /* ty=Tensor[(5, 5, 16), uint32] */;
    %346 = @func_1478(%344, %345) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
    %347 = cast(%var_4413, dtype="float32") /* ty=Tensor[(1056, 2), float32] */;
    %348 = reshape(%347, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %349 = @func_4331(%348) /* ty=(Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
    %350 = %339.0;
    %351 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    %352 = %346.0;
    %353 = %349.2;
    (%350, %351, %342, %352, meta[relay.Constant][11] /* ty=uint32 */, %353, %var_4413)
  };
  %354(%var_4419) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32], uint32, Tensor[(10, 14, 1), float64], Tensor[(1056, 2), float32]) */
}

def @func_4161() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) {
  %355 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %356 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(6, 5, 1), float64] */;
  %357 = log2(%356) /* ty=Tensor[(6, 5, 1), float64] */;
  %358 = cast(%357, dtype="float64") /* ty=Tensor[(6, 5, 1), float64] */;
  %359 = acosh(%358) /* ty=Tensor[(6, 5, 1), float64] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(6, 5, 1), float32] */;
  %361 = asinh(%360) /* ty=Tensor[(6, 5, 1), float32] */;
  %362 = cast(%361, dtype="int16") /* ty=Tensor[(6, 5, 1), int16] */;
  %363 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%359, dtype="int16") /* ty=Tensor[(6, 5, 1), int16] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %366 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %367 = %355.1;
  %368 = add(%364, %365) /* ty=Tensor[(6, 5, ?), int16] */;
  (%366, %367, %368)
}

def @func_8596() -> (Tensor[(121), float64], Tensor[(121), float64]) {
  %373 = fn () -> (Tensor[(121), float64], Tensor[(121), float64]) {
    %369 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
    %370 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %371 = %369.2;
    %372 = %370.1;
    (%371, %372)
  };
  %373() /* ty=(Tensor[(121), float64], Tensor[(121), float64]) */
}

def @func_13844() -> Tensor[(10, 14, 1), bool] {
  @func_5824() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_9272() -> (Tensor[(10, 14, 1), bool],) {
  %376 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %374 = @func_6207() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %375 = %374.2;
    (%375,)
  };
  %376() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_8476() -> (Tensor[(10, 14, 1), bool],) {
  %379 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %377 = @func_6026() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %378 = %377.0;
    (%378,)
  };
  %379() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_3879() -> Tensor[(5, 84), bool] {
  %381 = fn () -> Tensor[(5, 84), bool] {
    %380 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
    %380.1
  };
  %381() /* ty=Tensor[(5, 84), bool] */
}

def @func_6163(%var_6144: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, ?), bool], Tensor[(10, 14, ?), bool]) {
  %382 = @func_2685() /* ty=Tensor[(10, 14, 1), bool] */;
  %383 = cast(%var_6144, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = cast(%382, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %388 = shape_of(%var_6144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_6144, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = not_equal(%385, %386) /* ty=Tensor[(10, 14, ?), bool] */;
  %392 = greater(%389, %390) /* ty=Tensor[(10, 14, ?), bool] */;
  (%391, %392)
}

def @func_14064() -> (Tensor[(10, 14, 3), bool],) {
  @func_14062() /* ty=(Tensor[(10, 14, 3), bool],) */
}

def @func_12219() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64], Tensor[(121), float64]) {
  @func_12217() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64], Tensor[(121), float64]) */
}

def @func_9356() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_9354() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_4924() -> (Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %393 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %394 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %395 = reshape(%393, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %396 = reshape(%394, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %397 = @func_1540(%395, %396) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */;
  %398 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
  %399 = %398.2;
  %400 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %401 = cast(%399, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %402 = divide(%400, %401) /* ty=Tensor[(10, 14, 2112), float64] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(10, 14, 2112), float32] */;
  %404 = cast(%399, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %405 = mod(%403, %404) /* ty=Tensor[(10, 14, 2112), float32] */;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(10, 14, 2112), float64] */;
  %407 = cast(%399, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %408 = cast(%405, dtype="float32") /* ty=Tensor[(10, 14, 2112), float32] */;
  %409 = acos(%408) /* ty=Tensor[(10, 14, 2112), float32] */;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(10, 14, 2112), float32] */;
  %411 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %412 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %413 = %397.0;
  %414 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %415 = power(%406, %407) /* ty=Tensor[(10, 14, 2112), float64] */;
  %416 = sinh(%410) /* ty=Tensor[(10, 14, 2112), float32] */;
  %417 = %411.0;
  %418 = %412.1;
  (%413, %414, %415, %416, %417, %418)
}

def @func_8406() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_8404() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_9522() -> Tensor[(10, 14, 3), bool] {
  %419 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %419.3
}

def @func_2960(%var_2959: Tensor[(10, 14, 14), float64]) -> (Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) {
  %429 = fn (%var_2930: Tensor[(10, 14, 14), float64]) -> (Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) {
    %420 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
    %421 = %420.0;
    %422 = cast(%var_2930, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
    %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %424 = cast(%421, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %426 = cast(%var_2930, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
    %427 = floor_divide(%424, %425) /* ty=Tensor[(10, 14, 14), float32] */;
    %428 = asin(%426) /* ty=Tensor[(10, 14, 14), float32] */;
    (%427, %428)
  };
  %429(%var_2959) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */
}

def @func_9429(%var_9413: Tensor[(4, 12, 2), float32]) -> (Tensor[(4, 12, 2), float32],) {
  %430 = cast(%var_9413, dtype="float32") /* ty=Tensor[(4, 12, 2), float32] */;
  %431 = log10(%430) /* ty=Tensor[(4, 12, 2), float32] */;
  (%431,)
}

def @func_10123(%var_10090: Tensor[(2112), float32]) -> (Tensor[(2112), float64],) {
  %432 = @func_5030() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
  %433 = %432.6;
  %434 = cast(%var_10090, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(1), int32] */;
  %436 = cast(%433, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?), bool] */;
  %438 = logical_or(%436, %437) /* ty=Tensor[(2112), bool] */;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %440 = shape_of(%433, dtype="int32") /* ty=Tensor[(1), int32] */;
  %441 = cast(%433, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?), float64] */;
  %443 = floor_divide(%441, %442) /* ty=Tensor[(2112), float64] */;
  (%443,)
}

def @func_3211(%var_3205: Tensor[(10, 7, 14), float32]) -> (Tensor[(10, 7, 14), float32],) {
  %444 = cast(%var_3205, dtype="float32") /* ty=Tensor[(10, 7, 14), float32] */;
  %445 = atanh(%444) /* ty=Tensor[(10, 7, 14), float32] */;
  (%445,)
}

def @func_3624(%var_3611: Tensor[(10, 14, 12), bool]) -> Tensor[(10, 14, 12), uint32] {
  %446 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %447 = cast(%446, dtype="uint32") /* ty=Tensor[(10, 14, 1), uint32] */;
  %448 = cast(%var_3611, dtype="uint32") /* ty=Tensor[(10, 14, 12), uint32] */;
  right_shift(%447, %448) /* ty=Tensor[(10, 14, 12), uint32] */
}

def @func_9609() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %449 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %450 = %449.0;
  %451 = @func_2170() /* ty=Tensor[(10, 14, 1), bool] */;
  (%450, %451)
}

def @func_5130() -> (Tensor[(10, 14, 1), float32],) {
  @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */
}

def @func_10778() -> Tensor[(10, 14, 1), float32] {
  @func_3359() /* ty=Tensor[(10, 14, 1), float32] */
}

def @func_8929() -> Tensor[(5, 5, 16), uint32] {
  %453 = fn () -> Tensor[(5, 5, 16), uint32] {
    %452 = @func_4790() /* ty=(Tensor[(5, 5, 16), uint32],) */;
    %452.0
  };
  %453() /* ty=Tensor[(5, 5, 16), uint32] */
}

def @func_6323() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) {
  %454 = @func_5751() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %455 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %456 = %455.0;
  %457 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
  %458 = cast(%457, dtype="int64") /* ty=Tensor[(10, 14, 1), int64] */;
  %459 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%456, dtype="int64") /* ty=Tensor[(10, 14, 1), int64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %462 = %454.1;
  %463 = bitwise_or(%460, %461) /* ty=Tensor[(10, 14, ?), int64] */;
  (%462, %463)
}

def @func_11937() -> Tensor[(10, 14, 1), bool] {
  %465 = fn () -> Tensor[(10, 14, 1), bool] {
    %464 = @func_11356() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %464.1
  };
  %465() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_1377() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %471 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
    %466 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
    %467 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
    %468 = %466.0;
    %469 = %467.2;
    %470 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
    (%468, %469, %470)
  };
  %471() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_1482(%var_1480: uint32, %var_1481: Tensor[(5, 5, 16), uint32]) -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) {
  @func_1478(%var_1480, %var_1481) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */
}

def @func_5244() -> Tensor[(5, 5, 16), uint32] {
  @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */
}

def @func_7980() -> (Tensor[(10, 14, 1), bool],) {
  %472 = @func_2170() /* ty=Tensor[(10, 14, 1), bool] */;
  (%472,)
}

def @func_8864() -> (Tensor[(10, 14, 1), bool],) {
  %473 = @func_7528() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64]) */;
  %474 = %473.0;
  (%474,)
}

def @func_5128() -> (Tensor[(10, 14, 1), float32],) {
  %475 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %477 = sin(%476) /* ty=Tensor[(10, 14, 1), float32] */;
  (%477,)
}

def @func_8817() -> (Tensor[(10, 14, 1), bool],) {
  @func_8815() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_11674() -> (Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32]) {
  @func_11672() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32]) */
}

def @func_13271(%var_13262: Tensor[(121), float64]) -> (Tensor[(10, 14, 121), uint16], Tensor[(121), int32]) {
  %478 = @func_5683() /* ty=(Tensor[(121), float64],) */;
  %479 = %478.0;
  %480 = @func_9000() /* ty=Tensor[(10, 14, 1), bool] */;
  %481 = cast(%479, dtype="uint16") /* ty=Tensor[(121), uint16] */;
  %482 = cast(%480, dtype="uint16") /* ty=Tensor[(10, 14, 1), uint16] */;
  %483 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %484 = %483.0;
  %485 = cast(%var_13262, dtype="int32") /* ty=Tensor[(121), int32] */;
  %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(1), int32] */;
  %487 = cast(%484, dtype="int32") /* ty=Tensor[(121), int32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?), int32] */;
  %489 = bitwise_or(%481, %482) /* ty=Tensor[(10, 14, 121), uint16] */;
  %490 = right_shift(%487, %488) /* ty=Tensor[(121), int32] */;
  (%489, %490)
}

def @func_11431() -> Tensor[(10, 14, 1), bool] {
  %492 = fn () -> Tensor[(10, 14, 1), bool] {
    %491 = @func_4519() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %491.1
  };
  %492() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_12662() -> (Tensor[(10, 14, 1), bool],) {
  %493 = @func_8982() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 84), bool]) */;
  %494 = %493.0;
  (%494,)
}

def @func_10663(%var_10662: Tensor[(10, 14, 5), bool]) -> (Tensor[(10, 14, 5), int8], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %503 = fn (%var_10639: Tensor[(10, 14, 5), bool]) -> (Tensor[(10, 14, 5), int8], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
    %495 = @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %496 = %495.0;
    %497 = cast(%496, dtype="int8") /* ty=Tensor[(10, 14, 1), int8] */;
    %498 = cast(%var_10639, dtype="int8") /* ty=Tensor[(10, 14, 5), int8] */;
    %499 = @func_7838() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64]) */;
    %500 = right_shift(%497, %498) /* ty=Tensor[(10, 14, 5), int8] */;
    %501 = %499.1;
    %502 = @func_9000() /* ty=Tensor[(10, 14, 1), bool] */;
    (%500, %501, %502)
  };
  %503(%var_10662) /* ty=(Tensor[(10, 14, 5), int8], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */
}

def @func_13846() -> Tensor[(10, 14, 1), bool] {
  @func_13844() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_3452() -> (Tensor[(10, 14, 1), bool],) {
  %505 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %504 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    (%504,)
  };
  %505() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_13699() -> Tensor[(10, 14, 1), bool] {
  %507 = fn () -> Tensor[(10, 14, 1), bool] {
    %506 = @func_4970() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) */;
    %506.2
  };
  %507() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_2685() -> Tensor[(10, 14, 1), bool] {
  %508 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %508.0
}

def @func_5811() -> Tensor[(10, 14, 1), bool] {
  @func_5809() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_1241() -> Tensor[(10, 14, 1), bool] {
  %511 = fn () -> Tensor[(10, 14, 1), bool] {
    %509 = cast(2 /* ty=int32 */, dtype="bool") /* ty=bool */;
    %510 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 14, 1), int32] */, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    less(%509, %510) /* ty=Tensor[(10, 14, 1), bool] */
  };
  %511() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_5751() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %512 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %513 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
  %514 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %515 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %516 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %517 = %512.0;
  %518 = %513.0;
  %519 = %514.0;
  %520 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
  %521 = %515.0;
  %522 = %516.0;
  (%517, %518, %519, %520, %521, %522)
}

def @func_1556() -> Tensor[(10, 14, 1), bool] {
  %523 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_1250() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %523() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_5428() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %528 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %524 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %525 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %526 = %524.0;
    %527 = %525.0;
    (%526, %527)
  };
  %528() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_8983() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 84), bool]) {
  %532 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(5, 84), bool]) {
    %529 = @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %530 = %529.2;
    %531 = @func_8317() /* ty=Tensor[(5, 84), bool] */;
    (%530, %531)
  };
  %532() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 84), bool]) */
}

def @func_11244() -> (Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) {
  %536 = fn () -> (Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) {
    %533 = @func_7918() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) */;
    %534 = %533.2;
    %535 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
    (%534, %535)
  };
  %536() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_5030() -> (Tensor[(121), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2496), uint8], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) {
  %537 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %538 = %537.0;
  %539 = cast(%538, dtype="float64") /* ty=Tensor[(121), float64] */;
  %540 = reshape(%539, newshape=[121]) /* ty=Tensor[(121), float64] */;
  %541 = @func_4054(%540) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32]) */;
  %542 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %543 = cast(meta[relay.Constant][15] /* ty=Tensor[(2496), uint8] */, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
  %544 = reshape(%543, newshape=[2496]) /* ty=Tensor[(2496), uint8] */;
  %545 = @func_4644(%544) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */;
  %546 = cast(meta[relay.Constant][16] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %547 = reshape(%546, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %548 = @func_4331(%547) /* ty=(Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) */;
  %549 = %541.1;
  %550 = %542.0;
  %551 = %545.4;
  %552 = %548.2;
  (%538, %549, %550, %551, meta[relay.Constant][15] /* ty=Tensor[(2496), uint8] */, %552, meta[relay.Constant][16] /* ty=Tensor[(2112), float32] */)
}

def @func_11647() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %553 = @func_8285() /* ty=(Tensor[(121), float64],) */;
  %554 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %555 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %556 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %557 = %553.0;
  %558 = %554.1;
  %559 = %555.0;
  (%556, %557, %558, %559)
}

def @func_7638() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %560 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
  %561 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
  (%560, %561)
}

def @func_14148() -> Tensor[(10, 14, 1), bool] {
  @func_14146() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_4097(%var_4096: Tensor[(2112), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) {
  %574 = fn (%var_4083: Tensor[(2112), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) {
    %562 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %563 = @func_2341() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %564 = cast(%var_4083, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %565 = cast(%var_4083, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %566 = reshape(%564, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
    %567 = reshape(%565, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
    %568 = @func_1540(%566, %567) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */;
    %569 = @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %570 = %562.1;
    %571 = %563.0;
    %572 = %568.1;
    %573 = %569.2;
    (%570, %571, %572, %var_4083, %573)
  };
  %574(%var_4096) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_13506(%var_13503: Tensor[(54), int64], %var_13504: Tensor[(594), int64]) -> (Tensor[(10, 14, 1), bool], Tensor[(9, 11, 6), bool], Tensor[(54), int64], Tensor[(594), int64]) {
  %575 = cast(%var_13503, dtype="int64") /* ty=Tensor[(54), int64] */;
  %576 = cast(%var_13504, dtype="int64") /* ty=Tensor[(594), int64] */;
  %577 = reshape(%575, newshape=[9, 1, 6]) /* ty=Tensor[(9, 1, 6), int64] */;
  %578 = reshape(%576, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), int64] */;
  %579 = @func_9794(%577, %578) /* ty=(Tensor[(9, 11, 6), bool],) */;
  %580 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %581 = %579.0;
  (%580, %581, %var_13503, %var_13504)
}

def @func_13162() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %582 = @func_11243() /* ty=(Tensor[(1056, 2), float32], Tensor[(10, 14, 1), bool]) */;
  %583 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %584 = %582.1;
  %585 = %583.0;
  (%584, %585)
}

def @func_6209() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_6207() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_14440() -> (Tensor[(121), float64], Tensor[(13, 12, 16), uint16], Tensor[(10, 14, 1), bool], Tensor[(1296), float32], Tensor[(312, 8), float32]) {
  @func_14438() /* ty=(Tensor[(121), float64], Tensor[(13, 12, 16), uint16], Tensor[(10, 14, 1), bool], Tensor[(1296), float32], Tensor[(312, 8), float32]) */
}

def @func_5242() -> Tensor[(5, 5, 16), uint32] {
  %586 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %586.1
}

def @func_2805() -> (Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) {
  %595 = fn () -> (Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) {
    %587 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    %588 = cast(%587, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %589 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 14, 14), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 14), bool] */;
    %590 = less_equal(%588, %589) /* ty=Tensor[(10, 14, 14), bool] */;
    %591 = cast(%590, dtype="float64") /* ty=Tensor[(10, 14, 14), float64] */;
    %592 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
    %593 = log2(%591) /* ty=Tensor[(10, 14, 14), float64] */;
    %594 = %592.4;
    (%593, %594)
  };
  %595() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */
}

def @func_8551() -> Tensor[(121), float64] {
  %596 = @func_5137() /* ty=(Tensor[(121), float64],) */;
  %596.0
}

def @func_13399() -> (Tensor[(10, 14, 1), float32], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %597 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %598 = @func_7884() /* ty=(Tensor[(10, 14, ?), uint8], Tensor[(10, 14, 1), bool]) */;
  %599 = @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */;
  %600 = @func_10778() /* ty=Tensor[(10, 14, 1), float32] */;
  %601 = %597.0;
  %602 = %598.1;
  %603 = %599.0;
  %604 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
  (%600, %601, %602, %603, %604)
}

def @func_11996(%var_11995: Tensor[(14, 70), float32]) -> (Tensor[(10, 14, 121), uint64], Tensor[(2112), float32], Tensor[(5, 5, 16), uint32], Tensor[(10, 7, 14), float32], Tensor[(14, 70), float32]) {
  %621 = fn (%var_11983: Tensor[(14, 70), float32]) -> (Tensor[(10, 14, 121), uint64], Tensor[(2112), float32], Tensor[(5, 5, 16), uint32], Tensor[(10, 7, 14), float32], Tensor[(14, 70), float32]) {
    %605 = cast(meta[relay.Constant][18] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %606 = reshape(%605, newshape=[264, 8]) /* ty=Tensor[(264, 8), float32] */;
    %607 = @func_5951(%606) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(264, 8), float32]) */;
    %608 = %607.0;
    %609 = @func_7233() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %610 = %609.1;
    %611 = cast(%608, dtype="uint64") /* ty=Tensor[(121), uint64] */;
    %612 = cast(%610, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
    %613 = cast(meta[relay.Constant][18] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %614 = cast(%var_11983, dtype="float32") /* ty=Tensor[(14, 70), float32] */;
    %615 = reshape(%614, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
    %616 = @func_3211(%615) /* ty=(Tensor[(10, 7, 14), float32],) */;
    %617 = subtract(%611, %612) /* ty=Tensor[(10, 14, 121), uint64] */;
    %618 = acosh(%613) /* ty=Tensor[(2112), float32] */;
    %619 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
    %620 = %616.0;
    (%617, %618, %619, %620, %var_11983)
  };
  %621(%var_11995) /* ty=(Tensor[(10, 14, 121), uint64], Tensor[(2112), float32], Tensor[(5, 5, 16), uint32], Tensor[(10, 7, 14), float32], Tensor[(14, 70), float32]) */
}

def @func_14438() -> (Tensor[(121), float64], Tensor[(13, 12, 16), uint16], Tensor[(10, 14, 1), bool], Tensor[(1296), float32], Tensor[(312, 8), float32]) {
  %622 = @func_11054() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) */;
  %623 = cast(meta[relay.Constant][19] /* ty=Tensor[(312, 8), uint8] */, dtype="uint8") /* ty=Tensor[(312, 8), uint8] */;
  %624 = cast(meta[relay.Constant][19] /* ty=Tensor[(312, 8), uint8] */, dtype="uint8") /* ty=Tensor[(312, 8), uint8] */;
  %625 = reshape(%623, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %626 = reshape(%624, newshape=[13, 12, 16]) /* ty=Tensor[(13, 12, 16), uint8] */;
  %627 = @func_1683(%625, %626) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) */;
  %628 = @func_14050() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1296), float32]) */;
  %629 = cast(meta[relay.Constant][19] /* ty=Tensor[(312, 8), uint8] */, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %630 = rsqrt(%629) /* ty=Tensor[(312, 8), float32] */;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(312, 8), float32] */;
  %632 = %622.2;
  %633 = %627.1;
  %634 = @func_13844() /* ty=Tensor[(10, 14, 1), bool] */;
  %635 = %628.2;
  %636 = log2(%631) /* ty=Tensor[(312, 8), float32] */;
  (%632, %633, %634, %635, %636)
}

def @func_9432(%var_9430: Tensor[(4, 12, 2), float32]) -> (Tensor[(4, 12, 2), float32],) {
  @func_9429(%var_9430) /* ty=(Tensor[(4, 12, 2), float32],) */
}

def @func_13063() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_13061() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_7261() -> Tensor[(10, 14, ?), int64] {
  @func_7259() /* ty=Tensor[(10, 14, ?), int64] */
}

def @func_4936() -> Tensor[(5, 84), bool] {
  %637 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %637.4
}

def @func_10731() -> (Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %644 = fn () -> (Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
    %638 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %639 = @func_10671() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %640 = @func_9522() /* ty=Tensor[(10, 14, 3), bool] */;
    %641 = %638.0;
    %642 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
    %643 = %639.0;
    (%640, %641, %642, %643)
  };
  %644() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_5753() -> (Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_5751() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_13768(%var_13763: Tensor[(10, 14, 1960), bool]) -> (Tensor[(1960), int64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1960), bool]) {
  %645 = cast(meta[relay.Constant][20] /* ty=Tensor[(1960), float64] */, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %646 = reshape(%645, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %647 = @func_2958(%646) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %648 = %647.1;
  %649 = cast(%648, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
  %650 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(1960), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %651 = cast(meta[relay.Constant][20] /* ty=Tensor[(1960), float64] */, dtype="int64") /* ty=Tensor[(1960), int64] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?), int64] */;
  %653 = @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */;
  %654 = @func_5594() /* ty=Tensor[(10, 14, 1), bool] */;
  %655 = cast(%654, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %656 = cast(meta[relay.Constant][20] /* ty=Tensor[(1960), float64] */, dtype="bool") /* ty=Tensor[(1960), bool] */;
  %657 = less(%655, %656) /* ty=Tensor[(10, 14, 1960), bool] */;
  %658 = cast(%var_13763, dtype="bool") /* ty=Tensor[(10, 14, 1960), bool] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="bool") /* ty=Tensor[(10, 14, 1960), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = bitwise_and(%651, %652) /* ty=Tensor[(1960), int64] */;
  %663 = %653.0;
  %664 = not_equal(%660, %661) /* ty=Tensor[(10, 14, 1960), bool] */;
  (%662, %663, %664)
}

def @func_3318() -> (Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) {
  %665 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %666 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %667 = %665.3;
  %668 = cast(%667, dtype="bool") /* ty=Tensor[(10, 14, 3), bool] */;
  %669 = reshape(%668, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), bool] */;
  %670 = @func_1774(%669) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */;
  %671 = @func_2044() /* ty=(Tensor[(5, 5, 16), uint32],) */;
  %672 = %666.1;
  %673 = %670.1;
  %674 = %671.0;
  (%667, %672, %673, %674)
}

def @func_10365() -> Tensor[(5, 5, 16), uint32] {
  %676 = fn () -> Tensor[(5, 5, 16), uint32] {
    %675 = @func_4790() /* ty=(Tensor[(5, 5, 16), uint32],) */;
    %675.0
  };
  %676() /* ty=Tensor[(5, 5, 16), uint32] */
}

def @func_6027() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %679 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %677 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
    %678 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
    (%677, %678)
  };
  %679() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_3320() -> (Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) {
  @func_3318() /* ty=(Tensor[(10, 14, 3), bool], Tensor[(121), float64], Tensor[(10, 14, 3), float64], Tensor[(5, 5, 16), uint32]) */
}

def @func_10398() -> (Tensor[(10, 14, 1), bool],) {
  @func_10396() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_1933() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) {
  @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */
}

def @func_13510(%var_13508: Tensor[(54), int64], %var_13509: Tensor[(594), int64]) -> (Tensor[(10, 14, 1), bool], Tensor[(9, 11, 6), bool], Tensor[(54), int64], Tensor[(594), int64]) {
  @func_13506(%var_13508, %var_13509) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(9, 11, 6), bool], Tensor[(54), int64], Tensor[(594), int64]) */
}

def @func_7259() -> Tensor[(10, 14, ?), int64] {
  %680 = @func_6323() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) */;
  %680.1
}

def @func_12978(%var_12975: Tensor[(980), float32], %var_12976: Tensor[(11, 11, 980), uint32], %var_12977: Tensor[(400), uint32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(11, 11, 980), int64], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64]) {
  %733 = fn (%var_12879: Tensor[(980), float32], %var_12920: Tensor[(11, 11, 980), uint32], %var_12927: Tensor[(400), uint32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(11, 11, 980), int64], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64]) {
    %681 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %682 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %683 = @func_2637() /* ty=(Tensor[(121), float64],) */;
    %684 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %685 = cast(%var_12879, dtype="float32") /* ty=Tensor[(980), float32] */;
    %686 = reshape(%685, newshape=[980]) /* ty=Tensor[(980), float32] */;
    %687 = @func_6112(%686) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) */;
    %688 = cast(%var_12879, dtype="float32") /* ty=Tensor[(980), float32] */;
    %689 = reshape(%688, newshape=[980]) /* ty=Tensor[(980), float32] */;
    %690 = @func_6112(%689) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) */;
    %691 = cast(meta[relay.Constant][21] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %692 = cast(%var_12927, dtype="uint32") /* ty=Tensor[(400), uint32] */;
    %693 = reshape(%691, newshape=[]) /* ty=uint32 */;
    %694 = reshape(%692, newshape=[400, 1]) /* ty=Tensor[(400, 1), uint32] */;
    %695 = @func_7045(%693, %694) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) */;
    %696 = %683.0;
    %697 = cast(%696, dtype="float64") /* ty=Tensor[(121), float64] */;
    %698 = reshape(%697, newshape=[121]) /* ty=Tensor[(121), float64] */;
    %699 = @func_1838(%698) /* ty=(Tensor[(11, 11, 1), float64], Tensor[(10, 14, 121), float32]) */;
    %700 = %699.0;
    %701 = cast(%700, dtype="float32") /* ty=Tensor[(11, 11, 1), float32] */;
    %702 = acosh(%701) /* ty=Tensor[(11, 11, 1), float32] */;
    %703 = cast(%702, dtype="uint32") /* ty=Tensor[(11, 11, 1), uint32] */;
    %704 = cast(%var_12879, dtype="uint32") /* ty=Tensor[(980), uint32] */;
    %705 = bitwise_xor(%703, %704) /* ty=Tensor[(11, 11, 980), uint32] */;
    %706 = cast(%var_12920, dtype="bool") /* ty=Tensor[(11, 11, 980), bool] */;
    %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(3), int32] */;
    %708 = cast(%705, dtype="bool") /* ty=Tensor[(11, 11, 980), bool] */;
    %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %710 = logical_or(%708, %709) /* ty=Tensor[(11, 11, 980), bool] */;
    %711 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 11, 980), bool] */, dtype="int64") /* ty=Tensor[(11, 11, 980), int64] */;
    %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %713 = cast(%710, dtype="int64") /* ty=Tensor[(11, 11, 980), int64] */;
    %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %715 = @func_7004() /* ty=(Tensor[(121), float64],) */;
    %716 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %717 = cast(%702, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
    %718 = atanh(%717) /* ty=Tensor[(11, 11, 1), float64] */;
    %719 = cast(%718, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
    %720 = %681.0;
    %721 = %682.1;
    %722 = @func_10206() /* ty=Tensor[(10, 14, 1), bool] */;
    %723 = %684.0;
    %724 = @func_12776() /* ty=Tensor[(10, 14, 1), float32] */;
    %725 = %687.2;
    %726 = %690.5;
    %727 = %695.3;
    %728 = right_shift(%713, %714) /* ty=Tensor[(11, 11, 980), int64] */;
    %729 = %715.0;
    %730 = %716.0;
    %731 = @func_11936() /* ty=Tensor[(10, 14, 1), bool] */;
    %732 = asinh(%719) /* ty=Tensor[(11, 11, 1), float64] */;
    (%720, %721, %722, %696, %723, %724, %725, %726, %727, meta[relay.Constant][21] /* ty=uint32 */, %var_12927, %728, %729, %730, %731, %732)
  };
  %733(%var_12975, %var_12976, %var_12977) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(11, 11, 980), int64], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64]) */
}

def @func_6702(%var_6700: Tensor[(12, 8, 15), uint8], %var_6701: Tensor[(624, 4), uint8]) -> (Tensor[(12, 8, 15), uint8], Tensor[(121), bool], Tensor[(2496), uint8], Tensor[(624, 4), float32]) {
  %747 = fn (%var_6651: Tensor[(12, 8, 15), uint8], %var_6669: Tensor[(624, 4), uint8]) -> (Tensor[(12, 8, 15), uint8], Tensor[(121), bool], Tensor[(2496), uint8], Tensor[(624, 4), float32]) {
    %734 = cast(%var_6651, dtype="uint8") /* ty=Tensor[(12, 8, 15), uint8] */;
    %735 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(12, 8, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %736 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 8, 15), uint8] */, dtype="uint8") /* ty=Tensor[(12, 8, 15), uint8] */;
    %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %738 = @func_6243() /* ty=(Tensor[(121), bool],) */;
    %739 = cast(%var_6669, dtype="uint8") /* ty=Tensor[(624, 4), uint8] */;
    %740 = reshape(%739, newshape=[2496]) /* ty=Tensor[(2496), uint8] */;
    %741 = @func_4644(%740) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */;
    %742 = cast(%var_6669, dtype="float32") /* ty=Tensor[(624, 4), float32] */;
    %743 = multiply(%736, %737) /* ty=Tensor[(12, 8, 15), uint8] */;
    %744 = %738.0;
    %745 = %741.8;
    %746 = log10(%742) /* ty=Tensor[(624, 4), float32] */;
    (%743, %744, %745, %746)
  };
  %747(%var_6700, %var_6701) /* ty=(Tensor[(12, 8, 15), uint8], Tensor[(121), bool], Tensor[(2496), uint8], Tensor[(624, 4), float32]) */
}

def @func_12807(%var_12805: Tensor[(980), bool]) -> (Tensor[(11, 11, 1), float64], Tensor[(121), float64], Tensor[(980), bool]) {
  @func_12804(%var_12805) /* ty=(Tensor[(11, 11, 1), float64], Tensor[(121), float64], Tensor[(980), bool]) */
}

def @func_4647(%var_4645: Tensor[(2496), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) {
  @func_4644(%var_4645) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 2112), bool], Tensor[(13, 12, 16), uint16], Tensor[(2496), uint8], Tensor[(5, 84), bool]) */
}

def @func_7988() -> (Tensor[(10, 14, 1), bool],) {
  %750 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %748 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %749 = %748.2;
    (%749,)
  };
  %750() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_11274(%var_11256: Tensor[(6, 10, 14), float32]) -> (Tensor[(6, 10, 14), float32], Tensor[(10, 14, 1), bool]) {
  %751 = cast(%var_11256, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %752 = rsqrt(%751) /* ty=Tensor[(6, 10, 14), float32] */;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(6, 10, 14), float32] */;
  %754 = @func_5427() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %755 = sigmoid(%753) /* ty=Tensor[(6, 10, 14), float32] */;
  %756 = %754.1;
  (%755, %756)
}

def @func_1840(%var_1839: Tensor[(121), float64]) -> (Tensor[(11, 11, 1), float64], Tensor[(10, 14, 121), float32]) {
  %768 = fn (%var_1814: Tensor[(121), float64]) -> (Tensor[(11, 11, 1), float64], Tensor[(10, 14, 121), float32]) {
    %757 = cast(%var_1814, dtype="float64") /* ty=Tensor[(121), float64] */;
    %758 = reshape(%757, newshape=[11, 11, 1]) /* ty=Tensor[(11, 11, 1), float64] */;
    %759 = @func_391(%758) /* ty=(Tensor[(11, 11, 1), float64],) */;
    %760 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    %761 = cast(%760, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %762 = cast(%var_1814, dtype="float64") /* ty=Tensor[(121), float64] */;
    %763 = divide(%761, %762) /* ty=Tensor[(10, 14, 121), float64] */;
    %764 = cast(%763, dtype="float32") /* ty=Tensor[(10, 14, 121), float32] */;
    %765 = cast(%var_1814, dtype="float32") /* ty=Tensor[(121), float32] */;
    %766 = %759.0;
    %767 = floor_mod(%764, %765) /* ty=Tensor[(10, 14, 121), float32] */;
    (%766, %767)
  };
  %768(%var_1839) /* ty=(Tensor[(11, 11, 1), float64], Tensor[(10, 14, 121), float32]) */
}

def @func_6325() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) {
  @func_6323() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) */
}

def @func_11169() -> (Tensor[(5, 5, 16), float64],) {
  %772 = fn () -> (Tensor[(5, 5, 16), float64],) {
    %769 = @func_5869() /* ty=Tensor[(5, 5, 16), uint32] */;
    %770 = cast(%769, dtype="float64") /* ty=Tensor[(5, 5, 16), float64] */;
    %771 = sigmoid(%770) /* ty=Tensor[(5, 5, 16), float64] */;
    (%771,)
  };
  %772() /* ty=(Tensor[(5, 5, 16), float64],) */
}

def @func_4835() -> (Tensor[(10, 14, 1), bool],) {
  %773 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
  (%773,)
}

def @func_5824() -> Tensor[(10, 14, 1), bool] {
  %774 = @func_5461() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %774.0
}

def @func_8318() -> Tensor[(5, 84), bool] {
  %775 = fn () -> Tensor[(5, 84), bool] {
    @func_3878() /* ty=Tensor[(5, 84), bool] */
  };
  %775() /* ty=Tensor[(5, 84), bool] */
}

def @func_13274(%var_13272: Tensor[(121), float64]) -> (Tensor[(10, 14, 121), uint16], Tensor[(121), int32]) {
  @func_13271(%var_13272) /* ty=(Tensor[(10, 14, 121), uint16], Tensor[(121), int32]) */
}

def @func_1278() -> (Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) {
  %776 = cast(meta[relay.Constant][24] /* ty=Tensor[(121), float64] */, dtype="float64") /* ty=Tensor[(121), float64] */;
  %777 = reshape(%776, newshape=[11, 11, 1]) /* ty=Tensor[(11, 11, 1), float64] */;
  %778 = @func_391(%777) /* ty=(Tensor[(11, 11, 1), float64],) */;
  %779 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %780 = %778.0;
  (%779, %780, meta[relay.Constant][24] /* ty=Tensor[(121), float64] */)
}

def @func_11320(%var_11318: Tensor[(13, 16, 4), int8], %var_11319: Tensor[(13, 16, 4), int8]) -> Tensor[(13, 16, 4), bool] {
  @func_11316(%var_11318, %var_11319) /* ty=Tensor[(13, 16, 4), bool] */
}

def @func_6263() -> (Tensor[(121), float64],) {
  %781 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %782 = %781.0;
  (%782,)
}

def @func_12804(%var_12799: Tensor[(980), bool]) -> (Tensor[(11, 11, 1), float64], Tensor[(121), float64], Tensor[(980), bool]) {
  %783 = @func_2289() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(10, 14, 1), bool]) */;
  %784 = cast(%var_12799, dtype="bool") /* ty=Tensor[(980), bool] */;
  %785 = reshape(%784, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), bool] */;
  %786 = @func_5902(%785) /* ty=(Tensor[(10, 14, 7), float32], Tensor[(121), float64]) */;
  %787 = %783.1;
  %788 = %786.1;
  (%787, %788, %var_12799)
}

def @func_5162() -> (Tensor[(10, 14, 1), bool],) {
  %791 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %789 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %790 = %789.0;
    (%790,)
  };
  %791() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_8150(%var_8149: Tensor[(9, 12, 12), float32]) -> (Tensor[(9, 12, 12), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %800 = fn (%var_8106: Tensor[(9, 12, 12), float32]) -> (Tensor[(9, 12, 12), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %792 = cast(%var_8106, dtype="float32") /* ty=Tensor[(9, 12, 12), float32] */;
    %793 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %794 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
    %795 = @func_4970() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) */;
    %796 = sinh(%792) /* ty=Tensor[(9, 12, 12), float32] */;
    %797 = %793.0;
    %798 = %794.1;
    %799 = %795.2;
    (%796, %797, %798, %799)
  };
  %800(%var_8149) /* ty=(Tensor[(9, 12, 12), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_14062() -> (Tensor[(10, 14, 3), bool],) {
  %801 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
  %802 = %801.3;
  (%802,)
}

def @func_13873() -> (Tensor[(10, 14, 1), bool],) {
  %804 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %803 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
    (%803,)
  };
  %804() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_13206(%var_13205: Tensor[(1440), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(1440), uint8], Tensor[(2496), uint8], Tensor[(1056, 2), float32]) {
  %815 = fn (%var_13192: Tensor[(1440), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(1440), uint8], Tensor[(2496), uint8], Tensor[(1056, 2), float32]) {
    %805 = @func_10564() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %806 = cast(%var_13192, dtype="uint8") /* ty=Tensor[(1440), uint8] */;
    %807 = cast(meta[relay.Constant][25] /* ty=Tensor[(2496), uint8] */, dtype="uint8") /* ty=Tensor[(2496), uint8] */;
    %808 = reshape(%806, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), uint8] */;
    %809 = reshape(%807, newshape=[624, 4]) /* ty=Tensor[(624, 4), uint8] */;
    %810 = @func_6699(%808, %809) /* ty=(Tensor[(12, 8, 15), uint8], Tensor[(121), bool], Tensor[(2496), uint8], Tensor[(624, 4), float32]) */;
    %811 = @func_11767() /* ty=(Tensor[(10, 14, ?), bool], Tensor[(1056, 2), float32]) */;
    %812 = %805.0;
    %813 = %810.2;
    %814 = %811.1;
    (%812, %813, %var_13192, meta[relay.Constant][25] /* ty=Tensor[(2496), uint8] */, %814)
  };
  %815(%var_13205) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(1440), uint8], Tensor[(2496), uint8], Tensor[(1056, 2), float32]) */
}

def @func_2687() -> Tensor[(10, 14, 1), bool] {
  @func_2685() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_14727(%var_14695: Tensor[(1440), uint8]) -> (Tensor[(121), float64], Tensor[(1440), uint8], Tensor[(1056, 2), float64]) {
  %816 = @func_6263() /* ty=(Tensor[(121), float64],) */;
  %817 = cast(%var_14695, dtype="uint8") /* ty=Tensor[(1440), uint8] */;
  %818 = reshape(%817, newshape=[1440]) /* ty=Tensor[(1440), uint8] */;
  %819 = @func_13204(%818) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(2496), uint8], Tensor[(1440), uint8], Tensor[(2496), uint8], Tensor[(1056, 2), float32]) */;
  %820 = %819.4;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(1056, 2), float64] */;
  %822 = %816.0;
  %823 = acos(%821) /* ty=Tensor[(1056, 2), float64] */;
  (%822, %var_14695, %823)
}

def @func_2036() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_5662() -> Tensor[(10, 14, 1), bool] {
  %825 = fn () -> Tensor[(10, 14, 1), bool] {
    %824 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %824.0
  };
  %825() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_9524() -> Tensor[(10, 14, 3), bool] {
  @func_9522() /* ty=Tensor[(10, 14, 3), bool] */
}

def @func_11056() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) {
  @func_11054() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) */
}

def @func_11357() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %830 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %826 = @func_6595() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
    %827 = @func_4924() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %828 = %826.1;
    %829 = %827.5;
    (%828, %829)
  };
  %830() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_3494() -> Tensor[(10, 14, 1), bool] {
  %832 = fn () -> Tensor[(10, 14, 1), bool] {
    %831 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %831.0
  };
  %832() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_12578() -> Tensor[(10, 14, 1), bool] {
  %833 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_11476() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %833() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_13815(%var_13773: Tensor[(14, 13, 11), float64], %var_13800: Tensor[(1960), float64]) -> (Tensor[(14, 13, 11), float64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) {
  %834 = cast(%var_13773, dtype="float64") /* ty=Tensor[(14, 13, 11), float64] */;
  %835 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
  %836 = cast(%var_13800, dtype="float64") /* ty=Tensor[(1960), float64] */;
  %837 = reshape(%836, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %838 = @func_2958(%837) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %839 = cosh(%834) /* ty=Tensor[(14, 13, 11), float64] */;
  %840 = %835.2;
  %841 = %838.0;
  (%839, %840, %841, %var_13800)
}

def @func_1544(%var_1542: Tensor[(16, 12, 11), float32], %var_1543: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) {
  @func_1540(%var_1542, %var_1543) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */
}

def @func_7401() -> Tensor[(10, 14, 1), bool] {
  %842 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_6337() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %842() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_10672() -> (Tensor[(10, 14, 1), float32],) {
  %845 = fn () -> (Tensor[(10, 14, 1), float32],) {
    %843 = @func_7580() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) */;
    %844 = %843.0;
    (%844,)
  };
  %845() /* ty=(Tensor[(10, 14, 1), float32],) */
}

def @func_1251() -> Tensor[(10, 14, 1), bool] {
  %846 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_1240() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %846() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_7606() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %850 = fn () -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
    %847 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %848 = %847.0;
    %849 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
    (%848, %849)
  };
  %850() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_8070(%var_8069: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, ?), uint64], Tensor[(10, 14, ?), uint64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(121), float64]) {
  %869 = fn (%var_8024: Tensor[(10, 14, 1), bool]) -> (Tensor[(10, 14, ?), uint64], Tensor[(10, 14, ?), uint64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(121), float64]) {
    %851 = @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
    %852 = %851.0;
    %853 = cast(%var_8024, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
    %854 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
    %855 = cast(%852, dtype="uint64") /* ty=Tensor[(10, 14, 1), uint64] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %857 = cast(%852, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %858 = reshape(%857, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), bool] */;
    %859 = @func_6821(%858) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) */;
    %860 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %861 = cast(meta[relay.Constant][26] /* ty=Tensor[(121), float64] */, dtype="float64") /* ty=Tensor[(121), float64] */;
    %862 = reshape(%861, newshape=[121]) /* ty=Tensor[(121), float64] */;
    %863 = @func_4054(%862) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32]) */;
    %864 = minimum(%855, %856) /* ty=Tensor[(10, 14, ?), uint64] */;
    %865 = %859.1;
    %866 = %860.0;
    %867 = @func_5617() /* ty=Tensor[(10, 14, 3), bool] */;
    %868 = %863.1;
    (%864, %865, %866, %867, %868, meta[relay.Constant][26] /* ty=Tensor[(121), float64] */)
  };
  %869(%var_8069) /* ty=(Tensor[(10, 14, ?), uint64], Tensor[(10, 14, ?), uint64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(10, 14, 1), float32], Tensor[(121), float64]) */
}

def @func_3214(%var_3212: Tensor[(10, 7, 14), float32]) -> (Tensor[(10, 7, 14), float32],) {
  @func_3211(%var_3212) /* ty=(Tensor[(10, 7, 14), float32],) */
}

def @func_10206() -> Tensor[(10, 14, 1), bool] {
  %870 = @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */;
  %870.0
}

def @func_1686(%var_1684: Tensor[(13, 12, 16), uint8], %var_1685: Tensor[(13, 12, 16), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) {
  %883 = fn (%var_1665: Tensor[(13, 12, 16), uint8], %var_1666: Tensor[(13, 12, 16), uint8]) -> (Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) {
    %871 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %872 = cast(%var_1666, dtype="uint8") /* ty=Tensor[(13, 12, 16), uint8] */;
    %873 = shape_of(%var_1665, dtype="int32") /* ty=Tensor[(3), int32] */;
    %874 = cast(%var_1665, dtype="uint8") /* ty=Tensor[(13, 12, 16), uint8] */;
    %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %876 = subtract(%874, %875) /* ty=Tensor[(13, 12, 16), uint8] */;
    %877 = cast(%var_1666, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
    %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %879 = cast(%876, dtype="uint16") /* ty=Tensor[(13, 12, 16), uint16] */;
    %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %881 = %871.1;
    %882 = right_shift(%879, %880) /* ty=Tensor[(13, 12, 16), uint16] */;
    (%881, %882)
  };
  %883(%var_1684, %var_1685) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(13, 12, 16), uint16]) */
}

def @func_2045() -> (Tensor[(5, 5, 16), uint32],) {
  %886 = fn () -> (Tensor[(5, 5, 16), uint32],) {
    %884 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
    %885 = %884.5;
    (%885,)
  };
  %886() /* ty=(Tensor[(5, 5, 16), uint32],) */
}

def @func_6418() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 14), int64]) {
  %892 = fn () -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 14), int64]) {
    %887 = @func_5809() /* ty=Tensor[(10, 14, 1), bool] */;
    %888 = cast(%887, dtype="int64") /* ty=Tensor[(10, 14, 1), int64] */;
    %889 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 14, 14), bool] */, dtype="int64") /* ty=Tensor[(10, 14, 14), int64] */;
    %890 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
    %891 = logical_xor(%888, %889) /* ty=Tensor[(10, 14, 14), int64] */;
    (%890, %891)
  };
  %892() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 14), int64]) */
}

def @func_3853() -> Tensor[(10, 14, 1), bool] {
  @func_2685() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_11672() -> (Tensor[(5, 5, 16), uint32], Tensor[(5, 5, 16), uint32]) {
  %893 = @func_10364() /* ty=Tensor[(5, 5, 16), uint32] */;
  %894 = @func_8928() /* ty=Tensor[(5, 5, 16), uint32] */;
  (%893, %894)
}

def @func_14126() -> Tensor[(5, 5, 16), uint32] {
  @func_14124() /* ty=Tensor[(5, 5, 16), uint32] */
}

def @func_5954(%var_5952: Tensor[(264, 8), float32]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(264, 8), float32]) {
  @func_5951(%var_5952) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(264, 8), float32]) */
}

def @func_8454() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %900 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %895 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %896 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    %897 = %895.1;
    %898 = @func_1734() /* ty=Tensor[(10, 14, 1), bool] */;
    %899 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
    (%896, %897, %898, %899)
  };
  %900() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_4972() -> (Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) {
  @func_4970() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) */
}

def @func_5526() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  %904 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
    %901 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %902 = @func_1555() /* ty=Tensor[(10, 14, 1), bool] */;
    %903 = %901.0;
    (%902, %903)
  };
  %904() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_9981() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %910 = fn () -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %905 = @func_4790() /* ty=(Tensor[(5, 5, 16), uint32],) */;
    %906 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %907 = %905.0;
    %908 = @func_3066() /* ty=Tensor[(10, 14, 1), bool] */;
    %909 = %906.0;
    (%907, %908, %909)
  };
  %910() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_1280() -> (Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) {
  @func_1278() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(11, 11, 1), float64], Tensor[(121), float64]) */
}

def @func_7839() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64]) {
  %915 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64]) {
    %911 = @func_6078() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %912 = @func_7004() /* ty=(Tensor[(121), float64],) */;
    %913 = %911.0;
    %914 = %912.0;
    (%913, %914)
  };
  %915() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64]) */
}

def @func_11842() -> (Tensor[(10, 14, 1), bool],) {
  %918 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %916 = @func_7987() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %917 = %916.0;
    (%917,)
  };
  %918() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @main(%var_14850: Tensor[(980), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(10, 14, 980), int32]) {
  %919 = cast(%var_14850, dtype="float32") /* ty=Tensor[(980), float32] */;
  %920 = reshape(%919, newshape=[14, 70]) /* ty=Tensor[(14, 70), float32] */;
  %921 = @func_11996(%920) /* ty=(Tensor[(10, 14, 121), uint64], Tensor[(2112), float32], Tensor[(5, 5, 16), uint32], Tensor[(10, 7, 14), float32], Tensor[(14, 70), float32]) */;
  %922 = @func_7492() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) */;
  %923 = %922.0;
  %924 = cast(%923, dtype="int32") /* ty=Tensor[(10, 14, 1), int32] */;
  %925 = cast(%var_14850, dtype="int32") /* ty=Tensor[(980), int32] */;
  %926 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  %927 = %921.3;
  %928 = add(%924, %925) /* ty=Tensor[(10, 14, 980), int32] */;
  (%926, %927, %928)
}

def @func_1735() -> Tensor[(10, 14, 1), bool] {
  %930 = fn () -> Tensor[(10, 14, 1), bool] {
    %929 = @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %929.0
  };
  %930() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_4791() -> (Tensor[(5, 5, 16), uint32],) {
  %933 = fn () -> (Tensor[(5, 5, 16), uint32],) {
    %931 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
    %932 = %931.1;
    (%932,)
  };
  %933() /* ty=(Tensor[(5, 5, 16), uint32],) */
}

def @func_9180() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(121), bool], Tensor[(10, 14, 11), uint16], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64]) {
  @func_9178() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(121), bool], Tensor[(10, 14, 11), uint16], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), int64]) */
}

def @func_7640() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_6337() -> Tensor[(10, 14, 1), bool] {
  %934 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %934.0
}

def @func_393(%var_392: Tensor[(11, 11, 1), float64]) -> (Tensor[(11, 11, 1), float64],) {
  %937 = fn (%var_382: Tensor[(11, 11, 1), float64]) -> (Tensor[(11, 11, 1), float64],) {
    %935 = cast(%var_382, dtype="float64") /* ty=Tensor[(11, 11, 1), float64] */;
    %936 = atan(%935) /* ty=Tensor[(11, 11, 1), float64] */;
    (%936,)
  };
  %937(%var_392) /* ty=(Tensor[(11, 11, 1), float64],) */
}

def @func_3794() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) {
  @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_4926() -> (Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_4924() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 2112), float64], Tensor[(10, 14, 2112), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_1540(%var_1509: Tensor[(16, 12, 11), float32], %var_1510: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) {
  %938 = cast(%var_1510, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %939 = shape_of(%var_1509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%var_1509, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %942 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %943 = cast(%942, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %944 = floor_mod(%940, %941) /* ty=Tensor[(16, 12, 11), float32] */;
  %945 = sinh(%943) /* ty=Tensor[(10, 14, 1), float64] */;
  (%944, %945)
}

def @func_5462() -> (Tensor[(10, 14, 1), bool],) {
  %947 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %946 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
    (%946,)
  };
  %947() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_12664() -> (Tensor[(10, 14, 1), bool],) {
  @func_12662() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_4056(%var_4055: Tensor[(121), float64]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), float32]) {
  %956 = fn (%var_4013: Tensor[(121), float64]) -> (Tensor[(121), float64], Tensor[(10, 14, 1), float32]) {
    %948 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %949 = %948.1;
    %950 = cast(%var_4013, dtype="float64") /* ty=Tensor[(121), float64] */;
    %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(1), int32] */;
    %952 = cast(%949, dtype="float64") /* ty=Tensor[(121), float64] */;
    %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?), float64] */;
    %954 = multiply(%952, %953) /* ty=Tensor[(121), float64] */;
    %955 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
    (%954, %955)
  };
  %956(%var_4055) /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), float32]) */
}

def @func_2343() -> (Tensor[(10, 14, 1), bool],) {
  @func_2341() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_5684() -> (Tensor[(121), float64],) {
  %959 = fn () -> (Tensor[(121), float64],) {
    %957 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %958 = %957.1;
    (%958,)
  };
  %959() /* ty=(Tensor[(121), float64],) */
}

def @func_9471() -> (Tensor[(10, 14, 1), bool],) {
  @func_9469() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_13566() -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  %964 = fn () -> (Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
    %960 = @func_5128() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %961 = @func_6078() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %962 = %960.0;
    %963 = %961.0;
    (%962, %963)
  };
  %964() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_10045() -> Tensor[(10, 14, 1), bool] {
  %966 = fn () -> Tensor[(10, 14, 1), bool] {
    %965 = @func_4735() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %965.0
  };
  %966() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_5904(%var_5903: Tensor[(10, 14, 7), bool]) -> (Tensor[(10, 14, 7), float32], Tensor[(121), float64]) {
  %973 = fn (%var_5893: Tensor[(10, 14, 7), bool]) -> (Tensor[(10, 14, 7), float32], Tensor[(121), float64]) {
    %967 = @func_5594() /* ty=Tensor[(10, 14, 1), bool] */;
    %968 = cast(%967, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
    %969 = cast(%var_5893, dtype="float32") /* ty=Tensor[(10, 14, 7), float32] */;
    %970 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %971 = power(%968, %969) /* ty=Tensor[(10, 14, 7), float32] */;
    %972 = %970.0;
    (%971, %972)
  };
  %973(%var_5903) /* ty=(Tensor[(10, 14, 7), float32], Tensor[(121), float64]) */
}

def @func_1574() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %977 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
    %974 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %975 = %974.0;
    %976 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
    (%975, %976)
  };
  %977() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_10180() -> (Tensor[(5, 5, 16), uint32],) {
  %978 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
  (%978,)
}

def @func_6797() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1056, 2), float32]) {
  @func_6795() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1056, 2), float32]) */
}

def @func_13771(%var_13769: Tensor[(10, 14, 1960), bool]) -> (Tensor[(1960), int64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1960), bool]) {
  @func_13768(%var_13769) /* ty=(Tensor[(1960), int64], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1960), bool]) */
}

def @func_7048(%var_7046: uint32, %var_7047: Tensor[(400, 1), uint32]) -> (Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) {
  %992 = fn (%var_7029: uint32, %var_7030: Tensor[(400, 1), uint32]) -> (Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) {
    %979 = @func_1931() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) */;
    %980 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
    %981 = cast(%var_7029, dtype="uint32") /* ty=uint32 */;
    %982 = cast(%var_7030, dtype="uint32") /* ty=Tensor[(400, 1), uint32] */;
    %983 = reshape(%981, newshape=[]) /* ty=uint32 */;
    %984 = reshape(%982, newshape=[5, 5, 16]) /* ty=Tensor[(5, 5, 16), uint32] */;
    %985 = @func_1478(%983, %984) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
    %986 = %979.3;
    %987 = %980.1;
    %988 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
    %989 = %985.1;
    %990 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
    %991 = @func_3696() /* ty=Tensor[(10, 14, 1), float32] */;
    (%986, %987, %988, %989, %var_7029, %var_7030, %990, %991)
  };
  %992(%var_7046, %var_7047) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_7005() -> (Tensor[(121), float64],) {
  %995 = fn () -> (Tensor[(121), float64],) {
    %993 = @func_2637() /* ty=(Tensor[(121), float64],) */;
    %994 = %993.0;
    (%994,)
  };
  %995() /* ty=(Tensor[(121), float64],) */
}

def @func_7528() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64]) {
  %996 = @func_5161() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %997 = @func_5137() /* ty=(Tensor[(121), float64],) */;
  %998 = %996.0;
  %999 = %997.0;
  (%998, %999)
}

def @func_13019() -> (Tensor[(10, 14, 1), bool],) {
  %1002 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %1000 = @func_11647() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %1001 = %1000.2;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_9690(%var_9689: Tensor[(2, 20), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), int64], Tensor[(2, 20), float32]) {
  %1009 = fn (%var_9682: Tensor[(2, 20), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), int64], Tensor[(2, 20), float32]) {
    %1003 = @func_7638() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
    %1004 = cast(%var_9682, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
    %1005 = reshape(%1004, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
    %1006 = @func_7100(%1005) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(10, 14, ?), int64]) */;
    %1007 = %1003.0;
    %1008 = %1006.1;
    (%1007, %1008, %var_9682)
  };
  %1009(%var_9689) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), int64], Tensor[(2, 20), float32]) */
}

def @func_14214() -> (Tensor[(15, 5, 7), float64],) {
  %1012 = fn () -> (Tensor[(15, 5, 7), float64],) {
    %1010 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 5, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 5, 7), float64] */;
    %1011 = exp(%1010) /* ty=Tensor[(15, 5, 7), float64] */;
    (%1011,)
  };
  %1012() /* ty=(Tensor[(15, 5, 7), float64],) */
}

def @func_12720() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1960), float32], Tensor[(10, 14, 1), bool]) {
  %1013 = @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1014 = @func_9469() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1015 = @func_7490() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(1960), float64]) */;
  %1016 = %1015.2;
  %1017 = cast(%1016, dtype="float32") /* ty=Tensor[(1960), float32] */;
  %1018 = log(%1017) /* ty=Tensor[(1960), float32] */;
  %1019 = cast(%1018, dtype="float32") /* ty=Tensor[(1960), float32] */;
  %1020 = %1013.0;
  %1021 = %1014.0;
  %1022 = cos(%1019) /* ty=Tensor[(1960), float32] */;
  %1023 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
  (%1020, %1021, %1022, %1023)
}

def @func_1506() -> (Tensor[(10, 14, 1), bool],) {
  @func_1504() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_1504() -> (Tensor[(10, 14, 1), bool],) {
  %1024 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  (%1024,)
}

def @func_11054() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 40), float64], Tensor[(121), float64]) {
  %1025 = @func_10233() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 40), float32]) */;
  %1026 = %1025.1;
  %1027 = cast(%1026, dtype="float32") /* ty=Tensor[(10, 14, 40), float32] */;
  %1028 = cosh(%1027) /* ty=Tensor[(10, 14, 40), float32] */;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(10, 14, 40), float64] */;
  %1030 = @func_9828() /* ty=(Tensor[(121), float64],) */;
  %1031 = @func_6337() /* ty=Tensor[(10, 14, 1), bool] */;
  %1032 = acosh(%1029) /* ty=Tensor[(10, 14, 40), float64] */;
  %1033 = %1030.0;
  (%1031, %1032, %1033)
}

def @func_6207() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %1034 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1035 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %1036 = %1034.0;
  %1037 = %1035.1;
  %1038 = @func_4701() /* ty=Tensor[(10, 14, 1), bool] */;
  (%1036, %1037, %1038)
}

def @func_11649() -> (Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_11647() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_3955(%var_3954: Tensor[(1680), bool]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) {
  %1046 = fn (%var_3951: Tensor[(1680), bool]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) {
    %1039 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
    %1040 = cast(%var_3951, dtype="bool") /* ty=Tensor[(1680), bool] */;
    %1041 = reshape(%1040, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), bool] */;
    %1042 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
    %1043 = @func_3493() /* ty=Tensor[(10, 14, 1), bool] */;
    %1044 = %1039.0;
    %1045 = @func_3624(%1041) /* ty=Tensor[(10, 14, 12), uint32] */;
    (%1042, %1043, %1044, %1045, %var_3951)
  };
  %1046(%var_3954) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) */
}

def @func_11477() -> Tensor[(10, 14, 1), bool] {
  %1047 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_4701() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %1047() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_1392() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool]) {
  %1048 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %1049 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %1050 = %1048.1;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_7580() -> (Tensor[(10, 14, 1), float32], Tensor[(5, 5, 16), uint32]) {
  %1052 = @func_3359() /* ty=Tensor[(10, 14, 1), float32] */;
  %1053 = @func_5242() /* ty=Tensor[(5, 5, 16), uint32] */;
  (%1052, %1053)
}

def @func_5138() -> (Tensor[(121), float64],) {
  %1056 = fn () -> (Tensor[(121), float64],) {
    %1054 = @func_1392() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %1055 = %1054.0;
    (%1055,)
  };
  %1056() /* ty=(Tensor[(121), float64],) */
}

def @func_4837() -> (Tensor[(10, 14, 1), bool],) {
  @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_3041() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  @func_3039() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */
}

def @func_3067() -> Tensor[(10, 14, 1), bool] {
  %1057 = fn () -> Tensor[(10, 14, 1), bool] {
    @func_1555() /* ty=Tensor[(10, 14, 1), bool] */
  };
  %1057() /* ty=Tensor[(10, 14, 1), bool] */
}

def @func_5809() -> Tensor[(10, 14, 1), bool] {
  %1058 = @func_4835() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1058.0
}

def @func_3726() -> Tensor[(5, 84), bool] {
  %1060 = fn () -> Tensor[(5, 84), bool] {
    %1059 = @func_2804() /* ty=(Tensor[(10, 14, 14), float64], Tensor[(5, 84), bool]) */;
    %1059.1
  };
  %1060() /* ty=Tensor[(5, 84), bool] */
}

def @func_6114(%var_6113: Tensor[(980), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) {
  %1073 = fn (%var_6101: Tensor[(980), float32]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) {
    %1061 = @func_3451() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %1062 = @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */;
    %1063 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %1064 = cast(%var_6101, dtype="float32") /* ty=Tensor[(980), float32] */;
    %1065 = reshape(%1064, newshape=[10, 7, 14]) /* ty=Tensor[(10, 7, 14), float32] */;
    %1066 = @func_3211(%1065) /* ty=(Tensor[(10, 7, 14), float32],) */;
    %1067 = @func_3792() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32]) */;
    %1068 = %1061.0;
    %1069 = %1062.1;
    %1070 = %1063.1;
    %1071 = %1066.0;
    %1072 = %1067.1;
    (%1068, %1069, %1070, %1071, %var_6101, %1072)
  };
  %1073(%var_6113) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 7, 14), float32], Tensor[(980), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_6626() -> (Tensor[(121), float32],) {
  %1078 = fn () -> (Tensor[(121), float32],) {
    %1074 = @func_5683() /* ty=(Tensor[(121), float64],) */;
    %1075 = %1074.0;
    %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(121), float32] */;
    %1077 = atan(%1076) /* ty=Tensor[(121), float32] */;
    (%1077,)
  };
  %1078() /* ty=(Tensor[(121), float32],) */
}

def @func_12464(%var_12463: Tensor[(108), float64]) -> (Tensor[(6, 5, ?), int16], Tensor[(1056, 2), float32], Tensor[(3, 3, 12), float64], Tensor[(10, 14, 108), uint32], Tensor[(10, 14, 108), float32]) {
  %1102 = fn (%var_12422: Tensor[(108), float64]) -> (Tensor[(6, 5, ?), int16], Tensor[(1056, 2), float32], Tensor[(3, 3, 12), float64], Tensor[(10, 14, 108), uint32], Tensor[(10, 14, 108), float32]) {
    %1079 = @func_4161() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) */;
    %1080 = @func_7918() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float32], Tensor[(1056, 2), float32], Tensor[(5, 84), bool]) */;
    %1081 = cast(%var_12422, dtype="float64") /* ty=Tensor[(108), float64] */;
    %1082 = reshape(%1081, newshape=[3, 3, 12]) /* ty=Tensor[(3, 3, 12), float64] */;
    %1083 = @func_12072(%1082) /* ty=(Tensor[(3, 3, 12), float64],) */;
    %1084 = %1080.2;
    %1085 = cast(%1084, dtype="float32") /* ty=Tensor[(1056, 2), float32] */;
    %1086 = reshape(%1085, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %1087 = @func_4095(%1086) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
    %1088 = %1087.4;
    %1089 = cast(%var_12422, dtype="uint32") /* ty=Tensor[(108), uint32] */;
    %1090 = cast(%1088, dtype="uint32") /* ty=Tensor[(10, 14, 1), uint32] */;
    %1091 = @func_7987() /* ty=(Tensor[(10, 14, 1), bool],) */;
    %1092 = %1091.0;
    %1093 = cast(%1088, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %1094 = cast(%var_12422, dtype="float64") /* ty=Tensor[(108), float64] */;
    %1095 = power(%1093, %1094) /* ty=Tensor[(10, 14, 108), float64] */;
    %1096 = cast(%1092, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
    %1097 = cast(%1095, dtype="float32") /* ty=Tensor[(10, 14, 108), float32] */;
    %1098 = %1079.2;
    %1099 = %1083.0;
    %1100 = right_shift(%1089, %1090) /* ty=Tensor[(10, 14, 108), uint32] */;
    %1101 = mod(%1096, %1097) /* ty=Tensor[(10, 14, 108), float32] */;
    (%1098, %1084, %1099, %1100, %1101)
  };
  %1102(%var_12463) /* ty=(Tensor[(6, 5, ?), int16], Tensor[(1056, 2), float32], Tensor[(3, 3, 12), float64], Tensor[(10, 14, 108), uint32], Tensor[(10, 14, 108), float32]) */
}

def @func_10126(%var_10124: Tensor[(2112), float32]) -> (Tensor[(2112), float64],) {
  @func_10123(%var_10124) /* ty=(Tensor[(2112), float64],) */
}

def @func_5346() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) {
  %1110 = fn () -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) {
    %1103 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
    %1104 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
    %1105 = cast(%1104, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %1106 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 14, 15), bool] */, dtype="bool") /* ty=Tensor[(10, 14, 15), bool] */;
    %1107 = %1103.1;
    %1108 = less(%1105, %1106) /* ty=Tensor[(10, 14, 15), bool] */;
    %1109 = @func_3359() /* ty=Tensor[(10, 14, 1), float32] */;
    (%1107, %1108, %1109)
  };
  %1110() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 15), bool], Tensor[(10, 14, 1), float32]) */
}

def @func_14602(%var_14600: Tensor[(5, 84), bool], %var_14601: uint32) -> (Tensor[(121), float64], Tensor[(5, 84), float64], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(10, 14, 1), bool]) {
  %1131 = fn (%var_14520: Tensor[(5, 84), bool], %var_14581: uint32) -> (Tensor[(121), float64], Tensor[(5, 84), float64], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(10, 14, 1), bool]) {
    %1111 = @func_9828() /* ty=(Tensor[(121), float64],) */;
    %1112 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
    %1113 = cast(%var_14520, dtype="uint8") /* ty=Tensor[(5, 84), uint8] */;
    %1114 = shape_of(%1112, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1115 = cast(%1112, dtype="uint8") /* ty=Tensor[(5, 84), uint8] */;
    %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1117 = bitwise_or(%1115, %1116) /* ty=Tensor[(5, 84), uint8] */;
    %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
    %1119 = tan(%1118) /* ty=Tensor[(5, 84), float64] */;
    %1120 = cast(%1119, dtype="float64") /* ty=Tensor[(5, 84), float64] */;
    %1121 = cast(%var_14581, dtype="uint32") /* ty=uint32 */;
    %1122 = cast(meta[relay.Constant][30] /* ty=Tensor[(400), uint32] */, dtype="uint32") /* ty=Tensor[(400), uint32] */;
    %1123 = reshape(%1121, newshape=[]) /* ty=uint32 */;
    %1124 = reshape(%1122, newshape=[400, 1]) /* ty=Tensor[(400, 1), uint32] */;
    %1125 = @func_7045(%1123, %1124) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], uint32, Tensor[(400, 1), uint32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float32]) */;
    %1126 = @func_3540() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
    %1127 = %1111.0;
    %1128 = asinh(%1120) /* ty=Tensor[(5, 84), float64] */;
    %1129 = %1125.3;
    %1130 = %1126.1;
    (%1127, %1128, %1129, %var_14581, meta[relay.Constant][30] /* ty=Tensor[(400), uint32] */, %1130)
  };
  %1131(%var_14600, %var_14601) /* ty=(Tensor[(121), float64], Tensor[(5, 84), float64], Tensor[(10, 14, 1), bool], uint32, Tensor[(400), uint32], Tensor[(10, 14, 1), bool]) */
}

def @func_11277(%var_11275: Tensor[(6, 10, 14), float32]) -> (Tensor[(6, 10, 14), float32], Tensor[(10, 14, 1), bool]) {
  @func_11274(%var_11275) /* ty=(Tensor[(6, 10, 14), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_10930(%var_10929: Tensor[(121), float64]) -> (Tensor[(121), bool],) {
  %1138 = fn (%var_10907: Tensor[(121), float64]) -> (Tensor[(121), bool],) {
    %1132 = @func_8551() /* ty=Tensor[(121), float64] */;
    %1133 = cast(%var_10907, dtype="bool") /* ty=Tensor[(121), bool] */;
    %1134 = shape_of(%1132, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1135 = cast(%1132, dtype="bool") /* ty=Tensor[(121), bool] */;
    %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1137 = logical_or(%1135, %1136) /* ty=Tensor[(121), bool] */;
    (%1137,)
  };
  %1138(%var_10929) /* ty=(Tensor[(121), bool],) */
}

def @func_12286(%var_12279: Tensor[(1, 108), float64]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 12), float64], Tensor[(1, 108), float64]) {
  %1139 = @func_6774() /* ty=(Tensor[(10, 14, ?), uint8],) */;
  %1140 = cast(%var_12279, dtype="float64") /* ty=Tensor[(1, 108), float64] */;
  %1141 = reshape(%1140, newshape=[3, 3, 12]) /* ty=Tensor[(3, 3, 12), float64] */;
  %1142 = @func_12072(%1141) /* ty=(Tensor[(3, 3, 12), float64],) */;
  %1143 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %1144 = %1139.0;
  %1145 = %1142.0;
  (%1143, %1144, %1145, %var_12279)
}

def @func_14730(%var_14728: Tensor[(1440), uint8]) -> (Tensor[(121), float64], Tensor[(1440), uint8], Tensor[(1056, 2), float64]) {
  @func_14727(%var_14728) /* ty=(Tensor[(121), float64], Tensor[(1440), uint8], Tensor[(1056, 2), float64]) */
}

def @func_10234() -> (Tensor[(121), float64], Tensor[(10, 14, 40), float32]) {
  %1154 = fn () -> (Tensor[(121), float64], Tensor[(10, 14, 40), float32]) {
    %1146 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 40), float32] */, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
    %1147 = reshape(%1146, newshape=[2, 20]) /* ty=Tensor[(2, 20), float32] */;
    %1148 = @func_9688(%1147) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), int64], Tensor[(2, 20), float32]) */;
    %1149 = %1148.1;
    %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(10, 14, ?), float32] */;
    %1151 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 40), float32] */, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
    %1152 = @func_8551() /* ty=Tensor[(121), float64] */;
    %1153 = power(%1150, %1151) /* ty=Tensor[(10, 14, 40), float32] */;
    (%1152, %1153)
  };
  %1154() /* ty=(Tensor[(121), float64], Tensor[(10, 14, 40), float32]) */
}

def @func_12289(%var_12287: Tensor[(1, 108), float64]) -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 12), float64], Tensor[(1, 108), float64]) {
  @func_12286(%var_12287) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 12), float64], Tensor[(1, 108), float64]) */
}

def @func_3697() -> Tensor[(10, 14, 1), float32] {
  %1156 = fn () -> Tensor[(10, 14, 1), float32] {
    %1155 = @func_2737() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32]) */;
    %1155.2
  };
  %1156() /* ty=Tensor[(10, 14, 1), float32] */
}

def @func_12778() -> Tensor[(10, 14, 1), float32] {
  @func_12776() /* ty=Tensor[(10, 14, 1), float32] */
}

def @func_4331(%var_4329: Tensor[(2112), float32]) -> (Tensor[(121), float64], Tensor[(5, 84), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32]) {
  %1157 = @func_2637() /* ty=(Tensor[(121), float64],) */;
  %1158 = cast(%var_4329, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %1159 = cast(%var_4329, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %1160 = reshape(%1158, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %1161 = reshape(%1159, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %1162 = @func_1540(%1160, %1161) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(10, 14, 1), float64]) */;
  %1163 = %1157.0;
  %1164 = @func_3878() /* ty=Tensor[(5, 84), bool] */;
  %1165 = %1162.1;
  (%1163, %1164, %1165, %var_4329)
}

def @func_3675() -> (Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) {
  @func_3673() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), float32], Tensor[(10, 14, 1), bool]) */
}

def @func_4970() -> (Tensor[(10, 14, 1), float32], Tensor[(5, 84), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 14), float32], Tensor[(980, 2), float64]) {
  %1166 = @func_4243() /* ty=(Tensor[(10, 14, 1), bool],) */;
  %1167 = %1166.0;
  %1168 = cast(%1167, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %1169 = log10(%1168) /* ty=Tensor[(10, 14, 1), float32] */;
  %1170 = cast(%1169, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %1171 = @func_2034() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %1172 = cast(meta[relay.Constant][32] /* ty=Tensor[(980, 2), float64] */, dtype="float64") /* ty=Tensor[(980, 2), float64] */;
  %1173 = reshape(%1172, newshape=[10, 14, 14]) /* ty=Tensor[(10, 14, 14), float64] */;
  %1174 = @func_2958(%1173) /* ty=(Tensor[(10, 14, 14), float32], Tensor[(10, 14, 14), float32]) */;
  %1175 = rsqrt(%1170) /* ty=Tensor[(10, 14, 1), float32] */;
  %1176 = @func_3725() /* ty=Tensor[(5, 84), bool] */;
  %1177 = %1171.0;
  %1178 = %1174.0;
  (%1175, %1176, %1177, %1178, meta[relay.Constant][32] /* ty=Tensor[(980, 2), float64] */)
}

def @func_13433() -> (Tensor[(5, 5, 16), float64],) {
  %1181 = fn () -> (Tensor[(5, 5, 16), float64],) {
    %1179 = @func_11168() /* ty=(Tensor[(5, 5, 16), float64],) */;
    %1180 = %1179.0;
    (%1180,)
  };
  %1181() /* ty=(Tensor[(5, 5, 16), float64],) */
}

def @func_7102(%var_7101: Tensor[(2, 2, 10), float32]) -> (Tensor[(2, 2, 10), float32], Tensor[(10, 14, ?), int64]) {
  %1186 = fn (%var_7076: Tensor[(2, 2, 10), float32]) -> (Tensor[(2, 2, 10), float32], Tensor[(10, 14, ?), int64]) {
    %1182 = cast(%var_7076, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
    %1183 = @func_6323() /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, ?), int64]) */;
    %1184 = exp(%1182) /* ty=Tensor[(2, 2, 10), float32] */;
    %1185 = %1183.1;
    (%1184, %1185)
  };
  %1186(%var_7101) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(10, 14, ?), int64]) */
}

def @func_8404() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) {
  %1187 = @func_1250() /* ty=Tensor[(10, 14, 1), bool] */;
  %1188 = cast(%1187, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %1189 = reshape(%1188, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), bool] */;
  %1190 = @func_6821(%1189) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, ?), uint64]) */;
  %1191 = %1190.0;
  (%1187, %1191)
}

def @func_6795() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1056, 2), float32]) {
  %1192 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
  %1193 = cast(meta[relay.Constant][33] /* ty=Tensor[(1056, 2), float32] */, dtype="float32") /* ty=Tensor[(1056, 2), float32] */;
  %1194 = reshape(%1193, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %1195 = @func_4095(%1194) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), float64], Tensor[(2112), float32], Tensor[(10, 14, 1), bool]) */;
  %1196 = %1192.0;
  %1197 = %1195.1;
  (%1196, %1197, meta[relay.Constant][33] /* ty=Tensor[(1056, 2), float32] */)
}

def @func_10396() -> (Tensor[(10, 14, 1), bool],) {
  %1198 = @func_4161() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(6, 5, ?), int16]) */;
  %1199 = %1198.1;
  (%1199,)
}

def @func_4938() -> Tensor[(5, 84), bool] {
  @func_4936() /* ty=Tensor[(5, 84), bool] */
}

def @func_1931() -> (Tensor[(121), float64], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 3), bool], Tensor[(5, 84), bool], Tensor[(5, 5, 16), uint32], uint32, Tensor[(400), uint32]) {
  %1200 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %1201 = @func_1376() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(121), float64], Tensor[(10, 14, 1), bool]) */;
  %1202 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 84), bool] */, dtype="bool") /* ty=Tensor[(5, 84), bool] */;
  %1203 = reshape(%1202, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), bool] */;
  %1204 = @func_1774(%1203) /* ty=(Tensor[(10, 14, 3), bool], Tensor[(10, 14, 3), float64]) */;
  %1205 = cast(meta[relay.Constant][35] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1206 = cast(meta[relay.Constant][36] /* ty=Tensor[(400), uint32] */, dtype="uint32") /* ty=Tensor[(400), uint32] */;
  %1207 = reshape(%1205, newshape=[]) /* ty=uint32 */;
  %1208 = reshape(%1206, newshape=[5, 5, 16]) /* ty=Tensor[(5, 5, 16), uint32] */;
  %1209 = @func_1478(%1207, %1208) /* ty=(Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 1), bool]) */;
  %1210 = %1200.1;
  %1211 = @func_1240() /* ty=Tensor[(10, 14, 1), bool] */;
  %1212 = %1201.2;
  %1213 = %1204.0;
  %1214 = %1209.0;
  (%1210, %1211, %1212, %1213, meta[relay.Constant][34] /* ty=Tensor[(5, 84), bool] */, %1214, meta[relay.Constant][35] /* ty=uint32 */, meta[relay.Constant][36] /* ty=Tensor[(400), uint32] */)
}

def @func_4736() -> (Tensor[(10, 14, 1), bool],) {
  %1216 = fn () -> (Tensor[(10, 14, 1), bool],) {
    %1215 = @func_3853() /* ty=Tensor[(10, 14, 1), bool] */;
    (%1215,)
  };
  %1216() /* ty=(Tensor[(10, 14, 1), bool],) */
}

def @func_14051() -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1296), float32]) {
  %1223 = fn () -> (Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1296), float32]) {
    %1217 = @func_1573() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %1218 = cast(meta[relay.Constant][37] /* ty=Tensor[(1296), float32] */, dtype="float32") /* ty=Tensor[(1296), float32] */;
    %1219 = reshape(%1218, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), float32] */;
    %1220 = @func_8148(%1219) /* ty=(Tensor[(9, 12, 12), float32], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool]) */;
    %1221 = %1217.1;
    %1222 = %1220.1;
    (%1221, %1222, meta[relay.Constant][37] /* ty=Tensor[(1296), float32] */)
  };
  %1223() /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(1296), float32]) */
}

def @func_13936() -> (Tensor[(10, 14, 121), bool], Tensor[(10, 14, 1680), int16]) {
  %1236 = fn () -> (Tensor[(10, 14, 121), bool], Tensor[(10, 14, 1680), int16]) {
    %1224 = cast(meta[relay.Constant][38] /* ty=Tensor[(1680), bool] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
    %1225 = reshape(%1224, newshape=[1680]) /* ty=Tensor[(1680), bool] */;
    %1226 = @func_3953(%1225) /* ty=(Tensor[(10, 14, 1), bool], Tensor[(10, 14, 1), bool], Tensor[(5, 5, 16), uint32], Tensor[(10, 14, 12), uint32], Tensor[(1680), bool]) */;
    %1227 = %1226.0;
    %1228 = @func_6243() /* ty=(Tensor[(121), bool],) */;
    %1229 = %1228.0;
    %1230 = cast(%1227, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %1231 = cast(%1229, dtype="bool") /* ty=Tensor[(121), bool] */;
    %1232 = cast(meta[relay.Constant][38] /* ty=Tensor[(1680), bool] */, dtype="int16") /* ty=Tensor[(1680), int16] */;
    %1233 = cast(%1227, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
    %1234 = not_equal(%1230, %1231) /* ty=Tensor[(10, 14, 121), bool] */;
    %1235 = right_shift(%1232, %1233) /* ty=Tensor[(10, 14, 1680), int16] */;
    (%1234, %1235)
  };
  %1236() /* ty=(Tensor[(10, 14, 121), bool], Tensor[(10, 14, 1680), int16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

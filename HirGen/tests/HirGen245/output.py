import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_573 = relay.var("var_573", dtype = "int8", shape = (10, 7, 16))#candidate|573|(10, 7, 16)|var|int8
var_574 = relay.var("var_574", dtype = "int8", shape = (10, 7, 16))#candidate|574|(10, 7, 16)|var|int8
bop_575 = relay.equal(var_573.astype('bool'), relay.reshape(var_574.astype('bool'), relay.shape_of(var_573))) # shape=(10, 7, 16)
uop_580 = relay.sigmoid(var_574.astype('float64')) # shape=(10, 7, 16)
output = relay.Tuple([bop_575,uop_580,])
output2 = relay.Tuple([bop_575,uop_580,])
func_588 = relay.Function([var_573,var_574,], output)
mod['func_588'] = func_588
mod = relay.transform.InferType()(mod)
var_589 = relay.var("var_589", dtype = "int8", shape = (10, 7, 16))#candidate|589|(10, 7, 16)|var|int8
var_590 = relay.var("var_590", dtype = "int8", shape = (10, 7, 16))#candidate|590|(10, 7, 16)|var|int8
output = func_588(var_589,var_590,)
func_591 = relay.Function([var_589,var_590,], output)
mutated_mod['func_591'] = func_591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_735 = relay.var("var_735", dtype = "uint64", shape = (14, 15, 4))#candidate|735|(14, 15, 4)|var|uint64
var_736 = relay.var("var_736", dtype = "uint64", shape = (14, 15, 4))#candidate|736|(14, 15, 4)|var|uint64
bop_737 = relay.not_equal(var_735.astype('bool'), relay.reshape(var_736.astype('bool'), relay.shape_of(var_735))) # shape=(14, 15, 4)
output = bop_737
output2 = bop_737
func_742 = relay.Function([var_735,var_736,], output)
mod['func_742'] = func_742
mod = relay.transform.InferType()(mod)
var_743 = relay.var("var_743", dtype = "uint64", shape = (14, 15, 4))#candidate|743|(14, 15, 4)|var|uint64
var_744 = relay.var("var_744", dtype = "uint64", shape = (14, 15, 4))#candidate|744|(14, 15, 4)|var|uint64
output = func_742(var_743,var_744,)
func_745 = relay.Function([var_743,var_744,], output)
mutated_mod['func_745'] = func_745
mutated_mod = relay.transform.InferType()(mutated_mod)
const_804 = relay.const([[[9,-5,-3,3,-9,-7,-9,-1,1,6,4,8,-4],[10,-7,10,-4,4,5,5,4,-1,7,9,-9,7],[-5,-5,5,8,6,-10,2,8,-3,-3,4,-9,5],[-8,-3,10,-9,-6,2,-6,2,1,-2,-3,-3,-4],[-10,6,3,4,7,5,-10,-10,-6,3,2,6,-6],[-3,-7,3,-1,7,-3,1,2,7,10,-4,-4,6],[4,2,-1,6,3,7,8,-2,-2,10,1,-8,5],[-5,3,-6,3,5,-4,-2,-2,-5,-3,-3,9,1],[-3,9,2,-8,7,-2,-4,4,9,9,5,4,-10],[-4,-10,-9,3,2,3,-10,6,1,-8,9,1,9],[-3,-5,-9,2,-4,-4,-8,-2,-8,1,6,-5,-7],[2,-4,5,5,10,10,5,10,3,-8,9,9,2],[-2,-10,3,6,-2,-5,-2,2,7,-8,-7,-7,5]],[[-2,5,-10,1,5,-1,-3,1,-1,-3,5,-10,-8],[-1,3,2,2,1,4,1,8,-8,4,-7,2,-8],[3,-9,7,8,8,7,-5,2,-10,9,-3,-7,6],[-2,7,7,-9,10,8,8,-8,-8,1,4,-2,-7],[10,2,9,6,7,3,8,4,1,-4,4,4,1],[-7,9,-8,10,-4,-7,3,2,1,-1,-9,-6,-3],[-4,-8,-5,10,8,2,9,5,6,9,7,-1,-5],[-5,3,3,-7,4,3,3,-1,9,2,-3,5,-6],[2,-3,8,-7,-7,10,-9,-5,8,6,-4,-9,-3],[5,-6,2,-10,4,4,9,-4,-5,-3,7,-10,-1],[2,-3,4,-2,-8,-8,-9,6,-6,5,6,-2,2],[-10,-4,9,3,-8,-7,-7,5,5,8,5,8,1],[-10,1,-2,-6,-4,-2,-4,-3,-3,8,-4,1,-4]],[[-5,8,4,-8,-2,8,7,-3,-8,-9,2,1,-1],[-4,-10,-3,-1,-10,-1,-2,9,2,-3,-4,4,5],[-9,-7,-3,3,7,8,-8,-5,-7,3,10,-3,-2],[5,4,3,6,2,-9,5,-2,4,-1,9,7,-7],[7,9,9,-7,-3,4,8,-1,2,3,-10,4,-7],[1,-4,10,-8,-3,4,-8,8,-8,-8,3,8,-6],[2,-10,-2,2,1,9,10,6,2,3,-6,6,2],[7,-5,8,2,4,-1,2,-8,-9,3,-4,-9,-6],[-8,10,2,-1,10,-4,-9,8,7,-10,-3,5,6],[2,6,10,-10,7,-10,1,-10,-4,-5,7,-4,-7],[7,4,1,7,-4,5,-1,-8,-3,-5,-3,-9,3],[8,-2,4,-9,3,6,1,-10,6,9,4,-10,-2],[-8,-1,9,-10,-6,-2,-5,-5,4,-3,-2,-6,10]],[[2,1,-4,7,9,7,-8,-6,-8,-5,1,10,-4],[10,3,3,3,1,2,5,5,1,-6,4,-7,8],[-8,2,1,5,-6,-1,-10,-8,-4,4,-6,-3,-3],[8,-7,9,-5,9,-5,-1,-3,-9,7,-7,-10,-10],[-7,1,-3,-1,-5,6,-3,7,-9,8,3,7,3],[-10,-5,1,5,-4,-1,9,-5,-6,-9,-6,-3,2],[-10,-7,5,7,-10,-1,-10,-5,10,-7,-8,5,7],[-8,6,6,1,2,-3,-5,9,9,-1,-10,-8,-9],[-9,-6,6,7,-3,1,-10,-9,1,-5,-10,-10,9],[-3,5,5,-6,2,-2,7,4,1,-10,7,4,2],[4,-6,-1,2,-1,-2,6,1,3,-3,-6,2,-5],[-7,-1,-5,-10,10,2,-7,-6,9,3,2,-8,6],[1,9,-9,5,3,6,2,5,7,6,9,7,-7]]], dtype = "int64")#candidate|804|(4, 13, 13)|const|int64
const_805 = relay.const([[[-6,-4,-4,9,-2,-7,8,-6,-10,6,9,10,-7],[1,5,-9,-4,10,-7,9,5,-10,3,6,9,9],[-9,1,6,-7,3,-9,-10,7,9,5,-2,-7,-1],[10,-4,9,8,1,-3,-2,-4,-3,4,-2,-6,7],[3,4,-6,5,5,-5,-3,-6,5,-3,3,-7,-4],[9,7,-7,-9,-8,7,-9,9,-5,10,-1,3,8],[-9,-10,4,-2,-5,-5,10,-3,9,1,-6,4,-10],[-5,-8,7,-7,-10,-8,4,-1,-2,-4,-2,-7,-3],[-7,-10,-2,10,-7,-9,5,5,-2,-7,-8,8,3],[7,10,4,-6,8,9,-10,-4,1,8,3,7,-7],[-10,-8,-4,5,-4,-5,3,-10,1,1,9,-5,9],[1,1,-2,-2,3,7,1,-7,4,2,-4,-4,-8],[-6,3,2,-3,9,-3,-8,-8,6,-6,8,5,-4]],[[2,-4,4,-3,7,-9,8,8,1,-8,10,-10,7],[6,9,10,9,-2,-4,-8,-8,-3,-8,-8,8,-10],[9,7,-2,-9,3,4,1,-3,-1,-6,-1,-5,-2],[10,10,8,-3,-7,-8,-8,4,-2,-8,-10,7,7],[-6,9,-7,8,8,-7,1,-6,2,9,-5,-1,-6],[-1,-8,3,1,2,10,7,7,8,10,6,-7,-8],[-6,7,-1,-6,-7,4,10,7,-7,-7,8,2,-1],[-10,7,-3,8,-6,-6,-9,-3,10,9,5,-2,10],[-10,-8,5,1,7,-5,-4,5,5,-5,-6,-4,-4],[3,-3,-6,7,6,-3,4,-1,-6,-3,-4,-4,9],[-4,5,3,-4,10,9,-5,1,-2,-9,-5,-5,-5],[-7,8,6,-8,-1,-6,-7,-4,-6,-1,-6,-2,-3],[9,5,7,-10,-7,-8,-7,6,-2,2,7,-5,-2]],[[1,-6,-1,4,-9,-8,-7,-5,-10,2,10,8,1],[9,-6,-9,-7,3,9,5,-6,7,10,8,8,5],[-5,-9,10,6,-1,3,1,-7,3,10,-7,-5,-1],[-6,-3,7,5,8,-6,-1,1,-6,-2,-5,-6,-4],[-4,-9,-2,-3,5,-6,-8,6,-9,10,3,-4,-8],[9,4,9,4,2,-3,2,-7,-2,3,8,5,3],[3,-4,-8,6,-6,-1,-5,8,-10,-9,1,3,-9],[7,8,-3,-9,1,-10,9,-4,-8,-3,-6,-7,1],[4,1,4,7,-7,-2,-7,-2,-10,3,-1,-2,7],[7,-2,-3,4,-2,-1,-10,-1,-7,-5,-5,1,-10],[1,9,1,4,-6,-10,3,9,-10,4,-1,-10,-1],[-3,7,7,7,-7,-1,10,10,-6,-3,-4,-3,-4],[1,-3,3,7,9,-7,1,5,-7,-9,-8,-7,-1]],[[-3,1,-1,5,7,7,-7,1,5,8,-3,-6,9],[7,-2,-8,5,6,2,-7,7,-4,-2,-8,6,-6],[10,-9,-5,-6,-7,4,4,7,1,-6,7,3,-6],[8,-7,-10,6,10,8,-10,2,8,-6,-1,-8,-5],[8,6,-1,7,9,-8,7,-8,-4,3,-2,2,-5],[-7,2,9,2,-6,-10,-10,10,-3,6,5,10,7],[-6,-2,-2,3,-10,3,-8,4,10,6,-4,9,2],[9,10,4,5,-9,6,8,-6,10,10,3,-2,1],[10,3,4,2,7,1,5,-8,4,10,9,-6,-6],[8,-6,1,9,-7,-7,6,-6,-6,9,-3,2,-4],[3,-7,-7,-8,-3,8,-4,-2,4,5,-7,5,6],[10,1,-8,-2,-7,1,-1,-4,-4,-3,-7,6,-1],[4,-10,3,-10,-4,1,5,-4,-3,9,-5,6,-1]]], dtype = "int64")#candidate|805|(4, 13, 13)|const|int64
bop_806 = relay.maximum(const_804.astype('int64'), relay.reshape(const_805.astype('int64'), relay.shape_of(const_804))) # shape=(4, 13, 13)
bop_809 = relay.bitwise_xor(const_805.astype('int64'), relay.reshape(const_804.astype('int64'), relay.shape_of(const_805))) # shape=(4, 13, 13)
output = relay.Tuple([bop_806,bop_809,])
output2 = relay.Tuple([bop_806,bop_809,])
func_815 = relay.Function([], output)
mod['func_815'] = func_815
mod = relay.transform.InferType()(mod)
mutated_mod['func_815'] = func_815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mutated_mod.get_global_var('func_815')
call_816 = func_815_call()
output = call_816
func_817 = relay.Function([], output)
mutated_mod['func_817'] = func_817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_858 = relay.TupleGetItem(func_815_call(), 1)
call_859 = relay.TupleGetItem(func_817_call(), 1)
uop_869 = relay.sin(call_858.astype('float32')) # shape=(4, 13, 13)
uop_871 = relay.sin(call_859.astype('float32')) # shape=(4, 13, 13)
bop_872 = relay.logical_xor(uop_869.astype('uint64'), relay.reshape(call_858.astype('uint64'), relay.shape_of(uop_869))) # shape=(4, 13, 13)
bop_875 = relay.logical_xor(uop_871.astype('uint64'), relay.reshape(call_859.astype('uint64'), relay.shape_of(uop_871))) # shape=(4, 13, 13)
bop_879 = relay.multiply(call_858.astype('int8'), relay.reshape(uop_869.astype('int8'), relay.shape_of(call_858))) # shape=(4, 13, 13)
bop_882 = relay.multiply(call_859.astype('int8'), relay.reshape(uop_871.astype('int8'), relay.shape_of(call_859))) # shape=(4, 13, 13)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_889 = relay.TupleGetItem(func_815_call(), 1)
call_890 = relay.TupleGetItem(func_817_call(), 1)
bop_891 = relay.bitwise_and(call_889.astype('uint64'), relay.reshape(bop_872.astype('uint64'), relay.shape_of(call_889))) # shape=(4, 13, 13)
bop_894 = relay.bitwise_and(call_890.astype('uint64'), relay.reshape(bop_875.astype('uint64'), relay.shape_of(call_890))) # shape=(4, 13, 13)
output = relay.Tuple([bop_879,bop_891,])
output2 = relay.Tuple([bop_882,bop_894,])
func_897 = relay.Function([], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
mutated_mod['func_897'] = func_897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mutated_mod.get_global_var('func_897')
call_898 = func_897_call()
output = call_898
func_899 = relay.Function([], output)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_929 = relay.TupleGetItem(func_897_call(), 1)
call_930 = relay.TupleGetItem(func_899_call(), 1)
uop_955 = relay.cosh(call_929.astype('float32')) # shape=(4, 13, 13)
uop_957 = relay.cosh(call_930.astype('float32')) # shape=(4, 13, 13)
var_960 = relay.var("var_960", dtype = "float32", shape = (4, 13, 13))#candidate|960|(4, 13, 13)|var|float32
bop_961 = relay.floor_divide(uop_955.astype('float32'), relay.reshape(var_960.astype('float32'), relay.shape_of(uop_955))) # shape=(4, 13, 13)
bop_964 = relay.floor_divide(uop_957.astype('float32'), relay.reshape(var_960.astype('float32'), relay.shape_of(uop_957))) # shape=(4, 13, 13)
func_742_call = mod.get_global_var('func_742')
func_745_call = mutated_mod.get_global_var('func_745')
const_969 = relay.const([-1,-7,8,-4,1,4,-7,-2,-5,-3,7,-4,-3,1,6,-5,-9,-9,-6,-3,10,6,8,8,-8,-6,7,8,-5,-3,-6,-9,-3,-4,-3,5,-4,-1,-9,-8,2,-4,3,2,-2,10,5,3,-10,-6,-1,4,-2,-8,4,9,-1,6,4,4,4,2,-5,-7,9,6,4,7,-7,-10,2,-8,2,-7,-3,-2,6,4,10,-6,5,-1,6,-9,-3,-5,-8,-8,-8,-9,-5,-5,9,-4,-3,10,-6,10,-10,-4,-8,10,1,-8,-2,-7,-2,-9,6,-9,-8,8,9,4,9,-4,7,4,-1,-5,1,-9,-6,3,-6,10,3,-5,-8,-2,9,3,-10,-3,9,-2,-2,5,-3,-10,3,10,10,8,8,-4,-8,4,3,-8,9,-5,5,1,-10,-7,-2,1,-4,-9,-1,-1,1,-8,5,1,8,-3,5,2,-6,10,-6,8,-2,-4,2,-3,-1,1,8,7,5,-10,-7,-10,1,-9,-3,-9,-5,-7,10,-4,-10,8,5,6,9,-4,8,7,4,-6,-4,1,2,10,5,-7,-7,2,2,3,4,8,-9,-1,5,-1,4,2,-9,10,-6,-8,-1,4,10,7,-5,8,-3,9,8,-9,-4,-2,3,7,-8,2,-9,7,4,-7,-10,-4,-6,3,5,-10,-2,3,4,-5,-9,4,-3,-9,-6,7,3,-8,-4,-5,-2,-1,-5,10,-6,-4,1,-3,10,3,-10,1,-10,2,-2,5,10,-10,10,-6,6,3,9,-4,-10,4,-7,-5,6,3,4,1,5,1,-3,4,-9,9,-5,-7,-9,-8,8,3,1,-9,5,-9,5,-10,8,-10,-2,-5,3,1,4,10,3,5,1,-8,-6,-1,-8,-9,-4,3,1,1,1,8,3,9,-3,-9,8,3,4,-7,4,7,9,1,10,-4,6,-8,1,-5,2,9,9,6,-5,-4,-10,-4,-2,7,-7,-3,-4,-1,6,9,8,-8,9,10,6,2,6,-5,3,8,-4,4,-2,4,3,-8,9,-9,1,-2,-5,4,-10,-8,2,2,9,-5,3,10,1,6,-3,8,-4,10,-3,-9,-3,6,6,-1,-6,-5,4,-4,3,-4,-4,-10,-3,8,-5,10,5,-3,-6,6,-9,-2,8,9,-7,-8,5,9,-6,-3,3,1,1,-1,-8,-10,9,1,9,7,-3,7,2,-6,-3,1,4,8,-6,4,-5,1,8,9,2,-5,2,-2,10,-5,9,-10,8,10,-4,-7,9,-3,2,6,10,8,5,-8,-8,-7,9,-1,5,2,-6,-8,-7,-3,5,-2,3,8,-9,-3,9,5,-7,-2,10,2,3,4,-3,10,6,-6,1,9,10,7,3,-5,10,3,-3,9,-8,-9,-10,10,2,-7,10,5,9,9,-5,2,-6,-9,-1,7,1,-2,-5,-7,8,2,-9,10,-8,-9,5,-10,6,10,-8,-9,-4,-10,-3,8,10,-1,-6,8,-8,-8,-8,-4,8,4,-2,4,5,-5,-10,2,-2,2,2,3,-7,-4,9,-9,-3,-2,-7,-1,2,-3,-8,4,-5,-9,6,-6,-2,6,-10,6,-10,-8,-7,-1,6,1,6,7,2,10,-7,9,-9,-1,-1,-2,-7,10,-3,3,5,-5,-9,-4,-8,9,1,7,6,-8,-4,10,3,5,8,-3,-2,-4,1,-4,-2,-8,-2,10,-10,-4,9,8,-1,5,-1,-4,9,5,-8,2,-1,-3,-3,8,-1,10,4,1,-10,-7,-5,5,-1,-5,-9,-8,-7,-3,4,-6,4,7,3,-3,2,-6,-1,4,-3,-2,8,-3,3,-5,-5,-3,6,-7,6,4,10,-9,-2,6,4,6,-7,4,4,6,10,-8,-9,-5,-5,-5,10,-9,-6,6,10,-1,2,9,-7,-5,6,3,-8,-10,-9,9,10,-2,10,8,3,-1,7,10,6,-10,9,-8,6,-2,-7,-6,9,-5,7,1,3,4,-1,-3,-10,-9,-10,7,-7,3,-10,-10,5,9,1,2,1,3,8,1,2,-6,9,10,-2,1,-10,-2,8,-6,1,-2,-4,8,-4,-10,9,3,-1,5,6,9,8,-10,3,7,6,8,-6,-1,-3,1,9,1,4,5,-1,5,-6,-6,-3,-2,-4,-10,-5,3,4,-2,-5,-4,7,9,6,7,-1,10,8,6,2,-4,-6,7,-10,-4,-1,6,-10,6,-8,-7,-8,4,10,-9], dtype = "uint64")#candidate|969|(840,)|const|uint64
call_968 = func_742_call(relay.reshape(const_969.astype('uint64'), [14, 15, 4]), relay.reshape(const_969.astype('uint64'), [14, 15, 4]), )
call_970 = func_742_call(relay.reshape(const_969.astype('uint64'), [14, 15, 4]), relay.reshape(const_969.astype('uint64'), [14, 15, 4]), )
uop_973 = relay.erf(bop_961.astype('float64')) # shape=(4, 13, 13)
uop_975 = relay.erf(bop_964.astype('float64')) # shape=(4, 13, 13)
var_982 = relay.var("var_982", dtype = "float32", shape = (4, 13, 13))#candidate|982|(4, 13, 13)|var|float32
bop_983 = relay.greater(bop_961.astype('bool'), relay.reshape(var_982.astype('bool'), relay.shape_of(bop_961))) # shape=(4, 13, 13)
bop_986 = relay.greater(bop_964.astype('bool'), relay.reshape(var_982.astype('bool'), relay.shape_of(bop_964))) # shape=(4, 13, 13)
bop_992 = relay.mod(uop_973.astype('float64'), relay.reshape(var_960.astype('float64'), relay.shape_of(uop_973))) # shape=(4, 13, 13)
bop_995 = relay.mod(uop_975.astype('float64'), relay.reshape(var_960.astype('float64'), relay.shape_of(uop_975))) # shape=(4, 13, 13)
uop_996 = relay.atan(uop_973.astype('float32')) # shape=(4, 13, 13)
uop_998 = relay.atan(uop_975.astype('float32')) # shape=(4, 13, 13)
func_742_call = mod.get_global_var('func_742')
func_745_call = mutated_mod.get_global_var('func_745')
call_999 = func_742_call(relay.reshape(call_968.astype('uint64'), [14, 15, 4]), relay.reshape(const_969.astype('uint64'), [14, 15, 4]), )
call_1000 = func_742_call(relay.reshape(call_968.astype('uint64'), [14, 15, 4]), relay.reshape(const_969.astype('uint64'), [14, 15, 4]), )
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
const_1004 = relay.const([8,7,4,5,-5,9,-5,-1,-10,-7,4,4,8,-4,-10,3,2,4,-9,9,2,-6,-4,1,-9,-2,8,2,5,-3,2,5,-5,1,-9,-8,8,-8,-10,-6,-7,1,4,9,1,6,-7,9,-1,-6,1,-3,-9,-1,10,-9,6,10,5,-1,3,-2,-10,2,3,4,-5,3,8,4,-3,-4,-3,1,6,-6,1,9,3,3,-1,-8,-3,-2,-6,10,-9,8,-1,-4,3,5,-10,-3,8,-8,4,7,8,-10,-6,-4,7,1,-3,4,-4,9,-7,-8,-10,-6,-2,-10,4,5,-2,-7,10,-4,10,8,1,10,10,3,-4,-2,3,7,4,7,10,3,-1,-3,-9,7,-8,7,4,-6,10,7,2,1,7,-9,2,-8,-3,6,-4,3,9,-8,10,1,3,-3,1,8,10,6,-3,6,7,-9,4,-3,-2,4,-6,-1,-3,4,8,6,3,-1,8,4,9,4,-3,-6,7,-8,7,4,4,5,-3,-10,-5,-3,-10,6,-8,5,-9,-8,-1,3,-6,7,6,3,-5,4,-6,2,-3,5,1,5,-1,8,1,-9,8,-8,9,4,6,5,6,-8,-6,-10,-5,8,-10,-7,8,8,3,2,9,8,-7,-5,-8,4,6,-10,-1,-6,-5,-3,-10,-10,-9,4,10,1,-3,-2,1,-7,-10,-9,-7,3,7,-6,-7,7,1,-1,-3,10,-3,7,6,3,2,6,-7,1,3,1,4,-5,1,-5,2,-10,-6,7,2,-8,1,2,-3,2,-10,7,2,8,9,10,7,-4,-7,-6,2,3,-10,-9,-10,10,-5,6,8,-3,-5,6,-2,-6,-3,10,-8,9,10,8,1,1,-4,3,1,7,-10,-2,3,-3,-2,-2,-8,6,-8,-9,4,-5,9,8,-6,5,-8,-10,7,-9,-8,9,9,5,2,6,-4,-2,-1,-2,-7,-4,-6,-8,-10,1,-8,-4,-6,6,-3,-1,5,9,-8,-4,-9,-2,5,-7,-8,2,9,-5,-5,2,-3,-4,-8,8,-5,3,-3,7,4,4,4,-8,-2,-5,-3,-4,2,9,-2,-8,-9,8,-5,-1,-1,-2,1,-8,-4,9,-2,6,-10,3,-9,-6,3,2,3,6,-8,-8,10,-1,1,-2,2,6,-10,-3,-2,-1,5,1,-7,-1,-7,6,-9,2,9,-2,1,-3,6,3,-7,3,8,-9,2,1,-2,-1,-6,-8,8,-7,9,3,8,-5,10,6,-1,2,6,7,2,9,-10,4,1,8,-1,-3,-6,-1,-6,4,-3,-5,10,9,9,-10,8,-6,5,-7,4,5,-10,-6,-5,-6,-9,-9,2,-10,9,9,-4,-4,-10,5,-3,-5,7,1,-4,-2,7,-9,-1,-7,9,-8,10,1,-5,3,-7,2,10,7,10,6,-9,6,5,10,9,8,2,-9,-8,-4,1,-10,-9,4,6,-9,-6,-7,-6,7,-7,-5,6,3,-6,-10,4,7,-7,-5,2,10,-8,-9,5,10,-2,-8,-10,-2,-1,1,-4,-9,9,6,9,-9,2,-1,-5,9,-9,6,10,-4,-2,-6,-5,-7,-2,-6,-6,8,-5,5,4,-7,-2,10,3,-5,-1,9,-8,10,7,1,-1,3,1,-5,-3,8,7,9,2,-3,3,-8,-8,10,-4,-1,1,-10,6,-5,-10,-6,1,-7,7,7,-3,2,-3,9,5,-4,-5,-9,2,2,7,10,-1,-2,-6,10,-5,-3,7,10,1,8,-8,9,-1,3,8,9,-8,-10,1,8,-2,-8,10,-1,-10,6,-8,-10,-3,8,-4,-3,-9,1,-10,-7,7,-3,3,-7,-5,-3,-6,-1,-3,2,-5,2,-7,3,9,2,-5,-2,-1,1,1,-8,-6,8,9,7,-5,9,1,9,-3,-7,-8,-7,9,4,4,7,-2,-9,4,-4,-6,-1,4,-6,-5,-5,3,9,-2,4,-6,3,-5,-6,8,-10,-2,1,2,-4,4,9,1,-1,-2,8,5,5,-4,9,-2,8,1,-1,1,-10,-5,2,9,-9,-6,1,8,1,7,-6,10,-3,5,4,9,1,-4,-10,-4,-4,-5,4,-10,-3,-7,-8,-5,8,6,8,-7,-1,-1,4,9,-8,4,6,-6,-3,-2,-2,3,-8,3,8,6,10,2,3,-1,-6,2,1,4,3,-6,-2,-6,-9,8,-6,9,-2,-10,-2,5,-8,-3,4,-2,3,1,-6,-8,3,-4,-2,7,-2,10,-7,-2,-9,3,-2,10,10,3,-8,3,-10,-2,-8,8,-5,-3,-1,-9,-2,6,5,1,7,5,6,-9,-3,-1,-10,-2,-5,-9,-10,1,-1,5,-4,5,-2,-7,6,-5,6,1,-2,3,8,8,-4,-9,7,-3,2,-4,-8,-3,8,-5,-3,-2,-1,-6,9,-8,-6,-10,-3,-6,10,-1,1,-3,3,3,6,5,-10,-8,-7,-4,3,6,6,3,1,2,-2,-1,3,-3,9,8,-6,-10,1,8,9,-2,-7,9,-10,2,-8,-7,8,3,5,-9,-8,-6,5,4,7,7,10,-1,-10,2,-5,10,6,-1,5,-4,8,-3,-5,7,3,-7,1,-3,1,1,-4,-1,4,-3,-3,1,8,-4,-1,4,-4,-4,9,8,-5,-9,-7,1,-4,10,3,7,-7,4,-2,9,9,1,-3,9,-5,6,1,-5,2,-10,-9,8,-10,4,-3,9,6,-2,-8,-6,-3,9,8,7,-1,6,-6,8,9,9,4,-5,-8,1,2,-3,8,7,7,-9,-10,10,1,3,1,9,-10,8,-3,-5,4,8,-1,-1,6,5,-5,4,-5,4,-9,-1,-9,-8,-8,5,-3,6,-7,-10,-7,1,-4,-7,-1,6,6,-10,8,7,-3,10,5,-9,2,-5,8,2,2,10,-10,5,4,1,5,8,8,3,-3,-6,-4,6,9,-2,5,4,8,1,7,4,8,10,-9], dtype = "int8")#candidate|1004|(1120,)|const|int8
call_1003 = relay.TupleGetItem(func_588_call(relay.reshape(const_1004.astype('int8'), [10, 7, 16]), relay.reshape(const_1004.astype('int8'), [10, 7, 16]), ), 1)
call_1005 = relay.TupleGetItem(func_591_call(relay.reshape(const_1004.astype('int8'), [10, 7, 16]), relay.reshape(const_1004.astype('int8'), [10, 7, 16]), ), 1)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1018 = relay.TupleGetItem(func_897_call(), 0)
call_1019 = relay.TupleGetItem(func_899_call(), 0)
output = relay.Tuple([call_968,const_969,bop_983,bop_992,uop_996,call_999,call_1003,const_1004,call_1018,])
output2 = relay.Tuple([call_970,const_969,bop_986,bop_995,uop_998,call_1000,call_1005,const_1004,call_1019,])
func_1021 = relay.Function([var_960,var_982,], output)
mod['func_1021'] = func_1021
mod = relay.transform.InferType()(mod)
var_1022 = relay.var("var_1022", dtype = "float32", shape = (4, 13, 13))#candidate|1022|(4, 13, 13)|var|float32
var_1023 = relay.var("var_1023", dtype = "float32", shape = (4, 13, 13))#candidate|1023|(4, 13, 13)|var|float32
output = func_1021(var_1022,var_1023,)
func_1024 = relay.Function([var_1022,var_1023,], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1030 = relay.TupleGetItem(func_897_call(), 0)
call_1031 = relay.TupleGetItem(func_899_call(), 0)
uop_1037 = relay.rsqrt(call_1030.astype('float64')) # shape=(4, 13, 13)
uop_1039 = relay.rsqrt(call_1031.astype('float64')) # shape=(4, 13, 13)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
var_1046 = relay.var("var_1046", dtype = "int8", shape = (1120,))#candidate|1046|(1120,)|var|int8
call_1045 = relay.TupleGetItem(func_588_call(relay.reshape(var_1046.astype('int8'), [10, 7, 16]), relay.reshape(var_1046.astype('int8'), [10, 7, 16]), ), 1)
call_1047 = relay.TupleGetItem(func_591_call(relay.reshape(var_1046.astype('int8'), [10, 7, 16]), relay.reshape(var_1046.astype('int8'), [10, 7, 16]), ), 1)
bop_1053 = relay.floor_mod(uop_1037.astype('float64'), relay.reshape(call_1030.astype('float64'), relay.shape_of(uop_1037))) # shape=(4, 13, 13)
bop_1056 = relay.floor_mod(uop_1039.astype('float64'), relay.reshape(call_1031.astype('float64'), relay.shape_of(uop_1039))) # shape=(4, 13, 13)
bop_1057 = relay.add(bop_1053.astype('int32'), relay.reshape(call_1030.astype('int32'), relay.shape_of(bop_1053))) # shape=(4, 13, 13)
bop_1060 = relay.add(bop_1056.astype('int32'), relay.reshape(call_1031.astype('int32'), relay.shape_of(bop_1056))) # shape=(4, 13, 13)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_1069 = relay.TupleGetItem(func_815_call(), 1)
call_1070 = relay.TupleGetItem(func_817_call(), 1)
output = relay.Tuple([call_1045,var_1046,bop_1057,call_1069,])
output2 = relay.Tuple([call_1047,var_1046,bop_1060,call_1070,])
func_1071 = relay.Function([var_1046,], output)
mod['func_1071'] = func_1071
mod = relay.transform.InferType()(mod)
var_1072 = relay.var("var_1072", dtype = "int8", shape = (1120,))#candidate|1072|(1120,)|var|int8
output = func_1071(var_1072)
func_1073 = relay.Function([var_1072], output)
mutated_mod['func_1073'] = func_1073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1120 = relay.var("var_1120", dtype = "float32", shape = (8, 16, 5))#candidate|1120|(8, 16, 5)|var|float32
uop_1121 = relay.rsqrt(var_1120.astype('float32')) # shape=(8, 16, 5)
output = uop_1121
output2 = uop_1121
func_1132 = relay.Function([var_1120,], output)
mod['func_1132'] = func_1132
mod = relay.transform.InferType()(mod)
var_1133 = relay.var("var_1133", dtype = "float32", shape = (8, 16, 5))#candidate|1133|(8, 16, 5)|var|float32
output = func_1132(var_1133)
func_1134 = relay.Function([var_1133], output)
mutated_mod['func_1134'] = func_1134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1165 = relay.TupleGetItem(func_897_call(), 0)
call_1166 = relay.TupleGetItem(func_899_call(), 0)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_1175 = relay.TupleGetItem(func_815_call(), 0)
call_1176 = relay.TupleGetItem(func_817_call(), 0)
output = relay.Tuple([call_1165,call_1175,])
output2 = relay.Tuple([call_1166,call_1176,])
func_1197 = relay.Function([], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
mutated_mod['func_1197'] = func_1197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mutated_mod.get_global_var('func_1197')
call_1198 = func_1197_call()
output = call_1198
func_1199 = relay.Function([], output)
mutated_mod['func_1199'] = func_1199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_1208 = relay.TupleGetItem(func_1197_call(), 0)
call_1209 = relay.TupleGetItem(func_1199_call(), 0)
output = call_1208
output2 = call_1209
func_1211 = relay.Function([], output)
mod['func_1211'] = func_1211
mod = relay.transform.InferType()(mod)
mutated_mod['func_1211'] = func_1211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mutated_mod.get_global_var('func_1211')
call_1212 = func_1211_call()
output = call_1212
func_1213 = relay.Function([], output)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_1280 = relay.TupleGetItem(func_1197_call(), 0)
call_1281 = relay.TupleGetItem(func_1199_call(), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
const_1285 = relay.const([-0.228125,0.808504,-0.536889,-1.603752,6.793812,-2.181139,8.662269,9.365084,5.923878,8.978469,-0.379825,-8.274366,3.051374,-7.896323,-3.104442,8.982286,-1.133380,-3.731703,0.836112,1.095345,-0.368155,3.546828,-6.660677,5.466281,-5.720868,-7.792850,0.764316,-7.660917,2.052320,6.231521,-1.253805,-2.542222,-0.080655,3.546035,-8.742954,-2.765878,-2.645387,-0.029187,-8.984909,-9.665631,9.564504,8.261922,7.609148,9.974061,-8.209922,-7.951100,9.163516,6.329382,8.879219,4.128902,5.272234,-2.360992,2.545961,7.566526,-3.192238,4.907170,-3.203553,-3.263089,-5.281753,-0.442635,3.110514,3.135802,-3.881469,-3.346900,9.826384,5.646655,2.376336,-6.169149,-7.003818,-7.133297,-6.353742,-1.632759,2.175967,-6.868732,-1.103736,-2.756032,-5.854437,-8.779033,0.231458,-8.676718,6.189921,1.351932,-1.757226,3.798182,6.554394,9.129161,2.003083,-4.197769,6.091519,-6.744324,-1.359737,7.794609,-0.425837,3.646615,-6.320251,-2.711419,5.145693,-5.354110,-1.222924,-6.631081,9.463420,6.877972,-5.366752,1.099872,-0.893975,2.959605,4.250645,9.314088,7.190107,3.563748,5.560914,3.565979,6.578458,-7.999859,3.099535,-7.722218,-8.100049,-8.030586,9.533373,-6.784809,9.243382,-7.958944,-6.383453,8.321877,-3.819446,8.454770,-8.215310,-5.503750,-8.130257,6.332375,-5.571682,8.159197,4.072293,0.328879,0.068709,2.164647,6.081930,3.453065,4.063887,3.158784,4.370728,5.983819,0.791983,-9.267693,-9.975196,-0.655195,7.374903,-6.105297,9.933846,0.072651,7.989349,0.712197,2.743554,8.070961,9.195652,-0.334486,9.726341,1.071980,-2.295508,8.736700,5.929681,3.478393,9.334875,-1.007777,1.969348,7.667968,-6.295206,9.242611,-2.801333,-7.893165,-9.869997,-7.235554,6.318132,-5.779809,3.931516,-9.137249,8.042590,6.299717,8.432474,1.557438,-2.797756,-3.740357,-5.350370,-1.195271,-0.115069,-5.548696,5.530999,-0.619742,-6.275434,-9.802838,-1.034435,1.335898,-9.495592,-5.859407,-0.439345,-7.959875,8.248168,7.120795,1.497853,-5.087492,-4.645719,-4.709953,4.301755,-1.342903,1.155983,-2.084702,-7.820771,-0.041518,-9.214593,-4.204969,-4.004255,3.379981,3.840781,9.514363,-2.756614,-3.189028,3.287442,5.642449,-1.460207,-5.853556,-5.816503,1.567471,-0.117178,-5.593668,0.583621,1.538411,1.972755,7.749265,6.128642,4.503476,-4.510140,9.207476,-0.568778,-2.474643,-4.922111,9.710750,1.239812,9.077595,-6.766410,4.247886,7.291396,3.064574,4.249405,7.636806,-8.727645,9.010950,4.812570,-7.138850,1.182338,-7.481196,1.416404,-9.086540,-9.676313,1.194761,3.099683,-1.168652,6.749427,-2.450202,-7.105457,-4.006723,-9.510297,6.134868,-6.971606,-2.167392,5.601963,3.737959,-7.648152,8.629979,-8.815186,4.111622,9.164335,-5.313495,0.498700,-7.357774,-9.910037,-5.872788,-1.414276,-6.669128,6.881485,-6.552790,6.265369,-9.198809,1.166728,7.878337,-6.048828,-5.981831,-1.087796,-7.326987,9.789655,-5.968620,9.493553,-5.251827,-2.620908,-2.567230,6.222340,-0.308420,0.499505,-6.092790,2.770116,-8.649119,-3.200166,0.723995,4.723994,4.353223,-9.521146,-4.526677,-2.258549,6.205429,-7.868150,3.747434,-8.277169,-2.599002,-7.777349,8.949439,-7.167009,3.210313,-3.114053,-2.690695,-7.690553,-6.361725,6.636218,1.718187,9.743084,-2.962042,-9.023233,-5.504262,-5.133511,-0.727976,5.511580,-2.253698,2.424482,6.377375,-5.762446,6.534815,5.186854,-0.362879,1.445548,-8.934408,-1.325943,-2.599822,-3.081768,-4.329130,0.988047,9.695190,-7.024469,1.495386,7.993723,7.176520,-5.150650,2.569730,-9.799281,-8.395785,0.255003,-8.583311,9.678307,-9.827449,7.980829,-0.864576,-0.826203,-7.343803,6.934161,-2.845366,-1.370534,4.177460,3.375767,-5.578220,-7.685795,7.980165,5.696660,5.618876,-0.501019,6.277048,-1.566221,-8.761925,0.112266,8.838236,-4.010013,-9.561379,0.808935,6.846057,-2.515356,-3.247239,-8.229319,-3.405333,-5.965517,8.001077,8.589590,-6.848521,-4.265707,-7.691989,0.832226,0.414137,-0.603763,-5.558366,1.741775,-3.238836,6.158297,-3.498481,-1.910097,-5.065088,-4.837486,6.495061,-8.742713,-8.909022,-3.100645,-2.007830,-6.891178,-1.534079,3.258883,6.014373,-6.429251,-6.369655,-0.710549,-0.459217,4.339679,1.623460,-2.112336,-1.074015,8.333960,6.141823,0.514469,3.444142,9.986873,-3.998569,0.644479,0.191809,7.529261,9.880430,-4.344935,-2.456095,-5.478247,-8.194975,-6.996839,3.323906,4.032355,-4.415833,7.306074,-1.337818,0.251019,8.053785,-5.551592,-5.918484,3.384840,-1.460390,4.187663,3.395259,-7.796463,-9.381571,-6.244076,-2.230834,9.216144,5.097794,4.012544,4.394078,-1.274274,4.522977,-3.432809,5.961632,0.493753,0.086760,-5.535059,9.350637,-3.980104,-1.868089,8.689081,-8.423754,6.585449,8.899412,-8.970025,2.716840,-2.854194,9.130002,-9.983897,-2.386881,-7.978201,5.767562,-3.517549,-4.544541,-1.888502,-3.368557,7.693936,-2.594464,-0.581132,8.194174,9.278280,6.249658,7.024351,-7.727865,0.831958,-8.473269,-2.648306,1.191766,-3.065639,-9.147936,-6.633108,-0.338415,9.308133,-2.142917,5.504567,-0.999372,-8.525858,-8.144120,5.596846,8.943783,5.313580,-3.058384,7.005920,-6.286112,4.761372,7.771469,2.507538,-2.237536,-6.762920,-0.439446,-0.790155,-1.761857,6.488101,7.505894,3.790517,5.299422,-3.024288,5.662991,9.291770,1.584633,-6.233593,-8.429681,-3.863089,-0.223266,0.157484,-3.275413,-1.656826,-5.762651,3.431346,-7.808608,4.862262,5.242242,0.147011,1.472686,1.862565,-8.944974,9.775755,7.137825,0.092235,6.750311,6.380792,-7.169972,-2.376978,0.108274,-6.224637,9.707391,5.438990,0.827476,0.205541,-7.269525,2.291661,-8.960121,1.014038,3.881095,6.861883,-8.860848,-2.674846,-2.380411,4.636049,5.225967,2.829328,4.837297,4.767206,-0.937892,-4.472757,8.282215,3.275974,-3.419051,-1.652029,9.531939,-2.732082,-3.722308,-2.711118,-0.695047,-3.149165,-3.459321,-2.740045,-5.035737,-1.377908,-8.684171,1.652196,6.936290,6.002808,-0.863137,7.117087,0.354193,7.029499,-2.047115,4.471620,5.654208,-0.355718,9.322353,-6.346875,3.866601,-9.903081,8.345244,2.135503,-4.062490,-1.001095,-4.542809,-6.706366,-3.752669,4.337709,-2.592036,6.569851,-8.899689,4.139863,-1.819941,-8.767803,-9.915812,8.056633,-7.681903,-3.491161,2.233919,5.393558,-6.635614,0.016442,9.264964,-5.810007,5.358224,-4.132278,7.840231,-6.779334,0.509022,9.186655,0.700774,8.804017,-2.204890,8.277362,-4.475470,3.996234,-0.914284,3.182600,-8.258880,3.876383,1.837551], dtype = "float32")#candidate|1285|(640,)|const|float32
call_1284 = func_1132_call(relay.reshape(const_1285.astype('float32'), [8, 16, 5]))
call_1286 = func_1132_call(relay.reshape(const_1285.astype('float32'), [8, 16, 5]))
output = relay.Tuple([call_1280,call_1284,const_1285,])
output2 = relay.Tuple([call_1281,call_1286,const_1285,])
func_1315 = relay.Function([], output)
mod['func_1315'] = func_1315
mod = relay.transform.InferType()(mod)
output = func_1315()
func_1316 = relay.Function([], output)
mutated_mod['func_1316'] = func_1316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_1402 = relay.TupleGetItem(func_897_call(), 0)
call_1403 = relay.TupleGetItem(func_899_call(), 0)
uop_1405 = relay.exp(call_1402.astype('float32')) # shape=(4, 13, 13)
uop_1407 = relay.exp(call_1403.astype('float32')) # shape=(4, 13, 13)
func_1021_call = mod.get_global_var('func_1021')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1408 = relay.TupleGetItem(func_1021_call(relay.reshape(uop_1405.astype('float32'), [4, 13, 13]), relay.reshape(uop_1405.astype('float32'), [4, 13, 13]), ), 4)
call_1409 = relay.TupleGetItem(func_1024_call(relay.reshape(uop_1405.astype('float32'), [4, 13, 13]), relay.reshape(uop_1405.astype('float32'), [4, 13, 13]), ), 4)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_1442 = relay.TupleGetItem(func_1315_call(), 0)
call_1443 = relay.TupleGetItem(func_1316_call(), 0)
uop_1445 = relay.sigmoid(uop_1405.astype('float32')) # shape=(4, 13, 13)
uop_1447 = relay.sigmoid(uop_1407.astype('float32')) # shape=(4, 13, 13)
output = relay.Tuple([call_1408,call_1442,uop_1445,])
output2 = relay.Tuple([call_1409,call_1443,uop_1447,])
func_1453 = relay.Function([], output)
mod['func_1453'] = func_1453
mod = relay.transform.InferType()(mod)
mutated_mod['func_1453'] = func_1453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1453_call = mutated_mod.get_global_var('func_1453')
call_1454 = func_1453_call()
output = call_1454
func_1455 = relay.Function([], output)
mutated_mod['func_1455'] = func_1455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_1458 = relay.TupleGetItem(func_815_call(), 1)
call_1459 = relay.TupleGetItem(func_817_call(), 1)
func_1021_call = mod.get_global_var('func_1021')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1467 = relay.TupleGetItem(func_1021_call(relay.reshape(call_1458.astype('float32'), [4, 13, 13]), relay.reshape(call_1458.astype('float32'), [4, 13, 13]), ), 0)
call_1468 = relay.TupleGetItem(func_1024_call(relay.reshape(call_1458.astype('float32'), [4, 13, 13]), relay.reshape(call_1458.astype('float32'), [4, 13, 13]), ), 0)
output = relay.Tuple([call_1458,call_1467,])
output2 = relay.Tuple([call_1459,call_1468,])
func_1469 = relay.Function([], output)
mod['func_1469'] = func_1469
mod = relay.transform.InferType()(mod)
output = func_1469()
func_1470 = relay.Function([], output)
mutated_mod['func_1470'] = func_1470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_1475 = relay.TupleGetItem(func_1315_call(), 0)
call_1476 = relay.TupleGetItem(func_1316_call(), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
const_1488 = relay.const([-8.615329,3.957418,6.209601,6.606244,4.016785,3.062464,9.981398,-0.289877,4.141234,-9.986575,8.887149,1.762031,-4.463381,3.400540,0.474476,2.001709,-0.488809,-9.659281,2.039412,-5.257559,-8.851432,-1.218880,9.753026,2.450078,-4.080407,-4.111536,2.741019,-6.916378,-5.181097,7.427697,-2.605539,0.264544,2.644431,-2.792671,9.701345,3.978944,-4.122873,9.114642,-8.256510,9.166580,3.911876,-0.305986,0.654235,-6.606879,-6.584800,-8.333562,8.260757,9.498080,0.288660,0.307404,-3.442888,-2.621303,-5.768296,-9.474356,8.637776,4.668329,-8.899576,6.968675,6.941518,2.901206,8.916607,-1.414710,-0.499140,1.839259,8.575599,-1.435186,3.158643,-9.367221,7.670811,-5.575662,-9.419378,3.672024,0.900081,0.397566,-0.466425,-3.251301,-4.738791,-3.131569,-5.155977,-4.428108,4.195847,-0.806550,4.442859,-7.063233,0.383700,3.620054,5.093030,-7.958861,5.786038,3.912588,7.467521,1.710711,-4.497635,-3.227927,2.054462,-2.123376,3.567756,9.961859,0.237791,3.080219,-6.547681,7.145881,4.895406,-0.222325,7.371827,2.105741,5.735891,-7.823120,-6.546916,8.257164,9.459912,-6.927851,-5.893668,5.364638,-6.562019,-6.023874,-4.161744,-0.692476,-4.465257,-6.121681,-2.445095,-4.204898,2.667488,2.876736,4.058179,0.180387,-3.831560,7.295777,-6.546922,-6.760730,-3.089202,5.583631,-5.843208,-8.996743,3.517606,-4.345226,-2.767761,1.043341,8.486178,-3.817119,7.742734,7.826731,4.065257,-1.404290,-5.764680,-0.176274,-9.660577,5.804962,4.289739,5.608994,-0.309257,-1.338604,-5.068920,-7.929222,-3.432162,-4.841351,9.674787,3.156842,-2.801015,-8.907480,5.909953,5.487038,-3.653506,-2.603799,0.124310,-8.877600,-2.403130,-2.094814,6.223577,-8.390845,3.780147,0.990598,3.168505,-8.250880,2.268333,-5.428144,5.426984,-0.289581,-0.285524,-8.314900,-5.910423,1.393546,6.178072,2.883711,3.505265,0.146719,-1.880337,0.783734,5.878264,3.298109,-1.201871,3.909754,-5.106937,0.951629,8.413465,-7.749125,7.401339,-5.146300,2.854131,8.056179,4.627393,-2.038535,2.636533,9.037607,8.629558,8.102165,-3.307045,1.213055,-6.797869,4.283219,-9.811630,7.342358,-4.322472,6.129144,0.179822,-5.255524,4.086460,-8.158878,-5.150401,4.787066,4.484175,0.055143,-1.476543,-7.692947,7.900639,-3.657850,3.921983,0.007989,1.232824,6.753043,3.392201,5.261345,-5.476754,-1.097901,-3.302507,-8.526776,-1.517356,5.810498,7.380587,-6.734574,-3.072864,-5.138725,-4.004316,8.472403,-0.876802,8.315558,-6.501967,-0.688683,-0.579569,3.606663,9.413766,-0.802827,2.382631,-0.176927,7.276724,9.284348,4.586622,4.916615,-3.530843,3.564159,-6.683544,-2.506652,8.151296,4.719212,2.403287,-4.515157,9.510169,2.240097,8.596968,6.585604,-5.346579,-4.846576,-3.821938,8.821657,-3.926641,-8.771697,0.276099,4.842191,4.281360,5.803110,8.278996,5.370680,-7.372917,9.338417,-3.617395,4.883266,0.182882,-1.808146,8.174048,-4.082617,-1.392150,-7.230157,-5.862878,6.874045,8.519693,-7.218830,-4.844674,2.171692,-1.834027,-0.111575,3.885132,9.384647,6.050272,-3.537480,-2.443481,-9.383548,9.886886,-1.684018,-6.273336,-9.196418,-7.390271,-0.211481,-6.683942,-8.005640,-9.572943,-4.211107,-4.832901,6.228284,0.813985,-0.830182,-0.922336,7.106693,-9.154490,2.653818,7.387496,-4.240908,4.960896,-0.662772,-4.892769,-4.891722,-7.599380,-5.799272,0.101911,-3.273979,2.855048,-7.722761,-1.478561,-1.351754,6.329421,9.982903,5.119346,9.014343,7.902849,-5.210209,-3.835902,-0.169932,3.531645,1.978752,-5.808260,-5.611858,-1.265405,-7.713137,-5.968202,1.044546,-7.660657,-3.898884,-3.239374,-9.031867,2.491546,9.018791,-1.848407,-3.429368,-1.452956,-9.250040,-0.878678,2.185732,4.333618,5.971967,-0.479708,0.362828,4.888382,-7.767308,6.085742,9.626698,4.683868,-4.416197,6.114949,-5.924543,-3.101276,-9.009095,2.615826,-4.465445,5.198742,-1.737096,-8.097718,0.432353,8.044459,-2.168823,-1.816049,5.873708,-2.113871,6.241845,7.035758,-5.907362,-4.469315,-0.883182,-1.251582,-8.972014,-8.978912,3.339110,8.560576,-1.402215,-3.058102,3.089103,4.787438,-2.544832,9.199390,5.133468,7.924323,-8.935551,-2.965953,9.090252,5.339416,1.117966,-7.994559,7.203705,4.822275,-6.520959,-1.384330,-6.378894,6.186123,0.031319,0.753515,8.806327,-4.544200,-6.394599,-5.720894,5.328984,-9.825212,2.411182,9.940998,-0.688597,-7.312288,-4.306058,-9.207704,-9.568428,-8.442469,-2.734670,-0.513874,-2.447320,-8.451137,-3.281729,8.349431,-2.642932,-3.974126,-1.993579,-5.530856,-9.670381,-5.656526,6.538860,9.098049,-0.453561,-1.589555,2.505120,-2.415807,0.086890,8.507075,6.574476,-7.882642,-1.540037,1.480049,-2.321378,9.811323,-9.045571,-0.108763,-2.757694,-7.421428,0.005436,-6.912210,6.375554,-4.819349,8.739741,-1.491283,-4.776090,-1.228027,2.918885,-3.560315,-6.207260,-5.265996,4.191474,-4.585633,8.513584,-8.931772,3.165300,1.343026,2.101486,-1.289244,9.836321,9.821348,6.193969,-3.331779,5.826388,-0.738170,-1.651803,-7.883811,8.737982,-8.788741,2.253268,3.336445,8.602024,-2.697483,8.863232,5.895686,2.871291,-9.245321,-6.556397,-0.595517,8.840214,9.168165,3.217020,5.192480,1.755205,6.011480,-5.193196,2.496669,-3.205364,-3.911779,-7.054585,-8.987820,-2.010478,-3.795850,-5.695409,-7.195848,-7.706455,0.625606,-2.555106,-4.590306,-1.295385,-8.104015,7.979310,-7.450000,8.852504,8.830741,-7.543701,-0.139452,-4.997062,-2.425650,4.515639,2.180598,-4.120521,9.236397,5.454435,-3.629623,-6.753236,5.592825,0.132186,5.121545,-7.829086,-2.253100,-1.559501,-5.047734,-7.142056,5.450134,3.574811,6.785301,-6.784471,-8.490906,-4.689533,2.300739,-3.828871,-9.302967,7.200426,-8.269428,-5.431059,-0.211744,2.788623,-2.385418,5.982242,0.614024,-6.042326,5.554795,-3.933092,-4.612046,-8.376453,1.253210,-6.104753,-2.011247,7.657450,-2.635625,-6.654514,-6.752791,9.257679,6.731957,3.816841,7.804241,4.692688,-3.634944,9.017258,-9.470444,-4.042965,-7.925557,-7.471087,-0.230132,2.506046,6.896378,-7.325018,-9.629821,-5.574835,-1.379283,-7.088950,4.121990,-3.751262,7.509292,7.385280,-9.701672,5.104868,-5.338521,7.976722,8.781962,4.954121,-5.372882,4.998361,9.597157,-7.779525,1.534858,-2.173008,-7.481499,-6.999493,-2.046149,-4.603520,4.511793,9.259183,3.050866,2.179336,0.469031,8.175095,-6.985179,-4.650961,7.405738,4.841062,-0.086137,1.862186,1.711759,-7.978639,5.850592,-7.530294,4.679666,0.851365,-3.728401,8.777699], dtype = "float32")#candidate|1488|(640,)|const|float32
call_1487 = func_1132_call(relay.reshape(const_1488.astype('float32'), [8, 16, 5]))
call_1489 = func_1132_call(relay.reshape(const_1488.astype('float32'), [8, 16, 5]))
output = relay.Tuple([call_1475,call_1487,const_1488,])
output2 = relay.Tuple([call_1476,call_1489,const_1488,])
func_1502 = relay.Function([], output)
mod['func_1502'] = func_1502
mod = relay.transform.InferType()(mod)
output = func_1502()
func_1503 = relay.Function([], output)
mutated_mod['func_1503'] = func_1503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_1549 = relay.TupleGetItem(func_1502_call(), 2)
call_1550 = relay.TupleGetItem(func_1503_call(), 2)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_1555 = relay.TupleGetItem(func_1502_call(), 2)
call_1556 = relay.TupleGetItem(func_1503_call(), 2)
output = relay.Tuple([call_1549,call_1555,])
output2 = relay.Tuple([call_1550,call_1556,])
func_1558 = relay.Function([], output)
mod['func_1558'] = func_1558
mod = relay.transform.InferType()(mod)
mutated_mod['func_1558'] = func_1558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mutated_mod.get_global_var('func_1558')
call_1559 = func_1558_call()
output = call_1559
func_1560 = relay.Function([], output)
mutated_mod['func_1560'] = func_1560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_1568 = relay.TupleGetItem(func_1558_call(), 0)
call_1569 = relay.TupleGetItem(func_1560_call(), 0)
output = call_1568
output2 = call_1569
func_1570 = relay.Function([], output)
mod['func_1570'] = func_1570
mod = relay.transform.InferType()(mod)
output = func_1570()
func_1571 = relay.Function([], output)
mutated_mod['func_1571'] = func_1571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_1584 = relay.TupleGetItem(func_1502_call(), 2)
call_1585 = relay.TupleGetItem(func_1503_call(), 2)
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1601 = func_1132_call(relay.reshape(call_1584.astype('float32'), [8, 16, 5]))
call_1602 = func_1132_call(relay.reshape(call_1584.astype('float32'), [8, 16, 5]))
var_1604 = relay.var("var_1604", dtype = "float32", shape = (8, 16, 5))#candidate|1604|(8, 16, 5)|var|float32
bop_1605 = relay.left_shift(call_1601.astype('uint32'), relay.reshape(var_1604.astype('uint32'), relay.shape_of(call_1601))) # shape=(8, 16, 5)
bop_1608 = relay.left_shift(call_1602.astype('uint32'), relay.reshape(var_1604.astype('uint32'), relay.shape_of(call_1602))) # shape=(8, 16, 5)
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1622 = func_1132_call(relay.reshape(bop_1605.astype('float32'), [8, 16, 5]))
call_1623 = func_1132_call(relay.reshape(bop_1605.astype('float32'), [8, 16, 5]))
const_1625 = relay.const([[[4.489486,5.337007,-6.132660,-3.464764,3.747552],[-0.119888,-3.545042,-3.261287,6.957930,3.739018],[4.783936,-8.947555,-1.207010,2.363665,-9.523801],[-6.047775,7.954172,1.775091,-4.941446,-7.772994],[-2.981878,-4.570761,-5.418910,9.431454,-9.773921],[2.075020,-4.895441,1.066920,-4.801929,-7.769250],[6.021404,-4.490490,-5.768366,2.947513,8.718313],[1.654179,-3.648928,-1.418194,-9.430852,8.007967],[0.400212,-3.008834,-0.244333,-1.008422,0.494741],[-0.638747,-9.395205,4.864194,-4.027179,5.294548],[-9.066412,9.905209,-9.855979,9.346982,-3.219064],[9.585368,7.472489,4.035732,-4.377527,-9.827306],[-8.149086,-8.027083,3.472221,-1.046881,-3.424285],[1.282908,-3.488190,-9.192698,3.251984,7.795258],[-0.396409,4.618449,7.003396,8.664325,-8.362076],[1.249240,-0.437668,3.630133,1.394692,4.947401]],[[3.996814,-2.530482,-0.464583,0.605569,-1.786662],[6.529309,9.981002,2.529420,2.318003,-4.463318],[-8.035373,-3.684181,-4.173603,1.101721,4.461635],[4.652429,5.800110,-2.163072,-9.912046,3.450044],[3.212287,2.000654,4.285253,3.304837,-0.854173],[2.753193,1.049749,2.379252,1.002307,4.542804],[-3.063029,-3.497990,-4.674434,4.350963,-6.510818],[0.932873,9.663748,-2.003723,8.731388,7.398699],[-9.965623,3.172693,-7.199691,2.522290,1.804723],[9.891831,6.757750,7.276552,-2.308623,3.233517],[-9.605419,-5.366735,4.219855,-4.823239,-2.487180],[-7.163068,-6.547361,-4.559459,5.309702,9.795815],[-0.136427,-3.127893,-9.446616,9.655140,-1.031859],[3.771729,-1.799416,-8.541879,-9.151962,-4.869676],[-1.014746,0.241275,-9.733524,1.482563,8.503136],[-1.737183,0.340662,-2.096172,7.164581,3.434311]],[[-4.977542,-7.644862,-9.583449,-2.493520,2.289292],[-0.626892,-0.579457,5.200166,5.453910,-3.843002],[9.305841,1.015344,4.054631,-7.506774,5.092481],[-9.550496,-0.276138,-4.474973,0.976513,0.132420],[-8.090681,-8.235987,-3.247616,6.992838,-4.266344],[-1.951072,6.935942,6.404363,7.280954,2.520007],[0.624804,-6.986741,-9.499186,-8.806036,-6.685387],[-2.501620,7.956395,8.714615,-0.015731,-9.850965],[-8.020651,-7.038061,-4.332032,-1.127653,7.858354],[-1.731948,3.356491,-5.490219,-4.838571,0.160246],[3.397889,0.504453,-9.945721,-4.404068,0.899404],[5.447212,1.044719,9.341862,2.850993,-0.256615],[3.130483,8.800272,6.808175,-7.855397,4.314151],[-3.751641,-4.755682,2.892657,-1.918510,0.691127],[-2.705123,2.989064,1.082460,9.718346,-7.257732],[1.805123,6.581477,-0.161931,3.383367,-9.044735]],[[-8.458064,2.279445,-3.396935,9.740085,-4.486421],[-8.647258,-4.407135,-6.432418,1.517575,-0.206359],[9.658812,8.324942,1.827299,-9.273373,6.405331],[4.823302,5.645540,-1.518158,3.029151,7.928624],[-6.777703,8.425713,5.862231,-5.241595,6.139482],[0.421619,5.478560,7.721731,-1.413194,0.502979],[-7.643001,-4.570704,7.287269,1.870555,-1.285663],[-7.913271,8.418479,4.759211,7.033286,2.092053],[5.031125,-9.558742,0.286378,7.227738,2.921934],[4.703478,0.602438,5.571769,-2.563805,1.313870],[5.450511,-7.364363,1.870877,-5.303292,0.496706],[-0.702039,-6.717368,8.444934,-2.207678,9.216858],[8.964699,-6.396343,-5.549020,4.964389,-5.302853],[-5.455827,-0.239936,-3.770543,-4.030785,4.084548],[-5.774611,-2.113210,-1.804280,3.895815,-3.751943],[-2.982991,6.230324,-5.726764,-2.361757,5.888712]],[[2.530765,9.161212,-6.269860,9.434755,-7.445141],[-8.063678,-4.070143,0.819215,6.456270,-6.827274],[7.497875,7.471620,1.360906,6.417505,-9.358790],[-2.305884,-5.643147,5.984579,-9.800449,6.366961],[4.272272,5.237802,8.408017,-8.537799,6.628646],[-3.154273,3.422290,-6.474867,-8.575292,4.489620],[-5.746949,-8.153731,5.513617,7.916559,-0.462700],[-6.610122,-3.924401,-9.978246,-3.940820,-3.573332],[1.907416,-0.817503,9.557185,2.339957,-0.720768],[-5.483442,-7.622122,5.267301,-2.951461,3.027644],[-1.039342,3.915165,-2.344389,-4.047401,-9.318740],[-0.188636,4.829515,6.725018,1.486792,-9.783494],[2.562970,-9.365201,6.574008,4.822113,-3.762189],[1.176867,-8.167555,-9.531538,-9.096765,7.662850],[1.155255,-8.073283,-7.501489,3.655967,-1.468099],[-0.124164,-0.259797,7.724993,-0.312167,-3.373128]],[[-3.330366,9.195586,-0.748810,1.577674,-3.344074],[1.803739,-0.635063,2.860015,3.843103,5.030865],[-7.687952,0.358807,-6.279618,4.074953,0.580639],[-8.326641,3.101108,-7.880974,6.095944,-6.882915],[-3.393402,2.870019,5.877624,-7.517618,-0.271869],[-7.022066,1.761543,0.591531,-1.030662,-9.984557],[-9.501714,7.680030,0.558402,3.996501,9.759582],[-7.436748,-6.380240,8.360864,-0.066881,-1.495611],[5.561075,-1.137735,1.870608,-3.283004,-5.942227],[7.323005,0.099429,-2.934481,6.866555,2.819585],[8.531878,-3.371544,-0.783649,5.287243,0.632161],[4.915608,-9.743649,6.236825,2.970669,3.123344],[9.316521,6.798556,-0.129054,0.864795,6.281814],[-1.117699,-5.646774,-2.449663,-8.067979,-0.627158],[-8.034800,-1.526724,7.742714,-6.766291,-9.293364],[-8.011705,-7.132891,-2.853577,8.990505,-0.005702]],[[7.880137,3.453865,-5.213139,-4.994353,1.728440],[-3.185975,-4.807711,-0.033845,5.612609,-9.903915],[-5.005865,0.864706,-1.870608,1.817748,5.810147],[2.021000,6.202846,-9.483497,-7.112314,-1.283462],[3.689164,2.691464,-9.180551,6.375343,-8.246221],[9.268538,-7.872232,-6.481455,-8.914463,-2.531993],[9.097004,-1.535976,-8.787668,-8.325297,2.132200],[-0.093355,-5.539201,-3.240315,2.673003,-0.678983],[-3.886891,6.131782,-4.500268,7.028699,9.594789],[-6.326044,8.311584,0.085383,6.553736,6.289332],[8.785112,-2.348272,3.297959,-6.674031,-5.028004],[3.926356,-2.438118,-9.288705,-4.110810,3.038423],[3.440717,-0.024421,3.528821,0.784543,-8.636349],[3.483847,-6.239249,7.990875,5.750617,8.942025],[-9.702592,-4.472892,1.546900,9.759520,-6.921160],[1.172299,-3.756959,0.077821,-2.526646,-2.502672]],[[1.407925,-5.275985,9.826126,5.189747,3.563012],[6.536430,6.074241,-6.571325,-3.649103,-3.518628],[-6.127558,-9.941803,-0.829527,-5.733025,-9.263239],[5.386057,3.050494,-9.114075,3.336635,6.658393],[-0.885764,-0.900324,-4.005148,-6.174750,-0.005360],[0.849180,-3.288573,3.162335,5.868636,2.907905],[-9.919902,0.465306,-6.107927,7.253668,-8.868275],[-0.953774,1.089163,-6.841679,9.365445,-8.293371],[-7.750373,1.898213,6.632780,8.445611,-7.367376],[1.879400,4.807961,-7.849952,-9.404946,6.238571],[-6.745417,7.604558,-8.299776,4.700038,-5.670749],[2.790819,-9.020069,7.344584,4.547796,-1.114232],[-6.306787,-6.923934,6.908512,3.279844,-4.818709],[-8.996346,3.851071,-9.702598,5.917305,5.330759],[3.076048,-7.545725,7.758461,-7.555593,-7.727784],[3.455757,-7.563715,-8.931426,-6.419288,2.345268]]], dtype = "float32")#candidate|1625|(8, 16, 5)|const|float32
bop_1626 = relay.not_equal(var_1604.astype('bool'), relay.reshape(const_1625.astype('bool'), relay.shape_of(var_1604))) # shape=(8, 16, 5)
uop_1631 = relay.sqrt(var_1604.astype('float32')) # shape=(8, 16, 5)
output = relay.Tuple([call_1584,bop_1605,call_1622,bop_1626,uop_1631,])
output2 = relay.Tuple([call_1585,bop_1608,call_1623,bop_1626,uop_1631,])
func_1639 = relay.Function([var_1604,], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1640 = relay.var("var_1640", dtype = "float32", shape = (8, 16, 5))#candidate|1640|(8, 16, 5)|var|float32
func_1639_call = mutated_mod.get_global_var('func_1639')
call_1641 = func_1639_call(var_1640)
output = call_1641
func_1642 = relay.Function([var_1640], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_1684 = relay.TupleGetItem(func_1469_call(), 1)
call_1685 = relay.TupleGetItem(func_1470_call(), 1)
uop_1695 = relay.cosh(call_1684.astype('float64')) # shape=(14, 15, 4)
uop_1697 = relay.cosh(call_1685.astype('float64')) # shape=(14, 15, 4)
uop_1714 = relay.acosh(call_1684.astype('float64')) # shape=(14, 15, 4)
uop_1716 = relay.acosh(call_1685.astype('float64')) # shape=(14, 15, 4)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_1733 = relay.TupleGetItem(func_1502_call(), 1)
call_1734 = relay.TupleGetItem(func_1503_call(), 1)
output = relay.Tuple([uop_1695,uop_1714,call_1733,])
output2 = relay.Tuple([uop_1697,uop_1716,call_1734,])
func_1737 = relay.Function([], output)
mod['func_1737'] = func_1737
mod = relay.transform.InferType()(mod)
output = func_1737()
func_1738 = relay.Function([], output)
mutated_mod['func_1738'] = func_1738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_1776 = func_1211_call()
call_1777 = func_1211_call()
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_1807 = relay.TupleGetItem(func_1558_call(), 0)
call_1808 = relay.TupleGetItem(func_1560_call(), 0)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
var_1821 = relay.var("var_1821", dtype = "int8", shape = (1120,))#candidate|1821|(1120,)|var|int8
call_1820 = relay.TupleGetItem(func_588_call(relay.reshape(var_1821.astype('int8'), [10, 7, 16]), relay.reshape(var_1821.astype('int8'), [10, 7, 16]), ), 1)
call_1822 = relay.TupleGetItem(func_591_call(relay.reshape(var_1821.astype('int8'), [10, 7, 16]), relay.reshape(var_1821.astype('int8'), [10, 7, 16]), ), 1)
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_1823 = relay.TupleGetItem(func_1197_call(), 1)
call_1824 = relay.TupleGetItem(func_1199_call(), 1)
func_1021_call = mod.get_global_var('func_1021')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1827 = relay.TupleGetItem(func_1021_call(relay.reshape(call_1823.astype('float32'), [4, 13, 13]), relay.reshape(call_1776.astype('float32'), [4, 13, 13]), ), 8)
call_1828 = relay.TupleGetItem(func_1024_call(relay.reshape(call_1823.astype('float32'), [4, 13, 13]), relay.reshape(call_1776.astype('float32'), [4, 13, 13]), ), 8)
output = relay.Tuple([call_1776,call_1807,call_1820,var_1821,call_1823,call_1827,])
output2 = relay.Tuple([call_1777,call_1808,call_1822,var_1821,call_1824,call_1828,])
func_1829 = relay.Function([var_1821,], output)
mod['func_1829'] = func_1829
mod = relay.transform.InferType()(mod)
mutated_mod['func_1829'] = func_1829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1830 = relay.var("var_1830", dtype = "int8", shape = (1120,))#candidate|1830|(1120,)|var|int8
func_1829_call = mutated_mod.get_global_var('func_1829')
call_1831 = func_1829_call(var_1830)
output = call_1831
func_1832 = relay.Function([var_1830], output)
mutated_mod['func_1832'] = func_1832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1453_call = mod.get_global_var('func_1453')
func_1455_call = mutated_mod.get_global_var('func_1455')
call_1834 = relay.TupleGetItem(func_1453_call(), 2)
call_1835 = relay.TupleGetItem(func_1455_call(), 2)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_1836 = relay.TupleGetItem(func_815_call(), 1)
call_1837 = relay.TupleGetItem(func_817_call(), 1)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_1845 = relay.TupleGetItem(func_1469_call(), 1)
call_1846 = relay.TupleGetItem(func_1470_call(), 1)
uop_1892 = relay.sinh(call_1836.astype('float64')) # shape=(4, 13, 13)
uop_1894 = relay.sinh(call_1837.astype('float64')) # shape=(4, 13, 13)
func_742_call = mod.get_global_var('func_742')
func_745_call = mutated_mod.get_global_var('func_745')
call_1920 = func_742_call(relay.reshape(call_1845.astype('uint64'), [14, 15, 4]), relay.reshape(call_1845.astype('uint64'), [14, 15, 4]), )
call_1921 = func_742_call(relay.reshape(call_1845.astype('uint64'), [14, 15, 4]), relay.reshape(call_1845.astype('uint64'), [14, 15, 4]), )
output = relay.Tuple([call_1834,call_1845,uop_1892,call_1920,])
output2 = relay.Tuple([call_1835,call_1846,uop_1894,call_1921,])
func_1933 = relay.Function([], output)
mod['func_1933'] = func_1933
mod = relay.transform.InferType()(mod)
mutated_mod['func_1933'] = func_1933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1933_call = mutated_mod.get_global_var('func_1933')
call_1934 = func_1933_call()
output = call_1934
func_1935 = relay.Function([], output)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1974 = relay.var("var_1974", dtype = "float32", shape = (3, 2, 5))#candidate|1974|(3, 2, 5)|var|float32
uop_1975 = relay.sinh(var_1974.astype('float32')) # shape=(3, 2, 5)
output = uop_1975
output2 = uop_1975
func_1979 = relay.Function([var_1974,], output)
mod['func_1979'] = func_1979
mod = relay.transform.InferType()(mod)
mutated_mod['func_1979'] = func_1979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1980 = relay.var("var_1980", dtype = "float32", shape = (3, 2, 5))#candidate|1980|(3, 2, 5)|var|float32
func_1979_call = mutated_mod.get_global_var('func_1979')
call_1981 = func_1979_call(var_1980)
output = call_1981
func_1982 = relay.Function([var_1980], output)
mutated_mod['func_1982'] = func_1982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1933_call = mod.get_global_var('func_1933')
func_1935_call = mutated_mod.get_global_var('func_1935')
call_2030 = relay.TupleGetItem(func_1933_call(), 0)
call_2031 = relay.TupleGetItem(func_1935_call(), 0)
var_2035 = relay.var("var_2035", dtype = "float32", shape = (4, 13, 13))#candidate|2035|(4, 13, 13)|var|float32
bop_2036 = relay.minimum(call_2030.astype('float32'), relay.reshape(var_2035.astype('float32'), relay.shape_of(call_2030))) # shape=(4, 13, 13)
bop_2039 = relay.minimum(call_2031.astype('float32'), relay.reshape(var_2035.astype('float32'), relay.shape_of(call_2031))) # shape=(4, 13, 13)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
var_2046 = relay.var("var_2046", dtype = "int8", shape = (1120,))#candidate|2046|(1120,)|var|int8
call_2045 = relay.TupleGetItem(func_588_call(relay.reshape(var_2046.astype('int8'), [10, 7, 16]), relay.reshape(var_2046.astype('int8'), [10, 7, 16]), ), 0)
call_2047 = relay.TupleGetItem(func_591_call(relay.reshape(var_2046.astype('int8'), [10, 7, 16]), relay.reshape(var_2046.astype('int8'), [10, 7, 16]), ), 0)
output = relay.Tuple([bop_2036,call_2045,var_2046,])
output2 = relay.Tuple([bop_2039,call_2047,var_2046,])
func_2057 = relay.Function([var_2035,var_2046,], output)
mod['func_2057'] = func_2057
mod = relay.transform.InferType()(mod)
mutated_mod['func_2057'] = func_2057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2057_call = mutated_mod.get_global_var('func_2057')
var_2059 = relay.var("var_2059", dtype = "float32", shape = (4, 13, 13))#candidate|2059|(4, 13, 13)|var|float32
var_2060 = relay.var("var_2060", dtype = "int8", shape = (1120,))#candidate|2060|(1120,)|var|int8
call_2058 = func_2057_call(var_2059,var_2060,)
output = call_2058
func_2061 = relay.Function([var_2059,var_2060,], output)
mutated_mod['func_2061'] = func_2061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_2079 = relay.TupleGetItem(func_897_call(), 1)
call_2080 = relay.TupleGetItem(func_899_call(), 1)
output = call_2079
output2 = call_2080
func_2082 = relay.Function([], output)
mod['func_2082'] = func_2082
mod = relay.transform.InferType()(mod)
output = func_2082()
func_2083 = relay.Function([], output)
mutated_mod['func_2083'] = func_2083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1737_call = mod.get_global_var('func_1737')
func_1738_call = mutated_mod.get_global_var('func_1738')
call_2099 = relay.TupleGetItem(func_1737_call(), 2)
call_2100 = relay.TupleGetItem(func_1738_call(), 2)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_2118 = relay.TupleGetItem(func_1469_call(), 0)
call_2119 = relay.TupleGetItem(func_1470_call(), 0)
output = relay.Tuple([call_2099,call_2118,])
output2 = relay.Tuple([call_2100,call_2119,])
func_2124 = relay.Function([], output)
mod['func_2124'] = func_2124
mod = relay.transform.InferType()(mod)
output = func_2124()
func_2125 = relay.Function([], output)
mutated_mod['func_2125'] = func_2125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2135 = func_1211_call()
call_2136 = func_1211_call()
var_2139 = relay.var("var_2139", dtype = "int8", shape = (4, 13, 13))#candidate|2139|(4, 13, 13)|var|int8
bop_2140 = relay.divide(call_2135.astype('float32'), relay.reshape(var_2139.astype('float32'), relay.shape_of(call_2135))) # shape=(4, 13, 13)
bop_2143 = relay.divide(call_2136.astype('float32'), relay.reshape(var_2139.astype('float32'), relay.shape_of(call_2136))) # shape=(4, 13, 13)
uop_2147 = relay.sqrt(var_2139.astype('float32')) # shape=(4, 13, 13)
output = relay.Tuple([bop_2140,uop_2147,])
output2 = relay.Tuple([bop_2143,uop_2147,])
func_2151 = relay.Function([var_2139,], output)
mod['func_2151'] = func_2151
mod = relay.transform.InferType()(mod)
mutated_mod['func_2151'] = func_2151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2152 = relay.var("var_2152", dtype = "int8", shape = (4, 13, 13))#candidate|2152|(4, 13, 13)|var|int8
func_2151_call = mutated_mod.get_global_var('func_2151')
call_2153 = func_2151_call(var_2152)
output = call_2153
func_2154 = relay.Function([var_2152], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1737_call = mod.get_global_var('func_1737')
func_1738_call = mutated_mod.get_global_var('func_1738')
call_2164 = relay.TupleGetItem(func_1737_call(), 0)
call_2165 = relay.TupleGetItem(func_1738_call(), 0)
output = call_2164
output2 = call_2165
func_2176 = relay.Function([], output)
mod['func_2176'] = func_2176
mod = relay.transform.InferType()(mod)
mutated_mod['func_2176'] = func_2176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mutated_mod.get_global_var('func_2176')
call_2177 = func_2176_call()
output = call_2177
func_2178 = relay.Function([], output)
mutated_mod['func_2178'] = func_2178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_2187 = relay.TupleGetItem(func_1469_call(), 1)
call_2188 = relay.TupleGetItem(func_1470_call(), 1)
output = relay.Tuple([call_2187,])
output2 = relay.Tuple([call_2188,])
func_2200 = relay.Function([], output)
mod['func_2200'] = func_2200
mod = relay.transform.InferType()(mod)
output = func_2200()
func_2201 = relay.Function([], output)
mutated_mod['func_2201'] = func_2201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_2207 = relay.TupleGetItem(func_1558_call(), 1)
call_2208 = relay.TupleGetItem(func_1560_call(), 1)
output = call_2207
output2 = call_2208
func_2221 = relay.Function([], output)
mod['func_2221'] = func_2221
mod = relay.transform.InferType()(mod)
output = func_2221()
func_2222 = relay.Function([], output)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2231 = relay.var("var_2231", dtype = "uint16", shape = (4, 5, 10))#candidate|2231|(4, 5, 10)|var|uint16
const_2232 = relay.const([[[-6,-5,4,6,2,-1,1,7,-6,-5],[-10,-10,3,-7,-4,-4,-1,1,-1,-5],[-4,9,-6,9,-1,10,1,-10,6,1],[-8,2,6,-5,10,-1,8,4,-6,5],[7,-9,-7,-5,8,-3,-10,6,-8,-2]],[[-2,-7,-3,-4,1,-6,-5,1,6,5],[9,-2,2,-7,-8,-1,10,-3,-8,-1],[8,-9,2,7,5,2,9,-5,2,3],[8,4,-3,-2,4,10,-1,-5,9,1],[-3,10,-8,4,6,4,3,-4,3,-7]],[[-1,8,-6,-5,4,-10,2,10,-2,2],[2,-2,3,3,-3,-2,-7,-6,-3,9],[8,4,-7,10,7,-9,-9,7,-10,8],[1,10,2,1,7,-3,-9,-7,-1,8],[-10,-8,2,10,6,-7,-10,4,-3,9]],[[3,6,-9,8,9,-8,7,-5,3,-2],[3,-7,6,-7,4,-8,-6,-1,-7,-4],[9,5,-10,-6,8,-2,-7,6,-10,-2],[-8,3,5,10,-7,10,6,3,-8,1],[-6,8,1,9,-6,-8,-1,8,-9,8]]], dtype = "uint16")#candidate|2232|(4, 5, 10)|const|uint16
bop_2233 = relay.less(var_2231.astype('bool'), relay.reshape(const_2232.astype('bool'), relay.shape_of(var_2231))) # shape=(4, 5, 10)
bop_2239 = relay.divide(bop_2233.astype('float32'), relay.reshape(var_2231.astype('float32'), relay.shape_of(bop_2233))) # shape=(4, 5, 10)
func_1979_call = mod.get_global_var('func_1979')
func_1982_call = mutated_mod.get_global_var('func_1982')
const_2243 = relay.const([7.116763,4.898566,0.707753,2.941353,9.329012,6.347729,-0.165167,6.177142,1.468328,8.920258,-8.493964,9.163896,7.534636,-1.219125,-8.605503,-4.442078,3.286425,3.866905,3.871480,4.685611,9.973556,-3.281954,0.228208,3.759484,-0.007812,-4.437490,3.233464,-5.715896,3.732964,9.465330], dtype = "float32")#candidate|2243|(30,)|const|float32
call_2242 = func_1979_call(relay.reshape(const_2243.astype('float32'), [3, 2, 5]))
call_2244 = func_1979_call(relay.reshape(const_2243.astype('float32'), [3, 2, 5]))
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_2251 = relay.TupleGetItem(func_815_call(), 0)
call_2252 = relay.TupleGetItem(func_817_call(), 0)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_2253 = relay.TupleGetItem(func_1469_call(), 0)
call_2254 = relay.TupleGetItem(func_1470_call(), 0)
output = relay.Tuple([bop_2239,call_2242,const_2243,call_2251,call_2253,])
output2 = relay.Tuple([bop_2239,call_2244,const_2243,call_2252,call_2254,])
func_2265 = relay.Function([var_2231,], output)
mod['func_2265'] = func_2265
mod = relay.transform.InferType()(mod)
var_2266 = relay.var("var_2266", dtype = "uint16", shape = (4, 5, 10))#candidate|2266|(4, 5, 10)|var|uint16
output = func_2265(var_2266)
func_2267 = relay.Function([var_2266], output)
mutated_mod['func_2267'] = func_2267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_2303 = relay.TupleGetItem(func_815_call(), 0)
call_2304 = relay.TupleGetItem(func_817_call(), 0)
output = call_2303
output2 = call_2304
func_2322 = relay.Function([], output)
mod['func_2322'] = func_2322
mod = relay.transform.InferType()(mod)
output = func_2322()
func_2323 = relay.Function([], output)
mutated_mod['func_2323'] = func_2323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_2351 = relay.TupleGetItem(func_1197_call(), 1)
call_2352 = relay.TupleGetItem(func_1199_call(), 1)
output = call_2351
output2 = call_2352
func_2373 = relay.Function([], output)
mod['func_2373'] = func_2373
mod = relay.transform.InferType()(mod)
output = func_2373()
func_2374 = relay.Function([], output)
mutated_mod['func_2374'] = func_2374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1453_call = mod.get_global_var('func_1453')
func_1455_call = mutated_mod.get_global_var('func_1455')
call_2417 = relay.TupleGetItem(func_1453_call(), 0)
call_2418 = relay.TupleGetItem(func_1455_call(), 0)
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
var_2420 = relay.var("var_2420", dtype = "float32", shape = (640,))#candidate|2420|(640,)|var|float32
call_2419 = func_1132_call(relay.reshape(var_2420.astype('float32'), [8, 16, 5]))
call_2421 = func_1132_call(relay.reshape(var_2420.astype('float32'), [8, 16, 5]))
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
var_2440 = relay.var("var_2440", dtype = "int8", shape = (56, 20))#candidate|2440|(56, 20)|var|int8
call_2439 = relay.TupleGetItem(func_588_call(relay.reshape(var_2440.astype('int8'), [10, 7, 16]), relay.reshape(var_2440.astype('int8'), [10, 7, 16]), ), 0)
call_2441 = relay.TupleGetItem(func_591_call(relay.reshape(var_2440.astype('int8'), [10, 7, 16]), relay.reshape(var_2440.astype('int8'), [10, 7, 16]), ), 0)
output = relay.Tuple([call_2417,call_2419,var_2420,call_2439,var_2440,])
output2 = relay.Tuple([call_2418,call_2421,var_2420,call_2441,var_2440,])
func_2445 = relay.Function([var_2420,var_2440,], output)
mod['func_2445'] = func_2445
mod = relay.transform.InferType()(mod)
mutated_mod['func_2445'] = func_2445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2445_call = mutated_mod.get_global_var('func_2445')
var_2447 = relay.var("var_2447", dtype = "float32", shape = (640,))#candidate|2447|(640,)|var|float32
var_2448 = relay.var("var_2448", dtype = "int8", shape = (56, 20))#candidate|2448|(56, 20)|var|int8
call_2446 = func_2445_call(var_2447,var_2448,)
output = call_2446
func_2449 = relay.Function([var_2447,var_2448,], output)
mutated_mod['func_2449'] = func_2449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1570_call = mod.get_global_var('func_1570')
func_1571_call = mutated_mod.get_global_var('func_1571')
call_2453 = func_1570_call()
call_2454 = func_1570_call()
func_1021_call = mod.get_global_var('func_1021')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_2459 = relay.var("var_2459", dtype = "float32", shape = (676, 1))#candidate|2459|(676, 1)|var|float32
call_2458 = relay.TupleGetItem(func_1021_call(relay.reshape(var_2459.astype('float32'), [4, 13, 13]), relay.reshape(var_2459.astype('float32'), [4, 13, 13]), ), 4)
call_2460 = relay.TupleGetItem(func_1024_call(relay.reshape(var_2459.astype('float32'), [4, 13, 13]), relay.reshape(var_2459.astype('float32'), [4, 13, 13]), ), 4)
func_1933_call = mod.get_global_var('func_1933')
func_1935_call = mutated_mod.get_global_var('func_1935')
call_2464 = relay.TupleGetItem(func_1933_call(), 0)
call_2465 = relay.TupleGetItem(func_1935_call(), 0)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2466 = func_1211_call()
call_2467 = func_1211_call()
func_2445_call = mod.get_global_var('func_2445')
func_2449_call = mutated_mod.get_global_var('func_2449')
const_2498 = relay.const([3,-6,-7,5,2,-7,8,-2,-3,-6,5,4,-10,9,-3,-7,-10,-5,7,-3,9,-3,6,-9,-8,-9,-6,8,5,6,-2,6,-7,-9,2,-5,-5,-10,-6,1,4,6,4,-8,5,-7,-6,-1,4,9,-3,9,-3,-9,7,-4,2,3,-7,-5,2,1,4,2,3,6,-6,-6,-3,9,-6,1,2,-4,-4,1,-2,5,-6,6,8,9,-8,-4,-9,10,-3,-5,-6,2,-9,-7,7,7,-3,-5,4,5,-7,2,2,-3,-5,-10,9,-3,6,7,4,-7,6,7,3,1,-3,-8,-3,9,-1,-8,-10,-9,3,-10,-2,3,8,-8,-6,-3,-2,-3,5,-4,1,-7,5,9,-1,-4,-7,-1,-8,6,-9,-4,-1,5,-1,2,-3,4,4,5,-6,8,-7,-8,9,-9,-4,-9,-2,-1,-5,4,2,7,3,3,2,-3,-2,4,-7,-10,-7,-6,-3,-1,-1,-10,3,1,1,7,7,2,1,1,-10,8,9,-6,2,3,-2,-8,-10,5,5,5,-2,-9,5,-2,10,4,-6,4,-10,3,1,9,2,-5,5,-7,8,-1,-8,8,3,-9,-4,6,1,-6,-3,-6,-10,-2,-10,6,-6,1,-10,-2,-2,-1,-6,-10,8,-1,-4,6,7,-1,-6,5,1,-4,6,7,6,6,-7,-1,4,-6,9,2,-9,-1,7,-4,1,-3,-3,4,-6,-3,7,-10,6,-1,7,8,-4,8,4,-2,-10,-9,3,6,4,-6,3,-3,-1,1,6,3,-8,-5,-5,-7,-2,-9,2,8,-5,8,-8,7,5,-7,-7,5,3,10,-7,-4,5,-5,9,4,6,1,3,5,-8,-1,5,2,3,6,9,8,3,3,-7,-7,-1,8,8,3,6,-3,-7,-8,7,2,-4,-3,6,-1,5,5,-6,-9,8,2,-6,-6,-10,-5,8,4,-10,9,3,8,-7,3,7,10,5,-1,7,-4,-2,3,-6,4,-5,1,-4,-7,1,-4,5,-6,-6,-1,-4,1,6,8,2,-8,-4,7,8,-8,-8,-1,-8,3,-6,8,-1,-8,2,9,-9,-1,7,-2,3,-8,-2,-6,-8,4,-5,-3,-1,3,8,-5,10,9,-5,-4,1,-1,-3,-3,6,-2,-10,-9,-8,2,6,-3,5,-4,5,1,4,-8,1,-7,-9,-9,-5,-1,1,-9,5,3,-7,2,-7,-7,7,9,7,4,-4,-8,-1,2,-4,-9,4,-9,-9,5,4,-10,-7,8,2,1,-6,4,8,9,6,1,10,-3,10,8,9,-8,4,2,9,1,-4,3,9,-6,-10,7,6,8,7,2,3,-4,-6,-2,-2,10,-9,8,5,-5,10,4,1,1,-9,5,3,-8,8,3,4,-5,-8,-3,6,7,-9,9,-4,-7,3,4,5,-6,3,-2,5,-2,-10,-8,-2,-2,10,10,-4,-7,-2,5,-5,10,-2,-9,-2,2,7,-10,-8,9,-6,2,-7,-8,-3,4,-6,8,-9,-5,-7,2,-10,4,-5,-6,3,10,8,-8,-5,-9,-9,8,-3,8,1,-7,-2,-9,-3,7,-2,5,-7,8,-7,2,5,3,-3,9,3,-5,6,-2,-6,4,-8,-7,-4,-8,4,-5,1,9,1,8,-4,8,8,9,-1,-3,4,5,-6,8,-4,-9,3,9,-5,-9,-3,-1,9,4,-4,8,-6,7,9,-4,-8,-9,10,-8,-8,-8,-4,-1,-8,2,3,-2,-4,-3,-4,-7,9,-7,6,7,-2,3,3,-10,1,5,-1,-3,7,9,2,-6,-2,1,6,-9,3,6,-8,-7,6,2,-10,-4,10,8,9,-4,-5,-8,5,1,1,-5,4,9,5,-1,6,-2,9,10,-4,-9,-1,1,-4,5,-2,8,2,9,-1,-4,6,-5,8,2,-2,-2,-8,7,7,-9,2,-6,5,6,6,4,10,8,5,-9,-1,-9,3,-10,10,9,7,8,1,-7,-6,10,10,-3,7,3,-4,-6,-8,7,-4,-10,4,-4,-4,3,-3,5,2,-8,9,-5,-4,9,-7,-2,5,-3,-1,-5,7,-4,-2,4,6,-10,-5,-5,-8,-3,-1,8,-6,-6,-8,-4,8,7,-9,-1,-3,10,-10,9,9,4,8,9,-3,-2,3,-7,-8,-10,-5,1,-6,8,-6,-5,-10,9,3,1,-1,8,-1,-5,-1,-5,8,4,9,-9,10,1,4,-7,6,-4,3,2,-9,4,-4,4,-6,-5,2,-1,-7,-2,2,10,1,8,-6,-9,-9,-4,-1,6,-9,-6,4,-5,10,4,1,4,7,-4,-4,7,6,-6,-2,-8,-3,5,-2,10,10,-5,-7,-10,3,-9,-9,-8,-10,3,9,6,-6,9,1,-7,3,-1,3,7,5,2,-4,8,9,9,-3,-7,-8,-4,-6,-2,-4,-9,4,4,-4,3,9,4,-3,5,8,4,10,6,10,5,1,-5,-2,6,7,3,-1,5,10,3,-2,5,-6,10,-9,1,10,6,-7,9,-2,-10,-9,-10,-5,-8,-9,-10,2,-10,-2,-2,9,6,10,9,-8,-4,4,-8,6,-5,-7,-7,-3,-9,-2,-1,8,-6,-3,-10,-4,7,-10,-6,-1,9,-5,6,-7,-7,5,-7,-5,3,8,8,10,9,-10,-4,5,8,2,-2,-8,-8,-8,8,-10,3,6,9,7,-4,2,-10,3,-10,2,6,2,-5,-10,6,-5,9,10,-7,-5,-6,1,3,3,-3,-7,5,2,2,4,-4,-8,-10,9,5,-10,-1,6,7,9,-6,-8,6,2,3,-7,-5,-10,-3,-2,-4,-9,5,3,7,-1,-10,6,10,5,6,-4,7,5,4,-6,2,-7,3,1,4,6,3,-10,-2,8,-7,8,-8,-1,2,3,7,3,2,1,-5,7,-1,-1,-2,-2,3,2,-4,-6,-2,-2,-10,10,-10,7,-10,-3,3,-5,-5,5,-6], dtype = "int8")#candidate|2498|(1120,)|const|int8
call_2497 = relay.TupleGetItem(func_2445_call(relay.reshape(call_2453.astype('float32'), [640,]), relay.reshape(const_2498.astype('int8'), [56, 20]), ), 4)
call_2499 = relay.TupleGetItem(func_2449_call(relay.reshape(call_2453.astype('float32'), [640,]), relay.reshape(const_2498.astype('int8'), [56, 20]), ), 4)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_2504 = relay.TupleGetItem(func_1469_call(), 0)
call_2505 = relay.TupleGetItem(func_1470_call(), 0)
func_1829_call = mod.get_global_var('func_1829')
func_1832_call = mutated_mod.get_global_var('func_1832')
call_2512 = relay.TupleGetItem(func_1829_call(relay.reshape(const_2498.astype('int8'), [1120,])), 3)
call_2513 = relay.TupleGetItem(func_1832_call(relay.reshape(const_2498.astype('int8'), [1120,])), 3)
bop_2519 = relay.subtract(const_2498.astype('uint16'), var_2459.astype('uint16')) # shape=(676, 1120)
func_2151_call = mod.get_global_var('func_2151')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2522 = relay.TupleGetItem(func_2151_call(relay.reshape(call_2464.astype('int8'), [4, 13, 13])), 0)
call_2523 = relay.TupleGetItem(func_2154_call(relay.reshape(call_2464.astype('int8'), [4, 13, 13])), 0)
uop_2536 = relay.log2(const_2498.astype('float32')) # shape=(1120,)
uop_2540 = relay.atanh(uop_2536.astype('float64')) # shape=(1120,)
output = relay.Tuple([call_2453,call_2458,call_2464,call_2466,call_2497,call_2504,call_2512,bop_2519,call_2522,uop_2540,])
output2 = relay.Tuple([call_2454,call_2460,call_2465,call_2467,call_2499,call_2505,call_2513,bop_2519,call_2523,uop_2540,])
func_2542 = relay.Function([var_2459,], output)
mod['func_2542'] = func_2542
mod = relay.transform.InferType()(mod)
var_2543 = relay.var("var_2543", dtype = "float32", shape = (676, 1))#candidate|2543|(676, 1)|var|float32
output = func_2542(var_2543)
func_2544 = relay.Function([var_2543], output)
mutated_mod['func_2544'] = func_2544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_2557 = func_2082_call()
call_2558 = func_2082_call()
uop_2559 = relay.acos(call_2557.astype('float64')) # shape=(4, 13, 13)
uop_2561 = relay.acos(call_2558.astype('float64')) # shape=(4, 13, 13)
func_1979_call = mod.get_global_var('func_1979')
func_1982_call = mutated_mod.get_global_var('func_1982')
const_2573 = relay.const([[9.205230],[-3.425945],[-7.331835],[0.171407],[-4.399402],[-8.273563],[-0.033491],[-6.321014],[-9.054899],[5.853272],[0.061095],[2.390188],[-9.246926],[5.344448],[4.590937],[-4.643676],[0.366163],[-0.875668],[5.043321],[1.209395],[8.053461],[8.962849],[5.440758],[6.658371],[-3.415272],[3.204137],[-5.712723],[4.610222],[-9.983513],[0.331814]], dtype = "float32")#candidate|2573|(30, 1)|const|float32
call_2572 = func_1979_call(relay.reshape(const_2573.astype('float32'), [3, 2, 5]))
call_2574 = func_1979_call(relay.reshape(const_2573.astype('float32'), [3, 2, 5]))
output = relay.Tuple([uop_2559,call_2572,const_2573,])
output2 = relay.Tuple([uop_2561,call_2574,const_2573,])
func_2578 = relay.Function([], output)
mod['func_2578'] = func_2578
mod = relay.transform.InferType()(mod)
output = func_2578()
func_2579 = relay.Function([], output)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2322_call = mod.get_global_var('func_2322')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_2580 = func_2322_call()
call_2581 = func_2322_call()
func_2445_call = mod.get_global_var('func_2445')
func_2449_call = mutated_mod.get_global_var('func_2449')
var_2585 = relay.var("var_2585", dtype = "float32", shape = (320, 2))#candidate|2585|(320, 2)|var|float32
const_2586 = relay.const([-10,1,-6,-3,-1,9,4,-2,8,4,-7,7,7,-8,3,8,-8,-9,7,-1,6,6,2,10,-9,6,-7,4,6,7,-3,3,4,-8,-6,1,-1,-10,6,2,8,-1,-10,-9,9,8,-8,5,-4,5,2,-10,5,-7,-3,8,7,-4,-6,-5,-10,-7,5,2,-5,-7,-5,1,8,2,-8,-3,-2,2,-4,3,4,-2,-1,8,1,4,-4,-5,4,-6,-10,7,-7,-9,10,3,-9,-10,-9,-6,-4,4,5,2,9,-2,-8,10,-10,8,-1,3,-8,-2,-3,-5,9,7,-1,5,-9,-8,8,4,-6,-9,3,-9,-4,8,-7,6,-2,-2,-2,-2,4,9,7,9,6,-10,-9,-2,10,-2,-4,-5,-1,-1,3,-5,-3,-8,-8,6,6,-6,7,-10,9,3,10,2,-4,4,4,6,-4,2,5,9,-5,8,7,8,2,1,-9,5,4,3,-9,-9,-5,-8,-8,2,3,5,10,8,-3,5,-10,7,10,-3,-9,3,-3,2,7,5,4,10,3,7,6,10,-10,1,-7,8,-9,1,9,3,7,-8,10,-6,-5,-9,-5,-9,5,5,-4,-9,-4,-5,4,-1,-8,6,6,-10,-7,3,9,-4,-2,8,4,9,10,2,-3,-6,1,-8,-6,-9,-9,-4,6,3,-9,-4,-10,10,8,-5,5,2,5,-5,10,5,-8,-8,-7,2,5,8,10,7,-1,1,-4,-2,-2,-10,-10,-2,2,-3,-4,-4,3,-6,1,3,4,8,6,6,6,10,1,-6,-5,-3,-6,-10,8,-3,7,-10,1,-8,-7,-5,-10,-1,-1,7,10,7,-6,6,-2,4,-9,10,-2,7,5,-2,-10,-8,-4,9,5,-9,-2,7,-5,3,5,4,-6,-7,-6,5,-4,7,10,-1,1,-7,6,-8,5,3,-7,-7,9,-3,5,-8,-3,-8,-2,-7,10,9,8,-4,-9,2,5,6,-5,6,-6,-10,3,1,8,2,4,3,7,4,6,1,-7,-5,5,-4,-8,-10,-2,-8,-3,-8,10,-8,9,-4,-9,-6,9,1,-5,-6,9,3,1,2,2,10,1,8,1,3,-6,-8,-2,-10,4,-9,-4,-4,6,8,6,-9,-7,7,10,7,10,-2,4,1,-9,-1,-5,-7,-3,-10,-2,-5,7,-6,3,2,1,-8,-5,1,9,7,8,-4,9,-9,-2,-2,8,5,-3,5,-2,-7,9,-1,1,-10,-1,10,-10,-3,-3,3,-2,3,7,9,8,-4,-5,3,4,5,-2,7,3,-6,2,-10,-8,-2,-8,2,-7,10,5,8,-1,-5,7,6,-2,8,2,10,8,2,-1,1,3,9,-9,7,7,2,4,6,10,9,2,9,1,8,-8,-9,-10,-8,3,-8,7,-6,10,6,8,10,-5,9,-2,8,-6,10,-5,-7,-6,-1,-7,-6,1,-6,7,8,-5,-10,6,9,-4,7,9,-10,-1,2,1,4,9,-2,6,-10,7,-9,7,4,-9,3,-7,5,-7,5,-4,-10,8,1,2,-6,1,-3,-5,2,-9,2,-9,3,5,-1,-6,-1,-5,-10,-6,-5,2,-7,-4,-9,-3,9,9,5,-10,2,-9,10,-5,-10,-7,-10,-4,5,4,-3,6,-9,3,-8,2,9,-3,7,1,1,-2,-6,5,-6,-5,10,-10,8,-4,-6,-6,-10,-6,-9,4,-5,-8,-5,-4,6,10,3,-4,1,5,6,2,10,-5,-5,8,7,2,-1,-3,-6,-2,2,9,-5,3,-6,7,5,7,-1,1,-1,10,-9,-10,5,-5,-9,10,-9,-7,-10,-2,-6,-4,-2,-7,-9,-6,1,3,-9,4,-3,3,-9,-6,5,-3,-7,-2,-3,-3,-7,1,6,-5,-4,-4,-5,-8,7,5,-4,-7,-7,-1,7,3,4,3,9,6,10,2,-4,2,-4,5,5,-8,-10,-3,4,2,-1,9,-4,-5,2,-2,6,10,-2,10,9,-2,-7,-6,10,-1,5,-10,5,-5,-1,-5,-2,-10,2,-2,8,-9,-8,7,5,10,8,-10,5,7,-4,-6,-9,-1,-6,1,-8,10,9,5,-5,-5,4,3,-3,-7,5,5,10,3,10,10,8,3,9,-9,-2,-7,-10,-6,-3,1,-6,9,2,-10,10,10,3,-3,-1,9,9,-10,6,-3,10,-6,10,-10,1,-5,-3,-9,8,9,6,-5,-3,5,4,10,-6,8,-4,-10,-2,6,-10,2,-8,-9,8,-9,-10,2,-6,8,1,-8,6,-9,-5,-4,3,4,8,4,-1,8,-1,7,-5,1,-1,-10,-9,9,-6,-8,8,10,9,-1,1,2,-2,-9,-4,-10,9,5,-8,1,-5,5,-3,1,-9,10,4,1,-1,-2,3,1,1,-2,-10,7,2,-1,6,-4,-6,4,8,-5,-8,-5,10,-4,4,2,-1,-9,10,7,-4,1,-7,10,-4,8,4,4,-1,-7,-6,-7,7,-9,8,2,-9,1,-10,5,8,6,7,7,10,-3,2,-5,-7,-7,2,-6,2,1,8,6,9,1,-3,6,-4,-4,-10,-7,-3,2,2,10,-5,6,7,1,-5,4,1,-3,-6,3,-4,-2,5,-6,-2,-10,7,2,9,10,6,-2,-1,-3,-2,4,7,4,-2,8,7,2,-6,-10,8,9,-3,2,-7,-4,9,4,-5,-7,-1,4,-3,-3,-1,-5,2,-4,6,10,10,2,-3,-7,-5,9,9,5,10,-2,1,-1,-1,10,2,3,-8,-3,-9,1,-5,1,6,8,4,-8,-7,-1,-5,-8,-3,-10,3,-3,-6,-10,7,-6,7,-8,4,-9,-6,-9,-1,9,-5,-6,4,3,-6,-2,-4,5,-2,4,10,7,4,-8,-1,3,-7,6,-10,1,4,8,-4,1,9,-2,-1,-6,4,-1,10,1,-3,-9,8,7,-7,-9,-10,-7,-8,-8,7,-3,8,6,-8], dtype = "int8")#candidate|2586|(1120,)|const|int8
call_2584 = relay.TupleGetItem(func_2445_call(relay.reshape(var_2585.astype('float32'), [640,]), relay.reshape(const_2586.astype('int8'), [56, 20]), ), 1)
call_2587 = relay.TupleGetItem(func_2449_call(relay.reshape(var_2585.astype('float32'), [640,]), relay.reshape(const_2586.astype('int8'), [56, 20]), ), 1)
bop_2603 = relay.greater(call_2584.astype('bool'), relay.reshape(var_2585.astype('bool'), relay.shape_of(call_2584))) # shape=(8, 16, 5)
bop_2606 = relay.greater(call_2587.astype('bool'), relay.reshape(var_2585.astype('bool'), relay.shape_of(call_2587))) # shape=(8, 16, 5)
output = relay.Tuple([call_2580,const_2586,bop_2603,])
output2 = relay.Tuple([call_2581,const_2586,bop_2606,])
func_2610 = relay.Function([var_2585,], output)
mod['func_2610'] = func_2610
mod = relay.transform.InferType()(mod)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2611 = relay.var("var_2611", dtype = "float32", shape = (320, 2))#candidate|2611|(320, 2)|var|float32
func_2610_call = mutated_mod.get_global_var('func_2610')
call_2612 = func_2610_call(var_2611)
output = call_2612
func_2613 = relay.Function([var_2611], output)
mutated_mod['func_2613'] = func_2613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_2637 = relay.TupleGetItem(func_1502_call(), 0)
call_2638 = relay.TupleGetItem(func_1503_call(), 0)
uop_2640 = relay.log2(call_2637.astype('float32')) # shape=(4, 13, 13)
uop_2642 = relay.log2(call_2638.astype('float32')) # shape=(4, 13, 13)
func_1829_call = mod.get_global_var('func_1829')
func_1832_call = mutated_mod.get_global_var('func_1832')
const_2652 = relay.const([-7,-2,9,3,10,6,10,4,3,8,5,7,-4,6,-9,3,1,3,7,-9,-9,-4,10,6,-7,3,10,5,-6,-10,-3,1,10,-6,-1,1,2,6,5,-3,-10,-4,6,-4,8,7,7,-7,-1,6,-10,1,-4,3,-3,-2,3,-3,5,9,-9,7,4,5,-9,-9,-7,2,-9,1,-1,3,6,3,3,-5,10,-10,-7,2,-7,-8,1,-6,-7,2,-7,-4,-1,6,-10,-8,-4,5,-5,-9,7,-7,-9,1,-9,4,8,-10,-4,4,-9,6,-1,7,9,-6,-3,-7,5,8,8,1,9,-6,-10,-7,-3,4,-4,-9,7,9,10,4,-3,9,-4,9,4,4,-8,-4,-4,4,-9,2,10,-8,7,-8,-4,-4,-9,-2,10,6,-9,-8,7,2,5,-2,5,-7,-1,5,-2,-4,3,4,1,1,8,-2,1,1,-10,-5,2,-7,7,-8,2,9,-5,-1,3,-6,-3,-8,-4,4,-3,-9,9,7,10,6,-7,-9,8,-9,-4,-3,-3,3,9,1,4,-8,8,10,1,9,-3,-10,-8,3,4,-9,5,6,9,8,9,-8,-1,4,6,-2,10,9,3,-8,-8,-5,8,10,1,1,-4,-9,-1,1,-4,6,4,-2,9,-3,-8,3,2,-3,1,-4,-5,2,-6,3,5,-4,9,6,-9,-7,9,-2,3,-3,1,9,-2,2,-5,8,6,-1,-9,3,7,-4,9,-7,-5,-7,2,4,9,2,1,-4,-1,10,-3,7,-2,-6,10,3,8,2,6,-1,-10,-6,10,-7,-6,-10,-9,-9,-1,2,-10,5,-5,-5,-10,3,-9,2,3,-2,-8,8,-3,-10,1,4,-9,7,-5,-4,-1,7,-7,1,10,-9,-10,-8,3,7,-2,-5,-9,2,7,9,2,-7,-6,-1,6,9,-8,-8,6,4,6,8,2,-9,7,-6,-7,10,-3,-2,-2,4,-9,-10,8,5,-3,-9,-5,3,-10,1,-4,-1,-3,-8,5,4,6,2,-5,-8,-10,-3,-9,6,-7,-7,7,2,2,-4,3,2,1,-3,-9,-5,10,-3,-6,8,-6,-8,2,3,-9,-10,5,2,-6,-4,-8,5,9,-10,-8,2,-5,9,10,1,10,-4,3,-3,-2,3,6,-1,7,1,10,-9,4,10,9,3,-5,6,-4,-7,4,6,10,-4,-9,-4,8,1,3,-8,-5,4,8,7,7,-8,-6,2,4,-4,-2,-9,2,-4,3,7,-3,-7,-9,4,-10,10,9,-1,7,-3,2,9,3,-8,5,4,6,-2,-10,2,9,6,-3,10,-2,9,8,-9,3,-7,5,-10,-5,-6,9,4,2,-7,-7,-5,1,-5,3,-9,-3,7,-10,-7,-7,1,-2,3,5,9,6,-2,-7,7,-3,8,-5,-2,-2,-1,3,-5,4,-1,10,2,-1,5,9,9,10,-8,2,1,2,-3,3,1,7,-8,-9,3,5,1,-9,6,8,8,5,-4,-3,-1,4,-6,4,-8,-6,-5,8,-5,-6,10,-6,-4,8,-7,4,7,-9,-8,9,-6,-6,4,-4,-3,-9,-4,9,-5,5,-8,-9,6,-8,-9,-8,-1,-3,-8,-5,9,4,-10,-1,-2,8,-7,4,3,6,10,6,-10,-10,7,-1,-1,10,-10,10,-7,-1,-3,8,9,-7,-9,2,-1,-2,-10,-5,-10,4,-5,-3,3,9,-8,-2,-10,-6,2,-10,10,3,5,-1,-4,6,-1,4,-2,10,7,-5,-8,7,8,-3,1,10,-6,2,8,-9,-8,3,-3,8,-4,10,5,-2,-7,5,2,6,6,10,-8,5,2,-4,2,9,-6,-7,-6,-5,-7,1,-6,9,-4,6,-8,8,10,4,-5,-9,2,1,7,3,6,5,-2,4,3,-8,4,10,-7,7,9,-2,-1,1,2,-4,-9,-2,3,-4,7,-9,9,4,-6,-9,-4,8,-5,3,-4,-6,6,-1,-4,-7,-9,2,8,4,-5,-10,6,-4,8,8,4,4,-4,1,2,-8,6,8,6,-7,7,-9,3,3,3,-5,7,-9,4,8,-7,6,-8,7,-10,-6,10,-1,-1,8,8,-10,-1,-8,8,1,-4,-1,3,8,-2,10,10,-9,-6,4,8,-8,3,-6,-4,8,-5,-4,-9,-2,7,-7,3,-9,-10,-2,-8,-9,-8,6,3,-2,5,5,-6,-6,-8,3,6,-10,-6,-7,3,-7,-3,3,-7,4,-8,-5,-7,1,-2,7,-6,-6,-9,9,1,5,1,3,4,9,8,8,4,1,6,4,4,4,-5,7,1,1,1,-9,1,7,-3,-5,6,3,-3,-4,8,-4,5,10,-5,-7,5,1,5,7,5,-6,-7,5,-9,1,-10,-2,-6,10,-3,8,-4,-6,-7,8,-3,4,-3,-2,-7,10,7,2,-2,7,-7,5,-3,10,-4,-5,3,8,8,8,2,3,-2,5,7,-1,-6,-8,5,-3,8,-7,7,7,-5,1,5,-9,10,10,7,-4,8,-3,9,4,-6,-8,-4,6,-2,-9,2,-3,-3,10,6,4,-5,9,-5,-1,1,3,4,7,8,-2,-5,3,-10,9,-6,-10,-9,4,1,8,5,-9,1,-5,-1,9,2,3,4,7,-4,2,-5,9,2,-8,-9,3,3,10,5,-8,-3,8,-3,-9,2,-10,6,5,-9,4,-9,9,-7,6,10,6,4,-1,8,4,1,-7,5,4,4,-3,5,7,-3,-3,-6,6,-4,9,-7,2,-8,5,-10,9,-9,8,-6,-7,7,-2,8,5,3,3,-8,7,3,-1,-3,8,-5,-5,5,-10,9,-7,7,10,-7,-1,-8,-5,2,-6,8,-4,-4,6,10,-2,-5,9,-3,4,-2,9,5,2,9,2,-4,4,5,5,-3,6,8,-2,4,2,-4,5,2,9,-5,-3,-7,-7,5,10,1,-8,1,1,-9], dtype = "int8")#candidate|2652|(1120,)|const|int8
call_2651 = relay.TupleGetItem(func_1829_call(relay.reshape(const_2652.astype('int8'), [1120,])), 5)
call_2653 = relay.TupleGetItem(func_1832_call(relay.reshape(const_2652.astype('int8'), [1120,])), 5)
output = relay.Tuple([uop_2640,call_2651,const_2652,])
output2 = relay.Tuple([uop_2642,call_2653,const_2652,])
func_2661 = relay.Function([], output)
mod['func_2661'] = func_2661
mod = relay.transform.InferType()(mod)
output = func_2661()
func_2662 = relay.Function([], output)
mutated_mod['func_2662'] = func_2662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_2686 = relay.TupleGetItem(func_1315_call(), 0)
call_2687 = relay.TupleGetItem(func_1316_call(), 0)
var_2689 = relay.var("var_2689", dtype = "int8", shape = (4, 13, 13))#candidate|2689|(4, 13, 13)|var|int8
bop_2690 = relay.less(call_2686.astype('bool'), relay.reshape(var_2689.astype('bool'), relay.shape_of(call_2686))) # shape=(4, 13, 13)
bop_2693 = relay.less(call_2687.astype('bool'), relay.reshape(var_2689.astype('bool'), relay.shape_of(call_2687))) # shape=(4, 13, 13)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_2694 = relay.TupleGetItem(func_2200_call(), 0)
call_2695 = relay.TupleGetItem(func_2201_call(), 0)
output = relay.Tuple([bop_2690,call_2694,])
output2 = relay.Tuple([bop_2693,call_2695,])
func_2700 = relay.Function([var_2689,], output)
mod['func_2700'] = func_2700
mod = relay.transform.InferType()(mod)
var_2701 = relay.var("var_2701", dtype = "int8", shape = (4, 13, 13))#candidate|2701|(4, 13, 13)|var|int8
output = func_2700(var_2701)
func_2702 = relay.Function([var_2701], output)
mutated_mod['func_2702'] = func_2702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_2707 = relay.TupleGetItem(func_1315_call(), 1)
call_2708 = relay.TupleGetItem(func_1316_call(), 1)
output = call_2707
output2 = call_2708
func_2709 = relay.Function([], output)
mod['func_2709'] = func_2709
mod = relay.transform.InferType()(mod)
output = func_2709()
func_2710 = relay.Function([], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_2716 = func_2082_call()
call_2717 = func_2082_call()
func_2322_call = mod.get_global_var('func_2322')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_2719 = func_2322_call()
call_2720 = func_2322_call()
output = relay.Tuple([call_2716,call_2719,])
output2 = relay.Tuple([call_2717,call_2720,])
func_2730 = relay.Function([], output)
mod['func_2730'] = func_2730
mod = relay.transform.InferType()(mod)
mutated_mod['func_2730'] = func_2730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2730_call = mutated_mod.get_global_var('func_2730')
call_2731 = func_2730_call()
output = call_2731
func_2732 = relay.Function([], output)
mutated_mod['func_2732'] = func_2732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1737_call = mod.get_global_var('func_1737')
func_1738_call = mutated_mod.get_global_var('func_1738')
call_2766 = relay.TupleGetItem(func_1737_call(), 1)
call_2767 = relay.TupleGetItem(func_1738_call(), 1)
output = call_2766
output2 = call_2767
func_2780 = relay.Function([], output)
mod['func_2780'] = func_2780
mod = relay.transform.InferType()(mod)
mutated_mod['func_2780'] = func_2780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2780_call = mutated_mod.get_global_var('func_2780')
call_2781 = func_2780_call()
output = call_2781
func_2782 = relay.Function([], output)
mutated_mod['func_2782'] = func_2782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2124_call = mod.get_global_var('func_2124')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_2852 = relay.TupleGetItem(func_2124_call(), 0)
call_2853 = relay.TupleGetItem(func_2125_call(), 0)
output = call_2852
output2 = call_2853
func_2854 = relay.Function([], output)
mod['func_2854'] = func_2854
mod = relay.transform.InferType()(mod)
output = func_2854()
func_2855 = relay.Function([], output)
mutated_mod['func_2855'] = func_2855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2861 = relay.var("var_2861", dtype = "float32", shape = (10, 5, 7))#candidate|2861|(10, 5, 7)|var|float32
const_2862 = relay.const([[[7.808349,8.642503,-3.224677,-5.293717,5.040287,-1.283273,4.367453],[0.619304,1.832196,1.080031,-4.793881,6.806602,3.134635,-6.910753],[-7.053871,9.261842,-6.139372,-4.455635,9.298001,1.627809,9.477728],[0.380759,-5.675765,-2.187728,-9.313964,-5.732826,6.933973,0.745843],[-9.182883,6.362597,4.462866,-8.690571,3.787697,-2.579662,-6.373962]],[[-3.713146,-0.515869,-0.755107,-7.205310,-4.327911,7.502180,-3.312156],[-0.892895,1.492522,2.874294,7.919075,-4.530706,0.041645,-9.653581],[-7.369863,5.432750,0.728767,-8.276862,8.333265,-1.374585,3.672987],[-9.867599,-8.991875,1.938359,7.174579,-3.599225,9.057236,-8.073320],[6.183016,0.395379,1.189135,-6.795559,-3.062658,3.407277,9.969484]],[[8.261719,3.363420,-7.603006,-7.002515,0.209428,1.217541,-0.500775],[-2.411885,5.316243,-6.947379,2.102577,8.083210,-5.035212,-3.188463],[3.264367,8.144925,6.362354,-7.988062,-6.890466,5.522459,-3.539276],[-1.221336,-5.202391,-6.271524,-9.969837,-3.561241,-0.921134,4.496265],[2.649558,-1.402568,4.785759,8.479879,-2.227001,0.728368,-4.089388]],[[0.525809,8.845613,8.201327,-3.973112,2.224827,-4.375172,8.406654],[2.663782,6.963540,-9.051080,-9.693881,0.439022,-8.976953,8.038495],[6.513992,3.978737,6.969475,-7.393899,-8.730419,-4.175358,3.910204],[5.153704,6.419626,6.102707,4.937555,8.389980,6.661867,5.777207],[-7.922575,8.918594,-9.413109,-4.436186,6.374595,-5.522025,-8.777621]],[[5.570498,-6.776420,-7.373813,-9.709400,-8.901948,9.804320,3.975866],[8.140666,3.879693,9.974436,8.968862,4.856287,3.491164,-0.022035],[-5.987074,-7.767318,-1.740051,-9.280782,1.062366,-4.898397,-3.029275],[2.527024,-0.116795,-5.029674,-7.247367,0.744360,6.382850,-3.171852],[9.864256,-6.694442,2.614901,-1.684239,8.071068,-5.586553,2.111997]],[[1.104448,-5.182673,8.856250,7.653126,-1.166439,6.603988,9.181495],[-7.166534,-0.290463,-3.840314,5.939183,5.366207,2.437232,-4.953257],[1.174186,-6.744947,0.758389,7.954956,8.360886,-5.250405,4.970522],[0.688830,-7.581978,-9.443052,-9.351993,-6.209705,-4.950736,3.442654],[-5.925345,9.388867,7.576929,-2.018591,-2.573767,3.140188,-1.457304]],[[-5.851183,6.852967,-3.081251,7.323171,-4.665155,7.454122,-7.496073],[5.507689,9.623232,6.688303,5.332275,-1.334075,-8.764922,-3.929488],[6.910635,4.289248,-4.320815,5.190792,2.149515,4.354430,-2.626234],[-6.377730,-8.072265,-4.957322,5.935782,-5.049779,-1.540827,3.314930],[8.879049,-1.649377,-5.887403,-5.523457,3.687553,-3.651128,4.639402]],[[-4.180877,-1.654808,-3.723443,-3.777057,9.196652,-1.366178,9.120269],[-3.140200,9.011649,-4.991721,-9.882724,-7.113330,7.606725,9.417873],[-7.347619,1.723465,-0.351208,2.453966,-9.886357,-0.984221,0.502757],[3.227864,4.418207,2.426249,3.855429,0.788764,3.977321,4.957942],[9.066873,-7.297214,0.997988,-2.387115,9.105798,-7.317790,-0.578855]],[[5.376456,2.266664,-0.517052,3.457008,-2.835905,1.076532,-9.375462],[1.674079,0.262001,-8.749357,-2.870508,9.910471,-0.952100,-1.610391],[-6.046600,8.410457,-7.242375,-8.272517,1.170556,6.500936,-9.827763],[3.565043,3.459453,-7.181140,2.935319,-5.967398,-2.713983,9.277116],[-3.595238,4.933477,-7.180710,7.538185,-3.161599,4.015138,1.140342]],[[9.246707,9.045376,-0.515564,0.781163,7.152479,-2.737654,-9.088848],[5.862510,3.065180,2.250529,-6.262937,4.851866,-7.003330,9.391893],[2.639352,-5.789159,-2.635293,-7.243478,-1.452048,-3.675430,-3.589905],[8.735239,7.273069,-2.876203,7.301365,-7.320568,2.229982,0.838291],[7.034643,7.106871,7.692159,3.002574,2.058623,-6.002976,7.328585]]], dtype = "float32")#candidate|2862|(10, 5, 7)|const|float32
bop_2863 = relay.maximum(var_2861.astype('float32'), relay.reshape(const_2862.astype('float32'), relay.shape_of(var_2861))) # shape=(10, 5, 7)
func_2057_call = mod.get_global_var('func_2057')
func_2061_call = mutated_mod.get_global_var('func_2061')
const_2880 = relay.const([-2.887658,-5.160086,6.515794,-3.409074,-8.846602,5.908458,0.385846,-9.660215,1.122237,4.828349,4.321970,1.055877,-3.960118,4.123590,-8.967711,5.499456,6.302073,9.434387,-1.887811,-6.241599,-9.473031,-2.830763,-3.855670,-9.230272,-1.253778,-9.011994,2.367622,9.870212,-9.618622,7.479665,7.880073,0.565982,-4.247706,0.318354,-3.646009,-7.337321,-8.231364,1.203696,0.503611,-7.896567,9.688356,8.885969,7.641646,-5.944196,8.866249,-0.551203,8.070803,-7.598678,-9.148095,-0.558743,1.713115,-6.129117,7.562282,-9.032539,6.314172,4.429732,3.182123,8.571358,4.780060,-3.091347,8.327094,1.769147,-7.219931,7.515790,-5.038394,-4.010867,-8.817508,3.263416,-6.722166,-3.323637,-0.909193,-3.625494,-0.598570,-7.539005,4.714378,-3.885849,3.091998,0.462410,1.497417,3.363276,0.555359,6.556432,-2.471119,8.065641,-8.904918,-1.672166,0.753140,-3.444670,6.295867,0.426421,6.777980,9.429013,-9.786941,8.896941,8.283374,1.374434,-6.392281,-6.952963,0.384052,3.539767,8.081090,-9.585264,-8.645512,-5.405878,-3.970075,-9.820310,-4.269081,-8.843919,1.295904,-6.214847,-7.528816,2.423510,1.910572,5.179068,3.828038,-2.588306,2.895329,-0.900132,-0.100780,5.195185,-0.922086,-1.390684,4.192326,0.642854,-4.240285,-2.850043,3.203518,5.850107,5.845113,5.703598,2.860826,-2.823603,9.221907,-1.234789,5.698540,-6.490295,-1.782362,-3.738345,5.233397,-6.593717,-1.995680,2.243557,-0.660893,-2.755300,2.414267,-9.039760,6.036133,2.499141,1.478201,-7.252021,1.568601,1.902079,-3.547889,-1.183737,8.930093,0.483006,4.055459,-7.848481,-8.093782,6.981342,-5.620045,-1.903069,-1.153613,-1.021087,-2.107197,0.882183,8.734687,0.303204,-7.622837,-7.755296,-0.176717,1.772533,-1.224092,5.495515,-8.140342,-7.736057,-1.216636,1.830330,8.666325,4.404517,-0.574771,3.638461,6.967876,6.093524,-9.487831,0.093279,-5.621862,-4.456925,-6.128139,1.716047,9.847888,-4.742959,-1.854472,-3.155326,0.729863,7.430122,-1.457292,-4.093542,1.314676,-3.697181,7.960723,-5.263244,-5.284668,-4.652344,-7.426684,-0.330669,5.130724,-6.797768,-7.772648,2.186359,-7.128489,5.088501,-0.940023,-2.054947,-9.442066,8.050875,-0.329943,4.349243,7.279277,-4.423152,1.410071,1.632134,5.225218,-5.422825,-2.605009,2.552043,0.825029,-8.874654,-8.271185,3.067579,0.291893,-2.528678,9.121690,-7.685466,6.974701,-5.847801,7.072239,-7.316209,2.336473,-0.973068,-9.245416,-5.042068,5.407877,7.014541,3.571364,-9.443026,-3.963549,6.753904,-9.122694,-4.170665,-3.049147,-8.949433,-8.434185,-8.359404,3.732379,4.597648,-3.452458,3.505788,-9.055486,-0.897544,-3.258235,-0.682846,8.142337,-8.790280,-0.568206,-6.355112,8.326038,-8.430817,8.201793,-5.962531,-3.814821,-9.596746,1.341313,-9.033823,5.439260,-8.545943,2.298387,-0.695532,-9.917011,-0.378007,2.230043,3.047895,4.625346,-3.121217,-8.205388,7.874298,-7.716697,1.828204,-4.129403,-3.661811,-9.339317,7.922542,1.217110,8.120348,-9.513374,-7.433725,-9.536783,-0.182236,-4.746381,-7.209912,2.027343,6.107648,0.567420,-7.908379,-8.228087,2.348160,9.427827,-9.198879,-3.939653,-2.873429,8.129911,-9.542241,-3.769335,5.386194,9.864654,5.961317,5.460056,0.098402,6.617089,-3.565753,-3.725577,4.574421,-7.110752,-2.018586,7.841910,2.561865,-5.889825,-6.342907,4.799414,3.017857,3.143393,9.125379,6.285355,3.532511,-0.896821,-7.574936,-0.004349,-2.354249,9.784665,1.328834,2.403976,3.765609,9.064014,-0.565316,4.782335,8.387158,-0.987629,2.109524,9.725554,0.193840,6.658668,-3.246241,5.974125,-1.541280,-0.155440,5.482322,4.884194,4.810570,-9.403085,7.774710,4.231341,-0.861847,6.112795,3.684349,-9.357708,5.607856,-4.557555,6.032263,-2.497290,-4.526704,-2.697751,6.358500,-8.491922,-8.490040,-5.585432,-7.540559,-9.366422,-8.001441,-4.050342,3.080838,-5.539900,-6.214134,-4.031153,-5.775609,-1.545052,5.741999,-6.323784,-4.422177,5.435537,0.941644,-9.034743,0.192053,-1.166159,-9.309209,3.176597,3.550283,-0.822070,-1.793370,-8.046706,-8.377381,1.729299,8.018075,-4.341711,-6.653345,-5.131727,7.127161,5.799808,3.240480,-2.892369,0.122952,1.089559,9.391671,-6.418421,6.168523,-3.678766,2.793128,2.185425,1.364624,-0.670860,-2.115738,9.276341,2.444141,-2.173073,-3.662945,3.001024,8.293258,8.660721,-6.532568,-9.476881,-5.562379,3.984131,2.185379,-5.793267,-5.287082,-7.662587,3.639786,7.814955,1.379816,1.225635,-1.077331,1.170153,-8.833306,1.985493,-1.127746,-4.643234,-5.583629,0.786115,-3.530045,0.915324,-1.865431,3.572032,6.610541,1.148349,2.851773,0.765250,3.433781,6.652670,6.688103,-2.176131,-4.488174,-0.117785,4.171745,-1.411833,5.175781,-5.731996,-5.781990,0.982730,-4.238098,-7.412631,1.152435,-3.725506,-1.502554,-6.439644,-2.138911,3.471300,9.939909,9.153226,2.250314,3.164769,5.980761,5.865482,2.725076,-0.361309,8.227943,5.388434,-3.581547,8.342082,3.402762,-0.074333,-1.087525,8.071889,2.665260,-9.671806,-7.505682,4.125244,-6.112925,6.841688,6.236717,2.591111,-2.426653,1.692997,-6.602702,6.172566,4.945727,7.005763,-2.341219,4.090844,-4.602269,-8.813187,3.734684,-8.833477,-6.465667,-0.828728,1.333311,-9.903340,-0.064814,-4.716659,-3.841775,6.401367,8.264464,-2.594866,3.345424,8.363071,1.158560,-0.149380,6.150502,-0.118962,9.592952,6.381054,8.936731,-4.285568,-0.502939,-0.280226,8.211883,-2.151117,8.862036,-6.513369,-2.326654,-8.312453,3.467092,4.711251,1.076007,9.633916,-4.375977,-1.435389,-3.950946,3.372802,7.485240,-9.271220,4.281496,-4.603379,3.628073,1.336898,-1.120095,1.291572,4.522918,5.797069,7.612282,4.555952,2.070654,3.774900,-0.475154,-5.675614,-8.898667,-4.433624,2.321847,-3.376323,9.099675,8.773651,7.747433,-4.566480,8.881961,-0.591920,-9.737101,-7.889523,5.834416,7.331386,-7.643427,2.439581,-0.531641,1.581328,-5.689449,-7.175866,2.744875,-3.087272,2.158813,2.197061,-1.976414,8.053182,6.821269,-1.781431,9.245917,8.780441,-6.061072,-2.085595,-2.688751,-7.303061,-4.245401,2.996760,-8.628636,-1.709657,-5.292778,-3.613815,0.209877,7.044381,1.588263,4.182594,4.385408,5.237809,-2.413472,5.335796,7.617868,7.188181,-6.560070,1.061194,-8.642443,-8.276864,-6.546078,1.786490,-1.903669,-1.916969,2.085532,-2.408125,-7.694244,-3.381887,-4.642480,-9.269193,4.045270,9.453285,-5.073773,2.819200,-5.386945,1.425491,-6.574028,3.824301,6.264739,5.353263,1.775334,3.890857,0.929354,-8.670552,9.004972,2.968561,9.001932,0.490669,7.114612,-3.963287,-0.051752,-2.404479,6.420297,-8.985695,-8.693760,9.827466,4.828636,8.446146,-2.788672,-4.227334,-9.112358,-9.859487,-6.473438,0.172579,-0.979643,-6.706897,1.527066,-2.064934,-2.811051,1.314121,-0.691837,-0.783731,-1.185564,-8.556458,-5.960407,-0.886844,-5.279553,-9.050092,-2.639849], dtype = "float32")#candidate|2880|(676,)|const|float32
var_2881 = relay.var("var_2881", dtype = "int8", shape = (1120,))#candidate|2881|(1120,)|var|int8
call_2879 = relay.TupleGetItem(func_2057_call(relay.reshape(const_2880.astype('float32'), [4, 13, 13]), relay.reshape(var_2881.astype('int8'), [1120,]), ), 0)
call_2882 = relay.TupleGetItem(func_2061_call(relay.reshape(const_2880.astype('float32'), [4, 13, 13]), relay.reshape(var_2881.astype('int8'), [1120,]), ), 0)
uop_2889 = relay.rsqrt(var_2881.astype('float32')) # shape=(1120,)
func_2373_call = mod.get_global_var('func_2373')
func_2374_call = mutated_mod.get_global_var('func_2374')
call_2891 = func_2373_call()
call_2892 = func_2373_call()
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
var_2913 = relay.var("var_2913", dtype = "float32", shape = (80, 8))#candidate|2913|(80, 8)|var|float32
call_2912 = func_1132_call(relay.reshape(var_2913.astype('float32'), [8, 16, 5]))
call_2914 = func_1132_call(relay.reshape(var_2913.astype('float32'), [8, 16, 5]))
output = relay.Tuple([bop_2863,call_2879,const_2880,uop_2889,call_2891,call_2912,var_2913,])
output2 = relay.Tuple([bop_2863,call_2882,const_2880,uop_2889,call_2892,call_2914,var_2913,])
func_2917 = relay.Function([var_2861,var_2881,var_2913,], output)
mod['func_2917'] = func_2917
mod = relay.transform.InferType()(mod)
mutated_mod['func_2917'] = func_2917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2917_call = mutated_mod.get_global_var('func_2917')
var_2919 = relay.var("var_2919", dtype = "float32", shape = (10, 5, 7))#candidate|2919|(10, 5, 7)|var|float32
var_2920 = relay.var("var_2920", dtype = "int8", shape = (1120,))#candidate|2920|(1120,)|var|int8
var_2921 = relay.var("var_2921", dtype = "float32", shape = (80, 8))#candidate|2921|(80, 8)|var|float32
call_2918 = func_2917_call(var_2919,var_2920,var_2921,)
output = call_2918
func_2922 = relay.Function([var_2919,var_2920,var_2921,], output)
mutated_mod['func_2922'] = func_2922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_2986 = relay.TupleGetItem(func_2730_call(), 0)
call_2987 = relay.TupleGetItem(func_2732_call(), 0)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_2994 = relay.TupleGetItem(func_2200_call(), 0)
call_2995 = relay.TupleGetItem(func_2201_call(), 0)
func_2542_call = mod.get_global_var('func_2542')
func_2544_call = mutated_mod.get_global_var('func_2544')
call_3005 = relay.TupleGetItem(func_2542_call(relay.reshape(call_2986.astype('float32'), [676, 1])), 9)
call_3006 = relay.TupleGetItem(func_2544_call(relay.reshape(call_2986.astype('float32'), [676, 1])), 9)
output = relay.Tuple([call_2986,call_2994,call_3005,])
output2 = relay.Tuple([call_2987,call_2995,call_3006,])
func_3016 = relay.Function([], output)
mod['func_3016'] = func_3016
mod = relay.transform.InferType()(mod)
mutated_mod['func_3016'] = func_3016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3016_call = mutated_mod.get_global_var('func_3016')
call_3017 = func_3016_call()
output = call_3017
func_3018 = relay.Function([], output)
mutated_mod['func_3018'] = func_3018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_3068 = relay.TupleGetItem(func_1558_call(), 0)
call_3069 = relay.TupleGetItem(func_1560_call(), 0)
uop_3070 = relay.atanh(call_3068.astype('float32')) # shape=(640,)
uop_3072 = relay.atanh(call_3069.astype('float32')) # shape=(640,)
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_3084 = func_1132_call(relay.reshape(call_3068.astype('float32'), [8, 16, 5]))
call_3085 = func_1132_call(relay.reshape(call_3068.astype('float32'), [8, 16, 5]))
output = relay.Tuple([uop_3070,call_3084,])
output2 = relay.Tuple([uop_3072,call_3085,])
func_3106 = relay.Function([], output)
mod['func_3106'] = func_3106
mod = relay.transform.InferType()(mod)
mutated_mod['func_3106'] = func_3106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mutated_mod.get_global_var('func_3106')
call_3107 = func_3106_call()
output = call_3107
func_3108 = relay.Function([], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_3111 = relay.TupleGetItem(func_1502_call(), 0)
call_3112 = relay.TupleGetItem(func_1503_call(), 0)
var_3121 = relay.var("var_3121", dtype = "int8", shape = (4, 13, 13))#candidate|3121|(4, 13, 13)|var|int8
bop_3122 = relay.equal(call_3111.astype('bool'), relay.reshape(var_3121.astype('bool'), relay.shape_of(call_3111))) # shape=(4, 13, 13)
bop_3125 = relay.equal(call_3112.astype('bool'), relay.reshape(var_3121.astype('bool'), relay.shape_of(call_3112))) # shape=(4, 13, 13)
output = bop_3122
output2 = bop_3125
func_3136 = relay.Function([var_3121,], output)
mod['func_3136'] = func_3136
mod = relay.transform.InferType()(mod)
mutated_mod['func_3136'] = func_3136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3137 = relay.var("var_3137", dtype = "int8", shape = (4, 13, 13))#candidate|3137|(4, 13, 13)|var|int8
func_3136_call = mutated_mod.get_global_var('func_3136')
call_3138 = func_3136_call(var_3137)
output = call_3138
func_3139 = relay.Function([var_3137], output)
mutated_mod['func_3139'] = func_3139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2124_call = mod.get_global_var('func_2124')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3144 = relay.TupleGetItem(func_2124_call(), 0)
call_3145 = relay.TupleGetItem(func_2125_call(), 0)
output = call_3144
output2 = call_3145
func_3163 = relay.Function([], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mutated_mod.get_global_var('func_3163')
call_3164 = func_3163_call()
output = call_3164
func_3165 = relay.Function([], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_3168 = relay.TupleGetItem(func_3106_call(), 0)
call_3169 = relay.TupleGetItem(func_3108_call(), 0)
func_1829_call = mod.get_global_var('func_1829')
func_1832_call = mutated_mod.get_global_var('func_1832')
const_3178 = relay.const([2,-10,6,-8,1,5,-4,5,1,6,-8,4,-9,8,-7,-5,-1,-7,-7,3,-9,-5,5,1,-7,8,9,9,10,-1,10,-3,-3,7,-7,5,9,1,10,-8,10,4,9,-9,-3,-4,-6,-2,-9,-8,-9,4,-5,-2,10,-3,7,2,-3,6,1,8,9,8,-1,6,-1,10,9,10,3,10,3,7,-4,1,-3,5,-9,9,9,-1,-10,-4,-2,-8,8,-4,-1,6,-4,-1,3,8,-8,1,-6,8,3,3,-8,10,-9,8,7,-3,10,9,-9,5,-6,5,-1,6,-4,-1,1,10,-8,-10,-2,-8,-7,4,-6,3,9,3,-8,-4,-9,-7,-8,10,5,3,-3,10,9,-7,-4,6,6,-3,-8,1,4,10,6,10,-10,-1,-3,4,-4,7,-1,3,-10,-6,-5,-8,4,3,-7,-5,5,9,-6,1,4,-2,-9,-4,3,-1,-4,9,8,2,-6,-2,3,-8,4,1,-7,3,-7,-9,5,-1,9,-1,-4,2,-7,3,-6,1,10,6,-4,-5,3,3,2,-9,4,9,10,-9,8,1,3,-1,-3,-2,7,-9,-1,-10,-4,7,-8,5,-10,7,4,-1,9,10,1,8,-9,-8,-7,5,-7,9,-9,-3,9,-6,-1,10,10,-1,-3,-1,-6,-5,9,-6,10,-2,-10,-7,-9,1,-1,10,-10,4,-10,6,-6,-10,-10,-1,-2,9,-2,-2,-1,-2,2,4,3,-5,-5,-10,3,3,-6,4,-1,-3,-9,-5,6,3,-9,1,-6,-4,9,-9,-6,6,1,2,-2,5,8,4,-7,-3,5,-8,-10,2,-8,2,5,8,9,-8,-4,6,4,7,8,-8,4,4,10,-3,-6,4,6,-9,-1,8,3,1,-2,9,-10,3,-4,-8,-2,5,-8,3,-1,9,-3,-9,-8,4,-1,-2,-1,-3,-1,-9,1,-4,3,3,2,-7,-6,1,-7,6,7,8,-2,-3,3,-7,-8,-5,10,8,-7,-7,1,7,-1,7,10,6,-8,4,-2,6,-3,2,9,5,5,9,10,-6,-10,10,8,-1,-6,-6,9,10,-2,-7,-4,-7,6,5,-3,-6,-1,4,-2,-6,3,7,-5,-5,-9,10,-7,-2,-4,-7,-7,-1,-9,10,1,8,-7,5,9,-8,4,-2,4,4,-1,4,-3,-6,9,4,1,3,6,-7,10,5,-3,5,-3,3,9,3,2,6,7,-1,-1,-6,6,2,-9,10,-4,-9,-5,2,-2,7,4,3,-3,-10,3,-1,-1,3,-8,4,-9,2,7,-7,8,-1,7,-6,2,-5,3,-2,-7,-4,9,10,3,3,5,-9,5,-7,-5,3,10,2,3,10,10,-6,4,-10,-7,6,-6,5,4,4,-5,-9,-4,-10,7,-7,-6,10,9,4,5,-8,-5,-10,6,-8,-10,8,10,-1,10,5,-10,-5,-5,5,-10,-10,-7,-4,6,-4,3,-2,-1,-1,2,-8,-1,3,3,7,-2,-8,9,4,8,-6,3,1,3,-7,-7,9,-10,-7,2,-6,-3,7,-10,9,-10,-6,-3,7,10,2,10,9,-6,3,-10,-4,7,5,2,-5,7,5,10,-7,-9,10,-10,9,5,4,5,8,-9,9,-7,6,-6,5,5,6,8,-3,-7,4,6,-9,6,-3,10,-8,4,2,-5,6,8,-5,-2,-5,-3,-2,9,-2,-9,-1,4,-8,3,10,7,-9,-10,1,5,10,7,10,3,2,-4,-5,-2,1,-2,-3,-9,-6,-1,2,5,5,-5,-7,-7,-4,-1,1,1,9,5,6,8,-6,9,4,-1,3,6,-6,-10,-5,-9,-4,-10,-6,7,-10,2,-4,3,4,-9,-10,8,9,6,8,-10,-6,5,5,1,-7,-1,-5,-8,-8,5,-3,4,10,-6,5,-1,4,10,6,-7,6,3,-2,-10,10,-8,8,-5,-2,-9,4,-6,3,-10,-1,3,6,-9,-7,-9,-2,-9,7,-3,6,-5,-9,1,-1,3,9,-7,10,-3,5,-5,7,1,10,4,-3,6,-4,-6,-9,4,4,5,1,2,-8,-5,3,-2,8,-10,-6,5,-5,-4,-1,-4,-2,-9,-7,-9,10,-3,-9,-7,-10,10,-3,-6,7,3,-8,2,-8,-5,4,1,9,6,-8,5,-9,-3,-1,1,9,-7,-4,1,2,8,-1,9,-4,7,7,9,-8,-10,-1,8,-6,-1,4,2,-7,1,9,5,6,-5,-6,10,-5,3,-1,10,-6,6,10,-7,8,4,-9,-3,2,7,-10,-10,-7,-3,-3,-6,3,-8,-1,9,-2,-9,3,-5,7,1,-1,2,-3,8,9,5,-5,-4,-10,6,-7,5,6,-3,4,-10,-6,-2,-9,-4,-2,8,-6,6,7,-1,6,4,-6,6,-4,4,9,6,-6,-8,-3,-8,1,4,5,-2,-1,-4,7,8,4,-9,8,5,-8,-2,9,10,3,6,1,-8,6,1,10,5,3,-9,9,-5,-6,10,9,3,-3,-10,9,-9,8,10,-3,-3,9,7,7,7,-1,9,6,-1,-3,5,9,-10,-6,-6,-5,5,-1,4,-4,-3,9,-4,4,-3,-6,-10,4,1,-10,9,6,-1,-6,-6,7,5,9,-8,3,-1,-2,6,-3,-6,-6,8,8,-8,4,3,3,-5,7,9,-7,-1,-3,4,3,-7,-2,-10,4,-5,4,-2,-7,-1,-2,-6,-1,7,3,-8,-1,7,1,6,-7,-6,10,-10,-4,-1,3,5,-4,8,6,-8,-4,-10,4,2,6,2,7,5,5,8,-3,4,7,-7,-9,-8,9,9,4,5,-9,-6,-3,8,6,5,-10,1,10,-8,4,-3,-4,8,-4,-9,-2,-1,-7,2,-6,-7,8,2,5,-9,8,1,6,1,2,5,7,10,5,-9,3,-7,-1,10,-1,-4,3,-2,-7,-1,4,-7,-3,7,1,1,2,-4,9], dtype = "int8")#candidate|3178|(1120,)|const|int8
call_3177 = relay.TupleGetItem(func_1829_call(relay.reshape(const_3178.astype('int8'), [1120,])), 2)
call_3179 = relay.TupleGetItem(func_1832_call(relay.reshape(const_3178.astype('int8'), [1120,])), 2)
func_2445_call = mod.get_global_var('func_2445')
func_2449_call = mutated_mod.get_global_var('func_2449')
call_3185 = relay.TupleGetItem(func_2445_call(relay.reshape(call_3168.astype('float32'), [640,]), relay.reshape(const_3178.astype('int8'), [56, 20]), ), 3)
call_3186 = relay.TupleGetItem(func_2449_call(relay.reshape(call_3168.astype('float32'), [640,]), relay.reshape(const_3178.astype('int8'), [56, 20]), ), 3)
func_3016_call = mod.get_global_var('func_3016')
func_3018_call = mutated_mod.get_global_var('func_3018')
call_3203 = relay.TupleGetItem(func_3016_call(), 2)
call_3204 = relay.TupleGetItem(func_3018_call(), 2)
func_2322_call = mod.get_global_var('func_2322')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_3210 = func_2322_call()
call_3211 = func_2322_call()
uop_3219 = relay.erf(call_3168.astype('float32')) # shape=(640,)
uop_3221 = relay.erf(call_3169.astype('float32')) # shape=(640,)
func_2124_call = mod.get_global_var('func_2124')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3222 = relay.TupleGetItem(func_2124_call(), 0)
call_3223 = relay.TupleGetItem(func_2125_call(), 0)
output = relay.Tuple([call_3177,const_3178,call_3185,call_3203,call_3210,uop_3219,call_3222,])
output2 = relay.Tuple([call_3179,const_3178,call_3186,call_3204,call_3211,uop_3221,call_3223,])
func_3234 = relay.Function([], output)
mod['func_3234'] = func_3234
mod = relay.transform.InferType()(mod)
output = func_3234()
func_3235 = relay.Function([], output)
mutated_mod['func_3235'] = func_3235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2374_call = mutated_mod.get_global_var('func_2374')
call_3275 = func_2373_call()
call_3276 = func_2373_call()
output = call_3275
output2 = call_3276
func_3284 = relay.Function([], output)
mod['func_3284'] = func_3284
mod = relay.transform.InferType()(mod)
mutated_mod['func_3284'] = func_3284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mutated_mod.get_global_var('func_3284')
call_3285 = func_3284_call()
output = call_3285
func_3286 = relay.Function([], output)
mutated_mod['func_3286'] = func_3286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3287 = relay.var("var_3287", dtype = "float32", shape = (7, 16, 14))#candidate|3287|(7, 16, 14)|var|float32
uop_3288 = relay.tan(var_3287.astype('float32')) # shape=(7, 16, 14)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_3299 = relay.TupleGetItem(func_1558_call(), 1)
call_3300 = relay.TupleGetItem(func_1560_call(), 1)
output = relay.Tuple([uop_3288,call_3299,])
output2 = relay.Tuple([uop_3288,call_3300,])
func_3322 = relay.Function([var_3287,], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3323 = relay.var("var_3323", dtype = "float32", shape = (7, 16, 14))#candidate|3323|(7, 16, 14)|var|float32
func_3322_call = mutated_mod.get_global_var('func_3322')
call_3324 = func_3322_call(var_3323)
output = call_3324
func_3325 = relay.Function([var_3323], output)
mutated_mod['func_3325'] = func_3325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_3386 = relay.TupleGetItem(func_3106_call(), 1)
call_3387 = relay.TupleGetItem(func_3108_call(), 1)
output = call_3386
output2 = call_3387
func_3402 = relay.Function([], output)
mod['func_3402'] = func_3402
mod = relay.transform.InferType()(mod)
output = func_3402()
func_3403 = relay.Function([], output)
mutated_mod['func_3403'] = func_3403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1737_call = mod.get_global_var('func_1737')
func_1738_call = mutated_mod.get_global_var('func_1738')
call_3430 = relay.TupleGetItem(func_1737_call(), 1)
call_3431 = relay.TupleGetItem(func_1738_call(), 1)
output = relay.Tuple([call_3430,])
output2 = relay.Tuple([call_3431,])
func_3442 = relay.Function([], output)
mod['func_3442'] = func_3442
mod = relay.transform.InferType()(mod)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mutated_mod.get_global_var('func_3442')
call_3443 = func_3442_call()
output = call_3443
func_3444 = relay.Function([], output)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_3453 = relay.TupleGetItem(func_1558_call(), 1)
call_3454 = relay.TupleGetItem(func_1560_call(), 1)
var_3471 = relay.var("var_3471", dtype = "float32", shape = (640,))#candidate|3471|(640,)|var|float32
bop_3472 = relay.floor_mod(call_3453.astype('float32'), relay.reshape(var_3471.astype('float32'), relay.shape_of(call_3453))) # shape=(640,)
bop_3475 = relay.floor_mod(call_3454.astype('float32'), relay.reshape(var_3471.astype('float32'), relay.shape_of(call_3454))) # shape=(640,)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_3476 = relay.TupleGetItem(func_815_call(), 0)
call_3477 = relay.TupleGetItem(func_817_call(), 0)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_3485 = relay.TupleGetItem(func_3106_call(), 0)
call_3486 = relay.TupleGetItem(func_3108_call(), 0)
output = relay.Tuple([bop_3472,call_3476,call_3485,])
output2 = relay.Tuple([bop_3475,call_3477,call_3486,])
func_3490 = relay.Function([var_3471,], output)
mod['func_3490'] = func_3490
mod = relay.transform.InferType()(mod)
mutated_mod['func_3490'] = func_3490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3491 = relay.var("var_3491", dtype = "float32", shape = (640,))#candidate|3491|(640,)|var|float32
func_3490_call = mutated_mod.get_global_var('func_3490')
call_3492 = func_3490_call(var_3491)
output = call_3492
func_3493 = relay.Function([var_3491], output)
mutated_mod['func_3493'] = func_3493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_3532 = func_3163_call()
call_3533 = func_3163_call()
uop_3536 = relay.erf(call_3532.astype('float32')) # shape=(8, 16, 5)
uop_3538 = relay.erf(call_3533.astype('float32')) # shape=(8, 16, 5)
output = relay.Tuple([uop_3536,])
output2 = relay.Tuple([uop_3538,])
func_3540 = relay.Function([], output)
mod['func_3540'] = func_3540
mod = relay.transform.InferType()(mod)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mutated_mod.get_global_var('func_3540')
call_3541 = func_3540_call()
output = call_3541
func_3542 = relay.Function([], output)
mutated_mod['func_3542'] = func_3542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_3593 = func_2082_call()
call_3594 = func_2082_call()
output = call_3593
output2 = call_3594
func_3606 = relay.Function([], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
output = func_3606()
func_3607 = relay.Function([], output)
mutated_mod['func_3607'] = func_3607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1570_call = mod.get_global_var('func_1570')
func_1571_call = mutated_mod.get_global_var('func_1571')
call_3644 = func_1570_call()
call_3645 = func_1570_call()
output = relay.Tuple([call_3644,])
output2 = relay.Tuple([call_3645,])
func_3652 = relay.Function([], output)
mod['func_3652'] = func_3652
mod = relay.transform.InferType()(mod)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mutated_mod.get_global_var('func_3652')
call_3653 = func_3652_call()
output = call_3653
func_3654 = relay.Function([], output)
mutated_mod['func_3654'] = func_3654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_3683 = relay.TupleGetItem(func_1315_call(), 0)
call_3684 = relay.TupleGetItem(func_1316_call(), 0)
func_2124_call = mod.get_global_var('func_2124')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3687 = relay.TupleGetItem(func_2124_call(), 1)
call_3688 = relay.TupleGetItem(func_2125_call(), 1)
func_1453_call = mod.get_global_var('func_1453')
func_1455_call = mutated_mod.get_global_var('func_1455')
call_3696 = relay.TupleGetItem(func_1453_call(), 1)
call_3697 = relay.TupleGetItem(func_1455_call(), 1)
func_2322_call = mod.get_global_var('func_2322')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_3724 = func_2322_call()
call_3725 = func_2322_call()
output = relay.Tuple([call_3683,call_3687,call_3696,call_3724,])
output2 = relay.Tuple([call_3684,call_3688,call_3697,call_3725,])
func_3736 = relay.Function([], output)
mod['func_3736'] = func_3736
mod = relay.transform.InferType()(mod)
mutated_mod['func_3736'] = func_3736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3736_call = mutated_mod.get_global_var('func_3736')
call_3737 = func_3736_call()
output = call_3737
func_3738 = relay.Function([], output)
mutated_mod['func_3738'] = func_3738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_3758 = func_2082_call()
call_3759 = func_2082_call()
func_2445_call = mod.get_global_var('func_2445')
func_2449_call = mutated_mod.get_global_var('func_2449')
const_3798 = relay.const([[-5.165317,-1.239671,-6.454243,0.404801,-6.361424,7.596174,-5.934826,7.937277,-8.655126,-6.339607,4.291207,-6.074919,5.159800,9.602774,-2.850855,-4.564792,-3.407159,-2.108279,6.722411,-1.801556,8.418221,-1.919906,-8.978440,8.355129,-8.056249,-0.431866,8.341692,5.944584,-1.901491,-1.759407,-9.972990,-6.114083,-5.152277,3.361887,-9.041340,8.696533,-9.470382,6.460345,3.645655,2.559710,-0.940844,5.781304,-2.432003,5.420343,5.530833,-8.447256,-4.218735,-4.673898,7.471340,-5.124878,-8.429629,4.566290,-6.800613,3.423152,6.628725,7.130728,-7.317283,-4.928272,2.719298,-0.249003,9.819395,-7.328742,8.201478,-4.354819,7.354371,-8.154393,-1.705770,-6.298583,-2.780823,9.994549,-8.399290,-4.009805,1.320161,-0.453464,-9.349778,-0.290007,1.123557,1.688796,3.588067,8.580048,-7.574795,-0.472468,0.487862,8.173125,-1.647139,8.426688,-4.680211,-2.791217,-0.363923,-7.910708,1.444063,5.435144,-7.030068,4.394416,-4.097625,-5.292988,-4.894935,-4.698886,9.712416,4.754744,-7.798450,-9.271703,-1.917271,-4.419382,7.329817,7.981619,4.571446,9.368964,9.561675,-1.604021,2.584915,5.708448,3.121268,0.776181,6.626159,6.172022,-4.994067,-4.020347,-1.482098,3.473001,-7.210730,-9.466246,9.074193,8.232370,-4.906748,5.330375,-2.191569,5.111625,-1.731788,-7.563595,1.842443,0.951650,3.736212,6.007975,-3.871806,-0.912554,1.190594,6.473547,-8.083731,-8.453924,-1.874086,5.628731,-0.438585,-1.158032,8.861073,-0.774939,-1.242869,-5.198235,-5.604988,0.228270,0.917998,9.790522,-1.205105,2.230236,5.035364,6.591955,6.660451,-9.554605,7.757292,-6.168753,1.669772,-9.523050,-6.102306,9.801136,-3.665299,-1.865327,-7.964790,-8.496488,-2.932324,-5.766511,0.868486,6.405513,-5.387247,-3.166525,-6.721614,-0.836286,-9.906234,-5.438171,-3.184709,5.798920,-4.333002,-5.529130,7.384891,-6.769565,-8.385497,4.516766,-6.642038,4.479060,-0.649309,8.475832,-9.770694,-7.743063,-8.381721,-9.790318,-6.060268,8.785999,9.190530,-3.043393,-6.477171,-3.093037,1.174424,7.695355,-6.815692,-0.169555,-9.116776,7.083463,5.032520,4.319693,-1.497661,-3.362372,2.634310,-4.322774,1.184175,8.142864,3.351541,8.121202,7.894427,-2.914139,1.495906,-8.046012,-8.192683,-2.857276,5.142994,0.132903,1.587078,6.825955,3.931316,1.058967,-6.937246,1.311887,-7.563136,-4.217171,3.230621,3.464445,3.985782,-8.058195,-0.101386,9.876717,0.715687,8.302786,9.462148,0.611738,-0.628106,0.469665,-4.692259,-8.479915,4.083949,-6.506256,-5.356701,8.598297,-9.315456,9.039770,3.726636,-7.324168,-9.553112,0.177208,-5.938116,-0.483089,-6.319000,6.547298,-7.876910,8.192518,-5.697080,-0.222781,-6.799023,-1.011518,-9.689951,1.198650,9.698441,-1.291197,3.029455,6.696802,-1.862726,3.805328,2.875355,9.549233,-4.323660,-1.005245,3.272788,0.734505,-0.092269,-3.436480,-0.875788,-1.628072,3.678603,8.788992,2.536313,6.532305,-8.838145,-7.583760,8.502941,-3.430510,-3.749360,7.441613,0.427437,8.005049,-4.567868,-4.503122,0.735359,-2.422454,1.827230,-2.089967,-8.017370,4.007092,-8.229429,0.322693,7.513541,7.225815,-1.474357,5.294155,-1.691563,5.968505,-6.342434,1.412870,1.186777,8.691631,7.619011,1.971760,4.727225,-0.198056],[-8.085722,0.084708,9.355334,3.171670,6.524351,-8.199700,-3.029648,4.253978,3.206612,-3.202486,-0.571986,-5.173434,3.992022,-5.713598,-3.426809,-9.079949,-7.342597,-8.780590,2.932851,2.552127,7.675670,-1.808790,0.418618,-6.950681,-6.380347,7.649286,-5.588434,-2.577854,5.606863,-9.913715,3.325707,-9.538016,9.955488,-4.864391,2.803626,6.976067,2.136875,-2.915377,2.786392,8.594965,6.987019,9.618311,-1.261247,-7.432774,-2.993971,7.453226,6.711794,0.047612,3.179545,9.321769,7.480073,7.642129,-2.433074,4.626088,-3.889472,2.816201,-8.547486,-1.939342,-1.088868,-4.792581,3.977353,3.138189,-6.582076,0.059901,-3.983449,-2.376646,-5.829484,-4.675099,4.187541,-4.461278,-4.070421,7.013806,-2.096982,-7.391840,-1.476043,5.050371,-4.520122,2.827805,5.028020,-7.099040,2.142701,7.720745,-4.453190,2.156848,-7.037944,-4.918811,8.619045,5.169486,8.084517,3.583762,-5.875958,3.565172,5.347557,5.708670,-5.861540,-3.768382,-5.764766,5.606011,3.325181,-4.911641,-4.734475,-6.824819,0.802917,-3.445366,4.665157,-1.615193,-5.459627,7.813560,-2.428344,5.842277,-4.074119,1.495430,2.882053,-1.522648,3.206170,-3.594944,5.383076,0.611294,-0.394588,9.511486,1.490627,-5.424170,9.047594,0.797674,-6.313988,-5.018983,-6.949967,-1.613507,-1.733678,-4.694503,7.246741,-6.188313,-8.842685,1.428813,0.805514,-4.502753,9.258907,-9.364167,-4.519981,-6.708412,-4.234217,-1.115805,-0.801413,3.038877,2.072065,-6.138438,-9.332449,7.709348,8.705402,-8.400491,5.237816,0.456969,1.119814,9.973212,-3.231798,-2.098109,6.424240,9.830494,7.012349,-9.815155,8.828273,-8.867856,1.852037,-3.391987,-0.413106,0.098699,4.359119,-6.108659,5.243538,7.441457,-5.233101,-1.265980,-4.019244,2.521181,-3.387001,-1.486155,7.195038,-8.808922,-6.761532,5.746740,7.647451,-7.517943,8.854769,2.141032,-3.302008,-8.975336,-7.349615,-9.629281,3.380387,3.819663,-4.551768,3.917235,-0.585906,-5.591544,-9.725944,7.797724,7.797013,-9.182672,6.024675,8.128855,-0.125463,-0.095881,-9.092074,2.387667,-3.816784,-9.681626,-7.981292,-6.150125,4.033238,8.774809,-2.900645,8.857773,-8.462620,0.201677,6.875273,-8.242799,-3.381078,-5.485650,2.533141,-5.394678,-2.816477,-1.193562,-8.073392,2.930215,-7.803321,9.109530,-9.441231,-5.351710,1.860322,-1.176329,-7.047350,-4.565723,2.093565,6.921605,4.931898,-1.498011,-9.099037,-6.557311,-8.892794,-4.631093,4.629532,9.936471,-1.886861,-4.168214,6.865306,-4.591806,9.638063,4.955661,-9.993967,-6.641217,-0.433631,1.187976,1.617044,-6.218842,-4.404864,-8.396554,-4.433440,4.785097,0.715729,-0.981438,-8.661965,-4.759732,-7.992857,-5.901927,9.983712,-6.453646,3.977784,-1.867614,9.236844,-3.634404,-1.459580,3.427941,5.177275,3.391996,4.742497,9.130752,6.631404,3.113076,4.011523,-4.765724,-9.747715,2.962876,-7.717095,3.472688,-9.090785,4.490391,-7.114883,7.265043,3.055343,0.834566,8.128041,-3.709870,-9.416314,-9.160468,2.130136,-6.253498,2.677848,-0.798640,-8.186562,8.482416,1.670004,9.402892,-3.548430,2.847630,4.325059,-7.197838,-5.896943,6.246584,-6.800187,-9.543231,-0.566405,-4.159855,-1.850605,-0.258543,-5.577234,3.609417,-6.593022,5.352710,-6.656884,8.004228]], dtype = "float32")#candidate|3798|(2, 320)|const|float32
const_3799 = relay.const([[3],[-1],[-9],[3],[10],[6],[4],[-8],[5],[-2],[9],[7],[6],[-8],[10],[-6],[-5],[5],[-7],[-4],[10],[2],[10],[-5],[-6],[-1],[2],[2],[-5],[-9],[-2],[9],[-3],[1],[-3],[-8],[-7],[-9],[10],[3],[10],[10],[-3],[1],[3],[-3],[6],[-4],[6],[-2],[-2],[-4],[-1],[-5],[4],[7],[-1],[7],[3],[2],[-10],[3],[-6],[-9],[-2],[-3],[-9],[1],[-7],[-3],[4],[8],[-10],[9],[-5],[-9],[5],[10],[-9],[-8],[-10],[-3],[-8],[-1],[1],[-10],[5],[-10],[3],[6],[2],[10],[7],[3],[-1],[-5],[1],[-1],[10],[-6],[5],[8],[3],[3],[-9],[1],[-4],[9],[5],[5],[2],[-8],[-6],[2],[1],[1],[-5],[6],[-4],[2],[-9],[5],[8],[-5],[7],[-10],[10],[1],[-6],[-5],[4],[-3],[-2],[-5],[-7],[2],[-1],[-9],[2],[-1],[-4],[7],[10],[-1],[5],[-5],[10],[6],[-4],[-8],[7],[7],[6],[7],[10],[6],[-3],[-7],[5],[1],[-1],[-8],[4],[-5],[-4],[-1],[3],[-9],[6],[9],[-5],[9],[10],[-1],[3],[4],[8],[-7],[6],[1],[4],[-1],[2],[10],[-7],[3],[5],[-10],[-7],[1],[-2],[-5],[9],[-5],[3],[4],[-9],[-6],[4],[-8],[-4],[3],[-2],[-6],[3],[-10],[4],[-9],[7],[-9],[9],[-8],[8],[-9],[8],[3],[8],[-3],[8],[-1],[9],[-8],[-7],[8],[-1],[2],[10],[-8],[4],[9],[5],[-5],[-8],[5],[-10],[-7],[-8],[-3],[-5],[8],[-10],[6],[2],[6],[-1],[9],[-9],[-9],[5],[-4],[-10],[5],[9],[-4],[-1],[-8],[7],[-10],[-10],[-7],[3],[7],[10],[-2],[-7],[9],[7],[-5],[4],[-9],[-4],[-7],[-5],[-1],[5],[-5],[2],[2],[-7],[-9],[9],[2],[-4],[4],[-8],[4],[-2],[-4],[9],[-1],[3],[-3],[-6],[-9],[7],[7],[-5],[-4],[10],[8],[3],[-2],[4],[1],[3],[-8],[-7],[-1],[3],[-6],[-7],[-10],[6],[1],[4],[-3],[-1],[9],[5],[1],[-3],[4],[7],[3],[-7],[-4],[-5],[-7],[8],[4],[9],[-8],[-4],[-8],[-8],[-5],[-7],[1],[6],[7],[4],[-10],[-6],[10],[6],[8],[1],[6],[5],[-2],[-4],[-6],[-8],[4],[-2],[9],[-2],[4],[5],[4],[8],[-7],[-9],[4],[-8],[7],[-5],[-10],[7],[-9],[4],[-4],[9],[6],[4],[7],[1],[-10],[-6],[4],[-1],[3],[-1],[1],[8],[-8],[9],[1],[-2],[4],[-7],[9],[-5],[-10],[-3],[5],[5],[-10],[-3],[-4],[-10],[-5],[6],[9],[-3],[5],[5],[9],[5],[1],[4],[-4],[5],[5],[6],[3],[4],[6],[-6],[-8],[-9],[-10],[-1],[4],[-8],[3],[-2],[3],[2],[9],[9],[-1],[10],[3],[-4],[4],[7],[8],[4],[-3],[-9],[-6],[-3],[2],[9],[3],[-1],[-1],[4],[6],[6],[-9],[-5],[1],[1],[2],[10],[2],[-9],[1],[6],[-5],[8],[10],[1],[-10],[-8],[-10],[-8],[-10],[4],[-8],[2],[-8],[-8],[8],[-2],[-3],[-1],[4],[10],[9],[-3],[-1],[-9],[-9],[-3],[-7],[-10],[-7],[-7],[2],[-9],[2],[9],[2],[-8],[-9],[1],[3],[1],[4],[8],[10],[-8],[6],[-1],[5],[-3],[-10],[2],[4],[-2],[-4],[-3],[2],[6],[7],[-7],[4],[3],[3],[8],[3],[-4],[6],[4],[8],[4],[-10],[9],[-2],[-10],[-1],[-7],[4],[-8],[-3],[-4],[10],[1],[6],[7],[-3],[7],[2],[7],[-1],[5],[6],[10],[4],[-7],[-4],[5],[-1],[-9],[2],[-2],[-9],[-10],[7],[6],[-4],[1],[-3],[-10],[-8],[-5],[-7],[6],[7],[-6],[3],[5],[9],[4],[-1],[-3],[9],[5],[-6],[10],[1],[10],[-8],[-8],[4],[-5],[2],[-1],[-5],[6],[-3],[-3],[6],[8],[-6],[-7],[6],[6],[6],[10],[-8],[6],[-6],[10],[2],[-9],[8],[9],[3],[-5],[8],[5],[1],[-9],[-5],[-6],[-7],[-2],[9],[-6],[1],[-6],[-1],[-2],[-6],[3],[-3],[7],[10],[-1],[-6],[-8],[9],[-6],[4],[-9],[-9],[-6],[4],[5],[7],[2],[-8],[3],[9],[-3],[-1],[8],[2],[8],[7],[-3],[-4],[9],[6],[-6],[3],[4],[10],[-7],[3],[4],[4],[-6],[7],[6],[-1],[4],[-7],[3],[-6],[8],[-10],[-1],[2],[-9],[-10],[9],[-6],[-2],[-8],[1],[-7],[-7],[8],[10],[1],[-3],[2],[1],[-4],[9],[3],[9],[2],[4],[-2],[-1],[10],[5],[-8],[-3],[-5],[-9],[-2],[1],[9],[9],[-7],[-3],[4],[10],[4],[4],[9],[-3],[-6],[-7],[-3],[-8],[-5],[1],[8],[-7],[-2],[5],[-2],[1],[6],[2],[-7],[-4],[3],[6],[8],[-5],[2],[8],[-7],[6],[-7],[-7],[-5],[7],[-6],[-7],[-7],[-9],[-4],[8],[-8],[8],[8],[1],[-3],[9],[7],[-1],[4],[4],[-6],[-6],[3],[3],[8],[-3],[6],[-6],[7],[2],[-6],[2],[-6],[-6],[10],[2],[-10],[-10],[4],[4],[7],[-8],[-9],[7],[-4],[6],[9],[3],[-2],[6],[6],[9],[-8],[1],[-4],[-6],[2],[-4],[-10],[7],[-2],[-4],[-2],[6],[4],[7],[4],[10],[-4],[-8],[7],[9],[-9],[8],[-6],[3],[-9],[-8],[-4],[6],[-10],[9],[-8],[-8],[1],[-3],[7],[6],[7],[-5],[-1],[2],[5],[-3],[-6],[-6],[2],[10],[6],[4],[-1],[4],[1],[6],[-5],[2],[1],[-6],[-3],[5],[7],[-6],[9],[-9],[-6],[-2],[10],[-7],[-5],[-8],[5],[-8],[3],[5],[4],[7],[-3],[10],[-3],[-9],[-6],[5],[7],[6],[6],[4],[-7],[10],[-8],[-7],[-6],[4],[1],[1],[5],[-10],[1],[6],[9],[3],[9],[1],[-10],[5],[7],[-10],[8],[2],[8],[-3],[5],[5],[-1],[5],[-4],[-9],[6],[10],[-2],[-5],[8],[-2],[7],[-8],[-7],[-9],[6],[-8],[4],[9],[2],[4],[10],[5],[8],[-9],[-5],[-5],[-6],[1],[-3],[6],[4],[-8],[-1],[-8],[-7],[-2],[-8],[-6],[-9],[5],[7],[10],[2],[-7],[-2],[4],[-10],[6],[-9],[4],[-9],[-2],[-3],[3],[5],[-8],[5],[-8],[-1],[-2],[9],[-9],[-8],[8],[-9],[5],[9],[5],[8],[-6],[4],[-7],[-3],[-8],[9],[7],[5],[7],[-1],[1],[7],[10],[-5],[-8],[2],[6],[-9],[9],[-8],[-8],[6],[-7],[3],[4],[-8],[8],[3],[3],[-2],[1],[-8],[-2],[-7],[-1],[-5],[-2],[-6],[1],[2],[7],[-2],[-9],[-2],[5],[5],[8],[10],[-10],[-10],[-2],[2],[7],[4],[1],[-5],[7],[-3],[4],[-1],[9],[-2],[9],[8],[9],[-4],[4],[-8],[8],[-3],[7],[7],[-5],[2],[-6],[-6],[-9],[4],[2],[-1],[10],[3],[-3],[-9],[2],[-10],[-7],[-5],[-9],[-4],[2],[-2],[10],[-2],[7],[-3],[-9],[3],[7],[5],[-1],[10],[-3],[-2],[6],[1],[-8],[8],[8],[2],[3],[2],[-4],[-6],[-4],[-2],[-5],[5],[-1],[-2],[5],[-4],[6],[-2],[-2],[-2],[2],[9],[-7],[-6],[-7],[8],[-3],[9],[9],[9],[-7],[-6],[-5],[-9],[-5],[-5],[3],[2],[10],[-2]], dtype = "int8")#candidate|3799|(1120, 1)|const|int8
call_3797 = relay.TupleGetItem(func_2445_call(relay.reshape(const_3798.astype('float32'), [640,]), relay.reshape(const_3799.astype('int8'), [56, 20]), ), 0)
call_3800 = relay.TupleGetItem(func_2449_call(relay.reshape(const_3798.astype('float32'), [640,]), relay.reshape(const_3799.astype('int8'), [56, 20]), ), 0)
var_3804 = relay.var("var_3804", dtype = "float32", shape = (2, 320))#candidate|3804|(2, 320)|var|float32
bop_3805 = relay.subtract(const_3798.astype('float64'), relay.reshape(var_3804.astype('float64'), relay.shape_of(const_3798))) # shape=(2, 320)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_3814 = func_2082_call()
call_3815 = func_2082_call()
output = relay.Tuple([call_3758,call_3797,const_3799,bop_3805,call_3814,])
output2 = relay.Tuple([call_3759,call_3800,const_3799,bop_3805,call_3815,])
func_3837 = relay.Function([var_3804,], output)
mod['func_3837'] = func_3837
mod = relay.transform.InferType()(mod)
var_3838 = relay.var("var_3838", dtype = "float32", shape = (2, 320))#candidate|3838|(2, 320)|var|float32
output = func_3837(var_3838)
func_3839 = relay.Function([var_3838], output)
mutated_mod['func_3839'] = func_3839
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3841 = relay.var("var_3841", dtype = "float64", shape = (6, 11, 8))#candidate|3841|(6, 11, 8)|var|float64
uop_3842 = relay.atan(var_3841.astype('float64')) # shape=(6, 11, 8)
func_2124_call = mod.get_global_var('func_2124')
func_2125_call = mutated_mod.get_global_var('func_2125')
call_3863 = relay.TupleGetItem(func_2124_call(), 0)
call_3864 = relay.TupleGetItem(func_2125_call(), 0)
var_3868 = relay.var("var_3868", dtype = "float32", shape = (8, 16, 5))#candidate|3868|(8, 16, 5)|var|float32
bop_3869 = relay.add(call_3863.astype('int8'), relay.reshape(var_3868.astype('int8'), relay.shape_of(call_3863))) # shape=(8, 16, 5)
bop_3872 = relay.add(call_3864.astype('int8'), relay.reshape(var_3868.astype('int8'), relay.shape_of(call_3864))) # shape=(8, 16, 5)
func_1570_call = mod.get_global_var('func_1570')
func_1571_call = mutated_mod.get_global_var('func_1571')
call_3889 = func_1570_call()
call_3890 = func_1570_call()
output = relay.Tuple([uop_3842,bop_3869,call_3889,])
output2 = relay.Tuple([uop_3842,bop_3872,call_3890,])
func_3893 = relay.Function([var_3841,var_3868,], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3893_call = mutated_mod.get_global_var('func_3893')
var_3895 = relay.var("var_3895", dtype = "float64", shape = (6, 11, 8))#candidate|3895|(6, 11, 8)|var|float64
var_3896 = relay.var("var_3896", dtype = "float32", shape = (8, 16, 5))#candidate|3896|(8, 16, 5)|var|float32
call_3894 = func_3893_call(var_3895,var_3896,)
output = call_3894
func_3897 = relay.Function([var_3895,var_3896,], output)
mutated_mod['func_3897'] = func_3897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_897_call = mod.get_global_var('func_897')
func_899_call = mutated_mod.get_global_var('func_899')
call_3912 = relay.TupleGetItem(func_897_call(), 1)
call_3913 = relay.TupleGetItem(func_899_call(), 1)
func_2661_call = mod.get_global_var('func_2661')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_3925 = relay.TupleGetItem(func_2661_call(), 2)
call_3926 = relay.TupleGetItem(func_2662_call(), 2)
output = relay.Tuple([call_3912,call_3925,])
output2 = relay.Tuple([call_3913,call_3926,])
func_3939 = relay.Function([], output)
mod['func_3939'] = func_3939
mod = relay.transform.InferType()(mod)
output = func_3939()
func_3940 = relay.Function([], output)
mutated_mod['func_3940'] = func_3940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_3973 = func_2082_call()
call_3974 = func_2082_call()
const_3981 = relay.const([[[10,-2,-10,1,-6,6,-3,10,1,-2,-8,3,6],[-9,2,8,-7,8,-3,-7,-1,-6,6,-2,9,-4],[-9,-5,6,3,3,-10,6,-10,-7,7,-7,-4,-8],[-2,10,-5,10,2,-3,-8,8,7,-5,2,-1,2],[1,-3,-2,-7,-10,9,-10,7,-8,8,-2,2,1],[1,-5,1,9,-7,8,3,-6,-7,-5,-2,1,1],[-6,-3,6,-8,-7,9,3,-8,9,1,6,-4,4],[6,-7,-9,7,-7,-5,4,-5,9,8,-1,1,-4],[9,1,-3,1,1,2,-3,3,-5,-2,-1,-8,-10],[-7,2,9,-1,-7,5,-6,-9,6,-9,-1,-9,5],[-4,10,6,5,1,9,4,8,-5,8,3,7,-5],[6,-1,-6,8,1,5,1,-9,10,8,3,-2,-1],[-4,-9,-9,5,-8,7,6,9,5,7,-10,-7,5]],[[-6,-2,-4,-5,7,9,-6,-2,-4,-2,-8,-5,-10],[2,-5,-9,3,-8,-8,-3,-7,-7,-1,5,-5,-10],[-5,-10,10,-4,8,-8,7,-2,-6,-9,7,-7,3],[6,10,-3,-1,-10,4,9,-7,4,10,-8,9,1],[-3,6,10,-6,-6,-5,-9,-1,1,6,5,-4,6],[-3,-9,-2,-3,-10,8,5,-2,-4,-7,5,-3,8],[1,-2,3,-3,-10,-7,-5,5,-1,-9,1,6,-8],[-8,4,-8,-7,5,8,2,-4,10,-8,-3,5,3],[-7,8,2,6,-1,4,-7,-5,6,4,10,9,10],[6,6,-5,-10,8,-6,-9,-9,4,9,-10,9,-7],[9,-9,-10,4,6,-8,-2,-8,1,5,10,5,-1],[8,-10,-10,-9,-7,4,4,3,-6,-10,-3,-4,10],[-10,-5,1,-10,8,-1,-1,-7,-2,-4,-5,-7,-3]],[[-8,1,-10,7,1,-1,-1,2,-6,-2,7,4,-8],[10,-7,-6,-1,-7,9,8,-1,2,10,6,7,8],[2,5,-2,5,-9,4,-9,3,-4,7,-2,9,-5],[7,-3,-7,-9,-6,9,-10,-4,8,-7,3,-4,7],[9,9,1,5,-10,-2,7,10,9,4,-6,9,3],[-5,2,4,-5,7,-8,-1,-7,7,-1,9,7,-5],[4,-6,-6,8,10,1,-3,-3,-3,9,-9,5,5],[10,-5,-5,-7,-10,10,10,7,9,-2,-3,9,4],[-10,6,10,7,10,-6,3,-1,3,-6,5,-2,-8],[-1,-9,-4,3,-4,7,10,-3,4,4,10,-1,10],[10,2,-9,4,9,4,-8,-6,-10,-2,-5,-9,-4],[-10,7,-10,4,-6,8,-8,8,8,10,10,-10,-3],[9,-6,2,7,-6,6,-2,10,2,6,9,5,5]],[[9,8,-2,5,9,6,7,-4,1,-7,5,-10,-1],[-2,-2,2,4,-5,-6,-4,8,-10,1,1,-9,4],[10,-4,7,-7,-4,-10,8,5,-8,6,7,2,-9],[10,1,-3,-10,-2,-4,-7,8,7,5,-10,10,-8],[2,-3,-2,1,8,6,1,-8,7,-3,5,10,3],[2,6,8,-1,-10,-7,8,-5,5,4,-10,9,5],[7,-3,-5,-4,8,-10,-5,3,3,7,-8,5,6],[-3,1,8,-3,-8,7,-1,4,-3,6,-10,7,-9],[2,7,9,4,7,-8,4,-1,6,5,7,-8,3],[-2,-7,-7,6,8,5,-5,-5,-5,7,-1,9,-2],[3,-9,-7,-7,3,5,10,-5,7,-5,1,3,-5],[-2,10,1,5,10,-3,8,2,7,9,5,2,-2],[2,-4,10,3,1,1,-8,-7,9,8,3,3,9]]], dtype = "uint64")#candidate|3981|(4, 13, 13)|const|uint64
bop_3982 = relay.logical_or(call_3973.astype('bool'), relay.reshape(const_3981.astype('bool'), relay.shape_of(call_3973))) # shape=(4, 13, 13)
bop_3985 = relay.logical_or(call_3974.astype('bool'), relay.reshape(const_3981.astype('bool'), relay.shape_of(call_3974))) # shape=(4, 13, 13)
output = bop_3982
output2 = bop_3985
func_3989 = relay.Function([], output)
mod['func_3989'] = func_3989
mod = relay.transform.InferType()(mod)
output = func_3989()
func_3990 = relay.Function([], output)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3995 = relay.var("var_3995", dtype = "float64", shape = (5, 13, 13))#candidate|3995|(5, 13, 13)|var|float64
uop_3996 = relay.asinh(var_3995.astype('float64')) # shape=(5, 13, 13)
func_3136_call = mod.get_global_var('func_3136')
func_3139_call = mutated_mod.get_global_var('func_3139')
var_4011 = relay.var("var_4011", dtype = "int8", shape = (13, 52))#candidate|4011|(13, 52)|var|int8
call_4010 = func_3136_call(relay.reshape(var_4011.astype('int8'), [4, 13, 13]))
call_4012 = func_3136_call(relay.reshape(var_4011.astype('int8'), [4, 13, 13]))
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_4015 = relay.TupleGetItem(func_1197_call(), 1)
call_4016 = relay.TupleGetItem(func_1199_call(), 1)
output = relay.Tuple([uop_3996,call_4010,var_4011,call_4015,])
output2 = relay.Tuple([uop_3996,call_4012,var_4011,call_4016,])
func_4026 = relay.Function([var_3995,var_4011,], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
var_4027 = relay.var("var_4027", dtype = "float64", shape = (5, 13, 13))#candidate|4027|(5, 13, 13)|var|float64
var_4028 = relay.var("var_4028", dtype = "int8", shape = (13, 52))#candidate|4028|(13, 52)|var|int8
output = func_4026(var_4027,var_4028,)
func_4029 = relay.Function([var_4027,var_4028,], output)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4031 = relay.var("var_4031", dtype = "uint32", shape = (1, 3, 5))#candidate|4031|(1, 3, 5)|var|uint32
var_4032 = relay.var("var_4032", dtype = "uint32", shape = (4, 3, 5))#candidate|4032|(4, 3, 5)|var|uint32
bop_4033 = relay.bitwise_or(var_4031.astype('uint32'), var_4032.astype('uint32')) # shape=(4, 3, 5)
uop_4047 = relay.atanh(var_4032.astype('float64')) # shape=(4, 3, 5)
bop_4065 = relay.subtract(uop_4047.astype('uint8'), relay.reshape(bop_4033.astype('uint8'), relay.shape_of(uop_4047))) # shape=(4, 3, 5)
uop_4081 = relay.acos(bop_4065.astype('float32')) # shape=(4, 3, 5)
output = uop_4081
output2 = uop_4081
func_4083 = relay.Function([var_4031,var_4032,], output)
mod['func_4083'] = func_4083
mod = relay.transform.InferType()(mod)
mutated_mod['func_4083'] = func_4083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4083_call = mutated_mod.get_global_var('func_4083')
var_4085 = relay.var("var_4085", dtype = "uint32", shape = (1, 3, 5))#candidate|4085|(1, 3, 5)|var|uint32
var_4086 = relay.var("var_4086", dtype = "uint32", shape = (4, 3, 5))#candidate|4086|(4, 3, 5)|var|uint32
call_4084 = func_4083_call(var_4085,var_4086,)
output = call_4084
func_4087 = relay.Function([var_4085,var_4086,], output)
mutated_mod['func_4087'] = func_4087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2221_call = mod.get_global_var('func_2221')
func_2222_call = mutated_mod.get_global_var('func_2222')
call_4147 = func_2221_call()
call_4148 = func_2221_call()
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_4164 = relay.TupleGetItem(func_2730_call(), 0)
call_4165 = relay.TupleGetItem(func_2732_call(), 0)
func_2265_call = mod.get_global_var('func_2265')
func_2267_call = mutated_mod.get_global_var('func_2267')
var_4189 = relay.var("var_4189", dtype = "uint16", shape = (200,))#candidate|4189|(200,)|var|uint16
call_4188 = relay.TupleGetItem(func_2265_call(relay.reshape(var_4189.astype('uint16'), [4, 5, 10])), 1)
call_4190 = relay.TupleGetItem(func_2267_call(relay.reshape(var_4189.astype('uint16'), [4, 5, 10])), 1)
uop_4191 = relay.atan(call_4188.astype('float32')) # shape=(3, 2, 5)
uop_4193 = relay.atan(call_4190.astype('float32')) # shape=(3, 2, 5)
output = relay.Tuple([call_4147,call_4164,var_4189,uop_4191,])
output2 = relay.Tuple([call_4148,call_4165,var_4189,uop_4193,])
func_4195 = relay.Function([var_4189,], output)
mod['func_4195'] = func_4195
mod = relay.transform.InferType()(mod)
var_4196 = relay.var("var_4196", dtype = "uint16", shape = (200,))#candidate|4196|(200,)|var|uint16
output = func_4195(var_4196)
func_4197 = relay.Function([var_4196], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_4202 = relay.TupleGetItem(func_3106_call(), 1)
call_4203 = relay.TupleGetItem(func_3108_call(), 1)
func_2542_call = mod.get_global_var('func_2542')
func_2544_call = mutated_mod.get_global_var('func_2544')
const_4212 = relay.const([-2.364458,2.757851,5.920956,7.524085,-3.661404,-5.351386,-2.735508,-7.398116,1.479684,-0.635457,9.918161,6.463842,-6.907282,6.913013,-4.560881,-9.370737,3.822623,8.454284,-1.150921,-9.312875,4.015563,-8.187483,7.017429,4.639452,-3.801778,-9.940327,-6.875237,7.088935,8.393728,7.601896,6.815927,-3.673302,8.472747,1.562217,5.290344,-5.056249,-1.257655,-3.368953,-1.403074,-0.532521,-4.968556,-9.384526,-2.191121,8.574758,4.742797,8.710936,-2.441796,4.510199,7.291678,5.778698,6.987381,8.325203,-3.167328,3.688822,0.440611,8.558017,-9.364003,6.081639,-5.367045,-8.457456,9.390353,-2.682292,-4.946727,1.644061,-0.656627,-4.214004,-3.663308,0.644300,1.540974,8.500048,-3.123819,-6.279624,4.631369,4.139486,-1.816409,3.512305,1.652049,-3.864223,2.576373,4.939953,-1.493027,0.645675,6.205873,-4.241929,-1.515563,-7.129638,-6.432346,8.357411,-1.771089,8.151225,8.765403,-0.859389,-3.436306,-1.703016,-5.226619,5.665596,8.814002,2.162605,8.957760,5.555551,-7.337302,-9.896585,6.468217,-7.261424,-9.646397,-4.283906,-9.595282,-5.294608,3.270916,-0.885719,-1.446000,6.742304,1.223798,7.034135,-8.751480,-0.686962,-4.851608,1.475270,-3.613671,0.004401,-7.205806,-8.234231,-1.531339,9.517997,8.429147,8.233152,-6.660128,5.512539,3.498376,-9.035912,-1.568821,-6.756039,-1.819759,-8.292701,1.334009,7.515635,3.596484,-3.867231,4.941941,-4.813727,-6.206130,-8.145054,-0.776890,-1.900677,-8.742470,6.925693,8.463055,5.329819,4.379217,-8.654617,5.575117,-5.724201,-7.643850,-5.000704,0.831414,-6.522846,-2.801941,-9.399802,4.745026,3.180328,9.571637,-5.303474,-0.930173,-4.053463,0.888910,1.112921,7.345369,0.013139,-4.972583,5.642399,-7.806648,6.787760,-8.797776,7.336579,-5.499189,-0.742671,8.637995,-3.949888,-1.652904,-1.477402,-7.167654,3.372147,8.212831,9.215163,-6.299576,7.225450,-8.791662,-3.556804,-0.057766,-4.898873,-8.415890,1.485019,6.882044,6.455969,-1.382702,6.494036,3.318018,-0.276206,-1.786727,9.131018,-1.472357,7.126425,5.381863,-0.419828,-8.380964,9.762492,2.921629,-5.366180,-2.952866,-9.625858,9.836048,0.940217,-5.749081,-0.953858,6.505613,-1.368509,-6.565610,6.706368,6.249974,-1.087423,-6.148305,-6.898576,-4.236368,4.529228,-3.876902,4.866962,3.127510,1.697219,1.648679,-5.300518,5.224889,-8.443322,8.908185,7.540869,9.260620,-6.751362,1.802444,1.768710,7.445407,3.157006,1.627651,-3.259558,9.318546,-8.863752,1.735753,-3.174071,8.531390,-8.957519,-8.448948,0.296519,1.207755,7.869770,-8.727354,-4.101818,7.508225,-6.031883,1.132632,-2.954669,-2.503167,9.272196,6.533120,-5.198830,-5.480355,4.427861,-6.690680,7.224191,-9.696681,8.216331,4.153367,1.131128,2.194107,7.254816,-9.717706,8.355104,9.107138,-0.966159,-1.395375,1.379976,0.656009,0.958216,-4.291420,-5.907929,-8.748058,1.147602,7.821337,-3.750555,-1.952403,5.738018,2.704702,3.115695,0.270371,-1.230638,-8.232508,7.629342,-2.940182,-1.391770,7.872061,-6.948408,-4.272336,2.996032,-8.629384,-4.693941,-3.330306,1.318814,-4.239897,-0.711617,-7.485075,-6.418933,-7.278526,-8.334264,-1.941171,3.066351,2.427369,1.463975,-1.177108,-7.302763,6.625594,0.388836,-8.650130,4.389329,-7.766999,3.951228,-4.013299,4.394610,2.008639,-3.786965,-6.695016,8.335225,5.110243,4.844832,8.087519,-2.242894,-5.485118,-8.585674,-5.288427,-5.307278,4.880069,5.098002,1.109121,8.984117,-0.542592,-1.755675,2.646025,3.416594,7.038676,-8.042637,-3.928794,5.048960,4.511662,9.416307,6.990622,-9.738010,4.008937,0.799985,-4.440663,1.802934,-7.347431,-2.935078,5.811673,-1.671314,-9.792953,-9.837914,9.566322,-3.351188,7.802817,-6.622098,1.308143,-4.504946,-0.919732,1.524225,-3.824914,2.285330,-7.931771,-2.616323,0.024399,-2.450266,-0.449332,-6.323299,-8.923195,-1.958731,7.344476,6.441848,8.266016,5.168567,6.856626,-5.224278,-3.466892,-4.903672,6.464720,-3.841349,0.042938,6.515166,5.995972,5.629466,-8.215303,-7.826438,-2.379403,-8.252602,2.364956,2.173409,-2.251602,-3.968191,1.894586,0.731644,3.584811,-2.948731,3.112717,-0.493643,0.449916,-4.388248,6.415476,0.875221,-8.643946,8.387489,-6.156324,-5.648054,1.331375,9.658393,5.418129,1.675613,-3.651505,8.930902,6.708394,6.342097,8.705050,-0.887565,-9.292236,-9.837844,9.409540,-2.268416,-8.243174,-0.466232,4.880117,8.648047,7.615889,4.364334,-5.178173,4.899185,5.235383,-6.318672,-2.199903,6.746577,3.410549,-7.960859,-9.343496,-4.809594,7.585523,-4.346298,-6.712064,-6.584479,-4.658403,9.189751,-2.091194,9.954118,1.519158,3.718872,-7.406592,-9.288591,-9.533258,7.421137,8.625115,-8.481194,-5.037191,5.725740,-3.845355,-8.093236,-0.772263,6.926586,-2.395151,-5.055864,-5.450202,-1.144210,-7.235803,-4.160394,2.504145,8.840601,5.914028,2.503408,-8.955736,-3.908492,-9.038268,-7.244025,8.185843,-4.375551,-4.304005,3.415822,-1.326920,7.610255,0.169415,7.915814,8.348715,1.790596,-3.861230,4.362258,-5.416716,6.031145,-6.105761,2.580565,8.922569,-9.852019,-5.277980,8.525988,0.226310,9.107480,-6.791592,6.748801,-5.675410,1.001216,6.304963,8.836336,-7.102732,1.336289,-4.885857,-2.274599,-2.731450,8.504964,6.785004,5.060085,-9.196977,5.375188,1.863953,-3.748421,8.541084,2.192407,-9.655379,-5.580347,3.575364,-1.946231,-8.297288,-2.912066,5.824918,2.714741,-8.090119,2.761564,-0.912987,9.489376,8.003738,7.901382,0.029478,6.451672,1.209311,5.556080,7.869987,4.021199,-2.636006,-0.561461,5.850407,-2.966590,-5.323698,-2.556400,-0.811679,9.740474,-3.806145,4.881199,1.898861,1.929308,-1.412109,8.208451,-7.195017,-2.697673,-6.837887,-4.929474,-1.043848,1.960569,-7.709267,9.067136,-5.508837,-1.660675,8.059524,-0.107411,6.812000,-4.726310,-3.032158,5.322393,-5.875206,-1.821688,3.367570,-1.450221,8.998569,-9.980045,-0.627860,9.140468,-1.977949,2.877995,9.383355,-3.586745,4.585621,-6.461018,5.160159,2.715304,3.473104,-6.262160,-1.170132,6.644688,5.681638,-7.831030,6.274793,-1.513363,8.731814,-8.932319,8.751477,1.765684,6.609931,2.460159,-8.582532,-8.591319,-0.837144,-4.792306,7.883230,-6.747711,0.200607,-1.826867,-4.132715,7.165260,-3.871826,-7.542596,-6.111853,2.850696,-0.513714,-2.854420,3.758639,-3.624548,-4.884049,-1.401003,-0.513148,-7.140379,8.851711,0.205125,4.930684,-4.503376,-9.679204,7.981261,-6.143985,-0.514124,5.520672,7.309529,1.837163,-0.504263,-4.647533,8.973840,-7.597360,3.329202,5.684907,4.368830,0.061159,-1.783880,5.196656,-4.103833,-0.680275,-6.541360,-5.026772,-8.931956,0.526515,2.623406,-1.668785,3.359403,-4.116088,-2.803595,6.587587,-3.723393,4.494780,-4.805795,-9.394493,9.320949,9.401105,5.807179,4.968194,7.546278,-6.723803,4.671669,3.566906,0.729994,0.961994,3.278785,-4.022767,1.020132], dtype = "float32")#candidate|4212|(676,)|const|float32
call_4211 = relay.TupleGetItem(func_2542_call(relay.reshape(const_4212.astype('float32'), [676, 1])), 3)
call_4213 = relay.TupleGetItem(func_2544_call(relay.reshape(const_4212.astype('float32'), [676, 1])), 3)
const_4214 = relay.const([[[-6.564037,8.451858,3.623564,8.824656,3.422850],[-6.169365,-1.297254,6.056986,1.291939,0.863481],[-9.306208,3.318475,2.162395,-3.153387,3.205719],[7.827176,-2.570742,-3.429688,1.077583,5.309716],[9.951931,3.771790,9.423902,-8.412146,5.449278],[1.896251,8.501752,1.749357,1.660175,7.829227],[0.115391,-2.140465,9.538295,-2.148321,-5.956884],[-0.059946,2.129640,1.566898,-2.957438,-2.754219],[0.973100,-5.876989,-9.962696,7.458317,0.296841],[-6.433941,-1.951400,0.516082,8.988489,-8.554271],[0.816183,0.022623,6.834203,3.056137,-1.065277],[4.318135,-5.858606,-4.635286,0.682776,-6.330649],[-8.374165,-4.867413,7.307562,4.608060,0.145930],[-2.971218,-5.870841,9.010902,-5.938731,6.780462],[-5.012233,4.303936,-0.935700,9.106890,6.506169],[2.534713,-2.848762,-8.906872,4.881106,9.317896]],[[-3.074940,7.851915,0.911858,-4.315662,0.720807],[3.759197,-4.271031,-9.662850,-1.210332,0.499773],[1.712703,-7.814819,-8.993712,0.704950,-0.768868],[-6.830694,-8.443845,1.049781,-7.942259,-2.366765],[0.347846,-9.455556,-1.261201,8.913166,-9.039420],[-6.070057,8.438197,-5.456657,-8.664705,6.870140],[-9.125691,7.723810,7.459232,-5.703039,-9.246174],[4.638607,-3.325287,1.929125,1.518541,-0.195872],[1.081089,6.134404,6.465049,-7.371939,-7.071344],[-6.743195,4.538782,7.801002,-4.924981,0.603140],[-3.329742,-1.837569,-4.905083,9.195253,-8.254184],[1.092778,5.899059,-8.899058,-1.253945,-4.987662],[-4.934325,5.205311,-9.278769,-9.782174,8.046570],[9.543018,9.646610,-7.864649,8.382215,3.090473],[0.179674,-9.600630,0.995330,4.513145,7.652276],[-1.897260,-5.744133,-8.817312,7.805498,3.782756]],[[-9.526488,-0.848566,1.198693,5.228745,1.489912],[-0.649316,8.089939,9.756778,-7.713384,8.855783],[-4.994080,1.307302,9.548780,3.961239,2.310381],[0.548049,9.454173,5.487144,7.769497,0.615842],[0.433604,2.348208,-9.014731,0.237575,-5.410217],[6.105767,4.476404,7.137616,-6.198617,1.198611],[-0.549447,3.372235,-4.058651,-5.879394,9.697451],[-9.876486,2.283700,1.314635,-6.153510,-7.643486],[4.030138,2.500404,6.541710,-7.930543,1.946205],[2.911346,-8.374562,8.830531,5.792061,-4.710852],[-0.488111,6.164854,9.893274,2.996967,9.565568],[-8.775934,3.418439,6.599744,-7.972713,-9.016463],[1.946205,4.568815,-0.851174,9.967755,-8.619102],[-4.091238,-7.113096,2.877597,6.915317,-1.531323],[-7.133271,5.493737,-7.520594,-3.278356,-3.883250],[2.153621,-2.745121,-6.609882,9.249785,-1.773926]],[[7.432510,-7.346927,-1.836429,3.404708,4.674475],[9.325287,-8.919025,3.766186,2.153556,-3.483922],[7.627776,-6.917959,-1.089372,-2.564257,-7.562598],[-5.112279,-9.623861,2.129757,-4.544688,-1.681859],[-6.607553,1.371371,-8.226137,-8.095318,0.023866],[-6.896357,-8.962335,-4.373560,7.402933,-6.837330],[-8.157790,9.810537,-8.923199,4.202251,-9.694796],[-4.322101,5.701921,2.282378,-9.534585,-5.849564],[-9.698939,-6.680626,3.896290,-2.524533,-7.559306],[-3.387892,4.023807,4.505528,-6.553537,-9.822100],[-1.223068,-3.572351,-5.623864,1.301014,0.175652],[-1.165203,-7.407195,-8.188341,-2.942336,-3.388969],[2.247963,0.014881,6.017024,-9.571292,9.127541],[-7.411433,8.843906,-6.302293,-8.516117,6.166646],[7.530779,-1.985194,-8.318289,7.823152,7.729104],[9.638633,-4.020959,0.962193,2.906304,2.406266]],[[-1.327375,-9.438003,-6.050441,0.038518,4.797282],[-3.381986,2.077763,-1.180146,6.767407,-8.025651],[-7.476031,-7.251729,-1.913624,-2.996815,6.278623],[-0.079221,2.293927,-1.441320,7.482784,-9.222176],[-6.305106,7.158231,9.296374,6.531384,8.534251],[8.771349,-5.697646,-3.004777,2.808211,-8.467022],[3.579599,-1.902338,-6.227378,-5.281105,3.535288],[-2.372058,-9.075730,3.851633,4.544439,-5.450639],[-5.570019,-7.853731,8.636409,8.417067,3.109413],[-7.121458,-7.686812,6.713461,4.747627,0.144849],[1.711246,-2.699939,8.184815,0.637204,-4.667081],[-9.028615,-6.075842,7.250330,0.428880,-4.712822],[9.661461,3.323626,-4.571205,-1.719628,3.233377],[-9.831990,6.356091,-6.338185,-8.697001,7.569411],[1.762784,9.532912,0.566314,-8.954337,0.637534],[8.864470,6.126192,-2.546884,-7.015005,5.336414]],[[-2.142631,-9.753568,-5.457470,8.667320,-2.396700],[0.654816,-8.003002,4.840193,-0.412651,-7.715107],[4.723020,-1.039602,4.940563,-1.494258,7.235498],[7.271283,5.882181,9.461243,-3.125356,-5.952790],[2.296030,-0.641990,-3.853730,7.176090,5.301236],[-2.401941,-6.941638,7.232708,6.533513,6.563649],[8.481985,0.719819,-0.626211,-3.944743,5.278633],[1.461357,8.583001,-6.755094,-5.282957,-3.711853],[2.588337,-6.256224,1.193766,9.378811,7.027490],[0.663528,0.414133,2.006414,3.007415,-5.638897],[-3.288280,1.595014,-9.973304,2.695169,-2.739909],[-5.320574,-6.935662,2.798285,8.774425,-3.060015],[4.088796,9.077450,-4.426986,-4.315708,1.678442],[-5.522045,-4.479530,4.509285,7.795313,6.977490],[-3.880344,-1.198824,-8.881746,-6.302971,-3.871624],[-7.207208,-5.884756,0.192287,-2.573225,-4.638758]],[[-7.261176,5.562290,-9.274585,9.398549,9.534224],[1.669030,3.617149,-5.492892,3.303761,7.343225],[-4.393136,3.777383,9.779320,8.489484,-2.713642],[3.130818,0.168731,-1.627210,9.424307,7.055278],[-8.593951,-6.484687,-7.318489,-2.767900,5.092940],[-2.463412,6.800548,-4.180286,-4.427540,3.312316],[0.530611,3.781212,4.837390,3.773017,-6.550982],[-6.180956,3.136420,-7.233890,1.372739,-1.578192],[-1.203007,-5.590234,-0.460518,-5.108531,3.045003],[-7.963343,5.480923,1.314259,9.061096,0.733703],[6.293816,-1.918795,1.288353,6.889888,6.709553],[8.597673,-0.206043,-8.248248,6.221158,7.081856],[-9.134671,9.262766,7.971334,-2.384443,1.767046],[-9.343255,0.832784,-7.259884,2.124478,-0.088390],[6.561713,-7.216654,9.331610,-9.662219,-4.108775],[8.617815,0.628034,-5.177446,7.816873,6.474775]],[[-3.240002,-5.054538,7.087364,-4.704758,-2.777011],[1.863754,2.868635,3.378736,-3.892662,5.428865],[6.352922,3.272295,5.668310,8.220800,9.675883],[-1.062781,9.104250,5.645386,1.906993,5.336109],[-1.363045,9.082016,9.513422,7.895586,-1.438693],[-3.874633,2.796686,5.743418,3.030370,-9.034679],[1.556754,-2.016212,4.734953,4.762162,-7.008546],[-2.063071,-6.240878,-8.692996,-9.615089,6.736852],[-3.500665,-5.217378,-3.364334,-1.063366,-8.383323],[-0.311476,8.776641,-2.602799,-3.147002,4.148469],[8.264920,-8.841335,2.807914,5.825022,-5.351031],[8.320875,-5.616601,-6.566874,5.832767,-9.392438],[9.990174,8.850802,2.470232,5.380573,-5.055542],[-0.279509,-7.160082,7.682053,3.659398,0.569309],[3.089201,-9.154391,-5.997003,-3.030470,-1.263198],[-9.547537,5.579165,-5.402645,6.727846,4.516320]]], dtype = "float32")#candidate|4214|(8, 16, 5)|const|float32
bop_4215 = relay.less(call_4202.astype('bool'), relay.reshape(const_4214.astype('bool'), relay.shape_of(call_4202))) # shape=(8, 16, 5)
bop_4218 = relay.less(call_4203.astype('bool'), relay.reshape(const_4214.astype('bool'), relay.shape_of(call_4203))) # shape=(8, 16, 5)
output = relay.Tuple([call_4211,const_4212,bop_4215,])
output2 = relay.Tuple([call_4213,const_4212,bop_4218,])
func_4220 = relay.Function([], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
output = func_4220()
func_4221 = relay.Function([], output)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3402_call = mod.get_global_var('func_3402')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_4222 = func_3402_call()
call_4223 = func_3402_call()
output = relay.Tuple([call_4222,])
output2 = relay.Tuple([call_4223,])
func_4235 = relay.Function([], output)
mod['func_4235'] = func_4235
mod = relay.transform.InferType()(mod)
output = func_4235()
func_4236 = relay.Function([], output)
mutated_mod['func_4236'] = func_4236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2854_call = mod.get_global_var('func_2854')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_4296 = func_2854_call()
call_4297 = func_2854_call()
output = call_4296
output2 = call_4297
func_4303 = relay.Function([], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
output = func_4303()
func_4304 = relay.Function([], output)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_4320 = relay.TupleGetItem(func_3442_call(), 0)
call_4321 = relay.TupleGetItem(func_3444_call(), 0)
output = relay.Tuple([call_4320,])
output2 = relay.Tuple([call_4321,])
func_4350 = relay.Function([], output)
mod['func_4350'] = func_4350
mod = relay.transform.InferType()(mod)
output = func_4350()
func_4351 = relay.Function([], output)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1558_call = mod.get_global_var('func_1558')
func_1560_call = mutated_mod.get_global_var('func_1560')
call_4383 = relay.TupleGetItem(func_1558_call(), 1)
call_4384 = relay.TupleGetItem(func_1560_call(), 1)
output = call_4383
output2 = call_4384
func_4390 = relay.Function([], output)
mod['func_4390'] = func_4390
mod = relay.transform.InferType()(mod)
output = func_4390()
func_4391 = relay.Function([], output)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_4401 = relay.TupleGetItem(func_3442_call(), 0)
call_4402 = relay.TupleGetItem(func_3444_call(), 0)
output = relay.Tuple([call_4401,])
output2 = relay.Tuple([call_4402,])
func_4406 = relay.Function([], output)
mod['func_4406'] = func_4406
mod = relay.transform.InferType()(mod)
output = func_4406()
func_4407 = relay.Function([], output)
mutated_mod['func_4407'] = func_4407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2661_call = mod.get_global_var('func_2661')
func_2662_call = mutated_mod.get_global_var('func_2662')
call_4447 = relay.TupleGetItem(func_2661_call(), 1)
call_4448 = relay.TupleGetItem(func_2662_call(), 1)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_4460 = func_2082_call()
call_4461 = func_2082_call()
output = relay.Tuple([call_4447,call_4460,])
output2 = relay.Tuple([call_4448,call_4461,])
func_4462 = relay.Function([], output)
mod['func_4462'] = func_4462
mod = relay.transform.InferType()(mod)
output = func_4462()
func_4463 = relay.Function([], output)
mutated_mod['func_4463'] = func_4463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3234_call = mod.get_global_var('func_3234')
func_3235_call = mutated_mod.get_global_var('func_3235')
call_4511 = relay.TupleGetItem(func_3234_call(), 5)
call_4512 = relay.TupleGetItem(func_3235_call(), 5)
output = call_4511
output2 = call_4512
func_4513 = relay.Function([], output)
mod['func_4513'] = func_4513
mod = relay.transform.InferType()(mod)
output = func_4513()
func_4514 = relay.Function([], output)
mutated_mod['func_4514'] = func_4514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3234_call = mod.get_global_var('func_3234')
func_3235_call = mutated_mod.get_global_var('func_3235')
call_4534 = relay.TupleGetItem(func_3234_call(), 3)
call_4535 = relay.TupleGetItem(func_3235_call(), 3)
output = call_4534
output2 = call_4535
func_4560 = relay.Function([], output)
mod['func_4560'] = func_4560
mod = relay.transform.InferType()(mod)
output = func_4560()
func_4561 = relay.Function([], output)
mutated_mod['func_4561'] = func_4561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_4582 = func_2082_call()
call_4583 = func_2082_call()
output = call_4582
output2 = call_4583
func_4590 = relay.Function([], output)
mod['func_4590'] = func_4590
mod = relay.transform.InferType()(mod)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4590_call = mutated_mod.get_global_var('func_4590')
call_4591 = func_4590_call()
output = call_4591
func_4592 = relay.Function([], output)
mutated_mod['func_4592'] = func_4592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3402_call = mod.get_global_var('func_3402')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_4593 = func_3402_call()
call_4594 = func_3402_call()
func_4390_call = mod.get_global_var('func_4390')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_4602 = func_4390_call()
call_4603 = func_4390_call()
func_2322_call = mod.get_global_var('func_2322')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_4606 = func_2322_call()
call_4607 = func_2322_call()
func_4350_call = mod.get_global_var('func_4350')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4608 = relay.TupleGetItem(func_4350_call(), 0)
call_4609 = relay.TupleGetItem(func_4351_call(), 0)
func_2373_call = mod.get_global_var('func_2373')
func_2374_call = mutated_mod.get_global_var('func_2374')
call_4619 = func_2373_call()
call_4620 = func_2373_call()
func_3606_call = mod.get_global_var('func_3606')
func_3607_call = mutated_mod.get_global_var('func_3607')
call_4625 = func_3606_call()
call_4626 = func_3606_call()
func_4406_call = mod.get_global_var('func_4406')
func_4407_call = mutated_mod.get_global_var('func_4407')
call_4627 = relay.TupleGetItem(func_4406_call(), 0)
call_4628 = relay.TupleGetItem(func_4407_call(), 0)
output = relay.Tuple([call_4593,call_4602,call_4606,call_4608,call_4619,call_4625,call_4627,])
output2 = relay.Tuple([call_4594,call_4603,call_4607,call_4609,call_4620,call_4626,call_4628,])
func_4631 = relay.Function([], output)
mod['func_4631'] = func_4631
mod = relay.transform.InferType()(mod)
output = func_4631()
func_4632 = relay.Function([], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_4652 = relay.TupleGetItem(func_1315_call(), 2)
call_4653 = relay.TupleGetItem(func_1316_call(), 2)
uop_4656 = relay.sigmoid(call_4652.astype('float32')) # shape=(640,)
uop_4658 = relay.sigmoid(call_4653.astype('float32')) # shape=(640,)
output = uop_4656
output2 = uop_4658
func_4672 = relay.Function([], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4672_call = mutated_mod.get_global_var('func_4672')
call_4673 = func_4672_call()
output = call_4673
func_4674 = relay.Function([], output)
mutated_mod['func_4674'] = func_4674
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4789 = relay.const([[[-7,7,-5,-5,-8,2,10,10,-3,-6,-2,-3,6,7],[-7,5,-9,1,7,3,-10,7,6,-7,-4,3,-2,10],[-6,-9,-9,6,7,2,-3,9,-1,-3,-6,5,3,-7],[8,5,6,4,-10,-3,-10,-1,1,6,10,10,-2,-5],[-5,-2,-2,7,-2,-1,-3,-9,9,-4,4,4,-1,-8]],[[-9,8,7,-9,6,7,6,10,2,10,1,-4,6,-9],[-2,10,1,-7,9,-9,9,2,-6,5,-2,-1,-1,-8],[-3,-5,-3,6,4,-4,9,-7,1,-4,-10,5,3,6],[9,2,2,-6,-4,-1,-6,-1,-10,5,-6,6,-9,-1],[-7,8,-1,-7,-10,10,-5,-4,5,8,-2,7,-2,-7]],[[6,-3,2,-8,-4,8,7,-9,8,-5,-9,-10,-6,2],[-2,8,4,8,5,-1,-10,-4,-6,3,-6,-8,-1,-7],[-5,-6,-7,-2,6,-9,7,-9,-10,8,-5,1,-9,-8],[5,-9,4,7,10,4,-1,-6,-4,7,-7,1,6,-3],[3,7,-7,-10,4,4,-7,1,-3,8,1,1,-10,9]],[[-8,-3,4,-9,-8,3,4,-7,8,-3,-4,-6,8,-4],[4,4,-6,1,7,-2,-8,-9,4,7,4,1,-1,-3],[-6,7,10,2,-10,-7,-4,4,-6,6,10,2,-3,10],[-1,5,1,9,-5,9,-7,-4,7,-5,-2,-5,-4,6],[9,3,10,9,-10,-5,1,-10,-10,9,4,-2,-5,-1]],[[-3,8,5,-2,-9,-8,-1,-2,7,-1,8,-6,-4,-3],[7,-9,2,-2,1,2,7,7,-3,10,-2,-6,-1,-7],[3,5,3,-10,-5,10,10,-6,-1,5,-3,-3,6,-7],[6,-3,3,10,-3,-1,-5,-4,4,-2,-2,-1,3,-2],[-5,-7,3,9,9,-10,-2,-1,-3,-1,-5,-1,1,-4]],[[8,-5,-4,-4,-4,3,-4,6,-5,4,3,4,-10,7],[-9,-8,-8,9,-7,9,6,5,-4,-8,9,6,7,2],[-6,-9,-3,-3,-9,-10,-5,-10,-10,3,-7,2,2,9],[-7,7,1,2,4,-2,-6,-1,-3,4,-5,7,5,-7],[-7,-6,-7,-10,10,2,-7,-9,1,6,3,7,-4,-10]],[[-6,-7,3,-7,-8,-9,-1,4,-9,3,-5,4,-6,5],[-7,-2,-2,-6,-4,-5,2,-3,-7,2,-10,-6,1,-10],[-2,8,10,4,9,-6,5,-7,7,1,-7,-10,6,-1],[-5,-6,7,-6,-6,-8,-10,-9,-8,-1,8,-7,-5,-1],[2,-1,-4,3,3,-8,-10,5,3,-5,4,-3,8,-5]],[[-8,5,10,-8,3,6,3,-6,-2,-2,-6,-5,-3,-1],[2,-5,6,-2,-7,3,-4,-7,-4,-9,-3,3,-8,-2],[-9,-1,2,-1,7,5,6,6,-6,8,-6,-8,7,-2],[10,-5,8,-1,-3,7,6,6,9,-5,-4,4,-9,3],[-4,3,1,-4,-6,-7,5,-1,-5,6,-8,8,-3,6]],[[-5,-2,-5,2,2,3,8,7,4,-8,-4,5,-7,-5],[-7,4,9,-8,10,-8,-5,10,-1,-9,-4,5,3,-1],[-5,1,-7,-2,3,-1,-2,-3,10,-2,-10,-7,10,-4],[4,-1,2,-8,9,7,4,2,7,-4,-1,-9,7,-9],[9,-10,-9,-9,3,1,-9,-3,-6,-8,-4,-1,7,8]],[[-7,-3,-10,-7,-3,1,-6,-9,3,-8,7,-2,-8,-6],[3,3,2,-6,6,-1,-4,7,9,6,8,-10,2,5],[-5,7,6,-1,5,-1,3,-1,8,-6,4,8,-8,6],[-2,-9,4,8,7,10,-7,4,5,-6,3,-10,5,-8],[6,-2,7,-7,9,-4,-3,10,-5,9,-10,-3,-8,-10]],[[8,-6,4,-5,9,-5,-7,9,-3,-9,3,-8,-4,6],[1,5,-5,-8,-8,3,4,10,-5,1,-7,-6,-2,-1],[-3,-8,-4,6,5,10,6,5,-1,3,-1,4,9,-8],[4,5,8,-4,8,4,5,-1,9,-2,8,-6,10,-8],[-2,7,-6,5,-8,6,10,-1,6,-5,7,-5,1,-5]],[[3,-1,8,1,2,9,7,-8,-7,-10,-3,8,-2,-5],[4,5,3,-10,-4,6,9,8,1,10,6,-1,-7,-9],[1,2,-5,-3,-3,-1,6,-4,3,10,1,3,2,-8],[-2,9,-2,1,10,-8,-4,1,-6,-4,9,4,6,7],[1,8,-4,-9,10,6,1,-2,-2,-7,-7,9,7,-6]],[[-1,10,10,-7,8,1,-5,9,-10,1,3,-10,10,-8],[3,9,-9,-7,-8,-3,10,6,2,1,6,4,1,2],[3,8,6,-1,-8,-5,-3,-5,-4,-8,4,-6,1,-10],[4,-4,3,-3,1,7,-2,-8,-1,-8,1,9,5,-8],[7,-9,-1,8,-6,7,6,-7,-4,-3,-7,10,-7,5]],[[-6,6,-2,-4,7,9,4,-1,9,9,4,-10,1,10],[9,-9,10,-6,-2,5,4,-5,9,-9,5,-4,7,3],[-4,-9,-10,-5,6,5,4,9,6,-8,-1,5,-4,8],[-3,-3,-4,7,1,-6,-5,-6,3,-9,-1,-3,-6,8],[-7,3,-7,-4,-1,5,-5,8,4,-1,9,-5,8,3]],[[-4,4,-9,-1,5,7,6,-7,-5,-1,1,7,1,-10],[-7,1,-8,-5,3,-3,-1,4,2,-8,-8,-9,10,-9],[-5,-2,-6,8,-9,8,10,10,-2,3,-8,3,2,5],[8,-5,-2,9,-1,1,1,9,1,-7,4,8,-10,7],[5,-4,-5,5,-7,7,-3,-7,8,-8,-5,-3,-4,2]]], dtype = "uint8")#candidate|4789|(15, 5, 14)|const|uint8
var_4790 = relay.var("var_4790", dtype = "uint8", shape = (15, 5, 14))#candidate|4790|(15, 5, 14)|var|uint8
bop_4791 = relay.bitwise_or(const_4789.astype('uint8'), relay.reshape(var_4790.astype('uint8'), relay.shape_of(const_4789))) # shape=(15, 5, 14)
func_1453_call = mod.get_global_var('func_1453')
func_1455_call = mutated_mod.get_global_var('func_1455')
call_4822 = relay.TupleGetItem(func_1453_call(), 2)
call_4823 = relay.TupleGetItem(func_1455_call(), 2)
output = relay.Tuple([bop_4791,call_4822,])
output2 = relay.Tuple([bop_4791,call_4823,])
func_4846 = relay.Function([var_4790,], output)
mod['func_4846'] = func_4846
mod = relay.transform.InferType()(mod)
var_4847 = relay.var("var_4847", dtype = "uint8", shape = (15, 5, 14))#candidate|4847|(15, 5, 14)|var|uint8
output = func_4846(var_4847)
func_4848 = relay.Function([var_4847], output)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_4855 = func_1211_call()
call_4856 = func_1211_call()
output = relay.Tuple([call_4855,])
output2 = relay.Tuple([call_4856,])
func_4882 = relay.Function([], output)
mod['func_4882'] = func_4882
mod = relay.transform.InferType()(mod)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4882_call = mutated_mod.get_global_var('func_4882')
call_4883 = func_4882_call()
output = call_4883
func_4884 = relay.Function([], output)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4672_call = mod.get_global_var('func_4672')
func_4674_call = mutated_mod.get_global_var('func_4674')
call_4975 = func_4672_call()
call_4976 = func_4672_call()
output = call_4975
output2 = call_4976
func_4985 = relay.Function([], output)
mod['func_4985'] = func_4985
mod = relay.transform.InferType()(mod)
mutated_mod['func_4985'] = func_4985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mutated_mod.get_global_var('func_4985')
call_4986 = func_4985_call()
output = call_4986
func_4987 = relay.Function([], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_4992 = func_3163_call()
call_4993 = func_3163_call()
const_4994 = relay.const([[[-3.440442,-9.914619,-0.526210,-7.636377,8.704039],[-6.789636,8.712407,9.668887,-7.898556,-7.653743],[-7.125898,-9.500364,-4.968508,-1.937999,-9.435521],[-5.898420,4.180732,9.890133,9.246384,-6.525802],[-4.876988,-4.329003,-5.295775,4.034491,3.116262],[-9.759260,5.660707,4.108317,6.618464,-6.673012],[-1.190408,-9.780990,1.779817,6.786135,9.277564],[0.923141,-3.003342,4.799335,1.819289,2.245685],[-4.597183,2.381009,-5.567474,-9.958140,-9.069519],[6.481367,8.779921,-0.077537,-6.541828,-2.989524],[6.157925,0.700473,5.249631,-2.284939,4.623663],[-5.391514,5.302631,9.711864,-3.935207,5.250952],[-6.689284,3.847217,6.777635,2.236295,1.615184],[4.816300,1.193304,-6.712808,-6.225124,-4.380378],[-7.194320,9.502798,-3.583792,-9.815997,-6.922447],[7.633560,-3.330448,3.333123,-2.019132,9.184822]],[[-6.068062,3.951759,7.133013,-8.397948,-5.418478],[1.685411,6.046144,6.598120,-6.117525,6.800603],[7.428451,3.723163,7.671319,6.375127,4.928341],[-6.426649,-3.948811,-3.789031,2.939605,4.601627],[4.800557,5.884348,0.203226,-2.137416,-7.812170],[4.125756,-7.478415,5.042140,0.368367,8.228936],[-1.998945,-1.074025,3.322939,-8.906824,2.749518],[1.882090,7.732750,-7.290501,6.761997,-4.090650],[-6.954415,5.291042,-1.903751,-6.360101,-3.131523],[9.614546,7.923068,2.200740,-3.747558,-7.011187],[9.799600,-5.940764,-4.603504,9.269786,1.699003],[9.194599,9.226977,-9.844545,5.225316,3.836123],[-6.940776,-4.721463,-2.404732,2.477444,-1.934205],[8.276425,6.398948,-4.329711,-6.005371,7.996013],[1.006170,5.720554,3.930105,-9.441144,-6.081910],[-5.535851,-8.715749,0.266435,-6.469874,3.391290]],[[-2.411930,-7.526795,-1.549805,4.583180,4.306947],[-5.309769,1.426830,7.415945,4.084119,6.886814],[-2.538491,3.951593,3.623452,9.497413,6.802609],[-1.445689,2.428553,4.552853,4.860299,-8.553720],[3.636509,7.560986,-0.163020,2.756474,-4.408633],[-6.650149,4.471350,-8.340542,-9.224767,-5.416516],[-6.398752,9.841918,-6.523864,-2.555111,9.829378],[-9.466099,3.133554,6.109527,-3.131734,-0.031943],[0.570293,0.583154,-0.796262,7.191897,-4.119413],[-7.853929,-8.179675,-8.386717,-0.878760,-4.528667],[-6.874934,-1.681972,-8.126053,6.285385,-7.222522],[-8.357498,-8.932755,-9.723666,4.799589,3.578371],[-7.657718,-5.201523,0.322569,1.187632,0.013177],[4.726048,-4.615480,-7.434790,2.204624,6.005229],[3.981435,-6.372072,-1.813667,-6.867984,-3.434515],[4.533851,1.335908,-5.613700,-2.602399,-2.700362]],[[2.686029,6.305610,6.136647,3.039403,-3.431105],[-7.525486,-7.441471,0.829127,-8.338076,-9.321764],[-7.265348,9.435437,4.523385,-0.641123,7.199984],[-7.446540,5.847169,-3.972797,1.431170,5.180421],[-4.814700,1.253982,-1.490957,1.344683,-0.991528],[-0.673606,2.518075,-2.500833,8.636765,6.732582],[6.985909,2.499990,7.670412,7.881732,6.230186],[-8.076180,-8.237892,-6.259617,1.798868,4.754883],[6.358891,-3.742915,0.330790,-2.162180,2.481889],[1.290696,5.991439,7.432361,-0.633225,3.176130],[-0.603674,-3.933955,3.855507,9.375495,-5.743421],[-2.465767,-6.593744,1.126152,6.118625,-9.315349],[3.342239,8.952195,1.465700,3.327439,3.088405],[5.676032,5.457256,-2.947743,7.829394,5.924824],[8.813634,5.695809,-8.840938,9.653815,-3.471500],[-3.522308,-4.476294,-1.043184,7.906190,4.289147]],[[-2.283915,-7.539808,-4.611113,-4.120595,-6.348268],[-5.108587,7.861757,-4.114002,-4.511308,2.045314],[2.855614,-9.189768,7.757282,0.184932,-4.195032],[1.826203,-4.479473,-9.916160,5.354819,-8.102234],[-2.666954,2.533511,-9.437872,0.522007,4.576667],[-4.986012,5.666627,-5.079033,7.683588,3.451679],[5.284283,1.943989,-7.091546,-6.126669,-2.180151],[4.576457,0.336804,7.163536,-2.901843,-0.340229],[0.760084,4.947907,1.162023,-6.026480,0.922551],[3.560399,-6.156594,-5.330319,-0.481290,-1.510141],[3.388372,-3.648334,-1.838258,9.747593,-8.061752],[8.055610,-0.579891,-5.328547,-1.055502,-5.263358],[-8.407400,-2.275332,-9.298351,8.897631,-8.204888],[-2.048382,-6.985523,-4.563022,-2.776441,4.448749],[-8.904819,-2.534770,7.005059,-4.216338,4.796738],[-8.749120,-3.842343,3.575285,8.850130,-1.952377]],[[-8.069065,-2.987770,8.881857,-1.247798,-2.302217],[-9.450183,-5.931656,7.445433,-1.573425,5.128443],[-7.859328,5.766844,0.940929,-2.862214,-7.188759],[-8.764028,8.043839,0.090969,9.033130,-3.418689],[8.658901,-6.818373,9.001018,-2.161074,-9.729120],[-0.876571,1.244195,2.636251,-7.350946,3.267429],[-1.749308,0.937407,-1.978649,-1.433626,-5.270181],[2.918018,-7.126157,6.983648,0.013597,7.729905],[-9.004332,6.007181,6.568006,-1.799385,-3.977621],[-1.067785,2.021738,-9.410571,-2.289938,6.558883],[1.618136,9.895440,5.459539,7.089732,-0.098978],[-1.099849,-8.977403,-7.997419,-6.409262,5.690535],[-5.176246,-9.142118,-2.867259,-8.767194,2.838731],[8.487150,-2.740677,-9.818679,-4.762297,9.934750],[-7.256406,4.772924,9.513222,0.194199,-8.437738],[-6.160897,-9.787455,-2.968446,4.203047,-8.856170]],[[-5.018587,9.544377,-3.634364,-7.542664,3.707279],[9.251155,3.421032,4.524791,-4.961396,0.714600],[6.939796,5.633528,-3.414542,-0.598738,-0.995495],[-6.859085,7.844723,-1.892972,-1.729419,-8.034334],[-3.307708,0.615331,-7.942641,-7.574083,1.280954],[2.541172,4.143699,0.859668,-9.389581,3.427748],[-5.832113,9.669734,7.982679,6.860232,7.586125],[1.071768,1.951831,5.745119,8.073304,-4.707280],[4.654309,-1.515640,-0.114044,-1.027224,3.404393],[-9.502417,-5.142344,8.685083,1.886970,6.778651],[-7.218456,-4.598791,1.560823,5.088719,8.768792],[-4.087532,9.728794,4.965859,-9.961707,-2.091034],[0.742152,2.479242,2.636343,4.794092,0.301673],[4.603004,5.143646,5.448563,4.962415,-7.487917],[-7.817085,-9.808217,2.839448,8.018821,9.780525],[8.530033,-6.090134,-8.779905,-4.531254,-3.528232]],[[-2.427772,6.975706,8.969158,8.837378,-5.125102],[5.341366,-2.999051,-8.199746,4.353393,9.968683],[-8.262023,3.541969,0.611439,-7.505337,8.994565],[0.548750,-1.818238,-7.579451,6.659927,-3.913759],[8.888293,-8.295457,1.084619,6.929370,-0.068170],[-9.802125,8.543121,-1.106935,3.225973,-8.714028],[5.927349,3.933641,4.574616,-9.079708,3.597393],[-4.826544,-5.266252,-0.879778,3.435263,1.002524],[-2.688551,-9.631486,3.512477,-1.341724,3.744064],[-8.771383,-4.755374,-3.980448,7.482785,-6.283691],[-6.908582,7.698275,2.984473,-7.440308,0.333643],[-0.039282,9.077572,1.703056,0.251980,-8.505589],[7.651785,-2.544276,-9.360200,3.006141,4.622906],[-7.880319,-1.494840,-2.545794,2.848674,-6.063148],[-7.107304,-1.412165,-0.314049,1.988477,0.794273],[-0.489562,-5.357475,-1.353289,-2.825257,-6.737953]]], dtype = "float32")#candidate|4994|(8, 16, 5)|const|float32
bop_4995 = relay.multiply(call_4992.astype('int16'), relay.reshape(const_4994.astype('int16'), relay.shape_of(call_4992))) # shape=(8, 16, 5)
bop_4998 = relay.multiply(call_4993.astype('int16'), relay.reshape(const_4994.astype('int16'), relay.shape_of(call_4993))) # shape=(8, 16, 5)
func_1979_call = mod.get_global_var('func_1979')
func_1982_call = mutated_mod.get_global_var('func_1982')
const_5004 = relay.const([1.474059,3.523296,8.947268,-7.871222,-9.703820,-0.765681,8.493263,-7.087069,-1.652666,-5.367600,-1.636106,-4.120490,7.085239,2.385361,-8.708557,-7.874732,4.114978,3.032343,-3.510309,-4.918840,3.618569,8.282163,5.680166,-0.463216,-5.738354,-5.179439,9.000871,-7.476407,-9.434408,1.017724], dtype = "float32")#candidate|5004|(30,)|const|float32
call_5003 = func_1979_call(relay.reshape(const_5004.astype('float32'), [3, 2, 5]))
call_5005 = func_1979_call(relay.reshape(const_5004.astype('float32'), [3, 2, 5]))
output = relay.Tuple([bop_4995,call_5003,const_5004,])
output2 = relay.Tuple([bop_4998,call_5005,const_5004,])
func_5006 = relay.Function([], output)
mod['func_5006'] = func_5006
mod = relay.transform.InferType()(mod)
output = func_5006()
func_5007 = relay.Function([], output)
mutated_mod['func_5007'] = func_5007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3402_call = mod.get_global_var('func_3402')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_5033 = func_3402_call()
call_5034 = func_3402_call()
func_1132_call = mod.get_global_var('func_1132')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_5040 = func_1132_call(relay.reshape(call_5033.astype('float32'), [8, 16, 5]))
call_5041 = func_1132_call(relay.reshape(call_5033.astype('float32'), [8, 16, 5]))
var_5059 = relay.var("var_5059", dtype = "float32", shape = (8, 16, 5))#candidate|5059|(8, 16, 5)|var|float32
bop_5060 = relay.equal(call_5033.astype('bool'), relay.reshape(var_5059.astype('bool'), relay.shape_of(call_5033))) # shape=(8, 16, 5)
bop_5063 = relay.equal(call_5034.astype('bool'), relay.reshape(var_5059.astype('bool'), relay.shape_of(call_5034))) # shape=(8, 16, 5)
output = relay.Tuple([call_5040,bop_5060,])
output2 = relay.Tuple([call_5041,bop_5063,])
func_5065 = relay.Function([var_5059,], output)
mod['func_5065'] = func_5065
mod = relay.transform.InferType()(mod)
mutated_mod['func_5065'] = func_5065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5066 = relay.var("var_5066", dtype = "float32", shape = (8, 16, 5))#candidate|5066|(8, 16, 5)|var|float32
func_5065_call = mutated_mod.get_global_var('func_5065')
call_5067 = func_5065_call(var_5066)
output = call_5067
func_5068 = relay.Function([var_5066], output)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5095 = relay.const(6, dtype = "int64")#candidate|5095|()|const|int64
var_5096 = relay.var("var_5096", dtype = "int64", shape = (7, 1, 8))#candidate|5096|(7, 1, 8)|var|int64
bop_5097 = relay.left_shift(const_5095.astype('int64'), var_5096.astype('int64')) # shape=(7, 1, 8)
func_2780_call = mod.get_global_var('func_2780')
func_2782_call = mutated_mod.get_global_var('func_2782')
call_5105 = func_2780_call()
call_5106 = func_2780_call()
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_5115 = relay.TupleGetItem(func_3540_call(), 0)
call_5116 = relay.TupleGetItem(func_3542_call(), 0)
output = relay.Tuple([bop_5097,call_5105,call_5115,])
output2 = relay.Tuple([bop_5097,call_5106,call_5116,])
func_5119 = relay.Function([var_5096,], output)
mod['func_5119'] = func_5119
mod = relay.transform.InferType()(mod)
var_5120 = relay.var("var_5120", dtype = "int64", shape = (7, 1, 8))#candidate|5120|(7, 1, 8)|var|int64
output = func_5119(var_5120)
func_5121 = relay.Function([var_5120], output)
mutated_mod['func_5121'] = func_5121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4406_call = mod.get_global_var('func_4406')
func_4407_call = mutated_mod.get_global_var('func_4407')
call_5123 = relay.TupleGetItem(func_4406_call(), 0)
call_5124 = relay.TupleGetItem(func_4407_call(), 0)
output = relay.Tuple([call_5123,])
output2 = relay.Tuple([call_5124,])
func_5125 = relay.Function([], output)
mod['func_5125'] = func_5125
mod = relay.transform.InferType()(mod)
mutated_mod['func_5125'] = func_5125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5125_call = mutated_mod.get_global_var('func_5125')
call_5126 = func_5125_call()
output = call_5126
func_5127 = relay.Function([], output)
mutated_mod['func_5127'] = func_5127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5128 = relay.var("var_5128", dtype = "float64", shape = (5, 8, 15))#candidate|5128|(5, 8, 15)|var|float64
var_5129 = relay.var("var_5129", dtype = "float64", shape = (5, 8, 15))#candidate|5129|(5, 8, 15)|var|float64
bop_5130 = relay.power(var_5128.astype('float64'), relay.reshape(var_5129.astype('float64'), relay.shape_of(var_5128))) # shape=(5, 8, 15)
func_815_call = mod.get_global_var('func_815')
func_817_call = mutated_mod.get_global_var('func_817')
call_5144 = relay.TupleGetItem(func_815_call(), 1)
call_5145 = relay.TupleGetItem(func_817_call(), 1)
func_3322_call = mod.get_global_var('func_3322')
func_3325_call = mutated_mod.get_global_var('func_3325')
var_5160 = relay.var("var_5160", dtype = "float32", shape = (1, 1568))#candidate|5160|(1, 1568)|var|float32
call_5159 = relay.TupleGetItem(func_3322_call(relay.reshape(var_5160.astype('float32'), [7, 16, 14])), 0)
call_5161 = relay.TupleGetItem(func_3325_call(relay.reshape(var_5160.astype('float32'), [7, 16, 14])), 0)
func_5006_call = mod.get_global_var('func_5006')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_5172 = relay.TupleGetItem(func_5006_call(), 1)
call_5173 = relay.TupleGetItem(func_5007_call(), 1)
var_5181 = relay.var("var_5181", dtype = "float64", shape = (5, 8, 15))#candidate|5181|(5, 8, 15)|var|float64
bop_5182 = relay.logical_and(var_5128.astype('bool'), relay.reshape(var_5181.astype('bool'), relay.shape_of(var_5128))) # shape=(5, 8, 15)
output = relay.Tuple([bop_5130,call_5144,call_5159,var_5160,call_5172,bop_5182,])
output2 = relay.Tuple([bop_5130,call_5145,call_5161,var_5160,call_5173,bop_5182,])
func_5189 = relay.Function([var_5128,var_5129,var_5160,var_5181,], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
var_5190 = relay.var("var_5190", dtype = "float64", shape = (5, 8, 15))#candidate|5190|(5, 8, 15)|var|float64
var_5191 = relay.var("var_5191", dtype = "float64", shape = (5, 8, 15))#candidate|5191|(5, 8, 15)|var|float64
var_5192 = relay.var("var_5192", dtype = "float32", shape = (1, 1568))#candidate|5192|(1, 1568)|var|float32
var_5193 = relay.var("var_5193", dtype = "float64", shape = (5, 8, 15))#candidate|5193|(5, 8, 15)|var|float64
output = func_5189(var_5190,var_5191,var_5192,var_5193,)
func_5194 = relay.Function([var_5190,var_5191,var_5192,var_5193,], output)
mutated_mod['func_5194'] = func_5194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_5236 = func_2082_call()
call_5237 = func_2082_call()
func_5189_call = mod.get_global_var('func_5189')
func_5194_call = mutated_mod.get_global_var('func_5194')
var_5244 = relay.var("var_5244", dtype = "float64", shape = (600,))#candidate|5244|(600,)|var|float64
var_5245 = relay.var("var_5245", dtype = "float32", shape = (1568,))#candidate|5245|(1568,)|var|float32
call_5243 = relay.TupleGetItem(func_5189_call(relay.reshape(var_5244.astype('float64'), [5, 8, 15]), relay.reshape(var_5244.astype('float64'), [5, 8, 15]), relay.reshape(var_5245.astype('float32'), [1, 1568]), relay.reshape(var_5244.astype('float64'), [5, 8, 15]), ), 0)
call_5246 = relay.TupleGetItem(func_5194_call(relay.reshape(var_5244.astype('float64'), [5, 8, 15]), relay.reshape(var_5244.astype('float64'), [5, 8, 15]), relay.reshape(var_5245.astype('float32'), [1, 1568]), relay.reshape(var_5244.astype('float64'), [5, 8, 15]), ), 0)
output = relay.Tuple([call_5236,call_5243,var_5244,var_5245,])
output2 = relay.Tuple([call_5237,call_5246,var_5244,var_5245,])
func_5247 = relay.Function([var_5244,var_5245,], output)
mod['func_5247'] = func_5247
mod = relay.transform.InferType()(mod)
var_5248 = relay.var("var_5248", dtype = "float64", shape = (600,))#candidate|5248|(600,)|var|float64
var_5249 = relay.var("var_5249", dtype = "float32", shape = (1568,))#candidate|5249|(1568,)|var|float32
output = func_5247(var_5248,var_5249,)
func_5250 = relay.Function([var_5248,var_5249,], output)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3606_call = mod.get_global_var('func_3606')
func_3607_call = mutated_mod.get_global_var('func_3607')
call_5258 = func_3606_call()
call_5259 = func_3606_call()
func_3016_call = mod.get_global_var('func_3016')
func_3018_call = mutated_mod.get_global_var('func_3018')
call_5262 = relay.TupleGetItem(func_3016_call(), 2)
call_5263 = relay.TupleGetItem(func_3018_call(), 2)
func_742_call = mod.get_global_var('func_742')
func_745_call = mutated_mod.get_global_var('func_745')
var_5267 = relay.var("var_5267", dtype = "uint64", shape = (840,))#candidate|5267|(840,)|var|uint64
call_5266 = func_742_call(relay.reshape(var_5267.astype('uint64'), [14, 15, 4]), relay.reshape(var_5267.astype('uint64'), [14, 15, 4]), )
call_5268 = func_742_call(relay.reshape(var_5267.astype('uint64'), [14, 15, 4]), relay.reshape(var_5267.astype('uint64'), [14, 15, 4]), )
output = relay.Tuple([call_5258,call_5262,call_5266,var_5267,])
output2 = relay.Tuple([call_5259,call_5263,call_5268,var_5267,])
func_5276 = relay.Function([var_5267,], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
var_5277 = relay.var("var_5277", dtype = "uint64", shape = (840,))#candidate|5277|(840,)|var|uint64
output = func_5276(var_5277)
func_5278 = relay.Function([var_5277], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5351 = relay.var("var_5351", dtype = "float64", shape = (10, 6, 13))#candidate|5351|(10, 6, 13)|var|float64
uop_5352 = relay.sigmoid(var_5351.astype('float64')) # shape=(10, 6, 13)
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_5355 = relay.TupleGetItem(func_2730_call(), 1)
call_5356 = relay.TupleGetItem(func_2732_call(), 1)
uop_5359 = relay.sinh(uop_5352.astype('float32')) # shape=(10, 6, 13)
bop_5361 = relay.equal(uop_5359.astype('bool'), relay.reshape(uop_5352.astype('bool'), relay.shape_of(uop_5359))) # shape=(10, 6, 13)
var_5387 = relay.var("var_5387", dtype = "bool", shape = (10, 6, 13))#candidate|5387|(10, 6, 13)|var|bool
bop_5388 = relay.power(bop_5361.astype('float64'), relay.reshape(var_5387.astype('float64'), relay.shape_of(bop_5361))) # shape=(10, 6, 13)
output = relay.Tuple([call_5355,bop_5388,])
output2 = relay.Tuple([call_5356,bop_5388,])
func_5399 = relay.Function([var_5351,var_5387,], output)
mod['func_5399'] = func_5399
mod = relay.transform.InferType()(mod)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5399_call = mutated_mod.get_global_var('func_5399')
var_5401 = relay.var("var_5401", dtype = "float64", shape = (10, 6, 13))#candidate|5401|(10, 6, 13)|var|float64
var_5402 = relay.var("var_5402", dtype = "bool", shape = (10, 6, 13))#candidate|5402|(10, 6, 13)|var|bool
call_5400 = func_5399_call(var_5401,var_5402,)
output = call_5400
func_5403 = relay.Function([var_5401,var_5402,], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1737_call = mod.get_global_var('func_1737')
func_1738_call = mutated_mod.get_global_var('func_1738')
call_5444 = relay.TupleGetItem(func_1737_call(), 0)
call_5445 = relay.TupleGetItem(func_1738_call(), 0)
func_3893_call = mod.get_global_var('func_3893')
func_3897_call = mutated_mod.get_global_var('func_3897')
const_5489 = relay.const([0.402401,-7.361213,3.691153,-4.439898,6.143296,-1.857966,3.143550,1.575433,8.865101,-4.021888,6.344853,3.549567,7.858483,-8.296775,-1.102379,3.373040,-9.481697,5.844547,-4.536301,2.630631,-6.617410,5.352512,-2.418558,-7.940916,-0.175794,-4.734739,3.621933,-5.824879,-1.005774,7.548904,8.231350,-7.836229,-1.912488,-8.011207,-8.837488,-1.457941,7.648552,-4.434617,-7.689561,-5.597734,3.857708,8.733795,-8.715187,1.388914,-0.877688,0.352178,3.418095,-7.081319,4.999080,1.875657,-6.931906,0.287799,4.285166,4.518860,-6.872224,5.776574,-6.100097,-8.503563,-7.619076,5.805431,-9.043925,1.671292,-9.551226,-7.546899,-6.825441,9.632392,4.501583,-2.407858,-3.980631,6.157997,1.601737,-3.647743,2.528891,9.437590,6.561851,-9.540386,4.578896,7.873824,7.584378,-1.131126,4.902741,-3.531899,-4.727248,-1.364686,-9.988447,7.804022,-5.846495,1.596866,0.609823,8.518941,1.529642,-1.606865,2.924770,4.584440,6.192629,-8.429642,4.650046,-5.107676,-6.489160,5.124850,-5.328716,-1.236995,-4.386192,-8.861849,-3.119598,-8.308461,1.108329,3.691654,4.408124,-6.691567,-9.238836,0.004278,5.939883,3.800032,-4.617313,3.327445,7.461420,7.421337,4.482720,4.413884,-4.565776,-8.874812,6.252290,-9.034087,-9.502058,0.969397,-8.655549,-9.504517,-3.473741,0.745862,-2.679847,1.433177,-9.068834,-3.120131,-2.208416,-7.553520,9.975267,1.781840,-8.009449,8.600614,-7.415644,9.672818,-7.707308,-4.912306,1.976758,5.097949,-2.311502,1.053085,-0.657743,6.023924,-3.142047,6.920246,-8.714857,-7.741773,-4.795815,4.069435,-8.221221,9.087962,-5.214720,-9.780274,9.121047,-9.469662,-2.296178,2.319792,9.257668,-3.750715,-6.117091,0.356050,-4.205671,2.094722,-8.027674,5.377536,1.985856,5.222308,-0.488363,1.856697,7.002287,-9.411929,5.824316,-0.427368,-4.355054,-4.955955,-1.305407,7.293039,6.456126,-1.442538,7.998260,9.618363,-0.931924,-4.696149,-3.459284,0.948445,2.410991,8.939404,7.258238,5.841903,-3.577723,-5.418278,-5.017142,4.987818,-1.016019,3.177722,7.903960,-6.349810,2.372869,9.184698,-4.861206,4.589127,-6.369074,-8.934025,9.185297,7.673380,-5.361026,-8.444123,8.520915,-8.693017,7.314538,4.064836,-0.159482,7.680714,-0.954238,6.853974,8.124684,3.515035,-8.239304,8.204705,4.611385,8.043364,-3.926827,-8.370606,-3.986974,6.789876,-0.249668,-5.198939,-7.527866,-8.265276,-0.806192,1.531930,4.528617,1.994045,-8.614877,8.460156,3.907693,3.903549,-8.173696,7.648125,4.532393,5.921741,2.167950,-7.244469,0.879975,8.601444,6.147958,4.298930,4.297840,-2.786166,8.202401,5.951659,-5.736264,-5.870082,0.432779,7.167875,-5.544825,-2.603724,6.981150,1.930263,-8.081572,-4.281980,2.921183,-4.624519,4.592764,-6.728622,-5.333402,9.338854,5.789482,6.022691,-8.318109,3.149327,6.001977,-8.455649,-3.516359,7.260979,-9.772904,-7.027854,1.358002,-8.841640,8.242231,4.318010,5.412719,0.464407,-3.480324,9.571259,7.089735,2.664331,-2.768951,0.705114,3.890791,8.130591,1.213126,4.203817,-1.918973,3.100208,0.364981,7.792445,6.135446,2.277070,-3.933518,-3.806802,6.254244,-4.846441,-2.667878,-8.110302,4.668516,2.361877,-4.369112,2.680558,7.239761,-3.086108,-0.493496,6.066277,-2.413699,5.318202,3.480770,7.899077,-2.417240,-1.556291,9.953085,-7.981895,2.199991,0.732855,9.341505,-0.352189,9.125681,6.011464,1.784219,-2.632439,0.978472,-8.655579,1.825631,5.922075,5.988584,-8.710502,-0.780267,9.093322,4.382910,3.242385,-5.462155,0.545126,9.818532,8.251570,6.816652,-4.061121,0.777030,3.227472,-0.577418,-4.050291,-3.092146,2.454399,-0.834288,-8.325240,4.382820,-5.538511,-9.144773,-8.204477,-6.915206,-0.347793,6.528209,-4.689803,0.913519,1.652001,-3.720581,3.244040,5.661627,2.492801,-2.503545,2.339027,-2.099136,7.055794,1.623129,-2.118579,3.610509,9.090178,7.849985,3.432817,8.036553,6.822367,6.966409,-7.929835,3.723419,-3.418537,-4.819678,1.888635,5.509342,0.919409,-1.099684,-7.822903,-3.910669,-9.256793,7.154118,-6.327109,4.377321,-0.742866,-2.405210,3.324136,-7.029375,4.541008,6.723292,1.198260,7.038998,0.807919,-8.044862,2.776085,9.924517,0.721335,-8.192366,4.257011,7.174923,-4.031438,-9.579167,0.955238,7.882520,8.688484,2.270756,1.621030,3.948851,5.466392,-7.468905,-8.556318,-9.436951,-5.791368,0.090844,-2.197975,6.494192,1.000616,-6.255749,-7.770208,7.004159,-9.218303,0.800593,-8.802558,-6.003681,-4.239684,-7.989070,-7.860817,-0.475135,0.488534,-9.794780,-5.851289,-4.310931,-5.261920,-9.625533,-5.454546,-1.924185,3.652655,-2.308523,2.570532,5.561295,4.254377,-0.279148,-6.978635,-4.808151,9.052516,-6.374103,-6.959123,8.297613,4.821377,-7.129593,6.673176,5.218697,-5.024935,-4.530216,-6.575324,5.578128,-4.979132,-8.393722,8.853458,-6.022170,0.363385,-2.968047,-6.968850,-3.116507,-8.323825,3.464258,-8.565920,-3.657241,0.302932,-0.658984,-5.865547,9.418465,1.938690,3.581613,7.133941,6.453561,-7.241352,-5.033740,4.429862,6.445170,5.353116,-6.331038,6.398913,-7.603982,8.504426,-2.988451,6.361382,-1.017000,0.062696,1.581919,-8.460169,-6.951150,-3.014098,1.096113,2.516838,6.840901,1.817223,-1.588327,-7.143486,2.315380,4.410652,9.560182,-8.388726,-2.001306,-3.061181,-9.725778,-7.593718,7.539652,8.174547,8.480845,0.850116], dtype = "float64")#candidate|5489|(528,)|const|float64
var_5490 = relay.var("var_5490", dtype = "float32", shape = (40, 16))#candidate|5490|(40, 16)|var|float32
call_5488 = relay.TupleGetItem(func_3893_call(relay.reshape(const_5489.astype('float64'), [6, 11, 8]), relay.reshape(var_5490.astype('float32'), [8, 16, 5]), ), 1)
call_5491 = relay.TupleGetItem(func_3897_call(relay.reshape(const_5489.astype('float64'), [6, 11, 8]), relay.reshape(var_5490.astype('float32'), [8, 16, 5]), ), 1)
output = relay.Tuple([call_5444,call_5488,const_5489,var_5490,])
output2 = relay.Tuple([call_5445,call_5491,const_5489,var_5490,])
func_5513 = relay.Function([var_5490,], output)
mod['func_5513'] = func_5513
mod = relay.transform.InferType()(mod)
mutated_mod['func_5513'] = func_5513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5514 = relay.var("var_5514", dtype = "float32", shape = (40, 16))#candidate|5514|(40, 16)|var|float32
func_5513_call = mutated_mod.get_global_var('func_5513')
call_5515 = func_5513_call(var_5514)
output = call_5515
func_5516 = relay.Function([var_5514], output)
mutated_mod['func_5516'] = func_5516
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5556 = relay.var("var_5556", dtype = "uint32", shape = (5, 9, 9))#candidate|5556|(5, 9, 9)|var|uint32
var_5557 = relay.var("var_5557", dtype = "uint32", shape = (5, 9, 9))#candidate|5557|(5, 9, 9)|var|uint32
bop_5558 = relay.left_shift(var_5556.astype('uint32'), relay.reshape(var_5557.astype('uint32'), relay.shape_of(var_5556))) # shape=(5, 9, 9)
uop_5572 = relay.sigmoid(var_5556.astype('float64')) # shape=(5, 9, 9)
output = relay.Tuple([bop_5558,uop_5572,])
output2 = relay.Tuple([bop_5558,uop_5572,])
func_5578 = relay.Function([var_5556,var_5557,], output)
mod['func_5578'] = func_5578
mod = relay.transform.InferType()(mod)
var_5579 = relay.var("var_5579", dtype = "uint32", shape = (5, 9, 9))#candidate|5579|(5, 9, 9)|var|uint32
var_5580 = relay.var("var_5580", dtype = "uint32", shape = (5, 9, 9))#candidate|5580|(5, 9, 9)|var|uint32
output = func_5578(var_5579,var_5580,)
func_5581 = relay.Function([var_5579,var_5580,], output)
mutated_mod['func_5581'] = func_5581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3654_call = mutated_mod.get_global_var('func_3654')
call_5631 = relay.TupleGetItem(func_3652_call(), 0)
call_5632 = relay.TupleGetItem(func_3654_call(), 0)
uop_5633 = relay.rsqrt(call_5631.astype('float32')) # shape=(640,)
uop_5635 = relay.rsqrt(call_5632.astype('float32')) # shape=(640,)
output = relay.Tuple([uop_5633,])
output2 = relay.Tuple([uop_5635,])
func_5653 = relay.Function([], output)
mod['func_5653'] = func_5653
mod = relay.transform.InferType()(mod)
output = func_5653()
func_5654 = relay.Function([], output)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_5655 = relay.TupleGetItem(func_3442_call(), 0)
call_5656 = relay.TupleGetItem(func_3444_call(), 0)
func_5189_call = mod.get_global_var('func_5189')
func_5194_call = mutated_mod.get_global_var('func_5194')
const_5704 = relay.const([1.790228,8.933132,9.259548,-8.820791,5.227956,8.484679,-8.409430,9.147224,-6.752155,1.955158,9.920952,-2.731165,3.404298,-7.029155,-1.225191,-0.298309,-8.433269,-2.802744,1.947525,-7.340355,4.591425,-7.884302,9.292639,-3.942086,-6.730949,5.135360,9.992251,4.735062,5.564929,5.807969,-5.317577,7.668323,7.985436,5.551159,4.930388,-0.010386,4.584196,-2.534282,-2.988110,-5.311849,3.005354,4.061443,-9.616401,6.140752,-1.069296,2.138121,-9.674296,2.991044,-4.536948,-4.602044,2.553360,5.129807,-3.386659,6.651677,-2.342451,2.648851,9.363240,-6.029984,4.878062,-7.570951,-5.884382,0.167686,-2.429632,-1.430080,6.126856,-3.909835,8.840541,8.887951,-9.282138,2.334332,0.803948,-5.488863,7.240030,-1.439805,-8.809378,-0.544871,-6.508073,-6.977422,-0.518156,-0.058565,9.023900,-0.693092,-4.095183,-0.899824,4.294360,3.128306,-2.727068,6.864588,-0.928571,4.432140,-4.920172,1.995731,0.450208,-3.113067,-8.741856,5.540591,1.135645,4.517737,3.163893,-8.940097,8.486781,7.156050,0.345076,9.921577,-4.116490,9.269704,-5.741436,-4.115155,-2.042077,9.098640,1.859144,-2.990097,7.050204,-8.286002,-8.403135,5.499572,-3.957046,4.462988,3.413862,9.877108,4.813377,6.463536,6.660617,8.070668,-0.775248,-4.700452,4.891235,-1.353939,-0.544622,-2.649894,-0.721179,-7.148917,-6.551661,-5.137297,-3.895086,-9.091900,-1.468246,5.419910,5.121407,2.753807,-6.145551,6.646515,6.350652,-4.608538,-2.127301,-1.731140,-9.319490,6.419568,-9.009687,-8.165118,6.321682,9.784799,-7.209396,7.237162,4.456347,3.999467,-5.007648,-2.045340,0.430684,-2.426178,1.722090,-6.969113,7.493936,-6.229816,9.062811,1.991789,2.238206,0.776655,9.659637,0.380338,5.097636,-9.393973,0.331416,2.216641,1.253086,-5.698423,-4.941585,-1.839630,-9.863575,-8.400933,-8.880268,-9.641820,-5.005869,6.103375,-5.982603,-4.792011,-2.432663,-2.607463,7.571369,-2.795962,0.261903,5.032304,8.104555,5.188698,4.037902,1.692302,2.269039,2.329255,4.626431,-0.142936,-3.434747,-0.716506,2.261638,-3.327985,-2.522239,-2.384420,-2.365846,-0.564961,7.360641,9.910200,9.240046,-4.172674,8.086345,-6.989892,7.891066,-8.409816,5.338816,-0.732526,5.613024,-6.011225,6.423316,9.931473,-0.510695,1.537628,-9.036703,-0.010639,2.528156,-5.116760,9.718909,-7.441474,7.425290,-4.453823,5.462296,-5.376159,2.393001,-8.348567,2.059582,-9.446853,3.448369,2.293167,4.870428,8.185000,8.001661,3.976187,-3.746510,4.811732,-6.879828,2.791935,-4.889384,9.028122,-8.037469,-1.707177,8.471800,4.158252,-4.448230,-0.329817,8.122538,-1.164748,-1.356638,7.153651,5.308277,-5.120873,-3.200915,4.968359,5.161185,-1.932608,4.603951,0.897300,-1.329533,8.988311,-4.639744,-5.320062,-7.423159,-6.738342,-1.474872,9.562488,-5.378650,9.492982,8.667814,7.748600,7.705932,-4.050826,-0.950281,-5.296724,7.465044,3.305884,5.646019,0.089121,-1.491204,-0.893648,2.236648,2.710738,-3.273486,-3.479220,8.586258,-9.288660,1.491474,6.232685,6.971335,-1.736504,-9.506438,-6.281930,9.610484,7.935262,2.141535,-4.069888,9.367537,-1.483849,2.667640,-9.415144,-8.173011,0.426001,5.299346,6.140914,-0.679427,3.231208,0.645663,1.448729,0.661562,-9.783780,-4.961338,8.223862,-8.332423,2.506578,-8.048393,1.889708,9.790740,9.011354,6.618531,2.127667,-0.598638,-5.332151,-5.749691,0.621316,-6.394199,-9.210206,-8.731253,0.569133,1.151681,-5.939057,-4.807485,-1.096610,5.856493,-1.355810,-0.054099,-3.750660,4.415778,-0.919479,-5.513406,2.617222,6.227555,-9.050992,-7.456860,7.153891,-3.042366,4.396840,5.372058,-5.251123,9.799245,1.390654,-7.332664,8.800168,0.348603,1.323644,0.518214,-6.749307,-7.170983,-2.062896,-2.529861,-8.583496,-2.853010,0.576418,5.841917,-3.344130,9.024157,-1.916384,3.166419,2.030748,5.841633,0.528573,2.671430,-9.767823,-8.150290,-8.086429,-2.729193,2.123986,9.348108,-9.031419,1.106965,0.860181,-1.122691,-3.233134,0.152195,-2.920009,1.622016,6.962447,-9.440056,-9.028267,6.344455,5.806060,-9.038638,-5.235551,-1.474577,-8.265709,7.552223,-6.739470,-3.589224,5.473569,-0.031138,-0.710495,9.986476,-3.628780,7.066923,-2.515809,-9.762569,-1.646244,2.325915,-2.340436,1.732088,7.739288,-0.535857,6.941135,-8.461708,7.650843,-2.776366,-9.954386,3.523107,7.065994,-6.249389,0.658091,-5.607432,8.714883,-8.700732,9.719154,-7.441598,-6.056484,-1.792975,4.368219,1.352109,5.660845,9.175104,8.520003,-1.447090,2.428199,2.656065,9.310185,5.502920,6.469986,-7.313245,0.977619,0.797892,-0.673212,0.783043,-8.107545,-5.331466,6.386080,-3.064832,-7.848378,4.425620,9.571905,9.625018,-8.193003,0.049992,-9.625549,-1.615305,-2.186082,-2.272076,9.458073,9.332182,-3.791029,9.663641,0.304373,-9.749330,2.209673,6.200207,-9.824788,0.842296,8.674637,-0.966465,1.710593,-5.888427,-2.163006,-2.013226,-3.571589,-3.412965,8.940550,-0.609750,4.082433,-7.204789,7.363719,5.228877,-0.002103,-1.163308,1.282227,-8.832259,-6.043088,-8.989210,8.730355,-2.603293,-4.658505,-5.109572,6.491666,-3.920946,5.268204,2.529647,0.948988,2.701371,0.992920,2.248912,-1.429587,4.866922,-5.852127,-1.785008,-5.161064,-8.617871,3.260368,-3.427272,3.041410,2.564747,-0.238099,4.036567,9.091415,6.784890,6.866627,9.132243,-0.528454,-7.973465,-7.908436,-2.332548,9.647057,-4.741761,9.552718,6.721171,9.042030,-7.533219,0.026758,6.178742,-3.924804,-4.542063,-8.510147,0.389206,-5.203498,4.497853,-3.773682,-4.878059,-8.378461,-9.454695,8.861778,1.531286,-9.439654,-8.239720,3.533865,-4.692874,5.899710,9.148267,-8.999677,-0.119425,-1.022609,-6.874537,-7.809475,1.323598,5.991028,-6.295442,3.785777,2.450964,9.014596,-8.296147,-4.441863,-7.908707,2.792036,2.396478,9.421667,-4.759091,8.449075,-7.710341,2.869537,3.486503,-4.764940,-1.057493,6.572486,5.980231,9.847816,5.686374,3.433519,4.316771,-9.691974,-8.883175,0.921942,5.465758,4.603483,-5.653065,8.872959,7.547386,5.717616,-8.326185,-8.816169,-6.550671,7.145284,4.612477,2.520545], dtype = "float64")#candidate|5704|(600,)|const|float64
const_5705 = relay.const([-9.079818,4.638355,7.636191,6.416606,9.948982,-6.254151,-6.042914,3.914093,-9.896247,-8.437029,-9.521065,-6.365664,4.009438,5.640467,-9.563287,1.037534,1.983563,-7.944943,-1.494358,-5.646107,4.088524,-6.490357,1.328284,-4.832512,1.229576,6.506814,-6.386022,-0.427061,4.289839,-2.373272,-1.444640,-8.045586,-6.975681,-3.192878,-1.006897,2.795707,4.846880,9.524743,3.426271,3.334470,1.247426,-5.958422,-3.600344,9.819892,-4.003481,2.527374,2.600584,9.781512,4.745824,-7.587355,-1.889895,9.597161,5.188349,-5.838171,-5.222815,-6.699281,-9.092712,7.054356,1.528195,-1.817607,-1.071795,-5.939224,4.762863,1.171096,-1.356268,6.406385,3.014761,-7.482940,1.509536,-9.882652,-0.032958,9.459817,0.162723,-8.782820,0.280909,4.484155,-0.022456,3.261390,5.375802,-1.483851,-4.095194,-0.521007,-1.111895,6.951333,1.007061,6.998542,-4.260438,-7.356408,1.839678,-9.240917,2.938438,-5.040489,2.984848,0.049869,8.379787,-6.278246,5.876773,9.332057,-9.168391,-5.151303,-5.287995,0.573069,-2.558249,7.637558,-0.617338,0.015176,5.530998,-1.255915,1.558196,7.711832,9.164521,6.067561,-0.652139,6.054122,1.100179,-5.268551,0.133341,-9.594049,2.165306,-8.982352,8.468916,3.245953,9.153736,7.122650,4.369450,1.213042,7.618384,-9.848532,-4.804674,-9.746847,6.053662,6.299904,-8.953883,-0.665888,9.868528,-6.859473,-6.645181,6.642144,3.251652,2.643896,9.689536,7.327600,1.708829,-2.623945,0.834910,4.591548,6.572136,-9.259261,-2.349807,0.026491,3.705286,-4.976466,6.766669,0.112796,-5.398518,-3.717342,-9.736282,-8.007861,0.737028,3.591676,9.945859,1.235459,8.678331,2.447221,-4.777539,-5.771181,-3.066001,-4.921166,-8.089912,-8.587125,-1.022724,2.079021,-1.430442,-0.045569,-6.760037,5.528351,-5.712164,0.835046,-2.699690,8.222354,4.361994,-0.098369,-7.886499,-0.794220,-0.715111,4.937988,9.634919,1.393585,2.993779,9.793220,8.130955,8.491584,6.225092,-8.164143,1.806082,-3.014486,7.832492,-2.563612,7.030711,-1.928960,0.025547,-9.022158,-4.576325,3.244077,6.754353,-3.471394,3.483554,-3.775340,-7.442535,-0.110798,-3.669692,-0.850799,0.088506,8.478922,2.875540,-8.837545,-7.151514,0.232039,6.858892,-5.494227,2.226049,4.994030,-7.552170,3.069169,-1.826636,3.281821,6.881068,-3.777752,-1.190345,3.285378,-3.505414,4.783790,4.711766,4.475409,6.947570,4.546097,-4.660914,8.962751,8.167486,0.989165,-5.422933,-7.152727,4.168944,-8.946479,1.985718,1.783248,6.088152,-4.030539,-0.323661,4.394609,3.930089,-5.530889,-6.519798,-3.300881,7.680005,6.441652,-7.319500,4.543045,1.452063,-2.352346,1.652415,-4.310739,-8.246580,2.794676,-2.972405,-3.621592,-7.602595,-0.174720,-5.828678,-1.036294,-2.018462,2.925343,0.563095,-8.623103,-8.478990,5.668057,2.626198,-4.605648,-0.375106,-7.484577,0.758423,-9.700268,7.888732,-2.314008,-9.484318,5.620398,-9.885091,9.660628,1.301376,-9.947743,-6.246592,-7.454288,4.909987,4.895517,-7.959304,2.297010,-3.006989,2.912821,-7.156059,2.004674,-9.237086,8.939914,0.511240,7.102944,4.926273,-7.700623,0.463409,9.071337,-7.294945,6.865398,-7.525745,-9.298263,-5.581525,-1.015387,4.474467,4.899995,5.583134,-4.614848,-2.315829,9.209317,-0.169920,3.933011,-1.215890,-0.411243,-8.495573,-3.316532,-4.222321,4.811441,-2.053427,0.492834,-9.632427,-5.488298,-2.447377,-5.156682,-1.076135,-3.025179,-3.960924,-8.488692,-3.191423,4.465260,-5.347814,1.211393,-0.417439,-4.449256,-6.706528,-9.795948,-3.872090,-0.120095,1.093256,4.741973,6.402469,-9.210859,-5.932969,-1.924169,-2.302361,0.164872,9.812397,3.964568,1.067792,5.060712,-8.566789,-9.887950,-2.052196,6.948858,-0.269017,4.259728,-1.246371,4.312108,-9.547589,9.823397,2.581176,-0.848555,6.343141,-5.279702,4.413073,-2.159831,2.567799,-2.050028,-0.624914,5.772354,1.200879,-1.254875,7.603912,-8.487830,9.226894,-4.875992,-4.041757,-5.693601,-8.890913,-1.064652,-2.871688,1.889240,-4.345396,1.459064,5.770414,9.494077,7.487726,-3.689317,8.184063,-2.959931,-7.970202,5.454619,5.110981,-7.818828,-0.136596,0.594657,-9.650397,-8.302265,2.433393,2.605654,-3.680617,9.011799,-2.300767,-2.062997,-0.413047,-9.823600,6.379368,5.135862,1.421104,4.883873,-4.094901,-1.294387,2.569196,1.059290,-7.348715,-7.578760,0.161543,-2.436065,6.046158,9.606603,-0.754936,4.540615,6.469137,-6.656405,-4.799418,-6.975954,3.264000,2.646880,2.716895,5.764588,8.245432,7.461055,5.718621,-4.627050,-6.372895,-6.772133,-6.140297,8.246341,-3.771818,-5.689372,6.237391,5.452148,-6.484723,7.873622,-9.617306,8.396553,-9.270316,-9.250775,4.109315,8.765146,6.763636,-2.852714,2.964323,7.305497,2.213335,-9.638757,9.998671,3.933218,7.167557,0.729865,8.500907,1.254511,3.427865,8.167798,3.162240,5.916848,-5.333849,-9.574097,0.237831,3.885312,2.120738,1.767977,-0.853626,-1.237102,7.382728,1.490145,3.634694,6.307653,-7.988506,5.639120,2.561384,-7.055032,-0.778065,1.016783,2.024898,-4.151897,-3.333792,8.568269,6.873945,-4.498711,1.070910,7.826586,3.871776,-6.629959,-5.049590,8.001078,-9.608819,8.469787,-4.981767,-1.327722,-8.726851,-0.040293,-7.819902,6.699195,-4.308660,-5.074922,6.147406,-1.046662,-7.358455,-0.153547,-6.813233,-2.929577,-9.062421,2.433466,-4.314660,-6.140180,-2.181331,-2.996400,-4.284074,-3.442958,3.583059,-6.003122,7.647593,7.072533,8.057165,-7.113143,8.579895,-1.690291,-9.731884,-3.121284,6.230819,3.980448,-7.669047,-7.685382,0.844276,8.218384,-6.455775,8.004919,-4.556898,5.050733,4.307903,3.850703,4.422878,-2.012454,8.805088,-6.061381,8.827463,-5.977615,8.301032,-6.837014,-0.039401,-2.636807,4.036805,-6.513200,-3.490504,-6.931754,8.347813,6.143897,5.525095,-9.841026,-5.126121,-2.891490,5.233088,6.036576,8.965432,8.947139,4.330752,-7.657786,-2.309384,-7.793728,7.303275,-7.403403,-8.427388,5.738036,7.026707,-9.966224,-9.854040,8.069122,-9.329244,4.155444,-9.109112,1.557259,-1.167029,-7.430226,-6.314410,3.598708,5.798014,-4.553148,9.643300,-5.032770,6.131091,1.300687,7.238284,8.171585,0.404837,4.126579,-9.653905,-9.745679,4.846694,8.459000,2.775510,5.935638,-8.307530,2.257441,6.923532,-6.151145,-1.359975,-5.599227,-1.585230,7.874779,-5.575366,4.734601,2.052666,1.758747,-2.021358,-3.359683,-8.925345,0.703403,1.629446,-1.801672,-9.437996,-5.073445,-6.141649,-7.394037,-1.058936,2.279737,-4.376322,2.761518,-2.324863,-2.973801,2.908746,-9.544235,-4.714083,-8.327100,-2.619688,-0.549007,6.407322,-9.800533,-8.887224,-5.101030,-0.424044,1.998399,-9.113914,6.902802,-8.475007,-9.193378,-8.770830,2.939116,-4.398793,3.214070,-8.818772,6.067805,-8.678909,-7.721247,-7.529432,5.137643,-2.677060,5.405218,-7.879791,5.732829,4.999541,-1.696764,-7.371226,-2.606712,-4.484806,-6.135579,-9.137657,-1.400597,4.293867,7.304500,-2.450893,-7.175652,6.005934,7.554768,-0.134431,-8.510516,-7.849027,-8.962886,-6.157611,6.248137,-3.437674,-4.631557,7.267857,6.752922,3.686752,-8.956311,2.226102,-3.597438,1.285101,-5.049518,-3.365484,4.275469,-7.801038,1.777160,-3.569057,1.508176,-7.338316,7.072367,-6.593112,-1.477224,5.313778,9.886648,-4.368760,-3.533774,-3.000392,9.361800,0.448473,0.270380,-9.129698,7.385130,-6.972283,0.178735,-7.770026,-3.651279,0.700124,-2.994734,-5.393479,-0.860859,1.660965,-6.172698,8.723863,-9.602520,-8.023364,-9.241304,-6.354800,0.904002,-8.988994,-3.442780,-9.722503,-9.377373,7.054745,-6.388517,-6.820756,-4.257645,7.010313,7.455771,2.010957,-0.696450,-9.807987,-6.081260,-4.444100,8.904417,7.800987,6.678701,-3.336856,9.995936,-9.754380,6.084248,-9.292887,-8.837046,-5.702901,9.860761,1.195354,4.928328,-6.815120,-4.259793,-2.363137,-6.123298,3.268173,6.097633,6.474470,-4.075799,-5.628089,-2.608651,9.216561,9.264978,9.277398,2.696684,-1.125543,-1.341225,5.494043,7.774661,-1.895965,4.270250,8.035000,8.045216,8.432178,-1.180532,-1.493577,4.821192,6.296653,0.238154,2.899008,0.632782,-4.584549,-0.504072,-5.650931,5.799684,6.533418,0.725666,2.887687,8.173804,-8.303055,-9.192559,2.877716,-0.592761,-7.028157,5.699324,3.111501,5.637833,-0.926813,1.261353,8.471021,3.044173,7.486389,2.513033,4.993628,1.722618,-4.072875,-6.307978,6.212473,-8.998983,9.591478,9.903551,-2.553885,-0.492387,8.286929,-1.615111,-5.810873,7.416140,-2.711727,-2.182407,-1.880165,3.289803,1.129029,-4.754836,-2.493239,8.848391,-5.029705,-1.545576,6.330791,9.663501,-9.817504,-9.364328,6.859959,-9.713173,-6.031327,9.416916,3.442659,-6.357698,2.586224,5.517864,8.439050,4.129381,-0.985748,6.679068,-6.451679,-4.131515,-4.804561,9.248121,-7.187718,4.796957,-2.881693,4.685933,8.260249,-6.569782,-7.975320,-8.343369,-3.415249,1.453118,-8.760335,5.772495,2.520615,7.738460,-4.377033,2.698955,6.849380,1.874979,-8.277243,3.380430,-3.538559,-5.434228,7.359566,4.534138,-8.625263,-3.489676,8.513608,0.283990,7.079976,-6.301917,5.693726,5.374900,-4.313118,-3.096342,6.342557,-5.416868,8.959332,8.098247,4.635494,1.689847,3.236172,-0.338450,4.319258,-3.344660,6.370848,-4.774383,-6.391162,3.850516,-6.005085,0.949960,4.235089,-6.709485,-7.751456,5.315461,-1.919100,8.080579,7.167023,-9.767212,2.043078,2.906768,1.988887,9.349304,6.102847,-3.822395,-1.604716,-0.239525,3.575638,6.050098,-8.771580,4.649375,8.217463,-2.003224,0.109212,3.130903,8.912533,1.784761,-3.248742,8.266986,8.110016,2.624020,0.829911,8.167097,-2.219488,4.081301,7.936347,3.129771,9.483837,4.935950,-0.298311,-1.930277,-4.574242,-3.641708,-0.877855,-9.578476,0.923314,-6.896784,3.043943,6.281460,-8.764294,-3.069789,-0.971148,-8.503698,-4.750982,-8.597482,-3.234814,-8.245694,-5.706551,6.293119,-5.364346,-3.858924,4.808835,2.264695,-5.971553,5.239019,9.936244,-7.116029,8.297710,2.485951,5.038244,1.709391,-7.550872,-1.572286,-3.615271,-9.793089,2.543156,3.186250,4.625583,-2.448292,5.796230,-3.044171,3.475788,-7.694560,7.675226,-4.849594,2.623185,-2.150432,-1.747858,-4.037430,-7.375954,6.464184,4.711148,-7.096694,1.850245,-4.929378,-1.824925,0.073075,-8.249628,1.006758,-7.147459,-1.370617,8.308574,9.574651,1.416060,-9.909819,-2.773615,4.881239,-1.569961,-9.114020,-6.526676,8.385297,2.954630,0.916248,-6.980436,5.041893,-1.455681,6.640016,-0.199354,5.027984,-3.223699,2.711368,-1.713178,5.317661,5.144987,-9.283229,-6.060959,-2.444321,2.264095,2.780683,-3.497485,-9.569734,-6.400594,-9.631459,-0.817353,-4.607999,-3.462122,-5.079904,4.405622,9.080681,7.138964,-7.266166,6.339884,-7.426769,-5.331930,6.283522,-3.669666,-6.292517,9.606521,-6.701171,-2.527461,-7.898952,-6.828404,1.878084,-3.005349,-3.074473,7.170783,-8.627538,-9.088012,2.998137,-4.771031,5.978270,-8.146257,-8.633041,1.197553,9.906440,9.666002,-5.898721,-9.006280,4.749894,-1.205217,2.475254,2.523590,7.726248,-9.314567,-2.123302,7.995279,8.425690,1.018747,0.980194,-9.593542,8.337125,-0.860835,-5.298249,6.442892,-3.349378,8.561166,6.092567,5.701092,-0.967701,7.034281,-6.869860,8.291927,-9.199794,4.087915,0.540384,2.540745,-3.156725,-0.060473,-7.502562,-2.043375,7.122167,-5.083976,-5.862516,9.338750,6.287788,-2.258047,4.656837,-5.492003,-7.002515,5.574245,9.772996,-7.612607,2.404865,-5.943124,5.881890,-1.422049,7.121860,8.736141,-7.956987,-9.534804,-6.246928,1.397200,-6.807572,4.041379,-4.527468,-0.374771,5.683336,1.513362,5.389758,1.962817,-9.257759,-8.456951,-8.293259,-6.262529,-9.877716,5.353888,4.681464,5.866311,-3.727784,-0.363146,4.152984,-0.602953,-3.291256,4.956683,-7.353133,-0.608726,-2.534438,-6.900620,-8.240643,1.943941,8.458728,0.079891,-6.754796,7.267447,-1.639754,3.229519,-0.549024,-4.402017,0.148844,8.162289,-1.855508,-3.194062,-3.673524,-7.068067,1.593149,8.504116,-1.043621,4.941409,5.803822,3.897382,4.409299,-7.927934,-8.191330,-1.111503,-9.861600,1.433779,4.613977,-3.123369,-2.728609,-3.393961,-3.279469,1.724582,8.761871,8.811746,4.880392,-7.547110,0.680006,-4.616717,6.728782,6.941782,-4.058901,8.835446,7.750812,5.419559,-7.987943,9.908843,-7.787352,5.880102,-1.353388,-0.871423,3.843882,-3.137242,1.702818,-0.714377,9.499924,1.599372,2.452609,4.112840,-4.224524,-4.238582,-6.078577,8.274000,-9.196666,-6.976532,-9.072508,-3.114756,1.267423,-0.165664,-7.706938,-0.136655,8.049771,5.529678,-8.517360,9.410876,-9.016494,6.592940,2.503364,4.987531,7.433368,-5.491037,-5.310912,8.134285,6.464925,8.862446,-1.601950,5.278688,2.136707,-0.380239,8.545593,-6.443848,-8.895059,2.166932,-4.962873,6.139997,-9.896170,1.141136,7.557939,1.208127,3.250312,-6.945497,-4.511404,2.686854,-8.685456,3.368806,8.904804,2.626437,0.560696,5.334384,4.482361,5.329323,7.848234,2.401962,5.309361,5.879430,0.196619,-8.476046,-5.263767,7.024412,-4.931383,-2.584180,-2.232244,6.658232,-5.180350,3.444319,7.748059,-8.255108,-6.837506,5.131291,-4.168659,-8.138288,-2.547787,9.343367,-7.892959,-6.185113,9.549153,-0.462294,-8.183113,0.325530,-7.139101,6.184976,8.005154,-2.361711,1.558301,5.226086,0.049126,8.280626,-7.777223,-4.104412,1.059041,9.382850,6.150418,-3.821112,4.135022,2.434909,-2.953348,-5.727281,-0.779415,7.582961,-8.742600,0.629625,-7.503575,-5.331542,6.369092,4.621410,9.707112,0.481616,-0.649175,-2.437154,0.051023,-7.809442,-1.853547,6.642288,5.044648,-3.373886,7.059328,5.792598,-6.754831,-3.306769,-8.465830,-2.700451,0.029144,4.588602,4.053298,0.048988,2.232160,1.824167,-4.824553,-6.926644,6.375452,-1.374060,-2.310696,7.247828,6.903635,-7.894012,9.771031,7.696979,-3.914415,5.463932,-5.027965,-3.559009,-6.920171,-8.727005,-5.501827,-3.708340,3.733868,-1.223506,0.794638,8.893145,2.113770,-1.187389,-4.472526,4.955388,-4.889997,2.817536,-1.255165,-7.840537,2.560897,2.512112,8.185728,9.961493,-3.404313,-7.952300,7.597165,-1.811627,2.010165,-0.419485,-0.429554,-2.582464,-4.383850,-2.556138,4.761530,8.966217,7.062044,-9.304991,-4.698391,2.314913,8.414142,-9.729927,1.145290,-7.340289,-6.285882,3.249578,-5.569202,3.004386,5.012503,5.712327,2.996561,7.499320,-5.821495,5.480332,7.517297,6.238782,6.150324,-0.785682,0.231280,4.998688,4.027129,-2.150621,7.335866,-8.113756,0.312722,7.684737,-2.245049,9.732695,9.494433,6.183096,-6.888567,6.938157,8.429412,-0.870080,-7.921180,-9.635231,-8.043437,-0.646985,-5.223432,-5.910107,-9.932281,-2.271828,-4.236785,4.454991,4.762077,5.501884,-5.846293,8.253670,-7.024300,-2.519768,2.356432,-6.890055,0.552486,9.922580,2.429865,-1.562983,-1.969530,-4.476098,-6.800635,-8.743431,-8.007602,1.309417,-6.137290,-8.710831,2.967966,-1.732428,1.064302,-4.168261,0.239691,8.420574,-5.173869,-4.068335,-1.782292,2.462061,9.841590,-4.962167,0.192771,-6.073992,-8.640261,-8.258887,3.927131,7.137760,1.877831,2.111073,9.411722,8.150642,-1.346654,-8.244634,-1.150227,-7.393817,8.357162,-3.228102,-8.261550,5.522630,5.963371,-5.346533,-8.596118,-6.186421,-4.815502,-2.080397,-9.928748,1.587938,9.162786,1.595742,4.462096,2.821164,0.258937,-8.316146,-2.837183,-1.286851,5.462349,-1.373252,-6.015816,-9.402261,5.097599,8.510171,-1.798166,-4.700877,-3.363621,-6.506909,1.144534,3.796916,2.838069,6.645602,1.143120,4.156707,-9.799416,-3.559101,-7.032708,6.436713,8.475924,5.043554,2.551623,9.405836,-2.532888,-3.095304,-3.809306,-4.650430,4.572269,6.443528,2.738378,7.587014,8.485056,7.948096,-7.946656,2.344621,1.853384,-3.589758,-1.633962,-1.419784,3.285104,4.391063,-4.447924,5.115451,4.540681,-0.872476,1.805422,-9.185651,8.534303,4.450623,6.266060,5.012611,7.818258,7.147375,-9.637869,-3.882563,-8.178897,8.615910,3.636075,-1.290942,1.926928,-4.241857,4.632759], dtype = "float32")#candidate|5705|(1568,)|const|float32
call_5703 = relay.TupleGetItem(func_5189_call(relay.reshape(const_5704.astype('float64'), [5, 8, 15]), relay.reshape(const_5704.astype('float64'), [5, 8, 15]), relay.reshape(const_5705.astype('float32'), [1, 1568]), relay.reshape(const_5704.astype('float64'), [5, 8, 15]), ), 2)
call_5706 = relay.TupleGetItem(func_5194_call(relay.reshape(const_5704.astype('float64'), [5, 8, 15]), relay.reshape(const_5704.astype('float64'), [5, 8, 15]), relay.reshape(const_5705.astype('float32'), [1, 1568]), relay.reshape(const_5704.astype('float64'), [5, 8, 15]), ), 2)
var_5713 = relay.var("var_5713", dtype = "float64", shape = (14, 15, 4))#candidate|5713|(14, 15, 4)|var|float64
bop_5714 = relay.logical_or(call_5655.astype('bool'), relay.reshape(var_5713.astype('bool'), relay.shape_of(call_5655))) # shape=(14, 15, 4)
bop_5717 = relay.logical_or(call_5656.astype('bool'), relay.reshape(var_5713.astype('bool'), relay.shape_of(call_5656))) # shape=(14, 15, 4)
func_5119_call = mod.get_global_var('func_5119')
func_5121_call = mutated_mod.get_global_var('func_5121')
const_5730 = relay.const([9,-5,-6,6,4,-4,-8,5,-5,4,6,7,-7,-1,1,3,4,2,2,10,10,1,9,3,-10,3,2,-1,9,8,-6,7,-6,-1,-1,-6,-5,10,-2,-9,3,-10,3,5,-5,-1,3,2,9,10,4,-10,1,-4,-4,-5], dtype = "int64")#candidate|5730|(56,)|const|int64
call_5729 = relay.TupleGetItem(func_5119_call(relay.reshape(const_5730.astype('int64'), [7, 1, 8])), 1)
call_5731 = relay.TupleGetItem(func_5121_call(relay.reshape(const_5730.astype('int64'), [7, 1, 8])), 1)
func_588_call = mod.get_global_var('func_588')
func_591_call = mutated_mod.get_global_var('func_591')
const_5733 = relay.const([7,3,2,-3,6,-10,-2,4,1,9,-7,-6,9,8,-3,-1,10,2,-9,5,-7,-4,6,-8,-10,-9,-10,-7,-9,4,-3,4,10,7,9,3,-7,-8,-5,-9,3,-1,5,3,-5,5,1,3,-5,1,2,-1,10,-1,-6,-1,10,-4,-2,-8,4,-4,5,6,-8,4,-10,-7,4,9,-10,-9,-2,7,9,-10,-3,10,4,5,-3,-9,4,7,-6,8,-5,-8,1,5,-3,5,-1,-1,10,-6,5,-8,-3,-6,9,7,-4,-5,10,-5,4,6,-4,10,-5,7,-2,-8,9,-6,-2,4,-7,9,6,-10,-7,-6,5,4,-4,9,-9,-3,-3,-7,-3,8,-10,9,4,-8,8,-1,2,5,10,4,-3,8,-7,10,5,-1,-9,-1,-2,4,-3,-6,-2,-10,5,2,2,-3,-4,-8,2,-2,-2,4,1,7,-2,-8,-4,-7,-6,-6,-8,7,3,-10,7,-6,6,6,-7,-3,3,-1,4,5,-8,8,3,9,1,1,-3,8,6,-9,6,-1,-3,-6,-2,-7,-6,-6,10,-5,5,10,4,7,1,-2,-8,-6,5,8,-6,8,1,1,1,4,-3,-6,-2,6,9,-10,10,7,-1,5,-3,-9,8,6,7,9,-4,-4,8,-10,7,3,8,-5,7,4,4,2,5,-3,-10,10,-5,-8,4,1,8,1,4,-4,-5,-8,-4,-10,10,1,6,-4,8,6,-10,5,9,-3,-3,3,-7,-8,-1,10,-2,3,-4,10,1,-8,-1,10,-1,4,-1,-2,5,-7,-8,10,-10,1,10,-8,7,1,-10,-9,-5,5,-7,-4,8,-1,-10,10,3,-4,1,5,9,-6,-8,-10,-8,-9,-5,-9,4,-1,2,2,1,10,7,9,-1,5,-2,2,-3,6,2,10,9,8,-1,9,-6,5,4,1,1,-7,-2,-4,10,2,-9,-7,4,-2,-8,6,-9,1,-6,-1,10,-1,-6,7,9,7,-4,8,2,2,2,5,-10,7,9,-3,7,-1,-9,1,10,7,4,1,-7,7,-10,1,1,5,5,8,10,-6,-2,10,-5,-5,2,5,8,7,4,-7,5,4,-8,3,-6,10,8,-9,6,-1,9,-8,-10,4,-2,-1,-2,8,-9,-9,-1,-2,-8,-3,-6,-3,-2,3,-5,-8,-7,5,-5,-1,-3,1,9,5,6,-2,-2,-9,-5,8,9,-6,-6,8,-3,6,-9,-1,2,-10,4,1,8,-2,-2,2,8,-10,8,-8,8,8,-2,-10,7,-3,1,-8,-5,9,-3,-1,-8,7,-8,6,8,-5,-4,-5,4,-1,5,1,10,-9,2,3,-8,5,-7,4,-6,-6,-6,9,-2,-3,10,8,6,4,-5,8,-9,-1,-4,2,6,10,2,1,2,10,2,3,-5,-5,-3,-4,-6,9,-10,1,10,9,1,-5,-6,4,-4,5,3,10,5,-8,-8,2,-7,-5,4,-10,-6,7,-3,1,7,9,-9,6,2,6,1,8,-1,-9,-1,-10,-6,-2,-10,-8,-10,-9,-5,-3,-8,-7,-9,7,1,6,4,10,5,-1,-4,1,8,-5,4,-10,-8,-1,3,6,-3,8,8,-1,10,5,-3,-10,-6,-5,-2,3,3,5,-2,-2,3,6,5,-4,1,9,-8,6,3,-6,-4,2,-3,-3,-8,-9,4,4,-3,6,-10,8,5,5,3,10,-10,-7,1,-5,-7,-2,2,-10,-6,8,1,-7,-2,-4,-2,4,-9,5,3,9,-6,10,-8,-2,-9,2,8,6,-2,5,-5,7,2,-3,2,6,4,-6,8,-7,-2,-7,-8,10,-5,5,-8,3,-4,4,10,-6,7,5,1,2,-10,-4,4,-10,3,-9,8,10,10,-10,5,5,7,9,3,-3,-2,3,5,7,1,-8,9,10,1,2,-5,7,-8,-4,-10,3,-6,-10,-10,-8,2,-9,-3,10,1,9,10,10,4,6,10,6,6,8,2,8,-3,4,-5,9,8,-2,8,4,-5,-6,10,3,-7,-3,-7,2,7,6,-2,-10,7,-7,-5,6,3,-6,-5,10,-2,-4,5,10,2,6,3,4,-9,4,6,-5,-6,-2,4,7,-7,4,7,-4,10,-4,-5,2,1,-9,9,-4,8,8,-1,5,-5,10,3,-10,-3,7,-3,3,6,-1,-7,-2,2,-7,4,-1,-3,9,-6,-2,-5,8,-7,-2,-4,-1,-7,-7,2,3,10,-3,6,2,2,10,2,-5,-10,3,9,6,7,-6,1,-5,1,3,-3,-9,8,4,1,8,-6,7,7,3,9,4,-7,1,10,-7,-1,-8,10,-9,-3,2,10,-7,3,2,9,1,7,-6,-6,-10,1,-5,1,-2,3,-6,-3,1,-2,9,-2,-9,-2,6,8,-4,5,10,3,2,7,-10,-10,-8,5,8,-6,6,2,6,9,8,9,-4,9,-10,-4,9,-1,-8,2,4,3,-8,2,-2,3,-7,-8,-9,-6,5,1,-6,9,-1,-10,-3,-2,5,-6,-7,6,3,6,3,5,4,10,-10,-3,-3,5,7,8,5,10,-3,7,-2,-2,-9,-3,-2,-2,-5,5,-2,-6,2,-1,-6,-9,7,8,1,6,-6,-2,3,3,10,6,10,1,5,-7,10,1,3,1,-9,3,-8,-4,-8,-9,-4,-2,-8,-4,-2,-4,-8,4,-6,3,-1,-1,-1,10,-9,-2,5,-7,5,-5,-2,-1,-6,2,-9,-7,3,-1,-2,-6,9,4,-9,4,2,-3,8,7,-9,6,-3,-8,3,-1,-10,6,6,-1,10,-9,7,-1,5,1,-6,-10,3,7,9,9,-6,9,6,7,9,10,-9,3,6,8,2,-3,7,-1,10,8,-6,10,-8,5,4,-3,6,-8,1,-6,-3,-8,-3,-9,-8,10,5,-3,8,2,5,6,-3,-6,8,9,-3,4,-5,-8,1,6,-10], dtype = "int8")#candidate|5733|(1120,)|const|int8
call_5732 = relay.TupleGetItem(func_588_call(relay.reshape(const_5733.astype('int8'), [10, 7, 16]), relay.reshape(const_5733.astype('int8'), [10, 7, 16]), ), 0)
call_5734 = relay.TupleGetItem(func_591_call(relay.reshape(const_5733.astype('int8'), [10, 7, 16]), relay.reshape(const_5733.astype('int8'), [10, 7, 16]), ), 0)
output = relay.Tuple([call_5703,const_5704,const_5705,bop_5714,call_5729,const_5730,call_5732,const_5733,])
output2 = relay.Tuple([call_5706,const_5704,const_5705,bop_5717,call_5731,const_5730,call_5734,const_5733,])
func_5736 = relay.Function([var_5713,], output)
mod['func_5736'] = func_5736
mod = relay.transform.InferType()(mod)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5737 = relay.var("var_5737", dtype = "float64", shape = (14, 15, 4))#candidate|5737|(14, 15, 4)|var|float64
func_5736_call = mutated_mod.get_global_var('func_5736')
call_5738 = func_5736_call(var_5737)
output = call_5738
func_5739 = relay.Function([var_5737], output)
mutated_mod['func_5739'] = func_5739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3106_call = mod.get_global_var('func_3106')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_5791 = relay.TupleGetItem(func_3106_call(), 1)
call_5792 = relay.TupleGetItem(func_3108_call(), 1)
output = call_5791
output2 = call_5792
func_5802 = relay.Function([], output)
mod['func_5802'] = func_5802
mod = relay.transform.InferType()(mod)
output = func_5802()
func_5803 = relay.Function([], output)
mutated_mod['func_5803'] = func_5803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3444_call = mutated_mod.get_global_var('func_3444')
call_5809 = relay.TupleGetItem(func_3442_call(), 0)
call_5810 = relay.TupleGetItem(func_3444_call(), 0)
output = call_5809
output2 = call_5810
func_5811 = relay.Function([], output)
mod['func_5811'] = func_5811
mod = relay.transform.InferType()(mod)
mutated_mod['func_5811'] = func_5811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5811_call = mutated_mod.get_global_var('func_5811')
call_5812 = func_5811_call()
output = call_5812
func_5813 = relay.Function([], output)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1469_call = mod.get_global_var('func_1469')
func_1470_call = mutated_mod.get_global_var('func_1470')
call_5879 = relay.TupleGetItem(func_1469_call(), 0)
call_5880 = relay.TupleGetItem(func_1470_call(), 0)
output = call_5879
output2 = call_5880
func_5901 = relay.Function([], output)
mod['func_5901'] = func_5901
mod = relay.transform.InferType()(mod)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mutated_mod.get_global_var('func_5901')
call_5902 = func_5901_call()
output = call_5902
func_5903 = relay.Function([], output)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4631_call = mod.get_global_var('func_4631')
func_4632_call = mutated_mod.get_global_var('func_4632')
call_5907 = relay.TupleGetItem(func_4631_call(), 4)
call_5908 = relay.TupleGetItem(func_4632_call(), 4)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_5940 = relay.TupleGetItem(func_2578_call(), 0)
call_5941 = relay.TupleGetItem(func_2579_call(), 0)
output = relay.Tuple([call_5907,call_5940,])
output2 = relay.Tuple([call_5908,call_5941,])
func_5945 = relay.Function([], output)
mod['func_5945'] = func_5945
mod = relay.transform.InferType()(mod)
output = func_5945()
func_5946 = relay.Function([], output)
mutated_mod['func_5946'] = func_5946
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5952 = relay.const([[[-2.337482,4.524570,4.465940,5.802745],[-1.668007,2.103695,9.738129,9.017309],[-6.199353,5.464968,-3.947424,5.556529],[7.092206,-6.516879,-8.535130,4.396626],[-0.110254,-5.068918,7.710944,-0.225330],[-5.653205,0.871557,-0.991808,8.673470],[9.622691,-1.500157,-1.654942,6.368976],[4.352258,1.611020,7.746015,3.939279],[-3.304934,5.256198,2.691514,7.648910],[3.015666,2.047131,2.291441,-5.558013],[-9.034884,-6.677797,4.205745,-3.783830],[-6.485802,-1.203346,-4.446447,1.739907],[8.009529,-6.011366,0.341265,-5.126769],[-3.997874,-1.964605,-0.516839,7.529378]],[[-2.678453,3.531703,0.682725,-3.033161],[-9.669317,4.966410,-0.286325,6.211397],[0.526431,-0.043137,6.292738,-3.575895],[6.163724,0.835223,0.268197,-5.048194],[-9.858732,6.915261,3.352655,9.774766],[2.774320,-4.916097,-8.468218,1.018414],[-9.376628,-9.721630,8.219914,8.551729],[0.316285,-8.748064,2.671280,-3.204259],[1.603200,1.998739,-8.265917,-1.723534],[6.482384,8.285869,-0.584354,-9.231621],[7.850715,-1.285256,1.955287,0.147689],[-3.878499,3.496842,-7.665278,9.107594],[-9.363520,-1.897323,-2.959204,-2.404442],[0.811017,7.140976,-4.566781,-9.508375]],[[-7.458946,-8.211210,2.017105,-3.128574],[-6.799427,1.115597,-0.189170,-7.831946],[-3.164948,3.235577,9.843308,-5.927207],[4.695023,-9.800954,7.377404,1.309326],[7.102198,3.105281,0.399100,-2.103806],[-7.644831,-7.459654,-7.022319,6.027355],[8.231330,3.397805,-3.547878,-3.632215],[1.754931,6.722865,0.159327,-0.504451],[6.583598,6.166866,-5.634738,-6.531012],[-6.906553,3.202778,6.687935,6.114884],[4.937168,7.943363,-7.615735,1.714525],[-4.648541,5.410120,-1.226262,-7.382778],[6.533925,-6.578458,3.763377,-2.861672],[-8.972383,-3.807867,-2.306700,-5.069347]],[[6.866824,6.981284,3.406612,7.900501],[-3.886288,-3.171066,1.173780,-1.599586],[-0.811411,-3.171783,9.119797,8.488044],[-0.816677,2.305790,4.998828,-5.972541],[6.712971,3.415317,-1.973490,-8.601468],[3.431116,4.452460,3.053796,1.413712],[5.455630,6.861484,9.255388,-4.272738],[-2.421997,-1.588447,0.223143,-7.720909],[2.276411,-0.396618,3.827673,-2.533076],[3.432402,9.232600,8.690138,-6.030209],[-6.088752,3.130173,1.068486,5.028344],[6.299219,6.659689,-1.845169,8.316971],[3.485336,1.748703,-5.179913,8.827700],[-4.630582,-3.894415,-6.079111,-6.209241]],[[-6.328430,-7.672702,5.448506,2.950788],[9.542564,0.740838,9.458297,4.055352],[-7.815440,7.220526,-1.688697,-9.829818],[3.100219,-6.985254,-3.378576,-8.185293],[-9.780243,-8.146199,-4.148254,-3.497733],[-1.574809,3.735595,-1.993112,1.675677],[2.039249,9.177532,2.973503,-1.588889],[-1.279898,-6.431111,2.284766,1.475271],[0.911997,6.429840,-9.477020,-5.980339],[-1.342417,-6.328094,-8.371030,6.523830],[-5.564324,-7.536998,8.756618,-0.026301],[3.483635,-7.823585,5.096069,8.332652],[5.910273,-5.145628,-4.396837,-7.303744],[-4.822385,-2.037017,-5.247191,-5.645413]],[[-4.289037,3.495117,-4.202793,-0.235601],[-9.661695,-3.193815,-9.608838,3.075916],[8.430824,6.855855,-1.817553,-4.564546],[-3.022837,7.691717,-2.803753,0.720740],[-7.332323,-1.260791,-6.336775,6.679945],[4.251620,-9.431229,4.321068,7.849827],[6.913057,-6.329788,2.724844,-3.259500],[3.702122,-3.977121,-0.835648,5.903872],[-9.762971,6.809920,-6.975008,-0.410291],[-0.904492,6.053251,-8.722357,-6.473890],[-8.054731,0.934023,7.439456,6.462566],[4.334396,3.739380,-8.840489,3.377418],[-8.769644,5.328490,4.079785,7.157075],[6.014676,2.726560,1.520744,6.280643]],[[-6.246526,7.312442,9.331950,5.105382],[0.731612,-3.166640,5.131050,-9.298962],[-0.625791,-6.304218,5.444001,6.759791],[-3.333400,-1.454045,7.888012,1.384647],[-4.026658,6.696331,-3.277579,3.993192],[7.617822,4.762873,9.901318,6.805346],[6.080028,8.801683,4.399364,2.688323],[7.710432,7.587196,-7.882153,-2.862162],[-0.335255,-2.325504,-2.932167,-8.784160],[0.151159,-2.714334,3.806177,-7.525087],[1.943897,-2.111646,-6.498675,6.902561],[1.622371,-2.562697,2.190456,4.384152],[0.657031,-0.287531,2.570968,7.881496],[-2.185495,8.737035,9.726355,9.531539]],[[3.518637,8.266775,0.139996,6.715435],[-9.286473,-7.560403,-0.906515,1.536314],[2.626122,-1.000608,-3.194455,7.350950],[3.356751,-4.516243,-6.880316,-8.994328],[6.991902,-1.047054,-0.198548,-2.810325],[8.407830,-2.294119,-1.746630,3.949717],[-2.295664,-2.215675,-0.804197,8.614855],[-4.753173,-1.273436,0.192009,-4.219050],[9.001182,-9.777769,-7.770999,-0.329805],[7.480344,6.045393,-1.931129,-6.965801],[-4.505114,2.558388,-7.685009,1.915871],[-7.564370,-2.159679,-0.101696,6.242230],[3.460473,8.484293,-4.214738,3.526255],[-2.149611,6.781183,-5.950678,0.290090]],[[-6.008453,6.163990,-2.853844,6.708527],[-4.299057,-5.452062,-7.549948,-5.394064],[3.048051,8.519374,5.061431,-6.571970],[0.029906,-4.802612,4.898648,5.259594],[-8.634484,-7.774251,5.777406,-1.867971],[0.126023,-3.436574,-3.781807,4.709863],[-8.226709,9.259326,-0.678007,3.938466],[9.557409,1.418350,-4.348776,-2.990725],[8.248237,0.446325,-5.232497,-2.072673],[-8.812070,4.619569,-2.532531,3.769940],[2.973413,-4.719964,-6.652759,6.965352],[-8.901517,-2.429889,9.824611,2.200143],[9.189149,6.675058,-5.772426,-2.067412],[-9.132790,4.590861,-0.488816,7.548205]],[[2.578582,1.984112,-5.476659,6.914342],[5.099097,0.002794,-8.195996,9.484162],[6.027549,6.915790,3.607842,-8.170821],[6.736925,-1.413375,-4.184112,7.910386],[2.468979,0.007630,-4.102185,-6.912881],[-1.355392,-4.434073,5.782279,4.210788],[1.604618,-7.306916,-1.617283,-4.251539],[7.924562,7.282911,0.963501,4.043937],[-1.052240,-1.002157,-7.408183,-6.609792],[-0.638462,0.957886,3.044957,-2.887229],[-6.406677,4.731469,9.089621,-2.705097],[-8.646545,5.267062,8.251490,-8.472694],[6.421156,-1.239296,-9.490833,4.400124],[4.720969,-4.858443,6.288228,1.030736]],[[1.029193,-5.202716,1.396482,1.553563],[-0.340472,5.927259,-6.801522,5.801745],[-4.431478,8.769039,9.469985,4.039542],[3.001323,3.915508,-9.564053,-5.635481],[5.214046,-5.070486,-3.503280,-5.513935],[-2.436584,-6.928389,5.921239,9.710551],[8.996132,-4.207767,7.350129,6.206610],[3.795124,5.577052,-6.215165,-8.972030],[-1.752231,-3.439243,-2.354172,1.561600],[-0.023892,8.775071,-0.373838,3.910745],[7.182986,-2.962650,7.923575,-4.857408],[-2.593418,-7.178061,7.532445,-7.369844],[2.903132,-1.884727,9.065424,2.934137],[2.761985,6.911182,0.461808,4.709419]],[[4.111384,5.102817,-6.095518,3.136067],[5.768930,9.149956,-9.906977,-8.868504],[-4.823436,-2.307877,-3.436044,9.490240],[-2.732006,6.207052,8.428658,1.681496],[-8.352888,1.317538,-5.101282,2.935643],[-2.072833,-9.448448,-7.735997,-9.584010],[-8.956369,-6.504476,-6.612223,-2.664110],[7.923269,-3.978052,9.668874,6.565718],[-8.623247,-3.174002,3.625831,-8.527869],[-6.893153,7.781460,6.668047,8.029492],[-9.833237,1.681019,2.999638,0.251001],[9.878317,0.150822,6.188398,6.878786],[7.430562,-0.425958,4.135386,-3.564228],[-8.071348,1.143429,0.802941,0.126694]]], dtype = "float64")#candidate|5952|(12, 14, 4)|const|float64
uop_5953 = relay.rsqrt(const_5952.astype('float64')) # shape=(12, 14, 4)
output = relay.Tuple([uop_5953,])
output2 = relay.Tuple([uop_5953,])
func_5959 = relay.Function([], output)
mod['func_5959'] = func_5959
mod = relay.transform.InferType()(mod)
output = func_5959()
func_5960 = relay.Function([], output)
mutated_mod['func_5960'] = func_5960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3939_call = mod.get_global_var('func_3939')
func_3940_call = mutated_mod.get_global_var('func_3940')
call_6004 = relay.TupleGetItem(func_3939_call(), 0)
call_6005 = relay.TupleGetItem(func_3940_call(), 0)
func_5945_call = mod.get_global_var('func_5945')
func_5946_call = mutated_mod.get_global_var('func_5946')
call_6022 = relay.TupleGetItem(func_5945_call(), 0)
call_6023 = relay.TupleGetItem(func_5946_call(), 0)
output = relay.Tuple([call_6004,call_6022,])
output2 = relay.Tuple([call_6005,call_6023,])
func_6029 = relay.Function([], output)
mod['func_6029'] = func_6029
mod = relay.transform.InferType()(mod)
output = func_6029()
func_6030 = relay.Function([], output)
mutated_mod['func_6030'] = func_6030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_6050 = relay.TupleGetItem(func_2200_call(), 0)
call_6051 = relay.TupleGetItem(func_2201_call(), 0)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
call_6052 = relay.TupleGetItem(func_5276_call(relay.reshape(call_6050.astype('uint64'), [840,])), 1)
call_6053 = relay.TupleGetItem(func_5278_call(relay.reshape(call_6050.astype('uint64'), [840,])), 1)
output = relay.Tuple([call_6050,call_6052,])
output2 = relay.Tuple([call_6051,call_6053,])
func_6058 = relay.Function([], output)
mod['func_6058'] = func_6058
mod = relay.transform.InferType()(mod)
output = func_6058()
func_6059 = relay.Function([], output)
mutated_mod['func_6059'] = func_6059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2082_call = mod.get_global_var('func_2082')
func_2083_call = mutated_mod.get_global_var('func_2083')
call_6075 = func_2082_call()
call_6076 = func_2082_call()
output = call_6075
output2 = call_6076
func_6079 = relay.Function([], output)
mod['func_6079'] = func_6079
mod = relay.transform.InferType()(mod)
mutated_mod['func_6079'] = func_6079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6079_call = mutated_mod.get_global_var('func_6079')
call_6080 = func_6079_call()
output = call_6080
func_6081 = relay.Function([], output)
mutated_mod['func_6081'] = func_6081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_6125 = relay.TupleGetItem(func_1502_call(), 0)
call_6126 = relay.TupleGetItem(func_1503_call(), 0)
output = relay.Tuple([call_6125,])
output2 = relay.Tuple([call_6126,])
func_6136 = relay.Function([], output)
mod['func_6136'] = func_6136
mod = relay.transform.InferType()(mod)
output = func_6136()
func_6137 = relay.Function([], output)
mutated_mod['func_6137'] = func_6137
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6143 = relay.const([[[8.234799,9.954948,-9.267238,-8.219916,-0.043692],[-2.484555,6.245870,-3.723763,-7.333494,-7.059869],[6.683752,1.032010,0.651568,-7.789849,-5.503480],[-3.563557,-1.370834,9.157001,-9.519980,-4.702929],[-2.758247,8.089423,-2.266515,0.128199,-2.136949],[-2.143659,-3.839029,6.559657,-3.665902,-7.484266],[5.138970,-9.355130,7.118593,-3.319395,-8.955188],[-9.817640,-7.888428,-7.125215,9.826558,5.478828],[-1.646775,-9.583378,-4.686292,-1.747270,2.447206],[8.694477,4.962760,-7.382271,-4.100339,-9.387365]],[[-1.763170,2.630236,-6.231244,2.822434,0.616140],[6.527076,1.200102,-6.889400,4.689281,-3.992060],[7.033636,9.462735,1.455589,2.889370,1.442278],[-2.329671,-8.254367,-4.482966,-1.170775,3.255124],[-3.791754,1.164840,-3.971050,0.593492,-2.791133],[-7.672611,-1.239761,-3.413281,0.028900,1.019425],[5.740550,-7.134846,4.050220,-4.642667,6.980210],[7.665943,7.827097,5.323716,-6.792248,4.467000],[-3.407065,-6.989277,-2.490857,-3.878240,1.748052],[-3.443893,-2.004839,-2.956738,0.928730,9.381846]],[[-6.867110,-5.148608,7.255379,2.478891,1.850412],[-4.357034,-9.140968,-5.332690,2.652848,0.394127],[-6.086004,5.371330,-0.914715,-5.800615,-3.352558],[-2.013825,-4.364616,-2.998510,-7.163942,3.372736],[8.711224,9.739365,-1.451065,-1.860654,7.490252],[-9.264530,0.677660,-4.985352,-5.097606,1.539320],[-0.824387,7.196685,-3.518851,-9.373222,-3.214855],[-3.175247,2.151673,3.919740,7.506906,8.177578],[8.620832,-5.371826,5.195327,7.905725,4.233782],[-9.918544,-7.183971,-0.304194,-5.259776,-0.897240]],[[-8.345239,-2.547733,-6.403116,-3.440303,7.287785],[-1.192361,6.214085,8.002093,5.640602,-1.482238],[4.091371,-3.530098,5.607176,-7.712268,6.033368],[-6.845585,-2.625225,6.790418,-1.726136,-7.067306],[1.953696,9.091728,-0.053843,2.924307,9.749251],[-9.993197,5.805942,-5.305526,-7.811576,-2.921537],[8.460906,4.676491,8.305133,1.305039,-9.524192],[9.068634,-1.757655,9.467110,5.765710,5.493057],[-6.952831,3.139464,-2.148507,-8.085057,-7.831826],[0.690626,8.829144,5.545876,0.971452,9.239627]],[[5.128774,-0.500130,3.440257,-0.944584,-0.353568],[8.237382,3.190690,-8.721716,-5.492776,-8.881610],[1.378110,7.668681,2.131743,6.272988,2.091366],[-7.310333,6.260854,-9.569974,-1.654229,3.845009],[-2.317220,-5.571815,6.051410,-5.567626,3.679707],[4.775163,-0.450098,-4.788542,9.534818,-6.553599],[-8.459681,5.309767,0.890686,-9.729666,-2.050281],[3.581018,-9.579775,6.935676,-2.265277,5.671215],[-7.001741,2.246622,2.822588,-6.510146,5.032209],[0.995140,-5.465828,-5.281907,1.640964,2.934020]],[[-7.588188,-2.182648,-0.418472,8.320055,6.411359],[0.639531,5.596886,-8.323889,-4.405678,5.994238],[-0.252482,2.037544,-4.331978,-4.685007,-6.182778],[4.765089,-0.459178,2.109697,9.815855,-1.075274],[0.415607,9.144692,-4.884918,-5.886666,-3.218467],[-2.169748,-6.217365,6.396163,7.433354,-6.182742],[-6.572987,4.164604,-4.804125,9.866619,3.916640],[-5.007328,5.676667,0.350535,-2.883747,-9.913419],[1.203179,3.325103,-9.455341,-3.169375,-1.129593],[2.712639,3.015620,-2.988933,3.755722,3.081993]],[[0.803269,-6.184700,8.007074,-8.081811,4.504047],[6.586160,7.232273,-9.302736,6.021567,-3.177975],[-8.126149,-5.622777,-8.190860,4.779265,9.786433],[-0.787389,-0.475216,8.022708,-3.437874,8.559881],[8.255595,-3.972908,7.634755,-5.016571,-6.228542],[2.859461,4.822069,-9.544299,-5.843282,3.334167],[-3.514818,-1.799357,-3.998887,7.735968,6.372321],[-3.452783,4.188705,0.147405,-0.574871,7.430831],[-8.030165,4.965775,1.174588,2.630922,1.169355],[8.883646,-7.115218,-0.357603,1.589279,5.548702]],[[0.107355,6.652257,7.932663,6.892356,3.385955],[-9.420909,7.788440,4.681556,9.078276,-8.527522],[8.180067,-6.306167,5.943267,6.980794,-2.639315],[3.420896,-1.189303,-2.238568,-2.745664,7.970179],[3.448797,3.022005,0.251341,1.253089,-8.186116],[7.514711,2.267444,8.199872,4.240522,3.402232],[-1.381290,7.233335,-1.696008,-1.842371,5.093373],[-7.024339,8.056007,-4.503451,-1.323182,9.709113],[3.765401,-2.803575,-6.376759,-3.650319,-7.657703],[-1.873095,-8.260841,-1.873205,2.855750,5.057514]]], dtype = "float64")#candidate|6143|(8, 10, 5)|const|float64
uop_6144 = relay.asin(const_6143.astype('float64')) # shape=(8, 10, 5)
output = uop_6144
output2 = uop_6144
func_6147 = relay.Function([], output)
mod['func_6147'] = func_6147
mod = relay.transform.InferType()(mod)
mutated_mod['func_6147'] = func_6147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6147_call = mutated_mod.get_global_var('func_6147')
call_6148 = func_6147_call()
output = call_6148
func_6149 = relay.Function([], output)
mutated_mod['func_6149'] = func_6149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4303_call = mod.get_global_var('func_4303')
func_4304_call = mutated_mod.get_global_var('func_4304')
call_6150 = func_4303_call()
call_6151 = func_4303_call()
output = call_6150
output2 = call_6151
func_6154 = relay.Function([], output)
mod['func_6154'] = func_6154
mod = relay.transform.InferType()(mod)
mutated_mod['func_6154'] = func_6154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6154_call = mutated_mod.get_global_var('func_6154')
call_6155 = func_6154_call()
output = call_6155
func_6156 = relay.Function([], output)
mutated_mod['func_6156'] = func_6156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5006_call = mod.get_global_var('func_5006')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_6192 = relay.TupleGetItem(func_5006_call(), 0)
call_6193 = relay.TupleGetItem(func_5007_call(), 0)
func_3989_call = mod.get_global_var('func_3989')
func_3990_call = mutated_mod.get_global_var('func_3990')
call_6198 = func_3989_call()
call_6199 = func_3989_call()
output = relay.Tuple([call_6192,call_6198,])
output2 = relay.Tuple([call_6193,call_6199,])
func_6209 = relay.Function([], output)
mod['func_6209'] = func_6209
mod = relay.transform.InferType()(mod)
output = func_6209()
func_6210 = relay.Function([], output)
mutated_mod['func_6210'] = func_6210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5653_call = mod.get_global_var('func_5653')
func_5654_call = mutated_mod.get_global_var('func_5654')
call_6244 = relay.TupleGetItem(func_5653_call(), 0)
call_6245 = relay.TupleGetItem(func_5654_call(), 0)
output = call_6244
output2 = call_6245
func_6256 = relay.Function([], output)
mod['func_6256'] = func_6256
mod = relay.transform.InferType()(mod)
output = func_6256()
func_6257 = relay.Function([], output)
mutated_mod['func_6257'] = func_6257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_6281 = func_3284_call()
call_6282 = func_3284_call()
func_3402_call = mod.get_global_var('func_3402')
func_3403_call = mutated_mod.get_global_var('func_3403')
call_6285 = func_3402_call()
call_6286 = func_3402_call()
output = relay.Tuple([call_6281,call_6285,])
output2 = relay.Tuple([call_6282,call_6286,])
func_6295 = relay.Function([], output)
mod['func_6295'] = func_6295
mod = relay.transform.InferType()(mod)
output = func_6295()
func_6296 = relay.Function([], output)
mutated_mod['func_6296'] = func_6296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2374_call = mutated_mod.get_global_var('func_2374')
call_6297 = func_2373_call()
call_6298 = func_2373_call()
output = relay.Tuple([call_6297,])
output2 = relay.Tuple([call_6298,])
func_6299 = relay.Function([], output)
mod['func_6299'] = func_6299
mod = relay.transform.InferType()(mod)
output = func_6299()
func_6300 = relay.Function([], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2322_call = mod.get_global_var('func_2322')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_6320 = func_2322_call()
call_6321 = func_2322_call()
output = relay.Tuple([call_6320,])
output2 = relay.Tuple([call_6321,])
func_6323 = relay.Function([], output)
mod['func_6323'] = func_6323
mod = relay.transform.InferType()(mod)
output = func_6323()
func_6324 = relay.Function([], output)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5125_call = mod.get_global_var('func_5125')
func_5127_call = mutated_mod.get_global_var('func_5127')
call_6439 = relay.TupleGetItem(func_5125_call(), 0)
call_6440 = relay.TupleGetItem(func_5127_call(), 0)
output = relay.Tuple([call_6439,])
output2 = relay.Tuple([call_6440,])
func_6471 = relay.Function([], output)
mod['func_6471'] = func_6471
mod = relay.transform.InferType()(mod)
output = func_6471()
func_6472 = relay.Function([], output)
mutated_mod['func_6472'] = func_6472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3234_call = mod.get_global_var('func_3234')
func_3235_call = mutated_mod.get_global_var('func_3235')
call_6522 = relay.TupleGetItem(func_3234_call(), 6)
call_6523 = relay.TupleGetItem(func_3235_call(), 6)
func_4560_call = mod.get_global_var('func_4560')
func_4561_call = mutated_mod.get_global_var('func_4561')
call_6527 = func_4560_call()
call_6528 = func_4560_call()
uop_6529 = relay.sinh(call_6522.astype('float32')) # shape=(8, 16, 5)
uop_6531 = relay.sinh(call_6523.astype('float32')) # shape=(8, 16, 5)
const_6540 = relay.const([[[4.258461,9.789418,-1.868252,0.050509,3.656373],[1.937875,-2.002314,-1.168398,0.620155,6.062653],[8.650810,-9.425035,-4.552003,-8.096077,-2.088974],[-9.432859,1.952895,9.862030,1.143465,6.931301],[-8.014245,0.459734,-2.427255,1.992449,6.207025],[1.685634,-8.787821,3.923602,6.224994,0.162100],[0.578199,-7.096967,4.186850,-1.961996,-7.630120],[1.416262,-3.222800,-0.119411,4.644075,-4.330173],[-5.803650,4.022382,-6.293074,-9.776145,-2.231466],[1.564889,7.387582,4.645358,2.811703,-6.399156],[7.161685,-8.465660,-1.571382,-8.259671,1.975706],[-9.009422,-0.873252,-8.919103,-6.182799,0.299476],[8.085535,1.298472,-6.264484,6.849712,-1.100252],[3.474331,-7.036471,-6.864699,-6.567416,-1.124585],[8.393790,-9.235665,-9.512723,-4.718957,0.520313],[0.566119,2.507470,8.163203,0.219430,4.413563]],[[-4.986683,9.792911,9.112411,-5.739126,6.863899],[5.814181,4.734765,-9.084260,-5.463845,7.328697],[-8.530664,-8.596006,1.899116,5.081814,7.724832],[-9.420625,-9.052025,-2.381368,3.109629,4.437566],[0.081639,-4.571554,-3.364302,-3.447264,4.003813],[-0.359382,-4.975863,9.108199,3.453055,9.595584],[-5.640537,-7.981788,7.124775,-0.670854,2.219581],[9.754482,-6.380131,-1.155003,6.032188,3.428555],[-3.112753,-9.705573,9.918653,-1.434149,7.630322],[1.625373,7.339948,-1.133545,-0.224798,-2.059335],[-5.698855,-0.571022,7.493722,-2.100800,9.293350],[8.053874,3.603192,-5.140089,-2.651017,9.382752],[-6.010637,9.477366,0.063755,2.609132,-1.153914],[3.029159,3.911421,6.140369,-0.759796,5.011160],[2.489693,1.836711,5.338289,2.008612,-3.352214],[1.107153,4.265937,6.518202,-0.013208,-1.392151]],[[-7.572270,1.857871,4.701512,-2.586719,-2.463027],[9.498663,-6.462580,1.738109,6.293792,8.308932],[3.452752,-3.107999,4.739707,3.850991,-4.405366],[-0.870405,-4.314486,0.418158,-1.997585,1.126622],[6.071334,0.353340,-8.403716,1.978411,0.364876],[8.627269,6.363637,-2.881316,3.889608,-6.408298],[1.673457,-4.929264,4.930203,-2.681299,3.079142],[-4.047712,-1.439943,8.826505,-9.431597,-5.126502],[1.151217,9.087264,-8.809190,-3.597350,4.295707],[3.115743,8.756834,-0.958663,2.907255,4.912449],[3.487100,-8.890113,6.287186,-5.486242,-0.699807],[6.223143,-8.320539,7.501253,-0.691767,2.849785],[-2.800610,2.897690,-6.942753,-8.224141,-4.277832],[3.112137,-5.221921,0.220395,4.738909,7.932754],[6.539171,1.651326,4.875454,-2.699639,-5.817230],[-3.892151,-6.546598,4.708992,7.168580,0.891252]],[[4.573855,2.552267,-8.506044,8.865463,-1.506477],[0.391350,9.229559,-1.143434,3.343893,2.026522],[-4.105302,4.399403,1.260587,3.014401,-7.109454],[-6.264995,6.673616,9.261433,-4.151718,9.878051],[-6.785713,-4.569895,-3.408431,-4.376705,6.330628],[9.371139,6.446888,2.573081,0.506217,-7.327506],[5.222007,5.149816,-4.919947,-9.865483,2.825586],[-9.450995,-6.074945,-7.742506,1.033976,2.771916],[-8.809857,-5.924419,3.614925,-0.079019,-4.197978],[-8.561703,5.834325,4.433882,2.875629,-7.552170],[5.235777,-6.200712,-2.758728,-9.281215,6.509034],[-9.673603,8.236917,-7.331362,-7.477510,9.577063],[7.392480,-9.398107,-0.723881,-7.983267,7.500363],[-3.624365,1.080310,1.476910,8.151577,9.524092],[6.692541,-3.343170,-7.390413,3.302874,7.065386],[-3.064242,-5.842964,2.036569,-5.735230,-3.436138]],[[1.982887,-8.093871,8.971051,-8.811029,-0.404914],[-9.536256,0.291234,-3.623774,7.216190,8.674300],[-9.441630,6.863191,-0.272373,4.006769,-5.445701],[7.189805,1.954863,7.473500,2.490796,5.585651],[2.706996,7.573428,0.357193,1.026418,8.125023],[7.000777,-2.738871,-7.060911,-5.612380,9.192959],[-6.216071,-6.409678,-0.141576,-3.237982,9.301531],[1.556064,9.397876,8.930157,-2.768612,7.662085],[7.714781,-0.573918,2.708004,2.874347,-7.274773],[4.552450,8.156863,-9.230724,9.606280,3.437846],[0.689304,4.092619,9.778479,6.032828,5.768127],[4.988455,6.683547,-8.060908,-7.998653,-9.369051],[-5.945062,2.080423,0.592492,-1.843641,8.714643],[0.221497,-7.709043,7.882700,-8.759650,-7.543104],[-1.384604,-9.255430,6.055218,-5.021181,-9.054412],[-4.816298,-2.291946,-0.285619,-5.692930,-2.528440]],[[-7.160681,-2.124994,8.285700,-3.183858,-9.985163],[3.490410,-9.167073,-1.751981,6.465703,-1.857462],[-1.550683,-7.023097,-1.899605,-5.378730,6.220534],[-4.418284,4.720572,7.448341,6.669399,-8.428554],[-6.311220,-9.762120,4.864751,-5.799827,8.200891],[4.761277,7.473953,9.359578,-5.786727,-8.533320],[-7.550040,-6.846424,6.010656,-9.207276,2.058803],[-1.587777,2.078845,1.945300,-1.133790,2.902132],[-6.266601,1.418890,-3.622504,3.626678,-0.892773],[3.974825,5.456592,-5.244134,1.579553,1.537905],[1.928198,-9.821077,-9.478338,-4.606472,7.028099],[-6.078885,-6.762329,2.191258,-7.085694,4.303901],[3.585478,-3.825949,-5.328569,6.524282,5.196447],[7.547227,2.743515,6.433259,7.888237,-9.488077],[4.804983,-6.674654,-6.332385,4.795407,-0.942644],[4.015021,9.439188,-5.427304,1.749907,8.244996]],[[-5.007915,8.013820,-0.919591,5.534047,-4.281999],[-4.985244,0.807251,8.431563,-2.269816,-0.816131],[-3.178391,-5.470745,0.852991,4.562511,4.028072],[-1.312412,6.795340,5.844173,-5.544727,6.702629],[-0.961407,8.305532,-6.575205,5.396042,1.268622],[-2.191976,2.456202,8.091508,7.848963,1.157442],[5.191361,9.482664,-0.487026,-8.475504,5.461451],[3.744038,2.245057,4.205127,-5.587303,-0.415144],[8.220446,6.509218,-1.437384,7.156781,4.988475],[-5.420120,-9.644022,-1.368156,-9.269422,-6.273533],[-1.840276,9.403983,-7.039241,-3.070165,0.005505],[-5.686041,5.151397,2.288704,-4.666177,2.152101],[-7.311342,-2.461353,8.393364,1.685852,7.431275],[-0.232088,4.420382,9.253913,-9.186191,-2.634127],[-0.625573,-7.339582,-5.293693,5.192414,9.239643],[1.502074,-7.240518,-6.216931,-0.120057,8.128672]],[[0.723231,8.268598,3.126561,-7.895270,-8.142429],[1.649979,0.200536,-4.652261,-4.461181,-7.831661],[0.496516,6.170139,4.710705,3.474829,4.858347],[8.299856,-0.772234,8.225788,9.744912,-6.437629],[2.203169,5.501669,8.460469,-5.884788,7.674117],[9.767882,-9.514969,1.907907,4.978665,4.412715],[1.754367,5.749288,-3.667818,-0.105858,7.365682],[0.743481,-2.691322,4.278334,1.770312,7.383408],[0.615680,0.453536,9.986963,4.341663,0.399305],[6.730364,-5.398190,6.369317,-2.681880,-0.994306],[-2.756763,-2.026721,-9.677415,-4.181221,9.206683],[3.613423,6.221826,5.236118,8.772768,0.583833],[9.736517,4.693953,1.969706,-0.560178,-9.632403],[9.217513,5.195227,-5.099336,-4.710653,1.440220],[-1.491120,-2.155725,8.965367,9.735768,-3.458342],[1.729429,5.298126,7.748775,0.344139,-5.744972]]], dtype = "float32")#candidate|6540|(8, 16, 5)|const|float32
bop_6541 = relay.power(uop_6529.astype('float32'), relay.reshape(const_6540.astype('float32'), relay.shape_of(uop_6529))) # shape=(8, 16, 5)
bop_6544 = relay.power(uop_6531.astype('float32'), relay.reshape(const_6540.astype('float32'), relay.shape_of(uop_6531))) # shape=(8, 16, 5)
output = relay.Tuple([call_6527,bop_6541,])
output2 = relay.Tuple([call_6528,bop_6544,])
func_6545 = relay.Function([], output)
mod['func_6545'] = func_6545
mod = relay.transform.InferType()(mod)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mutated_mod.get_global_var('func_6545')
call_6546 = func_6545_call()
output = call_6546
func_6547 = relay.Function([], output)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_6561 = relay.TupleGetItem(func_6058_call(), 0)
call_6562 = relay.TupleGetItem(func_6059_call(), 0)
output = relay.Tuple([call_6561,])
output2 = relay.Tuple([call_6562,])
func_6569 = relay.Function([], output)
mod['func_6569'] = func_6569
mod = relay.transform.InferType()(mod)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mutated_mod.get_global_var('func_6569')
call_6570 = func_6569_call()
output = call_6570
func_6571 = relay.Function([], output)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2200_call = mod.get_global_var('func_2200')
func_2201_call = mutated_mod.get_global_var('func_2201')
call_6603 = relay.TupleGetItem(func_2200_call(), 0)
call_6604 = relay.TupleGetItem(func_2201_call(), 0)
func_1737_call = mod.get_global_var('func_1737')
func_1738_call = mutated_mod.get_global_var('func_1738')
call_6605 = relay.TupleGetItem(func_1737_call(), 0)
call_6606 = relay.TupleGetItem(func_1738_call(), 0)
func_6209_call = mod.get_global_var('func_6209')
func_6210_call = mutated_mod.get_global_var('func_6210')
call_6607 = relay.TupleGetItem(func_6209_call(), 0)
call_6608 = relay.TupleGetItem(func_6210_call(), 0)
output = relay.Tuple([call_6603,call_6605,call_6607,])
output2 = relay.Tuple([call_6604,call_6606,call_6608,])
func_6642 = relay.Function([], output)
mod['func_6642'] = func_6642
mod = relay.transform.InferType()(mod)
mutated_mod['func_6642'] = func_6642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6642_call = mutated_mod.get_global_var('func_6642')
call_6643 = func_6642_call()
output = call_6643
func_6644 = relay.Function([], output)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6698 = relay.var("var_6698", dtype = "float32", shape = (14, 14, 4))#candidate|6698|(14, 14, 4)|var|float32
var_6699 = relay.var("var_6699", dtype = "float32", shape = (14, 14, 4))#candidate|6699|(14, 14, 4)|var|float32
bop_6700 = relay.floor_divide(var_6698.astype('float32'), relay.reshape(var_6699.astype('float32'), relay.shape_of(var_6698))) # shape=(14, 14, 4)
uop_6712 = relay.erf(var_6699.astype('float64')) # shape=(14, 14, 4)
bop_6716 = relay.bitwise_and(uop_6712.astype('uint32'), relay.reshape(var_6699.astype('uint32'), relay.shape_of(uop_6712))) # shape=(14, 14, 4)
func_4462_call = mod.get_global_var('func_4462')
func_4463_call = mutated_mod.get_global_var('func_4463')
call_6720 = relay.TupleGetItem(func_4462_call(), 1)
call_6721 = relay.TupleGetItem(func_4463_call(), 1)
bop_6729 = relay.greater(bop_6716.astype('bool'), relay.reshape(bop_6700.astype('bool'), relay.shape_of(bop_6716))) # shape=(14, 14, 4)
func_4560_call = mod.get_global_var('func_4560')
func_4561_call = mutated_mod.get_global_var('func_4561')
call_6733 = func_4560_call()
call_6734 = func_4560_call()
func_6256_call = mod.get_global_var('func_6256')
func_6257_call = mutated_mod.get_global_var('func_6257')
call_6736 = func_6256_call()
call_6737 = func_6256_call()
func_1502_call = mod.get_global_var('func_1502')
func_1503_call = mutated_mod.get_global_var('func_1503')
call_6743 = relay.TupleGetItem(func_1502_call(), 2)
call_6744 = relay.TupleGetItem(func_1503_call(), 2)
bop_6749 = relay.logical_xor(bop_6716.astype('uint32'), relay.reshape(uop_6712.astype('uint32'), relay.shape_of(bop_6716))) # shape=(14, 14, 4)
func_6079_call = mod.get_global_var('func_6079')
func_6081_call = mutated_mod.get_global_var('func_6081')
call_6761 = func_6079_call()
call_6762 = func_6079_call()
uop_6765 = relay.log10(bop_6729.astype('float64')) # shape=(14, 14, 4)
uop_6769 = relay.atanh(uop_6765.astype('float64')) # shape=(14, 14, 4)
bop_6774 = relay.multiply(uop_6765.astype('uint64'), relay.reshape(var_6698.astype('uint64'), relay.shape_of(uop_6765))) # shape=(14, 14, 4)
output = relay.Tuple([call_6720,call_6733,call_6736,call_6743,bop_6749,call_6761,uop_6769,bop_6774,])
output2 = relay.Tuple([call_6721,call_6734,call_6737,call_6744,bop_6749,call_6762,uop_6769,bop_6774,])
func_6777 = relay.Function([var_6698,var_6699,], output)
mod['func_6777'] = func_6777
mod = relay.transform.InferType()(mod)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6777_call = mutated_mod.get_global_var('func_6777')
var_6779 = relay.var("var_6779", dtype = "float32", shape = (14, 14, 4))#candidate|6779|(14, 14, 4)|var|float32
var_6780 = relay.var("var_6780", dtype = "float32", shape = (14, 14, 4))#candidate|6780|(14, 14, 4)|var|float32
call_6778 = func_6777_call(var_6779,var_6780,)
output = call_6778
func_6781 = relay.Function([var_6779,var_6780,], output)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6154_call = mod.get_global_var('func_6154')
func_6156_call = mutated_mod.get_global_var('func_6156')
call_6802 = func_6154_call()
call_6803 = func_6154_call()
uop_6808 = relay.asinh(call_6802.astype('float32')) # shape=(8, 16, 5)
uop_6810 = relay.asinh(call_6803.astype('float32')) # shape=(8, 16, 5)
output = relay.Tuple([uop_6808,])
output2 = relay.Tuple([uop_6810,])
func_6817 = relay.Function([], output)
mod['func_6817'] = func_6817
mod = relay.transform.InferType()(mod)
mutated_mod['func_6817'] = func_6817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6817_call = mutated_mod.get_global_var('func_6817')
call_6818 = func_6817_call()
output = call_6818
func_6819 = relay.Function([], output)
mutated_mod['func_6819'] = func_6819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_6820 = func_3284_call()
call_6821 = func_3284_call()
output = relay.Tuple([call_6820,])
output2 = relay.Tuple([call_6821,])
func_6823 = relay.Function([], output)
mod['func_6823'] = func_6823
mod = relay.transform.InferType()(mod)
mutated_mod['func_6823'] = func_6823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6823_call = mutated_mod.get_global_var('func_6823')
call_6824 = func_6823_call()
output = call_6824
func_6825 = relay.Function([], output)
mutated_mod['func_6825'] = func_6825
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6834 = relay.const(-2, dtype = "uint8")#candidate|6834|()|const|uint8
var_6835 = relay.var("var_6835", dtype = "uint8", shape = (9, 6, 15))#candidate|6835|(9, 6, 15)|var|uint8
bop_6836 = relay.bitwise_or(const_6834.astype('uint8'), var_6835.astype('uint8')) # shape=(9, 6, 15)
output = relay.Tuple([bop_6836,])
output2 = relay.Tuple([bop_6836,])
func_6854 = relay.Function([var_6835,], output)
mod['func_6854'] = func_6854
mod = relay.transform.InferType()(mod)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6855 = relay.var("var_6855", dtype = "uint8", shape = (9, 6, 15))#candidate|6855|(9, 6, 15)|var|uint8
func_6854_call = mutated_mod.get_global_var('func_6854')
call_6856 = func_6854_call(var_6855)
output = call_6856
func_6857 = relay.Function([var_6855], output)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_6878 = relay.TupleGetItem(func_2730_call(), 0)
call_6879 = relay.TupleGetItem(func_2732_call(), 0)
output = relay.Tuple([call_6878,])
output2 = relay.Tuple([call_6879,])
func_6880 = relay.Function([], output)
mod['func_6880'] = func_6880
mod = relay.transform.InferType()(mod)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6880_call = mutated_mod.get_global_var('func_6880')
call_6881 = func_6880_call()
output = call_6881
func_6882 = relay.Function([], output)
mutated_mod['func_6882'] = func_6882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5125_call = mod.get_global_var('func_5125')
func_5127_call = mutated_mod.get_global_var('func_5127')
call_6977 = relay.TupleGetItem(func_5125_call(), 0)
call_6978 = relay.TupleGetItem(func_5127_call(), 0)
output = call_6977
output2 = call_6978
func_7026 = relay.Function([], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
output = func_7026()
func_7027 = relay.Function([], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7028 = relay.const([[[2.253398,-7.853481,4.437780,1.008983,-4.703852,-9.127029,-5.327564,-5.893203,8.738356,-3.838918,-1.787199,-5.208259,-5.294489],[-9.755837,-2.901376,1.123267,-7.512293,8.545304,-1.842131,-7.499129,-0.057285,-6.870564,-4.698345,9.125466,5.838370,-9.023172],[-8.309824,9.881722,4.469838,3.846163,-2.927183,8.305062,-7.697341,-0.369491,4.127227,1.882870,-8.485839,-3.246352,-5.212316],[-4.581288,-2.969613,7.270332,3.960217,3.853767,-0.661039,-4.538752,4.647365,6.020985,-2.614977,-7.901972,-6.334504,6.911043],[3.823128,-6.506225,2.668277,9.153012,6.753350,5.030466,-4.183458,1.849623,7.030710,6.421159,-8.211391,-6.610499,-5.910786]],[[-9.028167,-8.772640,5.851914,-9.641471,9.189947,-7.617881,7.075514,8.165582,6.831798,3.610773,3.198563,-4.369004,8.252832],[5.273566,-2.965979,4.390844,1.048763,-6.637230,6.771706,-3.244196,6.641346,-3.679004,-2.904739,1.803163,3.946836,3.553005],[0.520958,7.554085,-3.589426,-5.686944,-4.409702,8.822782,0.246110,0.467752,-1.905300,3.195075,-6.877179,-3.257042,2.129444],[-6.369699,-7.150293,0.740345,-7.727263,0.330739,-2.998636,2.934051,8.973740,-4.777968,-2.112849,4.959091,8.716606,-9.837985],[-1.577460,-1.341482,-6.154593,-9.793048,-1.225590,-4.631299,-1.070864,3.054802,7.161654,-6.350434,-2.844118,9.817970,-1.532703]],[[3.344398,3.681187,7.079076,9.243599,-4.611115,8.378617,-9.200347,-8.080304,-3.381234,-1.358034,4.781139,-8.472710,-9.765386],[-4.238572,0.648815,2.021979,-2.731197,3.924329,-9.662803,-4.200658,-8.380183,-3.742786,4.825861,-2.517330,2.211209,-9.441221],[-7.407007,-8.152277,8.649034,5.451279,2.056377,0.631627,0.838853,-5.336427,8.085060,-3.363694,-6.569798,4.879215,-0.526910],[5.959482,-4.316957,-4.009477,-5.747449,-6.099760,-3.170615,-7.453929,-7.994680,1.604414,-7.024664,6.919931,-7.017836,-6.869364],[-6.174754,4.465115,7.546677,8.385184,-9.848793,-2.362311,-1.037769,-7.895431,-7.836487,1.312591,-9.697879,1.185905,-2.700543]],[[4.528982,-4.653005,1.680418,8.266574,6.033603,5.333456,-6.167471,3.106340,-6.534012,2.842453,-5.326640,4.021590,-9.561253],[-7.995173,4.241080,5.841964,-4.186273,-8.159918,-0.285326,-3.821641,-2.811534,-0.649217,5.994382,5.576391,-6.423607,-4.569551],[6.046388,-5.800211,3.655778,4.714201,7.252106,2.635315,-8.952487,3.863844,5.376073,9.791888,6.636953,5.537824,1.682158],[-2.441398,4.605899,-8.199599,-5.398633,1.875283,5.547843,-6.215002,5.433210,-2.114448,8.049778,-1.807451,1.880759,-2.717009],[-6.843178,0.326792,0.274107,8.894899,-0.146971,7.532163,-7.764240,4.841362,7.309824,-8.328097,4.980112,-2.443377,-3.966120]],[[-6.213396,-5.533778,-1.871692,-5.788479,-1.051694,1.946683,-5.602996,8.102898,-7.417931,-1.034516,-1.406536,-1.623630,-8.702950],[2.161153,-3.482458,-3.825217,-0.268395,-7.234236,1.269149,-4.552962,-4.697194,3.052491,-7.003259,-0.740651,-6.565991,-6.884629],[-0.073582,0.131645,-6.992989,3.673711,-5.838357,3.663172,6.303527,5.913042,-8.637458,-2.489735,7.851400,-8.244419,0.621417],[-5.766687,6.405534,-4.178161,5.715578,9.101132,-3.296869,9.037696,-3.485329,6.088669,-6.938364,-6.706294,0.730911,4.158959],[-9.431347,-1.263445,-4.319764,0.319504,8.808455,5.221736,2.612963,-2.880137,1.821530,-6.205989,1.201876,1.179717,-3.055397]],[[-5.369724,6.068873,-8.344518,1.298759,6.309312,2.936738,-3.724298,-2.977199,-3.264358,-2.505407,4.169830,-7.292536,0.910899],[-8.723924,5.943056,-3.771721,-0.362488,2.381034,2.314966,3.818431,-4.717026,5.597139,9.730154,-4.039820,5.598381,-5.240430],[-6.282671,-9.570110,-8.832310,2.469152,6.497919,-6.573276,2.265156,-2.535023,-0.802535,4.281306,-7.034338,3.885115,-5.889089],[2.934193,-3.098149,-0.935263,-3.260980,-6.456233,7.425558,-8.245664,2.690336,-9.451933,-7.917781,9.265444,-1.597620,9.237790],[0.529992,-4.771084,-4.111968,7.771690,-5.186756,-3.347775,-3.545211,6.777887,-0.005992,-5.863210,-4.662564,-9.758668,1.419975]],[[-5.700712,-2.205111,7.995547,-4.662821,5.138682,6.086252,-3.902727,-2.058991,5.262971,2.373649,2.087796,-6.861392,-2.419170],[-1.757308,-4.856419,-8.261700,-2.461093,-1.691762,9.110777,3.574935,-8.478115,0.726053,-1.255339,6.487372,1.193613,9.546286],[-1.706406,-8.932370,-7.621887,2.599048,2.543493,0.696341,-4.532323,4.390160,4.743415,-7.318435,3.982536,-4.361192,5.648938],[4.279936,-6.281068,3.591504,9.907891,4.868444,3.882873,-9.087077,4.893153,-6.010940,9.198544,9.022314,-2.594782,-8.239632],[0.678906,-5.405182,-3.688351,1.424734,-5.043833,9.448653,0.334242,7.064761,8.703557,9.802430,-6.307639,-4.633477,4.095815]],[[-2.263775,0.252567,2.721152,3.435931,-6.130468,-7.124798,-2.905589,-5.400962,-7.107172,9.823407,-3.825531,9.050131,1.794557],[2.565856,9.660734,7.228228,4.462523,0.668633,7.291691,-2.299668,-1.864508,-0.723318,7.432260,1.246160,-2.506287,2.975799],[3.147712,-0.424959,-8.895648,5.829447,-7.431356,8.981400,6.588696,-4.927237,1.579909,-9.931713,8.914290,1.777122,-4.438597],[-0.344428,6.289672,3.816556,-1.759352,9.432663,-2.407954,5.805623,0.562361,-5.903144,9.589765,0.683244,6.681588,-9.197749],[-4.151014,6.719384,-7.139964,5.225372,4.673778,6.595625,-3.249341,3.420080,7.162177,1.852550,2.607225,7.344616,9.890930]],[[-6.701278,5.366886,0.643461,-3.417929,-0.705749,4.894802,-5.588838,-1.762495,-4.354519,-4.313125,0.138669,-0.123571,-1.769381],[-9.108291,-8.568487,-6.810739,-1.551055,-0.991094,-1.193241,-3.987280,4.145791,-7.140083,8.209761,5.320377,-4.127260,4.459836],[2.191333,-7.300068,4.719477,-6.741469,-0.469308,-4.332541,-1.862338,3.162490,2.339176,5.609150,6.477220,-1.903601,-2.153104],[-8.347659,7.984787,9.339705,-4.118022,-5.488952,-3.812399,6.017717,-5.378633,-1.340232,-7.556208,7.576480,8.608879,8.449329],[-6.935128,8.269166,4.967061,5.580319,1.494140,-7.032169,1.179121,-4.896203,3.994539,-1.478369,5.808015,-7.184231,-7.543236]],[[-5.536630,-8.286040,-0.259120,9.671057,9.558113,-2.300718,-7.029911,5.469630,7.226123,6.737556,9.073970,8.693023,-7.639538],[-1.734045,1.254455,-7.337288,-5.298452,6.319334,-9.050290,3.546720,7.867275,-4.377259,6.507603,-3.373661,-1.420915,-3.481690],[-7.685577,-4.548608,9.723851,4.895840,0.144067,-6.800205,-6.280999,1.156678,-7.128079,5.851534,-4.619811,7.683423,7.026887],[-4.524074,-9.714041,5.276513,-6.940491,8.024580,-4.298595,-5.440677,7.477977,-2.562549,-8.046258,-1.142508,-4.836583,3.535806],[4.638657,-8.662400,-0.242665,6.098666,-9.621878,-4.277403,-8.716636,-5.163723,-2.591535,-2.857178,3.658797,-1.334741,-6.900333]],[[-9.570038,-1.050198,8.357404,5.538567,-5.009573,-1.696900,-3.059818,4.119214,-6.287739,-6.195472,-6.849215,1.720945,-5.725967],[6.950257,1.071216,1.476592,-6.990534,3.508244,-7.742413,-2.670517,-7.999336,-8.338513,4.192810,9.729311,8.874886,-9.458813],[1.734161,-7.202402,-2.197841,-7.025620,-9.273187,1.169266,8.295724,-7.868124,0.270381,-6.352512,-5.172783,-7.371362,-2.592708],[9.270292,-5.967756,-8.369559,4.516936,1.750014,-6.543110,3.885115,-8.386420,-2.429082,3.054313,2.732661,2.726647,4.604149],[-1.748117,2.854593,6.285787,-0.332723,-2.035536,7.624307,5.614460,9.461118,-8.203806,-7.955302,1.091572,-6.889127,-1.594986]]], dtype = "float64")#candidate|7028|(11, 5, 13)|const|float64
uop_7029 = relay.asinh(const_7028.astype('float64')) # shape=(11, 5, 13)
output = uop_7029
output2 = uop_7029
func_7037 = relay.Function([], output)
mod['func_7037'] = func_7037
mod = relay.transform.InferType()(mod)
mutated_mod['func_7037'] = func_7037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7037_call = mutated_mod.get_global_var('func_7037')
call_7038 = func_7037_call()
output = call_7038
func_7039 = relay.Function([], output)
mutated_mod['func_7039'] = func_7039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4560_call = mod.get_global_var('func_4560')
func_4561_call = mutated_mod.get_global_var('func_4561')
call_7130 = func_4560_call()
call_7131 = func_4560_call()
output = call_7130
output2 = call_7131
func_7134 = relay.Function([], output)
mod['func_7134'] = func_7134
mod = relay.transform.InferType()(mod)
output = func_7134()
func_7135 = relay.Function([], output)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3736_call = mod.get_global_var('func_3736')
func_3738_call = mutated_mod.get_global_var('func_3738')
call_7147 = relay.TupleGetItem(func_3736_call(), 0)
call_7148 = relay.TupleGetItem(func_3738_call(), 0)
output = call_7147
output2 = call_7148
func_7149 = relay.Function([], output)
mod['func_7149'] = func_7149
mod = relay.transform.InferType()(mod)
mutated_mod['func_7149'] = func_7149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7149_call = mutated_mod.get_global_var('func_7149')
call_7150 = func_7149_call()
output = call_7150
func_7151 = relay.Function([], output)
mutated_mod['func_7151'] = func_7151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2709_call = mod.get_global_var('func_2709')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_7165 = func_2709_call()
call_7166 = func_2709_call()
output = relay.Tuple([call_7165,])
output2 = relay.Tuple([call_7166,])
func_7171 = relay.Function([], output)
mod['func_7171'] = func_7171
mod = relay.transform.InferType()(mod)
mutated_mod['func_7171'] = func_7171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7171_call = mutated_mod.get_global_var('func_7171')
call_7172 = func_7171_call()
output = call_7172
func_7173 = relay.Function([], output)
mutated_mod['func_7173'] = func_7173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mod.get_global_var('func_4985')
func_4987_call = mutated_mod.get_global_var('func_4987')
call_7180 = func_4985_call()
call_7181 = func_4985_call()
func_4350_call = mod.get_global_var('func_4350')
func_4351_call = mutated_mod.get_global_var('func_4351')
call_7205 = relay.TupleGetItem(func_4350_call(), 0)
call_7206 = relay.TupleGetItem(func_4351_call(), 0)
const_7207 = relay.const([7.726097,8.925180,6.303856,0.784442,8.073157,5.623678,8.958961,1.842346,1.016598,-5.234200,-3.313348,4.181952,-3.588194,4.746085,-5.323583,-0.468216,-3.904568,0.834539,-0.568624,7.663158,3.215181,2.953251,-7.993203,2.032094,7.037790,8.480683,-4.857846,-4.195688,-9.645706,-5.440165,-2.769814,-0.952451,-2.710309,-8.031803,-2.858219,-8.091673,4.316305,-2.237599,7.637058,9.883087,3.156732,-8.044398,2.569226,-4.129843,8.827294,-1.059516,-1.986527,-9.601586,-0.827290,6.894374,-2.595101,-0.084688,-4.433845,-2.905034,-4.099516,-5.453453,-0.252848,-3.661380,3.058955,0.067726,9.974405,-0.191671,-5.101183,-0.184555,-5.966427,9.236383,8.007000,-8.705384,-3.544973,5.847443,-4.682976,0.196370,7.230548,-2.161414,-0.953466,9.730268,9.835609,9.609990,-6.879580,7.599957,-1.866092,5.806819,-2.574569,1.041745,-5.061913,-7.698266,-1.377784,-2.847797,7.700963,-0.365393,-6.377644,6.207130,8.094843,-2.584868,-6.213930,-8.174035,-3.969103,-5.861940,2.553495,-6.064041,6.205661,-5.972384,-4.123527,4.499113,9.969399,8.902321,4.289660,-8.609280,-7.817690,-1.483836,-7.794125,6.015084,-3.245312,2.602917,3.696756,-2.341194,-0.501250,-8.140318,6.000534,-6.015214,9.353277,-7.601759,-8.125473,1.098551,8.391223,5.436919,3.170737,8.017403,4.798765,8.171893,-8.296477,5.238833,6.716692,3.592260,6.470251,7.822782,5.638771,4.700176,-7.476361,-4.224860,-2.515819,5.171360,-2.233700,1.948428,-4.481727,-5.150718,-4.508221,5.572924,7.311681,-9.005282,5.742937,9.064347,-7.907891,-5.028417,-6.593708,-6.155734,5.053890,-4.642618,-2.542399,2.245916,-8.140960,4.785271,4.872323,-5.819007,7.102119,9.261098,8.395432,-9.295689,0.283851,-4.886132,6.199979,-2.429665,5.631584,3.907113,-5.774403,-8.851113,-6.071052,-7.241988,-0.517795,4.849766,9.289309,-9.255235,1.034725,-5.144970,-2.502872,-4.492438,-2.748328,-8.332169,1.097303,5.153454,-3.906669,7.887215,-2.343682,-7.862391,-1.198457,-8.388372,-9.886720,-9.499111,9.136591,-0.829198,-3.606300,-2.072911,2.158924,-8.322276,-7.005431,-3.218618,3.998876,1.455620,0.678153,-6.139508,0.850674,-3.475070,-5.509941,-6.744772,6.623880,9.759893,1.012756,-5.517040,-5.784818,-2.664043,6.924674,0.718634,-1.123651,-6.813762,-7.357710,8.375614,5.751998,2.089250,8.366649,-9.555120,-8.862189,-2.767261,5.452650,-9.249445,4.087607,-0.513259,9.617834,4.597848,-8.523338,-5.155631,-3.714431,2.243007,7.169169,5.039132,-1.465057,8.497783,1.408221,-7.019379,6.275219,-3.181456,6.860611,9.049516,-9.799731,-4.723057,-6.461424,2.490873,5.483813,-7.360608,0.213586,9.100448,3.604096,-9.939896,-3.807800,9.791854,7.888672,-0.399101,-6.997307,-2.245066,-2.555105,-4.917925,8.003066,3.161804,-0.725354,0.039379,-4.185495,6.636827,0.498355,-6.856357,-1.732026,6.632296,-5.763220,3.481182,7.244026,0.025105,-5.131924,-2.243441,-2.851957,-4.649336,-7.926000,-1.408120,-9.249602,-5.369946,-3.696644,5.095413,1.125101,-8.341977,-5.367005,-7.366505,9.452150,3.577919,9.145141,7.538042,-0.025398,-2.160062,3.860378,5.001829,-9.898851,-1.974159,-3.134660,-4.913116,-0.393949,6.066435,-9.533503,2.423367,-5.822954,5.283615,-2.795458,8.539339,3.948603,8.066199,-9.451109,-6.739040,2.133889,1.559253,5.943393,7.078979,9.057990,-9.298206,-5.841119,7.315790,3.281818,0.161273,-1.643717,-1.611042,-8.190242,-4.323333,-9.396358,-5.947080,4.223610,0.321258,0.035018,0.127398,-2.781591,-7.626223,9.025306,0.721337,-6.447764,-6.826037,6.871517,-7.869418,2.347477,-9.134824,-7.712627,5.150168,0.710174,-2.357926,4.134975,2.386246,5.057896,-0.008042,0.140104,5.249476,-4.194551,-2.851949,-3.445308,-5.804951,-8.463010,7.864806,3.239770,-5.461060,-1.233640,1.947667,-2.593922,4.850638,-7.601621,-1.102362,0.943506,2.908643,-8.384407,1.750242,7.311024,-7.197742,-6.420664,-3.709934,-9.466462,-2.250784,6.747545,-0.820433,-4.527374,6.095582,7.305433,1.803595,-0.722193,6.964376,-6.511432,3.553061,-1.890695,2.689702,-2.560177,-8.610585,4.151519,7.276310,-6.451970,-4.215992,9.220836,0.624997,-6.310285,0.977409,0.485909,9.751274,6.363051,6.370745,-4.242061,-3.303613,-2.833569,8.993757,-5.953548,-2.398805,-3.443320,6.839552,3.014289,-6.998364,3.961112,-3.411909,-5.535317,8.961979,-9.809159,8.003321,6.875850,5.004074,-5.576181,2.618261,2.742500,2.139307,6.831700,9.819510,3.095343,-9.681311,8.264954,-8.463013,-6.616828,0.309888,-0.585648,9.646733,6.928244,-7.909422,0.524296,-6.526206,9.047068,-5.956319,-3.625315,6.373713,3.013795,3.146458,-6.604573,8.268247,4.453822,-8.809244,9.808695,9.370867,-5.591607,4.371628,-0.416942,1.185889,2.293619,-2.393592,3.970347,-9.606128,6.199026,-5.092167,5.945159,-1.196222,-4.360206,-5.530364,-4.737225,-8.837706,5.668660,-2.736784,8.832213,-1.352087,9.759430,6.116098,-4.185769,6.985732,8.126687,-1.654917,9.774768,1.217871,2.624488,-3.468480,5.813319,-9.160366,-3.020488,-8.047359,-7.428515,-0.753256,7.967719,3.396430,9.614423,4.629338,-5.141265,1.272708,-6.764597,2.305124,5.899061,9.577184,7.837167,7.481716,-6.111179,5.453801,-7.910626,-5.934250,6.080375,-3.540262,5.528252,7.931146,7.306455,1.405005,4.491165,5.769095,-3.387508,-7.246487,-1.607845,7.095330,8.550035,-8.377487,2.152783,-5.087517,-4.253312,2.097976,-9.387649,8.968068,-3.738767,-9.225721,3.326392,-9.221348,-6.116156,0.669399,-3.066582,-1.121414,-3.669042,-0.232105,0.077963,-2.850132,6.976702,3.003317,0.518714,6.986370,-5.960086,5.067075,3.488897,9.515533,-0.087690,-5.999834,-1.766708,5.558440,3.844199,-2.730391,-1.736289,-1.283898,-9.501426,1.402033,-7.879587,2.329085,-7.205515,1.141549,-1.362667,-9.266926,1.702811,-6.237065,2.846688,-4.096838,1.405227,5.630846,-2.376487,1.806123,-6.032978,-7.841103,9.704134,6.151526,-1.882639,6.028011,2.838865,-1.991453,-5.100037,-1.496023,-7.677195,8.130980,4.501546,4.367072,-7.685557,8.847805,7.040552,-9.425762,1.093568,7.994933,-8.172347,4.005239,-7.540501,-0.464445,-6.888236,-7.734192,-2.962103,-6.390987,-9.041975,1.031869,-9.994871,0.815325,-4.912081,-0.652176,6.847711,4.663188,-0.959682,-4.294703,-1.417536,8.025376,2.664608,7.520524,5.199860,-0.386665,4.986993,9.127868,-7.319355,-3.422348,-7.474591,-6.871900,-9.127940,0.514584,-1.023020,2.873224,-1.356199,7.227498,-7.136491,9.880628,-6.769762,6.033057,5.469885,4.137177,-9.019068,-5.636552], dtype = "float32")#candidate|7207|(640,)|const|float32
bop_7208 = relay.logical_xor(call_7180.astype('uint8'), relay.reshape(const_7207.astype('uint8'), relay.shape_of(call_7180))) # shape=(640,)
bop_7211 = relay.logical_xor(call_7181.astype('uint8'), relay.reshape(const_7207.astype('uint8'), relay.shape_of(call_7181))) # shape=(640,)
func_6471_call = mod.get_global_var('func_6471')
func_6472_call = mutated_mod.get_global_var('func_6472')
call_7212 = relay.TupleGetItem(func_6471_call(), 0)
call_7213 = relay.TupleGetItem(func_6472_call(), 0)
func_3736_call = mod.get_global_var('func_3736')
func_3738_call = mutated_mod.get_global_var('func_3738')
call_7222 = relay.TupleGetItem(func_3736_call(), 3)
call_7223 = relay.TupleGetItem(func_3738_call(), 3)
output = relay.Tuple([call_7205,bop_7208,call_7212,call_7222,])
output2 = relay.Tuple([call_7206,bop_7211,call_7213,call_7223,])
func_7237 = relay.Function([], output)
mod['func_7237'] = func_7237
mod = relay.transform.InferType()(mod)
mutated_mod['func_7237'] = func_7237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7237_call = mutated_mod.get_global_var('func_7237')
call_7238 = func_7237_call()
output = call_7238
func_7239 = relay.Function([], output)
mutated_mod['func_7239'] = func_7239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mod.get_global_var('func_1315')
func_1316_call = mutated_mod.get_global_var('func_1316')
call_7340 = relay.TupleGetItem(func_1315_call(), 0)
call_7341 = relay.TupleGetItem(func_1316_call(), 0)
uop_7353 = relay.tan(call_7340.astype('float64')) # shape=(4, 13, 13)
uop_7355 = relay.tan(call_7341.astype('float64')) # shape=(4, 13, 13)
output = relay.Tuple([uop_7353,])
output2 = relay.Tuple([uop_7355,])
func_7365 = relay.Function([], output)
mod['func_7365'] = func_7365
mod = relay.transform.InferType()(mod)
output = func_7365()
func_7366 = relay.Function([], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4672_call = mod.get_global_var('func_4672')
func_4674_call = mutated_mod.get_global_var('func_4674')
call_7438 = func_4672_call()
call_7439 = func_4672_call()
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
const_7465 = relay.const([[7],[-4],[6],[8],[-3],[1],[-3],[5],[6],[-2],[-8],[1],[2],[7],[9],[-2],[5],[-1],[3],[-9],[8],[2],[-6],[7],[2],[7],[2],[3],[-3],[-7],[-6],[-9],[4],[9],[9],[6],[7],[9],[2],[7],[9],[-4],[-1],[-4],[-9],[-5],[9],[5],[-5],[-1],[-4],[4],[-4],[7],[10],[1],[-8],[-10],[-4],[-3],[7],[-10],[-5],[-10],[-9],[5],[-9],[-5],[1],[-2],[-7],[-10],[-8],[6],[-5],[8],[1],[10],[3],[4],[-2],[-7],[7],[5],[-5],[-9],[-10],[9],[-9],[1],[-6],[-8],[7],[10],[-8],[5],[-3],[-3],[4],[8],[-5],[-4],[-6],[-4],[-10],[3],[-5],[2],[10],[3],[-8],[10],[-1],[-4],[2],[-6],[1],[-3],[-7],[-5],[3],[-4],[10],[-2],[9],[10],[4],[-1],[-2],[-1],[8],[-1],[-9],[5],[-3],[-4],[8],[-7],[-1],[-9],[-4],[8],[-1],[-4],[5],[-9],[-5],[10],[-7],[2],[5],[6],[-4],[-2],[-2],[7],[-3],[6],[5],[7],[9],[1],[-8],[-10],[7],[-5],[-9],[-6],[6],[8],[-2],[-5],[-10],[-9],[3],[5],[3],[8],[8],[-8],[-9],[7],[-6],[1],[-4],[9],[3],[-1],[5],[8],[-9],[3],[-10],[5],[6],[-10],[8],[5],[10],[-5],[4],[-10],[-10],[-8],[2],[-4],[-10],[5],[8],[7],[-3],[1],[4],[-5],[-1],[-9],[-6],[9],[-2],[8],[6],[5],[1],[-7],[9],[-4],[-1],[-4],[-10],[-9],[9],[5],[-7],[-9],[5],[4],[-3],[7],[-10],[4],[-8],[-2],[3],[4],[-6],[6],[1],[3],[10],[-8],[3],[-6],[1],[-4],[-8],[2],[7],[7],[-1],[5],[3],[7],[5],[-1],[-5],[-7],[1],[7],[-7],[-4],[-9],[4],[-10],[8],[-1],[-3],[4],[-8],[1],[3],[-8],[-6],[-6],[-4],[-4],[-9],[-5],[-3],[-4],[-10],[-5],[9],[4],[-10],[7],[-3],[-4],[6],[2],[4],[-10],[-2],[-7],[-4],[5],[-8],[-7],[-2],[6],[-8],[-3],[-10],[7],[-8],[7],[6],[-4],[2],[3],[-2],[10],[-1],[-9],[-9],[-2],[8],[7],[-4],[-3],[5],[6],[-5],[2],[-4],[5],[-5],[8],[-1],[-8],[-1],[-7],[-6],[6],[-9],[6],[-7],[7],[-7],[-3],[-4],[-8],[1],[-5],[-4],[3],[1],[-6],[-4],[-1],[-9],[9],[9],[2],[-5],[-6],[-3],[-9],[2],[-7],[5],[4],[1],[5],[2],[10],[-2],[9],[-7],[7],[6],[-2],[-10],[5],[5],[10],[3],[-7],[8],[2],[9],[1],[-3],[3],[1],[-3],[-7],[-8],[-7],[1],[-5],[1],[-9],[-4],[2],[4],[8],[-1],[6],[-10],[-7],[-6],[9],[1],[4],[-6],[-5],[9],[-7],[8],[7],[-9],[9],[-7],[-7],[2],[1],[8],[9],[-5],[-1],[4],[-10],[-9],[-3],[4],[-1],[8],[-4],[-5],[-5],[3],[-4],[-5],[-10],[7],[-3],[-9],[-5],[-8],[7],[10],[-5],[-10],[-7],[-8],[-1],[-8],[3],[9],[6],[-9],[7],[2],[8],[2],[-1],[5],[-3],[5],[-1],[2],[-5],[8],[-6],[3],[3],[2],[10],[3],[1],[-5],[-8],[-8],[-7],[-2],[-5],[4],[-7],[-10],[-9],[6],[5],[-3],[-2],[-2],[2],[7],[10],[-2],[10],[7],[8],[-7],[-2],[-7],[-10],[-5],[1],[-9],[-4],[5],[-10],[5],[-8],[7],[9],[-3],[-3],[-2],[-7],[-8],[-10],[-1],[10],[-3],[3],[-10],[10],[3],[2],[-6],[-1],[-10],[1],[-9],[-10],[7],[-7],[10],[-8],[-2],[1],[-4],[-9],[1],[-6],[-6],[9],[-1],[-9],[1],[5],[-1],[6],[-2],[6],[-7],[-9],[-10],[-9],[-2],[9],[2],[-8],[-8],[-1],[-8],[5],[-1],[-1],[-5],[-8],[-6],[3],[-5],[-8],[-7],[-9],[-6],[-10],[-3],[1],[9],[1],[9],[4],[2],[6],[1],[5],[-2],[-5],[3],[8],[10],[-2],[-8],[6],[-3],[9],[10],[-5],[5],[10],[1],[-4],[-10],[1],[-2],[1],[-6],[-6],[-9],[4],[-9],[3],[-4],[10],[10],[-7],[-5],[3],[9],[-9],[3],[-4],[-4],[-5],[-3],[7],[10],[9],[-8],[7],[-1],[8],[-5],[-3],[7],[7],[5],[-10],[2],[-4],[-4],[4],[8],[-2],[-4],[-4],[-5],[-3],[7],[7],[2],[-5],[5],[-6],[3],[-3],[10],[3],[-3],[-6],[-5],[-4],[-7],[3],[6],[8],[-3],[-5],[-10],[-7],[-2],[10],[-8],[-1],[1],[9],[-10],[-8],[-1],[10],[10],[5],[1],[-4],[-2],[2],[3],[-5],[-8],[-3],[-4],[6],[-5],[-2],[3],[6],[-10],[-7],[-3],[-9],[-3],[-9],[6],[7],[-2],[4],[-3],[1],[-3],[6],[5],[-1],[5],[7],[8],[4],[-9],[-8],[-9],[-1],[-7],[7],[5],[10],[1],[6],[-10],[-4],[-5],[-2],[6],[-8],[9],[2],[-3],[8],[-5],[-2],[3],[10],[9],[-3],[-3],[3],[-5],[-4],[-1],[6],[8],[-7],[-10],[-3],[-2],[-7],[10],[-2],[-3],[8],[-1],[5],[6],[-6],[2],[8],[-1],[-3],[1],[-8],[-2],[9],[-2],[2],[5],[3],[-3],[-1],[10],[7],[-1],[-3],[9],[5],[-3],[-5],[8],[8],[-5],[7],[-10],[-6],[-1],[-1],[6],[4],[-2],[-10],[-5],[1],[8],[5],[-1],[5],[-3],[8],[3],[6],[2],[-4],[5],[6],[6],[-10],[-2],[1],[8],[7],[-8],[7],[-7],[5],[-10],[-3],[-8],[1],[-4],[5],[-4],[3],[6],[8],[-1],[-5],[-7],[2],[-7],[3]], dtype = "uint64")#candidate|7465|(840, 1)|const|uint64
call_7464 = relay.TupleGetItem(func_5276_call(relay.reshape(const_7465.astype('uint64'), [840,])), 1)
call_7466 = relay.TupleGetItem(func_5278_call(relay.reshape(const_7465.astype('uint64'), [840,])), 1)
uop_7476 = relay.cosh(const_7465.astype('float32')) # shape=(840, 1)
bop_7480 = relay.multiply(uop_7476.astype('uint8'), relay.reshape(const_7465.astype('uint8'), relay.shape_of(uop_7476))) # shape=(840, 1)
func_5006_call = mod.get_global_var('func_5006')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_7489 = relay.TupleGetItem(func_5006_call(), 1)
call_7490 = relay.TupleGetItem(func_5007_call(), 1)
func_5399_call = mod.get_global_var('func_5399')
func_5403_call = mutated_mod.get_global_var('func_5403')
const_7493 = relay.const([6.229020,7.817178,5.961641,-8.062963,-2.500586,4.212451,9.161665,5.353506,-6.513603,-6.564511,8.998001,-5.666580,1.084476,-7.932835,7.364333,2.343404,-8.393480,-0.971907,-0.480479,-0.111302,-5.524441,4.065428,-3.702840,-8.612314,-9.390695,-7.517900,7.209685,0.017777,-1.892974,4.821253,8.143658,-3.673735,2.575863,0.443683,7.610633,5.226134,5.704587,-1.159728,0.227200,-5.840941,1.159250,-6.063724,-6.749539,1.457127,1.865470,-7.273311,2.553356,-6.913815,6.274470,-3.988245,2.209888,1.606523,-9.392548,-0.615190,-6.520122,-2.190930,8.204638,-7.938148,-4.716662,-9.845894,-4.366969,-3.919126,-7.683049,5.993448,-6.602129,-7.541004,1.642793,-5.636525,8.038429,3.193856,-8.559920,-4.841500,-3.652428,1.300142,-5.225375,-0.817113,-1.397054,6.040671,-0.705518,-2.375898,-4.608301,-2.320873,-5.906473,-9.382689,-7.146328,-7.360913,2.603170,-1.002903,2.736478,-4.172646,-7.631526,8.966681,-7.984019,3.666954,5.263452,3.635739,-2.995982,9.841004,1.544048,6.938123,0.946579,-0.932097,-0.131741,8.133398,-2.668952,6.445102,-6.642213,6.951777,7.630706,7.723050,-9.566632,6.841734,5.377272,-7.677486,-3.386769,-4.639496,6.264073,-7.847276,1.396481,2.383005,0.514311,-3.896147,7.684721,-7.027556,-4.006367,3.951893,1.379793,-7.759790,8.212329,6.764327,-8.898820,-8.473200,-9.575301,9.985181,-0.253066,4.557160,3.784931,3.270220,4.577171,-4.830226,-9.433097,-9.533219,-2.411193,-4.805641,1.574508,4.150421,1.517613,3.509588,-9.010627,4.218145,-9.371000,-1.991616,2.384973,-7.707186,-3.038271,-4.786178,1.929192,-0.270087,7.969499,8.768237,-3.475583,-1.317201,-8.892357,1.637164,-9.424810,5.515987,7.210406,0.622837,-4.881860,6.962093,-6.198985,0.485169,-7.079182,8.356717,-6.918676,0.259699,4.709414,-6.071138,3.121145,-6.879110,-0.352223,-4.950004,8.684418,-3.422154,-8.763136,-8.475806,-4.958295,-6.893626,4.741468,-4.399958,-3.396679,-7.163590,-8.791661,-4.917508,-6.831183,2.802907,-9.969271,-1.846391,4.859981,7.901165,-9.923170,-5.291317,8.879345,-0.395305,-1.422111,-8.300955,-1.098663,-2.437256,6.381629,-2.759317,0.827070,0.053290,-4.343743,-3.415623,-9.019800,6.335133,2.946627,4.868868,-8.560249,-1.567727,9.471116,5.730607,0.085736,-1.565843,-7.773796,1.560909,-0.527036,-6.094580,-8.085645,0.367533,-0.080572,-6.701650,-2.244450,5.933317,0.039953,-1.470770,-0.264781,-8.601015,2.768675,6.878833,0.402683,-8.788077,1.949894,-8.803880,6.735156,-3.768682,-6.449771,5.819177,1.425318,4.877122,-2.187746,7.954293,-6.983107,9.209683,-1.677516,4.552020,8.610922,9.064109,-8.250565,-4.706340,1.836985,-4.185053,1.958242,4.197602,-6.186962,5.186036,-3.192485,6.020009,-6.031964,-9.977355,8.512705,8.280614,2.059868,4.040370,-0.402504,3.432643,2.721207,-9.926609,-0.056668,3.799325,-6.166393,8.280483,4.647045,1.293522,4.330336,-1.231238,-6.115031,9.577451,-5.071663,8.745860,3.486822,5.095851,-4.395503,7.158760,0.221671,0.916506,-5.857912,-9.454272,-4.210007,5.418199,4.886568,-3.941852,7.654107,-0.482885,5.267372,5.789907,-0.198589,1.509936,-9.513870,9.956138,7.667067,8.494494,-9.671218,7.195452,-7.941964,-4.930394,-0.444195,6.394792,2.473445,8.985520,7.677271,3.034975,8.003866,1.166703,9.803161,6.407831,9.676138,-6.977022,-9.223583,-1.738359,3.625914,2.105741,-5.374444,1.954700,-6.311000,-0.777262,2.239822,5.093744,-6.874907,-2.925719,-4.928698,-4.487154,7.502110,1.499494,-7.458926,-0.557307,-8.079967,9.250154,-0.104228,-9.621776,1.303196,-7.801833,-7.928651,-8.076596,-4.101964,9.198454,-3.129531,0.659656,-6.371403,-1.070827,-7.282419,-0.024931,-0.853453,2.171714,7.744803,9.468588,-8.023214,7.122532,8.372553,5.059555,1.742411,-7.430877,-6.547351,1.634918,-6.302760,8.277989,-2.951178,-5.332724,5.098241,2.981668,8.828776,-9.320204,-9.437495,9.484631,5.677545,-5.718699,1.917235,-5.238783,-3.425852,-2.106293,1.429139,0.129811,-1.728528,-1.703494,-8.891855,-2.528901,-0.072969,9.407874,-1.367569,0.104135,-7.035279,-5.218377,-3.607980,1.660906,-6.990273,-2.391765,-7.402963,8.720083,8.744030,-0.036900,9.313937,3.779413,5.588016,6.582558,3.857561,0.605856,-1.812176,9.552131,9.990142,9.369438,8.584341,3.072406,4.734521,-4.498272,1.670104,-0.129934,5.670429,-2.490467,6.071737,-2.914149,-9.225711,-5.053015,-7.599821,-6.725689,-9.831135,8.536729,3.039519,3.935796,-9.885579,7.724971,0.158156,-3.563588,4.181241,7.378228,-2.293470,-1.822815,-2.303969,7.250798,-9.898321,-7.391420,3.847479,-6.895239,-3.178633,-6.705600,6.827504,-0.215709,5.774807,3.725041,-4.879028,6.205590,1.419713,6.627198,-3.499544,-7.982993,-1.458261,-0.012691,-1.483453,-7.779060,-9.355108,7.817863,-0.326107,-9.429200,1.799854,5.912155,3.029882,-8.184161,-9.435643,-7.517866,8.865053,5.810673,0.766315,6.563853,4.715984,-4.611654,-1.941503,5.106203,-8.836306,6.734226,-5.457035,1.818517,1.412459,-5.030790,5.815905,1.236758,3.412249,9.029745,-9.487352,-6.573896,-2.817640,4.216508,3.330435,-6.534909,8.261000,2.543625,-7.222250,8.072526,-2.697494,1.923575,-1.238599,-9.480342,5.484824,-0.423911,1.972952,4.177931,9.729447,-9.375626,-7.136324,-4.161265,-2.400684,8.124897,-2.709038,9.505894,-9.202447,5.335287,6.535288,-5.166798,6.581538,-6.392154,6.754591,-1.657263,-4.639005,7.032952,7.778839,-8.477210,2.965787,-2.032591,-7.673916,2.269089,-5.562041,0.751335,-0.310838,9.684557,-6.256714,-0.562397,7.795982,6.596243,-9.195686,-5.558278,-4.539024,9.648323,-8.577028,-1.287438,0.656276,3.085414,-6.130851,1.411252,-1.784468,-9.599465,-1.189838,3.788913,3.152902,-7.688283,8.787093,-1.322686,4.554513,-4.604067,8.725993,8.511984,-1.531318,5.186855,0.549004,8.208258,7.601683,6.357510,7.159623,9.395284,1.071412,-9.126174,4.142995,-6.556106,-6.158402,-9.337482,1.775974,7.793934,3.911669,-1.807482,3.441665,-9.880485,1.802769,7.168457,-7.445173,-4.583865,-7.812617,7.339504,1.349293,-6.957063,-4.606824,4.358094,-6.777186,1.506373,9.865274,9.881480,5.835564,4.961173,0.232239,8.836785,-1.265051,7.776792,-8.981892,-1.140378,-9.792880,-1.456243,2.166076,3.209072,-0.588656,3.670688,-8.970054,-3.487052,8.962618,1.444318,-5.919739,-0.833410,-2.511358,9.756123,-8.268941,-8.312168,5.317808,7.202068,-9.199110,-1.585129,4.576463,8.781845,-7.222152,-4.340260,5.246766,-8.380317,-8.712535,-9.473528,-2.621230,-6.137553,7.912696,-4.203476,7.069246,-3.367899,-6.519305,-9.304161,-2.083746,3.925721,3.286110,-1.490004,1.856331,8.409751,-6.867596,-0.708167,4.857909,1.146259,3.134153,1.051941,-5.347254,7.304078,6.260265,-1.519918,0.223196,-2.937739,3.691992,3.098049,-0.029679,6.813626,9.622067,1.846298,-3.562055,0.436580,-5.372701,-7.381062,-4.981762,3.738854,1.597531,-3.715476,-2.239527,3.315040,1.446382,-4.526995,5.011758,-5.017201,-7.100631,-3.979791,9.190406,-5.797030,-6.151573,-4.713579,-6.575184,-9.749657,6.505570,-2.993567,-0.473084,-6.081706,1.186125,4.972681,-7.664091,0.539231,6.983656,3.830356,5.920617,7.911096,-7.523051,5.786348,3.320078,-5.386218,-9.814007,-3.487068,-5.178319,-0.590746,-3.473110,5.720812,-7.536360,2.128516,-0.753124,-3.670466,-4.496130,5.878719,1.206804,-8.214599,7.880155,8.090315,7.188486,-3.172015,-2.304911,2.667160,-3.776357,6.924641,8.259881,-6.878368,7.333495,-1.220799,-2.410593,-8.949251,-1.965418,9.986271,6.185984,6.408489,-7.443308,6.808766,-8.326996,6.347423,2.597449,0.167936,2.520704,-7.801989,-0.548006,1.050814,-7.886274,-9.637921,-6.375029,-7.413500,0.592127,-8.573029,9.104967,-4.040615,5.786036,-4.841269,8.842241,2.593320,-1.375615,2.397760,-1.093879,0.220992,8.381385,6.075540,2.324076,4.836355,3.442349,5.936993,1.510394,0.409598,3.538447,6.212446,0.067551,-1.163912,-8.020505,7.870706], dtype = "float64")#candidate|7493|(780,)|const|float64
call_7492 = relay.TupleGetItem(func_5399_call(relay.reshape(const_7493.astype('float64'), [10, 6, 13]), relay.reshape(const_7493.astype('bool'), [10, 6, 13]), ), 0)
call_7494 = relay.TupleGetItem(func_5403_call(relay.reshape(const_7493.astype('float64'), [10, 6, 13]), relay.reshape(const_7493.astype('bool'), [10, 6, 13]), ), 0)
bop_7495 = relay.less_equal(const_7493.astype('bool'), uop_7476.astype('bool')) # shape=(840, 780)
uop_7504 = relay.exp(uop_7476.astype('float32')) # shape=(840, 1)
uop_7510 = relay.sqrt(bop_7480.astype('float32')) # shape=(840, 1)
output = relay.Tuple([call_7438,call_7464,call_7489,call_7492,bop_7495,uop_7504,uop_7510,])
output2 = relay.Tuple([call_7439,call_7466,call_7490,call_7494,bop_7495,uop_7504,uop_7510,])
func_7519 = relay.Function([], output)
mod['func_7519'] = func_7519
mod = relay.transform.InferType()(mod)
mutated_mod['func_7519'] = func_7519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7519_call = mutated_mod.get_global_var('func_7519')
call_7520 = func_7519_call()
output = call_7520
func_7521 = relay.Function([], output)
mutated_mod['func_7521'] = func_7521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6323_call = mod.get_global_var('func_6323')
func_6324_call = mutated_mod.get_global_var('func_6324')
call_7550 = relay.TupleGetItem(func_6323_call(), 0)
call_7551 = relay.TupleGetItem(func_6324_call(), 0)
func_5006_call = mod.get_global_var('func_5006')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_7572 = relay.TupleGetItem(func_5006_call(), 2)
call_7573 = relay.TupleGetItem(func_5007_call(), 2)
uop_7574 = relay.asinh(call_7550.astype('float64')) # shape=(4, 13, 13)
uop_7576 = relay.asinh(call_7551.astype('float64')) # shape=(4, 13, 13)
func_4985_call = mod.get_global_var('func_4985')
func_4987_call = mutated_mod.get_global_var('func_4987')
call_7584 = func_4985_call()
call_7585 = func_4985_call()
output = relay.Tuple([call_7572,uop_7574,call_7584,])
output2 = relay.Tuple([call_7573,uop_7576,call_7585,])
func_7609 = relay.Function([], output)
mod['func_7609'] = func_7609
mod = relay.transform.InferType()(mod)
output = func_7609()
func_7610 = relay.Function([], output)
mutated_mod['func_7610'] = func_7610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7636 = relay.var("var_7636", dtype = "int64", shape = (4, 6, 4))#candidate|7636|(4, 6, 4)|var|int64
var_7637 = relay.var("var_7637", dtype = "int64", shape = (4, 6, 4))#candidate|7637|(4, 6, 4)|var|int64
bop_7638 = relay.multiply(var_7636.astype('int64'), relay.reshape(var_7637.astype('int64'), relay.shape_of(var_7636))) # shape=(4, 6, 4)
output = bop_7638
output2 = bop_7638
func_7644 = relay.Function([var_7636,var_7637,], output)
mod['func_7644'] = func_7644
mod = relay.transform.InferType()(mod)
mutated_mod['func_7644'] = func_7644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7644_call = mutated_mod.get_global_var('func_7644')
var_7646 = relay.var("var_7646", dtype = "int64", shape = (4, 6, 4))#candidate|7646|(4, 6, 4)|var|int64
var_7647 = relay.var("var_7647", dtype = "int64", shape = (4, 6, 4))#candidate|7647|(4, 6, 4)|var|int64
call_7645 = func_7644_call(var_7646,var_7647,)
output = call_7645
func_7648 = relay.Function([var_7646,var_7647,], output)
mutated_mod['func_7648'] = func_7648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6029_call = mod.get_global_var('func_6029')
func_6030_call = mutated_mod.get_global_var('func_6030')
call_7697 = relay.TupleGetItem(func_6029_call(), 0)
call_7698 = relay.TupleGetItem(func_6030_call(), 0)
func_4390_call = mod.get_global_var('func_4390')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_7699 = func_4390_call()
call_7700 = func_4390_call()
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_7734 = func_1211_call()
call_7735 = func_1211_call()
func_4390_call = mod.get_global_var('func_4390')
func_4391_call = mutated_mod.get_global_var('func_4391')
call_7742 = func_4390_call()
call_7743 = func_4390_call()
func_7644_call = mod.get_global_var('func_7644')
func_7648_call = mutated_mod.get_global_var('func_7648')
const_7746 = relay.const([[8,-1,-3,-2,-9,4],[-2,8,-1,-6,10,-5],[-7,-8,8,5,9,-6],[-7,3,1,-3,6,-3],[-8,5,-7,3,-7,-6],[-7,2,-9,8,1,1],[-7,-6,-4,1,-10,-10],[-9,10,5,10,8,-8],[2,-2,5,4,-8,6],[1,-5,-6,-9,-9,-2],[6,-8,5,3,2,-2],[-1,-1,-9,10,-6,3],[2,-10,3,-5,3,-5],[-9,-10,8,-8,-10,-9],[-7,1,5,-9,7,8],[-1,-1,6,5,-8,6]], dtype = "int64")#candidate|7746|(16, 6)|const|int64
call_7745 = func_7644_call(relay.reshape(const_7746.astype('int64'), [4, 6, 4]), relay.reshape(const_7746.astype('int64'), [4, 6, 4]), )
call_7747 = func_7644_call(relay.reshape(const_7746.astype('int64'), [4, 6, 4]), relay.reshape(const_7746.astype('int64'), [4, 6, 4]), )
output = relay.Tuple([call_7697,call_7699,call_7734,call_7742,call_7745,const_7746,])
output2 = relay.Tuple([call_7698,call_7700,call_7735,call_7743,call_7747,const_7746,])
func_7753 = relay.Function([], output)
mod['func_7753'] = func_7753
mod = relay.transform.InferType()(mod)
output = func_7753()
func_7754 = relay.Function([], output)
mutated_mod['func_7754'] = func_7754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2176_call = mod.get_global_var('func_2176')
func_2178_call = mutated_mod.get_global_var('func_2178')
call_7798 = func_2176_call()
call_7799 = func_2176_call()
func_7365_call = mod.get_global_var('func_7365')
func_7366_call = mutated_mod.get_global_var('func_7366')
call_7804 = relay.TupleGetItem(func_7365_call(), 0)
call_7805 = relay.TupleGetItem(func_7366_call(), 0)
output = relay.Tuple([call_7798,call_7804,])
output2 = relay.Tuple([call_7799,call_7805,])
func_7807 = relay.Function([], output)
mod['func_7807'] = func_7807
mod = relay.transform.InferType()(mod)
mutated_mod['func_7807'] = func_7807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7807_call = mutated_mod.get_global_var('func_7807')
call_7808 = func_7807_call()
output = call_7808
func_7809 = relay.Function([], output)
mutated_mod['func_7809'] = func_7809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5959_call = mod.get_global_var('func_5959')
func_5960_call = mutated_mod.get_global_var('func_5960')
call_7857 = relay.TupleGetItem(func_5959_call(), 0)
call_7858 = relay.TupleGetItem(func_5960_call(), 0)
output = relay.Tuple([call_7857,])
output2 = relay.Tuple([call_7858,])
func_7863 = relay.Function([], output)
mod['func_7863'] = func_7863
mod = relay.transform.InferType()(mod)
output = func_7863()
func_7864 = relay.Function([], output)
mutated_mod['func_7864'] = func_7864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4631_call = mod.get_global_var('func_4631')
func_4632_call = mutated_mod.get_global_var('func_4632')
call_7894 = relay.TupleGetItem(func_4631_call(), 3)
call_7895 = relay.TupleGetItem(func_4632_call(), 3)
uop_7907 = relay.atanh(call_7894.astype('float32')) # shape=(14, 15, 4)
uop_7909 = relay.atanh(call_7895.astype('float32')) # shape=(14, 15, 4)
func_3837_call = mod.get_global_var('func_3837')
func_3839_call = mutated_mod.get_global_var('func_3839')
var_7911 = relay.var("var_7911", dtype = "float32", shape = (2, 320))#candidate|7911|(2, 320)|var|float32
call_7910 = relay.TupleGetItem(func_3837_call(relay.reshape(var_7911.astype('float32'), [2, 320])), 0)
call_7912 = relay.TupleGetItem(func_3839_call(relay.reshape(var_7911.astype('float32'), [2, 320])), 0)
output = relay.Tuple([uop_7907,call_7910,var_7911,])
output2 = relay.Tuple([uop_7909,call_7912,var_7911,])
func_7928 = relay.Function([var_7911,], output)
mod['func_7928'] = func_7928
mod = relay.transform.InferType()(mod)
mutated_mod['func_7928'] = func_7928
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7929 = relay.var("var_7929", dtype = "float32", shape = (2, 320))#candidate|7929|(2, 320)|var|float32
func_7928_call = mutated_mod.get_global_var('func_7928')
call_7930 = func_7928_call(var_7929)
output = call_7930
func_7931 = relay.Function([var_7929], output)
mutated_mod['func_7931'] = func_7931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2730_call = mod.get_global_var('func_2730')
func_2732_call = mutated_mod.get_global_var('func_2732')
call_7951 = relay.TupleGetItem(func_2730_call(), 0)
call_7952 = relay.TupleGetItem(func_2732_call(), 0)
output = relay.Tuple([call_7951,])
output2 = relay.Tuple([call_7952,])
func_7982 = relay.Function([], output)
mod['func_7982'] = func_7982
mod = relay.transform.InferType()(mod)
output = func_7982()
func_7983 = relay.Function([], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mod.get_global_var('func_6569')
func_6571_call = mutated_mod.get_global_var('func_6571')
call_7997 = relay.TupleGetItem(func_6569_call(), 0)
call_7998 = relay.TupleGetItem(func_6571_call(), 0)
output = call_7997
output2 = call_7998
func_8033 = relay.Function([], output)
mod['func_8033'] = func_8033
mod = relay.transform.InferType()(mod)
mutated_mod['func_8033'] = func_8033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8033_call = mutated_mod.get_global_var('func_8033')
call_8034 = func_8033_call()
output = call_8034
func_8035 = relay.Function([], output)
mutated_mod['func_8035'] = func_8035
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8078 = relay.const([[[5.638276,-2.740237,5.581804,3.446186,-2.100835,4.609445,-5.732400],[0.184885,-2.647002,-0.606878,1.939989,-8.534145,9.606143,-0.199102],[-5.940391,8.150354,-5.863163,-3.262430,4.333108,9.314771,-3.222611],[-7.774498,-4.194017,6.265331,-9.083285,-4.557583,-2.023513,5.976299],[-8.773835,8.653882,5.159170,-5.977807,-0.651257,-3.238165,-6.458887],[2.288642,-9.868536,5.683891,2.900123,1.875922,-2.690668,-8.281773],[6.235484,-9.552115,9.928497,-1.620470,-1.806741,-8.872290,9.889907],[-5.117683,-5.912748,7.819662,-2.136170,-4.676530,4.057568,3.950207],[2.630759,-9.329390,8.194429,-8.291710,-4.282615,-2.203079,-6.794152],[-4.351183,4.725952,9.739043,-6.925746,-6.311096,-5.797165,6.935061],[-4.630480,5.477383,-3.197592,-7.990218,9.989936,-9.014662,5.325645],[-8.426685,1.118889,-9.991443,-5.258289,8.253950,-6.936291,9.667006],[-8.192746,-0.751349,9.267551,-6.379341,0.743889,7.864051,7.571511],[9.674657,-8.837467,-1.612764,-9.097281,-5.952216,7.124837,8.854437],[0.275498,-3.592777,3.960661,4.229666,-3.479582,-4.115949,-3.883033]],[[-0.007399,5.799169,0.017953,-8.768019,-3.496136,-4.536899,6.203486],[-1.222385,1.408995,1.314165,7.989448,-5.174177,0.952387,-0.114548],[-6.334702,1.819271,-3.418355,-0.008373,0.315867,-6.813570,7.895470],[-3.394971,-7.080285,-9.531081,3.004581,7.350226,-9.308842,3.834057],[-3.782180,-9.324659,-3.127768,-2.388487,-8.018645,-5.916694,5.299133],[7.681032,3.719527,3.445574,-4.599710,3.873669,8.712807,-7.435809],[-3.717593,1.097262,5.781472,-9.469861,2.939704,5.282756,2.500048],[3.090672,-1.594709,-8.568347,0.055455,2.867919,4.290773,4.157934],[3.195055,-1.176823,1.928650,-8.177788,0.911605,-2.298549,6.702256],[6.861987,-2.493488,6.483883,1.722004,-6.030619,6.388804,1.310854],[2.028312,7.902289,-9.602577,-4.422817,3.162750,0.224527,4.941194],[-7.429098,9.147765,-8.739113,-8.422559,-8.319917,9.252981,-8.739278],[-0.553838,9.601904,-3.798284,-7.911386,-3.855376,-3.387051,8.183925],[8.480921,-9.485748,-8.589920,6.986795,2.475885,-2.355849,5.015983],[-7.371573,9.782060,4.618924,-0.016226,7.983590,9.990728,-7.386096]],[[-2.692875,8.933802,-6.016296,5.950195,7.057138,6.059900,-2.702356],[-5.555862,1.674959,-0.345133,1.998739,3.990395,3.854704,-5.057816],[5.745569,5.218432,-6.117198,1.813781,-8.564031,4.412202,0.289927],[-2.464329,2.662265,0.115250,6.206645,4.275886,-5.070460,0.456130],[7.220887,-4.934633,-9.419915,-7.823401,-2.665231,5.575496,-1.381918],[-7.517144,-4.456364,-3.049333,8.688167,-2.314034,1.687363,1.945411],[5.682520,0.585960,-7.594027,9.892937,4.275439,4.857542,5.882718],[-9.255993,-1.810480,0.319301,2.696712,-7.567883,2.052099,-6.198261],[-8.329077,-8.818905,-4.354072,-4.706654,5.367206,6.881264,-5.977692],[-5.142379,1.716415,9.477103,3.117136,-0.087241,-0.272242,8.394345],[-6.678318,-2.764255,9.183150,-8.814993,8.881018,-5.291710,-1.194270],[9.036301,2.697494,-1.635921,8.016864,-6.383985,-6.706945,6.183812],[3.335933,-2.034210,-3.886364,-6.488892,-1.032591,6.649447,3.146058],[-5.824868,0.478708,-8.851155,-3.082165,-5.904245,5.311921,-7.160737],[5.729938,-6.235004,2.632819,-2.448181,-3.595911,7.311791,1.867933]],[[-2.575620,3.651432,-0.245786,-5.820678,0.750266,6.077620,-2.049948],[-7.572942,-5.875580,7.547687,-3.853219,-8.162279,-2.943612,3.071030],[5.511273,2.988295,8.428313,-8.349776,8.496089,1.033434,4.204217],[-6.763961,3.563321,5.240889,7.390043,-3.829456,1.174191,-1.530463],[8.789285,4.091151,2.586154,-4.700829,5.594232,-5.502734,-6.870810],[7.836086,0.836919,4.428237,-0.891639,-5.373385,9.626678,6.220309],[6.646711,2.826356,9.091111,1.398139,5.916300,-4.370308,8.040153],[6.082055,-6.408261,5.697018,1.164273,-8.983817,5.602164,5.051696],[9.149475,9.855910,-6.526105,-9.750775,-8.168219,-9.687783,5.036824],[-4.537644,-9.514485,-0.764159,8.103316,-5.203266,1.283432,-0.591910],[8.035803,1.419041,0.622128,-0.255361,0.168870,6.757214,-7.399493],[4.710378,-9.564286,-6.791025,-7.288213,5.624241,0.018819,-1.254826],[-6.109706,2.565320,-0.181278,7.346089,-7.687596,8.156933,-0.409014],[9.629351,0.276340,-5.525116,-7.293832,-8.266642,-6.995578,-3.949517],[4.287301,-3.704942,-9.752435,3.910725,-0.643706,-2.438533,-7.949930]],[[4.717951,-0.100227,-6.634607,8.624418,-7.179811,3.506035,-8.979280],[-5.949688,8.056914,2.152677,-2.597746,-8.074444,-4.256572,-8.970121],[1.770772,8.335206,3.055982,0.339920,5.049754,-4.142101,-2.519994],[-1.238793,6.076138,-7.361831,-1.848803,-4.637430,7.444047,-7.698059],[-1.134728,-0.693429,-9.044641,-2.331813,2.299373,6.693074,-7.674943],[-8.366536,6.192823,-2.425427,-0.027037,-9.948628,-7.372082,5.851164],[3.051894,-3.757245,-5.701016,4.854240,-0.832355,-3.061299,9.302163],[-0.738536,0.818081,-9.181773,8.601365,-8.027041,8.867365,-9.822451],[7.375820,6.888326,7.672405,-8.934665,-6.626961,-7.094902,0.404347],[1.783439,-7.038087,6.166266,-3.118122,4.295234,-0.564442,3.854799],[-1.829494,0.947074,7.068409,-6.612781,-4.800631,-1.035206,-7.137017],[4.928250,9.751639,-1.985633,-2.859792,-6.202430,8.456161,-7.267276],[3.124668,-8.278805,0.512545,4.325542,-6.606712,-9.982634,0.701787],[-8.644035,2.954101,6.685517,-1.625416,8.290897,8.043529,6.329918],[8.810458,-2.572136,-5.484138,-3.204778,2.111070,-2.111458,9.616852]],[[-7.657134,-7.316914,-4.839251,7.293190,-3.097341,4.489984,-5.354199],[2.127195,8.125171,-9.102508,8.252680,-0.193040,-5.261599,-5.255933],[-0.855140,2.659696,-1.224620,9.875323,-5.770480,-5.721797,-7.170486],[-7.022686,4.898956,-9.604890,-7.677881,-1.312865,6.884659,8.658580],[-1.273069,2.222345,5.945359,-7.724201,-3.807056,-0.870176,-7.994866],[2.737816,-4.934956,2.293627,-5.579758,-9.284923,-9.098801,-5.858057],[-8.409015,-9.100640,7.097299,9.895719,-5.223802,-2.993559,0.891739],[6.955933,-3.459197,-8.223315,-2.609587,-6.326229,8.102991,1.973589],[7.937913,-8.823550,4.348403,5.750757,-5.841112,8.042987,-6.825504],[5.412066,-7.120177,1.099632,9.737870,4.921179,9.192301,-1.051582],[9.930238,5.802698,-3.296284,-6.853267,-9.516897,-3.233277,-4.389763],[1.522582,-1.541369,-2.756908,-0.321659,2.098601,8.113689,1.615263],[-1.945318,2.440025,-8.814479,-7.749244,-1.056610,-1.278428,-1.386738],[6.160843,1.435331,7.874946,9.192046,-8.162601,3.018745,-2.012302],[8.850736,-7.696676,5.301453,9.918802,-1.184558,-2.500138,-4.070076]],[[1.323627,-3.351931,1.080758,7.944943,9.829184,-4.220779,-7.192865],[1.553618,-0.619672,6.998641,-7.061120,-3.508064,-1.556229,5.951728],[-8.012829,4.005631,0.086990,-2.757004,4.280689,3.366816,1.967097],[6.415872,-0.683228,-2.719248,2.265503,9.578439,-5.005801,5.360649],[-7.037925,-1.368864,-6.317455,-1.684586,7.911606,-6.211991,-3.361382],[3.988431,8.555016,-4.560545,3.633466,-3.770320,-5.353446,-4.530533],[0.121089,8.226846,-2.808349,-8.594830,2.133146,-3.611295,-0.676472],[-3.385782,3.482007,-8.124341,-3.792956,-5.600597,1.845771,-5.480747],[-4.559071,-3.774748,-7.231258,4.684832,8.859152,6.304230,-4.007042],[7.366421,-6.169386,7.525542,4.682034,-3.965070,-1.376185,5.141903],[7.209508,7.873338,-3.018791,8.870160,0.290745,-8.029274,6.921976],[-6.331202,1.253582,-5.289911,9.477619,7.271190,8.789299,-1.576853],[-9.428872,2.625897,6.634828,8.153360,-5.591190,-1.384888,2.139574],[3.417863,-5.166670,-9.199113,0.494831,1.853126,5.616050,-7.034483],[-9.230878,-5.031065,-4.490859,-1.297007,3.202109,-1.436861,-1.572011]],[[1.175501,3.896344,-3.220940,-2.440933,4.276686,3.591256,-2.977852],[-2.108809,1.207256,9.532309,4.950502,9.530338,7.041954,-8.025372],[5.995387,-1.650707,-8.373221,9.416578,9.840966,-8.698627,5.101684],[9.075312,-8.781514,-1.984696,-4.876191,4.549823,-9.208694,0.494495],[4.803230,3.406001,1.693773,-8.674134,6.635643,-9.078310,3.844344],[5.667186,4.921349,8.995630,-1.730391,1.424412,6.795307,6.883482],[-6.154240,-5.999717,-8.070753,-0.880708,2.414932,1.972991,-4.627247],[-0.933750,-1.875907,-9.549264,-5.388077,2.898431,-5.004585,-2.063564],[-6.211098,8.455579,-4.013730,-5.199280,3.158055,-0.317963,1.134728],[7.657851,-5.762994,-6.553876,0.130270,-8.222598,-6.122694,8.371831],[-3.316875,-4.880058,0.761055,2.360646,5.082748,-4.992878,-2.497788],[-1.417859,-2.477924,9.407436,0.424099,-2.229993,7.121902,-8.465741],[-9.420289,-5.928914,4.895070,4.174619,-5.949561,9.683030,1.215013],[-6.579921,-5.222972,9.705950,-0.561046,4.388467,-5.160269,-4.114879],[-9.949463,3.194350,-9.695362,-6.920819,1.662418,-6.530023,-8.608237]],[[1.214966,3.312734,-8.418144,-4.452997,2.438992,-4.456980,-9.557078],[-8.834958,-9.266854,-0.057766,2.667968,4.650768,-6.921035,-3.724586],[-0.674590,-3.493569,-8.422319,6.557870,-5.931970,-3.366026,-4.251947],[-4.160714,-9.473879,-7.734910,-0.875833,-0.080700,1.145827,8.098563],[-0.919418,5.624943,-7.368978,3.851255,4.743751,5.584507,-0.221606],[5.982641,0.287919,-0.428733,-1.102813,-2.397145,8.450187,7.876424],[0.809990,-1.689393,-1.470663,-2.991586,-7.956153,1.071824,4.550027],[9.158780,-0.826913,-0.429307,-9.318532,0.952763,7.700632,2.104141],[2.828131,-2.801092,7.404866,-7.088982,-5.285287,6.704600,-3.520964],[-9.501014,5.284627,-8.312207,8.930938,4.927148,6.201824,-1.109683],[1.014823,8.981041,-5.219835,0.211033,-3.645910,8.771540,-7.624792],[0.631021,2.486776,-9.776210,3.966562,6.971816,-0.694106,8.867639],[9.981093,-0.399553,4.732984,2.413821,7.005969,-1.506729,3.615871],[-2.279879,-4.454365,-0.147250,-8.468029,-2.044326,4.335041,-8.611361],[8.860761,3.689887,2.139150,7.987299,1.801069,0.295069,1.561313]],[[6.694626,5.959841,-4.609195,8.745833,-3.645393,-5.279505,-1.443383],[-0.615674,5.398969,-3.007014,-5.607383,-7.068637,-8.447362,7.386508],[4.790601,8.468833,8.859738,-7.541277,-7.546238,-3.937294,2.429294],[-7.711664,4.029933,-0.783089,-3.558602,5.603728,1.581749,-7.218067],[-7.489396,9.300717,-8.771256,-5.642908,5.238045,2.266551,-9.429567],[-7.187118,-1.710519,3.205564,7.297990,-2.364213,-3.155601,8.173057],[-3.531307,-3.588068,2.833840,-7.520593,-6.994140,7.371395,0.696717],[-6.376575,-4.869839,-6.744147,3.301063,-2.927092,0.213017,-2.726309],[1.106479,5.969280,0.447897,-4.117548,1.518033,-9.718554,4.894790],[-6.523317,-2.403689,-4.361260,6.542277,-8.016191,4.469824,-7.457561],[3.224430,-6.282328,-0.337363,-2.821186,7.834029,-1.220711,6.275836],[1.237214,-9.285125,-3.600365,-0.952958,3.287548,6.143055,-0.765226],[6.758942,6.426175,8.151376,3.244176,-3.902671,4.492027,-1.562013],[-1.627163,-7.176932,-9.920130,2.332869,0.934712,7.994862,-0.642565],[-2.245268,7.728499,8.199498,4.248382,2.642752,-6.008770,-7.957122]],[[0.807112,9.923927,7.174216,4.670920,-7.426433,-4.918004,-9.574193],[-7.761127,-4.068673,5.957604,-4.465979,-8.603170,1.586559,-8.698003],[8.514668,7.206560,2.882635,9.789699,-8.023892,-1.770221,5.029254],[1.949856,3.235051,-5.351064,-1.716156,2.284108,-3.852712,-7.573027],[3.105837,7.845257,-6.414660,-2.391387,0.312998,-8.802126,-6.370073],[-3.933155,2.803472,-2.154131,-5.917427,-0.651974,-8.810269,7.696474],[2.578137,1.884116,7.452377,-9.037870,0.017122,3.467311,-4.511775],[8.271429,2.212741,-6.456020,2.525919,3.753141,-9.182667,-1.510835],[6.738378,9.903357,-3.070549,-1.914622,-1.155938,0.540787,6.910031],[-7.144541,-7.973688,-1.887488,-4.136722,-6.670977,1.695449,1.643458],[9.083888,4.048790,9.296224,5.110669,7.854859,1.673230,-6.268996],[9.890253,-0.275804,5.818868,6.206028,-6.146859,0.616203,1.854545],[-2.285807,-1.635824,6.214954,-0.401980,-7.015871,-3.477945,8.281114],[2.200110,-1.268171,0.279321,0.753029,5.803760,2.878093,-2.130581],[-3.837174,6.135808,-5.524658,-0.947875,8.600503,-9.540019,-5.240753]],[[6.160661,6.644325,-8.289329,-5.829271,-5.927691,-1.066015,-0.512298],[0.953753,-0.254511,9.405269,-6.150797,6.359389,2.097962,7.250485],[1.872811,-7.112355,-0.034315,9.159316,9.505929,-1.699801,2.064262],[7.092160,-9.880161,-1.654602,-4.304066,8.650529,7.101809,2.826918],[1.993698,3.771853,-1.932110,-1.633354,4.831814,7.593332,2.808545],[-1.897183,3.453758,-7.232338,-5.524258,-8.660696,-9.196392,4.283710],[9.162629,-2.265600,8.377358,1.006736,7.093817,-5.562237,8.468629],[5.023365,-2.209366,-5.169651,9.864621,7.255886,3.107165,-5.207870],[0.016029,-2.497078,-6.496416,-5.776897,-7.968993,-0.828315,3.632490],[-8.276390,-9.695097,6.024682,5.563354,-0.224964,-2.009366,-2.098224],[-5.144536,-6.543679,-2.297511,-3.015569,8.451710,-0.885236,-7.167029],[-1.837297,-3.165238,-8.172684,-2.352893,1.996872,3.151410,4.707882],[1.799062,-2.853005,-9.919514,-3.264222,9.990979,-1.972177,6.946282],[-5.380040,3.418636,9.893069,7.868340,-8.467520,2.670818,0.355642],[-6.289064,-2.321691,-9.345067,9.855695,4.154360,5.630934,-2.505422]],[[-9.148302,-3.456663,6.587468,3.408291,9.978926,-1.796889,-8.891070],[6.833131,4.709745,-3.609444,-8.037769,-8.831263,-5.810623,8.430200],[-3.237010,3.315548,6.741777,0.765275,8.336278,1.270413,0.035289],[-1.987978,8.593747,3.247256,1.857673,-7.894703,-7.533850,1.595415],[2.880445,-7.403799,-1.416199,-8.537117,9.630407,-0.739634,-9.643957],[-7.022584,-1.139785,0.965409,-2.692205,-6.777147,5.251417,7.264706],[4.389912,-3.663501,1.158365,-8.876292,-6.117796,0.416171,-7.483841],[-7.263538,8.355026,-5.680331,1.222608,6.565457,-9.168361,-5.532531],[2.444639,3.493405,-6.838098,9.068440,-3.316202,-2.342182,-3.203482],[-9.585902,6.259027,4.459451,1.184106,-2.496221,8.694341,3.639510],[9.046103,9.305704,5.375866,4.899228,-3.083785,-6.290060,-5.409813],[2.907227,-9.815846,6.251313,-9.939537,9.616405,-3.036043,9.796088],[6.773019,4.984081,-5.192579,3.808513,3.054694,5.125661,0.176102],[-1.683820,-1.996162,-2.240216,-7.952150,8.492371,-4.983860,-8.473959],[-5.063584,5.522448,-9.830135,8.401712,6.982588,2.827892,3.976307]],[[0.747002,-4.086195,6.269756,9.843203,7.981598,7.048080,4.335665],[4.640742,5.507337,1.208087,-9.711869,3.692283,-3.811730,-5.359203],[-3.588060,-5.341256,5.186510,7.972980,-2.731902,-0.782765,-0.247472],[-9.164179,-0.867029,-1.461607,0.812456,-0.660794,5.775316,7.567752],[-2.037937,4.949841,-1.382083,-8.481197,-0.345916,-2.007923,6.718203],[9.458372,-1.897529,5.195869,5.648042,-9.507306,3.464913,-8.089185],[1.806109,-2.080762,-8.406447,-0.403724,0.604550,-3.885779,-8.653506],[-2.411614,8.057594,-5.638831,2.433812,-0.233048,7.262813,-8.081296],[3.500205,2.328150,-5.372536,4.933353,-9.515025,8.908416,-0.057841],[8.616004,-7.650364,-6.139136,0.493089,-7.130131,-1.087792,-3.155333],[9.214323,-9.618459,0.743182,2.405881,0.070422,-2.932533,-2.135133],[-1.674765,4.104376,-9.780599,3.157728,-2.656421,2.635234,-6.430182],[5.838994,7.603525,0.909094,-1.863205,1.264567,-3.408961,-5.183181],[-8.712461,6.325651,5.995144,7.563836,-0.102530,9.391248,4.263277],[5.072877,-1.403045,-7.287201,-7.831569,-9.648707,6.430350,-5.403015]]], dtype = "float32")#candidate|8078|(14, 15, 7)|const|float32
uop_8079 = relay.acosh(const_8078.astype('float32')) # shape=(14, 15, 7)
output = relay.Tuple([uop_8079,])
output2 = relay.Tuple([uop_8079,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_24 = relay.var("var_24", dtype = "int32", shape = (5, 10, 9))#candidate|24|(5, 10, 9)|var|int32
const_25 = relay.const([[[-4,-1,-2,3,1,8,4,-6,-4],[1,6,-9,-6,10,8,-5,-4,7],[3,3,-10,5,-8,-6,6,4,-1],[-8,-7,10,8,10,-4,-9,6,10],[-2,-9,5,-3,-3,5,-1,2,5],[-5,-9,-4,-3,7,-4,-7,-3,-7],[4,-1,8,-2,3,8,5,-9,-8],[5,-6,5,3,-6,-8,7,6,8],[6,-4,-1,-6,-4,9,8,7,8],[3,2,8,-4,-4,4,4,-2,-8]],[[-1,-9,9,-10,6,10,7,-7,-5],[-3,-1,9,8,5,4,-3,10,-1],[-4,8,8,5,-1,6,-7,-5,5],[4,-9,-1,4,7,8,5,-9,-1],[10,2,-8,9,7,-6,10,-6,-8],[-2,-1,-10,-9,2,-7,6,-10,-3],[7,6,10,8,1,-8,1,3,1],[4,8,9,-10,7,3,10,3,-6],[5,2,-10,-7,2,-6,3,4,-5],[-1,8,-6,-9,1,-10,5,-2,3]],[[9,4,10,-4,-7,8,-1,-8,-6],[-10,-1,-7,9,-8,10,3,-3,-1],[-5,8,3,-6,7,-7,-8,-10,-7],[10,10,7,1,-9,4,-9,-5,3],[-5,6,4,-6,10,1,-4,3,9],[4,-9,6,3,4,-4,-7,9,2],[-7,-6,-6,-4,8,-6,7,-8,-5],[2,2,7,7,5,-7,9,-7,3],[-10,6,4,4,2,-2,10,4,-1],[8,-4,4,-1,-9,6,4,9,-5]],[[-1,-6,4,-1,-1,-4,7,10,6],[7,5,-10,8,-10,-5,9,5,-1],[5,-3,9,9,-1,9,3,9,-10],[2,2,-4,-8,-2,-10,1,-7,2],[-4,-1,-9,4,-6,1,-1,-3,-4],[9,2,4,8,-5,-2,10,9,-10],[-4,2,7,-4,-6,-3,-6,2,-6],[9,-4,9,-3,-9,-2,1,-5,-4],[6,-1,8,3,-6,1,-1,-8,-7],[8,-7,2,-10,-3,-6,7,6,-4]],[[-4,8,2,-6,2,-8,10,-8,-7],[-4,5,-1,-6,-5,-8,7,-8,4],[8,6,1,-10,-2,-7,1,5,1],[-7,4,-1,2,2,7,-3,3,5],[-3,-6,5,3,7,2,-4,6,2],[10,-7,6,-10,9,6,9,8,4],[1,9,-7,-5,-9,-1,-10,5,-3],[3,7,7,5,3,-3,9,6,1],[1,6,-1,-1,6,-10,4,-4,-5],[-6,-9,8,-8,10,-6,-7,9,7]]], dtype = "int32")#candidate|25|(5, 10, 9)|const|int32
bop_26 = relay.subtract(var_24.astype('int32'), relay.reshape(const_25.astype('int32'), relay.shape_of(var_24))) # shape=(5, 10, 9)
bop_40 = relay.left_shift(const_25.astype('uint32'), relay.reshape(var_24.astype('uint32'), relay.shape_of(const_25))) # shape=(5, 10, 9)
var_61 = relay.var("var_61", dtype = "int32", shape = (5, 10, 9))#candidate|61|(5, 10, 9)|var|int32
bop_62 = relay.greater_equal(const_25.astype('bool'), relay.reshape(var_61.astype('bool'), relay.shape_of(const_25))) # shape=(5, 10, 9)
output = relay.Tuple([bop_26,bop_40,bop_62,])
output2 = relay.Tuple([bop_26,bop_40,bop_62,])
func_65 = relay.Function([var_24,var_61,], output)
mod['func_65'] = func_65
mod = relay.transform.InferType()(mod)
var_66 = relay.var("var_66", dtype = "int32", shape = (5, 10, 9))#candidate|66|(5, 10, 9)|var|int32
var_67 = relay.var("var_67", dtype = "int32", shape = (5, 10, 9))#candidate|67|(5, 10, 9)|var|int32
output = func_65(var_66,var_67,)
func_68 = relay.Function([var_66,var_67,], output)
mutated_mod['func_68'] = func_68
mutated_mod = relay.transform.InferType()(mutated_mod)
var_206 = relay.var("var_206", dtype = "uint32", shape = (13, 13, 16))#candidate|206|(13, 13, 16)|var|uint32
var_207 = relay.var("var_207", dtype = "uint32", shape = (13, 13, 16))#candidate|207|(13, 13, 16)|var|uint32
bop_208 = relay.equal(var_206.astype('bool'), relay.reshape(var_207.astype('bool'), relay.shape_of(var_206))) # shape=(13, 13, 16)
output = bop_208
output2 = bop_208
func_213 = relay.Function([var_206,var_207,], output)
mod['func_213'] = func_213
mod = relay.transform.InferType()(mod)
var_214 = relay.var("var_214", dtype = "uint32", shape = (13, 13, 16))#candidate|214|(13, 13, 16)|var|uint32
var_215 = relay.var("var_215", dtype = "uint32", shape = (13, 13, 16))#candidate|215|(13, 13, 16)|var|uint32
output = func_213(var_214,var_215,)
func_216 = relay.Function([var_214,var_215,], output)
mutated_mod['func_216'] = func_216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_235 = relay.var("var_235", dtype = "int64", shape = (7, 6, 4))#candidate|235|(7, 6, 4)|var|int64
const_236 = relay.const([[[-10,6,7,-8],[-6,-3,6,10],[-2,-4,-2,-8],[8,8,3,-8],[5,8,2,6],[4,-10,3,-10]],[[-2,4,3,8],[-2,-9,-4,-1],[1,-1,-5,2],[6,-10,3,-6],[6,1,-3,-9],[7,1,-5,10]],[[-2,-10,6,6],[5,3,-6,2],[-10,-9,4,-10],[-8,-2,-3,-8],[1,-2,9,3],[4,1,-6,9]],[[-10,10,8,4],[-1,8,1,9],[-3,1,10,7],[1,-3,-5,-4],[5,-8,4,-9],[-10,-8,-5,5]],[[9,2,-1,3],[-1,10,1,2],[7,-8,-3,7],[6,-6,-4,10],[6,-1,3,8],[10,-1,-1,-6]],[[-2,-9,-3,-10],[-2,1,5,9],[3,10,-6,1],[6,9,-4,6],[-3,-3,-3,-7],[-7,-3,2,-8]],[[2,3,6,-5],[8,2,3,2],[-6,2,5,-6],[-10,9,-9,-6],[-2,-2,-5,-3],[-1,6,6,9]]], dtype = "int64")#candidate|236|(7, 6, 4)|const|int64
bop_237 = relay.not_equal(var_235.astype('bool'), relay.reshape(const_236.astype('bool'), relay.shape_of(var_235))) # shape=(7, 6, 4)
output = bop_237
output2 = bop_237
func_242 = relay.Function([var_235,], output)
mod['func_242'] = func_242
mod = relay.transform.InferType()(mod)
mutated_mod['func_242'] = func_242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_243 = relay.var("var_243", dtype = "int64", shape = (7, 6, 4))#candidate|243|(7, 6, 4)|var|int64
func_242_call = mutated_mod.get_global_var('func_242')
call_244 = func_242_call(var_243)
output = call_244
func_245 = relay.Function([var_243], output)
mutated_mod['func_245'] = func_245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_517 = relay.var("var_517", dtype = "int8", shape = (4, 3, 15))#candidate|517|(4, 3, 15)|var|int8
var_518 = relay.var("var_518", dtype = "int8", shape = (4, 3, 15))#candidate|518|(4, 3, 15)|var|int8
bop_519 = relay.equal(var_517.astype('bool'), relay.reshape(var_518.astype('bool'), relay.shape_of(var_517))) # shape=(4, 3, 15)
output = bop_519
output2 = bop_519
func_533 = relay.Function([var_517,var_518,], output)
mod['func_533'] = func_533
mod = relay.transform.InferType()(mod)
var_534 = relay.var("var_534", dtype = "int8", shape = (4, 3, 15))#candidate|534|(4, 3, 15)|var|int8
var_535 = relay.var("var_535", dtype = "int8", shape = (4, 3, 15))#candidate|535|(4, 3, 15)|var|int8
output = func_533(var_534,var_535,)
func_536 = relay.Function([var_534,var_535,], output)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
const_717 = relay.const([[[-7.111293,9.294659,9.997149,7.090579,7.356714,-5.998842,-0.073047,-8.116152,0.046454,2.576675,9.571584,-5.496877,-3.266767,0.103331],[-2.614227,4.279799,-2.896340,5.519800,-4.611787,-8.688967,-3.686560,6.395254,-0.211290,1.774428,-9.647416,-3.058271,-2.807566,-8.305549]],[[4.914812,1.150478,-9.686341,1.032991,5.759078,6.606855,7.735522,5.824174,-7.136896,-3.478936,-8.473685,6.735070,1.320382,-9.077769],[-4.856789,-1.333517,7.171583,-7.304317,-8.096472,-7.568061,-7.583524,-5.818947,1.871090,9.408034,-8.317229,-8.798830,2.455334,-3.625860]],[[8.692216,-9.788679,1.342821,6.029374,-7.508490,1.743702,7.056557,1.042944,9.487963,-6.136167,6.905249,-1.398637,9.606599,3.310148],[-8.928594,7.933973,-0.111748,-3.595011,-4.801414,-8.985516,9.993960,-6.596709,4.069433,-1.519362,0.986731,9.645156,8.682668,-1.185641]],[[-9.002149,7.092185,6.122739,-2.843181,1.416128,-6.270393,2.529997,-8.160712,-2.405516,4.608777,-8.035540,-0.472102,-9.341849,9.475793],[8.979326,9.701270,3.631136,2.257156,9.911507,-9.497445,-1.309658,3.647477,-4.788896,-8.529481,-0.740802,-0.892784,0.526228,-4.525540]],[[0.420608,1.803457,2.114683,-3.323723,-7.836262,-8.077887,-7.652324,-4.286514,3.355243,-9.006528,7.220592,-6.305682,-7.433556,4.513082],[5.803797,-0.864302,6.477778,8.479781,-8.014123,1.157111,8.996615,-1.350124,-9.127747,-0.228028,-4.134734,5.451676,9.518720,4.109583]],[[4.141922,-2.965824,-5.457541,9.095957,-4.596011,9.360029,-5.256393,7.954949,-7.865129,8.072032,-1.645600,-6.850570,-1.505297,2.901559],[1.998409,-7.711275,0.667560,6.643569,8.618033,2.789486,5.927469,-8.619217,6.048277,-4.320045,9.805128,-5.714595,3.744770,2.855985]],[[1.814552,-0.195019,7.792083,7.284926,9.050127,1.002827,4.525465,-4.161325,7.036033,-0.971782,3.074263,-2.414727,9.269317,-3.424779],[8.699285,-5.855443,-9.158868,4.362334,2.685974,-5.081471,0.593294,9.739222,-0.796843,4.152574,-4.438052,-3.665064,-0.761349,8.124512]],[[-0.726262,7.430216,7.479867,-5.028492,-6.012343,3.522678,-2.976550,-0.881627,4.260425,-3.947613,2.077698,8.628067,0.406797,7.139800],[-9.206819,3.622142,4.820517,-9.591722,4.235832,-0.902504,-1.000712,6.330147,-2.136666,-7.261968,-8.111389,5.616583,1.662748,0.450788]],[[3.969703,-3.814594,1.225661,-9.019237,-0.099935,4.717878,9.645870,7.391658,-3.115231,-6.732491,-6.540631,-8.159786,4.409886,0.564986],[8.684451,8.944313,7.879080,-5.184043,-7.835926,6.100775,-2.135311,-7.482559,9.527154,1.554796,-1.406210,-7.757754,4.669192,3.106313]],[[-3.475668,7.742905,-1.022395,-1.818097,-3.496951,-3.607455,8.509910,-8.813974,3.622846,5.115530,-6.236767,-2.886398,-8.778632,-9.910181],[1.168435,-5.220308,-6.309656,5.238053,2.712645,-8.029991,0.368710,-8.157095,8.482314,-6.861173,0.005659,6.989667,-5.266309,-9.603852]],[[-5.614517,-4.608046,7.565757,3.016511,-3.281244,-4.535589,8.908365,-2.315743,3.821104,9.465389,9.525351,8.717170,-4.759504,-4.424678],[-5.266900,1.893676,6.348751,6.755677,1.105009,-6.801026,4.353180,7.634057,-6.453813,5.752340,-6.757636,-8.077451,-5.271280,-1.066591]],[[-6.712619,-3.748613,1.180794,0.919979,6.277556,5.843848,5.862817,8.586889,-9.992174,3.483669,-4.022182,8.630822,-3.437194,-0.698748],[5.776091,9.224086,2.569782,2.436294,7.070812,-4.234758,0.075091,2.574622,5.999029,7.064329,8.562644,-7.833804,-6.591466,-7.584262]],[[3.821380,0.241114,1.069827,-3.108532,-6.974506,-0.526838,-2.776958,5.741033,-9.207104,0.834761,5.259026,-6.768189,5.780254,-4.732365],[-1.805937,-2.823356,5.755623,-5.979733,-5.527310,9.576727,-2.746318,0.005383,-1.481348,-1.557216,9.445491,2.800678,4.254734,-6.378226]],[[-8.974173,-8.753225,1.744699,8.256351,-6.155554,-8.934489,-3.527974,-0.575624,3.347816,-3.095642,-4.529009,-7.118628,-4.483882,-2.887387],[3.698090,-9.266447,9.486069,-7.769791,-2.375044,2.674034,-2.832545,2.043238,1.118718,3.994907,2.442122,1.585328,5.305854,-7.453248]],[[2.836870,4.322913,7.928516,-3.187701,-6.203520,7.320096,-8.449558,7.436710,-4.256134,-4.698863,-6.584106,-1.328893,2.131878,1.411795],[-4.032052,-7.705403,-4.616567,-0.509070,7.549753,-3.835013,-9.439943,-7.748288,-3.609374,9.413818,2.518967,9.554310,3.146738,3.086151]]], dtype = "float64")#candidate|717|(15, 2, 14)|const|float64
uop_718 = relay.log(const_717.astype('float64')) # shape=(15, 2, 14)
output = uop_718
output2 = uop_718
func_750 = relay.Function([], output)
mod['func_750'] = func_750
mod = relay.transform.InferType()(mod)
mutated_mod['func_750'] = func_750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mutated_mod.get_global_var('func_750')
call_751 = func_750_call()
output = call_751
func_752 = relay.Function([], output)
mutated_mod['func_752'] = func_752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_759 = relay.var("var_759", dtype = "int64", shape = (15, 9, 11))#candidate|759|(15, 9, 11)|var|int64
var_760 = relay.var("var_760", dtype = "int64", shape = (15, 9, 11))#candidate|760|(15, 9, 11)|var|int64
bop_761 = relay.bitwise_and(var_759.astype('int64'), relay.reshape(var_760.astype('int64'), relay.shape_of(var_759))) # shape=(15, 9, 11)
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
const_765 = relay.const([-6,6,-6,5,2,-7,1,5,-9,3,7,9,-9,1,-5,-1,5,-1,4,3,7,-2,7,-4,-8,-6,3,4,-10,3,3,8,-1,-9,5,1,-3,10,-2,8,-5,6,10,9,7,7,6,-6,-4,-4,-8,-3,-9,2,-1,-1,5,-4,7,6,5,-4,9,-2,6,6,-2,-6,3,-2,10,-1,-3,1,8,6,1,6,9,-6,3,-8,10,6,3,6,-3,10,1,8,9,3,-1,3,-9,6,1,-7,-7,2,10,3,6,9,-5,7,10,-5,10,-2,8,-1,1,8,10,8,-2,1,-6,-7,7,6,-5,10,-10,-4,-8,5,-2,7,-7,-2,-8,6,5,-5,-7,-2,4,8,2,-10,9,-2,-10,-5,-6,5,9,-7,7,9,-5,-6,2,-10,-8,-7,-8,1,7,-7,2,6,7,8,-7,8,7,-2,-10,3,5,-8,-8,4,-3,-10,-7,6,10,-8,10,-3,-1,-6,-7,10,9,-8,-7,4,-5,4,-9,-4,6,-9,7,3,-7,1,-8,-8,1,5,8,7,-4,-3,-3,3,8,-8,-4,-5,2,4,8,-8,-8,6,-10,9,-4,-6,-3,10,3,-8,-1,-9,-10,-2,5,-5,10,-2,4,6,-6,-7,-5,2,-5,6,-5,6,8,-2,-9,-9,-10,-1,2,2,-2,-9,-8,-5,-1,-6,8,10,3,2,-10,-10,1,5,-1,-5,8,9,5,8,7,-4,7,10,7,1,-2,-8,-4,-8,1,-7,-7,6,10,-10,7,9,-8,-5,10,2,7,-3,-6,6,-4,8,-7,3,-6,4,5,-9,-2,-9,10,-2,-3,10,8,7,-8,1,-9,5,-7,1,2,-6,4,-7,-9,3,-6,1,8,-5,-5,4,-1,1,7,10,4,6,-1,4,3,-2,-8,-2,5,3,-4,-3,-3,2,8,1,-8,-2,1,-1,-1,3,9,6,-5,-3,-5,5,-3,-9,-9,-3,-7,-9,10,3,4,3,-1,7,-7,6,-7,9,6,-8,-8,3,7,6,-2,1,4,9,-2,-3,5,4,-8,1,-2,-2,-2,-8,9,-10,-4,6,4,3,-4,-8,6,2,-4,-10,1,-9,-7,4,2,6,5,-3,-9,-7,-3,-1,-9,-2,5,-9,4,-9,-4,6,7,1,-5,-2,-3,7,-6,-6,3,-7,-2,3,4,-8,5,6,7,5,-4,-6,8,4,4,-10,-9,-3,5,6,10,-10,9,8,-3,-8,1,-5,-9,-4,10,2,-1,8,-3,-7,-10,7,-1,5,-9,5,9,1,-1,-5,-1,10,-3,9,-5,-10,-1,4,3,10,-2,-4,-6,-1,9,10,2,-1,-8,-3,-7,8,10,-2,1,5,-6,4,-1,1,-2,2,-8,-1,3,1,-4,8,1,7,1,-3,10,-8,-6,-2,9,2,-7,8,-6,-2,8,-6,-1,8,6,8,3,-6,-7,5,2,-5,-4,-3,-2,3,-6,-6,4,6,9,6,1,1,10,-4,-5,5,4,10,-2,3,-5,-6,6,9,-7,-7,6,-4,4,-1,1,-10,4,8,-4,6,3,-10,-6,-4,5,1,9,-8,-5,2,6,10,2,8,10,-7,7,-2,6,6,-7,-3,-2,7,-1,-3,1,-7,-1,2,10,-6,7,-10,4,-4,-2,-5,-9,2,-3,7,10,10,-10,5,-10,-6,9,-1,1,3,-4,8,3,3,8,-2,5,-2,-2,6,-7,10,8,10,9,-5,-4,-6,6,2,1,-2,6,3,10,2,2,5,7,1,3,-9,-2,3,-6,2,1,-8,-8,6,2,5,-4,-6,-10,-7,5,-9,4,-7,-8,-10,4,7,8,-10,-5,-4,7,-10,-7,1,6,2,-9,2,9,6,1,5,-9,10,10,-3,-6,-8,-3,-6,7,10,-7,5,4,9,-7,5,-9,-9,2,8,6,-10,4,-7,6,-9,10,8,5,9,2,-7,-2,-10,8,-2,-3,-1,-8,10,-6,6,-2,9,-4,1,-6,-4,5,-3,-1,5,-7,3,-5,-1,3,-8,-4,4,7,1,-4,-2,-9,9,-9,-8,-1,2,-5,8,10,2,-2,1,2,3,-7,4,-1,9,-9,4,7,7,-9,-9,8,-3,10,10,-6,-1,-9,10,-9,-9,6,-8,9,7,8,-7,9,-9,-3,-4,-5,3,-9,-5,4,7,-7,-4,-10,-6,-7,9,4,7,-10,-8,8,-10,-4,5,8,7,7,-4,10,-7,3,-5,5,-6,-4,9,-4,9,3,6,-6,-1,-4,-1,-4,-3,4,6,9,4,6,7,10,10,10,9,8,-8,-2,7,9,5,-8,-5,-2,-2,10,-10,5,-8,-5,8,6,8,-9,5,4,3,8,-9,-5,-9,-2,9,-9,10,-3,-1,-6,-6,3,3,1,1,2,-2,-3,-5,-1,10,-9,-8,-9,-1,6,-2,-1,8,10,3,-1,10,7,-9,-10,-2,9,3,-7,-5,-6,-3,3,-10,3,5,-10,8,-2,8,7,-1,8,-6,-10,9,9,2,-7,5,6,6,6,-3,-2,-10,-1,-5,5,-5,6,1,-7,-7,5,-6,1,7,7,-6,1,8,-7,10,-8,-8,-8,-10,-2,-1,1,10,-1,-1,-6,-9,-3,8,2,1,-4,6,8,9,3,10,1,-7,-8,-1,5,1,9,-9,1,2,-9,-7,4,-10,10,-2,10,3,8,-2,6,-1,7,5,-10,-1,-5,9,-8,8,-8,9,10,6,10,10,-3,10,-1,-6,-5,-3,9,10,2,5,8,8,10,3,3,-5,-4,-6,3,9,3,8,5,-9,-8,5,-10,2,-8,-1,10,-9,2,-3,-1,5,-4,4,-3,-6,-9,6,5,-1,-5,-8,-8,-1,-4,7,7,-9,-5,10,-8,-8,7,-8,4,-7,-4,5,-2,6,1,3,-5,8,-5,-9,-7,2,3,-8,3,-5,10,1,-6,-10,-10,6,-5,-9,-5,5,-7,7,1,8,-3,-3,5,-7,-10,-10,9,-10,-10,-5,9,-8,9,8,-1,3,9,8,-9,5,-1,-2,10,-3,2,5,9,8,9,7,-10,5,-6,3,6,-7,-4,-7,2,5,9,-5,-5,6,9,-5,6,10,1,-9,5,5,-8,4,-4,6,-10,2,4,-9,-1,-3,4,-1,1,3,-8,3,-1,-6,5,8,2,1,8,-10,6,-8,-1,5,-10,5,-7,6,5,-10,-5,-6,-8,7,-10,-5,-2,-7,3,-4,10,-3,-8,-2,-2,-5,-3,-5,1,7,9,-8,-8,-4,4,-5,7,-1,8,2,-8,-6,10,-3,1,2,5,-3,-2,-5,-4,1,8,-10,5,-4,-7,-5,-2,-7,10,5,7,10,6,6,-4,3,10,8,-5,2,5,-8,6,3,7,3,7,-5,-7,-5,9,4,-1,-9,-9,8,-8,4,-6,-2,-5,6,10,-5,2,9,7,-5,8,-7,-4,-2,3,-8,10,-1,9,-7,1,-6,-1,6,-8,8,-6,-4,2,-5,-3,6,-7,8,-6,-2,10,-2,5,-1,-1,-1,-6,9,5,4,1,9,7,-3,-6,-2,5,7,3,2,-9,-3,10,-2,10,-10,6,-8,-1,-9,-5,5,-6,7,10,-3,2,5,-10,8,-5,-10,10,-5,8,-9,-5,-3,7,-10,1,10,-1,-7,2,-2,6,9,1,-8,-7,2,-3,5,-6,9,-8,3,3,-10,-7,-3,6,8,7,-6,7,8,-6,-2,-8,10,-9,5,2,9,10,2,-4,-5,10,-7,3,7,-8,10,9,4,-4,1,6,7,10,4,-2,6,2,9,9,-3,-6,-5,-4,4,-9,3,-3,-3,-10,10,8,3,1,5,1,-9,2,3,-4,-5,-2,-10,9,-1,-2,2,-8,2,-9,9,9,-9,3,-9,7,-2,4,-3,7,3,-4,9,-2,-1,-2,-2,-8,1,1,10,6,8,-6,-5,6,10,5,-1,-4,9,-3,-6,2,-4,-9,-2,6,7,10,5,-1,5,6,-4,-10,-6,-4,6,2,-10,4,-6,-1,-4,-6,-8,-4,3,-10,-2,-10,5,-3,-1,-3,-5,-4,-1,5,-7,-4,8,-9,-8,9,-1,-10,-6,-1,9,-9,-3,5,-9,9,1,-2,-1,-1,-10,-1,-1,9,-6,-6,6,-7,-10,5,5,7,7,-5,10,9,8,3,3,-9,-4,-3,-2,-1,5,6,-10,-5,2,-7,-10,6,-8,-9,3,-1,-5,-9,-5,3,-4,9,2,3,8,8,-8,-5,-3,9,-4,-5,3,8,-2,-7,10,2,-3,-7,5,-8,2,-9,-10,3,7,3,-1,9,1,-2,5,4,9,9,-9,-8,4,7,6,-6,-7,-4,-9,2,8,-1,-7,10,-6,-1,10,7,-5,-6,2,5,-2,-8,3,-8,-1,3,-6,4,-6,9,4,-7,-8,-1,6,2,6,-8,-9,9,7,-7,-7,-7,8,8,-3,1,10,6,6,6,7,1,10,5,2,-2,-5,-1,-8,2,-3,-5,-3,-1,-6,-2,-10,-10,-1,-10,6,-1,3,-1,2,-4,-6,-2,-7,-1,9,-9,-6,-9,-1,1,1,8,7,-8,-5,-6,1,-2,-10,-5,-6,-7,-3,-1,-7,2,6,3,1,2,4,-7,-5,-5,-3,3,-5,4,-7,2,7,2,-8,-5,-10,3,5,1,10,-5,6,-2,8,-1,-1,1,-1,-3,9,5,5,3,9,-1,10,4,4,1,4,-7,6,-6,10,-3,-7,8,8,5,-7,-10,2,7,2,8,-9,-4,2,2,-7,-2,-5,8,6,-1,-10,2,-5,-6,6,-4,8,1,-7,-3,-10,-1,-7,-6,-2,6,10,-4,6,5,-3,-8,-6,-2,-2,7,1,-6,-9,-1,-3,-3,-4,9,8,-1,-2,3,-8,1,1,3,-6,-10,1,-5,10,-7,-8,4,10,-6,-6,10,-7,5,9,-10,7,1,3,2,8,8,6,10,1,10,-9,3,-1,4,6,-8,-5,-1,-7,-2,10,10,3,-4,10,-2,-4,2,3,9,9,-2,-8,-3,-4,1,4,-2,5,-1,-9,3,8,-1,3,-8,-9,7,3,-4,4,3,-9,6,2,-9,10,8,-7,-9,-1,3,9,-9,1,-1,1,4,10,5,9,7,-4,-7,6,-1,3,6,5,4,1,10,1,1,6,-5,8,4,9,-4,9,9,-3,-4,4,-2,-5,-4,-8,8,-9,-9,-7,2,4,8,-5,-5,-5,5,-1,2,-1,2,1,1,5,8,3,-7,-8,-2,5,9,10,-1,3,5,-10,-1,-7,3,-4,-5,5,-8,10,-5,-9,6,8,-8,-1,-3,2,-5,8,-2,-1,1,-8,8,-9,2,7,7,5,6,-10,10,5,-10,3,7,-8,1,-7,3,-2,-6,-5,4,-2,-10,1,4,-3,-1,6,-2,8,10,2,3,-10,-3,-4,9,-9,-8,-8,8,-7,-10,9,-7,7,2,1,-3,6,10,-5,8,9,-6,-8,-10,5,8,-4,-9,-2,-10,6,-6,1,2,4,-2,6,9,4,9,-9,-1,3,4,3,-10,7,-1,3,-6,5,-9,-8,5,8,-9,-2,-2,4,-4,-1,-6,-2,9,-2,2,3,-8,-2,2,6,8,4,5,-9,-5,-5,1,1,3,-4,-1,-8,9,2,9,5,-6,-9,-8,-1,-1,5,-6,-1,-10,-7,6,-9,-7,-6,-9,-6,-9,7,5,10,6,5,4,2,3,-4,-5,3,6,-8,10,1,9,7,-7,10,-6,7,3,3,-9,4,-4,5,6,-6,-9,6,-4,-4,3,4,8,-1,-1,6,5,-5,7,-8,7,-9,-10,6,1,-5,-3,6,-10,-4,-3,-4,-10,-7,1,10,-1,4,-6,-7,8,3,-1,-5,-10,-6,9,1,-9,8,6,-5,7,-10,8,3,-9,9,7,-3,-3,10,-8,-3,1,-6,9,4,1,-2,1,-8,10,-2,-1,6,5,8,-8,10,-2,6,10,-9,6,-1,-5,-1,6,5,-10,5,-6,-9,-6,6,9,-1,-4,9,2,-10,9,-3,3,-4,7,-8,-2,9,-10,-8,-7,-6,-1,-2,5,9,3,8,-10,-9,-4,3,-6,6,7,4,6,6,7,10,2,-5,-3,-1,7,-1,-8,9,-7,1,2,10,7,5,6,5,7,10,-5,5,4,-7,10,-8,2,3,-7,1,-8,10,-2,-9,7,10,-4,-7,1,-1,-9,-10,-8,-4,7,-1,-2,9,9,2,1,9,-7,4,-8,8,3,8,-4,-10,-8,6,-3,-3,-4,8,8,-1,-4,2,-9,1,2,-7,4,5,-10,1,5,8,2,5,3,-5,-8,-1,9,2,1,-8,-9,-6,-4,-4,2,10,-6,-4,-8,8,-7,-6,-10,8,10,-6,-8,9,1,5,-3,-7,-10,2,1,-8,8,7,-2,1,2,2,10,-6,-3,4,5,-7,-4,5,-8,4,-6,-3,-7,-2,-2,8,6,-4,-4,8,-2,6,-3,-1,-5,8,5,10,8,10,-8,3,-2,-6,-7,-6,9,-3,7,5,9,1,-5,-8,5,-2,-4,-9,-3,-3,-9,-7,4,-3,4,-3,3,8,7,10,2,6,-6,6,-4,-10,-9,3,7,-6,-8,-5,-3,7,-9,-5,-1,-10,-8,8,5,-6,3,10,7,-2,-5,4,-1,9,9,2,-6,7,-7,7,1,6,3,5,-4,-3,-7,8,-9,6,2,8,-10,-2,-7,7,-10,-3,1,-3,8,-3,-4,-1,-7,-10,6,-6,10,1,7,-9,-3,2,-2,-8,-10,7,9,6,6,-6,2,9,10,-1,-2,-5,-3,-8,9,-9,-6,-2,2,-4,2,3,9,-7,-3,-7,-1,9,-7,-10,4,7,4,6,7,-8,-9,-4,2,9,-2,-10,7,6,8,-2,7,-4,-9,1,-2,7,-8,10,-2,7,5,6,7,-8,10,-7,1,10,-4,8,-9,-5,-3,9,4,-9,5,1,-9,-9,10,10,9,-3,-10,-7,3,-8,-7,-4,-4,9,10,1,10,-2,6,-4,-1,-6,-6,-2,4,-7,-6,1,-6,7,-10,-9,8,3,-3,-9,-3,-5,-9,-10,-6,6,-10,2,-7,5,-9,10,-6,-3,9,3,-8,-3,-5,2,9,-5,-4,6,8,-1,-6,4,5,10,1,9], dtype = "uint32")#candidate|765|(2704,)|const|uint32
call_764 = func_213_call(relay.reshape(const_765.astype('uint32'), [13, 13, 16]), relay.reshape(const_765.astype('uint32'), [13, 13, 16]), )
call_766 = func_213_call(relay.reshape(const_765.astype('uint32'), [13, 13, 16]), relay.reshape(const_765.astype('uint32'), [13, 13, 16]), )
uop_775 = relay.acos(call_764.astype('float32')) # shape=(13, 13, 16)
uop_777 = relay.acos(call_766.astype('float32')) # shape=(13, 13, 16)
output = relay.Tuple([bop_761,const_765,uop_775,])
output2 = relay.Tuple([bop_761,const_765,uop_777,])
func_799 = relay.Function([var_759,var_760,], output)
mod['func_799'] = func_799
mod = relay.transform.InferType()(mod)
var_800 = relay.var("var_800", dtype = "int64", shape = (15, 9, 11))#candidate|800|(15, 9, 11)|var|int64
var_801 = relay.var("var_801", dtype = "int64", shape = (15, 9, 11))#candidate|801|(15, 9, 11)|var|int64
output = func_799(var_800,var_801,)
func_802 = relay.Function([var_800,var_801,], output)
mutated_mod['func_802'] = func_802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_816 = func_750_call()
call_817 = func_750_call()
var_824 = relay.var("var_824", dtype = "float64", shape = (15, 2, 14))#candidate|824|(15, 2, 14)|var|float64
bop_825 = relay.floor_mod(call_816.astype('float32'), relay.reshape(var_824.astype('float32'), relay.shape_of(call_816))) # shape=(15, 2, 14)
bop_828 = relay.floor_mod(call_817.astype('float32'), relay.reshape(var_824.astype('float32'), relay.shape_of(call_817))) # shape=(15, 2, 14)
uop_831 = relay.tan(bop_825.astype('float64')) # shape=(15, 2, 14)
uop_833 = relay.tan(bop_828.astype('float64')) # shape=(15, 2, 14)
func_533_call = mod.get_global_var('func_533')
func_536_call = mutated_mod.get_global_var('func_536')
const_851 = relay.const([-2,9,-5,10,-10,3,-1,-10,7,-10,2,7,1,-6,-10,-9,-5,-6,-1,8,-9,1,-10,-9,-4,5,8,-5,10,3,-2,10,-3,8,7,7,5,-6,-8,-1,5,-10,7,-2,-9,-7,-7,8,7,4,-2,-10,9,-1,10,-9,7,1,-7,5,8,-6,-10,5,-2,3,-9,10,-8,5,4,-4,3,9,8,5,5,-3,8,4,6,-4,8,-3,9,-4,-3,-4,-6,6,4,-2,-5,-5,2,2,5,-4,-4,-1,6,3,-6,6,1,-9,-5,5,-5,-10,-10,-4,-10,1,-7,6,8,3,-10,9,10,6,9,3,4,1,-8,8,-5,-6,1,-6,-3,4,-7,-3,-1,2,4,3,1,-9,-1,8,8,-6,6,-8,10,-2,-7,4,8,7,1,8,-4,-2,-6,10,-6,10,10,-3,-2,-7,-2,6,-7,9,-2,2,4,2,-6,-1,-9,-6,-3,-9], dtype = "int8")#candidate|851|(180,)|const|int8
call_850 = func_533_call(relay.reshape(const_851.astype('int8'), [4, 3, 15]), relay.reshape(const_851.astype('int8'), [4, 3, 15]), )
call_852 = func_533_call(relay.reshape(const_851.astype('int8'), [4, 3, 15]), relay.reshape(const_851.astype('int8'), [4, 3, 15]), )
func_533_call = mod.get_global_var('func_533')
func_536_call = mutated_mod.get_global_var('func_536')
call_863 = func_533_call(relay.reshape(call_850.astype('int8'), [4, 3, 15]), relay.reshape(call_850.astype('int8'), [4, 3, 15]), )
call_864 = func_533_call(relay.reshape(call_850.astype('int8'), [4, 3, 15]), relay.reshape(call_850.astype('int8'), [4, 3, 15]), )
output = relay.Tuple([uop_831,call_850,const_851,call_863,])
output2 = relay.Tuple([uop_833,call_852,const_851,call_864,])
func_871 = relay.Function([var_824,], output)
mod['func_871'] = func_871
mod = relay.transform.InferType()(mod)
mutated_mod['func_871'] = func_871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_872 = relay.var("var_872", dtype = "float64", shape = (15, 2, 14))#candidate|872|(15, 2, 14)|var|float64
func_871_call = mutated_mod.get_global_var('func_871')
call_873 = func_871_call(var_872)
output = call_873
func_874 = relay.Function([var_872], output)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_882 = func_750_call()
call_883 = func_750_call()
output = call_882
output2 = call_883
func_886 = relay.Function([], output)
mod['func_886'] = func_886
mod = relay.transform.InferType()(mod)
output = func_886()
func_887 = relay.Function([], output)
mutated_mod['func_887'] = func_887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_903 = func_886_call()
call_904 = func_886_call()
func_533_call = mod.get_global_var('func_533')
func_536_call = mutated_mod.get_global_var('func_536')
const_906 = relay.const([8,2,3,9,-4,-4,-5,-8,-1,-3,10,-4,2,10,-9,-5,-8,-10,-7,-8,7,-6,4,7,-6,4,4,7,-3,8,-3,-9,-2,-3,8,-1,-7,7,-3,-9,-5,-3,10,-5,-8,-5,5,-1,2,7,-7,-5,5,6,-6,-5,7,-2,-9,-9,9,5,9,1,1,-1,6,3,-8,7,3,7,-9,8,-5,4,-3,7,8,3,-8,8,-8,5,-9,2,-4,1,-5,5,5,3,10,-8,-8,8,5,1,-6,-1,-7,-6,-9,8,5,5,3,-8,8,3,-8,5,8,9,10,-8,3,10,2,-10,-1,7,-3,-9,10,10,-3,-3,8,-7,-10,-7,-1,-6,7,10,-1,2,-9,-6,2,-10,10,8,-3,-8,3,7,2,-9,-9,7,-3,3,-9,-4,6,8,5,-6,2,-3,-7,1,4,-8,-6,-3,5,2,7,-7,-9,-1,-2,5,10,10,-8,9], dtype = "int8")#candidate|906|(180,)|const|int8
call_905 = func_533_call(relay.reshape(const_906.astype('int8'), [4, 3, 15]), relay.reshape(const_906.astype('int8'), [4, 3, 15]), )
call_907 = func_533_call(relay.reshape(const_906.astype('int8'), [4, 3, 15]), relay.reshape(const_906.astype('int8'), [4, 3, 15]), )
output = relay.Tuple([call_903,call_905,const_906,])
output2 = relay.Tuple([call_904,call_907,const_906,])
func_912 = relay.Function([], output)
mod['func_912'] = func_912
mod = relay.transform.InferType()(mod)
mutated_mod['func_912'] = func_912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_912_call = mutated_mod.get_global_var('func_912')
call_913 = func_912_call()
output = call_913
func_914 = relay.Function([], output)
mutated_mod['func_914'] = func_914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_921 = func_886_call()
call_922 = func_886_call()
output = relay.Tuple([call_921,])
output2 = relay.Tuple([call_922,])
func_934 = relay.Function([], output)
mod['func_934'] = func_934
mod = relay.transform.InferType()(mod)
mutated_mod['func_934'] = func_934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mutated_mod.get_global_var('func_934')
call_935 = func_934_call()
output = call_935
func_936 = relay.Function([], output)
mutated_mod['func_936'] = func_936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_955 = relay.TupleGetItem(func_934_call(), 0)
call_956 = relay.TupleGetItem(func_936_call(), 0)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_961 = func_750_call()
call_962 = func_750_call()
output = relay.Tuple([call_955,call_961,])
output2 = relay.Tuple([call_956,call_962,])
func_965 = relay.Function([], output)
mod['func_965'] = func_965
mod = relay.transform.InferType()(mod)
mutated_mod['func_965'] = func_965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_965_call = mutated_mod.get_global_var('func_965')
call_966 = func_965_call()
output = call_966
func_967 = relay.Function([], output)
mutated_mod['func_967'] = func_967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_1063 = func_750_call()
call_1064 = func_750_call()
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
call_1066 = relay.TupleGetItem(func_871_call(relay.reshape(call_1063.astype('float64'), [15, 2, 14])), 0)
call_1067 = relay.TupleGetItem(func_874_call(relay.reshape(call_1063.astype('float64'), [15, 2, 14])), 0)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
call_1071 = relay.TupleGetItem(func_871_call(relay.reshape(call_1063.astype('float64'), [15, 2, 14])), 1)
call_1072 = relay.TupleGetItem(func_874_call(relay.reshape(call_1063.astype('float64'), [15, 2, 14])), 1)
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
const_1090 = relay.const([2,-10,-2,-8,-6,8,8,-2,1,-1,8,7,-8,-2,-8,-9,-4,-1,3,-3,-2,9,-6,3,5,-6,3,-3,-10,-4,-5,1,3,6,-1,6,-9,3,6,-3,-1,-3,2,-7,-10,5,3,7,-7,-3,1,2,-6,7,3,4,1,-10,5,7,6,1,7,-7,-2,-5,-2,4,3,2,3,10,5,-7,7,4,-6,-5,4,9,2,8,10,4,5,-9,-3,-2,-1,7,-3,-3,9,-1,-8,8,4,-6,1,-8,-9,5,-8,-10,-6,-8,1,7,9,-2,10,-9,-9,-7,-8,-5,3,-8,-8,1,7,-2,-1,6,-9,-7,10,1,4,8,-2,8,6,8,4,6,1,8,7,3,4,-4,9,-4,3,4,8,5,-6,5,-4,-1,-1,10,5,-5,-7,-5,-4,9,4,7,3,-5,-4,-9,3,5,1,1,9,4,5,-2,10,-8,-3,6,4,-5,2,-7,5,9,7,1,6,-2,7,-7,7,1,10,-8,-9,-3,8,-5,3,-9,2,6,7,8,-4,-1,2,-3,-1,7,3,-8,1,5,7,-2,-6,-8,8,7,1,-5,3,-5,8,-2,-1,1,6,-4,2,6,6,-10,-10,-8,-8,5,-10,4,2,10,-10,5,-9,-1,-7,-8,10,7,7,-2,8,-6,10,6,-10,7,-9,6,-1,6,3,-9,2,-5,-1,5,6,8,3,-10,-2,3,-9,-7,5,10,-9,-10,-5,1,-2,5,-10,-6,7,-8,-2,10,9,4,1,9,-3,3,4,5,-4,3,-3,9,-6,-1,-7,2,8,-9,9,1,8,3,-9,7,-1,7,1,8,-2,-6,9,6,-5,6,-4,-8,-2,4,1,5,4,-10,8,4,6,-3,-9,10,-6,8,5,4,-8,9,10,5,-5,-2,-10,5,6,9,-6,9,-9,-4,4,-2,-4,6,-2,-1,4,10,-8,10,-10,1,-1,-10,9,5,-1,8,5,-3,-4,3,-6,2,7,-1,-4,-5,-5,5,10,-7,-4,-8,10,-7,-4,2,5,-5,7,-1,8,-6,-2,7,1,-3,-1,-6,-2,5,3,-5,1,-1,4,1,-10,5,8,-4,-5,5,-9,9,4,-9,-3,-7,6,5,2,4,-3,-5,-10,-1,7,-3,9,-2,-7,-1,-7,5,8,3,-7,3,-5,-2,-9,-8,-1,7,-4,-2,-9,-9,3,8,-5,-3,-8,-2,-7,6,9,4,-6,1,-9,-8,8,-5,-3,-2,3,-9,-4,-6,7,-8,-7,-8,3,-2,4,1,1,-3,-8,-3,10,6,4,4,-1,10,7,2,9,4,-5,-7,2,1,3,-3,-7,-7,-8,-2,5,8,2,-4,3,8,3,-2,-5,5,6,-3,6,4,2,4,10,3,-9,6,-3,9,10,-2,-4,-5,4,3,-9,-3,-5,-10,8,-8,10,-8,10,10,-9,-7,9,5,-9,5,-9,8,-7,8,4,2,-4,7,-10,-6,-1,-3,-6,-6,-1,2,9,-4,2,2,2,8,-6,9,-3,-6,7,-7,-2,-7,-3,-2,1,-1,-10,9,-8,-5,3,10,-9,2,-8,9,9,-2,7,7,2,2,-2,3,7,2,-3,6,3,-10,-5,10,6,-10,-9,-2,-6,2,-5,-6,4,10,2,-9,-4,-5,-9,4,-8,10,-1,8,-7,3,-7,2,-9,-1,10,8,-1,10,-10,5,9,7,10,-7,-6,-8,-1,6,-5,-1,-7,9,-1,-7,-5,1,10,6,-1,-6,5,-4,8,-6,-9,10,-5,-3,7,-7,6,8,6,-5,-9,6,9,-2,-1,10,3,-5,8,-5,2,7,2,4,-1,4,2,-6,1,-7,-6,2,6,8,-7,-9,6,7,-3,-3,9,-8,7,-3,-2,1,-7,7,-2,7,7,8,-2,-1,-5,-1,2,-7,-3,-7,3,5,3,-5,-9,4,-8,1,-9,-7,7,-1,7,-7,-10,-7,4,-3,6,-2,10,-2,2,8,-6,-6,-3,1,4,-2,4,-7,5,-7,-8,7,7,-6,-5,-10,1,3,2,-6,3,9,1,-6,-8,9,-2,-3,8,-9,6,-3,5,3,-9,2,-8,9,-8,8,-6,1,-5,-8,-6,5,6,10,-3,7,-1,4,-1,-1,-8,5,7,-3,-10,5,-7,7,8,3,10,3,-8,-3,10,7,2,-3,8,1,-6,-4,-9,-6,-10,-10,10,4,-2,8,10,1,9,-10,9,-5,-10,-10,9,7,7,-10,3,-7,-10,1,2,1,-6,-8,-4,2,1,-4,7,10,1,3,3,-2,-6,-10,-5,-2,3,7,-5,1,10,4,1,3,3,7,-7,8,2,-6,10,9,9,9,5,-10,9,2,10,-1,3,-1,-9,-8,9,-9,1,10,-1,6,3,1,-1,-2,-10,6,-3,8,5,4,-9,3,-10,-1,-6,-9,4,10,4,-8,7,10,2,1,-3,3,9,-3,1,-1,3,-5,-1,6,-9,2,10,-5,9,10,-2,-5,9,1,1,6,-4,-3,-9,10,3,3,3,8,5,-5,10,-1,7,-10,4,2,-8,2,-4,-5,-4,4,10,1,-9,4,8,10,-7,-4,6,-10,-3,-4,-7,-5,1,2,1,-7,-10,10,6,5,-10,-4,-5,3,-9,4,-7,-10,-2,10,-4,4,7,5,-5,5,-7,2,-5,1,-3,3,6,10,4,1,-8,5,10,7,8,1,-4,9,-9,5,-7,-5,10,3,7,3,1,-9,7,8,-1,-3,3,4,4,5,-10,4,-6,-5,3,8,-7,4,-4,-1,3,-10,8,10,5,-5,8,4,-8,-8,-10,-2,-3,1,3,4,6,4,-8,-9,-2,8,4,5,-3,-3,-9,-10,-3,4,2,2,2,5,-10,2,7,-3,4,-4,-1,1,-2,-6,3,3,-8,5,-2,-9,-3,6,3,-2,9,7,3,-2,1,3,10,9,-4,-7,5,9,-8,-1,-6,9,8,-7,-6,-9,-9,-10,10,-6,-6,-9,10,10,-6,-1,3,-8,-8,6,-6,-2,7,3,-1,-10,-3,-7,-10,10,-7,8,3,-3,-3,-4,3,-3,7,-8,4,-5,-8,9,-1,-3,2,-10,-9,3,-3,-10,-4,-7,-8,1,-4,10,-9,9,10,8,-3,-4,-3,-4,-7,-5,7,3,-8,7,9,5,6,7,5,-7,-8,-3,-7,9,3,-6,7,-6,-2,-8,-2,-2,-6,4,6,4,-2,5,5,-5,10,-7,-9,-4,7,5,-7,-8,5,8,5,7,8,9,8,10,-5,4,3,8,-2,-9,-9,-5,3,8,-5,7,7,-7,-10,-2,7,9,-4,7,-10,-8,-5,3,-4,6,-8,-3,9,-1,-6,-3,8,10,-9,-1,-5,-9,-10,8,5,-3,7,9,3,-6,-2,-1,-1,4,10,-2,-2,7,3,-6,-1,1,-3,5,-10,-7,8,-3,-3,-2,2,-9,-2,8,4,-4,-3,3,7,5,7,-10,-2,-7,-1,7,2,2,2,9,-4,-1,10,-4,-1,4,1,-4,-10,7,9,-9,-1,5,8,1,9,-8,3,-5,1,2,-7,4,-7,-1,6,-7,10,10,6,-10,3,-3,10,-3,-9,-4,3,-6,-10,9,8,4,-8,3,-8,-8,-3,-7,8,5,-5,6,6,8,-8,3,-5,-3,1,-6,1,10,-4,6,-9,7,-7,-1,4,10,-10,-9,9,-7,-8,-1,-6,10,10,-2,-6,-2,-4,7,-6,-10,-9,1,-1,-10,1,5,-4,9,-2,4,10,10,-3,-1,-1,5,-2,-9,3,9,1,-3,-2,1,-1,-9,-3,4,5,2,8,7,4,-10,-5,2,4,5,8,-7,10,-2,6,-8,-3,10,-10,9,5,2,10,-8,-9,-10,8,6,7,3,-5,-6,-1,-10,-3,4,8,-8,10,-3,-8,4,2,5,7,3,-9,10,5,-3,-9,-6,5,-5,9,-1,-1,-4,6,-2,-5,5,-6,-6,-5,9,5,10,1,-2,3,9,2,-7,-3,1,4,4,1,10,6,-9,-7,1,-2,2,10,-9,7,1,5,-9,-8,-8,2,6,-9,1,1,6,8,-9,9,1,2,-5,-5,-5,-7,3,-10,7,1,-5,-9,4,-9,6,-8,6,-10,-6,-5,-8,-5,2,-8,-5,5,9,-3,3,-7,3,-7,-7,2,-10,6,9,-8,7,8,-5,3,10,9,1,-2,3,-3,-6,6,2,-3,3,2,7,3,-6,6,-6,9,2,2,-3,-6,10,5,5,-2,1,-2,5,-10,4,7,2,-7,-9,10,4,1,1,5,-5,-4,-9,7,-2,5,5,-7,-9,-3,-5,-2,-2,-4,-10,7,-4,-4,-9,-8,-9,10,6,3,4,-4,1,-10,9,-6,-1,-4,5,-7,-10,9,10,3,5,-9,-4,-9,-7,9,-1,4,-9,-6,-8,-1,9,-10,-7,5,1,-2,7,1,10,-1,-7,2,5,2,-2,4,3,10,-6,-6,9,1,1,1,4,-2,-6,6,-2,-5,-1,6,2,8,3,5,1,-9,2,6,3,-6,2,-2,-2,1,-7,-9,-4,-7,8,10,-1,-6,10,-8,7,2,8,6,-1,3,-3,-7,9,4,7,1,-3,-1,-6,-4,3,-4,1,10,4,-10,-6,-4,2,-4,-1,8,-1,-7,-8,-2,10,-1,-6,3,-6,9,-1,-9,-2,-3,-8,-9,10,4,10,10,-3,-10,-3,1,7,1,2,10,-3,-6,-6,7,-2,5,-8,1,7,10,-6,9,-10,1,10,-7,6,1,-10,-7,1,4,8,-3,-7,-3,6,6,2,-2,-1,-7,-2,-1,9,5,-2,1,4,-3,1,-6,9,4,1,6,-7,-3,3,3,1,-2,-7,-1,9,2,1,6,9,-3,-10,-6,-4,-5,-10,9,-6,-4,-5,4,10,-3,-3,3,3,-4,-7,-7,9,7,10,-3,-6,1,-4,5,-10,-7,9,7,-5,4,-3,-2,5,-4,-5,3,-5,-1,9,5,6,10,-1,9,8,-8,6,-3,-1,-8,-3,-8,-7,-7,6,-4,3,10,-1,-10,4,-1,-1,-3,-1,-9,-2,-1,7,-5,-10,-7,-3,7,-8,4,-6,-2,1,-1,6,7,8,-9,5,-2,-3,8,-8,1,-1,-7,1,-5,-5,-5,8,-1,9,3,-5,9,-6,3,9,7,10,8,-3,4,-9,1,8,-6,-5,10,-6,6,-5,3,3,-3,-5,-2,6,-8,-4,4,2,-10,-9,-5,-1,-6,-9,10,10,-5,-6,3,5,-7,-10,-5,-1,1,7,-4,8,3,-10,1,8,-4,3,6,-1,-8,-4,-5,-8,-4,4,-3,9,-2,-1,-10,9,3,5,1,-4,7,2,4,2,-6,7,1,-5,8,7,3,4,-1,7,3,1,-1,5,6,5,-4,-9,-10,-1,10,-6,6,-1,9,9,9,-5,6,6,-5,-3,-3,5,7,-4,4,10,-2,-6,-8,6,-6,10,8,1,-6,6,7,5,-7,-2,10,2,-4,-4,5,2,8,-1,-7,-4,7,4,-1,-9,-9,1,5,-1,4,-1,-5,10,4,-4,4,-6,5,-6,-9,5,5,7,-3,-9,8,-8,3,-8,9,-10,9,-3,-3,1,3,-2,-5,-10,-1,-5,-9,2,1,2,4,-1,5,-7,5,2,7,-8,-5,1,7,5,-1,9,8,9,3,-5,8,-7,-2,-10,-5,1,5,5,10,-10,-6,-10,-2,6,-3,-4,-3,-3,-1,3,-1,5,-8,10,10,-6,10,-1,-9,8,10,-2,-4,-9,5,-1,8,-2,8,-4,-3,7,10,-4,6,8,3,-10,-4,1,1,-8,2,9,4,-8,-6,8,4,-5,-5,8,-5,-6,7,10,3,-9,8,5,-3,-10,-10,5,2,6,-4,-7,1,10,5,8,-8,1,4,9,-8,6,-7,4,2,-9,2,-7,-1,3,-7,-4,-7,-10,-10,10,-9,-8,9,6,-9,8,-2,6,-2,-1,-1,3,-9,-9,-5,7,-7,-10,6,-8,2,-8,-2,10,-5,-4,-6,-2,-1,4,-4,-10,7,-5,-6,7,8,-10,10,-6,-1,-9,7,-9,-6,6,3,9,4,2,7,-5,5,-7,7,7,-2,-4,2,9,8,10,-9,-1,4,-4,3,8,-7,2,-6,4,7,-9,1,1,-3,-1,7,-9,7,2,3,9,-4,-5,-10,-2,-5,10,-1,7,9,10,2,-8,1,1,1,3,3,-10,7,1,-5,7,-1,3,2,7,3,5,7,-9,7,8,9,2,9,7,-6,1,-1,-9,-8,-9,4,-6,-9,3,-6,-8,8,3,3,3,-6,-9,1,-2,-6,3,-4,-3,3,-10,9,-7,8,-6,2,2,-8,-5,-9,-1,7,-7,2,-5,-7,5,3,-3,-2,1,2,1,4,-10,-4,-10,-4,3,6,-10,-3,9,7,-6,-4,-4,-2,-8,-3,-1,-9,10,-7,-9,3,6,-4,-3,-6,3,-7,6,-4,-8,-3,5,-2,-7,-10,-2,4,8,-2,1,1,9,1,-1,-2,-1,10,8,1,-2,10,5,-1,-3,5,2,6,-5,-9,-1,5,-5,-7,8,-8,10,-4,5,-9,10,-2,9,-6,-6,-1,5,8,1,-2,-5,9,2,2,1,-6,5,-7,-8,1,7,1,-5,1,6,7,8,1,-9,7,-6,5,1,-8,-5,10,-8,-6,-2,1,2,9,5,-10,-3,-6,-10,-10,5,7,-6,3,-2,7,8,1,-7,2,2,-6,-10,6,5,10,-4,1,-8,4,-3,-1,10,-3,-4,-10,-8,1,-1,10,3,-8,-9,-8,3,-6,-2,9,10,-10,-6,9,7,4,5,7,-3,6,6,-10,4,7,-4,-10,10,-7,10,-2,7,6,1,-9,-10,6,-9,-5,2,-10,10,-1,10,7,-5,9,-5,4,-8,-10,-8,-4,-5,-1,-1,-5,1,-9,3,10,-5,10,6,7,8,2,-8,-4,-5,1,-4,-7,10,5,-4,-3,-6,2,-8,-5,10,4,-4,-10,1,-5,6,1,1,-1,-3,-5,-9,2,-10,4,6,6,6,1,7,-4,1,9,3,7,4,8,3,-1,-1,-2,10,-9,6,-6,7,6,-7,-9,4,-10,-10,-10,-10,-5,-5,-8,-7,-3,-6,-7,-9,10,-5], dtype = "uint32")#candidate|1090|(2704,)|const|uint32
call_1089 = func_213_call(relay.reshape(const_1090.astype('uint32'), [13, 13, 16]), relay.reshape(const_1090.astype('uint32'), [13, 13, 16]), )
call_1091 = func_213_call(relay.reshape(const_1090.astype('uint32'), [13, 13, 16]), relay.reshape(const_1090.astype('uint32'), [13, 13, 16]), )
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_1103 = relay.TupleGetItem(func_934_call(), 0)
call_1104 = relay.TupleGetItem(func_936_call(), 0)
output = relay.Tuple([call_1063,call_1066,call_1071,call_1089,const_1090,call_1103,])
output2 = relay.Tuple([call_1064,call_1067,call_1072,call_1091,const_1090,call_1104,])
func_1116 = relay.Function([], output)
mod['func_1116'] = func_1116
mod = relay.transform.InferType()(mod)
mutated_mod['func_1116'] = func_1116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1117 = func_1116_call()
output = call_1117
func_1118 = relay.Function([], output)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_1174 = func_750_call()
call_1175 = func_750_call()
output = relay.Tuple([call_1174,])
output2 = relay.Tuple([call_1175,])
func_1181 = relay.Function([], output)
mod['func_1181'] = func_1181
mod = relay.transform.InferType()(mod)
output = func_1181()
func_1182 = relay.Function([], output)
mutated_mod['func_1182'] = func_1182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1197 = relay.TupleGetItem(func_1116_call(), 2)
call_1198 = relay.TupleGetItem(func_1118_call(), 2)
uop_1214 = relay.exp(call_1197.astype('float64')) # shape=(4, 3, 15)
uop_1216 = relay.exp(call_1198.astype('float64')) # shape=(4, 3, 15)
uop_1220 = relay.asin(uop_1214.astype('float32')) # shape=(4, 3, 15)
uop_1222 = relay.asin(uop_1216.astype('float32')) # shape=(4, 3, 15)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
var_1232 = relay.var("var_1232", dtype = "int32", shape = (450,))#candidate|1232|(450,)|var|int32
call_1231 = relay.TupleGetItem(func_65_call(relay.reshape(var_1232.astype('int32'), [5, 10, 9]), relay.reshape(var_1232.astype('int32'), [5, 10, 9]), ), 2)
call_1233 = relay.TupleGetItem(func_68_call(relay.reshape(var_1232.astype('int32'), [5, 10, 9]), relay.reshape(var_1232.astype('int32'), [5, 10, 9]), ), 2)
output = relay.Tuple([uop_1220,call_1231,var_1232,])
output2 = relay.Tuple([uop_1222,call_1233,var_1232,])
func_1240 = relay.Function([var_1232,], output)
mod['func_1240'] = func_1240
mod = relay.transform.InferType()(mod)
mutated_mod['func_1240'] = func_1240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1241 = relay.var("var_1241", dtype = "int32", shape = (450,))#candidate|1241|(450,)|var|int32
func_1240_call = mutated_mod.get_global_var('func_1240')
call_1242 = func_1240_call(var_1241)
output = call_1242
func_1243 = relay.Function([var_1241], output)
mutated_mod['func_1243'] = func_1243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_1396 = func_750_call()
call_1397 = func_750_call()
func_242_call = mod.get_global_var('func_242')
func_245_call = mutated_mod.get_global_var('func_245')
const_1400 = relay.const([[10,6,5,5],[2,-5,-10,-7],[4,-7,-2,-9],[-5,4,4,5],[-1,-7,9,-4],[-1,-1,9,-4],[-3,-1,-9,-10],[9,-10,-1,8],[-10,-10,8,1],[4,-2,1,7],[-6,10,1,4],[5,2,1,-8],[6,9,4,3],[1,1,3,5],[-6,-5,-5,4],[2,-4,7,-1],[9,-5,9,1],[5,-1,9,6],[-1,10,-9,-5],[-2,4,-10,10],[-7,4,-5,6],[-4,6,3,9],[-4,-1,3,6],[5,-5,-6,-6],[-10,-9,-3,4],[-1,3,2,-9],[10,9,-4,-9],[4,-3,8,5],[10,-4,-10,2],[-7,-7,-8,-5],[-6,4,-7,10],[8,4,-5,-8],[3,-9,10,-4],[10,-8,-10,9],[-5,-8,7,-4],[3,4,4,-4],[4,10,7,-1],[-7,-5,9,-3],[-8,-7,-8,1],[10,1,7,-3],[-3,5,8,6],[4,-10,-7,9]], dtype = "int64")#candidate|1400|(42, 4)|const|int64
call_1399 = func_242_call(relay.reshape(const_1400.astype('int64'), [7, 6, 4]))
call_1401 = func_242_call(relay.reshape(const_1400.astype('int64'), [7, 6, 4]))
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
var_1421 = relay.var("var_1421", dtype = "uint32", shape = (2704,))#candidate|1421|(2704,)|var|uint32
call_1420 = func_213_call(relay.reshape(var_1421.astype('uint32'), [13, 13, 16]), relay.reshape(var_1421.astype('uint32'), [13, 13, 16]), )
call_1422 = func_213_call(relay.reshape(var_1421.astype('uint32'), [13, 13, 16]), relay.reshape(var_1421.astype('uint32'), [13, 13, 16]), )
func_912_call = mod.get_global_var('func_912')
func_914_call = mutated_mod.get_global_var('func_914')
call_1428 = relay.TupleGetItem(func_912_call(), 1)
call_1429 = relay.TupleGetItem(func_914_call(), 1)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_1436 = func_886_call()
call_1437 = func_886_call()
uop_1448 = relay.acosh(var_1421.astype('float32')) # shape=(2704,)
output = relay.Tuple([call_1396,call_1399,const_1400,call_1420,call_1428,call_1436,uop_1448,])
output2 = relay.Tuple([call_1397,call_1401,const_1400,call_1422,call_1429,call_1437,uop_1448,])
func_1458 = relay.Function([var_1421,], output)
mod['func_1458'] = func_1458
mod = relay.transform.InferType()(mod)
mutated_mod['func_1458'] = func_1458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1459 = relay.var("var_1459", dtype = "uint32", shape = (2704,))#candidate|1459|(2704,)|var|uint32
func_1458_call = mutated_mod.get_global_var('func_1458')
call_1460 = func_1458_call(var_1459)
output = call_1460
func_1461 = relay.Function([var_1459], output)
mutated_mod['func_1461'] = func_1461
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1480 = relay.const([[[6.790357,8.434662,3.357180,-7.173123,3.439424,6.965734,-9.259344,6.152778,-5.877114,7.159941,-6.953848,0.579188,-1.984981,-0.260360],[-0.368172,-7.928127,-6.043858,-0.907419,-8.128374,-4.389879,7.629752,6.488271,8.645309,-6.389935,-6.839502,-2.734515,4.618899,-2.637370],[1.082712,-9.479250,-5.116513,8.635610,-0.258410,-4.643912,-4.146903,1.628067,-2.730238,9.435817,3.431132,8.750389,-4.360867,0.427592],[-0.088185,7.989318,-0.166944,3.325677,-0.871069,-0.194145,-8.250429,1.113573,5.891379,-6.983624,7.051347,3.787313,-1.848710,0.139877],[-4.176500,-2.063243,-0.767543,7.709073,-0.193814,8.066545,5.023593,8.578383,9.841121,1.093633,9.417315,-7.756441,9.998775,-2.096839],[9.556865,-2.790977,-5.353885,-3.154065,-6.090484,3.920081,-7.606862,3.660013,-5.854382,6.820755,-0.825355,-3.845569,-3.336288,-3.989617],[-8.811041,9.432453,-4.211849,-7.173590,3.645625,7.877432,-1.240711,-0.537509,-1.778373,-4.034069,-6.209985,-3.609700,-6.231063,3.380458],[2.203998,4.515585,-1.041487,7.491909,-4.984451,6.807240,-7.616771,-1.830190,0.826732,7.106710,-9.326894,1.032972,8.601894,3.542602],[-3.392609,8.956768,3.769489,-9.372459,8.776344,-9.914952,6.074881,1.790773,9.458773,-5.280195,-7.759726,-1.739606,5.761882,-9.208022],[2.463019,4.613103,-4.974959,6.141076,5.775839,5.130774,-6.667655,-8.084222,7.068233,1.032759,1.854987,6.521545,-2.290677,2.162264],[9.266786,-3.961504,1.259293,2.482781,-9.873801,2.671030,-1.815859,6.054449,4.333442,-0.200944,5.787163,8.718928,1.915959,0.552450],[-3.675942,1.947752,-2.570119,-3.867701,2.851388,6.648431,-1.550201,0.579083,8.379336,9.956795,7.924530,1.635903,-3.408658,8.032667],[3.347563,3.481024,2.126558,-3.637316,-6.952317,-7.713344,-8.472693,-9.683387,-1.710806,0.140304,-3.929570,-4.814403,-6.623412,-7.962332],[-0.619387,-4.799611,-8.062220,4.726283,-7.140252,8.125599,-2.710206,1.171510,4.971175,-6.281178,2.205821,3.714230,-9.839482,8.656749],[2.930070,8.807390,-2.254231,-2.633695,7.881681,-1.450203,8.878435,9.184308,4.880361,-7.467762,-9.181975,5.768998,-0.565393,5.906660],[-6.920678,4.793517,-9.477125,-8.557596,-9.208639,-6.503711,-9.701126,3.915579,-3.824537,-7.516650,1.877110,2.994456,6.990714,-0.970309]],[[6.064256,-4.469244,-1.692097,-9.313193,7.417474,4.605275,5.791154,3.936687,1.573550,5.549516,1.335232,8.296112,-2.562970,-4.793136],[3.789672,7.273335,-8.692992,5.721694,8.037666,-2.647240,-7.041579,-2.390264,8.996193,3.548767,-6.337554,-7.863076,-1.901953,9.840647],[-2.204332,-7.369759,-6.874071,7.155012,-9.339505,7.935135,-1.138569,-6.792703,-8.468451,-5.204579,-8.281355,-8.535063,-7.096239,1.109439],[-3.879412,4.953352,-2.301465,4.047904,1.157523,-6.237837,6.819985,3.533672,3.241647,-8.933936,-3.776812,2.381427,-5.468989,4.821235],[-0.003786,-3.077382,1.358669,-2.685220,9.261544,-8.274835,-0.964590,-7.207582,7.694134,7.550478,4.204045,-4.470163,-8.451338,7.724272],[7.903321,6.001385,6.970496,-9.744342,1.795162,-2.291283,-2.319484,1.896985,6.326530,-9.690876,6.319842,5.813890,5.306360,-0.120644],[0.849771,7.359655,-4.233928,9.154187,-0.604300,2.349554,-1.010905,-5.525991,-0.919804,9.090671,-3.730294,-4.108035,8.328721,-6.210183],[8.129621,-6.073830,-2.429452,1.376167,-1.427549,-9.042582,4.253736,-4.110074,-1.170522,-4.450643,-4.135815,-9.012777,-3.863489,-0.182276],[8.569596,-0.362110,8.108677,3.732538,-5.850650,-1.677043,0.902344,7.689741,-1.369381,-7.798841,5.895253,-1.403811,-1.417052,-6.486463],[2.626764,-2.371259,4.818746,-5.291703,8.100706,9.635416,-0.138979,-2.665893,-4.234905,-0.288350,0.281433,5.007028,-8.365856,-2.030517],[8.155907,3.358958,7.551430,1.565494,-3.850502,8.191772,6.215253,-8.612316,5.089557,-1.063178,-0.610516,-1.199626,0.026574,-0.294946],[3.621402,9.130467,2.018008,-1.449260,-7.146265,-7.346335,4.642306,6.096535,-6.808792,-2.607359,-1.420828,7.528756,-4.205277,6.832763],[-7.330657,8.086794,-3.366518,-8.518839,0.234435,2.059892,-8.771809,-3.997522,7.227332,-3.667757,2.917569,7.636903,8.523259,2.092046],[8.557550,-8.856106,-6.239124,0.478569,-4.280507,9.735444,-1.876514,9.810139,-2.535771,-2.210850,8.364135,9.983641,-3.498613,3.313974],[2.751079,0.893022,3.688637,-2.377298,0.699105,-5.979294,6.393915,0.873724,-3.501664,-0.219005,-8.908867,9.825736,-2.531053,9.942066],[6.433491,-6.660230,0.016502,7.996090,3.023391,-3.152146,-5.501640,-9.283047,-6.951204,1.407218,0.437941,7.681699,4.883885,3.249784]],[[0.467131,-7.179657,3.221181,-9.397445,-7.869089,1.009854,4.345007,-6.920282,7.766624,-5.085733,-6.238193,-5.091130,0.656273,9.367133],[-7.819819,-9.851759,9.038840,9.451705,-1.058898,3.097633,0.040499,-8.844687,8.452284,-3.311312,-9.035642,-0.307577,4.902204,-3.865961],[3.284352,6.140890,-3.748971,9.443048,-2.638025,8.970946,-8.572885,5.405944,8.443111,9.039999,-9.725015,6.789194,-8.842672,1.245737],[2.247687,-1.822114,2.979114,-5.416082,-1.163403,-8.838093,-3.018460,6.472011,-1.047189,6.030712,-5.009974,-0.425486,-4.858947,6.133103],[-5.295066,-2.921690,-1.266426,-5.555388,-3.587039,-0.245242,-2.069846,8.799493,-6.761230,-7.844329,5.079345,-9.023318,-0.400952,-1.999988],[7.958388,1.219833,-6.207900,9.746057,-8.435928,2.316439,-0.585703,7.891972,-6.737902,-4.342027,7.658787,6.950093,-1.923425,7.398873],[2.830529,1.992264,7.688331,-1.083382,9.889571,6.813758,2.662181,-3.598054,-9.119525,-5.459581,9.157402,4.651555,7.429066,1.277091],[-9.221654,-5.931290,7.337651,-3.468254,-9.781076,-4.351049,-8.889446,-0.776162,-9.329613,-2.474217,-2.718256,2.451055,4.610893,2.236825],[-2.276731,-3.071305,4.324365,-7.609895,-0.756714,1.314241,9.800823,-1.455867,0.843822,5.984352,-0.679178,-5.475382,-8.335859,-3.647489],[-0.214564,0.566537,-0.501830,-5.797916,-8.463279,-3.456109,7.563268,-4.179316,-9.381599,3.630444,3.755449,4.866531,-5.480903,-1.128027],[-4.502912,-0.341073,-8.894007,5.209960,0.949973,-0.795251,-3.054078,-5.249061,2.736937,-3.556174,-8.834696,6.066404,-6.690890,6.419081],[1.451935,2.849610,-3.917270,-3.093957,9.719106,6.770892,8.658525,3.074449,7.603604,-0.284003,-7.644137,-8.688231,-2.549700,-3.020455],[-5.858346,5.517016,9.543189,5.129950,-3.973690,3.730597,7.688581,-3.936442,-0.345062,-9.992830,8.679408,-1.405073,6.621851,-5.259444],[3.677491,-5.771444,-6.531433,7.362404,2.640110,4.789318,-0.390458,1.096787,-2.660379,8.917717,8.982080,-6.817924,-8.723462,-3.608929],[7.254736,3.027487,6.038216,-5.202756,8.279220,-5.389418,2.229246,-7.336861,-6.415782,0.566554,6.702863,5.779568,9.856170,9.685821],[1.481075,1.520129,6.392716,0.821155,4.020769,-3.358101,7.073720,2.515956,1.656931,-0.388963,8.051842,-9.554424,-4.144736,-0.663578]],[[5.040549,2.334269,9.301587,7.699183,3.638818,-8.626049,-9.353464,2.788996,9.254033,-3.469155,-9.477768,-8.305751,1.819813,-5.634605],[-1.581327,8.245341,4.933897,-9.714939,8.339420,0.877862,-8.285540,2.760005,-6.195273,-5.712843,9.205067,-8.748537,-5.158945,-5.643810],[5.058243,1.290702,5.499109,2.820890,-1.043118,1.694818,4.501432,-9.309795,-2.115783,1.805745,2.012878,-2.383941,-4.102390,-8.204137],[6.405470,-0.948314,-4.284729,7.477660,-7.354571,-6.619125,-1.639843,5.908993,-5.074433,-2.412335,2.240115,8.334628,8.883509,-2.783982],[8.736776,-4.267917,0.796519,0.702722,8.554117,4.898211,-3.967359,-7.590350,4.831410,-3.845224,2.105361,1.283497,-0.309131,7.918509],[-1.300683,-1.253252,6.287131,0.476278,6.897151,-9.352001,2.025801,7.207024,0.776411,-8.050068,1.233858,-6.786455,9.987967,1.569615],[-8.298688,-3.723574,-9.849954,-8.847917,5.365948,-9.410748,2.082292,1.312857,-8.403398,-7.428249,-9.962861,5.094759,2.967918,5.352452],[4.266843,7.151934,1.580120,-8.568043,-5.429496,7.838429,-2.522212,-3.579130,-1.586870,-1.089204,-5.983762,-7.524660,-2.415324,-2.688948],[8.148775,-9.337275,1.866308,4.131579,1.357015,-9.892155,-8.899280,-7.381852,-7.868517,-8.281257,-3.926096,5.817821,2.618993,-1.248242],[0.380615,-5.019960,-9.964986,8.159353,-3.207748,-3.020977,3.964425,5.959847,5.255870,-3.428749,-9.723140,-8.111771,-2.342596,-1.186230],[-2.012582,4.529450,5.021481,-9.641360,-6.168705,8.570219,-4.077601,7.051234,2.961484,-8.243067,-2.549559,-2.101840,5.993740,2.497013],[-2.233798,-0.627388,-5.157808,8.738164,5.665959,1.568913,0.605549,-4.900424,5.853727,1.443054,-1.765236,4.391427,8.690802,5.118707],[-4.984016,-6.281381,-4.593854,0.124640,-0.454613,1.262617,6.390208,4.473647,2.618032,-4.219717,2.950359,5.888643,8.537871,-6.178374],[-0.853995,-0.134436,4.357791,-7.637532,4.738334,-1.899582,-9.675838,3.354063,5.907061,-5.706964,-8.316831,6.986708,1.000920,1.127268],[3.909644,6.583701,8.436110,-4.053219,-5.220104,0.032678,0.149116,0.471765,8.931498,0.628560,1.559710,8.504743,-6.858610,-9.616938],[-0.442066,4.963808,9.775803,2.668758,-7.195505,5.200124,-3.143371,-1.882786,9.390645,4.136022,-9.880212,1.507657,1.248667,1.689653]],[[4.782443,1.808319,6.974704,7.712131,5.800633,8.679724,-6.981488,-3.188292,3.054811,-9.811445,-3.599202,9.644083,-2.234247,-1.449775],[-0.777311,-4.432971,6.857552,9.966632,-0.674708,-8.228568,5.740152,5.983495,-1.042813,3.634574,-4.831769,-2.155625,2.422222,2.256831],[-1.199516,5.821926,7.314867,-9.595789,9.908228,5.736423,-3.082658,9.726897,5.142654,-9.146986,-2.328715,-5.844568,1.909896,8.698024],[-3.380616,6.334517,3.088875,1.986435,-8.165463,0.528680,0.904284,4.587926,-0.294404,-6.934620,6.855741,-3.810587,-2.354085,-9.240888],[6.774940,-8.481168,-5.866899,4.950430,7.506103,-3.189917,-6.257374,6.496106,-4.251816,-3.895255,-4.729368,-8.675479,9.423817,8.478166],[8.019375,5.225361,-4.921659,8.063756,0.550432,-0.506663,1.459706,-9.547495,-4.966859,-6.243259,-3.696464,-9.853609,8.298177,-3.199858],[8.961306,-0.882744,2.516892,5.220235,7.458168,-5.118400,2.484981,4.581657,1.286006,3.727970,-3.445035,-7.429644,-8.564166,8.184713],[-0.035089,-6.783440,6.126163,-1.305467,-0.465917,-4.887159,-2.399911,0.570964,9.777407,0.506753,-4.712581,0.109759,-1.806249,-8.959712],[-8.221331,-4.706891,4.872378,-8.317666,9.934504,-2.368611,-5.140201,8.611879,5.500120,8.389861,-3.263275,-4.878018,5.894508,3.904942],[7.059731,-5.730302,4.744169,-5.022463,8.624721,8.543493,-7.686830,-7.851846,6.270360,6.807497,-1.937447,3.562698,1.706853,-3.132788],[0.042728,-5.263603,9.764084,-9.330811,7.761789,3.444371,5.073131,1.966073,-0.380323,6.229975,-5.950416,5.751868,8.358038,1.621973],[-3.345056,4.051488,8.677588,-3.011550,-9.056176,1.552211,-0.299259,-1.025286,9.212942,4.664813,0.984016,4.907788,8.888763,7.069272],[-6.245145,-6.813054,-8.286054,-3.807635,3.911097,-5.806353,-2.529198,-1.171279,-6.256015,-3.298970,-4.099410,-0.472507,-2.972311,3.592815],[-9.905890,-3.543482,2.247905,9.889347,-6.933467,5.072380,-6.564213,7.593450,2.788982,9.454683,-0.414868,-8.633412,1.987482,8.705529],[-5.112593,-6.769414,5.651059,4.478415,9.521596,-8.096148,8.151221,2.152949,5.486556,-7.549314,-7.722159,-2.666865,1.848900,-6.622933],[3.065930,2.560629,-3.499463,-5.906609,-7.503231,6.822671,-1.838707,-7.763652,0.777721,-8.048622,-6.092263,-2.165210,-0.599540,-2.388127]],[[2.326404,5.827701,-1.516453,-1.157615,-8.876188,-5.539434,6.633363,-5.897214,1.978822,8.367056,-4.920825,5.651705,-0.752093,-8.366673],[-1.374840,-1.043278,6.686555,8.287154,-3.443999,-1.679535,-9.372573,-7.162331,-4.223685,-5.373238,3.488353,2.007696,1.855924,-1.569096],[-3.607322,-8.824588,2.800302,-7.256194,-7.287108,-0.164726,7.269014,4.172264,7.045520,1.693438,-4.840013,8.383776,9.842291,-1.182194],[7.292267,-6.623139,5.312742,3.147668,-7.524907,5.206803,1.166016,4.514396,-8.744692,-2.736619,-1.588769,-5.638432,8.691647,-8.684408],[-3.870186,4.281299,-2.309027,3.831795,9.583325,-3.550882,-9.228206,-9.129130,-1.869432,-5.602540,4.239593,-1.337758,9.188625,-9.496655],[3.635263,0.630206,3.557009,5.637819,4.366985,4.618505,3.623232,-4.345205,9.222018,0.257761,-9.019360,4.426847,2.334088,-6.994146],[-1.522812,0.680428,1.499972,7.634081,-6.807861,-7.996571,5.584649,-3.414312,-1.294821,-8.867425,5.906680,5.969418,7.903503,3.714301],[-3.757893,4.796874,9.494132,-7.999892,-6.180571,5.540938,9.092394,-8.550846,-1.009401,6.995335,2.574882,-2.601303,-4.376346,-9.167681],[-3.171791,-1.552544,1.382770,1.126627,-4.803629,-5.924483,2.004081,2.021433,6.366669,3.657432,-4.829487,-8.804718,-8.066014,5.672696],[-8.562573,8.031277,3.780144,-2.590560,4.894431,3.805521,6.522403,-4.958705,-9.494905,6.181460,8.977020,7.405365,-4.782315,0.777398],[-5.079282,7.854358,4.141114,-3.799868,-4.518597,9.521437,-6.324714,2.815655,-2.182792,9.419637,-4.883955,9.043460,2.539969,5.250634],[-2.982378,1.989798,2.381753,-3.457784,0.537060,-3.173674,0.541419,4.810617,-0.622615,7.728239,5.266330,8.449839,-9.123799,5.428631],[9.175507,1.578226,-3.677908,4.068502,9.500601,-2.283405,-4.035936,-5.620373,-5.541682,0.146512,-1.049559,-3.958722,7.900920,5.680196],[-5.755525,-0.891179,-5.063907,5.531832,-6.268746,-0.101105,-9.890195,-7.851117,0.244953,-7.490670,-8.222923,6.875446,7.834898,-6.687967],[0.424447,-3.706107,0.935804,-7.205243,-6.221726,-2.885612,-5.093173,-6.042136,5.417738,1.315529,7.254314,-9.209444,7.947074,-5.756262],[3.425904,-1.266206,3.274661,-4.200393,6.532703,-6.503124,6.034068,-6.377616,3.215198,-3.245857,1.746191,-0.675921,-0.388038,-9.481870]],[[-9.121942,-7.543318,-2.165278,-7.106604,8.847988,-1.581470,0.878276,-3.907315,2.563694,-7.945528,7.855334,7.212351,-7.529516,5.197219],[-3.574133,4.141183,-6.102101,1.711685,-1.266999,-7.103879,-6.243523,-8.708584,8.203246,-8.205542,8.526668,-4.693674,-1.905987,7.316585],[9.575055,0.282642,-9.315175,-4.358053,-6.900288,9.389681,3.153303,-1.785682,-3.914580,-2.120416,4.380093,-0.993915,1.645339,3.151834],[-3.648910,8.854630,8.087826,-4.800757,2.847438,-6.969963,-0.287593,-3.196842,-2.234481,4.107539,1.187679,-6.379780,0.191255,0.450605],[9.502006,-5.360382,4.221986,2.852867,-3.683251,-7.543100,-7.563542,6.111677,7.638354,6.158590,-2.112694,-0.102529,-0.076683,-1.958324],[-3.641329,-5.685597,-6.519437,5.906456,-1.446371,-8.370500,-9.243810,-5.558086,4.322100,5.562966,6.416965,-0.589203,-6.512755,3.141774],[-8.138275,-4.995043,6.969501,-4.643412,5.440130,6.116779,2.555261,-1.534512,5.711121,-1.109522,-8.248200,0.496911,-5.817743,9.870052],[-8.056935,4.054079,-9.404958,0.161047,7.560356,7.096919,-2.760731,-4.557877,-4.275886,9.347268,-1.514366,-2.573931,-3.154125,-6.797678],[-5.212938,7.245184,5.319184,2.152388,-1.351295,4.842920,-5.555604,-2.636470,-6.933401,-5.745200,2.232000,-3.735151,-5.230599,-1.497241],[-7.298666,5.853176,-5.130378,2.597045,-1.591594,0.104507,-0.763033,-4.757680,5.576804,3.852300,2.631252,-0.189067,8.845160,-7.982852],[9.831934,-1.048848,-4.973161,-8.609179,-6.248320,-4.561703,-6.700691,5.940651,-7.326100,-2.526076,-9.184790,7.658964,8.451355,-1.223418],[-9.672234,-8.371636,9.883090,6.004382,7.099447,-3.592144,-8.450844,-0.523252,-4.751014,1.717840,4.426038,-2.168390,0.321361,0.445773],[7.352041,7.449466,8.259094,-8.541701,6.589660,-6.771896,9.019493,-5.897607,0.611273,4.773290,2.973050,-6.665778,-9.226628,-6.838182],[8.578362,-2.293514,-3.408980,-4.251895,-4.861045,-9.916075,3.175965,-9.845369,-7.560817,-6.335553,3.377131,0.559046,-1.144712,8.859513],[1.119265,-8.836969,6.971877,7.576180,-5.640764,5.471716,-5.315843,-3.395690,-2.824571,8.424222,-6.675934,-5.692686,9.951318,-0.224481],[-0.835783,-6.596840,6.055622,-6.568601,8.677508,-8.564170,3.487239,-5.759041,-2.181221,0.840882,3.634703,7.864095,-1.335524,5.657636]],[[3.041798,4.633686,5.148350,4.676026,-3.357931,-4.668906,-1.552527,-5.203797,-3.005383,2.767935,3.007557,-6.964609,5.136886,-9.884772],[1.654198,7.812691,2.249904,-4.420225,-2.799074,-4.057785,6.321577,4.253911,0.405201,-1.213740,-6.987973,-0.944433,-0.199009,7.566800],[-8.372219,-8.004832,6.596837,4.774960,-7.618566,-5.438433,2.860248,-5.372206,4.866632,-4.633805,5.741778,-7.341327,0.058832,1.707805],[6.822741,5.893251,7.159827,-8.813061,-3.663818,8.413919,0.690796,5.490162,-2.617872,-2.154503,3.068096,2.059167,5.862555,9.584589],[-6.306401,-6.435687,6.427212,-5.554799,6.503825,3.963552,-5.356796,4.336701,-9.894679,-3.358677,-0.950077,-6.573722,-2.282116,-9.142739],[-8.346517,-6.213245,-6.559387,-5.778367,-8.593482,-8.492376,3.705573,6.589121,5.973110,-6.762378,-7.553748,-6.346292,3.940793,-7.438186],[-5.944516,8.243734,-0.935699,-0.383987,-4.356541,-7.800233,9.053732,0.458578,3.240511,-1.494680,3.262732,-7.315791,8.436443,-8.948811],[-3.240165,-2.595944,9.714449,6.005581,8.229258,-7.535935,-0.023174,8.612989,-4.887986,0.082425,7.108200,-3.683599,-5.430362,-3.760576],[1.979464,-2.752890,-7.010105,9.107559,-3.918367,4.434045,-8.048741,5.222584,3.798824,-8.991130,1.198002,2.459718,9.098557,7.593843],[-3.429508,4.841373,-2.708442,0.439555,6.342719,-1.166818,9.733667,5.137513,-7.399274,1.296445,1.163889,2.767613,5.440543,-6.648777],[-0.423972,-4.367319,2.396813,-5.147215,9.350821,-8.274812,-3.153366,-6.270552,6.340510,4.611995,-3.294484,5.516432,-4.807694,0.761300],[3.618137,-3.793732,0.013901,-3.209751,6.677703,3.454611,8.596095,7.102279,-2.822299,7.861664,3.363514,8.281302,9.355434,-4.634902],[6.357669,5.672131,2.807689,-7.500153,-5.979722,7.581596,-0.970848,-6.693421,3.749864,0.522884,7.677728,6.062034,-1.559346,0.929796],[3.121120,8.421840,5.700830,1.847814,9.674915,4.640879,-5.843749,7.482391,9.892770,-2.038787,6.517332,2.816042,0.480875,1.268533],[7.139833,8.644072,-0.947010,-7.349158,-1.783746,-6.893401,9.055542,4.959020,8.367898,-3.858676,4.297842,9.732997,2.880076,9.863636],[9.026932,-5.990799,5.460303,4.160587,-1.619698,7.763217,3.484493,-4.333885,-9.878514,-9.239455,-9.134477,-8.598714,-5.746973,-4.500619]],[[-7.941796,-4.383411,0.693633,7.910288,-4.775673,-6.877598,-0.390091,9.600001,-5.718648,-5.201880,-9.669277,-2.328042,-0.110125,-8.475093],[-2.870752,-3.797682,-3.359128,-2.187543,4.116034,5.157177,-2.623849,-1.257796,8.038267,-7.934873,-5.842631,-7.757885,8.092022,0.515067],[-1.862151,-5.633700,2.391725,4.512959,5.465742,5.601840,4.749846,8.068018,-7.619857,-5.279845,2.874463,2.692754,-8.093390,-2.500595],[-5.765347,6.111039,7.351887,8.129196,-5.098001,5.157574,-5.042468,-0.076414,6.054302,2.411481,4.895106,6.743811,-2.640128,-4.997858],[5.042222,6.591615,2.114636,-0.511678,-6.038864,0.430904,-9.447658,8.828697,1.595747,4.038975,5.114926,-4.575806,-8.991351,7.933802],[3.213897,6.396938,5.761828,-6.226303,7.680668,0.147375,4.732853,-4.613501,6.636426,-5.506090,6.540773,3.630317,9.268343,-1.746034],[-5.571594,-7.548470,0.785803,-8.587595,-4.123637,2.309668,7.987347,-7.979849,6.981617,-6.306586,-1.793433,3.640481,-5.569565,-0.205652],[7.656516,-8.681702,-9.135341,6.210938,-5.642411,-4.948837,-8.393919,0.252301,1.749162,-4.389169,-1.002317,8.766503,-4.715032,4.755117],[-3.218943,-6.872712,-0.921134,5.194368,6.639663,-5.706618,-9.123951,4.601400,9.832613,-4.682128,-9.346075,3.133907,3.726897,6.322940],[-0.755581,5.612827,-2.762106,-5.525923,-8.025702,0.382090,-6.161069,2.326170,9.866231,3.452686,5.117646,2.652701,3.415653,9.759006],[8.521226,-7.777420,4.114452,-8.857590,2.314006,-9.161066,-5.715097,5.126226,9.288181,8.783116,0.271691,8.598150,-2.110897,-6.472214],[-5.430960,8.347757,-4.869377,3.452180,6.979886,2.316289,-7.839103,-7.402039,-1.917667,3.257592,-9.014979,-3.061344,9.537293,5.607201],[-5.794805,4.279397,6.992357,-0.848168,-2.982299,0.426183,-0.530697,-6.640601,-4.456019,3.525917,2.462434,-3.752409,-0.330153,5.944815],[7.507384,0.794591,1.407117,-4.229373,6.925918,-7.990410,-6.947888,6.799617,3.436086,2.372848,-0.200661,-3.777188,5.065054,-5.372203],[9.339134,6.844573,-7.961463,-9.716042,-4.343699,-8.922903,1.641656,6.478080,-6.705382,-6.504857,1.416768,0.776762,7.200157,3.325258],[-4.083992,-4.878324,0.341101,-7.396979,-3.409202,2.008706,5.092079,2.871672,3.899556,-2.240519,9.793250,9.235974,-4.908583,6.088856]],[[-1.311035,-5.786421,-4.627318,-4.736845,8.095760,5.783508,4.978663,-6.753212,-4.253228,6.125652,-4.531878,3.508521,8.530475,-2.701026],[9.970922,3.303231,-9.758563,-1.625625,-1.610194,2.034559,-1.968150,0.310488,7.090580,-4.561532,5.073994,9.760953,-4.138020,-5.898393],[8.714516,8.188075,-4.025476,-5.182528,9.872932,4.541234,8.933450,1.483200,1.071512,3.867498,-4.650529,-7.594983,-2.886019,6.328464],[-1.123992,-9.994325,6.075264,-9.481526,-6.020324,-8.662733,5.522997,6.173252,-9.163900,-1.428693,3.259378,3.593167,-4.716993,-7.800215],[2.932399,9.284660,2.724608,-0.544051,3.905802,-7.119374,4.320897,3.524641,-6.553080,-7.714563,1.021635,-3.482300,-0.036619,-7.905261],[6.691442,5.428753,4.439866,-5.189351,-8.963814,4.904145,1.568954,7.217937,-1.526528,9.904303,9.506746,-4.264265,7.727383,-7.132667],[-1.305068,-5.347084,2.185694,-7.233116,-1.621582,0.732634,7.853186,-1.027841,-1.098631,-5.277885,4.222502,2.648600,1.619005,7.159462],[-3.276685,-8.282884,5.376896,-2.024367,4.315358,5.977511,1.505305,-6.037530,3.595049,6.000993,7.409637,-7.421909,1.449404,0.427284],[8.090833,5.342387,-6.992368,-9.943791,-8.272773,-8.721663,-9.896190,4.532208,-5.070647,-3.809443,5.075043,7.556066,0.010262,6.998630],[6.355361,3.788157,8.867976,-8.366161,6.009377,2.574614,9.189998,3.227198,4.329126,3.279495,-0.253330,2.451182,6.654148,-8.223306],[2.361453,-2.677797,1.646751,5.498997,-6.936936,-2.075836,5.092478,-0.613491,-0.586821,-7.033970,-4.539718,6.511582,0.223596,-4.788314],[-0.053881,-9.303439,-0.243673,-8.836729,-5.770952,0.852657,-9.387143,-2.046200,2.090010,-2.295352,-0.943815,-3.883828,1.942598,-8.659742],[-7.003523,8.295406,7.829757,-0.611816,-2.804118,1.564430,2.972228,-5.984119,7.046801,5.432099,5.242347,-9.081188,-3.651003,-8.709596],[-1.249033,-7.506517,-9.410441,3.723038,5.270895,0.683683,5.002518,8.188718,3.777852,-2.112420,-2.933564,-0.855703,0.817911,-4.358737],[4.086257,0.143045,7.819086,-2.915724,-4.941435,6.705451,-0.642460,0.887427,-8.585812,-6.591395,-1.399096,-3.787052,-2.228152,-9.502889],[8.934571,5.984398,-0.956372,-6.889291,-3.588838,3.047420,7.499573,1.151108,5.201254,5.079495,0.391269,-8.137091,-5.940985,-6.610170]],[[8.335784,-3.621904,0.890331,8.202130,5.035522,1.337365,-9.459466,-5.944082,-4.087789,7.427754,-3.367881,7.412439,-3.958650,-7.016258],[-9.504013,9.808499,7.419090,-0.431414,1.313096,-4.010450,4.042816,0.560261,-0.775632,9.153514,4.543335,3.094453,0.769422,1.490780],[-7.279388,-5.594375,-1.276266,-1.455102,-5.151061,4.449095,-4.135849,-4.451138,6.017013,8.863920,6.152410,-5.219713,-5.875332,-5.121541],[-7.733585,0.719019,5.857018,6.775958,-5.062836,-1.293447,-0.513746,-1.142372,3.903676,0.472796,-9.577564,3.808411,6.499825,-4.210574],[8.495741,-2.926252,-4.940341,-7.534936,5.605444,-3.002905,4.938953,-1.356035,-6.893730,-0.138389,3.487726,-0.841815,-3.917858,6.314554],[-8.962295,0.233990,4.012713,5.194939,-8.372964,5.412194,-2.394396,9.303437,-8.293723,3.682427,-7.833951,4.028129,0.089754,-3.404019],[5.526977,-6.886883,5.042414,8.920934,1.467044,1.800206,-9.547576,3.290306,-6.172003,-9.986572,4.196100,2.561614,7.775320,5.219058],[-8.311709,-1.721708,-2.893599,8.643078,5.637796,-0.868684,-3.285348,-7.300630,-1.695588,0.053604,-3.712761,-0.960823,6.725730,6.663882],[-8.737211,-3.032181,-0.967795,-9.177514,5.700824,5.772031,-9.572634,6.910438,6.310605,3.092004,5.656097,-6.246684,-0.276359,8.175119],[-4.461688,-6.819342,-6.386722,7.718943,8.345640,7.273614,-8.575292,8.457342,-3.517292,1.094333,-1.071538,9.311262,5.426208,9.277005],[-7.215168,4.148581,-5.228235,5.391496,-5.569783,0.414990,-9.285861,-9.649341,1.287799,2.797061,-5.635613,2.430536,7.523084,0.921117],[-7.042646,-4.054616,4.117168,6.692479,7.622402,-3.778349,-3.952012,-3.646483,-6.291933,4.360858,-2.050433,5.750545,1.242112,-5.982598],[-5.508664,3.585456,-3.021975,5.539993,5.888464,4.113734,-3.240729,9.254331,-0.218245,6.952995,-8.413792,-5.787896,-8.364658,-6.006866],[7.972617,-0.178140,-2.804618,-2.569438,-4.471795,-3.096330,0.247472,-7.291994,-2.674713,-1.895537,9.243358,9.825054,-2.835848,2.356865],[-8.362440,-8.097855,-9.888846,1.890876,-3.537027,9.552722,7.860679,-3.051743,-3.211574,-4.053698,-7.875993,5.385494,0.016976,-6.918790],[-5.356667,-3.023726,5.014913,-0.554423,5.779206,-0.367572,-1.214349,-6.195920,0.210517,-8.982220,-5.221140,-7.012381,5.198278,-8.681017]],[[0.531890,-4.947261,-3.641944,-9.381574,1.584626,1.749395,-5.420210,-7.145279,-6.278496,-2.501639,2.360100,5.548243,-6.006594,5.710341],[3.820610,-4.700371,-5.140941,-8.565927,3.868449,-5.910298,-0.721584,5.920543,7.403431,0.848056,1.035419,2.464588,-6.766995,-7.153969],[8.857364,-3.201874,8.948743,1.184113,6.863064,8.025620,-8.159277,0.147538,1.253328,5.872634,-7.556830,-8.186089,-0.994607,-4.844136],[-5.470208,8.846137,-6.152279,-8.762411,-0.437559,6.695182,-6.156923,-0.417003,-6.804437,4.669636,9.730272,-7.964952,7.889051,6.817228],[1.081831,-7.681588,-9.475602,7.629731,4.169584,-3.940669,4.326968,7.776600,-1.789204,-1.243965,4.208376,4.395429,-9.660984,-6.813630],[-3.427357,8.651863,1.801026,-6.535116,-1.732346,6.841976,0.257605,1.199497,2.657726,-8.459994,6.026868,5.069262,-1.236702,0.404806],[-8.093907,-4.658063,9.824728,-1.194157,7.708175,-3.879352,-3.600671,5.883552,3.299826,-8.607772,9.392389,1.200900,2.571295,9.563916],[4.657266,-8.883327,-8.040871,-6.437883,6.601601,7.149136,2.894088,-0.728113,3.951839,-5.409465,-1.705452,9.204574,8.083178,-0.774401],[8.332264,8.648258,-2.754690,3.089579,-5.634266,-0.987114,-7.906730,4.336713,2.772173,-4.413241,5.669973,-0.583861,0.090511,-4.459067],[-9.753160,-1.669941,-5.634315,-0.629886,3.174136,-5.731141,6.631506,1.130328,-7.132325,-4.550004,-2.658038,-3.525505,7.037088,-4.472417],[-2.117031,4.412511,7.848534,6.152734,8.894126,6.898175,0.035710,5.879698,-1.283267,-3.227202,8.709245,8.721936,0.543026,9.065046],[-5.219542,-4.858872,-1.339349,6.804027,3.356620,-9.510311,-2.579096,7.247531,0.421372,-3.731683,-4.621926,-5.994463,3.455275,8.818838],[6.655217,7.784631,-1.830657,-4.441967,-6.880118,4.478598,-9.330665,-5.572005,0.802235,-1.559665,-0.083780,-0.269137,-8.685475,-9.393546],[-7.495790,-1.209358,2.408797,0.780477,5.672067,-7.103629,0.780259,8.474826,6.942529,-4.164123,-1.486712,1.915220,-7.286709,7.784441],[-6.188137,-1.275552,0.702650,-2.422783,2.083448,6.657503,-8.582290,-1.175177,8.697783,1.299623,4.387943,8.726776,1.585845,7.983414],[-9.297065,-6.806839,-7.056194,-6.217218,5.260992,-7.937690,-7.759434,-3.665181,-2.110360,6.803838,-5.537339,-1.380259,-6.236208,4.205563]],[[6.768484,5.069052,9.702411,-9.540874,0.309300,-4.439528,-1.930927,4.698717,-8.262400,0.777518,-8.735423,-7.713181,2.344716,-1.579359],[-8.716699,4.416236,-7.403845,5.152557,-1.688455,-4.348355,-4.078746,5.473502,2.531663,-6.015506,-1.140416,-8.710033,-4.243920,7.753723],[-2.505426,2.627005,-8.024696,-7.366820,-3.731689,-6.351002,2.710783,-1.916149,7.989833,-4.151604,-6.470995,-2.986660,-5.784531,1.240892],[7.376720,0.964543,-2.212305,-1.822877,0.480027,-7.182802,2.120507,7.788776,8.738219,-5.222995,6.530769,4.618467,0.081852,-9.342822],[7.057019,-8.905533,-6.191626,-7.584427,9.729726,5.641458,3.593997,-9.710320,4.892038,2.803184,0.911824,9.635557,1.406046,-5.656855],[9.474453,-5.714456,-6.379750,8.651917,-7.340159,8.452171,0.453613,5.396161,-6.352377,5.759966,7.429099,-6.139468,-1.085090,3.502433],[0.787521,6.059651,-6.421007,4.001531,-0.643102,5.649408,-4.944032,-4.913699,-9.044696,-9.173236,5.766974,-0.950307,-9.272063,5.330167],[-6.071236,-0.390849,-6.968275,-8.145865,-5.249472,8.009133,9.165018,6.362596,-0.644213,6.381127,1.901552,7.653078,4.899939,7.381371],[7.261823,-1.352954,7.575922,8.752242,-3.834337,-8.809667,7.878508,-3.501135,0.666569,-3.932958,1.536915,-5.127599,8.512052,-0.963004],[9.532770,-8.909308,-6.226110,-8.278546,-6.281014,-5.007880,-6.958769,6.171332,-6.942806,-7.894933,7.501512,4.054722,-9.756466,-8.954043],[-9.671620,-3.425045,-7.722344,-4.190388,0.078715,4.891122,-6.372112,0.288486,-1.217554,-2.289292,-2.486416,-7.409891,3.051269,-7.468440],[4.827080,6.788705,5.461925,4.301064,-7.811224,4.428678,1.089496,5.518139,-4.876009,-2.908977,3.740794,6.250020,5.257185,-6.719897],[-1.082843,-5.124578,7.783656,9.059892,8.845768,-8.717503,-8.383856,3.481679,-1.112729,3.180581,0.154646,-9.125950,-4.244994,-6.740845],[7.128874,-5.597480,-5.023211,-8.607492,-3.310107,-3.090871,-4.782655,7.064050,-0.679537,-3.546194,-9.607081,7.824377,8.178315,-2.407272],[-7.758598,9.491795,7.600485,0.482085,-1.825013,3.744279,8.780305,-7.347582,4.291968,-2.537589,6.888942,-1.263655,-8.589723,3.630812],[6.351462,0.291264,3.919865,-7.442434,-6.627980,-1.372638,4.348393,9.407759,0.456479,-2.562156,2.401576,8.419613,-7.817748,-3.546603]],[[4.242913,-4.523865,-0.143511,-2.128533,8.810538,-4.760158,-2.570781,-4.649669,2.424402,-8.990835,-1.647465,4.367309,2.208680,-5.497136],[-4.417981,-9.746166,-4.185227,3.912345,-6.090943,-0.474047,-5.437469,5.662896,4.954913,-4.931070,9.178092,-8.442742,0.794599,-3.146741],[-2.364678,-4.908201,2.336421,-3.484595,-5.122772,-6.632105,-4.511754,-0.972680,-9.410760,4.701981,9.841882,-5.076256,1.451047,-6.402696],[-5.552319,8.497786,0.295431,8.505828,9.018714,0.439167,6.298594,-2.952665,-4.106425,-0.269360,1.938503,2.823886,1.227561,0.836596],[-7.362238,-9.034325,-6.899103,5.186531,9.808311,8.136067,-9.962825,-6.202794,-0.909405,1.928658,9.409149,2.682969,-4.297557,-4.097220],[-5.880065,-5.146660,2.886061,4.241965,-6.685568,-1.920163,-3.463125,-5.009657,-8.762839,-1.915322,-5.490013,9.713448,-0.308992,-5.718355],[6.889541,-5.047689,-4.825821,-9.871878,4.655889,-3.793688,-8.649070,-6.563924,-5.072806,-4.736597,6.943400,3.134254,-9.156733,-8.318573],[-3.378124,7.974053,4.864251,8.812271,-2.564166,9.721296,-3.891477,-2.079235,-1.615028,4.328811,7.658439,5.835850,-6.908510,-9.345077],[-7.531025,6.256737,6.505810,-3.698482,0.982745,3.104636,-0.892730,5.988522,-8.556406,4.719190,-4.434784,7.368523,-9.935497,4.949078],[0.220587,-1.802338,-4.956662,-6.801948,-0.806304,-2.493196,0.455136,-5.225737,-3.568578,-4.229511,7.858040,-7.932457,-4.237881,3.870469],[-4.292140,4.273313,4.636281,4.355680,-6.059930,0.975419,6.363877,-8.125240,4.975226,-2.322704,-0.541026,-7.535177,-2.580956,-5.786151],[-3.585975,-7.701567,-4.901826,4.927323,0.984958,3.075947,-1.777216,-0.082603,-8.852218,-8.015019,1.648687,4.320123,4.553331,9.955082],[-5.291033,-9.246349,-9.188231,-8.907697,6.515513,-0.064856,-9.724006,-4.121752,-0.015936,-4.432345,4.261329,9.334232,4.493314,-0.041197],[-3.218659,3.351549,4.330318,-9.210740,-5.575683,-3.069256,-1.931382,-7.991897,-8.723450,0.024389,5.483714,9.985736,0.796115,-6.206503],[-0.297170,6.112336,-7.486246,9.696254,2.369038,1.902825,-7.823846,4.254646,-5.894420,-0.051661,-0.512039,-8.713905,8.104581,-2.472227],[-4.062125,-4.552938,0.332625,6.605530,-1.004680,-4.525333,-0.885433,0.099818,3.613565,4.955950,-7.107840,6.122506,-4.237619,-0.349245]],[[2.628467,-6.668218,9.408034,-5.549835,-8.656991,0.382007,2.775830,-1.027938,1.569052,-7.998111,-8.832404,7.351079,4.343896,7.285279],[-5.072312,-0.217267,-5.468571,5.797799,4.724686,5.949570,9.452734,-8.970988,-3.163462,4.154153,-4.061140,-0.336266,0.167230,3.591314],[-7.504821,-0.680993,-0.774835,8.791323,5.007235,3.424793,-3.535026,2.552208,6.175819,-7.446958,-5.308874,5.460512,-1.818278,-2.722910],[3.256548,-3.323507,-7.133995,-9.407496,5.708918,-2.612313,-8.935477,3.363920,-3.390203,4.078776,-0.184959,0.311674,5.596380,7.119226],[-2.011670,7.867876,9.160400,-5.737390,4.465089,5.829235,-2.866819,7.352113,2.441494,0.849749,4.329913,6.413920,8.718475,1.585744],[6.670944,-2.122319,-5.132555,-8.457012,6.527901,4.942133,4.631542,-2.043206,-4.415887,3.177436,-2.866325,0.120697,4.736826,-3.130395],[0.024614,7.975167,-8.556574,1.610282,3.090283,2.302002,-1.064426,1.349335,8.370657,8.971886,-4.387847,2.705850,9.576341,-3.630395],[5.253732,5.778761,-8.103845,9.375435,-9.059417,6.026162,-3.356822,8.753036,-9.010460,2.636988,-4.302266,3.367920,2.370322,5.781720],[-0.225924,3.183983,-4.054359,-3.752934,2.472260,-9.586636,-6.282659,7.701827,-3.053515,4.539612,-2.650347,-0.959359,9.070835,0.792740],[-7.551441,-2.570754,-7.736088,-9.668077,-4.012196,-8.045650,-1.403956,-6.681131,-5.495894,-0.645826,-9.415009,1.882283,-1.575049,8.954574],[-2.021932,-1.417157,9.448298,0.882436,-2.360366,3.759680,-4.131514,-3.348831,-1.462074,-6.425702,-2.199911,9.441046,-7.766629,3.813723],[-2.522387,7.093576,3.797152,2.358883,-2.506475,4.324536,-2.697532,3.616184,-2.614413,1.450438,-9.230571,5.195090,-3.844750,7.724087],[-2.539514,1.429432,3.248887,2.415897,-8.264525,-5.647913,3.387696,4.988460,-2.334624,-7.117477,-5.166683,6.581281,1.647328,-9.688362],[2.119111,9.062721,-4.792477,-6.658871,1.392398,9.237050,-0.315331,-5.872652,9.011024,1.292343,-8.918774,-2.123210,3.800580,-1.284420],[-5.202815,4.630010,-9.245162,6.875758,7.958181,7.198363,4.820998,7.032038,-2.864749,7.023871,8.844432,0.747277,1.853250,9.918807],[0.294937,9.320099,-9.529968,9.667707,9.998025,8.276486,-1.162036,0.070779,7.269623,6.355157,-9.620168,7.554193,2.034949,-5.285210]],[[-4.772176,1.103840,0.686942,-2.415802,5.789224,-0.024040,-3.292854,-0.546396,-7.147777,8.201078,-0.028964,8.648319,4.050276,-4.664238],[6.400947,6.311059,-0.975722,1.327844,-8.398030,6.676692,8.170399,-3.479527,-9.814506,-4.652772,7.564136,-2.139812,-8.931527,-2.616882],[6.753845,-2.006673,8.425207,-1.819847,2.049560,8.107521,2.299973,3.890418,7.900766,8.601352,-4.558721,-9.701408,9.101443,6.815977],[6.332092,0.393016,4.245730,1.542179,-7.621469,-2.658774,-1.783217,7.038384,3.085593,-8.787870,-7.796541,-4.501582,-9.685652,-0.569000],[6.554109,3.406650,-1.412983,5.820366,2.914953,-2.543517,8.127093,1.638262,1.457675,8.051837,9.253224,5.622474,2.388904,7.674900],[-3.812536,2.807809,4.087431,-6.172650,-2.913300,1.112293,2.722099,1.099892,6.556406,-3.829838,2.840926,9.682786,8.736035,-9.310120],[-6.894027,-5.369921,-3.497363,-7.879879,0.773760,2.623726,4.854483,9.745268,-0.137071,0.303982,9.845985,-7.866317,1.992161,4.299025],[-1.342789,-6.481173,0.824899,-7.458980,-2.413143,-1.649823,7.919742,0.611207,-7.180709,5.778400,4.062879,-1.476143,-0.251812,0.538156],[-3.678860,9.634994,1.991693,7.337284,-2.952479,-7.361448,6.509247,-1.299614,-4.086013,4.200119,-9.748030,6.831194,8.055148,-1.107648],[0.281536,0.962881,9.787934,-2.091600,-0.601742,4.452421,6.274207,-3.292340,-9.038592,-3.200666,-8.035609,-1.951183,-3.198249,6.704012],[8.350033,-4.489783,2.135908,0.687248,-6.260527,0.443690,1.779766,8.951511,-9.210055,1.973224,5.397687,9.435465,7.913937,-3.093493],[-3.446868,3.270046,-3.920251,-6.471387,-2.365206,-1.306673,2.539102,0.406977,-6.184546,-0.925024,-0.250517,-5.174480,8.897900,-0.833992],[7.602217,-8.055650,-1.066230,8.026240,0.092369,-6.461153,1.997009,-4.946960,1.816623,-6.389039,0.298208,-8.676263,-2.008146,3.793975],[4.544558,3.589853,-3.640902,-5.529003,0.251602,6.079434,8.815617,-9.990336,-9.326077,2.382860,2.695289,-4.471907,-8.258373,-5.224276],[4.506762,-1.911057,4.706959,3.656251,-7.331798,-2.447258,6.712076,-4.457913,-6.693102,-9.155732,-7.326611,-0.251069,8.223787,-4.208253],[1.514116,-0.028524,-3.064416,7.712508,-8.428968,5.778619,-2.174669,3.660185,-7.674586,-4.490444,-6.516516,1.793595,8.793856,-0.634235]]], dtype = "float32")#candidate|1480|(16, 16, 14)|const|float32
uop_1481 = relay.log2(const_1480.astype('float32')) # shape=(16, 16, 14)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
const_1488 = relay.const([8,-2,7,-5,-6,-4,-3,8,-7,-8,-10,-4,-8,1,4,-2,8,-3,8,1,-8,9,-3,3,1,-6,-4,10,-1,5,3,-8,-5,-7,6,7,5,7,-2,-8,2,8,4,7,6,-3,-3,-9,9,-1,6,-10,5,-8,8,2,10,7,7,-3,7,-4,-6,-7,3,-1,6,-1,-1,-8,7,-10,-1,2,10,-2,1,5,9,2,2,10,-7,10,9,6,9,2,-2,7,2,-8,5,10,-7,-5,-8,-6,-3,-2,6,8,-5,-7,-7,-10,6,-3,1,-3,8,7,3,10,2,10,-1,5,-3,2,7,-10,-7,-3,8,9,4,-1,-1,-4,-4,-3,5,8,10,-7,-1,-1,-9,9,10,1,-5,-2,-5,9,9,4,-10,1,2,9,2,-2,-4,-8,10,-8,-4,-1,-7,10,-2,1,5,-2,-7,-2,10,-1,6,9,-1,-1,9,7,2,-1,10,-6,1,5,8,-8,1,5,1,3,10,8,-6,5,-2,2,-10,8,6,-1,1,5,1,7,-3,-5,-4,4,7,8,8,1,8,-1,-5,1,2,-5,-7,6,-3,-4,-3,9,-10,9,-8,-7,-2,-1,9,-2,-1,5,-9,9,-1,1,1,-1,-8,10,3,-2,-4,-1,-6,-5,9,-4,-10,-2,-6,-4,-4,10,7,10,5,-4,-5,-3,7,-8,7,-5,-7,-7,-2,3,-8,-10,3,5,-9,7,4,-5,-8,-9,6,-2,-3,-9,-2,10,5,2,-1,-6,-8,6,-4,4,5,5,-9,8,7,-4,-10,-6,-6,1,-7,-8,1,-8,-5,7,8,-3,10,-7,-7,-4,7,1,2,3,-10,-4,-4,-6,-7,-1,4,9,5,10,9,10,8,1,3,9,6,-6,6,-1,6,7,8,-5,2,-9,-1,-8,10,9,5,9,-1,-4,-9,-1,9,-7,4,3,9,-8,9,-1,5,-2,-8,-4,8,-8,-2,-3,7,-1,-6,-6,6,-9,-9,-4,2,7,-1,-9,-8,7,7,5,4,2,2,-8,3,-3,-8,7,7,2,-6,6,-9,5,6,8,8,3,2,-6,7,-5,8,-6,5,-10,8,-6,2,-3,-3,-10,2,1,-5,7,8,-6,6,-9,10,4,7,5,3,-10,8,7,5,4,-7,-9,-6,1,-9,-3,-10,-6,-8,10,8,8,-2,-6], dtype = "int32")#candidate|1488|(450,)|const|int32
call_1487 = relay.TupleGetItem(func_65_call(relay.reshape(const_1488.astype('int32'), [5, 10, 9]), relay.reshape(const_1488.astype('int32'), [5, 10, 9]), ), 0)
call_1489 = relay.TupleGetItem(func_68_call(relay.reshape(const_1488.astype('int32'), [5, 10, 9]), relay.reshape(const_1488.astype('int32'), [5, 10, 9]), ), 0)
func_242_call = mod.get_global_var('func_242')
func_245_call = mutated_mod.get_global_var('func_245')
const_1493 = relay.const([-3,-4,1,-9,8,-10,-8,7,9,2,-9,3,7,10,-1,8,9,4,5,9,-5,-4,7,-8,5,4,-4,-7,-4,9,-6,-9,1,5,7,9,2,-4,-7,7,-4,-7,7,1,10,7,1,3,9,7,-1,-9,2,-1,-8,2,-9,-2,2,8,-5,8,-10,5,-8,-9,-3,-1,4,5,-8,5,3,-4,1,6,8,2,-6,1,-1,2,-1,-10,-3,-8,-1,10,2,-8,-7,-1,-2,-5,1,-2,-4,-8,-7,1,-3,-5,-4,8,-1,3,3,-5,6,-3,3,9,2,-4,6,-3,4,1,2,-6,-8,-3,2,7,-5,6,8,7,3,-2,-9,-7,-10,-3,-10,7,9,-10,-7,2,9,-4,-3,10,-4,-4,7,6,-2,2,-1,3,-1,2,1,-2,1,-9,6,-10,-2,-5,-8,6,1,5,9,1], dtype = "int64")#candidate|1493|(168,)|const|int64
call_1492 = func_242_call(relay.reshape(const_1493.astype('int64'), [7, 6, 4]))
call_1494 = func_242_call(relay.reshape(const_1493.astype('int64'), [7, 6, 4]))
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
var_1500 = relay.var("var_1500", dtype = "uint32", shape = (1, 2704))#candidate|1500|(1, 2704)|var|uint32
call_1499 = func_213_call(relay.reshape(var_1500.astype('uint32'), [13, 13, 16]), relay.reshape(var_1500.astype('uint32'), [13, 13, 16]), )
call_1501 = func_213_call(relay.reshape(var_1500.astype('uint32'), [13, 13, 16]), relay.reshape(var_1500.astype('uint32'), [13, 13, 16]), )
func_1458_call = mod.get_global_var('func_1458')
func_1461_call = mutated_mod.get_global_var('func_1461')
call_1504 = relay.TupleGetItem(func_1458_call(relay.reshape(var_1500.astype('uint32'), [2704,])), 3)
call_1505 = relay.TupleGetItem(func_1461_call(relay.reshape(var_1500.astype('uint32'), [2704,])), 3)
output = relay.Tuple([uop_1481,call_1487,const_1488,call_1492,const_1493,call_1499,var_1500,call_1504,])
output2 = relay.Tuple([uop_1481,call_1489,const_1488,call_1494,const_1493,call_1501,var_1500,call_1505,])
func_1513 = relay.Function([var_1500,], output)
mod['func_1513'] = func_1513
mod = relay.transform.InferType()(mod)
var_1514 = relay.var("var_1514", dtype = "uint32", shape = (1, 2704))#candidate|1514|(1, 2704)|var|uint32
output = func_1513(var_1514)
func_1515 = relay.Function([var_1514], output)
mutated_mod['func_1515'] = func_1515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_1572 = func_750_call()
call_1573 = func_750_call()
output = call_1572
output2 = call_1573
func_1576 = relay.Function([], output)
mod['func_1576'] = func_1576
mod = relay.transform.InferType()(mod)
output = func_1576()
func_1577 = relay.Function([], output)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1585 = relay.var("var_1585", dtype = "float32", shape = (12, 9, 14))#candidate|1585|(12, 9, 14)|var|float32
uop_1586 = relay.sqrt(var_1585.astype('float32')) # shape=(12, 9, 14)
output = uop_1586
output2 = uop_1586
func_1592 = relay.Function([var_1585,], output)
mod['func_1592'] = func_1592
mod = relay.transform.InferType()(mod)
mutated_mod['func_1592'] = func_1592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1593 = relay.var("var_1593", dtype = "float32", shape = (12, 9, 14))#candidate|1593|(12, 9, 14)|var|float32
func_1592_call = mutated_mod.get_global_var('func_1592')
call_1594 = func_1592_call(var_1593)
output = call_1594
func_1595 = relay.Function([var_1593], output)
mutated_mod['func_1595'] = func_1595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_1633 = relay.TupleGetItem(func_1116_call(), 1)
call_1634 = relay.TupleGetItem(func_1118_call(), 1)
uop_1668 = relay.asinh(call_1633.astype('float64')) # shape=(15, 2, 14)
uop_1670 = relay.asinh(call_1634.astype('float64')) # shape=(15, 2, 14)
output = relay.Tuple([uop_1668,])
output2 = relay.Tuple([uop_1670,])
func_1673 = relay.Function([], output)
mod['func_1673'] = func_1673
mod = relay.transform.InferType()(mod)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mutated_mod.get_global_var('func_1673')
call_1674 = func_1673_call()
output = call_1674
func_1675 = relay.Function([], output)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1726 = relay.var("var_1726", dtype = "float64", shape = (9, 14, 15))#candidate|1726|(9, 14, 15)|var|float64
var_1727 = relay.var("var_1727", dtype = "float64", shape = (9, 14, 15))#candidate|1727|(9, 14, 15)|var|float64
bop_1728 = relay.less(var_1726.astype('bool'), relay.reshape(var_1727.astype('bool'), relay.shape_of(var_1726))) # shape=(9, 14, 15)
output = bop_1728
output2 = bop_1728
func_1733 = relay.Function([var_1726,var_1727,], output)
mod['func_1733'] = func_1733
mod = relay.transform.InferType()(mod)
mutated_mod['func_1733'] = func_1733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1733_call = mutated_mod.get_global_var('func_1733')
var_1735 = relay.var("var_1735", dtype = "float64", shape = (9, 14, 15))#candidate|1735|(9, 14, 15)|var|float64
var_1736 = relay.var("var_1736", dtype = "float64", shape = (9, 14, 15))#candidate|1736|(9, 14, 15)|var|float64
call_1734 = func_1733_call(var_1735,var_1736,)
output = call_1734
func_1737 = relay.Function([var_1735,var_1736,], output)
mutated_mod['func_1737'] = func_1737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_965_call = mod.get_global_var('func_965')
func_967_call = mutated_mod.get_global_var('func_967')
call_1772 = relay.TupleGetItem(func_965_call(), 0)
call_1773 = relay.TupleGetItem(func_967_call(), 0)
var_1774 = relay.var("var_1774", dtype = "float64", shape = (15, 2, 14))#candidate|1774|(15, 2, 14)|var|float64
bop_1775 = relay.logical_or(call_1772.astype('bool'), relay.reshape(var_1774.astype('bool'), relay.shape_of(call_1772))) # shape=(15, 2, 14)
bop_1778 = relay.logical_or(call_1773.astype('bool'), relay.reshape(var_1774.astype('bool'), relay.shape_of(call_1773))) # shape=(15, 2, 14)
var_1780 = relay.var("var_1780", dtype = "bool", shape = (15, 2, 14))#candidate|1780|(15, 2, 14)|var|bool
bop_1781 = relay.add(bop_1775.astype('int32'), relay.reshape(var_1780.astype('int32'), relay.shape_of(bop_1775))) # shape=(15, 2, 14)
bop_1784 = relay.add(bop_1778.astype('int32'), relay.reshape(var_1780.astype('int32'), relay.shape_of(bop_1778))) # shape=(15, 2, 14)
func_799_call = mod.get_global_var('func_799')
func_802_call = mutated_mod.get_global_var('func_802')
const_1791 = relay.const([[3,-2,2,-6,-4,-3,-1,9,1],[-2,5,10,-3,-6,9,5,1,-2],[5,-6,-2,1,5,7,-7,5,-6],[-4,4,-8,-4,-4,2,10,7,4],[6,-3,5,-9,10,-6,10,5,-2],[6,8,2,7,-5,9,-4,-7,8],[-8,6,-10,2,2,4,10,1,2],[-8,-7,-5,-6,-3,-5,-5,-7,-9],[-3,7,-10,-1,-10,10,8,-1,1],[-3,-5,10,-9,-3,7,-3,4,-8],[-10,-5,-3,-2,-3,10,-1,10,1],[-7,6,5,1,6,8,10,-2,8],[-1,8,5,7,1,3,-9,2,-8],[1,-5,-7,-10,8,-5,7,7,8],[-3,10,-2,6,3,9,3,3,8],[10,10,-7,-6,-8,8,-7,-1,-5],[-1,-4,-8,-6,-4,10,10,9,-10],[4,1,-9,8,-1,6,-1,6,-9],[-10,-7,5,-6,7,-4,2,-1,10],[1,9,-6,-8,9,-4,-10,5,-9],[-3,7,2,7,7,-8,-1,4,3],[-2,-7,-6,-1,-5,2,-1,1,-8],[-7,-9,-4,-3,6,-4,7,9,-9],[5,1,-8,-4,-9,7,7,2,-8],[3,-3,9,9,3,10,-2,4,4],[6,3,10,5,-1,5,5,-5,10],[-6,-9,-8,-3,-5,6,8,-5,9],[8,7,1,3,2,4,1,1,-9],[1,9,-8,3,-9,7,-8,-2,-6],[-6,8,-6,-10,-2,-7,1,-4,3],[-7,8,-7,-2,9,7,-6,6,-3],[-6,-1,5,9,5,-8,3,-5,9],[-3,-6,-6,8,7,6,6,4,-8],[5,-7,-9,1,10,5,9,-2,-2],[7,10,6,6,6,1,-1,1,1],[2,-4,-9,4,8,-10,-6,-2,2],[10,2,-10,-2,-9,8,3,-1,6],[9,-7,-6,7,5,8,-9,-7,-6],[4,-7,-1,5,9,-4,-8,-3,-9],[-4,-2,-8,-8,1,-8,4,5,6],[-8,-1,-7,-2,-5,9,-5,-10,2],[9,7,-9,7,8,5,-7,5,2],[2,-8,-8,-10,-2,1,-10,-5,-2],[-1,-8,-2,-3,7,-8,1,-10,6],[-9,-10,7,-4,6,4,-2,7,-4],[-2,-8,6,-6,4,7,4,6,-7],[-7,-10,8,1,8,1,-6,10,2],[8,10,-5,-3,5,5,2,10,-5],[7,10,3,-9,6,3,-3,7,-6],[-4,-1,8,-10,-10,-2,1,-2,-7],[4,-5,5,-8,8,4,8,-3,-7],[-7,-1,9,3,-5,3,-9,9,-5],[2,5,-9,-6,-8,-7,9,-4,-10],[-4,-5,5,2,-2,10,5,3,5],[-10,-10,-9,-5,-1,-7,-4,-4,-1],[-4,7,-3,-5,10,-8,-9,-6,-7],[8,-3,1,-9,-2,-3,-2,-5,-2],[5,-7,-5,-1,-5,5,-2,-4,-1],[-5,-1,1,-2,-10,3,7,7,-4],[1,7,2,10,7,9,10,-6,2],[6,2,5,5,-5,8,-7,5,-6],[7,1,9,-2,5,-1,-7,3,2],[7,1,-4,-9,7,6,-1,9,-9],[-1,7,-8,4,-7,5,6,1,-3],[-6,5,-6,-7,7,10,-4,8,-8],[-2,-2,-9,2,-8,-3,-7,3,2],[-6,8,-5,-9,9,2,4,10,-5],[-2,4,-10,-10,6,1,-5,-7,8],[1,-2,-7,-8,8,-4,6,-2,5],[-9,-8,-10,-3,4,6,-3,-1,7],[-9,8,2,-2,7,3,5,9,-7],[2,4,9,2,-6,6,3,-10,-3],[-3,5,7,6,-7,7,3,-3,9],[-6,-5,6,-10,7,7,4,-2,-4],[4,3,2,-7,-1,-4,4,1,-6],[1,3,-6,7,-4,1,-10,-5,-8],[2,4,6,6,-7,7,2,-9,-5],[9,7,1,-9,-2,-3,-1,-4,10],[2,9,-3,-5,6,3,-9,3,4],[-3,-4,-9,-3,-4,7,8,10,-1],[6,9,9,3,-4,3,10,-3,1],[9,-4,3,-7,-3,10,1,1,8],[-3,10,-7,5,1,2,-4,5,4],[-1,9,-9,1,7,-3,4,7,-1],[-8,-4,8,10,6,2,-3,2,-9],[3,2,-2,6,-9,1,-9,-10,-8],[6,-2,3,-2,-7,8,-5,5,-2],[2,-4,-3,5,-4,5,-7,1,-5],[3,9,-2,-5,-8,6,-9,10,-3],[10,4,-5,7,-2,-1,-1,2,4],[8,3,-2,-8,1,-6,-10,4,-10],[3,-1,8,-9,6,-10,7,2,6],[3,6,-1,-8,-9,-2,-1,10,9],[-4,6,2,-2,6,1,9,5,7],[10,-4,10,-1,3,3,-9,10,8],[-5,-1,6,2,-9,3,-2,3,-5],[4,-4,-7,-8,-3,-6,-10,-1,2],[6,-3,3,-1,2,-3,-9,-2,3],[-7,8,1,10,4,4,-9,2,-5],[9,-9,2,-7,-10,-1,8,6,-9],[-1,8,-10,-1,-3,2,-7,-6,3],[2,-6,-9,-7,-6,-7,2,3,3],[-2,-4,-9,-5,-1,-5,-8,4,-9],[-2,4,-9,-4,-8,1,-2,-8,-10],[-5,3,7,-10,-7,8,1,-2,7],[-5,4,-9,5,-10,10,-1,-6,-10],[-2,-7,-7,5,-2,-3,10,-3,1],[9,-3,-10,10,7,6,10,-8,-9],[9,-2,-2,-3,3,7,8,-2,7],[-4,-3,-3,-8,9,10,-10,-1,-2],[-7,5,1,-2,10,-9,-5,-3,4],[7,1,-8,5,7,-10,1,4,-5],[-10,3,2,6,-3,-6,-7,8,1],[6,-6,2,-2,1,-10,10,-5,9],[-2,-5,-6,-5,5,8,1,-4,6],[3,10,5,-2,10,-7,7,6,8],[4,-2,7,7,-3,-5,8,9,1],[7,-9,5,8,5,5,-5,-5,7],[6,-9,6,7,1,-1,-10,-10,-9],[-2,6,-10,-1,9,1,-9,4,7],[-4,-4,-2,1,-5,-8,-5,-1,10],[-3,8,8,-2,8,6,5,-2,7],[4,-6,9,5,-6,9,8,6,6],[7,2,-3,3,-8,-7,-8,5,3],[-8,9,3,-10,10,8,2,5,3],[2,-5,10,7,4,4,5,-6,-5],[-4,1,-5,-1,8,-2,-1,-6,9],[10,-6,8,-4,1,1,8,-5,9],[-1,8,6,10,-6,-6,4,1,-2],[1,3,-5,-10,-2,-5,-4,3,6],[9,9,-4,-10,-2,-10,9,-2,3],[-1,-4,7,-3,-6,10,8,-9,7],[-1,-2,10,-7,5,-3,9,-1,-4],[10,9,8,9,-3,10,-2,8,3],[-7,-7,2,-1,4,1,10,7,-9],[-9,10,7,-3,-2,2,-7,8,1],[3,-10,-4,5,4,3,9,-2,-5],[1,-7,-7,8,7,-1,5,-2,1],[8,10,-1,5,-5,1,9,8,-2],[-4,2,-6,4,6,-8,10,4,8],[-2,-7,4,-9,-7,9,-5,-10,8],[1,-9,6,4,5,-7,-5,-10,8],[-8,8,-7,5,-2,10,-2,10,7],[-1,3,9,1,-10,6,-6,6,-2],[-1,-6,3,-10,6,6,-7,4,-5],[9,9,-10,7,1,-9,10,-9,4],[-4,-5,-6,6,2,-1,-7,4,2],[-2,9,4,-6,2,3,-7,10,-9],[-7,-10,-9,5,-3,-1,-4,-6,8],[-4,6,-10,-2,6,-1,10,4,-4],[-3,8,-1,-3,-3,1,-8,-4,1],[-1,-2,-4,-6,8,4,-4,4,-3],[10,-9,2,2,5,2,1,6,4],[6,-4,-1,-8,-3,4,5,-1,-7],[-8,-5,-7,8,2,-1,6,8,2],[6,4,-2,7,-2,-6,3,10,-5],[-7,-4,7,-7,3,-2,-5,-4,-10],[-7,6,7,-2,3,2,-8,-1,8],[-8,-10,2,-7,-10,8,-9,-9,8],[-4,10,-10,-5,1,-1,-5,-6,1],[9,-7,-8,1,1,10,-9,8,4],[-4,-10,-7,4,9,9,7,5,8],[-10,1,-2,9,-9,-3,-8,-2,-1],[-9,-10,-4,8,6,-7,9,3,7],[2,7,6,4,8,-4,4,-4,2]], dtype = "int64")#candidate|1791|(165, 9)|const|int64
call_1790 = relay.TupleGetItem(func_799_call(relay.reshape(const_1791.astype('int64'), [15, 9, 11]), relay.reshape(const_1791.astype('int64'), [15, 9, 11]), ), 2)
call_1792 = relay.TupleGetItem(func_802_call(relay.reshape(const_1791.astype('int64'), [15, 9, 11]), relay.reshape(const_1791.astype('int64'), [15, 9, 11]), ), 2)
output = relay.Tuple([bop_1781,call_1790,const_1791,])
output2 = relay.Tuple([bop_1784,call_1792,const_1791,])
func_1794 = relay.Function([var_1774,var_1780,], output)
mod['func_1794'] = func_1794
mod = relay.transform.InferType()(mod)
var_1795 = relay.var("var_1795", dtype = "float64", shape = (15, 2, 14))#candidate|1795|(15, 2, 14)|var|float64
var_1796 = relay.var("var_1796", dtype = "bool", shape = (15, 2, 14))#candidate|1796|(15, 2, 14)|var|bool
output = func_1794(var_1795,var_1796,)
func_1797 = relay.Function([var_1795,var_1796,], output)
mutated_mod['func_1797'] = func_1797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_912_call = mod.get_global_var('func_912')
func_914_call = mutated_mod.get_global_var('func_914')
call_1869 = relay.TupleGetItem(func_912_call(), 1)
call_1870 = relay.TupleGetItem(func_914_call(), 1)
output = call_1869
output2 = call_1870
func_1876 = relay.Function([], output)
mod['func_1876'] = func_1876
mod = relay.transform.InferType()(mod)
mutated_mod['func_1876'] = func_1876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1876_call = mutated_mod.get_global_var('func_1876')
call_1877 = func_1876_call()
output = call_1877
func_1878 = relay.Function([], output)
mutated_mod['func_1878'] = func_1878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1876_call = mod.get_global_var('func_1876')
func_1878_call = mutated_mod.get_global_var('func_1878')
call_1900 = func_1876_call()
call_1901 = func_1876_call()
func_533_call = mod.get_global_var('func_533')
func_536_call = mutated_mod.get_global_var('func_536')
call_1903 = func_533_call(relay.reshape(call_1900.astype('int8'), [4, 3, 15]), relay.reshape(call_1900.astype('int8'), [4, 3, 15]), )
call_1904 = func_533_call(relay.reshape(call_1900.astype('int8'), [4, 3, 15]), relay.reshape(call_1900.astype('int8'), [4, 3, 15]), )
bop_1912 = relay.logical_or(call_1900.astype('bool'), relay.reshape(call_1903.astype('bool'), relay.shape_of(call_1900))) # shape=(4, 3, 15)
bop_1915 = relay.logical_or(call_1901.astype('bool'), relay.reshape(call_1904.astype('bool'), relay.shape_of(call_1901))) # shape=(4, 3, 15)
output = relay.Tuple([bop_1912,])
output2 = relay.Tuple([bop_1915,])
func_1916 = relay.Function([], output)
mod['func_1916'] = func_1916
mod = relay.transform.InferType()(mod)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mutated_mod.get_global_var('func_1916')
call_1917 = func_1916_call()
output = call_1917
func_1918 = relay.Function([], output)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1181_call = mod.get_global_var('func_1181')
func_1182_call = mutated_mod.get_global_var('func_1182')
call_1945 = relay.TupleGetItem(func_1181_call(), 0)
call_1946 = relay.TupleGetItem(func_1182_call(), 0)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_1953 = relay.TupleGetItem(func_934_call(), 0)
call_1954 = relay.TupleGetItem(func_936_call(), 0)
bop_1975 = relay.greater(call_1945.astype('bool'), relay.reshape(call_1953.astype('bool'), relay.shape_of(call_1945))) # shape=(15, 2, 14)
bop_1978 = relay.greater(call_1946.astype('bool'), relay.reshape(call_1954.astype('bool'), relay.shape_of(call_1946))) # shape=(15, 2, 14)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
const_1990 = relay.const([5.551402,6.831476,1.465673,-5.647759,-4.136644,5.960730,-8.747437,7.231482,-6.918858,-8.441836,-6.963385,9.483894,-0.163915,-7.388891,-0.345579,4.659290,-7.819610,-6.234043,9.623164,9.417716,9.458686,5.715330,-2.183126,-5.010117,-5.949330,8.139003,7.762895,-8.394820,-7.678501,-0.056610,-8.273533,6.549839,-6.270393,-3.721619,-6.538420,0.206458,-9.644160,7.072197,-9.193809,4.776282,7.434628,1.945298,1.646586,-0.879138,-6.107432,-2.582408,2.397817,7.629503,-1.843408,4.929437,4.497360,-0.339766,4.739885,7.269629,5.621453,-5.336059,5.311666,-3.849839,5.669033,4.947513,9.970887,-0.041281,3.980120,-0.829451,-4.128717,-1.206697,-5.283931,3.553622,-1.390203,9.606342,-9.858012,-7.134280,5.324889,-1.150601,-7.008197,-4.443032,-0.515698,-0.976411,8.407318,7.270958,-1.015401,1.867867,-7.254962,-4.413158,1.317803,-0.034976,7.478780,-4.332137,7.561692,-0.861903,-0.029105,4.012740,2.191856,-6.425768,-6.369728,-6.921006,3.666885,-0.235379,5.298958,-3.033918,-9.864567,-2.164116,-6.328050,4.446052,0.751207,5.198734,-8.976651,-1.906602,-4.826755,-3.482889,-8.894885,1.349652,5.399551,5.848147,-5.413248,9.321269,9.039862,-2.313992,-8.403739,6.223102,9.320293,6.394806,-7.503107,-7.387425,-6.140463,9.771792,2.192931,-1.612270,-7.620397,3.957388,-0.816553,-7.729569,-5.328397,0.413711,-0.296568,6.126220,1.695073,5.058043,-5.397793,-8.440213,6.193439,-4.335766,-6.943279,3.316083,-3.087010,5.891832,0.012102,-4.126798,-9.633034,5.720171,1.308474,2.837185,9.281689,-5.791480,-0.208996,6.056038,-4.370618,-9.423855,-9.144734,-7.541395,3.560939,4.053621,5.099238,-9.975214,3.968190,-7.447619,-3.040883,5.873154,-6.597288,-4.817203,-9.992441,-4.882588,8.889010,2.554263,-5.194283,-0.575735,3.715784,9.614603,-5.732098,9.442783,2.162100,-2.971217,9.787163,2.568543,3.989489,-5.830332,4.203571,-2.072738,8.192771,5.937161,6.086266,1.835897,0.154641,6.001218,6.903958,-3.270592,-4.549391,-8.150875,-8.934227,-9.484145,4.425791,-7.718031,5.167159,7.301265,-1.439951,9.065365,9.849595,7.188091,5.674684,-1.479590,4.801071,0.652058,4.564332,9.708415,5.539101,3.811879,-8.523534,-2.016154,-2.779492,-7.323162,-2.853839,8.260091,4.685269,-9.162418,2.962452,3.348788,3.826000,2.612530,-7.433670,0.289176,-1.918343,7.841788,-0.249805,-1.481702,8.856614,7.778498,-8.661056,8.329180,0.906292,-0.220607,-8.007575,9.453889,-7.369602,-0.519997,1.062560,4.553002,-9.919672,-8.306369,-0.180206,-5.450761,-3.835582,6.964608,-9.417389,-3.396728,-5.872625,-5.202254,-9.675951,6.479823,-3.604732,7.842003,4.071529,2.189647,6.879272,-0.887990,1.041434,-0.157556,-9.337224,-3.188180,-4.654071,2.815358,-4.347353,-1.360377,1.067893,1.730030,1.935991,-5.542831,4.912895,5.529426,9.361086,-9.798343,-0.541331,-4.840635,-7.059798,3.336705,3.965427,-5.167027,-2.747961,-7.511939,-2.010110,-4.564982,3.619158,-1.089829,-2.525585,3.283651,9.622642,-1.382056,-4.125766,-7.698957,-1.859536,-8.918551,-7.165320,6.030666,2.108950,1.073819,0.947444,4.035252,-1.240841,-2.908527,2.322826,-2.727188,6.528888,-3.884426,-6.957736,4.828199,-4.491113,-7.555520,-4.650801,-8.874712,-7.433044,7.851701,8.519624,-9.542432,-4.430976,-6.787102,-1.352496,-4.135881,-3.198189,-6.784910,0.236041,9.904211,1.007213,8.456308,2.695738,8.554166,7.053210,8.137991,5.958344,-4.570857,-5.730370,-7.589311,7.384688,3.569577,8.912324,-0.526269,3.771527,3.478548,-0.451396,-1.700548,-9.296982,9.825953,-9.021289,-5.754764,-4.074721,3.487135,1.879906,8.556690,-6.914644,-3.176667,-6.105042,-5.418509,-8.003584,-3.760580,-2.127204,-3.649993,-4.791432,-3.470401,8.276195,3.684389,7.654687,-8.076170,-9.524529,-9.394726,-1.751125,-7.087262,4.700815,-9.438616,-8.657651,-4.201744,5.008752,5.340534,-3.749515,-0.948544,-4.315670,7.139010,-3.798425,8.683110,-8.996058,1.352790,-3.603559,6.435898,3.660565,-0.937824,9.986822,-2.624486,6.814576,-4.572509,-5.956182,5.563514,-5.405460,-7.441889,8.443135,5.501942,1.398755,-8.765090,7.690414,-8.833085,-9.064426,-0.003457,2.014805,-6.217994,7.360702,8.241622,-9.817896,-0.585976,0.305714,7.892368,-5.276141,-8.806997,-9.498467,-1.593417,5.953649,-7.242302,4.037188,5.885083,6.871720,2.012161,-7.788575,-0.338956,-3.875999,-8.395432,-2.709649,-0.060408,-2.531419,-1.507160,4.231136,-1.754226,4.126453,-9.215670,-2.710072,-5.931561,-4.397303,-8.861555,-2.416524,2.817379,5.346879,-5.755234,4.182968,8.282624,-4.097916,-0.033207,-9.436783,-5.408820,3.932011,-5.029356,-3.545162,-4.545795,-8.412344,2.477250,3.239795,8.800578,-4.714942,-7.657861,-6.487501,-2.012179,-5.073421,3.483839,8.120323,-6.353467,-9.103163,-5.400411,3.518626,6.358223,2.139365,-4.928199,8.154484,-0.337357,-1.698900,-7.286356,-6.738424,4.845541,0.398215,7.373590,-7.100837,-8.861294,-8.617003,0.452382,7.861907,6.291383,6.386365,4.951622,-8.540436,3.256295,3.772554,9.850706,-9.198107,-6.790371,6.635766,-1.009407,0.165511,9.087841,-5.767631,-0.249906,4.705484,-4.640792,9.980018,-4.325800,7.514379,-2.528719,0.876862,-4.894988,-9.382886,7.329313,-2.812349,9.086281,-9.688812,9.894759,7.352109,-0.943132,-4.588671,-7.542938,9.076417,4.855277,-5.530197,1.571005,8.088014,8.171466,-2.816311,-3.182637,-9.939778,-5.994744,-4.351391,7.533776,8.767362,-4.184036,7.888106,-9.950036,5.277003,9.849656,5.028245,5.691327,7.875532,5.194529,-0.771499,-1.538732,4.387741,4.109125,9.558478,-8.188385,7.544039,-2.653945,8.251637,9.731618,-9.422859,-2.049002,5.643678,-1.250023,-7.267572,-5.552096,9.231863,4.927366,5.514789,-6.009802,-1.715794,-4.995730,-0.880699,-2.050994,5.727639,-8.932429,-3.737060,5.788225,2.892948,-9.147691,0.301623,-1.992954,-4.259907,-1.411410,-8.119988,-6.020422,2.320313,-2.538258,0.901016,7.467695,-7.912300,-7.042988,-4.470907,-1.133181,4.416551,3.650976,1.302378,-9.305895,2.008289,-3.508668,9.299061,-0.842378,3.493626,-9.845156,1.107065,8.678946,-5.904023,7.919313,1.613594,-4.254152,-5.762909,-2.970302,7.139155,5.372011,5.497045,-1.955910,-3.605219,6.152848,-7.793481,-2.846261,9.254356,2.346715,4.658756,-0.904639,4.815057,-4.500320,-1.458078,6.379920,6.353430,-6.872188,-7.654003,9.181731,-8.600621,-6.897777,6.666400,-8.054223,-9.672420,-8.007976,-6.942758,6.661089,6.883055,-0.324384,-2.665357,2.775597,-3.782086,-3.253306,-9.467707,-1.673033,-1.345112,2.071100,4.336512,-7.776598,-5.508198,-3.666559,2.134007,-1.844784,6.079486,-0.844216,-7.993009,3.156543,9.204084,-3.668328,1.599449,-9.722893,1.048384,2.390198,-4.903932,4.800904,-4.566436,6.240484,1.019095,-8.918897,-4.040981,-0.173528,-1.391008,-0.474016,2.665964,-8.269522,1.229623,-6.559950,-8.299016,8.973651,2.797170,6.094463,-2.520182,1.940224,-8.638579,-5.912998,-6.372323,-6.101208,-4.377942,-5.320379,0.249378,1.989063,-0.889782,4.216053,9.298601,8.246095,8.740796,9.310806,2.822460,1.588182,-3.916990,7.827252,-6.055142,-7.502620,-4.522562,-1.513226,5.147549,-1.869231,1.246469,-7.579489,-4.241194,3.383013,9.047791,-8.930345,8.663369,-6.231964,3.875685,-5.112356,5.162652,1.770078,-8.786687,4.704843,8.837106,6.609866,-3.128667,2.896993,5.898099,-8.403691,8.815101,7.800035,9.167161,0.207971,0.987256,-4.158682,-3.437934,-5.014303,-1.323616,-9.595255,4.283092,-5.128474,2.009532,8.850044,5.032447,4.801975,-9.902987,2.847857,9.515023,-1.760420,1.489963,8.050135,-8.972177,-5.964720,-1.841057,-5.848984,-3.921933,5.094949,0.106159,-8.980661,-0.435624,9.096309,-8.698965,-5.265017,0.519934,2.614438,-5.859032,-6.901249,-8.001832,7.117799,3.062327,6.605939,-4.797621,-3.203587,2.203531,-7.034552,-2.269565,-6.500773,2.749593,-6.399286,9.395467,7.901559,1.634627,6.410160,-4.599423,-5.824188,-4.581097,8.392017,-1.745972,-3.416214,-6.934573,2.385668,3.077783,0.029127,9.355742,2.026906,9.840548,-3.413952,5.654307,3.995806,-3.259268,3.797393,8.103132,1.125957,-5.377627,5.980128,4.726665,-4.599231,-6.688055,2.595200,2.834147,-8.931593,1.540713,1.582657,-6.484453,-3.123303,-5.106112,-4.605799,-5.258120,3.860720,3.705636,2.487165,-5.748292,3.846619,6.960373,-2.458072,-4.675504,-2.935011,0.593244,-9.477033,-7.091412,-4.178027,-3.313055,-5.689802,-7.898919,-5.074968,-8.293144,-6.998987,8.498523,9.670669,-2.892373,5.602601,-7.243867,-1.818210,-3.964561,-4.857306,1.235342,4.580273,9.429196,-8.505820,-4.670987,5.599052,-3.060572,4.470443,-8.779073,5.142406,-2.161504,6.568794,-0.731896,-3.407821,-5.819655,3.265467,6.051528,6.852838,-2.742808,-2.297870,-2.491915,3.334665,-9.119864,-2.099625,1.868818,2.260425,5.802593,-0.834901,7.859455,-1.155151,5.427268,9.501728,-8.287718,3.078634,5.233249,1.956007,-6.114316,-9.264521,3.299566,2.165986,-2.659500,-4.353296,1.888800,6.257857,7.639975,-0.087649,5.019163,3.937717,-1.492025,-0.410217,4.365285,-2.030490,-7.056872,-1.890749,9.988821,-7.230197,-6.714066,7.288149,-4.708970,-2.427309,-8.280075,-3.314401,1.664181,-1.404977,7.178879,8.985888,-3.341237,-4.827739,-0.168595,6.833062,-9.196069,-5.633101,-3.321026,-3.174952,-7.016782,8.318766,2.364391,9.657675,2.771503,-4.529956,-9.322128,8.506340,1.638838,-2.910020,-0.203283,-8.109884,5.640074,-2.090340,-0.554509,-2.596425,9.477749,-2.616786,-8.431998,3.534101,4.090639,-5.700336,1.827652,-5.386965,9.482342,7.482732,-1.254693,-4.501681,-9.328092,-4.680987,3.905338,4.390136,-9.829064,9.873789,2.726717,-2.650593,-9.830992,0.694288,1.992080,0.610538,-1.957353,-0.719742,-7.934290,-7.796434,9.792168,7.905761,-2.670203,-6.021162,-1.380061,5.149372,-4.102151,-4.084016,-3.648354,4.224953,-0.503800,-4.689782,7.137373,7.262184,8.073975,-1.128997,-1.764389,9.561338,-5.630951,0.708388,2.649796,8.822994,0.152753,-5.842879,8.323565,7.431891,-2.893674,-3.741264,-0.138182,1.849039,2.073660,3.627003,-3.758167,-5.275805,-7.395965,7.903639,-9.419649,9.314972,0.184496,1.261186,8.527508,-5.054329,-6.094109,2.984030,-7.687800,-9.728877,-4.808419,-6.866799,-5.208815,-7.024585,-6.284941,-1.931882,-3.455832,-4.525343,-7.152384,-4.636666,-1.787586,2.853725,9.823818,-2.944843,-6.268303,0.681826,-5.300498,2.051850,7.643905,9.325403,7.381322,-7.690487,0.554663,6.983038,3.074262,-9.623592,-6.841782,-2.575482,-7.947326,-0.220688,-4.623747,-0.977800,6.712689,2.623077,3.401727,-9.049221,9.383958,-1.883480,-6.779022,-6.333995,3.664695,9.178851,-6.699664,8.134883,-3.912456,8.189737,8.668220,1.906602,2.887795,1.540626,7.729255,-8.176478,2.695731,-7.587415,-7.324778,3.596414,2.383737,-6.213254,-3.671598,-4.463472,9.761285,7.472234,3.692602,8.138641,-5.074682,8.680042,-4.924203,-2.211582,-7.232623,7.565020,6.430083,-9.972761,-1.285542,-3.892138,-6.937333,9.921360,2.564412,1.196099,-9.010916,3.194894,3.889249,-7.610352,-8.981353,0.010270,3.177444,-9.340081,1.034030,4.182804,0.944923,8.239730,9.560107,8.458313,6.567021,4.339804,4.181960,-1.700805,-7.656136,-6.237622,8.603815,0.495725,2.656829,3.405642,5.718324,-9.268994,1.260481,-6.825625,-7.603424,2.482677,-3.846836,9.142377,2.998014,6.177411,9.826389,6.311639,1.774413,0.494813,-5.436573,-0.382920,-8.541552,-3.483509,-4.330809,-9.895401,-5.644003,-1.124243,-7.698500,-4.130841,-6.716938,8.902482,2.441697,-0.154450,-8.502162,3.365590,3.296261,-8.311129,-5.774788,1.498281,7.255313,-4.084738,0.742906,6.682434,-7.100177,3.131611,9.676809,-1.813067,9.561619,2.307345,9.885781,-9.129632,-1.754634,-8.179943,8.708496,3.508643,4.365287,-8.611181,6.188942,-5.615066,3.869694,-7.083412,1.365689,-8.177235,0.038031,-4.586355,-1.078860,1.232910,7.380602,-5.678086,0.711737,9.397219,2.892364,9.268065,9.730354,-3.309911,-5.146281,8.397534,-0.202079,-5.680016,-8.026238,-3.962174,-7.621208,3.052993,1.343132,-8.689338,-5.823342,1.134105,-5.667695,-1.765684,-7.881793,-8.168907,5.492678,-3.450384,9.341478,7.467075,8.232061,9.411721,-3.044386,7.408788,-4.925618,-3.293902,-2.565694,-0.464683,5.252327,-9.921650,6.760588,-7.001522,9.380214,-2.506388,5.138390,-1.130140,5.037571,-2.984360,-9.623803,6.848719,-5.319542,1.470006,5.635998,5.074528,-7.079334,0.615087,-6.112150,-3.404813,-4.006245,8.076756,8.733047,0.803320,8.599720,-3.158206,1.422001,-8.834719,2.281258,-1.137262,4.774313,0.931921,-8.916548,7.550648,-1.867300,-1.937363,8.859655,1.157677,6.740434,7.701527,-4.361216,-4.360130,-2.949724,4.267678,7.597677,-9.984157,8.723620,-5.991132,-4.039051,2.180644,-4.569566,-1.419995,1.384581,-5.420292,-4.171423,3.730106,7.904353,-4.681812,-0.502288,0.675813,-6.271871,-8.442513,-8.847233,2.034466,-6.037460,6.478925,-3.650861,-6.984660,1.745211,-3.739180,5.323974,9.174237,0.685675,-9.293173,9.803022,4.529405,7.360216,-1.450258,6.034825,9.551974,-6.730085,-7.782898,-0.079828,-5.948354,4.043214,6.404513,-4.752010,0.694356,-8.243920,0.685671,8.424402,5.726590,-2.243533,-1.665169,8.255617,9.004640,3.568419,-2.233604,9.066497,4.919459,5.356162,1.840234,6.169796,-4.155482,-0.158864,-5.291068,-3.481654,-4.110271,3.839813,-0.318236,-4.720775,-8.897334,6.387326,2.729369,9.518961,0.180729,0.344820,-8.078552,2.283204,3.236235,-9.081905,-4.732431,0.394351,0.772643,3.709287,-5.844865,5.405224,5.709392,9.715133,9.678859,-6.484658,-0.164817,6.256199,-1.427893,7.639633,-0.784936,7.485261,-8.323184,-2.990889,2.429574,-7.542083,7.833969,-0.451213,-8.463356,-8.267118,-0.895694,8.780753,-1.455153,1.093381,8.029226,-6.634333,-1.859953,-9.434630,0.749140,-7.698130,5.491440,-2.019819,8.405430,5.409651,-6.041167,6.525193,-7.491734,6.447305,-6.775012,-7.751384,0.500311,6.967243,-2.404958,1.444964,-0.489480,2.728324,-3.769671,1.432667,-4.671635,2.420428,-1.961785,-6.188274,2.069722,5.288507,-5.596169,-3.042803,8.489633,-0.356214,5.619768,6.474117,1.364827,7.920225,-1.028068,6.634208,-0.636847,3.637111,-8.839437,0.806520,-7.045180,2.020997,-9.341446,-2.654356,9.385264,-7.879404,-8.497001,3.229107,-6.816935,6.199008,0.762772,5.279134,-6.505639,-0.007461,-6.049791,-9.702487,-2.925869,-1.520671,9.663028,-2.258175,1.332803,-4.675793,-6.503819,4.783834,-6.038745,4.664621,-3.907920,0.797336,-8.719822,3.561466,-2.042274,3.157907,1.820709,8.353457,-3.248951,5.836889,-2.119133,-7.715036,3.521812,0.317290,-5.848997,2.776332,-6.157197,1.113235,-7.815032,2.758428,4.098446,-2.071853,-8.634775,6.585141,2.299894,-9.065533,-8.566740,5.831007,8.292349,-3.575568,0.500299,-3.273369,-3.104627,-4.646683,-5.602242,2.106485,-3.588548,-8.716682,-8.806785,-2.565925,-2.092558,3.718489,8.863065,5.364428,-4.604606,-5.856263,6.229825,8.045549,4.741697,5.587500,5.644410,7.487418,-7.550222,0.101838,8.013111,-8.940198,-6.652680,2.791442,-0.073860,-0.845168,-8.499126,7.472573,7.326720,3.158753,-5.441837,-0.044166,-4.356301,-7.381845,5.877351,0.503497,1.002220,1.863529,9.684881,3.935918,0.652995,-1.784446,-7.229485,7.606997,-8.069691,-0.018698,6.045006,6.096765,-9.048795,-8.926732,4.036792,9.895369,-7.524802,-1.894888,5.842875,4.024065,-6.292228,-8.174547,0.795026,-4.127409,-2.885298,5.434152,-3.277154,5.519319,-9.387898,-6.060848,8.238909,-7.842240,-4.200117,-7.277432,-6.836010,-3.956391,1.622713,9.173213,9.392453,8.808946,8.196921,5.190773,5.765892,-1.804408,0.373811,7.076024,-2.121395,-1.728859,-0.024082,-3.636940,-4.726944,0.726918,4.935558,8.949108,5.373647,3.957545,1.706140,-6.099689,2.706825,-7.616224,5.473117,-9.319295,6.989200,9.623093,0.214611,-9.874435,-6.225287,1.646851,-5.922234,-9.016183,8.284504,-1.347065,6.663755,2.337347,-3.493266,8.233733,3.642197,0.050794,-8.141587,3.805895,5.327893,1.226317,1.866743,3.979220,7.505915,5.039608,1.298569,4.132905,-6.853464,-4.318080,-7.117349,4.184756,3.208306,-0.210335,4.428681,4.631974,8.969321,-0.661306,3.706587,1.861075,-3.922730,-6.684411,-7.184597,-3.906212,-6.119942,6.838147,-1.493824,3.314527,-0.672134,9.705225,2.913430,-5.361738,9.486539,8.964521,-8.981610,-6.544462,-3.116251,1.050809,-4.685473,3.385398,-0.020135,-3.073773,5.586622,-3.482645,1.567553,8.300664,-4.778475,-7.622056,1.634705,-1.530443,-1.533342,-7.572511,1.107941,7.808102,3.690775,5.363729,-9.087322,-8.130217,5.440916,1.296341,-3.697979,8.823166,-3.370327,-3.116253,1.397306,4.014215,8.279971,-8.755848,3.739504,7.522924,2.839907,-4.975891,-3.726613,6.012010,3.795781,-8.724866,-7.840590,-3.904645,8.455669,-8.829826,-0.435259,-8.852831,3.123358,-4.444349,5.720796,4.809171,-5.730985,-0.080604,-7.222704,-8.775071,-6.311660,1.400970,-4.786416,3.995519,-4.377641,2.094796,2.156872,9.469254,-9.089678,-0.503199,9.283769,-4.912208,1.969111,-2.565299,2.023157,-3.847980,3.112672,-5.933569,1.948738,-2.438777,8.133556,-4.514985,2.106765,3.413977,-4.154258,0.862623,0.242303,6.697740,-8.600529,-6.450615,9.618131,4.785937,-0.052104,-1.197171,1.848188,0.535969,-8.923419,-0.408815,3.069294,-1.860402,8.121432,4.377330,1.558742,6.562720,-2.265491,8.756093,-9.212976,4.444674,-7.577480,6.195102,-3.004760,-7.171617,-7.208248,-5.106179,-6.946489,1.546930,4.775174,-4.607963,-4.444649,-1.705224,0.411771,-7.547417,4.527925,-1.631901,8.156121,1.304320,5.998384,9.348069,-5.060142,1.332930,-4.185804,-0.549442,-5.876723,-4.269892,6.302203,9.545521,2.032996,-1.152583,6.609505,-3.380910,-1.779126,-3.792065,-7.887474,-3.359933,-1.901115,5.209540,-6.700917,-8.165886,5.879524,4.754846,8.196426,9.820914,-7.589356,9.008725,1.502145,9.030308,-8.824537,0.518232,9.773701,8.585548,7.875800,-9.026254,6.940394,-5.475997,9.815099,1.025042,5.573529,1.432025,-9.344024,6.574030,4.219771,-1.059840,8.064872,-4.066685,0.708804,-7.244777,-8.338357,-9.037791,8.817962,-0.480101,4.366855,5.898223,1.140997,-6.491946,-5.966143,7.673762,-7.860303,2.603417,8.763643,-4.567474,1.962744,9.507550,9.616351,0.162349,0.826218,-8.925524,5.743880,0.770597,-0.391654,8.839921,9.605547,-3.797417,-2.739374,6.301055,1.201550,-2.215629,-0.477943,7.900555,0.758624,-3.794617,-3.356356,8.209442,3.599433,-8.739136,2.504733,-4.985698,-7.593117,-8.548326,-7.637732,-1.471392,-0.333413,-9.822417,7.221058,-2.840843,8.157228,6.958204,9.846778,6.161107,8.820752,9.434757,4.707332,1.190244,-8.476505,-3.717809,-1.714251,6.001943,5.444095,8.081485,9.704998,-1.166181,0.183541,-2.223803,-1.541513,3.092227,-1.832107,-2.763194,-9.932082,5.640196,-7.041819,1.186626,2.639390,6.686116,-9.054860,1.023722,-3.192326,-9.249589,9.131228,1.088454,3.771871,2.826144,6.441558,0.064630,3.056441,-6.238195,4.842123,-0.947395,-4.786552,0.242360,2.782958,-4.617019,-6.373429,3.282681,-9.507156,-8.195876,9.234308,1.419625,6.707299,-8.757078,3.466367,-3.946273,-1.001042,8.055863,-9.066778,8.157961,7.550241,-5.032548,5.583701,4.265966,-1.793044], dtype = "float64")#candidate|1990|(1890,)|const|float64
call_1989 = func_1733_call(relay.reshape(const_1990.astype('float64'), [9, 14, 15]), relay.reshape(const_1990.astype('float64'), [9, 14, 15]), )
call_1991 = func_1733_call(relay.reshape(const_1990.astype('float64'), [9, 14, 15]), relay.reshape(const_1990.astype('float64'), [9, 14, 15]), )
output = relay.Tuple([bop_1975,call_1989,const_1990,])
output2 = relay.Tuple([bop_1978,call_1991,const_1990,])
func_1999 = relay.Function([], output)
mod['func_1999'] = func_1999
mod = relay.transform.InferType()(mod)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mutated_mod.get_global_var('func_1999')
call_2000 = func_1999_call()
output = call_2000
func_2001 = relay.Function([], output)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_2033 = relay.TupleGetItem(func_1116_call(), 2)
call_2034 = relay.TupleGetItem(func_1118_call(), 2)
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
const_2036 = relay.const([-10,9,4,-10,-6,9,-10,-9,7,-10,-8,9,-1,-1,9,1,4,5,-8,4,-4,7,2,-2,8,3,5,2,-2,4,-3,-3,3,-5,-2,8,-2,9,-1,-2,-7,6,7,-5,-1,10,-4,-2,-2,-1,-6,8,1,1,-2,-2,-7,10,-6,-3,-6,2,-8,8,-1,-4,-7,4,-2,4,9,-3,-4,-10,-8,9,8,5,-6,-5,3,4,2,9,-5,9,1,-2,-7,-7,-7,-10,-8,2,9,2,9,-3,6,-6,-7,8,-9,2,5,10,6,1,-4,-1,-2,-4,-1,-3,-10,-1,-8,-4,-1,2,6,10,-1,-7,5,9,-2,-10,9,-1,4,6,3,8,6,10,1,5,2,-8,-1,4,-7,6,10,7,-1,8,4,-8,6,-4,1,-9,-3,-9,2,-10,10,9,5,-5,-8,10,7,-4,-7,9,10,-10,3,-9,-7,-7,7,8,-9,-8,-4,-1,-8,3,3,-5,8,-6,-7,9,6,-2,10,-2,-10,8,-1,-4,-3,-6,9,-9,-9,1,10,3,-3,-6,4,2,10,-8,8,-10,1,7,-1,8,-1,-7,6,-6,4,4,2,2,7,-3,-3,7,-10,5,-3,1,-9,-5,-10,-8,5,-2,9,8,-5,-4,-3,2,7,5,10,4,-6,-6,1,3,-7,2,-9,5,-9,-2,-10,-6,-2,9,-8,-1,3,3,3,-10,10,-10,10,3,-2,4,9,-3,10,3,6,-4,-3,-4,2,-9,-6,9,4,-7,-7,10,-10,5,6,10,1,-2,-1,-1,10,3,-8,-4,-6,-1,-4,7,6,6,1,4,9,6,-10,-3,6,-8,2,-9,5,-1,10,4,1,8,7,-6,5,8,-9,-10,9,-3,10,-9,-1,5,-10,7,-1,5,-4,4,-3,9,-3,6,4,3,1,-2,-2,-4,-8,-4,-6,8,-10,-1,5,2,8,-10,-9,-10,-4,-5,-1,-1,-9,-9,3,-7,10,-5,-10,2,7,2,-4,-10,-3,5,3,-3,10,-9,9,-8,-8,3,10,-5,7,6,-10,-10,-1,-8,-10,7,5,4,6,5,5,-1,5,-5,-5,-4,7,-9,8,1,8,-1,-7,-9,9,6,-3,-10,-7,3,-5,-9,10,9,5,7,9,8,-4,-9,-10,8,6,-4,-4,6,-3,-2,-3,10,-2,-3,6,8,-8,-3,-4,4,9,-2,4,-2,3,7,-4,5,-5,-8,-10,10,-5,-6,4,-8,7,-5,8,-7,1,8,-2,-5,1,-9,10,-7,-4,4,3,2,4,3,7,4,4,7,-4,5,6,6,-3,10,8,-7,6,2,-7,1,-3,-3,-6,2,-3,-5,3,4,4,5,-8,2,-2,-3,9,4,-8,8,-9,3,-1,2,8,10,-10,2,5,-1,10,7,-9,-1,10,-2,-4,-3,-1,-7,-9,-3,-1,-6,-10,-5,-2,-8,-3,-9,-10,2,-5,-9,9,7,2,-8,4,-1,-2,3,-9,6,-3,3,-5,-7,9,7,3,-6,4,10,-10,2,-7,8,7,-8,-1,6,-7,6,-1,3,-7,-9,-5,-8,-1,-6,5,-4,10,-7,-4,-6,-5,4,5,10,-8,-4,-9,9,5,10,-9,-6,-8,-9,3,-1,8,-6,5,-7,-4,-10,-7,5,-4,2,9,4,1,10,-9,-4,-8,-9,4,-10,9,5,6,-8,7,6,9,5,-3,4,6,8,6,-7,-7,3,4,4,10,-2,1,4,8,-10,2,5,-1,2,-2,10,-5,-7,-2,10,-2,-8,-2,3,-2,1,4,-2,10,-4,2,-4,-8,-7,-10,4,-1,5,7,-3,10,2,1,10,-1,-4,10,-9,6,9,-3,10,-7,5,-4,2,-4,1,-2,5,-7,6,4,6,-3,10,9,-10,-6,10,-5,5,9,-3,8,4,-6,5,-6,-3,-7,5,-10,4,-1,-7,9,6,-9,10,-8,7,5,-7,2,-9,1,-4,-10,1,3,8,10,-9,-4,10,-5,9,8,10,5,6,-7,1,9,9,-9,-3,2,10,2,9,9,-7,5,7,-9,10,-5,5,2,-5,10,10,9,9,1,7,7,7,1,4,8,10,-4,7,-7,-6,8,1,7,-9,10,-10,-9,-9,-2,-4,6,6,-7,3,-7,2,-7,3,5,-2,-7,1,1,8,-4,4,4,-7,4,6,-3,7,3,3,3,4,10,-7,7,2,8,3,-5,7,-2,-1,1,-4,7,4,-3,-9,6,-1,1,-6,1,-5,10,8,-4,9,-4,-2,10,-10,-6,5,-2,7,-2,-4,-4,9,-10,-8,-5,-2,9,9,-1,2,5,1,6,3,-5,-8,8,3,-4,2,7,8,9,-7,8,10,-7,-3,1,10,2,4,-5,8,9,1,-6,-4,-10,-7,-10,-2,-8,-1,-2,6,9,6,9,5,5,-4,7,-8,-8,-5,-2,9,-1,-10,9,7,-7,4,-8,-2,5,6,5,-8,10,3,-10,3,-1,6,-8,10,5,-1,-2,-6,8,-10,-7,-6,-4,1,1,7,7,-6,6,10,1,-6,6,-2,5,9,-2,1,6,-2,-5,1,-10,-7,-4,-8,10,-9,-6,-1,5,-5,5,-5,-7,9,5,2,-8,2,7,8,5,-4,-8,-4,-4,-2,-4,-1,-5,2,10,-7,-4,2,-10,7,-8,8,5,-3,-2,10,-3,6,-9,9,-2,-10,5,6,-4,1,-5,10,-3,-10,7,1,-1,9,5,3,-4,4,7,-5,6,-1,-6,-4,3,4,-6,-9,1,-8,5,4,4,-1,1,-10,-3,-9,-3,10,8,5,8,-10,-1,5,-10,7,10,-5,-3,9,7,7,-2,-5,8,4,-3,6,5,-9,-2,-10,-4,5,-9,3,2,-5,4,5,-1,1,5,7,-9,-8,-3,-5,-3,-4,5,-8,7,1,7,-5,-5,2,2,-4,8,-3,-10,9,9,4,9,10,7,-7,-7,3,-9,-6,6,1,1,4,4,-5,-7,6,-2,3,-10,-4,-3,3,-1,2,-10,-1,10,-4,-9,5,7,3,2,1,-6,-2,-3,2,5,-1,-10,-8,10,-3,3,6,-3,-1,4,-8,-6,-1,5,-3,7,7,-8,8,-9,8,10,1,-4,-6,-4,-1,5,9,5,-2,8,2,6,-6,10,6,10,1,10,2,-4,-4,5,8,-7,-2,2,1,-5,-3,-2,5,6,6,5,-10,1,7,9,-7,8,1,5,-5,2,-3,7,-4,4,-1,-8,-8,-6,8,-2,4,-4,7,-9,-8,-2,-5,1,-4,-1,-5,-5,-1,-10,6,2,2,-5,3,-3,6,4,-4,3,9,2,-3,7,-8,1,-8,4,-8,1,4,4,9,1,10,-1,8,-3,2,4,-6,4,1,6,-6,1,-8,9,-3,-1,6,4,-9,6,-6,9,-7,-7,-10,8,-9,5,-5,7,9,-3,-1,-1,-3,-10,-7,-10,-4,5,-10,-10,-5,8,-1,10,-10,7,9,4,2,10,4,6,-8,2,5,7,-6,9,-8,9,1,3,-1,3,-10,-5,-6,-2,5,2,-5,1,6,3,1,5,-8,-4,-5,6,-2,10,3,2,-6,-7,5,-4,-8,-6,1,-10,10,-9,1,-8,6,2,-10,7,-1,6,-2,9,-1,8,-6,10,4,-1,-5,-9,9,-10,8,-4,2,4,-4,6,6,7,4,-10,-9,5,-1,6,-8,10,6,2,8,3,-7,-7,-3,-6,4,-7,-8,6,9,-3,8,10,9,-1,-9,1,3,2,-4,7,6,-8,6,-6,-6,1,-4,8,-4,2,-5,-1,3,-6,-2,5,-7,-4,9,-8,-3,-10,10,10,-9,9,-7,4,-4,7,3,5,6,-5,-3,1,1,-1,-9,5,5,-4,6,2,-8,7,-10,-3,4,-3,-8,1,6,-10,-4,5,-1,-2,6,-7,3,-8,-8,1,-7,-9,9,-6,-1,-1,3,6,4,-5,4,-7,-7,9,-3,5,5,7,-3,10,-1,-1,-7,-10,-5,-5,8,5,4,9,8,-9,10,-8,9,9,9,4,-8,-10,1,3,5,5,4,9,9,-5,-6,-4,-1,4,-4,7,-7,5,10,9,6,9,7,-3,7,-5,-1,7,1,-3,2,-5,6,-8,7,-6,-9,-4,2,-3,5,2,-5,9,10,1,3,10,-7,6,4,-9,-6,1,2,8,10,-5,-7,-2,-8,9,-10,-1,-7,-3,10,6,-6,-5,-9,-6,-1,5,-5,6,-2,7,4,-1,6,2,5,-3,6,-9,-10,-5,6,-2,-9,-6,-3,-2,-10,8,6,-5,9,-6,-7,2,-10,10,-7,6,-3,6,5,5,-3,-3,-4,-4,6,9,-4,1,-8,-9,5,10,8,-6,-5,8,3,-7,-2,1,8,1,9,-6,-5,1,-10,10,8,-9,-6,-9,10,5,4,10,-5,5,-3,2,-4,7,-5,-2,-4,4,-9,8,-8,3,-10,5,4,-9,1,-4,-6,10,10,2,2,4,8,1,7,-9,7,-10,6,-7,-1,-3,-5,-8,-5,-9,-8,-8,-6,-4,5,8,7,-4,-7,9,3,7,-5,3,5,6,-8,10,5,5,-7,-3,-10,9,-7,7,2,-8,-1,8,-6,9,-1,7,3,6,-6,-6,6,-6,-6,3,-1,9,-3,-5,-1,2,-3,8,3,-8,4,7,-1,-1,10,-7,6,-10,-2,7,-1,-5,-9,4,4,-1,8,-8,-3,-8,-4,1,-2,8,-7,-7,-7,-7,-3,8,-3,-8,9,9,-5,-4,-1,-1,-7,7,6,-4,-4,9,2,-7,-10,-5,8,-2,3,6,-2,-9,7,-5,-9,8,-2,1,8,-10,-2,9,10,-5,-9,9,9,2,-1,1,-8,3,7,5,-1,-6,-1,-3,6,4,-2,-9,-10,-6,-10,10,5,-9,9,-10,10,-5,8,-3,-7,-4,-1,-9,5,-1,2,4,-7,2,10,6,5,-2,9,-1,-2,7,-9,-4,10,9,7,9,-8,-9,2,-10,-7,2,-6,6,8,-3,8,1,-1,1,-6,3,3,4,-7,2,5,-4,9,-10,3,-3,-1,10,9,-1,4,-10,-5,-10,-1,8,8,-8,2,-3,-3,6,5,5,7,-8,1,-8,4,-9,-2,-2,1,-9,-2,-7,-1,9,9,7,-4,-9,-4,-1,6,-5,7,1,9,-10,-2,-6,-10,-6,-2,6,-1,1,1,4,-2,-6,-8,8,8,-8,4,1,10,-2,-4,8,-3,-1,-1,-2,5,1,-6,3,-8,4,5,-6,7,-9,8,6,-6,-8,3,-9,9,-6,-10,10,-9,10,2,-1,7,1,7,9,-6,10,8,-10,9,5,-4,-7,-1,-9,4,3,-9,-7,2,10,4,9,-7,-10,-6,6,-1,-5,10,7,-3,5,5,-8,7,-6,6,-4,6,-9,-10,4,-10,6,-2,-5,-1,7,-4,2,-1,-4,-6,1,-4,-6,-7,-8,1,8,6,8,-6,5,10,-1,6,9,6,5,2,6,4,-8,-9,2,-4,5,7,-9,-5,-7,8,4,6,3,3,-9,5,-3,6,10,-6,-9,2,10,-10,2,-3,-1,-8,-8,6,-7,5,-3,-7,-2,-7,8,10,-9,-4,-8,7,-5,8,3,1,4,10,-10,10,2,2,9,5,-10,-6,4,-2,8,4,-3,-1,-4,4,-10,5,-6,-1,7,-10,4,9,-1,9,-2,-3,10,2,7,-8,-2,10,-8,-2,6,5,-2,-8,-7,4,-1,-4,1,7,-4,6,7,-6,8,3,-2,3,-3,6,-9,-9,5,3,9,-5,-6,1,-8,2,4,9,-4,-7,3,-8,4,-3,3,7,8,7,5,-9,4,1,7,-6,-4,9,-8,2,-6,-3,2,3,1,4,-9,-1,4,-2,3,3,3,-7,-1,-5,3,-8,-7,5,-2,-6,-3,5,-10,-10,7,2,-5,2,-7,3,-4,-7,3,-1,-2,-5,5,-4,-6,-9,10,-4,-2,1,3,3,6,-8,-9,-3,7,6,5,-6,6,6,7,-3,6,2,9,-7,-3,-3,6,-5,-3,5,-3,-8,4,-7,4,4,3,9,9,-8,-3,-7,6,-3,5,6,9,-10,-10,6,6,-3,-5,-4,10,-7,2,3,-5,8,4,-9,2,8,6,-7,5,5,4,-4,-9,7,-6,1,7,-3,-5,-6,2,8,-9,2,7,-3,5,3,-10,-7,-1,8,-10,-10,1,-4,9,1,-9,1,-8,-6,4,1,2,-8,10,10,7,7,-8,-1,4,-7,4,-8,-4,9,6,10,10,10,6,-10,-1,-10,-7,-6,-4,-4,2,-3,8,2,4,3,-2,1,-6,10,5,6,1,-5,-6,-5,2,-3,-2,6,1,-7,4,-2,7,8,9,6,-8,7,9,-10,-10,3,2,-5,1,-5,-9,7,-8,-10,9,-1,8,-10,-7,-9,-3,-8,-4,-7,4,9,-2,9,-1,9,6,6,-9,2,7,5,-6,7,6,2,-10,5,-7,-2,-5,10,-2,-7,3,6,-5,-1,4,10,4,1,-4,3,-3,4,5,-3,-10,-9,2,-4,6,7,-3,-9,-2,8,9,9,-6,1,-7,-10,5,-10,5,-3,7,-1,10,7,2,-7,-9,-2,1,8,-6,-3,-10,-7,6,5,3,-6,-10,4,-2,-3,-9,-8,10,8,-6,8,-5,2,8,-7,-7,-5,-7,7,2,-10,8,-3,4,4,-6,8,7,5,9,-6,6,-1,2,4,-1,5,2,6,1,10,4,9,9,-9,-7,-5,8,-9,6,-2,-8,6,7,10,6,7,7,1,1,4,-5,-2,7,-1,5,-1,2,-4,3,-9,3,7,4,-6,8,-5,-1,5,-8,-10,-2,5,2,5,3,-4,-9,-6,1,-8,-4,-9,1,10,10,2,4,-6,-9,2,4,-10,-9,8,10,6,-10,-6,10,-10,-9,6,2,-10,4,6,-7,3,-5,-5,-6,9,-9,6,-5,2,1,-5,-10,7,-6,2,-1,9,-5,-3,7,-10,10,-6,4,-9,7,-9,1,-3,-9,10,1,10,-6,-8,6,9,-5,3,4,4,5,8,-9,3,-5,2,4,3,-4,5,10,7,1,-3,-9,-6,-10,2,-7,-9,-6,10,10,2,-4,-5,-10,-8,-10,6,9,8,8,9], dtype = "uint32")#candidate|2036|(2704,)|const|uint32
call_2035 = func_213_call(relay.reshape(const_2036.astype('uint32'), [13, 13, 16]), relay.reshape(const_2036.astype('uint32'), [13, 13, 16]), )
call_2037 = func_213_call(relay.reshape(const_2036.astype('uint32'), [13, 13, 16]), relay.reshape(const_2036.astype('uint32'), [13, 13, 16]), )
output = relay.Tuple([call_2033,call_2035,const_2036,])
output2 = relay.Tuple([call_2034,call_2037,const_2036,])
func_2039 = relay.Function([], output)
mod['func_2039'] = func_2039
mod = relay.transform.InferType()(mod)
output = func_2039()
func_2040 = relay.Function([], output)
mutated_mod['func_2040'] = func_2040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_912_call = mod.get_global_var('func_912')
func_914_call = mutated_mod.get_global_var('func_914')
call_2121 = relay.TupleGetItem(func_912_call(), 2)
call_2122 = relay.TupleGetItem(func_914_call(), 2)
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
const_2124 = relay.const([[9,-4],[-6,-5],[-4,6],[-5,-3],[-2,-6],[8,-8],[-8,-1],[-8,-4],[3,-7],[2,-7],[5,10],[-10,2],[9,5],[-5,-8],[-5,-8],[1,2],[-1,-3],[1,3],[-1,7],[-8,-7],[8,-6],[2,-8],[4,2],[9,9],[4,-6],[4,-2],[-2,10],[9,-9],[-7,10],[9,-10],[5,8],[7,5],[-3,-6],[-10,-2],[7,-4],[-9,-1],[-8,-8],[10,-9],[10,-8],[-9,8],[-4,7],[-3,6],[-2,4],[3,-10],[10,-7],[-5,-5],[6,-2],[8,4],[-6,-6],[3,1],[-2,9],[-2,-6],[6,-3],[10,6],[5,10],[1,5],[-7,8],[-5,-9],[4,4],[-6,10],[-4,3],[-3,9],[-8,-1],[-2,-6],[-9,3],[3,-1],[-10,5],[-5,-10],[-10,-4],[-1,-10],[1,7],[8,-4],[-8,-1],[9,-10],[-8,6],[3,-4],[-8,-5],[9,-7],[-5,-6],[8,1],[9,10],[3,8],[6,7],[-10,2],[7,-7],[1,9],[-10,2],[-8,-5],[5,6],[5,1],[10,3],[-7,5],[2,-2],[-6,2],[7,4],[-5,2],[-6,7],[-4,5],[6,-1],[-4,-7],[-10,1],[10,-2],[7,2],[-8,-3],[-3,-6],[-1,-1],[10,10],[-2,-4],[7,-8],[1,6],[9,2],[-4,-10],[7,6],[-8,7],[-10,-5],[5,5],[-7,1],[-5,5],[-6,-1],[-4,-9],[-8,1],[3,7],[-4,-8],[-2,-10],[-5,6],[-9,4],[-2,6],[-6,8],[-4,-4],[-6,2],[3,-10],[-2,5],[-3,-5],[-4,6],[4,1],[-10,7],[-8,1],[-10,-8],[5,-10],[-8,2],[8,4],[8,7],[5,-5],[-6,9],[3,-10],[6,-10],[5,6],[6,7],[-9,5],[2,-3],[-9,1],[1,1],[-1,9],[-8,6],[8,9],[4,-8],[-6,10],[5,4],[-2,-1],[-5,8],[-1,3],[5,-7],[5,-9],[-1,-10],[1,6],[5,-10],[-6,-9],[3,-9],[6,6],[-5,-6],[-8,-9],[-3,-7],[-3,10],[6,5],[1,5],[3,8],[9,-1],[-8,7],[6,-4],[-9,1],[7,-7],[3,7],[6,-10],[9,8],[-4,4],[-8,8],[9,2],[7,9],[7,9],[10,4],[1,6],[-1,-7],[3,-9],[-2,-6],[-10,-10],[-4,-3],[5,-10],[1,10],[7,-1],[10,5],[1,8],[-10,-6],[-5,-9],[3,1],[-7,2],[7,9],[10,4],[10,-7],[5,4],[-2,-8],[-7,7],[1,10],[10,-6],[-6,1],[-5,-9],[-6,3],[2,7],[-10,-2],[-3,6],[8,2],[10,5],[2,-3],[10,-3],[-8,8],[-6,5],[-9,10],[7,-6],[4,5],[7,-9],[5,-6],[-3,1],[-7,-1],[-3,6],[5,-8],[4,1],[3,9],[7,8],[9,7],[5,3],[-9,3],[-3,8],[7,-4],[9,8],[-3,-1],[-4,-10],[-5,4],[7,1],[4,-9],[-5,8],[-10,-2],[8,-2],[-6,9],[4,-4],[8,-10],[-7,-2],[7,9],[6,-5],[-2,9],[6,10],[6,5],[-3,-8],[6,8],[1,6],[1,9],[5,-6],[-10,6],[6,-1],[7,2],[-4,1],[-10,-5],[8,6],[-9,7],[-8,2],[9,5],[5,-10],[1,-4],[-2,-5],[5,3],[3,5],[6,-7],[-8,-4],[8,4],[5,-10],[4,9],[1,10],[8,-1],[3,-3],[1,-5],[3,-4],[9,8],[2,10],[2,-3],[5,-10],[7,4],[-9,-10],[10,-7],[-5,6],[1,-9],[2,8],[-9,6],[6,-9],[-9,-6],[-1,-1],[4,-4],[1,4],[-3,-6],[2,-10],[6,-5],[4,-9],[6,-3],[4,7],[-2,-8],[4,6],[4,-4],[-5,-7],[10,7],[-5,-7],[2,9],[-2,3],[-1,8],[2,3],[-5,2],[9,4],[1,-3],[8,9],[-8,5],[7,3],[-6,1],[6,-3],[9,2],[3,9],[-7,-10],[2,2],[-8,-1],[4,10],[6,7],[-5,2],[4,-6],[-2,-2],[-9,2],[2,1],[-3,-6],[8,-7],[7,-6],[-2,10],[4,2],[-1,5],[-9,-1],[-2,-2],[7,-2],[-3,-9],[10,-5],[-4,8],[-3,4],[-7,3],[-7,-6],[9,6],[5,10],[8,8],[-5,-10],[-10,-8],[3,6],[-2,-5],[-7,10],[8,-1],[5,-10],[-1,10],[-3,-4],[1,7],[-4,3],[6,-5],[-8,9],[10,-10],[3,5],[-10,9],[-7,8],[7,-1],[10,6],[-1,-9],[7,-6],[9,-1],[8,6],[3,1],[2,-8],[-7,-7],[3,3],[8,7],[-1,2],[1,-2],[-1,6],[6,4],[9,5],[2,-2],[-9,1],[10,-3],[-10,-1],[-10,1],[3,-7],[-9,7],[6,-5],[-7,-3],[6,6],[-1,7],[5,4],[10,1],[5,4],[-3,-1],[6,5],[-4,2],[2,4],[-8,-7],[-8,2],[-6,-3],[3,6],[-8,-4],[4,-8],[8,8],[9,-3],[2,1],[1,-10],[-6,-2],[10,-4],[-5,-5],[-10,7],[4,-9],[-7,9],[4,-1],[-1,4],[4,6],[-1,4],[-1,-5],[1,-10],[-9,-9],[1,8],[-6,-10],[10,6],[-9,-7],[7,6],[-10,10],[7,10],[8,2],[5,-5],[-7,-2],[9,10],[-2,-8],[-10,-8],[7,6],[7,10],[3,-5],[10,-3],[-4,-5],[-3,-1],[-3,6],[3,-6],[2,-6],[9,-6],[-10,3],[2,-8],[-1,1],[7,10],[1,3],[-10,8],[-2,2],[-2,4],[-3,1],[-4,-4],[-9,10],[-9,6],[-6,7],[10,7],[10,3],[-2,-2],[-7,10],[10,-8],[-1,5],[-9,-1],[9,-9],[3,-1],[9,-3],[-5,4],[7,-3],[8,-8],[-10,-10],[-3,1],[10,1],[10,-4],[-7,8],[3,-4],[-5,-9],[-8,3],[-9,6],[7,6],[-1,-1],[-10,-8],[4,-1],[-7,7],[-1,7],[3,-9],[5,6],[5,9],[10,5],[-5,-1],[10,-5],[-4,-8],[-1,4],[7,6],[-9,5],[-6,-9],[4,-10],[-8,9],[-10,4],[-7,1],[-9,1],[8,-1],[-4,2],[3,-8],[-7,8],[-9,3],[9,5],[2,-5],[-1,-9],[8,6],[10,-1],[9,-10],[10,-2],[-2,8],[2,1],[-9,7],[7,-1],[-7,6],[-6,10],[6,2],[7,5],[-10,-5],[8,8],[-4,-9],[10,7],[-8,-5],[-10,10],[7,4],[-7,-5],[1,1],[8,9],[2,-5],[10,10],[-3,-10],[1,10],[3,4],[-2,7],[9,-7],[5,8],[-5,-10],[5,3],[-8,-2],[5,9],[-8,8],[-9,7],[4,6],[-9,-9],[-9,9],[10,3],[-7,6],[-1,-1],[-5,-10],[5,4],[-9,-9],[7,3],[6,2],[-6,-3],[-2,-8],[-4,-1],[-10,-5],[8,4],[-2,-6],[-2,4],[2,5],[1,-4],[7,-5],[1,-9],[-8,-5],[4,4],[6,-4],[10,6],[4,-4],[9,9],[8,-4],[3,-9],[8,7],[-5,5],[-2,10],[6,8],[7,-6],[-7,-2],[-2,-5],[2,6],[-10,-9],[4,6],[10,2],[2,-8],[9,5],[1,-3],[6,8],[2,5],[6,6],[-7,-8],[8,2],[9,1],[4,-7],[7,-7],[-8,8],[-6,-9],[-6,-4],[9,9],[3,9],[3,-3],[-10,-3],[-10,10],[5,5],[3,-6],[1,4],[-2,-7],[-8,7],[10,10],[10,-7],[-4,-6],[6,-10],[9,10],[6,10],[-8,-2],[-5,8],[9,-5],[3,-9],[8,-8],[1,5],[-4,10],[10,-7],[-6,5],[-8,-9],[4,9],[-6,4],[6,-10],[10,4],[10,-7],[3,7],[2,3],[8,10],[3,-9],[8,5],[-5,-10],[10,-2],[-8,-9],[2,-10],[-9,-6],[-4,8],[6,8],[-3,7],[-10,5],[-10,8],[-8,9],[-2,-4],[-4,9],[9,-9],[7,8],[-2,7],[3,-10],[1,-1],[3,-8],[-2,6],[-5,8],[-4,-8],[2,-10],[2,-6],[9,7],[2,-10],[-9,9],[-1,1],[-2,9],[-4,7],[-4,2],[-4,8],[-4,5],[5,2],[4,-7],[-8,2],[-5,-8],[-7,-7],[-3,6],[7,1],[10,-7],[3,-9],[3,-5],[-4,3],[-7,2],[-9,6],[8,-9],[7,6],[8,-2],[-5,2],[-9,-8],[-4,-4],[-5,7],[-5,-6],[-7,10],[5,-3],[1,7],[-6,-5],[6,10],[6,10],[-2,3],[-2,-10],[4,-4],[8,-5],[3,-7],[1,-6],[5,4],[9,1],[1,-9],[-5,-1],[-1,-7],[2,-7],[3,6],[6,-10],[5,10],[-8,-7],[7,1],[7,8],[-8,-8],[-8,-7],[-1,-7],[-2,-5],[1,-3],[8,-5],[6,-4],[9,-2],[8,7],[-4,-9],[7,9],[-2,-6],[-4,1],[9,-5],[-1,5],[-3,-7],[6,9],[10,3],[3,-7],[-10,10],[-4,-4],[-7,5],[9,8],[-8,3],[10,-3],[9,6],[-2,10],[7,-4],[9,3],[10,-5],[-1,-1],[9,4],[7,8],[3,-9],[-10,-7],[-9,10],[-2,5],[5,10],[-3,7],[-6,-9],[-6,10],[-4,6],[-8,-1],[-5,-4],[-5,8],[-8,-6],[-9,3],[3,2],[-3,-1],[-3,-9],[2,-9],[-2,-4],[3,9],[-10,2],[-7,9],[-9,9],[3,-8],[-9,-9],[-10,7],[-1,-1],[5,-8],[2,-6],[-7,10],[6,-9],[-9,5],[-6,8],[3,8],[-8,-10],[8,10],[10,-10],[1,-4],[-9,-5],[-1,-8],[-9,5],[-4,7],[3,-5],[-7,-10],[10,-3],[-9,-9],[-1,-9],[-7,1],[5,-7],[10,-9],[3,-5],[-10,9],[-4,3],[1,-6],[-6,-5],[1,-10],[-4,5],[3,9],[9,-8],[7,-1],[2,-8],[7,3],[8,6],[-6,8],[-3,3],[7,2],[4,-7],[9,-5],[3,2],[-5,1],[7,-3],[-6,-10],[-3,7],[-5,-4],[-10,1],[8,-10],[9,-10],[1,10],[-1,-8],[5,7],[10,-6],[2,-5],[2,4],[4,-10],[8,-9],[-1,6],[3,10],[1,-4],[1,8],[-1,-8],[1,-4],[5,-9],[-5,-1],[-7,-10],[-10,-6],[10,-6],[1,4],[8,-6],[3,-5],[-3,-1],[-1,7],[-1,8],[-9,-4],[4,10],[3,9],[6,-2],[5,-7],[-10,-9],[3,10],[-10,5],[1,-8],[7,-2],[10,6],[7,6],[5,-10],[-2,-7],[4,-8],[4,-4],[1,1],[10,2],[5,7],[-4,-3],[8,4],[-4,-4],[-6,3],[-6,-4],[10,6],[-9,1],[6,7],[3,-1],[-5,1],[-7,10],[-9,-3],[3,-3],[7,5],[2,1],[6,-10],[-7,-1],[7,6],[9,9],[-10,-7],[2,-9],[1,-4],[-2,1],[-2,-8],[-3,3],[-3,5],[-4,3],[7,-8],[10,-9],[-1,-2],[-9,-2],[3,9],[-1,9],[9,7],[8,-9],[8,5],[5,8],[10,-1],[-4,-7],[-3,4],[-9,7],[7,-3],[-1,-10],[-2,-8],[-3,-4],[-6,-10],[-8,-7],[5,6],[-6,-4],[-6,-8],[9,-8],[6,-7],[2,-2],[6,1],[2,8],[1,1],[-6,10],[2,-1],[-7,2],[-6,-2],[10,-9],[7,4],[-9,-7],[8,-10],[3,-8],[-10,-7],[-9,8],[-10,6],[-6,10],[-6,-1],[7,-7],[-5,1],[7,-4],[8,1],[2,5],[-2,2],[5,-1],[6,-5],[-9,-10],[-9,4],[-10,-2],[2,8],[-7,-8],[3,8],[1,10],[-1,-4],[7,-5],[-5,-2],[-9,-5],[-10,-7],[-5,5],[-6,-9],[-10,6],[-4,-2],[-4,-9],[7,-6],[-6,9],[6,-2],[-10,1],[9,3],[-9,-1],[-1,5],[-1,6],[6,4],[5,-9],[-9,1],[5,7],[2,-3],[1,3],[8,-7],[2,7],[-7,9],[4,2],[6,-5],[5,-7],[4,-7],[6,6],[8,5],[9,8],[-4,-8],[3,-4],[-1,-4],[-10,3],[-2,8],[-2,4],[-8,-2],[4,2],[6,-6],[8,-10],[8,-7],[-4,4],[-5,-6],[7,-9],[-10,1],[-2,1],[3,-9],[-9,3],[-4,8],[1,5],[-4,-2],[-10,5],[3,-5],[-3,5],[6,-8],[-4,4],[1,5],[6,7],[1,-1],[2,5],[4,-2],[-6,2],[10,7],[-2,9],[5,-3],[-6,-8],[-10,1],[7,-7],[6,7],[-6,-4],[-10,8],[3,3],[-3,-8],[-9,-7],[-7,2],[4,2],[-1,-10],[9,-3],[8,-1],[1,1],[-2,-5],[7,-9],[2,-6],[-3,4],[9,-10],[1,-7],[7,2],[-2,5],[3,-3],[4,3],[-5,2],[-7,-9],[2,5],[3,2],[8,9],[8,3],[6,10],[-10,-5],[1,-1],[4,7],[1,9],[3,-5],[5,10],[10,3],[-9,-5],[7,4],[-9,-8],[-6,1],[6,1],[-1,-10],[-2,10],[-4,-7],[7,2],[4,-1],[10,6],[-4,-3],[-4,8],[3,-2],[8,9],[6,-7],[-10,8],[-6,6],[8,-3],[-6,-1],[-1,8],[6,-10],[-5,-8],[-5,-5],[-5,-8],[1,8],[6,10],[-8,-4],[1,-4],[5,5],[1,10],[-10,4],[7,-8],[-7,-8],[10,5],[-10,-10],[5,1],[-5,10],[10,5],[-7,5],[10,2],[2,10],[-7,-3],[-6,-9],[-6,-2],[7,-9],[4,-6],[5,-6],[-7,-2],[-8,2],[-9,-4],[7,-7],[6,-3],[3,-1],[-10,-9],[8,-9],[4,3],[-4,-9],[1,10],[-9,-2],[6,9],[9,-6],[6,-1],[-1,-9],[-2,6],[9,-10],[9,2],[-7,-4],[-10,-4],[-2,8],[-6,-4],[1,-1],[-8,-2],[-2,-1],[4,-8],[6,6],[4,6],[10,6],[7,4],[-5,-3],[-2,2],[-9,7],[-4,6],[9,-7],[10,1],[-7,8],[8,2],[-7,-6],[3,-4],[-1,-6],[8,-5],[4,1],[5,-5],[-10,-8],[5,4],[6,2],[10,-2],[9,-5],[1,-5],[2,-10],[8,9],[10,-10],[7,8],[8,5],[-10,-8],[-8,-7],[3,-4],[7,-1],[-1,7],[-10,-6],[-1,-2],[-8,6],[5,-6],[-8,-2],[4,9],[-1,-10],[-3,-4],[2,-9],[8,-3],[-10,4],[-4,10],[3,7],[7,-3],[-6,-3],[-8,9],[-10,-4],[-4,7],[-5,-1],[1,-2],[-1,-4],[-3,-1],[7,-8],[-4,6],[9,-2],[-8,-5],[10,-3],[7,-5],[-4,-9],[3,-8],[5,-7],[4,2],[-5,4],[-5,-6],[9,6],[-7,-4],[-8,-2],[2,-3],[-7,-5],[4,-4],[-4,-2],[-1,4],[2,-4],[8,9],[-1,-7],[10,-2],[-2,8],[6,5],[-4,9],[-9,-5],[-10,7],[-1,4],[-9,6],[2,-8],[7,-10],[-2,3],[4,-1],[-4,2],[-9,9],[-7,-1],[5,8],[7,2],[4,9],[9,-9],[-5,-5],[-1,10],[-8,-10],[-4,-3],[-10,6],[9,-3],[2,-8],[-5,1],[9,8],[5,-10],[9,-7],[-2,-3],[5,10],[-9,-6],[3,1],[3,8],[10,-4],[4,-5],[5,-9],[6,9],[-3,-3],[2,-5],[-5,4],[8,10],[8,2],[-9,6],[-3,-10],[6,8],[10,2],[-5,6],[-3,8],[2,1],[3,3],[-2,-5],[-5,2],[6,-1],[-3,8],[-1,-8],[3,-8],[-5,5],[4,-9],[7,1],[-2,-3],[5,7],[-10,6],[7,8],[9,5],[4,-1],[7,5],[5,-8],[-9,5],[7,-1],[-7,8],[10,-4],[-1,2],[-2,-2],[-4,-5],[-2,-6],[-5,4],[3,9],[-2,-1],[-5,1],[7,-1],[-8,-10],[-1,9],[-9,4],[-6,-6],[-4,8],[-5,8],[6,-6],[-5,-4],[10,-3],[-10,-4],[-9,-2],[7,-3],[-4,8],[-10,7],[-8,-2],[10,7],[-1,-10],[-5,9],[3,9],[9,2],[3,-3],[6,10],[5,-8],[10,-4],[6,-2],[-10,-4],[-2,4],[7,7],[6,4],[9,8],[7,-6],[1,-10],[6,9],[4,-9],[-8,-10],[-9,-4],[4,-8],[1,-5],[-4,-7],[-3,-4],[-8,-2],[-8,-1],[-4,-1]], dtype = "uint32")#candidate|2124|(1352, 2)|const|uint32
call_2123 = func_213_call(relay.reshape(const_2124.astype('uint32'), [13, 13, 16]), relay.reshape(const_2124.astype('uint32'), [13, 13, 16]), )
call_2125 = func_213_call(relay.reshape(const_2124.astype('uint32'), [13, 13, 16]), relay.reshape(const_2124.astype('uint32'), [13, 13, 16]), )
output = relay.Tuple([call_2121,call_2123,const_2124,])
output2 = relay.Tuple([call_2122,call_2125,const_2124,])
func_2143 = relay.Function([], output)
mod['func_2143'] = func_2143
mod = relay.transform.InferType()(mod)
output = func_2143()
func_2144 = relay.Function([], output)
mutated_mod['func_2144'] = func_2144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_2198 = func_886_call()
call_2199 = func_886_call()
func_1240_call = mod.get_global_var('func_1240')
func_1243_call = mutated_mod.get_global_var('func_1243')
var_2208 = relay.var("var_2208", dtype = "int32", shape = (450,))#candidate|2208|(450,)|var|int32
call_2207 = relay.TupleGetItem(func_1240_call(relay.reshape(var_2208.astype('int32'), [450,])), 2)
call_2209 = relay.TupleGetItem(func_1243_call(relay.reshape(var_2208.astype('int32'), [450,])), 2)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_2215 = relay.TupleGetItem(func_1116_call(), 1)
call_2216 = relay.TupleGetItem(func_1118_call(), 1)
output = relay.Tuple([call_2198,call_2207,var_2208,call_2215,])
output2 = relay.Tuple([call_2199,call_2209,var_2208,call_2216,])
func_2218 = relay.Function([var_2208,], output)
mod['func_2218'] = func_2218
mod = relay.transform.InferType()(mod)
mutated_mod['func_2218'] = func_2218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2219 = relay.var("var_2219", dtype = "int32", shape = (450,))#candidate|2219|(450,)|var|int32
func_2218_call = mutated_mod.get_global_var('func_2218')
call_2220 = func_2218_call(var_2219)
output = call_2220
func_2221 = relay.Function([var_2219], output)
mutated_mod['func_2221'] = func_2221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_2309 = func_750_call()
call_2310 = func_750_call()
uop_2346 = relay.sinh(call_2309.astype('float32')) # shape=(15, 2, 14)
uop_2348 = relay.sinh(call_2310.astype('float32')) # shape=(15, 2, 14)
output = relay.Tuple([uop_2346,])
output2 = relay.Tuple([uop_2348,])
func_2356 = relay.Function([], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mutated_mod.get_global_var('func_2356')
call_2357 = func_2356_call()
output = call_2357
func_2358 = relay.Function([], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1876_call = mod.get_global_var('func_1876')
func_1878_call = mutated_mod.get_global_var('func_1878')
call_2384 = func_1876_call()
call_2385 = func_1876_call()
output = relay.Tuple([call_2384,])
output2 = relay.Tuple([call_2385,])
func_2388 = relay.Function([], output)
mod['func_2388'] = func_2388
mod = relay.transform.InferType()(mod)
mutated_mod['func_2388'] = func_2388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mutated_mod.get_global_var('func_2388')
call_2389 = func_2388_call()
output = call_2389
func_2390 = relay.Function([], output)
mutated_mod['func_2390'] = func_2390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_2456 = func_1576_call()
call_2457 = func_1576_call()
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_2466 = func_886_call()
call_2467 = func_886_call()
output = relay.Tuple([call_2456,call_2466,])
output2 = relay.Tuple([call_2457,call_2467,])
func_2472 = relay.Function([], output)
mod['func_2472'] = func_2472
mod = relay.transform.InferType()(mod)
mutated_mod['func_2472'] = func_2472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mutated_mod.get_global_var('func_2472')
call_2473 = func_2472_call()
output = call_2473
func_2474 = relay.Function([], output)
mutated_mod['func_2474'] = func_2474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_2531 = func_750_call()
call_2532 = func_750_call()
output = call_2531
output2 = call_2532
func_2535 = relay.Function([], output)
mod['func_2535'] = func_2535
mod = relay.transform.InferType()(mod)
output = func_2535()
func_2536 = relay.Function([], output)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_2615 = func_886_call()
call_2616 = func_886_call()
output = relay.Tuple([call_2615,])
output2 = relay.Tuple([call_2616,])
func_2630 = relay.Function([], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
output = func_2630()
func_2631 = relay.Function([], output)
mutated_mod['func_2631'] = func_2631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2687 = relay.TupleGetItem(func_2630_call(), 0)
call_2688 = relay.TupleGetItem(func_2631_call(), 0)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_2691 = relay.TupleGetItem(func_1999_call(), 1)
call_2692 = relay.TupleGetItem(func_2001_call(), 1)
func_1513_call = mod.get_global_var('func_1513')
func_1515_call = mutated_mod.get_global_var('func_1515')
const_2715 = relay.const([7,10,-9,-1,-3,8,6,-5,-10,-3,-5,4,6,2,-7,1,-3,3,3,-9,-7,-2,-6,-5,5,7,5,-5,-5,3,10,-5,-9,6,-2,-8,9,1,9,4,-6,-6,-2,1,10,9,-2,-4,3,-2,-5,6,-2,-1,-3,-7,-6,9,5,-5,-6,6,9,10,8,-8,2,-8,9,7,4,2,-6,8,-2,8,-7,9,-4,7,9,-4,-9,7,-2,3,-8,-6,7,10,8,1,-2,-1,-9,8,-8,-1,7,-7,4,-6,7,9,-7,7,-6,-1,9,7,-2,6,-1,7,4,-8,-7,1,6,10,-6,1,5,2,-5,10,6,-9,2,5,-3,-4,-5,4,2,9,1,4,1,10,7,-3,-7,-7,8,2,-3,2,1,3,10,-3,-1,8,5,8,-7,2,-3,2,-1,5,-3,5,-2,7,-2,6,-9,5,-2,5,-4,-5,8,-10,-2,-4,-3,6,9,9,6,-3,10,1,1,-3,-5,-3,4,1,-10,10,5,-9,1,-4,-5,-6,-8,-9,4,-5,-8,3,2,9,-10,7,7,8,6,-7,-2,8,-9,-9,8,-4,-2,2,1,-8,-10,-4,1,-5,7,-9,-4,-9,5,7,-3,2,8,-9,-5,9,10,-4,-7,-9,10,5,5,8,3,-5,-8,2,-3,6,10,5,1,2,-6,-4,8,-2,-3,-5,6,5,-7,10,9,-7,-1,2,10,2,4,-4,-3,-7,7,-5,2,-4,6,-10,-8,-8,7,-3,-4,7,-8,2,7,10,-1,-4,-4,3,-2,6,8,-1,4,6,-8,5,3,-9,-7,4,-5,-3,9,-8,-9,-3,10,5,-9,-9,-3,-2,2,-9,-10,6,-5,4,-5,7,9,-2,-7,3,6,-2,6,7,7,8,-1,3,-5,10,-1,3,-8,-9,2,10,3,8,7,-9,1,2,-2,-6,3,-7,4,4,-7,-6,4,6,1,9,9,-4,5,-2,2,6,-5,-10,4,-10,9,-9,-3,10,-9,4,7,8,-4,3,-2,1,-3,-8,-7,10,-6,6,-6,-5,-7,2,-5,-8,-5,-4,1,4,-6,-2,1,-6,-3,-6,1,1,-10,-4,5,3,4,-7,-3,-8,3,10,2,-1,-10,-1,10,-1,-6,5,-6,1,6,-6,9,7,-1,-8,-3,-7,7,6,-9,6,-9,-9,9,-8,8,-5,-7,10,9,3,8,5,-8,-3,-7,4,-1,-2,3,-9,-3,9,-5,9,9,-6,-2,6,-3,8,-9,-7,-7,5,10,-10,-6,-4,-8,-7,-5,-7,5,6,2,9,8,4,-6,5,10,-8,2,9,4,-8,8,-5,-7,-2,-7,-2,8,10,4,-9,-1,-5,10,-3,-8,3,-6,-1,-9,4,8,3,-4,10,-8,-4,-8,2,-3,-2,7,8,-2,-10,4,9,2,7,-4,-3,10,1,-8,-5,9,-1,1,-4,10,5,2,7,-3,9,3,-10,-1,10,6,-2,3,3,-5,-8,-5,-1,5,8,-10,7,-10,8,-8,5,-6,-10,10,-4,4,-10,-2,-3,-6,-9,9,4,3,-5,2,6,6,-8,9,9,-3,2,9,4,-8,4,7,1,9,10,5,-1,1,-7,-1,-6,9,-2,3,6,9,1,7,7,-7,9,-4,-4,10,-7,-10,-7,-3,7,-5,7,2,-1,9,5,4,7,4,4,3,-7,6,-1,-5,5,1,5,2,-2,-3,-7,1,-6,5,1,3,2,5,6,-4,-1,5,-10,-3,7,9,4,8,-7,10,-3,-9,2,-10,4,-1,1,-3,4,3,-2,5,-6,-6,8,-2,-8,-7,5,-9,1,7,8,3,8,3,-2,-5,-3,-3,8,-3,-8,-9,6,-3,-9,-9,10,9,1,7,-10,2,-5,6,2,-2,-10,3,-8,-4,-7,-4,-8,5,6,-3,-6,2,1,5,-9,-4,-7,-8,-5,1,-7,9,9,5,7,2,4,-7,3,-10,10,-3,3,9,4,-10,-9,6,-4,-3,-8,6,-10,9,-4,8,-3,10,-2,3,-1,7,-1,-7,-2,6,9,6,-5,-5,-3,3,-5,1,-2,-3,7,-4,-1,-1,-5,-6,1,4,-6,2,-3,7,-10,5,-5,6,8,-10,2,5,10,-10,3,6,-6,-1,5,-8,8,-6,4,7,-1,3,10,-9,-7,-3,6,10,-8,-10,10,-8,1,-3,6,-7,9,-2,-5,-9,-1,-5,-2,6,7,-2,4,-5,-4,2,-10,-8,-8,-6,-1,-7,9,-9,6,-8,-3,-10,-10,6,5,5,6,4,6,-8,7,9,-7,7,-6,-6,7,8,1,3,-3,-9,6,4,5,8,9,-8,-6,10,9,-2,2,-4,-5,6,7,-6,3,4,-4,-8,10,7,-2,-7,-3,-7,-1,7,-10,-2,2,-2,10,1,-6,4,6,1,8,-8,9,5,6,5,-7,-3,-7,-2,-10,-10,3,-2,5,6,5,6,9,3,-5,1,9,3,-8,-4,9,7,-8,-10,4,10,-9,-3,-2,-6,-9,1,3,-4,8,-1,4,6,9,-6,-3,2,5,-2,6,-3,7,2,7,-4,4,1,-3,9,-4,-5,-3,9,-6,6,3,6,-3,-1,-2,7,-10,5,7,7,1,10,-1,-6,4,-9,-9,-4,-1,5,9,3,-2,5,4,-3,-4,-1,-4,3,6,2,7,10,-4,-5,-8,-2,-7,-2,-9,-6,-1,-7,1,-2,2,-4,3,-6,10,-8,10,-1,-9,9,-1,10,-1,5,-8,1,-3,8,-1,-3,-8,9,2,-6,-4,-6,10,-5,4,-5,10,-10,-4,-9,5,-4,-2,10,5,-5,-10,4,-9,-3,10,3,7,-3,4,-4,5,-1,-2,-2,-6,8,10,-8,-10,1,-10,-9,10,7,-5,4,-10,-10,-7,-3,-9,-10,10,9,-8,9,-5,-4,2,10,4,-1,10,-9,2,-9,-1,-2,-5,-3,1,3,-2,-10,10,-6,-5,-9,8,1,7,5,-7,3,7,-8,-7,4,-8,8,6,2,-2,-6,6,10,-7,5,1,-9,1,-9,-8,2,7,6,5,-7,-9,-5,2,10,2,7,-3,-4,-4,7,-5,-8,8,-10,-1,9,-1,7,-2,7,4,9,-10,4,-7,-4,9,-9,-7,1,5,10,-4,3,3,2,-4,5,-8,-8,9,9,5,8,-6,-1,-6,-9,5,-8,2,6,-3,-1,-9,5,-10,-9,-2,-6,3,-7,6,1,10,2,1,9,8,-4,9,-8,-4,2,3,2,5,8,7,-3,-9,10,-2,4,9,8,5,-6,4,-5,-8,-4,6,4,-1,2,-1,-10,1,6,1,-9,1,-7,5,-1,-7,-6,7,8,-7,8,3,3,-3,4,-5,4,10,1,3,8,7,7,-2,-1,-5,6,-8,-10,10,-7,-8,-10,-4,4,3,9,6,7,9,6,9,-2,5,-10,-7,-9,-9,3,-10,-1,1,-6,-4,-6,10,-8,5,6,1,4,-4,-3,2,6,-5,6,7,-4,6,5,-3,5,-5,8,8,4,-5,-4,-4,-10,7,8,9,-4,-3,10,-4,-4,7,-6,3,8,-8,-4,3,5,9,4,5,-2,-7,-2,9,-9,-7,-5,5,-8,-6,-7,-4,10,6,-3,10,-7,10,-9,7,-9,-4,-5,-6,4,-3,2,5,-5,4,10,-3,-4,-8,4,-10,10,-7,-3,-7,-6,9,-10,-10,3,-10,1,-10,8,7,-5,-7,10,-9,-9,-1,-7,-3,-5,1,-10,-1,-6,-5,10,8,-8,2,1,5,6,-4,-6,-9,1,-9,10,-1,2,3,-7,-1,10,-5,3,-10,5,3,3,4,-3,-5,4,1,4,-2,-9,-6,-4,-9,-2,-7,2,-10,-3,9,9,9,1,-1,-6,-6,6,3,4,9,2,4,-10,-7,9,9,1,1,-9,-9,-7,-9,6,7,5,-7,-3,-1,3,6,-5,10,-2,-9,7,-6,-10,9,9,7,1,-3,5,9,-3,2,9,-3,4,4,10,6,-4,-8,-3,9,9,10,7,1,-6,7,6,-8,3,-4,1,5,-6,-8,-9,3,-2,-3,-4,-8,-9,8,6,8,8,-4,-1,-4,-3,-6,-3,4,3,2,-4,-10,5,10,3,-1,-9,2,4,-9,-10,3,5,9,-5,-9,-1,-3,6,8,-1,-4,3,-10,-4,6,-5,9,6,-2,-1,7,-10,10,4,-7,6,5,9,-8,6,7,3,-3,-6,-8,-6,8,-7,-3,-8,-6,-4,-4,8,-4,-6,-8,-8,9,-6,10,-4,-7,9,-4,2,1,-2,-7,-7,-7,-3,-3,5,-5,-9,-2,-5,7,-1,-3,10,-9,1,5,6,-2,-6,-9,6,-2,9,1,-5,2,-7,10,-10,-2,-2,10,10,6,6,-4,9,1,-2,-6,9,4,2,7,-3,-5,-7,-5,-7,-2,-8,7,-4,7,-1,4,10,7,-4,-6,-5,-3,5,1,1,-5,10,4,10,-2,4,-10,6,8,4,-8,-4,3,-1,9,8,8,-6,3,-6,7,-5,-4,-6,2,6,-1,4,-10,-10,6,-5,-7,-7,-6,-9,4,-2,4,3,-10,-9,1,-6,-8,-2,-4,7,7,-4,-8,6,7,-2,-5,-9,4,-7,1,8,10,2,-6,-7,-4,5,-6,-5,8,3,2,10,10,-5,-1,-10,2,4,10,10,-4,9,-6,2,4,9,9,-4,-9,2,1,-10,2,10,7,8,-4,1,1,-4,-9,1,-6,-7,-3,6,8,4,4,-4,3,-2,10,7,-5,6,-7,1,3,10,-4,-9,-4,4,8,-9,-1,10,-2,-3,-1,2,8,-3,1,9,2,10,1,-4,-6,-4,3,10,-2,-4,-4,2,2,-4,-9,-8,1,6,6,2,4,8,-1,-3,-1,-7,7,-8,-7,10,5,8,8,9,6,5,-9,-7,1,-3,-9,9,2,-5,-10,-6,4,3,7,-7,5,-3,7,5,2,-10,10,8,-7,-2,7,3,9,-5,-10,-9,4,-9,4,9,-2,6,10,-6,7,3,-6,-7,-2,1,-5,-7,6,2,-10,3,-1,5,-5,8,9,-9,-6,1,-9,4,-5,-6,6,1,2,9,-7,7,-7,5,4,2,10,-2,6,-6,-6,3,2,-2,-10,-10,-5,-8,-1,8,-6,-7,-4,7,6,2,-6,6,9,-4,8,5,-10,8,7,-9,8,9,-7,-1,-10,5,-8,-5,10,9,5,3,-8,-9,9,-5,-1,9,3,-3,5,-10,-10,3,6,7,-5,-7,3,7,1,1,8,-4,-1,5,-4,8,-10,3,10,-7,4,9,9,1,8,6,3,-9,4,8,-9,-1,7,4,3,4,5,-7,9,-6,2,-7,9,-7,9,10,-4,-8,-2,10,-2,-7,10,-3,1,-8,-1,-6,-10,-3,10,9,-4,-7,-9,-6,-3,-10,-4,-4,2,6,8,6,-6,-8,-2,-2,-6,-5,-8,-8,1,-6,10,-9,-3,-10,8,-10,2,-3,-7,-3,4,7,-8,-2,2,-5,9,9,-1,-4,2,3,2,-10,-1,-3,10,8,5,-6,-10,-1,5,1,-8,4,9,-6,5,9,1,-2,1,9,-2,7,8,-10,-10,10,8,-8,1,-7,9,4,-9,1,6,8,-8,7,4,10,10,2,4,-4,-3,3,8,-4,-2,7,-6,6,-3,-10,2,-1,-10,10,-2,-10,7,10,1,-4,-6,2,9,6,1,-7,9,-7,10,4,-4,-10,8,-8,-2,3,-3,-2,3,2,-7,8,8,5,-3,-1,-3,-7,1,-1,6,-2,9,1,5,7,-4,-8,-10,-10,3,-9,-2,-1,-2,5,6,-6,3,-6,-5,-10,6,3,4,1,5,-6,-6,2,-9,5,4,8,-1,8,7,-6,8,1,1,9,-1,6,2,-5,-5,-4,-4,-8,9,2,4,9,5,3,-1,5,7,-1,-7,10,9,-3,-8,-7,-7,-3,4,4,-3,7,-9,-7,-2,-5,-7,3,9,-8,-6,-6,-3,-5,-4,-8,6,-10,-8,3,-7,2,-3,9,-2,-3,-1,3,-1,-3,-9,-9,-8,2,-7,-9,3,-8,8,-2,-2,9,5,9,2,8,-5,-6,9,-1,3,1,-1,6,-6,-10,-3,-4,-4,-4,-7,8,1,-4,-4,-7,5,4,-8,-7,-9,5,-7,10,-3,8,9,9,1,-2,-8,-1,8,-1,6,-3,5,8,-6,-3,-5,9,8,3,1,2,4,-6,-1,-1,7,5,-1,-5,-1,7,1,9,-2,-9,-8,4,-6,-6,-7,5,2,-7,-3,1,-1,10,-2,3,1,-1,-3,-5,-5,-6,-10,10,3,5,8,-9,-4,-2,10,-4,-7,2,-10,-9,-9,-1,7,3,7,-5,-5,5,-5,-8,2,8,5,-9,8,-9,-2,8,-10,-9,-8,-1,3,2,2,-3,-2,-4,-2,9,1,-6,8,2,4,4,-8,-7,-8,-8,-1,-7,-3,-9,5,4,-7,7,-6,-3,10,6,-2,-6,-4,-3,7,-1,2,-3,9,1,10,3,-8,-6,-6,6,-5,-10,-9,7,4,4,7,1,9,-4,-1,-2,-3,-7,3,7,-8,-1,2,2,-6,-2,-8,-1,-4,-3,-9,-5,-7,3,6,10,-9,-10,8,6,10,9,10,4,-4,-10,4,-9,-8,1,-2,-9,-1,-9,2,-7,3,2,-7,-9,3,-5,-7,-10,-7,-8,-3,10,-7,-4,-6,3,6,-5,2,-5,-5,6,7,6,6,-4,10,-2,3,-8,-7,-10,-6,6,-1,5,-1,10,4,3,10,8,9,9,-5,3,-7,7,-10,-9,3,-10,4,6,8,9,-5,9,8,8,-6,7,5,-5,4,9,2,6,9,-4,-9,4,10,10,3,1,-2,-3,10,-4,-5,-6,10,1,-3,-8,-7,-8,6,-7,7,-10,-6,-6,10,5,-2,-10,-2,-6,5,-7,6,1,3,-3,-6,9,-4,10,-6,-9,5,-3,-10,10,-2,-10,-2,10,-1,-6,-4,10,-4,1,-7,-10,-10,7,-3,7,-6,4,10,-3,-5,-9,-6,4,-1,-9,5,-1,6,5,7,-5,-9,-10,10,-1,2,3,-8,7,-4,-8,-10,6,-6,-3,2,-7,6,-3,1,-1,-3,3,3,-1,-8,8,7,-2,-4,8,-5,-1,4,-7,-8], dtype = "uint32")#candidate|2715|(2704,)|const|uint32
call_2714 = relay.TupleGetItem(func_1513_call(relay.reshape(const_2715.astype('uint32'), [1, 2704])), 1)
call_2716 = relay.TupleGetItem(func_1515_call(relay.reshape(const_2715.astype('uint32'), [1, 2704])), 1)
output = relay.Tuple([call_2687,call_2691,call_2714,const_2715,])
output2 = relay.Tuple([call_2688,call_2692,call_2716,const_2715,])
func_2721 = relay.Function([], output)
mod['func_2721'] = func_2721
mod = relay.transform.InferType()(mod)
output = func_2721()
func_2722 = relay.Function([], output)
mutated_mod['func_2722'] = func_2722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_2803 = relay.TupleGetItem(func_2143_call(), 2)
call_2804 = relay.TupleGetItem(func_2144_call(), 2)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_2805 = relay.TupleGetItem(func_2356_call(), 0)
call_2806 = relay.TupleGetItem(func_2358_call(), 0)
output = relay.Tuple([call_2803,call_2805,])
output2 = relay.Tuple([call_2804,call_2806,])
func_2809 = relay.Function([], output)
mod['func_2809'] = func_2809
mod = relay.transform.InferType()(mod)
output = func_2809()
func_2810 = relay.Function([], output)
mutated_mod['func_2810'] = func_2810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_2824 = relay.TupleGetItem(func_1916_call(), 0)
call_2825 = relay.TupleGetItem(func_1918_call(), 0)
uop_2844 = relay.atan(call_2824.astype('float64')) # shape=(4, 3, 15)
uop_2846 = relay.atan(call_2825.astype('float64')) # shape=(4, 3, 15)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_2849 = relay.TupleGetItem(func_1116_call(), 5)
call_2850 = relay.TupleGetItem(func_1118_call(), 5)
func_799_call = mod.get_global_var('func_799')
func_802_call = mutated_mod.get_global_var('func_802')
const_2857 = relay.const([[4,-4,10],[-8,10,-5],[-6,10,-9],[-5,-3,-5],[-10,5,-9],[-3,-8,1],[2,5,5],[-8,6,9],[8,-4,-3],[-5,10,-10],[-6,-3,-7],[-2,-4,-10],[8,-9,5],[-2,10,-5],[5,-5,1],[5,8,2],[10,4,-3],[-4,4,5],[-1,-4,5],[3,-1,-6],[-6,2,8],[-9,7,4],[-10,1,2],[-5,7,4],[-1,3,-7],[-6,9,-9],[1,-7,1],[-10,-2,7],[9,6,3],[7,7,8],[10,-1,2],[-7,-7,-3],[8,1,4],[-1,-10,-10],[-7,7,-8],[1,8,6],[1,-7,8],[7,1,5],[6,10,-4],[-10,-9,8],[3,3,1],[-3,3,-3],[10,-8,-7],[-8,-10,10],[-1,5,-9],[-5,-2,4],[-10,-10,-7],[-5,-2,-7],[5,-4,6],[-6,-6,6],[6,8,10],[3,-10,-2],[-3,-3,-9],[6,8,8],[5,10,7],[-9,-7,-2],[8,8,8],[5,6,-8],[10,8,3],[-1,-2,-10],[-9,3,-5],[-5,-10,-10],[-3,-2,5],[-4,4,-3],[10,5,-7],[2,-3,3],[1,2,-1],[2,9,2],[3,-9,10],[4,-7,1],[-4,-1,-9],[7,-2,-1],[-3,-8,-6],[6,-8,4],[8,9,7],[-1,-4,-9],[7,-1,9],[6,5,-4],[-6,-10,-7],[4,2,-3],[3,9,-8],[-10,-8,-8],[5,7,-9],[10,-3,-10],[5,-10,-7],[-6,-8,-2],[7,3,-3],[2,-4,9],[-2,-9,-9],[7,-4,1],[-9,4,3],[-6,-7,6],[2,9,7],[-9,7,3],[-6,-2,-5],[-2,1,6],[3,4,2],[2,-6,-10],[-1,1,7],[-5,-2,5],[-1,6,6],[-6,3,-1],[-2,9,-5],[2,-7,5],[-6,-1,7],[-8,5,-10],[7,10,-10],[6,-5,9],[-3,-8,-5],[-8,-5,-9],[-5,3,-2],[-10,1,-10],[-2,-2,-1],[-7,-3,9],[-1,-8,6],[-9,6,-10],[4,-9,10],[7,-6,-9],[9,1,2],[-9,7,-9],[7,-3,-1],[5,-10,2],[4,2,-6],[6,6,7],[-9,2,6],[-8,-1,-7],[-3,8,7],[-3,-7,10],[7,-1,5],[-2,-8,10],[-8,-8,1],[-1,-8,-8],[-1,7,-8],[-3,4,10],[4,4,8],[8,4,5],[1,-10,9],[7,8,7],[-2,-3,-4],[6,4,-2],[5,8,-5],[-7,-3,7],[-4,9,10],[-10,-6,-7],[-7,-2,4],[-5,3,-8],[-6,-5,1],[-10,-8,-9],[-5,-1,3],[3,2,2],[9,-6,-9],[-1,1,-8],[9,7,7],[6,-6,-4],[6,8,-5],[5,-8,-6],[-5,-5,-2],[9,1,1],[-4,9,-5],[-9,-10,-10],[-1,-9,-5],[-7,-2,7],[5,7,3],[-3,6,-9],[5,-1,-6],[10,-5,-6],[5,-9,6],[-3,1,9],[10,3,6],[-7,9,-5],[-9,10,-5],[-2,-10,9],[8,-10,-4],[7,3,-1],[1,7,6],[-2,-9,10],[-1,-6,5],[6,7,-6],[-7,6,2],[-6,-7,-10],[-6,-9,7],[3,-2,-8],[4,2,-1],[4,-3,5],[-10,-6,-5],[10,-3,10],[-8,7,-2],[7,-10,-9],[9,-9,6],[6,9,2],[2,-7,1],[-4,-2,9],[7,-2,-4],[10,-6,6],[4,-9,7],[7,3,4],[-5,5,1],[-1,-9,-7],[-8,6,5],[8,-7,-10],[-10,4,5],[9,6,5],[-7,8,-3],[-9,-10,-7],[-1,4,-3],[10,3,7],[2,8,-10],[-5,-3,-5],[8,7,10],[-2,-10,7],[-1,5,3],[-4,9,-2],[6,8,-2],[6,-6,7],[9,-7,6],[-2,-4,-2],[10,1,1],[8,1,-9],[-10,3,9],[4,-9,-9],[-8,3,8],[7,3,-9],[1,4,-5],[7,7,3],[-9,-6,-9],[-5,-5,-7],[6,-1,1],[-5,-7,-6],[-9,10,-2],[4,2,-4],[-4,-6,-9],[-2,-8,-4],[-4,3,8],[-6,2,-3],[-10,8,8],[1,-2,2],[1,-4,8],[-7,-9,-4],[2,3,7],[-10,4,7],[1,3,6],[-3,-9,5],[5,10,4],[10,-5,10],[9,-6,-8],[-5,4,2],[-5,-6,-2],[-4,5,-2],[9,5,-4],[-3,-4,8],[-6,3,-2],[8,10,6],[5,8,5],[8,-1,-5],[9,10,8],[7,10,4],[5,-1,-7],[4,6,-3],[5,2,-4],[2,6,-7],[7,-8,4],[-9,3,-1],[-7,-4,10],[-6,7,-10],[7,-6,-4],[-5,7,-8],[-7,-9,6],[-1,-6,8],[2,-10,3],[2,3,-1],[3,8,3],[-2,-10,1],[10,1,-8],[-3,-2,-1],[-4,-5,3],[4,5,-7],[-7,-7,9],[-4,-1,-6],[-3,-9,-1],[-10,-5,3],[-2,-3,2],[-3,6,-7],[1,3,-8],[1,7,8],[2,4,4],[5,-8,-3],[8,-9,-8],[-9,-10,1],[3,-3,5],[10,-1,7],[4,3,10],[-2,2,3],[8,10,-6],[9,-4,2],[4,-9,6],[2,9,4],[1,-8,-9],[-4,-4,-6],[5,2,8],[1,5,8],[-5,3,-8],[-3,-5,4],[3,1,-2],[8,2,9],[5,1,9],[3,-10,7],[-5,6,1],[-4,-10,2],[1,1,3],[5,-9,7],[-6,1,-9],[5,-9,4],[3,-6,10],[-4,9,6],[5,-9,-10],[2,9,3],[2,-9,-10],[-10,-8,5],[4,3,-7],[5,-10,6],[-1,5,2],[5,7,2],[9,-2,10],[-7,7,10],[-8,-5,9],[10,10,1],[7,-5,-2],[-4,10,-7],[1,9,-5],[3,-5,-6],[10,6,3],[-3,3,-5],[-4,7,-2],[6,-2,3],[-3,-3,-5],[-3,-6,8],[-8,10,-8],[8,3,-7],[2,2,10],[3,4,-4],[-6,-5,-7],[2,3,-9],[-6,-4,-6],[7,8,-4],[-5,-4,3],[-7,6,-9],[-6,-10,-2],[9,-10,8],[3,4,5],[10,2,-6],[-3,-4,-6],[3,6,10],[-4,8,1],[8,3,7],[-9,-5,-2],[-6,5,-3],[-4,2,10],[8,10,-8],[3,-5,7],[2,1,-6],[2,8,-3],[8,-9,-7],[-2,-5,-2],[3,10,-2],[2,-2,5],[5,-10,-3],[-8,-10,3],[8,-2,-10],[-7,-10,3],[-3,-7,-7],[4,8,-5],[-9,-3,-9],[-6,-6,1],[5,-10,-6],[-10,-7,5],[9,-4,-5],[9,-3,5],[-3,-9,1],[4,10,4],[5,5,1],[6,9,-9],[2,-10,-4],[-6,-6,-5],[-7,-5,-1],[4,-3,9],[-9,5,8],[4,-4,4],[-1,-5,7],[4,-7,2],[-9,5,5],[5,-3,-4],[4,3,-4],[6,-9,-4],[2,-10,-8],[8,-9,9],[-1,8,5],[-4,-1,7],[-6,-3,-5],[-9,5,-6],[4,-10,9],[8,4,-3],[-7,-7,6],[6,-6,-6],[3,8,7],[-1,-1,3],[-10,1,9],[2,3,-6],[3,2,10],[10,5,3],[5,-2,-5],[-6,8,-1],[-3,2,-2],[6,10,-5],[-10,-6,-5],[7,-3,6],[-6,4,-2],[-10,10,1],[-2,-7,7],[-5,-7,9],[9,1,7],[-1,2,6],[2,8,-9],[2,-6,-6],[-1,9,1],[9,6,-2],[-9,-5,-8],[-6,-8,-2],[3,-10,5],[3,8,-3],[10,1,-3],[-10,-5,5],[5,-4,8],[-9,10,-2],[-7,10,-7],[-4,-2,-4],[7,-7,-8],[-8,6,5],[7,-6,5],[-1,-5,8],[1,-2,9],[10,-9,-10],[3,-9,7],[-4,-9,-1],[-10,-5,-3],[-8,6,-9],[-5,1,-10],[-2,-7,10],[8,10,4],[-10,-6,-1],[9,-5,-9],[-8,-5,-2],[-7,6,9],[8,3,3],[-1,-4,-7],[8,-6,8],[9,-2,4],[1,-8,5],[-6,3,3],[7,-10,-3],[-5,2,3],[-7,-8,9],[2,-3,-7],[-8,-3,10],[-10,10,-9],[-4,3,6],[-9,-8,-3],[-1,5,7],[-4,4,-9],[-5,-5,-6],[7,9,-9],[-6,9,7],[9,8,4],[7,-4,7],[-9,-10,-7],[-9,8,6],[2,-6,-6],[-4,3,-10],[-9,6,9],[-7,-8,-3],[5,1,9],[-3,-9,-3],[-3,9,-10],[2,-7,-5],[4,7,10],[8,1,3],[9,2,-6],[-5,9,-5],[-5,8,-9],[-8,-4,-6],[-4,-2,-6],[-6,10,2],[-10,-4,-1],[10,8,-7],[3,-10,10],[-3,-10,1]], dtype = "int64")#candidate|2857|(495, 3)|const|int64
call_2856 = relay.TupleGetItem(func_799_call(relay.reshape(const_2857.astype('int64'), [15, 9, 11]), relay.reshape(const_2857.astype('int64'), [15, 9, 11]), ), 2)
call_2858 = relay.TupleGetItem(func_802_call(relay.reshape(const_2857.astype('int64'), [15, 9, 11]), relay.reshape(const_2857.astype('int64'), [15, 9, 11]), ), 2)
uop_2860 = relay.erf(uop_2844.astype('float64')) # shape=(4, 3, 15)
uop_2862 = relay.erf(uop_2846.astype('float64')) # shape=(4, 3, 15)
output = relay.Tuple([call_2849,call_2856,const_2857,uop_2860,])
output2 = relay.Tuple([call_2850,call_2858,const_2857,uop_2862,])
func_2865 = relay.Function([], output)
mod['func_2865'] = func_2865
mod = relay.transform.InferType()(mod)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2865_call = mutated_mod.get_global_var('func_2865')
call_2866 = func_2865_call()
output = call_2866
func_2867 = relay.Function([], output)
mutated_mod['func_2867'] = func_2867
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2929 = relay.var("var_2929", dtype = "float32", shape = (5, 9, 16))#candidate|2929|(5, 9, 16)|var|float32
uop_2930 = relay.erf(var_2929.astype('float32')) # shape=(5, 9, 16)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_2932 = relay.TupleGetItem(func_1673_call(), 0)
call_2933 = relay.TupleGetItem(func_1675_call(), 0)
output = relay.Tuple([uop_2930,call_2932,])
output2 = relay.Tuple([uop_2930,call_2933,])
func_2937 = relay.Function([var_2929,], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2938 = relay.var("var_2938", dtype = "float32", shape = (5, 9, 16))#candidate|2938|(5, 9, 16)|var|float32
func_2937_call = mutated_mod.get_global_var('func_2937')
call_2939 = func_2937_call(var_2938)
output = call_2939
func_2940 = relay.Function([var_2938], output)
mutated_mod['func_2940'] = func_2940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2472_call = mod.get_global_var('func_2472')
func_2474_call = mutated_mod.get_global_var('func_2474')
call_2945 = relay.TupleGetItem(func_2472_call(), 0)
call_2946 = relay.TupleGetItem(func_2474_call(), 0)
uop_2949 = relay.cosh(call_2945.astype('float32')) # shape=(15, 2, 14)
uop_2951 = relay.cosh(call_2946.astype('float32')) # shape=(15, 2, 14)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_2963 = relay.TupleGetItem(func_2388_call(), 0)
call_2964 = relay.TupleGetItem(func_2390_call(), 0)
output = relay.Tuple([uop_2949,call_2963,])
output2 = relay.Tuple([uop_2951,call_2964,])
func_2996 = relay.Function([], output)
mod['func_2996'] = func_2996
mod = relay.transform.InferType()(mod)
output = func_2996()
func_2997 = relay.Function([], output)
mutated_mod['func_2997'] = func_2997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_3011 = func_886_call()
call_3012 = func_886_call()
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_3014 = func_750_call()
call_3015 = func_750_call()
const_3031 = relay.const([[[-4.161654,1.330442,-5.213772,-8.588796,4.679400,-7.452961,1.028476,9.765349,8.959063,-6.622414,-0.762919,9.505347,9.009023,-9.223811],[5.716896,7.609940,0.594505,-7.216991,1.125398,-6.550781,-8.299588,-2.361817,-1.298600,2.469507,-8.166674,2.380532,2.569987,-4.889534]],[[8.719797,-2.329247,-4.168256,-3.253591,-3.516168,3.523402,9.039105,8.074450,-2.026738,9.622928,6.766588,-6.290934,-7.798705,-9.551177],[-5.769523,5.959398,-1.306420,-6.985925,3.224295,-7.658921,-0.183236,-6.741402,3.042770,4.713383,4.326886,-8.357485,8.266462,-3.821807]],[[3.930002,0.357603,2.224743,7.457619,-7.271779,-9.475933,-5.033024,-4.469875,-4.393695,1.216942,-2.217618,3.520283,5.213131,-8.384799],[6.664263,0.209798,4.934013,-8.992648,3.021469,-6.595457,-2.665219,2.640413,7.829651,3.590680,-5.531697,-7.093468,1.607662,2.487492]],[[1.782359,-8.666207,-5.553345,3.636066,-3.114386,6.496836,6.084257,-8.880228,-0.560117,9.770357,8.761524,-5.449228,0.127121,-9.501960],[-7.814097,1.319973,8.402986,-4.940907,2.868768,8.625283,-2.049061,2.750828,7.707982,0.372563,-6.684800,0.943040,0.460758,7.668110]],[[-0.361254,6.422036,7.514288,8.250532,-0.147991,2.283463,2.500137,-2.610680,0.425066,-7.500442,1.969136,-0.975633,-0.315054,3.229567],[8.962690,-3.887900,-3.696217,2.530890,-7.626108,-9.400798,-0.923020,8.705580,-8.335389,0.725543,3.829761,-3.046617,9.464426,-4.156118]],[[3.443261,8.740989,5.027889,-3.092396,-3.147324,8.296851,-7.922593,5.477950,0.347733,4.207438,-1.611497,0.686869,-6.162142,-2.046003],[7.674471,2.971875,-6.087120,3.787821,-1.671956,8.870187,8.048023,9.676186,-9.341319,8.050036,8.969443,-2.756172,4.623943,-7.679187]],[[7.089984,-2.955712,6.734449,8.053234,-4.649351,1.821366,5.662274,8.260025,-0.063877,-4.970633,-1.240067,-7.354606,-4.530366,2.572676],[7.087629,4.313193,5.056858,8.594248,7.149087,-1.313122,7.718952,-2.020315,1.632920,-1.678991,3.403973,-3.746612,-8.535830,8.714451]],[[6.616706,-5.557434,-8.599214,-3.190371,4.976954,5.973454,-5.300492,3.134203,3.706153,-3.692076,7.115518,-7.066254,-5.103859,-7.306563],[-3.706921,8.176118,6.268651,-5.157493,-0.959903,8.789395,-5.802684,-4.862475,-9.520281,-1.325463,-3.666948,-7.065177,7.192270,-4.973805]],[[-3.036512,-9.416399,-1.757697,-9.187620,-3.219566,-4.891040,4.632388,-4.835846,-1.366103,1.986101,-2.187719,-1.922878,-6.361585,7.770994],[-4.888834,0.073385,-4.092083,7.773160,-5.521398,-3.636594,-8.848080,8.728062,-3.668345,6.436860,-2.580214,-6.802781,-1.895371,4.702343]],[[9.796621,4.001184,-7.899686,-8.670226,-8.842860,-2.465606,-8.119468,7.937784,9.455128,-0.659946,6.008338,-7.347629,-2.971864,-9.065834],[9.420564,-5.489812,-5.919601,-0.945171,-6.564173,-3.948558,-5.081966,2.099245,5.347125,1.984900,9.428989,7.986788,6.498630,4.799150]],[[-7.599706,2.228019,9.916608,-2.758038,6.043863,2.559808,-9.482212,-4.321764,-6.196397,2.204801,0.515696,-4.119853,-3.297927,2.089956],[7.434238,-8.645358,-7.560792,6.229374,9.078507,-0.250866,0.802276,-3.587747,3.195400,-9.797494,7.804517,8.957904,6.287671,5.488911]],[[8.032200,3.465877,4.510242,-5.903680,2.752109,-3.185161,-0.344919,1.153830,-7.518662,9.977361,9.290532,8.580909,2.245329,4.606118],[-5.149808,-7.009020,6.587247,-1.088610,6.548504,-5.683099,-4.910818,4.318260,3.174360,-8.457520,7.536002,1.519245,-0.280484,9.909927]],[[-2.041474,-9.729346,5.164988,-1.427346,-5.897400,-6.156810,-9.350786,8.613519,7.664671,6.438919,4.046051,-7.507360,5.888288,4.849352],[-3.822699,8.744086,4.695761,5.729818,-5.805390,1.132832,-4.031448,1.087433,8.774467,9.024838,5.887651,9.674640,9.752027,6.138952]],[[-7.323931,-8.349568,1.494824,0.986931,9.349044,-9.899684,-1.020756,-7.555259,3.060868,1.667344,-3.830401,4.311345,1.471414,0.354025],[-7.014728,0.173130,7.813757,7.290398,5.338804,-0.656276,0.458068,3.057515,-1.952209,-4.060059,2.617118,-0.930052,-0.998925,3.586299]],[[8.034292,-7.542868,-6.098269,-6.236053,7.403043,-8.780208,-4.868503,4.476722,4.129652,5.192303,0.011626,3.809348,-0.769844,-4.427127],[2.550281,-4.769955,-8.447418,-9.022668,5.290595,3.534519,-7.977811,3.098873,-2.479201,-7.455193,7.985470,0.772246,5.396889,0.890820]]], dtype = "float64")#candidate|3031|(15, 2, 14)|const|float64
bop_3032 = relay.minimum(call_3014.astype('uint32'), relay.reshape(const_3031.astype('uint32'), relay.shape_of(call_3014))) # shape=(15, 2, 14)
bop_3035 = relay.minimum(call_3015.astype('uint32'), relay.reshape(const_3031.astype('uint32'), relay.shape_of(call_3015))) # shape=(15, 2, 14)
output = relay.Tuple([call_3011,bop_3032,])
output2 = relay.Tuple([call_3012,bop_3035,])
func_3037 = relay.Function([], output)
mod['func_3037'] = func_3037
mod = relay.transform.InferType()(mod)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3038 = func_3037_call()
output = call_3038
func_3039 = relay.Function([], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_3201 = relay.TupleGetItem(func_1116_call(), 3)
call_3202 = relay.TupleGetItem(func_1118_call(), 3)
output = relay.Tuple([call_3201,])
output2 = relay.Tuple([call_3202,])
func_3209 = relay.Function([], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mutated_mod.get_global_var('func_3209')
call_3210 = func_3209_call()
output = call_3210
func_3211 = relay.Function([], output)
mutated_mod['func_3211'] = func_3211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_3219 = relay.TupleGetItem(func_2143_call(), 0)
call_3220 = relay.TupleGetItem(func_2144_call(), 0)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_3221 = relay.TupleGetItem(func_1916_call(), 0)
call_3222 = relay.TupleGetItem(func_1918_call(), 0)
output = relay.Tuple([call_3219,call_3221,])
output2 = relay.Tuple([call_3220,call_3222,])
func_3226 = relay.Function([], output)
mod['func_3226'] = func_3226
mod = relay.transform.InferType()(mod)
output = func_3226()
func_3227 = relay.Function([], output)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_3232 = relay.TupleGetItem(func_2143_call(), 2)
call_3233 = relay.TupleGetItem(func_2144_call(), 2)
output = call_3232
output2 = call_3233
func_3237 = relay.Function([], output)
mod['func_3237'] = func_3237
mod = relay.transform.InferType()(mod)
output = func_3237()
func_3238 = relay.Function([], output)
mutated_mod['func_3238'] = func_3238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_3245 = relay.TupleGetItem(func_2630_call(), 0)
call_3246 = relay.TupleGetItem(func_2631_call(), 0)
output = call_3245
output2 = call_3246
func_3249 = relay.Function([], output)
mod['func_3249'] = func_3249
mod = relay.transform.InferType()(mod)
output = func_3249()
func_3250 = relay.Function([], output)
mutated_mod['func_3250'] = func_3250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_3279 = func_750_call()
call_3280 = func_750_call()
output = relay.Tuple([call_3279,])
output2 = relay.Tuple([call_3280,])
func_3284 = relay.Function([], output)
mod['func_3284'] = func_3284
mod = relay.transform.InferType()(mod)
mutated_mod['func_3284'] = func_3284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mutated_mod.get_global_var('func_3284')
call_3285 = func_3284_call()
output = call_3285
func_3286 = relay.Function([], output)
mutated_mod['func_3286'] = func_3286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2996_call = mod.get_global_var('func_2996')
func_2997_call = mutated_mod.get_global_var('func_2997')
call_3342 = relay.TupleGetItem(func_2996_call(), 0)
call_3343 = relay.TupleGetItem(func_2997_call(), 0)
func_2937_call = mod.get_global_var('func_2937')
func_2940_call = mutated_mod.get_global_var('func_2940')
var_3345 = relay.var("var_3345", dtype = "float32", shape = (1, 720))#candidate|3345|(1, 720)|var|float32
call_3344 = relay.TupleGetItem(func_2937_call(relay.reshape(var_3345.astype('float32'), [5, 9, 16])), 1)
call_3346 = relay.TupleGetItem(func_2940_call(relay.reshape(var_3345.astype('float32'), [5, 9, 16])), 1)
output = relay.Tuple([call_3342,call_3344,var_3345,])
output2 = relay.Tuple([call_3343,call_3346,var_3345,])
func_3347 = relay.Function([var_3345,], output)
mod['func_3347'] = func_3347
mod = relay.transform.InferType()(mod)
mutated_mod['func_3347'] = func_3347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3348 = relay.var("var_3348", dtype = "float32", shape = (1, 720))#candidate|3348|(1, 720)|var|float32
func_3347_call = mutated_mod.get_global_var('func_3347')
call_3349 = func_3347_call(var_3348)
output = call_3349
func_3350 = relay.Function([var_3348], output)
mutated_mod['func_3350'] = func_3350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2865_call = mod.get_global_var('func_2865')
func_2867_call = mutated_mod.get_global_var('func_2867')
call_3352 = relay.TupleGetItem(func_2865_call(), 0)
call_3353 = relay.TupleGetItem(func_2867_call(), 0)
func_799_call = mod.get_global_var('func_799')
func_802_call = mutated_mod.get_global_var('func_802')
var_3364 = relay.var("var_3364", dtype = "int64", shape = (5, 297))#candidate|3364|(5, 297)|var|int64
call_3363 = relay.TupleGetItem(func_799_call(relay.reshape(var_3364.astype('int64'), [15, 9, 11]), relay.reshape(var_3364.astype('int64'), [15, 9, 11]), ), 1)
call_3365 = relay.TupleGetItem(func_802_call(relay.reshape(var_3364.astype('int64'), [15, 9, 11]), relay.reshape(var_3364.astype('int64'), [15, 9, 11]), ), 1)
const_3384 = relay.const([2,2,1,4,2,-2,-3,1,4,-5,-4,-6,-3,-4,-9,-4,2,10,-2,9,-4,-5,5,-10,9,5,-2,8,-5,-2,-9,5,2,5,2,10,-6,-5,-10,7,10,-5,-2,10,5,-4,-6,-8,-4,4,8,4,-6,-2,-5,6,-4,8,3,-5,-9,7,-6,6,9,-8,4,10,4,-8,4,2,6,1,-9,-10,-5,-6,1,5,-3,-6,6,9,-9,-8,-3,-8,-10,10,7,-8,8,-5,7,8,2,9,1,9,6,-10,8,8,7,9,-8,8,2,-5,-3,1,9,5,-9,-8,10,4,8,-5,-9,-10,-3,5,10,-4,-2,-8,8,-1,-8,2,8,5,9,2,-6,7,9,-3,-1,-3,6,6,-5,-9,-7,-10,-8,-3,-4,-6,-5,8,-4,-4,1,-10,9,9,2,-6,2,5,10,8,3,4,7,-6,6,8,7,4,-3,-1,-4,3,4,7,-8,-8,7,10,8,6,6,-1,1,1,8,-8,-1,-8,1,-9,-10,-9,-2,2,-5,-2,-2,3,8,-7,8,-3,-6,-5,8,-5,4,-7,3,6,10,8,-3,-5,-7,-1,8,5,5,-1,8,9,-10,-10,-6,2,4,-7,-2,-8,-7,-3,1,6,-2,8,3,-3,4,9,-8,7,2,9,-8,-3,5,7,6,1,2,-7,9,-9,3,-4,-10,5,6,-6,-10,-7,-4,1,8,7,3,7,6,-6,6,10,-10,-8,8,1,10,10,-2,4,-7,10,-5,-2,2,9,-8,4,3,-6,-5,-6,-5,-8,1,7,-5,8,3,-10,-9,-5,-8,-7,-10,-4,10,-1,-8,9,3,7,-2,-7,-4,2,-5,-10,-5,-8,10,1,1,4,-10,-1,1,-10,-5,-2,3,-4,-10,-5,-1,-1,2,2,3,-7,3,8,7,8,7,1,-3,-10,9,-7,8,-3,9,8,-3,7,-4,-9,4,-3,7,-3,-8,3,-10,-10,-8,1,-10,9,3,-9,-10,-5,8,-7,3,5,-3,-9,-9,-1,1,4,10,-5,9,7,-2,6,-2,5,3,7,8,-10,6,-6,3,8,-3,-6,7,-4,8,9,4,-5,3,2,-1,-10,6,-4,6,-2,-7,3,-2,4,-8,-1,-8,9,10,5,-6,10,3,-2,-8,-7,-5,-10,1,8,-9,-4,-5,8,-8,9,-10,-7,5,-1,4,-9,-2,5,-2,-3,-1,-8,1,4,-1,-5,-3,3,10,10,-3,2,-7,9,1,2,8,-10,8,-8,8,1,6,1,9,1,-10,9,1,9,-9,-3,3,-6,9,1,9,-1,7,2,-5,9,-5,5,8,7,-6,-4,4,-1,6,-10,-3,2,5,5,-5,7,7,-8,-7,10,-5,-4,4,4,5,-9,-7,8,4,-3,-10,-1,-2,9,3,-5,-4,7,-4,2,-7,8,1,-9,9,-4,-2,-3,-3,6,-4,2,1,7,-2,-5,-9,4,-10,3,-5,-8,1,3,-6,9,9,-9,3,-8,-5,6,7,-4,-5,8,-3,6,10,9,6,9,9,10,3,1,-10,-4,8,-5,6,-2,-2,4,-8,1,2,1,-7,5,8,10,4,-6,3,-7,7,-9,-8,4,-7,-9,-4,-10,3,10,5,1,3,2,-9,4,-8,8,5,1,-6,1,-3,10,10,9,-8,-5,-6,-7,-7,4,2,-3,-3,-9,5,8,2,-5,-5,-8,-5,-4,-9,9,-9,-1,-4,-8,-9,5,-8,5,8,-2,4,-6,2,-1,10,-7,2,2,2,-2,-8,6,-9,-7,1,-10,9,6,-5,-2,-7,-5,-7,-5,-8,10,4,-3,-9,2,10,-4,7,4,-7,10,-5,2,-2,3,-2,8,-10,-10,3,-8,-3,4,4,-3,-4,6,-8,5,3,-1,-10,-2,-2,-1,4,8,6,9,-1,3,-5,-7,5,-4,10,3,4,4,10,1,-7,-3,-10,-2,-5,6,-4,-3,-7,-5,-4,-8,-6,6,-8,-1,-5,-9,-7,6,8,1,9,8,5,-2,4,7,4,5,10,8,-8,-10,2,8,2,-1,-7,6,2,9,9,7,7,7,6,3,-4,3,-1,-5,10,1,-5,-7,6,-5,2,-10,2,8,-3,-5,4,-5,7,-7,6,-4,6,7,9,-8,-4,2,6,-7,9,-5,10,-9,10,5,3,-6,-3,2,5,-3,-10,6,-4,-4,4,7,1,-2,1,8,9,4,7,5,8,4,4,-4,4,1,-9,-4,6,3,5,3,7,9,-5,-7,-4,-3,-10,7,6,4,8,-10,-5,-4,-6,6,6,7,-10,6,-5,2,-7,1,-9,-3,-4,5,-5,10,6,5,1,-3,6,5,-10,1,8,-5,9,-7,-10,-2,1,-8,-2,-9,7,-4,-3,8,-9,-3,1,5,-5,-2,-5,1,10,3,4,-5,-5,-6,9,4,-1,7,4,-1,-6,-5,9,9,5,9,3,2,2,-8,10,-1,8,2,-1,4,-5,-2,-5,4,-2,-3,9,-5,-1,-4,-5,-1,-2,-7,-5,-4,-10,-7,-5,8,5,4,-5,5,-2,-7,3,-1,9,9,1,-4,-10,-9,-1,-4,-6,-10,-7,-7,3,9,-1,2,10,-4,7,-5,9,1,1,-6,-4,-10,-3,-4,-2,-2,-5,3,-6,-8,2,-9,9,1,-5,-7,-7,-4,5,-7,-10,9,3,-3,-8,-3,6,3,4,-3,3,10,8,-10,-1,-3,-6,-8,-6,-2,-2,5,9,-1,-2,-1,-8,-4,-6,-3,-9,-8,9,-6,7,-7,4,-4,10,5,-4,6,9,10,2,2,10,-8,8,-3,-3,1,-4,10,4,5,-2,-2,1,-8,-7,-6,-10,7,-10,2,-1,-3,-2,9,8,8,7,3,-3,-2,-9,9,-5,-9,7,2,-8,4,-6,8,1,4,-5,7,-7,-10,7,8,-8,-1,-10,-6,6,10,5,5,-1,5,7,-4,8,9,-5,-1,5,9,-5,-6,5,4,-4,-7,10,-1,-1,-9,10,6,6,8,9,1,-10,-4,4,4,-7,-3,2,-3,-10,4,2,-5,7,-4,-1,-10,-3,-8,2,-3,5,-5,-1,-2,3,-10,3,-5,-1,9,-5,6,3,5,8,-2,5,1,-10,-4,6,9,-1,2,-5,-5,9,-8,-5,-6,10,-5,-9,-10,9,1,-10,-5,-5,5,9,10,-1,-8,9,1,-4,-6,-5,10,-10,7,1,3,10,-4,7,-5,-2,7,9,-3,-4,-5,-5,3,8,-7,2,3,-9,-1,2,-7,2,-6,-1,3,-7,-6,-5,-8,-9,-2,-7,4,-3,-2,-2,-9,-2,5,-3,-9,-1,1,-4,-1,-5,3,-9,10,4,8,1,-2,4,4,-8,-6,-10,6,-9,6,-1,8,7,-5,9,9,-3,-1,-8,4,10,6,-8,-1,-1,-3,-5,2,10,-3,1,1,2,-2,-8,8,-6,-7,9,3,6,-2,-8,5,2,-9,1,-10,1,-3,6,-9,8,-7,6,8,-6,7,5,-2,-1,3,-10,-6,4,-3,3,-5,8,9,-3,-9,7,3,-7,10,-7,-9,5,9,5,2,-4,10,-10,-7,5,-2,-2,-2,-9,5,5,-2,-1,2,2,5,-2,9,1,-4,4,7,-8,-2,-5,-2,5,3,-4,-2,-10,4,2,-5,-9,-9,5,-10,-9,10,1,4,-6,2,3,-6,-10,8,-2,-5,2,-8,2,-7,-10,4,-1,-7,-7,-4,-10,-7,1,-4,-6,7,-5,-4,3,-7,-2,-2,1,-7,6,-1,4,-1,-1,9,4,-7,1,5,7,-6,-4,10,-8,6,-10,4,-2,10,-10,3,7,4,-5,3,-2,9,-7,-3,-7,3,-5,1,2,3,2,-7,-9,-8,-1,-6,-10,-10,5,-2,-4,10,-1,-9,4,-4,-7,9,3,10,-8,8,-3,-5,-6,1,-3,9,1,7,-9,6,-4,-4,2,-3,-4,8,-1,-6,-1,5,7,8,-6,-5,-7,-3,-4,10,-4,-6,-3,-6,9,-1,8,-4,2,2,8,2,-8,8,3,8,2,6,10,2,-1,-10,9,-3,-8,10,2,-1,9,2,5,9,-6,5,-6,-3,-7,7,7,-6,5,-10,8,-7,9,8,9,-3,4,-9,2,9,-7,5,6,-10,7,-8,-9,1,4,4,-9,-8,-7,-3,-1,8,9,-1,-5,6,10,7,10,-9,-9,8,2,-3,3,7,8,-1,1,4,4,7,5,-3,-6,-9,-5,-3,1,5,-1,7,10,-8,1,-6,-3,8,1,-5,4,-9,1,6,-9,-7,5,-2,3,5,-4,-8,6,-9,7,-1,7,10,6,-1,10,7,-3,2,1,-7,-8,5,1,10,-7,-1,-5,-4,8,5,-5,-3,3,4,3,-10,8,-7,-7,-9,10,-9,-10,5,10,5,-4,4,4,-1,9,9,5,6,-3,-6,-4,7,10,9,-1,5,-3,-3,9,5,5,5,10,-4,8,-3,5,-6,1,4,2,-9,10,-3,8,-9,3,-3,-7,3,6,-8,7,7,1,-2,-3,-7,5,-4,-9,-5,6,5,-4,-9,-6,3,-2,1,-2,-6,4,-9,-5,-1,3,7,4,3,10,-8,10,10,-10,5,6,8,-5,10,-10,-4,-6,2,-3,-8,6,9,-5,-8,-10,8,4,-7,-3,-1,-9,-5,6,-5,-4,-1,-8,6,7,-10,-7,-4,-4,-2,-1,1,-7,-7,6,3,-6,10,-3,7,8,-9,-8,8,8,-1,6,-9,10,8,-7,-6,3,6,10,-8,-3,-5,-3,-2,-6,10,-5,-5,-6,-1,-3,-7,-10,-4,8,-1,2,1,3,-6,6,-1,8,8,-8,-6,-5,-9,6,7,9,5,8,-7,-9,7,1,-6,3,-3,-10,-4,-4,2,-8,5,9,-9,8,-7,10,-10,-4,-2,-10,-10,5,-7,-6,-2,10,-4,-9,-5,10,4,5,-1,-10,-6,9,1,9,-5,-7,-3,-8,3,9,-6,9,9,2,3,-4,-2,-6,-6,-9,1,-2,2,-9,-7,4,-9,1,-8,-9,-7,-3,-5,10,-3,-4,6,9,6,-4,8,6,2,7,-2,-5,9,-6,7,6,6,4,-8,1,-1,-6,-4,10,8,7,4,-9,-10,-9,-2,6,-7,-1,1,8,8,5,-4,9,10,4,-8,9,7,-4,3,6,-10,4,10,5,3,1,3,-1,-5,-1,7,2,7,2,8,9,-4,1,-4,3,6,-7,3,-4,-5,3,4,-8,1,-1,6,9,5,-8,-4,-8,-7,1,-7,10,1,-5,-9,6,-1,-1,6,-10,9,2,9,6,-7,7,2,-5,1,8,1,1,10,10,1,-7,-6,-4,8,-2,-6,8,-6,-1,-1,6,2,5,-1,-7,6,3,-4,-8,8,9,7,-4,-8,-10,5,-4,-5,-8,-7,9,1,-5,2,9,-3,5,-4,5,-3,5,-2,6,10,-2,-3,8,2,10,9,3,8,4,-7,7,5,-10,1,-2,4,-7,4,10,1,1,1,-1,-2,-4,5,10,3,7,-8,6,3,-8,9,5,7,-7,2,9,7,4,3,4,-6,2,9,5,-9,1,10,-7,3,-5,-4,-8,6,-4,8,6,10,7,6,-1,4,5,9,-8,6,7,8,4,9,-4,8,10,-10,7,-8,2,-2,3,1,-4,-7,-10,8,2,1,-4,-7,-7,1,4,-4,-9,-5,10,8,-2,6,-1,-3,-2,8,-5,10,2,8,1,2,8,4,3,3,6,-5,-2,9,-5,9,2,2,1,1,1,1,3,9,-9,9,-10,4,5,7,2,1,-5,9,-4,5,-6,-7,6,-4,8,2,-2,-1,2,8,-2,-10,-4,3,1,-3,6,7,6,7,-7,-2,-7,-5,-1,-3,-1,-1,1,-3,2,1,-6,10,-10,-7,-9,-5,6,-5,2,-1,2,10,-4,8,-8,3,-7,-7,-3,-5,7,-9,1,-9,2,8,2,7,-8,1,6,-10,-9,2,-5,-4,-9,7,-7,-5,-8,2,8,5,6,1,-2,-5,-10,-4,-5,7,-1,6,-3,-6,-1,-9,10,6,-2,10,-10,6,1,4,10,2,8,-1,8,-9,8,1,-4,7,-3,-1,-9,2,-8,-10,10,4,-1,-8,-4,1,9,-1,-6,-8,-5,-2,5,-6,10,5,-9,7,-4,8,-4,-10,-10,5,-1,-7,-3,1,-4,-2,5,6,6,4,10,8,3,-8,-10,9,7,6,-6,9,5,8,-1,-4,10,7,-9,6,4,3,9,5,-9,-8,-9,-6,-10,-4,9,-10,-3,-10,3,-2,-10,-10,6,-4,6,1,9,-10,4,-2,10,-3,-10,-5,7,-9,-2,-7,-4,-5,-3,6,4,4,1,-10,-9,-6,-3,1,10,-8,-9,-3,6,-3,-4,4,8,7,-4,-10,9,-2,-9,-6,-3,1,9,-6,2,7,-2,-8,-7,-10,2,-3,-8,-7,8,-5,-8,-4,2,4,-1,2,2,-2,4,9,1,-9,7,-7,-7,-7,-3,-4,2,9,-8,7,-2,8,-2,-2,-1,4,-6,4,-5,10,5,-3,3,2,-4,1,1,-1,-8,-8,3,6,4,5,-4,-9,9,6,5,-3,-1,6,6,5,-10,5,-4,5,3,-9,-6,-6,10,9,3,4,-8,6,-8,10,-1,-5,5,4,9,7,-10,2,-6,-5,3,-3,-2,7,-9,1,-3,6,6,8,-1,-3,-9,-3,4,-3,1,-9,4,-4,4,-2,2,7,-8,-3,3,2,-1,-6,-4,3,7,-8,-10,4,10,3,4,1,-8,-2,10,-2,10,-5,6,-10,2,4,2,5,3,-7,-1,-10,-1,-9,-10,-2,-8,-5,-5,-7,-4,-8,-8,10,5,10,-4,-5,5,-7,-7,-7,8,-1,-8,-1,-9,9,-3,9,-8,4,-9,8,4,-3,8,8,-2,10,-7,-2,-1,-6,-2,2,3,-4,4,-10,-9,9,-1,-5,6,-4,-6,9,-7,-2,9,-1,-8,7,-6,2,2,-5,10,7,-5,7,5,-9,-1,5,4,2,-2,-8,8,6,-1,2,-10,7,9,-5,2,-1,6,2,-4,6,7,-4,1,-6,8,-4,-8,4,-7,-4,-4,1,-2,3,-1,-2,2,3,4,8,7,2,6,-5,-4,9,7,-9,-5,5], dtype = "uint32")#candidate|3384|(2704,)|const|uint32
bop_3385 = relay.subtract(call_3363.astype('int64'), relay.reshape(const_3384.astype('int64'), relay.shape_of(call_3363))) # shape=(2704,)
bop_3388 = relay.subtract(call_3365.astype('int64'), relay.reshape(const_3384.astype('int64'), relay.shape_of(call_3365))) # shape=(2704,)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_3390 = relay.TupleGetItem(func_3284_call(), 0)
call_3391 = relay.TupleGetItem(func_3286_call(), 0)
func_2809_call = mod.get_global_var('func_2809')
func_2810_call = mutated_mod.get_global_var('func_2810')
call_3392 = relay.TupleGetItem(func_2809_call(), 0)
call_3393 = relay.TupleGetItem(func_2810_call(), 0)
output = relay.Tuple([call_3352,var_3364,bop_3385,call_3390,call_3392,])
output2 = relay.Tuple([call_3353,var_3364,bop_3388,call_3391,call_3393,])
func_3396 = relay.Function([var_3364,], output)
mod['func_3396'] = func_3396
mod = relay.transform.InferType()(mod)
mutated_mod['func_3396'] = func_3396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3397 = relay.var("var_3397", dtype = "int64", shape = (5, 297))#candidate|3397|(5, 297)|var|int64
func_3396_call = mutated_mod.get_global_var('func_3396')
call_3398 = func_3396_call(var_3397)
output = call_3398
func_3399 = relay.Function([var_3397], output)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3461 = relay.var("var_3461", dtype = "float32", shape = (2, 13, 7))#candidate|3461|(2, 13, 7)|var|float32
const_3462 = relay.const([[[8.870347,5.060910,-4.390772,2.370907,3.195898,9.750621,-9.889762],[-2.651449,-1.855409,-9.765817,-6.131212,-6.941237,-5.264729,-6.019871],[-1.474199,4.440732,7.052423,1.345334,-3.127677,-1.059046,1.901237],[4.023464,7.639700,-0.759556,-3.641259,-9.847714,-9.329569,5.233809],[3.734449,-1.502099,8.096967,0.624478,-9.794385,-7.764708,5.980437],[9.194200,-4.731500,-0.523419,-7.023205,0.523337,9.449366,9.793981],[6.822559,-5.405779,-7.081240,-7.042557,6.321547,-2.664242,-5.156161],[-5.384094,-5.154687,6.422963,-7.054574,-3.238121,-6.807935,6.923555],[-6.481903,5.481303,5.021101,-0.012231,3.398415,5.576013,-1.204980],[-2.878077,-0.205959,-3.015696,-9.726215,-6.076363,0.388228,2.987684],[-6.739337,9.736982,6.398073,-6.392515,-8.550580,9.765067,8.749993],[-1.532568,-4.300963,3.258061,2.925398,3.522435,8.639935,-5.543494],[6.750123,-5.819207,1.275273,-3.750588,3.726107,0.551799,5.076723]],[[3.803712,-3.299296,-0.537501,-1.268063,8.842455,2.595910,-4.316132],[-2.950187,8.446533,-1.962473,-8.637392,6.374380,3.805352,6.586145],[-3.643054,4.824904,-1.362709,-3.563211,-1.404571,-5.084209,-0.939449],[3.980466,-4.090419,-3.614488,5.185540,7.963129,-6.300476,-6.450803],[6.769056,-6.943107,-1.145617,4.138265,3.723689,1.376886,9.318316],[-8.477060,1.678923,-8.013632,1.290470,6.873085,7.346538,-7.549559],[3.129634,5.720183,1.638360,-2.649299,8.388917,-1.162907,0.042580],[2.085126,7.278202,1.550966,8.792922,-6.790675,-1.734342,3.847287],[-6.387014,9.087242,-9.928204,0.604740,-1.020719,0.953861,9.894530],[1.523335,1.088277,9.836229,-4.344960,4.496924,-1.971287,-2.736433],[8.485583,6.248776,-0.225853,2.533454,7.670896,-7.095491,-9.507527],[-6.894663,8.645991,3.350306,-4.838265,4.958230,3.222883,-9.651888],[-8.181609,-0.168897,-5.004454,2.854003,-5.824218,5.997625,1.441976]]], dtype = "float32")#candidate|3462|(2, 13, 7)|const|float32
bop_3463 = relay.divide(var_3461.astype('float32'), relay.reshape(const_3462.astype('float32'), relay.shape_of(var_3461))) # shape=(2, 13, 7)
output = relay.Tuple([bop_3463,])
output2 = relay.Tuple([bop_3463,])
func_3472 = relay.Function([var_3461,], output)
mod['func_3472'] = func_3472
mod = relay.transform.InferType()(mod)
var_3473 = relay.var("var_3473", dtype = "float32", shape = (2, 13, 7))#candidate|3473|(2, 13, 7)|var|float32
output = func_3472(var_3473)
func_3474 = relay.Function([var_3473], output)
mutated_mod['func_3474'] = func_3474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1181_call = mod.get_global_var('func_1181')
func_1182_call = mutated_mod.get_global_var('func_1182')
call_3517 = relay.TupleGetItem(func_1181_call(), 0)
call_3518 = relay.TupleGetItem(func_1182_call(), 0)
output = call_3517
output2 = call_3518
func_3522 = relay.Function([], output)
mod['func_3522'] = func_3522
mod = relay.transform.InferType()(mod)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3522_call = mutated_mod.get_global_var('func_3522')
call_3523 = func_3522_call()
output = call_3523
func_3524 = relay.Function([], output)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_3619 = func_750_call()
call_3620 = func_750_call()
output = relay.Tuple([call_3619,])
output2 = relay.Tuple([call_3620,])
func_3643 = relay.Function([], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
output = func_3643()
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_912_call = mod.get_global_var('func_912')
func_914_call = mutated_mod.get_global_var('func_914')
call_3661 = relay.TupleGetItem(func_912_call(), 0)
call_3662 = relay.TupleGetItem(func_914_call(), 0)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_3692 = relay.TupleGetItem(func_3209_call(), 0)
call_3693 = relay.TupleGetItem(func_3211_call(), 0)
func_65_call = mod.get_global_var('func_65')
func_68_call = mutated_mod.get_global_var('func_68')
const_3734 = relay.const([-3,-7,-8,6,-4,1,3,-6,-4,-7,5,-7,-10,-4,10,-1,10,9,4,3,4,-8,1,-2,-4,-2,-9,-5,-9,10,-8,4,8,9,9,-1,-5,-1,-2,3,-6,-8,-4,-3,-2,2,-5,-2,-10,-6,3,3,8,-6,7,-10,-4,7,1,-3,-5,5,-3,-5,-7,3,8,-8,10,-7,-3,1,5,-7,9,9,7,6,-2,5,1,9,-6,6,-3,4,-1,-7,-4,-3,6,-9,-10,3,5,1,-5,-3,-1,6,3,-2,-6,1,3,5,7,-2,-8,-9,4,8,4,2,-2,9,-10,-10,-10,-10,-6,-2,-10,2,-1,2,-4,-7,-10,4,-7,7,-6,8,9,-8,-3,-2,9,3,-6,7,3,-10,3,7,7,-9,-3,8,5,9,-10,-10,-6,9,8,-3,10,-6,-5,2,6,-6,6,-1,10,8,-10,9,3,-7,3,-2,3,-5,10,2,-7,-3,10,6,5,-2,-6,10,-8,-2,8,4,-3,-10,6,-9,8,-10,5,2,1,6,2,7,-4,1,-5,5,-3,1,7,-4,1,7,7,-7,-1,8,-8,5,5,5,-2,8,-7,5,-6,-1,1,4,-7,-10,1,-4,-2,2,-7,-5,-9,-4,-1,-2,-8,-5,-3,10,-9,10,6,-10,5,6,-9,10,-6,-6,-5,-6,-3,1,2,-8,2,3,-4,-6,5,4,3,-3,10,5,-10,-8,4,3,-3,-6,-10,2,-10,-6,10,-10,-4,1,-4,1,7,-1,9,4,-4,6,9,-8,4,-5,-4,7,-8,3,-5,8,-4,-3,-2,6,9,-9,-7,9,-3,-8,-9,-4,-5,9,-3,-2,-7,-1,-3,-4,-8,1,2,-1,-2,1,-5,-8,-3,-8,7,5,-4,2,5,10,-3,-1,8,-9,10,-4,4,-3,1,5,-3,4,1,5,-4,-9,5,-1,1,-7,-9,-6,-5,1,-10,5,-1,3,5,-5,-2,-7,6,3,-9,8,1,10,-3,-3,-9,8,-7,9,-8,4,-3,-10,10,-6,-4,-6,10,-1,9,10,4,8,-1,-5,3,1,-10,-5,-4,9,7,3,3,2,9,10,10,-7,6,1,9,7,5,-10,-5,9,4,1,7,7,-7,-1,6,-9,-10,-4,-2,-8,3,6,-7,-3,-8,-6,10,-2,2,-6,-1,-3,-5,2,7,4,10,-9], dtype = "int32")#candidate|3734|(450,)|const|int32
call_3733 = relay.TupleGetItem(func_65_call(relay.reshape(const_3734.astype('int32'), [5, 10, 9]), relay.reshape(const_3734.astype('int32'), [5, 10, 9]), ), 2)
call_3735 = relay.TupleGetItem(func_68_call(relay.reshape(const_3734.astype('int32'), [5, 10, 9]), relay.reshape(const_3734.astype('int32'), [5, 10, 9]), ), 2)
func_1458_call = mod.get_global_var('func_1458')
func_1461_call = mutated_mod.get_global_var('func_1461')
call_3740 = relay.TupleGetItem(func_1458_call(relay.reshape(call_3692.astype('uint32'), [2704,])), 2)
call_3741 = relay.TupleGetItem(func_1461_call(relay.reshape(call_3692.astype('uint32'), [2704,])), 2)
uop_3761 = relay.sqrt(call_3692.astype('float32')) # shape=(13, 13, 16)
uop_3763 = relay.sqrt(call_3693.astype('float32')) # shape=(13, 13, 16)
func_2535_call = mod.get_global_var('func_2535')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_3766 = func_2535_call()
call_3767 = func_2535_call()
func_1240_call = mod.get_global_var('func_1240')
func_1243_call = mutated_mod.get_global_var('func_1243')
call_3770 = relay.TupleGetItem(func_1240_call(relay.reshape(const_3734.astype('int32'), [450,])), 2)
call_3771 = relay.TupleGetItem(func_1243_call(relay.reshape(const_3734.astype('int32'), [450,])), 2)
func_2039_call = mod.get_global_var('func_2039')
func_2040_call = mutated_mod.get_global_var('func_2040')
call_3772 = relay.TupleGetItem(func_2039_call(), 0)
call_3773 = relay.TupleGetItem(func_2040_call(), 0)
func_2472_call = mod.get_global_var('func_2472')
func_2474_call = mutated_mod.get_global_var('func_2474')
call_3793 = relay.TupleGetItem(func_2472_call(), 0)
call_3794 = relay.TupleGetItem(func_2474_call(), 0)
output = relay.Tuple([call_3661,call_3733,const_3734,call_3740,uop_3761,call_3766,call_3770,call_3772,call_3793,])
output2 = relay.Tuple([call_3662,call_3735,const_3734,call_3741,uop_3763,call_3767,call_3771,call_3773,call_3794,])
func_3798 = relay.Function([], output)
mod['func_3798'] = func_3798
mod = relay.transform.InferType()(mod)
output = func_3798()
func_3799 = relay.Function([], output)
mutated_mod['func_3799'] = func_3799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_3804 = relay.TupleGetItem(func_2143_call(), 0)
call_3805 = relay.TupleGetItem(func_2144_call(), 0)
output = relay.Tuple([call_3804,])
output2 = relay.Tuple([call_3805,])
func_3806 = relay.Function([], output)
mod['func_3806'] = func_3806
mod = relay.transform.InferType()(mod)
output = func_3806()
func_3807 = relay.Function([], output)
mutated_mod['func_3807'] = func_3807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_3856 = relay.TupleGetItem(func_3209_call(), 0)
call_3857 = relay.TupleGetItem(func_3211_call(), 0)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_3863 = func_1576_call()
call_3864 = func_1576_call()
output = relay.Tuple([call_3856,call_3863,])
output2 = relay.Tuple([call_3857,call_3864,])
func_3872 = relay.Function([], output)
mod['func_3872'] = func_3872
mod = relay.transform.InferType()(mod)
mutated_mod['func_3872'] = func_3872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3872_call = mutated_mod.get_global_var('func_3872')
call_3873 = func_3872_call()
output = call_3873
func_3874 = relay.Function([], output)
mutated_mod['func_3874'] = func_3874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_3875 = relay.TupleGetItem(func_3284_call(), 0)
call_3876 = relay.TupleGetItem(func_3286_call(), 0)
output = relay.Tuple([call_3875,])
output2 = relay.Tuple([call_3876,])
func_3878 = relay.Function([], output)
mod['func_3878'] = func_3878
mod = relay.transform.InferType()(mod)
mutated_mod['func_3878'] = func_3878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3878_call = mutated_mod.get_global_var('func_3878')
call_3879 = func_3878_call()
output = call_3879
func_3880 = relay.Function([], output)
mutated_mod['func_3880'] = func_3880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2721_call = mod.get_global_var('func_2721')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_3914 = relay.TupleGetItem(func_2721_call(), 3)
call_3915 = relay.TupleGetItem(func_2722_call(), 3)
output = call_3914
output2 = call_3915
func_3921 = relay.Function([], output)
mod['func_3921'] = func_3921
mod = relay.transform.InferType()(mod)
output = func_3921()
func_3922 = relay.Function([], output)
mutated_mod['func_3922'] = func_3922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_3923 = relay.TupleGetItem(func_1999_call(), 2)
call_3924 = relay.TupleGetItem(func_2001_call(), 2)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_3925 = relay.TupleGetItem(func_3209_call(), 0)
call_3926 = relay.TupleGetItem(func_3211_call(), 0)
var_3937 = relay.var("var_3937", dtype = "float64", shape = (1890,))#candidate|3937|(1890,)|var|float64
bop_3938 = relay.logical_and(call_3923.astype('bool'), relay.reshape(var_3937.astype('bool'), relay.shape_of(call_3923))) # shape=(1890,)
bop_3941 = relay.logical_and(call_3924.astype('bool'), relay.reshape(var_3937.astype('bool'), relay.shape_of(call_3924))) # shape=(1890,)
var_3949 = relay.var("var_3949", dtype = "bool", shape = (13, 13, 16))#candidate|3949|(13, 13, 16)|var|bool
bop_3950 = relay.divide(call_3925.astype('float32'), relay.reshape(var_3949.astype('float32'), relay.shape_of(call_3925))) # shape=(13, 13, 16)
bop_3953 = relay.divide(call_3926.astype('float32'), relay.reshape(var_3949.astype('float32'), relay.shape_of(call_3926))) # shape=(13, 13, 16)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_3954 = func_886_call()
call_3955 = func_886_call()
bop_3961 = relay.power(bop_3950.astype('float32'), relay.reshape(call_3925.astype('float32'), relay.shape_of(bop_3950))) # shape=(13, 13, 16)
bop_3964 = relay.power(bop_3953.astype('float32'), relay.reshape(call_3926.astype('float32'), relay.shape_of(bop_3953))) # shape=(13, 13, 16)
output = relay.Tuple([bop_3938,call_3954,bop_3961,])
output2 = relay.Tuple([bop_3941,call_3955,bop_3964,])
func_3972 = relay.Function([var_3937,var_3949,], output)
mod['func_3972'] = func_3972
mod = relay.transform.InferType()(mod)
mutated_mod['func_3972'] = func_3972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3972_call = mutated_mod.get_global_var('func_3972')
var_3974 = relay.var("var_3974", dtype = "float64", shape = (1890,))#candidate|3974|(1890,)|var|float64
var_3975 = relay.var("var_3975", dtype = "bool", shape = (13, 13, 16))#candidate|3975|(13, 13, 16)|var|bool
call_3973 = func_3972_call(var_3974,var_3975,)
output = call_3973
func_3976 = relay.Function([var_3974,var_3975,], output)
mutated_mod['func_3976'] = func_3976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_3998 = relay.TupleGetItem(func_2630_call(), 0)
call_3999 = relay.TupleGetItem(func_2631_call(), 0)
output = call_3998
output2 = call_3999
func_4000 = relay.Function([], output)
mod['func_4000'] = func_4000
mod = relay.transform.InferType()(mod)
output = func_4000()
func_4001 = relay.Function([], output)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1181_call = mod.get_global_var('func_1181')
func_1182_call = mutated_mod.get_global_var('func_1182')
call_4026 = relay.TupleGetItem(func_1181_call(), 0)
call_4027 = relay.TupleGetItem(func_1182_call(), 0)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
var_4035 = relay.var("var_4035", dtype = "float64", shape = (1890,))#candidate|4035|(1890,)|var|float64
call_4034 = func_1733_call(relay.reshape(var_4035.astype('float64'), [9, 14, 15]), relay.reshape(var_4035.astype('float64'), [9, 14, 15]), )
call_4036 = func_1733_call(relay.reshape(var_4035.astype('float64'), [9, 14, 15]), relay.reshape(var_4035.astype('float64'), [9, 14, 15]), )
output = relay.Tuple([call_4026,call_4034,var_4035,])
output2 = relay.Tuple([call_4027,call_4036,var_4035,])
func_4040 = relay.Function([var_4035,], output)
mod['func_4040'] = func_4040
mod = relay.transform.InferType()(mod)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4041 = relay.var("var_4041", dtype = "float64", shape = (1890,))#candidate|4041|(1890,)|var|float64
func_4040_call = mutated_mod.get_global_var('func_4040')
call_4042 = func_4040_call(var_4041)
output = call_4042
func_4043 = relay.Function([var_4041], output)
mutated_mod['func_4043'] = func_4043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_4069 = func_4000_call()
call_4070 = func_4000_call()
output = call_4069
output2 = call_4070
func_4084 = relay.Function([], output)
mod['func_4084'] = func_4084
mod = relay.transform.InferType()(mod)
mutated_mod['func_4084'] = func_4084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mutated_mod.get_global_var('func_4084')
call_4085 = func_4084_call()
output = call_4085
func_4086 = relay.Function([], output)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4095 = relay.const([[[9,5,2,-7,-4,-7,9,-6,9,6,-8,-5,-5,-1,-6,4],[9,-5,3,10,-6,-2,4,-2,8,8,-6,-2,2,6,2,-7],[1,-6,5,-2,4,-8,3,-1,5,7,-4,2,2,-6,-10,-7],[-5,3,-8,-1,-10,1,8,-4,-1,4,-10,3,-4,8,4,-5],[8,-8,-3,-9,9,-6,-1,-2,1,-10,-4,-5,-4,4,-6,-6],[7,3,5,4,-1,5,-1,8,2,-5,3,-7,-10,-2,10,-3],[1,8,7,4,-4,-1,5,-9,9,3,3,-6,3,-1,5,-9]],[[-9,6,10,-5,-10,-9,6,-2,-3,7,-7,1,1,2,-8,-6],[-1,-5,4,-5,-6,7,-6,9,6,-5,6,-2,10,5,-8,-6],[-5,9,-1,-4,-3,-1,10,6,5,-8,9,-10,-7,-6,-7,-3],[3,10,8,-3,4,8,5,1,-7,-10,2,-3,6,3,2,-4],[8,9,7,-7,-7,9,10,1,-1,-2,-3,-2,-4,10,3,-1],[9,8,-5,9,9,5,7,7,-8,-1,-5,8,9,9,4,-4],[-1,9,7,-7,5,10,-7,10,-7,4,5,5,-2,8,4,6]],[[-6,1,-2,-2,10,1,-8,-1,-3,8,9,-3,-8,6,7,-7],[-7,-6,7,-8,-1,-4,-1,7,2,-1,9,-3,-9,10,8,-8],[-8,-8,4,1,6,-8,10,10,-1,4,-8,-8,3,2,-7,-10],[5,-9,-3,-8,-6,7,-10,-10,1,10,3,6,-7,-1,9,9],[-9,-4,-7,-5,-7,-10,9,-9,-8,-10,10,-6,4,-1,-1,8],[-7,4,5,10,2,-2,-2,3,-1,-10,1,-7,-5,10,9,6],[10,-3,-1,-8,2,6,-10,-3,-6,-1,-9,1,-9,8,9,-5]],[[5,-4,2,1,-4,6,-8,7,10,-10,-10,-2,2,-6,-5,-9],[-2,7,7,-6,5,-6,-2,8,3,-2,-8,2,4,8,1,-10],[-10,-7,-2,-1,6,3,-10,-2,8,-8,8,-6,-9,2,2,5],[6,3,6,9,1,9,-1,-6,5,-5,7,-5,-6,8,-6,1],[6,2,-8,-3,-2,-10,-3,2,-4,3,8,8,5,-1,-1,-5],[-8,7,9,-5,-2,4,5,7,4,-3,-8,-6,8,-5,2,4],[-10,-8,-2,-2,9,-2,-3,-6,-9,-7,7,-9,3,-4,6,4]],[[10,7,-4,8,6,-8,9,3,-2,-6,-6,-5,-10,3,-6,4],[-9,-10,1,-6,8,-5,9,-6,10,9,-6,6,-1,4,6,-5],[-10,-5,1,-7,7,-7,-9,5,-6,5,7,9,-10,7,-8,10],[5,8,-9,8,-4,2,1,-3,2,-8,1,8,10,-9,6,-6],[-7,1,-9,3,6,-7,5,-4,7,-5,-1,10,-8,10,8,-7],[2,2,8,5,1,1,-3,2,-8,10,9,9,-1,-1,4,-6],[9,8,-1,1,6,-9,-8,-10,-7,-6,-2,-4,-5,-4,7,7]],[[-7,-1,-7,-4,8,-3,2,5,-8,6,7,5,-6,-10,10,-7],[2,9,2,-6,5,-7,5,-6,2,-2,-1,10,9,-8,-9,8],[-3,-3,-10,-7,8,-2,7,-7,10,-9,-8,8,-1,6,1,3],[1,-1,7,-6,6,-10,-7,-4,-6,-8,2,-10,2,4,10,-9],[5,1,-10,7,-4,8,1,8,5,-2,2,9,-7,-7,-2,7],[-8,1,7,3,4,5,-3,3,-9,-4,-6,-6,8,2,-2,1],[-9,-6,-10,-10,-2,10,-5,3,9,-6,-2,9,-8,2,-10,-9]],[[-5,7,-6,10,9,-5,-4,-10,-6,9,1,-8,9,-10,-2,9],[-4,5,-1,-9,-4,7,-3,-10,-5,6,6,-6,5,5,-7,-7],[9,2,-4,10,-7,5,-4,-8,-3,-7,-10,6,-1,3,5,10],[1,-4,4,4,-3,-1,3,7,6,8,9,1,7,7,-5,4],[8,4,3,3,-6,-4,4,8,-7,7,-2,-5,4,1,-10,9],[4,-2,-3,5,-1,-2,-2,6,7,-3,-4,8,-2,-9,-3,-10],[4,-5,9,8,-1,-5,-1,2,4,6,6,6,-4,-10,-3,-5]],[[-4,-4,10,-1,2,-4,6,-10,-1,-10,2,-5,-1,3,-5,3],[-9,-2,-10,-2,8,-3,1,-9,-10,1,5,8,1,1,2,-7],[2,-1,-10,-3,8,7,9,-4,-2,-1,-1,4,4,9,-3,8],[6,8,-2,-6,-8,2,6,-8,-10,-9,10,4,1,10,10,1],[-9,3,3,4,2,-1,-1,-9,8,2,1,3,-9,-8,-3,6],[10,-3,-7,-4,-4,-7,6,4,4,-3,9,-7,-9,9,3,-3],[-3,6,5,10,9,-2,3,-8,-1,-2,-8,-3,3,8,7,1]],[[-8,-1,10,-10,-1,1,-10,1,-3,6,-1,8,-8,1,6,5],[-10,-4,-10,-9,-9,-4,-1,-2,9,6,4,-3,-10,10,-6,-1],[3,-7,2,-5,6,1,6,4,1,3,-7,10,1,-5,-4,3],[2,4,6,4,-9,-1,-8,10,8,5,-2,-3,4,9,-4,7],[4,9,-1,4,-8,4,-4,7,8,7,8,2,-10,2,-5,10],[-2,-9,-2,2,-2,7,-9,-7,-8,-8,8,8,10,2,9,-5],[8,4,1,-1,-10,-6,-5,-7,-1,9,4,-5,-5,2,-8,-7]],[[-10,-8,4,-3,-10,-5,-4,-7,-9,4,4,-10,8,-5,6,7],[-10,1,6,10,3,-8,10,-3,2,4,9,-6,-5,-7,2,1],[9,-6,3,1,-1,-4,6,10,9,5,8,-6,2,-4,-9,4],[4,-5,8,-5,-6,-2,10,-2,7,-6,-9,-8,8,-3,8,7],[1,-10,-7,-10,6,5,5,3,-7,7,-3,-6,10,10,-9,9],[-8,-1,-6,9,-2,-7,4,-8,-1,8,3,-7,-5,8,-5,-6],[-8,9,5,-5,2,5,-2,-8,10,-8,-10,-6,3,1,-5,-2]],[[-1,6,-1,-4,-2,1,-1,-6,-7,-8,9,-1,9,2,-8,-6],[7,6,2,-1,8,8,-2,-4,9,5,-5,-4,-8,-8,-3,5],[8,-8,-1,7,-4,1,-1,5,5,2,6,-4,-10,-3,1,-5],[-1,-1,3,-2,-3,2,-7,6,9,-2,1,1,2,-6,-6,-2],[-5,9,-1,6,-5,-1,-7,4,4,1,4,1,-8,9,-8,-8],[3,3,-10,1,-7,-8,7,10,-8,1,3,-9,8,2,8,1],[9,9,-10,5,-1,2,6,3,1,5,-3,4,2,-9,5,-6]],[[-3,6,-3,1,-5,-4,-4,-5,1,8,6,-5,-7,-1,-4,9],[-9,-1,5,8,4,10,-9,3,-5,-3,-5,9,5,-4,-6,8],[-5,10,2,9,10,-4,-2,-8,-1,10,-1,6,1,-7,-1,4],[6,6,-2,4,2,-10,8,-3,-10,3,-2,-7,6,-1,1,-3],[-9,-4,3,2,7,-2,-3,2,-10,5,3,-6,-8,-8,-2,5],[-1,2,-7,1,-10,9,-10,5,7,1,-3,-10,5,1,2,-9],[-9,7,9,1,1,-1,2,-8,-7,10,-7,3,10,-9,4,-5]],[[3,10,-10,-9,1,-9,-7,4,7,4,-4,-7,-4,7,6,-2],[4,1,3,4,-2,-8,3,3,-8,5,7,-8,-10,-9,-9,-5],[3,6,8,1,-4,-8,-3,-6,-9,2,-4,-5,7,1,8,-8],[2,6,-5,-9,-6,-7,-8,-9,-5,1,1,-4,-3,-4,-10,2],[8,3,7,-2,9,-1,2,3,10,9,-3,10,9,-7,-8,-3],[6,-2,8,-5,5,5,5,7,2,-7,-10,-1,2,-7,4,9],[-8,3,6,4,-4,-9,6,4,-1,-3,7,9,1,-2,-6,6]],[[-3,-1,-9,-8,-3,-3,2,-7,8,3,5,5,-8,2,1,9],[9,2,-6,-4,-9,9,6,-4,7,10,-3,-7,-3,6,-7,7],[-6,5,-1,-2,7,2,7,-8,5,-6,4,-9,2,-10,-2,-2],[-7,-2,-7,-7,-6,-8,4,9,3,-10,-9,-3,-6,-8,9,7],[-9,4,-3,-10,9,4,-3,5,-8,-10,-3,8,7,6,-7,4],[3,-4,7,7,-2,-1,4,9,-8,9,-6,-9,-10,-9,-9,3],[-8,-10,2,5,6,7,10,2,-8,7,5,-5,4,-3,6,7]],[[-4,-3,4,-10,-1,-2,4,-9,4,-6,-4,5,-8,3,6,-10],[-8,-7,-10,-3,-4,2,-9,-2,-6,4,-3,2,-9,5,-6,6],[-7,-4,-1,-10,2,-5,-4,3,-7,-4,8,-10,-8,2,10,-7],[2,8,8,2,-1,-10,6,-4,2,3,-1,-5,-10,4,5,-8],[3,-4,-3,3,-3,-6,-8,-2,-10,10,-2,4,-2,-1,-2,-5],[5,7,6,-2,3,-8,2,-3,6,4,8,9,6,6,1,4],[3,-5,-1,7,-7,-7,6,-1,-1,2,3,-9,1,1,-9,7]],[[-6,2,-9,3,6,7,10,-6,-3,2,10,-8,-7,3,4,1],[-4,5,-3,-1,8,3,-6,-1,-7,-8,2,-8,-5,-8,-4,-8],[1,-2,-4,5,3,-2,-7,9,-3,1,-4,-6,-3,-9,5,-3],[-3,-3,10,-8,6,-1,10,6,-6,1,-5,9,3,-5,5,7],[3,-4,-7,-5,2,-5,5,-8,-8,10,-7,-3,7,3,6,-10],[9,3,6,-1,3,3,-9,8,3,1,7,2,-2,5,-4,-10],[-9,-3,10,-5,1,-10,10,-8,-5,3,-4,5,-2,5,-7,3]]], dtype = "uint64")#candidate|4095|(16, 7, 16)|const|uint64
const_4096 = relay.const([[[5,8,5,-1,-2,-5,9,-5,9,-2,-4,7,-5,-3,-8,-9],[-2,-2,-7,-1,-4,-10,-4,-2,4,9,-2,-5,-3,-10,-9,-5],[-3,7,-7,-1,-5,-6,7,-3,9,-1,8,-2,4,-3,10,-1],[-4,7,7,4,10,-2,-5,9,6,-9,-4,7,-2,9,10,-4],[-10,-6,8,10,10,-6,8,-3,3,-7,2,5,6,-5,-7,1],[-2,4,-8,10,8,-7,1,-9,1,-3,3,6,-3,-8,-3,-6],[7,-7,-6,-5,4,3,9,10,-1,2,1,3,-2,-4,9,2]],[[-4,1,5,-6,-7,4,2,-7,-7,7,8,3,1,6,1,-8],[-6,-5,-4,-10,2,8,-8,-9,3,-2,-5,2,4,8,4,10],[-2,1,-10,8,4,7,8,-6,1,-1,-7,-2,10,6,-3,-4],[-3,-4,7,-4,7,-3,-9,-5,1,7,-10,-8,-9,4,3,1],[-4,-1,-7,2,-8,7,7,6,-2,7,1,2,-2,-2,-6,-4],[-7,1,-8,6,-9,-3,-8,6,3,-2,9,-4,2,-9,-10,1],[6,1,-7,1,-1,2,-3,-9,-2,-1,-7,-3,1,-9,4,8]],[[2,-3,-6,4,-9,7,7,-10,-7,9,6,-2,3,-7,9,-7],[5,-9,6,-6,-2,-1,-9,5,2,9,-7,6,-2,6,-8,-4],[5,-4,9,-8,-5,9,9,-9,9,10,10,-5,-7,-6,4,-2],[5,1,-7,4,-7,-7,8,-7,5,2,-3,8,8,7,-3,-2],[-6,-2,-10,-7,1,5,-2,-8,-10,-4,5,-5,7,-4,2,1],[-9,-10,-3,-7,-1,-6,5,-1,2,9,1,-2,-5,-1,2,-4],[-6,1,-9,4,1,4,3,10,-5,5,-3,4,-3,5,-10,-8]],[[3,-8,8,-4,-3,2,4,-1,2,-4,-1,5,5,9,10,4],[7,-6,5,3,-6,1,-8,10,-8,-5,3,5,1,-5,-1,2],[2,-2,-8,2,9,-6,8,7,10,-7,3,3,5,-4,-1,-6],[-6,8,3,-8,5,-1,1,1,1,6,-1,9,1,4,-2,2],[1,2,4,-6,7,4,-7,-1,6,-4,8,-4,-1,-10,-9,10],[4,3,1,9,-9,6,-9,-4,-6,-9,-6,-5,1,7,-10,1],[-9,4,-4,-8,3,10,-2,-6,-5,-5,7,-7,7,-10,2,-1]],[[-6,1,-7,4,4,1,-10,-6,-1,7,1,10,-9,5,2,2],[-2,-9,-3,-8,-8,-5,-7,3,-2,-7,4,10,-10,7,-2,1],[4,-10,6,8,-8,-4,3,-2,10,7,9,-9,2,-10,-5,-8],[-2,9,-8,-1,9,-1,3,-7,-5,6,2,4,1,10,-6,8],[1,-3,4,7,-9,10,-4,-4,-1,-6,6,-9,-3,-5,-1,4],[-10,-1,2,2,8,5,8,2,10,2,-7,4,-2,-6,4,5],[6,-2,5,2,-5,5,6,3,-7,-3,8,2,-10,2,-8,-10]],[[2,5,-4,-1,3,2,-5,-5,-10,7,-8,7,-7,2,6,10],[-1,-5,1,6,2,-3,-1,-9,9,-8,-5,4,3,-9,-7,-5],[3,3,-6,10,-7,4,5,10,9,2,-2,-8,-2,2,-6,-10],[-8,7,-4,-1,1,-10,7,10,-7,-2,9,-3,-6,4,5,3],[7,-7,-6,-1,-4,-5,10,-8,10,-7,9,3,7,9,9,5],[-3,-8,-1,-8,-9,-7,-10,5,5,8,4,-1,-9,4,4,6],[4,-6,3,1,7,-1,2,-5,-10,1,6,-6,4,-5,-1,-6]],[[4,-1,8,-9,9,1,5,-8,-1,-8,3,-4,-4,-5,-9,-2],[-5,-10,-3,7,8,-3,6,-6,10,-5,-8,10,-7,8,8,-9],[-1,7,1,-7,-3,-1,-4,7,-3,-9,-9,-4,5,-4,-4,-7],[5,10,-1,-4,1,-5,-4,-1,3,9,-8,-10,-7,-6,-9,-5],[-9,8,-5,-6,8,9,2,-9,9,-10,-1,10,7,8,-10,-8],[-1,1,-9,-10,8,8,-1,-8,-7,7,-9,7,-4,-9,9,5],[6,-3,3,-1,-5,5,-8,-6,9,2,-4,-3,-3,5,2,3]],[[8,-2,-1,3,1,-2,1,3,-5,8,-3,10,-5,-9,4,4],[8,-4,6,5,-7,8,8,6,8,5,-6,9,-7,-6,-10,5],[-6,-7,8,2,10,1,-5,3,2,-5,10,-8,2,-10,-6,-10],[-5,5,-8,7,10,8,-7,-7,9,-5,-7,6,9,-2,2,-9],[9,-10,-2,-7,-7,6,-5,2,8,-3,-2,-4,8,10,-10,-8],[-3,-7,7,9,-10,7,9,-1,9,-4,6,6,6,3,2,-8],[-2,-2,-1,-3,6,-8,1,6,7,3,-7,-7,-2,10,2,3]],[[-3,2,-7,-6,-5,2,8,-6,-5,8,7,-5,-4,4,-5,1],[-3,-3,-8,-3,-5,-10,2,-8,6,-9,9,-1,8,-10,-4,10],[-6,8,-4,-8,8,2,4,7,5,-1,9,-9,9,2,2,1],[-7,-1,-1,-9,-7,-1,10,8,-3,10,-3,10,10,-5,4,-10],[6,1,2,-6,-3,-7,4,-8,6,-8,-9,-3,8,1,6,6],[-5,-7,9,4,-2,-4,-8,-3,2,-7,10,10,-8,2,2,-5],[-5,4,8,5,-10,-8,1,7,3,-4,4,10,5,-7,10,-6]],[[6,10,-7,-6,3,-7,3,8,8,8,-6,-5,2,1,-5,8],[6,-5,-4,2,-3,2,5,-4,3,-6,-2,-1,-4,-6,-9,10],[4,-10,4,-6,3,5,-9,10,4,-1,6,1,-6,8,-3,3],[-4,4,9,7,9,9,-2,1,6,2,-6,1,-10,-7,9,-10],[7,1,5,7,9,-3,-8,6,-6,5,1,-4,-8,6,3,10],[-10,-5,10,-1,9,-9,8,-10,-4,-6,2,10,3,9,1,-7],[2,-8,-5,1,-2,-2,8,7,-8,10,3,1,-3,-1,10,7]],[[-1,4,3,1,-6,8,-6,9,-7,5,7,5,6,6,5,8],[10,1,7,-1,-4,8,-3,3,4,-10,-4,2,-5,6,4,6],[-7,-9,9,-7,10,-3,4,3,-4,10,-1,9,-5,-6,10,4],[8,-2,-5,2,-6,-10,-2,10,-7,-5,-7,4,9,10,1,7],[-9,-8,7,10,6,-6,3,8,10,-2,-8,-8,6,8,-4,-7],[-5,-7,-7,-8,7,3,3,3,7,-10,-2,5,6,5,10,3],[9,8,7,8,1,5,7,5,3,-8,-4,1,6,-2,-10,-2]],[[4,-2,5,4,-5,7,-7,5,-10,5,6,7,-3,-8,3,9],[-9,8,-5,7,-1,2,-9,-10,-10,4,-2,-9,10,-6,-9,-10],[-6,-2,3,2,4,-4,1,-3,-10,6,-7,-4,4,10,5,-2],[8,-5,-1,-7,-9,1,6,10,10,9,-10,-2,5,8,2,2],[-1,-3,1,9,-10,1,-4,-3,6,-2,4,-3,-6,10,10,-1],[8,3,-3,-1,-5,-2,-3,5,-8,-10,-1,-3,3,-8,-5,3],[-3,5,3,1,-10,8,8,5,-10,-10,5,9,-5,2,-6,-3]],[[3,4,-6,3,8,7,7,-3,6,-8,-7,10,6,3,-9,10],[6,6,-9,-6,-2,-4,-7,-6,10,-6,2,8,10,-9,-8,8],[3,4,5,-10,2,-8,10,-2,7,-7,5,-9,9,-1,7,10],[5,3,-5,1,-6,8,2,-8,9,-9,5,7,-6,-10,10,-4],[-6,-9,9,-8,-6,2,-6,8,-8,-10,-5,-6,7,-3,-7,-6],[-3,6,2,6,10,-7,-8,4,3,8,2,8,-1,-6,9,3],[-6,3,-3,-9,7,-1,-2,9,-10,-3,3,2,6,2,2,9]],[[-2,-8,-1,8,-3,-1,8,10,8,-2,7,-5,-4,8,2,-5],[-10,-9,-10,-9,8,7,3,-5,1,2,-1,-8,-3,2,6,10],[-10,8,-8,2,8,-3,5,2,7,-3,-2,-5,9,-2,5,-10],[-3,-3,-5,8,-4,-6,10,4,-3,-8,-10,-2,10,-4,8,-8],[-4,1,-7,7,-3,-10,-1,2,3,-1,-3,-2,8,6,3,6],[-6,-9,9,4,-6,-5,-9,5,7,3,-10,10,2,-4,1,-2],[-9,2,6,-10,-10,-1,1,1,1,-5,2,9,-3,-8,-4,-5]],[[-3,1,-3,-4,-5,4,-3,4,-10,5,6,5,-10,6,-7,-7],[8,-2,2,-5,-2,-2,5,-1,5,-6,-1,-10,8,-4,-7,-7],[-2,5,6,-8,-1,5,6,-3,-1,2,2,2,-10,-4,9,1],[10,-5,7,7,6,6,-8,-5,-9,-3,-10,2,-3,-4,-10,4],[-2,8,-2,1,-9,-10,-7,-5,1,-9,3,1,-10,10,2,1],[3,-5,-6,-5,-3,-1,-1,7,4,-4,-9,-7,-2,10,1,7],[-3,-2,-1,6,-3,6,-3,5,1,8,-6,7,-2,-9,-8,-8]],[[3,2,7,7,4,2,-6,-9,-10,-7,2,2,2,-6,10,-3],[-1,6,-4,-6,6,-10,-8,-1,7,-3,-1,2,8,6,-1,-10],[6,2,9,-10,7,7,-10,4,-6,6,-3,3,-8,9,7,-6],[5,3,-6,-9,5,-8,6,-2,-2,2,-9,-7,1,10,7,-1],[2,8,-6,-10,-5,-6,2,-5,-8,-2,-1,6,6,10,-2,8],[4,1,-3,3,-9,10,8,-8,10,5,-8,3,-9,-7,-5,-6],[-9,1,7,-1,-4,2,6,-10,9,-8,-8,-2,8,-1,-2,-2]]], dtype = "uint64")#candidate|4096|(16, 7, 16)|const|uint64
bop_4097 = relay.equal(const_4095.astype('bool'), relay.reshape(const_4096.astype('bool'), relay.shape_of(const_4095))) # shape=(16, 7, 16)
output = bop_4097
output2 = bop_4097
func_4102 = relay.Function([], output)
mod['func_4102'] = func_4102
mod = relay.transform.InferType()(mod)
mutated_mod['func_4102'] = func_4102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4103 = func_4102_call()
output = call_4103
func_4104 = relay.Function([], output)
mutated_mod['func_4104'] = func_4104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_4122 = relay.TupleGetItem(func_3037_call(), 1)
call_4123 = relay.TupleGetItem(func_3039_call(), 1)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_4140 = relay.TupleGetItem(func_3209_call(), 0)
call_4141 = relay.TupleGetItem(func_3211_call(), 0)
output = relay.Tuple([call_4122,call_4140,])
output2 = relay.Tuple([call_4123,call_4141,])
func_4147 = relay.Function([], output)
mod['func_4147'] = func_4147
mod = relay.transform.InferType()(mod)
mutated_mod['func_4147'] = func_4147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4147_call = mutated_mod.get_global_var('func_4147')
call_4148 = func_4147_call()
output = call_4148
func_4149 = relay.Function([], output)
mutated_mod['func_4149'] = func_4149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4183 = relay.var("var_4183", dtype = "int64", shape = (8, 1, 14))#candidate|4183|(8, 1, 14)|var|int64
const_4184 = relay.const([[[-2,7,-6,-10,2,4,8,5,-8,-7,7,10,-8,1],[-9,7,-9,9,-5,-6,9,-6,-1,-8,-6,-8,8,-10],[6,6,10,9,10,-9,-1,3,-6,-8,3,-6,1,-1],[1,7,5,-3,9,-8,-3,5,3,-5,-8,-6,9,8],[-5,8,2,-3,9,4,1,-6,-3,8,8,5,-6,-6],[2,-4,-5,-10,8,-4,1,-4,1,7,-10,10,-10,-7],[-3,-3,9,1,-10,8,6,6,9,-10,-9,-6,1,10],[-8,-10,-9,7,10,9,9,-9,-1,-2,2,-3,-8,1]],[[-3,-1,-7,-6,-1,4,9,1,-3,4,-5,4,-8,-10],[4,-4,-4,1,-7,10,10,-1,-9,8,5,6,8,-5],[7,-3,-9,-1,3,6,9,-9,-2,-9,-3,5,-8,-5],[-2,-5,8,-3,4,-9,6,-8,-1,-5,5,4,-10,5],[-1,-6,-5,-4,-8,9,1,-10,3,-3,5,7,-9,-10],[-3,8,-7,7,-5,4,-7,5,3,4,-3,10,2,-8],[2,3,4,9,4,-5,6,10,4,-1,1,3,-2,-2],[2,-9,-9,-10,-2,6,5,-6,-1,-6,2,-2,-5,-6]],[[7,3,-7,6,5,-9,-4,-4,6,-10,6,4,5,2],[-10,-7,6,8,4,-9,9,5,-3,-2,7,-8,10,-3],[-7,-5,3,5,5,5,9,-6,4,-2,10,-7,-10,2],[-6,-4,-9,-9,-4,4,-10,-9,-4,5,-8,-6,5,-7],[-10,-4,3,-9,-1,-5,-3,-6,-7,-9,-2,9,-5,8],[10,-4,4,7,8,-10,-4,-5,1,1,-6,8,-9,8],[4,4,3,6,-8,5,-1,-6,-9,4,-10,-9,-7,2],[4,10,6,-1,1,-6,-2,-6,9,10,1,-9,10,5]],[[3,-5,-9,-4,-8,4,4,-10,-5,9,-6,-2,-4,-8],[-9,4,-2,8,2,8,6,-9,4,-7,6,4,7,-1],[-9,5,-3,9,-8,9,-10,9,-9,-8,-10,3,-3,9],[5,8,8,1,2,7,8,9,-10,-7,1,-3,10,-8],[-5,2,-7,-1,4,4,-1,-6,-6,-10,-3,7,-2,-6],[6,-7,1,8,-10,2,-2,-1,-9,3,-4,-2,-8,3],[-7,4,3,4,-1,-1,-5,6,-1,-10,8,4,4,8],[-4,4,10,-7,-7,6,-7,-8,1,-8,3,-3,-1,2]],[[4,9,-1,-9,9,3,-9,6,5,8,8,-10,-4,-3],[-9,-10,2,-9,2,-5,6,-1,-6,-2,-8,9,-6,8],[-10,-7,-5,2,-6,-2,2,3,3,4,-8,-2,-9,-4],[-10,9,5,-10,2,-8,4,-9,5,-4,-6,10,7,10],[-3,-4,-9,4,6,-2,6,9,8,-6,-1,-3,-1,1],[-7,7,-5,4,2,8,1,-10,-8,9,-8,10,5,6],[-8,-5,10,-6,3,-1,-9,-6,-6,7,3,1,1,1],[-7,-6,-6,2,5,10,-10,-2,9,1,-4,1,-6,-9]],[[6,-5,-10,7,-1,1,9,-3,-6,9,-5,-1,9,-6],[-4,2,-6,-2,7,4,8,-6,-1,-5,-4,-10,-5,7],[3,-6,8,-9,-4,-3,-10,-9,-4,-5,-3,-2,7,7],[-5,5,-8,6,-9,-10,-6,4,-2,4,9,1,-2,-3],[4,-2,-6,8,-7,10,9,-9,-7,-1,-9,4,-4,1],[9,6,6,2,-4,8,5,7,1,1,10,-6,-6,-6],[7,-10,-3,-2,4,-5,-6,-10,-2,-5,5,-3,-9,-6],[1,-7,1,-9,-4,7,4,-6,4,1,3,3,3,4]],[[6,7,2,-10,-1,-1,-7,-3,-10,-1,-7,2,-10,9],[-10,-5,3,-4,6,-9,-2,-2,-9,-9,-5,3,5,-3],[10,-10,7,7,-9,-4,-6,4,5,6,-2,-3,7,1],[1,9,-8,-4,-6,4,5,-2,2,8,3,-1,8,4],[-10,-1,10,6,1,-4,2,-4,-5,9,-4,5,10,-4],[2,8,-4,-6,-9,6,-2,-8,-8,3,-1,-3,7,4],[-3,-8,6,-8,-4,-7,-5,-2,-1,3,-5,5,9,10],[-5,5,-3,-5,-10,-1,7,5,9,1,10,-1,2,-10]],[[5,9,6,-10,-9,-8,-9,-1,-7,10,-8,5,-7,-2],[4,10,-3,9,-2,-8,5,-8,-5,1,-7,-7,2,-2],[8,-7,-7,-4,-5,2,2,-8,6,-1,7,2,-3,-9],[-8,-3,7,3,-9,8,9,-3,8,8,-9,4,9,2],[-2,6,-3,10,-10,-8,9,-3,4,7,-9,-5,-4,-4],[4,4,8,7,8,1,-10,9,5,-8,-9,-4,-2,7],[-9,-8,7,-10,-1,-6,6,-8,-8,-8,8,5,-2,6],[-7,9,-3,10,8,-5,-7,-9,8,-9,-4,-1,-2,-10]]], dtype = "int64")#candidate|4184|(8, 8, 14)|const|int64
bop_4185 = relay.greater_equal(var_4183.astype('bool'), const_4184.astype('bool')) # shape=(8, 8, 14)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_4194 = func_750_call()
call_4195 = func_750_call()
func_4102_call = mod.get_global_var('func_4102')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_4197 = func_4102_call()
call_4198 = func_4102_call()
output = relay.Tuple([bop_4185,call_4194,call_4197,])
output2 = relay.Tuple([bop_4185,call_4195,call_4198,])
func_4218 = relay.Function([var_4183,], output)
mod['func_4218'] = func_4218
mod = relay.transform.InferType()(mod)
mutated_mod['func_4218'] = func_4218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4219 = relay.var("var_4219", dtype = "int64", shape = (8, 1, 14))#candidate|4219|(8, 1, 14)|var|int64
func_4218_call = mutated_mod.get_global_var('func_4218')
call_4220 = func_4218_call(var_4219)
output = call_4220
func_4221 = relay.Function([var_4219], output)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2039_call = mod.get_global_var('func_2039')
func_2040_call = mutated_mod.get_global_var('func_2040')
call_4256 = relay.TupleGetItem(func_2039_call(), 2)
call_4257 = relay.TupleGetItem(func_2040_call(), 2)
var_4260 = relay.var("var_4260", dtype = "uint32", shape = (2704,))#candidate|4260|(2704,)|var|uint32
bop_4261 = relay.bitwise_xor(call_4256.astype('uint64'), relay.reshape(var_4260.astype('uint64'), relay.shape_of(call_4256))) # shape=(2704,)
bop_4264 = relay.bitwise_xor(call_4257.astype('uint64'), relay.reshape(var_4260.astype('uint64'), relay.shape_of(call_4257))) # shape=(2704,)
output = bop_4261
output2 = bop_4264
func_4266 = relay.Function([var_4260,], output)
mod['func_4266'] = func_4266
mod = relay.transform.InferType()(mod)
var_4267 = relay.var("var_4267", dtype = "uint32", shape = (2704,))#candidate|4267|(2704,)|var|uint32
output = func_4266(var_4267)
func_4268 = relay.Function([var_4267], output)
mutated_mod['func_4268'] = func_4268
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4310 = relay.constdtype = "float32")#candidate|4310|(12, 10, 14)|const|float32
uop_4311 = relay.exp(const_4310.astype('float32')) # shape=(12, 10, 14)
bop_4314 = relay.less(const_4310.astype('bool'), relay.reshape(uop_4311.astype('bool'), relay.shape_of(const_4310))) # shape=(12, 10, 14)
func_3878_call = mod.get_global_var('func_3878')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_4319 = relay.TupleGetItem(func_3878_call(), 0)
call_4320 = relay.TupleGetItem(func_3880_call(), 0)
output = relay.Tuple([bop_4314,call_4319,])
output2 = relay.Tuple([bop_4314,call_4320,])
func_4321 = relay.Function([], output)
mod['func_4321'] = func_4321
mod = relay.transform.InferType()(mod)
output = func_4321()
func_4322 = relay.Function([], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3798_call = mod.get_global_var('func_3798')
func_3799_call = mutated_mod.get_global_var('func_3799')
call_4375 = relay.TupleGetItem(func_3798_call(), 8)
call_4376 = relay.TupleGetItem(func_3799_call(), 8)
output = call_4375
output2 = call_4376
func_4379 = relay.Function([], output)
mod['func_4379'] = func_4379
mod = relay.transform.InferType()(mod)
mutated_mod['func_4379'] = func_4379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4379_call = mutated_mod.get_global_var('func_4379')
call_4380 = func_4379_call()
output = call_4380
func_4381 = relay.Function([], output)
mutated_mod['func_4381'] = func_4381
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4384 = relay.const([[[2.028618],[-3.815053],[-4.849475],[-6.012665]],[[8.291284],[-5.394001],[1.463158],[3.382708]],[[3.652377],[6.726258],[-1.665647],[6.543907]],[[-8.272279],[5.736716],[1.301947],[1.911154]],[[2.770724],[8.240091],[-3.126877],[-2.032237]],[[-0.174398],[8.835971],[-4.541747],[3.264611]],[[9.073406],[3.361776],[5.074530],[-5.126775]],[[-3.709938],[9.595856],[2.863922],[-1.618970]],[[-2.919712],[-2.200852],[4.253022],[1.204832]],[[0.060009],[-2.982687],[1.282544],[-4.839673]],[[-3.090669],[-8.629015],[-9.337370],[-3.105350]],[[-8.400987],[9.515012],[-5.588743],[-5.043595]]], dtype = "float32")#candidate|4384|(12, 4, 1)|const|float32
uop_4385 = relay.asin(const_4384.astype('float32')) # shape=(12, 4, 1)
func_3237_call = mod.get_global_var('func_3237')
func_3238_call = mutated_mod.get_global_var('func_3238')
call_4399 = func_3237_call()
call_4400 = func_3237_call()
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_4418 = relay.TupleGetItem(func_2143_call(), 0)
call_4419 = relay.TupleGetItem(func_2144_call(), 0)
uop_4430 = relay.acosh(uop_4385.astype('float32')) # shape=(12, 4, 1)
func_1794_call = mod.get_global_var('func_1794')
func_1797_call = mutated_mod.get_global_var('func_1797')
var_4434 = relay.var("var_4434", dtype = "float64", shape = (420,))#candidate|4434|(420,)|var|float64
call_4433 = relay.TupleGetItem(func_1794_call(relay.reshape(var_4434.astype('float64'), [15, 2, 14]), relay.reshape(var_4434.astype('bool'), [15, 2, 14]), ), 1)
call_4435 = relay.TupleGetItem(func_1797_call(relay.reshape(var_4434.astype('float64'), [15, 2, 14]), relay.reshape(var_4434.astype('bool'), [15, 2, 14]), ), 1)
const_4438 = relay.const([[[8.264870,3.969953,-9.434944],[-9.996400,4.581741,8.778668],[-8.408932,-7.147327,-6.954625],[-3.366456,4.279160,-8.480415]],[[0.627176,7.522556,-8.943205],[1.738931,0.556696,-5.449032],[-6.313718,-0.253730,3.859789],[-6.900016,1.275848,9.913769]],[[6.917649,-7.009228,-0.779117],[-8.814260,-3.567666,-1.702402],[-9.369318,-0.459071,5.011806],[-5.177007,6.930292,5.874003]],[[-8.827415,-4.629921,4.712064],[5.755125,-3.899788,8.543268],[2.480072,-4.534990,-9.601526],[-1.981699,-3.210649,-0.704180]],[[4.861726,9.278206,0.227665],[4.635976,-4.447641,-9.635052],[-0.097365,8.143928,6.275149],[2.582372,-2.312263,-6.362447]],[[0.590403,-3.635634,4.230333],[8.173577,8.299183,0.640093],[8.641309,-0.305232,4.913752],[6.751480,9.504488,-2.915331]],[[-7.016176,2.937060,0.184361],[4.640575,-1.126896,-1.184453],[-8.599725,-0.031975,5.123913],[3.880114,-9.534988,-8.247339]],[[-7.130886,1.310306,-6.352921],[-2.082669,-3.321956,-0.977827],[9.097151,-1.956817,7.972441],[0.895246,-5.717042,4.501935]],[[8.785130,-7.559168,-3.474781],[5.714759,9.904607,-8.570805],[-0.683195,-1.595245,-3.030018],[-5.398599,-3.257302,9.903477]],[[-6.358025,2.966403,-4.238339],[-6.287923,8.800353,-3.648267],[6.195727,-1.724907,-2.170785],[6.909855,2.902091,0.696400]],[[-9.152239,0.358013,-8.968374],[-2.122609,6.019676,2.547347],[-2.453540,-2.052819,7.917827],[6.028913,-2.622311,0.383056]],[[4.472635,-0.886710,-0.659060],[-5.630930,0.514183,2.570335],[1.382683,-4.530970,8.500438],[-6.151851,8.009928,-9.424240]]], dtype = "float32")#candidate|4438|(12, 4, 3)|const|float32
bop_4439 = relay.equal(uop_4430.astype('bool'), const_4438.astype('bool')) # shape=(12, 4, 3)
bop_4445 = relay.logical_xor(const_4438.astype('int32'), uop_4385.astype('int32')) # shape=(12, 4, 3)
output = relay.Tuple([call_4399,call_4418,call_4433,var_4434,bop_4439,bop_4445,])
output2 = relay.Tuple([call_4400,call_4419,call_4435,var_4434,bop_4439,bop_4445,])
func_4449 = relay.Function([var_4434,], output)
mod['func_4449'] = func_4449
mod = relay.transform.InferType()(mod)
mutated_mod['func_4449'] = func_4449
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4450 = relay.var("var_4450", dtype = "float64", shape = (420,))#candidate|4450|(420,)|var|float64
func_4449_call = mutated_mod.get_global_var('func_4449')
call_4451 = func_4449_call(var_4450)
output = call_4451
func_4452 = relay.Function([var_4450], output)
mutated_mod['func_4452'] = func_4452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3522_call = mod.get_global_var('func_3522')
func_3524_call = mutated_mod.get_global_var('func_3524')
call_4470 = func_3522_call()
call_4471 = func_3522_call()
output = relay.Tuple([call_4470,])
output2 = relay.Tuple([call_4471,])
func_4477 = relay.Function([], output)
mod['func_4477'] = func_4477
mod = relay.transform.InferType()(mod)
mutated_mod['func_4477'] = func_4477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4477_call = mutated_mod.get_global_var('func_4477')
call_4478 = func_4477_call()
output = call_4478
func_4479 = relay.Function([], output)
mutated_mod['func_4479'] = func_4479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_4513 = relay.TupleGetItem(func_2143_call(), 1)
call_4514 = relay.TupleGetItem(func_2144_call(), 1)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_4515 = relay.TupleGetItem(func_934_call(), 0)
call_4516 = relay.TupleGetItem(func_936_call(), 0)
output = relay.Tuple([call_4513,call_4515,])
output2 = relay.Tuple([call_4514,call_4516,])
func_4544 = relay.Function([], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4544_call = mutated_mod.get_global_var('func_4544')
call_4545 = func_4544_call()
output = call_4545
func_4546 = relay.Function([], output)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4554 = relay.var("var_4554", dtype = "int16", shape = (7, 11, 13))#candidate|4554|(7, 11, 13)|var|int16
var_4555 = relay.var("var_4555", dtype = "int16", shape = (7, 11, 13))#candidate|4555|(7, 11, 13)|var|int16
bop_4556 = relay.greater(var_4554.astype('bool'), relay.reshape(var_4555.astype('bool'), relay.shape_of(var_4554))) # shape=(7, 11, 13)
output = bop_4556
output2 = bop_4556
func_4564 = relay.Function([var_4554,var_4555,], output)
mod['func_4564'] = func_4564
mod = relay.transform.InferType()(mod)
mutated_mod['func_4564'] = func_4564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4564_call = mutated_mod.get_global_var('func_4564')
var_4566 = relay.var("var_4566", dtype = "int16", shape = (7, 11, 13))#candidate|4566|(7, 11, 13)|var|int16
var_4567 = relay.var("var_4567", dtype = "int16", shape = (7, 11, 13))#candidate|4567|(7, 11, 13)|var|int16
call_4565 = func_4564_call(var_4566,var_4567,)
output = call_4565
func_4568 = relay.Function([var_4566,var_4567,], output)
mutated_mod['func_4568'] = func_4568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4379_call = mod.get_global_var('func_4379')
func_4381_call = mutated_mod.get_global_var('func_4381')
call_4588 = func_4379_call()
call_4589 = func_4379_call()
func_2937_call = mod.get_global_var('func_2937')
func_2940_call = mutated_mod.get_global_var('func_2940')
var_4591 = relay.var("var_4591", dtype = "float32", shape = (720,))#candidate|4591|(720,)|var|float32
call_4590 = relay.TupleGetItem(func_2937_call(relay.reshape(var_4591.astype('float32'), [5, 9, 16])), 1)
call_4592 = relay.TupleGetItem(func_2940_call(relay.reshape(var_4591.astype('float32'), [5, 9, 16])), 1)
output = relay.Tuple([call_4588,call_4590,var_4591,])
output2 = relay.Tuple([call_4589,call_4592,var_4591,])
func_4617 = relay.Function([var_4591,], output)
mod['func_4617'] = func_4617
mod = relay.transform.InferType()(mod)
var_4618 = relay.var("var_4618", dtype = "float32", shape = (720,))#candidate|4618|(720,)|var|float32
output = func_4617(var_4618)
func_4619 = relay.Function([var_4618], output)
mutated_mod['func_4619'] = func_4619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2039_call = mod.get_global_var('func_2039')
func_2040_call = mutated_mod.get_global_var('func_2040')
call_4630 = relay.TupleGetItem(func_2039_call(), 2)
call_4631 = relay.TupleGetItem(func_2040_call(), 2)
uop_4633 = relay.asin(call_4630.astype('float64')) # shape=(2704,)
uop_4635 = relay.asin(call_4631.astype('float64')) # shape=(2704,)
output = uop_4633
output2 = uop_4635
func_4645 = relay.Function([], output)
mod['func_4645'] = func_4645
mod = relay.transform.InferType()(mod)
output = func_4645()
func_4646 = relay.Function([], output)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mod.get_global_var('func_2630')
func_2631_call = mutated_mod.get_global_var('func_2631')
call_4662 = relay.TupleGetItem(func_2630_call(), 0)
call_4663 = relay.TupleGetItem(func_2631_call(), 0)
func_4544_call = mod.get_global_var('func_4544')
func_4546_call = mutated_mod.get_global_var('func_4546')
call_4664 = relay.TupleGetItem(func_4544_call(), 0)
call_4665 = relay.TupleGetItem(func_4546_call(), 0)
output = relay.Tuple([call_4662,call_4664,])
output2 = relay.Tuple([call_4663,call_4665,])
func_4670 = relay.Function([], output)
mod['func_4670'] = func_4670
mod = relay.transform.InferType()(mod)
output = func_4670()
func_4671 = relay.Function([], output)
mutated_mod['func_4671'] = func_4671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3237_call = mod.get_global_var('func_3237')
func_3238_call = mutated_mod.get_global_var('func_3238')
call_4681 = func_3237_call()
call_4682 = func_3237_call()
uop_4684 = relay.log10(call_4681.astype('float64')) # shape=(1352, 2)
uop_4686 = relay.log10(call_4682.astype('float64')) # shape=(1352, 2)
bop_4692 = relay.logical_and(uop_4684.astype('bool'), relay.reshape(call_4681.astype('bool'), relay.shape_of(uop_4684))) # shape=(1352, 2)
bop_4695 = relay.logical_and(uop_4686.astype('bool'), relay.reshape(call_4682.astype('bool'), relay.shape_of(uop_4686))) # shape=(1352, 2)
output = relay.Tuple([bop_4692,])
output2 = relay.Tuple([bop_4695,])
func_4697 = relay.Function([], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mutated_mod.get_global_var('func_4697')
call_4698 = func_4697_call()
output = call_4698
func_4699 = relay.Function([], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_4712 = func_1576_call()
call_4713 = func_1576_call()
output = call_4712
output2 = call_4713
func_4714 = relay.Function([], output)
mod['func_4714'] = func_4714
mod = relay.transform.InferType()(mod)
output = func_4714()
func_4715 = relay.Function([], output)
mutated_mod['func_4715'] = func_4715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4723 = relay.var("var_4723", dtype = "float64", shape = (2, 8, 3))#candidate|4723|(2, 8, 3)|var|float64
uop_4724 = relay.sqrt(var_4723.astype('float64')) # shape=(2, 8, 3)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_4733 = relay.TupleGetItem(func_3037_call(), 0)
call_4734 = relay.TupleGetItem(func_3039_call(), 0)
func_1733_call = mod.get_global_var('func_1733')
func_1737_call = mutated_mod.get_global_var('func_1737')
var_4747 = relay.var("var_4747", dtype = "float64", shape = (1890,))#candidate|4747|(1890,)|var|float64
call_4746 = func_1733_call(relay.reshape(var_4747.astype('float64'), [9, 14, 15]), relay.reshape(var_4747.astype('float64'), [9, 14, 15]), )
call_4748 = func_1733_call(relay.reshape(var_4747.astype('float64'), [9, 14, 15]), relay.reshape(var_4747.astype('float64'), [9, 14, 15]), )
uop_4754 = relay.exp(uop_4724.astype('float32')) # shape=(2, 8, 3)
uop_4756 = relay.acosh(call_4746.astype('float64')) # shape=(9, 14, 15)
uop_4758 = relay.acosh(call_4748.astype('float64')) # shape=(9, 14, 15)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
call_4759 = relay.TupleGetItem(func_871_call(relay.reshape(call_4733.astype('float64'), [15, 2, 14])), 0)
call_4760 = relay.TupleGetItem(func_874_call(relay.reshape(call_4733.astype('float64'), [15, 2, 14])), 0)
output = relay.Tuple([call_4733,var_4747,uop_4754,uop_4756,call_4759,])
output2 = relay.Tuple([call_4734,var_4747,uop_4754,uop_4758,call_4760,])
func_4772 = relay.Function([var_4723,var_4747,], output)
mod['func_4772'] = func_4772
mod = relay.transform.InferType()(mod)
var_4773 = relay.var("var_4773", dtype = "float64", shape = (2, 8, 3))#candidate|4773|(2, 8, 3)|var|float64
var_4774 = relay.var("var_4774", dtype = "float64", shape = (1890,))#candidate|4774|(1890,)|var|float64
output = func_4772(var_4773,var_4774,)
func_4775 = relay.Function([var_4773,var_4774,], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_4791 = relay.TupleGetItem(func_934_call(), 0)
call_4792 = relay.TupleGetItem(func_936_call(), 0)
uop_4805 = relay.log10(call_4791.astype('float64')) # shape=(15, 2, 14)
uop_4807 = relay.log10(call_4792.astype('float64')) # shape=(15, 2, 14)
bop_4810 = relay.power(uop_4805.astype('float32'), relay.reshape(call_4791.astype('float32'), relay.shape_of(uop_4805))) # shape=(15, 2, 14)
bop_4813 = relay.power(uop_4807.astype('float32'), relay.reshape(call_4792.astype('float32'), relay.shape_of(uop_4807))) # shape=(15, 2, 14)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_4814 = relay.TupleGetItem(func_4697_call(), 0)
call_4815 = relay.TupleGetItem(func_4699_call(), 0)
output = relay.Tuple([bop_4810,call_4814,])
output2 = relay.Tuple([bop_4813,call_4815,])
func_4816 = relay.Function([], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mutated_mod.get_global_var('func_4816')
call_4817 = func_4816_call()
output = call_4817
func_4818 = relay.Function([], output)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_4853 = relay.TupleGetItem(func_3226_call(), 1)
call_4854 = relay.TupleGetItem(func_3227_call(), 1)
const_4868 = relay.const([[[True,False,True,True,False,False,False,False,False,True,True,True,True,False,False],[False,False,False,True,True,True,True,False,False,True,False,True,True,False,True],[True,True,False,True,True,False,True,True,False,True,False,True,False,True,True]],[[True,True,True,True,True,True,False,False,True,False,True,False,True,False,False],[True,True,False,True,False,True,True,True,False,True,True,False,False,True,True],[True,False,True,True,True,False,False,True,False,True,True,True,True,True,True]],[[False,False,False,False,True,True,True,False,False,True,True,True,True,True,True],[False,False,True,True,True,True,True,True,False,True,True,False,False,False,True],[True,False,True,False,False,False,True,True,False,True,False,True,True,True,False]],[[False,False,False,True,True,False,False,True,True,True,False,False,True,True,True],[False,False,True,True,False,False,True,True,True,True,True,False,False,False,True],[False,False,True,False,True,True,False,False,False,False,True,False,False,False,True]]], dtype = "bool")#candidate|4868|(4, 3, 15)|const|bool
bop_4869 = relay.greater(call_4853.astype('bool'), relay.reshape(const_4868.astype('bool'), relay.shape_of(call_4853))) # shape=(4, 3, 15)
bop_4872 = relay.greater(call_4854.astype('bool'), relay.reshape(const_4868.astype('bool'), relay.shape_of(call_4854))) # shape=(4, 3, 15)
uop_4894 = relay.sin(bop_4869.astype('float32')) # shape=(4, 3, 15)
uop_4896 = relay.sin(bop_4872.astype('float32')) # shape=(4, 3, 15)
func_213_call = mod.get_global_var('func_213')
func_216_call = mutated_mod.get_global_var('func_216')
var_4907 = relay.var("var_4907", dtype = "uint32", shape = (2704,))#candidate|4907|(2704,)|var|uint32
call_4906 = func_213_call(relay.reshape(var_4907.astype('uint32'), [13, 13, 16]), relay.reshape(var_4907.astype('uint32'), [13, 13, 16]), )
call_4908 = func_213_call(relay.reshape(var_4907.astype('uint32'), [13, 13, 16]), relay.reshape(var_4907.astype('uint32'), [13, 13, 16]), )
func_912_call = mod.get_global_var('func_912')
func_914_call = mutated_mod.get_global_var('func_914')
call_4911 = relay.TupleGetItem(func_912_call(), 2)
call_4912 = relay.TupleGetItem(func_914_call(), 2)
func_3878_call = mod.get_global_var('func_3878')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_4920 = relay.TupleGetItem(func_3878_call(), 0)
call_4921 = relay.TupleGetItem(func_3880_call(), 0)
output = relay.Tuple([uop_4894,call_4906,var_4907,call_4911,call_4920,])
output2 = relay.Tuple([uop_4896,call_4908,var_4907,call_4912,call_4921,])
func_4923 = relay.Function([var_4907,], output)
mod['func_4923'] = func_4923
mod = relay.transform.InferType()(mod)
var_4924 = relay.var("var_4924", dtype = "uint32", shape = (2704,))#candidate|4924|(2704,)|var|uint32
output = func_4923(var_4924)
func_4925 = relay.Function([var_4924], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_4927 = relay.TupleGetItem(func_934_call(), 0)
call_4928 = relay.TupleGetItem(func_936_call(), 0)
func_4266_call = mod.get_global_var('func_4266')
func_4268_call = mutated_mod.get_global_var('func_4268')
const_4934 = relay.const([[3,-8,2,-1,-1,-10,2,-5,4,9,-10,8,3,-9,-6,-5,-7,-10,-10,-5,9,-6,-3,-9,8,-6,-1,6,-6,2,-9,1,-9,-8,3,2,1,5,2,2,-2,-8,5,-6,6,3,6,-5,6,-3,-9,10,-4,5,-9,-6,5,5,-6,1,10,9,-1,-2,-8,-5,-2,8,-10,-4,7,-3,3,-4,-10,1,2,-7,-6,7,5,-2,7,-7,-2,9,10,-4,9,-2,-5,-10,-6,-8,-7,8,-7,1,2,-2,-10,6,2,-4,9,1,-10,-9,-7,9,-1,7,1,1,-7,-10,5,-6,-7,7,6,-10,-6,-3,5,8,10,6,-3,-7,-2,-9,4,-2,-8,6,7,-10,-4,-10,4,-5,-1,-8,-9,-7,3,-6,3,-9,-10,-3,-3,-2,8,6,-9,-8,3,9,4,-3,-3,-5,10,5,1,7,-3,-10,2,-4,-8,-3,10,-5,7,-1,-8,7,10,-5,2,-4,-2,7,-2,-5,3,5,10,-8,-7,-9,3,2,10,4,-9,8,-5,-7,7,-9,-2,4,2,2,8,6,-7,-7,-4,-8,3,6,4,5,5,-10,6,-10,-5,-10,4,-6,-4,8,8,-3,-6,9,2,9,-7,6,-4,-6,9,-2,3,3,-3,-5,1,-1,5,-6,5,-6,-6,-8,9,9,-3,10,-1,3,-6,-6,-4,-3,-1,8,6,-8,6,-3,3,4,5,10,-9,-1,-9,3,7,4,4,-4,8,3,10,-1,-9,7,-1,1,9,-4,-2,4,2,7,-2,8,-3,-5,6,3,1,1,-6,1,-4,-4,3,-8,-5,-2,-6,-8,1,9,9,5,10,1,8,-1,-6,-3,-2,3,3,-4,-6,-5,6,-6,-6,5,9,-3,-6,1,9,3,2,9,-1,-6,7,-4,7,-8,-1,2,6,4,10,-6,-1,10,-4,3,-2,-2,10,2,4,-4,-10,2,2,10,5,-2,-6,2,-3,-7,3,4,5,-3,-5,-3,-1,-2,5,8,-9,-6,5,7,2,3,-3,-9,4,-7,-8,3,-7,6,-7,10,5,1,6,9,3,-5,10,5,7,2,-2,9,-10,-1,-9,4,-9,-5,-4,6,6,-2,-7,-8,-8,-4,-5,-2,-7,-3,6,-2,2,-1,-4,4,8,4,-4,2,5,4,8,-7,1,-3,9,5,5,-8,4,-6,-9,-10,7,4,-5,-3,8,-7,-2,-7,6,-10,7,9,-3,6,7,4,-5,7,-1,-4,-10,8,-3,-1,-9,1,3,9,-5,8,8,-6,-2,-6,3,2,1,3,6,-5,7,3,4,-3,-7,-10,3,-10,1,8,6,-7,-9,-2,-6,-2,-3,-2,4,-7,-8,-8,5,6,1,-1,-5,5,3,-10,4,-4,6,-3,3,3,-7,2,8,9,5,8,2,-5,9,-4,7,8,-5,-6,-1,10,10,9,2,-9,9,7,9,8,7,-10,1,-10,1,5,-6,9,10,6,-7,1,10,-9,9,-8,-9,-5,-8,-7,2,2,-10,6,10,-2,-6,-3,2,-9,9,-9,8,9,8,7,-1,-8,10,10,7,-7,6,1,-1,-9,10,9,2,3,7,10,9,-10,3,10,-4,2,6,8,-6,10,-6,3,10,-8,6,-4,7,7,-3,-9,-6,7,-6,1,-1,-9,1,-5,-8,7,-10,-10,-6,6,-3,-6,-5,1,9,5,-3,7,6,7,6,9,-7,-2,3,-4,-2,-5,5,-8,6,-4,-8,4,-6,10,-5,7,-8,-8,-8,7,-3,7,-8,4,-6,4,-1,10,1,9,-8,9,5,7,10,-3,6,-4,-3,-10,-7,5,-5,7,-4,2,-3,8,-2,1,-10,-6,-4,-3,-7,8,-7,3,-9,-8,9,6,4,-9,-10,-8,-5,-7,5,6,2,5,6,-3,-2,-7,-2,-10,9,-5,-10,-9,9,5,-5,3,4,7,10,6,-1,-1,-8,-3,10,5,-3,8,10,4,-4,-3,7,-10,-9,8,-1,-5,2,3,-8,-4,5,-2,5,10,-3,10,2,10,8,1,9,-6,6,2,10,-4,2,-9,2,-6,2,-6,8,6,-3,5,7,-2,-5,-6,4,9,7,-3,-7,3,-7,-6,6,2,10,-3,3,1,-2,2,-8,2,-8,4,5,7,-6,-8,-4,4,-2,-3,2,4,3,-2,6,6,-10,-1,8,7,-2,8,9,-2,-9,-7,-10,-5,-6,4,10,8,-10,4,-1,-4,8,-9,-2,-2,-7,-1,10,10,10,2,3,9,2,-1,-6,6,-7,-3,-7,9,3,-2,6,1,-5,-8,-4,4,-2,-7,-2,-2,-7,7,9,-9,-7,-7,1,1,-2,6,7,10,-5,-8,9,3,5,1,7,6,10,-9,1,9,-10,-7,-3,10,3,2,-8,-1,6,-6,-3,6,-6,-6,-6,10,10,-7,-4,10,5,-3,-10,3,-8,8,1,-5,-1,-4,6,7,1,8,10,-5,3,-5,4,-8,9,4,-1,7,-1,-1,4,4,9,-1,3,2,-5,6,7,4,9,-5,10,-2,-2,-10,10,-2,-8,-8,10,-7,-10,-6,7,2,9,-8,-1,8,3,2,3,-2,6,4,-3,10,-3,2,-8,10,2,-4,8,8,1,-5,-3,-9,-1,4,-3,-7,5,-10,4,10,-8,2,-6,5,10,6,-9,4,-10,-3,-7,3,2,4,-3,-3,-7,-7,5,4,4,-1,-7,-2,-3,9,-5,-1,6,-4,-10,-2,-2,-3,2,4,-7,8,10,-8,7,3,2,1,-1,-6,2,9,-8,-2,-10,-6,-1,-1,-6,-4,-10,5,4,7,10,8,3,7,2,2,8,-10,-2,-2,4,3,4,4,-5,3,8,9,-1,-3,-8,4,10,-6,7,-3,3,-4,4,-7,1,-4,3,8,-10,6,5,5,-6,-10,-1,3,-10,3,5,3,-1,-4,-10,8,-5,-9,4,8,7,2,-4,3,4,-6,-7,-6,5,3,-4,7,-3,2,2,-7,9,-10,8,6,1,-2,2,9,8,5,2,1,-10,-5,4,-5,3,7,9,5,5,8,-5,-5,8,-7,3,8,-3,-10,-4,10,-10,-1,10,9,-3,-5,6,3,1,4,10,-9,-4,-9,-4,8,-6,5,6,5,2,2,-1,2,7,-10,-10,9,10,4,7,-9,4,-2,7,2,7,-7,-10,-4,7,-3,5,-2,-10,-10,-10,-9,-3,7,-8,9,-4,8,7,1,6,-2,-6,5,-3,-4,-3,9,5,8,-4,1,-5,-2,-2,6,-8,10,-5,1,-9,-2,7,-10,7,6,-5,1,-9,-4,-7,9,-1,1,-4,-5,-7,-9,8,9,-7,9,3,6,5,2,-2,-9,-10,10,-5,10,4,8,-1,9,1,2,10,-7,7,8,10,2,-10,-7,7,-6,-9,3,1,-5,-10,8,6,4,5,-3,-9,-5,7,-3,1,5,6,-7,-2,1,3,1,-5,1,6,2,-8,6,3,10,-9,-2,-5,-3,-5,-10,-4,-8,-7,-8,4,10,-9,7,-6,-5,-2,-1,8,-5,-8,3,-5,10,9,-6,-8,-3,5,-8,-7,-7,2,9,3,4,8,-3,8,8,9,-8,-10,-5,-3,7,8,2,-5,-9,-4,10,-2,-8,8,6,7,6,9,6,4,3,-9,-9,5,-3,-3,-2,9,5,-3,5,-7,1,10,-9,1,4,8,-4,-3,3,-3,-3,4,-8,-9,8,3,3,5,10,3,-5,9,-5,8,10,-2,4,9,2,6,-5,9,6,9,1,-10,-4,-10,1,6,9,-4,-3,-6,2,-8,3,-4,-3,-5,-6,5,-3,-10,2,8,5,6,-5,-6,-6,-6,2,-8,-5,-1,7,5,-10,-4,3,4,2,-10,2,-5,-10,7,-3,9,7,2,-8,4,2,-10,10,4,4,10,-2,4,8,-6,-8,10,6,1,-7,-2,5,-5,-8,6,5,-9,2,10,7,-2,2,-2,4,-4,10,-1,10,9,-4,-9,2,-9,1,6,-7,3,-10,10,2,-4,-10,9,-10,-7,5,5,-1,-4,6,-10,-8,-4,2,2,-8,8,3,9,6,-8,-1,8,9,-6,-2,8,3,-10,-6,9,-3,1,4,7,-7,1,-10,-9,1,-4,2,-4,-3,-10,-9,10,-5,7,-4,-9,1,-6,7,2,1,-2,7,9,-10,-7,-7,-2,10,4,-6,-5,-3,10,6,-9,-7,1,-6,-1,1,-9,5,-3,-3,-10,-1,9,-4,3,10,-9,4,-10,2,9,7,2,-9,8,-5,2,3,-10,-10,-9,7,-9,9,1,9,7,-6,-10,5,7,-8,5,-2,-8,-8,-5,6,5,-1,9,6,8,4,-7,9,10,-4,-9,-8,1,6,2,-9,-9,5,2,3,-3,1,-5,-3,8,-10,6,-7,-5,-2,-7,5,-1,4,-10,-5,-2,-3,7,-4,5,-3,1,9,-3,2,-2,-5,-7,-8,4,10,-10,-4,10,3,1,8,5,5,-10,9,-4,-5,-3,-8,8,6,-2,6,-8,7,4,1,-3,-1,-5,-5,7,10,4,-9,-5,-10,-5,6,5,5,9,3,4,4,-4,-6,10,-3,3,7,-6,4,-3,-7,4,-8,-9,4,4,-1,-9,-1,5,3,5,6,7,3,10,8,1,8,6,-3,4,-3,1,1,-10,-3,-6,-4,-7,-3,-6,-3,-7,-7,5,-7,4,-1,6,10,-8,-8,-2,-7,1,7,1,6,-3,2,3,-6,-9,-3,-8,-8,-5,-1,1,5,-8,-9,4,-4,8,-2,5,-9,4,-7,4,7,2,-8,5,-4,8,9,-9,-7,-1,10,-9,-2,1,-3,7,-8,-9,-3,-10,7,-10,-1,3,10,9,2,10,-10,5,8,7,-10,-2,1,10,1,-6,3,-10,-5,-2,8,-1,3,-4,-8,8,-7,1,-2,8,2,-6,5,-5,-7,-7,7,5,-4,2,10,-7,8,-5,-10,-6,8,7,-9,4,-9,3,7,-7,-9,-2,-1,-5,1,-1,-6,-3,-10,8,3,7,10,-10,-10,-9,-10,-9,4,-9,-6,3,-9,6,7,9,5,3,-10,4,2,10,-6,2,-2,4,1,-10,4,-10,-10,-2,-6,10,-8,5,-8,3,-3,6,5,-3,-9,-7,-7,-5,-7,-9,2,1,4,1,3,7,-8,-1,-5,9,5,7,4,-10,1,-8,-9,-4,-8,-6,-10,7,8,-10,4,8,-7,3,9,4,5,2,10,-8,2,9,8,9,-8,10,-10,1,-3,9,-10,-9,-3,-10,8,3,-1,-1,10,7,-1,-10,-3,-8,-7,-8,10,-3,-10,-9,-10,-6,5,-2,-9,5,-5,-1,-7,-7,-8,5,-4,-10,-3,1,-1,6,6,5,8,7,6,-4,-9,-9,-5,4,3,4,-2,9,3,1,7,7,7,-1,-2,-8,-5,9,-1,9,-6,2,-7,-3,-10,4,-2,5,6,2,10,-10,-7,6,1,-4,8,7,6,-10,6,-4,-4,8,4,10,10,-8,9,2,9,9,1,5,-7,6,10,4,10,5,-1,-7,-5,5,8,5,5,-7,7,-6,8,10,3,-1,3,4,-1,7,5,-9,3,-10,-6,-7,-8,9,-6,-3,2,-9,-10,-1,5,6,-9,-2,-8,1,9,1,10,5,-1,-4,-2,6,-7,2,4,-1,-2,-5,7,-4,-5,-6,-7,2,1,8,8,-5,2,8,-5,1,4,-8,4,-9,-9,4,8,-3,-2,2,5,-9,-7,5,8,1,-3,-2,3,6,8,7,5,-7,-10,-9,8,-6,-4,9,6,-3,9,6,1,-3,1,7,1,-7,4,-8,5,-9,4,3,8,-8,3,6,-5,3,8,-4,-5,-9,-6,-1,-2,1,8,5,10,-2,9,-7,6,2,1,2,6,4,10,-4,6,8,7,-2,1,2,-2,6,-10,-2,4,-6,5,4,-5,-8,2,-9,-1,8,4,2,10,4,6,-10,7,-1,-7,-10,1,-5,5,-4,2,-8,1,-4,10,10,3,-4,-7,7,-8,-6,4,-4,3,5,9,6,5,-10,10,-1,-1,5,10,3,6,10,1,9,9,3,-7,-9,-9,-7,10,-1,-3,-2,10,-4,5,8,-8,-3,-1,7,5,2,5,-4,7,8,4,6,5,10,-6,9,-5,10,-7,6,3,8,9,-4,9,-8,-4,-7,-6,1,7,-5,10,-10,2,-3,-4,-2,-2,9,10,4,-4,5,8,-4,-5,7,2,-6,-3,-9,9,2,-8,1,-10,6,-6,6,6,-10,8,-10,-7,5,5,-9,-5,-6,-3,5,-1,-7,-9,-2,-4,-9,4,-3,6,-2,-3,-5,-3,-3,7,-10,-6,-7,2,3,-6,8,-2,10,10,10,7,4,-6,6,7,-6,-3,-2,-4,10,-7,-9,-9,8,-3,5,-4,9,9,7,-3,1,-6,10,-7,-10,-7,5,10,-5,2,2,-10,9,-8,5,9,-5,6,7,-6,-10,-7,-10,8,9,-5,7,-4,5,1,1,-4,7,4,5,-10,-4,2,4,-9,-10,-6,10,-1,1,-2,6,-3,-8,-6,8,10,10,7,-1,-9,-1,-8,-6,-5,-5,-1,5,-3,-10,5,-4,1,-6,10,-5,10,3,-6,-9,5,-7,6,-10,-4,9,-8,4,-6,8,-10,4,-6,8,-3,-4,-2,5,-3,-10,-3,6,-9,-3,-3,-1,-3,-2,2,-2,8,3,6,-9,-3,8,5,9,6,-3,4,-3,10,7,-5,7,6,-3,-10,-5,-1,-8,9,-4,-1,6,-2,-2,2,2,-2,-1,1,-5,8,3,-3,10,8,8,1,-3,-3,-3,8,-4,-8,-1,3,-9,3,10,3,-9,4,-8,-3,7,-8,3,-10,6,-6,-7,10,7,10,-1,-9,-3,10,-9,-4,1,9,-10,10,6,-3,-4,1,-10,1,3,4,5,7,8,-2,-5,-2,-1,1,10,-2,-10,-6,-5,4,10,-4,-3,-1,-2,2,4,-2,-8,-4,-8,-5,-1,-9,-9,-4,10,-4,-1,-7,-7,-10,-5,-8,5,1,10,4,-8,-8,7,-6,4,-1,6,-7,7,6,10,-4,5,10,3,7,-8,-8,10,1,5,-8,10,-6,1,-10,7,7,1,-7,3,8,2,-6,2,-6,-9,-10]], dtype = "uint32")#candidate|4934|(1, 2704)|const|uint32
call_4933 = func_4266_call(relay.reshape(const_4934.astype('uint32'), [2704,]))
call_4935 = func_4266_call(relay.reshape(const_4934.astype('uint32'), [2704,]))
output = relay.Tuple([call_4927,call_4933,const_4934,])
output2 = relay.Tuple([call_4928,call_4935,const_4934,])
func_4944 = relay.Function([], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
output = func_4944()
func_4945 = relay.Function([], output)
mutated_mod['func_4945'] = func_4945
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4958 = relay.const([[[-9.995470,-9.715871,-2.154762,7.715281,7.724137,-2.148843,-0.845510,-1.586903,-7.987658,9.321613,-2.261178],[-0.288053,5.306484,9.582706,-2.361824,5.435306,7.996742,9.527483,-5.727356,-2.892503,-5.709105,8.401882],[2.302511,-8.228109,-4.569167,-8.842671,0.733889,5.003318,7.611355,-4.306632,4.963634,-4.797494,7.634862],[7.590687,-2.836969,-5.826146,-3.327791,-8.894144,7.198419,8.876004,-5.790826,-5.237147,-4.639776,2.242508],[-6.589540,7.568143,4.655375,-1.346284,7.374473,6.805123,2.548183,4.912044,9.807627,-9.705982,-3.605718],[-6.210763,3.897824,3.338371,2.965287,8.598362,-9.616478,9.739726,-7.927734,-1.429562,6.110772,7.369013],[2.082399,-0.223096,-8.742472,8.386934,-1.809275,-4.339918,-0.487368,-0.813307,-4.113129,5.019400,-7.124499],[-2.416364,0.924296,0.296010,-7.294524,4.562302,1.105355,-1.008602,-1.954823,-7.588733,-0.047719,-3.032847],[-1.934187,-9.583467,-2.340403,0.331382,-1.947303,2.317425,7.996259,0.082478,-8.564500,3.130040,-1.354582],[5.105538,-7.824870,-1.178279,-5.954921,2.099432,4.794126,2.187567,-8.774093,-9.482721,1.069247,-8.462334],[-7.295071,-4.146693,-6.188523,-6.353131,-7.336984,-7.791973,-8.022325,7.683380,6.341879,8.715020,-5.302974],[9.553423,-2.119376,1.953398,8.899907,-2.865544,0.406379,-9.485141,-3.355811,9.944804,8.770785,3.688522],[-5.568803,-8.607273,-4.294410,-9.299477,8.403346,2.282361,0.295007,3.956825,-7.183621,3.410656,-8.254630],[1.966894,-6.907498,6.905667,-9.216864,6.696513,2.834276,9.255185,-6.951993,-2.818927,5.880944,6.914596]],[[5.239838,8.762821,-9.881773,4.527669,1.872025,9.118673,3.000283,0.758608,-7.785973,-1.061870,-0.931673],[4.000897,7.477891,-2.748831,1.849641,-3.216271,-1.748473,-4.462711,-9.487777,-0.773913,-0.954972,0.729745],[-8.898296,-4.365081,-1.082044,9.968362,-2.178815,3.737527,-8.524336,-0.817281,3.964684,-4.421336,-7.575064],[-1.676067,7.841837,-1.748793,-4.289880,5.740604,-6.221290,1.483606,6.135335,-0.377576,2.015416,1.916832],[0.606522,9.542066,-8.232469,0.728094,-2.639808,3.090990,-7.174744,-1.780796,-8.480964,1.719054,6.069574],[0.540405,9.320225,-4.719903,3.028561,8.354919,4.112265,8.770447,-6.762906,-1.198113,-5.281616,-2.916267],[-3.016450,7.400868,7.775432,0.236320,-5.831262,3.108991,-0.992122,-7.365172,7.721134,4.535357,7.457632],[2.982611,1.555971,-1.322902,9.135051,-6.501156,8.468741,-6.956520,-8.901172,3.696911,-0.354068,3.825291],[-7.344935,-1.405965,2.558555,-1.769359,-2.583269,-2.937929,-2.678268,8.491657,-2.489741,0.483314,-2.272746],[-7.902670,7.440165,5.543666,-3.543704,9.042905,-0.259385,-7.717665,1.616258,-3.436088,-5.258797,0.686055],[-2.445831,9.936930,-0.649147,-6.629958,-7.704896,7.737776,7.074719,-7.360170,9.598046,-0.457621,8.475527],[6.880770,-6.129302,1.875614,9.311284,2.346418,8.637050,-1.327796,8.860028,-2.032678,5.297981,5.073704],[-9.327280,-3.101930,9.905986,-9.936090,9.239006,4.602891,1.779084,0.195906,6.374798,-6.048476,4.466939],[-8.877127,-0.713568,-8.866150,9.027373,-6.960108,9.785008,2.737410,0.197101,-5.209849,-9.828852,-4.981193]],[[-1.887363,-8.401577,-3.176080,-3.152776,1.132250,-6.984196,-2.177828,5.238292,6.100447,6.107314,-8.149090],[6.599397,-2.262580,-6.790534,-9.936310,8.716966,-1.529060,-0.482180,-2.020303,-7.832857,-8.611174,7.540491],[-9.109982,-0.839036,-3.970538,-4.702764,-1.874950,2.031802,2.652784,4.025556,-1.074125,-4.188208,-7.564284],[-9.845121,-6.872517,-5.450654,0.412183,3.076507,-7.263774,5.367508,4.953822,2.806165,-2.148424,6.675471],[9.310913,7.740369,0.880330,-3.451230,-3.611651,-9.373040,-0.041813,2.220414,8.074171,8.520641,-8.544040],[-3.737997,-8.595863,-9.075896,-0.617380,1.587979,-0.664265,-4.262773,-0.996969,-4.248635,6.339839,5.397268],[1.371823,3.999120,7.106642,2.407954,-3.719048,-0.506391,4.993272,7.128851,-0.979147,7.846674,6.253691],[-1.394652,4.275085,-2.938493,7.529836,-3.927489,9.383981,2.224095,-0.069780,-5.907847,3.494036,0.579120],[7.727115,-4.877019,3.030990,1.600488,0.614521,2.199342,-1.001165,8.969704,7.373700,-4.740390,-9.055997],[-2.744667,-6.817815,6.576988,7.348323,3.519762,3.433156,-1.785031,6.165592,5.089346,2.046766,9.178340],[-3.716854,0.816682,-6.299640,-0.699924,-8.535399,3.531093,-7.110894,-1.665808,-5.385542,-6.357703,5.181953],[-6.561904,-3.990688,-9.149411,-7.919147,3.626558,-5.575314,7.793181,8.679034,0.675924,-3.807991,-0.362739],[3.513290,-3.685400,-5.282429,8.362292,2.232308,5.663402,4.259741,7.614582,2.198835,3.759315,4.381927],[0.988991,-4.999697,-6.591189,8.120894,6.644232,0.197407,-3.173999,9.740211,-4.029046,-9.386515,-9.894110]],[[1.352922,3.723386,8.286759,-2.010712,8.547031,1.552273,0.036488,-3.945506,-9.723756,0.399819,0.742229],[-5.288236,-9.851315,9.726567,-3.394422,-4.396521,2.292161,-3.165441,-2.040603,-8.500245,-4.271305,-1.825435],[2.733366,0.726119,-2.009200,-9.975157,-1.884062,-2.986891,2.198678,8.366622,-3.765984,0.845381,-5.044692],[-9.180885,-6.886938,-6.941466,-9.914729,-6.679968,-4.952864,5.707555,9.399367,-9.455600,-6.249953,-5.799136],[6.658978,4.261411,7.723487,4.908429,3.537860,5.415623,-1.175696,-4.514697,-5.632318,4.827842,-4.429504],[2.686293,-2.213999,-2.367677,7.373049,-3.842359,-4.490443,-4.481817,-6.636583,6.571016,6.574881,8.268375],[7.938858,-6.144563,5.061966,-5.401366,-7.203762,3.626508,2.015845,-9.319796,-7.586507,7.210590,-4.967382],[-5.626081,-0.933739,-3.068182,-6.849834,4.380933,-7.628292,9.882740,9.745795,6.774748,-6.198098,-6.463411],[-9.664026,-6.342387,2.852005,-3.290812,6.220810,-3.073538,-6.883620,9.853453,4.327843,-5.993586,-2.009394],[1.592028,4.100379,3.718915,4.496530,-7.699270,-1.899004,-8.566297,-7.115613,-8.085142,4.069081,9.187423],[6.055440,8.105483,-8.638731,-7.421275,3.047128,-7.568485,6.092503,-7.602525,-8.380657,-2.116997,5.634825],[-8.767302,9.354222,5.647964,-2.703504,0.297791,8.747287,-1.144093,-1.207262,-4.778722,-2.231776,2.842474],[7.933129,-8.746105,-5.077122,-1.291134,5.486780,3.980847,4.941094,5.029758,-4.320264,-5.272386,7.070767],[4.050719,8.705404,-6.128812,-5.789879,9.092704,1.078501,0.523884,4.808767,-3.684151,5.144470,6.699325]]], dtype = "float64")#candidate|4958|(4, 14, 11)|const|float64
uop_4959 = relay.rsqrt(const_4958.astype('float64')) # shape=(4, 14, 11)
output = relay.Tuple([uop_4959,])
output2 = relay.Tuple([uop_4959,])
func_4967 = relay.Function([], output)
mod['func_4967'] = func_4967
mod = relay.transform.InferType()(mod)
mutated_mod['func_4967'] = func_4967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4967_call = mutated_mod.get_global_var('func_4967')
call_4968 = func_4967_call()
output = call_4968
func_4969 = relay.Function([], output)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_4995 = relay.TupleGetItem(func_2388_call(), 0)
call_4996 = relay.TupleGetItem(func_2390_call(), 0)
output = call_4995
output2 = call_4996
func_5000 = relay.Function([], output)
mod['func_5000'] = func_5000
mod = relay.transform.InferType()(mod)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5000_call = mutated_mod.get_global_var('func_5000')
call_5001 = func_5000_call()
output = call_5001
func_5002 = relay.Function([], output)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5008 = relay.var("var_5008", dtype = "float64", shape = (8, 7, 7))#candidate|5008|(8, 7, 7)|var|float64
uop_5009 = relay.cos(var_5008.astype('float64')) # shape=(8, 7, 7)
output = relay.Tuple([uop_5009,])
output2 = relay.Tuple([uop_5009,])
func_5016 = relay.Function([var_5008,], output)
mod['func_5016'] = func_5016
mod = relay.transform.InferType()(mod)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5017 = relay.var("var_5017", dtype = "float64", shape = (8, 7, 7))#candidate|5017|(8, 7, 7)|var|float64
func_5016_call = mutated_mod.get_global_var('func_5016')
call_5018 = func_5016_call(var_5017)
output = call_5018
func_5019 = relay.Function([var_5017], output)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_5048 = relay.TupleGetItem(func_3209_call(), 0)
call_5049 = relay.TupleGetItem(func_3211_call(), 0)
var_5056 = relay.var("var_5056", dtype = "bool", shape = (13, 13, 16))#candidate|5056|(13, 13, 16)|var|bool
bop_5057 = relay.less_equal(call_5048.astype('bool'), relay.reshape(var_5056.astype('bool'), relay.shape_of(call_5048))) # shape=(13, 13, 16)
bop_5060 = relay.less_equal(call_5049.astype('bool'), relay.reshape(var_5056.astype('bool'), relay.shape_of(call_5049))) # shape=(13, 13, 16)
func_1458_call = mod.get_global_var('func_1458')
func_1461_call = mutated_mod.get_global_var('func_1461')
call_5069 = relay.TupleGetItem(func_1458_call(relay.reshape(bop_5057.astype('uint32'), [2704,])), 1)
call_5070 = relay.TupleGetItem(func_1461_call(relay.reshape(bop_5057.astype('uint32'), [2704,])), 1)
uop_5080 = relay.rsqrt(call_5069.astype('float32')) # shape=(7, 6, 4)
uop_5082 = relay.rsqrt(call_5070.astype('float32')) # shape=(7, 6, 4)
output = relay.Tuple([bop_5057,uop_5080,])
output2 = relay.Tuple([bop_5060,uop_5082,])
func_5093 = relay.Function([var_5056,], output)
mod['func_5093'] = func_5093
mod = relay.transform.InferType()(mod)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5094 = relay.var("var_5094", dtype = "bool", shape = (13, 13, 16))#candidate|5094|(13, 13, 16)|var|bool
func_5093_call = mutated_mod.get_global_var('func_5093')
call_5095 = func_5093_call(var_5094)
output = call_5095
func_5096 = relay.Function([var_5094], output)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_5123 = relay.TupleGetItem(func_2388_call(), 0)
call_5124 = relay.TupleGetItem(func_2390_call(), 0)
var_5125 = relay.var("var_5125", dtype = "bool", shape = (4, 3, 15))#candidate|5125|(4, 3, 15)|var|bool
bop_5126 = relay.bitwise_xor(call_5123.astype('int64'), relay.reshape(var_5125.astype('int64'), relay.shape_of(call_5123))) # shape=(4, 3, 15)
bop_5129 = relay.bitwise_xor(call_5124.astype('int64'), relay.reshape(var_5125.astype('int64'), relay.shape_of(call_5124))) # shape=(4, 3, 15)
output = relay.Tuple([bop_5126,])
output2 = relay.Tuple([bop_5129,])
func_5132 = relay.Function([var_5125,], output)
mod['func_5132'] = func_5132
mod = relay.transform.InferType()(mod)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5133 = relay.var("var_5133", dtype = "bool", shape = (4, 3, 15))#candidate|5133|(4, 3, 15)|var|bool
func_5132_call = mutated_mod.get_global_var('func_5132')
call_5134 = func_5132_call(var_5133)
output = call_5134
func_5135 = relay.Function([var_5133], output)
mutated_mod['func_5135'] = func_5135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_5221 = func_750_call()
call_5222 = func_750_call()
output = relay.Tuple([call_5221,])
output2 = relay.Tuple([call_5222,])
func_5227 = relay.Function([], output)
mod['func_5227'] = func_5227
mod = relay.transform.InferType()(mod)
output = func_5227()
func_5228 = relay.Function([], output)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4147_call = mod.get_global_var('func_4147')
func_4149_call = mutated_mod.get_global_var('func_4149')
call_5231 = relay.TupleGetItem(func_4147_call(), 1)
call_5232 = relay.TupleGetItem(func_4149_call(), 1)
func_4617_call = mod.get_global_var('func_4617')
func_4619_call = mutated_mod.get_global_var('func_4619')
const_5243 = relay.const([-4.541473,-6.385559,7.430301,-6.946388,-2.235404,4.056004,-5.364081,-7.532605,8.647129,-3.057351,-0.368308,4.400436,8.913312,-6.413317,-9.345619,-7.998271,-4.489314,-9.148314,-6.540075,9.864039,1.603301,-9.659459,-2.971853,7.487384,-9.840514,2.282338,9.483397,3.680817,4.813906,-3.558061,-8.530663,4.198376,8.697741,-7.837898,-8.495507,-7.363541,-1.991751,-3.044419,4.355751,7.540415,9.149697,9.288584,9.219407,6.337399,-1.982861,-9.936291,-3.806713,1.527982,6.377802,-3.712011,-9.878041,7.504882,1.779035,3.680301,5.107709,-0.884269,0.825199,-8.359589,-5.126927,8.836265,8.790574,4.206712,9.637534,0.833336,-1.744647,8.794168,8.984012,-2.374292,-0.320447,7.324124,-1.830750,-7.544058,8.004453,-6.792405,4.899810,-8.102497,0.063502,-8.200377,4.408361,2.766006,7.034748,-9.549139,-3.199609,9.499778,-0.481465,-6.344216,-5.495224,-9.495294,0.905105,-3.297665,-0.299225,5.686296,-6.989087,5.094846,-1.612996,-1.629417,7.845223,-7.413509,2.903799,-5.943548,-5.693415,-1.983260,1.317264,6.110333,0.756344,7.548100,-0.192259,8.357546,8.909039,-6.315023,3.619755,1.304380,5.756782,-3.859684,-6.649554,-5.656587,-7.540761,3.798033,6.090747,-1.709649,-3.480970,5.188588,9.474835,-5.835180,2.587441,-0.623334,3.638429,6.090336,1.377363,2.511826,-4.463219,-5.032098,-9.534071,-1.459515,-9.001553,-1.606951,9.077300,-8.675870,-6.685590,1.827005,4.464468,-2.303335,0.792349,-9.193644,-5.349179,-5.567180,0.800914,1.383284,8.545057,-7.311559,-9.068045,-7.724287,-0.645906,-3.856144,6.507476,-4.202844,3.060057,5.918089,-3.624373,8.651255,6.743534,6.465938,9.293324,-7.390161,-1.114540,-6.938238,5.667582,-7.977422,5.011004,-8.591979,-4.232407,-3.911979,-9.576061,1.274630,0.716911,6.051260,-1.441603,2.879313,1.775960,-1.313031,-8.649177,-0.498887,-1.174189,0.500807,-1.430918,-4.017293,-9.812351,-6.578910,9.502127,1.072828,2.085298,0.014933,0.730247,9.477815,2.358014,8.408361,-6.317007,0.349418,-2.773212,2.742695,9.130296,-8.621333,-8.776720,-2.730741,-5.322742,-9.398978,-5.682332,7.266543,-5.200834,-8.187649,0.812427,-9.004328,6.323902,-3.809742,-9.680573,-8.601515,0.888816,-8.166774,-6.466360,8.022925,-7.512846,-0.804493,-6.185466,1.656809,-3.916688,-4.253626,0.804604,2.901162,-0.934928,-2.627428,0.096250,-6.129621,4.591218,-2.456905,7.261654,-3.288154,4.497678,-0.787710,3.085215,8.025521,5.934251,0.307219,-0.363038,-6.642978,-4.669704,3.037844,4.850552,-0.324005,-4.261068,-5.709571,2.182978,-6.411212,5.977719,-5.655935,-5.194104,-3.601326,1.579147,-4.335060,5.669483,-3.440641,5.765790,1.259864,-6.630282,-4.357491,7.742605,-3.490067,6.791652,8.145413,-1.900946,0.250118,7.031454,-0.298526,2.026852,-8.093517,0.238630,-0.635310,5.891756,-1.168320,-9.619210,-8.895958,7.107557,-1.873386,1.797238,-3.248648,6.897078,-5.413976,5.818031,3.224077,8.853712,5.106409,-7.591609,-6.287716,-8.496627,4.224960,0.041177,-6.177271,9.810791,8.413468,-8.114685,-6.670991,-7.341368,0.039020,8.655321,-5.696630,-6.954209,-8.797225,-5.232036,-1.020773,0.064330,4.251001,-1.950776,6.361801,-5.647551,-9.630169,-3.893350,-8.516838,-6.832743,0.245427,-2.006238,-0.137063,7.840073,2.257489,2.903555,-0.754173,-3.705468,2.752495,2.761320,-8.601179,-2.355646,5.005932,9.656386,7.603773,5.813888,1.920373,-7.520540,-7.108021,-5.117870,4.854716,-5.345058,-3.297473,4.464338,4.120118,3.488287,-3.364577,-8.834488,-0.037645,8.110218,1.736626,-4.218397,-5.221856,1.274558,1.339756,1.962520,9.899858,-1.847172,-6.329948,-6.891863,0.235285,5.097080,9.346040,0.376717,3.632928,0.245790,7.432822,6.883431,-1.908694,-7.229186,6.190608,3.126430,6.129531,-1.998724,2.668311,9.148699,-9.062715,5.472159,4.493064,-7.842698,1.712927,0.766767,0.105197,8.066095,5.958677,9.413708,0.154811,-6.500773,5.459752,-3.527217,4.050478,4.227163,-4.782694,7.226229,5.722308,-7.503928,7.737511,4.041408,-5.124669,-5.243328,-6.971183,-6.235499,-9.672982,0.556919,-9.225907,4.805799,3.328226,3.326514,9.372930,6.397158,-0.392693,7.324632,-0.936243,0.116893,3.222470,-9.697209,9.400591,5.453124,6.655560,4.495559,-3.548524,8.835422,4.067425,0.872095,3.456013,3.635068,-5.373911,1.337729,2.999155,-5.902295,9.096242,5.679917,4.302054,-4.085986,2.726213,-1.703475,-3.515799,9.876485,5.144308,-4.460496,-5.020631,-8.129321,7.453418,9.322295,-9.761389,6.116601,-3.462023,0.892371,-7.808733,0.635665,6.133255,5.969488,2.516756,-5.111171,-1.615040,-7.059681,-8.227134,0.128657,-1.915988,1.334388,-2.599254,-6.429657,0.649832,0.710429,-5.200269,2.881122,-0.056867,8.954921,4.473352,-5.191317,1.506122,-4.834321,-2.660558,9.247595,-0.468910,9.156180,7.063928,-0.619946,2.306994,-9.245427,-1.592249,-9.706979,9.677775,-0.468478,0.206088,-2.010883,2.685903,-5.255611,-7.131953,9.775890,-2.986726,-0.240131,-8.133043,-6.387102,-9.945697,9.162543,-8.557311,9.417466,-6.986207,6.665844,2.429698,-5.517505,-3.917576,-1.268054,-7.422059,-9.164440,-9.950794,-9.045650,6.425821,0.864970,-8.576601,-7.768397,-9.207191,-1.889151,5.746218,-5.732111,7.635430,-3.679300,0.935120,-9.898640,-7.878588,7.035059,1.311942,7.905821,-6.721458,-4.984895,-7.673352,-6.966791,5.149252,2.085489,-7.484467,4.253737,-2.545120,5.880850,-6.275222,1.888250,-0.267489,5.068266,-5.548683,-1.325808,3.362508,4.666724,7.200469,-1.596453,-7.813342,-0.986896,7.054938,-5.326318,4.013306,-9.413014,-0.768170,-7.459761,-2.625238,-9.584195,-1.107036,3.659663,-0.715819,9.670275,-3.348519,-5.562772,2.625029,6.688496,-4.261422,-8.495357,-5.002635,2.683988,-4.882756,1.884544,8.748518,-2.954890,7.661425,-8.770519,-1.755265,6.869113,1.752705,-3.355495,-0.129783,-9.887589,3.233578,-2.671520,6.552979,-7.569688,2.984696,-6.673202,-5.537860,0.023697,-8.687452,9.073815,9.204665,-2.631050,-5.911281,-9.309645,-8.088213,2.718084,9.650046,6.485307,7.956497,2.526160,-6.612368,1.082494,-4.906312,-0.243116,-4.249760,3.396682,-2.330620,5.472603,-9.192844,-1.955509,-9.729520,5.459547,3.000698,-3.321047,-4.340301,-9.728538,9.535704,7.243404,-2.927929,-7.197639,7.527047,-4.240268,2.800680,-4.699111,7.613606,6.332142,-6.218268,-4.042173,3.681047,-9.258259,-4.286405,-6.964937,5.502751,3.938420,8.059153,-3.481782,9.090380,1.122998,-5.006645,5.659693,-8.481703,6.320300,6.672101,-6.300151,-9.023145,-5.358496,2.043869,-8.201340,2.614848,-6.937506,-5.073041,7.109284,-2.856651,-4.389112,8.284635,-1.309766,-5.690197,-2.003593,5.896463,2.354107,-2.257590,-3.880600,-5.409956,-8.841611,-0.116489,3.832592,1.616640,6.098039,6.100346,5.048801,2.669872,-7.845291,6.915656,5.613853,9.318725,6.358362,-6.395992,-2.476306,-1.914393,-8.037197,7.662516,7.647837,6.368302,-0.982006,5.176456,1.675340,-4.712644,-8.418790,-3.995162,-1.357901,-8.902432,4.429109,-2.118258,-1.128989,-6.295049,1.979407,-3.101304,1.277696,6.377257,-7.371040,7.603797,7.322748,9.319363,8.015587,2.126565,3.946526,0.033355,1.862700,-5.897887,7.264013,-4.530044,0.385489,3.433642,-2.276506,-4.263234,5.060139,-5.772733,4.376625,3.517233,-5.671704,5.666676,-9.887240,-3.106021,-9.477460,0.375871], dtype = "float32")#candidate|5243|(720,)|const|float32
call_5242 = relay.TupleGetItem(func_4617_call(relay.reshape(const_5243.astype('float32'), [720,])), 0)
call_5244 = relay.TupleGetItem(func_4619_call(relay.reshape(const_5243.astype('float32'), [720,])), 0)
func_4816_call = mod.get_global_var('func_4816')
func_4818_call = mutated_mod.get_global_var('func_4818')
call_5247 = relay.TupleGetItem(func_4816_call(), 1)
call_5248 = relay.TupleGetItem(func_4818_call(), 1)
uop_5253 = relay.asinh(call_5247.astype('float64')) # shape=(1352, 2)
uop_5255 = relay.asinh(call_5248.astype('float64')) # shape=(1352, 2)
bop_5257 = relay.less_equal(uop_5253.astype('bool'), relay.reshape(call_5247.astype('bool'), relay.shape_of(uop_5253))) # shape=(1352, 2)
bop_5260 = relay.less_equal(uop_5255.astype('bool'), relay.reshape(call_5248.astype('bool'), relay.shape_of(uop_5255))) # shape=(1352, 2)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_5263 = func_750_call()
call_5264 = func_750_call()
bop_5267 = relay.multiply(bop_5257.astype('uint16'), relay.reshape(uop_5253.astype('uint16'), relay.shape_of(bop_5257))) # shape=(1352, 2)
bop_5270 = relay.multiply(bop_5260.astype('uint16'), relay.reshape(uop_5255.astype('uint16'), relay.shape_of(bop_5260))) # shape=(1352, 2)
uop_5280 = relay.asin(call_5247.astype('float32')) # shape=(1352, 2)
uop_5282 = relay.asin(call_5248.astype('float32')) # shape=(1352, 2)
const_5285 = relay.const([[True,False],[True,False],[True,True],[False,False],[False,False],[False,True],[True,True],[True,True],[False,False],[False,True],[False,False],[False,True],[False,False],[False,True],[True,True],[True,False],[True,True],[True,False],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[False,True],[False,False],[True,False],[True,False],[False,False],[True,True],[True,False],[False,False],[True,True],[False,False],[False,False],[True,False],[True,True],[False,True],[True,True],[True,True],[False,True],[True,False],[True,True],[False,True],[True,True],[True,False],[True,True],[False,True],[False,False],[True,False],[False,False],[True,True],[True,True],[False,True],[False,False],[False,False],[True,False],[False,True],[True,False],[False,False],[True,True],[False,True],[False,False],[False,False],[False,True],[True,False],[True,False],[False,False],[True,False],[True,True],[False,False],[True,False],[False,False],[True,True],[False,True],[True,False],[True,True],[True,True],[True,True],[False,True],[False,True],[True,True],[True,True],[True,False],[False,True],[True,False],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[False,False],[True,True],[True,True],[False,True],[False,True],[False,True],[True,True],[True,True],[False,False],[True,True],[True,False],[False,True],[True,False],[False,False],[True,True],[False,True],[True,False],[False,False],[True,False],[True,False],[False,True],[True,True],[True,True],[False,True],[True,True],[True,False],[True,True],[False,True],[False,False],[True,True],[False,False],[True,True],[False,True],[False,True],[False,True],[True,False],[True,True],[True,False],[False,True],[True,True],[False,False],[False,False],[False,False],[True,False],[False,False],[True,False],[False,False],[False,False],[False,False],[False,False],[True,True],[False,False],[False,True],[False,False],[False,False],[False,False],[False,False],[False,False],[False,True],[False,False],[False,False],[True,False],[False,True],[True,False],[True,True],[False,False],[False,False],[True,True],[True,True],[True,True],[True,True],[False,False],[True,False],[False,True],[False,True],[False,False],[True,True],[False,True],[False,True],[False,True],[False,False],[True,True],[True,False],[False,False],[False,True],[False,True],[True,False],[True,False],[False,False],[False,False],[True,False],[False,False],[True,True],[True,True],[False,True],[False,True],[False,True],[False,True],[False,False],[True,False],[True,True],[True,False],[True,True],[True,False],[True,True],[False,False],[True,True],[False,False],[False,True],[True,False],[True,True],[True,True],[False,True],[False,False],[True,True],[False,True],[True,False],[True,False],[True,False],[False,False],[True,True],[False,False],[False,False],[False,False],[True,True],[False,False],[False,False],[True,True],[True,True],[True,True],[True,False],[False,False],[False,True],[False,True],[False,True],[True,True],[False,True],[False,False],[True,False],[False,False],[False,False],[True,False],[False,False],[True,False],[False,True],[True,True],[True,True],[True,True],[False,True],[False,False],[False,True],[False,False],[False,False],[False,True],[False,False],[True,False],[True,False],[True,True],[True,False],[True,True],[True,False],[False,False],[True,True],[True,False],[False,True],[False,True],[False,False],[True,False],[False,False],[True,True],[False,True],[True,True],[True,False],[True,False],[True,False],[True,False],[True,True],[True,False],[False,False],[False,True],[False,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,False],[True,True],[True,False],[True,False],[True,True],[False,False],[False,True],[False,True],[False,True],[False,False],[False,False],[False,True],[True,True],[True,True],[False,False],[True,True],[True,False],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[False,False],[True,False],[False,True],[False,False],[True,False],[False,False],[True,False],[True,False],[True,False],[False,False],[False,True],[False,False],[True,True],[False,True],[False,False],[False,True],[False,True],[True,False],[True,False],[True,False],[False,True],[False,True],[True,True],[True,False],[True,True],[False,True],[True,False],[True,False],[True,False],[False,False],[False,False],[True,True],[True,False],[True,False],[False,False],[False,False],[True,True],[True,False],[False,False],[True,False],[False,True],[True,True],[False,True],[True,True],[True,True],[True,True],[True,False],[False,True],[True,False],[True,True],[False,False],[False,False],[True,True],[False,True],[False,True],[True,False],[True,True],[True,True],[False,False],[False,True],[False,False],[False,True],[False,True],[False,True],[True,False],[True,True],[False,True],[True,True],[False,False],[False,False],[True,False],[False,False],[True,True],[True,True],[False,False],[False,False],[False,False],[True,False],[True,False],[False,False],[False,True],[False,False],[False,True],[True,False],[True,True],[True,True],[True,True],[True,False],[True,True],[True,True],[True,True],[True,True],[False,False],[True,True],[False,True],[False,False],[False,False],[False,False],[True,True],[True,True],[True,False],[False,False],[True,True],[True,False],[False,False],[True,True],[False,False],[False,False],[True,False],[True,True],[True,True],[False,False],[True,False],[False,True],[False,True],[False,True],[True,False],[True,True],[True,False],[True,False],[True,True],[True,True],[True,False],[True,False],[False,False],[False,True],[False,False],[True,True],[False,False],[False,False],[True,False],[True,True],[False,True],[False,False],[True,True],[False,False],[False,True],[True,False],[True,False],[False,True],[True,False],[True,True],[False,False],[False,True],[False,True],[True,False],[True,True],[True,False],[False,True],[False,True],[False,False],[False,True],[True,True],[True,True],[False,True],[False,True],[False,True],[False,False],[False,False],[True,False],[True,True],[False,True],[False,True],[True,False],[False,True],[True,True],[True,True],[False,False],[True,True],[True,True],[False,False],[False,False],[True,False],[True,True],[False,False],[False,False],[True,False],[True,True],[False,False],[True,False],[True,True],[True,False],[False,True],[False,True],[False,False],[False,True],[False,False],[True,True],[False,False],[True,True],[True,True],[True,False],[True,False],[False,True],[False,True],[False,True],[False,True],[True,True],[True,True],[False,True],[True,True],[False,True],[True,False],[True,False],[False,False],[True,True],[True,False],[False,False],[False,False],[False,False],[True,False],[True,False],[True,False],[True,False],[True,True],[False,True],[False,False],[False,False],[False,True],[False,True],[True,True],[False,False],[True,False],[True,True],[False,True],[True,False],[True,False],[False,False],[False,True],[True,True],[False,True],[False,True],[True,True],[True,False],[False,True],[True,False],[False,True],[False,True],[False,True],[False,False],[False,True],[False,True],[True,False],[False,True],[True,True],[False,False],[False,True],[True,True],[False,False],[True,False],[True,False],[False,True],[False,True],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[True,True],[True,True],[True,True],[False,False],[True,False],[False,False],[True,True],[True,True],[False,True],[False,False],[True,True],[False,True],[False,True],[False,False],[True,False],[True,False],[True,False],[True,False],[False,False],[False,True],[False,False],[True,True],[True,False],[True,True],[True,True],[True,False],[False,True],[False,False],[False,False],[True,True],[False,False],[True,True],[False,False],[True,False],[False,True],[True,True],[True,True],[False,False],[True,True],[True,True],[True,False],[True,True],[True,True],[False,True],[False,True],[False,False],[True,True],[False,True],[False,True],[False,False],[True,True],[True,False],[False,False],[True,False],[True,False],[True,False],[True,False],[False,False],[False,False],[False,False],[True,False],[False,False],[False,False],[True,False],[False,True],[False,True],[True,False],[True,True],[False,False],[True,True],[True,False],[False,False],[True,False],[False,True],[False,False],[True,True],[True,True],[True,True],[False,False],[True,False],[False,True],[True,True],[True,False],[False,True],[True,False],[True,False],[False,True],[False,True],[True,False],[False,True],[True,True],[False,False],[True,True],[True,True],[True,False],[True,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,True],[False,True],[True,True],[False,True],[False,True],[True,False],[True,False],[True,False],[True,True],[False,False],[False,True],[False,True],[False,False],[False,True],[False,True],[False,True],[False,True],[True,True],[False,True],[True,True],[False,False],[True,True],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[True,True],[False,True],[False,False],[True,True],[True,False],[False,False],[True,True],[True,True],[True,False],[False,True],[True,True],[False,True],[False,True],[False,False],[False,True],[True,False],[True,True],[True,True],[False,False],[False,True],[False,True],[True,True],[False,False],[False,False],[True,False],[True,False],[True,False],[False,True],[True,False],[False,False],[True,True],[False,False],[True,True],[False,True],[False,False],[False,False],[True,False],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[False,True],[False,False],[True,True],[True,True],[False,False],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[True,False],[False,False],[True,False],[True,True],[False,True],[False,False],[True,True],[True,False],[False,True],[True,False],[True,False],[True,False],[False,False],[False,False],[True,False],[True,False],[False,True],[True,True],[True,False],[False,True],[True,False],[True,False],[True,False],[False,True],[False,True],[False,True],[False,True],[True,False],[True,True],[True,False],[True,False],[False,True],[True,True],[True,False],[True,True],[True,False],[False,False],[False,True],[False,True],[True,False],[False,True],[False,False],[False,True],[True,True],[True,False],[True,False],[False,True],[False,True],[True,True],[True,False],[False,False],[True,False],[False,True],[False,False],[False,True],[True,True],[False,True],[True,False],[False,False],[True,True],[False,False],[False,False],[True,False],[True,False],[True,False],[True,True],[False,False],[False,False],[True,False],[True,False],[True,False],[True,True],[True,False],[True,True],[True,False],[True,True],[False,True],[False,True],[True,True],[False,False],[False,True],[True,False],[True,True],[True,False],[True,False],[False,False],[False,True],[True,True],[False,False],[False,True],[False,True],[False,False],[False,False],[False,True],[False,False],[True,False],[True,True],[False,False],[False,True],[False,False],[True,True],[False,True],[False,False],[False,False],[False,True],[True,True],[False,False],[True,True],[False,True],[False,False],[True,False],[False,False],[True,True],[False,True],[False,True],[True,False],[False,False],[True,False],[False,False],[True,False],[True,False],[True,True],[False,True],[False,True],[False,True],[True,False],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[True,True],[False,True],[True,True],[True,False],[False,True],[True,False],[False,False],[True,False],[True,True],[False,False],[True,True],[False,False],[False,True],[True,False],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[True,False],[False,True],[False,False],[True,True],[True,False],[True,False],[True,True],[False,True],[True,True],[True,True],[False,True],[True,False],[True,True],[True,True],[True,False],[True,False],[True,False],[True,True],[False,True],[True,True],[True,False],[True,False],[False,True],[True,True],[False,False],[False,True],[True,True],[True,False],[True,True],[False,False],[True,True],[True,False],[True,False],[False,True],[True,True],[False,False],[True,True],[False,True],[False,True],[False,True],[True,True],[False,False],[False,True],[True,True],[False,True],[False,False],[False,True],[False,False],[True,False],[True,True],[True,False],[True,True],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[False,False],[False,True],[True,False],[True,False],[True,True],[False,False],[False,True],[True,True],[True,True],[False,True],[True,True],[True,False],[False,False],[True,False],[True,True],[False,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,True],[False,True],[False,False],[False,True],[True,True],[False,False],[False,False],[False,True],[False,True],[False,False],[False,False],[True,True],[True,True],[False,False],[True,True],[True,True],[False,True],[False,True],[True,True],[False,False],[False,False],[False,False],[False,False],[False,False],[True,False],[False,False],[False,True],[True,True],[True,True],[True,False],[True,False],[True,True],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[True,True],[False,False],[False,True],[False,False],[False,True],[False,True],[True,True],[True,False],[False,False],[True,False],[False,False],[True,False],[False,True],[True,True],[False,True],[True,True],[False,False],[True,False],[True,False],[True,True],[True,True],[True,False],[False,False],[False,False],[True,False],[False,True],[False,False],[True,False],[True,True],[True,True],[False,True],[False,False],[True,False],[True,False],[False,False],[True,True],[True,False],[False,True],[True,False],[False,False],[False,False],[True,False],[False,False],[True,False],[True,False],[True,True],[True,False],[False,False],[False,True],[False,False],[True,False],[True,False],[False,True],[True,True],[False,True],[True,False],[False,False],[True,False],[True,False],[False,False],[False,False],[False,False],[False,False],[False,False],[True,True],[False,False],[True,True],[False,True],[True,True],[True,True],[True,False],[True,True],[True,False],[True,False],[False,False],[False,True],[False,False],[True,False],[False,True],[False,True],[False,False],[True,True],[True,True],[True,False],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[False,False],[True,False],[False,False],[False,True],[True,False],[False,False],[False,False],[True,False],[True,False],[False,False],[False,False],[False,True],[True,True],[False,False],[False,False],[False,False],[False,True],[True,False],[True,True],[True,True],[False,False],[True,False],[False,False],[False,True],[True,True],[False,True],[True,False],[False,False],[False,True],[False,False],[True,True],[False,True],[False,True],[True,False],[True,True],[True,True],[True,False],[True,True],[False,False],[False,True],[True,False],[True,False],[True,True],[False,True],[False,False],[True,True],[True,True],[False,False],[True,False],[False,False],[True,True],[True,False],[True,False],[True,True],[False,True],[True,True],[False,False],[True,True],[True,True],[False,False],[False,True],[True,True],[False,False],[True,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,True],[True,False],[True,True],[False,False],[False,True],[False,False],[True,False],[True,True],[True,False],[True,True],[True,True],[False,True],[False,True],[True,True],[False,False],[True,True],[False,False],[True,True],[False,True],[True,False],[True,True],[True,False],[True,False],[True,True],[False,False],[False,False],[True,False],[True,True],[True,False],[False,False],[True,True],[True,True],[False,True],[False,False],[False,True],[False,True],[True,True],[False,False],[False,True],[True,False],[False,True],[False,True],[False,True],[True,True],[False,True],[True,True],[True,True],[False,True],[False,False],[True,False],[True,True],[False,False],[True,False],[True,True],[True,False],[True,True],[False,False],[True,False],[True,False],[True,True],[True,True],[False,False],[False,False],[True,False],[False,False],[False,False],[False,False],[False,True],[False,True],[False,False],[False,True],[True,False],[True,False],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[False,False],[False,True],[False,False],[True,False],[True,False],[False,True],[False,False],[True,True],[False,False],[False,False],[True,False],[True,False],[False,False],[True,True],[False,False],[True,True],[False,True],[False,False],[False,True],[True,True],[True,True],[True,True],[True,False],[True,True],[False,True],[True,False],[True,False],[False,False],[False,True],[True,True],[True,False],[False,False],[True,False],[False,True],[True,True],[True,True],[False,False],[False,True],[False,True],[False,False],[False,True],[False,False],[False,False],[False,False],[True,True],[True,True],[True,True],[True,False],[True,True],[False,True],[True,True],[False,True],[True,False],[True,True],[False,True],[True,False],[True,False],[False,True],[False,False],[True,False],[True,True],[True,False],[False,False],[True,False],[True,True],[True,False],[False,True],[False,True],[True,True],[False,True],[False,True],[False,True],[True,False],[False,False],[True,False],[False,False],[True,True],[True,True],[True,False],[True,False],[True,False],[True,True],[True,True],[False,True],[False,False],[False,False],[True,False],[False,True],[True,False],[True,False],[False,True],[False,True],[False,True],[True,True],[True,False],[True,False],[True,False],[True,False],[True,True],[True,True],[True,False],[False,True]], dtype = "bool")#candidate|5285|(1352, 2)|const|bool
bop_5286 = relay.greater(bop_5257.astype('bool'), relay.reshape(const_5285.astype('bool'), relay.shape_of(bop_5257))) # shape=(1352, 2)
bop_5289 = relay.greater(bop_5260.astype('bool'), relay.reshape(const_5285.astype('bool'), relay.shape_of(bop_5260))) # shape=(1352, 2)
output = relay.Tuple([call_5231,call_5242,const_5243,call_5263,bop_5267,uop_5280,bop_5286,])
output2 = relay.Tuple([call_5232,call_5244,const_5243,call_5264,bop_5270,uop_5282,bop_5289,])
func_5293 = relay.Function([], output)
mod['func_5293'] = func_5293
mod = relay.transform.InferType()(mod)
output = func_5293()
func_5294 = relay.Function([], output)
mutated_mod['func_5294'] = func_5294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2039_call = mod.get_global_var('func_2039')
func_2040_call = mutated_mod.get_global_var('func_2040')
call_5318 = relay.TupleGetItem(func_2039_call(), 1)
call_5319 = relay.TupleGetItem(func_2040_call(), 1)
output = call_5318
output2 = call_5319
func_5323 = relay.Function([], output)
mod['func_5323'] = func_5323
mod = relay.transform.InferType()(mod)
output = func_5323()
func_5324 = relay.Function([], output)
mutated_mod['func_5324'] = func_5324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_5373 = relay.TupleGetItem(func_934_call(), 0)
call_5374 = relay.TupleGetItem(func_936_call(), 0)
func_1181_call = mod.get_global_var('func_1181')
func_1182_call = mutated_mod.get_global_var('func_1182')
call_5375 = relay.TupleGetItem(func_1181_call(), 0)
call_5376 = relay.TupleGetItem(func_1182_call(), 0)
func_3798_call = mod.get_global_var('func_3798')
func_3799_call = mutated_mod.get_global_var('func_3799')
call_5378 = relay.TupleGetItem(func_3798_call(), 2)
call_5379 = relay.TupleGetItem(func_3799_call(), 2)
output = relay.Tuple([call_5373,call_5375,call_5378,])
output2 = relay.Tuple([call_5374,call_5376,call_5379,])
func_5384 = relay.Function([], output)
mod['func_5384'] = func_5384
mod = relay.transform.InferType()(mod)
mutated_mod['func_5384'] = func_5384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5384_call = mutated_mod.get_global_var('func_5384')
call_5385 = func_5384_call()
output = call_5385
func_5386 = relay.Function([], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_5387 = relay.TupleGetItem(func_1673_call(), 0)
call_5388 = relay.TupleGetItem(func_1675_call(), 0)
output = call_5387
output2 = call_5388
func_5389 = relay.Function([], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5390 = func_5389_call()
output = call_5390
func_5391 = relay.Function([], output)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2996_call = mod.get_global_var('func_2996')
func_2997_call = mutated_mod.get_global_var('func_2997')
call_5396 = relay.TupleGetItem(func_2996_call(), 1)
call_5397 = relay.TupleGetItem(func_2997_call(), 1)
output = call_5396
output2 = call_5397
func_5402 = relay.Function([], output)
mod['func_5402'] = func_5402
mod = relay.transform.InferType()(mod)
output = func_5402()
func_5403 = relay.Function([], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_750_call = mod.get_global_var('func_750')
func_752_call = mutated_mod.get_global_var('func_752')
call_5412 = func_750_call()
call_5413 = func_750_call()
func_4321_call = mod.get_global_var('func_4321')
func_4322_call = mutated_mod.get_global_var('func_4322')
call_5420 = relay.TupleGetItem(func_4321_call(), 0)
call_5421 = relay.TupleGetItem(func_4322_call(), 0)
output = relay.Tuple([call_5412,call_5420,])
output2 = relay.Tuple([call_5413,call_5421,])
func_5445 = relay.Function([], output)
mod['func_5445'] = func_5445
mod = relay.transform.InferType()(mod)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mutated_mod.get_global_var('func_5445')
call_5446 = func_5445_call()
output = call_5446
func_5447 = relay.Function([], output)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_5507 = relay.TupleGetItem(func_1916_call(), 0)
call_5508 = relay.TupleGetItem(func_1918_call(), 0)
func_3226_call = mod.get_global_var('func_3226')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_5512 = relay.TupleGetItem(func_3226_call(), 0)
call_5513 = relay.TupleGetItem(func_3227_call(), 0)
func_5093_call = mod.get_global_var('func_5093')
func_5096_call = mutated_mod.get_global_var('func_5096')
const_5531 = relay.const([[False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,True],[False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True],[False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True],[False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False],[False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True],[False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,True],[True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False],[False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True],[True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True],[True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True],[False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True],[False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False],[True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False],[False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False],[True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True],[True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False],[True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False],[True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False],[False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True],[True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False],[True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False],[False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True],[True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False],[False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False],[False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True],[False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True],[True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True],[True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True],[True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True],[True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False],[True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True],[True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False],[False,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True],[False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True],[True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False],[True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False],[False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True],[True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False],[True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True],[True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True],[True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True],[True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True],[True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False],[False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False],[False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True],[False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False],[True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True],[False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False],[True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False],[False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False],[True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True],[True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True],[False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True],[True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False],[True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,True],[False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False],[True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False],[True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True],[False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False],[True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False],[False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True],[False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False],[False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False],[False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False],[False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True],[True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False],[False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False],[False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True],[False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True],[True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True],[True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True],[True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True],[False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True],[False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False],[False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False],[True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True],[False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True],[False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False],[True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True],[False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False],[True,False,False,True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True],[True,True,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True],[True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True],[False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False],[True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True],[False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False],[True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False],[True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True],[False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True],[True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False],[True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False],[True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False],[True,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True],[True,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False],[True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False],[False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False],[False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False],[True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False],[True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False],[False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False],[False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False],[False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,True],[False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True],[True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False]], dtype = "bool")#candidate|5531|(104, 26)|const|bool
call_5530 = relay.TupleGetItem(func_5093_call(relay.reshape(const_5531.astype('bool'), [13, 13, 16])), 0)
call_5532 = relay.TupleGetItem(func_5096_call(relay.reshape(const_5531.astype('bool'), [13, 13, 16])), 0)
output = relay.Tuple([call_5507,call_5512,call_5530,const_5531,])
output2 = relay.Tuple([call_5508,call_5513,call_5532,const_5531,])
func_5542 = relay.Function([], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
mutated_mod['func_5542'] = func_5542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5542_call = mutated_mod.get_global_var('func_5542')
call_5543 = func_5542_call()
output = call_5543
func_5544 = relay.Function([], output)
mutated_mod['func_5544'] = func_5544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1181_call = mod.get_global_var('func_1181')
func_1182_call = mutated_mod.get_global_var('func_1182')
call_5559 = relay.TupleGetItem(func_1181_call(), 0)
call_5560 = relay.TupleGetItem(func_1182_call(), 0)
func_4967_call = mod.get_global_var('func_4967')
func_4969_call = mutated_mod.get_global_var('func_4969')
call_5563 = relay.TupleGetItem(func_4967_call(), 0)
call_5564 = relay.TupleGetItem(func_4969_call(), 0)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_5565 = relay.TupleGetItem(func_1116_call(), 5)
call_5566 = relay.TupleGetItem(func_1118_call(), 5)
func_4266_call = mod.get_global_var('func_4266')
func_4268_call = mutated_mod.get_global_var('func_4268')
var_5571 = relay.var("var_5571", dtype = "uint32", shape = (2704,))#candidate|5571|(2704,)|var|uint32
call_5570 = func_4266_call(relay.reshape(var_5571.astype('uint32'), [2704,]))
call_5572 = func_4266_call(relay.reshape(var_5571.astype('uint32'), [2704,]))
func_4714_call = mod.get_global_var('func_4714')
func_4715_call = mutated_mod.get_global_var('func_4715')
call_5575 = func_4714_call()
call_5576 = func_4714_call()
output = relay.Tuple([call_5559,call_5563,call_5565,call_5570,var_5571,call_5575,])
output2 = relay.Tuple([call_5560,call_5564,call_5566,call_5572,var_5571,call_5576,])
func_5580 = relay.Function([var_5571,], output)
mod['func_5580'] = func_5580
mod = relay.transform.InferType()(mod)
var_5581 = relay.var("var_5581", dtype = "uint32", shape = (2704,))#candidate|5581|(2704,)|var|uint32
output = func_5580(var_5581)
func_5582 = relay.Function([var_5581], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_5626 = relay.TupleGetItem(func_934_call(), 0)
call_5627 = relay.TupleGetItem(func_936_call(), 0)
func_4564_call = mod.get_global_var('func_4564')
func_4568_call = mutated_mod.get_global_var('func_4568')
const_5638 = relay.const([[7,-3,-10,-7,5,6,-8,-1,1,7,-8,5,7,4,3,-8,-3,-3,9,4,8,8,-8,-6,-6,3,5,-8,6,-6,5,9,-6,-10,2,9,-7,7,5,-4,-8,9,-3,-6,6,-7,-6,10,9,-9,8,-5,4,-8,-5,3,9,7,-8,4,4,6,10,-4,-6,1,10,8,-6,-4,-1,6,-9,-6,5,1,-1,-9,-3,-9,-7,-4,6,10,10,-5,-3,3,-4,-8,-8,6,8,-2,2,1,-4,4,-6,-4,-2,-7,1,-6,-6,-2,5,-6,5,1,9,-7,-6,-3,-7,9,7,4,-6,3,-7,8,4,5,10,-7,10,2,-6,10,-5,5,-5,-1,1,4,-8,-4,-4,2,-6,5,-6,4,5,5,5,1,1,10,6,2,6,-8,6,4,-10,10,7,8,-9,9,3,5,-4,5,-9,-5,4,5,5,4,10,1,-9,9,-2,-4,-10,8,-4,-7,-4,9,-8,-10,8,8,5,5,-10,3,-5,-8,6,3,1,-4,-4,2,9,-5,-3,5,6,-5,-6,-10,-5,-8,-6,-10,2,-1,9,10,-7,-7,10,2,3,2,-4,-2,1,-2,4,-6,-8,-3,-2,8,-8,2,6,3,9,-1,-8,-4,7,-7,-7,-7,10,3,3,-3,-6,-8,-9,4,-6,3,-1,4,4,-9,2,6,-8,-6,-10,-1,-6,-9,-1,4,-9,1,7,-6,-5,-10,4,3,-6,-2,-9,-5,3,-1,6,-2,-6,4,6,-2,6,-2,-9,2,-3,2,-9,-1,10,7,-9,4,1,7,-8,2,1,6,-8,-3,-3,5,3,-6,-7,-2,1,-2,-4,4,5,5,10,6,-2,-9,6,-6,-1,6,5,-4,4,3,-4,9,10,5,-7,-8,-2,3,2,-8,4,-10,-2,7,2,-3,4,-6,-7,-6,4,3,-2,3,-8,6,-7,-10,3,-6,-7,1,-2,-8,10,3,-10,9,3,-6,4,-10,10,-9,-7,-8,-3,-6,6,2,-9,-9,1,1,-9,-4,8,-6,-4,-1,-10,-5,-10,8,4,1,6,2,-9,3,7,2,3,-4,-3,-10,-6,5,-6,1,2,-3,3,8,-10,1,-8,5,-1,10,5,-8,-5,-4,-6,10,8,-10,1,-4,-9,-8,-8,-10,-3,-6,8,-7,6,3,6,-4,7,7,2,-10,-6,7,3,-4,8,3,1,1,3,3,-7,6,-1,-3,4,-1,4,-2,-7,-3,6,3,8,-7,5,-2,7,6,9,-8,-5,-3,8,7,-2,2,-8,5,6,9,-2,-6,7,4,3,10,2,8,1,-7,8,10,4,-4,-9,-4,5,9,-3,-9,6,6,-5,2,-2,8,10,-7,-7,-7,-5,-9,-2,-4,5,1,5,1,-2,7,-4,5,4,8,-5,10,-7,-2,-9,-2,-10,-6,-10,6,-2,7,7,-9,6,-4,4,2,-5,8,1,-8,5,-5,-5,-5,5,2,-4,2,-2,-10,2,-8,6,-3,-8,-7,7,5,6,-10,4,10,-6,-9,-3,-3,-2,-4,-6,7,-7,6,10,-7,-5,-5,2,-8,-2,-5,9,1,-8,2,-9,-2,3,2,1,-10,-10,-7,4,9,4,2,1,-7,-8,4,5,-6,6,-4,9,3,-10,-2,-8,2,-2,-7,8,3,-10,5,-5,-6,1,7,-5,-1,-3,-1,1,-2,8,7,3,3,-7,9,-1,2,-6,-4,-9,7,-8,-10,-4,6,-2,-1,3,8,-4,3,-5,-9,-1,-3,-10,10,-3,-8,5,-10,-7,3,4,-9,2,6,-6,-8,10,7,4,-7,-10,-3,-9,3,3,-5,9,9,-5,-9,-2,9,-10,1,4,10,-4,-8,-7,8,-6,9,6,-7,5,-1,-2,-8,-7,-6,-8,6,1,-5,-6,8,-6,9,7,1,1,6,4,-8,4,3,-2,3,2,2,3,-10,-9,8,-7,5,-5,-3,-6,2,-5,-5,4,2,8,-6,4,-7,-6,-6,-4,-1,3,-7,-5,10,-6,8,-4,5,-4,2,-8,-10,4,5,8,-8,-8,-9,-6,2,5,9,10,-1,7,-2,-2,7,-10,-5,-8,9,-8,10,9,-5,4,6,-9,10,-10,-1,5,-10,2,-5,-8,10,-3,1,4,6,9,-4,9,-4,-6,-3,3,-8,-1,-7,7,9,10,2,4,-4,2,-1,3,1,-10,-2,2,-2,-5,3,6,4,2,2,3,-10,5,5,-9,-9,3,-6,5,7,6,-4,4,10,3,3,-7,3,6,-2,-6,-8,4,1,1,-1,-10,9,4,-9,1,-5,4,-2,5,7,-5,-10,8,-8,1,-6,-4,-2,-6,5,2,-8,7,-9,2,-4,1,-3,5,-8,1,-7,8,-5,-10,-4,2,1,9,-4,7,7,-1,-9,-4,-5,10,3,-1,4,1,-6,-7,-2,8,-7,-5,-3,7,-5,8,9,1,-7,10,-4,7,-4,8,3,4,-10,-6,-5,6,7,1,-3,-8,5,-2,-9,-10,5,10,5,-10,3,2,1,2,-4,-2,7,9,-7,2,2,-8,-3,5,-10,-5,-10,-3,-4,9,-7,-7,2,-8,-7,-5,-6,7,9,7,8,-4,-10,-1,3,-4,-2,5,-9,3,3,6,-10,9,5,-3,-10,1,-6,-4]], dtype = "int16")#candidate|5638|(1, 1001)|const|int16
call_5637 = func_4564_call(relay.reshape(const_5638.astype('int16'), [7, 11, 13]), relay.reshape(const_5638.astype('int16'), [7, 11, 13]), )
call_5639 = func_4564_call(relay.reshape(const_5638.astype('int16'), [7, 11, 13]), relay.reshape(const_5638.astype('int16'), [7, 11, 13]), )
output = relay.Tuple([call_5626,call_5637,const_5638,])
output2 = relay.Tuple([call_5627,call_5639,const_5638,])
func_5646 = relay.Function([], output)
mod['func_5646'] = func_5646
mod = relay.transform.InferType()(mod)
output = func_5646()
func_5647 = relay.Function([], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5384_call = mod.get_global_var('func_5384')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5669 = relay.TupleGetItem(func_5384_call(), 1)
call_5670 = relay.TupleGetItem(func_5386_call(), 1)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
call_5684 = relay.TupleGetItem(func_871_call(relay.reshape(call_5669.astype('float64'), [15, 2, 14])), 1)
call_5685 = relay.TupleGetItem(func_874_call(relay.reshape(call_5669.astype('float64'), [15, 2, 14])), 1)
output = relay.Tuple([call_5669,call_5684,])
output2 = relay.Tuple([call_5670,call_5685,])
func_5696 = relay.Function([], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
output = func_5696()
func_5697 = relay.Function([], output)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_5706 = relay.TupleGetItem(func_2356_call(), 0)
call_5707 = relay.TupleGetItem(func_2358_call(), 0)
uop_5747 = relay.acos(call_5706.astype('float32')) # shape=(15, 2, 14)
uop_5749 = relay.acos(call_5707.astype('float32')) # shape=(15, 2, 14)
output = uop_5747
output2 = uop_5749
func_5760 = relay.Function([], output)
mod['func_5760'] = func_5760
mod = relay.transform.InferType()(mod)
output = func_5760()
func_5761 = relay.Function([], output)
mutated_mod['func_5761'] = func_5761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4321_call = mod.get_global_var('func_4321')
func_4322_call = mutated_mod.get_global_var('func_4322')
call_5799 = relay.TupleGetItem(func_4321_call(), 1)
call_5800 = relay.TupleGetItem(func_4322_call(), 1)
func_4816_call = mod.get_global_var('func_4816')
func_4818_call = mutated_mod.get_global_var('func_4818')
call_5813 = relay.TupleGetItem(func_4816_call(), 0)
call_5814 = relay.TupleGetItem(func_4818_call(), 0)
func_2937_call = mod.get_global_var('func_2937')
func_2940_call = mutated_mod.get_global_var('func_2940')
var_5817 = relay.var("var_5817", dtype = "float32", shape = (1, 720))#candidate|5817|(1, 720)|var|float32
call_5816 = relay.TupleGetItem(func_2937_call(relay.reshape(var_5817.astype('float32'), [5, 9, 16])), 1)
call_5818 = relay.TupleGetItem(func_2940_call(relay.reshape(var_5817.astype('float32'), [5, 9, 16])), 1)
var_5820 = relay.var("var_5820", dtype = "float32", shape = (2, 720))#candidate|5820|(2, 720)|var|float32
bop_5821 = relay.logical_xor(var_5817.astype('uint32'), var_5820.astype('uint32')) # shape=(2, 720)
uop_5828 = relay.tan(var_5817.astype('float32')) # shape=(1, 720)
uop_5830 = relay.asin(uop_5828.astype('float64')) # shape=(1, 720)
bop_5833 = relay.divide(uop_5830.astype('float32'), var_5820.astype('float32')) # shape=(2, 720)
func_3878_call = mod.get_global_var('func_3878')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_5837 = relay.TupleGetItem(func_3878_call(), 0)
call_5838 = relay.TupleGetItem(func_3880_call(), 0)
output = relay.Tuple([call_5799,call_5813,call_5816,bop_5821,bop_5833,call_5837,])
output2 = relay.Tuple([call_5800,call_5814,call_5818,bop_5821,bop_5833,call_5838,])
func_5847 = relay.Function([var_5817,var_5820,], output)
mod['func_5847'] = func_5847
mod = relay.transform.InferType()(mod)
var_5848 = relay.var("var_5848", dtype = "float32", shape = (1, 720))#candidate|5848|(1, 720)|var|float32
var_5849 = relay.var("var_5849", dtype = "float32", shape = (2, 720))#candidate|5849|(2, 720)|var|float32
output = func_5847(var_5848,var_5849,)
func_5850 = relay.Function([var_5848,var_5849,], output)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2865_call = mod.get_global_var('func_2865')
func_2867_call = mutated_mod.get_global_var('func_2867')
call_5885 = relay.TupleGetItem(func_2865_call(), 3)
call_5886 = relay.TupleGetItem(func_2867_call(), 3)
uop_5890 = relay.cos(call_5885.astype('float32')) # shape=(4, 3, 15)
uop_5892 = relay.cos(call_5886.astype('float32')) # shape=(4, 3, 15)
uop_5893 = relay.rsqrt(uop_5890.astype('float32')) # shape=(4, 3, 15)
uop_5895 = relay.rsqrt(uop_5892.astype('float32')) # shape=(4, 3, 15)
output = uop_5893
output2 = uop_5895
func_5897 = relay.Function([], output)
mod['func_5897'] = func_5897
mod = relay.transform.InferType()(mod)
output = func_5897()
func_5898 = relay.Function([], output)
mutated_mod['func_5898'] = func_5898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5915 = relay.var("var_5915", dtype = "float32", shape = ())#candidate|5915|()|var|float32
var_5916 = relay.var("var_5916", dtype = "float32", shape = (6, 10, 12))#candidate|5916|(6, 10, 12)|var|float32
bop_5917 = relay.power(var_5915.astype('float32'), var_5916.astype('float32')) # shape=(6, 10, 12)
var_5938 = relay.var("var_5938", dtype = "float32", shape = (6, 10, 12))#candidate|5938|(6, 10, 12)|var|float32
bop_5939 = relay.logical_xor(bop_5917.astype('int32'), relay.reshape(var_5938.astype('int32'), relay.shape_of(bop_5917))) # shape=(6, 10, 12)
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_5970 = relay.TupleGetItem(func_4670_call(), 0)
call_5971 = relay.TupleGetItem(func_4671_call(), 0)
output = relay.Tuple([bop_5939,call_5970,])
output2 = relay.Tuple([bop_5939,call_5971,])
func_5973 = relay.Function([var_5915,var_5916,var_5938,], output)
mod['func_5973'] = func_5973
mod = relay.transform.InferType()(mod)
mutated_mod['func_5973'] = func_5973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5973_call = mutated_mod.get_global_var('func_5973')
var_5975 = relay.var("var_5975", dtype = "float32", shape = ())#candidate|5975|()|var|float32
var_5976 = relay.var("var_5976", dtype = "float32", shape = (6, 10, 12))#candidate|5976|(6, 10, 12)|var|float32
var_5977 = relay.var("var_5977", dtype = "float32", shape = (6, 10, 12))#candidate|5977|(6, 10, 12)|var|float32
call_5974 = func_5973_call(var_5975,var_5976,var_5977,)
output = call_5974
func_5978 = relay.Function([var_5975,var_5976,var_5977,], output)
mutated_mod['func_5978'] = func_5978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_6004 = func_886_call()
call_6005 = func_886_call()
output = call_6004
output2 = call_6005
func_6010 = relay.Function([], output)
mod['func_6010'] = func_6010
mod = relay.transform.InferType()(mod)
output = func_6010()
func_6011 = relay.Function([], output)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6173 = relay.var("var_6173", dtype = "int8", shape = (4, 2, 13))#candidate|6173|(4, 2, 13)|var|int8
var_6174 = relay.var("var_6174", dtype = "int8", shape = (4, 2, 13))#candidate|6174|(4, 2, 13)|var|int8
bop_6175 = relay.maximum(var_6173.astype('int8'), relay.reshape(var_6174.astype('int8'), relay.shape_of(var_6173))) # shape=(4, 2, 13)
func_3472_call = mod.get_global_var('func_3472')
func_3474_call = mutated_mod.get_global_var('func_3474')
var_6183 = relay.var("var_6183", dtype = "float32", shape = (13, 14))#candidate|6183|(13, 14)|var|float32
call_6182 = relay.TupleGetItem(func_3472_call(relay.reshape(var_6183.astype('float32'), [2, 13, 7])), 0)
call_6184 = relay.TupleGetItem(func_3474_call(relay.reshape(var_6183.astype('float32'), [2, 13, 7])), 0)
func_5760_call = mod.get_global_var('func_5760')
func_5761_call = mutated_mod.get_global_var('func_5761')
call_6185 = func_5760_call()
call_6186 = func_5760_call()
output = relay.Tuple([bop_6175,call_6182,var_6183,call_6185,])
output2 = relay.Tuple([bop_6175,call_6184,var_6183,call_6186,])
func_6193 = relay.Function([var_6173,var_6174,var_6183,], output)
mod['func_6193'] = func_6193
mod = relay.transform.InferType()(mod)
var_6194 = relay.var("var_6194", dtype = "int8", shape = (4, 2, 13))#candidate|6194|(4, 2, 13)|var|int8
var_6195 = relay.var("var_6195", dtype = "int8", shape = (4, 2, 13))#candidate|6195|(4, 2, 13)|var|int8
var_6196 = relay.var("var_6196", dtype = "float32", shape = (13, 14))#candidate|6196|(13, 14)|var|float32
output = func_6193(var_6194,var_6195,var_6196,)
func_6197 = relay.Function([var_6194,var_6195,var_6196,], output)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4086_call = mutated_mod.get_global_var('func_4086')
call_6207 = func_4084_call()
call_6208 = func_4084_call()
func_1458_call = mod.get_global_var('func_1458')
func_1461_call = mutated_mod.get_global_var('func_1461')
var_6214 = relay.var("var_6214", dtype = "uint32", shape = (2704,))#candidate|6214|(2704,)|var|uint32
call_6213 = relay.TupleGetItem(func_1458_call(relay.reshape(var_6214.astype('uint32'), [2704,])), 4)
call_6215 = relay.TupleGetItem(func_1461_call(relay.reshape(var_6214.astype('uint32'), [2704,])), 4)
func_2996_call = mod.get_global_var('func_2996')
func_2997_call = mutated_mod.get_global_var('func_2997')
call_6233 = relay.TupleGetItem(func_2996_call(), 0)
call_6234 = relay.TupleGetItem(func_2997_call(), 0)
const_6248 = relay.const([4,-9,-7,1,-1,6,-6,-2,1,-7,-6,-6,-6,6,9,-5,10,-6,-2,-6,-5,8,3,2,-7,6,-4,6,3,7,8,6,5,-8,-1,9,7,7,-9,-1,8,10,2,-3,-9,-8,4,6,-10,-8,9,8,7,5,6,2,5,-7,-9,-3,-5,-7,7,-8,-10,-9,-4,-6,-4,-6,-6,6,4,8,6,-4,-2,-7,8,7,2,8,5,-6,2,-9,2,-10,9,-10,7,5,6,-8,9,-2,-3,4,4,-7,2,5,-3,10,2,8,-5,1,-7,6,6,9,-8,-7,3,-1,10,-2,-2,5,-4,3,6,-9,-3,-2,-2,-8,4,-5,9,-5,-3,-2,-9,8,9,-1,5,1,6,1,-4,2,-6,4,-4,-4,6,-1,2,6,-1,6,8,6,-1,-6,5,3,-5,-7,-8,6,-7,-6,-4,-8,-9,1,-4,-5,-5,9,7,1,9,-2,9,8,5,-2,-6,6,-7,-7,5,3,1,9,-4,-1,-8,-7,-1,10,-10,-4,3,4,-8,-8,-10,-2,4,10,-2,8,-2,-7,-3,8,9,10,4,1,-2,5,-1,5,-10,1,4,4,-8,10,9,-3,-1,-2,6,7,4,1,8,-9,1,-2,3,2,8,3,9,8,10,5,3,5,3,-3,4,-3,3,-9,-3,8,-4,-1,-6,4,-8,1,2,-9,5,-8,-5,3,6,6,2,1,4,8,-10,7,3,9,5,-10,9,7,-9,-2,4,-6,-2,2,-8,8,-5,6,-3,3,5,8,9,10,8,5,-1,-8,-8,1,-5,6,3,7,-8,-4,2,-7,-9,-1,8,-9,-6,2,-9,10,1,3,-7,-10,1,-8,-5,-5,1,-1,3,7,-9,3,-3,4,-8,-8,7,2,9,2,2,-10,5,-1,5,10,-9,4,6,6,2,1,-9,7,2,3,9,8,-7,2,8,-6,5,-9,-7,-8,-6,-10,3,-4,-9,8,2,-1,4,-3,-7,9,10,-4,-10,9,1,-10,9,9,3,-5,3,6,-1,-10,-9,-2,-7,-7,1,3,-5,8,9,1,5,8,4,-7,-4,-5,8,-1,6,-1,4,-10,-1,3,4,-3,-2,8,7,-2,6,2,-7,-8,3,-1,-7,5,9,-7,2,3,3,1,-9,-8,10,-9,-7,1,10,6,-3,5,-9,-5,4,-6,-1,4,-9,7,6,-8,4,-2,3,2,-9,8,-9,2,10,8,-4,-3,9,-2,-5,6,10,-4,6,-9,-2,4,9,-5,-3,-2,9,9,3,-1,-2,8,6,4,-7,-8,9,2,-9,7,-2,-10,4,9,9,-6,8,2,3,8,1,10,-2,-8,-9,-5,-5,2,-2,-7,-2,1,-6,-5,-1,2,3,-1,-2,5,5,-4,3,-2,-8,8,-3,-1,-4,-1,-1,6,-2,-8,8,-10,3,5,-2,3,-5,10,-9,-8,-9,-7,-1,6,-2,2,2,-2,5,-3,6,7,-6,-1,9,-8,-10,9,-10,9,-3,-1,-2,-10,-2,-4,-8,2,-7,10,4,-4,-5,-10,-10,-6,-9,-8,1,7,-10,4,3,1,-8,-6,9,9,-5,-8,7,9,-8,-6,-4,4,6,-1,1,9,-3,4,-6,-5,-3,7,-6,3,-3,2,-3,-1,-4,6,-4,-7,-9,-10,-5,6,-9,-7,1,-8,-10,-4,-9,-10,9,8,-10,-4,-7,3,-1,-1,4,-5,9,-9,-6,-2,10,-9,9,-4,-4,9,5,7,-1,-8,6,9,-9,-4,3,-1,1,4,9,8,-8,-7,9,9,-2,-4,-10,-4,3,-5,6,-9,-8,-7,-3,-10,-4,-4,-3,-2,7,1,-10,6,5,-10,-9,-9,2,-6,3,-7,-7,9,-1,-2,8,6,10,-1,-7,-7,-10,5,-2,-8,-9,3,6,-5,-2,5,-10,-10,-7,5,-2,10,1,-5,-10,-10,-9,-4,-5,-2,-6,9,-10,-6,9,-8,-8,-2,-6,1,-1,-5,-2,-7,-10,3,6,1,10,10,3,-8,-8,7,9,-2,-9,-5,7,-7,9,-2,2,10,3,9,9,6,-10,-1,-10,-3,9,-9,8,-3,6,3,-1,9,-4,-9,-6,10,7,-6,4,8,-7,-4,-5,-1,4,-8,-8,6,-5,-5,-9,8,-6,-5,-4,-8,1,6,-8,-6,3,-7,1,5,10,5,-4,-7,7,-3,-6,4,2,3,6,-4,3,2,-7,-10,-6,8,9,-2,-7,9,-7,-3,4,-1,-9,-1,-6,-8,1,-10,2,1,-3,-10,-10,-8,-4,6,-8,8,1,10,6,2,6,6,-2,-9,-2,9,-8,6,7,9,10,5,-1,-3,-2,4,-9,-8,-9,-7,-6,10,-1,-9,10,-6,-7,4,-5,-3,-9,7,-7,-8,1,-7,2,-4,-4,3,-1,4,9,6,-4,3,7,-1,4,-3,7,-6,7,-9,-3,5,-3,-3,-9,-8,-9,-6,2,5,9,3,-7,-2,-6,-7,7,-2,3,3,-6,4,-4,4,-10,-2,-6,-6,3,-9,-2,10,10,-10,-9,4,-5,-3,-1,-5,-7,-3,-1,9,-10,4,7,-3,-10,-10,5,-6,-4,-9,7,7,2,-8,10,8,-8,-4,-10,9,-8,-7,-3,-7,-2,-4,-2,-3,-3,-7,10,5,-10,2,5,-8,-2,-10,-9,-4,3,2,-10,-10,-9,8,-2,7,3,4,3,-3,-10,-2,9,-2,3,-10,8,-8,6,-6,2,-2,5,4,-9,-2,1,-8,9,5,-3,-7,-4,7,2,8,-9,8,10,1,-1,8,9,4,-5,10,-5,-8,1,-9,-1,6,9,3,5,9,-10,-10,3,5,-7,6,3,1,9,8,8,9,7,9,7,10,6,-6,-5,9,-9,2,-8,7,-4,9,-8,-1,2,9,-9,9,-10,-4,-6,-5,-7,7,3,-7,1,-8,4,-6,-1,-6,-5,-4,9,-7,3,2,-10,-7,4,-9,10,4,1,10,6,-2,10,5,6,-6,6,8,6,-1,1,-3,-9,5,-8,2,1,-4,-10,2,-3,-6,6,-6,-1,-3,9,3,5,-10,3,7,-5,-8,-2,-2,1,-3,-2,-9,6,-7,-10,-4,10,-9,3,-8,-9,-5,1,5,5,-8,8,4,-1,-10,-3,7,-8,6,-4,-2,-3,5,4,5,-9,8,4,1,3,8,6,7,2,7,-10,-9,6,8,-4,-9,7,10,7,9,-5,-6,-10,6,8,6,-2,10,6,6,-2,3,-2,3,6,-1,-6,-1,10,8,1,-6,8,-1,-6,6,-3,7,4,5,1,1,3,-4,3,10,6,9,2,10,-8,-5,-7,-6,-2,3,7,1,-9,-2,8,8,-10,10,6,9,8,5,-6,-10,-4,-4,-8,2,9,-2,9,-3,-5,-10,-4,-7,5,-10,4,1,-3,-10,9,10,7,-7,10,-3,2,7,4,-8,7,10,-6,-1,4,-1,3,-1,3,-7,5,-9,-5,2,-2,6,6,3,7,-4,3,-3,7,9,1,5,7,-2,-2,-2,5,-6,-6,-7,-2,1,6,-4,-8,-3,8,-7,-1,7,-5,10,9,-3,4,5,8,-1,-1,-7,7,-10,-5,-10,-5,-10,10,-10,-5,-1,2,-4,5,7,2,7,-4,-4,3,7,-5,-10,-6,-1,5,1,1,10,-3,-1,10,2,-6,-7,2,-9,-1,-1,3,-10,-5,6,6,-1,-4,4,2,-2,-4,-9,10,-3,-1,10,6,2,10,-9,-5,-5,-5,-5,-5,-7,-3,-5,-4,-6,7,-9,-5,-6,1,1,-6,-7,5,7,-8,-9,1,-5,-6,-2,-8,-8,1,10,-9,-8,-7,-5,-6,4,-9,6,-1,-6,4,2,8,9,-3,-3,-9,-7,-5,-3,-9,6,2,-9,-3,-1,-5,-2,-2,6,9,-6,-8,9,7,6,-8,5,4,-2,3,5,4,-2,-8,2,8,8,-2,1,6,7,-8,4,8,-9,7,10,-3,10,3,-1,-1,-6,5,-4,3,-6,4,4,-6,-5,-9,8,9,5,1,2,-4,-5,-4,-1,10,9,-7,-8,-8,-6,9,-10,2,-8,-3,5,9,-8,8,-1,7,4,4,5,-4,2,-4,2,10,-1,10,-10,-7,-3,8,-5,5,8,-1,5,5,1,-10,7,2,-2,-5,3,-3,-7,10,7,-3,-7,8,-10,-7,-4,3,-6,-9,-7,-1,6,-7,-6,-7,4,-7,-4,5,10,6,-1,-3,-4,-3,9,-1,9,-8,-9,-7,-6,-6,-1,-6,-4,-3,3,-2,-2,-8,-1,6,9,5,10,10,6,8,-10,-6,-9,1,-7,-7,-10,-10,3,2,-9,-9,7,-4,-7,8,-7,4,-5,5,8,1,-6,10,6,-1,-9,3,-10,-8,-9,6,5,1,-5,-2,-10,-2,5,-6,-3,5,7,-7,4,6,4,-9,-4,-6,9,-3,-2,-5,-6,-7,10,-9,9,4,1,-7,3,-3,6,-7,9,4,-4,10,2,7,1,-8,9,-4,-5,-5,-6,-7,-8,-9,-4,-10,-4,6,-10,-9,-8,1,-1,10,-3,4,3,-2,-6,10,6,6,-4,7,7,3,4,-5,-9,1,-9,-9,-6,5,-4,2,9,-9,2,5,1,-7,5,10,-8,-4,-7,1,-8,7,-5,9,7,-7,3,2,-3,8,2,10,10,1,10,1,10,7,7,1,5,4,-1,1,7,10,7,1,5,-3,4,3,3,1,-8,-5,10,9,8,-5,-9,-4,6,-4,-5,-8,-4,-3,2,7,6,-3,3,-8,-3,-6,8,1,-3,-7,-3,-7,5,-3,4,9,4,-8,7,10,9,-4,-3,-10,-9,5,3,10,2,7,5,-7,9,8,1,5,3,6,-4,2,-5,-7,9,-8,-1,8,-10,-7,-10,2,4,-3,7,-2,-8,-2,1,3,7,10,6,-5,3,-5,10,6,5,10,-9,-2,-5,1,-6,-6,6,2,-2,-8,3,-7,1,7,-3,9,-9,8,-7,-2,5,-7,-3,-3,-8,-1,-4,-5,4,-2,-1,8,2,-8,6,2,-9,2,-10,9,8,10,-2,7,-9,4,10,1,-9,2,8,-9,-5,-9,8,4,9,7,10,-7,1,-10,3,-4,10,-10,-2,-7,3,-1,-3,-8,8,4,-9,9,-2,2,2,-10,2,3,10,-10,-6,-6,5,-1,-9,-2,-6,8,-2,3,-6,6,-2,3,-9,-7,-5,3,-6,4,-9,-2,9,-5,10,-3,-1,-6,10,-9,2,1,8,7,10,9,-10,-6,-3,-10,-1,1,3,-6,-7,-1,10,6,8,2,-7,-7,4,-7,-6,-1,-1,-10,-2,-9,-3,9,2,1,-3,10,-6,6,-10,-8,-10,-5,1,-7,-2,-3,-7,-8,2,-1,-4,2,7,9,-2,6,-8,-5,6,4,-8,-1,-1,-6,-8,-5,-9,2,8,-5,-10,4,-2,7,-1,-4,-9,-4,5,3,-6,-6,7,10,9,8,6,7,1,6,6,10,6,-6,-3,-6,7,-5,10,-10,1,-10,9,5,-3,1,10,7,-5,-8,-1,-1,-6,1,-4,-7,-10,-3,6,7,10,1,9,-7,2,-5,2,9,4,6,-4,2,9,1,5,5,5,-5,-5,-9,10,9,-1,1,-10,-3,9,-8,-3,4,-8,3,-8,-10,-1,-9,4,-4,-6,-10,2,-3,-1,1,-10,3,-7,-1,-7,7,9,-10,4,10,10,8,-7,5,10,3,-5,7,-5,9,9,-1,-2,3,-6,9,5,8,-8,10,-2,-9,-1,1,5,9,5,-2,10,6,8,-2,3,-7,-4,1,1,-5,8,-2,5,7,-9,1,-4,-7,-10,-7,6,6,-4,6,-8,-10,6,-9,3,-4,-5,-4,-10,1,-8,5,-6,-6,9,-6,2,5,-9,-2,2,-5,-9,-6,-9,-10,-7,3,-7,4,10,5,7,3,-8,-8,-8,-7,-3,-5,2,-9,8,2,2,1,5,5,8,8,10,-6,9,5,-8,4,4,9,-7,9,-7,1,-8,4,4,-4,5,5,5,6,8,5,5,-6,-5,4,-5,3,-3,1,-6,4,-5,9,-8,-5,-7,8,4,-6,7,2,5,9,-2,-7,-5,4,-1,2,-8,-6,9,8,-8,-4,-4,-8,2,9,8,-4,1,7,-9,-3,-7,-3,-5,-10,3,9,-10,6,-6,6,3,9,8,-5,-4,-3,9,9,-4,6,-5,-7,-2,9,-8,-2,-6,2,-6,8,-7,-2,8,-10,-2,-2,-1,-4,-1,-1,-9,-9,-3,-9,-10,-2,10,5,7,2,10,-6,2,4,-4,-10,7,8,-10,10,3,-9,5,-3,-7,-2,7,-10,8,2,-8,-5,-2,4,9,4,-5,7,6,10,2,-4,10,10,9,-1,4,3,-8,-8,10,-9,6,5,-5,-9,9,-8,9,-8,-1,9,-5,-1,-9,2,-4,6,-6,-4,-8,-7,-8,5,-6,8,-1,3,9,-1,-5,-2,5,-9,-1,-1,5,5,5,-1,-10,-6,-7,-9,5,7,-4,-8,-6,-7,1,-5,7,10,-7,-3,-3,10,-10,-6,-8,4,1,8,-1,4,4,-8,7,-3,2,-3,-6,5,-1,-10,6,-10,8,-6,-6,2,-8,-1,2,-1,-1,-9,7,-5,-9,-9,1,-1,9,9,-8,5,1,2,1,8,-8,-1,5,5,-10,-6,-2,-1,6,6,1,1,9,-7,-7,-4,-4,-9,-2,-10,9,-5,-6,-3,6,-8,1,9,1,2,-1,-2,-3,3,-7,10,-10,6,1,10,-9,4,-6,-1,1,6,10,-8,-2,10,7,-5,7,4,-3,7,3,-3,8,-7,-9,-2,2,2,4,-3,-4,-7,10,-8,6,-4,-9,-9,2,6,10,10,10,5,-6,5,9,-10,5,-1,-5,1,5,-1,-5,-10,-6,8,2,2,-4,-7,-10,1,5,6,8,-6,-7,-1,5,-1,10,1,-3,-2,-9,-9,6,-4,-1,-10,8,-3,4,-1,-3,-2,-10,-7,-5,1,7,-4,-9,3,1,-2,-1,5,-8,4,7,-8,-10,-1,5,-2,-3,5,-7,3,-4,-6,-9,-2,-7,2,-4,-2,-5,-1,6,-3,2,-10,-6,6,7,9,-2,5,-7,3,7,-8,-8,-3,4,3,1,4,4,1,3,9,9,5,3,7,-3,2,-6,8,-8], dtype = "uint32")#candidate|6248|(2704,)|const|uint32
bop_6249 = relay.add(var_6214.astype('float64'), relay.reshape(const_6248.astype('float64'), relay.shape_of(var_6214))) # shape=(2704,)
output = relay.Tuple([call_6207,call_6213,call_6233,bop_6249,])
output2 = relay.Tuple([call_6208,call_6215,call_6234,bop_6249,])
func_6257 = relay.Function([var_6214,], output)
mod['func_6257'] = func_6257
mod = relay.transform.InferType()(mod)
var_6258 = relay.var("var_6258", dtype = "uint32", shape = (2704,))#candidate|6258|(2704,)|var|uint32
output = func_6257(var_6258)
func_6259 = relay.Function([var_6258], output)
mutated_mod['func_6259'] = func_6259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4102_call = mod.get_global_var('func_4102')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_6277 = func_4102_call()
call_6278 = func_4102_call()
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_6284 = relay.TupleGetItem(func_1673_call(), 0)
call_6285 = relay.TupleGetItem(func_1675_call(), 0)
func_1458_call = mod.get_global_var('func_1458')
func_1461_call = mutated_mod.get_global_var('func_1461')
const_6300 = relay.const([-5,-5,-10,1,2,-1,9,7,3,5,-8,3,10,6,-9,3,1,-4,-6,4,6,10,-9,1,3,-4,-3,-4,6,-10,-8,-10,10,9,3,-3,-1,6,-10,-9,-7,3,1,2,9,4,-4,8,10,-9,1,2,4,1,7,8,5,3,-1,3,6,7,2,5,3,5,-7,-5,6,-7,-5,6,-6,-6,-5,-7,6,2,-1,10,-2,-5,1,-2,-5,-2,1,8,9,4,-5,-5,-7,1,-6,10,-5,9,-7,4,9,2,-4,-9,6,-4,-6,-2,-8,1,-3,5,7,5,-6,-8,5,-7,10,-1,-9,9,-6,8,-5,9,1,-7,8,4,3,9,10,6,-9,-10,1,-4,10,8,-3,3,-1,-4,-2,-2,-8,2,6,2,2,6,1,10,-3,9,7,2,2,-4,-2,-1,7,2,1,1,-6,-9,-6,-10,-7,-9,-1,-10,-4,-9,-3,1,-6,-5,7,-4,-4,1,10,-1,8,-3,10,2,-10,-2,-5,-6,8,-10,9,9,7,-3,1,5,-3,-10,2,9,-5,6,6,3,-3,-10,-6,-6,-10,9,-3,3,-3,-9,7,6,8,1,3,-9,-6,-1,-7,5,-3,9,9,2,-4,-6,8,2,5,4,-9,6,-10,-8,-3,-4,-7,2,6,-5,-4,3,4,-2,1,9,-8,5,-4,-7,-8,-3,6,1,9,4,9,-7,-1,2,-6,-3,-7,-2,-3,-8,-10,8,-6,7,4,-1,7,6,9,-1,8,-9,2,8,8,10,8,-3,-6,-2,-2,-5,-2,-10,-10,6,-4,-5,-6,-6,10,2,6,6,8,4,2,-2,4,-5,-2,2,-8,4,1,-8,-8,1,-8,5,7,-9,-3,-3,-2,1,1,-9,2,3,-5,-6,-1,-6,6,-8,-3,9,-9,-10,1,4,5,-9,9,10,-2,9,-3,-6,-4,-1,-3,-2,-3,1,4,-5,1,7,7,5,4,-3,-7,-8,-3,-10,1,9,4,7,-7,8,8,9,-3,-5,6,-7,-8,6,6,-10,-5,1,8,9,2,-5,-3,6,-7,-6,-10,8,8,9,-7,10,-7,3,-9,-3,10,-3,-10,-2,1,-10,10,9,1,1,7,1,-2,-1,9,-4,-10,5,-8,-7,-4,10,-6,-10,-6,-4,-4,-9,3,9,-4,2,-2,3,3,-8,8,9,-6,-10,1,9,3,4,-8,8,8,5,7,1,-10,7,7,-4,4,-7,-10,-2,4,10,1,-5,8,-10,-10,6,-1,7,-6,3,5,-7,-8,-9,-7,6,7,-8,3,-1,-2,-10,8,1,8,-6,-5,9,3,6,5,9,-3,-6,-6,9,3,-1,9,-5,-5,2,-5,3,-7,8,-1,5,-6,2,7,2,-3,1,4,-10,8,-8,3,10,10,-5,7,-7,-10,-6,10,-8,-10,4,-6,10,-8,-6,-10,2,-6,-3,6,5,6,-4,-9,9,1,1,10,1,2,3,-4,3,2,3,3,6,1,-6,-10,10,-10,9,6,10,-5,-1,-7,-1,10,9,-3,-5,-4,-5,-7,6,-9,7,-4,3,-1,-10,-7,-1,6,10,-6,-2,-5,-5,-3,10,-7,-7,-8,-2,-3,9,-5,8,-10,-1,-5,-7,1,5,-6,-7,-3,-5,5,10,-2,-1,-9,10,-1,-10,-5,9,10,1,-10,-10,-5,4,2,1,4,3,-2,7,-6,-10,-3,-9,4,10,10,-8,4,-6,-7,10,-6,-7,10,4,10,-6,-4,9,-5,-3,-10,10,3,10,-1,-1,7,-7,-1,-2,-4,7,5,7,4,7,-3,8,2,-5,-2,2,-6,6,-2,2,9,6,-3,4,-5,3,-7,-3,1,-2,6,-2,-2,4,5,10,3,-7,-10,-6,-3,10,-10,-9,-1,-3,2,1,-4,-10,1,4,-7,-10,4,-10,3,-7,5,5,6,4,3,-3,-2,-7,-4,-5,-2,8,1,2,-9,8,-4,9,10,9,-1,-2,7,6,-8,4,5,5,3,-9,-8,-6,9,4,3,3,-8,-8,4,-10,-4,2,10,5,-7,-6,3,-9,9,2,-7,-7,1,3,7,6,10,1,9,1,-4,3,9,2,5,2,-10,-8,4,4,5,-3,10,-4,1,5,2,-5,-9,-9,-2,6,-9,2,-8,-5,8,9,-3,9,8,-9,3,1,2,4,-2,5,7,-7,4,9,1,10,-2,-7,-2,-3,10,-6,-6,6,5,1,7,-8,-1,2,6,5,-10,10,-9,-8,-5,-3,7,10,1,3,-1,-8,9,-6,4,2,-6,-8,3,5,-4,-10,-10,-2,-4,-8,7,9,7,-8,-9,-7,-3,9,4,-8,4,7,10,4,6,9,7,-9,3,7,10,-6,-10,-2,9,-1,8,7,-1,2,-3,1,8,6,9,-3,1,3,2,-6,-3,-8,-6,1,-5,5,5,-8,9,-2,1,-7,-3,-4,6,-10,8,2,-2,-3,7,5,-5,-2,-8,3,2,-2,10,3,-7,-7,-10,8,5,1,1,-3,-8,3,1,-7,-5,9,-6,-3,5,7,2,-1,9,6,-5,-6,-6,-1,4,2,-7,-7,5,-6,-4,10,-10,-1,-1,9,-8,3,6,2,1,1,9,3,-2,4,1,9,5,10,-9,-5,4,2,1,-9,-2,-2,-10,4,-3,-5,-2,-8,6,-4,7,-3,-7,-10,-3,-1,-1,7,-10,-3,-9,9,-7,-8,-7,10,-2,-4,10,-7,4,9,3,-9,6,7,-2,-7,-3,2,7,-3,-6,10,-2,-10,-7,2,-6,-2,-2,-8,-5,-3,-9,-10,8,-7,-2,-10,-4,-9,-1,10,1,-2,2,7,-2,-8,9,9,-3,2,3,-10,-6,9,-1,7,-2,-4,8,2,2,-2,9,-10,6,-8,6,8,-8,-9,6,10,6,10,5,-3,3,-10,7,-7,-2,3,-4,9,-8,10,8,-1,3,-6,7,-5,-7,5,5,-8,-6,4,-4,3,-3,7,4,-6,1,-7,-3,1,9,5,-7,-8,4,4,-7,1,3,-3,-5,-5,-1,7,7,8,-3,10,8,2,10,-1,4,-6,9,5,8,-2,-4,-5,-6,-7,-7,-6,4,6,-5,-2,-8,-7,10,1,-2,9,2,7,8,-7,-10,8,3,10,3,-1,10,8,-10,8,-1,-7,10,3,9,-2,2,-7,-6,-7,8,-9,-5,-10,3,-8,6,9,1,-5,9,1,9,-10,-4,-5,-2,3,-9,-2,-5,-1,8,-9,10,-1,-3,-2,-10,-7,-7,9,7,9,-6,-2,-3,-2,-1,-2,-4,9,5,10,-4,-10,-1,4,-10,4,4,-7,-9,10,1,-10,-2,4,2,3,-3,1,-1,-10,8,8,-3,10,5,1,-1,3,-2,1,1,2,-6,-7,-7,-9,-4,6,-4,-7,-6,7,1,-1,8,-9,-5,-4,5,9,8,-7,-4,10,-3,7,7,-7,3,-3,1,10,10,-8,-5,7,4,8,10,4,-6,3,4,-6,-1,9,-9,-9,-5,6,-3,-3,-8,2,10,-1,6,4,5,6,6,-7,6,-4,10,-1,2,9,7,-9,-7,5,-4,3,6,-5,-7,-7,-6,-4,-2,1,-8,-5,-2,-4,-5,-2,8,10,7,8,8,6,8,-4,4,-4,8,7,-4,-10,-10,1,10,-3,7,-8,7,-10,-6,3,2,10,7,-9,-10,3,1,-9,-3,7,-4,-4,-1,-3,-1,-4,-4,-10,-6,5,9,-8,-9,-1,-9,-4,-5,1,-7,2,-1,-8,3,-7,10,-4,9,9,-9,2,-1,1,9,2,6,-1,-10,-3,10,3,1,8,9,8,2,-8,-10,-8,2,-2,-6,7,-5,-1,2,6,-1,-3,-4,2,3,-8,10,-10,8,3,9,1,2,-1,-8,-8,-3,-1,2,-2,3,7,-6,6,-3,1,2,-5,6,9,-5,2,9,-5,-7,7,-7,-3,-3,8,-1,7,-10,6,-10,-9,3,5,7,5,8,-3,-6,7,-7,-7,-1,10,7,-7,-4,-6,-2,-10,-2,2,-7,-5,3,-4,7,9,-4,-9,-8,1,-7,-10,9,-7,-7,3,5,-8,-9,9,2,4,-10,10,-3,1,-10,-8,-4,-10,-5,-6,-10,-7,5,-5,-7,-6,3,-4,-6,6,-9,-5,-1,-4,9,-5,4,-7,1,7,-2,2,6,-2,4,-8,-4,5,-7,2,-9,-4,10,-2,-7,6,2,5,-7,-4,-8,-3,5,-8,7,10,-6,10,8,-4,3,-4,-9,4,-7,4,-1,8,4,-2,-5,-6,-7,-4,10,-9,7,7,4,1,-2,-7,-1,-2,-10,-6,5,5,-10,-8,-8,-3,-2,-2,-6,8,-7,2,1,-2,8,-7,10,6,2,10,3,-6,4,9,-8,-7,-3,2,4,-6,-10,9,8,9,1,1,-3,-7,2,6,-7,4,3,-6,10,3,-7,-1,10,-5,1,5,3,-10,9,5,-10,-6,7,-4,-5,6,-9,-7,8,8,-9,5,6,-7,3,3,-2,-8,2,-3,-9,9,7,5,-9,7,7,-10,-7,-7,8,6,8,7,6,-7,1,10,-1,3,1,7,-10,-10,5,-9,-7,3,9,-5,1,9,-7,10,-6,-7,-3,-7,-3,-1,-6,1,7,9,3,-10,-8,-8,8,5,3,4,-8,10,-8,10,-3,-5,5,6,-2,6,-5,-6,-4,-10,-3,-2,3,-4,5,5,7,10,-8,1,5,1,-2,5,-10,-3,-7,-5,9,3,5,5,10,3,-4,-7,4,10,-6,1,10,-10,1,9,-7,7,2,4,-9,-9,3,-3,3,2,8,5,9,7,3,3,10,-3,-2,-4,4,-6,-7,-2,4,-10,-7,-2,-4,-8,7,-8,1,-1,6,6,9,7,-10,-8,2,9,-7,-10,4,-8,9,-9,-5,5,-8,-3,2,-4,-8,-9,2,-2,2,10,9,-6,3,-1,8,4,-7,-2,7,-1,8,-5,-9,9,-8,7,8,8,-1,-4,6,-4,6,-4,-9,6,-7,8,-10,9,-10,5,-2,-3,-3,1,-6,-4,8,-3,-5,4,2,9,-3,-9,-5,-2,7,-9,2,-10,2,9,2,-6,-5,-8,-6,-10,-5,1,3,-6,-7,-1,-2,7,4,5,10,-2,4,3,-9,9,1,-4,1,5,7,-9,6,5,4,8,1,-10,-2,-7,7,4,5,-4,-10,-6,-6,7,1,-4,2,-8,1,-10,-2,-5,2,-6,-9,-5,9,7,-8,-7,-6,5,-2,1,-2,8,9,-10,-3,7,-7,3,6,1,-2,-3,1,6,-3,-7,-9,7,-8,-8,5,3,2,10,-5,1,1,-6,2,-4,-9,9,5,6,5,4,-3,-4,4,10,4,7,-5,-8,4,-3,-2,-1,-8,-10,-2,5,-3,10,-2,7,4,-1,-6,8,-2,3,3,1,-10,6,-7,-9,9,-6,-2,7,8,6,9,-3,7,5,9,-3,10,3,10,6,3,-10,-6,2,-5,7,2,-6,-8,-9,8,-6,-1,6,2,1,-5,-10,-8,-6,-1,-8,4,10,-5,-7,-10,3,-3,-5,2,-8,-8,7,-3,8,7,6,10,-3,6,-9,-4,-10,-3,10,2,10,10,-6,2,4,-2,1,6,-8,-6,9,-1,-7,-5,-10,8,-6,1,9,8,5,6,5,-1,-4,-1,-5,5,9,-10,4,-2,6,4,9,1,-3,9,8,-2,7,9,-6,-5,-2,-7,-2,-9,-2,-4,-7,6,-1,-10,5,3,-5,-5,5,-7,6,7,3,-6,1,8,6,-9,-9,6,-1,7,9,7,3,-5,8,-6,-8,-9,-6,-6,-1,7,-2,-7,2,-8,-7,9,9,-8,5,-9,8,-9,-5,5,10,9,7,-4,9,3,7,7,-5,-4,-8,-1,-10,-9,7,-2,-9,8,6,-6,6,-2,-1,-10,3,5,6,8,-10,3,-2,-2,-8,7,-4,9,-4,4,10,-10,-5,-2,4,-7,6,10,6,9,4,-6,-10,-10,-5,-10,6,8,8,4,-10,6,10,-6,-2,10,2,6,-2,8,1,-4,9,-8,-2,9,-3,9,-3,-2,9,-10,-6,5,-3,7,3,10,-3,-1,3,6,6,-9,-2,5,1,-4,-2,-6,4,-10,5,2,-10,-3,-4,-9,6,-1,-1,10,2,10,3,-10,1,5,-1,4,-8,4,-5,2,1,10,10,3,-3,5,-2,10,-8,-1,-10,10,-3,-1,7,2,9,-1,1,2,-8,-8,3,-6,-5,-9,4,-4,-6,-7,-10,-3,10,-9,-8,5,-9,8,4,-4,3,-3,-5,-5,-4,3,1,5,10,2,-7,5,1,8,7,4,5,6,4,10,6,-4,-1,-6,-4,-8,7,-7,-5,6,6,2,7,3,1,-1,-9,4,5,9,-10,2,-10,-8,3,9,-3,-3,10,2,-1,10,10,-8,-4,4,-5,3,-5,-2,-4,10,-3,6,10,7,-2,1,-1,-7,-5,-10,7,-8,4,-3,-1,6,5,-7,3,-6,3,5,6,10,2,4,5,4,-9,10,9,4,-1,8,-5,6,-2,3,-4,-9,-4,8,2,1,-10,-1,-10,-2,6,-4,4,10,-3,-2,-5,-3,-4,10,-4,5,-3,-2,1,-5,-4,9,-9,6,9,6,10,5,-10,-8,-6,-8,-1,-4,-6,9,-8,-10,7,-6,3,-2,-1,7,-2,8,7,-8,8,-1,1,-4,2,3,-1,6,2,9,7,-7,-10,-4,2,-7,6,-5,-10,5,5,1,-10,2,-7,5,4,2,6,-2,9,-9,7,-1,4,-9,7,-7,-9,7,9,-1,-4,8,10,-10,-7,-2,-2,-1,1,7,2,-7,2,-8,-5,-3,-3,-3,-1,9,-10,10,6,-10,3,-8,-1,7,-8,4,5,4,-10,-8,10,9,-2,3,2,6,-1,10,9,7,2,1,-1,-5,4,4,-5,-3,1,5,-9,9,-7,-4,-8,-2,-2,-8,-9,-6,8,-6,-2,-8,-5,8,-3,-6,8,5,-8,-6,3,5,-9,-7,-10,8,4,-7,-8,-4,2,9,7,7,4,-8,-9,9,6,3,-10,10,-8,2,-1,-6,6,4,1,1,-9,2,-3,-6,-8,-5,-3,-10,-1,4,1,-5,-5,-10,-4,-4,1,-1,-9,-3,9,5,2,-2,10,-5,7,-5,10], dtype = "uint32")#candidate|6300|(2704,)|const|uint32
call_6299 = relay.TupleGetItem(func_1458_call(relay.reshape(const_6300.astype('uint32'), [2704,])), 5)
call_6301 = relay.TupleGetItem(func_1461_call(relay.reshape(const_6300.astype('uint32'), [2704,])), 5)
output = relay.Tuple([call_6277,call_6284,call_6299,const_6300,])
output2 = relay.Tuple([call_6278,call_6285,call_6301,const_6300,])
func_6318 = relay.Function([], output)
mod['func_6318'] = func_6318
mod = relay.transform.InferType()(mod)
output = func_6318()
func_6319 = relay.Function([], output)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mod.get_global_var('func_4084')
func_4086_call = mutated_mod.get_global_var('func_4086')
call_6341 = func_4084_call()
call_6342 = func_4084_call()
output = relay.Tuple([call_6341,])
output2 = relay.Tuple([call_6342,])
func_6346 = relay.Function([], output)
mod['func_6346'] = func_6346
mod = relay.transform.InferType()(mod)
mutated_mod['func_6346'] = func_6346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6346_call = mutated_mod.get_global_var('func_6346')
call_6347 = func_6346_call()
output = call_6347
func_6348 = relay.Function([], output)
mutated_mod['func_6348'] = func_6348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_6349 = func_886_call()
call_6350 = func_886_call()
output = call_6349
output2 = call_6350
func_6356 = relay.Function([], output)
mod['func_6356'] = func_6356
mod = relay.transform.InferType()(mod)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6356_call = mutated_mod.get_global_var('func_6356')
call_6357 = func_6356_call()
output = call_6357
func_6358 = relay.Function([], output)
mutated_mod['func_6358'] = func_6358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_6380 = relay.TupleGetItem(func_3284_call(), 0)
call_6381 = relay.TupleGetItem(func_3286_call(), 0)
func_3878_call = mod.get_global_var('func_3878')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_6387 = relay.TupleGetItem(func_3878_call(), 0)
call_6388 = relay.TupleGetItem(func_3880_call(), 0)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_6391 = relay.TupleGetItem(func_3643_call(), 0)
call_6392 = relay.TupleGetItem(func_3644_call(), 0)
output = relay.Tuple([call_6380,call_6387,call_6391,])
output2 = relay.Tuple([call_6381,call_6388,call_6392,])
func_6399 = relay.Function([], output)
mod['func_6399'] = func_6399
mod = relay.transform.InferType()(mod)
output = func_6399()
func_6400 = relay.Function([], output)
mutated_mod['func_6400'] = func_6400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6401 = relay.var("var_6401", dtype = "float32", shape = (11, 3, 10))#candidate|6401|(11, 3, 10)|var|float32
uop_6402 = relay.acos(var_6401.astype('float32')) # shape=(11, 3, 10)
func_4040_call = mod.get_global_var('func_4040')
func_4043_call = mutated_mod.get_global_var('func_4043')
var_6407 = relay.var("var_6407", dtype = "float64", shape = (1890,))#candidate|6407|(1890,)|var|float64
call_6406 = relay.TupleGetItem(func_4040_call(relay.reshape(var_6407.astype('float64'), [1890,])), 2)
call_6408 = relay.TupleGetItem(func_4043_call(relay.reshape(var_6407.astype('float64'), [1890,])), 2)
func_5402_call = mod.get_global_var('func_5402')
func_5403_call = mutated_mod.get_global_var('func_5403')
call_6420 = func_5402_call()
call_6421 = func_5402_call()
func_3249_call = mod.get_global_var('func_3249')
func_3250_call = mutated_mod.get_global_var('func_3250')
call_6422 = func_3249_call()
call_6423 = func_3249_call()
func_912_call = mod.get_global_var('func_912')
func_914_call = mutated_mod.get_global_var('func_914')
call_6438 = relay.TupleGetItem(func_912_call(), 2)
call_6439 = relay.TupleGetItem(func_914_call(), 2)
func_3226_call = mod.get_global_var('func_3226')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_6450 = relay.TupleGetItem(func_3226_call(), 0)
call_6451 = relay.TupleGetItem(func_3227_call(), 0)
output = relay.Tuple([uop_6402,call_6406,var_6407,call_6420,call_6422,call_6438,call_6450,])
output2 = relay.Tuple([uop_6402,call_6408,var_6407,call_6421,call_6423,call_6439,call_6451,])
func_6469 = relay.Function([var_6401,var_6407,], output)
mod['func_6469'] = func_6469
mod = relay.transform.InferType()(mod)
mutated_mod['func_6469'] = func_6469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mutated_mod.get_global_var('func_6469')
var_6471 = relay.var("var_6471", dtype = "float32", shape = (11, 3, 10))#candidate|6471|(11, 3, 10)|var|float32
var_6472 = relay.var("var_6472", dtype = "float64", shape = (1890,))#candidate|6472|(1890,)|var|float64
call_6470 = func_6469_call(var_6471,var_6472,)
output = call_6470
func_6473 = relay.Function([var_6471,var_6472,], output)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_6486 = relay.TupleGetItem(func_3209_call(), 0)
call_6487 = relay.TupleGetItem(func_3211_call(), 0)
func_5760_call = mod.get_global_var('func_5760')
func_5761_call = mutated_mod.get_global_var('func_5761')
call_6497 = func_5760_call()
call_6498 = func_5760_call()
output = relay.Tuple([call_6486,call_6497,])
output2 = relay.Tuple([call_6487,call_6498,])
func_6511 = relay.Function([], output)
mod['func_6511'] = func_6511
mod = relay.transform.InferType()(mod)
output = func_6511()
func_6512 = relay.Function([], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6570 = relay.var("var_6570", dtype = "uint16", shape = (16, 7, 16))#candidate|6570|(16, 7, 16)|var|uint16
var_6571 = relay.var("var_6571", dtype = "uint16", shape = (16, 7, 16))#candidate|6571|(16, 7, 16)|var|uint16
bop_6572 = relay.minimum(var_6570.astype('uint16'), relay.reshape(var_6571.astype('uint16'), relay.shape_of(var_6570))) # shape=(16, 7, 16)
func_5384_call = mod.get_global_var('func_5384')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_6576 = relay.TupleGetItem(func_5384_call(), 2)
call_6577 = relay.TupleGetItem(func_5386_call(), 2)
output = relay.Tuple([bop_6572,call_6576,])
output2 = relay.Tuple([bop_6572,call_6577,])
func_6582 = relay.Function([var_6570,var_6571,], output)
mod['func_6582'] = func_6582
mod = relay.transform.InferType()(mod)
var_6583 = relay.var("var_6583", dtype = "uint16", shape = (16, 7, 16))#candidate|6583|(16, 7, 16)|var|uint16
var_6584 = relay.var("var_6584", dtype = "uint16", shape = (16, 7, 16))#candidate|6584|(16, 7, 16)|var|uint16
output = func_6582(var_6583,var_6584,)
func_6585 = relay.Function([var_6583,var_6584,], output)
mutated_mod['func_6585'] = func_6585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_6590 = relay.TupleGetItem(func_4670_call(), 0)
call_6591 = relay.TupleGetItem(func_4671_call(), 0)
var_6614 = relay.var("var_6614", dtype = "float64", shape = (15, 2, 14))#candidate|6614|(15, 2, 14)|var|float64
bop_6615 = relay.less_equal(call_6590.astype('bool'), relay.reshape(var_6614.astype('bool'), relay.shape_of(call_6590))) # shape=(15, 2, 14)
bop_6618 = relay.less_equal(call_6591.astype('bool'), relay.reshape(var_6614.astype('bool'), relay.shape_of(call_6591))) # shape=(15, 2, 14)
output = relay.Tuple([bop_6615,])
output2 = relay.Tuple([bop_6618,])
func_6619 = relay.Function([var_6614,], output)
mod['func_6619'] = func_6619
mod = relay.transform.InferType()(mod)
mutated_mod['func_6619'] = func_6619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6620 = relay.var("var_6620", dtype = "float64", shape = (15, 2, 14))#candidate|6620|(15, 2, 14)|var|float64
func_6619_call = mutated_mod.get_global_var('func_6619')
call_6621 = func_6619_call(var_6620)
output = call_6621
func_6622 = relay.Function([var_6620], output)
mutated_mod['func_6622'] = func_6622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_6629 = relay.TupleGetItem(func_3209_call(), 0)
call_6630 = relay.TupleGetItem(func_3211_call(), 0)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_6640 = relay.TupleGetItem(func_1673_call(), 0)
call_6641 = relay.TupleGetItem(func_1675_call(), 0)
output = relay.Tuple([call_6629,call_6640,])
output2 = relay.Tuple([call_6630,call_6641,])
func_6642 = relay.Function([], output)
mod['func_6642'] = func_6642
mod = relay.transform.InferType()(mod)
output = func_6642()
func_6643 = relay.Function([], output)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6660 = relay.var("var_6660", dtype = "float32", shape = (8, 16, 11))#candidate|6660|(8, 16, 11)|var|float32
uop_6661 = relay.log10(var_6660.astype('float32')) # shape=(8, 16, 11)
output = uop_6661
output2 = uop_6661
func_6671 = relay.Function([var_6660,], output)
mod['func_6671'] = func_6671
mod = relay.transform.InferType()(mod)
mutated_mod['func_6671'] = func_6671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6672 = relay.var("var_6672", dtype = "float32", shape = (8, 16, 11))#candidate|6672|(8, 16, 11)|var|float32
func_6671_call = mutated_mod.get_global_var('func_6671')
call_6673 = func_6671_call(var_6672)
output = call_6673
func_6674 = relay.Function([var_6672], output)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1116_call = mod.get_global_var('func_1116')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_6676 = relay.TupleGetItem(func_1116_call(), 3)
call_6677 = relay.TupleGetItem(func_1118_call(), 3)
uop_6680 = relay.sin(call_6676.astype('float64')) # shape=(13, 13, 16)
uop_6682 = relay.sin(call_6677.astype('float64')) # shape=(13, 13, 16)
output = relay.Tuple([uop_6680,])
output2 = relay.Tuple([uop_6682,])
func_6684 = relay.Function([], output)
mod['func_6684'] = func_6684
mod = relay.transform.InferType()(mod)
output = func_6684()
func_6685 = relay.Function([], output)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1675_call = mutated_mod.get_global_var('func_1675')
call_6724 = relay.TupleGetItem(func_1673_call(), 0)
call_6725 = relay.TupleGetItem(func_1675_call(), 0)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_6734 = relay.TupleGetItem(func_2388_call(), 0)
call_6735 = relay.TupleGetItem(func_2390_call(), 0)
output = relay.Tuple([call_6724,call_6734,])
output2 = relay.Tuple([call_6725,call_6735,])
func_6755 = relay.Function([], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
output = func_6755()
func_6756 = relay.Function([], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3284_call = mod.get_global_var('func_3284')
func_3286_call = mutated_mod.get_global_var('func_3286')
call_6757 = relay.TupleGetItem(func_3284_call(), 0)
call_6758 = relay.TupleGetItem(func_3286_call(), 0)
output = relay.Tuple([call_6757,])
output2 = relay.Tuple([call_6758,])
func_6762 = relay.Function([], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6762_call = mutated_mod.get_global_var('func_6762')
call_6763 = func_6762_call()
output = call_6763
func_6764 = relay.Function([], output)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4321_call = mod.get_global_var('func_4321')
func_4322_call = mutated_mod.get_global_var('func_4322')
call_6773 = relay.TupleGetItem(func_4321_call(), 1)
call_6774 = relay.TupleGetItem(func_4322_call(), 1)
func_2937_call = mod.get_global_var('func_2937')
func_2940_call = mutated_mod.get_global_var('func_2940')
var_6788 = relay.var("var_6788", dtype = "float32", shape = (720,))#candidate|6788|(720,)|var|float32
call_6787 = relay.TupleGetItem(func_2937_call(relay.reshape(var_6788.astype('float32'), [5, 9, 16])), 1)
call_6789 = relay.TupleGetItem(func_2940_call(relay.reshape(var_6788.astype('float32'), [5, 9, 16])), 1)
func_6619_call = mod.get_global_var('func_6619')
func_6622_call = mutated_mod.get_global_var('func_6622')
call_6790 = relay.TupleGetItem(func_6619_call(relay.reshape(call_6773.astype('float64'), [15, 2, 14])), 0)
call_6791 = relay.TupleGetItem(func_6622_call(relay.reshape(call_6773.astype('float64'), [15, 2, 14])), 0)
func_4544_call = mod.get_global_var('func_4544')
func_4546_call = mutated_mod.get_global_var('func_4546')
call_6800 = relay.TupleGetItem(func_4544_call(), 0)
call_6801 = relay.TupleGetItem(func_4546_call(), 0)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_6804 = func_4000_call()
call_6805 = func_4000_call()
output = relay.Tuple([call_6773,call_6787,var_6788,call_6790,call_6800,call_6804,])
output2 = relay.Tuple([call_6774,call_6789,var_6788,call_6791,call_6801,call_6805,])
func_6813 = relay.Function([var_6788,], output)
mod['func_6813'] = func_6813
mod = relay.transform.InferType()(mod)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6814 = relay.var("var_6814", dtype = "float32", shape = (720,))#candidate|6814|(720,)|var|float32
func_6813_call = mutated_mod.get_global_var('func_6813')
call_6815 = func_6813_call(var_6814)
output = call_6815
func_6816 = relay.Function([var_6814], output)
mutated_mod['func_6816'] = func_6816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_6818 = relay.TupleGetItem(func_4697_call(), 0)
call_6819 = relay.TupleGetItem(func_4699_call(), 0)
output = relay.Tuple([call_6818,])
output2 = relay.Tuple([call_6819,])
func_6834 = relay.Function([], output)
mod['func_6834'] = func_6834
mod = relay.transform.InferType()(mod)
output = func_6834()
func_6835 = relay.Function([], output)
mutated_mod['func_6835'] = func_6835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1181_call = mod.get_global_var('func_1181')
func_1182_call = mutated_mod.get_global_var('func_1182')
call_6862 = relay.TupleGetItem(func_1181_call(), 0)
call_6863 = relay.TupleGetItem(func_1182_call(), 0)
output = relay.Tuple([call_6862,])
output2 = relay.Tuple([call_6863,])
func_6885 = relay.Function([], output)
mod['func_6885'] = func_6885
mod = relay.transform.InferType()(mod)
output = func_6885()
func_6886 = relay.Function([], output)
mutated_mod['func_6886'] = func_6886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_6890 = relay.TupleGetItem(func_5227_call(), 0)
call_6891 = relay.TupleGetItem(func_5228_call(), 0)
output = relay.Tuple([call_6890,])
output2 = relay.Tuple([call_6891,])
func_6903 = relay.Function([], output)
mod['func_6903'] = func_6903
mod = relay.transform.InferType()(mod)
output = func_6903()
func_6904 = relay.Function([], output)
mutated_mod['func_6904'] = func_6904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_6910 = relay.TupleGetItem(func_2388_call(), 0)
call_6911 = relay.TupleGetItem(func_2390_call(), 0)
uop_6912 = relay.log2(call_6910.astype('float32')) # shape=(4, 3, 15)
uop_6914 = relay.log2(call_6911.astype('float32')) # shape=(4, 3, 15)
output = relay.Tuple([uop_6912,])
output2 = relay.Tuple([uop_6914,])
func_6917 = relay.Function([], output)
mod['func_6917'] = func_6917
mod = relay.transform.InferType()(mod)
output = func_6917()
func_6918 = relay.Function([], output)
mutated_mod['func_6918'] = func_6918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4477_call = mod.get_global_var('func_4477')
func_4479_call = mutated_mod.get_global_var('func_4479')
call_6923 = relay.TupleGetItem(func_4477_call(), 0)
call_6924 = relay.TupleGetItem(func_4479_call(), 0)
output = relay.Tuple([call_6923,])
output2 = relay.Tuple([call_6924,])
func_6962 = relay.Function([], output)
mod['func_6962'] = func_6962
mod = relay.transform.InferType()(mod)
output = func_6962()
func_6963 = relay.Function([], output)
mutated_mod['func_6963'] = func_6963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5897_call = mod.get_global_var('func_5897')
func_5898_call = mutated_mod.get_global_var('func_5898')
call_6970 = func_5897_call()
call_6971 = func_5897_call()
output = call_6970
output2 = call_6971
func_6980 = relay.Function([], output)
mod['func_6980'] = func_6980
mod = relay.transform.InferType()(mod)
mutated_mod['func_6980'] = func_6980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6980_call = mutated_mod.get_global_var('func_6980')
call_6981 = func_6980_call()
output = call_6981
func_6982 = relay.Function([], output)
mutated_mod['func_6982'] = func_6982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6010_call = mod.get_global_var('func_6010')
func_6011_call = mutated_mod.get_global_var('func_6011')
call_6987 = func_6010_call()
call_6988 = func_6010_call()
func_6917_call = mod.get_global_var('func_6917')
func_6918_call = mutated_mod.get_global_var('func_6918')
call_6997 = relay.TupleGetItem(func_6917_call(), 0)
call_6998 = relay.TupleGetItem(func_6918_call(), 0)
func_6671_call = mod.get_global_var('func_6671')
func_6674_call = mutated_mod.get_global_var('func_6674')
const_7003 = relay.const([5.775308,-4.297705,-9.519792,7.256279,9.234118,0.325869,-2.754386,-8.664228,2.529170,3.112253,-9.240422,5.095195,-5.934800,0.989388,5.263252,-1.862864,5.314053,-4.471995,2.342152,-0.691415,3.588657,6.911249,-6.188152,-1.717911,3.274191,4.229547,1.678484,7.419576,-8.729138,-1.690539,1.092958,-5.599237,5.560548,-5.514706,-1.759244,6.091583,1.585926,9.374508,1.239783,0.909785,7.523386,-0.578819,-2.092248,-2.167311,-7.104249,-2.227648,-1.656876,-2.525718,9.797105,-2.706485,-3.938190,-4.218214,5.336460,7.384942,6.727017,9.966358,9.645593,-8.700448,8.463006,-4.454220,7.190217,-0.502208,-0.907880,3.634297,9.327276,8.970536,3.703992,2.475682,-4.697964,0.090546,-3.715859,-9.436253,-6.649325,1.123140,-6.658466,-5.903886,-1.730346,5.744284,6.996202,3.076970,-6.069606,-6.435487,-9.542774,-0.768542,1.565483,-9.223632,-6.176737,8.060386,5.626024,7.678687,7.618599,8.842303,-3.468853,-1.386481,7.737483,-9.328983,-2.983976,-0.381702,5.221981,6.535426,-2.419588,-4.657834,0.480440,-8.270354,-6.531562,-1.723076,1.251190,5.913058,-8.068545,4.077492,0.639215,4.856625,8.492063,-9.955014,8.565399,8.876193,-6.336695,-7.306630,1.405967,-4.840175,-0.689411,1.504097,1.333279,0.334956,-4.414664,7.807243,2.401813,-2.671713,-7.525487,8.893892,-2.877020,-2.166322,-4.164733,-8.642061,0.241862,9.220196,4.247169,1.404229,7.116686,-6.871352,1.351619,-3.138246,1.059492,9.445723,2.831123,3.139397,9.632835,-4.524316,-8.534165,-3.858038,-0.200995,-3.076955,-2.816295,-8.864357,-4.434281,-7.225946,-3.559393,-1.756860,7.078632,-5.346102,-7.900161,-0.008319,8.045306,4.528220,-9.286668,7.161725,0.463694,-3.495489,3.446653,-1.347088,-1.928939,7.603942,6.914647,-0.074654,-5.606925,7.018403,-9.762785,-1.047035,2.179306,2.229434,6.087508,-8.962415,-0.444066,8.905457,7.519621,-1.861325,-5.131200,-4.515181,0.104415,-4.288792,9.792977,3.542743,3.967304,9.473485,2.924747,-9.672483,6.922738,-4.343700,-1.683292,8.971777,0.729330,5.116388,-6.503370,3.855962,-8.807966,6.130080,5.836895,4.166325,-4.215510,8.799429,6.085875,9.138135,-2.210973,3.272552,0.463028,-5.299116,-1.144752,-0.846704,-1.925405,-2.028472,8.381617,-0.465179,-9.394466,0.480775,7.504501,8.935225,3.994037,2.009658,-8.057200,-9.955012,-4.193586,-1.124876,-4.238930,8.376821,-3.459714,5.998532,2.751886,-6.859626,9.495632,-5.439705,0.033746,8.249911,-7.089153,-2.951873,5.765583,-5.110198,-1.462211,-8.265394,0.625710,3.105173,-3.582777,8.150089,-1.018103,2.881728,-0.392559,-4.662762,4.155932,-8.071546,5.794989,-5.358275,1.099502,-9.766428,8.553672,-2.237492,-6.652173,-2.499422,-6.176044,-4.303589,-6.458351,-7.190528,5.471841,-0.516444,-3.575029,7.506598,8.853192,9.736102,-2.161396,-5.629696,-3.331677,4.419784,-4.072945,4.823153,3.770194,-1.312016,-6.174348,-6.963808,4.366128,-0.908139,5.831302,7.439015,-3.398184,2.623771,-4.362914,-3.174234,-6.223171,0.363881,-8.931076,8.779757,-6.866396,7.327025,-8.357222,0.799017,-7.321359,-3.494397,2.749068,-0.166697,-7.206980,-3.584938,-1.467096,3.512142,-2.734938,6.579124,-6.152481,7.314444,-6.791527,1.276060,-3.623953,7.418035,-1.121070,4.504880,0.850663,2.076620,5.631424,9.013738,0.228697,1.599650,0.857666,-8.895984,0.878067,6.492490,-6.098137,1.038318,6.463772,0.391481,-7.086056,3.825413,-3.279600,7.230851,-8.699890,6.956661,6.026377,-3.676881,-2.228999,-2.524181,-1.053718,2.333717,-8.204906,0.717413,7.893815,-6.417056,9.275262,-3.429250,-6.127027,-0.276512,-3.864911,-5.317119,-2.943534,-9.767788,5.496207,-3.201823,-0.703473,-3.677985,-9.979235,-6.457831,-1.097359,5.486457,-1.259982,-4.723480,2.110318,-2.799706,-6.289614,-5.615503,3.647969,0.295549,9.877469,-6.924937,-5.463013,8.468576,-5.749683,-9.401983,-1.365217,2.372539,0.140527,7.535683,-5.504224,-8.495949,0.947451,4.793430,-2.479987,9.901543,-2.909998,1.082136,4.432339,-7.358900,2.453609,-6.836645,-1.848468,-2.454051,3.390478,6.246537,8.090337,4.990576,-0.355122,2.610136,7.383413,-0.342982,-6.562416,-5.844539,-3.373883,-4.842727,-9.561510,4.241268,-1.262621,-3.671047,-5.913193,2.558687,-6.667798,-9.435904,3.791583,3.062775,-4.939261,-1.648210,7.626302,-6.495436,7.371609,1.205427,-3.765426,9.606225,2.209865,-5.435307,9.812251,9.701255,-9.682116,-3.524041,-1.590393,4.622635,3.529065,4.238754,-8.657925,1.326736,-6.815803,1.432669,6.626013,6.664704,1.328118,-6.023872,3.178334,-6.582191,1.379412,3.971134,-5.670006,8.451388,6.258178,-1.098077,-7.639565,7.335370,3.845417,7.066058,2.537851,8.302644,6.401683,9.992290,9.135856,-7.641457,-3.314395,-1.310998,-9.532194,0.045778,7.295292,-6.712841,4.770582,-6.621353,-2.488509,7.443606,5.804822,-1.349442,4.112301,9.284593,7.745552,2.196902,-5.028881,-4.025998,1.274669,-5.271569,-6.660808,6.210694,-0.392655,-9.226468,4.075118,7.107478,-2.467466,6.969184,2.657041,-4.288569,5.020484,4.125539,-6.774688,-4.526329,1.773868,-6.703705,9.675051,2.483291,6.734490,6.836671,6.928515,4.630594,-8.030630,8.833201,-3.157666,4.541578,-1.612579,2.856940,-6.213058,-7.650791,-1.315200,0.373632,-0.416340,0.015270,-1.792955,9.255887,1.604338,7.769404,5.997666,-6.903983,0.988096,9.439554,-8.481603,-2.987956,7.181888,-2.910992,1.995161,3.533052,-6.115888,4.145705,6.644839,-5.885575,-4.867022,6.507807,4.253492,9.335118,4.427441,-1.215961,4.215488,-5.191449,8.800318,-0.164014,9.195597,6.353183,-3.759940,-2.298172,1.863491,5.469232,3.619271,7.876036,-9.562084,5.746991,-7.042268,5.568777,-2.759188,-6.696675,-9.104180,-5.055026,-9.722348,3.312519,-9.837241,0.139202,-7.489546,8.001207,9.539412,-1.868596,9.746931,6.945447,7.392725,6.403948,-2.839250,-6.372923,-8.038970,-0.559726,-1.617556,-7.529166,-6.171794,-7.044519,-3.271338,-1.609106,-2.257026,4.962840,-2.066062,4.510752,3.231698,9.791374,-8.674821,-1.455968,-0.737031,-0.684764,-8.219075,9.387879,-1.464115,6.745393,-1.587360,-7.945183,0.373202,-0.740825,-3.846700,4.555033,1.599172,2.181484,-9.362194,-6.363949,3.791277,3.195124,0.124370,-8.333037,-1.155194,-9.527129,6.561335,-3.988573,-7.492482,-2.766821,-3.526345,-5.340795,-3.907658,-0.891819,5.773729,0.010800,9.155200,-9.181244,5.903629,-0.794136,7.518728,-7.670982,7.316750,9.556249,-5.313563,-1.688536,7.940287,-6.282062,-5.307671,4.212046,3.028593,-6.405190,7.863424,-2.549732,3.702706,8.286604,2.421767,9.084251,-5.508329,2.725181,-0.479875,3.653373,-1.080259,0.969393,-4.765743,1.115477,9.488204,-1.912790,-3.789846,-3.668115,3.528945,-3.554159,3.680420,3.925592,-2.320383,-7.960662,-6.914831,9.082606,4.015537,-1.900809,6.543417,-5.798251,0.178665,7.666100,7.794636,-1.739758,6.239705,8.931418,-5.297491,-0.882022,0.894023,-7.447540,0.366379,7.657580,-2.541703,-8.427632,6.602417,6.097156,-6.353050,-1.534405,-5.169928,-3.649640,-2.134034,-1.973638,8.070260,3.935192,-5.607999,-9.725146,5.219197,-8.050991,3.663690,1.448570,7.962262,-1.941890,-0.450687,2.422154,5.056272,-6.730397,-7.730274,-4.593975,-5.366569,-2.363721,4.394404,-0.177918,-5.020736,8.071710,3.284252,-2.643585,2.823677,-6.207274,-4.879855,-7.630656,-7.545955,9.660368,1.398875,-5.151217,2.081121,-4.944194,9.180930,-6.238249,-9.116584,-3.180731,-6.679330,-5.284307,9.303857,3.799924,5.041811,6.716741,9.883775,-4.784073,-3.949018,-7.837677,3.199267,3.632186,7.969403,5.624212,7.065379,3.799199,-7.355657,5.898743,1.097602,8.597639,-2.200076,-5.004728,0.339855,-1.477844,1.252976,-0.811498,-5.940262,6.705222,2.861550,4.625391,-6.038024,-4.508582,-3.153420,-0.271831,2.358366,-1.575449,-2.902327,8.811856,5.955388,-5.403914,-8.315401,-2.687332,-4.012688,-0.556104,-2.638713,-1.817387,-8.951594,9.592645,-1.983422,-8.915246,-6.163634,6.518594,8.011697,-2.349248,-7.405010,4.679857,6.044075,3.437366,-8.594002,4.070990,2.489832,5.234620,0.744027,4.019693,8.008459,6.526190,-5.561206,-4.066941,4.032383,9.598047,3.986032,-7.280655,-1.788212,-8.272379,4.974708,6.436654,4.391266,-3.466835,4.450431,-3.697291,-7.739934,-5.962157,-0.148219,-2.766264,-7.739310,-4.814607,3.131806,-4.189283,-3.553990,-1.055338,3.407561,8.504710,-6.078561,0.740258,8.666023,-0.336725,0.963003,-2.573144,-7.025121,3.040270,-8.093062,-3.074448,-0.486017,2.646254,-7.571094,-2.338626,5.205464,-1.077773,1.498354,-2.144739,-2.100789,-1.817035,4.233417,6.166461,-4.602460,-1.772761,-9.858553,-6.129973,-4.910685,-6.358992,8.944105,-9.573656,-1.834117,-1.221131,-3.617928,-0.931104,-2.880617,-0.149114,5.345383,3.058594,-3.230831,9.921995,-1.345217,8.701129,7.575160,3.204628,-2.769487,-5.347267,0.891971,-6.621842,3.389639,-0.157096,-8.003466,5.225140,-9.384580,4.374970,1.488865,-5.366962,-1.154523,-4.550159,4.828972,-0.736213,6.195409,-1.407683,4.147368,-3.055933,5.010518,-4.141623,8.036410,8.551578,-1.393801,-4.244511,3.162615,-1.574186,-5.839276,-8.154181,-4.362240,0.508342,0.399355,-3.931387,-1.132845,8.922961,9.284832,4.060234,1.651581,8.415576,5.301042,4.088764,-1.740846,-4.621944,-8.561274,-7.286345,9.834757,-3.413230,6.022087,-6.126784,7.888897,3.113183,7.813732,1.980101,4.059877,4.143655,-9.760866,-9.230590,-2.893695,2.666481,4.534470,1.413605,2.973569,7.552682,6.930641,1.613892,3.062116,1.906514,4.864451,4.303036,1.942362,-6.718103,-9.102311,-5.541451,8.542968,2.645740,9.812011,-8.915096,1.295103,0.479249,9.326080,8.599149,5.422635,9.118711,-6.122510,-2.186894,4.395237,9.561953,5.525255,-8.210840,-4.616795,8.245780,5.007216,-9.904494,2.836593,3.724186,-4.743773,5.707968,0.359959,4.540452,5.106746,-1.013738,-1.914747,-5.516350,0.476619,-0.925713,5.874208,-0.928717,7.967959,7.442415,-3.568173,3.499441,2.306929,3.029323,-9.495513,-2.816930,-3.306036,-0.663492,7.045327,-8.990491,-1.488426,-1.471943,-2.174335,-5.417880,3.967761,-7.887276,-4.091379,7.796632,-8.602578,-5.717913,6.290287,-0.938962,6.604575,-6.414021,-8.718289,-3.057770,4.961844,-5.676250,4.523500,-4.134357,-9.216045,-9.923697,-9.508246,-4.958939,-8.272881,5.905054,-2.801501,6.460842,7.306294,-7.458956,-3.759702,-7.757627,5.243025,8.725103,3.090358,3.263991,-5.756487,-2.239820,1.690266,6.463507,9.961476,0.577555,5.568929,-9.041953,-5.642810,-5.612808,0.319107,7.047329,6.934344,1.458146,-2.573124,-1.489343,-1.480969,3.203286,0.552307,-2.007914,-8.881412,-7.062026,-4.421860,-1.451467,8.672829,-9.278525,2.499922,1.747706,-9.719108,4.275297,-4.557322,-6.218109,-0.727147,-1.245261,-8.195436,-9.210102,2.508511,-1.102294,4.965260,-9.242390,6.104412,1.112241,-6.643493,3.851917,9.127766,6.042374,-9.477156,2.817161,-8.032902,2.303841,-2.017907,0.035158,-8.869476,2.059625,-9.604028,6.169555,-7.905881,-4.753307,5.102759,-3.694069,-0.536101,-0.775261,3.883929,2.193269,-0.126241,-9.411663,-4.094364,-3.630599,-2.276748,1.606685,9.522737,-1.196879,6.093317,4.983213,2.993682,-7.416866,8.407475,-0.776353,-5.441998,-1.621842,-6.521351,1.428685,-9.401474,-3.645947,3.110464,7.330743,-3.811231,6.167869,-7.614118,-4.453940,-0.574096,9.367718,-1.016047,-9.440662,1.416731,9.641402,7.299845,7.933232,-2.930931,-0.156905,4.392228,-5.432086,-6.207310,3.151336,-9.411987,-8.323713,-8.584560,6.331388,0.289824,5.898178,-2.127331,6.609308,8.378259,-9.895619,-5.980055,-5.395587,-5.581879,2.960360,-2.509705,-9.010373,-0.644884,0.850080,-8.633644,2.835474,-9.772256,2.876283,0.618672,-1.326826,8.508249,-3.243775,-0.736788,2.145561,-1.791388,3.088932,4.702707,7.990392,-0.808950,5.582983,7.410272,-0.304604,6.306492,7.563332,-2.032060,-0.489927,-0.666192,2.003840,2.074087,6.984403,3.595984,-5.604497,-1.709440,6.523467,-2.560956,-1.941266,8.069187,0.675527,-2.929590,-4.755054,-0.935965,-4.481068,9.782714,0.942765,-6.195339,-4.962796,0.506400,-9.695337,6.292921,-3.137133,-9.700803,9.783779,-5.441163,6.958568,9.938851,9.321462,-2.291942,-8.002344,-9.696850,-5.763388,2.584761,-7.982616,3.436665,-2.411766,-9.083962,-1.053324,9.792792,1.363200,-2.087307,-7.472166,-3.291496,8.228656,9.729941,-6.667523,-8.195681,-6.964026,-2.881921,-6.255793,-2.666827,-2.031773,-3.979293,5.506737,-3.965728,5.421919,1.810654,7.644742,3.954104,-4.280734,-8.760882,-4.451518,0.837153,-7.136490,-0.002223,5.599575,-7.125180,8.894494,-9.439009,-7.305367,5.492370,7.525768,-0.415647,-3.716933,-2.072351,-1.221148,-2.525457,4.379649,-8.791965,6.619199,-9.116731,4.878683,-4.127820,2.682167,9.290589,5.884445,5.431030,-0.279752,3.698175,-0.245133,5.958524,8.722384,0.670822,-8.075606,-7.995307,-8.672294,-1.768893,0.770750,5.049527,-2.191735,7.438029,2.735748,-5.721687,-4.916641,2.081988,2.967718,8.618482,-5.184767,8.099542,-0.482771,-1.151637,4.653389,-5.002855,4.755720,9.538344,3.455094,0.907084,-7.180721,-4.455930,-8.467257,5.204794,-7.600442,-9.858698,4.631165,8.676727,9.640526,0.755011,9.763812,-4.478205,3.509312,-3.341504,-4.875662,5.393906,6.283780,6.056590,7.819871,-8.128407,8.948133,-1.068716,-3.880368,3.350046,5.017438,-4.773766,-9.719982,4.026461,5.770088,-7.128444,-6.434968,-6.341363,4.635744,4.248414,-1.633543,7.990937,-5.434757,-5.685526,0.691853,-1.948160,-6.866323,6.695639,8.171795,-3.253044,-3.579991,-6.145439,3.471906,8.789607,-1.978376,8.394962,-4.042789,2.893539,1.350310,7.316337,1.074622,1.363258,5.895081,-2.735816,-8.892093,1.758638,-2.449117,0.267993,-1.834391,-4.303515,6.951603,8.466741,-9.943767,-0.827385,-3.703764,3.164266,4.569872,-9.365252,0.987379,-6.371926,3.199682,6.834486,0.489547,1.564182,4.165016,0.844951,-8.171650,-6.074518,8.256444,-8.272013,-9.344782,7.306981,-2.533818,-3.903305,-8.844518,1.291887,-1.425900,6.043443,4.864347,0.646197,6.270337,8.733005,3.093476,-0.371990,-0.361611,3.113308,-4.187412,8.638628,-7.459371,7.448011,-8.892047,-7.084371,3.915556,-9.003140,2.936577,7.429800,-9.642602,-6.414324,-4.058058,-5.149213,9.420757,0.091025,-8.526342,-1.703672,8.222314,-9.603626,9.698866,-4.680651,-3.284394], dtype = "float32")#candidate|7003|(1408,)|const|float32
call_7002 = func_6671_call(relay.reshape(const_7003.astype('float32'), [8, 16, 11]))
call_7004 = func_6671_call(relay.reshape(const_7003.astype('float32'), [8, 16, 11]))
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_7009 = relay.TupleGetItem(func_934_call(), 0)
call_7010 = relay.TupleGetItem(func_936_call(), 0)
var_7012 = relay.var("var_7012", dtype = "float32", shape = (8, 16, 11))#candidate|7012|(8, 16, 11)|var|float32
bop_7013 = relay.logical_xor(call_7002.astype('int64'), relay.reshape(var_7012.astype('int64'), relay.shape_of(call_7002))) # shape=(8, 16, 11)
bop_7016 = relay.logical_xor(call_7004.astype('int64'), relay.reshape(var_7012.astype('int64'), relay.shape_of(call_7004))) # shape=(8, 16, 11)
func_5389_call = mod.get_global_var('func_5389')
func_5391_call = mutated_mod.get_global_var('func_5391')
call_7018 = func_5389_call()
call_7019 = func_5389_call()
output = relay.Tuple([call_6987,call_6997,const_7003,call_7009,bop_7013,call_7018,])
output2 = relay.Tuple([call_6988,call_6998,const_7003,call_7010,bop_7016,call_7019,])
func_7036 = relay.Function([var_7012,], output)
mod['func_7036'] = func_7036
mod = relay.transform.InferType()(mod)
mutated_mod['func_7036'] = func_7036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7037 = relay.var("var_7037", dtype = "float32", shape = (8, 16, 11))#candidate|7037|(8, 16, 11)|var|float32
func_7036_call = mutated_mod.get_global_var('func_7036')
call_7038 = func_7036_call(var_7037)
output = call_7038
func_7039 = relay.Function([var_7037], output)
mutated_mod['func_7039'] = func_7039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_7175 = relay.TupleGetItem(func_4944_call(), 1)
call_7176 = relay.TupleGetItem(func_4945_call(), 1)
output = call_7175
output2 = call_7176
func_7178 = relay.Function([], output)
mod['func_7178'] = func_7178
mod = relay.transform.InferType()(mod)
output = func_7178()
func_7179 = relay.Function([], output)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_7197 = relay.TupleGetItem(func_2388_call(), 0)
call_7198 = relay.TupleGetItem(func_2390_call(), 0)
var_7207 = relay.var("var_7207", dtype = "bool", shape = (4, 3, 15))#candidate|7207|(4, 3, 15)|var|bool
bop_7208 = relay.add(call_7197.astype('int16'), relay.reshape(var_7207.astype('int16'), relay.shape_of(call_7197))) # shape=(4, 3, 15)
bop_7211 = relay.add(call_7198.astype('int16'), relay.reshape(var_7207.astype('int16'), relay.shape_of(call_7198))) # shape=(4, 3, 15)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_7230 = relay.TupleGetItem(func_3209_call(), 0)
call_7231 = relay.TupleGetItem(func_3211_call(), 0)
func_6511_call = mod.get_global_var('func_6511')
func_6512_call = mutated_mod.get_global_var('func_6512')
call_7252 = relay.TupleGetItem(func_6511_call(), 0)
call_7253 = relay.TupleGetItem(func_6512_call(), 0)
func_2721_call = mod.get_global_var('func_2721')
func_2722_call = mutated_mod.get_global_var('func_2722')
call_7260 = relay.TupleGetItem(func_2721_call(), 3)
call_7261 = relay.TupleGetItem(func_2722_call(), 3)
var_7262 = relay.var("var_7262", dtype = "bool", shape = (4, 3, 15))#candidate|7262|(4, 3, 15)|var|bool
bop_7263 = relay.mod(call_7197.astype('float64'), relay.reshape(var_7262.astype('float64'), relay.shape_of(call_7197))) # shape=(4, 3, 15)
bop_7266 = relay.mod(call_7198.astype('float64'), relay.reshape(var_7262.astype('float64'), relay.shape_of(call_7198))) # shape=(4, 3, 15)
func_5580_call = mod.get_global_var('func_5580')
func_5582_call = mutated_mod.get_global_var('func_5582')
call_7276 = relay.TupleGetItem(func_5580_call(relay.reshape(call_7252.astype('uint32'), [2704,])), 4)
call_7277 = relay.TupleGetItem(func_5582_call(relay.reshape(call_7252.astype('uint32'), [2704,])), 4)
bop_7285 = relay.maximum(call_7260.astype('float64'), relay.reshape(call_7252.astype('float64'), relay.shape_of(call_7260))) # shape=(2704,)
bop_7288 = relay.maximum(call_7261.astype('float64'), relay.reshape(call_7253.astype('float64'), relay.shape_of(call_7261))) # shape=(2704,)
output = relay.Tuple([bop_7208,call_7230,bop_7263,call_7276,bop_7285,])
output2 = relay.Tuple([bop_7211,call_7231,bop_7266,call_7277,bop_7288,])
func_7298 = relay.Function([var_7207,var_7262,], output)
mod['func_7298'] = func_7298
mod = relay.transform.InferType()(mod)
var_7299 = relay.var("var_7299", dtype = "bool", shape = (4, 3, 15))#candidate|7299|(4, 3, 15)|var|bool
var_7300 = relay.var("var_7300", dtype = "bool", shape = (4, 3, 15))#candidate|7300|(4, 3, 15)|var|bool
output = func_7298(var_7299,var_7300,)
func_7301 = relay.Function([var_7299,var_7300,], output)
mutated_mod['func_7301'] = func_7301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7311 = relay.var("var_7311", dtype = "int64", shape = ())#candidate|7311|()|var|int64
var_7312 = relay.var("var_7312", dtype = "int64", shape = (1, 1, 14))#candidate|7312|(1, 1, 14)|var|int64
bop_7313 = relay.not_equal(var_7311.astype('bool'), var_7312.astype('bool')) # shape=(1, 1, 14)
output = relay.Tuple([bop_7313,])
output2 = relay.Tuple([bop_7313,])
func_7331 = relay.Function([var_7311,var_7312,], output)
mod['func_7331'] = func_7331
mod = relay.transform.InferType()(mod)
var_7332 = relay.var("var_7332", dtype = "int64", shape = ())#candidate|7332|()|var|int64
var_7333 = relay.var("var_7333", dtype = "int64", shape = (1, 1, 14))#candidate|7333|(1, 1, 14)|var|int64
output = func_7331(var_7332,var_7333,)
func_7334 = relay.Function([var_7332,var_7333,], output)
mutated_mod['func_7334'] = func_7334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
call_7349 = func_5000_call()
call_7350 = func_5000_call()
func_4645_call = mod.get_global_var('func_4645')
func_4646_call = mutated_mod.get_global_var('func_4646')
call_7353 = func_4645_call()
call_7354 = func_4645_call()
func_5384_call = mod.get_global_var('func_5384')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_7359 = relay.TupleGetItem(func_5384_call(), 1)
call_7360 = relay.TupleGetItem(func_5386_call(), 1)
uop_7365 = relay.asinh(call_7349.astype('float64')) # shape=(4, 3, 15)
uop_7367 = relay.asinh(call_7350.astype('float64')) # shape=(4, 3, 15)
output = relay.Tuple([call_7353,call_7359,uop_7365,])
output2 = relay.Tuple([call_7354,call_7360,uop_7367,])
func_7370 = relay.Function([], output)
mod['func_7370'] = func_7370
mod = relay.transform.InferType()(mod)
mutated_mod['func_7370'] = func_7370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7370_call = mutated_mod.get_global_var('func_7370')
call_7371 = func_7370_call()
output = call_7371
func_7372 = relay.Function([], output)
mutated_mod['func_7372'] = func_7372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5445_call = mod.get_global_var('func_5445')
func_5447_call = mutated_mod.get_global_var('func_5447')
call_7403 = relay.TupleGetItem(func_5445_call(), 0)
call_7404 = relay.TupleGetItem(func_5447_call(), 0)
output = call_7403
output2 = call_7404
func_7406 = relay.Function([], output)
mod['func_7406'] = func_7406
mod = relay.transform.InferType()(mod)
mutated_mod['func_7406'] = func_7406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mutated_mod.get_global_var('func_7406')
call_7407 = func_7406_call()
output = call_7407
func_7408 = relay.Function([], output)
mutated_mod['func_7408'] = func_7408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_886_call = mod.get_global_var('func_886')
func_887_call = mutated_mod.get_global_var('func_887')
call_7473 = func_886_call()
call_7474 = func_886_call()
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_7480 = relay.TupleGetItem(func_3209_call(), 0)
call_7481 = relay.TupleGetItem(func_3211_call(), 0)
output = relay.Tuple([call_7473,call_7480,])
output2 = relay.Tuple([call_7474,call_7481,])
func_7482 = relay.Function([], output)
mod['func_7482'] = func_7482
mod = relay.transform.InferType()(mod)
mutated_mod['func_7482'] = func_7482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7482_call = mutated_mod.get_global_var('func_7482')
call_7483 = func_7482_call()
output = call_7483
func_7484 = relay.Function([], output)
mutated_mod['func_7484'] = func_7484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_7492 = func_4000_call()
call_7493 = func_4000_call()
output = call_7492
output2 = call_7493
func_7502 = relay.Function([], output)
mod['func_7502'] = func_7502
mod = relay.transform.InferType()(mod)
mutated_mod['func_7502'] = func_7502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7502_call = mutated_mod.get_global_var('func_7502')
call_7503 = func_7502_call()
output = call_7503
func_7504 = relay.Function([], output)
mutated_mod['func_7504'] = func_7504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6917_call = mod.get_global_var('func_6917')
func_6918_call = mutated_mod.get_global_var('func_6918')
call_7522 = relay.TupleGetItem(func_6917_call(), 0)
call_7523 = relay.TupleGetItem(func_6918_call(), 0)
uop_7524 = relay.sinh(call_7522.astype('float32')) # shape=(4, 3, 15)
uop_7526 = relay.sinh(call_7523.astype('float32')) # shape=(4, 3, 15)
bop_7530 = relay.greater_equal(uop_7524.astype('bool'), relay.reshape(call_7522.astype('bool'), relay.shape_of(uop_7524))) # shape=(4, 3, 15)
bop_7533 = relay.greater_equal(uop_7526.astype('bool'), relay.reshape(call_7523.astype('bool'), relay.shape_of(uop_7526))) # shape=(4, 3, 15)
output = relay.Tuple([bop_7530,])
output2 = relay.Tuple([bop_7533,])
func_7541 = relay.Function([], output)
mod['func_7541'] = func_7541
mod = relay.transform.InferType()(mod)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7541_call = mutated_mod.get_global_var('func_7541')
call_7542 = func_7541_call()
output = call_7542
func_7543 = relay.Function([], output)
mutated_mod['func_7543'] = func_7543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2996_call = mod.get_global_var('func_2996')
func_2997_call = mutated_mod.get_global_var('func_2997')
call_7547 = relay.TupleGetItem(func_2996_call(), 0)
call_7548 = relay.TupleGetItem(func_2997_call(), 0)
func_6346_call = mod.get_global_var('func_6346')
func_6348_call = mutated_mod.get_global_var('func_6348')
call_7575 = relay.TupleGetItem(func_6346_call(), 0)
call_7576 = relay.TupleGetItem(func_6348_call(), 0)
var_7578 = relay.var("var_7578", dtype = "float64", shape = (15, 2, 14))#candidate|7578|(15, 2, 14)|var|float64
bop_7579 = relay.multiply(call_7575.astype('float64'), relay.reshape(var_7578.astype('float64'), relay.shape_of(call_7575))) # shape=(15, 2, 14)
bop_7582 = relay.multiply(call_7576.astype('float64'), relay.reshape(var_7578.astype('float64'), relay.shape_of(call_7576))) # shape=(15, 2, 14)
output = relay.Tuple([call_7547,bop_7579,])
output2 = relay.Tuple([call_7548,bop_7582,])
func_7585 = relay.Function([var_7578,], output)
mod['func_7585'] = func_7585
mod = relay.transform.InferType()(mod)
mutated_mod['func_7585'] = func_7585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7586 = relay.var("var_7586", dtype = "float64", shape = (15, 2, 14))#candidate|7586|(15, 2, 14)|var|float64
func_7585_call = mutated_mod.get_global_var('func_7585')
call_7587 = func_7585_call(var_7586)
output = call_7587
func_7588 = relay.Function([var_7586], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_7657 = relay.TupleGetItem(func_4697_call(), 0)
call_7658 = relay.TupleGetItem(func_4699_call(), 0)
output = relay.Tuple([call_7657,])
output2 = relay.Tuple([call_7658,])
func_7660 = relay.Function([], output)
mod['func_7660'] = func_7660
mod = relay.transform.InferType()(mod)
output = func_7660()
func_7661 = relay.Function([], output)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6917_call = mod.get_global_var('func_6917')
func_6918_call = mutated_mod.get_global_var('func_6918')
call_7680 = relay.TupleGetItem(func_6917_call(), 0)
call_7681 = relay.TupleGetItem(func_6918_call(), 0)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_7690 = relay.TupleGetItem(func_2356_call(), 0)
call_7691 = relay.TupleGetItem(func_2358_call(), 0)
output = relay.Tuple([call_7680,call_7690,])
output2 = relay.Tuple([call_7681,call_7691,])
func_7711 = relay.Function([], output)
mod['func_7711'] = func_7711
mod = relay.transform.InferType()(mod)
output = func_7711()
func_7712 = relay.Function([], output)
mutated_mod['func_7712'] = func_7712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6834_call = mod.get_global_var('func_6834')
func_6835_call = mutated_mod.get_global_var('func_6835')
call_7722 = relay.TupleGetItem(func_6834_call(), 0)
call_7723 = relay.TupleGetItem(func_6835_call(), 0)
func_4102_call = mod.get_global_var('func_4102')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_7730 = func_4102_call()
call_7731 = func_4102_call()
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_7737 = relay.TupleGetItem(func_1999_call(), 2)
call_7738 = relay.TupleGetItem(func_2001_call(), 2)
func_5445_call = mod.get_global_var('func_5445')
func_5447_call = mutated_mod.get_global_var('func_5447')
call_7739 = relay.TupleGetItem(func_5445_call(), 1)
call_7740 = relay.TupleGetItem(func_5447_call(), 1)
output = relay.Tuple([call_7722,call_7730,call_7737,call_7739,])
output2 = relay.Tuple([call_7723,call_7731,call_7738,call_7740,])
func_7742 = relay.Function([], output)
mod['func_7742'] = func_7742
mod = relay.transform.InferType()(mod)
mutated_mod['func_7742'] = func_7742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7742_call = mutated_mod.get_global_var('func_7742')
call_7743 = func_7742_call()
output = call_7743
func_7744 = relay.Function([], output)
mutated_mod['func_7744'] = func_7744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3921_call = mod.get_global_var('func_3921')
func_3922_call = mutated_mod.get_global_var('func_3922')
call_7750 = func_3921_call()
call_7751 = func_3921_call()
output = relay.Tuple([call_7750,])
output2 = relay.Tuple([call_7751,])
func_7753 = relay.Function([], output)
mod['func_7753'] = func_7753
mod = relay.transform.InferType()(mod)
mutated_mod['func_7753'] = func_7753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7753_call = mutated_mod.get_global_var('func_7753')
call_7754 = func_7753_call()
output = call_7754
func_7755 = relay.Function([], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3878_call = mod.get_global_var('func_3878')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_7756 = relay.TupleGetItem(func_3878_call(), 0)
call_7757 = relay.TupleGetItem(func_3880_call(), 0)
output = call_7756
output2 = call_7757
func_7782 = relay.Function([], output)
mod['func_7782'] = func_7782
mod = relay.transform.InferType()(mod)
mutated_mod['func_7782'] = func_7782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7782_call = mutated_mod.get_global_var('func_7782')
call_7783 = func_7782_call()
output = call_7783
func_7784 = relay.Function([], output)
mutated_mod['func_7784'] = func_7784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_7787 = func_7406_call()
call_7788 = func_7406_call()
output = call_7787
output2 = call_7788
func_7805 = relay.Function([], output)
mod['func_7805'] = func_7805
mod = relay.transform.InferType()(mod)
mutated_mod['func_7805'] = func_7805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7805_call = mutated_mod.get_global_var('func_7805')
call_7806 = func_7805_call()
output = call_7806
func_7807 = relay.Function([], output)
mutated_mod['func_7807'] = func_7807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6399_call = mod.get_global_var('func_6399')
func_6400_call = mutated_mod.get_global_var('func_6400')
call_7849 = relay.TupleGetItem(func_6399_call(), 0)
call_7850 = relay.TupleGetItem(func_6400_call(), 0)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_7866 = relay.TupleGetItem(func_3643_call(), 0)
call_7867 = relay.TupleGetItem(func_3644_call(), 0)
func_6813_call = mod.get_global_var('func_6813')
func_6816_call = mutated_mod.get_global_var('func_6816')
var_7871 = relay.var("var_7871", dtype = "float32", shape = (1, 720))#candidate|7871|(1, 720)|var|float32
call_7870 = relay.TupleGetItem(func_6813_call(relay.reshape(var_7871.astype('float32'), [720,])), 1)
call_7872 = relay.TupleGetItem(func_6816_call(relay.reshape(var_7871.astype('float32'), [720,])), 1)
output = relay.Tuple([call_7849,call_7866,call_7870,var_7871,])
output2 = relay.Tuple([call_7850,call_7867,call_7872,var_7871,])
func_7874 = relay.Function([var_7871,], output)
mod['func_7874'] = func_7874
mod = relay.transform.InferType()(mod)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7875 = relay.var("var_7875", dtype = "float32", shape = (1, 720))#candidate|7875|(1, 720)|var|float32
func_7874_call = mutated_mod.get_global_var('func_7874')
call_7876 = func_7874_call(var_7875)
output = call_7876
func_7877 = relay.Function([var_7875], output)
mutated_mod['func_7877'] = func_7877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5384_call = mod.get_global_var('func_5384')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_7900 = relay.TupleGetItem(func_5384_call(), 2)
call_7901 = relay.TupleGetItem(func_5386_call(), 2)
output = relay.Tuple([call_7900,])
output2 = relay.Tuple([call_7901,])
func_7902 = relay.Function([], output)
mod['func_7902'] = func_7902
mod = relay.transform.InferType()(mod)
output = func_7902()
func_7903 = relay.Function([], output)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_7921 = relay.TupleGetItem(func_3037_call(), 0)
call_7922 = relay.TupleGetItem(func_3039_call(), 0)
func_5402_call = mod.get_global_var('func_5402')
func_5403_call = mutated_mod.get_global_var('func_5403')
call_7926 = func_5402_call()
call_7927 = func_5402_call()
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_7931 = relay.TupleGetItem(func_1916_call(), 0)
call_7932 = relay.TupleGetItem(func_1918_call(), 0)
bop_7935 = relay.maximum(call_7931.astype('float32'), relay.reshape(call_7926.astype('float32'), relay.shape_of(call_7931))) # shape=(4, 3, 15)
bop_7938 = relay.maximum(call_7932.astype('float32'), relay.reshape(call_7927.astype('float32'), relay.shape_of(call_7932))) # shape=(4, 3, 15)
output = relay.Tuple([call_7921,bop_7935,])
output2 = relay.Tuple([call_7922,bop_7938,])
func_7944 = relay.Function([], output)
mod['func_7944'] = func_7944
mod = relay.transform.InferType()(mod)
mutated_mod['func_7944'] = func_7944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7944_call = mutated_mod.get_global_var('func_7944')
call_7945 = func_7944_call()
output = call_7945
func_7946 = relay.Function([], output)
mutated_mod['func_7946'] = func_7946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7805_call = mod.get_global_var('func_7805')
func_7807_call = mutated_mod.get_global_var('func_7807')
call_7968 = func_7805_call()
call_7969 = func_7805_call()
func_4147_call = mod.get_global_var('func_4147')
func_4149_call = mutated_mod.get_global_var('func_4149')
call_7980 = relay.TupleGetItem(func_4147_call(), 0)
call_7981 = relay.TupleGetItem(func_4149_call(), 0)
func_6834_call = mod.get_global_var('func_6834')
func_6835_call = mutated_mod.get_global_var('func_6835')
call_7982 = relay.TupleGetItem(func_6834_call(), 0)
call_7983 = relay.TupleGetItem(func_6835_call(), 0)
func_3347_call = mod.get_global_var('func_3347')
func_3350_call = mutated_mod.get_global_var('func_3350')
const_7989 = relay.const([[3.611003,-7.974703,2.218266,-4.630973,-9.648455,1.581086,1.416089,3.313656,0.188892,-0.142178,-0.913298,4.483110],[-7.554473,0.441363,3.675677,-1.012326,-7.311340,2.839509,-1.411482,3.869603,4.087200,-0.762976,4.384870,-9.562301],[-6.214277,3.159835,4.653808,-1.762832,6.294684,-8.327087,-8.751586,-8.540240,2.170922,-5.153353,8.842156,-8.736438],[2.499712,-8.815289,6.863350,7.408138,5.159450,-3.578662,5.581971,-2.287937,0.904355,7.299167,6.123828,-9.853711],[9.914131,-7.031077,-9.808870,7.008714,6.362861,-6.461183,-0.997069,-7.508595,-9.138462,5.236570,1.608515,6.472686],[-6.813500,-0.612933,-0.733132,9.428761,0.907672,-0.332145,-5.469154,5.155605,2.442152,-6.493688,1.082716,9.564251],[-1.592688,-9.436734,-0.446567,-0.585289,-4.015071,-4.154794,3.088797,7.820723,9.698609,0.497476,9.923611,4.727102],[-1.923098,2.113969,-8.870019,-3.088151,1.272738,-2.729002,-9.303013,-4.143030,4.829320,4.863404,-0.154828,-2.678465],[-6.154433,-5.425954,-5.365963,2.464149,4.548798,7.733588,1.528783,-4.076555,-2.076569,6.432950,7.333575,2.920246],[-2.133208,-6.349999,2.274797,5.337489,-7.207549,-0.816593,8.214370,0.191277,-3.428665,5.101490,-3.660287,-0.754289],[-2.701594,3.814474,3.111026,3.713271,6.422918,0.987016,-5.204720,3.720805,-4.489997,4.531084,2.529261,-2.932148],[6.258532,9.285673,-6.273522,-3.365434,4.671895,-6.085645,6.706887,4.658034,4.928921,4.082721,3.388157,-9.719136],[-7.749477,1.171439,8.447669,8.633928,3.537448,-3.654601,-1.946908,9.077064,5.633027,8.076572,2.347840,9.219580],[4.892272,-9.603081,1.793735,-9.474678,-6.442592,3.690962,5.012337,2.976838,-2.594240,-5.802107,-9.590382,-1.024596],[-8.948703,-3.045256,-5.502549,-4.639496,8.834137,-1.933287,-7.131757,-6.732674,9.194497,-7.094099,1.423069,5.257533],[0.973879,-1.299542,6.556221,7.219420,-5.788011,0.388378,-1.341714,-4.288257,-6.885801,-4.141402,5.514113,-2.847597],[8.067482,-9.046802,-8.332359,-6.095941,3.937970,6.810150,9.956026,-3.111526,2.677429,1.870643,-2.922502,8.038653],[-5.328537,7.560448,-8.917983,-6.388310,-7.812326,-0.345032,8.748046,-3.141676,-6.334546,5.899429,6.610419,3.577699],[-8.784755,-1.629686,4.523347,5.832503,7.876993,7.905140,-6.273576,1.138493,-6.942146,6.080342,-3.265194,7.734047],[-0.503013,5.760227,-8.139822,-0.318829,6.100804,9.284278,-0.384796,-8.762013,9.730493,8.640466,-5.624776,-7.685781],[6.814722,-1.706670,-4.981244,-2.595047,-6.800473,-7.039289,-6.058096,7.971549,3.209235,-6.684492,-1.155064,7.430297],[4.520366,6.953909,-5.832320,-6.767072,-5.569686,2.578525,-4.995430,6.193814,6.854428,-4.832584,-5.196732,1.332404],[-4.038851,5.678103,3.270984,3.985382,7.708279,-9.868583,-8.880144,3.655947,9.199320,4.291388,-7.132640,-2.953061],[-3.469246,-9.254511,6.692077,-2.040351,2.078035,-1.588475,4.613587,5.711754,-5.466852,-1.974180,8.547372,9.621087],[-7.099944,-7.786741,2.913704,8.243905,2.389973,-2.053625,2.558953,1.433152,-7.402760,2.950586,4.294107,5.025684],[-2.367271,-1.420151,6.197585,-7.931616,2.413173,9.875469,-8.551202,-2.174483,-1.322556,-2.803590,-6.071699,-7.599966],[1.012559,-7.492450,5.274651,-4.206877,3.269901,2.825944,4.076003,-8.225171,-5.105217,9.590649,-6.631130,4.900554],[4.132906,3.984691,4.794873,-6.045577,0.929955,3.325661,-4.115198,9.337122,-6.388325,9.705994,-2.708901,-8.232585],[3.857270,4.959999,-8.861849,-6.347946,-1.905570,3.171047,1.063554,-5.353003,-4.875183,3.174962,-3.238069,-1.290749],[2.689825,-5.688907,6.900059,2.702388,-5.945728,5.161870,5.607403,-1.025662,1.162899,9.737531,-4.569332,8.916742],[5.811791,2.982349,8.145088,-5.816449,9.639243,9.345635,-2.582532,4.876531,7.997289,7.124409,-3.296191,7.191664],[3.805786,4.340522,-5.702873,-3.092743,4.673739,9.090162,1.004491,-0.448563,-7.515483,4.545470,-2.068955,-0.167426],[8.497501,-1.380851,6.843559,9.480211,-1.094864,-8.563914,-2.417077,-3.482259,0.749546,-5.688655,4.778814,1.308948],[-0.091621,-4.230682,-5.805554,0.792630,-1.445196,9.229928,3.817273,-1.383715,4.340295,-2.790084,5.612705,-6.958301],[7.194416,0.475875,5.596427,-8.725938,-3.249568,-0.542938,3.860074,-6.221847,3.387402,-7.294721,8.660613,-2.417557],[5.429703,-0.488166,1.535502,5.812801,8.691196,3.984926,-5.855015,2.006274,9.080061,4.531552,2.102399,-9.354722],[5.146503,0.962758,-6.425206,-7.251808,-2.182509,-7.231322,8.959660,-7.511381,6.636173,3.784794,-7.357651,-9.464335],[-3.769035,-7.513942,6.253692,-9.221019,0.612856,0.303520,8.412538,-2.916782,-2.155486,4.340324,-5.115159,5.048824],[2.913060,4.051284,3.292184,4.137463,6.918498,6.294077,4.048756,-6.352637,4.025363,-6.654652,9.062898,-3.864834],[2.940791,3.066379,-4.934169,4.119691,3.887685,0.827577,-2.204473,-6.892943,-9.747142,7.325650,4.841109,2.914588],[6.066419,5.832582,-5.587863,6.923326,7.608161,7.996854,9.660554,4.561677,-5.388686,1.156565,-5.724087,-5.725112],[3.320748,-1.039107,6.859931,4.965397,5.364716,0.241191,-3.704660,1.707745,8.397032,1.805127,-8.256510,7.821751],[3.980866,6.031799,-9.344628,9.800264,8.787830,-8.583843,4.500386,-5.864985,-9.561808,-8.304460,-4.868088,-8.489033],[-8.243797,-0.203904,3.457301,5.623321,-3.664104,-3.238953,2.691601,-2.888452,3.726582,3.561686,-3.727715,2.464889],[-8.362886,5.720407,1.840547,-4.021837,-2.580765,-1.792084,2.728278,-5.580870,7.697424,-2.163722,-8.291981,9.813651],[-9.876106,-6.583076,-5.815087,6.133584,0.728058,5.749808,7.317877,0.911665,-0.185053,4.001798,6.805270,8.584035],[-5.989757,4.030592,-5.604324,-9.082947,-3.900306,2.566162,-0.070710,1.834927,-2.608455,-4.587103,-8.122048,9.627345],[-0.660021,-5.653054,-3.637402,-3.380137,-5.246503,-1.509523,-3.483890,0.273934,1.922509,-8.511218,7.798057,-2.359116],[-3.669111,2.105818,-2.085930,-4.786484,1.673985,-5.681422,-4.961960,-1.554978,7.687879,-6.628794,8.843384,-0.323949],[-8.968372,-2.267719,-7.629641,1.238257,-3.986927,1.615334,9.311907,8.610816,1.311495,8.554456,-8.528210,-1.948511],[-4.312228,3.472439,-5.009610,-9.439202,-9.285900,-5.271641,3.202606,-0.068900,8.842176,-9.229473,8.485820,3.356669],[-1.127957,-0.859004,1.067343,-3.945483,9.459303,3.297866,9.601245,0.876249,9.775164,-9.982109,4.435664,-7.116876],[-1.724485,-5.148574,-4.227326,-9.642972,-0.340411,1.137994,1.614086,4.592312,9.913570,-7.651312,-0.107521,5.999733],[-4.997344,6.850668,-6.355594,-6.983357,-0.312617,-0.307684,-6.910104,0.360046,1.452192,-4.426413,-3.773237,-3.671629],[2.906077,-5.869606,-3.302631,8.433693,0.327210,-3.703500,-3.349511,3.085095,1.694205,5.041545,-1.388577,-1.609674],[0.330953,7.662766,-5.714204,3.745161,-8.718759,-4.579337,9.390018,3.224935,-5.694990,-6.236354,-3.797846,7.216379],[0.534517,-4.365361,-8.206216,-3.335595,9.070383,4.768886,3.737928,9.453357,7.943027,-0.430894,3.008829,8.511199],[9.174800,-7.279212,5.318052,-7.089686,-3.643361,2.150530,9.418312,-1.942570,1.599627,1.473535,6.736096,-2.189466],[-3.896401,8.725687,1.422274,3.912049,6.035279,-5.482893,4.829995,0.125210,9.604998,-8.067226,-3.654884,-4.124688],[8.421648,-3.462515,-2.417927,4.123417,6.523084,5.342576,7.445977,-0.069018,-2.181842,-4.300144,8.268514,-7.377566]], dtype = "float32")#candidate|7989|(60, 12)|const|float32
call_7988 = relay.TupleGetItem(func_3347_call(relay.reshape(const_7989.astype('float32'), [1, 720])), 2)
call_7990 = relay.TupleGetItem(func_3350_call(relay.reshape(const_7989.astype('float32'), [1, 720])), 2)
output = relay.Tuple([call_7968,call_7980,call_7982,call_7988,const_7989,])
output2 = relay.Tuple([call_7969,call_7981,call_7983,call_7990,const_7989,])
func_7999 = relay.Function([], output)
mod['func_7999'] = func_7999
mod = relay.transform.InferType()(mod)
mutated_mod['func_7999'] = func_7999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7999_call = mutated_mod.get_global_var('func_7999')
call_8000 = func_7999_call()
output = call_8000
func_8001 = relay.Function([], output)
mutated_mod['func_8001'] = func_8001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_934_call = mod.get_global_var('func_934')
func_936_call = mutated_mod.get_global_var('func_936')
call_8063 = relay.TupleGetItem(func_934_call(), 0)
call_8064 = relay.TupleGetItem(func_936_call(), 0)
func_1458_call = mod.get_global_var('func_1458')
func_1461_call = mutated_mod.get_global_var('func_1461')
var_8072 = relay.var("var_8072", dtype = "uint32", shape = (2704,))#candidate|8072|(2704,)|var|uint32
call_8071 = relay.TupleGetItem(func_1458_call(relay.reshape(var_8072.astype('uint32'), [2704,])), 3)
call_8073 = relay.TupleGetItem(func_1461_call(relay.reshape(var_8072.astype('uint32'), [2704,])), 3)
func_7944_call = mod.get_global_var('func_7944')
func_7946_call = mutated_mod.get_global_var('func_7946')
call_8074 = relay.TupleGetItem(func_7944_call(), 0)
call_8075 = relay.TupleGetItem(func_7946_call(), 0)
func_5016_call = mod.get_global_var('func_5016')
func_5019_call = mutated_mod.get_global_var('func_5019')
const_8092 = relay.const([-8.894641,7.455476,3.157258,1.118429,-4.250705,-3.207140,0.421944,-2.686685,1.400328,6.899876,3.311839,2.789676,-4.426156,-9.997573,-0.150729,6.756164,5.714691,-5.339633,-7.211546,0.539711,-1.443388,9.962327,-1.564847,6.599114,-2.205303,4.277045,-7.728243,-6.821572,-4.091120,-3.068670,-8.388740,-3.251302,-5.844404,7.313557,-0.438751,-4.137117,-2.585622,-8.057318,6.291540,3.597495,-0.849820,-3.540541,6.823508,4.590876,8.273980,1.670645,-9.462003,8.776687,-6.070358,8.096424,8.486967,3.553244,9.258595,-5.113811,-6.230313,9.880455,-8.985863,3.661766,-6.257994,-7.547769,2.587532,8.065996,1.570933,-9.272441,0.803783,-2.876065,8.618973,3.799649,-3.274116,-1.247872,2.434746,0.839234,2.547265,9.091757,-6.755526,9.197279,0.492092,1.433903,2.732104,2.125176,3.753933,-3.220121,9.704890,7.090284,1.532698,-5.814245,1.972922,7.386436,9.919486,-8.694069,-4.331194,9.477951,2.551812,-3.882882,-4.179537,9.494640,5.297118,6.628617,8.534708,-8.968868,-5.747346,7.718887,6.137264,-3.677103,-2.084441,-7.713646,-2.020101,-6.877463,-4.659546,-0.712272,-2.108283,-4.763448,5.266271,9.859713,-5.157488,-7.982592,-4.901070,1.728491,-3.092365,-2.735791,-2.961085,3.008747,-7.924687,-1.927723,-6.481961,-8.187420,5.958313,-6.267365,-6.208738,3.358041,-2.861763,0.854619,-8.674371,-8.424349,-8.931145,0.710655,9.003022,6.079646,-7.165930,-3.256442,-5.706825,-6.947331,4.160292,2.458844,-8.326545,-0.203784,-8.200915,2.515812,-2.598470,9.907265,4.965785,-2.720253,7.850899,-5.784584,3.331039,-0.524942,8.150182,3.491920,3.099743,-9.449731,-1.693026,-8.088201,-8.711375,9.098787,0.882958,9.776124,1.359559,2.870833,2.173555,-6.495832,-5.132367,5.807980,7.342348,-5.290970,5.500025,-7.781240,-2.309177,-3.451843,9.619718,6.728398,-3.918763,5.100091,-0.148340,-5.378006,-8.788292,9.661205,6.861303,2.839314,6.142844,7.843862,-1.666719,-8.643616,6.357920,-7.577056,-7.443487,6.990526,-1.877995,-1.739682,-0.551791,7.631078,-0.801460,4.004444,7.923206,-8.416464,5.976379,4.721243,-4.329237,-3.113872,-0.351788,-6.451345,-5.647459,3.529401,-9.255967,-6.927028,-5.118823,9.210981,-3.867749,-7.681704,8.620813,-5.816641,-0.185204,3.351359,-6.797798,-2.702757,-9.026759,9.286639,4.631412,0.683336,8.810292,-3.846948,5.606953,-7.309980,-4.702883,4.729781,1.967128,-2.904708,7.939523,-7.945476,1.952050,-7.851933,8.558422,6.547438,-9.038766,-4.389604,-8.747345,1.427974,5.877842,3.633555,-3.615955,8.379257,-3.637023,-9.175302,7.261119,3.978707,6.393864,-5.770004,-4.727910,2.020322,7.002415,-2.500864,-1.454249,3.353734,1.124067,-2.405573,-6.408355,8.650962,0.218663,-2.041631,5.430179,-3.375670,-0.707827,0.281099,-1.181566,0.982432,7.153155,3.750228,-1.921080,5.560407,2.871422,9.739443,3.373319,-4.081510,-8.802445,-1.392796,9.374945,9.372726,4.623382,-8.089015,0.855265,3.946740,8.221732,7.832675,-4.443128,7.869458,-0.530658,1.640576,3.684385,-2.170104,-2.030068,4.825037,8.084655,3.925532,-1.930008,-7.799661,-9.566649,-2.522415,-6.071080,6.442356,-9.450540,-5.529743,8.264479,-3.619256,-3.316528,4.044707,9.566337,-2.340059,2.521961,-4.967806,2.557874,4.174466,-6.033484,1.723417,9.413390,5.095561,4.937433,-8.031962,6.029351,8.519019,-1.409349,6.793339,-9.727283,-1.054705,2.677765,2.110594,-2.946302,-1.490892,-2.935893,4.490463,-7.140181,9.382973,3.917357,7.665109,-6.521042,-7.806903,9.469013,5.178256,7.862766,3.871755,-0.730811,1.619535,3.738735,6.510388,5.496955,-9.689927,-4.924303,9.671649,0.699512,-9.541748,0.305259,-6.277020,-6.621717,-2.263341,-2.903512,8.293559,-1.296744,4.146517,-6.323943,6.630602,8.151816,-5.179997,8.591118,7.906375,-1.634509,8.434716,-5.798812,-4.785417,2.976887,-8.747970,-1.668443,-8.389752,-3.740529,-1.580400,-9.801191,-3.422985,9.255858,2.685664,-6.200157,-7.782237,4.462251,2.503896,0.448868,-2.090751], dtype = "float64")#candidate|8092|(392,)|const|float64
call_8091 = relay.TupleGetItem(func_5016_call(relay.reshape(const_8092.astype('float64'), [8, 7, 7])), 0)
call_8093 = relay.TupleGetItem(func_5019_call(relay.reshape(const_8092.astype('float64'), [8, 7, 7])), 0)
output = relay.Tuple([call_8063,call_8071,var_8072,call_8074,call_8091,const_8092,])
output2 = relay.Tuple([call_8064,call_8073,var_8072,call_8075,call_8093,const_8092,])
func_8102 = relay.Function([var_8072,], output)
mod['func_8102'] = func_8102
mod = relay.transform.InferType()(mod)
var_8103 = relay.var("var_8103", dtype = "uint32", shape = (2704,))#candidate|8103|(2704,)|var|uint32
output = func_8102(var_8103)
func_8104 = relay.Function([var_8103], output)
mutated_mod['func_8104'] = func_8104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5000_call = mod.get_global_var('func_5000')
func_5002_call = mutated_mod.get_global_var('func_5002')
call_8193 = func_5000_call()
call_8194 = func_5000_call()
var_8199 = relay.var("var_8199", dtype = "bool", shape = (4, 3, 15))#candidate|8199|(4, 3, 15)|var|bool
bop_8200 = relay.logical_and(call_8193.astype('bool'), relay.reshape(var_8199.astype('bool'), relay.shape_of(call_8193))) # shape=(4, 3, 15)
bop_8203 = relay.logical_and(call_8194.astype('bool'), relay.reshape(var_8199.astype('bool'), relay.shape_of(call_8194))) # shape=(4, 3, 15)
output = bop_8200
output2 = bop_8203
func_8226 = relay.Function([var_8199,], output)
mod['func_8226'] = func_8226
mod = relay.transform.InferType()(mod)
var_8227 = relay.var("var_8227", dtype = "bool", shape = (4, 3, 15))#candidate|8227|(4, 3, 15)|var|bool
output = func_8226(var_8227)
func_8228 = relay.Function([var_8227], output)
mutated_mod['func_8228'] = func_8228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2388_call = mod.get_global_var('func_2388')
func_2390_call = mutated_mod.get_global_var('func_2390')
call_8234 = relay.TupleGetItem(func_2388_call(), 0)
call_8235 = relay.TupleGetItem(func_2390_call(), 0)
const_8239 = relay.const([[[False,True,False,True,False,False,True,False,True,False,False,True,False,True,True],[False,False,True,True,False,False,False,True,False,True,True,False,True,True,True],[True,False,True,True,True,True,False,True,True,True,True,True,False,True,False]],[[True,True,True,False,False,True,False,False,False,True,False,False,True,True,True],[False,False,True,True,False,True,False,False,False,False,True,True,True,True,False],[False,False,False,True,True,False,False,True,True,True,False,True,True,True,False]],[[False,False,False,False,True,False,True,False,False,True,False,True,False,True,False],[False,True,True,False,False,False,True,True,True,False,False,False,True,True,True],[True,True,True,True,True,True,False,False,True,False,True,True,False,True,False]],[[False,False,False,True,False,False,True,True,True,True,True,True,True,False,False],[False,True,False,False,True,True,True,True,False,False,True,True,True,True,True],[True,False,True,True,True,True,False,True,True,True,False,False,True,True,True]]], dtype = "bool")#candidate|8239|(4, 3, 15)|const|bool
bop_8240 = relay.minimum(call_8234.astype('uint8'), relay.reshape(const_8239.astype('uint8'), relay.shape_of(call_8234))) # shape=(4, 3, 15)
bop_8243 = relay.minimum(call_8235.astype('uint8'), relay.reshape(const_8239.astype('uint8'), relay.shape_of(call_8235))) # shape=(4, 3, 15)
bop_8244 = relay.bitwise_and(const_8239.astype('int8'), relay.reshape(call_8234.astype('int8'), relay.shape_of(const_8239))) # shape=(4, 3, 15)
bop_8247 = relay.bitwise_and(const_8239.astype('int8'), relay.reshape(call_8235.astype('int8'), relay.shape_of(const_8239))) # shape=(4, 3, 15)
func_7711_call = mod.get_global_var('func_7711')
func_7712_call = mutated_mod.get_global_var('func_7712')
call_8269 = relay.TupleGetItem(func_7711_call(), 1)
call_8270 = relay.TupleGetItem(func_7712_call(), 1)
uop_8274 = relay.log(call_8234.astype('float64')) # shape=(4, 3, 15)
uop_8276 = relay.log(call_8235.astype('float64')) # shape=(4, 3, 15)
output = relay.Tuple([bop_8240,bop_8244,call_8269,uop_8274,])
output2 = relay.Tuple([bop_8243,bop_8247,call_8270,uop_8276,])
func_8284 = relay.Function([], output)
mod['func_8284'] = func_8284
mod = relay.transform.InferType()(mod)
mutated_mod['func_8284'] = func_8284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8284_call = mutated_mod.get_global_var('func_8284')
call_8285 = func_8284_call()
output = call_8285
func_8286 = relay.Function([], output)
mutated_mod['func_8286'] = func_8286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_8314 = func_1576_call()
call_8315 = func_1576_call()
output = relay.Tuple([call_8314,])
output2 = relay.Tuple([call_8315,])
func_8316 = relay.Function([], output)
mod['func_8316'] = func_8316
mod = relay.transform.InferType()(mod)
mutated_mod['func_8316'] = func_8316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8316_call = mutated_mod.get_global_var('func_8316')
call_8317 = func_8316_call()
output = call_8317
func_8318 = relay.Function([], output)
mutated_mod['func_8318'] = func_8318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6980_call = mod.get_global_var('func_6980')
func_6982_call = mutated_mod.get_global_var('func_6982')
call_8330 = func_6980_call()
call_8331 = func_6980_call()
uop_8374 = relay.sigmoid(call_8330.astype('float64')) # shape=(4, 3, 15)
uop_8376 = relay.sigmoid(call_8331.astype('float64')) # shape=(4, 3, 15)
output = relay.Tuple([uop_8374,])
output2 = relay.Tuple([uop_8376,])
func_8379 = relay.Function([], output)
mod['func_8379'] = func_8379
mod = relay.transform.InferType()(mod)
output = func_8379()
func_8380 = relay.Function([], output)
mutated_mod['func_8380'] = func_8380
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8412 = relay.const([[[4.965052,5.856503,1.748358,5.054897,-5.847803,1.863859,-3.471470,0.331694,-4.315115,-9.204641,-9.136948],[6.441515,-1.700651,-1.283773,7.671948,-2.566286,3.153690,-1.320038,6.656547,9.291769,5.959304,-3.568330],[7.991983,-6.224425,-8.185930,2.600109,-6.893766,1.910425,3.220589,-0.296642,-1.810024,2.812969,-6.324652],[-3.222682,8.298760,9.261244,-0.923770,8.318909,6.904280,8.807787,-2.730356,-7.002176,1.101531,1.476528],[1.575119,-4.110419,4.551235,2.556530,4.140744,9.669804,5.747121,4.949372,2.558293,-6.615423,3.147253],[-5.554496,-4.838520,-8.729402,-9.848404,-5.018292,1.893016,2.479818,0.365155,-8.387406,-2.139791,3.750829],[-5.903295,-4.317545,5.173351,-2.530423,-7.597399,4.944415,1.481584,8.293215,5.569603,6.411770,-4.759137],[3.699494,-5.830386,-9.544081,-7.720136,-7.527917,-8.933700,-1.650799,1.539228,-8.332388,2.572832,-8.285925],[2.366806,-7.419586,-8.253537,7.859386,2.814485,-4.470536,-6.351349,-6.557838,-6.865147,0.266074,6.527277],[0.876313,-9.178003,6.585995,8.383529,-8.747953,3.365557,3.946681,0.696304,-9.372220,-0.513271,-1.593938],[9.860910,3.742310,2.473515,-1.959795,-4.210067,-4.873358,-5.144254,-9.181457,9.937175,-9.580247,4.944957]],[[-1.938432,6.617608,4.199998,1.144389,-4.760529,8.189084,9.607939,2.840750,6.772067,4.049791,-1.544736],[2.859966,6.044492,-8.725092,1.297480,2.728932,-4.476698,-3.843570,-1.162162,8.420970,-6.443247,-0.049351],[3.045962,-0.335895,5.471177,-9.594945,0.061620,-7.147207,1.639737,-7.832708,7.552261,-1.541555,-1.480595],[1.781939,6.387763,-7.249362,5.842696,5.756101,-4.252865,-9.307723,8.887437,6.018597,-1.751027,0.523567],[-3.311361,6.175341,7.791400,0.850572,-1.320911,6.765445,5.838194,-0.568202,-8.565023,-7.904957,7.379194],[3.583188,2.950169,9.272667,-0.947112,7.918703,-5.564634,-0.419202,6.469274,-6.685455,3.833502,2.501536],[1.901613,5.938353,7.464359,-1.744341,-4.497514,5.083227,-5.354724,-4.776284,2.866471,-7.814895,-8.902045],[6.496841,-8.520514,7.226037,3.249185,3.343350,-9.501948,4.891460,-4.931992,-2.891369,4.883096,-1.859693],[-3.362792,-5.579786,1.022261,-2.215151,-5.643047,9.808687,3.171268,-0.865085,1.716760,2.744590,-4.870949],[1.055597,-1.671790,-9.603624,0.274623,7.419147,8.901785,3.050469,-7.837276,-4.086745,5.093426,-5.274496],[-0.866792,-7.205203,-9.813131,-8.229383,-6.484118,6.675817,4.635948,-3.535754,-4.127073,9.022279,1.881386]],[[-8.720829,-3.468787,-5.789156,-9.153166,-0.268900,5.594358,-8.240205,-6.398774,6.226550,-3.012267,7.577788],[-5.101049,-5.754497,0.428195,-0.743408,-9.624862,3.089165,8.560041,4.136644,-0.920966,-5.930604,-1.940346],[3.503196,1.821264,1.956192,1.746629,-6.107623,-8.533300,-7.905852,-2.962733,-6.153390,-8.876578,3.788992],[-6.461669,5.409618,-2.966866,-3.494249,8.737244,1.572078,-8.688590,-8.503494,4.538439,5.098746,-2.584924],[6.531710,-3.626730,4.470123,7.922378,-7.804029,6.834737,-8.122240,-7.338005,-9.268697,-0.306079,-8.916090],[-6.796519,-2.880852,4.566376,7.324479,-9.312785,-7.833919,4.934724,7.913289,-2.600365,-6.146305,1.922168],[0.750597,1.652318,5.079727,2.963290,1.515296,8.913012,6.899054,9.716460,-0.608012,-2.162649,1.246073],[-4.641265,-3.487182,-5.850560,7.806018,-4.380525,6.247770,-6.408501,1.457797,2.490738,-3.888889,7.283937],[5.504692,-5.938994,-1.857235,6.779604,-8.484857,-2.906594,-6.971665,8.847987,-0.635676,8.025917,-1.148739],[8.439095,4.558422,-4.809205,9.509383,-8.210469,-3.594307,-8.353032,3.375574,-8.410774,7.209342,-2.811390],[-5.292105,7.759577,5.607429,-3.705893,4.309269,-5.327260,-1.134307,-6.201465,-5.398888,8.002739,5.611356]],[[7.719753,3.640626,0.786687,-4.359775,-2.863145,6.157581,5.273940,-8.712185,-9.416671,6.542322,2.590865],[5.555258,8.980243,-9.880766,6.615789,-0.155857,-9.034132,-4.987948,5.483308,8.870701,4.828946,7.601416],[-4.822422,5.688519,7.716345,4.241268,-0.290677,-1.154273,-3.598675,-0.996509,5.241137,-6.385178,-8.560426],[8.722979,2.349909,-5.513484,2.275156,9.365568,1.257109,0.672288,-5.553940,1.971917,7.842276,-7.420728],[-4.431980,2.401336,-2.367392,2.950997,5.454239,-5.349878,-1.468114,4.379544,-4.878409,0.933854,6.255250],[8.876973,9.971863,8.688806,-6.298801,-5.752451,-1.408587,-7.917281,4.378249,-6.323569,-6.661839,7.798725],[6.997496,1.960487,8.676145,9.908947,1.995493,-5.034864,-0.007067,5.360623,-6.974986,6.723173,-6.529433],[2.507140,-1.318884,-4.237188,-2.593989,8.508425,-8.753536,6.054676,1.251833,2.595056,0.038904,6.200584],[7.657031,7.340046,-3.519906,-9.842231,-2.247915,-8.567085,9.583487,-7.939177,-3.735271,5.010373,-9.553793],[-0.089079,-5.490267,-8.712748,-6.151367,6.331895,-5.478728,1.154690,0.077180,1.688734,7.478347,-9.361025],[-0.219863,-1.567241,-8.158727,-8.587096,-7.026453,-7.226219,-2.389291,5.669550,-9.354765,-7.475724,8.918711]],[[4.316585,6.211537,-0.073776,-5.812100,-9.010994,1.614021,6.203644,-4.388534,-8.980023,0.871646,7.897004],[3.963480,-1.305207,8.635762,1.563878,-4.195296,-4.769056,5.777446,-7.933300,1.099806,3.911484,9.169992],[1.834994,-0.278773,-9.881358,-0.185900,0.824761,-5.338460,-6.115869,-2.235405,-6.695053,-5.556881,-0.017601],[-3.959665,-8.246714,6.939658,-3.561705,-2.704792,7.741232,-4.479463,-0.949476,9.607011,-5.789793,2.822309],[-5.479661,-7.138923,-3.155361,9.695567,6.298074,8.630835,2.150111,4.009814,1.573700,8.642333,-8.159583],[7.362242,5.749599,-2.533710,-8.339418,-0.924426,1.137531,-2.839595,9.398259,-5.388637,0.588412,-2.264859],[3.969134,-3.919991,-4.639659,9.715037,4.435719,1.359878,2.241314,1.332068,-1.697066,-9.985955,-0.313456],[0.658137,-7.772933,-0.431363,-6.932404,5.796796,-4.397113,-1.370626,6.498805,1.786869,-3.892500,2.463516],[-2.126598,-3.647007,-2.309341,-9.985905,4.135151,3.795277,-6.905981,6.091035,-4.160767,-8.650977,-2.605999],[1.200114,-7.071379,0.156323,-3.085104,-9.210366,8.787949,5.807956,-2.097018,-8.739349,0.771764,4.792911],[-4.814405,-3.179539,1.501627,9.473232,-0.606354,-3.859434,-2.744733,7.558406,-9.187618,4.801576,-9.808389]],[[-1.126845,4.832860,-9.137075,-5.825781,-8.356132,-3.494597,0.693338,6.079693,-4.762141,-5.871112,-1.760248],[-4.657958,4.713560,1.494730,-6.461580,2.527892,-0.946554,9.386130,0.405845,1.989295,-2.419405,7.502614],[0.091386,8.489963,-9.965643,-4.835297,-5.921765,-3.524095,-3.437945,-7.764096,-0.552595,3.018160,-4.677143],[2.584999,-2.921238,8.318477,0.828871,-5.897489,2.894863,-8.827674,4.371809,-7.680902,9.027650,5.467505],[6.517548,-0.032923,8.442023,-6.589858,-8.458402,-7.175234,-9.348098,-3.177888,-0.949792,1.342573,-2.028785],[9.932892,-3.201297,6.098597,-8.465584,2.878773,-1.022778,4.784285,9.886311,-1.990876,-6.476741,-6.889783],[-4.584134,-9.158472,-1.465184,1.154479,1.397062,-6.328443,-3.788653,9.939837,6.131047,-5.495261,-5.578007],[7.604451,-4.003945,8.200904,-2.592177,6.267842,-8.295889,0.223355,4.808617,2.956779,9.468558,2.228989],[3.345820,0.242885,6.163725,3.240960,6.324651,-3.273896,-6.099031,-7.027127,2.109680,3.408949,4.536460],[-4.068567,8.266456,8.389091,-0.460588,9.872172,6.451477,-7.493744,-3.369871,-0.481186,-6.390146,2.145017],[4.882638,-5.739119,-9.471170,-0.488699,-8.670651,-8.756213,9.266608,1.886119,-1.116616,9.031416,7.641460]],[[1.915866,9.307764,4.209625,-3.922281,-0.231275,6.238972,-1.062747,9.797050,7.128883,-2.152763,2.946888],[-8.710617,6.748606,4.889536,-6.436211,-2.666536,8.601533,-5.842426,8.717992,1.363541,-7.147285,-2.926428],[-5.080683,0.053006,-3.341275,-7.961843,2.128004,-7.738097,7.536704,-9.378409,-6.631564,2.285916,-5.601018],[-0.242122,-2.761925,-5.239577,-2.831913,-1.120666,-1.749139,9.622328,7.660290,-0.794775,-5.952191,7.934379],[3.116861,3.845618,-7.312901,2.970241,-1.821227,-4.153411,9.617787,2.082604,-8.796137,9.105417,-2.586621],[2.438807,-4.107129,-3.592632,-1.606658,-4.501226,5.279760,2.417979,1.930935,6.511807,-2.685446,-3.763454],[-8.025152,-8.731575,0.435980,8.904322,-2.620602,4.265136,-5.386234,6.962546,3.324119,-3.013223,5.572901],[-2.854344,-7.639208,6.824042,-8.854140,0.375937,5.846686,8.212403,9.578063,-0.782138,0.727700,-8.666425],[-7.462345,-3.949041,1.077518,-0.457597,-6.512554,7.386663,-3.640248,3.669306,7.664457,7.218231,-9.878345],[4.753153,3.613682,0.265871,-1.418458,8.208380,0.816624,-8.347687,-5.664104,-9.164535,-9.439830,-6.617292],[-1.919737,0.071531,-3.602376,-0.230990,4.518453,-7.145291,-5.088522,0.654527,8.304880,7.026237,-6.154708]],[[4.294033,-7.960858,4.356353,-0.933564,-5.422620,1.048683,-2.946470,-1.247038,9.446001,-2.643986,9.731269],[1.679423,5.293732,8.639532,-6.488524,9.035544,-7.013133,6.464799,-1.752392,8.056211,-1.207807,-5.252458],[-6.094069,5.382740,-2.275211,9.181004,-8.861519,-8.557284,8.926689,-5.174048,9.059369,-3.225422,-2.625214],[7.477020,0.971314,4.673198,9.802032,-9.027942,-6.800633,1.080814,7.907081,-1.512924,-8.255063,-2.058490],[-2.263716,9.264698,-9.691071,-6.672336,3.057070,8.878912,-3.431373,-0.456334,-4.051993,-5.812986,-2.810994],[0.083086,-2.873018,-9.767344,-6.042561,4.478111,4.978504,-0.023123,-5.909645,-8.489465,-5.969772,-9.579007],[-8.261451,-6.182578,0.635859,-8.149823,4.221669,4.085246,8.888669,-0.756533,-9.531291,3.976604,-1.559393],[2.382934,-2.548580,-5.824992,4.982733,1.078990,6.953233,-6.559307,-5.622051,-8.144186,-5.281465,-4.167795],[3.759250,2.965203,-6.551296,-0.755476,-5.462670,8.537380,6.840464,9.327503,-9.568679,6.320525,1.547323],[-7.302774,-9.773966,8.488125,-9.657320,-7.306703,-4.461256,-8.995543,-0.501519,7.632775,-6.258084,7.605916],[-2.415891,4.405587,-3.340410,-6.104015,-8.497950,7.074726,0.427920,-5.443160,-3.413310,-6.353188,-6.118333]],[[0.192049,8.632756,-6.848448,8.344242,6.835084,-1.409441,-0.413710,1.234368,-4.636416,9.068847,-3.508186],[-7.622341,0.389507,-5.085791,9.206503,-2.139512,5.906619,4.631923,1.999154,-3.095737,-0.932115,4.695040],[7.009515,0.047634,7.436405,8.015501,-5.141149,-7.832071,0.260524,0.675808,5.845255,3.207750,0.496563],[-2.823488,-8.684101,9.278512,-7.185155,6.049118,-8.785277,5.475752,-5.302366,6.597633,7.185720,-3.543228],[-3.515205,1.537376,4.495650,2.019866,-9.087053,6.479605,-1.708913,1.853242,-9.971217,-8.244844,-6.674331],[-8.720430,-3.502648,6.177385,9.938519,-0.597264,1.525417,1.049908,4.765441,0.161206,7.143405,-9.024348],[3.481254,-6.326195,-2.915280,-8.676520,-4.103781,9.970419,5.932072,-2.656229,-9.778175,-2.248706,3.737798],[-1.491808,-0.030245,-5.584589,7.867077,5.644256,-8.901879,-2.870055,-2.581432,7.190791,2.097502,-9.635424],[2.783539,6.436835,9.471490,9.822311,6.131555,9.869714,3.034220,1.095370,-0.505854,-2.284128,-3.676912],[-9.498429,4.300410,-3.276561,-6.955827,1.037984,0.623535,-9.994810,0.396448,7.441035,9.827504,-5.881230],[-5.742186,1.018844,7.514012,-2.594158,-8.722674,-8.810914,-9.627531,-1.121088,0.177832,6.673657,-7.852997]],[[-1.360958,7.082125,1.874981,-9.936837,-3.401887,9.458765,-8.769490,3.021969,1.818681,3.602992,9.897300],[-1.243753,-6.205021,-4.991160,-8.491760,9.549821,-3.478520,0.610513,-2.754925,9.483302,-8.088051,-6.501010],[3.383172,8.092758,-0.944190,8.808228,0.360184,0.668875,6.328952,5.333172,9.062699,-9.627612,9.853330],[4.618931,-8.985487,-1.037464,4.366125,1.189006,-9.959587,8.884343,7.465428,7.593393,-0.579246,-4.765738],[-6.767735,-1.053059,4.383015,6.788844,-9.302761,-6.149761,7.020959,9.500565,2.473534,-7.217590,-7.313516],[-0.809345,-5.563693,-5.483439,6.178888,-2.467593,-6.602695,4.114991,-7.800051,-1.684708,3.976377,7.781139],[-5.718609,4.247339,3.410606,6.158795,-2.032419,3.448154,7.354247,1.025163,-5.061418,-9.205318,-9.815566],[-0.546524,-6.487084,2.456808,2.016062,5.527916,-9.722901,-4.876510,-1.996845,3.728822,1.922825,5.955576],[-4.511197,3.840917,-9.520289,5.884077,7.619488,4.579097,-9.069225,2.434255,2.153777,4.808881,-8.075926],[2.234714,-7.603808,9.064294,8.534080,-1.969928,5.138188,7.321047,-2.785868,7.773553,-7.824826,7.653311],[8.350304,4.668480,0.454120,-2.047077,-6.491120,-6.600355,-6.431534,-4.375559,-1.704910,2.692965,4.587827]]], dtype = "float32")#candidate|8412|(10, 11, 11)|const|float32
uop_8413 = relay.sin(const_8412.astype('float32')) # shape=(10, 11, 11)
func_4967_call = mod.get_global_var('func_4967')
func_4969_call = mutated_mod.get_global_var('func_4969')
call_8420 = relay.TupleGetItem(func_4967_call(), 0)
call_8421 = relay.TupleGetItem(func_4969_call(), 0)
output = relay.Tuple([uop_8413,call_8420,])
output2 = relay.Tuple([uop_8413,call_8421,])
func_8444 = relay.Function([], output)
mod['func_8444'] = func_8444
mod = relay.transform.InferType()(mod)
mutated_mod['func_8444'] = func_8444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8444_call = mutated_mod.get_global_var('func_8444')
call_8445 = func_8444_call()
output = call_8445
func_8446 = relay.Function([], output)
mutated_mod['func_8446'] = func_8446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3878_call = mod.get_global_var('func_3878')
func_3880_call = mutated_mod.get_global_var('func_3880')
call_8462 = relay.TupleGetItem(func_3878_call(), 0)
call_8463 = relay.TupleGetItem(func_3880_call(), 0)
func_5132_call = mod.get_global_var('func_5132')
func_5135_call = mutated_mod.get_global_var('func_5135')
var_8574 = relay.var("var_8574", dtype = "bool", shape = (180,))#candidate|8574|(180,)|var|bool
call_8573 = relay.TupleGetItem(func_5132_call(relay.reshape(var_8574.astype('bool'), [4, 3, 15])), 0)
call_8575 = relay.TupleGetItem(func_5135_call(relay.reshape(var_8574.astype('bool'), [4, 3, 15])), 0)
output = relay.Tuple([call_8462,call_8573,var_8574,])
output2 = relay.Tuple([call_8463,call_8575,var_8574,])
func_8579 = relay.Function([var_8574,], output)
mod['func_8579'] = func_8579
mod = relay.transform.InferType()(mod)
mutated_mod['func_8579'] = func_8579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8580 = relay.var("var_8580", dtype = "bool", shape = (180,))#candidate|8580|(180,)|var|bool
func_8579_call = mutated_mod.get_global_var('func_8579')
call_8581 = func_8579_call(var_8580)
output = call_8581
func_8582 = relay.Function([var_8580], output)
mutated_mod['func_8582'] = func_8582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7408_call = mutated_mod.get_global_var('func_7408')
call_8603 = func_7406_call()
call_8604 = func_7406_call()
output = relay.Tuple([call_8603,])
output2 = relay.Tuple([call_8604,])
func_8622 = relay.Function([], output)
mod['func_8622'] = func_8622
mod = relay.transform.InferType()(mod)
output = func_8622()
func_8623 = relay.Function([], output)
mutated_mod['func_8623'] = func_8623
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8665 = relay.const(9, dtype = "uint16")#candidate|8665|()|const|uint16
var_8666 = relay.var("var_8666", dtype = "uint16", shape = (4, 1, 9))#candidate|8666|(4, 1, 9)|var|uint16
bop_8667 = relay.greater_equal(const_8665.astype('bool'), var_8666.astype('bool')) # shape=(4, 1, 9)
bop_8677 = relay.bitwise_xor(const_8665.astype('uint32'), var_8666.astype('uint32')) # shape=(4, 1, 9)
uop_8686 = relay.log(bop_8667.astype('float32')) # shape=(4, 1, 9)
output = relay.Tuple([bop_8677,uop_8686,])
output2 = relay.Tuple([bop_8677,uop_8686,])
F = relay.Function([var_8666,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8666,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_461 = relay.var("var_461", dtype = "float64", shape = (1, 14, 13))#candidate|461|(1, 14, 13)|var|float64
uop_462 = relay.atanh(var_461.astype('float64')) # shape=(1, 14, 13)
uop_464 = relay.log(uop_462.astype('float64')) # shape=(1, 14, 13)
output = relay.Tuple([uop_464,])
output2 = relay.Tuple([uop_464,])
func_471 = relay.Function([var_461,], output)
mod['func_471'] = func_471
mod = relay.transform.InferType()(mod)
mutated_mod['func_471'] = func_471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_472 = relay.var("var_472", dtype = "float64", shape = (1, 14, 13))#candidate|472|(1, 14, 13)|var|float64
func_471_call = mutated_mod.get_global_var('func_471')
call_473 = func_471_call(var_472)
output = call_473
func_474 = relay.Function([var_472], output)
mutated_mod['func_474'] = func_474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_502 = relay.var("var_502", dtype = "float64", shape = (4, 15, 2))#candidate|502|(4, 15, 2)|var|float64
const_503 = relay.const([[[-3.054084,6.310344],[8.958526,-8.403107],[4.376277,-7.268585],[-1.923185,-5.370704],[-0.507727,5.088849],[-4.054658,9.125000],[-7.051361,3.456594],[3.388904,8.843961],[1.339470,-1.961158],[6.028128,5.225022],[-3.341732,-5.552183],[0.342186,-5.767017],[-5.523985,-3.712126],[2.010570,-6.666290],[4.523687,-1.705058]],[[3.842105,-3.075277],[-4.922495,6.756780],[-0.968322,-8.696425],[-4.975105,2.671759],[-8.198792,3.090349],[8.583631,5.006874],[3.208623,-2.540334],[6.623388,-6.372799],[-4.721310,-2.291775],[4.500590,-5.037312],[-2.293311,-2.675015],[-9.814743,-9.655359],[-1.413766,4.515688],[4.341100,-8.027189],[6.444551,-1.846173]],[[-4.342197,9.780074],[8.595564,1.658944],[3.832630,-5.598734],[4.227391,7.730733],[-3.815672,-8.947864],[5.360642,-3.003275],[-5.478511,-7.754205],[-4.215558,-4.048822],[7.371760,4.202928],[2.143146,1.467983],[9.759174,3.907359],[-4.058750,-7.995056],[-2.030822,7.531891],[-5.398069,6.410314],[0.712435,-5.540941]],[[-1.271182,-1.553147],[-7.833303,-0.035654],[-9.569052,2.177142],[-7.656979,-1.950732],[3.132224,8.674341],[7.905395,9.005823],[4.634847,-2.938028],[-3.491103,-4.540042],[-5.897776,-3.944215],[-9.104843,-1.708902],[-7.939608,-4.054463],[-4.709096,-3.669647],[6.604337,-6.385387],[-3.710144,7.479329],[-4.435519,-0.963330]]], dtype = "float64")#candidate|503|(4, 15, 2)|const|float64
bop_504 = relay.divide(var_502.astype('float64'), relay.reshape(const_503.astype('float64'), relay.shape_of(var_502))) # shape=(4, 15, 2)
output = bop_504
output2 = bop_504
func_508 = relay.Function([var_502,], output)
mod['func_508'] = func_508
mod = relay.transform.InferType()(mod)
var_509 = relay.var("var_509", dtype = "float64", shape = (4, 15, 2))#candidate|509|(4, 15, 2)|var|float64
output = func_508(var_509)
func_510 = relay.Function([var_509], output)
mutated_mod['func_510'] = func_510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_728 = relay.var("var_728", dtype = "float64", shape = (4, 5, 14))#candidate|728|(4, 5, 14)|var|float64
const_729 = relay.const([[[9.452420,-1.022072,-3.871108,-5.851468,-8.463300,-0.994611,2.948512,-6.310836,-4.122247,-7.199298,-3.906561,6.326356,-5.724310,3.335731],[3.412336,-7.757633,9.168556,6.947543,-0.564091,4.831732,0.300457,9.092670,1.934878,6.261455,1.753243,-8.112556,-3.356617,9.424344],[0.868645,-4.851828,3.848747,5.420793,6.118273,-2.100554,-3.152453,-1.463161,3.984369,-5.000998,5.591157,9.464370,6.748612,-7.885060],[1.124225,-9.250612,-6.352113,9.909680,-8.104442,6.737211,-2.086942,0.988625,3.381670,-2.451816,8.151053,7.108669,-3.391945,-7.619442],[-8.347428,4.747590,-6.176084,-8.020241,-2.725207,2.948279,-0.697959,-9.737850,-0.409264,-2.839131,-0.640216,5.754875,3.552112,-9.886560]],[[3.667147,-5.616549,-2.139068,5.711454,8.721873,0.678205,1.214159,-5.879319,4.008398,-7.848264,-1.988180,7.419841,6.590831,9.646528],[6.424394,-1.265581,-9.650386,-6.427431,3.510058,8.368959,8.706280,-4.350249,4.655447,6.106676,-1.323137,4.204892,-7.871465,5.797335],[0.484799,-3.006438,-9.340486,0.745647,6.988451,1.350650,2.470879,-1.623379,-7.462853,7.563773,0.518807,-6.260611,0.023517,5.476255],[6.040071,2.420678,6.203365,3.211492,2.727961,-0.912501,8.476816,9.408156,-3.966193,9.246325,-3.724055,0.516522,6.078393,9.971336],[8.623410,-3.351280,5.365717,5.198037,-6.598891,8.462168,6.667872,-7.366212,3.261185,9.175690,2.237806,-9.444002,3.330054,-2.578566]],[[-8.255536,4.156988,-0.562497,-3.985948,-0.837495,-5.170039,-4.501806,-7.771303,4.813003,-9.368143,-6.525682,-8.691871,0.432754,0.829155],[-1.444938,2.258262,-3.594616,-8.088835,9.822678,-3.200468,-0.056708,-9.948777,-7.652236,-1.586221,9.297864,8.030639,-0.212674,-8.302094],[-8.505753,1.685799,7.123952,0.024610,0.356067,-3.559609,-5.136534,-3.870233,0.675217,-2.242994,8.465070,6.556952,6.867850,-9.764164],[-1.394251,8.187195,3.870539,-7.759250,-6.018239,-1.185851,9.565668,-2.823609,5.184314,8.757796,0.702913,2.122085,-9.330528,3.952927],[4.048601,-5.522394,-2.104545,-2.337008,-6.809580,-4.565020,2.427430,-4.723831,1.717048,-4.675972,-3.726682,8.162308,9.702667,-3.474453]],[[6.755466,-1.586732,-7.138670,8.142923,-6.187765,-9.318705,-2.061722,2.241077,5.692847,-8.811794,-0.507509,7.560057,-4.915106,-5.034763],[4.454196,-3.270522,6.170538,1.377523,2.884376,-5.833291,3.911079,-3.073957,-0.604451,1.938670,3.936116,-7.268228,-6.210577,-1.387000],[1.756392,8.638871,-7.916016,1.004172,-9.999550,5.121655,2.174557,0.597917,-7.699694,-1.119166,-1.677204,-0.414887,-2.429075,2.941584],[-7.214028,6.249667,5.990139,4.884215,-0.892716,4.344163,1.498578,-0.564674,-4.340139,4.687546,2.027985,6.920219,2.709432,-2.404023],[1.081303,6.212893,5.237314,0.102498,4.736426,-8.580220,0.275372,-0.797935,-5.393446,-7.909119,-7.450053,5.966732,8.108926,1.471633]]], dtype = "float64")#candidate|729|(4, 5, 14)|const|float64
bop_730 = relay.mod(var_728.astype('float64'), relay.reshape(const_729.astype('float64'), relay.shape_of(var_728))) # shape=(4, 5, 14)
var_744 = relay.var("var_744", dtype = "float64", shape = (4, 5, 14))#candidate|744|(4, 5, 14)|var|float64
bop_745 = relay.bitwise_or(var_728.astype('int64'), relay.reshape(var_744.astype('int64'), relay.shape_of(var_728))) # shape=(4, 5, 14)
output = relay.Tuple([bop_730,bop_745,])
output2 = relay.Tuple([bop_730,bop_745,])
func_757 = relay.Function([var_728,var_744,], output)
mod['func_757'] = func_757
mod = relay.transform.InferType()(mod)
mutated_mod['func_757'] = func_757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_757_call = mutated_mod.get_global_var('func_757')
var_759 = relay.var("var_759", dtype = "float64", shape = (4, 5, 14))#candidate|759|(4, 5, 14)|var|float64
var_760 = relay.var("var_760", dtype = "float64", shape = (4, 5, 14))#candidate|760|(4, 5, 14)|var|float64
call_758 = func_757_call(var_759,var_760,)
output = call_758
func_761 = relay.Function([var_759,var_760,], output)
mutated_mod['func_761'] = func_761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_865 = relay.var("var_865", dtype = "float64", shape = (5, 14, 13))#candidate|865|(5, 14, 13)|var|float64
var_866 = relay.var("var_866", dtype = "float64", shape = (5, 14, 13))#candidate|866|(5, 14, 13)|var|float64
bop_867 = relay.equal(var_865.astype('bool'), relay.reshape(var_866.astype('bool'), relay.shape_of(var_865))) # shape=(5, 14, 13)
output = bop_867
output2 = bop_867
func_874 = relay.Function([var_865,var_866,], output)
mod['func_874'] = func_874
mod = relay.transform.InferType()(mod)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_874_call = mutated_mod.get_global_var('func_874')
var_876 = relay.var("var_876", dtype = "float64", shape = (5, 14, 13))#candidate|876|(5, 14, 13)|var|float64
var_877 = relay.var("var_877", dtype = "float64", shape = (5, 14, 13))#candidate|877|(5, 14, 13)|var|float64
call_875 = func_874_call(var_876,var_877,)
output = call_875
func_878 = relay.Function([var_876,var_877,], output)
mutated_mod['func_878'] = func_878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1040 = relay.var("var_1040", dtype = "uint8", shape = (6, 9, 13))#candidate|1040|(6, 9, 13)|var|uint8
var_1041 = relay.var("var_1041", dtype = "uint8", shape = (6, 9, 13))#candidate|1041|(6, 9, 13)|var|uint8
bop_1042 = relay.not_equal(var_1040.astype('bool'), relay.reshape(var_1041.astype('bool'), relay.shape_of(var_1040))) # shape=(6, 9, 13)
func_874_call = mod.get_global_var('func_874')
func_878_call = mutated_mod.get_global_var('func_878')
const_1052 = relay.const([1.008325,-2.100276,7.474726,4.008119,1.503603,5.144570,6.253842,1.312823,-8.073387,-3.915075,-4.479093,1.957596,-8.641314,-3.690748,-0.775777,3.983269,7.083096,-8.835765,-5.181265,-8.062985,-6.018446,5.206281,9.976810,8.865094,9.874379,-6.428976,5.274550,-7.972465,-8.767807,0.041704,1.717924,-6.509292,5.433476,9.166363,2.937463,0.579041,0.202511,7.918323,8.347285,-0.721614,-6.183669,-5.448007,7.607918,4.795590,4.630133,-6.418572,4.085966,3.049714,9.379801,-5.624620,-5.029058,-6.718776,5.666327,5.276568,3.394020,0.490836,-7.952084,0.622236,-1.945705,6.224979,-9.595854,-9.971086,6.163442,-6.435752,5.277983,0.645977,-0.637923,9.494427,5.121241,-2.009581,7.092340,-7.882878,9.184285,8.119504,-1.540592,5.125636,-2.294289,-9.127797,3.657102,-6.476945,0.331584,-0.326434,-7.347108,7.144427,-8.309404,-7.347130,1.928403,-2.952043,-9.745457,4.404230,-0.039191,6.583690,-3.683766,-1.710498,-8.050574,-7.700628,-6.913915,0.417667,7.923925,-2.691494,-7.719870,7.870667,6.745420,-4.421003,2.002449,-3.843054,-9.285922,-4.314029,2.833908,-1.438494,3.788275,-1.446695,-8.336909,-5.595272,-1.280299,5.460684,9.942339,6.506626,-2.966115,8.443230,7.794609,-1.452427,1.542630,-9.559147,9.842603,5.113551,-6.177099,6.806945,7.326062,-5.473291,-8.014188,5.821792,-2.267821,5.861384,-9.466543,-3.662425,-8.099674,-7.617421,2.979257,5.748792,5.621167,3.187554,-5.499474,-3.388578,2.743047,6.496119,4.791021,7.391540,3.126147,-2.964336,1.267019,2.033576,8.318828,-1.863269,0.967750,-8.136046,-9.733850,-3.784357,-9.430672,-7.281734,2.180372,6.607717,-6.156841,-5.557133,9.176758,-7.430471,3.403661,4.841895,6.995243,5.337226,2.213800,2.762587,0.846241,-6.389874,0.068843,0.643527,-0.797231,5.627424,-6.632673,7.631076,-8.944564,-8.064978,4.601265,4.646972,7.470785,3.381468,-3.803385,-5.478296,-8.156223,6.104331,-3.821098,-5.635842,4.425626,8.388555,0.614156,-4.102589,-0.267455,0.877415,-3.287092,-6.261513,8.737736,-6.349233,2.526775,-2.278248,5.698491,4.803887,-5.800910,-5.343389,8.668680,4.277743,-9.596736,-9.272488,8.016342,6.524357,-1.874474,9.122965,5.686325,9.476919,3.948620,5.286325,6.627135,-7.167382,-2.099856,-4.951832,-4.181884,4.384799,7.739937,-0.504455,3.553849,-7.718737,4.410199,-7.127861,3.244530,1.176966,3.467864,8.158143,7.138647,-3.861260,-1.089191,6.053092,4.338087,-7.512194,1.122332,9.358577,-5.677383,-7.716451,2.547400,-2.449973,5.926507,1.553605,-6.969015,0.747123,-7.869178,-6.449042,-9.112016,-5.169076,-4.880797,-5.904273,5.286152,-7.819725,4.294252,0.135150,6.964972,0.537338,-0.437415,5.933196,0.612822,-0.568068,2.190585,7.269941,4.863335,8.007426,-7.340047,2.156802,9.729291,3.097310,-7.334213,1.580398,-1.439595,-9.245211,-1.923192,-5.244021,9.716005,2.250255,5.822429,-3.118147,-7.334850,-9.532537,-3.638422,-9.389520,8.294396,-7.730970,7.862231,-4.183382,5.931286,-4.675982,-3.401663,2.505900,2.755900,-2.878722,0.223853,7.567475,-1.761640,-8.868690,6.445240,-6.662509,-5.383893,4.820473,4.324230,-0.099211,-3.751393,-2.109334,9.028007,-2.136807,-5.524863,9.561734,-2.855908,-1.574597,-8.100369,1.902822,5.427747,-0.382418,-7.799931,6.512955,0.052802,-7.617382,-6.863619,8.462274,1.372691,4.056827,-6.952197,0.375161,4.419639,-0.102093,7.450532,-5.515663,8.766821,-3.294054,-7.188326,2.453773,5.930587,6.979172,-6.838982,4.132002,3.371360,-5.415662,1.102060,-2.312207,9.768731,-1.880271,-9.350256,0.135507,-3.281020,5.154788,-0.828329,-5.695222,5.143104,0.063359,-4.398890,7.896485,4.603614,-5.945833,1.936994,-1.100369,4.752103,3.886705,6.933659,6.536274,7.001620,-0.318819,-5.089812,9.311565,-4.261962,4.888237,-9.133018,-7.052036,-4.226751,-3.971243,0.450673,-2.535270,-4.956558,-0.076740,2.380673,8.902960,4.844455,-4.016509,-5.462489,4.700595,-4.525442,-0.985748,2.623370,1.534269,5.028382,8.883161,-2.340464,4.540638,-9.109453,-7.372230,8.655037,-2.513734,9.851583,-8.881737,-0.851643,-5.417099,2.673476,2.110600,-0.566860,-2.814913,1.898695,-3.350345,-0.054570,-6.406753,-6.835292,-6.802352,-2.914243,-0.435768,3.846909,9.583819,-9.815295,-5.457825,-5.287667,-1.563286,-2.094754,-2.161608,-8.343081,7.449978,-5.284335,9.344405,-1.925791,3.105328,-9.699593,-3.923446,-2.177715,-1.846923,-3.144286,-7.803402,-5.142704,1.166635,-5.339908,-6.831587,-9.286755,6.102405,0.407915,1.878565,-8.242561,-2.157501,-2.450633,-4.114647,4.022970,3.614960,4.714242,-6.932599,-5.327694,3.234963,-0.986748,-7.806821,1.027513,2.132038,-9.493262,8.501932,7.867139,-1.591162,-7.661977,9.806361,7.336336,3.595777,-6.635118,-9.975010,2.732661,8.515577,-6.582659,4.209103,7.451470,-7.074482,9.301902,-9.055596,-0.595725,9.035235,9.632958,-9.261319,2.943536,-2.755053,2.713626,7.600390,-3.788134,-8.845118,-1.203992,-2.527265,9.639997,5.398650,-9.898181,3.436248,-8.994832,-5.706456,3.955921,-4.301475,-4.073579,0.061150,-5.468379,3.294304,9.548463,5.348411,9.286999,-6.902021,-4.056381,5.137981,4.737941,3.652471,6.090468,-9.985434,-4.280979,-5.949503,4.335783,5.001452,-9.982734,-3.655248,-4.112931,3.779055,3.114650,-8.706757,9.873181,1.702304,0.640983,1.262752,-2.958512,3.575237,-9.750712,8.004572,1.618772,3.187993,6.669274,-6.751574,7.843499,0.417835,1.953570,6.900470,-9.408858,9.034028,3.151447,-6.868814,-1.554838,6.449688,0.719308,-6.450408,3.630156,-6.073614,8.320448,-3.265663,-4.651027,-7.740515,-0.386502,6.891590,-1.199793,-9.054983,6.462500,4.335511,-6.840508,-0.657921,9.262255,1.988507,4.971721,-3.778611,-2.629103,6.596714,-3.432745,-3.376993,7.616829,3.733254,-9.916751,-1.313489,0.984403,-0.545436,-8.014706,9.008550,4.629869,-9.583664,8.241435,-7.612798,9.094230,-9.908893,9.655573,-1.534106,-2.263256,-1.333386,2.925753,-6.103627,-1.961506,6.738729,-7.981477,-8.951511,7.627509,-3.653653,3.326458,-2.995616,-5.536335,4.445267,2.152836,1.366366,8.191821,-6.633139,-5.093508,9.741848,9.555133,3.563883,-1.436587,-4.052140,-8.876350,-8.680830,0.804994,-6.675006,4.012970,6.749922,-8.720369,4.049785,-2.299114,-0.236948,-0.324962,7.541887,-7.574948,8.284064,-1.079186,-8.622022,-0.970413,1.308479,8.211536,-8.810261,1.049367,4.867632,-9.705947,4.049004,7.504801,5.309787,-1.502762,9.072953,5.657399,6.485489,-4.549477,-0.460348,-8.068354,-3.604505,8.371627,-9.848126,-3.835142,-2.566727,-1.681906,1.765624,-6.651185,-6.433290,9.597856,1.989691,-5.148828,9.112433,1.127081,-0.459051,9.637791,5.390105,7.829970,1.410951,-8.974420,-7.300624,3.578845,-5.639783,-9.016473,-9.669206,-5.409252,-4.219551,-0.579062,-3.183528,4.522906,5.784569,3.830951,9.171476,2.906018,2.789609,1.442697,-7.781454,8.031833,-2.714857,8.600719,-1.457752,-6.204935,5.839416,-1.370751,-8.338136,-3.193453,-6.427991,7.060340,-2.736079,-8.312260,-3.606066,1.169973,-2.133626,8.973193,-5.707911,-6.738240,-1.540077,2.968529,5.739057,2.218381,8.564982,-4.893028,-4.513384,7.236106,-5.487502,-0.470834,8.050384,1.496775,-6.612666,-3.928702,-8.058465,8.590072,-6.174841,-3.776487,-8.866944,1.320094,4.870103,5.475155,7.913788,-1.507621,-6.087023,-3.602987,-0.511770,-4.413267,-6.603393,4.920213,8.970346,-6.001680,8.271431,6.892239,-7.210048,9.079479,-4.766362,4.761012,7.360324,0.422698,-0.736911,-0.663954,-2.712737,-7.014687,8.903270,7.908057,-1.127439,-7.513615,-5.292581,-2.829518,5.158500,-7.612540,-5.057670,1.505574,8.854618,-5.457729,1.027569,-1.720352,1.786649,-2.829591,-5.308462,5.692908,3.642849,-6.908648,1.235419,3.646882,-8.441010,7.771174,8.615120,-7.044059,6.731883,5.220860,9.995381,-7.486190,-7.187780,-9.255804,-8.379320,2.943223,6.420512,2.127913,-2.780484,6.462404,-7.134012,-3.729973,-7.944974,-9.004184,3.116868,-2.929630,3.103636,6.039274,6.370786,-1.136381,2.042142,-7.115298,2.268618,2.150955,-4.206967,-8.233258,1.806422,-7.253681,-5.343910,-5.577149,-5.749888,-4.776780,1.376386,4.803663,7.341894,2.384673,-5.435834,-1.325656,8.402246,0.017013,-5.435713,8.862122,-0.775246,0.947673,-7.921065,-8.139544,-3.296237,8.464662,-9.657746,4.789112,-3.233108,-5.832047,-1.202321,5.317705,4.147595,1.396666,-5.397534,5.223007,-2.591095,5.247299,-3.063950,-7.658150,5.984743,1.200461,-9.664140,3.345954,4.019428,0.926530,-6.933739,0.323184,-3.041706,-1.921018,1.515279,1.726647,-5.905456,7.707141,2.158593,-6.750846,7.106417,-0.401587,-4.665769,-6.463606,-7.555786,0.766980,-4.750433,-4.094573,9.523474,-1.567466,-5.999584,-1.242351,-1.858744,-6.865860,0.375998,-0.672557,-9.386543,6.625149,6.654746,-9.260586,2.066477,-2.575142,-3.728645,-4.211972,2.978340,2.155215,5.594758,8.076435,0.328894,9.273550,-8.998806,5.729165,-8.831639,7.729532,-7.263667,8.419575,1.124423,-7.204535,-0.764874,8.482493,5.004915,-4.673932,-0.547610,-3.572529,1.096946,1.321292,-5.265649,-6.072736,1.996440,-3.524612,2.671039,1.131461,0.683524,-8.691928,6.725413,-7.184287,-3.290636,0.141321,-5.253057,-4.972421,9.226924,8.038998,-9.666671,-4.952360,1.026059], dtype = "float64")#candidate|1052|(910,)|const|float64
call_1051 = func_874_call(relay.reshape(const_1052.astype('float64'), [5, 14, 13]), relay.reshape(const_1052.astype('float64'), [5, 14, 13]), )
call_1053 = func_874_call(relay.reshape(const_1052.astype('float64'), [5, 14, 13]), relay.reshape(const_1052.astype('float64'), [5, 14, 13]), )
output = relay.Tuple([bop_1042,call_1051,const_1052,])
output2 = relay.Tuple([bop_1042,call_1053,const_1052,])
func_1056 = relay.Function([var_1040,var_1041,], output)
mod['func_1056'] = func_1056
mod = relay.transform.InferType()(mod)
var_1057 = relay.var("var_1057", dtype = "uint8", shape = (6, 9, 13))#candidate|1057|(6, 9, 13)|var|uint8
var_1058 = relay.var("var_1058", dtype = "uint8", shape = (6, 9, 13))#candidate|1058|(6, 9, 13)|var|uint8
output = func_1056(var_1057,var_1058,)
func_1059 = relay.Function([var_1057,var_1058,], output)
mutated_mod['func_1059'] = func_1059
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1123 = relay.var("var_1123", dtype = "float32", shape = (7, 6, 8))#candidate|1123|(7, 6, 8)|var|float32
var_1124 = relay.var("var_1124", dtype = "float32", shape = (7, 6, 8))#candidate|1124|(7, 6, 8)|var|float32
bop_1125 = relay.power(var_1123.astype('float32'), relay.reshape(var_1124.astype('float32'), relay.shape_of(var_1123))) # shape=(7, 6, 8)
bop_1130 = relay.greater(var_1124.astype('bool'), relay.reshape(bop_1125.astype('bool'), relay.shape_of(var_1124))) # shape=(7, 6, 8)
func_471_call = mod.get_global_var('func_471')
func_474_call = mutated_mod.get_global_var('func_474')
var_1134 = relay.var("var_1134", dtype = "float64", shape = (182,))#candidate|1134|(182,)|var|float64
call_1133 = relay.TupleGetItem(func_471_call(relay.reshape(var_1134.astype('float64'), [1, 14, 13])), 0)
call_1135 = relay.TupleGetItem(func_474_call(relay.reshape(var_1134.astype('float64'), [1, 14, 13])), 0)
uop_1137 = relay.atanh(var_1123.astype('float64')) # shape=(7, 6, 8)
uop_1157 = relay.asin(uop_1137.astype('float64')) # shape=(7, 6, 8)
uop_1169 = relay.acos(uop_1157.astype('float64')) # shape=(7, 6, 8)
output = relay.Tuple([bop_1130,call_1133,var_1134,uop_1169,])
output2 = relay.Tuple([bop_1130,call_1135,var_1134,uop_1169,])
func_1172 = relay.Function([var_1123,var_1124,var_1134,], output)
mod['func_1172'] = func_1172
mod = relay.transform.InferType()(mod)
var_1173 = relay.var("var_1173", dtype = "float32", shape = (7, 6, 8))#candidate|1173|(7, 6, 8)|var|float32
var_1174 = relay.var("var_1174", dtype = "float32", shape = (7, 6, 8))#candidate|1174|(7, 6, 8)|var|float32
var_1175 = relay.var("var_1175", dtype = "float64", shape = (182,))#candidate|1175|(182,)|var|float64
output = func_1172(var_1173,var_1174,var_1175,)
func_1176 = relay.Function([var_1173,var_1174,var_1175,], output)
mutated_mod['func_1176'] = func_1176
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1216 = relay.const([[[-4,9,-1,-8],[4,-7,-5,5],[9,4,2,3],[8,10,-6,-7],[-5,2,9,-9],[5,-5,-2,-6],[8,10,-3,-4],[6,-6,-4,-5],[-9,-7,8,-1],[-3,-5,-9,-7],[-10,-9,-9,-5],[-6,-7,4,-1]],[[10,1,-3,1],[1,10,-7,-6],[-3,2,-9,7],[10,6,-6,6],[5,2,-10,-4],[8,-8,1,2],[3,6,-2,7],[-6,7,2,-8],[1,-4,6,1],[-2,-9,-4,-8],[4,9,8,-2],[-3,-6,2,-9]],[[-7,-3,1,-7],[2,-5,-6,3],[9,-9,-2,-1],[8,7,5,-3],[10,-5,8,3],[7,-8,3,4],[5,-8,2,1],[7,10,-5,4],[8,6,3,-8],[7,5,7,-1],[1,-9,-7,3],[-10,7,7,-1]],[[-3,1,-4,8],[2,1,-3,2],[-2,-8,-3,4],[-5,9,2,-5],[6,-3,-4,6],[-4,-5,-9,-10],[-8,-9,-9,-2],[-4,6,-2,-1],[8,3,-6,-10],[-5,-7,10,3],[-8,-8,-5,-3],[5,5,4,-8]],[[-1,-6,9,7],[-1,-6,4,10],[2,-8,10,6],[-1,-3,-8,-7],[1,5,-9,1],[7,-2,9,-10],[10,9,-9,7],[5,-5,2,-1],[-7,-2,9,8],[-3,6,2,4],[-5,-4,-10,-4],[-3,-8,-5,6]],[[7,10,-3,3],[-1,-9,-4,5],[-8,4,1,2],[9,7,-1,7],[4,6,-8,-5],[-8,1,9,-3],[-4,4,-7,7],[8,-1,10,-9],[-5,-2,-5,-3],[-9,-7,8,-7],[7,8,-10,9],[1,-9,7,-5]],[[-4,-7,-2,-10],[-3,-3,-6,-5],[-2,6,-8,-1],[6,1,-7,-8],[-5,-10,5,10],[-8,1,3,-7],[-1,-6,2,9],[7,-1,-8,5],[-6,-10,6,1],[5,6,-9,3],[-9,-8,-8,7],[1,-2,-9,-4]],[[-4,5,6,-2],[9,-1,2,-8],[-4,-10,-7,2],[8,-7,-2,1],[-5,6,2,6],[-7,-10,10,-9],[-6,1,-9,1],[6,4,9,4],[2,7,7,7],[-8,-2,-9,-7],[2,-8,8,6],[-7,1,-6,10]],[[-2,-5,-10,-2],[3,9,3,-7],[-1,-3,4,4],[-2,9,-10,7],[6,3,-4,4],[-7,9,8,-6],[-1,-9,-10,10],[2,9,6,5],[8,8,1,1],[-5,-1,-6,-4],[-5,4,8,9],[-3,1,4,1]],[[-4,-4,-1,4],[-7,10,1,10],[7,-3,-10,-6],[-9,-2,2,5],[-2,-10,5,-10],[-10,-6,6,-7],[4,9,-2,-6],[-1,6,-2,9],[3,9,-7,2],[1,8,-6,10],[5,-3,-4,10],[7,-1,8,-3]],[[1,-8,-2,6],[8,3,-9,3],[2,-2,7,4],[-7,-3,4,3],[1,-4,2,8],[-5,4,-6,9],[5,6,5,-7],[4,-7,-7,4],[4,3,-9,5],[-4,10,-8,-7],[2,6,-5,2],[-3,8,1,-10]],[[-1,10,5,-7],[-6,8,6,8],[1,9,-9,5],[-10,-3,-6,-8],[7,-8,5,9],[2,7,5,8],[-1,9,-8,1],[-7,10,9,-10],[-8,-9,6,6],[7,6,1,7],[-2,4,-3,9],[1,-5,9,-9]],[[6,4,7,-9],[-5,6,10,-10],[10,-2,8,4],[3,2,-5,-3],[-8,-2,-6,1],[8,7,-1,-2],[-10,-3,-8,-10],[6,-2,-4,1],[-1,8,6,9],[7,3,3,-8],[-2,3,-9,8],[6,6,7,3]],[[2,7,1,3],[-2,-7,-4,1],[-9,5,-7,3],[4,-3,-7,-1],[8,-9,4,8],[-2,2,-9,1],[7,-5,-10,-8],[-10,-7,9,-7],[6,5,-10,7],[-7,8,-1,-5],[-7,-5,-1,-1],[-5,-9,6,1]],[[-2,3,9,-3],[-8,4,2,-10],[-2,-5,-7,3],[3,-6,7,-3],[4,-2,8,3],[6,7,-9,-6],[3,1,6,-4],[5,9,7,-3],[-10,6,-2,-3],[-6,-6,-1,-3],[4,6,1,10],[-8,-10,-3,-6]],[[9,10,-10,-10],[7,-1,-10,3],[-2,5,-7,-9],[-8,-1,-1,-3],[-10,-2,9,-7],[9,7,4,-7],[-8,-8,-9,-3],[-6,-7,3,9],[-4,4,-2,2],[-8,-5,8,9],[-4,3,5,-2],[2,10,-9,7]]], dtype = "int8")#candidate|1216|(16, 12, 4)|const|int8
var_1217 = relay.var("var_1217", dtype = "int8", shape = (16, 12, 4))#candidate|1217|(16, 12, 4)|var|int8
bop_1218 = relay.less_equal(const_1216.astype('bool'), relay.reshape(var_1217.astype('bool'), relay.shape_of(const_1216))) # shape=(16, 12, 4)
output = relay.Tuple([bop_1218,])
output2 = relay.Tuple([bop_1218,])
func_1237 = relay.Function([var_1217,], output)
mod['func_1237'] = func_1237
mod = relay.transform.InferType()(mod)
var_1238 = relay.var("var_1238", dtype = "int8", shape = (16, 12, 4))#candidate|1238|(16, 12, 4)|var|int8
output = func_1237(var_1238)
func_1239 = relay.Function([var_1238], output)
mutated_mod['func_1239'] = func_1239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1338 = relay.var("var_1338", dtype = "uint32", shape = (2, 7, 14))#candidate|1338|(2, 7, 14)|var|uint32
var_1339 = relay.var("var_1339", dtype = "uint32", shape = (2, 7, 14))#candidate|1339|(2, 7, 14)|var|uint32
bop_1340 = relay.right_shift(var_1338.astype('uint32'), relay.reshape(var_1339.astype('uint32'), relay.shape_of(var_1338))) # shape=(2, 7, 14)
func_1056_call = mod.get_global_var('func_1056')
func_1059_call = mutated_mod.get_global_var('func_1059')
var_1355 = relay.var("var_1355", dtype = "uint8", shape = (702,))#candidate|1355|(702,)|var|uint8
call_1354 = relay.TupleGetItem(func_1056_call(relay.reshape(var_1355.astype('uint8'), [6, 9, 13]), relay.reshape(var_1355.astype('uint8'), [6, 9, 13]), ), 2)
call_1356 = relay.TupleGetItem(func_1059_call(relay.reshape(var_1355.astype('uint8'), [6, 9, 13]), relay.reshape(var_1355.astype('uint8'), [6, 9, 13]), ), 2)
func_757_call = mod.get_global_var('func_757')
func_761_call = mutated_mod.get_global_var('func_761')
var_1368 = relay.var("var_1368", dtype = "float64", shape = (5, 56))#candidate|1368|(5, 56)|var|float64
call_1367 = relay.TupleGetItem(func_757_call(relay.reshape(var_1368.astype('float64'), [4, 5, 14]), relay.reshape(var_1368.astype('float64'), [4, 5, 14]), ), 0)
call_1369 = relay.TupleGetItem(func_761_call(relay.reshape(var_1368.astype('float64'), [4, 5, 14]), relay.reshape(var_1368.astype('float64'), [4, 5, 14]), ), 0)
output = relay.Tuple([bop_1340,call_1354,var_1355,call_1367,var_1368,])
output2 = relay.Tuple([bop_1340,call_1356,var_1355,call_1369,var_1368,])
func_1372 = relay.Function([var_1338,var_1339,var_1355,var_1368,], output)
mod['func_1372'] = func_1372
mod = relay.transform.InferType()(mod)
var_1373 = relay.var("var_1373", dtype = "uint32", shape = (2, 7, 14))#candidate|1373|(2, 7, 14)|var|uint32
var_1374 = relay.var("var_1374", dtype = "uint32", shape = (2, 7, 14))#candidate|1374|(2, 7, 14)|var|uint32
var_1375 = relay.var("var_1375", dtype = "uint8", shape = (702,))#candidate|1375|(702,)|var|uint8
var_1376 = relay.var("var_1376", dtype = "float64", shape = (5, 56))#candidate|1376|(5, 56)|var|float64
output = func_1372(var_1373,var_1374,var_1375,var_1376,)
func_1377 = relay.Function([var_1373,var_1374,var_1375,var_1376,], output)
mutated_mod['func_1377'] = func_1377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1695 = relay.var("var_1695", dtype = "float32", shape = (3, 5, 9))#candidate|1695|(3, 5, 9)|var|float32
uop_1696 = relay.acos(var_1695.astype('float32')) # shape=(3, 5, 9)
output = relay.Tuple([uop_1696,])
output2 = relay.Tuple([uop_1696,])
func_1698 = relay.Function([var_1695,], output)
mod['func_1698'] = func_1698
mod = relay.transform.InferType()(mod)
var_1699 = relay.var("var_1699", dtype = "float32", shape = (3, 5, 9))#candidate|1699|(3, 5, 9)|var|float32
output = func_1698(var_1699)
func_1700 = relay.Function([var_1699], output)
mutated_mod['func_1700'] = func_1700
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2028 = relay.var("var_2028", dtype = "float64", shape = (1, 12, 14))#candidate|2028|(1, 12, 14)|var|float64
uop_2029 = relay.log10(var_2028.astype('float64')) # shape=(1, 12, 14)
output = uop_2029
output2 = uop_2029
func_2042 = relay.Function([var_2028,], output)
mod['func_2042'] = func_2042
mod = relay.transform.InferType()(mod)
var_2043 = relay.var("var_2043", dtype = "float64", shape = (1, 12, 14))#candidate|2043|(1, 12, 14)|var|float64
output = func_2042(var_2043)
func_2044 = relay.Function([var_2043], output)
mutated_mod['func_2044'] = func_2044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2279 = relay.var("var_2279", dtype = "float32", shape = (7, 9, 12))#candidate|2279|(7, 9, 12)|var|float32
uop_2280 = relay.atanh(var_2279.astype('float32')) # shape=(7, 9, 12)
var_2289 = relay.var("var_2289", dtype = "float32", shape = (7, 9, 12))#candidate|2289|(7, 9, 12)|var|float32
bop_2290 = relay.minimum(var_2279.astype('float32'), relay.reshape(var_2289.astype('float32'), relay.shape_of(var_2279))) # shape=(7, 9, 12)
func_1056_call = mod.get_global_var('func_1056')
func_1059_call = mutated_mod.get_global_var('func_1059')
var_2305 = relay.var("var_2305", dtype = "uint8", shape = (702,))#candidate|2305|(702,)|var|uint8
call_2304 = relay.TupleGetItem(func_1056_call(relay.reshape(var_2305.astype('uint8'), [6, 9, 13]), relay.reshape(var_2305.astype('uint8'), [6, 9, 13]), ), 0)
call_2306 = relay.TupleGetItem(func_1059_call(relay.reshape(var_2305.astype('uint8'), [6, 9, 13]), relay.reshape(var_2305.astype('uint8'), [6, 9, 13]), ), 0)
bop_2327 = relay.maximum(var_2305.astype('uint64'), relay.reshape(call_2304.astype('uint64'), relay.shape_of(var_2305))) # shape=(702,)
bop_2330 = relay.maximum(var_2305.astype('uint64'), relay.reshape(call_2306.astype('uint64'), relay.shape_of(var_2305))) # shape=(702,)
func_508_call = mod.get_global_var('func_508')
func_510_call = mutated_mod.get_global_var('func_510')
const_2332 = relay.const([4.335889,-9.488929,6.556066,-3.463365,8.818322,-0.376583,-5.781076,9.279494,4.353749,0.179309,-7.027878,4.044242,-4.790550,8.027865,-3.687062,6.298065,-0.425555,1.895286,1.112579,-2.884376,-3.619011,3.276635,9.452741,-9.727021,-7.513496,0.346712,4.762775,7.990490,-5.784123,-9.033849,0.132818,-6.119749,6.009617,-8.970238,4.063057,-7.317967,8.515617,-7.911074,-1.102354,1.841297,-8.217487,0.097631,-6.206453,-4.646449,7.430403,0.637215,-0.688951,-3.381020,0.665648,2.195082,0.332655,-5.242097,1.145843,1.731001,-1.958601,-0.123887,2.915560,-1.965058,-6.267481,6.632225,4.767608,9.983947,-5.337676,-0.383467,-3.409403,3.468862,2.877119,-0.960043,-5.226435,-4.799850,6.532484,-7.376344,-0.963108,-4.050109,4.700351,-9.274223,-6.718236,-8.653453,0.438644,-2.828380,-8.642978,-4.270084,7.545390,-0.466652,-5.258265,-5.310622,0.905855,2.625103,-8.017845,1.154588,0.890070,-3.856341,5.262914,-5.342711,3.168236,-8.661666,-2.241753,6.151956,6.342427,-5.366305,-7.301385,6.657009,7.929022,4.456868,-7.997874,4.064545,-6.186593,7.153564,-6.365172,7.502688,-2.019241,-2.530331,-1.223913,5.773029,3.631822,6.544439,-7.523601,-2.990502,6.645590,1.982003], dtype = "float64")#candidate|2332|(120,)|const|float64
call_2331 = func_508_call(relay.reshape(const_2332.astype('float64'), [4, 15, 2]))
call_2333 = func_508_call(relay.reshape(const_2332.astype('float64'), [4, 15, 2]))
uop_2335 = relay.acosh(uop_2280.astype('float64')) # shape=(7, 9, 12)
func_1237_call = mod.get_global_var('func_1237')
func_1239_call = mutated_mod.get_global_var('func_1239')
var_2343 = relay.var("var_2343", dtype = "int8", shape = (64, 12))#candidate|2343|(64, 12)|var|int8
call_2342 = relay.TupleGetItem(func_1237_call(relay.reshape(var_2343.astype('int8'), [16, 12, 4])), 0)
call_2344 = relay.TupleGetItem(func_1239_call(relay.reshape(var_2343.astype('int8'), [16, 12, 4])), 0)
output = relay.Tuple([bop_2290,bop_2327,call_2331,const_2332,uop_2335,call_2342,var_2343,])
output2 = relay.Tuple([bop_2290,bop_2330,call_2333,const_2332,uop_2335,call_2344,var_2343,])
func_2346 = relay.Function([var_2279,var_2289,var_2305,var_2343,], output)
mod['func_2346'] = func_2346
mod = relay.transform.InferType()(mod)
mutated_mod['func_2346'] = func_2346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mutated_mod.get_global_var('func_2346')
var_2348 = relay.var("var_2348", dtype = "float32", shape = (7, 9, 12))#candidate|2348|(7, 9, 12)|var|float32
var_2349 = relay.var("var_2349", dtype = "float32", shape = (7, 9, 12))#candidate|2349|(7, 9, 12)|var|float32
var_2350 = relay.var("var_2350", dtype = "uint8", shape = (702,))#candidate|2350|(702,)|var|uint8
var_2351 = relay.var("var_2351", dtype = "int8", shape = (64, 12))#candidate|2351|(64, 12)|var|int8
call_2347 = func_2346_call(var_2348,var_2349,var_2350,var_2351,)
output = call_2347
func_2352 = relay.Function([var_2348,var_2349,var_2350,var_2351,], output)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2423 = relay.var("var_2423", dtype = "float32", shape = (6, 4, 5))#candidate|2423|(6, 4, 5)|var|float32
uop_2424 = relay.log(var_2423.astype('float32')) # shape=(6, 4, 5)
func_757_call = mod.get_global_var('func_757')
func_761_call = mutated_mod.get_global_var('func_761')
const_2433 = relay.const([-2.426667,4.219175,6.461660,4.121414,1.710545,5.860157,4.556747,7.220911,-3.687176,3.394604,1.506740,-0.255649,-5.405730,7.206958,4.341677,2.222312,-6.683338,-7.182950,7.875964,7.954695,-9.622747,5.960180,0.429571,9.293631,-0.681753,0.103482,-6.569959,-7.214371,-6.099796,-6.454282,-1.350088,1.811830,-8.483215,-8.762932,8.750191,-6.652426,-7.710430,8.398406,1.566148,-6.796069,-1.639539,5.233146,5.671463,3.436314,-7.675854,4.392288,8.483865,0.132578,-1.408777,-7.036797,4.701019,8.691927,-6.735932,3.197147,-2.312993,-7.137379,8.500333,3.353700,2.551272,-3.868829,-3.680068,-2.179084,-8.266087,2.781192,-1.276002,5.875649,9.283751,7.618016,6.864101,5.450906,-7.416665,-4.802996,9.591768,-5.930718,-1.894535,-7.021129,-0.889929,1.408381,6.341722,-3.552833,-9.669496,8.621513,-5.228422,6.451176,-9.946008,4.351599,-8.276555,-8.052892,3.909995,1.954235,-8.263001,-4.108533,-8.832305,3.097818,0.152403,7.123378,4.509767,9.114812,-9.764447,-0.340815,4.397930,0.416330,3.523145,3.100565,1.741343,5.059220,0.373018,-4.427683,1.419913,3.692897,2.892962,-9.660056,6.863023,3.961384,-2.634600,-0.514530,3.105258,-5.527197,-4.684383,-1.186138,-4.321454,8.729596,8.592361,6.665788,7.311400,9.647867,-2.643511,-6.116566,4.726212,9.610114,9.392007,9.526129,9.893973,0.945728,-9.590332,3.525384,3.640337,-5.684529,4.492816,1.027140,-0.580487,7.538515,-4.215112,-2.930941,2.602745,-5.491935,-7.864979,-2.931620,2.667112,1.102823,6.331410,-6.936210,8.996345,0.253522,-9.184036,8.707710,-0.313268,8.034771,-5.595905,-9.257876,3.718371,-5.494190,8.733766,-7.655336,9.301736,-6.873135,-2.938318,0.418243,5.918376,-7.211202,-4.164050,-3.818953,8.482161,1.691597,1.772538,6.131593,-4.870157,-5.217006,-2.357000,-8.444080,-5.989765,-1.618325,6.077954,-2.750743,1.532127,6.979060,2.340280,-2.746244,0.176090,-7.462467,0.930552,-5.529924,-1.300835,7.446280,4.933830,-4.699902,-3.701126,-8.019065,-4.870106,-1.186496,-6.454746,1.054334,8.667817,-5.150746,-1.349867,-4.997051,-5.797288,9.621685,3.475612,-4.984319,3.783537,6.766811,3.102657,2.933132,-4.594196,4.986654,5.550881,-8.399444,-2.581070,-5.558258,-2.216141,8.418614,7.512285,7.946387,7.286016,6.418114,-5.549104,9.100442,-7.118706,9.729091,-0.752445,9.469301,-6.335854,3.500151,-3.801579,5.874756,-8.179948,-2.382037,5.922444,-7.577386,1.466091,2.141577,-6.731538,9.283685,-5.147054,-0.494446,-9.699148,-5.208322,6.556856,2.025047,7.350080,-0.716003,9.579978,9.231111,-5.636720,-3.169397,1.063171,7.506085,-1.351837,9.231943,-2.071341,4.584667,2.313743,7.191712,1.811384,0.454611,2.073488,-4.446791,-6.655517,5.927581,-9.708736,-5.912179,-0.061914,8.545974,-5.717589,7.011732,-0.467541,2.848802,-4.953009,9.276255], dtype = "float64")#candidate|2433|(280,)|const|float64
call_2432 = relay.TupleGetItem(func_757_call(relay.reshape(const_2433.astype('float64'), [4, 5, 14]), relay.reshape(const_2433.astype('float64'), [4, 5, 14]), ), 1)
call_2434 = relay.TupleGetItem(func_761_call(relay.reshape(const_2433.astype('float64'), [4, 5, 14]), relay.reshape(const_2433.astype('float64'), [4, 5, 14]), ), 1)
func_2346_call = mod.get_global_var('func_2346')
func_2352_call = mutated_mod.get_global_var('func_2352')
var_2437 = relay.var("var_2437", dtype = "float32", shape = (756,))#candidate|2437|(756,)|var|float32
const_2438 = relay.const([[-9,7,-5,-4,-5,2,-2,-10,-9,9,-1,-1,10,-3,-1,7,2,-1,-6,-4,4,2,-10,8,-7,7,8,6,-5,6,-10,6,-5,-10,2,4,1,9,-6,1,5,-1,5,-2,-8,8,9,1,1,-9,-7,-8,-6,-10,-7,8,-10,-5,-8,-7,5,-6,9,10,-9,4,9,4,2,-10,2,1,8,-7,10,5,-1,-2,6,-2,-1,1,-10,-7,-9,-1,8,-3,7,3,7,-5,-8,-9,-8,-1,7,9,9,2,-5,-8,-7,9,2,3,1,8,-4,-4,-5,-9,9,10,6,-3,-6],[-5,-4,7,10,7,-8,3,-9,-2,3,7,-1,-9,10,9,-5,-1,1,-6,7,-2,-6,5,-1,-2,-8,6,9,-8,7,6,-4,-10,-4,7,10,4,-4,3,-6,2,3,7,3,-10,-3,-4,-3,3,1,-9,-9,6,2,1,-4,5,-2,1,6,-8,2,-7,6,-2,-9,-7,4,2,-5,-5,7,-10,10,6,5,-6,-6,1,4,1,6,10,3,7,6,-1,-2,5,2,-10,7,-5,-1,-7,2,8,5,-10,-1,-8,-9,-1,-8,2,8,-9,10,-8,-2,7,10,-4,3,-3,2,-1],[-10,1,9,-10,-7,-1,-2,-7,-1,-10,8,-6,-9,7,-10,-4,5,8,1,10,-6,-5,8,-5,-4,10,9,7,4,-3,6,-7,-5,4,3,-5,5,-9,2,1,-9,10,-8,-7,-2,-1,10,-7,2,-4,-5,6,-9,-2,9,6,8,-5,2,-1,4,1,9,-10,1,-8,3,6,-8,-2,4,2,-4,8,-1,-10,-10,-9,-1,10,3,8,-1,-9,-3,-6,8,8,-7,8,5,2,-1,6,4,-5,3,4,-10,-5,-3,-1,-8,-3,-5,-4,-10,-10,1,-4,2,-1,-3,-1,7,5,4],[3,4,9,-8,4,1,-9,-7,-5,-2,-4,-3,-9,8,2,-9,5,10,7,-9,6,-4,-2,9,10,6,-8,8,1,3,-9,6,-8,-10,-4,5,-8,-4,9,-10,5,-2,4,2,7,9,-10,10,1,4,-8,3,9,8,1,7,-1,10,-1,3,8,4,6,5,-5,-3,9,10,-5,3,6,1,3,5,6,1,-9,-3,10,-10,-8,-7,1,2,-6,10,-9,9,6,7,1,7,5,-3,-9,-10,-8,-3,-4,4,4,-4,-7,-4,-7,7,8,-10,-4,-10,7,-10,-6,-5,10,4,3],[6,1,5,10,7,-5,-3,-9,-4,2,5,-6,10,-10,-9,-2,-5,4,10,3,4,-4,9,-1,-2,-6,2,-7,-10,-9,-2,-6,4,10,-4,1,2,-6,-1,-5,-1,-1,-7,-7,7,-7,-9,-7,-3,-6,1,6,5,8,10,-10,-6,-3,-9,-9,-8,-7,-9,7,1,-10,3,8,9,-3,-9,9,-3,-8,5,-1,6,-8,-2,7,-10,-8,5,10,-3,-3,5,-2,4,-1,9,-2,7,10,-4,-5,-5,9,10,-4,-2,9,-8,-6,-9,3,-6,-3,-4,-4,-1,5,1,-8,3,6,-8],[3,-4,-10,5,-2,-8,-5,9,3,8,6,1,-2,5,-10,-3,-10,-3,1,-8,10,-2,-10,-4,-1,-8,4,2,-6,4,-1,-2,-5,3,-4,10,7,-8,-3,10,7,-2,9,-4,10,-2,4,-1,-8,4,-5,5,8,-1,-8,-4,8,3,-7,-2,-5,-7,-8,-10,3,8,10,-4,-9,-9,5,-9,9,-2,-10,-5,-9,-6,1,5,1,5,-9,2,-3,4,-6,3,-6,4,-1,1,-1,9,6,-9,-9,10,3,-7,-5,-6,-5,-8,8,-7,3,9,6,8,-1,-8,-9,-10,2,-1,-8]], dtype = "uint8")#candidate|2438|(6, 117)|const|uint8
var_2439 = relay.var("var_2439", dtype = "int8", shape = (768,))#candidate|2439|(768,)|var|int8
call_2436 = relay.TupleGetItem(func_2346_call(relay.reshape(var_2437.astype('float32'), [7, 9, 12]), relay.reshape(var_2437.astype('float32'), [7, 9, 12]), relay.reshape(const_2438.astype('uint8'), [702,]), relay.reshape(var_2439.astype('int8'), [64, 12]), ), 4)
call_2440 = relay.TupleGetItem(func_2352_call(relay.reshape(var_2437.astype('float32'), [7, 9, 12]), relay.reshape(var_2437.astype('float32'), [7, 9, 12]), relay.reshape(const_2438.astype('uint8'), [702,]), relay.reshape(var_2439.astype('int8'), [64, 12]), ), 4)
uop_2446 = relay.log10(uop_2424.astype('float64')) # shape=(6, 4, 5)
func_2042_call = mod.get_global_var('func_2042')
func_2044_call = mutated_mod.get_global_var('func_2044')
var_2451 = relay.var("var_2451", dtype = "float64", shape = (168,))#candidate|2451|(168,)|var|float64
call_2450 = func_2042_call(relay.reshape(var_2451.astype('float64'), [1, 12, 14]))
call_2452 = func_2042_call(relay.reshape(var_2451.astype('float64'), [1, 12, 14]))
output = relay.Tuple([call_2432,const_2433,call_2436,var_2437,const_2438,var_2439,uop_2446,call_2450,var_2451,])
output2 = relay.Tuple([call_2434,const_2433,call_2440,var_2437,const_2438,var_2439,uop_2446,call_2452,var_2451,])
func_2461 = relay.Function([var_2423,var_2437,var_2439,var_2451,], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
var_2462 = relay.var("var_2462", dtype = "float32", shape = (6, 4, 5))#candidate|2462|(6, 4, 5)|var|float32
var_2463 = relay.var("var_2463", dtype = "float32", shape = (756,))#candidate|2463|(756,)|var|float32
var_2464 = relay.var("var_2464", dtype = "int8", shape = (768,))#candidate|2464|(768,)|var|int8
var_2465 = relay.var("var_2465", dtype = "float64", shape = (168,))#candidate|2465|(168,)|var|float64
output = func_2461(var_2462,var_2463,var_2464,var_2465,)
func_2466 = relay.Function([var_2462,var_2463,var_2464,var_2465,], output)
mutated_mod['func_2466'] = func_2466
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2859 = relay.const(2.712739, dtype = "float64")#candidate|2859|()|const|float64
var_2860 = relay.var("var_2860", dtype = "float64", shape = (8, 14, 15))#candidate|2860|(8, 14, 15)|var|float64
bop_2861 = relay.minimum(const_2859.astype('float64'), var_2860.astype('float64')) # shape=(8, 14, 15)
bop_2866 = relay.logical_xor(var_2860.astype('int16'), relay.reshape(bop_2861.astype('int16'), relay.shape_of(var_2860))) # shape=(8, 14, 15)
func_471_call = mod.get_global_var('func_471')
func_474_call = mutated_mod.get_global_var('func_474')
const_2881 = relay.const([-2.728284,-4.211446,1.114639,6.768637,2.574524,-7.566820,2.979226,-6.012165,-5.193685,-5.288030,-7.554941,8.595336,-1.841192,2.027416,4.816991,1.682117,1.202857,-6.742218,5.626621,-6.202227,-6.664211,3.659765,-9.010279,-0.546540,-1.400423,-4.983969,-0.055535,-5.216134,-7.018797,-4.239612,2.699339,1.115703,4.811744,7.382334,-4.212820,6.013687,-8.732692,-2.292226,-9.168452,0.555232,7.563671,1.447812,-4.766105,3.932562,3.881068,-5.723350,7.971744,-4.881767,6.210623,1.483537,7.406423,-3.377381,-8.033553,-2.073196,8.769465,6.625784,-9.911164,-5.926206,-1.889496,4.076553,0.932147,-2.953931,8.565671,9.042157,-0.504792,-5.379056,7.517236,6.306698,6.115015,-1.123843,-0.157497,-0.298349,-1.415279,3.928195,-7.758058,9.602839,-8.388767,-1.736794,-6.252485,-3.177707,7.956920,-3.771278,0.618341,-5.130680,-2.160692,6.282790,-2.139271,4.672685,9.445366,0.297934,9.774891,5.022817,2.460665,8.624909,-7.632121,-3.692652,8.801089,-5.289713,4.724041,3.357596,-5.349378,-6.980253,-5.158416,5.215013,-3.689952,7.764282,7.476642,5.094375,0.290368,-0.185304,-0.948119,5.288634,-0.521570,-7.564222,-2.014843,2.931595,-5.289630,8.328600,2.344829,-2.286402,9.074794,0.369663,6.339454,6.118153,0.985873,-1.606332,0.074375,9.961789,3.368469,7.461127,-9.586198,-4.807050,-6.366740,7.824600,3.377807,4.492112,-1.529542,6.757076,1.169607,-0.553430,0.158152,-1.717218,-0.394301,-3.103358,3.892080,4.175328,-6.574943,-6.437603,3.704790,-4.939788,-2.943228,9.075443,-7.925707,-4.397457,-5.164616,-9.131839,9.638093,-2.671341,4.170923,4.355374,-2.751784,-4.943862,8.928996,6.688080,-7.929690,8.322751,5.519442,1.480945,2.513614,3.775636,-4.803465,6.763206,-8.903080,8.300755,-7.932127,-5.383543,9.322655,8.525049,7.553884,5.272302,-4.430266,-2.116504], dtype = "float64")#candidate|2881|(182,)|const|float64
call_2880 = relay.TupleGetItem(func_471_call(relay.reshape(const_2881.astype('float64'), [1, 14, 13])), 0)
call_2882 = relay.TupleGetItem(func_474_call(relay.reshape(const_2881.astype('float64'), [1, 14, 13])), 0)
output = relay.Tuple([bop_2866,call_2880,const_2881,])
output2 = relay.Tuple([bop_2866,call_2882,const_2881,])
func_2883 = relay.Function([var_2860,], output)
mod['func_2883'] = func_2883
mod = relay.transform.InferType()(mod)
mutated_mod['func_2883'] = func_2883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2884 = relay.var("var_2884", dtype = "float64", shape = (8, 14, 15))#candidate|2884|(8, 14, 15)|var|float64
func_2883_call = mutated_mod.get_global_var('func_2883')
call_2885 = func_2883_call(var_2884)
output = call_2885
func_2886 = relay.Function([var_2884], output)
mutated_mod['func_2886'] = func_2886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2941 = relay.var("var_2941", dtype = "int64", shape = ())#candidate|2941|()|var|int64
var_2942 = relay.var("var_2942", dtype = "int64", shape = (10, 12, 3))#candidate|2942|(10, 12, 3)|var|int64
bop_2943 = relay.equal(var_2941.astype('bool'), var_2942.astype('bool')) # shape=(10, 12, 3)
output = relay.Tuple([bop_2943,])
output2 = relay.Tuple([bop_2943,])
func_2950 = relay.Function([var_2941,var_2942,], output)
mod['func_2950'] = func_2950
mod = relay.transform.InferType()(mod)
mutated_mod['func_2950'] = func_2950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2950_call = mutated_mod.get_global_var('func_2950')
var_2952 = relay.var("var_2952", dtype = "int64", shape = ())#candidate|2952|()|var|int64
var_2953 = relay.var("var_2953", dtype = "int64", shape = (10, 12, 3))#candidate|2953|(10, 12, 3)|var|int64
call_2951 = func_2950_call(var_2952,var_2953,)
output = call_2951
func_2954 = relay.Function([var_2952,var_2953,], output)
mutated_mod['func_2954'] = func_2954
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3419 = relay.const([[[-8,-1,6,4,-8,4,8,7,-3,-4,7,-6,3,9,-7,5],[1,-2,2,9,-8,2,-4,-3,-3,3,-8,-1,2,4,-3,5],[-7,-3,2,10,4,-5,2,5,-5,-7,1,4,8,-1,9,4],[-4,6,8,-5,10,3,5,9,-8,3,-6,1,6,-6,-9,-2],[9,8,-8,10,-2,-9,-10,-9,9,-8,-10,9,-2,-3,-7,-7],[-7,-4,7,-2,-8,7,3,6,9,-5,6,5,10,10,-6,-4],[1,7,-3,-8,2,-8,-3,-5,10,-1,5,-4,-5,4,3,-4],[7,4,-2,8,-10,-1,3,-3,-7,9,2,10,-10,-9,-2,7],[8,-9,4,6,-6,-6,4,-1,-4,4,-6,3,7,-10,9,-10],[9,-7,9,-6,2,-1,1,-7,2,3,4,-5,10,-1,3,5],[-3,4,8,4,-1,-6,8,-7,3,-10,8,9,1,6,-3,3],[-3,-7,-6,-9,-7,7,-8,-6,6,7,3,1,-10,-5,6,-9],[4,8,-7,7,3,9,-2,-2,3,2,7,-10,-8,10,-3,-5],[-6,-1,1,9,5,5,5,6,9,5,-9,3,-10,-3,3,-3],[10,-4,-3,-7,2,-4,1,6,5,-6,-6,4,-3,10,7,-6]],[[9,-10,-6,-9,-10,5,10,-9,-3,-1,-3,7,-4,-3,2,9],[-3,4,-7,8,-5,-9,4,-1,-5,6,-9,-6,-1,5,-2,7],[-7,-7,-3,4,-7,2,-2,-8,7,-7,-8,1,-5,5,5,5],[2,-6,4,-4,2,-2,-10,3,4,-6,-4,2,-5,9,8,2],[5,-6,8,1,5,-8,4,4,3,2,5,9,2,2,1,1],[-1,-4,-8,-3,-8,10,2,2,2,-3,8,10,9,2,-5,-5],[-2,7,5,5,-9,-7,-8,6,-5,-10,-8,-4,2,6,-7,-2],[-1,-8,-9,2,-9,8,-10,-9,3,7,-2,8,-5,9,-7,-2],[2,-7,-5,10,1,-3,-4,5,4,9,-3,1,-3,-1,-3,-1],[4,-9,-8,-5,7,-10,-10,8,-7,3,-4,-7,5,7,8,5],[5,-1,3,4,3,2,-10,-9,-7,-6,-5,10,-8,7,5,8],[-8,-5,-6,-2,6,2,6,3,-4,-8,10,10,-5,4,3,-9],[2,3,-6,4,-2,-8,-10,4,7,-4,10,-5,-2,-4,-10,5],[7,-9,-4,-5,-1,-5,-1,6,10,7,3,6,2,10,1,5],[3,2,-10,2,-7,4,-5,-8,-10,9,-10,1,-3,3,6,5]],[[-5,-7,-2,-6,-7,9,-3,-8,-3,-8,-2,-4,-2,10,-8,-9],[9,-5,6,-2,-6,-4,-7,1,9,-4,2,5,-6,4,-9,-4],[-1,-1,-4,10,3,8,8,1,-1,-8,2,7,-10,1,-3,10],[-8,1,-4,-10,6,-7,7,2,3,-3,5,5,10,-5,-5,-9],[5,-2,4,6,-2,-4,10,-1,8,-10,-3,-8,-4,-9,9,-9],[9,-5,-7,-3,-5,2,-3,-10,4,-3,6,-1,6,9,-8,-2],[-4,-10,-10,-10,9,2,-4,4,4,-6,-1,-3,8,2,2,3],[-3,-7,-5,9,10,8,6,1,-9,2,-5,-7,-9,-9,5,7],[6,-10,-2,6,2,5,6,-8,4,-7,5,1,4,-4,-1,-8],[4,7,9,-7,7,-9,-9,-8,-6,-9,-10,4,-10,7,-9,8],[5,1,-9,6,-2,9,-9,4,3,-6,-6,8,-9,7,10,-3],[-3,10,7,-7,1,10,-4,-7,8,3,4,-9,-6,2,4,-4],[4,-8,-10,-9,3,-2,4,6,-1,-7,10,-9,-4,6,-10,6],[2,2,1,4,-3,-10,4,-10,-5,-3,2,-3,4,-8,-8,8],[-10,-6,4,-2,-8,3,-8,-8,-9,-10,-4,-9,4,3,-4,6]],[[3,-3,-3,3,7,5,6,-2,6,-8,-7,-9,6,7,-4,4],[-6,-4,3,-2,3,8,3,-6,4,-9,1,-3,1,7,-4,3],[-7,1,-6,10,2,-1,-10,6,-1,4,-3,8,-1,-9,3,7],[3,-8,2,-10,-10,1,-10,-3,-2,-2,5,8,3,1,1,6],[5,-3,-3,-3,-6,2,-3,-6,1,-1,7,10,-7,6,8,-2],[-5,2,-9,-3,-1,-2,10,-1,-7,-5,2,-2,8,-6,9,9],[-4,4,-6,-10,-3,-3,-10,2,-9,-2,4,-9,-2,-1,5,-7],[-1,-4,-9,5,-7,-5,-7,6,5,4,-2,4,-7,6,-4,-3],[-5,1,-9,8,-7,5,-9,9,-9,-3,-5,4,1,6,-3,10],[5,-4,10,-4,-4,-2,-10,-6,3,7,-6,3,-10,-3,-9,-3],[-6,1,-10,6,4,6,8,-2,-1,2,1,-7,6,6,-4,-10],[-9,-10,-7,-2,2,-4,1,-5,6,-2,-3,-10,10,4,6,-6],[-6,1,-3,-6,-2,-9,-8,-3,-2,-1,-3,-3,6,9,-3,4],[-3,5,-9,-1,1,4,-4,2,-4,-10,4,2,-5,10,5,-7],[3,4,-3,5,-7,-1,-5,-7,-8,8,2,-1,-10,-5,7,5]],[[6,-3,4,-2,6,2,-10,2,3,9,-1,-4,-1,6,-5,-9],[-8,-9,-2,-5,-6,-2,3,-4,8,-6,4,-8,1,7,4,-6],[-8,-7,7,9,-9,8,8,10,5,-3,-8,-8,-6,6,10,-2],[-8,-9,3,8,2,3,10,-4,-1,-6,9,-7,-8,2,-6,6],[-5,9,-4,7,-3,-6,6,-7,-8,-6,-8,3,-8,4,1,-10],[-7,-2,7,7,-2,2,2,6,6,-8,-7,-2,5,-10,8,-3],[-10,7,6,7,6,9,3,-9,-7,3,9,-10,-1,-1,4,-5],[-10,-2,-8,-6,10,-4,1,10,-4,6,10,8,-8,-2,4,7],[-2,2,-7,4,-6,-10,4,6,5,-1,-8,6,-9,-10,-10,9],[-5,-1,1,-2,6,3,4,-9,-1,-5,9,-9,-2,1,8,-3],[3,7,-3,-1,1,-10,3,-5,2,-7,1,-9,-7,-6,-2,-9],[-5,9,5,9,-3,-10,-2,5,3,5,10,-9,-6,-3,4,-5],[8,8,-5,-7,8,7,2,-2,-5,-1,2,-3,2,9,8,4],[-10,-9,-9,-3,6,7,-3,-7,5,-5,-7,-5,4,7,-8,10],[-3,-2,7,-1,7,-5,6,-9,9,8,-2,-6,-9,-10,4,-4]]], dtype = "uint32")#candidate|3419|(5, 15, 16)|const|uint32
var_3420 = relay.var("var_3420", dtype = "uint32", shape = (5, 15, 16))#candidate|3420|(5, 15, 16)|var|uint32
bop_3421 = relay.logical_xor(const_3419.astype('uint32'), relay.reshape(var_3420.astype('uint32'), relay.shape_of(const_3419))) # shape=(5, 15, 16)
func_2346_call = mod.get_global_var('func_2346')
func_2352_call = mutated_mod.get_global_var('func_2352')
const_3443 = relay.const([[6.399419,-7.232662,-9.925972,-1.395144,-2.635627,-4.749130,1.603190,1.495503,3.270617,3.365695,0.531440,-5.202712,6.331395,1.593436,-7.807569,-4.702128,-7.525503,6.956494,-6.881619,9.242613,-0.292407,4.169370,8.780229,9.898042,8.555460,1.153297,8.335803,1.165190,-5.428517,-5.538062,-0.455923,-1.026696,8.554369,0.550118,1.023680,-9.852080,8.305622,7.316544,-9.227162,2.421820,0.604828,-6.565698],[-0.506847,5.469148,7.831843,5.530687,-6.097664,-1.836192,-2.774803,5.683937,-4.583099,4.010638,2.633122,5.974766,3.711920,-9.762984,7.626834,8.402436,-9.347334,-4.510896,-0.936753,1.577467,3.824445,-0.321904,-8.562013,-9.741915,8.156161,-2.681809,-4.080045,7.338043,-6.101388,7.216986,-6.898556,-8.467901,3.835409,-8.144937,-5.373734,2.188782,-9.534232,5.827403,6.629936,1.034364,-2.464930,-3.128640],[3.034310,-1.935256,6.860736,-2.976028,8.065225,-8.200263,8.271230,-7.805867,6.119054,-8.700115,-7.146360,-4.440891,2.566821,-5.963283,4.691401,-0.313459,-0.628508,-3.392344,-3.445426,-6.063474,2.799655,5.653079,6.255834,0.360476,1.894979,-3.913232,2.723015,2.800460,2.130164,-9.677296,-6.112984,7.468756,-5.332833,-3.182542,-4.468233,-7.123334,-7.480684,6.448557,3.968638,-3.372509,-4.926569,-8.834467],[4.052452,-9.750769,-4.301739,4.433518,8.320499,0.458773,-4.112364,3.493201,-3.812674,6.763288,6.805436,9.859486,7.414903,0.773646,-3.405995,4.657153,8.099741,-9.910712,7.771332,9.294723,5.539949,-7.323949,-8.187425,-1.821743,0.567779,7.976457,-5.832145,9.017757,-0.092102,1.487218,3.761580,-3.627233,-9.082678,-4.162440,-5.245422,4.570832,-5.547051,-0.725268,7.412164,-0.088469,-6.280857,9.075068],[-9.747379,-0.372097,1.728867,2.810083,-7.860235,0.183765,4.090447,-5.573235,2.665477,5.797635,5.967495,0.031901,-9.965402,8.886316,8.783941,-5.641985,-0.127977,1.127768,-4.067537,-6.105188,-8.272398,-5.163842,0.136580,-8.760462,-2.860146,-4.354549,9.830211,-2.312888,1.420976,-6.903932,-8.023696,-7.722638,1.926066,-8.302085,2.716688,-3.102863,-1.500107,7.646375,-1.208067,0.211467,0.448973,-2.923741],[1.924759,-6.187189,3.498804,4.111486,2.095826,-3.150229,6.578005,6.357217,7.052560,6.862307,-9.477294,6.600712,-4.309515,3.614623,-4.261790,-0.263348,-4.970858,5.208486,5.908166,5.171783,-9.148756,3.269783,-9.132212,-2.559969,-7.264112,3.757923,-7.115584,5.450704,5.090650,-3.155908,6.284783,3.302343,-4.046356,5.494689,-1.197486,-8.411704,-4.562002,-4.472526,-6.873551,-7.290360,-7.643117,7.827983],[-0.727112,7.004081,4.835126,7.117049,-8.305442,-5.355024,6.278744,-8.564612,-1.001635,0.918387,-3.419985,5.118602,-4.654482,-6.542823,-4.065090,-7.539076,-5.702708,-0.099462,4.668075,-3.393351,3.431668,-1.522677,-8.030078,-9.755286,-8.125246,4.619208,0.800221,2.477454,-7.669212,7.530099,-0.088822,7.641634,6.458840,-8.349783,-7.465261,1.581975,-3.889819,-0.134071,-1.936338,3.981769,-1.359996,-7.912259],[-5.571908,-7.534874,8.218938,2.318158,5.410895,-2.258717,-5.674596,2.813268,-9.589665,-2.483295,2.913233,4.732890,9.578371,-2.475684,-5.065577,-9.547766,-0.932617,1.131853,-0.300278,8.777185,-8.794737,-5.546692,8.453973,0.666868,-8.368473,-7.048809,-0.115912,-9.566767,-6.733117,-5.884313,8.735737,7.769198,3.573484,2.798307,2.749955,9.742864,-2.933306,2.690251,9.849671,2.354930,-3.626094,5.487235],[-7.076307,4.751282,-7.971982,2.861801,-8.297738,-3.906563,9.774337,1.577647,-2.541832,-5.887886,-2.398786,-2.194077,-8.436747,-2.004836,0.175423,-3.630550,3.452008,0.040931,9.152315,9.184264,4.762198,5.642792,7.470724,-2.257808,9.650433,-8.689383,-6.737828,4.122442,6.044816,2.125724,-2.187792,-8.895710,8.155658,5.109930,-2.787203,-3.262305,-8.341829,-4.018578,-7.529187,-4.505836,-6.505448,-8.835799],[5.802681,0.840894,8.934013,-5.366270,-6.293416,1.986630,-0.383756,-7.274340,5.896154,-0.938358,-7.244027,7.727521,6.163600,-3.986283,-0.400065,-1.922035,4.121034,-7.081621,6.857379,-6.129084,1.175865,7.104635,-3.376385,-5.770874,3.025949,-7.979706,-5.540528,-7.462694,1.451794,7.755013,3.394504,7.678386,1.830407,5.071266,-7.053967,1.088361,2.725704,4.282822,-8.862159,1.522347,0.376031,-0.674025],[3.434056,1.670846,1.395547,9.891191,1.086316,6.435827,-1.175005,1.509967,-0.581897,4.551299,1.548494,-8.898009,-9.675633,3.046294,1.372579,1.141991,4.006951,6.553395,0.423415,6.708826,1.160958,-9.570439,-8.387109,2.562837,-0.479901,-2.302041,8.345632,6.017894,3.382904,2.986705,-8.070866,7.364968,-9.377558,9.035618,5.370829,-0.674542,9.147845,6.076111,-9.421579,7.001313,1.623576,-7.087127],[-4.117021,-4.992481,4.102698,-1.840851,5.637454,0.429620,-8.641420,3.942276,5.810086,-3.062706,-3.671660,-8.926379,-7.747991,3.816559,-5.679441,4.701267,-7.326497,-5.963796,5.900167,4.834304,-8.841220,-1.801552,5.644389,4.052888,2.375010,-5.914275,8.131977,-6.237662,-0.799175,9.589622,-8.295414,0.056639,-7.438791,-2.957365,-0.097688,-7.039668,-4.836862,3.335954,9.408197,-1.031886,-5.940641,-5.196774],[-0.106125,-4.907034,6.830928,2.003783,-3.128903,-0.032122,-2.311782,-3.036352,-5.232985,7.671081,-5.593534,0.942285,9.397177,-8.262895,-9.026762,1.664556,-2.218149,2.399098,6.367296,4.677730,5.185737,9.516038,-1.738803,-3.344714,-3.134906,7.199511,-3.575114,-5.881242,-2.048755,0.155506,-3.050820,3.075279,-3.840850,-5.204235,0.852202,3.109205,5.056722,-6.930047,2.516510,-9.891813,9.890949,-0.587241],[-1.045174,4.404995,6.405275,9.943772,-1.364333,-5.153090,1.022884,-7.562965,-1.371966,0.141568,-2.722267,7.848158,-7.291867,-1.265708,9.893439,5.461765,7.769869,5.359447,-1.700815,-0.761928,7.811129,9.433608,9.383146,-3.739261,-1.562245,9.331441,5.736242,-9.337004,3.205834,2.935313,9.254470,-4.307179,-8.201082,0.670722,5.658111,2.436540,5.402038,5.564633,-4.285533,-0.791174,-8.918330,-9.970132],[5.745480,4.303771,0.734720,9.539055,-7.637755,2.470963,3.150196,6.010238,2.569393,-1.843032,1.816803,4.908486,4.247504,-6.557906,-6.160378,8.088143,5.715636,-4.899232,-4.757030,7.321857,0.928938,1.658338,-3.162431,5.223609,9.851345,-3.441190,-3.009553,-5.372964,0.324668,7.727796,0.860797,1.232939,6.444608,0.513452,-9.163351,-2.588613,-5.596973,-4.128826,-1.599309,-9.846902,7.922616,8.986444],[-1.379153,6.579865,-3.431661,9.417219,-5.995180,3.855055,-1.137333,4.458099,0.984226,5.999914,3.927155,-4.407380,9.516159,5.722660,0.528181,-7.435228,-9.284801,-1.566432,-1.203207,1.657288,-0.980866,0.612270,0.786851,4.062665,-5.631976,-7.179957,2.479406,-2.781619,8.788746,8.047823,-8.763084,1.438040,-1.890065,5.090635,2.180199,1.940595,0.646167,8.752516,3.358246,-5.733101,8.009427,2.103153],[5.935115,2.124051,7.376995,-7.705169,3.179418,-0.022309,2.570759,-5.242251,-6.001848,-6.788264,-6.351333,4.381453,0.849524,-4.235303,-5.667687,3.527350,4.581857,5.183434,5.105076,-1.468622,3.411190,-5.745599,-4.095591,2.115546,-2.331804,4.178868,0.529370,-5.273525,-4.324055,5.613795,-6.730265,-0.797172,-2.632671,-0.066599,5.557609,-3.833646,-0.365860,9.314440,0.099457,3.638442,6.900840,8.285505],[9.719488,2.515074,-0.204291,2.426072,2.481410,-4.859620,4.960940,8.541137,6.811174,0.763073,9.755637,-1.107920,0.508020,-3.453681,-9.877795,-8.690653,-6.659699,7.109041,-7.550115,0.623221,1.600299,8.570851,7.158888,5.071977,-0.071385,-5.850254,-1.585773,4.664423,-2.736499,-3.629009,4.929787,9.312197,-3.189187,-8.850476,1.817329,-8.451318,3.562856,7.254272,-7.161727,3.707144,6.235406,-6.406582]], dtype = "float32")#candidate|3443|(18, 42)|const|float32
const_3444 = relay.const([-4,-3,6,-4,7,-2,-8,4,-4,10,8,-9,4,-6,-2,1,6,5,-7,-4,10,7,-6,9,-3,-7,4,-5,-5,1,10,7,7,7,-3,-10,1,-1,10,9,1,-6,4,-3,2,10,7,7,1,8,9,7,7,6,-9,3,-5,-5,8,-1,4,-4,1,5,-5,8,-10,3,4,-5,6,-3,6,-1,-9,-7,-6,-6,-2,2,1,-3,-6,10,-8,5,4,-7,9,7,2,1,-4,-8,-7,6,-10,-10,-5,-8,-7,7,2,-2,-3,7,4,5,6,-6,6,10,1,2,-10,1,3,9,-3,6,-9,-3,-10,10,-4,8,8,-5,6,9,10,-3,9,10,-10,-9,-7,3,3,-5,2,8,-1,-1,2,3,9,7,-6,9,1,-9,10,-8,-7,-1,-8,9,4,6,-1,10,-5,-5,1,-10,-3,1,-1,8,5,7,2,1,-7,4,6,-7,10,-3,-7,3,2,-3,6,10,-5,-5,4,-3,-2,10,-10,10,-8,-10,6,5,9,10,1,9,7,-3,9,-4,2,1,-1,-1,-4,4,-6,7,-8,3,6,-7,5,6,7,-4,-3,2,-6,3,-6,1,7,-7,6,6,3,7,-7,-9,2,-5,10,9,2,7,10,-10,-9,-3,9,9,7,8,-10,10,2,-8,-3,-10,10,3,-7,-8,9,3,3,8,1,-3,4,-4,-7,3,-3,6,-10,5,1,-8,-5,8,5,5,3,9,-1,6,-7,-9,1,4,-6,3,-10,-10,1,2,-4,-2,-5,4,5,-4,-10,3,-10,-7,7,4,10,-4,-1,-9,-1,10,3,2,6,10,-8,-9,1,-5,-7,-6,4,-10,-6,8,1,3,-3,-1,10,-7,6,7,4,-6,2,10,3,8,10,-7,5,-4,-7,-1,6,-5,6,2,5,-2,3,10,-3,-5,6,1,-4,-4,-2,7,-3,-2,4,10,1,6,-6,-10,-7,-10,-9,-4,10,3,3,9,2,-4,3,-8,7,-10,2,-10,7,10,4,8,-4,-3,-10,-4,4,-3,-3,3,4,-3,-3,5,-4,5,-1,-2,-5,3,-7,-2,-4,-10,-5,-6,-8,5,-1,-3,-5,5,-3,-2,-1,-8,1,-9,-2,-3,4,5,-8,3,-3,8,-7,4,7,-10,1,7,7,-9,9,-7,-3,4,5,3,-6,-5,-4,-2,-7,1,2,1,8,-8,6,-7,-10,-10,-10,4,-6,10,-10,-2,7,-6,-3,-8,-1,-5,4,5,5,-8,10,3,-10,7,7,8,5,3,-5,7,9,-2,-6,-6,2,-7,7,10,3,9,7,4,-3,9,9,-3,-10,3,2,8,-5,-8,-7,10,-8,-1,-8,8,-3,-1,-3,-3,9,-10,5,-9,-4,-5,-5,-2,5,9,-10,7,4,-10,-2,1,-8,6,-8,6,-10,-5,-5,10,-4,-3,6,10,10,6,-2,5,7,-5,-4,10,-1,1,-4,6,-1,-4,1,-8,3,-2,10,-7,9,-3,3,9,8,10,4,-2,6,-4,2,-9,8,2,-1,7,2,-4,-5,9,-4,9,-6,5,-9,-1,2,5,-3,10,-9,5,10,6,-4,-1,3,-8,-1,1,1,10,-1,-3,-6,-10,1,6,-7,-7,5,-1,7,9,2,1,-3,-7,10,9,-3,10,-6,-5,7,6,-1,-4,8,-10,5,-4,-2,3,8,-7,2,-5,4,-3,-4,-6,-8,5,4,-6,5,-9,8,-9,5,9,5,-8,-6,1,10,6,10,3,5,4,9,6,-3,-6,-3,8,3,-7,6,10,7,-5,-7,10,-8,-1,8,-6,4,-1,-1,7,6,-2,3,-10,7,-9,4,6,6,10], dtype = "uint8")#candidate|3444|(702,)|const|uint8
const_3445 = relay.const([[-10,-9,-10,-6,-4,5,4,6,-6,6,-5,6,-3,7,-10,-2,-5,1,-10,10,7,-3,-3,-7],[-2,-10,-7,7,1,7,-8,-2,-2,8,-7,9,6,-4,-2,10,1,3,6,9,3,-7,-7,-5],[1,2,-4,3,-2,8,8,-10,-8,7,4,-9,4,-9,6,-9,-9,-6,-3,-2,-8,10,10,2],[-4,10,-9,-6,-9,-3,1,4,4,-3,-3,-1,-7,4,3,-5,-7,7,-6,-8,-8,-1,-2,8],[-9,2,-8,-2,7,4,1,9,4,5,-10,6,5,-6,-6,-4,5,-6,2,8,3,-1,1,4],[7,7,6,5,3,-10,-6,-6,4,-4,10,-8,-5,-7,1,10,-5,-7,-2,-4,-6,6,1,-4],[3,-1,-1,-8,-10,-1,-10,-10,9,8,2,6,8,-1,-5,-4,-1,3,-4,8,-8,4,9,-3],[-3,-10,4,-4,-10,-1,-8,-3,-10,2,-9,-9,-9,-5,8,7,-2,8,-4,8,5,-9,6,1],[2,1,4,-8,-4,-9,4,4,4,-2,2,4,-3,10,7,-5,-5,-10,-6,-9,-3,1,-8,-3],[-8,-3,-7,8,10,-9,-1,5,9,-4,6,-5,6,6,2,-8,-6,-1,-10,5,10,8,-6,-7],[10,2,-7,-3,-5,-6,-10,-9,7,-1,2,-6,8,2,-7,-1,-10,-1,1,9,6,-5,2,-3],[4,6,10,6,6,-3,7,-9,8,4,-7,5,10,10,-2,3,-8,1,10,5,-7,10,4,-1],[-9,-10,-9,10,5,-1,4,4,-4,-2,-2,2,-7,3,2,-2,10,7,-8,-7,8,1,-6,8],[10,6,-8,1,-1,-7,-10,-3,-4,8,-9,7,6,3,-1,-2,2,-2,6,-8,-2,7,-5,-2],[3,10,-8,-1,-5,6,9,6,6,4,5,-9,8,-7,-8,-1,-1,-3,10,-3,2,10,9,-3],[-7,-9,8,7,5,8,-5,6,-3,-6,7,-7,-1,10,-4,7,1,-4,-7,4,7,7,4,9],[-2,-2,6,-8,8,-9,1,4,3,1,-10,-1,-1,-10,-10,4,-6,1,-6,9,4,-6,3,9],[9,7,8,-6,-4,6,7,-8,-6,7,7,-6,5,8,-2,-5,10,10,-7,7,-5,9,-2,-7],[5,2,1,5,-10,3,1,-2,-9,8,-1,9,-7,7,5,-10,7,4,-8,3,1,9,-3,2],[-5,8,-5,-1,-7,-2,4,5,-1,-1,-8,-8,-10,1,-10,-5,-3,-3,2,-1,-6,-1,4,-4],[-7,-6,9,3,1,-3,9,7,1,-2,-6,1,-7,-2,10,-8,1,3,-7,9,2,-10,8,-5],[-9,-1,2,-9,-4,-10,9,5,-3,9,-7,-10,8,2,-9,-6,-5,-7,1,-6,9,1,-5,5],[7,9,-2,-4,1,8,-4,2,3,6,5,9,9,9,10,-3,-10,10,-3,2,-10,-6,3,4],[7,-10,-2,-4,2,-7,9,-7,6,1,-2,3,-3,4,7,4,8,4,-4,10,-4,-10,1,-2],[-7,-6,7,-8,-8,-8,10,9,-5,-7,1,-7,-8,-8,6,-6,6,-9,9,5,10,2,-3,-10],[-4,-9,6,-2,5,-3,-3,-2,-1,3,-10,9,10,-2,2,3,-10,-3,-10,-3,8,-6,7,9],[10,-9,-10,10,10,5,5,10,-10,-6,-9,-5,-6,-7,10,-2,9,1,-8,1,3,9,-4,7],[-1,6,1,8,-6,-2,-10,7,4,9,8,-9,6,3,7,5,3,10,7,-3,3,-7,10,2],[-1,9,3,-2,-7,10,-5,4,8,-1,-1,8,-2,7,-1,9,2,-3,7,5,-2,-10,9,4],[7,2,4,2,-7,9,9,-9,-7,7,10,5,-6,1,-10,-5,-2,7,-9,1,9,3,9,1],[6,7,-4,2,-1,7,7,8,-1,7,-3,5,10,2,-1,7,-4,7,-1,8,-1,-1,7,10],[-4,7,5,3,-1,9,9,3,-2,-9,-9,-5,2,-9,-5,6,-3,-9,6,-8,-7,8,2,-9]], dtype = "int8")#candidate|3445|(32, 24)|const|int8
call_3442 = relay.TupleGetItem(func_2346_call(relay.reshape(const_3443.astype('float32'), [7, 9, 12]), relay.reshape(const_3443.astype('float32'), [7, 9, 12]), relay.reshape(const_3444.astype('uint8'), [702,]), relay.reshape(const_3445.astype('int8'), [64, 12]), ), 3)
call_3446 = relay.TupleGetItem(func_2352_call(relay.reshape(const_3443.astype('float32'), [7, 9, 12]), relay.reshape(const_3443.astype('float32'), [7, 9, 12]), relay.reshape(const_3444.astype('uint8'), [702,]), relay.reshape(const_3445.astype('int8'), [64, 12]), ), 3)
func_1237_call = mod.get_global_var('func_1237')
func_1239_call = mutated_mod.get_global_var('func_1239')
call_3454 = relay.TupleGetItem(func_1237_call(relay.reshape(const_3445.astype('int8'), [16, 12, 4])), 0)
call_3455 = relay.TupleGetItem(func_1239_call(relay.reshape(const_3445.astype('int8'), [16, 12, 4])), 0)
var_3456 = relay.var("var_3456", dtype = "uint8", shape = (702,))#candidate|3456|(702,)|var|uint8
bop_3457 = relay.bitwise_xor(const_3444.astype('int16'), relay.reshape(var_3456.astype('int16'), relay.shape_of(const_3444))) # shape=(702,)
output = relay.Tuple([bop_3421,call_3442,const_3443,const_3445,call_3454,bop_3457,])
output2 = relay.Tuple([bop_3421,call_3446,const_3443,const_3445,call_3455,bop_3457,])
func_3467 = relay.Function([var_3420,var_3456,], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
var_3468 = relay.var("var_3468", dtype = "uint32", shape = (5, 15, 16))#candidate|3468|(5, 15, 16)|var|uint32
var_3469 = relay.var("var_3469", dtype = "uint8", shape = (702,))#candidate|3469|(702,)|var|uint8
output = func_3467(var_3468,var_3469,)
func_3470 = relay.Function([var_3468,var_3469,], output)
mutated_mod['func_3470'] = func_3470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3472 = relay.var("var_3472", dtype = "int64", shape = ())#candidate|3472|()|var|int64
var_3473 = relay.var("var_3473", dtype = "int64", shape = (14, 1, 10))#candidate|3473|(14, 1, 10)|var|int64
bop_3474 = relay.add(var_3472.astype('int64'), var_3473.astype('int64')) # shape=(14, 1, 10)
uop_3481 = relay.acosh(var_3473.astype('float32')) # shape=(14, 1, 10)
bop_3498 = relay.subtract(uop_3481.astype('int32'), var_3472.astype('int32')) # shape=(14, 1, 10)
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
var_3509 = relay.var("var_3509", dtype = "uint32", shape = (1200,))#candidate|3509|(1200,)|var|uint32
var_3510 = relay.var("var_3510", dtype = "uint8", shape = (702,))#candidate|3510|(702,)|var|uint8
call_3508 = relay.TupleGetItem(func_3467_call(relay.reshape(var_3509.astype('uint32'), [5, 15, 16]), relay.reshape(var_3510.astype('uint8'), [702,]), ), 4)
call_3511 = relay.TupleGetItem(func_3470_call(relay.reshape(var_3509.astype('uint32'), [5, 15, 16]), relay.reshape(var_3510.astype('uint8'), [702,]), ), 4)
output = relay.Tuple([bop_3474,bop_3498,call_3508,var_3509,var_3510,])
output2 = relay.Tuple([bop_3474,bop_3498,call_3511,var_3509,var_3510,])
func_3515 = relay.Function([var_3472,var_3473,var_3509,var_3510,], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
var_3516 = relay.var("var_3516", dtype = "int64", shape = ())#candidate|3516|()|var|int64
var_3517 = relay.var("var_3517", dtype = "int64", shape = (14, 1, 10))#candidate|3517|(14, 1, 10)|var|int64
var_3518 = relay.var("var_3518", dtype = "uint32", shape = (1200,))#candidate|3518|(1200,)|var|uint32
var_3519 = relay.var("var_3519", dtype = "uint8", shape = (702,))#candidate|3519|(702,)|var|uint8
output = func_3515(var_3516,var_3517,var_3518,var_3519,)
func_3520 = relay.Function([var_3516,var_3517,var_3518,var_3519,], output)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3700 = relay.const([[[7.735508,-1.436754,9.856786,-7.996757,-9.233177,-5.719248,7.510444,1.998894,-9.422781,5.745409,-5.123767,-3.999251],[2.752168,-8.801302,-9.544253,-4.608322,-5.972361,5.038061,8.015046,1.147802,-7.732781,2.605939,-3.164017,-8.516567],[2.091993,-1.480999,8.475555,0.339575,-7.566519,-8.462104,-3.504487,-8.654819,-5.685007,-4.885789,-8.740703,8.333097],[2.786653,-1.630637,-0.014595,-4.423572,-3.683425,7.051826,0.571234,-8.740136,-0.303268,5.282578,-4.126423,7.048896],[7.688573,-8.398061,-7.578479,-1.560621,2.089192,2.287101,4.468126,9.017851,-7.462078,1.318337,-8.364565,8.995757]],[[9.129869,5.125062,7.569664,-2.823010,-1.408032,-3.712610,-8.472294,-2.577731,6.851156,6.226403,1.886456,-2.037649],[7.397815,-8.181238,3.364524,-1.046495,-6.554759,-1.360493,0.077877,-2.720861,-9.706534,-4.414354,9.803888,-0.644994],[-0.836857,-4.018900,-8.226133,-4.513544,-4.552287,5.855720,-3.542791,-4.841081,7.248358,-7.478289,6.904207,-7.070405],[5.742838,8.352805,0.863365,3.353282,0.603529,-9.598630,-8.067599,-5.134082,6.013040,8.658092,7.998544,-3.477155],[-9.509635,3.866232,3.134298,6.251684,-4.823254,6.466841,-5.390087,-1.329503,-1.485555,-2.805022,2.252934,-5.888425]],[[-6.711029,-2.532010,6.191774,3.847917,-9.035291,-3.361022,-8.213642,-8.799075,-0.400739,8.386825,4.118102,-9.576954],[-8.041462,-0.900760,8.263094,-7.359069,-0.764750,-7.800614,6.423015,-9.665853,-5.013122,4.175695,-0.135109,-8.265959],[0.086921,-7.263495,2.108090,2.301376,3.086239,7.932362,-0.999373,-3.277575,-4.653609,-2.865663,-9.726901,0.556440],[2.206598,-5.755313,8.758157,-7.129852,-3.638333,9.579410,-6.842406,5.218826,-4.345570,-5.297326,-8.416734,-7.739863],[8.830125,-5.709034,6.525216,2.852853,-5.105364,-2.270021,-0.177252,-1.739516,1.442415,-1.734587,-8.627683,7.869390]],[[-0.999326,3.792963,5.995090,0.335802,1.769553,-8.570486,-8.465804,2.422642,8.021407,-1.565006,2.354776,-7.997136],[-9.866237,-1.243897,-8.560064,8.202187,4.646246,9.390012,-1.923821,-7.351190,-9.111010,-6.619002,-4.540962,5.951504],[-3.920619,0.081617,9.547817,-5.546646,-8.751242,-8.745838,8.153739,5.991971,2.427241,5.686787,6.718706,1.491836],[-9.316931,-1.299909,4.840798,8.826500,1.790234,3.302703,-7.486015,-2.621957,-6.777092,-3.951363,5.034487,7.294251],[-9.090778,-5.572472,-4.145111,-4.933946,-2.881614,8.173981,-8.221095,5.990886,3.460946,-4.824962,-4.301615,-4.029984]],[[-4.784608,-9.088239,-5.714309,-7.506437,-5.024448,-1.348082,-3.756175,-3.760928,-3.273734,-0.306405,-1.851619,-5.482873],[4.930697,6.778795,-8.775404,-7.195265,-6.293523,-5.534461,-8.939924,-6.765057,9.528176,1.564214,6.480996,-2.036766],[2.520722,-8.693562,-9.953578,8.218079,-0.260038,-6.093634,-6.045630,2.620003,9.480849,1.734261,-0.887040,9.587917],[0.735429,1.279541,-2.495563,-6.498170,-0.125239,3.098980,9.385901,-0.904575,0.919239,-4.565030,-9.211451,9.117483],[0.012593,7.607760,-2.767318,-8.073674,-9.454380,-7.826575,9.580953,-0.517127,0.558699,9.506230,8.506251,-5.152990]],[[-9.880426,-5.637869,-3.617190,-5.759586,1.595809,9.841920,-9.705321,4.252530,6.474867,2.490495,-5.637905,8.911035],[1.967226,-6.312755,-5.959276,-5.845826,-9.011646,4.037611,-6.462473,-1.330753,-9.036657,1.762533,7.582536,2.275656],[-5.162177,-1.268481,-8.345418,-3.405720,-1.778944,-1.234550,-1.952521,9.811469,-2.170736,0.908130,-4.799640,-9.225941],[-1.456754,-4.315716,-2.936074,-7.661654,-8.551309,4.512989,-8.975630,3.123243,-1.825170,-2.137196,-4.149168,2.753294],[-4.575642,5.161246,7.203368,7.958830,4.342069,8.543363,6.615184,-8.003890,-2.173307,4.673409,5.135522,8.550924]],[[-5.221939,-1.497647,1.708423,0.020534,9.276217,7.472705,-3.121521,-2.723506,-7.071673,3.615107,2.817179,9.947085],[7.216763,6.238133,1.871748,8.427850,-3.205826,-9.270382,1.652019,0.686388,-6.429829,9.739671,-9.275649,-2.869005],[-0.821412,-2.525668,5.374840,5.749984,-0.157736,-7.083500,-5.269770,-7.451421,8.521637,-2.789630,-4.850747,1.996857],[-1.722029,-5.437751,-8.766101,1.852440,-0.513505,4.412656,-5.660184,5.698577,8.298381,-6.208024,0.788478,-6.483124],[-8.216380,3.804695,-6.829462,1.599077,-4.618458,2.014049,0.178857,3.124061,7.648321,7.175431,2.344204,-5.143862]],[[-3.056559,-7.922088,2.520837,8.980588,-8.616366,0.357912,4.164314,2.571266,-4.071414,4.631741,-7.704757,0.627242],[7.173457,2.876834,5.223098,0.964023,-0.889876,6.003265,-4.849932,4.785782,-3.388973,6.950349,-6.577549,3.412250],[-8.572498,-7.663017,8.935568,-9.527896,-7.911142,0.585695,5.833601,-4.842101,9.340234,-7.908283,-2.828901,-8.522521],[-0.871752,-2.777820,-4.407619,4.356635,-0.845155,0.090969,7.740042,-2.689728,9.202321,-2.029142,-5.065874,8.512094],[-8.357981,1.444932,0.403875,2.976142,-5.695438,-3.143139,3.359260,5.121537,6.495257,5.491600,-8.623796,7.056112]],[[-2.093518,-5.434715,-3.788314,-5.719514,7.354949,3.977923,5.587536,-4.374544,-7.665442,-2.333577,-6.378948,-5.404936],[7.159507,0.031841,9.761302,3.068831,-3.319750,0.313236,5.245273,2.756870,6.061901,-0.747976,-3.097760,-3.596272],[2.536496,-3.580735,-9.729163,-4.087869,9.993409,5.485846,-8.693488,-3.756013,6.696085,8.540022,6.820191,5.661697],[3.647710,1.013457,9.402366,-3.609174,-1.496062,-3.697249,3.400438,-1.794945,-3.824046,-1.466223,0.888235,3.976672],[-3.888695,1.037991,-7.683146,-8.152911,-3.135813,0.013905,-0.773898,6.896989,-8.421519,1.672193,-5.769447,-4.159167]],[[-0.701677,4.123656,1.135647,-6.195333,8.980441,2.669480,-8.957737,7.929199,4.382014,-9.197590,-8.544247,5.952208],[-3.754008,0.789256,-1.465766,0.794458,-0.197613,-6.427034,-4.875697,1.867775,6.726938,6.771120,-3.379695,-0.276684],[8.147268,1.222938,-4.737454,-4.329790,-2.521348,2.983007,-9.294729,1.725635,7.225939,-1.003948,-6.401804,3.273572],[4.934430,8.737153,4.340361,8.345644,1.307609,1.091300,4.366198,-9.532461,5.652681,1.169939,-8.453766,-1.718778],[-0.151836,1.087850,-3.257488,-7.110611,2.882919,9.637506,-3.868453,6.580867,-9.452725,7.254326,0.531301,9.781809]],[[-7.522995,-1.066389,3.434230,-2.220406,8.551412,-3.740499,9.057647,5.603852,-6.745905,1.981821,-3.803041,-3.357594],[1.530961,-9.227135,0.164455,2.052709,-1.492865,3.719008,-5.777012,-5.211479,0.570076,6.719120,0.276342,-6.988658],[-0.198040,-4.614201,-7.596090,2.051013,7.280764,-9.669410,6.854608,-1.069818,8.059075,6.213290,3.961899,-3.168480],[-5.359781,7.661403,-1.173976,9.948436,-5.599772,8.556784,9.743733,-3.700037,8.816549,1.533006,8.391436,-4.074258],[5.163527,-4.041757,2.389700,-6.895896,7.619525,-9.255881,2.986748,-2.335268,6.804225,-1.977062,-2.032906,2.467612]],[[-0.484350,-7.629022,-5.079239,-7.087797,-3.138985,1.247938,8.167370,8.844764,3.645433,0.515298,2.951141,-2.980498],[1.793844,7.527336,-3.302421,8.430039,-1.677302,-1.469349,9.886205,-0.435696,4.419207,8.656498,0.327377,7.865292],[-2.968546,6.453768,-7.542944,5.147817,0.042243,9.961088,5.296275,-8.361532,-2.105034,4.767034,3.216507,3.183737],[7.047561,-5.966469,3.710793,4.453341,-6.726927,-5.278007,8.797283,-9.497343,-2.783347,-2.033381,8.682858,6.071353],[2.886385,5.547429,7.806738,7.084392,9.423152,6.581660,-7.097274,5.046013,-9.200803,2.315474,9.839256,-2.832949]],[[-4.222102,8.756722,7.698316,4.800583,3.643261,8.229737,-6.057668,3.720321,-5.504193,-8.090597,-2.754058,4.186084],[6.878781,-9.614991,0.380330,6.606529,0.837824,4.133883,7.249345,7.903502,2.902293,8.964350,5.671889,9.013152],[-0.569210,-3.397119,1.532859,1.438094,6.916009,5.308524,-1.586665,-7.453462,-1.501219,-3.469837,-1.546429,-8.880581],[-2.469957,1.102227,2.873310,-4.936198,6.926557,-5.173272,-2.622348,9.709508,3.454279,-1.138910,1.008780,1.415158],[-1.489322,-1.437154,9.682300,-8.020187,-3.528372,4.923160,4.684906,1.539297,8.669426,4.365762,4.244353,4.507463]],[[-4.298240,-0.663445,-6.552711,0.043215,7.610933,7.387775,-5.756220,5.519440,-8.754983,-4.060435,-3.170058,-5.626280],[8.705327,6.729296,-6.758332,2.348245,0.240637,3.751660,9.188420,-0.411795,-4.627489,4.290038,-8.322142,7.267799],[-0.151053,-8.769306,-2.388096,-5.059549,-9.752201,-5.291586,-9.595071,2.480648,-6.582431,1.424928,2.110579,-0.493892],[8.606245,6.708850,-5.652615,-9.684034,-0.171035,6.490937,2.882214,2.798392,-9.500070,5.221305,3.366312,-5.246035],[0.721683,-1.855602,6.094044,-9.857303,-8.645580,-0.323511,-7.110071,6.881792,7.816932,8.934379,-1.383378,2.969468]],[[1.299236,6.305564,4.586647,-6.293609,4.819492,-1.326783,7.453485,-7.452539,-2.638273,6.025359,7.222660,0.710063],[0.199179,-2.362386,1.476440,-7.218161,-4.561643,-6.407915,2.632987,-3.050227,5.737270,-8.874005,0.546290,-2.031941],[1.917429,-3.249461,8.871561,-0.370111,3.214394,-8.042418,-3.017744,8.689697,9.229036,-9.775351,-8.105439,0.157092],[1.223084,-3.521604,-3.531660,-5.942039,-2.160720,1.057346,8.697866,0.151487,-1.148316,8.984676,-9.389003,2.221888],[-8.464543,1.441632,-0.915954,-7.147554,-1.793099,-7.627352,-8.887916,-5.199543,9.396391,-3.202039,9.506930,6.333694]]], dtype = "float32")#candidate|3700|(15, 5, 12)|const|float32
uop_3701 = relay.log10(const_3700.astype('float32')) # shape=(15, 5, 12)
func_508_call = mod.get_global_var('func_508')
func_510_call = mutated_mod.get_global_var('func_510')
var_3708 = relay.var("var_3708", dtype = "float64", shape = (60, 2))#candidate|3708|(60, 2)|var|float64
call_3707 = func_508_call(relay.reshape(var_3708.astype('float64'), [4, 15, 2]))
call_3709 = func_508_call(relay.reshape(var_3708.astype('float64'), [4, 15, 2]))
func_2346_call = mod.get_global_var('func_2346')
func_2352_call = mutated_mod.get_global_var('func_2352')
var_3712 = relay.var("var_3712", dtype = "float32", shape = (54, 14))#candidate|3712|(54, 14)|var|float32
var_3713 = relay.var("var_3713", dtype = "uint8", shape = (702,))#candidate|3713|(702,)|var|uint8
var_3714 = relay.var("var_3714", dtype = "int8", shape = (768,))#candidate|3714|(768,)|var|int8
call_3711 = relay.TupleGetItem(func_2346_call(relay.reshape(var_3712.astype('float32'), [7, 9, 12]), relay.reshape(var_3712.astype('float32'), [7, 9, 12]), relay.reshape(var_3713.astype('uint8'), [702,]), relay.reshape(var_3714.astype('int8'), [64, 12]), ), 6)
call_3715 = relay.TupleGetItem(func_2352_call(relay.reshape(var_3712.astype('float32'), [7, 9, 12]), relay.reshape(var_3712.astype('float32'), [7, 9, 12]), relay.reshape(var_3713.astype('uint8'), [702,]), relay.reshape(var_3714.astype('int8'), [64, 12]), ), 6)
output = relay.Tuple([uop_3701,call_3707,var_3708,call_3711,var_3712,var_3713,var_3714,])
output2 = relay.Tuple([uop_3701,call_3709,var_3708,call_3715,var_3712,var_3713,var_3714,])
func_3737 = relay.Function([var_3708,var_3712,var_3713,var_3714,], output)
mod['func_3737'] = func_3737
mod = relay.transform.InferType()(mod)
var_3738 = relay.var("var_3738", dtype = "float64", shape = (60, 2))#candidate|3738|(60, 2)|var|float64
var_3739 = relay.var("var_3739", dtype = "float32", shape = (54, 14))#candidate|3739|(54, 14)|var|float32
var_3740 = relay.var("var_3740", dtype = "uint8", shape = (702,))#candidate|3740|(702,)|var|uint8
var_3741 = relay.var("var_3741", dtype = "int8", shape = (768,))#candidate|3741|(768,)|var|int8
output = func_3737(var_3738,var_3739,var_3740,var_3741,)
func_3742 = relay.Function([var_3738,var_3739,var_3740,var_3741,], output)
mutated_mod['func_3742'] = func_3742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3759 = relay.var("var_3759", dtype = "float64", shape = (9, 14, 8))#candidate|3759|(9, 14, 8)|var|float64
uop_3760 = relay.sigmoid(var_3759.astype('float64')) # shape=(9, 14, 8)
func_1372_call = mod.get_global_var('func_1372')
func_1377_call = mutated_mod.get_global_var('func_1377')
var_3766 = relay.var("var_3766", dtype = "uint32", shape = (196,))#candidate|3766|(196,)|var|uint32
const_3767 = relay.const([-4,5,-6,-1,2,-7,9,8,4,10,-7,-2,2,-3,6,-2,-1,-2,-7,-7,5,8,9,7,-3,-7,-2,9,3,-3,-5,7,1,10,-4,-9,-2,2,-4,-5,6,5,1,1,5,-10,8,-4,-9,-9,3,4,6,7,7,-6,3,10,-5,-7,5,-1,-7,4,-7,-10,2,6,-10,-7,-4,-9,-4,1,9,2,-5,1,-5,-9,9,-5,-1,-8,-3,-5,9,5,2,5,-6,-7,9,5,2,-8,-1,-9,-3,3,-3,-6,2,-8,-9,-8,-1,6,-3,-3,2,6,-6,6,-4,-9,7,1,-5,6,5,9,-8,-5,-5,-6,2,2,6,9,-9,7,2,-7,-1,2,-6,-2,-5,5,-7,-9,-2,-9,1,6,-6,7,-5,6,-9,1,-1,-2,-2,-8,-10,2,-10,-8,-8,-2,-9,4,-3,-9,-9,8,5,-8,-6,8,5,-8,10,7,-10,4,-8,-5,-9,1,-7,7,8,-1,-4,-2,8,4,-6,7,8,7,-8,-6,9,4,-8,-9,8,5,-8,1,-9,-5,-3,-4,2,8,-6,-8,4,10,-4,-10,-9,-6,-4,-5,1,-9,-10,7,4,3,-2,4,2,-9,3,3,-4,8,-8,-10,-1,-3,-10,3,8,4,7,-7,2,-7,3,6,9,-5,7,7,-4,10,-3,-10,9,4,-9,-4,4,7,-1,7,7,8,1,5,-8,-9,-8,-3,-2,4,5,-4,9,-8,-4,-2,-1,6,-6,7,-6,4,-5,2,3,1,-3,-10,-6,-3,-5,3,7,-8,-10,8,1,-9,-10,-6,-6,4,-3,2,-5,2,-1,-8,4,-3,10,2,5,10,4,-2,-4,-10,1,8,8,-5,-7,-9,-8,-7,6,-2,5,-6,-1,-1,-5,3,4,1,3,1,9,-1,4,7,-1,1,-2,-5,5,9,-9,-7,6,-3,4,-1,7,1,-1,-1,9,8,-9,6,1,6,-8,10,-1,-4,-10,9,6,7,10,10,10,-1,-3,2,2,3,-1,5,8,8,-4,-3,6,-10,8,6,-9,6,3,7,6,-7,-3,-10,2,6,4,8,9,-8,7,-4,2,2,8,3,9,4,2,10,-1,-10,6,-8,-6,-2,2,-3,8,2,-3,3,-6,-4,10,-4,10,9,-2,1,-3,2,2,10,1,7,10,7,-6,6,-5,-10,-4,1,6,-7,8,4,7,10,-7,-3,9,-5,-1,3,-1,2,-4,3,-6,6,-10,-4,6,4,-10,-2,-6,-6,-8,-4,-3,-4,9,6,-8,1,-5,-6,8,-4,-6,9,-3,-1,-5,-10,9,-7,3,-8,-6,-10,4,9,7,-10,4,-5,6,10,10,2,-3,-2,10,7,6,6,5,-2,3,-3,5,3,-5,3,-2,7,-5,2,-6,1,6,4,5,2,-9,-4,-7,6,-2,9,5,9,-6,5,-10,6,8,-7,-7,10,6,-10,10,6,4,-6,-5,9,6,3,-4,1,-10,-2,7,-3,-7,7,9,-9,-3,2,-2,9,-8,-3,5,4,-10,4,-10,10,10,-5,3,1,-1,-3,-7,10,-5,8,4,-7,10,-2,6,8,-1,6,8,-9,-2,3,-5,5,-7,1,-4,-8,8,7,-1,-4,9,-8,7,8,-10,-9,8,-8,-6,6,7,-6,-3,-1,-9,9,-4,5,-4,1,5,-2,3,-6,9,2,-6,-1,3,-3,8,10,-9,-3,7,-9,-3,5,-1,8,-7,-3,1,1,-7,-6,-8,-7,9,-2,-4,-1,3,7,-1,1,-5,10,-2,10,7,4,-2,2,3,-10,-6,5,10,-3,-7,8,1,-8,9,2,-3,1,9,7,-9,8,9,-5,5,8], dtype = "uint8")#candidate|3767|(702,)|const|uint8
var_3768 = relay.var("var_3768", dtype = "float64", shape = (280,))#candidate|3768|(280,)|var|float64
call_3765 = relay.TupleGetItem(func_1372_call(relay.reshape(var_3766.astype('uint32'), [2, 7, 14]), relay.reshape(var_3766.astype('uint32'), [2, 7, 14]), relay.reshape(const_3767.astype('uint8'), [702,]), relay.reshape(var_3768.astype('float64'), [5, 56]), ), 1)
call_3769 = relay.TupleGetItem(func_1377_call(relay.reshape(var_3766.astype('uint32'), [2, 7, 14]), relay.reshape(var_3766.astype('uint32'), [2, 7, 14]), relay.reshape(const_3767.astype('uint8'), [702,]), relay.reshape(var_3768.astype('float64'), [5, 56]), ), 1)
output = relay.Tuple([uop_3760,call_3765,var_3766,const_3767,var_3768,])
output2 = relay.Tuple([uop_3760,call_3769,var_3766,const_3767,var_3768,])
func_3772 = relay.Function([var_3759,var_3766,var_3768,], output)
mod['func_3772'] = func_3772
mod = relay.transform.InferType()(mod)
var_3773 = relay.var("var_3773", dtype = "float64", shape = (9, 14, 8))#candidate|3773|(9, 14, 8)|var|float64
var_3774 = relay.var("var_3774", dtype = "uint32", shape = (196,))#candidate|3774|(196,)|var|uint32
var_3775 = relay.var("var_3775", dtype = "float64", shape = (280,))#candidate|3775|(280,)|var|float64
output = func_3772(var_3773,var_3774,var_3775,)
func_3776 = relay.Function([var_3773,var_3774,var_3775,], output)
mutated_mod['func_3776'] = func_3776
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4137 = relay.var("var_4137", dtype = "float64", shape = (6, 9, 15))#candidate|4137|(6, 9, 15)|var|float64
uop_4138 = relay.exp(var_4137.astype('float64')) # shape=(6, 9, 15)
bop_4144 = relay.greater_equal(uop_4138.astype('bool'), relay.reshape(var_4137.astype('bool'), relay.shape_of(uop_4138))) # shape=(6, 9, 15)
func_3772_call = mod.get_global_var('func_3772')
func_3776_call = mutated_mod.get_global_var('func_3776')
const_4153 = relay.const([[-1.011990,6.912405,1.442681,-3.918060],[-9.251073,6.246245,-8.294852,-5.998833],[7.445440,7.582189,7.866776,-0.896819],[-9.479315,-3.280422,-9.434099,2.423476],[-3.440192,8.293598,-2.618706,8.445351],[-0.957184,2.702893,4.555622,5.662303],[7.361540,2.178774,0.286059,-5.803178],[9.253039,-7.862767,-5.693463,-3.147451],[-6.332676,-3.508642,-4.296061,0.379993],[-1.405297,2.972552,-7.247278,-1.646284],[7.976711,-7.653001,5.645819,6.433933],[6.534940,9.812442,5.101989,-5.226011],[8.332768,-1.809422,8.419981,-8.124095],[-8.501271,9.215947,8.976618,-4.637801],[-3.239489,6.793309,3.400294,-0.558261],[-9.144817,-8.328681,-3.807122,1.961178],[7.426300,1.682212,9.135397,-4.563735],[2.567300,-4.428460,5.004965,-6.942724],[-5.085327,-9.839771,-8.992538,-6.801737],[-5.951784,-0.311285,-6.510270,-2.193531],[9.463376,-5.589293,1.965451,-4.555662],[-9.565588,9.855904,8.886029,8.230118],[3.454961,1.344067,1.416043,-6.805899],[6.919609,-6.646737,-2.564748,8.457813],[-5.430687,-4.373602,1.856033,-0.444287],[-9.920454,7.232270,4.134813,5.828595],[-6.698117,-1.633998,-2.959905,0.148576],[0.250173,9.482237,-6.772156,6.007703],[-1.745564,0.788597,-8.387351,-4.294716],[8.561159,-7.699097,-6.321092,-4.001347],[1.991019,-8.109927,5.395237,1.847373],[0.622230,7.525688,8.727456,-2.750328],[-7.247874,5.380811,-9.916701,4.884635],[-5.041432,-5.207524,8.093913,8.747538],[-0.203338,9.606949,-3.121223,-5.360079],[1.749764,8.923648,5.278852,6.510166],[4.617157,-6.066259,-0.346176,-6.815013],[-7.490028,0.982655,7.519407,-9.399742],[4.468022,6.398854,-4.031883,9.101162],[0.206427,-4.525933,2.963904,7.114607],[5.843311,-0.412829,7.540817,-9.711757],[2.211767,-4.107634,-1.564157,-1.190729],[-2.019376,7.300258,-4.246853,-1.502765],[-8.642950,-9.354407,-5.368023,-8.566216],[9.515946,7.080577,9.023177,-6.485995],[-4.505066,7.874599,3.953959,-0.525179],[-8.422370,-0.293922,-1.451786,-2.560513],[-9.670890,-1.988079,-4.094755,-5.568217],[0.569962,9.467130,1.635416,-4.151573],[-7.950829,-2.591893,4.146152,7.511619],[4.232021,-9.724510,-6.495162,-8.142044],[4.153753,-8.359274,4.743531,-5.067255],[-1.254387,-7.855645,2.083103,0.658839],[-6.557436,-1.552787,-0.309488,6.482461],[2.450827,-5.606956,3.223608,-2.889779],[3.495107,-1.236557,5.613374,-8.095254],[-1.298986,8.511689,3.683958,3.083013],[6.671201,2.186041,1.944842,0.177864],[7.347565,5.721024,-8.822173,4.508331],[-9.384110,-0.107104,-8.604701,0.904947],[4.753483,0.172526,-9.864096,8.884760],[-8.836992,5.224612,5.534825,-5.951356],[-1.563576,1.741054,-9.000245,2.216728],[9.660436,-0.797834,-1.840909,-3.455761],[0.926352,-9.178246,7.988524,0.105598],[-6.380119,6.503454,6.761541,-7.259004],[5.403852,-2.076253,3.184774,-9.200740],[1.042093,-8.355905,3.896696,-4.112164],[-2.427487,-4.736189,-4.627024,8.423184],[-6.310266,-6.557799,3.943793,-5.986878],[6.861974,-9.619806,-5.765918,6.849228],[3.557534,9.500016,-6.486868,7.879593],[-7.475093,-2.978307,8.079785,5.870864],[2.921169,1.195811,2.074854,7.797403],[-8.248032,5.038184,6.741576,9.633917],[-6.540386,9.484635,-5.868757,-0.021822],[-9.463333,4.811340,-7.290377,2.584604],[-6.478914,-7.281056,-6.560729,-8.114051],[1.273015,7.464957,-9.934593,-8.151051],[8.535820,-9.023033,-7.381285,-6.211674],[9.650671,7.241101,6.982817,8.419702],[2.900690,1.469635,-3.506449,4.387004],[3.330594,-6.318887,8.993915,-1.156922],[-8.025807,-7.405544,5.791699,1.696568],[-0.321229,7.735260,1.505721,8.106618],[-9.758103,9.854736,0.398516,8.938368],[0.565911,-0.276067,-5.141742,-1.203746],[6.284170,4.240905,1.917385,-7.274568],[6.687331,6.428064,-0.704244,-2.661203],[4.603054,8.891761,-9.206645,7.189296],[-8.546499,-5.748062,0.755850,3.832162],[8.215417,8.209969,5.198729,-7.147163],[5.325874,-9.089469,-4.755777,3.352595],[-6.410553,-5.123600,8.665438,-3.577703],[-5.379540,-3.346436,5.194905,-8.283751],[-8.230795,-6.154969,5.210967,2.274742],[-0.904660,9.607580,-2.914984,6.888388],[0.672345,0.421742,7.823295,4.987243],[-3.003269,5.623170,6.020773,-6.118339],[-7.176825,-8.978911,3.076023,-0.377660],[1.803887,-0.576049,-3.671972,-2.721866],[-0.289702,-5.467698,7.265077,9.646166],[4.911009,-7.906461,-5.152360,8.440833],[3.388818,8.160835,7.978925,-5.598115],[1.691921,-1.041315,-6.865733,1.722488],[-8.862022,6.231262,4.055143,8.987993],[3.944030,-5.690065,-5.559424,-6.858578],[0.343003,-2.202534,-6.084066,7.421057],[1.295115,3.628330,-9.965186,-8.371683],[1.159978,-7.582514,-6.203547,2.173433],[4.459887,-3.145789,5.158058,0.009522],[-8.803272,1.683138,9.612613,-2.623527],[-1.420310,-7.044261,-9.295873,4.116959],[-7.339923,7.090912,9.035932,5.957393],[-8.119209,-5.152078,-9.996081,-1.998136],[1.270915,8.305718,-8.861056,-9.031940],[-2.443294,9.558272,4.196060,-6.525573],[-3.183376,5.694279,-8.331863,1.199028],[-8.936767,0.812170,1.600963,7.934315],[2.719671,4.992350,-6.490528,5.191998],[1.027789,3.736190,3.602294,-1.841816],[8.689084,-9.229329,-9.856173,-7.157067],[6.706619,-8.340303,7.583053,-7.830450],[-8.711915,-4.317937,7.254534,2.497858],[-0.231292,4.106587,-0.504729,-1.363115],[0.930867,-5.438778,-7.911761,-8.897248],[-3.412801,-7.086763,-1.571470,-8.070560],[5.270250,7.614313,-9.040511,7.399021],[-0.062179,7.078461,-2.589254,-4.067437],[-1.643582,-6.697629,-1.747710,-9.880805],[0.166386,-0.744152,7.062687,-2.859944],[-3.416590,5.528591,8.761512,7.497166],[-6.443838,-4.546226,-3.235413,-9.296555],[5.905719,7.582474,-4.454094,-8.476877],[3.875465,2.804010,-6.348197,3.778769],[-9.519676,5.181742,0.543515,1.332888],[3.841274,-8.733244,-6.167264,-7.352192],[6.618174,5.915450,-0.297351,5.051080],[0.314902,-5.130917,2.251085,-9.550692],[1.000233,4.530888,-2.986823,-9.957681],[-3.813956,-0.484851,6.667665,0.630787],[-1.167817,-1.120691,-5.698548,-2.659360],[3.372549,9.997773,-5.980218,-4.473375],[-2.966280,-0.189788,-1.919220,-2.856069],[-0.755980,2.021431,-7.796296,-9.219910],[-9.520668,1.152811,8.073414,-1.048956],[-5.286134,5.099829,3.729154,-9.634017],[4.081452,-3.665611,4.054929,-7.791603],[6.131718,-0.331210,-1.059137,4.824726],[5.449445,-7.800720,-6.377434,5.166384],[-4.459314,-9.456794,-2.183257,8.608712],[5.851725,2.758152,4.568337,-8.390852],[-3.090638,-8.499516,-9.997358,7.632427],[-7.335283,-9.682149,-1.687180,3.391798],[-5.856911,-6.641847,2.173827,-1.735308],[6.313053,1.690341,3.258094,-0.667329],[-4.238805,2.989450,-7.195743,2.648262],[-4.700081,0.244782,0.848195,2.812909],[-5.948740,9.106017,-5.568281,1.824436],[0.287993,-6.847325,-8.393978,-6.844480],[2.762914,2.979037,-7.685247,-9.700050],[-3.883919,0.984422,-9.005760,8.403971],[-2.113451,-9.464129,-1.820973,3.351140],[3.224438,8.491330,-2.062344,-5.381912],[6.904386,9.884436,-3.302264,-0.515861],[4.047135,4.763293,-2.565134,8.481543],[0.009161,2.838048,0.617539,5.877360],[-3.514686,-8.115093,9.583067,-6.534336],[9.289693,-9.332151,8.825282,-4.436355],[2.236428,3.601786,9.325207,-4.513453],[-8.570081,-6.761008,-0.947723,-7.780659],[-1.490878,6.810334,-6.093534,-3.840100],[8.192455,2.258288,9.753519,-1.015355],[7.186133,2.473405,-2.422415,5.050601],[8.291368,-6.749260,-3.972246,3.498182],[3.777790,-9.638303,-6.359573,9.731372],[9.592367,2.385716,1.976711,3.182522],[8.235281,5.590833,4.971738,-9.189299],[-2.685689,-8.453390,-4.091180,-1.288358],[5.166723,2.192602,8.791486,6.367908],[8.528862,-3.702570,-7.984265,-7.854419],[-1.019015,8.779204,-0.805292,-5.697592],[-7.174655,5.850962,-4.885828,7.289973],[-7.799989,-1.116880,0.497874,9.382248],[-5.614025,6.325909,1.948944,-0.116248],[7.275841,9.261645,0.481638,3.530745],[9.445031,-7.169741,-8.077808,9.304858],[-9.987110,-3.822422,4.998394,9.489342],[2.042881,5.362954,-0.329719,-5.646921],[4.012323,2.046421,-6.499900,5.045612],[-8.699130,9.528499,8.017553,9.341624],[-9.019509,4.301857,6.590614,3.725122],[-0.300079,-1.907837,-9.190190,-3.201548],[-6.523359,2.810825,-6.244182,-7.520172],[-8.242270,1.571549,-7.927644,-9.764079],[7.929294,2.738058,-9.821411,1.413267],[3.362351,9.600028,3.706335,5.498665],[0.033790,-4.837339,6.411528,-8.960434],[-6.523493,4.203817,8.424556,-4.054369],[-3.306822,6.104286,-9.371626,4.846917],[-0.266257,-5.653039,-6.805933,-4.894108],[-1.034051,-8.374102,7.400853,0.465986],[-9.488303,9.178488,-6.986027,-7.037481],[3.706397,0.889746,0.992952,9.155717],[8.585600,3.212371,1.119621,-3.259044],[-6.880762,-9.795266,3.820567,9.519663],[-8.326985,4.957954,-4.547599,8.288463],[-7.647836,-1.743083,6.427486,0.048990],[0.763969,0.480911,-1.861349,-2.756166],[-0.252304,1.273968,-2.594700,3.673378],[7.430623,-0.891543,8.603242,1.969679],[-6.210966,6.771173,4.864300,2.280151],[7.794219,1.959931,-4.517045,-1.570366],[-7.835280,-8.243430,-9.084497,-6.410662],[9.254300,-9.421007,-4.266459,-8.970158],[5.680425,9.625920,-5.096403,6.046358],[0.742012,-1.205415,-2.503011,-1.225368],[-5.134513,0.161263,-3.317587,-3.260769],[-7.564650,-5.472567,-5.716344,-1.632907],[-6.933805,-1.236369,-5.018445,-3.415503],[-9.993252,4.347904,6.104270,-2.938985],[-2.188023,9.195576,8.443864,-6.699799],[-1.962988,-9.220973,4.743425,-8.365116],[-9.828743,2.031042,-0.865003,-9.136060],[-2.104853,7.425473,5.678549,9.461839],[8.940865,2.352589,-1.216059,4.471369],[-4.967701,7.827899,-0.834211,-9.705407],[-4.404702,8.853202,7.882002,8.472706],[6.403804,-2.575553,-2.671939,-7.291679],[-0.350771,-5.152655,-4.937637,1.406189],[-8.088528,-2.863759,-8.241860,6.607779],[-4.479582,1.252292,0.085899,3.578467],[0.334289,7.038110,7.137246,4.680370],[9.868863,-4.164294,9.917665,8.515976],[-5.901051,-6.408484,-9.967229,5.364060],[-4.184962,-5.241441,-9.667098,-7.147416],[5.087187,0.182165,-0.303903,-1.294435],[7.094172,2.644286,-6.204478,-1.532233],[-9.942674,9.896959,-1.736222,-6.002939],[5.634705,-6.814478,-2.996295,8.507009],[3.865345,9.858022,-1.358158,8.005061],[-9.532050,-2.124315,1.043287,-5.374247],[-6.955206,-9.948228,-7.172669,2.410142],[-7.314845,9.070228,9.307989,-1.724391],[-1.499033,-1.824754,-0.927508,-6.071807],[-0.410956,9.864158,2.882388,9.095416],[-1.034777,-6.676310,-4.195294,-2.346668],[-2.828354,-2.499690,2.021377,-7.362737],[-9.423074,-5.154247,-5.935700,1.510989],[2.449189,2.582354,-8.275275,-4.356294],[-7.992143,-1.891241,8.425242,9.559200],[-2.700023,3.688273,0.440223,8.750196]], dtype = "float64")#candidate|4153|(252, 4)|const|float64
var_4154 = relay.var("var_4154", dtype = "uint32", shape = (196,))#candidate|4154|(196,)|var|uint32
var_4155 = relay.var("var_4155", dtype = "float64", shape = (280,))#candidate|4155|(280,)|var|float64
call_4152 = relay.TupleGetItem(func_3772_call(relay.reshape(const_4153.astype('float64'), [9, 14, 8]), relay.reshape(var_4154.astype('uint32'), [196,]), relay.reshape(var_4155.astype('float64'), [280,]), ), 1)
call_4156 = relay.TupleGetItem(func_3776_call(relay.reshape(const_4153.astype('float64'), [9, 14, 8]), relay.reshape(var_4154.astype('uint32'), [196,]), relay.reshape(var_4155.astype('float64'), [280,]), ), 1)
func_757_call = mod.get_global_var('func_757')
func_761_call = mutated_mod.get_global_var('func_761')
call_4158 = relay.TupleGetItem(func_757_call(relay.reshape(var_4155.astype('float64'), [4, 5, 14]), relay.reshape(var_4155.astype('float64'), [4, 5, 14]), ), 0)
call_4159 = relay.TupleGetItem(func_761_call(relay.reshape(var_4155.astype('float64'), [4, 5, 14]), relay.reshape(var_4155.astype('float64'), [4, 5, 14]), ), 0)
output = relay.Tuple([bop_4144,call_4152,const_4153,var_4154,var_4155,call_4158,])
output2 = relay.Tuple([bop_4144,call_4156,const_4153,var_4154,var_4155,call_4159,])
func_4164 = relay.Function([var_4137,var_4154,var_4155,], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
mutated_mod['func_4164'] = func_4164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4164_call = mutated_mod.get_global_var('func_4164')
var_4166 = relay.var("var_4166", dtype = "float64", shape = (6, 9, 15))#candidate|4166|(6, 9, 15)|var|float64
var_4167 = relay.var("var_4167", dtype = "uint32", shape = (196,))#candidate|4167|(196,)|var|uint32
var_4168 = relay.var("var_4168", dtype = "float64", shape = (280,))#candidate|4168|(280,)|var|float64
call_4165 = func_4164_call(var_4166,var_4167,var_4168,)
output = call_4165
func_4169 = relay.Function([var_4166,var_4167,var_4168,], output)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4236 = relay.var("var_4236", dtype = "bool", shape = (14, 14, 9))#candidate|4236|(14, 14, 9)|var|bool
const_4237 = relay.const([[[False,False,True,True,True,True,False,True,False],[False,True,False,True,False,False,False,True,True],[False,True,True,False,True,True,False,False,False],[True,False,True,False,True,True,True,False,False],[False,False,True,False,False,True,False,False,True],[True,False,False,False,False,False,True,True,True],[True,True,True,True,False,False,False,False,True],[False,False,True,False,False,True,False,True,False],[True,True,False,False,False,False,False,False,True],[False,False,False,True,True,True,True,False,True],[True,True,False,False,True,False,True,True,False],[False,True,True,False,False,True,False,False,True],[True,True,False,False,True,False,False,True,True],[True,False,True,False,True,False,False,True,True]],[[False,False,True,True,False,False,False,True,True],[True,True,True,True,False,False,True,False,False],[True,False,True,False,True,True,True,False,False],[False,False,True,True,True,True,False,False,True],[True,False,False,False,False,False,True,True,False],[False,False,True,False,True,True,True,True,True],[False,False,True,False,False,True,True,False,False],[False,False,False,True,True,True,False,True,True],[False,True,False,False,True,False,True,True,True],[True,False,False,False,False,False,True,False,True],[False,True,True,True,True,True,True,False,True],[False,False,False,True,False,True,True,True,False],[True,False,True,False,True,True,False,True,True],[True,False,True,False,True,False,True,False,True]],[[False,True,False,True,False,False,False,True,True],[True,True,False,False,False,False,True,True,False],[True,True,True,False,False,False,False,False,True],[False,True,True,False,False,False,False,True,False],[False,True,False,True,True,True,True,True,True],[False,False,False,False,True,False,True,False,False],[True,False,True,False,False,False,True,False,False],[False,False,False,False,True,True,False,False,False],[True,False,True,True,False,False,True,False,True],[True,True,True,False,True,True,True,True,False],[True,True,False,False,True,True,False,True,False],[True,False,False,False,True,False,True,False,False],[True,False,False,True,True,False,False,True,True],[False,False,False,False,False,True,False,False,False]],[[True,False,False,True,True,False,False,True,True],[False,True,False,True,False,False,True,True,True],[True,False,True,False,False,True,True,False,True],[False,False,True,True,False,True,True,True,True],[True,True,False,False,False,True,False,True,False],[False,False,True,False,False,True,True,False,True],[False,True,True,False,False,False,True,True,False],[True,False,True,False,True,True,False,True,True],[False,False,False,False,False,False,True,False,False],[True,True,True,False,False,False,False,False,False],[False,True,True,False,False,True,True,False,False],[False,True,False,True,True,False,True,True,False],[False,False,True,False,True,False,True,False,False],[False,False,False,False,False,False,False,False,False]],[[True,True,True,False,False,False,False,True,True],[False,True,False,False,True,False,True,True,False],[False,True,False,False,True,False,True,True,False],[True,True,False,True,True,True,False,True,True],[False,True,True,True,True,False,True,True,True],[False,True,False,False,True,True,False,True,False],[False,False,False,False,True,True,False,True,False],[True,True,True,True,False,False,False,True,True],[False,True,True,True,True,False,True,True,True],[True,True,False,True,True,True,True,True,False],[True,True,True,True,False,True,True,True,True],[True,True,False,True,True,True,False,False,False],[False,False,True,True,True,False,True,False,True],[False,False,False,True,True,True,False,False,False]],[[True,True,True,False,True,True,True,False,False],[False,False,True,True,False,True,False,True,False],[True,False,False,False,True,False,True,False,True],[False,False,False,False,False,True,False,False,False],[True,True,False,True,False,False,False,True,False],[True,True,True,True,False,False,False,True,True],[False,False,True,False,False,True,False,True,True],[True,True,False,False,False,True,False,True,True],[True,False,False,True,True,False,True,True,False],[True,True,True,False,True,True,True,True,False],[False,True,True,False,True,False,False,True,False],[True,True,True,True,False,True,True,False,True],[True,True,False,False,False,True,True,False,False],[True,True,False,True,True,True,False,True,False]],[[False,True,True,False,True,True,True,False,True],[True,True,True,False,True,False,False,True,False],[True,False,False,True,True,True,True,False,True],[True,False,False,True,False,False,True,False,True],[False,False,True,True,True,False,True,True,True],[True,True,False,False,False,True,False,True,False],[False,True,True,True,False,True,True,True,False],[True,False,False,False,False,False,True,False,True],[False,True,False,True,False,True,False,False,True],[True,True,True,True,True,False,False,False,False],[False,True,True,False,True,False,False,True,False],[True,True,False,False,True,True,True,False,False],[False,False,False,False,True,True,True,True,False],[True,True,False,True,True,False,False,True,True]],[[False,False,False,True,True,True,True,True,False],[True,False,True,True,True,True,True,True,True],[True,False,False,True,True,True,False,False,True],[False,False,False,True,True,False,True,False,True],[True,True,True,True,False,True,False,True,False],[False,True,True,True,False,True,True,True,False],[False,True,False,True,True,True,False,False,False],[False,False,False,False,True,True,True,False,False],[False,True,True,True,True,False,False,False,False],[False,True,False,False,True,True,True,True,True],[False,True,True,False,True,True,False,True,False],[True,False,True,True,True,False,True,False,True],[True,False,True,False,False,False,False,True,True],[True,False,False,False,False,True,False,False,True]],[[True,False,False,False,True,True,True,True,False],[True,False,False,False,True,False,True,True,True],[True,True,False,False,True,False,True,True,False],[False,True,False,True,True,False,False,True,True],[True,False,False,True,True,False,True,True,False],[True,False,True,False,True,True,False,True,False],[False,False,True,False,True,True,False,False,False],[False,False,True,False,True,True,False,False,False],[True,True,True,True,True,True,False,True,False],[True,False,True,True,False,False,True,True,True],[False,True,True,False,False,False,True,False,True],[False,False,False,False,True,True,True,False,False],[False,True,False,False,False,False,True,False,False],[True,True,True,False,True,True,False,True,True]],[[False,False,True,True,False,True,True,False,True],[True,True,True,True,True,False,True,True,True],[True,False,True,False,False,False,True,False,True],[False,False,False,True,False,False,False,False,False],[False,True,False,True,False,True,False,False,False],[True,True,True,False,True,True,True,True,True],[True,False,False,False,True,False,False,False,True],[False,True,True,False,True,False,False,False,True],[True,False,True,True,True,False,False,True,True],[True,False,False,True,True,True,True,True,False],[True,True,False,False,True,True,True,True,False],[False,True,False,True,False,True,False,True,False],[False,True,False,False,True,False,False,False,False],[True,True,True,True,False,True,False,True,False]],[[True,False,False,False,False,True,False,True,False],[True,True,True,False,False,True,False,False,False],[False,False,False,False,False,True,False,True,True],[True,True,False,True,True,True,True,True,True],[True,True,True,True,True,False,False,True,False],[True,True,False,True,True,True,True,False,True],[False,False,False,False,True,False,False,False,True],[True,False,False,True,True,True,False,False,False],[False,False,True,True,False,False,True,True,False],[False,True,False,True,True,False,False,True,True],[False,False,True,True,True,True,True,False,False],[False,False,False,True,True,True,False,False,True],[True,True,False,True,False,True,True,True,True],[True,True,False,False,True,False,True,False,False]],[[True,True,False,True,False,True,False,True,False],[True,True,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,True,False],[False,True,False,False,False,False,False,True,False],[True,True,True,True,False,False,True,False,True],[True,True,False,False,True,True,True,False,False],[False,True,False,False,True,True,False,True,True],[False,False,False,False,True,False,True,True,False],[False,False,True,True,True,False,True,False,True],[False,True,True,True,True,False,True,True,False],[False,False,True,True,False,True,True,True,True],[True,False,False,False,False,False,True,True,False],[True,True,False,False,True,True,True,False,True],[True,True,False,True,True,False,True,False,True]],[[False,False,False,True,True,False,True,True,True],[False,False,False,False,True,True,False,True,True],[True,False,True,False,False,True,True,True,False],[True,False,True,False,True,True,False,False,False],[True,False,False,False,False,False,False,False,False],[False,False,True,True,True,False,False,False,False],[True,True,True,False,False,False,True,True,True],[False,True,True,False,False,True,False,False,True],[True,True,True,True,True,True,False,False,True],[False,False,True,False,False,False,False,False,False],[False,True,True,True,True,True,False,True,True],[False,False,False,True,True,True,True,False,False],[False,False,False,True,True,False,False,True,False],[False,True,False,True,True,True,False,False,False]],[[True,True,False,True,True,False,True,False,True],[False,True,True,False,False,True,False,True,False],[False,False,False,True,False,True,True,True,True],[True,False,True,True,True,False,True,False,True],[True,True,False,False,True,True,True,True,True],[True,True,True,True,False,True,True,True,True],[True,False,True,False,True,True,True,True,False],[False,False,True,True,False,False,True,False,False],[True,False,True,False,True,True,True,False,True],[False,False,False,False,True,False,True,True,False],[False,False,True,False,False,True,True,False,True],[False,True,False,False,False,False,True,True,True],[False,False,True,True,True,True,True,True,False],[False,False,True,False,False,False,True,False,False]]], dtype = "bool")#candidate|4237|(14, 14, 9)|const|bool
bop_4238 = relay.logical_and(var_4236.astype('bool'), relay.reshape(const_4237.astype('bool'), relay.shape_of(var_4236))) # shape=(14, 14, 9)
const_4241 = relay.const([[[False,False,False,True,True,True,False,False,False],[True,True,False,True,False,False,True,False,False],[True,False,False,False,False,False,False,False,True],[False,False,True,False,False,True,False,False,True],[True,False,True,False,True,False,False,False,False],[False,True,False,False,False,False,False,False,False],[True,True,True,False,True,True,True,False,False],[False,False,False,True,False,False,False,False,True],[False,False,False,False,False,True,False,True,False],[False,True,False,True,False,True,False,False,True],[True,True,True,True,False,True,True,True,True],[True,False,True,True,False,True,True,True,False],[False,True,True,False,False,False,True,True,True],[False,True,True,True,False,True,False,False,True]],[[False,True,False,True,True,False,True,False,True],[False,True,False,False,True,True,True,False,True],[False,True,False,True,True,True,False,True,False],[True,True,False,False,True,True,True,True,False],[True,False,False,False,False,True,False,True,True],[False,False,True,True,False,False,False,True,True],[True,False,False,True,True,False,True,False,True],[True,True,False,True,False,False,False,True,True],[True,True,False,False,True,False,True,True,True],[True,True,False,True,False,False,True,False,False],[True,True,False,True,False,True,True,False,True],[False,False,False,True,True,False,True,False,True],[True,True,False,False,True,True,True,False,False],[True,True,False,True,True,True,True,False,False]],[[False,True,False,False,True,False,False,False,True],[False,True,True,False,True,True,False,True,False],[False,False,False,False,False,True,False,True,False],[True,True,False,True,True,False,True,True,True],[True,False,False,True,False,True,False,False,False],[True,True,False,True,True,False,True,True,False],[True,True,False,True,False,True,False,False,False],[False,True,False,True,True,False,True,False,False],[True,False,True,True,False,False,True,True,True],[False,True,False,False,False,True,False,True,True],[True,True,True,False,True,True,False,True,False],[False,False,False,False,True,False,True,True,False],[True,False,False,False,False,True,False,True,True],[True,True,False,True,True,False,False,True,True]],[[True,True,False,True,True,True,True,True,False],[False,True,True,False,False,False,False,True,False],[True,True,True,False,True,True,True,False,False],[True,False,True,False,False,False,True,True,True],[False,True,False,False,True,True,False,True,False],[False,False,True,False,True,False,False,False,True],[True,True,True,True,False,False,False,False,False],[False,True,True,True,True,False,True,False,True],[True,False,True,True,False,True,False,False,False],[False,False,False,False,True,True,True,False,True],[True,False,False,True,False,True,True,True,True],[True,True,True,True,False,True,False,True,True],[True,True,True,True,True,False,False,True,True],[True,True,False,True,False,False,True,False,True]],[[False,True,False,True,False,True,False,True,True],[True,True,False,False,False,True,False,False,True],[False,False,False,True,True,True,True,False,False],[False,True,False,True,False,True,True,True,True],[True,False,True,False,True,False,True,False,True],[False,False,True,True,False,True,False,True,False],[True,True,True,True,True,False,True,False,False],[False,True,False,False,False,False,True,True,True],[True,False,True,False,False,True,True,False,True],[False,False,True,True,True,False,False,True,True],[False,False,True,True,True,False,True,True,True],[True,False,False,False,True,False,False,False,False],[True,True,False,True,False,False,False,True,False],[False,True,True,True,True,True,False,False,False]],[[False,True,True,True,False,True,True,True,True],[True,True,True,False,False,False,False,True,False],[True,True,True,True,True,False,False,False,False],[True,False,False,False,True,False,True,False,False],[True,False,True,False,True,False,True,True,True],[True,False,False,False,True,False,True,False,True],[False,False,False,False,True,False,False,True,True],[False,True,False,True,False,False,False,False,True],[True,True,True,False,False,True,False,False,False],[False,False,False,False,False,False,False,False,True],[False,False,True,False,True,False,False,False,False],[False,False,False,True,True,True,False,True,True],[True,False,False,True,False,False,True,False,False],[True,False,False,True,True,False,False,True,True]],[[False,True,True,False,True,False,False,False,True],[True,True,True,False,False,True,False,False,True],[False,True,False,False,True,False,False,False,True],[True,False,False,False,False,True,False,False,False],[False,False,True,True,True,False,False,True,False],[True,False,False,True,False,False,True,True,True],[True,True,True,True,False,True,True,True,True],[True,True,True,True,True,True,False,False,False],[False,True,True,True,False,True,True,True,False],[True,False,True,False,False,False,True,True,True],[False,False,False,True,True,True,False,True,False],[True,True,False,True,False,True,True,True,False],[False,False,True,False,False,False,True,False,False],[False,False,True,True,False,True,True,False,True]],[[False,False,False,False,False,True,False,True,True],[False,False,False,False,True,True,True,True,True],[True,True,True,True,True,True,False,False,False],[False,True,False,True,True,False,True,True,False],[False,True,False,False,True,False,False,True,True],[True,True,True,False,False,False,False,False,True],[True,False,True,True,False,False,True,True,True],[False,False,False,False,True,True,False,True,True],[True,True,False,False,True,True,True,True,False],[True,True,False,False,True,False,True,False,True],[True,False,False,False,False,True,False,False,False],[False,True,True,True,False,False,True,False,True],[True,False,True,True,True,False,True,False,True],[True,True,False,False,True,False,True,True,False]],[[False,False,False,False,False,True,True,True,True],[True,False,False,True,True,False,False,False,True],[False,True,True,False,True,True,False,True,False],[False,False,True,False,False,True,False,False,True],[False,True,False,True,True,True,True,False,False],[True,False,True,True,False,False,False,False,True],[True,False,True,True,False,True,True,False,False],[False,True,False,False,True,False,False,False,True],[True,False,True,False,True,True,True,False,True],[True,True,False,True,False,False,False,False,True],[True,True,True,True,True,False,False,True,True],[False,False,False,True,True,False,False,True,True],[True,False,False,False,False,True,False,True,True],[True,True,True,False,False,False,True,False,False]],[[False,False,True,True,False,True,True,True,True],[True,True,False,True,False,True,True,False,True],[False,True,False,True,False,True,True,False,True],[True,True,True,True,True,True,True,True,True],[False,False,False,True,False,True,False,True,True],[True,False,False,False,False,True,False,True,True],[True,False,True,False,False,False,False,True,False],[True,False,True,True,True,True,True,False,True],[True,False,False,False,True,False,False,True,False],[True,True,False,False,False,False,True,True,False],[False,True,False,False,False,False,True,True,True],[False,True,False,False,False,False,False,False,False],[True,True,True,True,False,True,True,True,True],[False,False,False,False,False,True,False,False,False]],[[True,True,True,False,False,False,False,False,False],[True,False,True,True,True,False,False,True,False],[True,False,True,True,False,False,True,True,False],[True,True,True,True,False,False,False,True,False],[True,True,False,True,False,True,False,True,False],[False,False,True,True,True,False,False,False,False],[False,False,True,True,True,True,False,False,True],[False,False,False,True,True,False,True,True,False],[False,True,False,True,False,False,False,True,True],[False,True,False,True,False,False,False,True,True],[True,True,True,True,True,True,True,False,True],[True,False,False,False,False,True,False,True,True],[False,False,False,True,False,False,True,True,False],[True,False,True,False,True,False,True,False,True]],[[True,False,False,False,True,False,False,True,False],[True,True,False,True,True,False,True,True,False],[True,False,False,True,False,False,False,False,True],[False,False,False,False,True,False,False,True,True],[False,True,True,False,False,False,False,True,False],[False,True,True,True,False,True,True,False,True],[True,False,False,False,True,False,False,True,True],[False,True,False,False,True,True,True,True,True],[True,False,True,True,False,False,False,True,False],[False,False,False,True,True,True,True,False,False],[True,False,True,False,True,False,False,True,True],[True,False,False,True,True,False,False,True,True],[False,True,False,False,True,True,True,True,False],[False,False,False,False,False,True,True,False,False]],[[True,True,True,False,False,True,False,True,False],[True,True,True,False,True,True,False,False,False],[True,True,True,False,True,False,False,True,False],[True,False,False,True,True,True,False,True,False],[True,True,True,False,False,True,True,False,False],[False,True,False,True,False,True,False,False,False],[False,True,True,False,False,True,True,False,False],[False,False,True,False,False,True,False,False,True],[True,True,False,True,False,True,False,True,True],[True,True,False,False,False,True,True,False,True],[True,True,True,True,False,False,True,False,False],[False,False,False,True,True,True,True,True,True],[False,True,False,False,False,False,False,False,False],[True,False,False,False,True,False,False,False,False]],[[False,True,False,False,True,True,False,True,False],[True,False,True,True,True,False,True,True,True],[True,True,True,True,False,True,False,False,False],[False,False,True,False,False,False,False,False,False],[True,False,True,False,False,True,True,True,False],[False,False,True,True,False,False,False,True,False],[False,True,True,False,True,True,True,True,False],[False,False,False,False,True,True,True,True,True],[False,True,False,True,True,False,False,False,False],[True,False,False,True,False,True,False,True,True],[False,False,False,False,False,False,False,False,False],[True,True,True,False,False,False,False,True,True],[True,True,True,True,False,False,True,False,False],[True,False,True,False,False,False,False,False,False]]], dtype = "bool")#candidate|4241|(14, 14, 9)|const|bool
bop_4242 = relay.less(var_4236.astype('bool'), relay.reshape(const_4241.astype('bool'), relay.shape_of(var_4236))) # shape=(14, 14, 9)
output = relay.Tuple([bop_4238,bop_4242,])
output2 = relay.Tuple([bop_4238,bop_4242,])
func_4258 = relay.Function([var_4236,], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
var_4259 = relay.var("var_4259", dtype = "bool", shape = (14, 14, 9))#candidate|4259|(14, 14, 9)|var|bool
output = func_4258(var_4259)
func_4260 = relay.Function([var_4259], output)
mutated_mod['func_4260'] = func_4260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5144 = relay.var("var_5144", dtype = "float64", shape = (8, 4, 15))#candidate|5144|(8, 4, 15)|var|float64
var_5145 = relay.var("var_5145", dtype = "float64", shape = (8, 4, 15))#candidate|5145|(8, 4, 15)|var|float64
bop_5146 = relay.floor_mod(var_5144.astype('float64'), relay.reshape(var_5145.astype('float64'), relay.shape_of(var_5144))) # shape=(8, 4, 15)
uop_5150 = relay.cosh(bop_5146.astype('float32')) # shape=(8, 4, 15)
output = uop_5150
output2 = uop_5150
func_5157 = relay.Function([var_5144,var_5145,], output)
mod['func_5157'] = func_5157
mod = relay.transform.InferType()(mod)
mutated_mod['func_5157'] = func_5157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5157_call = mutated_mod.get_global_var('func_5157')
var_5159 = relay.var("var_5159", dtype = "float64", shape = (8, 4, 15))#candidate|5159|(8, 4, 15)|var|float64
var_5160 = relay.var("var_5160", dtype = "float64", shape = (8, 4, 15))#candidate|5160|(8, 4, 15)|var|float64
call_5158 = func_5157_call(var_5159,var_5160,)
output = call_5158
func_5161 = relay.Function([var_5159,var_5160,], output)
mutated_mod['func_5161'] = func_5161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5427 = relay.var("var_5427", dtype = "int16", shape = (10, 9, 7))#candidate|5427|(10, 9, 7)|var|int16
const_5428 = relay.const([[[-3,-8,-5,7,-1,-10,6],[-8,10,7,-6,9,-3,4],[5,3,-6,8,-7,3,-9],[-3,-5,-1,10,1,5,9],[-7,3,5,-9,7,10,4],[4,-10,-8,9,-8,-7,4],[-8,-1,7,6,10,-3,-5],[-2,8,-2,-6,-1,-10,-5],[-9,1,5,-2,-8,4,-4]],[[-4,10,5,6,6,8,9],[10,6,-5,7,-1,-2,-7],[-6,1,-7,-7,-1,-2,5],[6,-9,-7,6,-4,-2,3],[-3,-10,1,-10,-6,-3,-10],[-4,4,-8,-4,7,-9,-4],[7,6,-8,-10,2,7,5],[-3,-6,9,-6,-4,1,2],[-4,2,-6,1,7,-4,9]],[[6,-3,8,-7,1,3,-6],[9,-6,-6,4,7,7,7],[2,5,2,7,7,-9,7],[-6,-8,-1,-7,1,1,9],[3,-1,5,-2,-4,-1,3],[1,-3,3,1,-4,-2,-2],[-6,-5,8,-3,-2,2,-4],[-8,2,-8,-4,6,6,-4],[8,5,8,10,-6,10,8]],[[5,-6,10,10,-5,-1,-10],[3,-7,-1,-5,-2,6,8],[7,10,7,-5,-6,-4,-9],[-3,4,-6,-9,3,5,-8],[5,-9,-9,4,-8,2,-4],[-6,3,-4,9,8,-7,1],[8,7,5,-6,6,10,-9],[-8,1,5,-5,-3,-1,2],[5,3,5,9,-5,-4,-4]],[[-5,-9,5,-6,5,1,6],[8,1,-3,9,4,6,2],[10,-4,-9,7,2,4,5],[-5,9,-10,9,7,-9,-3],[-10,-7,-10,-7,-6,5,-6],[-7,-6,1,-8,-6,-4,4],[-5,10,-3,-8,-10,4,-9],[-3,-9,5,3,-1,-7,-9],[-1,4,-1,3,-1,-8,8]],[[-6,2,2,-10,-7,5,7],[4,-4,-8,-10,5,4,6],[9,-6,1,-4,1,1,8],[-5,-9,10,3,2,-8,9],[-4,-6,1,8,1,-6,-6],[10,5,7,-4,7,-7,-3],[9,7,-8,-6,6,-4,4],[9,9,3,7,-9,-9,8],[-7,-10,-4,-10,1,-5,10]],[[4,-9,3,4,-3,-8,-10],[9,2,3,-4,9,1,-10],[7,-6,-3,3,5,3,-6],[10,-7,-8,-7,-3,7,-7],[-3,5,-6,-8,7,8,-9],[-8,2,-3,-9,2,-1,8],[-6,-6,-1,-9,-3,-9,-8],[-10,8,2,-8,-10,7,2],[4,5,7,1,4,7,4]],[[-6,3,-1,-4,10,9,8],[2,5,-1,10,-2,6,-8],[3,-8,-6,3,-3,-10,10],[5,-7,-7,6,5,-6,4],[4,2,4,4,-5,7,5],[-1,1,2,-4,2,-7,-6],[3,4,2,3,-7,5,-6],[-10,-4,-8,10,2,-9,5],[-1,-10,1,-2,-9,8,-3]],[[-10,7,-2,4,5,7,7],[2,-3,-3,9,-6,-8,7],[-1,-10,1,-2,8,10,9],[3,-5,-9,9,-1,7,-1],[-2,-10,-1,5,-8,3,-4],[-1,2,8,8,4,-9,-8],[-4,-1,7,9,-4,10,-3],[1,-5,8,-6,-5,-4,-4],[5,9,-10,6,-4,7,-1]],[[-9,9,-2,2,-4,-8,7],[-5,5,4,9,-2,5,-10],[-3,7,-7,-4,3,-1,-6],[-3,1,5,-9,-7,5,5],[-7,-2,8,-6,8,-4,-6],[7,3,9,9,1,-3,8],[2,-7,10,1,1,-5,-7],[-9,3,9,5,4,-9,3],[3,-1,-7,-4,-10,-7,4]]], dtype = "int16")#candidate|5428|(10, 9, 7)|const|int16
bop_5429 = relay.multiply(var_5427.astype('int16'), relay.reshape(const_5428.astype('int16'), relay.shape_of(var_5427))) # shape=(10, 9, 7)
output = bop_5429
output2 = bop_5429
func_5437 = relay.Function([var_5427,], output)
mod['func_5437'] = func_5437
mod = relay.transform.InferType()(mod)
mutated_mod['func_5437'] = func_5437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5438 = relay.var("var_5438", dtype = "int16", shape = (10, 9, 7))#candidate|5438|(10, 9, 7)|var|int16
func_5437_call = mutated_mod.get_global_var('func_5437')
call_5439 = func_5437_call(var_5438)
output = call_5439
func_5440 = relay.Function([var_5438], output)
mutated_mod['func_5440'] = func_5440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5525 = relay.var("var_5525", dtype = "uint8", shape = (10, 15, 1))#candidate|5525|(10, 15, 1)|var|uint8
var_5526 = relay.var("var_5526", dtype = "uint8", shape = (10, 15, 6))#candidate|5526|(10, 15, 6)|var|uint8
bop_5527 = relay.bitwise_or(var_5525.astype('uint8'), var_5526.astype('uint8')) # shape=(10, 15, 6)
func_2042_call = mod.get_global_var('func_2042')
func_2044_call = mutated_mod.get_global_var('func_2044')
const_5538 = relay.const([[8.816058],[7.872677],[0.220886],[3.700493],[-7.694275],[4.712621],[-7.451682],[9.379001],[-9.665378],[-4.315450],[-3.609649],[8.881117],[2.024963],[-2.865169],[1.110916],[-2.223636],[-8.555152],[-6.801285],[1.101832],[-2.992416],[-0.541095],[-7.457048],[-8.528992],[5.533837],[-0.285202],[5.646254],[3.310376],[4.649835],[1.756933],[-7.853113],[-2.626870],[6.395408],[1.775912],[8.915827],[-7.814351],[-8.416533],[1.761345],[1.952959],[3.536228],[6.381544],[-1.134682],[-6.376244],[5.157401],[-1.491420],[-0.482932],[-0.657223],[5.510931],[8.145267],[0.554078],[3.353907],[-7.437030],[-1.658661],[8.646136],[0.831369],[4.155735],[-1.539367],[0.764408],[0.574257],[-8.211548],[7.644894],[6.792601],[1.194348],[9.795082],[4.219381],[5.834667],[-6.854752],[-4.434241],[-3.050214],[-3.238794],[-2.650737],[-5.556453],[-0.028958],[-4.858578],[-2.136141],[5.324163],[6.692550],[4.155322],[-4.060344],[2.508591],[-5.022498],[-8.217917],[-7.446912],[5.038718],[-3.319334],[-7.186015],[6.719080],[6.763459],[-0.388463],[-1.923448],[-7.634131],[-6.638107],[-5.382245],[6.216278],[-2.089148],[-1.714056],[1.380320],[-5.997651],[4.189394],[-0.852445],[9.796968],[8.726135],[2.901611],[-6.730409],[-2.525141],[2.771380],[3.810852],[-5.451666],[0.607684],[-5.027153],[-3.295868],[-2.422319],[6.100024],[2.423436],[7.293623],[3.846473],[-1.037159],[7.368478],[6.475520],[3.700880],[-7.514541],[3.727090],[-8.857903],[4.846201],[9.092989],[0.478059],[-9.712451],[4.264707],[-5.635078],[7.932002],[9.179188],[5.750804],[8.529965],[1.226287],[-2.301505],[-9.402072],[5.682740],[-7.951046],[2.364848],[-3.221033],[4.670422],[-5.651657],[1.717178],[-6.461331],[-5.406250],[3.525633],[-7.566690],[1.556306],[-5.838911],[-1.983443],[5.829948],[0.091506],[-1.478082],[-6.699258],[-1.081189],[-7.915977],[-0.542599],[6.793194],[9.127373],[-4.188559],[4.288282],[8.079076],[-0.060272],[7.503540],[3.108001],[8.191873],[-0.410839],[-5.455813],[2.715460]], dtype = "float64")#candidate|5538|(168, 1)|const|float64
call_5537 = func_2042_call(relay.reshape(const_5538.astype('float64'), [1, 12, 14]))
call_5539 = func_2042_call(relay.reshape(const_5538.astype('float64'), [1, 12, 14]))
output = relay.Tuple([bop_5527,call_5537,const_5538,])
output2 = relay.Tuple([bop_5527,call_5539,const_5538,])
func_5587 = relay.Function([var_5525,var_5526,], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
var_5588 = relay.var("var_5588", dtype = "uint8", shape = (10, 15, 1))#candidate|5588|(10, 15, 1)|var|uint8
var_5589 = relay.var("var_5589", dtype = "uint8", shape = (10, 15, 6))#candidate|5589|(10, 15, 6)|var|uint8
output = func_5587(var_5588,var_5589,)
func_5590 = relay.Function([var_5588,var_5589,], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5705 = relay.const([[[0.231070,-6.297415,-9.962801,-0.943627,3.275330,-5.756634,1.401328,4.771952],[2.314699,9.379047,-0.344384,6.380516,0.963673,4.503931,-5.522508,6.223370],[8.751103,-8.299983,-1.305892,-7.900241,-7.807690,9.166763,-7.768010,-5.368849]]], dtype = "float32")#candidate|5705|(1, 3, 8)|const|float32
uop_5706 = relay.erf(const_5705.astype('float32')) # shape=(1, 3, 8)
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
const_5709 = relay.const([[4,2,-9,5,2,-4,8,-3,-1,-5,3,-9,9,2,8,6,7,9,8,5,5,-9,9,6,-9,8,9,7,-9,-8,7,8,-5,10,-10,3,4,-6,4,-6,-3,6,-10,-3,-4,-6,6,4,1,-5,1,-6,-10,2,6,-8,10,2,7,-1,-8,-1,-2,-6,-3,4,8,10,4,-3,-8,9,7,2,-9,-6,-1,-1,-3,8,7,9,3,5,-1,-8,-1,9,-10,-3,-5,8,-5,-10,6,-4,1,-10,5,2,6,-7,8,-9,8,-9,-9,8,6,2,-8,-8,-4,-3,-6,4,-6,-10,-8,3,1,6,9,-5,4,8,6,10,4,10,2,-1,7,-3,2,-9,-9,4,3,-4,7,-8,8,4,3,2,-7,4,-6,-7,4,-1,4,-3,-3,3,-9,-4,9,8,1,7,-3,-2,-7,-5,-8,8,-2,-9,7,6,1,4,-9,3,-10,-9,-1,-2,-3,-3,-5,-3,1,-3,-3,6,-10,-5,-1,-10,1,6,2,2,4,6,-6,6,2,6,10,-1,-10,-1,7,4,5,-1,7,-4,-1,-10,-1,4,6,1,2,6,8,-7,-3,4,2,-4,-9,9,9,6,-8,7,2,9,10,8,-5,5,-7,-3,-4,-7,5,2,-7,-6,-9,-8,1,-5,-1,8,-9,3,2,2,-4,9,-6,3,-9,8,-4,-9,2,-5,-10,-10,-4,4,10,1,6,1,-1,5,7,-8,-10,5,2,6,3,-10,8,4,-1,-1,-5,8,9,3,-7,-7,9,-8,4,-4,7,-3],[-7,4,-9,4,-7,9,-6,-4,-5,-9,-4,7,10,-2,-5,-3,-9,-2,-1,-4,1,-6,6,-1,10,-5,-8,2,-6,-4,-7,-5,5,7,-6,-6,-4,3,4,-1,7,-1,-2,4,5,-1,6,-1,5,-8,-10,-5,1,-4,-5,9,3,-6,1,3,7,-10,-9,-3,10,-5,-8,-7,-10,3,-8,-5,4,-7,1,-3,-5,-1,-6,1,10,8,-6,-8,-10,2,-5,2,-10,4,-3,2,-10,4,-1,-3,1,-10,8,5,-9,7,-6,3,8,-9,-6,8,-6,-3,-9,8,10,9,6,-8,-1,-2,4,4,5,-2,6,1,4,1,-2,5,8,10,8,-2,-2,5,-10,-7,-2,-7,1,-10,-2,10,1,6,9,-3,3,-7,8,9,1,-4,-7,3,9,-6,-6,6,4,-5,5,2,-5,-3,1,2,9,8,7,5,7,-8,8,10,-6,-4,7,9,5,5,-5,7,-1,10,-6,-3,-6,8,4,7,7,1,7,5,3,7,5,1,-1,-3,10,2,6,2,-9,8,-10,9,-8,-9,-4,-8,-10,-4,-4,8,4,9,-9,8,10,6,-4,7,-1,2,3,-2,-10,2,5,7,-9,9,-7,-9,-4,9,10,-1,-2,-4,-4,-8,7,10,1,3,-4,-1,1,10,-3,-5,-6,-5,9,3,-10,-10,2,-10,7,-4,-6,-4,5,2,2,4,-4,-6,10,6,2,-6,-6,-9,10,4,10,-2,-1,-6,4,10,-9,-8,-8,1,-10,4,3,-9,-7,-8,-10,-4,9,-3],[-10,-10,1,-9,4,-1,-5,2,-8,-3,-3,-4,5,3,7,-6,1,7,-6,3,4,-8,-8,-9,1,-3,-4,9,-6,3,10,-2,7,-5,4,5,-9,-9,3,-5,-1,-1,7,4,6,-7,-7,9,10,7,1,4,-6,9,4,-4,-2,1,8,-1,3,3,10,-3,6,-4,3,9,2,9,-1,10,7,-3,7,9,5,-1,4,5,8,-8,-7,10,-4,3,1,1,5,5,7,3,8,6,1,-1,-1,10,6,5,-1,5,4,-2,-9,2,-4,7,2,-1,7,10,3,-3,-1,8,1,-4,1,-3,-6,6,3,-10,-9,7,-5,3,8,6,6,-1,-7,-1,4,9,-10,-8,10,-7,-10,-6,-3,2,5,-1,10,-8,-9,-7,5,-3,-3,-10,-10,4,3,-3,-7,6,-3,-2,10,-3,-1,2,-8,-2,7,-6,1,4,-9,10,4,-9,6,-1,5,5,-4,-3,3,5,-9,4,-10,6,7,-9,-6,7,4,-8,2,7,2,10,5,-5,4,-6,8,-8,-2,6,-7,-1,3,-10,-3,-2,-4,2,8,6,7,-8,8,1,-5,9,2,-1,-9,1,-5,-9,-5,-10,6,-7,-2,9,-3,9,7,-7,7,-3,8,-8,-7,4,6,7,4,9,8,-5,8,8,3,4,5,6,-1,8,9,-2,-8,1,2,7,7,1,-9,1,-4,1,2,3,-10,-3,-3,-8,-5,-2,-8,-7,2,-8,-6,-2,-4,2,-10,9,-7,1,-9,-2,7,-1,4,9,3,8,6,2],[3,-6,-10,-3,9,-9,-4,-5,5,-7,2,-7,-3,6,5,9,-3,-10,-10,-2,-6,9,1,10,-10,7,3,6,-10,-5,-8,2,-9,-6,5,10,-6,3,5,-5,2,-4,7,9,10,-2,-8,2,9,6,6,9,-7,1,-8,4,8,3,7,3,-7,10,3,3,-1,-10,-7,9,1,-5,-6,-7,8,-10,-3,4,1,-5,7,-6,9,5,5,3,6,5,8,6,3,10,-10,5,-10,6,8,-8,-8,-6,-1,-10,-6,6,-8,-7,10,-6,6,2,2,7,-9,-1,-10,-3,6,5,-10,-6,-5,9,4,6,1,-6,-7,4,-10,7,2,10,-3,1,-7,-2,-2,10,10,-6,5,1,6,9,10,5,-4,-3,-9,-10,1,-1,-3,-1,-6,-4,-10,2,-10,-4,-7,-6,2,-7,2,-9,1,10,-2,7,-9,-10,5,8,5,10,9,-2,-3,-3,-8,2,6,-3,2,-8,-2,3,-2,-5,-1,10,8,10,-3,-8,9,2,1,-4,7,5,2,-9,7,5,8,7,-7,9,3,-3,-9,-8,2,3,-5,1,6,-4,-1,-2,-4,6,7,-3,5,3,-5,-2,4,-6,-6,8,6,-7,-1,-7,10,-8,9,9,1,7,4,1,-7,-7,-6,6,-7,9,4,4,-9,2,6,-1,-5,3,10,-7,4,9,-9,10,-8,3,-4,7,-1,-1,-4,4,-1,-9,2,7,2,-4,10,6,-6,1,7,-3,-1,-3,-9,4,-5,-2,-1,-3,-6,3,-2,6,-9,9,-9,2]], dtype = "uint32")#candidate|5709|(4, 300)|const|uint32
const_5710 = relay.const([2,-4,9,-9,6,-9,-2,-7,-10,3,6,5,8,8,-1,-5,6,-9,-1,-3,8,-8,-6,5,-4,2,-10,7,-10,-8,-3,-3,-6,-1,3,-6,7,-3,-6,1,-7,-2,-1,-7,-4,-1,1,6,-8,-2,3,2,-1,7,3,9,-2,-1,10,5,4,-2,9,2,-5,8,2,9,5,3,5,-10,-3,-1,8,6,3,-6,-6,-2,3,-10,-2,-10,-7,4,5,1,2,10,10,-3,3,-5,-8,-9,-9,-9,10,-7,-2,-10,-5,-4,1,-9,9,-3,-1,-1,-7,1,-1,-4,-10,7,2,-9,-6,-3,7,9,-2,-10,3,2,-4,-6,3,-4,-1,-5,10,-7,6,-5,-2,3,-9,8,6,3,-5,3,-7,1,9,10,-9,-6,-8,2,-7,7,7,9,-5,1,9,10,-2,5,-6,-9,-3,1,-5,-5,-7,-10,8,-10,-2,-5,-7,-9,5,-10,-1,7,3,-9,-3,1,-9,-6,10,3,9,5,2,-4,-9,9,1,-8,-4,-5,3,6,-6,-10,8,-10,-1,2,-10,2,9,1,-5,-8,-6,-5,8,-3,-4,3,-6,9,-10,5,-5,9,-6,8,1,-2,7,-8,-9,-1,5,4,-9,-3,4,-10,2,-7,-2,-4,8,-2,5,10,-2,-8,-5,10,-7,-4,8,-2,-3,-1,-3,-8,2,6,9,-1,8,-7,4,-10,10,-4,8,-1,6,-6,8,7,-5,5,-2,-4,-8,7,10,-2,9,-1,3,-8,3,-5,-7,8,9,5,-2,4,-1,1,-6,4,-1,2,4,-3,3,7,-2,3,8,3,-6,9,7,3,-5,9,-1,-1,3,1,4,8,-2,-7,9,-10,8,6,-9,9,5,1,-8,-10,-6,9,-10,-6,-7,3,-7,-1,-4,10,-6,-9,-6,-7,-5,-7,10,3,-4,4,-3,7,2,7,-7,-1,-6,3,3,8,7,-8,-3,8,-9,-9,1,-4,-4,-1,10,3,2,-9,4,-2,-5,9,-1,-5,1,-5,-10,9,2,6,-4,9,4,3,-7,10,-5,-2,-8,-7,3,-3,-4,8,4,9,4,4,-6,-6,9,-7,-5,-3,5,3,-3,-10,1,-3,3,-1,-10,3,-1,10,-4,-6,-3,-3,-8,-6,-5,10,-6,8,-4,6,-5,1,7,8,8,4,3,-2,4,-4,6,-4,6,2,5,6,-7,8,2,-9,9,4,1,-5,-5,5,-2,2,2,-9,-1,9,-6,4,-2,-8,6,-7,7,-1,2,4,6,-3,1,7,9,-2,4,2,-10,-9,2,3,-7,-4,2,-2,-3,9,8,-7,-4,1,8,-4,-6,7,8,-9,-8,-3,-2,-1,1,-10,9,-8,-8,-3,-4,5,9,-8,-5,3,10,4,-2,-7,-8,-1,-4,-10,-8,9,9,2,7,6,-4,5,-4,8,-7,-8,-3,2,10,10,-6,-1,-4,-4,10,-4,10,10,2,9,-4,4,7,-5,-9,-4,5,-9,-8,-1,-6,3,-6,-1,5,-8,8,6,-8,-2,-7,2,-4,10,-4,10,-8,8,-10,-4,1,-3,6,4,-2,10,7,-1,3,-2,-6,8,7,-10,5,1,-6,4,-6,5,-7,7,-9,4,2,10,10,2,6,-6,5,-6,2,4,-8,-5,-6,-8,1,-6,10,8,5,-9,1,-9,-3,-9,5,-4,-2,10,1,4,10,4,-5,-9,-4,1,-4,-4,-7,3,-6,-7,-7,-8,-4,2,-2,3,-1,-10,-9,-2,3,-9,9,-2,-10,-5,5,7,8,5,-6,-1,-9,5,4,-10,-5,5,2,1,8,10,1,-5,7,-9,6,-3,3,-4,7,-1,-4,8,-6,9,7,7,7,7], dtype = "uint8")#candidate|5710|(702,)|const|uint8
call_5708 = relay.TupleGetItem(func_3467_call(relay.reshape(const_5709.astype('uint32'), [5, 15, 16]), relay.reshape(const_5710.astype('uint8'), [702,]), ), 2)
call_5711 = relay.TupleGetItem(func_3470_call(relay.reshape(const_5709.astype('uint32'), [5, 15, 16]), relay.reshape(const_5710.astype('uint8'), [702,]), ), 2)
const_5715 = relay.const([[4.577532,1.489511,0.925129,7.815246,7.839705,5.150061,6.095791,-9.780836,8.627671,1.316912,-5.902063,6.900825,6.570049,6.616509,0.036135,-2.486181,-6.411608,-7.061575,9.760522,-1.144040,-2.192413,6.569947,2.761859,-2.122009,6.739605,0.916508,-5.966246,-8.446334,4.114961,7.391817,-6.850725,0.772004,1.261972,-4.618314,5.242559,4.932585,-7.306767,-9.597737,-1.314472,1.558071,-6.994271,-0.544198],[9.555469,3.284897,-0.035950,-5.595651,-4.991134,5.242260,4.600919,5.788527,-1.424766,-7.996637,8.087439,0.100288,5.203024,1.306203,2.483423,-4.345818,-1.434237,1.700688,-4.392206,1.641952,1.878650,-1.032726,6.899221,-1.604787,4.821597,-3.369813,4.095760,-1.663358,-6.678933,-7.116833,9.526750,3.304721,-8.501047,8.578566,-2.117042,-3.601544,2.050115,-1.870828,-0.575480,5.409785,8.780434,-3.857517],[3.690134,-2.274370,-3.128579,9.349695,5.120128,5.333053,-7.311335,2.532539,9.692742,-0.038298,-3.150220,6.918303,2.520753,-2.870048,6.240000,4.814587,-1.979338,-5.242498,6.354444,-2.890117,-8.595349,-7.080371,-9.338705,6.825454,5.444196,7.953070,-7.632396,-7.821079,8.773181,2.219265,8.105574,6.803097,-9.781913,-9.204681,7.473912,-9.215765,-2.845922,-4.317316,-9.048755,9.373455,-6.664119,-9.306097],[2.654387,-2.044456,0.964257,5.856470,6.664781,-8.125509,3.766281,8.473100,-1.855213,-4.491872,-5.031584,9.724642,6.974994,9.979894,4.652683,-9.385943,-5.803425,4.021017,-0.586355,8.598015,8.681807,4.228460,-1.920991,-1.101422,9.756993,-7.444292,4.316438,-2.477965,-7.278924,-5.674674,3.557194,-8.305747,-5.840887,-3.873522,0.564425,-2.078286,5.971618,1.908298,-3.464396,-9.906273,-9.006520,8.329106],[1.041628,-3.337439,2.395846,0.915584,-6.500388,3.809870,-4.080072,0.030772,0.582569,-7.821204,-6.855770,-1.442071,9.843778,-3.264285,7.044433,-8.322741,2.594009,-6.702134,9.326362,-3.950421,-4.533999,-8.325755,3.820267,-3.557573,8.220769,8.550345,-9.988366,-4.105833,7.095001,3.668453,3.895617,8.113467,8.361224,2.828924,4.705043,-5.133054,1.911380,-4.485084,-7.696961,3.140676,-1.820585,1.013782],[4.962927,-7.803511,-9.281182,7.217375,0.186300,9.754568,0.281432,-7.227616,-9.533823,-6.011259,4.769619,-7.720149,2.491133,-7.598072,-6.068391,-7.860137,3.780255,-3.886741,-7.026359,3.904375,-6.125016,-8.451052,-2.269096,1.640265,6.207234,-6.369501,-9.953474,9.381676,5.429795,8.902391,1.079640,0.362586,6.795181,3.578908,4.647711,8.668489,7.727286,0.192768,-4.819923,-6.586506,-5.239980,5.731325],[4.484807,-9.327719,-5.799937,-3.347271,7.609812,-8.717990,-0.226198,9.118199,6.302048,5.555869,-5.158443,-6.516329,7.233333,1.247786,2.526705,0.053426,7.951647,4.806317,8.102558,8.750238,1.302747,4.818146,1.528225,-5.240600,-0.718447,1.880466,-8.894492,6.595781,-6.328488,-4.341458,7.767126,-6.474985,4.845990,-5.140472,-3.289026,-6.935787,-9.053073,7.349653,-9.420889,-4.439630,7.867064,5.534546],[1.936174,-3.561372,3.373614,9.318554,-5.585178,4.186079,-1.572726,-1.544572,-7.565836,-4.437593,8.886790,-0.305207,2.200435,-4.295149,8.448821,8.064381,-0.936842,-8.361031,-1.397942,5.496554,-1.009726,-7.414431,-9.928692,3.269842,0.269477,0.267232,5.781072,-5.119597,-5.086209,8.726782,6.793201,-8.114619,-9.261704,6.872541,0.389121,1.311847,-3.222500,-9.553284,8.201959,9.903835,1.815427,2.605723],[-6.217903,-7.337819,-0.622960,-3.430369,-2.906257,4.797794,-5.821305,6.986939,4.550265,9.973822,-4.183953,7.479894,2.536852,9.396106,3.172526,2.442561,-3.727944,3.366022,3.651948,-7.267668,-6.374406,2.542258,7.064208,-1.828495,2.205486,-5.647425,7.791157,3.157775,-3.005989,-9.590166,1.594929,6.243867,5.832074,-2.875195,2.098895,-8.321477,1.324524,-6.141988,-0.085762,4.106708,-3.597063,9.401313],[6.606861,-4.912475,0.239021,-5.424572,-2.413113,7.428241,-4.822105,-5.134299,-8.084927,6.929251,-5.013382,-9.157065,7.606245,9.593250,6.963564,1.320566,3.776722,-8.519498,-1.291087,-9.468402,8.133764,-5.324804,1.968732,3.291297,0.881634,1.428822,-0.392514,-9.166568,-3.422497,1.545348,6.957227,-2.650427,-7.271856,7.534582,7.528357,2.267427,9.802259,-3.567804,-3.376607,5.993535,2.278703,-7.514759],[-9.675798,6.504878,-5.604586,8.787845,6.733941,-2.007235,-9.164583,1.355894,9.506459,-5.213573,-3.695567,-4.619739,-2.180287,6.950806,-1.022174,7.519134,-0.600621,3.624341,7.459504,-2.196608,7.064388,-4.088053,9.633835,9.956632,-0.916619,2.086331,7.754625,-1.913597,0.484957,2.104053,0.463484,3.033003,4.682155,-2.598541,6.296266,7.882322,0.738069,-5.494089,8.418261,-1.712054,-2.192299,3.906375],[5.684113,3.205589,3.578298,-9.474586,-5.254302,-2.128751,7.390125,-9.752050,-0.278861,8.155943,-5.785911,-1.078112,5.432488,2.126722,-4.330337,5.588128,-1.840208,6.668794,7.473002,-1.264669,7.874407,4.100839,9.017986,7.058930,-1.365708,-1.101412,-6.771679,-3.848182,9.175416,8.572520,-4.745561,2.222518,-2.133387,-9.420985,-1.208344,5.942705,-4.154218,-1.290376,-6.212607,4.644073,-8.396736,0.714673],[-2.611892,4.661001,-9.052504,8.601979,0.126745,2.756345,5.480101,-2.152944,1.636724,5.692346,-1.911313,9.780701,4.979929,7.239371,-2.321628,4.348518,9.320312,-6.888868,2.292442,-1.977757,-9.179444,-2.805734,-6.763680,-3.090025,-8.574385,3.753246,6.310022,-6.237985,4.988544,0.877866,-2.909000,-2.138984,0.862775,4.203629,-0.872251,8.604482,-9.684770,4.754152,-2.641390,-2.416866,9.216922,-4.944205],[-8.396619,-3.640645,-8.963651,-9.460428,-6.819727,-9.625570,1.753652,-6.386731,-7.497958,9.813337,-5.979887,2.916934,-5.906015,2.533283,3.538454,-8.433059,-5.804833,0.707842,-6.964787,-3.265744,-8.791610,-6.833066,-5.177659,4.230568,0.850383,3.241271,9.433214,-1.675658,-1.195241,-4.313740,3.603448,-5.906349,5.649867,6.300889,2.315016,-8.525131,-7.157212,7.740713,7.256389,3.977675,7.432916,-9.672175],[3.155768,-9.469708,0.754702,7.990372,-0.615999,-9.938221,4.869526,1.405378,5.751799,-1.077217,2.194486,9.268437,9.102008,8.037606,1.837406,4.734177,-0.628688,8.675463,-3.593893,4.691172,-8.749884,-6.953830,1.850140,-2.268909,6.308830,-3.957692,-0.977925,-3.470888,3.427131,4.586709,4.153831,3.685554,-7.666362,5.222177,-6.476995,7.643758,9.295286,-3.991973,-0.298632,2.131399,-4.012621,-9.216601],[8.636328,-2.259963,-6.562954,-8.034424,-7.944119,1.455706,-4.965380,-7.163256,8.260769,3.853876,4.311676,6.037280,-9.434270,-1.201346,5.141987,3.389378,7.356056,7.708524,1.370719,9.176116,2.948099,3.872754,-4.336407,-5.102731,7.702605,-1.665949,-7.351613,-0.011021,-2.592431,3.563084,0.690850,4.821118,-4.987303,-1.232714,-4.832997,1.000279,1.670596,6.032952,-3.747863,1.512917,3.135844,8.972209],[-3.134082,-1.249023,-0.503061,-6.300104,-6.594808,-3.120934,-0.119537,1.231548,-2.710223,-9.546494,7.866964,3.923030,-9.489089,7.343258,-0.274167,6.740533,3.783270,-4.094169,4.680239,3.967636,-4.124505,-5.177007,5.028754,4.910009,-8.484768,1.577526,4.266096,-6.597293,8.984094,2.792074,-6.671103,-9.728616,-6.723499,6.205459,3.763166,4.716554,-3.900028,-7.249733,0.080900,8.665893,-8.552543,1.992960],[-4.774729,6.877940,-7.900717,7.647234,0.363764,-1.560784,-2.899403,8.156394,-4.357681,9.673575,-8.077558,-6.744732,8.355582,8.416286,-7.789657,5.919775,-5.937055,2.644280,6.895880,2.163988,-0.142745,-5.277129,1.950488,6.312787,0.668193,-4.550598,-0.641128,9.263887,3.325484,1.136519,-2.434832,-3.761991,0.128982,1.642938,-1.006626,4.952172,-2.596563,-6.167696,0.970813,5.752874,-7.945629,-3.995203]], dtype = "float32")#candidate|5715|(18, 42)|const|float32
bop_5716 = relay.less(call_5708.astype('bool'), relay.reshape(const_5715.astype('bool'), relay.shape_of(call_5708))) # shape=(18, 42)
bop_5719 = relay.less(call_5711.astype('bool'), relay.reshape(const_5715.astype('bool'), relay.shape_of(call_5711))) # shape=(18, 42)
uop_5720 = relay.rsqrt(const_5715.astype('float64')) # shape=(18, 42)
func_3515_call = mod.get_global_var('func_3515')
func_3520_call = mutated_mod.get_global_var('func_3520')
var_5723 = relay.var("var_5723", dtype = "int64", shape = ())#candidate|5723|()|var|int64
const_5724 = relay.const([8,9,4,8,-4,3,-1,8,-2,-5,10,-2,6,-5,-2,3,8,2,9,-7,2,-6,-2,-3,5,-3,-7,-1,-3,-2,-5,-5,-4,-5,8,7,-4,3,7,4,7,8,4,-6,6,-4,-2,5,7,-10,-6,4,-4,-7,6,-5,-1,-4,-10,2,8,-8,4,-8,-5,-3,-7,-2,6,2,-3,3,-9,8,9,7,5,-10,9,9,6,7,-1,-4,8,-10,-4,4,-2,-3,2,8,5,8,6,10,-1,5,7,10,-9,8,-5,-7,5,-8,9,-4,-6,8,10,-3,-8,3,-2,-3,-5,-4,-5,7,-10,7,-1,-2,3,-8,-10,2,-3,-3,9,-6,9,3,9,-6,-5,8,1,-4], dtype = "int64")#candidate|5724|(140,)|const|int64
call_5722 = relay.TupleGetItem(func_3515_call(relay.reshape(var_5723.astype('int64'), []), relay.reshape(const_5724.astype('int64'), [14, 1, 10]), relay.reshape(const_5709.astype('uint32'), [1200,]), relay.reshape(const_5710.astype('uint8'), [702,]), ), 0)
call_5725 = relay.TupleGetItem(func_3520_call(relay.reshape(var_5723.astype('int64'), []), relay.reshape(const_5724.astype('int64'), [14, 1, 10]), relay.reshape(const_5709.astype('uint32'), [1200,]), relay.reshape(const_5710.astype('uint8'), [702,]), ), 0)
output = relay.Tuple([uop_5706,const_5709,const_5710,bop_5716,uop_5720,call_5722,var_5723,const_5724,])
output2 = relay.Tuple([uop_5706,const_5709,const_5710,bop_5719,uop_5720,call_5725,var_5723,const_5724,])
func_5726 = relay.Function([var_5723,], output)
mod['func_5726'] = func_5726
mod = relay.transform.InferType()(mod)
mutated_mod['func_5726'] = func_5726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5727 = relay.var("var_5727", dtype = "int64", shape = ())#candidate|5727|()|var|int64
func_5726_call = mutated_mod.get_global_var('func_5726')
call_5728 = func_5726_call(var_5727)
output = call_5728
func_5729 = relay.Function([var_5727], output)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6225 = relay.var("var_6225", dtype = "int16", shape = ())#candidate|6225|()|var|int16
var_6226 = relay.var("var_6226", dtype = "int16", shape = (1, 7, 4))#candidate|6226|(1, 7, 4)|var|int16
bop_6227 = relay.add(var_6225.astype('int16'), var_6226.astype('int16')) # shape=(1, 7, 4)
output = relay.Tuple([bop_6227,])
output2 = relay.Tuple([bop_6227,])
func_6236 = relay.Function([var_6225,var_6226,], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
var_6237 = relay.var("var_6237", dtype = "int16", shape = ())#candidate|6237|()|var|int16
var_6238 = relay.var("var_6238", dtype = "int16", shape = (1, 7, 4))#candidate|6238|(1, 7, 4)|var|int16
output = func_6236(var_6237,var_6238,)
func_6239 = relay.Function([var_6237,var_6238,], output)
mutated_mod['func_6239'] = func_6239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6455 = relay.var("var_6455", dtype = "int8", shape = ())#candidate|6455|()|var|int8
var_6456 = relay.var("var_6456", dtype = "int8", shape = (4, 13, 10))#candidate|6456|(4, 13, 10)|var|int8
bop_6457 = relay.less(var_6455.astype('bool'), var_6456.astype('bool')) # shape=(4, 13, 10)
func_874_call = mod.get_global_var('func_874')
func_878_call = mutated_mod.get_global_var('func_878')
var_6462 = relay.var("var_6462", dtype = "float64", shape = (910,))#candidate|6462|(910,)|var|float64
call_6461 = func_874_call(relay.reshape(var_6462.astype('float64'), [5, 14, 13]), relay.reshape(var_6462.astype('float64'), [5, 14, 13]), )
call_6463 = func_874_call(relay.reshape(var_6462.astype('float64'), [5, 14, 13]), relay.reshape(var_6462.astype('float64'), [5, 14, 13]), )
uop_6464 = relay.sigmoid(var_6456.astype('float64')) # shape=(4, 13, 10)
func_1172_call = mod.get_global_var('func_1172')
func_1176_call = mutated_mod.get_global_var('func_1176')
var_6469 = relay.var("var_6469", dtype = "float32", shape = (336,))#candidate|6469|(336,)|var|float32
var_6470 = relay.var("var_6470", dtype = "float64", shape = (182,))#candidate|6470|(182,)|var|float64
call_6468 = relay.TupleGetItem(func_1172_call(relay.reshape(var_6469.astype('float32'), [7, 6, 8]), relay.reshape(var_6469.astype('float32'), [7, 6, 8]), relay.reshape(var_6470.astype('float64'), [182,]), ), 1)
call_6471 = relay.TupleGetItem(func_1176_call(relay.reshape(var_6469.astype('float32'), [7, 6, 8]), relay.reshape(var_6469.astype('float32'), [7, 6, 8]), relay.reshape(var_6470.astype('float64'), [182,]), ), 1)
output = relay.Tuple([bop_6457,call_6461,var_6462,uop_6464,call_6468,var_6469,var_6470,])
output2 = relay.Tuple([bop_6457,call_6463,var_6462,uop_6464,call_6471,var_6469,var_6470,])
func_6479 = relay.Function([var_6455,var_6456,var_6462,var_6469,var_6470,], output)
mod['func_6479'] = func_6479
mod = relay.transform.InferType()(mod)
mutated_mod['func_6479'] = func_6479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6479_call = mutated_mod.get_global_var('func_6479')
var_6481 = relay.var("var_6481", dtype = "int8", shape = ())#candidate|6481|()|var|int8
var_6482 = relay.var("var_6482", dtype = "int8", shape = (4, 13, 10))#candidate|6482|(4, 13, 10)|var|int8
var_6483 = relay.var("var_6483", dtype = "float64", shape = (910,))#candidate|6483|(910,)|var|float64
var_6484 = relay.var("var_6484", dtype = "float32", shape = (336,))#candidate|6484|(336,)|var|float32
var_6485 = relay.var("var_6485", dtype = "float64", shape = (182,))#candidate|6485|(182,)|var|float64
call_6480 = func_6479_call(var_6481,var_6482,var_6483,var_6484,var_6485,)
output = call_6480
func_6486 = relay.Function([var_6481,var_6482,var_6483,var_6484,var_6485,], output)
mutated_mod['func_6486'] = func_6486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6691 = relay.var("var_6691", dtype = "int64", shape = (3, 8, 6))#candidate|6691|(3, 8, 6)|var|int64
var_6692 = relay.var("var_6692", dtype = "int64", shape = (3, 8, 6))#candidate|6692|(3, 8, 6)|var|int64
bop_6693 = relay.equal(var_6691.astype('bool'), relay.reshape(var_6692.astype('bool'), relay.shape_of(var_6691))) # shape=(3, 8, 6)
uop_6700 = relay.cos(var_6691.astype('float64')) # shape=(3, 8, 6)
bop_6709 = relay.logical_and(uop_6700.astype('bool'), relay.reshape(bop_6693.astype('bool'), relay.shape_of(uop_6700))) # shape=(3, 8, 6)
func_1372_call = mod.get_global_var('func_1372')
func_1377_call = mutated_mod.get_global_var('func_1377')
var_6713 = relay.var("var_6713", dtype = "uint32", shape = (98, 2))#candidate|6713|(98, 2)|var|uint32
var_6714 = relay.var("var_6714", dtype = "uint8", shape = (702,))#candidate|6714|(702,)|var|uint8
const_6715 = relay.const([1.470308,-1.993010,-9.567864,-7.862505,-4.631674,-3.440950,-8.254153,4.790907,6.032168,6.954196,5.045399,-2.224885,6.800310,0.214223,-7.158126,-2.057315,1.642058,1.607892,-1.799966,0.403257,-4.011818,0.148918,-5.666020,6.168135,5.477368,6.883345,6.290666,-1.995863,1.737370,-4.158537,-0.074865,8.746704,9.072190,-6.203834,8.717448,-2.228402,0.468474,-0.197641,0.126289,3.762088,-4.256831,8.319369,5.381913,-0.778578,9.083767,-0.421974,-8.546297,3.212228,-4.749885,5.058329,5.952232,2.242709,1.019916,-6.029690,7.055157,5.085048,-8.638219,-4.896926,-9.235733,-8.140144,2.188654,-0.321572,4.999515,3.791343,2.059276,4.379844,7.222914,8.277227,-7.644824,9.845652,-6.843506,-2.721025,1.024802,-1.069802,9.728913,8.978444,6.341321,-9.192143,-4.532818,-1.979068,-4.256727,-9.780904,-4.664223,2.977892,-1.333564,-2.360572,2.975505,7.563960,6.513305,6.010793,3.804410,8.653986,-9.427393,7.682097,-8.306879,-8.833636,9.514461,-6.801477,-5.909743,-9.661377,-3.206952,8.478515,8.459588,-7.321374,-9.219265,-0.762981,-4.581437,-0.352763,9.167978,6.303841,3.643596,8.462909,5.582246,-1.993500,7.425093,-5.939302,-1.966697,7.301056,-4.558011,-6.659146,2.281512,-7.196463,4.523922,-7.633381,-6.576701,-2.866696,1.885667,-9.131180,0.723072,5.081034,-7.526115,-3.233701,6.619606,-0.493018,2.592909,5.317201,8.536301,-1.541405,-7.691937,-2.873543,3.631866,2.436847,-1.660667,2.741069,-7.943175,-4.302132,-0.787023,0.591601,-4.019927,5.774807,7.147857,8.380975,9.369254,6.600663,-0.188623,-7.996547,-1.606952,2.596470,-4.920917,-1.684762,1.137887,5.072652,9.938581,8.488508,-1.897195,3.295358,8.240027,7.938288,-1.224827,0.117559,-0.621686,-0.194057,2.137784,5.226512,-7.415527,-5.604354,-1.224084,4.629463,6.803664,4.564657,-8.842127,6.107725,2.287047,-7.082943,7.649732,4.444721,9.969983,-6.763828,8.192990,-0.439360,3.818101,2.834583,-0.176175,5.153903,6.530110,-7.441237,9.110014,-4.605969,-4.182603,-5.594280,-3.336661,0.995562,-3.568402,-2.514685,9.573001,0.443508,6.453811,-4.151778,-7.106045,1.874154,-9.170605,3.863615,0.870609,2.019875,-6.933868,0.571794,0.642972,-4.007769,-3.592491,3.293573,-4.628609,-0.071975,3.717171,5.276455,-6.269791,3.440304,-8.551278,-1.533169,-2.234183,9.186283,-6.942964,8.642114,5.749358,4.752124,-5.567429,7.415133,5.445908,5.053979,-3.529645,-2.364525,4.848005,-9.890014,-0.403273,-9.406272,-0.407171,2.477400,-3.745915,-2.227615,9.295782,-0.193337,-7.802010,-6.385114,5.264414,-1.478041,-8.842475,9.748397,-6.747384,-9.095222,-3.369451,-8.137357,-4.590470,4.050624,-3.086560,2.066260,2.103126,-7.518252,3.902540,-0.971332,-3.109326,7.808498,6.425315,-8.331108,-3.119787,9.089764,5.263533,2.357779,7.735968,0.256781,-2.066470,3.895941], dtype = "float64")#candidate|6715|(280,)|const|float64
call_6712 = relay.TupleGetItem(func_1372_call(relay.reshape(var_6713.astype('uint32'), [2, 7, 14]), relay.reshape(var_6713.astype('uint32'), [2, 7, 14]), relay.reshape(var_6714.astype('uint8'), [702,]), relay.reshape(const_6715.astype('float64'), [5, 56]), ), 1)
call_6716 = relay.TupleGetItem(func_1377_call(relay.reshape(var_6713.astype('uint32'), [2, 7, 14]), relay.reshape(var_6713.astype('uint32'), [2, 7, 14]), relay.reshape(var_6714.astype('uint8'), [702,]), relay.reshape(const_6715.astype('float64'), [5, 56]), ), 1)
output = relay.Tuple([bop_6709,call_6712,var_6713,var_6714,const_6715,])
output2 = relay.Tuple([bop_6709,call_6716,var_6713,var_6714,const_6715,])
func_6724 = relay.Function([var_6691,var_6692,var_6713,var_6714,], output)
mod['func_6724'] = func_6724
mod = relay.transform.InferType()(mod)
var_6725 = relay.var("var_6725", dtype = "int64", shape = (3, 8, 6))#candidate|6725|(3, 8, 6)|var|int64
var_6726 = relay.var("var_6726", dtype = "int64", shape = (3, 8, 6))#candidate|6726|(3, 8, 6)|var|int64
var_6727 = relay.var("var_6727", dtype = "uint32", shape = (98, 2))#candidate|6727|(98, 2)|var|uint32
var_6728 = relay.var("var_6728", dtype = "uint8", shape = (702,))#candidate|6728|(702,)|var|uint8
output = func_6724(var_6725,var_6726,var_6727,var_6728,)
func_6729 = relay.Function([var_6725,var_6726,var_6727,var_6728,], output)
mutated_mod['func_6729'] = func_6729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6731 = relay.var("var_6731", dtype = "float32", shape = (8, 15, 4))#candidate|6731|(8, 15, 4)|var|float32
var_6732 = relay.var("var_6732", dtype = "float32", shape = (8, 15, 4))#candidate|6732|(8, 15, 4)|var|float32
bop_6733 = relay.mod(var_6731.astype('float32'), relay.reshape(var_6732.astype('float32'), relay.shape_of(var_6731))) # shape=(8, 15, 4)
output = bop_6733
output2 = bop_6733
func_6742 = relay.Function([var_6731,var_6732,], output)
mod['func_6742'] = func_6742
mod = relay.transform.InferType()(mod)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6742_call = mutated_mod.get_global_var('func_6742')
var_6744 = relay.var("var_6744", dtype = "float32", shape = (8, 15, 4))#candidate|6744|(8, 15, 4)|var|float32
var_6745 = relay.var("var_6745", dtype = "float32", shape = (8, 15, 4))#candidate|6745|(8, 15, 4)|var|float32
call_6743 = func_6742_call(var_6744,var_6745,)
output = call_6743
func_6746 = relay.Function([var_6744,var_6745,], output)
mutated_mod['func_6746'] = func_6746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6956 = relay.var("var_6956", dtype = "bool", shape = (12, 6, 9))#candidate|6956|(12, 6, 9)|var|bool
var_6957 = relay.var("var_6957", dtype = "bool", shape = (12, 6, 9))#candidate|6957|(12, 6, 9)|var|bool
bop_6958 = relay.logical_or(var_6956.astype('bool'), relay.reshape(var_6957.astype('bool'), relay.shape_of(var_6956))) # shape=(12, 6, 9)
func_5587_call = mod.get_global_var('func_5587')
func_5590_call = mutated_mod.get_global_var('func_5590')
var_6988 = relay.var("var_6988", dtype = "uint8", shape = (150,))#candidate|6988|(150,)|var|uint8
const_6989 = relay.const([2,-9,5,-3,-5,6,3,-2,-4,8,-4,3,1,-2,-5,-7,5,10,-5,4,-1,-8,6,7,-9,-9,1,2,-8,-1,5,4,5,-9,8,4,4,6,-4,-9,7,7,10,10,-4,-2,10,-1,9,7,5,-7,-3,-8,-5,7,-7,-1,-4,4,1,-8,-2,-8,-1,8,-6,7,-9,4,4,-7,-8,7,-9,-1,-6,3,-10,-7,-4,8,-2,-9,2,5,5,-6,-10,4,-1,-10,-5,-5,2,7,8,7,-2,3,10,-9,-1,9,-5,9,-9,5,1,-9,3,-10,5,3,6,3,-3,2,-7,-5,5,10,-4,7,6,-10,-6,-2,-10,8,10,-3,-4,-8,7,3,9,5,2,-9,-10,9,-1,-6,-7,-8,-8,1,7,4,5,5,3,-7,2,3,-7,9,-3,-1,-1,-7,-10,-4,-2,-3,6,-10,8,3,-7,3,9,4,-8,4,3,-2,-4,2,-3,-2,2,9,1,-9,8,-2,5,1,-10,7,-8,8,3,7,-6,-8,-1,6,7,-10,-1,-2,-8,-2,-9,2,7,-1,-2,10,-9,6,-5,4,10,-7,-6,-9,-3,1,-9,-3,-4,9,-5,4,7,-4,4,4,-1,7,1,10,-7,10,-5,-2,-7,7,-2,-4,2,-1,7,2,-6,7,-5,5,-9,7,6,-5,4,5,-4,5,8,-6,-9,6,9,5,10,7,-5,-3,8,5,1,-8,-10,5,-8,4,-1,-5,4,6,1,1,-2,8,4,3,-5,2,-5,3,8,-1,10,9,9,7,-1,-8,3,-4,-1,-4,-8,-2,-3,-6,-2,10,-4,-5,-6,-7,-1,1,-2,2,-2,2,3,2,-8,-7,-7,4,5,6,-2,-8,7,8,2,5,-6,-5,2,5,8,-10,-8,-6,-4,2,-7,-10,8,4,-7,6,-9,-2,-10,10,-8,5,-7,-7,-5,-8,9,-7,-3,9,-3,3,7,10,4,-7,2,-8,-3,1,-8,-10,-4,-4,-9,7,1,3,-7,7,-5,-4,8,-8,-1,-1,-6,5,-10,-9,5,1,7,-4,-9,6,7,10,5,6,-7,-6,10,2,-2,10,-8,3,-7,2,8,-7,-9,2,-7,2,7,-6,1,6,-1,-3,9,6,3,-9,5,7,5,10,10,-7,-1,-6,4,-8,-10,6,8,-3,-10,-1,-10,-9,-10,8,-10,-10,9,5,-10,10,5,7,-8,4,5,-2,-6,10,9,-9,-5,10,-5,-9,10,-2,5,-10,-2,-2,-10,1,-7,-3,1,3,-10,-1,-2,1,10,-8,-5,-2,3,-5,2,2,-7,4,-8,3,4,5,4,5,-9,3,-3,4,-2,-10,5,2,6,1,4,4,-7,1,4,7,1,1,6,-2,4,-1,-6,4,-8,8,8,10,-10,9,7,1,-10,3,-8,4,-9,-3,-9,-6,2,1,-5,-7,1,3,6,7,-6,1,5,8,-2,8,-7,-2,-8,1,5,-10,-6,4,7,-7,2,-9,-3,1,-7,1,-5,7,8,-9,-7,-7,4,-6,-1,-5,1,9,10,-9,3,3,3,-3,9,1,-3,-1,-10,-7,10,-5,4,4,6,-3,5,6,7,10,1,9,2,8,-9,-4,-7,-9,-10,8,-10,4,-6,-5,10,-8,7,-3,-9,10,8,-6,-10,9,-10,8,6,7,-4,7,-8,-5,2,3,-8,9,6,4,-2,9,-8,4,-1,-7,3,-9,9,-5,1,-4,2,7,-1,-5,-4,5,-1,7,9,-9,8,-3,-1,9,6,-2,-7,8,10,10,-8,-5,3,-3,5,-7,9,1,-6,-3,-4,-3,-4,8,4,7,1,3,3,8,-9,3,5,-9,2,5,6,6,9,-5,2,-5,5,8,-3,10,-3,9,4,-1,1,-4,-4,-9,4,3,8,-8,-5,5,-7,9,5,-8,-7,7,4,5,2,8,9,-4,9,-10,-10,-2,9,7,-1,-2,3,-6,-3,-5,-6,2,6,10,8,2,6,-3,7,-8,-6,-7,-4,-5,6,1,-3,-7,9,-6,1,2,-4,-2,-6,9,5,-10,9,-7,5,6,10,-9,-3,3,3,-1,2,-7,-8,-2,-10,-3,8,-5,7,-1,7,6,-4,-5,-6,-3,-2,9,-5,-2,-5,-8,-6,-6,-4,-7,-8,4,2,9,6,8,-2,-7,-10,-6,5,-8,4,-1,4,3,3,-1,7,-4,-4,8,-1,-5,-3,6,2,8,-1,-6,10,-4,-7,9,7,-4,8,-6,-8,-10,9,-10,1,7,-8,6,2,-1,6,-2,7,-3,9,-4,8,9,-1,8,-6,5,-8,4,-2,9,-6,1,7,8,1,5,7,7,-3,-9,2,5,-4,9,3,-4,-1,2,-6,5,4,9], dtype = "uint8")#candidate|6989|(900,)|const|uint8
call_6987 = relay.TupleGetItem(func_5587_call(relay.reshape(var_6988.astype('uint8'), [10, 15, 1]), relay.reshape(const_6989.astype('uint8'), [10, 15, 6]), ), 0)
call_6990 = relay.TupleGetItem(func_5590_call(relay.reshape(var_6988.astype('uint8'), [10, 15, 1]), relay.reshape(const_6989.astype('uint8'), [10, 15, 6]), ), 0)
var_6991 = relay.var("var_6991", dtype = "uint8", shape = (10, 15, 6))#candidate|6991|(10, 15, 6)|var|uint8
bop_6992 = relay.less(call_6987.astype('bool'), relay.reshape(var_6991.astype('bool'), relay.shape_of(call_6987))) # shape=(10, 15, 6)
bop_6995 = relay.less(call_6990.astype('bool'), relay.reshape(var_6991.astype('bool'), relay.shape_of(call_6990))) # shape=(10, 15, 6)
uop_6999 = relay.exp(var_6991.astype('float32')) # shape=(10, 15, 6)
var_7004 = relay.var("var_7004", dtype = "float32", shape = (10, 15, 6))#candidate|7004|(10, 15, 6)|var|float32
bop_7005 = relay.equal(uop_6999.astype('bool'), relay.reshape(var_7004.astype('bool'), relay.shape_of(uop_6999))) # shape=(10, 15, 6)
output = relay.Tuple([bop_6958,var_6988,const_6989,bop_6992,bop_7005,])
output2 = relay.Tuple([bop_6958,var_6988,const_6989,bop_6995,bop_7005,])
func_7009 = relay.Function([var_6956,var_6957,var_6988,var_6991,var_7004,], output)
mod['func_7009'] = func_7009
mod = relay.transform.InferType()(mod)
var_7010 = relay.var("var_7010", dtype = "bool", shape = (12, 6, 9))#candidate|7010|(12, 6, 9)|var|bool
var_7011 = relay.var("var_7011", dtype = "bool", shape = (12, 6, 9))#candidate|7011|(12, 6, 9)|var|bool
var_7012 = relay.var("var_7012", dtype = "uint8", shape = (150,))#candidate|7012|(150,)|var|uint8
var_7013 = relay.var("var_7013", dtype = "uint8", shape = (10, 15, 6))#candidate|7013|(10, 15, 6)|var|uint8
var_7014 = relay.var("var_7014", dtype = "float32", shape = (10, 15, 6))#candidate|7014|(10, 15, 6)|var|float32
output = func_7009(var_7010,var_7011,var_7012,var_7013,var_7014,)
func_7015 = relay.Function([var_7010,var_7011,var_7012,var_7013,var_7014,], output)
mutated_mod['func_7015'] = func_7015
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7085 = relay.const([[[6,3,9,3,7,5,-4,-3,-9,-10,-3,-7],[-7,-1,9,2,-7,1,-9,3,-2,5,5,10],[8,-2,9,1,-6,10,-2,-3,7,6,8,1],[-10,-5,-4,-10,5,3,-3,3,-7,-5,5,-7],[-1,10,4,9,-8,8,9,6,10,-9,4,-2],[-5,1,6,6,-2,-7,6,2,-2,9,10,5],[-3,-5,-8,-9,4,7,-9,-7,7,-9,10,10],[2,3,-5,4,-5,-6,-3,-8,-6,-9,7,-5],[-10,9,8,1,-9,3,-3,3,-3,-2,5,-7],[4,5,2,6,-6,3,6,-3,-8,-10,-1,-10]],[[-1,3,10,-6,-4,8,1,-1,10,-1,7,5],[10,8,-8,6,-9,-7,6,5,-2,-9,8,-2],[-3,-7,4,-8,7,6,4,-7,2,2,-7,10],[-2,4,9,6,-6,-4,7,7,-8,1,6,5],[-4,-5,-5,-10,-6,-5,-2,-8,-6,-3,6,6],[4,8,-7,-7,1,10,9,-1,8,-1,-8,1],[5,8,-3,-5,-4,-6,-7,2,6,-2,-3,3],[10,2,-5,6,6,-1,-2,7,-1,-9,-7,-4],[2,-10,-10,8,7,10,4,1,-3,2,-9,3],[1,8,-2,9,-8,-3,-3,8,3,-1,-7,-1]],[[-7,6,-2,-7,1,-9,8,9,8,-2,-2,-1],[10,4,-8,-8,7,-2,10,-10,-5,-6,-6,6],[-6,4,-1,-3,-9,-8,1,2,9,5,-3,2],[1,-8,-2,10,5,6,-9,8,-5,4,4,1],[8,-3,-10,-9,-3,-9,-3,5,-3,7,9,9],[-4,9,7,-9,8,7,9,1,3,8,-9,6],[-1,3,8,5,4,-10,-8,9,-1,5,2,-1],[-6,-3,-2,-6,-1,5,10,3,-6,7,2,-9],[2,-4,-10,1,5,-10,2,10,-2,7,4,7],[3,-3,2,9,-4,10,9,9,-5,9,-4,3]],[[3,-1,9,7,4,6,-10,9,7,9,1,8],[-8,3,7,9,5,-6,-7,-4,-1,-6,5,-6],[-7,8,4,3,-4,-5,4,2,-5,2,9,5],[-8,10,6,-6,2,10,2,7,2,9,-7,3],[-9,-6,-3,-8,-1,4,8,-8,-6,6,2,5],[7,-9,-7,8,9,4,-6,5,-5,-5,-3,-1],[3,-8,-1,10,1,2,-4,-3,6,-7,10,-2],[-2,-7,-9,-5,-4,-7,6,-2,-7,-4,-9,-3],[4,9,-5,10,7,-2,6,1,10,6,5,4],[6,-2,7,-10,-9,-9,-10,-2,8,5,3,5]],[[-4,-9,1,-3,-3,2,2,3,2,6,2,-1],[1,-2,2,8,-10,-4,-2,8,2,9,5,-5],[-3,1,10,6,7,-6,7,4,-2,-8,3,-4],[-7,1,5,9,9,-3,-1,10,9,7,-1,3],[9,-2,9,-7,6,-10,-6,-1,8,-1,5,9],[9,-1,-6,6,6,-8,-1,-1,5,-2,-10,-5],[6,-9,9,-6,3,9,-2,7,-2,-2,1,3],[-5,-8,-5,5,-1,6,-2,6,-10,7,1,-7],[-8,-5,-2,-9,-3,-4,-2,-4,3,10,-10,3],[3,-1,3,-7,-7,-3,3,8,9,-8,8,3]],[[-10,7,9,-2,-9,9,3,4,-2,-10,9,3],[-9,10,-3,-1,3,-4,9,9,1,1,-7,3],[-1,4,-3,9,-10,-9,1,-5,-9,9,7,5],[9,3,2,5,2,-5,-8,5,3,-10,-6,-1],[4,-3,9,2,-6,3,-4,1,-10,9,1,6],[1,-10,-1,-2,-2,-7,-4,10,5,-6,-4,2],[-3,1,-8,2,5,6,5,-10,-2,-8,7,6],[1,-10,1,8,5,-2,6,-10,-5,6,4,-5],[-4,-3,-10,2,3,6,-4,-9,-4,1,2,1],[-10,7,5,-10,-4,-2,4,-8,8,10,-10,2]]], dtype = "uint16")#candidate|7085|(6, 10, 12)|const|uint16
var_7086 = relay.var("var_7086", dtype = "uint16", shape = (6, 10, 12))#candidate|7086|(6, 10, 12)|var|uint16
bop_7087 = relay.less(const_7085.astype('bool'), relay.reshape(var_7086.astype('bool'), relay.shape_of(const_7085))) # shape=(6, 10, 12)
bop_7096 = relay.bitwise_or(bop_7087.astype('int32'), relay.reshape(var_7086.astype('int32'), relay.shape_of(bop_7087))) # shape=(6, 10, 12)
func_1237_call = mod.get_global_var('func_1237')
func_1239_call = mutated_mod.get_global_var('func_1239')
const_7100 = relay.const([-2,1,-4,2,-6,-9,-2,2,-9,-2,2,-3,1,2,-7,10,-7,7,7,-9,6,6,1,1,-8,-8,-3,9,6,3,10,5,4,1,1,-6,8,-6,-1,10,8,-2,-7,-6,-4,-8,-2,-6,-7,10,6,5,-10,-4,8,10,10,-10,5,-3,6,-5,-6,-7,-7,1,4,7,8,5,-5,-5,-9,5,-2,-4,10,9,10,9,2,1,5,-10,-9,-1,3,3,-9,-7,7,-9,1,-6,-5,-10,-6,-5,-9,4,-1,4,10,-8,-6,-2,-6,-3,-1,10,4,3,1,1,-2,-7,1,-8,9,-10,1,-1,4,-4,10,9,5,4,-9,-3,-1,5,-2,-2,7,9,5,4,3,-4,-3,-9,-6,-2,9,7,8,3,-3,2,-9,7,-8,-5,1,3,6,-4,-6,-9,-4,4,-8,-1,-2,-10,-1,-6,2,-1,3,-8,-8,1,-9,-9,-7,-4,-8,6,7,10,7,-10,-9,1,-6,3,1,10,-6,-4,9,-8,4,-8,3,2,6,-8,-4,-1,10,-8,9,3,-4,8,5,-2,-3,-2,8,6,-8,3,5,-6,-9,6,-10,-3,5,10,1,-1,-2,-1,-10,8,-1,-2,6,-1,-2,-3,7,-9,-9,-4,-2,-5,1,9,-4,1,-10,2,-3,-1,2,-7,9,-3,8,-9,4,9,1,-7,6,10,3,2,-7,-8,4,-7,-5,1,8,6,-5,7,4,1,-4,-4,3,2,8,8,-7,-6,5,-8,1,-7,10,2,-10,1,-4,-2,2,4,3,-3,6,5,-9,6,-8,6,-9,-3,3,-6,3,-1,-1,5,4,-6,-9,4,5,-10,5,2,-6,6,1,4,1,8,-10,-5,3,7,-2,2,10,-10,-9,10,9,5,-9,3,6,-1,-6,-3,8,3,-10,9,10,-5,-4,-4,-5,3,2,4,-9,6,-1,-4,-8,1,3,-6,-1,-2,9,8,-9,-8,8,10,-4,3,-3,4,-6,-9,-9,4,7,-5,-5,10,5,-4,-9,10,-9,9,-2,5,-2,-10,9,-10,-1,-5,-7,8,-5,5,-7,9,2,1,-3,-5,-1,7,-9,10,-2,-4,-2,-1,7,10,4,3,7,1,10,-8,-9,3,-2,7,8,2,-6,-6,10,-10,-7,-2,6,-8,-9,7,1,-7,-1,-6,-8,10,3,8,3,-8,2,9,-3,-4,5,-2,1,1,4,2,8,-5,-9,-2,4,5,2,-5,2,9,1,4,-1,-8,4,6,-2,-1,-3,-3,7,-2,-3,5,-6,-3,-8,-3,-3,3,-8,9,7,3,5,8,6,-10,-8,-6,-1,-3,9,-7,4,-10,-6,-6,-1,6,7,-7,-7,3,3,-10,-2,3,-1,-4,8,-9,4,-1,4,-10,-3,-5,-3,-4,10,1,10,-5,-2,-6,-4,-9,10,-3,7,-9,-8,1,-3,-8,-10,6,2,-9,-2,-9,1,5,7,-8,-1,7,1,5,-2,8,-3,-1,8,1,6,6,-7,-9,-1,3,5,-3,5,-10,-2,-10,-3,-10,-5,-10,-3,8,-7,8,-7,-2,-8,-9,-3,-3,-7,10,6,-10,-4,-1,9,9,-10,6,8,8,-2,-1,7,-2,9,-4,-3,-7,7,4,-9,3,-1,-5,-6,-7,1,3,-3,2,-8,-8,-1,10,3,5,10,-1,7,-2,-10,-1,-6,-1,-3,3,-9,4,6,-9,1,-2,4,-2,1,3,-10,6,-1,8,-10,-5,4,9,5,-10,4,7,-5,-8,-10,10,7,9,3,-4,-8,1,2,1,-8,4,-3,9,-10,4,9,-2,-2,-8,10,-7,3,-2,8,2,4,-7,9,-5,-10,-8,5,-7,3,-3,7,3,9,-5,-7,-2,-5,8,-4,10,3,5,10,-6,-5,-5,-10,2,-4,-4,-8,-3,-5,6,5,-3,5,-10,-10,-9,-7,9,5,-5,-10,9,7,-10,5,4,-5,-10,-5,-7,-7,1,-3,1,4,6,-7,4,6,-8,2,-3,-9,9,-3,2,-3,6,-3,-3,-5,3,-3,-9], dtype = "int8")#candidate|7100|(768,)|const|int8
call_7099 = relay.TupleGetItem(func_1237_call(relay.reshape(const_7100.astype('int8'), [16, 12, 4])), 0)
call_7101 = relay.TupleGetItem(func_1239_call(relay.reshape(const_7100.astype('int8'), [16, 12, 4])), 0)
bop_7103 = relay.divide(const_7085.astype('float64'), relay.reshape(bop_7087.astype('float64'), relay.shape_of(const_7085))) # shape=(6, 10, 12)
bop_7122 = relay.left_shift(bop_7103.astype('int32'), relay.reshape(const_7085.astype('int32'), relay.shape_of(bop_7103))) # shape=(6, 10, 12)
func_7009_call = mod.get_global_var('func_7009')
func_7015_call = mutated_mod.get_global_var('func_7015')
const_7130 = relay.const([True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True], dtype = "bool")#candidate|7130|(648,)|const|bool
const_7131 = relay.const([[4,-7,4,-8,6,2,-4,-9,10,-9,-6,6,3,6,9,-3,9,-8,5,-9,-8,4,4,8,-5,-7,-2,-4,-4,-8,6,6,3,-10,3,-9,10,3,-7,2,-6,5,-1,-4,9,7,-5,-3,-10,9,4,-2,-1,2,6,2,-10,-1,-5,-5,-6,2,-9,2,-1,1,-8,4,10,1,-8,9,1,-1,6,3,-2,5,-1,1,7,9,-6,9,9,-1,3,6,-1,-2,-7,-9,1,10,-1,6,-4,-7,10,-4,8,-5,-7,-6,-10,-5,5,-5,8,-10,10,-10,3,-3,-7,-9,4,5,4,10,-10,-10,9,-1,5,-9,-7,7,10,10,-9,-10,2,-6,9,-8,-1,3,-4,-8,-6,-3,-7,3,-2,-3,-2,6,10,-10]], dtype = "uint8")#candidate|7131|(1, 150)|const|uint8
var_7132 = relay.var("var_7132", dtype = "uint8", shape = (9, 100))#candidate|7132|(9, 100)|var|uint8
call_7129 = relay.TupleGetItem(func_7009_call(relay.reshape(const_7130.astype('bool'), [12, 6, 9]), relay.reshape(const_7130.astype('bool'), [12, 6, 9]), relay.reshape(const_7131.astype('uint8'), [150,]), relay.reshape(var_7132.astype('uint8'), [10, 15, 6]), relay.reshape(var_7132.astype('float32'), [10, 15, 6]), ), 2)
call_7133 = relay.TupleGetItem(func_7015_call(relay.reshape(const_7130.astype('bool'), [12, 6, 9]), relay.reshape(const_7130.astype('bool'), [12, 6, 9]), relay.reshape(const_7131.astype('uint8'), [150,]), relay.reshape(var_7132.astype('uint8'), [10, 15, 6]), relay.reshape(var_7132.astype('float32'), [10, 15, 6]), ), 2)
uop_7142 = relay.exp(bop_7087.astype('float64')) # shape=(6, 10, 12)
uop_7159 = relay.asinh(var_7132.astype('float32')) # shape=(9, 100)
uop_7163 = relay.log2(uop_7142.astype('float32')) # shape=(6, 10, 12)
output = relay.Tuple([bop_7096,call_7099,const_7100,bop_7122,call_7129,const_7130,const_7131,uop_7159,uop_7163,])
output2 = relay.Tuple([bop_7096,call_7101,const_7100,bop_7122,call_7133,const_7130,const_7131,uop_7159,uop_7163,])
func_7171 = relay.Function([var_7086,var_7132,], output)
mod['func_7171'] = func_7171
mod = relay.transform.InferType()(mod)
mutated_mod['func_7171'] = func_7171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7171_call = mutated_mod.get_global_var('func_7171')
var_7173 = relay.var("var_7173", dtype = "uint16", shape = (6, 10, 12))#candidate|7173|(6, 10, 12)|var|uint16
var_7174 = relay.var("var_7174", dtype = "uint8", shape = (9, 100))#candidate|7174|(9, 100)|var|uint8
call_7172 = func_7171_call(var_7173,var_7174,)
output = call_7172
func_7175 = relay.Function([var_7173,var_7174,], output)
mutated_mod['func_7175'] = func_7175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7229 = relay.var("var_7229", dtype = "uint8", shape = (11, 10, 9))#candidate|7229|(11, 10, 9)|var|uint8
var_7230 = relay.var("var_7230", dtype = "uint8", shape = (11, 10, 9))#candidate|7230|(11, 10, 9)|var|uint8
bop_7231 = relay.logical_xor(var_7229.astype('uint8'), relay.reshape(var_7230.astype('uint8'), relay.shape_of(var_7229))) # shape=(11, 10, 9)
var_7241 = relay.var("var_7241", dtype = "uint8", shape = (11, 10, 9))#candidate|7241|(11, 10, 9)|var|uint8
bop_7242 = relay.power(bop_7231.astype('float64'), relay.reshape(var_7241.astype('float64'), relay.shape_of(bop_7231))) # shape=(11, 10, 9)
func_5587_call = mod.get_global_var('func_5587')
func_5590_call = mutated_mod.get_global_var('func_5590')
var_7253 = relay.var("var_7253", dtype = "uint8", shape = (150,))#candidate|7253|(150,)|var|uint8
var_7254 = relay.var("var_7254", dtype = "uint8", shape = (900,))#candidate|7254|(900,)|var|uint8
call_7252 = relay.TupleGetItem(func_5587_call(relay.reshape(var_7253.astype('uint8'), [10, 15, 1]), relay.reshape(var_7254.astype('uint8'), [10, 15, 6]), ), 2)
call_7255 = relay.TupleGetItem(func_5590_call(relay.reshape(var_7253.astype('uint8'), [10, 15, 1]), relay.reshape(var_7254.astype('uint8'), [10, 15, 6]), ), 2)
var_7260 = relay.var("var_7260", dtype = "float64", shape = (11, 10, 9))#candidate|7260|(11, 10, 9)|var|float64
bop_7261 = relay.equal(bop_7242.astype('bool'), relay.reshape(var_7260.astype('bool'), relay.shape_of(bop_7242))) # shape=(11, 10, 9)
uop_7264 = relay.acos(var_7241.astype('float64')) # shape=(11, 10, 9)
uop_7272 = relay.tan(call_7252.astype('float64')) # shape=(168, 1)
uop_7274 = relay.tan(call_7255.astype('float64')) # shape=(168, 1)
uop_7276 = relay.cos(uop_7272.astype('float32')) # shape=(168, 1)
uop_7278 = relay.cos(uop_7274.astype('float32')) # shape=(168, 1)
output = relay.Tuple([var_7253,var_7254,bop_7261,uop_7264,uop_7276,])
output2 = relay.Tuple([var_7253,var_7254,bop_7261,uop_7264,uop_7278,])
func_7279 = relay.Function([var_7229,var_7230,var_7241,var_7253,var_7254,var_7260,], output)
mod['func_7279'] = func_7279
mod = relay.transform.InferType()(mod)
var_7280 = relay.var("var_7280", dtype = "uint8", shape = (11, 10, 9))#candidate|7280|(11, 10, 9)|var|uint8
var_7281 = relay.var("var_7281", dtype = "uint8", shape = (11, 10, 9))#candidate|7281|(11, 10, 9)|var|uint8
var_7282 = relay.var("var_7282", dtype = "uint8", shape = (11, 10, 9))#candidate|7282|(11, 10, 9)|var|uint8
var_7283 = relay.var("var_7283", dtype = "uint8", shape = (150,))#candidate|7283|(150,)|var|uint8
var_7284 = relay.var("var_7284", dtype = "uint8", shape = (900,))#candidate|7284|(900,)|var|uint8
var_7285 = relay.var("var_7285", dtype = "float64", shape = (11, 10, 9))#candidate|7285|(11, 10, 9)|var|float64
output = func_7279(var_7280,var_7281,var_7282,var_7283,var_7284,var_7285,)
func_7286 = relay.Function([var_7280,var_7281,var_7282,var_7283,var_7284,var_7285,], output)
mutated_mod['func_7286'] = func_7286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7311 = relay.var("var_7311", dtype = "float64", shape = (3, 4, 5))#candidate|7311|(3, 4, 5)|var|float64
uop_7312 = relay.atanh(var_7311.astype('float64')) # shape=(3, 4, 5)
var_7314 = relay.var("var_7314", dtype = "float64", shape = (3, 4, 5))#candidate|7314|(3, 4, 5)|var|float64
bop_7315 = relay.greater_equal(uop_7312.astype('bool'), relay.reshape(var_7314.astype('bool'), relay.shape_of(uop_7312))) # shape=(3, 4, 5)
bop_7318 = relay.bitwise_and(bop_7315.astype('int16'), relay.reshape(var_7311.astype('int16'), relay.shape_of(bop_7315))) # shape=(3, 4, 5)
const_7322 = relay.const([[[-8.190421,-8.090763,-3.794219,-6.319591,-3.496969],[3.561199,8.593932,0.422904,-4.895650,-6.477985],[8.097211,3.904566,-6.008571,1.730046,5.020801],[7.223114,-1.851864,-5.727681,2.130921,-7.310803]],[[-6.241372,6.201531,8.445996,8.530918,-0.006758],[-7.904112,-1.735928,-0.679941,0.673945,6.982610],[-4.160381,-1.721301,-6.583226,4.633201,-8.790156],[3.291590,-6.570436,-4.479125,8.336147,4.260421]],[[4.751615,-0.767040,4.379681,5.241160,-2.219701],[1.313772,7.448434,6.171442,-7.438492,-0.680672],[8.825535,-4.911617,-8.907662,4.169835,-6.195837],[-1.365170,-6.975666,-8.266617,7.309242,2.653108]]], dtype = "float64")#candidate|7322|(3, 4, 5)|const|float64
bop_7323 = relay.multiply(var_7314.astype('uint8'), relay.reshape(const_7322.astype('uint8'), relay.shape_of(var_7314))) # shape=(3, 4, 5)
func_6724_call = mod.get_global_var('func_6724')
func_6729_call = mutated_mod.get_global_var('func_6729')
var_7331 = relay.var("var_7331", dtype = "int64", shape = (144,))#candidate|7331|(144,)|var|int64
var_7332 = relay.var("var_7332", dtype = "uint32", shape = (196,))#candidate|7332|(196,)|var|uint32
var_7333 = relay.var("var_7333", dtype = "uint8", shape = (6, 117))#candidate|7333|(6, 117)|var|uint8
call_7330 = relay.TupleGetItem(func_6724_call(relay.reshape(var_7331.astype('int64'), [3, 8, 6]), relay.reshape(var_7331.astype('int64'), [3, 8, 6]), relay.reshape(var_7332.astype('uint32'), [98, 2]), relay.reshape(var_7333.astype('uint8'), [702,]), ), 2)
call_7334 = relay.TupleGetItem(func_6729_call(relay.reshape(var_7331.astype('int64'), [3, 8, 6]), relay.reshape(var_7331.astype('int64'), [3, 8, 6]), relay.reshape(var_7332.astype('uint32'), [98, 2]), relay.reshape(var_7333.astype('uint8'), [702,]), ), 2)
output = relay.Tuple([bop_7318,bop_7323,call_7330,var_7331,var_7332,var_7333,])
output2 = relay.Tuple([bop_7318,bop_7323,call_7334,var_7331,var_7332,var_7333,])
func_7340 = relay.Function([var_7311,var_7314,var_7331,var_7332,var_7333,], output)
mod['func_7340'] = func_7340
mod = relay.transform.InferType()(mod)
var_7341 = relay.var("var_7341", dtype = "float64", shape = (3, 4, 5))#candidate|7341|(3, 4, 5)|var|float64
var_7342 = relay.var("var_7342", dtype = "float64", shape = (3, 4, 5))#candidate|7342|(3, 4, 5)|var|float64
var_7343 = relay.var("var_7343", dtype = "int64", shape = (144,))#candidate|7343|(144,)|var|int64
var_7344 = relay.var("var_7344", dtype = "uint32", shape = (196,))#candidate|7344|(196,)|var|uint32
var_7345 = relay.var("var_7345", dtype = "uint8", shape = (6, 117))#candidate|7345|(6, 117)|var|uint8
output = func_7340(var_7341,var_7342,var_7343,var_7344,var_7345,)
func_7346 = relay.Function([var_7341,var_7342,var_7343,var_7344,var_7345,], output)
mutated_mod['func_7346'] = func_7346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7610 = relay.var("var_7610", dtype = "uint64", shape = (16, 16, 6))#candidate|7610|(16, 16, 6)|var|uint64
const_7611 = relay.const([[[4,-1,6,-7,8,-7],[-3,4,3,7,-4,6],[1,-7,-3,-6,-7,-9],[-6,1,6,-1,-4,10],[8,-5,-4,-6,-2,-1],[-4,-5,-3,-3,-3,-3],[4,-9,-10,-8,-8,1],[-1,-8,-10,10,-5,4],[-9,7,3,2,-5,-8],[2,5,6,-2,3,-1],[-9,8,6,-2,-2,1],[-10,-5,-6,1,-8,5],[-2,-10,-7,1,-4,9],[-2,-8,-9,-4,-2,5],[-1,-3,3,-2,5,4],[-4,9,4,9,1,4]],[[6,1,6,-3,2,-5],[-6,-2,10,-4,-8,4],[10,-2,3,-3,4,5],[9,7,6,6,9,-2],[1,7,6,5,-7,1],[3,-6,-7,4,-1,-5],[3,6,9,-4,1,-2],[-1,6,-4,-7,-10,-3],[-6,-3,8,-1,-9,-6],[4,-9,-9,5,-9,-9],[8,3,9,-5,3,-1],[5,-5,-10,3,8,10],[-4,-7,-5,-10,-2,-1],[9,7,3,4,-1,-2],[-9,-4,6,4,8,5],[-10,8,-7,7,8,-7]],[[-4,-9,-1,8,6,7],[-6,6,-6,1,7,10],[-10,-10,-2,9,2,-3],[-1,-5,2,2,4,-6],[-8,-6,8,-9,-2,-9],[9,-2,-8,-4,-5,7],[-10,7,-5,-6,-10,8],[-10,-6,-5,9,-5,-5],[-6,-1,7,-8,8,-2],[-8,8,3,-8,2,-5],[1,2,-7,-8,-7,3],[10,2,-9,-1,-5,9],[-4,10,2,-4,3,8],[3,10,6,4,9,2],[-2,-8,-3,-4,-3,4],[4,-10,-1,5,-4,-6]],[[2,-6,5,10,-4,-4],[-5,-3,-5,-6,4,3],[4,-1,-5,-1,-6,8],[7,-1,-6,8,-3,2],[8,8,3,9,-1,6],[-9,5,-3,1,10,-1],[-6,8,9,-9,9,1],[9,9,-10,6,-1,-7],[3,-6,-9,-1,-5,-4],[10,-3,1,9,4,9],[-5,5,5,2,-1,3],[7,-3,-3,-9,2,-2],[-4,2,10,-3,-8,1],[-4,3,5,-3,8,-5],[5,-5,-5,-10,9,8],[5,4,-2,9,2,-1]],[[-6,9,10,-8,-9,-4],[10,-3,7,-6,-5,-8],[-7,-4,8,4,-8,9],[-9,7,-8,2,6,-6],[-7,7,-5,10,1,1],[-7,-3,-9,7,9,-6],[4,6,-3,2,7,3],[-4,5,5,5,2,9],[2,9,-9,-2,-5,4],[3,10,-5,3,4,-5],[2,4,-1,5,-10,-7],[-3,3,-7,8,3,9],[8,7,8,4,-3,-3],[-3,8,-5,2,1,-6],[4,-8,1,-5,7,-3],[-4,-6,7,-1,-8,-2]],[[3,-10,3,5,-9,6],[-10,1,5,-4,-2,7],[-10,8,7,-2,7,-7],[2,-8,2,-3,7,2],[7,-10,-6,8,5,-7],[-7,-3,3,-5,-1,-7],[10,-7,-1,8,5,-7],[-7,9,3,4,-5,6],[-8,-4,-7,4,-1,2],[-8,-10,-10,-5,3,9],[-10,-6,2,4,5,1],[-10,-7,5,-3,-2,7],[-1,9,6,8,10,10],[7,4,-5,4,-9,6],[-2,7,1,6,-4,-4],[2,6,-7,6,2,6]],[[4,-3,-10,-6,-8,-6],[7,-1,-10,3,8,-6],[8,6,1,-7,1,9],[-9,-4,10,-5,4,1],[-10,6,8,2,-3,5],[-2,10,-2,-5,-5,-7],[-8,5,-10,-8,3,-10],[-7,6,-3,-5,-3,8],[-7,8,3,9,10,7],[-2,-10,-8,-7,-5,4],[-4,-4,-5,2,-7,-6],[-6,4,-10,-5,4,9],[-10,-7,-9,-2,2,-8],[8,1,-2,8,1,-5],[-10,3,-8,6,-9,2],[5,-9,-1,6,-8,-7]],[[-5,10,4,6,6,8],[4,-3,-6,-8,-10,-8],[3,10,-2,-6,3,-2],[1,-3,-9,-2,-4,5],[9,-2,10,10,5,-9],[-9,3,-10,9,3,10],[-2,7,9,-7,-5,9],[-9,9,9,1,2,1],[9,5,3,-5,2,-10],[-2,-1,-6,-2,-9,10],[-10,9,-7,8,-10,7],[10,8,-4,5,5,-4],[-8,5,9,7,-6,-3],[-5,-8,-4,8,-9,-8],[-5,10,8,-1,10,4],[-1,1,7,2,-7,-1]],[[-9,6,5,10,4,-2],[-4,1,-8,5,7,-7],[-2,-10,-1,-9,-10,-8],[-7,-7,-10,7,1,-2],[-2,6,-5,-6,4,-5],[7,-5,6,-1,4,6],[-6,-2,9,-6,10,-2],[7,-1,6,-7,-7,7],[8,6,6,7,-5,1],[-2,-6,-8,-7,-8,7],[-6,6,-7,-7,-1,-6],[-7,10,-2,5,-5,6],[1,10,4,5,4,-3],[4,-5,-5,3,5,-5],[4,9,-2,5,-8,5],[4,2,-1,10,-5,2]],[[7,-3,1,-7,9,-4],[-3,-8,-6,3,-3,10],[7,1,7,3,1,4],[3,4,-9,7,-9,-3],[8,-9,-10,-6,10,-9],[3,9,-8,-5,-6,7],[9,-7,6,5,5,-4],[-2,-2,-10,-7,4,6],[-1,-5,1,-4,3,-9],[1,-5,-6,3,-1,-10],[5,5,-5,1,3,-5],[-5,3,10,9,5,-2],[-2,9,-10,-6,10,6],[2,3,3,-8,-9,-8],[-2,-2,2,-8,-1,-10],[9,5,5,5,9,3]],[[-8,-2,-1,-5,1,1],[-3,8,9,-2,3,-8],[-1,8,-10,3,9,4],[10,-4,-7,2,8,-4],[9,-5,-5,3,-5,7],[-9,5,10,9,-7,8],[-1,-3,-4,6,-3,8],[-4,-6,-9,8,5,-7],[3,4,-2,-5,5,-2],[7,2,8,9,-10,-3],[-10,-8,-6,-2,4,2],[-8,-1,-7,2,2,3],[6,4,-9,-5,-9,3],[-10,6,-1,-2,-5,2],[7,-7,9,-8,4,-1],[10,9,8,7,-9,4]],[[1,-8,8,-2,3,-1],[-9,-7,5,-3,3,6],[-8,-1,-8,-8,10,7],[4,-10,-9,9,-2,-3],[2,3,10,7,4,6],[5,-3,7,-1,-1,10],[-4,2,-7,4,-10,7],[8,-7,-3,6,-4,3],[1,4,4,6,5,3],[-10,1,6,10,-1,-8],[-2,2,-5,9,8,-2],[9,2,3,-8,-4,4],[9,4,3,-6,-8,10],[3,1,-5,6,10,-10],[3,7,8,-7,-7,7],[-5,-4,-1,-6,6,-8]],[[10,-6,3,-5,-5,8],[-4,-10,-8,-1,-8,-7],[9,-5,-3,-7,10,3],[-1,-4,1,-10,6,7],[7,-6,3,5,-9,1],[5,4,1,-1,-6,-7],[-6,3,8,-6,10,-9],[-7,8,-7,5,5,9],[7,-8,-6,1,3,2],[3,-6,1,-7,2,-2],[2,-2,7,5,-3,6],[-10,-1,-10,-6,-2,8],[-10,10,10,-2,1,1],[7,-9,-3,-10,-1,-7],[6,4,8,1,-6,-3],[-5,1,10,4,-10,-10]],[[10,-5,10,2,7,-4],[-7,-6,-6,-1,5,8],[4,5,-7,-8,-4,7],[-6,2,6,-2,-10,8],[-7,-8,-1,-10,-8,-8],[9,-1,-8,6,9,9],[3,10,8,-1,7,1],[-8,2,7,1,7,-8],[-10,10,2,5,-9,-9],[3,5,-9,-9,-7,-3],[2,-10,-5,5,-3,-7],[4,-10,-8,-1,-9,2],[-3,5,3,-6,-1,3],[7,3,3,-4,-3,10],[-3,4,-7,2,-9,-4],[6,-7,-8,-4,8,-4]],[[-9,-8,3,8,8,10],[10,7,-10,4,-1,-2],[1,4,5,-2,6,-1],[-7,9,-8,-3,10,10],[9,5,-4,8,2,9],[-2,4,-3,9,3,-7],[6,1,-8,-7,4,-6],[8,6,-8,9,-7,9],[9,2,-7,-3,9,-10],[-5,-5,-8,9,-8,6],[-1,-7,-2,-8,8,5],[9,8,-1,8,-7,7],[7,-1,-1,3,4,10],[-8,-10,-8,-2,2,8],[2,3,10,-3,6,-2],[-1,-8,-6,-4,7,-3]],[[-7,-4,6,-6,8,6],[-7,-5,-4,-9,1,-1],[-8,-3,9,1,-10,-8],[-9,-5,-2,-4,-3,-4],[-5,2,-4,5,10,-8],[4,6,6,-2,-6,3],[9,1,-8,9,-1,1],[5,-7,6,5,-7,-5],[5,-10,-6,1,2,-9],[8,-4,-10,2,3,-2],[7,10,-8,-6,4,-4],[-1,-8,-6,1,-7,-10],[-2,-4,-4,-3,-2,2],[7,3,-6,-2,9,-7],[-8,-8,7,-4,2,3],[4,6,10,8,-6,9]]], dtype = "uint64")#candidate|7611|(16, 16, 6)|const|uint64
bop_7612 = relay.left_shift(var_7610.astype('uint64'), relay.reshape(const_7611.astype('uint64'), relay.shape_of(var_7610))) # shape=(16, 16, 6)
func_2461_call = mod.get_global_var('func_2461')
func_2466_call = mutated_mod.get_global_var('func_2466')
const_7627 = relay.const([-0.061580,-7.908943,-5.505139,-1.633680,4.963574,4.941821,2.521376,-2.058483,3.638213,-5.017092,2.559452,9.984774,4.601519,-1.462868,-8.626880,9.182272,-6.291849,-6.725471,-4.537576,-3.161636,-8.804113,1.221722,-1.496629,-5.469340,1.376340,8.731420,-9.673097,-3.018471,1.141630,-4.824423,-4.973328,-9.981620,-6.621650,6.745427,2.872397,-6.818568,-7.435289,5.844729,8.065341,-5.540956,-7.592203,6.781901,-5.879568,7.412939,-6.173964,-0.990121,9.867012,-0.692235,7.219435,-9.702688,3.745465,-4.945201,-3.291223,-8.576446,-6.514619,-4.259845,3.174107,8.662521,2.573021,5.050294,-3.530163,8.720401,2.383688,2.573251,2.543741,2.395299,7.993561,-5.816425,-9.403205,5.898342,-4.375244,8.725931,-0.054107,1.229207,3.022904,3.996068,-0.854905,9.112254,-4.687510,-4.745972,2.903981,2.722303,-5.059147,-4.971775,-2.152707,3.126113,-8.540635,-0.458854,3.477684,-3.887475,5.775951,-3.932299,-5.793734,6.101369,9.697390,7.261985,5.914833,4.234818,-2.331115,-2.104614,2.190855,7.932590,5.891443,-7.339421,-2.339024,9.977666,8.921699,2.806435,-6.309160,-7.338060,9.845397,-9.112667,-0.751507,-3.828724,3.777696,-8.940592,-7.433803,-9.001892,4.551371,-3.929141], dtype = "float32")#candidate|7627|(120,)|const|float32
var_7628 = relay.var("var_7628", dtype = "float32", shape = (756,))#candidate|7628|(756,)|var|float32
const_7629 = relay.const([3,-1,9,-9,9,-9,2,7,5,-6,-6,3,-6,8,-8,5,-9,4,-4,-4,3,-8,-1,6,8,3,6,1,-10,-9,-3,4,3,-10,10,-1,-7,-7,-7,-4,-4,-8,-3,-4,7,-3,-2,-4,4,-3,10,-7,-7,5,7,9,-8,-6,6,-4,-7,-5,4,3,5,-4,2,-10,-6,-2,-6,-8,8,3,-6,-6,4,10,-3,9,1,-3,-5,-3,-9,7,6,10,-9,-7,-2,6,6,-7,10,-9,7,5,4,-2,5,-10,5,4,-5,-9,-5,4,-10,4,-4,3,2,5,6,-9,-9,1,-9,7,9,10,10,7,4,2,-2,-1,-2,2,-4,-2,-2,-6,-9,4,9,-2,-9,-1,-10,-2,9,-7,-10,3,-2,6,8,-4,4,-5,-3,4,-5,6,9,8,-1,-10,-7,-4,6,2,3,2,-3,2,5,-1,-10,-8,5,8,-4,-7,-9,-8,3,10,-6,-3,9,-7,1,5,-7,2,-8,7,7,2,5,3,-10,3,-7,-4,-2,-1,1,4,-10,9,9,1,-10,-3,3,-4,-3,10,3,-6,-9,6,6,9,8,-3,3,-2,7,1,-3,4,2,-6,9,8,1,-7,3,1,3,-10,-10,-1,-10,-8,7,-9,-7,2,6,-4,-3,2,-7,1,10,8,4,6,2,-8,-7,8,9,2,9,2,6,-9,-10,-5,-2,8,-4,3,-10,5,-6,-3,-4,-2,-10,-6,-10,-1,7,-9,-3,-8,-5,3,10,7,2,2,-5,-8,1,-1,-8,1,2,-6,-1,10,-3,-3,2,10,-10,-7,-9,9,-8,10,7,-1,3,2,10,-10,-4,8,5,-9,4,-1,10,4,-2,-3,-6,-8,10,5,-1,-4,9,2,-4,8,-8,1,-9,-7,9,-10,4,6,-7,5,5,4,5,-8,8,7,3,3,4,2,9,10,9,7,-8,-3,-4,-9,-4,10,-10,-7,6,4,-9,-7,8,2,-5,3,-5,-8,-5,10,1,1,-8,6,-10,5,-5,-10,10,-2,4,10,-4,-8,5,-10,9,-10,2,10,4,-3,-10,6,4,-6,-3,-8,5,8,6,-8,3,-10,2,9,7,-9,-5,-6,-10,9,-9,2,5,-3,2,-3,-7,-10,-5,7,2,-9,-10,6,-7,5,4,-9,-9,-7,4,-6,5,4,-8,3,8,5,-9,7,-7,-4,-10,-7,7,-2,6,-6,7,-2,-2,4,-7,5,1,-1,-4,1,-10,-7,-4,10,10,-2,5,-1,-7,4,-6,-9,2,-7,-9,-4,-7,-5,-1,-3,-10,-9,7,9,-7,-9,3,9,-1,4,5,8,1,4,-8,-5,2,-1,-4,-4,-3,-3,4,-4,8,-7,-9,4,-8,-4,-3,-3,2,5,-4,6,-3,-8,3,-6,-1,4,5,10,6,10,-2,6,6,-2,10,2,9,4,3,4,10,5,-6,1,-10,1,3,-8,9,-1,-7,2,-4,-9,6,-10,1,-2,-2,-9,3,4,9,4,1,-5,-8,-6,5,1,1,8,7,-1,2,-1,1,-10,9,-8,-7,3,-4,-10,-6,-10,2,-1,7,-2,-3,3,-10,6,-5,4,-1,-1,-7,4,4,2,-2,-7,-4,-8,-1,1,-6,-3,-3,-4,3,9,-8,3,7,-8,-8,-9,-5,1,10,9,1,8,10,-8,9,3,10,-9,-3,5,-3,6,-1,-4,-1,8,7,-5,8,-10,-3,-4,10,10,-2,5,-9,-1,-7,3,10,-1,-7,-5,-2,-4,9,9,-3,1,6,-1,6,-7,-9,-5,4,-9,2,8,9,10,1,-5,8,2,-1,-9,4,-4,-8,3,2,-3,-6,-8,-4,-10,8,1,-3,-8,-3,5,-4,-10,7,4,-7,-4,1,-5,10,10,-5,4,2,-2,10,2,-6,6,-6,-5,-1,-6,-4,-5,-8,-2,6,1,-9,-2,-2,-3,-7,-4,-1,-7,-1,-3,6,9,5,-7,9,-10,2,-5,8,-3,-7,9,-9,10,-1,-2,3,1,3,2,7,-10,5,1,5,10], dtype = "int8")#candidate|7629|(768,)|const|int8
var_7630 = relay.var("var_7630", dtype = "float64", shape = (168,))#candidate|7630|(168,)|var|float64
call_7626 = relay.TupleGetItem(func_2461_call(relay.reshape(const_7627.astype('float32'), [6, 4, 5]), relay.reshape(var_7628.astype('float32'), [756,]), relay.reshape(const_7629.astype('int8'), [768,]), relay.reshape(var_7630.astype('float64'), [168,]), ), 2)
call_7631 = relay.TupleGetItem(func_2466_call(relay.reshape(const_7627.astype('float32'), [6, 4, 5]), relay.reshape(var_7628.astype('float32'), [756,]), relay.reshape(const_7629.astype('int8'), [768,]), relay.reshape(var_7630.astype('float64'), [168,]), ), 2)
func_2042_call = mod.get_global_var('func_2042')
func_2044_call = mutated_mod.get_global_var('func_2044')
call_7635 = func_2042_call(relay.reshape(var_7630.astype('float64'), [1, 12, 14]))
call_7636 = func_2042_call(relay.reshape(var_7630.astype('float64'), [1, 12, 14]))
uop_7652 = relay.exp(const_7611.astype('float64')) # shape=(16, 16, 6)
func_6236_call = mod.get_global_var('func_6236')
func_6239_call = mutated_mod.get_global_var('func_6239')
var_7669 = relay.var("var_7669", dtype = "int16", shape = ())#candidate|7669|()|var|int16
var_7670 = relay.var("var_7670", dtype = "int16", shape = (14, 2))#candidate|7670|(14, 2)|var|int16
call_7668 = relay.TupleGetItem(func_6236_call(relay.reshape(var_7669.astype('int16'), []), relay.reshape(var_7670.astype('int16'), [1, 7, 4]), ), 0)
call_7671 = relay.TupleGetItem(func_6239_call(relay.reshape(var_7669.astype('int16'), []), relay.reshape(var_7670.astype('int16'), [1, 7, 4]), ), 0)
output = relay.Tuple([bop_7612,call_7626,const_7627,var_7628,const_7629,var_7630,call_7635,uop_7652,call_7668,var_7669,var_7670,])
output2 = relay.Tuple([bop_7612,call_7631,const_7627,var_7628,const_7629,var_7630,call_7636,uop_7652,call_7671,var_7669,var_7670,])
func_7680 = relay.Function([var_7610,var_7628,var_7630,var_7669,var_7670,], output)
mod['func_7680'] = func_7680
mod = relay.transform.InferType()(mod)
var_7681 = relay.var("var_7681", dtype = "uint64", shape = (16, 16, 6))#candidate|7681|(16, 16, 6)|var|uint64
var_7682 = relay.var("var_7682", dtype = "float32", shape = (756,))#candidate|7682|(756,)|var|float32
var_7683 = relay.var("var_7683", dtype = "float64", shape = (168,))#candidate|7683|(168,)|var|float64
var_7684 = relay.var("var_7684", dtype = "int16", shape = ())#candidate|7684|()|var|int16
var_7685 = relay.var("var_7685", dtype = "int16", shape = (14, 2))#candidate|7685|(14, 2)|var|int16
output = func_7680(var_7681,var_7682,var_7683,var_7684,var_7685,)
func_7686 = relay.Function([var_7681,var_7682,var_7683,var_7684,var_7685,], output)
mutated_mod['func_7686'] = func_7686
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7857 = relay.const([[[-9.062654,5.024315],[-4.462483,4.029319],[9.017261,1.330322],[-8.033739,-1.463702],[9.201735,-8.915764],[7.170979,2.796575],[-9.662634,-4.228141],[1.969690,4.589669],[-5.797922,5.048983],[-2.811672,6.193081],[3.751489,2.752100],[7.611066,-5.053621]],[[5.615254,5.211729],[9.628283,8.740045],[-0.611185,-4.164231],[-4.351648,3.061620],[-1.024132,5.505510],[2.502984,-0.947912],[5.810630,2.904718],[-9.188534,3.943400],[-9.195046,-1.567421],[2.438635,3.482384],[7.230227,9.993568],[9.296334,1.254700]],[[-3.122581,-5.097202],[8.287486,-2.088997],[-0.640617,-7.009506],[6.356602,-9.972090],[-0.611898,0.744519],[6.046095,4.353354],[-6.265705,-2.778894],[2.109541,7.424679],[-8.366255,-6.995105],[-3.343028,-5.034445],[-7.311205,3.152149],[-6.436865,6.472603]]], dtype = "float32")#candidate|7857|(3, 12, 2)|const|float32
uop_7858 = relay.erf(const_7857.astype('float32')) # shape=(3, 12, 2)
func_6724_call = mod.get_global_var('func_6724')
func_6729_call = mutated_mod.get_global_var('func_6729')
const_7866 = relay.const([-8,-10,7,5,2,8,-8,5,-3,-9,9,-5,-7,2,-8,4,1,-5,7,-8,4,6,10,-5,-8,1,10,-8,2,-2,6,-4,-1,-3,-3,-9,8,8,-9,-3,1,-6,10,7,-3,-2,-4,6,-9,8,-2,8,4,-10,-3,10,6,3,10,-10,9,-4,10,10,8,1,5,-2,7,2,4,2,-9,-6,4,-6,9,6,9,-7,4,-7,-7,-9,-10,4,4,1,-10,-6,4,9,-9,3,1,-5,9,-5,2,3,-5,-5,3,-4,-5,-9,-2,4,-1,9,8,10,-5,-4,-9,10,-3,4,-1,9,1,-8,-4,4,1,1,7,-5,-6,-1,7,8,-4,-6,-5,4,-2,-8,-5,4,-4,-3,6,-3], dtype = "int64")#candidate|7866|(144,)|const|int64
var_7867 = relay.var("var_7867", dtype = "uint32", shape = (196,))#candidate|7867|(196,)|var|uint32
var_7868 = relay.var("var_7868", dtype = "uint8", shape = (6, 117))#candidate|7868|(6, 117)|var|uint8
call_7865 = relay.TupleGetItem(func_6724_call(relay.reshape(const_7866.astype('int64'), [3, 8, 6]), relay.reshape(const_7866.astype('int64'), [3, 8, 6]), relay.reshape(var_7867.astype('uint32'), [98, 2]), relay.reshape(var_7868.astype('uint8'), [702,]), ), 2)
call_7869 = relay.TupleGetItem(func_6729_call(relay.reshape(const_7866.astype('int64'), [3, 8, 6]), relay.reshape(const_7866.astype('int64'), [3, 8, 6]), relay.reshape(var_7867.astype('uint32'), [98, 2]), relay.reshape(var_7868.astype('uint8'), [702,]), ), 2)
output = relay.Tuple([uop_7858,call_7865,const_7866,var_7867,var_7868,])
output2 = relay.Tuple([uop_7858,call_7869,const_7866,var_7867,var_7868,])
func_7876 = relay.Function([var_7867,var_7868,], output)
mod['func_7876'] = func_7876
mod = relay.transform.InferType()(mod)
var_7877 = relay.var("var_7877", dtype = "uint32", shape = (196,))#candidate|7877|(196,)|var|uint32
var_7878 = relay.var("var_7878", dtype = "uint8", shape = (6, 117))#candidate|7878|(6, 117)|var|uint8
output = func_7876(var_7877,var_7878,)
func_7879 = relay.Function([var_7877,var_7878,], output)
mutated_mod['func_7879'] = func_7879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7985 = relay.var("var_7985", dtype = "float32", shape = (9, 2, 13))#candidate|7985|(9, 2, 13)|var|float32
const_7986 = relay.const([[[-6.826094,-0.541833,-6.173509,-1.637601,2.877584,9.219679,-1.695863,4.590233,6.778903,-5.542159,-2.939558,6.395812,7.915115],[-5.917709,4.142065,1.284785,-8.767537,6.573258,-1.867967,-4.809688,8.293448,5.791822,-3.198881,2.142891,-3.024813,4.028886]],[[6.602589,8.102622,9.895178,-0.250666,3.363356,-6.108155,2.847841,-6.895799,6.520294,4.134519,-0.402386,-2.144182,1.237925],[9.592685,7.620066,8.910409,9.206215,9.999253,-0.336621,4.646982,5.064742,5.440005,1.772557,8.562596,-3.850494,8.915361]],[[8.581676,5.799934,-7.173203,-5.565062,3.217172,-2.994111,-6.451637,6.068212,2.200370,-7.932354,8.638391,-1.905419,5.017896],[4.576134,-9.471244,-5.920931,4.046048,4.021012,-9.225970,7.052381,1.195775,-3.700729,-7.868339,-1.816734,6.616949,-0.551347]],[[-9.832548,6.305046,-2.690046,9.036875,-3.471689,-4.916550,-9.197084,6.748444,1.577034,-2.691995,-3.847971,-8.869632,2.435314],[6.379488,6.767781,5.433965,-1.244932,0.726509,5.818915,4.226386,5.928071,5.043167,9.427655,-9.576461,-9.118430,7.731303]],[[-8.848187,8.082891,-1.753987,-8.473506,-9.686261,8.811511,-5.116872,-3.377806,-4.025401,7.709318,1.572908,5.348794,8.500816],[-1.330864,-3.498845,8.847047,7.998375,-7.860997,4.803136,-5.782146,-8.006964,-9.447679,-8.511378,5.507695,-6.685622,-8.113630]],[[9.374093,6.477982,-3.746450,-5.275339,3.776032,2.683251,-6.663920,5.823747,-5.845537,-1.632973,9.854300,0.636554,1.453702],[-7.429698,-5.383294,3.059430,-1.241671,-5.053203,-4.194066,-2.403709,-9.526864,4.785197,8.626596,-6.580526,-3.719486,6.477546]],[[3.414939,0.199176,6.634229,1.628409,6.009925,9.630059,8.554474,-6.559353,4.020287,7.206927,-9.085954,-6.622912,1.866765],[5.432741,8.055808,-2.119465,9.177919,6.793761,8.216259,-3.572646,-2.407188,0.355548,-2.003854,1.259991,-9.767506,1.666537]],[[0.092921,-1.093669,2.540099,-6.564206,-8.077950,8.638957,5.578014,-1.666179,2.021160,3.513906,5.465707,2.736373,-5.859753],[0.869387,-1.204718,2.372892,-4.265244,-9.071299,9.478982,4.528275,8.542307,5.900449,6.709185,-9.788653,2.758803,-9.078153]],[[-1.109505,-3.472462,8.719406,8.497948,-4.475749,7.151924,-6.558885,-2.008326,9.462027,-6.690748,3.820081,7.846893,4.407664],[9.290217,6.597482,9.531990,-8.461662,-4.336426,6.986277,9.277231,-0.353852,7.108359,-5.499751,-3.922820,3.827350,9.351026]]], dtype = "float32")#candidate|7986|(9, 2, 13)|const|float32
bop_7987 = relay.floor_mod(var_7985.astype('float32'), relay.reshape(const_7986.astype('float32'), relay.shape_of(var_7985))) # shape=(9, 2, 13)
func_7876_call = mod.get_global_var('func_7876')
func_7879_call = mutated_mod.get_global_var('func_7879')
const_7991 = relay.const([1,7,-7,4,-7,-7,1,-6,8,2,9,10,-1,-3,3,-10,-3,-8,10,-4,9,1,5,8,1,5,5,-9,10,-3,6,-7,-4,7,1,1,3,1,-1,5,-8,-3,8,9,-6,2,8,8,6,-8,-7,6,-2,9,-7,-5,-7,-8,-2,4,1,-7,5,3,-1,8,-9,-9,3,-4,4,-7,-10,5,-2,-8,-5,4,-10,-1,7,10,-6,-8,-7,-1,-4,2,-3,-3,-6,-10,8,10,2,-9,-3,-6,6,-9,-6,5,-9,1,-6,1,-7,-4,6,3,5,8,10,8,5,2,8,-1,-6,2,-1,5,-3,-3,3,8,7,-8,7,-5,-1,-4,-4,-9,9,2,2,8,-8,-6,-8,-1,-8,3,4,8,7,-6,8,1,7,-7,-5,-6,-5,-6,-5,-7,-5,-8,8,-6,-9,6,-10,-5,2,-5,5,10,4,-3,2,-3,10,-5,9,-5,-6,6,-10,2,-10,-1,-8,7,6,10,1,4,-5,2,-10,2,10,1], dtype = "uint32")#candidate|7991|(196,)|const|uint32
var_7992 = relay.var("var_7992", dtype = "uint8", shape = (234, 3))#candidate|7992|(234, 3)|var|uint8
call_7990 = relay.TupleGetItem(func_7876_call(relay.reshape(const_7991.astype('uint32'), [196,]), relay.reshape(var_7992.astype('uint8'), [6, 117]), ), 2)
call_7993 = relay.TupleGetItem(func_7879_call(relay.reshape(const_7991.astype('uint32'), [196,]), relay.reshape(var_7992.astype('uint8'), [6, 117]), ), 2)
func_1172_call = mod.get_global_var('func_1172')
func_1176_call = mutated_mod.get_global_var('func_1176')
const_8015 = relay.const([1.154828,9.994993,-7.177708,-3.349065,-1.186591,2.998244,1.756199,5.358690,-4.650284,3.284862,-8.289139,2.622445,3.220019,5.604330,-9.446634,-5.982975,-6.298499,5.724795,-1.104541,-5.505780,1.389240,-9.516808,1.774638,-9.268650,6.960442,-0.081480,-6.536246,-6.000250,0.292718,-5.055110,5.131221,7.615884,1.630925,-2.644815,-8.548841,-2.086425,8.357097,4.533890,-8.827007,-7.097028,1.300878,3.458115,-2.383782,9.091593,-0.907322,9.182033,5.537749,4.172514,7.101483,-1.807964,-8.934033,-9.883546,-8.961131,-9.539759,9.663380,-2.243730,-2.685328,-9.028799,6.212111,-7.748600,6.894382,5.464571,9.531532,0.275553,2.403676,-2.581386,-9.833685,4.719708,-0.840433,6.123075,-2.469735,-9.096411,-0.719296,3.394111,3.549058,7.214046,-0.056742,6.252587,8.551770,-6.905916,-3.004736,7.933436,8.716089,5.924328,-1.595311,2.304346,-2.504409,3.525867,-7.007433,-3.342362,6.321042,6.307622,3.478881,8.459190,8.865032,6.789130,-0.220037,6.228798,6.203070,-6.364680,2.649661,-7.704687,8.616676,-0.613447,-1.042213,4.772961,-8.173179,3.499419,5.244006,8.838517,4.416494,6.464799,3.167097,5.138758,1.455969,-4.229593,-5.268165,9.404875,6.990986,7.715350,-3.945712,2.502833,7.976390,-4.521136,9.399407,-4.795889,-2.238038,-3.818616,-5.010296,-4.559372,6.806668,-4.539607,0.753491,-9.111441,-8.252015,6.855813,-5.587451,5.983125,5.766414,8.159465,5.907758,1.159548,1.116650,2.132663,-0.765817,5.800306,8.222996,2.161617,0.491590,5.348424,4.664416,1.409981,5.308011,-7.134331,-5.816712,1.336334,4.971508,-9.922572,-6.254320,-7.629552,1.959558,3.579753,2.043242,-2.600564,-5.085931,-4.958172,-7.187240,4.016630,6.707799,-8.139346,7.285223,4.058123,5.601520,5.299419,-5.485609,-6.227735,-0.394603,-5.055253,-6.009298,-0.413557,-2.411892,-8.641530,-9.848579,-9.785302,2.503276,-9.858053,-8.530699,9.263685,7.342000,8.844126,-6.656889,2.696593,0.408673,6.030392,-3.549741,-8.963204,-9.010235,4.130893,8.224835,-5.456198,5.912292,3.976115,4.675481,8.753307,-2.403190,-8.949973,-8.761416,0.162156,9.888906,7.201991,-8.018220,-4.980332,-8.399744,-5.586498,7.201185,9.614929,5.052954,-6.667416,4.405171,6.819102,-5.666286,5.037816,1.929211,3.837297,8.750779,5.254893,-0.160717,-3.817413,2.934398,-3.347596,-8.373821,2.815446,1.390171,-9.086456,8.880302,-3.203925,0.040690,-2.372657,-5.406184,9.294793,-4.681995,2.776757,-8.925126,-4.480527,-4.885765,-5.301847,-1.179950,-7.317802,0.644769,-1.731331,-9.325226,-4.316550,-4.060756,7.970528,-7.663769,-7.024424,2.711819,-9.449731,-4.825086,1.242830,5.945901,1.933488,-7.505447,7.955388,-8.017139,-2.147832,-3.145085,-5.828587,-1.666536,7.764196,-8.575434,0.816567,-8.576792,5.175761,-6.608530,7.646674,-7.036868,9.934787,5.188962,-6.836633,4.641918,-6.856985,2.207643,-6.086152,-2.508733,6.229756,-0.401583,-2.571718,-7.280822,1.687439,8.126340,-2.387213,1.546140,-1.630766,2.364106,-2.003213,3.103662,-0.709526,7.296207,-7.261431,5.552468,-3.232102,9.854562,-1.607226,-9.750585,-8.947067,-3.610347,9.124422,3.013093,-8.789999,-5.739202,9.199617,-6.123890,-5.027440,-4.416626,5.444200,-5.821145,3.786900,0.393189,0.655621,9.301866,4.887639,8.610053,6.948439,-0.802372,8.608408,-7.843321,-1.158017,-6.977694,-1.784644,-9.446925,-6.665177,6.788031,-1.382425,2.373137,-6.453059], dtype = "float32")#candidate|8015|(336,)|const|float32
const_8016 = relay.const([0.429874,-8.601698,1.679314,5.490002,1.222987,8.357661,3.867613,-3.651055,-7.642210,0.194099,-6.671251,3.638633,-1.539946,-8.624059,9.505276,-1.719789,5.947648,2.090483,-5.848562,-3.057079,-5.869477,6.052745,4.774197,-6.686709,-6.047465,-5.656672,-5.266765,0.128539,7.182475,-9.239613,3.489568,7.515363,-6.265084,0.738405,-4.269587,-2.102814,9.047785,-0.739018,6.674190,5.752262,-0.567448,-8.720287,8.033992,6.477355,9.905825,4.583884,9.252557,9.480793,0.187274,-7.987353,8.159858,-1.250067,-8.778359,4.702017,7.738156,0.025966,4.074048,4.816035,-4.847371,4.645533,-6.053704,-1.009553,7.111664,5.129289,-0.033358,-1.669724,5.635170,3.632138,9.859064,6.302990,4.488843,9.764308,2.807810,7.703609,5.287349,2.346213,7.308492,2.289185,-7.210947,4.810752,-2.732775,-1.844174,-7.232303,-5.220863,-3.996176,0.283961,-9.345766,-2.090610,1.374703,0.312931,-0.273956,-1.920288,-5.311690,7.291167,9.608344,-3.733223,-5.327547,2.930847,-6.351825,3.550737,0.139185,-5.149273,5.602974,0.115632,-4.680904,7.109136,-7.308098,-3.259037,-9.719756,4.763910,-7.298426,1.956953,-3.456377,4.318185,-6.705787,8.468888,8.764854,-7.484011,5.915859,8.500167,-5.947029,-7.297265,4.826140,-1.250304,-0.082562,4.670190,3.318327,-6.639657,9.327348,-3.878157,-5.982013,7.574162,6.044830,-4.163586,-7.946704,-7.697132,-1.861318,0.026729,5.839576,4.424389,8.239271,-2.041861,-7.548026,-5.350882,-7.549071,8.223585,-4.731802,5.048526,-6.514411,-4.970662,3.456353,-2.990215,-6.611790,7.445207,7.315137,9.572650,0.846100,4.548324,-5.716383,3.395167,-2.261781,2.207174,-6.966131,-2.019726,-7.710513,8.904036,1.661327,-9.593842,1.812547,0.126517,-8.982920,6.196277,-9.422175,7.317066,-5.545833,6.520426,-1.858582,0.660182,5.639156,8.328006,0.768775,-1.895896], dtype = "float64")#candidate|8016|(182,)|const|float64
call_8014 = relay.TupleGetItem(func_1172_call(relay.reshape(const_8015.astype('float32'), [7, 6, 8]), relay.reshape(const_8015.astype('float32'), [7, 6, 8]), relay.reshape(const_8016.astype('float64'), [182,]), ), 1)
call_8017 = relay.TupleGetItem(func_1176_call(relay.reshape(const_8015.astype('float32'), [7, 6, 8]), relay.reshape(const_8015.astype('float32'), [7, 6, 8]), relay.reshape(const_8016.astype('float64'), [182,]), ), 1)
func_5437_call = mod.get_global_var('func_5437')
func_5440_call = mutated_mod.get_global_var('func_5440')
var_8040 = relay.var("var_8040", dtype = "int16", shape = (630,))#candidate|8040|(630,)|var|int16
call_8039 = func_5437_call(relay.reshape(var_8040.astype('int16'), [10, 9, 7]))
call_8041 = func_5437_call(relay.reshape(var_8040.astype('int16'), [10, 9, 7]))
output = relay.Tuple([bop_7987,call_7990,const_7991,var_7992,call_8014,const_8015,const_8016,call_8039,var_8040,])
output2 = relay.Tuple([bop_7987,call_7993,const_7991,var_7992,call_8017,const_8015,const_8016,call_8041,var_8040,])
func_8045 = relay.Function([var_7985,var_7992,var_8040,], output)
mod['func_8045'] = func_8045
mod = relay.transform.InferType()(mod)
mutated_mod['func_8045'] = func_8045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8045_call = mutated_mod.get_global_var('func_8045')
var_8047 = relay.var("var_8047", dtype = "float32", shape = (9, 2, 13))#candidate|8047|(9, 2, 13)|var|float32
var_8048 = relay.var("var_8048", dtype = "uint8", shape = (234, 3))#candidate|8048|(234, 3)|var|uint8
var_8049 = relay.var("var_8049", dtype = "int16", shape = (630,))#candidate|8049|(630,)|var|int16
call_8046 = func_8045_call(var_8047,var_8048,var_8049,)
output = call_8046
func_8050 = relay.Function([var_8047,var_8048,var_8049,], output)
mutated_mod['func_8050'] = func_8050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8092 = relay.var("var_8092", dtype = "float32", shape = (3, 11, 7))#candidate|8092|(3, 11, 7)|var|float32
uop_8093 = relay.log(var_8092.astype('float32')) # shape=(3, 11, 7)
output = relay.Tuple([uop_8093,])
output2 = relay.Tuple([uop_8093,])
func_8120 = relay.Function([var_8092,], output)
mod['func_8120'] = func_8120
mod = relay.transform.InferType()(mod)
mutated_mod['func_8120'] = func_8120
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8121 = relay.var("var_8121", dtype = "float32", shape = (3, 11, 7))#candidate|8121|(3, 11, 7)|var|float32
func_8120_call = mutated_mod.get_global_var('func_8120')
call_8122 = func_8120_call(var_8121)
output = call_8122
func_8123 = relay.Function([var_8121], output)
mutated_mod['func_8123'] = func_8123
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8235 = relay.const([[[5.791380,1.860258,-0.897789,-5.690217,-3.875931,-0.577908,6.487396],[7.005821,0.144292,-2.309484,4.157815,4.946683,2.672879,6.595086],[-6.091198,0.633895,-5.121528,4.030643,8.526736,0.218635,-5.333449],[6.274914,-5.900142,5.095965,-6.906575,8.651221,-9.515313,-1.383088],[-0.104742,5.210670,9.045661,-4.473442,6.973881,-1.070777,5.478499],[-6.824460,-6.469529,-4.787515,-5.324680,-0.411768,0.074814,-2.297618],[-3.336575,6.951797,-5.086390,4.046089,1.372342,2.332719,3.526139],[7.431133,9.958182,-3.345966,5.813584,-2.764060,-4.918353,9.946021],[-3.386333,-4.239733,-7.088751,8.785338,-3.750371,-0.545873,-1.778807],[-0.303119,-5.353594,-3.214358,6.666536,2.231980,7.563007,-1.434818],[-6.666651,7.619705,4.117340,6.250188,3.764329,-4.353763,-9.957704],[9.800733,-2.084256,-3.881569,-0.796171,-8.729191,-2.390718,-5.141493],[3.712317,1.470499,-2.820160,-7.324726,-5.374982,-0.957023,-8.152537],[2.573530,4.393864,3.005301,-7.494257,-2.808760,-4.435063,-9.091426],[-4.463132,6.229708,5.919062,1.028586,9.912405,6.106185,-4.444952],[-8.414518,-4.055493,7.439834,-3.706467,4.538352,-4.950579,4.063933]]], dtype = "float32")#candidate|8235|(1, 16, 7)|const|float32
uop_8236 = relay.sqrt(const_8235.astype('float32')) # shape=(1, 16, 7)
output = uop_8236
output2 = uop_8236
func_8244 = relay.Function([], output)
mod['func_8244'] = func_8244
mod = relay.transform.InferType()(mod)
mutated_mod['func_8244'] = func_8244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mutated_mod.get_global_var('func_8244')
call_8245 = func_8244_call()
output = call_8245
func_8246 = relay.Function([], output)
mutated_mod['func_8246'] = func_8246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mod.get_global_var('func_8244')
func_8246_call = mutated_mod.get_global_var('func_8246')
call_8254 = func_8244_call()
call_8255 = func_8244_call()
func_874_call = mod.get_global_var('func_874')
func_878_call = mutated_mod.get_global_var('func_878')
const_8266 = relay.const([0.163668,6.845840,-2.111738,-7.801191,6.694778,-8.511054,-7.766191,6.622117,-8.229936,-6.476379,-5.324580,5.673668,-0.349958,6.995235,1.916545,6.532325,4.960652,0.369433,5.879067,-7.206166,-8.556536,-7.399991,-6.166889,-7.495872,5.878461,6.578467,6.866714,5.080202,-3.917531,8.499290,5.760059,1.018683,6.454113,-8.459259,-2.142420,6.000106,-2.899502,6.101499,-9.995044,8.991374,-7.068418,3.366125,7.059192,7.114020,8.901826,-0.801741,-5.865525,8.352273,-7.384257,-3.645127,-2.214159,7.075517,6.927903,-9.699391,-1.967158,-7.321270,-9.879911,-2.164709,-3.246910,-4.513729,7.665804,-9.034943,-2.106448,4.085133,4.530325,5.551893,-0.722587,-4.420826,1.215421,5.722065,7.900118,-6.039341,5.507985,8.454620,5.140133,1.467867,-7.324229,-5.105225,5.638471,-3.974029,0.509357,5.812040,-9.015359,-0.964088,-4.083107,-7.446945,2.132658,0.692830,5.116744,-2.921379,-4.061136,0.036839,7.132865,4.436506,-4.579474,5.823403,5.462583,8.064882,6.085824,2.697706,1.292767,3.420270,0.971539,0.499983,7.645860,1.578518,7.489547,8.195842,-8.990882,6.836668,-7.872753,-4.605307,5.542210,2.006894,6.476050,-5.306728,-5.833322,5.617163,0.572513,9.142343,-4.837733,-2.333967,9.305089,-4.608467,8.443285,-3.664940,4.787286,2.152715,-7.552623,3.854722,-0.828223,-4.723163,8.528936,-9.185088,-4.619458,5.976716,-2.791266,-1.125286,3.984436,2.033786,9.635971,-3.378546,-7.472714,6.433097,2.560714,4.436863,3.823392,-4.754308,8.486811,9.784520,-9.278801,9.280424,-0.625284,9.814591,-1.084499,-1.425005,-2.157792,-0.990469,1.962666,-3.518804,-0.127076,-5.685702,7.643542,-9.244816,2.929806,3.323819,0.798605,-8.232252,-6.146684,2.310591,-8.710508,-9.007013,9.591192,3.226370,9.483287,1.481853,5.255958,3.686067,-9.735764,-0.546964,0.645582,-9.619597,-1.807164,-3.133299,-8.027227,1.834538,-1.022544,8.656425,2.528382,-5.190194,-3.131521,-6.601219,5.459931,4.603341,-4.380949,4.382683,8.982094,-2.004720,-3.718577,-6.967369,-8.754348,1.271782,-8.206884,-3.744958,6.804821,-4.313436,-0.169412,-1.727185,-8.859642,-3.463188,6.404588,-9.987258,0.581271,-9.673317,9.131365,-6.571345,-9.157678,-0.819716,-5.894839,-9.685562,7.323864,-2.629018,-2.123620,9.139041,-4.586114,1.857059,9.045230,-3.021852,-5.470245,-9.537335,3.854954,4.942234,-9.768102,-8.448005,8.134816,8.091294,6.197111,-2.263695,-2.781553,-2.635609,1.333690,-4.655978,1.803409,6.348811,4.538945,-5.796583,-6.766812,-3.418674,4.648184,-6.183029,-0.572161,-4.733238,5.471176,7.801766,-4.843779,-2.480268,3.118799,1.180950,7.150473,-9.525647,-7.511359,3.591026,-0.865280,-2.816314,1.817808,-9.455431,-2.590242,8.288664,-7.668080,2.078331,6.502413,-2.548769,-4.481273,2.791788,1.602513,-6.984265,-2.148871,-4.746997,7.016417,2.774534,6.465764,-5.218722,-8.930282,3.129333,-4.884825,8.638358,-8.815690,-2.784381,6.215391,-5.243653,3.437695,6.884267,0.518497,6.912081,-4.660182,5.978388,-6.127864,4.138861,9.837126,6.484811,4.361471,6.981322,1.511763,-8.815415,-6.528822,7.108408,2.162615,4.966618,-1.497651,3.585354,5.676975,4.097157,6.677130,-9.446605,4.122672,-3.056051,7.120006,3.912197,-3.710108,0.311862,-8.937497,-4.814315,5.685369,-3.612257,-8.236404,-7.533107,-5.027518,-4.962806,-4.555186,9.869281,-5.430747,-3.921698,6.039235,-8.714224,7.034817,-0.978735,-8.574391,8.770119,0.737288,-1.583043,-9.076141,2.340584,-2.077624,-8.865968,8.437970,-9.899782,1.743845,9.337317,-5.232086,-1.264516,0.623706,-4.935995,-8.483896,-3.904238,1.079485,1.631120,2.805412,7.022665,-9.495965,9.032298,9.218925,-1.757366,-8.140067,9.811476,4.680756,5.801376,4.339678,6.872232,5.951048,7.434075,-7.311449,-0.722305,6.841188,2.473714,7.828584,4.445777,-8.896941,-5.354180,0.661056,-5.871473,3.340349,-3.958478,5.819568,-0.603354,3.764704,2.115528,1.392480,2.303793,7.140481,-4.479273,8.932901,1.861032,8.294293,3.435925,-4.295855,-4.170351,5.485765,-0.549944,-1.386546,0.458557,-3.593945,6.089239,1.389130,-4.651133,8.996626,1.081449,1.693951,-5.660760,-4.199622,0.750948,0.494455,3.492180,-6.425367,3.521768,-8.645084,-1.435219,-8.686366,-0.625337,5.194550,-9.269100,-6.356720,4.595925,2.992317,-6.222219,6.884310,-6.144274,0.292623,6.425500,6.459067,-9.352689,-6.357728,-8.900210,-6.942734,-2.752639,3.341141,-9.315728,-8.242660,7.829913,-2.855975,-5.993354,-8.496572,-2.726714,-4.435216,5.736809,5.112567,2.364039,7.578295,-9.470715,9.868075,1.612529,0.146615,-0.163808,8.224493,8.790398,1.256614,-3.802688,-5.517998,-2.267349,-9.756775,-2.418273,5.071398,3.875230,2.280468,2.137190,-3.249086,-2.225240,-2.508277,-7.688572,-6.554112,0.790732,8.162812,1.002728,2.456772,-0.328257,-6.707239,7.434954,-4.273108,-5.206136,-7.909237,-8.692266,-7.468621,-6.879573,1.185840,-1.180451,9.876294,-1.267008,7.189830,-8.557073,7.238052,1.798405,-3.063157,9.157455,4.218575,-9.306860,8.466158,8.868251,8.153201,4.641155,-2.285489,7.660782,9.381373,-0.020810,1.638620,1.440581,3.242717,-7.662623,0.505925,-5.411324,7.933075,-5.300582,-8.189067,-9.833383,-6.716725,-9.006305,-1.977422,-4.158448,6.628063,-9.207831,8.693905,2.411661,-7.092910,-8.050025,-7.031780,9.653992,-9.273479,-5.596123,4.642411,-1.931838,-4.120999,-0.379331,-3.996461,8.000255,5.892699,5.582022,0.186494,1.629175,-9.460344,-0.164541,-9.501806,5.224201,6.088733,4.021450,-1.181260,-4.623962,2.700412,5.832977,6.121650,5.848946,9.087343,-0.877983,-9.535825,-4.562006,7.145152,2.310992,-3.327987,-6.226399,-3.866451,-9.785418,-5.116111,-6.487293,1.118045,4.548798,-1.947253,6.213550,3.531231,-1.150165,3.163816,5.354431,8.398835,8.597285,5.733348,-0.976432,6.746128,-8.305784,7.189385,3.830468,9.067677,-6.291173,-6.738118,9.999747,6.864369,4.178648,-5.325466,4.664909,4.795441,-1.621015,9.128604,-6.807048,1.223222,-8.976699,4.268951,-5.677662,-2.367955,-2.659497,-9.086121,3.486702,-6.860984,1.040248,6.683975,-1.302209,5.744160,5.909112,4.589570,3.861369,-9.457876,-8.971789,-2.302011,-9.513620,9.091372,1.671826,-6.520137,4.045555,5.785272,-1.141094,4.578080,1.830334,7.316543,6.521422,-6.197327,5.409766,-2.403767,9.469040,-1.328973,-2.500168,-9.437023,-7.485130,-9.205395,4.744641,-7.534194,-7.820225,1.380192,-6.943006,-8.069470,5.137874,-2.062474,1.724238,-1.696458,1.623949,7.217419,-4.119235,7.281277,-9.148015,-4.190709,3.753931,0.696182,8.622225,0.261196,3.108945,0.106545,1.014912,-6.446350,3.068846,7.997233,7.370082,-6.786861,-7.184201,-9.957142,1.889913,3.517211,1.881790,-4.142697,1.747002,-7.763997,6.810882,3.861929,-9.381912,6.677745,1.675059,-9.929926,6.520400,-6.411396,8.094295,0.161370,-8.275565,3.394838,4.331825,-6.323116,-6.042634,-4.417185,-1.943003,-0.821945,9.991967,-2.614760,-5.383371,7.918930,1.284902,6.263311,9.724001,9.127939,1.610475,5.355000,-3.617352,2.640532,4.978766,-4.652761,-7.222213,-8.546845,6.099841,-2.650277,9.234449,7.128863,8.794799,1.723569,3.581646,-1.018976,-3.228170,-2.558157,4.328452,6.861356,2.142487,7.081385,-3.784431,7.360461,-5.151199,4.012755,4.897249,1.471261,2.902921,4.574976,4.846435,-0.658531,-7.578182,1.154526,-3.824567,-3.335906,-9.549236,3.941364,4.712998,-0.762589,-2.753472,5.617261,8.824369,7.574236,-4.406091,4.405127,-4.860430,7.992267,-9.317973,0.023164,2.822963,-0.684093,3.420122,-2.692074,-3.477798,-2.181130,-8.004822,2.138785,-7.234731,-0.123816,8.585355,5.999476,7.413068,-6.177783,8.968612,9.636041,6.045007,-9.193459,5.169616,4.404383,-9.934175,8.009500,-6.758969,-1.890247,7.377174,1.572617,-1.745832,-0.996837,5.118013,-9.488150,-3.559424,4.723863,5.020237,-1.251361,-9.701590,4.397833,-4.662277,4.528006,5.316979,6.274620,-7.580301,3.177653,3.834404,2.479779,6.093852,5.577347,4.741410,1.218980,2.109940,8.419596,-3.220197,-3.275692,2.324795,6.948969,0.793719,7.751470,3.594767,-3.633205,8.978948,9.195270,4.374299,-0.120345,2.098771,-2.686953,-3.629048,-9.204295,-5.338358,7.106172,-7.043092,-8.672922,2.430313,6.451317,-1.592639,-5.291666,6.033350,-2.481109,-3.677393,7.848575,0.059625,-9.795067,-8.381138,-3.942987,7.434904,-4.410690,-9.607214,7.604341,3.100939,-3.775483,6.753038,0.972992,-4.774996,5.184164,-7.056535,-7.721412,-4.555166,5.494847,9.887244,0.925945,4.989976,-9.362547,-6.365142,-6.684591,-1.715186,-0.489716,9.413501,5.340870,9.866689,-6.598572,9.777718,1.869061,-2.334169,-6.974965,-2.340352,-8.440783,-0.476594,6.152663,3.209873,-2.479674,-2.282945,8.218073,-7.868162,1.928461,9.435320,6.124551,-7.132639,9.514856,-0.835188,-4.529646,6.293556,-8.470198,5.713445,1.703901,7.293792,8.166793,-8.290993,9.896510,9.125200,-9.691492,1.166884,7.952787,7.498063,-8.163319,9.806956,-0.411571,5.481095,-0.010320,7.946055,4.800614,2.031973,-0.805771,9.416656,-0.769893,2.810090,-3.803855,-3.474765,-4.051424,-9.129352,7.387159,-9.005059,-0.536707,6.292090,-2.903420,-9.768857,8.894742,-1.505769,6.663216,-6.689269,-1.871694,9.506342,-8.214043,5.272211], dtype = "float64")#candidate|8266|(910,)|const|float64
call_8265 = func_874_call(relay.reshape(const_8266.astype('float64'), [5, 14, 13]), relay.reshape(const_8266.astype('float64'), [5, 14, 13]), )
call_8267 = func_874_call(relay.reshape(const_8266.astype('float64'), [5, 14, 13]), relay.reshape(const_8266.astype('float64'), [5, 14, 13]), )
output = relay.Tuple([call_8254,call_8265,const_8266,])
output2 = relay.Tuple([call_8255,call_8267,const_8266,])
func_8280 = relay.Function([], output)
mod['func_8280'] = func_8280
mod = relay.transform.InferType()(mod)
mutated_mod['func_8280'] = func_8280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8280_call = mutated_mod.get_global_var('func_8280')
call_8281 = func_8280_call()
output = call_8281
func_8282 = relay.Function([], output)
mutated_mod['func_8282'] = func_8282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8280_call = mod.get_global_var('func_8280')
func_8282_call = mutated_mod.get_global_var('func_8282')
call_8306 = relay.TupleGetItem(func_8280_call(), 2)
call_8307 = relay.TupleGetItem(func_8282_call(), 2)
var_8315 = relay.var("var_8315", dtype = "float64", shape = (910,))#candidate|8315|(910,)|var|float64
bop_8316 = relay.less_equal(call_8306.astype('bool'), relay.reshape(var_8315.astype('bool'), relay.shape_of(call_8306))) # shape=(910,)
bop_8319 = relay.less_equal(call_8307.astype('bool'), relay.reshape(var_8315.astype('bool'), relay.shape_of(call_8307))) # shape=(910,)
func_5157_call = mod.get_global_var('func_5157')
func_5161_call = mutated_mod.get_global_var('func_5161')
const_8332 = relay.const([-1.684092,-0.618264,-4.361687,9.512919,0.007394,9.149565,5.182232,7.039582,-5.423192,-1.869961,-3.225142,8.133974,0.554603,-0.730817,8.421872,-0.079247,5.545869,-9.725241,-1.277965,4.119142,-7.536313,4.042512,2.779268,-6.466524,-5.715357,-5.497979,-2.900128,9.506835,-1.818400,-5.902379,0.947810,7.755840,-3.129129,-8.042812,6.340428,-4.344495,-6.082344,1.752097,-1.009371,-9.782239,8.247687,5.876741,-8.941279,4.773704,4.799717,-4.923633,-7.591094,7.736174,8.042220,3.337884,4.541032,-7.379033,1.389395,3.146897,-3.881351,-0.964203,-6.078833,3.242324,-1.625793,-3.562559,-1.585514,-3.092117,-6.317253,0.781202,-1.319170,7.796029,1.614981,8.754403,5.506363,-7.161411,-9.025643,9.601848,4.935357,1.825831,6.137139,9.117193,1.060681,-9.881196,2.837569,9.735515,7.383550,1.208882,2.650542,1.237668,-7.463128,-2.218936,9.174556,7.513496,-1.527586,-8.842529,-4.449810,2.034976,-7.589385,-9.615314,-3.394113,8.534730,-9.847596,-6.954737,4.563876,-1.956067,4.388808,7.663831,8.683536,4.153535,0.671516,9.637627,9.413579,9.919237,7.683287,9.326404,-7.768185,2.043722,-4.985587,-1.828032,9.775340,6.508952,1.443743,7.089230,4.437062,-5.085517,1.563613,2.199724,-2.813328,-7.625021,-7.540611,7.391085,-8.502191,5.064146,-4.694813,-6.867619,-6.955745,6.622693,-7.071623,-2.635203,1.146926,3.073352,9.219039,-8.825713,7.515108,3.336538,-3.116133,-0.058816,7.722051,2.586028,8.724898,0.183081,4.408204,5.243919,-5.277039,-3.529911,-5.418253,-0.321007,-0.520211,-2.868885,1.854950,3.815820,-0.931196,-2.501026,7.178923,-4.226562,3.472396,-3.547089,-6.654194,2.854420,-3.974755,-9.074585,3.847839,-9.667622,2.720702,4.062169,-0.339377,6.799715,6.752637,-9.627918,2.600438,3.123562,-4.295215,-4.058929,-1.096066,6.184656,3.381404,6.154119,-7.523053,-1.458828,-0.832816,-5.591151,-0.892952,-6.699021,2.047593,-0.719379,0.551008,-5.902440,8.961815,-7.036630,-9.236905,-3.018762,4.147962,-3.049983,9.829304,-8.623489,-9.103592,-6.284481,-7.594055,-5.209305,8.319556,-7.657189,6.489399,8.960875,6.563165,-8.389749,8.535565,9.213837,-7.153281,3.044969,-0.915429,-6.344152,-2.641178,9.935119,3.732402,9.119754,-7.315778,8.348801,-9.226521,0.253022,-8.715657,4.056845,-5.713479,-3.810058,-4.696977,3.387377,9.826566,5.590218,-8.615532,-9.729003,2.850357,2.967380,-2.492018,4.571038,5.736065,-8.616468,-0.655621,1.769370,1.364610,5.885984,0.831650,-0.757862,-5.369441,7.913330,1.077476,-8.355971,9.565092,-6.507439,-7.468991,-0.637529,-4.245736,9.013085,-9.926315,-2.931397,3.987825,8.765734,-8.789559,2.139489,5.156887,3.237777,8.204222,7.449914,3.462997,-7.569187,2.942168,1.772759,9.806045,-5.636936,-3.935981,8.097754,1.514358,-1.949590,8.299496,-1.660595,-0.539179,0.753839,-8.580515,-4.919815,-2.502680,1.057054,3.769383,-1.746360,-4.738957,-7.465812,0.422051,-7.465791,-7.658013,-7.540869,-8.613908,6.293096,-8.924832,-4.280144,9.428047,7.739465,7.389122,-2.741248,7.431556,-8.530466,5.411281,-7.729623,-8.511050,0.831913,-0.911827,-2.088066,8.534830,8.370990,-9.763627,-0.620939,0.806517,-1.749893,-5.350356,3.729120,5.080291,1.734793,0.740176,0.497249,-6.800409,-1.134323,-1.939395,-9.524272,-9.942457,8.805129,5.842228,5.810279,8.385445,-4.605502,-3.329124,-4.293331,0.757317,-8.642609,0.140845,-1.419342,6.362625,-3.432118,-3.361042,4.044035,0.738783,1.186133,-2.713267,3.733158,-5.200227,8.146205,8.991281,-8.184874,-4.011179,6.478302,-8.756459,0.196623,0.216696,3.207920,-4.199981,-0.319805,-8.632037,7.146094,-8.898600,-9.013992,-4.576348,9.676265,5.281113,-9.584104,2.440994,-8.448369,5.365900,4.885084,4.806661,-0.721823,0.881232,6.267192,7.158973,-4.800422,6.135807,-7.858615,-4.403207,-3.018276,-6.479242,9.984090,-9.282933,7.526802,-5.142691,-7.218980,-7.195646,1.752641,-8.300191,5.025874,2.003021,4.757178,-6.689873,-5.187848,-3.170311,8.295980,1.698545,-5.379892,-1.361904,-3.482520,-1.747848,-2.292312,6.974550,-9.867915,4.187326,6.609487,8.452979,5.492784,4.754737,-6.439185,-2.330282,-0.259642,9.947363,-4.198739,-1.455604,-8.128909,5.644653,3.377772,-6.120173,-7.616426,4.543276,9.559316,4.196603,4.730744,-0.059067,-8.428689,3.187834,4.534611,4.705446,-6.571618,-6.060114,-1.126293,5.755523,-4.009286,6.036171,1.888757,3.087263,5.038420,-0.795836,6.979556,-7.288034,6.541961,-0.879709,-9.299580,-0.838762,0.381345,6.363677,3.056081,-5.586185,9.223634,-7.162089,-8.995282,8.498722,-0.086520,-8.481602,-9.765149,1.740333,-9.546519,-5.038575,6.980082,0.550750,9.769914,-9.999286,-5.516738,8.783828,-4.477249,-9.711626,8.265711,-3.443680,4.024759,4.378629,-6.574540,-4.776876,-1.497644,2.298409,8.293447,-5.132545,-1.793823,6.384792,7.659744,-1.181705,6.662255], dtype = "float64")#candidate|8332|(480,)|const|float64
call_8331 = func_5157_call(relay.reshape(const_8332.astype('float64'), [8, 4, 15]), relay.reshape(const_8332.astype('float64'), [8, 4, 15]), )
call_8333 = func_5157_call(relay.reshape(const_8332.astype('float64'), [8, 4, 15]), relay.reshape(const_8332.astype('float64'), [8, 4, 15]), )
output = relay.Tuple([bop_8316,call_8331,const_8332,])
output2 = relay.Tuple([bop_8319,call_8333,const_8332,])
func_8336 = relay.Function([var_8315,], output)
mod['func_8336'] = func_8336
mod = relay.transform.InferType()(mod)
var_8337 = relay.var("var_8337", dtype = "float64", shape = (910,))#candidate|8337|(910,)|var|float64
output = func_8336(var_8337)
func_8338 = relay.Function([var_8337], output)
mutated_mod['func_8338'] = func_8338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8280_call = mod.get_global_var('func_8280')
func_8282_call = mutated_mod.get_global_var('func_8282')
call_8356 = relay.TupleGetItem(func_8280_call(), 0)
call_8357 = relay.TupleGetItem(func_8282_call(), 0)
output = relay.Tuple([call_8356,])
output2 = relay.Tuple([call_8357,])
func_8373 = relay.Function([], output)
mod['func_8373'] = func_8373
mod = relay.transform.InferType()(mod)
mutated_mod['func_8373'] = func_8373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mutated_mod.get_global_var('func_8373')
call_8374 = func_8373_call()
output = call_8374
func_8375 = relay.Function([], output)
mutated_mod['func_8375'] = func_8375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8383 = relay.var("var_8383", dtype = "int32", shape = (16, 13, 3))#candidate|8383|(16, 13, 3)|var|int32
var_8384 = relay.var("var_8384", dtype = "int32", shape = (16, 13, 3))#candidate|8384|(16, 13, 3)|var|int32
bop_8385 = relay.logical_xor(var_8383.astype('int32'), relay.reshape(var_8384.astype('int32'), relay.shape_of(var_8383))) # shape=(16, 13, 3)
uop_8400 = relay.erf(var_8383.astype('float32')) # shape=(16, 13, 3)
func_2461_call = mod.get_global_var('func_2461')
func_2466_call = mutated_mod.get_global_var('func_2466')
var_8436 = relay.var("var_8436", dtype = "float32", shape = (120,))#candidate|8436|(120,)|var|float32
var_8437 = relay.var("var_8437", dtype = "float32", shape = (756,))#candidate|8437|(756,)|var|float32
const_8438 = relay.const([-3,-1,-7,-4,3,-4,3,7,-7,-9,-5,-8,6,6,-7,9,1,10,-2,-7,-4,-4,-9,6,3,2,2,2,6,-7,8,5,-7,-1,9,-6,1,3,2,-7,3,-3,-9,-4,-5,-8,-10,-6,7,-7,-5,1,-2,7,-2,-1,4,-1,-10,-8,9,-10,10,-5,3,-5,-7,-4,1,-5,6,9,1,-4,8,-8,9,-5,5,-10,-3,7,-1,9,2,4,-1,9,4,2,5,-10,-7,-7,-6,1,10,-9,8,-3,-5,10,2,7,3,10,1,-4,5,-3,8,8,1,-1,9,-9,10,10,9,10,1,9,9,2,-7,-3,-10,-7,2,2,-1,-6,2,-5,-3,2,4,-6,9,7,5,-2,-2,-8,6,-4,10,-10,-5,-3,1,-4,9,9,10,-3,-5,1,-4,2,8,-9,-7,1,7,2,-7,4,-6,3,9,4,1,-1,-4,-6,-10,-1,7,9,-3,-1,-5,8,8,-9,5,2,9,-10,-6,-5,1,-3,5,-2,1,9,-10,9,-6,6,-4,-7,2,5,-4,-6,4,5,1,8,-3,-10,-5,1,-9,-5,5,-5,-1,-5,-1,-2,-10,6,4,-5,-2,10,-4,-9,7,-6,-5,-7,3,1,-5,-1,-10,6,1,-3,-6,10,-3,3,-2,2,3,-4,-5,10,-10,5,-8,-5,4,-1,10,-10,-10,-5,-5,-10,8,5,-10,3,6,1,-1,-4,-6,-5,8,-1,10,1,-5,-4,-6,8,3,-8,-1,6,7,7,7,-2,-7,5,1,3,-6,8,-5,8,8,-1,-6,1,7,9,-7,-10,5,2,-1,9,1,1,-4,7,6,-2,-3,8,-10,5,-9,2,10,8,-8,-3,4,8,-5,-1,3,5,-6,-7,1,4,6,-2,9,-10,-6,-9,-6,-10,1,2,-5,-1,2,-7,-9,1,-6,-2,4,3,4,4,-8,1,-6,-5,-9,-3,-4,4,-1,9,-9,-4,4,6,-9,9,5,-7,2,1,8,-4,4,8,-2,-3,-9,-7,4,2,-6,-9,1,-1,9,8,-7,10,10,-7,4,-7,-6,-7,-10,4,-1,6,-10,-7,-10,-6,7,6,-1,-2,-4,-7,3,-3,-4,10,1,-7,2,1,1,9,-3,-5,-10,1,-6,-4,-4,-4,5,2,-10,8,5,6,-7,3,-1,-4,7,-5,-6,4,6,-6,9,-7,-9,3,-4,-1,3,3,-4,3,4,6,6,8,7,-5,4,-7,8,-8,-6,-5,2,-3,7,-10,3,-9,-6,-3,2,1,-1,-2,8,-3,-10,-5,8,-1,-3,6,-8,7,3,-9,9,5,-10,-10,9,-7,2,3,10,-5,-6,-9,7,10,-7,6,-9,-5,-8,-9,6,7,-8,2,-6,-10,-9,9,-6,-3,-8,-8,-10,5,-6,4,-8,4,1,3,2,-2,-4,-4,-9,-5,7,-3,-6,4,3,-6,9,7,5,-7,-5,7,-9,-4,-9,7,-2,-3,-9,10,7,2,-7,7,-1,8,-5,-7,-5,7,10,10,-4,-10,-3,2,-10,7,-3,9,1,10,-2,2,-6,1,-3,-7,7,-10,10,10,6,7,-4,-3,-4,2,-8,5,-5,1,9,-7,-7,-7,-8,-9,8,4,-4,8,-8,6,-9,3,7,-4,-1,-3,7,-9,8,-9,-6,8,-8,10,1,5,6,3,-9,10,-9,2,6,3,9,-10,-3,-5,-9,10,-10,7,10,-1,-9,2,-5,-6,-6,-5,-10,-2,-7,7,-3,-3,1,-8,2,-1,2,10,8,8,-6,-10,10,-1,-10,-3,3,-5,6,5,-5,-10,2,4,-8,7,-7,-10,9,-4,-10,-2,-2,9,-2,-7,-3,-2,7,-6,-8,10,-9,4,2,9,-6,-6,9,8,10,-8,4,-7,-8,7,5,3,8,2,-5,3,-3,10,4,3,7,4,-1,-4,3,7,1,-2,7,-2,-4,-4,3,8,5,-1,3,4,8,5,3,1,-3,-4,4,5,-10,8,-4,-3,8,-1,-1,8,-5,3,6,2,7,-10], dtype = "int8")#candidate|8438|(768,)|const|int8
var_8439 = relay.var("var_8439", dtype = "float64", shape = (84, 2))#candidate|8439|(84, 2)|var|float64
call_8435 = relay.TupleGetItem(func_2461_call(relay.reshape(var_8436.astype('float32'), [6, 4, 5]), relay.reshape(var_8437.astype('float32'), [756,]), relay.reshape(const_8438.astype('int8'), [768,]), relay.reshape(var_8439.astype('float64'), [168,]), ), 8)
call_8440 = relay.TupleGetItem(func_2466_call(relay.reshape(var_8436.astype('float32'), [6, 4, 5]), relay.reshape(var_8437.astype('float32'), [756,]), relay.reshape(const_8438.astype('int8'), [768,]), relay.reshape(var_8439.astype('float64'), [168,]), ), 8)
func_5587_call = mod.get_global_var('func_5587')
func_5590_call = mutated_mod.get_global_var('func_5590')
var_8447 = relay.var("var_8447", dtype = "uint8", shape = (150, 1))#candidate|8447|(150, 1)|var|uint8
const_8448 = relay.const([[-6,-3],[2,-9],[-5,8],[-9,-9],[8,8],[-1,-7],[-4,-1],[-1,-3],[-5,-3],[6,-8],[5,6],[-7,-9],[-8,2],[-5,-6],[-6,-9],[-8,-5],[1,-10],[10,-9],[5,6],[-2,-6],[5,-10],[7,-1],[-2,1],[5,3],[-3,-4],[-2,-7],[10,-1],[-10,3],[-7,6],[-8,8],[-9,2],[-6,-1],[-7,-2],[-10,5],[4,-10],[-5,10],[5,-7],[-2,5],[-5,-7],[-1,1],[-3,-6],[-2,3],[-9,10],[6,-7],[3,8],[-8,-9],[1,5],[2,9],[-9,-10],[-7,8],[-8,1],[8,6],[1,-9],[6,-5],[1,8],[-8,-3],[-3,-1],[-8,8],[7,9],[-7,-7],[1,-9],[-3,4],[6,9],[1,2],[-7,-6],[-2,-10],[-2,-4],[-5,9],[-6,-3],[-5,-3],[2,-7],[-4,-9],[-4,5],[-7,-2],[-5,10],[-7,6],[-9,10],[-7,-7],[5,-2],[-4,1],[3,-1],[10,-9],[-2,-4],[8,-2],[-8,-1],[5,2],[1,-10],[-2,-3],[6,7],[-1,-10],[-7,-2],[2,-4],[-6,5],[-4,-3],[10,1],[6,-9],[10,-8],[-4,4],[3,-8],[9,7],[-6,7],[9,6],[7,1],[1,-6],[8,4],[2,-3],[3,10],[-3,7],[7,-1],[6,-6],[-5,6],[9,-9],[-6,8],[10,-1],[-3,4],[7,-7],[-5,-3],[-6,-4],[7,6],[-2,6],[-7,-3],[6,-1],[4,6],[7,8],[-4,3],[-1,2],[8,8],[5,5],[-8,1],[4,-4],[-7,2],[6,6],[-2,-1],[-9,-2],[2,-7],[2,3],[2,-4],[5,-5],[-8,6],[8,5],[2,-2],[10,-8],[-2,1],[4,-5],[-7,-3],[9,-5],[-6,5],[3,-1],[-6,6],[6,10],[6,5],[-7,-8],[-3,7],[8,1],[4,-7],[5,-2],[10,-7],[-1,-8],[8,8],[-4,-10],[-7,9],[10,9],[-5,3],[-4,-1],[4,-5],[-2,-3],[-4,6],[7,-7],[4,2],[-7,1],[9,3],[8,2],[-9,6],[-9,4],[10,-3],[7,-3],[-7,8],[-10,-5],[-1,-4],[2,3],[-4,5],[-10,7],[2,-8],[2,-3],[-10,3],[9,9],[-8,-1],[9,-2],[-2,6],[-9,-1],[5,-1],[3,-7],[2,-1],[10,1],[2,-8],[5,-6],[8,-9],[5,7],[9,8],[-1,-3],[5,-4],[-3,-2],[-8,-8],[2,-1],[5,7],[-10,-1],[-4,9],[6,-8],[7,7],[-10,6],[1,2],[7,-4],[-1,-6],[9,8],[-8,1],[-2,-6],[-3,-8],[4,-1],[-8,-10],[6,1],[9,8],[5,-3],[6,1],[-3,4],[2,10],[-6,2],[-6,10],[8,-9],[7,5],[3,6],[-2,-5],[4,4],[3,-1],[-7,-2],[-7,4],[4,-2],[-1,2],[7,-3],[-7,-7],[-10,-8],[-4,-2],[5,-5],[8,8],[3,10],[9,7],[-4,-8],[-9,-5],[-5,-3],[-3,2],[-1,-8],[8,-9],[-8,-6],[5,-6],[4,-1],[6,-3],[8,-1],[-3,8],[-2,2],[-4,3],[-2,-10],[2,9],[9,-10],[-7,-7],[-1,5],[-1,-7],[-9,7],[10,5],[10,-2],[-3,-10],[-10,-7],[-5,1],[3,9],[10,1],[5,-5],[7,-6],[9,-1],[8,3],[2,-4],[-6,-3],[4,3],[8,-5],[1,7],[-4,-4],[10,3],[7,-5],[-10,5],[5,-5],[10,4],[3,10],[-1,-9],[-1,-8],[-10,-8],[-9,-5],[-3,6],[-8,8],[8,-7],[-1,-2],[-3,9],[-8,4],[8,-7],[8,-9],[-2,-2],[4,10],[2,-3],[-4,9],[-10,3],[5,-7],[3,3],[6,4],[-7,-10],[-6,2],[-10,3],[4,3],[-10,1],[4,-10],[10,8],[-5,5],[9,-2],[-8,3],[3,-1],[-9,8],[-9,-5],[-7,-1],[10,4],[-2,-7],[6,5],[8,-1],[-5,-6],[7,4],[-5,10],[-5,2],[10,1],[4,-2],[9,-4],[7,-6],[8,-9],[-9,2],[3,7],[-2,-1],[4,-6],[-10,-1],[-8,-6],[2,9],[7,6],[10,-10],[-9,1],[8,6],[4,2],[-10,4],[10,5],[5,4],[2,6],[8,-7],[4,10],[9,-6],[10,8],[-5,-10],[-6,6],[8,1],[-10,4],[-4,-4],[-10,-2],[4,4],[10,-6],[6,-9],[-2,4],[-5,-10],[4,10],[6,8],[-2,-4],[2,2],[10,4],[-5,-10],[8,-7],[-9,-7],[-2,10],[-2,-5],[-3,-3],[-7,-5],[-7,6],[-4,1],[10,-6],[-6,1],[9,-7],[4,-7],[2,-9],[7,7],[7,-5],[2,4],[1,-3],[2,-4],[-9,-9],[-4,-7],[-6,-5],[-4,-4],[10,1],[-5,-5],[6,3],[4,-6],[10,-4],[-4,1],[1,3],[-10,6],[6,1],[-4,-8],[-2,8],[-2,-9],[-2,7],[5,-3],[5,10],[3,-3],[-5,2],[1,-2],[5,-9],[4,9],[10,-9],[-5,-1],[-10,-6],[-9,6],[5,3],[-2,-9],[5,-3],[-5,-5],[10,9],[-8,-8],[1,5],[-4,2],[-9,-5],[10,-9],[1,3],[6,-10],[4,4],[8,-4],[7,-7],[-8,-2],[5,-9],[5,-1],[-2,2],[-4,4],[2,2],[1,8],[-5,1],[-7,-2],[4,1],[-1,-6],[1,-1],[-4,5],[-3,7],[4,4],[-4,3]], dtype = "uint8")#candidate|8448|(450, 2)|const|uint8
call_8446 = relay.TupleGetItem(func_5587_call(relay.reshape(var_8447.astype('uint8'), [10, 15, 1]), relay.reshape(const_8448.astype('uint8'), [10, 15, 6]), ), 1)
call_8449 = relay.TupleGetItem(func_5590_call(relay.reshape(var_8447.astype('uint8'), [10, 15, 1]), relay.reshape(const_8448.astype('uint8'), [10, 15, 6]), ), 1)
func_1698_call = mod.get_global_var('func_1698')
func_1700_call = mutated_mod.get_global_var('func_1700')
var_8452 = relay.var("var_8452", dtype = "float32", shape = (1, 135))#candidate|8452|(1, 135)|var|float32
call_8451 = relay.TupleGetItem(func_1698_call(relay.reshape(var_8452.astype('float32'), [3, 5, 9])), 0)
call_8453 = relay.TupleGetItem(func_1700_call(relay.reshape(var_8452.astype('float32'), [3, 5, 9])), 0)
func_2883_call = mod.get_global_var('func_2883')
func_2886_call = mutated_mod.get_global_var('func_2886')
var_8465 = relay.var("var_8465", dtype = "float64", shape = (1680,))#candidate|8465|(1680,)|var|float64
call_8464 = relay.TupleGetItem(func_2883_call(relay.reshape(var_8465.astype('float64'), [8, 14, 15])), 2)
call_8466 = relay.TupleGetItem(func_2886_call(relay.reshape(var_8465.astype('float64'), [8, 14, 15])), 2)
func_874_call = mod.get_global_var('func_874')
func_878_call = mutated_mod.get_global_var('func_878')
const_8470 = relay.const([-9.794816,-3.467293,2.431297,-5.313017,-6.231376,0.095970,1.262002,6.354469,3.147992,-7.809330,-2.214639,-1.851281,9.207392,-5.273188,4.981286,-2.247021,8.922071,0.001469,7.530427,1.599254,4.003235,6.393580,7.880959,-5.438346,4.240577,2.242934,9.626811,4.854312,-0.797355,8.299220,-0.593099,8.450479,-4.968903,3.739492,2.235340,-8.050395,4.698000,2.687800,-6.813514,1.147438,5.701232,5.861115,-4.665464,9.548076,4.075365,-0.907812,6.324381,5.591587,0.640835,9.414073,8.056003,5.227968,0.993055,2.032751,1.219950,1.382451,8.127987,5.309149,8.408044,5.770175,-8.598003,9.639079,4.320838,3.636742,5.755408,7.640526,-8.422221,3.239430,-3.364326,-6.445110,4.634211,-2.266196,-0.506920,-2.491972,-9.801545,-2.419648,9.811581,-2.369918,0.827051,3.310506,-4.963633,8.313267,-8.899364,-5.566239,-4.454098,-5.448391,-8.603858,-8.653441,-9.296414,7.800308,-9.806678,6.359625,3.691967,1.208857,-9.474341,6.383296,5.356669,4.504262,9.019190,-2.243202,-9.292069,3.380081,0.204790,-2.865714,-1.310614,8.664076,7.025871,-4.740364,-7.871634,3.573415,8.751846,-4.664942,-7.751531,-8.996934,8.849211,5.719966,8.087893,5.789401,-5.065742,-1.559483,0.228432,-9.821120,7.209089,6.076904,-0.465385,-3.380778,8.826932,-8.982984,-5.994462,1.589645,-2.689636,-2.635555,4.069205,-2.881404,5.005066,-3.800513,-8.980091,3.583796,0.991929,-4.079532,-1.148776,3.636141,6.243013,9.905906,-7.968163,5.913927,4.962646,-8.049856,4.688527,-0.252821,-8.541285,9.000553,9.663042,-8.919151,4.198238,-0.708924,1.878356,2.156751,-2.535864,-5.871918,5.536599,2.969369,1.258726,3.119710,-4.249116,6.423850,-0.482817,-5.938253,-9.592583,3.738790,5.916652,6.736822,2.760455,9.146344,7.994496,6.183952,9.893830,6.113123,-5.928361,-7.286519,-7.438432,4.623056,-0.051837,6.785955,-3.797427,4.979543,-9.920172,-5.897414,5.775580,6.489015,-3.091562,-3.539330,2.851902,-0.646163,-3.992862,5.512584,3.446550,-1.235702,-8.993215,-0.707144,-6.021404,-8.177673,-8.407816,-3.439066,-9.363761,-9.615297,-9.250920,-9.942906,-0.269495,-1.194954,2.078213,1.161327,-7.941024,2.184832,0.791742,-1.499586,9.241550,4.193394,3.434028,2.995849,0.173709,-9.544730,-2.689714,-4.488419,-8.594422,-6.415841,-4.085297,-9.443129,3.503492,4.761969,8.238943,-1.926272,-6.176517,-6.445186,7.480126,3.660108,1.147124,4.349055,-0.758893,-9.365339,-4.321765,4.818867,-1.872661,0.653723,2.967917,0.886087,-0.921078,6.637486,3.797790,2.925865,1.544463,6.207485,-0.141459,6.316630,-9.372259,4.317531,-2.191820,6.514743,-9.691436,-4.232634,0.007977,-2.710540,0.185444,-1.623618,5.080613,6.208817,-9.620238,1.710878,2.056041,-1.997564,-2.760894,-2.450655,-3.178942,-7.599901,9.056241,-7.092732,-9.711393,-5.784868,-2.278569,-3.207218,-8.914999,-0.839891,-4.417359,-0.604928,-4.963388,-1.521222,-8.472065,4.330080,-9.246534,-0.143194,-0.405067,4.840409,2.970940,-3.576084,-0.656846,-3.538350,9.516197,-5.181242,-0.684743,5.768296,3.409422,-3.601177,5.728833,-4.429580,1.680668,7.805865,8.022695,-8.136445,-0.885456,-3.079374,3.441921,-1.674449,6.655752,-6.327348,4.507408,4.257915,4.321464,-1.832599,9.097740,0.075692,2.352205,1.269510,1.257538,-0.050538,-4.547984,-1.308973,0.616653,-2.393690,9.225161,-9.288079,3.064703,6.793905,1.761117,1.766147,-1.896611,8.143261,5.370027,-8.657939,-9.428246,-7.140164,5.425176,-4.884173,5.942474,-8.540427,-3.917376,1.837611,-1.510167,-3.374477,9.111541,-2.764714,-7.943273,4.291020,-9.783143,-1.667962,-6.137065,-2.950616,-2.725647,-0.584442,6.462181,-6.732270,-4.089847,6.620149,8.672702,-3.250143,5.667121,-6.095259,9.649520,6.044230,-2.917261,-4.793846,9.098562,-6.145788,-9.807408,3.001101,2.033229,9.908911,-5.109262,-2.271013,-6.112438,-7.789551,-1.894374,-4.706571,-3.143529,5.828464,5.850951,-0.831559,-6.918991,-7.508201,0.412827,9.758034,-7.564903,-5.233037,7.952309,-6.335258,-6.569406,-7.263113,9.367961,-1.272951,-4.876743,-3.481699,1.270308,-8.992947,-8.640354,-8.342795,5.363255,-6.558594,-3.574401,-6.586580,-3.539210,-4.364977,1.473635,1.609583,2.173380,-2.547317,3.366761,6.049675,6.925206,9.581249,0.984800,-2.392547,9.320678,-9.726151,1.544434,8.481207,5.579669,-2.001368,-8.085289,4.117699,5.591345,-8.671781,5.696781,-8.318882,9.651576,-3.418608,8.717441,2.907637,5.420822,3.537894,-5.705353,-2.895113,-0.031835,-6.118166,-0.693018,-0.983306,-2.470382,5.071256,-2.634864,-1.115950,1.267440,-8.440903,6.025493,7.378676,0.782481,-5.307543,3.061342,1.323937,5.276689,5.272180,-7.008851,-1.889007,-9.326138,-5.406100,5.436791,-8.226379,5.007675,0.076769,8.828838,3.292723,3.163949,-6.761070,4.788090,-5.371504,-5.812637,-1.455426,0.735307,4.335830,-1.965238,5.655521,-8.653707,-7.895055,-7.425117,6.310635,-8.269030,2.928326,-4.311782,8.469676,7.310810,-9.489559,0.969157,-2.411287,3.803756,-9.411723,1.928850,5.138345,6.857886,7.776840,-4.081001,0.546522,-9.171170,-5.487343,4.718748,-1.794499,-6.808888,-5.367864,7.903859,-8.985459,-8.731664,2.803735,-1.577903,5.466356,-3.041198,-2.515943,5.195033,-7.123907,-2.770311,-5.636069,-1.632681,-1.332495,-8.407494,-1.394303,-0.972690,-3.236698,7.172581,-5.055579,4.358895,1.914867,7.296090,-7.202851,-7.002419,-4.955101,7.355539,-2.053570,5.969459,-9.275179,0.968448,2.398637,-3.952935,-7.734140,9.552279,1.507907,-6.205488,4.005531,-3.711887,5.241284,-9.192399,4.408375,-8.127710,9.377461,6.117389,1.215106,-6.152820,-9.269261,8.311443,-9.230236,4.918538,3.931747,-6.019146,8.464850,-9.484553,8.055821,-4.788482,-3.474258,-3.668557,-6.576193,-5.580630,-4.973571,1.584222,9.145814,1.944532,4.879465,0.491688,5.060446,3.119096,9.022409,8.847827,-5.129118,5.101843,-4.282482,-5.078780,6.132174,0.987523,0.821891,-8.831910,8.952380,-1.291529,1.021523,9.737643,-7.384668,7.424632,-3.288033,-5.645009,1.531728,4.555829,-8.417956,-1.244153,-7.246261,6.977543,-5.201306,-4.399607,-8.282102,4.576322,4.449099,-8.178023,5.240141,0.002546,-6.760936,1.254437,7.375600,6.615533,-6.345184,-4.661875,4.376922,8.051230,9.889350,1.031925,-4.736504,4.473060,1.474443,6.867987,-7.508519,-5.264420,0.100720,-0.583103,2.568855,-0.703167,7.928432,-5.511726,-1.560077,7.539639,-0.460018,7.220704,1.127259,-6.057427,-9.741530,1.100363,-9.472935,4.496256,5.605798,-0.859586,-8.690689,8.272788,0.020728,-2.016031,6.459185,-6.483550,7.847048,-4.752699,-6.387508,2.361359,1.071279,7.272296,0.603820,0.127606,-3.981276,1.613252,-1.456009,7.244308,-7.741374,9.602821,7.549100,1.308723,-2.771994,3.601052,-6.351435,8.195874,2.047313,4.664828,-6.924676,-0.021343,9.411092,8.194041,-7.117408,4.544678,-2.687890,-1.877256,-5.694903,-8.477218,4.533698,-3.200510,8.536688,4.725353,-9.592131,1.682724,5.357997,-8.673798,3.005261,-6.754347,-9.889064,-1.674603,4.476597,-4.582077,0.667769,-6.419064,-9.274040,-2.712731,-7.922324,-0.898320,9.074384,8.380751,7.815544,5.083961,8.914458,-0.665069,0.783414,9.404221,2.721156,8.860790,-2.061746,-4.930052,-8.362795,-2.507431,-9.372143,5.850858,-8.161910,1.813048,-4.782470,-5.018875,-4.702652,5.908528,-6.350673,-3.256271,-8.288840,-4.526983,7.598260,9.305452,9.660195,2.252300,8.688900,3.127451,0.834311,0.913330,2.207875,-2.197179,9.561398,-6.726258,-9.864988,2.760191,-8.448924,2.851462,-2.000250,3.768606,3.982354,-3.915417,1.844107,-0.206937,-9.114634,3.670186,-1.245090,0.423917,2.977167,6.097617,7.291766,4.779430,-6.468592,7.243854,7.671077,-5.389963,0.834327,2.102741,1.411793,-2.566194,-1.838710,0.428777,7.877618,-4.465498,-0.720544,-3.933198,-6.722661,6.622489,-2.821302,-9.378136,1.158871,-4.613193,6.855349,-8.573736,-2.237660,-6.728349,-0.886788,6.803616,-8.617621,-8.054114,7.643462,-4.770604,-2.615323,-3.581764,7.350933,0.200929,3.801861,1.065660,0.720456,6.756325,-9.144180,-0.737388,-4.917184,-7.939678,9.382642,8.519990,9.194143,6.645096,-6.263357,5.830773,-5.051298,-3.658067,-2.235477,-9.750287,6.752410,6.615572,5.624102,-6.211966,0.298469,-6.577194,-5.861999,9.529981,-6.939077,5.838120,-1.162240,-7.276911,8.891575,9.170528,-6.395832,-2.637750,7.742909,-7.205373,6.995527,-4.358819,1.449259,-1.243587,3.951882,-7.253413,-9.810973,-7.750211,-8.855167,0.435551,9.356614,7.871099,-1.704519,-0.436719,-9.389904,-7.861465,1.966093,-9.721511,9.806312,-0.197741,5.482899,-9.639653,2.743464,-8.730076,7.256259,5.588162,-1.866660,2.649673,-2.492153,5.503881,-4.104060,7.071590,-6.982454,-0.097671,-6.694685,-6.294481,0.255913,1.038773,2.150457,-9.566201,7.988169,-4.040307,6.927885,-7.499570,9.891150,-1.951504,4.352091,0.545598,0.641440,2.281544,2.784880,3.685655,5.707935,2.085309,8.208090,4.706402,1.113593,-4.486321,7.586051,2.810543,-0.159340,-7.382737,6.045354,-4.145572,-6.978560,-6.759015,1.047206,-6.745487,-1.528268,-7.665651,-2.122121,-7.767141,5.590742,-4.341493,0.209928,9.264410,3.411033,3.029393,0.462769,5.451068,2.933804,2.678341,-8.803779,1.875361,7.580051,-7.999989,-8.029419], dtype = "float64")#candidate|8470|(910,)|const|float64
call_8469 = func_874_call(relay.reshape(const_8470.astype('float64'), [5, 14, 13]), relay.reshape(const_8470.astype('float64'), [5, 14, 13]), )
call_8471 = func_874_call(relay.reshape(const_8470.astype('float64'), [5, 14, 13]), relay.reshape(const_8470.astype('float64'), [5, 14, 13]), )
func_6479_call = mod.get_global_var('func_6479')
func_6486_call = mutated_mod.get_global_var('func_6486')
var_8477 = relay.var("var_8477", dtype = "int8", shape = ())#candidate|8477|()|var|int8
const_8478 = relay.const([-6,2,7,6,10,5,-8,-5,2,-9,9,7,1,8,-2,-3,-3,4,8,-8,-1,-2,2,1,9,6,-1,1,7,-1,6,9,-3,-1,-4,-1,4,3,3,9,-3,1,-8,-5,2,3,-4,-9,-7,9,-1,-6,4,-10,-1,-10,-4,10,3,-6,-5,-5,3,-5,-4,2,5,-10,-5,-7,-1,-3,-7,-8,10,5,3,4,4,8,6,-5,10,-1,8,-3,8,-8,3,-7,-10,-10,-2,10,-6,8,-10,4,-10,7,6,9,-8,-8,2,5,8,4,-10,10,5,-9,-10,-7,1,-8,-3,-8,5,3,-1,-9,4,3,-10,-1,8,1,4,-8,-1,-1,-5,-9,-8,8,-3,-10,-10,10,-3,-4,10,1,-5,-10,-5,-5,1,-3,-8,-10,-7,5,-3,-7,5,-9,9,8,9,4,-10,-6,-3,-2,9,-10,-10,4,-4,-2,-6,-4,1,1,-2,3,4,-5,-8,7,-8,-4,4,4,2,-6,4,-3,4,4,9,-9,9,-9,10,-4,3,-9,-7,6,8,6,-4,9,-5,3,2,-8,-6,6,4,-8,-8,-5,-9,-4,5,-9,1,4,-10,-3,-10,1,-9,-6,9,-10,-9,1,8,-5,5,9,-3,-5,3,-5,-10,-1,-5,4,8,-8,8,5,5,8,-5,10,-1,10,3,-7,2,-4,2,9,-1,-7,8,-7,-3,7,-2,-9,-3,7,4,1,-9,-3,2,-10,-2,-3,10,-7,3,-4,-2,7,2,3,7,2,-8,6,-10,4,5,4,5,10,-5,2,5,-3,5,-3,-8,6,-3,-8,1,4,-9,-3,2,-2,-6,-2,-6,-10,-1,-1,9,6,4,-4,8,-2,8,9,7,-5,-8,5,-4,-4,7,5,-7,-7,-7,-7,-9,-1,-4,-7,4,7,-2,5,-7,-2,-8,-2,8,-3,10,-9,9,-6,-10,8,-8,7,7,-6,5,-1,-5,-6,-4,-7,1,1,-5,4,3,-1,-7,9,-2,-8,-6,-8,4,5,4,-2,7,-4,-2,10,-2,-6,-1,5,-3,2,4,10,5,7,7,-2,-3,-9,-7,-2,-1,-2,-5,-8,9,-6,10,-2,1,-2,-9,5,3,8,-2,-2,1,5,-10,2,3,-4,-6,-7,8,-7,8,-10,5,-4,10,-10,-10,5,-10,-1,7,-7,2,9,-7,-6,8,5,-5,10,5,-4,-7,-6,8,-1,3,-7,3,-4,2,-5,-7,4,1,5,6,-4,-10,1,10,-2,-1,9,-5,-6,4,-7,-6,-2,7,-5,-9,-9,1,-9,-3,5,10,-9,6,3,-9,-10,-3,1,2,-4,-7,9,2,-1,9,-10,2,5,5,10,10,8,-4,3,5,4,2,-1,1,1,8,10], dtype = "int8")#candidate|8478|(520,)|const|int8
var_8479 = relay.var("var_8479", dtype = "float32", shape = (336,))#candidate|8479|(336,)|var|float32
call_8476 = relay.TupleGetItem(func_6479_call(relay.reshape(var_8477.astype('int8'), []), relay.reshape(const_8478.astype('int8'), [4, 13, 10]), relay.reshape(const_8470.astype('float64'), [910,]), relay.reshape(var_8479.astype('float32'), [336,]), relay.reshape(call_8464.astype('float64'), [182,]), ), 5)
call_8480 = relay.TupleGetItem(func_6486_call(relay.reshape(var_8477.astype('int8'), []), relay.reshape(const_8478.astype('int8'), [4, 13, 10]), relay.reshape(const_8470.astype('float64'), [910,]), relay.reshape(var_8479.astype('float32'), [336,]), relay.reshape(call_8464.astype('float64'), [182,]), ), 5)
output = relay.Tuple([bop_8385,uop_8400,call_8435,var_8436,var_8437,const_8438,var_8439,call_8446,var_8447,const_8448,call_8451,var_8452,call_8464,var_8465,call_8469,const_8470,call_8476,var_8477,const_8478,var_8479,])
output2 = relay.Tuple([bop_8385,uop_8400,call_8440,var_8436,var_8437,const_8438,var_8439,call_8449,var_8447,const_8448,call_8453,var_8452,call_8466,var_8465,call_8471,const_8470,call_8480,var_8477,const_8478,var_8479,])
func_8504 = relay.Function([var_8383,var_8384,var_8436,var_8437,var_8439,var_8447,var_8452,var_8465,var_8477,var_8479,], output)
mod['func_8504'] = func_8504
mod = relay.transform.InferType()(mod)
mutated_mod['func_8504'] = func_8504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8504_call = mutated_mod.get_global_var('func_8504')
var_8506 = relay.var("var_8506", dtype = "int32", shape = (16, 13, 3))#candidate|8506|(16, 13, 3)|var|int32
var_8507 = relay.var("var_8507", dtype = "int32", shape = (16, 13, 3))#candidate|8507|(16, 13, 3)|var|int32
var_8508 = relay.var("var_8508", dtype = "float32", shape = (120,))#candidate|8508|(120,)|var|float32
var_8509 = relay.var("var_8509", dtype = "float32", shape = (756,))#candidate|8509|(756,)|var|float32
var_8510 = relay.var("var_8510", dtype = "float64", shape = (84, 2))#candidate|8510|(84, 2)|var|float64
var_8511 = relay.var("var_8511", dtype = "uint8", shape = (150, 1))#candidate|8511|(150, 1)|var|uint8
var_8512 = relay.var("var_8512", dtype = "float32", shape = (1, 135))#candidate|8512|(1, 135)|var|float32
var_8513 = relay.var("var_8513", dtype = "float64", shape = (1680,))#candidate|8513|(1680,)|var|float64
var_8514 = relay.var("var_8514", dtype = "int8", shape = ())#candidate|8514|()|var|int8
var_8515 = relay.var("var_8515", dtype = "float32", shape = (336,))#candidate|8515|(336,)|var|float32
call_8505 = func_8504_call(var_8506,var_8507,var_8508,var_8509,var_8510,var_8511,var_8512,var_8513,var_8514,var_8515,)
output = call_8505
func_8516 = relay.Function([var_8506,var_8507,var_8508,var_8509,var_8510,var_8511,var_8512,var_8513,var_8514,var_8515,], output)
mutated_mod['func_8516'] = func_8516
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8544 = relay.const(-4, dtype = "int8")#candidate|8544|()|const|int8
var_8545 = relay.var("var_8545", dtype = "int8", shape = (1, 16, 1))#candidate|8545|(1, 16, 1)|var|int8
bop_8546 = relay.less(const_8544.astype('bool'), var_8545.astype('bool')) # shape=(1, 16, 1)
func_6724_call = mod.get_global_var('func_6724')
func_6729_call = mutated_mod.get_global_var('func_6729')
const_8559 = relay.const([2,10,-3,2,1,-5,2,-8,-8,2,-7,7,7,-9,1,-3,-7,-6,4,-2,7,-10,1,-2,1,4,8,9,1,8,-9,-2,-3,-7,-8,4,8,-6,1,9,1,10,-5,7,-9,8,3,4,-10,-5,-4,4,2,-1,8,-5,-5,10,-7,8,9,2,7,10,-9,-6,3,-4,-9,-7,7,8,10,4,3,1,-9,6,1,3,-10,-2,8,7,1,6,8,3,-10,-5,-10,-6,9,5,9,-7,-7,-3,5,4,-6,5,4,3,-5,-8,-3,4,-8,10,-8,-8,8,-10,1,-10,-4,-10,4,-4,-10,-6,9,-6,10,6,-5,-3,-6,-9,-8,-2,5,-1,-5,-10,7,1,7,-5,-3,4,-5,-2], dtype = "int64")#candidate|8559|(144,)|const|int64
var_8560 = relay.var("var_8560", dtype = "uint32", shape = (98, 2))#candidate|8560|(98, 2)|var|uint32
const_8561 = relay.const([2,-1,-5,-9,-5,-2,-4,-2,-7,-10,-5,-10,-6,10,-10,1,7,8,2,8,6,4,10,-9,-2,-7,-5,-4,10,4,-4,-4,9,-2,3,-8,9,-1,7,5,-10,-4,1,-6,3,1,-5,6,-10,4,-8,2,-4,10,4,1,-10,-1,-5,2,-6,-5,1,-6,-2,4,-5,-1,9,10,-7,-9,6,-9,-6,-10,5,7,9,-7,-4,-10,7,-7,3,2,-8,6,-1,-6,-6,-1,-4,-7,2,1,-2,6,-4,-6,10,-6,10,-4,-7,-8,-9,-5,9,-5,3,8,6,-5,-9,-7,10,9,7,1,-6,-8,9,-7,3,-1,7,-4,-3,5,-1,-1,6,-2,-3,-7,-1,-5,8,1,3,2,3,-5,6,-8,-2,1,-1,3,4,-5,6,-7,2,-8,2,-7,7,-1,3,1,10,-5,2,9,9,1,3,-2,6,2,-1,10,4,-8,-3,-2,10,8,-9,-8,-10,-6,6,10,9,9,4,7,-3,4,-5,-10,8,-6,4,5,-10,-9,-10,-10,2,8,-1,5,-9,1,-5,-8,-9,-10,-6,-7,8,5,-4,7,-6,-3,10,-2,-4,5,-4,-4,7,5,9,-2,-7,-4,-3,6,-8,6,-6,-10,-9,-2,8,-7,-2,-8,6,9,-6,6,-6,9,-3,3,-3,-2,8,7,-1,-10,-9,-3,8,-10,-5,-6,-1,6,-9,-3,-5,-7,8,8,-8,-10,9,-2,7,1,-10,-4,9,-3,2,3,1,-10,-3,8,-9,8,4,-4,4,3,-10,3,9,-10,-3,8,-4,-5,-9,8,-3,-5,-8,8,-4,-6,-9,4,8,-9,-10,7,7,8,-4,3,3,-4,9,-3,-4,7,-9,-1,6,7,9,9,5,2,-6,-7,-5,9,5,-6,2,-2,4,-9,-7,8,2,4,7,-9,2,-3,8,-10,-6,4,10,1,3,-6,-8,-4,4,-10,-3,5,6,2,-9,-9,-1,-3,10,2,-5,2,3,-4,8,-7,2,8,-9,3,5,5,4,-4,3,10,6,-1,-1,-5,8,10,5,9,-8,-4,-2,-8,10,-5,-8,2,8,-5,8,-10,2,-8,7,3,-8,10,-7,-10,-10,9,-1,-6,-4,-10,10,1,-9,1,4,5,8,-6,6,1,1,6,2,-1,-2,1,2,-4,-8,-8,6,8,1,-10,-10,-2,2,4,-1,-2,-7,-3,-2,-9,1,-7,-1,2,1,-8,2,3,-10,-9,2,-4,-2,-8,-3,7,4,-10,10,-6,3,-1,2,10,-1,-4,8,-3,-4,-5,8,2,7,-7,-5,10,-5,-2,7,10,9,-2,-2,7,6,5,-7,7,1,3,-5,4,5,8,8,-9,-1,-5,-8,9,8,9,2,-9,10,-1,-4,4,10,1,-9,8,1,-3,10,4,-7,-1,-1,-4,-2,-5,-9,-6,-10,-1,-7,-8,-4,9,4,-2,-8,-2,3,7,10,-2,10,9,4,8,-9,-10,-7,7,-2,-6,1,-9,-5,-10,8,-5,-1,-8,-4,-6,3,6,-5,-3,1,7,-7,-6,3,-7,-9,1,7,-5,-6,-6,7,8,6,-8,3,10,-4,-4,4,1,-6,-5,2,5,-1,6,4,9,-7,6,-4,2,5,-6,1,-4,10,1,-1,9,-9,1,8,3,7,-7,-8,-9,-9,1,4,7,9,7,6,4,-10,-1,5,6,-5,-2,-6,-5,-10,2,-6,-10,-9,-4,3,-4,-5,5,-1,1,-6,1,6,6,4,9,-9,4,-8,-6,-8,-5,-5,2,-3,-6,-6,10,2,-7,6,-6,-7,-4,9,-7,10,10,4,5,-7,-6,-7,6,-4,6,10,-6,2,-3,2,8,4,9], dtype = "uint8")#candidate|8561|(702,)|const|uint8
call_8558 = relay.TupleGetItem(func_6724_call(relay.reshape(const_8559.astype('int64'), [3, 8, 6]), relay.reshape(const_8559.astype('int64'), [3, 8, 6]), relay.reshape(var_8560.astype('uint32'), [98, 2]), relay.reshape(const_8561.astype('uint8'), [702,]), ), 4)
call_8562 = relay.TupleGetItem(func_6729_call(relay.reshape(const_8559.astype('int64'), [3, 8, 6]), relay.reshape(const_8559.astype('int64'), [3, 8, 6]), relay.reshape(var_8560.astype('uint32'), [98, 2]), relay.reshape(const_8561.astype('uint8'), [702,]), ), 4)
func_8120_call = mod.get_global_var('func_8120')
func_8123_call = mutated_mod.get_global_var('func_8123')
var_8570 = relay.var("var_8570", dtype = "float32", shape = (231,))#candidate|8570|(231,)|var|float32
call_8569 = relay.TupleGetItem(func_8120_call(relay.reshape(var_8570.astype('float32'), [3, 11, 7])), 0)
call_8571 = relay.TupleGetItem(func_8123_call(relay.reshape(var_8570.astype('float32'), [3, 11, 7])), 0)
output = relay.Tuple([bop_8546,call_8558,const_8559,var_8560,const_8561,call_8569,var_8570,])
output2 = relay.Tuple([bop_8546,call_8562,const_8559,var_8560,const_8561,call_8571,var_8570,])
func_8576 = relay.Function([var_8545,var_8560,var_8570,], output)
mod['func_8576'] = func_8576
mod = relay.transform.InferType()(mod)
var_8577 = relay.var("var_8577", dtype = "int8", shape = (1, 16, 1))#candidate|8577|(1, 16, 1)|var|int8
var_8578 = relay.var("var_8578", dtype = "uint32", shape = (98, 2))#candidate|8578|(98, 2)|var|uint32
var_8579 = relay.var("var_8579", dtype = "float32", shape = (231,))#candidate|8579|(231,)|var|float32
output = func_8576(var_8577,var_8578,var_8579,)
func_8580 = relay.Function([var_8577,var_8578,var_8579,], output)
mutated_mod['func_8580'] = func_8580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mod.get_global_var('func_8244')
func_8246_call = mutated_mod.get_global_var('func_8246')
call_8710 = func_8244_call()
call_8711 = func_8244_call()
func_5587_call = mod.get_global_var('func_5587')
func_5590_call = mutated_mod.get_global_var('func_5590')
const_8723 = relay.const([-4,-3,-1,-1,-6,-10,-2,7,5,4,-1,-1,7,8,9,-10,-4,-3,3,-2,9,-7,4,-10,5,-6,-8,-3,10,-8,5,-1,10,-4,6,-9,7,-7,2,-9,-1,5,-2,6,-2,-3,2,-5,-8,5,-4,-10,-2,3,4,3,9,-7,-8,4,-9,6,1,-6,-2,-4,5,9,-2,-3,6,-4,-6,5,5,-6,6,-6,5,3,-2,4,-2,-5,9,3,-6,10,9,7,-7,-8,7,8,-7,9,-10,7,8,-6,-3,-2,-5,2,10,-8,6,-9,-4,-5,10,10,-7,-1,2,3,6,4,-10,5,-10,8,-3,-9,6,7,7,3,8,-10,1,6,1,-9,10,2,1,6,-8,10,-8,-9,6,-1,-8,-7,-6,-6,-4,-9], dtype = "uint8")#candidate|8723|(150,)|const|uint8
const_8724 = relay.const([6,2,-5,-8,8,1,3,1,-4,-4,-8,5,-9,-1,5,1,5,3,6,6,-7,1,-6,3,1,-2,-8,-5,6,-5,-9,2,10,3,-7,1,-5,6,-7,5,4,7,4,1,7,3,-2,9,2,-1,-2,-5,-7,10,9,9,3,-7,7,9,6,1,8,-4,-3,-1,7,2,8,5,-7,1,2,9,10,5,-9,-5,-6,9,-4,-4,8,-7,10,-2,-8,-9,4,2,-5,9,-3,2,5,-1,-4,4,-5,-6,2,-3,2,-3,-1,10,1,-1,6,-8,-7,-2,5,10,-6,4,4,-8,-3,-5,-7,-10,8,5,-7,7,-3,4,4,10,10,-7,3,-5,8,1,-6,-4,-4,-8,-3,4,3,-5,-2,6,9,8,-1,-8,-4,-4,2,7,-8,-5,-10,-6,7,-2,6,-10,-3,7,-1,3,-6,6,-5,-1,7,-4,5,4,3,10,5,-4,-8,4,-6,3,-4,-9,3,3,-8,-9,-9,6,8,-1,5,5,6,1,6,5,6,-10,6,6,-8,-8,7,-1,9,10,-7,5,4,-5,-3,-10,-4,5,4,1,-6,1,2,-8,3,-5,3,-2,-8,-9,7,10,-10,1,-6,-7,3,6,9,-8,-4,-3,-5,-5,-3,-5,-4,4,-8,9,7,-6,4,-6,8,7,7,10,-6,4,-9,-4,4,6,-2,7,3,-8,7,-1,-7,6,10,-5,-1,10,10,1,-1,-7,6,-10,1,-5,3,-5,4,-4,7,3,-10,8,-6,-3,9,-7,8,-1,7,-7,-4,3,-4,-4,-8,-1,-9,-8,9,9,-3,-3,6,-8,-2,7,9,-3,7,-6,-6,3,7,8,3,5,8,5,-4,8,1,-1,5,3,-3,9,5,5,-3,7,-2,2,-10,5,3,9,9,2,6,-8,-4,8,-8,9,-8,9,-1,-2,-9,7,10,-4,8,7,-3,2,-1,-5,5,-2,4,-5,-2,8,-5,1,-2,8,-3,3,7,3,8,-9,-6,8,-10,-5,-1,4,-9,-1,2,-5,4,2,5,-9,7,-8,9,-3,10,-3,-2,-8,2,3,9,-10,6,-4,9,-6,3,9,3,-3,9,-5,-5,-1,-2,-2,4,6,3,-5,-5,-9,6,-4,-10,-1,5,10,-10,-8,9,5,-1,5,3,8,-10,10,-5,-4,-1,3,-4,-5,-6,-7,4,-8,5,1,-5,7,6,-3,2,-3,4,-9,9,-3,9,-7,3,8,-1,7,-9,-1,-4,3,2,6,-2,-4,-9,7,6,10,1,7,-8,6,-9,-2,9,-6,1,-7,-7,7,8,5,-8,-1,-3,-9,-1,10,-1,-2,8,-3,1,4,-1,-5,5,-10,3,1,10,-10,-4,2,5,-8,-1,3,-1,10,-10,-10,5,7,1,-7,-6,5,-9,9,-2,-8,10,-5,-8,2,1,2,-9,-5,5,-5,-1,4,9,4,10,4,-1,8,5,-7,1,-4,6,-5,3,3,2,4,1,-3,-9,-1,-6,-2,-1,9,8,-4,-7,7,-1,-4,2,-4,-5,3,4,6,7,2,7,-1,7,1,-4,-3,-3,-8,6,-7,9,-5,-6,-4,7,10,-7,8,6,-9,-8,-5,-1,5,7,6,-1,-10,4,-9,-7,-6,10,2,3,-6,4,-3,8,-10,-7,-10,9,-5,-1,-3,-3,-7,-3,9,-10,1,10,-9,-2,-1,7,-7,-9,-9,-9,1,3,5,4,-6,-2,-8,-10,1,6,-3,5,-9,-4,-7,5,5,5,-8,5,-5,10,1,10,4,-6,-9,8,-5,10,-5,9,5,-1,5,6,5,3,9,-8,9,9,2,10,10,-1,-5,7,6,-2,6,-3,5,6,9,-7,5,8,5,-9,8,-2,-10,-10,8,9,9,4,-6,-7,2,5,2,-9,3,-2,5,3,-6,4,-6,-8,3,-10,2,-5,-1,-4,-6,-10,10,-2,-7,-4,10,6,1,1,-8,2,-8,4,9,-2,10,6,3,9,-2,4,-9,8,-6,3,-9,4,3,-7,-4,7,-1,6,-10,-6,7,2,10,-5,8,2,6,5,2,2,-2,-1,-4,7,-1,-6,-10,-6,8,-9,-1,6,-5,-7,-4,2,-1,-9,2,-9,-6,1,3,8,-1,10,10,-9,6,1,-6,5,7,-2,-9,-2,-6,-3,-2,-2,10,5,7,-4,-2,2,1,5,3,-9,-8,7,7,5,-1,-4,-9,2,5,-9,-2,-2,10,2,-5,-4,-1,-7,1,10,8,-6,3,1,3,-2,2,-9,-3,6,2,-9,10,-3,-7,-6,5,2,-7,5,-4,6,-2,6,6,1,1,10,7,6,-4,-9,-2,8,-3,-3,9,2,-6,7,2,7,10,-7,-3,-1,5], dtype = "uint8")#candidate|8724|(900,)|const|uint8
call_8722 = relay.TupleGetItem(func_5587_call(relay.reshape(const_8723.astype('uint8'), [10, 15, 1]), relay.reshape(const_8724.astype('uint8'), [10, 15, 6]), ), 0)
call_8725 = relay.TupleGetItem(func_5590_call(relay.reshape(const_8723.astype('uint8'), [10, 15, 1]), relay.reshape(const_8724.astype('uint8'), [10, 15, 6]), ), 0)
output = relay.Tuple([call_8710,call_8722,const_8723,const_8724,])
output2 = relay.Tuple([call_8711,call_8725,const_8723,const_8724,])
func_8730 = relay.Function([], output)
mod['func_8730'] = func_8730
mod = relay.transform.InferType()(mod)
mutated_mod['func_8730'] = func_8730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mutated_mod.get_global_var('func_8730')
call_8731 = func_8730_call()
output = call_8731
func_8732 = relay.Function([], output)
mutated_mod['func_8732'] = func_8732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8755 = relay.var("var_8755", dtype = "float64", shape = (10, 3, 1))#candidate|8755|(10, 3, 1)|var|float64
uop_8756 = relay.acos(var_8755.astype('float64')) # shape=(10, 3, 1)
bop_8760 = relay.power(uop_8756.astype('float64'), relay.reshape(var_8755.astype('float64'), relay.shape_of(uop_8756))) # shape=(10, 3, 1)
func_7340_call = mod.get_global_var('func_7340')
func_7346_call = mutated_mod.get_global_var('func_7346')
var_8766 = relay.var("var_8766", dtype = "float64", shape = (15, 4))#candidate|8766|(15, 4)|var|float64
var_8767 = relay.var("var_8767", dtype = "int64", shape = (144,))#candidate|8767|(144,)|var|int64
var_8768 = relay.var("var_8768", dtype = "uint32", shape = (196,))#candidate|8768|(196,)|var|uint32
var_8769 = relay.var("var_8769", dtype = "uint8", shape = (6, 117))#candidate|8769|(6, 117)|var|uint8
call_8765 = relay.TupleGetItem(func_7340_call(relay.reshape(var_8766.astype('float64'), [3, 4, 5]), relay.reshape(var_8766.astype('float64'), [3, 4, 5]), relay.reshape(var_8767.astype('int64'), [144,]), relay.reshape(var_8768.astype('uint32'), [196,]), relay.reshape(var_8769.astype('uint8'), [6, 117]), ), 4)
call_8770 = relay.TupleGetItem(func_7346_call(relay.reshape(var_8766.astype('float64'), [3, 4, 5]), relay.reshape(var_8766.astype('float64'), [3, 4, 5]), relay.reshape(var_8767.astype('int64'), [144,]), relay.reshape(var_8768.astype('uint32'), [196,]), relay.reshape(var_8769.astype('uint8'), [6, 117]), ), 4)
output = relay.Tuple([bop_8760,call_8765,var_8766,var_8767,var_8768,var_8769,])
output2 = relay.Tuple([bop_8760,call_8770,var_8766,var_8767,var_8768,var_8769,])
func_8774 = relay.Function([var_8755,var_8766,var_8767,var_8768,var_8769,], output)
mod['func_8774'] = func_8774
mod = relay.transform.InferType()(mod)
mutated_mod['func_8774'] = func_8774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8774_call = mutated_mod.get_global_var('func_8774')
var_8776 = relay.var("var_8776", dtype = "float64", shape = (10, 3, 1))#candidate|8776|(10, 3, 1)|var|float64
var_8777 = relay.var("var_8777", dtype = "float64", shape = (15, 4))#candidate|8777|(15, 4)|var|float64
var_8778 = relay.var("var_8778", dtype = "int64", shape = (144,))#candidate|8778|(144,)|var|int64
var_8779 = relay.var("var_8779", dtype = "uint32", shape = (196,))#candidate|8779|(196,)|var|uint32
var_8780 = relay.var("var_8780", dtype = "uint8", shape = (6, 117))#candidate|8780|(6, 117)|var|uint8
call_8775 = func_8774_call(var_8776,var_8777,var_8778,var_8779,var_8780,)
output = call_8775
func_8781 = relay.Function([var_8776,var_8777,var_8778,var_8779,var_8780,], output)
mutated_mod['func_8781'] = func_8781
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8862 = relay.const([[[-9.081324,1.971504,7.195933,2.873790,-5.591792,-0.203964,-2.128041]],[[-4.850199,5.280492,1.155928,-1.274332,1.094306,1.098223,4.059376]],[[9.979350,-5.254795,3.862867,4.538682,2.022062,-3.187628,2.993943]],[[-5.006593,-9.523261,1.312171,-0.986559,1.239911,-0.538641,-1.556981]],[[-0.420705,-7.494479,-2.849474,4.011926,-0.414398,-9.265401,7.432997]],[[4.650062,-8.342640,6.827084,4.685242,-9.624582,9.038160,-6.987051]],[[3.922877,-6.823548,-5.283651,1.778809,4.391945,-7.025069,3.393800]]], dtype = "float32")#candidate|8862|(7, 1, 7)|const|float32
uop_8863 = relay.log10(const_8862.astype('float32')) # shape=(7, 1, 7)
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
var_8872 = relay.var("var_8872", dtype = "uint32", shape = (1200,))#candidate|8872|(1200,)|var|uint32
const_8873 = relay.const([-2,-7,-9,-2,-9,6,6,-3,8,-8,7,4,-7,-10,-4,1,10,-5,-4,3,-9,-5,5,-5,-1,1,-8,-9,1,-10,-10,3,10,-9,4,-10,-1,8,-4,-10,-6,10,5,1,-1,-10,-3,-3,10,9,-3,1,-3,-1,-1,-1,1,3,5,3,6,-8,-8,-1,-4,6,-9,-3,-5,-1,-7,-5,8,-6,5,-8,7,-9,-9,-7,1,10,10,4,10,-4,-10,5,1,10,5,7,5,8,6,-7,-1,-7,-2,6,8,1,1,5,-9,5,6,7,10,5,3,5,9,-4,-4,-5,2,-10,1,-2,4,-6,3,-10,-1,1,7,7,-9,-8,-3,7,8,8,-5,-2,10,-9,-3,4,-6,-9,2,-10,9,5,-1,-7,2,-10,6,5,-2,-6,5,-1,6,3,-6,-8,1,6,8,4,-1,-6,-8,10,7,-5,8,3,-5,-4,9,7,7,-3,9,2,2,6,9,10,-3,-10,2,-7,-10,-10,-4,9,4,-4,-9,-2,4,-1,-5,-3,-5,-9,4,5,-8,-3,4,2,5,-1,-2,-5,3,3,6,-4,9,-7,-1,9,7,-10,3,9,7,4,4,-10,-7,5,-9,6,4,10,-6,-5,-8,-6,-6,-3,-6,4,6,7,5,9,-10,-1,-8,2,-8,1,-9,-1,3,-7,10,-6,-5,2,-2,-5,5,1,-7,-7,7,2,-4,-2,-6,-3,2,3,-2,-1,-5,1,4,-1,-4,-5,8,-8,10,-9,-10,-3,4,2,-10,-4,-1,2,6,6,4,10,9,-6,9,7,2,4,5,-3,10,9,2,-7,-5,-10,-4,-4,-10,4,-6,9,-9,3,2,9,5,5,9,10,5,-6,-10,-4,9,-10,-6,-4,-5,-1,4,8,7,-9,-5,2,-8,-9,-7,9,-10,2,9,3,4,8,3,9,9,-8,-8,-4,-9,5,7,-3,-2,-3,2,6,9,5,-1,-3,6,-5,-2,-1,4,-8,-1,-8,-7,-5,-6,-4,-6,-6,-5,7,10,6,-1,-4,4,-7,-4,-9,7,-9,-6,9,-4,-6,6,10,5,10,4,4,10,2,-8,3,6,2,5,-3,8,7,5,2,3,8,7,-5,3,1,8,-9,-7,6,2,-10,9,4,5,3,-9,-5,-3,5,8,7,1,-2,-7,-10,-8,-9,8,-2,-1,-8,8,-7,4,8,8,-7,3,7,8,9,8,4,1,-6,2,3,9,-2,-1,-2,6,-2,-7,-9,6,2,5,-9,-1,-9,1,5,-9,3,-7,-3,-4,-2,-3,7,-10,-5,-4,-1,9,10,-9,2,-1,-2,-9,1,-9,4,7,-3,-10,-2,-3,1,-1,4,7,-8,10,-7,4,-10,-5,6,8,9,-8,-2,1,4,4,2,3,-10,-1,-2,6,-1,-8,1,6,4,10,-6,-7,3,-8,1,-8,-6,7,-7,2,2,-2,-8,4,4,-5,-2,-9,-2,-3,-10,-3,1,6,2,5,10,8,8,9,3,2,-6,4,8,2,-10,4,-6,-1,-10,2,-4,9,2,5,2,5,-8,8,6,-6,5,-8,-10,-9,5,-2,2,2,9,-1,7,-9,-5,-3,-6,-7,-6,-4,-4,-1,-4,10,4,10,-1,4,-7,3,1,2,2,10,4,8,-9,-9,-2,9,-2,9,1,1,10,7,9,-1,-9,-3,-7,3,10,8,-2,7,-5,-7,-2,2,2,5,1,4,-9,4,-8,1,-2,9,6,-8,-2,7,3,10,-3,9,-1,5,-10,7,10,5,6,8,9,3,10,9,-1,9,4,-7,10,6,-3,-9,8,6,9,-6,-7,4,-8,1,10,3,-7,-8,2,-7,6], dtype = "uint8")#candidate|8873|(702,)|const|uint8
call_8871 = relay.TupleGetItem(func_3467_call(relay.reshape(var_8872.astype('uint32'), [5, 15, 16]), relay.reshape(const_8873.astype('uint8'), [702,]), ), 1)
call_8874 = relay.TupleGetItem(func_3470_call(relay.reshape(var_8872.astype('uint32'), [5, 15, 16]), relay.reshape(const_8873.astype('uint8'), [702,]), ), 1)
output = relay.Tuple([uop_8863,call_8871,var_8872,const_8873,])
output2 = relay.Tuple([uop_8863,call_8874,var_8872,const_8873,])
func_8888 = relay.Function([var_8872,], output)
mod['func_8888'] = func_8888
mod = relay.transform.InferType()(mod)
mutated_mod['func_8888'] = func_8888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8889 = relay.var("var_8889", dtype = "uint32", shape = (1200,))#candidate|8889|(1200,)|var|uint32
func_8888_call = mutated_mod.get_global_var('func_8888')
call_8890 = func_8888_call(var_8889)
output = call_8890
func_8891 = relay.Function([var_8889], output)
mutated_mod['func_8891'] = func_8891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mod.get_global_var('func_8244')
func_8246_call = mutated_mod.get_global_var('func_8246')
call_8901 = func_8244_call()
call_8902 = func_8244_call()
output = relay.Tuple([call_8901,])
output2 = relay.Tuple([call_8902,])
func_8906 = relay.Function([], output)
mod['func_8906'] = func_8906
mod = relay.transform.InferType()(mod)
mutated_mod['func_8906'] = func_8906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8906_call = mutated_mod.get_global_var('func_8906')
call_8907 = func_8906_call()
output = call_8907
func_8908 = relay.Function([], output)
mutated_mod['func_8908'] = func_8908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8906_call = mod.get_global_var('func_8906')
func_8908_call = mutated_mod.get_global_var('func_8908')
call_8925 = relay.TupleGetItem(func_8906_call(), 0)
call_8926 = relay.TupleGetItem(func_8908_call(), 0)
uop_8930 = relay.log(call_8925.astype('float32')) # shape=(1, 16, 7)
uop_8932 = relay.log(call_8926.astype('float32')) # shape=(1, 16, 7)
bop_8933 = relay.not_equal(uop_8930.astype('bool'), relay.reshape(call_8925.astype('bool'), relay.shape_of(uop_8930))) # shape=(1, 16, 7)
bop_8936 = relay.not_equal(uop_8932.astype('bool'), relay.reshape(call_8926.astype('bool'), relay.shape_of(uop_8932))) # shape=(1, 16, 7)
func_1698_call = mod.get_global_var('func_1698')
func_1700_call = mutated_mod.get_global_var('func_1700')
var_8949 = relay.var("var_8949", dtype = "float32", shape = (135,))#candidate|8949|(135,)|var|float32
call_8948 = relay.TupleGetItem(func_1698_call(relay.reshape(var_8949.astype('float32'), [3, 5, 9])), 0)
call_8950 = relay.TupleGetItem(func_1700_call(relay.reshape(var_8949.astype('float32'), [3, 5, 9])), 0)
func_6479_call = mod.get_global_var('func_6479')
func_6486_call = mutated_mod.get_global_var('func_6486')
const_8954 = relay.const(-4, dtype = "int8")#candidate|8954|()|const|int8
const_8955 = relay.const([[-6,1,-3,-10,-6,8,-1,-5,2,-6,1,-7,1,5,10,5,-10,-1,1,-7,10,-1,2,1,-10,-8,4,1,-7,-7,6,2,10,10,7,-8,-5,-9,-9,-10,9,9,3,-7,8,9,7,1,7,9,-1,8],[-8,-4,7,-5,1,-10,-5,7,2,-9,-9,8,-4,-7,-8,2,4,-2,-7,9,-2,-6,-5,-4,1,10,6,6,-9,-4,2,2,9,8,2,7,6,2,-6,-2,2,9,-2,-5,-1,-5,-2,-10,-10,8,-8,5],[-8,-7,5,-1,1,-2,-4,1,5,-8,-2,7,-9,-3,2,10,7,2,7,1,-3,1,2,-5,-10,4,-3,6,-8,8,-9,9,6,-9,7,10,-5,-9,5,-1,-9,8,8,4,3,5,2,9,5,10,-10,-2],[-3,1,7,4,-9,-7,-8,-2,-5,-2,-10,5,-1,-7,-7,-5,2,-10,-9,2,-7,-4,2,-6,2,-3,3,8,-3,4,-4,2,-8,-4,7,7,-6,10,7,-4,8,-1,-3,4,4,8,8,5,-2,-2,-4,2],[-2,-8,10,9,-9,-8,9,-10,9,-2,-8,2,-3,-7,-5,-9,-3,5,-10,1,7,10,1,-9,-8,9,8,-5,8,-10,-3,2,-7,-9,-3,4,10,-6,-6,3,-7,-1,6,8,8,-10,8,-4,1,9,6,4],[9,-8,8,-10,-6,2,7,-7,-7,-5,-9,7,4,3,-3,-5,8,9,7,-3,-10,-4,-2,-3,7,5,7,-5,-9,-1,7,5,9,3,3,8,8,4,2,2,-5,7,-8,5,3,2,-1,-9,-10,6,-8,-1],[-6,-8,-2,10,-7,9,3,5,-9,-10,-3,-1,-9,10,-9,4,6,6,2,3,-4,5,8,5,-4,-8,-4,-1,5,-10,2,2,8,4,-3,-1,3,6,5,-7,-8,7,-5,5,-2,4,1,-10,3,8,4,5],[-5,-7,4,-1,-2,-4,-9,-4,-6,-4,6,5,-1,5,4,3,1,-2,-7,-7,3,3,-2,4,-7,4,-2,3,4,9,8,-9,-3,5,-6,-6,-6,5,-7,-6,5,8,-1,-3,8,4,3,6,8,3,-4,5],[9,7,-8,10,5,3,10,-2,5,6,-1,3,4,3,6,-7,9,10,-9,1,10,-1,-7,1,-10,1,9,-3,9,-10,-6,-7,-3,10,-9,7,4,-10,-2,2,-7,-3,6,-1,2,7,2,-2,-3,8,-5,1],[-4,10,-3,-8,-7,1,7,-6,5,8,9,4,-6,4,-9,1,-8,-1,-5,-3,10,-6,6,-7,-5,-10,-6,-6,9,4,-5,-3,-7,-3,-3,-5,-8,1,2,7,-6,-4,3,5,-10,-2,-5,7,1,-6,-4,-9]], dtype = "int8")#candidate|8955|(10, 52)|const|int8
const_8956 = relay.const([-1.800291,6.386206,-2.517022,-5.959295,0.977942,-3.536230,-1.388443,-5.785656,8.848364,-3.876967,-0.721979,7.849264,9.097484,2.506794,-6.284350,-0.167909,-7.778852,-0.102632,7.710933,-7.680211,-9.524364,-2.194578,9.209822,-1.998156,0.626405,-4.244049,1.297665,9.430103,8.230880,-6.031389,-8.443122,1.338864,-6.545603,-5.723583,-1.326032,-7.080483,5.330968,3.082119,0.435125,7.077038,0.385535,-3.131456,5.163630,9.857933,1.725516,-6.922784,-0.141935,-4.559866,7.018681,-5.251708,-0.366898,-0.100943,5.906992,-8.346071,2.569670,6.404550,4.062757,-9.438458,-7.097930,-3.940178,9.300091,1.268763,-3.075436,-9.928038,-4.115129,6.789355,3.718934,-9.323894,-1.180495,1.568245,-3.940568,-6.308139,-0.469824,-5.794961,-1.342212,-5.866047,0.192020,3.830779,-7.533766,7.289192,-4.128251,9.438580,6.864356,3.546856,-6.947436,0.237517,6.157770,-5.378460,-3.739855,-7.311240,1.865086,-5.740747,6.160812,-5.780730,4.618973,-9.133331,2.816064,6.134923,-1.505813,-3.533187,3.745938,9.393573,2.353191,4.747757,9.659098,-6.724941,-8.404455,9.061440,-0.248566,7.670534,-3.428584,4.120738,8.770985,-7.621146,9.277892,-2.524725,-6.665310,-4.777585,-4.719354,-8.019377,2.926928,-4.089123,5.771366,2.130366,-3.978162,-8.298400,1.814137,-0.140518,-5.113972,-2.619383,6.879830,3.085855,-8.308775,8.666473,4.809108,-3.037712,-0.403409,-1.259538,8.912657,5.051901,4.716407,-3.715448,6.149632,5.484256,3.933254,-1.922253,9.848760,-4.592114,3.437648,-2.056641,0.166476,6.110836,9.567249,-4.551348,-6.896310,-7.407045,4.707260,-1.014561,6.615595,-1.504876,9.240525,2.562747,-7.048171,-6.904833,4.936710,-3.550970,-7.418210,-9.108097,-5.891489,-7.827120,-9.086071,-9.865699,7.487928,8.612948,-0.389339,7.057353,-4.195152,-3.008383,-9.171818,-6.215422,3.949458,3.834666,-1.674446,-3.136499,-8.614464,8.513555,1.860358,-2.705392,-7.507087,-2.221947,3.760856,-2.759649,-3.533257,9.348119,-5.078321,5.704809,-7.982582,6.778395,-4.094687,6.316870,-9.390066,-0.687829,-9.441956,-8.586566,-2.770561,-2.607629,-4.045632,9.775687,0.688032,1.677992,-1.280972,-1.058164,1.835720,9.925643,9.198735,-9.506052,-9.551757,8.464184,7.956027,9.381321,-3.758723,-7.861105,0.637961,-7.324777,-6.524571,-0.471343,-5.390373,3.524008,-3.351093,9.131241,-1.968049,4.932409,-3.624207,0.097790,-1.141184,9.766069,-4.966512,5.865991,0.613575,2.714473,9.612154,-8.787824,-6.097786,-3.148186,4.809383,-3.363089,4.595513,-9.745269,-8.876617,-9.125046,-6.124640,-0.349829,4.463553,-6.865046,4.047211,-1.767828,8.090273,-0.482459,-0.348009,-3.296438,-0.310955,2.694722,-8.680047,-6.057021,-3.868406,6.176324,-3.042150,3.515713,4.443462,9.303160,1.555129,-3.046364,-8.907060,-7.956765,9.882135,-3.437691,2.998731,7.258272,7.473878,8.885024,-2.363856,1.331384,-5.835635,-2.868911,-0.789113,-5.305275,5.878409,5.002984,6.668245,5.456033,-9.422700,-7.541503,5.641430,-1.449776,2.123692,-8.801444,-8.595222,9.588369,4.261299,2.111676,8.551347,4.773602,-1.314976,-9.299571,7.390702,-0.662519,-3.350895,4.460812,-7.568295,-9.229235,8.917837,-3.878305,-8.733779,-7.564829,4.576677,-6.889093,6.014395,-6.160563,-0.197215,7.167804,-7.651258,5.126900,5.872565,-9.428992,-5.081418,6.207952,-4.526057,-1.526677,8.246321,-7.305810,-1.765045,9.865055,-9.329483,1.544788,3.625892,-2.799214,-4.692097,-7.061657,7.160972,4.512018,4.910992,3.780535,-1.212491,2.147528,6.814561,3.174684,-3.570702,0.703278,-4.796716,0.921926,-6.734203,1.447117,3.799376,-2.545401,-9.451609,4.846396,-3.750621,3.710784,-0.722388,5.284102,-3.785453,9.204871,0.103918,-3.544009,6.697331,6.188337,5.655637,-0.070425,-2.444657,0.551972,-8.474687,3.899640,-2.516880,-7.095687,7.326202,-4.580022,-2.603288,-0.060743,-6.425024,4.877364,-8.872222,1.680633,9.032596,-5.039598,-7.323818,-8.256947,-7.493926,-8.274607,0.703954,0.874833,-8.677070,-8.786019,0.926069,-1.941312,6.054608,1.946292,9.688561,-2.844280,-5.303903,-1.705422,-7.206525,-0.991650,-3.133713,0.515707,2.226184,-9.121821,-3.206371,-1.266616,3.644849,-9.608003,-5.169923,-8.736660,-7.045139,-1.899274,-6.293720,-2.950552,4.490395,4.117554,9.439522,5.680509,-2.069993,-8.841242,3.364413,-4.303662,5.134037,9.159035,2.094915,3.547327,-9.945043,-2.984549,8.083548,-5.093998,4.387634,-0.899130,-3.978893,8.591309,-9.862742,-8.504594,-6.118950,-6.159815,1.990806,1.293237,-6.741245,-6.606197,-7.064793,4.413684,2.231511,7.668512,5.602496,0.329234,8.996210,-4.799219,-1.343532,1.736348,-0.813914,7.939434,-0.186759,-2.835138,0.156035,4.303281,1.393249,2.863777,-9.378850,-2.333243,6.448696,-3.818040,-8.923273,-5.136034,9.362887,-5.599794,1.134301,6.852500,-6.748930,-5.161895,-9.750688,-4.272014,-9.700908,9.408105,-4.121818,4.921299,7.668278,-6.950734,-9.327671,2.761464,9.528581,5.551796,4.196871,-9.981214,-0.590122,1.713378,-3.328551,4.612817,-8.820146,-6.372700,-2.619435,-2.398624,4.352479,1.595887,4.988221,3.710322,-8.793014,4.557990,4.829314,-2.369429,4.652373,-1.235272,9.321390,-0.682721,-8.192659,-1.109831,-0.199749,2.636555,2.778822,-4.249842,5.241001,7.930578,-9.211860,8.272566,-1.667711,-3.554895,1.061696,-1.198877,-8.552027,-5.634206,1.255749,0.241519,1.320668,3.558504,8.508417,1.950048,0.864236,7.318878,-4.303181,5.266696,-2.697250,-1.303577,-6.381520,-0.325826,7.003476,-2.162819,2.880585,0.011501,-1.643955,6.255624,-4.561771,-8.335098,-8.435638,3.806602,-6.103799,6.140042,-4.229376,-2.436295,-7.343824,9.010713,-4.103301,-3.374228,1.909527,-4.654289,-0.109660,-2.052246,3.745110,-4.801823,-9.252584,-6.594641,-0.318670,0.994066,7.635037,-3.459974,-1.150410,9.501369,2.880737,-7.827855,8.834687,-9.720153,-5.104002,-4.066210,2.897392,8.737995,8.438040,-7.872322,-8.720899,-1.306096,5.915151,9.288473,0.634571,-2.890467,5.357783,9.040040,-5.977476,-8.248696,-1.564961,-6.818640,-0.232908,4.584933,2.791542,4.602451,9.749057,5.923172,-6.951363,-7.818818,3.153209,-7.194689,0.627067,-3.010144,1.118554,7.039748,9.812891,7.809167,9.621555,2.008839,-3.362213,-8.002115,8.410511,5.103361,6.384499,8.090255,-0.671814,3.537635,9.943638,6.749016,-8.330818,7.953445,-7.265357,8.484387,3.478417,-5.156572,-2.281271,-7.924788,-4.866265,3.795621,3.300955,7.335409,1.727505,-8.930804,-8.162839,9.261704,-9.649866,-0.791975,-1.862375,-0.202504,5.674455,5.407887,-9.382545,0.186240,4.330180,-2.963802,6.211258,3.470815,-9.738842,8.388005,6.154724,9.357210,1.970510,4.264859,-2.713453,-8.441662,-7.719569,6.400283,4.206870,-5.992525,1.160240,1.278942,-4.281117,8.793068,-3.866960,4.207018,-4.720721,4.054377,-1.522146,3.725646,6.100533,-7.567138,3.574827,-6.504315,-3.532819,-2.761264,0.136596,-3.857440,-1.085286,-0.537944,2.497271,-4.793683,-5.054335,5.747252,-7.131712,9.731651,-6.399565,-3.409405,7.999474,-3.992037,9.883515,-0.768767,3.445356,-9.822600,-5.934328,-9.093670,-1.086831,9.142462,9.975745,9.581120,7.724122,2.610829,7.366635,-5.291763,-6.819851,-9.756535,5.041747,-6.442673,-8.993710,-1.738513,0.886857,-2.807757,4.866140,-9.949374,-5.789836,8.414314,1.686439,-3.383228,-4.793821,6.675510,7.508734,-9.467958,-6.149922,0.319552,7.222052,-4.676447,6.289634,-7.665285,-7.592469,9.967569,-2.546173,4.732670,1.120678,-2.003188,-5.366138,-9.120505,-0.181169,-9.039251,9.603436,2.893411,2.009147,0.234611,-1.648116,7.209853,-4.959763,8.066916,7.722595,-2.259010,-1.150806,-8.343625,4.486392,6.452304,1.266139,-9.609990,2.803997,4.430373,3.308815,0.301857,-3.060701,7.370047,4.215895,-2.513458,6.474794,6.796676,1.481578,-7.133385,-3.856098,-3.268207,0.128859,-7.745448,-7.227080,5.498369,-7.708928,2.147199,9.914159,-7.979728,-6.438655,-0.827869,1.276348,5.216109,6.429450,0.782542,1.790765,-4.113900,5.450536,-0.113806,-7.414562,1.945361,-8.159410,-7.145532,3.837346,9.478625,1.859673,6.912347,7.638529,6.643851,-8.406411,4.192928,5.824487,-6.319153,-1.365891,-3.279944,-8.339857,-3.189718,2.739527,8.887170,3.972379,-8.541514,-5.377942,3.770621,-5.471191,-2.606404,-1.365179,0.518298,0.647522,-7.513606,-6.272397,1.791671,-2.540697,4.354901,-8.369287,1.812249,9.578043,-9.487564,9.946515,-3.199094,-2.911224,4.638716,-3.864373,-7.212816,-9.645545,5.244980,-2.520133,-4.883834,-2.430391,-8.598118,-4.717563,-6.863850,0.497542,2.708495,3.903572,-0.637182,-3.435913,-2.609957,-1.349187,9.593478,0.349608,9.140541,2.904475,-1.586119,-6.646513,-3.375641,-6.866056,-5.985693,0.004501,0.944831,0.622412,-3.806733,4.436815,-9.051950,-8.922361,-2.741834,5.260883,7.392033,3.193457,-8.140254,-2.830745,-3.950578,-1.945443,-7.664364,-0.807074,-4.193105,8.527312,-9.383039,3.126802,4.037996,-1.220806,5.231674,8.282178,-5.676202,-4.801907,-9.636896,1.322284,-8.783108,-1.120956,8.288382,-8.072988,-1.629277,-0.249702,-2.325568,-5.014079,1.118584,1.755086,-6.701815,8.104691,-6.566810,1.051563,-9.333317,4.909623,-4.468638,5.159585,9.211742,1.338824,-0.555357,-3.841369,4.216773,-1.380646,7.388600,6.055135,-6.571560], dtype = "float64")#candidate|8956|(910,)|const|float64
var_8957 = relay.var("var_8957", dtype = "float32", shape = (336,))#candidate|8957|(336,)|var|float32
var_8958 = relay.var("var_8958", dtype = "float64", shape = (13, 14))#candidate|8958|(13, 14)|var|float64
call_8953 = relay.TupleGetItem(func_6479_call(relay.reshape(const_8954.astype('int8'), []), relay.reshape(const_8955.astype('int8'), [4, 13, 10]), relay.reshape(const_8956.astype('float64'), [910,]), relay.reshape(var_8957.astype('float32'), [336,]), relay.reshape(var_8958.astype('float64'), [182,]), ), 6)
call_8959 = relay.TupleGetItem(func_6486_call(relay.reshape(const_8954.astype('int8'), []), relay.reshape(const_8955.astype('int8'), [4, 13, 10]), relay.reshape(const_8956.astype('float64'), [910,]), relay.reshape(var_8957.astype('float32'), [336,]), relay.reshape(var_8958.astype('float64'), [182,]), ), 6)
func_6742_call = mod.get_global_var('func_6742')
func_6746_call = mutated_mod.get_global_var('func_6746')
const_8968 = relay.const([5.870066,2.615614,-2.385450,2.482611,-8.965556,-3.064885,-9.709591,5.269656,8.868441,5.988723,-0.319142,2.152202,-3.376896,-7.406015,-1.390539,7.568144,-1.732537,3.710700,-5.887963,-2.672876,-0.128253,-0.293352,-7.633186,7.197363,-4.521501,4.934146,-1.549783,4.985520,-0.441145,-5.311944,6.911232,-7.680816,-2.187797,-5.149391,-6.405683,-6.560827,4.616510,6.636157,-0.129877,-9.779476,-1.777075,2.309074,-8.071108,4.283088,3.025276,3.369268,0.396001,-5.701027,1.011722,-4.290774,4.362186,-4.809072,5.917043,-8.226725,3.244920,-7.427991,6.729000,-3.737033,-5.466454,-0.595559,-0.910934,-4.640450,-5.425957,5.010678,4.810877,4.243360,-6.206253,8.435358,-7.429147,3.374766,-6.746484,4.041203,-1.289091,0.786457,4.738887,-4.508277,1.521724,0.721328,5.252331,-8.833530,-8.423048,5.107794,9.178063,-6.504840,-7.845050,6.833061,9.850483,-9.461752,4.956529,-2.673173,-8.425446,-4.819735,2.030492,7.581763,-0.630020,6.324201,3.298848,-9.670194,2.300573,-5.555236,-2.358481,7.217801,-9.489840,4.634817,2.342124,-3.980176,-2.244572,-2.474342,-8.844283,-9.225309,7.090504,9.204067,-5.002456,2.904931,-5.425800,-0.073021,-5.862929,-5.475415,7.156080,-5.830109,0.769917,-8.333229,8.109380,3.859141,-4.826036,-0.960957,9.850706,4.167452,7.050880,-0.428243,-7.885361,9.638620,-8.721945,-0.174072,8.128096,-2.474195,3.517189,9.826769,2.399549,4.219459,-1.197690,1.889132,7.590443,-6.920704,-2.700112,4.773863,5.609143,8.391789,-3.848552,2.171332,-0.849116,6.392638,6.646808,-6.325776,0.279342,-6.545474,0.578391,-2.161318,-7.291526,-7.671591,8.149227,-6.457454,-5.173698,-4.832396,6.917171,-0.399635,2.812366,7.847894,-5.567658,-1.561917,9.258295,-1.082608,-3.887991,-7.046238,7.860900,0.521457,-1.437946,5.572003,9.787115,5.475432,6.203721,-2.601831,6.317125,1.742159,3.773303,-7.749504,4.509380,-3.599443,3.940163,-2.791539,2.919694,9.005004,5.661290,-1.336666,-8.302661,3.465414,8.880576,-9.856873,-8.529739,8.274435,9.705448,-7.849501,-5.738836,4.882329,6.319924,-9.141519,9.077272,-3.598423,-0.649636,-5.119255,7.960368,-5.124241,4.973481,4.237710,1.154217,-1.638297,-6.868436,6.334011,3.816336,-9.652151,-6.049294,9.018582,-5.600746,1.724263,-6.698732,1.468946,5.056839,-1.267695,5.259709,-5.908979,-1.434990,1.179622,-4.385935,7.428489,7.528014,-1.465422,-5.927985,-2.420149,-9.714618,4.753099,8.430971,-8.787746,4.480979,1.446366,-4.202384,5.591678,-3.314651,-4.488267,9.447250,-3.226140,4.011394,-3.255928,-6.649022,6.133807,-8.341625,8.286129,8.366248,9.666975,3.871126,0.717878,-1.017023,-5.562954,-7.585382,8.910553,6.679478,-8.534179,9.450346,-1.559864,7.272429,-5.571641,7.172343,8.433652,3.176040,9.124793,-9.175766,-3.198140,3.140989,5.444460,9.697480,6.777783,8.603825,-3.701626,-7.404527,-8.685096,-1.535899,-6.853253,3.090171,-1.784169,-7.617233,8.891897,0.546288,7.121726,-1.162492,-5.692812,-9.190059,-3.988780,7.266844,-2.721417,-7.649511,-0.246800,9.732770,-7.751669,-2.076328,5.584698,-3.281592,5.504575,-9.369686,-5.530789,-6.643464,1.240812,-3.908803,-0.924466,-0.973057,7.096888,3.889285,6.947399,-8.019342,7.035708,-3.106838,8.429532,0.744787,-9.816021,-3.009564,6.542594,1.740041,3.197939,-3.546984,-9.119554,-4.114709,9.185380,2.611513,-2.933175,-2.638203,-1.504604,-6.649851,1.233113,0.235188,7.843488,-3.853984,-5.854234,6.299431,9.273652,7.131717,-8.179171,-7.970082,3.292670,-7.606003,4.237742,-8.845068,-3.418770,-5.000385,-8.763821,0.457628,2.143135,-1.280483,-9.183253,4.767372,-7.187756,2.447202,-6.234801,-3.855554,3.336851,5.468432,-3.482288,-8.797917,-5.157314,-4.480341,-1.946897,-5.427721,-1.687849,8.302526,0.286420,-3.304493,2.905822,-4.869010,5.400150,-7.533373,-5.531585,-0.167446,9.921063,2.068197,2.214787,-5.447976,7.324674,2.128099,-6.258854,-3.081788,2.001251,1.583241,-2.341322,-3.218228,-1.173545,-0.092961,-3.183518,8.744300,-0.412881,8.714964,0.065227,0.687395,-6.550418,-6.166268,-1.215398,-4.700818,3.252338,-5.114893,-6.801902,-8.865556,9.669994,3.585633,7.091108,1.425182,8.162426,8.782707,0.709437,2.242597,9.014514,-7.645755,8.883408,5.899768,-9.944838,-5.227353,-6.857268,0.246416,-8.827648,2.872932,-7.525733,5.907258,5.562733,-2.223243,5.811182,-1.244207,8.766480,-4.956379,-1.972986,1.247123,-9.264323,1.790693,-6.919736,-4.158718,7.465356,-6.114951,8.571549,2.412126,-8.185152,8.945535,3.888054,-2.258407,-7.909501,5.166575,-6.403333,9.443003,4.356632,8.507336,7.526701,-6.673497,8.480988,-4.992476,-7.778684,1.413351,2.977628,-7.095484,3.820532,5.101197,-8.329676,-4.209503,-8.978018,0.735369,-8.413729,4.448978,-0.051805,-1.446464,3.597912,-5.564984,-2.873316,-9.000389,-6.514632,-6.609769,-3.892102,9.327606,5.450341], dtype = "float32")#candidate|8968|(480,)|const|float32
call_8967 = func_6742_call(relay.reshape(const_8968.astype('float32'), [8, 15, 4]), relay.reshape(const_8968.astype('float32'), [8, 15, 4]), )
call_8969 = func_6742_call(relay.reshape(const_8968.astype('float32'), [8, 15, 4]), relay.reshape(const_8968.astype('float32'), [8, 15, 4]), )
output = relay.Tuple([bop_8933,call_8948,var_8949,call_8953,const_8954,const_8955,const_8956,var_8957,var_8958,call_8967,const_8968,])
output2 = relay.Tuple([bop_8936,call_8950,var_8949,call_8959,const_8954,const_8955,const_8956,var_8957,var_8958,call_8969,const_8968,])
func_8975 = relay.Function([var_8949,var_8957,var_8958,], output)
mod['func_8975'] = func_8975
mod = relay.transform.InferType()(mod)
var_8976 = relay.var("var_8976", dtype = "float32", shape = (135,))#candidate|8976|(135,)|var|float32
var_8977 = relay.var("var_8977", dtype = "float32", shape = (336,))#candidate|8977|(336,)|var|float32
var_8978 = relay.var("var_8978", dtype = "float64", shape = (13, 14))#candidate|8978|(13, 14)|var|float64
output = func_8975(var_8976,var_8977,var_8978,)
func_8979 = relay.Function([var_8976,var_8977,var_8978,], output)
mutated_mod['func_8979'] = func_8979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8906_call = mod.get_global_var('func_8906')
func_8908_call = mutated_mod.get_global_var('func_8908')
call_8995 = relay.TupleGetItem(func_8906_call(), 0)
call_8996 = relay.TupleGetItem(func_8908_call(), 0)
output = call_8995
output2 = call_8996
func_9009 = relay.Function([], output)
mod['func_9009'] = func_9009
mod = relay.transform.InferType()(mod)
output = func_9009()
func_9010 = relay.Function([], output)
mutated_mod['func_9010'] = func_9010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_9014 = relay.TupleGetItem(func_8373_call(), 0)
call_9015 = relay.TupleGetItem(func_8375_call(), 0)
output = call_9014
output2 = call_9015
func_9029 = relay.Function([], output)
mod['func_9029'] = func_9029
mod = relay.transform.InferType()(mod)
mutated_mod['func_9029'] = func_9029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9029_call = mutated_mod.get_global_var('func_9029')
call_9030 = func_9029_call()
output = call_9030
func_9031 = relay.Function([], output)
mutated_mod['func_9031'] = func_9031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_9100 = relay.TupleGetItem(func_8373_call(), 0)
call_9101 = relay.TupleGetItem(func_8375_call(), 0)
output = call_9100
output2 = call_9101
func_9116 = relay.Function([], output)
mod['func_9116'] = func_9116
mod = relay.transform.InferType()(mod)
output = func_9116()
func_9117 = relay.Function([], output)
mutated_mod['func_9117'] = func_9117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mod.get_global_var('func_8244')
func_8246_call = mutated_mod.get_global_var('func_8246')
call_9186 = func_8244_call()
call_9187 = func_8244_call()
uop_9209 = relay.atan(call_9186.astype('float64')) # shape=(1, 16, 7)
uop_9211 = relay.atan(call_9187.astype('float64')) # shape=(1, 16, 7)
output = uop_9209
output2 = uop_9211
func_9212 = relay.Function([], output)
mod['func_9212'] = func_9212
mod = relay.transform.InferType()(mod)
output = func_9212()
func_9213 = relay.Function([], output)
mutated_mod['func_9213'] = func_9213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mod.get_global_var('func_8730')
func_8732_call = mutated_mod.get_global_var('func_8732')
call_9235 = relay.TupleGetItem(func_8730_call(), 3)
call_9236 = relay.TupleGetItem(func_8732_call(), 3)
output = call_9235
output2 = call_9236
func_9239 = relay.Function([], output)
mod['func_9239'] = func_9239
mod = relay.transform.InferType()(mod)
output = func_9239()
func_9240 = relay.Function([], output)
mutated_mod['func_9240'] = func_9240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9116_call = mod.get_global_var('func_9116')
func_9117_call = mutated_mod.get_global_var('func_9117')
call_9246 = func_9116_call()
call_9247 = func_9116_call()
func_4164_call = mod.get_global_var('func_4164')
func_4169_call = mutated_mod.get_global_var('func_4169')
var_9259 = relay.var("var_9259", dtype = "float64", shape = (810,))#candidate|9259|(810,)|var|float64
const_9260 = relay.const([-5,-5,6,8,-1,-9,-10,9,-10,-3,-1,-4,-5,-1,6,-5,-4,1,-4,-7,10,9,-5,-6,-1,-10,7,-1,7,-3,-5,-6,-7,-10,6,8,-5,5,-5,-5,-2,-1,8,-3,-6,-2,5,10,4,4,9,-7,-9,4,-3,-2,-1,6,-5,-8,7,1,-7,7,5,1,-5,8,-1,2,9,-1,-7,2,9,-4,-10,-10,8,-8,1,6,-10,-4,7,6,-9,8,5,-9,-2,1,-10,8,-10,-2,6,1,-2,-6,10,-5,-9,7,3,-8,-9,-6,2,6,8,5,5,9,-10,8,-9,8,-8,-3,1,7,-2,8,4,-6,-3,8,6,9,4,-7,-10,2,10,-10,-9,-10,7,3,-3,6,1,-5,-3,6,-2,4,-7,-2,2,-5,-7,1,2,-7,-4,-10,9,5,-2,1,1,-5,-2,5,-9,6,-5,9,-3,-4,-1,6,-2,4,-2,-5,2,1,-9,1,-7,3,6,-1,10,7,-10,3,-4,5,4,8,3,2], dtype = "uint32")#candidate|9260|(196,)|const|uint32
var_9261 = relay.var("var_9261", dtype = "float64", shape = (1, 280))#candidate|9261|(1, 280)|var|float64
call_9258 = relay.TupleGetItem(func_4164_call(relay.reshape(var_9259.astype('float64'), [6, 9, 15]), relay.reshape(const_9260.astype('uint32'), [196,]), relay.reshape(var_9261.astype('float64'), [280,]), ), 4)
call_9262 = relay.TupleGetItem(func_4169_call(relay.reshape(var_9259.astype('float64'), [6, 9, 15]), relay.reshape(const_9260.astype('uint32'), [196,]), relay.reshape(var_9261.astype('float64'), [280,]), ), 4)
output = relay.Tuple([call_9246,call_9258,var_9259,const_9260,var_9261,])
output2 = relay.Tuple([call_9247,call_9262,var_9259,const_9260,var_9261,])
func_9263 = relay.Function([var_9259,var_9261,], output)
mod['func_9263'] = func_9263
mod = relay.transform.InferType()(mod)
var_9264 = relay.var("var_9264", dtype = "float64", shape = (810,))#candidate|9264|(810,)|var|float64
var_9265 = relay.var("var_9265", dtype = "float64", shape = (1, 280))#candidate|9265|(1, 280)|var|float64
output = func_9263(var_9264,var_9265,)
func_9266 = relay.Function([var_9264,var_9265,], output)
mutated_mod['func_9266'] = func_9266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8906_call = mod.get_global_var('func_8906')
func_8908_call = mutated_mod.get_global_var('func_8908')
call_9275 = relay.TupleGetItem(func_8906_call(), 0)
call_9276 = relay.TupleGetItem(func_8908_call(), 0)
output = call_9275
output2 = call_9276
func_9288 = relay.Function([], output)
mod['func_9288'] = func_9288
mod = relay.transform.InferType()(mod)
mutated_mod['func_9288'] = func_9288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9288_call = mutated_mod.get_global_var('func_9288')
call_9289 = func_9288_call()
output = call_9289
func_9290 = relay.Function([], output)
mutated_mod['func_9290'] = func_9290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9029_call = mod.get_global_var('func_9029')
func_9031_call = mutated_mod.get_global_var('func_9031')
call_9299 = func_9029_call()
call_9300 = func_9029_call()
output = relay.Tuple([call_9299,])
output2 = relay.Tuple([call_9300,])
func_9309 = relay.Function([], output)
mod['func_9309'] = func_9309
mod = relay.transform.InferType()(mod)
output = func_9309()
func_9310 = relay.Function([], output)
mutated_mod['func_9310'] = func_9310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_9354 = relay.TupleGetItem(func_8373_call(), 0)
call_9355 = relay.TupleGetItem(func_8375_call(), 0)
func_4258_call = mod.get_global_var('func_4258')
func_4260_call = mutated_mod.get_global_var('func_4260')
var_9357 = relay.var("var_9357", dtype = "bool", shape = (1764,))#candidate|9357|(1764,)|var|bool
call_9356 = relay.TupleGetItem(func_4258_call(relay.reshape(var_9357.astype('bool'), [14, 14, 9])), 0)
call_9358 = relay.TupleGetItem(func_4260_call(relay.reshape(var_9357.astype('bool'), [14, 14, 9])), 0)
func_8774_call = mod.get_global_var('func_8774')
func_8781_call = mutated_mod.get_global_var('func_8781')
const_9363 = relay.const([1.607606,-6.236824,-0.928571,2.595980,4.833981,-8.646384,4.095387,0.749461,6.329222,2.772974,-4.649719,-2.535502,5.982277,1.042899,8.248784,-6.719184,7.777902,0.861738,-2.812237,9.621877,-4.369779,6.708686,8.192868,3.109877,1.469696,-9.433086,0.038268,-6.397376,-7.585149,-0.590644], dtype = "float64")#candidate|9363|(30,)|const|float64
const_9364 = relay.const([0.573595,-4.343948,-4.816710,-2.524936,5.260568,0.631554,-9.145329,3.100848,2.974422,1.284712,1.010186,2.737223,-4.295097,1.978230,-1.756295,-5.960634,7.396678,-0.852903,-2.333435,4.199823,-7.805381,-7.772347,5.129402,-3.653607,1.730207,-1.348742,2.302467,-5.905234,7.918677,1.385834,-9.511732,2.465789,1.910900,3.056742,-8.239266,2.891807,5.770024,-0.623045,-8.746151,-4.057573,-3.218788,-1.006215,-4.679689,6.188207,-0.596762,-5.766888,3.706929,1.208228,4.121357,-0.204343,6.031563,-3.969723,-4.029148,9.021623,6.479017,-7.532876,-7.676463,1.400089,-1.854860,-5.834458], dtype = "float64")#candidate|9364|(60,)|const|float64
var_9365 = relay.var("var_9365", dtype = "int64", shape = (144,))#candidate|9365|(144,)|var|int64
const_9366 = relay.const([-9,-10,1,1,-10,-7,1,2,-1,-2,-4,-1,-1,-5,2,9,-7,2,-7,-1,-5,-5,-10,-8,-7,9,-9,2,-3,6,-5,7,-6,-9,-1,1,-9,-4,-3,-10,-3,10,9,-2,2,-10,-5,-8,9,5,6,-7,4,5,-2,-8,4,-8,3,-7,-10,-4,5,7,9,-5,-9,1,-2,1,-1,-10,10,-10,-8,9,-4,-2,-5,5,10,-9,2,4,-6,9,-5,-2,7,-7,-9,-2,9,5,2,8,-2,4,-6,-10,-1,-2,8,-3,-8,-9,-7,3,2,10,2,9,-4,9,-9,-4,8,9,2,10,-2,-6,-7,-5,-8,6,-2,3,-7,-5,1,-9,7,-4,1,6,2,-2,-4,-9,-1,-2,9,-6,8,-5,3,8,3,7,-8,5,9,-9,4,5,5,8,-3,-2,-6,-9,-10,-8,-1,-5,2,-10,-9,5,-9,1,-8,-9,1,-1,8,-9,9,1,4,10,10,-8,1,4,-4,3,2,-2,-5,4,-2,-4,-10,-2], dtype = "uint32")#candidate|9366|(196,)|const|uint32
const_9367 = relay.const([-10,-4,-3,2,4,-10,7,-8,7,-1,-7,-3,4,7,8,10,4,8,8,5,-7,8,9,2,-1,8,-6,10,4,5,-7,2,10,1,2,-9,-10,-5,-5,4,2,4,3,-7,1,-9,-9,-4,-2,7,8,5,3,5,-8,1,-1,7,1,2,-8,-4,3,5,10,9,8,-6,-3,6,-1,9,-6,-7,10,10,-10,6,2,-9,5,-10,10,-3,-8,4,10,3,-2,2,10,10,8,-5,9,-3,-2,7,-1,-6,-3,-10,6,8,6,9,-4,7,-7,10,-8,10,8,-1,10,-1,10,6,7,-3,4,10,-3,7,1,7,4,9,-7,-2,8,9,-5,3,9,-4,7,10,-10,1,-8,-1,6,-4,-10,7,10,-5,3,6,3,-6,1,-10,6,-4,-10,7,-5,-6,-9,-3,2,-3,-8,-8,8,-3,1,4,7,-2,-3,2,1,-2,-2,7,-7,-9,-1,7,-3,10,6,-1,-2,-9,-3,-10,8,5,9,3,4,10,-1,7,-9,-7,-1,-7,3,-7,-8,3,10,-7,-9,4,4,-1,3,8,4,-7,4,-9,2,5,2,-6,-5,-3,5,10,-3,6,-8,8,-10,7,10,10,2,10,5,-8,8,7,-1,3,-9,-10,3,-8,-6,6,-3,-6,4,-10,-3,-3,4,-4,-8,-8,8,-3,7,-6,8,-9,-8,5,2,-5,8,3,8,4,8,5,10,-9,-1,2,-6,-8,7,-8,-1,-1,9,-10,5,4,-5,-9,9,6,4,-7,10,-7,-1,3,8,-10,9,-5,-3,6,-10,-7,-7,-6,2,3,1,8,-5,-3,-6,-1,4,-9,-4,6,-4,-2,-7,-3,-4,-10,8,-8,-10,7,5,-3,3,7,-7,-3,8,-1,6,4,2,-6,4,7,-4,-4,-2,9,8,-7,8,5,7,-3,-2,2,2,8,1,-4,10,3,4,9,7,7,8,-3,8,8,2,-5,8,-2,9,-4,-3,-10,9,7,5,-1,-5,-8,2,-4,5,-1,-5,2,9,10,2,-7,1,-9,7,9,-6,-5,-2,3,10,-10,6,-6,7,7,8,-2,-9,5,-1,-9,3,5,5,-5,-1,8,7,4,-4,3,8,-10,6,-6,2,-4,-9,2,-7,9,-2,-7,2,2,6,-7,3,-3,3,-8,5,9,10,-10,-8,5,5,-8,-5,5,8,-8,-7,3,-2,-4,2,-5,-5,-9,3,5,-8,-8,-5,-6,3,7,-7,-2,9,8,-9,4,-7,9,7,-9,-8,7,10,-8,9,4,6,-5,-4,-8,5,9,7,1,1,-10,-8,4,-2,2,-8,5,4,10,-2,-1,2,-8,-7,4,2,-8,-1,-8,-5,-4,7,-8,9,9,6,-10,-9,7,9,5,-3,2,7,7,-2,-8,10,2,-4,5,-10,-8,5,-6,-5,6,7,-4,-9,8,-3,10,4,7,2,8,6,2,1,8,10,8,1,2,2,-3,8,-10,-5,10,8,-1,8,-8,1,7,-7,9,-6,1,-2,-4,-6,-5,-1,10,7,-4,7,3,5,1,4,3,2,-7,6,5,6,-5,-6,-8,10,-5,-3,7,8,-3,10,2,10,6,-1,-10,-2,-5,3,3,-5,-10,-9,-10,7,-1,1,-8,-3,7,-7,4,-3,10,-2,9,3,10,8,-9,3,-3,3,5,8,-1,-2,-6,4,1,3,5,-1,8,-5,8,8,4,5,-7,-5,9,5,-2,-5,7,5,4,9,7,8,5,7,7,-3,4,-7,5,8,3,10,-1,-5,1,4,1,-3,10,-8,-1,-5,6,6,4,-9,-7,-10,-6,-3,1,4,1,-6,9,-2,-4], dtype = "uint8")#candidate|9367|(702,)|const|uint8
call_9362 = relay.TupleGetItem(func_8774_call(relay.reshape(const_9363.astype('float64'), [10, 3, 1]), relay.reshape(const_9364.astype('float64'), [15, 4]), relay.reshape(var_9365.astype('int64'), [144,]), relay.reshape(const_9366.astype('uint32'), [196,]), relay.reshape(const_9367.astype('uint8'), [6, 117]), ), 0)
call_9368 = relay.TupleGetItem(func_8781_call(relay.reshape(const_9363.astype('float64'), [10, 3, 1]), relay.reshape(const_9364.astype('float64'), [15, 4]), relay.reshape(var_9365.astype('int64'), [144,]), relay.reshape(const_9366.astype('uint32'), [196,]), relay.reshape(const_9367.astype('uint8'), [6, 117]), ), 0)
func_7009_call = mod.get_global_var('func_7009')
func_7015_call = mutated_mod.get_global_var('func_7015')
const_9371 = relay.const([True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True], dtype = "bool")#candidate|9371|(648,)|const|bool
const_9372 = relay.const([-8,-6,5,8,9,-9,-7,2,-4,-3,5,-2,-4,1,8,9,-8,-4,-9,10,-4,-2,2,6,10,-10,-5,-6,-1,4,-3,-5,7,6,4,3,-5,-9,-3,-4,-6,-8,7,1,-2,-9,-7,-8,6,2,9,7,2,-10,-3,-8,9,4,-1,-3,-8,-10,7,-1,3,2,-9,-8,7,4,2,-2,7,6,9,-2,2,-3,-1,3,-10,-10,5,1,-3,1,8,-8,-7,4,-4,2,8,6,-4,5,-5,6,-2,10,-2,3,-6,7,-5,-9,5,6,1,-5,2,-10,5,-5,-10,2,-7,6,-8,-7,3,-4,9,4,-4,6,8,-3,1,2,4,-7,-1,-4,-3,-1,-9,5,-5,-10,7,-4,-2,-2,6,6,7,1,-4,6], dtype = "uint8")#candidate|9372|(150,)|const|uint8
var_9373 = relay.var("var_9373", dtype = "uint8", shape = (900,))#candidate|9373|(900,)|var|uint8
call_9370 = relay.TupleGetItem(func_7009_call(relay.reshape(const_9371.astype('bool'), [12, 6, 9]), relay.reshape(const_9371.astype('bool'), [12, 6, 9]), relay.reshape(const_9372.astype('uint8'), [150,]), relay.reshape(var_9373.astype('uint8'), [10, 15, 6]), relay.reshape(var_9373.astype('float32'), [10, 15, 6]), ), 2)
call_9374 = relay.TupleGetItem(func_7015_call(relay.reshape(const_9371.astype('bool'), [12, 6, 9]), relay.reshape(const_9371.astype('bool'), [12, 6, 9]), relay.reshape(const_9372.astype('uint8'), [150,]), relay.reshape(var_9373.astype('uint8'), [10, 15, 6]), relay.reshape(var_9373.astype('float32'), [10, 15, 6]), ), 2)
func_6724_call = mod.get_global_var('func_6724')
func_6729_call = mutated_mod.get_global_var('func_6729')
call_9375 = relay.TupleGetItem(func_6724_call(relay.reshape(var_9365.astype('int64'), [3, 8, 6]), relay.reshape(var_9365.astype('int64'), [3, 8, 6]), relay.reshape(const_9366.astype('uint32'), [98, 2]), relay.reshape(const_9367.astype('uint8'), [702,]), ), 4)
call_9376 = relay.TupleGetItem(func_6729_call(relay.reshape(var_9365.astype('int64'), [3, 8, 6]), relay.reshape(var_9365.astype('int64'), [3, 8, 6]), relay.reshape(const_9366.astype('uint32'), [98, 2]), relay.reshape(const_9367.astype('uint8'), [702,]), ), 4)
func_8975_call = mod.get_global_var('func_8975')
func_8979_call = mutated_mod.get_global_var('func_8979')
const_9378 = relay.const([[-7.156283],[6.751343],[-9.503056],[-5.239026],[1.620482],[-6.678315],[-4.774754],[-1.523549],[-5.834083],[-7.307901],[-5.261073],[3.644709],[-0.075076],[-2.392227],[9.403093],[5.211855],[-4.618044],[-4.142914],[-8.554828],[7.585868],[3.033087],[1.486734],[6.169060],[4.568327],[-6.974412],[8.431063],[9.790547],[3.151035],[2.429639],[8.589027],[1.955088],[1.160328],[2.624272],[-8.520405],[-4.856537],[-6.191895],[6.204365],[0.084072],[3.428753],[-7.304550],[9.903618],[-7.490441],[3.026291],[-8.353905],[0.679287],[4.125456],[-8.495483],[-2.578354],[8.933273],[1.293313],[1.307067],[5.147559],[3.351723],[1.541536],[-3.079330],[-6.547200],[4.643688],[-7.205486],[-5.136976],[-1.351177],[-8.379593],[-3.777510],[-5.706881],[0.902436],[-9.288230],[3.851639],[-1.521567],[-4.075958],[3.548966],[-9.187776],[-2.177897],[6.912034],[3.445184],[-1.830313],[-2.136584],[-5.205119],[-0.008438],[7.039630],[3.076676],[-4.645485],[8.957998],[6.134317],[9.174453],[-3.538576],[4.207918],[-2.386692],[7.939880],[-2.053941],[4.294826],[0.659371],[2.969611],[5.409454],[-5.900396],[-5.997474],[3.674209],[2.302939],[-4.872772],[-9.135746],[5.437736],[-3.765802],[8.325922],[-0.228352],[3.918786],[1.996346],[6.742497],[-2.789758],[-2.361074],[-5.985548],[7.800543],[2.273661],[-7.072150],[3.077714],[9.340023],[-0.233619],[-9.486140],[-7.157669],[6.204158],[3.646898],[7.456778],[5.209674],[7.760522],[8.925234],[0.685937],[-8.602466],[-1.932025],[8.498540],[9.942912],[8.503467],[-3.250792],[6.481819],[-6.923782],[-6.796820],[-1.120776],[-7.115992],[0.629219]], dtype = "float32")#candidate|9378|(135, 1)|const|float32
var_9379 = relay.var("var_9379", dtype = "float32", shape = (8, 42))#candidate|9379|(8, 42)|var|float32
const_9380 = relay.const([[-5.266672],[-7.620466],[8.141058],[7.373286],[-4.562736],[-4.070892],[8.032130],[-3.508551],[-3.346069],[-9.751387],[-0.928189],[-7.444704],[-0.472823],[5.800831],[2.072633],[2.063809],[9.479139],[1.488131],[-9.126906],[3.014411],[-9.998021],[-4.384752],[-2.963907],[-2.759303],[-8.733251],[1.597828],[4.076565],[5.625786],[-2.307824],[-4.226960],[0.849004],[7.700938],[0.917987],[5.850530],[-3.445510],[-6.190794],[-6.972373],[-3.970717],[9.168952],[1.355042],[1.050812],[-4.434310],[-5.540906],[1.850307],[8.160803],[-2.709438],[7.957135],[7.898791],[-4.402826],[-5.537978],[-3.255013],[0.732537],[9.785681],[4.664443],[-0.474446],[-2.404178],[-3.272895],[-3.174263],[8.833588],[2.805681],[9.257332],[7.931443],[3.928214],[-2.851946],[2.637155],[-0.938483],[8.209006],[-8.202965],[-9.276198],[-1.189299],[-5.928353],[-8.806736],[5.523533],[4.697928],[-2.964772],[0.285914],[-6.145794],[-2.262101],[-7.994401],[9.745279],[-8.643202],[3.149966],[7.522760],[-1.746113],[5.193170],[2.667831],[-4.087733],[-3.380516],[-7.680438],[-2.958198],[-7.114634],[5.945706],[-7.342497],[2.462674],[-5.242493],[-0.150186],[-0.711070],[-4.857072],[7.197295],[9.702139],[1.290397],[-8.181438],[8.110396],[-6.893609],[-8.972187],[-8.587370],[-1.472580],[9.262358],[-8.599384],[2.172300],[5.363992],[7.508075],[2.301434],[9.791544],[-0.304426],[-7.176720],[1.633248],[8.164121],[6.705131],[2.788973],[-8.404567],[1.472739],[4.528860],[3.120442],[4.445260],[-6.829347],[-3.010083],[-6.144810],[9.964277],[-6.381262],[6.477102],[-4.889954],[7.302402],[1.669300],[1.365957],[-7.189669],[-0.852510],[-7.686603],[-9.955518],[0.648813],[4.921691],[-2.531229],[5.131383],[5.986170],[0.683629],[7.296149],[-3.347987],[9.176330],[9.725722],[9.315259],[1.270262],[2.895553],[2.483245],[3.204914],[2.602363],[9.733384],[-4.396621],[8.841073],[-3.774579],[4.229408],[-3.120708],[-3.662552],[-8.117258],[6.833853],[-0.787368],[-2.035920],[-9.875232],[-5.366315],[5.979591],[-3.210298],[-7.887932],[4.116064],[9.952733],[1.031010],[-5.837487],[5.506289],[8.986937],[2.242645],[-2.420954],[4.681902],[8.163574],[-7.466943]], dtype = "float64")#candidate|9380|(182, 1)|const|float64
call_9377 = relay.TupleGetItem(func_8975_call(relay.reshape(const_9378.astype('float32'), [135,]), relay.reshape(var_9379.astype('float32'), [336,]), relay.reshape(const_9380.astype('float64'), [13, 14]), ), 3)
call_9381 = relay.TupleGetItem(func_8979_call(relay.reshape(const_9378.astype('float32'), [135,]), relay.reshape(var_9379.astype('float32'), [336,]), relay.reshape(const_9380.astype('float64'), [13, 14]), ), 3)
uop_9391 = relay.sigmoid(var_9357.astype('float32')) # shape=(1764,)
output = relay.Tuple([call_9354,call_9356,call_9362,const_9363,const_9364,var_9365,const_9366,const_9367,call_9370,const_9371,const_9372,var_9373,call_9375,call_9377,const_9378,var_9379,const_9380,uop_9391,])
output2 = relay.Tuple([call_9355,call_9358,call_9368,const_9363,const_9364,var_9365,const_9366,const_9367,call_9374,const_9371,const_9372,var_9373,call_9376,call_9381,const_9378,var_9379,const_9380,uop_9391,])
func_9403 = relay.Function([var_9357,var_9365,var_9373,var_9379,], output)
mod['func_9403'] = func_9403
mod = relay.transform.InferType()(mod)
var_9404 = relay.var("var_9404", dtype = "bool", shape = (1764,))#candidate|9404|(1764,)|var|bool
var_9405 = relay.var("var_9405", dtype = "int64", shape = (144,))#candidate|9405|(144,)|var|int64
var_9406 = relay.var("var_9406", dtype = "uint8", shape = (900,))#candidate|9406|(900,)|var|uint8
var_9407 = relay.var("var_9407", dtype = "float32", shape = (8, 42))#candidate|9407|(8, 42)|var|float32
output = func_9403(var_9404,var_9405,var_9406,var_9407,)
func_9408 = relay.Function([var_9404,var_9405,var_9406,var_9407,], output)
mutated_mod['func_9408'] = func_9408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mod.get_global_var('func_8730')
func_8732_call = mutated_mod.get_global_var('func_8732')
call_9416 = relay.TupleGetItem(func_8730_call(), 2)
call_9417 = relay.TupleGetItem(func_8732_call(), 2)
output = relay.Tuple([call_9416,])
output2 = relay.Tuple([call_9417,])
func_9466 = relay.Function([], output)
mod['func_9466'] = func_9466
mod = relay.transform.InferType()(mod)
mutated_mod['func_9466'] = func_9466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9466_call = mutated_mod.get_global_var('func_9466')
call_9467 = func_9466_call()
output = call_9467
func_9468 = relay.Function([], output)
mutated_mod['func_9468'] = func_9468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8730_call = mod.get_global_var('func_8730')
func_8732_call = mutated_mod.get_global_var('func_8732')
call_9469 = relay.TupleGetItem(func_8730_call(), 1)
call_9470 = relay.TupleGetItem(func_8732_call(), 1)
func_6742_call = mod.get_global_var('func_6742')
func_6746_call = mutated_mod.get_global_var('func_6746')
var_9473 = relay.var("var_9473", dtype = "float32", shape = (240, 2))#candidate|9473|(240, 2)|var|float32
call_9472 = func_6742_call(relay.reshape(var_9473.astype('float32'), [8, 15, 4]), relay.reshape(var_9473.astype('float32'), [8, 15, 4]), )
call_9474 = func_6742_call(relay.reshape(var_9473.astype('float32'), [8, 15, 4]), relay.reshape(var_9473.astype('float32'), [8, 15, 4]), )
func_2346_call = mod.get_global_var('func_2346')
func_2352_call = mutated_mod.get_global_var('func_2352')
var_9482 = relay.var("var_9482", dtype = "float32", shape = (756,))#candidate|9482|(756,)|var|float32
var_9483 = relay.var("var_9483", dtype = "uint8", shape = (702,))#candidate|9483|(702,)|var|uint8
var_9484 = relay.var("var_9484", dtype = "int8", shape = (768,))#candidate|9484|(768,)|var|int8
call_9481 = relay.TupleGetItem(func_2346_call(relay.reshape(var_9482.astype('float32'), [7, 9, 12]), relay.reshape(var_9482.astype('float32'), [7, 9, 12]), relay.reshape(var_9483.astype('uint8'), [702,]), relay.reshape(var_9484.astype('int8'), [64, 12]), ), 5)
call_9485 = relay.TupleGetItem(func_2352_call(relay.reshape(var_9482.astype('float32'), [7, 9, 12]), relay.reshape(var_9482.astype('float32'), [7, 9, 12]), relay.reshape(var_9483.astype('uint8'), [702,]), relay.reshape(var_9484.astype('int8'), [64, 12]), ), 5)
func_3467_call = mod.get_global_var('func_3467')
func_3470_call = mutated_mod.get_global_var('func_3470')
const_9514 = relay.const([8,-6,-8,10,-1,4,-2,-9,8,4,-7,-10,6,7,4,5,-7,4,3,9,-5,-7,7,9,3,-1,-10,3,4,4,-4,-7,1,10,9,8,-4,1,1,9,3,6,10,-3,-9,-2,7,8,1,4,9,4,-6,-3,8,3,-1,-7,8,7,7,4,7,2,10,-9,-7,-10,-1,2,-6,-1,3,2,-9,1,-6,-2,7,-2,1,7,8,2,4,-9,2,9,-1,9,8,8,4,-9,-5,9,-4,-5,-6,2,-5,-2,2,-2,-2,4,10,-6,-3,7,-7,5,5,-4,9,2,-6,10,-6,10,3,10,8,-8,-2,-1,1,8,6,-10,-7,-10,7,-10,2,4,6,7,-1,-6,-9,-10,1,-10,-2,-3,-3,2,2,-4,6,10,-2,-7,-3,6,8,-4,-5,-7,5,8,2,7,-3,-8,10,2,-4,-5,-2,1,-8,-10,-9,2,6,1,1,3,10,-5,-9,2,-8,2,-9,-1,-8,-2,7,-3,5,2,-4,1,6,4,-5,-1,-5,-4,-6,1,-5,10,-6,-6,9,-8,2,-6,-7,6,-9,4,1,-6,2,-10,-10,-10,5,9,1,6,-7,2,5,6,6,-5,10,6,1,-1,-10,9,-7,1,6,-1,-4,-8,4,2,-6,9,-10,-1,4,-2,-3,2,-9,-7,-2,1,5,6,5,-7,7,-8,2,-10,1,1,-4,5,-5,10,3,5,1,5,-9,7,-10,-7,-2,1,10,7,-6,-9,5,10,1,5,-7,9,3,-4,-1,-9,9,-6,3,-4,8,-10,3,10,-7,9,5,2,4,-5,8,-9,4,-7,-1,-6,4,-1,-5,-4,-7,-6,9,-2,-3,-9,1,-7,3,1,-5,-4,-10,10,9,-10,5,1,-2,-8,-2,-8,-4,7,1,3,3,-6,4,2,8,-2,-8,8,7,-6,2,1,1,5,-4,-7,-8,3,9,-5,-7,-9,-9,-6,-2,5,-8,-1,-2,8,-7,-6,8,-6,7,3,10,1,-10,8,-9,9,7,4,-8,-7,9,-1,5,3,1,-5,1,-2,5,6,-1,1,7,-9,-10,-2,-2,-8,-10,-8,-9,4,1,3,-6,-9,-4,-6,8,5,-4,8,8,2,7,9,-4,-7,6,2,7,-10,-4,1,4,1,-1,-5,-7,6,-8,1,5,1,-8,-5,6,7,4,3,3,7,5,2,-10,7,3,-3,7,-10,-9,-9,2,7,3,-5,4,-2,-5,-10,-5,4,6,-6,3,8,-3,-7,5,1,1,-6,-8,-3,-3,8,1,-5,9,-2,7,4,-6,-7,4,1,-5,-10,7,6,8,7,-5,-6,4,-9,-7,5,6,6,-1,5,6,-7,-1,-3,6,-6,-2,9,10,1,3,-1,-7,6,6,3,9,4,-4,6,-7,-3,9,-9,2,-6,-5,1,-6,9,10,-3,-2,6,-4,-6,-9,1,2,6,-9,6,-1,-7,6,8,-8,3,-10,5,-5,4,-3,3,7,9,4,-4,-4,4,7,-6,-5,-4,-9,-6,4,-2,8,-2,5,-3,-9,-3,-5,5,-9,6,9,8,3,-6,-7,-5,4,-8,-1,5,7,4,-7,6,9,1,-6,-10,4,-7,4,5,-7,4,-5,9,1,8,2,3,7,-1,-2,1,9,-6,-8,-9,-4,-5,6,-3,-7,4,-4,-3,10,4,-7,9,-5,-8,-7,-9,2,2,-10,-6,5,-8,-8,9,-7,9,10,-9,-4,-7,6,2,2,7,-6,-10,-4,9,1,9,3,-3,7,-7,9,-9,-1,-2,-4,6,-3,-2,-5,8,-3,4,-6,-8,-9,3,2,-4,5,-8,6,-1,-10,-7,-6,-3,-1,-4,3,9,8,1,-3,4,2,7,8,6,-8,5,7,2,6,-4,-7,-3,2,8,-3,-3,4,3,-5,10,-2,-9,4,9,-9,-10,-6,3,1,3,-4,6,-6,10,10,7,6,2,-9,-1,-4,5,6,-7,-9,-10,7,-3,-7,-4,-4,8,7,3,9,-4,-6,2,-7,10,7,1,8,-9,-8,1,-6,-3,6,-8,-9,-9,-1,9,-8,-8,-1,-3,4,3,6,3,2,4,-1,5,7,4,-7,-10,4,-3,6,3,7,1,9,-3,9,10,-2,-9,-1,6,8,4,-3,-4,-1,10,-4,-1,-4,-5,-4,2,-2,-4,4,10,8,-1,-8,-2,5,-9,3,-3,8,10,2,9,-3,-6,5,-8,-9,5,-5,8,-9,8,-9,-8,8,1,2,-4,3,1,-4,-4,-9,10,-8,-3,-7,10,1,-3,8,8,3,4,-10,7,-5,8,-2,7,9,8,2,-10,-9,-1,-8,-8,9,-9,8,-4,7,-8,-2,-8,6,5,-7,10,-1,-3,-8,-9,3,-5,-4,-8,2,-9,-1,-5,6,-5,-8,-10,-4,7,-4,-8,-6,9,-5,-10,-3,1,-9,-10,-10,-7,10,7,-10,7,-1,-2,9,7,-10,-2,8,-8,-2,2,-3,-10,8,-8,-2,-4,-9,1,2,3,7,-7,-9,-3,-5,-4,-6,1,2,4,-4,8,-9,-3,-7,4,-2,-10,-8,-3,-8,9,-3,-9,2,10,4,-9,-5,3,-9,-5,-8,1,7,-6,4,10,10,2,-3,-9,-8,-9,1,4,-8,10,-3,-1,8,5,7,-7,5,8,-2,4,-5,5,-6,7,-10,-2,-9,-5,-4,-7,8,-7,-7,-10,4,-1,8,5,8,9,-9,3,8,5,10,3,9,-10,7,-5,3,-9,5,6,8,-1,8,4,-6,8,-2,6,2,-6,-4,-9,-1,10,4,9,-1,8,-6,7,-3,10,7,7,-9,-10,7,4,10,2,-9,-6,1,2,-8,1,-6,-9,6,4,-10,-2,4,5,-9,-7,-7,-1,-7,-8,-1,-6,-2,10,2,3,8,1,1,-7,-4,-9,7,9,-2,-9,-10,10,4,9,-5,10,-8,-7,-8,9,1,2,7,-4,-10,10,1,-1,-1,1,-3,-9,-1,-1,-3,8,8,3,-3,4,1,-3,-5,5,5,4,-6,-8,-1,3,-9,9,-3,5,-9,-9,-5,3,9,8,6,9,-6,7,5,-3,-5,4,-7,5,-7,8,-9,4,1,-9,3,-6,-4,-8,7,5,-6,-1,9,-8,-10,-10,9,4,-5,6,-2,7,-9,7,6,7,3,2], dtype = "uint32")#candidate|9514|(1200,)|const|uint32
call_9513 = relay.TupleGetItem(func_3467_call(relay.reshape(const_9514.astype('uint32'), [5, 15, 16]), relay.reshape(var_9483.astype('uint8'), [702,]), ), 3)
call_9515 = relay.TupleGetItem(func_3470_call(relay.reshape(const_9514.astype('uint32'), [5, 15, 16]), relay.reshape(var_9483.astype('uint8'), [702,]), ), 3)
uop_9531 = relay.log(var_9483.astype('float64')) # shape=(702,)
output = relay.Tuple([call_9469,call_9472,var_9473,call_9481,var_9482,var_9484,call_9513,const_9514,uop_9531,])
output2 = relay.Tuple([call_9470,call_9474,var_9473,call_9485,var_9482,var_9484,call_9515,const_9514,uop_9531,])
func_9540 = relay.Function([var_9473,var_9482,var_9483,var_9484,], output)
mod['func_9540'] = func_9540
mod = relay.transform.InferType()(mod)
var_9541 = relay.var("var_9541", dtype = "float32", shape = (240, 2))#candidate|9541|(240, 2)|var|float32
var_9542 = relay.var("var_9542", dtype = "float32", shape = (756,))#candidate|9542|(756,)|var|float32
var_9543 = relay.var("var_9543", dtype = "uint8", shape = (702,))#candidate|9543|(702,)|var|uint8
var_9544 = relay.var("var_9544", dtype = "int8", shape = (768,))#candidate|9544|(768,)|var|int8
output = func_9540(var_9541,var_9542,var_9543,var_9544,)
func_9545 = relay.Function([var_9541,var_9542,var_9543,var_9544,], output)
mutated_mod['func_9545'] = func_9545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8280_call = mod.get_global_var('func_8280')
func_8282_call = mutated_mod.get_global_var('func_8282')
call_9576 = relay.TupleGetItem(func_8280_call(), 0)
call_9577 = relay.TupleGetItem(func_8282_call(), 0)
func_1698_call = mod.get_global_var('func_1698')
func_1700_call = mutated_mod.get_global_var('func_1700')
const_9579 = relay.const([[8.184302,7.732915,8.931191,-8.006780,-2.979441,-3.359763,9.420528,0.675193,9.399297,-6.556689,2.893690,3.693686,-1.028646,-9.503316,-4.518353,-8.432900,8.239797,0.776678,-6.380338,5.167781,-2.710368,8.206863,-8.573870,-9.787431,6.180690,-8.297394,-2.969457,-3.008134,-6.148789,8.726560,-0.555105,4.422823,-5.706443,-0.950642,-2.646133,8.844024,7.520433,-9.285631,9.259771,5.948188,5.297545,-8.344103,-6.672473,7.710893,9.788760,3.956319,-0.840956,7.060929,5.261768,5.302353,1.552557,-4.090818,0.826044,-3.854886,-4.715257,-0.584550,-9.871773,7.385370,4.936851,0.275545,-1.045200,-2.071768,0.959974,2.715871,-2.642465,-6.118611,1.711167,-8.680216,-6.282050,7.499003,7.143086,-3.053646,-1.239643,-7.579057,-7.514955,-1.137684,-3.599991,7.965393,-6.961984,-9.778578,4.908373,0.424287,-4.605161,-1.901618,-0.976250,4.870877,3.527304,1.101136,2.550143,1.067206,-6.209831,-2.871436,0.046764,-0.829271,-8.642106,-2.638224,-0.674174,-4.058691,4.996114,3.001684,0.947947,7.487096,-7.702545,-8.790775,-0.857043,-8.852148,-8.080477,7.977429,-7.012614,0.723637,8.296615,4.993560,6.738312,-1.302638,-7.117653,2.677487,-8.174507,-1.527908,3.257900,-8.906540,-8.719490,-1.468893,-7.577086,-1.200784,-5.809376,7.193900,0.683643,1.293361,2.455256,-2.112694,3.635306,6.727771,-5.352545,-6.479158,-8.161594]], dtype = "float32")#candidate|9579|(1, 135)|const|float32
call_9578 = relay.TupleGetItem(func_1698_call(relay.reshape(const_9579.astype('float32'), [3, 5, 9])), 0)
call_9580 = relay.TupleGetItem(func_1700_call(relay.reshape(const_9579.astype('float32'), [3, 5, 9])), 0)
var_9586 = relay.var("var_9586", dtype = "float32", shape = (2, 135))#candidate|9586|(2, 135)|var|float32
bop_9587 = relay.greater(const_9579.astype('bool'), var_9586.astype('bool')) # shape=(2, 135)
func_471_call = mod.get_global_var('func_471')
func_474_call = mutated_mod.get_global_var('func_474')
var_9596 = relay.var("var_9596", dtype = "float64", shape = (182,))#candidate|9596|(182,)|var|float64
call_9595 = relay.TupleGetItem(func_471_call(relay.reshape(var_9596.astype('float64'), [1, 14, 13])), 0)
call_9597 = relay.TupleGetItem(func_474_call(relay.reshape(var_9596.astype('float64'), [1, 14, 13])), 0)
func_508_call = mod.get_global_var('func_508')
func_510_call = mutated_mod.get_global_var('func_510')
var_9609 = relay.var("var_9609", dtype = "float64", shape = (120,))#candidate|9609|(120,)|var|float64
call_9608 = func_508_call(relay.reshape(var_9609.astype('float64'), [4, 15, 2]))
call_9610 = func_508_call(relay.reshape(var_9609.astype('float64'), [4, 15, 2]))
bop_9619 = relay.power(call_9578.astype('float32'), relay.reshape(const_9579.astype('float32'), relay.shape_of(call_9578))) # shape=(3, 5, 9)
bop_9622 = relay.power(call_9580.astype('float32'), relay.reshape(const_9579.astype('float32'), relay.shape_of(call_9580))) # shape=(3, 5, 9)
output = relay.Tuple([call_9576,bop_9587,call_9595,var_9596,call_9608,var_9609,bop_9619,])
output2 = relay.Tuple([call_9577,bop_9587,call_9597,var_9596,call_9610,var_9609,bop_9622,])
func_9623 = relay.Function([var_9586,var_9596,var_9609,], output)
mod['func_9623'] = func_9623
mod = relay.transform.InferType()(mod)
var_9624 = relay.var("var_9624", dtype = "float32", shape = (2, 135))#candidate|9624|(2, 135)|var|float32
var_9625 = relay.var("var_9625", dtype = "float64", shape = (182,))#candidate|9625|(182,)|var|float64
var_9626 = relay.var("var_9626", dtype = "float64", shape = (120,))#candidate|9626|(120,)|var|float64
output = func_9623(var_9624,var_9625,var_9626,)
func_9627 = relay.Function([var_9624,var_9625,var_9626,], output)
mutated_mod['func_9627'] = func_9627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9239_call = mod.get_global_var('func_9239')
func_9240_call = mutated_mod.get_global_var('func_9240')
call_9705 = func_9239_call()
call_9706 = func_9239_call()
output = relay.Tuple([call_9705,])
output2 = relay.Tuple([call_9706,])
func_9722 = relay.Function([], output)
mod['func_9722'] = func_9722
mod = relay.transform.InferType()(mod)
output = func_9722()
func_9723 = relay.Function([], output)
mutated_mod['func_9723'] = func_9723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9212_call = mod.get_global_var('func_9212')
func_9213_call = mutated_mod.get_global_var('func_9213')
call_9849 = func_9212_call()
call_9850 = func_9212_call()
output = call_9849
output2 = call_9850
func_9858 = relay.Function([], output)
mod['func_9858'] = func_9858
mod = relay.transform.InferType()(mod)
output = func_9858()
func_9859 = relay.Function([], output)
mutated_mod['func_9859'] = func_9859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9722_call = mod.get_global_var('func_9722')
func_9723_call = mutated_mod.get_global_var('func_9723')
call_9882 = relay.TupleGetItem(func_9722_call(), 0)
call_9883 = relay.TupleGetItem(func_9723_call(), 0)
func_1237_call = mod.get_global_var('func_1237')
func_1239_call = mutated_mod.get_global_var('func_1239')
const_9885 = relay.const([-3,-8,-7,-5,-2,10,-6,-1,-2,-8,-9,6,6,7,2,-8,4,-3,4,1,9,-2,-4,-9,-7,7,-5,-1,9,-6,1,-5,-10,6,-6,-10,6,-1,6,-7,10,-8,9,3,1,-8,-5,-7,-1,1,-10,4,4,6,-7,2,9,2,1,-5,-9,5,5,-1,5,-6,2,10,-7,-7,-1,4,10,7,5,4,-6,8,-10,-8,10,9,5,-1,8,-9,-6,9,2,9,-10,9,-3,9,-7,-10,2,10,-1,-2,-8,7,5,-2,-4,4,6,-1,-2,6,-7,6,-8,-9,-7,9,1,9,-2,2,-4,9,10,2,-10,1,5,-9,2,-3,8,-4,7,-4,8,4,-2,5,7,-6,-4,-6,-2,3,4,5,-9,8,4,-7,-8,6,8,-4,7,-1,6,-1,4,-2,-9,8,-8,5,10,6,-3,-10,4,-5,5,-5,3,7,9,8,8,7,4,-8,4,-10,6,9,5,4,-7,-9,4,-10,7,2,-3,1,-1,-2,3,-3,4,-1,-3,7,6,2,3,-5,-3,-6,-6,-6,6,-3,9,-7,7,2,-5,-1,6,-10,-9,-9,-2,9,-4,4,-10,-10,-2,-2,7,10,-2,2,6,6,9,-8,-4,6,1,-9,-8,3,-8,-10,10,4,2,-1,9,6,5,-6,2,-9,5,-7,9,-4,5,-9,-5,7,10,-6,5,7,-7,-9,9,3,5,7,-7,10,-5,7,3,-5,-3,-4,-6,-8,-5,1,6,8,-1,-7,5,2,-8,10,-4,6,10,6,2,7,5,-3,-2,-4,7,-3,1,-4,4,-2,-1,-6,10,-4,-9,2,-9,-5,-8,-3,-10,-1,10,10,9,4,2,-8,-5,-5,-3,6,-1,-2,10,6,-10,1,-2,7,4,-1,3,-9,2,-3,-2,-7,-2,4,4,3,6,-5,-4,-10,-6,-7,10,9,1,-9,5,-7,-6,-10,-10,-4,5,-7,-4,1,7,10,3,3,3,6,9,4,4,-4,7,1,9,-4,4,-4,-1,-2,4,-10,-7,-3,-10,2,1,8,-5,-1,-8,1,8,5,-8,8,4,8,-4,8,8,-10,7,8,-9,-8,3,9,3,-5,-2,-4,8,-10,3,-8,9,3,-6,-7,1,9,3,9,3,10,6,-4,5,9,-1,2,-5,-5,5,3,7,2,-4,-9,-7,-4,2,9,1,7,5,1,4,10,-8,-5,-8,5,10,-7,-3,-9,-9,2,8,-2,-1,-4,7,-2,8,-9,6,6,-10,-2,6,-5,2,4,9,3,-7,2,-1,-2,-4,3,7,-8,2,7,3,-2,-3,7,2,-1,6,-6,2,4,-7,7,-6,-10,-7,6,-10,9,5,-5,-3,-6,4,6,8,-1,6,-10,5,1,-6,3,5,7,-7,7,-1,-1,-6,8,-6,2,10,-4,-9,-8,2,-1,5,-9,10,-4,-2,5,-9,-2,5,7,-6,-10,-4,2,-4,-4,-10,-3,2,1,-2,10,1,-6,-7,-10,4,10,2,5,-2,5,6,2,5,10,2,-9,-5,7,-10,5,-1,-1,6,9,6,9,3,-10,5,-4,-9,9,-9,-5,7,10,-6,1,8,-9,-3,8,8,-4,7,1,2,1,-8,10,-8,-3,3,6,3,10,4,4,8,-6,-8,3,8,-1,2,-4,-4,-7,-1,10,10,2,10,5,-3,-4,-1,1,3,-8,5,-7,10,-8,1,-7,-10,5,4,-9,-3,10,-10,-3,-4,7,-4,-10,10,-5,8,2,-10,9,8,-3,-10,5,5,-2,1,-10,-4,9,-10,7,-6,-5,5,-2,-3,4,-9,3,6,-5,-5,-2,-7,4,-5,7,-9,8,8,7,-5,5,1,-8,-3,4,7,-8,-6,4,-3,-1,-3,8,-10,-3,7,1,-7,-5,-1,10,-4,6,1,1,1,6,-2,-5,9,-9,7,-4,-8,-9,-9,-1,-7,3,7,4,8,1,-6,2,6,4,1,10,-1,10,-7,-3,8,-6,1,-10,-2,7,-7,5,-2,9], dtype = "int8")#candidate|9885|(768,)|const|int8
call_9884 = relay.TupleGetItem(func_1237_call(relay.reshape(const_9885.astype('int8'), [16, 12, 4])), 0)
call_9886 = relay.TupleGetItem(func_1239_call(relay.reshape(const_9885.astype('int8'), [16, 12, 4])), 0)
bop_9912 = relay.multiply(call_9884.astype('uint64'), relay.reshape(const_9885.astype('uint64'), relay.shape_of(call_9884))) # shape=(16, 12, 4)
bop_9915 = relay.multiply(call_9886.astype('uint64'), relay.reshape(const_9885.astype('uint64'), relay.shape_of(call_9886))) # shape=(16, 12, 4)
func_9116_call = mod.get_global_var('func_9116')
func_9117_call = mutated_mod.get_global_var('func_9117')
call_9917 = func_9116_call()
call_9918 = func_9116_call()
func_9212_call = mod.get_global_var('func_9212')
func_9213_call = mutated_mod.get_global_var('func_9213')
call_9919 = func_9212_call()
call_9920 = func_9212_call()
func_9288_call = mod.get_global_var('func_9288')
func_9290_call = mutated_mod.get_global_var('func_9290')
call_9921 = func_9288_call()
call_9922 = func_9288_call()
func_471_call = mod.get_global_var('func_471')
func_474_call = mutated_mod.get_global_var('func_474')
const_9927 = relay.const([-1.323113,6.946447,-9.214854,-0.553103,-4.821550,9.420083,5.828710,0.562430,8.883882,5.691196,-8.419561,9.691897,-3.404251,-3.475543,9.258242,-5.555975,8.853119,9.472599,6.130764,-4.259197,-4.084666,2.627057,-9.907856,0.443821,-4.527391,-6.033558,-4.649099,2.879163,2.573747,8.965683,2.331548,2.908001,5.604932,9.651794,-3.996872,-6.664170,7.741953,-5.553478,-2.366224,0.486935,-5.044762,0.392382,3.507478,5.290500,8.805615,9.301456,-4.522601,8.147407,6.927060,4.776678,7.330519,-6.174167,2.235272,-4.619794,-7.952758,-8.941038,0.567528,-8.634324,9.395766,-5.101077,-1.710771,5.272702,-9.612735,-1.994643,3.561821,2.186200,0.752734,0.139699,-7.510715,1.000060,6.053484,-0.389225,1.460938,-4.966442,-3.062185,1.783276,-7.048762,-6.785701,-6.304896,7.227632,-5.362169,-1.053785,-4.323454,-0.199336,1.416496,-9.718925,-7.430574,9.862809,7.552841,-7.616283,-4.270430,-0.573820,-9.557094,5.153769,3.586693,6.690102,0.728944,7.524214,8.892482,4.733947,8.194345,-0.721332,-6.871032,-5.459440,1.239472,5.630879,-9.056101,-7.026955,-0.440926,5.592148,-5.759433,1.083313,-6.905782,-7.572747,1.638288,-2.814263,0.507422,-0.674340,0.942338,4.181522,8.740272,-6.603997,-1.887005,-9.195089,0.388611,-5.615568,-1.694207,5.006439,-1.493137,7.399500,1.301162,8.660047,-7.703468,-8.199044,-6.272735,-0.051201,9.050293,1.507368,8.292781,-5.977643,-9.959600,9.793038,8.773541,8.542848,-8.495924,9.432353,7.694980,-6.432225,-0.100009,8.362572,-8.914709,-3.026997,-0.074764,5.315023,1.930922,-3.042368,-5.891440,0.200729,9.105479,9.432297,5.391661,2.572357,1.537207,-2.901004,8.162202,-1.030950,0.646530,1.927802,3.644107,7.635149,-2.893669,-4.749666,6.515236,-4.244650,-1.893255,-3.250606,-0.935772,-3.638173,2.965688,5.504784,-5.534629,-2.312079], dtype = "float64")#candidate|9927|(182,)|const|float64
call_9926 = relay.TupleGetItem(func_471_call(relay.reshape(const_9927.astype('float64'), [1, 14, 13])), 0)
call_9928 = relay.TupleGetItem(func_474_call(relay.reshape(const_9927.astype('float64'), [1, 14, 13])), 0)
func_9858_call = mod.get_global_var('func_9858')
func_9859_call = mutated_mod.get_global_var('func_9859')
call_9940 = func_9858_call()
call_9941 = func_9858_call()
func_8280_call = mod.get_global_var('func_8280')
func_8282_call = mutated_mod.get_global_var('func_8282')
call_9945 = relay.TupleGetItem(func_8280_call(), 2)
call_9946 = relay.TupleGetItem(func_8282_call(), 2)
output = relay.Tuple([call_9882,bop_9912,call_9917,call_9919,call_9921,call_9926,const_9927,call_9940,call_9945,])
output2 = relay.Tuple([call_9883,bop_9915,call_9918,call_9920,call_9922,call_9928,const_9927,call_9941,call_9946,])
func_9949 = relay.Function([], output)
mod['func_9949'] = func_9949
mod = relay.transform.InferType()(mod)
mutated_mod['func_9949'] = func_9949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9949_call = mutated_mod.get_global_var('func_9949')
call_9950 = func_9949_call()
output = call_9950
func_9951 = relay.Function([], output)
mutated_mod['func_9951'] = func_9951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9466_call = mod.get_global_var('func_9466')
func_9468_call = mutated_mod.get_global_var('func_9468')
call_9952 = relay.TupleGetItem(func_9466_call(), 0)
call_9953 = relay.TupleGetItem(func_9468_call(), 0)
output = call_9952
output2 = call_9953
func_9960 = relay.Function([], output)
mod['func_9960'] = func_9960
mod = relay.transform.InferType()(mod)
output = func_9960()
func_9961 = relay.Function([], output)
mutated_mod['func_9961'] = func_9961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8373_call = mod.get_global_var('func_8373')
func_8375_call = mutated_mod.get_global_var('func_8375')
call_10056 = relay.TupleGetItem(func_8373_call(), 0)
call_10057 = relay.TupleGetItem(func_8375_call(), 0)
func_1056_call = mod.get_global_var('func_1056')
func_1059_call = mutated_mod.get_global_var('func_1059')
const_10059 = relay.const([[2,-10,-9,6,6,4,-5,4,4,-7,-4,-6,6,5,-9,-6,5,7,4,2,3,1,3,-7,-9,-9,1,1,-1,5,-5,10,-6,4,2,2,-3,5,-8,1,9,10,7,1,-10,-7,-9,5,-6,7,-6,-3,-4,5,3,1,7,-3,-5,-2,5,9,8,9,-4,4,-7,-9,7,5,1,1,-9,4,-3,8,8,1,-5,2,9,9,4,9,3,3,-9,-4,1,2,-4,1,10,-8,2,-4,7,-9,3,-6,9,10,4,-6,-4,8,-9,-2,10,-5,1,5,5,2,-9,2,-6,8,10,4,2,-6,2,1,-7,6,8,-7,-5,-10,-7,-4,7,-4,6,5,-1,-9,6,-7,-10,2,-4,10,-5,-6,3,5,4,10,-7,-7,3,-3,10,3,-3,-6,1,-6,6,-1,2,10,-7,-5,5,-5,10,7,-8,-9,-5,-7,3,-5,7,-10,3,-6,-2,7,3,-4,-1,-4,-3,-1,-10,-7,4,-3,-9,2,5,-4,-9,4,4,6,3,8,4,6,-10,8,4,-6,8,-5,-6,-2,2,6,6,-3,3,-4,-9,-3,-1,4,4,-8,-8,7,-4,6,5,-1,-3,7,-4,-2,-1,-3,-6,8,6,4,1,-5,-10,-10,-4,-5,5,-2,-3,5,1,-6,6,-9,-2,-6,6,-9,-6,-1,-1,-7,8,-9,-6,-7,-4,-4,-9,-5,-7,5,6,-10,-6,-3,9,7,-1,-10,-1,-6,10,-9,4,-9,7,-6,9,-5,9,3,-8,-7,7,8,4,4,3,-10,-9,9,4,-1,3,7,-4,2,-1,2,6,-5,-1,2,-6,10,3,1,7,10,8,2,10,-5,-10,-10,-5,7,-5,2,5,-7,3,6,10,10,5,-1,5,-7,-2,-3,1,-5,-1,10,-8,4,6,3,-8,-5,6,-10,-1,8,-4,-2,-3,3,-3,9,9,7,5,-1,-3,-8,4,10,2,1,-10,-1,2,-8,7,8,-3,3,-3,3,-3,-4,6,4,-9,6,-8,4,-10,-6,-2,-5,9,2,-4,-7,5,-6,5,-1,-5,-6,3,-4,2,2,-2,8,-4,-5,-7,-7,-4,-5,1,3,-4,-10,1,-2,1,7,-10,7,9,-4,4,1,2,-9,4,10,3,5,-1,-6,-10,10,-10,-7,10,-5,3,-4,-2,2,9,3,10,-5,-4,5,-6,7,-3,4,6,-10,7,-5,-9,6,9,-1,7,1,-8,7,-3,-1,9,-2,7,3,7,5,-7,5,10,6,-9,1,3,-3,-4,-3,-10,-7,6,-10,-2,-1,6,6,10,-3,6,8,4,6,-4,3,5,-10,2,5,5,-4,2,6,1,-10,-3,-8,10,7,4,-7,-9,-1,-6,-4,4,9,5,5,5,7,-4,9,1,-7,5,6,-8,5,-5,5,5,5,-1,8,-6,6,-1,3,10,-7,-3,-8,-9,-4,-10,-6,-5,6,9,-2,8,6,-2,1,10,-6,10,5,7,-6,10,-1,-10,9,-1,-6,-8,10,3,3,-9,8,2,-9,-5,-5,6,8,-3,7,9,-4,-6,-10,-6,-4,-1,-4,-8,-4,-9,-7,-7,1,3,3,-1,-10,9,-8,2,-10,6,8,7,4,2,-9,6,6,-7,-3,6,-5,-5,10,5,-10,1,3,-9,4,-10,-10,-4,-8,-5,-9,-6,6,7,7,-5,3,7,6,4,-9,4,1,-4,-6,9,2,10,-7,5,1,2,-7,-9,-5,4,7,1,-3,8,8,7,-3,7,5,3,-1,9,4,-5,-9,2,7,6,2,1,1,7,6,5,5,7,-3,-6,-4,-7,-9,1,-4,-6,-10,4,5,-7,-7]], dtype = "uint8")#candidate|10059|(1, 702)|const|uint8
call_10058 = relay.TupleGetItem(func_1056_call(relay.reshape(const_10059.astype('uint8'), [6, 9, 13]), relay.reshape(const_10059.astype('uint8'), [6, 9, 13]), ), 2)
call_10060 = relay.TupleGetItem(func_1059_call(relay.reshape(const_10059.astype('uint8'), [6, 9, 13]), relay.reshape(const_10059.astype('uint8'), [6, 9, 13]), ), 2)
output = relay.Tuple([call_10056,call_10058,const_10059,])
output2 = relay.Tuple([call_10057,call_10060,const_10059,])
func_10073 = relay.Function([], output)
mod['func_10073'] = func_10073
mod = relay.transform.InferType()(mod)
output = func_10073()
func_10074 = relay.Function([], output)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8280_call = mod.get_global_var('func_8280')
func_8282_call = mutated_mod.get_global_var('func_8282')
call_10100 = relay.TupleGetItem(func_8280_call(), 1)
call_10101 = relay.TupleGetItem(func_8282_call(), 1)
uop_10108 = relay.asinh(call_10100.astype('float64')) # shape=(5, 14, 13)
uop_10110 = relay.asinh(call_10101.astype('float64')) # shape=(5, 14, 13)
func_9029_call = mod.get_global_var('func_9029')
func_9031_call = mutated_mod.get_global_var('func_9031')
call_10117 = func_9029_call()
call_10118 = func_9029_call()
output = relay.Tuple([uop_10108,call_10117,])
output2 = relay.Tuple([uop_10110,call_10118,])
func_10137 = relay.Function([], output)
mod['func_10137'] = func_10137
mod = relay.transform.InferType()(mod)
output = func_10137()
func_10138 = relay.Function([], output)
mutated_mod['func_10138'] = func_10138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9960_call = mod.get_global_var('func_9960')
func_9961_call = mutated_mod.get_global_var('func_9961')
call_10155 = func_9960_call()
call_10156 = func_9960_call()
output = relay.Tuple([call_10155,])
output2 = relay.Tuple([call_10156,])
func_10170 = relay.Function([], output)
mod['func_10170'] = func_10170
mod = relay.transform.InferType()(mod)
output = func_10170()
func_10171 = relay.Function([], output)
mutated_mod['func_10171'] = func_10171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9960_call = mod.get_global_var('func_9960')
func_9961_call = mutated_mod.get_global_var('func_9961')
call_10184 = func_9960_call()
call_10185 = func_9960_call()
func_9116_call = mod.get_global_var('func_9116')
func_9117_call = mutated_mod.get_global_var('func_9117')
call_10186 = func_9116_call()
call_10187 = func_9116_call()
func_2346_call = mod.get_global_var('func_2346')
func_2352_call = mutated_mod.get_global_var('func_2352')
var_10195 = relay.var("var_10195", dtype = "float32", shape = (756,))#candidate|10195|(756,)|var|float32
var_10196 = relay.var("var_10196", dtype = "uint8", shape = (702,))#candidate|10196|(702,)|var|uint8
const_10197 = relay.const([9,-10,-5,-4,9,2,-9,-8,-2,7,-4,1,-7,-5,4,-6,-9,-1,-7,-3,-5,8,9,-10,4,4,-10,1,1,-10,-9,-9,-5,5,5,8,2,-4,1,-3,-1,7,5,-1,-2,-1,-7,9,1,4,3,-6,8,-7,5,-6,-8,2,-8,10,-3,-3,3,4,8,-2,10,8,-1,8,5,-4,8,-6,8,8,-9,4,3,-8,6,3,-7,5,-6,-3,9,-3,3,5,7,5,-4,-10,6,9,-7,9,5,-3,9,1,-5,-6,6,-2,-3,-1,-7,-6,-6,-5,9,-8,-8,-5,-6,4,1,-10,1,9,10,-1,-10,7,3,-10,8,9,8,-2,2,-4,5,-1,-5,-10,-2,-9,9,-2,-2,7,10,-5,-1,1,-2,-8,10,-5,2,9,8,8,-7,-2,-3,-8,-6,-3,7,-10,-10,8,-8,4,-8,-5,2,8,6,-8,-10,3,-9,-10,-10,-7,-1,-10,-8,10,-9,4,10,3,-1,-4,9,-4,-4,7,9,4,-1,-8,3,6,-4,-3,10,10,-9,2,-2,8,-5,9,1,3,-2,-2,10,6,8,-10,-7,2,5,-6,2,-4,-9,10,-8,5,-3,-6,-4,-9,-2,-3,-9,7,-8,-4,4,-7,1,-4,-10,3,-5,6,-9,-4,-4,-2,-1,-9,-1,-9,-9,10,4,2,-3,7,4,-9,-10,6,1,7,6,-3,6,-3,-8,6,-7,8,-5,-9,-8,-10,1,-2,-3,-6,-4,-7,1,-7,3,5,-4,-1,5,6,8,4,3,4,3,-8,-9,7,-6,-2,-10,10,-9,-2,1,-10,5,8,9,7,-2,-1,1,2,4,8,-3,5,9,8,7,-9,-3,-4,9,-4,-6,3,-5,-5,-10,-1,1,-7,-7,-2,-5,7,-10,-8,-2,-1,9,6,-8,3,3,-3,3,-7,-4,-5,2,7,-4,-10,-9,-7,-2,4,-5,9,4,4,-3,8,-2,8,-6,3,-10,-6,-3,-9,5,8,-2,-10,1,4,5,-1,6,10,-4,1,7,3,10,8,5,7,-2,-6,1,7,3,-2,9,10,-4,-5,10,-2,10,-8,-5,-6,10,-10,-1,6,4,4,9,-7,7,-7,-10,7,-8,-8,-8,9,-6,10,5,3,3,3,1,8,-1,-5,3,-4,-7,-5,9,-4,5,4,9,9,5,7,-3,-4,-9,7,8,-4,-6,-9,-4,-9,8,-9,1,10,-2,-9,-3,9,-1,3,-10,6,9,10,-10,-2,-2,-7,1,-6,6,7,-10,1,-5,-1,-5,-10,2,-8,8,-3,3,1,9,4,-3,-5,9,4,-2,8,2,2,5,10,-7,4,-3,3,-2,-7,10,-10,8,1,-9,-9,-7,6,-8,7,-9,7,-6,6,-9,-5,-5,-8,-6,-6,7,7,6,-8,-10,-2,-6,5,-1,-9,3,9,-8,-2,-5,-1,-2,8,2,4,1,-4,-7,6,-9,-10,1,-2,-8,5,-1,-8,7,-2,-2,-4,2,-9,-9,1,-1,2,-2,-3,7,8,8,-2,3,-5,-2,-9,9,5,2,5,9,-7,10,-3,-10,6,8,5,3,6,1,2,-3,7,3,9,1,-4,8,9,-8,-5,4,8,10,-5,-1,-2,-3,10,-2,9,6,6,1,-1,-2,-7,-6,6,-9,8,7,4,10,-8,-4,-8,10,-4,3,2,-2,4,4,-6,2,-4,-6,10,2,-10,5,-7,-4,-10,4,2,2,6,5,-2,-7,-5,5,-1,-3,5,1,-7,-3,-1,10,5,-9,-10,2,-3,-6,-4,-4,-10,-7,7,7,2,10,6,-7,1,-3,-2,3,-6,6,2,4,-6,-6,-9,-8,2,-4,-7,-1,-7,-9,9,-6,1,-2,1,4,9,2,-3,-8,-8,5,-1,4,-9,1,-7,1,-1,2,3,1,7,9,-4,7,9,-7,-6,-10,-6,-5,10,-10,10,-4,7,4,-9,-6,-10,-6,4,-9,4,9,2,2,9,4,-5,2,-4,-8,9,-5,-8,8,-4,-4,8,-10,-5,-4,-8], dtype = "int8")#candidate|10197|(768,)|const|int8
call_10194 = relay.TupleGetItem(func_2346_call(relay.reshape(var_10195.astype('float32'), [7, 9, 12]), relay.reshape(var_10195.astype('float32'), [7, 9, 12]), relay.reshape(var_10196.astype('uint8'), [702,]), relay.reshape(const_10197.astype('int8'), [64, 12]), ), 5)
call_10198 = relay.TupleGetItem(func_2352_call(relay.reshape(var_10195.astype('float32'), [7, 9, 12]), relay.reshape(var_10195.astype('float32'), [7, 9, 12]), relay.reshape(var_10196.astype('uint8'), [702,]), relay.reshape(const_10197.astype('int8'), [64, 12]), ), 5)
func_2461_call = mod.get_global_var('func_2461')
func_2466_call = mutated_mod.get_global_var('func_2466')
const_10228 = relay.const([1.575317,-9.375019,7.419617,2.045039,4.653568,-4.870470,8.958887,8.483160,7.090893,0.813020,-6.236983,3.125035,-9.507072,0.175021,-5.012054,-3.728854,-3.813619,-2.883179,5.282875,-0.260743,-6.014315,6.658128,3.595158,-3.757177,-8.629597,9.816838,1.312617,1.589530,-4.034250,6.225424,9.739104,-8.872085,7.893145,4.086009,1.720726,6.360715,-5.024244,1.422258,-8.651963,-4.176864,-1.223102,7.879883,-0.174011,3.609280,-9.956887,1.102611,-1.496461,0.362084,-7.264741,7.978880,-4.196634,-2.415821,2.830698,-3.266545,2.143663,6.875053,-9.731710,8.261909,2.372512,0.556652,7.274482,-5.182514,2.154599,0.282496,-2.388128,3.194702,-5.229011,-7.537444,8.723788,9.754904,2.433266,-6.809408,9.289052,8.737526,-6.321431,-0.550847,1.927238,-9.813416,-3.871790,7.551940,-9.877912,5.696723,-0.723634,-7.012517,-5.732176,-9.026032,-7.740533,0.422851,-8.196721,6.113144,-2.382689,-9.438365,-2.660130,-6.950645,8.100012,7.517680,-1.180718,-4.839462,-5.650508,-4.199853,-6.035044,9.782707,-0.768053,-8.248674,0.029830,5.535010,-1.869629,9.515648,-5.651941,7.425285,4.030740,0.393634,-7.572997,-4.490797,1.876767,7.413266,7.815534,-6.521686,-5.156410,-9.558979], dtype = "float32")#candidate|10228|(120,)|const|float32
var_10229 = relay.var("var_10229", dtype = "float64", shape = (168,))#candidate|10229|(168,)|var|float64
call_10227 = relay.TupleGetItem(func_2461_call(relay.reshape(const_10228.astype('float32'), [6, 4, 5]), relay.reshape(var_10195.astype('float32'), [756,]), relay.reshape(const_10197.astype('int8'), [768,]), relay.reshape(var_10229.astype('float64'), [168,]), ), 6)
call_10230 = relay.TupleGetItem(func_2466_call(relay.reshape(const_10228.astype('float32'), [6, 4, 5]), relay.reshape(var_10195.astype('float32'), [756,]), relay.reshape(const_10197.astype('int8'), [768,]), relay.reshape(var_10229.astype('float64'), [168,]), ), 6)
output = relay.Tuple([call_10184,call_10186,call_10194,var_10195,var_10196,const_10197,call_10227,const_10228,var_10229,])
output2 = relay.Tuple([call_10185,call_10187,call_10198,var_10195,var_10196,const_10197,call_10230,const_10228,var_10229,])
func_10242 = relay.Function([var_10195,var_10196,var_10229,], output)
mod['func_10242'] = func_10242
mod = relay.transform.InferType()(mod)
mutated_mod['func_10242'] = func_10242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10242_call = mutated_mod.get_global_var('func_10242')
var_10244 = relay.var("var_10244", dtype = "float32", shape = (756,))#candidate|10244|(756,)|var|float32
var_10245 = relay.var("var_10245", dtype = "uint8", shape = (702,))#candidate|10245|(702,)|var|uint8
var_10246 = relay.var("var_10246", dtype = "float64", shape = (168,))#candidate|10246|(168,)|var|float64
call_10243 = func_10242_call(var_10244,var_10245,var_10246,)
output = call_10243
func_10247 = relay.Function([var_10244,var_10245,var_10246,], output)
mutated_mod['func_10247'] = func_10247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9466_call = mod.get_global_var('func_9466')
func_9468_call = mutated_mod.get_global_var('func_9468')
call_10257 = relay.TupleGetItem(func_9466_call(), 0)
call_10258 = relay.TupleGetItem(func_9468_call(), 0)
func_5726_call = mod.get_global_var('func_5726')
func_5729_call = mutated_mod.get_global_var('func_5729')
var_10266 = relay.var("var_10266", dtype = "int64", shape = ())#candidate|10266|()|var|int64
call_10265 = relay.TupleGetItem(func_5726_call(relay.reshape(var_10266.astype('int64'), [])), 7)
call_10267 = relay.TupleGetItem(func_5729_call(relay.reshape(var_10266.astype('int64'), [])), 7)
func_6479_call = mod.get_global_var('func_6479')
func_6486_call = mutated_mod.get_global_var('func_6486')
const_10271 = relay.const([5,8,-8,5,-7,2,9,-3,10,-10,-1,-9,-8,-1,-10,3,-8,9,2,-1,-5,5,9,-10,-3,7,-1,-10,9,-9,2,8,3,-3,1,5,8,-1,9,-7,-4,-8,-3,1,10,2,-2,-9,8,-9,7,-5,8,-2,-7,-9,3,5,6,5,6,7,8,2,-9,2,-4,10,5,9,9,5,9,-8,-6,10,-10,9,-4,-5,9,-10,-6,-9,2,-3,7,-5,-7,-1,5,4,-2,-5,-1,9,8,7,10,5,3,5,7,8,2,-7,-5,-4,2,-1,-10,7,2,5,9,7,7,5,1,-8,-5,10,3,-4,3,-2,-10,2,2,-7,7,-6,-4,-10,4,-8,2,6,-1,-4,8,7,4,1,9,8,9,-4,-5,-10,4,-8,7,4,4,2,4,1,3,4,7,-9,8,-1,-8,1,-10,-10,3,-9,-2,1,2,-3,-4,-6,9,-7,-9,-9,1,10,-1,2,-6,2,-4,3,-7,-3,-3,1,-6,-8,-1,3,1,5,6,7,-8,10,-6,-10,-1,-5,1,6,-6,-2,3,9,1,-7,3,8,7,-5,-3,5,5,-8,-5,4,1,10,-3,10,-5,10,-3,1,-8,-10,-1,-5,-6,-5,-7,6,-4,2,7,3,8,-2,-2,8,9,-1,6,7,6,5,-8,1,-7,-3,-4,-6,10,3,1,1,3,8,-7,1,4,9,7,8,-3,-8,-5,-1,-4,-8,8,-5,-1,-2,10,4,-9,10,10,-10,8,2,-2,-10,-9,-3,8,-10,5,-9,-5,-8,3,10,5,10,6,7,-5,8,5,-3,-1,2,-6,10,-4,-6,6,4,-6,5,6,-3,2,7,3,10,4,10,5,-3,-8,-9,5,-8,-6,2,-8,5,6,-7,3,-3,-1,10,2,-6,10,-7,-9,-5,-9,-8,-2,6,6,-7,1,9,4,10,1,-8,-3,8,-9,8,-2,2,-3,3,2,-10,1,-6,1,1,-4,-4,2,-1,-7,-9,-9,-2,-9,-2,5,3,3,1,7,-5,10,10,-3,5,3,-8,6,3,-5,6,8,7,1,5,-1,1,-10,-5,5,5,-5,10,-3,7,-9,9,4,-9,6,-5,4,8,8,-9,5,-10,-6,-2,-3,-8,-3,2,-5,-4,-2,-7,6,2,-9,8,-4,-4,7,9,6,4,6,-7,-6,-1,-2,7,-4,-4,10,8,-10,-4,10,-9,-3,-6,-1,-8,-3,-5,9,-5,-1,-7,2,-2,-10,9,2,-8,3,3,-6,10,4,-4,-9,6,-9,8,-8,4,-1,-10,1,9,2,5,-7,-7,2,1,-10,9,10,1,-10,-6,7,5,1,-1,7,1,3,-4,9,4,4,9,3,-10], dtype = "int8")#candidate|10271|(520,)|const|int8
var_10272 = relay.var("var_10272", dtype = "float64", shape = (910,))#candidate|10272|(910,)|var|float64
const_10273 = relay.const([9.330076,1.304381,3.849496,6.455168,7.483282,1.389054,9.303196,1.800260,-1.383518,3.216941,-1.665234,-6.919910,8.553761,7.787849,7.862510,-4.380861,5.314772,3.750547,-4.941074,9.859780,2.143081,-5.226170,6.993569,5.860572,-1.532266,-2.584365,-2.246453,9.043485,-7.408713,-1.395560,-2.763955,-8.027226,-5.075591,-2.719637,6.042641,-7.386906,9.093594,2.671889,-1.780380,-4.977224,8.748343,7.183427,3.852046,1.230307,-9.133194,2.723427,-4.033939,-9.605071,3.338342,5.675415,-1.489665,2.992087,-7.400663,4.485481,7.300944,6.590298,-5.344231,-5.257002,5.444165,-1.378293,1.236107,6.788288,4.664727,-7.566583,-3.334803,9.775656,2.868323,-7.551686,4.073813,2.445145,5.715852,2.501017,5.071379,0.290451,-1.732485,-2.227885,-6.534365,9.262138,-4.561221,-9.304329,-5.599042,4.585630,2.571774,0.187084,0.472428,3.731182,-2.419315,0.940414,6.427848,-0.614835,-1.883358,6.763809,-4.483906,-3.094436,3.724391,-9.312672,2.202755,0.471650,2.102641,4.164601,0.054237,-6.876393,-1.911698,-4.698987,-0.203674,6.804512,5.791740,8.431420,4.516264,-2.609430,0.170291,-3.398729,4.242528,3.875613,7.229936,8.829294,6.181260,-1.943593,6.998479,3.794678,1.245526,-2.214340,-7.389257,4.177448,-6.768865,-0.724901,-5.074610,-1.943713,-1.796782,-3.750663,-9.962306,2.512517,9.965924,4.329415,-3.768267,1.923811,0.939809,-1.182397,3.248620,-4.499973,-4.315736,5.318863,8.194643,-8.283666,0.078838,1.678022,-7.421171,-1.194211,-4.951132,2.922393,-6.455692,5.687007,-7.789582,4.629442,0.506019,0.099608,-8.034657,-8.867012,-0.573541,-0.177354,3.973983,-3.044630,-3.577001,-3.851331,-2.702385,2.314765,-5.088929,8.345323,-3.656730,-1.530629,-1.875649,7.605786,4.233947,-7.277879,-2.189152,6.040461,1.027674,-9.222764,-3.998869,-2.505600,-4.168634,-0.296521,-6.991805,8.055172,-3.039780,-3.710752,-1.608842,-4.140548,3.787702,6.554283,1.276068,-4.606465,-0.158768,-1.360770,3.803350,-5.071731,-2.675995,-4.918632,-2.935773,5.178134,6.356221,8.779783,-7.433644,3.297364,-9.487452,0.664765,-6.991243,-4.334358,-9.147622,0.219987,-9.490749,2.176550,-2.510697,0.907753,-3.972533,-9.975733,2.227450,8.328701,6.615093,6.362824,7.421873,1.184866,-1.166977,4.290157,-3.834189,-8.806513,-1.615983,1.944861,7.743959,4.049148,0.860420,-6.630360,1.221914,-6.085636,-9.635608,-2.669866,2.010837,1.254144,-7.114297,-2.362703,-1.761246,1.470600,5.599144,0.764290,7.818764,-7.300142,-1.662100,2.200752,-0.075237,-3.533711,-2.681137,-1.718780,-6.116772,2.269464,-8.041737,4.186054,6.706131,5.977943,8.648115,3.966257,6.275790,-2.938941,-1.994630,9.740294,6.434374,-4.593550,1.449807,9.029660,-5.152272,-9.557398,4.932812,0.533896,-3.340600,5.715682,-5.234723,-9.263116,-9.294726,2.872149,8.096853,9.465615,8.515128,-6.397907,-9.943290,-1.374240,-0.474581,-2.006123,8.648768,-6.391509,-0.711486,2.971242,1.092274,8.055185,-5.909769,-2.918259,7.507216,0.247481,2.120396,8.007648,5.886525,8.166574,-8.307558,1.792246,9.064865,3.142546,4.235172,-3.976025,8.385035,-1.647441,8.592973,7.517166,-9.296250,2.425920,-1.209648,-0.276785,-0.956419,6.235112,7.267166,-1.264763,4.625099,-4.382355,7.803060,6.067060,-1.327502,-7.138260,-3.467713,0.520200,-8.227719,8.211527,6.425784,0.268495,9.420433,8.253878,8.283200,2.884865,4.700775,-3.900480], dtype = "float32")#candidate|10273|(336,)|const|float32
const_10274 = relay.const([0.564611,0.219126,8.806083,2.161446,8.957747,-4.843325,-7.466497,-8.915075,2.707476,-1.132842,-2.647780,5.180715,9.776297,-5.087794,1.403449,7.099884,9.676105,-1.877018,2.383752,0.813196,-0.452332,9.450810,0.545833,-7.928024,3.183745,4.636432,3.540073,-1.638477,-7.284899,3.219886,-8.960637,4.757044,5.510595,9.046284,2.060937,9.151146,-9.099107,-6.223823,-2.723998,-3.765498,0.493281,9.565551,-6.704353,7.154116,-8.634732,-7.035068,1.384552,6.405459,-7.761743,1.460303,5.607635,7.142947,-3.048124,2.248353,6.565430,-0.605060,0.184142,8.700109,9.517384,0.331449,1.354095,5.179329,7.373194,6.810763,8.445428,1.696444,2.623053,-9.540904,-7.556675,-9.046222,-9.300292,-2.843197,8.085661,9.587271,-6.453706,-3.927248,5.234144,2.219422,-6.966055,-5.388192,5.736258,-2.690491,-1.772927,-6.201441,-6.910783,-0.542988,-7.301591,5.688614,-9.506209,-2.556912,0.239812,-8.140337,-2.803722,9.654358,-4.026935,-2.819559,0.563353,-8.272406,-7.680630,-6.068316,-0.907043,3.471271,7.532194,-5.731856,8.279214,-1.929424,2.118594,6.671090,-6.620691,0.769504,-2.181517,9.498238,-7.894000,-1.019764,-3.621225,-8.085244,1.268431,3.940938,-7.075002,5.493106,1.921494,-1.524704,-5.886465,-3.798554,-1.708663,-9.595464,-4.903219,-3.505708,6.623871,9.036462,8.559512,-5.335579,0.861066,8.468022,8.865568,7.555332,-0.357589,-9.064771,-1.728036,-2.263902,-0.369947,6.279747,-2.622272,3.086115,-3.760655,4.436422,-6.738901,0.501290,-6.224617,5.869724,8.739150,-3.246421,-4.940886,-1.128605,6.168691,1.110870,4.046656,-1.859348,-9.392723,-3.789085,-1.319351,-5.505532,3.817759,-0.867050,-1.266719,-2.066744,9.417084,-0.456115,9.804135,-8.677811,6.693296,-5.178375,-1.002323,-7.072989,-7.363368,-9.436722,-3.739540,-7.664805,-2.368111,5.318485,-7.515095,-0.527010], dtype = "float64")#candidate|10274|(182,)|const|float64
call_10270 = relay.TupleGetItem(func_6479_call(relay.reshape(var_10266.astype('int8'), []), relay.reshape(const_10271.astype('int8'), [4, 13, 10]), relay.reshape(var_10272.astype('float64'), [910,]), relay.reshape(const_10273.astype('float32'), [336,]), relay.reshape(const_10274.astype('float64'), [182,]), ), 3)
call_10275 = relay.TupleGetItem(func_6486_call(relay.reshape(var_10266.astype('int8'), []), relay.reshape(const_10271.astype('int8'), [4, 13, 10]), relay.reshape(var_10272.astype('float64'), [910,]), relay.reshape(const_10273.astype('float32'), [336,]), relay.reshape(const_10274.astype('float64'), [182,]), ), 3)
func_2950_call = mod.get_global_var('func_2950')
func_2954_call = mutated_mod.get_global_var('func_2954')
const_10281 = relay.const([7,-5,-6,5,-3,10,-8,-10,-1,7,9,-3,-10,4,-3,2,-2,9,5,4,6,-2,6,-5,3,5,1,-4,9,9,-1,-2,-8,-9,-6,1,-10,-6,-4,-3,6,8,-8,-10,-10,-8,2,4,-2,2,-7,-10,5,3,-9,-6,-4,2,-9,-10,-3,-2,10,-4,-8,-10,1,-3,-6,-6,3,-9,6,-1,-4,-4,1,4,1,-8,6,5,8,4,4,-10,-1,6,-2,2,9,-5,-3,6,6,-6,-1,-2,1,-6,7,4,7,-5,8,-7,5,-1,-2,6,-10,2,3,2,-1,9,-4,-4,-2,4,-8,8,4,4,6,-5,2,8,3,-9,8,-10,2,7,-5,-5,1,-6,3,-10,2,3,-3,1,-3,-10,-2,-5,-6,-10,1,-4,1,7,4,2,5,1,-8,-5,5,-2,-8,1,7,-5,-7,3,2,1,-1,9,-10,-5,-3,7,-6,2,6,-7,5,3,2,-9,8,-8,4,-5,10,-3,10,2,1,-1,-7,9,-2,-3,8,1,-3,7,8,2,-3,4,4,-3,-10,-1,-5,-9,1,-1,6,-7,1,-8,9,1,-6,-9,-1,-7,-7,7,7,8,8,8,-3,4,-2,-7,4,-5,2,-1,6,-3,-6,-6,-6,2,-4,-9,9,3,6,4,-7,-10,-5,-4,-1,-6,9,2,6,1,-6,9,6,7,-3,3,10,-10,6,-5,-5,4,5,-1,-7,3,5,-9,5,4,-4,9,-10,-8,7,1,-8,-5,-10,4,-9,3,10,-6,7,-6,-6,-7,-5,3,10,-3,-1,-1,-5,8,-3,-9,-2,-9,-4,2,-9,-6,-3,6,5,4,-10,-6,-10,-8,-5,8,-3,-8,4,-6,-8,9,1,7,-7,-1,5,-1,-2,-10,7,6,-6,4,2,-3,4,4,-9,1,-1,2,-10,5,-1,8,-2,5,-9,-8,-1,-3], dtype = "int64")#candidate|10281|(360,)|const|int64
call_10280 = relay.TupleGetItem(func_2950_call(relay.reshape(var_10266.astype('int64'), []), relay.reshape(const_10281.astype('int64'), [10, 12, 3]), ), 0)
call_10282 = relay.TupleGetItem(func_2954_call(relay.reshape(var_10266.astype('int64'), []), relay.reshape(const_10281.astype('int64'), [10, 12, 3]), ), 0)
output = relay.Tuple([call_10257,call_10265,var_10266,call_10270,const_10271,var_10272,const_10273,const_10274,call_10280,const_10281,])
output2 = relay.Tuple([call_10258,call_10267,var_10266,call_10275,const_10271,var_10272,const_10273,const_10274,call_10282,const_10281,])
func_10295 = relay.Function([var_10266,var_10272,], output)
mod['func_10295'] = func_10295
mod = relay.transform.InferType()(mod)
mutated_mod['func_10295'] = func_10295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10295_call = mutated_mod.get_global_var('func_10295')
var_10297 = relay.var("var_10297", dtype = "int64", shape = ())#candidate|10297|()|var|int64
var_10298 = relay.var("var_10298", dtype = "float64", shape = (910,))#candidate|10298|(910,)|var|float64
call_10296 = func_10295_call(var_10297,var_10298,)
output = call_10296
func_10299 = relay.Function([var_10297,var_10298,], output)
mutated_mod['func_10299'] = func_10299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8244_call = mod.get_global_var('func_8244')
func_8246_call = mutated_mod.get_global_var('func_8246')
call_10334 = func_8244_call()
call_10335 = func_8244_call()
output = call_10334
output2 = call_10335
func_10364 = relay.Function([], output)
mod['func_10364'] = func_10364
mod = relay.transform.InferType()(mod)
mutated_mod['func_10364'] = func_10364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10364_call = mutated_mod.get_global_var('func_10364')
call_10365 = func_10364_call()
output = call_10365
func_10366 = relay.Function([], output)
mutated_mod['func_10366'] = func_10366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10385 = relay.var("var_10385", dtype = "float64", shape = ())#candidate|10385|()|var|float64
var_10386 = relay.var("var_10386", dtype = "float64", shape = (13, 14, 5))#candidate|10386|(13, 14, 5)|var|float64
bop_10387 = relay.maximum(var_10385.astype('float64'), var_10386.astype('float64')) # shape=(13, 14, 5)
bop_10390 = relay.floor_divide(var_10385.astype('float64'), bop_10387.astype('float64')) # shape=(13, 14, 5)
output = relay.Tuple([bop_10390,])
output2 = relay.Tuple([bop_10390,])
func_10425 = relay.Function([var_10385,var_10386,], output)
mod['func_10425'] = func_10425
mod = relay.transform.InferType()(mod)
mutated_mod['func_10425'] = func_10425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10425_call = mutated_mod.get_global_var('func_10425')
var_10427 = relay.var("var_10427", dtype = "float64", shape = ())#candidate|10427|()|var|float64
var_10428 = relay.var("var_10428", dtype = "float64", shape = (13, 14, 5))#candidate|10428|(13, 14, 5)|var|float64
call_10426 = func_10425_call(var_10427,var_10428,)
output = call_10426
func_10429 = relay.Function([var_10427,var_10428,], output)
mutated_mod['func_10429'] = func_10429
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10461 = relay.const([[[-0.644570],[8.277439],[-2.326268]],[[-2.785068],[-0.911519],[9.005088]],[[-5.585986],[-1.097163],[-3.881764]],[[8.825774],[-3.100159],[8.503496]],[[2.132386],[-1.319250],[-2.099573]],[[-6.293701],[-5.093776],[6.456004]],[[9.234416],[-1.647056],[-3.852275]],[[2.902043],[-6.827282],[-5.992205]],[[-4.854371],[4.103182],[5.159415]],[[9.194327],[9.662396],[3.019452]],[[6.046191],[-5.131822],[5.705236]]], dtype = "float64")#candidate|10461|(11, 3, 1)|const|float64
uop_10462 = relay.asin(const_10461.astype('float64')) # shape=(11, 3, 1)
output = relay.Tuple([uop_10462,])
output2 = relay.Tuple([uop_10462,])
func_10466 = relay.Function([], output)
mod['func_10466'] = func_10466
mod = relay.transform.InferType()(mod)
output = func_10466()
func_10467 = relay.Function([], output)
mutated_mod['func_10467'] = func_10467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9309_call = mod.get_global_var('func_9309')
func_9310_call = mutated_mod.get_global_var('func_9310')
call_10482 = relay.TupleGetItem(func_9309_call(), 0)
call_10483 = relay.TupleGetItem(func_9310_call(), 0)
output = relay.Tuple([call_10482,])
output2 = relay.Tuple([call_10483,])
func_10487 = relay.Function([], output)
mod['func_10487'] = func_10487
mod = relay.transform.InferType()(mod)
mutated_mod['func_10487'] = func_10487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10487_call = mutated_mod.get_global_var('func_10487')
call_10488 = func_10487_call()
output = call_10488
func_10489 = relay.Function([], output)
mutated_mod['func_10489'] = func_10489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10517 = relay.var("var_10517", dtype = "float64", shape = (5, 11, 10))#candidate|10517|(5, 11, 10)|var|float64
uop_10518 = relay.log(var_10517.astype('float64')) # shape=(5, 11, 10)
output = uop_10518
output2 = uop_10518
func_10525 = relay.Function([var_10517,], output)
mod['func_10525'] = func_10525
mod = relay.transform.InferType()(mod)
mutated_mod['func_10525'] = func_10525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10526 = relay.var("var_10526", dtype = "float64", shape = (5, 11, 10))#candidate|10526|(5, 11, 10)|var|float64
func_10525_call = mutated_mod.get_global_var('func_10525')
call_10527 = func_10525_call(var_10526)
output = call_10527
func_10528 = relay.Function([var_10526], output)
mutated_mod['func_10528'] = func_10528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8906_call = mod.get_global_var('func_8906')
func_8908_call = mutated_mod.get_global_var('func_8908')
call_10583 = relay.TupleGetItem(func_8906_call(), 0)
call_10584 = relay.TupleGetItem(func_8908_call(), 0)
func_8244_call = mod.get_global_var('func_8244')
func_8246_call = mutated_mod.get_global_var('func_8246')
call_10590 = func_8244_call()
call_10591 = func_8244_call()
output = relay.Tuple([call_10583,call_10590,])
output2 = relay.Tuple([call_10584,call_10591,])
func_10592 = relay.Function([], output)
mod['func_10592'] = func_10592
mod = relay.transform.InferType()(mod)
mutated_mod['func_10592'] = func_10592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10592_call = mutated_mod.get_global_var('func_10592')
call_10593 = func_10592_call()
output = call_10593
func_10594 = relay.Function([], output)
mutated_mod['func_10594'] = func_10594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10617 = relay.var("var_10617", dtype = "uint16", shape = (3, 16, 13))#candidate|10617|(3, 16, 13)|var|uint16
var_10618 = relay.var("var_10618", dtype = "uint16", shape = (3, 16, 13))#candidate|10618|(3, 16, 13)|var|uint16
bop_10619 = relay.bitwise_xor(var_10617.astype('uint16'), relay.reshape(var_10618.astype('uint16'), relay.shape_of(var_10617))) # shape=(3, 16, 13)
func_2950_call = mod.get_global_var('func_2950')
func_2954_call = mutated_mod.get_global_var('func_2954')
const_10625 = relay.const(10, dtype = "int64")#candidate|10625|()|const|int64
var_10626 = relay.var("var_10626", dtype = "int64", shape = (360,))#candidate|10626|(360,)|var|int64
call_10624 = relay.TupleGetItem(func_2950_call(relay.reshape(const_10625.astype('int64'), []), relay.reshape(var_10626.astype('int64'), [10, 12, 3]), ), 0)
call_10627 = relay.TupleGetItem(func_2954_call(relay.reshape(const_10625.astype('int64'), []), relay.reshape(var_10626.astype('int64'), [10, 12, 3]), ), 0)
output = relay.Tuple([bop_10619,call_10624,const_10625,var_10626,])
output2 = relay.Tuple([bop_10619,call_10627,const_10625,var_10626,])
func_10629 = relay.Function([var_10617,var_10618,var_10626,], output)
mod['func_10629'] = func_10629
mod = relay.transform.InferType()(mod)
var_10630 = relay.var("var_10630", dtype = "uint16", shape = (3, 16, 13))#candidate|10630|(3, 16, 13)|var|uint16
var_10631 = relay.var("var_10631", dtype = "uint16", shape = (3, 16, 13))#candidate|10631|(3, 16, 13)|var|uint16
var_10632 = relay.var("var_10632", dtype = "int64", shape = (360,))#candidate|10632|(360,)|var|int64
output = func_10629(var_10630,var_10631,var_10632,)
func_10633 = relay.Function([var_10630,var_10631,var_10632,], output)
mutated_mod['func_10633'] = func_10633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9288_call = mod.get_global_var('func_9288')
func_9290_call = mutated_mod.get_global_var('func_9290')
call_10668 = func_9288_call()
call_10669 = func_9288_call()
var_10674 = relay.var("var_10674", dtype = "float32", shape = (6, 16, 7))#candidate|10674|(6, 16, 7)|var|float32
bop_10675 = relay.right_shift(call_10668.astype('uint32'), var_10674.astype('uint32')) # shape=(6, 16, 7)
bop_10678 = relay.right_shift(call_10669.astype('uint32'), var_10674.astype('uint32')) # shape=(6, 16, 7)
func_2346_call = mod.get_global_var('func_2346')
func_2352_call = mutated_mod.get_global_var('func_2352')
const_10680 = relay.const([-8.536017,0.449636,-5.681999,-3.829341,3.435529,9.512481,-4.803126,-8.998893,-1.839347,4.693104,-8.070598,6.372420,6.325883,-7.832789,-7.396767,-7.143877,-5.136489,2.263685,-5.865422,6.651121,-7.943839,-6.918195,5.647394,0.185040,8.833858,-7.214780,-7.898281,0.084513,6.554818,-0.168276,-7.670148,-8.946844,-5.720205,8.404503,7.861889,-3.584872,3.871765,-6.057193,9.620170,5.614070,9.205177,7.919814,2.913724,6.137130,-8.572576,-8.647322,-5.467108,0.132480,8.361703,5.063295,-3.761742,-6.306201,-9.289376,-0.204851,-3.114282,1.114341,7.965044,-8.353262,2.118716,8.195475,1.412660,-7.008556,3.291508,8.925581,-3.414232,8.352543,-6.983734,1.359902,7.048835,9.019226,6.158888,7.356385,1.387824,0.418985,3.607698,-8.452469,-7.020622,2.884038,-4.006713,-4.453299,2.597556,9.520788,6.959007,5.506616,-3.035666,5.074066,4.373697,1.726916,-8.385717,3.166434,9.592741,-1.940914,7.864042,6.281217,-3.277861,-6.006535,-3.707071,-1.116344,-2.326787,-3.320468,-8.344524,-0.885375,-2.577584,-2.813743,-8.146704,-8.571061,4.595458,-4.344792,-6.976971,-8.852254,2.727099,6.829005,0.985123,-0.430976,3.465572,-8.316546,-3.213546,4.114154,-8.878010,6.760360,2.778824,8.348241,-1.263447,4.850811,6.561645,-8.531342,7.391286,-3.323097,7.134969,-0.379632,2.096683,-8.758160,-5.793006,-7.414752,5.245744,2.412904,-5.504515,1.095165,-0.382517,9.628331,-5.358852,4.377440,2.929154,-1.675870,-2.772909,0.612811,-0.670068,2.136031,5.374445,9.318616,5.273307,-9.944310,6.352736,-0.704277,-0.076060,-5.337512,1.120785,-5.662355,3.815240,7.992525,-6.132228,-6.356387,-1.029862,8.854010,3.176758,-6.597110,3.333033,-9.789044,-1.164093,0.867459,3.108466,-8.587882,4.208606,4.077087,4.735508,-7.582807,-0.580127,-4.032447,-5.203303,-0.148780,4.970585,-7.469236,3.535942,4.153250,5.900173,7.343250,-4.001939,-8.595078,-0.743991,4.522161,-3.404089,9.888523,-9.039750,-7.553079,6.585204,-9.617624,9.307364,-4.421348,-3.036247,8.882279,-0.519333,-8.838526,-3.077718,-7.589422,-1.524724,-4.924028,5.548156,2.085861,-5.053329,-5.185986,3.640821,-0.077240,4.423777,7.108291,-4.710874,8.161001,5.754780,-6.246689,-9.990377,1.828971,-7.656281,-9.790637,5.869518,6.972958,8.489849,-7.888530,-1.881038,0.293234,8.784198,8.207845,6.483018,-8.021787,-9.748834,-4.246017,2.431153,-4.179957,-9.178336,5.043242,-4.545230,2.749981,-9.011622,-6.166909,-2.711518,-5.356727,4.793298,9.118090,-2.010748,5.599385,-5.802584,-2.510196,4.219096,7.315211,7.627882,-0.574657,2.230045,2.889498,0.899811,9.861995,6.267096,7.801523,6.220074,-1.892022,-8.963552,4.996370,6.433592,-7.936701,-6.639666,-7.050119,-4.514842,5.208108,-7.353472,3.405412,8.551529,3.208354,-1.814493,3.237197,-9.903637,6.841268,6.888713,6.225062,-3.985487,-2.665117,-8.970264,-6.249043,1.580536,-5.274907,-3.929674,2.485709,-8.969495,7.370847,0.371047,5.440154,-6.900993,-7.003075,1.749867,-0.222489,3.353338,-6.690777,-2.768913,-1.902522,-9.522116,3.270503,-2.536360,-6.665641,-7.363945,1.157784,-8.980842,6.168741,0.797530,6.769692,5.941962,9.005654,-1.004484,-0.982895,-2.020212,-1.047182,-1.874298,-6.335559,-5.721779,9.736575,-7.481390,-3.439904,8.310346,4.357076,9.905521,3.335759,-0.892121,3.828626,-0.119406,7.640895,-7.923860,-1.304690,-1.731232,1.442972,7.109117,6.703173,3.096209,3.765352,3.401167,8.137178,8.337001,6.202811,5.322264,-9.541163,7.510686,7.134713,3.790809,-3.811506,-1.968072,-9.251263,-3.132547,0.860867,5.309140,0.763519,8.120612,0.242825,5.912513,-4.793661,9.490155,4.234194,7.694970,-3.224164,-0.528367,-9.882723,-4.055971,-4.360790,-9.971170,-1.873129,-8.647734,-5.262261,-8.984795,-6.177451,-2.899832,6.090422,2.558390,-7.782972,4.767357,7.093965,8.645529,-6.494422,-3.425818,6.820891,-8.240360,-1.120829,5.821161,-0.818010,-0.521458,8.533453,9.059085,-0.279370,3.467150,3.137501,3.717422,-0.519109,-7.523757,-8.551263,-8.057773,7.916963,7.828034,2.114733,-8.721008,7.704824,9.418941,-0.599312,3.208815,5.715468,2.269683,7.260595,-4.337631,-9.513833,-7.408150,0.279134,-2.476395,6.574550,4.212241,-5.585146,-4.323709,-0.605155,-0.203253,-1.822978,-2.942408,8.759826,6.741419,-1.507340,-4.421592,-7.225104,-4.694742,4.658054,8.302982,-4.032378,-6.676793,-4.225574,-8.682223,-1.293201,2.736788,-3.636122,-9.824253,-3.611149,-2.487529,0.690625,7.203920,9.877030,-5.599631,-3.896785,6.928901,-2.995137,9.569593,-1.407253,0.443713,-3.985460,-0.370432,-9.816879,-9.542452,-5.053991,-6.689816,-4.087608,1.187612,8.078895,-5.726078,9.002279,-0.788630,7.574302,3.663025,-2.091503,-8.210792,3.104761,4.687397,-1.436815,-3.252179,0.383206,-5.266409,-1.996259,0.673624,2.806356,2.935204,-0.811597,-3.615696,8.972538,5.404721,1.829451,5.950464,-1.797121,-5.052065,-1.743793,5.386107,2.961690,2.507818,-1.407587,5.742940,5.275118,-9.908549,9.152302,7.217699,-2.881911,-9.933565,6.455682,3.430918,-0.240260,-3.240552,-0.345625,-4.738404,3.866454,-1.158532,2.866120,-8.153369,-3.201919,-7.954694,6.156568,4.552351,-9.160137,2.643925,5.472045,-6.543476,4.454167,-4.838377,-5.312121,7.936903,1.000622,4.160802,-8.930197,9.320275,2.117858,-2.553916,6.296642,-1.519629,6.082394,4.612619,-3.323338,-9.898932,-2.448005,-6.846903,-6.407121,8.381105,2.821274,-8.239486,-9.225326,-4.410164,7.784890,-0.877966,-1.431101,-7.036350,4.867467,-8.337760,2.585501,0.482596,-1.425790,1.450174,0.895725,-1.565479,8.208535,-5.378669,-3.928230,9.100309,5.216683,-6.416123,5.906171,5.968642,6.424104,-3.315599,4.782809,-3.455342,4.209846,-0.293831,-6.728667,2.005855,9.975026,4.291979,1.059731,1.388459,4.067980,-5.768764,-5.851275,3.763848,-1.840027,7.751587,7.615761,9.637487,9.358888,5.614820,-1.179674,4.441400,2.313796,5.721638,-5.190962,4.230422,-5.598542,-1.024560,-6.579707,-9.872773,9.860878,-2.421928,-7.180827,-6.063448,0.148935,5.892403,-3.924882,5.365435,-3.021384,-2.311054,6.744249,-0.091301,-2.096416,-5.113097,-0.475656,1.491121,-2.157526,-1.723296,5.800829,-8.409874,-1.268532,-3.307934,5.695258,-6.224161,-6.523364,-2.950409,4.998209,0.130475,6.629667,-9.380973,1.902195,7.559523,8.223741,-6.924954,-5.051677,3.529783,-1.043705,-0.146065,8.574486,1.086607,4.675128,4.212164,-6.433299,-5.289482,-4.016917,6.099353,-7.319559,-6.788084,-6.593795,-1.851425,4.073921,-2.904812,4.239701,3.165010,1.273391,-9.515999,-7.221426,0.921007,0.550638,-0.669781,-2.577756,8.761611,0.792562,-8.927131,-0.325434,-0.697718,-8.513487,3.969875,7.349024,-3.633665,-6.684544,-7.129821,-6.111412,4.646696,4.754626,-1.946730,-7.986611,8.357616,8.795015,1.026549,-3.833003,7.289832,-3.753768,4.322953,-1.942774,2.616136,-2.234566,8.805667,4.048521,-5.098277,0.456660,2.116497,-0.808838,6.517176,-7.180465,9.866541,-6.287710,-9.172734,-2.798588,0.001359,4.499097,8.666711,-5.181695,0.586648,4.934091,-5.320523,-0.903854,-0.556420,-3.555870,-5.857822,2.125442,-4.383333,-0.564539,-9.076172,-9.179942,7.976398,-3.470392,3.539121,-8.127967,1.255746,1.644012,-0.799843,6.960419,-7.106619,-9.568779,-2.046783,9.855129,8.973864,7.871651,-0.996396,1.558880,-9.005300,-0.428267,-1.186668,-3.495590,-0.681380,-1.380111,5.480665,-3.888134,0.615629,-9.070530,-9.144229,-6.238825,8.633489,3.170827,7.425871,-4.654195,7.217796,-0.227422,2.702664,0.855547,-8.609616,-0.832101,2.896396,0.307270,0.509698,-3.107763,9.571592,2.455985,1.383623,-8.513775,-6.529297,-6.033159,8.758309,7.402001,2.916606,6.978343], dtype = "float32")#candidate|10680|(756,)|const|float32
const_10681 = relay.const([[4,-6,9,7,4,5,2,-3,-5,3,-9,-2,-8,-2,8,4,3,6,9,-2,-9,6,3,6,-4,-5,-3,5,-1,-10,10,-10,5,-7,-9,-9,5,4,7,-7,9,1,-2,-3,-7,1,-8,10,-7,2,-5,-6,8,-10,10,-5,-3,8,7,8,4,-1,10,-8,10,3,-2,-6,1,-5,-7,-7,-9,6,6,-9,-3,5,-4,10,-2,9,-2,-4,5,3,2,-2,6,-6,-4,-5,5,-10,-2,3,3,-9,9,9,5,-5,1,5,-9,-10,-5,-2,4,7,2,1,4,-2,5,8,-3],[-6,-2,2,3,-4,4,9,8,5,8,7,9,-4,3,6,-6,-10,5,-10,1,-9,10,4,-5,-1,-6,4,10,-2,1,8,-10,6,10,8,-9,-8,-4,-8,5,2,8,9,-4,-10,6,-2,8,-4,1,-10,8,1,2,10,9,-9,8,6,8,6,-5,2,4,2,7,-8,-9,8,-8,-9,2,7,-5,-9,10,6,-2,1,-4,3,-2,-8,-8,2,-7,-5,8,-7,7,-7,3,-4,-2,3,5,-7,7,-8,4,-2,-1,-1,1,4,-6,-4,-4,6,-1,-2,-6,-3,-6,7,9,10],[6,-10,9,-4,-7,-6,7,7,-4,4,7,3,6,-3,9,8,-7,4,-4,-5,-7,2,-4,3,9,7,5,-9,-2,-8,8,-6,-4,-2,-9,1,-7,-1,3,10,1,10,-9,-7,-3,-10,10,-9,8,-5,8,4,-9,6,-1,8,4,-8,-8,4,9,-4,1,5,5,-8,-8,-8,-9,10,3,-4,5,1,-4,-5,-6,3,-4,-9,-10,2,9,-4,-4,-10,2,5,-5,-1,9,5,-4,-5,7,-7,-10,3,-9,-10,1,2,-6,-3,1,-2,-7,-8,-5,1,-6,9,9,5,-8,1,-5],[-5,9,-1,-1,3,-2,-10,3,-9,4,-6,9,-9,6,-8,-4,-1,-2,-3,7,-10,-6,-4,-6,9,10,-10,-9,-5,10,4,-8,-5,7,-3,4,3,-6,9,1,-9,-5,9,-8,9,-10,10,-9,-10,2,1,7,-4,-3,2,-2,3,9,-3,6,5,-4,6,9,-10,-7,7,-6,-6,5,-1,10,6,7,10,-9,1,-1,7,-1,3,9,-4,2,-4,-2,7,10,-3,3,10,10,7,6,-1,2,-7,-3,-6,2,5,-6,6,-4,-10,-4,-10,10,4,-3,5,9,8,2,1,5,-10],[6,4,-6,-8,-5,-5,-6,-2,-5,6,-8,8,-10,6,2,-4,-1,-8,-7,7,5,-8,10,1,7,-9,-4,5,-5,7,6,-6,4,-3,-8,-2,10,-3,-9,6,-4,3,2,-9,-10,4,10,4,-2,4,5,5,3,8,4,10,-10,5,-10,1,-3,-5,-3,-8,5,-6,-5,10,1,-1,-3,-3,3,-7,4,-4,-2,-3,-9,-3,2,-7,-2,-8,4,-8,-2,1,10,-10,-7,5,-5,-8,9,9,3,-10,-10,8,8,2,-8,7,3,4,6,-3,8,-5,3,2,-7,-10,1,-4,3],[-10,9,9,-9,-5,-4,3,-2,-3,-2,10,7,10,-10,-8,-10,-6,-10,-4,9,3,10,7,6,-6,5,10,7,-10,4,-2,8,3,4,-6,-7,-8,5,-8,7,1,-9,2,1,-7,-9,7,-6,5,8,-4,-8,-1,-10,-8,-2,-7,-8,-10,-10,-3,-5,-8,1,-2,-3,-5,9,-6,6,5,2,2,2,10,9,3,-4,-7,-4,-5,5,8,9,-4,9,-4,1,1,-7,7,4,10,-3,-2,-5,-2,8,-4,-5,1,-6,-2,-2,2,4,7,-3,4,3,-3,-3,-9,-6,-8,-9,-4]], dtype = "uint8")#candidate|10681|(6, 117)|const|uint8
var_10682 = relay.var("var_10682", dtype = "int8", shape = (768,))#candidate|10682|(768,)|var|int8
call_10679 = relay.TupleGetItem(func_2346_call(relay.reshape(const_10680.astype('float32'), [7, 9, 12]), relay.reshape(const_10680.astype('float32'), [7, 9, 12]), relay.reshape(const_10681.astype('uint8'), [702,]), relay.reshape(var_10682.astype('int8'), [64, 12]), ), 6)
call_10683 = relay.TupleGetItem(func_2352_call(relay.reshape(const_10680.astype('float32'), [7, 9, 12]), relay.reshape(const_10680.astype('float32'), [7, 9, 12]), relay.reshape(const_10681.astype('uint8'), [702,]), relay.reshape(var_10682.astype('int8'), [64, 12]), ), 6)
func_10592_call = mod.get_global_var('func_10592')
func_10594_call = mutated_mod.get_global_var('func_10594')
call_10687 = relay.TupleGetItem(func_10592_call(), 0)
call_10688 = relay.TupleGetItem(func_10594_call(), 0)
uop_10697 = relay.log2(call_10679.astype('float32')) # shape=(64, 12)
uop_10699 = relay.log2(call_10683.astype('float32')) # shape=(64, 12)
output = relay.Tuple([bop_10675,const_10680,const_10681,var_10682,call_10687,uop_10697,])
output2 = relay.Tuple([bop_10678,const_10680,const_10681,var_10682,call_10688,uop_10699,])
F = relay.Function([var_10674,var_10682,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10674,var_10682,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

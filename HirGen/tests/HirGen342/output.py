import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_86 = relay.var("var_86", dtype = "float32", shape = (6, 12, 13))#candidate|86|(6, 12, 13)|var|float32
uop_87 = relay.atan(var_86.astype('float32')) # shape=(6, 12, 13)
bop_91 = relay.mod(uop_87.astype('float64'), relay.reshape(var_86.astype('float64'), relay.shape_of(uop_87))) # shape=(6, 12, 13)
output = bop_91
output2 = bop_91
func_99 = relay.Function([var_86,], output)
mod['func_99'] = func_99
mod = relay.transform.InferType()(mod)
mutated_mod['func_99'] = func_99
mutated_mod = relay.transform.InferType()(mutated_mod)
var_100 = relay.var("var_100", dtype = "float32", shape = (6, 12, 13))#candidate|100|(6, 12, 13)|var|float32
func_99_call = mutated_mod.get_global_var('func_99')
call_101 = func_99_call(var_100)
output = call_101
func_102 = relay.Function([var_100], output)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_497 = relay.var("var_497", dtype = "float64", shape = (13, 13, 5))#candidate|497|(13, 13, 5)|var|float64
uop_498 = relay.acosh(var_497.astype('float64')) # shape=(13, 13, 5)
uop_503 = relay.atan(uop_498.astype('float32')) # shape=(13, 13, 5)
uop_529 = relay.sigmoid(var_497.astype('float32')) # shape=(13, 13, 5)
func_99_call = mod.get_global_var('func_99')
func_102_call = mutated_mod.get_global_var('func_102')
const_544 = relay.const([-4.529723,-8.600781,-7.077712,0.205002,2.772521,5.543527,-9.725613,-8.606300,8.953596,0.130077,6.202888,6.201725,0.674740,-2.019690,7.232776,0.458128,-9.068772,7.727881,1.205523,5.315446,-6.068626,-4.829105,-4.273865,-0.525262,-7.529288,-1.261335,-7.556099,6.233800,1.305133,-4.853201,8.460412,-4.580188,2.349481,1.008011,6.145449,3.890404,2.241158,-7.043351,-8.808047,5.607230,-0.833542,-7.734976,-6.473514,-6.509234,-8.128947,-8.623809,6.019165,1.370819,-0.890391,2.675259,2.708237,-7.718880,-0.254968,-1.729414,9.280953,2.881507,7.566297,4.685416,-2.481229,0.739591,-9.209478,-8.451416,5.957102,2.787054,-2.255420,5.764157,3.978601,1.180622,-8.582469,0.186891,6.727963,8.667026,-4.099565,-1.916379,-1.322426,1.943596,3.342633,-2.389578,-2.236051,9.041476,-2.084388,-4.616303,-6.821555,0.146122,-3.382470,-8.367217,-3.403106,-2.339773,-2.109926,6.459444,5.325682,-0.627503,-6.531041,0.370973,-0.998753,-7.736346,9.337008,-4.717747,-5.462041,-1.278514,-2.131260,-3.514121,-8.877882,-4.608704,-6.411477,2.872683,-5.631235,-7.694246,7.244593,0.914645,-2.267339,-3.941299,0.601832,9.353474,0.964922,-4.611051,9.118828,-6.126673,8.629564,-4.508245,-6.364662,1.123988,5.413643,7.222876,0.578725,-0.506102,-6.336636,7.732592,-5.947454,8.793687,-9.489333,9.568794,1.042120,9.673702,-0.215494,-8.905598,-1.051504,-0.746627,2.139261,-5.309868,-9.823983,4.788164,7.141237,-2.803261,7.598672,6.363074,3.006750,2.205375,-1.643297,-9.764511,2.973348,4.296921,-7.885078,0.179865,-5.071593,8.968856,4.977356,1.467987,2.162325,-1.840484,-3.750711,8.308145,-5.790365,-3.821853,5.508991,-3.953702,8.347601,-5.526747,8.532645,1.086966,7.163414,-8.871953,1.138139,-5.582847,-6.459964,-3.542667,-5.126186,-1.268945,-0.947741,-7.799265,3.773552,-5.138530,-9.492822,7.649656,5.778193,6.747709,8.582010,9.668300,-1.808171,4.682178,-4.611750,6.201259,2.220252,0.758638,-2.235549,-3.892246,-6.182170,-9.459858,7.073139,-7.645365,-7.657701,-9.561077,-0.727927,0.003147,7.629091,8.946794,-7.506602,-6.593632,-4.649650,2.276694,0.614416,1.294979,8.674306,1.105903,0.436506,4.899175,9.939126,1.057955,7.209947,-3.453038,1.394011,-3.654073,-8.722958,-0.969111,-5.127259,3.354382,4.884748,-6.935205,-3.032359,4.310940,7.308140,-7.743814,-2.455114,-0.394539,-7.397436,-5.245634,-4.375044,2.268386,-2.126660,-2.431322,4.575051,-5.421011,-6.796519,8.152733,-0.474412,-7.005305,6.628007,6.539299,-7.457487,8.202874,-0.405373,-6.849142,-6.054770,-0.847417,1.116238,-5.591509,-7.556821,0.120002,6.514995,-9.117035,-2.577894,6.091528,7.629873,5.861769,4.266673,-1.533545,3.068201,-0.529956,-1.252801,-2.381264,5.464338,-2.383962,7.619588,-3.079077,6.818061,7.341391,7.460440,6.475989,2.261697,-8.673848,-8.539791,-9.410133,-1.858227,7.709928,3.709221,-1.268673,-1.187617,4.084504,7.088241,-4.128479,-7.738172,-0.494801,0.770562,-2.202649,-9.364425,1.374130,3.057442,-6.866774,-0.714573,-2.575148,7.687845,1.657854,4.991229,-0.939689,-2.902139,8.017447,-6.373811,8.517413,-8.979215,-0.703819,-3.452475,1.960418,1.871685,4.091345,5.416549,-6.912912,1.621085,2.642592,-0.742613,2.555096,-3.958513,2.161605,-8.985581,-7.796714,-9.031206,8.302187,-7.739842,-3.580550,2.364213,-0.213170,6.661234,2.448229,-2.405371,2.934870,-2.771358,2.702405,-5.054873,1.941621,7.056909,8.670298,-8.575921,1.065475,0.602807,2.962775,2.989297,0.048139,-2.812483,4.099107,7.479745,6.524298,3.103133,1.543879,1.201115,-1.431123,-1.166349,-8.867515,7.460603,-6.651741,0.201533,6.316464,2.395450,8.261867,3.947254,-9.447245,8.403001,8.295097,-9.300858,-6.463255,4.682231,3.515785,-1.690943,4.053083,4.701156,-7.402858,0.020782,4.709725,3.387605,-3.697650,-6.595356,3.451163,-6.956270,-7.399982,3.657478,-0.758812,-6.185702,0.181564,7.296191,-2.853855,-2.406988,5.315904,-3.977614,-3.837954,0.407091,-9.949424,9.774101,2.549181,-5.560950,-3.098869,7.613306,8.117682,-7.271763,-1.486126,3.845873,-8.864690,-5.800481,3.488555,0.245913,-2.947818,-9.488374,-0.276933,-8.816146,3.181824,1.019595,0.690607,-6.752031,-2.575280,0.554780,-7.043269,0.525720,-4.711197,-8.893526,-5.645385,7.914809,-2.966580,-7.464141,0.614229,-2.965136,0.950322,-9.564757,-0.288215,3.822964,-2.487387,-3.841763,3.891939,0.769397,0.617076,0.356835,7.691719,-8.277403,-0.196872,-9.972316,8.000984,-2.115822,5.066589,2.296565,1.833731,-1.282674,0.235607,-5.126776,8.586753,-2.326406,9.033945,-0.392896,-1.354088,-8.157065,6.853735,-6.035068,-3.311752,-4.058952,-4.152708,5.777290,-6.462558,1.308047,-7.356467,1.509331,7.159673,-0.379785,1.536817,-5.555189,9.245639,5.599443,6.158116,-3.303114,-0.578221,6.251150,-6.567978,2.361247,6.951128,2.755352,-2.146634,2.446982,-5.406517,9.217048,-4.823414,-3.314968,-0.124371,3.609464,7.057457,3.628942,-8.014106,-4.430307,-7.235162,6.133580,-1.447338,5.383859,5.056846,6.983730,4.393263,-2.697736,-1.357408,7.435116,-5.580874,-3.876149,-8.622495,9.154559,5.381877,-5.864274,5.103248,9.241654,-0.089817,0.795768,1.423336,0.009505,0.615073,-0.464443,-1.759237,-9.662546,-1.712354,1.616519,8.531901,7.623992,-3.757720,-5.989402,-2.835527,-3.035543,-0.533802,-2.566973,-6.287181,-3.021768,1.807201,6.005497,9.647598,-9.473820,-0.726964,-9.989466,5.448831,-4.346181,2.829278,6.116601,-9.919873,-3.365968,9.681943,-0.313024,0.329277,2.152378,-9.523063,-7.834431,2.934970,7.395455,-5.260657,1.138447,-9.194533,-5.121074,-3.355635,3.874983,6.652387,7.030731,-5.542104,-1.725348,9.376725,6.578120,-6.135014,6.060815,-2.680951,8.368960,-4.228915,-3.906015,4.978124,4.479028,3.933554,-2.635060,-4.136363,0.751526,-4.784442,-9.946087,-4.271783,0.795498,-2.561667,-9.047551,1.707563,7.808782,-1.252946,-0.191256,-2.905479,5.515620,-2.930952,-3.514118,4.911371,-6.978668,7.149145,1.087660,-2.143259,-2.855293,0.652699,7.385249,2.178904,4.122634,3.363873,2.119506,6.912728,5.709783,-5.485345,-8.763744,2.701829,6.287550,-0.838480,-5.531807,3.595857,6.655932,0.011268,-7.658602,2.263578,-9.296342,7.660779,4.415999,-2.035503,6.974300,-8.269764,5.354950,-8.364253,4.831932,0.827614,9.120271,-5.735331,-0.405248,7.134211,-0.954264,-8.231626,5.619184,-7.177487,-5.965542,8.542706,-0.654570,3.869923,-3.925011,-0.450585,-6.215766,0.239934,1.727337,-2.751331,-5.847948,-2.532346,5.000459,9.801279,-5.770628,6.233303,1.616700,-4.368173,-9.923133,5.056650,8.669851,-7.141148,5.201920,8.245085,-3.941170,-2.782103,-5.393643,5.439443,2.343137,-5.476099,6.506619,-7.018792,0.560293,-8.429609,3.442572,-8.490809,5.266279,-2.784828,-1.020159,4.911655,-2.924223,6.085327,-7.826714,-3.649686,-8.512746,-3.506470,-0.861623,-5.490979,0.296973,9.121392,-2.627696,-6.202888,0.625574,-2.545031,-3.713822,-1.026171,-0.538302,8.525726,-8.506401,-0.885426,0.529666,-2.093545,-4.789400,9.189762,4.633944,-6.524850,-8.915939,-3.802699,1.918819,0.535031,-5.426168,-2.421904,-8.800802,-7.247055,2.728372,8.522090,3.981641,-0.668065,-2.961778,2.646861,9.091673,0.302695,-4.862821,2.220221,-4.756082,-2.949310,-6.668435,6.463101,-2.021303,1.845248,3.324125,-2.187140,7.860238,-0.085793,-2.408326,7.889425,9.446942,4.597497,-3.409758,8.808011,-1.417183,-2.603968,7.561063,3.463916,8.708344,9.804597,9.867332,1.741222,1.949346,-9.934312,9.631108,9.941706,-6.165255,5.371778,8.713138,4.683331,-1.685714,-1.826128,-6.546346,8.979883,-3.060591,-2.159277,8.578206,-8.691670,6.775332,-5.739122,4.856881,9.340733,0.141112,-5.377014,0.838369,-0.514833,1.665139,6.490942,-8.337934,5.145418,-5.233844,-5.900084,7.047012,-6.213687,9.832210,-7.168321,-6.496822,-6.098779,-0.557899,-6.619420,-1.386323,8.152341,2.852672,5.800454,8.004939,-2.543495,-4.323058,2.446870,-8.079498,-0.828327,8.255405,-8.901845,-6.676778,7.389715,7.176010,3.552543,-8.214496,-4.197061,3.285557,6.133165,-8.771111,-0.325804,-8.297223,7.703924,6.116651,-8.951498,-0.150556,-2.289894,8.056565,9.491242,1.715059,-2.105845,9.328897,1.613207,1.000382,8.213838,9.141094,-3.090504,-9.829330,-1.132956,-6.483491,-4.983249,4.751765,6.344471,-1.928964,0.992630,5.001686,7.039714,-9.359128,-7.856737,0.888214,-3.581508,6.888734,-3.356445,-9.178940,-2.733157,4.056135,6.014950,6.238404,5.508562,2.079337,-0.458443,-5.221540,5.199210,-8.040091,-5.300317,7.568461,-8.644311,-9.776454,-5.216129,9.926095,7.086502,7.153293,2.368837,7.917972,-2.780034,-9.933821,-0.290827,-4.783925,8.847358,7.233166,-8.222220,-6.515550,8.207477,9.561666,6.799431,-8.906386,7.065112,9.247597,3.753466,1.468806,0.891776,-4.132717,7.786475,3.040345,1.026608,-3.887850,-8.673874,7.705497,5.423785,5.726577,4.024532,7.578695,-7.275546,-7.435661,-8.048933,3.667106,1.944989,8.749776,9.197610,1.514313,2.378180,-4.017128,9.800804,6.916661,7.294522,2.339777,8.391705,4.304277,-5.255219,6.678747,-0.689261,-6.655793,-6.578168,-6.571606,8.133163,-8.683962,2.782727,-5.000379,-3.753124,-2.327440,-1.150479,4.947600,-6.862431,0.667168,-7.076572,9.934103,-0.873172,-7.914147,2.732854,-7.326364,-9.782412,7.185045,4.389280,-5.742129,-5.862669,9.528902,7.801905,-3.098343,-5.195556,-5.192369,-7.133483,1.586910,5.120120,2.748840,-5.678450,7.325133,-8.072675,-1.433841,-9.222780], dtype = "float32")#candidate|544|(936,)|const|float32
call_543 = func_99_call(relay.reshape(const_544.astype('float32'), [6, 12, 13]))
call_545 = func_99_call(relay.reshape(const_544.astype('float32'), [6, 12, 13]))
output = relay.Tuple([uop_503,uop_529,call_543,const_544,])
output2 = relay.Tuple([uop_503,uop_529,call_545,const_544,])
func_566 = relay.Function([var_497,], output)
mod['func_566'] = func_566
mod = relay.transform.InferType()(mod)
mutated_mod['func_566'] = func_566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_567 = relay.var("var_567", dtype = "float64", shape = (13, 13, 5))#candidate|567|(13, 13, 5)|var|float64
func_566_call = mutated_mod.get_global_var('func_566')
call_568 = func_566_call(var_567)
output = call_568
func_569 = relay.Function([var_567], output)
mutated_mod['func_569'] = func_569
mutated_mod = relay.transform.InferType()(mutated_mod)
const_616 = relay.const([[[-5.900598,1.959469,2.536656,-8.290264],[-6.787693,1.666606,-5.296657,4.025182],[-8.482913,7.214533,4.496950,-6.453513],[-8.782031,9.378560,-5.220966,9.343095],[-1.061226,9.253564,7.433618,-0.554317],[3.341963,-3.648620,-2.786678,6.821922],[5.012678,-2.679071,0.423668,-9.035654]],[[-2.898037,-8.534452,-7.619692,-8.485956],[2.624379,-1.086753,4.331334,-5.178942],[-8.996611,-8.235753,-8.923110,-6.310423],[-9.780322,9.794514,7.811511,-7.303289],[9.528582,-0.446465,-7.155945,-4.323974],[8.891608,-1.811714,0.998748,0.086480],[7.901370,-1.423236,-6.302131,4.517641]],[[3.518347,-7.938184,-9.956445,-9.544582],[7.769148,7.135785,5.408124,1.006219],[9.275008,7.688093,-0.108842,-1.277879],[-1.250215,-9.400906,9.784659,-7.608598],[-7.311961,-7.639246,2.056654,-8.621845],[9.090743,-1.797219,1.741003,4.518350],[-9.647363,3.798806,-4.992794,-4.384699]],[[-4.641247,4.554373,5.690911,-8.500474],[-9.224490,-1.889362,0.603850,-9.668530],[8.669770,-5.923088,3.548980,5.557845],[-8.456288,-4.668597,-0.693762,-5.357306],[9.936007,4.725817,4.965498,-7.509050],[-0.285227,9.123175,4.885852,-6.457137],[-5.999314,1.134127,9.005938,7.976091]],[[9.390795,-6.440939,5.222385,-0.262323],[-1.131747,5.576610,2.584439,9.215316],[-5.030903,-9.985591,-1.321074,-0.212003],[6.070116,-5.759131,-4.711950,-1.560784],[-9.537385,-1.473503,9.743223,-7.923921],[-7.502774,2.037721,-7.976686,9.100731],[0.175545,-9.360302,-5.069337,1.897438]],[[6.575085,-4.516042,0.859235,7.400446],[8.990957,6.472889,4.497607,-5.244989],[8.040369,6.699334,-8.589801,1.504496],[-6.621826,-2.075513,-4.023767,-3.984728],[4.041818,-7.439683,-5.953770,-5.992827],[7.857438,-1.010093,-9.989235,-0.245442],[7.106263,0.630994,-4.993103,4.155023]]], dtype = "float64")#candidate|616|(6, 7, 4)|const|float64
uop_617 = relay.asinh(const_616.astype('float64')) # shape=(6, 7, 4)
output = uop_617
output2 = uop_617
func_621 = relay.Function([], output)
mod['func_621'] = func_621
mod = relay.transform.InferType()(mod)
output = func_621()
func_622 = relay.Function([], output)
mutated_mod['func_622'] = func_622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_663 = func_621_call()
call_664 = func_621_call()
output = call_663
output2 = call_664
func_666 = relay.Function([], output)
mod['func_666'] = func_666
mod = relay.transform.InferType()(mod)
mutated_mod['func_666'] = func_666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mutated_mod.get_global_var('func_666')
call_667 = func_666_call()
output = call_667
func_668 = relay.Function([], output)
mutated_mod['func_668'] = func_668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_669 = func_621_call()
call_670 = func_621_call()
output = relay.Tuple([call_669,])
output2 = relay.Tuple([call_670,])
func_676 = relay.Function([], output)
mod['func_676'] = func_676
mod = relay.transform.InferType()(mod)
mutated_mod['func_676'] = func_676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mutated_mod.get_global_var('func_676')
call_677 = func_676_call()
output = call_677
func_678 = relay.Function([], output)
mutated_mod['func_678'] = func_678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_689 = func_621_call()
call_690 = func_621_call()
func_566_call = mod.get_global_var('func_566')
func_569_call = mutated_mod.get_global_var('func_569')
var_712 = relay.var("var_712", dtype = "float64", shape = (845,))#candidate|712|(845,)|var|float64
call_711 = relay.TupleGetItem(func_566_call(relay.reshape(var_712.astype('float64'), [13, 13, 5])), 0)
call_713 = relay.TupleGetItem(func_569_call(relay.reshape(var_712.astype('float64'), [13, 13, 5])), 0)
output = relay.Tuple([call_689,call_711,var_712,])
output2 = relay.Tuple([call_690,call_713,var_712,])
func_732 = relay.Function([var_712,], output)
mod['func_732'] = func_732
mod = relay.transform.InferType()(mod)
var_733 = relay.var("var_733", dtype = "float64", shape = (845,))#candidate|733|(845,)|var|float64
output = func_732(var_733)
func_734 = relay.Function([var_733], output)
mutated_mod['func_734'] = func_734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_751 = func_621_call()
call_752 = func_621_call()
func_676_call = mod.get_global_var('func_676')
func_678_call = mutated_mod.get_global_var('func_678')
call_753 = relay.TupleGetItem(func_676_call(), 0)
call_754 = relay.TupleGetItem(func_678_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_757 = func_666_call()
call_758 = func_666_call()
bop_766 = relay.subtract(call_753.astype('int8'), relay.reshape(call_757.astype('int8'), relay.shape_of(call_753))) # shape=(6, 7, 4)
bop_769 = relay.subtract(call_754.astype('int8'), relay.reshape(call_758.astype('int8'), relay.shape_of(call_754))) # shape=(6, 7, 4)
bop_777 = relay.right_shift(bop_766.astype('int8'), relay.reshape(call_753.astype('int8'), relay.shape_of(bop_766))) # shape=(6, 7, 4)
bop_780 = relay.right_shift(bop_769.astype('int8'), relay.reshape(call_754.astype('int8'), relay.shape_of(bop_769))) # shape=(6, 7, 4)
func_566_call = mod.get_global_var('func_566')
func_569_call = mutated_mod.get_global_var('func_569')
const_797 = relay.const([2.887465,0.202818,2.081626,-2.891884,-2.275556,-0.327002,0.619527,5.119844,8.855162,-1.937682,9.696403,7.332126,8.416816,-6.590311,-9.379798,0.899697,8.617687,-5.117814,-4.428389,-1.113337,-2.547180,-4.195342,-0.447397,3.541467,9.983129,-8.713637,-3.281631,-0.963326,5.805370,-7.236772,-0.607440,1.290803,-2.806545,0.305755,4.075044,5.811702,-1.786215,6.835709,1.966720,3.893611,9.994348,-0.162260,2.177165,4.301699,6.128936,-6.773846,4.745618,6.903684,7.179222,3.550583,0.780890,4.238384,-9.801700,-7.489040,0.339312,1.519370,4.685094,-0.690181,-0.054692,4.636824,-7.869311,-9.384114,-7.113169,4.742323,-4.310719,-2.606781,-9.769984,2.080680,-1.955682,-6.428070,0.117034,-9.731242,0.391643,-6.227503,4.157047,5.862420,5.790266,4.740490,-1.894729,-5.842984,5.652858,-9.032824,-9.122426,8.813132,0.281694,-4.604055,8.314216,2.647196,-0.485619,-5.847815,9.372197,2.450527,2.521789,-7.087505,0.797106,-1.936819,4.169678,-5.505726,0.412180,0.276952,-0.945016,4.782094,-4.663847,-6.919709,-0.610280,-5.214623,5.380751,8.856111,0.426370,-0.160466,-2.968279,2.586275,3.887128,6.437078,8.269035,6.696913,-0.360233,8.134241,9.311156,1.849577,9.239316,4.616574,2.421167,2.127536,6.336171,-5.985672,3.066029,4.552522,4.828606,5.350881,8.561968,-7.752561,9.089667,5.218857,-2.442657,2.682596,-8.050664,-8.256802,8.042089,-5.236082,1.836752,-3.489911,7.217613,0.254646,-0.349633,0.329122,5.606477,1.208335,-3.956864,2.628863,-2.701844,-2.095477,0.679391,-4.155819,-4.780999,7.703113,4.917483,-8.340221,-5.219879,-1.658953,-5.748145,-4.806194,8.883692,9.821073,-5.678787,-0.903250,0.471217,-2.452706,9.443531,7.673439,5.985067,9.620232,-6.488545,7.802706,9.509885,5.956235,-6.415866,3.673920,2.311400,7.075070,8.615320,-8.721244,-2.913107,-6.756150,-3.654107,2.085781,-5.227916,-5.160308,7.815896,8.150053,2.994716,-5.536318,4.208579,-1.117110,-1.393184,-7.290351,8.287979,-9.044133,1.422416,-9.645469,-2.708743,-4.297542,-0.434854,3.284083,-4.502958,7.855682,5.428273,5.263570,0.606225,-4.439544,6.256791,-7.606469,3.235312,-2.416113,2.598814,-3.970472,5.200591,-6.537887,-6.000758,8.598617,1.923069,-4.314048,-6.295154,5.288959,6.405287,-9.277626,-6.962017,-8.211105,9.894153,7.426551,7.098165,9.984671,-8.439696,-3.464440,7.691084,2.714194,-1.706439,-5.619105,-0.375924,3.047702,7.557171,-1.634387,-5.990805,2.139562,-5.760421,-4.545428,8.420554,-6.127164,3.885683,-0.864753,-4.963874,4.901981,1.516183,8.757473,3.809575,-6.057777,-9.009209,4.880725,6.570306,2.088888,7.389626,0.207430,8.974402,-0.366280,-0.047781,6.782433,-9.049005,-3.187533,-3.864277,9.929450,-6.321222,-5.823209,1.017887,6.135296,9.992243,-6.583051,-8.394908,4.642196,7.201688,-7.561482,-5.946217,-4.850192,5.769320,-5.710799,-7.499083,6.006348,7.128644,-0.914440,6.376848,2.716851,-8.085506,4.876053,2.726611,-8.282932,-8.572708,5.324437,-1.697737,-9.594430,-6.711259,-0.120296,-9.603355,2.832440,2.485814,-2.867050,8.006789,5.462690,6.078164,-8.270412,9.531038,3.967352,4.352972,-6.157791,-1.021631,7.894203,-7.659132,-4.276922,-3.124388,-7.309319,0.692055,-1.472690,2.631639,-4.729501,5.878759,3.292085,3.513443,-6.650937,4.149149,-8.080671,6.665464,-6.593008,9.329619,7.842100,-4.414691,-1.775131,-1.270162,-3.185122,-9.191413,9.782411,5.742945,6.852361,6.639141,-0.819033,-3.586077,4.806747,-9.809641,0.535337,-3.736823,8.508487,4.598560,-5.970683,0.535572,3.020927,1.475549,9.397194,3.432430,2.691464,-1.618106,-9.898345,-3.921343,3.054988,6.963840,2.147596,8.297937,2.703727,-4.366280,-1.261749,-3.639409,3.206624,-2.573697,5.261359,1.612253,6.658558,-7.378822,7.850954,9.072674,1.282019,5.959872,-8.164475,-6.658110,3.999002,3.429844,-8.136682,9.364002,0.567501,-8.741566,-6.916366,2.942696,4.113055,6.697804,-3.256346,4.193330,0.253046,-2.711875,9.716142,7.028645,9.997288,3.575325,1.518563,-2.330013,-9.875225,6.304486,-0.798268,-8.774761,-8.424083,-3.429443,-4.005885,-3.571659,3.416114,9.236340,4.264657,9.601824,5.825884,-5.308037,-6.112308,3.935246,2.851887,2.349946,3.063874,-7.781774,1.495029,6.070907,-5.675677,6.222636,-8.541695,7.724945,-0.839675,1.417093,2.940962,-0.559650,-7.898749,-3.823263,-7.249287,4.895636,-2.615897,5.220140,3.189897,6.225331,-6.154927,3.978298,-4.482086,3.204917,6.972548,-6.456562,-1.553599,-0.526880,9.821453,8.323759,-2.345467,1.162677,-6.867517,-3.888353,4.585205,0.133443,8.747018,3.217916,3.811390,-0.450574,0.556665,4.610799,4.214943,-8.686963,5.332107,-8.580397,-1.132003,-9.165244,-6.569381,-9.572964,-4.060994,6.818045,-9.466534,0.687699,4.768967,0.006942,5.792927,7.448851,-6.676448,4.007077,5.415781,-5.224417,8.302529,-8.743491,3.486655,-7.765881,-8.316720,3.316769,-5.828403,5.098744,-2.111734,-7.022457,8.632535,-5.414466,9.685578,8.552149,8.690179,-7.910274,-8.181568,-5.024396,-7.939087,-8.297728,1.572709,3.819563,-5.504357,9.633650,5.299503,-4.062634,8.246822,5.136263,-2.894669,9.931912,-2.661428,9.359229,-6.122114,-1.303790,-4.444641,-1.634945,3.545643,2.785851,-4.761868,-2.496978,-1.985694,-9.627722,-6.020845,-2.665317,6.731008,-5.888916,7.411747,-0.801083,-3.698207,-4.545790,2.190640,-3.820878,9.702890,1.859449,-4.481049,4.497424,-1.249280,7.784747,4.177802,-9.630415,9.234643,-5.038267,-1.075622,3.099879,-6.270774,9.811628,-0.960591,-9.187209,6.697802,5.479771,5.446300,-2.274247,-9.712322,-3.201473,9.486513,-5.713746,-8.965512,6.739606,-5.366870,3.651508,0.734310,-8.141613,-6.153011,2.354669,-1.925158,9.385600,3.785742,-6.793143,4.018464,-0.349085,4.910105,-2.774290,5.712014,-3.002741,-8.312307,-1.837993,-4.234568,6.584091,7.495862,-4.434347,4.614724,-5.715376,5.970339,-0.520208,6.031841,5.327919,-2.515511,-1.722172,2.319876,5.675376,-4.603143,4.836511,-7.215488,6.410300,5.237335,-9.100501,-6.772770,-8.699333,9.611991,-6.187109,4.984670,9.887822,9.294888,8.651648,-4.917592,-6.565793,1.452686,2.833735,-7.958221,7.497263,-3.165963,-1.962482,-9.190047,-2.858375,-1.084075,5.031806,-3.032187,8.496585,-3.587051,-0.426097,9.850781,-6.032103,5.230644,-2.061571,-3.682750,7.578619,5.026271,8.683580,-6.118135,9.060965,0.055557,-8.270128,9.365417,8.627660,3.416184,-4.194161,3.282515,3.531105,-3.716145,-0.262624,3.646574,9.405934,-6.285879,7.794005,-1.302085,1.999664,3.659715,1.449135,8.291872,-7.135474,8.670777,0.695489,9.127327,3.568824,-9.397980,3.321760,6.946990,7.502716,6.679787,1.096368,0.909136,0.996609,-0.371735,-6.019843,-8.643511,-5.723232,2.180557,-5.262273,-2.001808,3.058393,7.328426,7.294631,6.482235,-7.640056,3.800644,8.642649,-6.987943,4.712915,2.959185,-3.064320,-2.189961,7.027352,-6.997141,1.479200,8.884627,-9.756207,5.237070,-6.869711,-4.220234,3.804261,-5.360839,-2.477121,-4.295414,0.477806,9.280826,0.032629,8.763277,-1.232367,-6.525772,-6.540320,-4.836549,-3.946564,-6.983853,-1.013743,-0.851684,-8.624153,-6.740307,0.873528,-8.852741,3.665667,8.917627,-3.686975,1.251081,-0.186805,-0.477750,-8.140397,1.494582,-8.838148,7.260181,-6.291601,-5.741340,-4.794640,-8.211350,9.600805,-1.513152,-8.261207,4.842270,-9.295445,3.957108,-2.884922,-1.213798,-5.106200,-9.189567,3.814190,-1.997278,0.318031,0.677587,9.948203,2.484679,-0.649005,5.925248,7.232987,4.166993,-0.715315,7.184707,-5.164018,0.952910,9.583576,0.303980,9.454660,7.633281,6.152202,-4.644459,-1.561307,9.548308,4.234385,2.291974,-3.967479,4.523412,-6.323572,7.177137,-9.218084,2.387779,-6.712773,-2.185737,-6.985748,-8.306693,-3.010399,8.592585,9.248681,-6.330464,0.696277,1.215961,-1.163573,-1.187561,2.803269,-3.869465,-0.507015,-8.026498,-5.362308,-4.212283,-4.488762,-3.034389,6.830309,8.005401,9.185498,-9.867469,4.058498,-0.325353,-7.203208,-6.311199,-3.187038,0.299874,6.069320,-9.650785,-7.002052,-0.673774,7.253505,-7.164614,-7.587728,9.788553,6.460557,4.953149,-2.701708,-0.541810,-5.335801,-6.272182,8.042812,-2.150830,2.908248,6.651559,8.537921,-4.643758,-4.308021,-4.630104,-4.023276,-8.131096,9.436710,3.551674,0.660352,-3.268368,-8.919569,7.878253,-1.401997,-8.305592,-5.103605,9.469119,-8.106036,-6.680501,-8.285823,8.090150,5.143843,-0.191362,8.282081,-1.285451,-1.595566,4.307599,4.737500,-7.799511,-5.103085,-2.500108,-7.776694,-6.771095,3.380282,-4.247328,6.657843], dtype = "float64")#candidate|797|(845,)|const|float64
call_796 = relay.TupleGetItem(func_566_call(relay.reshape(const_797.astype('float64'), [13, 13, 5])), 1)
call_798 = relay.TupleGetItem(func_569_call(relay.reshape(const_797.astype('float64'), [13, 13, 5])), 1)
output = relay.Tuple([call_751,bop_777,call_796,const_797,])
output2 = relay.Tuple([call_752,bop_780,call_798,const_797,])
func_822 = relay.Function([], output)
mod['func_822'] = func_822
mod = relay.transform.InferType()(mod)
mutated_mod['func_822'] = func_822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mutated_mod.get_global_var('func_822')
call_823 = func_822_call()
output = call_823
func_824 = relay.Function([], output)
mutated_mod['func_824'] = func_824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_937 = relay.TupleGetItem(func_822_call(), 1)
call_938 = relay.TupleGetItem(func_824_call(), 1)
output = relay.Tuple([call_937,])
output2 = relay.Tuple([call_938,])
func_943 = relay.Function([], output)
mod['func_943'] = func_943
mod = relay.transform.InferType()(mod)
mutated_mod['func_943'] = func_943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_943_call = mutated_mod.get_global_var('func_943')
call_944 = func_943_call()
output = call_944
func_945 = relay.Function([], output)
mutated_mod['func_945'] = func_945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_1019 = relay.TupleGetItem(func_822_call(), 3)
call_1020 = relay.TupleGetItem(func_824_call(), 3)
output = call_1019
output2 = call_1020
func_1021 = relay.Function([], output)
mod['func_1021'] = func_1021
mod = relay.transform.InferType()(mod)
mutated_mod['func_1021'] = func_1021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mutated_mod.get_global_var('func_1021')
call_1022 = func_1021_call()
output = call_1022
func_1023 = relay.Function([], output)
mutated_mod['func_1023'] = func_1023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_1029 = func_1021_call()
call_1030 = func_1021_call()
func_99_call = mod.get_global_var('func_99')
func_102_call = mutated_mod.get_global_var('func_102')
const_1044 = relay.const([3.862916,4.036969,-0.541212,8.941067,-9.041648,2.061202,4.528917,6.749858,-7.497535,-7.798475,-4.144218,7.545124,-2.083521,-7.462078,-7.229563,-4.860418,3.895304,-0.392134,-1.293938,-1.688286,9.146199,-5.181602,-9.464685,-9.750879,6.089492,3.882096,4.122160,-3.001727,4.417514,2.032155,-2.592897,-9.419671,-9.581411,3.447174,-2.371922,7.710924,-5.083905,1.573617,9.273398,7.134132,-0.052046,9.110173,4.185817,8.779850,-0.645307,-2.308100,-8.263177,-4.079511,6.732986,2.689635,9.100379,4.948512,6.510738,6.279492,9.847946,2.682213,8.466984,6.665730,-8.472078,2.545850,1.331027,0.850646,-6.100211,-0.698347,-2.619951,-3.532909,-5.912283,9.301226,-2.966950,3.221717,7.226873,4.955938,2.749861,4.645179,3.094121,-8.533612,4.649262,6.185291,1.753645,0.552684,0.259150,-4.381846,-7.714976,7.090904,-4.257244,-7.176047,-0.028518,-7.492349,-8.444200,7.382268,-7.472103,-8.307401,-4.118856,-5.855278,-5.903670,6.213444,0.867973,1.923081,9.425123,-3.054180,8.602667,7.332303,-7.503257,2.969372,4.498988,-2.150595,-1.483086,3.248638,-1.174337,6.728183,-4.860621,2.261379,-7.459231,0.672381,2.109082,4.338048,-4.381151,-7.678439,-9.524370,4.027816,8.329079,7.126556,-6.787473,-2.767592,-0.918926,4.858992,-8.462790,-1.997138,-1.001419,-0.280204,4.489351,-5.260822,-0.759250,-5.692636,0.259521,-6.949821,-1.625847,-9.910706,0.114105,2.805359,-9.781530,-3.828347,3.648718,4.551681,-7.236258,-5.391733,5.436848,8.076392,3.522445,-5.421267,0.956665,4.926545,8.130699,-5.273794,-8.921430,-3.010694,7.489646,8.771596,-7.295838,-6.057321,-6.901649,-6.733694,5.598472,4.542497,-9.213742,5.669277,2.380224,2.381291,0.478483,5.164716,3.028702,-0.387634,-5.287141,-9.274484,1.519294,6.934798,3.691560,4.143687,6.877497,2.694302,4.676283,7.601709,-3.235928,5.679138,-8.743761,2.717753,-3.938203,-1.080970,-1.106840,2.233675,5.953026,5.064229,6.943435,-7.485422,-1.239058,-6.558873,-5.965954,-3.360450,-3.222877,-7.696456,-6.750924,-4.365455,-5.221368,8.513589,0.106349,-8.418134,1.548163,7.118150,-6.914934,5.096205,-5.132919,-3.834347,7.575268,4.763309,-8.589249,-5.803250,6.897681,-3.540887,-7.321852,-9.989350,-2.754837,-4.445521,4.532231,-6.026317,4.870576,-9.405905,2.987756,5.559266,7.569974,-7.215456,-8.858093,-0.071864,-8.952808,4.071100,-5.941739,-2.304289,-7.028852,-3.200263,7.717779,-8.894158,-7.075295,-4.226061,1.404888,-7.422690,-9.071408,9.028445,6.930503,-6.657007,-1.781346,-2.983283,-7.176191,4.708281,-2.124272,-5.255483,6.640932,-6.845106,3.596034,1.794040,-3.114272,3.374192,4.203959,-4.755103,-0.450543,-3.977513,-8.783893,7.148888,0.700847,-9.587266,-9.476769,0.261404,1.364329,8.408150,-4.987818,2.283932,-2.847931,4.668105,8.544216,-0.164367,9.252614,-8.610842,-2.989410,-0.266379,4.813532,5.433677,0.868378,7.758616,-1.427258,5.217922,4.841475,-7.958857,6.163458,5.326476,2.015399,-3.664300,-5.786115,-0.557909,-8.939550,7.714523,7.569356,3.708424,0.287246,9.400320,1.362406,8.382945,-1.554570,-3.883161,2.731344,-1.257702,5.942599,6.902479,-3.567180,-9.188586,-2.819320,-5.590931,-7.837722,-5.349397,-1.834453,-9.302206,-7.348759,-3.917394,3.171639,-4.235668,5.422397,5.566774,3.679898,-2.543038,-4.857712,-2.208645,-9.952850,2.247643,-3.012364,7.809355,7.247456,-0.427171,6.314863,-1.033804,2.663172,1.056719,-2.282009,-0.967651,-2.635967,5.941419,8.403784,3.976929,-7.529608,8.758299,4.670220,1.499951,-3.495838,-1.826664,-9.214894,-5.007445,-7.477363,-0.959059,-1.277401,-2.269127,-1.784596,8.511779,-5.070917,7.443450,0.763530,5.486524,1.891121,-0.900346,3.050291,6.438257,7.584521,5.367987,-4.258749,-5.179875,-5.086198,6.815698,-7.403089,2.536802,9.776965,4.044835,0.874118,6.892089,8.087909,-4.519231,0.508237,5.352371,1.941753,-0.896691,-3.634711,-6.573344,0.229910,7.688907,-7.178992,-3.558683,-7.639179,3.790722,7.340885,-6.604397,-7.563396,5.338800,4.106314,-1.222757,6.189703,-5.377332,-3.796665,1.123759,-3.533610,2.211359,2.239666,-7.162436,-0.263793,1.860274,6.625225,-4.848362,-4.272515,5.353472,-5.308942,-4.442111,-2.630977,-7.014583,7.088161,-1.289038,-1.288795,-2.849765,-3.504835,0.045337,-2.903057,-3.220208,1.591169,5.134339,-6.426929,9.918201,8.191682,-9.357568,-1.195593,-9.536597,-7.926846,7.321374,-9.285972,-5.486653,-6.883572,8.707088,-9.990758,-7.460522,3.175690,5.734436,-6.198451,-2.228830,-5.535715,6.704903,5.516292,-0.517787,6.029034,5.563019,-4.741478,-3.014399,6.493507,8.860132,6.456287,2.113973,-2.930059,-4.506763,1.918091,-2.277770,9.751680,-1.947986,8.475792,0.890924,-3.855049,-4.882440,-9.757654,-0.774421,6.344802,-9.706075,2.078038,2.420361,-0.177415,3.223359,-1.644092,-7.046160,4.324543,1.875906,9.102107,5.807732,5.800959,-3.939409,-2.972535,0.818387,4.329287,-1.827604,-7.598758,-0.124973,7.097516,-7.532578,5.023605,-6.311192,-7.476493,5.798659,-1.947894,5.351890,-7.568534,7.438913,-8.426885,-9.419418,-9.125207,7.393890,-1.869979,-1.812207,8.569066,-1.052365,3.303897,5.750975,-5.755011,9.890060,-7.036241,-3.332847,5.512441,1.388550,-2.946834,3.224115,4.725028,1.196798,-3.969873,7.220365,3.642008,-7.287280,-6.095159,-8.123950,-4.775054,8.159630,-5.023925,4.387192,-9.313193,-3.515529,4.923522,9.561061,-2.255261,-3.546102,-3.175575,-2.257964,3.734259,-8.418962,-0.976718,-2.247719,9.537886,9.641663,1.259918,3.029245,-9.232043,3.235756,4.763653,-5.218819,6.503192,-9.187467,-9.295747,2.562555,0.805815,-6.029899,-5.402818,-5.466764,-0.121053,-8.417815,-2.194510,4.350617,4.140383,-2.858421,-9.614627,-1.964878,-7.209953,6.353843,7.353006,-4.570366,3.221211,-1.206540,-5.506836,0.416564,5.836513,-3.759103,6.901421,-7.592472,-7.256072,3.333812,3.296348,0.186618,-6.637447,-2.555760,6.806938,-0.712033,2.142596,6.380123,0.530998,6.600771,-4.806163,-0.766900,9.904736,-1.257382,-8.595171,-8.390029,2.815664,6.700899,2.671637,6.722316,-3.403664,4.413147,-0.928991,3.936473,4.851577,-3.640952,5.131864,4.930596,1.819676,-8.254466,6.867345,6.799981,-0.845130,-3.915462,4.389955,7.147345,3.651782,4.964259,0.084049,2.288793,9.276169,-8.002671,-1.065848,-9.887846,5.832579,3.471613,4.821296,4.491553,0.096378,3.700938,3.469430,6.601019,0.607435,-4.966363,3.104488,6.152167,-8.552523,0.039989,9.318271,-4.178271,1.640187,3.370184,0.541385,-7.569861,-0.524396,5.809441,-9.056508,-3.652426,5.097931,-7.982273,-5.115246,-0.818680,8.690616,-0.464942,6.597125,9.218253,-4.235899,6.219545,9.488471,3.258308,-7.656141,1.374341,1.293419,-8.238054,8.297514,6.895925,8.982845,-5.309555,-7.004150,5.923881,0.022777,-9.062532,-8.709067,9.652069,7.052193,1.776960,4.341841,7.173574,6.742960,-0.225646,-1.143627,-8.920264,8.266183,1.031714,3.013789,1.716486,3.109747,0.545390,2.839450,-2.265790,6.196753,-8.484061,-9.953790,4.938292,-0.552264,-2.149813,5.581696,-4.467532,7.331696,-4.719868,-3.238505,-8.760498,6.263772,0.696263,-1.496806,-8.173346,-8.738019,7.770288,-3.787852,-3.332243,-9.252243,2.918467,7.138353,-2.867854,1.705300,-1.292726,-7.625288,-8.120535,-8.609638,-5.182017,4.381595,-4.559320,-8.248076,-8.396707,-8.448094,2.394827,-5.468781,-7.051232,-5.798050,-2.448928,-6.949720,4.850983,4.459821,-7.097504,-2.351841,0.032746,9.047394,0.777904,9.418158,-9.454888,-7.961092,-8.736255,3.048689,-2.447528,7.123961,1.577832,2.367594,-8.370326,-7.546125,-9.702633,9.177546,-5.239565,6.354506,-6.500276,-8.544259,-4.584983,-1.096592,2.390942,-5.003371,7.679837,-7.846152,2.292548,-9.710714,4.890333,-6.963323,1.363382,7.402678,2.643012,0.358824,9.007434,-6.715885,-2.211524,-5.276438,-9.810715,7.948423,-2.104193,2.478087,-1.691820,9.592269,-3.164960,2.613253,9.166697,-5.113929,-5.887734,2.996086,2.897013,8.388857,-6.273110,5.732931,-4.860797,9.688095,-2.508977,-6.681328,-2.670086,-0.743666,-7.668722,-8.903604,-0.844823,-4.184131,-0.197765,-1.977843,1.208025,4.853386,9.116207,5.539085,3.709624,-0.234222,7.326701,-6.108882,-6.614477,-6.810467,4.342882,5.711861,6.808322,-9.836729,2.828724,0.262964,-3.280959,-7.651640,9.508930,-0.753600,-9.649656,4.561088,7.482168,5.125830,-6.031713,-9.536879,-5.681220,-6.543361,4.370649,0.715333,9.712677,-8.927672,6.595807,-2.227894,-2.905974,-5.761899,5.528212,-0.705512,9.642736,4.742308,7.104623,7.979402,6.163048,-4.739649,-0.734094,9.239941,-6.529611,-5.163103,-9.031541,8.454518,5.975182,-9.890115,4.780433,9.535447,-1.937212,-5.912255,5.168055,-9.266376,9.176175,4.977498,-3.089186,-6.244104,-3.827760,5.554332,9.189511,7.204653,-3.896226,6.157745,-7.654872,-5.206124,3.685395,8.551295,1.694770,2.147636,-6.663998,-8.997004,4.738298,0.142744,0.883379,6.817490,3.297237,9.977230,-8.529851,0.177336,-3.222725,9.109369,7.120627,-6.292833,-6.510819,8.514106,-6.406710,-5.382955,-8.382592,-2.783692,-8.273625,-0.521389,-4.238106,3.206899,6.628842,-4.661148,-3.455928,2.436789,-9.177657,-1.507249,-4.892591,7.499728,-6.856977,-0.975259,3.420820,-0.098929,-6.982943,-8.308658,4.937896,5.918913,-8.562252,-1.073788,-0.717347,-7.452284,2.933762,3.672883,9.177946,-9.813278,-2.061560,-7.637522,0.084379,3.232613,-3.111501,6.556010,2.572085,-1.312013,-3.718863,6.636679,-0.366042,1.696152,-9.193385,7.892196,0.911502], dtype = "float32")#candidate|1044|(936,)|const|float32
call_1043 = func_99_call(relay.reshape(const_1044.astype('float32'), [6, 12, 13]))
call_1045 = func_99_call(relay.reshape(const_1044.astype('float32'), [6, 12, 13]))
const_1060 = relay.const([-5.772504,6.066422,4.445610,5.492469,5.172581,-1.562444,7.260379,2.454728,8.395290,6.896742,7.232605,-5.219224,4.161552,-5.196175,-6.200391,-5.004943,1.490398,-6.908783,-0.518650,9.162365,0.713710,-2.023613,-4.622051,4.761369,-4.371863,9.874167,-8.033246,-4.648092,4.575614,-9.315790,-9.619058,-2.297665,3.121763,8.317177,-0.635973,9.845231,-9.768138,9.150851,2.285373,-3.081569,6.125851,5.654788,3.064244,0.599046,-8.190138,9.214438,5.064448,-5.284023,-3.471239,-8.653277,7.002139,-7.946472,-3.249808,-6.598331,2.122945,1.341176,2.129400,-7.594888,4.506233,9.072247,-7.309325,-7.669122,-6.677980,-6.207050,-7.103485,-7.201452,-9.852191,7.021853,-4.921162,-7.452276,2.116796,-7.007880,-4.273602,0.520677,-0.790969,-5.126902,6.133191,-5.683609,7.218547,4.373503,-5.037471,9.842389,-9.755849,8.881650,5.066414,-0.329602,0.090207,2.032227,-8.681509,9.619431,5.890579,4.313566,7.842758,-2.442299,-5.519030,-2.772311,5.136047,1.390365,9.115461,-8.900122,-7.246989,2.904358,6.935355,6.606613,5.077157,8.160903,-5.188939,-2.242944,-3.768492,3.690142,-9.481692,8.769350,5.418813,1.566262,4.676302,7.230313,9.199814,-7.600920,1.546008,-9.629333,-4.773803,2.608175,-8.834744,-8.340929,5.492676,6.744044,-0.054037,1.992937,3.926575,-3.947932,4.468113,-6.950001,-3.390607,5.591546,-5.129956,-8.410541,8.704019,-7.981635,2.614298,5.838278,-2.682553,-0.640574,5.980181,-2.956361,7.641308,-7.005434,5.556840,5.559923,7.651064,6.854163,-6.158227,-2.731321,-7.565088,5.439100,-9.089006,-5.296970,5.989213,8.334151,-2.289369,1.515447,-6.016217,-9.916764,-6.619268,4.630556,3.765344,0.631475,-9.810940,1.560918,-5.237389,8.733748,9.048971,8.987337,-7.252524,-6.990027,3.296157,-0.403657,4.994106,4.088892,-7.345353,2.313462,6.156507,1.588734,-0.677294,-6.769837,4.884056,5.934511,5.474213,9.707409,1.955035,7.897247,6.280037,-7.614923,-1.339146,-9.650198,-8.802876,-0.149430,0.012432,-3.103402,7.779131,-6.923072,-8.262438,9.729949,4.964311,4.523357,-5.213007,9.728039,2.020674,-8.435730,9.644503,-2.470587,-6.877100,2.192700,0.350304,-6.930123,5.105089,8.678533,-6.738796,2.072166,-1.588587,5.391700,9.765393,-5.885299,-8.051945,2.173382,-1.307984,-6.429686,-1.743675,-9.444370,1.016463,-7.609309,5.925276,-8.531574,6.843882,4.358458,-9.187258,-8.127218,5.494503,-2.386342,-3.875489,1.679293,-4.966681,8.397903,-4.157905,-1.637314,-0.750657,-6.489427,-1.001405,-3.300150,-5.135048,1.316586,-4.121483,7.891401,0.385842,7.956593,4.996024,-5.594573,-7.564676,-6.842567,6.682985,-1.878917,-7.647283,6.722589,5.728213,-3.645532,-0.324644,1.918034,7.079075,-4.478169,-4.840161,-3.477175,0.499322,9.335783,4.051395,-2.689905,-1.528745,-4.359949,9.937975,-7.087525,4.372397,-0.602850,-2.301875,-4.169267,-1.872554,-1.614298,5.644237,-1.878927,4.466254,-1.317850,-2.759336,4.976008,-4.264091,9.372198,-9.189608,-0.870873,-5.751934,8.226681,-9.352215,-7.622127,-9.102315,-0.249438,-1.546998,-6.127289,-7.432778,-4.863022,2.837248,-7.359790,3.647968,2.566559,3.616373,-8.249875,0.469130,-4.255776,7.717055,-0.985331,-6.219843,9.914769,-8.698761,-0.632952,5.966464,9.028578,4.208996,-8.881052,0.195108,-3.083958,4.767752,-8.365040,-0.068653,5.842519,4.045815,3.850374,-9.346538,-2.997714,3.407960,9.902297,5.168116,8.722027,-7.453004,-5.093047,-1.074139,-9.107976,3.288650,-2.085198,-1.662874,5.077675,3.488430,0.395484,-9.581921,-7.295845,-5.777559,-6.442376,-3.736943,-3.530393,8.803170,-7.567901,3.257996,2.115547,0.005797,-2.955949,8.653597,-5.450755,8.441665,-3.989775,2.314899,6.462868,3.918106,-9.057578,8.550964,-5.548867,8.844608,-2.613671,-5.671070,2.405232,6.715741,9.733683,3.608473,-4.563824,2.512718,-4.125607,2.660465,-9.869986,7.864678,7.977111,-8.465350,4.546552,-8.245086,-1.554336,-3.758349,4.811103,-1.258342,-2.717500,-3.411240,-4.745846,-2.403552,-1.920270,-4.325252,-5.397911,3.459170,-3.397297,3.322126,4.954800,-2.754944,-2.422306,0.606657,-0.385151,-4.381171,-5.785750,9.058318,-2.015608,0.675491,-4.250352,-8.044319,-3.164732,-9.687600,0.529257,-2.926370,7.632796,-0.656306,5.558524,6.994274,8.029659,8.590540,-9.612132,-2.759813,-1.527154,-1.094756,6.240504,6.920239,-7.884464,7.128115,0.830161,5.728521,-8.512390,4.704948,5.028851,5.138669,-8.709555,-3.723930,-0.071176,-4.668668,6.244636,1.056681,7.539729,-4.709505,-0.783745,3.152663,1.646688,-5.953201,-6.058004,-8.623912,4.253398,7.731976,-6.376440,-6.505489,-9.158722,9.373418,3.809531,8.323545,8.193925,8.618725,0.468479,5.291522,6.763985,-9.158068,7.510695,4.596831,-3.450164,3.313912,3.664613,4.147304,-8.727371,8.762970,2.975145,-0.339923,-3.860377,-7.284892,-2.024165,-5.472776,-1.258129,2.600599,6.673978,-0.841448,2.391457,-9.272203,6.115792,0.988874,-3.683564,-0.683637,2.177761,-2.395316,-5.072347,1.776467,5.151368,-1.048160,-9.503349,9.280190,-7.863153,3.355772,7.316245,-6.753924,-5.368537,-0.515877,-1.116287,-4.366839,6.787774,7.999200,-8.646712,-4.899599,0.430140,0.939239,8.324933,3.932257,-9.749412,0.691534,0.605703,-9.373588,8.062246,-6.825962,8.556351,9.165424,-6.250618,-9.083069,5.503798,-9.561292,1.765312,-8.651488,-5.317372,0.566854,7.096829,5.499325,-1.846275,-5.500371,-6.433283,-6.828520,3.286009,6.424017,-2.670733,-2.970419,-6.179716,-1.372162,-4.613485,-6.498917,4.929625,3.025042,6.435608,0.601210,2.353076,0.413660,-6.382316,1.214198,-3.322693,9.154758,8.500966,-0.011320,-2.122661,1.550311,-5.188529,-5.341021,3.120462,-1.446337,-6.441318,0.065431,2.382686,0.532906,-4.273951,9.646557,3.930149,9.761486,6.673603,8.768605,5.916423,-8.241703,-0.860762,8.616276,7.764971,-1.299505,4.704560,8.470681,5.578259,-3.042689,8.818997,-4.653093,5.693302,3.672278,3.632859,-5.223603,-3.701334,-7.884716,5.490580,-3.127991,9.849175,-4.689257,-0.766511,4.721061,7.316778,7.157526,-2.316502,0.466352,-7.144629,-2.165504,3.643873,-6.792047,0.140076,1.630110,-7.364477,9.398160,-3.956961,-6.477881,7.051218,-8.645701,9.262758,-6.484548,5.827177,3.015446,-7.865970,-6.673381,9.031439,6.200121,4.896503,9.325360,5.963536,-9.576426,9.561008,-6.396099,-2.060968,2.565562,1.630233,4.962457,5.162770,-0.486570,-7.802774,-5.754768,0.929235,8.398028,-3.256495,-9.934355,9.481877,8.786709,7.802841,-8.752493,5.002606,8.892565,6.003573,8.016924,-7.774365,-1.242359,-2.207960,-6.136254,9.334598,5.221951,-1.146025,2.174036,-9.535024,-2.243770,-0.518034,1.107630,-3.847762,-1.024654,-5.011027,8.907801,9.934406,5.015037,-0.363012,6.655502,0.957745,5.083897,-3.042652,-5.583839,8.734268,-7.576718,1.151371,9.444225,1.198988,0.740175,-9.993165,-5.145597,-7.582630,0.118020,2.345229,-0.433117,2.519324,-7.701234,-7.681560,-3.731044,-1.966186,-7.574638,8.694742,8.355011,9.510330,-4.077086,8.539499,-1.070862,-1.194315,-0.750827,-6.817069,0.621928,-0.030397,-6.484565,-7.729347,5.353034,1.365191,-1.753258,7.084304,9.014565,-0.038534,-7.706014,-8.138234,3.261637,4.442859,-2.687668,4.946554,2.173941,-0.372453,-2.046181,9.987396,8.885816,7.953910,3.632436,5.179576,-8.045065,-0.527106,-3.307280,9.305651,3.507220,0.437733,-8.070562,3.015484,3.921756,3.903936,-8.144058,7.267362,-2.195469,1.343565,1.958261,-1.815436,-4.686802,5.623877,-8.812838,7.723083,1.277485,4.660052,8.712596,5.441039,-5.563020,-2.336353,4.230437,-0.967805,8.365555,0.188282,0.285849,-0.866113,-3.369924,-5.152246,-4.205432,1.679207,-9.735776,3.496330,0.994662,-1.071320,-3.702190,0.411273,-3.371057,2.742933,1.251118,4.933908,-5.420671,6.330170,7.516793,5.371900,8.559919,4.280988,-9.221292,2.256879,8.662210,9.988661,-6.214735,-6.758804,2.405950,-9.227092,-8.426105,1.418094,5.929551,-0.016554,-7.087070,-2.975107,-0.020461,8.053550,9.863440,-2.817890,7.787606,-8.166926,-7.633135,-8.174649,-2.504611,0.620931,-2.062596,5.675198,5.486741,-5.639623,-0.456315,1.544147,-7.627976,6.357692,5.027209,4.985915,4.587059,-4.428552,-3.879859,7.861691,-4.901995,2.415482,1.482188,-3.466069,-5.444122,-3.131277,-9.542155,3.942527,0.893728,-9.969715,7.795793,7.878778,5.752351,-9.542183,-7.783501,-2.881373,-3.977415,-4.605384,-5.819491,-7.689992,2.451449,6.166017,-6.979402,4.628825,1.398533,-0.315274,0.328359,-2.462844,-2.581932,-8.047270,-6.474659,8.984636,-6.758464,2.777407,-5.779764,-3.820207,-1.125095], dtype = "float64")#candidate|1060|(845,)|const|float64
bop_1061 = relay.logical_and(call_1029.astype('bool'), relay.reshape(const_1060.astype('bool'), relay.shape_of(call_1029))) # shape=(845,)
bop_1064 = relay.logical_and(call_1030.astype('bool'), relay.reshape(const_1060.astype('bool'), relay.shape_of(call_1030))) # shape=(845,)
output = relay.Tuple([call_1043,const_1044,bop_1061,])
output2 = relay.Tuple([call_1045,const_1044,bop_1064,])
func_1066 = relay.Function([], output)
mod['func_1066'] = func_1066
mod = relay.transform.InferType()(mod)
output = func_1066()
func_1067 = relay.Function([], output)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_678_call = mutated_mod.get_global_var('func_678')
call_1167 = relay.TupleGetItem(func_676_call(), 0)
call_1168 = relay.TupleGetItem(func_678_call(), 0)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1195 = relay.TupleGetItem(func_1066_call(), 0)
call_1196 = relay.TupleGetItem(func_1067_call(), 0)
output = relay.Tuple([call_1167,call_1195,])
output2 = relay.Tuple([call_1168,call_1196,])
func_1197 = relay.Function([], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
mutated_mod['func_1197'] = func_1197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mutated_mod.get_global_var('func_1197')
call_1198 = func_1197_call()
output = call_1198
func_1199 = relay.Function([], output)
mutated_mod['func_1199'] = func_1199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1245 = func_666_call()
call_1246 = func_666_call()
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_1278 = func_1021_call()
call_1279 = func_1021_call()
output = relay.Tuple([call_1245,call_1278,])
output2 = relay.Tuple([call_1246,call_1279,])
func_1281 = relay.Function([], output)
mod['func_1281'] = func_1281
mod = relay.transform.InferType()(mod)
mutated_mod['func_1281'] = func_1281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1281_call = mutated_mod.get_global_var('func_1281')
call_1282 = func_1281_call()
output = call_1282
func_1283 = relay.Function([], output)
mutated_mod['func_1283'] = func_1283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_678_call = mutated_mod.get_global_var('func_678')
call_1303 = relay.TupleGetItem(func_676_call(), 0)
call_1304 = relay.TupleGetItem(func_678_call(), 0)
output = call_1303
output2 = call_1304
func_1336 = relay.Function([], output)
mod['func_1336'] = func_1336
mod = relay.transform.InferType()(mod)
output = func_1336()
func_1337 = relay.Function([], output)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1368 = relay.TupleGetItem(func_1066_call(), 0)
call_1369 = relay.TupleGetItem(func_1067_call(), 0)
func_99_call = mod.get_global_var('func_99')
func_102_call = mutated_mod.get_global_var('func_102')
call_1380 = func_99_call(relay.reshape(call_1368.astype('float32'), [6, 12, 13]))
call_1381 = func_99_call(relay.reshape(call_1368.astype('float32'), [6, 12, 13]))
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_1387 = relay.TupleGetItem(func_943_call(), 0)
call_1388 = relay.TupleGetItem(func_945_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1396 = func_666_call()
call_1397 = func_666_call()
bop_1398 = relay.mod(call_1396.astype('float32'), relay.reshape(call_1387.astype('float32'), relay.shape_of(call_1396))) # shape=(6, 7, 4)
bop_1401 = relay.mod(call_1397.astype('float32'), relay.reshape(call_1388.astype('float32'), relay.shape_of(call_1397))) # shape=(6, 7, 4)
func_732_call = mod.get_global_var('func_732')
func_734_call = mutated_mod.get_global_var('func_734')
var_1408 = relay.var("var_1408", dtype = "float64", shape = (13, 65))#candidate|1408|(13, 65)|var|float64
call_1407 = relay.TupleGetItem(func_732_call(relay.reshape(var_1408.astype('float64'), [845,])), 1)
call_1409 = relay.TupleGetItem(func_734_call(relay.reshape(var_1408.astype('float64'), [845,])), 1)
bop_1411 = relay.logical_xor(call_1407.astype('uint16'), relay.reshape(var_1408.astype('uint16'), relay.shape_of(call_1407))) # shape=(13, 13, 5)
bop_1414 = relay.logical_xor(call_1409.astype('uint16'), relay.reshape(var_1408.astype('uint16'), relay.shape_of(call_1409))) # shape=(13, 13, 5)
func_566_call = mod.get_global_var('func_566')
func_569_call = mutated_mod.get_global_var('func_569')
call_1420 = relay.TupleGetItem(func_566_call(relay.reshape(bop_1411.astype('float64'), [13, 13, 5])), 1)
call_1421 = relay.TupleGetItem(func_569_call(relay.reshape(bop_1411.astype('float64'), [13, 13, 5])), 1)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1431 = relay.TupleGetItem(func_1066_call(), 1)
call_1432 = relay.TupleGetItem(func_1067_call(), 1)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1436 = func_1336_call()
call_1437 = func_1336_call()
output = relay.Tuple([call_1368,call_1380,bop_1398,bop_1411,call_1420,call_1431,call_1436,])
output2 = relay.Tuple([call_1369,call_1381,bop_1401,bop_1414,call_1421,call_1432,call_1437,])
func_1441 = relay.Function([var_1408,], output)
mod['func_1441'] = func_1441
mod = relay.transform.InferType()(mod)
var_1442 = relay.var("var_1442", dtype = "float64", shape = (13, 65))#candidate|1442|(13, 65)|var|float64
output = func_1441(var_1442)
func_1443 = relay.Function([var_1442], output)
mutated_mod['func_1443'] = func_1443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1456 = relay.TupleGetItem(func_1066_call(), 2)
call_1457 = relay.TupleGetItem(func_1067_call(), 2)
output = call_1456
output2 = call_1457
func_1458 = relay.Function([], output)
mod['func_1458'] = func_1458
mod = relay.transform.InferType()(mod)
output = func_1458()
func_1459 = relay.Function([], output)
mutated_mod['func_1459'] = func_1459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_1485 = relay.TupleGetItem(func_943_call(), 0)
call_1486 = relay.TupleGetItem(func_945_call(), 0)
func_732_call = mod.get_global_var('func_732')
func_734_call = mutated_mod.get_global_var('func_734')
const_1488 = relay.const([-7.406692,-7.913146,4.434147,-4.033787,1.682469,-4.700762,-9.788567,-9.176916,0.111303,2.850355,8.894893,-5.650273,-5.732679,-5.921342,-4.343249,2.630442,9.442580,-7.488848,-0.786251,9.226707,3.310634,3.575576,-1.467417,-9.405133,9.303869,-1.170304,0.233019,-0.862615,1.766325,2.385889,-9.616808,-5.639170,-6.715653,-1.281586,3.369637,-0.799473,0.663249,-3.319059,9.902385,-7.533826,-4.382577,4.203473,7.875088,0.449896,-3.661301,-5.558254,-4.346931,-9.382460,-9.577236,7.905511,9.073128,-1.449645,0.608808,-4.389743,3.566736,9.534617,6.069489,5.128533,8.410914,2.341498,4.499306,-5.980769,-6.709272,-4.292860,-6.864221,7.475231,2.417889,-3.009762,-8.804322,7.933877,1.606968,-7.245497,2.149297,-2.754210,-2.340899,-3.603277,0.081716,5.328396,-5.668207,-1.185169,6.796039,-5.200990,1.776301,-1.027570,8.660126,-0.151316,-3.151404,-8.738285,-5.421537,-2.669475,-7.704694,3.790888,-3.159131,-5.328713,-7.805983,2.052035,-0.770442,9.385972,-9.809741,2.256325,1.517948,1.504468,-5.458506,-2.987755,-0.521627,-9.127653,3.618899,-3.342275,-3.597217,-7.354819,-5.593722,1.241720,9.551565,-3.044831,-6.409605,-9.078296,6.290196,0.163026,4.875980,8.520959,7.643202,-7.795844,4.130135,-9.016941,7.386406,-4.959150,-9.914460,-8.811840,-6.886887,8.164376,3.614447,5.972588,5.549355,-5.502261,-7.395905,-5.817652,0.492692,-1.490547,-1.592636,6.015402,-2.831426,4.001130,3.787365,-1.188503,-6.513715,-4.143949,7.254294,7.753409,-5.607555,2.193887,4.602193,-7.196681,2.467597,6.794766,9.334064,0.902519,-1.227511,-5.333654,8.635059,-8.434198,8.141343,2.590623,-9.015581,5.462583,-3.438675,2.809909,3.451741,1.263051,-2.518382,-0.052892,7.070340,6.522848,-7.630966,4.965801,0.028400,4.443761,-9.822963,9.119843,5.204626,1.873399,-6.257165,7.348832,2.091671,-5.351667,9.477155,4.058185,-8.364709,8.388399,9.503487,-4.020870,-7.650530,2.031831,-1.438573,7.692059,9.105721,-3.598786,9.460360,1.356584,-8.919163,-4.288084,-4.709054,-6.033611,5.825343,7.817132,-3.522217,3.893370,-7.015520,2.763223,5.213312,-6.444999,6.705739,-0.114058,4.116143,8.702446,6.876584,4.778898,-6.749562,1.228077,8.442959,-7.227791,-7.659156,-3.155360,-0.455584,-2.075173,-0.708502,-6.622301,7.437875,-1.756806,9.938234,-4.766051,-3.669703,-2.153180,5.025398,-0.954745,9.338021,-0.564979,-6.006490,-3.399879,-2.433873,-3.577516,7.693984,-0.905595,-9.224407,5.763693,0.331244,-5.534680,-0.783906,-2.877239,-5.089229,-8.380297,4.894385,-8.507063,-8.292106,-6.566334,4.640144,7.420529,3.665662,8.607116,4.322651,9.488651,-8.788817,-1.316625,8.976898,-4.577771,9.656811,7.969278,0.951808,-5.698322,-9.882946,-5.094266,3.598095,-9.459029,4.794709,-6.082784,0.316145,2.548505,-6.907746,-6.324644,-9.159090,9.469142,7.341615,-3.519577,-1.299987,-7.591470,6.704818,-6.248397,5.926666,-0.040320,-6.731169,8.144358,-6.606660,0.246591,-8.325569,-7.632803,-8.752680,-0.082321,-4.167539,-8.618848,5.402019,4.909066,6.713520,9.842504,8.446783,-5.537894,5.251831,1.337483,-8.160694,-2.011522,-0.511523,-7.686002,-5.068652,-5.528550,7.054611,-6.896508,-3.235918,-0.022978,9.438080,-3.783454,0.194784,6.379124,-2.560492,-1.298297,2.704012,4.238516,-4.006380,1.505349,-3.656195,3.320572,-5.748805,-2.648230,-5.743135,8.298839,-9.403283,-9.280455,-7.113772,-4.439289,-6.303715,9.722764,0.544315,4.213078,-1.935851,6.473461,-0.292116,3.401850,-5.384238,4.758626,-4.641102,-9.233204,-3.770155,-8.025207,-6.145735,7.083483,8.422862,8.448355,5.818684,-9.123443,3.981512,-5.536428,5.800162,-8.102028,4.201417,-7.306160,-4.937539,8.285861,3.581295,0.042461,-0.174129,-6.751730,-9.043993,7.807323,-4.014364,8.372627,2.964602,9.599143,1.948864,-0.496807,-3.219235,-5.496991,2.516900,1.842221,5.385390,2.990631,-7.479925,-4.070205,1.471092,-8.328009,5.952701,8.095501,-4.359661,3.253949,-8.189839,-1.899419,-7.968623,-6.917423,-2.919075,-1.179181,-0.095504,-1.357970,7.042889,6.915199,-7.227212,-6.750019,-1.562722,-5.405952,7.374569,-1.911277,8.300893,-6.412344,-0.041160,8.042646,-1.698523,-3.989596,5.238111,4.187031,2.033166,5.112524,6.852831,-4.138580,3.401610,-8.393521,-6.352103,0.847753,0.484001,-4.009049,-9.408547,8.852210,4.574477,6.831655,-5.330513,-0.079084,-4.354112,7.886359,9.645368,6.704664,-2.573079,8.687400,-3.768630,-9.873709,-5.951105,5.406528,-1.500350,-4.030180,8.517922,7.693585,-0.351675,4.356013,9.557137,-1.388075,-8.128352,-9.503326,0.552423,-3.706627,-3.710844,-5.390890,6.179089,9.374190,-8.067932,2.468846,3.428267,9.477821,-7.908814,-9.390875,1.822536,0.108924,-8.147238,-0.243503,3.971242,-2.424083,6.844019,4.524448,-0.680401,-1.403225,-7.860154,-1.809048,-1.826873,7.797689,8.975528,0.114228,2.153421,-5.980718,-9.245734,6.336443,3.550748,2.103948,-3.700627,0.915651,4.800740,6.163174,-7.873910,5.174637,0.913095,1.950638,1.904566,1.529920,5.156895,-3.902855,-0.786455,-2.245907,6.935219,-1.391042,-9.583793,0.918915,-3.970531,8.821453,-2.009160,9.273262,4.630681,-8.960256,4.250575,7.551592,-8.682074,-3.163445,-1.501567,-9.644997,-9.030062,1.323159,4.843769,-2.404504,-1.564276,-9.162790,9.494124,-6.505026,-3.145388,0.719052,8.660331,2.614125,-4.451640,-2.954417,-8.338386,8.098929,-0.175966,8.108870,5.670440,4.476401,0.753631,-1.041580,8.484882,7.116386,-5.135075,-8.015088,-6.421577,2.818712,2.939985,3.955744,-1.402062,7.582092,3.414195,-3.877104,-1.003704,-4.364605,7.734369,-8.569563,-1.004957,4.923654,-9.443554,-1.671683,6.415779,-7.499618,4.440531,-7.918883,-5.076549,-9.707006,-8.829475,-2.682952,-2.084258,-3.657404,1.829763,1.328707,-1.889405,-1.580334,-2.760101,9.345379,-6.696789,-5.745727,8.217095,-3.882332,-5.502757,-6.837898,2.716478,-1.392805,5.095107,-9.003566,7.585515,-9.964523,-7.097390,7.505959,5.913062,-4.840763,-3.142117,-1.762973,2.387737,6.219677,7.620364,-4.841213,-6.340437,8.688107,0.943741,-7.709339,3.843447,-1.556780,-6.683499,-4.286815,4.467667,3.594472,0.771889,8.930406,-7.745422,7.750455,-6.085024,7.369633,-8.974738,8.675623,-3.385394,-3.467273,-2.879862,1.980818,-2.101473,1.959485,-9.645938,0.764133,-9.992095,-4.660968,2.397392,-1.672550,3.565128,-6.329631,-6.578223,9.508779,-2.064902,-8.053633,-2.710440,1.360959,2.644027,-4.157785,2.105059,-2.371036,0.573322,6.256056,-0.349847,-2.864226,5.116961,4.833788,-2.492236,-7.335155,-0.060632,-2.210324,-1.983219,-2.672660,-3.070207,1.774533,-1.404640,9.369062,-3.322526,5.106130,-4.852359,-2.663504,-0.244939,-9.312186,-8.718854,3.553406,7.680448,5.950875,1.679427,-2.344340,9.420484,-1.947996,7.555143,3.966491,-3.285490,-6.306991,-4.836033,-7.064933,-7.133605,-3.654246,8.299013,2.406905,6.042193,-8.698397,-4.589161,-1.494767,-4.803818,-1.751440,-5.196104,7.507317,-6.137479,5.433072,-5.188219,5.324062,-3.565525,6.655064,-2.560766,1.829006,2.948349,-9.167539,-9.393215,9.415427,5.843194,-1.012120,7.417317,-3.416213,7.833966,4.011107,3.655753,-6.282805,-1.610758,8.387288,-0.175937,-0.212370,-7.285113,-1.101813,9.892929,0.496419,1.196539,-8.213971,1.813111,-8.248562,-6.196267,-5.127528,-2.766823,-6.318681,-7.555654,3.880193,-3.274042,7.339600,6.891736,4.032193,4.055642,1.249006,-3.827577,-3.268542,0.313220,-7.479660,-5.121509,7.329673,2.525393,4.075806,-3.413606,-6.349839,-4.130995,7.317394,9.779227,-6.665352,-2.002663,7.842324,5.149524,-7.021441,-9.574562,-5.377057,-8.690860,-2.320066,3.343660,7.539813,-8.359858,-1.543945,0.072565,-1.840152,-1.042996,-3.143700,1.847428,4.054243,9.722550,5.107048,-4.835091,-0.870567,0.678057,-7.162667,-3.986323,-9.884558,-0.656401,9.030877,6.165742,-1.994265,-4.338160,-4.543512,6.191398,-2.532678,9.213769,-5.535563,5.701323,-3.300695,2.367491,-1.797433,9.277950,4.811367,5.857100,6.891635,-2.842945,6.488311,-4.055383,-3.221153,7.804227,-5.851849,-4.681314,7.367255,5.146183,0.254414,-4.636672,-6.618086,-1.169835,1.752227,-1.443768,-6.465360,0.820459,7.132527,5.911053,8.753010,-3.356651,-3.749458,-6.922340,3.111973,5.626323,7.321184,-0.906039,9.214391,9.901767,-6.549397,-4.193857,-6.005065,-8.864757,6.261276,-8.122951,8.662663,9.426279,6.368972,3.826882,9.271908,5.503995,-0.312474,2.411079,1.562786,6.997830,-6.120131,-6.846170,3.403589,9.149821,2.574305,4.557334,-0.242844,-7.115477,-5.928846,-5.563434,-7.707561,-5.405439,5.851426,7.531838], dtype = "float64")#candidate|1488|(845,)|const|float64
call_1487 = relay.TupleGetItem(func_732_call(relay.reshape(const_1488.astype('float64'), [845,])), 1)
call_1489 = relay.TupleGetItem(func_734_call(relay.reshape(const_1488.astype('float64'), [845,])), 1)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1490 = func_666_call()
call_1491 = func_666_call()
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_1497 = relay.TupleGetItem(func_943_call(), 0)
call_1498 = relay.TupleGetItem(func_945_call(), 0)
output = relay.Tuple([call_1485,call_1487,const_1488,call_1490,call_1497,])
output2 = relay.Tuple([call_1486,call_1489,const_1488,call_1491,call_1498,])
func_1504 = relay.Function([], output)
mod['func_1504'] = func_1504
mod = relay.transform.InferType()(mod)
output = func_1504()
func_1505 = relay.Function([], output)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_1568 = relay.TupleGetItem(func_1197_call(), 1)
call_1569 = relay.TupleGetItem(func_1199_call(), 1)
output = call_1568
output2 = call_1569
func_1572 = relay.Function([], output)
mod['func_1572'] = func_1572
mod = relay.transform.InferType()(mod)
mutated_mod['func_1572'] = func_1572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1572_call = mutated_mod.get_global_var('func_1572')
call_1573 = func_1572_call()
output = call_1573
func_1574 = relay.Function([], output)
mutated_mod['func_1574'] = func_1574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_1586 = relay.TupleGetItem(func_822_call(), 0)
call_1587 = relay.TupleGetItem(func_824_call(), 0)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_1596 = relay.TupleGetItem(func_1504_call(), 2)
call_1597 = relay.TupleGetItem(func_1505_call(), 2)
var_1603 = relay.var("var_1603", dtype = "float64", shape = (845,))#candidate|1603|(845,)|var|float64
bop_1604 = relay.greater(call_1596.astype('bool'), relay.reshape(var_1603.astype('bool'), relay.shape_of(call_1596))) # shape=(845,)
bop_1607 = relay.greater(call_1597.astype('bool'), relay.reshape(var_1603.astype('bool'), relay.shape_of(call_1597))) # shape=(845,)
uop_1624 = relay.sin(bop_1604.astype('float64')) # shape=(845,)
uop_1626 = relay.sin(bop_1607.astype('float64')) # shape=(845,)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1628 = func_1336_call()
call_1629 = func_1336_call()
bop_1635 = relay.bitwise_and(uop_1624.astype('uint32'), relay.reshape(var_1603.astype('uint32'), relay.shape_of(uop_1624))) # shape=(845,)
bop_1638 = relay.bitwise_and(uop_1626.astype('uint32'), relay.reshape(var_1603.astype('uint32'), relay.shape_of(uop_1626))) # shape=(845,)
output = relay.Tuple([call_1586,call_1628,bop_1635,])
output2 = relay.Tuple([call_1587,call_1629,bop_1638,])
func_1641 = relay.Function([var_1603,], output)
mod['func_1641'] = func_1641
mod = relay.transform.InferType()(mod)
var_1642 = relay.var("var_1642", dtype = "float64", shape = (845,))#candidate|1642|(845,)|var|float64
output = func_1641(var_1642)
func_1643 = relay.Function([var_1642], output)
mutated_mod['func_1643'] = func_1643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_1662 = relay.TupleGetItem(func_822_call(), 3)
call_1663 = relay.TupleGetItem(func_824_call(), 3)
output = relay.Tuple([call_1662,])
output2 = relay.Tuple([call_1663,])
func_1675 = relay.Function([], output)
mod['func_1675'] = func_1675
mod = relay.transform.InferType()(mod)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mutated_mod.get_global_var('func_1675')
call_1676 = func_1675_call()
output = call_1676
func_1677 = relay.Function([], output)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1706 = relay.TupleGetItem(func_1066_call(), 1)
call_1707 = relay.TupleGetItem(func_1067_call(), 1)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_1714 = relay.TupleGetItem(func_1675_call(), 0)
call_1715 = relay.TupleGetItem(func_1677_call(), 0)
output = relay.Tuple([call_1706,call_1714,])
output2 = relay.Tuple([call_1707,call_1715,])
func_1718 = relay.Function([], output)
mod['func_1718'] = func_1718
mod = relay.transform.InferType()(mod)
output = func_1718()
func_1719 = relay.Function([], output)
mutated_mod['func_1719'] = func_1719
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1783 = relay.const([[[-1,-2,-7,10,9,10,5],[9,-10,-6,-9,4,1,8],[-8,4,3,2,8,-7,-5],[5,1,-10,7,6,10,5],[-5,3,-3,3,-2,-5,6],[7,7,3,-8,-10,9,-2],[6,-2,10,4,-2,-9,-1],[7,4,-1,8,2,-7,2],[10,4,-3,7,-2,7,8],[-10,-8,-6,-1,-7,3,6],[2,7,-3,-8,-9,-8,-3],[-5,-10,-10,2,-3,5,1],[-9,-1,4,-5,-8,1,-5],[10,-5,1,-2,6,-6,-6],[-10,2,-1,-2,-10,-1,-9],[8,3,-4,-3,-6,5,-8]],[[2,6,8,-3,3,-7,2],[3,-10,7,-9,4,7,8],[9,-7,-9,-2,2,-9,1],[-8,-1,6,4,-7,-4,6],[8,-7,9,9,-6,-4,-6],[-3,-6,-2,2,10,-1,8],[7,-1,7,5,10,1,-5],[-4,7,-10,6,1,1,-5],[-8,10,-8,-4,6,8,-1],[2,3,9,-1,2,2,-7],[-5,-5,-7,2,-3,10,-4],[-5,-7,-3,3,4,-2,3],[-10,-6,5,1,6,9,8],[1,8,-8,-5,7,4,1],[-8,9,5,6,-9,-3,-8],[8,-10,1,7,2,2,-9]],[[1,-4,4,-10,1,8,10],[-6,-4,8,3,1,-9,-1],[4,-1,2,7,-9,5,-10],[-1,-6,1,-3,-5,8,-8],[1,-2,-1,-2,-6,-1,6],[6,-10,-8,-8,-8,8,9],[1,5,-9,9,-9,5,1],[-2,-1,-3,-9,-7,10,6],[-9,5,2,-2,-6,3,3],[3,-1,9,7,-2,2,1],[-5,9,-4,5,-4,-9,9],[8,-7,4,-9,-1,-4,5],[4,-8,-5,-4,1,8,-8],[6,8,-9,-8,-6,-5,-3],[2,7,-4,-5,-1,-1,-10],[-8,6,8,-9,-1,-8,-1]],[[-4,4,-4,1,5,10,-7],[-8,2,7,-9,3,2,2],[1,-4,2,2,-8,-8,9],[9,-9,-2,3,8,-6,10],[5,7,9,-2,9,7,-4],[-10,-2,-8,-10,-3,-2,6],[4,-6,-10,-4,4,10,-9],[-3,-3,-8,4,8,-6,6],[6,6,8,8,4,-6,9],[4,-4,-2,1,-2,6,8],[2,10,6,7,-9,-3,-8],[-5,-7,-6,-7,-6,10,1],[9,-8,5,-9,5,6,-3],[-8,2,-10,4,7,-8,-8],[-2,-4,10,4,-1,6,-10],[-1,5,-6,5,-3,-5,10]],[[7,2,7,-2,10,-4,-8],[-7,5,1,-9,7,4,3],[-2,5,-1,1,-4,6,-9],[-5,1,5,-9,-7,5,4],[-4,1,2,-7,2,2,1],[8,-8,-6,4,-6,8,-3],[9,-4,-8,1,8,6,6],[-4,6,6,4,7,-3,-2],[8,4,5,-10,-3,-7,-9],[-1,-1,-3,-8,2,-2,9],[-4,8,8,-9,2,-8,-2],[-5,7,7,10,4,-2,-9],[7,-10,1,-5,2,4,7],[6,-8,-2,7,-5,-1,7],[7,-8,6,-9,7,-7,-10],[-10,4,6,-9,9,10,-4]],[[-4,6,9,-10,-3,-5,3],[-7,5,-9,5,3,6,9],[7,-8,-4,-4,10,7,3],[4,-4,-10,-8,9,6,5],[-5,1,8,5,-6,5,5],[9,-6,3,-4,10,-1,5],[-3,1,-7,-4,-4,8,-9],[5,-7,-1,7,-4,4,5],[6,-3,4,-9,-8,7,3],[1,-8,-8,-1,9,-3,-3],[10,-4,-9,7,3,-4,10],[-3,7,-9,-10,-10,-5,1],[4,7,-1,10,8,-5,3],[1,3,8,-8,4,3,-9],[7,-6,-3,4,-4,5,-2],[-10,-10,-10,-7,-2,7,-4]],[[-4,-9,-4,-9,-10,2,9],[-3,-10,10,5,2,10,10],[-1,-6,-7,5,1,-10,-9],[4,-4,1,-9,-3,-10,-8],[-10,-8,3,10,-2,-3,9],[4,10,7,5,7,8,-10],[-6,1,-7,8,6,1,-3],[10,10,1,2,-3,6,10],[-9,-4,-9,10,7,-7,8],[-10,-2,2,-6,3,10,4],[-5,10,3,8,3,9,6],[3,-3,4,5,9,-8,7],[8,4,6,-7,9,2,-3],[-2,-4,-4,7,-2,3,-4],[-4,3,-4,5,-2,-10,8],[-3,-2,10,9,5,-2,-2]],[[10,10,-9,-8,-9,-3,-7],[-1,5,-6,10,-3,9,-9],[-4,-8,7,8,10,-6,-1],[7,2,-3,-4,3,6,-5],[5,8,6,-4,5,-6,-10],[-1,3,-8,-7,-3,-1,-7],[4,4,9,-9,-1,6,8],[10,-6,10,-10,-6,1,-10],[-8,1,-2,-1,10,-5,-4],[-6,5,-10,-6,2,-9,3],[-10,4,3,-9,-2,-5,4],[-3,1,1,-5,6,-3,7],[7,-4,4,-2,-5,1,5],[10,-4,-8,-4,10,1,-1],[2,-6,8,3,-10,-9,10],[-2,6,4,7,-6,10,10]],[[-9,6,9,-10,4,8,-2],[6,-9,-7,-10,-8,3,-8],[9,6,1,9,4,6,5],[-1,-3,9,5,10,6,-2],[1,4,10,-7,-2,10,10],[-3,9,1,10,3,-5,1],[-10,-2,5,-10,6,7,-8],[3,2,-2,-9,-1,3,2],[-9,-1,8,-10,1,-9,9],[-6,-2,4,6,-2,-1,4],[1,3,-1,-8,2,-3,10],[-2,9,-8,9,-4,10,-2],[1,6,-1,1,-7,-2,-9],[-2,8,-9,-3,9,-3,-1],[-9,5,-8,-3,1,-3,-4],[-5,-4,1,-2,1,9,1]]], dtype = "int16")#candidate|1783|(9, 16, 7)|const|int16
var_1784 = relay.var("var_1784", dtype = "int16", shape = (9, 16, 7))#candidate|1784|(9, 16, 7)|var|int16
bop_1785 = relay.bitwise_and(const_1783.astype('int16'), relay.reshape(var_1784.astype('int16'), relay.shape_of(const_1783))) # shape=(9, 16, 7)
output = relay.Tuple([bop_1785,])
output2 = relay.Tuple([bop_1785,])
func_1796 = relay.Function([var_1784,], output)
mod['func_1796'] = func_1796
mod = relay.transform.InferType()(mod)
var_1797 = relay.var("var_1797", dtype = "int16", shape = (9, 16, 7))#candidate|1797|(9, 16, 7)|var|int16
output = func_1796(var_1797)
func_1798 = relay.Function([var_1797], output)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_1820 = func_666_call()
call_1821 = func_666_call()
output = call_1820
output2 = call_1821
func_1847 = relay.Function([], output)
mod['func_1847'] = func_1847
mod = relay.transform.InferType()(mod)
output = func_1847()
func_1848 = relay.Function([], output)
mutated_mod['func_1848'] = func_1848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_1862 = relay.TupleGetItem(func_1066_call(), 2)
call_1863 = relay.TupleGetItem(func_1067_call(), 2)
var_1869 = relay.var("var_1869", dtype = "bool", shape = (845,))#candidate|1869|(845,)|var|bool
bop_1870 = relay.logical_or(call_1862.astype('bool'), relay.reshape(var_1869.astype('bool'), relay.shape_of(call_1862))) # shape=(845,)
bop_1873 = relay.logical_or(call_1863.astype('bool'), relay.reshape(var_1869.astype('bool'), relay.shape_of(call_1863))) # shape=(845,)
func_1641_call = mod.get_global_var('func_1641')
func_1643_call = mutated_mod.get_global_var('func_1643')
call_1875 = relay.TupleGetItem(func_1641_call(relay.reshape(bop_1870.astype('float64'), [845,])), 0)
call_1876 = relay.TupleGetItem(func_1643_call(relay.reshape(bop_1870.astype('float64'), [845,])), 0)
output = relay.Tuple([bop_1870,call_1875,])
output2 = relay.Tuple([bop_1873,call_1876,])
func_1880 = relay.Function([var_1869,], output)
mod['func_1880'] = func_1880
mod = relay.transform.InferType()(mod)
var_1881 = relay.var("var_1881", dtype = "bool", shape = (845,))#candidate|1881|(845,)|var|bool
output = func_1880(var_1881)
func_1882 = relay.Function([var_1881], output)
mutated_mod['func_1882'] = func_1882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_1926 = relay.TupleGetItem(func_1504_call(), 2)
call_1927 = relay.TupleGetItem(func_1505_call(), 2)
uop_1930 = relay.atanh(call_1926.astype('float32')) # shape=(845,)
uop_1932 = relay.atanh(call_1927.astype('float32')) # shape=(845,)
uop_1933 = relay.cosh(uop_1930.astype('float64')) # shape=(845,)
uop_1935 = relay.cosh(uop_1932.astype('float64')) # shape=(845,)
output = relay.Tuple([uop_1933,])
output2 = relay.Tuple([uop_1935,])
func_1957 = relay.Function([], output)
mod['func_1957'] = func_1957
mod = relay.transform.InferType()(mod)
output = func_1957()
func_1958 = relay.Function([], output)
mutated_mod['func_1958'] = func_1958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2062 = relay.var("var_2062", dtype = "float64", shape = (14, 2, 14))#candidate|2062|(14, 2, 14)|var|float64
var_2063 = relay.var("var_2063", dtype = "float64", shape = (14, 2, 14))#candidate|2063|(14, 2, 14)|var|float64
bop_2064 = relay.floor_divide(var_2062.astype('float64'), relay.reshape(var_2063.astype('float64'), relay.shape_of(var_2062))) # shape=(14, 2, 14)
func_732_call = mod.get_global_var('func_732')
func_734_call = mutated_mod.get_global_var('func_734')
var_2069 = relay.var("var_2069", dtype = "float64", shape = (845,))#candidate|2069|(845,)|var|float64
call_2068 = relay.TupleGetItem(func_732_call(relay.reshape(var_2069.astype('float64'), [845,])), 1)
call_2070 = relay.TupleGetItem(func_734_call(relay.reshape(var_2069.astype('float64'), [845,])), 1)
output = relay.Tuple([bop_2064,call_2068,var_2069,])
output2 = relay.Tuple([bop_2064,call_2070,var_2069,])
func_2071 = relay.Function([var_2062,var_2063,var_2069,], output)
mod['func_2071'] = func_2071
mod = relay.transform.InferType()(mod)
var_2072 = relay.var("var_2072", dtype = "float64", shape = (14, 2, 14))#candidate|2072|(14, 2, 14)|var|float64
var_2073 = relay.var("var_2073", dtype = "float64", shape = (14, 2, 14))#candidate|2073|(14, 2, 14)|var|float64
var_2074 = relay.var("var_2074", dtype = "float64", shape = (845,))#candidate|2074|(845,)|var|float64
output = func_2071(var_2072,var_2073,var_2074,)
func_2075 = relay.Function([var_2072,var_2073,var_2074,], output)
mutated_mod['func_2075'] = func_2075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2116 = relay.var("var_2116", dtype = "float64", shape = (12, 16, 4))#candidate|2116|(12, 16, 4)|var|float64
uop_2117 = relay.log2(var_2116.astype('float64')) # shape=(12, 16, 4)
func_1957_call = mod.get_global_var('func_1957')
func_1958_call = mutated_mod.get_global_var('func_1958')
call_2121 = relay.TupleGetItem(func_1957_call(), 0)
call_2122 = relay.TupleGetItem(func_1958_call(), 0)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_2124 = func_1847_call()
call_2125 = func_1847_call()
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_2151 = relay.TupleGetItem(func_1504_call(), 2)
call_2152 = relay.TupleGetItem(func_1505_call(), 2)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_2169 = func_1021_call()
call_2170 = func_1021_call()
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_2174 = relay.TupleGetItem(func_943_call(), 0)
call_2175 = relay.TupleGetItem(func_945_call(), 0)
output = relay.Tuple([uop_2117,call_2121,call_2124,call_2151,call_2169,call_2174,])
output2 = relay.Tuple([uop_2117,call_2122,call_2125,call_2152,call_2170,call_2175,])
func_2177 = relay.Function([var_2116,], output)
mod['func_2177'] = func_2177
mod = relay.transform.InferType()(mod)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2178 = relay.var("var_2178", dtype = "float64", shape = (12, 16, 4))#candidate|2178|(12, 16, 4)|var|float64
func_2177_call = mutated_mod.get_global_var('func_2177')
call_2179 = func_2177_call(var_2178)
output = call_2179
func_2180 = relay.Function([var_2178], output)
mutated_mod['func_2180'] = func_2180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_678_call = mutated_mod.get_global_var('func_678')
call_2205 = relay.TupleGetItem(func_676_call(), 0)
call_2206 = relay.TupleGetItem(func_678_call(), 0)
func_1572_call = mod.get_global_var('func_1572')
func_1574_call = mutated_mod.get_global_var('func_1574')
call_2211 = func_1572_call()
call_2212 = func_1572_call()
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_2239 = relay.TupleGetItem(func_1504_call(), 2)
call_2240 = relay.TupleGetItem(func_1505_call(), 2)
output = relay.Tuple([call_2205,call_2211,call_2239,])
output2 = relay.Tuple([call_2206,call_2212,call_2240,])
func_2245 = relay.Function([], output)
mod['func_2245'] = func_2245
mod = relay.transform.InferType()(mod)
output = func_2245()
func_2246 = relay.Function([], output)
mutated_mod['func_2246'] = func_2246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_2251 = func_1021_call()
call_2252 = func_1021_call()
output = relay.Tuple([call_2251,])
output2 = relay.Tuple([call_2252,])
func_2258 = relay.Function([], output)
mod['func_2258'] = func_2258
mod = relay.transform.InferType()(mod)
output = func_2258()
func_2259 = relay.Function([], output)
mutated_mod['func_2259'] = func_2259
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2265 = relay.const([[[9.318345,2.973908,4.233504,-1.242979,-1.063975,9.111649,-0.713952,-9.518122],[-4.507643,-3.939813,5.677877,-7.941297,-4.385970,-1.953179,-1.841991,-1.115769],[-3.911125,4.603254,-7.324230,3.080426,-5.148755,3.742077,8.002444,-9.716307],[1.313994,-0.823024,3.786490,5.221624,-8.820455,-7.419972,-3.318616,-6.398155]],[[0.941069,-1.564652,8.301932,-6.742482,-1.697794,8.564341,3.571619,5.240741],[-1.469116,6.143514,8.799939,1.887580,8.686292,-2.809068,-7.105439,-6.820616],[2.404109,7.672655,9.313518,-3.874156,7.813493,3.909364,1.101692,2.755949],[-0.156842,-3.624536,-5.283728,6.986855,1.950931,2.542427,-3.389467,2.097438]],[[-5.141196,1.352702,-8.963172,5.913398,6.936915,-0.163045,-1.122382,-0.277495],[5.797835,-4.100018,-8.042394,3.087900,5.082986,-2.394084,-0.201374,9.830442],[-3.254544,-3.257299,0.304596,6.035759,-8.859223,9.964450,4.119593,-7.068312],[-2.747500,-0.897952,-6.703688,1.384154,-0.324862,-2.785431,6.711240,5.854309]]], dtype = "float32")#candidate|2265|(3, 4, 8)|const|float32
uop_2266 = relay.cosh(const_2265.astype('float32')) # shape=(3, 4, 8)
output = uop_2266
output2 = uop_2266
func_2273 = relay.Function([], output)
mod['func_2273'] = func_2273
mod = relay.transform.InferType()(mod)
output = func_2273()
func_2274 = relay.Function([], output)
mutated_mod['func_2274'] = func_2274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_2288 = func_621_call()
call_2289 = func_621_call()
func_2273_call = mod.get_global_var('func_2273')
func_2274_call = mutated_mod.get_global_var('func_2274')
call_2299 = func_2273_call()
call_2300 = func_2273_call()
var_2305 = relay.var("var_2305", dtype = "float64", shape = (6, 7, 4))#candidate|2305|(6, 7, 4)|var|float64
bop_2306 = relay.floor_mod(call_2288.astype('float64'), relay.reshape(var_2305.astype('float64'), relay.shape_of(call_2288))) # shape=(6, 7, 4)
bop_2309 = relay.floor_mod(call_2289.astype('float64'), relay.reshape(var_2305.astype('float64'), relay.shape_of(call_2289))) # shape=(6, 7, 4)
uop_2310 = relay.cos(call_2299.astype('float32')) # shape=(3, 4, 8)
uop_2312 = relay.cos(call_2300.astype('float32')) # shape=(3, 4, 8)
func_1796_call = mod.get_global_var('func_1796')
func_1798_call = mutated_mod.get_global_var('func_1798')
const_2316 = relay.const([3,9,-6,10,7,4,-5,-6,4,9,3,8,-9,-8,-7,10,1,-4,10,-1,-7,1,-9,-9,6,-2,-3,-6,-7,1,7,6,3,-5,5,2,-10,-3,7,-1,-9,-4,3,-7,4,6,1,1,1,9,-3,-5,-3,1,8,4,7,2,-8,2,-6,5,-8,1,6,3,-2,-2,7,-4,-7,4,6,4,2,-8,-2,-6,-1,10,-9,-7,-3,6,4,5,-10,-3,-5,-2,1,-5,-3,5,-10,-3,8,-9,-9,-1,7,-2,6,-7,2,-8,-9,8,-6,8,-8,4,-1,10,-10,-2,-8,-7,-2,7,-4,-9,-8,7,-1,-1,-7,8,-9,-9,9,9,-8,2,-1,-5,4,9,2,9,2,4,-4,-7,-1,6,-8,7,-3,7,10,8,6,7,3,3,3,-5,10,-3,-10,10,4,-3,6,1,-4,1,8,9,-3,9,10,4,7,10,6,5,-7,9,10,1,-2,-3,-10,4,-5,-9,10,-6,3,-6,7,-3,2,10,-3,-8,-5,5,-5,9,5,-6,5,2,9,-9,9,-1,-3,5,-3,-8,5,-4,-4,2,-4,2,2,7,4,-6,-7,4,-7,3,1,8,7,-8,-8,-10,-1,-2,-8,2,7,5,-6,-2,-7,5,-10,-5,9,-10,4,-1,-4,-7,4,-6,-9,4,9,10,-3,-7,-10,-2,8,5,-3,8,-9,-2,4,3,9,1,-3,6,-6,1,-5,-2,-8,-6,3,-8,9,-5,-10,-8,-8,-6,10,9,5,1,-6,5,-9,-2,-5,7,4,8,-2,10,-5,-1,8,-10,-1,-3,3,-8,10,-7,2,-10,-7,10,-7,9,9,-7,-1,10,-8,-8,4,3,8,9,-5,-8,-1,2,-9,8,-3,4,1,-8,10,10,-2,8,-7,9,7,-4,6,-6,1,4,8,9,-6,10,1,-10,5,2,-4,-3,10,1,7,2,1,1,-4,1,-7,5,-3,10,10,9,5,-7,3,-1,-3,-8,9,-6,-10,-4,-9,5,-2,1,1,10,-4,-10,-4,7,6,-4,5,-9,-6,-1,9,-9,3,7,-10,9,-3,-2,2,8,5,4,-3,-6,-3,6,-5,7,4,3,10,-9,10,3,1,3,-5,-7,-7,9,-1,6,-1,3,6,1,-7,2,-2,-3,-6,2,-1,-2,-3,2,8,-10,-10,6,1,3,-8,7,-10,6,7,9,-6,-8,-4,4,8,-2,-9,6,6,9,-2,7,-9,10,-10,3,2,6,10,7,-4,-8,-7,-6,-2,8,-3,8,7,-9,-6,2,2,3,8,1,1,8,2,1,-8,9,-6,-7,-6,-10,7,-2,2,2,-7,3,-10,8,-2,7,-9,-3,-5,10,7,6,3,-2,5,-4,-4,-2,5,-8,10,7,2,-6,2,-8,5,-2,2,-3,7,1,2,8,5,4,-1,-5,-3,-8,7,4,10,10,10,-10,1,-10,7,2,-4,-9,9,8,5,7,-1,-3,8,2,-7,5,-4,-2,-3,-6,1,3,-9,2,-8,7,-1,-10,-4,-5,5,-10,6,-1,-6,-7,-2,7,-3,9,-7,9,-7,-6,-1,3,-2,-6,-6,-7,-6,1,7,3,-6,-9,9,10,-9,8,-9,8,5,-2,-5,-5,-5,10,4,-2,-8,-3,1,2,2,-9,-10,-4,5,7,-7,10,1,-6,7,-7,-10,-9,-6,10,10,10,-10,-6,2,-4,8,-5,-6,-7,-10,6,-7,-1,-8,2,2,-10,10,-7,7,-3,5,-5,-8,4,7,6,-6,6,9,4,3,6,-7,-6,-6,1,-5,-2,7,9,-5,7,-5,7,-4,-7,-2,10,8,4,-5,5,1,2,-5,-1,9,4,-10,10,-2,1,-2,3,-7,5,-4,-1,-10,-1,8,-9,-10,1,-6,4,-9,-1,-5,4,3,-3,2,10,-9,-8,2,3,10,2,6,3,-10,-10,-9,7,4,9,-6,-7,-9,-3,4,-5,-2,2,4,7,10,-10,-10,10,-1,-1,7,3,4,-9,1,-5,-2,3,2,1,-7,-10,-10,-2,-9,-7,10,-2,-7,5,6,3,8,-3,7,-4,-5,-1,7,7,6,-4,-5,3,1,9,9,-3,-9,-1,2,-1,2,-3,5,6,-3,8,-1,9,-8,-7,-2,5,-9,-10,-4,10,-2,6,3,9,-4,-6,-7,-7,3,3,8,-1,-6,10,1,-5,-2,-10,-3,-3,-5,4,-3,-8,-8,-6,-1,-3,-7,9,2,-10,-5,1,9,-8,4,6,-4,-6,5,9,8,-3,5,-2,7,3,-4,1,10,-8,3,10,8,10,-7,-9,2,-9,-5,-6,-4,-6,5,2,7,8,3,7,-5,5,7,6,-10,-6,5,-9,3,5,-1,3,-6,9,-10,-9,5,-8,9,-4,6,-4,-4,-10,-8,-6,2,10,2,-5,8,-9,9,-7,-9,7,-1,-8,6,3,-1,-5,-10,-10,4,5,9,-7,9,-9,5,6,9,-2,-10,-10,-5,5,-10,8,-10,6,-6,2,-6,-6,4,-8,3,-9,8,7,4,1,-7,-6,1,-10,4,4,10,-1,-1,-9,-1,-9,-8,2,-8,-4,3,4,3,-3,-4,6,-7,10,8,-4,8,9,10,7,-6,3,-4,-3,10,5,3,10,10,9,9,-6,7,-4,7,-6], dtype = "int16")#candidate|2316|(1008,)|const|int16
call_2315 = relay.TupleGetItem(func_1796_call(relay.reshape(const_2316.astype('int16'), [9, 16, 7])), 0)
call_2317 = relay.TupleGetItem(func_1798_call(relay.reshape(const_2316.astype('int16'), [9, 16, 7])), 0)
const_2320 = relay.const([[[-0.545295,-2.519800,1.172614,-7.882581,7.197861,3.750506,-0.062715,0.191316],[-3.749415,4.562522,3.412314,-8.551425,-5.321446,9.172197,-4.021256,-7.511821],[-2.879900,6.438150,-5.315504,-4.651534,2.341452,-0.224866,8.048999,-5.714064],[3.764793,9.456386,6.802650,-4.484915,-3.064037,-4.006833,-0.294909,7.404510]],[[5.143895,7.016715,-4.958781,6.057269,7.979089,9.902255,-6.481736,-1.567064],[9.110027,-3.039229,-7.558474,-9.131889,-8.398703,3.271231,6.178613,-5.419150],[9.106030,7.028263,5.952429,2.999940,-1.077395,9.213729,6.500771,-7.895997],[-8.288952,2.678539,-5.373920,1.931768,-7.236463,0.747807,5.329580,-0.969051]],[[1.900208,-9.435664,7.463006,7.629515,-8.707712,-5.969893,9.571592,-3.093889],[6.047419,-0.719638,9.793474,7.792802,-8.605946,-0.347233,-2.492576,-0.392166],[-9.868239,-2.582092,-3.013731,4.296716,7.620547,-6.379391,0.081319,-5.501903],[1.028197,-6.466920,-8.071145,-6.826691,-7.833120,-7.307167,-0.097387,2.083211]]], dtype = "float32")#candidate|2320|(3, 4, 8)|const|float32
bop_2321 = relay.divide(uop_2310.astype('float32'), relay.reshape(const_2320.astype('float32'), relay.shape_of(uop_2310))) # shape=(3, 4, 8)
bop_2324 = relay.divide(uop_2312.astype('float32'), relay.reshape(const_2320.astype('float32'), relay.shape_of(uop_2312))) # shape=(3, 4, 8)
output = relay.Tuple([bop_2306,call_2315,const_2316,bop_2321,])
output2 = relay.Tuple([bop_2309,call_2317,const_2316,bop_2324,])
func_2335 = relay.Function([var_2305,], output)
mod['func_2335'] = func_2335
mod = relay.transform.InferType()(mod)
mutated_mod['func_2335'] = func_2335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2336 = relay.var("var_2336", dtype = "float64", shape = (6, 7, 4))#candidate|2336|(6, 7, 4)|var|float64
func_2335_call = mutated_mod.get_global_var('func_2335')
call_2337 = func_2335_call(var_2336)
output = call_2337
func_2338 = relay.Function([var_2336], output)
mutated_mod['func_2338'] = func_2338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2273_call = mod.get_global_var('func_2273')
func_2274_call = mutated_mod.get_global_var('func_2274')
call_2382 = func_2273_call()
call_2383 = func_2273_call()
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_2403 = relay.TupleGetItem(func_1504_call(), 4)
call_2404 = relay.TupleGetItem(func_1505_call(), 4)
func_2177_call = mod.get_global_var('func_2177')
func_2180_call = mutated_mod.get_global_var('func_2180')
var_2416 = relay.var("var_2416", dtype = "float64", shape = (32, 24))#candidate|2416|(32, 24)|var|float64
call_2415 = relay.TupleGetItem(func_2177_call(relay.reshape(var_2416.astype('float64'), [12, 16, 4])), 3)
call_2417 = relay.TupleGetItem(func_2180_call(relay.reshape(var_2416.astype('float64'), [12, 16, 4])), 3)
var_2419 = relay.var("var_2419", dtype = "float64", shape = (32, 24))#candidate|2419|(32, 24)|var|float64
bop_2420 = relay.logical_or(var_2416.astype('bool'), relay.reshape(var_2419.astype('bool'), relay.shape_of(var_2416))) # shape=(32, 24)
output = relay.Tuple([call_2382,call_2403,call_2415,bop_2420,])
output2 = relay.Tuple([call_2383,call_2404,call_2417,bop_2420,])
func_2435 = relay.Function([var_2416,var_2419,], output)
mod['func_2435'] = func_2435
mod = relay.transform.InferType()(mod)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2435_call = mutated_mod.get_global_var('func_2435')
var_2437 = relay.var("var_2437", dtype = "float64", shape = (32, 24))#candidate|2437|(32, 24)|var|float64
var_2438 = relay.var("var_2438", dtype = "float64", shape = (32, 24))#candidate|2438|(32, 24)|var|float64
call_2436 = func_2435_call(var_2437,var_2438,)
output = call_2436
func_2439 = relay.Function([var_2437,var_2438,], output)
mutated_mod['func_2439'] = func_2439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1458_call = mod.get_global_var('func_1458')
func_1459_call = mutated_mod.get_global_var('func_1459')
call_2444 = func_1458_call()
call_2445 = func_1458_call()
const_2446 = relay.const([True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False], dtype = "bool")#candidate|2446|(845,)|const|bool
bop_2447 = relay.power(call_2444.astype('float64'), relay.reshape(const_2446.astype('float64'), relay.shape_of(call_2444))) # shape=(845,)
bop_2450 = relay.power(call_2445.astype('float64'), relay.reshape(const_2446.astype('float64'), relay.shape_of(call_2445))) # shape=(845,)
func_1281_call = mod.get_global_var('func_1281')
func_1283_call = mutated_mod.get_global_var('func_1283')
call_2452 = relay.TupleGetItem(func_1281_call(), 0)
call_2453 = relay.TupleGetItem(func_1283_call(), 0)
var_2468 = relay.var("var_2468", dtype = "float64", shape = (845,))#candidate|2468|(845,)|var|float64
bop_2469 = relay.minimum(bop_2447.astype('float64'), relay.reshape(var_2468.astype('float64'), relay.shape_of(bop_2447))) # shape=(845,)
bop_2472 = relay.minimum(bop_2450.astype('float64'), relay.reshape(var_2468.astype('float64'), relay.shape_of(bop_2450))) # shape=(845,)
output = relay.Tuple([call_2452,bop_2469,])
output2 = relay.Tuple([call_2453,bop_2472,])
func_2473 = relay.Function([var_2468,], output)
mod['func_2473'] = func_2473
mod = relay.transform.InferType()(mod)
mutated_mod['func_2473'] = func_2473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2474 = relay.var("var_2474", dtype = "float64", shape = (845,))#candidate|2474|(845,)|var|float64
func_2473_call = mutated_mod.get_global_var('func_2473')
call_2475 = func_2473_call(var_2474)
output = call_2475
func_2476 = relay.Function([var_2474], output)
mutated_mod['func_2476'] = func_2476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_2489 = func_1847_call()
call_2490 = func_1847_call()
output = call_2489
output2 = call_2490
func_2502 = relay.Function([], output)
mod['func_2502'] = func_2502
mod = relay.transform.InferType()(mod)
output = func_2502()
func_2503 = relay.Function([], output)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1199_call = mutated_mod.get_global_var('func_1199')
call_2518 = relay.TupleGetItem(func_1197_call(), 1)
call_2519 = relay.TupleGetItem(func_1199_call(), 1)
output = call_2518
output2 = call_2519
func_2522 = relay.Function([], output)
mod['func_2522'] = func_2522
mod = relay.transform.InferType()(mod)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2522_call = mutated_mod.get_global_var('func_2522')
call_2523 = func_2522_call()
output = call_2523
func_2524 = relay.Function([], output)
mutated_mod['func_2524'] = func_2524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2544 = relay.var("var_2544", dtype = "float64", shape = (2, 6, 16))#candidate|2544|(2, 6, 16)|var|float64
uop_2545 = relay.tan(var_2544.astype('float64')) # shape=(2, 6, 16)
uop_2551 = relay.log(var_2544.astype('float32')) # shape=(2, 6, 16)
uop_2558 = relay.asinh(uop_2545.astype('float32')) # shape=(2, 6, 16)
func_2522_call = mod.get_global_var('func_2522')
func_2524_call = mutated_mod.get_global_var('func_2524')
call_2561 = func_2522_call()
call_2562 = func_2522_call()
var_2567 = relay.var("var_2567", dtype = "float32", shape = (2, 6, 16))#candidate|2567|(2, 6, 16)|var|float32
bop_2568 = relay.bitwise_or(uop_2558.astype('int16'), relay.reshape(var_2567.astype('int16'), relay.shape_of(uop_2558))) # shape=(2, 6, 16)
output = relay.Tuple([uop_2551,call_2561,bop_2568,])
output2 = relay.Tuple([uop_2551,call_2562,bop_2568,])
func_2590 = relay.Function([var_2544,var_2567,], output)
mod['func_2590'] = func_2590
mod = relay.transform.InferType()(mod)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2590_call = mutated_mod.get_global_var('func_2590')
var_2592 = relay.var("var_2592", dtype = "float64", shape = (2, 6, 16))#candidate|2592|(2, 6, 16)|var|float64
var_2593 = relay.var("var_2593", dtype = "float32", shape = (2, 6, 16))#candidate|2593|(2, 6, 16)|var|float32
call_2591 = func_2590_call(var_2592,var_2593,)
output = call_2591
func_2594 = relay.Function([var_2592,var_2593,], output)
mutated_mod['func_2594'] = func_2594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2626 = relay.var("var_2626", dtype = "float64", shape = (11, 3, 6))#candidate|2626|(11, 3, 6)|var|float64
uop_2627 = relay.exp(var_2626.astype('float64')) # shape=(11, 3, 6)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_2630 = func_621_call()
call_2631 = func_621_call()
output = relay.Tuple([uop_2627,call_2630,])
output2 = relay.Tuple([uop_2627,call_2631,])
func_2651 = relay.Function([var_2626,], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
var_2652 = relay.var("var_2652", dtype = "float64", shape = (11, 3, 6))#candidate|2652|(11, 3, 6)|var|float64
output = func_2651(var_2652)
func_2653 = relay.Function([var_2652], output)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_2684 = relay.TupleGetItem(func_822_call(), 0)
call_2685 = relay.TupleGetItem(func_824_call(), 0)
output = call_2684
output2 = call_2685
func_2690 = relay.Function([], output)
mod['func_2690'] = func_2690
mod = relay.transform.InferType()(mod)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mutated_mod.get_global_var('func_2690')
call_2691 = func_2690_call()
output = call_2691
func_2692 = relay.Function([], output)
mutated_mod['func_2692'] = func_2692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2702 = relay.var("var_2702", dtype = "uint8", shape = (15, 8, 15))#candidate|2702|(15, 8, 15)|var|uint8
var_2703 = relay.var("var_2703", dtype = "uint8", shape = (15, 8, 15))#candidate|2703|(15, 8, 15)|var|uint8
bop_2704 = relay.logical_xor(var_2702.astype('uint8'), relay.reshape(var_2703.astype('uint8'), relay.shape_of(var_2702))) # shape=(15, 8, 15)
uop_2718 = relay.cos(bop_2704.astype('float32')) # shape=(15, 8, 15)
var_2723 = relay.var("var_2723", dtype = "uint8", shape = (15, 8, 15))#candidate|2723|(15, 8, 15)|var|uint8
bop_2724 = relay.mod(var_2702.astype('float32'), relay.reshape(var_2723.astype('float32'), relay.shape_of(var_2702))) # shape=(15, 8, 15)
uop_2729 = relay.sin(bop_2724.astype('float64')) # shape=(15, 8, 15)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_2734 = relay.TupleGetItem(func_1066_call(), 2)
call_2735 = relay.TupleGetItem(func_1067_call(), 2)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_2746 = func_1336_call()
call_2747 = func_1336_call()
const_2753 = relay.const([[[-10,4,2,4,7,3,3,-2,-1,-3,-1,8,3,2,-2],[9,-2,1,-10,1,10,9,-6,-10,-3,5,-10,-4,4,4],[-2,7,5,-2,-5,-4,-7,-6,4,-9,3,-1,-6,5,-10],[3,3,10,9,4,-4,-7,-1,-3,3,2,-5,-8,-7,-10],[-1,2,2,3,-5,5,5,-2,7,1,-7,-5,-7,3,3],[4,-6,-1,10,2,-2,7,-9,2,-6,7,8,-8,-2,-1],[-4,-10,-1,1,-4,7,9,3,-4,-5,10,4,1,-2,-4],[-9,-8,-1,9,-10,-6,-1,2,-5,1,-7,-2,-8,2,8]],[[-5,-4,-6,-1,8,2,-2,-9,8,-1,3,-9,-8,8,7],[7,4,6,-8,-9,-10,-8,-5,-7,8,2,-5,-6,8,-4],[-3,10,4,-7,2,-7,-8,-7,2,6,1,3,10,10,5],[-6,6,-6,-9,3,1,-8,-4,10,8,-8,-5,-6,10,3],[-3,-4,5,1,4,-7,-3,4,9,-3,-9,5,-2,8,-8],[-7,-2,-10,-4,-10,5,3,-2,5,-10,-8,1,-2,-4,-5],[3,-3,-5,-9,6,-7,-7,-10,7,2,-6,-6,-2,10,-1],[8,8,-9,6,2,-9,4,-9,-7,-10,2,7,-4,6,-7]],[[-10,-3,8,-1,-1,-8,-4,-8,-5,-9,-4,-10,1,-4,-10],[8,-7,8,2,-2,4,3,2,-1,6,3,-5,3,-9,-6],[7,8,-2,9,-8,7,3,-10,-1,4,-4,-7,10,-8,-6],[-7,-8,-7,3,-6,-7,5,-5,4,9,-5,-5,-4,4,-1],[4,-5,2,5,-8,-6,-4,-6,7,8,10,-9,-8,7,4],[-4,5,-3,1,-2,-6,5,-1,-2,-1,-4,-2,5,5,3],[9,8,-7,10,-6,9,3,4,3,2,-4,6,-7,-7,-2],[-2,8,-6,8,4,-8,-5,-5,5,-7,-5,-3,-9,1,-5]],[[-8,7,-4,10,-8,-5,5,9,1,9,3,8,-4,-6,-5],[-9,7,-7,-8,-2,-9,-3,7,6,8,-3,-9,6,-8,-8],[5,-3,5,3,7,10,-2,-2,-6,6,-4,-4,-2,6,-5],[2,-4,-2,7,4,3,-1,8,-6,4,8,-3,-2,-5,4],[3,-7,10,-9,7,10,7,4,7,-2,4,-8,4,-3,-8],[-6,2,1,-3,9,-4,-9,-2,-8,5,-1,-10,7,1,-1],[-6,2,-10,-9,3,-2,-1,-2,4,-4,-10,7,4,-5,3],[-3,-3,-6,-8,-6,5,10,1,-8,1,-3,7,-2,5,7]],[[3,8,5,-9,-10,-3,-4,-10,-2,9,2,-4,-3,9,2],[-5,-6,-1,6,-1,6,1,5,-5,2,10,-6,-3,1,-9],[8,9,9,-4,-9,-1,-8,-5,8,2,3,-3,8,-8,-8],[3,-2,-1,-4,6,-1,-10,-1,-4,4,8,1,6,7,-10],[2,-4,-6,3,-1,5,6,-1,-10,-6,4,-10,7,-4,-2],[1,8,8,2,3,-10,5,4,5,-2,8,6,1,-6,8],[-7,-1,6,-8,1,-2,-4,7,3,-1,2,1,7,-1,-6],[10,10,8,-1,6,2,2,-7,3,2,6,-3,-2,-8,-3]],[[6,8,5,3,4,9,-9,1,10,5,8,-6,8,-1,-4],[1,-10,-5,-6,-2,-10,-8,9,-5,3,-3,-1,10,-10,4],[-7,-4,-3,-1,-9,-1,1,-8,-9,1,2,1,-4,3,-3],[-10,3,7,-4,6,1,-4,5,5,6,-5,2,4,-8,2],[3,4,-7,-3,-3,-6,-4,-9,4,-4,9,-1,-5,1,-1],[7,-6,-1,3,-3,10,-1,2,5,3,6,-9,7,3,7],[10,1,4,8,-5,4,-4,2,-6,-10,6,-4,-5,9,8],[4,-10,3,-7,3,-6,9,-3,-4,8,9,1,1,4,-6]],[[7,-2,6,-1,8,7,1,6,5,-7,5,8,-1,4,10],[10,1,-4,-7,4,-1,1,-4,-9,8,-3,2,-9,-2,-8],[6,-2,8,-5,-5,2,9,9,2,-4,2,1,1,-6,-6],[7,-2,8,7,7,-4,7,2,-7,-3,-5,10,-8,-8,8],[-9,-8,6,-3,1,2,-10,-7,4,-9,6,-2,9,-9,-6],[-5,-2,8,-8,10,4,5,2,6,-7,-2,8,9,-4,8],[-3,-5,-3,2,7,-1,3,-4,-9,10,-7,8,4,5,-6],[-10,-4,-6,9,10,-10,-6,6,-10,10,10,-2,-3,6,6]],[[2,10,10,-5,-4,6,6,10,10,7,-8,9,7,-6,-1],[4,-8,-9,10,7,9,-9,5,-6,-9,-7,2,-9,-8,-2],[7,2,8,-4,-7,4,4,10,-5,4,-9,-1,7,-10,4],[3,7,9,-9,6,3,4,5,7,-8,2,-2,-2,2,3],[5,-9,3,8,8,2,3,-1,7,8,8,7,-4,2,-1],[4,-3,8,1,-2,9,-2,-7,1,-10,-1,1,-10,-5,3],[-7,3,9,8,5,-9,-3,7,4,5,-8,-4,-4,-4,-7],[8,5,8,1,4,-7,2,-5,-1,10,-5,-4,-9,-3,9]],[[1,8,7,10,3,7,8,-1,10,-4,-9,9,7,-2,-1],[2,8,-8,5,6,1,-7,3,-1,-9,-3,7,-2,2,-7],[-4,-6,1,1,9,4,-9,8,1,4,8,8,1,-10,-3],[5,5,2,-5,-2,10,-6,-10,-2,-6,1,-6,-7,-7,10],[-3,-9,-8,6,6,10,7,7,-10,8,-7,-10,-6,-10,6],[-4,6,-9,6,8,5,-8,-3,2,3,-1,-7,-3,-10,7],[-4,-8,4,-7,-5,2,4,-4,4,2,4,-10,-4,5,8],[3,2,-4,-9,9,-5,-5,1,-6,5,-4,1,3,9,-1]],[[-7,8,-6,-6,-3,-8,-5,5,-4,1,-9,2,1,7,-1],[-6,5,-8,6,5,-10,-8,-7,3,6,-3,-10,-6,8,8],[4,-10,8,1,5,-3,-2,-1,4,10,-9,6,8,10,-5],[-7,-4,9,6,-8,-7,-5,-2,8,2,7,-3,-3,-4,8],[3,10,2,-9,-1,-9,-10,9,-5,-9,7,10,-10,10,8],[-3,3,8,7,6,-6,8,1,9,6,-5,-5,-2,8,7],[2,-6,-7,2,4,2,5,8,-9,2,-5,8,-1,-5,6],[4,-3,-5,-7,-2,7,2,6,-7,-9,2,-5,-3,3,-7]],[[1,-1,6,-5,-4,-3,-3,-2,7,5,8,9,8,-2,-2],[-1,2,7,7,10,-1,2,-8,-4,-2,10,-6,3,-2,6],[6,5,9,-6,6,-10,9,-2,6,3,-6,-10,-3,-8,-10],[9,2,-3,-7,-9,-7,1,-3,-4,-10,-9,-1,1,-3,-10],[-1,-8,2,6,-2,-4,4,-4,8,-5,6,-7,2,2,-6],[8,-1,2,10,5,-3,-1,-2,-3,5,-1,4,10,5,-1],[6,2,-6,3,2,-7,8,-1,5,3,4,2,1,3,-4],[10,-4,9,5,-5,3,2,-2,-2,-7,-10,8,-10,-4,8]],[[9,-9,-8,-4,-2,2,3,-7,-6,-3,-5,-5,-4,3,-8],[-9,-8,-2,9,-1,-5,8,-6,-4,-3,5,-9,-2,-3,-5],[7,10,10,-2,-7,10,6,1,-3,4,3,6,8,-9,3],[6,5,5,-9,6,2,10,-6,-1,8,-6,5,-3,2,-7],[-5,4,10,-7,8,3,-1,-1,-3,-7,8,-2,-7,-9,6],[-3,9,-10,1,-6,-1,1,3,7,4,9,-7,-6,-5,-5],[-1,3,-8,-8,10,-7,4,-1,8,5,3,-6,4,-7,7],[1,10,7,-6,-6,1,-5,1,-4,-5,-1,-2,9,8,-6]],[[-7,4,-10,5,6,-2,3,1,-5,-3,3,-7,2,2,1],[7,-4,5,-2,2,10,-6,-3,-8,-4,-9,6,4,3,10],[-4,1,-7,-4,7,-10,1,-1,-5,-3,2,3,-9,8,3],[-7,6,-6,6,-4,5,-9,10,-1,1,-3,7,2,3,7],[9,-4,1,8,10,-10,7,-3,1,1,9,6,-10,-1,10],[2,1,-4,5,-10,5,-4,-1,-9,-3,6,-4,10,-5,-10],[9,4,-7,-4,2,9,-4,-10,-2,-7,1,8,10,-3,9],[9,5,-9,4,7,5,-5,-1,-4,-6,-7,-8,6,1,2]],[[3,7,5,-10,-9,-6,3,3,-6,4,-2,1,-5,6,6],[-7,9,5,-10,-6,-2,-3,-4,8,7,-6,-4,-9,-5,5],[4,10,-6,9,2,6,8,10,10,-3,-1,-6,-5,-3,1],[-10,10,8,5,-5,-5,-2,2,4,-9,9,-4,-2,-1,9],[-5,-6,-1,4,-6,-4,9,1,-7,5,1,-3,-10,-6,-1],[2,-8,-10,7,-6,2,3,7,5,10,-7,4,8,6,-5],[-10,3,-7,6,7,-8,-1,2,-6,1,5,-7,-7,-2,-10],[10,-4,-8,5,9,-6,-3,-8,5,2,-8,-4,-5,-1,-6]],[[4,10,8,-10,-2,7,6,4,-6,7,-7,-4,-1,3,-6],[2,-6,7,-10,9,6,9,7,-5,6,-1,-7,7,-4,2],[1,9,6,-1,2,8,7,1,5,-9,8,-8,-6,6,5],[-1,10,4,-5,2,-7,5,-2,-8,-2,9,-10,8,-2,-8],[-10,3,-9,6,2,-9,-10,2,1,-8,10,5,-6,6,7],[3,4,-7,-5,-7,3,-7,-2,-7,-1,-10,-4,-1,-7,-8],[-4,2,-9,1,4,-2,-7,3,7,4,7,-1,8,3,2],[10,4,-3,2,8,3,-6,8,10,9,5,10,7,9,-5]]], dtype = "uint8")#candidate|2753|(15, 8, 15)|const|uint8
bop_2754 = relay.bitwise_and(var_2703.astype('int16'), relay.reshape(const_2753.astype('int16'), relay.shape_of(var_2703))) # shape=(15, 8, 15)
bop_2759 = relay.greater_equal(uop_2729.astype('bool'), relay.reshape(bop_2754.astype('bool'), relay.shape_of(uop_2729))) # shape=(15, 8, 15)
func_566_call = mod.get_global_var('func_566')
func_569_call = mutated_mod.get_global_var('func_569')
call_2766 = relay.TupleGetItem(func_566_call(relay.reshape(call_2734.astype('float64'), [13, 13, 5])), 3)
call_2767 = relay.TupleGetItem(func_569_call(relay.reshape(call_2734.astype('float64'), [13, 13, 5])), 3)
uop_2773 = relay.log2(bop_2759.astype('float32')) # shape=(15, 8, 15)
uop_2790 = relay.tan(uop_2718.astype('float64')) # shape=(15, 8, 15)
func_1718_call = mod.get_global_var('func_1718')
func_1719_call = mutated_mod.get_global_var('func_1719')
call_2798 = relay.TupleGetItem(func_1718_call(), 1)
call_2799 = relay.TupleGetItem(func_1719_call(), 1)
func_1572_call = mod.get_global_var('func_1572')
func_1574_call = mutated_mod.get_global_var('func_1574')
call_2813 = func_1572_call()
call_2814 = func_1572_call()
output = relay.Tuple([call_2734,call_2746,call_2766,uop_2773,uop_2790,call_2798,call_2813,])
output2 = relay.Tuple([call_2735,call_2747,call_2767,uop_2773,uop_2790,call_2799,call_2814,])
func_2818 = relay.Function([var_2702,var_2703,var_2723,], output)
mod['func_2818'] = func_2818
mod = relay.transform.InferType()(mod)
mutated_mod['func_2818'] = func_2818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2818_call = mutated_mod.get_global_var('func_2818')
var_2820 = relay.var("var_2820", dtype = "uint8", shape = (15, 8, 15))#candidate|2820|(15, 8, 15)|var|uint8
var_2821 = relay.var("var_2821", dtype = "uint8", shape = (15, 8, 15))#candidate|2821|(15, 8, 15)|var|uint8
var_2822 = relay.var("var_2822", dtype = "uint8", shape = (15, 8, 15))#candidate|2822|(15, 8, 15)|var|uint8
call_2819 = func_2818_call(var_2820,var_2821,var_2822,)
output = call_2819
func_2823 = relay.Function([var_2820,var_2821,var_2822,], output)
mutated_mod['func_2823'] = func_2823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1718_call = mod.get_global_var('func_1718')
func_1719_call = mutated_mod.get_global_var('func_1719')
call_2827 = relay.TupleGetItem(func_1718_call(), 1)
call_2828 = relay.TupleGetItem(func_1719_call(), 1)
output = relay.Tuple([call_2827,])
output2 = relay.Tuple([call_2828,])
func_2843 = relay.Function([], output)
mod['func_2843'] = func_2843
mod = relay.transform.InferType()(mod)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mutated_mod.get_global_var('func_2843')
call_2844 = func_2843_call()
output = call_2844
func_2845 = relay.Function([], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2245_call = mod.get_global_var('func_2245')
func_2246_call = mutated_mod.get_global_var('func_2246')
call_2883 = relay.TupleGetItem(func_2245_call(), 2)
call_2884 = relay.TupleGetItem(func_2246_call(), 2)
const_2885 = relay.const([0.090610,-0.404815,1.770595,9.258062,-5.675145,-8.417394,-6.645514,6.238238,6.609154,6.319380,-5.047301,-5.281853,-9.895566,3.428430,8.177973,7.728235,0.478374,-7.771655,-9.810417,-0.934095,7.184556,6.199139,2.236006,-9.962375,2.510215,-2.564550,-1.796685,8.807083,4.445554,1.300143,8.564416,3.850760,-9.415220,-8.795800,6.793161,-3.472913,7.209977,3.157392,-7.881916,9.418416,3.978713,6.578586,6.190870,0.896536,6.898657,6.356007,0.801578,-7.646465,-2.045663,-1.600480,2.925820,9.771969,6.160447,-0.328008,-7.617271,0.395760,7.444216,-4.441320,0.859836,7.107468,-6.908683,-9.805470,9.046111,-5.610822,4.617796,-0.020456,6.764115,9.579055,-0.244577,-0.013639,6.707759,-8.967518,-1.693210,1.530515,-5.147404,7.863900,-4.641727,-8.572391,-7.003710,9.909075,-6.473575,-6.618790,2.822096,-1.386406,6.122172,3.382012,-0.905486,-9.213265,-7.283597,6.185555,-6.546049,5.725768,-0.602326,7.534067,-9.599525,-1.203454,-2.419458,-2.285697,-3.195246,2.731545,9.951135,-4.762126,-3.602574,2.441557,7.585124,-6.287500,0.880294,-5.480198,8.384324,-6.141095,-7.501914,-4.651386,7.896862,5.999200,2.883645,-9.583211,3.995468,6.060356,3.530899,-1.030140,6.199048,-1.118232,-0.069669,-0.357009,-6.042996,-8.370885,4.536909,8.429094,7.856941,-1.288071,2.446190,-4.104932,8.590273,6.489177,-6.523699,8.551395,-9.803714,-7.465864,-1.994642,-7.279317,2.509859,-1.231165,-2.999446,9.204689,-4.608665,-3.473884,-8.837449,-7.984831,-5.728389,-5.454987,1.786568,-2.765879,-4.845866,-7.581276,5.588101,3.238193,4.528930,5.611466,-5.014789,-4.007662,-8.666653,-3.688156,2.053378,2.096925,-0.301218,-4.871394,8.464952,1.468673,7.566352,2.016044,5.606934,3.572485,-8.686824,-6.408079,7.726127,0.244742,6.906063,3.895132,-2.626531,3.887405,-0.994574,-5.662981,-4.295607,8.931068,5.133818,3.380293,-8.380573,-9.733498,5.858300,7.112613,3.841323,5.700302,-3.341719,9.142065,5.195114,-7.286391,-7.120085,6.921011,-1.314066,-0.666147,5.281187,-5.244267,-5.614421,-8.935872,7.316134,-2.300414,-8.513442,-2.399514,-6.095838,9.805919,-0.891292,-7.295702,-4.968172,4.376798,-8.894247,2.278730,5.704173,5.265179,-8.212104,-9.687936,5.500962,-5.645767,-4.161140,5.605064,-7.150097,-7.812707,-5.183538,9.066016,-4.752335,3.514083,-7.320999,7.664578,5.415639,7.825996,-2.070085,0.066831,-4.559386,-0.901896,-1.507521,-6.448730,-1.453748,5.262570,3.868562,-1.857340,-6.429537,-1.355786,-7.374385,-6.733166,8.705577,1.884345,1.844177,2.543541,-4.115506,-4.645526,8.098118,8.743457,7.692668,-4.263620,8.717842,4.421114,5.033674,-4.664996,1.844993,5.281124,-1.122392,-4.576432,2.769904,2.414667,3.139546,1.725274,-9.241603,7.097985,7.265471,-6.541224,-7.053149,-1.458824,-6.994278,8.328850,-5.745470,-4.621496,7.897019,-8.958312,-2.757558,-3.033391,-0.411005,6.867005,-9.724051,-9.083051,-1.380624,-2.837458,-4.730662,-4.914489,9.851031,-4.260304,-2.312669,-9.722537,-8.103637,9.086961,-5.685537,-4.747968,8.495350,-8.773822,-0.553497,9.715875,2.206518,2.279812,6.546122,-9.054331,9.044643,-1.044168,2.296879,8.795682,1.477584,3.329077,-4.918260,-6.151677,1.375372,2.330356,-6.540114,-7.257514,-7.446061,7.350706,-0.011182,-7.867406,3.507789,6.110767,0.060057,-5.220098,2.670714,2.088552,1.301478,6.744855,-9.866671,1.189453,-7.347648,-1.416552,2.497733,-3.733629,-9.807004,-5.901857,8.862056,-9.399957,-5.719439,0.725968,-5.120790,-6.704596,3.486482,-1.393215,-2.838971,-6.238763,-3.397002,-4.754108,-1.008654,9.352473,1.009543,-9.548229,8.859548,-4.563087,7.256394,-8.377885,-8.210185,-9.212990,-6.014894,7.804960,-1.267906,1.233053,-1.896671,-9.724386,-1.841853,6.775304,6.242051,-6.910122,3.061125,0.093228,4.952961,-1.266236,-7.318488,2.089989,-2.827450,8.003183,-6.641982,2.904422,-4.196223,6.445710,0.767903,9.966093,6.411608,8.898845,-2.618845,5.653799,-9.771355,9.168747,-3.265564,-5.650533,8.790853,0.065654,-7.875428,-5.489183,2.151643,-5.735043,3.277533,5.189550,3.349872,7.117306,1.125528,6.028886,-8.427006,-6.073143,9.347303,9.918179,6.463639,-0.626123,7.841249,-6.633740,3.005811,3.626201,-9.308351,8.843266,-5.506861,5.283737,3.690006,4.496294,6.374917,9.713748,-9.006191,1.525632,5.550882,-9.073745,7.118869,9.085807,4.361220,3.426738,-3.865714,1.314960,3.074149,-2.759734,-6.890938,-8.937994,-2.054068,-5.282380,6.508381,-8.254928,-6.194521,5.348901,4.193499,-9.507637,-3.120160,0.107069,-9.049646,0.689075,3.775892,-6.785519,5.662627,-0.468772,-4.963232,4.378470,-4.929081,5.409790,-6.702545,-5.122187,8.202133,-1.375296,-6.108560,-7.743214,-1.076061,-1.345624,-1.322711,5.286471,-0.476593,7.137730,4.887676,-9.521317,-0.596527,-3.006791,-0.562131,-3.547575,5.097417,1.756192,-2.111461,-3.300171,9.956698,5.059836,9.366025,-1.529334,-8.680743,8.200330,-2.489086,2.365406,0.985322,8.950295,8.711000,4.953454,-6.539099,-1.393108,3.557220,2.801829,-0.094122,-8.947562,-1.472176,0.198815,-9.921964,-3.977539,-0.911533,5.329331,0.405971,7.872631,-6.280928,7.390626,-3.822522,-4.326929,-7.497772,-9.127869,-5.777331,-7.606042,8.709586,7.305805,-0.987715,-5.977417,4.154684,-1.014540,-6.512834,5.082557,5.737652,0.684487,4.601950,0.698107,-0.066273,-4.218485,-8.011193,4.374659,-6.356206,0.181460,-3.977533,8.555673,3.477427,-2.395878,6.888711,-4.383752,-5.930126,-9.943105,8.515604,8.990955,-9.370850,-0.135648,-7.420370,-7.095279,-3.238784,-2.932003,-5.744783,9.821649,6.178692,8.231638,6.452305,4.250273,-6.738787,9.878702,3.967013,5.385579,-7.741529,-8.670443,0.972084,3.982817,-8.058348,-4.612680,1.634102,-4.882259,4.937998,-5.083667,-2.671466,-3.154860,0.835042,-8.249597,-4.516909,-2.386265,-4.584849,9.030836,-6.736986,8.942011,-2.094331,3.864967,3.483254,9.439315,9.748466,-8.486850,9.432899,-2.023656,-6.271450,-6.919859,-7.718641,-5.485834,1.973619,-9.647043,-9.276387,6.896159,7.854241,7.829585,-3.087912,7.875967,-0.619500,9.244187,-2.347966,-0.518542,2.590358,8.713916,-0.300333,-3.183208,-8.315045,2.266871,-3.154491,5.945418,2.853850,6.369529,5.126278,6.904376,-9.951860,-9.270052,7.322253,4.263638,5.330602,-5.619133,-8.118735,2.030695,-1.701348,-1.936361,9.148762,-9.019744,-2.978777,4.649378,9.295663,7.187076,6.970897,-7.010669,-0.084916,5.281739,1.210817,1.002930,-9.050571,-4.728083,8.830809,-0.558332,-7.701839,2.467629,-3.548994,9.637782,-1.102713,4.216731,-1.608145,-9.610760,3.906334,-4.805633,1.276489,4.993821,-9.496358,-1.857313,-5.251178,3.653148,-9.877205,4.836353,9.858275,-2.751352,2.749806,3.360781,9.732455,-9.855536,-1.436758,3.365581,4.803435,0.846420,-8.577594,9.640198,-9.280643,-4.115572,-0.281141,7.896144,-4.682407,8.768559,5.962787,9.622678,-8.981675,-9.218848,-1.669016,-2.713079,-3.783747,5.783266,-2.763432,1.612429,0.909630,6.089455,5.245041,9.267003,-3.200875,6.099140,-9.744113,-3.371669,-2.978217,4.867979,3.539039,-6.822558,1.886556,-1.954052,1.642897,5.470329,2.888191,-0.694125,2.214394,-3.441010,-1.139980,-2.938507,-5.913247,7.827705,2.358868,5.221240,-9.945938,-5.818725,-6.137638,8.416711,-8.227500,-9.428044,7.019474,-1.878693,6.181079,-4.323604,-5.159918,-2.152069,-0.921998,0.991997,-6.478208,-4.103594,1.990815,-7.601522,7.638097,6.912632,-7.325615,-1.030880,-1.091410,8.994499,5.848862,6.851516,-1.218504,5.200179,0.619574,-0.449251,2.363281,-6.488094,1.124540,-3.110345,3.697357,-0.080828,-2.047106,2.058049,5.959915,-4.083005,3.332709,-9.776352,3.744741,-8.420561,-7.226428,-7.470151,9.675704,-2.405120,2.325530,3.516356,-4.058498,8.833666,-6.916196,4.911432,2.735923,3.242519,6.465038,-3.727528,1.383918,4.999586,7.222770,0.331818,4.644341,1.059619,0.091664,3.528140,-8.566558,-6.814330,7.509398,-2.248144,7.311537,6.154381,4.677989,5.262387,-3.510737,-2.511710,-0.182457,-2.692303,-3.232748,-8.461715,6.137873,7.632663,-9.559035,-3.415958,-8.002465,-4.839576,-2.458838,-6.178588,9.507392,-5.188682,1.003692,6.531977,2.847596,0.823085,1.100612,2.946371,6.589283,-6.477506,-3.287136,3.051558,9.433824,-0.212003,-6.113150,6.061350,-6.367728,5.556876,3.071795,8.336824,8.417383,-9.313356,-5.001717,8.260214,-7.517130,-2.222791,-0.587703,3.356522,4.099894,-2.222161,6.199106,-3.440372,3.595021,8.473997,-0.845557,1.826843,9.160382,7.144834,1.371651,8.102096,-1.552210,-9.280520,9.556653,1.474444,5.212422], dtype = "float64")#candidate|2885|(845,)|const|float64
bop_2886 = relay.greater_equal(call_2883.astype('bool'), relay.reshape(const_2885.astype('bool'), relay.shape_of(call_2883))) # shape=(845,)
bop_2889 = relay.greater_equal(call_2884.astype('bool'), relay.reshape(const_2885.astype('bool'), relay.shape_of(call_2884))) # shape=(845,)
output = relay.Tuple([bop_2886,])
output2 = relay.Tuple([bop_2889,])
func_2914 = relay.Function([], output)
mod['func_2914'] = func_2914
mod = relay.transform.InferType()(mod)
output = func_2914()
func_2915 = relay.Function([], output)
mutated_mod['func_2915'] = func_2915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_2942 = relay.TupleGetItem(func_1504_call(), 4)
call_2943 = relay.TupleGetItem(func_1505_call(), 4)
output = relay.Tuple([call_2942,])
output2 = relay.Tuple([call_2943,])
func_2953 = relay.Function([], output)
mod['func_2953'] = func_2953
mod = relay.transform.InferType()(mod)
mutated_mod['func_2953'] = func_2953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mutated_mod.get_global_var('func_2953')
call_2954 = func_2953_call()
output = call_2954
func_2955 = relay.Function([], output)
mutated_mod['func_2955'] = func_2955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2273_call = mod.get_global_var('func_2273')
func_2274_call = mutated_mod.get_global_var('func_2274')
call_2956 = func_2273_call()
call_2957 = func_2273_call()
func_2258_call = mod.get_global_var('func_2258')
func_2259_call = mutated_mod.get_global_var('func_2259')
call_2963 = relay.TupleGetItem(func_2258_call(), 0)
call_2964 = relay.TupleGetItem(func_2259_call(), 0)
output = relay.Tuple([call_2956,call_2963,])
output2 = relay.Tuple([call_2957,call_2964,])
func_2967 = relay.Function([], output)
mod['func_2967'] = func_2967
mod = relay.transform.InferType()(mod)
mutated_mod['func_2967'] = func_2967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2967_call = mutated_mod.get_global_var('func_2967')
call_2968 = func_2967_call()
output = call_2968
func_2969 = relay.Function([], output)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_3004 = relay.TupleGetItem(func_1675_call(), 0)
call_3005 = relay.TupleGetItem(func_1677_call(), 0)
output = relay.Tuple([call_3004,])
output2 = relay.Tuple([call_3005,])
func_3007 = relay.Function([], output)
mod['func_3007'] = func_3007
mod = relay.transform.InferType()(mod)
mutated_mod['func_3007'] = func_3007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3007_call = mutated_mod.get_global_var('func_3007')
call_3008 = func_3007_call()
output = call_3008
func_3009 = relay.Function([], output)
mutated_mod['func_3009'] = func_3009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_3068 = relay.TupleGetItem(func_2843_call(), 0)
call_3069 = relay.TupleGetItem(func_2845_call(), 0)
uop_3084 = relay.exp(call_3068.astype('float32')) # shape=(845,)
uop_3086 = relay.exp(call_3069.astype('float32')) # shape=(845,)
func_1458_call = mod.get_global_var('func_1458')
func_1459_call = mutated_mod.get_global_var('func_1459')
call_3087 = func_1458_call()
call_3088 = func_1458_call()
output = relay.Tuple([uop_3084,call_3087,])
output2 = relay.Tuple([uop_3086,call_3088,])
func_3103 = relay.Function([], output)
mod['func_3103'] = func_3103
mod = relay.transform.InferType()(mod)
output = func_3103()
func_3104 = relay.Function([], output)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3133 = relay.var("var_3133", dtype = "float32", shape = (1, 7, 16))#candidate|3133|(1, 7, 16)|var|float32
const_3134 = relay.constdtype = "float32")#candidate|3134|(2, 7, 16)|const|float32
bop_3135 = relay.mod(var_3133.astype('float32'), const_3134.astype('float32')) # shape=(2, 7, 16)
bop_3143 = relay.add(var_3133.astype('uint16'), bop_3135.astype('uint16')) # shape=(2, 7, 16)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_3159 = func_1847_call()
call_3160 = func_1847_call()
func_3007_call = mod.get_global_var('func_3007')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_3174 = relay.TupleGetItem(func_3007_call(), 0)
call_3175 = relay.TupleGetItem(func_3009_call(), 0)
uop_3194 = relay.atan(const_3134.astype('float64')) # shape=(2, 7, 16)
output = relay.Tuple([bop_3143,call_3159,call_3174,uop_3194,])
output2 = relay.Tuple([bop_3143,call_3160,call_3175,uop_3194,])
func_3213 = relay.Function([var_3133,], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
mutated_mod['func_3213'] = func_3213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3214 = relay.var("var_3214", dtype = "float32", shape = (1, 7, 16))#candidate|3214|(1, 7, 16)|var|float32
func_3213_call = mutated_mod.get_global_var('func_3213')
call_3215 = func_3213_call(var_3214)
output = call_3215
func_3216 = relay.Function([var_3214], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_3256 = relay.TupleGetItem(func_1675_call(), 0)
call_3257 = relay.TupleGetItem(func_1677_call(), 0)
func_3213_call = mod.get_global_var('func_3213')
func_3216_call = mutated_mod.get_global_var('func_3216')
const_3291 = relay.const([[-1.788332,-9.600391,8.146373,5.327672,3.353853,-9.581182,0.217399,-8.166347,8.709188,-2.400919,-7.146655,-6.926848,1.072623,-1.822787,0.662917,-1.817443,5.522139,9.673996,-8.107222,-4.193641,-2.288801,-0.355220,-7.608122,-4.153619,4.539650,6.429823,6.746977,-3.781972],[-3.877771,-9.460068,2.850498,6.824236,-5.488727,9.186014,8.101012,-7.700124,5.772192,3.558320,2.993072,1.335788,9.097758,-6.341206,7.560620,1.730570,-5.275900,8.588709,1.000367,-9.735754,0.454115,-5.234728,8.730519,1.715456,-0.144148,-5.362127,-2.118568,-5.334011],[5.942563,-5.158151,4.672519,-3.628141,-3.378481,8.704522,-8.132514,3.703056,-1.040819,8.872770,-7.384279,-7.307053,8.523167,7.958989,-0.287643,3.082189,-9.913230,-2.606279,-4.858960,5.280323,5.922123,-7.841059,7.174148,4.919534,8.602632,5.897506,6.932644,-0.586033],[9.410344,0.725580,7.972642,2.981391,-8.503434,-5.844841,-8.197019,1.633343,-0.675142,2.032085,9.062641,6.010593,7.868678,5.693040,-3.342315,-0.297755,8.561532,-2.102658,-5.696266,-2.367194,1.032279,6.565813,8.620586,8.901343,-7.505025,9.621329,-1.594516,8.865199]], dtype = "float32")#candidate|3291|(4, 28)|const|float32
call_3290 = relay.TupleGetItem(func_3213_call(relay.reshape(const_3291.astype('float32'), [1, 7, 16])), 3)
call_3292 = relay.TupleGetItem(func_3216_call(relay.reshape(const_3291.astype('float32'), [1, 7, 16])), 3)
output = relay.Tuple([call_3256,call_3290,const_3291,])
output2 = relay.Tuple([call_3257,call_3292,const_3291,])
func_3309 = relay.Function([], output)
mod['func_3309'] = func_3309
mod = relay.transform.InferType()(mod)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mutated_mod.get_global_var('func_3309')
call_3310 = func_3309_call()
output = call_3310
func_3311 = relay.Function([], output)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1458_call = mod.get_global_var('func_1458')
func_1459_call = mutated_mod.get_global_var('func_1459')
call_3374 = func_1458_call()
call_3375 = func_1458_call()
uop_3376 = relay.sqrt(call_3374.astype('float32')) # shape=(845,)
uop_3378 = relay.sqrt(call_3375.astype('float32')) # shape=(845,)
output = uop_3376
output2 = uop_3378
func_3384 = relay.Function([], output)
mod['func_3384'] = func_3384
mod = relay.transform.InferType()(mod)
mutated_mod['func_3384'] = func_3384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3384_call = mutated_mod.get_global_var('func_3384')
call_3385 = func_3384_call()
output = call_3385
func_3386 = relay.Function([], output)
mutated_mod['func_3386'] = func_3386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_3434 = func_1336_call()
call_3435 = func_1336_call()
func_1572_call = mod.get_global_var('func_1572')
func_1574_call = mutated_mod.get_global_var('func_1574')
call_3441 = func_1572_call()
call_3442 = func_1572_call()
output = relay.Tuple([call_3434,call_3441,])
output2 = relay.Tuple([call_3435,call_3442,])
func_3453 = relay.Function([], output)
mod['func_3453'] = func_3453
mod = relay.transform.InferType()(mod)
output = func_3453()
func_3454 = relay.Function([], output)
mutated_mod['func_3454'] = func_3454
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3469 = relay.const([[[-4.876273,8.736592,8.463198,9.589257,0.438360],[-5.139122,-7.947171,4.043807,4.709835,7.625787],[9.137204,-7.999063,4.898414,1.235374,8.286375],[7.147740,3.693494,-2.601017,8.909959,-9.970881],[9.757821,-3.480701,-6.921467,-1.198430,-5.121024],[1.728848,1.842453,3.401593,-3.075180,-6.484164],[2.983528,0.267991,-0.838167,4.391887,0.657678],[-6.603225,-3.647203,9.256702,-8.782716,5.994461],[2.847561,4.161300,-8.119821,-8.961101,9.623878],[6.233768,-0.102851,4.151202,-4.862179,-7.295199],[-0.947076,-0.358706,4.261195,2.271244,1.941594],[-2.680942,1.947657,-7.946725,-0.337374,-7.963342],[7.252672,8.597554,9.629983,-7.508426,0.275651],[6.018516,9.290321,7.414900,6.998349,7.715969],[3.077478,-4.749324,5.325392,-9.337802,2.607951]],[[2.921032,-2.550501,-1.963312,1.754571,7.328832],[2.238269,-6.152945,2.152063,3.354303,-8.971979],[9.573075,0.027438,-3.247897,-3.618978,-1.445974],[-8.642328,-1.800476,-5.100562,-1.150368,8.103918],[8.410078,-6.955311,-5.308159,8.212050,3.240003],[-1.961112,5.700121,-2.000647,-8.077958,-9.485115],[-6.619486,-6.244296,-2.696921,9.700743,-6.640702],[-1.385093,4.138883,4.508841,-4.639096,2.932100],[-6.700009,9.389915,4.903402,6.483880,-2.087090],[5.223421,-0.285940,-4.232883,-6.330108,4.507744],[-8.485163,-8.523666,7.799929,5.524505,-6.131707],[8.890349,-9.183376,-9.910564,-3.759012,8.485311],[-5.034839,4.424301,-6.242686,6.040727,6.593859],[5.868430,-1.030754,2.487807,5.088001,-4.637402],[1.912586,-3.050408,-4.988363,-0.079078,6.738887]],[[7.964264,-3.613074,-1.336095,-4.805943,6.026201],[7.880268,-5.969913,0.337460,1.368336,-7.590446],[-7.286688,1.068580,-0.353877,-8.544144,-0.191135],[-1.009812,4.619127,-3.737929,-3.550840,9.210221],[-7.179697,-3.062096,-1.015264,-2.483347,8.455776],[2.918140,-4.743664,-9.848915,-7.555409,0.672720],[-3.138193,5.823572,-2.947532,-1.965505,-4.755024],[1.832005,-5.280089,6.374862,5.591256,-2.606081],[2.706616,-1.353633,-8.197071,-5.721352,0.100210],[8.907345,5.745217,4.299321,-8.984584,-9.363286],[2.874997,1.802604,-3.982898,9.979124,-3.753775],[-2.646045,7.275746,5.432102,3.306148,2.349443],[-8.292281,1.227976,3.198516,7.075972,-3.009003],[-5.082258,3.411820,7.551071,7.337603,4.442821],[-4.625528,0.847347,2.783061,4.201680,-0.168361]],[[7.738456,2.903800,-8.683425,-6.290456,-9.088652],[-0.360990,-2.043034,-2.877619,4.047301,-1.230392],[9.894335,-5.220407,2.863179,2.946962,-4.557822],[5.594415,-5.117152,-1.200576,0.278613,5.682128],[9.410888,-1.060154,2.003784,1.536946,-1.259973],[-2.794510,-5.766241,-5.329517,-3.845825,-0.364667],[8.906617,-5.768250,-8.474672,4.066799,4.056981],[2.746474,-4.901798,2.366346,-8.861898,-6.342524],[-1.865935,-2.677210,1.115005,-4.497302,5.621827],[-1.213981,-5.428075,-0.599323,-0.685102,-9.812599],[-6.214473,-2.085189,-7.354125,5.979244,6.850804],[8.440342,-8.450217,-7.099504,6.128664,9.869601],[-5.419676,2.128363,-2.061013,6.382061,5.309958],[2.129975,-1.478203,-4.984809,6.314824,5.618153],[9.539493,-7.207058,9.446980,7.826729,-5.843610]],[[7.598846,3.850548,8.967258,-7.808313,-8.956137],[0.553881,-9.906494,0.646110,-2.193310,-3.288450],[0.484056,-9.008091,6.162824,4.226427,-2.148835],[8.059512,-3.600245,1.769871,-7.411549,-4.150291],[9.285859,-3.351908,4.219500,3.349854,-8.949984],[-0.603958,4.257785,-9.343995,-2.174024,-6.666878],[4.929843,-5.165639,-5.587603,1.371593,6.252908],[4.717731,5.512845,-6.041826,8.294679,-9.839447],[3.238652,-7.736554,-6.408846,9.145780,-6.714328],[9.959712,7.844145,9.103902,1.972123,3.960337],[-8.790630,-1.448928,-2.481002,0.961829,-0.614670],[-1.642445,-8.378762,-0.310744,9.628316,2.383258],[7.600090,5.822134,-0.112419,-4.240746,3.145203],[-5.420198,-9.550938,-5.386708,-1.373995,9.239916],[9.570929,-9.100137,-1.111828,-2.476270,1.835335]],[[0.288868,1.599111,0.284537,9.280655,3.675020],[5.938064,-2.216106,-2.932248,2.762512,-4.491209],[1.526146,-1.008565,5.578880,2.723519,-2.203846],[5.758587,3.553322,-5.391165,-5.179238,3.775166],[-3.705278,-9.476413,-3.073794,7.496492,7.287732],[-9.597258,-4.848538,-1.602187,0.349449,5.633517],[-8.334183,8.555467,1.793597,7.014057,7.936084],[-8.148684,4.351139,1.905795,6.960674,3.483681],[-3.820933,-5.534727,-9.284208,3.062027,-6.659562],[4.298584,6.433897,-8.754558,-9.896198,7.154183],[-2.283822,-6.334932,-2.496662,-3.840479,-4.666566],[-7.673016,4.823858,0.276997,8.923815,-6.838756],[-1.469428,7.295539,-8.285170,-4.648813,9.680451],[5.357430,9.828789,1.603471,9.832875,-1.144262],[-5.251722,-6.146125,7.030414,4.928679,-8.467660]],[[-4.398157,-5.681642,6.374030,4.498109,1.086244],[7.381997,5.932779,-9.237188,-4.057671,-5.733215],[-3.943305,5.497478,-5.279461,-3.332974,8.002398],[6.068907,6.846786,5.110017,3.435302,6.163206],[9.099307,0.425937,5.401073,-4.901118,9.384427],[-3.138710,1.114089,-3.266451,-2.484577,2.792316],[-8.946270,7.323802,-1.160698,-6.544554,-3.529591],[2.836340,-2.082569,-8.711470,-8.394622,1.670830],[1.476099,0.458650,6.298397,-7.163169,4.376718],[3.699531,7.953976,8.745609,-6.140780,4.861739],[5.962520,-3.649435,6.478776,-6.437941,8.067482],[6.366182,7.966657,8.820317,-3.492384,1.901049],[-3.785159,9.611963,1.599757,4.885240,-5.002000],[-9.341337,9.122623,3.335701,6.135073,5.404033],[4.158393,8.954071,0.440274,9.517902,1.200314]],[[0.918319,-3.883438,0.799514,-4.813297,8.651168],[3.869385,-1.534395,-5.920088,5.396808,4.674253],[5.600273,6.157165,-1.741692,8.251421,-1.220173],[-5.037169,-9.560614,4.541667,-1.238306,9.079798],[-7.164223,-4.358719,3.653143,2.554886,-6.588801],[3.502906,2.971545,4.761733,-8.818890,-8.015156],[6.271153,-5.204565,4.940487,1.104065,5.614627],[7.111223,6.801693,4.801191,-8.902732,0.181450],[4.043550,-8.414037,4.925675,-3.411799,7.978131],[-4.133563,5.382793,-9.725006,-0.698159,4.017983],[-8.560907,-5.306993,-8.838845,6.986463,-5.900668],[2.750850,5.609066,-2.884323,5.941625,-6.142769],[3.847324,3.025549,-9.498371,1.234492,5.530374],[-1.294043,4.419532,5.721610,-1.760489,1.488936],[2.973847,5.362125,-7.001017,9.280075,-5.812869]],[[-1.640579,2.064251,1.853546,-4.937279,-3.524330],[7.856068,3.295306,3.074030,-0.033755,7.223343],[-0.887378,-8.637046,-1.191068,-7.926630,6.559380],[3.697208,-4.830891,3.724776,-4.003289,3.321206],[-8.366642,-8.792881,4.996717,-1.519221,4.522074],[7.655657,6.586987,6.354093,9.449285,9.993969],[8.950650,-1.392588,8.139268,3.399279,1.127279],[4.481237,8.028317,-4.692319,3.328184,-5.448951],[-9.518091,5.777073,8.670027,7.534811,-6.888357],[4.569614,-1.689737,7.226930,-9.357523,3.427646],[2.895162,9.824601,-4.042576,-9.181578,-5.025677],[7.992887,-3.611095,-0.227888,3.955562,-3.944547],[6.129430,5.179616,-6.867123,2.995554,1.876599],[-8.897350,8.914444,4.325848,8.738869,-3.533456],[-6.034652,6.638207,-0.308524,5.299442,9.116143]],[[1.099403,8.183524,-1.001190,3.473680,-9.011228],[6.785892,-1.509804,-6.708577,-8.310749,8.997977],[-7.507983,-5.292883,-5.594997,5.273223,9.074269],[-0.245044,3.784617,0.560206,2.683092,-1.213772],[-1.266712,-9.863736,-7.638232,-4.277449,2.288371],[6.535647,-3.585272,7.767683,-7.410567,-5.272605],[7.478518,-7.526119,-2.118116,8.140167,1.833105],[-6.413350,7.180373,-4.706975,8.996029,-9.255632],[-6.039360,-7.342216,-4.577592,8.414363,7.619801],[-9.029516,-0.606139,8.464380,-6.142942,-8.301501],[-7.515957,5.682732,-0.556078,-4.644074,4.952169],[-2.443409,-2.579682,-6.965367,-2.958014,-9.422267],[9.113867,-4.782402,7.800293,-2.334106,-4.478577],[8.465693,3.635193,-0.419383,-8.650493,-6.883466],[-4.115717,5.368723,5.297949,3.326467,-7.407634]]], dtype = "float32")#candidate|3469|(10, 15, 5)|const|float32
uop_3470 = relay.cos(const_3469.astype('float32')) # shape=(10, 15, 5)
uop_3472 = relay.log2(const_3469.astype('float64')) # shape=(10, 15, 5)
output = relay.Tuple([uop_3470,uop_3472,])
output2 = relay.Tuple([uop_3470,uop_3472,])
func_3478 = relay.Function([], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
output = func_3478()
func_3479 = relay.Function([], output)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3527 = relay.var("var_3527", dtype = "int16", shape = (7, 14, 11))#candidate|3527|(7, 14, 11)|var|int16
var_3528 = relay.var("var_3528", dtype = "int16", shape = (7, 14, 11))#candidate|3528|(7, 14, 11)|var|int16
bop_3529 = relay.add(var_3527.astype('int16'), relay.reshape(var_3528.astype('int16'), relay.shape_of(var_3527))) # shape=(7, 14, 11)
bop_3543 = relay.equal(bop_3529.astype('bool'), relay.reshape(var_3528.astype('bool'), relay.shape_of(bop_3529))) # shape=(7, 14, 11)
func_1281_call = mod.get_global_var('func_1281')
func_1283_call = mutated_mod.get_global_var('func_1283')
call_3549 = relay.TupleGetItem(func_1281_call(), 1)
call_3550 = relay.TupleGetItem(func_1283_call(), 1)
bop_3555 = relay.minimum(var_3528.astype('float64'), relay.reshape(bop_3543.astype('float64'), relay.shape_of(var_3528))) # shape=(7, 14, 11)
uop_3572 = relay.acosh(var_3527.astype('float32')) # shape=(7, 14, 11)
func_2651_call = mod.get_global_var('func_2651')
func_2653_call = mutated_mod.get_global_var('func_2653')
var_3595 = relay.var("var_3595", dtype = "float64", shape = (198,))#candidate|3595|(198,)|var|float64
call_3594 = relay.TupleGetItem(func_2651_call(relay.reshape(var_3595.astype('float64'), [11, 3, 6])), 1)
call_3596 = relay.TupleGetItem(func_2653_call(relay.reshape(var_3595.astype('float64'), [11, 3, 6])), 1)
output = relay.Tuple([call_3549,bop_3555,uop_3572,call_3594,var_3595,])
output2 = relay.Tuple([call_3550,bop_3555,uop_3572,call_3596,var_3595,])
func_3600 = relay.Function([var_3527,var_3528,var_3595,], output)
mod['func_3600'] = func_3600
mod = relay.transform.InferType()(mod)
var_3601 = relay.var("var_3601", dtype = "int16", shape = (7, 14, 11))#candidate|3601|(7, 14, 11)|var|int16
var_3602 = relay.var("var_3602", dtype = "int16", shape = (7, 14, 11))#candidate|3602|(7, 14, 11)|var|int16
var_3603 = relay.var("var_3603", dtype = "float64", shape = (198,))#candidate|3603|(198,)|var|float64
output = func_3600(var_3601,var_3602,var_3603,)
func_3604 = relay.Function([var_3601,var_3602,var_3603,], output)
mutated_mod['func_3604'] = func_3604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_3617 = func_1021_call()
call_3618 = func_1021_call()
var_3623 = relay.var("var_3623", dtype = "float64", shape = (845,))#candidate|3623|(845,)|var|float64
bop_3624 = relay.divide(call_3617.astype('float64'), relay.reshape(var_3623.astype('float64'), relay.shape_of(call_3617))) # shape=(845,)
bop_3627 = relay.divide(call_3618.astype('float64'), relay.reshape(var_3623.astype('float64'), relay.shape_of(call_3618))) # shape=(845,)
output = relay.Tuple([bop_3624,])
output2 = relay.Tuple([bop_3627,])
func_3637 = relay.Function([var_3623,], output)
mod['func_3637'] = func_3637
mod = relay.transform.InferType()(mod)
mutated_mod['func_3637'] = func_3637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3638 = relay.var("var_3638", dtype = "float64", shape = (845,))#candidate|3638|(845,)|var|float64
func_3637_call = mutated_mod.get_global_var('func_3637')
call_3639 = func_3637_call(var_3638)
output = call_3639
func_3640 = relay.Function([var_3638], output)
mutated_mod['func_3640'] = func_3640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_3692 = func_1021_call()
call_3693 = func_1021_call()
output = relay.Tuple([call_3692,])
output2 = relay.Tuple([call_3693,])
func_3698 = relay.Function([], output)
mod['func_3698'] = func_3698
mod = relay.transform.InferType()(mod)
output = func_3698()
func_3699 = relay.Function([], output)
mutated_mod['func_3699'] = func_3699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2967_call = mod.get_global_var('func_2967')
func_2969_call = mutated_mod.get_global_var('func_2969')
call_3726 = relay.TupleGetItem(func_2967_call(), 0)
call_3727 = relay.TupleGetItem(func_2969_call(), 0)
func_666_call = mod.get_global_var('func_666')
func_668_call = mutated_mod.get_global_var('func_668')
call_3728 = func_666_call()
call_3729 = func_666_call()
uop_3742 = relay.erf(call_3726.astype('float64')) # shape=(3, 4, 8)
uop_3744 = relay.erf(call_3727.astype('float64')) # shape=(3, 4, 8)
func_1641_call = mod.get_global_var('func_1641')
func_1643_call = mutated_mod.get_global_var('func_1643')
const_3747 = relay.const([[-5.670141],[2.437336],[3.664943],[5.954731],[-7.555877],[-4.187145],[0.410879],[-8.115843],[5.147404],[-3.473428],[-7.308923],[-2.698659],[7.391739],[-0.438972],[4.349840],[5.444785],[4.710382],[0.353956],[-8.641882],[7.225336],[-3.961519],[-2.883299],[3.336069],[8.487033],[9.537751],[-8.112993],[1.694085],[-0.119102],[-6.156736],[-6.053029],[8.630186],[8.049139],[6.948590],[2.658016],[-4.776083],[-6.523796],[3.751948],[-9.010581],[-8.106680],[7.616034],[9.887713],[5.177817],[9.166882],[4.104791],[-9.769153],[6.738108],[1.501950],[2.247434],[9.191743],[-3.026284],[6.609319],[-0.029348],[5.620319],[-4.468565],[-8.331988],[8.507353],[7.189168],[-5.386085],[-8.719265],[1.496688],[-4.576143],[9.231185],[6.581562],[-9.604880],[2.413735],[-3.499904],[8.823104],[2.539177],[6.529796],[-8.665198],[-8.321080],[-9.530406],[-8.490065],[-6.302211],[-8.302096],[-8.636666],[-8.071263],[0.010464],[-0.966306],[-8.569110],[-7.361732],[-2.299383],[6.436764],[2.912074],[8.307291],[-8.124332],[2.572369],[-3.729292],[-1.466673],[2.521630],[-9.934158],[6.963041],[7.560314],[-9.768750],[-6.185961],[8.713337],[-4.873635],[-5.065172],[-6.558178],[-5.520246],[-9.780297],[0.941523],[4.751907],[5.634119],[-1.432427],[1.258627],[-6.785998],[1.911734],[8.725533],[2.048768],[-7.873552],[-1.006565],[8.554862],[-8.901665],[-8.800414],[2.384087],[6.005604],[7.771976],[-3.798099],[-7.777543],[5.827705],[7.845850],[-2.002255],[8.645778],[1.119179],[7.635575],[0.834666],[-2.885503],[4.169308],[-8.137061],[2.895952],[-3.938823],[-2.434074],[-1.311941],[-5.745403],[3.011190],[-8.587252],[-2.374688],[6.076216],[-0.576338],[-1.654209],[-0.177462],[0.906435],[-4.522336],[2.478735],[0.843829],[9.183139],[-7.263833],[7.192336],[-7.567521],[0.765137],[5.863263],[6.476267],[8.946920],[0.997663],[0.629276],[7.826307],[8.795654],[-2.091715],[9.146582],[9.787795],[-3.213633],[-4.226280],[-2.895639],[6.263178],[-4.008947],[4.205985],[-6.967113],[9.425955],[0.831025],[3.017401],[-0.883382],[0.270815],[-8.198455],[-6.327438],[3.496206],[-6.563332],[-2.591805],[-8.051251],[-6.483474],[4.167571],[0.029176],[-0.676360],[9.155609],[6.129848],[-6.493403],[7.927257],[2.920611],[-9.114995],[-9.196391],[-0.982015],[-9.648158],[-8.834060],[2.180185],[-6.177957],[-0.648007],[-2.827815],[-0.869099],[-9.716759],[-1.951933],[-1.460614],[-1.000317],[-8.928955],[-4.261799],[9.145049],[6.053175],[7.323688],[-4.741038],[-9.642118],[-4.623887],[1.224378],[-6.154840],[-9.408696],[-1.094550],[7.772632],[-2.651197],[0.934600],[1.260019],[4.886177],[4.132304],[4.700472],[-9.625402],[-4.886781],[-1.017743],[-6.975712],[0.610754],[9.376121],[-6.797815],[-8.215860],[-9.950983],[1.462149],[-0.244247],[-3.954171],[-0.373305],[8.657624],[-8.908825],[-4.189965],[0.408056],[-2.304238],[7.768751],[3.525815],[-3.107343],[9.358589],[-6.703009],[-0.572826],[7.765637],[-8.548409],[-2.365329],[0.401417],[-2.646585],[-0.076492],[1.095529],[9.986605],[-5.056408],[-5.561492],[-9.467686],[-0.228197],[0.964419],[5.024927],[-3.284326],[-5.664951],[-6.486048],[0.813829],[6.651558],[7.888473],[5.498068],[6.537994],[1.854286],[-7.507827],[-8.056165],[5.742845],[-1.163018],[7.249209],[5.605720],[5.731759],[-7.854707],[7.580143],[-9.210819],[-3.287829],[-3.527758],[8.273572],[5.578682],[-3.316295],[7.867070],[-5.983971],[-2.655491],[5.143018],[-8.082762],[-6.676628],[6.457206],[4.699143],[6.713631],[-6.089778],[8.512928],[-7.546443],[3.585730],[9.466122],[-9.207158],[1.517899],[-0.329686],[5.917850],[4.995347],[8.484401],[4.303615],[-9.440472],[-4.418809],[1.348107],[-7.587547],[1.179533],[-6.004888],[5.241605],[-2.288474],[-7.867841],[8.614752],[-9.667094],[-6.870899],[-8.515703],[-2.089941],[7.922512],[5.968479],[8.197291],[5.849315],[8.411372],[-8.898648],[7.814486],[-5.932175],[-5.484829],[4.001131],[3.095657],[-1.201437],[0.144679],[7.602304],[1.041562],[0.877377],[-6.683030],[-3.529808],[-4.048839],[-4.196882],[6.154121],[1.585606],[8.408561],[-4.271317],[-3.924359],[-3.392824],[-6.280854],[0.914706],[3.668379],[0.813507],[2.700918],[6.812035],[1.697108],[8.405889],[3.113971],[1.747897],[-0.371453],[8.819196],[8.011006],[-6.238646],[-7.006345],[4.294816],[5.109533],[-9.762604],[-1.616233],[3.141627],[-8.837677],[5.402517],[-8.765846],[-8.860161],[-1.985318],[2.295441],[-3.430754],[-4.719723],[-6.894154],[0.559917],[6.384809],[1.540038],[0.027776],[-5.977846],[9.963110],[9.254159],[-5.846936],[4.094502],[1.252370],[9.482739],[8.325463],[7.856987],[1.609979],[3.595026],[-1.062816],[-4.849055],[-3.718537],[-0.285991],[4.192735],[6.213585],[3.686960],[3.451556],[8.920324],[-2.219893],[-3.842543],[-9.294849],[-5.222971],[9.027438],[6.228536],[5.760096],[2.791824],[2.991127],[6.917347],[4.721242],[-7.774323],[3.049861],[-6.911474],[-2.271525],[2.291014],[-4.115621],[-9.816690],[-1.268688],[-5.792220],[-7.319238],[-2.167240],[7.914543],[-3.972926],[9.306542],[8.794359],[-4.896443],[3.051611],[8.079354],[-3.313225],[3.478682],[-7.507549],[4.116919],[-3.905039],[-0.538932],[0.373302],[-3.131156],[-4.485988],[1.289070],[9.362177],[5.359697],[-7.969875],[-4.494083],[0.711134],[9.198450],[8.154565],[-9.277831],[-8.579398],[-0.019913],[2.469662],[-9.489868],[-7.199945],[-9.298941],[-8.602162],[0.268599],[5.724820],[-9.899657],[-3.758484],[9.205148],[-1.525470],[-6.518097],[-8.343179],[-7.977092],[-5.875319],[1.722402],[5.320337],[7.756192],[2.527548],[-6.319981],[3.756070],[9.278795],[-3.856795],[-9.104713],[-0.735603],[9.476210],[-0.906517],[3.389674],[-2.896902],[-3.996887],[-6.252220],[-2.216707],[7.646157],[5.903792],[5.190344],[-2.569012],[3.479999],[7.414113],[-8.943198],[4.718544],[-7.370639],[6.866480],[-5.297329],[3.035599],[-4.068804],[8.193174],[2.152730],[-1.494738],[4.408106],[0.558016],[-4.698224],[-6.659455],[9.145899],[8.173467],[5.433710],[6.425096],[3.052122],[2.299069],[9.982188],[-7.807357],[-4.605538],[-2.056865],[0.357004],[-8.107801],[3.162744],[-8.169673],[7.098469],[6.906096],[-7.911612],[-3.742361],[3.240615],[4.635434],[6.217108],[-6.798173],[3.613538],[-6.903633],[8.246729],[-2.706258],[-0.439002],[8.449914],[-2.176779],[7.626992],[-2.329891],[8.926491],[2.287276],[0.778616],[0.455274],[-4.605961],[6.488333],[5.764709],[6.699210],[-8.378158],[-1.213036],[-8.846475],[3.710467],[-1.286229],[2.152104],[0.143174],[6.933309],[-4.584846],[7.224520],[2.856103],[9.867992],[3.706064],[8.114446],[8.384200],[-7.723012],[6.469997],[-1.418430],[4.132367],[8.996265],[-5.741760],[9.574955],[7.050396],[-1.845032],[-8.422224],[4.378055],[-6.803831],[5.919152],[3.903983],[-8.069815],[0.002538],[-9.867791],[2.989325],[-1.273820],[-9.520139],[0.447602],[-6.965453],[-4.393389],[6.082854],[-3.658780],[-0.286089],[1.066044],[-0.764884],[-5.792960],[2.029462],[-8.369563],[-9.043286],[5.188994],[-3.335561],[-9.931308],[-7.445916],[9.108995],[7.863144],[-8.406356],[-5.684051],[-1.981452],[-0.410028],[9.172817],[-3.975586],[-1.072249],[-7.693850],[-7.524898],[7.608313],[-1.193335],[-4.551847],[-4.267944],[-3.076724],[4.655101],[2.735756],[-6.398431],[-2.422559],[5.407147],[4.884102],[8.614665],[-1.170950],[5.953114],[7.858860],[2.867410],[-8.114261],[-2.508877],[7.252593],[6.766907],[-7.937980],[2.743693],[-5.366453],[4.381701],[-4.910018],[4.842924],[9.790505],[1.905914],[-9.046744],[-4.778091],[-7.757710],[-6.718456],[2.799010],[3.748465],[2.691926],[2.252088],[-5.757414],[9.915250],[-2.442155],[2.012009],[1.122221],[-6.428654],[-5.568893],[8.050850],[6.289115],[-8.976951],[0.494016],[-1.987061],[8.960302],[7.331066],[-2.170503],[-5.067265],[6.260018],[3.599552],[-0.427325],[-5.484859],[7.787440],[-2.026891],[-3.796178],[-1.382144],[6.988191],[-9.349090],[1.088610],[4.969815],[-3.866455],[7.359152],[7.555355],[7.926636],[2.010988],[9.337777],[-1.814373],[-7.111053],[-1.088154],[8.380863],[-3.603435],[-9.084888],[-0.336790],[-8.651045],[4.852451],[-5.952578],[0.251052],[-3.732498],[6.282927],[7.345750],[-1.241889],[-4.945039],[7.137299],[-9.150795],[9.692965],[-5.709386],[5.683996],[1.890271],[7.095033],[4.186978],[0.052171],[8.577014],[9.204005],[-5.088730],[8.932349],[-9.273719],[-4.072836],[-9.255435],[5.096649],[4.851582],[-3.597926],[-2.396894],[7.102806],[4.797532],[6.828565],[3.062600],[-0.230727],[4.868154],[7.528140],[-3.867305],[-1.049927],[-3.010604],[8.258664],[-0.056988],[-0.699449],[5.460851],[0.904294],[-3.432675],[0.437515],[-5.570807],[8.225820],[-1.469627],[-4.652049],[2.367935],[3.727147],[-9.972040],[-7.344981],[-2.461655],[-3.043446],[-2.789909],[-1.321401],[8.164357],[2.024154],[-3.674997],[-5.215445],[-1.031412],[2.667297],[0.718895],[-7.895229],[8.565399],[6.065379],[2.445446],[-5.811766],[5.842473],[-7.404035],[2.290403],[-3.225781],[3.378376],[4.184294],[-5.517295],[-2.637912],[0.871665],[0.926709],[0.641976],[8.231805],[9.397133],[-9.656393],[4.324750],[-7.533646],[8.642054],[-1.614869],[-2.391253],[-2.247840],[4.336739],[1.453880],[6.490612],[-5.346342],[0.896136],[1.024669],[3.308536],[6.852466],[2.233497],[-4.005281],[9.676454],[-1.237253],[3.842816],[0.070039],[1.841630],[6.315948],[3.579498],[-8.619623],[-5.923115],[4.092002],[0.390170],[-1.198377],[-5.194862],[4.960797],[-5.164916],[-1.270719],[4.900099],[-5.168134],[8.838856],[-2.462160],[9.632074],[7.233858],[-3.525421],[5.934197],[-4.125785],[2.540300],[-1.656244],[8.592986],[6.258611],[-5.039090],[-8.478180],[5.356976],[5.249475],[-0.391609],[-2.510319],[4.973214],[7.194912],[-8.133057],[4.149418],[-0.993087],[8.513326],[6.726490],[-6.071020],[-3.562132],[2.423672],[2.983959],[7.946221],[6.179749],[-2.059164],[6.548535],[-1.836086],[7.888733],[-7.740114],[-2.593967],[2.111354],[6.751792],[-8.225749],[-5.288004],[2.647118],[-2.086624],[-3.388616],[-4.675452],[8.957151],[-0.613331],[-8.891032],[-6.746596],[3.546182],[-8.024595],[6.531541]], dtype = "float64")#candidate|3747|(845, 1)|const|float64
call_3746 = relay.TupleGetItem(func_1641_call(relay.reshape(const_3747.astype('float64'), [845,])), 2)
call_3748 = relay.TupleGetItem(func_1643_call(relay.reshape(const_3747.astype('float64'), [845,])), 2)
output = relay.Tuple([call_3728,uop_3742,call_3746,const_3747,])
output2 = relay.Tuple([call_3729,uop_3744,call_3748,const_3747,])
func_3752 = relay.Function([], output)
mod['func_3752'] = func_3752
mod = relay.transform.InferType()(mod)
output = func_3752()
func_3753 = relay.Function([], output)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_3775 = relay.TupleGetItem(func_943_call(), 0)
call_3776 = relay.TupleGetItem(func_945_call(), 0)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_3781 = relay.TupleGetItem(func_822_call(), 2)
call_3782 = relay.TupleGetItem(func_824_call(), 2)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_3786 = relay.TupleGetItem(func_1504_call(), 3)
call_3787 = relay.TupleGetItem(func_1505_call(), 3)
uop_3788 = relay.asin(call_3781.astype('float64')) # shape=(13, 13, 5)
uop_3790 = relay.asin(call_3782.astype('float64')) # shape=(13, 13, 5)
output = relay.Tuple([call_3775,call_3786,uop_3788,])
output2 = relay.Tuple([call_3776,call_3787,uop_3790,])
func_3799 = relay.Function([], output)
mod['func_3799'] = func_3799
mod = relay.transform.InferType()(mod)
output = func_3799()
func_3800 = relay.Function([], output)
mutated_mod['func_3800'] = func_3800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3453_call = mod.get_global_var('func_3453')
func_3454_call = mutated_mod.get_global_var('func_3454')
call_3805 = relay.TupleGetItem(func_3453_call(), 1)
call_3806 = relay.TupleGetItem(func_3454_call(), 1)
output = relay.Tuple([call_3805,])
output2 = relay.Tuple([call_3806,])
func_3824 = relay.Function([], output)
mod['func_3824'] = func_3824
mod = relay.transform.InferType()(mod)
mutated_mod['func_3824'] = func_3824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mutated_mod.get_global_var('func_3824')
call_3825 = func_3824_call()
output = call_3825
func_3826 = relay.Function([], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3827 = relay.var("var_3827", dtype = "float64", shape = (11, 14, 12))#candidate|3827|(11, 14, 12)|var|float64
uop_3828 = relay.acos(var_3827.astype('float64')) # shape=(11, 14, 12)
output = relay.Tuple([uop_3828,])
output2 = relay.Tuple([uop_3828,])
func_3843 = relay.Function([var_3827,], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
var_3844 = relay.var("var_3844", dtype = "float64", shape = (11, 14, 12))#candidate|3844|(11, 14, 12)|var|float64
output = func_3843(var_3844)
func_3845 = relay.Function([var_3844], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_3874 = func_1021_call()
call_3875 = func_1021_call()
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_3880 = func_2502_call()
call_3881 = func_2502_call()
output = relay.Tuple([call_3874,call_3880,])
output2 = relay.Tuple([call_3875,call_3881,])
func_3896 = relay.Function([], output)
mod['func_3896'] = func_3896
mod = relay.transform.InferType()(mod)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3896_call = mutated_mod.get_global_var('func_3896')
call_3897 = func_3896_call()
output = call_3897
func_3898 = relay.Function([], output)
mutated_mod['func_3898'] = func_3898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3901 = relay.TupleGetItem(func_3103_call(), 1)
call_3902 = relay.TupleGetItem(func_3104_call(), 1)
func_3824_call = mod.get_global_var('func_3824')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_3918 = relay.TupleGetItem(func_3824_call(), 0)
call_3919 = relay.TupleGetItem(func_3826_call(), 0)
output = relay.Tuple([call_3901,call_3918,])
output2 = relay.Tuple([call_3902,call_3919,])
func_3950 = relay.Function([], output)
mod['func_3950'] = func_3950
mod = relay.transform.InferType()(mod)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3950_call = mutated_mod.get_global_var('func_3950')
call_3951 = func_3950_call()
output = call_3951
func_3952 = relay.Function([], output)
mutated_mod['func_3952'] = func_3952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3962 = relay.TupleGetItem(func_3309_call(), 1)
call_3963 = relay.TupleGetItem(func_3311_call(), 1)
output = relay.Tuple([call_3962,])
output2 = relay.Tuple([call_3963,])
func_3978 = relay.Function([], output)
mod['func_3978'] = func_3978
mod = relay.transform.InferType()(mod)
output = func_3978()
func_3979 = relay.Function([], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4004 = relay.var("var_4004", dtype = "int64", shape = (5, 16, 11))#candidate|4004|(5, 16, 11)|var|int64
const_4005 = relay.const([[[2,-8,4,1,9,10,4,-6,5,4,-7],[-10,2,3,2,9,1,-4,-7,-7,-10,8],[6,10,-1,1,-7,-5,7,-5,3,2,3],[-8,-4,5,-4,5,9,9,-2,-2,-3,5],[4,-8,6,-10,7,-7,5,-4,9,6,5],[-9,-10,-5,5,-3,-4,5,-1,8,3,1],[-1,6,4,-7,-1,-7,5,-2,-4,9,-7],[7,-7,8,-2,9,-5,3,-7,8,5,9],[-9,-10,7,2,-4,-2,6,3,10,-3,-7],[2,-9,3,10,-3,2,-4,5,-3,-5,-1],[4,2,8,-8,-4,-10,-5,-6,-5,-3,-4],[-6,-1,7,-3,-10,2,2,7,-4,2,-5],[-7,1,-2,8,1,5,4,-9,-10,-3,-1],[4,-5,-3,2,-6,-9,-2,-1,-6,-6,-4],[3,-7,-4,-7,5,7,10,1,-5,3,-3],[-4,-7,7,-3,6,-8,-1,1,-9,1,-10]],[[-5,-5,5,-6,-4,5,3,9,-4,-2,-5],[-5,2,5,-2,-4,-4,-7,8,-9,6,-6],[-7,2,7,4,-6,-8,-4,2,8,3,7],[-2,5,-7,-7,-9,7,4,7,6,10,2],[7,-2,-1,8,6,1,3,-4,1,3,-7],[2,6,7,-1,1,-4,4,7,3,2,-9],[-4,-3,10,-2,4,1,1,-7,-9,-2,-1],[-6,8,6,-3,-7,9,1,8,6,-9,-2],[-7,5,-9,-6,-5,1,-2,-5,1,2,-2],[9,8,1,-4,-8,-4,-4,-1,-3,5,-2],[-10,-3,-9,-3,10,2,-9,5,-8,2,-7],[-4,9,7,-3,10,-5,6,-10,6,1,7],[-3,-1,7,-2,2,-7,3,-4,10,-2,8],[1,-7,7,-7,7,-9,8,6,2,-5,-8],[2,7,-7,-9,6,-5,6,-2,6,-10,2],[3,-9,-3,-6,3,4,-2,-10,7,10,9]],[[-4,9,-2,9,9,9,8,2,-4,4,6],[2,4,10,-3,-9,1,9,7,7,-9,-5],[10,-3,-2,-4,-10,2,8,-9,4,8,-6],[-1,6,-10,-4,-3,2,-9,-10,5,-1,-5],[3,-10,2,4,-6,10,3,-8,-6,-1,7],[-5,7,7,6,-9,-6,6,8,7,-5,7],[-8,2,7,4,-5,9,10,-2,-9,-5,-9],[-6,-1,10,-9,-1,-3,3,-8,2,-8,7],[-10,-4,9,8,2,-2,5,8,-10,-3,6],[3,-4,1,-9,-10,7,-7,-5,4,-7,10],[-8,-7,1,-1,5,1,10,-1,-10,5,-7],[6,9,9,6,-9,-2,-5,8,10,-10,3],[4,-9,7,4,8,7,-7,5,-8,8,-3],[-4,8,4,-4,-10,-3,3,-10,-5,4,-6],[-10,4,5,9,4,-9,-5,10,10,-8,-6],[-2,-7,-7,-10,-1,5,-8,7,8,-1,4]],[[10,7,-6,2,5,10,-2,2,1,-2,-1],[7,-10,-9,-2,6,9,-1,-8,6,-6,5],[5,-1,3,5,6,1,-6,6,5,9,5],[10,-10,9,5,5,-3,8,-4,9,-4,-5],[-1,6,4,2,5,7,8,-3,-9,-5,-7],[-10,6,10,-8,-10,-7,-4,2,-4,-8,2],[6,1,4,-10,8,3,-7,-6,7,5,2],[8,-7,-3,-5,3,10,9,-1,-8,-10,7],[-1,4,10,-5,9,8,-8,-3,8,4,-1],[6,3,2,-3,1,-1,6,-4,-4,6,9],[5,-9,-9,2,6,-3,-10,-2,-4,-8,6],[6,7,-3,4,-9,5,1,-2,5,9,-9],[-2,3,-2,1,-7,9,9,-8,-5,9,4],[-5,4,-6,-1,3,4,1,7,5,1,7],[-6,-10,-2,3,2,4,-2,-9,3,-6,8],[-4,-1,2,-5,-1,-5,-3,3,-5,-8,9]],[[9,-4,-1,-3,10,-7,-8,-3,7,-5,-5],[9,6,3,5,5,1,8,10,5,9,-10],[-1,10,-7,2,3,9,7,5,-5,8,2],[10,-9,3,-6,-5,-6,-9,-9,-4,-4,4],[-7,5,-3,-8,1,8,-4,8,-6,1,7],[4,10,-10,2,-8,-3,1,-8,-1,-10,10],[2,5,2,-9,-5,7,-10,10,9,1,2],[9,2,10,-1,-7,10,-10,-8,-1,1,-8],[3,4,-7,5,8,1,6,-3,4,9,-2],[6,7,4,-5,10,4,1,9,-3,2,9],[5,-4,-2,3,-3,5,-6,9,-3,1,-10],[-9,10,6,-5,-1,-6,9,9,3,1,-1],[9,2,8,-1,8,9,-3,-2,-1,9,8],[-7,-2,-1,10,-3,4,3,9,-2,6,-4],[6,7,1,-7,6,7,6,-2,-2,7,8],[-7,6,3,1,-8,5,4,-1,-8,7,-6]]], dtype = "int64")#candidate|4005|(5, 16, 11)|const|int64
bop_4006 = relay.greater(var_4004.astype('bool'), relay.reshape(const_4005.astype('bool'), relay.shape_of(var_4004))) # shape=(5, 16, 11)
func_3453_call = mod.get_global_var('func_3453')
func_3454_call = mutated_mod.get_global_var('func_3454')
call_4009 = relay.TupleGetItem(func_3453_call(), 1)
call_4010 = relay.TupleGetItem(func_3454_call(), 1)
func_1441_call = mod.get_global_var('func_1441')
func_1443_call = mutated_mod.get_global_var('func_1443')
const_4016 = relay.const([-1.484508,5.169303,7.445432,0.534876,5.602799,4.190498,9.740236,1.758525,-8.631378,4.032154,0.629806,7.513585,1.247866,2.373037,3.350671,-7.465941,-3.368972,-4.825952,-9.136017,-9.912459,1.629475,-3.735306,-5.939655,5.991767,8.246081,-6.624460,-6.774247,1.977652,-4.409297,-7.040076,3.654264,5.422381,5.154276,2.994221,9.943234,6.481271,8.608255,-3.721694,3.002723,0.458012,-9.847952,4.968178,1.754406,-9.393503,4.876121,0.928729,-7.177908,0.967740,-4.147440,4.435669,-2.836241,3.008798,-5.360112,-5.138531,0.519074,-4.746094,4.886064,-8.587934,-1.856725,-6.931241,-8.230223,-6.121499,-6.498782,-7.123446,8.144376,2.013801,-3.691121,5.639121,-7.047720,-4.839580,1.658015,4.872320,-3.637117,0.114575,-2.148887,0.723602,2.915177,0.413269,5.661843,7.120938,2.179552,-2.806482,5.516073,1.671995,0.170007,7.225402,-5.442222,-1.862107,-1.061556,-8.729022,5.420349,3.128633,6.721572,8.940626,-6.822694,0.616581,2.362026,2.608770,-2.646541,-6.152414,-5.783395,-0.190604,-4.785218,-7.351511,5.683164,6.775136,-1.267116,9.541456,-8.855370,-1.362291,7.035013,-2.951524,9.462799,5.950406,-6.511387,-3.651519,0.964530,-7.559260,7.316150,5.164436,5.474387,4.301908,2.270680,3.296224,4.233370,5.127116,-0.768176,7.927465,1.671502,2.820007,-8.416571,6.331012,-2.454225,3.812393,-3.655527,-1.437808,-8.632121,6.748635,9.859555,7.316102,-7.916626,1.827134,-2.416510,-7.825513,-8.493031,-7.495239,7.258286,-9.984048,3.610111,0.770064,-6.688334,5.939519,-3.638925,0.911779,0.973926,-1.441030,5.732610,-6.877817,7.189230,8.904265,-2.369406,-7.834157,1.267650,-8.865785,1.282360,-1.946450,2.323965,-5.900962,-6.981907,0.265426,-7.179002,9.700656,-6.906474,1.553938,6.970240,0.903276,-9.755335,3.546266,-9.567003,-0.796855,-9.255023,-6.917529,-3.907087,0.175989,-4.128494,1.639230,-8.347061,-8.347381,-6.352353,-6.872020,-1.609842,-4.929713,-6.829909,4.159162,3.782518,-0.034214,-8.932191,4.065138,0.565162,-6.262216,-7.769043,-6.515855,-0.675413,7.992686,-6.543035,-3.353727,0.162387,-5.745038,6.700196,-7.036417,2.940213,-8.270936,7.136489,2.525523,-5.909218,-1.301920,9.798994,5.131201,2.510024,-6.651702,4.243789,3.177427,2.377982,-4.612754,9.810061,4.240465,6.632158,-5.332089,-7.488906,0.301932,6.553468,5.888346,-8.386381,8.831350,8.948992,2.858985,-5.358121,4.553518,-6.495351,-2.243925,-8.074737,2.377865,6.631136,1.647066,2.734187,-2.204700,-6.882260,6.487699,1.396002,7.000642,-6.278215,2.579222,1.964978,4.198176,-2.366334,7.569567,1.294418,-5.047324,-6.076899,-2.048621,-1.719765,3.602902,-7.118062,0.498811,4.733334,-8.640560,1.652271,-5.680071,-1.952290,0.262166,-5.325111,-0.714157,7.823705,-3.815799,-3.750914,4.899320,-2.732730,3.537546,8.040001,-0.203599,5.456646,-7.111913,-9.538296,8.775051,-3.438954,5.162530,7.116928,0.149347,-0.900730,3.513720,-5.316838,7.245433,8.282801,-4.485098,8.669780,3.754681,1.359406,7.214420,-3.135064,9.531378,7.533768,6.942064,-0.191386,1.297445,5.782974,3.239957,0.482869,-4.023625,3.394471,2.938926,1.119352,-5.437779,5.498548,-7.823197,-0.511641,-9.847952,-4.342549,7.316750,-9.391570,8.199409,3.154757,-9.990033,1.113189,3.993970,0.450063,3.269664,2.688940,1.697530,7.969345,-3.941230,6.758269,-0.700752,8.082360,-7.980397,-7.421592,2.997669,-1.439996,6.912034,-9.227328,0.517260,2.803238,-2.037741,-2.507074,5.873331,4.209708,3.636542,1.737575,-7.373553,1.679874,-3.929801,-9.456965,3.012862,8.163765,-6.201176,0.211850,8.603005,-4.483502,1.579820,-9.835508,-2.961718,9.328961,-4.049026,0.456727,0.537967,-1.762652,2.866152,3.477333,2.826553,1.491957,-6.323833,1.075985,9.308955,1.496302,-9.173943,-9.563174,5.768929,2.863209,-8.931885,-1.327597,9.202195,7.954724,1.762702,-7.515678,-3.957318,-9.650449,-7.992174,-7.171453,4.050265,8.105375,9.307588,-8.926892,2.628986,4.243823,2.339404,8.925389,-2.516812,3.113891,7.843004,-5.174831,3.521682,-0.724839,6.022746,5.392120,-7.020016,-7.607082,-9.941354,-8.481727,-0.400296,3.176908,2.382178,1.906460,-0.455222,6.773749,-0.498873,5.596337,-5.146107,0.567342,-2.741555,-3.830939,6.698951,0.787409,5.173414,9.022601,4.012394,6.969882,5.967134,-0.532085,8.177039,4.211065,1.549763,8.380411,-8.639680,8.018289,-9.792260,6.458376,4.870256,6.811260,-3.115094,-6.501304,-9.567196,-1.045526,-8.585092,4.239473,-1.467849,7.139507,0.065906,9.741824,-5.201536,-5.985230,-1.411258,-0.790220,-6.732001,3.523551,8.714008,-4.837847,8.355478,1.298224,6.370781,-7.687419,-8.249861,-8.758602,-2.862434,1.780547,-6.790254,2.757653,-7.829481,-5.863225,-6.650541,4.973093,-3.292039,7.720653,0.561598,0.785380,7.661668,-5.782632,-0.834993,1.157533,1.886729,9.894430,-8.915046,-8.636892,-5.562379,-5.823643,-3.308388,-8.450267,7.621760,1.580097,1.665155,-1.342633,-2.088809,-0.395523,6.108616,6.734169,-1.820762,-5.234540,-9.654743,8.438708,-3.588913,7.076887,-9.613885,3.240811,6.953940,-3.641642,2.076781,2.442234,2.910988,-6.358944,9.212606,0.491536,-2.308569,-8.526224,6.970536,-8.233747,9.137609,-3.103346,2.056660,-9.538494,-9.790606,2.850779,7.404494,9.568671,-5.596694,2.331537,-2.435581,-7.446316,-3.151877,8.407846,-8.916507,0.678585,8.186963,2.613880,7.873449,6.364516,-2.981970,-0.116231,6.475506,7.003359,3.301329,1.414390,3.951358,2.416752,-9.122471,3.044494,-7.248347,8.997131,0.696614,-3.190494,-8.176365,-6.798487,4.424194,-8.206178,0.260799,-6.255930,-8.604748,-4.221219,1.102054,6.480970,-8.583854,3.196971,-2.236054,-1.941037,1.589492,-3.817513,-7.311469,0.480521,7.385789,-9.440923,6.185914,-4.362500,-1.614213,9.155699,-5.232392,7.313331,-2.026544,5.596018,7.153071,-7.511749,-4.637891,-0.562654,7.448841,-0.043002,7.961107,7.252239,-8.354869,-3.124108,-8.691322,-1.695126,6.417573,6.814209,-9.944693,-2.102681,-8.595128,3.283874,8.454873,6.022949,8.413540,-0.754314,-7.745322,3.770012,4.355721,4.122917,1.853223,-0.114613,-1.438593,-5.752733,-9.894190,-0.086584,9.418264,9.722963,-1.523976,-1.576438,0.680555,-6.978441,-8.952683,-2.492142,-5.739271,-5.039474,6.475990,-6.013628,-2.956718,4.912205,7.512802,-5.761616,9.081561,2.141649,-0.839017,7.003134,-2.971142,-1.633400,9.139413,-4.158997,-9.153360,1.823550,0.737280,9.532279,7.274081,-3.649486,3.417520,3.639174,6.271055,-9.006877,-7.999681,4.467258,4.625434,-0.739341,-9.017582,-5.897461,4.095040,-9.514945,8.006878,-8.402443,-3.905772,8.747616,1.925573,-3.908262,-2.637639,7.461308,-0.083830,4.109260,-1.788388,-7.517147,9.080664,4.725322,9.928957,4.667569,-7.709807,0.263983,8.823838,-4.926673,1.104961,5.433184,7.017866,9.694217,1.294801,0.515959,-9.032603,-7.660299,0.895494,-8.958093,0.113019,0.793082,2.018731,1.312921,-1.373003,-0.909152,-6.674019,6.494253,-9.276905,-1.576740,8.026925,4.386436,5.575649,6.651928,6.524401,3.736103,-9.059138,-0.255181,9.074394,-4.621175,3.460343,-2.602533,-2.066092,4.143926,-4.652596,-8.769864,-8.904692,6.112295,6.070297,-8.528511,-6.904071,5.594259,-4.832003,-3.144415,5.473577,0.476103,8.409993,3.807606,2.830353,-6.330397,-4.808828,-1.266438,-2.746279,-4.312413,-7.391466,3.850163,5.071691,1.063993,-5.115337,7.546259,-6.359853,6.912767,-9.464141,0.105966,4.992364,5.251286,-6.932041,-0.717538,0.635276,-5.609750,4.628722,-6.437503,1.402454,7.271945,-1.047674,5.444666,5.985875,-4.678565,0.842632,-1.294439,-4.449124,-7.134986,6.319151,0.407438,-7.910509,-9.413540,8.689634,-5.486315,3.781216,8.406334,-7.538957,-2.042463,1.468812,-5.930789,5.506633,3.801075,-1.062094,-0.329242,0.039723,7.178630,-1.380043,8.461660,-1.372761,-4.418077,7.490531,3.555902,-0.442382,-9.995296,8.186682,9.465758,2.927226,-3.094939,-9.395124,5.144788,-9.569125,2.973338,-7.299924,1.190092,-2.601351,-7.171675,0.402777,-1.508053,-1.044433,6.301460,1.667509,-8.367181,6.433427,-8.979191,4.315302,2.914609,-6.526260,-2.392978,-8.247472,-4.324991,6.697549,-5.793062,-1.992483,2.686098,7.478384,-5.629996,8.167917,6.634901,4.698980,-7.562346,5.321994,0.917578,2.376124,7.240591,4.427886,-6.132192,-6.292544,6.064572,0.046211,7.071835,7.642256,9.315068,-2.737403,5.691424,4.036360,2.676242,-4.010665,-1.509439,-1.307986,1.784058,0.017714,3.266640,-0.515546,7.578242,7.503930,8.843043,-5.741899,3.065548,3.103408,2.376947,-9.454002,-7.974892], dtype = "float64")#candidate|4016|(845,)|const|float64
call_4015 = relay.TupleGetItem(func_1441_call(relay.reshape(const_4016.astype('float64'), [13, 65])), 1)
call_4017 = relay.TupleGetItem(func_1443_call(relay.reshape(const_4016.astype('float64'), [13, 65])), 1)
uop_4051 = relay.atan(bop_4006.astype('float64')) # shape=(5, 16, 11)
func_3637_call = mod.get_global_var('func_3637')
func_3640_call = mutated_mod.get_global_var('func_3640')
call_4058 = relay.TupleGetItem(func_3637_call(relay.reshape(const_4016.astype('float64'), [845,])), 0)
call_4059 = relay.TupleGetItem(func_3640_call(relay.reshape(const_4016.astype('float64'), [845,])), 0)
output = relay.Tuple([call_4009,call_4015,const_4016,uop_4051,call_4058,])
output2 = relay.Tuple([call_4010,call_4017,const_4016,uop_4051,call_4059,])
func_4062 = relay.Function([var_4004,], output)
mod['func_4062'] = func_4062
mod = relay.transform.InferType()(mod)
mutated_mod['func_4062'] = func_4062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4063 = relay.var("var_4063", dtype = "int64", shape = (5, 16, 11))#candidate|4063|(5, 16, 11)|var|int64
func_4062_call = mutated_mod.get_global_var('func_4062')
call_4064 = func_4062_call(var_4063)
output = call_4064
func_4065 = relay.Function([var_4063], output)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3799_call = mod.get_global_var('func_3799')
func_3800_call = mutated_mod.get_global_var('func_3800')
call_4155 = relay.TupleGetItem(func_3799_call(), 1)
call_4156 = relay.TupleGetItem(func_3800_call(), 1)
func_2522_call = mod.get_global_var('func_2522')
func_2524_call = mutated_mod.get_global_var('func_2524')
call_4157 = func_2522_call()
call_4158 = func_2522_call()
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_4162 = func_2690_call()
call_4163 = func_2690_call()
var_4164 = relay.var("var_4164", dtype = "float64", shape = (6, 12, 13))#candidate|4164|(6, 12, 13)|var|float64
bop_4165 = relay.not_equal(call_4157.astype('bool'), relay.reshape(var_4164.astype('bool'), relay.shape_of(call_4157))) # shape=(6, 12, 13)
bop_4168 = relay.not_equal(call_4158.astype('bool'), relay.reshape(var_4164.astype('bool'), relay.shape_of(call_4158))) # shape=(6, 12, 13)
output = relay.Tuple([call_4155,call_4162,bop_4165,])
output2 = relay.Tuple([call_4156,call_4163,bop_4168,])
func_4174 = relay.Function([var_4164,], output)
mod['func_4174'] = func_4174
mod = relay.transform.InferType()(mod)
mutated_mod['func_4174'] = func_4174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4175 = relay.var("var_4175", dtype = "float64", shape = (6, 12, 13))#candidate|4175|(6, 12, 13)|var|float64
func_4174_call = mutated_mod.get_global_var('func_4174')
call_4176 = func_4174_call(var_4175)
output = call_4176
func_4177 = relay.Function([var_4175], output)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2245_call = mod.get_global_var('func_2245')
func_2246_call = mutated_mod.get_global_var('func_2246')
call_4186 = relay.TupleGetItem(func_2245_call(), 2)
call_4187 = relay.TupleGetItem(func_2246_call(), 2)
output = call_4186
output2 = call_4187
func_4193 = relay.Function([], output)
mod['func_4193'] = func_4193
mod = relay.transform.InferType()(mod)
output = func_4193()
func_4194 = relay.Function([], output)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_4224 = func_2690_call()
call_4225 = func_2690_call()
output = call_4224
output2 = call_4225
func_4230 = relay.Function([], output)
mod['func_4230'] = func_4230
mod = relay.transform.InferType()(mod)
mutated_mod['func_4230'] = func_4230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4230_call = mutated_mod.get_global_var('func_4230')
call_4231 = func_4230_call()
output = call_4231
func_4232 = relay.Function([], output)
mutated_mod['func_4232'] = func_4232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3978_call = mod.get_global_var('func_3978')
func_3979_call = mutated_mod.get_global_var('func_3979')
call_4274 = relay.TupleGetItem(func_3978_call(), 0)
call_4275 = relay.TupleGetItem(func_3979_call(), 0)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_4278 = func_2502_call()
call_4279 = func_2502_call()
const_4294 = relay.constdtype = "float64")#candidate|4294|(2, 7, 16)|const|float64
bop_4295 = relay.logical_or(call_4274.astype('bool'), relay.reshape(const_4294.astype('bool'), relay.shape_of(call_4274))) # shape=(2, 7, 16)
bop_4298 = relay.logical_or(call_4275.astype('bool'), relay.reshape(const_4294.astype('bool'), relay.shape_of(call_4275))) # shape=(2, 7, 16)
output = relay.Tuple([call_4278,bop_4295,])
output2 = relay.Tuple([call_4279,bop_4298,])
func_4300 = relay.Function([], output)
mod['func_4300'] = func_4300
mod = relay.transform.InferType()(mod)
output = func_4300()
func_4301 = relay.Function([], output)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_4316 = func_621_call()
call_4317 = func_621_call()
output = relay.Tuple([call_4316,])
output2 = relay.Tuple([call_4317,])
func_4318 = relay.Function([], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
output = func_4318()
func_4319 = relay.Function([], output)
mutated_mod['func_4319'] = func_4319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3824_call = mod.get_global_var('func_3824')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_4326 = relay.TupleGetItem(func_3824_call(), 0)
call_4327 = relay.TupleGetItem(func_3826_call(), 0)
func_2818_call = mod.get_global_var('func_2818')
func_2823_call = mutated_mod.get_global_var('func_2823')
var_4336 = relay.var("var_4336", dtype = "uint8", shape = (1800,))#candidate|4336|(1800,)|var|uint8
call_4335 = relay.TupleGetItem(func_2818_call(relay.reshape(var_4336.astype('uint8'), [15, 8, 15]), relay.reshape(var_4336.astype('uint8'), [15, 8, 15]), relay.reshape(var_4336.astype('uint8'), [15, 8, 15]), ), 6)
call_4337 = relay.TupleGetItem(func_2823_call(relay.reshape(var_4336.astype('uint8'), [15, 8, 15]), relay.reshape(var_4336.astype('uint8'), [15, 8, 15]), relay.reshape(var_4336.astype('uint8'), [15, 8, 15]), ), 6)
bop_4353 = relay.subtract(call_4335.astype('float32'), relay.reshape(call_4326.astype('float32'), relay.shape_of(call_4335))) # shape=(6, 12, 13)
bop_4356 = relay.subtract(call_4337.astype('float32'), relay.reshape(call_4327.astype('float32'), relay.shape_of(call_4337))) # shape=(6, 12, 13)
output = relay.Tuple([var_4336,bop_4353,])
output2 = relay.Tuple([var_4336,bop_4356,])
func_4360 = relay.Function([var_4336,], output)
mod['func_4360'] = func_4360
mod = relay.transform.InferType()(mod)
var_4361 = relay.var("var_4361", dtype = "uint8", shape = (1800,))#candidate|4361|(1800,)|var|uint8
output = func_4360(var_4361)
func_4362 = relay.Function([var_4361], output)
mutated_mod['func_4362'] = func_4362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4371 = relay.var("var_4371", dtype = "float32", shape = (13, 11, 15))#candidate|4371|(13, 11, 15)|var|float32
uop_4372 = relay.sigmoid(var_4371.astype('float32')) # shape=(13, 11, 15)
uop_4396 = relay.asinh(uop_4372.astype('float64')) # shape=(13, 11, 15)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_4407 = relay.TupleGetItem(func_1675_call(), 0)
call_4408 = relay.TupleGetItem(func_1677_call(), 0)
bop_4411 = relay.mod(uop_4396.astype('float64'), relay.reshape(uop_4372.astype('float64'), relay.shape_of(uop_4396))) # shape=(13, 11, 15)
bop_4419 = relay.not_equal(bop_4411.astype('bool'), relay.reshape(uop_4372.astype('bool'), relay.shape_of(bop_4411))) # shape=(13, 11, 15)
uop_4422 = relay.asin(uop_4372.astype('float64')) # shape=(13, 11, 15)
output = relay.Tuple([call_4407,bop_4419,uop_4422,])
output2 = relay.Tuple([call_4408,bop_4419,uop_4422,])
func_4437 = relay.Function([var_4371,], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
var_4438 = relay.var("var_4438", dtype = "float32", shape = (13, 11, 15))#candidate|4438|(13, 11, 15)|var|float32
output = func_4437(var_4438)
func_4439 = relay.Function([var_4438], output)
mutated_mod['func_4439'] = func_4439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_4459 = relay.TupleGetItem(func_3103_call(), 1)
call_4460 = relay.TupleGetItem(func_3104_call(), 1)
output = call_4459
output2 = call_4460
func_4464 = relay.Function([], output)
mod['func_4464'] = func_4464
mod = relay.transform.InferType()(mod)
output = func_4464()
func_4465 = relay.Function([], output)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_4480 = relay.TupleGetItem(func_2843_call(), 0)
call_4481 = relay.TupleGetItem(func_2845_call(), 0)
var_4482 = relay.var("var_4482", dtype = "float64", shape = (845,))#candidate|4482|(845,)|var|float64
bop_4483 = relay.not_equal(call_4480.astype('bool'), relay.reshape(var_4482.astype('bool'), relay.shape_of(call_4480))) # shape=(845,)
bop_4486 = relay.not_equal(call_4481.astype('bool'), relay.reshape(var_4482.astype('bool'), relay.shape_of(call_4481))) # shape=(845,)
bop_4505 = relay.mod(call_4480.astype('float64'), relay.reshape(var_4482.astype('float64'), relay.shape_of(call_4480))) # shape=(845,)
bop_4508 = relay.mod(call_4481.astype('float64'), relay.reshape(var_4482.astype('float64'), relay.shape_of(call_4481))) # shape=(845,)
output = relay.Tuple([bop_4483,bop_4505,])
output2 = relay.Tuple([bop_4486,bop_4508,])
func_4527 = relay.Function([var_4482,], output)
mod['func_4527'] = func_4527
mod = relay.transform.InferType()(mod)
mutated_mod['func_4527'] = func_4527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4528 = relay.var("var_4528", dtype = "float64", shape = (845,))#candidate|4528|(845,)|var|float64
func_4527_call = mutated_mod.get_global_var('func_4527')
call_4529 = func_4527_call(var_4528)
output = call_4529
func_4530 = relay.Function([var_4528], output)
mutated_mod['func_4530'] = func_4530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_4576 = func_1847_call()
call_4577 = func_1847_call()
func_4360_call = mod.get_global_var('func_4360')
func_4362_call = mutated_mod.get_global_var('func_4362')
var_4590 = relay.var("var_4590", dtype = "uint8", shape = (1800,))#candidate|4590|(1800,)|var|uint8
call_4589 = relay.TupleGetItem(func_4360_call(relay.reshape(var_4590.astype('uint8'), [1800,])), 0)
call_4591 = relay.TupleGetItem(func_4362_call(relay.reshape(var_4590.astype('uint8'), [1800,])), 0)
output = relay.Tuple([call_4576,call_4589,var_4590,])
output2 = relay.Tuple([call_4577,call_4591,var_4590,])
func_4603 = relay.Function([var_4590,], output)
mod['func_4603'] = func_4603
mod = relay.transform.InferType()(mod)
mutated_mod['func_4603'] = func_4603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4604 = relay.var("var_4604", dtype = "uint8", shape = (1800,))#candidate|4604|(1800,)|var|uint8
func_4603_call = mutated_mod.get_global_var('func_4603')
call_4605 = func_4603_call(var_4604)
output = call_4605
func_4606 = relay.Function([var_4604], output)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4612 = relay.const([[[6.090523,6.116635,5.804026,5.322994,6.909826,0.483666,-7.908255,5.277999,-5.907503,1.731129,-9.751927,-5.359540,-7.753177,-3.419424,1.637363],[-7.296499,9.587517,-1.048610,-2.631763,-3.217067,-5.908300,3.170623,-6.534976,-5.702218,-9.915286,-9.599153,7.287263,9.513736,-0.100399,9.121942]],[[0.951890,-4.711631,-3.996092,7.616926,2.385068,-3.795351,7.706506,-6.411085,5.788753,-1.981814,-7.747595,-3.758672,2.523407,7.550397,6.813732],[8.548247,-8.235071,8.105485,-3.899372,5.629162,-1.341244,-2.104454,9.464440,5.878135,8.025282,-1.788722,4.211600,-9.767946,-2.765278,-6.918209]],[[-9.362691,4.496211,4.444493,7.593849,3.648274,7.547624,4.731363,-8.655879,7.431160,1.727096,9.987825,-6.178504,-1.091796,-9.255266,2.533749],[-0.088428,-9.730848,-1.190037,-4.664920,-0.979800,8.395090,-1.958992,4.571174,7.958376,-5.383443,5.719765,0.696238,-0.926124,-3.106198,-0.636536]],[[5.177876,-0.424541,-3.264030,-4.362437,-1.139634,7.057923,-4.127082,-2.664044,-1.749727,-1.301228,-9.017670,-5.109437,-6.159228,2.993966,5.926723],[-9.873927,-1.683179,0.840249,5.480508,-6.667414,-0.574204,3.302990,7.907868,-1.604094,-1.247158,-7.576558,-6.041329,-6.135671,-4.118624,-5.197843]],[[9.152575,-1.659310,2.865194,0.104969,5.086498,-7.763806,2.904777,7.633337,-0.811009,-3.050546,-1.878795,6.700395,3.253032,0.693430,-4.251364],[-7.059895,-9.050763,6.786965,-6.893332,0.170513,-1.817767,2.971091,0.974971,-6.161693,-9.557622,-8.067372,-8.449977,2.055186,8.837709,6.464805]],[[-1.878016,-1.749980,-1.208681,-4.971243,-3.650149,7.288640,-4.091212,-8.659506,8.623867,3.280774,6.671233,-6.738607,7.693897,0.423543,3.014055],[-6.770494,-6.776394,-9.074635,7.503623,1.934334,-1.903641,-5.428482,0.243805,3.204560,-3.220585,-2.647003,-4.437962,5.984417,6.367848,1.773418]],[[9.394564,-0.244648,-9.507298,-3.704879,-7.137664,9.818276,-3.357847,4.023655,-7.499242,-3.410563,9.315270,-5.398325,-0.629666,8.865608,-3.017588],[-7.364453,0.755593,-9.125447,1.669772,6.086740,-6.797119,3.011644,-6.480251,3.494834,7.568034,6.607829,-6.104240,-8.374073,6.587611,-0.212956]],[[-5.355717,6.977585,-9.216161,9.362719,6.314871,6.841571,9.773326,-9.869404,0.243056,-7.319398,-7.068970,2.969985,3.311503,7.621391,2.059182],[1.663018,-7.900935,1.625209,-5.199329,-8.971046,4.878679,2.183103,-9.300821,7.922640,4.564270,-7.558559,0.253677,0.487923,-0.230189,-7.083861]],[[-1.149137,2.343325,-9.025501,8.111899,-9.328599,-7.586368,6.205430,-0.683113,-3.670711,5.903317,-2.475071,1.436232,5.571828,-7.264590,8.690364],[-7.120670,-0.244143,-8.270830,-3.350455,1.160533,6.324306,8.653141,-9.376443,3.883973,8.822331,-2.441051,-2.071066,1.102237,-7.371637,6.727820]],[[-3.146635,-0.580687,-2.465138,-2.972061,-1.671337,7.151098,1.991832,6.015419,-2.505679,-4.088185,2.394406,3.720524,-2.106103,-4.347702,2.280590],[-7.942224,8.634809,-4.942510,5.876831,-1.163596,0.240281,-7.805952,-3.725302,-0.320293,-7.258389,-4.494875,7.645756,0.255771,4.563104,2.825533]],[[-9.183731,-5.288065,-0.750694,3.466690,6.402006,4.512014,3.001906,-3.776909,1.112443,-5.860077,2.828173,-7.633306,9.981011,0.237385,5.532493],[1.245041,-8.605868,5.856818,-8.228826,1.611019,-9.467973,-4.081789,-7.532456,-9.904472,0.577122,1.907420,8.920617,-0.484404,2.636412,3.714317]],[[-3.527731,-9.260771,3.457456,4.711258,-9.793485,2.989311,2.898548,-0.591699,-1.387546,-3.489695,-9.265036,1.189174,7.589127,-8.913873,9.651045],[8.169076,-5.943566,-1.848090,4.506482,8.265077,-3.004027,-5.000772,5.123540,8.101165,4.236275,1.550583,7.429871,-8.973778,-8.858255,-0.473993]]], dtype = "float64")#candidate|4612|(12, 2, 15)|const|float64
uop_4613 = relay.log2(const_4612.astype('float64')) # shape=(12, 2, 15)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_4628 = relay.TupleGetItem(func_822_call(), 0)
call_4629 = relay.TupleGetItem(func_824_call(), 0)
uop_4633 = relay.erf(uop_4613.astype('float64')) # shape=(12, 2, 15)
func_1441_call = mod.get_global_var('func_1441')
func_1443_call = mutated_mod.get_global_var('func_1443')
const_4676 = relay.const([0.472308,7.670480,-0.922328,-6.689998,7.747158,-2.302224,-0.010355,-4.061402,9.184171,-8.203944,-4.034134,2.146473,-2.180226,-6.784970,6.879797,3.579622,0.083787,8.914165,1.062195,4.132048,-1.464069,7.735358,4.932745,6.538304,5.146361,2.490694,2.652833,-3.605237,-8.512789,-1.744479,-8.865208,-4.901182,-8.674956,3.575587,7.839024,-1.409116,-6.891383,-8.286054,-2.896857,7.448223,-5.338729,9.296059,9.130679,4.140313,-9.960887,3.235969,8.729280,-5.074898,4.655491,-1.146166,-2.128265,7.763501,-2.422928,-7.909291,7.225109,7.241494,1.539681,-0.561231,-2.416798,-2.346604,7.039704,3.473904,3.562936,-8.173065,-5.093165,-2.390535,-4.990717,3.280187,9.459285,6.748515,2.157434,-3.779657,7.429873,1.686112,-7.860929,7.679576,6.246031,7.948881,-3.970595,-9.620825,-8.614062,-8.177698,-1.494621,0.525693,1.531333,-2.060591,0.709048,5.195975,3.848037,1.905099,-5.063129,7.743396,8.114732,2.484927,9.884763,-8.444965,-4.522023,-7.807486,2.906420,-7.272524,-2.839033,9.741187,-9.312644,-5.607445,-8.320734,7.799697,-3.146395,-5.175154,9.000825,-5.664097,2.653344,-8.991599,5.213124,-7.952398,9.007583,3.431505,-1.055620,5.942735,-4.327257,-5.087279,7.630225,3.817036,5.430802,-0.954739,1.464630,1.244191,3.634927,-1.242192,-4.433353,3.038029,-1.035337,0.310586,-5.881483,7.433059,-7.512135,1.697825,5.934958,-8.976755,-2.913708,-0.235945,3.564362,7.797636,6.270127,3.310591,-6.411571,2.559419,1.432628,8.724588,-8.342425,-3.936708,4.883908,-8.540288,6.113768,1.141100,6.338830,6.085100,2.735557,-4.001031,8.730967,-5.502381,-7.002015,-9.057084,-0.830007,9.329983,-1.034794,5.421948,6.042928,-3.594164,-4.203333,4.411919,3.251220,-6.732086,3.797380,-4.578920,-5.890826,-7.027433,-9.769953,5.453366,3.872071,5.161688,-8.602732,7.622545,3.559781,-2.719344,6.246231,4.712359,7.878831,0.473520,-8.259712,6.458348,-6.449097,-3.345711,-3.655851,7.903401,-4.384374,6.449102,1.733630,7.276368,-0.319856,6.172864,3.380349,2.427402,-2.756688,7.812716,-0.516942,-3.414888,-0.001123,6.344422,-4.461711,-7.754831,-6.768337,7.190996,-5.670572,-9.439120,0.529146,-1.599994,-9.879457,9.797130,-4.047080,-5.294130,8.315798,9.812351,2.232484,-8.032138,0.129555,-6.400355,-4.753615,-8.828938,-7.682595,4.102398,-3.326081,-3.417393,8.609957,4.978258,-0.978712,-6.103276,-6.434133,-7.313998,7.460722,9.327656,0.043015,-1.063936,-0.269960,5.989653,5.605309,-7.645675,-3.824183,-2.712520,-2.160240,-8.619526,7.942401,-5.428140,-7.195922,0.169012,8.110870,8.356017,7.711177,-2.112705,-6.800282,-7.796268,-0.387992,8.175899,-2.987174,6.996814,0.282579,4.120568,-0.194957,9.585591,-0.309289,-5.270732,1.270545,4.375132,7.639892,-5.922731,8.365419,5.012346,8.938758,-1.021544,7.219570,-2.544568,0.934710,6.809116,6.946095,0.081497,-5.665331,9.722392,7.021579,-7.269733,-5.465820,-7.000985,7.042833,-2.002881,-0.360509,-5.680778,-5.728834,-2.724361,4.150461,2.718599,-7.188523,-9.491671,8.294771,0.884079,-2.516931,6.575892,-9.726436,-6.869385,-0.626798,1.587083,-2.731987,-1.592096,-5.224832,-4.318996,-7.450253,8.512056,-5.829488,5.470194,9.119251,-8.740617,-3.494440,8.831014,8.595303,5.307169,-4.695052,-4.581348,-8.155528,8.814701,-8.814944,-9.794777,7.699580,1.631715,-7.040387,6.496231,3.478573,7.810980,-9.653633,2.088877,1.769453,6.104764,8.374661,-7.568322,-2.167122,-3.194749,8.270560,5.960525,-2.491505,1.042073,-8.494432,7.020953,-9.059847,0.567794,3.117831,5.329501,9.242067,-5.136042,-6.384650,6.792471,-3.760089,2.134348,-9.049199,-5.814320,-0.074735,7.730189,6.482023,-3.015890,-1.242095,-5.319752,-8.887642,-2.067579,-5.741869,-3.687089,5.944990,7.065885,-5.432059,1.971427,9.741595,2.641776,8.049342,-1.921647,9.366340,4.422764,2.678468,3.348914,1.364013,0.507815,-3.744007,-9.628399,0.951895,4.601237,7.810915,5.056465,5.051464,-1.326624,6.071754,7.614756,2.780491,-4.960629,-7.024302,6.624148,7.788700,2.159231,-4.565748,8.545610,4.749156,2.352843,-5.713343,1.585386,-1.262376,-0.027955,2.755874,-7.669662,-3.516923,6.179496,0.278249,-6.605750,2.342832,-7.761333,-0.584140,-9.620324,6.678287,-6.540406,-5.183924,0.653845,0.391127,-9.715939,5.291517,6.295418,-9.645434,-5.262715,4.463456,-8.618603,-1.938598,5.160031,7.491410,-0.538656,9.766799,-4.583247,-6.744597,-0.193397,5.532000,-6.445684,-6.043826,7.488595,-3.303274,-5.402331,-4.043016,4.378177,8.998807,2.784157,-5.005693,5.815492,-0.680467,5.071255,6.815050,-5.397439,-6.350136,1.139774,7.959278,3.249369,-2.278745,6.967969,5.836220,9.051079,2.551040,5.996395,-0.229989,-7.265837,-2.359330,-2.798825,7.123709,-3.097824,3.076961,-2.634589,-0.865675,0.489474,1.385422,-6.401441,5.956357,-7.097303,-7.800085,-0.544116,-2.318510,-8.435559,-9.678455,4.618826,9.850487,7.670724,5.744981,8.342259,-8.041518,1.970120,-9.472122,-1.490305,8.615256,-1.947187,-5.204935,2.327126,0.345436,7.712279,-3.747418,-7.962926,-5.386009,-6.833424,3.724164,-6.780700,-0.130141,-1.863226,4.284416,-2.681940,0.968053,-9.321822,9.329965,-1.130116,1.095524,-1.516775,-5.198683,-3.948980,9.266218,4.417636,-5.302770,-3.138109,9.206723,5.566527,4.151324,7.100347,2.753775,-2.583705,9.973944,1.830957,-4.859491,-4.976867,-3.588011,4.542339,-5.787864,8.228420,-7.670103,6.227325,-0.964083,-9.180311,2.097566,-7.192511,-9.105550,8.541952,8.304452,-9.369347,2.955083,5.320107,3.543557,8.681862,9.512740,6.704942,-3.327295,9.777449,7.591265,-5.861015,2.942758,3.669627,6.148157,-3.040136,-7.021894,-4.629024,5.650170,6.963136,-6.697224,-2.908854,4.107626,-2.202146,7.279470,-4.657437,1.183588,5.381184,9.129276,-3.205312,1.269360,-1.641681,-5.114446,1.372456,-1.888906,-4.719918,8.902471,-2.369899,-3.365300,-3.495378,-5.475787,2.986795,0.108346,-2.341628,2.724352,0.645169,2.499645,-5.420937,-3.247727,-3.097494,9.700866,-6.914971,2.724401,8.674056,2.966004,9.259749,4.068548,6.758778,5.417349,3.099419,6.928905,-6.520832,-6.308414,-2.655955,-6.022018,9.534131,4.455089,9.766700,-4.646099,5.218076,-8.404477,6.633833,6.170914,5.188378,1.744186,3.581213,8.185380,3.046136,7.863653,9.845540,-0.553414,0.858403,-9.637391,6.100583,0.583181,-1.360872,5.067868,0.447640,-1.463793,-0.380796,-6.578177,-3.244806,0.496209,6.146188,1.169634,-9.848956,-3.587534,-1.289352,-3.708609,5.630304,-3.410241,-4.809167,-9.326291,-8.153413,-2.571437,-9.855128,-6.609984,-6.487722,-4.679569,-1.133606,-3.626337,-7.163784,-4.009492,7.082569,-8.339761,8.767245,-7.781047,-7.143723,6.372411,-0.903107,2.024112,-5.561702,4.733518,6.358656,2.820948,-5.541352,3.686839,-4.600392,7.390312,-6.630741,-6.124960,-3.413361,0.334246,4.531452,7.573856,-8.089905,-7.428059,-4.359537,-1.811452,-9.320909,-9.984094,6.180535,1.803603,3.196187,-5.860478,-4.880055,1.805475,2.354613,9.685264,-9.639145,-8.791462,-8.638354,6.004719,9.773760,-4.880709,5.808481,-0.695750,-5.983396,-1.655604,-6.358113,-9.642738,-7.909349,5.518287,-4.037648,-0.827644,1.179504,-5.772766,-7.071183,-7.041100,3.687482,8.121441,8.596342,9.613042,7.243323,-4.849595,-7.949990,-9.556299,-0.082877,6.638764,-3.998510,4.806809,-0.235586,0.014914,-2.625906,-3.830592,5.122296,-7.960553,1.333450,-2.093440,-1.627834,-5.573081,8.736920,0.065505,-8.184223,9.870409,-7.141109,-7.439468,-2.044907,9.167081,-2.967630,-6.779941,5.742860,-5.696487,-7.505081,9.083781,1.891258,-6.726766,-8.848645,7.911894,-8.957773,-2.878960,8.647366,3.005873,-8.324671,-9.544758,9.608192,-7.068088,-3.479371,3.330455,-7.055089,1.904231,0.206076,-5.606579,6.192912,-7.494475,-2.555404,-2.484517,-0.895832,7.906324,8.397069,0.411923,-8.304200,4.813916,-2.490905,-8.498741,-8.204793,5.882841,5.113154,7.241818,5.408587,-2.432889,-2.348346,2.864088,-4.217817,-0.792470,5.755694,-0.182108,7.606410,-6.478273,4.176157,-3.152136,-6.644185,9.929260,-2.280896,-0.303532,-3.898426,0.085334,3.577542,2.108028,-3.489651,4.858001,8.139065,8.900360,-6.993300,8.866952,-1.786683,0.298031,8.130542,-2.762193,4.560596,8.937361,6.702847,9.986112,6.571116,6.288487,-0.425365,5.497417,-5.526465,-3.950062,-3.793046,-2.585646,-0.967490,8.707782,-3.005584,1.318152,-0.403401,-2.700889,7.009283,0.424023,-7.600477,-4.058139,5.688988,0.290870,2.356867,-2.195375,9.075203,-6.781371,-1.888909,2.432696,-0.784616,3.943698,5.291625,-7.271336], dtype = "float64")#candidate|4676|(845,)|const|float64
call_4675 = relay.TupleGetItem(func_1441_call(relay.reshape(const_4676.astype('float64'), [13, 65])), 0)
call_4677 = relay.TupleGetItem(func_1443_call(relay.reshape(const_4676.astype('float64'), [13, 65])), 0)
output = relay.Tuple([call_4628,uop_4633,call_4675,const_4676,])
output2 = relay.Tuple([call_4629,uop_4633,call_4677,const_4676,])
func_4679 = relay.Function([], output)
mod['func_4679'] = func_4679
mod = relay.transform.InferType()(mod)
output = func_4679()
func_4680 = relay.Function([], output)
mutated_mod['func_4680'] = func_4680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4684 = relay.TupleGetItem(func_3309_call(), 2)
call_4685 = relay.TupleGetItem(func_3311_call(), 2)
func_4300_call = mod.get_global_var('func_4300')
func_4301_call = mutated_mod.get_global_var('func_4301')
call_4692 = relay.TupleGetItem(func_4300_call(), 0)
call_4693 = relay.TupleGetItem(func_4301_call(), 0)
output = relay.Tuple([call_4684,call_4692,])
output2 = relay.Tuple([call_4685,call_4693,])
func_4724 = relay.Function([], output)
mod['func_4724'] = func_4724
mod = relay.transform.InferType()(mod)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4724_call = mutated_mod.get_global_var('func_4724')
call_4725 = func_4724_call()
output = call_4725
func_4726 = relay.Function([], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_4784 = func_621_call()
call_4785 = func_621_call()
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_4796 = relay.TupleGetItem(func_822_call(), 0)
call_4797 = relay.TupleGetItem(func_824_call(), 0)
output = relay.Tuple([call_4784,call_4796,])
output2 = relay.Tuple([call_4785,call_4797,])
func_4798 = relay.Function([], output)
mod['func_4798'] = func_4798
mod = relay.transform.InferType()(mod)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4798_call = mutated_mod.get_global_var('func_4798')
call_4799 = func_4798_call()
output = call_4799
func_4800 = relay.Function([], output)
mutated_mod['func_4800'] = func_4800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_4844 = func_1021_call()
call_4845 = func_1021_call()
uop_4870 = relay.erf(call_4844.astype('float32')) # shape=(845,)
uop_4872 = relay.erf(call_4845.astype('float32')) # shape=(845,)
bop_4873 = relay.bitwise_xor(uop_4870.astype('int64'), relay.reshape(call_4844.astype('int64'), relay.shape_of(uop_4870))) # shape=(845,)
bop_4876 = relay.bitwise_xor(uop_4872.astype('int64'), relay.reshape(call_4845.astype('int64'), relay.shape_of(uop_4872))) # shape=(845,)
uop_4883 = relay.acos(bop_4873.astype('float64')) # shape=(845,)
uop_4885 = relay.acos(bop_4876.astype('float64')) # shape=(845,)
func_4174_call = mod.get_global_var('func_4174')
func_4177_call = mutated_mod.get_global_var('func_4177')
const_4887 = relay.const([-7.547213,-5.921255,6.827288,-5.264461,-7.527595,-0.078443,6.912411,-4.498808,-6.630201,-4.582737,2.807264,1.902263,-5.655814,-0.972096,6.359176,9.448543,-7.778268,1.987680,-6.326644,9.597212,-6.760696,-7.552619,-1.497211,-7.018024,5.020640,5.513801,9.160238,-8.265918,1.827510,3.385514,-7.390194,2.169585,-2.864107,-7.582160,-7.387530,4.277711,8.756101,-1.400393,-2.440595,-2.725311,-5.273733,-7.870713,5.692518,1.371352,-2.175021,5.906193,4.781101,8.538890,0.374258,-6.671433,-8.412193,-0.744206,6.294964,2.244534,-9.332530,7.518610,7.729917,-4.143360,-5.244104,-4.954465,-0.833448,-5.008712,-9.725732,2.782650,4.488730,8.231311,0.668490,-7.275384,-9.402206,-3.265812,1.456598,4.680928,0.101138,2.986612,5.675465,-2.969715,7.121204,-7.318089,9.442580,0.691571,0.502885,-8.119327,7.215671,-3.160307,-1.795181,-1.746335,-1.194933,-0.414841,8.750353,-8.588733,5.929625,-9.203917,5.039422,-6.119766,-8.085295,3.495388,-9.644047,-8.762584,-5.555569,-1.054857,5.511759,5.056811,-9.267237,6.714896,3.600576,6.958060,6.399553,-0.266470,-4.652802,5.907906,-2.026308,-0.074600,-8.563729,-0.061058,7.646674,5.459697,8.738287,8.896700,-3.086684,6.911817,-3.964796,8.111854,-3.919253,-0.506173,-9.169769,4.120626,-5.287611,-3.363293,-8.850144,-7.502046,3.483317,-7.474598,-5.998937,-1.165749,7.601767,-9.187174,-1.369520,8.324927,1.965590,6.855638,7.077087,3.908859,1.450565,-8.836785,-0.507525,2.280563,-0.564733,4.840996,6.799254,5.248004,1.006238,-3.108098,3.125048,3.176388,0.721973,6.023349,2.043946,7.290371,-9.447719,3.091607,-3.968127,-5.684783,-0.979794,8.186982,5.012466,-3.756362,-7.876548,8.663444,-0.259302,1.402604,3.537514,-7.635907,2.128902,6.857691,3.732677,-9.182877,-4.058809,-1.652021,-4.898821,-6.361868,3.662956,9.446640,-4.963388,9.196404,9.091022,-5.091733,4.316288,0.134660,-4.407141,-6.401793,0.741352,3.427794,5.587828,9.191144,6.416563,-0.414152,-3.913805,5.627946,-9.145398,-1.108031,3.199142,-1.901943,8.844396,4.318412,1.664233,-6.528714,-4.441759,-1.404837,3.942270,-9.326976,4.474840,8.527274,-3.256671,-2.371238,-1.204300,-4.499381,-9.164785,-3.233398,-7.400910,8.792191,-3.742727,6.501014,-6.953604,-1.573473,7.909246,-0.124861,6.796756,-4.761172,-5.019438,-6.114841,1.974503,-6.035138,-6.838525,-0.229506,-7.739545,-6.729075,7.658582,-0.167616,3.393161,6.516553,3.342644,6.719343,-8.615484,-9.830843,0.779649,8.942913,3.049142,-1.687078,-0.578688,-9.528028,-3.180205,0.495245,-9.130979,7.606555,9.811223,-9.831950,4.531564,8.582131,-2.225082,-5.384734,9.249547,-3.668357,-7.886205,-3.601381,8.371519,5.757978,6.210988,2.922568,-2.242823,7.402858,-9.575389,-8.625159,2.372767,0.335734,2.156891,1.590390,8.929234,3.613486,-8.925885,-9.832210,0.008243,-3.228568,1.014505,-6.460882,-0.681282,0.763726,-2.591320,-4.713240,3.290295,3.034529,-3.314825,1.013577,-0.443574,5.553597,-1.388339,8.280237,3.327353,-3.041189,1.943183,8.931586,-6.580336,-7.117088,-4.958914,0.003383,-3.810260,6.088985,9.562446,-5.365629,1.854220,4.217329,-2.715193,5.927579,-2.981663,-7.613070,1.488713,6.815998,-2.628822,-7.601950,3.221382,-9.973263,-4.455499,-3.774895,1.030748,7.785861,-6.195888,-2.638826,8.079663,-3.554160,-7.659269,-9.216621,-5.304021,3.802090,1.485550,-6.705970,0.275578,2.287605,-0.376526,-6.283193,-0.447420,-4.787099,-4.957113,6.643830,4.423169,1.276155,-4.099018,3.768545,4.247653,8.547628,-2.025274,0.801898,0.228138,9.211388,-4.033781,4.574416,4.321050,0.513928,-8.372850,-9.750346,6.910002,2.015623,6.357159,-5.462586,-4.956510,3.082742,4.969911,-8.040817,3.456423,-5.073999,4.865603,8.225890,-1.051245,-5.311393,3.518905,-9.408761,-1.991796,7.266236,-7.777997,3.455711,4.241448,8.037234,4.706271,7.825112,2.245094,8.953998,0.288572,4.210700,6.086601,7.740541,-5.493953,2.979813,7.417274,-2.826155,6.057554,-6.805649,9.270162,1.358468,-8.901330,1.836633,4.724524,-0.194841,2.637949,-6.954281,-5.744058,-5.232236,2.842819,0.338522,-1.640855,-8.411003,4.051389,-5.864356,-8.820439,-9.135720,7.647223,-6.382234,-1.532621,5.122430,-0.289427,-7.424633,7.253142,-9.307806,6.409556,-4.328393,8.817162,6.930801,1.088363,8.405475,0.585738,-4.714347,-0.452410,8.022359,-9.399123,-0.986702,-4.696367,9.932520,4.666822,-4.339184,7.151865,-2.168455,6.040914,-5.599136,-3.529682,-0.873003,9.653431,-4.015123,9.581771,-3.844834,-6.361532,0.972562,6.279850,6.862844,-2.927140,5.212387,-6.905092,-4.168184,2.716351,-0.818699,3.774328,-1.748932,-9.987233,-1.227752,-1.695007,0.981034,2.311867,-6.660131,2.248942,-2.917987,4.105663,3.030809,6.082233,-2.177149,-5.591272,-6.513499,4.231286,-3.293782,7.616806,-2.578827,2.987962,2.957188,-8.573610,-7.933359,8.709324,5.847855,-9.945842,-5.963024,-3.843574,0.260374,9.864544,-7.913848,-2.318318,-4.366500,3.058087,4.113619,-3.713304,-8.794107,-4.433651,-4.004150,5.648817,3.878641,4.391327,1.693160,-3.257562,-4.941432,5.304386,-3.229299,-3.901194,9.798121,6.718529,-7.958918,2.325040,-8.788170,4.281986,9.507652,-4.618051,1.601916,-4.175569,-0.338590,7.966831,8.221029,9.951318,-5.627254,-3.658166,-7.182310,-8.501228,-1.648092,4.897785,-0.416328,2.416800,9.469088,-3.407660,9.034590,9.647687,0.752543,6.472874,8.232823,-7.424394,-6.141671,-1.071751,4.995518,9.056368,-8.591699,-6.082480,-5.373108,4.525361,-7.902991,-8.913853,-0.921912,7.600749,-0.998094,-3.667414,9.791773,1.056754,-3.351637,-1.471846,-9.603220,9.545236,-8.922967,1.230023,4.817541,-3.030540,-9.860558,-8.027545,9.241760,-7.625364,-5.742117,1.843969,-0.726951,3.560281,-3.616625,-9.082844,0.180564,-1.950520,6.991915,-7.774945,-8.237099,-8.782559,5.630780,3.739443,-5.693570,-9.537007,4.794728,0.779111,-9.270145,-7.913331,-8.023524,-6.518536,-2.759593,-6.947112,-8.011794,-2.876097,1.432473,-4.596520,2.914789,3.854106,0.213299,-3.970072,-1.427718,-4.070770,-3.073894,0.268686,6.376249,4.828546,-3.244526,-1.377295,-3.203372,0.902537,9.771662,7.915927,-6.749667,9.803344,-7.134165,-1.523864,6.171066,-3.797549,2.218200,-1.012082,7.437284,-1.855406,4.365488,-0.577410,2.024091,-6.766785,4.799106,-4.325607,-5.616057,-1.707850,8.894187,0.740635,8.542285,2.471650,-5.630261,-8.888515,9.552639,0.240484,0.407802,-5.601872,-2.782145,3.179935,-3.071840,2.508988,2.756901,-8.732790,-5.771846,7.684276,6.171320,-5.981759,5.968696,5.724851,5.089041,5.062870,-7.178327,8.680159,-9.725159,3.264759,-8.715639,-2.516372,-5.444927,4.999414,-6.371723,-1.087981,9.668814,7.419941,5.986817,9.542060,-7.876093,9.619314,-9.830349,2.660772,-5.272142,-1.297962,6.133501,-3.209807,4.304612,-0.019192,6.127092,8.183820,0.564505,9.277874,6.706066,2.723388,2.412961,-3.061579,7.903781,4.248161,-6.274711,2.572674,-0.214107,6.736875,2.477659,4.976370,4.718701,0.982568,-6.432020,8.211233,5.324528,1.258698,-1.727219,-9.936196,1.696170,1.418805,2.882460,4.358258,-4.543831,8.123439,-4.196728,-4.561284,1.070946,-0.245214,-5.193744,1.004014,-1.840451,4.882956,1.761678,-1.474563,8.037130,-4.784558,-4.174618,-2.984253,0.243999,-3.223911,-1.200405,1.778794,-5.765962,9.048044,9.157622,-6.074670,8.511900,-7.579515,-2.228185,9.078119,-8.227541,-4.133968,5.461794,-9.265247,4.409028,-8.872714,7.045802,5.526722,1.480879,0.036484,-2.776069,-8.437325,2.584897,-9.734470,-8.781828,2.976683,1.347592,0.399680,-3.590015,8.722792,2.659635,8.708609,3.567341,-2.066596,-6.128933,-4.235091,-2.999547,-5.611909,8.983061,2.125281,6.536327,8.003377,-3.447130,5.962121,-5.149915,-9.940215,0.993069,-9.174713,0.804710,0.875920,-4.639614,-3.925826,4.233099,-9.701407,7.213540,-6.253459,-6.641842,7.456931,-3.393605,6.356658,-3.387182,-8.839933,-2.312724,-2.786715,-6.495315,8.920493,4.120574,4.667413,-0.133938,-0.741791,9.756614,-9.886434,-9.237492,-5.758387,7.481099,5.910885,-8.514871,1.762964,-0.297193,-3.534400,1.568623,-7.733358,5.881435,0.514394,2.383624,2.915062,-7.623885,0.104582,2.692209,-9.645152,4.636132,-6.157963,6.141736,-0.285136,-8.083497,-7.879810,-9.079616,-6.755554,-3.313969,-4.708597,0.087918,-6.814755,6.268682,-1.801823,-5.163213,2.199694,-3.491034,1.473836,8.839395,-2.588200,-5.855580,-3.527919,2.813566,-7.540307,-5.501470,6.621858,-9.600546,-1.500678,4.410464,-7.249832,3.179656,-3.716814,-0.792235,7.457882,6.981850,4.039034,1.912622,8.154301,-1.336378,-6.787495,-4.154047,7.749208,-3.605617,-7.012360,-2.517748,6.895977,4.394347,-4.253478,4.619364,5.775507,1.759530,-4.536076,-7.139352,2.456243,0.263221,-6.115552,7.107003,-5.447651,3.939482,-0.058699,5.462396,9.829159,3.412674,-7.099593,5.519949,0.085057,-5.413620,5.277863,1.213234,-0.276582,9.235877,-9.664695,-7.860519,-3.873177,-2.279672,1.625471,-6.136924,-4.456138,-7.651011,-6.206831,-8.785569,-0.269236,6.557356,-2.125577,-3.900565,1.924899,9.360452,7.741695,-7.336851,0.978300,-8.509542,-2.380105,6.563612,-7.886995,-5.324889,6.007911,-9.720014,9.584710,-3.301728,8.269418,-7.123876,-4.014501,-9.939697,2.838131,4.474521,3.735529,-8.991747,-3.641993,-8.151909,3.094599,1.418220,-7.441462,6.004223,6.750603,9.506684,-0.754772,2.055927,3.113614,-0.038205,-8.183163,1.986281,6.444216,6.354744,1.150076,-6.272150,-9.924201,9.331215], dtype = "float64")#candidate|4887|(936,)|const|float64
call_4886 = relay.TupleGetItem(func_4174_call(relay.reshape(const_4887.astype('float64'), [6, 12, 13])), 2)
call_4888 = relay.TupleGetItem(func_4177_call(relay.reshape(const_4887.astype('float64'), [6, 12, 13])), 2)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_4889 = relay.TupleGetItem(func_1504_call(), 0)
call_4890 = relay.TupleGetItem(func_1505_call(), 0)
output = relay.Tuple([uop_4883,call_4886,const_4887,call_4889,])
output2 = relay.Tuple([uop_4885,call_4888,const_4887,call_4890,])
func_4893 = relay.Function([], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
output = func_4893()
func_4894 = relay.Function([], output)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3384_call = mod.get_global_var('func_3384')
func_3386_call = mutated_mod.get_global_var('func_3386')
call_4895 = func_3384_call()
call_4896 = func_3384_call()
func_4893_call = mod.get_global_var('func_4893')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_4906 = relay.TupleGetItem(func_4893_call(), 1)
call_4907 = relay.TupleGetItem(func_4894_call(), 1)
uop_4915 = relay.cosh(call_4906.astype('float32')) # shape=(6, 12, 13)
uop_4917 = relay.cosh(call_4907.astype('float32')) # shape=(6, 12, 13)
output = relay.Tuple([call_4895,uop_4915,])
output2 = relay.Tuple([call_4896,uop_4917,])
func_4919 = relay.Function([], output)
mod['func_4919'] = func_4919
mod = relay.transform.InferType()(mod)
mutated_mod['func_4919'] = func_4919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mutated_mod.get_global_var('func_4919')
call_4920 = func_4919_call()
output = call_4920
func_4921 = relay.Function([], output)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4922 = relay.var("var_4922", dtype = "int64", shape = (1, 1, 9))#candidate|4922|(1, 1, 9)|var|int64
const_4923 = relay.const([[[-4,7,-7,2,3,6,-10,8,-10]],[[8,-2,5,-4,1,4,9,-2,-9]],[[-9,10,1,-1,-8,-4,3,-10,4]],[[-1,8,6,-8,1,1,7,-5,2]],[[-3,-8,4,-9,4,2,-5,-8,8]],[[6,-1,6,-10,-2,1,10,8,5]],[[10,9,-3,3,7,-2,7,1,-6]],[[-2,9,9,9,-4,-7,-9,2,10]],[[10,-3,7,1,3,4,8,-6,-9]],[[7,-6,4,-1,-10,-2,6,4,-8]],[[5,6,1,7,-5,6,-10,3,5]],[[1,10,-9,-2,4,-6,-8,4,-9]],[[4,-4,-9,-7,7,-6,7,10,-9]],[[-10,4,6,6,9,7,-5,-3,2]],[[-3,-4,-6,3,-8,-1,-2,5,-4]]], dtype = "int64")#candidate|4923|(15, 1, 9)|const|int64
bop_4924 = relay.logical_xor(var_4922.astype('int64'), const_4923.astype('int64')) # shape=(15, 1, 9)
output = bop_4924
output2 = bop_4924
func_4931 = relay.Function([var_4922,], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
var_4932 = relay.var("var_4932", dtype = "int64", shape = (1, 1, 9))#candidate|4932|(1, 1, 9)|var|int64
output = func_4931(var_4932)
func_4933 = relay.Function([var_4932], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_4982 = func_2502_call()
call_4983 = func_2502_call()
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_4991 = func_1847_call()
call_4992 = func_1847_call()
func_2590_call = mod.get_global_var('func_2590')
func_2594_call = mutated_mod.get_global_var('func_2594')
var_5008 = relay.var("var_5008", dtype = "float64", shape = (48, 4))#candidate|5008|(48, 4)|var|float64
call_5007 = relay.TupleGetItem(func_2590_call(relay.reshape(var_5008.astype('float64'), [2, 6, 16]), relay.reshape(var_5008.astype('float32'), [2, 6, 16]), ), 1)
call_5009 = relay.TupleGetItem(func_2594_call(relay.reshape(var_5008.astype('float64'), [2, 6, 16]), relay.reshape(var_5008.astype('float32'), [2, 6, 16]), ), 1)
uop_5011 = relay.asin(call_4991.astype('float32')) # shape=(6, 7, 4)
uop_5013 = relay.asin(call_4992.astype('float32')) # shape=(6, 7, 4)
func_4062_call = mod.get_global_var('func_4062')
func_4065_call = mutated_mod.get_global_var('func_4065')
const_5026 = relay.const([7,9,-10,-5,8,-1,-10,10,-2,3,7,-6,1,-8,-5,3,8,10,-8,6,7,-10,10,3,6,9,-1,2,-5,1,3,4,5,-1,6,-10,7,-2,-7,-8,-10,-6,-4,-3,7,8,9,3,-3,8,2,-4,5,7,-10,6,-3,-1,1,5,9,9,-3,-1,-9,-10,6,-1,10,2,2,-10,-2,-2,-6,-10,8,2,-2,-2,3,-1,5,-9,-9,-5,-10,-7,-3,-5,6,3,-5,-9,-1,7,2,2,-1,2,-3,-2,-9,7,-8,2,-8,-9,-1,9,9,5,-5,9,-9,9,-8,-7,1,-1,-6,4,10,-6,-10,-3,2,-10,-7,4,-10,10,-5,-4,-10,-5,10,4,-3,-2,-5,1,5,4,-8,9,-5,-5,3,7,8,4,3,7,8,8,4,-1,-1,-2,5,-9,10,1,5,9,-9,-1,-10,-8,-8,2,-6,-3,-7,-5,6,-5,8,-10,-1,6,3,-4,-6,3,-1,-5,7,-3,3,-1,4,5,-9,6,-5,3,2,3,2,-3,1,1,8,-4,-5,-1,-10,-10,-1,-10,1,-4,-1,-4,-1,7,6,1,5,4,2,-7,-2,-1,5,9,3,2,10,-8,-2,-6,6,-10,-5,-8,-2,1,-4,-6,2,-7,-1,-10,3,-6,4,1,9,10,10,3,3,-5,-4,5,8,-2,9,4,1,-6,9,-6,1,-4,-4,-2,-1,-5,7,3,-2,-6,9,2,9,-5,-7,9,-7,-10,8,-9,8,5,3,-3,-3,5,-1,1,7,8,-7,6,8,6,-8,6,-10,-3,9,8,-7,5,10,-7,2,-2,2,4,4,7,-6,9,-6,-8,8,-6,-7,-10,4,3,-3,-6,3,-7,1,-8,-9,-4,-7,7,-8,-10,-3,-3,8,-7,-3,7,5,2,8,-5,-4,1,3,9,-2,-10,1,-3,1,1,-3,9,-10,5,8,-4,-1,6,-4,9,5,-2,5,5,-7,10,-5,-9,-8,3,-6,-10,4,5,4,6,3,4,-3,-4,7,2,2,5,6,8,6,9,8,10,7,-1,-3,-10,6,-7,-7,3,2,1,-9,-10,-1,-7,-2,-2,2,-1,8,1,7,-7,9,-6,-9,9,-10,-2,-9,-9,-7,-1,-4,-6,-6,-6,-7,1,-4,-8,-6,2,-7,6,-5,-6,7,1,-2,4,6,-2,5,-10,2,4,7,3,-10,10,5,-8,-3,-4,8,4,-7,6,2,5,-3,10,-4,-4,4,-10,9,-1,-8,9,2,9,-2,3,10,5,-6,-5,-10,7,-4,4,6,8,-10,-10,-4,2,-4,7,-5,-1,-9,-3,7,4,-8,7,-4,8,5,6,8,3,-5,8,-5,2,7,-7,-5,10,-1,-9,-3,1,-6,-7,-5,6,5,1,-7,5,8,10,5,9,6,-1,7,-9,8,-9,10,-2,-1,6,6,2,3,9,4,4,-6,-1,6,7,-9,7,-2,-4,-4,5,-2,-3,-10,5,-10,6,-3,-10,8,-4,-6,6,-10,4,-3,-3,5,1,8,-9,-6,-6,-1,-9,6,8,4,1,-6,-9,2,-5,-8,2,6,-6,-8,3,-9,-10,8,6,-2,8,-1,-9,9,-10,4,-6,-7,3,5,7,-10,10,3,-10,2,-4,-4,-6,9,-1,9,-3,10,-2,-4,10,5,2,5,-4,-1,-9,-3,10,-10,7,10,6,10,6,6,-7,-5,1,-10,-4,5,-6,8,-10,-8,-8,9,-10,-1,-2,-2,1,8,5,7,9,-5,-10,-10,1,-1,6,-2,-8,3,-1,-9,-2,4,-4,-9,5,-7,-6,9,-5,-6,-10,-7,1,-2,-5,-7,-9,4,-4,-6,6,-5,-10,-2,5,-8,-8,7,5,4,-2,8,-3,-5,-5,5,-6,-8,7,3,-9,10,8,-9,-7,-4,5,10,-4,5,6,3,-2,-10,2,-10,-6,2,-8,-6,5,5,4,8,-8,9,4,-6,4,3,9,1,-4,9,4,-8,-7,-7,-8,-1,9,-2,2,9,-6,-6,-6,2,7,-3,-7,10,-5,5,3,10,5,-6,2,7,-6,2,-7,5,4,-7,-10,-6,-3,10,8,9,-4,2,-8,1,-9,9,7,-4,-1,-1,7,8,10,-7,8,10,10,-7,9,4,2,6,7,-10,10,-7,-1,-6,-3,-7,-10,6,-1,10,-2,9,-8,-3,6,3,-9,2,5,10,2,2,6,-2,10,8,6,6,-4,-1,4,-6,-4,2,-10,-9,10,4,9,5,-8,9,-10,-10,-6,7,-2,-3,-5,8,-7,-8,10,5,8,7,2,-1,-3,-9,9,10,-8,10,10], dtype = "int64")#candidate|5026|(880,)|const|int64
call_5025 = relay.TupleGetItem(func_4062_call(relay.reshape(const_5026.astype('int64'), [5, 16, 11])), 1)
call_5027 = relay.TupleGetItem(func_4065_call(relay.reshape(const_5026.astype('int64'), [5, 16, 11])), 1)
output = relay.Tuple([call_4982,call_5007,var_5008,uop_5011,call_5025,const_5026,])
output2 = relay.Tuple([call_4983,call_5009,var_5008,uop_5013,call_5027,const_5026,])
func_5033 = relay.Function([var_5008,], output)
mod['func_5033'] = func_5033
mod = relay.transform.InferType()(mod)
var_5034 = relay.var("var_5034", dtype = "float64", shape = (48, 4))#candidate|5034|(48, 4)|var|float64
output = func_5033(var_5034)
func_5035 = relay.Function([var_5034], output)
mutated_mod['func_5035'] = func_5035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_5126 = func_2690_call()
call_5127 = func_2690_call()
func_1796_call = mod.get_global_var('func_1796')
func_1798_call = mutated_mod.get_global_var('func_1798')
const_5149 = relay.const([-10,3,-8,-8,-5,8,6,4,8,4,-10,2,10,7,10,-5,10,-4,1,1,10,9,9,3,-5,-9,-4,4,-2,10,-10,4,5,10,1,-3,3,8,-7,9,8,10,8,7,-4,4,4,-8,6,-4,-1,10,8,8,-9,-1,5,-10,-5,5,-4,5,-4,6,3,9,-6,10,8,-1,-6,-5,-4,-4,-2,8,7,-5,-8,-1,10,7,-8,9,-6,3,5,-3,-3,-5,7,4,-7,-2,-9,-6,-2,2,-9,-8,-3,8,-8,-6,9,9,-3,7,1,4,4,-8,2,-8,3,7,6,-6,8,9,-1,3,-1,-5,4,4,-9,6,-4,-2,2,-7,-7,-3,2,4,10,1,-10,6,6,-3,2,-4,-4,5,8,-4,-2,-1,1,-2,-3,-2,9,-8,-8,10,2,6,2,4,3,6,7,4,3,8,-8,10,8,2,10,-6,6,8,5,-10,10,-6,1,4,5,-9,-2,-10,-8,-8,4,3,-8,-10,5,-3,-3,-3,-6,-10,8,-4,10,-3,-6,-9,7,-10,4,-9,-9,-5,1,9,-2,-8,8,-3,4,7,8,-10,-7,-1,-10,2,-5,4,-3,-3,3,7,3,-10,-7,9,-4,-10,9,3,-4,-3,-2,-4,1,3,-1,5,-2,3,5,-3,-10,1,-6,3,1,-10,-2,-9,-4,-6,3,-8,-8,4,-4,-2,2,6,-10,-10,6,6,-4,10,7,2,-9,7,-1,3,-8,2,10,9,-8,3,-9,-1,-3,-9,-8,2,-1,-5,8,10,4,-7,1,-4,-7,2,-5,-6,-5,-9,-8,-2,-8,3,-6,-3,6,-5,-7,5,-6,-9,1,1,2,1,-1,-1,10,8,-9,-6,-2,-10,-10,5,2,-8,9,1,9,3,4,2,8,-2,10,1,-7,-3,8,4,3,-4,-1,-6,-8,-2,-5,-8,2,-1,8,-6,-3,-1,-8,10,6,4,9,-8,2,-1,2,-9,9,-9,-10,-1,4,3,-6,-3,-6,-2,10,-4,-9,7,-6,8,-6,4,3,-10,-7,1,7,10,3,-10,9,5,-1,-1,-1,-2,-7,-5,-2,-9,10,-6,6,-2,-5,3,-10,-4,-1,8,6,-8,-8,5,-8,1,-6,6,-3,2,3,-2,2,-4,10,6,3,9,5,-3,10,-2,3,8,-8,-1,-4,2,10,-2,7,6,-9,3,-3,-10,2,-9,2,10,8,9,-6,-9,-8,-7,-8,-8,10,-3,-10,5,-7,-7,-2,8,-8,-1,1,-1,2,5,10,8,-5,-4,6,-8,-6,1,-2,7,8,-6,-9,-10,-4,-2,10,-6,-1,-1,2,9,4,5,10,8,1,7,-1,-2,3,9,1,8,6,8,-7,-5,6,-9,-3,4,-2,-5,-7,-6,-10,-4,10,3,-9,5,8,1,1,10,-6,9,5,-1,-10,5,-1,3,8,9,-8,7,6,2,7,-3,-4,1,8,-2,-8,-2,-3,-2,10,-2,8,6,9,-1,-10,9,1,-3,-9,-9,1,8,6,-7,-3,-7,-10,5,3,-6,-2,-6,3,2,-4,1,-2,-9,10,5,7,-4,-4,-8,5,-9,7,10,5,-3,10,-2,4,-1,9,8,7,-3,-3,10,-5,4,4,-9,3,8,6,6,-3,-4,2,-6,-6,-9,-2,-6,8,8,-4,-3,-8,10,2,6,4,8,4,4,7,-10,4,7,-5,-8,-1,-4,3,-5,-2,2,2,4,6,-9,-3,1,4,1,-10,-8,9,9,8,7,-6,-7,-9,-4,9,7,2,-9,-5,-6,7,-5,6,8,-10,3,6,-4,-1,1,4,9,-5,2,9,6,-2,2,-6,1,7,-4,5,9,6,5,-9,4,7,3,-6,9,1,5,4,-5,-1,4,-7,-4,-5,1,-7,8,-2,9,-2,-5,2,2,5,4,8,-6,3,6,-10,1,-5,-3,-10,7,1,-6,-2,-8,6,5,-4,-9,-10,4,-5,1,-4,8,-7,7,-7,-4,1,-5,5,-1,10,7,-6,-10,-6,2,5,5,5,3,-4,10,-8,2,-7,-4,6,7,-2,4,9,-9,4,-8,7,10,8,-9,-6,-2,6,10,-7,4,5,9,-4,10,-4,8,2,5,9,-6,2,10,2,-10,8,-8,3,-6,-6,6,5,-1,3,4,-7,9,-8,9,-10,1,-6,8,6,6,-10,-2,-6,9,9,3,6,7,-2,6,-9,7,-5,5,-9,-3,-5,4,-10,-3,10,6,8,2,2,-2,-4,-6,-4,-2,4,-5,-2,10,-4,2,-9,-2,2,8,3,-4,-9,-7,5,-9,7,-8,3,-3,-3,10,1,-10,5,6,-8,-4,5,3,1,9,-5,8,-6,-4,-4,-4,6,10,4,7,8,-2,-3,3,6,-3,-8,9,-10,7,-5,2,5,-3,10,2,3,1,8,1,5,-2,-5,-6,-4,-2,4,-10,-8,9,-5,5,4,4,-1,5,-1,6,-8,4,7,-10,-1,-9,5,4,8,8,7,-5,10,-4,-7,-10,5,8,1,-1,2,9,8,9,-5,10,-10,-10,-5,3,5,10,7,-1,7,1,4,9,5,7,-7,-10,2,-9,-4,-10,6,-6,7,3,1,-5,4,-6,4,-9,-10,7,-10,-10,9,-1,7,9,-7,10,-6,3,-1,-1], dtype = "int16")#candidate|5149|(1008,)|const|int16
call_5148 = relay.TupleGetItem(func_1796_call(relay.reshape(const_5149.astype('int16'), [9, 16, 7])), 0)
call_5150 = relay.TupleGetItem(func_1798_call(relay.reshape(const_5149.astype('int16'), [9, 16, 7])), 0)
func_5033_call = mod.get_global_var('func_5033')
func_5035_call = mutated_mod.get_global_var('func_5035')
var_5166 = relay.var("var_5166", dtype = "float64", shape = (96, 2))#candidate|5166|(96, 2)|var|float64
call_5165 = relay.TupleGetItem(func_5033_call(relay.reshape(var_5166.astype('float64'), [48, 4])), 1)
call_5167 = relay.TupleGetItem(func_5035_call(relay.reshape(var_5166.astype('float64'), [48, 4])), 1)
var_5168 = relay.var("var_5168", dtype = "float64", shape = (96, 2))#candidate|5168|(96, 2)|var|float64
bop_5169 = relay.bitwise_and(var_5166.astype('uint32'), relay.reshape(var_5168.astype('uint32'), relay.shape_of(var_5166))) # shape=(96, 2)
output = relay.Tuple([call_5126,call_5148,const_5149,call_5165,bop_5169,])
output2 = relay.Tuple([call_5127,call_5150,const_5149,call_5167,bop_5169,])
func_5181 = relay.Function([var_5166,var_5168,], output)
mod['func_5181'] = func_5181
mod = relay.transform.InferType()(mod)
var_5182 = relay.var("var_5182", dtype = "float64", shape = (96, 2))#candidate|5182|(96, 2)|var|float64
var_5183 = relay.var("var_5183", dtype = "float64", shape = (96, 2))#candidate|5183|(96, 2)|var|float64
output = func_5181(var_5182,var_5183,)
func_5184 = relay.Function([var_5182,var_5183,], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3896_call = mod.get_global_var('func_3896')
func_3898_call = mutated_mod.get_global_var('func_3898')
call_5192 = relay.TupleGetItem(func_3896_call(), 0)
call_5193 = relay.TupleGetItem(func_3898_call(), 0)
output = relay.Tuple([call_5192,])
output2 = relay.Tuple([call_5193,])
func_5202 = relay.Function([], output)
mod['func_5202'] = func_5202
mod = relay.transform.InferType()(mod)
mutated_mod['func_5202'] = func_5202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5202_call = mutated_mod.get_global_var('func_5202')
call_5203 = func_5202_call()
output = call_5203
func_5204 = relay.Function([], output)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3896_call = mod.get_global_var('func_3896')
func_3898_call = mutated_mod.get_global_var('func_3898')
call_5270 = relay.TupleGetItem(func_3896_call(), 1)
call_5271 = relay.TupleGetItem(func_3898_call(), 1)
func_2590_call = mod.get_global_var('func_2590')
func_2594_call = mutated_mod.get_global_var('func_2594')
var_5281 = relay.var("var_5281", dtype = "float64", shape = (192,))#candidate|5281|(192,)|var|float64
call_5280 = relay.TupleGetItem(func_2590_call(relay.reshape(var_5281.astype('float64'), [2, 6, 16]), relay.reshape(var_5281.astype('float32'), [2, 6, 16]), ), 0)
call_5282 = relay.TupleGetItem(func_2594_call(relay.reshape(var_5281.astype('float64'), [2, 6, 16]), relay.reshape(var_5281.astype('float32'), [2, 6, 16]), ), 0)
func_4893_call = mod.get_global_var('func_4893')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_5292 = relay.TupleGetItem(func_4893_call(), 1)
call_5293 = relay.TupleGetItem(func_4894_call(), 1)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_5296 = relay.TupleGetItem(func_1675_call(), 0)
call_5297 = relay.TupleGetItem(func_1677_call(), 0)
uop_5301 = relay.rsqrt(call_5296.astype('float64')) # shape=(845,)
uop_5303 = relay.rsqrt(call_5297.astype('float64')) # shape=(845,)
func_2590_call = mod.get_global_var('func_2590')
func_2594_call = mutated_mod.get_global_var('func_2594')
call_5311 = relay.TupleGetItem(func_2590_call(relay.reshape(call_5280.astype('float64'), [2, 6, 16]), relay.reshape(call_5280.astype('float32'), [2, 6, 16]), ), 0)
call_5312 = relay.TupleGetItem(func_2594_call(relay.reshape(call_5280.astype('float64'), [2, 6, 16]), relay.reshape(call_5280.astype('float32'), [2, 6, 16]), ), 0)
output = relay.Tuple([call_5270,call_5280,var_5281,call_5292,uop_5301,call_5311,])
output2 = relay.Tuple([call_5271,call_5282,var_5281,call_5293,uop_5303,call_5312,])
func_5339 = relay.Function([var_5281,], output)
mod['func_5339'] = func_5339
mod = relay.transform.InferType()(mod)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5340 = relay.var("var_5340", dtype = "float64", shape = (192,))#candidate|5340|(192,)|var|float64
func_5339_call = mutated_mod.get_global_var('func_5339')
call_5341 = func_5339_call(var_5340)
output = call_5341
func_5342 = relay.Function([var_5340], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3453_call = mod.get_global_var('func_3453')
func_3454_call = mutated_mod.get_global_var('func_3454')
call_5441 = relay.TupleGetItem(func_3453_call(), 0)
call_5442 = relay.TupleGetItem(func_3454_call(), 0)
output = relay.Tuple([call_5441,])
output2 = relay.Tuple([call_5442,])
func_5447 = relay.Function([], output)
mod['func_5447'] = func_5447
mod = relay.transform.InferType()(mod)
output = func_5447()
func_5448 = relay.Function([], output)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5533 = relay.const([[[-7.256436,-6.094354,-3.470922,7.328849,4.355743,3.445870,-6.044439,5.663135]],[[-4.413275,9.409320,5.413182,-0.211262,-6.572780,-6.543541,-8.601368,8.963849]],[[3.347925,0.197706,-0.840711,5.650515,3.623244,2.797552,3.578830,-9.076831]]], dtype = "float32")#candidate|5533|(3, 1, 8)|const|float32
uop_5534 = relay.erf(const_5533.astype('float32')) # shape=(3, 1, 8)
func_4062_call = mod.get_global_var('func_4062')
func_4065_call = mutated_mod.get_global_var('func_4065')
var_5539 = relay.var("var_5539", dtype = "int64", shape = (880,))#candidate|5539|(880,)|var|int64
call_5538 = relay.TupleGetItem(func_4062_call(relay.reshape(var_5539.astype('int64'), [5, 16, 11])), 3)
call_5540 = relay.TupleGetItem(func_4065_call(relay.reshape(var_5539.astype('int64'), [5, 16, 11])), 3)
output = relay.Tuple([uop_5534,call_5538,var_5539,])
output2 = relay.Tuple([uop_5534,call_5540,var_5539,])
func_5542 = relay.Function([var_5539,], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
var_5543 = relay.var("var_5543", dtype = "int64", shape = (880,))#candidate|5543|(880,)|var|int64
output = func_5542(var_5543)
func_5544 = relay.Function([var_5543], output)
mutated_mod['func_5544'] = func_5544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mod.get_global_var('func_4318')
func_4319_call = mutated_mod.get_global_var('func_4319')
call_5601 = relay.TupleGetItem(func_4318_call(), 0)
call_5602 = relay.TupleGetItem(func_4319_call(), 0)
func_2258_call = mod.get_global_var('func_2258')
func_2259_call = mutated_mod.get_global_var('func_2259')
call_5609 = relay.TupleGetItem(func_2258_call(), 0)
call_5610 = relay.TupleGetItem(func_2259_call(), 0)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_5620 = relay.TupleGetItem(func_2953_call(), 0)
call_5621 = relay.TupleGetItem(func_2955_call(), 0)
func_4300_call = mod.get_global_var('func_4300')
func_4301_call = mutated_mod.get_global_var('func_4301')
call_5623 = relay.TupleGetItem(func_4300_call(), 0)
call_5624 = relay.TupleGetItem(func_4301_call(), 0)
output = relay.Tuple([call_5601,call_5609,call_5620,call_5623,])
output2 = relay.Tuple([call_5602,call_5610,call_5621,call_5624,])
func_5630 = relay.Function([], output)
mod['func_5630'] = func_5630
mod = relay.transform.InferType()(mod)
mutated_mod['func_5630'] = func_5630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5630_call = mutated_mod.get_global_var('func_5630')
call_5631 = func_5630_call()
output = call_5631
func_5632 = relay.Function([], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2522_call = mod.get_global_var('func_2522')
func_2524_call = mutated_mod.get_global_var('func_2524')
call_5643 = func_2522_call()
call_5644 = func_2522_call()
uop_5664 = relay.atanh(call_5643.astype('float32')) # shape=(6, 12, 13)
uop_5666 = relay.atanh(call_5644.astype('float32')) # shape=(6, 12, 13)
output = relay.Tuple([uop_5664,])
output2 = relay.Tuple([uop_5666,])
func_5677 = relay.Function([], output)
mod['func_5677'] = func_5677
mod = relay.transform.InferType()(mod)
output = func_5677()
func_5678 = relay.Function([], output)
mutated_mod['func_5678'] = func_5678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3896_call = mod.get_global_var('func_3896')
func_3898_call = mutated_mod.get_global_var('func_3898')
call_5716 = relay.TupleGetItem(func_3896_call(), 1)
call_5717 = relay.TupleGetItem(func_3898_call(), 1)
func_1281_call = mod.get_global_var('func_1281')
func_1283_call = mutated_mod.get_global_var('func_1283')
call_5733 = relay.TupleGetItem(func_1281_call(), 1)
call_5734 = relay.TupleGetItem(func_1283_call(), 1)
func_3213_call = mod.get_global_var('func_3213')
func_3216_call = mutated_mod.get_global_var('func_3216')
const_5738 = relay.const([[4.338542,-4.932039,-3.727914,4.667592],[7.525503,-0.676018,3.025831,-3.610549],[6.929037,6.989743,-2.846366,-1.584386],[0.572569,-8.583143,2.039391,-2.377774],[-1.445411,-4.877139,8.515901,9.696851],[8.793813,4.720388,-6.008450,-8.389235],[8.224968,-7.525020,1.743141,7.446177],[-3.141630,-8.361693,-7.688370,6.166514],[8.518742,0.008985,8.099755,5.629036],[-9.518352,1.834150,-6.363173,-1.757721],[-6.956781,-6.617133,-5.076814,-0.218219],[7.328571,-7.114711,-5.791629,-4.046744],[2.062368,-9.698955,5.612791,3.263034],[-9.427589,-1.422106,9.802293,2.946372],[2.577717,8.694018,8.108727,-8.278267],[-6.753463,7.471784,-5.967225,-5.783267],[5.390720,3.780999,-2.169916,3.090667],[2.950503,7.879680,-4.978614,-3.918182],[-9.472431,8.737755,-3.160267,6.249054],[-9.379532,6.357767,-0.517631,-2.522980],[-3.924769,-7.879757,9.546162,-2.198337],[8.146537,9.369770,-1.439752,8.635419],[1.134826,-1.800912,8.650036,-6.020528],[-4.478369,-7.032707,3.599126,1.872636],[-7.433285,-3.540613,5.422310,0.140253],[-9.273610,-2.907723,-6.807683,-6.610983],[4.573569,8.051726,-3.109286,-9.651746],[0.405689,7.880334,-3.499470,2.158872]], dtype = "float32")#candidate|5738|(28, 4)|const|float32
call_5737 = relay.TupleGetItem(func_3213_call(relay.reshape(const_5738.astype('float32'), [1, 7, 16])), 2)
call_5739 = relay.TupleGetItem(func_3216_call(relay.reshape(const_5738.astype('float32'), [1, 7, 16])), 2)
output = relay.Tuple([call_5716,call_5733,call_5737,const_5738,])
output2 = relay.Tuple([call_5717,call_5734,call_5739,const_5738,])
func_5744 = relay.Function([], output)
mod['func_5744'] = func_5744
mod = relay.transform.InferType()(mod)
output = func_5744()
func_5745 = relay.Function([], output)
mutated_mod['func_5745'] = func_5745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_5748 = func_621_call()
call_5749 = func_621_call()
output = relay.Tuple([call_5748,])
output2 = relay.Tuple([call_5749,])
func_5782 = relay.Function([], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
mutated_mod['func_5782'] = func_5782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5782_call = mutated_mod.get_global_var('func_5782')
call_5783 = func_5782_call()
output = call_5783
func_5784 = relay.Function([], output)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4300_call = mod.get_global_var('func_4300')
func_4301_call = mutated_mod.get_global_var('func_4301')
call_5803 = relay.TupleGetItem(func_4300_call(), 1)
call_5804 = relay.TupleGetItem(func_4301_call(), 1)
func_3799_call = mod.get_global_var('func_3799')
func_3800_call = mutated_mod.get_global_var('func_3800')
call_5824 = relay.TupleGetItem(func_3799_call(), 0)
call_5825 = relay.TupleGetItem(func_3800_call(), 0)
output = relay.Tuple([call_5803,call_5824,])
output2 = relay.Tuple([call_5804,call_5825,])
func_5832 = relay.Function([], output)
mod['func_5832'] = func_5832
mod = relay.transform.InferType()(mod)
mutated_mod['func_5832'] = func_5832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5832_call = mutated_mod.get_global_var('func_5832')
call_5833 = func_5832_call()
output = call_5833
func_5834 = relay.Function([], output)
mutated_mod['func_5834'] = func_5834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5862 = relay.var("var_5862", dtype = "float64", shape = (8, 3, 5))#candidate|5862|(8, 3, 5)|var|float64
const_5863 = relay.const([[[5.889293,-2.175560,5.961399,-1.160796,-3.878608],[5.734506,-7.350571,-3.292541,-9.971005,9.788591],[5.543617,6.542506,-9.896542,8.657294,9.339506]],[[1.317564,-8.090904,-6.496832,8.905902,3.373336],[-0.091361,3.196293,0.558730,-6.014323,6.890845],[4.438853,-9.505712,-1.162483,5.438669,-5.429343]],[[-5.192126,-8.045949,-9.370554,-0.036689,6.649301],[0.127494,-9.122173,1.377311,-2.997185,8.809006],[1.090665,-3.686605,0.833023,6.906452,-2.518631]],[[4.861406,2.992772,-2.268178,-3.469505,2.053140],[-0.941275,5.299712,-1.547502,5.463745,4.684530],[-5.865159,7.343701,-2.797129,9.304710,9.256487]],[[4.322230,-7.505348,-2.294036,-9.747204,8.413883],[9.166714,-2.814159,2.099449,2.612565,0.602992],[6.934360,8.278016,-1.895486,-9.612557,3.269878]],[[-7.332177,-5.911542,1.512932,4.468197,-6.461364],[-2.921221,-4.423048,-0.842045,4.867072,-4.487511],[-8.993598,-2.283860,-2.187371,4.933008,5.244839]],[[7.724030,-3.725506,-5.606629,-1.721124,1.562047],[5.880394,-2.228468,0.311826,4.536064,-3.556809],[9.212017,2.607154,7.615903,9.822165,-4.269481]],[[8.999591,-3.249983,-6.707854,-3.111755,-1.732832],[5.819971,5.990029,5.675988,-0.262857,3.610065],[9.600545,-7.225764,-0.006104,-1.879446,-9.320659]]], dtype = "float64")#candidate|5863|(8, 3, 5)|const|float64
bop_5864 = relay.multiply(var_5862.astype('float64'), relay.reshape(const_5863.astype('float64'), relay.shape_of(var_5862))) # shape=(8, 3, 5)
func_3752_call = mod.get_global_var('func_3752')
func_3753_call = mutated_mod.get_global_var('func_3753')
call_5868 = relay.TupleGetItem(func_3752_call(), 3)
call_5869 = relay.TupleGetItem(func_3753_call(), 3)
output = relay.Tuple([bop_5864,call_5868,])
output2 = relay.Tuple([bop_5864,call_5869,])
func_5872 = relay.Function([var_5862,], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
var_5873 = relay.var("var_5873", dtype = "float64", shape = (8, 3, 5))#candidate|5873|(8, 3, 5)|var|float64
output = func_5872(var_5873)
func_5874 = relay.Function([var_5873], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3384_call = mod.get_global_var('func_3384')
func_3386_call = mutated_mod.get_global_var('func_3386')
call_6019 = func_3384_call()
call_6020 = func_3384_call()
func_4464_call = mod.get_global_var('func_4464')
func_4465_call = mutated_mod.get_global_var('func_4465')
call_6024 = func_4464_call()
call_6025 = func_4464_call()
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_6031 = relay.TupleGetItem(func_943_call(), 0)
call_6032 = relay.TupleGetItem(func_945_call(), 0)
func_3752_call = mod.get_global_var('func_3752')
func_3753_call = mutated_mod.get_global_var('func_3753')
call_6064 = relay.TupleGetItem(func_3752_call(), 0)
call_6065 = relay.TupleGetItem(func_3753_call(), 0)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_6085 = func_1847_call()
call_6086 = func_1847_call()
output = relay.Tuple([call_6019,call_6024,call_6031,call_6064,call_6085,])
output2 = relay.Tuple([call_6020,call_6025,call_6032,call_6065,call_6086,])
func_6092 = relay.Function([], output)
mod['func_6092'] = func_6092
mod = relay.transform.InferType()(mod)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mutated_mod.get_global_var('func_6092')
call_6093 = func_6092_call()
output = call_6093
func_6094 = relay.Function([], output)
mutated_mod['func_6094'] = func_6094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mod.get_global_var('func_4893')
func_4894_call = mutated_mod.get_global_var('func_4894')
call_6106 = relay.TupleGetItem(func_4893_call(), 0)
call_6107 = relay.TupleGetItem(func_4894_call(), 0)
func_4318_call = mod.get_global_var('func_4318')
func_4319_call = mutated_mod.get_global_var('func_4319')
call_6110 = relay.TupleGetItem(func_4318_call(), 0)
call_6111 = relay.TupleGetItem(func_4319_call(), 0)
func_5782_call = mod.get_global_var('func_5782')
func_5784_call = mutated_mod.get_global_var('func_5784')
call_6133 = relay.TupleGetItem(func_5782_call(), 0)
call_6134 = relay.TupleGetItem(func_5784_call(), 0)
func_2071_call = mod.get_global_var('func_2071')
func_2075_call = mutated_mod.get_global_var('func_2075')
const_6138 = relay.const([[-0.827890,2.898695],[5.240621,-2.180886],[-5.450828,3.691336],[-6.324285,-3.470168],[6.742547,8.230266],[3.491257,-5.857858],[-9.700961,-8.049181],[-5.078527,7.014940],[5.642919,-3.475752],[9.281486,0.574719],[1.290492,-1.032820],[9.682339,2.360492],[5.243486,8.819487],[-7.485297,-2.156285],[9.025488,4.040438],[-4.071695,-4.585689],[1.686987,-9.400407],[0.162248,3.739319],[6.018151,-2.393715],[-0.909843,7.903196],[2.747755,-8.466748],[-7.776386,-3.692699],[-4.690080,-0.490232],[4.578103,-4.055228],[6.572058,9.321840],[-4.775296,2.213471],[-8.761573,-0.994535],[-9.875620,-5.611733],[9.194833,1.421055],[4.705461,7.385794],[0.460190,-3.402693],[2.891371,9.939425],[-3.331823,6.034791],[5.967846,-8.671636],[9.438445,-0.665090],[-5.972739,0.871482],[-1.294028,-3.068687],[-6.623289,1.432971],[7.876640,-9.783253],[-6.116735,9.698972],[4.356785,-5.402005],[-5.660152,-8.957365],[5.146494,6.315042],[-8.653479,7.923662],[8.847683,-8.231626],[-1.893322,8.241943],[-4.711276,-1.762234],[2.781829,7.660027],[-5.983272,-4.055309],[-1.348974,-0.999547],[0.805157,9.027404],[-7.132988,-7.310028],[-4.692925,-7.800221],[-9.085790,-7.887032],[3.396969,-0.888904],[8.056457,6.058317],[5.696075,-7.038179],[5.480900,6.841061],[-8.766179,-9.714694],[-2.103994,-8.194612],[0.663386,2.820476],[-2.619062,-5.657384],[-9.081776,-5.549248],[-7.714238,9.763186],[4.730125,9.159416],[6.813733,-5.196627],[-7.409219,-4.250825],[4.465833,8.799291],[6.323895,6.282345],[4.208706,-5.583023],[-7.141843,8.271243],[-6.926139,-5.875684],[-0.759895,-6.264960],[-3.791043,3.515850],[8.450401,2.984269],[-7.738584,-9.292560],[5.338819,0.874290],[1.110734,-7.441866],[-2.628875,1.625896],[6.196876,9.003821],[9.402505,4.268450],[-1.949621,-3.613318],[-3.656956,-5.698281],[2.404051,2.126115],[-6.608456,8.444352],[-7.190691,1.934496],[6.457186,7.933217],[-1.110789,-6.596986],[5.101134,-7.658507],[-5.368868,0.542369],[-8.654726,6.352908],[-0.851544,6.784230],[6.619883,3.982885],[-9.492364,-9.502765],[1.431051,-2.877298],[-1.552683,6.955092],[-9.883671,8.816009],[6.064769,-8.753534],[1.006830,9.659880],[-0.729672,-7.957858],[6.675727,8.728557],[1.119121,6.165203],[7.101996,-3.770990],[-5.579088,2.618048],[4.222619,9.888480],[-4.202104,9.644673],[6.621748,6.540375],[9.107016,6.191884],[6.315037,-3.154889],[-5.596042,9.173963],[-9.855281,-5.019435],[-3.641985,0.964225],[-7.468117,-6.228124],[-6.036636,-2.082537],[-4.361214,2.225125],[-9.604960,-5.912610],[2.116609,-9.353715],[-6.660411,-2.095611],[3.053136,4.259519],[-1.190376,-2.252337],[6.446220,8.887820],[-6.167947,0.796936],[-8.440764,-7.881652],[5.410432,-8.810530],[5.066885,-0.764194],[8.149222,-7.843043],[0.409728,-0.585859],[4.857871,0.371626],[0.117122,-9.363853],[-1.171046,-5.411025],[2.298990,3.938242],[1.109163,9.534552],[-8.802878,-4.632753],[-0.330056,9.949319],[-1.143468,-3.004984],[-3.156799,-1.077544],[-9.794853,8.340313],[-7.187177,8.054675],[-5.997397,-2.769395],[5.030305,-5.175840],[9.945835,8.401186],[-5.926028,-0.971786],[-9.872031,-2.759098],[-9.174027,-4.702631],[8.494067,6.622818],[7.781362,9.265959],[-1.964327,3.810549],[-9.734225,2.892106],[-2.165753,8.342240],[0.368482,8.799111],[-8.026021,-9.805109],[-8.241950,-3.479645],[-2.023309,3.866951],[-0.354452,5.475452],[-7.292868,-9.610917],[3.693292,-9.065000],[-9.716833,-6.980916],[6.441887,8.639473],[3.794479,-1.222868],[-8.170822,3.904428],[1.038467,-9.614147],[-7.498874,-9.384213],[-8.535570,9.122566],[-6.550766,6.062334],[4.708825,0.095990],[4.666749,0.093306],[-0.475806,-2.392828],[-9.716449,-6.121444],[-3.438626,5.599137],[-2.804664,9.524415],[5.775410,-4.929102],[0.125744,-5.334920],[0.316109,0.368818],[4.626672,7.332655],[2.431178,-2.821663],[-5.867507,2.628097],[-1.823062,6.455231],[-1.060931,9.217862],[0.874212,8.394598],[-3.129307,6.950418],[2.920066,-7.364421],[5.301834,7.296326],[-9.717456,-5.680523],[-9.111356,6.706204],[3.026353,3.142589],[-4.098952,3.539450],[3.544952,-8.706632],[-7.920119,9.117137],[-7.257662,-7.588402],[-1.458842,-8.708757],[-8.295911,1.556226],[-6.025976,9.120024],[1.106617,1.805289],[6.684966,5.176596],[-0.427382,-4.611663],[2.949885,-0.272440]], dtype = "float64")#candidate|6138|(196, 2)|const|float64
call_6137 = relay.TupleGetItem(func_2071_call(relay.reshape(const_6138.astype('float64'), [14, 2, 14]), relay.reshape(const_6138.astype('float64'), [14, 2, 14]), relay.reshape(call_6106.astype('float64'), [845,]), ), 1)
call_6139 = relay.TupleGetItem(func_2075_call(relay.reshape(const_6138.astype('float64'), [14, 2, 14]), relay.reshape(const_6138.astype('float64'), [14, 2, 14]), relay.reshape(call_6106.astype('float64'), [845,]), ), 1)
output = relay.Tuple([call_6106,call_6110,call_6133,call_6137,const_6138,])
output2 = relay.Tuple([call_6107,call_6111,call_6134,call_6139,const_6138,])
func_6142 = relay.Function([], output)
mod['func_6142'] = func_6142
mod = relay.transform.InferType()(mod)
output = func_6142()
func_6143 = relay.Function([], output)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1572_call = mod.get_global_var('func_1572')
func_1574_call = mutated_mod.get_global_var('func_1574')
call_6240 = func_1572_call()
call_6241 = func_1572_call()
output = call_6240
output2 = call_6241
func_6242 = relay.Function([], output)
mod['func_6242'] = func_6242
mod = relay.transform.InferType()(mod)
output = func_6242()
func_6243 = relay.Function([], output)
mutated_mod['func_6243'] = func_6243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2259_call = mutated_mod.get_global_var('func_2259')
call_6285 = relay.TupleGetItem(func_2258_call(), 0)
call_6286 = relay.TupleGetItem(func_2259_call(), 0)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_6289 = func_4193_call()
call_6290 = func_4193_call()
func_5677_call = mod.get_global_var('func_5677')
func_5678_call = mutated_mod.get_global_var('func_5678')
call_6295 = relay.TupleGetItem(func_5677_call(), 0)
call_6296 = relay.TupleGetItem(func_5678_call(), 0)
uop_6297 = relay.atan(call_6285.astype('float32')) # shape=(845,)
uop_6299 = relay.atan(call_6286.astype('float32')) # shape=(845,)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_6308 = relay.TupleGetItem(func_3309_call(), 0)
call_6309 = relay.TupleGetItem(func_3311_call(), 0)
output = relay.Tuple([call_6289,call_6295,uop_6297,call_6308,])
output2 = relay.Tuple([call_6290,call_6296,uop_6299,call_6309,])
func_6313 = relay.Function([], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6314 = func_6313_call()
output = call_6314
func_6315 = relay.Function([], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_822_call = mod.get_global_var('func_822')
func_824_call = mutated_mod.get_global_var('func_824')
call_6356 = relay.TupleGetItem(func_822_call(), 3)
call_6357 = relay.TupleGetItem(func_824_call(), 3)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_6358 = func_1021_call()
call_6359 = func_1021_call()
uop_6373 = relay.asin(call_6358.astype('float64')) # shape=(845,)
uop_6375 = relay.asin(call_6359.astype('float64')) # shape=(845,)
bop_6382 = relay.logical_xor(uop_6373.astype('uint32'), relay.reshape(call_6358.astype('uint32'), relay.shape_of(uop_6373))) # shape=(845,)
bop_6385 = relay.logical_xor(uop_6375.astype('uint32'), relay.reshape(call_6359.astype('uint32'), relay.shape_of(uop_6375))) # shape=(845,)
var_6393 = relay.var("var_6393", dtype = "float64", shape = (845,))#candidate|6393|(845,)|var|float64
bop_6394 = relay.right_shift(call_6358.astype('int64'), relay.reshape(var_6393.astype('int64'), relay.shape_of(call_6358))) # shape=(845,)
bop_6397 = relay.right_shift(call_6359.astype('int64'), relay.reshape(var_6393.astype('int64'), relay.shape_of(call_6359))) # shape=(845,)
func_1796_call = mod.get_global_var('func_1796')
func_1798_call = mutated_mod.get_global_var('func_1798')
const_6404 = relay.const([6,-3,1,-7,-5,5,10,3,-10,-10,-5,-6,-2,-5,2,3,-8,-4,-6,-7,-6,8,-8,-5,6,-3,-4,9,6,4,3,-10,2,1,-5,-10,-1,-10,1,-9,1,-7,3,-8,7,-8,9,-3,-2,-10,-3,1,-1,2,4,-9,3,7,-10,-4,-9,1,-10,1,-9,10,-3,3,-10,6,-6,1,10,5,7,9,2,5,4,-6,7,4,-7,-4,2,4,-6,5,-3,6,-10,5,6,-7,-6,-3,1,2,4,8,9,-2,-7,1,-9,-9,5,-2,5,-1,-4,-5,2,6,5,-10,6,-9,10,2,-8,-8,-8,-4,-2,6,-9,-3,-8,9,-3,-8,-2,9,-9,-9,3,-2,10,5,-10,9,2,4,-1,5,-1,-10,-2,-3,1,9,-1,-6,-4,-4,10,8,5,3,-3,9,-5,-5,9,7,-1,-7,-7,3,2,10,1,5,7,2,-10,4,-2,-2,8,-3,8,-1,-3,-8,4,-6,-3,-8,2,-2,1,-10,6,3,3,-5,8,-6,4,3,-10,-10,-3,-5,8,-9,-3,1,-1,5,2,5,-10,10,-4,2,3,9,2,-3,1,-1,-3,6,-9,-9,3,-3,-4,-6,6,-4,-2,7,9,4,3,6,10,-3,-3,3,6,-10,9,-3,-6,5,2,-1,1,-2,-3,-2,10,-3,8,8,4,-8,-6,9,10,9,4,-4,5,9,6,-10,-9,-9,3,-4,-7,-9,3,-2,-1,-6,1,10,-8,4,4,-10,9,1,9,8,-8,-7,-4,-4,2,-10,10,8,10,-3,8,-7,-5,10,2,1,4,2,9,-4,6,5,-5,5,7,-8,-3,3,-3,-3,-10,6,-2,-3,-4,5,3,7,3,3,-10,-4,-6,-1,7,-4,8,-10,-8,-5,-3,2,10,-4,-3,-2,8,8,-10,-2,4,-3,-8,7,9,-10,-4,-8,4,-7,9,-2,3,2,10,2,2,8,-2,9,9,-4,2,7,-6,-2,4,-3,-3,-2,-8,7,-2,3,-2,-5,-10,5,-5,-7,-7,-5,5,9,2,1,8,10,-4,3,-5,-8,1,6,-6,-4,-4,-5,8,6,-5,-10,4,-10,4,6,-6,-4,-8,1,-5,-8,-8,5,6,6,8,-2,-5,-3,-10,8,-3,-2,-3,6,10,7,8,-5,-5,8,6,-8,-6,2,9,-1,4,-5,6,5,9,5,-5,-4,1,6,1,10,4,-3,-2,7,-8,3,6,-2,-3,4,9,-10,1,-8,1,-2,-10,10,-9,-7,1,-3,-1,6,5,-4,10,-5,-2,-3,-10,10,10,-3,-10,8,-2,2,9,9,-6,8,-9,-6,5,5,-4,7,-6,-5,-1,-10,7,10,8,9,4,-1,-8,1,-6,-3,1,6,-2,-6,7,10,7,-9,-9,2,-4,4,10,9,4,-8,-4,4,7,-1,-9,-8,10,3,6,3,-8,5,-4,6,8,5,-10,10,-3,4,1,-8,1,-10,-9,-10,2,7,-2,6,-6,-4,9,8,6,-4,3,-7,5,5,2,1,1,-10,10,4,6,-6,3,-9,-3,-5,-6,5,2,5,5,8,5,-10,-5,-3,-2,9,1,4,10,-4,-4,8,-9,1,-1,2,8,-1,6,-7,-2,-6,4,-9,-9,-1,-2,-8,1,6,10,-8,-2,3,-10,8,7,-7,2,-5,8,4,6,4,-3,1,-10,2,-5,-2,7,9,4,5,1,-8,8,3,-6,-3,-7,10,1,-1,-7,3,3,-10,-7,2,6,9,2,8,-8,6,-3,-5,8,-3,1,3,-8,-10,5,-5,3,-5,-7,-4,-3,-2,-7,-3,5,4,-1,-9,-7,6,-4,-4,-6,-4,1,-9,8,-5,8,-2,3,8,-10,-3,-9,-10,1,-2,3,1,3,10,-9,8,2,-10,-5,-9,7,-3,-4,-9,-7,1,8,5,9,-5,-10,-8,3,7,8,3,9,-2,-1,7,6,7,1,-5,7,1,-3,10,-4,-3,3,8,4,-7,4,2,-4,-2,-2,5,7,7,-2,-3,3,1,-2,10,-10,8,2,4,10,1,2,-1,4,6,-6,4,-7,-3,-3,-4,1,7,-3,-9,6,4,10,7,-5,9,2,-9,8,7,-9,4,-2,-3,-1,-7,-4,5,8,5,-2,7,8,4,-9,9,1,-8,-4,9,3,2,-1,-9,-6,-4,-1,-4,-8,8,1,-5,-9,-9,-4,-8,-8,-2,7,8,10,-2,5,-3,-8,10,6,-6,-10,10,5,1,-10,10,6,3,-4,-10,-2,-1,4,2,9,-7,-2,5,8,-9,-8,-8,-9,-4,-5,-3,5,-9,-7,1,8,-9,6,8,-7,-4,7,1,4,-8,-10,-8,-7,6,-10,4,-4,2,4,-7,6,7,-5,9,6,8,10,-10,7,-3,-4,8,-9,-9,-8,-5,8,-10,-4,4,-8,-5,10,-7,3,5,8,-5,-2,1,1,-8,2,3,5,-4,-2,1,-6,1,10,-7,7,-5,-6,-3,-6,9,-7,2,10,6,6,-3,6,2,-10,-4,2,-8,-8,7,-1,2,1,-1,1,-2,-3,-1,-1,-6,-3,9,-10,6,-9,-3,-1,8,8,-2,7,8,-1,10,2,-6,-6,2,4,-7,-1,5,3,2,5,2,8,-1,-9,-4,8,-9,4,4], dtype = "int16")#candidate|6404|(1008,)|const|int16
call_6403 = relay.TupleGetItem(func_1796_call(relay.reshape(const_6404.astype('int16'), [9, 16, 7])), 0)
call_6405 = relay.TupleGetItem(func_1798_call(relay.reshape(const_6404.astype('int16'), [9, 16, 7])), 0)
output = relay.Tuple([call_6356,bop_6382,bop_6394,call_6403,const_6404,])
output2 = relay.Tuple([call_6357,bop_6385,bop_6397,call_6405,const_6404,])
func_6411 = relay.Function([var_6393,], output)
mod['func_6411'] = func_6411
mod = relay.transform.InferType()(mod)
mutated_mod['func_6411'] = func_6411
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6412 = relay.var("var_6412", dtype = "float64", shape = (845,))#candidate|6412|(845,)|var|float64
func_6411_call = mutated_mod.get_global_var('func_6411')
call_6413 = func_6411_call(var_6412)
output = call_6413
func_6414 = relay.Function([var_6412], output)
mutated_mod['func_6414'] = func_6414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6438 = relay.TupleGetItem(func_6313_call(), 1)
call_6439 = relay.TupleGetItem(func_6315_call(), 1)
func_4919_call = mod.get_global_var('func_4919')
func_4921_call = mutated_mod.get_global_var('func_4921')
call_6448 = relay.TupleGetItem(func_4919_call(), 1)
call_6449 = relay.TupleGetItem(func_4921_call(), 1)
func_2522_call = mod.get_global_var('func_2522')
func_2524_call = mutated_mod.get_global_var('func_2524')
call_6454 = func_2522_call()
call_6455 = func_2522_call()
output = relay.Tuple([call_6438,call_6448,call_6454,])
output2 = relay.Tuple([call_6439,call_6449,call_6455,])
func_6456 = relay.Function([], output)
mod['func_6456'] = func_6456
mod = relay.transform.InferType()(mod)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6456_call = mutated_mod.get_global_var('func_6456')
call_6457 = func_6456_call()
output = call_6457
func_6458 = relay.Function([], output)
mutated_mod['func_6458'] = func_6458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2259_call = mutated_mod.get_global_var('func_2259')
call_6476 = relay.TupleGetItem(func_2258_call(), 0)
call_6477 = relay.TupleGetItem(func_2259_call(), 0)
output = call_6476
output2 = call_6477
func_6492 = relay.Function([], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
output = func_6492()
func_6493 = relay.Function([], output)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_6547 = func_1847_call()
call_6548 = func_1847_call()
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_6552 = func_4193_call()
call_6553 = func_4193_call()
output = relay.Tuple([call_6547,call_6552,])
output2 = relay.Tuple([call_6548,call_6553,])
func_6563 = relay.Function([], output)
mod['func_6563'] = func_6563
mod = relay.transform.InferType()(mod)
output = func_6563()
func_6564 = relay.Function([], output)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4724_call = mod.get_global_var('func_4724')
func_4726_call = mutated_mod.get_global_var('func_4726')
call_6606 = relay.TupleGetItem(func_4724_call(), 1)
call_6607 = relay.TupleGetItem(func_4726_call(), 1)
output = relay.Tuple([call_6606,])
output2 = relay.Tuple([call_6607,])
func_6624 = relay.Function([], output)
mod['func_6624'] = func_6624
mod = relay.transform.InferType()(mod)
output = func_6624()
func_6625 = relay.Function([], output)
mutated_mod['func_6625'] = func_6625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_6632 = func_1847_call()
call_6633 = func_1847_call()
output = call_6632
output2 = call_6633
func_6651 = relay.Function([], output)
mod['func_6651'] = func_6651
mod = relay.transform.InferType()(mod)
mutated_mod['func_6651'] = func_6651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6651_call = mutated_mod.get_global_var('func_6651')
call_6652 = func_6651_call()
output = call_6652
func_6653 = relay.Function([], output)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3453_call = mod.get_global_var('func_3453')
func_3454_call = mutated_mod.get_global_var('func_3454')
call_6657 = relay.TupleGetItem(func_3453_call(), 1)
call_6658 = relay.TupleGetItem(func_3454_call(), 1)
output = relay.Tuple([call_6657,])
output2 = relay.Tuple([call_6658,])
func_6667 = relay.Function([], output)
mod['func_6667'] = func_6667
mod = relay.transform.InferType()(mod)
output = func_6667()
func_6668 = relay.Function([], output)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_6675 = relay.TupleGetItem(func_1675_call(), 0)
call_6676 = relay.TupleGetItem(func_1677_call(), 0)
uop_6688 = relay.acosh(call_6675.astype('float64')) # shape=(845,)
uop_6690 = relay.acosh(call_6676.astype('float64')) # shape=(845,)
output = uop_6688
output2 = uop_6690
func_6697 = relay.Function([], output)
mod['func_6697'] = func_6697
mod = relay.transform.InferType()(mod)
mutated_mod['func_6697'] = func_6697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6697_call = mutated_mod.get_global_var('func_6697')
call_6698 = func_6697_call()
output = call_6698
func_6699 = relay.Function([], output)
mutated_mod['func_6699'] = func_6699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3007_call = mod.get_global_var('func_3007')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_6700 = relay.TupleGetItem(func_3007_call(), 0)
call_6701 = relay.TupleGetItem(func_3009_call(), 0)
output = relay.Tuple([call_6700,])
output2 = relay.Tuple([call_6701,])
func_6704 = relay.Function([], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
mutated_mod['func_6704'] = func_6704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mutated_mod.get_global_var('func_6704')
call_6705 = func_6704_call()
output = call_6705
func_6706 = relay.Function([], output)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5447_call = mod.get_global_var('func_5447')
func_5448_call = mutated_mod.get_global_var('func_5448')
call_6725 = relay.TupleGetItem(func_5447_call(), 0)
call_6726 = relay.TupleGetItem(func_5448_call(), 0)
output = call_6725
output2 = call_6726
func_6734 = relay.Function([], output)
mod['func_6734'] = func_6734
mod = relay.transform.InferType()(mod)
mutated_mod['func_6734'] = func_6734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mutated_mod.get_global_var('func_6734')
call_6735 = func_6734_call()
output = call_6735
func_6736 = relay.Function([], output)
mutated_mod['func_6736'] = func_6736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_6761 = relay.TupleGetItem(func_2953_call(), 0)
call_6762 = relay.TupleGetItem(func_2955_call(), 0)
func_3843_call = mod.get_global_var('func_3843')
func_3845_call = mutated_mod.get_global_var('func_3845')
const_6768 = relay.const([0.466444,6.996038,0.208883,-3.960678,2.939554,6.301936,5.924914,-6.788958,5.064745,9.190607,1.914208,3.304305,-8.924780,3.859037,7.538207,-8.492699,-0.956502,9.051352,0.442232,-8.430117,-6.298029,2.043955,6.153232,4.104087,-5.878123,-2.358448,-3.164786,8.602253,9.638117,-4.684356,-0.975774,5.892764,-2.553579,3.604667,-8.409796,-4.272862,4.661322,8.546835,5.137351,6.558821,7.669879,0.745986,5.281388,-7.056746,1.956173,8.936445,6.556153,-8.952791,7.743698,9.943174,7.005284,0.623353,-3.968467,1.522978,1.688911,4.861357,4.942521,-0.147939,3.975280,4.085325,5.912846,-3.933862,2.936491,-4.342813,-6.087124,-8.058382,7.393223,-2.141407,-9.929383,-4.456512,-0.017928,-6.409309,-5.019035,0.225307,0.644112,7.577241,1.080355,7.626837,-5.226989,-1.391403,-9.038575,0.468624,-9.083396,4.420731,7.465368,-6.202331,2.624419,4.952689,-1.899289,1.626805,8.453360,-7.255447,-1.066338,4.098790,-3.438910,-7.974245,6.785614,-1.267248,2.899530,-0.056361,6.171611,0.121171,-1.467509,6.322000,2.244466,-9.628210,4.776703,9.117676,7.703616,-9.190871,-0.289201,-4.888414,-0.173942,0.629331,-0.871339,2.322413,8.855642,-9.033571,1.796686,-4.746471,-4.218612,-6.147782,3.891937,1.587979,-1.363852,-4.840837,-7.588353,-9.674235,-6.661483,5.509219,-4.852862,-5.197619,6.825365,6.194090,-1.296514,5.420052,-2.874151,-2.203254,7.823688,-7.994347,-0.771053,3.468005,1.062950,3.110918,8.155641,-8.009214,5.894662,9.824179,0.994593,-5.486190,-7.104630,-6.598608,2.035597,0.255056,7.909985,-4.624885,-3.395494,-3.044754,-4.685696,4.783988,-5.178552,4.017070,4.922632,-7.964598,9.111977,-4.143066,-8.605663,-2.260303,-8.807529,4.376892,-8.804228,3.260545,6.027533,-3.480113,7.148581,2.276508,-8.484329,-6.302826,-8.242648,-6.288398,6.010302,5.492883,-3.605718,7.470620,1.737495,-5.136327,-6.804149,1.523712,9.185552,6.074704,5.148711,6.764704,7.838122,1.334844,-7.516262,9.197792,5.871701,-2.025663,2.511734,-9.541527,-8.177151,-1.338192,-4.551447,-6.290288,4.935513,-9.685608,-5.237142,-6.493932,8.976847,9.738168,-4.168419,3.619774,-8.531981,1.439403,7.651594,-1.288084,-0.542532,4.201779,-1.636249,-0.989894,1.298927,1.469527,-1.062784,-9.270833,2.548036,-7.026482,-6.460242,2.991516,2.614617,-3.285416,-3.061424,-7.859355,4.782644,5.545756,5.786126,-7.444488,3.169462,-1.006362,4.803202,3.915845,7.686242,-2.997299,-0.669555,-5.657523,-7.926084,-7.705187,4.737004,0.647783,-2.157288,9.591223,0.095189,3.451385,2.617057,-9.397973,-1.625538,3.325068,9.610347,0.295914,-5.403144,1.247869,6.638828,5.400546,-8.601251,2.815173,-7.097650,-4.871043,-9.685623,-5.618368,-4.005095,6.592706,-5.525377,-4.683054,-2.801312,7.437514,0.999755,-3.626906,7.146922,2.025870,-5.830162,-3.081441,4.992791,-2.056134,-1.210598,5.482668,-1.785382,1.217811,-4.698438,-4.458749,-0.654549,8.873036,0.304821,-5.999019,6.182994,-7.596707,-7.779963,-5.588135,-4.116861,-7.901448,7.351530,7.089796,-6.163675,1.170034,-3.432408,4.845076,6.795556,-6.292624,-9.941135,5.743090,-1.472451,-1.344030,3.750676,7.710682,0.414926,-4.249854,8.613405,-3.161937,4.672997,-5.048376,-0.430193,-6.667526,-5.718856,-2.142672,5.993081,3.280358,9.171377,-8.553980,-8.895584,-1.956211,4.946756,3.592733,-7.045061,-8.888439,4.885940,0.279753,5.040140,5.949807,-4.452113,-0.918124,-6.504729,-4.140449,3.293406,-1.735597,-5.481202,-7.417108,6.736491,-8.694044,4.179316,5.535662,-7.319933,-6.018097,-8.673008,1.161591,1.840486,-4.897743,1.916676,-1.176940,-0.872666,1.906862,6.417717,-8.105094,9.947717,6.053961,-3.041296,3.696060,7.552580,-3.120762,6.016990,3.906639,6.379876,-3.880348,-0.663124,-4.891757,3.823479,3.750946,6.108226,-5.241771,-6.497309,9.363497,-9.852384,4.635838,1.341508,-1.179558,-5.492445,4.362342,7.428593,-0.098401,-9.308602,-6.694654,-7.272829,6.318609,-8.364246,-6.040606,8.209760,1.655136,-2.680349,3.512458,-4.766806,8.457023,6.672206,-4.170791,-1.006088,-5.406264,4.350396,4.825250,-2.356577,4.022693,-7.100194,-3.460286,-3.683700,9.837844,-8.181554,-1.398730,-3.484417,2.542894,-4.553483,0.010837,0.033688,-9.273528,-7.124672,-7.737617,-9.177052,5.538393,-3.718190,-0.088798,1.884800,2.700761,-9.704216,-6.493051,5.908223,1.379210,-2.401620,8.481993,-3.084370,-5.968667,5.053690,-2.880250,2.894174,-9.702146,7.452945,-3.695046,-6.674841,-3.853421,5.321466,-0.744539,9.345986,-0.214557,-1.124142,1.494166,6.806675,9.704698,-0.159458,-4.113448,-3.333909,2.866101,3.448120,-5.103184,-2.591172,8.681689,-4.272616,-1.174639,7.888591,8.836581,-8.730464,-7.906356,-9.311171,-5.851426,5.683933,-8.633132,4.999995,4.009913,9.307158,1.587138,3.992393,7.331329,-2.231722,5.405977,9.697336,2.017568,0.950284,1.847243,8.200838,-4.430879,9.139462,-2.331294,4.033300,2.008608,-2.302762,-4.847471,5.570535,2.260767,7.811685,3.390646,1.519519,2.874196,5.346017,-7.154598,-2.122313,6.888864,-8.930136,5.982374,-7.104701,-0.489274,8.998082,-8.756527,3.162443,-3.048571,-8.101479,8.808072,-2.792488,-9.007519,0.591833,-1.120809,0.975650,5.305440,-3.028494,1.546228,-4.635820,3.319702,-9.271119,-9.993899,1.718167,0.027850,7.964535,6.868149,1.869955,3.544365,-0.122542,-8.760128,8.105741,7.362333,-2.690237,-1.492400,5.061221,-1.484794,7.906123,9.445105,8.982382,-1.214977,3.416213,-4.535837,2.715027,2.835043,-4.989380,-2.906865,-0.953204,4.996994,-0.867774,1.324472,6.222696,-3.321586,-1.509626,6.293260,-9.462844,-6.154000,9.645692,-4.418458,-4.250125,-0.438555,6.903589,9.945978,5.979100,9.781228,-6.578418,1.584808,-8.651653,9.677419,3.251459,0.260249,-9.262771,1.063885,-8.119582,6.077626,2.102144,6.416342,-4.622676,-0.245164,5.411370,4.961675,-6.011860,5.002936,-0.111716,-5.685793,1.176633,5.180389,0.509168,9.518183,-4.240589,9.364543,0.426427,8.405608,1.400296,8.887203,9.035355,-8.063491,6.767537,-7.466295,-1.808947,4.839653,-2.363455,-1.380079,7.469845,-6.579516,-0.479066,0.950864,-4.706496,7.862586,6.004105,2.399131,0.490729,-9.630422,7.429118,5.125321,9.883787,-0.673483,1.132820,-6.458197,-3.493779,3.795337,-9.230229,-7.337780,5.724762,-3.586631,-0.772598,3.350949,8.016513,-3.614258,-9.266795,3.421675,-3.406672,-1.051172,-2.219146,-6.193192,0.520294,4.905560,4.954430,-7.310795,3.360046,6.167181,-3.823759,2.548053,-6.669070,4.708549,5.746773,5.763429,-7.140794,-5.818155,-7.454296,5.633707,-8.333694,5.563466,4.036766,-0.136586,-1.737613,-2.991146,-8.330367,-4.185598,-4.846620,2.941954,-5.890203,1.787252,-9.298120,9.526898,9.076943,-1.818409,7.706956,9.118032,-6.533791,5.013071,7.579589,9.728330,-6.346950,-2.779614,5.082306,-7.700424,-8.159834,-3.160565,3.252192,2.366665,6.324061,-1.571818,8.561023,3.114006,3.571467,-9.293047,-2.480956,-7.842723,-6.018072,6.337052,6.534614,5.992618,-3.425348,-2.551922,-3.435339,-5.762800,-2.147641,-5.568642,-4.232263,5.032789,1.186007,-0.510647,8.758388,-1.260017,1.231261,-3.944979,5.863403,6.908644,9.909805,-1.275378,6.611794,5.903485,6.735853,-2.410008,7.124391,-8.928486,2.701088,6.663955,7.564830,-3.543500,5.729039,9.685602,7.666546,-6.246084,2.135803,-8.351029,0.053321,-8.187302,4.499003,-1.743416,-0.464554,6.246774,1.185241,-4.258181,-2.767297,-9.280816,9.546504,0.846729,-4.640490,-0.245142,-8.080333,-3.266269,-5.569098,-9.609433,3.737577,6.232315,0.560748,-6.534891,7.702221,-2.292003,0.848880,1.065802,-7.447078,1.750553,0.293111,-2.156593,-0.922031,4.122513,9.147952,0.501382,6.411661,-8.660222,7.302183,5.087990,-2.633989,6.113547,-4.828482,-8.002512,4.141191,6.334092,8.203050,-6.802892,8.258189,9.060429,7.050184,9.822171,8.885424,-9.045503,-0.559216,0.087161,9.688588,6.934225,2.538257,-0.629829,6.905921,7.964038,-6.751652,8.972279,-8.065004,-7.094819,7.419392,-8.478097,-5.510796,0.572903,-8.232671,0.041292,1.409023,-3.027238,-9.400227,1.940041,-7.393087,9.652062,-2.698982,-0.686245,4.488680,5.358140,8.037317,8.390854,-3.058794,-8.763419,9.174804,-7.451208,-7.474477,1.274695,5.122159,2.828015,-9.429268,-0.695070,3.567831,9.631347,-6.363759,5.909095,-4.525933,5.442014,0.616601,0.479911,5.687375,-6.896100,-8.200455,-3.890636,-7.525910,-7.713637,-9.027265,-2.186606,7.197728,-3.990247,-8.217908,3.368752,-5.463839,5.947696,6.281511,-2.058460,-2.581876,-5.354873,1.051588,-6.364748,-1.713363,-0.528339,-5.673020,-0.089126,-7.820589,6.676562,-2.202297,5.458127,0.144072,6.750757,8.881136,9.587474,-8.225633,7.903848,-1.441966,8.294732,-2.676585,-2.450673,-3.549415,-0.360454,1.682413,4.088502,5.047872,2.314694,0.504666,1.885209,-0.469389,-2.966788,-9.020034,-3.120358,-0.962419,-0.680035,4.725083,5.701812,3.152840,-6.327761,1.968646,4.971437,-5.483770,1.986055,5.597643,3.027786,7.736856,-2.424669,7.391709,-8.731558,-0.033604,-9.773231,8.981683,-9.906333,4.852937,-8.795258,-7.016916,8.586813,-7.178384,9.898519,1.620532,5.797371,-0.368079,5.095308,1.171209,1.162062,-1.250473,8.362253,1.148683,-9.619727,3.551583,8.694453,-3.206654,-2.588069,0.973764,-0.793068,-9.598670,9.702898,3.813089,-7.917748,5.146804,5.752592,5.714508,0.775201,-2.984822,-2.511393,-9.260381,3.767042,-7.768941,0.089013,9.744159,8.903874,-7.315811,0.512744,8.664901,-4.807869,3.983653,-7.446654,-8.099665,-5.601256,1.611163,-5.984294,-9.304151,4.693894,-0.259215,4.852075,-0.994129,8.632460,0.649812,6.418987,4.884863,5.932184,4.406323,1.698936,-5.211116,-0.950896,-5.249920,0.262558,-8.363791,-4.449635,-8.403617,3.620695,-1.034248,5.058916,4.524337,-7.340517,-6.471845,3.025168,1.414184,5.533630,-9.336449,4.134421,3.054019,-4.864800,3.846639,-3.045625,-1.546385,1.901373,-2.745410,-3.384723,1.879771,-6.548848,7.756759,7.856108,7.095467,-6.079139,-7.990357,-2.763502,-8.334240,5.707885,2.419517,5.351494,8.683046,-6.779536,2.258234,1.400534,6.487495,-0.248719,-2.976732,5.083846,2.068597,0.121890,-2.710796,6.787102,-6.487146,-9.803225,-9.503978,7.610371,-3.252281,8.226241,1.857021,-4.769193,3.638905,2.710873,-2.106065,8.850142,-4.056358,1.026492,-4.927134,3.799758,-7.693571,1.993649,-7.115679,-8.035590,-4.880294,-5.946622,8.348566,0.378835,-2.348229,-3.314815,5.027994,-5.632009,-2.522621,-8.952399,-3.127524,-6.610293,-1.591510,1.910180,-7.273657,5.554382,6.731033,-1.406446,8.199412,4.747495,-4.322650,-2.722429,8.876826,4.049385,1.809504,9.609658,-2.213159,-4.980887,5.538314,0.277319,4.328705,-8.095563,-3.497872,3.960558,-0.487537,0.276949,-7.569898,4.362892,-9.916306,-6.966955,-9.231714,7.388001,9.404003,6.293066,2.424394,-5.844843,-6.555216,-8.708538,-3.245377,-3.928337,-2.498542,7.009709,2.538578,5.597573,-1.794364,6.572676,3.977999,6.254469,-5.423609,1.215556,2.236751,5.636748,-3.906181,-8.322537,1.437666,-8.984870,3.173520,7.678446,-3.081261,-1.854967,-6.960571,3.979411,0.008938,-1.314731,-4.402453,2.312173,7.590977,4.940574,-3.052587,-6.902107,-1.759365,-8.403488,2.897851,-4.133050,-3.113149,-6.792997,5.856040,-7.914365,-8.035246,-5.184955,-4.827767,-5.613063,-0.833556,1.504051,7.314370,3.785750,-8.758152,7.556641,6.156148,0.754777,0.354860,-3.652905,-8.555798,9.326105,0.185098,8.767624,3.647678,1.787333,2.883105,0.201641,7.564457,-0.810230,-7.446329,8.631695,0.192959,7.313614,-5.971812,6.893579,-6.097640,3.693031,5.365087,6.661935,-4.615200,-7.348598,9.952604,-8.773436,-1.095080,3.438992,3.393205,-7.429734,9.324107,6.444157,2.163109,-1.297185,9.701281,9.076934,-2.493276,8.831019,-3.726990,-2.881025,9.392249,-2.634328,5.089234,-1.716705,-5.499159,-2.918238,-8.942842,3.927783,-0.853829,1.553438,7.915661,-1.514806,9.830645,-2.931933,-9.892352,-1.123037,7.335491,4.018962,-2.007965,3.069427,4.962330,-2.651872,3.078491,5.090687,-6.483008,5.644124,-4.093718,4.834534,-0.709064,6.843262,6.600681,-8.032579,-4.731268,5.005524,-5.861743,0.175644,-1.142468,5.896464,6.141100,-3.793454,-7.511816,5.064505,7.017657,-6.543510,-1.149036,-8.103656,1.991848,-3.270386,6.046180,-3.768038,0.140687,4.725901,-7.831767,5.918063,7.412825,1.285923,-8.752136,-0.461373,5.270191,7.801622,-3.134684,8.705801,-1.047758,4.157523,-2.786262,1.780985,4.778679,9.106041,-7.618167,8.167471,-2.283319,4.697379,8.124482,9.936724,-1.998873,-6.716975,-0.469739,0.612731,-1.901812,-8.214608,-8.366633,-1.499652,-2.733616,9.234915,-7.501474,7.331106,9.033014,5.876076,-0.506532,-5.099887,8.707531,-3.375048,-0.021838,4.375999,-1.265197,7.123122,1.026597,8.455098,-9.152566,-0.624387,4.683617,0.192948,-4.233414,-4.533075,8.377814,-8.365199,4.501699,8.696209,-2.607869,-9.368984,-7.095808,3.176042,4.114490,-8.184985,-2.526834,3.776093,-7.966083,-8.441497,5.220971,8.905826,9.944558,-5.444460,-1.867799,5.728893,-2.523384,-4.208750,5.489351,-3.105179,-2.375961,-1.968720,-6.082271,-4.239923,6.485818,2.272555,5.571757,3.230936,-9.233723,-3.620838,0.447638,9.934542,9.928337,1.498162,-8.489052,-2.418750,-4.795041,6.008221,-1.040431,6.533047,-7.395754,-0.579293,0.273770,2.630318,6.125536,9.756676,0.151703,-9.180308,-3.990163,6.977068,-2.265184,0.921544,1.430875,7.931432,-2.557698,7.633156,5.136984,6.393257,6.620107,7.952487,-3.486879,-1.149653,1.612669,-3.228430,-4.175430,-6.341751,7.497269,6.561558,-0.323762,-8.909707,9.283660,-8.428115,-3.294055,4.040636,-4.713068,-1.908347,3.450138,-1.579901,-5.178967,-7.847773,-4.020393,6.127505,-1.078997,-0.379345,2.980778,-6.468923,-8.654383,4.207857,-9.907297,7.677392,2.227036,7.022013,-4.179552,-1.756917,-6.649912,8.447322,8.262855,1.308707,8.386269,4.425436,-9.643022,7.080691,-7.892741,2.902991,5.755614,8.745524,6.159978,-8.802569,-4.363907,-8.913261,6.025007,8.700383,-6.793235,3.979682,5.214461,-1.694244,-6.088891,-9.923502,-5.740261,3.212149,-8.807946,5.235434,6.086843,6.884262,-3.080034,-1.017474,8.675916,-2.019768,-3.744706,7.106637,-3.778868,-8.610722,3.904345,8.841224,-9.934319,-7.912957,6.627567,-2.148199,4.319451,-5.805347,2.712098,2.568096,4.958549,-2.628095,3.389970,3.577165,0.979680,-1.476744,-9.144735,9.001632,-9.020552,-9.567417,4.377197,-7.439867,-3.615679,-7.643381,-9.268981,5.385223,4.804063,6.909676,9.013501,9.650326,-4.937285,-3.644441,4.576875,-8.386899,6.668259,-6.096484,9.223721,4.072352,6.266440,-7.375967,4.268723,5.669481,6.435893,-4.813979,3.777776,-4.729715,0.004823,9.638515,-5.403825,6.808102,-6.717937,-6.019833,-0.412693,4.604644,3.375098,2.162631,7.133829,4.037237,-8.702503,-9.017909,3.387871,9.168727,8.832822,-4.612897,-5.450482,9.365160,2.302742,9.221396,6.115143,1.458476,-4.051378,1.080074,-6.600938,-0.846249,-9.530121,-3.919994,5.442429,6.127388,-0.334318,-5.856971,2.451778,6.350548,3.641730,-0.318193,-5.597885,7.280874,1.239562,-2.817828,-7.223437,-9.752095,3.862470,-8.495270,-3.177916,7.497626,6.981859,-7.374973,9.601135,5.133166,-4.608825,1.347860,-6.489349,3.896546,-2.256671,4.879970,-1.557046,3.684796,-1.369565,9.770968,4.582064,-2.142347,-9.824162,6.705765,-7.942685,2.574786,0.281327,2.606794,0.356863,2.471833,5.141609,-5.442576,-0.101968,3.994212,-8.782083,3.175344,-9.277751,-9.233664,-0.782224,-2.857005,7.287930,5.846240,3.931118,-1.659285,2.773823,-1.207019,-4.556846,6.792241,-5.227014,5.343456,9.733900,9.247296,-2.820689,-7.806916,8.992286,-4.400831,-0.204269,1.816897,-5.635463,9.535976,2.699185,-1.466627,-8.837771,-2.630102,2.013505,0.700420,0.521588,-1.260222,4.647178,-2.642734,1.251838,7.146948,8.934680,7.308302,-4.554247,7.153595,-7.691649,4.751868,9.336261,-6.067963,2.352059,8.436656,-6.615653,3.337223,3.211575,-7.054040,-1.745005,-4.133623,8.516340,7.866574,-3.388071,9.692883,0.340520,-9.671541,7.262635,5.483308,-9.809507,2.872158,-9.960768,-9.910373,-0.310219,-6.992937,-5.739380,-8.040953,5.931879,4.434053,0.211253,-5.175973,1.527037,6.276276,1.827045,-5.239288,-0.273722,-4.880606,-7.755655,-1.987695,-6.776910,8.680071,9.402831,-1.980230,1.733546,6.120616,-0.978416,4.998683,-5.469242,-8.284382,9.776709,0.839846,-2.370404,-1.530783,0.052423,-1.976849,-9.310168,-8.681960,3.052784,-0.803822,2.555415,4.602028,2.928678,4.638934,-5.399449,-0.246882,-6.576046,4.456024,7.403007,5.068475,-1.161341,-2.572951,6.824326,-6.402824,6.256259,-7.293610,-7.811450,5.165932,-7.173684,2.411914,-3.013728,0.068754,-8.145892,-1.264988,-7.669313,-2.901516,8.499806,2.002353,1.118357,0.445357,-9.520092,3.333850,-4.350031,2.696624,-6.811901,8.065639,-2.375110,4.659312,9.021267,-5.283169,-7.802691,-5.492331,-3.866595,-8.820850,8.089146,-2.621803,3.023694,1.922627,-9.524772,2.857087,8.056221,-6.645074,8.119350,-4.275021,5.338122,-8.816495,6.735987,8.111796,1.401814,-1.723938,6.255759,-2.709266,-9.652118,-7.426101,-0.081485,2.924410,-8.981172,0.600255,-1.188921,-0.666237,8.725469,1.715122,9.982567,-4.896591,-3.587230,-2.379885,2.666614,7.289728,-9.532203,0.049880,9.661041,-5.025413,-9.347505,2.161973,-6.517932,-2.788692,-1.772552,-9.599851,-0.208168,-3.300091,5.850016,-1.395747,-5.319239,5.556798,-2.632780,1.437411,0.983650,4.233253,-0.478622,-3.281583,0.681697,-2.008136,-3.251051,1.928548,7.489204,-1.313222,-7.683972,1.881594,-4.711643,6.779511,3.466925,-8.070689,0.987877,-1.160433,-9.255317,-3.431628,1.862224,8.030015,7.826157,-3.473676,1.938849,-4.090314,-1.864963,-4.623918,-8.921727,0.154992,-8.689986,-7.396706,7.488273,9.104699,-8.509856,9.468043,-0.285537,5.761574,-9.618978,-2.165077,-8.440655,6.585133,2.537280,6.405055,-3.483713,3.299852,-6.205174,-4.785908,8.129043,0.899948,7.490043,3.321908,-5.179845,3.494974,1.822032,-3.851232,-6.814021,-8.017271,4.184007,2.300825,-8.164813,-3.705606,0.025502,-7.974947,9.291735,-7.730144,8.858512,-5.718781,-9.765928,-6.375838,-3.859461,-1.379524,-1.488347,-1.225759,-7.232243,1.958100,-3.503768,-4.296148,-8.397168,-6.236804,-2.287757,-5.893718,3.771254,0.343511,1.630504,2.850942,-4.026863,-9.446716,-6.531714,-6.861009,3.278989,9.850812,-1.754927,9.064449,-3.921140,-8.461691,-7.484142,-9.412185,1.736020,8.511127,0.853351,-1.152592,-0.580621,8.949128,9.815600,-9.308218,2.222441,9.284584,7.764269,7.190144,-7.802077,-0.751886,-0.243315,-1.250829,0.522980,-7.294970,-5.224437,-8.221925,-1.888620,9.964905,-7.222433,-6.405606,9.888338,1.636005], dtype = "float64")#candidate|6768|(1848,)|const|float64
call_6767 = relay.TupleGetItem(func_3843_call(relay.reshape(const_6768.astype('float64'), [11, 14, 12])), 0)
call_6769 = relay.TupleGetItem(func_3845_call(relay.reshape(const_6768.astype('float64'), [11, 14, 12])), 0)
output = relay.Tuple([call_6761,call_6767,const_6768,])
output2 = relay.Tuple([call_6762,call_6769,const_6768,])
func_6799 = relay.Function([], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
output = func_6799()
func_6800 = relay.Function([], output)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4300_call = mod.get_global_var('func_4300')
func_4301_call = mutated_mod.get_global_var('func_4301')
call_6867 = relay.TupleGetItem(func_4300_call(), 1)
call_6868 = relay.TupleGetItem(func_4301_call(), 1)
func_5782_call = mod.get_global_var('func_5782')
func_5784_call = mutated_mod.get_global_var('func_5784')
call_6879 = relay.TupleGetItem(func_5782_call(), 0)
call_6880 = relay.TupleGetItem(func_5784_call(), 0)
output = relay.Tuple([call_6867,call_6879,])
output2 = relay.Tuple([call_6868,call_6880,])
func_6882 = relay.Function([], output)
mod['func_6882'] = func_6882
mod = relay.transform.InferType()(mod)
mutated_mod['func_6882'] = func_6882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6882_call = mutated_mod.get_global_var('func_6882')
call_6883 = func_6882_call()
output = call_6883
func_6884 = relay.Function([], output)
mutated_mod['func_6884'] = func_6884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3752_call = mod.get_global_var('func_3752')
func_3753_call = mutated_mod.get_global_var('func_3753')
call_6917 = relay.TupleGetItem(func_3752_call(), 2)
call_6918 = relay.TupleGetItem(func_3753_call(), 2)
output = relay.Tuple([call_6917,])
output2 = relay.Tuple([call_6918,])
func_6935 = relay.Function([], output)
mod['func_6935'] = func_6935
mod = relay.transform.InferType()(mod)
output = func_6935()
func_6936 = relay.Function([], output)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1572_call = mod.get_global_var('func_1572')
func_1574_call = mutated_mod.get_global_var('func_1574')
call_6945 = func_1572_call()
call_6946 = func_1572_call()
uop_6947 = relay.log2(call_6945.astype('float32')) # shape=(6, 12, 13)
uop_6949 = relay.log2(call_6946.astype('float32')) # shape=(6, 12, 13)
bop_6950 = relay.right_shift(call_6945.astype('int64'), relay.reshape(uop_6947.astype('int64'), relay.shape_of(call_6945))) # shape=(6, 12, 13)
bop_6953 = relay.right_shift(call_6946.astype('int64'), relay.reshape(uop_6949.astype('int64'), relay.shape_of(call_6946))) # shape=(6, 12, 13)
func_2953_call = mod.get_global_var('func_2953')
func_2955_call = mutated_mod.get_global_var('func_2955')
call_6956 = relay.TupleGetItem(func_2953_call(), 0)
call_6957 = relay.TupleGetItem(func_2955_call(), 0)
bop_6972 = relay.greater_equal(bop_6950.astype('bool'), relay.reshape(uop_6947.astype('bool'), relay.shape_of(bop_6950))) # shape=(6, 12, 13)
bop_6975 = relay.greater_equal(bop_6953.astype('bool'), relay.reshape(uop_6949.astype('bool'), relay.shape_of(bop_6953))) # shape=(6, 12, 13)
output = relay.Tuple([call_6956,bop_6972,])
output2 = relay.Tuple([call_6957,bop_6975,])
func_6989 = relay.Function([], output)
mod['func_6989'] = func_6989
mod = relay.transform.InferType()(mod)
mutated_mod['func_6989'] = func_6989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6989_call = mutated_mod.get_global_var('func_6989')
call_6990 = func_6989_call()
output = call_6990
func_6991 = relay.Function([], output)
mutated_mod['func_6991'] = func_6991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_7012 = relay.TupleGetItem(func_1675_call(), 0)
call_7013 = relay.TupleGetItem(func_1677_call(), 0)
output = relay.Tuple([call_7012,])
output2 = relay.Tuple([call_7013,])
func_7036 = relay.Function([], output)
mod['func_7036'] = func_7036
mod = relay.transform.InferType()(mod)
mutated_mod['func_7036'] = func_7036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7036_call = mutated_mod.get_global_var('func_7036')
call_7037 = func_7036_call()
output = call_7037
func_7038 = relay.Function([], output)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1504_call = mod.get_global_var('func_1504')
func_1505_call = mutated_mod.get_global_var('func_1505')
call_7131 = relay.TupleGetItem(func_1504_call(), 1)
call_7132 = relay.TupleGetItem(func_1505_call(), 1)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_7133 = func_1021_call()
call_7134 = func_1021_call()
func_1675_call = mod.get_global_var('func_1675')
func_1677_call = mutated_mod.get_global_var('func_1677')
call_7135 = relay.TupleGetItem(func_1675_call(), 0)
call_7136 = relay.TupleGetItem(func_1677_call(), 0)
output = relay.Tuple([call_7131,call_7133,call_7135,])
output2 = relay.Tuple([call_7132,call_7134,call_7136,])
func_7145 = relay.Function([], output)
mod['func_7145'] = func_7145
mod = relay.transform.InferType()(mod)
output = func_7145()
func_7146 = relay.Function([], output)
mutated_mod['func_7146'] = func_7146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_7147 = relay.TupleGetItem(func_1066_call(), 1)
call_7148 = relay.TupleGetItem(func_1067_call(), 1)
output = call_7147
output2 = call_7148
func_7156 = relay.Function([], output)
mod['func_7156'] = func_7156
mod = relay.transform.InferType()(mod)
mutated_mod['func_7156'] = func_7156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7156_call = mutated_mod.get_global_var('func_7156')
call_7157 = func_7156_call()
output = call_7157
func_7158 = relay.Function([], output)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6563_call = mod.get_global_var('func_6563')
func_6564_call = mutated_mod.get_global_var('func_6564')
call_7170 = relay.TupleGetItem(func_6563_call(), 1)
call_7171 = relay.TupleGetItem(func_6564_call(), 1)
output = relay.Tuple([call_7170,])
output2 = relay.Tuple([call_7171,])
func_7178 = relay.Function([], output)
mod['func_7178'] = func_7178
mod = relay.transform.InferType()(mod)
mutated_mod['func_7178'] = func_7178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7178_call = mutated_mod.get_global_var('func_7178')
call_7179 = func_7178_call()
output = call_7179
func_7180 = relay.Function([], output)
mutated_mod['func_7180'] = func_7180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_621_call = mod.get_global_var('func_621')
func_622_call = mutated_mod.get_global_var('func_622')
call_7211 = func_621_call()
call_7212 = func_621_call()
func_2590_call = mod.get_global_var('func_2590')
func_2594_call = mutated_mod.get_global_var('func_2594')
const_7226 = relay.const([-8.842284,0.475455,-4.811106,-2.462394,-2.714250,-0.817954,-5.411894,-6.842337,-5.306575,0.132630,-6.234117,6.789840,7.319079,8.974417,0.347000,-1.620633,1.318529,0.685437,-3.238372,9.400710,-8.833582,3.127824,-0.922821,-3.053784,-4.157138,1.121059,6.532573,9.375331,1.692385,7.614363,1.020563,-1.509530,-8.419236,-3.548471,6.588162,8.005531,-9.472602,-7.873430,-4.454372,0.547726,-9.152538,0.475024,-1.905929,6.346627,3.695591,-4.934247,-9.512346,-9.295288,-4.061501,9.690731,-7.353743,4.163928,-9.682262,8.336006,-0.869621,1.919091,9.908054,-9.940523,0.857462,-1.728773,5.669588,-4.314290,1.186814,-7.608871,0.417405,-5.460128,-5.674294,-7.947735,4.598373,4.871755,0.778941,4.424385,6.611585,-1.414441,0.116335,-5.227070,5.196336,-6.480036,9.313131,-5.880858,1.011218,-1.944315,-0.208342,-3.897613,6.037726,-9.579552,-3.991053,0.551257,2.055622,3.825036,-5.649028,7.673143,-4.597648,0.619879,-6.417841,-5.928335,-4.040817,0.992818,-2.450044,-5.348070,4.999397,-1.564998,-0.031058,-0.255887,7.751737,-4.358353,7.676953,8.609852,-3.445099,6.016456,-3.219272,-3.959017,-5.657813,1.475031,5.750662,-5.062905,-2.801612,-8.638445,9.989665,9.334228,-5.165429,-1.425093,1.762242,5.823634,-0.125581,5.076478,1.345551,1.448756,2.266650,-7.241729,8.135268,-0.629005,4.146036,-1.355564,4.234295,6.163680,-2.416853,5.776923,6.902746,2.306389,3.910345,-6.009905,-3.177975,-4.100701,-2.968285,-0.623114,-1.993761,-4.238207,5.721837,-3.204381,-0.209771,3.976650,1.692835,-6.814217,9.225019,1.818836,-6.174814,8.325640,3.553424,7.349999,-7.206276,1.101233,-7.120332,-7.587157,4.865509,-1.319511,-0.716906,-6.820397,-3.869621,-4.317917,-0.861115,-5.767408,0.683024,0.822341,0.853757,0.404503,-9.853318,-1.863643,-2.098185,-5.317085,1.466224,4.267349,-8.645580,-9.310579,-8.741205,7.745554,-6.903167,-6.271428,6.026898,-2.267328,-6.747812,4.320505], dtype = "float64")#candidate|7226|(192,)|const|float64
call_7225 = relay.TupleGetItem(func_2590_call(relay.reshape(const_7226.astype('float64'), [2, 6, 16]), relay.reshape(const_7226.astype('float32'), [2, 6, 16]), ), 0)
call_7227 = relay.TupleGetItem(func_2594_call(relay.reshape(const_7226.astype('float64'), [2, 6, 16]), relay.reshape(const_7226.astype('float32'), [2, 6, 16]), ), 0)
output = relay.Tuple([call_7211,call_7225,const_7226,])
output2 = relay.Tuple([call_7212,call_7227,const_7226,])
func_7233 = relay.Function([], output)
mod['func_7233'] = func_7233
mod = relay.transform.InferType()(mod)
output = func_7233()
func_7234 = relay.Function([], output)
mutated_mod['func_7234'] = func_7234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6704_call = mod.get_global_var('func_6704')
func_6706_call = mutated_mod.get_global_var('func_6706')
call_7282 = relay.TupleGetItem(func_6704_call(), 0)
call_7283 = relay.TupleGetItem(func_6706_call(), 0)
func_7145_call = mod.get_global_var('func_7145')
func_7146_call = mutated_mod.get_global_var('func_7146')
call_7286 = relay.TupleGetItem(func_7145_call(), 1)
call_7287 = relay.TupleGetItem(func_7146_call(), 1)
uop_7291 = relay.log10(call_7286.astype('float64')) # shape=(845,)
uop_7293 = relay.log10(call_7287.astype('float64')) # shape=(845,)
uop_7300 = relay.tan(uop_7291.astype('float64')) # shape=(845,)
uop_7302 = relay.tan(uop_7293.astype('float64')) # shape=(845,)
output = relay.Tuple([call_7282,uop_7300,])
output2 = relay.Tuple([call_7283,uop_7302,])
func_7307 = relay.Function([], output)
mod['func_7307'] = func_7307
mod = relay.transform.InferType()(mod)
output = func_7307()
func_7308 = relay.Function([], output)
mutated_mod['func_7308'] = func_7308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7333 = relay.var("var_7333", dtype = "bool", shape = (1, 11, 13))#candidate|7333|(1, 11, 13)|var|bool
var_7334 = relay.var("var_7334", dtype = "bool", shape = (13, 11, 13))#candidate|7334|(13, 11, 13)|var|bool
bop_7335 = relay.logical_or(var_7333.astype('bool'), var_7334.astype('bool')) # shape=(13, 11, 13)
output = bop_7335
output2 = bop_7335
func_7352 = relay.Function([var_7333,var_7334,], output)
mod['func_7352'] = func_7352
mod = relay.transform.InferType()(mod)
var_7353 = relay.var("var_7353", dtype = "bool", shape = (1, 11, 13))#candidate|7353|(1, 11, 13)|var|bool
var_7354 = relay.var("var_7354", dtype = "bool", shape = (13, 11, 13))#candidate|7354|(13, 11, 13)|var|bool
output = func_7352(var_7353,var_7354,)
func_7355 = relay.Function([var_7353,var_7354,], output)
mutated_mod['func_7355'] = func_7355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1847_call = mod.get_global_var('func_1847')
func_1848_call = mutated_mod.get_global_var('func_1848')
call_7378 = func_1847_call()
call_7379 = func_1847_call()
func_3824_call = mod.get_global_var('func_3824')
func_3826_call = mutated_mod.get_global_var('func_3826')
call_7388 = relay.TupleGetItem(func_3824_call(), 0)
call_7389 = relay.TupleGetItem(func_3826_call(), 0)
output = relay.Tuple([call_7378,call_7388,])
output2 = relay.Tuple([call_7379,call_7389,])
func_7394 = relay.Function([], output)
mod['func_7394'] = func_7394
mod = relay.transform.InferType()(mod)
output = func_7394()
func_7395 = relay.Function([], output)
mutated_mod['func_7395'] = func_7395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_7396 = func_4193_call()
call_7397 = func_4193_call()
var_7404 = relay.var("var_7404", dtype = "float64", shape = (845,))#candidate|7404|(845,)|var|float64
bop_7405 = relay.add(call_7396.astype('uint32'), relay.reshape(var_7404.astype('uint32'), relay.shape_of(call_7396))) # shape=(845,)
bop_7408 = relay.add(call_7397.astype('uint32'), relay.reshape(var_7404.astype('uint32'), relay.shape_of(call_7397))) # shape=(845,)
func_6142_call = mod.get_global_var('func_6142')
func_6143_call = mutated_mod.get_global_var('func_6143')
call_7410 = relay.TupleGetItem(func_6142_call(), 0)
call_7411 = relay.TupleGetItem(func_6143_call(), 0)
bop_7419 = relay.floor_mod(bop_7405.astype('float64'), relay.reshape(call_7396.astype('float64'), relay.shape_of(bop_7405))) # shape=(845,)
bop_7422 = relay.floor_mod(bop_7408.astype('float64'), relay.reshape(call_7397.astype('float64'), relay.shape_of(bop_7408))) # shape=(845,)
output = relay.Tuple([call_7410,bop_7419,])
output2 = relay.Tuple([call_7411,bop_7422,])
func_7423 = relay.Function([var_7404,], output)
mod['func_7423'] = func_7423
mod = relay.transform.InferType()(mod)
var_7424 = relay.var("var_7424", dtype = "float64", shape = (845,))#candidate|7424|(845,)|var|float64
output = func_7423(var_7424)
func_7425 = relay.Function([var_7424], output)
mutated_mod['func_7425'] = func_7425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3978_call = mod.get_global_var('func_3978')
func_3979_call = mutated_mod.get_global_var('func_3979')
call_7440 = relay.TupleGetItem(func_3978_call(), 0)
call_7441 = relay.TupleGetItem(func_3979_call(), 0)
output = call_7440
output2 = call_7441
func_7442 = relay.Function([], output)
mod['func_7442'] = func_7442
mod = relay.transform.InferType()(mod)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7443 = func_7442_call()
output = call_7443
func_7444 = relay.Function([], output)
mutated_mod['func_7444'] = func_7444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1021_call = mod.get_global_var('func_1021')
func_1023_call = mutated_mod.get_global_var('func_1023')
call_7454 = func_1021_call()
call_7455 = func_1021_call()
output = call_7454
output2 = call_7455
func_7463 = relay.Function([], output)
mod['func_7463'] = func_7463
mod = relay.transform.InferType()(mod)
output = func_7463()
func_7464 = relay.Function([], output)
mutated_mod['func_7464'] = func_7464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mod.get_global_var('func_4679')
func_4680_call = mutated_mod.get_global_var('func_4680')
call_7465 = relay.TupleGetItem(func_4679_call(), 0)
call_7466 = relay.TupleGetItem(func_4680_call(), 0)
output = relay.Tuple([call_7465,])
output2 = relay.Tuple([call_7466,])
func_7467 = relay.Function([], output)
mod['func_7467'] = func_7467
mod = relay.transform.InferType()(mod)
mutated_mod['func_7467'] = func_7467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7467_call = mutated_mod.get_global_var('func_7467')
call_7468 = func_7467_call()
output = call_7468
func_7469 = relay.Function([], output)
mutated_mod['func_7469'] = func_7469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mod.get_global_var('func_676')
func_678_call = mutated_mod.get_global_var('func_678')
call_7487 = relay.TupleGetItem(func_676_call(), 0)
call_7488 = relay.TupleGetItem(func_678_call(), 0)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_7497 = relay.TupleGetItem(func_2843_call(), 0)
call_7498 = relay.TupleGetItem(func_2845_call(), 0)
output = relay.Tuple([call_7487,call_7497,])
output2 = relay.Tuple([call_7488,call_7498,])
func_7519 = relay.Function([], output)
mod['func_7519'] = func_7519
mod = relay.transform.InferType()(mod)
mutated_mod['func_7519'] = func_7519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7519_call = mutated_mod.get_global_var('func_7519')
call_7520 = func_7519_call()
output = call_7520
func_7521 = relay.Function([], output)
mutated_mod['func_7521'] = func_7521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7463_call = mod.get_global_var('func_7463')
func_7464_call = mutated_mod.get_global_var('func_7464')
call_7522 = func_7463_call()
call_7523 = func_7463_call()
output = call_7522
output2 = call_7523
func_7539 = relay.Function([], output)
mod['func_7539'] = func_7539
mod = relay.transform.InferType()(mod)
mutated_mod['func_7539'] = func_7539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7539_call = mutated_mod.get_global_var('func_7539')
call_7540 = func_7539_call()
output = call_7540
func_7541 = relay.Function([], output)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_943_call = mod.get_global_var('func_943')
func_945_call = mutated_mod.get_global_var('func_945')
call_7562 = relay.TupleGetItem(func_943_call(), 0)
call_7563 = relay.TupleGetItem(func_945_call(), 0)
output = call_7562
output2 = call_7563
func_7572 = relay.Function([], output)
mod['func_7572'] = func_7572
mod = relay.transform.InferType()(mod)
output = func_7572()
func_7573 = relay.Function([], output)
mutated_mod['func_7573'] = func_7573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7574 = relay.var("var_7574", dtype = "float32", shape = (16, 14, 2))#candidate|7574|(16, 14, 2)|var|float32
uop_7575 = relay.sinh(var_7574.astype('float32')) # shape=(16, 14, 2)
output = relay.Tuple([uop_7575,])
output2 = relay.Tuple([uop_7575,])
func_7577 = relay.Function([var_7574,], output)
mod['func_7577'] = func_7577
mod = relay.transform.InferType()(mod)
mutated_mod['func_7577'] = func_7577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7578 = relay.var("var_7578", dtype = "float32", shape = (16, 14, 2))#candidate|7578|(16, 14, 2)|var|float32
func_7577_call = mutated_mod.get_global_var('func_7577')
call_7579 = func_7577_call(var_7578)
output = call_7579
func_7580 = relay.Function([var_7578], output)
mutated_mod['func_7580'] = func_7580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_7585 = relay.TupleGetItem(func_3309_call(), 2)
call_7586 = relay.TupleGetItem(func_3311_call(), 2)
output = relay.Tuple([call_7585,])
output2 = relay.Tuple([call_7586,])
func_7588 = relay.Function([], output)
mod['func_7588'] = func_7588
mod = relay.transform.InferType()(mod)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7588_call = mutated_mod.get_global_var('func_7588')
call_7589 = func_7588_call()
output = call_7589
func_7590 = relay.Function([], output)
mutated_mod['func_7590'] = func_7590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1066_call = mod.get_global_var('func_1066')
func_1067_call = mutated_mod.get_global_var('func_1067')
call_7626 = relay.TupleGetItem(func_1066_call(), 1)
call_7627 = relay.TupleGetItem(func_1067_call(), 1)
var_7637 = relay.var("var_7637", dtype = "float32", shape = (936,))#candidate|7637|(936,)|var|float32
bop_7638 = relay.divide(call_7626.astype('float64'), relay.reshape(var_7637.astype('float64'), relay.shape_of(call_7626))) # shape=(936,)
bop_7641 = relay.divide(call_7627.astype('float64'), relay.reshape(var_7637.astype('float64'), relay.shape_of(call_7627))) # shape=(936,)
uop_7644 = relay.asin(call_7626.astype('float64')) # shape=(936,)
uop_7646 = relay.asin(call_7627.astype('float64')) # shape=(936,)
func_2843_call = mod.get_global_var('func_2843')
func_2845_call = mutated_mod.get_global_var('func_2845')
call_7647 = relay.TupleGetItem(func_2843_call(), 0)
call_7648 = relay.TupleGetItem(func_2845_call(), 0)
uop_7657 = relay.sin(uop_7644.astype('float32')) # shape=(936,)
uop_7659 = relay.sin(uop_7646.astype('float32')) # shape=(936,)
func_5181_call = mod.get_global_var('func_5181')
func_5184_call = mutated_mod.get_global_var('func_5184')
var_7664 = relay.var("var_7664", dtype = "float64", shape = (192,))#candidate|7664|(192,)|var|float64
call_7663 = relay.TupleGetItem(func_5181_call(relay.reshape(var_7664.astype('float64'), [96, 2]), relay.reshape(var_7664.astype('float64'), [96, 2]), ), 3)
call_7665 = relay.TupleGetItem(func_5184_call(relay.reshape(var_7664.astype('float64'), [96, 2]), relay.reshape(var_7664.astype('float64'), [96, 2]), ), 3)
bop_7669 = relay.not_equal(uop_7644.astype('bool'), relay.reshape(bop_7638.astype('bool'), relay.shape_of(uop_7644))) # shape=(936,)
bop_7672 = relay.not_equal(uop_7646.astype('bool'), relay.reshape(bop_7641.astype('bool'), relay.shape_of(uop_7646))) # shape=(936,)
bop_7676 = relay.less(uop_7657.astype('bool'), relay.reshape(uop_7644.astype('bool'), relay.shape_of(uop_7657))) # shape=(936,)
bop_7679 = relay.less(uop_7659.astype('bool'), relay.reshape(uop_7646.astype('bool'), relay.shape_of(uop_7659))) # shape=(936,)
output = relay.Tuple([call_7647,call_7663,var_7664,bop_7669,bop_7676,])
output2 = relay.Tuple([call_7648,call_7665,var_7664,bop_7672,bop_7679,])
F = relay.Function([var_7637,var_7664,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7637,var_7664,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

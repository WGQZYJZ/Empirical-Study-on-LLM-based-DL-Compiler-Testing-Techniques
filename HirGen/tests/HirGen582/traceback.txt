==========mod==========
#[version = "0.0.5"]
def @func_8912() -> Tensor[(10, 13, 16), float64] {
  @func_5491() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_419() -> Tensor[(10, 13, 16), float32] {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(10, 13, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = power(%2, %3) /* ty=Tensor[(10, 13, 16), float64] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %6 = log10(%5) /* ty=Tensor[(10, 13, 16), float32] */;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  sin(%7) /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_12126(%var_12074: Tensor[(2, 16, 13), float32], %var_12120: int64) -> (Tensor[(2, 16, 13), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 15, 1), int64], int64) {
  %8 = cast(%var_12074, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %9 = erf(%8) /* ty=Tensor[(2, 16, 13), float32] */;
  %10 = cast(%9, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %11 = @func_8014() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %12 = cast(%var_12120, dtype="int64") /* ty=int64 */;
  %13 = reshape(%12, newshape=[]) /* ty=int64 */;
  %14 = @func_325(%13) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %15 = sinh(%10) /* ty=Tensor[(2, 16, 13), float32] */;
  %16 = %11.4;
  %17 = %14.0;
  (%15, %16, %17, %var_12120)
}

def @func_2119() -> (Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) {
  %18 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %20 = reshape(%19, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %21 = %18.1;
  %22 = @func_1015(%20) /* ty=Tensor[(3, 16, 16), float32] */;
  (%21, %22, meta[relay.Constant][2] /* ty=Tensor[(768), float64] */)
}

def @func_6957() -> (Tensor[(10, 13, 16), float32],) {
  %23 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %24 = %23.0;
  (%24,)
}

def @func_12199() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %25 = @func_4581() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %26 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %27 = @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %28 = %25.1;
  %29 = %26.0;
  %30 = %27.0;
  (%28, %29, %30)
}

def @func_11529() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %31 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %32 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %33 = %31.0;
  %34 = %32.0;
  (%33, %34)
}

def @func_5360() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %35 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %36 = @func_4921() /* ty=Tensor[(10, 13, 16), float64] */;
  %37 = %35.0;
  (%36, %37)
}

def @func_11605(%var_11586: Tensor[(1170), int8]) -> (Tensor[(10, 13, 16), float32], Tensor[(2, 4, 15), float64], Tensor[(13, 9, 10), uint64], Tensor[(10, 13, 16), float64]) {
  %38 = @func_10689() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %39 = cast(%var_11586, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %40 = cast(%var_11586, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %41 = reshape(%39, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
  %42 = reshape(%40, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
  %43 = @func_1387(%41, %42) /* ty=Tensor[(13, 9, 10), int8] */;
  %44 = cast(%var_11586, dtype="uint64") /* ty=Tensor[(1170), uint64] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="uint64") /* ty=Tensor[(13, 9, 10), uint64] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %48 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %49 = %38.0;
  %50 = @func_9253() /* ty=Tensor[(2, 4, 15), float64] */;
  %51 = bitwise_and(%46, %47) /* ty=Tensor[(13, 9, 10), uint64] */;
  %52 = %48.0;
  (%49, %50, %51, %52)
}

def @func_16491() -> Tensor[(10, 13, 16), float32] {
  @func_6273() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_3360() -> Tensor[(10, 13, 16), float32] {
  %53 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %53.0
}

def @func_3813(%var_3716: Tensor[(10, 13, 16), float32], %var_3802: Tensor[(16, 48), float64]) -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(6, 260), uint16], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(16, 48), float64], Tensor[(3, 16, 16), float32]) {
  %54 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %55 = %54.0;
  %56 = cast(%var_3716, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%55, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %60 = @func_2103() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %61 = cast(%55, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %62 = shape_of(%var_3716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%var_3716, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 260), int8] */, dtype="int8") /* ty=Tensor[(6, 260), int8] */;
  %66 = reshape(%65, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
  %67 = @func_679(%66) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
  %68 = %67.0;
  %69 = cast(%68, dtype="uint16") /* ty=Tensor[(13, 8, 15), uint16] */;
  %70 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 260), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 260), int8] */, dtype="uint16") /* ty=Tensor[(6, 260), uint16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %73 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %74 = cast(%var_3802, dtype="float64") /* ty=Tensor[(16, 48), float64] */;
  %75 = reshape(%74, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %76 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %77 = floor_mod(%58, %59) /* ty=Tensor[(10, 13, 16), float64] */;
  %78 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %79 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  %80 = %60.0;
  %81 = logical_and(%63, %64) /* ty=Tensor[(10, 13, 16), bool] */;
  %82 = maximum(%71, %72) /* ty=Tensor[(6, 260), uint16] */;
  %83 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  %84 = %73.0;
  %85 = @func_1015(%75) /* ty=Tensor[(3, 16, 16), float32] */;
  %86 = %76.2;
  (%77, %78, %79, %80, %81, %82, %83, %84, %85, %var_3802, %86)
}

def @func_14877() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %87 = @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %88 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %89 = %87.0;
  %90 = %88.1;
  (%89, %90)
}

def @func_6414(%var_6406: Tensor[(1560), int8]) -> (Tensor[(1560), int8],) {
  %91 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
  %92 = %91.3;
  %93 = cast(%var_6406, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(1), int32] */;
  %95 = cast(%92, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?), int8] */;
  %97 = subtract(%95, %96) /* ty=Tensor[(1560), int8] */;
  (%97,)
}

def @func_6963() -> Tensor[(10, 13, 16), float32] {
  %98 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %98.0
}

def @func_8535(%var_8524: Tensor[(9, 4, 3), float32]) -> (Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) {
  %99 = cast(%var_8524, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %100 = sigmoid(%99) /* ty=Tensor[(9, 4, 3), float32] */;
  %101 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  (%100, %101)
}

def @func_16606() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %102 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %103 = %102.0;
  %104 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %105 = @func_3554() /* ty=Tensor[(10, 13, 16), float32] */;
  (%103, %104, %105)
}

def @func_3418() -> (Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %106 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %107 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 96), float64] */, dtype="float64") /* ty=Tensor[(8, 96), float64] */;
  %108 = reshape(%107, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %109 = @func_1015(%108) /* ty=Tensor[(3, 16, 16), float32] */;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %111 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %112 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %113 = %106.0;
  %114 = log10(%110) /* ty=Tensor[(3, 16, 16), float32] */;
  %115 = %111.0;
  %116 = %112.0;
  (%113, meta[relay.Constant][4] /* ty=Tensor[(8, 96), float64] */, %114, %115, %116)
}

def @func_10765() -> (Tensor[(10, 13, 16), float32],) {
  %117 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %118 = %117.0;
  (%118,)
}

def @func_7662() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %119 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %120 = @func_4643() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %121 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %122 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %123 = %122.1;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %125 = reshape(%124, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
  %126 = @func_3501(%125) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %127 = %119.0;
  %128 = %120.1;
  %129 = %121.0;
  %130 = %126.2;
  (%127, %128, %129, %123, %130)
}

def @func_16668() -> Tensor[(10, 13, 16), float64] {
  %131 = @func_16562() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %131.1
}

def @func_15886() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %132 = @func_15402() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %133 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %134 = @func_3130() /* ty=Tensor[(10, 13, 16), float32] */;
  %135 = %132.1;
  %136 = @func_8912() /* ty=Tensor[(10, 13, 16), float64] */;
  %137 = %133.0;
  (%134, %135, %136, %137)
}

def @func_13751() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %138 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %139 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %140 = %138.0;
  %141 = %139.0;
  (%140, %141)
}

def @func_16434() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %142 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %143 = %142.0;
  %144 = @func_6550() /* ty=Tensor[(10, 13, 16), float32] */;
  %145 = @func_14182() /* ty=Tensor[(10, 13, 16), float64] */;
  (%143, %144, %145)
}

def @func_6172() -> Tensor[(10, 13, 16), float32] {
  %146 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %146.0
}

def @func_11843(%var_11823: Tensor[(15, 7, 5), uint64]) -> (Tensor[(15, 7, 5), uint64], Tensor[(10, 13, 16), float64]) {
  %147 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 7, 5), uint64] */, dtype="uint64") /* ty=Tensor[(15, 7, 5), uint64] */;
  %148 = shape_of(%var_11823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_11823, dtype="uint64") /* ty=Tensor[(15, 7, 5), uint64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %151 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %152 = subtract(%149, %150) /* ty=Tensor[(15, 7, 5), uint64] */;
  %153 = %151.1;
  (%152, %153)
}

def @func_4121() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %154 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %155 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %156 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %157 = %154.0;
  %158 = %155.0;
  %159 = %156.0;
  (%157, %158, %159)
}

def @func_6727() -> Tensor[(10, 13, 16), float32] {
  %160 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %160.0
}

def @func_9895(%var_9884: Tensor[(1, 15, 5), uint32], %var_9885: Tensor[(13, 15, 5), uint32]) -> Tensor[(13, 15, 5), uint32] {
  %161 = cast(%var_9884, dtype="uint32") /* ty=Tensor[(1, 15, 5), uint32] */;
  %162 = cast(%var_9885, dtype="uint32") /* ty=Tensor[(13, 15, 5), uint32] */;
  bitwise_and(%161, %162) /* ty=Tensor[(13, 15, 5), uint32] */
}

def @func_14526() -> (Tensor[(10, 13, 16), float64],) {
  %163 = @func_8912() /* ty=Tensor[(10, 13, 16), float64] */;
  (%163,)
}

def @func_5515() -> Tensor[(10, 13, 16), float32] {
  @func_419() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_9939() -> Tensor[(10, 13, 16), float32] {
  %164 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %164.0
}

def @func_11324() -> (Tensor[(10, 13, 16), float64],) {
  %165 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %166 = %165.0;
  (%166,)
}

def @func_8988(%var_8977: Tensor[(2, 15, 3), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(2, 15, 3), uint64]) {
  %167 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %168 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %169 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %170 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
  %171 = %168.0;
  %172 = cast(%171, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %173 = reshape(%172, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
  %174 = @func_3501(%173) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
  %177 = atan(%176) /* ty=Tensor[(2, 15, 3), float64] */;
  %178 = cast(%var_8977, dtype="uint64") /* ty=Tensor[(2, 15, 3), uint64] */;
  %179 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%177, dtype="uint64") /* ty=Tensor[(2, 15, 3), uint64] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %182 = %167.1;
  %183 = %169.1;
  %184 = %170.0;
  %185 = bitwise_xor(%180, %181) /* ty=Tensor[(2, 15, 3), uint64] */;
  (%182, %171, %183, %184, %185)
}

def @func_2178() -> Tensor[(10, 13, 16), float64] {
  %186 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %186.0
}

def @func_12873() -> (Tensor[(10, 13, 16), float32],) {
  %187 = @func_9752() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %188 = %187.0;
  (%188,)
}

def @func_11133(%var_11130: Tensor[(75), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 15, 5), uint32], Tensor[(75), uint32], Tensor[(975), uint32]) {
  %189 = @func_5105() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %190 = cast(%var_11130, dtype="uint32") /* ty=Tensor[(75), uint32] */;
  %191 = cast(meta[relay.Constant][6] /* ty=Tensor[(975), uint32] */, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %192 = reshape(%190, newshape=[1, 15, 5]) /* ty=Tensor[(1, 15, 5), uint32] */;
  %193 = reshape(%191, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), uint32] */;
  %194 = %189.0;
  %195 = @func_9895(%192, %193) /* ty=Tensor[(13, 15, 5), uint32] */;
  (%194, %195, %var_11130, meta[relay.Constant][6] /* ty=Tensor[(975), uint32] */)
}

def @func_15449(%var_15436: Tensor[(600), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(5, 12, 10), uint32], uint32, Tensor[(600), uint32]) {
  %196 = @func_5272() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %197 = @func_8835() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), float64], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(10, 13, 16), bool]) */;
  %198 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %199 = @func_15160() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %200 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %201 = cast(meta[relay.Constant][7] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %202 = cast(%var_15436, dtype="uint32") /* ty=Tensor[(600), uint32] */;
  %203 = reshape(%201, newshape=[]) /* ty=uint32 */;
  %204 = reshape(%202, newshape=[5, 12, 10]) /* ty=Tensor[(5, 12, 10), uint32] */;
  %205 = %196.1;
  %206 = %197.2;
  %207 = %198.0;
  %208 = %199.1;
  %209 = %200.0;
  %210 = @func_15097(%203, %204) /* ty=Tensor[(5, 12, 10), uint32] */;
  (%205, %206, %207, %208, %209, %210, meta[relay.Constant][7] /* ty=uint32 */, %var_15436)
}

def @func_5963(%var_5896: Tensor[(13, 4, 5), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(13, 4, 5), uint32]) {
  %211 = @func_3640() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %212 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %213 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %214 = cast(%var_5896, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %215 = log10(%214) /* ty=Tensor[(13, 4, 5), float64] */;
  %216 = cast(%var_5896, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %220 = %211.1;
  %221 = %212.1;
  %222 = %213.2;
  %223 = logical_xor(%218, %219) /* ty=Tensor[(13, 4, 5), uint32] */;
  (%220, %221, %222, %223)
}

def @func_9524(%var_9489: Tensor[(3, 3, 3), float32]) -> (Tensor[(3, 3, 3), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %224 = cast(%var_9489, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
  %225 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %226 = @func_6316() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %227 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %228 = exp(%224) /* ty=Tensor[(3, 3, 3), float32] */;
  %229 = %225.0;
  %230 = %226.0;
  %231 = %227.0;
  (%228, %229, %230, %231)
}

def @func_16097() -> (Tensor[(10, 13, 16), float64],) {
  %232 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %233 = %232.0;
  (%233,)
}

def @func_17229() -> (Tensor[(768), float64], Tensor[(10, 13, 16), float64], Tensor[(360), int8], int64) {
  %234 = @func_13869() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %235 = %234.3;
  %236 = cast(%235, dtype="float32") /* ty=Tensor[(768), float32] */;
  %237 = cast(meta[relay.Constant][8] /* ty=Tensor[(360), int8] */, dtype="int8") /* ty=Tensor[(360), int8] */;
  %238 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %239 = reshape(%236, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
  %240 = reshape(%237, newshape=[360]) /* ty=Tensor[(360), int8] */;
  %241 = reshape(%238, newshape=[]) /* ty=int64 */;
  %242 = @func_16270(%239, %240, %241) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(12, 8, 8), int8], Tensor[(6, 4, 15), int8], Tensor[(360), int8], int64, Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %243 = %242.2;
  (%235, %243, meta[relay.Constant][8] /* ty=Tensor[(360), int8] */, -3 /* ty=int64 */)
}

def @func_2953() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %244 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %245 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %246 = cast(%245, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %247 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  %248 = %244.1;
  %249 = asinh(%246) /* ty=Tensor[(10, 13, 16), float64] */;
  (%247, %248, %249)
}

def @func_471() -> (Tensor[(10, 13, 16), float32],) {
  %250 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%250,)
}

def @func_5173() -> (Tensor[(10, 13, 16), float32],) {
  %251 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%251,)
}

def @func_6668() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %252 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %253 = @func_5666() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %254 = %252.1;
  %255 = %253.0;
  (%254, %255)
}

def @func_14751() -> Tensor[(10, 13, 16), float32] {
  %256 = @func_5173() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %256.0
}

def @func_4921() -> Tensor[(10, 13, 16), float64] {
  %257 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %257.0
}

def @func_14516() -> (Tensor[(10, 13, 16), float32], Tensor[(8, 11, 9), uint32]) {
  %258 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %259 = @func_12537() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) */;
  %260 = %258.0;
  %261 = %259.4;
  (%260, %261)
}

def @func_10689() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %262 = @func_5833() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %263 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %264 = %262.0;
  %265 = %263.2;
  (%264, %265)
}

def @func_1073() -> (Tensor[(10, 13, 16), float64],) {
  %266 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%266,)
}

def @func_8014() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  %267 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %268 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %269 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %270 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %271 = @func_2103() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %272 = %267.0;
  %273 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
  %274 = %268.0;
  %275 = %269.0;
  %276 = %270.0;
  %277 = %271.0;
  (%272, %273, %274, %275, %276, %277)
}

def @func_1147() -> Tensor[(10, 13, 16), float32] {
  %278 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %278.0
}

def @func_1939() -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  %279 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %280 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %281 = %279.0;
  %282 = %280.0;
  (%281, %282)
}

def @func_4470() -> (Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) {
  %283 = @func_3640() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %284 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %285 = %283.0;
  (%284, %285)
}

def @func_15402() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %286 = @func_8674() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %287 = @func_11324() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %288 = %286.0;
  %289 = %287.0;
  (%288, %289)
}

def @func_16037() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64]) {
  %290 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %291 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %292 = @func_10716() /* ty=Tensor[(10, 13, 16), float64] */;
  %293 = @func_15928() /* ty=Tensor[(10, 13, 16), float64] */;
  %294 = %290.0;
  %295 = %291.0;
  (%292, %293, %294, %295)
}

def @func_5604() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %296 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %297 = %296.1;
  %298 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
  (%297, %298)
}

def @func_16326() -> Tensor[(10, 13, 16), float32] {
  %299 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %299.0
}

def @func_13444() -> Tensor[(10, 13, 16), float32] {
  %300 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %300.4
}

def @func_7774(%var_7760: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], int64, int64, Tensor[(768), float32], Tensor[(10, 13, 16), float32]) {
  %301 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %302 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %303 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %304 = cast(%var_7760, dtype="float32") /* ty=Tensor[(768), float32] */;
  %305 = reshape(%303, newshape=[]) /* ty=int64 */;
  %306 = reshape(%304, newshape=[32, 24]) /* ty=Tensor[(32, 24), float32] */;
  %307 = @func_5050(%305, %306) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) */;
  %308 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %309 = %301.0;
  %310 = %302.0;
  %311 = %307.3;
  %312 = %308.1;
  (%309, %310, %311, -1 /* ty=int64 */, %var_7760, %312)
}

def @func_11212() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  %313 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %314 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %315 = @func_10256() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %316 = %313.0;
  %317 = %314.0;
  %318 = %315.1;
  (%316, %317, %318)
}

def @func_16925() -> Tensor[(10, 13, 16), float64] {
  %319 = @func_8674() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %319.0
}

def @func_2543(%var_2530: Tensor[(14, 12, 4), float32]) -> (Tensor[(14, 12, 4), float32], Tensor[(10, 13, 16), float64]) {
  %320 = cast(%var_2530, dtype="float32") /* ty=Tensor[(14, 12, 4), float32] */;
  %321 = atanh(%320) /* ty=Tensor[(14, 12, 4), float32] */;
  %322 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%321, %322)
}

def @func_13387() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) {
  %323 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %324 = @func_9464() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %325 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %326 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %327 = %323.0;
  %328 = %324.0;
  %329 = %325.1;
  (%326, %327, %328, %329)
}

def @func_17028() -> (Tensor[(10, 13, 16), float32],) {
  %330 = @func_5304() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %331 = %330.0;
  (%331,)
}

def @func_2512() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %332 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %333 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  %334 = cast(%333, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %335 = cast(%333, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %336 = reshape(%334, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float64] */;
  %337 = reshape(%335, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
  %338 = @func_1233(%336, %337) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), int8]) */;
  %339 = %338.2;
  %340 = cast(%333, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %344 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %345 = %332.0;
  %346 = add(%342, %343) /* ty=Tensor[(10, 13, 16), float64] */;
  %347 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  %348 = %344.0;
  (%345, %346, %347, %348)
}

def @func_167(%var_144: Tensor[(2, 10, 7), int8], %var_145: Tensor[(2, 10, 7), int8]) -> (Tensor[(2, 10, 7), int8],) {
  %349 = cast(%var_145, dtype="int8") /* ty=Tensor[(2, 10, 7), int8] */;
  %350 = shape_of(%var_144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%var_144, dtype="int8") /* ty=Tensor[(2, 10, 7), int8] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %353 = bitwise_xor(%351, %352) /* ty=Tensor[(2, 10, 7), int8] */;
  (%353,)
}

def @func_1289() -> (Tensor[(10, 13, 16), float32],) {
  %354 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %355 = %354.0;
  (%355,)
}

def @func_3501(%var_3470: Tensor[(10, 13, 16), float32]) -> (Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %356 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %357 = cos(%356) /* ty=Tensor[(2, 15, 3), float32] */;
  %358 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %362 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %363 = %362.0;
  %364 = cast(%var_3470, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %368 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %369 = floor_mod(%360, %361) /* ty=Tensor[(2, 15, 3), float32] */;
  %370 = divide(%366, %367) /* ty=Tensor[(10, 13, 16), float64] */;
  %371 = %368.0;
  %372 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%369, %370, %371, %372)
}

def @func_16519() -> (Tensor[(10, 13, 16), float64],) {
  %373 = @func_4780() /* ty=Tensor[(10, 13, 16), float64] */;
  (%373,)
}

def @func_13200() -> (Tensor[(10, 13, 16), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) {
  %374 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %375 = @func_7063() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(4, 1, 3), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) */;
  %376 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %377 = %374.0;
  %378 = %375.3;
  %379 = %376.0;
  (%377, %378, %379)
}

def @func_10633() -> Tensor[(10, 13, 16), float32] {
  @func_7791() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_2400(%var_2359: Tensor[(3, 16, 16), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) {
  %380 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %381 = %380.1;
  %382 = cast(%var_2359, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%381, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %386 = cast(%var_2359, dtype="int16") /* ty=Tensor[(3, 16, 16), int16] */;
  %387 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%381, dtype="int16") /* ty=Tensor[(3, 16, 16), int16] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %390 = @func_1289() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %391 = floor_divide(%384, %385) /* ty=Tensor[(3, 16, 16), float64] */;
  %392 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  %393 = bitwise_xor(%388, %389) /* ty=Tensor[(3, 16, 16), int16] */;
  %394 = %390.0;
  (%391, %392, %393, %394)
}

def @func_17189(%var_17080: Tensor[(616), float32], %var_17116: Tensor[(1152), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(616), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(27), float32], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(4, 14, 11), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(4, 14, 11), int64]) {
  %395 = @func_15345() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %396 = @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %397 = cast(meta[relay.Constant][10] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %398 = reshape(%397, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %399 = @func_9659(%398) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */;
  %400 = cast(%var_17116, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %401 = cast(%var_17116, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %402 = reshape(%400, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %403 = reshape(%401, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
  %404 = cast(%var_17080, dtype="float32") /* ty=Tensor[(616), float32] */;
  %405 = cast(%var_17080, dtype="float32") /* ty=Tensor[(616), float32] */;
  %406 = reshape(%404, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
  %407 = reshape(%405, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
  %408 = @func_8197(%406, %407) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) */;
  %409 = %408.1;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %411 = cos(%410) /* ty=Tensor[(4, 14, 11), float32] */;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %413 = acos(%412) /* ty=Tensor[(4, 14, 11), float64] */;
  %414 = cast(%413, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %415 = @func_5272() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %416 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %417 = @func_8674() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %418 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %419 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %420 = cast(%413, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
  %421 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%411, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %424 = %395.0;
  %425 = %396.0;
  %426 = %399.2;
  %427 = @func_15176(%402, %403) /* ty=Tensor[(6, 12, 16), float64] */;
  %428 = tan(%414) /* ty=Tensor[(4, 14, 11), float64] */;
  %429 = %415.0;
  %430 = %416.2;
  %431 = %417.0;
  %432 = %418.0;
  %433 = %419.1;
  %434 = logical_xor(%422, %423) /* ty=Tensor[(4, 14, 11), int64] */;
  (%424, %var_17080, %425, %426, meta[relay.Constant][10] /* ty=Tensor[(27), float32] */, %427, %var_17116, %428, %429, %430, %431, %432, %433, %434)
}

def @func_17357(%var_17327: Tensor[(1, 6, 15), float32], %var_17328: Tensor[(8, 6, 15), float32]) -> (Tensor[(8, 6, 15), float32], Tensor[(10, 13, 16), float64]) {
  %435 = cast(%var_17327, dtype="float32") /* ty=Tensor[(1, 6, 15), float32] */;
  %436 = cast(%var_17328, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %437 = @func_16606() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %438 = mod(%435, %436) /* ty=Tensor[(8, 6, 15), float32] */;
  %439 = %437.1;
  (%438, %439)
}

def @func_829() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %440 = @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %441 = %440.1;
  %442 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%441, %442)
}

def @func_4244() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %443 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %444 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %445 = %443.0;
  (%444, %445)
}

def @func_11330() -> (Tensor[(10, 13, 16), float32],) {
  %446 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %447 = %446.0;
  (%447,)
}

def @main(%var_17373: Tensor[(1, 12, 3), float32]) -> (Tensor[(1, 12, 3), float32],) {
  %448 = cast(%var_17373, dtype="float32") /* ty=Tensor[(1, 12, 3), float32] */;
  %449 = asin(%448) /* ty=Tensor[(1, 12, 3), float32] */;
  (%449,)
}

def @func_4177() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %450 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %451 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %452 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %453 = %450.0;
  %454 = %451.0;
  %455 = %452.0;
  (%453, %454, %455)
}

def @func_13796() -> (Tensor[(10, 13, 16), float32],) {
  %456 = @func_5833() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %457 = %456.0;
  (%457,)
}

def @func_11921() -> (Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %458 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
  %459 = @func_9867() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(15, 9, 15), float32], Tensor[(135, 15), float32]) */;
  %460 = @func_5731() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %461 = %458.0;
  %462 = %459.0;
  %463 = %460.0;
  (%461, %462, %463)
}

def @func_4846() -> (Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(2, 10, 9), bool], Tensor[(180), uint32]) {
  %464 = @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %465 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %466 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %467 = %465.2;
  %468 = cast(%467, dtype="float32") /* ty=Tensor[(768), float32] */;
  %469 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %470 = reshape(%466, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
  %471 = reshape(%468, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %472 = reshape(%469, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
  %473 = @func_3245(%470, %471, %472) /* ty=(Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) */;
  %474 = %464.0;
  %475 = %473.0;
  (%474, %467, %475, meta[relay.Constant][11] /* ty=Tensor[(180), uint32] */)
}

def @func_14985() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %476 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %477 = @func_14516() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 11, 9), uint32]) */;
  %478 = %476.0;
  %479 = %477.0;
  (%478, %479)
}

def @func_11669() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %480 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %481 = @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %482 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %483 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %484 = %480.1;
  %485 = %481.0;
  %486 = %482.0;
  %487 = %483.0;
  (%484, %485, %486, %487)
}

def @func_15345() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %488 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %489 = @func_10319() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %490 = %488.0;
  %491 = %489.1;
  %492 = @func_4978() /* ty=Tensor[(10, 13, 16), float64] */;
  (%490, %491, %492)
}

def @func_10319() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %493 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %494 = %493.0;
  %495 = @func_6273() /* ty=Tensor[(10, 13, 16), float32] */;
  (%494, %495)
}

def @func_8597() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %496 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %497 = @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %498 = %496.2;
  %499 = %497.0;
  %500 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  (%498, %499, %500)
}

def @func_2159() -> Tensor[(10, 13, 16), float64] {
  %501 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  log(%503) /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_17316() -> (Tensor[(768), float64],) {
  %504 = @func_13869() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %505 = %504.3;
  (%505,)
}

def @func_14457() -> (Tensor[(10, 13, 16), bool],) {
  %506 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %507 = %506.0;
  (%507,)
}

def @func_4552(%var_4520: Tensor[(6, 260), int8]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], int64, Tensor[(6, 260), int8], Tensor[(10, 13, 16), float64]) {
  %508 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %509 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %510 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %511 = cast(%var_4520, dtype="int8") /* ty=Tensor[(6, 260), int8] */;
  %512 = reshape(%511, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
  %513 = @func_679(%512) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
  %514 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %515 = %508.0;
  %516 = %509.0;
  %517 = %510.0;
  %518 = %513.2;
  %519 = %514.0;
  (%515, %516, %517, %518, %var_4520, %519)
}

def @func_3640() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  %520 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %521 = @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %522 = %520.1;
  %523 = %521.1;
  (%522, %523)
}

def @func_16270(%var_16100: Tensor[(12, 8, 8), float32], %var_16220: Tensor[(360), int8], %var_16221: int64) -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(12, 8, 8), int8], Tensor[(6, 4, 15), int8], Tensor[(360), int8], int64, Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %524 = @func_6692() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %525 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %526 = @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %527 = @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %528 = cast(%var_16100, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %529 = atanh(%528) /* ty=Tensor[(12, 8, 8), float32] */;
  %530 = cast(%var_16100, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %531 = log2(%530) /* ty=Tensor[(12, 8, 8), float64] */;
  %532 = cast(%var_16100, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %533 = cosh(%532) /* ty=Tensor[(12, 8, 8), float64] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %535 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%531, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %538 = floor_divide(%536, %537) /* ty=Tensor[(12, 8, 8), float64] */;
  %539 = cast(%var_16100, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %540 = sqrt(%539) /* ty=Tensor[(12, 8, 8), float32] */;
  %541 = cast(%540, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %542 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%538, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %545 = less_equal(%543, %544) /* ty=Tensor[(12, 8, 8), bool] */;
  %546 = cast(%545, dtype="int8") /* ty=Tensor[(12, 8, 8), int8] */;
  %547 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%529, dtype="int8") /* ty=Tensor[(12, 8, 8), int8] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %550 = cast(%var_16220, dtype="int8") /* ty=Tensor[(360), int8] */;
  %551 = cast(%var_16220, dtype="int8") /* ty=Tensor[(360), int8] */;
  %552 = cast(%var_16220, dtype="bool") /* ty=Tensor[(360), bool] */;
  %553 = cast(%var_16221, dtype="int64") /* ty=int64 */;
  %554 = cast(%538, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %555 = reshape(%550, newshape=[6, 4, 15]) /* ty=Tensor[(6, 4, 15), int8] */;
  %556 = reshape(%551, newshape=[6, 4, 15]) /* ty=Tensor[(6, 4, 15), int8] */;
  %557 = reshape(%552, newshape=[6, 4, 15]) /* ty=Tensor[(6, 4, 15), bool] */;
  %558 = reshape(%553, newshape=[]) /* ty=int64 */;
  %559 = reshape(%554, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %560 = @func_13065(%555, %556, %557, %558, %559) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), int8], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 4, 15), float32], Tensor[(10, 13, 16), float32], int64, Tensor[(768), float32]) */;
  %561 = @func_11093() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %562 = @func_15886() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %563 = @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %564 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %565 = %524.0;
  %566 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %567 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %568 = %525.0;
  %569 = %526.1;
  %570 = %527.0;
  %571 = bitwise_or(%548, %549) /* ty=Tensor[(12, 8, 8), int8] */;
  %572 = %560.1;
  %573 = %561.0;
  %574 = %562.0;
  %575 = %563.0;
  %576 = %564.0;
  %577 = @func_15928() /* ty=Tensor[(10, 13, 16), float64] */;
  (%565, %566, %567, %568, %569, %570, %571, %572, %var_16220, %var_16221, %573, %574, %575, %576, %577)
}

def @func_6080() -> Tensor[(10, 13, 16), float32] {
  %578 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
  %578.0
}

def @func_13869() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) {
  %579 = @func_4121() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %580 = @func_4643() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %581 = cast(meta[relay.Constant][12] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %582 = reshape(%581, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %583 = %579.2;
  %584 = %580.0;
  %585 = @func_1015(%582) /* ty=Tensor[(3, 16, 16), float32] */;
  (%583, %584, %585, meta[relay.Constant][12] /* ty=Tensor[(768), float64] */)
}

def @func_3437() -> (Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  %586 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %587 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %588 = @func_2159() /* ty=Tensor[(10, 13, 16), float64] */;
  %589 = %586.2;
  %590 = %587.0;
  (%588, %589, %590)
}

def @func_5206() -> (Tensor[(10, 13, 16), float64],) {
  %591 = @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %592 = %591.2;
  (%592,)
}

def @func_1899() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %593 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %594 = %593.0;
  %595 = cast(%594, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %596 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  %597 = exp(%595) /* ty=Tensor[(10, 13, 16), float32] */;
  (%596, %597)
}

def @func_6885(%var_6864: Tensor[(1, 3, 14), float64]) -> (Tensor[(1, 3, 14), float64], Tensor[(10, 13, 16), float32]) {
  %598 = cast(%var_6864, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
  %599 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %600 = sinh(%598) /* ty=Tensor[(1, 3, 14), float64] */;
  %601 = %599.1;
  (%600, %601)
}

def @func_10256() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %602 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %603 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %604 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %605 = @func_4703() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), int8]) */;
  %606 = @func_4846() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(2, 10, 9), bool], Tensor[(180), uint32]) */;
  %607 = @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %608 = @func_7483() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %609 = @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %610 = %602.2;
  %611 = %603.0;
  %612 = %604.0;
  %613 = %605.0;
  %614 = %606.0;
  %615 = %607.1;
  %616 = %608.0;
  %617 = %609.2;
  (%610, %611, %612, %613, %614, %615, %616, %617)
}

def @func_6183() -> (Tensor[(10, 13, 16), float32],) {
  %618 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %619 = %618.1;
  (%619,)
}

def @func_6248() -> (Tensor[(10, 13, 16), float32],) {
  %620 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%620,)
}

def @func_2103() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %621 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %622 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %623 = %621.1;
  %624 = %622.0;
  (%623, %624)
}

def @func_1326() -> (Tensor[(10, 13, 16), float64],) {
  %625 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %626 = %625.0;
  (%626,)
}

def @func_7596() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %627 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %628 = %627.0;
  %629 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  (%628, %629)
}

def @func_7483() -> (Tensor[(10, 13, 16), float32],) {
  %630 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %633 = log2(%632) /* ty=Tensor[(10, 13, 16), float32] */;
  (%633,)
}

def @func_17263() -> Tensor[(10, 13, 16), float64] {
  %634 = @func_14526() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %634.0
}

def @func_1954() -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  %635 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %636 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %637 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %638 = %635.0;
  %639 = %636.1;
  %640 = %637.0;
  (%638, %639, %640)
}

def @func_4780() -> Tensor[(10, 13, 16), float64] {
  %641 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %641.0
}

def @func_11958() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %642 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %643 = @func_5272() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %644 = %642.0;
  %645 = %643.0;
  (%644, %645)
}

def @func_9253() -> Tensor[(2, 4, 15), float64] {
  %646 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 15), float64] */;
  log2(%646) /* ty=Tensor[(2, 4, 15), float64] */
}

def @func_15809() -> Tensor[(10, 13, 16), float32] {
  %647 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %647.1
}

def @func_15928() -> Tensor[(10, 13, 16), float64] {
  @func_14182() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_12785() -> (Tensor[(768), float64], Tensor[(10, 13, 16), float64]) {
  %648 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %649 = @func_4282() /* ty=(Tensor[(13, 14, 8), float64], Tensor[(10, 13, 16), float64]) */;
  %650 = %648.2;
  %651 = %649.1;
  (%650, %651)
}

def @func_1015(%var_978: Tensor[(3, 16, 16), float64]) -> Tensor[(3, 16, 16), float32] {
  %652 = cast(%var_978, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %653 = sigmoid(%652) /* ty=Tensor[(3, 16, 16), float64] */;
  %654 = cast(%var_978, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%653, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%656, %657) /* ty=Tensor[(3, 16, 16), float32] */
}

def @func_12970() -> (Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) {
  %658 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %659 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %660 = %658.4;
  %661 = %659.0;
  (%660, %661)
}

def @func_7153() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %662 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %663 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %664 = @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %665 = %662.0;
  %666 = %663.0;
  %667 = %664.0;
  (%665, %666, %667)
}

def @func_5666() -> (Tensor[(10, 13, 16), float64],) {
  %668 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %669 = %668.0;
  (%669,)
}

def @func_9043() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %670 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %671 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %672 = %670.0;
  %673 = %671.0;
  (%672, %673)
}

def @func_14337() -> Tensor[(1, 2, 13), float32] {
  %674 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
  erf(%674) /* ty=Tensor[(1, 2, 13), float32] */
}

def @func_11343() -> (Tensor[(10, 13, 16), float32],) {
  %675 = @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %676 = %675.0;
  (%676,)
}

def @func_3658() -> (Tensor[(10, 13, 16), float64],) {
  %677 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %678 = %677.0;
  (%678,)
}

def @func_15160() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %679 = @func_5173() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %680 = @func_7831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %681 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %682 = %679.0;
  %683 = %680.0;
  %684 = %681.0;
  (%682, %683, %684)
}

def @func_12894() -> Tensor[(768), float64] {
  %685 = @func_12785() /* ty=(Tensor[(768), float64], Tensor[(10, 13, 16), float64]) */;
  %685.0
}

def @func_4876() -> (Tensor[(10, 13, 16), float32],) {
  %686 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %687 = %686.0;
  (%687,)
}

def @func_16562() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %688 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  %689 = @func_10716() /* ty=Tensor[(10, 13, 16), float64] */;
  (%688, %689)
}

def @func_14363() -> Tensor[(10, 13, 16), float32] {
  @func_3554() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_11475(%var_11392: Tensor[(27), float32], %var_11442: Tensor[(14, 13, 9), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 10, 5), float64], Tensor[(14, 13, 9), bool], Tensor[(3, 16, 16), float32]) {
  %690 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %691 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %692 = cast(%var_11392, dtype="float32") /* ty=Tensor[(27), float32] */;
  %693 = reshape(%692, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %694 = @func_9659(%693) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %697 = erf(%696) /* ty=Tensor[(14, 13, 9), float32] */;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %699 = @func_10033() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %700 = @func_10651() /* ty=(Tensor[(13, 10, 5), float64],) */;
  %701 = cast(%var_11442, dtype="bool") /* ty=Tensor[(14, 13, 9), bool] */;
  %702 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%697, dtype="bool") /* ty=Tensor[(14, 13, 9), bool] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %705 = @func_7289() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %706 = %690.1;
  %707 = %691.0;
  %708 = asin(%698) /* ty=Tensor[(14, 13, 9), float32] */;
  %709 = %699.2;
  %710 = %700.0;
  %711 = logical_and(%703, %704) /* ty=Tensor[(14, 13, 9), bool] */;
  %712 = %705.0;
  (%706, %707, %var_11392, %708, %709, %710, %711, %712)
}

def @func_1470() -> (Tensor[(10, 13, 16), bool],) {
  %713 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %714 = %713.0;
  %715 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %716 = %715.0;
  %717 = cast(%716, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %718 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%714, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %721 = less(%719, %720) /* ty=Tensor[(10, 13, 16), bool] */;
  (%721,)
}

def @func_1437() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %722 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %723 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %724 = %722.0;
  %725 = %723.0;
  (%724, %725)
}

def @func_14261() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(10, 13, 16), float32]) {
  %726 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %727 = @func_5105() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %728 = @func_10087() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %729 = %728.0;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %731 = cast(meta[relay.Constant][15] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %732 = reshape(%730, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
  %733 = reshape(%731, newshape=[16, 48]) /* ty=Tensor[(16, 48), float64] */;
  %734 = @func_3813(%732, %733) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(6, 260), uint16], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(16, 48), float64], Tensor[(3, 16, 16), float32]) */;
  %735 = @func_11343() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %736 = %726.1;
  %737 = %727.0;
  %738 = @func_14182() /* ty=Tensor[(10, 13, 16), float64] */;
  %739 = @func_10450() /* ty=Tensor[(10, 13, 16), float32] */;
  %740 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  %741 = @func_6550() /* ty=Tensor[(10, 13, 16), float32] */;
  %742 = %734.3;
  %743 = %735.0;
  (%736, %737, %729, %738, %739, %740, %741, %742, meta[relay.Constant][15] /* ty=Tensor[(768), float64] */, %743)
}

def @func_14956() -> (Tensor[(10, 13, 16), float64],) {
  %744 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %745 = %744.1;
  (%745,)
}

def @func_5491() -> Tensor[(10, 13, 16), float64] {
  %746 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %746.1
}

def @func_6717() -> Tensor[(10, 13, 16), float64] {
  %747 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %747.0
}

def @func_15689() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %748 = @func_15513() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %749 = @func_3878() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %750 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %751 = %748.0;
  %752 = %749.1;
  %753 = @func_14751() /* ty=Tensor[(10, 13, 16), float32] */;
  %754 = %750.0;
  (%751, %752, %753, %754)
}

def @func_10878() -> (Tensor[(10, 13, 16), float32], Tensor[(13, 9, 10), int8], Tensor[(1170), int8], Tensor[(10, 13, 16), bool], Tensor[(14, 13, 9), float32], Tensor[(27), float32]) {
  %755 = @func_7662() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %756 = cast(meta[relay.Constant][16] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %757 = cast(meta[relay.Constant][16] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %758 = reshape(%756, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
  %759 = reshape(%757, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
  %760 = cast(meta[relay.Constant][17] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
  %761 = reshape(%760, newshape=[27]) /* ty=Tensor[(27), float32] */;
  %762 = @func_9659(%761) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */;
  %763 = %755.2;
  %764 = @func_1387(%758, %759) /* ty=Tensor[(13, 9, 10), int8] */;
  %765 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  %766 = %762.0;
  (%763, %764, meta[relay.Constant][16] /* ty=Tensor[(1170), int8] */, %765, %766, meta[relay.Constant][17] /* ty=Tensor[(27), float32] */)
}

def @func_6316() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %767 = @func_5604() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %768 = @func_3041() /* ty=Tensor[(10, 13, 16), float32] */;
  %769 = %767.1;
  (%768, %769)
}

def @func_9867() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(15, 9, 15), float32], Tensor[(135, 15), float32]) {
  %770 = @func_6957() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %771 = cast(meta[relay.Constant][18] /* ty=Tensor[(135, 15), float32] */, dtype="float32") /* ty=Tensor[(135, 15), float32] */;
  %772 = reshape(%771, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
  %773 = @func_5438(%772) /* ty=(Tensor[(15, 9, 15), float32],) */;
  %774 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %775 = %770.0;
  %776 = %773.0;
  (%774, %775, %776, meta[relay.Constant][18] /* ty=Tensor[(135, 15), float32] */)
}

def @func_6654() -> (Tensor[(10, 13, 16), bool],) {
  %777 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %778 = %777.0;
  (%778,)
}

def @func_7831() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %779 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %780 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %781 = %779.0;
  %782 = %780.0;
  (%781, %782)
}

def @func_10997(%var_10986: Tensor[(6, 16, 7), float32]) -> Tensor[(6, 16, 7), float32] {
  %783 = cast(%var_10986, dtype="float32") /* ty=Tensor[(6, 16, 7), float32] */;
  cosh(%783) /* ty=Tensor[(6, 16, 7), float32] */
}

def @func_6739() -> (Tensor[(10, 13, 16), bool],) {
  %784 = @func_6654() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %785 = %784.0;
  (%785,)
}

def @func_13917() -> (Tensor[(3, 16, 16), float32],) {
  %786 = @func_12858() /* ty=Tensor[(3, 16, 16), float32] */;
  (%786,)
}

def @func_8197(%var_8173: Tensor[(4, 14, 11), float32], %var_8174: Tensor[(4, 14, 11), float32]) -> (Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) {
  %787 = cast(%var_8174, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %788 = shape_of(%var_8173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_8173, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %791 = cast(%var_8174, dtype="uint8") /* ty=Tensor[(4, 14, 11), uint8] */;
  %792 = shape_of(%var_8173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%var_8173, dtype="uint8") /* ty=Tensor[(4, 14, 11), uint8] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %795 = floor_mod(%789, %790) /* ty=Tensor[(4, 14, 11), float32] */;
  %796 = left_shift(%793, %794) /* ty=Tensor[(4, 14, 11), uint8] */;
  (%795, %796)
}

def @func_1640(%var_1611: Tensor[(10, 13, 16), float64]) -> (Tensor[(10, 13, 16), int64], Tensor[(13, 15, 1), int64], Tensor[(1560), float64]) {
  %797 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %798 = %797.1;
  %799 = cast(%var_1611, dtype="int64") /* ty=Tensor[(10, 13, 16), int64] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="int64") /* ty=Tensor[(10, 13, 16), int64] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %803 = cast(meta[relay.Constant][19] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %804 = reshape(%803, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
  %805 = @func_679(%804) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
  %806 = cast(meta[relay.Constant][20] /* ty=Tensor[(1560), int8] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %807 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(1560), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %808 = cast(meta[relay.Constant][19] /* ty=Tensor[(1560), int8] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?), float64] */;
  %810 = multiply(%801, %802) /* ty=Tensor[(10, 13, 16), int64] */;
  %811 = %805.1;
  %812 = power(%808, %809) /* ty=Tensor[(1560), float64] */;
  (%810, %811, %812)
}

def @func_7331() -> (Tensor[(3, 16, 16), int16],) {
  %813 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %814 = %813.4;
  (%814,)
}

def @func_12003() -> (Tensor[(10, 13, 16), float32],) {
  %815 = @func_6957() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %816 = %815.0;
  (%816,)
}

def @func_13422(%var_13398: Tensor[(65, 4), float64], %var_13411: Tensor[(65, 4), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(65, 4), int32]) {
  %817 = cast(%var_13398, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %818 = reshape(%817, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %819 = @func_5963(%818) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(13, 4, 5), uint32]) */;
  %820 = cast(%var_13411, dtype="int32") /* ty=Tensor[(65, 4), int32] */;
  %821 = shape_of(%var_13398, dtype="int32") /* ty=Tensor[(2), int32] */;
  %822 = cast(%var_13398, dtype="int32") /* ty=Tensor[(65, 4), int32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %824 = @func_6963() /* ty=Tensor[(10, 13, 16), float32] */;
  %825 = %819.2;
  %826 = @func_12858() /* ty=Tensor[(3, 16, 16), float32] */;
  %827 = bitwise_or(%822, %823) /* ty=Tensor[(65, 4), int32] */;
  (%824, %825, %826, %827)
}

def @func_15176(%var_15163: Tensor[(6, 12, 16), float64], %var_15164: Tensor[(6, 12, 16), float64]) -> Tensor[(6, 12, 16), float64] {
  %828 = cast(%var_15164, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %829 = shape_of(%var_15163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%var_15163, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%830, %831) /* ty=Tensor[(6, 12, 16), float64] */
}

def @func_679(%var_662: Tensor[(13, 8, 15), int8]) -> (Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) {
  %832 = cast(%var_662, dtype="bool") /* ty=Tensor[(13, 8, 15), bool] */;
  %833 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(13, 8, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 8, 15), int8] */, dtype="bool") /* ty=Tensor[(13, 8, 15), bool] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %836 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %837 = reshape(%836, newshape=[]) /* ty=int64 */;
  %838 = @func_325(%837) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %839 = less_equal(%834, %835) /* ty=Tensor[(13, 8, 15), bool] */;
  %840 = %838.0;
  (%839, %840, 6 /* ty=int64 */)
}

def @func_9141() -> Tensor[(10, 13, 16), float32] {
  %841 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %841.2
}

def @func_2616() -> (Tensor[(10, 13, 16), float32],) {
  %842 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%842,)
}

def @func_8761() -> (Tensor[(10, 13, 16), float32],) {
  %843 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %844 = %843.0;
  (%844,)
}

def @func_8024() -> (Tensor[(3, 16, 16), float32],) {
  %845 = @func_7289() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %846 = %845.0;
  (%846,)
}

def @func_15097(%var_15092: uint32, %var_15093: Tensor[(5, 12, 10), uint32]) -> Tensor[(5, 12, 10), uint32] {
  %847 = cast(%var_15092, dtype="uint32") /* ty=uint32 */;
  %848 = cast(%var_15093, dtype="uint32") /* ty=Tensor[(5, 12, 10), uint32] */;
  bitwise_xor(%847, %848) /* ty=Tensor[(5, 12, 10), uint32] */
}

def @func_5833() -> (Tensor[(10, 13, 16), float32],) {
  %849 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %850 = %849.0;
  (%850,)
}

def @func_1124() -> (Tensor[(10, 13, 16), float64],) {
  %851 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_16690() -> Tensor[(10, 13, 16), float32] {
  %853 = @func_7831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %853.1
}

def @func_7079(%var_7075: Tensor[(6, 8, 9), float32]) -> (Tensor[(6, 8, 9), float32],) {
  %854 = cast(%var_7075, dtype="float32") /* ty=Tensor[(6, 8, 9), float32] */;
  %855 = cos(%854) /* ty=Tensor[(6, 8, 9), float32] */;
  (%855,)
}

def @func_8674() -> (Tensor[(10, 13, 16), float64],) {
  %856 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %857 = %856.0;
  (%857,)
}

def @func_10276(%var_10261: Tensor[(13, 3, 2), uint32], %var_10262: Tensor[(13, 3, 2), uint32]) -> Tensor[(13, 3, 2), uint32] {
  %858 = cast(%var_10262, dtype="uint32") /* ty=Tensor[(13, 3, 2), uint32] */;
  %859 = shape_of(%var_10261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%var_10261, dtype="uint32") /* ty=Tensor[(13, 3, 2), uint32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%860, %861) /* ty=Tensor[(13, 3, 2), uint32] */
}

def @func_17006() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %862 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %863 = @func_14261() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(10, 13, 16), float32]) */;
  %864 = %862.0;
  %865 = %863.2;
  (%864, %865)
}

def @func_14074(%var_14017: Tensor[(525), uint64], %var_14027: Tensor[(525), uint64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(525), bool], Tensor[(2, 4, 15), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %866 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %867 = cast(%var_14017, dtype="uint64") /* ty=Tensor[(525), uint64] */;
  %868 = reshape(%867, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint64] */;
  %869 = @func_11843(%868) /* ty=(Tensor[(15, 7, 5), uint64], Tensor[(10, 13, 16), float64]) */;
  %870 = cast(%var_14027, dtype="bool") /* ty=Tensor[(525), bool] */;
  %871 = shape_of(%var_14017, dtype="int32") /* ty=Tensor[(1), int32] */;
  %872 = cast(%var_14017, dtype="bool") /* ty=Tensor[(525), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?), bool] */;
  %874 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %875 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %876 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %877 = %866.0;
  %878 = %869.1;
  %879 = less_equal(%872, %873) /* ty=Tensor[(525), bool] */;
  %880 = @func_9253() /* ty=Tensor[(2, 4, 15), float64] */;
  %881 = %874.1;
  %882 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %883 = %875.0;
  %884 = %876.0;
  (%877, %878, %879, %880, %881, %882, %883, %884)
}

def @func_875() -> (Tensor[(10, 13, 16), float32],) {
  %885 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %886 = %885.0;
  (%886,)
}

def @func_4043() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %887 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %888 = @func_3130() /* ty=Tensor[(10, 13, 16), float32] */;
  %889 = %887.1;
  (%888, %889)
}

def @func_3554() -> Tensor[(10, 13, 16), float32] {
  %890 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %890.0
}

def @func_13716() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %891 = @func_10319() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %892 = @func_9043() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %893 = %891.1;
  %894 = %892.0;
  %895 = @func_5491() /* ty=Tensor[(10, 13, 16), float64] */;
  (%893, %894, %895)
}

def @func_9378() -> Tensor[(10, 13, 16), float32] {
  %896 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %896.1
}

def @func_15035() -> (Tensor[(10, 13, 16), float64],) {
  %897 = @func_4921() /* ty=Tensor[(10, 13, 16), float64] */;
  (%897,)
}

def @func_3172() -> (Tensor[(15, 14, 8), float32],) {
  %898 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 8), float32] */;
  %899 = log10(%898) /* ty=Tensor[(15, 14, 8), float32] */;
  (%899,)
}

def @func_13230() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), bool]) {
  %900 = @func_3640() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %901 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %902 = %900.0;
  %903 = %901.0;
  (%902, %903)
}

def @func_5438(%var_5435: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), float32],) {
  %904 = cast(%var_5435, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %905 = sin(%904) /* ty=Tensor[(15, 9, 15), float32] */;
  (%905,)
}

def @func_12370() -> Tensor[(8, 11, 9), uint32] {
  %906 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 11, 9), uint32] */, dtype="uint32") /* ty=Tensor[(8, 11, 9), uint32] */;
  %907 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(8, 11, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 11, 9), uint32] */, dtype="uint32") /* ty=Tensor[(8, 11, 9), uint32] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%908, %909) /* ty=Tensor[(8, 11, 9), uint32] */
}

def @func_9604(%var_9555: Tensor[(54, 2), float32]) -> (Tensor[(10, 13, 16), bool], Tensor[(54, 2), bool], Tensor[(54, 2), float32], Tensor[(54, 2), float64]) {
  %910 = cast(%var_9555, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %911 = reshape(%910, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %912 = @func_8535(%911) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */;
  %913 = %912.0;
  %914 = cast(%913, dtype="bool") /* ty=Tensor[(9, 4, 3), bool] */;
  %915 = shape_of(%var_9555, dtype="int32") /* ty=Tensor[(2), int32] */;
  %916 = cast(%var_9555, dtype="bool") /* ty=Tensor[(54, 2), bool] */;
  %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %918 = cast(meta[relay.Constant][25] /* ty=Tensor[(54, 2), float32] */, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %919 = shape_of(%var_9555, dtype="int32") /* ty=Tensor[(2), int32] */;
  %920 = cast(%var_9555, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %922 = cast(meta[relay.Constant][25] /* ty=Tensor[(54, 2), float32] */, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %923 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  %924 = less(%916, %917) /* ty=Tensor[(54, 2), bool] */;
  %925 = divide(%920, %921) /* ty=Tensor[(54, 2), float32] */;
  %926 = exp(%922) /* ty=Tensor[(54, 2), float64] */;
  (%923, %924, %925, %926)
}

def @func_16869() -> (Tensor[(10, 13, 16), float32], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(14, 3), float64], Tensor[(10, 13, 16), float32]) {
  %927 = @func_1954() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %928 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
  %929 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %930 = reshape(%929, newshape=[1, 42]) /* ty=Tensor[(1, 42), float64] */;
  %931 = @func_8425(%930) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1, 42), float64]) */;
  %932 = %927.1;
  %933 = %928.0;
  %934 = %931.2;
  %935 = @func_9141() /* ty=Tensor[(10, 13, 16), float32] */;
  (%932, %933, %934, meta[relay.Constant][26] /* ty=Tensor[(14, 3), float64] */, %935)
}

def @func_14774() -> (Tensor[(3, 16, 16), int16],) {
  %936 = @func_14166() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1170), int8], Tensor[(3, 16, 16), int16], Tensor[(768), float32]) */;
  %937 = %936.4;
  (%937,)
}

def @func_3998(%var_3989: int64) -> (Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(10, 13, 16), float64]) {
  %938 = @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %939 = cast(%var_3989, dtype="int64") /* ty=int64 */;
  %940 = reshape(%939, newshape=[]) /* ty=int64 */;
  %941 = @func_325(%940) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %942 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %943 = %938.0;
  %944 = %941.0;
  %945 = %942.0;
  (%943, %944, %var_3989, %945)
}

def @func_16066() -> (Tensor[(10, 13, 16), float32],) {
  %946 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %947 = %946.0;
  (%947,)
}

def @func_3280() -> (Tensor[(10, 13, 16), float32],) {
  %948 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %949 = %948.1;
  (%949,)
}

def @func_13304() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %950 = @func_10256() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %951 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %952 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %953 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %954 = @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %955 = %950.4;
  %956 = %951.0;
  %957 = %952.0;
  %958 = %953.2;
  %959 = %954.0;
  (%955, %956, %957, %958, %959)
}

def @func_15513() -> (Tensor[(10, 13, 16), float64],) {
  %960 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %961 = %960.0;
  (%961,)
}

def @func_11510() -> (Tensor[(10, 13, 16), float64],) {
  %962 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %963 = %962.0;
  (%963,)
}

def @func_15769() -> (Tensor[(8, 11, 9), uint32], Tensor[(10, 13, 16), float32]) {
  %964 = @func_7596() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %965 = @func_12370() /* ty=Tensor[(8, 11, 9), uint32] */;
  %966 = %964.1;
  (%965, %966)
}

def @func_16636() -> Tensor[(10, 13, 16), float32] {
  @func_3360() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_4581() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %967 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %968 = %967.0;
  %969 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %970 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%968, %969, %970)
}

def @func_16987(%var_16980: Tensor[(600), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(600), uint32]) {
  %971 = @func_10878() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 9, 10), int8], Tensor[(1170), int8], Tensor[(10, 13, 16), bool], Tensor[(14, 13, 9), float32], Tensor[(27), float32]) */;
  %972 = @func_11958() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %973 = cast(%var_16980, dtype="uint32") /* ty=Tensor[(600), uint32] */;
  %974 = reshape(%973, newshape=[600]) /* ty=Tensor[(600), uint32] */;
  %975 = @func_15449(%974) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(5, 12, 10), uint32], uint32, Tensor[(600), uint32]) */;
  %976 = %971.0;
  %977 = %972.0;
  %978 = %975.4;
  (%976, %977, %978, %var_16980)
}

def @func_6466() -> (Tensor[(10, 13, 16), bool],) {
  %979 = @func_1954() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %980 = %979.2;
  (%980,)
}

def @func_3245(%var_3203: Tensor[(2, 10, 9), uint32], %var_3212: Tensor[(768), float32], %var_3215: Tensor[(2, 10, 9), uint32]) -> (Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) {
  %981 = cast(%var_3203, dtype="bool") /* ty=Tensor[(2, 10, 9), bool] */;
  %982 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(2, 10, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %983 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 10, 9), uint32] */, dtype="bool") /* ty=Tensor[(2, 10, 9), bool] */;
  %984 = dyn.reshape(%981, %982, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %985 = cast(%var_3212, dtype="float32") /* ty=Tensor[(768), float32] */;
  %986 = reshape(%985, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %987 = @func_2400(%986) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %988 = cast(%var_3215, dtype="uint16") /* ty=Tensor[(2, 10, 9), uint16] */;
  %989 = shape_of(%var_3203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_3203, dtype="uint16") /* ty=Tensor[(2, 10, 9), uint16] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %992 = greater_equal(%983, %984) /* ty=Tensor[(2, 10, 9), bool] */;
  %993 = %987.1;
  %994 = bitwise_or(%990, %991) /* ty=Tensor[(2, 10, 9), uint16] */;
  (%992, %993, %var_3212, %994)
}

def @func_2066() -> (Tensor[(10, 13, 16), float64],) {
  %995 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %996 = %995.1;
  (%996,)
}

def @func_5304() -> (Tensor[(10, 13, 16), float32],) {
  %997 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
  %998 = %997.0;
  (%998,)
}

def @func_6692() -> (Tensor[(10, 13, 16), float64],) {
  %999 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1000 = %999.1;
  (%1000,)
}

def @func_13987() -> Tensor[(10, 13, 16), bool] {
  %1001 = @func_10033() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %1001.2
}

def @func_5731() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1002 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  %1003 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1002, %1003)
}

def @func_2592() -> (Tensor[(10, 13, 16), float64],) {
  %1004 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1004,)
}

def @func_15632() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1005 = @func_12537() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) */;
  %1006 = @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1007 = %1005.0;
  %1008 = %1006.0;
  (%1007, %1008)
}

def @func_4643() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1009 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1010 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1011 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1012 = %1009.0;
  %1013 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %1014 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  %1015 = %1010.1;
  %1016 = %1011.2;
  (%1012, %1013, %1014, %1015, %1016)
}

def @func_5105() -> (Tensor[(10, 13, 16), float32],) {
  %1017 = @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1018 = %1017.0;
  (%1018,)
}

def @func_921() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1019 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1020 = %1019.1;
  %1021 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1020, %1021)
}

def @func_9659(%var_9644: Tensor[(27), float32]) -> (Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) {
  %1022 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %1023 = cast(%var_9644, dtype="float32") /* ty=Tensor[(27), float32] */;
  %1024 = reshape(%1023, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %1025 = @func_9524(%1024) /* ty=(Tensor[(3, 3, 3), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1026 = log2(%1022) /* ty=Tensor[(14, 13, 9), float32] */;
  %1027 = %1025.3;
  (%1026, %1027, %var_9644)
}

def @func_13065(%var_13010: Tensor[(6, 4, 15), int8], %var_13015: Tensor[(6, 4, 15), int8], %var_13025: Tensor[(6, 4, 15), bool], %var_13062: int64, %var_13063: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), int8], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 4, 15), float32], Tensor[(10, 13, 16), float32], int64, Tensor[(768), float32]) {
  %1028 = @func_3878() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1029 = cast(%var_13010, dtype="bool") /* ty=Tensor[(6, 4, 15), bool] */;
  %1030 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(6, 4, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 4, 15), int8] */, dtype="bool") /* ty=Tensor[(6, 4, 15), bool] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1033 = greater_equal(%1031, %1032) /* ty=Tensor[(6, 4, 15), bool] */;
  %1034 = cast(%var_13025, dtype="int8") /* ty=Tensor[(6, 4, 15), int8] */;
  %1035 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%1033, dtype="int8") /* ty=Tensor[(6, 4, 15), int8] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1038 = cast(%var_13015, dtype="uint8") /* ty=Tensor[(6, 4, 15), uint8] */;
  %1039 = shape_of(%var_13010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%var_13010, dtype="uint8") /* ty=Tensor[(6, 4, 15), uint8] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1042 = logical_xor(%1040, %1041) /* ty=Tensor[(6, 4, 15), uint8] */;
  %1043 = cast(%1042, dtype="int16") /* ty=Tensor[(6, 4, 15), int16] */;
  %1044 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1045 = cast(%1033, dtype="int16") /* ty=Tensor[(6, 4, 15), int16] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1047 = multiply(%1045, %1046) /* ty=Tensor[(6, 4, 15), int16] */;
  %1048 = cast(%1047, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %1049 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(%1033, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1052 = cast(%var_13025, dtype="float32") /* ty=Tensor[(6, 4, 15), float32] */;
  %1053 = asin(%1052) /* ty=Tensor[(6, 4, 15), float32] */;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(6, 4, 15), float32] */;
  %1055 = cast(%var_13062, dtype="int64") /* ty=int64 */;
  %1056 = cast(%var_13063, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1057 = reshape(%1055, newshape=[]) /* ty=int64 */;
  %1058 = reshape(%1056, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %1059 = @func_2892(%1057, %1058) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */;
  %1060 = %1028.2;
  %1061 = add(%1036, %1037) /* ty=Tensor[(6, 4, 15), int8] */;
  %1062 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  %1063 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %1064 = floor_mod(%1050, %1051) /* ty=Tensor[(6, 4, 15), float64] */;
  %1065 = sqrt(%1054) /* ty=Tensor[(6, 4, 15), float32] */;
  %1066 = %1059.3;
  (%1060, %1061, %1062, %1063, %1064, %1065, %1066, %var_13062, %var_13063)
}

def @func_4759() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1067 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1068 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %1069 = %1067.0;
  %1070 = %1068.1;
  (%1069, %1070)
}

def @func_9464() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1071 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1072 = %1071.0;
  %1073 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1072, %1073)
}

def @func_4946() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1074 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1075 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1076 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1077 = %1074.2;
  %1078 = %1075.0;
  %1079 = %1076.0;
  (%1077, %1078, %1079)
}

def @func_7791() -> Tensor[(10, 13, 16), float32] {
  %1080 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1080.0
}

def @func_584() -> Tensor[(10, 13, 16), float64] {
  %1081 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  sqrt(%1082) /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_9395() -> Tensor[(10, 13, 16), float64] {
  @func_5491() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_10450() -> Tensor[(10, 13, 16), float32] {
  %1083 = @func_7831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1083.1
}

def @func_7289() -> (Tensor[(3, 16, 16), float32],) {
  %1084 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1085 = %1084.2;
  (%1085,)
}

def @func_2342() -> Tensor[(10, 13, 16), float32] {
  %1086 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1086.0
}

def @func_7437() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1087 = @func_4043() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1088 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1089 = %1087.1;
  %1090 = %1088.0;
  (%1089, %1090)
}

def @func_7263() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1091 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1092 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  %1093 = %1091.1;
  (%1092, %1093)
}

def @func_12054(%var_12045: int64) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 15, 1), int64], int64) {
  %1094 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1095 = cast(%var_12045, dtype="int64") /* ty=int64 */;
  %1096 = reshape(%1095, newshape=[]) /* ty=int64 */;
  %1097 = @func_325(%1096) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %1098 = %1094.0;
  %1099 = %1097.0;
  (%1098, %1099, %var_12045)
}

def @func_16375() -> (Tensor[(10, 13, 16), bool],) {
  %1100 = @func_11212() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %1101 = %1100.2;
  (%1101,)
}

def @func_16797() -> (Tensor[(10, 13, 16), float64],) {
  %1102 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1102,)
}

def @func_2207() -> Tensor[(10, 13, 16), float64] {
  %1103 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1103.0
}

def @func_4211() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) {
  %1104 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1105 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1106 = cast(meta[relay.Constant][30] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
  %1107 = reshape(%1106, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
  %1108 = @func_679(%1107) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
  %1109 = %1104.0;
  %1110 = %1105.1;
  %1111 = %1108.0;
  (%1109, %1110, %1111, meta[relay.Constant][30] /* ty=Tensor[(1560), int8] */)
}

def @func_3878() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1112 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1113 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1114 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1115 = %1112.1;
  %1116 = @func_3130() /* ty=Tensor[(10, 13, 16), float32] */;
  %1117 = %1113.0;
  %1118 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
  %1119 = %1114.0;
  (%1115, %1116, %1117, %1118, %1119)
}

def @func_13566() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1120 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1121 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1122 = @func_10450() /* ty=Tensor[(10, 13, 16), float32] */;
  %1123 = %1120.1;
  %1124 = %1121.0;
  (%1122, %1123, %1124)
}

def @func_5719() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %1125 = @func_4177() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1126 = @func_5206() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1127 = %1125.0;
  %1128 = %1126.0;
  (%1127, %1128)
}

def @func_17289(%var_17265: Tensor[(15, 14, 4), int32], %var_17266: Tensor[(15, 14, 4), int32], %var_17271: Tensor[(15, 14, 4), bool]) -> (Tensor[(15, 14, 4), bool], Tensor[(10, 13, 16), bool], Tensor[(15, 14, 4), int64]) {
  %1129 = cast(%var_17266, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %1130 = shape_of(%var_17265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%var_17265, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1133 = less_equal(%1131, %1132) /* ty=Tensor[(15, 14, 4), bool] */;
  %1134 = cast(%var_17271, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %1135 = shape_of(%1133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%1133, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1138 = @func_13387() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %1139 = cast(%1133, dtype="int64") /* ty=Tensor[(15, 14, 4), int64] */;
  %1140 = shape_of(%var_17271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%var_17271, dtype="int64") /* ty=Tensor[(15, 14, 4), int64] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1143 = greater(%1136, %1137) /* ty=Tensor[(15, 14, 4), bool] */;
  %1144 = %1138.1;
  %1145 = maximum(%1141, %1142) /* ty=Tensor[(15, 14, 4), int64] */;
  (%1143, %1144, %1145)
}

def @func_7692() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float32]) {
  %1146 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1147 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1148 = cast(meta[relay.Constant][31] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1149 = reshape(%1148, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %1150 = @func_2400(%1149) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %1151 = %1146.1;
  %1152 = %1147.2;
  %1153 = %1150.3;
  (%1151, %1152, %1153, meta[relay.Constant][31] /* ty=Tensor[(768), float32] */)
}

def @func_14166() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1170), int8], Tensor[(3, 16, 16), int16], Tensor[(768), float32]) {
  %1154 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1155 = @func_5833() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1156 = cast(meta[relay.Constant][32] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %1157 = reshape(%1156, newshape=[1170]) /* ty=Tensor[(1170), int8] */;
  %1158 = @func_11605(%1157) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(2, 4, 15), float64], Tensor[(13, 9, 10), uint64], Tensor[(10, 13, 16), float64]) */;
  %1159 = cast(meta[relay.Constant][33] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1160 = reshape(%1159, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %1161 = @func_2400(%1160) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %1162 = %1154.0;
  %1163 = %1155.0;
  %1164 = %1158.0;
  %1165 = %1161.2;
  (%1162, %1163, %1164, meta[relay.Constant][32] /* ty=Tensor[(1170), int8] */, %1165, meta[relay.Constant][33] /* ty=Tensor[(768), float32] */)
}

def @func_4282() -> (Tensor[(13, 14, 8), float64], Tensor[(10, 13, 16), float64]) {
  %1166 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
  %1167 = atan(%1166) /* ty=Tensor[(13, 14, 8), float64] */;
  %1168 = @func_2159() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1167, %1168)
}

def @func_3147(%var_3140: Tensor[(4, 1, 3), float32]) -> Tensor[(4, 1, 3), float32] {
  %1169 = cast(%var_3140, dtype="float32") /* ty=Tensor[(4, 1, 3), float32] */;
  log10(%1169) /* ty=Tensor[(4, 1, 3), float32] */
}

def @func_14182() -> Tensor[(10, 13, 16), float64] {
  %1170 = @func_13566() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1170.2
}

def @func_15723() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1171 = @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %1172 = @func_7596() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1173 = %1171.0;
  %1174 = %1172.1;
  (%1173, %1174)
}

def @func_7063() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(4, 1, 3), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) {
  %1175 = @func_5666() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1176 = @func_4759() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1177 = cast(meta[relay.Constant][35] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1178 = reshape(%1177, newshape=[4, 1, 3]) /* ty=Tensor[(4, 1, 3), float32] */;
  %1179 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1180 = %1175.0;
  %1181 = %1176.0;
  %1182 = @func_3147(%1178) /* ty=Tensor[(4, 1, 3), float32] */;
  %1183 = %1179.0;
  (%1180, %1181, %1182, meta[relay.Constant][35] /* ty=Tensor[(12), float32] */, %1183)
}

def @func_2794() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) {
  %1184 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1185 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1186 = @func_1954() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %1187 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 96), float32] */, dtype="float32") /* ty=Tensor[(8, 96), float32] */;
  %1188 = reshape(%1187, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %1189 = @func_2400(%1188) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %1190 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  %1191 = %1184.0;
  %1192 = %1185.0;
  %1193 = %1186.2;
  %1194 = %1189.2;
  (%1190, %1191, %1192, %1193, %1194, meta[relay.Constant][36] /* ty=Tensor[(8, 96), float32] */)
}

def @func_10033() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  %1195 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1196 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1197 = %1195.0;
  %1198 = @func_8912() /* ty=Tensor[(10, 13, 16), float64] */;
  %1199 = %1196.0;
  %1200 = @func_6550() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1197, %1198, %1199, %1200)
}

def @func_9275() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32]) {
  %1201 = @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %1202 = @func_9141() /* ty=Tensor[(10, 13, 16), float32] */;
  %1203 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %1204 = %1201.0;
  (%1202, %1203, %1204)
}

def @func_9338() -> (Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32]) {
  %1205 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
  %1206 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1207 = %1205.0;
  %1208 = %1206.0;
  (%1207, %1208)
}

def @func_10651() -> (Tensor[(13, 10, 5), float64],) {
  %1209 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 5), float64] */;
  %1210 = tan(%1209) /* ty=Tensor[(13, 10, 5), float64] */;
  (%1210,)
}

def @func_12831() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %1211 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1212 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1213 = %1211.0;
  %1214 = @func_4978() /* ty=Tensor[(10, 13, 16), float64] */;
  %1215 = %1212.0;
  (%1213, %1214, %1215)
}

def @func_11287(%var_11271: Tensor[(180), uint32], %var_11272: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(768), float32], Tensor[(180), uint32], Tensor[(768), float32]) {
  %1216 = @func_11093() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1217 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1218 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1219 = cast(%var_11271, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %1220 = cast(%var_11272, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1221 = cast(%var_11271, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %1222 = reshape(%1219, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
  %1223 = reshape(%1220, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %1224 = reshape(%1221, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
  %1225 = @func_3245(%1222, %1223, %1224) /* ty=(Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) */;
  %1226 = %1216.0;
  %1227 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  %1228 = %1217.0;
  %1229 = %1218.0;
  %1230 = %1225.2;
  (%1226, %1227, %1228, %1229, %1230, %var_11271, %var_11272)
}

def @func_14686() -> Tensor[(10, 13, 16), float32] {
  %1231 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1231.1
}

def @func_6550() -> Tensor[(10, 13, 16), float32] {
  %1232 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1232.0
}

def @func_8835() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), float64], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(10, 13, 16), bool]) {
  %1233 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1234 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %1235 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
  %1236 = @func_5719() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1237 = cast(meta[relay.Constant][38] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1238 = reshape(%1237, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %1239 = @func_8535(%1238) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */;
  %1240 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1241 = %1233.0;
  %1242 = %1234.2;
  %1243 = %1235.2;
  %1244 = %1236.0;
  %1245 = %1239.0;
  %1246 = %1240.0;
  (%1241, %1242, %1243, %1244, %1245, meta[relay.Constant][38] /* ty=Tensor[(108), float32] */, %1246)
}

def @func_2679() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1247 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1248 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1249 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1250 = %1247.0;
  %1251 = %1248.0;
  %1252 = %1249.0;
  (%1250, %1251, %1252)
}

def @func_700() -> Tensor[(10, 13, 16), float32] {
  %1253 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1253.0
}

def @func_8425(%var_8416: Tensor[(1, 42), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1, 42), float64]) {
  %1254 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1255 = @func_4121() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1256 = cast(%var_8416, dtype="float64") /* ty=Tensor[(1, 42), float64] */;
  %1257 = reshape(%1256, newshape=[1, 3, 14]) /* ty=Tensor[(1, 3, 14), float64] */;
  %1258 = @func_6885(%1257) /* ty=(Tensor[(1, 3, 14), float64], Tensor[(10, 13, 16), float32]) */;
  %1259 = %1254.0;
  %1260 = %1255.2;
  %1261 = %1258.1;
  (%1259, %1260, %1261, %var_8416)
}

def @func_2276() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1262 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1263 = @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1264 = %1262.0;
  %1265 = %1263.0;
  (%1264, %1265)
}

def @func_1090() -> (Tensor[(10, 13, 16), float64],) {
  %1266 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1266,)
}

def @func_12660() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  %1267 = @func_7692() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float32]) */;
  %1268 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1269 = %1267.0;
  %1270 = %1268.0;
  (%1269, %1270)
}

def @func_2225() -> (Tensor[(10, 13, 16), float64],) {
  %1271 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1272 = %1271.0;
  (%1272,)
}

def @func_2739() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1273 = @func_1289() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1274 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1275 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1276 = %1273.0;
  %1277 = %1274.0;
  %1278 = %1275.0;
  (%1276, %1277, %1278)
}

def @func_10716() -> Tensor[(10, 13, 16), float64] {
  %1279 = @func_10256() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1279.0
}

def @func_558() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1280 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1281 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1282 = %1280.0;
  %1283 = %1281.0;
  (%1282, %1283)
}

def @func_13476(%var_13474: Tensor[(16, 48), float32]) -> (Tensor[(10, 13, 16), float64], Tensor[(2, 4, 15), float64], Tensor[(32, 24), float32], int64, Tensor[(16, 48), float32]) {
  %1284 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1285 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1286 = cast(%var_13474, dtype="float32") /* ty=Tensor[(16, 48), float32] */;
  %1287 = reshape(%1285, newshape=[]) /* ty=int64 */;
  %1288 = reshape(%1286, newshape=[32, 24]) /* ty=Tensor[(32, 24), float32] */;
  %1289 = @func_5050(%1287, %1288) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) */;
  %1290 = %1284.0;
  %1291 = @func_9253() /* ty=Tensor[(2, 4, 15), float64] */;
  %1292 = %1289.4;
  (%1290, %1291, %1292, -5 /* ty=int64 */, %var_13474)
}

def @func_16738(%var_16725: Tensor[(15, 3, 11), float64]) -> (Tensor[(15, 3, 11), float64],) {
  %1293 = cast(%var_16725, dtype="float64") /* ty=Tensor[(15, 3, 11), float64] */;
  %1294 = acosh(%1293) /* ty=Tensor[(15, 3, 11), float64] */;
  (%1294,)
}

def @func_15249(%var_15183: Tensor[(7, 16, 10), float64]) -> (Tensor[(7, 16, 10), bool], Tensor[(7, 16, 10), float64]) {
  %1295 = cast(%var_15183, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
  %1296 = erf(%1295) /* ty=Tensor[(7, 16, 10), float64] */;
  %1297 = cast(%var_15183, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %1298 = shape_of(%1296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1299 = cast(%1296, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1301 = cast(%1296, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %1302 = shape_of(%var_15183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1303 = cast(%var_15183, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1305 = equal(%1303, %1304) /* ty=Tensor[(7, 16, 10), bool] */;
  %1306 = cast(%1305, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
  %1307 = not_equal(%1299, %1300) /* ty=Tensor[(7, 16, 10), bool] */;
  %1308 = rsqrt(%1306) /* ty=Tensor[(7, 16, 10), float64] */;
  (%1307, %1308)
}

def @func_3130() -> Tensor[(10, 13, 16), float32] {
  %1309 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1309.0
}

def @func_9713() -> (Tensor[(10, 13, 16), float64],) {
  %1310 = @func_5206() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1311 = %1310.0;
  (%1311,)
}

def @func_3041() -> Tensor[(10, 13, 16), float32] {
  %1312 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1312.0
}

def @func_12704(%var_12694: Tensor[(180, 1), uint32], %var_12695: Tensor[(768, 1), float32], %var_12700: Tensor[(180, 5), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(180), uint32], Tensor[(768, 1), float32], Tensor[(180, 5), bool]) {
  %1313 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1314 = cast(%var_12694, dtype="uint32") /* ty=Tensor[(180, 1), uint32] */;
  %1315 = cast(%var_12695, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %1316 = reshape(%1314, newshape=[180]) /* ty=Tensor[(180), uint32] */;
  %1317 = reshape(%1315, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %1318 = @func_11287(%1316, %1317) /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(768), float32], Tensor[(180), uint32], Tensor[(768), float32]) */;
  %1319 = cast(%var_12694, dtype="bool") /* ty=Tensor[(180, 1), bool] */;
  %1320 = cast(%var_12700, dtype="bool") /* ty=Tensor[(180, 5), bool] */;
  %1321 = %1313.1;
  %1322 = %1318.5;
  %1323 = less(%1319, %1320) /* ty=Tensor[(180, 5), bool] */;
  (%1321, %1322, %var_12695, %1323)
}

def @func_5050(%var_5020: int64, %var_5021: Tensor[(32, 24), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) {
  %1324 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1325 = cast(%var_5020, dtype="int64") /* ty=int64 */;
  %1326 = cast(%var_5021, dtype="float32") /* ty=Tensor[(32, 24), float32] */;
  %1327 = reshape(%1325, newshape=[]) /* ty=int64 */;
  %1328 = reshape(%1326, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %1329 = @func_2892(%1327, %1328) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */;
  %1330 = cast(%var_5020, dtype="int64") /* ty=int64 */;
  %1331 = cast(%var_5021, dtype="float32") /* ty=Tensor[(32, 24), float32] */;
  %1332 = reshape(%1330, newshape=[]) /* ty=int64 */;
  %1333 = reshape(%1331, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %1334 = @func_2892(%1332, %1333) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */;
  %1335 = %1324.0;
  %1336 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %1337 = %1329.4;
  %1338 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %1339 = %1334.1;
  (%1335, %1336, %1337, %var_5020, %var_5021, %1338, %1339)
}

def @func_1233(%var_1217: Tensor[(10, 13, 16), float64], %var_1227: Tensor[(10, 13, 16), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), int8]) {
  %1340 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1341 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1342 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1343 = %1342.1;
  %1344 = cast(%var_1217, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %1345 = shape_of(%1343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1346 = cast(%1343, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1348 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1349 = %1348.1;
  %1350 = cast(%var_1227, dtype="int8") /* ty=Tensor[(10, 13, 16), int8] */;
  %1351 = shape_of(%1349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1352 = cast(%1349, dtype="int8") /* ty=Tensor[(10, 13, 16), int8] */;
  %1353 = dyn.reshape(%1350, %1351, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1354 = %1340.0;
  %1355 = %1341.0;
  %1356 = equal(%1346, %1347) /* ty=Tensor[(10, 13, 16), bool] */;
  %1357 = logical_xor(%1352, %1353) /* ty=Tensor[(10, 13, 16), int8] */;
  (%1354, %1355, %1356, %1357)
}

def @func_14622(%var_14602: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float32]) {
  %1358 = @func_11818() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1359 = @func_9338() /* ty=(Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32]) */;
  %1360 = @func_6654() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1361 = cast(%var_14602, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1362 = reshape(%1361, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %1363 = @func_2400(%1362) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %1364 = %1358.0;
  %1365 = %1359.0;
  %1366 = %1360.0;
  %1367 = @func_3041() /* ty=Tensor[(10, 13, 16), float32] */;
  %1368 = %1363.0;
  (%1364, %1365, %1366, %1367, %1368, %var_14602)
}

def @func_17210() -> Tensor[(10, 13, 16), float64] {
  @func_15928() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_325(%var_319: int64) -> (Tensor[(13, 15, 1), int64],) {
  %1369 = cast(%var_319, dtype="int64") /* ty=int64 */;
  %1370 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 15, 1), int64] */, dtype="int64") /* ty=Tensor[(13, 15, 1), int64] */;
  %1371 = subtract(%1369, %1370) /* ty=Tensor[(13, 15, 1), int64] */;
  (%1371,)
}

def @func_11093() -> (Tensor[(10, 13, 16), bool],) {
  %1372 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  (%1372,)
}

def @func_16912() -> Tensor[(10, 13, 16), float32] {
  %1373 = @func_4759() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1373.1
}

def @func_8490() -> Tensor[(10, 13, 16), bool] {
  %1374 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1374.0
}

def @func_2892(%var_2833: int64, %var_2859: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) {
  %1375 = @func_2103() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1376 = cast(%var_2859, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1377 = reshape(%1376, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %1378 = @func_2400(%1377) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %1379 = cast(%var_2833, dtype="int64") /* ty=int64 */;
  %1380 = reshape(%1379, newshape=[]) /* ty=int64 */;
  %1381 = @func_325(%1380) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %1382 = %1381.0;
  %1383 = cast(%var_2859, dtype="int8") /* ty=Tensor[(768), int8] */;
  %1384 = cast(%1382, dtype="int8") /* ty=Tensor[(13, 15, 1), int8] */;
  %1385 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1386 = %1375.0;
  %1387 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %1388 = %1378.1;
  %1389 = minimum(%1383, %1384) /* ty=Tensor[(13, 15, 768), int8] */;
  %1390 = %1385.0;
  (%1386, %var_2833, %1387, %1388, %1389, %1390)
}

def @func_4703() -> (Tensor[(10, 13, 16), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), int8]) {
  %1391 = cast(meta[relay.Constant][40] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %1392 = cast(meta[relay.Constant][40] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %1393 = reshape(%1391, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
  %1394 = reshape(%1392, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
  %1395 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
  %1396 = @func_1387(%1393, %1394) /* ty=Tensor[(13, 9, 10), int8] */;
  (%1395, %1396, meta[relay.Constant][40] /* ty=Tensor[(1170), int8] */)
}

def @func_4978() -> Tensor[(10, 13, 16), float64] {
  %1397 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1397.1
}

def @func_13814() -> Tensor[(10, 13, 16), float64] {
  @func_2159() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_12537() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) {
  %1398 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1399 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1400 = cast(meta[relay.Constant][41] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1401 = reshape(%1400, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %1402 = @func_8535(%1401) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */;
  %1403 = %1398.0;
  %1404 = %1399.1;
  %1405 = %1402.0;
  %1406 = @func_12370() /* ty=Tensor[(8, 11, 9), uint32] */;
  (%1403, %1404, %1405, meta[relay.Constant][41] /* ty=Tensor[(108), float32] */, %1406)
}

def @func_3945(%var_3926: Tensor[(7, 4, 10), float32]) -> (Tensor[(7, 4, 10), float32], Tensor[(10, 13, 16), float32]) {
  %1407 = cast(%var_3926, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
  %1408 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1409 = log(%1407) /* ty=Tensor[(7, 4, 10), float32] */;
  %1410 = %1408.1;
  (%1409, %1410)
}

def @func_15462() -> (Tensor[(10, 13, 16), float32],) {
  %1411 = @func_15160() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1412 = %1411.0;
  (%1412,)
}

def @func_5272() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1413 = @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1414 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %1415 = %1413.0;
  (%1414, %1415)
}

def @func_627() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1416 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1417 = %1416.0;
  %1418 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1417, %1418)
}

def @func_10087() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1419 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1420 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1421 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1422 = %1419.0;
  %1423 = %1420.1;
  %1424 = %1421.0;
  (%1422, %1423, %1424)
}

def @func_7556() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1425 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1426 = %1425.0;
  %1427 = @func_6717() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1426, %1427)
}

def @func_11818() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %1428 = @func_5719() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1429 = @func_5731() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1430 = @func_4177() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1431 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1432 = %1428.0;
  %1433 = %1429.0;
  %1434 = %1430.1;
  %1435 = %1431.1;
  (%1432, %1433, %1434, %1435)
}

def @func_2286() -> (Tensor[(10, 13, 16), float32],) {
  %1436 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1436,)
}

def @func_1175() -> (Tensor[(10, 13, 16), float32],) {
  %1437 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1438 = %1437.0;
  (%1438,)
}

def @func_16620() -> (Tensor[(10, 13, 16), float64],) {
  %1439 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1440 = %1439.0;
  (%1440,)
}

def @func_6273() -> Tensor[(10, 13, 16), float32] {
  %1441 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1441.0
}

def @func_2715() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1442 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1443 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  %1444 = %1442.0;
  (%1443, %1444)
}

def @func_13960() -> (Tensor[(10, 13, 16), float32],) {
  %1445 = @func_5604() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1446 = %1445.0;
  (%1446,)
}

def @func_8739() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(4, 14, 11), float32], Tensor[(616), float32]) {
  %1447 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1448 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1449 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1450 = @func_4121() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1451 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1452 = reshape(%1451, newshape=[]) /* ty=int64 */;
  %1453 = @func_325(%1452) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %1454 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %1455 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %1456 = reshape(%1454, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
  %1457 = reshape(%1455, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
  %1458 = @func_8197(%1456, %1457) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) */;
  %1459 = @func_2159() /* ty=Tensor[(10, 13, 16), float64] */;
  %1460 = %1447.2;
  %1461 = %1448.0;
  %1462 = %1449.1;
  %1463 = %1450.1;
  %1464 = %1453.0;
  %1465 = %1458.0;
  (%1459, %1460, %1461, %1462, %1463, %1464, 8 /* ty=int64 */, %1465, meta[relay.Constant][42] /* ty=Tensor[(616), float32] */)
}

def @func_14948() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1466 = @func_4581() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1467 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1468 = %1466.0;
  %1469 = %1467.0;
  (%1468, %1469)
}

def @func_4333() -> (Tensor[(10, 13, 16), float32],) {
  %1470 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1471 = %1470.1;
  (%1471,)
}

def @func_9752() -> (Tensor[(10, 13, 16), float32],) {
  %1472 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1473 = %1472.0;
  (%1473,)
}

def @func_15965() -> (Tensor[(10, 13, 16), float32],) {
  %1474 = @func_12831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1475 = %1474.0;
  (%1475,)
}

def @func_12858() -> Tensor[(3, 16, 16), float32] {
  %1476 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %1476.1
}

def @func_1387(%var_1382: Tensor[(13, 9, 10), int8], %var_1383: Tensor[(13, 9, 10), int8]) -> Tensor[(13, 9, 10), int8] {
  %1477 = cast(%var_1383, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
  %1478 = shape_of(%var_1382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1479 = cast(%var_1382, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
  %1480 = dyn.reshape(%1477, %1478, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%1479, %1480) /* ty=Tensor[(13, 9, 10), int8] */
}

def @func_2451() -> (Tensor[(10, 13, 16), float32],) {
  %1481 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1481,)
}

def @func_1734() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1482 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1483 = %1482.0;
  %1484 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1483, %1484)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8914() -> Tensor[(10, 13, 16), float64] {
  @func_8912() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_167(%var_144: Tensor[(2, 10, 7), int8], %var_145: Tensor[(2, 10, 7), int8]) -> (Tensor[(2, 10, 7), int8],) {
  %0 = cast(%var_145, dtype="int8") /* ty=Tensor[(2, 10, 7), int8] */;
  %1 = shape_of(%var_144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_144, dtype="int8") /* ty=Tensor[(2, 10, 7), int8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %4 = bitwise_xor(%2, %3) /* ty=Tensor[(2, 10, 7), int8] */;
  (%4,)
}

def @func_2179() -> Tensor[(10, 13, 16), float64] {
  %6 = fn () -> Tensor[(10, 13, 16), float64] {
    %5 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %5.0
  };
  %6() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_8201(%var_8199: Tensor[(4, 14, 11), float32], %var_8200: Tensor[(4, 14, 11), float32]) -> (Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) {
  @func_8197(%var_8199, %var_8200) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) */
}

def @func_6959() -> (Tensor[(10, 13, 16), float32],) {
  @func_6957() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_1734() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %7 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %8 = %7.0;
  %9 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  (%8, %9)
}

def @func_7557() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %13 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %10 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %11 = %10.0;
    %12 = @func_6717() /* ty=Tensor[(10, 13, 16), float64] */;
    (%11, %12)
  };
  %13() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_10319() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %14 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %15 = %14.0;
  %16 = @func_6273() /* ty=Tensor[(10, 13, 16), float32] */;
  (%15, %16)
}

def @func_6080() -> Tensor[(10, 13, 16), float32] {
  %17 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
  %17.0
}

def @func_13989() -> Tensor[(10, 13, 16), bool] {
  @func_13987() /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_6957() -> (Tensor[(10, 13, 16), float32],) {
  %18 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %19 = %18.0;
  (%19,)
}

def @func_12708(%var_12705: Tensor[(180, 1), uint32], %var_12706: Tensor[(768, 1), float32], %var_12707: Tensor[(180, 5), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(180), uint32], Tensor[(768, 1), float32], Tensor[(180, 5), bool]) {
  %31 = fn (%var_12694: Tensor[(180, 1), uint32], %var_12695: Tensor[(768, 1), float32], %var_12700: Tensor[(180, 5), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(180), uint32], Tensor[(768, 1), float32], Tensor[(180, 5), bool]) {
    %20 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %21 = cast(%var_12694, dtype="uint32") /* ty=Tensor[(180, 1), uint32] */;
    %22 = cast(%var_12695, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
    %23 = reshape(%21, newshape=[180]) /* ty=Tensor[(180), uint32] */;
    %24 = reshape(%22, newshape=[768]) /* ty=Tensor[(768), float32] */;
    %25 = @func_11287(%23, %24) /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(768), float32], Tensor[(180), uint32], Tensor[(768), float32]) */;
    %26 = cast(%var_12694, dtype="bool") /* ty=Tensor[(180, 1), bool] */;
    %27 = cast(%var_12700, dtype="bool") /* ty=Tensor[(180, 5), bool] */;
    %28 = %20.1;
    %29 = %25.5;
    %30 = less(%26, %27) /* ty=Tensor[(180, 5), bool] */;
    (%28, %29, %var_12695, %30)
  };
  %31(%var_12705, %var_12706, %var_12707) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(180), uint32], Tensor[(768, 1), float32], Tensor[(180, 5), bool]) */
}

def @func_14686() -> Tensor[(10, 13, 16), float32] {
  %32 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %32.1
}

def @func_7065() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(4, 1, 3), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) {
  @func_7063() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(4, 1, 3), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_14365() -> Tensor[(10, 13, 16), float32] {
  @func_14363() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_2618() -> (Tensor[(10, 13, 16), float32],) {
  @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_12003() -> (Tensor[(10, 13, 16), float32],) {
  %33 = @func_6957() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %34 = %33.0;
  (%34,)
}

def @func_11607(%var_11606: Tensor[(1170), int8]) -> (Tensor[(10, 13, 16), float32], Tensor[(2, 4, 15), float64], Tensor[(13, 9, 10), uint64], Tensor[(10, 13, 16), float64]) {
  %50 = fn (%var_11586: Tensor[(1170), int8]) -> (Tensor[(10, 13, 16), float32], Tensor[(2, 4, 15), float64], Tensor[(13, 9, 10), uint64], Tensor[(10, 13, 16), float64]) {
    %35 = @func_10689() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %36 = cast(%var_11586, dtype="int8") /* ty=Tensor[(1170), int8] */;
    %37 = cast(%var_11586, dtype="int8") /* ty=Tensor[(1170), int8] */;
    %38 = reshape(%36, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
    %39 = reshape(%37, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
    %40 = @func_1387(%38, %39) /* ty=Tensor[(13, 9, 10), int8] */;
    %41 = cast(%var_11586, dtype="uint64") /* ty=Tensor[(1170), uint64] */;
    %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
    %43 = cast(%40, dtype="uint64") /* ty=Tensor[(13, 9, 10), uint64] */;
    %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %45 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %46 = %35.0;
    %47 = @func_9253() /* ty=Tensor[(2, 4, 15), float64] */;
    %48 = bitwise_and(%43, %44) /* ty=Tensor[(13, 9, 10), uint64] */;
    %49 = %45.0;
    (%46, %47, %48, %49)
  };
  %50(%var_11606) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(2, 4, 15), float64], Tensor[(13, 9, 10), uint64], Tensor[(10, 13, 16), float64]) */
}

def @func_16435() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %55 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %51 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %52 = %51.0;
    %53 = @func_6550() /* ty=Tensor[(10, 13, 16), float32] */;
    %54 = @func_14182() /* ty=Tensor[(10, 13, 16), float64] */;
    (%52, %53, %54)
  };
  %55() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_16492() -> Tensor[(10, 13, 16), float32] {
  %56 = fn () -> Tensor[(10, 13, 16), float32] {
    @func_6273() /* ty=Tensor[(10, 13, 16), float32] */
  };
  %56() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_14166() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1170), int8], Tensor[(3, 16, 16), int16], Tensor[(768), float32]) {
  %57 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %58 = @func_5833() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %59 = cast(meta[relay.Constant][0] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
  %60 = reshape(%59, newshape=[1170]) /* ty=Tensor[(1170), int8] */;
  %61 = @func_11605(%60) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(2, 4, 15), float64], Tensor[(13, 9, 10), uint64], Tensor[(10, 13, 16), float64]) */;
  %62 = cast(meta[relay.Constant][1] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %63 = reshape(%62, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %64 = @func_2400(%63) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %65 = %57.0;
  %66 = %58.0;
  %67 = %61.0;
  %68 = %64.2;
  (%65, %66, %67, meta[relay.Constant][0] /* ty=Tensor[(1170), int8] */, %68, meta[relay.Constant][1] /* ty=Tensor[(768), float32] */)
}

def @func_9524(%var_9489: Tensor[(3, 3, 3), float32]) -> (Tensor[(3, 3, 3), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %69 = cast(%var_9489, dtype="float32") /* ty=Tensor[(3, 3, 3), float32] */;
  %70 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %71 = @func_6316() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %72 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %73 = exp(%69) /* ty=Tensor[(3, 3, 3), float32] */;
  %74 = %70.0;
  %75 = %71.0;
  %76 = %72.0;
  (%73, %74, %75, %76)
}

def @func_6964() -> Tensor[(10, 13, 16), float32] {
  %78 = fn () -> Tensor[(10, 13, 16), float32] {
    %77 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %77.0
  };
  %78() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_419() -> Tensor[(10, 13, 16), float32] {
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %80 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(10, 13, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %83 = power(%81, %82) /* ty=Tensor[(10, 13, 16), float64] */;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %85 = log10(%84) /* ty=Tensor[(10, 13, 16), float32] */;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  sin(%86) /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_15689() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %87 = @func_15513() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %88 = @func_3878() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %89 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %90 = %87.0;
  %91 = %88.1;
  %92 = @func_14751() /* ty=Tensor[(10, 13, 16), float32] */;
  %93 = %89.0;
  (%90, %91, %92, %93)
}

def @func_3947(%var_3946: Tensor[(7, 4, 10), float32]) -> (Tensor[(7, 4, 10), float32], Tensor[(10, 13, 16), float32]) {
  %98 = fn (%var_3926: Tensor[(7, 4, 10), float32]) -> (Tensor[(7, 4, 10), float32], Tensor[(10, 13, 16), float32]) {
    %94 = cast(%var_3926, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
    %95 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %96 = log(%94) /* ty=Tensor[(7, 4, 10), float32] */;
    %97 = %95.1;
    (%96, %97)
  };
  %98(%var_3946) /* ty=(Tensor[(7, 4, 10), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_13987() -> Tensor[(10, 13, 16), bool] {
  %99 = @func_10033() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %99.2
}

def @func_16068() -> (Tensor[(10, 13, 16), float32],) {
  @func_16066() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_16270(%var_16100: Tensor[(12, 8, 8), float32], %var_16220: Tensor[(360), int8], %var_16221: int64) -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(12, 8, 8), int8], Tensor[(6, 4, 15), int8], Tensor[(360), int8], int64, Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %100 = @func_6692() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %101 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %102 = @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %103 = @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %104 = cast(%var_16100, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %105 = atanh(%104) /* ty=Tensor[(12, 8, 8), float32] */;
  %106 = cast(%var_16100, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %107 = log2(%106) /* ty=Tensor[(12, 8, 8), float64] */;
  %108 = cast(%var_16100, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %109 = cosh(%108) /* ty=Tensor[(12, 8, 8), float64] */;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %111 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%107, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %114 = floor_divide(%112, %113) /* ty=Tensor[(12, 8, 8), float64] */;
  %115 = cast(%var_16100, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %116 = sqrt(%115) /* ty=Tensor[(12, 8, 8), float32] */;
  %117 = cast(%116, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %118 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%114, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = less_equal(%119, %120) /* ty=Tensor[(12, 8, 8), bool] */;
  %122 = cast(%121, dtype="int8") /* ty=Tensor[(12, 8, 8), int8] */;
  %123 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%105, dtype="int8") /* ty=Tensor[(12, 8, 8), int8] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %126 = cast(%var_16220, dtype="int8") /* ty=Tensor[(360), int8] */;
  %127 = cast(%var_16220, dtype="int8") /* ty=Tensor[(360), int8] */;
  %128 = cast(%var_16220, dtype="bool") /* ty=Tensor[(360), bool] */;
  %129 = cast(%var_16221, dtype="int64") /* ty=int64 */;
  %130 = cast(%114, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %131 = reshape(%126, newshape=[6, 4, 15]) /* ty=Tensor[(6, 4, 15), int8] */;
  %132 = reshape(%127, newshape=[6, 4, 15]) /* ty=Tensor[(6, 4, 15), int8] */;
  %133 = reshape(%128, newshape=[6, 4, 15]) /* ty=Tensor[(6, 4, 15), bool] */;
  %134 = reshape(%129, newshape=[]) /* ty=int64 */;
  %135 = reshape(%130, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %136 = @func_13065(%131, %132, %133, %134, %135) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), int8], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 4, 15), float32], Tensor[(10, 13, 16), float32], int64, Tensor[(768), float32]) */;
  %137 = @func_11093() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %138 = @func_15886() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %139 = @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %140 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %141 = %100.0;
  %142 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %143 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %144 = %101.0;
  %145 = %102.1;
  %146 = %103.0;
  %147 = bitwise_or(%124, %125) /* ty=Tensor[(12, 8, 8), int8] */;
  %148 = %136.1;
  %149 = %137.0;
  %150 = %138.0;
  %151 = %139.0;
  %152 = %140.0;
  %153 = @func_15928() /* ty=Tensor[(10, 13, 16), float64] */;
  (%141, %142, %143, %144, %145, %146, %147, %148, %var_16220, %var_16221, %149, %150, %151, %152, %153)
}

def @func_15097(%var_15092: uint32, %var_15093: Tensor[(5, 12, 10), uint32]) -> Tensor[(5, 12, 10), uint32] {
  %154 = cast(%var_15092, dtype="uint32") /* ty=uint32 */;
  %155 = cast(%var_15093, dtype="uint32") /* ty=Tensor[(5, 12, 10), uint32] */;
  bitwise_xor(%154, %155) /* ty=Tensor[(5, 12, 10), uint32] */
}

def @func_8197(%var_8173: Tensor[(4, 14, 11), float32], %var_8174: Tensor[(4, 14, 11), float32]) -> (Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) {
  %156 = cast(%var_8174, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %157 = shape_of(%var_8173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%var_8173, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %160 = cast(%var_8174, dtype="uint8") /* ty=Tensor[(4, 14, 11), uint8] */;
  %161 = shape_of(%var_8173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%var_8173, dtype="uint8") /* ty=Tensor[(4, 14, 11), uint8] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %164 = floor_mod(%158, %159) /* ty=Tensor[(4, 14, 11), float32] */;
  %165 = left_shift(%162, %163) /* ty=Tensor[(4, 14, 11), uint8] */;
  (%164, %165)
}

def @func_12371() -> Tensor[(8, 11, 9), uint32] {
  %170 = fn () -> Tensor[(8, 11, 9), uint32] {
    %166 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 11, 9), uint32] */, dtype="uint32") /* ty=Tensor[(8, 11, 9), uint32] */;
    %167 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 11, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %168 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 11, 9), uint32] */, dtype="uint32") /* ty=Tensor[(8, 11, 9), uint32] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    right_shift(%168, %169) /* ty=Tensor[(8, 11, 9), uint32] */
  };
  %170() /* ty=Tensor[(8, 11, 9), uint32] */
}

def @func_11093() -> (Tensor[(10, 13, 16), bool],) {
  %171 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  (%171,)
}

def @func_11843(%var_11823: Tensor[(15, 7, 5), uint64]) -> (Tensor[(15, 7, 5), uint64], Tensor[(10, 13, 16), float64]) {
  %172 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 7, 5), uint64] */, dtype="uint64") /* ty=Tensor[(15, 7, 5), uint64] */;
  %173 = shape_of(%var_11823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_11823, dtype="uint64") /* ty=Tensor[(15, 7, 5), uint64] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %176 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %177 = subtract(%174, %175) /* ty=Tensor[(15, 7, 5), uint64] */;
  %178 = %176.1;
  (%177, %178)
}

def @func_17007() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %183 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %179 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %180 = @func_14261() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(10, 13, 16), float32]) */;
    %181 = %179.0;
    %182 = %180.2;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_6274() -> Tensor[(10, 13, 16), float32] {
  %185 = fn () -> Tensor[(10, 13, 16), float32] {
    %184 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %184.0
  };
  %185() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_7289() -> (Tensor[(3, 16, 16), float32],) {
  %186 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %187 = %186.2;
  (%187,)
}

def @func_12130(%var_12128: Tensor[(2, 16, 13), float32], %var_12129: int64) -> (Tensor[(2, 16, 13), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 15, 1), int64], int64) {
  @func_12126(%var_12128, %var_12129) /* ty=(Tensor[(2, 16, 13), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 15, 1), int64], int64) */
}

def @func_17192(%var_17190: Tensor[(616), float32], %var_17191: Tensor[(1152), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(616), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(27), float32], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(4, 14, 11), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(4, 14, 11), int64]) {
  %228 = fn (%var_17080: Tensor[(616), float32], %var_17116: Tensor[(1152), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(616), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(27), float32], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(4, 14, 11), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(4, 14, 11), int64]) {
    %188 = @func_15345() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %189 = @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %190 = cast(meta[relay.Constant][7] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
    %191 = reshape(%190, newshape=[27]) /* ty=Tensor[(27), float32] */;
    %192 = @func_9659(%191) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */;
    %193 = cast(%var_17116, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %194 = cast(%var_17116, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %195 = reshape(%193, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
    %196 = reshape(%194, newshape=[6, 12, 16]) /* ty=Tensor[(6, 12, 16), float64] */;
    %197 = cast(%var_17080, dtype="float32") /* ty=Tensor[(616), float32] */;
    %198 = cast(%var_17080, dtype="float32") /* ty=Tensor[(616), float32] */;
    %199 = reshape(%197, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
    %200 = reshape(%198, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
    %201 = @func_8197(%199, %200) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) */;
    %202 = %201.1;
    %203 = cast(%202, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
    %204 = cos(%203) /* ty=Tensor[(4, 14, 11), float32] */;
    %205 = cast(%204, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
    %206 = acos(%205) /* ty=Tensor[(4, 14, 11), float64] */;
    %207 = cast(%206, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
    %208 = @func_5272() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %209 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %210 = @func_8674() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %211 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
    %212 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %213 = cast(%206, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
    %214 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(%204, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %217 = %188.0;
    %218 = %189.0;
    %219 = %192.2;
    %220 = @func_15176(%195, %196) /* ty=Tensor[(6, 12, 16), float64] */;
    %221 = tan(%207) /* ty=Tensor[(4, 14, 11), float64] */;
    %222 = %208.0;
    %223 = %209.2;
    %224 = %210.0;
    %225 = %211.0;
    %226 = %212.1;
    %227 = logical_xor(%215, %216) /* ty=Tensor[(4, 14, 11), int64] */;
    (%217, %var_17080, %218, %219, meta[relay.Constant][7] /* ty=Tensor[(27), float32] */, %220, %var_17116, %221, %222, %223, %224, %225, %226, %227)
  };
  %228(%var_17190, %var_17191) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(616), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(27), float32], Tensor[(6, 12, 16), float64], Tensor[(1152), float64], Tensor[(4, 14, 11), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(4, 14, 11), int64]) */
}

def @func_14948() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %229 = @func_4581() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %230 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %231 = %229.0;
  %232 = %230.0;
  (%231, %232)
}

def @func_10717() -> Tensor[(10, 13, 16), float64] {
  %234 = fn () -> Tensor[(10, 13, 16), float64] {
    %233 = @func_10256() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %233.0
  };
  %234() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_4244() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %235 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %236 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %237 = %235.0;
  (%236, %237)
}

def @func_8761() -> (Tensor[(10, 13, 16), float32],) {
  %238 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %239 = %238.0;
  (%239,)
}

def @func_15966() -> (Tensor[(10, 13, 16), float32],) {
  %242 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %240 = @func_12831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
    %241 = %240.0;
    (%241,)
  };
  %242() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_15347() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_15345() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_8739() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(4, 14, 11), float32], Tensor[(616), float32]) {
  %243 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %244 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %245 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %246 = @func_4121() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %247 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %248 = reshape(%247, newshape=[]) /* ty=int64 */;
  %249 = @func_325(%248) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %250 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %251 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %252 = reshape(%250, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
  %253 = reshape(%251, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float32] */;
  %254 = @func_8197(%252, %253) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(4, 14, 11), uint8]) */;
  %255 = @func_2159() /* ty=Tensor[(10, 13, 16), float64] */;
  %256 = %243.2;
  %257 = %244.0;
  %258 = %245.1;
  %259 = %246.1;
  %260 = %249.0;
  %261 = %254.0;
  (%255, %256, %257, %258, %259, %260, 8 /* ty=int64 */, %261, meta[relay.Constant][8] /* ty=Tensor[(616), float32] */)
}

def @func_5175() -> (Tensor[(10, 13, 16), float32],) {
  @func_5173() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_12787() -> (Tensor[(768), float64], Tensor[(10, 13, 16), float64]) {
  @func_12785() /* ty=(Tensor[(768), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_10089() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_10087() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_16989(%var_16988: Tensor[(600), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(600), uint32]) {
  %270 = fn (%var_16980: Tensor[(600), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(600), uint32]) {
    %262 = @func_10878() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 9, 10), int8], Tensor[(1170), int8], Tensor[(10, 13, 16), bool], Tensor[(14, 13, 9), float32], Tensor[(27), float32]) */;
    %263 = @func_11958() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %264 = cast(%var_16980, dtype="uint32") /* ty=Tensor[(600), uint32] */;
    %265 = reshape(%264, newshape=[600]) /* ty=Tensor[(600), uint32] */;
    %266 = @func_15449(%265) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(5, 12, 10), uint32], uint32, Tensor[(600), uint32]) */;
    %267 = %262.0;
    %268 = %263.0;
    %269 = %266.4;
    (%267, %268, %269, %var_16980)
  };
  %270(%var_16988) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(600), uint32]) */
}

def @func_12785() -> (Tensor[(768), float64], Tensor[(10, 13, 16), float64]) {
  %271 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %272 = @func_4282() /* ty=(Tensor[(13, 14, 8), float64], Tensor[(10, 13, 16), float64]) */;
  %273 = %271.2;
  %274 = %272.1;
  (%273, %274)
}

def @func_10879() -> (Tensor[(10, 13, 16), float32], Tensor[(13, 9, 10), int8], Tensor[(1170), int8], Tensor[(10, 13, 16), bool], Tensor[(14, 13, 9), float32], Tensor[(27), float32]) {
  %287 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(13, 9, 10), int8], Tensor[(1170), int8], Tensor[(10, 13, 16), bool], Tensor[(14, 13, 9), float32], Tensor[(27), float32]) {
    %275 = @func_7662() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %276 = cast(meta[relay.Constant][9] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
    %277 = cast(meta[relay.Constant][9] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
    %278 = reshape(%276, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
    %279 = reshape(%277, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
    %280 = cast(meta[relay.Constant][10] /* ty=Tensor[(27), float32] */, dtype="float32") /* ty=Tensor[(27), float32] */;
    %281 = reshape(%280, newshape=[27]) /* ty=Tensor[(27), float32] */;
    %282 = @func_9659(%281) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */;
    %283 = %275.2;
    %284 = @func_1387(%278, %279) /* ty=Tensor[(13, 9, 10), int8] */;
    %285 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
    %286 = %282.0;
    (%283, %284, meta[relay.Constant][9] /* ty=Tensor[(1170), int8] */, %285, %286, meta[relay.Constant][10] /* ty=Tensor[(27), float32] */)
  };
  %287() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 9, 10), int8], Tensor[(1170), int8], Tensor[(10, 13, 16), bool], Tensor[(14, 13, 9), float32], Tensor[(27), float32]) */
}

def @func_16668() -> Tensor[(10, 13, 16), float64] {
  %288 = @func_16562() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %288.1
}

def @func_12971() -> (Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) {
  %293 = fn () -> (Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) {
    %289 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
    %290 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %291 = %289.4;
    %292 = %290.0;
    (%291, %292)
  };
  %293() /* ty=(Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */
}

def @func_16039() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64]) {
  @func_16037() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64]) */
}

def @func_7693() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float32]) {
  %302 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float32]) {
    %294 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %295 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %296 = cast(meta[relay.Constant][11] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
    %297 = reshape(%296, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
    %298 = @func_2400(%297) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
    %299 = %294.1;
    %300 = %295.2;
    %301 = %298.3;
    (%299, %300, %301, meta[relay.Constant][11] /* ty=Tensor[(768), float32] */)
  };
  %302() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float32]) */
}

def @func_12539() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) {
  @func_12537() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) */
}

def @func_17264() -> Tensor[(10, 13, 16), float64] {
  %304 = fn () -> Tensor[(10, 13, 16), float64] {
    %303 = @func_14526() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %303.0
  };
  %304() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_2068() -> (Tensor[(10, 13, 16), float64],) {
  @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_11095() -> (Tensor[(10, 13, 16), bool],) {
  @func_11093() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_13751() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %305 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %306 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %307 = %305.0;
  %308 = %306.0;
  (%307, %308)
}

def @func_15160() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %309 = @func_5173() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %310 = @func_7831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %311 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %312 = %309.0;
  %313 = %310.0;
  %314 = %311.0;
  (%312, %313, %314)
}

def @func_13065(%var_13010: Tensor[(6, 4, 15), int8], %var_13015: Tensor[(6, 4, 15), int8], %var_13025: Tensor[(6, 4, 15), bool], %var_13062: int64, %var_13063: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), int8], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 4, 15), float32], Tensor[(10, 13, 16), float32], int64, Tensor[(768), float32]) {
  %315 = @func_3878() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %316 = cast(%var_13010, dtype="bool") /* ty=Tensor[(6, 4, 15), bool] */;
  %317 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 15), int8] */, dtype="bool") /* ty=Tensor[(6, 4, 15), bool] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %320 = greater_equal(%318, %319) /* ty=Tensor[(6, 4, 15), bool] */;
  %321 = cast(%var_13025, dtype="int8") /* ty=Tensor[(6, 4, 15), int8] */;
  %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%320, dtype="int8") /* ty=Tensor[(6, 4, 15), int8] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %325 = cast(%var_13015, dtype="uint8") /* ty=Tensor[(6, 4, 15), uint8] */;
  %326 = shape_of(%var_13010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%var_13010, dtype="uint8") /* ty=Tensor[(6, 4, 15), uint8] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %329 = logical_xor(%327, %328) /* ty=Tensor[(6, 4, 15), uint8] */;
  %330 = cast(%329, dtype="int16") /* ty=Tensor[(6, 4, 15), int16] */;
  %331 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%320, dtype="int16") /* ty=Tensor[(6, 4, 15), int16] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %334 = multiply(%332, %333) /* ty=Tensor[(6, 4, 15), int16] */;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %336 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%320, dtype="float64") /* ty=Tensor[(6, 4, 15), float64] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %339 = cast(%var_13025, dtype="float32") /* ty=Tensor[(6, 4, 15), float32] */;
  %340 = asin(%339) /* ty=Tensor[(6, 4, 15), float32] */;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(6, 4, 15), float32] */;
  %342 = cast(%var_13062, dtype="int64") /* ty=int64 */;
  %343 = cast(%var_13063, dtype="float32") /* ty=Tensor[(768), float32] */;
  %344 = reshape(%342, newshape=[]) /* ty=int64 */;
  %345 = reshape(%343, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %346 = @func_2892(%344, %345) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */;
  %347 = %315.2;
  %348 = add(%323, %324) /* ty=Tensor[(6, 4, 15), int8] */;
  %349 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  %350 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %351 = floor_mod(%337, %338) /* ty=Tensor[(6, 4, 15), float64] */;
  %352 = sqrt(%341) /* ty=Tensor[(6, 4, 15), float32] */;
  %353 = %346.3;
  (%347, %348, %349, %350, %351, %352, %353, %var_13062, %var_13063)
}

def @func_12199() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %354 = @func_4581() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %355 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %356 = @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %357 = %354.1;
  %358 = %355.0;
  %359 = %356.0;
  (%357, %358, %359)
}

def @func_1736() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_4759() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %360 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %361 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %362 = %360.0;
  %363 = %361.1;
  (%362, %363)
}

def @func_6173() -> Tensor[(10, 13, 16), float32] {
  %365 = fn () -> Tensor[(10, 13, 16), float32] {
    %364 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %364.0
  };
  %365() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_13870() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) {
  %373 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) {
    %366 = @func_4121() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %367 = @func_4643() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %368 = cast(meta[relay.Constant][13] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %369 = reshape(%368, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %370 = %366.2;
    %371 = %367.0;
    %372 = @func_1015(%369) /* ty=Tensor[(3, 16, 16), float32] */;
    (%370, %371, %372, meta[relay.Constant][13] /* ty=Tensor[(768), float64] */)
  };
  %373() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */
}

def @func_15515() -> (Tensor[(10, 13, 16), float64],) {
  @func_15513() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_6654() -> (Tensor[(10, 13, 16), bool],) {
  %374 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %375 = %374.0;
  (%375,)
}

def @func_7291() -> (Tensor[(3, 16, 16), float32],) {
  @func_7289() /* ty=(Tensor[(3, 16, 16), float32],) */
}

def @func_5050(%var_5020: int64, %var_5021: Tensor[(32, 24), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) {
  %376 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %377 = cast(%var_5020, dtype="int64") /* ty=int64 */;
  %378 = cast(%var_5021, dtype="float32") /* ty=Tensor[(32, 24), float32] */;
  %379 = reshape(%377, newshape=[]) /* ty=int64 */;
  %380 = reshape(%378, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %381 = @func_2892(%379, %380) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */;
  %382 = cast(%var_5020, dtype="int64") /* ty=int64 */;
  %383 = cast(%var_5021, dtype="float32") /* ty=Tensor[(32, 24), float32] */;
  %384 = reshape(%382, newshape=[]) /* ty=int64 */;
  %385 = reshape(%383, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %386 = @func_2892(%384, %385) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */;
  %387 = %376.0;
  %388 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %389 = %381.4;
  %390 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  %391 = %386.1;
  (%387, %388, %389, %var_5020, %var_5021, %390, %391)
}

def @func_2277() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %396 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %392 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %393 = @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %394 = %392.0;
    %395 = %393.0;
    (%394, %395)
  };
  %396() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_8015() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  %408 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
    %397 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %398 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %399 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %400 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
    %401 = @func_2103() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %402 = %397.0;
    %403 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
    %404 = %398.0;
    %405 = %399.0;
    %406 = %400.0;
    %407 = %401.0;
    (%402, %403, %404, %405, %406, %407)
  };
  %408() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */
}

def @func_6656() -> (Tensor[(10, 13, 16), bool],) {
  @func_6654() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_8024() -> (Tensor[(3, 16, 16), float32],) {
  %409 = @func_7289() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %410 = %409.0;
  (%410,)
}

def @func_5966(%var_5964: Tensor[(13, 4, 5), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(13, 4, 5), uint32]) {
  @func_5963(%var_5964) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(13, 4, 5), uint32]) */
}

def @func_7832() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %415 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %411 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %412 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %413 = %411.0;
    %414 = %412.0;
    (%413, %414)
  };
  %415() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_9254() -> Tensor[(2, 4, 15), float64] {
  %417 = fn () -> Tensor[(2, 4, 15), float64] {
    %416 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(2, 4, 15), float64] */;
    log2(%416) /* ty=Tensor[(2, 4, 15), float64] */
  };
  %417() /* ty=Tensor[(2, 4, 15), float64] */
}

def @func_13231() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), bool]) {
  %422 = fn () -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), bool]) {
    %418 = @func_3640() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %419 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
    %420 = %418.0;
    %421 = %419.0;
    (%420, %421)
  };
  %422() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), bool]) */
}

def @func_11478(%var_11476: Tensor[(27), float32], %var_11477: Tensor[(14, 13, 9), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 10, 5), float64], Tensor[(14, 13, 9), bool], Tensor[(3, 16, 16), float32]) {
  %446 = fn (%var_11392: Tensor[(27), float32], %var_11442: Tensor[(14, 13, 9), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 10, 5), float64], Tensor[(14, 13, 9), bool], Tensor[(3, 16, 16), float32]) {
    %423 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %424 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
    %425 = cast(%var_11392, dtype="float32") /* ty=Tensor[(27), float32] */;
    %426 = reshape(%425, newshape=[27]) /* ty=Tensor[(27), float32] */;
    %427 = @func_9659(%426) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */;
    %428 = %427.0;
    %429 = cast(%428, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
    %430 = erf(%429) /* ty=Tensor[(14, 13, 9), float32] */;
    %431 = cast(%430, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
    %432 = @func_10033() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
    %433 = @func_10651() /* ty=(Tensor[(13, 10, 5), float64],) */;
    %434 = cast(%var_11442, dtype="bool") /* ty=Tensor[(14, 13, 9), bool] */;
    %435 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
    %436 = cast(%430, dtype="bool") /* ty=Tensor[(14, 13, 9), bool] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %438 = @func_7289() /* ty=(Tensor[(3, 16, 16), float32],) */;
    %439 = %423.1;
    %440 = %424.0;
    %441 = asin(%431) /* ty=Tensor[(14, 13, 9), float32] */;
    %442 = %432.2;
    %443 = %433.0;
    %444 = logical_and(%436, %437) /* ty=Tensor[(14, 13, 9), bool] */;
    %445 = %438.0;
    (%439, %440, %var_11392, %441, %442, %443, %444, %445)
  };
  %446(%var_11476, %var_11477) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(27), float32], Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 10, 5), float64], Tensor[(14, 13, 9), bool], Tensor[(3, 16, 16), float32]) */
}

def @func_12537() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) {
  %447 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %448 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %449 = cast(meta[relay.Constant][15] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %450 = reshape(%449, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %451 = @func_8535(%450) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */;
  %452 = %447.0;
  %453 = %448.1;
  %454 = %451.0;
  %455 = @func_12370() /* ty=Tensor[(8, 11, 9), uint32] */;
  (%452, %453, %454, meta[relay.Constant][15] /* ty=Tensor[(108), float32] */, %455)
}

def @func_14459() -> (Tensor[(10, 13, 16), bool],) {
  @func_14457() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_9898(%var_9896: Tensor[(1, 15, 5), uint32], %var_9897: Tensor[(13, 15, 5), uint32]) -> Tensor[(13, 15, 5), uint32] {
  %458 = fn (%var_9884: Tensor[(1, 15, 5), uint32], %var_9885: Tensor[(13, 15, 5), uint32]) -> Tensor[(13, 15, 5), uint32] {
    %456 = cast(%var_9884, dtype="uint32") /* ty=Tensor[(1, 15, 5), uint32] */;
    %457 = cast(%var_9885, dtype="uint32") /* ty=Tensor[(13, 15, 5), uint32] */;
    bitwise_and(%456, %457) /* ty=Tensor[(13, 15, 5), uint32] */
  };
  %458(%var_9896, %var_9897) /* ty=Tensor[(13, 15, 5), uint32] */
}

def @func_12831() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %459 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %460 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %461 = %459.0;
  %462 = @func_4978() /* ty=Tensor[(10, 13, 16), float64] */;
  %463 = %460.0;
  (%461, %462, %463)
}

def @func_14950() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_14948() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_171(%var_169: Tensor[(2, 10, 7), int8], %var_170: Tensor[(2, 10, 7), int8]) -> (Tensor[(2, 10, 7), int8],) {
  @func_167(%var_169, %var_170) /* ty=(Tensor[(2, 10, 7), int8],) */
}

def @func_14752() -> Tensor[(10, 13, 16), float32] {
  %465 = fn () -> Tensor[(10, 13, 16), float32] {
    %464 = @func_5173() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %464.0
  };
  %465() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_6550() -> Tensor[(10, 13, 16), float32] {
  %466 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %466.0
}

def @func_14986() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %471 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %467 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %468 = @func_14516() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 11, 9), uint32]) */;
    %469 = %467.0;
    %470 = %468.0;
    (%469, %470)
  };
  %471() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_15810() -> Tensor[(10, 13, 16), float32] {
  %473 = fn () -> Tensor[(10, 13, 16), float32] {
    %472 = @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %472.1
  };
  %473() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_16913() -> Tensor[(10, 13, 16), float32] {
  %475 = fn () -> Tensor[(10, 13, 16), float32] {
    %474 = @func_4759() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %474.1
  };
  %475() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_17289(%var_17265: Tensor[(15, 14, 4), int32], %var_17266: Tensor[(15, 14, 4), int32], %var_17271: Tensor[(15, 14, 4), bool]) -> (Tensor[(15, 14, 4), bool], Tensor[(10, 13, 16), bool], Tensor[(15, 14, 4), int64]) {
  %476 = cast(%var_17266, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %477 = shape_of(%var_17265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%var_17265, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = less_equal(%478, %479) /* ty=Tensor[(15, 14, 4), bool] */;
  %481 = cast(%var_17271, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="bool") /* ty=Tensor[(15, 14, 4), bool] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %485 = @func_13387() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %486 = cast(%480, dtype="int64") /* ty=Tensor[(15, 14, 4), int64] */;
  %487 = shape_of(%var_17271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_17271, dtype="int64") /* ty=Tensor[(15, 14, 4), int64] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %490 = greater(%483, %484) /* ty=Tensor[(15, 14, 4), bool] */;
  %491 = %485.1;
  %492 = maximum(%488, %489) /* ty=Tensor[(15, 14, 4), int64] */;
  (%490, %491, %492)
}

def @func_15403() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %497 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
    %493 = @func_8674() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %494 = @func_11324() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %495 = %493.0;
    %496 = %494.0;
    (%495, %496)
  };
  %497() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_16692() -> Tensor[(10, 13, 16), float32] {
  @func_16690() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_11212() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  %498 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %499 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %500 = @func_10256() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %501 = %498.0;
  %502 = %499.0;
  %503 = %500.1;
  (%501, %502, %503)
}

def @func_12895() -> Tensor[(768), float64] {
  %505 = fn () -> Tensor[(768), float64] {
    %504 = @func_12785() /* ty=(Tensor[(768), float64], Tensor[(10, 13, 16), float64]) */;
    %504.0
  };
  %505() /* ty=Tensor[(768), float64] */
}

def @func_2715() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %506 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %507 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  %508 = %506.0;
  (%507, %508)
}

def @func_15633() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %513 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %509 = @func_12537() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) */;
    %510 = @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %511 = %509.0;
    %512 = %510.0;
    (%511, %512)
  };
  %513() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_1390(%var_1388: Tensor[(13, 9, 10), int8], %var_1389: Tensor[(13, 9, 10), int8]) -> Tensor[(13, 9, 10), int8] {
  %518 = fn (%var_1382: Tensor[(13, 9, 10), int8], %var_1383: Tensor[(13, 9, 10), int8]) -> Tensor[(13, 9, 10), int8] {
    %514 = cast(%var_1383, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
    %515 = shape_of(%var_1382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %516 = cast(%var_1382, dtype="int8") /* ty=Tensor[(13, 9, 10), int8] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    left_shift(%516, %517) /* ty=Tensor[(13, 9, 10), int8] */
  };
  %518(%var_1388, %var_1389) /* ty=Tensor[(13, 9, 10), int8] */
}

def @func_325(%var_319: int64) -> (Tensor[(13, 15, 1), int64],) {
  %519 = cast(%var_319, dtype="int64") /* ty=int64 */;
  %520 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 15, 1), int64] */, dtype="int64") /* ty=Tensor[(13, 15, 1), int64] */;
  %521 = subtract(%519, %520) /* ty=Tensor[(13, 15, 1), int64] */;
  (%521,)
}

def @func_11326() -> (Tensor[(10, 13, 16), float64],) {
  @func_11324() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_4582() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %526 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %522 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
    %523 = %522.0;
    %524 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
    %525 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
    (%523, %524, %525)
  };
  %526() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_10257() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %543 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %527 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %528 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
    %529 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
    %530 = @func_4703() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), int8]) */;
    %531 = @func_4846() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(2, 10, 9), bool], Tensor[(180), uint32]) */;
    %532 = @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %533 = @func_7483() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %534 = @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %535 = %527.2;
    %536 = %528.0;
    %537 = %529.0;
    %538 = %530.0;
    %539 = %531.0;
    %540 = %532.1;
    %541 = %533.0;
    %542 = %534.2;
    (%535, %536, %537, %538, %539, %540, %541, %542)
  };
  %543() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_15463() -> (Tensor[(10, 13, 16), float32],) {
  %546 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %544 = @func_15160() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %545 = %544.0;
    (%545,)
  };
  %546() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_1291() -> (Tensor[(10, 13, 16), float32],) {
  @func_1289() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_1237(%var_1235: Tensor[(10, 13, 16), float64], %var_1236: Tensor[(10, 13, 16), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), int8]) {
  @func_1233(%var_1235, %var_1236) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), int8]) */
}

def @func_2795() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) {
  %558 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) {
    %547 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %548 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %549 = @func_1954() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
    %550 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 96), float32] */, dtype="float32") /* ty=Tensor[(8, 96), float32] */;
    %551 = reshape(%550, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
    %552 = @func_2400(%551) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
    %553 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    %554 = %547.0;
    %555 = %548.0;
    %556 = %549.2;
    %557 = %552.2;
    (%553, %554, %555, %556, %557, meta[relay.Constant][17] /* ty=Tensor[(8, 96), float32] */)
  };
  %558() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */
}

def @func_11669() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %559 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %560 = @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %561 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %562 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %563 = %559.1;
  %564 = %560.0;
  %565 = %561.0;
  %566 = %562.0;
  (%563, %564, %565, %566)
}

def @func_4470() -> (Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) {
  %567 = @func_3640() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %568 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %569 = %567.0;
  (%568, %569)
}

def @func_3042() -> Tensor[(10, 13, 16), float32] {
  %571 = fn () -> Tensor[(10, 13, 16), float32] {
    %570 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %570.0
  };
  %571() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_15930() -> Tensor[(10, 13, 16), float64] {
  @func_15928() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_10634() -> Tensor[(10, 13, 16), float32] {
  %572 = fn () -> Tensor[(10, 13, 16), float32] {
    @func_7791() /* ty=Tensor[(10, 13, 16), float32] */
  };
  %572() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_328(%var_326: int64) -> (Tensor[(13, 15, 1), int64],) {
  @func_325(%var_326) /* ty=(Tensor[(13, 15, 1), int64],) */
}

def @func_7333() -> (Tensor[(3, 16, 16), int16],) {
  @func_7331() /* ty=(Tensor[(3, 16, 16), int16],) */
}

def @func_4947() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %579 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %573 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %574 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %575 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %576 = %573.2;
    %577 = %574.0;
    %578 = %575.0;
    (%576, %577, %578)
  };
  %579() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_4923() -> Tensor[(10, 13, 16), float64] {
  @func_4921() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_12875() -> (Tensor[(10, 13, 16), float32],) {
  @func_12873() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_8741() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(4, 14, 11), float32], Tensor[(616), float32]) {
  @func_8739() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(4, 14, 11), float32], Tensor[(616), float32]) */
}

def @func_13072(%var_13067: Tensor[(6, 4, 15), int8], %var_13068: Tensor[(6, 4, 15), int8], %var_13069: Tensor[(6, 4, 15), bool], %var_13070: int64, %var_13071: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), int8], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 4, 15), float32], Tensor[(10, 13, 16), float32], int64, Tensor[(768), float32]) {
  @func_13065(%var_13067, %var_13068, %var_13069, %var_13070, %var_13071) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), int8], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(6, 4, 15), float64], Tensor[(6, 4, 15), float32], Tensor[(10, 13, 16), float32], int64, Tensor[(768), float32]) */
}

def @func_13479(%var_13477: Tensor[(16, 48), float32]) -> (Tensor[(10, 13, 16), float64], Tensor[(2, 4, 15), float64], Tensor[(32, 24), float32], int64, Tensor[(16, 48), float32]) {
  @func_13476(%var_13477) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(2, 4, 15), float64], Tensor[(32, 24), float32], int64, Tensor[(16, 48), float32]) */
}

def @func_1470() -> (Tensor[(10, 13, 16), bool],) {
  %580 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %581 = %580.0;
  %582 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %583 = %582.0;
  %584 = cast(%583, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %585 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%581, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %588 = less(%586, %587) /* ty=Tensor[(10, 13, 16), bool] */;
  (%588,)
}

def @func_2344() -> Tensor[(10, 13, 16), float32] {
  @func_2342() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_13960() -> (Tensor[(10, 13, 16), float32],) {
  %589 = @func_5604() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %590 = %589.0;
  (%590,)
}

def @func_15249(%var_15183: Tensor[(7, 16, 10), float64]) -> (Tensor[(7, 16, 10), bool], Tensor[(7, 16, 10), float64]) {
  %591 = cast(%var_15183, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
  %592 = erf(%591) /* ty=Tensor[(7, 16, 10), float64] */;
  %593 = cast(%var_15183, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = cast(%592, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %598 = shape_of(%var_15183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_15183, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = equal(%599, %600) /* ty=Tensor[(7, 16, 10), bool] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
  %603 = not_equal(%595, %596) /* ty=Tensor[(7, 16, 10), bool] */;
  %604 = rsqrt(%602) /* ty=Tensor[(7, 16, 10), float64] */;
  (%603, %604)
}

def @func_8490() -> Tensor[(10, 13, 16), bool] {
  %605 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %605.0
}

def @func_5173() -> (Tensor[(10, 13, 16), float32],) {
  %606 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%606,)
}

def @func_6185() -> (Tensor[(10, 13, 16), float32],) {
  @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_5719() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %607 = @func_4177() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %608 = @func_5206() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %609 = %607.0;
  %610 = %608.0;
  (%609, %610)
}

def @func_1642(%var_1641: Tensor[(10, 13, 16), float64]) -> (Tensor[(10, 13, 16), int64], Tensor[(13, 15, 1), int64], Tensor[(1560), float64]) {
  %627 = fn (%var_1611: Tensor[(10, 13, 16), float64]) -> (Tensor[(10, 13, 16), int64], Tensor[(13, 15, 1), int64], Tensor[(1560), float64]) {
    %611 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %612 = %611.1;
    %613 = cast(%var_1611, dtype="int64") /* ty=Tensor[(10, 13, 16), int64] */;
    %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%612, dtype="int64") /* ty=Tensor[(10, 13, 16), int64] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %617 = cast(meta[relay.Constant][18] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %618 = reshape(%617, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
    %619 = @func_679(%618) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
    %620 = cast(meta[relay.Constant][19] /* ty=Tensor[(1560), int8] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %621 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(1560), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %622 = cast(meta[relay.Constant][18] /* ty=Tensor[(1560), int8] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?), float64] */;
    %624 = multiply(%615, %616) /* ty=Tensor[(10, 13, 16), int64] */;
    %625 = %619.1;
    %626 = power(%622, %623) /* ty=Tensor[(1560), float64] */;
    (%624, %625, %626)
  };
  %627(%var_1641) /* ty=(Tensor[(10, 13, 16), int64], Tensor[(13, 15, 1), int64], Tensor[(1560), float64]) */
}

def @func_14688() -> Tensor[(10, 13, 16), float32] {
  @func_14686() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_4554(%var_4553: Tensor[(6, 260), int8]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], int64, Tensor[(6, 260), int8], Tensor[(10, 13, 16), float64]) {
  %640 = fn (%var_4520: Tensor[(6, 260), int8]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], int64, Tensor[(6, 260), int8], Tensor[(10, 13, 16), float64]) {
    %628 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %629 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %630 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %631 = cast(%var_4520, dtype="int8") /* ty=Tensor[(6, 260), int8] */;
    %632 = reshape(%631, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
    %633 = @func_679(%632) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
    %634 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %635 = %628.0;
    %636 = %629.0;
    %637 = %630.0;
    %638 = %633.2;
    %639 = %634.0;
    (%635, %636, %637, %638, %var_4520, %639)
  };
  %640(%var_4553) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], int64, Tensor[(6, 260), int8], Tensor[(10, 13, 16), float64]) */
}

def @func_16740(%var_16739: Tensor[(15, 3, 11), float64]) -> (Tensor[(15, 3, 11), float64],) {
  %643 = fn (%var_16725: Tensor[(15, 3, 11), float64]) -> (Tensor[(15, 3, 11), float64],) {
    %641 = cast(%var_16725, dtype="float64") /* ty=Tensor[(15, 3, 11), float64] */;
    %642 = acosh(%641) /* ty=Tensor[(15, 3, 11), float64] */;
    (%642,)
  };
  %643(%var_16739) /* ty=(Tensor[(15, 3, 11), float64],) */
}

def @func_14527() -> (Tensor[(10, 13, 16), float64],) {
  %645 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %644 = @func_8912() /* ty=Tensor[(10, 13, 16), float64] */;
    (%644,)
  };
  %645() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_5273() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %649 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %646 = @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %647 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
    %648 = %646.0;
    (%647, %648)
  };
  %649() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_11324() -> (Tensor[(10, 13, 16), float64],) {
  %650 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %651 = %650.0;
  (%651,)
}

def @func_3813(%var_3716: Tensor[(10, 13, 16), float32], %var_3802: Tensor[(16, 48), float64]) -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(6, 260), uint16], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(16, 48), float64], Tensor[(3, 16, 16), float32]) {
  %652 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %653 = %652.0;
  %654 = cast(%var_3716, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%653, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %658 = @func_2103() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %659 = cast(%653, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %660 = shape_of(%var_3716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%var_3716, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %663 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 260), int8] */, dtype="int8") /* ty=Tensor[(6, 260), int8] */;
  %664 = reshape(%663, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
  %665 = @func_679(%664) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="uint16") /* ty=Tensor[(13, 8, 15), uint16] */;
  %668 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(6, 260), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %669 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 260), int8] */, dtype="uint16") /* ty=Tensor[(6, 260), uint16] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %671 = @func_2451() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %672 = cast(%var_3802, dtype="float64") /* ty=Tensor[(16, 48), float64] */;
  %673 = reshape(%672, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %674 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %675 = floor_mod(%656, %657) /* ty=Tensor[(10, 13, 16), float64] */;
  %676 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  %677 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  %678 = %658.0;
  %679 = logical_and(%661, %662) /* ty=Tensor[(10, 13, 16), bool] */;
  %680 = maximum(%669, %670) /* ty=Tensor[(6, 260), uint16] */;
  %681 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  %682 = %671.0;
  %683 = @func_1015(%673) /* ty=Tensor[(3, 16, 16), float32] */;
  %684 = %674.2;
  (%675, %676, %677, %678, %679, %680, %681, %682, %683, %var_3802, %684)
}

def @func_2342() -> Tensor[(10, 13, 16), float32] {
  %685 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %685.0
}

def @func_4335() -> (Tensor[(10, 13, 16), float32],) {
  @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_17357(%var_17327: Tensor[(1, 6, 15), float32], %var_17328: Tensor[(8, 6, 15), float32]) -> (Tensor[(8, 6, 15), float32], Tensor[(10, 13, 16), float64]) {
  %686 = cast(%var_17327, dtype="float32") /* ty=Tensor[(1, 6, 15), float32] */;
  %687 = cast(%var_17328, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %688 = @func_16606() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %689 = mod(%686, %687) /* ty=Tensor[(8, 6, 15), float32] */;
  %690 = %688.1;
  (%689, %690)
}

def @func_922() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %694 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %691 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %692 = %691.1;
    %693 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    (%692, %693)
  };
  %694() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_5963(%var_5896: Tensor[(13, 4, 5), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(13, 4, 5), uint32]) {
  %695 = @func_3640() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %696 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %697 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %698 = cast(%var_5896, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %699 = log10(%698) /* ty=Tensor[(13, 4, 5), float64] */;
  %700 = cast(%var_5896, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %704 = %695.1;
  %705 = %696.1;
  %706 = %697.2;
  %707 = logical_xor(%702, %703) /* ty=Tensor[(13, 4, 5), uint32] */;
  (%704, %705, %706, %707)
}

def @func_13918() -> (Tensor[(3, 16, 16), float32],) {
  %709 = fn () -> (Tensor[(3, 16, 16), float32],) {
    %708 = @func_12858() /* ty=Tensor[(3, 16, 16), float32] */;
    (%708,)
  };
  %709() /* ty=(Tensor[(3, 16, 16), float32],) */
}

def @func_4781() -> Tensor[(10, 13, 16), float64] {
  %711 = fn () -> Tensor[(10, 13, 16), float64] {
    %710 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %710.0
  };
  %711() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_7776(%var_7775: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], int64, int64, Tensor[(768), float32], Tensor[(10, 13, 16), float32]) {
  %724 = fn (%var_7760: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], int64, int64, Tensor[(768), float32], Tensor[(10, 13, 16), float32]) {
    %712 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %713 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %714 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %715 = cast(%var_7760, dtype="float32") /* ty=Tensor[(768), float32] */;
    %716 = reshape(%714, newshape=[]) /* ty=int64 */;
    %717 = reshape(%715, newshape=[32, 24]) /* ty=Tensor[(32, 24), float32] */;
    %718 = @func_5050(%716, %717) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) */;
    %719 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %720 = %712.0;
    %721 = %713.0;
    %722 = %718.3;
    %723 = %719.1;
    (%720, %721, %722, -1 /* ty=int64 */, %var_7760, %723)
  };
  %724(%var_7775) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], int64, int64, Tensor[(768), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_14168() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1170), int8], Tensor[(3, 16, 16), int16], Tensor[(768), float32]) {
  @func_14166() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1170), int8], Tensor[(3, 16, 16), int16], Tensor[(768), float32]) */
}

def @func_10033() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  %725 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %726 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %727 = %725.0;
  %728 = @func_8912() /* ty=Tensor[(10, 13, 16), float64] */;
  %729 = %726.0;
  %730 = @func_6550() /* ty=Tensor[(10, 13, 16), float32] */;
  (%727, %728, %729, %730)
}

def @func_11512() -> (Tensor[(10, 13, 16), float64],) {
  @func_11510() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_9753() -> (Tensor[(10, 13, 16), float32],) {
  %733 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %731 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %732 = %731.0;
    (%732,)
  };
  %733() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_3658() -> (Tensor[(10, 13, 16), float64],) {
  %734 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %735 = %734.0;
  (%735,)
}

def @main(%var_17373: Tensor[(1, 12, 3), float32]) -> (Tensor[(1, 12, 3), float32],) {
  %736 = cast(%var_17373, dtype="float32") /* ty=Tensor[(1, 12, 3), float32] */;
  %737 = asin(%736) /* ty=Tensor[(1, 12, 3), float32] */;
  (%737,)
}

def @func_1328() -> (Tensor[(10, 13, 16), float64],) {
  @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_16607() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %742 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %738 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %739 = %738.0;
    %740 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
    %741 = @func_3554() /* ty=Tensor[(10, 13, 16), float32] */;
    (%739, %740, %741)
  };
  %742() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_2159() -> Tensor[(10, 13, 16), float64] {
  %743 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %744 = %743.0;
  %745 = cast(%744, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  log(%745) /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_14182() -> Tensor[(10, 13, 16), float64] {
  %746 = @func_13566() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %746.2
}

def @func_3420() -> (Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_5207() -> (Tensor[(10, 13, 16), float64],) {
  %749 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %747 = @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %748 = %747.2;
    (%748,)
  };
  %749() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_830() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %753 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %750 = @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %751 = %750.1;
    %752 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
    (%751, %752)
  };
  %753() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_4761() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_4759() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_6317() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %757 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %754 = @func_5604() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %755 = @func_3041() /* ty=Tensor[(10, 13, 16), float32] */;
    %756 = %754.1;
    (%755, %756)
  };
  %757() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_7598() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_7596() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_12056(%var_12055: int64) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 15, 1), int64], int64) {
  %764 = fn (%var_12045: int64) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 15, 1), int64], int64) {
    %758 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %759 = cast(%var_12045, dtype="int64") /* ty=int64 */;
    %760 = reshape(%759, newshape=[]) /* ty=int64 */;
    %761 = @func_325(%760) /* ty=(Tensor[(13, 15, 1), int64],) */;
    %762 = %758.0;
    %763 = %761.0;
    (%762, %763, %var_12045)
  };
  %764(%var_12055) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 15, 1), int64], int64) */
}

def @func_3361() -> Tensor[(10, 13, 16), float32] {
  %766 = fn () -> Tensor[(10, 13, 16), float32] {
    %765 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %765.0
  };
  %766() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_1124() -> (Tensor[(10, 13, 16), float64],) {
  %767 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %768 = %767.0;
  (%768,)
}

def @func_1148() -> Tensor[(10, 13, 16), float32] {
  %770 = fn () -> Tensor[(10, 13, 16), float32] {
    %769 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %769.0
  };
  %770() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_1017(%var_1016: Tensor[(3, 16, 16), float64]) -> Tensor[(3, 16, 16), float32] {
  %777 = fn (%var_978: Tensor[(3, 16, 16), float64]) -> Tensor[(3, 16, 16), float32] {
    %771 = cast(%var_978, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
    %772 = sigmoid(%771) /* ty=Tensor[(3, 16, 16), float64] */;
    %773 = cast(%var_978, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
    %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
    %775 = cast(%772, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
    %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%775, %776) /* ty=Tensor[(3, 16, 16), float32] */
  };
  %777(%var_1016) /* ty=Tensor[(3, 16, 16), float32] */
}

def @func_9713() -> (Tensor[(10, 13, 16), float64],) {
  %778 = @func_5206() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %779 = %778.0;
  (%779,)
}

def @func_12660() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  %780 = @func_7692() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float32]) */;
  %781 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %782 = %780.0;
  %783 = %781.0;
  (%782, %783)
}

def @func_13305() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %794 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
    %784 = @func_10256() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %785 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %786 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
    %787 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %788 = @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %789 = %784.4;
    %790 = %785.0;
    %791 = %786.0;
    %792 = %787.2;
    %793 = %788.0;
    (%789, %790, %791, %792, %793)
  };
  %794() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_15252(%var_15250: Tensor[(7, 16, 10), float64]) -> (Tensor[(7, 16, 10), bool], Tensor[(7, 16, 10), float64]) {
  @func_15249(%var_15250) /* ty=(Tensor[(7, 16, 10), bool], Tensor[(7, 16, 10), float64]) */
}

def @func_15691() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_15689() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_6694() -> (Tensor[(10, 13, 16), float64],) {
  @func_6692() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_16097() -> (Tensor[(10, 13, 16), float64],) {
  %795 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %796 = %795.0;
  (%796,)
}

def @func_682(%var_680: Tensor[(13, 8, 15), int8]) -> (Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) {
  @func_679(%var_680) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */
}

def @func_7081(%var_7080: Tensor[(6, 8, 9), float32]) -> (Tensor[(6, 8, 9), float32],) {
  %799 = fn (%var_7075: Tensor[(6, 8, 9), float32]) -> (Tensor[(6, 8, 9), float32],) {
    %797 = cast(%var_7075, dtype="float32") /* ty=Tensor[(6, 8, 9), float32] */;
    %798 = cos(%797) /* ty=Tensor[(6, 8, 9), float32] */;
    (%798,)
  };
  %799(%var_7080) /* ty=(Tensor[(6, 8, 9), float32],) */
}

def @func_14338() -> Tensor[(1, 2, 13), float32] {
  %801 = fn () -> Tensor[(1, 2, 13), float32] {
    %800 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 13), float32] */;
    erf(%800) /* ty=Tensor[(1, 2, 13), float32] */
  };
  %801() /* ty=Tensor[(1, 2, 13), float32] */
}

def @func_8425(%var_8416: Tensor[(1, 42), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1, 42), float64]) {
  %802 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %803 = @func_4121() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %804 = cast(%var_8416, dtype="float64") /* ty=Tensor[(1, 42), float64] */;
  %805 = reshape(%804, newshape=[1, 3, 14]) /* ty=Tensor[(1, 3, 14), float64] */;
  %806 = @func_6885(%805) /* ty=(Tensor[(1, 3, 14), float64], Tensor[(10, 13, 16), float32]) */;
  %807 = %802.0;
  %808 = %803.2;
  %809 = %806.1;
  (%807, %808, %809, %var_8416)
}

def @func_1900() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %815 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %810 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %811 = %810.0;
    %812 = cast(%811, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %813 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    %814 = exp(%812) /* ty=Tensor[(10, 13, 16), float32] */;
    (%813, %814)
  };
  %815() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_1941() -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */
}

def @func_1326() -> (Tensor[(10, 13, 16), float64],) {
  %816 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %817 = %816.0;
  (%817,)
}

def @func_13446() -> Tensor[(10, 13, 16), float32] {
  @func_13444() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_421() -> Tensor[(10, 13, 16), float32] {
  @func_419() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_3439() -> (Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_3150(%var_3148: Tensor[(4, 1, 3), float32]) -> Tensor[(4, 1, 3), float32] {
  @func_3147(%var_3148) /* ty=Tensor[(4, 1, 3), float32] */
}

def @func_13567() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %823 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %818 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %819 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %820 = @func_10450() /* ty=Tensor[(10, 13, 16), float32] */;
    %821 = %818.1;
    %822 = %819.0;
    (%820, %821, %822)
  };
  %823() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_6416(%var_6415: Tensor[(1560), int8]) -> (Tensor[(1560), int8],) {
  %831 = fn (%var_6406: Tensor[(1560), int8]) -> (Tensor[(1560), int8],) {
    %824 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
    %825 = %824.3;
    %826 = cast(%var_6406, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(1), int32] */;
    %828 = cast(%825, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?), int8] */;
    %830 = subtract(%828, %829) /* ty=Tensor[(1560), int8] */;
    (%830,)
  };
  %831(%var_6415) /* ty=(Tensor[(1560), int8],) */
}

def @func_1092() -> (Tensor[(10, 13, 16), float64],) {
  @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_473() -> (Tensor[(10, 13, 16), float32],) {
  @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_1233(%var_1217: Tensor[(10, 13, 16), float64], %var_1227: Tensor[(10, 13, 16), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), int8]) {
  %832 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %833 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %834 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %835 = %834.1;
  %836 = cast(%var_1217, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%835, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %840 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %841 = %840.1;
  %842 = cast(%var_1227, dtype="int8") /* ty=Tensor[(10, 13, 16), int8] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%841, dtype="int8") /* ty=Tensor[(10, 13, 16), int8] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %846 = %832.0;
  %847 = %833.0;
  %848 = equal(%838, %839) /* ty=Tensor[(10, 13, 16), bool] */;
  %849 = logical_xor(%844, %845) /* ty=Tensor[(10, 13, 16), int8] */;
  (%846, %847, %848, %849)
}

def @func_17318() -> (Tensor[(768), float64],) {
  @func_17316() /* ty=(Tensor[(768), float64],) */
}

def @func_2681() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_5438(%var_5435: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), float32],) {
  %850 = cast(%var_5435, dtype="float32") /* ty=Tensor[(15, 9, 15), float32] */;
  %851 = sin(%850) /* ty=Tensor[(15, 9, 15), float32] */;
  (%851,)
}

def @func_7791() -> Tensor[(10, 13, 16), float32] {
  %852 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %852.0
}

def @func_4472() -> (Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) {
  @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */
}

def @func_2593() -> (Tensor[(10, 13, 16), float64],) {
  %854 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %853 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    (%853,)
  };
  %854() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_9527(%var_9525: Tensor[(3, 3, 3), float32]) -> (Tensor[(3, 3, 3), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_9524(%var_9525) /* ty=(Tensor[(3, 3, 3), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_10767() -> (Tensor[(10, 13, 16), float32],) {
  @func_10765() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_2287() -> (Tensor[(10, 13, 16), float32],) {
  %856 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %855 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
    (%855,)
  };
  %856() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_8835() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), float64], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(10, 13, 16), bool]) {
  %857 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %858 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %859 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
  %860 = @func_5719() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %861 = cast(meta[relay.Constant][22] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %862 = reshape(%861, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %863 = @func_8535(%862) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */;
  %864 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %865 = %857.0;
  %866 = %858.2;
  %867 = %859.2;
  %868 = %860.0;
  %869 = %863.0;
  %870 = %864.0;
  (%865, %866, %867, %868, %869, meta[relay.Constant][22] /* ty=Tensor[(108), float32] */, %870)
}

def @func_9659(%var_9644: Tensor[(27), float32]) -> (Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) {
  %871 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 13, 9), float32] */;
  %872 = cast(%var_9644, dtype="float32") /* ty=Tensor[(27), float32] */;
  %873 = reshape(%872, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float32] */;
  %874 = @func_9524(%873) /* ty=(Tensor[(3, 3, 3), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %875 = log2(%871) /* ty=Tensor[(14, 13, 9), float32] */;
  %876 = %874.3;
  (%875, %876, %var_9644)
}

def @func_11958() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %877 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %878 = @func_5272() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %879 = %877.0;
  %880 = %878.0;
  (%879, %880)
}

def @func_11819() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %889 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
    %881 = @func_5719() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
    %882 = @func_5731() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %883 = @func_4177() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %884 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %885 = %881.0;
    %886 = %882.0;
    %887 = %883.1;
    %888 = %884.1;
    (%885, %886, %887, %888)
  };
  %889() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_1955() -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  %896 = fn () -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
    %890 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
    %891 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %892 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
    %893 = %890.0;
    %894 = %891.1;
    %895 = %892.0;
    (%893, %894, %895)
  };
  %896() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */
}

def @func_1175() -> (Tensor[(10, 13, 16), float32],) {
  %897 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %898 = %897.0;
  (%898,)
}

def @func_6082() -> Tensor[(10, 13, 16), float32] {
  @func_6080() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_12005() -> (Tensor[(10, 13, 16), float32],) {
  @func_12003() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_15035() -> (Tensor[(10, 13, 16), float64],) {
  %899 = @func_4921() /* ty=Tensor[(10, 13, 16), float64] */;
  (%899,)
}

def @func_8535(%var_8524: Tensor[(9, 4, 3), float32]) -> (Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) {
  %900 = cast(%var_8524, dtype="float32") /* ty=Tensor[(9, 4, 3), float32] */;
  %901 = sigmoid(%900) /* ty=Tensor[(9, 4, 3), float32] */;
  %902 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  (%901, %902)
}

def @func_8428(%var_8426: Tensor[(1, 42), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1, 42), float64]) {
  @func_8425(%var_8426) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1, 42), float64]) */
}

def @func_15179(%var_15177: Tensor[(6, 12, 16), float64], %var_15178: Tensor[(6, 12, 16), float64]) -> Tensor[(6, 12, 16), float64] {
  %907 = fn (%var_15163: Tensor[(6, 12, 16), float64], %var_15164: Tensor[(6, 12, 16), float64]) -> Tensor[(6, 12, 16), float64] {
    %903 = cast(%var_15164, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %904 = shape_of(%var_15163, dtype="int32") /* ty=Tensor[(3), int32] */;
    %905 = cast(%var_15163, dtype="float64") /* ty=Tensor[(6, 12, 16), float64] */;
    %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%905, %906) /* ty=Tensor[(6, 12, 16), float64] */
  };
  %907(%var_15177, %var_15178) /* ty=Tensor[(6, 12, 16), float64] */
}

def @func_8538(%var_8536: Tensor[(9, 4, 3), float32]) -> (Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) {
  @func_8535(%var_8536) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_16099() -> (Tensor[(10, 13, 16), float64],) {
  @func_16097() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_11960() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  @func_11958() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_13796() -> (Tensor[(10, 13, 16), float32],) {
  %908 = @func_5833() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %909 = %908.0;
  (%909,)
}

def @func_16326() -> Tensor[(10, 13, 16), float32] {
  %910 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %910.0
}

def @func_8599() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_13962() -> (Tensor[(10, 13, 16), float32],) {
  @func_13960() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_2545(%var_2544: Tensor[(14, 12, 4), float32]) -> (Tensor[(14, 12, 4), float32], Tensor[(10, 13, 16), float64]) {
  %914 = fn (%var_2530: Tensor[(14, 12, 4), float32]) -> (Tensor[(14, 12, 4), float32], Tensor[(10, 13, 16), float64]) {
    %911 = cast(%var_2530, dtype="float32") /* ty=Tensor[(14, 12, 4), float32] */;
    %912 = atanh(%911) /* ty=Tensor[(14, 12, 4), float32] */;
    %913 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    (%912, %913)
  };
  %914(%var_2544) /* ty=(Tensor[(14, 12, 4), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_7793() -> Tensor[(10, 13, 16), float32] {
  @func_7791() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_14878() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %919 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %915 = @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %916 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %917 = %915.0;
    %918 = %916.1;
    (%917, %918)
  };
  %919() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_10999(%var_10998: Tensor[(6, 16, 7), float32]) -> Tensor[(6, 16, 7), float32] {
  %921 = fn (%var_10986: Tensor[(6, 16, 7), float32]) -> Tensor[(6, 16, 7), float32] {
    %920 = cast(%var_10986, dtype="float32") /* ty=Tensor[(6, 16, 7), float32] */;
    cosh(%920) /* ty=Tensor[(6, 16, 7), float32] */
  };
  %921(%var_10998) /* ty=Tensor[(6, 16, 7), float32] */
}

def @func_15449(%var_15436: Tensor[(600), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(5, 12, 10), uint32], uint32, Tensor[(600), uint32]) {
  %922 = @func_5272() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %923 = @func_8835() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), float64], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(10, 13, 16), bool]) */;
  %924 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %925 = @func_15160() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %926 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
  %927 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %928 = cast(%var_15436, dtype="uint32") /* ty=Tensor[(600), uint32] */;
  %929 = reshape(%927, newshape=[]) /* ty=uint32 */;
  %930 = reshape(%928, newshape=[5, 12, 10]) /* ty=Tensor[(5, 12, 10), uint32] */;
  %931 = %922.1;
  %932 = %923.2;
  %933 = %924.0;
  %934 = %925.1;
  %935 = %926.0;
  %936 = @func_15097(%929, %930) /* ty=Tensor[(5, 12, 10), uint32] */;
  (%931, %932, %933, %934, %935, %936, meta[relay.Constant][24] /* ty=uint32 */, %var_15436)
}

def @func_15345() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %937 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %938 = @func_10319() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %939 = %937.0;
  %940 = %938.1;
  %941 = @func_4978() /* ty=Tensor[(10, 13, 16), float64] */;
  (%939, %940, %941)
}

def @func_5105() -> (Tensor[(10, 13, 16), float32],) {
  %942 = @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %943 = %942.0;
  (%943,)
}

def @func_7155() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_4704() -> (Tensor[(10, 13, 16), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), int8]) {
  %950 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), int8]) {
    %944 = cast(meta[relay.Constant][25] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
    %945 = cast(meta[relay.Constant][25] /* ty=Tensor[(1170), int8] */, dtype="int8") /* ty=Tensor[(1170), int8] */;
    %946 = reshape(%944, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
    %947 = reshape(%945, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), int8] */;
    %948 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
    %949 = @func_1387(%946, %947) /* ty=Tensor[(13, 9, 10), int8] */;
    (%948, %949, meta[relay.Constant][25] /* ty=Tensor[(1170), int8] */)
  };
  %950() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(13, 9, 10), int8], Tensor[(1170), int8]) */
}

def @func_7437() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %951 = @func_4043() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %952 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %953 = %951.1;
  %954 = %952.0;
  (%953, %954)
}

def @func_2227() -> (Tensor[(10, 13, 16), float64],) {
  @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_6248() -> (Tensor[(10, 13, 16), float32],) {
  %955 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%955,)
}

def @func_2208() -> Tensor[(10, 13, 16), float64] {
  %957 = fn () -> Tensor[(10, 13, 16), float64] {
    %956 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %956.0
  };
  %957() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_4212() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) {
  %966 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) {
    %958 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %959 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %960 = cast(meta[relay.Constant][26] /* ty=Tensor[(1560), int8] */, dtype="int8") /* ty=Tensor[(1560), int8] */;
    %961 = reshape(%960, newshape=[13, 8, 15]) /* ty=Tensor[(13, 8, 15), int8] */;
    %962 = @func_679(%961) /* ty=(Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) */;
    %963 = %958.0;
    %964 = %959.1;
    %965 = %962.0;
    (%963, %964, %965, meta[relay.Constant][26] /* ty=Tensor[(1560), int8] */)
  };
  %966() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */
}

def @func_7153() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %967 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %968 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %969 = @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %970 = %967.0;
  %971 = %968.0;
  %972 = %969.0;
  (%970, %971, %972)
}

def @func_11671() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_11669() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_13389() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) {
  @func_13387() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */
}

def @func_15887() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %979 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %973 = @func_15402() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
    %974 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %975 = @func_3130() /* ty=Tensor[(10, 13, 16), float32] */;
    %976 = %973.1;
    %977 = @func_8912() /* ty=Tensor[(10, 13, 16), float64] */;
    %978 = %974.0;
    (%975, %976, %977, %978)
  };
  %979() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_2955() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_5667() -> (Tensor[(10, 13, 16), float64],) {
  %982 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %980 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %981 = %980.0;
    (%981,)
  };
  %982() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_3131() -> Tensor[(10, 13, 16), float32] {
  %984 = fn () -> Tensor[(10, 13, 16), float32] {
    %983 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %983.0
  };
  %984() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_9466() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_9464() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_14518() -> (Tensor[(10, 13, 16), float32], Tensor[(8, 11, 9), uint32]) {
  @func_14516() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 11, 9), uint32]) */
}

def @func_16926() -> Tensor[(10, 13, 16), float64] {
  %986 = fn () -> Tensor[(10, 13, 16), float64] {
    %985 = @func_8674() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %985.0
  };
  %986() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_6669() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %991 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
    %987 = @func_5360() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
    %988 = @func_5666() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %989 = %987.1;
    %990 = %988.0;
    (%989, %990)
  };
  %991() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_3556() -> Tensor[(10, 13, 16), float32] {
  @func_3554() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_16275(%var_16272: Tensor[(12, 8, 8), float32], %var_16273: Tensor[(360), int8], %var_16274: int64) -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(12, 8, 8), int8], Tensor[(6, 4, 15), int8], Tensor[(360), int8], int64, Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_16270(%var_16272, %var_16273, %var_16274) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(12, 8, 8), int8], Tensor[(6, 4, 15), int8], Tensor[(360), int8], int64, Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_16520() -> (Tensor[(10, 13, 16), float64],) {
  %993 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %992 = @func_4780() /* ty=Tensor[(10, 13, 16), float64] */;
    (%992,)
  };
  %993() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_16637() -> Tensor[(10, 13, 16), float32] {
  %994 = fn () -> Tensor[(10, 13, 16), float32] {
    @func_3360() /* ty=Tensor[(10, 13, 16), float32] */
  };
  %994() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_17230() -> (Tensor[(768), float64], Tensor[(10, 13, 16), float64], Tensor[(360), int8], int64) {
  %1005 = fn () -> (Tensor[(768), float64], Tensor[(10, 13, 16), float64], Tensor[(360), int8], int64) {
    %995 = @func_13869() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
    %996 = %995.3;
    %997 = cast(%996, dtype="float32") /* ty=Tensor[(768), float32] */;
    %998 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), int8] */, dtype="int8") /* ty=Tensor[(360), int8] */;
    %999 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1000 = reshape(%997, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
    %1001 = reshape(%998, newshape=[360]) /* ty=Tensor[(360), int8] */;
    %1002 = reshape(%999, newshape=[]) /* ty=int64 */;
    %1003 = @func_16270(%1000, %1001, %1002) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(12, 8, 8), int8], Tensor[(6, 4, 15), int8], Tensor[(360), int8], int64, Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1004 = %1003.2;
    (%996, %1004, meta[relay.Constant][27] /* ty=Tensor[(360), int8] */, -3 /* ty=int64 */)
  };
  %1005() /* ty=(Tensor[(768), float64], Tensor[(10, 13, 16), float64], Tensor[(360), int8], int64) */
}

def @func_9940() -> Tensor[(10, 13, 16), float32] {
  %1007 = fn () -> Tensor[(10, 13, 16), float32] {
    %1006 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1006.0
  };
  %1007() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_471() -> (Tensor[(10, 13, 16), float32],) {
  %1008 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1008,)
}

def @func_15162() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_15160() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_3503(%var_3502: Tensor[(10, 13, 16), float32]) -> (Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1026 = fn (%var_3470: Tensor[(10, 13, 16), float32]) -> (Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1009 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
    %1010 = cos(%1009) /* ty=Tensor[(2, 15, 3), float32] */;
    %1011 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
    %1012 = shape_of(%1010, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1013 = cast(%1010, dtype="float32") /* ty=Tensor[(2, 15, 3), float32] */;
    %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1015 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1016 = %1015.0;
    %1017 = cast(%var_3470, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1019 = cast(%1016, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1021 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1022 = floor_mod(%1013, %1014) /* ty=Tensor[(2, 15, 3), float32] */;
    %1023 = divide(%1019, %1020) /* ty=Tensor[(10, 13, 16), float64] */;
    %1024 = %1021.0;
    %1025 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    (%1022, %1023, %1024, %1025)
  };
  %1026(%var_3502) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_17212() -> Tensor[(10, 13, 16), float64] {
  @func_17210() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_2402(%var_2401: Tensor[(3, 16, 16), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) {
  %1042 = fn (%var_2359: Tensor[(3, 16, 16), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) {
    %1027 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
    %1028 = %1027.1;
    %1029 = cast(%var_2359, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
    %1030 = shape_of(%1028, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1031 = cast(%1028, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
    %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1033 = cast(%var_2359, dtype="int16") /* ty=Tensor[(3, 16, 16), int16] */;
    %1034 = shape_of(%1028, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1035 = cast(%1028, dtype="int16") /* ty=Tensor[(3, 16, 16), int16] */;
    %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1037 = @func_1289() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1038 = floor_divide(%1031, %1032) /* ty=Tensor[(3, 16, 16), float64] */;
    %1039 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
    %1040 = bitwise_xor(%1035, %1036) /* ty=Tensor[(3, 16, 16), int16] */;
    %1041 = %1037.0;
    (%1038, %1039, %1040, %1041)
  };
  %1042(%var_2401) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */
}

def @func_14622(%var_14602: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float32]) {
  %1043 = @func_11818() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1044 = @func_9338() /* ty=(Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32]) */;
  %1045 = @func_6654() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1046 = cast(%var_14602, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1047 = reshape(%1046, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
  %1048 = @func_2400(%1047) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
  %1049 = %1043.0;
  %1050 = %1044.0;
  %1051 = %1045.0;
  %1052 = @func_3041() /* ty=Tensor[(10, 13, 16), float32] */;
  %1053 = %1048.0;
  (%1049, %1050, %1051, %1052, %1053, %var_14602)
}

def @func_3249(%var_3246: Tensor[(2, 10, 9), uint32], %var_3247: Tensor[(768), float32], %var_3248: Tensor[(2, 10, 9), uint32]) -> (Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) {
  %1068 = fn (%var_3203: Tensor[(2, 10, 9), uint32], %var_3212: Tensor[(768), float32], %var_3215: Tensor[(2, 10, 9), uint32]) -> (Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) {
    %1054 = cast(%var_3203, dtype="bool") /* ty=Tensor[(2, 10, 9), bool] */;
    %1055 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2, 10, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1056 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 10, 9), uint32] */, dtype="bool") /* ty=Tensor[(2, 10, 9), bool] */;
    %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1058 = cast(%var_3212, dtype="float32") /* ty=Tensor[(768), float32] */;
    %1059 = reshape(%1058, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
    %1060 = @func_2400(%1059) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
    %1061 = cast(%var_3215, dtype="uint16") /* ty=Tensor[(2, 10, 9), uint16] */;
    %1062 = shape_of(%var_3203, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1063 = cast(%var_3203, dtype="uint16") /* ty=Tensor[(2, 10, 9), uint16] */;
    %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1065 = greater_equal(%1056, %1057) /* ty=Tensor[(2, 10, 9), bool] */;
    %1066 = %1060.1;
    %1067 = bitwise_or(%1063, %1064) /* ty=Tensor[(2, 10, 9), uint16] */;
    (%1065, %1066, %var_3212, %1067)
  };
  %1068(%var_3246, %var_3247, %var_3248) /* ty=(Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) */
}

def @func_11133(%var_11130: Tensor[(75), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 15, 5), uint32], Tensor[(75), uint32], Tensor[(975), uint32]) {
  %1069 = @func_5105() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1070 = cast(%var_11130, dtype="uint32") /* ty=Tensor[(75), uint32] */;
  %1071 = cast(meta[relay.Constant][30] /* ty=Tensor[(975), uint32] */, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %1072 = reshape(%1070, newshape=[1, 15, 5]) /* ty=Tensor[(1, 15, 5), uint32] */;
  %1073 = reshape(%1071, newshape=[13, 15, 5]) /* ty=Tensor[(13, 15, 5), uint32] */;
  %1074 = %1069.0;
  %1075 = @func_9895(%1072, %1073) /* ty=Tensor[(13, 15, 5), uint32] */;
  (%1074, %1075, %var_11130, meta[relay.Constant][30] /* ty=Tensor[(975), uint32] */)
}

def @func_10035() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  @func_10033() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */
}

def @func_2452() -> (Tensor[(10, 13, 16), float32],) {
  %1077 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1076 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
    (%1076,)
  };
  %1077() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_5721() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  @func_5719() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_11332() -> (Tensor[(10, 13, 16), float32],) {
  @func_11330() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_16066() -> (Tensor[(10, 13, 16), float32],) {
  %1078 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_629() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_11922() -> (Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1086 = fn () -> (Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1080 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
    %1081 = @func_9867() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(15, 9, 15), float32], Tensor[(135, 15), float32]) */;
    %1082 = @func_5731() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1083 = %1080.0;
    %1084 = %1081.0;
    %1085 = %1082.0;
    (%1083, %1084, %1085)
  };
  %1086() /* ty=(Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_3281() -> (Tensor[(10, 13, 16), float32],) {
  %1089 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1087 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %1088 = %1087.1;
    (%1088,)
  };
  %1089() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_13444() -> Tensor[(10, 13, 16), float32] {
  %1090 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1090.4
}

def @func_12662() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  @func_12660() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */
}

def @func_16328() -> Tensor[(10, 13, 16), float32] {
  @func_16326() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_13387() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) {
  %1091 = @func_6739() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1092 = @func_9464() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1093 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1094 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %1095 = %1091.0;
  %1096 = %1092.0;
  %1097 = %1093.1;
  (%1094, %1095, %1096, %1097)
}

def @func_10087() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1098 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1099 = @func_8597() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1100 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1101 = %1098.0;
  %1102 = %1099.1;
  %1103 = %1100.0;
  (%1101, %1102, %1103)
}

def @func_4847() -> (Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(2, 10, 9), bool], Tensor[(180), uint32]) {
  %1116 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(2, 10, 9), bool], Tensor[(180), uint32]) {
    %1104 = @func_4333() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1105 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
    %1106 = cast(meta[relay.Constant][31] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
    %1107 = %1105.2;
    %1108 = cast(%1107, dtype="float32") /* ty=Tensor[(768), float32] */;
    %1109 = cast(meta[relay.Constant][31] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
    %1110 = reshape(%1106, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
    %1111 = reshape(%1108, newshape=[768]) /* ty=Tensor[(768), float32] */;
    %1112 = reshape(%1109, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
    %1113 = @func_3245(%1110, %1111, %1112) /* ty=(Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) */;
    %1114 = %1104.0;
    %1115 = %1113.0;
    (%1114, %1107, %1115, meta[relay.Constant][31] /* ty=Tensor[(180), uint32] */)
  };
  %1116() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(2, 10, 9), bool], Tensor[(180), uint32]) */
}

def @func_8675() -> (Tensor[(10, 13, 16), float64],) {
  %1119 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %1117 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %1118 = %1117.0;
    (%1118,)
  };
  %1119() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_17210() -> Tensor[(10, 13, 16), float64] {
  @func_15928() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_5492() -> Tensor[(10, 13, 16), float64] {
  %1121 = fn () -> Tensor[(10, 13, 16), float64] {
    %1120 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %1120.1
  };
  %1121() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_2679() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1122 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1123 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1124 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1125 = %1122.0;
  %1126 = %1123.0;
  %1127 = %1124.0;
  (%1125, %1126, %1127)
}

def @func_9715() -> (Tensor[(10, 13, 16), float64],) {
  @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_2717() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_2715() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_1075() -> (Tensor[(10, 13, 16), float64],) {
  @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_1472() -> (Tensor[(10, 13, 16), bool],) {
  @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_4877() -> (Tensor[(10, 13, 16), float32],) {
  %1130 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1128 = @func_4470() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32]) */;
    %1129 = %1128.0;
    (%1129,)
  };
  %1130() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_1073() -> (Tensor[(10, 13, 16), float64],) {
  %1131 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1131,)
}

def @func_1177() -> (Tensor[(10, 13, 16), float32],) {
  @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_10765() -> (Tensor[(10, 13, 16), float32],) {
  %1132 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_585() -> Tensor[(10, 13, 16), float64] {
  %1136 = fn () -> Tensor[(10, 13, 16), float64] {
    %1134 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
    %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    sqrt(%1135) /* ty=Tensor[(10, 13, 16), float64] */
  };
  %1136() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_13717() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1142 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1137 = @func_10319() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1138 = @func_9043() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1139 = %1137.1;
    %1140 = %1138.0;
    %1141 = @func_5491() /* ty=Tensor[(10, 13, 16), float64] */;
    (%1139, %1140, %1141)
  };
  %1142() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_13798() -> (Tensor[(10, 13, 16), float32],) {
  @func_13796() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_15723() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1143 = @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */;
  %1144 = @func_7596() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1145 = %1143.0;
  %1146 = %1144.1;
  (%1145, %1146)
}

def @func_10279(%var_10277: Tensor[(13, 3, 2), uint32], %var_10278: Tensor[(13, 3, 2), uint32]) -> Tensor[(13, 3, 2), uint32] {
  %1151 = fn (%var_10261: Tensor[(13, 3, 2), uint32], %var_10262: Tensor[(13, 3, 2), uint32]) -> Tensor[(13, 3, 2), uint32] {
    %1147 = cast(%var_10262, dtype="uint32") /* ty=Tensor[(13, 3, 2), uint32] */;
    %1148 = shape_of(%var_10261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1149 = cast(%var_10261, dtype="uint32") /* ty=Tensor[(13, 3, 2), uint32] */;
    %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_or(%1149, %1150) /* ty=Tensor[(13, 3, 2), uint32] */
  };
  %1151(%var_10277, %var_10278) /* ty=Tensor[(13, 3, 2), uint32] */
}

def @func_16375() -> (Tensor[(10, 13, 16), bool],) {
  %1152 = @func_11212() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %1153 = %1152.2;
  (%1153,)
}

def @func_2895(%var_2893: int64, %var_2894: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) {
  %1170 = fn (%var_2833: int64, %var_2859: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) {
    %1154 = @func_2103() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1155 = cast(%var_2859, dtype="float32") /* ty=Tensor[(768), float32] */;
    %1156 = reshape(%1155, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float32] */;
    %1157 = @func_2400(%1156) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), int16], Tensor[(10, 13, 16), float32]) */;
    %1158 = cast(%var_2833, dtype="int64") /* ty=int64 */;
    %1159 = reshape(%1158, newshape=[]) /* ty=int64 */;
    %1160 = @func_325(%1159) /* ty=(Tensor[(13, 15, 1), int64],) */;
    %1161 = %1160.0;
    %1162 = cast(%var_2859, dtype="int8") /* ty=Tensor[(768), int8] */;
    %1163 = cast(%1161, dtype="int8") /* ty=Tensor[(13, 15, 1), int8] */;
    %1164 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %1165 = %1154.0;
    %1166 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
    %1167 = %1157.1;
    %1168 = minimum(%1162, %1163) /* ty=Tensor[(13, 15, 768), int8] */;
    %1169 = %1164.0;
    (%1165, %var_2833, %1166, %1167, %1168, %1169)
  };
  %1170(%var_2893, %var_2894) /* ty=(Tensor[(10, 13, 16), float32], int64, Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], Tensor[(10, 13, 16), float64]) */
}

def @func_3554() -> Tensor[(10, 13, 16), float32] {
  %1171 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1171.0
}

def @func_15452(%var_15450: Tensor[(600), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(5, 12, 10), uint32], uint32, Tensor[(600), uint32]) {
  @func_15449(%var_15450) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(5, 12, 10), uint32], uint32, Tensor[(600), uint32]) */
}

def @func_700() -> Tensor[(10, 13, 16), float32] {
  %1172 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1172.0
}

def @func_17316() -> (Tensor[(768), float64],) {
  %1173 = @func_13869() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %1174 = %1173.3;
  (%1174,)
}

def @func_5054(%var_5052: int64, %var_5053: Tensor[(32, 24), float32]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) {
  @func_5050(%var_5052, %var_5053) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) */
}

def @func_13476(%var_13474: Tensor[(16, 48), float32]) -> (Tensor[(10, 13, 16), float64], Tensor[(2, 4, 15), float64], Tensor[(32, 24), float32], int64, Tensor[(16, 48), float32]) {
  %1175 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1176 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1177 = cast(%var_13474, dtype="float32") /* ty=Tensor[(16, 48), float32] */;
  %1178 = reshape(%1176, newshape=[]) /* ty=int64 */;
  %1179 = reshape(%1177, newshape=[32, 24]) /* ty=Tensor[(32, 24), float32] */;
  %1180 = @func_5050(%1178, %1179) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 15, 768), int8], int64, Tensor[(32, 24), float32], Tensor[(10, 13, 16), float32], int64) */;
  %1181 = %1175.0;
  %1182 = @func_9253() /* ty=Tensor[(2, 4, 15), float64] */;
  %1183 = %1180.4;
  (%1181, %1182, %1183, -5 /* ty=int64 */, %var_13474)
}

def @func_9464() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1184 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1185 = %1184.0;
  %1186 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1185, %1186)
}

def @func_4644() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1195 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1187 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1188 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1189 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1190 = %1187.0;
    %1191 = @func_3360() /* ty=Tensor[(10, 13, 16), float32] */;
    %1192 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    %1193 = %1188.1;
    %1194 = %1189.2;
    (%1190, %1191, %1192, %1193, %1194)
  };
  %1195() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_6466() -> (Tensor[(10, 13, 16), bool],) {
  %1196 = @func_1954() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %1197 = %1196.2;
  (%1197,)
}

def @func_4283() -> (Tensor[(13, 14, 8), float64], Tensor[(10, 13, 16), float64]) {
  %1201 = fn () -> (Tensor[(13, 14, 8), float64], Tensor[(10, 13, 16), float64]) {
    %1198 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 8), float64] */;
    %1199 = atan(%1198) /* ty=Tensor[(13, 14, 8), float64] */;
    %1200 = @func_2159() /* ty=Tensor[(10, 13, 16), float64] */;
    (%1199, %1200)
  };
  %1201() /* ty=(Tensor[(13, 14, 8), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_14516() -> (Tensor[(10, 13, 16), float32], Tensor[(8, 11, 9), uint32]) {
  %1202 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1203 = @func_12537() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(8, 11, 9), uint32]) */;
  %1204 = %1202.0;
  %1205 = %1203.4;
  (%1204, %1205)
}

def @func_14077(%var_14075: Tensor[(525), uint64], %var_14076: Tensor[(525), uint64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(525), bool], Tensor[(2, 4, 15), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1225 = fn (%var_14017: Tensor[(525), uint64], %var_14027: Tensor[(525), uint64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(525), bool], Tensor[(2, 4, 15), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1206 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1207 = cast(%var_14017, dtype="uint64") /* ty=Tensor[(525), uint64] */;
    %1208 = reshape(%1207, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint64] */;
    %1209 = @func_11843(%1208) /* ty=(Tensor[(15, 7, 5), uint64], Tensor[(10, 13, 16), float64]) */;
    %1210 = cast(%var_14027, dtype="bool") /* ty=Tensor[(525), bool] */;
    %1211 = shape_of(%var_14017, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1212 = cast(%var_14017, dtype="bool") /* ty=Tensor[(525), bool] */;
    %1213 = dyn.reshape(%1210, %1211, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1214 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1215 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1216 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1217 = %1206.0;
    %1218 = %1209.1;
    %1219 = less_equal(%1212, %1213) /* ty=Tensor[(525), bool] */;
    %1220 = @func_9253() /* ty=Tensor[(2, 4, 15), float64] */;
    %1221 = %1214.1;
    %1222 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
    %1223 = %1215.0;
    %1224 = %1216.0;
    (%1217, %1218, %1219, %1220, %1221, %1222, %1223, %1224)
  };
  %1225(%var_14075, %var_14076) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(525), bool], Tensor[(2, 4, 15), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_2120() -> (Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) {
  %1231 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) {
    %1226 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1227 = cast(meta[relay.Constant][33] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1228 = reshape(%1227, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %1229 = %1226.1;
    %1230 = @func_1015(%1228) /* ty=Tensor[(3, 16, 16), float32] */;
    (%1229, %1230, meta[relay.Constant][33] /* ty=Tensor[(768), float64] */)
  };
  %1231() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */
}

def @func_11136(%var_11134: Tensor[(75), uint32]) -> (Tensor[(10, 13, 16), float32], Tensor[(13, 15, 5), uint32], Tensor[(75), uint32], Tensor[(975), uint32]) {
  @func_11133(%var_11134) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(13, 15, 5), uint32], Tensor[(75), uint32], Tensor[(975), uint32]) */
}

def @func_3880() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  @func_3878() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_6692() -> (Tensor[(10, 13, 16), float64],) {
  %1232 = @func_6668() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */;
  %1233 = %1232.1;
  (%1233,)
}

def @func_16377() -> (Tensor[(10, 13, 16), bool],) {
  @func_16375() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_11344() -> (Tensor[(10, 13, 16), float32],) {
  %1236 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1234 = @func_2953() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1235 = %1234.0;
    (%1235,)
  };
  %1236() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_5733() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_5731() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_11214() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) {
  @func_11212() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */
}

def @func_13815() -> Tensor[(10, 13, 16), float64] {
  %1237 = fn () -> Tensor[(10, 13, 16), float64] {
    @func_2159() /* ty=Tensor[(10, 13, 16), float64] */
  };
  %1237() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_15725() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_15723() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_15928() -> Tensor[(10, 13, 16), float64] {
  @func_14182() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_6552() -> Tensor[(10, 13, 16), float32] {
  @func_6550() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_9662(%var_9660: Tensor[(27), float32]) -> (Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) {
  @func_9659(%var_9660) /* ty=(Tensor[(14, 13, 9), float32], Tensor[(10, 13, 16), float64], Tensor[(27), float32]) */
}

def @func_10690() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1242 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1238 = @func_5833() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1239 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1240 = %1238.0;
    %1241 = %1239.2;
    (%1240, %1241)
  };
  %1242() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_4979() -> Tensor[(10, 13, 16), float64] {
  %1244 = fn () -> Tensor[(10, 13, 16), float64] {
    %1243 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1243.1
  };
  %1244() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_7484() -> (Tensor[(10, 13, 16), float32],) {
  %1249 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1245 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1246 = %1245.0;
    %1247 = cast(%1246, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1248 = log2(%1247) /* ty=Tensor[(10, 13, 16), float32] */;
    (%1248,)
  };
  %1249() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_1438() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1254 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1250 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1251 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1252 = %1250.0;
    %1253 = %1251.0;
    (%1252, %1253)
  };
  %1254() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_13201() -> (Tensor[(10, 13, 16), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) {
  %1261 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) {
    %1255 = @func_4876() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1256 = @func_7063() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(4, 1, 3), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) */;
    %1257 = @func_1073() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1258 = %1255.0;
    %1259 = %1256.3;
    %1260 = %1257.0;
    (%1258, %1259, %1260)
  };
  %1261() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_16871() -> (Tensor[(10, 13, 16), float32], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(14, 3), float64], Tensor[(10, 13, 16), float32]) {
  @func_16869() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(14, 3), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_2513() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1279 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1262 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1263 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
    %1264 = cast(%1263, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    %1265 = cast(%1263, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1266 = reshape(%1264, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float64] */;
    %1267 = reshape(%1265, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
    %1268 = @func_1233(%1266, %1267) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), int8]) */;
    %1269 = %1268.2;
    %1270 = cast(%1263, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    %1271 = shape_of(%1269, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1272 = cast(%1269, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
    %1273 = dyn.reshape(%1270, %1271, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1274 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1275 = %1262.0;
    %1276 = add(%1272, %1273) /* ty=Tensor[(10, 13, 16), float64] */;
    %1277 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
    %1278 = %1274.0;
    (%1275, %1276, %1277, %1278)
  };
  %1279() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_11291(%var_11289: Tensor[(180), uint32], %var_11290: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(768), float32], Tensor[(180), uint32], Tensor[(768), float32]) {
  @func_11287(%var_11289, %var_11290) /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(768), float32], Tensor[(180), uint32], Tensor[(768), float32]) */
}

def @func_16690() -> Tensor[(10, 13, 16), float32] {
  %1280 = @func_7831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1280.1
}

def @func_16869() -> (Tensor[(10, 13, 16), float32], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32], Tensor[(14, 3), float64], Tensor[(10, 13, 16), float32]) {
  %1281 = @func_1954() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool]) */;
  %1282 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
  %1283 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %1284 = reshape(%1283, newshape=[1, 42]) /* ty=Tensor[(1, 42), float64] */;
  %1285 = @func_8425(%1284) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1, 42), float64]) */;
  %1286 = %1281.1;
  %1287 = %1282.0;
  %1288 = %1285.2;
  %1289 = @func_9141() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1286, %1287, %1288, meta[relay.Constant][34] /* ty=Tensor[(14, 3), float64] */, %1289)
}

def @func_702() -> Tensor[(10, 13, 16), float32] {
  @func_700() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_7596() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1290 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1291 = %1290.0;
  %1292 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1291, %1292)
}

def @func_4043() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1293 = @func_2679() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1294 = @func_3130() /* ty=Tensor[(10, 13, 16), float32] */;
  %1295 = %1293.1;
  (%1294, %1295)
}

def @func_2225() -> (Tensor[(10, 13, 16), float64],) {
  %1296 = @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1297 = %1296.0;
  (%1297,)
}

def @func_9338() -> (Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32]) {
  %1298 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
  %1299 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1300 = %1298.0;
  %1301 = %1299.0;
  (%1300, %1301)
}

def @func_1939() -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) {
  %1302 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1303 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1304 = %1302.0;
  %1305 = %1303.0;
  (%1304, %1305)
}

def @func_4178() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1312 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %1306 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1307 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1308 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1309 = %1306.0;
    %1310 = %1307.0;
    %1311 = %1308.0;
    (%1309, %1310, %1311)
  };
  %1312() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_4000(%var_3999: int64) -> (Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(10, 13, 16), float64]) {
  %1321 = fn (%var_3989: int64) -> (Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(10, 13, 16), float64]) {
    %1313 = @func_2225() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1314 = cast(%var_3989, dtype="int64") /* ty=int64 */;
    %1315 = reshape(%1314, newshape=[]) /* ty=int64 */;
    %1316 = @func_325(%1315) /* ty=(Tensor[(13, 15, 1), int64],) */;
    %1317 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1318 = %1313.0;
    %1319 = %1316.0;
    %1320 = %1317.0;
    (%1318, %1319, %var_3989, %1320)
  };
  %1321(%var_3999) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(13, 15, 1), int64], int64, Tensor[(10, 13, 16), float64]) */
}

def @func_1289() -> (Tensor[(10, 13, 16), float32],) {
  %1322 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1323 = %1322.0;
  (%1323,)
}

def @func_11287(%var_11271: Tensor[(180), uint32], %var_11272: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(768), float32], Tensor[(180), uint32], Tensor[(768), float32]) {
  %1324 = @func_11093() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1325 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1326 = @func_3437() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1327 = cast(%var_11271, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %1328 = cast(%var_11272, dtype="float32") /* ty=Tensor[(768), float32] */;
  %1329 = cast(%var_11271, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %1330 = reshape(%1327, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
  %1331 = reshape(%1328, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %1332 = reshape(%1329, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), uint32] */;
  %1333 = @func_3245(%1330, %1331, %1332) /* ty=(Tensor[(2, 10, 9), bool], Tensor[(10, 13, 16), float32], Tensor[(768), float32], Tensor[(2, 10, 9), uint16]) */;
  %1334 = %1324.0;
  %1335 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  %1336 = %1325.0;
  %1337 = %1326.0;
  %1338 = %1333.2;
  (%1334, %1335, %1336, %1337, %1338, %var_11271, %var_11272)
}

def @func_15769() -> (Tensor[(8, 11, 9), uint32], Tensor[(10, 13, 16), float32]) {
  %1339 = @func_7596() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1340 = @func_12370() /* ty=Tensor[(8, 11, 9), uint32] */;
  %1341 = %1339.1;
  (%1340, %1341)
}

def @func_8597() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1342 = @func_7153() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1343 = @func_6183() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1344 = %1342.2;
  %1345 = %1343.0;
  %1346 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1344, %1345, %1346)
}

def @func_3147(%var_3140: Tensor[(4, 1, 3), float32]) -> Tensor[(4, 1, 3), float32] {
  %1347 = cast(%var_3140, dtype="float32") /* ty=Tensor[(4, 1, 3), float32] */;
  log10(%1347) /* ty=Tensor[(4, 1, 3), float32] */
}

def @func_9276() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32]) {
  %1352 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32]) {
    %1348 = @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */;
    %1349 = @func_9141() /* ty=Tensor[(10, 13, 16), float32] */;
    %1350 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
    %1351 = %1348.0;
    (%1349, %1350, %1351)
  };
  %1352() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32]) */
}

def @func_5361() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  %1356 = fn () -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
    %1353 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1354 = @func_4921() /* ty=Tensor[(10, 13, 16), float64] */;
    %1355 = %1353.0;
    (%1354, %1355)
  };
  %1356() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_13753() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  @func_13751() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_5516() -> Tensor[(10, 13, 16), float32] {
  %1357 = fn () -> Tensor[(10, 13, 16), float32] {
    @func_419() /* ty=Tensor[(10, 13, 16), float32] */
  };
  %1357() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_11529() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1358 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1359 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1360 = %1358.0;
  %1361 = %1359.0;
  (%1360, %1361)
}

def @func_15037() -> (Tensor[(10, 13, 16), float64],) {
  @func_15035() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_12858() -> Tensor[(3, 16, 16), float32] {
  %1362 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
  %1362.1
}

def @func_2104() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1367 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1363 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
    %1364 = @func_1090() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1365 = %1363.1;
    %1366 = %1364.0;
    (%1365, %1366)
  };
  %1367() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_16621() -> (Tensor[(10, 13, 16), float64],) {
  %1370 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %1368 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1369 = %1368.0;
    (%1369,)
  };
  %1370() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_16798() -> (Tensor[(10, 13, 16), float64],) {
  %1372 = fn () -> (Tensor[(10, 13, 16), float64],) {
    %1371 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
    (%1371,)
  };
  %1372() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_17361(%var_17359: Tensor[(1, 6, 15), float32], %var_17360: Tensor[(8, 6, 15), float32]) -> (Tensor[(8, 6, 15), float32], Tensor[(10, 13, 16), float64]) {
  @func_17357(%var_17359, %var_17360) /* ty=(Tensor[(8, 6, 15), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_8492() -> Tensor[(10, 13, 16), bool] {
  @func_8490() /* ty=Tensor[(10, 13, 16), bool] */
}

def @func_13425(%var_13423: Tensor[(65, 4), float64], %var_13424: Tensor[(65, 4), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(65, 4), int32]) {
  %1384 = fn (%var_13398: Tensor[(65, 4), float64], %var_13411: Tensor[(65, 4), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(65, 4), int32]) {
    %1373 = cast(%var_13398, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
    %1374 = reshape(%1373, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %1375 = @func_5963(%1374) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(13, 4, 5), uint32]) */;
    %1376 = cast(%var_13411, dtype="int32") /* ty=Tensor[(65, 4), int32] */;
    %1377 = shape_of(%var_13398, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1378 = cast(%var_13398, dtype="int32") /* ty=Tensor[(65, 4), int32] */;
    %1379 = dyn.reshape(%1376, %1377, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1380 = @func_6963() /* ty=Tensor[(10, 13, 16), float32] */;
    %1381 = %1375.2;
    %1382 = @func_12858() /* ty=Tensor[(3, 16, 16), float32] */;
    %1383 = bitwise_or(%1378, %1379) /* ty=Tensor[(65, 4), int32] */;
    (%1380, %1381, %1382, %1383)
  };
  %1384(%var_13423, %var_13424) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(65, 4), int32]) */
}

def @func_3641() -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1389 = fn () -> (Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1385 = @func_2119() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(768), float64]) */;
    %1386 = @func_627() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1387 = %1385.1;
    %1388 = %1386.1;
    (%1387, %1388)
  };
  %1389() /* ty=(Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_5731() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1390 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  %1391 = @func_1147() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1390, %1391)
}

def @func_10321() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_10319() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_9340() -> (Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32]) {
  @func_9338() /* ty=(Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_16670() -> Tensor[(10, 13, 16), float64] {
  @func_16668() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_2161() -> Tensor[(10, 13, 16), float64] {
  @func_2159() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_6183() -> (Tensor[(10, 13, 16), float32],) {
  %1392 = @func_4946() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1393 = %1392.1;
  (%1393,)
}

def @func_9379() -> Tensor[(10, 13, 16), float32] {
  %1395 = fn () -> Tensor[(10, 13, 16), float32] {
    %1394 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1394.1
  };
  %1395() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_7663() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1408 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1396 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1397 = @func_4643() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1398 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1399 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1400 = %1399.1;
    %1401 = cast(%1400, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1402 = reshape(%1401, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
    %1403 = @func_3501(%1402) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1404 = %1396.0;
    %1405 = %1397.1;
    %1406 = %1398.0;
    %1407 = %1403.2;
    (%1404, %1405, %1406, %1400, %1407)
  };
  %1408() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_3418() -> (Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1409 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1410 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 96), float64] */, dtype="float64") /* ty=Tensor[(8, 96), float64] */;
  %1411 = reshape(%1410, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %1412 = @func_1015(%1411) /* ty=Tensor[(3, 16, 16), float32] */;
  %1413 = cast(%1412, dtype="float32") /* ty=Tensor[(3, 16, 16), float32] */;
  %1414 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1415 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1416 = %1409.0;
  %1417 = log10(%1413) /* ty=Tensor[(3, 16, 16), float32] */;
  %1418 = %1414.0;
  %1419 = %1415.0;
  (%1416, meta[relay.Constant][35] /* ty=Tensor[(8, 96), float64] */, %1417, %1418, %1419)
}

def @func_3660() -> (Tensor[(10, 13, 16), float64],) {
  @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_12126(%var_12074: Tensor[(2, 16, 13), float32], %var_12120: int64) -> (Tensor[(2, 16, 13), float32], Tensor[(10, 13, 16), bool], Tensor[(13, 15, 1), int64], int64) {
  %1420 = cast(%var_12074, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %1421 = erf(%1420) /* ty=Tensor[(2, 16, 13), float32] */;
  %1422 = cast(%1421, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %1423 = @func_8014() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
  %1424 = cast(%var_12120, dtype="int64") /* ty=int64 */;
  %1425 = reshape(%1424, newshape=[]) /* ty=int64 */;
  %1426 = @func_325(%1425) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %1427 = sinh(%1422) /* ty=Tensor[(2, 16, 13), float32] */;
  %1428 = %1423.4;
  %1429 = %1426.0;
  (%1427, %1428, %1429, %var_12120)
}

def @func_12860() -> Tensor[(3, 16, 16), float32] {
  @func_12858() /* ty=Tensor[(3, 16, 16), float32] */
}

def @func_14363() -> Tensor[(10, 13, 16), float32] {
  @func_3554() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_1090() -> (Tensor[(10, 13, 16), float64],) {
  %1430 = @func_584() /* ty=Tensor[(10, 13, 16), float64] */;
  (%1430,)
}

def @func_15513() -> (Tensor[(10, 13, 16), float64],) {
  %1431 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1432 = %1431.0;
  (%1432,)
}

def @func_15101(%var_15099: uint32, %var_15100: Tensor[(5, 12, 10), uint32]) -> Tensor[(5, 12, 10), uint32] {
  @func_15097(%var_15099, %var_15100) /* ty=Tensor[(5, 12, 10), uint32] */
}

def @func_9142() -> Tensor[(10, 13, 16), float32] {
  %1434 = fn () -> Tensor[(10, 13, 16), float32] {
    %1433 = @func_2739() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
    %1433.2
  };
  %1434() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_9396() -> Tensor[(10, 13, 16), float64] {
  %1435 = fn () -> Tensor[(10, 13, 16), float64] {
    @func_5491() /* ty=Tensor[(10, 13, 16), float64] */
  };
  %1435() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_12873() -> (Tensor[(10, 13, 16), float32],) {
  %1436 = @func_9752() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1437 = %1436.0;
  (%1437,)
}

def @func_4333() -> (Tensor[(10, 13, 16), float32],) {
  %1438 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1439 = %1438.1;
  (%1439,)
}

def @func_10451() -> Tensor[(10, 13, 16), float32] {
  %1441 = fn () -> Tensor[(10, 13, 16), float32] {
    %1440 = @func_7831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1440.1
  };
  %1441() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_3173() -> (Tensor[(15, 14, 8), float32],) {
  %1444 = fn () -> (Tensor[(15, 14, 8), float32],) {
    %1442 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 8), float32] */;
    %1443 = log10(%1442) /* ty=Tensor[(15, 14, 8), float32] */;
    (%1443,)
  };
  %1444() /* ty=(Tensor[(15, 14, 8), float32],) */
}

def @func_11510() -> (Tensor[(10, 13, 16), float64],) {
  %1445 = @func_9713() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1446 = %1445.0;
  (%1446,)
}

def @func_4045() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_4043() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_6740() -> (Tensor[(10, 13, 16), bool],) {
  %1449 = fn () -> (Tensor[(10, 13, 16), bool],) {
    %1447 = @func_6654() /* ty=(Tensor[(10, 13, 16), bool],) */;
    %1448 = %1447.0;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_559() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1454 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1450 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1451 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1452 = %1450.0;
    %1453 = %1451.0;
    (%1452, %1453)
  };
  %1454() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_5441(%var_5439: Tensor[(15, 9, 15), float32]) -> (Tensor[(15, 9, 15), float32],) {
  @func_5438(%var_5439) /* ty=(Tensor[(15, 9, 15), float32],) */
}

def @func_10652() -> (Tensor[(13, 10, 5), float64],) {
  %1457 = fn () -> (Tensor[(13, 10, 5), float64],) {
    %1455 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 5), float64] */;
    %1456 = tan(%1455) /* ty=Tensor[(13, 10, 5), float64] */;
    (%1456,)
  };
  %1457() /* ty=(Tensor[(13, 10, 5), float64],) */
}

def @func_5305() -> (Tensor[(10, 13, 16), float32],) {
  %1460 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1458 = @func_4211() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(1560), int8]) */;
    %1459 = %1458.0;
    (%1459,)
  };
  %1460() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_5107() -> (Tensor[(10, 13, 16), float32],) {
  @func_5105() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_6887(%var_6886: Tensor[(1, 3, 14), float64]) -> (Tensor[(1, 3, 14), float64], Tensor[(10, 13, 16), float32]) {
  %1465 = fn (%var_6864: Tensor[(1, 3, 14), float64]) -> (Tensor[(1, 3, 14), float64], Tensor[(10, 13, 16), float32]) {
    %1461 = cast(%var_6864, dtype="float64") /* ty=Tensor[(1, 3, 14), float64] */;
    %1462 = @func_1939() /* ty=(Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32]) */;
    %1463 = sinh(%1461) /* ty=Tensor[(1, 3, 14), float64] */;
    %1464 = %1462.1;
    (%1463, %1464)
  };
  %1465(%var_6886) /* ty=(Tensor[(1, 3, 14), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_14261() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(10, 13, 16), float32]) {
  %1466 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1467 = @func_5105() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1468 = @func_10087() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1469 = %1468.0;
  %1470 = cast(%1469, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %1471 = cast(meta[relay.Constant][38] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1472 = reshape(%1470, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
  %1473 = reshape(%1471, newshape=[16, 48]) /* ty=Tensor[(16, 48), float64] */;
  %1474 = @func_3813(%1472, %1473) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(6, 260), uint16], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(16, 48), float64], Tensor[(3, 16, 16), float32]) */;
  %1475 = @func_11343() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1476 = %1466.1;
  %1477 = %1467.0;
  %1478 = @func_14182() /* ty=Tensor[(10, 13, 16), float64] */;
  %1479 = @func_10450() /* ty=Tensor[(10, 13, 16), float32] */;
  %1480 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  %1481 = @func_6550() /* ty=Tensor[(10, 13, 16), float32] */;
  %1482 = %1474.3;
  %1483 = %1475.0;
  (%1476, %1477, %1469, %1478, %1479, %1480, %1481, %1482, meta[relay.Constant][38] /* ty=Tensor[(768), float64] */, %1483)
}

def @func_3437() -> (Tensor[(10, 13, 16), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1484 = @func_3418() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(8, 96), float64], Tensor[(3, 16, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1485 = @func_829() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1486 = @func_2159() /* ty=Tensor[(10, 13, 16), float64] */;
  %1487 = %1484.2;
  %1488 = %1485.0;
  (%1486, %1487, %1488)
}

def @func_14625(%var_14623: Tensor[(768), float32]) -> (Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float32]) {
  @func_14622(%var_14623) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float32]) */
}

def @func_16037() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), bool], Tensor[(10, 13, 16), float64]) {
  %1489 = @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1490 = @func_3658() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1491 = @func_10716() /* ty=Tensor[(10, 13, 16), float64] */;
  %1492 = @func_15928() /* ty=Tensor[(10, 13, 16), float64] */;
  %1493 = %1489.0;
  %1494 = %1490.0;
  (%1491, %1492, %1493, %1494)
}

def @func_2066() -> (Tensor[(10, 13, 16), float64],) {
  %1495 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1496 = %1495.1;
  (%1496,)
}

def @func_679(%var_662: Tensor[(13, 8, 15), int8]) -> (Tensor[(13, 8, 15), bool], Tensor[(13, 15, 1), int64], int64) {
  %1497 = cast(%var_662, dtype="bool") /* ty=Tensor[(13, 8, 15), bool] */;
  %1498 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(13, 8, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1499 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 8, 15), int8] */, dtype="bool") /* ty=Tensor[(13, 8, 15), bool] */;
  %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1501 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1502 = reshape(%1501, newshape=[]) /* ty=int64 */;
  %1503 = @func_325(%1502) /* ty=(Tensor[(13, 15, 1), int64],) */;
  %1504 = less_equal(%1499, %1500) /* ty=Tensor[(13, 8, 15), bool] */;
  %1505 = %1503.0;
  (%1504, %1505, 6 /* ty=int64 */)
}

def @func_7439() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_1126() -> (Tensor[(10, 13, 16), float64],) {
  @func_1124() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_7063() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(4, 1, 3), float32], Tensor[(12), float32], Tensor[(10, 13, 16), float64]) {
  %1506 = @func_5666() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1507 = @func_4759() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1508 = cast(meta[relay.Constant][40] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %1509 = reshape(%1508, newshape=[4, 1, 3]) /* ty=Tensor[(4, 1, 3), float32] */;
  %1510 = @func_1326() /* ty=(Tensor[(10, 13, 16), float64],) */;
  %1511 = %1506.0;
  %1512 = %1507.0;
  %1513 = @func_3147(%1509) /* ty=Tensor[(4, 1, 3), float32] */;
  %1514 = %1510.0;
  (%1511, %1512, %1513, meta[relay.Constant][40] /* ty=Tensor[(12), float32] */, %1514)
}

def @func_2616() -> (Tensor[(10, 13, 16), float32],) {
  %1515 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1515,)
}

def @func_6250() -> (Tensor[(10, 13, 16), float32],) {
  @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_17294(%var_17291: Tensor[(15, 14, 4), int32], %var_17292: Tensor[(15, 14, 4), int32], %var_17293: Tensor[(15, 14, 4), bool]) -> (Tensor[(15, 14, 4), bool], Tensor[(10, 13, 16), bool], Tensor[(15, 14, 4), int64]) {
  @func_17289(%var_17291, %var_17292, %var_17293) /* ty=(Tensor[(15, 14, 4), bool], Tensor[(10, 13, 16), bool], Tensor[(15, 14, 4), int64]) */
}

def @func_16563() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1518 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1516 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
    %1517 = @func_10716() /* ty=Tensor[(10, 13, 16), float64] */;
    (%1516, %1517)
  };
  %1518() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_15771() -> (Tensor[(8, 11, 9), uint32], Tensor[(10, 13, 16), float32]) {
  @func_15769() /* ty=(Tensor[(8, 11, 9), uint32], Tensor[(10, 13, 16), float32]) */
}

def @func_14457() -> (Tensor[(10, 13, 16), bool],) {
  %1519 = @func_1470() /* ty=(Tensor[(10, 13, 16), bool],) */;
  %1520 = %1519.0;
  (%1520,)
}

def @func_627() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1521 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1522 = %1521.0;
  %1523 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
  (%1522, %1523)
}

def @func_4246() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_4244() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_877() -> (Tensor[(10, 13, 16), float32],) {
  @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_14958() -> (Tensor[(10, 13, 16), float64],) {
  @func_14956() /* ty=(Tensor[(10, 13, 16), float64],) */
}

def @func_4921() -> Tensor[(10, 13, 16), float64] {
  %1524 = @func_1734() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1524.0
}

def @func_14775() -> (Tensor[(3, 16, 16), int16],) {
  %1527 = fn () -> (Tensor[(3, 16, 16), int16],) {
    %1525 = @func_14166() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(1170), int8], Tensor[(3, 16, 16), int16], Tensor[(768), float32]) */;
    %1526 = %1525.4;
    (%1526,)
  };
  %1527() /* ty=(Tensor[(3, 16, 16), int16],) */
}

def @func_9604(%var_9555: Tensor[(54, 2), float32]) -> (Tensor[(10, 13, 16), bool], Tensor[(54, 2), bool], Tensor[(54, 2), float32], Tensor[(54, 2), float64]) {
  %1528 = cast(%var_9555, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %1529 = reshape(%1528, newshape=[9, 4, 3]) /* ty=Tensor[(9, 4, 3), float32] */;
  %1530 = @func_8535(%1529) /* ty=(Tensor[(9, 4, 3), float32], Tensor[(10, 13, 16), float32]) */;
  %1531 = %1530.0;
  %1532 = cast(%1531, dtype="bool") /* ty=Tensor[(9, 4, 3), bool] */;
  %1533 = shape_of(%var_9555, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1534 = cast(%var_9555, dtype="bool") /* ty=Tensor[(54, 2), bool] */;
  %1535 = dyn.reshape(%1532, %1533, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1536 = cast(meta[relay.Constant][41] /* ty=Tensor[(54, 2), float32] */, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %1537 = shape_of(%var_9555, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1538 = cast(%var_9555, dtype="float32") /* ty=Tensor[(54, 2), float32] */;
  %1539 = dyn.reshape(%1536, %1537, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1540 = cast(meta[relay.Constant][41] /* ty=Tensor[(54, 2), float32] */, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %1541 = @func_8490() /* ty=Tensor[(10, 13, 16), bool] */;
  %1542 = less(%1534, %1535) /* ty=Tensor[(54, 2), bool] */;
  %1543 = divide(%1538, %1539) /* ty=Tensor[(54, 2), float32] */;
  %1544 = exp(%1540) /* ty=Tensor[(54, 2), float64] */;
  (%1541, %1542, %1543, %1544)
}

def @func_3878() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1545 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1546 = @func_1175() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1547 = @func_1437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
  %1548 = %1545.1;
  %1549 = @func_3130() /* ty=Tensor[(10, 13, 16), float32] */;
  %1550 = %1546.0;
  %1551 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
  %1552 = %1547.0;
  (%1548, %1549, %1550, %1551, %1552)
}

def @func_875() -> (Tensor[(10, 13, 16), float32],) {
  %1553 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1554 = %1553.0;
  (%1554,)
}

def @func_14263() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(10, 13, 16), float32]) {
  @func_14261() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(768), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_14184() -> Tensor[(10, 13, 16), float64] {
  @func_14182() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_17029() -> (Tensor[(10, 13, 16), float32],) {
  %1557 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1555 = @func_5304() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1556 = %1555.0;
    (%1556,)
  };
  %1557() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_7264() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1561 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1558 = @func_2276() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1559 = @func_419() /* ty=Tensor[(10, 13, 16), float32] */;
    %1560 = %1558.1;
    (%1559, %1560)
  };
  %1561() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_8026() -> (Tensor[(3, 16, 16), float32],) {
  @func_8024() /* ty=(Tensor[(3, 16, 16), float32],) */
}

def @func_12201() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  @func_12199() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_8912() -> Tensor[(10, 13, 16), float64] {
  @func_5491() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_6728() -> Tensor[(10, 13, 16), float32] {
  %1563 = fn () -> Tensor[(10, 13, 16), float32] {
    %1562 = @func_2616() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1562.0
  };
  %1563() /* ty=Tensor[(10, 13, 16), float32] */
}

def @func_4122() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1570 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %1564 = @func_3280() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1565 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1566 = @func_471() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1567 = %1564.0;
    %1568 = %1565.0;
    %1569 = %1566.0;
    (%1567, %1568, %1569)
  };
  %1570() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_2740() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  %1577 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
    %1571 = @func_1289() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1572 = @func_2592() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1573 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1574 = %1571.0;
    %1575 = %1572.0;
    %1576 = %1573.0;
    (%1574, %1575, %1576)
  };
  %1577() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_5605() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1581 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
    %1578 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1579 = %1578.1;
    %1580 = @func_2207() /* ty=Tensor[(10, 13, 16), float64] */;
    (%1579, %1580)
  };
  %1581() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */
}

def @func_9868() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(15, 9, 15), float32], Tensor[(135, 15), float32]) {
  %1589 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(15, 9, 15), float32], Tensor[(135, 15), float32]) {
    %1582 = @func_6957() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1583 = cast(meta[relay.Constant][42] /* ty=Tensor[(135, 15), float32] */, dtype="float32") /* ty=Tensor[(135, 15), float32] */;
    %1584 = reshape(%1583, newshape=[15, 9, 15]) /* ty=Tensor[(15, 9, 15), float32] */;
    %1585 = @func_5438(%1584) /* ty=(Tensor[(15, 9, 15), float32],) */;
    %1586 = @func_700() /* ty=Tensor[(10, 13, 16), float32] */;
    %1587 = %1582.0;
    %1588 = %1585.0;
    (%1586, %1587, %1588, meta[relay.Constant][42] /* ty=Tensor[(135, 15), float32] */)
  };
  %1589() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(15, 9, 15), float32], Tensor[(135, 15), float32]) */
}

def @func_8990(%var_8989: Tensor[(2, 15, 3), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(2, 15, 3), uint64]) {
  %1609 = fn (%var_8977: Tensor[(2, 15, 3), float64]) -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(2, 15, 3), uint64]) {
    %1590 = @func_7437() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1591 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1592 = @func_2512() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1593 = @func_3172() /* ty=(Tensor[(15, 14, 8), float32],) */;
    %1594 = %1591.0;
    %1595 = cast(%1594, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
    %1596 = reshape(%1595, newshape=[10, 13, 16]) /* ty=Tensor[(10, 13, 16), float32] */;
    %1597 = @func_3501(%1596) /* ty=(Tensor[(2, 15, 3), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
    %1598 = %1597.0;
    %1599 = cast(%1598, dtype="float64") /* ty=Tensor[(2, 15, 3), float64] */;
    %1600 = atan(%1599) /* ty=Tensor[(2, 15, 3), float64] */;
    %1601 = cast(%var_8977, dtype="uint64") /* ty=Tensor[(2, 15, 3), uint64] */;
    %1602 = shape_of(%1600, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1603 = cast(%1600, dtype="uint64") /* ty=Tensor[(2, 15, 3), uint64] */;
    %1604 = dyn.reshape(%1601, %1602, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1605 = %1590.1;
    %1606 = %1592.1;
    %1607 = %1593.0;
    %1608 = bitwise_xor(%1603, %1604) /* ty=Tensor[(2, 15, 3), uint64] */;
    (%1605, %1594, %1606, %1607, %1608)
  };
  %1609(%var_8989) /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(15, 14, 8), float32], Tensor[(2, 15, 3), uint64]) */
}

def @func_11846(%var_11844: Tensor[(15, 7, 5), uint64]) -> (Tensor[(15, 7, 5), uint64], Tensor[(10, 13, 16), float64]) {
  @func_11843(%var_11844) /* ty=(Tensor[(15, 7, 5), uint64], Tensor[(10, 13, 16), float64]) */
}

def @func_7331() -> (Tensor[(3, 16, 16), int16],) {
  %1610 = @func_2794() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(3, 16, 16), int16], Tensor[(8, 96), float32]) */;
  %1611 = %1610.4;
  (%1611,)
}

def @func_9044() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
  %1616 = fn () -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) {
    %1612 = @func_558() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */;
    %1613 = @func_875() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1614 = %1612.0;
    %1615 = %1613.0;
    (%1614, %1615)
  };
  %1616() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32]) */
}

def @func_11531() -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) {
  @func_11529() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */
}

def @func_14956() -> (Tensor[(10, 13, 16), float64],) {
  %1617 = @func_921() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) */;
  %1618 = %1617.1;
  (%1618,)
}

def @func_6468() -> (Tensor[(10, 13, 16), bool],) {
  @func_6466() /* ty=(Tensor[(10, 13, 16), bool],) */
}

def @func_12833() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) {
  @func_12831() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float64]) */
}

def @func_2953() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float64]) {
  %1619 = @func_1899() /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32]) */;
  %1620 = @func_2178() /* ty=Tensor[(10, 13, 16), float64] */;
  %1621 = cast(%1620, dtype="float64") /* ty=Tensor[(10, 13, 16), float64] */;
  %1622 = @func_2342() /* ty=Tensor[(10, 13, 16), float32] */;
  %1623 = %1619.1;
  %1624 = asinh(%1621) /* ty=Tensor[(10, 13, 16), float64] */;
  (%1622, %1623, %1624)
}

def @func_5834() -> (Tensor[(10, 13, 16), float32],) {
  %1627 = fn () -> (Tensor[(10, 13, 16), float32],) {
    %1625 = @func_2286() /* ty=(Tensor[(10, 13, 16), float32],) */;
    %1626 = %1625.0;
    (%1626,)
  };
  %1627() /* ty=(Tensor[(10, 13, 16), float32],) */
}

def @func_3817(%var_3815: Tensor[(10, 13, 16), float32], %var_3816: Tensor[(16, 48), float64]) -> (Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(6, 260), uint16], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(16, 48), float64], Tensor[(3, 16, 16), float32]) {
  @func_3813(%var_3815, %var_3816) /* ty=(Tensor[(10, 13, 16), float64], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), bool], Tensor[(6, 260), uint16], Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(3, 16, 16), float32], Tensor[(16, 48), float64], Tensor[(3, 16, 16), float32]) */
}

def @func_6718() -> Tensor[(10, 13, 16), float64] {
  %1629 = fn () -> Tensor[(10, 13, 16), float64] {
    %1628 = @func_2066() /* ty=(Tensor[(10, 13, 16), float64],) */;
    %1628.0
  };
  %1629() /* ty=Tensor[(10, 13, 16), float64] */
}

def @func_8837() -> (Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), float64], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(10, 13, 16), bool]) {
  @func_8835() /* ty=(Tensor[(10, 13, 16), float32], Tensor[(10, 13, 16), float32], Tensor[(13, 8, 15), bool], Tensor[(10, 13, 16), float64], Tensor[(9, 4, 3), float32], Tensor[(108), float32], Tensor[(10, 13, 16), bool]) */
}

def @func_9607(%var_9605: Tensor[(54, 2), float32]) -> (Tensor[(10, 13, 16), bool], Tensor[(54, 2), bool], Tensor[(54, 2), float32], Tensor[(54, 2), float64]) {
  @func_9604(%var_9605) /* ty=(Tensor[(10, 13, 16), bool], Tensor[(54, 2), bool], Tensor[(54, 2), float32], Tensor[(54, 2), float64]) */
}

def @func_11330() -> (Tensor[(10, 13, 16), float32],) {
  %1630 = @func_6248() /* ty=(Tensor[(10, 13, 16), float32],) */;
  %1631 = %1630.0;
  (%1631,)
}

def @func_8763() -> (Tensor[(10, 13, 16), float32],) {
  @func_8761() /* ty=(Tensor[(10, 13, 16), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen582/build/output.py:5873: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen582/build/output.py", line 5878, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(36) tvmgen_default_fused_asin_kernel0(float* __restrict__ T_asin, float* __restrict__ placeholder) {
  T_asin[(((int)threadIdx.x))] = asinf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_6492() -> Tensor[(11, 14, 10), float32] {
  %0 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %0.0
}

def @func_4419(%var_4411: Tensor[(16, 2, 4), int8]) -> Tensor[(16, 2, 4), int8] {
  %1 = cast(%var_4411, dtype="int8") /* ty=Tensor[(16, 2, 4), int8] */;
  %2 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 2, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 2, 4), int8] */, dtype="int8") /* ty=Tensor[(16, 2, 4), int8] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%3, %4) /* ty=Tensor[(16, 2, 4), int8] */
}

def @func_6714() -> (Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) {
  %5 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %6 = cast(meta[relay.Constant][1] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %7 = cast(meta[relay.Constant][2] /* ty=Tensor[(1694, 1), uint16] */, dtype="uint16") /* ty=Tensor[(1694, 1), uint16] */;
  %8 = reshape(%6, newshape=[]) /* ty=uint16 */;
  %9 = reshape(%7, newshape=[14, 11, 11]) /* ty=Tensor[(14, 11, 11), uint16] */;
  %10 = @func_5643(%8, %9) /* ty=(Tensor[(14, 11, 11), bool],) */;
  %11 = cast(meta[relay.Constant][3] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %12 = cast(meta[relay.Constant][3] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %13 = reshape(%11, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %14 = reshape(%12, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %15 = @func_3645(%13, %14) /* ty=(Tensor[(9, 11, 4), float32],) */;
  %16 = %5.0;
  %17 = %10.0;
  %18 = %15.0;
  (%16, %17, meta[relay.Constant][1] /* ty=uint16 */, meta[relay.Constant][2] /* ty=Tensor[(1694, 1), uint16] */, %18, meta[relay.Constant][3] /* ty=Tensor[(396), float32] */)
}

def @func_11512(%var_11507: int64, %var_11509: Tensor[(250), int16]) -> (Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), bool], Tensor[(15, 5, 1), int64], int64, Tensor[(15, 5), int64], Tensor[(250), int16]) {
  %19 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %20 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %21 = @func_8484() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %22 = %21.1;
  %23 = cast(meta[relay.Constant][4] /* ty=Tensor[(1920), float32] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %24 = shape_of(%22, dtype="int32") /* ty=Tensor[(1), int32] */;
  %25 = cast(%22, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?), bool] */;
  %27 = cast(%var_11507, dtype="int64") /* ty=int64 */;
  %28 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 5), int64] */, dtype="int64") /* ty=Tensor[(15, 5), int64] */;
  %29 = cast(%var_11509, dtype="int16") /* ty=Tensor[(250), int16] */;
  %30 = reshape(%27, newshape=[]) /* ty=int64 */;
  %31 = reshape(%28, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
  %32 = reshape(%29, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
  %33 = @func_1462(%30, %31, %32) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
  %34 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %35 = %19.3;
  %36 = %20.0;
  %37 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  %38 = less(%25, %26) /* ty=Tensor[(1920), bool] */;
  %39 = %33.0;
  (%34, %35, %36, %37, %38, %39, %var_11507, meta[relay.Constant][5] /* ty=Tensor[(15, 5), int64] */, %var_11509)
}

def @func_8302() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %40 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %41 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %42 = %40.0;
  %43 = %41.0;
  %44 = @func_6913() /* ty=Tensor[(11, 14, 10), float32] */;
  %45 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%42, %43, %44, %45)
}

def @func_16911() -> (Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) {
  %46 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %47 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %48 = %46.0;
  %49 = %47.0;
  (%48, %49)
}

def @func_9124() -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %50 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %51 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %52 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %53 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
  %54 = %50.0;
  %55 = %51.0;
  %56 = %52.0;
  (%53, %54, %55, %56)
}

def @func_18939(%var_18934: float64) -> Tensor[(14, 1, 10), float64] {
  %57 = cast(%var_18934, dtype="float64") /* ty=float64 */;
  %58 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 10), float64] */;
  power(%57, %58) /* ty=Tensor[(14, 1, 10), float64] */
}

def @func_19379() -> (float32,) {
  %59 = @func_16366() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) */;
  %60 = %59.4;
  (%60,)
}

def @func_16117(%var_16068: Tensor[(5, 14, 7), uint32], %var_16069: Tensor[(5, 14, 7), uint32]) -> (Tensor[(5, 14, 7), uint32], Tensor[(11, 14, 10), float32], Tensor[(5, 14, 7), float64], Tensor[(11, 14, 10), float64]) {
  %61 = cast(%var_16069, dtype="uint32") /* ty=Tensor[(5, 14, 7), uint32] */;
  %62 = shape_of(%var_16068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%var_16068, dtype="uint32") /* ty=Tensor[(5, 14, 7), uint32] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %65 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %66 = cast(%var_16069, dtype="float64") /* ty=Tensor[(5, 14, 7), float64] */;
  %67 = bitwise_and(%63, %64) /* ty=Tensor[(5, 14, 7), uint32] */;
  %68 = %65.0;
  %69 = acosh(%66) /* ty=Tensor[(5, 14, 7), float64] */;
  %70 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  (%67, %68, %69, %70)
}

def @func_12054() -> (Tensor[(1920), float32],) {
  %71 = @func_7472() /* ty=(Tensor[(1920), float32],) */;
  %72 = %71.0;
  (%72,)
}

def @func_9372() -> Tensor[(11, 14, 10), float32] {
  @func_6492() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_4813(%var_4725: Tensor[(8, 7, 1), bool], %var_4726: Tensor[(8, 7, 7), bool], %var_4735: Tensor[(250), int16], %var_4751: Tensor[(16), float32], %var_4802: float32, %var_4803: Tensor[(96, 20), float32], %var_4811: Tensor[(2112), bool]) -> (Tensor[(8, 7, 7), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(250), int16], Tensor[(2, 1, 8), float32], Tensor[(16), float32], Tensor[(8, 7, 33), bool], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(10, 5, 5), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(96, 20), float32], Tensor[(10, 5, 5), bool], Tensor[(1920), float32], Tensor[(2112), bool]) {
  %73 = cast(%var_4725, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
  %74 = cast(%var_4726, dtype="bool") /* ty=Tensor[(8, 7, 7), bool] */;
  %75 = cast(meta[relay.Constant][7] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %76 = cast(meta[relay.Constant][8] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %77 = cast(%var_4735, dtype="int16") /* ty=Tensor[(250), int16] */;
  %78 = reshape(%75, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %79 = reshape(%76, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %80 = reshape(%77, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %81 = @func_2152(%78, %79, %80) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %82 = cast(%var_4751, dtype="float32") /* ty=Tensor[(16), float32] */;
  %83 = reshape(%82, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %84 = cast(meta[relay.Constant][8] /* ty=Tensor[(33), float64] */, dtype="uint8") /* ty=Tensor[(33), uint8] */;
  %85 = cast(%var_4725, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %86 = bitwise_xor(%84, %85) /* ty=Tensor[(8, 7, 33), uint8] */;
  %87 = cast(meta[relay.Constant][8] /* ty=Tensor[(33), float64] */, dtype="bool") /* ty=Tensor[(33), bool] */;
  %88 = cast(%86, dtype="bool") /* ty=Tensor[(8, 7, 33), bool] */;
  %89 = cast(meta[relay.Constant][9] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %90 = reshape(%89, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %91 = cast(%var_4735, dtype="int16") /* ty=Tensor[(250), int16] */;
  %92 = reshape(%91, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %93 = @func_1345(%92) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %94 = %93.0;
  %95 = cast(%94, dtype="float64") /* ty=Tensor[(10, 5, 5), float64] */;
  %96 = exp(%95) /* ty=Tensor[(10, 5, 5), float64] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %98 = cast(%var_4802, dtype="float32") /* ty=float32 */;
  %99 = cast(%var_4803, dtype="float32") /* ty=Tensor[(96, 20), float32] */;
  %100 = reshape(%98, newshape=[]) /* ty=float32 */;
  %101 = reshape(%99, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %102 = @func_4158(%100, %101) /* ty=(Tensor[(15, 8, 16), bool],) */;
  %103 = cast(meta[relay.Constant][7] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %104 = cast(meta[relay.Constant][8] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %105 = tan(%97) /* ty=Tensor[(10, 5, 5), float32] */;
  %106 = cast(%105, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %107 = reshape(%103, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %108 = reshape(%104, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %109 = reshape(%106, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %110 = @func_2152(%107, %108, %109) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %111 = cast(%var_4811, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %112 = cast(%var_4811, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %113 = reshape(%111, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %114 = reshape(%112, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %115 = @func_4458(%113, %114) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %116 = logical_or(%73, %74) /* ty=Tensor[(8, 7, 7), bool] */;
  %117 = %81.1;
  %118 = @func_1860(%83) /* ty=Tensor[(2, 1, 8), float32] */;
  %119 = less(%87, %88) /* ty=Tensor[(8, 7, 33), bool] */;
  %120 = @func_4584(%90) /* ty=Tensor[(14, 13, 8), bool] */;
  %121 = %102.0;
  %122 = %110.1;
  %123 = %115.3;
  (%116, %117, meta[relay.Constant][7] /* ty=Tensor[(3), float64] */, %var_4735, %118, %var_4751, %119, %120, meta[relay.Constant][9] /* ty=Tensor[(1456), int32] */, %105, %121, %var_4802, %var_4803, %122, %123, %var_4811)
}

def @func_17019() -> (Tensor[(1920), float32],) {
  %124 = @func_10074() /* ty=Tensor[(1920), float32] */;
  (%124,)
}

def @func_17358() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %125 = @func_11244() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %126 = @func_12797() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %127 = %125.0;
  %128 = %126.0;
  (%127, %128)
}

def @func_18964(%var_18959: Tensor[(2, 14, 6), int32], %var_18960: Tensor[(2, 14, 6), int32]) -> (Tensor[(2, 14, 6), bool],) {
  %129 = cast(%var_18960, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
  %130 = shape_of(%var_18959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%var_18959, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %133 = less(%131, %132) /* ty=Tensor[(2, 14, 6), bool] */;
  (%133,)
}

def @func_7152() -> (Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) {
  %134 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %135 = %134.4;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
  %137 = sinh(%136) /* ty=Tensor[(9, 11, 4), float32] */;
  %138 = @func_7060() /* ty=Tensor[(1920), float32] */;
  (%137, %138)
}

def @func_13989() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %139 = @func_12471() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */;
  %140 = %139.0;
  %141 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%140, %141)
}

def @func_18640() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %142 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %143 = %142.0;
  %144 = @func_8742() /* ty=Tensor[(11, 14, 10), float32] */;
  (%143, %144)
}

def @func_12266() -> float32 {
  @func_9002() /* ty=float32 */
}

def @func_15281() -> Tensor[(11, 14, 10), float32] {
  %145 = @func_14237() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %145.0
}

def @func_10891() -> (Tensor[(11, 14, 10), float64],) {
  %146 = @func_10439() /* ty=Tensor[(11, 14, 10), float64] */;
  (%146,)
}

def @func_17112(%var_17078: Tensor[(2112, 1), bool], %var_17107: Tensor[(14, 11, 11), bool]) -> (Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2112, 1), bool], Tensor[(128), int8], Tensor[(14, 11, 11), bool]) {
  %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %148 = cast(%var_17078, dtype="bool") /* ty=Tensor[(2112, 1), bool] */;
  %149 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %150 = reshape(%147, newshape=[2, 3, 4]) /* ty=Tensor[(2, 3, 4), float32] */;
  %151 = reshape(%148, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %152 = reshape(%149, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %153 = @func_7271(%150, %151, %152) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */;
  %154 = %153.5;
  %155 = cast(%var_17107, dtype="bool") /* ty=Tensor[(14, 11, 11), bool] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%154, dtype="bool") /* ty=Tensor[(14, 11, 11), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %159 = @func_12140() /* ty=Tensor[(1920), float32] */;
  %160 = greater(%157, %158) /* ty=Tensor[(14, 11, 11), bool] */;
  (%159, meta[relay.Constant][10] /* ty=Tensor[(24), float32] */, %var_17078, meta[relay.Constant][11] /* ty=Tensor[(128), int8] */, %160)
}

def @func_11548(%var_11532: Tensor[(128), int8]) -> (Tensor[(11, 14, 10), float64], Tensor[(16, 2, 4), int8], Tensor[(128), int8]) {
  %161 = cast(%var_11532, dtype="int8") /* ty=Tensor[(128), int8] */;
  %162 = reshape(%161, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %163 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %164 = @func_4419(%162) /* ty=Tensor[(16, 2, 4), int8] */;
  (%163, %164, %var_11532)
}

def @func_9537() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %165 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %166 = %165.1;
  %167 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  (%166, %167)
}

def @func_12975(%var_12971: Tensor[(1456), int32]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) {
  %168 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %169 = cast(%var_12971, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %170 = reshape(%169, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %171 = %168.0;
  %172 = @func_4584(%170) /* ty=Tensor[(14, 13, 8), bool] */;
  (%171, %172, %var_12971)
}

def @func_14715() -> Tensor[(11, 14, 10), float64] {
  %173 = @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %173.0
}

def @func_18677() -> Tensor[(11, 14, 10), float64] {
  %174 = @func_17333() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %174.0
}

def @func_9002() -> float32 {
  %175 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %175.2
}

def @func_18125() -> Tensor[(11, 14, 10), float32] {
  %176 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %176.0
}

def @func_10529() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) {
  %177 = @func_9437() /* ty=(Tensor[(1920), float32],) */;
  %178 = %177.0;
  %179 = @func_7751() /* ty=Tensor[(11, 14, 10), float64] */;
  (%178, %179)
}

def @func_11756() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %180 = @func_10817() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %181 = @func_11313() /* ty=(Tensor[(1920), float32],) */;
  %182 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  %183 = %180.0;
  %184 = %181.0;
  %185 = @func_8742() /* ty=Tensor[(11, 14, 10), float32] */;
  (%182, %183, %184, %185)
}

def @func_10289() -> (Tensor[(1920), float32],) {
  %186 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %187 = %186.0;
  (%187,)
}

def @func_17066() -> Tensor[(1920), float32] {
  %188 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %188.1
}

def @func_19134() -> (Tensor[(11, 14, 10), float32],) {
  %189 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %190 = %189.1;
  (%190,)
}

def @func_18171() -> (Tensor[(11, 14, 10), float32], Tensor[(16), float32]) {
  %191 = @func_8821() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) */;
  %192 = %191.1;
  %193 = @func_13086() /* ty=Tensor[(16), float32] */;
  (%192, %193)
}

def @func_13786() -> (Tensor[(11, 14, 10), float32],) {
  %194 = @func_10572() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %195 = %194.0;
  (%195,)
}

def @func_19754() -> Tensor[(11, 14, 10), float32] {
  @func_18125() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_20827() -> (Tensor[(11, 14, 10), float32],) {
  %196 = @func_20233() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float32]) */;
  %197 = %196.0;
  (%197,)
}

def @func_12761(%var_12719: Tensor[(14, 5, 1), bool], %var_12720: Tensor[(14, 5, 11), bool]) -> (Tensor[(14, 5, 11), float64], Tensor[(14, 5, 11), float64]) {
  %198 = cast(%var_12719, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %199 = cast(%var_12720, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
  %200 = logical_and(%198, %199) /* ty=Tensor[(14, 5, 11), bool] */;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(14, 5, 11), float64] */;
  %202 = cast(%var_12720, dtype="float64") /* ty=Tensor[(14, 5, 11), float64] */;
  %203 = asin(%201) /* ty=Tensor[(14, 5, 11), float64] */;
  %204 = tan(%202) /* ty=Tensor[(14, 5, 11), float64] */;
  (%203, %204)
}

def @func_14113() -> Tensor[(1920), float32] {
  %205 = @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
  %205.0
}

def @func_6833() -> (Tensor[(11, 14, 10), float32],) {
  %206 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  (%206,)
}

def @func_14397(%var_14367: Tensor[(400), float64]) -> (Tensor[(1920), float32], Tensor[(1694, 14), bool], float32, Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(98, 242), float64]) {
  %207 = cast(meta[relay.Constant][12] /* ty=Tensor[(98, 242), uint16] */, dtype="uint16") /* ty=Tensor[(98, 242), uint16] */;
  %208 = cast(meta[relay.Constant][12] /* ty=Tensor[(98, 242), uint16] */, dtype="float32") /* ty=Tensor[(98, 242), float32] */;
  %209 = reshape(%207, newshape=[1694, 14]) /* ty=Tensor[(1694, 14), uint16] */;
  %210 = reshape(%208, newshape=[1694, 14]) /* ty=Tensor[(1694, 14), float32] */;
  %211 = @func_14204(%209, %210) /* ty=(Tensor[(1694, 14), bool],) */;
  %212 = cast(%var_14367, dtype="float64") /* ty=Tensor[(400), float64] */;
  %213 = cast(%var_14367, dtype="float64") /* ty=Tensor[(400), float64] */;
  %214 = reshape(%212, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %215 = reshape(%213, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %216 = cast(meta[relay.Constant][12] /* ty=Tensor[(98, 242), uint16] */, dtype="float32") /* ty=Tensor[(98, 242), float32] */;
  %217 = sin(%216) /* ty=Tensor[(98, 242), float32] */;
  %218 = cast(%217, dtype="float32") /* ty=Tensor[(98, 242), float32] */;
  %219 = log2(%218) /* ty=Tensor[(98, 242), float32] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(98, 242), float64] */;
  %221 = exp(%220) /* ty=Tensor[(98, 242), float64] */;
  %222 = cast(%221, dtype="float64") /* ty=Tensor[(98, 242), float64] */;
  %223 = @func_7868() /* ty=Tensor[(1920), float32] */;
  %224 = %211.0;
  %225 = @func_9002() /* ty=float32 */;
  %226 = @func_10165(%214, %215) /* ty=Tensor[(10, 8, 5), float64] */;
  %227 = asin(%222) /* ty=Tensor[(98, 242), float64] */;
  (%223, %224, %225, %226, %var_14367, %227)
}

def @func_6793() -> Tensor[(11, 14, 10), float32] {
  @func_6492() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_11313() -> (Tensor[(1920), float32],) {
  %228 = @func_7060() /* ty=Tensor[(1920), float32] */;
  (%228,)
}

def @func_19550() -> (Tensor[(1920), float32],) {
  %229 = @func_18267() /* ty=(Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %230 = %229.0;
  (%230,)
}

def @func_18611() -> (Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) {
  %231 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %232 = @func_10885() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */;
  %233 = %231.0;
  %234 = %232.4;
  (%233, %234)
}

def @func_13228() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) {
  %235 = @func_10399() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %236 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %237 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %238 = %235.2;
  %239 = %236.1;
  %240 = %237.1;
  (%238, %239, %240)
}

def @func_17333() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %241 = @func_16833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %242 = @func_14041() /* ty=Tensor[(11, 14, 10), float64] */;
  %243 = %241.0;
  (%242, %243)
}

def @func_13110() -> Tensor[(1920), float32] {
  @func_10074() /* ty=Tensor[(1920), float32] */
}

def @func_20389(%var_20372: Tensor[(168), int32]) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int32], Tensor[(11, 14, 10), float32]) {
  %244 = cast(%var_20372, dtype="int32") /* ty=Tensor[(168), int32] */;
  %245 = cast(%var_20372, dtype="int32") /* ty=Tensor[(168), int32] */;
  %246 = reshape(%244, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), int32] */;
  %247 = reshape(%245, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), int32] */;
  %248 = @func_18964(%246, %247) /* ty=(Tensor[(2, 14, 6), bool],) */;
  %249 = @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %250 = @func_17066() /* ty=Tensor[(1920), float32] */;
  %251 = @func_17307() /* ty=Tensor[(11, 14, 10), float32] */;
  %252 = %248.0;
  %253 = %249.1;
  (%250, %251, %252, %var_20372, %253)
}

def @func_21402() -> (Tensor[(1920), float32],) {
  %254 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
  %255 = %254.3;
  (%255,)
}

def @func_12073() -> (Tensor[(11, 14, 10), float64],) {
  %256 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  (%256,)
}

def @func_19702() -> (Tensor[(13, 14, 9), float64],) {
  %257 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
  %258 = log(%257) /* ty=Tensor[(13, 14, 9), float64] */;
  (%258,)
}

def @func_12140() -> Tensor[(1920), float32] {
  @func_10453() /* ty=Tensor[(1920), float32] */
}

def @func_9771(%var_9728: Tensor[(110), float64]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, ?, 11), uint32], Tensor[(10, ?, 11), float32]) {
  %259 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %260 = @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %261 = cast(%var_9728, dtype="float64") /* ty=Tensor[(110), float64] */;
  %262 = reshape(%261, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float64] */;
  %263 = @func_5477(%262) /* ty=(Tensor[(10, ?, 11), uint16],) */;
  %264 = %263.0;
  %265 = cast(%264, dtype="float64") /* ty=Tensor[(10, ?, 11), float64] */;
  %266 = log(%265) /* ty=Tensor[(10, ?, 11), float64] */;
  %267 = cast(%var_9728, dtype="uint32") /* ty=Tensor[(110), uint32] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%266, dtype="uint32") /* ty=Tensor[(10, ?, 11), uint32] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %271 = cast(%266, dtype="float32") /* ty=Tensor[(10, ?, 11), float32] */;
  %272 = %259.0;
  %273 = %260.1;
  %274 = multiply(%269, %270) /* ty=Tensor[(10, ?, 11), uint32] */;
  %275 = tan(%271) /* ty=Tensor[(10, ?, 11), float32] */;
  (%272, %273, %274, %275)
}

def @func_12471() -> (Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) {
  %276 = @func_9567() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */;
  %277 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %278 = %276.1;
  %279 = @func_9002() /* ty=float32 */;
  (%277, %278, %279)
}

def @func_11449(%var_11438: Tensor[(112, 1), float32]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 1, 8), float32], Tensor[(112, 1), float32]) {
  %280 = @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
  %281 = cast(%var_11438, dtype="float32") /* ty=Tensor[(112, 1), float32] */;
  %282 = reshape(%281, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), float32] */;
  %283 = %280.1;
  %284 = @func_10689(%282) /* ty=Tensor[(14, 1, 8), float32] */;
  (%283, %284, %var_11438)
}

def @main(%var_21572: Tensor[(10, 8, 5), float64]) -> (Tensor[(110), float64], Tensor[(10, 8, 5), bool]) {
  %285 = @func_16886() /* ty=(Tensor[(1920), float32], Tensor[(110), float64]) */;
  %286 = @func_18611() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) */;
  %287 = %286.1;
  %288 = cast(%var_21572, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %292 = %285.1;
  %293 = logical_and(%290, %291) /* ty=Tensor[(10, 8, 5), bool] */;
  (%292, %293)
}

def @func_19068() -> Tensor[(1920), float32] {
  %294 = @func_17019() /* ty=(Tensor[(1920), float32],) */;
  %294.0
}

def @func_18915() -> (Tensor[(11, 14, 10), float32],) {
  %295 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %296 = %295.0;
  (%296,)
}

def @func_7472() -> (Tensor[(1920), float32],) {
  %297 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %298 = %297.0;
  (%298,)
}

def @func_16622() -> (Tensor[(9, 11, 4), float32],) {
  %299 = @func_12471() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */;
  %300 = %299.1;
  (%300,)
}

def @func_10796() -> (float32, Tensor[(11, 14, 10), float32]) {
  %301 = @func_9567() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */;
  %302 = @func_9002() /* ty=float32 */;
  %303 = %301.0;
  (%302, %303)
}

def @func_13398() -> (Tensor[(11, 14, 10), float32],) {
  %304 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %305 = %304.0;
  (%305,)
}

def @func_17754(%var_17739: Tensor[(280), uint8], %var_17740: int64) -> (Tensor[(75), int64], Tensor[(280), uint8], int64, Tensor[(10, ?, 11), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) {
  %306 = cast(%var_17739, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %307 = cast(%var_17739, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %308 = cast(%var_17740, dtype="int64") /* ty=int64 */;
  %309 = reshape(%306, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %310 = reshape(%307, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %311 = reshape(%308, newshape=[]) /* ty=int64 */;
  %312 = @func_4330(%309, %310, %311) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
  %313 = @func_11288() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) */;
  %314 = %313.1;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(10, ?, 11), float64] */;
  %316 = @func_14546() /* ty=(Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) */;
  %317 = @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %318 = %312.3;
  %319 = asinh(%315) /* ty=Tensor[(10, ?, 11), float64] */;
  %320 = %316.0;
  %321 = %317.0;
  (%318, %var_17739, %var_17740, %319, %320, %321)
}

def @func_8967() -> (Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) {
  %322 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %323 = cast(meta[relay.Constant][14] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %324 = reshape(%323, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float32] */;
  %325 = @func_7459(%324) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */;
  %326 = cast(meta[relay.Constant][14] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %327 = %322.3;
  %328 = %325.1;
  %329 = sin(%326) /* ty=Tensor[(1540), float32] */;
  (%327, %328, %329)
}

def @func_1860(%var_1845: Tensor[(2, 1, 8), float32]) -> Tensor[(2, 1, 8), float32] {
  %330 = cast(%var_1845, dtype="float32") /* ty=Tensor[(2, 1, 8), float32] */;
  log2(%330) /* ty=Tensor[(2, 1, 8), float32] */
}

def @func_4458(%var_4435: Tensor[(16, 11, 12), bool], %var_4436: Tensor[(16, 11, 12), bool]) -> (Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) {
  %331 = cast(%var_4436, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %332 = shape_of(%var_4435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_4435, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(-2.39393f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %336 = cast(meta[relay.Constant][15] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %337 = reshape(%335, newshape=[]) /* ty=float32 */;
  %338 = reshape(%336, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %339 = @func_4158(%337, %338) /* ty=(Tensor[(15, 8, 16), bool],) */;
  %340 = cast(meta[relay.Constant][16] /* ty=Tensor[(280), uint8] */, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %341 = cast(meta[relay.Constant][16] /* ty=Tensor[(280), uint8] */, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %342 = cast(-2.39393f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %343 = reshape(%340, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %344 = reshape(%341, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %345 = reshape(%342, newshape=[]) /* ty=int64 */;
  %346 = @func_4330(%343, %344, %345) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
  %347 = logical_and(%333, %334) /* ty=Tensor[(16, 11, 12), bool] */;
  %348 = %339.0;
  %349 = %346.2;
  (%347, %348, -2.39393f /* ty=float32 */, meta[relay.Constant][15] /* ty=Tensor[(1920), float32] */, %349, meta[relay.Constant][16] /* ty=Tensor[(280), uint8] */)
}

def @func_10572() -> (Tensor[(11, 14, 10), float32],) {
  %350 = @func_8742() /* ty=Tensor[(11, 14, 10), float32] */;
  (%350,)
}

def @func_7714() -> Tensor[(11, 14, 10), float64] {
  %351 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
  sigmoid(%352) /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_14832() -> Tensor[(11, 14, 10), float32] {
  %353 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %353.1
}

def @func_17050() -> Tensor[(9, 11, 4), float32] {
  %354 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %354.4
}

def @func_15592() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %355 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %356 = @func_14832() /* ty=Tensor[(11, 14, 10), float32] */;
  %357 = %355.1;
  (%356, %357)
}

def @func_11856() -> (Tensor[(11, 14, 10), float32],) {
  %358 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %359 = %358.0;
  (%359,)
}

def @func_13483() -> float32 {
  %360 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
  %360.1
}

def @func_19239(%var_19226: Tensor[(8, 11, 11), float32]) -> (Tensor[(8, 11, 11), float32],) {
  %361 = cast(%var_19226, dtype="float32") /* ty=Tensor[(8, 11, 11), float32] */;
  %362 = acos(%361) /* ty=Tensor[(8, 11, 11), float32] */;
  (%362,)
}

def @func_15240() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %363 = @func_11570() /* ty=(Tensor[(1920), float32],) */;
  %364 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %365 = %363.0;
  %366 = %364.1;
  %367 = @func_7887() /* ty=Tensor[(1920), float32] */;
  (%365, %366, %367)
}

def @func_16975() -> (Tensor[(11, 10), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) {
  %368 = @func_11288() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) */;
  %369 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
  %370 = @func_14896() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %371 = @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %372 = %368.2;
  %373 = %369.2;
  %374 = %370.0;
  %375 = %371.0;
  %376 = @func_16742() /* ty=Tensor[(11, 14, 10), float64] */;
  (%372, %373, %374, %375, %376)
}

def @func_9479() -> Tensor[(11, 14, 10), float32] {
  %377 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
  %377.0
}

def @func_18577(%var_18536: Tensor[(33), float64]) -> (Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) {
  %378 = @func_16833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %379 = cast(meta[relay.Constant][17] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %380 = cast(%var_18536, dtype="float64") /* ty=Tensor[(33), float64] */;
  %381 = cast(meta[relay.Constant][18] /* ty=Tensor[(250), int16] */, dtype="int16") /* ty=Tensor[(250), int16] */;
  %382 = reshape(%379, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %383 = reshape(%380, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %384 = reshape(%381, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %385 = @func_2152(%382, %383, %384) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %386 = %378.0;
  %387 = %385.0;
  %388 = @func_13110() /* ty=Tensor[(1920), float32] */;
  (%386, %387, meta[relay.Constant][17] /* ty=Tensor[(3), float64] */, %var_18536, meta[relay.Constant][18] /* ty=Tensor[(250), int16] */, %388)
}

def @func_11344() -> (Tensor[(9, 11, 4), float32],) {
  %389 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %390 = %389.0;
  (%390,)
}

def @func_11570() -> (Tensor[(1920), float32],) {
  %391 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %392 = %391.3;
  (%392,)
}

def @func_13086() -> Tensor[(16), float32] {
  @func_10308() /* ty=Tensor[(16), float32] */
}

def @func_20944() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %393 = @func_12003() /* ty=Tensor[(11, 14, 10), float32] */;
  %394 = @func_19754() /* ty=Tensor[(11, 14, 10), float32] */;
  (%393, %394)
}

def @func_7459(%var_7450: Tensor[(11, 14, 10), float32]) -> (Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) {
  %395 = cast(meta[relay.Constant][19] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %396 = reshape(%395, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float64] */;
  %397 = @func_5477(%396) /* ty=(Tensor[(10, ?, 11), uint16],) */;
  %398 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  %399 = cast(%var_7450, dtype="uint64") /* ty=Tensor[(11, 14, 10), uint64] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="uint64") /* ty=Tensor[(11, 14, 10), uint64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %403 = %397.0;
  %404 = add(%401, %402) /* ty=Tensor[(11, 14, 10), uint64] */;
  (%403, meta[relay.Constant][19] /* ty=Tensor[(110), float64] */, %404)
}

def @func_7887() -> Tensor[(1920), float32] {
  @func_7868() /* ty=Tensor[(1920), float32] */
}

def @func_7825() -> (Tensor[(11, 14, 10), float64],) {
  %405 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%405,)
}

def @func_17182() -> (float32, Tensor[(14, 1, 8), float32], Tensor[(112), float32]) {
  %406 = cast(meta[relay.Constant][20] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %407 = reshape(%406, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), float32] */;
  %408 = @func_12266() /* ty=float32 */;
  %409 = @func_10689(%407) /* ty=Tensor[(14, 1, 8), float32] */;
  (%408, %409, meta[relay.Constant][20] /* ty=Tensor[(112), float32] */)
}

def @func_9352(%var_9292: Tensor[(24), float32]) -> (Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(2, 1056), float32], Tensor[(2, 1056), float32]) {
  %410 = @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
  %411 = cast(%var_9292, dtype="float32") /* ty=Tensor[(24), float32] */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %413 = reshape(%411, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %414 = reshape(%412, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), bool] */;
  %415 = @func_8193(%413, %414) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) */;
  %416 = %415.5;
  %417 = cast(meta[relay.Constant][21] /* ty=Tensor[(2112), bool] */, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(2), int32] */;
  %419 = cast(%416, dtype="uint8") /* ty=Tensor[(2, 1056), uint8] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %421 = bitwise_or(%419, %420) /* ty=Tensor[(2, 1056), uint8] */;
  %422 = cast(meta[relay.Constant][21] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(2), int32] */;
  %424 = cast(%421, dtype="bool") /* ty=Tensor[(2, 1056), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %426 = cast(%421, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %427 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 1056), bool] */, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %428 = shape_of(%416, dtype="int32") /* ty=Tensor[(2), int32] */;
  %429 = cast(%416, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %431 = %410.0;
  %432 = greater(%424, %425) /* ty=Tensor[(2, 1056), bool] */;
  %433 = cos(%426) /* ty=Tensor[(2, 1056), float32] */;
  %434 = floor_divide(%429, %430) /* ty=Tensor[(2, 1056), float32] */;
  (%431, %var_9292, %432, %433, %434)
}

def @func_15744(%var_15722: Tensor[(250), int16]) -> (Tensor[(11, 14, 10), float32], Tensor[(10, 5, 5), int16], Tensor[(250), int16]) {
  %435 = cast(%var_15722, dtype="int16") /* ty=Tensor[(250), int16] */;
  %436 = reshape(%435, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %437 = @func_1345(%436) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %438 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %439 = %437.0;
  (%438, %439, %var_15722)
}

def @func_16668(%var_16640: Tensor[(8, 4, 2), float64]) -> (Tensor[(8, 4, 2), float64], float32, Tensor[(11, 14, 10), float32]) {
  %440 = cast(%var_16640, dtype="float64") /* ty=Tensor[(8, 4, 2), float64] */;
  %441 = @func_16161() /* ty=(float32,) */;
  %442 = @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %443 = rsqrt(%440) /* ty=Tensor[(8, 4, 2), float64] */;
  %444 = %441.0;
  %445 = %442.0;
  (%443, %444, %445)
}

def @func_16580() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %446 = @func_11313() /* ty=(Tensor[(1920), float32],) */;
  %447 = @func_15500() /* ty=Tensor[(11, 14, 10), float32] */;
  %448 = %446.0;
  (%447, %448)
}

def @func_6532() -> (Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) {
  %449 = cast(-5.65351f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %451 = reshape(%449, newshape=[]) /* ty=float32 */;
  %452 = reshape(%450, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %453 = @func_4158(%451, %452) /* ty=(Tensor[(15, 8, 16), bool],) */;
  %454 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  %455 = %453.0;
  (%454, %455, -5.65351f /* ty=float32 */, meta[relay.Constant][23] /* ty=Tensor[(1920), float32] */)
}

def @func_13731() -> Tensor[(1920), float32] {
  @func_12140() /* ty=Tensor[(1920), float32] */
}

def @func_14204(%var_14164: Tensor[(1694, 14), uint16], %var_14174: Tensor[(1694, 14), float32]) -> (Tensor[(1694, 14), bool],) {
  %456 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %457 = %456.2;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(1694, 1), float32] */;
  %459 = cast(%var_14164, dtype="float32") /* ty=Tensor[(1694, 14), float32] */;
  %460 = power(%458, %459) /* ty=Tensor[(1694, 14), float32] */;
  %461 = cast(%var_14174, dtype="uint64") /* ty=Tensor[(1694, 14), uint64] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(2), int32] */;
  %463 = cast(%460, dtype="uint64") /* ty=Tensor[(1694, 14), uint64] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %465 = maximum(%463, %464) /* ty=Tensor[(1694, 14), uint64] */;
  %466 = cast(%var_14174, dtype="bool") /* ty=Tensor[(1694, 14), bool] */;
  %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(2), int32] */;
  %468 = cast(%465, dtype="bool") /* ty=Tensor[(1694, 14), bool] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %470 = logical_and(%468, %469) /* ty=Tensor[(1694, 14), bool] */;
  (%470,)
}

def @func_15354(%var_15352: Tensor[(16), float32]) -> (Tensor[(2112), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], int64, Tensor[(16, 1), float32], Tensor[(16), float32]) {
  %471 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %472 = @func_9851() /* ty=Tensor[(2112), float32] */;
  %473 = cast(%472, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %474 = reshape(%473, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %475 = @func_9825(%474) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */;
  %476 = cast(%472, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %477 = cast(%var_15352, dtype="float32") /* ty=Tensor[(16), float32] */;
  %478 = reshape(%476, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %479 = reshape(%477, newshape=[16, 1]) /* ty=Tensor[(16, 1), float32] */;
  %480 = @func_13644(%478, %479) /* ty=(Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(128), int8], Tensor[(2112), int64], Tensor[(2, 1, 8), float32], Tensor[(16, 1), float32]) */;
  %481 = @func_7868() /* ty=Tensor[(1920), float32] */;
  %482 = %471.1;
  %483 = %475.1;
  %484 = %480.5;
  (%472, %481, %482, %483, %484, %var_15352)
}

def @func_16803() -> (Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float32], Tensor[(1456), int32]) {
  %485 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %486 = @func_14546() /* ty=(Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) */;
  %487 = cast(meta[relay.Constant][24] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %488 = reshape(%487, newshape=[1456]) /* ty=Tensor[(1456), int32] */;
  %489 = @func_12975(%488) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) */;
  %490 = %485.4;
  %491 = %486.3;
  %492 = %489.0;
  (%490, %491, %492, meta[relay.Constant][24] /* ty=Tensor[(1456), int32] */)
}

def @func_6964() -> Tensor[(11, 14, 10), float32] {
  %493 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %493.0
}

def @func_8913() -> (Tensor[(11, 14, 10), float32],) {
  %494 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %495 = %494.0;
  (%495,)
}

def @func_7538() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) {
  %496 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %497 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %498 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %499 = %496.0;
  %500 = %497.0;
  %501 = %498.0;
  (%499, %500, %501)
}

def @func_10184() -> (Tensor[(9, 11, 4), float32],) {
  %502 = @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %503 = %502.0;
  (%503,)
}

def @func_21511() -> Tensor[(110), float64] {
  %504 = @func_19794() /* ty=(Tensor[(110), float64],) */;
  %504.0
}

def @func_8776(%var_8774: Tensor[(1456), int32]) -> (Tensor[(14, 11, 11), bool], Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) {
  %505 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %506 = cast(%var_8774, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %507 = reshape(%506, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %508 = %505.1;
  %509 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  %510 = @func_4584(%507) /* ty=Tensor[(14, 13, 8), bool] */;
  (%508, %509, %510, %var_8774)
}

def @func_10165(%var_10160: Tensor[(10, 8, 5), float64], %var_10161: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  %511 = cast(%var_10161, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %512 = shape_of(%var_10160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%var_10160, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%513, %514) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_7271(%var_7201: Tensor[(2, 3, 4), float32], %var_7215: Tensor[(2112), bool], %var_7226: Tensor[(128), int8]) -> (Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) {
  %515 = cast(%var_7215, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %516 = cast(%var_7215, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %517 = reshape(%515, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %518 = reshape(%516, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %519 = @func_4458(%517, %518) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %520 = cast(%var_7201, dtype="float32") /* ty=Tensor[(2, 3, 4), float32] */;
  %521 = log2(%520) /* ty=Tensor[(2, 3, 4), float32] */;
  %522 = cast(%521, dtype="float32") /* ty=Tensor[(2, 3, 4), float32] */;
  %523 = cast(%var_7226, dtype="int8") /* ty=Tensor[(128), int8] */;
  %524 = reshape(%523, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %525 = cast(meta[relay.Constant][25] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %526 = cast(meta[relay.Constant][26] /* ty=Tensor[(1694), uint16] */, dtype="uint16") /* ty=Tensor[(1694), uint16] */;
  %527 = reshape(%525, newshape=[]) /* ty=uint16 */;
  %528 = reshape(%526, newshape=[14, 11, 11]) /* ty=Tensor[(14, 11, 11), uint16] */;
  %529 = @func_5643(%527, %528) /* ty=(Tensor[(14, 11, 11), bool],) */;
  %530 = @func_4419(%524) /* ty=Tensor[(16, 2, 4), int8] */;
  %531 = cast(%530, dtype="int8") /* ty=Tensor[(16, 2, 4), int8] */;
  %532 = reshape(%531, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %533 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %534 = cast(%521, dtype="float32") /* ty=Tensor[(2, 3, 4), float32] */;
  %535 = %519.1;
  %536 = sin(%522) /* ty=Tensor[(2, 3, 4), float32] */;
  %537 = %529.0;
  %538 = @func_4419(%532) /* ty=Tensor[(16, 2, 4), int8] */;
  %539 = %533.0;
  %540 = sqrt(%534) /* ty=Tensor[(2, 3, 4), float32] */;
  (%535, %var_7215, %536, %530, %var_7226, %537, meta[relay.Constant][25] /* ty=uint16 */, meta[relay.Constant][26] /* ty=Tensor[(1694), uint16] */, %538, %539, %540)
}

def @func_12998() -> (Tensor[(1920), float32],) {
  %541 = @func_10945() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */;
  %542 = %541.0;
  (%542,)
}

def @func_18759() -> Tensor[(11, 14, 10), float32] {
  %543 = @func_18640() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %543.0
}

def @func_19493(%var_19433: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), bool], Tensor[(11, 14, 10), float64], float32, Tensor[(396), float32], Tensor[(2112), bool], Tensor[(3, 2, 13), float64]) {
  %544 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 2, 13), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %545 = shape_of(%var_19433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%var_19433, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = @func_12471() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */;
  %549 = @func_17591() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %550 = @func_14022() /* ty=(Tensor[(9, 11, 4), float32], int64, Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */;
  %551 = cast(%var_19433, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
  %552 = greater_equal(%546, %547) /* ty=Tensor[(3, 2, 13), bool] */;
  %553 = @func_16205() /* ty=Tensor[(11, 14, 10), float64] */;
  %554 = %548.2;
  %555 = %549.2;
  %556 = %550.2;
  %557 = log2(%551) /* ty=Tensor[(3, 2, 13), float64] */;
  (%552, %553, %554, %555, %556, %557)
}

def @func_19806() -> Tensor[(11, 14, 10), float32] {
  %558 = @func_17263() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %558.0
}

def @func_20723() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %559 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %560 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %561 = %559.1;
  %562 = %560.0;
  (%561, %562)
}

def @func_14799() -> (Tensor[(1920), float32],) {
  %563 = @func_7060() /* ty=Tensor[(1920), float32] */;
  (%563,)
}

def @func_12577() -> Tensor[(11, 14, 10), float32] {
  %564 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %564.0
}

def @func_20931() -> (Tensor[(8, 11, 11), float32], Tensor[(968, 1920), uint64]) {
  %565 = cast(meta[relay.Constant][28] /* ty=Tensor[(968, 1), float32] */, dtype="float32") /* ty=Tensor[(968, 1), float32] */;
  %566 = reshape(%565, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), float32] */;
  %567 = @func_19239(%566) /* ty=(Tensor[(8, 11, 11), float32],) */;
  %568 = @func_9437() /* ty=(Tensor[(1920), float32],) */;
  %569 = %568.0;
  %570 = cast(meta[relay.Constant][28] /* ty=Tensor[(968, 1), float32] */, dtype="uint64") /* ty=Tensor[(968, 1), uint64] */;
  %571 = cast(%569, dtype="uint64") /* ty=Tensor[(1920), uint64] */;
  %572 = %567.0;
  %573 = bitwise_or(%570, %571) /* ty=Tensor[(968, 1920), uint64] */;
  (%572, %573)
}

def @func_16205() -> Tensor[(11, 14, 10), float64] {
  %574 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %574.1
}

def @func_12251() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %575 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %576 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %577 = %575.3;
  (%576, %577)
}

def @func_15500() -> Tensor[(11, 14, 10), float32] {
  %578 = @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %578.1
}

def @func_14760() -> (Tensor[(11, 14, 10), float32],) {
  %579 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  (%579,)
}

def @func_8624(%var_8604: Tensor[(44, 48), bool]) -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) {
  %580 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %581 = cast(%var_8604, dtype="bool") /* ty=Tensor[(44, 48), bool] */;
  %582 = reshape(%581, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %583 = @func_6606(%582) /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) */;
  %584 = cast(%var_8604, dtype="float32") /* ty=Tensor[(44, 48), float32] */;
  %585 = %580.0;
  %586 = %583.0;
  %587 = acos(%584) /* ty=Tensor[(44, 48), float32] */;
  (%585, %586, %587)
}

def @func_11191(%var_11129: Tensor[(75), int64], %var_11177: Tensor[(396), float32]) -> (Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250, 1), int16], Tensor[(11, 14, 10), float64], Tensor[(15, 5, 1), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32], Tensor[(1920), float32]) {
  %588 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %589 = cast(%var_11129, dtype="int64") /* ty=Tensor[(75), int64] */;
  %590 = cast(meta[relay.Constant][29] /* ty=Tensor[(250, 1), int16] */, dtype="int16") /* ty=Tensor[(250, 1), int16] */;
  %591 = reshape(%588, newshape=[]) /* ty=int64 */;
  %592 = reshape(%589, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
  %593 = reshape(%590, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
  %594 = @func_1462(%591, %592, %593) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
  %595 = %594.0;
  %596 = cast(%595, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
  %597 = cast(%var_11177, dtype="float32") /* ty=Tensor[(396), float32] */;
  %598 = cast(%var_11177, dtype="float32") /* ty=Tensor[(396), float32] */;
  %599 = reshape(%597, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %600 = reshape(%598, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %601 = @func_3645(%599, %600) /* ty=(Tensor[(9, 11, 4), float32],) */;
  %602 = @func_7887() /* ty=Tensor[(1920), float32] */;
  %603 = @func_10439() /* ty=Tensor[(11, 14, 10), float64] */;
  %604 = cos(%596) /* ty=Tensor[(15, 5, 1), float32] */;
  %605 = %601.0;
  %606 = @func_10453() /* ty=Tensor[(1920), float32] */;
  (%602, -9 /* ty=int64 */, %var_11129, meta[relay.Constant][29] /* ty=Tensor[(250, 1), int16] */, %603, %604, %605, %var_11177, %606)
}

def @func_20311() -> (Tensor[(11, 14, 10), float32],) {
  %607 = @func_19754() /* ty=Tensor[(11, 14, 10), float32] */;
  (%607,)
}

def @func_10127() -> Tensor[(1920), float32] {
  %608 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %608.0
}

def @func_10738() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %609 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %610 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %611 = %609.0;
  %612 = %610.0;
  (%611, %612)
}

def @func_11398() -> (Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %613 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %614 = cast(meta[relay.Constant][30] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %615 = cast(meta[relay.Constant][30] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %616 = reshape(%614, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %617 = reshape(%615, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %618 = %613.0;
  %619 = @func_10165(%616, %617) /* ty=Tensor[(10, 8, 5), float64] */;
  (%618, %619, meta[relay.Constant][30] /* ty=Tensor[(400), float64] */)
}

def @func_14546() -> (Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) {
  %620 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %621 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %622 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
  %623 = @func_7887() /* ty=Tensor[(1920), float32] */;
  %624 = %620.5;
  %625 = %621.0;
  %626 = %622.1;
  (%623, %624, %625, %626)
}

def @func_18038() -> (Tensor[(11, 14, 10), float32],) {
  %627 = @func_13786() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %628 = %627.0;
  (%628,)
}

def @func_13814() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %629 = @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */;
  %630 = @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */;
  %631 = %629.1;
  %632 = %630.1;
  (%631, %632)
}

def @func_9851() -> Tensor[(2112), float32] {
  %633 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
  %633.2
}

def @func_15799(%var_15755: Tensor[(12, 6, 12), bool], %var_15756: Tensor[(12, 6, 12), bool], %var_15783: Tensor[(1056, 2), bool]) -> (Tensor[(12, 6, 12), bool], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1056, 2), int8], Tensor[(1056, 2), uint8]) {
  %634 = cast(%var_15756, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %635 = shape_of(%var_15755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%var_15755, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %638 = cast(meta[relay.Constant][31] /* ty=Tensor[(1056, 2), bool] */, dtype="bool") /* ty=Tensor[(1056, 2), bool] */;
  %639 = reshape(%638, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
  %640 = @func_8624(%639) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
  %641 = cast(%var_15783, dtype="int8") /* ty=Tensor[(1056, 2), int8] */;
  %642 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(1056, 2), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %643 = cast(meta[relay.Constant][31] /* ty=Tensor[(1056, 2), bool] */, dtype="int8") /* ty=Tensor[(1056, 2), int8] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %645 = cast(%var_15783, dtype="uint8") /* ty=Tensor[(1056, 2), uint8] */;
  %646 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(1056, 2), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %647 = cast(meta[relay.Constant][31] /* ty=Tensor[(1056, 2), bool] */, dtype="uint8") /* ty=Tensor[(1056, 2), uint8] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %649 = logical_and(%636, %637) /* ty=Tensor[(12, 6, 12), bool] */;
  %650 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %651 = %640.0;
  %652 = multiply(%643, %644) /* ty=Tensor[(1056, 2), int8] */;
  %653 = right_shift(%647, %648) /* ty=Tensor[(1056, 2), uint8] */;
  (%649, %650, %651, %652, %653)
}

def @func_10817() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %654 = @func_10047() /* ty=(Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) */;
  %655 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %656 = %654.2;
  %657 = %655.1;
  (%656, %657)
}

def @func_19794() -> (Tensor[(110), float64],) {
  %658 = @func_15522() /* ty=Tensor[(110), float64] */;
  (%658,)
}

def @func_12415() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %659 = @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %660 = %659.0;
  %661 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  (%660, %661)
}

def @func_8395() -> Tensor[(9, 11, 4), float32] {
  %662 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %662.0
}

def @func_16833() -> (Tensor[(11, 14, 10), float32],) {
  %663 = @func_12577() /* ty=Tensor[(11, 14, 10), float32] */;
  (%663,)
}

def @func_6873() -> (Tensor[(11, 14, 10), float32],) {
  %664 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %665 = %664.0;
  (%665,)
}

def @func_12309() -> Tensor[(11, 14, 10), float32] {
  %666 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %667 = %666.4;
  %668 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 14, 10), float64] */, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%670, %671) /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_14453() -> (Tensor[(11, 14, 10), float32],) {
  %672 = @func_9372() /* ty=Tensor[(11, 14, 10), float32] */;
  (%672,)
}

def @func_19154(%var_19145: int16, %var_19146: Tensor[(2, 2, 3), int16]) -> (Tensor[(2, 2, 3), int16], float32) {
  %673 = cast(%var_19145, dtype="int16") /* ty=int16 */;
  %674 = cast(%var_19146, dtype="int16") /* ty=Tensor[(2, 2, 3), int16] */;
  %675 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
  %676 = subtract(%673, %674) /* ty=Tensor[(2, 2, 3), int16] */;
  %677 = %675.1;
  (%676, %677)
}

def @func_4330(%var_4275: Tensor[(4, 14, 5), uint8], %var_4276: Tensor[(4, 14, 5), uint8], %var_4302: int64) -> (Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) {
  %678 = cast(%var_4276, dtype="bool") /* ty=Tensor[(4, 14, 5), bool] */;
  %679 = shape_of(%var_4275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_4275, dtype="bool") /* ty=Tensor[(4, 14, 5), bool] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %682 = greater(%680, %681) /* ty=Tensor[(4, 14, 5), bool] */;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(4, 14, 5), float32] */;
  %684 = cast(%var_4302, dtype="int64") /* ty=int64 */;
  %685 = cast(meta[relay.Constant][33] /* ty=Tensor[(75), int64] */, dtype="int64") /* ty=Tensor[(75), int64] */;
  %686 = cast(meta[relay.Constant][34] /* ty=Tensor[(125, 2), int16] */, dtype="int16") /* ty=Tensor[(125, 2), int16] */;
  %687 = reshape(%684, newshape=[]) /* ty=int64 */;
  %688 = reshape(%685, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
  %689 = reshape(%686, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
  %690 = @func_1462(%687, %688, %689) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
  %691 = exp(%683) /* ty=Tensor[(4, 14, 5), float32] */;
  %692 = %690.1;
  (%691, %692, %var_4302, meta[relay.Constant][33] /* ty=Tensor[(75), int64] */, meta[relay.Constant][34] /* ty=Tensor[(125, 2), int16] */)
}

def @func_6606(%var_6596: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) {
  %693 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %694 = cast(%var_6596, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %695 = cast(%var_6596, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %696 = reshape(%694, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %697 = reshape(%695, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %698 = @func_4458(%696, %697) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %699 = %693.0;
  %700 = %698.4;
  (%699, %700, %var_6596)
}

def @func_13351() -> (Tensor[(11, 14, 10), float64],) {
  %701 = @func_12415() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %702 = %701.1;
  (%702,)
}

def @func_18065() -> (Tensor[(1920), float32], Tensor[(1920), float32]) {
  %703 = @func_8458() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
  %704 = @func_15240() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %705 = %703.0;
  %706 = %704.0;
  (%705, %706)
}

def @func_12003() -> Tensor[(11, 14, 10), float32] {
  %707 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %707.1
}

def @func_17454(%var_17444: float32) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], float32) {
  %708 = @func_12054() /* ty=(Tensor[(1920), float32],) */;
  %709 = @func_12073() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %710 = cast(%var_17444, dtype="float32") /* ty=float32 */;
  %711 = %708.0;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %713 = reshape(%710, newshape=[]) /* ty=float32 */;
  %714 = reshape(%712, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %715 = @func_4158(%713, %714) /* ty=(Tensor[(15, 8, 16), bool],) */;
  %716 = %709.0;
  %717 = %715.0;
  (%711, %716, %717, %var_17444)
}

def @func_20027(%var_19991: Tensor[(4, 1, 2), float64]) -> Tensor[(4, 1, 2), float64] {
  %718 = cast(%var_19991, dtype="float64") /* ty=Tensor[(4, 1, 2), float64] */;
  log10(%718) /* ty=Tensor[(4, 1, 2), float64] */
}

def @func_3876(%var_3863: Tensor[(14, 2, 1), float64]) -> (Tensor[(14, 2, 1), float64], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) {
  %719 = cast(%var_3863, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
  %720 = cast(meta[relay.Constant][35] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %721 = reshape(%720, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %722 = asin(%719) /* ty=Tensor[(14, 2, 1), float64] */;
  %723 = @func_1860(%721) /* ty=Tensor[(2, 1, 8), float32] */;
  (%722, %723, meta[relay.Constant][35] /* ty=Tensor[(16), float32] */)
}

def @func_10453() -> Tensor[(1920), float32] {
  @func_10127() /* ty=Tensor[(1920), float32] */
}

def @func_10689(%var_10683: Tensor[(14, 1, 8), float32]) -> Tensor[(14, 1, 8), float32] {
  %724 = cast(%var_10683, dtype="float32") /* ty=Tensor[(14, 1, 8), float32] */;
  log10(%724) /* ty=Tensor[(14, 1, 8), float32] */
}

def @func_8140(%var_8099: Tensor[(13, 9, 6), float32], %var_8119: Tensor[(3), float64], %var_8120: Tensor[(33), float64]) -> (Tensor[(1920), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32], Tensor[(11, 14, 10), uint64], Tensor[(1540), float32], Tensor[(13, 9, 6), float64]) {
  %725 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %726 = cast(%var_8119, dtype="float64") /* ty=Tensor[(3), float64] */;
  %727 = cast(%var_8120, dtype="float64") /* ty=Tensor[(33), float64] */;
  %728 = cast(meta[relay.Constant][36] /* ty=Tensor[(250), int16] */, dtype="int16") /* ty=Tensor[(250), int16] */;
  %729 = reshape(%726, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %730 = reshape(%727, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %731 = reshape(%728, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %732 = @func_2152(%729, %730, %731) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %733 = @func_7472() /* ty=(Tensor[(1920), float32],) */;
  %734 = cast(meta[relay.Constant][37] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
  %735 = reshape(%734, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float32] */;
  %736 = @func_7459(%735) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */;
  %737 = cast(%var_8099, dtype="float32") /* ty=Tensor[(13, 9, 6), float32] */;
  %738 = asin(%737) /* ty=Tensor[(13, 9, 6), float32] */;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
  %740 = %725.0;
  %741 = %732.0;
  %742 = %733.0;
  %743 = %736.2;
  %744 = log(%739) /* ty=Tensor[(13, 9, 6), float64] */;
  (%740, %741, %var_8119, %var_8120, meta[relay.Constant][36] /* ty=Tensor[(250), int16] */, %742, %743, meta[relay.Constant][37] /* ty=Tensor[(1540), float32] */, %744)
}

def @func_7001() -> (Tensor[(1920), float32],) {
  %745 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %746 = %745.3;
  (%746,)
}

def @func_19884() -> (Tensor[(11, 14, 10), float32], Tensor[(110), float64]) {
  %747 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %748 = %747.0;
  %749 = @func_15522() /* ty=Tensor[(110), float64] */;
  (%748, %749)
}

def @func_7194() -> (Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) {
  %750 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %751 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %752 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  %753 = %750.5;
  %754 = %751.5;
  (%752, %753, %754)
}

def @func_8667(%var_8650: Tensor[(24), float32], %var_8651: Tensor[(264, 8), bool]) -> (Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 264, 8), int8]) {
  %755 = cast(%var_8650, dtype="float32") /* ty=Tensor[(24), float32] */;
  %756 = cast(%var_8651, dtype="bool") /* ty=Tensor[(264, 8), bool] */;
  %757 = reshape(%755, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %758 = reshape(%756, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), bool] */;
  %759 = @func_8193(%757, %758) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) */;
  %760 = @func_8458() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
  %761 = %760.1;
  %762 = cast(%var_8651, dtype="int8") /* ty=Tensor[(264, 8), int8] */;
  %763 = cast(%761, dtype="int8") /* ty=Tensor[(2, 1, 8), int8] */;
  %764 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %765 = %759.3;
  %766 = multiply(%762, %763) /* ty=Tensor[(2, 264, 8), int8] */;
  (%764, %765, %var_8650, %766)
}

def @func_8742() -> Tensor[(11, 14, 10), float32] {
  @func_6964() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_9936() -> Tensor[(11, 14, 10), float64] {
  @func_7714() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_11624(%var_11598: Tensor[(6, 2, 16), float64], %var_11602: Tensor[(2112), bool]) -> (Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  %767 = cast(%var_11598, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
  %768 = cast(%var_11602, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %769 = cast(%var_11602, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %770 = reshape(%768, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %771 = reshape(%769, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %772 = @func_4458(%770, %771) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %773 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %774 = log10(%767) /* ty=Tensor[(6, 2, 16), float64] */;
  %775 = %772.5;
  %776 = %773.1;
  (%774, %775, %var_11602, %776)
}

def @func_17591() -> (Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) {
  %777 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %778 = cast(meta[relay.Constant][38] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %779 = reshape(%777, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %780 = reshape(%778, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %781 = @func_3645(%779, %780) /* ty=(Tensor[(9, 11, 4), float32],) */;
  %782 = @func_12140() /* ty=Tensor[(1920), float32] */;
  %783 = %781.0;
  (%782, %783, meta[relay.Constant][38] /* ty=Tensor[(396), float32] */)
}

def @func_15441() -> (Tensor[(1920), float32], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(48, 4), float64], Tensor[(11, 14, 10), float64], Tensor[(44, 48), float64], Tensor[(11, 14, 10), float64]) {
  %784 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %785 = cast(meta[relay.Constant][40] /* ty=Tensor[(48, 4), float64] */, dtype="float64") /* ty=Tensor[(48, 4), float64] */;
  %786 = cast(meta[relay.Constant][39] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %787 = reshape(%785, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %788 = reshape(%786, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %789 = @func_11624(%787, %788) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */;
  %790 = cast(meta[relay.Constant][39] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %791 = reshape(%790, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
  %792 = @func_8624(%791) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
  %793 = %792.2;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(44, 48), float64] */;
  %795 = %784.0;
  %796 = %789.3;
  %797 = @func_14041() /* ty=Tensor[(11, 14, 10), float64] */;
  %798 = sin(%794) /* ty=Tensor[(44, 48), float64] */;
  %799 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%795, meta[relay.Constant][39] /* ty=Tensor[(2112), bool] */, %796, meta[relay.Constant][40] /* ty=Tensor[(48, 4), float64] */, %797, %798, %799)
}

def @func_9825(%var_9823: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) {
  %800 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %801 = %800.0;
  %802 = cast(%801, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
  %803 = cast(%var_9823, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %804 = reshape(%803, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %805 = @func_6606(%804) /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) */;
  %806 = asinh(%802) /* ty=Tensor[(11, 14, 10), float64] */;
  %807 = %805.1;
  (%806, %807, %var_9823)
}

def @func_20233() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float32]) {
  %808 = @func_14760() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %809 = @func_17358() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %810 = @func_18611() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) */;
  %811 = %810.1;
  %812 = cast(%811, dtype="float32") /* ty=Tensor[(10, 8, 5), float32] */;
  %813 = %808.0;
  %814 = %809.0;
  %815 = @func_10453() /* ty=Tensor[(1920), float32] */;
  %816 = @func_16742() /* ty=Tensor[(11, 14, 10), float64] */;
  %817 = cosh(%812) /* ty=Tensor[(10, 8, 5), float32] */;
  (%813, %814, %815, %816, %817)
}

def @func_15606() -> Tensor[(1920), float32] {
  @func_12140() /* ty=Tensor[(1920), float32] */
}

def @func_12213(%var_12194: Tensor[(75), int64], %var_12207: Tensor[(24), float32], %var_12208: Tensor[(2112), bool], %var_12209: Tensor[(128), int8]) -> (Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], float32, Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(75), int64], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32], Tensor[(24), float32], Tensor[(2112), bool], Tensor[(128), int8]) {
  %818 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
  %819 = cast(%var_12194, dtype="int64") /* ty=Tensor[(75), int64] */;
  %820 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
  %821 = cast(%820, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
  %822 = reshape(%819, newshape=[75]) /* ty=Tensor[(75), int64] */;
  %823 = reshape(%821, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %824 = @func_11191(%822, %823) /* ty=(Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250, 1), int16], Tensor[(11, 14, 10), float64], Tensor[(15, 5, 1), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32], Tensor[(1920), float32]) */;
  %825 = cast(%var_12207, dtype="float32") /* ty=Tensor[(24), float32] */;
  %826 = cast(%var_12208, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %827 = cast(%var_12209, dtype="int8") /* ty=Tensor[(128), int8] */;
  %828 = reshape(%825, newshape=[2, 3, 4]) /* ty=Tensor[(2, 3, 4), float32] */;
  %829 = reshape(%826, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %830 = reshape(%827, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %831 = @func_7271(%828, %829, %830) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */;
  %832 = @func_7751() /* ty=Tensor[(11, 14, 10), float64] */;
  %833 = %818.1;
  %834 = @func_9372() /* ty=Tensor[(11, 14, 10), float32] */;
  %835 = %824.0;
  %836 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %837 = %831.2;
  (%832, %820, %833, %834, %835, %var_12194, %836, %837, %var_12207, %var_12208, %var_12209)
}

def @func_13644(%var_13613: Tensor[(2112), bool], %var_13642: Tensor[(16, 1), float32]) -> (Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(128), int8], Tensor[(2112), int64], Tensor[(2, 1, 8), float32], Tensor[(16, 1), float32]) {
  %838 = cast(meta[relay.Constant][41] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %839 = reshape(%838, newshape=[2, 64]) /* ty=Tensor[(2, 64), int8] */;
  %840 = @func_13316(%839) /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(2, 64), int64]) */;
  %841 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
  %842 = %841.2;
  %843 = cast(%var_13613, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(1), int32] */;
  %845 = cast(%842, dtype="int64") /* ty=Tensor[(2112), int64] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?), int64] */;
  %847 = cast(%var_13642, dtype="float32") /* ty=Tensor[(16, 1), float32] */;
  %848 = reshape(%847, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %849 = @func_10453() /* ty=Tensor[(1920), float32] */;
  %850 = %840.0;
  %851 = bitwise_and(%845, %846) /* ty=Tensor[(2112), int64] */;
  %852 = @func_1860(%848) /* ty=Tensor[(2, 1, 8), float32] */;
  (%849, %850, meta[relay.Constant][41] /* ty=Tensor[(128), int8] */, %851, %852, %var_13642)
}

def @func_19427(%var_19384: uint8, %var_19385: Tensor[(15, 5, 5), uint8]) -> (Tensor[(15, 5, 5), bool], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %853 = cast(%var_19384, dtype="bool") /* ty=bool */;
  %854 = cast(%var_19385, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %855 = @func_19091() /* ty=(Tensor[(1920), float32],) */;
  %856 = @func_14453() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %857 = greater_equal(%853, %854) /* ty=Tensor[(15, 5, 5), bool] */;
  %858 = %855.0;
  %859 = %856.0;
  (%857, %858, %859)
}

def @func_10945() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %860 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %861 = %860.0;
  %862 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  (%861, %862)
}

def @func_11288() -> (Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) {
  %863 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %864 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 10), float64] */;
  %865 = reshape(%864, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %866 = @func_9771(%865) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, ?, 11), uint32], Tensor[(10, ?, 11), float32]) */;
  %867 = %863.0;
  %868 = %866.2;
  (%867, %868, meta[relay.Constant][42] /* ty=Tensor[(11, 10), float64] */)
}

def @func_13519() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %869 = @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */;
  %870 = @func_12073() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %871 = %869.1;
  %872 = %870.0;
  (%871, %872)
}

def @func_16224(%var_16217: Tensor[(3, 13, 14), int8], %var_16218: Tensor[(3, 13, 14), int8]) -> (Tensor[(3, 13, 14), int8],) {
  %873 = cast(%var_16218, dtype="int8") /* ty=Tensor[(3, 13, 14), int8] */;
  %874 = shape_of(%var_16217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_16217, dtype="int8") /* ty=Tensor[(3, 13, 14), int8] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %877 = logical_xor(%875, %876) /* ty=Tensor[(3, 13, 14), int8] */;
  (%877,)
}

def @func_4584(%var_4567: Tensor[(14, 13, 8), int32]) -> Tensor[(14, 13, 8), bool] {
  %878 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 13, 8), int32] */, dtype="bool") /* ty=Tensor[(14, 13, 8), bool] */;
  %879 = shape_of(%var_4567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%var_4567, dtype="bool") /* ty=Tensor[(14, 13, 8), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%880, %881) /* ty=Tensor[(14, 13, 8), bool] */
}

def @func_21345() -> (Tensor[(11, 14, 10), float32],) {
  %882 = @func_14453() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %883 = %882.0;
  (%883,)
}

def @func_16366() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) {
  %884 = @func_9078() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %885 = @func_11856() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %886 = %884.2;
  %887 = @func_12140() /* ty=Tensor[(1920), float32] */;
  %888 = %885.0;
  %889 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %890 = @func_9002() /* ty=float32 */;
  (%886, %887, %888, %889, %890)
}

def @func_12591() -> Tensor[(11, 14, 10), float32] {
  %891 = @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %891.0
}

def @func_7783() -> (Tensor[(11, 14, 10), float32], int64, Tensor[(280, 1), uint8], int64, Tensor[(11, 14, 10), float32]) {
  %892 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
  %893 = cast(meta[relay.Constant][44] /* ty=Tensor[(280, 1), uint8] */, dtype="uint8") /* ty=Tensor[(280, 1), uint8] */;
  %894 = cast(meta[relay.Constant][44] /* ty=Tensor[(280, 1), uint8] */, dtype="uint8") /* ty=Tensor[(280, 1), uint8] */;
  %895 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %896 = reshape(%893, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %897 = reshape(%894, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %898 = reshape(%895, newshape=[]) /* ty=int64 */;
  %899 = @func_4330(%896, %897, %898) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
  %900 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %901 = %892.0;
  %902 = %899.2;
  %903 = %900.0;
  (%901, %902, meta[relay.Constant][44] /* ty=Tensor[(280, 1), uint8] */, -8 /* ty=int64 */, %903)
}

def @func_9078() -> (Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %904 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %905 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %906 = @func_7060() /* ty=Tensor[(1920), float32] */;
  %907 = %904.0;
  %908 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  (%905, %906, %907, %908)
}

def @func_3372(%var_3366: Tensor[(6, 2, 6), float64]) -> Tensor[(6, 2, 6), float64] {
  %909 = cast(%var_3366, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  atanh(%909) /* ty=Tensor[(6, 2, 6), float64] */
}

def @func_15522() -> Tensor[(110), float64] {
  %910 = @func_12506() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(110), float64]) */;
  %910.1
}

def @func_21084() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %911 = @func_18340() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
  %912 = @func_10885() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */;
  %913 = %911.0;
  %914 = %912.0;
  (%913, %914)
}

def @func_10484() -> (Tensor[(110), float64], Tensor[(11, 14, 10), float32]) {
  %915 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %916 = @func_10047() /* ty=(Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) */;
  %917 = %915.1;
  %918 = %916.2;
  (%917, %918)
}

def @func_21222() -> (Tensor[(11, 14, 10), float64],) {
  %919 = @func_14041() /* ty=Tensor[(11, 14, 10), float64] */;
  (%919,)
}

def @func_17909() -> (Tensor[(1920), float32],) {
  %920 = @func_17591() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %921 = %920.0;
  (%921,)
}

def @func_13663(%var_13649: Tensor[(10, 1, 11), uint16]) -> Tensor[(10, 8, 11), uint16] {
  %922 = cast(%var_13649, dtype="uint16") /* ty=Tensor[(10, 1, 11), uint16] */;
  %923 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 8, 11), uint16] */, dtype="uint16") /* ty=Tensor[(10, 8, 11), uint16] */;
  subtract(%922, %923) /* ty=Tensor[(10, 8, 11), uint16] */
}

def @func_5643(%var_5627: uint16, %var_5628: Tensor[(14, 11, 11), uint16]) -> (Tensor[(14, 11, 11), bool],) {
  %924 = cast(%var_5627, dtype="bool") /* ty=bool */;
  %925 = cast(%var_5628, dtype="bool") /* ty=Tensor[(14, 11, 11), bool] */;
  %926 = not_equal(%924, %925) /* ty=Tensor[(14, 11, 11), bool] */;
  (%926,)
}

def @func_21126() -> Tensor[(968, 1920), float64] {
  %927 = @func_20931() /* ty=(Tensor[(8, 11, 11), float32], Tensor[(968, 1920), uint64]) */;
  %928 = %927.1;
  %929 = cast(%928, dtype="float64") /* ty=Tensor[(968, 1920), float64] */;
  sinh(%929) /* ty=Tensor[(968, 1920), float64] */
}

def @func_20876() -> Tensor[(11, 14, 10), float64] {
  @func_18677() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_12117() -> (Tensor[(400), float64], float32, Tensor[(1920), float32]) {
  %930 = @func_11918() /* ty=(Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %931 = %930.0;
  %932 = @func_9002() /* ty=float32 */;
  %933 = @func_7887() /* ty=Tensor[(1920), float32] */;
  (%931, %932, %933)
}

def @func_19941(%var_19937: Tensor[(56, 26), int32]) -> (Tensor[(16), float32], Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(14, 13, 8), bool], Tensor[(56, 26), int32]) {
  %934 = @func_18171() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(16), float32]) */;
  %935 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %936 = @func_16161() /* ty=(float32,) */;
  %937 = cast(%var_19937, dtype="int32") /* ty=Tensor[(56, 26), int32] */;
  %938 = reshape(%937, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %939 = %934.1;
  %940 = %935.0;
  %941 = %936.0;
  %942 = @func_16205() /* ty=Tensor[(11, 14, 10), float64] */;
  %943 = @func_18677() /* ty=Tensor[(11, 14, 10), float64] */;
  %944 = @func_4584(%938) /* ty=Tensor[(14, 13, 8), bool] */;
  (%939, %940, %941, %942, %943, %944, %var_19937)
}

def @func_1462(%var_1416: int64, %var_1417: Tensor[(15, 5, 1), int64], %var_1424: Tensor[(125, 2), int16]) -> (Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) {
  %945 = cast(%var_1416, dtype="int64") /* ty=int64 */;
  %946 = cast(%var_1417, dtype="int64") /* ty=Tensor[(15, 5, 1), int64] */;
  %947 = cast(%var_1424, dtype="int16") /* ty=Tensor[(125, 2), int16] */;
  %948 = reshape(%947, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %949 = @func_1345(%948) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %950 = %949.0;
  %951 = cast(%950, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %952 = reshape(%951, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %953 = @func_1345(%952) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %954 = cast(%var_1424, dtype="uint32") /* ty=Tensor[(125, 2), uint32] */;
  %955 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
  %956 = cast(%950, dtype="uint32") /* ty=Tensor[(10, 5, 5), uint32] */;
  %957 = dyn.reshape(%954, %955, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %958 = subtract(%945, %946) /* ty=Tensor[(15, 5, 1), int64] */;
  %959 = %953.0;
  %960 = bitwise_and(%956, %957) /* ty=Tensor[(10, 5, 5), uint32] */;
  (%958, %959, %960)
}

def @func_7659(%var_7605: float32, %var_7639: Tensor[(128), int8]) -> (Tensor[(1920), float32], Tensor[(396), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(15, 8, 16), uint16]) {
  %961 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %962 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %963 = cast(%var_7639, dtype="int8") /* ty=Tensor[(128), int8] */;
  %964 = reshape(%963, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %965 = cast(%var_7605, dtype="float32") /* ty=float32 */;
  %966 = %961.0;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %968 = reshape(%965, newshape=[]) /* ty=float32 */;
  %969 = reshape(%967, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %970 = @func_4158(%968, %969) /* ty=(Tensor[(15, 8, 16), bool],) */;
  %971 = %970.0;
  %972 = cast(%971, dtype="uint16") /* ty=Tensor[(15, 8, 16), uint16] */;
  %973 = cast(%var_7605, dtype="uint16") /* ty=uint16 */;
  %974 = %962.1;
  %975 = @func_4419(%964) /* ty=Tensor[(16, 2, 4), int8] */;
  %976 = bitwise_and(%972, %973) /* ty=Tensor[(15, 8, 16), uint16] */;
  (%966, %974, %975, %var_7639, %976)
}

def @func_14128() -> Tensor[(11, 14, 10), float32] {
  %977 = @func_10796() /* ty=(float32, Tensor[(11, 14, 10), float32]) */;
  %977.1
}

def @func_11244() -> (Tensor[(11, 14, 10), float32],) {
  %978 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %979 = %978.0;
  (%979,)
}

def @func_16886() -> (Tensor[(1920), float32], Tensor[(110), float64]) {
  %980 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %981 = @func_10453() /* ty=Tensor[(1920), float32] */;
  %982 = %980.1;
  (%981, %982)
}

def @func_14237() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %983 = @func_12797() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %984 = @func_10885() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */;
  %985 = %983.0;
  %986 = %984.0;
  (%985, %986)
}

def @func_17263() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %987 = @func_13398() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %988 = @func_14453() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %989 = %987.0;
  %990 = %988.0;
  (%989, %990)
}

def @func_16161() -> (float32,) {
  %991 = @func_12266() /* ty=float32 */;
  (%991,)
}

def @func_15029(%var_15000: Tensor[(5, 10, 3), float32]) -> (Tensor[(5, 10, 3), float32],) {
  %992 = cast(%var_15000, dtype="float32") /* ty=Tensor[(5, 10, 3), float32] */;
  %993 = cos(%992) /* ty=Tensor[(5, 10, 3), float32] */;
  (%993,)
}

def @func_18340() -> (Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) {
  %994 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %995 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %996 = %994.0;
  %997 = @func_17050() /* ty=Tensor[(9, 11, 4), float32] */;
  %998 = %995.0;
  (%996, %997, %998)
}

def @func_17650(%var_17646: Tensor[(2, 1056), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(11, 14, 10), float32], Tensor[(2112), bool], Tensor[(2, 1056), bool]) {
  %999 = @func_13786() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1000 = cast(meta[relay.Constant][46] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %1001 = reshape(%1000, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %1002 = cast(%var_17646, dtype="bool") /* ty=Tensor[(2, 1056), bool] */;
  %1003 = reshape(%1002, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %1004 = @func_9825(%1003) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */;
  %1005 = %999.0;
  %1006 = @func_4584(%1001) /* ty=Tensor[(14, 13, 8), bool] */;
  %1007 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %1008 = %1004.2;
  (%1005, %1006, meta[relay.Constant][46] /* ty=Tensor[(1456), int32] */, %1007, %1008, %var_17646)
}

def @func_9567() -> (Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) {
  %1009 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  %1010 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
  %1011 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
  (%1009, %1010, %1011)
}

def @func_18004() -> (Tensor[(11, 14, 10), float32],) {
  %1012 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1013 = %1012.1;
  (%1013,)
}

def @func_12439() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1014 = @func_10945() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */;
  %1015 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  %1016 = %1014.1;
  (%1015, %1016)
}

def @func_15938(%var_15910: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(96, 2), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  %1017 = cast(meta[relay.Constant][47] /* ty=Tensor[(96, 2), float64] */, dtype="float64") /* ty=Tensor[(96, 2), float64] */;
  %1018 = cast(%var_15910, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1019 = reshape(%1017, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %1020 = reshape(%1018, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %1021 = @func_11624(%1019, %1020) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */;
  %1022 = @func_13814() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1023 = @func_15500() /* ty=Tensor[(11, 14, 10), float32] */;
  %1024 = %1021.3;
  %1025 = %1022.1;
  (%1023, %1024, meta[relay.Constant][47] /* ty=Tensor[(96, 2), float64] */, %var_15910, %1025)
}

def @func_12683() -> Tensor[(11, 14, 10), float32] {
  @func_6913() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_20532() -> (Tensor[(1920), float32],) {
  %1026 = @func_13110() /* ty=Tensor[(1920), float32] */;
  (%1026,)
}

def @func_9094(%var_9088: Tensor[(5, 15, 6), float32]) -> Tensor[(5, 15, 6), float32] {
  %1027 = cast(%var_9088, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
  sinh(%1027) /* ty=Tensor[(5, 15, 6), float32] */
}

def @func_8700() -> (Tensor[(11, 14, 10), float32],) {
  %1028 = @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */;
  %1029 = %1028.0;
  (%1029,)
}

def @func_12797() -> (Tensor[(11, 14, 10), float32],) {
  %1030 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1031 = %1030.0;
  (%1031,)
}

def @func_10399() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %1032 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1033 = %1032.0;
  %1034 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  %1035 = @func_7868() /* ty=Tensor[(1920), float32] */;
  (%1033, %1034, %1035)
}

def @func_19203() -> Tensor[(1920), float32] {
  @func_7887() /* ty=Tensor[(1920), float32] */
}

def @func_14627() -> Tensor[(2, 14, 14), float32] {
  %1036 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 14, 14), float32] */;
  sigmoid(%1036) /* ty=Tensor[(2, 14, 14), float32] */
}

def @func_16827() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %1037 = @func_14680() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %1038 = %1037.2;
  %1039 = @func_15500() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1038, %1039)
}

def @func_5477(%var_5464: Tensor[(10, 1, 11), float64]) -> (Tensor[(10, ?, 11), uint16],) {
  %1040 = cast(%var_5464, dtype="float64") /* ty=Tensor[(10, 1, 11), float64] */;
  %1041 = sinh(%1040) /* ty=Tensor[(10, 1, 11), float64] */;
  %1042 = cast(%1041, dtype="uint16") /* ty=Tensor[(10, 1, 11), uint16] */;
  %1043 = shape_of(%var_5464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%var_5464, dtype="uint16") /* ty=Tensor[(10, 1, 11), uint16] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1046 = bitwise_xor(%1044, %1045) /* ty=Tensor[(10, ?, 11), uint16] */;
  (%1046,)
}

def @func_13421() -> (Tensor[(11, 14, 10), float32],) {
  %1047 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1047,)
}

def @func_14022() -> (Tensor[(9, 11, 4), float32], int64, Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  %1048 = @func_11344() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %1049 = cast(meta[relay.Constant][49] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1050 = reshape(%1049, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %1051 = @func_9825(%1050) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */;
  %1052 = %1048.0;
  %1053 = %1051.1;
  %1054 = @func_12577() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1052, %1053, meta[relay.Constant][49] /* ty=Tensor[(2112), bool] */, %1054)
}

def @func_16742() -> Tensor[(11, 14, 10), float64] {
  @func_14715() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_20296() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1055 = @func_17263() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1056 = @func_14128() /* ty=Tensor[(11, 14, 10), float32] */;
  %1057 = %1055.0;
  (%1056, %1057)
}

def @func_10308() -> Tensor[(16), float32] {
  %1058 = @func_8458() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
  %1058.2
}

def @func_13994() -> Tensor[(11, 14, 10), float32] {
  @func_6913() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_16417(%var_16373: Tensor[(9, 11, 4), float32], %var_16379: Tensor[(7, 70), uint32], %var_16389: int64, %var_16390: Tensor[(75), int64]) -> (Tensor[(9, 11, 4), bool], Tensor[(11, 14, 10), float32], Tensor[(7, 70), uint32], Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250), int16], Tensor[(10, 5, 5), float32], float32) {
  %1059 = @func_9567() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */;
  %1060 = %1059.1;
  %1061 = cast(%var_16373, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1060, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1065 = cast(%var_16379, dtype="uint32") /* ty=Tensor[(7, 70), uint32] */;
  %1066 = cast(%var_16379, dtype="uint32") /* ty=Tensor[(7, 70), uint32] */;
  %1067 = reshape(%1065, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), uint32] */;
  %1068 = reshape(%1066, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), uint32] */;
  %1069 = @func_16117(%1067, %1068) /* ty=(Tensor[(5, 14, 7), uint32], Tensor[(11, 14, 10), float32], Tensor[(5, 14, 7), float64], Tensor[(11, 14, 10), float64]) */;
  %1070 = @func_11570() /* ty=(Tensor[(1920), float32],) */;
  %1071 = cast(%var_16389, dtype="int64") /* ty=int64 */;
  %1072 = cast(%var_16390, dtype="int64") /* ty=Tensor[(75), int64] */;
  %1073 = cast(meta[relay.Constant][50] /* ty=Tensor[(250), int16] */, dtype="int16") /* ty=Tensor[(250), int16] */;
  %1074 = reshape(%1071, newshape=[]) /* ty=int64 */;
  %1075 = reshape(%1072, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
  %1076 = reshape(%1073, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
  %1077 = @func_1462(%1074, %1075, %1076) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
  %1078 = %1077.1;
  %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %1080 = greater_equal(%1063, %1064) /* ty=Tensor[(9, 11, 4), bool] */;
  %1081 = %1069.1;
  %1082 = %1070.0;
  %1083 = atan(%1079) /* ty=Tensor[(10, 5, 5), float32] */;
  %1084 = @func_12266() /* ty=float32 */;
  (%1080, %1081, %var_16379, %1082, %var_16389, %var_16390, meta[relay.Constant][50] /* ty=Tensor[(250), int16] */, %1083, %1084)
}

def @func_8863() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) {
  %1085 = @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1086 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %1087 = %1085.0;
  %1088 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
  %1089 = @func_7868() /* ty=Tensor[(1920), float32] */;
  (%1086, %1087, %1088, %1089)
}

def @func_19091() -> (Tensor[(1920), float32],) {
  %1090 = @func_10127() /* ty=Tensor[(1920), float32] */;
  (%1090,)
}

def @func_20809() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(3, 1, 11), float64], Tensor[(33), float64]) {
  %1091 = cast(meta[relay.Constant][51] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1092 = reshape(%1091, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %1093 = @func_18577(%1092) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) */;
  %1094 = @func_15281() /* ty=Tensor[(11, 14, 10), float32] */;
  %1095 = @func_19068() /* ty=Tensor[(1920), float32] */;
  %1096 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %1097 = %1093.1;
  (%1094, %1095, %1096, %1097, meta[relay.Constant][51] /* ty=Tensor[(33), float64] */)
}

def @func_10074() -> Tensor[(1920), float32] {
  %1098 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %1098.0
}

def @func_14942() -> Tensor[(11, 14, 10), float64] {
  %1099 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %1099.1
}

def @func_12895() -> Tensor[(11, 14, 10), float32] {
  %1100 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1100.0
}

def @func_19607() -> (Tensor[(11, 14, 10), float32],) {
  %1101 = @func_18640() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1102 = %1101.0;
  (%1102,)
}

def @func_14998() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 11), uint16], Tensor[(110), uint16], Tensor[(44, 48), bool]) {
  %1103 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1104 = cast(meta[relay.Constant][52] /* ty=Tensor[(110), uint16] */, dtype="uint16") /* ty=Tensor[(110), uint16] */;
  %1105 = reshape(%1104, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), uint16] */;
  %1106 = cast(meta[relay.Constant][53] /* ty=Tensor[(22, 96), bool] */, dtype="bool") /* ty=Tensor[(22, 96), bool] */;
  %1107 = reshape(%1106, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
  %1108 = @func_8624(%1107) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
  %1109 = %1108.2;
  %1110 = cast(meta[relay.Constant][53] /* ty=Tensor[(22, 96), bool] */, dtype="bool") /* ty=Tensor[(22, 96), bool] */;
  %1111 = shape_of(%1109, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1112 = cast(%1109, dtype="bool") /* ty=Tensor[(44, 48), bool] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1114 = @func_14128() /* ty=Tensor[(11, 14, 10), float32] */;
  %1115 = %1103.0;
  %1116 = @func_13663(%1105) /* ty=Tensor[(10, 8, 11), uint16] */;
  %1117 = greater(%1112, %1113) /* ty=Tensor[(44, 48), bool] */;
  (%1114, %1115, %1116, meta[relay.Constant][52] /* ty=Tensor[(110), uint16] */, %1117)
}

def @func_21560() -> Tensor[(11, 14, 10), float32] {
  %1118 = @func_11756() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */;
  %1118.1
}

def @func_14896() -> (Tensor[(11, 14, 10), float32],) {
  %1119 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1120 = %1119.0;
  (%1120,)
}

def @func_8484() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %1121 = @func_7783() /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(280, 1), uint8], int64, Tensor[(11, 14, 10), float32]) */;
  %1122 = %1121.0;
  %1123 = @func_7868() /* ty=Tensor[(1920), float32] */;
  (%1122, %1123)
}

def @func_17250() -> (Tensor[(1920), float32],) {
  %1124 = @func_8484() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %1125 = %1124.1;
  (%1125,)
}

def @func_3645(%var_3640: Tensor[(9, 11, 4), float32], %var_3641: Tensor[(9, 11, 4), float32]) -> (Tensor[(9, 11, 4), float32],) {
  %1126 = cast(%var_3641, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
  %1127 = shape_of(%var_3640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%var_3640, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1130 = floor_mod(%1128, %1129) /* ty=Tensor[(9, 11, 4), float32] */;
  (%1130,)
}

def @func_9968() -> (Tensor[(11, 14, 10), float32],) {
  %1131 = @func_8484() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %1132 = %1131.0;
  (%1132,)
}

def @func_17347() -> Tensor[(2, 14, 14), float32] {
  @func_14627() /* ty=Tensor[(2, 14, 14), float32] */
}

def @func_11053() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1133 = @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1134 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %1135 = @func_10529() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) */;
  %1136 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1137 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %1138 = %1133.0;
  %1139 = %1134.3;
  %1140 = %1135.1;
  %1141 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  %1142 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %1143 = %1136.0;
  (%1137, %1138, %1139, %1140, %1141, %1142, %1143)
}

def @func_6445() -> (Tensor[(11, 14, 10), float32],) {
  %1144 = cast(meta[relay.Constant][54] /* ty=Tensor[(11, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
  %1145 = erf(%1144) /* ty=Tensor[(11, 14, 10), float32] */;
  (%1145,)
}

def @func_6913() -> Tensor[(11, 14, 10), float32] {
  %1146 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1146.0
}

def @func_17307() -> Tensor[(11, 14, 10), float32] {
  %1147 = @func_16366() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) */;
  %1147.0
}

def @func_8821() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) {
  %1148 = @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */;
  %1149 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %1150 = @func_7751() /* ty=Tensor[(11, 14, 10), float64] */;
  %1151 = %1148.1;
  %1152 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %1153 = %1149.0;
  (%1150, %1151, %1152, %1153)
}

def @func_16858() -> (Tensor[(11, 14, 10), float32],) {
  %1154 = @func_14760() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_9437() -> (Tensor[(1920), float32],) {
  %1156 = @func_7060() /* ty=Tensor[(1920), float32] */;
  (%1156,)
}

def @func_7372(%var_7342: Tensor[(25, 10), int16]) -> (Tensor[(11, 14, 10), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(33), float64], Tensor[(25, 10), int16], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 2, 1), float64], Tensor[(28), float64], Tensor[(11, 14, 10), float32], Tensor[(16, 2, 4), int8]) {
  %1157 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  %1158 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 14, 10), float32] */, dtype="bool") /* ty=Tensor[(11, 14, 10), bool] */;
  %1159 = shape_of(%1157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1160 = cast(%1157, dtype="bool") /* ty=Tensor[(11, 14, 10), bool] */;
  %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1162 = cast(meta[relay.Constant][56] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %1163 = cast(meta[relay.Constant][57] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1164 = cast(%var_7342, dtype="int16") /* ty=Tensor[(25, 10), int16] */;
  %1165 = reshape(%1162, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %1166 = reshape(%1163, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %1167 = reshape(%1164, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %1168 = @func_2152(%1165, %1166, %1167) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %1169 = cast(meta[relay.Constant][58] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %1170 = reshape(%1169, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %1171 = cast(meta[relay.Constant][59] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %1172 = reshape(%1171, newshape=[14, 2, 1]) /* ty=Tensor[(14, 2, 1), float64] */;
  %1173 = @func_3876(%1172) /* ty=(Tensor[(14, 2, 1), float64], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
  %1174 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1175 = cast(meta[relay.Constant][58] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %1176 = reshape(%1175, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %1177 = greater_equal(%1160, %1161) /* ty=Tensor[(11, 14, 10), bool] */;
  %1178 = %1168.1;
  %1179 = @func_4419(%1170) /* ty=Tensor[(16, 2, 4), int8] */;
  %1180 = %1173.0;
  %1181 = %1174.0;
  %1182 = @func_4419(%1176) /* ty=Tensor[(16, 2, 4), int8] */;
  (%1177, %1178, meta[relay.Constant][56] /* ty=Tensor[(3), float64] */, meta[relay.Constant][57] /* ty=Tensor[(33), float64] */, %var_7342, %1179, meta[relay.Constant][58] /* ty=Tensor[(128), int8] */, %1180, meta[relay.Constant][59] /* ty=Tensor[(28), float64] */, %1181, %1182)
}

def @func_10047() -> (Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) {
  %1183 = cast(meta[relay.Constant][60] /* ty=Tensor[(198, 2), float32] */, dtype="float32") /* ty=Tensor[(198, 2), float32] */;
  %1184 = cast(meta[relay.Constant][60] /* ty=Tensor[(198, 2), float32] */, dtype="float32") /* ty=Tensor[(198, 2), float32] */;
  %1185 = reshape(%1183, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %1186 = reshape(%1184, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %1187 = @func_3645(%1185, %1186) /* ty=(Tensor[(9, 11, 4), float32],) */;
  %1188 = %1187.0;
  %1189 = cast(%1188, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
  %1190 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(198, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1191 = cast(meta[relay.Constant][60] /* ty=Tensor[(198, 2), float32] */, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1193 = @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1194 = %1193.0;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
  %1196 = reshape(%1195, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float32] */;
  %1197 = @func_7459(%1196) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */;
  %1198 = @func_9851() /* ty=Tensor[(2112), float32] */;
  %1199 = greater(%1191, %1192) /* ty=Tensor[(198, 2), bool] */;
  %1200 = %1197.2;
  (%1198, %1199, %1194, %1200)
}

def @func_19300() -> (Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32], Tensor[(1056, 2), bool], Tensor[(11, 14, 10), float64]) {
  %1201 = @func_11918() /* ty=(Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1202 = cast(meta[relay.Constant][61] /* ty=Tensor[(1056, 2), bool] */, dtype="bool") /* ty=Tensor[(1056, 2), bool] */;
  %1203 = reshape(%1202, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
  %1204 = @func_8624(%1203) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
  %1205 = %1201.1;
  %1206 = %1204.2;
  %1207 = @func_18677() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1205, %1206, meta[relay.Constant][61] /* ty=Tensor[(1056, 2), bool] */, %1207)
}

def @func_21394() -> (Tensor[(1920), float32],) {
  %1208 = @func_13731() /* ty=Tensor[(1920), float32] */;
  (%1208,)
}

def @func_7968() -> (Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) {
  %1209 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1210 = cast(meta[relay.Constant][62] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1211 = cast(meta[relay.Constant][62] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1212 = reshape(%1210, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %1213 = reshape(%1211, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %1214 = @func_4458(%1212, %1213) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %1215 = cast(meta[relay.Constant][62] /* ty=Tensor[(2112), bool] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %1216 = log2(%1215) /* ty=Tensor[(2112), float64] */;
  %1217 = cast(%1216, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %1218 = %1209.0;
  %1219 = %1214.2;
  %1220 = log10(%1217) /* ty=Tensor[(2112), float32] */;
  %1221 = @func_7887() /* ty=Tensor[(1920), float32] */;
  (%1218, %1219, %1220, %1221)
}

def @func_19027() -> (Tensor[(16), float32],) {
  %1222 = @func_13086() /* ty=Tensor[(16), float32] */;
  (%1222,)
}

def @func_13316(%var_13306: Tensor[(2, 64), int8]) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(2, 64), int64]) {
  %1223 = cast(meta[relay.Constant][63] /* ty=Tensor[(2, 64), int8] */, dtype="int8") /* ty=Tensor[(2, 64), int8] */;
  %1224 = reshape(%1223, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %1225 = @func_11548(%1224) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(16, 2, 4), int8], Tensor[(128), int8]) */;
  %1226 = cast(%var_13306, dtype="int64") /* ty=Tensor[(2, 64), int64] */;
  %1227 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(2, 64), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1228 = cast(meta[relay.Constant][63] /* ty=Tensor[(2, 64), int8] */, dtype="int64") /* ty=Tensor[(2, 64), int64] */;
  %1229 = dyn.reshape(%1226, %1227, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1230 = @func_12885() /* ty=Tensor[(1920), float32] */;
  %1231 = %1225.0;
  %1232 = multiply(%1228, %1229) /* ty=Tensor[(2, 64), int64] */;
  (%1230, %1231, %1232)
}

def @func_19647() -> (Tensor[(396), float32],) {
  %1233 = @func_17591() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %1234 = %1233.2;
  (%1234,)
}

def @func_1345(%var_1309: Tensor[(10, 5, 5), int16]) -> (Tensor[(10, 5, 5), int16],) {
  %1235 = cast(meta[relay.Constant][64] /* ty=Tensor[(10, 5, 5), int16] */, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %1236 = shape_of(%var_1309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1237 = cast(%var_1309, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %1238 = dyn.reshape(%1235, %1236, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1239 = right_shift(%1237, %1238) /* ty=Tensor[(10, 5, 5), int16] */;
  (%1239,)
}

def @func_9176() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) {
  %1240 = @func_8302() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %1241 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %1242 = @func_7887() /* ty=Tensor[(1920), float32] */;
  %1243 = %1240.0;
  %1244 = %1241.0;
  %1245 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1242, %1243, %1244, %1245)
}

def @func_4158(%var_4151: float32, %var_4152: Tensor[(15, 8, 16), float32]) -> (Tensor[(15, 8, 16), bool],) {
  %1246 = cast(%var_4151, dtype="bool") /* ty=bool */;
  %1247 = cast(%var_4152, dtype="bool") /* ty=Tensor[(15, 8, 16), bool] */;
  %1248 = greater(%1246, %1247) /* ty=Tensor[(15, 8, 16), bool] */;
  (%1248,)
}

def @func_10885() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) {
  %1249 = @func_10817() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1250 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %1251 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
  %1252 = cast(meta[relay.Constant][65] /* ty=Tensor[(200, 2), float64] */, dtype="float64") /* ty=Tensor[(200, 2), float64] */;
  %1253 = cast(meta[relay.Constant][65] /* ty=Tensor[(200, 2), float64] */, dtype="float64") /* ty=Tensor[(200, 2), float64] */;
  %1254 = reshape(%1252, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %1255 = reshape(%1253, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %1256 = %1249.1;
  %1257 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  %1258 = %1250.3;
  %1259 = %1251.0;
  %1260 = @func_10165(%1254, %1255) /* ty=Tensor[(10, 8, 5), float64] */;
  (%1256, %1257, %1258, %1259, %1260, meta[relay.Constant][65] /* ty=Tensor[(200, 2), float64] */)
}

def @func_20346() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %1261 = @func_17333() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %1262 = @func_17307() /* ty=Tensor[(11, 14, 10), float32] */;
  %1263 = %1261.0;
  (%1262, %1263)
}

def @func_7751() -> Tensor[(11, 14, 10), float64] {
  @func_7714() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_8193(%var_8177: Tensor[(24), float32], %var_8178: Tensor[(2, 1056), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) {
  %1264 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %1265 = cast(%var_8177, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1266 = cast(%var_8178, dtype="bool") /* ty=Tensor[(2, 1056), bool] */;
  %1267 = cast(meta[relay.Constant][66] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
  %1268 = reshape(%1265, newshape=[2, 3, 4]) /* ty=Tensor[(2, 3, 4), float32] */;
  %1269 = reshape(%1266, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %1270 = reshape(%1267, newshape=[128]) /* ty=Tensor[(128), int8] */;
  %1271 = @func_7271(%1268, %1269, %1270) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */;
  %1272 = @func_6913() /* ty=Tensor[(11, 14, 10), float32] */;
  %1273 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  %1274 = %1264.0;
  %1275 = %1271.0;
  %1276 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1272, %1273, %1274, %1275, %var_8177, %var_8178, meta[relay.Constant][66] /* ty=Tensor[(128), int8] */, %1276)
}

def @func_17970() -> Tensor[(10, 8, 5), float64] {
  %1277 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %1277.1
}

def @func_7060() -> Tensor[(1920), float32] {
  %1278 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %1278.0
}

def @func_21450(%var_21426: Tensor[(9, 11, 3), float64]) -> (Tensor[(9, 11, 3), float64],) {
  %1279 = cast(%var_21426, dtype="float64") /* ty=Tensor[(9, 11, 3), float64] */;
  %1280 = cosh(%1279) /* ty=Tensor[(9, 11, 3), float64] */;
  (%1280,)
}

def @func_8458() -> (Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) {
  %1281 = cast(meta[relay.Constant][67] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %1282 = reshape(%1281, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %1283 = @func_7060() /* ty=Tensor[(1920), float32] */;
  %1284 = @func_1860(%1282) /* ty=Tensor[(2, 1, 8), float32] */;
  (%1283, %1284, meta[relay.Constant][67] /* ty=Tensor[(16), float32] */)
}

def @func_20449() -> (Tensor[(2, 14, 14), float32],) {
  %1285 = @func_14627() /* ty=Tensor[(2, 14, 14), float32] */;
  (%1285,)
}

def @func_7491() -> (Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) {
  %1286 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1287 = cast(meta[relay.Constant][68] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1288 = cast(meta[relay.Constant][68] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1289 = reshape(%1287, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %1290 = reshape(%1288, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %1291 = @func_4458(%1289, %1290) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %1292 = %1286.0;
  %1293 = %1291.2;
  (%1292, %1293, meta[relay.Constant][68] /* ty=Tensor[(2112), bool] */)
}

def @func_10439() -> Tensor[(11, 14, 10), float64] {
  %1294 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1295 = %1294.0;
  %1296 = cast(%1295, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
  log(%1296) /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_7880() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1297 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1298 = %1297.0;
  %1299 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1298, %1299)
}

def @func_17513(%var_17464: Tensor[(4, 4), float32], %var_17485: Tensor[(280), uint8]) -> (Tensor[(11, 14, 10), float32], Tensor[(2, 1, 8), float32], Tensor[(4, 4), float32], Tensor[(1920), float32], int64, Tensor[(4, 14, 5), bool]) {
  %1300 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %1301 = cast(%var_17464, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %1302 = reshape(%1301, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %1303 = @func_12251() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %1304 = cast(%var_17485, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1305 = cast(%var_17485, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1306 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1307 = reshape(%1304, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %1308 = reshape(%1305, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %1309 = reshape(%1306, newshape=[]) /* ty=int64 */;
  %1310 = @func_4330(%1307, %1308, %1309) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
  %1311 = %1310.0;
  %1312 = cast(%var_17485, dtype="bool") /* ty=Tensor[(280), bool] */;
  %1313 = shape_of(%1311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1314 = cast(%1311, dtype="bool") /* ty=Tensor[(4, 14, 5), bool] */;
  %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1316 = %1300.0;
  %1317 = @func_1860(%1302) /* ty=Tensor[(2, 1, 8), float32] */;
  %1318 = %1303.1;
  %1319 = less(%1314, %1315) /* ty=Tensor[(4, 14, 5), bool] */;
  (%1316, %1317, %var_17464, %1318, -5 /* ty=int64 */, %1319)
}

def @func_20626() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1, 112), float32], Tensor[(1920), float32], Tensor[(1, 33), float64]) {
  %1320 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 112), float32] */, dtype="float32") /* ty=Tensor[(1, 112), float32] */;
  %1321 = reshape(%1320, newshape=[112, 1]) /* ty=Tensor[(112, 1), float32] */;
  %1322 = @func_11449(%1321) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 1, 8), float32], Tensor[(112, 1), float32]) */;
  %1323 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
  %1324 = reshape(%1323, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %1325 = @func_18577(%1324) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) */;
  %1326 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %1327 = %1322.0;
  %1328 = %1325.5;
  (%1326, %1327, meta[relay.Constant][69] /* ty=Tensor[(1, 112), float32] */, %1328, meta[relay.Constant][70] /* ty=Tensor[(1, 33), float64] */)
}

def @func_15078() -> (Tensor[(1920), float32], Tensor[(10, 8, 5), float64]) {
  %1329 = @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */;
  %1330 = @func_13110() /* ty=Tensor[(1920), float32] */;
  %1331 = %1329.2;
  (%1330, %1331)
}

def @func_14680() -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %1332 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %1333 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %1334 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
  %1335 = @func_12998() /* ty=(Tensor[(1920), float32],) */;
  %1336 = %1332.4;
  %1337 = %1333.0;
  %1338 = %1334.2;
  %1339 = @func_6913() /* ty=Tensor[(11, 14, 10), float32] */;
  %1340 = %1335.0;
  (%1336, %1337, %1338, %1339, %1340)
}

def @func_12506() -> (Tensor[(11, 14, 10), float32], Tensor[(110), float64]) {
  %1341 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %1342 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  %1343 = %1341.1;
  (%1342, %1343)
}

def @func_2152(%var_2122: Tensor[(3, 1, 1), float64], %var_2123: Tensor[(3, 1, 11), float64], %var_2139: Tensor[(250), int16]) -> (Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) {
  %1344 = cast(%var_2122, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %1345 = cast(%var_2123, dtype="float64") /* ty=Tensor[(3, 1, 11), float64] */;
  %1346 = cast(%var_2139, dtype="int16") /* ty=Tensor[(250), int16] */;
  %1347 = reshape(%1346, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %1348 = @func_1345(%1347) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %1349 = %1348.0;
  %1350 = cast(%var_2139, dtype="bool") /* ty=Tensor[(250), bool] */;
  %1351 = shape_of(%1349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1352 = cast(%1349, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
  %1353 = dyn.reshape(%1350, %1351, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1354 = floor_mod(%1344, %1345) /* ty=Tensor[(3, 1, 11), float64] */;
  %1355 = equal(%1352, %1353) /* ty=Tensor[(10, 5, 5), bool] */;
  (%1354, %1355)
}

def @func_18267() -> (Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %1356 = @func_15441() /* ty=(Tensor[(1920), float32], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(48, 4), float64], Tensor[(11, 14, 10), float64], Tensor[(44, 48), float64], Tensor[(11, 14, 10), float64]) */;
  %1357 = %1356.0;
  %1358 = @func_7060() /* ty=Tensor[(1920), float32] */;
  %1359 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %1360 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1357, %1358, %1359, %1360)
}

def @func_17699() -> (Tensor[(9, 11, 4), float64],) {
  %1361 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %1362 = %1361.0;
  %1363 = cast(%1362, dtype="float64") /* ty=Tensor[(9, 11, 4), float64] */;
  %1364 = asin(%1363) /* ty=Tensor[(9, 11, 4), float64] */;
  (%1364,)
}

def @func_14041() -> Tensor[(11, 14, 10), float64] {
  @func_10439() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_7868() -> Tensor[(1920), float32] {
  @func_7060() /* ty=Tensor[(1920), float32] */
}

def @func_17204() -> (Tensor[(11, 14, 10), float64],) {
  %1365 = @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %1366 = %1365.0;
  (%1366,)
}

def @func_12885() -> Tensor[(1920), float32] {
  @func_7060() /* ty=Tensor[(1920), float32] */
}

def @func_11918() -> (Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1367 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %1368 = @func_11244() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1369 = @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1370 = %1367.2;
  %1371 = %1368.0;
  %1372 = %1369.3;
  (%1370, %1371, %1372)
}

def @func_13547() -> float32 {
  %1373 = @func_10796() /* ty=(float32, Tensor[(11, 14, 10), float32]) */;
  %1373.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_15594() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  @func_15592() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_9439() -> (Tensor[(1920), float32],) {
  @func_9437() /* ty=(Tensor[(1920), float32],) */
}

def @func_1862(%var_1861: Tensor[(2, 1, 8), float32]) -> Tensor[(2, 1, 8), float32] {
  %1 = fn (%var_1845: Tensor[(2, 1, 8), float32]) -> Tensor[(2, 1, 8), float32] {
    %0 = cast(%var_1845, dtype="float32") /* ty=Tensor[(2, 1, 8), float32] */;
    log2(%0) /* ty=Tensor[(2, 1, 8), float32] */
  };
  %1(%var_1861) /* ty=Tensor[(2, 1, 8), float32] */
}

def @func_7474() -> (Tensor[(1920), float32],) {
  @func_7472() /* ty=(Tensor[(1920), float32],) */
}

def @func_7540() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) {
  @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */
}

def @func_19092() -> (Tensor[(1920), float32],) {
  %3 = fn () -> (Tensor[(1920), float32],) {
    %2 = @func_10127() /* ty=Tensor[(1920), float32] */;
    (%2,)
  };
  %3() /* ty=(Tensor[(1920), float32],) */
}

def @func_10738() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %4 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %5 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_18939(%var_18934: float64) -> Tensor[(14, 1, 10), float64] {
  %8 = cast(%var_18934, dtype="float64") /* ty=float64 */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 10), float64] */;
  power(%8, %9) /* ty=Tensor[(14, 1, 10), float64] */
}

def @func_16117(%var_16068: Tensor[(5, 14, 7), uint32], %var_16069: Tensor[(5, 14, 7), uint32]) -> (Tensor[(5, 14, 7), uint32], Tensor[(11, 14, 10), float32], Tensor[(5, 14, 7), float64], Tensor[(11, 14, 10), float64]) {
  %10 = cast(%var_16069, dtype="uint32") /* ty=Tensor[(5, 14, 7), uint32] */;
  %11 = shape_of(%var_16068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %12 = cast(%var_16068, dtype="uint32") /* ty=Tensor[(5, 14, 7), uint32] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %14 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %15 = cast(%var_16069, dtype="float64") /* ty=Tensor[(5, 14, 7), float64] */;
  %16 = bitwise_and(%12, %13) /* ty=Tensor[(5, 14, 7), uint32] */;
  %17 = %14.0;
  %18 = acosh(%15) /* ty=Tensor[(5, 14, 7), float64] */;
  %19 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  (%16, %17, %18, %19)
}

def @func_8864() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) {
  %25 = fn () -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) {
    %20 = @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %21 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
    %22 = %20.0;
    %23 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
    %24 = @func_7868() /* ty=Tensor[(1920), float32] */;
    (%21, %22, %23, %24)
  };
  %25() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */
}

def @func_11314() -> (Tensor[(1920), float32],) {
  %27 = fn () -> (Tensor[(1920), float32],) {
    %26 = @func_7060() /* ty=Tensor[(1920), float32] */;
    (%26,)
  };
  %27() /* ty=(Tensor[(1920), float32],) */
}

def @func_8700() -> (Tensor[(11, 14, 10), float32],) {
  %28 = @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */;
  %29 = %28.0;
  (%29,)
}

def @func_10946() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %33 = fn () -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
    %30 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
    %31 = %30.0;
    %32 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
    (%31, %32)
  };
  %33() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_13548() -> float32 {
  %35 = fn () -> float32 {
    %34 = @func_10796() /* ty=(float32, Tensor[(11, 14, 10), float32]) */;
    %34.0
  };
  %35() /* ty=float32 */
}

def @func_8778(%var_8777: Tensor[(1456), int32]) -> (Tensor[(14, 11, 11), bool], Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) {
  %42 = fn (%var_8774: Tensor[(1456), int32]) -> (Tensor[(14, 11, 11), bool], Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) {
    %36 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %37 = cast(%var_8774, dtype="int32") /* ty=Tensor[(1456), int32] */;
    %38 = reshape(%37, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
    %39 = %36.1;
    %40 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
    %41 = @func_4584(%38) /* ty=Tensor[(14, 13, 8), bool] */;
    (%39, %40, %41, %var_8774)
  };
  %42(%var_8777) /* ty=(Tensor[(14, 11, 11), bool], Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) */
}

def @func_9373() -> Tensor[(11, 14, 10), float32] {
  %43 = fn () -> Tensor[(11, 14, 10), float32] {
    @func_6492() /* ty=Tensor[(11, 14, 10), float32] */
  };
  %43() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_17910() -> (Tensor[(1920), float32],) {
  %46 = fn () -> (Tensor[(1920), float32],) {
    %44 = @func_17591() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %45 = %44.0;
    (%45,)
  };
  %46() /* ty=(Tensor[(1920), float32],) */
}

def @func_9827(%var_9826: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) {
  %55 = fn (%var_9823: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) {
    %47 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %48 = %47.0;
    %49 = cast(%48, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
    %50 = cast(%var_9823, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %51 = reshape(%50, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %52 = @func_6606(%51) /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) */;
    %53 = asinh(%49) /* ty=Tensor[(11, 14, 10), float64] */;
    %54 = %52.1;
    (%53, %54, %var_9823)
  };
  %55(%var_9826) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */
}

def @func_11398() -> (Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  %56 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %57 = cast(meta[relay.Constant][1] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %58 = cast(meta[relay.Constant][1] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %59 = reshape(%57, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %60 = reshape(%58, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
  %61 = %56.0;
  %62 = @func_10165(%59, %60) /* ty=Tensor[(10, 8, 5), float64] */;
  (%61, %62, meta[relay.Constant][1] /* ty=Tensor[(400), float64] */)
}

def @func_11400() -> (Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) {
  @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */
}

def @func_18341() -> (Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) {
  %68 = fn () -> (Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) {
    %63 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
    %64 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %65 = %63.0;
    %66 = @func_17050() /* ty=Tensor[(9, 11, 4), float32] */;
    %67 = %64.0;
    (%65, %66, %67)
  };
  %68() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_14628() -> Tensor[(2, 14, 14), float32] {
  %70 = fn () -> Tensor[(2, 14, 14), float32] {
    %69 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 14, 14), float32] */;
    sigmoid(%69) /* ty=Tensor[(2, 14, 14), float32] */
  };
  %70() /* ty=Tensor[(2, 14, 14), float32] */
}

def @func_12506() -> (Tensor[(11, 14, 10), float32], Tensor[(110), float64]) {
  %71 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %72 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  %73 = %71.1;
  (%72, %73)
}

def @func_14897() -> (Tensor[(11, 14, 10), float32],) {
  %76 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %74 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %75 = %74.0;
    (%75,)
  };
  %76() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_18171() -> (Tensor[(11, 14, 10), float32], Tensor[(16), float32]) {
  %77 = @func_8821() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) */;
  %78 = %77.1;
  %79 = @func_13086() /* ty=Tensor[(16), float32] */;
  (%78, %79)
}

def @func_18917() -> (Tensor[(11, 14, 10), float32],) {
  @func_18915() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_19806() -> Tensor[(11, 14, 10), float32] {
  %80 = @func_17263() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %80.0
}

def @main(%var_21572: Tensor[(10, 8, 5), float64]) -> (Tensor[(110), float64], Tensor[(10, 8, 5), bool]) {
  %81 = @func_16887() /* ty=(Tensor[(1920), float32], Tensor[(110), float64]) */;
  %82 = @func_18613() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) */;
  %83 = %82.1;
  %84 = cast(%var_21572, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="bool") /* ty=Tensor[(10, 8, 5), bool] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %88 = %81.1;
  %89 = logical_and(%86, %87) /* ty=Tensor[(10, 8, 5), bool] */;
  (%88, %89)
}

def @func_16977() -> (Tensor[(11, 10), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) {
  @func_16975() /* ty=(Tensor[(11, 10), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) */
}

def @func_13788() -> (Tensor[(11, 14, 10), float32],) {
  @func_13786() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_5646(%var_5644: uint16, %var_5645: Tensor[(14, 11, 11), uint16]) -> (Tensor[(14, 11, 11), bool],) {
  %93 = fn (%var_5627: uint16, %var_5628: Tensor[(14, 11, 11), uint16]) -> (Tensor[(14, 11, 11), bool],) {
    %90 = cast(%var_5627, dtype="bool") /* ty=bool */;
    %91 = cast(%var_5628, dtype="bool") /* ty=Tensor[(14, 11, 11), bool] */;
    %92 = not_equal(%90, %91) /* ty=Tensor[(14, 11, 11), bool] */;
    (%92,)
  };
  %93(%var_5644, %var_5645) /* ty=(Tensor[(14, 11, 11), bool],) */
}

def @func_10048() -> (Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) {
  %112 = fn () -> (Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) {
    %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(198, 2), float32] */, dtype="float32") /* ty=Tensor[(198, 2), float32] */;
    %95 = cast(meta[relay.Constant][3] /* ty=Tensor[(198, 2), float32] */, dtype="float32") /* ty=Tensor[(198, 2), float32] */;
    %96 = reshape(%94, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
    %97 = reshape(%95, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
    %98 = @func_3645(%96, %97) /* ty=(Tensor[(9, 11, 4), float32],) */;
    %99 = %98.0;
    %100 = cast(%99, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
    %101 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(198, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %102 = cast(meta[relay.Constant][3] /* ty=Tensor[(198, 2), float32] */, dtype="bool") /* ty=Tensor[(198, 2), bool] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %104 = @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %105 = %104.0;
    %106 = cast(%105, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
    %107 = reshape(%106, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float32] */;
    %108 = @func_7459(%107) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */;
    %109 = @func_9851() /* ty=Tensor[(2112), float32] */;
    %110 = greater(%102, %103) /* ty=Tensor[(198, 2), bool] */;
    %111 = %108.2;
    (%109, %110, %105, %111)
  };
  %112() /* ty=(Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) */
}

def @func_19944(%var_19942: Tensor[(56, 26), int32]) -> (Tensor[(16), float32], Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(14, 13, 8), bool], Tensor[(56, 26), int32]) {
  @func_19941(%var_19942) /* ty=(Tensor[(16), float32], Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(14, 13, 8), bool], Tensor[(56, 26), int32]) */
}

def @func_20346() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %113 = @func_17333() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %114 = @func_17307() /* ty=Tensor[(11, 14, 10), float32] */;
  %115 = %113.0;
  (%114, %115)
}

def @func_8743() -> Tensor[(11, 14, 10), float32] {
  %116 = fn () -> Tensor[(11, 14, 10), float32] {
    @func_6964() /* ty=Tensor[(11, 14, 10), float32] */
  };
  %116() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_10891() -> (Tensor[(11, 14, 10), float64],) {
  %117 = @func_10439() /* ty=Tensor[(11, 14, 10), float64] */;
  (%117,)
}

def @func_16207() -> Tensor[(11, 14, 10), float64] {
  @func_16205() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_10185() -> (Tensor[(9, 11, 4), float32],) {
  %120 = fn () -> (Tensor[(9, 11, 4), float32],) {
    %118 = @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %119 = %118.0;
    (%119,)
  };
  %120() /* ty=(Tensor[(9, 11, 4), float32],) */
}

def @func_11757() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %127 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
    %121 = @func_10817() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %122 = @func_11313() /* ty=(Tensor[(1920), float32],) */;
    %123 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
    %124 = %121.0;
    %125 = %122.0;
    %126 = @func_8742() /* ty=Tensor[(11, 14, 10), float32] */;
    (%123, %124, %125, %126)
  };
  %127() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_18269() -> (Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  @func_18267() /* ty=(Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_10309() -> Tensor[(16), float32] {
  %129 = fn () -> Tensor[(16), float32] {
    %128 = @func_8458() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
    %128.2
  };
  %129() /* ty=Tensor[(16), float32] */
}

def @func_14762() -> (Tensor[(11, 14, 10), float32],) {
  @func_14760() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_9004() -> float32 {
  @func_9002() /* ty=float32 */
}

def @func_13400() -> (Tensor[(11, 14, 10), float32],) {
  @func_13398() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_12684() -> Tensor[(11, 14, 10), float32] {
  %130 = fn () -> Tensor[(11, 14, 10), float32] {
    @func_6913() /* ty=Tensor[(11, 14, 10), float32] */
  };
  %130() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_20392(%var_20390: Tensor[(168), int32]) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int32], Tensor[(11, 14, 10), float32]) {
  @func_20389(%var_20390) /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int32], Tensor[(11, 14, 10), float32]) */
}

def @func_17115(%var_17113: Tensor[(2112, 1), bool], %var_17114: Tensor[(14, 11, 11), bool]) -> (Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2112, 1), bool], Tensor[(128), int8], Tensor[(14, 11, 11), bool]) {
  %145 = fn (%var_17078: Tensor[(2112, 1), bool], %var_17107: Tensor[(14, 11, 11), bool]) -> (Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2112, 1), bool], Tensor[(128), int8], Tensor[(14, 11, 11), bool]) {
    %131 = cast(meta[relay.Constant][4] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %132 = cast(%var_17078, dtype="bool") /* ty=Tensor[(2112, 1), bool] */;
    %133 = cast(meta[relay.Constant][5] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %134 = reshape(%131, newshape=[2, 3, 4]) /* ty=Tensor[(2, 3, 4), float32] */;
    %135 = reshape(%132, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %136 = reshape(%133, newshape=[128]) /* ty=Tensor[(128), int8] */;
    %137 = @func_7271(%134, %135, %136) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */;
    %138 = %137.5;
    %139 = cast(%var_17107, dtype="bool") /* ty=Tensor[(14, 11, 11), bool] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="bool") /* ty=Tensor[(14, 11, 11), bool] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %143 = @func_12140() /* ty=Tensor[(1920), float32] */;
    %144 = greater(%141, %142) /* ty=Tensor[(14, 11, 11), bool] */;
    (%143, meta[relay.Constant][4] /* ty=Tensor[(24), float32] */, %var_17078, meta[relay.Constant][5] /* ty=Tensor[(128), int8] */, %144)
  };
  %145(%var_17113, %var_17114) /* ty=(Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2112, 1), bool], Tensor[(128), int8], Tensor[(14, 11, 11), bool]) */
}

def @func_11288() -> (Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) {
  %146 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %147 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 10), float64] */, dtype="float64") /* ty=Tensor[(11, 10), float64] */;
  %148 = reshape(%147, newshape=[110]) /* ty=Tensor[(110), float64] */;
  %149 = @func_9771(%148) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, ?, 11), uint32], Tensor[(10, ?, 11), float32]) */;
  %150 = %146.0;
  %151 = %149.2;
  (%150, %151, meta[relay.Constant][6] /* ty=Tensor[(11, 10), float64] */)
}

def @func_9936() -> Tensor[(11, 14, 10), float64] {
  @func_7714() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_9568() -> (Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) {
  %155 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) {
    %152 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
    %153 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
    %154 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
    (%152, %153, %154)
  };
  %155() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */
}

def @func_1467(%var_1464: int64, %var_1465: Tensor[(15, 5, 1), int64], %var_1466: Tensor[(125, 2), int16]) -> (Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) {
  @func_1462(%var_1464, %var_1465, %var_1466) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */
}

def @func_10289() -> (Tensor[(1920), float32],) {
  %156 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %157 = %156.0;
  (%157,)
}

def @func_11245() -> (Tensor[(11, 14, 10), float32],) {
  %160 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %158 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %159 = %158.0;
    (%159,)
  };
  %160() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_4158(%var_4151: float32, %var_4152: Tensor[(15, 8, 16), float32]) -> (Tensor[(15, 8, 16), bool],) {
  %161 = cast(%var_4151, dtype="bool") /* ty=bool */;
  %162 = cast(%var_4152, dtype="bool") /* ty=Tensor[(15, 8, 16), bool] */;
  %163 = greater(%161, %162) /* ty=Tensor[(15, 8, 16), bool] */;
  (%163,)
}

def @func_13230() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) {
  @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */
}

def @func_16804() -> (Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float32], Tensor[(1456), int32]) {
  %172 = fn () -> (Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float32], Tensor[(1456), int32]) {
    %164 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %165 = @func_14546() /* ty=(Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) */;
    %166 = cast(meta[relay.Constant][7] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
    %167 = reshape(%166, newshape=[1456]) /* ty=Tensor[(1456), int32] */;
    %168 = @func_12975(%167) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) */;
    %169 = %164.4;
    %170 = %165.3;
    %171 = %168.0;
    (%169, %170, %171, meta[relay.Constant][7] /* ty=Tensor[(1456), int32] */)
  };
  %172() /* ty=(Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float32], Tensor[(1456), int32]) */
}

def @func_17019() -> (Tensor[(1920), float32],) {
  %173 = @func_10074() /* ty=Tensor[(1920), float32] */;
  (%173,)
}

def @func_12895() -> Tensor[(11, 14, 10), float32] {
  %174 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %174.0
}

def @func_17652(%var_17651: Tensor[(2, 1056), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(11, 14, 10), float32], Tensor[(2112), bool], Tensor[(2, 1056), bool]) {
  %185 = fn (%var_17646: Tensor[(2, 1056), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(11, 14, 10), float32], Tensor[(2112), bool], Tensor[(2, 1056), bool]) {
    %175 = @func_13786() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %176 = cast(meta[relay.Constant][8] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
    %177 = reshape(%176, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
    %178 = cast(%var_17646, dtype="bool") /* ty=Tensor[(2, 1056), bool] */;
    %179 = reshape(%178, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %180 = @func_9825(%179) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */;
    %181 = %175.0;
    %182 = @func_4584(%177) /* ty=Tensor[(14, 13, 8), bool] */;
    %183 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
    %184 = %180.2;
    (%181, %182, meta[relay.Constant][8] /* ty=Tensor[(1456), int32] */, %183, %184, %var_17646)
  };
  %185(%var_17651) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(11, 14, 10), float32], Tensor[(2112), bool], Tensor[(2, 1056), bool]) */
}

def @func_19702() -> (Tensor[(13, 14, 9), float64],) {
  %186 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 14, 9), float64] */;
  %187 = log(%186) /* ty=Tensor[(13, 14, 9), float64] */;
  (%187,)
}

def @func_15523() -> Tensor[(110), float64] {
  %189 = fn () -> Tensor[(110), float64] {
    %188 = @func_12506() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(110), float64]) */;
    %188.1
  };
  %189() /* ty=Tensor[(110), float64] */
}

def @func_4813(%var_4725: Tensor[(8, 7, 1), bool], %var_4726: Tensor[(8, 7, 7), bool], %var_4735: Tensor[(250), int16], %var_4751: Tensor[(16), float32], %var_4802: float32, %var_4803: Tensor[(96, 20), float32], %var_4811: Tensor[(2112), bool]) -> (Tensor[(8, 7, 7), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(250), int16], Tensor[(2, 1, 8), float32], Tensor[(16), float32], Tensor[(8, 7, 33), bool], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(10, 5, 5), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(96, 20), float32], Tensor[(10, 5, 5), bool], Tensor[(1920), float32], Tensor[(2112), bool]) {
  %190 = cast(%var_4725, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
  %191 = cast(%var_4726, dtype="bool") /* ty=Tensor[(8, 7, 7), bool] */;
  %192 = cast(meta[relay.Constant][10] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %193 = cast(meta[relay.Constant][11] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %194 = cast(%var_4735, dtype="int16") /* ty=Tensor[(250), int16] */;
  %195 = reshape(%192, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %196 = reshape(%193, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %197 = reshape(%194, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %198 = @func_2152(%195, %196, %197) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %199 = cast(%var_4751, dtype="float32") /* ty=Tensor[(16), float32] */;
  %200 = reshape(%199, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %201 = cast(meta[relay.Constant][11] /* ty=Tensor[(33), float64] */, dtype="uint8") /* ty=Tensor[(33), uint8] */;
  %202 = cast(%var_4725, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %203 = bitwise_xor(%201, %202) /* ty=Tensor[(8, 7, 33), uint8] */;
  %204 = cast(meta[relay.Constant][11] /* ty=Tensor[(33), float64] */, dtype="bool") /* ty=Tensor[(33), bool] */;
  %205 = cast(%203, dtype="bool") /* ty=Tensor[(8, 7, 33), bool] */;
  %206 = cast(meta[relay.Constant][12] /* ty=Tensor[(1456), int32] */, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %207 = reshape(%206, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %208 = cast(%var_4735, dtype="int16") /* ty=Tensor[(250), int16] */;
  %209 = reshape(%208, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %210 = @func_1345(%209) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(10, 5, 5), float64] */;
  %213 = exp(%212) /* ty=Tensor[(10, 5, 5), float64] */;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %215 = cast(%var_4802, dtype="float32") /* ty=float32 */;
  %216 = cast(%var_4803, dtype="float32") /* ty=Tensor[(96, 20), float32] */;
  %217 = reshape(%215, newshape=[]) /* ty=float32 */;
  %218 = reshape(%216, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
  %219 = @func_4158(%217, %218) /* ty=(Tensor[(15, 8, 16), bool],) */;
  %220 = cast(meta[relay.Constant][10] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %222 = tan(%214) /* ty=Tensor[(10, 5, 5), float32] */;
  %223 = cast(%222, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %224 = reshape(%220, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %225 = reshape(%221, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %226 = reshape(%223, newshape=[250]) /* ty=Tensor[(250), int16] */;
  %227 = @func_2152(%224, %225, %226) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
  %228 = cast(%var_4811, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %229 = cast(%var_4811, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %230 = reshape(%228, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %231 = reshape(%229, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %232 = @func_4458(%230, %231) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %233 = logical_or(%190, %191) /* ty=Tensor[(8, 7, 7), bool] */;
  %234 = %198.1;
  %235 = @func_1860(%200) /* ty=Tensor[(2, 1, 8), float32] */;
  %236 = less(%204, %205) /* ty=Tensor[(8, 7, 33), bool] */;
  %237 = @func_4584(%207) /* ty=Tensor[(14, 13, 8), bool] */;
  %238 = %219.0;
  %239 = %227.1;
  %240 = %232.3;
  (%233, %234, meta[relay.Constant][10] /* ty=Tensor[(3), float64] */, %var_4735, %235, %var_4751, %236, %237, meta[relay.Constant][12] /* ty=Tensor[(1456), int32] */, %222, %238, %var_4802, %var_4803, %239, %240, %var_4811)
}

def @func_19647() -> (Tensor[(396), float32],) {
  %241 = @func_17591() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %242 = %241.2;
  (%242,)
}

def @func_10797() -> (float32, Tensor[(11, 14, 10), float32]) {
  %246 = fn () -> (float32, Tensor[(11, 14, 10), float32]) {
    %243 = @func_9567() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */;
    %244 = @func_9002() /* ty=float32 */;
    %245 = %243.0;
    (%244, %245)
  };
  %246() /* ty=(float32, Tensor[(11, 14, 10), float32]) */
}

def @func_12310() -> Tensor[(11, 14, 10), float32] {
  %253 = fn () -> Tensor[(11, 14, 10), float32] {
    %247 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %248 = %247.4;
    %249 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 14, 10), float64] */, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
    %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(%248, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    subtract(%251, %252) /* ty=Tensor[(11, 14, 10), float32] */
  };
  %253() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_10169(%var_10167: Tensor[(10, 8, 5), float64], %var_10168: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  @func_10165(%var_10167, %var_10168) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_15747(%var_15745: Tensor[(250), int16]) -> (Tensor[(11, 14, 10), float32], Tensor[(10, 5, 5), int16], Tensor[(250), int16]) {
  @func_15744(%var_15745) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 5, 5), int16], Tensor[(250), int16]) */
}

def @func_4330(%var_4275: Tensor[(4, 14, 5), uint8], %var_4276: Tensor[(4, 14, 5), uint8], %var_4302: int64) -> (Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) {
  %254 = cast(%var_4276, dtype="bool") /* ty=Tensor[(4, 14, 5), bool] */;
  %255 = shape_of(%var_4275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%var_4275, dtype="bool") /* ty=Tensor[(4, 14, 5), bool] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %258 = greater(%256, %257) /* ty=Tensor[(4, 14, 5), bool] */;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(4, 14, 5), float32] */;
  %260 = cast(%var_4302, dtype="int64") /* ty=int64 */;
  %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(75), int64] */, dtype="int64") /* ty=Tensor[(75), int64] */;
  %262 = cast(meta[relay.Constant][15] /* ty=Tensor[(125, 2), int16] */, dtype="int16") /* ty=Tensor[(125, 2), int16] */;
  %263 = reshape(%260, newshape=[]) /* ty=int64 */;
  %264 = reshape(%261, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
  %265 = reshape(%262, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
  %266 = @func_1462(%263, %264, %265) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
  %267 = exp(%259) /* ty=Tensor[(4, 14, 5), float32] */;
  %268 = %266.1;
  (%267, %268, %var_4302, meta[relay.Constant][14] /* ty=Tensor[(75), int64] */, meta[relay.Constant][15] /* ty=Tensor[(125, 2), int16] */)
}

def @func_19704() -> (Tensor[(13, 14, 9), float64],) {
  @func_19702() /* ty=(Tensor[(13, 14, 9), float64],) */
}

def @func_7153() -> (Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) {
  %274 = fn () -> (Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) {
    %269 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %270 = %269.4;
    %271 = cast(%270, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
    %272 = sinh(%271) /* ty=Tensor[(9, 11, 4), float32] */;
    %273 = @func_7060() /* ty=Tensor[(1920), float32] */;
    (%272, %273)
  };
  %274() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */
}

def @func_13110() -> Tensor[(1920), float32] {
  @func_10074() /* ty=Tensor[(1920), float32] */
}

def @func_8667(%var_8650: Tensor[(24), float32], %var_8651: Tensor[(264, 8), bool]) -> (Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 264, 8), int8]) {
  %275 = cast(%var_8650, dtype="float32") /* ty=Tensor[(24), float32] */;
  %276 = cast(%var_8651, dtype="bool") /* ty=Tensor[(264, 8), bool] */;
  %277 = reshape(%275, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %278 = reshape(%276, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), bool] */;
  %279 = @func_8193(%277, %278) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) */;
  %280 = @func_8458() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
  %281 = %280.1;
  %282 = cast(%var_8651, dtype="int8") /* ty=Tensor[(264, 8), int8] */;
  %283 = cast(%281, dtype="int8") /* ty=Tensor[(2, 1, 8), int8] */;
  %284 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %285 = %279.3;
  %286 = multiply(%282, %283) /* ty=Tensor[(2, 264, 8), int8] */;
  (%284, %285, %var_8650, %286)
}

def @func_3645(%var_3640: Tensor[(9, 11, 4), float32], %var_3641: Tensor[(9, 11, 4), float32]) -> (Tensor[(9, 11, 4), float32],) {
  %287 = cast(%var_3641, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
  %288 = shape_of(%var_3640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%var_3640, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %291 = floor_mod(%289, %290) /* ty=Tensor[(9, 11, 4), float32] */;
  (%291,)
}

def @func_11191(%var_11129: Tensor[(75), int64], %var_11177: Tensor[(396), float32]) -> (Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250, 1), int16], Tensor[(11, 14, 10), float64], Tensor[(15, 5, 1), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32], Tensor[(1920), float32]) {
  %292 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %293 = cast(%var_11129, dtype="int64") /* ty=Tensor[(75), int64] */;
  %294 = cast(meta[relay.Constant][16] /* ty=Tensor[(250, 1), int16] */, dtype="int16") /* ty=Tensor[(250, 1), int16] */;
  %295 = reshape(%292, newshape=[]) /* ty=int64 */;
  %296 = reshape(%293, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
  %297 = reshape(%294, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
  %298 = @func_1462(%295, %296, %297) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
  %301 = cast(%var_11177, dtype="float32") /* ty=Tensor[(396), float32] */;
  %302 = cast(%var_11177, dtype="float32") /* ty=Tensor[(396), float32] */;
  %303 = reshape(%301, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %304 = reshape(%302, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
  %305 = @func_3645(%303, %304) /* ty=(Tensor[(9, 11, 4), float32],) */;
  %306 = @func_7887() /* ty=Tensor[(1920), float32] */;
  %307 = @func_10439() /* ty=Tensor[(11, 14, 10), float64] */;
  %308 = cos(%300) /* ty=Tensor[(15, 5, 1), float32] */;
  %309 = %305.0;
  %310 = @func_10453() /* ty=Tensor[(1920), float32] */;
  (%306, -9 /* ty=int64 */, %var_11129, meta[relay.Constant][16] /* ty=Tensor[(250, 1), int16] */, %307, %308, %309, %var_11177, %310)
}

def @func_13995() -> Tensor[(11, 14, 10), float32] {
  %311 = fn () -> Tensor[(11, 14, 10), float32] {
    @func_6913() /* ty=Tensor[(11, 14, 10), float32] */
  };
  %311() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_7271(%var_7201: Tensor[(2, 3, 4), float32], %var_7215: Tensor[(2112), bool], %var_7226: Tensor[(128), int8]) -> (Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) {
  %312 = cast(%var_7215, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %313 = cast(%var_7215, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %314 = reshape(%312, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %315 = reshape(%313, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %316 = @func_4458(%314, %315) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %317 = cast(%var_7201, dtype="float32") /* ty=Tensor[(2, 3, 4), float32] */;
  %318 = log2(%317) /* ty=Tensor[(2, 3, 4), float32] */;
  %319 = cast(%318, dtype="float32") /* ty=Tensor[(2, 3, 4), float32] */;
  %320 = cast(%var_7226, dtype="int8") /* ty=Tensor[(128), int8] */;
  %321 = reshape(%320, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %322 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(1694), uint16] */, dtype="uint16") /* ty=Tensor[(1694), uint16] */;
  %324 = reshape(%322, newshape=[]) /* ty=uint16 */;
  %325 = reshape(%323, newshape=[14, 11, 11]) /* ty=Tensor[(14, 11, 11), uint16] */;
  %326 = @func_5643(%324, %325) /* ty=(Tensor[(14, 11, 11), bool],) */;
  %327 = @func_4419(%321) /* ty=Tensor[(16, 2, 4), int8] */;
  %328 = cast(%327, dtype="int8") /* ty=Tensor[(16, 2, 4), int8] */;
  %329 = reshape(%328, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
  %330 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %331 = cast(%318, dtype="float32") /* ty=Tensor[(2, 3, 4), float32] */;
  %332 = %316.1;
  %333 = sin(%319) /* ty=Tensor[(2, 3, 4), float32] */;
  %334 = %326.0;
  %335 = @func_4419(%329) /* ty=Tensor[(16, 2, 4), int8] */;
  %336 = %330.0;
  %337 = sqrt(%331) /* ty=Tensor[(2, 3, 4), float32] */;
  (%332, %var_7215, %333, %327, %var_7226, %334, meta[relay.Constant][17] /* ty=uint16 */, meta[relay.Constant][18] /* ty=Tensor[(1694), uint16] */, %335, %336, %337)
}

def @func_6533() -> (Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) {
  %345 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) {
    %338 = cast(-5.65351f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %340 = reshape(%338, newshape=[]) /* ty=float32 */;
    %341 = reshape(%339, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
    %342 = @func_4158(%340, %341) /* ty=(Tensor[(15, 8, 16), bool],) */;
    %343 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
    %344 = %342.0;
    (%343, %344, -5.65351f /* ty=float32 */, meta[relay.Constant][19] /* ty=Tensor[(1920), float32] */)
  };
  %345() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */
}

def @func_4822(%var_4815: Tensor[(8, 7, 1), bool], %var_4816: Tensor[(8, 7, 7), bool], %var_4817: Tensor[(250), int16], %var_4818: Tensor[(16), float32], %var_4819: float32, %var_4820: Tensor[(96, 20), float32], %var_4821: Tensor[(2112), bool]) -> (Tensor[(8, 7, 7), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(250), int16], Tensor[(2, 1, 8), float32], Tensor[(16), float32], Tensor[(8, 7, 33), bool], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(10, 5, 5), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(96, 20), float32], Tensor[(10, 5, 5), bool], Tensor[(1920), float32], Tensor[(2112), bool]) {
  @func_4813(%var_4815, %var_4816, %var_4817, %var_4818, %var_4819, %var_4820, %var_4821) /* ty=(Tensor[(8, 7, 7), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(250), int16], Tensor[(2, 1, 8), float32], Tensor[(16), float32], Tensor[(8, 7, 33), bool], Tensor[(14, 13, 8), bool], Tensor[(1456), int32], Tensor[(10, 5, 5), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(96, 20), float32], Tensor[(10, 5, 5), bool], Tensor[(1920), float32], Tensor[(2112), bool]) */
}

def @func_15443() -> (Tensor[(1920), float32], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(48, 4), float64], Tensor[(11, 14, 10), float64], Tensor[(44, 48), float64], Tensor[(11, 14, 10), float64]) {
  @func_15441() /* ty=(Tensor[(1920), float32], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(48, 4), float64], Tensor[(11, 14, 10), float64], Tensor[(44, 48), float64], Tensor[(11, 14, 10), float64]) */
}

def @func_17348() -> Tensor[(2, 14, 14), float32] {
  %346 = fn () -> Tensor[(2, 14, 14), float32] {
    @func_14627() /* ty=Tensor[(2, 14, 14), float32] */
  };
  %346() /* ty=Tensor[(2, 14, 14), float32] */
}

def @func_19381() -> (float32,) {
  @func_19379() /* ty=(float32,) */
}

def @func_8821() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) {
  %347 = @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */;
  %348 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %349 = @func_7751() /* ty=Tensor[(11, 14, 10), float64] */;
  %350 = %347.1;
  %351 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  %352 = %348.0;
  (%349, %350, %351, %352)
}

def @func_14115() -> Tensor[(1920), float32] {
  @func_14113() /* ty=Tensor[(1920), float32] */
}

def @func_12975(%var_12971: Tensor[(1456), int32]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) {
  %353 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %354 = cast(%var_12971, dtype="int32") /* ty=Tensor[(1456), int32] */;
  %355 = reshape(%354, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %356 = %353.0;
  %357 = @func_4584(%355) /* ty=Tensor[(14, 13, 8), bool] */;
  (%356, %357, %var_12971)
}

def @func_9124() -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %358 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %359 = @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %360 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %361 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
  %362 = %358.0;
  %363 = %359.0;
  %364 = %360.0;
  (%361, %362, %363, %364)
}

def @func_20450() -> (Tensor[(2, 14, 14), float32],) {
  %366 = fn () -> (Tensor[(2, 14, 14), float32],) {
    %365 = @func_14627() /* ty=Tensor[(2, 14, 14), float32] */;
    (%365,)
  };
  %366() /* ty=(Tensor[(2, 14, 14), float32],) */
}

def @func_20311() -> (Tensor[(11, 14, 10), float32],) {
  %367 = @func_19754() /* ty=Tensor[(11, 14, 10), float32] */;
  (%367,)
}

def @func_4162(%var_4160: float32, %var_4161: Tensor[(15, 8, 16), float32]) -> (Tensor[(15, 8, 16), bool],) {
  @func_4158(%var_4160, %var_4161) /* ty=(Tensor[(15, 8, 16), bool],) */
}

def @func_7889() -> Tensor[(1920), float32] {
  @func_7887() /* ty=Tensor[(1920), float32] */
}

def @func_15241() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %373 = fn () -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
    %368 = @func_11570() /* ty=(Tensor[(1920), float32],) */;
    %369 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %370 = %368.0;
    %371 = %369.1;
    %372 = @func_7887() /* ty=Tensor[(1920), float32] */;
    (%370, %371, %372)
  };
  %373() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */
}

def @func_7062() -> Tensor[(1920), float32] {
  @func_7060() /* ty=Tensor[(1920), float32] */
}

def @func_10893() -> (Tensor[(11, 14, 10), float64],) {
  @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */
}

def @func_13112() -> Tensor[(1920), float32] {
  @func_13110() /* ty=Tensor[(1920), float32] */
}

def @func_19941(%var_19937: Tensor[(56, 26), int32]) -> (Tensor[(16), float32], Tensor[(11, 14, 10), float64], float32, Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(14, 13, 8), bool], Tensor[(56, 26), int32]) {
  %374 = @func_18171() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(16), float32]) */;
  %375 = @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %376 = @func_16161() /* ty=(float32,) */;
  %377 = cast(%var_19937, dtype="int32") /* ty=Tensor[(56, 26), int32] */;
  %378 = reshape(%377, newshape=[14, 13, 8]) /* ty=Tensor[(14, 13, 8), int32] */;
  %379 = %374.1;
  %380 = %375.0;
  %381 = %376.0;
  %382 = @func_16205() /* ty=Tensor[(11, 14, 10), float64] */;
  %383 = @func_18677() /* ty=Tensor[(11, 14, 10), float64] */;
  %384 = @func_4584(%378) /* ty=Tensor[(14, 13, 8), bool] */;
  (%379, %380, %381, %382, %383, %384, %var_19937)
}

def @func_20313() -> (Tensor[(11, 14, 10), float32],) {
  @func_20311() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_9537() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %385 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %386 = %385.1;
  %387 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  (%386, %387)
}

def @func_6715() -> (Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) {
  %402 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) {
    %388 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %389 = cast(meta[relay.Constant][20] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %390 = cast(meta[relay.Constant][21] /* ty=Tensor[(1694, 1), uint16] */, dtype="uint16") /* ty=Tensor[(1694, 1), uint16] */;
    %391 = reshape(%389, newshape=[]) /* ty=uint16 */;
    %392 = reshape(%390, newshape=[14, 11, 11]) /* ty=Tensor[(14, 11, 11), uint16] */;
    %393 = @func_5643(%391, %392) /* ty=(Tensor[(14, 11, 11), bool],) */;
    %394 = cast(meta[relay.Constant][22] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %395 = cast(meta[relay.Constant][22] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %396 = reshape(%394, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
    %397 = reshape(%395, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
    %398 = @func_3645(%396, %397) /* ty=(Tensor[(9, 11, 4), float32],) */;
    %399 = %388.0;
    %400 = %393.0;
    %401 = %398.0;
    (%399, %400, meta[relay.Constant][20] /* ty=uint16 */, meta[relay.Constant][21] /* ty=Tensor[(1694, 1), uint16] */, %401, meta[relay.Constant][22] /* ty=Tensor[(396), float32] */)
  };
  %402() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */
}

def @func_15592() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %403 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %404 = @func_14832() /* ty=Tensor[(11, 14, 10), float32] */;
  %405 = %403.1;
  (%404, %405)
}

def @func_9852() -> Tensor[(2112), float32] {
  %407 = fn () -> Tensor[(2112), float32] {
    %406 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
    %406.2
  };
  %407() /* ty=Tensor[(2112), float32] */
}

def @func_19301() -> (Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32], Tensor[(1056, 2), bool], Tensor[(11, 14, 10), float64]) {
  %415 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32], Tensor[(1056, 2), bool], Tensor[(11, 14, 10), float64]) {
    %408 = @func_11918() /* ty=(Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %409 = cast(meta[relay.Constant][23] /* ty=Tensor[(1056, 2), bool] */, dtype="bool") /* ty=Tensor[(1056, 2), bool] */;
    %410 = reshape(%409, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
    %411 = @func_8624(%410) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
    %412 = %408.1;
    %413 = %411.2;
    %414 = @func_18677() /* ty=Tensor[(11, 14, 10), float64] */;
    (%412, %413, meta[relay.Constant][23] /* ty=Tensor[(1056, 2), bool] */, %414)
  };
  %415() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32], Tensor[(1056, 2), bool], Tensor[(11, 14, 10), float64]) */
}

def @func_12897() -> Tensor[(11, 14, 10), float32] {
  @func_12895() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_15608() -> Tensor[(1920), float32] {
  @func_15606() /* ty=Tensor[(1920), float32] */
}

def @func_6492() -> Tensor[(11, 14, 10), float32] {
  %416 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %416.0
}

def @func_17021() -> (Tensor[(1920), float32],) {
  @func_17019() /* ty=(Tensor[(1920), float32],) */
}

def @func_7195() -> (Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) {
  %422 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) {
    %417 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %418 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %419 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
    %420 = %417.5;
    %421 = %418.5;
    (%419, %420, %421)
  };
  %422() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */
}

def @func_6447() -> (Tensor[(11, 14, 10), float32],) {
  @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_8671(%var_8669: Tensor[(24), float32], %var_8670: Tensor[(264, 8), bool]) -> (Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 264, 8), int8]) {
  @func_8667(%var_8669, %var_8670) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 264, 8), int8]) */
}

def @func_15356(%var_15355: Tensor[(16), float32]) -> (Tensor[(2112), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], int64, Tensor[(16, 1), float32], Tensor[(16), float32]) {
  %437 = fn (%var_15352: Tensor[(16), float32]) -> (Tensor[(2112), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], int64, Tensor[(16, 1), float32], Tensor[(16), float32]) {
    %423 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
    %424 = @func_9851() /* ty=Tensor[(2112), float32] */;
    %425 = cast(%424, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %426 = reshape(%425, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %427 = @func_9825(%426) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */;
    %428 = cast(%424, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %429 = cast(%var_15352, dtype="float32") /* ty=Tensor[(16), float32] */;
    %430 = reshape(%428, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %431 = reshape(%429, newshape=[16, 1]) /* ty=Tensor[(16, 1), float32] */;
    %432 = @func_13644(%430, %431) /* ty=(Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(128), int8], Tensor[(2112), int64], Tensor[(2, 1, 8), float32], Tensor[(16, 1), float32]) */;
    %433 = @func_7868() /* ty=Tensor[(1920), float32] */;
    %434 = %423.1;
    %435 = %427.1;
    %436 = %432.5;
    (%424, %433, %434, %435, %436, %var_15352)
  };
  %437(%var_15355) /* ty=(Tensor[(2112), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], int64, Tensor[(16, 1), float32], Tensor[(16), float32]) */
}

def @func_16422(%var_16418: Tensor[(9, 11, 4), float32], %var_16419: Tensor[(7, 70), uint32], %var_16420: int64, %var_16421: Tensor[(75), int64]) -> (Tensor[(9, 11, 4), bool], Tensor[(11, 14, 10), float32], Tensor[(7, 70), uint32], Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250), int16], Tensor[(10, 5, 5), float32], float32) {
  %464 = fn (%var_16373: Tensor[(9, 11, 4), float32], %var_16379: Tensor[(7, 70), uint32], %var_16389: int64, %var_16390: Tensor[(75), int64]) -> (Tensor[(9, 11, 4), bool], Tensor[(11, 14, 10), float32], Tensor[(7, 70), uint32], Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250), int16], Tensor[(10, 5, 5), float32], float32) {
    %438 = @func_9567() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */;
    %439 = %438.1;
    %440 = cast(%var_16373, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
    %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
    %442 = cast(%439, dtype="bool") /* ty=Tensor[(9, 11, 4), bool] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %444 = cast(%var_16379, dtype="uint32") /* ty=Tensor[(7, 70), uint32] */;
    %445 = cast(%var_16379, dtype="uint32") /* ty=Tensor[(7, 70), uint32] */;
    %446 = reshape(%444, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), uint32] */;
    %447 = reshape(%445, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), uint32] */;
    %448 = @func_16117(%446, %447) /* ty=(Tensor[(5, 14, 7), uint32], Tensor[(11, 14, 10), float32], Tensor[(5, 14, 7), float64], Tensor[(11, 14, 10), float64]) */;
    %449 = @func_11570() /* ty=(Tensor[(1920), float32],) */;
    %450 = cast(%var_16389, dtype="int64") /* ty=int64 */;
    %451 = cast(%var_16390, dtype="int64") /* ty=Tensor[(75), int64] */;
    %452 = cast(meta[relay.Constant][24] /* ty=Tensor[(250), int16] */, dtype="int16") /* ty=Tensor[(250), int16] */;
    %453 = reshape(%450, newshape=[]) /* ty=int64 */;
    %454 = reshape(%451, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
    %455 = reshape(%452, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
    %456 = @func_1462(%453, %454, %455) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
    %457 = %456.1;
    %458 = cast(%457, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
    %459 = greater_equal(%442, %443) /* ty=Tensor[(9, 11, 4), bool] */;
    %460 = %448.1;
    %461 = %449.0;
    %462 = atan(%458) /* ty=Tensor[(10, 5, 5), float32] */;
    %463 = @func_12266() /* ty=float32 */;
    (%459, %460, %var_16379, %461, %var_16389, %var_16390, meta[relay.Constant][24] /* ty=Tensor[(250), int16] */, %462, %463)
  };
  %464(%var_16418, %var_16419, %var_16420, %var_16421) /* ty=(Tensor[(9, 11, 4), bool], Tensor[(11, 14, 10), float32], Tensor[(7, 70), uint32], Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250), int16], Tensor[(10, 5, 5), float32], float32) */
}

def @func_8304() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  @func_8302() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_9970() -> (Tensor[(11, 14, 10), float32],) {
  @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_11346() -> (Tensor[(9, 11, 4), float32],) {
  @func_11344() /* ty=(Tensor[(9, 11, 4), float32],) */
}

def @func_10573() -> (Tensor[(11, 14, 10), float32],) {
  %466 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %465 = @func_8742() /* ty=Tensor[(11, 14, 10), float32] */;
    (%465,)
  };
  %466() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_7374(%var_7373: Tensor[(25, 10), int16]) -> (Tensor[(11, 14, 10), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(33), float64], Tensor[(25, 10), int16], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 2, 1), float64], Tensor[(28), float64], Tensor[(11, 14, 10), float32], Tensor[(16, 2, 4), int8]) {
  %493 = fn (%var_7342: Tensor[(25, 10), int16]) -> (Tensor[(11, 14, 10), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(33), float64], Tensor[(25, 10), int16], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 2, 1), float64], Tensor[(28), float64], Tensor[(11, 14, 10), float32], Tensor[(16, 2, 4), int8]) {
    %467 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
    %468 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 14, 10), float32] */, dtype="bool") /* ty=Tensor[(11, 14, 10), bool] */;
    %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
    %470 = cast(%467, dtype="bool") /* ty=Tensor[(11, 14, 10), bool] */;
    %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %472 = cast(meta[relay.Constant][26] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
    %473 = cast(meta[relay.Constant][27] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %474 = cast(%var_7342, dtype="int16") /* ty=Tensor[(25, 10), int16] */;
    %475 = reshape(%472, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
    %476 = reshape(%473, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
    %477 = reshape(%474, newshape=[250]) /* ty=Tensor[(250), int16] */;
    %478 = @func_2152(%475, %476, %477) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
    %479 = cast(meta[relay.Constant][28] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %480 = reshape(%479, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
    %481 = cast(meta[relay.Constant][29] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
    %482 = reshape(%481, newshape=[14, 2, 1]) /* ty=Tensor[(14, 2, 1), float64] */;
    %483 = @func_3876(%482) /* ty=(Tensor[(14, 2, 1), float64], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
    %484 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %485 = cast(meta[relay.Constant][28] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %486 = reshape(%485, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
    %487 = greater_equal(%470, %471) /* ty=Tensor[(11, 14, 10), bool] */;
    %488 = %478.1;
    %489 = @func_4419(%480) /* ty=Tensor[(16, 2, 4), int8] */;
    %490 = %483.0;
    %491 = %484.0;
    %492 = @func_4419(%486) /* ty=Tensor[(16, 2, 4), int8] */;
    (%487, %488, meta[relay.Constant][26] /* ty=Tensor[(3), float64] */, meta[relay.Constant][27] /* ty=Tensor[(33), float64] */, %var_7342, %489, meta[relay.Constant][28] /* ty=Tensor[(128), int8] */, %490, meta[relay.Constant][29] /* ty=Tensor[(28), float64] */, %491, %492)
  };
  %493(%var_7373) /* ty=(Tensor[(11, 14, 10), bool], Tensor[(10, 5, 5), bool], Tensor[(3), float64], Tensor[(33), float64], Tensor[(25, 10), int16], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 2, 1), float64], Tensor[(28), float64], Tensor[(11, 14, 10), float32], Tensor[(16, 2, 4), int8]) */
}

def @func_6609(%var_6607: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) {
  @func_6606(%var_6607) /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) */
}

def @func_17517(%var_17515: Tensor[(4, 4), float32], %var_17516: Tensor[(280), uint8]) -> (Tensor[(11, 14, 10), float32], Tensor[(2, 1, 8), float32], Tensor[(4, 4), float32], Tensor[(1920), float32], int64, Tensor[(4, 14, 5), bool]) {
  @func_17513(%var_17515, %var_17516) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(2, 1, 8), float32], Tensor[(4, 4), float32], Tensor[(1920), float32], int64, Tensor[(4, 14, 5), bool]) */
}

def @func_10128() -> Tensor[(1920), float32] {
  %495 = fn () -> Tensor[(1920), float32] {
    %494 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
    %494.0
  };
  %495() /* ty=Tensor[(1920), float32] */
}

def @func_16833() -> (Tensor[(11, 14, 10), float32],) {
  %496 = @func_12577() /* ty=Tensor[(11, 14, 10), float32] */;
  (%496,)
}

def @func_9968() -> (Tensor[(11, 14, 10), float32],) {
  %497 = @func_8484() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %498 = %497.0;
  (%498,)
}

def @func_20534() -> (Tensor[(1920), float32],) {
  @func_20532() /* ty=(Tensor[(1920), float32],) */
}

def @func_11053() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %499 = @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %500 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %501 = @func_10529() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) */;
  %502 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %503 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %504 = %499.0;
  %505 = %500.3;
  %506 = %501.1;
  %507 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
  %508 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  %509 = %502.0;
  (%503, %504, %505, %506, %507, %508, %509)
}

def @func_20933() -> (Tensor[(8, 11, 11), float32], Tensor[(968, 1920), uint64]) {
  @func_20931() /* ty=(Tensor[(8, 11, 11), float32], Tensor[(968, 1920), uint64]) */
}

def @func_10401() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  @func_10399() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */
}

def @func_13647(%var_13645: Tensor[(2112), bool], %var_13646: Tensor[(16, 1), float32]) -> (Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(128), int8], Tensor[(2112), int64], Tensor[(2, 1, 8), float32], Tensor[(16, 1), float32]) {
  %525 = fn (%var_13613: Tensor[(2112), bool], %var_13642: Tensor[(16, 1), float32]) -> (Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(128), int8], Tensor[(2112), int64], Tensor[(2, 1, 8), float32], Tensor[(16, 1), float32]) {
    %510 = cast(meta[relay.Constant][30] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %511 = reshape(%510, newshape=[2, 64]) /* ty=Tensor[(2, 64), int8] */;
    %512 = @func_13316(%511) /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(2, 64), int64]) */;
    %513 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
    %514 = %513.2;
    %515 = cast(%var_13613, dtype="int64") /* ty=Tensor[(2112), int64] */;
    %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(1), int32] */;
    %517 = cast(%514, dtype="int64") /* ty=Tensor[(2112), int64] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?), int64] */;
    %519 = cast(%var_13642, dtype="float32") /* ty=Tensor[(16, 1), float32] */;
    %520 = reshape(%519, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
    %521 = @func_10453() /* ty=Tensor[(1920), float32] */;
    %522 = %512.0;
    %523 = bitwise_and(%517, %518) /* ty=Tensor[(2112), int64] */;
    %524 = @func_1860(%520) /* ty=Tensor[(2, 1, 8), float32] */;
    (%521, %522, meta[relay.Constant][30] /* ty=Tensor[(128), int8] */, %523, %524, %var_13642)
  };
  %525(%var_13645, %var_13646) /* ty=(Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(128), int8], Tensor[(2112), int64], Tensor[(2, 1, 8), float32], Tensor[(16, 1), float32]) */
}

def @func_17068() -> Tensor[(1920), float32] {
  @func_17066() /* ty=Tensor[(1920), float32] */
}

def @func_14237() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %526 = @func_12797() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %527 = @func_10885() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */;
  %528 = %526.0;
  %529 = %527.0;
  (%528, %529)
}

def @func_19884() -> (Tensor[(11, 14, 10), float32], Tensor[(110), float64]) {
  %530 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %531 = %530.0;
  %532 = @func_15522() /* ty=Tensor[(110), float64] */;
  (%531, %532)
}

def @func_13665(%var_13664: Tensor[(10, 1, 11), uint16]) -> Tensor[(10, 8, 11), uint16] {
  %535 = fn (%var_13649: Tensor[(10, 1, 11), uint16]) -> Tensor[(10, 8, 11), uint16] {
    %533 = cast(%var_13649, dtype="uint16") /* ty=Tensor[(10, 1, 11), uint16] */;
    %534 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 8, 11), uint16] */, dtype="uint16") /* ty=Tensor[(10, 8, 11), uint16] */;
    subtract(%533, %534) /* ty=Tensor[(10, 8, 11), uint16] */
  };
  %535(%var_13664) /* ty=Tensor[(10, 8, 11), uint16] */
}

def @func_13483() -> float32 {
  %536 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
  %536.1
}

def @func_15744(%var_15722: Tensor[(250), int16]) -> (Tensor[(11, 14, 10), float32], Tensor[(10, 5, 5), int16], Tensor[(250), int16]) {
  %537 = cast(%var_15722, dtype="int16") /* ty=Tensor[(250), int16] */;
  %538 = reshape(%537, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %539 = @func_1345(%538) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %540 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %541 = %539.0;
  (%540, %541, %var_15722)
}

def @func_13318(%var_13317: Tensor[(2, 64), int8]) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(2, 64), int64]) {
  %552 = fn (%var_13306: Tensor[(2, 64), int8]) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(2, 64), int64]) {
    %542 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 64), int8] */, dtype="int8") /* ty=Tensor[(2, 64), int8] */;
    %543 = reshape(%542, newshape=[128]) /* ty=Tensor[(128), int8] */;
    %544 = @func_11548(%543) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(16, 2, 4), int8], Tensor[(128), int8]) */;
    %545 = cast(%var_13306, dtype="int64") /* ty=Tensor[(2, 64), int64] */;
    %546 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(2, 64), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %547 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 64), int8] */, dtype="int64") /* ty=Tensor[(2, 64), int64] */;
    %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %549 = @func_12885() /* ty=Tensor[(1920), float32] */;
    %550 = %544.0;
    %551 = multiply(%547, %548) /* ty=Tensor[(2, 64), int64] */;
    (%549, %550, %551)
  };
  %552(%var_13317) /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(2, 64), int64]) */
}

def @func_14682() -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  @func_14680() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */
}

def @func_10819() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_10817() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_1462(%var_1416: int64, %var_1417: Tensor[(15, 5, 1), int64], %var_1424: Tensor[(125, 2), int16]) -> (Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) {
  %553 = cast(%var_1416, dtype="int64") /* ty=int64 */;
  %554 = cast(%var_1417, dtype="int64") /* ty=Tensor[(15, 5, 1), int64] */;
  %555 = cast(%var_1424, dtype="int16") /* ty=Tensor[(125, 2), int16] */;
  %556 = reshape(%555, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %557 = @func_1345(%556) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %558 = %557.0;
  %559 = cast(%558, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %560 = reshape(%559, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
  %561 = @func_1345(%560) /* ty=(Tensor[(10, 5, 5), int16],) */;
  %562 = cast(%var_1424, dtype="uint32") /* ty=Tensor[(125, 2), uint32] */;
  %563 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%558, dtype="uint32") /* ty=Tensor[(10, 5, 5), uint32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %566 = subtract(%553, %554) /* ty=Tensor[(15, 5, 1), int64] */;
  %567 = %561.0;
  %568 = bitwise_and(%564, %565) /* ty=Tensor[(10, 5, 5), uint32] */;
  (%566, %567, %568)
}

def @func_14128() -> Tensor[(11, 14, 10), float32] {
  %569 = @func_10796() /* ty=(float32, Tensor[(11, 14, 10), float32]) */;
  %569.1
}

def @func_12592() -> Tensor[(11, 14, 10), float32] {
  %571 = fn () -> Tensor[(11, 14, 10), float32] {
    %570 = @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %570.0
  };
  %571() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_14833() -> Tensor[(11, 14, 10), float32] {
  %573 = fn () -> Tensor[(11, 14, 10), float32] {
    %572 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %572.1
  };
  %573() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_21223() -> (Tensor[(11, 14, 10), float64],) {
  %575 = fn () -> (Tensor[(11, 14, 10), float64],) {
    %574 = @func_14041() /* ty=Tensor[(11, 14, 10), float64] */;
    (%574,)
  };
  %575() /* ty=(Tensor[(11, 14, 10), float64],) */
}

def @func_14130() -> Tensor[(11, 14, 10), float32] {
  @func_14128() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_19204() -> Tensor[(1920), float32] {
  %576 = fn () -> Tensor[(1920), float32] {
    @func_7887() /* ty=Tensor[(1920), float32] */
  };
  %576() /* ty=Tensor[(1920), float32] */
}

def @func_17051() -> Tensor[(9, 11, 4), float32] {
  %578 = fn () -> Tensor[(9, 11, 4), float32] {
    %577 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %577.4
  };
  %578() /* ty=Tensor[(9, 11, 4), float32] */
}

def @func_6494() -> Tensor[(11, 14, 10), float32] {
  @func_6492() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_19068() -> Tensor[(1920), float32] {
  %579 = @func_17019() /* ty=(Tensor[(1920), float32],) */;
  %579.0
}

def @func_14717() -> Tensor[(11, 14, 10), float64] {
  @func_14715() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_15500() -> Tensor[(11, 14, 10), float32] {
  %580 = @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %580.1
}

def @func_8396() -> Tensor[(9, 11, 4), float32] {
  %582 = fn () -> Tensor[(9, 11, 4), float32] {
    %581 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
    %581.0
  };
  %582() /* ty=Tensor[(9, 11, 4), float32] */
}

def @func_7882() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_12218(%var_12214: Tensor[(75), int64], %var_12215: Tensor[(24), float32], %var_12216: Tensor[(2112), bool], %var_12217: Tensor[(128), int8]) -> (Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], float32, Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(75), int64], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32], Tensor[(24), float32], Tensor[(2112), bool], Tensor[(128), int8]) {
  %603 = fn (%var_12194: Tensor[(75), int64], %var_12207: Tensor[(24), float32], %var_12208: Tensor[(2112), bool], %var_12209: Tensor[(128), int8]) -> (Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], float32, Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(75), int64], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32], Tensor[(24), float32], Tensor[(2112), bool], Tensor[(128), int8]) {
    %583 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
    %584 = cast(%var_12194, dtype="int64") /* ty=Tensor[(75), int64] */;
    %585 = @func_8395() /* ty=Tensor[(9, 11, 4), float32] */;
    %586 = cast(%585, dtype="float32") /* ty=Tensor[(9, 11, 4), float32] */;
    %587 = reshape(%584, newshape=[75]) /* ty=Tensor[(75), int64] */;
    %588 = reshape(%586, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %589 = @func_11191(%587, %588) /* ty=(Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250, 1), int16], Tensor[(11, 14, 10), float64], Tensor[(15, 5, 1), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32], Tensor[(1920), float32]) */;
    %590 = cast(%var_12207, dtype="float32") /* ty=Tensor[(24), float32] */;
    %591 = cast(%var_12208, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %592 = cast(%var_12209, dtype="int8") /* ty=Tensor[(128), int8] */;
    %593 = reshape(%590, newshape=[2, 3, 4]) /* ty=Tensor[(2, 3, 4), float32] */;
    %594 = reshape(%591, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %595 = reshape(%592, newshape=[128]) /* ty=Tensor[(128), int8] */;
    %596 = @func_7271(%593, %594, %595) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */;
    %597 = @func_7751() /* ty=Tensor[(11, 14, 10), float64] */;
    %598 = %583.1;
    %599 = @func_9372() /* ty=Tensor[(11, 14, 10), float32] */;
    %600 = %589.0;
    %601 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
    %602 = %596.2;
    (%597, %585, %598, %599, %600, %var_12194, %601, %602, %var_12207, %var_12208, %var_12209)
  };
  %603(%var_12214, %var_12215, %var_12216, %var_12217) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], float32, Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(75), int64], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32], Tensor[(24), float32], Tensor[(2112), bool], Tensor[(128), int8]) */
}

def @func_14999() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 11), uint16], Tensor[(110), uint16], Tensor[(44, 48), bool]) {
  %619 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 11), uint16], Tensor[(110), uint16], Tensor[(44, 48), bool]) {
    %604 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %605 = cast(meta[relay.Constant][33] /* ty=Tensor[(110), uint16] */, dtype="uint16") /* ty=Tensor[(110), uint16] */;
    %606 = reshape(%605, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), uint16] */;
    %607 = cast(meta[relay.Constant][34] /* ty=Tensor[(22, 96), bool] */, dtype="bool") /* ty=Tensor[(22, 96), bool] */;
    %608 = reshape(%607, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
    %609 = @func_8624(%608) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
    %610 = %609.2;
    %611 = cast(meta[relay.Constant][34] /* ty=Tensor[(22, 96), bool] */, dtype="bool") /* ty=Tensor[(22, 96), bool] */;
    %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(2), int32] */;
    %613 = cast(%610, dtype="bool") /* ty=Tensor[(44, 48), bool] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %615 = @func_14128() /* ty=Tensor[(11, 14, 10), float32] */;
    %616 = %604.0;
    %617 = @func_13663(%606) /* ty=Tensor[(10, 8, 11), uint16] */;
    %618 = greater(%613, %614) /* ty=Tensor[(44, 48), bool] */;
    (%615, %616, %617, meta[relay.Constant][33] /* ty=Tensor[(110), uint16] */, %618)
  };
  %619() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 11), uint16], Tensor[(110), uint16], Tensor[(44, 48), bool]) */
}

def @func_15079() -> (Tensor[(1920), float32], Tensor[(10, 8, 5), float64]) {
  %623 = fn () -> (Tensor[(1920), float32], Tensor[(10, 8, 5), float64]) {
    %620 = @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */;
    %621 = @func_13110() /* ty=Tensor[(1920), float32] */;
    %622 = %620.2;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(1920), float32], Tensor[(10, 8, 5), float64]) */
}

def @func_8915() -> (Tensor[(11, 14, 10), float32],) {
  @func_8913() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_7276(%var_7273: Tensor[(2, 3, 4), float32], %var_7274: Tensor[(2112), bool], %var_7275: Tensor[(128), int8]) -> (Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) {
  @func_7271(%var_7273, %var_7274, %var_7275) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */
}

def @func_9096(%var_9095: Tensor[(5, 15, 6), float32]) -> Tensor[(5, 15, 6), float32] {
  %625 = fn (%var_9088: Tensor[(5, 15, 6), float32]) -> Tensor[(5, 15, 6), float32] {
    %624 = cast(%var_9088, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
    sinh(%624) /* ty=Tensor[(5, 15, 6), float32] */
  };
  %625(%var_9095) /* ty=Tensor[(5, 15, 6), float32] */
}

def @func_8968() -> (Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) {
  %634 = fn () -> (Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) {
    %626 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
    %627 = cast(meta[relay.Constant][35] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %628 = reshape(%627, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float32] */;
    %629 = @func_7459(%628) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */;
    %630 = cast(meta[relay.Constant][35] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %631 = %626.3;
    %632 = %629.1;
    %633 = sin(%630) /* ty=Tensor[(1540), float32] */;
    (%631, %632, %633)
  };
  %634() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */
}

def @func_18641() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %638 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %635 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %636 = %635.0;
    %637 = @func_8742() /* ty=Tensor[(11, 14, 10), float32] */;
    (%636, %637)
  };
  %638() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_16887() -> (Tensor[(1920), float32], Tensor[(110), float64]) {
  %642 = fn () -> (Tensor[(1920), float32], Tensor[(110), float64]) {
    %639 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
    %640 = @func_10453() /* ty=Tensor[(1920), float32] */;
    %641 = %639.1;
    (%640, %641)
  };
  %642() /* ty=(Tensor[(1920), float32], Tensor[(110), float64]) */
}

def @func_12252() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %646 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
    %643 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
    %644 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
    %645 = %643.3;
    (%644, %645)
  };
  %646() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */
}

def @func_18761() -> Tensor[(11, 14, 10), float32] {
  @func_18759() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_21560() -> Tensor[(11, 14, 10), float32] {
  %647 = @func_11756() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */;
  %647.1
}

def @func_19158(%var_19156: int16, %var_19157: Tensor[(2, 2, 3), int16]) -> (Tensor[(2, 2, 3), int16], float32) {
  @func_19154(%var_19156, %var_19157) /* ty=(Tensor[(2, 2, 3), int16], float32) */
}

def @func_19154(%var_19145: int16, %var_19146: Tensor[(2, 2, 3), int16]) -> (Tensor[(2, 2, 3), int16], float32) {
  %648 = cast(%var_19145, dtype="int16") /* ty=int16 */;
  %649 = cast(%var_19146, dtype="int16") /* ty=Tensor[(2, 2, 3), int16] */;
  %650 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
  %651 = subtract(%648, %649) /* ty=Tensor[(2, 2, 3), int16] */;
  %652 = %650.1;
  (%651, %652)
}

def @func_21512() -> Tensor[(110), float64] {
  %654 = fn () -> Tensor[(110), float64] {
    %653 = @func_19794() /* ty=(Tensor[(110), float64],) */;
    %653.0
  };
  %654() /* ty=Tensor[(110), float64] */
}

def @func_7870() -> Tensor[(1920), float32] {
  @func_7868() /* ty=Tensor[(1920), float32] */
}

def @func_8702() -> (Tensor[(11, 14, 10), float32],) {
  @func_8700() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_20945() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %657 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %655 = @func_12003() /* ty=Tensor[(11, 14, 10), float32] */;
    %656 = @func_19754() /* ty=Tensor[(11, 14, 10), float32] */;
    (%655, %656)
  };
  %657() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_9176() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) {
  %658 = @func_8302() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %659 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %660 = @func_7887() /* ty=Tensor[(1920), float32] */;
  %661 = %658.0;
  %662 = %659.0;
  %663 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  (%660, %661, %662, %663)
}

def @func_19427(%var_19384: uint8, %var_19385: Tensor[(15, 5, 5), uint8]) -> (Tensor[(15, 5, 5), bool], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %664 = cast(%var_19384, dtype="bool") /* ty=bool */;
  %665 = cast(%var_19385, dtype="bool") /* ty=Tensor[(15, 5, 5), bool] */;
  %666 = @func_19091() /* ty=(Tensor[(1920), float32],) */;
  %667 = @func_14453() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %668 = greater_equal(%664, %665) /* ty=Tensor[(15, 5, 5), bool] */;
  %669 = %666.0;
  %670 = %667.0;
  (%668, %669, %670)
}

def @func_6794() -> Tensor[(11, 14, 10), float32] {
  %671 = fn () -> Tensor[(11, 14, 10), float32] {
    @func_6492() /* ty=Tensor[(11, 14, 10), float32] */
  };
  %671() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_20029(%var_20028: Tensor[(4, 1, 2), float64]) -> Tensor[(4, 1, 2), float64] {
  %673 = fn (%var_19991: Tensor[(4, 1, 2), float64]) -> Tensor[(4, 1, 2), float64] {
    %672 = cast(%var_19991, dtype="float64") /* ty=Tensor[(4, 1, 2), float64] */;
    log10(%672) /* ty=Tensor[(4, 1, 2), float64] */
  };
  %673(%var_20028) /* ty=Tensor[(4, 1, 2), float64] */
}

def @func_9079() -> (Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %679 = fn () -> (Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %674 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %675 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
    %676 = @func_7060() /* ty=Tensor[(1920), float32] */;
    %677 = %674.0;
    %678 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
    (%675, %676, %677, %678)
  };
  %679() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_9539() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_10530() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) {
  %683 = fn () -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) {
    %680 = @func_9437() /* ty=(Tensor[(1920), float32],) */;
    %681 = %680.0;
    %682 = @func_7751() /* ty=Tensor[(11, 14, 10), float64] */;
    (%681, %682)
  };
  %683() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_9774(%var_9772: Tensor[(110), float64]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, ?, 11), uint32], Tensor[(10, ?, 11), float32]) {
  @func_9771(%var_9772) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, ?, 11), uint32], Tensor[(10, ?, 11), float32]) */
}

def @func_18066() -> (Tensor[(1920), float32], Tensor[(1920), float32]) {
  %688 = fn () -> (Tensor[(1920), float32], Tensor[(1920), float32]) {
    %684 = @func_8458() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */;
    %685 = @func_15240() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
    %686 = %684.0;
    %687 = %685.0;
    (%686, %687)
  };
  %688() /* ty=(Tensor[(1920), float32], Tensor[(1920), float32]) */
}

def @func_18915() -> (Tensor[(11, 14, 10), float32],) {
  %689 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %690 = %689.0;
  (%690,)
}

def @func_6915() -> Tensor[(11, 14, 10), float32] {
  @func_6913() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_10075() -> Tensor[(1920), float32] {
  %692 = fn () -> Tensor[(1920), float32] {
    %691 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
    %691.0
  };
  %692() /* ty=Tensor[(1920), float32] */
}

def @func_19495(%var_19494: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), bool], Tensor[(11, 14, 10), float64], float32, Tensor[(396), float32], Tensor[(2112), bool], Tensor[(3, 2, 13), float64]) {
  %707 = fn (%var_19433: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), bool], Tensor[(11, 14, 10), float64], float32, Tensor[(396), float32], Tensor[(2112), bool], Tensor[(3, 2, 13), float64]) {
    %693 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 2, 13), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
    %694 = shape_of(%var_19433, dtype="int32") /* ty=Tensor[(3), int32] */;
    %695 = cast(%var_19433, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
    %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %697 = @func_12471() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */;
    %698 = @func_17591() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %699 = @func_14022() /* ty=(Tensor[(9, 11, 4), float32], int64, Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */;
    %700 = cast(%var_19433, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
    %701 = greater_equal(%695, %696) /* ty=Tensor[(3, 2, 13), bool] */;
    %702 = @func_16205() /* ty=Tensor[(11, 14, 10), float64] */;
    %703 = %697.2;
    %704 = %698.2;
    %705 = %699.2;
    %706 = log2(%700) /* ty=Tensor[(3, 2, 13), float64] */;
    (%701, %702, %703, %704, %705, %706)
  };
  %707(%var_19494) /* ty=(Tensor[(3, 2, 13), bool], Tensor[(11, 14, 10), float64], float32, Tensor[(396), float32], Tensor[(2112), bool], Tensor[(3, 2, 13), float64]) */
}

def @func_11344() -> (Tensor[(9, 11, 4), float32],) {
  %708 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %709 = %708.0;
  (%709,)
}

def @func_14800() -> (Tensor[(1920), float32],) {
  %711 = fn () -> (Tensor[(1920), float32],) {
    %710 = @func_7060() /* ty=Tensor[(1920), float32] */;
    (%710,)
  };
  %711() /* ty=(Tensor[(1920), float32],) */
}

def @func_9938() -> Tensor[(11, 14, 10), float64] {
  @func_9936() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_16582() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  @func_16580() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */
}

def @func_6606(%var_6596: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) {
  %712 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %713 = cast(%var_6596, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %714 = cast(%var_6596, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %715 = reshape(%713, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %716 = reshape(%714, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
  %717 = @func_4458(%715, %716) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
  %718 = %712.0;
  %719 = %717.4;
  (%718, %719, %var_6596)
}

def @func_3876(%var_3863: Tensor[(14, 2, 1), float64]) -> (Tensor[(14, 2, 1), float64], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) {
  %720 = cast(%var_3863, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
  %721 = cast(meta[relay.Constant][37] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %722 = reshape(%721, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %723 = asin(%720) /* ty=Tensor[(14, 2, 1), float64] */;
  %724 = @func_1860(%722) /* ty=Tensor[(2, 1, 8), float32] */;
  (%723, %724, meta[relay.Constant][37] /* ty=Tensor[(16), float32] */)
}

def @func_17333() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %725 = @func_16833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %726 = @func_14041() /* ty=Tensor[(11, 14, 10), float64] */;
  %727 = %725.0;
  (%726, %727)
}

def @func_3879(%var_3877: Tensor[(14, 2, 1), float64]) -> (Tensor[(14, 2, 1), float64], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) {
  @func_3876(%var_3877) /* ty=(Tensor[(14, 2, 1), float64], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */
}

def @func_10689(%var_10683: Tensor[(14, 1, 8), float32]) -> Tensor[(14, 1, 8), float32] {
  %728 = cast(%var_10683, dtype="float32") /* ty=Tensor[(14, 1, 8), float32] */;
  log10(%728) /* ty=Tensor[(14, 1, 8), float32] */
}

def @func_9352(%var_9292: Tensor[(24), float32]) -> (Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(2, 1056), float32], Tensor[(2, 1056), float32]) {
  %729 = @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
  %730 = cast(%var_9292, dtype="float32") /* ty=Tensor[(24), float32] */;
  %731 = cast(meta[relay.Constant][38] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %732 = reshape(%730, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %733 = reshape(%731, newshape=[2, 1056]) /* ty=Tensor[(2, 1056), bool] */;
  %734 = @func_8193(%732, %733) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) */;
  %735 = %734.5;
  %736 = cast(meta[relay.Constant][38] /* ty=Tensor[(2112), bool] */, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(2), int32] */;
  %738 = cast(%735, dtype="uint8") /* ty=Tensor[(2, 1056), uint8] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %740 = bitwise_or(%738, %739) /* ty=Tensor[(2, 1056), uint8] */;
  %741 = cast(meta[relay.Constant][38] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(2), int32] */;
  %743 = cast(%740, dtype="bool") /* ty=Tensor[(2, 1056), bool] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %745 = cast(%740, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %746 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 1056), bool] */, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %747 = shape_of(%735, dtype="int32") /* ty=Tensor[(2), int32] */;
  %748 = cast(%735, dtype="float32") /* ty=Tensor[(2, 1056), float32] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %750 = %729.0;
  %751 = greater(%743, %744) /* ty=Tensor[(2, 1056), bool] */;
  %752 = cos(%745) /* ty=Tensor[(2, 1056), float32] */;
  %753 = floor_divide(%748, %749) /* ty=Tensor[(2, 1056), float32] */;
  (%750, %var_9292, %751, %752, %753)
}

def @func_12056() -> (Tensor[(1920), float32],) {
  @func_12054() /* ty=(Tensor[(1920), float32],) */
}

def @func_14454() -> (Tensor[(11, 14, 10), float32],) {
  %755 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %754 = @func_9372() /* ty=Tensor[(11, 14, 10), float32] */;
    (%754,)
  };
  %755() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_7662(%var_7660: float32, %var_7661: Tensor[(128), int8]) -> (Tensor[(1920), float32], Tensor[(396), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(15, 8, 16), uint16]) {
  %772 = fn (%var_7605: float32, %var_7639: Tensor[(128), int8]) -> (Tensor[(1920), float32], Tensor[(396), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(15, 8, 16), uint16]) {
    %756 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
    %757 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
    %758 = cast(%var_7639, dtype="int8") /* ty=Tensor[(128), int8] */;
    %759 = reshape(%758, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
    %760 = cast(%var_7605, dtype="float32") /* ty=float32 */;
    %761 = %756.0;
    %762 = cast(%761, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %763 = reshape(%760, newshape=[]) /* ty=float32 */;
    %764 = reshape(%762, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
    %765 = @func_4158(%763, %764) /* ty=(Tensor[(15, 8, 16), bool],) */;
    %766 = %765.0;
    %767 = cast(%766, dtype="uint16") /* ty=Tensor[(15, 8, 16), uint16] */;
    %768 = cast(%var_7605, dtype="uint16") /* ty=uint16 */;
    %769 = %757.1;
    %770 = @func_4419(%759) /* ty=Tensor[(16, 2, 4), int8] */;
    %771 = bitwise_and(%767, %768) /* ty=Tensor[(15, 8, 16), uint16] */;
    (%761, %769, %770, %var_7639, %771)
  };
  %772(%var_7660, %var_7661) /* ty=(Tensor[(1920), float32], Tensor[(396), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(15, 8, 16), uint16]) */
}

def @func_7969() -> (Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) {
  %786 = fn () -> (Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) {
    %773 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %774 = cast(meta[relay.Constant][40] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %775 = cast(meta[relay.Constant][40] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %776 = reshape(%774, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
    %777 = reshape(%775, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
    %778 = @func_4458(%776, %777) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
    %779 = cast(meta[relay.Constant][40] /* ty=Tensor[(2112), bool] */, dtype="float64") /* ty=Tensor[(2112), float64] */;
    %780 = log2(%779) /* ty=Tensor[(2112), float64] */;
    %781 = cast(%780, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %782 = %773.0;
    %783 = %778.2;
    %784 = log10(%781) /* ty=Tensor[(2112), float32] */;
    %785 = @func_7887() /* ty=Tensor[(1920), float32] */;
    (%782, %783, %784, %785)
  };
  %786() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */
}

def @func_4461(%var_4459: Tensor[(16, 11, 12), bool], %var_4460: Tensor[(16, 11, 12), bool]) -> (Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) {
  %806 = fn (%var_4435: Tensor[(16, 11, 12), bool], %var_4436: Tensor[(16, 11, 12), bool]) -> (Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) {
    %787 = cast(%var_4436, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
    %788 = shape_of(%var_4435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %789 = cast(%var_4435, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
    %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %791 = cast(-2.39393f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %792 = cast(meta[relay.Constant][41] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %793 = reshape(%791, newshape=[]) /* ty=float32 */;
    %794 = reshape(%792, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
    %795 = @func_4158(%793, %794) /* ty=(Tensor[(15, 8, 16), bool],) */;
    %796 = cast(meta[relay.Constant][42] /* ty=Tensor[(280), uint8] */, dtype="uint8") /* ty=Tensor[(280), uint8] */;
    %797 = cast(meta[relay.Constant][42] /* ty=Tensor[(280), uint8] */, dtype="uint8") /* ty=Tensor[(280), uint8] */;
    %798 = cast(-2.39393f /* ty=float32 */, dtype="int64") /* ty=int64 */;
    %799 = reshape(%796, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
    %800 = reshape(%797, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
    %801 = reshape(%798, newshape=[]) /* ty=int64 */;
    %802 = @func_4330(%799, %800, %801) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
    %803 = logical_and(%789, %790) /* ty=Tensor[(16, 11, 12), bool] */;
    %804 = %795.0;
    %805 = %802.2;
    (%803, %804, -2.39393f /* ty=float32 */, meta[relay.Constant][41] /* ty=Tensor[(1920), float32] */, %805, meta[relay.Constant][42] /* ty=Tensor[(280), uint8] */)
  };
  %806(%var_4459, %var_4460) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */
}

def @func_14942() -> Tensor[(11, 14, 10), float64] {
  %807 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %807.1
}

def @func_6835() -> (Tensor[(11, 14, 10), float32],) {
  @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_12141() -> Tensor[(1920), float32] {
  %808 = fn () -> Tensor[(1920), float32] {
    @func_10453() /* ty=Tensor[(1920), float32] */
  };
  %808() /* ty=Tensor[(1920), float32] */
}

def @func_14239() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_14237() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_7887() -> Tensor[(1920), float32] {
  @func_7868() /* ty=Tensor[(1920), float32] */
}

def @func_9771(%var_9728: Tensor[(110), float64]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(10, ?, 11), uint32], Tensor[(10, ?, 11), float32]) {
  %809 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %810 = @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %811 = cast(%var_9728, dtype="float64") /* ty=Tensor[(110), float64] */;
  %812 = reshape(%811, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float64] */;
  %813 = @func_5477(%812) /* ty=(Tensor[(10, ?, 11), uint16],) */;
  %814 = %813.0;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(10, ?, 11), float64] */;
  %816 = log(%815) /* ty=Tensor[(10, ?, 11), float64] */;
  %817 = cast(%var_9728, dtype="uint32") /* ty=Tensor[(110), uint32] */;
  %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%816, dtype="uint32") /* ty=Tensor[(10, ?, 11), uint32] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %821 = cast(%816, dtype="float32") /* ty=Tensor[(10, ?, 11), float32] */;
  %822 = %809.0;
  %823 = %810.1;
  %824 = multiply(%819, %820) /* ty=Tensor[(10, ?, 11), uint32] */;
  %825 = tan(%821) /* ty=Tensor[(10, ?, 11), float32] */;
  (%822, %823, %824, %825)
}

def @func_9178() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) {
  @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_8302() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %826 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %827 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %828 = %826.0;
  %829 = %827.0;
  %830 = @func_6913() /* ty=Tensor[(11, 14, 10), float32] */;
  %831 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%828, %829, %830, %831)
}

def @func_16623() -> (Tensor[(9, 11, 4), float32],) {
  %834 = fn () -> (Tensor[(9, 11, 4), float32],) {
    %832 = @func_12471() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */;
    %833 = %832.1;
    (%833,)
  };
  %834() /* ty=(Tensor[(9, 11, 4), float32],) */
}

def @func_17456(%var_17455: float32) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], float32) {
  %845 = fn (%var_17444: float32) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], float32) {
    %835 = @func_12054() /* ty=(Tensor[(1920), float32],) */;
    %836 = @func_12073() /* ty=(Tensor[(11, 14, 10), float64],) */;
    %837 = cast(%var_17444, dtype="float32") /* ty=float32 */;
    %838 = %835.0;
    %839 = cast(%838, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %840 = reshape(%837, newshape=[]) /* ty=float32 */;
    %841 = reshape(%839, newshape=[15, 8, 16]) /* ty=Tensor[(15, 8, 16), float32] */;
    %842 = @func_4158(%840, %841) /* ty=(Tensor[(15, 8, 16), bool],) */;
    %843 = %836.0;
    %844 = %842.0;
    (%838, %843, %844, %var_17444)
  };
  %845(%var_17455) /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(15, 8, 16), bool], float32) */
}

def @func_9002() -> float32 {
  %846 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
  %846.2
}

def @func_17360() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_17358() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_13087() -> Tensor[(16), float32] {
  %847 = fn () -> Tensor[(16), float32] {
    @func_10308() /* ty=Tensor[(16), float32] */
  };
  %847() /* ty=Tensor[(16), float32] */
}

def @func_4335(%var_4332: Tensor[(4, 14, 5), uint8], %var_4333: Tensor[(4, 14, 5), uint8], %var_4334: int64) -> (Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) {
  @func_4330(%var_4332, %var_4333, %var_4334) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */
}

def @func_8823() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) {
  @func_8821() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) */
}

def @func_19379() -> (float32,) {
  %848 = @func_16366() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) */;
  %849 = %848.4;
  (%849,)
}

def @func_19431(%var_19429: uint8, %var_19430: Tensor[(15, 5, 5), uint8]) -> (Tensor[(15, 5, 5), bool], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  @func_19427(%var_19429, %var_19430) /* ty=(Tensor[(15, 5, 5), bool], Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_19550() -> (Tensor[(1920), float32],) {
  %850 = @func_18267() /* ty=(Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %851 = %850.0;
  (%851,)
}

def @func_16121(%var_16119: Tensor[(5, 14, 7), uint32], %var_16120: Tensor[(5, 14, 7), uint32]) -> (Tensor[(5, 14, 7), uint32], Tensor[(11, 14, 10), float32], Tensor[(5, 14, 7), float64], Tensor[(11, 14, 10), float64]) {
  @func_16117(%var_16119, %var_16120) /* ty=(Tensor[(5, 14, 7), uint32], Tensor[(11, 14, 10), float32], Tensor[(5, 14, 7), float64], Tensor[(11, 14, 10), float64]) */
}

def @func_12797() -> (Tensor[(11, 14, 10), float32],) {
  %852 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %853 = %852.0;
  (%853,)
}

def @func_14399(%var_14398: Tensor[(400), float64]) -> (Tensor[(1920), float32], Tensor[(1694, 14), bool], float32, Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(98, 242), float64]) {
  %875 = fn (%var_14367: Tensor[(400), float64]) -> (Tensor[(1920), float32], Tensor[(1694, 14), bool], float32, Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(98, 242), float64]) {
    %854 = cast(meta[relay.Constant][43] /* ty=Tensor[(98, 242), uint16] */, dtype="uint16") /* ty=Tensor[(98, 242), uint16] */;
    %855 = cast(meta[relay.Constant][43] /* ty=Tensor[(98, 242), uint16] */, dtype="float32") /* ty=Tensor[(98, 242), float32] */;
    %856 = reshape(%854, newshape=[1694, 14]) /* ty=Tensor[(1694, 14), uint16] */;
    %857 = reshape(%855, newshape=[1694, 14]) /* ty=Tensor[(1694, 14), float32] */;
    %858 = @func_14204(%856, %857) /* ty=(Tensor[(1694, 14), bool],) */;
    %859 = cast(%var_14367, dtype="float64") /* ty=Tensor[(400), float64] */;
    %860 = cast(%var_14367, dtype="float64") /* ty=Tensor[(400), float64] */;
    %861 = reshape(%859, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %862 = reshape(%860, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %863 = cast(meta[relay.Constant][43] /* ty=Tensor[(98, 242), uint16] */, dtype="float32") /* ty=Tensor[(98, 242), float32] */;
    %864 = sin(%863) /* ty=Tensor[(98, 242), float32] */;
    %865 = cast(%864, dtype="float32") /* ty=Tensor[(98, 242), float32] */;
    %866 = log2(%865) /* ty=Tensor[(98, 242), float32] */;
    %867 = cast(%866, dtype="float64") /* ty=Tensor[(98, 242), float64] */;
    %868 = exp(%867) /* ty=Tensor[(98, 242), float64] */;
    %869 = cast(%868, dtype="float64") /* ty=Tensor[(98, 242), float64] */;
    %870 = @func_7868() /* ty=Tensor[(1920), float32] */;
    %871 = %858.0;
    %872 = @func_9002() /* ty=float32 */;
    %873 = @func_10165(%861, %862) /* ty=Tensor[(10, 8, 5), float64] */;
    %874 = asin(%869) /* ty=Tensor[(98, 242), float64] */;
    (%870, %871, %872, %873, %var_14367, %874)
  };
  %875(%var_14398) /* ty=(Tensor[(1920), float32], Tensor[(1694, 14), bool], float32, Tensor[(10, 8, 5), float64], Tensor[(400), float64], Tensor[(98, 242), float64]) */
}

def @func_13989() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %876 = @func_12471() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */;
  %877 = %876.0;
  %878 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%877, %878)
}

def @func_19135() -> (Tensor[(11, 14, 10), float32],) {
  %881 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %879 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %880 = %879.1;
    (%880,)
  };
  %881() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_8196(%var_8194: Tensor[(24), float32], %var_8195: Tensor[(2, 1056), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) {
  %895 = fn (%var_8177: Tensor[(24), float32], %var_8178: Tensor[(2, 1056), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) {
    %882 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
    %883 = cast(%var_8177, dtype="float32") /* ty=Tensor[(24), float32] */;
    %884 = cast(%var_8178, dtype="bool") /* ty=Tensor[(2, 1056), bool] */;
    %885 = cast(meta[relay.Constant][44] /* ty=Tensor[(128), int8] */, dtype="int8") /* ty=Tensor[(128), int8] */;
    %886 = reshape(%883, newshape=[2, 3, 4]) /* ty=Tensor[(2, 3, 4), float32] */;
    %887 = reshape(%884, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %888 = reshape(%885, newshape=[128]) /* ty=Tensor[(128), int8] */;
    %889 = @func_7271(%886, %887, %888) /* ty=(Tensor[(15, 8, 16), bool], Tensor[(2112), bool], Tensor[(2, 3, 4), float32], Tensor[(16, 2, 4), int8], Tensor[(128), int8], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694), uint16], Tensor[(16, 2, 4), int8], Tensor[(11, 14, 10), float32], Tensor[(2, 3, 4), float32]) */;
    %890 = @func_6913() /* ty=Tensor[(11, 14, 10), float32] */;
    %891 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
    %892 = %882.0;
    %893 = %889.0;
    %894 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
    (%890, %891, %892, %893, %var_8177, %var_8178, meta[relay.Constant][44] /* ty=Tensor[(128), int8] */, %894)
  };
  %895(%var_8194, %var_8195) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(128), int8], Tensor[(11, 14, 10), float64]) */
}

def @func_13733() -> Tensor[(1920), float32] {
  @func_13731() /* ty=Tensor[(1920), float32] */
}

def @func_6875() -> (Tensor[(11, 14, 10), float32],) {
  @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_9437() -> (Tensor[(1920), float32],) {
  %896 = @func_7060() /* ty=Tensor[(1920), float32] */;
  (%896,)
}

def @func_12799() -> (Tensor[(11, 14, 10), float32],) {
  @func_12797() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_13228() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) {
  %897 = @func_10399() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %898 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %899 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
  %900 = %897.2;
  %901 = %898.1;
  %902 = %899.1;
  (%900, %901, %902)
}

def @func_4586(%var_4585: Tensor[(14, 13, 8), int32]) -> Tensor[(14, 13, 8), bool] {
  %907 = fn (%var_4567: Tensor[(14, 13, 8), int32]) -> Tensor[(14, 13, 8), bool] {
    %903 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 13, 8), int32] */, dtype="bool") /* ty=Tensor[(14, 13, 8), bool] */;
    %904 = shape_of(%var_4567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %905 = cast(%var_4567, dtype="bool") /* ty=Tensor[(14, 13, 8), bool] */;
    %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%905, %906) /* ty=Tensor[(14, 13, 8), bool] */
  };
  %907(%var_4585) /* ty=Tensor[(14, 13, 8), bool] */
}

def @func_13731() -> Tensor[(1920), float32] {
  @func_12140() /* ty=Tensor[(1920), float32] */
}

def @func_20297() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %911 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %908 = @func_17263() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %909 = @func_14128() /* ty=Tensor[(11, 14, 10), float32] */;
    %910 = %908.0;
    (%909, %910)
  };
  %911() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_13991() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  @func_13989() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_4421(%var_4420: Tensor[(16, 2, 4), int8]) -> Tensor[(16, 2, 4), int8] {
  %916 = fn (%var_4411: Tensor[(16, 2, 4), int8]) -> Tensor[(16, 2, 4), int8] {
    %912 = cast(%var_4411, dtype="int8") /* ty=Tensor[(16, 2, 4), int8] */;
    %913 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(16, 2, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %914 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 2, 4), int8] */, dtype="int8") /* ty=Tensor[(16, 2, 4), int8] */;
    %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    left_shift(%914, %915) /* ty=Tensor[(16, 2, 4), int8] */
  };
  %916(%var_4420) /* ty=Tensor[(16, 2, 4), int8] */
}

def @func_10165(%var_10160: Tensor[(10, 8, 5), float64], %var_10161: Tensor[(10, 8, 5), float64]) -> Tensor[(10, 8, 5), float64] {
  %917 = cast(%var_10161, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %918 = shape_of(%var_10160, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_10160, dtype="float64") /* ty=Tensor[(10, 8, 5), float64] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%919, %920) /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_17264() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %925 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %921 = @func_13398() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %922 = @func_14453() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %923 = %921.0;
    %924 = %922.0;
    (%923, %924)
  };
  %925() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_14022() -> (Tensor[(9, 11, 4), float32], int64, Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  %926 = @func_11344() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %927 = cast(meta[relay.Constant][47] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %928 = reshape(%927, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %929 = @func_9825(%928) /* ty=(Tensor[(11, 14, 10), float64], int64, Tensor[(2112), bool]) */;
  %930 = %926.0;
  %931 = %929.1;
  %932 = @func_12577() /* ty=Tensor[(11, 14, 10), float32] */;
  (%930, %931, meta[relay.Constant][47] /* ty=Tensor[(2112), bool] */, %932)
}

def @func_19755() -> Tensor[(11, 14, 10), float32] {
  %933 = fn () -> Tensor[(11, 14, 10), float32] {
    @func_18125() /* ty=Tensor[(11, 14, 10), float32] */
  };
  %933() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_17308() -> Tensor[(11, 14, 10), float32] {
  %935 = fn () -> Tensor[(11, 14, 10), float32] {
    %934 = @func_16366() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) */;
    %934.0
  };
  %935() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_13352() -> (Tensor[(11, 14, 10), float64],) {
  %938 = fn () -> (Tensor[(11, 14, 10), float64],) {
    %936 = @func_12415() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
    %937 = %936.1;
    (%937,)
  };
  %938() /* ty=(Tensor[(11, 14, 10), float64],) */
}

def @func_10740() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */
}

def @func_15032(%var_15030: Tensor[(5, 10, 3), float32]) -> (Tensor[(5, 10, 3), float32],) {
  @func_15029(%var_15030) /* ty=(Tensor[(5, 10, 3), float32],) */
}

def @func_20877() -> Tensor[(11, 14, 10), float64] {
  %939 = fn () -> Tensor[(11, 14, 10), float64] {
    @func_18677() /* ty=Tensor[(11, 14, 10), float64] */
  };
  %939() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_8913() -> (Tensor[(11, 14, 10), float32],) {
  %940 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %941 = %940.0;
  (%941,)
}

def @func_1345(%var_1309: Tensor[(10, 5, 5), int16]) -> (Tensor[(10, 5, 5), int16],) {
  %942 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 5, 5), int16] */, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %943 = shape_of(%var_1309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%var_1309, dtype="int16") /* ty=Tensor[(10, 5, 5), int16] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %946 = right_shift(%944, %945) /* ty=Tensor[(10, 5, 5), int16] */;
  (%946,)
}

def @func_1348(%var_1346: Tensor[(10, 5, 5), int16]) -> (Tensor[(10, 5, 5), int16],) {
  @func_1345(%var_1346) /* ty=(Tensor[(10, 5, 5), int16],) */
}

def @func_12117() -> (Tensor[(400), float64], float32, Tensor[(1920), float32]) {
  %947 = @func_11918() /* ty=(Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %948 = %947.0;
  %949 = @func_9002() /* ty=float32 */;
  %950 = @func_7887() /* ty=Tensor[(1920), float32] */;
  (%948, %949, %950)
}

def @func_7060() -> Tensor[(1920), float32] {
  %951 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %951.0
}

def @func_18759() -> Tensor[(11, 14, 10), float32] {
  %952 = @func_18640() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %952.0
}

def @func_10886() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) {
  %965 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) {
    %953 = @func_10817() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %954 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
    %955 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
    %956 = cast(meta[relay.Constant][49] /* ty=Tensor[(200, 2), float64] */, dtype="float64") /* ty=Tensor[(200, 2), float64] */;
    %957 = cast(meta[relay.Constant][49] /* ty=Tensor[(200, 2), float64] */, dtype="float64") /* ty=Tensor[(200, 2), float64] */;
    %958 = reshape(%956, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %959 = reshape(%957, newshape=[10, 8, 5]) /* ty=Tensor[(10, 8, 5), float64] */;
    %960 = %953.1;
    %961 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
    %962 = %954.3;
    %963 = %955.0;
    %964 = @func_10165(%958, %959) /* ty=Tensor[(10, 8, 5), float64] */;
    (%960, %961, %962, %963, %964, meta[relay.Constant][49] /* ty=Tensor[(200, 2), float64] */)
  };
  %965() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */
}

def @func_16580() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %966 = @func_11313() /* ty=(Tensor[(1920), float32],) */;
  %967 = @func_15500() /* ty=Tensor[(11, 14, 10), float32] */;
  %968 = %966.0;
  (%967, %968)
}

def @func_15502() -> Tensor[(11, 14, 10), float32] {
  @func_15500() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_13521() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_3649(%var_3647: Tensor[(9, 11, 4), float32], %var_3648: Tensor[(9, 11, 4), float32]) -> (Tensor[(9, 11, 4), float32],) {
  @func_3645(%var_3647, %var_3648) /* ty=(Tensor[(9, 11, 4), float32],) */
}

def @func_13815() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %973 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %969 = @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */;
    %970 = @func_13228() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64]) */;
    %971 = %969.1;
    %972 = %970.1;
    (%971, %972)
  };
  %973() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_20233() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float32]) {
  %974 = @func_14760() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %975 = @func_17358() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %976 = @func_18611() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) */;
  %977 = %976.1;
  %978 = cast(%977, dtype="float32") /* ty=Tensor[(10, 8, 5), float32] */;
  %979 = %974.0;
  %980 = %975.0;
  %981 = @func_10453() /* ty=Tensor[(1920), float32] */;
  %982 = @func_16742() /* ty=Tensor[(11, 14, 10), float64] */;
  %983 = cosh(%978) /* ty=Tensor[(10, 8, 5), float32] */;
  (%979, %980, %981, %982, %983)
}

def @func_17699() -> (Tensor[(9, 11, 4), float64],) {
  %984 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %985 = %984.0;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(9, 11, 4), float64] */;
  %987 = asin(%986) /* ty=Tensor[(9, 11, 4), float64] */;
  (%987,)
}

def @func_18173() -> (Tensor[(11, 14, 10), float32], Tensor[(16), float32]) {
  @func_18171() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(16), float32]) */
}

def @func_12578() -> Tensor[(11, 14, 10), float32] {
  %989 = fn () -> Tensor[(11, 14, 10), float32] {
    %988 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %988.0
  };
  %989() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_16205() -> Tensor[(11, 14, 10), float64] {
  %990 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %990.1
}

def @func_19795() -> (Tensor[(110), float64],) {
  %992 = fn () -> (Tensor[(110), float64],) {
    %991 = @func_15522() /* ty=Tensor[(110), float64] */;
    (%991,)
  };
  %992() /* ty=(Tensor[(110), float64],) */
}

def @func_20627() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1, 112), float32], Tensor[(1920), float32], Tensor[(1, 33), float64]) {
  %1002 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1, 112), float32], Tensor[(1920), float32], Tensor[(1, 33), float64]) {
    %993 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 112), float32] */, dtype="float32") /* ty=Tensor[(1, 112), float32] */;
    %994 = reshape(%993, newshape=[112, 1]) /* ty=Tensor[(112, 1), float32] */;
    %995 = @func_11449(%994) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 1, 8), float32], Tensor[(112, 1), float32]) */;
    %996 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 33), float64] */, dtype="float64") /* ty=Tensor[(1, 33), float64] */;
    %997 = reshape(%996, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %998 = @func_18577(%997) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) */;
    %999 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
    %1000 = %995.0;
    %1001 = %998.5;
    (%999, %1000, meta[relay.Constant][50] /* ty=Tensor[(1, 112), float32] */, %1001, meta[relay.Constant][51] /* ty=Tensor[(1, 33), float64] */)
  };
  %1002() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1, 112), float32], Tensor[(1920), float32], Tensor[(1, 33), float64]) */
}

def @func_20532() -> (Tensor[(1920), float32],) {
  %1003 = @func_13110() /* ty=Tensor[(1920), float32] */;
  (%1003,)
}

def @func_13786() -> (Tensor[(11, 14, 10), float32],) {
  %1004 = @func_10572() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1005 = %1004.0;
  (%1005,)
}

def @func_13519() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %1006 = @func_7538() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) */;
  %1007 = @func_12073() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %1008 = %1006.1;
  %1009 = %1007.0;
  (%1008, %1009)
}

def @func_14760() -> (Tensor[(11, 14, 10), float32],) {
  %1010 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1010,)
}

def @func_16162() -> (float32,) {
  %1012 = fn () -> (float32,) {
    %1011 = @func_12266() /* ty=float32 */;
    (%1011,)
  };
  %1012() /* ty=(float32,) */
}

def @func_18678() -> Tensor[(11, 14, 10), float64] {
  %1014 = fn () -> Tensor[(11, 14, 10), float64] {
    %1013 = @func_17333() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
    %1013.0
  };
  %1014() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_13421() -> (Tensor[(11, 14, 10), float32],) {
  %1015 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1015,)
}

def @func_18579(%var_18578: Tensor[(33), float64]) -> (Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) {
  %1027 = fn (%var_18536: Tensor[(33), float64]) -> (Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) {
    %1016 = @func_16833() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1017 = cast(meta[relay.Constant][52] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
    %1018 = cast(%var_18536, dtype="float64") /* ty=Tensor[(33), float64] */;
    %1019 = cast(meta[relay.Constant][53] /* ty=Tensor[(250), int16] */, dtype="int16") /* ty=Tensor[(250), int16] */;
    %1020 = reshape(%1017, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
    %1021 = reshape(%1018, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
    %1022 = reshape(%1019, newshape=[250]) /* ty=Tensor[(250), int16] */;
    %1023 = @func_2152(%1020, %1021, %1022) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
    %1024 = %1016.0;
    %1025 = %1023.0;
    %1026 = @func_13110() /* ty=Tensor[(1920), float32] */;
    (%1024, %1025, meta[relay.Constant][52] /* ty=Tensor[(3), float64] */, %var_18536, meta[relay.Constant][53] /* ty=Tensor[(250), int16] */, %1026)
  };
  %1027(%var_18578) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) */
}

def @func_21403() -> (Tensor[(1920), float32],) {
  %1030 = fn () -> (Tensor[(1920), float32],) {
    %1028 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
    %1029 = %1028.3;
    (%1029,)
  };
  %1030() /* ty=(Tensor[(1920), float32],) */
}

def @func_7752() -> Tensor[(11, 14, 10), float64] {
  %1031 = fn () -> Tensor[(11, 14, 10), float64] {
    @func_7714() /* ty=Tensor[(11, 14, 10), float64] */
  };
  %1031() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_10399() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %1032 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1033 = %1032.0;
  %1034 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  %1035 = @func_7868() /* ty=Tensor[(1920), float32] */;
  (%1033, %1034, %1035)
}

def @func_18613() -> (Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) {
  @func_18611() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) */
}

def @func_10485() -> (Tensor[(110), float64], Tensor[(11, 14, 10), float32]) {
  %1040 = fn () -> (Tensor[(110), float64], Tensor[(11, 14, 10), float32]) {
    %1036 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
    %1037 = @func_10047() /* ty=(Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) */;
    %1038 = %1036.1;
    %1039 = %1037.2;
    (%1038, %1039)
  };
  %1040() /* ty=(Tensor[(110), float64], Tensor[(11, 14, 10), float32]) */
}

def @func_18611() -> (Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float64]) {
  %1041 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %1042 = @func_10885() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */;
  %1043 = %1041.0;
  %1044 = %1042.4;
  (%1043, %1044)
}

def @func_14208(%var_14206: Tensor[(1694, 14), uint16], %var_14207: Tensor[(1694, 14), float32]) -> (Tensor[(1694, 14), bool],) {
  @func_14204(%var_14206, %var_14207) /* ty=(Tensor[(1694, 14), bool],) */
}

def @func_7827() -> (Tensor[(11, 14, 10), float64],) {
  @func_7825() /* ty=(Tensor[(11, 14, 10), float64],) */
}

def @func_20348() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  @func_20346() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_10817() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1045 = @func_10047() /* ty=(Tensor[(2112), float32], Tensor[(198, 2), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), uint64]) */;
  %1046 = @func_8863() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %1047 = %1045.2;
  %1048 = %1046.1;
  (%1047, %1048)
}

def @func_10291() -> (Tensor[(1920), float32],) {
  @func_10289() /* ty=(Tensor[(1920), float32],) */
}

def @func_21126() -> Tensor[(968, 1920), float64] {
  %1049 = @func_20931() /* ty=(Tensor[(8, 11, 11), float32], Tensor[(968, 1920), uint64]) */;
  %1050 = %1049.1;
  %1051 = cast(%1050, dtype="float64") /* ty=Tensor[(968, 1920), float64] */;
  sinh(%1051) /* ty=Tensor[(968, 1920), float64] */
}

def @func_14204(%var_14164: Tensor[(1694, 14), uint16], %var_14174: Tensor[(1694, 14), float32]) -> (Tensor[(1694, 14), bool],) {
  %1052 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1053 = %1052.2;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(1694, 1), float32] */;
  %1055 = cast(%var_14164, dtype="float32") /* ty=Tensor[(1694, 14), float32] */;
  %1056 = power(%1054, %1055) /* ty=Tensor[(1694, 14), float32] */;
  %1057 = cast(%var_14174, dtype="uint64") /* ty=Tensor[(1694, 14), uint64] */;
  %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1059 = cast(%1056, dtype="uint64") /* ty=Tensor[(1694, 14), uint64] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1061 = maximum(%1059, %1060) /* ty=Tensor[(1694, 14), uint64] */;
  %1062 = cast(%var_14174, dtype="bool") /* ty=Tensor[(1694, 14), bool] */;
  %1063 = shape_of(%1061, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1064 = cast(%1061, dtype="bool") /* ty=Tensor[(1694, 14), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1066 = logical_and(%1064, %1065) /* ty=Tensor[(1694, 14), bool] */;
  (%1066,)
}

def @func_17513(%var_17464: Tensor[(4, 4), float32], %var_17485: Tensor[(280), uint8]) -> (Tensor[(11, 14, 10), float32], Tensor[(2, 1, 8), float32], Tensor[(4, 4), float32], Tensor[(1920), float32], int64, Tensor[(4, 14, 5), bool]) {
  %1067 = @func_7194() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(396), float32], Tensor[(396), float32]) */;
  %1068 = cast(%var_17464, dtype="float32") /* ty=Tensor[(4, 4), float32] */;
  %1069 = reshape(%1068, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
  %1070 = @func_12251() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
  %1071 = cast(%var_17485, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1072 = cast(%var_17485, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1073 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1074 = reshape(%1071, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %1075 = reshape(%1072, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %1076 = reshape(%1073, newshape=[]) /* ty=int64 */;
  %1077 = @func_4330(%1074, %1075, %1076) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
  %1078 = %1077.0;
  %1079 = cast(%var_17485, dtype="bool") /* ty=Tensor[(280), bool] */;
  %1080 = shape_of(%1078, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%1078, dtype="bool") /* ty=Tensor[(4, 14, 5), bool] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1083 = %1067.0;
  %1084 = @func_1860(%1069) /* ty=Tensor[(2, 1, 8), float32] */;
  %1085 = %1070.1;
  %1086 = less(%1081, %1082) /* ty=Tensor[(4, 14, 5), bool] */;
  (%1083, %1084, %var_17464, %1085, -5 /* ty=int64 */, %1086)
}

def @func_14024() -> (Tensor[(9, 11, 4), float32], int64, Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  @func_14022() /* ty=(Tensor[(9, 11, 4), float32], int64, Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */
}

def @func_10440() -> Tensor[(11, 14, 10), float64] {
  %1090 = fn () -> Tensor[(11, 14, 10), float64] {
    %1087 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1088 = %1087.0;
    %1089 = cast(%1088, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
    log(%1089) /* ty=Tensor[(11, 14, 10), float64] */
  };
  %1090() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_21562() -> Tensor[(11, 14, 10), float32] {
  @func_21560() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_15441() -> (Tensor[(1920), float32], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(48, 4), float64], Tensor[(11, 14, 10), float64], Tensor[(44, 48), float64], Tensor[(11, 14, 10), float64]) {
  %1091 = @func_8967() /* ty=(Tensor[(1920), float32], Tensor[(110), float64], Tensor[(1540), float32]) */;
  %1092 = cast(meta[relay.Constant][55] /* ty=Tensor[(48, 4), float64] */, dtype="float64") /* ty=Tensor[(48, 4), float64] */;
  %1093 = cast(meta[relay.Constant][54] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1094 = reshape(%1092, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %1095 = reshape(%1093, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
  %1096 = @func_11624(%1094, %1095) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */;
  %1097 = cast(meta[relay.Constant][54] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %1098 = reshape(%1097, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
  %1099 = @func_8624(%1098) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
  %1100 = %1099.2;
  %1101 = cast(%1100, dtype="float64") /* ty=Tensor[(44, 48), float64] */;
  %1102 = %1091.0;
  %1103 = %1096.3;
  %1104 = @func_14041() /* ty=Tensor[(11, 14, 10), float64] */;
  %1105 = sin(%1101) /* ty=Tensor[(44, 48), float64] */;
  %1106 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1102, meta[relay.Constant][54] /* ty=Tensor[(2112), bool] */, %1103, meta[relay.Constant][55] /* ty=Tensor[(48, 4), float64] */, %1104, %1105, %1106)
}

def @func_21450(%var_21426: Tensor[(9, 11, 3), float64]) -> (Tensor[(9, 11, 3), float64],) {
  %1107 = cast(%var_21426, dtype="float64") /* ty=Tensor[(9, 11, 3), float64] */;
  %1108 = cosh(%1107) /* ty=Tensor[(9, 11, 3), float64] */;
  (%1108,)
}

def @func_19070() -> Tensor[(1920), float32] {
  @func_19068() /* ty=Tensor[(1920), float32] */
}

def @func_18127() -> Tensor[(11, 14, 10), float32] {
  @func_18125() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_7784() -> (Tensor[(11, 14, 10), float32], int64, Tensor[(280, 1), uint8], int64, Tensor[(11, 14, 10), float32]) {
  %1121 = fn () -> (Tensor[(11, 14, 10), float32], int64, Tensor[(280, 1), uint8], int64, Tensor[(11, 14, 10), float32]) {
    %1109 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
    %1110 = cast(meta[relay.Constant][56] /* ty=Tensor[(280, 1), uint8] */, dtype="uint8") /* ty=Tensor[(280, 1), uint8] */;
    %1111 = cast(meta[relay.Constant][56] /* ty=Tensor[(280, 1), uint8] */, dtype="uint8") /* ty=Tensor[(280, 1), uint8] */;
    %1112 = cast(-8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1113 = reshape(%1110, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
    %1114 = reshape(%1111, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
    %1115 = reshape(%1112, newshape=[]) /* ty=int64 */;
    %1116 = @func_4330(%1113, %1114, %1115) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
    %1117 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
    %1118 = %1109.0;
    %1119 = %1116.2;
    %1120 = %1117.0;
    (%1118, %1119, meta[relay.Constant][56] /* ty=Tensor[(280, 1), uint8] */, -8 /* ty=int64 */, %1120)
  };
  %1121() /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(280, 1), uint8], int64, Tensor[(11, 14, 10), float32]) */
}

def @func_17066() -> Tensor[(1920), float32] {
  %1122 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %1122.1
}

def @func_11550(%var_11549: Tensor[(128), int8]) -> (Tensor[(11, 14, 10), float64], Tensor[(16, 2, 4), int8], Tensor[(128), int8]) {
  %1127 = fn (%var_11532: Tensor[(128), int8]) -> (Tensor[(11, 14, 10), float64], Tensor[(16, 2, 4), int8], Tensor[(128), int8]) {
    %1123 = cast(%var_11532, dtype="int8") /* ty=Tensor[(128), int8] */;
    %1124 = reshape(%1123, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), int8] */;
    %1125 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
    %1126 = @func_4419(%1124) /* ty=Tensor[(16, 2, 4), int8] */;
    (%1125, %1126, %var_11532)
  };
  %1127(%var_11549) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(16, 2, 4), int8], Tensor[(128), int8]) */
}

def @func_6965() -> Tensor[(11, 14, 10), float32] {
  %1129 = fn () -> Tensor[(11, 14, 10), float32] {
    %1128 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1128.0
  };
  %1129() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_6913() -> Tensor[(11, 14, 10), float32] {
  %1130 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1130.0
}

def @func_12508() -> (Tensor[(11, 14, 10), float32], Tensor[(110), float64]) {
  @func_12506() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(110), float64]) */
}

def @func_12978(%var_12976: Tensor[(1456), int32]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) {
  @func_12975(%var_12976) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 13, 8), bool], Tensor[(1456), int32]) */
}

def @func_20235() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float32]) {
  @func_20233() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float32]) */
}

def @func_21345() -> (Tensor[(11, 14, 10), float32],) {
  %1131 = @func_14453() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1132 = %1131.0;
  (%1132,)
}

def @func_7880() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1133 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1134 = %1133.0;
  %1135 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1134, %1135)
}

def @func_18005() -> (Tensor[(11, 14, 10), float32],) {
  %1138 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %1136 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1137 = %1136.1;
    (%1137,)
  };
  %1138() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_12119() -> (Tensor[(400), float64], float32, Tensor[(1920), float32]) {
  @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */
}

def @func_17701() -> (Tensor[(9, 11, 4), float64],) {
  @func_17699() /* ty=(Tensor[(9, 11, 4), float64],) */
}

def @func_15029(%var_15000: Tensor[(5, 10, 3), float32]) -> (Tensor[(5, 10, 3), float32],) {
  %1139 = cast(%var_15000, dtype="float32") /* ty=Tensor[(5, 10, 3), float32] */;
  %1140 = cos(%1139) /* ty=Tensor[(5, 10, 3), float32] */;
  (%1140,)
}

def @func_19239(%var_19226: Tensor[(8, 11, 11), float32]) -> (Tensor[(8, 11, 11), float32],) {
  %1141 = cast(%var_19226, dtype="float32") /* ty=Tensor[(8, 11, 11), float32] */;
  %1142 = acos(%1141) /* ty=Tensor[(8, 11, 11), float32] */;
  (%1142,)
}

def @func_19242(%var_19240: Tensor[(8, 11, 11), float32]) -> (Tensor[(8, 11, 11), float32],) {
  @func_19239(%var_19240) /* ty=(Tensor[(8, 11, 11), float32],) */
}

def @func_7714() -> Tensor[(11, 14, 10), float64] {
  %1143 = @func_6964() /* ty=Tensor[(11, 14, 10), float32] */;
  %1144 = cast(%1143, dtype="float64") /* ty=Tensor[(11, 14, 10), float64] */;
  sigmoid(%1144) /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_16911() -> (Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) {
  %1145 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %1146 = @func_10184() /* ty=(Tensor[(9, 11, 4), float32],) */;
  %1147 = %1145.0;
  %1148 = %1146.0;
  (%1147, %1148)
}

def @func_8485() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %1152 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
    %1149 = @func_7783() /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(280, 1), uint8], int64, Tensor[(11, 14, 10), float32]) */;
    %1150 = %1149.0;
    %1151 = @func_7868() /* ty=Tensor[(1920), float32] */;
    (%1150, %1151)
  };
  %1152() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */
}

def @func_6445() -> (Tensor[(11, 14, 10), float32],) {
  %1153 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 10), float32] */;
  %1154 = erf(%1153) /* ty=Tensor[(11, 14, 10), float32] */;
  (%1154,)
}

def @func_7492() -> (Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) {
  %1163 = fn () -> (Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) {
    %1155 = @func_6445() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1156 = cast(meta[relay.Constant][58] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %1157 = cast(meta[relay.Constant][58] /* ty=Tensor[(2112), bool] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %1158 = reshape(%1156, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
    %1159 = reshape(%1157, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
    %1160 = @func_4458(%1158, %1159) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
    %1161 = %1155.0;
    %1162 = %1160.2;
    (%1161, %1162, meta[relay.Constant][58] /* ty=Tensor[(2112), bool] */)
  };
  %1163() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */
}

def @func_11627(%var_11625: Tensor[(6, 2, 16), float64], %var_11626: Tensor[(2112), bool]) -> (Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  %1174 = fn (%var_11598: Tensor[(6, 2, 16), float64], %var_11602: Tensor[(2112), bool]) -> (Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
    %1164 = cast(%var_11598, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
    %1165 = cast(%var_11602, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %1166 = cast(%var_11602, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %1167 = reshape(%1165, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
    %1168 = reshape(%1166, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), bool] */;
    %1169 = @func_4458(%1167, %1168) /* ty=(Tensor[(16, 11, 12), bool], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32], int64, Tensor[(280), uint8]) */;
    %1170 = @func_9537() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1171 = log10(%1164) /* ty=Tensor[(6, 2, 16), float64] */;
    %1172 = %1169.5;
    %1173 = %1170.1;
    (%1171, %1172, %var_11602, %1173)
  };
  %1174(%var_11625, %var_11626) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */
}

def @func_12999() -> (Tensor[(1920), float32],) {
  %1177 = fn () -> (Tensor[(1920), float32],) {
    %1175 = @func_10945() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */;
    %1176 = %1175.0;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(1920), float32],) */
}

def @func_12764(%var_12762: Tensor[(14, 5, 1), bool], %var_12763: Tensor[(14, 5, 11), bool]) -> (Tensor[(14, 5, 11), float64], Tensor[(14, 5, 11), float64]) {
  %1185 = fn (%var_12719: Tensor[(14, 5, 1), bool], %var_12720: Tensor[(14, 5, 11), bool]) -> (Tensor[(14, 5, 11), float64], Tensor[(14, 5, 11), float64]) {
    %1178 = cast(%var_12719, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
    %1179 = cast(%var_12720, dtype="bool") /* ty=Tensor[(14, 5, 11), bool] */;
    %1180 = logical_and(%1178, %1179) /* ty=Tensor[(14, 5, 11), bool] */;
    %1181 = cast(%1180, dtype="float64") /* ty=Tensor[(14, 5, 11), float64] */;
    %1182 = cast(%var_12720, dtype="float64") /* ty=Tensor[(14, 5, 11), float64] */;
    %1183 = asin(%1181) /* ty=Tensor[(14, 5, 11), float64] */;
    %1184 = tan(%1182) /* ty=Tensor[(14, 5, 11), float64] */;
    (%1183, %1184)
  };
  %1185(%var_12762, %var_12763) /* ty=(Tensor[(14, 5, 11), float64], Tensor[(14, 5, 11), float64]) */
}

def @func_15940(%var_15939: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(96, 2), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
  %1195 = fn (%var_15910: Tensor[(2112), bool]) -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(96, 2), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) {
    %1186 = cast(meta[relay.Constant][59] /* ty=Tensor[(96, 2), float64] */, dtype="float64") /* ty=Tensor[(96, 2), float64] */;
    %1187 = cast(%var_15910, dtype="bool") /* ty=Tensor[(2112), bool] */;
    %1188 = reshape(%1186, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
    %1189 = reshape(%1187, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %1190 = @func_11624(%1188, %1189) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(280), uint8], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */;
    %1191 = @func_13814() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1192 = @func_15500() /* ty=Tensor[(11, 14, 10), float32] */;
    %1193 = %1190.3;
    %1194 = %1191.1;
    (%1192, %1193, meta[relay.Constant][59] /* ty=Tensor[(96, 2), float64] */, %var_15910, %1194)
  };
  %1195(%var_15939) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(96, 2), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32]) */
}

def @func_9480() -> Tensor[(11, 14, 10), float32] {
  %1197 = fn () -> Tensor[(11, 14, 10), float32] {
    %1196 = @func_7968() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), float32], Tensor[(1920), float32]) */;
    %1196.0
  };
  %1197() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_11055() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_16913() -> (Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) {
  @func_16911() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */
}

def @func_17204() -> (Tensor[(11, 14, 10), float64],) {
  %1198 = @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %1199 = %1198.0;
  (%1199,)
}

def @func_20723() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %1200 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %1201 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1202 = %1200.1;
  %1203 = %1201.0;
  (%1202, %1203)
}

def @func_17206() -> (Tensor[(11, 14, 10), float64],) {
  @func_17204() /* ty=(Tensor[(11, 14, 10), float64],) */
}

def @func_12439() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1204 = @func_10945() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */;
  %1205 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
  %1206 = %1204.1;
  (%1205, %1206)
}

def @func_20828() -> (Tensor[(11, 14, 10), float32],) {
  %1209 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %1207 = @func_20233() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(10, 8, 5), float32]) */;
    %1208 = %1207.0;
    (%1208,)
  };
  %1209() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_11571() -> (Tensor[(1920), float32],) {
  %1212 = fn () -> (Tensor[(1920), float32],) {
    %1210 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
    %1211 = %1210.3;
    (%1211,)
  };
  %1212() /* ty=(Tensor[(1920), float32],) */
}

def @func_13398() -> (Tensor[(11, 14, 10), float32],) {
  %1213 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1214 = %1213.0;
  (%1214,)
}

def @func_16835() -> (Tensor[(11, 14, 10), float32],) {
  @func_16833() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_3375(%var_3373: Tensor[(6, 2, 6), float64]) -> Tensor[(6, 2, 6), float64] {
  @func_3372(%var_3373) /* ty=Tensor[(6, 2, 6), float64] */
}

def @func_7538() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32]) {
  %1215 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1216 = @func_6873() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1217 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
  %1218 = %1215.0;
  %1219 = %1216.0;
  %1220 = %1217.0;
  (%1218, %1219, %1220)
}

def @func_18942(%var_18940: float64) -> Tensor[(14, 1, 10), float64] {
  @func_18939(%var_18940) /* ty=Tensor[(14, 1, 10), float64] */
}

def @func_16228(%var_16226: Tensor[(3, 13, 14), int8], %var_16227: Tensor[(3, 13, 14), int8]) -> (Tensor[(3, 13, 14), int8],) {
  @func_16224(%var_16226, %var_16227) /* ty=(Tensor[(3, 13, 14), int8],) */
}

def @func_20725() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  @func_20723() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */
}

def @func_17183() -> (float32, Tensor[(14, 1, 8), float32], Tensor[(112), float32]) {
  %1225 = fn () -> (float32, Tensor[(14, 1, 8), float32], Tensor[(112), float32]) {
    %1221 = cast(meta[relay.Constant][60] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %1222 = reshape(%1221, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), float32] */;
    %1223 = @func_12266() /* ty=float32 */;
    %1224 = @func_10689(%1222) /* ty=Tensor[(14, 1, 8), float32] */;
    (%1223, %1224, meta[relay.Constant][60] /* ty=Tensor[(112), float32] */)
  };
  %1225() /* ty=(float32, Tensor[(14, 1, 8), float32], Tensor[(112), float32]) */
}

def @func_17971() -> Tensor[(10, 8, 5), float64] {
  %1227 = fn () -> Tensor[(10, 8, 5), float64] {
    %1226 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
    %1226.1
  };
  %1227() /* ty=Tensor[(10, 8, 5), float64] */
}

def @func_7472() -> (Tensor[(1920), float32],) {
  %1228 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
  %1229 = %1228.0;
  (%1229,)
}

def @func_11515(%var_11513: int64, %var_11514: Tensor[(250), int16]) -> (Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), bool], Tensor[(15, 5, 1), int64], int64, Tensor[(15, 5), int64], Tensor[(250), int16]) {
  %1251 = fn (%var_11507: int64, %var_11509: Tensor[(250), int16]) -> (Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), bool], Tensor[(15, 5, 1), int64], int64, Tensor[(15, 5), int64], Tensor[(250), int16]) {
    %1230 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
    %1231 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
    %1232 = @func_8484() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
    %1233 = %1232.1;
    %1234 = cast(meta[relay.Constant][61] /* ty=Tensor[(1920), float32] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %1235 = shape_of(%1233, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1236 = cast(%1233, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %1237 = dyn.reshape(%1234, %1235, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1238 = cast(%var_11507, dtype="int64") /* ty=int64 */;
    %1239 = cast(meta[relay.Constant][62] /* ty=Tensor[(15, 5), int64] */, dtype="int64") /* ty=Tensor[(15, 5), int64] */;
    %1240 = cast(%var_11509, dtype="int16") /* ty=Tensor[(250), int16] */;
    %1241 = reshape(%1238, newshape=[]) /* ty=int64 */;
    %1242 = reshape(%1239, newshape=[15, 5, 1]) /* ty=Tensor[(15, 5, 1), int64] */;
    %1243 = reshape(%1240, newshape=[125, 2]) /* ty=Tensor[(125, 2), int16] */;
    %1244 = @func_1462(%1241, %1242, %1243) /* ty=(Tensor[(15, 5, 1), int64], Tensor[(10, 5, 5), int16], Tensor[(10, 5, 5), uint32]) */;
    %1245 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
    %1246 = %1230.3;
    %1247 = %1231.0;
    %1248 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
    %1249 = less(%1236, %1237) /* ty=Tensor[(1920), bool] */;
    %1250 = %1244.0;
    (%1245, %1246, %1247, %1248, %1249, %1250, %var_11507, meta[relay.Constant][62] /* ty=Tensor[(15, 5), int64] */, %var_11509)
  };
  %1251(%var_11513, %var_11514) /* ty=(Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), bool], Tensor[(15, 5, 1), int64], int64, Tensor[(15, 5), int64], Tensor[(250), int16]) */
}

def @func_8459() -> (Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) {
  %1256 = fn () -> (Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) {
    %1252 = cast(meta[relay.Constant][63] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %1253 = reshape(%1252, newshape=[2, 1, 8]) /* ty=Tensor[(2, 1, 8), float32] */;
    %1254 = @func_7060() /* ty=Tensor[(1920), float32] */;
    %1255 = @func_1860(%1253) /* ty=Tensor[(2, 1, 8), float32] */;
    (%1254, %1255, meta[relay.Constant][63] /* ty=Tensor[(16), float32] */)
  };
  %1256() /* ty=(Tensor[(1920), float32], Tensor[(2, 1, 8), float32], Tensor[(16), float32]) */
}

def @func_15606() -> Tensor[(1920), float32] {
  @func_12140() /* ty=Tensor[(1920), float32] */
}

def @func_12441() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_12074() -> (Tensor[(11, 14, 10), float64],) {
  %1258 = fn () -> (Tensor[(11, 14, 10), float64],) {
    %1257 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
    (%1257,)
  };
  %1258() /* ty=(Tensor[(11, 14, 10), float64],) */
}

def @func_17758(%var_17756: Tensor[(280), uint8], %var_17757: int64) -> (Tensor[(75), int64], Tensor[(280), uint8], int64, Tensor[(10, ?, 11), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) {
  @func_17754(%var_17756, %var_17757) /* ty=(Tensor[(75), int64], Tensor[(280), uint8], int64, Tensor[(10, ?, 11), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_18967(%var_18965: Tensor[(2, 14, 6), int32], %var_18966: Tensor[(2, 14, 6), int32]) -> (Tensor[(2, 14, 6), bool],) {
  %1264 = fn (%var_18959: Tensor[(2, 14, 6), int32], %var_18960: Tensor[(2, 14, 6), int32]) -> (Tensor[(2, 14, 6), bool],) {
    %1259 = cast(%var_18960, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
    %1260 = shape_of(%var_18959, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1261 = cast(%var_18959, dtype="bool") /* ty=Tensor[(2, 14, 6), bool] */;
    %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1263 = less(%1261, %1262) /* ty=Tensor[(2, 14, 6), bool] */;
    (%1263,)
  };
  %1264(%var_18965, %var_18966) /* ty=(Tensor[(2, 14, 6), bool],) */
}

def @func_21347() -> (Tensor[(11, 14, 10), float32],) {
  @func_21345() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_21085() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  %1269 = fn () -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
    %1265 = @func_18340() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
    %1266 = @func_10885() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(200, 2), float64]) */;
    %1267 = %1265.0;
    %1268 = %1266.0;
    (%1267, %1268)
  };
  %1269() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */
}

def @func_14042() -> Tensor[(11, 14, 10), float64] {
  %1270 = fn () -> Tensor[(11, 14, 10), float64] {
    @func_10439() /* ty=Tensor[(11, 14, 10), float64] */
  };
  %1270() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_18125() -> Tensor[(11, 14, 10), float32] {
  %1271 = @func_12439() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
  %1271.0
}

def @func_10692(%var_10690: Tensor[(14, 1, 8), float32]) -> Tensor[(14, 1, 8), float32] {
  @func_10689(%var_10690) /* ty=Tensor[(14, 1, 8), float32] */
}

def @func_15282() -> Tensor[(11, 14, 10), float32] {
  %1273 = fn () -> Tensor[(11, 14, 10), float32] {
    %1272 = @func_14237() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1272.0
  };
  %1273() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_17358() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1274 = @func_11244() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1275 = @func_12797() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1276 = %1274.0;
  %1277 = %1275.0;
  (%1276, %1277)
}

def @func_19608() -> (Tensor[(11, 14, 10), float32],) {
  %1280 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %1278 = @func_18640() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1279 = %1278.0;
    (%1279,)
  };
  %1280() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_14715() -> Tensor[(11, 14, 10), float64] {
  %1281 = @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %1281.0
}

def @func_16828() -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
  %1285 = fn () -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) {
    %1282 = @func_14680() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
    %1283 = %1282.2;
    %1284 = @func_15500() /* ty=Tensor[(11, 14, 10), float32] */;
    (%1283, %1284)
  };
  %1285() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_19552() -> (Tensor[(1920), float32],) {
  @func_19550() /* ty=(Tensor[(1920), float32],) */
}

def @func_17335() -> (Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) {
  @func_17333() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */
}

def @func_11290() -> (Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) {
  @func_11288() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) */
}

def @func_16860() -> (Tensor[(11, 14, 10), float32],) {
  @func_16858() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_19808() -> Tensor[(11, 14, 10), float32] {
  @func_19806() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_20389(%var_20372: Tensor[(168), int32]) -> (Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(2, 14, 6), bool], Tensor[(168), int32], Tensor[(11, 14, 10), float32]) {
  %1286 = cast(%var_20372, dtype="int32") /* ty=Tensor[(168), int32] */;
  %1287 = cast(%var_20372, dtype="int32") /* ty=Tensor[(168), int32] */;
  %1288 = reshape(%1286, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), int32] */;
  %1289 = reshape(%1287, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), int32] */;
  %1290 = @func_18964(%1288, %1289) /* ty=(Tensor[(2, 14, 6), bool],) */;
  %1291 = @func_10738() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32]) */;
  %1292 = @func_17066() /* ty=Tensor[(1920), float32] */;
  %1293 = @func_17307() /* ty=Tensor[(11, 14, 10), float32] */;
  %1294 = %1290.0;
  %1295 = %1291.1;
  (%1292, %1293, %1294, %var_20372, %1295)
}

def @func_19028() -> (Tensor[(16), float32],) {
  %1297 = fn () -> (Tensor[(16), float32],) {
    %1296 = @func_13086() /* ty=Tensor[(16), float32] */;
    (%1296,)
  };
  %1297() /* ty=(Tensor[(16), float32],) */
}

def @func_12416() -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %1301 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
    %1298 = @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1299 = %1298.0;
    %1300 = @func_9936() /* ty=Tensor[(11, 14, 10), float64] */;
    (%1299, %1300)
  };
  %1301() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */
}

def @func_13423() -> (Tensor[(11, 14, 10), float32],) {
  @func_13421() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_17754(%var_17739: Tensor[(280), uint8], %var_17740: int64) -> (Tensor[(75), int64], Tensor[(280), uint8], int64, Tensor[(10, ?, 11), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float64]) {
  %1302 = cast(%var_17739, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1303 = cast(%var_17739, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1304 = cast(%var_17740, dtype="int64") /* ty=int64 */;
  %1305 = reshape(%1302, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %1306 = reshape(%1303, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint8] */;
  %1307 = reshape(%1304, newshape=[]) /* ty=int64 */;
  %1308 = @func_4330(%1305, %1306, %1307) /* ty=(Tensor[(4, 14, 5), float32], Tensor[(10, 5, 5), int16], int64, Tensor[(75), int64], Tensor[(125, 2), int16]) */;
  %1309 = @func_11288() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) */;
  %1310 = %1309.1;
  %1311 = cast(%1310, dtype="float64") /* ty=Tensor[(10, ?, 11), float64] */;
  %1312 = @func_14546() /* ty=(Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) */;
  %1313 = @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %1314 = %1308.3;
  %1315 = asinh(%1311) /* ty=Tensor[(10, ?, 11), float64] */;
  %1316 = %1312.0;
  %1317 = %1313.0;
  (%1314, %var_17739, %var_17740, %1315, %1316, %1317)
}

def @func_17251() -> (Tensor[(1920), float32],) {
  %1320 = fn () -> (Tensor[(1920), float32],) {
    %1318 = @func_8484() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) */;
    %1319 = %1318.1;
    (%1319,)
  };
  %1320() /* ty=(Tensor[(1920), float32],) */
}

def @func_7868() -> Tensor[(1920), float32] {
  @func_7060() /* ty=Tensor[(1920), float32] */
}

def @func_7002() -> (Tensor[(1920), float32],) {
  %1323 = fn () -> (Tensor[(1920), float32],) {
    %1321 = @func_6532() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(15, 8, 16), bool], float32, Tensor[(1920), float32]) */;
    %1322 = %1321.3;
    (%1322,)
  };
  %1323() /* ty=(Tensor[(1920), float32],) */
}

def @func_19649() -> (Tensor[(396), float32],) {
  @func_19647() /* ty=(Tensor[(396), float32],) */
}

def @func_12886() -> Tensor[(1920), float32] {
  %1324 = fn () -> Tensor[(1920), float32] {
    @func_7060() /* ty=Tensor[(1920), float32] */
  };
  %1324() /* ty=Tensor[(1920), float32] */
}

def @func_6873() -> (Tensor[(11, 14, 10), float32],) {
  %1325 = @func_6833() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1326 = %1325.0;
  (%1326,)
}

def @func_17592() -> (Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) {
  %1334 = fn () -> (Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) {
    %1327 = cast(meta[relay.Constant][64] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %1328 = cast(meta[relay.Constant][64] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %1329 = reshape(%1327, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
    %1330 = reshape(%1328, newshape=[9, 11, 4]) /* ty=Tensor[(9, 11, 4), float32] */;
    %1331 = @func_3645(%1329, %1330) /* ty=(Tensor[(9, 11, 4), float32],) */;
    %1332 = @func_12140() /* ty=Tensor[(1920), float32] */;
    %1333 = %1331.0;
    (%1332, %1333, meta[relay.Constant][64] /* ty=Tensor[(396), float32] */)
  };
  %1334() /* ty=(Tensor[(1920), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */
}

def @func_12054() -> (Tensor[(1920), float32],) {
  %1335 = @func_7472() /* ty=(Tensor[(1920), float32],) */;
  %1336 = %1335.0;
  (%1336,)
}

def @func_16670(%var_16669: Tensor[(8, 4, 2), float64]) -> (Tensor[(8, 4, 2), float64], float32, Tensor[(11, 14, 10), float32]) {
  %1343 = fn (%var_16640: Tensor[(8, 4, 2), float64]) -> (Tensor[(8, 4, 2), float64], float32, Tensor[(11, 14, 10), float32]) {
    %1337 = cast(%var_16640, dtype="float64") /* ty=Tensor[(8, 4, 2), float64] */;
    %1338 = @func_16161() /* ty=(float32,) */;
    %1339 = @func_9968() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1340 = rsqrt(%1337) /* ty=Tensor[(8, 4, 2), float64] */;
    %1341 = %1338.0;
    %1342 = %1339.0;
    (%1340, %1341, %1342)
  };
  %1343(%var_16669) /* ty=(Tensor[(8, 4, 2), float64], float32, Tensor[(11, 14, 10), float32]) */
}

def @func_16858() -> (Tensor[(11, 14, 10), float32],) {
  %1344 = @func_14760() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1345 = %1344.0;
  (%1345,)
}

def @func_12004() -> Tensor[(11, 14, 10), float32] {
  %1347 = fn () -> Tensor[(11, 14, 10), float32] {
    %1346 = @func_11053() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(1694, 1), uint16], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1346.1
  };
  %1347() /* ty=Tensor[(11, 14, 10), float32] */
}

def @func_14547() -> (Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) {
  %1355 = fn () -> (Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) {
    %1348 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
    %1349 = @func_7880() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1350 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
    %1351 = @func_7887() /* ty=Tensor[(1920), float32] */;
    %1352 = %1348.5;
    %1353 = %1349.0;
    %1354 = %1350.1;
    (%1351, %1352, %1353, %1354)
  };
  %1355() /* ty=(Tensor[(1920), float32], Tensor[(396), float32], Tensor[(11, 14, 10), float32], float32) */
}

def @func_7825() -> (Tensor[(11, 14, 10), float64],) {
  %1356 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1356,)
}

def @func_19886() -> (Tensor[(11, 14, 10), float32], Tensor[(110), float64]) {
  @func_19884() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(110), float64]) */
}

def @func_20931() -> (Tensor[(8, 11, 11), float32], Tensor[(968, 1920), uint64]) {
  %1357 = cast(meta[relay.Constant][65] /* ty=Tensor[(968, 1), float32] */, dtype="float32") /* ty=Tensor[(968, 1), float32] */;
  %1358 = reshape(%1357, newshape=[8, 11, 11]) /* ty=Tensor[(8, 11, 11), float32] */;
  %1359 = @func_19239(%1358) /* ty=(Tensor[(8, 11, 11), float32],) */;
  %1360 = @func_9437() /* ty=(Tensor[(1920), float32],) */;
  %1361 = %1360.0;
  %1362 = cast(meta[relay.Constant][65] /* ty=Tensor[(968, 1), float32] */, dtype="uint64") /* ty=Tensor[(968, 1), uint64] */;
  %1363 = cast(%1361, dtype="uint64") /* ty=Tensor[(1920), uint64] */;
  %1364 = %1359.0;
  %1365 = bitwise_or(%1362, %1363) /* ty=Tensor[(968, 1920), uint64] */;
  (%1364, %1365)
}

def @func_3372(%var_3366: Tensor[(6, 2, 6), float64]) -> Tensor[(6, 2, 6), float64] {
  %1366 = cast(%var_3366, dtype="float64") /* ty=Tensor[(6, 2, 6), float64] */;
  atanh(%1366) /* ty=Tensor[(6, 2, 6), float64] */
}

def @func_16975() -> (Tensor[(11, 10), float64], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64], Tensor[(11, 14, 10), float64]) {
  %1367 = @func_11288() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(10, ?, 11), uint32], Tensor[(11, 10), float64]) */;
  %1368 = @func_7491() /* ty=(Tensor[(11, 14, 10), float32], float32, Tensor[(2112), bool]) */;
  %1369 = @func_14896() /* ty=(Tensor[(11, 14, 10), float32],) */;
  %1370 = @func_10891() /* ty=(Tensor[(11, 14, 10), float64],) */;
  %1371 = %1367.2;
  %1372 = %1368.2;
  %1373 = %1369.0;
  %1374 = %1370.0;
  %1375 = @func_16742() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1371, %1372, %1373, %1374, %1375)
}

def @func_16367() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) {
  %1383 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) {
    %1376 = @func_9078() /* ty=(Tensor[(11, 14, 10), float64], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1377 = @func_11856() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1378 = %1376.2;
    %1379 = @func_12140() /* ty=Tensor[(1920), float32] */;
    %1380 = %1377.0;
    %1381 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
    %1382 = @func_9002() /* ty=float32 */;
    (%1378, %1379, %1380, %1381, %1382)
  };
  %1383() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], float32) */
}

def @func_7716() -> Tensor[(11, 14, 10), float64] {
  @func_7714() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_18267() -> (Tensor[(1920), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) {
  %1384 = @func_15441() /* ty=(Tensor[(1920), float32], Tensor[(2112), bool], Tensor[(11, 14, 10), float32], Tensor[(48, 4), float64], Tensor[(11, 14, 10), float64], Tensor[(44, 48), float64], Tensor[(11, 14, 10), float64]) */;
  %1385 = %1384.0;
  %1386 = @func_7060() /* ty=Tensor[(1920), float32] */;
  %1387 = @func_12683() /* ty=Tensor[(11, 14, 10), float32] */;
  %1388 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
  (%1385, %1386, %1387, %1388)
}

def @func_2156(%var_2153: Tensor[(3, 1, 1), float64], %var_2154: Tensor[(3, 1, 11), float64], %var_2155: Tensor[(250), int16]) -> (Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) {
  %1401 = fn (%var_2122: Tensor[(3, 1, 1), float64], %var_2123: Tensor[(3, 1, 11), float64], %var_2139: Tensor[(250), int16]) -> (Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) {
    %1389 = cast(%var_2122, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
    %1390 = cast(%var_2123, dtype="float64") /* ty=Tensor[(3, 1, 11), float64] */;
    %1391 = cast(%var_2139, dtype="int16") /* ty=Tensor[(250), int16] */;
    %1392 = reshape(%1391, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), int16] */;
    %1393 = @func_1345(%1392) /* ty=(Tensor[(10, 5, 5), int16],) */;
    %1394 = %1393.0;
    %1395 = cast(%var_2139, dtype="bool") /* ty=Tensor[(250), bool] */;
    %1396 = shape_of(%1394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1397 = cast(%1394, dtype="bool") /* ty=Tensor[(10, 5, 5), bool] */;
    %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1399 = floor_mod(%1389, %1390) /* ty=Tensor[(3, 1, 11), float64] */;
    %1400 = equal(%1397, %1398) /* ty=Tensor[(10, 5, 5), bool] */;
    (%1399, %1400)
  };
  %1401(%var_2153, %var_2154, %var_2155) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */
}

def @func_7461(%var_7460: Tensor[(11, 14, 10), float32]) -> (Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) {
  %1412 = fn (%var_7450: Tensor[(11, 14, 10), float32]) -> (Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) {
    %1402 = cast(meta[relay.Constant][66] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %1403 = reshape(%1402, newshape=[10, 1, 11]) /* ty=Tensor[(10, 1, 11), float64] */;
    %1404 = @func_5477(%1403) /* ty=(Tensor[(10, ?, 11), uint16],) */;
    %1405 = @func_6492() /* ty=Tensor[(11, 14, 10), float32] */;
    %1406 = cast(%var_7450, dtype="uint64") /* ty=Tensor[(11, 14, 10), uint64] */;
    %1407 = shape_of(%1405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1408 = cast(%1405, dtype="uint64") /* ty=Tensor[(11, 14, 10), uint64] */;
    %1409 = dyn.reshape(%1406, %1407, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1410 = %1404.0;
    %1411 = add(%1408, %1409) /* ty=Tensor[(11, 14, 10), uint64] */;
    (%1410, meta[relay.Constant][66] /* ty=Tensor[(110), float64] */, %1411)
  };
  %1412(%var_7460) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */
}

def @func_21395() -> (Tensor[(1920), float32],) {
  %1414 = fn () -> (Tensor[(1920), float32],) {
    %1413 = @func_13731() /* ty=Tensor[(1920), float32] */;
    (%1413,)
  };
  %1414() /* ty=(Tensor[(1920), float32],) */
}

def @func_9355(%var_9353: Tensor[(24), float32]) -> (Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(2, 1056), float32], Tensor[(2, 1056), float32]) {
  @func_9352(%var_9353) /* ty=(Tensor[(1920), float32], Tensor[(24), float32], Tensor[(2, 1056), bool], Tensor[(2, 1056), float32], Tensor[(2, 1056), float32]) */
}

def @func_14113() -> Tensor[(1920), float32] {
  %1415 = @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
  %1415.0
}

def @func_9126() -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_8626(%var_8625: Tensor[(44, 48), bool]) -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) {
  %1424 = fn (%var_8604: Tensor[(44, 48), bool]) -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) {
    %1416 = @func_7152() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(1920), float32]) */;
    %1417 = cast(%var_8604, dtype="bool") /* ty=Tensor[(44, 48), bool] */;
    %1418 = reshape(%1417, newshape=[2112]) /* ty=Tensor[(2112), bool] */;
    %1419 = @func_6606(%1418) /* ty=(Tensor[(11, 14, 10), float32], int64, Tensor[(2112), bool]) */;
    %1420 = cast(%var_8604, dtype="float32") /* ty=Tensor[(44, 48), float32] */;
    %1421 = %1416.0;
    %1422 = %1419.0;
    %1423 = acos(%1420) /* ty=Tensor[(44, 48), float32] */;
    (%1421, %1422, %1423)
  };
  %1424(%var_8625) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */
}

def @func_14680() -> (Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(1920), float32]) {
  %1425 = @func_6714() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 11, 11), bool], uint16, Tensor[(1694, 1), uint16], Tensor[(9, 11, 4), float32], Tensor[(396), float32]) */;
  %1426 = @func_13519() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float64]) */;
  %1427 = @func_12117() /* ty=(Tensor[(400), float64], float32, Tensor[(1920), float32]) */;
  %1428 = @func_12998() /* ty=(Tensor[(1920), float32],) */;
  %1429 = %1425.4;
  %1430 = %1426.0;
  %1431 = %1427.2;
  %1432 = @func_6913() /* ty=Tensor[(11, 14, 10), float32] */;
  %1433 = %1428.0;
  (%1429, %1430, %1431, %1432, %1433)
}

def @func_6833() -> (Tensor[(11, 14, 10), float32],) {
  %1434 = @func_6793() /* ty=Tensor[(11, 14, 10), float32] */;
  (%1434,)
}

def @func_20810() -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(3, 1, 11), float64], Tensor[(33), float64]) {
  %1442 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(3, 1, 11), float64], Tensor[(33), float64]) {
    %1435 = cast(meta[relay.Constant][67] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %1436 = reshape(%1435, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %1437 = @func_18577(%1436) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32]) */;
    %1438 = @func_15281() /* ty=Tensor[(11, 14, 10), float32] */;
    %1439 = @func_19068() /* ty=Tensor[(1920), float32] */;
    %1440 = @func_7714() /* ty=Tensor[(11, 14, 10), float64] */;
    %1441 = %1437.1;
    (%1438, %1439, %1440, %1441, meta[relay.Constant][67] /* ty=Tensor[(33), float64] */)
  };
  %1442() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(1920), float32], Tensor[(11, 14, 10), float64], Tensor[(3, 1, 11), float64], Tensor[(33), float64]) */
}

def @func_21453(%var_21451: Tensor[(9, 11, 3), float64]) -> (Tensor[(9, 11, 3), float64],) {
  @func_21450(%var_21451) /* ty=(Tensor[(9, 11, 3), float64],) */
}

def @func_8144(%var_8141: Tensor[(13, 9, 6), float32], %var_8142: Tensor[(3), float64], %var_8143: Tensor[(33), float64]) -> (Tensor[(1920), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32], Tensor[(11, 14, 10), uint64], Tensor[(1540), float32], Tensor[(13, 9, 6), float64]) {
  %1463 = fn (%var_8099: Tensor[(13, 9, 6), float32], %var_8119: Tensor[(3), float64], %var_8120: Tensor[(33), float64]) -> (Tensor[(1920), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32], Tensor[(11, 14, 10), uint64], Tensor[(1540), float32], Tensor[(13, 9, 6), float64]) {
    %1443 = @func_7001() /* ty=(Tensor[(1920), float32],) */;
    %1444 = cast(%var_8119, dtype="float64") /* ty=Tensor[(3), float64] */;
    %1445 = cast(%var_8120, dtype="float64") /* ty=Tensor[(33), float64] */;
    %1446 = cast(meta[relay.Constant][68] /* ty=Tensor[(250), int16] */, dtype="int16") /* ty=Tensor[(250), int16] */;
    %1447 = reshape(%1444, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
    %1448 = reshape(%1445, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
    %1449 = reshape(%1446, newshape=[250]) /* ty=Tensor[(250), int16] */;
    %1450 = @func_2152(%1447, %1448, %1449) /* ty=(Tensor[(3, 1, 11), float64], Tensor[(10, 5, 5), bool]) */;
    %1451 = @func_7472() /* ty=(Tensor[(1920), float32],) */;
    %1452 = cast(meta[relay.Constant][69] /* ty=Tensor[(1540), float32] */, dtype="float32") /* ty=Tensor[(1540), float32] */;
    %1453 = reshape(%1452, newshape=[11, 14, 10]) /* ty=Tensor[(11, 14, 10), float32] */;
    %1454 = @func_7459(%1453) /* ty=(Tensor[(10, ?, 11), uint16], Tensor[(110), float64], Tensor[(11, 14, 10), uint64]) */;
    %1455 = cast(%var_8099, dtype="float32") /* ty=Tensor[(13, 9, 6), float32] */;
    %1456 = asin(%1455) /* ty=Tensor[(13, 9, 6), float32] */;
    %1457 = cast(%1456, dtype="float64") /* ty=Tensor[(13, 9, 6), float64] */;
    %1458 = %1443.0;
    %1459 = %1450.0;
    %1460 = %1451.0;
    %1461 = %1454.2;
    %1462 = log(%1457) /* ty=Tensor[(13, 9, 6), float64] */;
    (%1458, %1459, %var_8119, %var_8120, meta[relay.Constant][68] /* ty=Tensor[(250), int16] */, %1460, %1461, meta[relay.Constant][69] /* ty=Tensor[(1540), float32] */, %1462)
  };
  %1463(%var_8141, %var_8142, %var_8143) /* ty=(Tensor[(1920), float32], Tensor[(3, 1, 11), float64], Tensor[(3), float64], Tensor[(33), float64], Tensor[(250), int16], Tensor[(1920), float32], Tensor[(11, 14, 10), uint64], Tensor[(1540), float32], Tensor[(13, 9, 6), float64]) */
}

def @func_18039() -> (Tensor[(11, 14, 10), float32],) {
  %1466 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %1464 = @func_13786() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1465 = %1464.0;
    (%1465,)
  };
  %1466() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_11451(%var_11450: Tensor[(112, 1), float32]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 1, 8), float32], Tensor[(112, 1), float32]) {
  %1472 = fn (%var_11438: Tensor[(112, 1), float32]) -> (Tensor[(11, 14, 10), float32], Tensor[(14, 1, 8), float32], Tensor[(112, 1), float32]) {
    %1467 = @func_9176() /* ty=(Tensor[(1920), float32], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32]) */;
    %1468 = cast(%var_11438, dtype="float32") /* ty=Tensor[(112, 1), float32] */;
    %1469 = reshape(%1468, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), float32] */;
    %1470 = %1467.1;
    %1471 = @func_10689(%1469) /* ty=Tensor[(14, 1, 8), float32] */;
    (%1470, %1471, %var_11438)
  };
  %1472(%var_11450) /* ty=(Tensor[(11, 14, 10), float32], Tensor[(14, 1, 8), float32], Tensor[(112, 1), float32]) */
}

def @func_16742() -> Tensor[(11, 14, 10), float64] {
  @func_14715() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_10454() -> Tensor[(1920), float32] {
  %1473 = fn () -> Tensor[(1920), float32] {
    @func_10127() /* ty=Tensor[(1920), float32] */
  };
  %1473() /* ty=Tensor[(1920), float32] */
}

def @func_16744() -> Tensor[(11, 14, 10), float64] {
  @func_16742() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_12472() -> (Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) {
  %1478 = fn () -> (Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) {
    %1474 = @func_9567() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(9, 11, 4), float32]) */;
    %1475 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
    %1476 = %1474.1;
    %1477 = @func_9002() /* ty=float32 */;
    (%1475, %1476, %1477)
  };
  %1478() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], float32) */
}

def @func_21128() -> Tensor[(968, 1920), float64] {
  @func_21126() /* ty=Tensor[(968, 1920), float64] */
}

def @func_12267() -> float32 {
  %1479 = fn () -> float32 {
    @func_9002() /* ty=float32 */
  };
  %1479() /* ty=float32 */
}

def @func_11919() -> (Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
  %1486 = fn () -> (Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) {
    %1480 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
    %1481 = @func_11244() /* ty=(Tensor[(11, 14, 10), float32],) */;
    %1482 = @func_9124() /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */;
    %1483 = %1480.2;
    %1484 = %1481.0;
    %1485 = %1482.3;
    (%1483, %1484, %1485)
  };
  %1486() /* ty=(Tensor[(400), float64], Tensor[(11, 14, 10), float32], Tensor[(11, 14, 10), float32]) */
}

def @func_14944() -> Tensor[(11, 14, 10), float64] {
  @func_14942() /* ty=Tensor[(11, 14, 10), float64] */
}

def @func_11857() -> (Tensor[(11, 14, 10), float32],) {
  %1489 = fn () -> (Tensor[(11, 14, 10), float32],) {
    %1487 = @func_11398() /* ty=(Tensor[(11, 14, 10), float32], Tensor[(10, 8, 5), float64], Tensor[(400), float64]) */;
    %1488 = %1487.0;
    (%1488,)
  };
  %1489() /* ty=(Tensor[(11, 14, 10), float32],) */
}

def @func_16224(%var_16217: Tensor[(3, 13, 14), int8], %var_16218: Tensor[(3, 13, 14), int8]) -> (Tensor[(3, 13, 14), int8],) {
  %1490 = cast(%var_16218, dtype="int8") /* ty=Tensor[(3, 13, 14), int8] */;
  %1491 = shape_of(%var_16217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1492 = cast(%var_16217, dtype="int8") /* ty=Tensor[(3, 13, 14), int8] */;
  %1493 = dyn.reshape(%1490, %1491, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1494 = logical_xor(%1492, %1493) /* ty=Tensor[(3, 13, 14), int8] */;
  (%1494,)
}

def @func_13485() -> float32 {
  @func_13483() /* ty=float32 */
}

def @func_5479(%var_5478: Tensor[(10, 1, 11), float64]) -> (Tensor[(10, ?, 11), uint16],) {
  %1502 = fn (%var_5464: Tensor[(10, 1, 11), float64]) -> (Tensor[(10, ?, 11), uint16],) {
    %1495 = cast(%var_5464, dtype="float64") /* ty=Tensor[(10, 1, 11), float64] */;
    %1496 = sinh(%1495) /* ty=Tensor[(10, 1, 11), float64] */;
    %1497 = cast(%1496, dtype="uint16") /* ty=Tensor[(10, 1, 11), uint16] */;
    %1498 = shape_of(%var_5464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1499 = cast(%var_5464, dtype="uint16") /* ty=Tensor[(10, 1, 11), uint16] */;
    %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1501 = bitwise_xor(%1499, %1500) /* ty=Tensor[(10, ?, 11), uint16] */;
    (%1501,)
  };
  %1502(%var_5478) /* ty=(Tensor[(10, ?, 11), uint16],) */
}

def @func_11195(%var_11193: Tensor[(75), int64], %var_11194: Tensor[(396), float32]) -> (Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250, 1), int16], Tensor[(11, 14, 10), float64], Tensor[(15, 5, 1), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32], Tensor[(1920), float32]) {
  @func_11191(%var_11193, %var_11194) /* ty=(Tensor[(1920), float32], int64, Tensor[(75), int64], Tensor[(250, 1), int16], Tensor[(11, 14, 10), float64], Tensor[(15, 5, 1), float32], Tensor[(9, 11, 4), float32], Tensor[(396), float32], Tensor[(1920), float32]) */
}

def @func_15803(%var_15800: Tensor[(12, 6, 12), bool], %var_15801: Tensor[(12, 6, 12), bool], %var_15802: Tensor[(1056, 2), bool]) -> (Tensor[(12, 6, 12), bool], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1056, 2), int8], Tensor[(1056, 2), uint8]) {
  %1523 = fn (%var_15755: Tensor[(12, 6, 12), bool], %var_15756: Tensor[(12, 6, 12), bool], %var_15783: Tensor[(1056, 2), bool]) -> (Tensor[(12, 6, 12), bool], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1056, 2), int8], Tensor[(1056, 2), uint8]) {
    %1503 = cast(%var_15756, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
    %1504 = shape_of(%var_15755, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1505 = cast(%var_15755, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
    %1506 = dyn.reshape(%1503, %1504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1507 = cast(meta[relay.Constant][70] /* ty=Tensor[(1056, 2), bool] */, dtype="bool") /* ty=Tensor[(1056, 2), bool] */;
    %1508 = reshape(%1507, newshape=[44, 48]) /* ty=Tensor[(44, 48), bool] */;
    %1509 = @func_8624(%1508) /* ty=(Tensor[(9, 11, 4), float32], Tensor[(11, 14, 10), float32], Tensor[(44, 48), float32]) */;
    %1510 = cast(%var_15783, dtype="int8") /* ty=Tensor[(1056, 2), int8] */;
    %1511 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(1056, 2), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1512 = cast(meta[relay.Constant][70] /* ty=Tensor[(1056, 2), bool] */, dtype="int8") /* ty=Tensor[(1056, 2), int8] */;
    %1513 = dyn.reshape(%1510, %1511, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1514 = cast(%var_15783, dtype="uint8") /* ty=Tensor[(1056, 2), uint8] */;
    %1515 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(1056, 2), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1516 = cast(meta[relay.Constant][70] /* ty=Tensor[(1056, 2), bool] */, dtype="uint8") /* ty=Tensor[(1056, 2), uint8] */;
    %1517 = dyn.reshape(%1514, %1515, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1518 = logical_and(%1505, %1506) /* ty=Tensor[(12, 6, 12), bool] */;
    %1519 = @func_9479() /* ty=Tensor[(11, 14, 10), float32] */;
    %1520 = %1509.0;
    %1521 = multiply(%1512, %1513) /* ty=Tensor[(1056, 2), int8] */;
    %1522 = right_shift(%1516, %1517) /* ty=Tensor[(1056, 2), uint8] */;
    (%1518, %1519, %1520, %1521, %1522)
  };
  %1523(%var_15800, %var_15801, %var_15802) /* ty=(Tensor[(12, 6, 12), bool], Tensor[(11, 14, 10), float32], Tensor[(9, 11, 4), float32], Tensor[(1056, 2), int8], Tensor[(1056, 2), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen877/build/output.py", line 5472, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:34:54] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_44 = relay.var("var_44", dtype = "float64", shape = (3, 5, 10))#candidate|44|(3, 5, 10)|var|float64
var_45 = relay.var("var_45", dtype = "float64", shape = (3, 5, 10))#candidate|45|(3, 5, 10)|var|float64
bop_46 = relay.mod(var_44.astype('float64'), relay.reshape(var_45.astype('float64'), relay.shape_of(var_44))) # shape=(3, 5, 10)
output = bop_46
output2 = bop_46
func_49 = relay.Function([var_44,var_45,], output)
mod['func_49'] = func_49
mod = relay.transform.InferType()(mod)
mutated_mod['func_49'] = func_49
mutated_mod = relay.transform.InferType()(mutated_mod)
func_49_call = mutated_mod.get_global_var('func_49')
var_51 = relay.var("var_51", dtype = "float64", shape = (3, 5, 10))#candidate|51|(3, 5, 10)|var|float64
var_52 = relay.var("var_52", dtype = "float64", shape = (3, 5, 10))#candidate|52|(3, 5, 10)|var|float64
call_50 = func_49_call(var_51,var_52,)
output = call_50
func_53 = relay.Function([var_51,var_52,], output)
mutated_mod['func_53'] = func_53
mutated_mod = relay.transform.InferType()(mutated_mod)
var_402 = relay.var("var_402", dtype = "uint32", shape = (15, 12, 10))#candidate|402|(15, 12, 10)|var|uint32
const_403 = relay.const([[[-2,3,1,-8,2,1,4,-6,3,8],[-3,-5,-7,-6,-1,6,-1,7,4,3],[1,-3,-2,-3,-1,8,-9,6,-5,-6],[9,8,-10,3,2,-10,-10,10,-4,-6],[4,-8,-6,-1,-1,5,-9,-1,2,5],[-10,7,-7,-1,-9,-7,10,8,-4,-6],[5,6,-6,5,10,2,-4,-1,7,6],[-6,1,-10,1,9,8,1,-10,-10,-7],[-6,2,9,2,5,3,9,-9,-2,-3],[-10,-7,-5,-7,1,-5,2,-6,3,6],[4,-3,-3,3,5,-8,-9,5,9,8],[8,8,3,1,-2,7,-8,2,-5,9]],[[-3,4,-10,-3,-2,3,-6,-8,-7,-8],[7,6,6,-9,4,-10,2,6,-2,5],[2,4,8,-9,-2,-3,-2,8,-8,-10],[2,-7,5,-10,-6,1,-10,-8,-8,3],[-5,10,-5,9,5,6,-1,-4,8,-3],[9,-4,10,9,-10,7,9,3,8,-7],[-1,-2,8,9,2,-2,-6,3,-8,-6],[-7,4,-4,9,-10,5,-1,-6,-5,-5],[-6,9,3,10,4,-2,10,-6,4,4],[-6,-7,-8,-6,-7,1,7,-7,-9,2],[2,-6,-9,-7,-10,6,2,10,6,6],[-6,9,4,-4,3,-8,-9,9,7,-10]],[[7,-2,1,2,10,1,4,9,-5,2],[-10,-5,5,8,10,-10,8,-7,-3,-4],[-8,9,6,9,-3,-1,1,4,10,1],[-4,6,-2,8,-3,-8,-1,10,-7,9],[9,-4,6,8,2,7,-10,-7,-7,8],[9,-10,7,8,-10,-5,-8,3,1,-1],[3,-10,-2,-7,-1,-10,3,1,-1,-5],[5,-4,-2,-9,8,-5,-10,4,-1,-1],[-8,-3,1,2,-4,-5,-8,1,5,3],[2,4,3,3,1,-6,-5,9,-6,9],[7,-8,4,6,-1,-3,-7,4,7,3],[1,6,-10,-1,-7,6,-4,-10,4,-8]],[[-5,10,1,1,1,-7,-3,10,9,4],[4,1,-4,8,9,5,-8,3,8,9],[-7,-6,9,-8,9,-6,1,1,-10,-3],[7,-10,-4,-4,8,4,10,-10,3,-1],[1,5,7,-7,-7,4,10,-8,-1,-7],[-8,6,8,-10,7,5,-1,10,-8,-2],[9,10,-2,-4,-3,-1,9,-2,5,-9],[-5,10,5,-1,7,2,9,-3,-10,-1],[-7,7,-2,-4,1,9,8,-2,-9,7],[-6,10,-9,-8,4,-4,-4,7,-10,-10],[4,6,1,4,1,-6,10,-6,-2,10],[4,5,4,3,-4,-4,-4,-8,-10,-5]],[[-4,2,6,3,-10,2,-6,3,10,6],[9,-10,-2,-8,-3,-7,-1,-10,-5,-4],[5,-1,4,5,-10,-8,10,-9,-10,-9],[9,9,5,8,-4,6,-10,-4,-3,-8],[9,9,8,6,-7,1,10,-8,1,2],[-8,-5,-7,3,-8,-2,-1,-8,1,4],[-6,-7,-5,9,3,-9,4,-1,5,-3],[-7,1,6,-4,1,8,-3,6,-2,-3],[-10,7,-8,-5,2,-7,-2,8,8,-6],[2,-8,1,-4,-1,-7,1,5,2,-6],[9,-5,4,9,-5,-2,-3,3,-6,-6],[-6,-8,-8,-8,-4,-5,8,1,3,-3]],[[-9,7,-5,5,-9,-8,5,-4,10,3],[8,4,10,-7,9,3,-7,7,3,3],[2,-9,-7,10,-6,-1,3,-10,3,7],[-9,8,-3,8,-7,-1,2,8,4,-9],[2,-5,-5,9,-2,10,9,9,-4,-9],[6,4,10,9,1,-4,-6,-10,-2,1],[-7,9,-10,9,3,-7,-8,7,2,-1],[4,5,-2,2,-6,-2,-5,-1,9,-1],[6,1,10,3,6,6,-9,1,-8,7],[-8,-8,-2,-8,-7,-3,-6,8,-4,9],[-4,1,5,-5,7,-8,-3,-5,-5,7],[-1,-6,5,-4,-4,-3,7,-2,-8,-5]],[[10,-7,10,-1,-9,7,-9,9,-7,-4],[-8,-3,-1,-7,-3,3,6,8,5,10],[-8,-6,-10,-10,9,-9,-1,2,-7,-2],[-1,-4,6,-4,-3,-7,-1,-5,-7,7],[-7,3,-1,1,-3,-10,9,-3,10,-9],[10,-2,-8,-2,-10,-3,9,6,-2,-10],[1,1,-8,6,-10,8,9,-10,7,-4],[-3,5,-4,4,9,2,5,-1,-8,2],[-9,7,-2,-7,-1,7,1,-7,-4,-2],[6,6,-9,-6,-1,-4,-9,-10,-10,-2],[-1,6,-3,-6,4,4,6,-1,5,2],[8,-8,-9,-9,-5,-9,-10,-8,-7,-1]],[[-6,1,3,7,-3,-5,6,-7,-10,-3],[7,-3,4,1,-8,4,-5,4,-9,7],[-1,-3,4,4,-6,10,9,-10,5,-6],[-2,-6,5,7,2,-8,-4,4,8,-3],[6,-8,7,10,9,-6,8,2,-4,1],[-2,-1,-7,6,4,2,3,7,-9,-1],[-6,-1,-8,10,-1,8,-10,-2,5,-4],[7,10,-7,-9,3,7,6,-4,3,4],[6,9,-2,-5,-9,7,9,6,-6,4],[-5,-9,-9,5,10,5,-3,4,-5,4],[9,2,1,-4,2,-8,-9,10,-3,-9],[8,1,-10,7,-5,9,-6,-2,10,-6]],[[5,1,-1,1,10,7,6,9,2,-1],[-9,-8,3,2,9,-6,-1,8,10,6],[-1,-7,-8,3,4,-6,4,8,6,-9],[-1,9,3,-4,9,4,2,9,10,1],[-3,7,-10,5,8,-1,10,-10,1,6],[3,-2,-3,-6,-10,-5,1,2,-10,7],[2,6,2,-7,-8,-3,-4,8,5,-10],[-9,9,8,1,-10,-5,-10,6,-5,-3],[7,5,-10,-1,-7,9,6,7,-1,2],[-9,-4,6,-9,5,7,7,-5,7,1],[7,-1,9,-8,6,-2,7,-4,-7,7],[6,-6,-5,9,9,5,1,10,2,2]],[[10,-5,-9,-1,1,-10,9,9,9,6],[-9,5,-7,-1,4,8,-7,-10,-1,3],[-8,-8,-9,3,-6,-7,9,4,8,6],[-9,6,7,-4,-9,-2,-2,-6,-7,10],[-7,8,-8,2,8,-7,-10,4,-1,8],[5,-6,10,7,-8,-1,-3,-1,-1,-4],[8,-9,4,-10,2,-4,-5,6,-2,-3],[10,-7,4,4,8,-6,9,9,-9,-10],[-4,-9,-5,-6,-8,7,-6,-2,2,-6],[4,-9,9,8,-4,10,3,8,-6,2],[5,3,4,2,3,-6,-3,-10,2,2],[-6,-5,4,4,-10,-4,-8,8,4,9]],[[9,-4,4,-5,-4,4,9,-9,-5,-5],[-1,-3,7,4,1,-1,-3,-1,1,-3],[2,4,-9,6,-8,-10,-1,-2,6,2],[-1,8,-9,9,6,6,-9,1,3,-1],[-10,2,6,2,9,-7,-8,-2,-5,-1],[-3,9,7,-10,-7,1,-2,9,-6,7],[-6,4,1,-2,-9,7,10,-3,-6,-7],[-4,10,-3,3,1,-5,-8,2,-4,-8],[-7,-6,3,-4,-4,1,9,-3,2,2],[-8,10,-5,-7,-7,4,10,-3,-1,9],[7,-3,-3,9,-6,9,-7,10,-3,2],[2,8,-8,-4,-7,4,4,10,-8,3]],[[1,8,4,1,6,9,-1,-9,-7,8],[9,8,3,-3,9,5,-1,-8,-2,2],[4,6,-8,4,10,-1,-8,-4,-7,4],[-4,-5,-3,-10,4,10,5,1,3,-1],[9,-3,1,10,4,-5,2,-3,-3,-9],[-5,2,7,3,3,2,-6,-1,-4,-6],[-2,9,8,-8,-5,7,7,1,-7,3],[-10,1,2,4,2,4,-8,-9,-5,1],[-5,-1,10,-4,6,-6,-4,2,-1,-10],[4,-9,7,3,7,1,2,4,-3,10],[8,6,7,6,4,-10,-1,3,7,9],[9,5,3,-7,10,8,5,9,-3,7]],[[4,8,-6,-5,-8,-8,6,2,5,-10],[7,4,-3,4,-2,5,-10,-1,-5,-1],[1,-4,3,8,5,2,7,4,10,8],[-8,-8,-8,-7,7,8,5,7,-9,-5],[-5,6,4,-2,7,8,2,6,-9,5],[-10,4,-6,-3,-7,7,7,2,3,-8],[3,-8,4,-5,6,10,4,1,-6,2],[5,5,-7,3,-2,-2,9,-10,-3,-7],[-6,5,1,-9,-10,-10,2,-9,2,-9],[-3,9,-1,6,-5,-5,9,10,-5,7],[-10,4,-10,-3,5,9,2,-9,-7,9],[7,3,-5,6,-10,9,9,1,4,-4]],[[-5,6,-10,-2,-1,1,6,-6,4,3],[6,-3,-3,4,8,6,-10,-3,-9,-9],[10,2,3,9,1,-3,-1,-2,1,-4],[6,6,-4,10,6,8,1,-1,10,-2],[-1,-10,1,9,-9,-3,-2,-3,-8,4],[2,9,1,-8,2,-2,4,7,3,7],[8,-7,9,-9,-2,-10,-4,-8,10,6],[5,-7,9,2,10,5,1,8,-1,6],[1,-8,6,-10,1,10,-5,2,-3,-9],[6,-10,-6,-7,-7,-2,9,-3,-7,3],[10,-3,4,-10,-4,9,3,-8,-10,-7],[8,-5,-9,-5,-1,6,4,6,-5,-5]],[[7,10,5,-10,3,-2,-7,9,3,-4],[-2,6,8,-2,-10,5,-10,9,10,-2],[5,5,1,7,8,8,2,6,6,6],[-6,5,-3,-1,4,-8,-7,2,-7,-2],[2,6,6,5,-1,-9,-1,3,1,-9],[-9,-5,-7,4,7,10,-8,5,-10,5],[3,-8,-8,-8,-7,3,3,-10,-6,6],[-2,5,5,-1,2,6,-10,8,7,7],[3,8,8,6,-6,-7,1,6,4,8],[-5,-9,-1,3,5,2,9,-3,1,3],[4,-4,4,10,9,-1,-4,-7,1,5],[-1,-3,-6,-9,8,4,2,8,8,-3]]], dtype = "uint32")#candidate|403|(15, 12, 10)|const|uint32
bop_404 = relay.logical_xor(var_402.astype('uint32'), relay.reshape(const_403.astype('uint32'), relay.shape_of(var_402))) # shape=(15, 12, 10)
func_49_call = mod.get_global_var('func_49')
func_53_call = mutated_mod.get_global_var('func_53')
var_414 = relay.var("var_414", dtype = "float64", shape = (1, 150))#candidate|414|(1, 150)|var|float64
call_413 = func_49_call(relay.reshape(var_414.astype('float64'), [3, 5, 10]), relay.reshape(var_414.astype('float64'), [3, 5, 10]), )
call_415 = func_49_call(relay.reshape(var_414.astype('float64'), [3, 5, 10]), relay.reshape(var_414.astype('float64'), [3, 5, 10]), )
output = relay.Tuple([bop_404,call_413,var_414,])
output2 = relay.Tuple([bop_404,call_415,var_414,])
func_417 = relay.Function([var_402,var_414,], output)
mod['func_417'] = func_417
mod = relay.transform.InferType()(mod)
var_418 = relay.var("var_418", dtype = "uint32", shape = (15, 12, 10))#candidate|418|(15, 12, 10)|var|uint32
var_419 = relay.var("var_419", dtype = "float64", shape = (1, 150))#candidate|419|(1, 150)|var|float64
output = func_417(var_418,var_419,)
func_420 = relay.Function([var_418,var_419,], output)
mutated_mod['func_420'] = func_420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_492 = relay.var("var_492", dtype = "int64", shape = (10, 7, 12))#candidate|492|(10, 7, 12)|var|int64
var_493 = relay.var("var_493", dtype = "int64", shape = (10, 7, 12))#candidate|493|(10, 7, 12)|var|int64
bop_494 = relay.add(var_492.astype('int64'), relay.reshape(var_493.astype('int64'), relay.shape_of(var_492))) # shape=(10, 7, 12)
uop_500 = relay.log2(bop_494.astype('float64')) # shape=(10, 7, 12)
output = relay.Tuple([uop_500,])
output2 = relay.Tuple([uop_500,])
func_506 = relay.Function([var_492,var_493,], output)
mod['func_506'] = func_506
mod = relay.transform.InferType()(mod)
var_507 = relay.var("var_507", dtype = "int64", shape = (10, 7, 12))#candidate|507|(10, 7, 12)|var|int64
var_508 = relay.var("var_508", dtype = "int64", shape = (10, 7, 12))#candidate|508|(10, 7, 12)|var|int64
output = func_506(var_507,var_508,)
func_509 = relay.Function([var_507,var_508,], output)
mutated_mod['func_509'] = func_509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_664 = relay.var("var_664", dtype = "uint8", shape = (1, 16, 3))#candidate|664|(1, 16, 3)|var|uint8
var_665 = relay.var("var_665", dtype = "uint8", shape = (6, 16, 3))#candidate|665|(6, 16, 3)|var|uint8
bop_666 = relay.equal(var_664.astype('bool'), var_665.astype('bool')) # shape=(6, 16, 3)
var_683 = relay.var("var_683", dtype = "bool", shape = (6, 16, 3))#candidate|683|(6, 16, 3)|var|bool
bop_684 = relay.minimum(bop_666.astype('float64'), relay.reshape(var_683.astype('float64'), relay.shape_of(bop_666))) # shape=(6, 16, 3)
func_417_call = mod.get_global_var('func_417')
func_420_call = mutated_mod.get_global_var('func_420')
var_698 = relay.var("var_698", dtype = "uint32", shape = (1800,))#candidate|698|(1800,)|var|uint32
var_699 = relay.var("var_699", dtype = "float64", shape = (1, 150))#candidate|699|(1, 150)|var|float64
call_697 = relay.TupleGetItem(func_417_call(relay.reshape(var_698.astype('uint32'), [15, 12, 10]), relay.reshape(var_699.astype('float64'), [1, 150]), ), 2)
call_700 = relay.TupleGetItem(func_420_call(relay.reshape(var_698.astype('uint32'), [15, 12, 10]), relay.reshape(var_699.astype('float64'), [1, 150]), ), 2)
output = relay.Tuple([bop_684,call_697,var_698,var_699,])
output2 = relay.Tuple([bop_684,call_700,var_698,var_699,])
func_703 = relay.Function([var_664,var_665,var_683,var_698,var_699,], output)
mod['func_703'] = func_703
mod = relay.transform.InferType()(mod)
mutated_mod['func_703'] = func_703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_703_call = mutated_mod.get_global_var('func_703')
var_705 = relay.var("var_705", dtype = "uint8", shape = (1, 16, 3))#candidate|705|(1, 16, 3)|var|uint8
var_706 = relay.var("var_706", dtype = "uint8", shape = (6, 16, 3))#candidate|706|(6, 16, 3)|var|uint8
var_707 = relay.var("var_707", dtype = "bool", shape = (6, 16, 3))#candidate|707|(6, 16, 3)|var|bool
var_708 = relay.var("var_708", dtype = "uint32", shape = (1800,))#candidate|708|(1800,)|var|uint32
var_709 = relay.var("var_709", dtype = "float64", shape = (1, 150))#candidate|709|(1, 150)|var|float64
call_704 = func_703_call(var_705,var_706,var_707,var_708,var_709,)
output = call_704
func_710 = relay.Function([var_705,var_706,var_707,var_708,var_709,], output)
mutated_mod['func_710'] = func_710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_952 = relay.var("var_952", dtype = "uint16", shape = (7, 2, 11))#candidate|952|(7, 2, 11)|var|uint16
var_953 = relay.var("var_953", dtype = "uint16", shape = (7, 2, 11))#candidate|953|(7, 2, 11)|var|uint16
bop_954 = relay.greater_equal(var_952.astype('bool'), relay.reshape(var_953.astype('bool'), relay.shape_of(var_952))) # shape=(7, 2, 11)
output = bop_954
output2 = bop_954
func_960 = relay.Function([var_952,var_953,], output)
mod['func_960'] = func_960
mod = relay.transform.InferType()(mod)
mutated_mod['func_960'] = func_960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mutated_mod.get_global_var('func_960')
var_962 = relay.var("var_962", dtype = "uint16", shape = (7, 2, 11))#candidate|962|(7, 2, 11)|var|uint16
var_963 = relay.var("var_963", dtype = "uint16", shape = (7, 2, 11))#candidate|963|(7, 2, 11)|var|uint16
call_961 = func_960_call(var_962,var_963,)
output = call_961
func_964 = relay.Function([var_962,var_963,], output)
mutated_mod['func_964'] = func_964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_997 = relay.var("var_997", dtype = "bool", shape = (6, 11, 4))#candidate|997|(6, 11, 4)|var|bool
var_998 = relay.var("var_998", dtype = "bool", shape = (6, 11, 4))#candidate|998|(6, 11, 4)|var|bool
bop_999 = relay.logical_and(var_997.astype('bool'), relay.reshape(var_998.astype('bool'), relay.shape_of(var_997))) # shape=(6, 11, 4)
output = relay.Tuple([bop_999,])
output2 = relay.Tuple([bop_999,])
func_1009 = relay.Function([var_997,var_998,], output)
mod['func_1009'] = func_1009
mod = relay.transform.InferType()(mod)
var_1010 = relay.var("var_1010", dtype = "bool", shape = (6, 11, 4))#candidate|1010|(6, 11, 4)|var|bool
var_1011 = relay.var("var_1011", dtype = "bool", shape = (6, 11, 4))#candidate|1011|(6, 11, 4)|var|bool
output = func_1009(var_1010,var_1011,)
func_1012 = relay.Function([var_1010,var_1011,], output)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1079 = relay.var("var_1079", dtype = "float64", shape = (15, 7, 16))#candidate|1079|(15, 7, 16)|var|float64
uop_1080 = relay.rsqrt(var_1079.astype('float64')) # shape=(15, 7, 16)
bop_1083 = relay.add(uop_1080.astype('int32'), relay.reshape(var_1079.astype('int32'), relay.shape_of(uop_1080))) # shape=(15, 7, 16)
output = bop_1083
output2 = bop_1083
func_1096 = relay.Function([var_1079,], output)
mod['func_1096'] = func_1096
mod = relay.transform.InferType()(mod)
mutated_mod['func_1096'] = func_1096
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1097 = relay.var("var_1097", dtype = "float64", shape = (15, 7, 16))#candidate|1097|(15, 7, 16)|var|float64
func_1096_call = mutated_mod.get_global_var('func_1096')
call_1098 = func_1096_call(var_1097)
output = call_1098
func_1099 = relay.Function([var_1097], output)
mutated_mod['func_1099'] = func_1099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1283 = relay.var("var_1283", dtype = "uint8", shape = (14, 10, 16))#candidate|1283|(14, 10, 16)|var|uint8
var_1284 = relay.var("var_1284", dtype = "uint8", shape = (14, 10, 16))#candidate|1284|(14, 10, 16)|var|uint8
bop_1285 = relay.bitwise_and(var_1283.astype('uint8'), relay.reshape(var_1284.astype('uint8'), relay.shape_of(var_1283))) # shape=(14, 10, 16)
func_960_call = mod.get_global_var('func_960')
func_964_call = mutated_mod.get_global_var('func_964')
const_1290 = relay.const([-8,-1,-3,-10,3,10,-6,-5,-3,3,-7,-2,2,1,4,1,-9,6,9,-9,-10,4,-1,-4,-9,10,6,8,-9,8,-9,7,5,-1,3,-9,-9,9,-4,-4,4,7,-6,-7,-6,-10,6,-2,-5,5,3,1,9,-3,6,3,3,-9,-9,-8,3,-9,-7,2,-5,2,-3,3,-6,4,-6,-2,-1,2,9,-4,-7,-3,-5,8,4,-2,-2,8,1,-10,2,-8,4,4,7,8,-2,-8,-6,9,-8,-6,3,-10,7,-1,-3,4,8,-3,-6,9,-1,-5,5,6,4,-6,5,1,-6,-1,-3,6,-2,4,-1,-4,-2,-9,2,2,7,-4,2,4,-10,-6,-1,2,-3,-9,-1,-7,1,-2,1,-10,-4,1,-2,5,-4,-6,-5,-8,7,5], dtype = "uint16")#candidate|1290|(154,)|const|uint16
call_1289 = func_960_call(relay.reshape(const_1290.astype('uint16'), [7, 2, 11]), relay.reshape(const_1290.astype('uint16'), [7, 2, 11]), )
call_1291 = func_960_call(relay.reshape(const_1290.astype('uint16'), [7, 2, 11]), relay.reshape(const_1290.astype('uint16'), [7, 2, 11]), )
bop_1293 = relay.minimum(var_1284.astype('uint64'), relay.reshape(var_1283.astype('uint64'), relay.shape_of(var_1284))) # shape=(14, 10, 16)
output = relay.Tuple([bop_1285,call_1289,const_1290,bop_1293,])
output2 = relay.Tuple([bop_1285,call_1291,const_1290,bop_1293,])
func_1299 = relay.Function([var_1283,var_1284,], output)
mod['func_1299'] = func_1299
mod = relay.transform.InferType()(mod)
mutated_mod['func_1299'] = func_1299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1299_call = mutated_mod.get_global_var('func_1299')
var_1301 = relay.var("var_1301", dtype = "uint8", shape = (14, 10, 16))#candidate|1301|(14, 10, 16)|var|uint8
var_1302 = relay.var("var_1302", dtype = "uint8", shape = (14, 10, 16))#candidate|1302|(14, 10, 16)|var|uint8
call_1300 = func_1299_call(var_1301,var_1302,)
output = call_1300
func_1303 = relay.Function([var_1301,var_1302,], output)
mutated_mod['func_1303'] = func_1303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1346 = relay.var("var_1346", dtype = "float64", shape = (15, 1, 13))#candidate|1346|(15, 1, 13)|var|float64
uop_1347 = relay.atan(var_1346.astype('float64')) # shape=(15, 1, 13)
var_1350 = relay.var("var_1350", dtype = "float64", shape = (15, 7, 13))#candidate|1350|(15, 7, 13)|var|float64
bop_1351 = relay.logical_or(uop_1347.astype('bool'), var_1350.astype('bool')) # shape=(15, 7, 13)
func_1299_call = mod.get_global_var('func_1299')
func_1303_call = mutated_mod.get_global_var('func_1303')
const_1363 = relay.const([[3,-5,-1,3,-5,8,-6,8,9,-3,10,-7,10,2,2,-8,5,1,10,-9,-5,-3,-5,-6,10,9,1,-4,2,4,-5,8,-8,5,-6,-4,-3,-1,7,-3,9,8,-10,3,-8,7,-9,-5,-5,-6,-5,2,-7,-6,-2,-5,3,-1,8,6,-8,1,-7,6,-5,4,3,9,3,-6,8,-6,-5,-5,-8,10,3,5,8,-5,4,-4,-9,6,-10,-5,-6,-9,-7,-5,-7,-2,6,4,1,-6,1,9,-5,-10,-9,-3,-7,7,9,10,7,-6,-1,5,-10,-6,-1,10,2,-10,6,-8,-10,-8,7,4,-2,-4,-3,-5,-10,-5,-8,8,5,-4,3,-6,7,1,4,7,-10,-8,-2,7,6,4,4,-3,-9,-2,9,7,-5,-1,6,4,-8,8,-5,-1,-6,2,-6,1,-4,-2,-4,-10,-9,-8,8,2,2,6,-6,8,-2,2,-7,-7,-7,-5,-10,-9,-5,-6,9,-7,-8,10,-1,-6,9,3,10,-9,1,-7,9,9,-3,5,3,-2,-6,-6,1,10,-9,-7,4,-3,10,-7,-6,-2,-3,10,10,8,-6,-5,-6,6,9,-2,9,-2,-7,-9,7,-1,-10,-6,-3,-10,-1,-6,1,2,-7,-5,-4,-7,-5,-2,-10,3,-4,-4,-3,7,-9,-3,-5,10,-1,-8,1,-6,6,9,10,7,10,2,6,-9,2,-3,9,9,-8,5,-6,6,-8,7,-8,4,8,3,-7,6,6,-6,-5,-5,4,4,2,2,-6,9,-3,-2,-1,2,-1,5,2,-4,-6,1,10,2,7,1,-10,7,-3,4,-8,-10,-9,-6,-8,-1,9,6,9,-1,-1,10,-5,7,-8,2,1,4,-8,-2,-3,1,-5,1,-5,10,9,9,9,-1,-7,4,4,-10,10,-7,5,3,4,-5,10,-9,9,10,2,-4,4,-10,6,9,10,-7,5,-6,-7,2,-10,4,-6,5,8,10,-9,-8,-8,1,6,-6,9,2,5,-3,4,4,4,2,1,1,2,-5,10,-2,-3,7,-10,-7,-2,2,10,8,5,5,3,6,-9,10,6,-4,-10,-10,-2,9,-9,-2,7,2,-1,2,5,1,-10,1,-3,-2,10,5,-10,5,-7,8,-8,-8,9,3,9,-6,-5,2,6,10,7,-5,2,-6,-9,-3,-9,6,-10,-10,4,-5,-6,4,-2,-7,10,7,4,-10,-10,-9,-3,-6,5,1,3,8,-4,1,-7,-6,2,8,7,-8,1,7,-4,5,9,9,-4,3,-9,6,5,-4,7,5,-2,-2,-2,-4,-4,-6,-7,-6,1,-10,6,-6,-10,-9,2,3,-9,-6,-6,9,-9,4,9,-10,-9,-1,-8,7,-9,7,2,-5,4,4,-10,-1,-10,-9,-5,9,9,1,9,7,6,-9,-5,1,-6,1,-10,8,-9,8,6,-10,-9,6,10,-6,-9,-5,9,-4,-1,-2,-9,-8,9,-2,3,-2,4,-10,3,-9,1,7,-9,7,-7,-8,1,-5,-4,-7,-1,-7,9,7,3,2,-1,-8,-1,-10,-5,-5,6,9,8,-5,5,4,-1,-5,9,2,8,2,-4,8,-1,-8,-4,5,10,-3,-5,-10,9,3,-3,-10,3,-10,4,-6,10,2,-10,-8,-8,-9,7,1,5,6,9,8,-9,10,-8,-10,2,-6,8,5,4,-3,3,9,-8,-5,2,-10,6,6,-10,-4,-8,-5,4,-6,-5,-1,1,-6,6,7,-7,-1,-10,-6,-5,3,1,-10,9,5,-5,4,-6,-6,-4,-2,-3,-3,-10,-3,1,8,5,9,6,-2,10,-8,8,1,-10,-6,-6,5,-10,-2,-6,5,10,7,-7,6,5,-4,-9,-7,-7,-1,-4,8,-7,-4,-3,-6,10,9,-2,-5,-1,2,-3,9,1,-1,-6,-8,-1,10,1,5,9,9,10,-10,2,-1,10,2,-9,6,-4,-2,7,9,8,-9,9,-10,-3,-10,-10,-7,2,-2,4,8,-2,-5,2,9,9,7,-6,-6,5,4,-10,6,2,-5,-7,6,-5,10,-4,-7,7,-10,-9,1,-4,-1,-6,8,-8,6,-6,-5,-3,8,6,-10,-7,5,7,-4,-1,-7,4,8,-8,7,9,3,-9,-9,4,7,10,-9,-7,9,-8,8,-4,5,-1,4,-4,-1,-9,7,10,7,5,-6,-1,-2,-3,-2,-7,7,-9,9,9,8,2,3,1,-1,-8,-9,-2,-7,-3,2,-5,-1,9,10,2,7,-5,-6,-10,3,4,6,-4,10,1,-1,-10,-3,-2,8,10,10,8,2,-2,8,6,1,5,1,-5,4,-3,-4,-7,3,-2,3,-6,7,-9,-4,-9,8,8,1,10,-9,-10,1,7,-7,4,8,6,-10,2,-1,-10,-4,8,4,-3,-4,5,-2,-9,1,8,5,-7,-10,-10,-8,2,1,-1,10,7,5,-9,-6,6,2,-9,10,4,2,3,-4,-6,-6,1,9,2,-2,2,1,-7,6,2,1,7,9,7,-4,-2,10,-8,1,-6,1,3,8,5,-8,-9,2,-6,6,6,-6,10,-2,-4,8,-8,-8,9,4,9,10,3,-3,-2,-4,-9,-9,-4,-9,5,-10,4,-5,3,6,1,1,-7,5,-3,10,-9,1,1,4,5,9,10,-2,-3,-9,4,10,-4,3,-6,-7,3,8,10,-1,4,6,-6,-10,-9,-5,7,-6,-2,8,1,3,-5,-1,-1,-2,4,2,6,-3,1,10,5,10,-5,7,6,-2,-9,8,5,8,7,1,3,10,2,-3,6,-8,4,6,5,2,1,5,-9,-7,-2,4,2,9,-6,5,-10,4,8,5,-10,-7,-9,8,5,6,4,5,4,2,-10,1,-9,3,6,1,7,6,-10,3,10,7,1,-9,-7,4,-7,-5,-1,4,-8,-3,2,-2,4,10,-7,7,8,-5,-7,10,4,-2],[8,4,10,-3,-5,-5,-2,-2,-1,-9,4,-3,10,7,-1,-3,-5,-4,-2,-9,2,7,-2,-5,7,1,-5,-4,-10,-3,2,-9,-10,-3,-2,1,-10,-9,7,-5,-7,10,3,-9,7,-5,7,-5,8,3,-2,-5,-3,5,8,6,6,-7,2,-3,9,7,3,5,9,1,-2,-4,-1,-5,-6,-4,1,-5,-5,-1,8,10,-7,5,5,-7,-4,-2,-7,6,9,10,-9,-10,-5,1,-8,-7,8,-3,9,9,-9,10,7,-1,-6,-4,-6,-1,9,6,-5,-4,-8,5,5,3,-5,1,-1,-8,-3,-3,-1,2,6,-7,3,-3,8,-8,-4,-8,4,-2,-10,-3,5,2,10,-5,-1,9,-6,5,-2,9,-4,6,-6,4,-9,1,-4,-1,6,-3,10,3,6,-4,-2,6,-1,5,-1,5,7,3,8,6,-9,3,2,-9,-5,-7,-5,-3,5,2,-9,5,3,-7,-3,-7,3,6,-7,4,-6,-8,-5,-5,-7,6,6,-1,-3,-1,5,-1,-9,4,1,-7,2,-10,-4,-7,6,8,7,2,-10,-6,-9,3,-7,-4,-8,7,-6,-5,4,3,5,1,-1,-2,5,5,-9,4,9,4,8,-7,10,5,6,-3,9,5,-8,2,6,-7,-10,-9,-8,-8,6,-1,9,-10,5,-8,-1,6,-9,-3,6,2,-3,-4,-5,7,8,-8,5,-2,3,-7,-4,-6,-3,-9,-10,-4,-1,-4,-3,-10,1,7,-7,-8,-10,7,-2,-6,1,-4,8,4,8,-8,8,-1,-5,5,-1,2,-10,7,1,6,1,-3,-8,8,4,9,3,1,10,2,10,5,5,3,5,8,-9,-5,-7,-5,9,2,-5,2,8,-9,9,10,3,-10,3,4,-8,-9,2,-5,-7,4,2,7,1,-10,-7,-2,6,-1,-9,-10,-4,3,10,-6,7,-9,6,-10,-10,-7,3,-1,1,-7,-9,-9,-6,8,2,-3,5,-9,7,-10,-2,-6,-6,5,1,2,-8,2,3,10,-5,4,6,-1,-5,-10,7,1,4,-5,-7,-2,5,-9,-3,6,3,-8,-5,1,-9,6,-6,-1,2,-5,10,6,-1,-8,3,4,3,-6,-10,-8,-8,7,1,4,4,4,7,3,-4,-4,-2,4,10,-6,7,-1,6,8,-8,3,-2,-7,-7,-8,-9,2,1,-9,-8,-5,-6,-9,-6,2,-1,-5,-3,3,3,3,-4,-7,10,7,-10,-2,-9,-1,-10,-9,9,4,-10,-2,-8,7,9,-6,10,7,-8,-6,-2,3,1,4,10,2,7,-3,8,-5,-5,-5,6,5,-1,-2,8,-6,9,-1,-10,-9,6,1,1,10,-9,-1,5,1,-6,10,10,5,9,-10,-8,5,-10,-7,-4,-7,9,10,-3,-1,-3,3,8,5,-3,-6,4,4,-10,7,5,9,-3,8,-9,6,-10,7,8,-5,9,-3,-7,-10,-7,2,-10,-6,9,2,-2,10,-9,10,-3,10,10,-8,10,3,3,-9,-6,8,8,-3,-8,2,2,-5,-9,-8,10,-6,-1,10,-6,-9,-4,8,-6,-4,-6,2,-8,-4,3,8,7,6,2,-4,-6,1,-1,-4,3,-1,-4,-8,1,-9,-7,10,10,-4,1,-3,2,-9,-6,-1,-2,-8,7,-9,10,-5,-7,-1,-10,-1,4,9,1,-10,-2,-6,3,-1,9,-9,7,6,-8,3,3,-8,-10,-4,5,-8,4,1,5,8,-1,-5,-2,6,-7,7,-3,-8,1,3,-5,-3,2,-6,8,-3,2,1,8,-5,4,-6,6,9,-5,5,3,8,-4,4,-10,-4,4,6,3,-6,3,6,-7,1,7,-3,4,8,8,3,-7,-10,-2,-3,-10,-2,3,6,-2,2,-1,-2,6,6,-1,2,5,1,8,2,4,-3,-1,7,-4,-5,-5,3,-8,-5,-9,9,1,-1,5,-9,7,-8,-10,4,-5,2,-7,-1,-5,7,5,8,-7,7,4,3,-9,-2,5,5,-6,-7,-2,-9,7,1,-2,-10,-9,3,2,-5,-6,-9,2,10,-1,-2,-7,1,8,6,2,1,2,5,1,-6,-8,7,-9,9,-5,-4,-3,-4,1,-1,7,-6,-7,6,2,4,-7,9,9,7,-8,-6,-7,2,-2,5,-4,-2,-4,8,10,-6,-6,-2,-5,-8,-9,-6,5,-8,-10,8,-4,6,9,-1,-9,-6,4,-9,-7,1,-1,6,-4,5,-5,-1,-7,4,2,-7,-6,3,2,-8,1,9,-6,-10,-7,-6,1,-1,4,-4,-5,-7,-3,1,-4,-6,-8,-7,-8,-5,-1,9,-6,-8,-10,-7,3,-5,6,-4,5,-5,7,-7,8,-1,-1,-1,-3,-9,3,-7,2,7,-10,-10,2,-7,-7,3,-6,-6,-9,6,-10,-4,-1,-1,4,2,-8,-10,8,-9,-2,2,-1,5,-5,-1,-5,8,-7,-10,-9,-7,-5,-7,-6,9,3,6,-10,-3,3,10,10,-6,10,-9,10,-4,-5,-9,-1,9,-10,7,7,4,5,-9,-5,1,-5,-2,8,-10,-1,4,-7,-6,-7,6,-5,7,8,3,3,9,-6,-2,9,7,-3,1,-3,7,-2,-5,7,4,-8,-7,3,-8,6,-3,-10,-4,1,-2,-4,2,6,-10,-9,-6,-3,7,-10,-7,3,-3,10,7,-5,-4,2,5,-7,-10,-9,-3,-1,10,-5,10,-7,-2,-10,-8,2,6,-2,-1,-3,-3,-7,-7,-9,2,6,-4,4,-1,9,-1,-5,-2,-5,-4,-3,-5,7,1,-10,10,6,2,1,6,5,8,6,5,-4,4,-9,-10,-10,2,5,-8,7,-10,-3,8,-8,8,-10,-7,-5,4,7,-10,-4,-9,-6,9,-6,4,7,-9,-2,-9,1,7,-5,8,4,1,2,-8,-6,4,5,-3,-3,9,9,-10,-4,-6,9,-10,-4,2,10,4,4,-10,-9,-5,-7,-10]], dtype = "uint8")#candidate|1363|(2, 1120)|const|uint8
call_1362 = relay.TupleGetItem(func_1299_call(relay.reshape(const_1363.astype('uint8'), [14, 10, 16]), relay.reshape(const_1363.astype('uint8'), [14, 10, 16]), ), 1)
call_1364 = relay.TupleGetItem(func_1303_call(relay.reshape(const_1363.astype('uint8'), [14, 10, 16]), relay.reshape(const_1363.astype('uint8'), [14, 10, 16]), ), 1)
func_960_call = mod.get_global_var('func_960')
func_964_call = mutated_mod.get_global_var('func_964')
call_1372 = func_960_call(relay.reshape(call_1362.astype('uint16'), [7, 2, 11]), relay.reshape(call_1362.astype('uint16'), [7, 2, 11]), )
call_1373 = func_960_call(relay.reshape(call_1362.astype('uint16'), [7, 2, 11]), relay.reshape(call_1362.astype('uint16'), [7, 2, 11]), )
var_1377 = relay.var("var_1377", dtype = "float64", shape = (15, 3, 13))#candidate|1377|(15, 3, 13)|var|float64
bop_1378 = relay.divide(uop_1347.astype('float32'), var_1377.astype('float32')) # shape=(15, 3, 13)
uop_1385 = relay.asin(bop_1378.astype('float64')) # shape=(15, 3, 13)
var_1398 = relay.var("var_1398", dtype = "float64", shape = (15, 3, 13))#candidate|1398|(15, 3, 13)|var|float64
bop_1399 = relay.greater(uop_1385.astype('bool'), relay.reshape(var_1398.astype('bool'), relay.shape_of(uop_1385))) # shape=(15, 3, 13)
output = relay.Tuple([bop_1351,call_1362,const_1363,call_1372,bop_1399,])
output2 = relay.Tuple([bop_1351,call_1364,const_1363,call_1373,bop_1399,])
func_1409 = relay.Function([var_1346,var_1350,var_1377,var_1398,], output)
mod['func_1409'] = func_1409
mod = relay.transform.InferType()(mod)
var_1410 = relay.var("var_1410", dtype = "float64", shape = (15, 1, 13))#candidate|1410|(15, 1, 13)|var|float64
var_1411 = relay.var("var_1411", dtype = "float64", shape = (15, 7, 13))#candidate|1411|(15, 7, 13)|var|float64
var_1412 = relay.var("var_1412", dtype = "float64", shape = (15, 3, 13))#candidate|1412|(15, 3, 13)|var|float64
var_1413 = relay.var("var_1413", dtype = "float64", shape = (15, 3, 13))#candidate|1413|(15, 3, 13)|var|float64
output = func_1409(var_1410,var_1411,var_1412,var_1413,)
func_1414 = relay.Function([var_1410,var_1411,var_1412,var_1413,], output)
mutated_mod['func_1414'] = func_1414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1592 = relay.var("var_1592", dtype = "float64", shape = (2, 13, 7))#candidate|1592|(2, 13, 7)|var|float64
uop_1593 = relay.sqrt(var_1592.astype('float64')) # shape=(2, 13, 7)
uop_1605 = relay.log10(uop_1593.astype('float64')) # shape=(2, 13, 7)
uop_1608 = relay.log2(uop_1605.astype('float32')) # shape=(2, 13, 7)
output = uop_1608
output2 = uop_1608
func_1617 = relay.Function([var_1592,], output)
mod['func_1617'] = func_1617
mod = relay.transform.InferType()(mod)
mutated_mod['func_1617'] = func_1617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1618 = relay.var("var_1618", dtype = "float64", shape = (2, 13, 7))#candidate|1618|(2, 13, 7)|var|float64
func_1617_call = mutated_mod.get_global_var('func_1617')
call_1619 = func_1617_call(var_1618)
output = call_1619
func_1620 = relay.Function([var_1618], output)
mutated_mod['func_1620'] = func_1620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1766 = relay.var("var_1766", dtype = "float32", shape = (4, 13, 5))#candidate|1766|(4, 13, 5)|var|float32
uop_1767 = relay.rsqrt(var_1766.astype('float32')) # shape=(4, 13, 5)
output = uop_1767
output2 = uop_1767
func_1769 = relay.Function([var_1766,], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
mutated_mod['func_1769'] = func_1769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1770 = relay.var("var_1770", dtype = "float32", shape = (4, 13, 5))#candidate|1770|(4, 13, 5)|var|float32
func_1769_call = mutated_mod.get_global_var('func_1769')
call_1771 = func_1769_call(var_1770)
output = call_1771
func_1772 = relay.Function([var_1770], output)
mutated_mod['func_1772'] = func_1772
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1918 = relay.var("var_1918", dtype = "int32", shape = (16, 11, 16))#candidate|1918|(16, 11, 16)|var|int32
var_1919 = relay.var("var_1919", dtype = "int32", shape = (16, 11, 16))#candidate|1919|(16, 11, 16)|var|int32
bop_1920 = relay.subtract(var_1918.astype('int32'), relay.reshape(var_1919.astype('int32'), relay.shape_of(var_1918))) # shape=(16, 11, 16)
bop_1923 = relay.left_shift(bop_1920.astype('uint32'), relay.reshape(var_1918.astype('uint32'), relay.shape_of(bop_1920))) # shape=(16, 11, 16)
output = relay.Tuple([bop_1923,])
output2 = relay.Tuple([bop_1923,])
func_1926 = relay.Function([var_1918,var_1919,], output)
mod['func_1926'] = func_1926
mod = relay.transform.InferType()(mod)
var_1927 = relay.var("var_1927", dtype = "int32", shape = (16, 11, 16))#candidate|1927|(16, 11, 16)|var|int32
var_1928 = relay.var("var_1928", dtype = "int32", shape = (16, 11, 16))#candidate|1928|(16, 11, 16)|var|int32
output = func_1926(var_1927,var_1928,)
func_1929 = relay.Function([var_1927,var_1928,], output)
mutated_mod['func_1929'] = func_1929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2035 = relay.var("var_2035", dtype = "float64", shape = (9, 6, 5))#candidate|2035|(9, 6, 5)|var|float64
uop_2036 = relay.sinh(var_2035.astype('float64')) # shape=(9, 6, 5)
output = uop_2036
output2 = uop_2036
func_2041 = relay.Function([var_2035,], output)
mod['func_2041'] = func_2041
mod = relay.transform.InferType()(mod)
var_2042 = relay.var("var_2042", dtype = "float64", shape = (9, 6, 5))#candidate|2042|(9, 6, 5)|var|float64
output = func_2041(var_2042)
func_2043 = relay.Function([var_2042], output)
mutated_mod['func_2043'] = func_2043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2200 = relay.var("var_2200", dtype = "float64", shape = (12, 4, 9))#candidate|2200|(12, 4, 9)|var|float64
uop_2201 = relay.sin(var_2200.astype('float64')) # shape=(12, 4, 9)
func_703_call = mod.get_global_var('func_703')
func_710_call = mutated_mod.get_global_var('func_710')
var_2205 = relay.var("var_2205", dtype = "uint8", shape = (48, 1))#candidate|2205|(48, 1)|var|uint8
var_2206 = relay.var("var_2206", dtype = "uint8", shape = (288,))#candidate|2206|(288,)|var|uint8
const_2207 = relay.const([3,-7,-10,-5,4,8,-7,1,-6,-3,-10,5,-5,-1,3,3,9,-6,6,4,5,6,-6,-4,-8,5,3,5,6,2,9,7,5,9,-3,9,-4,10,2,6,2,-9,1,2,8,-7,9,-7,7,4,-8,8,10,5,5,-5,3,1,-9,-1,8,6,-4,-2,10,1,-10,1,10,-5,7,1,3,-6,-6,9,-7,-9,-9,-1,6,-6,-2,8,5,6,-3,-4,8,1,6,-8,-7,3,-10,7,-10,-4,-2,-6,-6,-10,7,7,1,1,-8,-2,6,4,-2,1,4,4,-8,4,3,2,8,-7,-7,-8,-7,-1,6,10,6,1,7,-7,-6,-8,7,-8,1,-7,4,-1,-6,6,10,3,9,6,-9,-2,6,-3,2,-9,9,-9,-1,-5,-5,-10,-9,10,7,4,9,-1,6,7,7,10,1,-8,2,-1,6,-3,-6,-1,-9,9,10,4,-5,-5,8,-8,-3,-3,-2,3,8,3,8,-7,10,4,5,8,-8,2,-6,-7,7,-5,4,6,-3,8,-2,6,-10,-2,10,-4,-4,-4,-7,1,-1,-2,6,9,-5,-1,-1,-9,-9,7,-4,8,7,8,5,7,-8,10,-7,3,7,10,-3,10,-1,-1,-6,-1,-5,9,8,5,-5,2,-6,-3,-9,1,-2,-3,-8,8,-7,8,-9,1,3,5,-1,-7,2,-9,4,4,-3,-9,-5,-4,9,6,9,7,-3,9,9,-10,7,-5,-3,7,8,-8,4,-7,6,-10,1,6,-2,-6,2,-6,-9,-9,10,10,-3,-2,2,1,3,2,1,-7,-4,5,-3,6,2,4,-3,-1,-5,-5,-4,-5,-2,-2,7,-7,2,-9,-3,-7,-10,4,-9,10,-7,1,5,-8,-2,-9,10,4,-6,-7,7,3,-6,1,-3,9,9,-1,5,1,-2,10,6,5,6,2,-7,1,1,1,4,-4,-10,-7,-6,6,-9,-1,-10,-7,-8,2,-4,-1,4,7,-1,-10,5,10,8,-1,-2,-1,7,-1,-9,-2,-5,-7,4,6,4,8,7,-3,4,1,-4,-10,-4,-8,3,5,-3,-6,6,-6,-10,-2,-2,2,-8,-4,7,5,-5,2,3,8,10,4,-6,8,5,-4,6,-7,-9,9,4,-7,7,7,-9,-7,-8,6,-1,3,4,-7,3,5,2,8,-7,5,4,-3,8,1,1,2,-2,10,-2,6,-8,7,-4,7,2,5,-5,-9,10,-9,-9,-5,-7,9,-1,-7,8,2,-1,-5,-1,6,-9,-7,7,10,-10,-9,1,6,-4,2,7,4,-2,-8,9,9,3,9,-3,-7,5,9,5,7,-8,-9,-6,2,6,-1,8,-5,5,10,-4,-10,-3,4,-4,-7,-3,-7,1,-6,-1,-2,-8,-9,-2,10,6,-4,9,-6,2,-5,-10,-5,-4,-10,10,4,-10,9,-10,7,-1,4,10,2,3,-8,-2,6,3,-8,9,-1,5,-10,-10,-10,9,-10,-3,-2,2,9,-2,-7,-2,-10,-9,1,-10,6,9,3,-9,8,7,-8,7,-4,-4,-6,8,-1,-6,10,5,-7,3,4,-5,3,10,3,-1,-10,10,3,-3,-6,9,6,3,10,-5,7,7,-2,-1,6,-3,-7,4,2,6,-6,-3,1,-8,-9,5,3,-6,-9,-1,9,3,7,-7,7,-5,2,-7,-4,-2,-8,-1,-9,5,5,4,9,1,-9,3,6,6,7,-9,-8,6,-7,8,-5,3,8,4,-7,3,5,-1,-5,-7,2,-5,-6,-8,-7,9,9,2,9,7,10,3,10,-6,-3,-9,-6,5,3,-5,8,-4,5,-6,-1,2,7,-9,-1,1,-6,9,5,8,-5,-10,-6,-2,10,5,3,7,7,6,-10,4,-7,10,4,10,10,4,4,-6,4,-10,-3,8,10,9,-8,6,3,5,-5,-7,-5,-2,7,-7,-1,9,-1,-5,-8,3,-5,-3,-8,-8,-5,9,-7,1,10,6,-3,7,-1,-7,7,9,10,2,10,10,-8,5,9,-1,4,-10,4,2,-10,-8,-2,10,-7,-9,-4,-2,9,10,-5,-7,-10,-7,6,2,10,-6,-5,4,9,-10,-4,7,-2,-1,10,6,-7,-4,2,-3,-6,-7,-3,4,6,-9,8,6,-5,-7,-7,6,-3,10,-8,8,-2,-6,5,9,4,4,5,2,-6,-6,-1,8,-5,-1,-1,-7,-5,-10,-3,-4,8,-8,9,-3,-2,-10,3,9,8,1,1,4,10,-6,4,1,9,5,1,3,-8,8,-2,-7,9,2,5,5,2,10,3,-6,-3,10,-8,9,7,7,-4,-2,2,2,1,-5,-1,9,-8,-8,-5,-5,5,-8,1,4,10,8,-1,1,10,-7,3,-8,-10,-4,-7,7,-4,6,10,1,-5,4,-9,-2,-1,3,2,8,8,-6,-2,-6,-7,2,-2,1,-1,-5,-10,-3,-5,-6,6,10,8,8,8,8,6,-5,2,6,-1,-6,-10,-9,-3,-2,10,2,8,10,4,1,8,8,4,-5,-9,-3,10,-3,-8,6,7,-10,8,10,7,-1,9,-7,7,5,3,-4,1,-9,-2,-1,-3,-7,10,-2,-1,4,-6,5,2,-9,10,-9,-3,-2,-3,6,-3,-8,10,-9,-5,-3,1,6,7,-10,1,10,8,-8,4,-9,-7,-9,7,10,-1,4,-2,-7,6,-6,7,-8,7,-7,10,-7,5,5,-5,5,-1,-10,-7,-10,6,-9,-3,9,-3,-2,-4,-1,6,-10,-5,9,-2,-7,-9,4,-4,-8,10,-8,4,7,8,7,-5,4,-2,4,-3,-4,9,-8,1,-1,-3,-5,8,5,9,1,-8,4,10,-3,10,-5,-5,1,9,8,-2,9,6,-9,5,-9,-4,3,2,9,3,-8,-9,6,-4,1,1,7,5,2,-5,-3,3,-7,3,-6,1,7,-4,9,-9,-3,10,6,7,5,9,5,5,-9,-7,5,9,-8,-4,1,7,4,4,-5,9,5,10,-2,-9,5,7,3,-3,9,10,-3,-3,-8,-6,-10,-5,-5,-2,-1,-9,8,-8,4,-6,9,2,-6,-8,2,7,10,-6,8,3,2,6,10,2,5,6,5,5,-4,6,-8,-9,-7,-3,-2,2,10,3,2,-3,-5,-1,8,-2,1,-8,10,-7,-10,-2,9,-8,4,9,1,4,-1,-6,3,9,3,2,5,-2,4,-1,2,1,5,3,-4,-1,2,-3,-5,-10,2,-4,5,-3,-4,9,-6,-1,2,6,-8,10,4,6,8,8,2,-8,-1,-4,-9,-8,-7,7,-2,-7,10,2,-3,-3,-6,2,6,5,-4,2,-3,-10,1,10,-8,6,4,-4,-6,-7,-10,2,-2,-5,5,-10,10,-9,-7,4,5,5,-8,6,6,8,-6,-3,-7,-5,-4,3,6,4,-10,-9,8,6,-5,-10,8,6,-10,2,-7,-2,-3,6,-6,3,1,-4,-9,7,-3,-2,6,-6,-1,4,7,-3,-2,2,-1,7,-8,-3,9,1,-6,6,-3,6,3,3,7,-2,5,8,-10,8,-4,-5,10,7,-10,-7,5,8,5,-10,7,1,8,8,2,6,-6,9,8,1,8,1,-1,-3,-2,9,7,-1,-9,2,6,7,10,9,3,6,-10,-9,7,9,7,1,8,-10,3,-8,10,3,3,-8,6,10,-10,-8,2,-8,-5,-4,3,10,6,6,-3,-5,-3,-5,-6,6,3,-7,-1,-4,6,-1,-2,4,9,3,9,10,-5,-2,9,9,1,-7,-2,1,10,6,3,7,10,-5,2,-10,10,7,9,1,3,4,-2,-3,7,2,9,-1,3,-7,-1,9,-10,-3,4,1,-4,3,10,-8,-3,-4,-2,-1,-10,10,-7,5,7,6,-1,-9,2,5,-7,-8,5,-5,6,4,4,9,2,9,-1,-3,4,1,3,9,-9,2,-8,3,-1,-9,-10,6,-2,3,2,10,-7,3,7,10,10,1,7,1,10,6,-8,-4,-9,-6,1,6,-6,-8,4,10,9,9,5,7,10,7,-6,-10,6,-8,3,6,5,-4,-1,-3,4,-10,4,6,3,-3,4,5,-3,-10,-7,6,8,2,-2,4,9,-9,-1,8,-10,-2,8,6,-10,-6,1,-10,-1,2,7,3,8,-8,7,-5,-9,-1,6,-8,4,-3,7,-7,6,-4,-3,-9,-1,4,-7,4,5,4,-7,-8,-6,7,4,2,3,-5,4,-1,-2,-2,-3,-6,-6,-10,1,-3,10,-10,5,-6,-9,7,4,-10,-3,7,1,-6,4,-9,5,1,1,2,3,-4,-9,-8,1,3,-2,-1,4,1,5,-2,-9,6,4,8,5,10,5,9,5,3,2,2,1,-5,-1,-9,-10,2,2,-9,-4,-1,8,6,-1,3,-2,1,-8,2,-1,-2,5,-5,6,3,5,-8,5,-8,-2,10,-8,7,-5,-5,-9,9,3,-10,8,-8,9,-7,1,-1,-8,4,1,-4,-2,7,8,-5,10,1,-1,2,-8,-4,-4,-9,-5,-2,8,-7,5,-2,-1,-5,4,-10,6,5,-1,-2,-4,-1,5,7,7,4,9,-6,-6,-1,6,5,3,7,-9,-9,9,-3,-3,-10,6,4,-1,-6,-1,7,-8,3,-4,-5,7,-7,-6,-1,-1,-9,4,-4,6,-3,-9,-6,5,-10,8,-4,-1,-1,1,6,-2,1,-10,2,7,3,-8,-4,-8,3,-10,-3,8,-8,8,1,10,-8], dtype = "uint32")#candidate|2207|(1800,)|const|uint32
var_2208 = relay.var("var_2208", dtype = "float64", shape = (150,))#candidate|2208|(150,)|var|float64
call_2204 = relay.TupleGetItem(func_703_call(relay.reshape(var_2205.astype('uint8'), [1, 16, 3]), relay.reshape(var_2206.astype('uint8'), [6, 16, 3]), relay.reshape(var_2206.astype('bool'), [6, 16, 3]), relay.reshape(const_2207.astype('uint32'), [1800,]), relay.reshape(var_2208.astype('float64'), [1, 150]), ), 2)
call_2209 = relay.TupleGetItem(func_710_call(relay.reshape(var_2205.astype('uint8'), [1, 16, 3]), relay.reshape(var_2206.astype('uint8'), [6, 16, 3]), relay.reshape(var_2206.astype('bool'), [6, 16, 3]), relay.reshape(const_2207.astype('uint32'), [1800,]), relay.reshape(var_2208.astype('float64'), [1, 150]), ), 2)
output = relay.Tuple([uop_2201,call_2204,var_2205,var_2206,const_2207,var_2208,])
output2 = relay.Tuple([uop_2201,call_2209,var_2205,var_2206,const_2207,var_2208,])
func_2210 = relay.Function([var_2200,var_2205,var_2206,var_2208,], output)
mod['func_2210'] = func_2210
mod = relay.transform.InferType()(mod)
var_2211 = relay.var("var_2211", dtype = "float64", shape = (12, 4, 9))#candidate|2211|(12, 4, 9)|var|float64
var_2212 = relay.var("var_2212", dtype = "uint8", shape = (48, 1))#candidate|2212|(48, 1)|var|uint8
var_2213 = relay.var("var_2213", dtype = "uint8", shape = (288,))#candidate|2213|(288,)|var|uint8
var_2214 = relay.var("var_2214", dtype = "float64", shape = (150,))#candidate|2214|(150,)|var|float64
output = func_2210(var_2211,var_2212,var_2213,var_2214,)
func_2215 = relay.Function([var_2211,var_2212,var_2213,var_2214,], output)
mutated_mod['func_2215'] = func_2215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2243 = relay.var("var_2243", dtype = "float64", shape = (3, 13, 12))#candidate|2243|(3, 13, 12)|var|float64
uop_2244 = relay.asinh(var_2243.astype('float64')) # shape=(3, 13, 12)
uop_2256 = relay.exp(var_2243.astype('float32')) # shape=(3, 13, 12)
func_1096_call = mod.get_global_var('func_1096')
func_1099_call = mutated_mod.get_global_var('func_1099')
var_2273 = relay.var("var_2273", dtype = "float64", shape = (1680,))#candidate|2273|(1680,)|var|float64
call_2272 = func_1096_call(relay.reshape(var_2273.astype('float64'), [15, 7, 16]))
call_2274 = func_1096_call(relay.reshape(var_2273.astype('float64'), [15, 7, 16]))
output = relay.Tuple([uop_2244,uop_2256,call_2272,var_2273,])
output2 = relay.Tuple([uop_2244,uop_2256,call_2274,var_2273,])
func_2278 = relay.Function([var_2243,var_2273,], output)
mod['func_2278'] = func_2278
mod = relay.transform.InferType()(mod)
mutated_mod['func_2278'] = func_2278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2278_call = mutated_mod.get_global_var('func_2278')
var_2280 = relay.var("var_2280", dtype = "float64", shape = (3, 13, 12))#candidate|2280|(3, 13, 12)|var|float64
var_2281 = relay.var("var_2281", dtype = "float64", shape = (1680,))#candidate|2281|(1680,)|var|float64
call_2279 = func_2278_call(var_2280,var_2281,)
output = call_2279
func_2282 = relay.Function([var_2280,var_2281,], output)
mutated_mod['func_2282'] = func_2282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2284 = relay.var("var_2284", dtype = "float32", shape = (13, 12, 11))#candidate|2284|(13, 12, 11)|var|float32
uop_2285 = relay.cos(var_2284.astype('float32')) # shape=(13, 12, 11)
uop_2297 = relay.sin(uop_2285.astype('float64')) # shape=(13, 12, 11)
bop_2299 = relay.minimum(uop_2285.astype('int16'), relay.reshape(uop_2297.astype('int16'), relay.shape_of(uop_2285))) # shape=(13, 12, 11)
output = relay.Tuple([bop_2299,])
output2 = relay.Tuple([bop_2299,])
func_2305 = relay.Function([var_2284,], output)
mod['func_2305'] = func_2305
mod = relay.transform.InferType()(mod)
mutated_mod['func_2305'] = func_2305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2306 = relay.var("var_2306", dtype = "float32", shape = (13, 12, 11))#candidate|2306|(13, 12, 11)|var|float32
func_2305_call = mutated_mod.get_global_var('func_2305')
call_2307 = func_2305_call(var_2306)
output = call_2307
func_2308 = relay.Function([var_2306], output)
mutated_mod['func_2308'] = func_2308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2342 = relay.var("var_2342", dtype = "float64", shape = (11, 15, 6))#candidate|2342|(11, 15, 6)|var|float64
uop_2343 = relay.log(var_2342.astype('float64')) # shape=(11, 15, 6)
output = relay.Tuple([uop_2343,])
output2 = relay.Tuple([uop_2343,])
func_2345 = relay.Function([var_2342,], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
var_2346 = relay.var("var_2346", dtype = "float64", shape = (11, 15, 6))#candidate|2346|(11, 15, 6)|var|float64
output = func_2345(var_2346)
func_2347 = relay.Function([var_2346], output)
mutated_mod['func_2347'] = func_2347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2374 = relay.var("var_2374", dtype = "float64", shape = (16, 15, 5))#candidate|2374|(16, 15, 5)|var|float64
uop_2375 = relay.cos(var_2374.astype('float64')) # shape=(16, 15, 5)
uop_2377 = relay.sigmoid(uop_2375.astype('float64')) # shape=(16, 15, 5)
func_960_call = mod.get_global_var('func_960')
func_964_call = mutated_mod.get_global_var('func_964')
var_2381 = relay.var("var_2381", dtype = "uint16", shape = (154,))#candidate|2381|(154,)|var|uint16
call_2380 = func_960_call(relay.reshape(var_2381.astype('uint16'), [7, 2, 11]), relay.reshape(var_2381.astype('uint16'), [7, 2, 11]), )
call_2382 = func_960_call(relay.reshape(var_2381.astype('uint16'), [7, 2, 11]), relay.reshape(var_2381.astype('uint16'), [7, 2, 11]), )
const_2389 = relay.const([[[-3.621784,-0.727052,-3.741317,5.767297,-6.487811],[7.646327,-7.049506,7.320137,2.913064,2.804895],[8.013036,9.403286,-1.150681,-7.155583,-8.456852],[-3.181043,1.316013,-6.750041,4.678018,1.514403],[4.534351,-2.071256,-2.215883,2.850056,-4.892808],[-6.616053,-4.539119,3.502333,0.059085,-3.800012],[2.436439,7.601543,2.383998,2.410389,7.307931],[0.724092,4.365606,-6.859864,3.590465,7.835998],[-7.173535,0.117180,8.282845,5.075014,-6.903602],[6.080811,-7.528480,-6.838917,-8.007978,-7.239988],[1.623836,-8.720501,-6.352330,-7.825632,-5.156011],[9.701542,-2.511837,1.948040,-6.330999,-8.054868],[2.201939,-1.519651,-3.888426,8.210493,-9.154867],[0.215896,1.180441,1.174013,-7.621965,5.190344],[9.366594,-9.491542,3.726045,-8.018270,-7.270956]],[[-5.154414,-6.050789,-7.466401,-8.166336,9.787305],[6.081639,-3.339818,6.566456,-9.719379,0.794250],[-5.186452,1.092697,-1.779590,1.586607,-1.557691],[-8.116983,0.865195,3.677230,2.770243,2.644288],[2.459798,0.166454,-4.141264,8.132491,8.725371],[-9.806793,6.293471,-3.317206,2.602809,-2.268381],[6.281366,-3.134077,6.065296,-6.820817,9.198051],[-8.008504,2.979338,-4.639092,-1.476682,-4.479114],[2.576884,6.282165,-4.451768,-2.075741,6.745391],[9.265783,0.745763,0.260003,-2.144352,-5.787363],[-9.817719,-8.620709,-1.868584,1.303844,-7.343838],[-7.003297,-3.705521,-9.195479,3.087368,-9.768583],[-3.572109,-9.329681,-8.415009,-6.686783,4.589285],[-3.575328,4.205493,4.057797,-5.479010,-9.310633],[1.716599,-2.692914,8.121629,-3.852189,4.203348]],[[3.773309,0.472219,-1.361028,-0.226131,-6.269896],[8.858471,5.926567,2.666600,-8.800554,7.296821],[-6.459231,-0.889653,-8.343745,3.003865,-2.226841],[-5.621748,-2.403014,2.492860,1.928332,-2.826569],[-8.433965,-8.794831,-2.002619,-8.277462,5.834719],[-9.281723,-8.589626,-3.989734,-4.980925,-3.506933],[8.993907,-9.826580,-5.708096,-5.489290,0.223541],[9.786394,-7.582875,4.722293,8.572501,3.558653],[8.937764,-7.724312,-2.077905,1.478532,-8.701762],[-5.708139,-2.495578,-1.434558,-4.237863,-6.340842],[7.027215,7.769849,0.543234,-4.259765,7.508385],[-1.708348,4.000361,-2.821530,3.407540,-0.660807],[2.651185,5.859096,-6.958803,-8.768100,-9.858690],[-2.430216,-6.450468,5.016395,1.093881,-2.853649],[-3.573066,5.089292,7.744024,1.007546,5.106075]],[[4.910392,-9.613799,-0.552562,-6.444051,-8.304215],[1.748173,-6.352614,-1.105915,-2.471658,2.630043],[-2.124956,4.421237,-0.666814,-4.056132,2.988342],[7.702759,-8.970505,-3.229487,-3.023537,-9.258772],[5.555855,-7.028879,1.472025,-3.652961,-1.131326],[2.575911,8.478375,-8.118391,0.477503,7.577140],[1.022468,2.298642,0.286622,-1.060897,-9.483964],[-5.325426,0.694257,2.274099,6.933818,-7.675678],[-8.524721,5.758558,-0.169532,1.736344,-5.249110],[-3.379529,3.062104,3.794270,2.785463,0.320551],[-3.933481,-6.194380,-3.843476,3.843280,9.743995],[4.071626,1.369235,2.541091,-7.014940,9.178007],[2.670463,-8.512677,-5.990339,3.033655,-2.244039],[7.221386,-5.633439,-6.666475,-3.290271,6.185845],[4.540664,4.733507,6.194380,-4.991330,9.456910]],[[-9.274758,3.823183,3.146383,-2.319327,-2.071936],[7.014163,-3.708723,4.019800,-0.338203,-1.450798],[6.390784,-0.624432,-1.795328,9.704019,-4.364901],[-3.329896,6.853506,8.808593,4.860588,-6.146720],[-3.990006,-1.897361,9.004252,4.789312,3.474151],[3.046634,5.201889,1.931964,8.502095,-3.147930],[8.051044,-2.876420,5.874070,1.777873,-8.163146],[-4.428529,-2.694045,0.460366,-6.427495,1.441880],[-3.013852,-2.291693,8.727469,6.858315,-3.987105],[-4.110032,-9.877694,-3.261521,-9.835533,1.637701],[4.589796,-4.814330,-8.966010,-6.787103,-9.059637],[-1.481811,-4.247650,6.251477,-7.060070,3.775548],[-6.707538,-6.795899,-6.433831,-1.950425,-9.029793],[4.936160,0.904311,1.393158,2.789258,-2.358248],[-1.392988,-7.061007,5.161677,-2.988294,-8.667884]],[[-9.301104,9.961141,-0.255476,-1.470007,-9.995958],[-8.636267,-5.080173,8.435910,7.996737,5.361942],[5.407111,-8.366251,7.313058,5.374473,2.219603],[9.342817,-4.778651,-2.843447,-2.402493,-1.029694],[6.601091,8.148386,-0.075872,-8.853516,8.874715],[-6.406544,0.336015,7.828813,-2.886252,-3.399991],[-9.267812,-3.430298,-2.107552,5.091632,9.972565],[9.679904,-7.839414,-6.964192,-2.382861,-5.924937],[1.970287,-9.151002,8.838681,6.794886,-6.397906],[5.025673,1.357379,4.395832,-7.440522,-4.059911],[-8.539844,2.034388,-5.774979,-1.429862,-0.774883],[0.752695,2.318985,-9.983940,8.957529,-2.213316],[7.283309,-6.330145,9.487057,-1.199394,0.012459],[5.331360,-9.022281,-7.699451,6.485994,5.393572],[-3.756313,5.428534,-2.174319,-6.224417,9.418094]],[[5.429093,3.565406,9.675210,-2.773264,-7.227437],[-6.692522,2.521016,-7.740384,-2.226000,-8.738303],[5.755583,-1.547863,-4.020259,-0.366595,-4.746626],[-3.293500,-6.394270,1.220835,-0.590827,9.383252],[9.511283,8.808805,1.664235,9.713917,4.396751],[6.347887,-3.537511,3.320250,5.795960,5.792059],[7.984234,7.704449,0.386424,9.273108,-2.148599],[4.989493,-7.010336,6.645600,-1.031805,5.966453],[-0.602529,3.228645,-4.522336,-5.124655,-2.577888],[1.943961,8.356317,-5.151356,-2.178223,-3.469541],[-8.957132,-5.283622,-1.150323,-9.337754,-7.152389],[-2.661962,5.112113,3.463735,-6.191494,1.692123],[-2.145103,-7.617711,0.302371,-9.463835,-0.358860],[3.088860,-2.469964,-6.442133,9.347807,-4.525991],[-5.479409,-8.683105,-9.690276,-9.892784,7.919433]],[[4.960563,-8.996343,7.968898,-3.105919,9.899879],[1.339641,-1.492138,6.028571,-6.645117,4.231730],[-7.541310,-2.755577,3.925865,3.251192,3.420403],[2.339170,-3.018593,1.556108,-3.837611,8.525990],[-4.767914,-3.992910,4.421097,9.404664,-1.623866],[-0.236911,2.181098,3.158466,1.996234,-9.348901],[-7.507797,2.624073,4.757748,-3.804137,3.936008],[-6.330409,-9.550937,-5.556731,-0.950257,-5.364089],[-9.289155,1.260222,9.945389,0.430514,4.029575],[4.070188,6.874971,-8.819900,7.833346,-2.021066],[4.474672,8.489399,3.581287,6.244156,5.995687],[-9.523290,-2.177371,9.364363,7.054776,-7.878586],[-7.100092,-9.923512,-5.331299,5.958398,7.366977],[-1.002522,-2.246201,5.480285,3.584028,1.987933],[-3.703011,7.720399,8.031455,-4.246716,7.836290]],[[-0.407949,-0.301005,2.752800,5.441451,4.679065],[0.371180,8.698287,6.047491,3.030589,5.809241],[0.238608,0.425810,-2.122479,-0.616437,4.007164],[9.882036,4.554586,-0.490391,2.120655,4.509934],[-6.613040,-2.785465,-0.746867,-0.799075,1.546559],[-5.299437,5.822157,8.363968,1.010440,-7.883380],[3.027105,-7.754906,-3.172211,5.118644,-1.314955],[-5.646940,1.811500,3.198940,-8.314995,-3.983126],[1.305051,-2.595413,-6.630611,7.308573,9.500625],[-8.610470,8.551917,-5.979282,0.293996,3.755493],[-7.452317,-5.293006,6.861848,-0.430571,-3.712228],[7.099230,5.389965,-5.791331,4.364539,0.373214],[-2.100436,4.031703,-7.266089,0.427128,2.867306],[-1.347644,-0.430841,-4.729873,-9.078871,7.438942],[2.261240,-1.345840,-1.489447,-6.646751,-5.235896]],[[9.694452,8.430980,5.310958,-0.876596,3.505743],[7.161705,9.404429,-8.970757,4.391065,-2.092053],[4.563482,2.171840,4.825514,0.179823,3.225333],[6.293928,-7.414738,2.000018,1.523645,-9.019106],[-1.462928,-5.760075,5.881140,5.690610,3.523077],[4.606729,6.754728,-0.975699,-2.842528,-9.685231],[-4.505933,-2.024634,-1.682875,-5.115918,0.713854],[-5.527632,-8.568426,-9.050688,5.958668,3.653783],[2.691490,-3.317677,6.002379,3.229844,-7.797534],[-2.067522,-3.977087,7.920728,-3.402691,-5.554673],[-5.853433,9.669547,0.180867,-8.782403,3.710468],[9.164022,-9.188825,2.323541,-1.909382,3.734881],[-7.558063,0.214879,5.327645,2.614703,-0.603213],[3.892577,-8.050514,-6.553715,-7.147369,2.522517],[-2.401383,2.261588,-4.216599,-8.686729,0.876081]],[[7.978381,0.347760,-8.746536,4.956579,5.280721],[5.018145,-8.287715,1.525374,1.157377,4.971397],[-1.071743,9.041615,-4.923347,-2.153510,3.721653],[-0.315496,-0.050656,0.594079,-4.957283,-6.418306],[0.019321,3.934461,-5.277712,-3.855972,-9.989345],[-0.125461,4.852758,-2.437345,9.775486,-1.956245],[4.141890,1.025301,9.174760,-7.414467,9.851348],[9.599456,2.016117,-6.864224,3.835430,9.608538],[-3.870404,-4.489391,-2.082951,0.680739,-2.740566],[-7.444820,-9.371328,5.619028,-1.168259,-4.481552],[-5.394825,-3.289638,-3.746293,2.104203,8.747800],[3.421208,-1.871182,7.098064,5.088701,-6.813941],[6.628460,3.866913,-0.875321,2.739558,-7.259877],[-4.561771,9.908169,-4.428130,7.554327,3.107872],[1.315802,-9.436234,2.973913,-2.937130,-8.508678]],[[-6.522465,8.047661,-7.337894,-4.633060,-8.490691],[8.362809,5.153395,-0.082283,-7.079789,-0.595978],[-1.528164,-8.933230,2.050195,0.435171,-2.528025],[6.292806,0.390594,-1.136382,-6.425230,9.500868],[-5.692417,-8.129203,5.532327,3.199267,-1.571523],[9.678023,3.118270,-9.403969,0.442168,-4.111094],[8.645062,-7.308231,-5.671835,-8.346586,0.674854],[-9.550260,-7.141305,-1.008651,0.465148,4.551151],[5.140792,-4.639188,1.123908,9.287039,-9.181158],[-4.905552,6.360515,-9.066212,-8.507574,4.218635],[-7.189404,7.892587,-4.859183,-1.154213,1.992241],[6.033286,9.251465,-4.420349,-6.630429,4.704015],[7.138950,8.753732,2.742667,7.669846,-8.081237],[4.734389,-1.184849,-8.595898,-5.779034,-6.097347],[-8.498239,-8.886852,2.376620,-7.271416,2.521542]],[[5.198173,-5.144249,4.552329,-7.703979,3.934574],[3.840366,-1.835185,1.425266,-6.302779,1.859616],[4.060313,8.035414,2.664173,-6.788319,-7.093279],[-0.394718,6.097490,-4.280365,-6.160561,0.973299],[-5.597893,-2.133470,-0.016463,8.771175,-9.296549],[0.712823,-8.202576,0.285679,6.474598,-8.660837],[6.062146,8.485031,9.396920,-8.051328,9.160734],[2.195959,-6.804384,-6.624438,7.563372,-5.470053],[-0.238066,5.935949,-0.433202,7.729826,9.278987],[5.786229,-6.353263,5.274325,4.229692,9.952322],[6.976873,-0.511355,-9.226041,-8.071881,-7.124185],[9.333615,-5.394016,7.248406,-0.922112,-2.672173],[-5.709855,-5.764951,6.670189,-6.973868,4.934000],[4.771867,-1.225816,7.706302,-6.822089,-5.926878],[-6.096875,4.605737,8.797607,6.257374,9.057179]],[[6.593482,7.828399,-7.591864,6.753760,4.151182],[-3.280788,2.250285,-4.700422,-7.780916,-5.101671],[2.953435,-5.749085,3.642347,-7.756880,0.566314],[-3.645921,6.694374,7.140959,-9.543957,2.996011],[8.017381,-4.244163,-3.635573,2.792128,4.415944],[-1.708175,-4.493897,-5.479947,-6.810744,-0.005966],[-5.690020,-1.614634,9.179813,-4.127373,-3.956575],[2.256886,0.191579,-0.521394,3.546266,-7.982636],[9.318200,2.843540,-6.580426,3.066576,-8.841640],[-4.194676,-1.280953,5.009751,-9.711203,-4.939808],[6.849951,3.500963,8.859633,-8.565814,0.603243],[-7.449670,2.855012,9.263566,3.135265,-9.510102],[-7.181017,-3.352191,7.543080,-1.499267,8.050745],[-1.888847,8.505131,-1.127304,2.359158,0.873254],[8.488858,7.798030,3.711975,-1.907079,8.702454]],[[8.167243,-4.006321,2.023391,0.746722,1.096710],[-5.208264,2.291641,1.267940,-7.579250,-5.490363],[-9.529265,1.152848,6.307034,-0.749723,7.289414],[-9.454132,9.767961,4.578628,1.791975,9.712346],[4.644881,-6.280532,0.671650,-0.996608,4.462473],[2.959254,2.462434,6.052319,6.990153,-8.627674],[-7.842322,0.187655,4.016917,-6.780126,2.947366],[-9.216273,0.910105,9.009794,-4.864624,-7.701967],[0.197774,1.542433,0.648785,5.612609,-3.561937],[6.408153,-2.100282,6.891551,4.397794,-9.964725],[3.341941,-1.975328,-3.575894,5.925497,5.690454],[-4.454332,8.123350,3.208750,-4.739130,9.851889],[6.642691,7.246963,-9.267493,7.057294,-3.478612],[-7.902259,-7.554077,-9.171234,9.090580,-0.549695],[-5.308394,9.717000,-1.653191,-9.931494,5.031246]],[[-2.166001,-5.218911,-9.216357,-8.932309,2.744873],[-1.652879,-2.099950,-7.365082,3.261725,-4.187192],[-2.150755,-7.094573,-7.400681,5.585637,4.254235],[-7.763699,6.858203,-4.822788,3.775452,8.180780],[2.111348,4.349567,5.215452,4.193960,6.470161],[-9.493187,-4.761742,7.494002,0.420343,7.955289],[2.805221,-1.623001,-6.577119,-0.996787,0.345370],[-6.540506,0.671916,-1.244395,6.633271,1.397337],[1.921371,6.183845,-9.827131,-3.657355,5.814293],[8.181784,-8.297213,5.989886,-7.206788,-1.917026],[8.258660,-3.454721,-7.304549,7.051855,-7.280669],[-4.904327,-6.885657,4.541756,-3.246052,4.708722],[9.316612,-1.824266,-4.946506,8.032992,-8.177804],[6.807377,-5.342130,-5.648910,-9.282231,1.318450],[0.812366,1.945648,0.174664,-8.063962,-6.215460]]], dtype = "float64")#candidate|2389|(16, 15, 5)|const|float64
bop_2390 = relay.logical_or(uop_2377.astype('bool'), relay.reshape(const_2389.astype('bool'), relay.shape_of(uop_2377))) # shape=(16, 15, 5)
const_2403 = relay.const([[[6.398002,2.075666,-7.175878,-4.556859,7.857011],[5.945088,9.516978,-1.915891,7.768779,5.800844],[-1.954586,-4.898478,-4.391818,-0.880746,-4.693520],[-9.763749,-5.672632,-4.494390,8.427547,5.118108],[-3.407742,2.217775,2.990184,-4.861053,-3.323353],[-4.705564,8.136396,1.309846,-9.540070,7.022091],[9.328763,4.369944,9.210396,-1.494472,-0.167368],[9.226191,8.085308,-3.647646,-4.594911,1.167954],[9.497987,5.415028,-9.689542,-2.751290,-6.873268],[-8.631436,7.170246,-9.335894,3.092174,7.127881],[-9.838134,-7.358921,7.076064,-8.282728,2.196751],[9.787539,1.994791,9.174124,0.351041,2.472098],[1.492102,2.140335,8.138798,9.969801,-5.026808],[-4.165766,5.689487,-7.586852,2.918790,9.019206],[5.626926,2.017931,1.909723,-9.452969,-0.522603]],[[2.890362,7.935397,4.259911,-1.595112,7.980129],[3.420757,6.191360,-6.926234,-4.658504,-1.463042],[4.270765,-6.919874,9.727236,5.525023,-5.197901],[3.275916,-9.882431,-7.763274,5.255937,-8.058422],[6.918851,-0.362721,4.080398,5.546155,-8.914189],[1.264706,2.705158,3.852919,4.873778,-1.522905],[-5.585675,7.162637,6.490025,-4.702056,-8.320727],[4.227312,3.584022,-6.288706,8.153464,-6.426097],[-1.505661,6.595129,3.247175,-5.748006,3.717758],[-6.101878,-6.580439,-0.585720,3.488894,-7.464836],[-4.083548,7.311388,1.032354,-5.793454,9.320128],[-9.263813,-6.098004,4.204033,-0.146990,-4.171454],[9.337824,-7.077102,3.134058,5.125749,0.911797],[-0.769993,9.842173,9.966684,-7.027164,4.752622],[-3.506761,8.239153,1.080124,-7.003436,-8.761583]],[[-7.702700,1.618305,0.675672,5.354505,0.901779],[-8.552401,-3.043014,-5.928379,-5.673484,3.834980],[-3.059391,8.395217,-8.864444,7.694251,8.529457],[-9.102748,2.854677,-8.214636,-2.777637,4.784947],[-1.278264,7.555046,1.899781,2.682150,-1.786508],[-5.085131,-3.944871,-2.472914,-6.745238,-2.594195],[5.157301,1.817207,-2.093171,9.990692,-9.502639],[7.751760,-8.718026,7.576684,-7.530108,6.706726],[-3.183791,7.207021,-0.530219,1.855659,0.932350],[-9.243588,-8.216492,1.004157,3.158498,6.182968],[0.528770,-0.704032,-9.772946,-8.123881,-9.730005],[7.235131,2.680706,-5.439883,9.108184,-2.622854],[4.605218,5.095815,4.970233,-2.146701,-6.573216],[-7.828311,-0.621209,2.070403,-7.853724,8.699256],[-4.466185,2.701400,-6.551545,8.577076,-3.780875]],[[-7.377560,-9.442075,4.420772,2.182880,-2.686866],[-8.292141,7.805513,3.253891,2.705303,-9.547074],[4.248880,6.294394,-5.418493,-3.828195,3.683373],[-8.783128,-5.134286,-8.921725,-8.945157,6.990296],[6.324892,5.444911,5.534192,2.034566,-8.840861],[4.376347,-7.742310,1.430290,-2.096231,-3.428796],[-9.080288,-9.060617,9.423516,-9.227246,-3.628983],[-5.426814,5.929380,-8.270907,5.476669,6.377774],[-5.474548,5.625357,-2.099679,0.087781,-2.571146],[-0.346578,-4.679103,1.685461,2.798888,5.845958],[2.098437,5.140500,6.547496,4.730876,-6.143888],[0.647167,-7.720977,3.442179,2.313156,9.007287],[4.482810,-8.814497,-8.491578,6.626237,8.406572],[2.354143,6.184373,-0.254350,2.448059,7.063861],[-7.569436,-6.396550,9.303207,6.226974,-6.174208]],[[-3.348403,0.915299,-3.806273,-0.339356,9.257244],[-5.479600,-8.889137,-6.672458,2.679962,2.766597],[5.428363,9.687156,-9.833581,2.117229,3.123157],[-9.627400,0.838339,-9.499974,-4.797431,-7.118513],[-4.357214,-8.041448,-5.469472,2.600729,-9.226374],[-8.764825,0.208689,2.944165,-4.788308,2.200763],[9.811057,2.232129,6.398003,-2.387189,-7.106172],[-4.340902,8.993425,0.042194,3.506663,7.406038],[2.184005,7.534502,7.543164,-6.134157,4.824078],[6.593647,-0.964267,-2.113623,-4.804303,8.057498],[3.528965,-9.708853,-5.755210,-3.352610,-9.210062],[-2.507366,4.306736,-3.950474,-9.846389,-2.058306],[3.075786,-0.601830,-2.431135,3.900106,6.251024],[3.279393,-4.342134,-0.437507,6.315779,-6.162182],[-0.381647,-1.433951,-6.163575,1.765107,4.854384]],[[5.855098,3.464570,-9.694064,-6.709535,4.429342],[-3.450519,-8.804096,-8.324376,-1.678827,0.343209],[8.362932,5.614201,1.021001,0.583949,-3.671181],[-7.027785,8.208917,-0.823918,0.636839,0.887275],[-3.310619,5.837522,1.587463,0.320516,9.064476],[-0.037990,6.839495,-3.444953,-4.335490,7.627993],[0.348351,-1.576104,7.469329,-2.875486,3.398712],[0.899298,-3.690071,-3.723215,-5.264530,4.715130],[-0.724691,7.818632,3.680274,-9.573775,5.862561],[-8.116959,3.548822,9.850777,8.862002,3.090783],[4.502175,8.353985,9.224228,7.039559,3.481957],[1.549698,4.681804,1.281580,1.736401,-6.046301],[4.751999,3.148610,9.601162,-4.495140,-0.876993],[6.372591,-2.771519,5.610827,-3.413509,-0.788211],[4.402352,9.882801,-7.775522,0.719602,-7.899455]],[[-7.415792,4.897254,-5.228730,-2.475106,4.668188],[-3.655260,-7.808609,6.406557,-8.683912,7.254103],[-1.702968,-8.685558,3.748739,-8.638462,-4.631755],[-7.957299,8.539109,-2.169463,-6.039132,-2.684331],[-1.549072,-9.619420,7.251469,-0.951183,2.864104],[-5.485607,0.142521,5.237618,7.642235,8.965910],[-5.090687,-8.917967,6.796129,8.920781,8.424597],[-7.317612,-5.522026,4.625720,-5.007833,1.832128],[2.709679,4.970903,-2.321260,3.479884,6.068463],[-1.992644,-3.108613,8.422710,8.609222,3.004317],[-3.969388,-1.583888,-2.975747,-4.060591,-7.475367],[-8.511519,-7.963029,-6.495365,-1.046472,-4.958311],[-3.124117,9.529576,-7.817258,7.857872,3.461831],[-4.509988,-9.310581,-0.505431,-5.574102,8.383259],[-2.283854,-7.769694,-3.268697,3.621411,-7.480582]],[[-1.869479,-8.277393,2.882212,-0.367301,1.906666],[7.889787,9.474320,-1.273685,-6.490676,-4.966865],[4.691376,6.714227,5.976874,-6.667657,-0.797760],[6.794060,-2.161285,-7.369271,-7.553902,-7.043182],[-1.606768,2.453697,0.958091,3.346342,9.858401],[5.569167,-2.124668,-7.415218,-7.519897,1.992533],[-3.933284,9.729279,-9.348487,-9.933696,-2.045908],[-3.970611,8.129971,-7.646348,-9.622368,-7.468318],[-0.020423,-5.765952,5.296934,-5.473986,-9.538546],[-3.303185,-0.301349,8.350804,-8.135982,0.052871],[-7.846003,3.568972,-8.813869,-8.946978,-6.205918],[-0.393538,-3.808862,8.589828,7.511668,-3.119101],[1.414539,-8.553281,-1.878623,9.428851,-4.362017],[-9.027883,-3.613189,-6.714938,3.085307,0.975903],[0.239023,-5.803249,7.895279,2.560851,-6.806314]],[[-0.415308,0.188466,9.476460,-5.860787,-9.724737],[-1.553386,7.060931,-8.835080,5.011182,-8.259745],[6.186661,-1.959215,5.207921,-9.511908,-0.776138],[-3.583085,-1.050001,-6.839216,-4.107529,-5.779419],[7.417548,7.757103,-2.609018,-8.333752,5.034639],[-2.018859,-7.850686,7.366536,-0.972572,5.153942],[-0.777420,4.533356,4.212984,-1.933208,-9.802770],[-6.156873,2.086712,-5.452710,0.190478,2.892813],[7.900638,-8.387256,-0.071980,-2.249053,5.226178],[-9.760857,3.397938,-4.512644,2.031589,-4.528085],[-0.066895,7.774387,-2.410638,1.872809,-9.234632],[3.395667,-2.825711,1.657348,6.693797,-4.139558],[7.053653,-9.897046,-5.062279,2.279427,4.117943],[-2.750509,-6.728751,-4.867667,2.737971,7.546165],[-3.872101,-3.220659,-3.618002,-2.571823,6.771572]],[[-4.749922,9.824505,2.782822,4.875766,6.031034],[1.039890,-8.579784,0.915312,-8.098849,-8.523382],[-2.271043,-0.323995,-4.607125,-2.549671,-7.605227],[4.101297,7.721140,5.057491,-0.168608,0.427426],[-2.601911,5.715404,4.476809,6.731920,-7.229538],[0.787623,-9.240890,6.273274,-4.324271,1.276099],[8.215103,4.489639,4.273203,3.881276,2.570587],[4.782264,2.871135,0.644408,3.718988,5.131293],[-5.729197,-8.794061,-1.534548,6.435083,-2.495525],[-6.135046,5.019381,-6.782340,-8.699968,7.957668],[-7.494104,5.845352,9.935698,-0.846164,6.602817],[-8.107651,-1.167044,6.379927,-6.377553,2.087098],[1.751335,-5.238990,3.416716,-1.367364,0.163652],[-4.223867,-2.388219,4.891779,-2.325528,7.370779],[3.446965,1.924149,-2.307170,4.362852,-2.759690]],[[8.163580,-6.437219,-2.414815,-8.404386,5.995253],[-8.305134,-4.025676,-7.949016,0.077700,3.787556],[-5.993092,-2.879549,4.453122,-3.498918,-4.449112],[6.190854,3.635875,0.469565,-8.797768,-8.231020],[1.071769,9.963852,9.496855,-5.867321,-5.110729],[5.231516,-7.022374,-2.912884,3.084368,-8.058735],[7.778551,1.424148,1.774426,5.517589,2.204135],[-6.841608,-1.432404,-7.400298,8.227261,-4.532646],[-2.750829,-3.210379,-3.701800,-4.057588,-5.246341],[7.955833,3.349543,-3.410217,7.522371,-4.044911],[9.400137,-4.617010,-8.820977,2.378332,7.026942],[9.105274,-3.556990,-7.643596,-6.640821,-8.402578],[-8.288308,5.821196,-0.477408,-2.256602,0.372040],[-0.316939,4.138152,-4.880945,7.719588,1.800599],[-5.978489,9.796974,6.268892,6.057740,-2.194697]],[[-5.024801,0.933585,-4.559099,3.876549,6.341643],[7.619532,9.113651,-4.519973,-3.612188,8.296343],[-4.114892,-8.896697,-6.925477,-4.869261,-1.207581],[7.390304,4.001301,-2.745117,2.097188,-2.863753],[-3.490535,-2.244705,5.084021,2.676123,3.568550],[6.345177,-8.461981,3.410553,2.797672,-4.250849],[-7.195575,-4.435217,-3.654270,-1.210072,-6.381585],[1.117980,-3.514399,-6.264209,-9.097981,-7.307494],[6.212021,-1.136688,7.330272,-3.350887,0.634195],[-0.269316,0.996117,1.967673,7.183726,6.590105],[-0.469555,-3.343722,-0.324375,-9.115424,0.722933],[-2.236580,6.756112,-1.220906,-9.474090,1.862881],[-6.917080,-3.375656,9.727339,0.878128,7.810734],[-7.398499,5.539972,-0.043458,-0.450662,0.673175],[8.712004,-7.312963,-4.288528,-3.150908,7.019167]],[[-5.583854,1.622565,3.611645,-5.827613,-0.510670],[7.120581,1.748450,8.085019,5.532434,9.239614],[6.927077,-8.580957,7.780996,7.583742,-1.240727],[3.276069,-0.403677,0.218797,3.295127,-5.886935],[4.202033,1.000444,0.783119,-5.749772,-8.080740],[6.053383,7.398971,7.389848,-5.474611,-9.759388],[4.065939,5.676074,-2.407692,-9.340339,-9.327905],[7.662965,-7.908253,-4.953576,-9.765659,-1.512467],[-6.136097,-5.714846,-9.730990,-4.151544,-7.630702],[4.314388,0.915471,0.702547,8.558886,6.290113],[7.876894,2.675776,3.103354,4.329075,-1.330449],[-7.334717,6.961344,-1.789867,-2.191295,-7.135762],[5.242138,7.791401,-0.724299,0.468436,-3.078338],[2.728380,7.076060,8.689175,-4.305390,-9.994237],[5.555239,-7.466737,-1.496241,-9.625299,9.275001]],[[8.272229,-6.436180,2.024870,-8.939141,-6.894685],[-7.020601,-0.407266,-2.864536,-8.992077,-0.290472],[4.202392,-2.242881,-0.809050,5.891108,9.022544],[2.447884,9.199903,2.777614,-7.296768,9.580953],[-3.069661,-9.312723,-3.631005,6.902178,2.052960],[0.104038,1.590107,-6.158640,-0.220398,-6.960338],[8.993726,9.588412,5.095032,8.259161,-1.160196],[-8.400007,-0.901715,9.093557,5.041669,-0.087970],[-5.613422,2.136092,8.396883,1.654317,1.972786],[9.923220,8.782985,-2.434652,-4.396743,-0.784906],[-8.066229,9.729354,5.212429,1.350726,3.688331],[3.367098,-3.877214,9.555869,7.246860,7.817769],[-1.097804,3.545020,3.247599,-0.405790,1.372957],[-6.452943,4.159977,5.265486,-4.926266,5.647522],[-3.456946,5.559808,-6.046030,-6.968266,1.460428]],[[-8.350933,-0.596826,0.920101,5.947331,5.568917],[-4.348210,6.458739,-3.812769,-4.880150,8.670878],[-7.300190,6.940521,-4.896589,7.296557,8.080276],[4.720268,-2.993272,2.454369,3.493432,-5.357978],[2.660011,8.081948,-6.622100,4.257002,-3.817305],[2.168994,-6.056448,9.569552,-4.870391,6.510403],[9.630918,3.771589,7.140736,-6.398199,-9.215787],[5.782674,6.895905,-8.253473,-3.879667,1.962132],[-1.546268,-8.147828,9.121376,-9.920576,-2.853332],[5.598672,-2.475099,0.507967,4.630078,-5.016132],[-7.538317,3.466317,-5.990617,-9.979866,-7.282599],[-4.238324,-4.297223,4.787480,-0.614613,8.444601],[-9.116226,-2.317323,3.952332,-4.941785,9.326700],[-9.385023,-2.047265,-2.951167,0.845894,-9.977041],[-7.291624,6.748972,2.297224,-1.093508,-9.411726]],[[-2.641810,-2.334266,4.879500,-4.670062,-1.846914],[-0.337683,-1.640086,-8.265023,-2.994069,5.555359],[9.194838,4.715670,-9.197092,-1.917214,-1.430375],[-9.290571,9.536928,2.466059,-1.221542,-8.550565],[-7.072808,-9.337558,9.509629,0.214873,-6.530962],[-8.824898,-2.781461,-7.331010,-4.011182,9.814291],[9.060257,6.996473,-5.184621,3.053623,6.962850],[0.571714,7.056376,-4.309769,-6.151740,-8.745773],[-9.141557,0.271961,-1.441295,3.037272,-5.665760],[2.178367,-0.260803,-3.617183,4.389690,0.450735],[3.042747,-4.161270,-6.638987,2.855160,-5.914418],[-7.237322,6.761340,9.502907,8.767444,-0.649747],[3.417358,-0.407961,6.679616,-8.254967,-6.397504],[9.487479,-0.092421,-8.106399,-4.278941,-2.295134],[2.980914,2.086230,-2.182823,-1.945568,9.426398]]], dtype = "float64")#candidate|2403|(16, 15, 5)|const|float64
bop_2404 = relay.floor_mod(var_2374.astype('float64'), relay.reshape(const_2403.astype('float64'), relay.shape_of(var_2374))) # shape=(16, 15, 5)
func_506_call = mod.get_global_var('func_506')
func_509_call = mutated_mod.get_global_var('func_509')
const_2408 = relay.const([-6,-2,8,-4,-7,-7,-6,-2,2,5,10,2,-7,-7,3,-5,-4,1,6,5,2,2,10,2,-6,5,-6,-1,3,3,9,4,3,-7,5,-2,-5,4,10,5,-2,1,-7,-10,-10,6,-10,-5,8,-4,4,-9,-2,-4,8,8,2,-9,-2,9,3,-3,6,6,10,8,-7,2,-9,-4,8,6,-1,-6,5,7,1,-10,8,2,5,-1,-6,-2,9,-9,-7,-6,-1,5,10,-3,-4,9,-9,9,2,6,4,10,-3,-2,-7,1,1,-3,10,1,10,-5,2,3,-3,-9,-7,2,-1,2,-1,3,1,-4,-5,-4,-6,4,-2,-9,5,3,8,-2,8,-4,-1,2,6,-2,2,5,-4,3,3,-2,-1,-10,8,7,-10,-4,9,-10,3,-5,9,-2,-9,10,6,-2,-4,-5,6,8,-2,-4,10,7,7,8,-4,-10,5,6,-9,8,3,-6,7,3,-6,-10,3,10,1,-8,10,9,8,-7,-6,-2,2,5,2,7,-9,4,6,3,-6,2,1,-1,9,-7,7,-3,5,-6,-8,-5,-2,10,-5,-7,4,-8,3,5,7,6,-9,-3,-6,3,4,2,9,7,-5,-6,4,-5,3,-8,1,-6,-2,7,10,4,10,-3,10,-4,4,7,3,-4,3,9,-5,-4,-8,7,-1,-3,8,9,-7,6,-4,-9,6,-5,7,-3,-1,-9,8,-6,-6,-1,8,-4,-4,6,5,4,3,10,-5,10,2,6,5,10,-2,8,4,5,-4,5,-10,-3,-8,1,-6,1,2,7,-9,3,-1,-1,4,-2,-9,-10,-5,2,-5,-9,5,8,-7,-9,3,8,-2,8,5,4,6,2,6,7,6,4,-5,-1,7,-9,-9,-8,-5,6,-8,-5,6,-6,-3,6,10,-3,10,9,3,2,2,4,6,-9,-10,-9,-2,-1,-9,-6,-4,-5,-4,-6,10,-10,9,4,-4,10,-5,-2,-5,4,7,4,-9,-10,3,10,3,10,4,7,-4,3,5,10,6,5,-4,-7,-8,-7,-2,-8,7,-8,9,10,-4,7,-6,-1,-3,-8,-7,-1,1,-8,7,9,-4,-8,4,-8,-8,-10,-4,-9,-9,-3,1,1,-5,8,-5,-7,-5,1,10,-10,8,7,2,8,-2,-8,-8,8,2,-3,-2,-5,5,8,9,8,-1,9,10,7,-10,-6,5,-10,-1,-3,5,-1,8,-10,1,-6,2,6,-5,-3,-7,3,-4,-1,8,-7,6,5,-9,-2,-2,3,-4,-5,1,3,-8,3,9,-6,-2,2,-1,3,-6,2,-5,-2,-3,9,-5,-1,-1,5,-10,9,-4,-9,1,-6,-9,5,-3,-5,5,8,6,-5,6,9,10,8,-10,-8,-9,8,-3,1,9,2,-8,6,-4,3,8,5,-9,-2,10,-9,-4,-6,-1,5,-1,-6,7,-6,-10,10,2,-9,-2,1,-1,-2,9,-4,-3,10,3,-6,7,-3,3,-8,3,-8,-8,-7,-1,-4,5,3,-6,-5,-1,3,-10,-7,-2,-10,4,-7,6,9,-3,2,-2,7,7,9,2,8,-8,7,-1,2,4,8,-5,9,-4,5,5,-4,-5,-2,4,-9,6,2,-10,5,-4,-3,-1,-7,3,-1,-6,-3,-9,-8,-5,-7,2,10,-4,7,7,-8,-4,3,9,-8,-8,-9,-5,2,-5,-3,-8,10,-8,-1,1,-7,-6,-4,4,-3,-4,9,-9,-9,10,1,5,-10,-10,-1,-4,-8,9,-7,-6,5,-3,9,-5,-6,2,-3,-1,-3,-7,4,3,2,-3,-6,9,9,6,-6,8,-8,-1,9,-7,3,-7,3,-8,-3,-4,-2,-10,9,-10,-9,-8,1,1,1,10,-1,-2,8,-1,-3,-8,2,-5,-4,-5,-5,3,2,4,1,7,3,-10,1,2,8,8,-7,-10,-8,-5,8,9,-1,3,-8,-8,2,-4,9,5,-7,7,6,7,4,8,-2,-2,-9,9,-5,-10,4,10,-1,3,9,-2,-9,10,-2,5,-3,-9,4,-10,6,8,6,-3,4,-5,-6,-8,7,-10,6,5,4,4,3,-7,-5,-8,2,8,-7,-8,9,10,6,4,-5,5,-4,-7,4,7,10,10,7,7,10,-7,-5,-6,-8,7,1,5,3,-4,8,6,-7,10,-6,-7,4,7,2,-2,-4,-6,-9,2,-2,8,-10,-8,3,-10,-4,-7,-3,-10,8,9,-9], dtype = "int64")#candidate|2408|(840,)|const|int64
call_2407 = relay.TupleGetItem(func_506_call(relay.reshape(const_2408.astype('int64'), [10, 7, 12]), relay.reshape(const_2408.astype('int64'), [10, 7, 12]), ), 0)
call_2409 = relay.TupleGetItem(func_509_call(relay.reshape(const_2408.astype('int64'), [10, 7, 12]), relay.reshape(const_2408.astype('int64'), [10, 7, 12]), ), 0)
output = relay.Tuple([call_2380,var_2381,bop_2390,bop_2404,call_2407,const_2408,])
output2 = relay.Tuple([call_2382,var_2381,bop_2390,bop_2404,call_2409,const_2408,])
func_2421 = relay.Function([var_2374,var_2381,], output)
mod['func_2421'] = func_2421
mod = relay.transform.InferType()(mod)
var_2422 = relay.var("var_2422", dtype = "float64", shape = (16, 15, 5))#candidate|2422|(16, 15, 5)|var|float64
var_2423 = relay.var("var_2423", dtype = "uint16", shape = (154,))#candidate|2423|(154,)|var|uint16
output = func_2421(var_2422,var_2423,)
func_2424 = relay.Function([var_2422,var_2423,], output)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2729 = relay.var("var_2729", dtype = "float32", shape = (3, 12, 12))#candidate|2729|(3, 12, 12)|var|float32
uop_2730 = relay.erf(var_2729.astype('float32')) # shape=(3, 12, 12)
func_1769_call = mod.get_global_var('func_1769')
func_1772_call = mutated_mod.get_global_var('func_1772')
var_2735 = relay.var("var_2735", dtype = "float32", shape = (260,))#candidate|2735|(260,)|var|float32
call_2734 = func_1769_call(relay.reshape(var_2735.astype('float32'), [4, 13, 5]))
call_2736 = func_1769_call(relay.reshape(var_2735.astype('float32'), [4, 13, 5]))
const_2738 = relay.const([[[-8.540329,4.952184,1.735885,0.316783,-6.029741,0.753866,-3.310512,0.975053,1.327923,4.637226,6.948264,-4.230577],[-2.778799,0.580161,-2.637028,3.453416,-2.103819,-4.151555,5.686419,-3.321885,-5.841913,4.749365,8.403599,-4.317208],[8.346462,4.864007,-0.216975,-2.343710,7.586051,8.181607,-4.297351,-3.108255,2.542373,-8.500148,-1.930222,5.218480],[-2.053093,2.311053,4.220270,5.328000,4.739213,8.721139,-0.962460,8.939434,-4.809163,2.395229,6.671592,4.685950],[4.304208,-1.425572,-1.677614,-4.238487,-6.688377,-1.140697,5.554510,-0.188771,5.671861,-6.626727,-3.277878,9.619372],[-7.756143,8.086726,-6.219407,-2.853366,3.729443,5.882977,-2.970007,-2.310284,5.475357,-3.624235,-6.481482,-9.936895],[2.439524,-9.642894,-7.601896,-4.263415,-8.404399,-1.004677,-9.195177,-6.560743,0.168457,0.899410,9.267750,-0.665631],[3.830901,7.006422,-4.631304,1.099131,-2.143189,3.918839,2.781561,2.499058,7.389674,-1.850015,2.650552,9.608537],[-8.696213,-6.944158,3.287566,-8.469815,-3.039335,-6.510664,2.731908,-5.134185,3.017238,-4.220923,8.843533,2.519006],[-4.075108,-5.063970,-2.281211,-0.913139,-8.985549,6.401031,-0.354017,-7.382770,3.982409,6.299583,-8.206125,3.251860],[6.337951,-0.142988,5.938818,7.857124,4.914233,4.268428,-6.159158,-8.936778,1.088013,-8.646477,-1.740490,-4.023747],[1.556113,-9.875064,2.068539,-6.514299,-8.733770,4.628003,-6.599144,9.010863,-3.702663,8.335514,-2.257873,0.226276]],[[5.706743,6.399775,7.246251,-5.078669,4.820216,-7.955521,-1.437338,6.416907,-7.134449,-0.102981,-7.949727,-5.870144],[3.030875,1.442432,-4.258512,2.663195,-7.853667,7.215611,-4.423420,-6.697042,-7.161913,-3.802488,4.442000,7.853463],[-2.728758,-6.348224,5.344973,9.354665,7.821099,9.307465,0.658071,2.978613,7.585128,7.647315,-4.641889,-3.715342],[3.372235,5.894705,-6.070528,-8.125183,7.225454,9.302932,2.033499,7.902275,3.433191,-6.192035,6.088748,-3.224657],[-6.902355,-8.779729,-5.292173,-4.819495,5.985063,-0.999797,-2.670693,-4.369573,-4.745638,8.111777,-8.288284,-2.615920],[8.330473,-5.314195,-5.670395,4.311707,8.791539,-1.860654,-9.819883,9.007690,-6.455600,-7.550504,-8.773591,-7.399930],[-4.429437,-5.195347,-2.846836,9.597478,-7.410364,-8.142461,-6.437482,4.166313,3.735576,6.149053,-8.647870,0.518414],[9.529483,-1.788351,-4.459480,-5.695561,-1.638855,5.742723,7.069306,-4.335364,5.266430,-7.511330,-0.948455,3.128019],[7.563955,-2.095838,1.959178,6.237140,0.106765,-7.608360,-2.423189,-2.515157,1.954567,-7.720891,-6.237546,-2.298683],[6.547199,-7.002189,3.702917,-8.888412,-6.906179,-9.563459,-0.158106,-1.402366,9.431407,-6.460459,7.707465,-1.041731],[-6.230499,5.067305,4.373760,-6.087884,4.793142,6.058281,-5.625158,1.093375,-9.512581,-4.961332,4.656037,-6.077518],[0.169165,4.328991,2.820598,-8.144747,-1.807361,7.099094,9.606906,-5.571515,-5.334063,2.427443,3.957477,3.361350]],[[2.160702,4.473106,1.719218,8.023881,-0.043162,8.151087,8.995280,8.820761,-2.111066,9.124610,5.258014,-0.502318],[7.832216,-1.791916,-1.455937,-5.103388,-2.792523,9.045257,8.337682,-5.230463,7.232968,-2.124364,9.045899,-3.922624],[-1.029163,-2.927591,6.616392,2.321957,-1.840773,-4.629894,0.417470,-3.158772,-5.498926,5.558770,2.866043,8.110622],[-4.474724,3.615653,2.223197,1.639932,4.087900,0.687337,-9.090209,-2.888750,4.111537,6.098919,0.697144,-0.883752],[5.075855,-8.350866,6.228231,7.168167,3.025017,-2.985632,-4.257507,-5.387762,0.951232,2.321508,-1.219735,-0.158908],[-8.749017,-8.601815,-7.658604,4.136761,6.301269,-2.461275,8.066479,-4.790867,-4.724500,2.235499,-9.797824,-5.531950],[-4.395216,4.307078,2.708670,-7.683137,5.944308,-2.618104,6.683273,-9.288229,6.071726,5.793984,-4.412358,0.513801],[-5.638792,-2.888277,-9.886360,-0.591004,-2.320104,1.040719,-1.440190,4.139517,-1.953664,7.748454,0.573417,-5.552806],[-3.997303,0.982376,0.518638,1.791453,7.112956,-6.104598,-2.421664,-1.506378,-8.303967,4.049769,4.444324,1.538804],[-2.827754,1.884110,-2.972160,-4.553790,-7.407146,9.935434,-0.067465,7.070237,-6.798336,8.732330,5.704097,3.610236],[7.153430,-6.938957,0.829024,-6.444269,-1.754402,4.980338,-4.644761,5.976838,4.275854,-3.429656,4.644025,-6.256528],[-3.004481,-2.807122,5.345262,6.595567,-8.405141,-7.976191,6.198732,3.761485,-0.433468,-0.529293,-2.062208,7.890320]]], dtype = "float32")#candidate|2738|(3, 12, 12)|const|float32
bop_2739 = relay.logical_or(uop_2730.astype('bool'), relay.reshape(const_2738.astype('bool'), relay.shape_of(uop_2730))) # shape=(3, 12, 12)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
var_2748 = relay.var("var_2748", dtype = "float64", shape = (330, 3))#candidate|2748|(330, 3)|var|float64
call_2747 = relay.TupleGetItem(func_2345_call(relay.reshape(var_2748.astype('float64'), [11, 15, 6])), 0)
call_2749 = relay.TupleGetItem(func_2347_call(relay.reshape(var_2748.astype('float64'), [11, 15, 6])), 0)
output = relay.Tuple([call_2734,var_2735,bop_2739,call_2747,var_2748,])
output2 = relay.Tuple([call_2736,var_2735,bop_2739,call_2749,var_2748,])
func_2753 = relay.Function([var_2729,var_2735,var_2748,], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
var_2754 = relay.var("var_2754", dtype = "float32", shape = (3, 12, 12))#candidate|2754|(3, 12, 12)|var|float32
var_2755 = relay.var("var_2755", dtype = "float32", shape = (260,))#candidate|2755|(260,)|var|float32
var_2756 = relay.var("var_2756", dtype = "float64", shape = (330, 3))#candidate|2756|(330, 3)|var|float64
output = func_2753(var_2754,var_2755,var_2756,)
func_2757 = relay.Function([var_2754,var_2755,var_2756,], output)
mutated_mod['func_2757'] = func_2757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2793 = relay.var("var_2793", dtype = "bool", shape = (14, 10, 15))#candidate|2793|(14, 10, 15)|var|bool
var_2794 = relay.var("var_2794", dtype = "bool", shape = (14, 10, 15))#candidate|2794|(14, 10, 15)|var|bool
bop_2795 = relay.logical_and(var_2793.astype('bool'), relay.reshape(var_2794.astype('bool'), relay.shape_of(var_2793))) # shape=(14, 10, 15)
func_703_call = mod.get_global_var('func_703')
func_710_call = mutated_mod.get_global_var('func_710')
var_2799 = relay.var("var_2799", dtype = "uint8", shape = (48,))#candidate|2799|(48,)|var|uint8
var_2800 = relay.var("var_2800", dtype = "uint8", shape = (288,))#candidate|2800|(288,)|var|uint8
const_2801 = relay.const([-2,6,-9,-10,6,6,-3,-10,9,-4,9,-4,1,10,-7,-9,-7,-10,1,-3,-3,4,-8,-6,4,-8,6,-1,-3,8,-9,-6,-9,-5,6,7,7,-7,8,1,-5,-6,-2,-9,-8,-2,-3,-3,7,-5,8,-4,5,-3,7,4,3,-3,7,-10,9,1,-2,-8,-4,4,7,10,-1,5,-7,10,-9,4,4,-2,-6,7,-9,9,-8,-7,10,6,-2,-1,-10,-8,-3,8,6,2,-2,10,-6,7,9,-10,3,4,9,-4,-8,7,-5,-1,-4,1,-4,9,9,7,-2,-10,-4,-2,-10,1,1,1,4,6,-7,-6,-9,4,-5,-5,7,-3,10,6,-4,-9,-7,-10,4,-1,-3,5,-3,10,-9,4,2,9,-5,-3,-3,5,-5,-1,10,-4,-10,-7,-8,-3,-3,5,6,-9,-10,-9,5,3,10,-2,7,-5,5,-1,2,1,1,-3,1,-8,-4,-4,-5,-10,-2,-5,-8,-7,4,-7,-4,-4,-6,3,-8,-6,2,-1,8,9,-6,2,-7,-9,9,-7,-6,-9,7,8,5,-8,-8,3,2,8,8,-2,-9,6,-8,-2,-6,-7,-4,-8,2,7,7,-6,2,5,-5,3,-9,-5,-3,-1,7,2,4,-2,8,-6,7,-3,9,-9,6,-10,2,-2,-2,4,3,-3,-7,-3,4,9,-5,-2,-2,-1,-4,3,-6,-3,-10,-10,-2,-9,-9,4,-4,-9,-5,5,4,6,-7,-6,-6,3,-5,-10,-7,-5,-1,-2,-10,-8,-1,-2,1,5,-9,-2,1,2,8,4,-10,2,6,10,4,-2,-1,10,-4,-9,-7,7,-6,-3,-2,-10,5,-6,5,-8,-4,-1,-9,-4,-7,4,-3,1,4,4,10,8,3,8,-2,6,-9,8,2,-10,6,-1,7,-8,6,6,-5,3,2,5,-8,-7,-2,4,8,10,-8,-5,-3,-5,-7,6,9,10,-9,-5,-8,3,-7,3,-10,3,4,-2,-3,7,-2,-9,-2,-2,4,9,10,-3,8,-6,8,6,-5,10,-9,-7,-2,4,5,-9,3,-4,-10,2,10,-8,-7,-10,-5,2,9,-7,-6,-9,6,2,5,-4,1,-3,-6,-1,5,5,6,-6,-5,-8,-3,-1,-2,-10,-9,2,-10,4,7,-9,9,-4,9,9,-2,-6,3,-4,2,-2,8,-2,-10,-6,-2,-1,9,5,5,6,3,2,9,1,-10,2,-10,8,-1,-8,9,3,3,8,3,5,5,-4,-3,-8,9,-1,-6,-8,3,-7,5,4,9,-8,-7,-10,10,7,-6,-6,-4,-3,-6,-5,-9,5,4,4,3,-6,4,-1,8,6,2,1,9,-8,7,5,-8,1,-10,-5,-4,-1,7,-3,-1,-10,-10,-3,-7,1,-2,1,9,-4,-7,-1,-10,-9,8,1,-10,-4,-2,-7,-6,2,-9,10,4,-6,-2,2,-1,8,-5,-9,-10,7,-10,8,7,5,-4,3,-10,-1,-5,-6,-7,8,-3,-9,1,-2,2,-8,3,-4,-10,-7,5,-3,-10,-9,-3,-1,7,7,7,1,-1,-10,-2,-1,1,-3,5,-9,4,4,-6,-2,-6,-2,-2,4,-2,8,-1,6,-9,10,-4,-9,-8,6,9,-8,-10,-9,3,-6,10,-9,-4,-6,-4,7,7,8,10,-1,3,5,2,-6,9,-10,-7,-1,3,-6,-6,-5,-10,10,9,8,-5,-7,-6,1,-8,-4,9,-8,5,-9,6,7,7,5,-1,9,-7,-2,-1,10,-6,-4,2,-7,-5,-1,10,-6,-5,4,7,1,-10,-9,-10,10,-3,-2,6,5,6,4,-4,-5,-5,-7,4,4,-3,-7,-2,-10,3,4,-1,-3,-5,-5,9,-9,2,-7,-4,-10,-6,3,-6,-4,4,8,-7,4,-10,-2,-2,-5,7,-1,-3,-9,10,8,4,4,-10,-5,5,-8,10,-6,-10,-7,5,7,8,8,9,-3,7,-3,2,-3,-9,4,10,-10,-2,-5,-4,4,10,10,-7,-4,-10,9,-7,9,-3,3,-2,2,-1,-1,-1,7,-9,1,-9,8,4,-9,2,-6,10,8,6,10,-9,4,-7,1,7,-10,9,-4,-7,-5,-3,-4,4,-9,-4,-10,9,4,5,2,7,8,1,-8,-9,5,-6,6,-3,-2,3,9,-6,-8,8,6,-3,1,8,-2,6,10,-8,-2,3,-7,6,6,1,-6,5,4,6,-4,9,-3,3,7,-2,-2,4,9,7,3,-1,-7,-9,-6,8,-9,-6,-2,-6,10,-9,-10,4,-3,5,9,5,4,-8,-10,10,5,-4,3,-7,7,-9,-9,8,-6,-7,1,-2,9,5,10,1,-9,4,4,-9,7,1,1,-7,-4,-1,-10,2,-4,-9,4,2,4,7,7,-10,-6,-2,10,-5,4,1,-10,3,2,10,3,-1,-6,-6,6,1,9,-8,-1,-5,-8,10,3,-4,9,-3,4,1,2,-6,7,8,-9,5,1,8,10,9,-3,-8,-7,-7,5,-2,7,-3,5,10,-10,-7,-9,-10,5,2,-2,-2,-3,1,-9,3,1,10,-9,-4,-9,10,6,-7,-1,10,-1,-4,1,2,-8,-8,1,7,-10,1,-1,-7,2,7,3,9,-10,-6,-8,-5,-3,5,10,-8,-2,10,-9,-10,1,6,-7,-5,10,1,2,-2,6,-3,-9,9,-7,5,-5,8,-4,-9,-3,-9,-8,1,-6,-8,-2,1,1,5,6,-7,6,-9,2,-3,-2,8,-5,-3,3,5,2,9,3,-5,-5,-2,-8,3,-8,-4,1,2,10,8,5,-9,7,-2,1,1,-10,6,3,7,-8,-2,3,-8,9,6,-9,-3,-4,-7,2,2,-3,9,10,9,-7,10,7,2,-3,-10,-7,9,5,8,-5,1,-9,-6,-6,-10,6,-2,-7,8,3,2,-8,1,6,3,10,-1,-4,-1,-10,3,10,-2,10,-6,-8,4,9,1,7,-9,10,7,7,-6,8,4,5,-4,5,-7,-8,9,6,-5,4,9,3,7,3,-6,1,6,7,-10,-10,5,9,7,4,8,5,-9,5,-8,-9,9,6,7,-5,-6,-5,-5,7,-10,4,-8,-7,-7,2,1,2,1,-5,-3,-5,-7,2,-5,-6,9,-4,6,3,-4,-1,-8,4,2,10,-2,-8,7,3,-10,-8,-8,7,4,9,7,-4,4,-6,7,-4,3,10,-2,6,1,-3,6,2,10,-9,-1,3,1,2,5,7,-9,-2,7,5,9,8,7,-7,-1,-3,-1,8,4,-8,-7,1,-9,9,10,-7,-1,6,4,3,4,-8,10,5,-7,7,7,9,2,3,1,10,-4,8,-2,5,-6,-8,-10,-2,-5,10,8,9,7,-9,3,-8,6,7,6,-5,-7,-9,-6,-6,10,5,3,-8,-8,-9,-6,8,-3,-1,8,-1,9,-6,3,-9,5,-2,10,1,5,-8,8,-5,10,-2,-2,-5,-5,9,2,10,4,6,-10,-1,-8,7,5,-7,-8,5,-1,2,-3,1,-10,1,-3,-7,5,-9,9,8,-10,10,1,-9,-6,-6,3,-4,-10,-7,3,5,2,-2,-2,6,5,-1,9,-9,-2,-6,6,-7,7,7,-8,10,8,2,4,3,3,-8,-1,-9,-5,9,-5,6,-2,1,-7,1,-7,-7,-2,2,2,10,-10,8,4,-7,-4,10,-9,-6,-6,-4,-2,5,9,1,-9,5,-10,7,10,4,8,-2,6,5,-6,4,8,-4,-9,8,-8,9,8,3,-9,-4,2,8,-3,-10,10,7,-5,4,-9,-2,-7,-8,-7,3,-7,-7,-2,-7,-5,-1,4,2,-2,3,-9,10,-8,-1,9,-4,-2,7,5,-6,-2,-5,9,-6,-6,-2,-8,2,-1,2,6,8,7,1,-9,2,6,-6,9,-7,2,9,-2,-7,-4,4,-7,10,-8,-7,8,8,1,2,-7,2,-8,1,-3,-4,-7,9,-3,-9,-9,-7,8,-4,9,-6,3,-6,-2,-3,-5,-2,-7,8,9,10,6,7,-1,2,7,6,7,-2,-9,3,-2,-8,-7,9,-8,8,-6,-7,-5,9,-4,-1,7,1,8,3,1,9,10,6,8,-1,8,-5,4,5,9,2,-9,3,4,-5,7,-5,-5,6,-4,2,-4,6,-1,7,-7,5,1,3,-3,-2,-4,1,7,-5,-4,-4,-3,8,3,3,6,6,-5,-3,-9,3,2,-5,9,10,8,-4,8,5,7,1,-6,-9,8,-1,6,10,-8,-7,-6,2,2,-5,6,-2,-9,-6,-2,8,-8,-4,-3,-4,-9,7,7,9,5,-2,5,-6,8,9,-9,-7,8,-3,8,-3,8,4,1,-9,-9,-9,-6,9,1,4,-7,-8,4,5,9,-1,-7,-2,-10,5,1,-4,-3,3,-2,-3,-7,1,2,-5,3,-8,3,-9,3,4,1,3,2,-7,2,-3,-3,-10,2,6,3,6,-7,9,-10,-4,-1,-7,2,7,-6,-2,-5,-3,-10,-10,4,9,2,1,-10,-5,1,-4,-5,-6,-9,7,-3,-1,-1,5,9,-7,1,5,3,2,1,7,-7,5,3,2,-4,10,5,3,9,-7,7,2,1,6,-10,-7,7,-2,6,8,-8,7,4,-9,9,-3,-9,8,9,-1,-8,5,-2,8,3,-2,-4,4,9,1,1,-6,-9,10,10,-8,-2,4,3,4,7,7,-4,-9,6,3,-4,-8,3,2,1,-10,6,-1,-5,5,10,5,-6,-9,4,10,8,2,7,-5], dtype = "uint32")#candidate|2801|(1800,)|const|uint32
const_2802 = relay.const([[-9.893566,-4.682593,1.957096,-1.945194,-0.272701,-9.908448],[-0.132722,-4.901012,6.044051,-5.656958,4.726330,-0.585135],[4.324394,-7.259725,-4.214432,-4.712231,2.642119,-7.856234],[0.232122,-1.592255,2.188317,8.919939,4.548551,5.611109],[-2.678280,-1.749468,9.398752,2.841070,-6.830592,-9.757625],[2.806784,-8.595446,5.871577,-7.512298,5.519751,-1.061027],[8.420557,-9.342602,-1.121378,-8.770588,2.168880,-7.235372],[7.191646,8.039134,0.915930,-8.061815,7.047833,1.784581],[7.890830,4.254215,-8.251938,9.430009,-2.985816,5.155264],[-7.922181,3.209828,-1.101272,-2.971220,7.977307,7.273903],[-3.374460,2.495499,-0.826768,-2.624645,-3.589900,-4.561208],[-7.609428,1.493322,2.883772,2.892501,-8.074958,9.108049],[-4.205543,-5.523649,-8.513439,-1.077546,3.509675,-9.054705],[-6.245835,0.849492,-9.810484,-1.433721,9.542262,6.175276],[-9.977814,-7.831766,6.138618,1.603069,-9.872905,4.567889],[5.820943,0.871148,-0.375735,8.252770,-9.903061,2.601741],[-7.010560,9.531894,6.458039,0.620900,5.209001,-5.284154],[5.917646,-2.242064,3.408601,-2.971623,0.303679,0.735027],[6.665560,2.403859,8.993442,7.241505,-4.082462,-7.996741],[4.718286,3.337246,4.049752,-5.310481,0.171991,-1.747602],[-0.088623,4.132984,-0.413928,1.696964,5.022849,-9.970114],[-4.563291,6.914096,-4.752518,-0.923465,1.056975,5.265016],[-3.352213,7.812834,-6.163164,-5.562903,1.955304,7.440160],[9.412096,1.374074,6.410363,5.045890,5.400372,-8.451105],[-1.853122,-6.890289,-1.413308,6.986422,5.777552,-8.579719]], dtype = "float64")#candidate|2802|(25, 6)|const|float64
call_2798 = relay.TupleGetItem(func_703_call(relay.reshape(var_2799.astype('uint8'), [1, 16, 3]), relay.reshape(var_2800.astype('uint8'), [6, 16, 3]), relay.reshape(var_2800.astype('bool'), [6, 16, 3]), relay.reshape(const_2801.astype('uint32'), [1800,]), relay.reshape(const_2802.astype('float64'), [1, 150]), ), 1)
call_2803 = relay.TupleGetItem(func_710_call(relay.reshape(var_2799.astype('uint8'), [1, 16, 3]), relay.reshape(var_2800.astype('uint8'), [6, 16, 3]), relay.reshape(var_2800.astype('bool'), [6, 16, 3]), relay.reshape(const_2801.astype('uint32'), [1800,]), relay.reshape(const_2802.astype('float64'), [1, 150]), ), 1)
func_2753_call = mod.get_global_var('func_2753')
func_2757_call = mutated_mod.get_global_var('func_2757')
const_2808 = relay.const([[-2.483290,3.305501,-5.495755,-6.596821,8.857233,-5.635391,-2.093104,4.431672,-0.784223,6.115944,-8.560991,-8.736712,0.323020,-1.269553,-0.520642,3.825945,3.736996,-9.930660,4.422098,5.055097,-8.839050,9.177180,1.862880,1.150166,7.446522,-3.248359,-5.828975,-4.663518,-3.218009,8.851262,5.549682,6.739009,2.380149,-0.566679,-7.537284,2.688212,9.431323,-2.421278,6.539472,4.789571,-8.961117,-0.673825,-0.451290,6.486997,8.841756,1.748517,4.586333,4.949799,1.376982,6.527536,8.563266,-1.150110,6.892340,8.634666,-3.900940,7.618369,-3.804122,-1.034581,-4.411009,1.022220,-0.116963,-9.185523,9.229556,7.727953,6.522915,6.515953,2.051923,-5.362234,-8.714792,-8.240180,-6.492137,3.523792,5.788421,9.061239,7.786589,-3.319305,2.204184,8.351810,-8.919098,0.740969,-3.176925,0.205655,-6.463693,-3.099580,4.898002,-9.526357,4.249187,3.223635,4.985489,-0.842963,1.758070,-2.474804,-8.653630,-0.764143,-3.815566,-5.890940,-6.344746,0.116624,4.932707,1.530758,-3.205851,-2.266591,9.772287,-2.748555,-8.929951,-8.352351,9.544136,5.827876,-6.109892,5.286405,3.056445,5.469437,7.683600,4.618505,4.245802,9.032229,-2.206228,7.224895,0.981530,-9.420011,-3.628408,-6.082864,8.387456,0.489900,1.386633,1.330997,6.183468,-9.815009,1.569579,3.689556,-1.967308,-9.485945,3.721196,-7.117256,7.802197,-2.242817,5.982367,-7.104653,-8.029555,4.106717,-3.870786,3.707322,9.396188,-5.234304,8.846006,0.764486,-7.133288,-5.758801,0.898571,6.407406,7.625529,5.434589,-3.423106,2.422697,9.600330,-9.096945,0.879711,9.507006,7.275542,4.718142,-2.643011,-9.063943,-0.850772,-9.780661,4.769054,9.758598,3.322884,-6.986160,-3.991026,2.392229,-7.003198,5.040462,6.791170,-3.878349,-5.714923,9.761666,3.648227,2.989866,-1.387802,4.211736,4.403981,-3.671534,4.776776,-5.864096,-9.064643,-7.337485,0.718194,4.349447,-6.937947,7.814373,8.788740,6.217255,-7.442907,4.138219,-8.834208,1.939892,3.652638,4.048470,-2.163308,-9.784001,7.941914,2.358686,-0.092446,1.723591,-3.415989,5.158350,4.018085,-0.315804,4.309209,-3.545332,0.272346,-8.010529,0.218934,8.277700,3.091786,-3.552231],[-0.261552,-3.896131,-8.209857,-5.976336,-6.909305,2.108037,-4.793138,-6.390320,2.844047,-4.606300,-6.255502,5.325911,-3.230418,1.715029,-7.680915,-0.337318,0.352580,9.732433,-7.563790,-4.594051,1.985790,-1.732341,-5.952425,3.793069,0.852279,-0.942802,-5.118393,2.552183,-1.495112,5.663106,-3.685296,-9.295980,-3.571003,-8.741850,7.843984,5.530813,-1.271670,-9.252794,-3.960464,-4.060635,6.834142,0.396604,-9.313951,-7.643833,3.628675,9.417054,7.046346,8.822654,0.687168,-0.005102,8.930295,3.637014,6.046394,-5.632943,3.837318,9.576831,8.757151,3.290104,9.840185,-9.654124,0.464091,0.251657,0.273615,-8.559729,-6.892536,5.751210,-9.259851,5.149540,8.826005,-3.504570,-8.675515,9.283588,-2.398919,1.734425,8.953172,9.310259,8.156976,6.350941,2.647196,3.848753,2.920841,4.177500,9.686651,2.366557,-5.726585,0.620172,-0.375569,-5.312465,5.438602,-4.010953,-1.596249,8.961956,-6.209150,-1.087044,-9.622281,2.162641,6.734312,-2.517742,3.981990,3.432397,2.831698,-0.681002,6.322970,-3.837780,-5.556343,8.005367,-6.150712,-8.475908,-1.478094,4.106407,-6.596956,-0.306387,7.299840,-1.222180,-4.891933,4.971810,8.955148,8.909788,-8.051796,3.100985,6.944631,5.482436,-2.382220,-1.133228,8.422214,4.130831,2.676487,6.834635,-5.295650,2.038834,3.932079,-6.733857,3.615839,5.277610,-6.443667,-6.817573,-5.105918,7.484272,-4.835263,0.651994,0.255552,5.810059,-8.213832,-4.590351,6.253988,1.824367,-6.255970,8.492793,-0.387852,5.179548,4.282759,-8.755790,-5.918822,-3.830302,0.364125,-5.598857,2.654555,9.368901,-7.083373,-6.412349,-6.652439,-1.402717,-4.776746,-5.208007,-7.512466,2.070735,0.230157,6.597798,6.793468,-9.016344,6.916862,-8.690582,1.308552,-4.632202,1.506235,5.180427,9.536920,-0.863001,8.028646,-0.588410,-2.767920,4.760606,4.234054,4.321634,8.575576,7.600683,-0.314953,2.214443,-9.699163,3.989477,-3.914558,8.680820,-1.730590,1.805607,-1.910325,-1.788180,3.990411,-4.852847,-7.431594,-4.935884,-3.306448,3.983276,9.105104,-6.762272,-6.658094,9.643043,-2.868271,-1.197417,-0.769010,-7.135567,6.408154,1.831095,-5.236177,9.132719,-9.643836,-1.336162]], dtype = "float32")#candidate|2808|(2, 216)|const|float32
var_2809 = relay.var("var_2809", dtype = "float32", shape = (260,))#candidate|2809|(260,)|var|float32
var_2810 = relay.var("var_2810", dtype = "float64", shape = (990,))#candidate|2810|(990,)|var|float64
call_2807 = relay.TupleGetItem(func_2753_call(relay.reshape(const_2808.astype('float32'), [3, 12, 12]), relay.reshape(var_2809.astype('float32'), [260,]), relay.reshape(var_2810.astype('float64'), [330, 3]), ), 0)
call_2811 = relay.TupleGetItem(func_2757_call(relay.reshape(const_2808.astype('float32'), [3, 12, 12]), relay.reshape(var_2809.astype('float32'), [260,]), relay.reshape(var_2810.astype('float64'), [330, 3]), ), 0)
func_1009_call = mod.get_global_var('func_1009')
func_1012_call = mutated_mod.get_global_var('func_1012')
var_2820 = relay.var("var_2820", dtype = "bool", shape = (264,))#candidate|2820|(264,)|var|bool
call_2819 = relay.TupleGetItem(func_1009_call(relay.reshape(var_2820.astype('bool'), [6, 11, 4]), relay.reshape(var_2820.astype('bool'), [6, 11, 4]), ), 0)
call_2821 = relay.TupleGetItem(func_1012_call(relay.reshape(var_2820.astype('bool'), [6, 11, 4]), relay.reshape(var_2820.astype('bool'), [6, 11, 4]), ), 0)
func_1769_call = mod.get_global_var('func_1769')
func_1772_call = mutated_mod.get_global_var('func_1772')
call_2830 = func_1769_call(relay.reshape(var_2809.astype('float32'), [4, 13, 5]))
call_2831 = func_1769_call(relay.reshape(var_2809.astype('float32'), [4, 13, 5]))
var_2833 = relay.var("var_2833", dtype = "float64", shape = (990,))#candidate|2833|(990,)|var|float64
bop_2834 = relay.equal(var_2810.astype('bool'), relay.reshape(var_2833.astype('bool'), relay.shape_of(var_2810))) # shape=(990,)
var_2844 = relay.var("var_2844", dtype = "float64", shape = (990,))#candidate|2844|(990,)|var|float64
bop_2845 = relay.floor_divide(var_2810.astype('float64'), relay.reshape(var_2844.astype('float64'), relay.shape_of(var_2810))) # shape=(990,)
func_2278_call = mod.get_global_var('func_2278')
func_2282_call = mutated_mod.get_global_var('func_2282')
const_2849 = relay.const([-9.712184,-3.613772,6.307617,5.164454,4.111098,1.259433,-6.018912,5.252503,-1.441275,-0.813426,-4.873095,-6.338450,-1.320436,-4.271506,2.914325,-2.813520,-3.574601,-8.104276,-6.492050,7.691892,-1.293893,-9.278476,-2.783600,9.394628,4.473525,-6.182740,0.225667,9.050552,3.342558,8.246271,-9.314055,6.046505,-1.077149,6.092930,9.090540,1.726649,1.483276,1.127487,5.096407,-3.717164,-8.667893,-1.898921,9.298703,4.120971,4.510110,7.966210,8.595574,-2.327065,4.017456,-1.345657,-1.462509,-5.222911,7.342816,2.264405,2.089990,-8.418470,-6.147762,3.788164,-3.606042,2.516811,8.378686,-4.785550,3.766812,-7.346116,-9.149881,8.999552,-5.481796,-0.996062,8.032423,1.409791,7.924217,-2.225431,-1.655259,8.342962,2.489149,1.567542,8.313359,3.797448,-9.300225,0.757786,-6.979264,-7.439529,5.952628,4.647538,-1.251684,0.781391,-1.484196,-4.492384,4.655818,9.284023,-2.051905,4.782953,-9.663783,-3.577006,-3.668529,7.394849,-7.451303,-8.861247,-8.518888,0.288424,-9.360645,-5.374548,-5.852775,4.414437,-3.818814,-9.022835,0.493975,8.687853,-0.811415,4.949316,2.305847,-9.269747,-1.643822,0.597310,-5.097632,0.980419,7.283718,2.204031,-6.339831,4.823002,4.853155,3.866895,5.084516,2.916855,-3.369654,5.179602,1.535806,-7.481714,-3.513650,2.146628,-8.296212,7.686542,-7.826180,8.013605,7.080539,-2.404926,4.352450,-0.797081,-5.705403,-3.655848,-2.241581,-2.268501,7.623790,5.996623,2.631325,-5.180601,2.890341,4.361620,-8.932551,9.820388,-3.094393,5.652642,1.837293,-0.409469,4.474708,5.669079,-7.476728,0.507586,-0.159527,4.905410,6.372716,4.261350,5.710035,3.950108,5.373343,-1.753458,-2.165220,7.147534,4.840825,3.900478,6.416657,-6.188842,-5.591348,0.515644,-1.292358,-7.033960,1.415314,-0.227161,5.960130,-8.502682,-5.020751,-8.866909,-4.166242,8.268547,4.040542,-5.078408,9.280854,7.678576,6.450477,-0.450698,0.558592,7.874272,-5.298889,-7.509058,5.838685,-7.273750,3.359580,-8.849475,6.585822,2.222006,-9.634466,9.265722,-4.966106,-2.729034,8.762796,3.235757,6.643353,1.637196,-6.067886,8.670284,6.397659,-4.908771,-2.725562,-5.431357,-8.141946,3.433591,-1.447974,-6.256849,2.804339,-3.324519,7.939815,8.409118,-2.103191,-8.484202,-3.338134,6.056784,5.912237,-3.878859,-3.420687,4.220444,-3.225420,-6.470053,4.520341,0.831740,8.532236,-8.488804,6.182145,0.372767,-1.979744,6.493295,-2.329190,-5.521179,-1.961521,5.537144,-8.544184,4.092026,6.878849,5.701894,-0.791654,6.069435,-6.426353,-3.886128,-4.462416,3.451345,5.126116,8.685294,2.479517,5.999069,2.895634,8.537880,-9.032229,-7.869230,-6.654430,-1.828614,5.362222,-5.447267,6.123210,0.950090,-4.875115,2.288566,8.059416,3.077666,-4.308887,-5.329003,-9.954609,5.571160,-1.349989,-6.855275,0.811719,1.703110,3.206914,-6.330596,-3.717847,-7.560080,6.705587,-6.556677,-8.786232,6.249967,8.149691,-4.045515,8.524235,-1.467092,-5.221304,-3.521843,1.884151,-2.278071,9.573103,-2.000880,-0.404038,9.283328,-1.652040,9.199480,5.494293,3.251780,-6.313517,-7.227675,-4.655857,-1.832243,-1.862838,-1.753315,-7.411873,-0.401080,-0.793835,-1.199598,2.168755,-3.222395,0.705251,-4.567443,-2.145456,7.316143,-9.059836,3.601652,-1.340107,0.396355,-8.500603,8.469759,-2.651861,1.463422,-5.767899,9.556300,2.420877,6.086517,4.100361,4.249654,0.883893,4.976771,5.980228,-2.682348,-4.493598,-9.266780,-5.100742,8.783127,4.716279,0.537639,-0.013330,2.651638,-3.010965,6.389950,-1.023549,6.697252,4.354983,0.101501,6.710713,1.630951,7.735740,4.744149,6.565511,-5.866161,2.209726,-7.737791,9.923209,1.949008,-4.466417,3.283644,5.412047,-3.191518,5.052371,9.345637,-6.196446,-8.511050,-9.246622,4.836719,3.915747,-9.772880,7.318668,-0.765557,-8.347379,-1.367098,-0.609529,-9.122544,-9.054153,7.770266,-0.825705,0.898396,1.351033,5.408291,0.562954,1.542612,-7.473942,9.385731,-3.199702,-3.964871,4.212676,6.824007,8.930203,8.069059,-2.332981,0.552292,-5.048631,6.693345,0.541990,4.612863,3.095688,6.118202,2.094914,2.287210,-9.109272,-4.551976,-3.111703,-5.901716,1.753785,-4.015683,-2.702447,0.421870,-6.968862,-5.454178,2.603936,-8.110048,-7.230722,-7.472782,-0.671772,1.502981,-0.400678,-3.311264,1.592385,-6.438441,-0.990908,-6.354212,-5.714107,6.553440,6.794068,-1.753243,-7.172965,0.173038,-1.397274,-4.162264,-4.169852,-9.315684,9.139003,1.047691,0.485363,-7.354070,-7.820650,-1.142670,-6.746902,3.903553,7.076289,-9.295867,-9.106821,-4.427612,2.611411,7.491033,-4.625742,-5.826261,-2.237446,-7.204050,9.395402,-3.522255,4.140390,0.178523,-6.901383,3.771777,-0.691218,4.697147,-7.482488,-7.645039,-5.261695,4.957416], dtype = "float64")#candidate|2849|(468,)|const|float64
const_2850 = relay.const([5.609903,2.479610,-4.874070,5.976447,-9.307494,8.238553,6.911618,-0.094583,-5.138495,5.584956,8.309083,-5.983778,5.948703,-8.843113,-0.496690,3.902077,2.690744,-5.820534,-6.491547,0.616016,-0.551001,7.466124,-7.053857,-2.517596,-0.172512,3.959311,4.085153,1.778176,9.016240,4.466901,0.174696,4.390580,7.642442,-8.313974,3.684698,-5.242530,-3.973709,-1.368284,7.364548,4.365212,-2.433535,1.977236,1.063312,-2.278388,-3.568553,-8.499285,-7.752064,-8.399807,6.096565,1.470113,-8.858485,9.177035,-0.159898,0.910761,-6.575783,2.775344,1.915323,-2.792819,1.450368,4.427013,-4.401664,-2.776219,-7.526057,-2.368860,0.377019,-1.812297,5.169013,8.183864,3.064907,1.139670,9.347131,-5.407808,1.384881,4.485880,-8.810197,-4.221638,-4.502545,9.560794,1.301835,8.953883,-3.592285,-7.160650,8.110210,0.986822,0.653727,-4.381710,3.418112,4.978695,6.039345,9.907674,-6.131133,-3.853650,-2.782772,7.478343,9.240424,2.309031,-6.962194,6.347629,8.909377,2.665710,5.931760,5.303427,-1.040378,1.631794,-1.012762,4.874132,-2.164342,9.094780,-4.144341,-3.958860,6.388079,0.654416,2.660763,1.698098,1.738335,8.619463,-3.281526,8.408029,-6.668851,-3.994106,0.695765,1.379050,1.987766,0.442477,2.607784,6.290652,4.000290,-5.045081,0.080310,9.168834,-5.470000,7.270935,4.654644,-0.999785,2.553638,-8.291632,-5.265583,-9.411455,7.748061,4.187451,9.276751,1.366360,4.408236,-2.041118,-0.370267,3.665609,-0.104042,9.342405,8.030601,3.837209,0.526546,-5.169011,1.119387,3.778103,-3.406378,1.034247,-0.392715,-3.189293,3.547273,-3.071818,-1.579193,-3.583291,4.981818,-0.235397,1.778578,6.473965,-3.882927,9.127981,7.632236,-6.192340,8.226844,5.634579,-7.443037,-6.766148,-5.027861,2.043943,-8.817507,-7.860965,-8.389958,9.370418,-4.816885,-9.666056,-1.967913,4.066631,-3.816087,6.808250,0.070498,4.391586,-7.305744,8.063395,6.024228,6.914444,6.200427,0.099222,-1.692502,3.570158,8.439116,5.133965,8.876570,6.287571,-3.759975,-0.082219,-1.226137,-3.296604,2.943325,3.956775,-6.530056,-9.020982,-9.347799,3.661128,-8.660990,-7.736703,-3.382948,5.661345,-6.714789,-6.468354,5.698534,-6.403539,-1.131265,-4.790898,4.409273,-9.412679,-7.950148,3.307160,-4.892171,-4.713571,9.230442,1.166442,-8.753983,-5.309477,3.267720,-0.093096,6.036455,-6.150000,5.322202,3.661989,9.052028,-9.543864,-9.537160,-4.910967,8.819013,-4.362004,8.265287,-9.730331,-8.196744,-4.128891,0.848830,3.879734,-2.126187,8.834297,-1.186217,-6.273728,-7.199063,-6.164458,-7.353828,-6.344360,4.835589,-9.185899,-4.556639,-2.972300,8.801699,-4.032490,4.719348,7.641911,-6.203944,8.784227,1.512692,-7.216144,2.846505,9.226735,6.277545,5.522558,-4.413076,-4.868408,-2.721213,9.667853,1.324571,6.846954,1.534287,-2.304142,6.630383,7.530138,1.468400,-6.179571,-3.218764,-7.036609,0.698490,-4.920348,-8.307674,-1.567976,1.237306,-1.979749,-6.390797,-9.801295,0.988588,1.034516,-5.464968,9.976972,-0.708903,-1.083426,3.658236,-7.712424,-2.190771,-2.968202,3.243718,-0.692384,5.587175,-0.843454,-3.622360,6.183053,7.363074,-5.508169,5.800901,-2.883768,4.143816,-7.282267,3.392465,-9.326120,9.446767,-0.067711,5.224916,-8.745902,-6.605138,-3.105418,6.768808,-7.710430,-4.217446,-7.026311,-8.641270,5.060698,-0.207614,9.059098,5.375479,4.736726,-9.985864,3.534364,-8.628986,-2.111640,-4.798644,3.727373,3.877991,8.698469,-7.071938,3.669182,-5.434451,4.463349,3.286769,-2.946643,-5.989965,3.162370,-2.833357,-0.345954,-2.775534,8.538978,-4.184266,-9.522083,-6.236896,1.353294,-9.924116,0.034258,-5.882337,9.016657,1.402604,-3.385300,0.207137,6.674376,-9.274746,6.575439,-0.780221,-1.060135,5.609680,-6.507627,-9.670887,9.307139,8.407534,1.137335,8.491334,9.007720,-6.212063,-6.316346,5.041889,7.148664,2.474205,6.046324,5.364387,-0.347606,-2.640907,-9.546869,4.755446,3.949890,9.796430,-5.429914,0.216872,3.832965,1.749650,-2.081152,7.423842,-0.580585,-5.984746,0.143827,5.482452,-6.199772,-8.417113,-7.313913,-4.055366,-7.968830,-6.831933,-1.972453,-2.429809,-4.119878,0.545033,4.310090,-3.927218,-4.655843,1.409958,9.113699,0.453368,-7.300692,-2.167475,6.456824,7.090687,-1.180183,-0.084855,6.453539,7.756022,-7.214040,-7.827113,0.066038,-7.651330,6.928835,3.111790,-1.732140,2.057438,7.190795,-4.788022,-0.836795,-3.907778,3.378238,-6.680994,-2.046559,-2.658652,-1.123445,-6.085781,-4.321667,8.036750,-0.504363,-6.346010,-8.717781,4.441286,4.250572,-5.608199,1.869710,5.571600,-1.444901,-2.503690,5.704888,6.054442,3.631925,9.815369,-3.397368,-3.385665,-0.461448,-7.594068,-5.198964,-3.256502,3.523107,5.404689,3.607353,6.401722,-8.920890,-4.952688,5.212616,-7.980169,5.581019,-4.430770,-6.830434,-3.575334,8.568834,9.455362,4.901844,3.634819,6.494875,2.230917,0.203911,-1.128642,-9.620088,3.926904,-5.438149,4.717324,-5.942121,-8.713657,-2.212717,8.855373,0.468747,1.121770,-6.457123,9.166295,2.274311,-1.780066,0.601813,9.003544,-8.011466,2.096516,-8.109798,-6.965336,-1.259257,3.154526,-6.271802,-8.951027,-0.173196,-5.466962,5.153119,-1.938918,-3.344777,6.551889,1.363340,-9.556676,-6.006565,-3.510500,-4.738760,5.633692,2.879677,4.103130,5.639809,7.337082,0.201559,-5.338432,8.593314,1.675641,6.771044,-7.901684,9.338422,-3.791149,-4.473160,-6.782557,-7.028132,-8.704862,1.287315,8.166716,3.719109,-9.154641,-7.515143,0.903651,4.661551,3.802633,-7.042764,1.010441,-3.822489,5.375466,-9.836031,9.115000,8.901595,6.661428,9.461528,8.951807,3.988832,7.466022,-5.556840,-5.626182,-9.567337,-3.889785,6.375441,-4.602206,-2.214163,-5.146870,-1.748436,7.916799,7.541224,-0.171589,4.453221,-0.810685,6.528822,-8.951057,-1.680486,7.150004,-5.346163,6.885936,0.405177,-2.157564,1.295461,-3.844013,-2.385076,5.207823,-6.115471,0.254749,1.910363,2.997610,3.899903,-5.895643,-0.036203,-5.602260,-5.683960,-9.063364,-9.830001,8.991253,3.327122,8.022853,4.264917,-2.180788,-7.703847,2.535043,2.830302,-7.113938,-6.637755,-4.449522,-3.126235,5.941891,6.456216,-2.584537,-1.040331,5.832507,4.661539,-8.452368,-0.276949,5.295591,-3.834092,-3.902317,9.212443,-6.295035,-6.372817,-8.696646,-3.284146,0.553833,3.410047,2.953359,4.913222,2.256042,0.047521,2.757935,-7.944133,-1.542876,1.672831,-3.225248,7.189608,-7.954813,-9.004072,-9.750323,-9.763488,-9.007116,5.752734,-8.406196,-8.781000,7.499576,3.085901,5.966510,5.050868,-2.444249,6.435958,5.357654,5.455249,-3.751654,-0.541316,-2.390790,-2.185640,-2.532774,-9.495024,-2.169612,8.627360,-1.733063,-6.036159,-3.981674,8.406873,-9.296220,-8.574292,5.014353,4.510632,0.446730,-2.946035,-7.932065,-3.541793,-7.053071,1.449373,4.815210,3.038632,9.010073,-2.421010,6.726805,-6.284532,-5.532051,-3.595626,8.750286,7.482090,8.611224,-5.902396,-9.923830,2.916719,-0.121720,7.221601,0.381681,6.037539,-6.816901,-0.186782,-5.808220,8.021095,1.811869,-3.264866,8.962794,2.225040,-9.255806,-1.546322,-2.492575,2.442013,5.307364,5.115640,9.477929,6.313201,-8.156843,-6.571268,3.594085,9.320326,5.413803,1.067055,2.612525,7.814349,-3.361039,-0.603082,1.146570,8.894195,-1.353241,3.026806,-3.774708,2.513220,5.108869,7.332095,1.845573,9.956649,-0.083517,3.510397,-5.390028,1.523830,-1.942964,2.819307,-8.822186,-2.948437,6.737129,-5.269300,6.635065,-1.110369,9.102265,4.177941,-7.882581,1.369535,0.211695,-1.993278,-2.780783,-0.968942,1.643323,-3.757586,1.273322,-7.963366,0.339348,-1.287102,-9.856629,7.311378,-3.459350,-7.088365,4.108861,0.617673,-6.092232,-9.214957,-8.662473,-6.370681,9.622738,9.651763,0.708716,6.731630,-9.188515,5.747789,0.009930,2.424674,1.680694,-9.606741,8.649775,8.453092,-7.427270,-3.706227,2.784397,-9.551381,-8.662972,7.015957,-2.223809,-2.348413,-9.273872,3.479778,-8.875888,2.779916,2.061172,-0.846758,5.161573,-8.416267,-1.356857,-1.403087,3.940102,-5.908038,-7.475828,-8.590720,-8.240910,-9.194274,-2.250389,-8.535701,-9.153291,3.762291,-9.718062,-5.575563,5.271688,5.364544,-6.134923,6.640090,-5.244106,4.432075,4.235676,4.598341,-7.586595,-9.124671,-1.910105,0.177625,-3.783170,-0.355328,-4.040679,3.464172,2.868945,1.731770,-9.261118,-1.709055,-1.140931,-4.682676,4.330789,-5.180031,4.549085,-0.234487,6.433410,-7.915709,-4.465681,-4.140757,0.291976,2.112691,-0.455441,-2.074532,2.423668,-6.880707,-3.006930,-3.128787,-9.647525,5.873273,4.689137,0.253065,0.789825,6.474875,-8.721383,5.092827,5.836384,7.899796,9.173254,-2.731327,-6.022343,7.843360,4.413355,-4.106160,-4.326223,7.298042,4.166739,-6.025669,-4.365215,9.975685,-2.779043,3.304669,1.029949,3.482312,-0.969451,9.268360,-7.407903,-0.018521,-7.704522,-8.533732,-6.346683,5.302220,-0.448990,5.494001,7.944633,-0.090964,0.112303,6.531691,-1.721976,3.641834,-1.574111,1.952977,0.346722,3.466215,-2.115234,-4.788650,1.968331,-3.994668,-1.918538,2.877834,-9.189013,9.873095,4.914458,-9.019871,0.253509,-6.746367,1.443821,0.391889,5.921458,-6.419530,-3.962495,2.595684,-9.944072,4.779660,1.648738,-5.836065,-8.802716,2.374379,-5.412072,9.702149,5.830596,-4.659708,9.637198,-9.772121,-8.717695,-0.144728,0.068009,-0.348327,-0.687283,-0.021502,-6.915830,5.490375,-8.485175,-1.200479,8.254984,4.296041,-2.850298,7.506782,9.323003,-9.897820,-9.965866,-5.921319,-5.249624,-5.612845,-9.583233,-9.561061,2.559890,-3.071226,-2.758542,9.379171,-4.252941,4.526706,-6.577427,8.374569,-4.424805,3.457208,-5.403082,-8.239937,-1.893726,7.032395,-8.960867,-9.447639,-3.392618,3.845346,5.562133,-3.920504,7.787778,-4.465202,-4.468779,7.839143,-3.837808,3.477944,-9.977543,2.500271,-7.260963,-6.575641,2.082488,7.509947,1.903526,-1.831559,4.948367,-3.061380,-3.220364,-0.609347,-2.477275,1.373243,-0.286497,-1.437850,2.603429,4.282672,-4.889223,-1.029751,-6.509827,4.638554,-0.036261,9.748087,-0.376014,0.814138,-6.103338,8.541501,1.199091,7.748391,-3.622712,0.862538,-2.357542,4.618462,-1.192465,-9.361993,5.298480,-6.532058,3.318384,1.714746,4.438479,1.566133,-3.724598,1.856648,5.284361,2.966704,-6.258517,6.137607,-3.943819,2.495787,-2.166275,3.444024,-3.087830,-2.008792,1.492713,4.790404,-2.997474,2.000269,-4.956499,-5.253372,4.061209,7.940733,-4.369425,-4.384388,9.140797,3.415916,1.930163,-4.859990,-9.289703,-0.450747,-5.195903,9.193714,-8.175633,-9.930536,5.515928,-2.988108,-2.875005,-7.216282,2.860622,8.442830,-8.713421,-5.546639,-8.163814,0.661266,2.926532,-6.103094,-3.383602,-5.622166,-9.306609,4.966419,-1.029661,0.899492,2.982477,3.136208,-8.861129,7.882653,-3.756563,6.294527,-2.187357,3.167353,-8.436258,-5.045368,2.508856,8.636447,4.033531,6.831529,-0.436270,-9.147807,-8.030670,-8.356673,2.628957,-0.181614,-6.681599,-7.178260,-0.293578,-8.672843,4.880684,4.934038,-1.833051,6.284334,4.238404,2.338991,2.470820,3.501698,5.080596,-7.507518,-9.017705,-7.421119,-6.888794,3.043982,8.076831,5.784139,-7.966525,1.068382,3.497150,-1.246777,-7.619260,5.402052,-8.609004,3.265893,-1.930852,-8.028805,-5.214240,8.290121,1.097832,-2.754993,1.163922,4.184759,-5.131579,-3.296813,3.748584,8.275629,-1.227229,2.743489,5.759464,-8.766789,1.590408,-4.692204,-9.749400,-2.499497,5.950546,-4.026730,9.054272,-1.134439,-4.403061,2.060706,-5.723059,6.770282,2.084956,5.068468,-7.379580,6.608786,-0.308779,4.122543,6.767877,-7.811715,-9.103713,6.931143,-1.824197,-0.375726,-2.858406,7.691286,-7.812069,1.367428,0.647424,-4.094430,9.545962,8.866472,-7.860100,-2.720600,8.415784,-2.999012,8.551614,6.696334,0.552663,-5.920714,4.097873,-3.067370,4.480222,-2.538293,-4.338910,-9.226307,-3.070786,3.409126,-4.880718,-2.005960,-5.838810,-0.554999,0.354430,-8.866335,1.380876,-4.062124,-3.833468,-8.484492,4.611164,-6.290352,0.089754,0.454257,3.367918,-2.655622,-4.105710,7.763219,0.476128,-4.482442,1.846148,-3.373738,5.735920,9.161464,5.575776,8.030394,-2.901511,0.838883,-0.546527,2.113386,2.509384,-7.973636,4.082952,7.217553,9.187115,7.972403,-3.765133,8.682068,-8.194705,2.216929,-8.322249,-7.084187,-7.063890,-6.029096,-9.164639,-9.042483,-0.623893,9.498814,-9.872450,-6.663421,-3.028962,-2.236788,4.592383,7.127697,0.756575,-5.685971,8.930772,-8.207569,-7.028144,0.535852,0.875740,-7.148710,-3.645935,7.076805,-3.411869,-7.426402,3.738049,6.875722,-7.513657,-9.135932,6.245001,5.573569,-0.424638,2.900852,-7.930600,1.085626,-8.825034,1.440346,-1.660819,-8.744952,1.726938,9.032064,1.500405,4.118612,0.243919,6.945757,-3.755548,-2.991500,4.601861,9.364426,-5.619435,7.947739,4.690709,3.909512,4.453758,-4.105649,-5.932680,6.608715,5.185670,3.665255,-1.242441,2.188451,1.959788,3.137316,0.456319,-4.057717,-3.227317,9.286144,6.234273,2.732438,-6.769875,1.176385,6.218137,-2.428434,9.530590,-7.623160,4.766560,0.883595,8.859890,2.745912,8.248278,-8.981661,8.873233,6.315858,-6.764128,4.143617,0.784909,8.062719,7.211056,8.786869,3.846147,-8.715442,2.748029,5.635081,2.852224,-2.449358,-0.160970,-1.326466,-8.846210,-3.020584,-4.127951,6.737882,-1.119155,-3.789548,-2.153416,2.776792,2.848733,-0.775494,9.373094,5.389679,-7.373930,5.178024,-0.453518,-5.206331,-6.006760,6.245355,-9.405565,-4.042039,0.449639,-3.052836,-4.123738,6.566661,-4.777066,-7.743677,7.329571,-2.223749,4.721433,0.727325,8.425789,-1.279755,-7.229583,-3.854804,-7.156585,-1.777997,9.489353,-2.922627,-5.072198,-2.876865,1.352971,-1.289513,-1.449521,1.483800,-2.842495,-8.564629,-7.815474,4.901333,-2.997975,-5.488635,-3.091211,4.874375,4.723677,6.085378,1.499258,-1.679614,4.827730,-0.235495,1.098456,9.585210,-8.574800,6.339801,0.573445,9.905326,-6.784867,-4.846629,-2.458867,4.694442,7.272140,4.989950,-4.366171,-0.330895,-6.263141,8.661119,-3.954019,-9.375866,-7.892504,0.951726,-4.454585,-2.863642,-3.286437,-7.302661,-9.853065,4.521512,-2.351371,-6.615499,-8.993595,-8.227510,2.624173,9.525102,8.379391,-4.440917,1.530678,4.899918,9.594664,7.064054,-1.708669,-0.239035,7.137713,4.016468,5.265804,-8.645379,-9.946139,-3.830029,-7.017590,2.365345,5.309655,-7.181314,6.074405,3.036731,4.470738,6.242427,-7.639012,-3.508572,9.521170,6.823113,0.377022,-8.626954,0.653577,-8.879577,-7.258090,0.421546,7.233631,3.079887,5.427511,0.865842,2.790694,-3.867050,3.937174,6.829487,-6.126999,4.448421,-6.609353,1.478776,-5.466685,9.828580,2.231026,7.873687,-1.404201,-7.953621,8.033373,-4.818483,-3.475288,-6.272044,3.310781,-7.424088,-5.238200,-2.068266,0.369474,-2.300023,1.673741,9.761259,-5.930829,7.666586,9.663702,-1.464264,-2.474095,1.241534,-3.252647,-0.835130,0.652248,1.231857,-7.009726,-8.125143,-0.312145,5.642615,-8.870721,-3.009007,5.469762,-7.740819,1.055638,5.516553,7.723726,-6.532344,-4.391007,-9.245968,5.514678,-5.213330,1.718256,-7.344025,5.183940,5.655061,-3.837017,1.480480,8.693010,-3.010835,-0.350688,-3.706610,-8.326160,4.483280,5.951274,-7.064930,-5.582565,-0.336913,5.702171,3.287319,8.186342,-7.064737,-3.163994,2.006827,2.371290,8.775751,-3.273451,-2.733103,-2.332263,3.582386,0.470339,6.757202,-3.165844,8.331308,-0.316560,2.156252,8.347941,7.978137,8.097311,9.881627,-4.192811,-2.720146,9.717730,5.542894,9.055605,7.439544,-0.064635,-5.944386,3.639867,-3.849294,-0.180382,2.104138,9.728301,7.756800,3.276904,-1.681363,9.723407,-4.166316,6.411838,3.556437,9.304286,2.646140,3.273898,-5.971541,4.950493,-4.177340,-3.204898,6.393618,-2.389686,-2.868340,3.340044,2.430482,-6.034825,5.623021,0.354051,-8.369672,-5.612475,-0.239712,5.179585,-1.258565,4.797190,-7.003626,-5.270758,6.812711,-3.838215,-2.217911,-1.548449,1.005094,-7.761138,-1.006894,9.413106,-1.338470,-6.398560,5.857648,6.667609,-1.814142,-8.940302,2.445654,-5.970644,9.604742,-9.811290,7.816371,7.946365,5.530345,6.510043,5.502089,-3.671208,-7.831465,-9.438675,-7.710241,8.842595,-3.535557,4.856321,-1.598068,-0.425603,1.745448,-6.231150,-5.835756,1.661905,8.364933,9.636123,6.125216,-5.983442,5.406445,6.497343,-8.091528,-4.723117,-0.848421,-9.796186,-7.046521,-0.541220,-0.942463,-6.936689,-8.788929,-9.353891,-7.483710,-5.466597,-9.011453,-6.302995,7.535077,9.699499,-9.985620,-3.400146,-9.637809,-2.298127,5.124931,-3.603778,9.286948,-4.686433,-5.061309,8.432040,3.389687,-7.816604,-7.626766,2.841078,-6.757584,7.977138,-0.836546,8.919351,9.511486,5.729403,-9.102829,-5.965092,-8.305837,3.638441,6.853924,-4.518809,-8.296865,-3.260339,5.305343,-2.187097,5.431986,-3.613510,2.757586,-7.292016,9.932874,7.636526,4.133195,3.957600,1.187032,-4.901219,7.686256,4.404464,9.413092,-8.698394,1.106691,-3.362369,6.227429,-3.825625,-9.644212,6.762860,6.580381,5.188232,-7.809327,-7.739390,2.212617], dtype = "float64")#candidate|2850|(1680,)|const|float64
call_2848 = relay.TupleGetItem(func_2278_call(relay.reshape(const_2849.astype('float64'), [3, 13, 12]), relay.reshape(const_2850.astype('float64'), [1680,]), ), 3)
call_2851 = relay.TupleGetItem(func_2282_call(relay.reshape(const_2849.astype('float64'), [3, 13, 12]), relay.reshape(const_2850.astype('float64'), [1680,]), ), 3)
func_1009_call = mod.get_global_var('func_1009')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_2852 = relay.TupleGetItem(func_1009_call(relay.reshape(call_2819.astype('bool'), [6, 11, 4]), relay.reshape(var_2820.astype('bool'), [6, 11, 4]), ), 0)
call_2853 = relay.TupleGetItem(func_1012_call(relay.reshape(call_2819.astype('bool'), [6, 11, 4]), relay.reshape(var_2820.astype('bool'), [6, 11, 4]), ), 0)
uop_2854 = relay.sin(const_2808.astype('float32')) # shape=(2, 216)
func_2305_call = mod.get_global_var('func_2305')
func_2308_call = mutated_mod.get_global_var('func_2308')
var_2858 = relay.var("var_2858", dtype = "float32", shape = (1, 1716))#candidate|2858|(1, 1716)|var|float32
call_2857 = relay.TupleGetItem(func_2305_call(relay.reshape(var_2858.astype('float32'), [13, 12, 11])), 0)
call_2859 = relay.TupleGetItem(func_2308_call(relay.reshape(var_2858.astype('float32'), [13, 12, 11])), 0)
bop_2884 = relay.less_equal(uop_2854.astype('bool'), relay.reshape(const_2808.astype('bool'), relay.shape_of(uop_2854))) # shape=(2, 216)
func_2753_call = mod.get_global_var('func_2753')
func_2757_call = mutated_mod.get_global_var('func_2757')
call_2887 = relay.TupleGetItem(func_2753_call(relay.reshape(uop_2854.astype('float32'), [3, 12, 12]), relay.reshape(call_2830.astype('float32'), [260,]), relay.reshape(var_2844.astype('float64'), [330, 3]), ), 1)
call_2888 = relay.TupleGetItem(func_2757_call(relay.reshape(uop_2854.astype('float32'), [3, 12, 12]), relay.reshape(call_2830.astype('float32'), [260,]), relay.reshape(var_2844.astype('float64'), [330, 3]), ), 1)
output = relay.Tuple([bop_2795,call_2798,var_2799,var_2800,const_2801,const_2802,call_2807,var_2809,call_2819,var_2820,call_2830,bop_2834,bop_2845,call_2848,const_2849,const_2850,call_2852,call_2857,var_2858,bop_2884,call_2887,])
output2 = relay.Tuple([bop_2795,call_2803,var_2799,var_2800,const_2801,const_2802,call_2811,var_2809,call_2821,var_2820,call_2831,bop_2834,bop_2845,call_2851,const_2849,const_2850,call_2853,call_2859,var_2858,bop_2884,call_2888,])
func_2899 = relay.Function([var_2793,var_2794,var_2799,var_2800,var_2809,var_2810,var_2820,var_2833,var_2844,var_2858,], output)
mod['func_2899'] = func_2899
mod = relay.transform.InferType()(mod)
mutated_mod['func_2899'] = func_2899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2899_call = mutated_mod.get_global_var('func_2899')
var_2901 = relay.var("var_2901", dtype = "bool", shape = (14, 10, 15))#candidate|2901|(14, 10, 15)|var|bool
var_2902 = relay.var("var_2902", dtype = "bool", shape = (14, 10, 15))#candidate|2902|(14, 10, 15)|var|bool
var_2903 = relay.var("var_2903", dtype = "uint8", shape = (48,))#candidate|2903|(48,)|var|uint8
var_2904 = relay.var("var_2904", dtype = "uint8", shape = (288,))#candidate|2904|(288,)|var|uint8
var_2905 = relay.var("var_2905", dtype = "float32", shape = (260,))#candidate|2905|(260,)|var|float32
var_2906 = relay.var("var_2906", dtype = "float64", shape = (990,))#candidate|2906|(990,)|var|float64
var_2907 = relay.var("var_2907", dtype = "bool", shape = (264,))#candidate|2907|(264,)|var|bool
var_2908 = relay.var("var_2908", dtype = "float64", shape = (990,))#candidate|2908|(990,)|var|float64
var_2909 = relay.var("var_2909", dtype = "float64", shape = (990,))#candidate|2909|(990,)|var|float64
var_2910 = relay.var("var_2910", dtype = "float32", shape = (1, 1716))#candidate|2910|(1, 1716)|var|float32
call_2900 = func_2899_call(var_2901,var_2902,var_2903,var_2904,var_2905,var_2906,var_2907,var_2908,var_2909,var_2910,)
output = call_2900
func_2911 = relay.Function([var_2901,var_2902,var_2903,var_2904,var_2905,var_2906,var_2907,var_2908,var_2909,var_2910,], output)
mutated_mod['func_2911'] = func_2911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3129 = relay.var("var_3129", dtype = "float64", shape = ())#candidate|3129|()|var|float64
const_3130 = relay.const([[[-6.838974,-1.395869],[6.816745,8.180042],[3.296378,7.583095],[-1.447145,4.804495],[-2.801063,1.266318],[-1.658217,6.105372],[4.897863,-7.590583],[6.216751,1.233564],[7.777394,-8.497630],[5.971813,8.001593],[7.722840,-4.170650],[2.807999,-9.395686],[-6.924226,5.064701],[3.748217,5.718789],[4.947338,-8.406543]],[[7.496008,-3.093620],[9.787699,3.653741],[-8.481389,-0.641095],[9.520426,5.232654],[-4.066766,-5.653306],[-3.319846,-9.606452],[-6.259161,-0.330132],[1.472442,1.489837],[-4.653197,1.298846],[-6.284747,1.106815],[-9.317077,0.172811],[-7.848860,-3.222787],[-2.896603,-2.755648],[-1.107593,-9.918246],[-4.471405,-4.042236]],[[2.898826,-7.014573],[6.606352,3.915840],[1.115758,-5.213248],[-8.242062,3.194578],[7.206155,-4.447469],[3.830279,-9.150907],[6.777403,-5.783199],[0.818553,6.296912],[-5.523184,1.252885],[3.670345,-9.106085],[8.195955,-9.034945],[-3.244204,-7.773796],[-0.414879,6.014470],[7.662791,9.472579],[-8.917504,-4.682763]],[[8.551291,-4.525022],[-3.177601,7.783690],[-3.460766,-6.345843],[9.082498,-7.364244],[-2.987664,2.172385],[8.064835,-4.965747],[-7.145956,0.404178],[-4.839441,-0.351779],[6.752462,5.998517],[-9.000701,0.404403],[-3.693307,-8.080127],[1.227410,0.016438],[-4.831482,-0.442015],[8.609315,-1.451419],[-3.398850,-3.118163]],[[-3.068493,-0.426020],[4.374653,0.336551],[9.724766,5.286237],[-2.179817,8.742404],[-4.280047,0.628700],[1.117414,-9.021252],[5.445076,-9.552198],[-7.409370,-0.678444],[9.031296,-4.449088],[-4.885359,2.188785],[-4.773452,-9.976259],[-0.395458,-7.313546],[-4.416077,8.733033],[9.221063,0.118973],[6.051807,7.343638]],[[-2.897554,-1.953279],[-0.256592,6.429462],[-1.327164,-8.096504],[5.832614,0.211268],[-6.417893,-5.349570],[0.106074,-2.437875],[1.852204,6.711305],[1.674724,-4.234662],[-5.045577,-2.433250],[8.517516,-2.581759],[-3.194294,-3.047296],[9.261893,2.345738],[-6.049225,-2.249592],[-4.287611,-9.180236],[-2.297419,-3.924159]],[[-4.355548,-3.422604],[9.415757,-3.419837],[-2.099132,-6.689413],[6.417419,-0.693694],[-2.059451,5.811098],[5.184196,-8.670028],[-5.197927,5.520896],[4.906474,9.332407],[-3.894549,-3.658367],[-4.193311,-0.854593],[4.371211,6.109235],[7.418504,5.707531],[4.674201,-2.629188],[6.331430,-7.851628],[-1.428406,-6.243768]],[[2.918048,6.097900],[1.149278,2.930883],[-5.693489,-8.495672],[-6.693487,1.713122],[0.959234,9.091850],[7.589857,7.488224],[0.827427,-7.897647],[1.616279,6.341641],[-3.435549,-4.134628],[-1.839837,2.648999],[2.467670,1.584488],[1.579708,-7.876289],[1.172573,-5.993724],[0.078087,6.478282],[0.693681,-8.445285]],[[8.882149,-7.742548],[3.990187,4.020598],[-1.851970,-4.672143],[9.748103,-9.001193],[-4.390242,3.272401],[-7.877135,-4.851362],[-6.004280,-2.936037],[-0.257235,-4.324103],[-3.481003,2.230366],[-4.339263,-1.805641],[-1.725403,-0.258083],[-7.387739,-3.053135],[4.290623,-6.885442],[9.106104,-6.857819],[4.860756,-0.012690]],[[1.241759,0.381247],[0.448658,2.014215],[0.003322,-3.969517],[5.461969,0.903577],[6.240295,-1.832212],[-0.589606,7.965351],[-5.617094,4.662310],[-2.191870,0.059251],[-9.118725,-0.176747],[3.353896,6.487084],[5.510251,-5.760776],[9.922105,-9.346190],[-8.706473,6.113932],[6.373284,-7.360314],[-7.479492,6.941155]],[[0.852416,8.295128],[9.020630,1.087141],[3.486491,-5.561488],[6.247328,3.791867],[-0.421432,3.241938],[1.240247,9.246159],[3.526723,-0.970197],[5.415640,3.657499],[-5.353620,9.025725],[-4.773851,-9.059669],[6.307301,-5.357977],[-8.301783,0.801303],[7.624922,0.583743],[-2.971636,0.476483],[-7.304892,0.553063]],[[-4.036307,4.922390],[5.671550,-4.608404],[6.075461,-3.706813],[7.099025,4.350046],[-0.547225,3.928808],[-3.234478,-3.189268],[4.609215,-1.834820],[8.667499,-5.608143],[-2.492125,-1.845838],[-9.014859,3.344271],[-1.926453,-3.477330],[-5.745063,1.713132],[8.897136,-1.615386],[6.227039,-8.736592],[9.170831,-5.000378]],[[-0.816390,-9.551721],[-3.610298,1.584639],[6.079744,6.601011],[-6.013013,-3.049220],[1.954235,7.085001],[-4.273722,-7.166638],[1.120097,-9.712842],[-5.162643,2.144765],[9.106527,3.413434],[9.715912,-8.299871],[-1.446499,-1.328045],[-5.565058,9.172056],[-3.477050,-8.404629],[4.319880,-0.784195],[8.610033,8.032729]]], dtype = "float64")#candidate|3130|(13, 15, 2)|const|float64
bop_3131 = relay.floor_mod(var_3129.astype('float64'), const_3130.astype('float64')) # shape=(13, 15, 2)
output = bop_3131
output2 = bop_3131
func_3142 = relay.Function([var_3129,], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3143 = relay.var("var_3143", dtype = "float64", shape = ())#candidate|3143|()|var|float64
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3144 = func_3142_call(var_3143)
output = call_3144
func_3145 = relay.Function([var_3143], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3189 = relay.var("var_3189", dtype = "float64", shape = (3, 2))#candidate|3189|(3, 2)|var|float64
var_3190 = relay.var("var_3190", dtype = "float64", shape = (3, 2))#candidate|3190|(3, 2)|var|float64
bop_3191 = relay.greater_equal(var_3189.astype('bool'), relay.reshape(var_3190.astype('bool'), relay.shape_of(var_3189))) # shape=(3, 2)
output = relay.Tuple([bop_3191,])
output2 = relay.Tuple([bop_3191,])
func_3204 = relay.Function([var_3189,var_3190,], output)
mod['func_3204'] = func_3204
mod = relay.transform.InferType()(mod)
var_3205 = relay.var("var_3205", dtype = "float64", shape = (3, 2))#candidate|3205|(3, 2)|var|float64
var_3206 = relay.var("var_3206", dtype = "float64", shape = (3, 2))#candidate|3206|(3, 2)|var|float64
output = func_3204(var_3205,var_3206,)
func_3207 = relay.Function([var_3205,var_3206,], output)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3238 = relay.const([[[7.683217,7.497922,3.230169,-8.229900,0.329432,5.842795,3.964665,7.542160,-0.079936,-7.286129,-2.852312,4.179318,4.397302,0.233733,-2.458970,2.604374],[-7.422489,4.340548,5.015044,0.522616,2.590320,-2.473272,0.870167,-5.161291,2.234200,8.715836,-1.276826,-1.935078,4.807212,9.261935,-4.605590,-2.106616],[2.715843,8.595411,0.795354,-0.974225,6.780576,9.005713,-2.126047,-7.330602,-7.644479,4.748884,-0.084148,-3.665911,3.304055,2.368078,-0.384614,1.433389],[1.284697,0.413818,6.423999,-3.659727,-8.699160,5.393750,0.727276,-6.928993,-5.161985,-1.605970,-5.779899,-9.459240,-5.284411,2.630626,0.190120,7.410933],[5.462689,6.797578,-2.614049,2.121322,6.102910,9.816576,-5.499044,-9.694788,5.269655,-5.038903,4.085637,8.517187,-8.044286,2.106154,0.036888,0.338794],[3.922791,6.515819,-7.937754,-3.190349,-6.331774,-3.039019,6.391169,1.685830,-2.439028,-4.302302,-0.064294,1.573866,5.787980,8.533657,2.657327,5.960919],[1.702717,-0.314693,-0.526665,-5.820407,-9.216193,4.283503,0.029161,-4.273048,-5.427106,-0.353934,3.095135,-3.408140,-6.964979,6.942629,-9.971504,-4.280889]],[[-9.477844,5.699017,4.769453,4.877740,-2.705931,4.889183,8.633685,1.227417,0.181643,-0.306211,-6.853973,3.395729,-9.977603,-5.977867,6.865312,0.917311],[-7.618876,-7.513183,-2.918496,8.278491,7.924191,-1.536292,4.523334,-5.154575,6.195031,4.113719,5.626285,-8.137282,3.944315,-9.953764,6.842993,-9.654118],[-8.568873,4.924908,-5.149756,-8.262626,-7.031896,-0.004091,-5.245515,-6.337119,-8.725519,1.674920,-7.364498,2.973573,0.928577,-2.223350,6.177547,-1.507886],[-7.653424,-7.153292,-7.474448,-6.139392,-7.241525,-5.708487,8.954460,-6.526289,-1.004934,-7.438756,-4.885095,7.151999,5.924388,-6.010117,-1.597282,2.941959],[5.523987,-2.317230,-9.492432,-5.353183,6.252416,0.174670,5.540880,-1.813130,-3.997426,-4.656798,5.494482,-4.797628,2.072684,5.774114,2.025538,-1.940473],[2.783167,-5.981663,8.198982,-7.603148,-6.291742,-4.316172,9.306902,0.529632,4.534390,-2.399552,1.608323,2.877619,-4.433802,1.268380,9.759810,-9.520481],[-5.000485,-5.193565,5.658323,-6.615601,3.815733,3.391826,-2.865842,-3.514068,-7.721217,-3.758535,4.527978,-4.918757,-5.289409,4.036427,-9.876703,-3.212311]],[[-9.935133,-1.987330,0.633900,4.308834,4.434933,-8.064505,-8.485953,3.480821,1.765314,-4.420350,-6.325130,-9.656666,-0.203317,-4.372180,2.185613,3.431504],[-3.176470,1.453535,9.801681,-3.723205,6.028463,-4.109009,4.587833,-2.976569,5.732202,0.506073,-5.711210,-7.683094,6.290000,8.475359,-5.846288,-9.206023],[-7.790401,-2.903101,4.420852,9.702522,8.640539,-6.257208,9.297023,-4.864991,3.659467,-6.544447,8.505193,2.517463,-4.043636,-6.761191,6.942762,0.420920],[-3.136858,3.724832,-9.635373,4.212495,-7.792806,-2.771919,-3.117389,-1.660695,-4.451765,4.824499,-1.374205,-8.166615,9.127284,9.779509,0.213556,7.969299],[-8.425016,6.370036,1.491516,8.643722,-7.204950,5.268121,-4.352212,6.962601,4.946067,-3.961555,2.423341,-9.014023,9.382875,4.015406,-2.578677,4.827462],[-3.997269,8.589604,0.004596,1.063852,-0.780818,-9.277637,9.445896,3.973159,2.735885,-2.859907,-4.356204,7.557564,-6.062395,-6.661855,5.979572,5.181741],[6.177517,3.377867,8.185381,-9.496739,-8.091229,-4.163607,-4.682699,-9.211248,-6.894515,-1.905338,5.339484,-6.579607,1.640552,-1.569831,-5.624492,-9.511774]],[[-3.152921,-4.786303,-5.398426,1.363283,-6.874110,-7.031712,2.596068,-5.851368,0.833503,-7.433232,-5.058255,-5.534076,7.505311,2.144953,3.764817,1.097415],[6.870076,2.479979,2.422161,-4.272178,0.098873,-7.591544,5.429528,-0.938841,-9.121101,4.097841,4.908944,-5.795403,-9.437291,5.078781,0.364091,1.921088],[-3.709185,-5.908905,6.900847,0.216180,-2.352413,4.398754,-8.888381,-3.425100,-6.146639,-7.016213,-2.047082,3.976829,-1.924799,-1.549897,3.238379,-7.744577],[-3.207708,9.425863,-4.786408,-1.573162,6.808912,-4.767194,7.948915,-9.812924,4.515333,-3.832987,3.760583,-4.423726,-1.235901,1.184340,0.977881,6.614811],[-6.406956,9.758620,-1.737046,0.210682,-0.296341,5.630906,3.701676,9.881125,-5.622782,-3.634413,1.521071,4.192828,3.946065,-7.339011,1.023202,-4.950852],[-0.284277,-5.275189,-2.635127,-3.493767,9.838651,-9.634887,7.577574,1.762687,9.120251,7.907942,5.982182,-2.353891,7.783131,5.649420,0.245436,5.749400],[2.306763,-8.398755,5.088912,-5.295214,-2.768726,7.914604,7.463547,-6.138737,-1.434516,8.821031,-4.381934,-7.400384,-2.515187,-2.982704,-8.263181,-9.444226]],[[6.971320,8.051489,3.763578,-3.090111,-9.554832,-2.284210,-2.376342,8.623027,-4.140922,-7.455742,-9.553556,7.590071,-0.599162,-4.918521,1.189281,1.693697],[5.708925,8.651893,-8.840124,5.825513,-3.970320,-7.349858,-3.685728,7.936859,2.338574,3.169005,4.589049,-1.388340,8.463498,-9.249338,0.290017,1.690458],[-9.319755,-0.712579,-3.749907,8.329579,8.618681,-9.044937,0.496574,-4.618700,1.927760,6.055315,-5.278812,1.369239,-0.751252,-7.374277,7.693795,6.540035],[9.950728,-4.392191,0.349176,-4.158426,-5.561772,-3.541954,-9.701245,-1.466182,-1.657748,-4.231956,9.785166,-7.333965,4.364124,-5.320106,4.033778,-9.072751],[7.842771,-8.457366,9.486932,2.304445,1.226596,1.834933,-9.525486,-9.369639,2.408468,-0.595488,-7.288230,8.509142,8.967485,-8.616183,5.828386,3.315589],[6.944863,0.258252,-7.871205,-9.395620,-7.992354,-7.805822,4.737966,5.090710,9.251428,-2.829465,8.236994,-0.143713,1.093951,9.550247,5.568454,6.334571],[-1.925560,4.710339,6.505047,0.231200,-8.327012,-2.479099,-3.523862,-1.780767,2.305817,8.247112,-1.377453,-0.065057,-9.732013,-1.881853,-5.572185,-1.214393]],[[-3.169408,-6.394497,-1.741272,2.320012,8.548468,-1.485764,-8.162963,6.908276,5.164552,-4.103593,-5.242399,5.783477,-3.252847,8.897205,1.804384,4.036060],[2.742515,6.266130,0.699633,-8.603997,8.481663,-1.496454,-8.127762,9.273237,-3.967252,5.372725,-3.066275,3.839598,7.504959,-5.084447,5.926846,-7.416889],[4.320729,-4.656330,4.166434,1.511809,6.298607,-3.205868,6.029770,-9.111828,8.919535,9.377346,-8.035561,-6.740515,8.124818,1.388831,-3.892596,0.096160],[7.832677,4.161199,5.255677,0.940608,-6.183733,-2.356530,-6.723454,-7.082143,-1.263473,0.294519,-3.881928,-0.426534,-2.932488,-1.051209,-6.063762,-8.427153],[6.950940,-1.104036,-4.798787,-7.761626,5.252857,3.470311,0.825165,6.440209,8.994813,-2.098323,-8.167038,5.646589,-7.110181,1.813734,6.864929,3.795958],[4.576410,0.721091,8.437372,8.977915,-0.241133,-3.881053,-1.333848,-3.685281,2.877597,4.445622,0.102439,-4.530817,2.934658,-0.571158,-3.797483,8.297763],[9.459505,4.270142,-9.142109,9.895676,2.150653,-7.174128,9.603872,8.119901,-7.593535,-5.187179,6.914268,7.994679,3.941171,-6.582571,0.870632,1.496686]]], dtype = "float64")#candidate|3238|(6, 7, 16)|const|float64
var_3239 = relay.var("var_3239", dtype = "float64", shape = (6, 7, 16))#candidate|3239|(6, 7, 16)|var|float64
bop_3240 = relay.floor_mod(const_3238.astype('float64'), relay.reshape(var_3239.astype('float64'), relay.shape_of(const_3238))) # shape=(6, 7, 16)
func_49_call = mod.get_global_var('func_49')
func_53_call = mutated_mod.get_global_var('func_53')
const_3252 = relay.const([7.125774,-3.439662,7.733230,0.576238,6.835920,-9.158756,-6.467269,-3.052031,2.141439,-8.443248,0.629720,-8.705296,-4.674514,-5.023493,-6.352905,-5.990703,6.377334,-1.360631,2.129646,-6.575679,8.992830,-3.598223,-0.996154,5.597193,8.838701,-0.363042,1.347128,-5.988302,-7.273125,1.611807,9.697040,-2.548390,-5.758961,7.852771,4.661881,-5.615753,-4.516335,-8.854966,5.508860,-3.501520,-7.918111,-9.485722,8.024985,6.113591,6.816059,4.973880,-7.322388,5.774377,-6.659137,-3.640294,-7.473838,-5.272732,0.024322,6.509126,-2.222789,4.603866,2.675746,-3.232223,5.578835,-2.564430,-4.697693,9.410445,-3.711462,-2.639092,5.628728,-4.186900,4.040640,-3.025418,1.757147,-9.141163,1.299816,-0.524173,1.371001,3.551367,-3.426686,1.126893,8.296011,-8.829377,2.226995,-7.100797,7.661514,-7.314246,-1.563124,-7.655904,0.372997,7.425811,-0.765684,8.086155,6.667775,-6.431510,-8.657646,-9.720731,-2.722043,4.937911,9.058781,-0.511543,-3.603306,-2.616614,6.992719,3.315875,1.219631,1.686908,-3.295981,6.002812,-9.605973,-4.801095,0.342347,-1.279205,5.219669,5.324413,-2.389073,2.661778,-8.134087,9.981158,-2.631243,-9.788453,6.383267,-9.800610,-1.278769,3.990741,0.962579,-7.144981,8.133590,5.185036,-6.611185,3.980420,-6.529510,-4.888253,-5.842831,3.520137,-3.936851,-2.984597,8.321621,6.512679,-0.907539,-8.338722,-3.586962,-7.173339,-8.976381,-1.006480,-2.688065,5.101932,5.107861,-7.173573,7.161786,-2.817648,8.351086,2.718932,6.269321,0.671254], dtype = "float64")#candidate|3252|(150,)|const|float64
call_3251 = func_49_call(relay.reshape(const_3252.astype('float64'), [3, 5, 10]), relay.reshape(const_3252.astype('float64'), [3, 5, 10]), )
call_3253 = func_49_call(relay.reshape(const_3252.astype('float64'), [3, 5, 10]), relay.reshape(const_3252.astype('float64'), [3, 5, 10]), )
output = relay.Tuple([bop_3240,call_3251,const_3252,])
output2 = relay.Tuple([bop_3240,call_3253,const_3252,])
func_3261 = relay.Function([var_3239,], output)
mod['func_3261'] = func_3261
mod = relay.transform.InferType()(mod)
mutated_mod['func_3261'] = func_3261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3262 = relay.var("var_3262", dtype = "float64", shape = (6, 7, 16))#candidate|3262|(6, 7, 16)|var|float64
func_3261_call = mutated_mod.get_global_var('func_3261')
call_3263 = func_3261_call(var_3262)
output = call_3263
func_3264 = relay.Function([var_3262], output)
mutated_mod['func_3264'] = func_3264
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3407 = relay.const([[[0.017974,4.119225,7.198524,-6.349942,-8.252891,7.292686,2.681199,0.745079,4.884858,0.993378,-2.947677,0.589931],[5.022405,-5.967565,-4.933045,-5.397826,8.835484,8.715338,-9.038016,2.522792,9.713383,-2.839054,-7.504463,8.135900],[-3.903883,6.752564,2.819143,9.523251,5.771974,-3.329902,6.880314,7.596057,-5.232630,-6.696092,-0.319970,-9.396993],[-8.356509,1.389540,-7.582957,8.283133,5.041359,-1.472762,7.552805,8.581539,0.454254,-7.193396,6.734429,5.217530],[-0.858434,-8.827332,-9.998420,8.000137,5.244569,8.098280,6.751646,-8.636067,9.269028,7.809379,7.867784,-2.282277]],[[7.741869,9.336350,-6.353759,-7.986969,-4.099071,-0.126366,9.989179,-2.117663,-3.916285,1.648403,-5.206418,-9.005534],[-3.359275,-9.253930,-3.357907,-3.799031,-1.659710,-3.403987,-1.766212,5.554879,9.679429,0.777105,0.337807,9.716009],[4.197110,-0.823906,6.424063,-4.254150,-8.997501,7.983258,5.904515,-1.424250,7.367629,-9.036039,-4.399405,7.512016],[6.343658,-5.010755,-2.210042,-0.450291,-3.520742,0.999809,3.399771,4.757170,-8.082633,3.813793,-2.335625,0.451958],[-5.212301,-3.847213,-2.632109,8.153494,-9.746996,-9.255070,6.261760,0.901064,7.091483,7.249324,-3.621390,5.077110]],[[2.177507,-4.794364,-9.763747,-9.614540,8.726716,6.220468,-0.964347,-2.042119,4.624639,3.667597,9.624080,-6.998454],[9.040778,-9.217732,0.590921,-8.392785,-2.988754,-2.975418,0.211539,4.561164,2.257529,-2.625707,5.057585,4.214812],[6.496901,-6.919752,3.646252,-5.552312,-9.629445,-0.534961,-0.294441,0.081297,6.404920,0.547884,-1.541852,3.786891],[-0.491537,6.081105,-7.911327,-4.148787,4.630251,9.931117,7.467960,4.882522,-3.218552,8.435611,-8.249443,8.914144],[2.461259,-2.522268,8.656609,6.783906,7.683545,-6.789489,1.919565,-3.148281,0.607519,1.138066,2.918005,-2.435360]],[[-0.262384,-9.462164,-8.593567,-1.457994,-8.239559,0.350057,7.312673,2.859432,5.062231,-2.740334,-1.584504,0.324137],[-4.284535,5.019288,7.310987,8.802670,0.467096,6.955843,7.794407,6.000668,-0.264028,-1.515586,-2.541679,5.870591],[0.477739,-4.819889,-4.847998,1.017030,5.171287,-0.924712,-5.239237,-2.342598,9.748333,-3.483280,-0.679838,-0.097193],[-1.242288,-6.093288,8.575505,8.822732,9.942255,-5.086204,4.136089,1.530225,-8.996517,-9.425269,2.158193,1.979904],[-5.611398,-1.907174,5.115748,0.184434,0.408435,-5.994031,4.008513,6.807725,-8.056327,-3.136294,7.803184,-5.114586]],[[9.788304,-4.340567,3.909604,5.156901,3.480126,-9.439169,1.873003,3.381390,2.440887,2.581431,8.458212,-7.669503],[-1.328868,5.172959,-1.953608,-4.459432,-9.868485,-6.265239,-8.239171,9.077337,2.150373,-1.902975,-8.950791,7.713959],[-1.334735,-9.052671,2.702749,7.520990,-6.235649,8.956248,-1.276198,-8.027035,5.776110,-4.235249,2.716940,9.214973],[-0.110482,1.896363,5.776190,-5.315929,5.034648,2.545257,4.493295,-1.820087,-5.328568,-8.171682,6.446520,7.158341],[-0.483460,-6.315430,-7.989792,-8.705792,-9.446912,6.073640,9.099659,2.286318,-1.720088,5.272282,2.322165,8.954331]],[[-4.401532,-6.084375,7.507824,-5.414507,6.916051,2.698125,-8.211885,-4.733484,2.109091,4.223818,-0.820808,2.707303],[4.481634,-9.189056,-3.471633,-6.502828,-5.372209,9.992711,9.376425,7.267895,-9.971678,-7.823827,-8.576185,4.792811],[-9.303115,-0.277748,1.214834,0.761351,7.444849,5.011776,-8.228383,-8.047956,-2.851131,-4.943139,1.111319,5.771596],[-5.259467,-9.554039,-7.305991,-1.725560,-3.076993,8.805883,-8.163505,2.333986,9.508644,7.262796,-8.049992,-6.404296],[1.409848,-5.327800,-0.227110,0.368902,6.132635,4.339914,6.378111,-3.048860,6.209141,-8.176275,4.326035,1.724893]]], dtype = "float32")#candidate|3407|(6, 5, 12)|const|float32
uop_3408 = relay.cos(const_3407.astype('float32')) # shape=(6, 5, 12)
var_3422 = relay.var("var_3422", dtype = "float32", shape = (6, 5, 12))#candidate|3422|(6, 5, 12)|var|float32
bop_3423 = relay.left_shift(const_3407.astype('uint32'), relay.reshape(var_3422.astype('uint32'), relay.shape_of(const_3407))) # shape=(6, 5, 12)
func_2899_call = mod.get_global_var('func_2899')
func_2911_call = mutated_mod.get_global_var('func_2911')
var_3427 = relay.var("var_3427", dtype = "bool", shape = (3, 700))#candidate|3427|(3, 700)|var|bool
var_3428 = relay.var("var_3428", dtype = "uint8", shape = (48,))#candidate|3428|(48,)|var|uint8
var_3429 = relay.var("var_3429", dtype = "uint8", shape = (288,))#candidate|3429|(288,)|var|uint8
var_3430 = relay.var("var_3430", dtype = "float32", shape = (260,))#candidate|3430|(260,)|var|float32
const_3431 = relay.const([-5.919485,6.841433,-0.502713,-3.045135,5.518737,6.859160,6.351565,7.821600,-5.112345,-2.369374,-8.914861,-3.500393,3.906495,-6.533954,3.230310,8.261689,-4.286827,5.885564,5.086257,4.126907,-2.627265,0.907697,-1.340788,-7.762557,8.819369,4.424380,-9.650108,-0.379812,8.607584,-0.283069,-0.583133,-9.776776,9.499586,-0.977088,8.593755,3.485764,-4.917293,-5.056143,7.989190,2.606928,5.625676,0.846789,-7.083807,4.286451,-2.735775,8.601124,9.783274,9.978127,7.705274,2.369284,5.678178,6.373785,4.203932,-5.500967,-6.554672,5.866041,-4.962394,6.854801,-3.411338,-5.639618,7.160886,-6.396327,0.738236,0.709928,0.689269,7.678635,2.110499,-1.046273,-7.260394,-9.312768,-9.886194,-7.039209,-6.891189,-2.032702,-8.871733,7.841727,-0.070170,-7.553682,6.628572,-7.594114,0.891905,5.566624,-5.128647,4.073873,-3.286237,5.096986,-4.314319,6.534925,-5.594866,5.869512,-7.321073,-6.554281,-7.404557,-6.209437,-0.001311,-8.892362,-6.375742,-2.930761,8.349182,-0.056742,1.567993,6.792029,2.295070,-4.998499,-5.086274,3.387082,-6.859195,2.453980,-1.775282,-8.189347,-5.925460,-3.238992,-3.106589,-0.203636,7.927442,0.850564,-5.661471,-6.610214,8.599645,4.013798,-9.048107,-6.725664,-8.793594,-5.521415,5.027965,6.352442,4.941147,9.318627,8.401725,-4.333398,-2.556486,4.904757,-5.682270,-7.550930,5.419181,7.932898,-4.049633,-8.367422,6.877656,-8.330315,-3.771377,-1.636041,6.282782,4.156799,0.669886,9.160700,-1.479196,5.999429,-0.387122,-9.330778,7.813877,-6.660942,-0.792385,5.618493,1.639731,-1.881622,1.482085,4.583692,-9.889339,9.068122,-2.070836,9.762775,-2.587189,1.040379,0.618320,-4.473908,9.788684,-5.169304,2.054347,6.444583,0.619560,-1.439313,4.126709,-9.453460,5.273691,7.841184,-6.398813,-5.815875,8.853214,-0.877356,0.055951,-7.271236,8.850810,-1.048913,-1.434042,2.266019,-4.147308,-6.817273,9.102708,9.459778,6.101256,3.785595,-9.782957,-4.955129,1.195574,-9.501207,3.153163,-4.307310,5.974665,4.635126,-7.822329,-6.618671,2.685430,-4.292762,0.851851,0.522028,3.323905,-8.161561,-3.584536,9.189484,7.878178,-1.236002,-9.209839,7.853527,-4.960603,5.037905,0.656724,1.492824,2.694645,-5.471268,8.973118,2.606818,-9.616467,-5.987472,-9.701047,-0.596245,8.218278,-1.754749,0.405597,-9.120847,-2.634118,6.645921,0.804267,-1.537647,-2.299319,5.506245,-8.580193,-3.489222,-2.309017,8.008375,9.886336,9.664701,0.201333,-8.771549,8.779862,-4.044993,8.353101,-9.694148,-0.058312,9.705501,7.861211,-6.075050,9.051070,-6.219535,-0.364862,-2.112046,8.847011,-8.038601,4.653903,-6.114642,0.835838,-2.486349,-4.009355,1.339083,-4.494211,6.609755,1.908699,0.312351,5.176904,7.990079,-2.817626,9.095703,8.366061,-0.876318,-2.341486,8.369145,1.268045,-7.935904,-8.904653,-1.370442,-4.290530,-5.288262,1.305131,-0.421913,8.513637,-9.034650,2.599965,-5.683057,-5.066584,0.664656,1.575433,-5.536810,2.044039,-1.353979,4.880040,-8.759290,-5.765614,4.370049,-1.448834,-4.378301,7.302427,4.224601,-6.958288,2.511680,-2.329143,-9.998276,-2.319158,-4.399662,1.215998,4.938118,5.807436,9.932672,6.227050,-4.789922,-4.185308,4.276850,6.319280,9.890800,-5.434997,-6.993200,9.278766,-6.276270,-4.651126,1.299956,1.000279,-4.996498,-8.687885,6.482286,-9.242023,-5.579553,-8.855203,6.339913,-3.064850,-7.865982,4.093802,-4.372544,0.039741,-5.824309,3.560870,4.821755,0.727132,-1.911337,9.065070,5.799317,1.288891,7.502092,7.913804,5.312958,5.740279,3.439187,3.328022,2.782114,-5.368853,-9.733201,-8.456284,9.147111,9.528273,0.502004,9.762206,-5.897372,-8.606406,-1.655089,-0.581113,-3.219809,5.836362,8.352636,6.324446,9.470344,-1.091988,7.643351,-9.598203,-8.307612,-7.626119,-8.449543,-3.351092,-1.951766,-4.339209,0.578629,3.968988,-2.784763,4.201026,2.424639,3.155801,-5.117276,-6.467554,-8.644777,-2.532961,-0.256014,-5.588907,-3.855830,3.440318,-1.500388,-2.417940,0.099503,5.416732,-7.019868,4.745077,2.852448,2.811528,-2.610576,7.570393,-8.739610,-7.781478,6.037551,8.616538,2.061672,-6.975075,9.397499,8.870942,-9.039001,-9.958030,4.395646,-6.071752,-4.226686,8.892380,5.862449,6.207487,-2.152694,-2.257616,7.998000,-4.811842,0.655193,-5.461577,5.671639,9.363509,-5.229798,-0.213392,1.646586,-7.237605,-1.134483,-6.748982,-0.003370,9.658695,8.668572,-8.839196,-4.677390,-9.144979,-2.616746,-2.403078,-2.561458,3.383613,0.807415,6.821460,4.922639,6.968449,4.896121,5.184505,9.383281,-9.012650,0.868568,2.619241,0.497834,0.832896,-6.167906,1.167325,6.070181,3.411870,3.199063,6.004197,-7.990973,-4.413855,-6.554425,-5.647178,6.917646,3.738422,1.808127,-0.807591,-2.253139,-1.448756,9.614969,5.008974,9.097651,9.058577,4.539520,0.605476,7.539631,2.836930,8.164285,-4.785064,4.951914,2.938123,-4.273108,6.355146,1.380292,-9.253197,-2.201652,9.235752,-6.346062,-0.459116,1.296546,-5.712079,5.453998,5.854495,1.184888,8.689197,0.821438,6.719219,-7.847537,-7.435492,0.724412,-5.536241,-7.318251,3.989774,4.308092,0.030708,9.623330,0.776794,9.525961,8.428459,-6.089834,2.104268,-3.053495,-6.344362,-1.130569,-8.891742,5.176643,5.180457,2.296084,-7.161560,-4.149276,9.722901,3.597038,-0.385302,2.567668,2.305194,0.963171,8.502111,-1.423087,-8.920259,-9.037355,-3.547244,-9.495426,-5.889206,-0.204963,-9.205986,-7.870212,-9.322649,-4.705338,-5.984397,-4.423454,-8.980575,0.077744,5.250392,2.227582,-6.057301,3.918020,8.017001,-7.661088,3.381829,-7.155642,7.948074,3.431214,4.953759,-5.312884,-7.686378,9.919250,-4.219676,-7.211481,-5.246140,-1.013823,-2.352665,8.903272,4.138565,2.502514,-6.057752,-0.230718,-9.496015,3.521195,5.007898,6.697821,0.753839,-9.213891,9.440680,3.853071,-9.032132,-1.837233,2.713998,-1.412952,7.560053,1.982839,-7.462974,9.192856,-5.386684,-0.621684,4.242067,0.672184,-9.763255,-6.459487,-7.371210,-0.664426,7.119834,9.608405,-7.808639,6.479420,0.575654,-9.260795,-2.409496,-0.735993,-6.335496,7.384337,2.163806,-5.871678,-5.087471,5.336427,8.096563,-6.350368,4.586281,5.086840,8.831473,8.281426,-0.911531,-9.508493,-0.039942,2.489698,1.764906,-5.921126,1.552198,4.203942,5.120478,-9.985930,-7.402189,-9.146572,1.991312,6.954013,-4.721852,8.520694,-2.591779,-2.844073,8.201176,-8.364019,-6.799103,4.823851,4.148189,8.716067,8.194841,8.248798,-6.473977,7.907576,-4.290921,0.105360,-9.940163,0.192896,-2.663829,5.070285,2.106742,2.169356,-8.873700,8.138245,5.598140,-4.432257,-1.878632,-7.134712,9.822973,-1.154686,-5.603436,5.211230,1.963815,-4.288571,-1.726388,1.299820,7.887916,5.339387,4.435673,3.821303,1.527447,7.678616,-5.624655,5.003963,-3.109569,0.228508,0.039217,8.902192,3.544682,-2.299024,0.246795,0.708190,-9.536453,-6.965102,6.228383,-7.234319,1.623351,-2.430228,0.330262,-9.286166,-2.697457,6.266359,-7.741256,-6.449972,-2.833571,7.807627,-7.946060,-4.017547,1.475986,-0.718687,-3.613631,3.331536,-2.611887,0.346789,2.043982,9.629353,0.245439,7.995273,0.874380,0.662163,1.574048,3.470511,1.719159,-5.662247,-6.097572,1.419807,-3.701958,9.330479,0.671884,-6.042687,-6.036129,-8.484708,-8.303243,0.176798,3.754273,2.394637,4.456434,-1.358915,-1.497500,4.060081,4.300282,-1.737005,1.722394,-4.304366,-8.020019,-7.302638,3.272348,9.592545,-0.143470,1.029169,2.718308,-6.669446,-7.641252,-0.099080,-1.182589,1.962746,-8.768247,2.136169,2.953052,-2.251321,-6.992227,-0.639190,1.800248,-4.356690,-9.520635,5.493481,-4.722172,-4.786796,-4.858455,-7.950911,-7.937485,-2.983880,3.960388,7.856391,-5.898159,-0.426720,-6.483702,-1.599561,-1.561887,4.423424,-9.927775,0.271625,5.728228,9.600860,-7.354115,-4.265105,-4.810012,5.661948,-7.589555,-2.392457,7.136825,2.736096,-0.422780,0.085928,-3.556768,8.731544,-9.823998,-6.197213,4.818872,0.041864,4.768648,-6.587973,7.595636,7.886513,-7.404400,-2.144809,-8.646799,1.063679,7.546200,-3.802899,-3.553952,-3.636656,-9.876234,-2.404075,0.292300,6.372912,2.864818,-8.515873,1.691150,-9.091843,1.727904,6.435212,-4.139921,-2.709251,-9.909450,-4.442655,0.555497,6.520004,7.319392,0.613401,0.876203,5.883213,-3.537473,0.191566,6.540583,-2.737323,-9.228476,-6.855111,-7.158153,-5.208077,6.264135,6.081324,-1.148952,-0.659385,-2.697305,-3.591258,-3.102895,-4.488221,8.056474,1.684558,3.860712,4.381192,5.038960,4.785561,7.133156,-5.983865,-5.335403,4.313869,-9.533109,-3.229544,3.187884,4.460610,-6.123959,-2.019824,7.119984,-7.751870,2.271044,9.895934,1.098557,3.974070,-2.457946,-0.742466,9.843523,9.736073,5.897441,3.802458,-8.912200,9.771735,-1.690520,-4.545339,0.254847,6.910990,3.074902,6.355012,2.419777,7.684587,1.404748,-3.713133,9.966221,-4.688174,6.521707,3.019433,-1.821490,-4.051019,-5.599823,6.166030,4.324109,8.928571,9.287514,6.975260,2.096139,-0.318281,-2.621774,6.874384,6.454532,7.571354,9.318042,-9.473517,3.918041,7.569975,-1.857730,2.108201,4.002018,-5.166468,0.917134,0.503748,-0.557415,4.841491,-6.765636,-3.285612,8.064590,-2.526789,-9.047017,-5.712228,1.621570,9.505868,-6.645715,6.534450,3.331395,-0.053443,2.709191,5.908864,-2.678933,3.625192,-8.357527,-8.114183,2.554825,-3.593906,3.023070,8.540116,-6.726099,-7.630917,4.721077,-2.069519,6.074442,0.561061,-5.049918,-8.439189,-6.019767,8.646792,8.691107,-8.885810,-5.801668,-5.510452,4.503952,-8.063197,8.734615,7.892338,-3.658550,9.543735,-6.719956,3.629175,-4.855740,5.149888,0.332003,6.779801,-5.158340,1.723280,-7.727976,1.216883,6.387389,-2.823271,-0.897103,3.822022,4.033499,3.985984,8.454424,7.921886,-7.461251,-3.963833,1.385372,8.277366,6.883073,2.144344,-0.906237,-1.118776,-7.628370,-7.008674,-9.776317,-4.285020,7.229505,0.626088,-9.439049,-3.738541,-1.657381,-8.912276,-2.147319,2.224501,-4.691930,5.687848,4.630940,-5.630454,-9.240127,1.020517,-4.045093,9.549987], dtype = "float64")#candidate|3431|(990,)|const|float64
const_3432 = relay.const([[True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True],[False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True],[False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True],[False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False],[False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False],[True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True]], dtype = "bool")#candidate|3432|(6, 44)|const|bool
var_3433 = relay.var("var_3433", dtype = "float32", shape = (1716,))#candidate|3433|(1716,)|var|float32
call_3426 = relay.TupleGetItem(func_2899_call(relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3428.astype('uint8'), [48,]), relay.reshape(var_3429.astype('uint8'), [288,]), relay.reshape(var_3430.astype('float32'), [260,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3432.astype('bool'), [264,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(var_3433.astype('float32'), [1, 1716]), ), 4)
call_3434 = relay.TupleGetItem(func_2911_call(relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3428.astype('uint8'), [48,]), relay.reshape(var_3429.astype('uint8'), [288,]), relay.reshape(var_3430.astype('float32'), [260,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3432.astype('bool'), [264,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(var_3433.astype('float32'), [1, 1716]), ), 4)
bop_3435 = relay.not_equal(bop_3423.astype('bool'), relay.reshape(uop_3408.astype('bool'), relay.shape_of(bop_3423))) # shape=(6, 5, 12)
func_2899_call = mod.get_global_var('func_2899')
func_2911_call = mutated_mod.get_global_var('func_2911')
call_3438 = relay.TupleGetItem(func_2899_call(relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3428.astype('uint8'), [48,]), relay.reshape(var_3429.astype('uint8'), [288,]), relay.reshape(var_3430.astype('float32'), [260,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3432.astype('bool'), [264,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(var_3433.astype('float32'), [1, 1716]), ), 15)
call_3439 = relay.TupleGetItem(func_2911_call(relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3427.astype('bool'), [14, 10, 15]), relay.reshape(var_3428.astype('uint8'), [48,]), relay.reshape(var_3429.astype('uint8'), [288,]), relay.reshape(var_3430.astype('float32'), [260,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3432.astype('bool'), [264,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(const_3431.astype('float64'), [990,]), relay.reshape(var_3433.astype('float32'), [1, 1716]), ), 15)
func_1009_call = mod.get_global_var('func_1009')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_3447 = relay.TupleGetItem(func_1009_call(relay.reshape(const_3432.astype('bool'), [6, 11, 4]), relay.reshape(const_3432.astype('bool'), [6, 11, 4]), ), 0)
call_3448 = relay.TupleGetItem(func_1012_call(relay.reshape(const_3432.astype('bool'), [6, 11, 4]), relay.reshape(const_3432.astype('bool'), [6, 11, 4]), ), 0)
bop_3453 = relay.logical_and(uop_3408.astype('bool'), relay.reshape(bop_3435.astype('bool'), relay.shape_of(uop_3408))) # shape=(6, 5, 12)
output = relay.Tuple([call_3426,var_3427,var_3428,var_3429,var_3430,const_3431,const_3432,var_3433,call_3438,call_3447,bop_3453,])
output2 = relay.Tuple([call_3434,var_3427,var_3428,var_3429,var_3430,const_3431,const_3432,var_3433,call_3439,call_3448,bop_3453,])
func_3456 = relay.Function([var_3422,var_3427,var_3428,var_3429,var_3430,var_3433,], output)
mod['func_3456'] = func_3456
mod = relay.transform.InferType()(mod)
mutated_mod['func_3456'] = func_3456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3456_call = mutated_mod.get_global_var('func_3456')
var_3458 = relay.var("var_3458", dtype = "float32", shape = (6, 5, 12))#candidate|3458|(6, 5, 12)|var|float32
var_3459 = relay.var("var_3459", dtype = "bool", shape = (3, 700))#candidate|3459|(3, 700)|var|bool
var_3460 = relay.var("var_3460", dtype = "uint8", shape = (48,))#candidate|3460|(48,)|var|uint8
var_3461 = relay.var("var_3461", dtype = "uint8", shape = (288,))#candidate|3461|(288,)|var|uint8
var_3462 = relay.var("var_3462", dtype = "float32", shape = (260,))#candidate|3462|(260,)|var|float32
var_3463 = relay.var("var_3463", dtype = "float32", shape = (1716,))#candidate|3463|(1716,)|var|float32
call_3457 = func_3456_call(var_3458,var_3459,var_3460,var_3461,var_3462,var_3463,)
output = call_3457
func_3464 = relay.Function([var_3458,var_3459,var_3460,var_3461,var_3462,var_3463,], output)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3566 = relay.var("var_3566", dtype = "float32", shape = (1, 5, 11))#candidate|3566|(1, 5, 11)|var|float32
uop_3567 = relay.sinh(var_3566.astype('float32')) # shape=(1, 5, 11)
output = relay.Tuple([uop_3567,])
output2 = relay.Tuple([uop_3567,])
func_3574 = relay.Function([var_3566,], output)
mod['func_3574'] = func_3574
mod = relay.transform.InferType()(mod)
var_3575 = relay.var("var_3575", dtype = "float32", shape = (1, 5, 11))#candidate|3575|(1, 5, 11)|var|float32
output = func_3574(var_3575)
func_3576 = relay.Function([var_3575], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3691 = relay.const([[[-10,6,-1,4,-3,7,-3,5,-6,-8,-3,-7,8,9,7],[7,-4,-1,-7,10,2,-6,-10,6,-4,-8,-9,-1,1,10],[-5,-5,1,7,1,-10,5,-7,6,10,10,-7,2,-8,2],[-1,7,10,-4,-8,4,-9,3,-3,-1,-9,8,-10,7,-3],[5,8,2,2,4,-10,-7,7,-4,10,-1,4,8,10,-1],[-6,9,-10,3,6,9,4,-6,9,1,-5,2,-4,5,-8],[8,-5,-10,-7,-5,10,10,2,-7,6,-2,-2,10,7,-9],[2,-10,4,1,5,-6,-10,1,4,4,-7,1,-3,5,-8],[4,2,8,6,-9,5,-5,2,8,-3,-6,-1,2,-9,5],[-1,-9,4,1,7,10,3,-7,-1,-3,-9,7,-9,5,5],[-5,-2,-1,10,-6,-2,-8,-2,-4,-10,-9,7,1,6,3],[-8,8,-3,-6,-1,-1,-1,-9,-4,9,-9,4,-6,-1,-3],[-2,5,2,-10,-10,-5,3,-1,-10,-3,-10,-9,8,3,6]],[[8,-6,-9,-8,9,10,-2,-9,-7,-8,9,-3,-6,2,4],[3,9,4,10,-8,3,-4,-3,6,3,10,-3,10,8,9],[1,6,3,-9,4,-3,-5,2,9,10,3,4,5,-7,6],[-8,8,-9,6,6,-3,-8,6,-8,9,7,-8,-10,-4,9],[-3,-9,1,-1,-5,-8,6,7,-6,-6,-3,-7,-5,5,3],[1,8,-4,7,-7,-4,3,9,-1,4,-9,10,9,10,7],[5,9,8,-4,1,-9,6,-5,1,1,-1,4,4,-9,7],[-10,-1,-6,2,-6,-3,8,-9,8,6,5,10,1,5,10],[5,4,7,-9,-2,-4,1,8,-4,10,-6,9,6,-9,1],[5,-9,6,-9,-7,-9,9,10,10,4,3,-4,-5,4,5],[5,-1,-7,10,-1,10,-5,-10,8,10,9,-1,10,5,-2],[-7,-10,-1,7,-4,8,8,3,-2,-7,3,8,1,4,1],[-8,-2,9,5,5,-4,-3,6,-10,9,3,-5,9,-8,-4]]], dtype = "int8")#candidate|3691|(2, 13, 15)|const|int8
var_3692 = relay.var("var_3692", dtype = "int8", shape = (2, 13, 15))#candidate|3692|(2, 13, 15)|var|int8
bop_3693 = relay.not_equal(const_3691.astype('bool'), relay.reshape(var_3692.astype('bool'), relay.shape_of(const_3691))) # shape=(2, 13, 15)
output = bop_3693
output2 = bop_3693
func_3711 = relay.Function([var_3692,], output)
mod['func_3711'] = func_3711
mod = relay.transform.InferType()(mod)
var_3712 = relay.var("var_3712", dtype = "int8", shape = (2, 13, 15))#candidate|3712|(2, 13, 15)|var|int8
output = func_3711(var_3712)
func_3713 = relay.Function([var_3712], output)
mutated_mod['func_3713'] = func_3713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3747 = relay.var("var_3747", dtype = "int8", shape = (7, 16, 4))#candidate|3747|(7, 16, 4)|var|int8
var_3748 = relay.var("var_3748", dtype = "int8", shape = (7, 16, 4))#candidate|3748|(7, 16, 4)|var|int8
bop_3749 = relay.bitwise_or(var_3747.astype('int8'), relay.reshape(var_3748.astype('int8'), relay.shape_of(var_3747))) # shape=(7, 16, 4)
func_2041_call = mod.get_global_var('func_2041')
func_2043_call = mutated_mod.get_global_var('func_2043')
var_3758 = relay.var("var_3758", dtype = "float64", shape = (270,))#candidate|3758|(270,)|var|float64
call_3757 = func_2041_call(relay.reshape(var_3758.astype('float64'), [9, 6, 5]))
call_3759 = func_2041_call(relay.reshape(var_3758.astype('float64'), [9, 6, 5]))
output = relay.Tuple([bop_3749,call_3757,var_3758,])
output2 = relay.Tuple([bop_3749,call_3759,var_3758,])
func_3765 = relay.Function([var_3747,var_3748,var_3758,], output)
mod['func_3765'] = func_3765
mod = relay.transform.InferType()(mod)
mutated_mod['func_3765'] = func_3765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3765_call = mutated_mod.get_global_var('func_3765')
var_3767 = relay.var("var_3767", dtype = "int8", shape = (7, 16, 4))#candidate|3767|(7, 16, 4)|var|int8
var_3768 = relay.var("var_3768", dtype = "int8", shape = (7, 16, 4))#candidate|3768|(7, 16, 4)|var|int8
var_3769 = relay.var("var_3769", dtype = "float64", shape = (270,))#candidate|3769|(270,)|var|float64
call_3766 = func_3765_call(var_3767,var_3768,var_3769,)
output = call_3766
func_3770 = relay.Function([var_3767,var_3768,var_3769,], output)
mutated_mod['func_3770'] = func_3770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3899 = relay.var("var_3899", dtype = "float64", shape = (4, 15, 7))#candidate|3899|(4, 15, 7)|var|float64
uop_3900 = relay.log10(var_3899.astype('float64')) # shape=(4, 15, 7)
func_1096_call = mod.get_global_var('func_1096')
func_1099_call = mutated_mod.get_global_var('func_1099')
var_3908 = relay.var("var_3908", dtype = "float64", shape = (1680,))#candidate|3908|(1680,)|var|float64
call_3907 = func_1096_call(relay.reshape(var_3908.astype('float64'), [15, 7, 16]))
call_3909 = func_1096_call(relay.reshape(var_3908.astype('float64'), [15, 7, 16]))
func_1769_call = mod.get_global_var('func_1769')
func_1772_call = mutated_mod.get_global_var('func_1772')
const_3911 = relay.const([-2.493135,2.672409,-4.574706,-3.708438,0.237838,-8.241723,1.688775,-6.789002,-3.282071,-8.139869,6.516781,1.570843,4.648307,4.883602,-1.347925,8.269268,-1.569990,0.746148,1.780948,4.164999,7.581964,2.093137,-9.229969,4.340334,6.618984,4.061381,-7.383632,-9.656091,7.999934,-9.699691,-2.972989,-3.706169,-1.460652,2.479659,-8.829472,-5.454966,7.572819,-9.970295,4.144356,-2.215765,0.520138,-8.528495,-1.447279,4.657308,-2.134576,0.773349,-9.937052,6.923419,-4.937386,-2.241120,-9.189633,-3.794228,-3.889104,6.459758,-6.927330,7.969416,-6.335587,6.636806,-4.068838,-6.982112,4.928205,6.400872,3.217066,-5.845875,-4.153645,-8.715503,-2.697543,-6.622930,6.126093,-3.848052,0.256950,1.538121,7.056325,2.501520,-0.211211,-7.426429,4.777836,0.444276,6.050408,-0.857892,-2.435515,-9.191933,4.793556,8.817768,-1.963557,0.057961,9.546496,9.410809,6.790644,-2.330488,-9.821040,7.603574,4.161878,8.515371,7.661453,-9.882946,-2.804603,-5.213806,5.970583,7.704441,3.848733,3.932254,3.953966,-4.856493,7.271981,-4.981707,2.623857,-8.799249,-6.322588,0.026756,4.578793,0.340312,-1.174270,-2.196004,-5.892493,-6.190801,-9.275627,-9.897517,-5.078057,-2.080218,-1.184634,-6.416513,6.205559,-3.301706,-5.353641,7.377041,4.564446,1.576667,-7.282969,6.066545,4.437500,-0.049558,3.225667,-8.874896,3.959465,-7.363257,3.004529,-5.281033,1.940616,4.857738,-8.418036,6.412141,5.699738,-6.639746,-6.096613,-1.261402,7.883436,8.891975,-5.077951,-7.057212,3.998624,0.957373,9.094607,7.826016,-3.158368,-3.520262,8.172847,-9.847296,3.374759,-2.303998,-8.008821,9.964678,4.736744,-8.806031,-0.373110,-8.534449,2.892457,8.260445,7.530117,8.624906,6.119571,-5.048622,-6.816475,7.711256,9.900509,4.169456,5.401833,1.339790,-8.376965,-5.670053,9.028704,-6.489177,-2.926047,6.941504,-6.367738,1.394451,7.660062,-6.310226,-5.443125,5.693553,4.986980,8.920556,2.997738,3.119648,-9.783835,4.792064,-0.099976,9.406413,2.943212,-4.614330,6.082581,1.290830,-6.877343,-0.068423,7.090567,-0.798682,8.610757,1.546557,7.825962,-2.627985,-6.372976,9.963643,3.351492,0.099964,2.553607,-1.514804,2.699827,2.071058,5.360654,-6.489318,0.984369,8.513715,-7.321941,-8.064059,5.509966,-0.672303,-9.062989,1.642491,-1.638586,-5.740660,-5.851686,-8.905904,-6.438243,0.744184,-9.748737,-7.294792,4.096283,-5.313250,4.051470,7.458827,6.697365,-1.483264,7.110394,8.013942,7.047016,2.146010,-6.258056,2.751037,-5.202082,-9.999866,6.142077,-8.352160,-1.644232,-0.605163,3.807638,-3.324850,8.984713,-2.796325,-0.575412,-9.882122], dtype = "float32")#candidate|3911|(260,)|const|float32
call_3910 = func_1769_call(relay.reshape(const_3911.astype('float32'), [4, 13, 5]))
call_3912 = func_1769_call(relay.reshape(const_3911.astype('float32'), [4, 13, 5]))
output = relay.Tuple([uop_3900,call_3907,var_3908,call_3910,const_3911,])
output2 = relay.Tuple([uop_3900,call_3909,var_3908,call_3912,const_3911,])
func_3913 = relay.Function([var_3899,var_3908,], output)
mod['func_3913'] = func_3913
mod = relay.transform.InferType()(mod)
var_3914 = relay.var("var_3914", dtype = "float64", shape = (4, 15, 7))#candidate|3914|(4, 15, 7)|var|float64
var_3915 = relay.var("var_3915", dtype = "float64", shape = (1680,))#candidate|3915|(1680,)|var|float64
output = func_3913(var_3914,var_3915,)
func_3916 = relay.Function([var_3914,var_3915,], output)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3965 = relay.const([[[3.214972,8.156591],[-9.371388,-9.410954],[0.439852,-3.207898],[-4.946881,4.742927],[0.731108,2.571779],[0.055493,0.281601],[-3.503919,9.371193],[2.774600,-1.891907],[-5.003874,8.234365],[-5.267194,-4.932258],[-7.149994,-2.015105],[-0.423804,-4.728023]],[[-6.384536,2.390887],[7.032061,2.669225],[-8.097769,-2.447069],[-9.466011,-2.196377],[-2.930983,1.324412],[7.231267,9.655270],[-4.516410,3.498988],[3.640387,-1.010026],[1.066164,1.982023],[-4.629846,8.097255],[8.031152,-0.105235],[-7.425567,-5.858753]],[[6.065131,-3.021625],[-9.113179,-2.477551],[4.353314,0.959870],[4.868096,-8.562843],[4.743508,4.779602],[1.092610,6.111538],[-1.677699,-0.914031],[-2.664066,6.293713],[-4.202079,8.805420],[9.225159,-7.584398],[5.487408,4.647208],[5.563310,0.113925]],[[0.961509,6.593508],[4.207477,-0.131980],[-7.349522,1.437827],[0.457245,-3.053324],[-2.213255,-8.815845],[4.210323,-6.266587],[-2.164349,2.960059],[-8.073157,8.639686],[8.741097,-9.661429],[6.818281,-4.108696],[7.632502,-4.172975],[9.513228,-9.013872]],[[-1.150050,6.714878],[9.530746,-1.968016],[-0.817039,-2.266377],[3.179749,-7.101726],[-3.046001,1.409730],[4.893046,3.612798],[8.494874,-3.643496],[7.894517,-3.389293],[0.529122,1.539326],[-5.339008,5.579684],[-7.233814,5.616934],[1.046568,-2.716082]],[[-8.707317,0.873220],[-8.866815,-4.304897],[-9.265328,-3.199173],[6.211421,-3.356850],[-4.867492,-9.517658],[0.328770,0.377968],[3.607538,3.823438],[7.731538,-5.667744],[-2.701233,2.590599],[-6.037892,-7.133438],[-9.188053,-8.356542],[-2.590648,5.070020]],[[7.804128,7.714370],[9.297012,-3.650203],[9.596028,7.026047],[8.015876,-1.164920],[4.383061,-4.353037],[4.434332,-6.342975],[8.184779,0.770821],[7.881459,0.963170],[-7.568651,-3.181396],[7.691916,-2.089654],[-5.877404,7.122639],[5.854749,6.633607]],[[-7.162719,4.253218],[1.980362,0.297339],[-9.238151,-7.725418],[6.480877,-7.481374],[-6.972559,2.801700],[3.685513,-3.334820],[4.612183,-8.128641],[2.627677,9.490671],[5.455067,0.947717],[3.640534,-9.070485],[9.221881,1.558186],[-9.592053,2.786052]],[[-7.138047,-1.680571],[-2.769419,-7.879724],[4.861664,5.199508],[-3.359800,-8.772154],[6.320667,-2.513507],[-9.666054,-5.958772],[1.984601,3.339107],[-9.905757,-1.884262],[3.897443,-7.616275],[3.047567,-0.860881],[4.453548,8.880960],[-9.388515,-8.053375]],[[2.391369,-4.384580],[8.662187,-4.296414],[1.449257,-2.328915],[-9.836131,-9.466892],[0.909093,2.472766],[0.127178,2.939872],[1.600551,7.482095],[-6.701809,8.126665],[-2.113613,-5.380614],[6.851265,4.858324],[-8.532173,-6.345459],[-5.497846,-4.676844]],[[5.437310,0.633394],[3.474666,-9.847128],[9.128556,5.539545],[3.308230,-4.157388],[-7.517083,3.129878],[8.025968,-8.818469],[-8.237344,-8.670710],[-3.441611,-6.828564],[-2.947830,-9.264354],[3.715309,9.844221],[-2.529818,-0.336198],[8.699862,-7.506509]],[[2.747629,0.650876],[-5.650657,-6.953389],[-7.671777,1.701751],[-4.457876,9.326762],[4.930236,-5.209847],[-1.755399,-0.053323],[-3.944753,-1.760517],[0.907195,-9.120650],[-8.346432,0.429823],[5.451417,3.921726],[-9.915104,-6.846307],[-3.374254,7.228572]],[[-7.583551,-7.263888],[0.941755,4.177314],[-9.975624,-7.620124],[-9.760233,-0.838619],[-1.367099,0.113608],[-8.694927,-8.010158],[-9.079321,2.166683],[-1.974524,-8.652109],[-4.033983,5.710739],[1.110662,-6.302982],[-1.017610,6.607035],[7.860763,4.021354]],[[5.663100,5.678626],[3.106985,-6.136884],[4.934544,-9.637157],[5.452949,-0.519492],[-1.916445,0.799381],[-8.989490,3.831423],[-9.714348,-2.809609],[-8.140567,-7.382210],[-0.290824,1.609658],[5.012463,8.120869],[5.072795,-6.794531],[0.520458,9.848046]]], dtype = "float32")#candidate|3965|(14, 12, 2)|const|float32
uop_3966 = relay.asinh(const_3965.astype('float32')) # shape=(14, 12, 2)
output = relay.Tuple([uop_3966,])
output2 = relay.Tuple([uop_3966,])
func_3981 = relay.Function([], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3982 = func_3981_call()
output = call_3982
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3984 = relay.var("var_3984", dtype = "uint64", shape = (14, 4, 10))#candidate|3984|(14, 4, 10)|var|uint64
var_3985 = relay.var("var_3985", dtype = "uint64", shape = (14, 4, 10))#candidate|3985|(14, 4, 10)|var|uint64
bop_3986 = relay.greater_equal(var_3984.astype('bool'), relay.reshape(var_3985.astype('bool'), relay.shape_of(var_3984))) # shape=(14, 4, 10)
output = relay.Tuple([bop_3986,])
output2 = relay.Tuple([bop_3986,])
func_4001 = relay.Function([var_3984,var_3985,], output)
mod['func_4001'] = func_4001
mod = relay.transform.InferType()(mod)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4001_call = mutated_mod.get_global_var('func_4001')
var_4003 = relay.var("var_4003", dtype = "uint64", shape = (14, 4, 10))#candidate|4003|(14, 4, 10)|var|uint64
var_4004 = relay.var("var_4004", dtype = "uint64", shape = (14, 4, 10))#candidate|4004|(14, 4, 10)|var|uint64
call_4002 = func_4001_call(var_4003,var_4004,)
output = call_4002
func_4005 = relay.Function([var_4003,var_4004,], output)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4020 = relay.var("var_4020", dtype = "uint64", shape = (7, 10, 13))#candidate|4020|(7, 10, 13)|var|uint64
var_4021 = relay.var("var_4021", dtype = "uint64", shape = (7, 10, 13))#candidate|4021|(7, 10, 13)|var|uint64
bop_4022 = relay.logical_xor(var_4020.astype('uint64'), relay.reshape(var_4021.astype('uint64'), relay.shape_of(var_4020))) # shape=(7, 10, 13)
func_1299_call = mod.get_global_var('func_1299')
func_1303_call = mutated_mod.get_global_var('func_1303')
var_4034 = relay.var("var_4034", dtype = "uint8", shape = (2240,))#candidate|4034|(2240,)|var|uint8
call_4033 = relay.TupleGetItem(func_1299_call(relay.reshape(var_4034.astype('uint8'), [14, 10, 16]), relay.reshape(var_4034.astype('uint8'), [14, 10, 16]), ), 3)
call_4035 = relay.TupleGetItem(func_1303_call(relay.reshape(var_4034.astype('uint8'), [14, 10, 16]), relay.reshape(var_4034.astype('uint8'), [14, 10, 16]), ), 3)
uop_4041 = relay.exp(bop_4022.astype('float32')) # shape=(7, 10, 13)
func_2421_call = mod.get_global_var('func_2421')
func_2424_call = mutated_mod.get_global_var('func_2424')
const_4047 = relay.const([7.240499,-9.698535,-7.294235,3.740474,3.823224,8.016800,-4.233099,0.305247,-2.943851,8.509895,-5.438287,2.988785,6.144759,-4.178197,-4.492438,-8.468311,-7.076520,6.369158,3.317528,-7.899090,0.767198,4.375966,-8.632887,8.980264,-7.648740,-1.385034,0.006343,2.804437,-2.428571,1.051492,-6.874075,-8.138347,-0.468701,6.355218,7.797390,8.213831,-8.228177,-9.195128,0.150204,5.804031,-6.298357,-3.759286,1.597447,-4.711211,4.178392,8.800746,-3.379276,-6.241712,4.110590,-3.438181,-1.323606,3.842805,9.589412,1.719349,8.207853,-6.271038,-2.495341,3.606814,1.419594,9.910013,-9.179752,-1.738540,7.172430,7.257872,-6.324178,5.831795,5.801311,2.537008,-6.853994,3.302060,-1.425344,-4.018169,-8.457275,-6.081876,8.177078,1.907282,-5.460429,-8.477630,-3.244147,-3.650876,-0.413735,0.870930,6.917598,-3.868085,3.412911,9.364399,4.054363,-8.400521,-7.206503,1.658968,2.124773,4.155557,-8.612022,4.319628,8.520230,-0.880707,3.221627,-3.600977,-1.858823,-9.779010,-4.118872,6.048747,7.258318,-9.036324,5.981589,-6.247532,-6.046361,-9.076408,4.289125,6.836157,-3.694421,-4.389985,-1.729452,-9.866105,2.640918,-4.204918,-8.105970,-1.887606,-8.388983,6.784506,-6.860630,-0.851566,6.786504,-8.321175,-8.006789,-1.540971,6.928229,-3.230593,4.984195,-0.109453,7.194623,-8.371052,8.324696,-2.909671,2.385074,1.779642,5.935616,-6.823943,-4.042946,5.531143,9.582039,1.407653,9.145512,-2.399383,-4.846201,3.297195,5.950322,-2.137905,-7.620865,-2.930949,-9.958440,-3.585182,4.996265,1.884099,1.812508,-5.799758,-9.422589,3.061703,8.486424,-8.257957,-4.752459,-3.196762,1.022337,-8.776443,6.363124,-9.549895,-7.172257,7.054515,8.306689,-8.682530,5.118858,9.952816,-5.923685,9.661309,-0.020772,-8.882675,-3.880395,8.034267,3.739771,6.408762,-2.484534,-8.455107,-8.835429,5.245080,-3.216261,-5.125275,-3.544301,3.039959,-5.643632,6.111603,-8.882515,-7.891390,-6.805999,7.212611,1.636269,-4.584564,-6.595051,3.647929,-9.811626,-2.128072,-4.505160,-8.722072,3.324441,9.795513,7.768486,-2.195222,-0.459293,-8.375493,-4.518961,-1.991405,-4.641979,-5.596628,-4.536438,-6.744440,-9.793432,3.057495,5.590478,4.230852,-3.131526,7.777591,8.495025,9.366147,-4.535847,-7.704332,1.382664,-4.734123,9.825455,-0.643761,-7.075104,-3.659116,-9.286858,5.043880,-8.172688,-8.162506,-8.902382,-3.551559,3.438966,3.301409,9.439957,3.010175,3.373691,-7.278065,-0.526901,-4.626070,8.402517,5.037905,-4.462848,-2.282592,3.065929,6.183678,-2.069687,-5.525393,-5.306298,4.355555,3.918651,-1.030586,-1.506404,-5.418200,-5.893338,-7.411668,4.421489,1.577691,-8.837496,-9.377732,-6.138298,4.229451,7.100399,-6.780553,-7.545314,2.891749,-1.304854,-6.636893,3.742578,2.984043,6.235482,4.146844,4.456629,-0.985410,-8.888325,-7.388359,3.946649,8.503896,9.675256,-2.941914,0.307710,9.478546,3.143960,5.218741,-0.402551,-1.107583,-8.604528,8.949675,-4.240738,8.326228,-6.061760,7.300519,-3.896091,8.067847,1.374114,5.351581,8.991625,-6.640044,-2.348744,9.080121,8.276553,-7.451143,-0.975528,1.098009,2.702850,9.368117,-7.281371,3.372923,-9.193247,-6.546017,-6.808446,-3.995436,3.924999,5.733665,-5.216592,-7.223913,-9.010483,3.271680,-1.955524,-4.819765,-2.456344,-8.616242,-0.113107,8.415614,-7.550011,-0.018623,6.259078,-1.691476,-6.472526,-3.451603,9.048631,-0.953007,9.306528,-1.083424,-5.572088,8.366756,-4.106997,-6.864821,-5.154452,6.453933,3.866060,9.951220,5.653644,1.934504,1.249989,-6.023040,1.158280,1.124679,4.774551,-3.789517,-4.920900,-1.328730,9.811051,0.448981,-2.204602,-5.481229,6.356031,-4.818350,-7.637375,-1.919883,0.687943,-1.867893,9.232561,2.676156,8.995570,-9.504692,9.920689,-3.844366,8.541691,-9.780111,3.931835,-8.687362,3.979240,3.113121,-3.206142,3.008865,-7.137737,-0.445367,3.099366,-7.702739,-8.350673,-6.268860,5.224957,-9.185893,8.233206,-1.822837,-5.095704,0.778381,4.953266,1.489447,-6.298538,8.181112,-6.691759,-4.747746,3.658242,-0.325374,6.281599,-8.874146,7.604983,-5.926526,0.712949,9.456332,1.146009,1.045112,0.082497,-7.796190,-8.723709,2.156658,-9.104598,-3.799169,-3.323048,6.158684,-0.255333,6.747816,-1.637412,-2.849862,-8.718561,3.611029,-1.654098,4.984951,2.091337,9.709919,4.165108,-7.598572,-3.298595,-8.740021,0.871012,-8.474906,7.750874,-7.011148,1.810898,3.696750,-8.673679,6.931699,-6.804412,4.414997,4.509130,2.659600,9.671637,-8.413566,-8.794665,-6.149090,-2.847475,8.949518,-8.323881,6.133230,-6.333134,-6.666438,-2.709524,7.685771,-7.518645,-5.017480,4.077728,-5.897306,-6.665965,-1.062698,8.621575,-0.187017,-1.289474,6.448755,2.925525,-6.636411,-0.316193,7.651040,2.747888,0.591905,8.444776,0.181651,4.727996,0.750028,-3.322693,-2.344009,-5.121131,3.045429,6.743207,-4.636128,5.489597,-8.400954,2.935620,-7.114892,9.220070,-7.104910,-3.005240,1.597990,1.083230,5.881164,5.632567,-3.451721,-8.443274,-0.638707,-6.855302,4.974163,8.905615,8.421460,9.309105,1.676533,8.366257,0.450667,4.443650,1.144282,1.377436,-0.493699,5.088015,-9.267921,-3.247418,2.399861,3.369268,1.662963,-6.630967,0.563494,-9.265333,-0.836481,-6.851423,5.219459,0.274554,3.879110,5.876634,6.860191,-6.496224,4.175921,-3.278841,4.891042,9.434751,-1.525472,-7.180698,9.891632,5.813816,-8.613445,2.864324,5.151077,2.599090,6.217720,0.521651,4.880982,-3.406915,-1.519879,5.106687,6.876063,-2.952041,-5.283670,4.663155,-8.893927,-7.761475,9.608746,-3.428406,-1.850041,2.441606,2.782574,-2.010410,-0.193788,9.539243,9.731479,-0.007286,1.026835,-5.353588,1.989500,9.249811,-9.728539,0.291192,3.911004,7.164211,3.994731,4.710298,7.968345,5.876042,-7.549324,-3.898457,8.143938,-1.642508,-1.558429,-3.107888,8.681688,7.341907,1.299788,7.393618,-1.957241,-1.006079,2.178574,-7.914991,7.541545,-0.774898,-7.885255,8.388495,0.462678,-4.746725,1.378828,-0.326345,-9.356945,-1.844168,-6.571461,-2.869439,-8.813658,-4.546167,-8.157187,-9.283082,-0.980410,-7.581211,-1.371618,-6.577596,5.515721,3.799224,6.331551,7.011659,7.341861,-0.653332,1.539827,-4.163674,9.504709,0.184461,-1.198006,-0.539765,-3.105221,0.250927,-2.095081,1.263843,4.202425,-5.490558,-2.563182,-0.709701,-2.272873,0.459112,-9.904599,7.188843,-1.908730,3.360592,3.902306,8.122668,-9.813491,-9.443181,-7.215647,0.061922,-9.563114,-5.936926,7.680940,-8.202801,6.648388,-1.282827,9.522109,-4.530591,-7.821708,-6.904930,2.476118,-1.178459,1.085612,-9.255792,-4.141500,4.642192,-6.988037,5.866421,-1.747633,2.760413,2.920556,7.160399,6.019353,-7.547612,-0.744115,7.288129,-6.939570,4.934078,-8.876845,6.106340,6.258934,7.667751,-8.473892,-9.137130,-9.427990,4.052746,7.296744,2.673843,-1.352808,-7.230144,-1.709041,-2.310908,8.147053,-7.674127,4.802442,-5.481510,-8.324297,-3.037492,-0.919502,-1.179789,-1.955021,-6.017072,-7.481977,7.928619,2.949984,3.632757,8.779219,-7.520591,-1.489315,8.424292,-1.226797,-6.521411,0.112112,-0.461261,1.937838,3.372448,-0.395283,8.773167,6.710040,1.406028,7.503846,-3.812383,-2.924586,0.616407,-2.910347,-1.902265,1.456835,1.377852,-4.849753,-7.688249,-7.462202,8.036168,-3.444190,-0.484916,8.901719,-8.814974,-6.487398,-9.832219,-0.212597,7.251672,-8.531489,6.926422,5.616457,-6.467326,-5.496250,3.770958,-8.535626,4.591506,-3.114006,-3.702704,1.367349,-4.174343,-2.035723,-5.039356,-2.285254,7.632538,-9.082911,-1.359190,1.560508,8.452281,-6.781199,3.359413,1.327063,8.116231,-5.191999,-9.961858,-0.207649,7.656072,5.807141,9.868428,-6.697839,-3.116875,-3.576331,-4.199659,0.272212,6.779959,-0.777726,9.968714,-3.170415,4.345446,-9.898390,-9.383282,-2.073156,7.126288,-2.552473,-8.447625,7.216028,7.848039,2.155334,-3.433347,6.611803,-6.530758,-5.339365,9.878987,-7.842500,2.113393,-7.852097,-2.806615,8.473042,-2.060478,-6.073297,-5.970213,6.006490,8.182477,2.885452,-7.928046,-3.720338,9.477625,-9.348753,1.504639,7.987885,8.144846,-9.068595,8.342366,-6.350481,3.413298,-5.676542,-6.919284,8.185429,-8.120239,4.238327,4.419782,-3.089398,-0.388109,-7.103839,1.579572,-6.309145,1.671906,-7.460822,8.536380,8.610214,-7.120863,-4.407950,1.896150,-1.869511,8.421816,-7.880088,7.436963,1.257889,2.495633,0.253790,9.950894,-0.408665,4.836628,5.048359,4.211762,3.307662,-8.918452,-7.480602,-2.710345,-7.203385,7.848267,-4.826772,8.855002,-3.517972,1.749980,0.749113,-3.072424,-2.540070,9.095342,-9.082868,-7.238768,-1.065146,3.463736,-8.327745,8.813357,5.494537,-7.027152,-9.652584,1.641584,-5.755485,-7.700834,-2.051107,8.073084,-0.026319,-5.146541,0.514103,3.278104,-2.056475,2.904439,-0.531865,8.731820,8.211227,3.840295,5.065414,-7.404757,-8.884998,8.868139,7.380638,6.578074,8.774884,-4.124851,-1.067029,-2.874493,3.556364,4.781630,1.230855,1.641972,-9.750189,-8.443687,-0.222646,-9.933981,4.766039,2.855611,-6.968108,7.825109,-4.378017,2.887189,3.054136,8.325928,0.269384,-3.118355,4.993937,3.669038,-6.453326,1.822078,-7.593337,6.995096,-9.940592,3.059989,2.889102,-6.399614,-1.891428,-5.039353,-1.269031,-5.811658,3.050176,-0.997827,7.605085,-5.452613,6.261265,-0.660544,0.837793,5.970164,-4.812364,5.130879,3.895037,7.640298,5.139079,7.721969,-4.867685,1.963608,-7.231093,-2.162325,8.855701,-2.502756,5.993517,-3.241894,-6.169056,-5.274982,-7.366030,9.025345,2.843399,-9.165583,-8.176378,-9.336396,9.191369,-2.156771,7.867973,7.888311,-7.124867,0.995114,-0.488129,-4.734555,-0.981701,1.045066,-9.041553,-2.745947,-6.177390,-1.886413,4.113437,8.506938,-4.073458,-9.680534,-9.909752,-9.689193,4.686522,-4.043316,-8.003280,9.407808,0.410820,7.432683,9.545606,-1.836976,-5.955862,-9.639599,6.422743,8.825062,-7.518325,-5.197210,3.929349,4.740705,-1.799641,7.531766,-4.079148,5.978981,7.602317,-6.395959,3.859111,-4.696407,9.239098,3.011427,-4.816195,1.624214,-7.151783,-4.178812,-3.418607,9.292745,3.904648,8.976632,1.426489,-3.042046,-4.111171,9.348474,1.871508,7.641158,-1.829835,6.109383,1.571329,1.697044,-7.330212,-5.752899,7.589843,-9.023984,-3.788533,3.032277,-3.980444,-5.374807,-0.869977,-6.478185,-8.761291,-4.992836,-2.508690,5.794689,-9.888073,-9.874418,-6.483496,-3.649017,-2.941691,5.451455,-9.263972,-2.055046,-8.081590,5.758863,-4.427485,-8.375382,-7.824726,6.159609,-9.252358,-7.725092,-8.059007,-3.134642,9.848199,-3.178311,9.434696,-3.996606,-3.209004,-7.831223,-3.963477,1.078826,-5.250192,7.108634,7.292368,2.648298,0.995408,-9.139778,-8.328901,4.702732,1.865511,9.002813,6.599883,5.589350,-9.401862,-5.299705,6.856829,3.644825,7.698685,-7.238477,-4.921534,-3.201335,-0.750273,4.818127,0.284436,-8.651297,-7.393666,1.230813,-8.525026,-4.681765,9.303108,2.221150,-0.075234,-2.482350,9.620822,-7.936521,-9.583388,3.481909,-2.406096,-7.095660,7.768844,-3.078894,-9.597486,2.829663,-5.339809,-9.608258,-8.893215,3.563279,-2.290516,-6.896001,-5.535262,6.746997,-6.727026,8.969173,9.430187,-6.764423,6.911630,7.205441,8.377641,-5.850357,-7.800576,4.593779,-0.570336,4.645891,-9.852518,-0.096851,0.293860,3.334223,-0.815375,-7.592626,-0.854122,1.388798,7.526295,-8.002333,0.170609,0.974614,8.782355,1.903426,2.983688,-9.625930,-0.518100,-8.025668,0.323989,4.491095,4.036727,3.326594,5.591371,7.511064,0.272084,8.874873,-9.768175,-8.654066,3.042290,9.947931,4.971337,-1.574457,-4.776620,0.540091,-7.970050,3.303895,-4.896876,-7.147683,8.982662,-4.314895,9.306039,-3.629748,-9.925466,5.316544,-2.284525,-5.850717,-2.471246,8.394515,-5.070274,-9.034792,-5.565034,-1.022175,1.546649,-9.623566,-5.590132,9.172824,-5.645245,2.269574,5.312776,-8.843018,8.827880,4.559527,8.017035,-2.955472,1.143692,-1.993022,-1.501403,-8.971971,3.542407,8.949491,0.438131,4.648472,-0.190577,8.690796,0.320022,2.608510,-0.978497,3.491696,8.667410,6.217480,-9.052301,-6.134423,-0.323170,-7.486282,7.744039,5.263467,9.610133,-3.561460,0.636527,1.110869,7.900402,1.732537,4.851503], dtype = "float64")#candidate|4047|(1200,)|const|float64
const_4048 = relay.const([[-9,10,-10,4,-2,-1,2,-2,-3,3,10,5,5,7,10,-5,-4,10,8,3,5,-4,-3,5,-1,-8,-6,10,4,3,-3,-2,-5,-10,-10,-3,-4,-2,-5,5,-5,7,-7,-7,6,-5,-10,3,-1,10,-3,-6,10,-4,-5,1,3,1,6,-8,-10,9,-2,-5,5,-6,-8,7,-10,-5,1,5,5,-1,6,3,-6,5,-5,5,-8,10,5,6,-8,2,-10,-3,-5,-5,-8,4,-1,2,-9,-5,7,-5,-3,-10,3,-10,9,7,10,4,2,-9,-8,8,9,-6,-1,9,-1,6,-10,-8,-10,2,1,-5,5,4,7,1,-7,2,-8,-3,1,5,-6,10,-10,-5,10,3,-7,7,1,10,6,8,-5,5,8,7,4,9,2,4,7,-7]], dtype = "uint16")#candidate|4048|(1, 154)|const|uint16
call_4046 = relay.TupleGetItem(func_2421_call(relay.reshape(const_4047.astype('float64'), [16, 15, 5]), relay.reshape(const_4048.astype('uint16'), [154,]), ), 0)
call_4049 = relay.TupleGetItem(func_2424_call(relay.reshape(const_4047.astype('float64'), [16, 15, 5]), relay.reshape(const_4048.astype('uint16'), [154,]), ), 0)
output = relay.Tuple([call_4033,var_4034,uop_4041,call_4046,const_4047,const_4048,])
output2 = relay.Tuple([call_4035,var_4034,uop_4041,call_4049,const_4047,const_4048,])
func_4054 = relay.Function([var_4020,var_4021,var_4034,], output)
mod['func_4054'] = func_4054
mod = relay.transform.InferType()(mod)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mutated_mod.get_global_var('func_4054')
var_4056 = relay.var("var_4056", dtype = "uint64", shape = (7, 10, 13))#candidate|4056|(7, 10, 13)|var|uint64
var_4057 = relay.var("var_4057", dtype = "uint64", shape = (7, 10, 13))#candidate|4057|(7, 10, 13)|var|uint64
var_4058 = relay.var("var_4058", dtype = "uint8", shape = (2240,))#candidate|4058|(2240,)|var|uint8
call_4055 = func_4054_call(var_4056,var_4057,var_4058,)
output = call_4055
func_4059 = relay.Function([var_4056,var_4057,var_4058,], output)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4083 = relay.const(8, dtype = "uint8")#candidate|4083|()|const|uint8
var_4084 = relay.var("var_4084", dtype = "uint8", shape = (1, 14))#candidate|4084|(1, 14)|var|uint8
bop_4085 = relay.multiply(const_4083.astype('uint8'), var_4084.astype('uint8')) # shape=(1, 14)
func_1926_call = mod.get_global_var('func_1926')
func_1929_call = mutated_mod.get_global_var('func_1929')
const_4094 = relay.const([5,10,-10,-9,2,-5,9,4,2,-2,3,-9,-8,-3,6,8,2,9,8,4,-1,-10,7,-4,4,-1,-9,-3,5,-7,-8,4,-4,-3,10,6,-10,-10,2,5,-1,4,7,7,5,-2,-1,-4,9,9,7,-1,-2,6,-6,-10,7,6,-1,-5,7,1,4,-2,3,2,-9,-8,5,-4,5,7,10,-8,-4,-9,-10,8,-4,-9,-4,-8,8,-3,-2,-4,-5,-10,2,-7,-9,-9,7,-7,10,9,-8,6,-2,9,-9,10,-1,8,6,-4,-2,-8,-2,9,10,5,-4,4,-3,-10,5,6,-10,-1,-2,3,-10,2,-5,-4,-10,3,-2,-9,-1,9,7,-1,-2,5,-9,-9,-9,-9,-3,-9,1,-8,-10,-10,-4,-6,4,9,-2,-1,3,8,-10,-8,1,7,-9,7,-2,10,-5,10,-6,5,-5,8,6,-2,4,-9,-7,-7,3,-8,2,-2,6,8,1,9,2,4,5,4,7,-4,-2,-5,-8,10,10,-9,-2,-8,2,8,9,2,9,-5,1,-5,2,-8,2,10,-9,-8,-8,3,8,-6,5,-2,5,-5,7,-9,-9,-9,4,10,-10,4,9,-10,1,3,-3,2,-2,-4,6,-8,-10,-5,6,-8,6,-8,9,1,5,6,2,-8,7,-3,-5,10,-6,10,2,2,-9,-4,-8,8,2,-1,-4,-9,1,5,-1,-1,-2,10,-10,2,1,-6,3,-2,8,9,4,-2,-8,-1,2,5,-5,-7,-7,4,7,9,-4,4,6,-3,-1,-5,1,-9,10,-8,9,1,6,-6,-5,-2,-7,10,-2,-6,-7,-4,-7,-3,7,5,7,-3,-3,-6,3,-9,6,6,4,3,-2,-2,-9,9,8,-3,-10,-10,5,-1,-5,1,-10,1,8,7,-2,9,4,9,-2,9,-7,4,2,-10,-6,10,5,-1,-7,3,9,-3,1,-7,2,-4,-2,1,-4,2,-2,-9,4,-2,-10,10,-8,-2,-3,-4,2,6,-6,7,9,-3,2,10,2,6,-8,1,9,6,10,-9,-8,6,1,6,-7,-3,-1,-4,6,6,8,3,-9,-9,1,-3,2,-2,7,5,1,2,2,6,7,3,9,1,6,-9,8,5,3,3,7,3,-5,-1,-10,4,-1,1,4,10,-1,-7,2,7,9,-5,-9,6,3,10,6,-9,4,7,-1,9,5,-9,8,-2,7,7,8,-9,-3,-4,-4,6,-2,-7,7,5,2,8,-1,8,10,5,9,8,-4,2,5,9,8,-10,-1,-8,-8,-2,-7,-10,-6,-6,10,10,6,5,8,9,-7,-1,-4,1,5,3,-4,10,8,8,10,2,-7,-7,1,1,5,-6,2,10,-3,-1,4,10,9,-9,-3,5,10,-5,8,-10,-1,-9,-6,-2,2,7,-9,9,2,-7,3,-6,-5,-5,-8,-5,1,-2,5,-7,9,4,-8,6,-2,-6,-6,-9,5,4,-9,2,5,9,2,-8,10,9,-4,10,7,-3,10,3,-6,-9,-6,-4,-7,-2,1,-9,1,-2,2,-2,-10,9,-7,-5,9,-7,-5,5,-6,-2,-8,-1,-9,-5,5,-10,-4,-6,3,-3,5,7,-1,-3,-1,3,8,-8,6,-9,-1,-7,8,-6,-7,3,-7,4,-5,4,-6,7,10,2,-9,9,10,4,3,8,9,4,4,-3,-6,8,5,-5,-1,2,-8,1,-9,5,-5,2,8,9,3,-2,-10,-1,6,-9,-3,-8,-4,-8,-3,4,7,1,1,7,3,-1,10,9,7,4,1,-10,10,-7,-2,1,7,5,6,-2,-3,-4,-6,-10,1,5,-7,-6,-3,-10,-5,4,-6,2,3,1,-8,1,-7,8,-9,9,-8,-1,-9,-7,5,-6,10,-1,1,-1,6,-4,-6,-1,7,-9,5,9,-2,-8,-8,7,2,3,1,-4,-7,-10,-5,6,-10,-9,6,1,-2,4,-1,10,-1,9,-6,-9,-1,5,-9,-10,-7,-4,-6,-10,3,-8,7,10,-10,9,9,-10,6,-8,8,6,6,-8,-4,-1,-4,-3,-9,-10,9,-7,-9,3,-2,-2,1,-6,7,-9,2,-10,-1,7,6,-8,-7,5,2,3,1,6,3,-10,8,3,-9,6,8,1,1,8,6,3,-1,6,2,-5,6,5,-5,1,3,-6,-1,2,-8,-9,4,-4,10,9,2,7,9,9,2,8,9,4,-10,-3,7,-3,-6,7,7,-10,-2,-4,-10,-3,-6,8,4,7,-10,-4,-2,9,-6,-4,4,9,-10,5,7,-4,10,8,6,9,6,3,2,4,8,-8,-1,-6,-1,4,-10,3,-10,3,-8,10,-6,10,6,-6,3,7,-3,8,4,6,-8,-4,-1,4,1,-3,-8,-7,-8,-7,6,-6,6,5,-6,8,9,2,-10,1,-10,-8,-9,3,7,10,-5,-2,-2,5,-7,4,4,6,-2,-5,1,-3,10,10,9,3,-10,-6,-2,-2,3,-5,-2,1,7,-10,-1,1,-10,-9,2,-2,-6,7,-9,-7,5,-9,2,-2,-6,-7,5,8,-8,-6,-10,-3,9,4,-10,-10,4,3,1,-7,10,-6,2,2,-3,-2,-9,9,6,-5,6,-3,-7,8,-2,7,-1,-8,-6,-4,-1,10,-3,5,2,-8,-9,1,-7,-6,-6,-2,-5,-9,-3,8,1,-1,6,-6,9,-9,6,4,10,6,-2,-4,-1,6,8,-5,3,-5,-5,9,8,-10,-7,10,4,-7,4,-3,-6,8,-4,-5,2,-6,-5,-1,-3,7,-5,9,-5,-8,-10,6,2,4,-9,-3,-10,-8,-1,8,-9,-4,-6,-6,1,-1,-8,1,-1,6,-3,-10,5,8,6,10,4,10,8,10,3,-4,-8,-9,-7,8,-3,1,-10,-5,-8,10,8,-2,7,8,3,10,-5,8,-5,2,-9,-5,-3,-5,-5,2,6,-2,4,-4,-3,6,-3,-2,5,6,6,-4,2,-9,-4,-10,3,-5,3,-5,4,-6,8,-7,1,-8,5,-7,1,3,7,8,-7,-10,-4,9,-6,7,5,8,5,5,10,-6,8,-8,3,6,3,-2,-8,-5,10,-8,-5,-2,-4,10,-9,-7,-6,-1,-3,8,-10,2,-5,-4,-8,9,9,-4,8,-7,10,3,8,-2,-8,8,-5,10,7,5,6,-7,-7,8,-4,-4,10,10,-9,1,-7,9,-9,-1,1,-10,-10,-2,9,-4,-6,9,6,-3,6,-6,5,4,-2,-8,1,-10,6,-9,1,-2,-4,2,-2,8,-1,2,8,9,1,3,-7,2,-4,-10,6,1,-5,-1,9,7,-4,7,-7,3,4,-9,-8,4,-3,6,-8,-1,-1,-2,-4,2,9,1,6,3,10,10,-4,2,3,-1,7,6,6,8,-6,-7,8,1,2,5,-6,1,-1,9,3,7,-2,5,10,6,-2,2,-1,-5,7,-4,-4,4,10,-1,3,-10,-8,3,-8,3,3,3,8,-6,9,7,7,-1,5,7,-8,3,3,6,-6,-5,-4,-3,-8,7,-3,3,4,-6,-5,-6,-1,3,-6,7,-7,1,3,-4,-6,-8,-5,-8,4,9,6,-4,-6,-3,5,-4,-4,-6,10,-6,2,5,5,-8,7,10,-5,-10,-1,-5,5,-1,-6,-6,6,3,7,5,1,-3,-1,2,7,-6,7,7,1,-8,4,1,7,-9,-4,-6,-8,-5,-2,-2,9,9,9,7,-5,-5,9,10,4,10,-2,2,7,-8,4,-8,-9,-10,-5,8,-2,-9,-3,-8,-6,4,7,9,-5,3,-8,6,-7,8,3,-2,-3,7,7,2,6,-5,-3,-8,-3,2,1,-1,-4,2,6,-4,4,4,9,-7,1,-9,-6,5,-8,-3,4,-9,4,8,5,9,-3,1,7,6,-9,4,-2,5,7,8,3,-2,9,6,-1,-3,8,-6,-1,-4,-9,-4,-1,-2,-10,-2,10,-1,-5,4,4,10,-1,-6,9,3,-10,1,-9,-10,7,-1,7,5,10,5,9,3,-2,-4,-1,-10,-5,10,6,-2,-1,8,-4,-7,-6,-8,10,7,-2,-2,8,-2,3,-7,-2,-1,-2,1,6,10,-4,7,2,5,-4,7,-1,7,2,4,-2,9,4,10,1,1,10,9,-3,8,-5,1,7,-9,-9,5,6,5,-5,1,7,-1,-2,-1,-9,2,7,8,-9,-4,-10,2,-6,-7,2,-7,1,-7,2,-10,10,-3,-5,-2,-9,-5,-7,4,-5,-4,-10,7,-3,-6,4,-4,-8,-3,9,9,2,-5,-2,4,-4,8,1,7,2,7,-9,-2,7,2,-1,-3,5,-3,1,-6,-6,-8,10,1,1,9,8,-9,-9,2,-9,2,-5,3,-2,8,3,-5,3,8,1,-4,-1,5,-1,9,-3,6,-5,1,-7,-5,7,7,5,4,3,6,-10,-3,1,-4,4,-10,8,8,2,-6,-5,-1,-8,-8,-4,4,-9,-8,10,3,-2,5,-6,-3,-8,9,4,6,6,3,-10,5,-4,2,-5,-10,-9,6,7,6,-2,9,-5,-8,-10,-1,7,-2,1,7,-8,-4,3,4,1,5,5,7,-10,-8,-7,-1,-7,5,6,3,-10,-2,-6,3,8,-1,4,2,-5,4,-1,6,7,-3,5,8,-4,-10,-9,-10,-3,-10,8,-2,-2,5,-1,-1,-2,3,2,-7,-4,-9,-2,-1,-1,-1,-5,-4,-9,-10,9,1,6,1,9,-6,-4,7,-5,10,-1,7,-4,-3,-1,5,6,3,4,-2,1,6,-3,1,1,-8,-2,6,-7,1,6,9,-6,4,8,2,3,7,9,8,9,2,-2,-1,9,-8,-10,7,-9,5,-8,-7,5,1,-3,-3,6,6,-6,-6,9,-2,-8,4,-1,-7,5,1,9,3,-10,6,4,3,-9,8,10,-8,8,-10,-10,-9,-2,-5,2,-4,-6,8,2,-1,10,-10,9,3,-1,-8,1,-8,-8,5,-2,-2,-9,8,4,4,-9,6,-4,7,3,8,3,-8,-8,-8,-2,-9,-3,-4,-8,-2,-3,-7,1,-4,-7,10,-8,-10,-1,-7,3,4,4,-4,6,-9,6,8,10,-2,6,-9,-10,1,1,4,7,-7,-6,3,-7,-1,-10,10,2,-9,6,3,8,7,5,1,-9,-10,1,7,8,5,-8,8,-9,-10,-4,8,8,-3,-7,4,-5,1,10,8,-5,-3,-7,6,-7,-8,-9,7,2,-2,-4,-4,-3,-7,-2,-10,-5,1,6,-8,4,-6,-2,4,-10,-4,-5,3,1,2,4,-2,4,3,-1,-3,-6,-9,1,-4,-2,-5,-5,6,10,-1,7,-5,7,1,8,-4,-10,-3,-8,1,-3,6,7,-6,-9,1,-10,-9,6,-4,1,-9,3,-3,8,1,-2,-3,-1,8,-8,8,-7,5,-4,-8,-9,9,8,10,-5,1,-10,-8,5,-2,5,9,6,5,-4,-6,-9,-4,-6,5,7,-1,-2,7,3,8,-9,1,-2,-7,9,-1,10,-5,2,-10,-8,6,-7,7,4,1,-6,-3,1,7,5,8,3,-4,5,-4,4,-5,6,-3,1,6,-8,-6,-8,9,-10,3,-10,10,2,2,-5,6,-1,2,5,-9,-8,2,-7,1,7,3,-10,5,-7,7,4,-1,-4,-8,10,4,4,4,-6,-9,1,-2,-4,-3,4,1,5,4,5,-10,3,3,-9,-9,3,10,1,-5,9,-6,-9,-2,10,-4,9,-2,-8,-10,-3,4,8,-10,-3,5,-4,-4,9,7,-3,-6,3,-7,-2,-7,-5,-1,-4,3,5,-9,1,3,-1,-1,1,9,3,6,2,-10,-4,-1,1,6,-3,6,2,6,-10,-10,-4,5,-4,5,-4,-2,-6,-1,-8,-1,-3,9,-6,9,-3,7,7,-5,2,-4,4,9,10,7,6,-2,-6,-4,-7,-8,-3,8,-6,-8,4,7,9,-8,-7,-10,-2,1,3,-10,-10,1,-5,3,1,-10,-7,-2,6,-7,6,3,10,-8,1,7,8,7,6,-3,-5,-3,3,-9,7,9,5,-3,-9,-2,-9,-4,-7,-8,-2,2,-7,10,-2,8,-6,5,10,10,9,10,3,4,-6,4,7,-5,-3,-4,-3,6,-9,3,-9,1,-9,7,-6,1,-5,-1,-3,7,-1,-10,-3,-6,-7,6,-3,5,9,-3,5,8,-3,2,-7,-1,-10,-3,-9,-7,-9,4,9,6,-3,4,5,6,3,3,7,-8,-6,9,-1,2,9,-4,7,-6,-8,-8,4,-2,-2,-7,-8,-7,8,-10,4,9,-7,-2,2,5,-2,-3,-7,-3,10,1,7,-2,3,3,3,-1,-6,7,4,-6,-6,-1,5,-3,6,-3,-1,-5,9,2,-2,6,-7,-4,6,-5,10,-7,-2,10,-4,10,-9,2,4,2,6,-4,1,-3,-9,-1,-6,5,-9,-7,-9,-10,3,6,5,-3,-4,-3,-6,-3,-5,-5,-3,1,5,-4,-7,3,-8,7,-7,-4,7,7,4,-10,2,-3,6,-6,-4,-7,9,-10,9,8,-8,-8,-2,10,-4,-6,-6,3,3,-2,2,-7,-7,5,4,5,-8,9,-9,5,-9,-10,-9,4,-2,8,-4,-4,2,1,5,-10,-9,10,-5,-1,-7,9,6,8,10,4,3,-8,-7,2,5,2,8,1,-10,-10,-5,-1,-6,1,-6,-1,10,5,8,-9,9,6,7,3,-2,-2,-5,10,-5,7,-3,-2,10,2,7,1,-5,5,6,1,2,7,-8,1,5,7,-8,2,-8,-6,-6,-1,3,6,4,7,1,-7,10,-6,-6,2,-4,2,9,-9,4,-9,-7,-6,2,-9,7,4,6,4,-5,-5,-3,2,-6,8,-10,5,-3,10,-6,10,7,-3,-6,-4,-5,9,-10,9,-2,4,-7,-1,1,6,10,-1,2,9,-10,8,-6,3,-7,-9,-1,-1,5,-9,-3,4,-2,10,10,3,-6,7,-7,-5,-5,5,1,-4,-8,-3,-9,4,-3,-5,-8,2,9,-6,-10,-3,7,-10,-6,5,9,-4,-4,-2,-5,-7,-5,-6,10,3,3,4,-5,-10,-1,4,-2,2,9,4,-1,8,2,2,-8,-2,10,2,-2,-8,-9,5,-1,9,1,7,-6,7,10,10,4,-10,-7,2,7,2,-2,-9,-6,-6,-4,6,-7,8,4,-7,1,5,-2,-7,8,-6,8,5,6,10,4,1,-1,-1,8,-3,5,-7,6,-7,7,5,9,-1,3,8,-7,9,10,5,7,-9,8,1,-1,-8,-2,-6,-5,7,-6,5,5,-3,5,-5,8,7,9,1,6,10,4,-8,-1,-9,9,-2,10,-9,5,-7,9,10,2,10,3,-6,6,-6,-9,5,10,4,5,5,9,-5,-8,6,6,-9,-6,6,9,8,-8,9,10,-8,-9,5,4,6,-2,-3,-10,9,-7,7,-10,5], dtype = "int32")#candidate|4094|(2816,)|const|int32
call_4093 = relay.TupleGetItem(func_1926_call(relay.reshape(const_4094.astype('int32'), [16, 11, 16]), relay.reshape(const_4094.astype('int32'), [16, 11, 16]), ), 0)
call_4095 = relay.TupleGetItem(func_1929_call(relay.reshape(const_4094.astype('int32'), [16, 11, 16]), relay.reshape(const_4094.astype('int32'), [16, 11, 16]), ), 0)
func_3711_call = mod.get_global_var('func_3711')
func_3713_call = mutated_mod.get_global_var('func_3713')
var_4105 = relay.var("var_4105", dtype = "int8", shape = (390,))#candidate|4105|(390,)|var|int8
call_4104 = func_3711_call(relay.reshape(var_4105.astype('int8'), [2, 13, 15]))
call_4106 = func_3711_call(relay.reshape(var_4105.astype('int8'), [2, 13, 15]))
func_2899_call = mod.get_global_var('func_2899')
func_2911_call = mutated_mod.get_global_var('func_2911')
const_4130 = relay.const([True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True], dtype = "bool")#candidate|4130|(2100,)|const|bool
var_4131 = relay.var("var_4131", dtype = "uint8", shape = (48,))#candidate|4131|(48,)|var|uint8
var_4132 = relay.var("var_4132", dtype = "uint8", shape = (288,))#candidate|4132|(288,)|var|uint8
const_4133 = relay.const([[5.968967],[7.951069],[1.815045],[-8.950854],[2.778779],[-0.220512],[-6.696145],[1.883959],[-6.258829],[-8.983617],[-4.708011],[0.565728],[-3.509885],[-2.438503],[1.747225],[-3.572704],[-4.992459],[-3.741582],[1.955313],[4.789977],[1.168313],[5.800431],[-1.538026],[5.200039],[-0.476249],[2.060985],[-1.897283],[4.618188],[1.771947],[8.462771],[-4.209959],[2.361183],[4.600196],[-8.273078],[-0.070434],[7.591107],[3.874374],[4.446607],[-7.182478],[-1.393881],[-5.515281],[2.640978],[-5.980259],[-3.539689],[-2.689107],[9.425911],[4.595529],[6.828635],[-7.553773],[5.887299],[-7.027735],[-8.529016],[6.485890],[6.321138],[-2.572780],[-2.458356],[2.411606],[-7.748346],[-2.355898],[-5.727107],[-9.303671],[7.491229],[-4.912577],[3.944358],[-0.497815],[-7.101086],[7.753856],[-5.080025],[-8.081690],[-5.287672],[0.360154],[-8.253560],[-6.308887],[1.263129],[5.822938],[0.746880],[7.580349],[5.589838],[-8.120536],[-7.816850],[0.411511],[0.298991],[2.483925],[1.243049],[2.339283],[-8.878957],[-4.783209],[-3.452657],[7.507220],[2.298461],[8.457294],[9.778143],[-9.478475],[-1.470521],[5.949610],[2.757127],[1.324277],[6.876600],[5.320134],[5.283429],[8.712944],[7.364937],[-2.641803],[-5.449877],[5.911929],[-6.447747],[3.797428],[3.300234],[-7.949621],[-9.456388],[-2.413168],[-8.446531],[-4.355389],[-7.171710],[-7.472305],[-3.667385],[-9.864610],[7.023170],[6.470835],[-4.469920],[3.954352],[4.726254],[-4.238687],[-8.364584],[8.202059],[-4.557357],[3.141592],[8.168266],[8.437619],[2.358107],[6.115245],[0.992711],[7.446427],[-0.821798],[-0.801394],[-8.227786],[8.739490],[-2.411169],[-5.799103],[-3.465895],[8.522985],[-6.735305],[2.690251],[-7.447046],[6.110828],[-6.218680],[-9.310857],[-0.763472],[-3.417106],[-2.405003],[-3.226824],[7.966514],[2.580771],[4.668660],[-8.091163],[1.503941],[7.372565],[-7.543591],[9.319030],[1.622827],[-3.600546],[-3.255625],[2.127586],[5.553606],[2.427532],[-6.767271],[-8.239953],[-5.862098],[-9.457075],[8.659607],[1.607072],[-7.622191],[-9.552639],[-9.453175],[-2.611860],[6.308597],[7.549627],[7.794377],[-3.630246],[3.169227],[-0.475655],[1.831229],[3.293487],[-5.222051],[-6.894732],[-8.285472],[-4.772719],[-1.814712],[-8.602235],[2.595465],[-6.523306],[6.500097],[-2.033176],[-7.734048],[1.126392],[-1.077242],[5.813799],[-9.343839],[8.919661],[-2.190562],[6.740504],[-3.773575],[-0.819268],[-1.706939],[7.570117],[6.554745],[-5.840197],[9.734895],[2.026876],[-3.202132],[5.115977],[-9.865294],[-4.992419],[1.172669],[-8.710199],[2.773200],[6.219242],[9.468491],[-9.991535],[-2.735031],[8.162544],[4.184803],[-1.146248],[-4.680189],[-9.146292],[8.124399],[-9.671054],[8.864287],[-4.846014],[-4.623938],[-6.477145],[-8.072545],[5.085444],[2.166723],[-4.683316],[1.888527],[5.661605],[8.270148],[-0.467375],[8.078002],[-4.964392],[-0.304087],[1.256495],[-8.279998],[7.712497],[-4.698628],[-2.080605],[7.363708],[-9.092027],[-1.018521],[-2.523695],[4.882173],[-1.474870],[7.735214],[-5.785667],[-6.725010],[8.880326],[8.050852],[-9.955240],[3.614806]], dtype = "float32")#candidate|4133|(260, 1)|const|float32
const_4134 = relay.const([-9.601393,1.749461,-5.203971,1.156509,-3.679284,-1.124724,-9.836432,0.874510,6.421311,8.768153,-4.049447,8.229651,-6.165444,-7.232521,-5.936072,-0.784983,-2.102908,0.076467,5.237240,5.860168,7.331582,-1.251140,-4.103149,6.061634,8.929223,-9.964608,6.346379,-6.615441,-3.582895,9.310074,2.982901,-2.145046,-4.165307,-9.579173,-5.335222,4.529248,1.924553,1.744934,0.644337,6.715689,-2.047566,-5.283560,2.172924,6.353393,-9.563610,-8.390542,-3.633231,2.742713,9.923061,-7.348384,-9.151962,9.652859,-1.279947,3.557816,7.295942,-0.294820,-8.724408,-3.364169,-3.045673,-7.058487,-5.504303,-5.134558,2.413824,0.953799,7.350123,-9.553286,5.200344,0.392986,9.422625,0.232893,-8.067733,-1.938905,6.776229,-2.678789,-5.676887,-1.693469,-6.093296,-1.819562,-9.574789,-9.652985,8.097844,0.589182,-7.423055,-2.003469,0.916671,1.694807,-4.610662,3.956677,-0.953237,1.522802,-9.328544,9.531383,-6.561951,-4.114891,-7.760984,-5.807359,0.502137,-6.693175,-9.248734,0.508703,9.294907,6.797944,-8.357955,8.609084,7.201421,-4.685300,-7.251334,-2.230082,5.749870,1.607021,6.800536,4.126212,-3.266731,-1.693105,2.945707,-6.407210,-5.430446,-1.376066,-9.269835,9.854126,-4.696094,4.205471,-6.298266,8.175574,-4.876771,1.614874,-3.532378,3.311059,-8.801728,5.092680,5.853703,-9.494838,-5.616414,4.563714,-5.471393,-4.596951,-5.894771,5.805644,8.570169,-0.409634,-9.157032,5.119110,-6.089139,9.939188,-8.900132,-8.277455,-9.470687,-2.665197,5.741041,-9.403697,-7.609766,-9.020870,-0.900875,9.135014,-7.556132,-7.998470,3.050964,3.449385,-2.385707,3.582188,-6.861278,-7.895900,-4.076927,4.553859,-8.193454,-2.138314,-6.399813,6.491290,-7.360732,-5.854702,-6.026812,4.578372,-2.793503,-9.921321,0.258197,2.993198,2.423843,4.825080,-4.967697,-8.928799,-2.015187,-7.816224,0.890774,2.649770,-5.098722,8.919289,-7.455094,6.819776,9.893811,4.545884,8.610292,-4.248588,7.691436,-4.274330,-3.247480,-7.814242,8.491497,2.764571,7.933223,8.736104,-6.195111,-6.651944,0.179945,8.189908,4.513078,-0.322764,-5.501249,-2.203115,-7.705396,0.906106,1.621818,7.608077,-4.279461,9.351775,7.758326,-4.781706,3.316903,9.045587,-1.127206,-7.377421,5.435300,-6.386276,0.891914,7.910690,3.385806,4.910204,8.352586,-7.091780,5.980585,1.558130,-9.503156,1.201924,-8.167725,-6.669204,7.113490,2.247690,0.393000,-5.369058,-5.455086,-6.222270,0.127816,-7.788876,-3.123451,-8.402884,-5.952755,7.543065,8.486024,6.225608,0.081721,-3.734356,-6.420391,2.707570,7.918099,-4.647498,-9.611042,-0.896279,-3.537791,-6.797439,1.467074,3.816382,-7.600404,-1.835387,1.313030,2.450368,3.357518,6.110895,1.947458,-6.383689,7.911457,-2.421501,5.377026,6.877141,4.816148,9.229846,-1.081632,0.784577,4.167923,7.558986,0.297399,8.785237,-9.907375,-5.836823,2.719282,7.342041,4.471370,-3.112762,-0.726196,8.016889,9.020270,-6.566872,0.581279,-8.370972,5.946121,5.272197,2.251706,4.134020,6.751610,7.070600,-7.798943,0.812292,2.653830,0.803803,7.331736,3.659265,6.237660,4.334675,9.545210,9.080735,9.643386,3.248054,1.926674,-3.133459,-7.683920,6.913820,-8.636165,8.130011,3.351487,0.859043,9.514409,0.125394,-4.881263,7.756059,4.724001,-2.863311,4.844251,6.103304,5.927848,3.916563,7.903604,-2.283415,-2.988475,0.252643,-2.733670,-1.536755,-8.693867,-1.346168,-1.148973,-5.466668,-9.750588,-5.159175,2.736053,-8.092676,-9.235159,-2.901540,1.721405,2.209249,-0.019812,3.485939,-0.363249,-2.388865,3.736597,4.441072,-3.714626,3.608302,0.419517,-6.440583,8.767225,4.790410,1.690367,-7.579944,-1.297308,-6.035318,-5.154773,-1.336857,0.707971,9.849456,9.545708,5.532451,5.530196,9.668166,-0.600086,1.750636,-1.101245,2.707966,-6.253625,-8.932935,-0.403914,-4.399142,-7.670386,9.172697,6.955712,2.232728,4.939844,1.368235,9.590759,8.887343,-8.069683,-6.142708,9.540149,-0.868785,4.710756,3.572042,8.782093,-8.121561,-5.769020,-7.612071,8.719338,-5.772377,-5.587806,5.633105,-7.372782,9.182688,9.533261,-7.918343,-5.824603,-3.671474,4.114052,9.272084,7.753081,6.839983,8.925445,-8.417877,0.608775,9.203543,-7.148933,1.601856,-2.742747,1.431865,-1.660612,-2.206603,6.355001,-0.454094,-9.490929,1.881315,-5.186215,8.177737,-0.524664,-0.786554,8.873431,2.608584,-6.573881,-5.754860,-0.834194,-0.576377,8.364476,7.303843,4.342499,-9.085603,3.038376,-4.049382,-5.338892,4.067444,7.687600,-0.642989,7.278349,-3.217359,-5.189335,-9.028675,-0.948649,-6.011336,-4.764384,-1.078572,1.112102,9.467796,5.135819,-8.089366,-2.670853,-9.082313,5.628085,-9.841852,0.176512,-9.736965,1.769698,-3.109299,2.599641,-2.988484,-3.919232,-7.053519,8.966171,-5.223479,4.619717,-0.261138,-8.029148,4.518256,9.097678,-1.137558,-1.769314,-5.304857,-3.082992,0.107972,9.792036,6.143814,5.748779,-3.226574,8.702027,3.758062,7.500669,-1.069606,-5.416115,-5.815916,7.588577,-8.118175,3.455583,-2.969445,8.334916,-0.113288,0.143915,-1.002633,1.114548,5.025206,2.724578,8.541414,-5.121568,-4.545394,8.908236,-0.722516,-4.774601,-4.847575,8.522437,4.283327,-5.929863,-4.662613,7.208912,-0.075695,3.248062,3.353258,-0.730083,9.305178,6.522562,-1.512378,-6.830888,8.050600,4.911735,4.752607,-8.330425,-4.442080,-7.222228,-4.737526,3.977639,-6.170905,-7.478513,-7.189035,-5.010067,7.149178,6.157305,-7.881840,-4.411225,-5.776963,8.634396,7.538280,-0.753296,-9.613529,-4.629754,-0.637327,-7.537834,-2.705704,0.975451,4.315211,-0.249711,7.740805,-7.651506,-7.576285,6.694109,7.329356,-6.542943,9.953110,-9.654985,7.486951,-7.315853,-7.762040,-3.159503,-8.532364,8.834741,1.539060,-1.209890,-7.097972,-7.785080,-8.274567,2.934979,-5.474435,-8.192390,8.980818,0.419132,7.373202,-7.528238,-9.247452,-1.747283,-3.379844,2.348452,5.642954,-9.421581,-6.473046,-4.142368,3.286230,-5.505456,4.157267,7.613900,9.983559,5.195755,-4.572325,5.061914,-3.053904,5.283729,7.694932,-2.225910,4.658960,-6.094730,4.173445,-3.612389,4.586149,-4.432333,6.168551,2.059664,5.890048,7.448275,-9.927566,-7.648015,-1.665405,-6.706490,-0.551044,-2.791433,4.317282,-8.796639,-9.501115,7.163093,5.970112,-6.429282,3.659062,-2.191542,5.059224,4.901040,-2.991560,-4.802252,4.640908,-1.328041,-3.070501,0.801253,-8.918800,-9.900968,-3.684504,-1.212713,-3.419125,-7.324267,-7.773775,-5.515671,-9.441401,6.777395,5.459492,0.603930,-6.644238,9.789016,8.624362,0.908467,-1.097901,-8.088383,4.818490,-6.914397,7.167490,-7.907008,8.203548,0.606987,-1.525211,-5.962247,3.650279,-3.643276,-9.251747,-4.893927,3.243943,9.843488,8.111603,-1.537228,-5.861437,-2.114744,-0.738274,4.350852,9.496433,7.091414,6.528186,-2.884663,-2.606088,2.725550,-7.187375,-7.468850,9.937186,9.586824,3.943112,2.410601,-4.734849,3.224308,-1.850450,7.813220,-4.666697,5.905884,-6.736030,-8.276075,7.772791,8.267000,6.905216,6.189267,6.418382,6.681968,-6.934934,-1.525827,7.495045,4.012577,-3.690494,0.911687,-8.929212,8.559310,-0.535988,4.467652,8.323784,7.494344,-7.518627,0.186507,0.326104,-1.151448,0.273677,7.695833,-7.849495,5.565223,7.255530,4.410047,1.911030,-8.976910,-2.958607,5.192255,8.402713,-1.405397,2.374011,3.288471,3.140869,3.592490,7.566421,0.182194,9.061512,-7.889373,3.532869,-1.335428,-5.827826,2.735871,-2.289095,-9.885612,8.982240,9.892480,-0.345854,-9.325412,-4.970175,7.412257,-9.347639,-3.977542,3.110659,-3.083423,-5.746077,8.700817,7.283904,-0.712477,-6.370845,5.415524,0.876716,-7.321717,-3.438987,7.803493,-4.337534,-5.482663,5.363664,4.827268,5.626022,-3.638497,-2.524393,4.797172,-5.310367,-2.897221,-1.806061,-9.195465,-2.736879,-2.909695,4.448265,-2.779608,-0.450666,-4.112714,6.197741,-8.823562,7.509901,-5.719536,-5.540110,-2.228234,9.180978,9.356111,-3.493872,-1.907238,6.179809,0.610144,-2.366432,-1.413624,-5.269666,9.251026,-8.424161,8.123444,-9.992354,-2.676625,6.298835,0.996777,7.087425,-9.062120,-3.198094,-3.976649,3.667311,0.543888,5.673890,-7.352698,-8.114379,4.745321,8.774265,7.930534,0.380659,6.421452,-4.698051,9.176311,6.948451,4.379663,-0.402861,1.361939,-5.416489,-2.964960,0.070455,1.584704,-9.677670,-3.658484,2.615947,9.685608,3.871757,3.952802,6.967079,0.075521,7.563907,-8.662884,8.401816,9.483039,-0.074317,0.717783,5.679780,-9.902771,-9.566478,6.500608,-5.270448,-9.944124,8.417382,6.149353,-5.415186,-9.768152,5.405157,-8.553333,-3.915398,-9.109500,9.602792,-9.662727,5.737918,-3.285516,-6.100292,7.260944,-1.911712,-7.116087,-1.833370,-5.516979,5.497197,-5.886222,8.771616,9.133808,-9.020000,2.592880,1.608024,-9.430917,-5.715434,-5.466001,0.558588,0.402384,0.318208,2.584845,3.618638,9.272538,-5.731157,3.026434,-3.480909,-2.537361,2.289947,-2.219745,9.747524,5.704540,8.722250,-2.597601,5.108452,-8.895257,-7.591876,-8.722635,2.307373,-6.943669,8.272018,5.895810,-4.579384,0.430278,0.118203,-5.401495,-3.459632,-5.181784,-0.573883,-5.383186,-9.980793,-4.263045,4.426992,-6.096170,-9.982894,-6.199946,0.890923,3.996739,4.151806,1.719436,-4.989159,-1.903184,6.257492,-1.348233,1.460882,8.201531,8.265850,-4.068156,1.126710,3.095967,3.861303,3.574585,-6.858353,-8.538837,1.362570,-9.684258,-9.309548,0.820957,-2.830647,0.248178,-7.359722,1.016745,-4.600930,-7.405982,5.998766,-9.637415,-9.764578,7.616501,-3.634227,-6.921507,0.463737,-1.828828,9.731436,0.962105,2.186651,-7.734946,8.037681,-6.308140,1.563104,4.559118,-9.712731,-9.706895,-7.832577,6.883648,1.096345,-9.756145,6.227437,-3.139709,-1.104443,-0.847963,-9.780312,-8.615089,-6.150361,-6.761828,5.578797,-9.003750,0.117388,-5.111684,-8.982428,-3.143478,-6.443510,-6.715888,3.889680,-2.039247,-6.082192,-2.970770,9.961636,2.646828,4.303549,-4.407036,9.235238,-9.719726,0.261647,-1.476707,8.564095,5.074827,-5.506857,9.745574,8.438292,4.190786,-4.414139,-3.822800,-2.509198], dtype = "float64")#candidate|4134|(990,)|const|float64
const_4135 = relay.const([False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False], dtype = "bool")#candidate|4135|(264,)|const|bool
var_4136 = relay.var("var_4136", dtype = "float32", shape = (1716,))#candidate|4136|(1716,)|var|float32
call_4129 = relay.TupleGetItem(func_2899_call(relay.reshape(const_4130.astype('bool'), [14, 10, 15]), relay.reshape(const_4130.astype('bool'), [14, 10, 15]), relay.reshape(var_4131.astype('uint8'), [48,]), relay.reshape(var_4132.astype('uint8'), [288,]), relay.reshape(const_4133.astype('float32'), [260,]), relay.reshape(const_4134.astype('float64'), [990,]), relay.reshape(const_4135.astype('bool'), [264,]), relay.reshape(const_4134.astype('float64'), [990,]), relay.reshape(const_4134.astype('float64'), [990,]), relay.reshape(var_4136.astype('float32'), [1, 1716]), ), 18)
call_4137 = relay.TupleGetItem(func_2911_call(relay.reshape(const_4130.astype('bool'), [14, 10, 15]), relay.reshape(const_4130.astype('bool'), [14, 10, 15]), relay.reshape(var_4131.astype('uint8'), [48,]), relay.reshape(var_4132.astype('uint8'), [288,]), relay.reshape(const_4133.astype('float32'), [260,]), relay.reshape(const_4134.astype('float64'), [990,]), relay.reshape(const_4135.astype('bool'), [264,]), relay.reshape(const_4134.astype('float64'), [990,]), relay.reshape(const_4134.astype('float64'), [990,]), relay.reshape(var_4136.astype('float32'), [1, 1716]), ), 18)
func_2305_call = mod.get_global_var('func_2305')
func_2308_call = mutated_mod.get_global_var('func_2308')
call_4139 = relay.TupleGetItem(func_2305_call(relay.reshape(var_4136.astype('float32'), [13, 12, 11])), 0)
call_4140 = relay.TupleGetItem(func_2308_call(relay.reshape(var_4136.astype('float32'), [13, 12, 11])), 0)
func_1769_call = mod.get_global_var('func_1769')
func_1772_call = mutated_mod.get_global_var('func_1772')
call_4142 = func_1769_call(relay.reshape(const_4133.astype('float32'), [4, 13, 5]))
call_4143 = func_1769_call(relay.reshape(const_4133.astype('float32'), [4, 13, 5]))
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_4152 = relay.TupleGetItem(func_2345_call(relay.reshape(const_4134.astype('float64'), [11, 15, 6])), 0)
call_4153 = relay.TupleGetItem(func_2347_call(relay.reshape(const_4134.astype('float64'), [11, 15, 6])), 0)
output = relay.Tuple([bop_4085,call_4093,const_4094,call_4104,var_4105,call_4129,const_4130,var_4131,var_4132,const_4133,const_4134,const_4135,var_4136,call_4139,call_4142,call_4152,])
output2 = relay.Tuple([bop_4085,call_4095,const_4094,call_4106,var_4105,call_4137,const_4130,var_4131,var_4132,const_4133,const_4134,const_4135,var_4136,call_4140,call_4143,call_4153,])
func_4175 = relay.Function([var_4084,var_4105,var_4131,var_4132,var_4136,], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mutated_mod.get_global_var('func_4175')
var_4177 = relay.var("var_4177", dtype = "uint8", shape = (1, 14))#candidate|4177|(1, 14)|var|uint8
var_4178 = relay.var("var_4178", dtype = "int8", shape = (390,))#candidate|4178|(390,)|var|int8
var_4179 = relay.var("var_4179", dtype = "uint8", shape = (48,))#candidate|4179|(48,)|var|uint8
var_4180 = relay.var("var_4180", dtype = "uint8", shape = (288,))#candidate|4180|(288,)|var|uint8
var_4181 = relay.var("var_4181", dtype = "float32", shape = (1716,))#candidate|4181|(1716,)|var|float32
call_4176 = func_4175_call(var_4177,var_4178,var_4179,var_4180,var_4181,)
output = call_4176
func_4182 = relay.Function([var_4177,var_4178,var_4179,var_4180,var_4181,], output)
mutated_mod['func_4182'] = func_4182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4186 = relay.TupleGetItem(func_3981_call(), 0)
call_4187 = relay.TupleGetItem(func_3983_call(), 0)
var_4213 = relay.var("var_4213", dtype = "float32", shape = (14, 12, 2))#candidate|4213|(14, 12, 2)|var|float32
bop_4214 = relay.mod(call_4186.astype('float32'), relay.reshape(var_4213.astype('float32'), relay.shape_of(call_4186))) # shape=(14, 12, 2)
bop_4217 = relay.mod(call_4187.astype('float32'), relay.reshape(var_4213.astype('float32'), relay.shape_of(call_4187))) # shape=(14, 12, 2)
func_3711_call = mod.get_global_var('func_3711')
func_3713_call = mutated_mod.get_global_var('func_3713')
const_4221 = relay.const([[2],[-8],[9],[10],[-3],[-4],[-10],[-8],[-5],[-2],[2],[7],[-4],[10],[3],[-6],[7],[1],[-1],[10],[10],[8],[-6],[-8],[5],[-5],[-2],[6],[9],[3],[-6],[-8],[-4],[-1],[-10],[9],[-6],[-9],[-1],[7],[-9],[-2],[3],[8],[-8],[8],[9],[-6],[-5],[-7],[7],[8],[-3],[8],[-5],[2],[5],[4],[6],[4],[2],[-5],[-7],[3],[-8],[-8],[8],[-10],[4],[5],[-1],[3],[10],[4],[9],[9],[7],[2],[5],[-8],[10],[9],[4],[7],[7],[7],[-8],[2],[8],[-6],[-3],[8],[-9],[7],[-10],[8],[-1],[-5],[8],[2],[5],[-3],[-8],[3],[-2],[-4],[-3],[8],[5],[-7],[-8],[-2],[-6],[3],[1],[1],[-5],[-9],[1],[10],[10],[-10],[-8],[-5],[4],[7],[-9],[-1],[8],[-8],[3],[6],[-4],[-2],[6],[6],[-8],[1],[5],[-9],[9],[10],[-5],[-10],[-9],[3],[-8],[10],[6],[4],[-6],[8],[-7],[9],[6],[-2],[2],[-1],[-3],[1],[9],[-3],[-4],[6],[-3],[-2],[3],[2],[-10],[3],[-9],[-10],[-4],[-7],[2],[-10],[3],[-10],[4],[-7],[-8],[-7],[-10],[10],[-2],[-5],[-7],[9],[6],[10],[-5],[10],[2],[4],[-8],[5],[9],[-7],[-1],[-8],[-2],[-3],[8],[10],[-7],[3],[-3],[-9],[-7],[-2],[-4],[-10],[-7],[2],[6],[2],[-3],[-4],[-6],[-6],[-9],[6],[-5],[6],[7],[-4],[-5],[2],[3],[-1],[-3],[4],[-9],[-8],[7],[9],[-4],[7],[-9],[9],[2],[-5],[-10],[-8],[-2],[-2],[3],[1],[-6],[-8],[-3],[-10],[-9],[6],[1],[4],[-9],[-8],[-7],[-3],[-5],[-1],[1],[-2],[-1],[2],[7],[-2],[-1],[6],[4],[-3],[8],[-3],[10],[-3],[-1],[5],[6],[-10],[8],[-2],[-4],[-3],[3],[-6],[9],[1],[3],[-2],[1],[7],[-2],[3],[10],[7],[-3],[-4],[3],[3],[5],[2],[-1],[1],[8],[8],[-3],[-1],[-9],[-10],[-6],[-10],[-6],[-10],[-2],[-5],[-4],[-10],[2],[2],[9],[1],[-9],[6],[7],[-9],[-3],[-3],[-5],[-9],[8],[3],[3],[-1],[-9],[4],[5],[1],[-8],[-1],[2],[-7],[1],[5],[-5],[-3],[10],[-6],[-1],[7],[10],[-9],[7],[-8],[-4],[-9],[1],[3],[-7],[7],[5],[-6],[-8],[-6],[-1],[-9],[4],[-7],[-8],[7],[4],[-8],[3],[-6],[-10],[-4],[-5],[-7],[-3],[1],[6],[7],[10],[3],[9],[-7],[10],[-7],[-7],[-5]], dtype = "int8")#candidate|4221|(390, 1)|const|int8
call_4220 = func_3711_call(relay.reshape(const_4221.astype('int8'), [2, 13, 15]))
call_4222 = func_3711_call(relay.reshape(const_4221.astype('int8'), [2, 13, 15]))
func_3913_call = mod.get_global_var('func_3913')
func_3916_call = mutated_mod.get_global_var('func_3916')
var_4226 = relay.var("var_4226", dtype = "float64", shape = (5, 84))#candidate|4226|(5, 84)|var|float64
const_4227 = relay.const([[3.705799,0.917609,8.855436,-0.340655],[-3.750074,8.908310,-2.771952,3.879421],[9.399586,8.483332,-8.084633,-4.724862],[8.492480,-0.503243,-7.034331,-5.129831],[9.816612,-3.486830,8.845886,-1.569447],[-2.492272,1.771055,5.233795,4.391306],[-1.637136,2.779901,8.339168,0.695342],[8.280326,-1.838048,3.550115,6.858439],[-1.807517,9.656008,-5.894446,6.961493],[4.890727,8.321021,-9.926384,2.010112],[9.372108,8.680112,-6.030550,9.539414],[-6.206137,3.342595,-7.603912,-8.215404],[-9.303514,6.043637,1.903721,-8.161623],[6.221435,7.287436,-7.465918,-8.906843],[2.999391,-7.248664,9.898541,2.413436],[-7.057959,6.076336,5.488957,9.244439],[0.101281,-6.987088,-5.343430,3.354295],[-0.240664,0.826346,2.780487,-5.456348],[2.118455,-7.080702,4.491555,-7.232593],[-4.487935,-6.467507,4.388715,2.870547],[-9.350491,6.624346,-2.317089,3.523482],[6.737454,-0.645931,-8.855407,-5.845987],[1.437706,-0.950402,-6.337184,-1.276085],[-0.546260,1.422678,3.369997,-0.395732],[-3.287210,-2.325188,-8.401478,-6.442468],[-1.157520,-3.143585,8.206538,-5.869369],[4.516975,7.461341,0.390097,-1.123770],[2.001249,9.653245,8.690718,-4.204024],[8.652761,-0.142750,-1.069696,6.150665],[2.736950,-5.343794,-0.421065,-9.943382],[5.194575,-1.509242,1.044339,7.256051],[-8.832268,8.508048,-6.562211,3.662338],[-5.016449,-6.007213,-6.681031,9.181941],[9.307279,5.419052,-3.675944,-8.450602],[3.836967,-8.955068,9.653409,1.650034],[-4.200756,7.836661,3.950983,-1.769254],[1.575319,-3.869668,0.153058,5.099802],[4.818123,-7.915331,-7.865194,-4.540409],[4.078393,8.948677,-8.399893,-3.591923],[9.721621,5.689530,9.045178,0.068773],[-3.173161,-1.367326,7.378693,2.593942],[-7.298038,7.117749,-4.979702,9.786510],[-5.545194,-3.905695,7.626360,-5.875622],[4.451129,7.357844,5.172447,2.582358],[2.779571,9.353541,0.398611,0.587638],[2.712568,2.523338,-4.291814,6.294347],[2.555613,7.015330,8.276449,0.073077],[-1.217597,3.282085,0.839506,1.256097],[-4.415656,-5.010670,4.108690,-1.797467],[-9.946562,-6.891285,-6.210344,4.987091],[-7.153847,-0.933262,-6.339218,-8.733584],[7.837780,3.386543,-1.331252,0.643888],[9.664568,-7.145840,0.041211,4.858289],[-0.178304,7.785661,-8.566845,-6.802665],[7.998765,-0.346154,8.983019,-0.264503],[-6.740023,0.789860,1.200006,6.774912],[-9.385255,0.373697,-8.590266,2.257286],[8.349595,8.853831,-0.539840,-5.959563],[1.762391,6.264076,4.927131,8.110191],[2.581683,-9.447887,2.773039,-3.053506],[6.372127,2.526082,-1.600147,4.716142],[8.227508,4.623800,-9.887012,-9.311798],[-4.748455,-9.569186,2.838667,2.794246],[3.658325,1.779679,-6.580683,-5.322178],[-3.377644,8.167999,3.984932,-9.310122],[-5.459353,-7.451612,4.176135,-1.305143],[-3.268489,7.841857,-6.957573,2.165424],[-0.478342,-8.447982,-6.217445,-4.340113],[-1.226168,4.370604,-7.753414,3.130950],[-4.554849,-6.915706,-3.690744,7.272421],[0.488641,-1.210156,-3.295939,5.763769],[4.799519,4.247245,2.861942,-1.244870],[8.142650,8.687351,4.533185,-2.539379],[-3.030469,8.288342,7.732970,1.742410],[8.160735,-7.284951,3.360152,-1.234075],[6.664402,-9.253541,8.747797,5.279388],[3.156962,9.720699,6.902594,-1.921803],[-0.443977,-3.972063,-3.111658,-8.721124],[4.668338,7.493122,3.458831,9.790133],[0.923787,8.843891,-8.285435,-5.992894],[1.915300,-0.604329,9.185441,-0.265172],[-2.723391,-1.654469,-1.910015,-0.220647],[9.124354,2.366525,8.357917,-6.835677],[-8.667086,-2.328778,-4.390951,-2.946179],[-4.194067,-1.383289,6.680489,5.116320],[4.982510,1.650087,-1.401431,9.008745],[2.609254,-8.509263,-4.565452,-1.905055],[-0.241984,9.297999,6.844566,-1.872516],[4.525612,7.114067,1.447596,-5.097080],[-1.996287,3.753186,-0.114806,5.412729],[7.428541,-3.531793,-5.179953,-5.581000],[5.224491,2.456919,-8.016323,-4.327322],[-6.653138,-8.125275,-3.475901,-8.897862],[-5.055535,-8.692297,-3.139659,3.449065],[1.640238,6.550934,-3.894945,0.837929],[-4.519352,-0.586378,-8.233852,-0.560729],[-4.312582,5.662806,6.375550,-2.498347],[5.201468,-8.525752,-2.460826,0.331552],[-4.642773,0.999911,-8.688636,-9.933111],[8.100406,0.903697,-6.703547,-9.756655],[5.530608,3.496925,0.366691,-8.706710],[-4.949120,-6.869740,-1.901842,2.152016],[9.003610,4.663959,1.602295,-2.992513],[-7.456779,-4.919509,6.512481,-6.423940],[-2.026362,2.242270,3.338419,-2.771760],[4.098227,-7.114470,-8.008307,-9.717755],[-3.427469,-1.953958,2.468850,-3.222858],[-4.950032,-1.570692,6.130812,-8.259734],[4.873804,7.925954,-3.183466,-7.043518],[-7.741963,8.135581,-1.657570,-9.689298],[-5.058915,-5.854110,9.395000,0.388425],[-6.513194,4.275215,-2.739270,0.989226],[-6.554773,-1.555088,9.429243,-8.635948],[2.946363,-8.604116,2.882145,-5.307013],[0.389335,5.503865,8.781711,5.211723],[0.140777,2.306044,-9.738037,8.472614],[1.177007,4.347791,-6.366846,9.892470],[-1.632764,-6.742886,-6.072799,0.415312],[7.286720,4.226317,8.408015,-6.330688],[7.502843,3.121037,2.287870,-5.530843],[-5.371417,1.194006,2.586955,0.196898],[-3.350019,0.256759,-4.418472,7.345266],[-4.173453,9.805623,4.148618,-5.019159],[6.534483,-2.879332,-2.217622,-3.472621],[7.163795,3.434755,-0.061208,-9.320309],[-8.082907,3.787816,-5.133002,5.301926],[5.842769,-4.481307,-2.158112,-2.051828],[-0.452158,-0.256242,9.937912,-0.137272],[-9.333302,-5.741362,-3.082406,-0.125087],[-7.510462,7.446978,-6.236531,7.848520],[6.112875,-6.886861,-3.027659,-3.927903],[6.315104,6.115908,1.326245,2.433422],[-5.695871,-3.267846,-9.232191,6.993773],[-1.671334,9.634624,3.231405,5.688125],[2.983901,4.109815,-1.098364,-0.334117],[-8.543659,-5.298950,8.548746,-2.078072],[8.379240,-3.773245,7.168567,9.114924],[2.381511,-3.442027,8.367034,8.425785],[8.909586,0.417569,-1.755245,8.942203],[1.780810,-7.033882,-4.479961,-4.431873],[4.877071,6.058584,2.735029,9.687668],[-4.864867,2.585574,8.691748,-2.837625],[6.113265,-1.473782,7.149102,2.598051],[1.700026,-4.684082,-3.946671,-0.243519],[7.343390,-6.513396,-6.616832,3.894829],[7.668909,-7.056171,-7.966773,9.900745],[-1.059214,6.421372,0.254700,3.127675],[2.739335,-6.244659,-4.581332,0.426759],[1.262710,-4.534938,8.026237,-7.809635],[0.393127,3.130592,8.895822,7.484841],[-8.750838,3.172129,6.192834,7.693771],[-2.831995,-3.332010,-8.857681,3.974593],[9.651377,9.217696,7.424360,2.420494],[-1.274412,-7.657226,6.167472,-4.534074],[9.442677,-4.406975,-9.858246,6.556195],[1.157750,7.240039,7.538130,1.747015],[2.410256,-6.969398,-0.522775,9.856366],[-7.923801,-0.798775,2.842628,-5.490233],[6.295467,-2.791387,-1.386594,-4.820828],[7.714199,0.481289,-9.430585,-2.480584],[4.877041,6.820759,-3.638380,-6.940667],[-7.780454,3.834799,4.423203,-8.400029],[-6.757979,-5.062371,-0.262693,-3.850377],[9.124676,0.421794,5.464468,2.437354],[-7.524410,-1.526324,5.387560,0.333268],[-8.822008,9.637980,-6.034168,-6.622890],[-1.559626,1.811025,5.176425,0.798382],[1.862646,8.997988,-0.831649,2.476055],[4.478212,6.428419,5.791729,-7.842864],[8.201915,8.862055,-5.416659,-7.149681],[8.679385,4.998914,-0.574425,2.540563],[2.435137,-6.929273,0.973566,-3.581891],[6.300432,0.633336,5.408850,-2.156919],[8.454305,-7.742976,1.012264,0.607039],[9.262241,-9.058249,0.013142,7.693171],[-3.572063,-7.146635,-7.036325,-0.549493],[-9.032179,-0.919007,0.604850,0.799882],[-6.176969,-5.229272,-9.838372,-0.242350],[2.303571,0.454908,-6.088335,5.148983],[-0.845891,-7.741448,0.537217,9.900669],[-4.303956,1.808552,-3.491657,6.240328],[-0.853310,4.354398,9.149241,-8.901788],[-4.082347,7.804937,1.687954,1.817548],[-4.068564,-8.090512,-4.031837,0.054220],[7.017853,-2.628915,2.722312,-9.333099],[-1.740098,4.789171,-8.165328,-9.569284],[8.118567,1.427202,-1.641652,0.126497],[4.479574,-8.430892,8.087709,-5.692051],[-2.659746,-6.760822,-0.745541,-5.856690],[-4.742357,-4.711360,2.512555,4.667759],[-2.074565,7.995598,0.498320,9.437986],[-3.087687,-1.803545,-8.439724,-7.114755],[-7.414534,-1.880082,-2.439432,6.095232],[-7.762558,1.159075,-8.891822,2.722957],[2.449190,2.466073,7.829058,9.965435],[8.051273,1.208426,8.916894,-8.879616],[-4.537135,-9.635349,3.582366,-6.801742],[-9.951653,-8.961156,-3.683598,2.097760],[-9.430946,4.430951,-8.170159,-1.961586],[-3.336679,9.192550,6.741897,8.803878],[-2.450951,-4.594526,8.999733,-4.821043],[-9.292071,-4.541541,-7.450388,6.498761],[1.736133,-1.874128,4.468062,6.539493],[-3.392570,3.094979,-9.882727,5.280776],[5.005144,6.413846,-5.321890,-0.520839],[-9.098758,-4.168883,-5.889738,4.562366],[-3.294017,8.467357,-8.577547,7.112576],[0.892265,5.744706,-8.336468,6.869906],[-8.256957,-8.292885,-2.128046,-9.218613],[-7.957846,1.454642,-9.508242,-8.361473],[-3.927609,-7.135668,-2.826998,9.652466],[9.992561,4.116496,8.399193,1.942131],[8.924328,3.907808,-9.391469,-9.218336],[-8.309131,5.567534,4.827298,0.337535],[-6.354703,-6.678988,0.294206,-6.788903],[-5.283786,-8.427947,-4.967358,-4.988586],[-0.976776,0.536218,9.271717,6.015700],[2.523979,-6.974844,-9.785080,-3.402766],[0.515631,6.777726,-1.324285,9.649868],[8.914346,1.858586,8.538999,-8.258851],[4.556211,-4.347808,8.758614,-5.193033],[7.198181,2.963465,-0.169718,-0.298188],[4.526442,-5.408432,3.925922,-7.614876],[-3.768476,3.168751,8.706169,7.272824],[3.113558,7.930757,3.866655,-6.299065],[-3.185715,-4.785344,3.345190,6.615160],[-4.070807,2.662976,0.529115,-0.073034],[1.358309,-2.347774,4.599554,2.373750],[8.290202,-2.938894,-9.917576,7.776628],[-9.208433,5.483951,-2.884744,-1.913666],[-5.175949,8.007560,-8.902494,0.366080],[4.198759,-7.548853,4.148575,8.203387],[8.917153,6.726693,-4.923227,-9.237464],[-1.676267,0.844092,-9.148280,2.697559],[1.391556,4.500829,0.213257,9.085321],[-8.269357,3.329215,6.743456,-4.193686],[-6.432074,-0.376930,3.607394,-7.727693],[-3.089579,-3.902432,7.846319,3.604500],[-2.939428,-0.706754,-7.456665,-5.801795],[-4.510802,-7.480518,1.451137,-2.262299],[4.842112,-2.131437,1.065349,-9.098520],[-2.626544,5.831300,6.168506,-8.988726],[0.572289,0.116255,-0.120845,-7.797807],[8.195863,-8.580817,0.071800,6.220780],[0.361867,8.422083,-4.703009,-1.807216],[6.376254,-4.634959,6.558393,-4.356043],[-6.023919,-2.337240,-4.003004,2.885197],[6.474394,-6.834165,-7.097608,0.927078],[9.284293,-3.329873,1.612795,6.026744],[-6.790259,8.260443,-0.728053,-1.260942],[8.410952,-5.743922,5.835082,2.472163],[5.049030,-1.351700,4.621840,-8.185508],[-7.634715,-8.408911,1.068606,-0.652847],[-2.399113,6.977365,-9.413910,9.138519],[-1.442994,1.293588,9.825293,0.030080],[-6.268676,-4.963786,0.249253,-2.851415],[7.282170,6.090236,-6.770999,2.533499],[8.709620,-8.582831,-6.248649,0.063064],[5.824012,6.313705,-5.104178,0.344407],[-5.956948,-5.265489,-6.319650,1.057697],[-8.926220,6.206559,3.005448,6.030628],[8.434293,-7.542176,6.788267,9.892281],[-8.014921,4.427856,3.271737,7.508458],[-3.620184,9.681769,-6.403487,-7.873421],[-3.682288,-7.494154,-2.287213,-5.344232],[9.073578,-7.046408,1.568201,2.605137],[-3.118741,-6.460689,0.717098,7.712329],[1.075909,5.622250,9.656664,-5.139292],[7.878897,8.183109,-3.930729,1.934409],[-5.221033,-5.169001,2.103701,3.518457],[-6.020375,7.506988,4.764531,5.758763],[-2.254302,3.813286,1.682320,7.228006],[-0.172056,-3.993289,-4.994049,-9.074949],[3.852003,-0.090219,-1.901332,-6.212148],[2.503069,-6.116916,-2.869538,-3.477034],[-0.040194,4.675353,3.462459,-8.378209],[2.902324,2.787620,2.234224,6.540479],[-2.721583,8.838437,4.305797,-0.047061],[-2.450170,-2.988972,-5.205369,8.931354],[-8.996053,-9.000222,9.167283,8.315804],[-5.395336,-4.481541,-0.094544,-1.457756],[-4.036847,3.868286,-3.653358,-5.760836],[-7.160610,4.139015,7.419606,-4.556071],[8.379792,-3.192973,7.213503,-3.628418],[-3.932660,0.925781,-5.739767,3.361217],[-6.646197,-6.311733,-1.414943,7.588633],[1.307034,-1.795429,3.302506,-7.190467],[5.974129,9.871801,-9.410897,-7.793676],[-8.478662,8.041714,-4.940593,3.909374],[2.249658,1.445340,4.095980,9.310418],[0.019798,8.311357,-3.146077,-7.846297],[-7.852621,-1.332630,2.123220,5.959317],[5.611416,-3.512204,-3.547664,-6.752579],[8.880366,5.772569,-5.109030,-7.897783],[-6.144300,-1.827460,7.935483,0.479345],[-9.737008,6.327401,-5.459525,8.917519],[9.020925,7.592411,-3.845754,-1.154139],[0.794579,-8.748427,-6.862887,-1.410774],[-1.686137,8.221087,2.643442,-4.982040],[-6.405142,1.425368,-7.139516,-6.283752],[-8.811494,1.047824,5.477368,-0.274688],[-1.638599,-5.164881,8.638361,9.452719],[2.388116,-8.346304,5.876213,-5.555400],[-3.976390,3.016039,1.864327,-5.635009],[2.745563,-9.206683,8.822602,-7.685692],[4.605078,-1.032613,4.664552,-3.826704],[-3.101235,7.357941,4.240304,-2.051894],[5.470838,7.959206,4.034438,-3.839323],[7.375185,-9.921909,4.791507,-2.615580],[1.530192,-6.143923,1.914063,-0.963794],[6.134834,0.238562,6.944771,-6.074404],[2.400578,5.208485,7.211630,-0.011349],[-9.875166,-7.725061,0.024507,-3.068922],[4.778495,0.655306,-1.280700,1.755750],[1.878465,-3.902488,-6.110361,2.265758],[-8.141332,-2.709320,-2.007175,4.587007],[2.005667,-6.405597,-7.800312,-2.197134],[3.991605,-5.478188,0.556971,9.295803],[1.869643,4.631107,-3.764046,5.321821],[-7.170424,0.818862,-1.075369,6.534845],[-9.924917,-9.440104,7.711094,-8.070295],[-8.251188,-3.697843,-4.201117,-9.451594],[9.458575,5.067442,-3.134788,3.465937],[8.388677,5.262919,0.724175,7.848571],[6.801876,-5.149882,-6.418568,9.343635],[-6.479702,-0.222391,-0.251495,-8.521742],[7.437535,1.791262,-2.888133,-4.263236],[8.988215,-1.246617,-7.183724,-0.789747],[4.176633,-7.271932,-2.157219,9.744139],[6.056074,3.221575,-7.745742,-3.422477],[-9.410743,-7.192964,-0.955576,-6.246889],[-9.788759,-1.222315,-3.838234,-0.390746],[5.780102,-5.859829,2.918157,-8.167541],[6.393185,-6.162211,6.521190,4.790067],[-2.572920,0.695180,-3.725807,4.639991],[-8.288540,-3.999949,-1.982958,-3.824890],[9.931962,6.794439,-0.622385,-9.829989],[-4.220320,-3.963953,6.622565,2.782547],[9.811256,-6.803726,-6.609023,-1.541420],[5.206920,1.861950,-6.636904,4.980300],[-1.399934,-8.361036,3.743840,3.440791],[3.833328,6.978432,9.681337,-0.682852],[7.561813,0.858127,-5.583889,-2.599645],[-1.816417,-9.059100,-7.742007,-6.611896],[-2.596000,3.271358,8.271466,0.755515],[-0.177390,6.145951,9.984105,-6.222205],[-7.613752,-5.113332,-2.234765,-1.942151],[6.331046,9.117467,6.366497,-4.848587],[-2.142676,9.659864,-9.808193,-1.778412],[7.485293,6.054625,1.230926,-6.517246],[1.539838,3.941775,2.461277,-5.077533],[-8.191376,-2.367350,2.826621,0.166279],[6.133306,-0.132677,-3.862436,-1.537742],[-7.724836,-1.357716,-1.552104,-8.574269],[-2.207715,0.276932,6.241661,-3.430063],[6.558079,6.800595,1.420651,-3.611668],[8.819897,2.784204,2.647939,-6.319448],[4.320059,9.466698,5.470014,3.080056],[9.127428,7.248819,-2.525091,-4.169811],[2.489187,-6.727478,7.449621,3.380629],[6.578742,-1.909663,-2.142412,3.843301],[9.640203,4.603052,-0.503522,-4.774488],[3.080312,-4.627983,3.649904,7.812513],[0.454869,-8.733773,-0.890610,4.758241],[-0.003091,-0.263291,-5.845441,-5.293957],[2.740717,-3.287699,-8.823138,4.500064],[2.122067,5.264634,7.261508,3.584025],[-1.600539,5.346977,7.941258,1.905250],[-0.362093,-4.294672,4.161781,-5.638603],[7.129312,-8.669448,-8.950920,4.270740],[7.791777,-2.391523,-9.107647,9.763241],[4.300159,4.769413,-3.021349,-0.255893],[0.779990,8.013295,2.706218,4.538561],[3.419704,-4.229439,7.123706,0.657255],[-5.356467,1.309465,1.161976,-9.822947],[5.021047,9.028195,-5.022393,-4.931764],[-2.588852,-3.380991,-4.081554,-2.364810],[1.928419,8.300601,7.943624,1.564381],[-4.127846,-4.132525,-3.661842,7.697857],[-9.973331,7.799018,-5.899461,-4.406026],[9.018766,8.692660,-0.732366,5.565332],[-0.506644,2.121313,6.192565,-4.697444],[8.811569,2.625597,2.458227,-5.435245],[5.165381,-3.175623,4.814888,4.299830],[0.783418,-9.820181,-6.601054,5.606814],[-4.467809,-9.780239,2.931158,-3.697864],[7.768326,-9.631689,-7.929967,1.752361],[-7.466747,0.655406,-1.540419,6.953145],[8.037128,-0.629373,9.327454,5.100489],[-8.596614,-8.290186,-6.858474,-9.727925],[-7.301659,-1.891918,1.698199,7.257665],[6.814513,-5.333096,6.688341,8.212914],[4.938218,-6.735046,1.347952,8.822970],[-2.502548,4.054467,-6.216032,-4.617428],[8.745588,8.197994,-0.738122,-5.851690],[3.521433,-3.321614,-1.286386,-1.212193],[4.622790,8.917004,-3.569404,-0.771748],[-7.804943,6.864927,2.762786,7.648213],[-9.599562,-9.974996,7.651397,-0.533239],[2.464572,0.605770,-0.343636,1.973641],[2.560632,-0.617426,9.200933,-6.893639],[-8.177357,-7.189543,8.684160,-4.066282],[-2.060222,5.816305,-0.219106,2.822045],[-7.609089,4.067866,-9.354781,-3.411285],[7.998262,0.913771,1.233889,-1.764297],[4.935442,9.249986,6.311434,-8.330733],[-3.838759,1.981160,8.433860,-2.465155],[-8.232216,-7.848576,4.038735,-8.321390],[4.880129,2.755929,5.687226,-1.231523],[6.625677,4.622547,-7.389752,-7.562595],[0.262921,6.060939,-8.870569,-0.272707],[3.282541,8.915151,7.693397,-8.734916],[6.596956,2.430745,7.948867,5.275821],[-1.201255,4.342712,-3.831074,5.182315],[-0.042629,-3.357976,8.849637,0.831008],[1.477973,1.679943,-3.130859,3.664092],[4.746793,-6.719933,8.244459,1.292608],[-1.001742,-3.298506,7.674308,2.304746],[-9.346656,-2.069460,-8.034859,-3.243068],[7.305729,6.983532,6.749743,3.753454]], dtype = "float64")#candidate|4227|(420, 4)|const|float64
call_4225 = relay.TupleGetItem(func_3913_call(relay.reshape(var_4226.astype('float64'), [4, 15, 7]), relay.reshape(const_4227.astype('float64'), [1680,]), ), 4)
call_4228 = relay.TupleGetItem(func_3916_call(relay.reshape(var_4226.astype('float64'), [4, 15, 7]), relay.reshape(const_4227.astype('float64'), [1680,]), ), 4)
func_3765_call = mod.get_global_var('func_3765')
func_3770_call = mutated_mod.get_global_var('func_3770')
const_4239 = relay.const([[5,8,9,10,-7,8,-8,-1,-7,8,-7,1,-4,-1,-2,-6,1,10,6,-9,-6,8,-9,-5,-6,-6,-8,4,-5,-3,-10,-3,-1,-2,-2,-9,9,2,-8,6,10,6,8,-1,7,-1,1,9,-6,-6,-3,7,-4,-9,6,6,-7,5,2,-10,8,-5,7,10,6,-2,-2,-8,7,-1,-3,10,-9,7,1,-2,1,9,-3,1,-4,6,-1,-2,-4,-5,2,-8,10,-6,-5,3,6,-3,-8,8,-7,-8,1,-1,5,-5,-1,9,8,-4,4,8,9,10,-6,-9,-5,3,9,2,-10,-2,-9,2,-8,2,-4,-1,4,10,2,-4,6,-2,3,-10,2,-4,5,-10,-2,7,7,-9,-1,-2,8,-9,-7,-1,8,3,-5,1,-3,-7,7,1,1,-6,10,-5,-6,-3,9,3,-7,-5,3,6,-1,1,4,4,3,-8,-8,1,1,-8,2,-6,-8,-5,1,7,4,-9,-1,6,1,-8,10,4,7,-2,3,-10,-10,-2,-6,-2,8,-1,-6,-6,2,7,-7,-3,-5,3,-4,-9,-8,7,3,-4,-3,-1,-1,-8,-2,5,8,-4,-3,-10,-2,1,-3,3,8,-6,-10,1,-3,4,-4,5,-7,4,5,-4,5,6,4,4,7,-6,-9,10,-4,9,3,9,-2,7,6,-6,-1,-9,-2,-8,6,-5,10,9,10,-3,2,1,2,-3,3,9,2,8,4,-10,-1,5,10,5,-2,1,10,-9,-1,-1,2,6,-10,5,-2,2,1,3,3,-1,8,-10,5,-3,4,3,-5,-9,3,7,-10,-9,8,2,1,6,-7,-10,-8,1,8,-7,2,6,-1,-3,3,1,3,1,-9,5,-3,-8,-1,-2,-2,-2,6,-2,-2,-7,-4,-4,-6,-2,4,-10,-4,10,9,4,3,-8,5,-4,-2,2,1,-4,3,-1,3,5,-4,-3,-7,6,3,6,1,-5,-3,10,2,-3,10,-3,-9,-2,-3,6,2,-9,4,-2,-9,10,3,8,-6,4,8,10,-6,-10,7,-9,8,3,5,-10,4,8,2,7,-8,-5,-8,6,7,-3,4,3,-1,-5,-4,3,-7,-7,7,-8,-5,-3,-7,-9,9,-7,5,4,-6,2,-5,8,-4,-2,9,7,-10,8,-1,2,-10,-2,8,-9,-6,4,6,5,9,2]], dtype = "int8")#candidate|4239|(1, 448)|const|int8
var_4240 = relay.var("var_4240", dtype = "float64", shape = (270,))#candidate|4240|(270,)|var|float64
call_4238 = relay.TupleGetItem(func_3765_call(relay.reshape(const_4239.astype('int8'), [7, 16, 4]), relay.reshape(const_4239.astype('int8'), [7, 16, 4]), relay.reshape(var_4240.astype('float64'), [270,]), ), 0)
call_4241 = relay.TupleGetItem(func_3770_call(relay.reshape(const_4239.astype('int8'), [7, 16, 4]), relay.reshape(const_4239.astype('int8'), [7, 16, 4]), relay.reshape(var_4240.astype('float64'), [270,]), ), 0)
output = relay.Tuple([bop_4214,call_4220,const_4221,call_4225,var_4226,const_4227,call_4238,const_4239,var_4240,])
output2 = relay.Tuple([bop_4217,call_4222,const_4221,call_4228,var_4226,const_4227,call_4241,const_4239,var_4240,])
func_4247 = relay.Function([var_4213,var_4226,var_4240,], output)
mod['func_4247'] = func_4247
mod = relay.transform.InferType()(mod)
var_4248 = relay.var("var_4248", dtype = "float32", shape = (14, 12, 2))#candidate|4248|(14, 12, 2)|var|float32
var_4249 = relay.var("var_4249", dtype = "float64", shape = (5, 84))#candidate|4249|(5, 84)|var|float64
var_4250 = relay.var("var_4250", dtype = "float64", shape = (270,))#candidate|4250|(270,)|var|float64
output = func_4247(var_4248,var_4249,var_4250,)
func_4251 = relay.Function([var_4248,var_4249,var_4250,], output)
mutated_mod['func_4251'] = func_4251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4273 = relay.var("var_4273", dtype = "float64", shape = (3, 11, 9))#candidate|4273|(3, 11, 9)|var|float64
var_4274 = relay.var("var_4274", dtype = "float64", shape = (3, 11, 9))#candidate|4274|(3, 11, 9)|var|float64
bop_4275 = relay.mod(var_4273.astype('float64'), relay.reshape(var_4274.astype('float64'), relay.shape_of(var_4273))) # shape=(3, 11, 9)
func_1769_call = mod.get_global_var('func_1769')
func_1772_call = mutated_mod.get_global_var('func_1772')
var_4296 = relay.var("var_4296", dtype = "float32", shape = (65, 4))#candidate|4296|(65, 4)|var|float32
call_4295 = func_1769_call(relay.reshape(var_4296.astype('float32'), [4, 13, 5]))
call_4297 = func_1769_call(relay.reshape(var_4296.astype('float32'), [4, 13, 5]))
bop_4303 = relay.left_shift(call_4295.astype('uint32'), relay.reshape(var_4296.astype('uint32'), relay.shape_of(call_4295))) # shape=(4, 13, 5)
bop_4306 = relay.left_shift(call_4297.astype('uint32'), relay.reshape(var_4296.astype('uint32'), relay.shape_of(call_4297))) # shape=(4, 13, 5)
uop_4308 = relay.exp(var_4273.astype('float64')) # shape=(3, 11, 9)
var_4310 = relay.var("var_4310", dtype = "float64", shape = (3, 11, 9))#candidate|4310|(3, 11, 9)|var|float64
bop_4311 = relay.less(uop_4308.astype('bool'), relay.reshape(var_4310.astype('bool'), relay.shape_of(uop_4308))) # shape=(3, 11, 9)
output = relay.Tuple([bop_4275,bop_4303,bop_4311,])
output2 = relay.Tuple([bop_4275,bop_4306,bop_4311,])
func_4335 = relay.Function([var_4273,var_4274,var_4296,var_4310,], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mutated_mod.get_global_var('func_4335')
var_4337 = relay.var("var_4337", dtype = "float64", shape = (3, 11, 9))#candidate|4337|(3, 11, 9)|var|float64
var_4338 = relay.var("var_4338", dtype = "float64", shape = (3, 11, 9))#candidate|4338|(3, 11, 9)|var|float64
var_4339 = relay.var("var_4339", dtype = "float32", shape = (65, 4))#candidate|4339|(65, 4)|var|float32
var_4340 = relay.var("var_4340", dtype = "float64", shape = (3, 11, 9))#candidate|4340|(3, 11, 9)|var|float64
call_4336 = func_4335_call(var_4337,var_4338,var_4339,var_4340,)
output = call_4336
func_4341 = relay.Function([var_4337,var_4338,var_4339,var_4340,], output)
mutated_mod['func_4341'] = func_4341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4394 = relay.var("var_4394", dtype = "float32", shape = (8, 15, 3))#candidate|4394|(8, 15, 3)|var|float32
uop_4395 = relay.asin(var_4394.astype('float32')) # shape=(8, 15, 3)
bop_4400 = relay.floor_mod(uop_4395.astype('float32'), relay.reshape(var_4394.astype('float32'), relay.shape_of(uop_4395))) # shape=(8, 15, 3)
func_703_call = mod.get_global_var('func_703')
func_710_call = mutated_mod.get_global_var('func_710')
const_4409 = relay.const([[-4,-2,-9,-7,-4,-10,9,-7,9,-10,-6,7],[9,-1,-1,-8,9,2,-2,6,-5,1,8,-2],[6,5,6,2,-6,-8,-9,-4,6,-4,-4,-6],[-7,-4,-5,-2,-10,-2,1,-4,8,5,-8,-6]], dtype = "uint8")#candidate|4409|(4, 12)|const|uint8
var_4410 = relay.var("var_4410", dtype = "uint8", shape = (288,))#candidate|4410|(288,)|var|uint8
const_4411 = relay.const([-2,-10,-10,4,9,-6,8,8,6,4,-10,6,9,-5,9,3,1,-10,10,-8,1,-5,10,4,-9,-3,1,-9,3,-3,5,4,1,-8,9,9,-2,10,-8,-5,-3,8,-2,-6,-10,-9,-7,3,-8,-7,7,-8,-10,8,-5,9,-5,-3,1,-4,-10,-5,8,3,7,5,-7,2,1,9,4,3,-2,-8,8,5,-7,-5,8,-2,-1,10,10,-5,-3,7,2,-9,-10,9,-1,8,-5,-6,4,-10,5,-10,2,-5,2,2,-6,10,10,-4,6,-2,6,3,-5,2,5,-4,9,-3,3,-5,-8,5,-6,10,10,4,9,-3,-2,-4,-6,5,-8,-8,-4,10,-10,2,1,-10,6,-6,-3,9,5,-2,2,8,-6,2,9,-1,-6,-7,-5,-9,-2,5,-5,1,-10,1,-2,3,-5,-7,-7,-5,1,2,-10,-6,6,-8,-8,1,3,1,2,1,-10,-4,-9,2,1,-6,4,5,-5,-1,1,-2,-7,-8,-6,-8,9,5,-3,8,10,-6,9,-2,-4,9,8,-10,2,-4,8,5,4,-7,-7,-2,10,9,1,4,-8,-1,-2,-9,-10,3,5,-7,-9,7,-9,5,10,9,-7,7,3,2,-10,2,-4,-9,-6,-9,3,3,6,1,1,-7,10,4,3,-1,-4,4,7,-6,-2,-7,10,6,7,-2,-7,7,-3,3,4,1,-6,-10,10,7,3,-6,-6,-9,-10,-3,1,4,-10,10,-8,6,9,8,-3,3,9,-7,4,9,-10,-10,-4,-3,-1,2,7,5,3,-5,-10,-2,-8,5,-6,7,-9,-5,1,-9,4,-4,-1,-4,6,-3,-6,3,-4,7,5,6,-10,10,2,6,3,6,2,-8,-9,-3,4,10,-6,-7,-2,-8,-7,-4,8,-4,1,-4,-10,-9,3,-6,10,4,5,-9,-8,9,-3,-4,-2,-3,10,6,-10,-1,-9,-10,4,-4,-9,6,-10,-5,-8,6,-9,5,-6,1,9,9,-8,-6,-6,1,-3,-5,4,8,8,5,2,-9,2,6,-10,1,5,10,10,-9,2,8,1,-9,-9,-6,-4,-1,3,-2,-4,4,-10,3,8,5,-3,6,-8,-2,-9,7,-3,2,8,2,-6,-1,3,-8,-5,10,7,-3,3,3,-6,-5,-1,-9,-10,-10,9,5,-9,-2,-8,-4,2,-2,-5,-7,7,3,1,-8,-3,7,4,-4,5,-7,2,-9,-1,9,8,-8,-10,-5,-3,1,-3,-9,-2,-8,-3,-9,-8,-9,-9,-6,4,4,-7,4,1,-5,4,1,-9,3,6,6,2,5,-6,10,9,4,2,3,3,-10,-3,3,4,5,9,5,1,-3,-5,6,9,-7,8,-6,9,8,-1,-8,-6,-4,-6,-6,-1,3,4,-7,7,-3,3,6,9,7,-4,2,8,6,-5,3,3,-9,3,-1,-9,7,-8,-5,8,5,-7,-3,5,8,-2,-5,7,4,-9,2,1,-1,4,-6,-9,6,9,10,-7,-3,1,5,-1,8,6,-9,1,8,9,-2,2,-4,-5,5,3,4,6,-2,10,7,1,-7,-8,-10,6,3,9,-10,-2,-8,-5,-8,2,7,9,-2,-10,5,-1,-4,6,-6,7,-9,3,3,-10,8,-1,7,-1,-2,-7,8,1,-6,1,4,-8,-4,-10,8,8,-3,-4,-8,-1,-3,-7,-6,-5,7,-4,4,4,2,5,-6,-9,1,-1,-6,9,-1,-4,-7,1,5,-5,-7,6,-2,1,-5,9,2,5,4,-9,10,-2,-2,-1,8,7,2,5,4,4,-8,5,4,-10,-4,5,-2,-3,2,3,-9,-5,4,6,8,9,-2,-8,4,9,6,-2,-1,-7,8,-2,10,7,-9,-4,-3,-5,-5,3,8,7,-6,-6,-5,-9,-1,-9,10,5,-9,6,-1,-6,3,-6,-3,-7,-4,-5,4,-2,-7,-7,5,6,-10,5,-3,-8,10,7,10,2,7,-3,-1,7,3,5,-8,3,3,-9,-7,-5,4,-10,-8,-8,-10,-7,3,-9,9,-6,6,5,5,8,-5,-1,-6,5,3,-10,-4,4,-2,6,8,10,-1,-3,-3,10,-3,8,4,-3,5,-2,2,-8,2,8,6,-5,-5,5,1,-7,-8,6,-6,-3,-4,-2,2,1,-4,3,8,-6,6,10,-9,-4,2,3,8,-3,-10,7,4,5,8,9,5,9,-9,1,-6,8,-4,7,4,4,-4,-5,10,8,9,-4,-3,8,-1,-3,-5,-6,10,10,-3,10,-9,8,9,9,-5,2,5,-3,10,-5,5,-5,5,10,2,-7,-9,10,5,3,2,10,-7,4,-7,6,8,-8,7,-5,2,-9,9,8,-1,-3,-8,8,6,-7,-9,-6,4,-4,-3,-1,-10,-5,-4,-2,6,5,10,3,5,2,5,-3,-3,-2,-3,-3,-7,-2,3,-5,-1,7,6,-7,10,-7,7,-3,-6,-9,10,-3,-2,8,-1,6,-3,-3,-1,-10,-2,-5,8,1,3,-6,-2,9,-6,-9,10,-8,8,-2,2,1,10,4,4,-3,-5,-9,7,-1,5,-9,7,7,-9,-6,2,6,3,-1,3,-3,10,7,2,-2,10,-3,9,4,-9,-10,8,-5,5,-8,-10,9,7,-9,4,7,3,4,-9,3,-1,-3,8,-9,-3,-1,2,-3,4,7,5,5,-5,3,7,6,-6,6,6,-7,4,2,-8,4,-8,1,4,-3,-4,3,-10,-9,7,-2,-3,-9,-5,-5,-7,4,-10,9,2,3,8,-7,-6,-5,-2,-5,6,-3,7,5,-5,-7,5,-10,-10,2,10,4,-6,8,-8,2,-7,4,-3,7,-7,4,2,10,5,-8,1,-3,-5,-4,4,-6,1,6,-8,-1,-7,8,8,-1,-9,-10,-3,7,3,-10,9,1,-3,-5,2,-7,-2,-8,4,-3,-8,-3,-7,-8,4,-9,-1,7,9,-8,-10,10,9,-2,7,6,-10,6,-1,-8,-2,2,-1,-9,10,3,-2,2,3,6,1,7,3,9,-8,1,-7,-5,-1,-1,2,9,-7,7,4,9,-5,9,10,2,-6,-9,-7,1,9,-6,-6,-6,7,2,-7,9,7,-10,5,-6,6,-5,-2,-8,8,3,-3,6,4,-1,1,5,-7,7,-6,2,2,4,4,4,-7,8,10,10,-4,-7,1,2,-4,10,6,3,-9,-2,8,-7,-5,-7,-8,10,-9,6,-6,10,1,-1,1,-5,-10,5,2,-5,4,-3,10,-8,-10,-9,-5,6,8,-3,1,1,-4,1,6,-5,9,-7,-1,8,-9,8,7,-2,-3,-3,-4,8,-9,-3,5,7,6,-3,-9,10,1,4,6,-10,-2,5,-7,3,2,-5,4,2,-8,-10,-7,4,10,3,-5,-5,8,-2,-5,-5,1,-5,-1,-6,2,-5,6,-7,9,-4,-7,-1,1,3,6,-2,-7,-1,-5,-7,-3,-8,-2,-9,8,-5,-4,-9,-8,8,10,3,8,6,-3,10,5,-8,4,-8,-3,-5,-7,-10,9,-1,2,8,9,5,9,1,5,3,-7,10,-3,-6,1,7,6,3,-3,-9,-7,6,10,-1,7,2,2,5,-9,8,-9,-4,-3,2,-9,8,-5,-1,-2,-10,4,-6,-6,-4,3,6,4,-6,8,3,-9,1,-7,-9,-5,-9,-2,9,-7,-4,-4,-2,-2,-7,4,-6,-1,9,1,7,6,7,3,6,9,-10,-2,-1,-9,-3,-8,-10,-7,-9,6,6,-5,9,-1,8,9,-2,10,-3,6,4,6,5,2,2,1,9,3,4,7,3,-1,4,2,10,5,2,-9,-5,-2,-6,-6,-10,3,10,-7,-3,-10,8,6,8,4,-1,8,4,4,4,5,7,-8,-7,2,3,-10,-5,-1,-6,-4,9,-4,1,-3,7,9,-5,3,-3,-3,-10,-7,9,-8,6,1,-4,-8,-2,10,-6,-5,5,2,-4,4,10,-9,-1,4,-10,3,-2,1,-10,5,-9,7,-8,-3,6,8,-1,4,7,1,5,-5,3,-8,8,-10,-4,4,6,6,-7,9,-3,-1,-3,10,-4,-2,3,-1,5,-8,8,1,-9,7,3,-3,-3,9,-5,-3,-3,8,-6,7,-10,-2,-6,4,10,-1,-1,9,9,9,6,6,8,-7,5,-8,8,-5,3,-2,-3,7,-9,6,-6,-5,7,-6,-5,9,-9,-7,9,3,-1,8,-8,-8,3,7,10,-4,3,-2,-2,-8,-2,-8,-7,2,6,4,4,2,-5,-9,-1,2,2,4,-8,5,-9,10,3,-4,1,6,-9,7,9,10,8,6,9,3,4,7,10,9,-9,-4,-2,-10,-1,6,-10,2,10,7,9,5,8,5,9,-1,9,-1,-8,-2,7,-8,6,-6,-7,-4,-4,10,-4,10,-10,-4,-10,8,7,4,-9,2,2,2,2,8,8,10,4,5,-4,-1,-3,10,-2,-5,-9,-6,6,4,5,-6,1,-5,7,-9,9,5,10,4,-4,-2,-6,5,6,2,3,-6,-5,1,9,4,9,-9,-7,-10,-2,3,1,-3,-9,-2,-2,-1,7,10,-2,-3,-6,-2,7,-3,4,-10,5,-6,8,-9,6,9,3,-1,-6,6,9,6,-1,9,-4,-2,2,-3,8,1,5,-7,-1,-1,-5,8,6,3,2,3,-1,-5,7,-3,4,-8,4,-5,-6,-2,7,6,-4,1,1,2,-10,-4,8,1,1,-1,7,-2,6,5,-3,-5,1,5,-1,-1], dtype = "uint32")#candidate|4411|(1800,)|const|uint32
const_4412 = relay.const([-5.654477,-3.787110,3.205520,-9.642452,5.770927,0.004870,-4.135083,7.092338,3.308743,-0.872094,4.839112,-7.667543,6.411177,9.206234,-5.836023,9.758262,5.536692,-0.832259,-7.401199,5.694831,-6.281928,7.555024,8.148339,-4.731902,3.738930,3.119759,3.228488,-9.332137,-7.465522,0.668015,-4.760463,0.606893,-9.188340,-4.397394,3.918070,-4.085100,-0.621999,-8.468012,-9.232854,-8.886180,-6.615086,9.457933,3.317455,-9.887017,9.824747,-6.897250,1.238349,5.103584,-7.506062,-3.369238,8.139903,6.278133,-4.954835,4.377064,-0.168595,8.243451,6.537730,-1.932329,-8.583307,-3.709871,-5.828405,5.065214,9.110221,6.592904,-3.861103,3.288183,8.011099,0.725490,-9.903700,-7.510879,9.101259,5.514286,-6.738093,4.332681,1.310425,-6.704368,1.565414,9.106605,-3.763654,-9.090499,-1.798459,-7.786743,-2.829565,-2.215774,-0.032774,5.709189,-6.748027,-3.086719,-6.777362,5.724515,-7.177324,5.810566,4.917527,-1.873075,4.922719,-4.937092,-4.088080,4.051134,-8.368575,2.332667,3.830310,-7.057816,-3.833114,-5.314662,9.593758,-4.272684,-6.708248,4.142272,-2.729525,4.154473,-0.411939,9.651734,7.093946,1.338546,-0.282509,-0.568862,1.938459,7.218849,-6.349993,-0.211340,6.185894,7.749371,-0.545249,5.271872,-3.109135,-1.477606,-3.133084,2.087565,9.529376,-2.897256,1.823287,2.214206,8.928943,-3.576439,-2.849612,3.020948,0.046788,5.628626,2.842982,-7.929401,-1.813760,-1.914321,6.512618,-0.170487,-6.027639,-3.690944,6.422418,-1.681664,3.326284,-8.518984], dtype = "float64")#candidate|4412|(150,)|const|float64
call_4408 = relay.TupleGetItem(func_703_call(relay.reshape(const_4409.astype('uint8'), [1, 16, 3]), relay.reshape(var_4410.astype('uint8'), [6, 16, 3]), relay.reshape(var_4410.astype('bool'), [6, 16, 3]), relay.reshape(const_4411.astype('uint32'), [1800,]), relay.reshape(const_4412.astype('float64'), [1, 150]), ), 1)
call_4413 = relay.TupleGetItem(func_710_call(relay.reshape(const_4409.astype('uint8'), [1, 16, 3]), relay.reshape(var_4410.astype('uint8'), [6, 16, 3]), relay.reshape(var_4410.astype('bool'), [6, 16, 3]), relay.reshape(const_4411.astype('uint32'), [1800,]), relay.reshape(const_4412.astype('float64'), [1, 150]), ), 1)
uop_4417 = relay.cosh(bop_4400.astype('float64')) # shape=(8, 15, 3)
func_2210_call = mod.get_global_var('func_2210')
func_2215_call = mutated_mod.get_global_var('func_2215')
const_4420 = relay.const([[6.522866,4.912392,-2.457084,-6.899789,-0.294839,9.074034,2.625519,-7.626739,-1.834186,-2.716707,5.481886,9.290004],[-4.638007,-8.655616,-2.553271,3.744456,2.520230,8.109505,-7.865206,8.330421,2.008655,-0.629507,-3.703252,-9.827109],[-5.358613,-9.071012,7.078536,-4.069455,-0.328097,-0.985095,-5.696097,-0.699294,0.802845,7.373326,-5.928436,-9.855292],[-4.450308,-3.530685,1.707872,6.198621,3.757520,-3.034132,-1.715840,9.334059,3.774491,1.692050,9.680624,1.110073],[8.030380,-6.268076,5.158450,3.569940,1.058351,-8.290917,-3.771982,8.194886,1.722478,-8.073927,-8.156342,-4.035898],[-2.737180,7.780662,-0.228196,-9.266896,6.035009,9.633811,7.981536,-6.686213,-6.860804,0.537250,3.010000,-4.317953],[-5.671561,-8.879049,-8.716378,-5.967090,-1.492931,-1.165049,-2.970638,-6.005086,2.456560,8.100229,-7.398166,-8.384887],[-8.310279,2.628732,-6.153718,1.773816,-3.517007,2.994456,-4.514506,3.547936,3.509408,7.373831,-2.082765,2.489261],[3.443358,-3.227714,2.391109,-2.681736,5.244343,8.666619,-5.138868,-4.307317,-5.415113,4.228025,-5.577052,6.920018],[0.235115,9.706177,-5.496744,7.554117,7.515721,6.909519,-7.777622,4.790409,5.753615,5.997374,1.577136,-2.809866],[4.095013,-0.696910,0.800014,6.676581,3.818633,-2.082826,-9.180659,4.807081,-4.474561,-1.941316,1.109119,-1.722944],[-6.135963,-8.201422,2.404130,2.776456,-0.865767,-5.108484,3.601515,-6.836836,9.560193,-9.315940,7.570940,7.134456],[-7.017500,-6.621826,8.076665,-2.049243,0.794143,6.711905,7.968033,1.865093,0.494909,0.555149,-7.918141,5.720141],[7.992616,5.185241,9.670859,-3.362278,-7.124322,3.513872,0.745649,7.719605,-3.169643,8.065598,3.186528,-8.876915],[2.317424,9.171187,0.460665,0.370056,-0.622345,0.679467,8.629539,5.277412,0.563061,-2.980424,-1.622395,1.124143],[-9.586204,-6.285978,1.547507,-3.467878,4.656013,-1.866295,-2.966183,5.766392,-0.624561,6.445659,-8.235143,2.158966],[5.084323,-3.524409,6.237306,4.601120,-9.525774,0.051616,-5.674735,-3.991826,7.555899,-9.485444,-0.379178,-0.578852],[1.628524,5.975875,-1.801726,7.401793,-1.431713,8.645430,8.183353,0.769266,4.598727,9.078493,3.569257,4.920388],[4.997909,-1.310638,9.965382,-0.921375,-0.172265,-4.195937,7.749118,7.915293,3.914616,0.678345,8.287936,-7.132002],[-7.113462,-8.277917,-0.191244,-7.024678,0.547152,3.148728,-2.181154,4.898135,8.039652,9.424792,4.104535,-3.271605],[-8.593477,8.724966,6.198776,-1.560788,-0.015872,4.570550,-4.374534,-4.857274,-6.883892,-2.061436,0.488704,-7.014676],[7.167422,4.657209,-3.193146,7.150830,-9.468613,-0.311940,-7.880145,5.385182,3.804273,4.438128,-7.236840,4.190265],[-0.846626,8.359721,-1.771015,-9.367751,-1.430215,-2.143179,-8.441843,9.654039,1.299762,-0.770766,-7.069656,-4.412975],[-5.518857,0.126836,8.697452,9.505667,-8.350417,7.773014,-0.729942,-6.013643,-7.609413,6.538101,-2.402639,5.455878],[-2.015670,8.994313,8.878692,-7.158452,-9.588605,-7.603174,1.219410,8.371020,4.609828,-9.817174,-9.380490,-5.760630],[9.247967,7.147116,-1.073048,1.944382,-0.749118,5.808862,-0.280827,4.376517,7.922891,-3.264112,-8.615652,-1.149366],[0.898173,4.625392,1.916495,-6.790504,-8.196023,-0.405595,-3.669645,1.811281,-7.567944,-3.410560,3.307159,2.821535],[6.215618,7.626165,8.047520,2.512097,-1.560163,3.758333,-0.114965,-0.151940,5.816464,2.706410,2.604724,9.627840],[7.982371,-0.216072,4.677425,9.156935,-2.505558,-3.250059,-4.692144,-3.904058,2.058330,-2.751026,5.643302,-7.598332],[0.640169,-0.211055,-4.134601,5.944123,8.030039,-0.096883,9.850712,4.449188,-9.848934,-3.116754,-6.388403,1.901577],[-2.551584,4.329887,5.208319,-2.114907,-1.270086,2.613790,-3.690998,-0.524004,-9.837081,7.507998,1.311685,3.338866],[-5.352235,-5.431043,-3.486542,-2.546139,-5.246085,-4.357163,5.119273,-8.723071,0.927357,2.265857,-5.072071,9.696878],[-2.550136,8.070769,-0.296234,-7.514218,-0.418144,2.736091,-8.410367,6.875379,0.495253,-8.374645,-2.300781,-0.557212],[-6.805392,-3.204376,-0.526994,-5.241494,-9.487958,-0.895085,-2.476315,4.071356,1.000455,-6.320380,6.560734,-5.355163],[1.260677,3.357604,-8.095679,-5.957651,0.246439,1.836670,-0.357884,6.576488,3.344107,6.637450,-0.015198,-0.513306],[7.219407,1.489184,-6.644713,-7.221315,2.317098,-1.324054,0.833596,-0.041089,3.514836,-7.239230,9.914749,-3.509999]], dtype = "float64")#candidate|4420|(36, 12)|const|float64
call_4419 = relay.TupleGetItem(func_2210_call(relay.reshape(const_4420.astype('float64'), [12, 4, 9]), relay.reshape(const_4409.astype('uint8'), [48, 1]), relay.reshape(var_4410.astype('uint8'), [288,]), relay.reshape(call_4408.astype('float64'), [150,]), ), 1)
call_4421 = relay.TupleGetItem(func_2215_call(relay.reshape(const_4420.astype('float64'), [12, 4, 9]), relay.reshape(const_4409.astype('uint8'), [48, 1]), relay.reshape(var_4410.astype('uint8'), [288,]), relay.reshape(call_4408.astype('float64'), [150,]), ), 1)
output = relay.Tuple([call_4408,const_4409,var_4410,const_4411,const_4412,uop_4417,call_4419,const_4420,])
output2 = relay.Tuple([call_4413,const_4409,var_4410,const_4411,const_4412,uop_4417,call_4421,const_4420,])
func_4422 = relay.Function([var_4394,var_4410,], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
var_4423 = relay.var("var_4423", dtype = "float32", shape = (8, 15, 3))#candidate|4423|(8, 15, 3)|var|float32
var_4424 = relay.var("var_4424", dtype = "uint8", shape = (288,))#candidate|4424|(288,)|var|uint8
output = func_4422(var_4423,var_4424,)
func_4425 = relay.Function([var_4423,var_4424,], output)
mutated_mod['func_4425'] = func_4425
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4449 = relay.const([[[7,5,9,-10,1,-9,-5,3,-2,-7],[-3,-3,10,-6,8,-8,-4,-6,8,-1],[2,-8,-10,-4,1,-3,6,-7,-10,3],[-9,-10,5,-5,-4,1,-10,-4,-8,-3],[4,5,-2,4,-7,9,-9,10,6,4]],[[4,7,4,4,-4,3,3,-5,10,6],[-6,3,3,-9,9,-9,1,-8,-9,-7],[9,10,7,8,5,-5,6,-8,1,8],[-1,4,-4,6,-5,6,-2,10,2,-7],[10,7,9,-7,-3,8,-1,-5,-7,8]],[[-4,7,-3,-5,5,-9,5,-2,-3,3],[-5,7,5,1,-3,-3,-5,2,9,2],[-1,-10,-9,1,5,-8,-4,4,-7,1],[-8,-8,7,3,-9,-2,8,-9,8,8],[1,-4,1,6,5,-9,-4,-7,8,10]],[[5,-10,-8,9,-8,-9,-3,5,1,3],[1,-10,-2,9,-9,7,-1,-8,-5,-4],[5,1,-8,-3,8,-6,9,-5,5,1],[2,-9,-7,1,5,5,1,-8,-2,10],[9,10,-4,-1,8,-4,-1,3,-1,10]],[[-2,-3,-8,-3,-6,-10,-9,-4,-5,1],[-8,6,-7,5,-5,-1,9,1,-7,-10],[9,7,-10,8,-6,1,-1,3,-5,-3],[5,-9,-10,-2,9,1,1,4,8,9],[1,8,-6,-2,-9,-5,-9,-9,-7,7]],[[2,-3,-3,-6,-3,5,-4,7,-3,-5],[4,-9,4,-1,8,8,3,2,-10,-8],[-5,6,9,-1,2,7,6,6,-3,-1],[-6,-10,10,-8,-2,3,1,-9,5,-5],[8,1,-9,3,6,2,1,-3,-5,3]]], dtype = "int64")#candidate|4449|(6, 5, 10)|const|int64
const_4450 = relay.const([[[8,-10,5,2,5,6,-9,7,3,4],[-10,-7,10,-6,-3,-8,10,-9,-1,5],[-1,5,8,-7,-9,-6,8,9,5,8],[-10,-9,8,9,9,5,-3,-9,-2,3],[-7,-10,4,-5,-7,-7,3,1,-3,9]],[[2,-3,-6,-7,1,10,9,-7,1,4],[-4,9,6,-7,8,-5,1,7,-4,-6],[4,-5,5,-8,3,-6,-2,2,-5,-10],[-8,5,-3,-9,-7,-4,-10,-6,10,-3],[7,-9,6,-10,2,-6,-3,2,-5,6]],[[5,-5,-8,9,-6,-10,4,3,-3,-3],[-2,-7,-9,-2,-9,6,-8,-8,3,-4],[-2,1,6,-7,8,-5,-10,3,3,-4],[6,6,-1,10,-2,3,9,-1,10,5],[10,6,6,9,-9,-4,3,8,-2,9]],[[3,9,6,8,-10,3,6,-9,-3,2],[1,6,5,9,-4,-3,-10,10,2,3],[-2,-3,-10,-1,-3,2,10,-10,-3,2],[9,6,-10,7,-6,-6,-9,-7,1,1],[-2,10,2,-4,-10,4,-4,1,7,-5]],[[-8,-1,8,-7,7,-5,-10,10,-6,7],[-5,-7,1,10,-4,3,4,1,4,-4],[-4,2,3,-6,-8,-7,3,-1,-2,4],[-6,7,3,-3,-6,7,-8,-5,-1,-2],[-5,-4,-2,5,-6,9,-8,-1,8,7]],[[2,5,-3,1,-3,-4,3,-7,3,-9],[10,10,-6,-8,-4,8,9,8,-6,-5],[-1,7,7,8,-5,10,7,-3,8,9],[8,-1,-3,-6,-5,7,-10,-1,8,8],[8,-9,7,-10,-5,10,-8,-8,-8,-1]]], dtype = "int64")#candidate|4450|(6, 5, 10)|const|int64
bop_4451 = relay.add(const_4449.astype('int64'), relay.reshape(const_4450.astype('int64'), relay.shape_of(const_4449))) # shape=(6, 5, 10)
func_4175_call = mod.get_global_var('func_4175')
func_4182_call = mutated_mod.get_global_var('func_4182')
var_4474 = relay.var("var_4474", dtype = "uint8", shape = (14,))#candidate|4474|(14,)|var|uint8
var_4475 = relay.var("var_4475", dtype = "int8", shape = (390,))#candidate|4475|(390,)|var|int8
const_4476 = relay.const([-8,3,-4,4,-3,2,-10,8,1,1,9,4,-3,1,-2,1,-7,-9,-5,7,-10,4,6,-4,-1,-8,-10,4,-1,-5,5,2,-2,5,7,-5,-10,9,-4,5,-7,-8,5,10,-8,10,1,-7], dtype = "uint8")#candidate|4476|(48,)|const|uint8
var_4477 = relay.var("var_4477", dtype = "uint8", shape = (288,))#candidate|4477|(288,)|var|uint8
var_4478 = relay.var("var_4478", dtype = "float32", shape = (1716,))#candidate|4478|(1716,)|var|float32
call_4473 = relay.TupleGetItem(func_4175_call(relay.reshape(var_4474.astype('uint8'), [1, 14]), relay.reshape(var_4475.astype('int8'), [390,]), relay.reshape(const_4476.astype('uint8'), [48,]), relay.reshape(var_4477.astype('uint8'), [288,]), relay.reshape(var_4478.astype('float32'), [1716,]), ), 12)
call_4479 = relay.TupleGetItem(func_4182_call(relay.reshape(var_4474.astype('uint8'), [1, 14]), relay.reshape(var_4475.astype('int8'), [390,]), relay.reshape(const_4476.astype('uint8'), [48,]), relay.reshape(var_4477.astype('uint8'), [288,]), relay.reshape(var_4478.astype('float32'), [1716,]), ), 12)
func_3574_call = mod.get_global_var('func_3574')
func_3576_call = mutated_mod.get_global_var('func_3576')
var_4492 = relay.var("var_4492", dtype = "float32", shape = (55,))#candidate|4492|(55,)|var|float32
call_4491 = relay.TupleGetItem(func_3574_call(relay.reshape(var_4492.astype('float32'), [1, 5, 11])), 0)
call_4493 = relay.TupleGetItem(func_3576_call(relay.reshape(var_4492.astype('float32'), [1, 5, 11])), 0)
output = relay.Tuple([bop_4451,call_4473,var_4474,var_4475,const_4476,var_4477,var_4478,call_4491,var_4492,])
output2 = relay.Tuple([bop_4451,call_4479,var_4474,var_4475,const_4476,var_4477,var_4478,call_4493,var_4492,])
func_4497 = relay.Function([var_4474,var_4475,var_4477,var_4478,var_4492,], output)
mod['func_4497'] = func_4497
mod = relay.transform.InferType()(mod)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4497_call = mutated_mod.get_global_var('func_4497')
var_4499 = relay.var("var_4499", dtype = "uint8", shape = (14,))#candidate|4499|(14,)|var|uint8
var_4500 = relay.var("var_4500", dtype = "int8", shape = (390,))#candidate|4500|(390,)|var|int8
var_4501 = relay.var("var_4501", dtype = "uint8", shape = (288,))#candidate|4501|(288,)|var|uint8
var_4502 = relay.var("var_4502", dtype = "float32", shape = (1716,))#candidate|4502|(1716,)|var|float32
var_4503 = relay.var("var_4503", dtype = "float32", shape = (55,))#candidate|4503|(55,)|var|float32
call_4498 = func_4497_call(var_4499,var_4500,var_4501,var_4502,var_4503,)
output = call_4498
func_4504 = relay.Function([var_4499,var_4500,var_4501,var_4502,var_4503,], output)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4543 = relay.TupleGetItem(func_3981_call(), 0)
call_4544 = relay.TupleGetItem(func_3983_call(), 0)
func_2899_call = mod.get_global_var('func_2899')
func_2911_call = mutated_mod.get_global_var('func_2911')
var_4557 = relay.var("var_4557", dtype = "bool", shape = (30, 70))#candidate|4557|(30, 70)|var|bool
const_4558 = relay.const([-1,-8,4,1,-3,-1,4,1,-5,-6,3,-4,10,-5,6,-4,-10,9,-4,-3,-7,-3,2,-9,-6,-10,10,2,-10,4,-1,-5,3,-7,8,7,4,-8,-3,-5,-5,9,-3,-3,10,-10,-10,-3], dtype = "uint8")#candidate|4558|(48,)|const|uint8
const_4559 = relay.const([-3,2,4,-9,4,3,-2,-6,-2,-4,1,6,4,-6,-8,-9,-8,2,-6,-6,2,10,6,5,-5,4,-2,9,6,-4,-4,7,5,4,8,-2,9,-6,-7,4,-1,-2,-9,-10,-8,-9,-9,-6,4,6,4,-6,-7,10,3,-6,4,-7,10,-10,-2,-3,-5,-5,-3,-5,-6,-9,-3,-7,-5,-3,2,4,9,-2,-2,2,-6,-8,-8,5,4,-7,3,3,8,6,6,-3,3,6,10,3,-4,4,-2,8,-1,2,10,3,-9,-1,1,10,9,9,3,-5,1,-3,-8,-10,5,-4,-7,-4,-8,-3,-8,10,8,-9,1,2,-5,6,5,4,-8,-4,7,-3,-4,3,9,1,5,10,4,-8,6,-2,-10,10,7,4,3,-9,2,-1,5,8,-10,6,2,-2,-7,-9,1,4,-5,-1,6,7,2,-8,-10,7,-7,-5,-6,-7,-1,10,6,-9,-4,9,-10,7,4,1,2,-3,10,9,-5,10,5,-8,-6,3,-9,10,-1,-3,2,9,1,-6,2,-8,-2,-2,8,7,9,4,4,-9,-2,-10,-6,2,-2,10,-2,10,-7,-2,-2,-9,-10,-9,8,9,-2,-6,-9,8,7,-7,8,-4,2,10,-4,7,3,-6,5,2,-4,6,7,5,3,2,9,-6,1,-5,6,-6,-9,3,10,1,-6,-5,2,8,2,-7,-7,4,-9,-2,2,-6,-2,4,6,6,-4,-4,3,-2,-1,9,-9,5,-3,-5,-5,-5], dtype = "uint8")#candidate|4559|(288,)|const|uint8
const_4560 = relay.const([6.513102,8.041631,1.068740,-1.615281,8.186904,-0.374884,8.502683,4.277658,5.613112,5.300822,2.063228,-2.557167,-8.247821,-2.012558,7.186194,2.177511,-2.712442,-8.393738,-3.189174,0.857138,-2.870161,1.859496,-9.970219,-1.286433,-4.107181,-9.235142,7.816345,5.218231,-1.175315,-0.148316,1.816487,-7.805532,-9.322042,5.430364,3.432358,-1.995991,-3.986393,4.363501,-9.832377,8.486458,-6.031766,8.275310,-9.509322,7.941429,-7.373300,3.636960,1.560524,6.626737,-5.802283,4.017394,1.727547,7.799149,5.013226,8.549399,5.459672,-9.220406,-4.503377,8.388135,-0.073370,7.117893,-4.254948,-4.124555,-2.331520,4.164415,-3.354585,-2.774499,0.309055,-7.118085,9.838793,-7.107985,-5.758813,-3.511513,-9.573946,4.730753,-0.424328,5.474303,5.863904,5.603134,-5.586565,-4.531885,1.113109,-8.385376,0.733848,7.021952,-1.197514,0.670832,-8.843588,-9.498900,4.202565,-6.661410,-0.504583,8.239516,3.448285,-7.230617,6.115009,2.162646,4.098237,1.870121,-3.292364,6.475569,1.341028,6.526947,-9.914717,-9.356615,5.858684,-9.050238,4.268009,-1.501326,-6.390156,-4.177119,8.883679,-9.874444,3.049177,7.195564,-1.622263,8.843267,3.711473,0.916048,-2.098212,-5.366471,-5.246029,7.804946,-2.479126,1.248195,-3.616846,-6.626108,8.243902,7.894781,8.709242,-3.972702,6.410284,9.018797,-3.576520,3.701827,-8.124302,-7.450000,-7.857345,-7.242421,1.573274,9.693294,3.219818,-7.195202,-8.273043,-2.537069,-7.968797,4.690693,-1.881383,0.745373,7.045176,8.208380,-6.450948,6.489250,2.703041,5.357617,0.293235,8.675598,-9.250146,2.632921,9.981492,-0.541984,-5.943710,7.567750,-1.480368,2.877380,7.500860,-4.941434,-0.379658,-8.401016,1.119123,5.057475,-0.432416,-4.523362,-4.995535,7.165032,6.418776,5.696261,7.297919,-3.673221,4.740103,-9.191948,-4.633062,-3.075690,-3.696083,-9.873435,-6.502223,-5.543786,-3.297295,-4.310187,-7.287210,-4.657793,9.481870,9.352823,1.294132,2.646368,8.715939,1.002077,-9.793040,-1.102156,5.981019,-8.826182,-9.539700,-9.263114,8.119022,8.099899,3.405015,8.227428,-8.736060,9.824174,-7.288937,-9.869326,-7.913810,7.624920,-4.660279,0.966228,8.122269,3.297351,-8.936639,-8.150393,-1.812053,4.807766,-9.455381,0.489561,6.199204,-2.146318,9.669242,6.356420,-7.559908,-8.681223,7.733675,-4.470909,8.309324,-2.671013,-7.037412,-9.045313,7.737844,-9.170782,-3.909534,-8.679387,-9.734082,-5.818641,8.253154,-9.047997,-6.258920,-2.443633,-0.593707,-0.044701,8.392352,-5.400868,-9.845552,-6.622118,-0.209280,3.977646,-2.343622,4.667758,-3.591591,-6.480350,2.365474,0.897693,2.242693,8.444100], dtype = "float32")#candidate|4560|(260,)|const|float32
const_4561 = relay.const([[-3.987432,8.213188,3.948721,8.541279,-8.619443,-0.393101,-2.421626,2.331407,-7.274323,5.803778,8.085814,-9.699481,6.208158,-7.156526,-9.683217,-6.977448,6.633875,7.831640,5.783772,7.145758,0.205114,3.442000,-2.150567,-6.473718,-6.826338,4.541436,4.174214,-6.692738,8.545005,-2.507943,-7.730100,-4.115164,-3.833703,-0.923844,-1.824751,4.275048,0.249227,1.454335,-4.737771,4.863860,-6.302139,-8.188565,-6.747732,-8.440744,0.695623,9.082728,7.994549,-5.513455,5.235715,7.240209,-1.876077,7.525849,-6.911896,-6.718959,1.169090,6.704465,-9.763479,0.444838,-3.206978,-2.516045,-0.670493,-5.397544,1.881079,2.925188,5.546127,-4.441147,1.199453,-4.004635,-7.368624,-2.641458,-6.589228,6.472697,8.505805,3.607479,-5.139942,-2.757108,0.290885,-6.210149,7.634354,8.466254,1.843164,-4.019746,-0.988714,-9.639650,7.084382,-8.269895,-9.476164,-7.945749,-8.378595,0.129654,4.117844,4.531982,-0.110148,1.179237,8.456226,8.559266,-6.047837,9.430711,-1.416917,-7.393787,9.982846,9.251434,-9.151966,2.144934,6.877412,-0.518189,-5.956827,2.112205,2.258601,-3.170809,4.246122,0.217181,-2.344833,-0.340348,-0.472475,-9.467120,3.349791,4.317550,-3.851893,-2.846467,-7.583407,-1.230999,-6.186805,5.839919,8.507666,-3.638997,5.935917,-1.038093,7.966838,-3.825913,1.017992,0.225500,-2.140205,8.993986,6.474705,-9.588218,-3.401482,8.156418,-2.161280,-3.055640,-2.839472,2.239783,4.133394,4.829473,-1.413880,-5.442160,0.066364,1.225179,7.180402,-2.774940,-0.096640,-2.148925,9.693946,-2.184456,-0.466245,3.009262,9.624351,0.310967,3.474877,4.278990,-3.228962,7.214526,4.996155,-1.662014,7.145323,-6.238141,8.597860,-9.838530,-6.237206,4.164525,-3.500352,1.025959,4.255231,-9.427990,-5.939374,-6.460180,4.188534,-7.823099,-6.529142,8.614786,4.271738,-8.023484,-5.756269,7.600028,3.800817,-0.860808,-3.542846,9.760610,-7.335214,-0.933300,-8.020250,7.558301,-3.763890,-8.253004,-8.190320,3.662157,9.424641,4.557148,-5.554931,-5.166351,3.411014,5.313717,6.518534,9.394372,-9.418833,-4.584773,-6.183251,5.507238,1.207926,-2.163800,8.248674,6.121668,2.028792,0.113460,6.778246,6.511378,-7.372872,-7.736377,5.264260,4.964253,9.537222,-1.825418,6.159720,5.308647,-5.870626,2.711028,2.536195,-0.825846,8.616562,-2.469894,-9.258593,6.329976,1.337156,-4.707028,0.647974,-2.433876,5.258406,-8.560090,-8.459458,7.313246,2.051255,6.225886,2.827045,0.620499,6.229900,9.584590,3.607324,-4.941212,8.599742,-1.120376,-3.014083,1.866877,0.477331,-1.454420,1.823012,-3.715374,-4.564633,7.393957,-3.822635,-9.479693,2.038790,9.366503,-6.603012,7.963902,-4.027125,-2.026618,-6.104086,-9.959087,-4.548130,-6.327453,-8.394150,-5.023499,-7.568079,-8.756725,5.410761,-0.699218,-3.369997,8.397796,7.452756,-2.103775,-1.980858,-2.457333,2.272136,8.451646,0.912870,1.433977,-1.326467,6.666318,-0.808845,7.221239,-7.531690,-6.970356,1.438244,-4.311754,-4.125351,-7.100875,0.852844,3.709098,6.138865,-5.064324,-5.882762,-6.489170,-2.349544,6.209710,9.757036,-8.367180,-6.938136,6.519574,-2.972074,-7.186640,-5.957506,-4.130562,5.531650,-6.798455,-5.971863,-4.425685,5.242891,3.957688,-5.429298,-9.672508,-8.995015,7.057714,4.441216,-5.096778,-4.099478,-3.544044,-5.616227,6.386695,-5.776778,-1.460664,-0.329482,-7.129667,-3.493825,7.056117,-7.080992,-9.716604,-9.528869,-0.503816,-1.176534,-0.749817,7.616720,-5.958778,3.068692,-9.990105,9.725990,-6.193740,9.686106,2.515890,-8.150635,-7.205513,-6.595181,7.680515,-8.827778,-5.903513,9.226765,-1.677451,3.812458,-7.826266,-2.187548,9.488237,8.430730,0.999533,-6.322396,-0.301140,-4.871577,0.667063,-3.728407,4.522944,-4.537526,7.802589,-6.387601,8.058331,-0.129926,-0.976641,-0.082342,8.456192,0.262216,-2.193150,9.927416,6.434669,6.415260,8.591394,3.929138,-0.473386,-2.970516,2.210239,3.660107,3.748528,-8.226129,-7.287012,9.326282,5.275756,9.160104,-6.065071,-1.762385,-4.580284,-4.320565,4.526375,-3.337678,-0.470538,-3.951131,-7.914711,-3.293008,9.805601,7.096849,5.546925,2.564002,-0.118523,-7.790384,-4.495175,-9.063649,-8.350581,-4.925707,-0.292535,1.821048,2.337953,7.095516,-8.715949,2.153581,-9.923536,7.424121,2.447667,-7.794599,2.960177,-0.117099,-6.298245,-3.331500,-0.940595,-6.376695,-3.628788,4.208663,9.311585,6.634489,-1.956960,-0.564084,7.997232,-2.590104,-5.969417,-9.195518,4.820061,5.893079,4.175745,-3.529037,-8.634181,0.924543,-2.239800,3.057379,4.995232,2.027654,6.067679,-8.114379,-0.636612,-5.823124,-3.956387,-5.756901,6.114448,5.175791,-7.473208,-8.584138,-9.776934,4.881758,-2.599973,5.419811,1.081986,6.946181,-7.215268,0.400621,-4.814043,7.533225,7.173234,-6.856338,-8.457191,3.190955,4.608093,8.736161,6.200998,4.746141,1.225615,2.218762,3.433810,-1.852433,3.482988,-1.250509,0.847287,-7.344905,-0.027590,3.737564,-1.935283,2.356645,1.472068,2.214525,7.247287,-2.569114,0.259666,0.415207,3.447738,-3.411749,0.908330,-7.117515,5.493260,1.055246,-5.678475,-7.754053,-1.718345,-1.727256,-0.887102,-9.933753,-6.376359,1.212801,2.453271,6.133965,-1.005105,5.670501,-1.533066,-5.563745,-8.602441,4.466110,-7.829145,2.348747,5.360869,-4.373769,0.574472,2.663488,-0.181261,-1.572962,9.637811,-8.460572,6.126047,-2.078992,6.425463,2.717812,-1.247958,-0.451415,-8.400756,4.672674,-8.596747,-1.667887,3.389988,2.772375,-5.548224,1.999864,5.853442,5.465472,8.074493,1.151111,-0.784890,-8.855675,7.063401,3.077038,-0.019508,-3.930583,5.386983,-2.173285,-5.000625,-7.974920,6.347328,8.434353,9.321452,-0.932768,-8.809707,5.811743,-8.340734,3.618749,4.586444,-9.128218,-2.912363,-5.961709,0.403025,-7.345782,-8.519694,-0.645964,-9.838492,7.669437,-0.935781,-9.247588,2.616665,6.509589,7.429683,9.263231,3.989717,-9.310581,-8.194764,3.585789,5.297966,-5.106290,-2.453275,-6.867687,-7.643302,-6.045928,2.238548,6.885437,6.694096,-5.533128,9.181288,4.076861,1.422428,-1.134099,-5.001357,5.235748,7.965146,8.550924,-6.596985,-1.506183,1.976502,7.396896,0.626510,4.287221,6.831798,0.803038,-7.015670,-0.260911,-5.814203,6.094207,-6.772197,8.382999,-7.090835,-7.330930,-5.701018,6.484127,3.141265,-3.111277,2.083219,4.025058,2.616222,-2.065693,8.302814,-6.203950,9.541520,-3.335349,-9.234988,-5.594753,5.097405,-5.816040,5.838239,6.105591,-8.335162,-1.844204,-2.021794,2.715206,-8.504559,8.073957,-0.943253,-7.095538,3.396942,8.183845,-7.716360,6.703373,-0.507970,6.618989,9.364315,3.583815,-0.559653,-1.258280,8.306758,-3.513124,4.350370,-5.425198,0.373833,6.840698,4.011152,3.791241,-4.753238,0.939204,-5.335390,5.143207,-8.754058,1.226684,-7.301121,2.267762,4.961366,1.501210,0.019856,-1.758071,-7.936637,9.011655,9.169382,1.195353,3.213561,-5.279917,0.723286,-6.307821,-0.458128,-2.422409,6.463424,2.193016,-0.078699,6.173451,-1.507321,-3.357253,0.768644,-6.865773,-1.490502,6.231087,8.389751,5.752930,1.614352,-7.485164,-6.771387,-4.881476,-5.956283,-8.451643,-5.886052,-2.707367,-4.635174,-9.461474,-4.381391,-0.770107,-7.528036,1.413340,5.262929,9.990711,-9.493919,7.359466,-1.311851,-9.868975,2.949292,4.796228,-1.602381,-2.937680,6.959864,-9.675101,6.535940,-1.534579,-2.514952,4.963010,9.415339,-5.370430,-2.804483,-7.998260,6.179099,2.716727,0.783864,2.326241,-7.876857,-0.031196,-7.611735,-8.244704,1.484214,9.677804,-2.350309,-8.775249,7.917361,5.620206,-6.984885,5.151547,-4.679538,-1.078780,3.765223,8.616694,2.598565,2.898769,-3.313606,7.541272,7.179463,-7.340962,-0.223838,5.498017,3.797997,0.891804,-3.535300,-6.846382,-1.836684,-5.513242,-4.821759,6.442107,-6.082923,6.893950,-4.546602,-2.578960,0.254271,3.489813,9.861179,-0.768164,6.790480,-6.931090,-7.994865,-2.560686,7.212106,-8.634676,-4.412675,6.039198,7.607310,-2.563982,-6.521125,5.721066,8.622529,9.326478,0.928926,6.781386,0.028994,-6.875072,-4.866134,-6.391538,8.419346,9.115465,1.880982,-5.504939,8.957498,-1.030954,-8.304509,-2.254703,0.620356,-5.269860,8.279323,8.925062,-9.965922,-9.267380,6.671685,-6.383457,5.063902,-0.987887,0.165997,5.474195,0.687592,-1.282087,4.871522,0.159342,-5.659478,0.742024,-3.776473,-0.141317,-1.877801,7.496112,-6.647709,7.956368,-4.591544,-1.642597,-0.171739,-0.310628,7.186337,6.071846,6.926710,5.869189,1.307214,4.122691,-6.815358,-5.881532,-4.232166,-3.529211,2.726574,1.239707,4.294452,4.811883,6.315955,-5.172570,-4.452381,-0.022104,-1.804892,3.333575,-3.662193,2.196939,5.681249,-5.854219,-4.743990,-5.909564,-8.936348,7.217257,4.092346,5.595606,-2.297428,9.078012,-6.648965,8.134756,-9.500982,-6.155917,6.858289,5.586103,8.943969,5.208255,-3.584467,4.018951,4.829295,-0.872246,-4.815571,3.991531,8.907013,2.085150,-7.565543,8.208874,-5.823853,-0.071312,3.725389,-9.554393,3.398250,-0.481454,2.502911,-1.920128,-2.938704,6.290294,-3.000882,-8.373279,1.852709,5.731192,-7.271739,-2.734630,-0.723703,-8.455992,-3.505298,-8.881127,-0.547435,5.814375,8.883670,-9.194613,2.785282,-6.547505,2.356872,5.806980,-0.834702,-4.074742,8.042996,8.659664,9.914674,-3.468756,-8.272475,0.214725,5.996745,-8.331932,-3.209578,7.352894,-4.077280,-2.388811,-2.913891,2.907920,-9.068553,7.433133,-1.740562,-1.288435,-7.166458,-9.677290,9.825117,-3.143368,-6.385599,2.104342,2.899589,-9.049168,-7.283772,6.566963,4.011748,-6.981946,9.617044,9.790002,-1.579836,8.527506,-5.180899,-1.240688,-8.636957,8.709825,3.193343,2.952912,8.765349,4.979799,-4.356615,-0.566056,2.899912,-9.078093,-8.564966,-9.037840,6.435576,2.792447,9.784552,7.526502,-7.747273,3.033189,-3.706663,3.809513,-1.761705,5.664297,0.379154,-6.497765,-1.649290,2.197519,7.333636,-7.472722,-9.259122,-4.203806,1.244314,0.230510,-2.609182,3.901428,6.853885,-5.931864,2.617251,7.678192,8.920836,2.360643,-4.589121,-1.945981,9.567943,-9.766747,3.865620]], dtype = "float64")#candidate|4561|(1, 990)|const|float64
const_4562 = relay.const([True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False], dtype = "bool")#candidate|4562|(264,)|const|bool
const_4563 = relay.const([[2.483712,4.723450,-2.120918,9.526315,7.764322,-2.486150],[6.171242,1.605178,-8.118567,5.977832,-2.116457,-5.404149],[-1.943188,2.208539,1.087049,1.491731,9.607087,6.604323],[-8.763442,-8.676034,8.572835,-5.878714,-1.291580,-9.217205],[-4.513248,9.450166,8.780079,9.834988,7.879131,-8.725111],[-4.930409,-5.439033,9.185458,6.762978,-6.539810,9.077979],[-1.544591,-0.374947,3.979975,6.420269,1.447026,-4.454236],[-5.899350,-2.677848,-0.113415,6.741713,-2.222433,-0.518276],[7.914848,4.292406,-1.755669,7.365457,7.778985,1.772150],[-9.509112,-8.405961,5.548015,-4.046534,-4.901880,-3.594343],[0.359647,3.787886,8.787734,3.579047,7.737289,-6.733355],[0.365840,6.096533,-4.669219,-6.743218,7.856697,-1.717169],[8.954664,7.545290,1.654319,1.448060,3.792761,9.425803],[-8.070991,5.245288,9.711670,3.108537,4.683385,4.381659],[-8.944857,-1.720253,-3.164376,-0.557448,3.295460,9.530472],[5.126140,8.541379,5.965110,6.698396,-8.570129,-9.737459],[0.518378,-7.860949,-5.101478,-2.656357,8.450294,-3.656034],[3.512061,-3.708928,-8.666679,2.101918,-7.418064,-6.027498],[3.132865,7.568467,-7.519435,-4.500749,-1.217258,-1.300343],[-2.819978,0.480308,2.970845,-9.592372,-5.146489,5.267694],[-6.578592,0.550993,-3.311518,2.620407,6.309221,9.600640],[-7.087736,5.999666,-7.507325,6.864170,-7.621812,7.850947],[-3.659149,-0.616116,-3.562365,-6.761682,2.338753,5.117558],[5.738439,9.346301,0.904753,2.234215,-3.022076,-9.146819],[-0.576200,-4.629006,-6.862693,2.521282,5.266681,-4.714771],[8.746576,-2.982586,-3.694538,-1.429141,-1.330614,-0.132162],[-6.607811,8.792683,9.643919,-2.569336,5.804589,-3.448943],[-6.021323,9.522791,-5.096994,1.019172,-2.720126,-0.606789],[9.787252,-7.571385,-0.628297,6.388065,-6.298558,-4.317216],[8.303755,-8.408248,1.020383,-0.602213,-5.734330,1.442092],[5.362902,-5.381689,-7.632905,-9.028377,-8.515544,-9.251127],[-0.376542,7.290949,-0.971510,-1.392171,-7.468779,3.224051],[8.482379,5.029432,9.848919,-4.089198,9.329202,-2.449518],[8.853926,2.193325,0.185551,8.330761,-0.052765,5.591960],[-8.592116,-9.206534,-1.372329,-2.307812,1.661794,8.404162],[-1.737530,-0.813180,-6.494341,4.956167,6.098520,0.350025],[-0.577457,-2.122273,-0.890039,-9.432105,2.600150,7.670280],[-7.269786,-4.728718,-6.052208,-9.695653,6.580649,-3.569948],[5.940551,-0.588839,4.325643,4.533676,-1.740323,-0.041729],[0.398338,7.829613,4.849444,-1.344443,-5.273453,0.120255],[-4.072084,6.610765,-1.444007,-9.688148,5.415769,5.240309],[-4.463173,8.290136,-8.322271,3.968965,-7.821885,7.043343],[-7.443284,5.800969,-8.634419,3.378064,-0.896877,-2.063194],[-8.972033,-1.826166,6.299174,-6.531004,-2.807699,-9.206146],[1.477910,7.773492,-5.305838,2.698647,-1.306645,4.660802],[-2.193140,-4.289026,5.650685,4.074694,6.537515,-1.763512],[5.816387,-4.577415,-9.969796,2.607926,6.645340,3.749189],[9.609293,-1.173182,7.790369,-0.349787,-6.622994,-8.238052],[2.347741,9.360718,5.049239,-8.756012,4.747865,-2.707673],[5.992353,9.807200,-2.102714,0.065853,-8.594150,-0.799258],[5.620177,9.384288,0.832052,-2.303972,0.953778,5.536586],[5.609443,-1.220093,-3.458309,-6.141028,-0.091303,-2.770884],[-3.934893,-9.856927,8.149855,-2.088570,5.614948,-6.985969],[0.714969,4.220083,3.660243,8.880976,-2.873699,6.206613],[-7.588742,6.811755,6.142054,-5.604007,0.708967,-7.165307],[4.715059,4.715535,-6.701756,1.296201,-9.221387,2.900153],[9.555271,-1.387585,-4.830108,-3.576082,4.517340,3.078740],[-8.858723,-6.706498,-8.589992,-6.316961,1.813345,-6.047491],[-5.669613,8.744624,-9.657879,-8.270827,2.070272,-0.255461],[-5.824048,4.480433,-1.990655,-8.828242,-0.045033,-6.013142],[-7.294678,-8.494408,-2.834460,0.167669,-7.326981,-7.680716],[8.578892,-5.755385,5.746797,-4.041654,6.525053,-8.898157],[-5.168291,-3.910788,3.611712,4.096935,-2.974030,-9.536522],[-6.162926,9.937912,-8.691688,-6.082159,-7.520293,6.839860],[5.325115,0.965201,4.505545,-7.528461,-6.321167,-4.444776],[8.082119,9.154122,1.113436,-2.083795,-9.424833,-2.327591],[8.561888,-6.278543,7.144380,-4.517800,-2.946747,3.222062],[2.604067,9.537694,0.432041,8.317982,-7.091792,-6.459864],[-5.445183,1.659721,-0.355120,-7.419997,-5.453599,0.985896],[-8.915035,-7.155777,9.524034,-7.399013,6.113035,-6.183839],[5.759764,1.215736,7.671727,0.645291,3.034538,-8.370260],[-6.870283,7.300803,5.240330,-1.308197,-4.029937,-3.840233],[-4.812231,-3.543196,4.266885,-0.487018,0.895045,-5.643821],[6.329430,-2.602434,-1.284683,-2.990794,6.304122,-4.254614],[-1.934128,-5.032262,7.058792,-9.498145,7.374959,-9.487984],[-3.277217,7.478073,-4.157257,-1.502553,1.938219,-3.687009],[3.713663,-4.246317,6.871359,7.985204,3.415264,-6.830764],[4.106914,6.274230,-1.697272,3.862981,-2.219276,-1.893978],[-9.966581,7.584054,0.073407,8.481740,-4.850307,-0.692444],[-8.004122,-2.426319,1.644294,9.069045,1.129728,-3.574961],[-9.383229,-9.902502,-0.743354,7.799905,5.583190,5.931400],[9.315084,8.834997,-3.708501,2.389534,-2.598109,5.712239],[-3.079040,-8.906807,4.848700,5.277382,-7.229235,-1.953097],[-7.237904,8.053322,-2.381926,5.531021,5.984031,-7.268370],[-6.204047,2.555958,2.346661,-1.557046,1.341983,3.895616],[2.214206,-2.227411,4.332868,8.105842,-2.189999,8.410624],[0.478119,-6.420311,-1.769687,-4.652230,-0.233208,0.710859],[-5.365220,-4.697621,-2.259444,-3.935566,-6.523155,8.511817],[-6.159301,-5.238467,1.768608,2.156924,-5.904567,3.548130],[-0.874536,3.691071,5.727440,-1.468322,-5.110626,0.337132],[3.924384,7.410582,-5.444927,5.833074,6.649031,-6.784769],[0.515008,4.255116,0.091302,-4.341865,-6.613302,7.509975],[-2.610902,-0.276948,-3.088909,8.028381,2.950640,9.129694],[7.980323,-1.516694,-4.799168,3.991022,7.256125,9.400506],[-1.633442,-3.729263,4.721357,-2.344988,-1.323983,1.284202],[5.148135,-6.018597,1.515121,-3.641805,-3.436808,4.692125],[3.834309,-1.207208,3.619714,-7.975588,-9.791199,-5.981409],[-0.116408,1.953967,2.736012,2.878284,-8.792944,-2.800433],[2.147005,-6.640027,0.914046,1.387659,8.041095,4.973106],[0.959486,-3.094493,0.034172,-7.760157,1.784520,-5.445353],[-6.636289,7.003060,0.711537,-2.910577,0.941281,-7.112731],[-8.070241,7.235258,7.483296,-5.030489,-3.294995,-3.426398],[5.126038,7.417075,0.027238,-8.684201,0.471512,-4.766522],[1.411093,-7.509522,4.535533,8.602685,-1.873100,2.149506],[-6.367514,-7.410222,-6.446035,-4.529557,6.153966,0.359950],[2.019601,-4.478790,5.468350,3.855871,5.740833,8.120038],[-7.396861,-0.743273,-6.913984,-6.920560,6.540964,4.175849],[-4.094017,-1.946273,-0.134730,-7.890565,3.959480,-4.651689],[8.239495,9.350464,3.006889,7.115989,9.680605,-3.263096],[-7.084279,-9.923896,-2.489716,6.070747,9.699530,-5.376093],[6.345339,5.911833,-4.577137,-8.077502,5.666122,-5.691929],[-4.989027,-8.387466,-6.697495,9.673001,-0.404715,-0.293799],[-7.544563,2.058184,1.342205,6.821463,-7.842918,4.065931],[-3.605800,-7.863263,9.018513,3.953610,-4.781853,-7.153814],[-6.927067,0.712174,1.051248,8.669178,-9.179193,-8.769357],[9.069732,-5.292133,-7.603417,-2.930230,7.407576,7.299050],[1.586922,5.320957,-7.648902,-2.359042,6.001852,2.691606],[-5.202072,-3.370493,3.047656,-6.097462,-5.584353,-7.224591],[1.008280,-5.853824,6.407759,8.204071,-6.797247,4.181163],[-1.398722,2.854401,7.274672,2.828418,-0.229651,-3.359159],[-8.215630,-2.660774,-5.183418,0.077339,6.335203,-8.072558],[9.284388,1.522666,-0.484864,8.321393,7.539977,0.799328],[7.879693,-6.886982,-3.907157,-5.327620,8.747996,-9.427906],[2.737903,7.170423,0.399853,-0.247463,-1.781207,-6.879351],[-7.011966,9.862048,-4.908911,-5.730710,9.037941,5.496328],[-8.926122,-9.288749,-2.618949,0.412379,0.714173,-2.658216],[-4.251053,3.305093,0.329192,-0.193010,8.325156,6.340013],[-1.745741,-5.981382,-3.822212,9.190425,3.761247,-4.854512],[-6.587430,4.617810,2.576063,-1.928136,-8.870763,-2.228704],[0.069951,1.216462,-9.591019,3.273047,3.478966,0.655901],[2.067021,-3.060179,-9.112394,2.123159,-6.100361,-1.089357],[-3.672009,6.131331,2.509256,-1.594559,-7.205691,4.877368],[-4.888373,7.986496,-2.141521,2.223582,-7.642125,-2.918246],[8.741980,4.055686,6.898686,0.584104,4.715341,-6.395825],[-6.972495,5.334973,6.812137,6.492476,5.659153,5.690465],[6.890088,-5.593178,-5.554850,6.440512,-0.483571,7.327845],[-1.056368,8.149692,5.874669,-9.125163,4.479030,1.287928],[7.357060,-0.468180,1.291031,-7.899048,4.031981,-6.000348],[-5.973153,9.071977,2.720591,-4.535759,1.328699,1.733943],[6.784132,-6.005239,1.528196,6.400004,-5.269972,-0.551802],[7.657981,3.311493,4.551261,-5.785401,2.465350,-9.005488],[-2.344562,-3.957327,-5.897361,3.994969,-0.501069,-1.897025],[4.513773,-5.952672,-3.600138,9.583681,8.081110,-9.395964],[2.321869,-6.993372,-7.197058,4.940040,5.412448,-3.511002],[4.398801,-8.643625,1.625599,1.753885,-7.088085,-2.451202],[-9.016512,0.101396,-1.176894,-6.555694,-3.780350,-8.091428],[1.685943,-3.626383,-8.936418,2.632026,-9.089504,0.058142],[-3.490851,-7.842656,-8.848895,3.656871,-0.970504,-7.580544],[-7.967097,-9.409101,-1.653567,7.484746,-2.519686,-5.300777],[-4.010216,-5.029896,3.843245,-6.586291,6.012648,3.449750],[-6.033552,-5.825801,2.928702,7.444361,-0.388382,-5.612257],[0.463707,-4.353201,9.356527,-3.860381,-0.999519,-7.366542],[-5.895401,-5.384340,2.542414,3.719472,-6.218430,7.554680],[-7.519845,-0.513567,-4.364545,9.360742,-4.664609,-3.279019],[4.986586,-2.554483,7.385182,3.689629,8.001940,1.481272],[9.221804,-0.785212,4.565767,9.154927,7.990329,-2.722051],[1.398997,0.130424,2.437897,9.827019,-2.239498,5.992067],[2.516557,8.183839,-8.952706,3.599511,7.890803,4.522090],[5.082057,-0.020078,-1.489466,8.813380,4.701552,-7.800892],[-9.100351,2.369981,3.004201,-7.088623,2.919716,2.650453],[5.964440,-9.327131,7.967670,9.964019,-1.506623,7.982520],[-8.918936,-3.339563,4.762952,-9.744447,2.729821,-7.820959],[-2.546153,6.018680,-1.735681,8.833349,9.206604,-3.432352],[-8.240781,-9.570843,9.903168,9.574563,-4.868203,8.952908],[-9.843053,4.597256,7.924689,-6.083764,-4.689361,-3.982004],[3.891587,-8.484020,5.060579,6.985670,-5.430306,-3.743280],[1.083092,4.806286,-9.018860,9.572815,7.521871,-1.996800],[-2.366182,-4.656848,-4.993782,2.473232,4.476379,-4.398865],[-2.192022,-5.611816,7.635225,-5.781641,-7.440792,-8.499284],[5.806530,-9.638038,-9.356340,4.540677,2.569205,-5.669850],[-3.072457,8.826346,4.250945,-5.825454,4.374052,2.429812],[-0.399477,2.373218,5.355508,1.485413,5.232187,9.879834],[-7.218449,-6.631816,5.652011,2.502490,-1.702130,4.944263],[-4.349196,7.301685,-4.112527,5.400514,7.207913,7.934175],[-9.301226,7.244882,-4.324291,-1.605543,2.535973,0.578268],[4.499129,8.793919,4.666942,8.472957,-6.567433,-2.300977],[9.824925,1.266942,-7.370627,-3.399554,6.970588,7.437566],[-2.467457,-3.378651,-3.723147,-2.167806,-7.300402,-7.721585],[-0.676208,-6.501987,-1.730358,1.839764,-0.027296,-9.029998],[-6.071114,0.531085,-8.733143,2.651956,-2.940231,2.430153],[3.324109,-6.169758,9.993376,-5.068028,0.261362,-9.171669],[4.769374,0.514359,3.235060,-0.304654,-0.271902,8.484389],[-3.671074,-5.856692,9.364499,-4.576359,2.524298,-4.997902],[8.016954,4.589634,7.913769,-3.395992,8.764940,-9.332625],[-8.236660,-0.156421,0.552128,5.345539,8.735211,-9.133997],[3.674156,1.572318,-3.240928,0.877811,-9.231832,-6.829636],[2.418570,-7.054117,-6.060244,6.437688,-8.128118,-7.938500],[0.317191,5.140075,9.988779,6.595868,-1.829053,5.156128],[0.503193,-3.595896,5.873710,5.168645,-1.692432,-9.054750],[2.954475,5.722377,8.855395,8.983329,7.409538,6.891838],[-7.142124,-5.060683,-6.416162,9.870440,-0.222914,3.284361],[-6.061564,-9.963845,8.616921,-8.630972,-1.664364,-1.839847],[0.202566,7.652883,-5.845336,4.273317,8.014866,-1.126533],[9.923557,3.826155,6.735825,-3.190267,-9.214373,-1.434425],[6.055008,-6.343249,-2.574994,6.434382,-5.400896,6.352388],[-5.328870,8.748188,-6.405540,1.930494,-7.857596,3.632842],[8.541363,7.445589,8.508061,2.729641,-5.931175,-8.317947],[-2.044829,-9.580659,-0.043433,-6.840541,-7.587927,7.197329],[7.193671,9.177593,9.469028,5.651005,-5.951250,-6.565232],[4.847796,-0.581802,4.222021,-9.417456,-6.436113,-6.205920],[-1.406660,6.247221,9.694437,1.937362,9.672916,-2.745726],[-4.327823,-1.084157,-9.937655,-3.298264,-7.575012,-4.306050],[3.342797,-5.390583,7.179644,7.031825,6.373153,4.988166],[7.911180,1.465072,9.005191,6.155693,8.077209,-9.060955],[6.112006,1.172562,5.239845,6.785101,1.609825,-2.025678],[0.204113,-9.323722,6.931004,9.637483,2.534130,1.782831],[-3.544863,-4.537655,-0.078139,6.187915,6.180951,-9.672743],[-9.760117,8.584017,5.737312,6.244511,3.699479,4.470016],[0.165109,8.807751,5.171253,9.702451,-1.535594,4.436225],[-5.987652,-0.766931,-4.834861,-5.378996,-2.559429,-8.939161],[2.236610,-2.103595,8.192901,1.207179,-1.716270,1.298934],[-1.415405,4.193156,-9.941793,4.296278,-5.605506,-7.439095],[-7.847035,8.929869,1.474373,-8.630456,4.491522,1.705232],[-0.632336,4.048458,-7.412817,-6.868232,1.248369,0.767380],[1.005745,-1.116057,-4.938012,-0.579689,3.318965,3.500776],[5.638566,-4.207440,2.756094,9.489636,-4.318395,-3.607309],[-6.165140,6.101824,3.105825,2.643938,-2.628531,-0.857680],[1.166730,8.489365,-1.493208,8.274064,6.964491,5.503558],[6.939724,-1.314845,1.513503,-3.354361,-7.196302,-0.451578],[-5.094831,-9.324063,6.506809,7.882831,8.247397,-2.168562],[-7.702559,7.594099,9.896396,-2.748716,5.451772,-6.907832],[5.447645,-6.548372,3.312514,2.869959,1.216605,-4.855702],[-2.717980,8.763730,-1.195335,-7.302336,0.362409,-1.247913],[-8.805945,0.855901,-5.234170,-7.117131,3.637847,1.848067],[8.608177,-3.603604,-7.466337,-1.169259,9.802343,-7.389987],[6.967074,-9.383746,-9.640298,8.247127,5.114913,-4.982320],[-9.643182,9.308705,-7.308815,-4.034298,-3.236361,-8.251958],[6.660705,6.500759,-7.064745,3.073953,-4.444110,-8.668147],[-1.315587,2.078581,-0.182811,9.017245,4.181016,-5.472425],[6.093647,4.094584,-9.040973,-5.183788,-3.998105,-8.412957],[1.530940,-3.812258,6.240291,-8.812258,-6.190641,4.494869],[-9.809187,-4.267104,9.180253,3.550508,3.172832,-2.807092],[-8.055687,-5.638824,8.295193,0.904798,-0.924377,-7.539748],[-9.693196,9.277007,7.649701,4.434639,-0.719643,7.727529],[9.104254,-2.113174,5.135368,-4.681237,-2.039834,4.954702],[6.047853,-0.983640,-7.159297,4.100944,-7.345545,-0.023037],[1.527188,3.835037,4.024119,7.670279,1.469555,9.272354],[0.102912,-6.987482,-3.823134,3.978956,-1.423268,6.089727],[-2.505958,3.458602,-3.733198,-4.238693,8.324600,6.140350],[-9.175611,2.890732,-8.281387,2.596414,-3.891729,5.170266],[1.357070,-8.529471,4.865658,-0.438843,-4.198919,-3.645416],[6.930071,-1.306464,-0.624523,2.672378,8.999141,-0.835180],[-0.613203,9.013985,2.888333,2.035954,2.199777,-6.165983],[-4.745689,-6.118787,-4.173983,8.067407,-4.760513,-8.379111],[8.090496,1.216820,3.969570,-8.020694,0.280291,-6.948297],[2.446905,1.685523,-6.021965,1.940816,0.533092,8.425572],[-5.600192,5.532136,2.880291,5.187477,-9.402036,0.080253],[-9.934918,3.079707,0.930407,-7.719056,8.723467,4.610913],[3.258525,-9.694934,-2.421881,-7.676509,-2.705528,9.117603],[6.345239,-9.569847,-2.438847,8.278945,-9.289187,-9.145942],[8.557114,-9.756002,1.267801,-6.376759,-3.977185,8.116170],[-6.658911,3.509133,0.784461,-8.228278,9.620979,-6.527794],[-3.192584,-1.386999,-5.141280,-9.520705,8.623150,7.209620],[-7.908935,7.876534,-1.710934,-2.411078,-1.853682,-5.637363],[-0.322449,-8.100548,7.421034,2.179732,4.125675,-0.009056],[2.532573,0.209501,3.893572,3.623528,-0.538675,-5.480289],[1.519976,4.725147,-2.855869,6.403889,7.995099,-6.747356],[8.935923,-1.715344,7.696915,-1.262415,-2.870347,6.321371],[-3.770181,3.405637,8.174220,-2.531699,-5.763481,-0.748779],[0.124570,-2.077202,-5.342427,0.122754,-7.049545,-3.996497],[2.490602,-1.588567,-7.640566,8.981906,-6.106003,5.717519],[9.690757,-5.969524,2.482600,-5.997834,8.931458,8.965815],[-4.790584,4.070206,0.267948,-3.413394,-4.216927,-9.566261],[4.584762,-9.746354,-1.822335,2.819461,1.922193,-7.846290],[1.599835,7.977163,4.282210,-2.662682,3.597246,-2.771270],[9.654400,5.592165,-8.400384,-4.165313,-5.778279,3.077557],[-4.111332,-8.593378,8.666010,-1.961346,4.581905,7.432723],[7.920836,-4.047499,6.144968,1.729119,-3.366730,-6.234487],[-7.108245,-2.336246,9.211284,0.142729,-9.785067,8.236804],[-0.735905,-5.004395,5.200818,-1.576495,4.723273,-0.761714],[-1.732469,6.536712,-7.789627,8.856013,-6.319031,6.118966],[8.413945,9.597478,-0.432127,4.137870,9.898256,0.939197],[2.440453,8.796744,-9.444791,7.492953,9.385039,3.591502],[2.396318,-2.550818,-7.939654,5.824008,-3.118316,-7.411986],[-6.287858,-1.749606,4.117572,-7.251021,2.492895,-2.693700],[5.095362,-3.155419,-1.780772,0.999109,-7.168926,-6.288639],[5.044347,5.922542,-1.814310,6.633920,7.404405,-8.681614],[7.271856,-2.631123,-2.153766,-6.473490,-7.171336,-6.456992],[7.041572,-0.117911,3.614529,-5.812404,8.055415,4.094917],[5.898981,-2.047073,-0.387567,-0.265651,3.150999,-3.725411],[9.223358,-8.783770,-3.236900,-2.620576,-8.851974,3.259306],[3.701751,-3.390684,6.503171,9.378547,-3.235432,-6.101383],[-3.642494,-1.973937,7.007261,-3.788752,-5.974782,-5.629883],[6.037652,-3.430587,-7.659224,-7.360581,9.042079,-7.534082],[-4.153472,-8.329705,8.562093,2.676801,2.144927,6.677136],[-2.648016,2.805522,-3.977021,3.050470,-0.549072,5.755314]], dtype = "float32")#candidate|4563|(286, 6)|const|float32
call_4556 = relay.TupleGetItem(func_2899_call(relay.reshape(var_4557.astype('bool'), [14, 10, 15]), relay.reshape(var_4557.astype('bool'), [14, 10, 15]), relay.reshape(const_4558.astype('uint8'), [48,]), relay.reshape(const_4559.astype('uint8'), [288,]), relay.reshape(const_4560.astype('float32'), [260,]), relay.reshape(const_4561.astype('float64'), [990,]), relay.reshape(const_4562.astype('bool'), [264,]), relay.reshape(const_4561.astype('float64'), [990,]), relay.reshape(const_4561.astype('float64'), [990,]), relay.reshape(const_4563.astype('float32'), [1, 1716]), ), 11)
call_4564 = relay.TupleGetItem(func_2911_call(relay.reshape(var_4557.astype('bool'), [14, 10, 15]), relay.reshape(var_4557.astype('bool'), [14, 10, 15]), relay.reshape(const_4558.astype('uint8'), [48,]), relay.reshape(const_4559.astype('uint8'), [288,]), relay.reshape(const_4560.astype('float32'), [260,]), relay.reshape(const_4561.astype('float64'), [990,]), relay.reshape(const_4562.astype('bool'), [264,]), relay.reshape(const_4561.astype('float64'), [990,]), relay.reshape(const_4561.astype('float64'), [990,]), relay.reshape(const_4563.astype('float32'), [1, 1716]), ), 11)
func_4001_call = mod.get_global_var('func_4001')
func_4005_call = mutated_mod.get_global_var('func_4005')
var_4581 = relay.var("var_4581", dtype = "uint64", shape = (40, 14))#candidate|4581|(40, 14)|var|uint64
call_4580 = relay.TupleGetItem(func_4001_call(relay.reshape(var_4581.astype('uint64'), [14, 4, 10]), relay.reshape(var_4581.astype('uint64'), [14, 4, 10]), ), 0)
call_4582 = relay.TupleGetItem(func_4005_call(relay.reshape(var_4581.astype('uint64'), [14, 4, 10]), relay.reshape(var_4581.astype('uint64'), [14, 4, 10]), ), 0)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
var_4587 = relay.var("var_4587", dtype = "float64", shape = ())#candidate|4587|()|var|float64
call_4586 = func_3142_call(relay.reshape(var_4587.astype('float64'), []))
call_4588 = func_3142_call(relay.reshape(var_4587.astype('float64'), []))
output = relay.Tuple([call_4543,call_4556,var_4557,const_4558,const_4559,const_4560,const_4561,const_4562,const_4563,call_4580,var_4581,call_4586,var_4587,])
output2 = relay.Tuple([call_4544,call_4564,var_4557,const_4558,const_4559,const_4560,const_4561,const_4562,const_4563,call_4582,var_4581,call_4588,var_4587,])
func_4606 = relay.Function([var_4557,var_4581,var_4587,], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
var_4607 = relay.var("var_4607", dtype = "bool", shape = (30, 70))#candidate|4607|(30, 70)|var|bool
var_4608 = relay.var("var_4608", dtype = "uint64", shape = (40, 14))#candidate|4608|(40, 14)|var|uint64
var_4609 = relay.var("var_4609", dtype = "float64", shape = ())#candidate|4609|()|var|float64
output = func_4606(var_4607,var_4608,var_4609,)
func_4610 = relay.Function([var_4607,var_4608,var_4609,], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4616 = relay.TupleGetItem(func_3981_call(), 0)
call_4617 = relay.TupleGetItem(func_3983_call(), 0)
output = call_4616
output2 = call_4617
func_4618 = relay.Function([], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
output = func_4618()
func_4619 = relay.Function([], output)
mutated_mod['func_4619'] = func_4619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4618_call = mod.get_global_var('func_4618')
func_4619_call = mutated_mod.get_global_var('func_4619')
call_4625 = func_4618_call()
call_4626 = func_4618_call()
output = relay.Tuple([call_4625,])
output2 = relay.Tuple([call_4626,])
func_4628 = relay.Function([], output)
mod['func_4628'] = func_4628
mod = relay.transform.InferType()(mod)
mutated_mod['func_4628'] = func_4628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4628_call = mutated_mod.get_global_var('func_4628')
call_4629 = func_4628_call()
output = call_4629
func_4630 = relay.Function([], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4631 = relay.TupleGetItem(func_3981_call(), 0)
call_4632 = relay.TupleGetItem(func_3983_call(), 0)
output = call_4631
output2 = call_4632
func_4636 = relay.Function([], output)
mod['func_4636'] = func_4636
mod = relay.transform.InferType()(mod)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4636_call = mutated_mod.get_global_var('func_4636')
call_4637 = func_4636_call()
output = call_4637
func_4638 = relay.Function([], output)
mutated_mod['func_4638'] = func_4638
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4651 = relay.const(True, dtype = "bool")#candidate|4651|()|const|bool
const_4652 = relay.const([[[False,False,True,False,True,True,False,True],[True,True,False,False,False,False,True,False],[False,False,False,False,False,False,True,False]],[[False,False,True,False,False,True,True,False],[True,False,True,False,True,True,True,False],[False,True,False,False,False,True,False,False]],[[True,True,True,True,True,False,False,True],[True,True,True,True,False,False,False,True],[False,True,True,True,False,False,True,False]],[[False,True,False,False,True,False,False,False],[True,True,False,False,False,False,True,True],[True,True,False,False,True,False,True,False]],[[True,True,True,True,True,True,True,True],[False,True,True,True,False,False,False,True],[True,False,False,True,False,True,False,True]],[[False,True,True,False,True,True,False,True],[False,True,False,True,False,False,True,True],[True,False,False,True,False,False,True,False]],[[False,True,True,False,False,False,False,True],[True,True,True,False,False,True,True,False],[False,False,False,True,False,True,False,True]],[[True,False,True,False,True,False,False,True],[True,True,False,True,True,False,False,False],[True,True,True,False,False,False,False,True]],[[False,False,False,False,True,False,False,True],[False,True,True,True,True,True,True,False],[False,True,True,False,True,False,False,False]]], dtype = "bool")#candidate|4652|(9, 3, 8)|const|bool
bop_4653 = relay.logical_or(const_4651.astype('bool'), const_4652.astype('bool')) # shape=(9, 3, 8)
output = bop_4653
output2 = bop_4653
func_4658 = relay.Function([], output)
mod['func_4658'] = func_4658
mod = relay.transform.InferType()(mod)
output = func_4658()
func_4659 = relay.Function([], output)
mutated_mod['func_4659'] = func_4659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4663 = relay.TupleGetItem(func_3981_call(), 0)
call_4664 = relay.TupleGetItem(func_3983_call(), 0)
uop_4665 = relay.cos(call_4663.astype('float64')) # shape=(14, 12, 2)
uop_4667 = relay.cos(call_4664.astype('float64')) # shape=(14, 12, 2)
output = uop_4665
output2 = uop_4667
func_4671 = relay.Function([], output)
mod['func_4671'] = func_4671
mod = relay.transform.InferType()(mod)
output = func_4671()
func_4672 = relay.Function([], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4636_call = mod.get_global_var('func_4636')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_4688 = func_4636_call()
call_4689 = func_4636_call()
output = call_4688
output2 = call_4689
func_4691 = relay.Function([], output)
mod['func_4691'] = func_4691
mod = relay.transform.InferType()(mod)
output = func_4691()
func_4692 = relay.Function([], output)
mutated_mod['func_4692'] = func_4692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_4753 = func_4691_call()
call_4754 = func_4691_call()
func_4658_call = mod.get_global_var('func_4658')
func_4659_call = mutated_mod.get_global_var('func_4659')
call_4755 = func_4658_call()
call_4756 = func_4658_call()
func_2899_call = mod.get_global_var('func_2899')
func_2911_call = mutated_mod.get_global_var('func_2911')
var_4760 = relay.var("var_4760", dtype = "bool", shape = (2100,))#candidate|4760|(2100,)|var|bool
var_4761 = relay.var("var_4761", dtype = "uint8", shape = (48,))#candidate|4761|(48,)|var|uint8
const_4762 = relay.const([-8,4,7,-3,3,10,7,1,3,-8,8,5,10,6,-5,-7,-1,-2,-10,-9,-7,8,1,3,-1,-10,-8,-6,1,8,-2,10,-7,-2,-7,10,2,-7,7,8,10,-8,-2,-9,-8,-10,-6,-4,3,10,6,6,-7,-2,5,-2,-9,5,7,-4,-5,-9,-7,3,-8,-1,-2,2,-10,-4,6,9,-8,-7,-2,-4,-7,7,-6,5,-1,8,-1,-5,-7,-5,-6,-8,-3,-3,-6,-2,-10,7,7,-9,8,6,-8,-10,9,-9,4,-1,-2,1,-9,-1,4,-4,9,1,-1,-7,-7,7,4,1,3,4,4,1,10,4,-1,-5,6,-8,-5,7,3,8,-9,-5,10,-8,-7,-2,3,1,8,2,3,10,-6,10,10,7,8,2,1,4,8,-5,4,3,-1,6,9,-2,1,-4,-1,-10,5,6,-1,6,-8,10,-8,-4,10,-2,5,5,7,7,-2,-4,-9,7,-3,-9,3,-3,-4,9,-8,-4,7,9,1,-2,4,-2,-6,-3,1,2,-3,4,-3,-3,5,3,9,6,7,2,1,4,-2,-10,1,6,6,-3,-4,9,-8,-1,-2,6,2,1,-6,5,-2,-1,-7,-8,1,-2,-2,4,1,6,2,-3,3,-2,-8,7,1,2,-8,-1,-4,4,1,-5,-5,8,-6,-4,6,8,-4,-4,4,3,6,1,-8,-7,2,3,-6,5,-1,-1,-6,1,-3,-4,-10,-8,-4,10,3,9,1,3,3,9,10,3], dtype = "uint8")#candidate|4762|(288,)|const|uint8
var_4763 = relay.var("var_4763", dtype = "float32", shape = (260,))#candidate|4763|(260,)|var|float32
const_4764 = relay.const([[-7.184990,8.920772,6.782300,-1.187943,7.711277,-7.998583,5.922190,-3.416758,-5.779342,-4.963958,4.512942,-1.704517,-5.708850,0.967250,-5.587886,-2.106426,7.703050,-1.342104,-6.536455,2.244860,9.952157,0.661713,-9.233186,5.683069,7.111719,-3.676714,7.669219,6.857046,-0.629634,-1.774038,-4.973459,7.555420,5.360771,-5.111495,-4.465425,9.747478,-2.806297,5.198399,-7.228324,4.068963,-7.340216,-7.632473,-5.173324,2.899848,-7.521531,4.548129,-5.655311,-6.837545,4.666113,-9.527761,-3.486219,7.879897,-0.887916,3.635641,8.043239,-4.753649,-4.646954,6.885461,-5.721500,8.498981,1.304997,6.955107,-2.702715,1.082829,-1.596723,1.050304,0.675628,0.384371,7.857675,-3.876656,8.219503,-1.411014,-1.716484,-0.153725,-6.132461,1.290398,7.770840,-9.724299,5.728294,3.546636,8.242819,-4.880887,0.310722,-3.053171,5.436609,2.678931,2.937756,-1.305649,-5.918563,-7.495707,2.629766,-1.056183,-0.275880,-2.136182,-6.587043,7.045860,-2.859962,-8.693949,-3.458945,9.762389,2.072606,-7.619659,-5.784553,-7.648012,-8.039104,-4.219271,2.927825,-0.741420,0.240148,6.901541,-3.988286,8.935921,-1.290121,-5.340839,-0.767302,-4.276137,-0.386965,-5.596474,-1.206733,4.010753,2.170944,-6.356682,-6.631509,-2.993697,9.644101,6.895243,-2.205681,-3.885850,-2.559877,0.367843,-1.265278,6.895975,3.561641,-0.716614,-3.078482,-7.308638,5.757988,-1.665941,0.873112,6.200938,-6.457010,-2.866881,6.427439,-5.308145,6.219218,-8.134981,7.856230,-5.379968,2.316993,-9.651847,1.763020,8.498997,6.397606,-4.749060,-8.733977,4.297357,8.553513,1.421888,1.502867,-7.092534,-4.183875,-2.930485,-6.944935,-5.605525,4.601828,-8.554493,4.298901,3.849752,6.358351,9.861209,6.112927,0.222433,-2.833777,3.481115,-8.204044,-4.190842,-2.965098,-3.564307,1.801856,-9.619414,-7.875540,4.757866,-0.164779,-9.416436,5.938533,2.068552,0.923415,6.454959,-0.474350,6.464387,-5.600809,7.314116,-9.502086,-9.498236,-7.218459,8.082718,7.963224,-2.509466],[5.007296,3.660020,-6.588009,-6.195598,1.898873,5.989766,-4.191058,-6.190444,-6.074474,-6.348322,-4.976685,-2.913934,5.698817,8.485034,1.158781,8.276477,-4.079048,6.014645,1.878077,-3.670619,1.644816,-3.541247,-5.242950,-2.214053,-2.538933,-2.228992,8.684524,3.320367,-1.297716,8.576227,-8.269039,-3.734076,-4.390052,9.478345,1.465796,-6.111501,4.682393,6.782694,-4.059164,-4.632744,-3.068511,1.381097,-0.809986,-0.898994,4.201762,-8.469333,-7.749760,-2.793696,-2.156743,1.448400,-3.430454,-1.524960,-2.118546,0.277795,5.396885,-6.432469,-8.867488,-5.798950,-5.461356,8.108801,-6.508907,-9.595260,5.704214,4.018910,-4.887941,2.457367,4.561458,7.472544,9.720544,-7.658325,-8.266994,-9.044599,-9.744506,7.377719,-9.100260,-5.044879,-4.644944,5.269772,2.118669,2.695948,4.482087,-2.269285,-6.813680,5.059224,4.102958,9.308466,-8.066105,-3.915428,-9.688666,9.827740,4.258842,5.473444,-1.434005,1.636983,-2.223327,-6.784371,4.858318,-5.226364,-9.273382,-5.613236,6.191235,4.461917,7.422719,-3.204645,-2.891618,-8.189047,3.852475,4.248400,1.669696,7.381331,-0.509248,9.612434,5.157313,9.019254,1.141693,2.238342,5.722547,-1.432775,-9.492250,-9.377587,6.475258,-9.351940,8.329081,-6.548762,-5.378726,-1.892930,9.346962,6.971409,8.841664,-0.269794,-0.504019,4.019505,4.982584,-3.048344,-6.945071,-4.804370,-6.033343,-9.536571,-9.873822,-8.159441,-0.624682,5.523846,-4.335355,-4.189161,-8.736085,8.877566,-9.695368,-9.440667,-5.230510,-1.761867,-5.126243,-1.563719,4.109402,-6.297004,-3.084478,7.547780,1.143680,-4.851710,3.901455,7.689982,-4.732241,-5.385807,7.578215,-3.878701,4.133688,-4.498649,9.397636,-2.584586,6.763165,-3.289356,7.449000,-9.031560,2.621397,2.560748,-3.563381,-4.777148,7.575744,7.017961,4.956304,-3.870536,-5.440297,-7.086495,-6.315295,0.591911,0.111972,3.194477,9.697785,2.625960,-8.719454,1.808567,4.339701,8.946406,-1.324547,8.083768,-9.023717,-1.470188,-9.488073,-1.931770],[-2.331864,-8.806192,-1.179148,-6.260467,-1.664078,-0.028907,-9.719690,2.314501,2.011710,-1.708629,4.468207,7.658103,-9.903432,9.624937,8.623152,8.982669,3.498718,8.995226,8.647105,4.422242,-5.478812,-7.581528,3.977270,-8.212314,8.049960,-7.805396,4.657101,-2.331822,9.942064,-1.742744,-4.328863,-7.145829,-7.362852,2.175703,-6.651978,9.651284,-5.395004,7.042271,6.519409,-6.382793,6.913599,0.227794,-3.114023,-3.350849,2.829369,-8.600209,-5.507979,0.838501,0.129807,-8.854073,9.250905,-7.829472,3.606279,3.270758,1.045636,5.821851,-4.626377,6.389727,1.583346,1.795703,0.214027,-9.105795,-1.663712,-9.091002,-8.727878,8.939281,-4.099204,9.176855,-6.660600,-0.457144,-9.482875,-1.418461,-7.367701,5.050962,5.417246,8.740832,5.788420,-6.709584,1.096833,0.840132,2.676936,-9.292855,-6.592299,1.693271,-6.523583,-4.559030,-6.344612,-4.618472,9.640703,-2.952285,-0.540813,1.976344,4.838765,2.483675,-5.506427,-8.781801,-9.051074,5.121815,-1.467979,0.258233,-2.396326,7.244542,-9.015133,5.360494,9.065031,-5.119537,1.430290,6.310990,2.258270,-7.660908,7.055355,5.455358,0.598795,-8.226748,9.477167,-6.963902,-1.078794,-6.688857,4.100574,-6.006958,7.680265,-0.661828,-1.685609,8.385710,4.012446,6.626630,-4.375094,-6.527487,2.282986,5.699623,-7.994916,-2.743353,2.847474,9.036122,-4.993214,-1.488393,-6.551951,4.803279,-1.652144,-8.298737,-7.894691,5.600492,-4.917346,-0.661223,-4.063815,-5.902746,2.710272,3.701756,-0.936438,-7.889581,-1.186842,-9.921102,0.678268,7.731896,8.449847,0.299376,2.860000,-2.740511,-2.650676,3.111336,5.274835,0.100963,-9.705052,7.576926,2.792108,-0.435053,-0.877305,-1.978978,-8.942109,-2.627724,8.783598,9.313590,-3.946218,-8.408760,-9.817724,5.169525,-8.947022,-2.174141,-6.266935,6.871812,2.036299,1.051298,-4.894534,-2.279648,-5.048768,-6.273847,-9.320938,-8.332912,-7.953015,-7.527571,7.069847,-4.527548,-5.069462,-8.289926,-1.308739,9.610313,8.480023,-6.546091],[-4.090136,-8.362238,2.844604,5.552167,-5.829897,-5.891238,-1.043431,1.508356,-8.725599,4.648954,1.733867,8.622930,4.198289,0.248632,-7.578133,9.159503,-8.914841,3.653358,-6.086848,-6.089543,-6.841538,4.838846,9.689546,-2.451142,-2.123787,-3.205309,-9.729240,-4.451363,-8.968597,-1.129142,6.438219,-1.744442,-4.714498,8.102508,-9.082741,4.778788,-5.528815,9.611574,-7.926681,3.091033,-2.618138,-1.510460,-0.967355,-7.747070,-0.331804,5.016444,-5.645618,-0.001114,2.823467,-8.667259,7.052123,-0.387185,-3.351297,4.731169,-9.814621,-1.551374,-8.532543,5.020322,8.049756,-5.950864,-5.038023,1.412802,4.225039,8.750138,6.582265,-1.009217,-7.078856,-8.970199,-9.492795,0.705798,-5.302401,5.157667,-2.142188,7.980073,8.795369,9.266721,4.934187,-4.309344,-0.339238,5.592633,2.675592,-4.532002,6.375625,2.767558,-8.025532,-6.781773,-7.230817,-5.277038,-3.261579,-7.614366,1.500784,0.369681,-7.319488,1.108146,-0.121970,-5.194167,-6.055796,8.732875,9.254339,0.072245,3.022625,-5.211934,-6.923557,-0.743350,2.733302,-4.650241,-4.669890,4.686432,1.220815,-3.139643,-2.707801,-5.284871,2.186915,-6.837592,-5.784069,3.254157,4.952943,4.635520,-2.531994,-3.733347,-6.629564,-1.647477,-0.012472,4.463741,-8.057024,1.814602,-2.469346,6.735089,8.568935,-9.080972,6.086087,5.378841,1.086332,-8.748892,-0.480916,1.922806,7.538668,-1.586502,-1.404544,-2.354386,6.415404,5.096942,3.437613,8.473677,-3.225312,-7.247503,2.155531,-3.374189,-0.712785,-1.607785,6.933469,9.039515,0.740257,-6.831763,5.498628,-9.659113,7.590196,-3.324832,-1.776083,6.922611,6.009515,9.361953,-4.285346,5.967399,-7.039558,7.700492,-4.585679,9.475572,-0.549064,3.553736,-1.949467,-7.920706,7.820874,-2.696182,5.014611,-6.905749,3.862911,2.408046,9.586615,-2.626185,6.754051,5.292368,-2.354084,1.157512,-7.005768,-2.124093,9.751913,-1.673481,1.393012,-3.899317,7.531254,4.395734,-2.655312,-2.673333,2.680652,-7.755431,-9.544113,-3.172069],[-4.540291,-3.521616,-3.842331,9.081675,4.144679,-5.816221,-3.150739,2.008204,2.237813,-6.192492,-2.823533,1.477910,5.656058,-4.299350,9.488890,-2.739276,-4.477711,5.223127,6.761566,-3.960885,-6.393264,1.753394,-3.009408,-8.411959,2.271996,2.130536,1.900650,3.335233,-0.768986,4.623003,1.893139,5.653703,-4.512781,-1.325703,5.471732,-8.374871,-0.284559,-4.691473,5.375301,-5.496689,1.180029,-2.550335,6.544833,9.239590,9.769038,8.573965,-1.361318,-4.958991,8.918698,-4.966996,-4.994528,2.870696,-7.103875,9.850643,-3.259269,-2.741309,4.562269,8.267460,8.320645,2.361110,2.260199,6.901518,1.884862,-2.052434,-3.555632,-5.655287,7.898402,5.788146,3.662842,5.079164,7.832442,-2.489392,-6.158811,4.330764,-4.213758,-1.465747,7.584186,-0.202751,-3.724949,-8.211069,6.192535,1.378309,-3.176689,0.800454,5.191651,2.398777,-1.287504,9.130220,9.709312,-3.783718,6.996276,6.744528,-3.774152,-7.627028,-9.375257,-5.184275,7.031675,0.391224,-4.858637,7.798676,6.412120,-7.114013,-0.056853,9.627405,-2.626194,-2.383747,-6.882753,3.291562,1.142749,7.611841,-0.253604,7.207052,6.131056,9.848454,0.695479,2.358102,3.433879,3.069553,-5.417685,-4.838507,-7.835681,-1.965934,-8.697853,-1.575519,9.108978,-8.039480,2.834961,5.035715,-9.787399,-0.064677,-1.030268,-6.947106,-5.825520,1.676690,-9.154622,4.119403,-7.234819,-7.395027,3.627860,-3.932470,-3.068798,-9.940395,1.993498,8.736013,-1.679563,2.874162,1.418157,3.151083,2.312694,-2.029289,-8.704709,4.114390,-1.715067,8.024828,-4.714612,-0.181105,-1.441720,-3.868614,0.051659,8.773093,4.817196,-3.813269,9.284945,-2.672469,-8.185198,-7.647257,2.679068,-3.029844,0.106419,0.385319,0.187918,8.419631,7.968364,7.797915,6.078759,-8.860374,-1.134759,6.276998,-7.220217,-1.743370,6.668366,4.761364,-6.972815,-5.217519,-4.180510,7.115691,7.391555,2.034315,-6.771284,6.084446,-4.240212,3.331452,-1.038507,-3.659011,-0.866918,-9.643391,4.757256,-7.589537]], dtype = "float64")#candidate|4764|(5, 198)|const|float64
const_4765 = relay.const([[False,True],[False,True],[True,True],[False,True],[True,True],[True,True],[True,False],[False,True],[True,True],[True,True],[False,True],[True,True],[False,False],[True,False],[False,False],[False,False],[True,False],[True,False],[True,True],[False,False],[True,True],[False,False],[False,False],[True,True],[True,False],[False,True],[True,True],[False,False],[True,False],[False,True],[False,False],[False,False],[False,True],[False,True],[True,False],[False,False],[False,False],[False,False],[False,True],[True,False],[False,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[False,True],[True,True],[True,False],[True,True],[False,True],[True,False],[True,True],[False,False],[True,False],[False,True],[True,True],[True,True],[True,True],[False,True],[True,False],[True,False],[True,True],[True,False],[True,False],[True,False],[False,False],[False,True],[False,False],[False,True],[False,False],[False,False],[True,True],[True,False],[False,True],[False,False],[True,True],[False,True],[False,True],[True,False],[True,True],[False,True],[True,False],[True,True],[True,True],[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,True],[False,True],[False,False],[False,False],[False,False],[True,False],[True,False],[True,False],[False,False],[True,True],[True,False],[False,True],[False,True],[True,True],[True,True],[True,False],[True,True],[False,True],[False,False],[True,False],[False,False],[True,False],[True,False],[False,True],[False,False],[False,True],[False,False],[False,True],[False,False],[False,True],[True,True],[True,False],[True,True],[False,True],[False,True],[True,False],[False,False],[False,True],[False,True],[False,False]], dtype = "bool")#candidate|4765|(132, 2)|const|bool
const_4766 = relay.const([2.408661,5.285972,7.250967,1.075795,6.384661,8.394144,-3.020962,5.763904,4.933028,-7.441736,9.113709,-8.986384,6.803599,5.070002,7.088450,1.475942,8.938002,-1.673840,-8.501911,6.707988,5.204109,-3.957482,-1.192242,2.644029,3.966214,-1.018919,-8.227064,-7.341931,-8.897996,-2.600508,-7.891663,-9.819302,-1.497343,-9.490407,4.167648,1.947611,9.393900,-6.155786,8.448534,2.670584,4.220766,3.257664,-4.697019,-6.490885,-0.468929,-1.143937,-7.363410,-0.137687,3.845912,1.450813,-0.814964,5.094975,0.389823,3.136917,-5.223232,7.468984,-7.845873,2.436242,6.675758,8.876395,-4.866436,-0.197389,-2.477977,0.291061,0.657126,-2.209757,4.825742,7.604038,-4.241162,8.235978,9.794965,-2.712353,-3.397770,-3.883999,0.247782,5.893838,9.529328,7.637722,-7.655998,-8.849162,6.677130,1.236672,-2.176696,0.191666,1.223510,1.492421,-2.281519,-6.167655,6.368184,-5.263994,-9.280190,-1.064627,6.293565,4.515871,2.066300,0.130027,2.330590,4.999902,-0.599840,-8.633021,-3.087780,-0.407211,7.436741,0.727554,-7.033226,-2.334826,9.431630,-7.060573,-7.230070,-6.192110,1.831604,-4.610446,-8.923904,1.420266,8.665326,-7.857649,4.715717,-6.053502,0.265877,-7.998028,6.520146,-1.223786,0.156613,9.947193,-7.382583,5.359177,1.324818,-7.023985,-4.160964,-6.221317,8.349987,3.877515,-6.067803,-3.693761,5.577768,9.953029,6.890198,9.662856,-8.263270,-5.830348,-7.165915,5.747359,7.908312,9.174837,7.941295,6.588670,-3.393572,9.334723,-4.270812,-0.421333,-0.704526,-3.397230,5.045988,3.385158,-1.303173,-2.035604,0.644640,0.638238,-9.902603,-0.832876,-7.039082,-5.413963,-7.209201,5.872376,8.542291,-8.841086,9.904739,1.790510,-8.344081,7.889594,-2.119535,5.147088,1.324186,8.956432,9.570766,1.281210,8.341632,-5.300578,2.839270,0.405531,4.468122,5.821371,-9.174698,4.285973,4.468448,-4.840529,6.843597,3.064875,-3.481487,-2.523675,9.480720,5.822272,4.927042,-0.087814,-1.310451,-4.214800,-9.978703,-7.257705,-2.149711,1.554595,-8.000107,-6.329602,-1.488855,-6.126588,-7.048590,-9.674258,-6.054090,-0.059439,-5.481225,9.394503,-0.933307,-4.057171,9.514605,-1.181100,3.340122,8.038444,5.823138,6.175776,4.504203,-9.790613,-2.334311,9.873722,-6.718448,-2.295737,4.980619,0.112386,0.250408,-2.843933,3.622589,9.709027,-9.282151,-4.350344,-1.314836,7.125643,-6.372224,3.990609,4.624651,8.965928,-5.341870,-7.220353,2.653922,-5.831359,1.193725,6.346463,5.915146,3.906861,5.424544,0.654538,9.476764,-0.209580,-2.853068,-0.954689,-3.823880,2.547279,-2.618097,-9.495002,-4.975679,-2.281571,1.943919,-9.370591,-1.267613,4.484413,9.573336,4.911891,8.784980,-2.345244,2.389664,6.826526,6.974065,1.534985,-8.402379,4.218576,-3.382600,2.004910,-3.835226,-2.884005,1.561621,-3.091882,-0.487018,-1.613037,7.610588,0.336194,7.450151,9.010642,7.841008,-1.953380,-3.649590,-7.879246,-4.953893,0.418777,5.233823,5.504939,4.660369,-1.949401,-3.138237,4.755856,0.148121,-7.616674,-8.596935,9.361270,-8.490509,9.101115,-2.589774,9.967515,7.510706,2.027895,-8.573678,-1.807255,-5.234643,0.996131,7.770362,2.604621,7.662995,1.259597,9.809082,-0.293217,7.138919,-2.424694,3.570845,-8.908299,-5.454448,-1.266542,-8.895935,-8.996293,3.695700,0.464768,3.483931,8.490784,9.290736,-8.131699,-0.275545,-1.450307,-0.472179,4.091069,5.452178,7.363795,6.490527,-6.979866,-4.599850,-8.564656,8.545403,-5.907266,-0.572866,5.815766,-9.539724,-2.838169,-3.695818,-4.719071,-8.587908,1.783298,5.872467,9.289451,-5.753239,8.138158,9.107349,-3.659610,9.846170,7.767500,-3.463429,0.853544,-4.395414,3.594583,6.891723,4.737195,1.607540,4.585768,8.102759,8.771137,-2.714272,-0.492970,4.981946,-3.365310,7.225919,-6.227300,6.140522,9.098094,-2.681603,-1.750069,-9.616284,1.409507,-7.432431,3.610665,2.098152,8.941444,2.706168,4.574430,-4.375304,3.741414,5.915155,-8.750869,-7.322512,-4.853348,-5.186480,-0.648644,2.815629,4.736834,-4.684876,3.404811,0.139964,0.351542,6.019742,4.575871,0.565599,3.520872,4.224764,9.754634,3.296875,-1.711435,-5.897035,2.085079,-6.317419,-2.177829,3.614123,-9.836878,-1.141150,3.403005,8.236884,-9.080358,5.027508,1.787101,0.514859,-2.989276,1.184096,-0.747313,7.635826,8.364603,-5.676235,-5.736825,6.919749,2.595604,2.070511,8.033579,7.935948,5.044711,-1.905723,4.113978,6.547021,-6.046085,-6.963251,-1.635646,-9.176113,2.163449,5.147544,-3.736285,9.993519,9.871886,-7.549788,0.660450,-8.214094,2.668122,9.990621,-7.308291,-5.173333,7.075817,1.962407,2.710688,6.930031,1.473111,-1.459339,-1.043208,0.384995,-7.690467,-6.787330,7.005906,-2.119771,8.182455,-8.905051,-9.841592,8.903175,9.494306,-1.207718,-2.386208,-2.977638,-8.715269,-2.012846,-5.413260,-8.338996,6.718318,-8.482808,1.466448,4.999592,-1.138070,-7.204328,7.877541,9.438296,0.754592,0.903933,8.589277,9.756315,-4.720570,-3.454971,1.347537,-7.079151,-9.988566,7.596879,3.196717,-1.482172,-7.087190,3.160968,-5.793117,7.690628,-2.035129,-6.051056,-9.073337,0.930193,9.170999,9.660986,6.143030,1.337463,-2.866681,5.224614,-3.641258,3.177078,4.864127,-4.152251,7.010141,1.644872,-4.177664,-7.901653,3.123341,6.814934,8.435950,4.906156,-2.718786,-4.463918,6.706718,7.048080,-5.164451,7.111941,1.212745,4.387212,6.563406,-1.198270,-5.056602,-8.783194,-3.030564,-0.973117,-7.178392,-2.705683,4.420605,9.916318,4.934084,-9.858093,2.674297,6.421599,9.487855,-6.527656,4.491981,-5.524989,8.551542,3.349655,-4.712290,4.484566,1.343885,-7.010139,7.570666,6.639699,-5.692667,-7.277424,9.517820,-1.352158,-3.595771,6.796213,3.269228,-4.645904,-6.579697,-0.593947,9.196310,9.619916,-6.485936,0.907038,7.461736,-0.807600,-6.551354,-7.340340,-9.904291,-5.951569,5.384351,-5.591342,3.831203,4.451663,-1.872061,9.259291,8.360727,-7.140345,-8.489186,9.082096,-6.922068,1.391953,-7.849158,0.980353,-3.454200,-2.911503,5.575314,-0.799219,5.675282,2.479865,6.931405,1.504862,8.233813,-8.870589,-9.003633,-1.442043,2.299672,5.525861,8.981556,-0.954559,7.496964,9.544596,0.268816,3.079043,1.420701,-8.941243,2.862937,6.892207,8.484779,-7.956254,-2.499081,5.245728,-3.413617,4.524251,8.498738,6.723347,-6.300515,6.293878,-2.459445,-8.548965,9.590727,3.457478,6.391544,-7.964422,-5.064225,-4.389855,7.305930,0.673727,-5.480660,5.897538,-7.354510,-2.570553,0.662920,6.435901,2.599768,3.486457,-0.199222,8.577124,1.364887,3.742142,8.605549,-9.679856,5.754436,-4.636712,5.823161,4.963028,6.319844,-6.174255,4.243446,-1.662266,-9.669743,-9.172246,-5.724501,-0.202281,6.079958,-4.076061,8.950959,0.408279,-0.070344,-1.623094,3.442685,6.469371,-8.584662,3.397191,2.753368,-8.105928,8.021828,7.073937,-0.702581,6.632366,4.142749,-8.884551,5.379234,2.619529,-7.069043,5.992140,8.468889,-9.852773,-6.023866,9.418563,8.177649,9.191146,-8.110241,3.352448,-3.855884,-3.234023,-0.547836,-0.777388,-2.119072,7.408365,-3.966311,-6.133206,4.308550,0.178841,-5.730059,-4.552634,-2.744466,-3.531322,-3.350484,2.611623,9.025674,-0.230494,9.386547,0.250730,-1.652837,-6.507852,3.055216,-8.826252,8.449427,-3.381894,-3.500558,0.717579,7.654785,-3.502206,9.118303,-6.922942,3.858527,-0.154492,-6.457076,0.564071,-8.463483,1.657375,-9.043889,0.599783,1.934891,-6.541466,-9.982049,-4.338253,5.872132,9.910554,-1.462211,0.742888,-9.204045,-8.648690,6.938815,2.474239,8.780354,7.726510,-1.804008,3.893732,4.847866,5.936443,-9.504413,2.320748,-7.019454,-9.107469,-2.509084,1.213842,-1.442326,3.628511,7.174876,2.893939,6.155224,-5.827896,0.009674,6.513901,7.717205,-8.767100,-7.271916,-9.281909,-0.729934,-8.800292,-0.357739,6.807401,5.521544,1.158021,7.868516,-6.946640,5.098739,-6.940664,-2.297295,1.989902,3.435714,8.517326,5.483153,-4.976319,3.845093,0.325024,-2.561865,-3.689196,8.206823,-6.389509,-8.321783,-7.800940,-9.411947,3.972940,-2.608068,-2.712851,-1.967441,-6.016752,1.584178,-9.434530,8.390919,4.377149,-4.115041,4.858906,3.104903,1.211877,-4.886956,5.419829,-0.686384,-8.069134,-2.416027,-0.364611,-0.153408,-1.128138,-4.035626,-6.292019,-6.212825,8.548023,5.460301,2.133391,6.662181,4.113073,-9.684471,-0.502193,8.472131,0.354865,1.750900,-3.559683,-8.770675,-0.990948,9.264876,-4.266087,-5.039966,6.765132,8.548788,-3.949521,8.268190,-7.383286,-3.699903,-6.707215,9.489596,8.901153,-2.888574,9.779531,4.029372,1.854710,-5.241274,-9.010460,9.224910,0.588759,-3.103987,2.792864,9.602152,2.634073,-1.493825,0.864922,-6.838701,6.719103,-5.285411,8.428244,-9.170697,1.874476,3.762975,6.247445,2.680448,1.867469,-4.830563,8.633466,-5.337413,5.798848,-5.483450,3.029059,-6.511016,4.561243,9.110167,-9.964888,3.833379,-4.266889,3.464683,-0.912978,-0.009445,0.349094,-9.262213,-7.249887,3.863945,-6.395384,-1.481932,-2.497408,-0.421703,-8.476525,1.831259,0.042355,-6.488209,8.407397,6.811218,-1.974628,8.475600,-3.387029,-6.868552,-5.001066,-7.009229,6.604808,-9.075084,0.858897,-2.407995,-1.272366,-8.225455,-3.406180,-1.594189,5.790699,3.992811,3.360424,7.205351,6.294241,0.656648,9.917595,-0.998721,-1.315623,4.593406,9.015439,9.514298,6.856824,5.233513,-6.526796,4.580102,5.773294,0.755877,2.539700,-8.435594,-9.315301,-4.973467,5.035421,5.059958,-2.783150,-3.078610,-9.202555,8.156951,7.071774,8.359969,-1.771891,9.889232,-2.533420,9.931214,4.225485,-3.674410,6.112047,-1.042678,1.613105,-0.240359,-1.543299,9.122223,6.600524,-3.346713,1.281447,-1.197585,-7.818102,5.592792,3.441141,-6.300826,-0.125839,-2.248998,3.163935,-1.810995,-7.557342,-0.021194,7.457736,1.908872,4.147964,-0.269846,-7.487385,-1.425447,-7.781360,7.042200,-5.888843,3.126815,-7.045373,-4.680727,-1.854453,-0.161990,-3.044963,3.201063,-2.666395,-6.000472,-0.567738,-4.765543,3.709702,4.570402,-6.513365,3.980966,-1.596292,2.782857,1.651682,-9.194073,-0.688623,-3.540907,-9.702677,9.788849,9.283241,-7.970248,-5.743649,-2.660527,1.330513,8.953517,-8.628904,9.989400,5.850598,8.357304,-8.140808,-7.804084,-8.732361,2.160203,-0.265250,5.515594,-9.859169,8.129270,-3.263271,9.766856,7.997995,2.687228,4.328208,-3.938604,2.624446,4.937054,-9.396196,-1.402375,2.658023,0.270626,-3.022200,9.754670,-2.285166,2.437654,-2.087293,-1.957862,-8.382224,1.636433,-3.035810,-1.288389,4.989850,-4.486986,-1.895719,-1.525958,-8.331413,1.706846,-8.445637,-4.750915,-4.099050,3.016302,-8.857594,-6.523332,0.719152,-3.187770,-1.084554,6.542558,6.898501,8.857549,-9.599790,7.028183,2.253579,-8.022462,3.668251,-7.093304,-8.419527,-2.762141,3.364602,5.633045,-9.677002,6.197441,2.948844,-9.131514,-1.037323,-7.600832,4.042209,3.465603,-8.664282,-3.398911,-2.256659,0.677732,-9.739746,8.812249,9.677267,-5.048619,8.550558,-6.874046,-8.084387,2.350932,-2.954985,0.520070,2.771813,-5.110292,-4.054346,7.449712,5.453539,-4.720594,-5.493190,3.283737,-4.707639,9.647673,6.243882,-0.398039,-6.800633,-7.751097,8.765587,-3.775098,8.384715,7.840063,7.410883,-0.092226,3.827578,-4.854903,4.631732,1.367041,2.038856,4.418921,-5.293993,-7.881058,9.469324,0.933120,-8.662045,8.212863,-6.651302,-3.578507,0.433706,-5.658986,5.627265,-6.213943,1.183670,-1.489026,-0.406263,8.958539,-6.884653,7.272419,9.923323,-7.399123,-9.788297,4.328648,-4.968568,-8.603846,-2.085475,6.670897,2.920873,-5.150492,3.348934,5.819144,-4.193714,0.813935,-7.144158,-4.732651,6.360584,4.468607,-7.855636,8.008569,-5.212487,-4.272538,-7.068630,-1.078903,7.113240,-7.803036,-8.515554,-3.638748,5.296793,4.565907,-4.956142,9.104146,-2.828474,1.208535,6.310802,-0.818065,-5.850118,-0.597883,-4.324872,-5.086018,-3.066736,-9.737189,-2.616950,3.971861,-6.008175,5.690271,8.665791,0.765847,-4.367630,-0.623846,3.567241,7.542299,-4.248455,-1.448506,8.833926,-6.965167,-4.939641,-4.708675,-4.998561,-0.464215,-1.601221,4.244467,-9.506053,0.679399,-4.660286,-5.798315,-2.303343,1.606807,9.057063,0.189060,1.668678,-4.555691,1.576838,-6.639163,7.900242,-3.915909,5.379028,3.669335,-6.604629,-1.898755,-1.259297,-7.171801,-5.534519,2.828036,-8.239174,-8.401601,7.905427,9.480760,6.496767,-7.515557,-8.156665,-3.904164,-5.637906,8.432668,7.424221,2.682604,-0.057035,-6.505603,-3.987294,-2.198738,8.763755,-7.592348,-0.192278,2.852369,3.025329,-2.650283,-9.015416,0.456044,-8.061061,-4.690548,-8.610482,0.794331,9.562153,-3.222259,-5.259530,-3.317919,3.635288,-6.967361,-8.358564,-5.394625,6.668877,5.074921,8.506877,-1.758532,0.845670,1.151473,3.151251,-5.177108,7.760143,-8.458559,-8.726390,6.421873,9.718246,8.347952,0.712733,1.810658,-7.443352,-9.975523,-4.340747,3.981607,5.677517,9.891799,3.386135,-7.024192,-9.903723,-5.146326,2.544676,1.146448,0.442263,9.040327,-9.632806,5.094940,3.578793,-1.896081,9.598217,-0.649421,0.800765,6.315265,7.259913,0.471868,-7.046813,-9.362879,3.823079,-8.961476,-8.260488,5.491658,-8.071816,7.445348,-9.561891,2.293212,5.972248,1.704089,-3.177412,-0.570848,-9.108726,0.408666,1.574833,-8.697862,4.979940,-9.237186,-5.808253,-3.125567,-5.590314,7.845493,-5.609204,-5.027286,-7.779099,-7.733545,-4.419067,-8.700620,-2.212367,6.654494,-3.375268,-0.217044,-4.546540,5.996626,-2.311634,-0.073111,-1.055731,6.906277,-6.573836,-8.128593,9.987320,8.019192,0.665048,-9.729646,-1.900024,-3.572989,-0.806375,-0.433575,2.918763,5.853903,-3.471436,-6.287164,5.511037,4.504464,-6.257352,-2.488938,-9.332422,3.713818,-8.101992,8.130428,-4.995908,0.963066,-5.632653,4.909377,2.764047,0.895390,-1.555741,-3.296501,7.912879,-5.214788,-0.992875,-4.791898,-8.707805,-3.936522,0.210381,1.418033,5.502606,-6.332776,5.612469,3.145920,8.396056,-5.038843,7.969734,9.800047,-3.339676,-9.733216,7.752443,9.353909,-1.774555,-4.591545,7.714597,6.585673,-1.594220,-9.306932,-7.590748,-4.513616,-3.157957,4.307408,-9.808699,-6.137019,-5.133103,6.869713,4.264470,-0.564963,-7.096478,-6.435561,-6.554844,9.641330,5.654455,-9.794929,6.872107,4.077525,3.514002,4.422408,-2.706625,-0.538429,-5.718402,-8.844628,-5.849837,-1.252264,7.276878,-8.892548,-1.966630,-9.276775,4.100136,9.967388,5.640449,-4.296815,-4.935641,-6.525673,-6.451609,2.082335,-9.317224,-5.411120,-3.703747,-7.930979,1.843764,-2.204795,-6.746351,-6.307813,9.510937,-7.172737,-5.573946,-2.269244,4.136442,8.944067,0.034674,-1.943141,-1.530306,0.482415,8.255969,-5.552191,-9.581248,8.888886,1.790804,3.331080,3.968657,-8.499167,-9.902916,-1.821098,3.656809,1.156442,3.727799,7.879162,6.580694,-4.455729,-3.918643,0.074376,4.001673,5.904863,-0.376009,-5.242666,-5.971816,-7.362535,7.564238,-7.348378,-6.815199,8.515365,-1.907201,-0.937229,6.859596,-8.572581,9.791901,7.463928,-0.729704,-7.816580,9.211170,3.964698,8.626057,-6.136806,-6.324762,1.142663,9.745132,-4.424652,4.507863,7.495359,-9.255560,-4.447500,6.277547,-3.873977,-0.010686,8.957793,1.050767,-3.424049,-7.107475,0.290505,9.876967,8.948990,-9.016098,-0.600990,-7.414360,-6.424274,-6.489723,6.360743,-0.340739,6.839651,-0.006468,-4.335452,3.529038,-2.230054,-1.173275,0.489410,-7.541924,-4.558746,-9.420534,5.125651,-2.349973,1.022335,-6.343019,-1.819186,6.112078,-9.674919,-3.695585,9.683871,0.006320,9.025734,-3.796897,8.570882,-7.392467,4.971027,7.161534,6.540773,-0.896410,-3.190236,9.613770,-2.641820,-6.079423,-9.585318,3.526664,6.781648,4.248235,-6.741598,9.687681,3.364873,9.357661,-2.796319,2.259658,-7.487531,1.171503,-0.564918,-1.555358,6.475586,6.978664,4.422955,9.805212,7.402190,-3.793541,-2.192562,-0.946829,4.591023,-1.339507,-7.655105,3.996351,-8.556577,8.509597,-6.045833,0.374858,-2.893678,1.351071,6.875710,-2.525919,-1.040925,2.675028,-4.066222,-8.784652,6.135872,-0.819752,-8.578858,5.312759,-1.793619,9.310851,-3.394369,-7.258299,-3.388488,-5.059021,-7.789333,-2.192383,4.233228,-7.247876,8.856585,3.370269,1.755076,-4.185510,-6.103857,-7.138124,-6.523469,8.982856,-7.643449,-7.509989,1.873258,6.744454,3.376318,-6.549528,3.511316,3.874666,9.871300,4.180030,-8.238147,-7.715587,8.705673,0.520700,1.645279,-5.895826,-9.864166,-5.921022,-0.041203,5.268281,2.613220,-5.143140,-6.519015,-1.828289,1.937680,3.889736,0.216577,-3.365269,-7.684701,2.335874,-9.366373,-7.379775,-7.617923,-5.673723,-5.490490,-1.889215,-4.995674,-5.718292,-6.543966,-0.018497,-3.957852,8.440451,-5.621873,4.427816,4.741582,-0.962133,-2.530737,-8.134300,8.125513,5.423043,7.986042,0.124062,8.869364,-1.567831,-7.595971,3.635865,-0.042547,6.917975,-0.247233,-7.720315,8.049362,8.322078,9.535198,-2.163313,-6.757578,-4.346778,7.181923,1.088231,8.760157,5.717176,1.836587,-4.899776,4.468163,-1.383077,-8.513187,-9.925945,1.239859,-5.324217,9.218101,8.958328,-2.920140,9.735386,7.895090,-8.676980,4.587121,7.873795,-3.437801,-1.941643,2.484788,9.889333,0.415760,4.673531,8.053557,5.886204,-5.033110,8.284529,-4.043253,-7.994076,4.738561,-9.835472,-6.006928,3.904669,-2.108277,0.867271,-6.130601,7.226428,-9.232610,-8.069285,-3.955099,-4.624317,-6.577392,-8.086376,7.365024,1.340139,0.657178,9.439775,7.565366], dtype = "float32")#candidate|4766|(1716,)|const|float32
call_4759 = relay.TupleGetItem(func_2899_call(relay.reshape(var_4760.astype('bool'), [14, 10, 15]), relay.reshape(var_4760.astype('bool'), [14, 10, 15]), relay.reshape(var_4761.astype('uint8'), [48,]), relay.reshape(const_4762.astype('uint8'), [288,]), relay.reshape(var_4763.astype('float32'), [260,]), relay.reshape(const_4764.astype('float64'), [990,]), relay.reshape(const_4765.astype('bool'), [264,]), relay.reshape(const_4764.astype('float64'), [990,]), relay.reshape(const_4764.astype('float64'), [990,]), relay.reshape(const_4766.astype('float32'), [1, 1716]), ), 11)
call_4767 = relay.TupleGetItem(func_2911_call(relay.reshape(var_4760.astype('bool'), [14, 10, 15]), relay.reshape(var_4760.astype('bool'), [14, 10, 15]), relay.reshape(var_4761.astype('uint8'), [48,]), relay.reshape(const_4762.astype('uint8'), [288,]), relay.reshape(var_4763.astype('float32'), [260,]), relay.reshape(const_4764.astype('float64'), [990,]), relay.reshape(const_4765.astype('bool'), [264,]), relay.reshape(const_4764.astype('float64'), [990,]), relay.reshape(const_4764.astype('float64'), [990,]), relay.reshape(const_4766.astype('float32'), [1, 1716]), ), 11)
var_4789 = relay.var("var_4789", dtype = "bool", shape = (2100,))#candidate|4789|(2100,)|var|bool
bop_4790 = relay.less(var_4760.astype('bool'), relay.reshape(var_4789.astype('bool'), relay.shape_of(var_4760))) # shape=(2100,)
output = relay.Tuple([call_4753,call_4755,call_4759,var_4761,const_4762,var_4763,const_4764,const_4765,const_4766,bop_4790,])
output2 = relay.Tuple([call_4754,call_4756,call_4767,var_4761,const_4762,var_4763,const_4764,const_4765,const_4766,bop_4790,])
func_4819 = relay.Function([var_4760,var_4761,var_4763,var_4789,], output)
mod['func_4819'] = func_4819
mod = relay.transform.InferType()(mod)
var_4820 = relay.var("var_4820", dtype = "bool", shape = (2100,))#candidate|4820|(2100,)|var|bool
var_4821 = relay.var("var_4821", dtype = "uint8", shape = (48,))#candidate|4821|(48,)|var|uint8
var_4822 = relay.var("var_4822", dtype = "float32", shape = (260,))#candidate|4822|(260,)|var|float32
var_4823 = relay.var("var_4823", dtype = "bool", shape = (2100,))#candidate|4823|(2100,)|var|bool
output = func_4819(var_4820,var_4821,var_4822,var_4823,)
func_4824 = relay.Function([var_4820,var_4821,var_4822,var_4823,], output)
mutated_mod['func_4824'] = func_4824
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4860 = relay.var("var_4860", dtype = "float32", shape = (7, 9))#candidate|4860|(7, 9)|var|float32
uop_4861 = relay.rsqrt(var_4860.astype('float32')) # shape=(7, 9)
func_2210_call = mod.get_global_var('func_2210')
func_2215_call = mutated_mod.get_global_var('func_2215')
var_4870 = relay.var("var_4870", dtype = "float64", shape = (1, 432))#candidate|4870|(1, 432)|var|float64
var_4871 = relay.var("var_4871", dtype = "uint8", shape = (48,))#candidate|4871|(48,)|var|uint8
var_4872 = relay.var("var_4872", dtype = "uint8", shape = (288,))#candidate|4872|(288,)|var|uint8
const_4873 = relay.const([[4.718810,4.427191,-5.168239,-1.219922,-7.482274,-2.309927,-5.373280,-2.077472,2.484424,9.625063,5.819540,-6.311535,-0.635971,-9.071583,-4.325220,-3.574383,9.572191,9.050164,5.322788,-5.443938,5.583686,-1.522715,3.829091,3.344975,-5.908715,0.534845,7.078123,-4.525182,-8.642149,-5.263783],[2.380087,-8.746954,7.818627,-3.436109,-2.887222,-4.357950,-8.313404,2.755959,7.626224,-0.384488,-8.080215,9.881023,2.073297,1.358162,4.536501,-4.848157,5.232115,0.367375,-2.812813,4.731990,-8.582202,-1.356591,-4.366454,-1.912585,6.621167,1.132920,-1.558632,1.415149,8.818980,2.053128],[-8.533392,5.437847,8.027119,-1.172428,-9.393847,-7.579344,1.129864,9.630383,-9.360208,-9.571315,1.390803,6.662013,-2.116348,5.883891,-2.980526,-8.454282,1.705884,-3.535996,-9.275436,-2.449370,-9.175961,8.844781,-4.749482,5.466094,-1.568980,-5.623632,-2.092268,-9.603739,-7.207879,-9.758111],[-2.235343,9.855164,-2.357897,-9.985655,5.444727,7.362239,9.280731,0.205403,-3.403785,8.179048,-5.965169,-7.156071,0.197242,-9.985653,-0.570781,-4.658007,1.120346,-2.375821,8.315089,7.019807,-0.798557,-9.193388,8.665501,4.410098,3.020425,4.261412,-4.185796,-5.542082,-0.879202,4.097702],[6.522700,5.538485,4.479489,-8.894658,6.939273,4.837615,-9.201254,2.048967,-3.330243,3.699204,7.486098,0.656920,-0.166330,-2.198873,-2.738535,-9.591723,9.821409,6.512675,9.270736,-6.414440,9.057910,-8.064594,7.711935,2.530446,-8.018699,4.780124,2.141370,9.926241,-8.482426,-4.861678]], dtype = "float64")#candidate|4873|(5, 30)|const|float64
call_4869 = relay.TupleGetItem(func_2210_call(relay.reshape(var_4870.astype('float64'), [12, 4, 9]), relay.reshape(var_4871.astype('uint8'), [48, 1]), relay.reshape(var_4872.astype('uint8'), [288,]), relay.reshape(const_4873.astype('float64'), [150,]), ), 0)
call_4874 = relay.TupleGetItem(func_2215_call(relay.reshape(var_4870.astype('float64'), [12, 4, 9]), relay.reshape(var_4871.astype('uint8'), [48, 1]), relay.reshape(var_4872.astype('uint8'), [288,]), relay.reshape(const_4873.astype('float64'), [150,]), ), 0)
func_4175_call = mod.get_global_var('func_4175')
func_4182_call = mutated_mod.get_global_var('func_4182')
const_4885 = relay.const([2,7,-4,-3,-9,7,5,-4,-6,-1,-1,6,-9,3], dtype = "uint8")#candidate|4885|(14,)|const|uint8
const_4886 = relay.const([-1,-4,-10,5,5,10,-8,7,7,-4,-2,7,-7,1,10,-4,-10,-1,9,6,2,7,10,-3,-9,-5,-9,1,9,-6,3,-9,-10,-3,-6,4,-4,7,5,1,4,9,8,-1,-3,3,-7,-8,3,-8,10,-7,5,10,-2,5,7,-1,-5,4,-9,3,9,5,-5,-1,6,-1,1,-10,4,-1,1,-8,4,4,8,1,3,1,8,-4,9,-5,9,-5,1,6,8,10,-5,-9,-4,-2,4,-4,5,-9,5,7,9,7,-8,4,6,-1,-8,3,9,-10,9,7,4,-2,-8,-3,3,-7,-2,8,-4,-8,-7,6,-8,-1,10,3,-4,3,4,-8,-3,-7,-7,2,3,-6,2,-8,-8,-7,9,-2,-5,-4,10,-7,9,9,-10,-9,-2,-5,9,-3,4,-5,10,-3,-4,-3,9,9,-5,-5,-9,5,-1,4,-6,7,8,3,1,2,-3,2,-4,-1,9,-3,-2,10,1,-3,2,6,-4,-8,5,2,5,-1,7,10,-9,6,1,9,1,-8,-4,5,-3,2,-2,-7,2,-8,3,-7,-10,6,-9,3,6,3,8,-7,10,1,8,3,-10,-1,10,5,-2,-1,-5,3,10,5,-3,-8,-4,8,-9,-3,1,-1,-3,9,7,-6,-8,8,-4,-3,5,-1,4,-4,10,1,-1,-2,-9,2,3,-8,9,-9,9,2,-5,7,-4,-2,8,6,8,-6,1,2,-5,6,-8,-7,-7,5,1,3,2,-10,1,-10,5,7,-5,9,9,6,-10,-6,-3,9,2,-1,-9,3,-8,8,-2,-9,-4,-8,4,2,-8,-1,9,7,3,-4,-9,-2,-1,-10,7,-9,-8,4,3,-5,4,2,-7,-3,-6,-1,-3,2,3,-6,-1,-1,-1,10,9,-5,-1,-6,-5,-9,5,6,2,3,-9,-8,-3,-9,4,-10,-5,5,1,4,-10,1,-4,-5,-4,-4,5,-5,-10,5,-4,-6,10,-4,-3,-1,3,10,8,4,4,-8,9,-9,8,3,-1,-2,10,-5], dtype = "int8")#candidate|4886|(390,)|const|int8
var_4887 = relay.var("var_4887", dtype = "float32", shape = (1716,))#candidate|4887|(1716,)|var|float32
call_4884 = relay.TupleGetItem(func_4175_call(relay.reshape(const_4885.astype('uint8'), [1, 14]), relay.reshape(const_4886.astype('int8'), [390,]), relay.reshape(var_4871.astype('uint8'), [48,]), relay.reshape(var_4872.astype('uint8'), [288,]), relay.reshape(var_4887.astype('float32'), [1716,]), ), 0)
call_4888 = relay.TupleGetItem(func_4182_call(relay.reshape(const_4885.astype('uint8'), [1, 14]), relay.reshape(const_4886.astype('int8'), [390,]), relay.reshape(var_4871.astype('uint8'), [48,]), relay.reshape(var_4872.astype('uint8'), [288,]), relay.reshape(var_4887.astype('float32'), [1716,]), ), 0)
const_4895 = relay.const([[10,-9,-5,-3,-5,-1,-7,6,-2,-4,-10,9,1,-2]], dtype = "uint8")#candidate|4895|(1, 14)|const|uint8
bop_4896 = relay.greater_equal(call_4884.astype('bool'), relay.reshape(const_4895.astype('bool'), relay.shape_of(call_4884))) # shape=(1, 14)
bop_4899 = relay.greater_equal(call_4888.astype('bool'), relay.reshape(const_4895.astype('bool'), relay.shape_of(call_4888))) # shape=(1, 14)
output = relay.Tuple([uop_4861,call_4869,var_4870,var_4871,var_4872,const_4873,const_4885,const_4886,var_4887,bop_4896,])
output2 = relay.Tuple([uop_4861,call_4874,var_4870,var_4871,var_4872,const_4873,const_4885,const_4886,var_4887,bop_4899,])
func_4903 = relay.Function([var_4860,var_4870,var_4871,var_4872,var_4887,], output)
mod['func_4903'] = func_4903
mod = relay.transform.InferType()(mod)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4903_call = mutated_mod.get_global_var('func_4903')
var_4905 = relay.var("var_4905", dtype = "float32", shape = (7, 9))#candidate|4905|(7, 9)|var|float32
var_4906 = relay.var("var_4906", dtype = "float64", shape = (1, 432))#candidate|4906|(1, 432)|var|float64
var_4907 = relay.var("var_4907", dtype = "uint8", shape = (48,))#candidate|4907|(48,)|var|uint8
var_4908 = relay.var("var_4908", dtype = "uint8", shape = (288,))#candidate|4908|(288,)|var|uint8
var_4909 = relay.var("var_4909", dtype = "float32", shape = (1716,))#candidate|4909|(1716,)|var|float32
call_4904 = func_4903_call(var_4905,var_4906,var_4907,var_4908,var_4909,)
output = call_4904
func_4910 = relay.Function([var_4905,var_4906,var_4907,var_4908,var_4909,], output)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4628_call = mod.get_global_var('func_4628')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_4914 = relay.TupleGetItem(func_4628_call(), 0)
call_4915 = relay.TupleGetItem(func_4630_call(), 0)
func_4628_call = mod.get_global_var('func_4628')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_4922 = relay.TupleGetItem(func_4628_call(), 0)
call_4923 = relay.TupleGetItem(func_4630_call(), 0)
output = relay.Tuple([call_4914,call_4922,])
output2 = relay.Tuple([call_4915,call_4923,])
func_4924 = relay.Function([], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
output = func_4924()
func_4925 = relay.Function([], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_4928 = func_4691_call()
call_4929 = func_4691_call()
uop_4938 = relay.rsqrt(call_4928.astype('float64')) # shape=(14, 12, 2)
uop_4940 = relay.rsqrt(call_4929.astype('float64')) # shape=(14, 12, 2)
func_1096_call = mod.get_global_var('func_1096')
func_1099_call = mutated_mod.get_global_var('func_1099')
const_4945 = relay.const([[8.984096],[9.976419],[-3.105747],[9.409007],[-9.240982],[-0.304498],[-3.265099],[-1.616137],[-5.203163],[-7.512671],[1.339286],[-6.161598],[0.786452],[-4.680336],[6.716296],[-4.342378],[-8.240477],[-9.795737],[-4.320808],[2.744980],[-0.038635],[-6.112574],[-1.718308],[-3.768794],[9.564997],[5.544160],[-6.229865],[4.601770],[-7.641140],[3.345193],[-9.029533],[-7.950440],[-7.116370],[9.088178],[-6.940571],[7.600224],[-3.308887],[3.442527],[-9.055892],[0.083729],[-8.204198],[-2.369320],[-2.580162],[5.254787],[5.264303],[2.949999],[-3.010204],[-8.197549],[-6.830169],[-6.526603],[-0.636706],[2.573101],[5.648955],[3.365247],[1.700818],[3.219938],[5.124756],[-9.782598],[6.439199],[-7.964482],[-8.442029],[-0.612499],[3.017136],[7.103827],[-6.788281],[-3.551827],[9.660925],[0.129997],[-2.240360],[-1.964216],[5.938461],[-8.773755],[8.412253],[-3.653348],[-4.689263],[4.575137],[-2.947781],[6.825897],[-8.730576],[-2.483055],[-5.264126],[4.507180],[-6.469625],[-1.669699],[6.017446],[-4.892608],[-6.450551],[-0.674423],[5.509600],[-1.688720],[5.636217],[3.543430],[6.620014],[-7.121729],[3.889715],[-7.738262],[8.313213],[-6.651321],[-2.581331],[5.844083],[5.335540],[-2.512668],[-1.527020],[-2.995411],[-6.478223],[7.898654],[-6.503763],[3.912345],[1.507955],[-4.747358],[-5.555583],[3.516749],[-9.448176],[-9.370198],[-7.276542],[7.309146],[9.422178],[-0.261084],[-8.141541],[-8.369274],[0.970800],[-5.808287],[-7.925485],[-6.363819],[8.250787],[-9.206908],[3.089201],[-0.749174],[5.094759],[9.250272],[-9.932449],[-3.524208],[-5.869936],[1.347215],[6.535048],[4.885622],[5.351245],[-1.800292],[-2.035235],[6.704592],[2.427084],[7.522332],[1.896086],[1.920781],[-6.435849],[3.177568],[2.753575],[0.151446],[-8.469079],[-8.239387],[-9.213043],[-4.597327],[3.949192],[7.856865],[7.126823],[-7.972239],[-6.161679],[-1.072813],[5.687317],[7.312218],[-9.380501],[-9.545222],[-2.924155],[8.558344],[-0.156179],[-8.088051],[-3.405484],[-5.728957],[7.710620],[1.688648],[-7.332672],[-6.726509],[9.644186],[3.312557],[-5.170149],[2.065737],[9.451244],[-7.223513],[3.884315],[-7.228563],[5.343267],[-1.024682],[8.802395],[0.854356],[-0.531108],[-4.696530],[-9.036100],[4.803616],[9.492329],[-2.352825],[9.306451],[-5.718512],[0.654216],[-0.599542],[-5.245941],[-6.975345],[9.130374],[5.270097],[9.286477],[-9.416223],[3.329593],[7.049148],[6.299238],[-2.876057],[2.626668],[-5.579900],[-0.141156],[8.137471],[0.573056],[-9.394611],[-3.003789],[4.134448],[7.161300],[-8.209294],[1.931839],[-7.855258],[7.895038],[6.948199],[-2.456085],[5.920615],[-7.688160],[6.372193],[-1.023487],[0.645208],[-4.018501],[-9.562972],[-6.993897],[5.160081],[-2.439190],[6.466986],[-7.971921],[4.231123],[7.861602],[-8.701169],[-1.869994],[3.346268],[8.986889],[8.168703],[1.254362],[2.520333],[-3.338909],[-9.012413],[6.375927],[-1.367957],[6.078945],[0.512037],[4.464896],[-6.833203],[9.382415],[-9.296591],[-3.499585],[5.673794],[-7.734472],[-6.710383],[8.843046],[-2.058456],[5.822243],[-6.124728],[-0.857865],[-4.224909],[-1.878258],[4.886311],[-5.828769],[-4.273751],[-5.925889],[1.099514],[-3.507668],[-7.049892],[1.417000],[-8.413360],[-2.306248],[-1.296392],[8.182382],[-6.141678],[3.989641],[-2.153999],[-9.389012],[1.652455],[3.982289],[0.747468],[0.317538],[-2.719917],[5.983588],[-1.428613],[3.760686],[3.368804],[7.164535],[0.214505],[-9.961722],[-2.334990],[1.942468],[-0.894412],[-3.654376],[-9.591468],[7.240012],[7.460775],[8.337077],[4.705559],[-7.343612],[0.387672],[-9.243687],[2.809741],[4.184931],[2.459759],[-0.878545],[7.907371],[-4.154267],[-9.377140],[-6.451705],[-4.993741],[-1.191887],[-7.921739],[0.020151],[-2.687903],[5.530115],[-7.108425],[-2.551951],[-9.288345],[-6.606986],[3.586527],[3.148297],[-6.615985],[-6.385636],[8.268284],[-1.468644],[0.357717],[2.699162],[-1.310112],[2.620502],[4.831063],[-3.447363],[-5.439539],[4.786966],[-9.047279],[-1.809126],[0.172117],[1.584540],[3.164717],[-1.686019],[-6.039425],[-4.247774],[4.150737],[9.837633],[6.301371],[-7.724194],[2.809269],[-4.979977],[0.766640],[-9.041479],[5.116017],[1.473818],[9.932904],[5.670726],[3.304248],[5.693594],[-5.754351],[6.851694],[6.040665],[9.641402],[5.214531],[1.446979],[-2.969315],[-9.976287],[-2.798083],[-1.161191],[-9.457884],[-5.723514],[-8.119083],[-6.492797],[8.462356],[4.338134],[-6.643876],[2.920037],[5.192346],[-7.657155],[-6.352685],[2.310481],[3.725092],[-3.827862],[8.840934],[5.715376],[-0.951627],[4.350953],[5.197351],[-6.172869],[2.173082],[-8.680106],[-3.404389],[4.658632],[-6.451400],[-7.470227],[-6.671909],[-0.382181],[-8.087186],[7.579810],[6.379542],[5.868828],[-2.704528],[-0.278637],[-2.410202],[-1.034967],[-8.663123],[1.623680],[-6.841451],[-9.275875],[-0.420401],[9.372740],[-1.674898],[-8.478240],[-7.409016],[-4.830229],[3.829198],[2.586570],[-0.317589],[7.120735],[1.304865],[-2.399274],[9.342959],[-5.595625],[3.228330],[-7.751809],[-1.042440],[-4.194972],[2.139165],[5.031574],[-8.906377],[6.484196],[7.021879],[7.036780],[-9.043387],[-9.054854],[-0.739269],[3.799443],[6.093445],[5.312547],[-0.090869],[-1.228251],[6.758742],[-6.447525],[-3.480331],[-0.296086],[6.885976],[-8.239599],[-0.939029],[2.686974],[-4.705411],[-4.999326],[-7.146558],[-4.213700],[-2.181326],[-8.551542],[-6.282841],[8.005942],[0.234517],[-7.575063],[1.491407],[-7.340534],[0.984788],[8.403385],[-4.738039],[-5.161494],[-1.744213],[7.651345],[5.164104],[-8.581881],[5.189037],[-6.352833],[-4.557474],[4.740411],[7.659101],[7.608497],[-2.590004],[-0.763940],[-8.968819],[-3.934838],[-3.568987],[6.313587],[8.894754],[6.937445],[5.014457],[-0.995009],[0.458631],[-1.288202],[-8.063633],[8.632308],[8.221276],[-3.495288],[3.977604],[8.932456],[-9.106912],[-3.570076],[3.729569],[-7.785762],[2.695062],[1.687616],[3.933551],[3.771673],[-7.463142],[-7.552672],[-5.219794],[8.160789],[-0.571254],[0.603231],[-4.420287],[6.500871],[-8.868633],[7.554433],[-6.554541],[7.327228],[9.003000],[-7.244433],[-8.070769],[4.056164],[8.502545],[-4.629718],[-3.256224],[7.402309],[0.814195],[-9.810531],[-6.574431],[2.202897],[1.952798],[-1.042597],[-6.206484],[0.871220],[-6.860324],[-7.277823],[-1.048786],[6.319275],[-1.446294],[1.938235],[9.579460],[8.703622],[6.652020],[-6.805871],[-9.911153],[4.791123],[-8.499448],[7.873236],[0.156035],[5.496282],[-2.602335],[-8.709085],[3.289182],[-9.972179],[4.110571],[-6.368918],[-0.154079],[-6.505494],[3.148996],[9.783470],[-7.534494],[-8.086667],[-8.465082],[9.238108],[-8.896088],[1.634196],[-4.298004],[1.583137],[-1.504176],[0.603726],[5.828163],[-0.379430],[-9.618005],[-8.698004],[-8.788867],[9.772111],[-9.051477],[6.148110],[5.153935],[-6.626224],[2.035729],[-8.551533],[5.344147],[-5.968707],[9.701048],[-6.092574],[3.887520],[-2.382018],[6.499964],[-1.868039],[8.003958],[-0.611663],[5.092629],[-5.622990],[-5.048815],[-2.494135],[3.996327],[7.510422],[2.075668],[-4.938040],[-5.434677],[3.467901],[3.740927],[6.088532],[-8.940895],[-3.519054],[6.890291],[8.587332],[0.246621],[7.017561],[-3.618490],[1.097964],[-8.514644],[6.177701],[-2.756797],[-4.796886],[-2.280225],[9.959386],[7.245281],[-8.769340],[-1.038480],[5.947160],[8.629471],[-4.916027],[4.810531],[-0.476272],[9.569202],[0.684176],[-1.378437],[6.919611],[-6.804222],[0.493569],[-0.004396],[-0.730255],[3.035430],[2.933845],[-4.596445],[0.541545],[-6.330302],[-6.371886],[6.685463],[6.986647],[-7.720599],[-4.375295],[2.002305],[-5.025420],[4.460119],[-8.944613],[-0.886038],[-8.382399],[7.308083],[1.439440],[-9.953548],[3.158456],[-1.358429],[-4.798488],[-5.637744],[-2.097966],[-6.888434],[-0.921754],[1.389558],[0.634857],[-9.824455],[-3.977316],[2.354506],[8.192955],[-6.714347],[-6.081302],[4.948601],[1.135135],[3.400774],[-1.819029],[-7.513683],[-9.985625],[6.482207],[-7.311831],[0.696032],[-7.076616],[-1.153564],[-7.138434],[8.362285],[-1.436847],[-2.555427],[-5.460897],[6.412744],[6.103646],[-2.934919],[-6.281373],[5.899142],[5.297809],[5.571761],[3.722001],[-3.451769],[8.471388],[-0.305995],[-0.966620],[8.908629],[7.146478],[7.185661],[1.353192],[-9.965958],[3.216948],[-1.325301],[9.117968],[-3.199000],[9.288333],[-3.242054],[9.138228],[-7.825510],[4.220283],[-1.059609],[-3.556699],[8.572586],[-2.735370],[2.464303],[9.317136],[-0.536577],[-6.958703],[-8.791236],[-5.537460],[8.080127],[5.568732],[-9.524259],[-6.195832],[9.768333],[5.175170],[1.753978],[0.180288],[-6.172742],[8.380195],[6.135724],[7.830850],[2.572677],[4.287773],[9.681682],[-3.108422],[1.205023],[-7.127573],[-6.115917],[-7.746131],[9.242612],[-2.535474],[2.158995],[7.507726],[3.834621],[9.266076],[9.947657],[-5.756511],[9.598759],[-1.479829],[-5.114980],[1.224291],[-3.435129],[9.905950],[-9.815321],[-8.777650],[-3.114961],[-0.331033],[-4.867288],[9.982046],[-7.771552],[6.072038],[1.933251],[-8.868283],[0.947027],[0.683754],[7.199353],[6.368247],[-8.886642],[1.148774],[-4.723826],[-0.642197],[-0.680097],[-9.850578],[-2.066189],[-8.664246],[-0.464518],[-4.927808],[1.114996],[-0.558887],[-0.056407],[-6.032456],[-6.398740],[8.382388],[7.566257],[0.468128],[3.196164],[-0.020771],[-4.612426],[-4.135841],[-3.231714],[2.561443],[-0.557938],[-1.500300],[-6.682126],[-7.255364],[-5.469625],[6.740488],[-6.657655],[6.604192],[1.428334],[1.674651],[2.704081],[-3.496389],[-5.423366],[-7.786295],[9.539874],[-3.221041],[-6.108409],[7.037423],[3.762121],[2.847375],[7.529497],[3.336446],[8.492547],[1.479992],[6.505203],[3.193578],[-8.391581],[9.930124],[7.144526],[6.333847],[1.097579],[-9.091896],[-8.736444],[8.384507],[-6.413786],[9.591204],[8.570091],[4.270168],[7.512054],[9.811229],[-7.089197],[4.022322],[-2.298263],[2.917380],[5.473084],[-2.885741],[-8.798834],[-5.420040],[-9.399935],[9.410087],[-6.078065],[-6.400998],[6.050557],[-7.315244],[-4.105276],[4.454680],[9.239628],[2.952029],[4.873187],[0.392241],[9.118371],[-1.935918],[-8.526736],[-4.080571],[-0.332578],[4.949689],[-2.697108],[-5.925888],[-8.590429],[4.711050],[-1.363870],[9.992837],[3.529226],[6.205853],[3.666573],[3.938742],[-9.770197],[7.436863],[-3.878054],[4.886436],[1.955461],[3.579986],[6.958314],[6.247866],[1.047912],[-3.517868],[0.834670],[8.722985],[0.181798],[-5.782454],[6.309676],[9.145946],[9.991505],[-1.400042],[1.506984],[-0.104608],[0.657262],[-2.799511],[7.215360],[-2.796451],[-0.142441],[-5.520449],[-7.932611],[3.933959],[-1.267114],[-0.205581],[1.244617],[1.999490],[-8.454402],[9.899015],[7.163321],[-0.399255],[1.022954],[2.474774],[-5.328588],[5.753565],[9.361480],[0.861503],[2.462642],[8.812177],[-5.417811],[8.659562],[9.863663],[-3.990087],[0.905703],[4.506756],[2.799963],[7.062784],[5.819711],[0.629898],[-5.276495],[-2.882740],[-4.660934],[6.578572],[-9.883665],[5.457531],[-1.851878],[2.298879],[2.123359],[-4.405548],[0.909817],[1.195323],[8.730905],[2.397155],[-3.072916],[6.322334],[-3.616589],[-5.753394],[9.804597],[-2.682375],[-3.108563],[-5.362893],[6.087438],[-3.350927],[2.968186],[6.429650],[3.633341],[4.034593],[6.737147],[0.026908],[9.528942],[-0.099078],[-1.733530],[-8.194816],[-0.311785],[-1.834863],[-7.173102],[7.649940],[-1.729651],[-3.318186],[-6.430465],[-2.830277],[-6.986273],[0.951649],[-5.762170],[4.444219],[9.883021],[2.353194],[-0.676145],[1.500631],[7.994690],[1.868316],[-2.615914],[4.186478],[7.922585],[-7.438402],[3.351369],[0.340507],[-1.148608],[6.432515],[6.284243],[-4.567225],[-0.091125],[-0.280146],[6.567765],[4.506808],[2.451029],[-3.549314],[9.981397],[-0.938446],[1.564750],[5.097707],[1.711791],[-6.564366],[9.960397],[1.904412],[6.464392],[0.936292],[4.283998],[-5.831894],[0.316044],[7.693014],[2.340361],[-4.811534],[7.304424],[0.134857],[7.361176],[3.423093],[1.001083],[-5.759269],[8.228428],[0.457051],[6.804940],[-4.651754],[-5.584813],[3.805749],[-8.871737],[6.350794],[-8.789326],[6.315785],[-4.169503],[-9.559966],[4.942920],[8.318087],[8.679168],[4.367187],[0.865038],[9.928296],[4.029112],[2.294848],[3.352427],[3.417795],[-2.290522],[8.483815],[-0.745152],[-3.565661],[1.052779],[-9.736975],[0.504562],[6.438510],[4.631616],[2.705273],[1.799981],[3.157626],[7.247968],[-0.408236],[8.215823],[-3.736945],[-5.404887],[-2.279520],[-2.109544],[-7.612220],[8.567771],[-5.737922],[-6.054490],[6.225817],[-5.721476],[-9.128023],[-8.281935],[-8.845004],[-4.225200],[-9.846570],[-4.148590],[9.457209],[-1.656617],[0.697110],[8.239194],[-1.220226],[-9.752791],[2.021814],[-5.270675],[-9.267275],[6.791795],[-8.073685],[-6.530190],[0.109747],[4.281368],[-3.320452],[2.954908],[7.719304],[5.447245],[-3.327858],[-7.534967],[0.443457],[-8.372086],[7.316483],[-0.967534],[4.387915],[-5.921104],[9.348097],[3.050461],[4.067051],[-9.556604],[-7.544118],[-4.046841],[2.711564],[2.983330],[-9.786135],[-0.397623],[-5.857772],[-5.756252],[6.763558],[-7.559036],[-4.030735],[-7.954522],[5.807490],[9.069107],[-1.341367],[6.866175],[4.317050],[-8.381768],[8.838064],[-7.707597],[9.868280],[-6.858200],[0.010376],[6.420780],[1.762869],[-3.988409],[-7.891756],[8.026489],[-5.653679],[8.323108],[-2.703858],[8.912572],[-7.613972],[-8.460515],[2.859917],[3.550358],[8.674593],[9.339866],[-5.104730],[3.085118],[-7.119969],[0.422672],[-1.076187],[-0.019961],[6.294182],[3.803154],[-8.743382],[5.652686],[0.937150],[7.840009],[2.447293],[5.895992],[-1.520524],[0.048161],[-2.621417],[-0.477723],[-8.490511],[9.440827],[-8.657434],[9.796839],[2.941882],[9.039078],[-3.320171],[-6.969840],[-2.920960],[-0.786333],[-7.755483],[-6.857179],[-5.914168],[4.056971],[-5.577284],[5.892206],[-2.190977],[5.322171],[9.946761],[-4.715290],[7.952857],[-3.548764],[1.427688],[2.264223],[-1.023829],[6.491732],[-4.101608],[0.880918],[4.725421],[5.886377],[-9.376756],[4.639966],[3.743954],[8.367903],[4.374219],[-6.029198],[3.565794],[-2.719612],[2.956167],[-9.447444],[-6.444941],[9.196004],[9.765174],[3.914290],[3.275434],[-9.483182],[-6.184549],[-1.202540],[-3.918753],[-3.407691],[-5.442284],[0.337635],[9.830833],[-6.784806],[0.258872],[5.057609],[-5.780294],[-2.776279],[2.552806],[-1.635847],[-1.930944],[7.277735],[-1.890221],[9.352446],[3.249230],[1.463998],[-3.517218],[-6.695682],[-2.047991],[-3.061386],[3.158426],[7.738684],[-3.342943],[-3.364906],[-6.829822],[3.316294],[5.929729],[9.133476],[-6.032014],[4.838942],[-8.668412],[5.311187],[8.091264],[-4.295709],[-2.909262],[3.637645],[-9.762026],[6.534017],[6.489631],[2.968158],[6.372591],[-5.049644],[4.270975],[-4.016265],[-1.799700],[7.194984],[-4.858577],[9.479669],[-2.159765],[-4.172453],[0.362984],[8.213293],[-7.702671],[-0.791942],[-2.865014],[5.175359],[-0.102230],[-3.030866],[1.159116],[-7.492632],[-0.888575],[-8.994697],[-7.355462],[-9.393056],[-3.576058],[-9.908531],[3.757216],[5.792818],[-3.717731],[3.902321],[1.365773],[-2.900239],[-4.378823],[7.112402],[-6.069819],[-0.322472],[-5.566120],[2.749474],[-8.869736],[7.232878],[-8.415850],[-2.959718],[7.779295],[-7.497123],[-5.721387],[-4.460536],[-0.664449],[9.708972],[-1.188356],[3.953533],[-6.139842],[8.821504],[-0.577521],[-2.162098],[0.627150],[0.014042],[7.606788],[0.145295],[-6.383636],[-1.766946],[3.576322],[-9.690959],[-6.684113],[-4.669247],[9.881156],[1.788927],[2.747286],[-5.021238],[5.445872],[0.772997],[-7.492876],[0.789447],[-4.727196],[1.794379],[-5.246915],[1.978234],[-2.111158],[7.070552],[-7.857803],[8.696077],[1.308902],[3.871505],[-9.411548],[4.858026],[-7.303613],[-7.591897],[3.546911],[-0.004590],[-7.135707],[-4.074546],[-8.537623],[-4.380519],[-8.808733],[8.214198],[9.866830],[-5.333621],[3.220099],[-0.362324],[5.364180],[2.041958],[-5.135403],[-1.126662],[2.878777],[6.729316],[-1.773076],[-1.493451],[-7.298247],[-9.371772],[9.197915],[1.739726],[-2.325705],[7.469750],[8.572554],[0.013569],[8.319700],[9.953379],[-6.920669],[-0.178035],[-2.127653],[7.024302],[5.119683],[7.081163],[-0.792854],[-9.372296],[3.784844],[3.268182],[8.302318],[5.346652],[-0.135395],[1.455432],[-1.394198],[1.555326],[7.353904],[-1.402479],[0.163002],[-6.959931],[-9.835892],[-1.142144],[2.296809],[-5.552688],[-9.754703],[5.301960],[-0.036295],[7.609513],[8.281763],[0.929311],[8.905592],[2.750867],[-5.711628],[-2.085595],[1.042001],[-9.099795],[5.784861],[2.954736],[-9.154312],[5.362471],[4.810317],[-1.358852],[-3.084852],[-5.232616],[6.007466],[1.048165],[-5.866694],[5.099194],[-8.359290],[-3.505118],[-4.738895],[8.475476],[-7.799513],[2.125912],[-2.274091],[7.841489],[9.329522],[-5.774546],[8.935867],[8.873133],[-3.034472],[8.117092],[7.160821],[9.439568],[8.239828],[-9.270069],[-2.094577],[5.410716],[-6.501566],[3.034566],[1.135651],[-4.875471],[8.604352],[-5.578447],[9.780304],[9.877736],[-2.334682],[-4.918593],[8.826855],[-7.249987],[4.831821],[-0.723626],[-7.147829],[-6.912382],[-3.869423],[-7.807480],[8.900302],[-9.012992],[6.765013],[0.680979],[6.648813],[-1.710464],[-5.287284],[2.375242],[-7.543665],[-5.071457],[-2.330401],[9.518835],[-5.815789],[7.625140],[-4.581757],[-0.394773],[-9.804091],[-7.719523],[-8.371700],[-0.358330],[-2.858940],[7.726054],[2.917804],[-7.387814],[-9.002204],[-6.887579],[3.281815],[-6.872394],[0.677278],[2.691227],[9.762533],[1.078171],[-3.763339],[0.918158],[-4.031972],[-8.654065],[-0.262783],[5.120222],[3.975571],[0.163164],[-0.570872],[-6.649514],[9.022271],[6.421910],[4.551528],[-5.075844],[-3.050828],[-4.447821],[0.113902],[9.506198],[-7.663000],[-6.242132],[-5.813502],[-8.141112],[8.124069],[6.048490],[5.611216],[-8.941590],[-0.475505],[-1.661259],[-6.533405],[-3.315571],[-0.625818],[3.314707],[-3.240086],[2.802375],[7.461999],[0.828925],[5.045545],[6.050447],[4.554276],[-3.448510],[-0.484570],[-8.799430],[-5.871929],[-0.585419],[5.664852],[-5.135455],[-1.302586],[-0.876713],[-2.449918],[4.575714],[5.320027],[4.536224],[-3.193305],[-4.207865],[-7.557986],[8.462745],[6.810552],[4.398432],[-5.162890],[-8.091139],[7.807405],[4.527761],[-0.909210],[-8.562263],[-6.721005],[-8.739049],[9.803691],[-2.470628],[-6.809897],[9.651432],[-5.519941],[-2.627936],[-3.230236],[9.641857],[1.793704],[6.527368],[-3.151716],[-7.088150],[-3.411620],[-2.354177],[-8.606722],[-3.046372],[-5.245748],[-5.436899],[2.847329],[3.104590],[-5.456942],[7.305265],[-3.019077],[7.103898],[-0.394461],[-5.093005],[6.140760],[-0.124828],[5.388447],[-9.001186],[4.524257],[1.259854],[-7.505919],[5.227013],[-1.524386],[6.646833],[-8.890591],[0.231954],[7.874142],[-8.080296],[8.096963],[0.024225],[-6.234122],[-9.738320],[-7.149186],[6.616014],[-8.519157],[5.119011],[-8.832627],[-4.617082],[-6.053984],[1.655879],[4.643556],[2.319878],[8.906956],[-5.661301],[-3.700492],[-1.342042],[6.615472],[-4.652429],[2.244808],[-8.060039],[6.642754],[-7.829191],[-3.906020],[-8.065600],[-5.252385],[6.742118],[-4.854311],[2.404051],[-7.837988],[6.736022],[4.373375],[6.236433],[-2.234469],[-1.094461],[-2.548682],[6.299211],[-2.165402],[3.695296],[8.312420],[2.588454],[-1.693313],[7.537078],[3.317881],[-9.117498],[-1.489225],[-6.689128],[8.639625],[6.711243],[-1.106600],[-0.104427],[-8.455537],[-4.244822],[8.891997],[0.386874],[3.394813],[0.982343],[9.167997],[-4.878081],[2.753869],[-7.663823],[-0.253418],[7.332064],[5.494710],[-8.075769],[-5.180822],[-7.346467],[-5.323545],[0.711175],[-4.357079],[-8.168808],[-5.163265],[1.163010],[-6.789727],[-8.809649],[8.310670],[-8.128326],[-6.666328],[7.194130],[-7.575720],[5.647776],[-9.695227],[9.823816],[-4.727954],[0.586323],[4.857746],[-8.585566],[1.799836],[8.834851],[6.496468],[8.580459],[-2.637915],[8.757835],[4.091443],[-4.755283],[-4.364573],[-4.059605],[5.703606],[6.212967],[-2.259784],[9.375910],[7.016943],[3.743898],[0.784673],[-1.256649],[6.167022],[8.267979]], dtype = "float64")#candidate|4945|(1680, 1)|const|float64
call_4944 = func_1096_call(relay.reshape(const_4945.astype('float64'), [15, 7, 16]))
call_4946 = func_1096_call(relay.reshape(const_4945.astype('float64'), [15, 7, 16]))
func_1299_call = mod.get_global_var('func_1299')
func_1303_call = mutated_mod.get_global_var('func_1303')
var_4948 = relay.var("var_4948", dtype = "uint8", shape = (14, 160))#candidate|4948|(14, 160)|var|uint8
call_4947 = relay.TupleGetItem(func_1299_call(relay.reshape(var_4948.astype('uint8'), [14, 10, 16]), relay.reshape(var_4948.astype('uint8'), [14, 10, 16]), ), 3)
call_4949 = relay.TupleGetItem(func_1303_call(relay.reshape(var_4948.astype('uint8'), [14, 10, 16]), relay.reshape(var_4948.astype('uint8'), [14, 10, 16]), ), 3)
uop_4953 = relay.erf(call_4928.astype('float32')) # shape=(14, 12, 2)
uop_4955 = relay.erf(call_4929.astype('float32')) # shape=(14, 12, 2)
uop_4958 = relay.log10(call_4947.astype('float64')) # shape=(14, 10, 16)
uop_4960 = relay.log10(call_4949.astype('float64')) # shape=(14, 10, 16)
func_2210_call = mod.get_global_var('func_2210')
func_2215_call = mutated_mod.get_global_var('func_2215')
var_4971 = relay.var("var_4971", dtype = "float64", shape = (432,))#candidate|4971|(432,)|var|float64
const_4972 = relay.const([6,10,-8,6,4,1,-3,-4,-7,9,1,-9,-5,-3,1,-10,2,6,6,-7,7,-10,10,-5,4,7,5,4,1,9,-9,-8,-8,-2,-4,5,-8,-4,-10,7,2,1,2,-7,7,4,6,-9], dtype = "uint8")#candidate|4972|(48,)|const|uint8
var_4973 = relay.var("var_4973", dtype = "uint8", shape = (288,))#candidate|4973|(288,)|var|uint8
const_4974 = relay.const([[4.488327],[-3.789567],[9.378775],[-2.638121],[1.990734],[-1.651381],[7.901548],[-4.864139],[0.519741],[4.940539],[5.272444],[6.481914],[-2.159425],[5.778247],[-1.503246],[-8.075049],[-7.937321],[7.936345],[-2.183010],[-4.950729],[-5.656709],[-8.288231],[-7.261427],[8.685097],[-1.019931],[7.271736],[-3.536408],[-5.467128],[7.782461],[5.855631],[0.728867],[8.437368],[-8.322381],[8.233312],[-4.578843],[-3.454945],[4.662862],[-3.960929],[6.896725],[2.042012],[-5.095127],[-6.919993],[7.537010],[7.504040],[-0.923448],[6.189942],[-0.203150],[2.021750],[9.691859],[6.717702],[0.536630],[9.692511],[9.977230],[-6.217745],[1.670622],[-7.730409],[-2.253141],[-2.014617],[0.698166],[-0.714875],[7.173273],[3.483294],[-2.111580],[-6.574525],[-6.448213],[3.342518],[-4.794635],[-1.291851],[-9.802506],[-9.684675],[-8.173547],[9.511882],[8.228208],[-4.164382],[-2.778011],[2.656243],[-5.299984],[0.277461],[0.349588],[6.942989],[-6.642862],[4.821876],[5.601645],[-1.269855],[-4.947210],[0.641484],[6.218911],[7.355569],[-8.000290],[-6.396080],[-0.601431],[-1.883905],[-2.151722],[3.444977],[-0.841380],[2.212296],[3.809610],[6.858194],[-7.410255],[-8.119014],[-5.810015],[8.141639],[1.882573],[8.166984],[7.436871],[-8.465901],[4.003297],[-9.726669],[-4.095712],[2.610400],[-7.530666],[8.896389],[-7.999969],[-7.909685],[-8.692896],[5.268617],[-5.856675],[0.930709],[-2.820117],[-4.099078],[-6.621990],[3.559477],[7.020582],[0.536795],[-5.797942],[-1.398854],[-8.058752],[-0.058179],[-4.614003],[8.953719],[-1.248935],[-4.479496],[-9.909554],[-3.698044],[-4.656505],[-9.951868],[5.370761],[-9.049625],[6.044507],[-3.018403],[-1.329316],[6.031776],[3.014907],[8.034522],[-2.459047],[-3.713822],[-1.161127],[-9.047470],[-0.743878],[8.357672]], dtype = "float64")#candidate|4974|(150, 1)|const|float64
call_4970 = relay.TupleGetItem(func_2210_call(relay.reshape(var_4971.astype('float64'), [12, 4, 9]), relay.reshape(const_4972.astype('uint8'), [48, 1]), relay.reshape(var_4973.astype('uint8'), [288,]), relay.reshape(const_4974.astype('float64'), [150,]), ), 5)
call_4975 = relay.TupleGetItem(func_2215_call(relay.reshape(var_4971.astype('float64'), [12, 4, 9]), relay.reshape(const_4972.astype('uint8'), [48, 1]), relay.reshape(var_4973.astype('uint8'), [288,]), relay.reshape(const_4974.astype('float64'), [150,]), ), 5)
func_4422_call = mod.get_global_var('func_4422')
func_4425_call = mutated_mod.get_global_var('func_4425')
const_4995 = relay.const([5.725090,6.225681,1.730326,-3.601123,-0.365596,8.183279,8.679584,-7.262229,9.915562,3.030640,-5.028079,-4.106740,1.237051,4.677397,-6.600738,6.861923,-5.395129,7.944795,9.030837,9.715122,-9.586286,-6.309904,-6.525472,-1.498836,-9.420634,8.632604,3.383389,-9.929604,-2.454988,3.089178,-1.618548,1.408998,9.213637,-8.923049,-6.332696,-5.611008,-9.558384,-9.574789,3.947267,-0.998825,0.499177,-4.578123,-5.621992,7.084579,-2.497340,7.366330,-4.375474,-3.232740,-9.610853,-2.036431,-7.986526,7.134955,9.746487,-3.545685,-1.334588,2.180536,-9.087391,-4.560024,-4.379859,8.487132,-0.908453,3.470295,4.974095,-0.443265,0.003258,9.595282,3.199988,-4.124728,-5.244169,4.193090,-5.243938,-8.617893,3.001375,0.336425,9.418457,-9.567160,5.377686,-0.751776,8.535968,-4.759885,1.456840,2.688046,-2.087807,-4.156885,-0.908275,4.367185,-3.199160,0.098616,-1.961672,1.309984,5.905323,0.492477,-3.793207,-1.611848,-7.179471,-7.687837,-6.769351,-7.166685,4.802881,9.041976,7.801090,-9.164359,0.528271,0.920277,-2.538574,8.249853,-6.602902,9.251201,-7.642473,8.747144,-0.815517,-5.377637,5.937278,-7.161543,3.400077,-2.474985,-9.121508,-5.591909,-9.183131,-4.542932,6.914602,-9.102009,-1.241907,-8.437515,0.027782,-0.363996,1.848155,-9.237720,5.576711,4.751171,9.120746,9.065802,5.608783,6.627719,4.158161,-0.193042,2.581479,0.840321,-9.395079,-6.084248,0.924806,-3.547845,3.121815,3.479990,5.474966,-7.237479,-3.898854,-1.166020,2.277307,1.474509,7.825184,3.724445,-1.391876,5.238673,-2.549663,9.156771,-9.123611,-1.211616,-2.606761,-3.297823,5.509956,-7.902478,0.333360,3.065603,-5.735142,0.030496,-2.769507,-7.209672,2.140241,-6.188545,6.584199,4.369667,8.020902,-5.943768,7.842234,7.186365,4.143116,-7.700619,-9.098355,2.921185,-5.643553,4.265807,-7.466661,-7.242365,9.127192,6.528834,-4.753931,-0.488852,0.656773,9.186433,0.099981,9.498250,3.602794,7.132916,8.071883,-9.197711,-3.466676,-9.072811,-1.129006,-9.916473,6.266411,-3.412555,7.737823,9.228389,8.635192,9.626147,9.415139,9.302135,0.758592,5.490559,-0.437832,-9.449902,2.282822,4.784957,5.815790,3.813254,4.205215,-7.476759,-8.786329,4.184603,2.149639,-3.125635,4.322887,5.260132,1.594287,2.006636,-3.776189,-6.733421,9.958401,1.280798,1.581835,7.200002,4.036709,9.504044,-2.597653,6.897113,-1.159012,-9.059716,-1.698198,-2.174103,-9.281816,7.331560,1.290422,-2.116840,7.220107,-6.282465,-9.867481,3.077374,8.668301,8.598241,-6.092370,5.543336,3.170605,-4.533183,2.266202,3.139007,2.555950,3.625714,-6.600119,6.173667,1.411968,-8.923302,1.631354,8.792027,7.406943,-2.622802,-8.535358,-3.805109,-6.618436,2.347942,4.172414,6.595713,4.049778,5.843748,0.234811,7.765212,-1.377860,-2.915344,6.281337,7.240384,7.933844,-8.668858,4.977812,0.726097,-9.161424,-5.698451,8.200234,-3.911194,-5.330090,-3.459943,-3.896063,-5.273312,5.127408,-8.326864,7.460160,5.991047,-3.533795,-3.413686,-0.598889,9.725707,-5.675370,-2.708938,6.683719,-6.426928,4.463128,3.521520,-0.194365,-1.037400,8.712021,-3.354494,-2.840703,3.585266,-7.670906,4.899693,3.699999,9.969831,-9.069300,1.746487,-3.534287,1.089336,-7.224141,7.526467,-4.057115,-1.976576,-5.615850,-4.710378,8.403536,0.002378,9.906682,-5.131536,6.281267,-1.232477,-7.782273,-3.265881,0.905513,-2.810507,-5.928480,-7.811643,1.597585,-5.383718,-1.169391,9.195831,-6.926656,7.548028,7.456857,-9.149954,2.156905,-7.418497,-6.112992,-6.805556,-0.707485,6.177137,-3.829855,6.484000,9.103898,9.478483,4.527678,0.238267,-9.862673,4.168428], dtype = "float32")#candidate|4995|(360,)|const|float32
call_4994 = relay.TupleGetItem(func_4422_call(relay.reshape(const_4995.astype('float32'), [8, 15, 3]), relay.reshape(var_4973.astype('uint8'), [288,]), ), 3)
call_4996 = relay.TupleGetItem(func_4425_call(relay.reshape(const_4995.astype('float32'), [8, 15, 3]), relay.reshape(var_4973.astype('uint8'), [288,]), ), 3)
bop_5003 = relay.logical_or(uop_4938.astype('bool'), relay.reshape(call_4928.astype('bool'), relay.shape_of(uop_4938))) # shape=(14, 12, 2)
bop_5006 = relay.logical_or(uop_4940.astype('bool'), relay.reshape(call_4929.astype('bool'), relay.shape_of(uop_4940))) # shape=(14, 12, 2)
uop_5013 = relay.asin(bop_5003.astype('float64')) # shape=(14, 12, 2)
uop_5015 = relay.asin(bop_5006.astype('float64')) # shape=(14, 12, 2)
func_2305_call = mod.get_global_var('func_2305')
func_2308_call = mutated_mod.get_global_var('func_2308')
var_5018 = relay.var("var_5018", dtype = "float32", shape = (1716,))#candidate|5018|(1716,)|var|float32
call_5017 = relay.TupleGetItem(func_2305_call(relay.reshape(var_5018.astype('float32'), [13, 12, 11])), 0)
call_5019 = relay.TupleGetItem(func_2308_call(relay.reshape(var_5018.astype('float32'), [13, 12, 11])), 0)
output = relay.Tuple([call_4944,const_4945,var_4948,uop_4953,uop_4958,call_4970,var_4971,const_4972,var_4973,const_4974,call_4994,const_4995,uop_5013,call_5017,var_5018,])
output2 = relay.Tuple([call_4946,const_4945,var_4948,uop_4955,uop_4960,call_4975,var_4971,const_4972,var_4973,const_4974,call_4996,const_4995,uop_5015,call_5019,var_5018,])
func_5024 = relay.Function([var_4948,var_4971,var_4973,var_5018,], output)
mod['func_5024'] = func_5024
mod = relay.transform.InferType()(mod)
var_5025 = relay.var("var_5025", dtype = "uint8", shape = (14, 160))#candidate|5025|(14, 160)|var|uint8
var_5026 = relay.var("var_5026", dtype = "float64", shape = (432,))#candidate|5026|(432,)|var|float64
var_5027 = relay.var("var_5027", dtype = "uint8", shape = (288,))#candidate|5027|(288,)|var|uint8
var_5028 = relay.var("var_5028", dtype = "float32", shape = (1716,))#candidate|5028|(1716,)|var|float32
output = func_5024(var_5025,var_5026,var_5027,var_5028,)
func_5029 = relay.Function([var_5025,var_5026,var_5027,var_5028,], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4618_call = mod.get_global_var('func_4618')
func_4619_call = mutated_mod.get_global_var('func_4619')
call_5079 = func_4618_call()
call_5080 = func_4618_call()
const_5087 = relay.const([[[4.335219,4.352697],[8.614098,9.570941],[0.200413,-3.577872],[-1.881853,-7.542733],[-0.620242,-5.411393],[8.082215,8.253477],[6.491562,6.301968],[3.679212,-3.723208],[-1.382268,-2.909543],[-1.931779,7.996335],[-1.462378,9.764758],[5.265633,7.659929]],[[-1.205067,-0.072350],[-5.758430,-5.809371],[-9.306183,-1.122586],[-1.585343,-2.590694],[-8.704852,1.851111],[-9.788924,-3.673146],[-9.536381,5.581568],[8.698912,6.780941],[-9.441829,-0.197316],[-9.501110,-9.235274],[-9.614034,-3.299601],[-4.314873,2.572855]],[[5.435699,2.135932],[-9.280883,-4.323400],[-6.762034,-0.112215],[-5.919860,4.559552],[0.523705,1.294726],[-4.606165,-5.020680],[3.906001,-1.965296],[2.834811,-3.038005],[-4.188860,9.708431],[-2.087513,6.328130],[1.668176,-7.334603],[-7.081161,5.585474]],[[1.000601,5.465105],[-6.603438,-0.348334],[-6.138443,8.878265],[9.574896,7.805969],[-7.965467,-2.996328],[-7.902899,2.481435],[4.195816,-2.576488],[9.408652,5.819000],[-9.577410,-7.671398],[8.702602,-3.714932],[1.447441,1.554611],[-9.536034,-0.126902]],[[2.020226,8.033663],[1.366598,-4.097359],[-2.138191,-7.695472],[-8.962125,2.592784],[-7.437025,0.988202],[-6.830778,1.258222],[-4.554947,-2.103809],[8.776856,5.395605],[6.871190,1.110160],[6.385208,5.954272],[-2.911176,0.848818],[-5.932176,2.922516]],[[-7.427340,-3.446411],[9.489031,7.438460],[-1.910949,-0.709932],[-3.684604,8.209752],[-8.478943,-4.195031],[-3.368109,6.374204],[3.116204,1.683876],[8.114492,-8.567629],[9.941169,8.950433],[3.773212,-3.592545],[-6.579146,9.532107],[-6.581029,3.313218]],[[4.574514,-3.718263],[0.767673,-5.149852],[-7.911762,-7.045550],[9.894205,-3.084533],[5.128484,3.275469],[-9.675870,4.021572],[-0.141773,5.927243],[6.147818,8.377041],[2.254098,-3.668837],[3.300142,6.247261],[-9.477373,-8.865213],[7.281593,-5.078351]],[[-4.230150,0.460230],[-9.319657,7.088111],[9.374266,6.243362],[0.499787,-7.324870],[4.290693,-5.042866],[4.171561,-7.460301],[3.482107,1.843149],[1.309866,-5.263101],[6.606130,-4.940443],[-7.309061,-0.042177],[6.905620,-9.301001],[-2.746791,4.708882]],[[0.223665,6.094821],[6.966643,-4.721224],[-9.212231,8.157271],[2.329801,0.831405],[5.447059,-6.417468],[4.664702,-5.768284],[4.668166,-9.596382],[8.882868,6.483685],[2.143335,5.959662],[-6.480920,6.388514],[-9.797118,9.526471],[-7.645132,-6.897145]],[[-7.773233,4.436111],[-3.655684,-8.363313],[-2.980287,2.574719],[-6.738163,-9.453229],[6.872388,3.389176],[1.322285,-2.643740],[9.511699,-0.331623],[-0.697246,-6.657897],[9.689575,4.894914],[8.021645,8.754613],[-5.502012,0.870093],[2.721186,-2.579154]],[[2.267870,1.144370],[-0.692959,-6.676245],[2.543545,-0.292257],[-8.707402,-0.421441],[-3.229422,7.670663],[-2.085613,-5.771455],[5.354986,1.689130],[0.710305,-2.198639],[5.462632,-5.025823],[2.351324,-2.354237],[1.824312,3.055816],[6.102363,2.042560]],[[4.664487,9.477612],[-7.517343,-9.505459],[4.220187,-4.825024],[8.001389,4.908508],[-2.520873,-8.310921],[7.980331,-8.537267],[7.742499,-5.774291],[-1.162323,4.903557],[-8.237536,7.962666],[-0.281947,-7.987140],[5.007420,-5.533034],[1.891981,-7.435862]],[[6.066496,-6.194730],[7.368412,8.991727],[-4.093421,5.078483],[-0.031088,-0.480780],[3.198392,5.870926],[2.123526,5.612588],[-4.825943,2.285732],[6.165026,-0.512342],[-7.180833,2.246604],[1.676319,1.252443],[-7.460933,-1.467796],[3.280074,6.867725]],[[-0.151670,-7.290676],[0.031622,9.723272],[3.636722,6.089574],[-6.294461,-2.208887],[-6.104389,-8.240290],[-2.015412,4.045578],[-7.945941,1.279132],[-5.018402,-1.646424],[8.723775,-7.527015],[-8.980741,0.057523],[-0.772559,-0.796035],[-3.292171,-3.765754]]], dtype = "float32")#candidate|5087|(14, 12, 2)|const|float32
bop_5088 = relay.maximum(call_5079.astype('uint8'), relay.reshape(const_5087.astype('uint8'), relay.shape_of(call_5079))) # shape=(14, 12, 2)
bop_5091 = relay.maximum(call_5080.astype('uint8'), relay.reshape(const_5087.astype('uint8'), relay.shape_of(call_5080))) # shape=(14, 12, 2)
bop_5097 = relay.divide(bop_5088.astype('float32'), relay.reshape(const_5087.astype('float32'), relay.shape_of(bop_5088))) # shape=(14, 12, 2)
bop_5100 = relay.divide(bop_5091.astype('float32'), relay.reshape(const_5087.astype('float32'), relay.shape_of(bop_5091))) # shape=(14, 12, 2)
output = relay.Tuple([bop_5097,])
output2 = relay.Tuple([bop_5100,])
func_5108 = relay.Function([], output)
mod['func_5108'] = func_5108
mod = relay.transform.InferType()(mod)
output = func_5108()
func_5109 = relay.Function([], output)
mutated_mod['func_5109'] = func_5109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4636_call = mod.get_global_var('func_4636')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_5125 = func_4636_call()
call_5126 = func_4636_call()
output = call_5125
output2 = call_5126
func_5129 = relay.Function([], output)
mod['func_5129'] = func_5129
mod = relay.transform.InferType()(mod)
mutated_mod['func_5129'] = func_5129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5129_call = mutated_mod.get_global_var('func_5129')
call_5130 = func_5129_call()
output = call_5130
func_5131 = relay.Function([], output)
mutated_mod['func_5131'] = func_5131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4628_call = mod.get_global_var('func_4628')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_5179 = relay.TupleGetItem(func_4628_call(), 0)
call_5180 = relay.TupleGetItem(func_4630_call(), 0)
uop_5181 = relay.log10(call_5179.astype('float64')) # shape=(14, 12, 2)
uop_5183 = relay.log10(call_5180.astype('float64')) # shape=(14, 12, 2)
func_3456_call = mod.get_global_var('func_3456')
func_3464_call = mutated_mod.get_global_var('func_3464')
var_5190 = relay.var("var_5190", dtype = "float32", shape = (12, 30))#candidate|5190|(12, 30)|var|float32
const_5191 = relay.const([True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True], dtype = "bool")#candidate|5191|(2100,)|const|bool
var_5192 = relay.var("var_5192", dtype = "uint8", shape = (48,))#candidate|5192|(48,)|var|uint8
const_5193 = relay.const([[8],[-3],[9],[7],[10],[-8],[-10],[-1],[8],[7],[7],[1],[-3],[3],[-1],[-5],[10],[-9],[1],[5],[-7],[-10],[-9],[-3],[9],[2],[2],[-7],[10],[-8],[-6],[10],[-10],[3],[7],[3],[-2],[-1],[3],[9],[-4],[9],[-4],[-2],[10],[-7],[-3],[-2],[-8],[-4],[-6],[8],[-9],[-8],[-5],[-8],[10],[6],[8],[10],[9],[6],[-6],[7],[-5],[8],[-10],[-9],[7],[3],[8],[10],[1],[-2],[5],[-8],[-1],[6],[-3],[1],[6],[1],[-8],[-4],[2],[7],[-3],[8],[3],[2],[5],[-2],[-4],[-4],[-3],[-7],[8],[4],[-2],[3],[8],[-4],[8],[-4],[3],[1],[-7],[4],[1],[-8],[-5],[-3],[5],[-9],[6],[1],[-1],[-6],[10],[-2],[-7],[2],[-5],[-5],[4],[-1],[8],[-2],[-3],[-10],[-4],[-4],[9],[-3],[-1],[1],[-7],[-4],[-9],[9],[2],[-6],[5],[-3],[-10],[9],[7],[8],[5],[-6],[-6],[8],[2],[-6],[-1],[-6],[-4],[-3],[-2],[-9],[-1],[-4],[-2],[-6],[-6],[7],[1],[-5],[-7],[4],[5],[-1],[2],[-8],[-10],[7],[-5],[-4],[5],[-8],[-2],[3],[10],[6],[1],[5],[10],[3],[-10],[8],[-9],[-1],[-8],[-1],[-5],[-6],[-4],[4],[-6],[-1],[-8],[3],[2],[2],[8],[-2],[-7],[-9],[-10],[-9],[-9],[-5],[3],[7],[8],[8],[-6],[-6],[6],[2],[1],[9],[7],[-4],[8],[1],[8],[4],[-3],[-3],[-1],[-9],[-2],[7],[4],[-2],[-3],[3],[-10],[-6],[-10],[-8],[3],[4],[-3],[9],[9],[-2],[4],[1],[-1],[2],[-5],[-2],[4],[3],[-7],[6],[5],[7],[6],[3],[-5],[-6],[-6],[-6],[-1],[9],[-5],[-9],[2],[-5],[-5],[8],[9],[-9],[1],[-10],[-8],[-5],[5],[-1],[10],[-10],[-4],[-4],[-3],[3]], dtype = "uint8")#candidate|5193|(288, 1)|const|uint8
const_5194 = relay.const([2.653462,3.695845,7.901430,4.671732,2.035054,3.727927,5.677047,-6.621373,-1.737589,-7.431451,6.497027,8.341407,5.987139,-0.884603,5.722756,-4.461181,3.295043,-3.529075,-7.880876,-7.628295,6.926850,-4.581278,-1.665520,-9.521445,9.449881,-4.492155,4.002855,9.150247,-6.095034,-3.658619,2.816435,-2.782388,-2.366376,8.142593,-4.265633,-0.475789,-3.183421,-8.079532,-2.113354,1.349246,6.656928,-5.376778,4.696320,-8.611268,3.879943,3.466030,0.086953,4.773457,-6.796561,-3.006828,2.933665,8.572362,9.436627,-7.748681,-7.351394,5.370951,4.416373,8.047536,-3.450086,-8.782891,-1.583902,-8.253065,2.638500,9.526014,3.325005,-7.458096,1.054135,-4.904693,5.743657,-4.150991,-9.043352,8.729223,7.146787,0.745652,-1.836097,-8.866182,7.964887,-6.840591,-9.106078,9.169989,-8.157117,-9.683704,6.060415,-6.572946,9.550988,-7.343999,7.612706,4.547176,-3.910557,-9.790406,-6.241560,2.610069,0.219423,-4.736693,-7.379363,0.961531,2.095084,-2.496594,-2.695586,8.329615,4.057498,-0.467339,-9.517830,2.137632,-8.586432,1.386256,-6.631989,-9.740833,6.790913,-2.169169,-2.208134,-8.114703,8.019427,-4.026128,0.539411,-9.119257,-9.230952,1.778019,-5.826950,9.036712,-4.016738,-3.513539,-9.305472,3.483000,9.829772,0.515039,6.854072,-9.554719,-6.282723,7.561036,-8.143686,-1.275898,-4.291892,3.699863,-8.818975,2.736517,-8.971024,-2.222329,-0.416188,-9.637853,8.755329,-7.129135,4.910437,5.117218,3.516458,5.715553,-2.745947,-9.394392,-4.486717,-3.650266,7.986584,7.589218,6.280575,-3.977863,3.208094,9.641763,-8.822020,-4.040429,-8.510452,2.250432,-1.687493,-1.193598,-7.800366,5.242809,-0.139910,5.065011,5.610493,3.590939,-2.850042,-9.959251,-4.998080,-9.312728,0.820774,-0.829365,1.613015,-6.743847,6.553047,-3.645849,2.411771,-7.195150,5.591809,2.853859,-0.391422,4.776521,-7.939721,2.286485,-5.273419,3.123946,-1.933901,4.270144,8.279640,0.518104,-7.704299,-7.155862,3.662615,-7.375697,5.607043,4.308605,-8.300942,-7.124475,-7.731582,-2.976616,-9.965887,5.003063,8.166399,-6.085813,-6.526220,1.383530,6.040223,-0.829663,-6.238623,-0.229534,7.218364,-8.474953,-8.050846,-5.570079,-5.499349,0.543544,9.296437,1.404726,-5.074664,5.330322,3.525161,3.504843,7.565634,7.561391,-8.096529,4.219679,6.276122,-5.003240,-8.572019,-0.382570,8.512685,5.971371,-7.043617,7.889354,-4.966099,3.237437,-2.806723,3.162376,1.347022,4.277710,-2.053249,2.927874,-8.249153,0.455650,-7.229140,2.682781,-7.326491,-7.952547,4.949737,9.490457,4.055236,7.239458,9.857694,2.876952,5.983715,6.834789,1.707327,1.823892], dtype = "float32")#candidate|5194|(260,)|const|float32
var_5195 = relay.var("var_5195", dtype = "float32", shape = (1716,))#candidate|5195|(1716,)|var|float32
call_5189 = relay.TupleGetItem(func_3456_call(relay.reshape(var_5190.astype('float32'), [6, 5, 12]), relay.reshape(const_5191.astype('bool'), [3, 700]), relay.reshape(var_5192.astype('uint8'), [48,]), relay.reshape(const_5193.astype('uint8'), [288,]), relay.reshape(const_5194.astype('float32'), [260,]), relay.reshape(var_5195.astype('float32'), [1716,]), ), 8)
call_5196 = relay.TupleGetItem(func_3464_call(relay.reshape(var_5190.astype('float32'), [6, 5, 12]), relay.reshape(const_5191.astype('bool'), [3, 700]), relay.reshape(var_5192.astype('uint8'), [48,]), relay.reshape(const_5193.astype('uint8'), [288,]), relay.reshape(const_5194.astype('float32'), [260,]), relay.reshape(var_5195.astype('float32'), [1716,]), ), 8)
output = relay.Tuple([uop_5181,call_5189,var_5190,const_5191,var_5192,const_5193,const_5194,var_5195,])
output2 = relay.Tuple([uop_5183,call_5196,var_5190,const_5191,var_5192,const_5193,const_5194,var_5195,])
func_5205 = relay.Function([var_5190,var_5192,var_5195,], output)
mod['func_5205'] = func_5205
mod = relay.transform.InferType()(mod)
mutated_mod['func_5205'] = func_5205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5205_call = mutated_mod.get_global_var('func_5205')
var_5207 = relay.var("var_5207", dtype = "float32", shape = (12, 30))#candidate|5207|(12, 30)|var|float32
var_5208 = relay.var("var_5208", dtype = "uint8", shape = (48,))#candidate|5208|(48,)|var|uint8
var_5209 = relay.var("var_5209", dtype = "float32", shape = (1716,))#candidate|5209|(1716,)|var|float32
call_5206 = func_5205_call(var_5207,var_5208,var_5209,)
output = call_5206
func_5210 = relay.Function([var_5207,var_5208,var_5209,], output)
mutated_mod['func_5210'] = func_5210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4691_call = mod.get_global_var('func_4691')
func_4692_call = mutated_mod.get_global_var('func_4692')
call_5217 = func_4691_call()
call_5218 = func_4691_call()
output = call_5217
output2 = call_5218
func_5230 = relay.Function([], output)
mod['func_5230'] = func_5230
mod = relay.transform.InferType()(mod)
mutated_mod['func_5230'] = func_5230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5230_call = mutated_mod.get_global_var('func_5230')
call_5231 = func_5230_call()
output = call_5231
func_5232 = relay.Function([], output)
mutated_mod['func_5232'] = func_5232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5294 = relay.var("var_5294", dtype = "float32", shape = (3, 15, 14))#candidate|5294|(3, 15, 14)|var|float32
var_5295 = relay.var("var_5295", dtype = "float32", shape = (3, 15, 14))#candidate|5295|(3, 15, 14)|var|float32
bop_5296 = relay.floor_divide(var_5294.astype('float32'), relay.reshape(var_5295.astype('float32'), relay.shape_of(var_5294))) # shape=(3, 15, 14)
bop_5301 = relay.less(bop_5296.astype('bool'), relay.reshape(var_5294.astype('bool'), relay.shape_of(bop_5296))) # shape=(3, 15, 14)
func_4628_call = mod.get_global_var('func_4628')
func_4630_call = mutated_mod.get_global_var('func_4630')
call_5307 = relay.TupleGetItem(func_4628_call(), 0)
call_5308 = relay.TupleGetItem(func_4630_call(), 0)
output = relay.Tuple([bop_5301,call_5307,])
output2 = relay.Tuple([bop_5301,call_5308,])
func_5309 = relay.Function([var_5294,var_5295,], output)
mod['func_5309'] = func_5309
mod = relay.transform.InferType()(mod)
var_5310 = relay.var("var_5310", dtype = "float32", shape = (3, 15, 14))#candidate|5310|(3, 15, 14)|var|float32
var_5311 = relay.var("var_5311", dtype = "float32", shape = (3, 15, 14))#candidate|5311|(3, 15, 14)|var|float32
output = func_5309(var_5310,var_5311,)
func_5312 = relay.Function([var_5310,var_5311,], output)
mutated_mod['func_5312'] = func_5312
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5316 = relay.const([[[False,True,True,False,False],[True,False,True,True,True],[True,True,True,True,True],[False,False,True,False,True],[True,False,False,False,False],[True,True,True,False,True],[True,True,False,False,True],[True,False,True,False,True]],[[False,False,False,False,True],[True,False,True,False,False],[False,False,False,False,False],[False,False,False,True,False],[True,True,True,False,True],[False,True,True,True,True],[False,False,True,False,False],[True,True,False,False,False]],[[False,True,False,False,True],[False,False,True,False,False],[False,False,True,True,False],[False,False,True,False,True],[False,False,True,False,True],[True,True,False,True,True],[False,True,False,False,True],[False,True,False,True,True]],[[False,True,True,True,True],[True,True,True,False,True],[False,True,False,False,True],[True,True,False,True,True],[True,False,False,False,False],[False,False,True,False,True],[True,False,True,False,True],[False,False,False,True,False]],[[False,True,True,False,True],[False,True,True,False,False],[False,False,False,False,False],[True,False,False,False,False],[True,True,False,False,False],[True,False,False,False,True],[False,False,True,False,False],[False,False,True,True,True]],[[True,True,True,False,False],[True,True,False,True,True],[True,False,True,True,True],[True,True,True,True,True],[True,True,True,False,True],[True,False,False,False,False],[True,True,True,False,True],[True,True,False,False,False]],[[False,True,False,True,False],[True,False,True,True,True],[False,False,False,True,False],[False,False,False,False,False],[False,True,False,False,True],[True,True,False,False,True],[False,False,False,False,True],[True,False,True,False,True]]], dtype = "bool")#candidate|5316|(7, 8, 5)|const|bool
var_5317 = relay.var("var_5317", dtype = "bool", shape = (7, 8, 5))#candidate|5317|(7, 8, 5)|var|bool
bop_5318 = relay.logical_or(const_5316.astype('bool'), relay.reshape(var_5317.astype('bool'), relay.shape_of(const_5316))) # shape=(7, 8, 5)
func_3981_call = mod.get_global_var('func_3981')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5333 = relay.TupleGetItem(func_3981_call(), 0)
call_5334 = relay.TupleGetItem(func_3983_call(), 0)
bop_5335 = relay.equal(bop_5318.astype('bool'), relay.reshape(var_5317.astype('bool'), relay.shape_of(bop_5318))) # shape=(7, 8, 5)
output = relay.Tuple([call_5333,bop_5335,])
output2 = relay.Tuple([call_5334,bop_5335,])
func_5338 = relay.Function([var_5317,], output)
mod['func_5338'] = func_5338
mod = relay.transform.InferType()(mod)
mutated_mod['func_5338'] = func_5338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5339 = relay.var("var_5339", dtype = "bool", shape = (7, 8, 5))#candidate|5339|(7, 8, 5)|var|bool
func_5338_call = mutated_mod.get_global_var('func_5338')
call_5340 = func_5338_call(var_5339)
output = call_5340
func_5341 = relay.Function([var_5339], output)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5376 = relay.const([[[1,2,1,-8,10,8,8,3,-1,7,4,-7,-4,-6],[9,4,8,-5,4,3,5,-3,5,-8,-10,6,-8,7],[-4,-6,10,2,-6,8,10,-3,1,7,5,4,4,-1],[3,-4,-2,-9,-10,10,-7,7,10,-4,7,-8,-9,-8],[-2,-5,7,-1,10,1,2,8,-2,9,-7,2,2,-8],[10,-6,-5,7,-8,2,8,-10,9,-10,-2,-10,9,5],[-1,6,9,4,-1,-7,-7,9,-4,-8,6,1,-8,-7],[4,10,-4,-7,-6,-6,-9,-8,-2,6,5,-7,1,-8],[-3,-5,8,-2,-2,5,9,-9,-4,9,-5,2,-6,-10]]], dtype = "uint64")#candidate|5376|(1, 9, 14)|const|uint64
var_5377 = relay.var("var_5377", dtype = "uint64", shape = (10, 9, 14))#candidate|5377|(10, 9, 14)|var|uint64
bop_5378 = relay.multiply(const_5376.astype('uint64'), var_5377.astype('uint64')) # shape=(10, 9, 14)
func_3913_call = mod.get_global_var('func_3913')
func_3916_call = mutated_mod.get_global_var('func_3916')
var_5383 = relay.var("var_5383", dtype = "float64", shape = (420,))#candidate|5383|(420,)|var|float64
var_5384 = relay.var("var_5384", dtype = "float64", shape = (1680,))#candidate|5384|(1680,)|var|float64
call_5382 = relay.TupleGetItem(func_3913_call(relay.reshape(var_5383.astype('float64'), [4, 15, 7]), relay.reshape(var_5384.astype('float64'), [1680,]), ), 2)
call_5385 = relay.TupleGetItem(func_3916_call(relay.reshape(var_5383.astype('float64'), [4, 15, 7]), relay.reshape(var_5384.astype('float64'), [1680,]), ), 2)
output = relay.Tuple([bop_5378,call_5382,var_5383,var_5384,])
output2 = relay.Tuple([bop_5378,call_5385,var_5383,var_5384,])
func_5390 = relay.Function([var_5377,var_5383,var_5384,], output)
mod['func_5390'] = func_5390
mod = relay.transform.InferType()(mod)
var_5391 = relay.var("var_5391", dtype = "uint64", shape = (10, 9, 14))#candidate|5391|(10, 9, 14)|var|uint64
var_5392 = relay.var("var_5392", dtype = "float64", shape = (420,))#candidate|5392|(420,)|var|float64
var_5393 = relay.var("var_5393", dtype = "float64", shape = (1680,))#candidate|5393|(1680,)|var|float64
output = func_5390(var_5391,var_5392,var_5393,)
func_5394 = relay.Function([var_5391,var_5392,var_5393,], output)
mutated_mod['func_5394'] = func_5394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5396 = relay.var("var_5396", dtype = "float64", shape = (10, 15, 14))#candidate|5396|(10, 15, 14)|var|float64
uop_5397 = relay.tan(var_5396.astype('float64')) # shape=(10, 15, 14)
func_1926_call = mod.get_global_var('func_1926')
func_1929_call = mutated_mod.get_global_var('func_1929')
const_5402 = relay.const([10,-1,-2,-5,1,-8,-6,-9,-10,6,4,1,6,1,4,-1,8,1,-4,-10,2,8,-8,-9,-4,8,4,4,-1,6,-7,-2,-10,4,1,-6,3,3,9,-10,8,10,1,-5,-1,10,9,-2,4,10,-1,8,-10,-5,-6,3,7,7,-9,10,5,-9,-9,1,8,-9,-10,5,10,3,9,2,-1,-1,3,-2,1,-1,2,-4,-7,-3,1,-1,10,-9,-9,-4,-1,-1,-8,1,4,-2,7,-9,10,-1,10,6,-5,-10,7,7,10,-10,-8,-10,4,9,9,-6,-7,-3,-1,6,3,10,-9,10,4,-2,3,-7,5,10,3,6,-3,9,-8,-9,3,3,-8,-3,-4,-7,6,-6,9,8,2,-1,1,-10,-7,1,10,-3,-6,-3,1,7,-3,2,-1,-3,2,-9,-6,-3,-9,4,-8,-10,-3,-7,4,-4,9,10,-6,-2,-6,3,-1,6,1,-9,-7,5,5,-4,10,-7,-8,10,9,2,4,-9,4,-4,3,3,-4,10,4,10,6,2,6,5,3,-3,5,-3,5,-3,3,-8,8,-8,-4,6,-8,3,10,9,7,2,4,-2,-5,9,3,-4,-7,-3,9,-2,-6,10,1,1,3,-2,1,8,-9,3,-4,10,7,4,-1,-4,-9,4,8,-2,1,10,9,7,4,-9,6,4,3,3,4,4,4,7,-5,2,4,7,9,9,-5,6,8,-7,7,8,7,-9,9,-2,-7,-10,6,4,1,-3,-2,6,-8,-4,2,10,-3,10,-5,6,-7,-4,-4,-10,-2,9,-1,-7,-9,4,2,-1,-3,6,-3,1,-1,-3,-3,-7,-6,-10,-3,-4,9,-4,-3,3,5,-5,4,-8,-3,9,4,3,-4,4,2,-8,9,-2,-6,-8,6,1,1,6,-2,10,-3,-5,7,-2,9,-2,3,-1,-10,-4,-4,8,-4,-7,-1,2,1,-1,-7,9,-7,6,-6,-1,-10,3,-9,7,-7,-10,5,-6,-9,5,2,-6,9,-10,-1,-1,7,-4,7,2,10,-4,-5,-9,7,-2,2,-1,10,-5,-2,3,-2,-8,10,3,-1,3,7,-2,-8,7,-2,2,-10,2,-5,3,-2,6,-10,-10,-8,-9,-6,3,-5,5,-9,-9,6,-10,6,10,-6,-10,7,-9,4,2,-1,4,-5,5,-6,2,-6,4,-10,2,3,2,5,-7,-1,8,3,-10,-1,-2,-9,-2,1,-7,-2,-6,-2,-7,10,-5,-2,-5,-5,1,1,-4,2,-3,1,3,-10,8,-7,-8,-8,10,-6,-5,3,6,1,-2,5,3,7,9,5,9,4,-1,-10,4,-9,4,3,5,9,7,5,10,-8,-9,-6,-6,-8,5,-9,4,8,-9,-10,-4,-2,-3,-3,-8,9,3,-8,10,-4,-5,-3,-1,9,-1,4,7,8,-4,-10,1,2,9,-1,-7,3,9,1,7,2,8,-5,4,5,-4,10,8,-9,1,5,6,2,-4,-7,-2,8,5,-6,-9,-6,-8,8,6,5,9,9,-8,3,1,-2,1,4,-5,6,3,-7,-6,-9,6,4,-5,-1,2,-4,3,10,8,-9,-6,9,7,-2,-4,-7,-6,4,-2,4,-8,-8,4,5,2,9,1,9,5,-10,4,-7,-6,2,7,-5,6,-8,-3,-4,-8,-5,10,-6,-5,4,-2,10,6,-10,-9,10,8,6,10,6,-5,-9,-5,2,1,-7,-8,3,-10,7,-7,7,-4,7,-4,-5,4,-6,1,6,5,-7,2,-7,4,-4,-10,6,-3,-9,6,8,8,-6,3,10,-7,10,-8,2,10,3,-4,-5,4,5,-6,7,-8,-2,4,8,-9,-9,-3,9,6,5,-4,10,-2,5,8,3,-2,-7,-7,8,-3,-4,-9,-2,-8,-8,5,8,2,9,-5,6,-7,6,9,-1,2,-7,-8,-9,-5,-9,-4,10,-10,6,1,-5,-6,-2,4,5,9,-8,-2,3,3,-10,9,-2,8,6,-1,-8,1,-2,-5,2,3,-1,8,-4,8,-7,5,7,9,-5,-6,7,-4,4,-8,-3,8,-5,10,7,-5,-6,-8,-6,-8,-5,-5,-2,1,-8,2,-9,-5,-7,6,-2,2,1,-1,-7,7,3,-6,1,-3,-8,10,5,2,10,-8,10,8,-2,-8,8,-8,-9,10,-2,1,-7,-7,-6,-6,8,-7,-6,10,6,4,7,-6,8,8,-8,2,-10,8,10,4,-8,6,8,3,-6,-7,-10,-9,1,-2,8,4,3,-6,6,2,-3,-9,4,4,-8,5,7,8,-3,7,-4,-1,-3,-1,9,2,-2,2,2,8,-6,-7,8,1,8,5,10,-1,5,1,-5,-3,-3,-3,-10,4,5,-10,-1,-8,-10,-2,-1,5,-5,9,1,-7,8,1,2,-5,-9,1,8,10,4,-10,5,2,-4,-1,4,9,-9,-9,6,-9,-9,-6,10,4,-5,1,-2,1,-4,10,2,10,-10,2,3,10,2,10,1,7,10,8,-1,-9,3,2,1,-5,-1,8,8,5,-5,1,-8,-3,-6,-4,10,-1,5,8,-5,6,10,9,3,6,-10,-3,5,9,-7,-8,6,-1,5,6,2,6,-7,2,1,-5,4,1,4,-3,-3,-7,10,-2,7,5,-10,-1,-7,5,10,-9,10,8,-10,-4,-1,3,-8,6,-3,-3,3,-9,9,-8,-8,7,-5,-3,-5,-9,9,-8,7,10,-7,4,-1,2,-9,-10,7,6,-4,8,-7,6,9,10,-7,7,-7,6,3,7,8,10,7,-7,4,-2,2,-6,-9,-6,-9,2,1,-4,-6,6,-10,-9,-2,-10,6,9,10,-9,-4,-5,8,-10,5,-5,7,-7,10,4,6,10,7,-8,-7,-6,-1,-7,-10,10,-3,6,-8,6,1,-10,7,-7,-1,3,-1,2,-2,1,-8,-5,7,2,6,-3,-8,-4,-3,1,-3,4,1,-7,7,-5,10,7,-3,3,4,8,7,9,10,-7,-2,8,9,8,-5,10,-3,3,3,-9,1,1,9,9,-9,4,-7,5,-2,-1,-6,-2,-7,4,2,7,1,1,-7,1,9,5,2,4,-5,-10,-8,-9,-1,3,8,-9,9,1,2,-9,-9,-9,-8,-4,-9,-3,9,2,-5,-5,6,-2,-4,8,-6,9,5,6,-2,-6,7,8,1,7,-4,1,-6,4,7,-6,-10,8,-2,9,-9,4,6,3,3,-7,4,-6,2,-10,1,2,10,9,6,-7,6,-10,-5,-2,-5,-5,9,-9,3,-8,5,8,-1,7,-6,2,-8,-4,5,1,-7,1,10,-6,1,-9,-5,-2,-7,-2,5,-5,-6,6,-7,5,5,-1,-8,-10,-1,7,-10,-10,10,-10,-8,10,3,9,-4,7,10,6,5,9,9,-1,5,-5,-7,-3,-9,-1,10,-4,4,-6,9,4,-2,-3,-9,9,8,-10,-9,2,-6,2,-4,-2,10,-3,-4,5,10,-6,-2,2,10,-7,-4,9,-3,-8,7,-5,10,8,-5,-9,-2,-1,-9,-6,-4,8,-3,10,7,-3,9,-3,-6,-4,-5,5,7,2,10,7,-3,1,-3,4,-10,8,6,2,-4,4,-1,-7,-6,6,-6,-9,-7,7,-3,2,9,-5,-9,9,-5,-3,2,5,-8,4,-4,-5,3,-1,-2,-2,-10,5,5,-5,5,-9,7,-6,4,8,-5,1,4,6,6,6,6,9,5,4,-3,8,-6,6,-8,-10,-9,1,-4,9,5,-7,-9,2,10,4,6,3,10,-4,6,-9,4,8,5,9,5,10,-2,-7,-8,-6,-5,-6,10,3,-3,-1,-2,-8,-6,-8,-3,-6,1,-7,-8,-3,4,10,-9,-8,-5,1,7,6,-6,-8,-3,6,-10,2,8,1,-5,3,-3,-10,1,-6,3,-2,8,-10,6,6,-10,4,-4,-9,-7,6,-3,-10,8,-3,-10,1,-6,-1,-8,-8,5,-8,10,-9,10,-9,-2,9,5,-2,-8,-2,-4,7,-10,-2,-9,-4,-6,8,-10,8,3,3,-9,2,-8,4,-9,-3,7,4,4,7,-2,-7,-1,4,4,2,4,3,-2,3,-7,10,2,2,-1,7,5,6,10,-9,-7,10,-7,-3,-7,10,-3,-9,-4,10,-3,1,-2,3,-4,6,3,7,8,-9,-6,-10,9,1,-2,1,9,-3,-8,3,-9,7,7,-2,-2,10,1,-7,7,6,-1,3,8,1,2,-7,-2,-3,-6,4,9,8,-1,-10,4,-8,-2,5,8,-7,-7,-3,9,-10,2,-7,-5,9,-1,-6,5,-10,-6,-7,10,-7,10,-7,-6,6,-10,-9,9,3,-6,-6,5,-8,-2,5,10,-8,2,9,-4,-5,1,1,3,1,5,2,3,10,6,-7,9,-9,3,-10,7,3,-1,-10,-10,-6,10,6,-8,1,4,-4,-3,6,3,5,3,-7,-4,-1,-10,1,4,3,6,10,2,-2,7,3,4,-1,7,1,7,-6,-8,-6,6,4,3,-9,8,-10,-9,-6,-10,-10,-6,-6,5,-9,1,-5,3,9,3,-1,-1,-7,-3,-5,-9,9,6,-6,9,3,-1,7,8,-1,7,-4,-2,-9,2,-9,-9,-6,-4,-7,10,-5,10,6,-9,1,-9,-4,-5,-8,-9,10,5,-4,-8,4,-10,-8,10,-8,-1,4,-3,-4,1,5,-1,7,-1,-5,-1,9,-7,-4,3,5,-3,5,-5,-4,1,8,4,-7,6,6,-10,-1,-1,3,8,-9,5,7,-3,8,-2,-5,4,1,-4,7,1,-1,4,-8,10,-3,1,6,-1,-7,1,-9,-4,4,7,-1,1,1,-4,8,-6,10,1,3,-8,-6,4,5,6,-5,-3,1,8,9,-3,-7,-8,-8,1,-10,2,2,-1,-6,-8,-2,-7,7,7,7,-3,-8,-9,9,-8,1,-6,9,-9,8,6,-8,-5,8,1,3,-10,-6,-9,-1,5,-10,4,-2,-2,10,-10,-1,-5,8,-6,1,-6,-7,3,4,1,-3,-3,7,3,3,8,-10,-5,-9,3,-9,9,4,3,2,-3,-10,-9,-2,-4,8,3,5,8,10,-5,10,2,-4,3,-2,10,-3,-7,-1,-1,5,9,-1,5,10,-10,-2,6,1,3,-8,-3,3,-7,5,5,2,-1,1,-6,-7,-1,9,6,-9,-3,-5,-9,8,-3,3,-2,-2,-8,10,3,-8,-6,-4,-1,5,-1,10,-9,5,1,1,-3,-8,-5,-2,-6,3,-1,6,9,6,4,-9,8,6,-1,5,-10,-4,-1,-3,9,9,-2,-4,8,10,-9,4,2,7,7,-9,4,1,-10,-2,-8,-2,8,1,7,-10,10,-6,-4,-10,-6,7,10,7,2,-2,-10,3,10,8,5,6,9,-2,6,5,10,-1,-2,2,-8,6,-9,-10,5,6,3,9,-3,-7,2,-10,6,5,-2,1,1,9,-10,-9,-4,-7,9,1,7,-3,-3,-1,4,6,5,7,-9,-8,-5,4,-3,8,-4,-4,-10,10,-9,2,-9,1,-8,-1,-5,3,-5,-1,7,10,2,-2,2,4,5,7,4,7,8,-8,7,7,10,10,-9,9,-6,-2,5,2,-3,3,8,-1,9,3,5,-10,8,-2,-2,-8,4,-9,-7,-8,-9,-2,-4,-5,-4,-1,-8,6,10,-3,-1,-3,1,5,-4,-10,5,-9,-7,-1,3,-10,2,-7,3,7,8,-10,-3,-7,-7,9,1,2,4,-6,5,10,-3,-10,-4,2,-6,-1,9,-5,6,-10,-3,2,-6,-4,8,10,10,10,6,6,-6,4,-6,2,4,9,-6,5,-3,5,-5,-5,-7,-9,-8,-7,-3,-10,10,10,-7,3,4,-5,9,10,-7,8,-9,6,-1,10,4,2,-5,9,-3,-3,-10,-6,10,-2,-9,8,-5,-3,-7,-10,-6,-8,5,1,2,9,-4,-3,-10,-9,3,-7,4,-7,-7,-6,9,4,-3,-6,-10,-7,9,-9,4,8,-7,-10,-6,-2,5,-8,1,-10,10,9,10,-4,-7,6,1,9,-10,9,-7,1,-10,-6,-4,5,-4,-3,2,1,-2,-9,2,3,8,-8,-4,6,-9,-4,1,-8,-6,7,-2,-7,7,9,5,-1,-3,-9,7,10,-8,-10,6,1,-9,-9,-9,5,-2,5,-8,2,3,-10,-9,-8,-5,-5,6,-10,-6,-6,-3,1,7,3,-10,9,-8,-6,7,3,2,-2,8,3,-3,1,2,-3,7,4,-5,-1,-2,-10,-10,-3,-5,-1,9,6,-5,-9,-8,7,10,-3,6,8,2,7,4,-4,-6,-9,9,8,4,-10,-2,10,-8,-9,-8,2,-8,9,10,-9,8,-3,5,8,1,-4,5,-8,-6,9,5,-3,2,-3,5,9,1,-10,-5,8,8,-8,-5,-8,-5,-6,-2,-3,10,9,9,-1,-1,-7,-9,10,-6,-10,7,5,-9,-2,9,-5,3,-8,-1,-3,10,-9,-4,6,-1,2,-6,-2,7,6,-1,-6,-7,9,3,-2,-5,-10,2,-10,4,-1,-10,-5,-6,4,6,-4,-4,10,-8,-8,5,-3,-6,10,-6,10,3,-2,10,8,5,8,-6,5,-3,8,-1,-5,-3,-8,-5,2,6,4,-1,-2,6,-4,-10,-8,-1,1,7,-10,-10,-7,7,-10,7,-10,8,-3,-4,7,-5,5,3,-10,3,-1,10,-7,-1,-1,2,-5,3,-5,6,-1,10,8,3,4,-10,8,-4,9,1,-4,-1,-3,8,3,1,4,1,5,-2,9,-5,-1,1,6,10,-5,2,5,-8,-3,-2,10,-1,-7,-3,4,-5,-9,-5,-10,-7,-3,-5,-9,7,-1,1,2,8,4,6,-9,2,-9,3,9,-6,-6,-1,1,-9,6,-4,1,-8,3,-2,6,2,-9,5,-6,-10,-2,-9,10,-5,-7,7,-3,2,8,10,-8,-1,1,6,-7,-10,-9,3,-7,6,-9,2,5,-8,10,8,4,8,5,1,-10,2,9,7,-4,-10,5,5,-7,-6,2,-6,5,-10,-6,4,-3,7,4,10,8,-2,-1,2,9,5,-4,-8,3,-9,10,-8,2,4,9,5,-3,8,-4,-2,-10,6,7,3,1,-2,-5,-3,4,-4,-3,-10,-8,10,3,-6,-8,9,6,7,1,-10,10,5,3,6,-10,4,-7,9,8,-2,-8,4,-10,1,2,10,-7,5,4,-7,10,-2,6,4,1,-10,7,-4,7,-10,9,1,7,-5,7,-7,3,-3,-3,5,-3,4,1,6,-3,6,-6,-5,3,4,-4,-9,2,-8,-9,10,9,1,-10,-7,3,5,10,-2,2,5,9,-4,5,8,6,7,10,5,-5,2,-8,7,9,-3,9,6,1,1,-6,2,-6,9,-5,7,9,-7,-8,-6,-6,-5,-6,-3,5,-3,-2,4,3,4,-10,-9,-10,-7,-3,-5,-10], dtype = "int32")#candidate|5402|(2816,)|const|int32
call_5401 = relay.TupleGetItem(func_1926_call(relay.reshape(const_5402.astype('int32'), [16, 11, 16]), relay.reshape(const_5402.astype('int32'), [16, 11, 16]), ), 0)
call_5403 = relay.TupleGetItem(func_1929_call(relay.reshape(const_5402.astype('int32'), [16, 11, 16]), relay.reshape(const_5402.astype('int32'), [16, 11, 16]), ), 0)
bop_5416 = relay.less_equal(uop_5397.astype('bool'), relay.reshape(var_5396.astype('bool'), relay.shape_of(uop_5397))) # shape=(10, 15, 14)
bop_5430 = relay.floor_mod(bop_5416.astype('float32'), relay.reshape(var_5396.astype('float32'), relay.shape_of(bop_5416))) # shape=(10, 15, 14)
func_4618_call = mod.get_global_var('func_4618')
func_4619_call = mutated_mod.get_global_var('func_4619')
call_5440 = func_4618_call()
call_5441 = func_4618_call()
func_5205_call = mod.get_global_var('func_5205')
func_5210_call = mutated_mod.get_global_var('func_5210')
const_5448 = relay.const([3.144245,-6.107462,-7.671796,8.214448,6.839051,5.999816,6.690318,-1.599997,8.007780,-3.942897,-8.285565,-5.156722,-3.510353,-7.737315,-3.027234,-5.136789,9.592358,-6.820530,-0.730804,7.814338,5.017229,3.167167,3.031432,-5.262827,-8.273767,-0.263815,-0.800372,6.541041,4.688686,-9.964630,-8.221814,0.578777,5.005772,0.795920,8.481735,-6.590959,3.583461,-3.151294,1.343790,3.537563,3.028476,-9.259034,-4.464119,-3.176452,-7.992201,2.521515,4.383551,-3.961815,-0.250630,-8.521398,-2.148762,1.119264,-1.261618,-5.412360,-9.977472,-0.027982,-6.737674,-4.369430,-7.523954,-2.768151,0.982819,6.041910,5.250094,-1.143387,6.006260,3.117942,6.504404,5.578775,-0.468557,2.345553,-3.223566,-0.910065,6.981202,2.740000,3.242743,-6.745952,-3.280494,-8.562902,2.723374,6.675027,0.869553,2.123270,5.148443,0.633390,-4.774121,9.991484,-1.110838,7.131628,-5.438895,5.962690,9.340903,-3.911214,-7.476398,5.600611,9.348947,-9.733552,5.244023,1.954032,8.539702,8.678801,-5.420440,-1.566345,-7.392246,-1.123519,-8.625793,0.257176,1.193445,9.311617,-5.511916,3.304108,-5.955266,-6.377989,2.236712,-2.728412,-1.804081,3.832854,-6.583759,3.357250,0.474525,4.512620,-8.407531,2.624632,4.957421,8.319527,4.461700,8.070962,-5.930007,-7.086254,-4.427125,-6.797848,-7.034931,7.255771,3.038250,8.206835,-6.287357,4.552510,3.517580,-3.344939,6.821115,-3.422658,-6.519418,-8.655141,-2.556290,9.811436,-2.656541,1.032380,6.149673,8.870077,-7.531586,6.965201,-2.239434,0.393383,-2.662199,-6.703051,9.572975,-0.216306,-4.749235,-1.962211,8.269025,9.167674,-0.689773,-7.731384,8.101715,-7.068676,8.870911,-1.671319,-7.357613,4.969977,3.799835,1.111735,8.743447,0.746441,-0.643102,-9.545414,2.835689,2.655380,-2.508500,8.479702,-2.071101,7.295361,0.478218,8.091977,2.670690,-0.109187,-4.062764,3.855906,-7.257472,3.841553,4.691422,-8.414011,-8.326595,-5.534532,-5.785188,-5.858195,2.614357,-8.080573,-0.009063,3.632462,-7.049904,-3.641286,8.150823,-3.050516,-5.392113,-7.423179,5.379921,-4.012812,3.590658,1.101655,-0.835849,-8.024531,0.474463,5.931895,-9.989716,-3.029100,-4.342506,1.253329,-0.144754,5.979633,4.183218,-5.089192,2.449829,-1.734767,4.350599,-1.134985,-5.629687,-0.551032,3.253561,3.476523,-9.487677,-7.159814,-6.756056,-3.241376,-2.894833,-9.294910,8.412646,-9.543160,9.945038,4.085100,-9.947674,3.536487,-6.005310,7.055253,8.019525,5.233417,-6.708108,-7.818159,3.130112,9.479666,3.466828,-9.621883,2.090278,9.425214,0.903999,6.745988,-1.191881,-8.029425,-5.807634,-5.447799,-7.163974,4.612737,0.232820,-4.344994,-3.506211,-1.016113,6.185484,5.529104,-5.886770,9.120251,7.562028,9.202820,3.284519,4.634158,9.135062,3.890513,1.706845,-4.083646,4.929888,-2.893149,8.288116,4.236480,3.309453,1.760877,0.689406,9.045922,7.895286,-0.925078,4.237425,5.795798,3.297895,-9.518035,0.439929,6.987922,2.289385,5.476068,8.626412,4.704661,1.326789,-2.867185,-2.289905,3.230477,-1.145991,-9.270517,6.755885,8.661056,1.598996,-9.414679,-9.474878,4.411773,3.539389,-7.887705,7.355528,9.058459,-6.545724,1.148219,7.024246,2.239860,-5.035827,1.632433,8.026992,-7.526230,8.082130,0.030443,-2.880892,6.425404,1.298987,-8.369514,-0.771929,9.424311,7.829745,4.430295,-6.468788,0.254675,-9.751604,-5.081777,8.477225,-8.551338,7.067531,-0.483971,-9.341317,6.445626,-6.477503,-3.479750,4.940889,5.650147,-9.113331,-0.947471,2.513914,4.145424,-8.614138,9.462051,-1.018221,-9.045849,-0.139446,-4.306664,0.923722,-0.404653,4.921366,-8.968132,6.802794,-0.613067], dtype = "float32")#candidate|5448|(360,)|const|float32
var_5449 = relay.var("var_5449", dtype = "uint8", shape = (48,))#candidate|5449|(48,)|var|uint8
var_5450 = relay.var("var_5450", dtype = "float32", shape = (1716,))#candidate|5450|(1716,)|var|float32
call_5447 = relay.TupleGetItem(func_5205_call(relay.reshape(const_5448.astype('float32'), [12, 30]), relay.reshape(var_5449.astype('uint8'), [48,]), relay.reshape(var_5450.astype('float32'), [1716,]), ), 1)
call_5451 = relay.TupleGetItem(func_5210_call(relay.reshape(const_5448.astype('float32'), [12, 30]), relay.reshape(var_5449.astype('uint8'), [48,]), relay.reshape(var_5450.astype('float32'), [1716,]), ), 1)
uop_5459 = relay.sqrt(bop_5416.astype('float32')) # shape=(10, 15, 14)
func_4175_call = mod.get_global_var('func_4175')
func_4182_call = mutated_mod.get_global_var('func_4182')
var_5462 = relay.var("var_5462", dtype = "uint8", shape = (14,))#candidate|5462|(14,)|var|uint8
var_5463 = relay.var("var_5463", dtype = "int8", shape = (390,))#candidate|5463|(390,)|var|int8
const_5464 = relay.const([[1,10,7,-4,7,2,6,-8,-9,-3,3,-1,-1,-3,-5,1,-2,3,4,-8,-9,-3,-4,-7,9,7,3,-4,-1,1,-5,1,-5,7,-2,-10,-9,5,1,6,1,-5,1,3,4,7,-8,7,5,-3,-2,9,4,-3,-3,9,2,10,-1,9,-7,-7,7,8,-9,-10,-2,2,-10,-4,-4,8,-5,3,-3,3,1,7,-3,9,-6,5,-7,-7,-2,1,-4,-5,-1,-6,3,4,-9,-1,8,8,-10,-1,10,3,8,9,4,10,-4,-10,8,-10,-7,-1,2,8,-2,8,-8,3,8,-8,8,8,6,9,-3,3,2,6,3,6,4,5,-7,-8,2,7,-5,2,-4,7,3,-9,4,-7,-1,2],[8,-7,-8,2,-4,2,6,3,8,-9,-2,4,-8,-2,-5,-4,4,2,8,-1,-2,2,-8,2,-6,5,-1,-5,1,8,2,10,3,7,3,4,3,-7,-2,5,10,-8,-10,-2,10,6,3,-9,8,-10,6,-10,9,-9,6,10,5,-9,-9,-3,-2,-1,7,-1,-6,5,4,-10,-3,-5,5,5,3,3,8,3,7,4,5,-8,-8,-4,8,-7,-3,10,-2,-7,10,9,8,-7,-7,10,10,-5,-10,-3,3,9,-4,5,5,-3,2,2,-3,8,2,3,5,-10,-7,3,-3,-7,3,-5,3,-5,9,8,8,3,3,4,4,-3,9,10,-10,2,-8,-4,-4,-8,8,-4,-10,-8,5,-1,6,-7]], dtype = "uint8")#candidate|5464|(2, 144)|const|uint8
call_5461 = relay.TupleGetItem(func_4175_call(relay.reshape(var_5462.astype('uint8'), [1, 14]), relay.reshape(var_5463.astype('int8'), [390,]), relay.reshape(var_5449.astype('uint8'), [48,]), relay.reshape(const_5464.astype('uint8'), [288,]), relay.reshape(var_5450.astype('float32'), [1716,]), ), 15)
call_5465 = relay.TupleGetItem(func_4182_call(relay.reshape(var_5462.astype('uint8'), [1, 14]), relay.reshape(var_5463.astype('int8'), [390,]), relay.reshape(var_5449.astype('uint8'), [48,]), relay.reshape(const_5464.astype('uint8'), [288,]), relay.reshape(var_5450.astype('float32'), [1716,]), ), 15)
output = relay.Tuple([call_5401,const_5402,bop_5430,call_5440,call_5447,const_5448,var_5449,var_5450,uop_5459,call_5461,var_5462,var_5463,const_5464,])
output2 = relay.Tuple([call_5403,const_5402,bop_5430,call_5441,call_5451,const_5448,var_5449,var_5450,uop_5459,call_5465,var_5462,var_5463,const_5464,])
func_5469 = relay.Function([var_5396,var_5449,var_5450,var_5462,var_5463,], output)
mod['func_5469'] = func_5469
mod = relay.transform.InferType()(mod)
var_5470 = relay.var("var_5470", dtype = "float64", shape = (10, 15, 14))#candidate|5470|(10, 15, 14)|var|float64
var_5471 = relay.var("var_5471", dtype = "uint8", shape = (48,))#candidate|5471|(48,)|var|uint8
var_5472 = relay.var("var_5472", dtype = "float32", shape = (1716,))#candidate|5472|(1716,)|var|float32
var_5473 = relay.var("var_5473", dtype = "uint8", shape = (14,))#candidate|5473|(14,)|var|uint8
var_5474 = relay.var("var_5474", dtype = "int8", shape = (390,))#candidate|5474|(390,)|var|int8
output = func_5469(var_5470,var_5471,var_5472,var_5473,var_5474,)
func_5475 = relay.Function([var_5470,var_5471,var_5472,var_5473,var_5474,], output)
mutated_mod['func_5475'] = func_5475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5482 = relay.var("var_5482", dtype = "float64", shape = (11, 10, 5))#candidate|5482|(11, 10, 5)|var|float64
uop_5483 = relay.sigmoid(var_5482.astype('float64')) # shape=(11, 10, 5)
uop_5487 = relay.cos(var_5482.astype('float32')) # shape=(11, 10, 5)
var_5498 = relay.var("var_5498", dtype = "float64", shape = (11, 10, 5))#candidate|5498|(11, 10, 5)|var|float64
bop_5499 = relay.less(uop_5483.astype('bool'), relay.reshape(var_5498.astype('bool'), relay.shape_of(uop_5483))) # shape=(11, 10, 5)
func_2278_call = mod.get_global_var('func_2278')
func_2282_call = mutated_mod.get_global_var('func_2282')
const_5509 = relay.const([9.296683,1.637916,-6.146199,0.579035,9.932696,-3.185256,-1.405639,0.540688,0.592129,8.273393,7.776449,4.257268,0.591243,-5.232153,-9.152202,9.561575,-1.799951,-9.290701,-5.863958,-8.945458,-4.317698,-5.264436,-4.563976,-9.055610,2.833822,-4.991729,-7.138334,3.750705,-1.309628,1.924255,-4.750504,-9.351408,5.489128,4.263733,-5.430353,-1.863661,-3.764588,-7.448027,-0.015789,2.267975,-0.053183,3.331052,6.415373,-4.138019,-2.281460,-5.156480,-6.273177,-4.404397,3.103955,7.767844,1.702463,6.301695,-2.535695,3.398599,-9.150312,-9.839681,-7.302626,3.664788,1.019815,8.982493,6.376993,-4.856897,6.839733,-6.377303,5.314990,-6.814779,1.871866,-1.644033,1.157323,-3.582077,-5.373504,-0.242400,-5.584332,6.695967,0.503660,-7.128788,-0.765457,-7.799898,1.719385,0.650297,-6.716113,2.943994,3.571854,-8.752251,7.026910,-8.571037,8.331665,-7.694247,-8.353403,5.535512,3.544222,3.810218,9.889458,0.006149,-5.415076,9.700624,-1.309457,-7.705701,-3.655447,7.720701,4.869763,-2.382246,-1.384600,9.627563,-3.391172,0.040963,-9.703028,0.380657,-0.463556,-4.596264,5.779127,-1.467973,-3.840613,3.698676,3.786638,6.341039,-8.802100,1.823949,-7.333459,-9.640789,-6.171045,-8.103997,-7.035012,-1.834282,-9.984256,1.357783,-9.396446,-8.347439,-8.332137,9.911950,-6.471929,-9.760032,-1.955397,1.557980,-5.315277,1.053767,7.345420,5.351486,-0.067661,2.491121,-2.529489,-1.326395,-0.327475,-4.248429,5.342115,-9.017350,-1.061917,-1.562972,-2.127106,2.060046,3.706370,9.327269,8.666023,-6.255575,-9.534495,-7.824736,-4.911913,1.141737,4.483879,3.279536,-3.834266,-3.987272,6.954376,7.385550,0.417088,-4.998887,-3.065640,3.850502,4.250227,3.700289,1.507506,-5.969150,-9.024682,-4.141155,1.343717,-5.949976,0.768875,-3.889372,-7.249950,9.555754,9.338311,-1.201175,6.462765,4.812752,-0.513337,6.016976,-9.437426,5.125732,8.054519,7.155589,-5.292007,-0.228926,-3.638543,-5.921638,8.190055,-1.446218,9.965483,-9.459491,9.106664,9.659483,-4.458039,9.269579,2.153838,5.076765,6.322500,9.352796,6.536280,1.100316,5.042085,-6.912544,7.706029,0.354808,9.569364,-4.539638,8.380178,-4.133774,-6.600323,-6.098633,2.239421,-8.309450,-6.500638,-4.353597,-9.785097,-1.270844,5.291827,-7.661013,3.946793,0.476467,0.961024,5.481368,-3.376024,-2.391869,-5.063435,-9.875307,-2.287405,-2.215718,-1.636818,-1.733711,-4.427989,-9.725468,9.016753,4.390943,-6.310406,-2.492955,-9.607296,-0.312758,0.740700,8.789775,-4.302597,4.273425,-7.166332,3.626296,-9.472546,2.035684,-4.003059,-4.814277,-7.926918,2.156249,3.612034,-7.361243,6.020818,-8.354543,8.421297,-6.622747,9.131315,7.168295,7.543453,-7.138605,-4.568706,9.418350,-0.248677,8.006664,3.876813,6.009180,-5.914454,-2.608902,9.453965,-7.232191,-4.011348,-8.806238,2.984466,5.805605,-4.169075,-2.771639,-3.883890,-9.056680,-5.163955,0.424580,-3.827576,-8.483416,5.700066,-8.651907,7.743314,1.651539,-1.890357,1.624921,6.577666,-7.269932,-5.284405,2.999762,-1.661498,0.513517,0.560195,-5.286262,-6.373761,-2.406114,9.660661,-8.642370,6.824901,-1.300691,6.519213,2.484621,3.792676,-9.297621,7.183443,-2.382086,2.635251,-1.757229,-3.293304,-0.758390,3.139638,-2.706884,-4.946180,8.819028,6.882023,3.287052,4.462908,5.645602,-6.341872,-8.168512,1.799757,-5.505223,2.465406,2.393203,5.705697,-3.478028,-3.365245,-3.614040,9.984992,2.954418,5.281404,0.484713,1.585706,7.336377,-6.437712,6.731314,-7.831238,0.085036,-6.938388,-7.653557,-9.803359,-3.382627,8.833875,3.306642,-9.309875,8.038454,4.181606,-6.890301,-4.929829,2.768136,-1.720842,-9.058372,-9.925720,-4.552007,5.119065,-2.973412,5.549361,-1.396896,5.948543,8.716670,-1.495828,-9.067893,3.637129,4.939124,-7.859321,-6.657354,4.441801,-7.215010,-5.673165,3.906544,5.267318,-5.303715,-4.270449,1.900264,-7.787322,-1.017805,-1.509758,2.188061,8.491409,0.817499,6.960763,-9.378569,-7.806827,-7.276196,4.730245,-7.899532,4.463579,4.299312,-1.279042,-8.542500,7.486292,9.997588,5.739492,2.472472,9.600782,-1.903179,5.339167,-9.529679,0.340945,-7.075480,-9.894016,8.279398,1.099082,5.124286,-4.111667,1.538748,-3.627763,9.280836,9.460038,9.569017,4.633841,4.732429,-1.355821,-2.314679,-4.409000,3.331789,-0.556317,-9.747020,1.029106,4.092461,4.784381,-4.987064,5.438804,8.434619,-0.692744,-4.290955,8.127514,-8.263627,7.486215,4.244041,-4.175506,-7.547823,-8.042791,-7.006659,-8.224239,8.767285,-9.195388,-0.478294,6.413240,-1.900026,-0.155446,3.859962,-0.515779,9.115317,-6.723280,3.288116,6.294279,8.714320,6.136789,-6.081089,8.560163,6.772944,5.079706,-5.565056,-0.645009,-8.125850,0.639764,-8.036244], dtype = "float64")#candidate|5509|(468,)|const|float64
var_5510 = relay.var("var_5510", dtype = "float64", shape = (1680,))#candidate|5510|(1680,)|var|float64
call_5508 = relay.TupleGetItem(func_2278_call(relay.reshape(const_5509.astype('float64'), [3, 13, 12]), relay.reshape(var_5510.astype('float64'), [1680,]), ), 0)
call_5511 = relay.TupleGetItem(func_2282_call(relay.reshape(const_5509.astype('float64'), [3, 13, 12]), relay.reshape(var_5510.astype('float64'), [1680,]), ), 0)
output = relay.Tuple([uop_5487,bop_5499,call_5508,const_5509,var_5510,])
output2 = relay.Tuple([uop_5487,bop_5499,call_5511,const_5509,var_5510,])
func_5515 = relay.Function([var_5482,var_5498,var_5510,], output)
mod['func_5515'] = func_5515
mod = relay.transform.InferType()(mod)
var_5516 = relay.var("var_5516", dtype = "float64", shape = (11, 10, 5))#candidate|5516|(11, 10, 5)|var|float64
var_5517 = relay.var("var_5517", dtype = "float64", shape = (11, 10, 5))#candidate|5517|(11, 10, 5)|var|float64
var_5518 = relay.var("var_5518", dtype = "float64", shape = (1680,))#candidate|5518|(1680,)|var|float64
output = func_5515(var_5516,var_5517,var_5518,)
func_5519 = relay.Function([var_5516,var_5517,var_5518,], output)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5526 = relay.var("var_5526", dtype = "float32", shape = (2, 6, 1))#candidate|5526|(2, 6, 1)|var|float32
uop_5527 = relay.sqrt(var_5526.astype('float32')) # shape=(2, 6, 1)
output = uop_5527
output2 = uop_5527
func_5532 = relay.Function([var_5526,], output)
mod['func_5532'] = func_5532
mod = relay.transform.InferType()(mod)
var_5533 = relay.var("var_5533", dtype = "float32", shape = (2, 6, 1))#candidate|5533|(2, 6, 1)|var|float32
output = func_5532(var_5533)
func_5534 = relay.Function([var_5533], output)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5108_call = mod.get_global_var('func_5108')
func_5109_call = mutated_mod.get_global_var('func_5109')
call_5592 = relay.TupleGetItem(func_5108_call(), 0)
call_5593 = relay.TupleGetItem(func_5109_call(), 0)
func_1096_call = mod.get_global_var('func_1096')
func_1099_call = mutated_mod.get_global_var('func_1099')
var_5595 = relay.var("var_5595", dtype = "float64", shape = (1680,))#candidate|5595|(1680,)|var|float64
call_5594 = func_1096_call(relay.reshape(var_5595.astype('float64'), [15, 7, 16]))
call_5596 = func_1096_call(relay.reshape(var_5595.astype('float64'), [15, 7, 16]))
uop_5612 = relay.sin(call_5594.astype('float32')) # shape=(15, 7, 16)
uop_5614 = relay.sin(call_5596.astype('float32')) # shape=(15, 7, 16)
func_5129_call = mod.get_global_var('func_5129')
func_5131_call = mutated_mod.get_global_var('func_5131')
call_5619 = func_5129_call()
call_5620 = func_5129_call()
output = relay.Tuple([call_5592,var_5595,uop_5612,call_5619,])
output2 = relay.Tuple([call_5593,var_5595,uop_5614,call_5620,])
func_5637 = relay.Function([var_5595,], output)
mod['func_5637'] = func_5637
mod = relay.transform.InferType()(mod)
mutated_mod['func_5637'] = func_5637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5638 = relay.var("var_5638", dtype = "float64", shape = (1680,))#candidate|5638|(1680,)|var|float64
func_5637_call = mutated_mod.get_global_var('func_5637')
call_5639 = func_5637_call(var_5638)
output = call_5639
func_5640 = relay.Function([var_5638], output)
mutated_mod['func_5640'] = func_5640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4636_call = mod.get_global_var('func_4636')
func_4638_call = mutated_mod.get_global_var('func_4638')
call_5660 = func_4636_call()
call_5661 = func_4636_call()
output = call_5660
output2 = call_5661
func_5671 = relay.Function([], output)
mod['func_5671'] = func_5671
mod = relay.transform.InferType()(mod)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5671_call = mutated_mod.get_global_var('func_5671')
call_5672 = func_5671_call()
output = call_5672
func_5673 = relay.Function([], output)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5108_call = mod.get_global_var('func_5108')
func_5109_call = mutated_mod.get_global_var('func_5109')
call_5748 = relay.TupleGetItem(func_5108_call(), 0)
call_5749 = relay.TupleGetItem(func_5109_call(), 0)
output = relay.Tuple([call_5748,])
output2 = relay.Tuple([call_5749,])
func_5751 = relay.Function([], output)
mod['func_5751'] = func_5751
mod = relay.transform.InferType()(mod)
mutated_mod['func_5751'] = func_5751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5751_call = mutated_mod.get_global_var('func_5751')
call_5752 = func_5751_call()
output = call_5752
func_5753 = relay.Function([], output)
mutated_mod['func_5753'] = func_5753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4658_call = mod.get_global_var('func_4658')
func_4659_call = mutated_mod.get_global_var('func_4659')
call_5782 = func_4658_call()
call_5783 = func_4658_call()
var_5784 = relay.var("var_5784", dtype = "bool", shape = (9, 3, 8))#candidate|5784|(9, 3, 8)|var|bool
bop_5785 = relay.right_shift(call_5782.astype('int16'), relay.reshape(var_5784.astype('int16'), relay.shape_of(call_5782))) # shape=(9, 3, 8)
bop_5788 = relay.right_shift(call_5783.astype('int16'), relay.reshape(var_5784.astype('int16'), relay.shape_of(call_5783))) # shape=(9, 3, 8)
bop_5792 = relay.multiply(bop_5785.astype('int32'), relay.reshape(call_5782.astype('int32'), relay.shape_of(bop_5785))) # shape=(9, 3, 8)
bop_5795 = relay.multiply(bop_5788.astype('int32'), relay.reshape(call_5783.astype('int32'), relay.shape_of(bop_5788))) # shape=(9, 3, 8)
func_4819_call = mod.get_global_var('func_4819')
func_4824_call = mutated_mod.get_global_var('func_4824')
const_5797 = relay.const([False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True], dtype = "bool")#candidate|5797|(2100,)|const|bool
var_5798 = relay.var("var_5798", dtype = "uint8", shape = (48,))#candidate|5798|(48,)|var|uint8
const_5799 = relay.const([-6.023411,6.467070,9.226689,-4.982239,5.975095,9.990764,4.914758,-9.518660,5.836299,-9.943850,-9.020808,0.981675,-1.665495,0.450115,7.640982,-7.922776,-3.770000,2.124160,1.429333,-4.379499,-8.866136,2.659695,5.750045,-3.825396,-5.443556,-4.239432,9.376625,-3.066099,-6.727822,9.312524,-2.674839,5.868645,-9.464851,-3.925398,-3.341322,-8.756398,-9.945620,4.980886,5.760751,-0.895835,-9.741271,4.842482,-1.304878,2.951071,8.638939,8.556928,-7.211231,-4.196412,9.406558,-2.650455,-4.761930,-8.715449,3.004580,-8.098414,2.209903,-0.271473,1.819800,-1.186644,5.941484,9.337869,-8.252239,8.449603,3.661194,6.849722,-8.317699,9.823933,0.572132,-5.381046,8.933786,0.258163,0.880551,-2.421932,4.952712,6.246197,-3.886755,-9.006871,2.584502,-0.038047,9.981283,4.199284,3.632939,-1.772079,-0.782073,6.361481,3.493154,-5.702242,9.986197,-3.320812,0.735299,7.647948,-2.638921,4.654150,3.901498,-9.419802,0.623639,7.447009,-8.143733,3.708688,-0.840033,-1.750234,-4.445442,-2.658524,0.863803,-9.244174,-7.762819,9.242788,8.263472,-5.269443,-2.758325,-5.766011,-6.652402,-4.443188,9.142757,4.830578,8.447334,-4.266499,6.118902,8.935272,3.002749,4.479379,8.596689,-8.524277,3.117437,-8.428294,7.172352,-6.072824,-0.106551,9.987711,-6.981065,5.522509,-0.071443,4.835043,-4.713745,4.452416,4.387146,-5.061716,5.612250,3.431006,5.357470,-7.017974,-3.178551,8.585653,8.088634,2.273251,7.831876,3.851696,-7.701315,0.274368,6.379105,-7.637730,-2.299328,-4.864229,8.324650,-1.997845,4.081430,8.938381,5.310564,-0.789426,2.864839,6.156379,-9.512388,2.776473,1.949057,3.531576,9.847533,2.786652,-2.023852,3.895612,-4.683093,8.695910,-5.264045,5.358572,9.792831,-1.115534,4.910815,2.038220,5.475552,-9.843054,-0.339913,1.865838,8.867107,4.262482,-2.167509,5.017699,-2.020991,-6.293003,-8.905229,7.204075,3.403844,-0.896403,9.955558,-7.306877,-0.023592,4.024269,5.348471,-1.887890,-9.500796,-6.979770,-9.459156,6.525062,-3.970832,1.657429,3.012015,-5.704384,1.816836,-3.930136,6.384303,8.240607,2.739064,-9.613947,0.064549,-3.090941,-4.392076,2.226042,-2.879206,8.526501,-6.628870,1.390628,1.018030,0.782234,5.336097,2.928618,-1.163089,-1.835469,-1.000913,-6.169646,-1.988191,9.310463,-9.509522,8.858360,1.777863,3.733392,-3.667329,7.678511,8.463212,-6.758621,-9.312906,2.418720,-8.189007,6.659164,-8.213487,-7.062921,-7.104925,2.290819,-9.102955,9.521888,4.160901,-1.010199,-2.838201,-1.807387,-9.707366,-6.226002,-7.545339,2.277817,2.566830,4.759434,5.790526,-6.767852,4.385738,-1.921840], dtype = "float32")#candidate|5799|(260,)|const|float32
call_5796 = relay.TupleGetItem(func_4819_call(relay.reshape(const_5797.astype('bool'), [2100,]), relay.reshape(var_5798.astype('uint8'), [48,]), relay.reshape(const_5799.astype('float32'), [260,]), relay.reshape(const_5797.astype('bool'), [2100,]), ), 6)
call_5800 = relay.TupleGetItem(func_4824_call(relay.reshape(const_5797.astype('bool'), [2100,]), relay.reshape(var_5798.astype('uint8'), [48,]), relay.reshape(const_5799.astype('float32'), [260,]), relay.reshape(const_5797.astype('bool'), [2100,]), ), 6)
func_4606_call = mod.get_global_var('func_4606')
func_4610_call = mutated_mod.get_global_var('func_4610')
var_5805 = relay.var("var_5805", dtype = "uint64", shape = (560,))#candidate|5805|(560,)|var|uint64
var_5806 = relay.var("var_5806", dtype = "float64", shape = ())#candidate|5806|()|var|float64
call_5804 = relay.TupleGetItem(func_4606_call(relay.reshape(const_5797.astype('bool'), [30, 70]), relay.reshape(var_5805.astype('uint64'), [40, 14]), relay.reshape(var_5806.astype('float64'), []), ), 2)
call_5807 = relay.TupleGetItem(func_4610_call(relay.reshape(const_5797.astype('bool'), [30, 70]), relay.reshape(var_5805.astype('uint64'), [40, 14]), relay.reshape(var_5806.astype('float64'), []), ), 2)
func_5671_call = mod.get_global_var('func_5671')
func_5673_call = mutated_mod.get_global_var('func_5673')
call_5809 = func_5671_call()
call_5810 = func_5671_call()
func_1009_call = mod.get_global_var('func_1009')
func_1012_call = mutated_mod.get_global_var('func_1012')
var_5812 = relay.var("var_5812", dtype = "bool", shape = (264, 1))#candidate|5812|(264, 1)|var|bool
call_5811 = relay.TupleGetItem(func_1009_call(relay.reshape(var_5812.astype('bool'), [6, 11, 4]), relay.reshape(var_5812.astype('bool'), [6, 11, 4]), ), 0)
call_5813 = relay.TupleGetItem(func_1012_call(relay.reshape(var_5812.astype('bool'), [6, 11, 4]), relay.reshape(var_5812.astype('bool'), [6, 11, 4]), ), 0)
func_5230_call = mod.get_global_var('func_5230')
func_5232_call = mutated_mod.get_global_var('func_5232')
call_5819 = func_5230_call()
call_5820 = func_5230_call()
bop_5828 = relay.less_equal(call_5782.astype('bool'), var_5806.astype('bool')) # shape=(9, 3, 8)
bop_5831 = relay.less_equal(call_5783.astype('bool'), var_5806.astype('bool')) # shape=(9, 3, 8)
bop_5832 = relay.subtract(var_5806.astype('uint32'), call_5809.astype('uint32')) # shape=(14, 12, 2)
bop_5835 = relay.subtract(var_5806.astype('uint32'), call_5810.astype('uint32')) # shape=(14, 12, 2)
func_1617_call = mod.get_global_var('func_1617')
func_1620_call = mutated_mod.get_global_var('func_1620')
var_5837 = relay.var("var_5837", dtype = "float64", shape = (182,))#candidate|5837|(182,)|var|float64
call_5836 = func_1617_call(relay.reshape(var_5837.astype('float64'), [2, 13, 7]))
call_5838 = func_1617_call(relay.reshape(var_5837.astype('float64'), [2, 13, 7]))
uop_5841 = relay.asin(var_5812.astype('float32')) # shape=(264, 1)
uop_5846 = relay.log10(uop_5841.astype('float64')) # shape=(264, 1)
output = relay.Tuple([bop_5792,call_5796,const_5797,var_5798,const_5799,call_5804,var_5805,call_5811,call_5819,bop_5828,bop_5832,call_5836,var_5837,uop_5846,])
output2 = relay.Tuple([bop_5795,call_5800,const_5797,var_5798,const_5799,call_5807,var_5805,call_5813,call_5820,bop_5831,bop_5835,call_5838,var_5837,uop_5846,])
F = relay.Function([var_5784,var_5798,var_5805,var_5806,var_5812,var_5837,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5784,var_5798,var_5805,var_5806,var_5812,var_5837,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
